perf powerpc: Add encodings to represent data based on newer composite PERF_MEM_LVLNUM* fields

The code represent data coming from L1/L2/L3 cache hits based on
PERF_MEM_LVL_* namespace, which is in the process of deprecation in the
favour of newer composite PERF_MEM_{LVLNUM_,REMOTE_,SNOOPX_,HOPS_}
fields.

Add data source encodings to represent L1/L2/L3 cache hits based on
newer composite PERF_MEM_{LVLNUM_,REMOTE_,SNOOPX_,HOPS_} fields for
power10 and older platforms

Result in power9 system without patch changes:

  localhost:# ./perf mem report --sort="mem,sym,dso" --stdio
  # Overhead  Samples  Memory access  Symbol                             Shared Object
  # ........  .......  .............  .................................  ................
  #
      29.51%        1  L2 hit         [k] perf_event_exec                [kernel.vmlinux]
      27.05%        1  L1 hit         [k] perf_ctx_unlock                [kernel.vmlinux]
      13.93%        1  L1 hit         [k] vtime_delta                    [kernel.vmlinux]
      13.11%        1  L1 hit         [k] prepend_path.isra.11           [kernel.vmlinux]
       8.20%        1  L1 hit         [.] 00000038.plt_call.__GI_strlen  libc-2.28.so
       8.20%        1  L1 hit         [k] perf_event_interrupt           [kernel.vmlinux]

Result in power9 system with patch changes:

  localhost:# ./perf mem report --sort="mem,sym,dso" --stdio
  # Overhead  Samples  Memory access  Symbol                      Shared Object
  # ........  .......  .............  ..........................  ................
  #
      36.63%        1  L2 or L2 hit   [k] perf_event_exec         [kernel.vmlinux]
      25.50%        1  L1 or L1 hit   [k] vtime_delta             [kernel.vmlinux]
      13.12%        1  L1 or L1 hit   [k] unmap_region            [kernel.vmlinux]
      12.62%        1  L1 or L1 hit   [k] perf_sample_event_took  [kernel.vmlinux]
       6.93%        1  L1 or L1 hit   [k] perf_ctx_unlock         [kernel.vmlinux]
       5.20%        1  L1 or L1 hit   [.] __memcpy_power7         libc-2.28.so

Reviewed-by: Madhavan Srinivasan <maddy@linux.ibm.com>
Signed-off-by: Kajol Jain <kjain@linux.ibm.com>
Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Cc: Alexei Starovoitov <ast@kernel.org>
Cc: Andi Kleen <ak@linux.intel.com>
Cc: Athira Jajeev <atrajeev@linux.vnet.ibm.com>
Cc: Daniel Borkmann <daniel@iogearbox.net>
Cc: Jin Yao <yao.jin@linux.intel.com>
Cc: Jiri Olsa <jolsa@kernel.org>
Cc: Kan Liang <kan.liang@linux.intel.com>
Cc: Mark Rutland <mark.rutland@arm.com>
Cc: Michael Ellerman <mpe@ellerman.id.au>
Cc: Nageswara R Sastry <rnsastry@linux.ibm.com>
Cc: Namhyung Kim <namhyung@kernel.org>
Cc: Paul Mackerras <paulus@samba.org>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Song Liu <songliubraving@fb.com>
Cc: linuxppc-dev@lists.ozlabs.org
Link: http://lore.kernel.org/lkml/20211206091749.87585-4-kjain@linux.ibm.com
Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

