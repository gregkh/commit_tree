m68k: Add __NR_syscalls along with NR_syscalls

NR_syscalls macro holds the number of system call
exist in m68k architecture. We have to change the
value of NR_syscalls, if we add or delete a system
call.

One of the patch in this patch series has a script
which will generate a uapi header based on syscall-
.tbl file. The syscall.tbl file contains the total
number of system calls information. So we have two
option to update NR_syscalls value.

1. Update NR_syscalls in asm/unistd.h manually by
   counting the no.of system calls. No need to up-
   date NR_syscalls until we either add a new sys-
   tem call or delete existing system call.

2. We can keep this feature it above mentioned sc-
   ript, that will count the number of syscalls and
   keep it in a generated file. In this case we
   don't need to explicitly update NR_syscalls in
   asm/unistd.h file.

The 2nd option will be the recommended one. For that,
I added the __NR_syscalls macro in uapi/asm/unistd.h
along with NR_syscalls asm/unistd.h. The macro __NR-
_syscalls also added for making the name convention
same across all architecture. While __NR_syscalls
isn't strictly part of the uapi, having it as part
of the generated header to simplifies the implement-
ation. We also need to enclose this macro with #ifdef
__KERNEL__ to avoid side effects.

Signed-off-by: Firoz Khan <firoz.khan@linaro.org>
Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>

