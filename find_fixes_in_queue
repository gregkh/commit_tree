#!/bin/bash
# SPDX-License-Identifier: GPL-2.0
#
# Copyright 2020 Greg Kroah-Hartman <gregkh@linuxfoundation.org>
#
#

STABLE_TREE="/home/gregkh/linux/stable/linux-stable"
STABLE_QUEUE="/home/gregkh/linux/stable/stable-queue/"

REAL_SCRIPT=$(realpath -e "${BASH_SOURCE[0]}")
SCRIPT_TOP="${SCRIPT_TOP:-$(dirname "${REAL_SCRIPT}")}"

source "${SCRIPT_TOP}"/lib/common

TMPDIR="/home/gregkh/tmp"
PREFIX="$(basename "${REAL_SCRIPT}")_"
TMP_PREFIX="${TMPDIR}/${PREFIX}"

GEN_CID="${SCRIPT_TOP}/generate_cid.sh"
ID_FIXED_IN="${SCRIPT_TOP}/id_fixed_in"

usage()
{
        echo "error, kernel version not found"
        echo "usage:"
        echo "  $0 KERNEL_VERSION"
        exit 2
}

save_commit()
{
	local commit version mbox
	commit=$1
	version=$2
	mbox=$3

	#log "${txtylw}in ${version} release, SAVING!${txtrst}"
	git show --pretty=email "${commit}" | sed -e "s/\[PATCH\]/\[PATCH ${version}\]/" >> "${mbox}"
}

KERNEL_VERSION=$1

if [ "${KERNEL_VERSION}" == "" ] ; then
        usage
fi

MBOX=$(mktemp ${TMP_PREFIX}mbox.XXXXXX) || exit 1

cd "${STABLE_QUEUE}/queue-${KERNEL_VERSION}/"

for patch in *.patch ; do
	cd "${STABLE_QUEUE}/queue-${KERNEL_VERSION}/"
	upstream=$(cat ${patch} | awk '{if(NR>1)print}' | grep -E -o '[0-9a-f]{40}' | head -n 1)
	if [ "${upstream}" == "" ] ; then
		continue
	fi

	# shorten the commit
	cd ${STABLE_TREE}
	commit=$(git show -s --abbrev-commit --abbrev=12 --pretty=format:"%h" "${upstream}")
	if [ "${commit}" == "" ] ; then
		log "${txtred}commit ${upstream} not found!${txtrst}"
		continue
	fi

	cd ${STABLE_TREE}
	if [ "${commit}" == "upstream" ] ; then
		continue
	fi
	logn "${txtcyn}looking at ${txtgrn}${commit}${txtrst}	"
	result=$(${ID_FIXED_IN} ${commit})
	retval=$?
	if [ $retval -ne 0 ] ; then
		log "${txtpur}no fixes${txtrst}"
		continue
	fi
	for line in ${result}; do
		line_array=(${line//:/ })
		sha1=${line_array[0]}
		kernel_version=${line_array[1]}
		commit_id=${line_array[2]}
		logn "${txtred}fix found in ${txtylw}${kernel_version} "
		save_commit "${commit_id}" "${kernel_version}" "${MBOX}"
	done
	log ""
done

echo "# commits are in ${MBOX}"
echo "mutt -f ${MBOX}"
