#!/bin/bash
# SPDX-License-Identifier: GPL-2.0
#
# Copyright 2020 Greg Kroah-Hartman <gregkh@linuxfoundation.org>
#
# init a git tree full of just the changelog entries for that specific kernel release
#

HOME="/home/gregkh/linux"
TMPDIR="/home/gregkh/tmp"
PREFIX="fixes_search_"

KERNEL_DIR="/home/gregkh/linux/gregkh"


txtund=$(tput sgr 0 1)    # Underline
txtbld=$(tput bold)       # Bold
txtred=$(tput setaf 1)    # Red
txtgrn=$(tput setaf 2)    # Green
txtylw=$(tput setaf 3)    # Yellow
txtblu=$(tput setaf 4)    # Blue
txtpur=$(tput setaf 5)    # Purple
txtcyn=$(tput setaf 6)    # Cyan
txtwht=$(tput setaf 7)    # White
txtrst=$(tput sgr0)       # Text reset





DEBUG=1
i=1
spin()
{
	sp="/-\|"
	printf "\b${sp:i++%${#sp}:1}"
}

logn()
{
	if [[ ${DEBUG} -ge 1 ]] ; then
		echo -n "$1"
	else
		spin
	fi
}
log()
{
	if [[ ${DEBUG} -ge 1 ]] ; then
		echo "$1"
	else
		spin
	fi
}
dbg()
{
	if [[ ${DEBUG} -ge 2 ]] ; then
		log "$1"
	fi
}


usage()
{
	echo "version numbers not found"
	echo "usage:"
	echo "	$0 OLD_KERNEL NEW_KERNEL"
	exit 1
}

OLD_VERSION=$1
NEW_VERSION=$2


if [ "${OLD_VERSION}" == "" ] ; then
	usage
fi

if [ "${NEW_VERSION}" == "" ] ; then
	usage
fi

# test if version is already created
if [ -d "${NEW_VERSION}/" ] ; then
	echo "${NEW_VERSION} files already created"
	exit 1
fi

mkdir "${NEW_VERSION}"
pwd=$(pwd)

logn "${txtgrn}Creating directory for kernel version ${txtylw}${NEW_VERSION}${txtrst}   "
cd "${KERNEL_DIR}"
for commit in $(git rev-list --reverse --no-merges v${OLD_VERSION}..v${NEW_VERSION}); do
	#log "${txtgrn}${commit}${txtrst}	"
	spin
	git log -1 --format='%B' "${commit}" > "${pwd}"/"${NEW_VERSION}"/${commit}
done
log ""

cd "${pwd}"

