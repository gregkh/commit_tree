#!/bin/bash
# SPDX-License-Identifier: GPL-2.0
#
# Copyright 2020 Greg Kroah-Hartman <gregkh@linuxfoundation.org>
#
# Given a git commit id, does any commit fix this patch as well?
#


#HOME="/home/gregkh/linux"
#TMPDIR="/home/gregkh/tmp"
#PREFIX="fixes_search_"

KERNEL_DIR="/home/gregkh/linux/gregkh"
COMMIT_TREE_DIR="/home/gregkh/linux/stable/commit_tree"


txtund=$(tput sgr 0 1)    # Underline
txtbld=$(tput bold)       # Bold
txtred=$(tput setaf 1)    # Red
txtgrn=$(tput setaf 2)    # Green
txtylw=$(tput setaf 3)    # Yellow
txtblu=$(tput setaf 4)    # Blue
txtpur=$(tput setaf 5)    # Purple
txtcyn=$(tput setaf 6)    # Cyan
txtwht=$(tput setaf 7)    # White
txtrst=$(tput sgr0)       # Text reset



DEBUG=1
i=1
spin()
{
	sp="/-\|"
	printf "\b${sp:i++%${#sp}:1}"
}

logn()
{
	if [[ ${DEBUG} -ge 1 ]] ; then
		echo -n "$1"
	else
		spin
	fi
}
log()
{
	if [[ ${DEBUG} -ge 1 ]] ; then
		echo "$1"
	else
		spin
	fi
}
dbg()
{
	if [[ ${DEBUG} -ge 2 ]] ; then
		log "$1"
	fi
}


usage()
{
	echo "sha1 number not found"
	echo "usage:"
	echo "	$0 SHA1"
	exit 1
}

sha1=$1

if [ "${sha1}" == "" ] ; then
	usage
fi

# turn the sha1 into a 12 digit number only (shorten or lengthen it)
cd "${KERNEL_DIR}"
unified_sha1=$(git show -s --abbrev-commit --abbrev=12 --pretty=format:"%h" "${sha1}" 2>/dev/null)
if [ "${unified_sha1}" = "" ] ; then
	log "${txtylw}${sha1}${txtred} not found in upstream repo${txtrst}"
	exit 2
fi

sha1=${unified_sha1}

cd "${COMMIT_TREE_DIR}"

found=0
for commit in $(git grep -l --threads=3 "${sha1}"); do
#	logn "${txtylw}${sha1}${txtgrn} found in ${txtred}${commit}	"
	kernel_ver=$(echo "${commit}" | cut -f 1 -d '/')
	commit_id=$(echo "${commit}" | cut -f 2 -d '/')

#	log "${txtblu}${kernel_ver}	${commit_id}"

	logn "${txtcyn}${sha1}${txtgrn} fixed in kernel "
	logn "${txtpur}${kernel_ver}${txtgrn} in commit "
	log  "${txtred}${commit_id}${txtrst}"
	found=1
done

if [ "${found}" = "1" ] ; then
	exit
fi

dbg "${txtylw}${sha1}${txtgrn} no fixes found${txtrst}"
exit 1
