commit 3622426cc93ab5bc75fa9cf2e897441dff894c34
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Oct 10 08:53:23 2018 +0200

    Linux 4.9.132

commit 28e689148eee05f509094577bf056e1d258f9c6b
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Thu Sep 13 21:16:20 2018 -0400

    dm thin metadata: fix __udivdi3 undefined on 32-bit
    
    commit 013ad043906b2befd4a9bfb06219ed9fedd92716 upstream.
    
    sector_div() is only viable for use with sector_t.
    dm_block_t is typedef'd to uint64_t -- so use div_u64() instead.
    
    Fixes: 3ab918281 ("dm thin metadata: try to avoid ever aborting transactions")
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29b4641c9f7b2ab965ae650ab587a36218ce3ed6
Author: Ashish Samant <ashish.samant@oracle.com>
Date:   Fri Oct 5 15:52:15 2018 -0700

    ocfs2: fix locking for res->tracking and dlm->tracking_list
    
    commit cbe355f57c8074bc4f452e5b6e35509044c6fa23 upstream.
    
    In dlm_init_lockres() we access and modify res->tracking and
    dlm->tracking_list without holding dlm->track_lock.  This can cause list
    corruptions and can end up in kernel panic.
    
    Fix this by locking res->tracking and dlm->tracking_list with
    dlm->track_lock instead of dlm->spinlock.
    
    Link: http://lkml.kernel.org/r/1529951192-4686-1-git-send-email-ashish.samant@oracle.com
    Signed-off-by: Ashish Samant <ashish.samant@oracle.com>
    Reviewed-by: Changwei Ge <ge.changwei@h3c.com>
    Acked-by: Joseph Qi <jiangqi903@gmail.com>
    Acked-by: Jun Piao <piaojun@huawei.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <ge.changwei@h3c.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c5dc3f313cf1cb1645a0e832f51c1ba79aee934
Author: Jann Horn <jannh@google.com>
Date:   Fri Oct 5 15:51:58 2018 -0700

    proc: restrict kernel stack dumps to root
    
    commit f8a00cef17206ecd1b30d3d9f99e10d9fa707aa7 upstream.
    
    Currently, you can use /proc/self/task/*/stack to cause a stack walk on
    a task you control while it is running on another CPU.  That means that
    the stack can change under the stack walker.  The stack walker does
    have guards against going completely off the rails and into random
    kernel memory, but it can interpret random data from your kernel stack
    as instruction pointers and stack pointers.  This can cause exposure of
    kernel stack contents to userspace.
    
    Restrict the ability to inspect kernel stacks of arbitrary tasks to root
    in order to prevent a local attacker from exploiting racy stack unwinding
    to leak kernel task stack contents.  See the added comment for a longer
    rationale.
    
    There don't seem to be any users of this userspace API that can't
    gracefully bail out if reading from the file fails.  Therefore, I believe
    that this change is unlikely to break things.  In the case that this patch
    does end up needing a revert, the next-best solution might be to fake a
    single-entry stack based on wchan.
    
    Link: http://lkml.kernel.org/r/20180927153316.200286-1-jannh@google.com
    Fixes: 2ec220e27f50 ("proc: add /proc/*/stack")
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Ken Chen <kenchen@google.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H . Peter Anvin" <hpa@zytor.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e88ca677f3251af14d2f492f42de2359c1d405a8
Author: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
Date:   Thu Sep 13 15:37:04 2018 +0200

    gpiolib: Free the last requested descriptor
    
    commit 19a4fbffc94e41abaa2a623a25ce2641d69eccf0 upstream.
    
    The current code only frees N-1 gpios if an error occurs during
    gpiod_set_transitory, gpiod_direction_output or gpiod_direction_input.
    Leading to gpios that cannot be used by userspace nor other drivers.
    
    Cc: Timur Tabi <timur@codeaurora.org>
    Cc: stable@vger.kernel.org
    Fixes: ab3dbcf78f60f46d ("gpioib: do not free unrequested descriptors)
    Reported-by: Jan Lorenzen <jl@newtec.dk>
    Reported-by: Jim Paris <jim@jtan.com>
    Signed-off-by: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d49c7bb74ac6a2c651ab7fccc989800cb889ef03
Author: Leonard Crestez <leonard.crestez@nxp.com>
Date:   Fri Sep 21 18:03:18 2018 +0300

    crypto: mxs-dcp - Fix wait logic on chan threads
    
    commit d80771c08363ad7fbf0f56f5301e7ca65065c582 upstream.
    
    When compiling with CONFIG_DEBUG_ATOMIC_SLEEP=y the mxs-dcp driver
    prints warnings such as:
    
    WARNING: CPU: 0 PID: 120 at kernel/sched/core.c:7736 __might_sleep+0x98/0x9c
    do not call blocking ops when !TASK_RUNNING; state=1 set at [<8081978c>] dcp_chan_thread_sha+0x3c/0x2ec
    
    The problem is that blocking ops will manipulate current->state
    themselves so it is not allowed to call them between
    set_current_state(TASK_INTERRUPTIBLE) and schedule().
    
    Fix this by converting the per-chan mutex to a spinlock (it only
    protects tiny list ops anyway) and rearranging the wait logic so that
    callbacks are called current->state as TASK_RUNNING. Those callbacks
    will indeed call blocking ops themselves so this is required.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ba794f9cc1d02e52386eb8de9a0f3e54ee697d7
Author: Waiman Long <longman@redhat.com>
Date:   Sat Sep 22 20:41:55 2018 -0400

    crypto: qat - Fix KASAN stack-out-of-bounds bug in adf_probe()
    
    commit ba439a6cbfa2936a6713f64cb499de7943673fe3 upstream.
    
    The following KASAN warning was printed when booting a 64-bit kernel
    on some systems with Intel CPUs:
    
    [   44.512826] ==================================================================
    [   44.520165] BUG: KASAN: stack-out-of-bounds in find_first_bit+0xb0/0xc0
    [   44.526786] Read of size 8 at addr ffff88041e02fc50 by task kworker/0:2/124
    
    [   44.535253] CPU: 0 PID: 124 Comm: kworker/0:2 Tainted: G               X --------- ---  4.18.0-12.el8.x86_64+debug #1
    [   44.545858] Hardware name: Intel Corporation PURLEY/PURLEY, BIOS BKVDTRL1.86B.0005.D08.1712070559 12/07/2017
    [   44.555682] Workqueue: events work_for_cpu_fn
    [   44.560043] Call Trace:
    [   44.562502]  dump_stack+0x9a/0xe9
    [   44.565832]  print_address_description+0x65/0x22e
    [   44.570683]  ? find_first_bit+0xb0/0xc0
    [   44.570689]  kasan_report.cold.6+0x92/0x19f
    [   44.578726]  find_first_bit+0xb0/0xc0
    [   44.578737]  adf_probe+0x9eb/0x19a0 [qat_c62x]
    [   44.578751]  ? adf_remove+0x110/0x110 [qat_c62x]
    [   44.591490]  ? mark_held_locks+0xc8/0x140
    [   44.591498]  ? _raw_spin_unlock+0x30/0x30
    [   44.591505]  ? trace_hardirqs_on_caller+0x381/0x570
    [   44.604418]  ? adf_remove+0x110/0x110 [qat_c62x]
    [   44.604427]  local_pci_probe+0xd4/0x180
    [   44.604432]  ? pci_device_shutdown+0x110/0x110
    [   44.617386]  work_for_cpu_fn+0x51/0xa0
    [   44.621145]  process_one_work+0x8fe/0x16e0
    [   44.625263]  ? pwq_dec_nr_in_flight+0x2d0/0x2d0
    [   44.629799]  ? lock_acquire+0x14c/0x400
    [   44.633645]  ? move_linked_works+0x12e/0x2a0
    [   44.637928]  worker_thread+0x536/0xb50
    [   44.641690]  ? __kthread_parkme+0xb6/0x180
    [   44.645796]  ? process_one_work+0x16e0/0x16e0
    [   44.650160]  kthread+0x30c/0x3d0
    [   44.653400]  ? kthread_create_worker_on_cpu+0xc0/0xc0
    [   44.658457]  ret_from_fork+0x3a/0x50
    
    [   44.663557] The buggy address belongs to the page:
    [   44.668350] page:ffffea0010780bc0 count:0 mapcount:0 mapping:0000000000000000 index:0x0
    [   44.676356] flags: 0x17ffffc0000000()
    [   44.680023] raw: 0017ffffc0000000 ffffea0010780bc8 ffffea0010780bc8 0000000000000000
    [   44.687769] raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000
    [   44.695510] page dumped because: kasan: bad access detected
    
    [   44.702578] Memory state around the buggy address:
    [   44.707372]  ffff88041e02fb00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   44.714593]  ffff88041e02fb80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   44.721810] >ffff88041e02fc00: 00 00 00 00 00 00 f1 f1 f1 f1 04 f2 f2 f2 f2 f2
    [   44.729028]                                                  ^
    [   44.734864]  ffff88041e02fc80: f2 f2 00 00 00 00 f3 f3 f3 f3 00 00 00 00 00 00
    [   44.742082]  ffff88041e02fd00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   44.749299] ==================================================================
    
    Looking into the code:
    
      int ret, bar_mask;
        :
      for_each_set_bit(bar_nr, (const unsigned long *)&bar_mask,
    
    It is casting a 32-bit integer pointer to a 64-bit unsigned long
    pointer. There are two problems here. First, the 32-bit pointer address
    may not be 64-bit aligned. Secondly, it is accessing an extra 4 bytes.
    
    This is fixed by changing the bar_mask type to unsigned long.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 685a8f97735cf66f280b2658d27c9d6c85c229d7
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Oct 4 11:39:42 2018 +0800

    ALSA: hda/realtek - Cannot adjust speaker's volume on Dell XPS 27 7760
    
    commit 709ae62e8e6d9ac4df7dadb3b8ae432675c45ef9 upstream.
    
    The issue is the same as commit dd9aa335c880 ("ALSA: hda/realtek - Can't
    adjust speaker's volume on a Dell AIO"), the output requires to connect
    to a node with Amp-out capability.
    
    Applying the same fixup ALC298_FIXUP_SPK_VOLUME can fix the issue.
    
    BugLink: https://bugs.launchpad.net/bugs/1775068
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 575399119b1123fd4e8995fd63716fc8371b7390
Author: Aurelien Aptel <aaptel@suse.com>
Date:   Thu May 17 16:35:07 2018 +0200

    smb2: fix missing files in root share directory listing
    
    commit 0595751f267994c3c7027377058e4185b3a28e75 upstream.
    
    When mounting a Windows share that is the root of a drive (eg. C$)
    the server does not return . and .. directory entries. This results in
    the smb2 code path erroneously skipping the 2 first entries.
    
    Pseudo-code of the readdir() code path:
    
    cifs_readdir(struct file, struct dir_context)
        initiate_cifs_search            <-- if no reponse cached yet
            server->ops->query_dir_first
    
        dir_emit_dots
            dir_emit                    <-- adds "." and ".." if we're at pos=0
    
        find_cifs_entry
            initiate_cifs_search        <-- if pos < start of current response
                                             (restart search)
            server->ops->query_dir_next <-- if pos > end of current response
                                             (fetch next search res)
    
        for(...)                        <-- loops over cur response entries
                                              starting at pos
            cifs_filldir                <-- skip . and .., emit entry
                cifs_fill_dirent
                dir_emit
            pos++
    
    A) dir_emit_dots() always adds . & ..
       and sets the current dir pos to 2 (0 and 1 are done).
    
    Therefore we always want the index_to_find to be 2 regardless of if
    the response has . and ..
    
    B) smb1 code initializes index_of_last_entry with a +2 offset
    
      in cifssmb.c CIFSFindFirst():
                    psrch_inf->index_of_last_entry = 2 /* skip . and .. */ +
                            psrch_inf->entries_in_buffer;
    
    Later in find_cifs_entry() we want to find the next dir entry at pos=2
    as a result of (A)
    
            first_entry_in_buffer = cfile->srch_inf.index_of_last_entry -
                                            cfile->srch_inf.entries_in_buffer;
    
    This var is the dir pos that the first entry in the buffer will
    have therefore it must be 2 in the first call.
    
    If we don't offset index_of_last_entry by 2 (like in (B)),
    first_entry_in_buffer=0 but we were instructed to get pos=2 so this
    code in find_cifs_entry() skips the 2 first which is ok for non-root
    shares, as it skips . and .. from the response but is not ok for root
    shares where the 2 first are actual files
    
                    pos_in_buf = index_to_find - first_entry_in_buffer;
                    // pos_in_buf=2
                    // we skip 2 first response entries :(
                    for (i = 0; (i < (pos_in_buf)) && (cur_ent != NULL); i++) {
                            /* go entry by entry figuring out which is first */
                            cur_ent = nxt_dir_entry(cur_ent, end_of_smb,
                                                    cfile->srch_inf.info_level);
                    }
    
    C) cifs_filldir() skips . and .. so we can safely ignore them for now.
    
    Sample program:
    
    int main(int argc, char **argv)
    {
            const char *path = argc >= 2 ? argv[1] : ".";
            DIR *dh;
            struct dirent *de;
    
            printf("listing path <%s>\n", path);
            dh = opendir(path);
            if (!dh) {
                    printf("opendir error %d\n", errno);
                    return 1;
            }
    
            while (1) {
                    de = readdir(dh);
                    if (!de) {
                            if (errno) {
                                    printf("readdir error %d\n", errno);
                                    return 1;
                            }
                            printf("end of listing\n");
                            break;
                    }
                    printf("off=%lu <%s>\n", de->d_off, de->d_name);
            }
    
            return 0;
    }
    
    Before the fix with SMB1 on root shares:
    
    <.>            off=1
    <..>           off=2
    <$Recycle.Bin> off=3
    <bootmgr>      off=4
    
    and on non-root shares:
    
    <.>    off=1
    <..>   off=4  <-- after adding .., the offsets jumps to +2 because
    <2536> off=5       we skipped . and .. from response buffer (C)
    <411>  off=6       but still incremented pos
    <file> off=7
    <fsx>  off=8
    
    Therefore the fix for smb2 is to mimic smb1 behaviour and offset the
    index_of_last_entry by 2.
    
    Test results comparing smb1 and smb2 before/after the fix on root
    share, non-root shares and on large directories (ie. multi-response
    dir listing):
    
    PRE FIX
    =======
    pre-1-root VS pre-2-root:
            ERR pre-2-root is missing [bootmgr, $Recycle.Bin]
    pre-1-nonroot VS pre-2-nonroot:
            OK~ same files, same order, different offsets
    pre-1-nonroot-large VS pre-2-nonroot-large:
            OK~ same files, same order, different offsets
    
    POST FIX
    ========
    post-1-root VS post-2-root:
            OK same files, same order, same offsets
    post-1-nonroot VS post-2-nonroot:
            OK same files, same order, same offsets
    post-1-nonroot-large VS post-2-nonroot-large:
            OK same files, same order, same offsets
    
    REGRESSION?
    ===========
    pre-1-root VS post-1-root:
            OK same files, same order, same offsets
    pre-1-nonroot VS post-1-nonroot:
            OK same files, same order, same offsets
    
    BugLink: https://bugzilla.samba.org/show_bug.cgi?id=13107
    Signed-off-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Paulo Alcantara <palcantara@suse.deR>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e9817c6ee3fb22061cd5864e844c4b3b7c8545c
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Tue Sep 18 00:36:36 2018 -0400

    sysfs: Do not return POSIX ACL xattrs via listxattr
    
    commit ffc4c92227db5699493e43eb140b4cb5904c30ff upstream.
    
    Commit 786534b92f3c introduced a regression that caused listxattr to
    return the POSIX ACL attribute names even though sysfs doesn't support
    POSIX ACLs.  This happens because simple_xattr_list checks for NULL
    i_acl / i_default_acl, but inode_init_always initializes those fields
    to ACL_NOT_CACHED ((void *)-1).  For example:
        $ getfattr -m- -d /sys
        /sys: system.posix_acl_access: Operation not supported
        /sys: system.posix_acl_default: Operation not supported
    Fix this in simple_xattr_list by checking if the filesystem supports POSIX ACLs.
    
    Fixes: 786534b92f3c ("tmpfs: listxattr should include POSIX ACL xattrs")
    Reported-by:  Marc Aurèle La France <tsi@tuyoix.net>
    Tested-by: Marc Aurèle La France <tsi@tuyoix.net>
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Cc: stable@vger.kernel.org # v4.5+
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f9787c0655141db6d70b557ca8c769621c71a18
Author: Josh Abraham <j.abraham1776@gmail.com>
Date:   Wed Sep 12 15:13:54 2018 -1000

    xen: fix GCC warning and remove duplicate EVTCHN_ROW/EVTCHN_COL usage
    
    [ Upstream commit 4dca864b59dd150a221730775e2f21f49779c135 ]
    
    This patch removes duplicate macro useage in events_base.c.
    
    It also fixes gcc warning:
    variable ‘col’ set but not used [-Wunused-but-set-variable]
    
    Signed-off-by: Joshua Abraham <j.abraham1776@gmail.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a571f897aa59411885be276bde1d7af6eb1d2475
Author: Olaf Hering <olaf@aepfle.de>
Date:   Fri Sep 7 16:31:35 2018 +0200

    xen: avoid crash in disable_hotplug_cpu
    
    [ Upstream commit 3366cdb6d350d95466ee430ac50f3c8415ca8f46 ]
    
    The command 'xl vcpu-set 0 0', issued in dom0, will crash dom0:
    
    BUG: unable to handle kernel NULL pointer dereference at 00000000000002d8
    PGD 0 P4D 0
    Oops: 0000 [#1] PREEMPT SMP NOPTI
    CPU: 7 PID: 65 Comm: xenwatch Not tainted 4.19.0-rc2-1.ga9462db-default #1 openSUSE Tumbleweed (unreleased)
    Hardware name: Intel Corporation S5520UR/S5520UR, BIOS S5500.86B.01.00.0050.050620101605 05/06/2010
    RIP: e030:device_offline+0x9/0xb0
    Code: 77 24 00 e9 ce fe ff ff 48 8b 13 e9 68 ff ff ff 48 8b 13 e9 29 ff ff ff 48 8b 13 e9 ea fe ff ff 90 66 66 66 66 90 41 54 55 53 <f6> 87 d8 02 00 00 01 0f 85 88 00 00 00 48 c7 c2 20 09 60 81 31 f6
    RSP: e02b:ffffc90040f27e80 EFLAGS: 00010203
    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    RDX: ffff8801f3800000 RSI: ffffc90040f27e70 RDI: 0000000000000000
    RBP: 0000000000000000 R08: ffffffff820e47b3 R09: 0000000000000000
    R10: 0000000000007ff0 R11: 0000000000000000 R12: ffffffff822e6d30
    R13: dead000000000200 R14: dead000000000100 R15: ffffffff8158b4e0
    FS:  00007ffa595158c0(0000) GS:ffff8801f39c0000(0000) knlGS:0000000000000000
    CS:  e033 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000000002d8 CR3: 00000001d9602000 CR4: 0000000000002660
    Call Trace:
     handle_vcpu_hotplug_event+0xb5/0xc0
     xenwatch_thread+0x80/0x140
     ? wait_woken+0x80/0x80
     kthread+0x112/0x130
     ? kthread_create_worker_on_cpu+0x40/0x40
     ret_from_fork+0x3a/0x50
    
    This happens because handle_vcpu_hotplug_event is called twice. In the
    first iteration cpu_present is still true, in the second iteration
    cpu_present is false which causes get_cpu_device to return NULL.
    In case of cpu#0, cpu_online is apparently always true.
    
    Fix this crash by checking if the cpu can be hotplugged, which is false
    for a cpu that was just removed.
    
    Also check if the cpu was actually offlined by device_remove, otherwise
    leave the cpu_present state as it is.
    
    Rearrange to code to do all work with device_hotplug_lock held.
    
    Signed-off-by: Olaf Hering <olaf@aepfle.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e72ba07a630c03e9a5878a45e504b11609596c3
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Thu Sep 6 13:26:08 2018 +0200

    xen/manage: don't complain about an empty value in control/sysrq node
    
    [ Upstream commit 87dffe86d406bee8782cac2db035acb9a28620a7 ]
    
    When guest receives a sysrq request from the host it acknowledges it by
    writing '\0' to control/sysrq xenstore node. This, however, make xenstore
    watch fire again but xenbus_scanf() fails to parse empty value with "%c"
    format string:
    
     sysrq: SysRq : Emergency Sync
     Emergency Sync complete
     xen:manage: Error -34 reading sysrq code in control/sysrq
    
    Ignore -ERANGE the same way we already ignore -ENOENT, empty value in
    control/sysrq is totally legal.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Reviewed-by: Wei Liu <wei.liu2@citrix.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3466db7bf72e80f1d5fe4aaf22fb1f9e59abb538
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 6 12:47:01 2018 +0300

    cifs: read overflow in is_valid_oplock_break()
    
    [ Upstream commit 097f5863b1a0c9901f180bbd56ae7d630655faaa ]
    
    We need to verify that the "data_offset" is within bounds.
    
    Reported-by: Dr Silvio Cesare of InfoSect <silvio.cesare@gmail.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82e9788a693456aa47c5ef67654a4ba66cdd9ef2
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Wed Sep 12 15:31:35 2018 +0200

    s390/qeth: don't dump past end of unknown HW header
    
    [ Upstream commit 0ac1487c4b2de383b91ecad1be561b8f7a2c15f4 ]
    
    For inbound data with an unsupported HW header format, only dump the
    actual HW header. We have no idea how much payload follows it, and what
    it contains. Worst case, we dump past the end of the Inbound Buffer and
    access whatever is located next in memory.
    
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 743f4a27e13ee967181626e3dd756fcc8fb4690e
Author: Wenjia Zhang <wenjia@linux.ibm.com>
Date:   Wed Sep 12 15:31:34 2018 +0200

    s390/qeth: use vzalloc for QUERY OAT buffer
    
    [ Upstream commit aec45e857c5538664edb76a60dd452e3265f37d1 ]
    
    qeth_query_oat_command() currently allocates the kernel buffer for
    the SIOC_QETH_QUERY_OAT ioctl with kzalloc. So on systems with
    fragmented memory, large allocations may fail (eg. the qethqoat tool by
    default uses 132KB).
    
    Solve this issue by using vzalloc, backing the allocation with
    non-contiguous memory.
    
    Signed-off-by: Wenjia Zhang <wenjia@linux.ibm.com>
    Reviewed-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fcb4509c99c5066dcb847da8b9016b7d465322b
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Tue Sep 11 01:51:43 2018 +0800

    r8169: Clear RTL_FLAG_TASK_*_PENDING when clearing RTL_FLAG_TASK_ENABLED
    
    [ Upstream commit 6ad569019999300afd8e614d296fdc356550b77f ]
    
    After system suspend, sometimes the r8169 doesn't work when ethernet
    cable gets pluggued.
    
    This issue happens because rtl_reset_work() doesn't get called from
    rtl8169_runtime_resume(), after system suspend.
    
    In rtl_task(), RTL_FLAG_TASK_* only gets cleared if this condition is
    met:
    if (!netif_running(dev) ||
        !test_bit(RTL_FLAG_TASK_ENABLED, tp->wk.flags))
        ...
    
    If RTL_FLAG_TASK_ENABLED was cleared during system suspend while
    RTL_FLAG_TASK_RESET_PENDING was set, the next rtl_schedule_task() won't
    schedule task as the flag is still there.
    
    So in addition to clearing RTL_FLAG_TASK_ENABLED, also clears other
    flags.
    
    Cc: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7ce4d564815281a0b7593cb9f3e52db8c25d85a
Author: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
Date:   Sun Sep 9 17:47:31 2018 +0200

    arm64: jump_label.h: use asm_volatile_goto macro instead of "asm goto"
    
    [ Upstream commit 13aceef06adfaf93d52e01e28a8bc8a0ad471d83 ]
    
    All other uses of "asm goto" go through asm_volatile_goto, which avoids
    a miscompile when using GCC < 4.8.2. Replace our open-coded "asm goto"
    statements with the asm_volatile_goto macro to avoid issues with older
    toolchains.
    
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c751807c9d25c548c91eed58d3bf7cb128d9853
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Jul 22 16:03:58 2018 -0700

    hexagon: modify ffs() and fls() to return int
    
    [ Upstream commit 5c41aaad409c097cf1ef74f2c649fed994744ef5 ]
    
    Building drivers/mtd/nand/raw/nandsim.c on arch/hexagon/ produces a
    printk format build warning.  This is due to hexagon's ffs() being
    coded as returning long instead of int.
    
    Fix the printk format warning by changing all of hexagon's ffs() and
    fls() functions to return int instead of long.  The variables that
    they return are already int instead of long.  This return type
    matches the return type in <asm-generic/bitops/>.
    
    ../drivers/mtd/nand/raw/nandsim.c: In function 'init_nandsim':
    ../drivers/mtd/nand/raw/nandsim.c:760:2: warning: format '%u' expects argument of type 'unsigned int', but argument 2 has type 'long int' [-Wformat]
    
    There are no ffs() or fls() allmodconfig build errors after making this
    change.
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Richard Kuo <rkuo@codeaurora.org>
    Cc: linux-hexagon@vger.kernel.org
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Patch-mainline: linux-kernel @ 07/22/2018, 16:03
    Signed-off-by: Richard Kuo <rkuo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f48ac1571812be5489bdaaec5b2d2fe68688486
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Jul 20 20:17:35 2018 -0700

    arch/hexagon: fix kernel/dma.c build warning
    
    [ Upstream commit 200f351e27f014fcbf69b544b0b4b72aeaf45fd3 ]
    
    Fix build warning in arch/hexagon/kernel/dma.c by casting a void *
    to unsigned long to match the function parameter type.
    
    ../arch/hexagon/kernel/dma.c: In function 'arch_dma_alloc':
    ../arch/hexagon/kernel/dma.c:51:5: warning: passing argument 2 of 'gen_pool_add' makes integer from pointer without a cast [enabled by default]
    ../include/linux/genalloc.h:112:19: note: expected 'long unsigned int' but argument is of type 'void *'
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: Rich Felker <dalias@libc.org>
    Cc: linux-sh@vger.kernel.org
    Patch-mainline: linux-kernel @ 07/20/2018, 20:17
    [rkuo@codeaurora.org: fixed architecture name]
    Signed-off-by: Richard Kuo <rkuo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9537dbf7cc2f563ee7d03f916be2015340eb671
Author: Joe Thornber <ejt@redhat.com>
Date:   Mon Sep 10 16:50:09 2018 +0100

    dm thin metadata: try to avoid ever aborting transactions
    
    [ Upstream commit 3ab91828166895600efd9cdc3a0eb32001f7204a ]
    
    Committing a transaction can consume some metadata of it's own, we now
    reserve a small amount of metadata to cover this.  Free metadata
    reported by the kernel will not include this reserve.
    
    If any of the reserve has been used after a commit we enter a new
    internal state PM_OUT_OF_METADATA_SPACE.  This is reported as
    PM_READ_ONLY, so no userland changes are needed.  If the metadata
    device is resized the pool will move back to PM_WRITE.
    
    These changes mean we never need to abort and rollback a transaction due
    to running out of metadata space.  This is particularly important
    because there have been a handful of reports of data corruption against
    DM thin-provisioning that can all be attributed to the thin-pool having
    ran out of metadata space.
    
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67c5d1e50a0ad82e3a177f4620f0ad4e09267268
Author: Jacek Tomaka <jacek.tomaka@poczta.fm>
Date:   Thu Aug 2 09:38:30 2018 +0800

    perf/x86/intel: Add support/quirk for the MISPREDICT bit on Knights Landing CPUs
    
    [ Upstream commit 16160c1946b702dcfa95ef63389a56deb2f1c7cb ]
    
    Problem: perf did not show branch predicted/mispredicted bit in brstack.
    
    Output of perf -F brstack for profile collected
    
    Before:
    
     0x4fdbcd/0x4fdc03/-/-/-/0
     0x45f4c1/0x4fdba0/-/-/-/0
     0x45f544/0x45f4bb/-/-/-/0
     0x45f555/0x45f53c/-/-/-/0
     0x7f66901cc24b/0x45f555/-/-/-/0
     0x7f66901cc22e/0x7f66901cc23d/-/-/-/0
     0x7f66901cc1ff/0x7f66901cc20f/-/-/-/0
     0x7f66901cc1e8/0x7f66901cc1fc/-/-/-/0
    
    After:
    
     0x4fdbcd/0x4fdc03/P/-/-/0
     0x45f4c1/0x4fdba0/P/-/-/0
     0x45f544/0x45f4bb/P/-/-/0
     0x45f555/0x45f53c/P/-/-/0
     0x7f66901cc24b/0x45f555/P/-/-/0
     0x7f66901cc22e/0x7f66901cc23d/P/-/-/0
     0x7f66901cc1ff/0x7f66901cc20f/P/-/-/0
     0x7f66901cc1e8/0x7f66901cc1fc/P/-/-/0
    
    Cause:
    
    As mentioned in Software Development Manual vol 3, 17.4.8.1,
    IA32_PERF_CAPABILITIES[5:0] indicates the format of the address that is
    stored in the LBR stack. Knights Landing reports 1 (LBR_FORMAT_LIP) as
    its format. Despite that, registers containing FROM address of the branch,
    do have MISPREDICT bit but because of the format indicated in
    IA32_PERF_CAPABILITIES[5:0], LBR did not read MISPREDICT bit.
    
    Solution:
    
    Teach LBR about above Knights Landing quirk and make it read MISPREDICT bit.
    
    Signed-off-by: Jacek Tomaka <jacek.tomaka@poczta.fm>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20180802013830.10600-1-jacekt@dugeo.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3013499e8c1f192c3df946fbdf4d7017e9557313
Author: Netanel Belgazal <netanel@amazon.com>
Date:   Sun Sep 9 08:15:21 2018 +0000

    net: ena: fix driver when PAGE_SIZE == 64kB
    
    [ Upstream commit ef5b0771d247379c90c8bf1332ff32f7f74bff7f ]
    
    The buffer length field in the ena rx descriptor is 16 bit, and the
    current driver passes a full page in each ena rx descriptor.
    When PAGE_SIZE equals 64kB or more, the buffer length field becomes
    zero.
    To solve this issue, limit the ena Rx descriptor to use 16kB even
    when allocating 64kB kernel pages. This change would not impact ena
    device functionality, as 16kB is still larger than maximum MTU.
    
    Signed-off-by: Netanel Belgazal <netanel@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a0ee61df2d4fffcb5e798ab009d60c7f6d54c78
Author: Stephen Rothwell <sfr@canb.auug.org.au>
Date:   Mon Sep 3 13:15:58 2018 +1000

    fs/cifs: suppress a string overflow warning
    
    [ Upstream commit bcfb84a996f6fa90b5e6e2954b2accb7a4711097 ]
    
    A powerpc build of cifs with gcc v8.2.0 produces this warning:
    
    fs/cifs/cifssmb.c: In function ‘CIFSSMBNegotiate’:
    fs/cifs/cifssmb.c:605:3: warning: ‘strncpy’ writing 16 bytes into a region of size 1 overflows the destination [-Wstringop-overflow=]
       strncpy(pSMB->DialectsArray+count, protocols[i].name, 16);
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Since we are already doing a strlen() on the source, change the strncpy
    to a memcpy().
    
    Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba650e7b6bca36e6c128a9b9c4488b68e1f8a813
Author: Heinz Mauelshagen <heinzm@redhat.com>
Date:   Thu Sep 6 18:33:40 2018 +0200

    dm raid: fix rebuild of specific devices by updating superblock
    
    [ Upstream commit c44a5ee803d2b7ed8c2e6ce24a5c4dd60778886e ]
    
    Update superblock when particular devices are requested via rebuild
    (e.g. lvconvert --replace ...) to avoid spurious failure with the "New
    device injected into existing raid set without 'delta_disks' or
    'rebuild' parameter specified" error message.
    
    Signed-off-by: Heinz Mauelshagen <heinzm@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a60c74a6877d79efe63e7401acefdce8b0e5798
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Sep 4 15:56:57 2018 +1000

    drm/nouveau/TBDdevinit: don't fail when PMU/PRE_OS is missing from VBIOS
    
    [ Upstream commit 0a6986c6595e9afd20ff7280dab36431c1e467f8 ]
    
    This Falcon application doesn't appear to be present on some newer
    systems, so let's not fail init if we can't find it.
    
    TBD: is there a way to determine whether it *should* be there?
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 338caef7902851d47df23bde9ae276488fa40009
Author: Daniel Jurgens <danielj@mellanox.com>
Date:   Mon Aug 27 09:09:46 2018 -0500

    net/mlx5: Consider PCI domain in search for next dev
    
    [ Upstream commit df7ddb2396cd162e64aaff9401be05e31e438961 ]
    
    The PCI BDF is not unique. PCI domain must also be considered when
    searching for the next physical device during lag setup. Example below:
    
    mlx5_core 0000:01:00.0: MLX5E: StrdRq(1) RqSz(8) StrdSz(128) RxCqeCmprss(0)
    mlx5_core 0000:01:00.1: MLX5E: StrdRq(1) RqSz(8) StrdSz(128) RxCqeCmprss(0)
    mlx5_core 0001:01:00.0: MLX5E: StrdRq(1) RqSz(8) StrdSz(128) RxCqeCmprss(0)
    mlx5_core 0001:01:00.1: MLX5E: StrdRq(1) RqSz(8) StrdSz(128) RxCqeCmprss(0)
    
    Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
    Reviewed-by: Aviv Heller <avivh@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4483073ed3ffdcdbe709e63efacfc25997b2dd20
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Sep 3 03:47:07 2018 -0700

    nvmet-rdma: fix possible bogus dereference under heavy load
    
    [ Upstream commit 8407879c4e0d7731f6e7e905893cecf61a7762c7 ]
    
    Currently we always repost the recv buffer before we send a response
    capsule back to the host. Since ordering is not guaranteed for send
    and recv completions, it is posible that we will receive a new request
    from the host before we got a send completion for the response capsule.
    
    Today, we pre-allocate 2x rsps the length of the queue, but in reality,
    under heavy load there is nothing that is really preventing the gap to
    expand until we exhaust all our rsps.
    
    To fix this, if we don't have any pre-allocated rsps left, we dynamically
    allocate a rsp and make sure to free it when we are done. If under memory
    pressure we fail to allocate a rsp, we silently drop the command and
    wait for the host to retry.
    
    Reported-by: Steve Wise <swise@opengridcomputing.com>
    Tested-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    [hch: dropped a superflous assignment]
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1edf322a35f779d063abd050d4556649235aeb3b
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Wed Aug 15 21:45:37 2018 +0100

    USB: yurex: Check for truncation in yurex_read()
    
    [ Upstream commit 14427b86837a4baf1c121934c6599bdb67dfa9fc ]
    
    snprintf() always returns the full length of the string it could have
    printed, even if it was truncated because the buffer was too small.
    So in case the counter value is truncated, we will over-read from
    in_buffer and over-write to the caller's buffer.
    
    I don't think it's actually possible for this to happen, but in case
    truncation occurs, WARN and return -EIO.
    
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2be8dc1994bbfe5f53a795338679098ecaf59457
Author: Jann Horn <jannh@google.com>
Date:   Mon Sep 3 18:54:14 2018 +0200

    RDMA/ucma: check fd type in ucma_migrate_id()
    
    [ Upstream commit 0d23ba6034b9cf48b8918404367506da3e4b3ee5 ]
    
    The current code grabs the private_data of whatever file descriptor
    userspace has supplied and implicitly casts it to a `struct ucma_file *`,
    potentially causing a type confusion.
    
    This is probably fine in practice because the pointer is only used for
    comparisons, it is never actually dereferenced; and even in the
    comparisons, it is unlikely that a file from another filesystem would have
    a ->private_data pointer that happens to also be valid in this context.
    But ->private_data is not always guaranteed to be a valid pointer to an
    object owned by the file's filesystem; for example, some filesystems just
    cram numbers in there.
    
    Check the type of the supplied file descriptor to be safe, analogous to how
    other places in the kernel do it.
    
    Fixes: 88314e4dda1e ("RDMA/cma: add support for rdma_migrate_id()")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bce26ed05498f2ddae6c7ae3df6eb7c436b96744
Author: Sandipan Das <sandipan@linux.ibm.com>
Date:   Tue Aug 28 14:38:48 2018 +0530

    perf probe powerpc: Ignore SyS symbols irrespective of endianness
    
    [ Upstream commit fa694160cca6dbba17c57dc7efec5f93feaf8795 ]
    
    This makes sure that the SyS symbols are ignored for any powerpc system,
    not just the big endian ones.
    
    Reported-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Reviewed-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>
    Acked-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Fixes: fb6d59423115 ("perf probe ppc: Use the right prefix when ignoring SyS symbols on ppc")
    Link: http://lkml.kernel.org/r/20180828090848.1914-1-sandipan@linux.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6040d231deea7825c89f294cc6ef61bc7ff29875
Author: Hisao Tanabe <xtanabe@gmail.com>
Date:   Sat Aug 25 00:45:56 2018 +0900

    perf evsel: Fix potential null pointer dereference in perf_evsel__new_idx()
    
    [ Upstream commit fd8d2702791a970c751f8b526a17d8e725a05b46 ]
    
    If evsel is NULL, we should return NULL to avoid a NULL pointer
    dereference a bit later in the code.
    
    Signed-off-by: Hisao Tanabe <xtanabe@gmail.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Wang Nan <wangnan0@huawei.com>
    Fixes: 03e0a7df3efd ("perf tools: Introduce bpf-output event")
    LPU-Reference: 20180824154556.23428-1-xtanabe@gmail.com
    Link: https://lkml.kernel.org/n/tip-e5plzjhx6595a5yjaf22jss3@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a80e03b6c0e0e35bd49d9cea75a64db1d4017666
Author: Harry Mallon <hjmallon@gmail.com>
Date:   Tue Aug 28 22:51:29 2018 +0100

    HID: hid-saitek: Add device ID for RAT 7 Contagion
    
    [ Upstream commit 43822c98f2ebb2cbd5e467ab72bbcdae7f0caa22 ]
    
    Signed-off-by: Harry Mallon <hjmallon@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 185261d7dd77cea1ee21645c343887f320bbb1e1
Author: Anton Vasilyev <vasilyev@ispras.ru>
Date:   Tue Aug 7 14:44:48 2018 +0300

    usb: gadget: fotg210-udc: Fix memory leak of fotg210->ep[i]
    
    [ Upstream commit c37bd52836296ecc9a0fc8060b819089aebdbcde ]
    
    There is no deallocation of fotg210->ep[i] elements, allocated at
    fotg210_udc_probe.
    
    The patch adds deallocation of fotg210->ep array elements and simplifies
    error path of fotg210_udc_probe().
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Anton Vasilyev <vasilyev@ispras.ru>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86d2b2f2eb218891b37a7ae4d3edcd504b4d5304
Author: Sean O'Brien <seobrien@chromium.org>
Date:   Mon Aug 27 13:02:15 2018 -0700

    HID: add support for Apple Magic Keyboards
    
    [ Upstream commit ee345492437043a79db058a3d4f029ebcb52089a ]
    
    USB device
            Vendor 05ac (Apple)
            Device 026c (Magic Keyboard with Numeric Keypad)
    
    Bluetooth devices
            Vendor 004c (Apple)
            Device 0267 (Magic Keyboard)
            Device 026c (Magic Keyboard with Numeric Keypad)
    
    Support already exists for the Magic Keyboard over USB connection.
    Add support for the Magic Keyboard over Bluetooth connection, and for
    the Magic Keyboard with Numeric Keypad over Bluetooth and USB
    connection.
    
    Signed-off-by: Sean O'Brien <seobrien@chromium.org>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00a28d94f99ce7590b64e186057e2c7fd6a4c6f5
Author: Daniel Black <daniel@linux.ibm.com>
Date:   Fri Oct 5 15:52:19 2018 -0700

    mm: madvise(MADV_DODUMP): allow hugetlbfs pages
    
    commit d41aa5252394c065d1f04d1ceea885b70d00c9c6 upstream.
    
    Reproducer, assuming 2M of hugetlbfs available:
    
    Hugetlbfs mounted, size=2M and option user=testuser
    
      # mount | grep ^hugetlbfs
      hugetlbfs on /dev/hugepages type hugetlbfs (rw,pagesize=2M,user=dan)
      # sysctl vm.nr_hugepages=1
      vm.nr_hugepages = 1
      # grep Huge /proc/meminfo
      AnonHugePages:         0 kB
      ShmemHugePages:        0 kB
      HugePages_Total:       1
      HugePages_Free:        1
      HugePages_Rsvd:        0
      HugePages_Surp:        0
      Hugepagesize:       2048 kB
      Hugetlb:            2048 kB
    
    Code:
    
      #include <sys/mman.h>
      #include <stddef.h>
      #define SIZE 2*1024*1024
      int main()
      {
        void *ptr;
        ptr = mmap(NULL, SIZE, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_HUGETLB | MAP_ANONYMOUS, -1, 0);
        madvise(ptr, SIZE, MADV_DONTDUMP);
        madvise(ptr, SIZE, MADV_DODUMP);
      }
    
    Compile and strace:
    
      mmap(NULL, 2097152, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_HUGETLB, -1, 0) = 0x7ff7c9200000
      madvise(0x7ff7c9200000, 2097152, MADV_DONTDUMP) = 0
      madvise(0x7ff7c9200000, 2097152, MADV_DODUMP) = -1 EINVAL (Invalid argument)
    
    hugetlbfs pages have VM_DONTEXPAND in the VmFlags driver pages based on
    author testing with analysis from Florian Weimer[1].
    
    The inclusion of VM_DONTEXPAND into the VM_SPECIAL defination was a
    consequence of the large useage of VM_DONTEXPAND in device drivers.
    
    A consequence of [2] is that VM_DONTEXPAND marked pages are unable to be
    marked DODUMP.
    
    A user could quite legitimately madvise(MADV_DONTDUMP) their hugetlbfs
    memory for a while and later request that madvise(MADV_DODUMP) on the same
    memory.  We correct this omission by allowing madvice(MADV_DODUMP) on
    hugetlbfs pages.
    
    [1] https://stackoverflow.com/questions/52548260/madvisedodump-on-the-same-ptr-size-as-a-successful-madvisedontdump-fails-wit
    [2] commit 0103bd16fb90 ("mm: prepare VM_DONTDUMP for using in drivers")
    
    Link: http://lkml.kernel.org/r/20180930054629.29150-1-daniel@linux.ibm.com
    Link: https://lists.launchpad.net/maria-discuss/msg05245.html
    Fixes: 0103bd16fb90 ("mm: prepare VM_DONTDUMP for using in drivers")
    Reported-by: Kenneth Penza <kpenza@gmail.com>
    Signed-off-by: Daniel Black <daniel@linux.ibm.com>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Konstantin Khlebnikov <khlebnikov@openvz.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4beeb11287535659ca87624a6b6d1153925dfe2c
Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
Date:   Tue Sep 4 15:45:51 2018 -0700

    tools/vm/page-types.c: fix "defined but not used" warning
    
    [ Upstream commit 7ab660f8baecfe26c1c267fa8e64d2073feae2bb ]
    
    debugfs_known_mountpoints[] is not used any more, so let's remove it.
    
    Link: http://lkml.kernel.org/r/1535102651-19418-1-git-send-email-n-horiguchi@ah.jp.nec.com
    Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Matthew Wilcox <willy@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef645b122e0a05565316afbe5d7e2fec6bc8d5da
Author: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
Date:   Tue Sep 4 15:45:48 2018 -0700

    tools/vm/slabinfo.c: fix sign-compare warning
    
    [ Upstream commit 904506562e0856f2535d876407d087c9459d345b ]
    
    Currently we get the following compiler warning:
    
        slabinfo.c:854:22: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
           if (s->object_size < min_objsize)
                              ^
    
    due to the mismatch of signed/unsigned comparison.  ->object_size and
    ->slab_size are never expected to be negative, so let's define them as
    unsigned int.
    
    [n-horiguchi@ah.jp.nec.com: convert everything - none of these can be negative]
      Link: http://lkml.kernel.org/r/20180826234947.GA9787@hori1.linux.bs1.fc.nec.co.jp
    Link: http://lkml.kernel.org/r/1535103134-20239-1-git-send-email-n-horiguchi@ah.jp.nec.com
    Signed-off-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Matthew Wilcox <willy@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 161a426a50654545aca71004dbe67097d85c210a
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Fri Aug 31 11:31:13 2018 +0300

    mac80211: shorten the IBSS debug messages
    
    [ Upstream commit c6e57b3896fc76299913b8cfd82d853bee8a2c84 ]
    
    When tracing is enabled, all the debug messages are recorded and must
    not exceed MAX_MSG_LEN (100) columns. Longer debug messages grant the
    user with:
    
    WARNING: CPU: 3 PID: 32642 at /tmp/wifi-core-20180806094828/src/iwlwifi-stack-dev/net/mac80211/./trace_msg.h:32 trace_event_raw_event_mac80211_msg_event+0xab/0xc0 [mac80211]
    Workqueue: phy1 ieee80211_iface_work [mac80211]
     RIP: 0010:trace_event_raw_event_mac80211_msg_event+0xab/0xc0 [mac80211]
     Call Trace:
      __sdata_dbg+0xbd/0x120 [mac80211]
      ieee80211_ibss_rx_queued_mgmt+0x15f/0x510 [mac80211]
      ieee80211_iface_work+0x21d/0x320 [mac80211]
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57eff4d1c1e0e8e09e88d37f371a4546d97101b1
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Fri Aug 31 11:31:12 2018 +0300

    mac80211: don't Tx a deauth frame if the AP forbade Tx
    
    [ Upstream commit 6c18b27d6e5c6a7206364eae2b47bc8d8b2fa68f ]
    
    If the driver fails to properly prepare for the channel
    switch, mac80211 will disconnect. If the CSA IE had mode
    set to 1, it means that the clients are not allowed to send
    any Tx on the current channel, and that includes the
    deauthentication frame.
    
    Make sure that we don't send the deauthentication frame in
    this case.
    
    In iwlwifi, this caused a failure to flush queues since the
    firmware already closed the queues after having parsed the
    CSA IE. Then mac80211 would wait until the deauthentication
    frame would go out (drv_flush(drop=false)) and that would
    never happen.
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2900bcc1b1512788534414c655aebec501dc2652
Author: Ilan Peer <ilan.peer@intel.com>
Date:   Fri Aug 31 11:31:10 2018 +0300

    mac80211: Fix station bandwidth setting after channel switch
    
    [ Upstream commit 0007e94355fdb71a1cf5dba0754155cba08f0666 ]
    
    When performing a channel switch flow for a managed interface, the
    flow did not update the bandwidth of the AP station and the rate
    scale algorithm. In case of a channel width downgrade, this would
    result with the rate scale algorithm using a bandwidth that does not
    match the interface channel configuration.
    
    Fix this by updating the AP station bandwidth and rate scaling algorithm
    before the actual channel change in case of a bandwidth downgrade, or
    after the actual channel change in case of a bandwidth upgrade.
    
    Signed-off-by: Ilan Peer <ilan.peer@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27272872f89cc56317e618f9f28c7f53e6bc5293
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Fri Aug 31 11:31:06 2018 +0300

    mac80211: fix a race between restart and CSA flows
    
    [ Upstream commit f3ffb6c3a28963657eb8b02a795d75f2ebbd5ef4 ]
    
    We hit a problem with iwlwifi that was caused by a bug in
    mac80211. A bug in iwlwifi caused the firwmare to crash in
    certain cases in channel switch. Because of that bug,
    drv_pre_channel_switch would fail and trigger the restart
    flow.
    Now we had the hw restart worker which runs on the system's
    workqueue and the csa_connection_drop_work worker that runs
    on mac80211's workqueue that can run together. This is
    obviously problematic since the restart work wants to
    reconfigure the connection, while the csa_connection_drop_work
    worker does the exact opposite: it tries to disconnect.
    
    Fix this by cancelling the csa_connection_drop_work worker
    in the restart worker.
    
    Note that this can sound racy: we could have:
    
    driver   iface_work   CSA_work   restart_work
    +++++++++++++++++++++++++++++++++++++++++++++
                  |
     <--drv_cs ---|
    <FW CRASH!>
    -CS FAILED-->
                  |                       |
                  |                 cancel_work(CSA)
               schedule                   |
               CSA work                   |
                             |            |
                            Race between those 2
    
    But this is not possible because we flush the workqueue
    in the restart worker before we cancel the CSA worker.
    That would be bullet proof if we could guarantee that
    we schedule the CSA worker only from the iface_work
    which runs on the workqueue (and not on the system's
    workqueue), but unfortunately we do have an instance
    in which we schedule the CSA work outside the context
    of the workqueue (ieee80211_chswitch_done).
    
    Note also that we should probably cancel other workers
    like beacon_connection_loss_work and possibly others
    for different types of interfaces, at the very least,
    IBSS should suffer from the exact same problem, but for
    now, do the minimum to fix the actual bug that was actually
    experienced and reproduced.
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b699bcb6c809123b0e67f04ead2d0f0dba4c65e8
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Aug 31 11:10:55 2018 +0300

    cfg80211: fix a type issue in ieee80211_chandef_to_operating_class()
    
    [ Upstream commit 8442938c3a2177ba16043b3a935f2c78266ad399 ]
    
    The "chandef->center_freq1" variable is a u32 but "freq" is a u16 so we
    are truncating away the high bits.  I noticed this bug because in commit
    9cf0a0b4b64a ("cfg80211: Add support for 60GHz band channels 5 and 6")
    we made "freq <= 56160 + 2160 * 6" a valid requency when before it was
    only "freq <= 56160 + 2160 * 4" that was valid.  It introduces a static
    checker warning:
    
        net/wireless/util.c:1571 ieee80211_chandef_to_operating_class()
        warn: always true condition '(freq <= 56160 + 2160 * 6) => (0-u16max <= 69120)'
    
    But really we probably shouldn't have been truncating the high bits
    away to begin with.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34acac497b82d8ce449ee6d94abe7e36766d0f10
Author: Jon Kuhn <jkuhn@barracuda.com>
Date:   Mon Jul 9 14:33:14 2018 +0000

    fs/cifs: don't translate SFM_SLASH (U+F026) to backslash
    
    [ Upstream commit c15e3f19a6d5c89b1209dc94b40e568177cb0921 ]
    
    When a Mac client saves an item containing a backslash to a file server
    the backslash is represented in the CIFS/SMB protocol as as U+F026.
    Before this change, listing a directory containing an item with a
    backslash in its name will return that item with the backslash
    represented with a true backslash character (U+005C) because
    convert_sfm_character mapped U+F026 to U+005C when interpretting the
    CIFS/SMB protocol response.  However, attempting to open or stat the
    path using a true backslash will result in an error because
    convert_to_sfm_char does not map U+005C back to U+F026 causing the
    CIFS/SMB request to be made with the backslash represented as U+005C.
    
    This change simply prevents the U+F026 to U+005C conversion from
    happenning.  This is analogous to how the code does not do any
    translation of UNI_SLASH (U+F000).
    
    Signed-off-by: Jon Kuhn <jkuhn@barracuda.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3e419fb1a28818212fba6f47226c64baaf7b997
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sat Sep 1 20:11:05 2018 +0800

    net: cadence: Fix a sleep-in-atomic-context bug in macb_halt_tx()
    
    [ Upstream commit 16fe10cf92783ed9ceb182d6ea2b8adf5e8ec1b8 ]
    
    The kernel module may sleep with holding a spinlock.
    
    The function call paths (from bottom to top) in Linux-4.16 are:
    
    [FUNC] usleep_range
    drivers/net/ethernet/cadence/macb_main.c, 648:
            usleep_range in macb_halt_tx
    drivers/net/ethernet/cadence/macb_main.c, 730:
            macb_halt_tx in macb_tx_error_task
    drivers/net/ethernet/cadence/macb_main.c, 721:
            _raw_spin_lock_irqsave in macb_tx_error_task
    
    To fix this bug, usleep_range() is replaced with udelay().
    
    This bug is found by my static analysis tool DSAC.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7eff55ddf1ce73edd75dac3d00186c8f977cd9a
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Fri Aug 31 23:30:48 2018 +0900

    i2c: uniphier-f: issue STOP only for last message or I2C_M_STOP
    
    [ Upstream commit 4c85609b08c4761eca0a40fd7beb06bc650f252d ]
    
    This driver currently emits a STOP if the next message is not
    I2C_MD_RD.  It should not do it because it disturbs the I2C_RDWR
    ioctl, where read/write transactions are combined without STOP
    between.
    
    Issue STOP only when the message is the last one _or_ flagged with
    I2C_M_STOP.
    
    Fixes: 6a62974b667f ("i2c: uniphier_f: add UniPhier FIFO-builtin I2C driver")
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46ceebc6a43cbaa32c66e90fa4f08bf416b18b52
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Fri Aug 31 23:30:47 2018 +0900

    i2c: uniphier: issue STOP only for last message or I2C_M_STOP
    
    [ Upstream commit 38f5d8d8cbb2ffa2b54315118185332329ec891c ]
    
    This driver currently emits a STOP if the next message is not
    I2C_MD_RD.  It should not do it because it disturbs the I2C_RDWR
    ioctl, where read/write transactions are combined without STOP
    between.
    
    Issue STOP only when the message is the last one _or_ flagged with
    I2C_M_STOP.
    
    Fixes: dd6fd4a32793 ("i2c: uniphier: add UniPhier FIFO-less I2C driver")
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26e2f55d1be0ade9c1104dea7da53cd5ddca0a2b
Author: Xiao Ni <xni@redhat.com>
Date:   Thu Aug 30 15:57:09 2018 +0800

    RAID10 BUG_ON in raise_barrier when force is true and conf->barrier is 0
    
    [ Upstream commit 1d0ffd264204eba1861865560f1f7f7a92919384 ]
    
    In raid10 reshape_request it gets max_sectors in read_balance. If the underlayer disks
    have bad blocks, the max_sectors is less than last. It will call goto read_more many
    times. It calls raise_barrier(conf, sectors_done != 0) every time. In this condition
    sectors_done is not 0. So the value passed to the argument force of raise_barrier is
    true.
    
    In raise_barrier it checks conf->barrier when force is true. If force is true and
    conf->barrier is 0, it panic. In this case reshape_request submits bio to under layer
    disks. And in the callback function of the bio it calls lower_barrier. If the bio
    finishes before calling raise_barrier again, it can trigger the BUG_ON.
    
    Add one pair of raise_barrier/lower_barrier to fix this bug.
    
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Suggested-by: Neil Brown <neilb@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0890a027250aea86e0758f8f3c0a74fb084beb8
Author: Will Deacon <will@kernel.org>
Date:   Thu Aug 30 13:52:38 2018 -0700

    ARC: atomics: unbork atomic_fetch_##op()
    
    [ Upstream commit 3fcbb8260a87efb691d837e8cd24e81f65b3eb70 ]
    
    In 4.19-rc1, Eugeniy reported weird boot and IO errors on ARC HSDK
    
    | INFO: task syslogd:77 blocked for more than 10 seconds.
    |       Not tainted 4.19.0-rc1-00007-gf213acea4e88 #40
    | "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this
    | message.
    | syslogd         D    0    77     76 0x00000000
    |
    | Stack Trace:
    |  __switch_to+0x0/0xac
    |  __schedule+0x1b2/0x730
    |  io_schedule+0x5c/0xc0
    |  __lock_page+0x98/0xdc
    |  find_lock_entry+0x38/0x100
    |  shmem_getpage_gfp.isra.3+0x82/0xbfc
    |  shmem_fault+0x46/0x138
    |  handle_mm_fault+0x5bc/0x924
    |  do_page_fault+0x100/0x2b8
    |  ret_from_exception+0x0/0x8
    
    He bisected to 84c6591103db ("locking/atomics,
    asm-generic/bitops/lock.h: Rewrite using atomic_fetch_*()")
    
    This commit however only unmasked the real issue introduced by commit
    4aef66c8ae9 ("locking/atomic, arch/arc: Fix build") which missed the
    retry-if-scond-failed branch in atomic_fetch_##op() macros.
    
    The bisected commit started using atomic_fetch_##op() macros for building
    the rest of atomics.
    
    Fixes: 4aef66c8ae9 ("locking/atomic, arch/arc: Fix build")
    Reported-by: Eugeniy Paltsev <paltsev@synopsys.com>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    [vgupta: wrote changelog]
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bb227b514aca53f30d31221a24d568db2550665
Author: Vincent Whitchurch <vincent.whitchurch@axis.com>
Date:   Fri Aug 31 09:04:18 2018 +0200

    gpio: Fix crash due to registration race
    
    [ Upstream commit d49b48f088c323dbacae44dfbe56d9c985c8a2a1 ]
    
    gpiochip_add_data_with_key() adds the gpiochip to the gpio_devices list
    before of_gpiochip_add() is called, but it's only the latter which sets
    the ->of_xlate function pointer.  gpiochip_find() can be called by
    someone else between these two actions, and it can find the chip and
    call of_gpiochip_match_node_and_xlate() which leads to the following
    crash due to a NULL ->of_xlate().
    
     Unhandled prefetch abort: page domain fault (0x01b) at 0x00000000
     Modules linked in: leds_gpio(+) gpio_generic(+)
     CPU: 0 PID: 830 Comm: insmod Not tainted 4.18.0+ #43
     Hardware name: ARM-Versatile Express
     PC is at   (null)
     LR is at of_gpiochip_match_node_and_xlate+0x2c/0x38
     Process insmod (pid: 830, stack limit = 0x(ptrval))
      (of_gpiochip_match_node_and_xlate) from  (gpiochip_find+0x48/0x84)
      (gpiochip_find) from  (of_get_named_gpiod_flags+0xa8/0x238)
      (of_get_named_gpiod_flags) from  (gpiod_get_from_of_node+0x2c/0xc8)
      (gpiod_get_from_of_node) from  (devm_fwnode_get_index_gpiod_from_child+0xb8/0x144)
      (devm_fwnode_get_index_gpiod_from_child) from  (gpio_led_probe+0x208/0x3c4 [leds_gpio])
      (gpio_led_probe [leds_gpio]) from  (platform_drv_probe+0x48/0x9c)
      (platform_drv_probe) from  (really_probe+0x1d0/0x3d4)
      (really_probe) from  (driver_probe_device+0x78/0x1c0)
      (driver_probe_device) from  (__driver_attach+0x120/0x13c)
      (__driver_attach) from  (bus_for_each_dev+0x68/0xb4)
      (bus_for_each_dev) from  (bus_add_driver+0x1a8/0x268)
      (bus_add_driver) from  (driver_register+0x78/0x10c)
      (driver_register) from  (do_one_initcall+0x54/0x1fc)
      (do_one_initcall) from  (do_init_module+0x64/0x1f4)
      (do_init_module) from  (load_module+0x2198/0x26ac)
      (load_module) from  (sys_finit_module+0xe0/0x110)
      (sys_finit_module) from  (ret_fast_syscall+0x0/0x54)
    
    One way to fix this would be to rework the hairy registration sequence
    in gpiochip_add_data_with_key(), but since I'd probably introduce a
    couple of new bugs if I attempted that, simply add a check for a
    non-NULL of_xlate function pointer in
    of_gpiochip_match_node_and_xlate().  This works since the driver looking
    for the gpio will simply fail to find the gpio and defer its probe and
    be reprobed when the driver which is registering the gpiochip has fully
    completed its probe.
    
    Signed-off-by: Vincent Whitchurch <vincent.whitchurch@axis.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df19dc0390c7a0e06a7eb6302c91bb4533361fdf
Author: Arunk Khandavalli <akhandav@codeaurora.org>
Date:   Thu Aug 30 00:40:16 2018 +0300

    cfg80211: nl80211_update_ft_ies() to validate NL80211_ATTR_IE
    
    [ Upstream commit 4f0223bfe9c3e62d8f45a85f1ef1b18a8a263ef9 ]
    
    nl80211_update_ft_ies() tried to validate NL80211_ATTR_IE with
    is_valid_ie_attr() before dereferencing it, but that helper function
    returns true in case of NULL pointer (i.e., attribute not included).
    This can result to dereferencing a NULL pointer. Fix that by explicitly
    checking that NL80211_ATTR_IE is included.
    
    Fixes: 355199e02b83 ("cfg80211: Extend support for IEEE 802.11r Fast BSS Transition")
    Signed-off-by: Arunk Khandavalli <akhandav@codeaurora.org>
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5640e04fdc59e9c7e5afd153f2079b5b851ada67
Author: Peng Li <lipeng321@huawei.com>
Date:   Mon Aug 27 09:59:30 2018 +0800

    net: hns: add netif_carrier_off before change speed and duplex
    
    [ Upstream commit 455c4401fe7a538facaffb35b906ce19f1ece474 ]
    
    If there are packets in hardware when changing the speed
    or duplex, it may cause hardware hang up.
    
    This patch adds netif_carrier_off before change speed and
    duplex in ethtool_ops.set_link_ksettings, and adds
    netif_carrier_on after complete the change.
    
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c10ec1ddde1cc9f73fc3f8a27d427b59675d08f
Author: Yuan-Chi Pang <fu3mo6goo@gmail.com>
Date:   Wed Aug 29 09:30:08 2018 +0800

    mac80211: mesh: fix HWMP sequence numbering to follow standard
    
    [ Upstream commit 1f631c3201fe5491808df143d8fcba81b3197ffd ]
    
    IEEE 802.11-2016 14.10.8.3 HWMP sequence numbering says:
    If it is a target mesh STA, it shall update its own HWMP SN to
    maximum (current HWMP SN, target HWMP SN in the PREQ element) + 1
    immediately before it generates a PREP element in response to a
    PREQ element.
    
    Signed-off-by: Yuan-Chi Pang <fu3mo6goo@gmail.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cf963078ad51ac72a318e00b984d634fc115d84
Author: Michael Hennerich <michael.hennerich@analog.com>
Date:   Mon Aug 13 15:57:44 2018 +0200

    gpio: adp5588: Fix sleep-in-atomic-context bug
    
    [ Upstream commit 6537886cdc9a637711fd6da980dbb87c2c87c9aa ]
    
    This fixes:
    [BUG] gpio: gpio-adp5588: A possible sleep-in-atomic-context bug
                              in adp5588_gpio_write()
    [BUG] gpio: gpio-adp5588: A possible sleep-in-atomic-context bug
                              in adp5588_gpio_direction_input()
    
    Reported-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bc130273f9c6857905a7de8c1b92817d6cd8595
Author: Danek Duvall <duvall@comfychair.org>
Date:   Wed Aug 22 16:01:05 2018 -0700

    mac80211_hwsim: correct use of IEEE80211_VHT_CAP_RXSTBC_X
    
    [ Upstream commit d7c863a2f65e48f442379f4ee1846d52e0c5d24d ]
    
    The mac80211_hwsim driver intends to say that it supports up to four
    STBC receive streams, but instead it ends up saying something undefined.
    The IEEE80211_VHT_CAP_RXSTBC_X macros aren't independent bits that can
    be ORed together, but values.  In this case, _4 is the appropriate one
    to use.
    
    Signed-off-by: Danek Duvall <duvall@comfychair.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 167c4b4f4195e79eddc3b3ed0141e627349ec504
Author: Danek Duvall <duvall@comfychair.org>
Date:   Wed Aug 22 16:01:04 2018 -0700

    mac80211: correct use of IEEE80211_VHT_CAP_RXSTBC_X
    
    [ Upstream commit 67d1ba8a6dc83d90cd58b89fa6cbf9ae35a0cf7f ]
    
    The mod mask for VHT capabilities intends to say that you can override
    the number of STBC receive streams, and it does, but only by accident.
    The IEEE80211_VHT_CAP_RXSTBC_X aren't bits to be set, but values (albeit
    left-shifted).  ORing the bits together gets the right answer, but we
    should use the _MASK macro here instead.
    
    Signed-off-by: Danek Duvall <duvall@comfychair.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59cce405706acaf3fa53825d6457ffe53cd48a04
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Mon Aug 20 16:05:45 2018 +1000

    KVM: PPC: Book3S HV: Don't truncate HPTE index in xlate function
    
    [ Upstream commit 46dec40fb741f00f1864580130779aeeaf24fb3d ]
    
    This fixes a bug which causes guest virtual addresses to get translated
    to guest real addresses incorrectly when the guest is using the HPT MMU
    and has more than 256GB of RAM, or more specifically has a HPT larger
    than 2GB.  This has showed up in testing as a failure of the host to
    emulate doorbell instructions correctly on POWER9 for HPT guests with
    more than 256GB of RAM.
    
    The bug is that the HPTE index in kvmppc_mmu_book3s_64_hv_xlate()
    is stored as an int, and in forming the HPTE address, the index gets
    shifted left 4 bits as an int before being signed-extended to 64 bits.
    The simple fix is to make the variable a long int, matching the
    return type of kvmppc_hv_find_lock_hpte(), which is what calculates
    the index.
    
    Fixes: 697d3899dcb4 ("KVM: PPC: Implement MMIO emulation support for Book3S HV guests")
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f9a8075725289e4f0fc07051c42dcf400bdae55
Author: Toke Høiland-Jørgensen <toke@toke.dk>
Date:   Mon Aug 13 14:16:25 2018 +0200

    mac80211: Run TXQ teardown code before de-registering interfaces
    
    [ Upstream commit 77cfaf52eca5cac30ed029507e0cab065f888995 ]
    
    The TXQ teardown code can reference the vif data structures that are
    stored in the netdev private memory area if there are still packets on
    the queue when it is being freed. Since the TXQ teardown code is run
    after the netdevs are freed, this can lead to a use-after-free. Fix this
    by moving the TXQ teardown code to earlier in ieee80211_unregister_hw().
    
    Reported-by: Ben Greear <greearb@candelatech.com>
    Tested-by: Ben Greear <greearb@candelatech.com>
    Signed-off-by: Toke Høiland-Jørgensen <toke@toke.dk>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7038f8eca7d2b62256d3ea9307791ca9b3e4555
Author: Frederic Weisbecker <fweisbec@gmail.com>
Date:   Tue Jan 31 04:09:17 2017 +0100

    time: Introduce jiffies64_to_nsecs()
    
    commit 07e5f5e353aaa61696c8353d87050994a0c4648a upstream.
    
    This will be needed for the cputime_t to nsec conversion.
    
    Signed-off-by: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Stanislaw Gruszka <sgruszka@redhat.com>
    Cc: Wanpeng Li <wanpeng.li@hotmail.com>
    Link: http://lkml.kernel.org/r/1485832191-26889-2-git-send-email-fweisbec@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ivan Delalande <colona@arista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab0721893efdd043bb2da86e000a321ea6e3c222
Author: Jan Kiszka <jan.kiszka@siemens.com>
Date:   Sun Aug 26 19:49:32 2018 +0200

    serial: mvebu-uart: Fix reporting of effective CSIZE to userspace
    
    commit e0bf2d4982fe7d9ddaf550dd023803ea286f47fc upstream.
    
    Apparently, this driver (or the hardware) does not support character
    length settings. It's apparently running in 8-bit mode, but it makes
    userspace believe it's in 5-bit mode. That makes tcsetattr with CS8
    incorrectly fail, breaking e.g. getty from busybox, thus the login shell
    on ttyMVx.
    
    Fix by hard-wiring CS8 into c_cflag.
    
    Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
    Fixes: 30530791a7a0 ("serial: mvebu-uart: initial support for Armada-3700 serial port")
    Cc: stable <stable@vger.kernel.org> # 4.6+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
