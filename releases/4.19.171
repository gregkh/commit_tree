commit c4ff839de17f38b0ae0f8983b5c5186f8a389238
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jan 27 11:05:44 2021 +0100

    Linux 4.19.171
    
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/faca5e02-cc43-0a14-51dc-2bcb25dafdc0@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e9205fa36dd9254663cbff4d077a16944938104
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jan 19 17:48:03 2021 +0300

    net: dsa: b53: fix an off by one in checking "vlan->vid"
    
    commit 8e4052c32d6b4b39c1e13c652c7e33748d447409 upstream.
    
    The > comparison should be >= to prevent accessing one element beyond
    the end of the dev->vlans[] array in the caller function, b53_vlan_add().
    The "dev->vlans" array is allocated in the b53_switch_init() function
    and it has "dev->num_vlans" elements.
    
    Fixes: a2482d2ce349 ("net: dsa: b53: Plug in VLAN support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/YAbxI97Dl/pmBy5V@mwanda
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fffe7ab69dc57460913854b815351b2cdf9a3c9d
Author: Tariq Toukan <tariqt@nvidia.com>
Date:   Sun Jan 17 17:15:38 2021 +0200

    net: Disable NETIF_F_HW_TLS_RX when RXCSUM is disabled
    
    commit a3eb4e9d4c9218476d05c52dfd2be3d6fdce6b91 upstream.
    
    With NETIF_F_HW_TLS_RX packets are decrypted in HW. This cannot be
    logically done when RXCSUM offload is off.
    
    Fixes: 14136564c8ee ("net: Add TLS RX offload feature")
    Signed-off-by: Tariq Toukan <tariqt@nvidia.com>
    Reviewed-by: Boris Pismenny <borisp@nvidia.com>
    Link: https://lore.kernel.org/r/20210117151538.9411-1-tariqt@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47ece1b19df5e8eeb7fba2e65592c774f0b267e5
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Mon Jan 18 15:52:10 2021 +0200

    net: mscc: ocelot: allow offloading of bridge on top of LAG
    
    commit 79267ae22615496655feee2db0848f6786bcf67a upstream.
    
    The blamed commit was too aggressive, and it made ocelot_netdevice_event
    react only to network interface events emitted for the ocelot switch
    ports.
    
    In fact, only the PRECHANGEUPPER should have had that check.
    
    When we ignore all events that are not for us, we miss the fact that the
    upper of the LAG changes, and the bonding interface gets enslaved to a
    bridge. This is an operation we could offload under certain conditions.
    
    Fixes: 7afb3e575e5a ("net: mscc: ocelot: don't handle netdev events for other netdevs")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20210118135210.2666246-1-olteanv@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47d6a700430234cb0328722833ac3a0788ea7f38
Author: Matteo Croce <mcroce@microsoft.com>
Date:   Fri Jan 15 19:42:09 2021 +0100

    ipv6: set multicast flag on the multicast route
    
    commit ceed9038b2783d14e0422bdc6fd04f70580efb4c upstream.
    
    The multicast route ff00::/8 is created with type RTN_UNICAST:
    
      $ ip -6 -d route
      unicast ::1 dev lo proto kernel scope global metric 256 pref medium
      unicast fe80::/64 dev eth0 proto kernel scope global metric 256 pref medium
      unicast ff00::/8 dev eth0 proto kernel scope global metric 256 pref medium
    
    Set the type to RTN_MULTICAST which is more appropriate.
    
    Fixes: e8478e80e5a7 ("net/ipv6: Save route type in rt6_info")
    Signed-off-by: Matteo Croce <mcroce@microsoft.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df4646250fc74e6871dae4cdf3ededf29a11811c
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Jan 14 08:06:37 2021 -0800

    net_sched: reject silly cell_log in qdisc_get_rtab()
    
    commit e4bedf48aaa5552bc1f49703abd17606e7e6e82a upstream.
    
    iproute2 probably never goes beyond 8 for the cell exponent,
    but stick to the max shift exponent for signed 32bit.
    
    UBSAN reported:
    UBSAN: shift-out-of-bounds in net/sched/sch_api.c:389:22
    shift exponent 130 is too large for 32-bit type 'int'
    CPU: 1 PID: 8450 Comm: syz-executor586 Not tainted 5.11.0-rc3-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x183/0x22e lib/dump_stack.c:120
     ubsan_epilogue lib/ubsan.c:148 [inline]
     __ubsan_handle_shift_out_of_bounds+0x432/0x4d0 lib/ubsan.c:395
     __detect_linklayer+0x2a9/0x330 net/sched/sch_api.c:389
     qdisc_get_rtab+0x2b5/0x410 net/sched/sch_api.c:435
     cbq_init+0x28f/0x12c0 net/sched/sch_cbq.c:1180
     qdisc_create+0x801/0x1470 net/sched/sch_api.c:1246
     tc_modify_qdisc+0x9e3/0x1fc0 net/sched/sch_api.c:1662
     rtnetlink_rcv_msg+0xb1d/0xe60 net/core/rtnetlink.c:5564
     netlink_rcv_skb+0x1f0/0x460 net/netlink/af_netlink.c:2494
     netlink_unicast_kernel net/netlink/af_netlink.c:1304 [inline]
     netlink_unicast+0x7de/0x9b0 net/netlink/af_netlink.c:1330
     netlink_sendmsg+0xaa6/0xe90 net/netlink/af_netlink.c:1919
     sock_sendmsg_nosec net/socket.c:652 [inline]
     sock_sendmsg net/socket.c:672 [inline]
     ____sys_sendmsg+0x5a2/0x900 net/socket.c:2345
     ___sys_sendmsg net/socket.c:2399 [inline]
     __sys_sendmsg+0x319/0x400 net/socket.c:2432
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Cong Wang <cong.wang@bytedance.com>
    Link: https://lore.kernel.org/r/20210114160637.1660597-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22c1b22672f3c56289ea91cf5eaffa61db3e4b2e
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Jan 14 10:52:29 2021 -0800

    net_sched: avoid shift-out-of-bounds in tcindex_set_parms()
    
    commit bcd0cf19ef8258ac31b9a20248b05c15a1f4b4b0 upstream.
    
    tc_index being 16bit wide, we need to check that TCA_TCINDEX_SHIFT
    attribute is not silly.
    
    UBSAN: shift-out-of-bounds in net/sched/cls_tcindex.c:260:29
    shift exponent 255 is too large for 32-bit type 'int'
    CPU: 0 PID: 8516 Comm: syz-executor228 Not tainted 5.10.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x107/0x163 lib/dump_stack.c:120
     ubsan_epilogue+0xb/0x5a lib/ubsan.c:148
     __ubsan_handle_shift_out_of_bounds.cold+0xb1/0x181 lib/ubsan.c:395
     valid_perfect_hash net/sched/cls_tcindex.c:260 [inline]
     tcindex_set_parms.cold+0x1b/0x215 net/sched/cls_tcindex.c:425
     tcindex_change+0x232/0x340 net/sched/cls_tcindex.c:546
     tc_new_tfilter+0x13fb/0x21b0 net/sched/cls_api.c:2127
     rtnetlink_rcv_msg+0x8b6/0xb80 net/core/rtnetlink.c:5555
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2494
     netlink_unicast_kernel net/netlink/af_netlink.c:1304 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1330
     netlink_sendmsg+0x907/0xe40 net/netlink/af_netlink.c:1919
     sock_sendmsg_nosec net/socket.c:652 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:672
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2336
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2390
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2423
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Link: https://lore.kernel.org/r/20210114185229.1742255-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be33a52751d2482630bfc085179edc95356ba7fb
Author: Matteo Croce <mcroce@microsoft.com>
Date:   Fri Jan 15 19:42:08 2021 +0100

    ipv6: create multicast route with RTPROT_KERNEL
    
    commit a826b04303a40d52439aa141035fca5654ccaccd upstream.
    
    The ff00::/8 multicast route is created without specifying the fc_protocol
    field, so the default RTPROT_BOOT value is used:
    
      $ ip -6 -d route
      unicast ::1 dev lo proto kernel scope global metric 256 pref medium
      unicast fe80::/64 dev eth0 proto kernel scope global metric 256 pref medium
      unicast ff00::/8 dev eth0 proto boot scope global metric 256 pref medium
    
    As the documentation says, this value identifies routes installed during
    boot, but the route is created when interface is set up.
    Change the value to RTPROT_KERNEL which is a better value.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Matteo Croce <mcroce@microsoft.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 372d963821abeb4ef92ffdb1a0e94daea6f025c7
Author: Guillaume Nault <gnault@redhat.com>
Date:   Sat Jan 16 11:44:22 2021 +0100

    udp: mask TOS bits in udp_v4_early_demux()
    
    commit 8d2b51b008c25240914984208b2ced57d1dd25a5 upstream.
    
    udp_v4_early_demux() is the only function that calls
    ip_mc_validate_source() with a TOS that hasn't been masked with
    IPTOS_RT_MASK.
    
    This results in different behaviours for incoming multicast UDPv4
    packets, depending on if ip_mc_validate_source() is called from the
    early-demux path (udp_v4_early_demux) or from the regular input path
    (ip_route_input_noref).
    
    ECN would normally not be used with UDP multicast packets, so the
    practical consequences should be limited on that side. However,
    IPTOS_RT_MASK is used to also masks the TOS' high order bits, to align
    with the non-early-demux path behaviour.
    
    Reproducer:
    
      Setup two netns, connected with veth:
      $ ip netns add ns0
      $ ip netns add ns1
      $ ip -netns ns0 link set dev lo up
      $ ip -netns ns1 link set dev lo up
      $ ip link add name veth01 netns ns0 type veth peer name veth10 netns ns1
      $ ip -netns ns0 link set dev veth01 up
      $ ip -netns ns1 link set dev veth10 up
      $ ip -netns ns0 address add 192.0.2.10 peer 192.0.2.11/32 dev veth01
      $ ip -netns ns1 address add 192.0.2.11 peer 192.0.2.10/32 dev veth10
    
      In ns0, add route to multicast address 224.0.2.0/24 using source
      address 198.51.100.10:
      $ ip -netns ns0 address add 198.51.100.10/32 dev lo
      $ ip -netns ns0 route add 224.0.2.0/24 dev veth01 src 198.51.100.10
    
      In ns1, define route to 198.51.100.10, only for packets with TOS 4:
      $ ip -netns ns1 route add 198.51.100.10/32 tos 4 dev veth10
    
      Also activate rp_filter in ns1, so that incoming packets not matching
      the above route get dropped:
      $ ip netns exec ns1 sysctl -wq net.ipv4.conf.veth10.rp_filter=1
    
      Now try to receive packets on 224.0.2.11:
      $ ip netns exec ns1 socat UDP-RECVFROM:1111,ip-add-membership=224.0.2.11:veth10,ignoreeof -
    
      In ns0, send packet to 224.0.2.11 with TOS 4 and ECT(0) (that is,
      tos 6 for socat):
      $ echo test0 | ip netns exec ns0 socat - UDP-DATAGRAM:224.0.2.11:1111,bind=:1111,tos=6
    
      The "test0" message is properly received by socat in ns1, because
      early-demux has no cached dst to use, so source address validation
      is done by ip_route_input_mc(), which receives a TOS that has the
      ECN bits masked.
    
      Now send another packet to 224.0.2.11, still with TOS 4 and ECT(0):
      $ echo test1 | ip netns exec ns0 socat - UDP-DATAGRAM:224.0.2.11:1111,bind=:1111,tos=6
    
      The "test1" message isn't received by socat in ns1, because, now,
      early-demux has a cached dst to use and calls ip_mc_validate_source()
      immediately, without masking the ECN bits.
    
    Fixes: bc044e8db796 ("udp: perform source validation for mcast early demux")
    Signed-off-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ad3d65c19b9ea823331afd58541a0936b9f2c6c
Author: Lecopzer Chen <lecopzer@gmail.com>
Date:   Sat Jan 23 21:01:29 2021 -0800

    kasan: fix incorrect arguments passing in kasan_add_zero_shadow
    
    commit 5dabd1712cd056814f9ab15f1d68157ceb04e741 upstream.
    
    kasan_remove_zero_shadow() shall use original virtual address, start and
    size, instead of shadow address.
    
    Link: https://lkml.kernel.org/r/20210103063847.5963-1-lecopzer@gmail.com
    Fixes: 0207df4fa1a86 ("kernel/memremap, kasan: make ZONE_DEVICE with work with KASAN")
    Signed-off-by: Lecopzer Chen <lecopzer.chen@mediatek.com>
    Reviewed-by: Andrey Konovalov <andreyknvl@google.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Alexander Potapenko <glider@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cb8624526309dfb7979ef4a09205c947788099b
Author: Lecopzer Chen <lecopzer@gmail.com>
Date:   Sat Jan 23 21:01:25 2021 -0800

    kasan: fix unaligned address is unhandled in kasan_remove_zero_shadow
    
    commit a11a496ee6e2ab6ed850233c96b94caf042af0b9 upstream.
    
    During testing kasan_populate_early_shadow and kasan_remove_zero_shadow,
    if the shadow start and end address in kasan_remove_zero_shadow() is not
    aligned to PMD_SIZE, the remain unaligned PTE won't be removed.
    
    In the test case for kasan_remove_zero_shadow():
    
        shadow_start: 0xffffffb802000000, shadow end: 0xffffffbfbe000000
    
        3-level page table:
          PUD_SIZE: 0x40000000 PMD_SIZE: 0x200000 PAGE_SIZE: 4K
    
    0xffffffbf80000000 ~ 0xffffffbfbdf80000 will not be removed because in
    kasan_remove_pud_table(), kasan_pmd_table(*pud) is true but the next
    address is 0xffffffbfbdf80000 which is not aligned to PUD_SIZE.
    
    In the correct condition, this should fallback to the next level
    kasan_remove_pmd_table() but the condition flow always continue to skip
    the unaligned part.
    
    Fix by correcting the condition when next and addr are neither aligned.
    
    Link: https://lkml.kernel.org/r/20210103135621.83129-1-lecopzer@gmail.com
    Fixes: 0207df4fa1a86 ("kernel/memremap, kasan: make ZONE_DEVICE with work with KASAN")
    Signed-off-by: Lecopzer Chen <lecopzer.chen@mediatek.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: YJ Chiang <yj.chiang@mediatek.com>
    Cc: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66fb76f3a8d7a031f8fd80c76f8a2941cc182469
Author: Alexander Lobakin <alobakin@pm.me>
Date:   Fri Jan 15 15:04:40 2021 +0000

    skbuff: back tiny skbs with kmalloc() in __netdev_alloc_skb() too
    
    commit 66c556025d687dbdd0f748c5e1df89c977b6c02a upstream.
    
    Commit 3226b158e67c ("net: avoid 32 x truesize under-estimation for
    tiny skbs") ensured that skbs with data size lower than 1025 bytes
    will be kmalloc'ed to avoid excessive page cache fragmentation and
    memory consumption.
    However, the fix adressed only __napi_alloc_skb() (primarily for
    virtio_net and napi_get_frags()), but the issue can still be achieved
    through __netdev_alloc_skb(), which is still used by several drivers.
    Drivers often allocate a tiny skb for headers and place the rest of
    the frame to frags (so-called copybreak).
    Mirror the condition to __netdev_alloc_skb() to handle this case too.
    
    Since v1 [0]:
     - fix "Fixes:" tag;
     - refine commit message (mention copybreak usecase).
    
    [0] https://lore.kernel.org/netdev/20210114235423.232737-1-alobakin@pm.me
    
    Fixes: a1c7fff7e18f ("net: netdev_alloc_skb() use build_skb()")
    Signed-off-by: Alexander Lobakin <alobakin@pm.me>
    Link: https://lore.kernel.org/r/20210115150354.85967-1-alobakin@pm.me
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a45a83301a69d030246819bea9ea408a2fc765f4
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Jan 18 16:08:12 2021 +0100

    sh_eth: Fix power down vs. is_opened flag ordering
    
    commit f6a2e94b3f9d89cb40771ff746b16b5687650cbb upstream.
    
    sh_eth_close() does a synchronous power down of the device before
    marking it closed.  Revert the order, to make sure the device is never
    marked opened while suspended.
    
    While at it, use pm_runtime_put() instead of pm_runtime_put_sync(), as
    there is no reason to do a synchronous power down.
    
    Fixes: 7fa2955ff70ce453 ("sh_eth: Fix sleeping function called from invalid context")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Sergei Shtylyov <sergei.shtylyov@gmail.com>
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Link: https://lore.kernel.org/r/20210118150812.796791-1-geert+renesas@glider.be
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dd5b858e444d4ac463ebf19ee0ff53c3f6635ea
Author: Necip Fazil Yildiran <fazilyildiran@gmail.com>
Date:   Thu Sep 17 18:45:48 2020 +0300

    sh: dma: fix kconfig dependency for G2_DMA
    
    commit f477a538c14d07f8c45e554c8c5208d588514e98 upstream.
    
    When G2_DMA is enabled and SH_DMA is disabled, it results in the following
    Kbuild warning:
    
    WARNING: unmet direct dependencies detected for SH_DMA_API
      Depends on [n]: SH_DMA [=n]
      Selected by [y]:
      - G2_DMA [=y] && SH_DREAMCAST [=y]
    
    The reason is that G2_DMA selects SH_DMA_API without depending on or
    selecting SH_DMA while SH_DMA_API depends on SH_DMA.
    
    When G2_DMA was first introduced with commit 40f49e7ed77f
    ("sh: dma: Make G2 DMA configurable."), this wasn't an issue since
    SH_DMA_API didn't have such dependency, and this way was the only way to
    enable it since SH_DMA_API was non-visible. However, later SH_DMA_API was
    made visible and dependent on SH_DMA with commit d8902adcc1a9
    ("dmaengine: sh: Add Support SuperH DMA Engine driver").
    
    Let G2_DMA depend on SH_DMA_API instead to avoid Kbuild issues.
    
    Fixes: d8902adcc1a9 ("dmaengine: sh: Add Support SuperH DMA Engine driver")
    Signed-off-by: Necip Fazil Yildiran <fazilyildiran@gmail.com>
    Signed-off-by: Rich Felker <dalias@libc.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9d1f7029832414846f932381178b2eda25e9dda
Author: Guillaume Nault <gnault@redhat.com>
Date:   Sat Jan 16 11:44:26 2021 +0100

    netfilter: rpfilter: mask ecn bits before fib lookup
    
    commit 2e5a6266fbb11ae93c468dfecab169aca9c27b43 upstream.
    
    RT_TOS() only masks one of the two ECN bits. Therefore rpfilter_mt()
    treats Not-ECT or ECT(1) packets in a different way than those with
    ECT(0) or CE.
    
    Reproducer:
    
      Create two netns, connected with a veth:
      $ ip netns add ns0
      $ ip netns add ns1
      $ ip link add name veth01 netns ns0 type veth peer name veth10 netns ns1
      $ ip -netns ns0 link set dev veth01 up
      $ ip -netns ns1 link set dev veth10 up
      $ ip -netns ns0 address add 192.0.2.10/32 dev veth01
      $ ip -netns ns1 address add 192.0.2.11/32 dev veth10
    
      Add a route to ns1 in ns0:
      $ ip -netns ns0 route add 192.0.2.11/32 dev veth01
    
      In ns1, only packets with TOS 4 can be routed to ns0:
      $ ip -netns ns1 route add 192.0.2.10/32 tos 4 dev veth10
    
      Ping from ns0 to ns1 works regardless of the ECN bits, as long as TOS
      is 4:
      $ ip netns exec ns0 ping -Q 4 192.0.2.11   # TOS 4, Not-ECT
        ... 0% packet loss ...
      $ ip netns exec ns0 ping -Q 5 192.0.2.11   # TOS 4, ECT(1)
        ... 0% packet loss ...
      $ ip netns exec ns0 ping -Q 6 192.0.2.11   # TOS 4, ECT(0)
        ... 0% packet loss ...
      $ ip netns exec ns0 ping -Q 7 192.0.2.11   # TOS 4, CE
        ... 0% packet loss ...
    
      Now use iptable's rpfilter module in ns1:
      $ ip netns exec ns1 iptables-legacy -t raw -A PREROUTING -m rpfilter --invert -j DROP
    
      Not-ECT and ECT(1) packets still pass:
      $ ip netns exec ns0 ping -Q 4 192.0.2.11   # TOS 4, Not-ECT
        ... 0% packet loss ...
      $ ip netns exec ns0 ping -Q 5 192.0.2.11   # TOS 4, ECT(1)
        ... 0% packet loss ...
    
      But ECT(0) and ECN packets are dropped:
      $ ip netns exec ns0 ping -Q 6 192.0.2.11   # TOS 4, ECT(0)
        ... 100% packet loss ...
      $ ip netns exec ns0 ping -Q 7 192.0.2.11   # TOS 4, CE
        ... 100% packet loss ...
    
    After this patch, rpfilter doesn't drop ECT(0) and CE packets anymore.
    
    Fixes: 8f97339d3feb ("netfilter: add ipv4 reverse path filter match")
    Signed-off-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfd402c22ca216e6be8d7337da427bfcfaa4e2b3
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Jan 15 19:30:51 2021 +0100

    driver core: Extend device_is_dependent()
    
    commit 3d1cf435e201d1fd63e4346b141881aed086effd upstream.
    
    If the device passed as the target (second argument) to
    device_is_dependent() is not completely registered (that is, it has
    been initialized, but not added yet), but the parent pointer of it
    is set, it may be missing from the list of the parent's children
    and device_for_each_child() called by device_is_dependent() cannot
    be relied on to catch that dependency.
    
    For this reason, modify device_is_dependent() to check the ancestors
    of the target device by following its parent pointer in addition to
    the device_for_each_child() walk.
    
    Fixes: 9ed9895370ae ("driver core: Functional dependencies tracking support")
    Reported-by: Stephan Gerhold <stephan@gerhold.net>
    Tested-by: Stephan Gerhold <stephan@gerhold.net>
    Reviewed-by: Saravana Kannan <saravanak@google.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Link: https://lore.kernel.org/r/17705994.d592GUb2YH@kreacher
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6206c01aa5a0977f0da5ffe3f3587c0e660dd8de
Author: JC Kuo <jckuo@nvidia.com>
Date:   Fri Jan 15 18:19:07 2021 +0200

    xhci: tegra: Delay for disabling LFPS detector
    
    commit da7e0c3c2909a3d9bf8acfe1db3cb213bd7febfb upstream.
    
    Occasionally, we are seeing some SuperSpeed devices resumes right after
    being directed to U3. This commits add 500us delay to ensure LFPS
    detector is disabled before sending ACK to firmware.
    
    [   16.099363] tegra-xusb 70090000.usb: entering ELPG
    [   16.104343] tegra-xusb 70090000.usb: 2-1 isn't suspended: 0x0c001203
    [   16.114576] tegra-xusb 70090000.usb: not all ports suspended: -16
    [   16.120789] tegra-xusb 70090000.usb: entering ELPG failed
    
    The register write passes through a few flop stages of 32KHz clock domain.
    NVIDIA ASIC designer reviewed RTL and suggests 500us delay.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: JC Kuo <jckuo@nvidia.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20210115161907.2875631-3-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b093ae72f9c8e01b5434b89f24e29cc0f9dc776b
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Jan 15 18:19:06 2021 +0200

    xhci: make sure TRB is fully written before giving it to the controller
    
    commit 576667bad341516edc4e18eb85acb0a2b4c9c9d9 upstream.
    
    Once the command ring doorbell is rung the xHC controller will parse all
    command TRBs on the command ring that have the cycle bit set properly.
    
    If the driver just started writing the next command TRB to the ring when
    hardware finished the previous TRB, then HW might fetch an incomplete TRB
    as long as its cycle bit set correctly.
    
    A command TRB is 16 bytes (128 bits) long.
    Driver writes the command TRB in four 32 bit chunks, with the chunk
    containing the cycle bit last. This does however not guarantee that
    chunks actually get written in that order.
    
    This was detected in stress testing when canceling URBs with several
    connected USB devices.
    Two consecutive "Set TR Dequeue pointer" commands got queued right
    after each other, and the second one was only partially written when
    the controller parsed it, causing the dequeue pointer to be set
    to bogus values. This was seen as error messages:
    
    "Mismatch between completed Set TR Deq Ptr command & xHCI internal state"
    
    Solution is to add a write memory barrier before writing the cycle bit.
    
    Cc: <stable@vger.kernel.org>
    Tested-by: Ross Zwisler <zwisler@google.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20210115161907.2875631-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a9f08effeae9c640599691b88f08d15d75694ae
Author: Patrik Jakobsson <patrik.r.jakobsson@gmail.com>
Date:   Mon Jan 18 21:36:15 2021 +0100

    usb: bdc: Make bdc pci driver depend on BROKEN
    
    commit ef02684c4e67d8c35ac83083564135bc7b1d3445 upstream.
    
    The bdc pci driver is going to be removed due to it not existing in the
    wild. This patch turns off compilation of the driver so that stable
    kernels can also pick up the change. This helps the out-of-tree
    facetimehd webcam driver as the pci id conflicts with bdc.
    
    Cc: Al Cooper <alcooperx@gmail.com>
    Cc: <stable@vger.kernel.org>
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Patrik Jakobsson <patrik.r.jakobsson@gmail.com>
    Link: https://lore.kernel.org/r/20210118203615.13995-1-patrik.r.jakobsson@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0336a5a303cbe47f4a4a0615698aa0e7db821daa
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Thu Jan 14 00:09:51 2021 -0800

    usb: udc: core: Use lock when write to soft_connect
    
    commit c28095bc99073ddda65e4f31f6ae0d908d4d5cd8 upstream.
    
    Use lock to guard against concurrent access for soft-connect/disconnect
    operations when writing to soft_connect sysfs.
    
    Fixes: 2ccea03a8f7e ("usb: gadget: introduce UDC Class")
    Cc: stable@vger.kernel.org
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
    Link: https://lore.kernel.org/r/338ea01fbd69b1985ef58f0f59af02c805ddf189.1610611437.git.Thinh.Nguyen@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 317d6d0e50517b4585f7e5fbf493fc720d872d04
Author: Ryan Chen <ryan_chen@aspeedtech.com>
Date:   Fri Jan 8 16:12:38 2021 +0800

    usb: gadget: aspeed: fix stop dma register setting.
    
    commit 4e0dcf62ab4cf917d0cbe751b8bf229a065248d4 upstream.
    
    The vhub engine has two dma mode, one is descriptor list, another
    is single stage DMA. Each mode has different stop register setting.
    Descriptor list operation (bit2) : 0 disable reset, 1: enable reset
    Single mode operation (bit0) : 0 : disable, 1: enable
    
    Fixes: 7ecca2a4080c ("usb/gadget: Add driver for Aspeed SoC virtual hub")
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Acked-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Ryan Chen <ryan_chen@aspeedtech.com>
    Link: https://lore.kernel.org/r/20210108081238.10199-2-ryan_chen@aspeedtech.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93782abb6d802c9ac12ffb3193daea4da7c4d6f8
Author: Longfang Liu <liulongfang@huawei.com>
Date:   Tue Jan 12 09:57:27 2021 +0800

    USB: ehci: fix an interrupt calltrace error
    
    commit 643a4df7fe3f6831d14536fd692be85f92670a52 upstream.
    
    The system that use Synopsys USB host controllers goes to suspend
    when using USB audio player. This causes the USB host controller
    continuous send interrupt signal to system, When the number of
    interrupts exceeds 100000, the system will forcibly close the
    interrupts and output a calltrace error.
    
    When the system goes to suspend, the last interrupt is reported to
    the driver. At this time, the system has set the state to suspend.
    This causes the last interrupt to not be processed by the system and
    not clear the interrupt flag. This uncleared interrupt flag constantly
    triggers new interrupt event. This causing the driver to receive more
    than 100,000 interrupts, which causes the system to forcibly close the
    interrupt report and report the calltrace error.
    
    so, when the driver goes to sleep and changes the system state to
    suspend, the interrupt flag needs to be cleared.
    
    Signed-off-by: Longfang Liu <liulongfang@huawei.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/1610416647-45774-1-git-send-email-liulongfang@huawei.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d18b110dc1f6dbd4a667dfbc3af0f1ea2efe6ff
Author: Eugene Korenevsky <ekorenevsky@astralinux.ru>
Date:   Sun Jan 10 20:36:09 2021 +0300

    ehci: fix EHCI host controller initialization sequence
    
    commit 280a9045bb18833db921b316a5527d2b565e9f2e upstream.
    
    According to EHCI spec, EHCI HC clears USBSTS.HCHalted whenever
    USBCMD.RS=1.
    
    However, it is a good practice to wait some time after setting USBCMD.RS
    (approximately 100ms) until USBSTS.HCHalted become zero.
    
    Without this waiting, VirtualBox's EHCI virtual HC accidentally hangs
    (see BugLink).
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=211095
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Eugene Korenevsky <ekorenevsky@astralinux.ru>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210110173609.GA17313@himera.home
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c6cfc109e5d2f6f72f93b27f77583a8d67c0f86
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Dec 23 20:19:31 2020 +0100

    serial: mvebu-uart: fix tx lost characters at power off
    
    commit 54ca955b5a4024e2ce0f206b03adb7109bc4da26 upstream.
    
    Commit c685af1108d7 ("serial: mvebu-uart: fix tx lost characters") fixed tx
    lost characters at low baud rates but started causing tx lost characters
    when kernel is going to power off or reboot.
    
    TX_EMP tells us when transmit queue is empty therefore all characters were
    transmitted. TX_RDY tells us when CPU can send a new character.
    
    Therefore we need to use different check prior transmitting new character
    and different check after all characters were sent.
    
    This patch splits polling code into two functions: wait_for_xmitr() which
    waits for TX_RDY and wait_for_xmite() which waits for TX_EMP.
    
    When rebooting A3720 platform without this patch on UART is print only:
    [   42.699�
    
    And with this patch on UART is full output:
    [   39.530216] reboot: Restarting system
    
    Fixes: c685af1108d7 ("serial: mvebu-uart: fix tx lost characters")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201223191931.18343-1-pali@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f53a6b46c9da2f61ed841c84683a7e93337229b
Author: Wang Hui <john.wanghui@huawei.com>
Date:   Fri Jan 15 22:59:16 2021 +0300

    stm class: Fix module init return on allocation failure
    
    commit 927633a6d20af319d986f3e42c3ef9f6d7835008 upstream.
    
    In stm_heartbeat_init(): return value gets reset after the first
    iteration by stm_source_register_device(), so allocation failures
    after that will, after a clean up, return success. Fix that.
    
    Fixes: 119291853038 ("stm class: Add heartbeat stm source device")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hui <john.wanghui@huawei.com>
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Link: https://lore.kernel.org/r/20210115195917.3184-2-alexander.shishkin@linux.intel.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b037cca5a33351233f4ea08027ccc6a7ec2ebc81
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Fri Jan 15 22:59:17 2021 +0300

    intel_th: pci: Add Alder Lake-P support
    
    commit cb5c681ab9037e25fcca20689c82cf034566d610 upstream.
    
    This adds support for the Trace Hub in Alder Lake-P.
    
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Link: https://lore.kernel.org/r/20210115195917.3184-3-alexander.shishkin@linux.intel.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c107d3304034bc8623162e8d4bae3a50e3f11a93
Author: Mathias Kresin <dev@kresin.me>
Date:   Thu Jan 7 22:36:03 2021 +0100

    irqchip/mips-cpu: Set IPI domain parent chip
    
    commit 599b3063adf4bf041a87a69244ee36aded0d878f upstream.
    
    Since commit 55567976629e ("genirq/irqdomain: Allow partial trimming of
    irq_data hierarchy") the irq_data chain is valided.
    
    The irq_domain_trim_hierarchy() function doesn't consider the irq + ipi
    domain hierarchy as valid, since the ipi domain has the irq domain set
    as parent, but the parent domain has no chip set. Hence the boot ends in
    a kernel panic.
    
    Set the chip for the parent domain as it is done in the mips gic irq
    driver, to have a valid irq_data chain.
    
    Fixes: 3838a547fda2 ("irqchip: mips-cpu: Introduce IPI IRQ domain support")
    Cc: <stable@vger.kernel.org> # v5.10+
    Signed-off-by: Mathias Kresin <dev@kresin.me>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210107213603.1637781-1-dev@kresin.me
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 166bd161d620bf0cd459b76c8da6ca862255c537
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Dec 9 11:46:49 2020 +0100

    iio: ad5504: Fix setting power-down state
    
    commit efd597b2839a9895e8a98fcb0b76d2f545802cd4 upstream.
    
    The power-down mask of the ad5504 is actually a power-up mask. Meaning if
    a bit is set the corresponding channel is powered up and if it is not set
    the channel is powered down.
    
    The driver currently has this the wrong way around, resulting in the
    channel being powered up when requested to be powered down and vice versa.
    
    Fixes: 3bbbf150ffde ("staging:iio:dac:ad5504: Use strtobool for boolean values")
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Link: https://lore.kernel.org/r/20201209104649.5794-1-lars@metafoo.de
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5408824636fa0dfedb9ecb0d94abd573131bfbbe
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Wed Jan 20 20:41:37 2021 +0900

    can: peak_usb: fix use after free bugs
    
    [ Upstream commit 50aca891d7a554db0901b245167cd653d73aaa71 ]
    
    After calling peak_usb_netif_rx_ni(skb), dereferencing skb is unsafe.
    Especially, the can_frame cf which aliases skb memory is accessed
    after the peak_usb_netif_rx_ni().
    
    Reordering the lines solves the issue.
    
    Fixes: 0a25e1f4f185 ("can: peak_usb: add support for PEAK new CANFD USB adapters")
    Link: https://lore.kernel.org/r/20210120114137.200019-4-mailhol.vincent@wanadoo.fr
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b820875a32a3443d67bfd368e93038354e98052
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Wed Jan 20 20:41:36 2021 +0900

    can: vxcan: vxcan_xmit: fix use after free bug
    
    [ Upstream commit 75854cad5d80976f6ea0f0431f8cedd3bcc475cb ]
    
    After calling netif_rx_ni(skb), dereferencing skb is unsafe.
    Especially, the canfd_frame cfd which aliases skb memory is accessed
    after the netif_rx_ni().
    
    Fixes: a8f820a380a2 ("can: add Virtual CAN Tunnel driver (vxcan)")
    Link: https://lore.kernel.org/r/20210120114137.200019-3-mailhol.vincent@wanadoo.fr
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08ab951787098ae0b6c0364aeea7a8138226f234
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Wed Jan 20 20:41:35 2021 +0900

    can: dev: can_restart: fix use after free bug
    
    [ Upstream commit 03f16c5075b22c8902d2af739969e878b0879c94 ]
    
    After calling netif_rx_ni(skb), dereferencing skb is unsafe.
    Especially, the can_frame cf which aliases skb memory is accessed
    after the netif_rx_ni() in:
          stats->rx_bytes += cf->len;
    
    Reordering the lines solves the issue.
    
    Fixes: 39549eef3587 ("can: CAN Network device driver and Netlink interface")
    Link: https://lore.kernel.org/r/20210120114137.200019-2-mailhol.vincent@wanadoo.fr
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d6327020b36598d45ee3bca3a68b46209975d7c
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Tue Jan 19 10:59:30 2021 +0800

    selftests: net: fib_tests: remove duplicate log test
    
    [ Upstream commit fd23d2dc180fccfad4b27a8e52ba1bc415d18509 ]
    
    The previous test added an address with a specified metric and check if
    correspond route was created. I somehow added two logs for the same
    test. Remove the duplicated one.
    
    Reported-by: Antoine Tenart <atenart@redhat.com>
    Fixes: 0d29169a708b ("selftests/net/fib_tests: update addr_metric_test for peer route testing")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Link: https://lore.kernel.org/r/20210119025930.2810532-1-liuhangbin@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 445aa8f4db6019c0405ce9de4b0c5d5cab659cee
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Jan 14 15:34:32 2021 +0100

    platform/x86: intel-vbtn: Drop HP Stream x360 Convertible PC 11 from allow-list
    
    [ Upstream commit 070222731be52d741e55d8967b1764482b81e54c ]
    
    THe HP Stream x360 Convertible PC 11 DSDT has the following VGBS function:
    
                Method (VGBS, 0, Serialized)
                {
                    If ((^^PCI0.LPCB.EC0.ROLS == Zero))
                    {
                        VBDS = Zero
                    }
                    Else
                    {
                        VBDS = Zero
                    }
    
                    Return (VBDS) /* \_SB_.VGBI.VBDS */
                }
    
    Which is obviously wrong, because it always returns 0 independent of the
    2-in-1 being in laptop or tablet mode. This causes the intel-vbtn driver
    to initially report SW_TABLET_MODE = 1 to userspace, which is known to
    cause problems when the 2-in-1 is actually in laptop mode.
    
    During earlier testing this turned out to not be a problem because the
    2-in-1 would do a Notify(..., 0xCC) or Notify(..., 0xCD) soon after
    the intel-vbtn driver loaded, correcting the SW_TABLET_MODE state.
    
    Further testing however has shown that this Notify() soon after the
    intel-vbtn driver loads, does not always happen. When the Notify
    does not happen, then intel-vbtn reports SW_TABLET_MODE = 1 resulting in
    a non-working touchpad.
    
    IOW the tablet-mode reporting is not reliable on this device, so it
    should be dropped from the allow-list, fixing the touchpad sometimes
    not working.
    
    Fixes: 8169bd3e6e19 ("platform/x86: intel-vbtn: Switch to an allow-list for SW_TABLET_MODE reporting")
    Link: https://lore.kernel.org/r/20210114143432.31750-1-hdegoede@redhat.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97db41d7c828c8e20f6d7444f7464a98f63f5aa8
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Sat Jan 9 13:43:08 2021 +0100

    i2c: octeon: check correct size of maximum RECV_LEN packet
    
    [ Upstream commit 1b2cfa2d1dbdcc3b6dba1ecb7026a537a1d7277f ]
    
    I2C_SMBUS_BLOCK_MAX defines already the maximum number as defined in the
    SMBus 2.0 specs. No reason to add one to it.
    
    Fixes: 886f6f8337dd ("i2c: octeon: Support I2C_M_RECV_LEN")
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Robert Richter <rric@kernel.org>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c47d977b73469fcb50e73fb8cd7a40808d025a9
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Jan 5 00:41:04 2021 +0100

    scsi: megaraid_sas: Fix MEGASAS_IOC_FIRMWARE regression
    
    [ Upstream commit b112036535eda34460677ea883eaecc3a45a435d ]
    
    Phil Oester reported that a fix for a possible buffer overrun that I sent
    caused a regression that manifests in this output:
    
     Event Message: A PCI parity error was detected on a component at bus 0 device 5 function 0.
     Severity: Critical
     Message ID: PCI1308
    
    The original code tried to handle the sense data pointer differently when
    using 32-bit 64-bit DMA addressing, which would lead to a 32-bit dma_addr_t
    value of 0x11223344 to get stored
    
    32-bit kernel:       44 33 22 11 ?? ?? ?? ??
    64-bit LE kernel:    44 33 22 11 00 00 00 00
    64-bit BE kernel:    00 00 00 00 44 33 22 11
    
    or a 64-bit dma_addr_t value of 0x1122334455667788 to get stored as
    
    32-bit kernel:       88 77 66 55 ?? ?? ?? ??
    64-bit kernel:       88 77 66 55 44 33 22 11
    
    In my patch, I tried to ensure that the same value is used on both 32-bit
    and 64-bit kernels, and picked what seemed to be the most sensible
    combination, storing 32-bit addresses in the first four bytes (as 32-bit
    kernels already did), and 64-bit addresses in eight consecutive bytes (as
    64-bit kernels already did), but evidently this was incorrect.
    
    Always storing the dma_addr_t pointer as 64-bit little-endian,
    i.e. initializing the second four bytes to zero in case of 32-bit
    addressing, apparently solved the problem for Phil, and is consistent with
    what all 64-bit little-endian machines did before.
    
    I also checked in the history that in previous versions of the code, the
    pointer was always in the first four bytes without padding, and that
    previous attempts to fix 64-bit user space, big-endian architectures and
    64-bit DMA were clearly flawed and seem to have introduced made this worse.
    
    Link: https://lore.kernel.org/r/20210104234137.438275-1-arnd@kernel.org
    Fixes: 381d34e376e3 ("scsi: megaraid_sas: Check user-provided offsets")
    Fixes: 107a60dd71b5 ("scsi: megaraid_sas: Add support for 64bit consistent DMA")
    Fixes: 94cd65ddf4d7 ("[SCSI] megaraid_sas: addded support for big endian architecture")
    Fixes: 7b2519afa1ab ("[SCSI] megaraid_sas: fix 64 bit sense pointer truncation")
    Reported-by: Phil Oester <kernel@linuxace.com>
    Tested-by: Phil Oester <kernel@linuxace.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58e04e3e8fb1459a090ce3abc83e545ce6989994
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 13 17:12:52 2021 +1000

    drm/nouveau/kms/nv50-: fix case where notifier buffer is at offset 0
    
    [ Upstream commit caeb6ab899c3d36a74cda6e299c6e1c9c4e2a22e ]
    
    VRAM offset 0 is a valid address, triggered on GA102.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d27d6aae7a4e4efa5ddacd7fb1b330e8ef3c11da
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 13 17:12:52 2021 +1000

    drm/nouveau/mmu: fix vram heap sizing
    
    [ Upstream commit add42781ad76c5ae65127bf13852a4c6b2f08849 ]
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02d34d2ed979630ec0e8b0a39e6330537fb16da6
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 13 17:12:52 2021 +1000

    drm/nouveau/i2c/gm200: increase width of aux semaphore owner fields
    
    [ Upstream commit ba6e9ab0fcf3d76e3952deb12b5f993991621d9c ]
    
    Noticed while debugging GA102.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c46f721afbae3b782c6e92a59a802d4c8a460331
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 13 17:12:52 2021 +1000

    drm/nouveau/privring: ack interrupts the same way as RM
    
    [ Upstream commit e05e06cd34f5311f677294a08b609acfbc315236 ]
    
    Whatever it is that we were doing before doesn't work on Ampere.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dec68235f07c5878d95698537e7100d74b5a073d
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Jan 13 17:12:52 2021 +1000

    drm/nouveau/bios: fix issue shadowing expansion ROMs
    
    [ Upstream commit 402a89660e9dc880710b12773076a336c9dab3d7 ]
    
    This issue has generally been covered up by the presence of additional
    expansion ROMs after the ones we're interested in, with header fetches
    of subsequent images loading enough of the ROM to hide the issue.
    
    Noticed on GA102, which lacks a type 0x70 image compared to TU102,.
    
    [  906.364197] nouveau 0000:09:00.0: bios: 00000000: type 00, 65024 bytes
    [  906.381205] nouveau 0000:09:00.0: bios: 0000fe00: type 03, 91648 bytes
    [  906.405213] nouveau 0000:09:00.0: bios: 00026400: type e0, 22016 bytes
    [  906.410984] nouveau 0000:09:00.0: bios: 0002ba00: type e0, 366080 bytes
    
    vs
    
    [   22.961901] nouveau 0000:09:00.0: bios: 00000000: type 00, 60416 bytes
    [   22.984174] nouveau 0000:09:00.0: bios: 0000ec00: type 03, 71168 bytes
    [   23.010446] nouveau 0000:09:00.0: bios: 00020200: type e0, 48128 bytes
    [   23.028220] nouveau 0000:09:00.0: bios: 0002be00: type e0, 140800 bytes
    [   23.080196] nouveau 0000:09:00.0: bios: 0004e400: type 70, 7168 bytes
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cdb2e1449399e401e4a1d0b66b5a89961c279e86
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Wed Jan 13 13:26:02 2021 +0000

    xen: Fix event channel callback via INTX/GSI
    
    [ Upstream commit 3499ba8198cad47b731792e5e56b9ec2a78a83a2 ]
    
    For a while, event channel notification via the PCI platform device
    has been broken, because we attempt to communicate with xenstore before
    we even have notifications working, with the xs_reset_watches() call
    in xs_init().
    
    We tend to get away with this on Xen versions below 4.0 because we avoid
    calling xs_reset_watches() anyway, because xenstore might not cope with
    reading a non-existent key. And newer Xen *does* have the vector
    callback support, so we rarely fall back to INTX/GSI delivery.
    
    To fix it, clean up a bit of the mess of xs_init() and xenbus_probe()
    startup. Call xs_init() directly from xenbus_init() only in the !XS_HVM
    case, deferring it to be called from xenbus_probe() in the XS_HVM case
    instead.
    
    Then fix up the invocation of xenbus_probe() to happen either from its
    device_initcall if the callback is available early enough, or when the
    callback is finally set up. This means that the hack of calling
    xenbus_probe() from a workqueue after the first interrupt, or directly
    from the PCI platform device setup, is no longer needed.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20210113132606.422794-2-dwmw2@infradead.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0b32d4522b40c5e7fd8679ee155cec95e532a0d
Author: Peter Geis <pgwipeout@gmail.com>
Date:   Fri Jan 8 13:59:12 2021 +0000

    clk: tegra30: Add hda clock default rates to clock driver
    
    [ Upstream commit f4eccc7fea203cfb35205891eced1ab51836f362 ]
    
    Current implementation defaults the hda clocks to clk_m. This causes hda
    to run too slow to operate correctly. Fix this by defaulting to pll_p and
    setting the frequency to the correct rate.
    
    This matches upstream t124 and downstream t30.
    
    Acked-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Ion Agorria <ion@agorria.com>
    Acked-by: Sameer Pujar <spujar@nvidia.com>
    Acked-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Peter Geis <pgwipeout@gmail.com>
    Link: https://lore.kernel.org/r/20210108135913.2421585-2-pgwipeout@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5305246aac12dc1de8d4cb5d5e2b4f29dda7ec49
Author: Seth Miller <miller.seth@gmail.com>
Date:   Mon Jan 4 22:58:12 2021 -0600

    HID: Ignore battery for Elan touchscreen on ASUS UX550
    
    [ Upstream commit 7c38e769d5c508939ce5dc26df72602f3c902342 ]
    
    Battery status is being reported for the Elan touchscreen on ASUS
    UX550 laptops despite not having a batter. It always shows either 0 or
    1%.
    
    Signed-off-by: Seth Miller <miller.seth@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c281b9c9aa0cbf7f7d6cad8ce164902a61712767
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Sun Dec 13 22:50:34 2020 +0900

    riscv: Fix kernel time_init()
    
    [ Upstream commit 11f4c2e940e2f317c9d8fb5a79702f2a4a02ff98 ]
    
    If of_clk_init() is not called in time_init(), clock providers defined
    in the system device tree are not initialized, resulting in failures for
    other devices to initialize due to missing clocks.
    Similarly to other architectures and to the default kernel time_init()
    implementation, call of_clk_init() before executing timer_probe() in
    time_init().
    
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Acked-by: Stephen Boyd <sboyd@kernel.org>
    Reviewed-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62aea28af5c1b23c5d7c36475bd4d6e91a49f8bd
Author: Nilesh Javali <njavali@marvell.com>
Date:   Thu Dec 17 02:51:44 2020 -0800

    scsi: qedi: Correct max length of CHAP secret
    
    [ Upstream commit d50c7986fbf0e2167279e110a2ed5bd8e811c660 ]
    
    The CHAP secret displayed garbage characters causing iSCSI login
    authentication failure. Correct the CHAP password max length.
    
    Link: https://lore.kernel.org/r/20201217105144.8055-1-njavali@marvell.com
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b397fcae2207963747c6f947ef4d06575553eaef
Author: Can Guo <cang@codeaurora.org>
Date:   Mon Dec 28 04:04:36 2020 -0800

    scsi: ufs: Correct the LUN used in eh_device_reset_handler() callback
    
    [ Upstream commit 35fc4cd34426c242ab015ef280853b7bff101f48 ]
    
    Users can initiate resets to specific SCSI device/target/host through
    IOCTL. When this happens, the SCSI cmd passed to eh_device/target/host
    _reset_handler() callbacks is initialized with a request whose tag is -1.
    In this case it is not right for eh_device_reset_handler() callback to
    count on the LUN get from hba->lrb[-1]. Fix it by getting LUN from the SCSI
    device associated with the SCSI cmd.
    
    Link: https://lore.kernel.org/r/1609157080-26283-1-git-send-email-cang@codeaurora.org
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Reviewed-by: Stanley Chu <stanley.chu@mediatek.com>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a55e384c1b527444773fe1933284ed045a20287
Author: Cezary Rojewski <cezary.rojewski@intel.com>
Date:   Thu Dec 17 11:54:01 2020 +0100

    ASoC: Intel: haswell: Add missing pm_ops
    
    [ Upstream commit bb224c3e3e41d940612d4cc9573289cdbd5cb8f5 ]
    
    haswell machine board is missing pm_ops what prevents it from undergoing
    suspend-resume procedure successfully. Assign default snd_soc_pm_ops so
    this is no longer the case.
    
    Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lore.kernel.org/r/20201217105401.27865-1-cezary.rojewski@intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9edfa9e4a83d07cd932048a7ee2b61ed326d93fd
Author: Pan Bian <bianpan2016@163.com>
Date:   Tue Jan 19 04:11:27 2021 -0800

    drm/atomic: put state on error path
    
    commit 43b67309b6b2a3c08396cc9b3f83f21aa529d273 upstream.
    
    Put the state before returning error code.
    
    Fixes: 44596b8c4750 ("drm/atomic: Unify conflicting encoder handling.")
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210119121127.84127-1-bianpan2016@163.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf750e09d17f25cf763644168417fcad73e3ce0c
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Jan 20 06:02:31 2021 -0500

    dm integrity: fix a crash if "recalculate" used without "internal_hash"
    
    commit 2d06dfecb132a1cc2e374a44eae83b5c4356b8b4 upstream.
    
    Recalculate can only be specified with internal_hash.
    
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97c5846e04532a0651da7016b4d35862993ea56d
Author: Hannes Reinecke <hare@suse.de>
Date:   Thu Jan 21 18:50:56 2021 +0100

    dm: avoid filesystem lookup in dm_get_dev_t()
    
    commit 809b1e4945774c9ec5619a8f4e2189b7b3833c0c upstream.
    
    This reverts commit
    644bda6f3460 ("dm table: fall back to getting device using name_to_dev_t()")
    
    dm_get_dev_t() is just used to convert an arbitrary 'path' string
    into a dev_t. It doesn't presume that the device is present; that
    check will be done later, as the only caller is dm_get_device(),
    which does a dm_get_table_device() later on, which will properly
    open the device.
    
    So if the path string already _is_ in major:minor representation
    we can convert it directly, avoiding a recursion into the filesystem
    to lookup the block device.
    
    This avoids a hang in multipath_message() when the filesystem is
    inaccessible.
    
    Fixes: 644bda6f3460 ("dm table: fall back to getting device using name_to_dev_t()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Martin Wilck <mwilck@suse.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcf374506f46795d85cd9183f00b43af9d44c7db
Author: Alex Leibovich <alexl@marvell.com>
Date:   Fri Dec 11 15:16:56 2020 +0100

    mmc: sdhci-xenon: fix 1.8v regulator stabilization
    
    commit 1a3ed0dc3594d99ff341ec63865a40519ea24b8d upstream.
    
    Automatic Clock Gating is a feature used for the power consumption
    optimisation. It turned out that during early init phase it may prevent the
    stable voltage switch to 1.8V - due to that on some platforms an endless
    printout in dmesg can be observed: "mmc1: 1.8V regulator output did not
    became stable" Fix the problem by disabling the ACG at very beginning of
    the sdhci_init and let that be enabled later.
    
    Fixes: 3a3748dba881 ("mmc: sdhci-xenon: Add Marvell Xenon SDHC core functionality")
    Signed-off-by: Alex Leibovich <alexl@marvell.com>
    Signed-off-by: Marcin Wojtas <mw@semihalf.com>
    Cc: stable@vger.kernel.org
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/20201211141656.24915-1-mw@semihalf.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11e702f83c2546810906e4b98c7be2091055170e
Author: Peter Collingbourne <pcc@google.com>
Date:   Thu Jan 14 12:14:05 2021 -0800

    mmc: core: don't initialize block size from ext_csd if not present
    
    commit b503087445ce7e45fabdee87ca9e460d5b5b5168 upstream.
    
    If extended CSD was not available, the eMMC driver would incorrectly
    set the block size to 0, as the data_sector_size field of ext_csd
    was never initialized. This issue was exposed by commit 817046ecddbc
    ("block: Align max_hw_sectors to logical blocksize") which caused
    max_sectors and max_hw_sectors to be set to 0 after setting the block
    size to 0, resulting in a kernel panic in bio_split when attempting
    to read from the device. Fix it by only reading the block size from
    ext_csd if it is available.
    
    Fixes: a5075eb94837 ("mmc: block: Allow disabling 512B sector size emulation")
    Signed-off-by: Peter Collingbourne <pcc@google.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Link: https://linux-review.googlesource.com/id/If244d178da4d86b52034459438fec295b02d6e60
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210114201405.2934886-1-pcc@google.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 339f26ffdf3864904dbeed1d12ae196cc8499f29
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Wed Dec 16 11:22:14 2020 -0500

    btrfs: fix lockdep splat in btrfs_recover_relocation
    
    commit fb286100974e7239af243bc2255a52f29442f9c8 upstream.
    
    While testing the error paths of relocation I hit the following lockdep
    splat:
    
      ======================================================
      WARNING: possible circular locking dependency detected
      5.10.0-rc6+ #217 Not tainted
      ------------------------------------------------------
      mount/779 is trying to acquire lock:
      ffffa0e676945418 (&fs_info->balance_mutex){+.+.}-{3:3}, at: btrfs_recover_balance+0x2f0/0x340
    
      but task is already holding lock:
      ffffa0e60ee31da8 (btrfs-root-00){++++}-{3:3}, at: __btrfs_tree_read_lock+0x27/0x100
    
      which lock already depends on the new lock.
    
      the existing dependency chain (in reverse order) is:
    
      -> #2 (btrfs-root-00){++++}-{3:3}:
             down_read_nested+0x43/0x130
             __btrfs_tree_read_lock+0x27/0x100
             btrfs_read_lock_root_node+0x31/0x40
             btrfs_search_slot+0x462/0x8f0
             btrfs_update_root+0x55/0x2b0
             btrfs_drop_snapshot+0x398/0x750
             clean_dirty_subvols+0xdf/0x120
             btrfs_recover_relocation+0x534/0x5a0
             btrfs_start_pre_rw_mount+0xcb/0x170
             open_ctree+0x151f/0x1726
             btrfs_mount_root.cold+0x12/0xea
             legacy_get_tree+0x30/0x50
             vfs_get_tree+0x28/0xc0
             vfs_kern_mount.part.0+0x71/0xb0
             btrfs_mount+0x10d/0x380
             legacy_get_tree+0x30/0x50
             vfs_get_tree+0x28/0xc0
             path_mount+0x433/0xc10
             __x64_sys_mount+0xe3/0x120
             do_syscall_64+0x33/0x40
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #1 (sb_internal#2){.+.+}-{0:0}:
             start_transaction+0x444/0x700
             insert_balance_item.isra.0+0x37/0x320
             btrfs_balance+0x354/0xf40
             btrfs_ioctl_balance+0x2cf/0x380
             __x64_sys_ioctl+0x83/0xb0
             do_syscall_64+0x33/0x40
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #0 (&fs_info->balance_mutex){+.+.}-{3:3}:
             __lock_acquire+0x1120/0x1e10
             lock_acquire+0x116/0x370
             __mutex_lock+0x7e/0x7b0
             btrfs_recover_balance+0x2f0/0x340
             open_ctree+0x1095/0x1726
             btrfs_mount_root.cold+0x12/0xea
             legacy_get_tree+0x30/0x50
             vfs_get_tree+0x28/0xc0
             vfs_kern_mount.part.0+0x71/0xb0
             btrfs_mount+0x10d/0x380
             legacy_get_tree+0x30/0x50
             vfs_get_tree+0x28/0xc0
             path_mount+0x433/0xc10
             __x64_sys_mount+0xe3/0x120
             do_syscall_64+0x33/0x40
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      other info that might help us debug this:
    
      Chain exists of:
        &fs_info->balance_mutex --> sb_internal#2 --> btrfs-root-00
    
       Possible unsafe locking scenario:
    
             CPU0                    CPU1
             ----                    ----
        lock(btrfs-root-00);
                                     lock(sb_internal#2);
                                     lock(btrfs-root-00);
        lock(&fs_info->balance_mutex);
    
       *** DEADLOCK ***
    
      2 locks held by mount/779:
       #0: ffffa0e60dc040e0 (&type->s_umount_key#47/1){+.+.}-{3:3}, at: alloc_super+0xb5/0x380
       #1: ffffa0e60ee31da8 (btrfs-root-00){++++}-{3:3}, at: __btrfs_tree_read_lock+0x27/0x100
    
      stack backtrace:
      CPU: 0 PID: 779 Comm: mount Not tainted 5.10.0-rc6+ #217
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-2.fc32 04/01/2014
      Call Trace:
       dump_stack+0x8b/0xb0
       check_noncircular+0xcf/0xf0
       ? trace_call_bpf+0x139/0x260
       __lock_acquire+0x1120/0x1e10
       lock_acquire+0x116/0x370
       ? btrfs_recover_balance+0x2f0/0x340
       __mutex_lock+0x7e/0x7b0
       ? btrfs_recover_balance+0x2f0/0x340
       ? btrfs_recover_balance+0x2f0/0x340
       ? rcu_read_lock_sched_held+0x3f/0x80
       ? kmem_cache_alloc_trace+0x2c4/0x2f0
       ? btrfs_get_64+0x5e/0x100
       btrfs_recover_balance+0x2f0/0x340
       open_ctree+0x1095/0x1726
       btrfs_mount_root.cold+0x12/0xea
       ? rcu_read_lock_sched_held+0x3f/0x80
       legacy_get_tree+0x30/0x50
       vfs_get_tree+0x28/0xc0
       vfs_kern_mount.part.0+0x71/0xb0
       btrfs_mount+0x10d/0x380
       ? __kmalloc_track_caller+0x2f2/0x320
       legacy_get_tree+0x30/0x50
       vfs_get_tree+0x28/0xc0
       ? capable+0x3a/0x60
       path_mount+0x433/0xc10
       __x64_sys_mount+0xe3/0x120
       do_syscall_64+0x33/0x40
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    This is straightforward to fix, simply release the path before we setup
    the balance_ctl.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7efb1858e28b96b4ea0eac7616dc90290de42335
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Jan 15 22:57:52 2021 +0100

    ACPI: scan: Make acpi_bus_get_device() clear return pointer on error
    
    commit 78a18fec5258c8df9435399a1ea022d73d3eceb9 upstream.
    
    Set the acpi_device pointer which acpi_bus_get_device() returns-by-
    reference to NULL on errors.
    
    We've recently had 2 cases where callers of acpi_bus_get_device()
    did not properly error check the return value, so set the returned-
    by-reference acpi_device pointer to NULL, because at least some
    callers of acpi_bus_get_device() expect that to be done on errors.
    
    [ rjw: This issue was exposed by commit 71da201f38df ("ACPI: scan:
      Defer enumeration of devices with _DEP lists") which caused it to
      be much more likely to occur on some systems, but the real defect
      had been introduced by an earlier commit. ]
    
    Fixes: 40e7fcb19293 ("ACPI: Add _DEP support to fix battery issue on Asus T100TA")
    Fixes: bcfcd409d4db ("usb: split code locating ACPI companion into port and device")
    Reported-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Tested-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Diagnosed-by: Rafael J. Wysocki <rafael@kernel.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Cc: All applicable <stable@vger.kernel.org>
    [ rjw: Subject and changelog edits ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8ec8ccf1bfdf58ee1ea4716ea61e626c08f40dd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 14 08:24:53 2021 +0100

    ALSA: hda/via: Add minimum mute flag
    
    commit 67ea698c3950d10925be33c21ca49ffb64e21842 upstream.
    
    It turned out that VIA codecs also mute the sound in the lowest mixer
    level.  Turn on the dac_min_mute flag to indicate the mute-as-minimum
    in TLV like already done in Conexant and IDT codecs.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=210559
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210114072453.11379-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0c7be5b9487708785a5b2e1460068abe8fa490f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 15 10:34:28 2021 +0100

    ALSA: seq: oss: Fix missing error check in snd_seq_oss_synth_make_info()
    
    commit 217bfbb8b0bfa24619b11ab75c135fec99b99b20 upstream.
    
    snd_seq_oss_synth_make_info() didn't check the error code from
    snd_seq_oss_midi_make_info(), and this leads to the call of strlcpy()
    with the uninitialized string as the source, which may lead to the
    access over the limit.
    
    Add the proper error check for avoiding the failure.
    
    Reported-by: syzbot+e42504ff21cff05a595f@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210115093428.15882-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9de43eada2af5d0353a9429394a14ffdf4f26a5a
Author: Mikko Perttunen <mperttunen@nvidia.com>
Date:   Tue Jan 12 12:22:25 2021 +0200

    i2c: bpmp-tegra: Ignore unknown I2C_M flags
    
    commit bc1c2048abbe3c3074b4de91d213595c57741a6b upstream.
    
    In order to not to start returning errors when new I2C_M flags are
    added, change behavior to just ignore all flags that we don't know
    about. This includes the I2C_M_DMA_SAFE flag that already exists but
    causes -EINVAL to be returned for valid transactions.
    
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Mikko Perttunen <mperttunen@nvidia.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
