commit 734eb1fd2073f503f5c6b44f1c0d453ca6986b84
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jan 5 12:42:40 2022 +0100

    Linux 5.15.13
    
    Link: https://lore.kernel.org/r/20220103142056.911344037@linuxfoundation.org
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Rudi Heitbaum <rudi@heitbaum.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20220104073845.629257314@linuxfoundation.org
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Zan Aziz <zanaziz313@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc5fce3dff9a7f3c75311128dcb17daf96776b82
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Wed Dec 15 10:06:36 2021 +0200

    perf scripts python: intel-pt-events.py: Fix printing of switch events
    
    commit 0f80bfbf4919e32f52fe1312c3900ff4fbb7eeb9 upstream.
    
    The intel-pt-events.py script displays only the last of consecutive switch
    statements but that may not be the last switch event for the CPU. Fix by
    keeping a dictionary of last context switch keyed by CPU, and make it
    possible to see all switch events by adding option --all-switch-events.
    
    Fixes: a92bf335fd82eeee ("perf scripts python: intel-pt-events.py: Add branches to script")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Riccardo Mancini <rickyman7@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20211215080636.149562-4-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 632ee8a1786a54a970ff03f136c41baa79c86c8a
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Wed Dec 15 10:06:35 2021 +0200

    perf script: Fix CPU filtering of a script's switch events
    
    commit 5e0c325cdb714409a5b242c9e73a1b61157abb36 upstream.
    
    CPU filtering was not being applied to a script's switch events.
    
    Fixes: 5bf83c29a0ad2e78 ("perf script: Add scripting operation process_switch()")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Riccardo Mancini <rickyman7@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20211215080636.149562-3-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90d273381bfbaa34ca5bc650b3cdf4ded78c1025
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Wed Dec 15 10:06:34 2021 +0200

    perf intel-pt: Fix parsing of VM time correlation arguments
    
    commit a78abde220243d6f44a265fe36c49957f6fa9851 upstream.
    
    Parser did not take ':' into account.
    
    Example:
    
     Before:
    
      $ perf record -e intel_pt//u uname
      Linux
      [ perf record: Woken up 1 times to write data ]
      [ perf record: Captured and wrote 0.026 MB perf.data ]
      $ perf inject -i perf.data --vm-time-correlation="dry-run 123"
      $ perf inject -i perf.data --vm-time-correlation="dry-run 123:456"
      Failed to parse VM Time Correlation options
      0x620 [0x98]: failed to process type: 70 [Invalid argument]
      $
    
     After:
    
      $ perf inject -i perf.data --vm-time-correlation="dry-run 123:456"
      $
    
    Fixes: e3ff42bdebcfeb5f ("perf intel-pt: Parse VM Time Correlation options and set up decoding")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Riccardo Mancini <rickyman7@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20211215080636.149562-2-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47b5d0a7532d39e42a938f81e3904268145c341d
Author: Christian Brauner <christian.brauner@ubuntu.com>
Date:   Thu Dec 30 20:23:09 2021 +0100

    fs/mount_setattr: always cleanup mount_kattr
    
    commit 012e332286e2bb9f6ac77d195f17e74b2963d663 upstream.
    
    Make sure that finish_mount_kattr() is called after mount_kattr was
    succesfully built in both the success and failure case to prevent
    leaking any references we took when we built it.  We returned early if
    path lookup failed thereby risking to leak an additional reference we
    took when building mount_kattr when an idmapped mount was requested.
    
    Cc: linux-fsdevel@vger.kernel.org
    Cc: stable@vger.kernel.org
    Fixes: 9caccd41541a ("fs: introduce MOUNT_ATTR_IDMAP")
    Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08eacbd141e2495d2fcdde84358a06c4f95cbb13
Author: Muchun Song <songmuchun@bytedance.com>
Date:   Tue Dec 28 18:41:45 2021 +0800

    net: fix use-after-free in tw_timer_handler
    
    commit e22e45fc9e41bf9fcc1e92cfb78eb92786728ef0 upstream.
    
    A real world panic issue was found as follow in Linux 5.4.
    
        BUG: unable to handle page fault for address: ffffde49a863de28
        PGD 7e6fe62067 P4D 7e6fe62067 PUD 7e6fe63067 PMD f51e064067 PTE 0
        RIP: 0010:tw_timer_handler+0x20/0x40
        Call Trace:
         <IRQ>
         call_timer_fn+0x2b/0x120
         run_timer_softirq+0x1ef/0x450
         __do_softirq+0x10d/0x2b8
         irq_exit+0xc7/0xd0
         smp_apic_timer_interrupt+0x68/0x120
         apic_timer_interrupt+0xf/0x20
    
    This issue was also reported since 2017 in the thread [1],
    unfortunately, the issue was still can be reproduced after fixing
    DCCP.
    
    The ipv4_mib_exit_net is called before tcp_sk_exit_batch when a net
    namespace is destroyed since tcp_sk_ops is registered befrore
    ipv4_mib_ops, which means tcp_sk_ops is in the front of ipv4_mib_ops
    in the list of pernet_list. There will be a use-after-free on
    net->mib.net_statistics in tw_timer_handler after ipv4_mib_exit_net
    if there are some inflight time-wait timers.
    
    This bug is not introduced by commit f2bf415cfed7 ("mib: add net to
    NET_ADD_STATS_BH") since the net_statistics is a global variable
    instead of dynamic allocation and freeing. Actually, commit
    61a7e26028b9 ("mib: put net statistics on struct net") introduces
    the bug since it put net statistics on struct net and free it when
    net namespace is destroyed.
    
    Moving init_ipv4_mibs() to the front of tcp_init() to fix this bug
    and replace pr_crit() with panic() since continuing is meaningless
    when init_ipv4_mibs() fails.
    
    [1] https://groups.google.com/g/syzkaller/c/p1tn-_Kc6l4/m/smuL_FMAAgAJ?pli=1
    
    Fixes: 61a7e26028b9 ("mib: put net statistics on struct net")
    Signed-off-by: Muchun Song <songmuchun@bytedance.com>
    Cc: Cong Wang <cong.wang@bytedance.com>
    Cc: Fam Zheng <fam.zheng@bytedance.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211228104145.9426-1-songmuchun@bytedance.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffe4a1ba1a82c416a6b3a09d46594f6a885ae141
Author: SeongJae Park <sj@kernel.org>
Date:   Thu Dec 30 20:12:34 2021 -0800

    mm/damon/dbgfs: fix 'struct pid' leaks in 'dbgfs_target_ids_write()'
    
    commit ebb3f994dd92f8fb4d70c7541091216c1e10cb71 upstream.
    
    DAMON debugfs interface increases the reference counts of 'struct pid's
    for targets from the 'target_ids' file write callback
    ('dbgfs_target_ids_write()'), but decreases the counts only in DAMON
    monitoring termination callback ('dbgfs_before_terminate()').
    
    Therefore, when 'target_ids' file is repeatedly written without DAMON
    monitoring start/termination, the reference count is not decreased and
    therefore memory for the 'struct pid' cannot be freed.  This commit
    fixes this issue by decreasing the reference counts when 'target_ids' is
    written.
    
    Link: https://lkml.kernel.org/r/20211229124029.23348-1-sj@kernel.org
    Fixes: 4bc05954d007 ("mm/damon: implement a debugfs-based user space interface")
    Signed-off-by: SeongJae Park <sj@kernel.org>
    Cc: <stable@vger.kernel.org>    [5.15+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 466267ced87dd514fc0f64e477c3ef5bb881d4f3
Author: Leo L. Schwab <ewhac@ewhac.org>
Date:   Thu Dec 30 21:05:00 2021 -0800

    Input: spaceball - fix parsing of movement data packets
    
    commit bc7ec91718c49d938849697cfad98fcd9877cc26 upstream.
    
    The spaceball.c module was not properly parsing the movement reports
    coming from the device.  The code read axis data as signed 16-bit
    little-endian values starting at offset 2.
    
    In fact, axis data in Spaceball movement reports are signed 16-bit
    big-endian values starting at offset 3.  This was determined first by
    visually inspecting the data packets, and later verified by consulting:
    http://spacemice.org/pdf/SpaceBall_2003-3003_Protocol.pdf
    
    If this ever worked properly, it was in the time before Git...
    
    Signed-off-by: Leo L. Schwab <ewhac@ewhac.org>
    Link: https://lore.kernel.org/r/20211221101630.1146385-1-ewhac@ewhac.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e79ff8c68acb1eddf709d3ac84716868f2a91012
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Dec 30 20:57:46 2021 -0800

    Input: appletouch - initialize work before device registration
    
    commit 9f3ccdc3f6ef10084ceb3a47df0961bec6196fd0 upstream.
    
    Syzbot has reported warning in __flush_work(). This warning is caused by
    work->func == NULL, which means missing work initialization.
    
    This may happen, since input_dev->close() calls
    cancel_work_sync(&dev->work), but dev->work initalization happens _after_
    input_register_device() call.
    
    So this patch moves dev->work initialization before registering input
    device
    
    Fixes: 5a6eb676d3bc ("Input: appletouch - improve powersaving for Geyser3 devices")
    Reported-and-tested-by: syzbot+b88c5eae27386b252bbd@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Link: https://lore.kernel.org/r/20211230141151.17300-1-paskripkin@gmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90ffed2d5e0df2cad053c7ff1e60623980d380f4
Author: Alexey Makhalov <amakhalov@vmware.com>
Date:   Mon Dec 20 11:05:14 2021 -0800

    scsi: vmw_pvscsi: Set residual data length conditionally
    
    commit 142c779d05d1fef75134c3cb63f52ccbc96d9e1f upstream.
    
    The PVSCSI implementation in the VMware hypervisor under specific
    configuration ("SCSI Bus Sharing" set to "Physical") returns zero dataLen
    in the completion descriptor for READ CAPACITY(16). As a result, the kernel
    can not detect proper disk geometry. This can be recognized by the kernel
    message:
    
      [ 0.776588] sd 1:0:0:0: [sdb] Sector size 0 reported, assuming 512.
    
    The PVSCSI implementation in QEMU does not set dataLen at all, keeping it
    zeroed. This leads to a boot hang as was reported by Shmulik Ladkani.
    
    It is likely that the controller returns the garbage at the end of the
    buffer. Residual length should be set by the driver in that case. The SCSI
    layer will erase corresponding data. See commit bdb2b8cab439 ("[SCSI] erase
    invalid data returned by device") for details.
    
    Commit e662502b3a78 ("scsi: vmw_pvscsi: Set correct residual data length")
    introduced the issue by setting residual length unconditionally, causing
    the SCSI layer to erase the useful payload beyond dataLen when this value
    is returned as 0.
    
    As a result, considering existing issues in implementations of PVSCSI
    controllers, we do not want to call scsi_set_resid() when dataLen ==
    0. Calling scsi_set_resid() has no effect if dataLen equals buffer length.
    
    Link: https://lore.kernel.org/lkml/20210824120028.30d9c071@blondie/
    Link: https://lore.kernel.org/r/20211220190514.55935-1-amakhalov@vmware.com
    Fixes: e662502b3a78 ("scsi: vmw_pvscsi: Set correct residual data length")
    Cc: Matt Wang <wwentao@vmware.com>
    Cc: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Vishal Bhakta <vbhakta@vmware.com>
    Cc: VMware PV-Drivers <pv-drivers@vmware.com>
    Cc: James E.J. Bottomley <jejb@linux.ibm.com>
    Cc: linux-scsi@vger.kernel.org
    Cc: stable@vger.kernel.org
    Reported-and-suggested-by: Shmulik Ladkani <shmulik.ladkani@gmail.com>
    Signed-off-by: Alexey Makhalov <amakhalov@vmware.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17691bada6b2f1d5f1c0f6d28cd9d0727023b0ff
Author: Todd Kjos <tkjos@google.com>
Date:   Mon Dec 20 11:01:50 2021 -0800

    binder: fix async_free_space accounting for empty parcels
    
    commit cfd0d84ba28c18b531648c9d4a35ecca89ad9901 upstream.
    
    In 4.13, commit 74310e06be4d ("android: binder: Move buffer out of area shared with user space")
    fixed a kernel structure visibility issue. As part of that patch,
    sizeof(void *) was used as the buffer size for 0-length data payloads so
    the driver could detect abusive clients sending 0-length asynchronous
    transactions to a server by enforcing limits on async_free_size.
    
    Unfortunately, on the "free" side, the accounting of async_free_space
    did not add the sizeof(void *) back. The result was that up to 8-bytes of
    async_free_space were leaked on every async transaction of 8-bytes or
    less.  These small transactions are uncommon, so this accounting issue
    has gone undetected for several years.
    
    The fix is to use "buffer_size" (the allocated buffer size) instead of
    "size" (the logical buffer size) when updating the async_free_space
    during the free operation. These are the same except for this
    corner case of asynchronous transactions with payloads < 8 bytes.
    
    Fixes: 74310e06be4d ("android: binder: Move buffer out of area shared with user space")
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Cc: stable@vger.kernel.org # 4.14+
    Link: https://lore.kernel.org/r/20211220190150.2107077-1-tkjos@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90d2beed5e753805c5eab656b8d48257638fe543
Author: Andra Paraschiv <andraprs@amazon.com>
Date:   Mon Dec 20 19:58:56 2021 +0000

    nitro_enclaves: Use get_user_pages_unlocked() call to handle mmap assert
    
    commit 3a0152b219523227c2a62a0a122cf99608287176 upstream.
    
    After commit 5b78ed24e8ec ("mm/pagemap: add mmap_assert_locked()
    annotations to find_vma*()"), the call to get_user_pages() will trigger
    the mmap assert.
    
    static inline void mmap_assert_locked(struct mm_struct *mm)
    {
            lockdep_assert_held(&mm->mmap_lock);
            VM_BUG_ON_MM(!rwsem_is_locked(&mm->mmap_lock), mm);
    }
    
    [   62.521410] kernel BUG at include/linux/mmap_lock.h:156!
    ...........................................................
    [   62.538938] RIP: 0010:find_vma+0x32/0x80
    ...........................................................
    [   62.605889] Call Trace:
    [   62.608502]  <TASK>
    [   62.610956]  ? lock_timer_base+0x61/0x80
    [   62.614106]  find_extend_vma+0x19/0x80
    [   62.617195]  __get_user_pages+0x9b/0x6a0
    [   62.620356]  __gup_longterm_locked+0x42d/0x450
    [   62.623721]  ? finish_wait+0x41/0x80
    [   62.626748]  ? __kmalloc+0x178/0x2f0
    [   62.629768]  ne_set_user_memory_region_ioctl.isra.0+0x225/0x6a0 [nitro_enclaves]
    [   62.635776]  ne_enclave_ioctl+0x1cf/0x6d7 [nitro_enclaves]
    [   62.639541]  __x64_sys_ioctl+0x82/0xb0
    [   62.642620]  do_syscall_64+0x3b/0x90
    [   62.645642]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Use get_user_pages_unlocked() when setting the enclave memory regions.
    That's a similar pattern as mmap_read_lock() used together with
    get_user_pages().
    
    Fixes: 5b78ed24e8ec ("mm/pagemap: add mmap_assert_locked() annotations to find_vma*()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Andra Paraschiv <andraprs@amazon.com>
    Link: https://lore.kernel.org/r/20211220195856.6549-1-andraprs@amazon.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c823e0b469786b7ac33e8011a6566114c8aac5d
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Sat Dec 18 17:57:49 2021 +0800

    usb: mtu3: set interval of FS intr and isoc endpoint
    
    commit 43f3b8cbcf93da7c2755af4a543280c31f4adf16 upstream.
    
    Add support to set interval also for FS intr and isoc endpoint.
    
    Fixes: 4d79e042ed8b ("usb: mtu3: add support for usb3.1 IP")
    Cc: stable@vger.kernel.org
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/20211218095749.6250-4-chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 249ddfbe00570d6dc76208e88017937d4d374c79
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Sat Dec 18 17:57:48 2021 +0800

    usb: mtu3: fix list_head check warning
    
    commit 8c313e3bfd9adae8d5c4ba1cc696dcbc86fbf9bf upstream.
    
    This is caused by uninitialization of list_head.
    
    BUG: KASAN: use-after-free in __list_del_entry_valid+0x34/0xe4
    
    Call trace:
    dump_backtrace+0x0/0x298
    show_stack+0x24/0x34
    dump_stack+0x130/0x1a8
    print_address_description+0x88/0x56c
    __kasan_report+0x1b8/0x2a0
    kasan_report+0x14/0x20
    __asan_load8+0x9c/0xa0
    __list_del_entry_valid+0x34/0xe4
    mtu3_req_complete+0x4c/0x300 [mtu3]
    mtu3_gadget_stop+0x168/0x448 [mtu3]
    usb_gadget_unregister_driver+0x204/0x3a0
    unregister_gadget_item+0x44/0xa4
    
    Fixes: 83374e035b62 ("usb: mtu3: add tracepoints to help debug")
    Cc: stable@vger.kernel.org
    Reported-by: Yuwen Ng <yuwen.ng@mediatek.com>
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/20211218095749.6250-3-chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dace4123e304caf993f3b6c2f3565351d8592ef4
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Sat Dec 18 17:57:47 2021 +0800

    usb: mtu3: add memory barrier before set GPD's HWO
    
    commit a7aae769ca626819a7f9f078ebdc69a8a1b00c81 upstream.
    
    There is a seldom issue that the controller access invalid address
    and trigger devapc or emimpu violation. That is due to memory access
    is out of order and cause gpd data is not correct.
    Add mb() to prohibit compiler or cpu from reordering to make sure GPD
    is fully written before setting its HWO.
    
    Fixes: 48e0d3735aa5 ("usb: mtu3: supports new QMU format")
    Cc: stable@vger.kernel.org
    Reported-by: Eddie Hung <eddie.hung@mediatek.com>
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/20211218095749.6250-2-chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebef2aa29f370b5096c16020c104e393192ef684
Author: Vincent Pelletier <plr.vincent@gmail.com>
Date:   Sat Dec 18 02:18:40 2021 +0000

    usb: gadget: f_fs: Clear ffs_eventfd in ffs_data_clear.
    
    commit b1e0887379422975f237d43d8839b751a6bcf154 upstream.
    
    ffs_data_clear is indirectly called from both ffs_fs_kill_sb and
    ffs_ep0_release, so it ends up being called twice when userland closes ep0
    and then unmounts f_fs.
    If userland provided an eventfd along with function's USB descriptors, it
    ends up calling eventfd_ctx_put as many times, causing a refcount
    underflow.
    NULL-ify ffs_eventfd to prevent these extraneous eventfd_ctx_put calls.
    
    Also, set epfiles to NULL right after de-allocating it, for readability.
    
    For completeness, ffs_data_clear actually ends up being called thrice, the
    last call being before the whole ffs structure gets freed, so when this
    specific sequence happens there is a second underflow happening (but not
    being reported):
    
    /sys/kernel/debug/tracing# modprobe usb_f_fs
    /sys/kernel/debug/tracing# echo ffs_data_clear > set_ftrace_filter
    /sys/kernel/debug/tracing# echo function > current_tracer
    /sys/kernel/debug/tracing# echo 1 > tracing_on
    (setup gadget, run and kill function userland process, teardown gadget)
    /sys/kernel/debug/tracing# echo 0 > tracing_on
    /sys/kernel/debug/tracing# cat trace
     smartcard-openp-436     [000] .....  1946.208786: ffs_data_clear <-ffs_data_closed
     smartcard-openp-431     [000] .....  1946.279147: ffs_data_clear <-ffs_data_closed
     smartcard-openp-431     [000] .n...  1946.905512: ffs_data_clear <-ffs_data_put
    
    Warning output corresponding to above trace:
    [ 1946.284139] WARNING: CPU: 0 PID: 431 at lib/refcount.c:28 refcount_warn_saturate+0x110/0x15c
    [ 1946.293094] refcount_t: underflow; use-after-free.
    [ 1946.298164] Modules linked in: usb_f_ncm(E) u_ether(E) usb_f_fs(E) hci_uart(E) btqca(E) btrtl(E) btbcm(E) btintel(E) bluetooth(E) nls_ascii(E) nls_cp437(E) vfat(E) fat(E) bcm2835_v4l2(CE) bcm2835_mmal_vchiq(CE) videobuf2_vmalloc(E) videobuf2_memops(E) sha512_generic(E) videobuf2_v4l2(E) sha512_arm(E) videobuf2_common(E) videodev(E) cpufreq_dt(E) snd_bcm2835(CE) brcmfmac(E) mc(E) vc4(E) ctr(E) brcmutil(E) snd_soc_core(E) snd_pcm_dmaengine(E) drbg(E) snd_pcm(E) snd_timer(E) snd(E) soundcore(E) drm_kms_helper(E) cec(E) ansi_cprng(E) rc_core(E) syscopyarea(E) raspberrypi_cpufreq(E) sysfillrect(E) sysimgblt(E) cfg80211(E) max17040_battery(OE) raspberrypi_hwmon(E) fb_sys_fops(E) regmap_i2c(E) ecdh_generic(E) rfkill(E) ecc(E) bcm2835_rng(E) rng_core(E) vchiq(CE) leds_gpio(E) libcomposite(E) fuse(E) configfs(E) ip_tables(E) x_tables(E) autofs4(E) ext4(E) crc16(E) mbcache(E) jbd2(E) crc32c_generic(E) sdhci_iproc(E) sdhci_pltfm(E) sdhci(E)
    [ 1946.399633] CPU: 0 PID: 431 Comm: smartcard-openp Tainted: G         C OE     5.15.0-1-rpi #1  Debian 5.15.3-1
    [ 1946.417950] Hardware name: BCM2835
    [ 1946.425442] Backtrace:
    [ 1946.432048] [<c08d60a0>] (dump_backtrace) from [<c08d62ec>] (show_stack+0x20/0x24)
    [ 1946.448226]  r7:00000009 r6:0000001c r5:c04a948c r4:c0a64e2c
    [ 1946.458412] [<c08d62cc>] (show_stack) from [<c08d9ae0>] (dump_stack+0x28/0x30)
    [ 1946.470380] [<c08d9ab8>] (dump_stack) from [<c0123500>] (__warn+0xe8/0x154)
    [ 1946.482067]  r5:c04a948c r4:c0a71dc8
    [ 1946.490184] [<c0123418>] (__warn) from [<c08d6948>] (warn_slowpath_fmt+0xa0/0xe4)
    [ 1946.506758]  r7:00000009 r6:0000001c r5:c0a71dc8 r4:c0a71e04
    [ 1946.517070] [<c08d68ac>] (warn_slowpath_fmt) from [<c04a948c>] (refcount_warn_saturate+0x110/0x15c)
    [ 1946.535309]  r8:c0100224 r7:c0dfcb84 r6:ffffffff r5:c3b84c00 r4:c24a17c0
    [ 1946.546708] [<c04a937c>] (refcount_warn_saturate) from [<c0380134>] (eventfd_ctx_put+0x48/0x74)
    [ 1946.564476] [<c03800ec>] (eventfd_ctx_put) from [<bf5464e8>] (ffs_data_clear+0xd0/0x118 [usb_f_fs])
    [ 1946.582664]  r5:c3b84c00 r4:c2695b00
    [ 1946.590668] [<bf546418>] (ffs_data_clear [usb_f_fs]) from [<bf547cc0>] (ffs_data_closed+0x9c/0x150 [usb_f_fs])
    [ 1946.609608]  r5:bf54d014 r4:c2695b00
    [ 1946.617522] [<bf547c24>] (ffs_data_closed [usb_f_fs]) from [<bf547da0>] (ffs_fs_kill_sb+0x2c/0x30 [usb_f_fs])
    [ 1946.636217]  r7:c0dfcb84 r6:c3a12260 r5:bf54d014 r4:c229f000
    [ 1946.646273] [<bf547d74>] (ffs_fs_kill_sb [usb_f_fs]) from [<c0326d50>] (deactivate_locked_super+0x54/0x9c)
    [ 1946.664893]  r5:bf54d014 r4:c229f000
    [ 1946.672921] [<c0326cfc>] (deactivate_locked_super) from [<c0326df8>] (deactivate_super+0x60/0x64)
    [ 1946.690722]  r5:c2a09000 r4:c229f000
    [ 1946.698706] [<c0326d98>] (deactivate_super) from [<c0349a28>] (cleanup_mnt+0xe4/0x14c)
    [ 1946.715553]  r5:c2a09000 r4:00000000
    [ 1946.723528] [<c0349944>] (cleanup_mnt) from [<c0349b08>] (__cleanup_mnt+0x1c/0x20)
    [ 1946.739922]  r7:c0dfcb84 r6:c3a12260 r5:c3a126fc r4:00000000
    [ 1946.750088] [<c0349aec>] (__cleanup_mnt) from [<c0143d10>] (task_work_run+0x84/0xb8)
    [ 1946.766602] [<c0143c8c>] (task_work_run) from [<c010bdc8>] (do_work_pending+0x470/0x56c)
    [ 1946.783540]  r7:5ac3c35a r6:c0d0424c r5:c200bfb0 r4:c200a000
    [ 1946.793614] [<c010b958>] (do_work_pending) from [<c01000c0>] (slow_work_pending+0xc/0x20)
    [ 1946.810553] Exception stack(0xc200bfb0 to 0xc200bff8)
    [ 1946.820129] bfa0:                                     00000000 00000000 000000aa b5e21430
    [ 1946.837104] bfc0: bef867a0 00000001 bef86840 00000034 bef86838 bef86790 bef86794 bef867a0
    [ 1946.854125] bfe0: 00000000 bef86798 b67b7a1c b6d626a4 60000010 b5a23760
    [ 1946.865335]  r10:00000000 r9:c200a000 r8:c0100224 r7:00000034 r6:bef86840 r5:00000001
    [ 1946.881914]  r4:bef867a0
    [ 1946.888793] ---[ end trace 7387f2a9725b28d0 ]---
    
    Fixes: 5e33f6fdf735 ("usb: gadget: ffs: add eventfd notification about ffs events")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Vincent Pelletier <plr.vincent@gmail.com>
    Link: https://lore.kernel.org/r/f79eeea29f3f98de6782a064ec0f7351ad2f598f.1639793920.git.plr.vincent@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81f8de4b6af6713871d8cae6f72d8972dea857fd
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Tue Dec 21 13:28:25 2021 +0200

    xhci: Fresco FL1100 controller should not have BROKEN_MSI quirk set.
    
    commit e4844092581ceec22489b66c42edc88bc6079783 upstream.
    
    The Fresco Logic FL1100 controller needs the TRUST_TX_LENGTH quirk like
    other Fresco controllers, but should not have the BROKEN_MSI quirks set.
    
    BROKEN_MSI quirk causes issues in detecting usb drives connected to docks
    with this FL1100 controller.
    The BROKEN_MSI flag was apparently accidentally set together with the
    TRUST_TX_LENGTH quirk
    
    Original patch went to stable so this should go there as well.
    
    Fixes: ea0f69d82119 ("xhci: Enable trust tx length quirk for Fresco FL11 USB controller")
    Cc: stable@vger.kernel.org
    cc: Nikolay Martynov <mar.kolya@gmail.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20211221112825.54690-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f591d17e36e08313b0c440b99b0e57b47e01a9a
Author: Angus Wang <angus.wang@amd.com>
Date:   Thu Dec 9 17:27:01 2021 -0500

    drm/amd/display: Changed pipe split policy to allow for multi-display pipe split
    
    commit ee2698cf79cc759a397c61086c758d4cc85938bf upstream.
    
    [WHY]
    Current implementation of pipe split policy prevents pipe split with
    multiple displays connected, which caused the MCLK speed to be stuck at
    max
    
    [HOW]
    Changed the pipe split policies so that pipe split is allowed for
    multi-display configurations
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1522
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1709
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1655
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1403
    
    Note this is a backport of this commit from amdgpu drm-next for 5.16.
    
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Reviewed-by: Aric Cyr <Aric.Cyr@amd.com>
    Acked-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Angus Wang <angus.wang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94ba5b0fb52d6dbf1f200351876a839afb74aedd
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Dec 15 22:13:56 2021 -0500

    drm/amdgpu: add support for IP discovery gc_info table v2
    
    commit 5e713c6afa34c0fd6f113bf7bb1c2847172d7b20 upstream.
    
    Used on gfx9 based systems. Fixes incorrect CU counts reported
    in the kernel log.
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1833
    Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97fd2b6c0340ad06872feda449bf6168ee56a35a
Author: chen gong <curry.gong@amd.com>
Date:   Thu Dec 9 19:47:10 2021 +0800

    drm/amdgpu: When the VCN(1.0) block is suspended, powergating is explicitly enabled
    
    commit b7865173cf6ae59942e2c69326a06e1c1df5ecf6 upstream.
    
    Play a video on the raven (or PCO, raven2) platform, and then do the S3
    test. When resume, the following error will be reported:
    
    amdgpu 0000:02:00.0: [drm:amdgpu_ring_test_helper [amdgpu]] *ERROR* ring
    vcn_dec test failed (-110)
    [drm:amdgpu_device_ip_resume_phase2 [amdgpu]] *ERROR* resume of IP block
    <vcn_v1_0> failed -110
    amdgpu 0000:02:00.0: amdgpu: amdgpu_device_ip_resume failed (-110).
    PM: dpm_run_callback(): pci_pm_resume+0x0/0x90 returns -110
    
    [why]
    When playing the video: The power state flag of the vcn block is set to
    POWER_STATE_ON.
    
    When doing suspend: There is no change to the power state flag of the
    vcn block, it is still POWER_STATE_ON.
    
    When doing resume: Need to open the power gate of the vcn block and set
    the power state flag of the VCN block to POWER_STATE_ON.
    But at this time, the power state flag of the vcn block is already
    POWER_STATE_ON. The power status flag check in the "8f2cdef drm/amd/pm:
    avoid duplicate powergate/ungate setting" patch will return the
    amdgpu_dpm_set_powergating_by_smu function directly.
    As a result, the gate of the power was not opened, causing the
    subsequent ring test to fail.
    
    [how]
    In the suspend function of the vcn block, explicitly change the power
    state flag of the vcn block to POWER_STATE_OFF.
    
    BugLink: https://gitlab.freedesktop.org/drm/amd/-/issues/1828
    Signed-off-by: chen gong <curry.gong@amd.com>
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ee1296e06555a0a3678c25982d23788c1e1acd2
Author: Christian König <christian.koenig@amd.com>
Date:   Tue Dec 7 10:10:15 2021 +0100

    drm/nouveau: wait for the exclusive fence after the shared ones v2
    
    commit 67f74302f45d5d862f22ced3297624e50ac352f0 upstream.
    
    Always waiting for the exclusive fence resulted on some performance
    regressions. So try to wait for the shared fences first, then the
    exclusive fence should always be signaled already.
    
    v2: fix incorrectly placed "(", add some comment why we do this.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Tested-by: Stefan Fritsch <sf@sfritsch.de>
    Tested-by: Dan Moulding <dmoulding@me.com>
    Acked-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Cc: <stable@vger.kernel.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211209102335.18321-1-christian.koenig@amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6310938479696675fca9657d99dbad4042dbbf1
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Sun Dec 26 16:01:27 2021 +0300

    uapi: fix linux/nfc.h userspace compilation errors
    
    commit 7175f02c4e5f5a9430113ab9ca0fd0ce98b28a51 upstream.
    
    Replace sa_family_t with __kernel_sa_family_t to fix the following
    linux/nfc.h userspace compilation errors:
    
    /usr/include/linux/nfc.h:266:2: error: unknown type name 'sa_family_t'
      sa_family_t sa_family;
    /usr/include/linux/nfc.h:274:2: error: unknown type name 'sa_family_t'
      sa_family_t sa_family;
    
    Fixes: 23b7869c0fd0 ("NFC: add the NFC socket raw protocol")
    Fixes: d646960f7986 ("NFC: Initial LLCP support")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b006d5a5aad0c6a2658abcc4db25b65449f9113
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Sun Dec 26 13:03:47 2021 +0100

    nfc: uapi: use kernel size_t to fix user-space builds
    
    commit 79b69a83705e621b258ac6d8ae6d3bfdb4b930aa upstream.
    
    Fix user-space builds if it includes /usr/include/linux/nfc.h before
    some of other headers:
    
      /usr/include/linux/nfc.h:281:9: error: unknown type name ‘size_t’
        281 |         size_t service_name_len;
            |         ^~~~~~
    
    Fixes: d646960f7986 ("NFC: Initial LLCP support")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f68599581067e8a5a8901ba9eb270b4519690e26
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Fri Dec 31 01:47:50 2021 +0300

    i2c: validate user data in compat ioctl
    
    [ Upstream commit bb436283e25aaf1533ce061605d23a9564447bdf ]
    
    Wrong user data may cause warning in i2c_transfer(), ex: zero msgs.
    Userspace should not be able to trigger warnings, so this patch adds
    validation checks for user data in compact ioctl to prevent reported
    warnings
    
    Reported-and-tested-by: syzbot+e417648b303855b91d8a@syzkaller.appspotmail.com
    Fixes: 7d5cb45655f2 ("i2c compat ioctls: move to ->compat_ioctl()")
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17f5a2bc2ffed2ba8240308b99ba730249516c1b
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Dec 30 12:26:27 2021 +0000

    fsl/fman: Fix missing put_device() call in fman_port_probe
    
    [ Upstream commit bf2b09fedc17248b315f80fb249087b7d28a69a6 ]
    
    The reference taken by 'of_find_device_by_node()' must be released when
    not needed anymore.
    Add the corresponding 'put_device()' in the and error handling paths.
    
    Fixes: 18a6c85fcc78 ("fsl/fman: Add FMan Port Support")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20426341c071aee68ff04558c208582bae11e435
Author: Jianguo Wu <wujianguo@chinatelecom.cn>
Date:   Thu Dec 30 18:40:29 2021 +0800

    selftests: net: using ping6 for IPv6 in udpgro_fwd.sh
    
    [ Upstream commit 8b3170e07539855ee91bc5e2fa7780a4c9b5c7aa ]
    
    udpgro_fwd.sh output following message:
      ping: 2001:db8:1::100: Address family for hostname not supported
    
    Using ping6 when pinging IPv6 addresses.
    
    Fixes: a062260a9d5f ("selftests: net: add UDP GRO forwarding self-tests")
    Signed-off-by: Jianguo Wu <wujianguo@chinatelecom.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6eb92fb14689d0fa2064a4a28311bfc8d7cc54f5
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Dec 29 11:21:18 2021 +0800

    net/ncsi: check for error return from call to nla_put_u32
    
    [ Upstream commit 92a34ab169f9eefe29cd420ce96b0a0a2a1da853 ]
    
    As we can see from the comment of the nla_put() that it could return
    -EMSGSIZE if the tailroom of the skb is insufficient.
    Therefore, it should be better to check the return value of the
    nla_put_u32 and return the error code if error accurs.
    Also, there are many other functions have the same problem, and if this
    patch is correct, I will commit a new version to fix all.
    
    Fixes: 955dc68cb9b2 ("net/ncsi: Add generic netlink family")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20211229032118.1706294-1-jiasheng@iscas.ac.cn
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62320f472fc235560926feb32dc1f64adf4c1387
Author: Nikolay Aleksandrov <nikolay@nvidia.com>
Date:   Tue Dec 28 17:31:42 2021 +0200

    net: bridge: mcast: fix br_multicast_ctx_vlan_global_disabled helper
    
    [ Upstream commit 168fed986b3a7ec7b98cab1fe84e2f282b9e6a8f ]
    
    We need to first check if the context is a vlan one, then we need to
    check the global bridge multicast vlan snooping flag, and finally the
    vlan's multicast flag, otherwise we will unnecessarily enable vlan mcast
    processing (e.g. querier timers).
    
    Fixes: 7b54aaaf53cb ("net: bridge: multicast: add vlan state initialization and control")
    Signed-off-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Link: https://lore.kernel.org/r/20211228153142.536969-1-nikolay@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5943eb7bbac34b5eedfb2fabbd8298dd0988a85f
Author: Jianguo Wu <wujianguo@chinatelecom.cn>
Date:   Wed Dec 29 15:27:30 2021 +0800

    selftests: net: Fix a typo in udpgro_fwd.sh
    
    [ Upstream commit add25d6d6c85f7b6d00a055ee0a4169acf845681 ]
    
    $rvs -> $rcv
    
    Fixes: a062260a9d5f ("selftests: net: add UDP GRO forwarding self-tests")
    Signed-off-by: Jianguo Wu <wujianguo@chinatelecom.cn>
    Link: https://lore.kernel.org/r/d247d7c8-a03a-0abf-3c71-4006a051d133@163.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 676345fa9c5587480c1bf657a54f148a2756e93e
Author: wujianguo <wujianguo@chinatelecom.cn>
Date:   Wed Dec 29 18:58:10 2021 +0800

    selftests/net: udpgso_bench_tx: fix dst ip argument
    
    [ Upstream commit 9c1952aeaa98b3cfc49e2a79cb2c7d6a674213e9 ]
    
    udpgso_bench_tx call setup_sockaddr() for dest address before
    parsing all arguments, if we specify "-p ${dst_port}" after "-D ${dst_ip}",
    then ${dst_port} will be ignored, and using default cfg_port 8000.
    
    This will cause test case "multiple GRO socks" failed in udpgro.sh.
    
    Setup sockaddr after parsing all arguments.
    
    Fixes: 3a687bef148d ("selftests: udp gso benchmark")
    Signed-off-by: Jianguo Wu <wujianguo@chinatelecom.cn>
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Link: https://lore.kernel.org/r/ff620d9f-5b52-06ab-5286-44b945453002@163.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1157fe47992a9210b96752071ab679354771f61
Author: Nikolay Aleksandrov <nikolay@nvidia.com>
Date:   Mon Dec 27 19:21:16 2021 +0200

    net: bridge: mcast: add and enforce startup query interval minimum
    
    [ Upstream commit f83a112bd91a494cdee671aec74e777470fb4a07 ]
    
    As reported[1] if startup query interval is set too low in combination with
    large number of startup queries and we have multiple bridges or even a
    single bridge with multiple querier vlans configured we can crash the
    machine. Add a 1 second minimum which must be enforced by overwriting the
    value if set lower (i.e. without returning an error) to avoid breaking
    user-space. If that happens a log message is emitted to let the admin know
    that the startup interval has been set to the minimum. It doesn't make
    sense to make the startup interval lower than the normal query interval
    so use the same value of 1 second. The issue has been present since these
    intervals could be user-controlled.
    
    [1] https://lore.kernel.org/netdev/e8b9ce41-57b9-b6e2-a46a-ff9c791cf0ba@gmail.com/
    
    Fixes: d902eee43f19 ("bridge: Add multicast count/interval sysfs entries")
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a22ac8009f7e747e2bc1c76679bf1505718e2400
Author: Nikolay Aleksandrov <nikolay@nvidia.com>
Date:   Mon Dec 27 19:21:15 2021 +0200

    net: bridge: mcast: add and enforce query interval minimum
    
    [ Upstream commit 99b40610956a8a8755653a67392e2a8b772453be ]
    
    As reported[1] if query interval is set too low and we have multiple
    bridges or even a single bridge with multiple querier vlans configured
    we can crash the machine. Add a 1 second minimum which must be enforced
    by overwriting the value if set lower (i.e. without returning an error) to
    avoid breaking user-space. If that happens a log message is emitted to let
    the administrator know that the interval has been set to the minimum.
    The issue has been present since these intervals could be user-controlled.
    
    [1] https://lore.kernel.org/netdev/e8b9ce41-57b9-b6e2-a46a-ff9c791cf0ba@gmail.com/
    
    Fixes: d902eee43f19 ("bridge: Add multicast count/interval sysfs entries")
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a780f0dd250776234bcb5ff67ed4a8e7e3d1d89c
Author: Gal Pressman <gal@nvidia.com>
Date:   Mon Nov 29 11:08:41 2021 +0200

    net/mlx5e: Fix wrong features assignment in case of error
    
    [ Upstream commit 992d8a4e38f0527f24e273ce3a9cd6dea1a6a436 ]
    
    In case of an error in mlx5e_set_features(), 'netdev->features' must be
    updated with the correct state of the device to indicate which features
    were updated successfully.
    To do that we maintain a copy of 'netdev->features' and update it after
    successful feature changes, so we can assign it to back to
    'netdev->features' if needed.
    
    However, since not all netdev features are handled by the driver (e.g.
    GRO/TSO/etc), some features may not be updated correctly in case of an
    error updating another feature.
    
    For example, while requesting to disable TSO (feature which is not
    handled by the driver) and enable HW-GRO, if an error occurs during
    HW-GRO enable, 'oper_features' will be assigned with 'netdev->features'
    and HW-GRO turned off. TSO will remain enabled in such case, which is a
    bug.
    
    To solve that, instead of using 'netdev->features' as the baseline of
    'oper_features' and changing it on set feature success, use 'features'
    instead and update it in case of errors.
    
    Fixes: 75b81ce719b7 ("net/mlx5e: Don't override netdev features field unless in error flow")
    Signed-off-by: Gal Pressman <gal@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30a26a8c506fd25bc16094970f4bee587f540145
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Dec 26 15:06:17 2021 +0100

    ionic: Initialize the 'lif->dbid_inuse' bitmap
    
    [ Upstream commit 140c7bc7d1195750342ea0e6ab76179499ae7cd7 ]
    
    When allocated, this bitmap is not initialized. Only the first bit is set a
    few lines below.
    
    Use bitmap_zalloc() to make sure that it is cleared before being used.
    
    Fixes: 6461b446f2a0 ("ionic: Add interrupts and doorbells")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Shannon Nelson <snelson@pensando.io>
    Link: https://lore.kernel.org/r/6a478eae0b5e6c63774e1f0ddb1a3f8c38fa8ade.1640527506.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3dffd1d067782642138c290bb93049fd52cd00c
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Thu Dec 9 16:05:36 2021 -0500

    drm/amd/display: Set optimize_pwr_state for DCN31
    
    [ Upstream commit 33735c1c8d0223170d79dbe166976d9cd7339c7a ]
    
    [Why]
    We'll exit optimized power state to do link detection but we won't enter
    back into the optimized power state.
    
    This could potentially block s2idle entry depending on the sequencing,
    but it also means we're losing some power during the transition period.
    
    [How]
    Hook up the handler like DCN21. It was also missed like the
    exit_optimized_pwr_state callback.
    
    Fixes: 64b1d0e8d500 ("drm/amd/display: Add DCN3.1 HWSEQ")
    
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Reviewed-by: Eric Yang <Eric.Yang2@amd.com>
    Acked-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6af58ce9307f3c8939de7fb4fce077e7dff8fe44
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Thu Dec 9 13:53:36 2021 -0500

    drm/amd/display: Send s0i2_rdy in stream_count == 0 optimization
    
    [ Upstream commit a07f8b9983543d465b50870ab4f845d4d710ed3f ]
    
    [Why]
    Otherwise SMU won't mark Display as idle when trying to perform s2idle.
    
    [How]
    Mark the bit in the dcn31 codepath, doesn't apply to older ASIC.
    
    It needed to be split from phy refclk off to prevent entering s2idle
    when PSR was engaged but driver was not ready.
    
    Fixes: 118a33151658 ("drm/amd/display: Add DCN3.1 clock manager support")
    
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Reviewed-by: Eric Yang <Eric.Yang2@amd.com>
    Acked-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a87eb54df52f8ae3359668f8a86bb0c1cc7977b6
Author: James McLaughlin <james.mclaughlin@qsc.com>
Date:   Fri Dec 17 16:49:33 2021 -0700

    igc: Fix TX timestamp support for non-MSI-X platforms
    
    [ Upstream commit f85846bbf43de38fb2c89fe7d2a085608c4eb25a ]
    
    Time synchronization was not properly enabled on non-MSI-X platforms.
    
    Fixes: 2c344ae24501 ("igc: Add support for TX timestamping")
    Signed-off-by: James McLaughlin <james.mclaughlin@qsc.com>
    Reviewed-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Tested-by: Nechama Kraus <nechamax.kraus@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10597585d7937d4ffd5fd4a89061eff480e8bac5
Author: Vinicius Costa Gomes <vinicius.gomes@intel.com>
Date:   Mon Dec 13 16:39:49 2021 -0800

    igc: Do not enable crosstimestamping for i225-V models
    
    [ Upstream commit 1e81dcc1ab7de7a789e60042ce82d5a612632599 ]
    
    It was reported that when PCIe PTM is enabled, some lockups could
    be observed with some integrated i225-V models.
    
    While the issue is investigated, we can disable crosstimestamp for
    those models and see no loss of functionality, because those models
    don't have any support for time synchronization.
    
    Fixes: a90ec8483732 ("igc: Add support for PTP getcrosststamp()")
    Link: https://lore.kernel.org/all/924175a188159f4e03bd69908a91e606b574139b.camel@gmx.de/
    Reported-by: Stefan Dietrich <roots@gmx.de>
    Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Tested-by: Nechama Kraus <nechamax.kraus@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b85f751d71ae8e2a15e9bda98852ea9af35282eb
Author: Dust Li <dust.li@linux.alibaba.com>
Date:   Tue Dec 28 17:03:25 2021 +0800

    net/smc: fix kernel panic caused by race of smc_sock
    
    [ Upstream commit 349d43127dac00c15231e8ffbcaabd70f7b0e544 ]
    
    A crash occurs when smc_cdc_tx_handler() tries to access smc_sock
    but smc_release() has already freed it.
    
    [ 4570.695099] BUG: unable to handle page fault for address: 000000002eae9e88
    [ 4570.696048] #PF: supervisor write access in kernel mode
    [ 4570.696728] #PF: error_code(0x0002) - not-present page
    [ 4570.697401] PGD 0 P4D 0
    [ 4570.697716] Oops: 0002 [#1] PREEMPT SMP NOPTI
    [ 4570.698228] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.16.0-rc4+ #111
    [ 4570.699013] Hardware name: Alibaba Cloud Alibaba Cloud ECS, BIOS 8c24b4c 04/0
    [ 4570.699933] RIP: 0010:_raw_spin_lock+0x1a/0x30
    <...>
    [ 4570.711446] Call Trace:
    [ 4570.711746]  <IRQ>
    [ 4570.711992]  smc_cdc_tx_handler+0x41/0xc0
    [ 4570.712470]  smc_wr_tx_tasklet_fn+0x213/0x560
    [ 4570.712981]  ? smc_cdc_tx_dismisser+0x10/0x10
    [ 4570.713489]  tasklet_action_common.isra.17+0x66/0x140
    [ 4570.714083]  __do_softirq+0x123/0x2f4
    [ 4570.714521]  irq_exit_rcu+0xc4/0xf0
    [ 4570.714934]  common_interrupt+0xba/0xe0
    
    Though smc_cdc_tx_handler() checked the existence of smc connection,
    smc_release() may have already dismissed and released the smc socket
    before smc_cdc_tx_handler() further visits it.
    
    smc_cdc_tx_handler()           |smc_release()
    if (!conn)                     |
                                   |
                                   |smc_cdc_tx_dismiss_slots()
                                   |      smc_cdc_tx_dismisser()
                                   |
                                   |sock_put(&smc->sk) <- last sock_put,
                                   |                      smc_sock freed
    bh_lock_sock(&smc->sk) (panic) |
    
    To make sure we won't receive any CDC messages after we free the
    smc_sock, add a refcount on the smc_connection for inflight CDC
    message(posted to the QP but haven't received related CQE), and
    don't release the smc_connection until all the inflight CDC messages
    haven been done, for both success or failed ones.
    
    Using refcount on CDC messages brings another problem: when the link
    is going to be destroyed, smcr_link_clear() will reset the QP, which
    then remove all the pending CQEs related to the QP in the CQ. To make
    sure all the CQEs will always come back so the refcount on the
    smc_connection can always reach 0, smc_ib_modify_qp_reset() was replaced
    by smc_ib_modify_qp_error().
    And remove the timeout in smc_wr_tx_wait_no_pending_sends() since we
    need to wait for all pending WQEs done, or we may encounter use-after-
    free when handling CQEs.
    
    For IB device removal routine, we need to wait for all the QPs on that
    device been destroyed before we can destroy CQs on the device, or
    the refcount on smc_connection won't reach 0 and smc_sock cannot be
    released.
    
    Fixes: 5f08318f617b ("smc: connection data control (CDC)")
    Reported-by: Wen Gu <guwen@linux.alibaba.com>
    Signed-off-by: Dust Li <dust.li@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85ce25935e06ccfbf89e502acb816c0841a8b59d
Author: Dust Li <dust.li@linux.alibaba.com>
Date:   Tue Dec 28 17:03:24 2021 +0800

    net/smc: don't send CDC/LLC message if link not ready
    
    [ Upstream commit 90cee52f2e780345d3629e278291aea5ac74f40f ]
    
    We found smc_llc_send_link_delete_all() sometimes wait
    for 2s timeout when testing with RDMA link up/down.
    It is possible when a smc_link is in ACTIVATING state,
    the underlaying QP is still in RESET or RTR state, which
    cannot send any messages out.
    
    smc_llc_send_link_delete_all() use smc_link_usable() to
    checks whether the link is usable, if the QP is still in
    RESET or RTR state, but the smc_link is in ACTIVATING, this
    LLC message will always fail without any CQE entering the
    CQ, and we will always wait 2s before timeout.
    
    Since we cannot send any messages through the QP before
    the QP enter RTS. I add a wrapper smc_link_sendable()
    which checks the state of QP along with the link state.
    And replace smc_link_usable() with smc_link_sendable()
    in all LLC & CDC message sending routine.
    
    Fixes: 5f08318f617b ("smc: connection data control (CDC)")
    Signed-off-by: Dust Li <dust.li@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 238920381b8925d070d32d73cd9ce52ab29896fe
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Tue Dec 28 12:48:11 2021 +0000

    NFC: st21nfca: Fix memory leak in device probe and remove
    
    [ Upstream commit 1b9dadba502234eea7244879b8d5d126bfaf9f0c ]
    
    'phy->pending_skb' is alloced when device probe, but forgot to free
    in the error handling path and remove path, this cause memory leak
    as follows:
    
    unreferenced object 0xffff88800bc06800 (size 512):
      comm "8", pid 11775, jiffies 4295159829 (age 9.032s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<00000000d66c09ce>] __kmalloc_node_track_caller+0x1ed/0x450
        [<00000000c93382b3>] kmalloc_reserve+0x37/0xd0
        [<000000005fea522c>] __alloc_skb+0x124/0x380
        [<0000000019f29f9a>] st21nfca_hci_i2c_probe+0x170/0x8f2
    
    Fix it by freeing 'pending_skb' in error and remove.
    
    Fixes: 68957303f44a ("NFC: ST21NFCA: Add driver for STMicroelectronics ST21NFCA NFC Chip")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1babfe1b8109646e6d6f50e5192253cb153c499
Author: Aleksander Jan Bajkowski <olek2@wp.pl>
Date:   Mon Dec 27 17:22:03 2021 +0100

    net: lantiq_xrx200: fix statistics of received bytes
    
    [ Upstream commit 5be60a945329d82f06fc755a43eeefbfc5f77d72 ]
    
    Received frames have FCS truncated. There is no need
    to subtract FCS length from the statistics.
    
    Fixes: fe1a56420cf2 ("net: lantiq: Add Lantiq / Intel VRX200 Ethernet driver")
    Signed-off-by: Aleksander Jan Bajkowski <olek2@wp.pl>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c903a963b7e60a4016fdeb307047465fbc67feb1
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Dec 26 18:51:44 2021 +0100

    net: ag71xx: Fix a potential double free in error handling paths
    
    [ Upstream commit 1cd5384c88af5b59bf9f3b6c1a151bc14b88c2cd ]
    
    'ndev' is a managed resource allocated with devm_alloc_etherdev(), so there
    is no need to call free_netdev() explicitly or there will be a double
    free().
    
    Simplify all error handling paths accordingly.
    
    Fixes: d51b6ce441d3 ("net: ethernet: add ag71xx driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d82faa347a13aaf7e583c20fe2d1a1d4f3a8f08
Author: Matthias-Christian Ott <ott@mirix.org>
Date:   Sun Dec 26 23:12:08 2021 +0100

    net: usb: pegasus: Do not drop long Ethernet frames
    
    [ Upstream commit ca506fca461b260ab32952b610c3d4aadc6c11fd ]
    
    The D-Link DSB-650TX (2001:4002) is unable to receive Ethernet frames
    that are longer than 1518 octets, for example, Ethernet frames that
    contain 802.1Q VLAN tags.
    
    The frames are sent to the pegasus driver via USB but the driver
    discards them because they have the Long_pkt field set to 1 in the
    received status report. The function read_bulk_callback of the pegasus
    driver treats such received "packets" (in the terminology of the
    hardware) as errors but the field simply does just indicate that the
    Ethernet frame (MAC destination to FCS) is longer than 1518 octets.
    
    It seems that in the 1990s there was a distinction between
    "giant" (> 1518) and "runt" (< 64) frames and the hardware includes
    flags to indicate this distinction. It seems that the purpose of the
    distinction "giant" frames was to not allow infinitely long frames due
    to transmission errors and to allow hardware to have an upper limit of
    the frame size. However, the hardware already has such limit with its
    2048 octet receive buffer and, therefore, Long_pkt is merely a
    convention and should not be treated as a receive error.
    
    Actually, the hardware is even able to receive Ethernet frames with 2048
    octets which exceeds the claimed limit frame size limit of the driver of
    1536 octets (PEGASUS_MTU).
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Matthias-Christian Ott <ott@mirix.org>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc70cbd3b1554b600a6cb10ae2bbbbb98f5f4956
Author: Karsten Graul <kgraul@linux.ibm.com>
Date:   Mon Dec 27 14:35:30 2021 +0100

    net/smc: fix using of uninitialized completions
    
    [ Upstream commit 6d7373dabfd3933ee30c40fc8c09d2a788f6ece1 ]
    
    In smc_wr_tx_send_wait() the completion on index specified by
    pend->idx is initialized and after smc_wr_tx_send() was called the wait
    for completion starts. pend->idx is used to get the correct index for
    the wait, but the pend structure could already be cleared in
    smc_wr_tx_process_cqe().
    Introduce pnd_idx to hold and use a local copy of the correct index.
    
    Fixes: 09c61d24f96d ("net/smc: wait for departure of an IB message")
    Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75799e71df1da11394740b43ae5686646179561d
Author: Xin Long <lucien.xin@gmail.com>
Date:   Thu Dec 23 13:04:30 2021 -0500

    sctp: use call_rcu to free endpoint
    
    [ Upstream commit 5ec7d18d1813a5bead0b495045606c93873aecbb ]
    
    This patch is to delay the endpoint free by calling call_rcu() to fix
    another use-after-free issue in sctp_sock_dump():
    
      BUG: KASAN: use-after-free in __lock_acquire+0x36d9/0x4c20
      Call Trace:
        __lock_acquire+0x36d9/0x4c20 kernel/locking/lockdep.c:3218
        lock_acquire+0x1ed/0x520 kernel/locking/lockdep.c:3844
        __raw_spin_lock_bh include/linux/spinlock_api_smp.h:135 [inline]
        _raw_spin_lock_bh+0x31/0x40 kernel/locking/spinlock.c:168
        spin_lock_bh include/linux/spinlock.h:334 [inline]
        __lock_sock+0x203/0x350 net/core/sock.c:2253
        lock_sock_nested+0xfe/0x120 net/core/sock.c:2774
        lock_sock include/net/sock.h:1492 [inline]
        sctp_sock_dump+0x122/0xb20 net/sctp/diag.c:324
        sctp_for_each_transport+0x2b5/0x370 net/sctp/socket.c:5091
        sctp_diag_dump+0x3ac/0x660 net/sctp/diag.c:527
        __inet_diag_dump+0xa8/0x140 net/ipv4/inet_diag.c:1049
        inet_diag_dump+0x9b/0x110 net/ipv4/inet_diag.c:1065
        netlink_dump+0x606/0x1080 net/netlink/af_netlink.c:2244
        __netlink_dump_start+0x59a/0x7c0 net/netlink/af_netlink.c:2352
        netlink_dump_start include/linux/netlink.h:216 [inline]
        inet_diag_handler_cmd+0x2ce/0x3f0 net/ipv4/inet_diag.c:1170
        __sock_diag_cmd net/core/sock_diag.c:232 [inline]
        sock_diag_rcv_msg+0x31d/0x410 net/core/sock_diag.c:263
        netlink_rcv_skb+0x172/0x440 net/netlink/af_netlink.c:2477
        sock_diag_rcv+0x2a/0x40 net/core/sock_diag.c:274
    
    This issue occurs when asoc is peeled off and the old sk is freed after
    getting it by asoc->base.sk and before calling lock_sock(sk).
    
    To prevent the sk free, as a holder of the sk, ep should be alive when
    calling lock_sock(). This patch uses call_rcu() and moves sock_put and
    ep free into sctp_endpoint_destroy_rcu(), so that it's safe to try to
    hold the ep under rcu_read_lock in sctp_transport_traverse_process().
    
    If sctp_endpoint_hold() returns true, it means this ep is still alive
    and we have held it and can continue to dump it; If it returns false,
    it means this ep is dead and can be freed after rcu_read_unlock, and
    we should skip it.
    
    In sctp_sock_dump(), after locking the sk, if this ep is different from
    tsp->asoc->ep, it means during this dumping, this asoc was peeled off
    before calling lock_sock(), and the sk should be skipped; If this ep is
    the same with tsp->asoc->ep, it means no peeloff happens on this asoc,
    and due to lock_sock, no peeloff will happen either until release_sock.
    
    Note that delaying endpoint free won't delay the port release, as the
    port release happens in sctp_endpoint_destroy() before calling call_rcu().
    Also, freeing endpoint by call_rcu() makes it safe to access the sk by
    asoc->base.sk in sctp_assocs_seq_show() and sctp_rcv().
    
    Thanks Jones to bring this issue up.
    
    v1->v2:
      - improve the changelog.
      - add kfree(ep) into sctp_endpoint_destroy_rcu(), as Jakub noticed.
    
    Reported-by: syzbot+9276d76e83e3bcde6c99@syzkaller.appspotmail.com
    Reported-by: Lee Jones <lee.jones@linaro.org>
    Fixes: d25adbeb0cdb ("sctp: fix an use-after-free issue in sctp_sock_dump")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df06c8dd7aca2078dbbfafd7495da49700ab324f
Author: Coco Li <lixiaoyan@google.com>
Date:   Thu Dec 23 22:24:41 2021 +0000

    selftests: Calculate udpgso segment count without header adjustment
    
    [ Upstream commit 5471d5226c3b39b3d2f7011c082d5715795bd65c ]
    
    The below referenced commit correctly updated the computation of number
    of segments (gso_size) by using only the gso payload size and
    removing the header lengths.
    
    With this change the regression test started failing. Update
    the tests to match this new behavior.
    
    Both IPv4 and IPv6 tests are updated, as a separate patch in this series
    will update udp_v6_send_skb to match this change in udp_send_skb.
    
    Fixes: 158390e45612 ("udp: using datalen to cap max gso segments")
    Signed-off-by: Coco Li <lixiaoyan@google.com>
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Link: https://lore.kernel.org/r/20211223222441.2975883-2-lixiaoyan@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 027282344397c5d24b3b7c7cd49ed2841f86c4ee
Author: Coco Li <lixiaoyan@google.com>
Date:   Thu Dec 23 22:24:40 2021 +0000

    udp: using datalen to cap ipv6 udp max gso segments
    
    [ Upstream commit 736ef37fd9a44f5966e25319d08ff7ea99ac79e8 ]
    
    The max number of UDP gso segments is intended to cap to
    UDP_MAX_SEGMENTS, this is checked in udp_send_skb().
    
    skb->len contains network and transport header len here, we should use
    only data len instead.
    
    This is the ipv6 counterpart to the below referenced commit,
    which missed the ipv6 change
    
    Fixes: 158390e45612 ("udp: using datalen to cap max gso segments")
    Signed-off-by: Coco Li <lixiaoyan@google.com>
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Link: https://lore.kernel.org/r/20211223222441.2975883-1-lixiaoyan@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07f16b17416aaac5f20b1df108155fb97bfd50c5
Author: Chris Mi <cmi@nvidia.com>
Date:   Thu Dec 2 11:18:02 2021 +0800

    net/mlx5e: Delete forward rule for ct or sample action
    
    [ Upstream commit 2820110d945923ab2f4901753e4ccbb2a506fa8e ]
    
    When there is ct or sample action, the ct or sample rule will be deleted
    and return. But if there is an extra mirror action, the forward rule can't
    be deleted because of the return.
    
    Fix it by removing the return.
    
    Fixes: 69e2916ebce4 ("net/mlx5: CT: Add support for mirroring")
    Fixes: f94d6389f6a8 ("net/mlx5e: TC, Add support to offload sample action")
    Signed-off-by: Chris Mi <cmi@nvidia.com>
    Reviewed-by: Roi Dayan <roid@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa584ad8fa2928f1e61e5b3ab3e40ad30e5ed0e3
Author: Roi Dayan <roid@nvidia.com>
Date:   Mon Aug 23 13:33:17 2021 +0300

    net/mlx5e: Use tc sample stubs instead of ifdefs in source file
    
    [ Upstream commit f3e02e479debb37777696c9f984f75152beeb56d ]
    
    Instead of having sparse ifdefs in source files use a single
    ifdef in the tc sample header file and use stubs.
    
    Signed-off-by: Roi Dayan <roid@nvidia.com>
    Reviewed-by: Maor Dickman <maord@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12813ba11bf0d48cd6b8f5c4a1554affe764bb95
Author: Maxim Mikityanskiy <maximmi@mellanox.com>
Date:   Wed Jul 22 16:32:44 2020 +0300

    net/mlx5e: Fix ICOSQ recovery flow for XSK
    
    [ Upstream commit 19c4aba2d4e23997061fb11aed8a3e41334bfa14 ]
    
    There are two ICOSQs per channel: one is needed for RX, and the other
    for async operations (XSK TX, kTLS offload). Currently, the recovery
    flow for both is the same, and async ICOSQ is mistakenly treated like
    the regular ICOSQ.
    
    This patch prevents running the regular ICOSQ recovery on async ICOSQ.
    The purpose of async ICOSQ is to handle XSK wakeup requests and post
    kTLS offload RX parameters, it has nothing to do with RQ and XSKRQ UMRs,
    so the regular recovery sequence is not applicable here.
    
    Fixes: be5323c8379f ("net/mlx5e: Report and recover from CQE error on ICOSQ")
    Signed-off-by: Maxim Mikityanskiy <maximmi@mellanox.com>
    Reviewed-by: Aya Levin <ayal@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 144dbcc1454660fba116994c49d0686421aae3c0
Author: Maxim Mikityanskiy <maximmi@nvidia.com>
Date:   Tue Oct 12 19:40:09 2021 +0300

    net/mlx5e: Fix interoperability between XSK and ICOSQ recovery flow
    
    [ Upstream commit 17958d7cd731b977ae7d4af38d891c3a1235b5f1 ]
    
    Both regular RQ and XSKRQ use the same ICOSQ for UMRs. When doing
    recovery for the ICOSQ, don't forget to deactivate XSKRQ.
    
    XSK can be opened and closed while channels are active, so a new mutex
    prevents the ICOSQ recovery from running at the same time. The ICOSQ
    recovery deactivates and reactivates XSKRQ, so any parallel change in
    XSK state would break consistency. As the regular RQ is running, it's
    not enough to just flush the recovery work, because it can be
    rescheduled.
    
    Fixes: be5323c8379f ("net/mlx5e: Report and recover from CQE error on ICOSQ")
    Signed-off-by: Maxim Mikityanskiy <maximmi@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07f13d58a8ecc3baf9a488588fb38c5cb0db484f
Author: Amir Tzin <amirtz@nvidia.com>
Date:   Tue Nov 30 16:05:44 2021 +0200

    net/mlx5e: Wrap the tx reporter dump callback to extract the sq
    
    [ Upstream commit 918fc3855a6507a200e9cf22c20be852c0982687 ]
    
    Function mlx5e_tx_reporter_dump_sq() casts its void * argument to struct
    mlx5e_txqsq *, but in TX-timeout-recovery flow the argument is actually
    of type struct mlx5e_tx_timeout_ctx *.
    
     mlx5_core 0000:08:00.1 enp8s0f1: TX timeout detected
     mlx5_core 0000:08:00.1 enp8s0f1: TX timeout on queue: 1, SQ: 0x11ec, CQ: 0x146d, SQ Cons: 0x0 SQ Prod: 0x1, usecs since last trans: 21565000
     BUG: stack guard page was hit at 0000000093f1a2de (stack is 00000000b66ea0dc..000000004d932dae)
     kernel stack overflow (page fault): 0000 [#1] SMP NOPTI
     CPU: 5 PID: 95 Comm: kworker/u20:1 Tainted: G W OE 5.13.0_mlnx #1
     Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
     Workqueue: mlx5e mlx5e_tx_timeout_work [mlx5_core]
     RIP: 0010:mlx5e_tx_reporter_dump_sq+0xd3/0x180
     [mlx5_core]
     Call Trace:
     mlx5e_tx_reporter_dump+0x43/0x1c0 [mlx5_core]
     devlink_health_do_dump.part.91+0x71/0xd0
     devlink_health_report+0x157/0x1b0
     mlx5e_reporter_tx_timeout+0xb9/0xf0 [mlx5_core]
     ? mlx5e_tx_reporter_err_cqe_recover+0x1d0/0x1d0
     [mlx5_core]
     ? mlx5e_health_queue_dump+0xd0/0xd0 [mlx5_core]
     ? update_load_avg+0x19b/0x550
     ? set_next_entity+0x72/0x80
     ? pick_next_task_fair+0x227/0x340
     ? finish_task_switch+0xa2/0x280
       mlx5e_tx_timeout_work+0x83/0xb0 [mlx5_core]
       process_one_work+0x1de/0x3a0
       worker_thread+0x2d/0x3c0
     ? process_one_work+0x3a0/0x3a0
       kthread+0x115/0x130
     ? kthread_park+0x90/0x90
       ret_from_fork+0x1f/0x30
     --[ end trace 51ccabea504edaff ]---
     RIP: 0010:mlx5e_tx_reporter_dump_sq+0xd3/0x180
     PKRU: 55555554
     Kernel panic - not syncing: Fatal exception
     Kernel Offset: disabled
     end Kernel panic - not syncing: Fatal exception
    
    To fix this bug add a wrapper for mlx5e_tx_reporter_dump_sq() which
    extracts the sq from struct mlx5e_tx_timeout_ctx and set it as the
    TX-timeout-recovery flow dump callback.
    
    Fixes: 5f29458b77d5 ("net/mlx5e: Support dump callback in TX reporter")
    Signed-off-by: Aya Levin <ayal@nvidia.com>
    Signed-off-by: Amir Tzin <amirtz@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 219419510c4e6c49f19490dd56c0254f55f3b740
Author: Chris Mi <cmi@nvidia.com>
Date:   Tue Dec 14 03:52:53 2021 +0200

    net/mlx5: Fix tc max supported prio for nic mode
    
    [ Upstream commit d671e109bd8548d067b27e39e183a484430bf102 ]
    
    Only prio 1 is supported if firmware doesn't support ignore flow
    level for nic mode. The offending commit removed the check wrongly.
    Add it back.
    
    Fixes: 9a99c8f1253a ("net/mlx5e: E-Switch, Offload all chain 0 priorities when modify header and forward action is not supported")
    Signed-off-by: Chris Mi <cmi@nvidia.com>
    Reviewed-by: Roi Dayan <roid@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5da639db8b719822e0569ff53c4c4b5a1bafa7f7
Author: Moshe Shemesh <moshe@nvidia.com>
Date:   Tue Nov 23 20:08:13 2021 +0200

    net/mlx5: Fix SF health recovery flow
    
    [ Upstream commit 33de865f7bce3968676e43b0182af0a2dd359dae ]
    
    SF do not directly control the PCI device. During recovery flow SF
    should not be allowed to do pci disable or pci reset, its PF will do it.
    
    It fixes the following kernel trace:
    mlx5_core.sf mlx5_core.sf.25: mlx5_health_try_recover:387:(pid 40948): starting health recovery flow
    mlx5_core 0000:03:00.0: mlx5_pci_slot_reset was called
    mlx5_core 0000:03:00.0: wait vital counter value 0xab175 after 1 iterations
    mlx5_core.sf mlx5_core.sf.25: firmware version: 24.32.532
    mlx5_core.sf mlx5_core.sf.23: mlx5_health_try_recover:387:(pid 40946): starting health recovery flow
    mlx5_core 0000:03:00.0: mlx5_pci_slot_reset was called
    mlx5_core 0000:03:00.0: wait vital counter value 0xab193 after 1 iterations
    mlx5_core.sf mlx5_core.sf.23: firmware version: 24.32.532
    mlx5_core.sf mlx5_core.sf.25: mlx5_cmd_check:813:(pid 40948): ENABLE_HCA(0x104) op_mod(0x0) failed,
    status bad resource state(0x9), syndrome (0x658908)
    mlx5_core.sf mlx5_core.sf.25: mlx5_function_setup:1292:(pid 40948): enable hca failed
    mlx5_core.sf mlx5_core.sf.25: mlx5_health_try_recover:389:(pid 40948): health recovery failed
    
    Fixes: 1958fc2f0712 ("net/mlx5: SF, Add auxiliary device driver")
    Signed-off-by: Moshe Shemesh <moshe@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0cc069899fbec99ef5101b2f2d1b761b79285b8
Author: Shay Drory <shayd@nvidia.com>
Date:   Wed Nov 24 23:10:57 2021 +0200

    net/mlx5: Fix error print in case of IRQ request failed
    
    [ Upstream commit aa968f922039706f6d13e8870b49e424d0a8d9ad ]
    
    In case IRQ layer failed to find or to request irq, the driver is
    printing the first cpu of the provided affinity as part of the error
    print. Empty affinity is a valid input for the IRQ layer, and it is
    an error to call cpumask_first() on empty affinity.
    
    Remove the first cpu print from the error message.
    
    Fixes: c36326d38d93 ("net/mlx5: Round-Robin EQs over IRQs")
    Signed-off-by: Shay Drory <shayd@nvidia.com>
    Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4595dffccfa5b9360162c72cc0f6a33477d871cf
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Dec 22 06:54:53 2021 +0000

    net/mlx5: DR, Fix NULL vs IS_ERR checking in dr_domain_init_resources
    
    [ Upstream commit 6b8b42585886c59a008015083282aae434349094 ]
    
    The mlx5_get_uars_page() function  returns error pointers.
    Using IS_ERR() to check the return value to fix this.
    
    Fixes: 4ec9e7b02697 ("net/mlx5: DR, Expose steering domain functionality")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a68d72d899a2051e5a05f78aed9604fbc1f3ff34
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Dec 14 10:05:27 2021 +0300

    scsi: lpfc: Terminate string in lpfc_debugfs_nvmeio_trc_write()
    
    [ Upstream commit 9020be114a47bf7ff33e179b3bb0016b91a098e6 ]
    
    The "mybuf" string comes from the user, so we need to ensure that it is NUL
    terminated.
    
    Link: https://lore.kernel.org/r/20211214070527.GA27934@kili
    Fixes: bd2cdd5e400f ("scsi: lpfc: NVME Initiator: Add debugfs support")
    Reviewed-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 172fc0a7d7abdb94b94544765ae13348862b1abf
Author: Tom Rix <trix@redhat.com>
Date:   Fri Dec 24 07:07:39 2021 -0800

    selinux: initialize proto variable in selinux_ip_postroute_compat()
    
    commit 732bc2ff080c447f8524f40c970c481f5da6eed3 upstream.
    
    Clang static analysis reports this warning
    
    hooks.c:5765:6: warning: 4th function call argument is an uninitialized
                    value
            if (selinux_xfrm_postroute_last(sksec->sid, skb, &ad, proto))
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    selinux_parse_skb() can return ok without setting proto.  The later call
    to selinux_xfrm_postroute_last() does an early check of proto and can
    return ok if the garbage proto value matches.  So initialize proto.
    
    Cc: stable@vger.kernel.org
    Fixes: eef9b41622f2 ("selinux: cleanup selinux_xfrm_sock_rcv_skb() and selinux_xfrm_postroute_last()")
    Signed-off-by: Tom Rix <trix@redhat.com>
    [PM: typo/spelling and checkpatch.pl description fixes]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5cb610fa3d2c7b1deceb5c8fc3a7251b923fa70
Author: Javier Martinez Canillas <javierm@redhat.com>
Date:   Fri Nov 26 01:13:32 2021 +0100

    efi: Move efifb_setup_from_dmi() prototype from arch headers
    
    commit 4bc5e64e6cf37007e436970024e5998ee0935651 upstream.
    
    Commit 8633ef82f101 ("drivers/firmware: consolidate EFI framebuffer setup
    for all arches") made the Generic System Framebuffers (sysfb) driver able
    to be built on non-x86 architectures.
    
    But it left the efifb_setup_from_dmi() function prototype declaration in
    the architecture specific headers. This could lead to the following
    compiler warning as reported by the kernel test robot:
    
       drivers/firmware/efi/sysfb_efi.c:70:6: warning: no previous prototype for function 'efifb_setup_from_dmi' [-Wmissing-prototypes]
       void efifb_setup_from_dmi(struct screen_info *si, const char *opt)
            ^
       drivers/firmware/efi/sysfb_efi.c:70:1: note: declare 'static' if the function is not intended to be used outside of this translation unit
       void efifb_setup_from_dmi(struct screen_info *si, const char *opt)
    
    Fixes: 8633ef82f101 ("drivers/firmware: consolidate EFI framebuffer setup for all arches")
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: <stable@vger.kernel.org> # 5.15.x
    Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://lore.kernel.org/r/20211126001333.555514-1-javierm@redhat.com
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5677e07723648bd024504235541213ec6f18a533
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Fri Dec 3 23:41:12 2021 +1100

    powerpc/ptdump: Fix DEBUG_WX since generic ptdump conversion
    
    commit 8d84fca4375e3c35dadc16b8c7eee6821b2a575c upstream.
    
    In note_prot_wx() we bail out without reporting anything if
    CONFIG_PPC_DEBUG_WX is disabled.
    
    But CONFIG_PPC_DEBUG_WX was removed in the conversion to generic ptdump,
    we now need to use CONFIG_DEBUG_WX instead.
    
    Fixes: e084728393a5 ("powerpc/ptdump: Convert powerpc to GENERIC_PTDUMP")
    Cc: stable@vger.kernel.org # v5.15+
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Link: https://lore.kernel.org/r/20211203124112.2912562-1-mpe@ellerman.id.au
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc738764c9fa465a118300a78df4266263eaa8c4
Author: Heiko Carstens <hca@linux.ibm.com>
Date:   Thu Dec 23 17:43:14 2021 +0100

    recordmcount.pl: fix typo in s390 mcount regex
    
    commit 4eb1782eaa9fa1c224ad1fa0d13a9f09c3ab2d80 upstream.
    
    Commit 85bf17b28f97 ("recordmcount.pl: look for jgnop instruction as well
    as bcrl on s390") added a new alternative mnemonic for the existing brcl
    instruction. This is required for the combination old gcc version (pre 9.0)
    and binutils since version 2.37.
    However at the same time this commit introduced a typo, replacing brcl with
    bcrl. As a result no mcount locations are detected anymore with old gcc
    versions (pre 9.0) and binutils before version 2.37.
    Fix this by using the correct mnemonic again.
    
    Reported-by: Miroslav Benes <mbenes@suse.cz>
    Cc: Jerome Marchand <jmarchan@redhat.com>
    Cc: <stable@vger.kernel.org>
    Fixes: 85bf17b28f97 ("recordmcount.pl: look for jgnop instruction as well as bcrl on s390")
    Link: https://lore.kernel.org/r/alpine.LSU.2.21.2112230949520.19849@pobox.suse.cz
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 919f5678bae1f3ce630b970eccfd11f32a772ede
Author: Libin Yang <libin.yang@intel.com>
Date:   Tue Dec 21 09:08:17 2021 +0800

    ALSA: hda: intel-sdw-acpi: go through HDAS ACPI at max depth of 2
    
    [ Upstream commit 78ea40efb48e978756db2ce45fcfa55bac056b91 ]
    
    In the HDAS ACPI scope, the SoundWire may not be the direct child of HDAS.
    It needs to go through the ACPI table at max depth of 2 to find the
    SoundWire device from HDAS.
    
    Reviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Signed-off-by: Libin Yang <libin.yang@intel.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Link: https://lore.kernel.org/r/20211221010817.23636-3-yung-chuan.liao@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cce476954401e3421afafb25bbaa926050688b1d
Author: Libin Yang <libin.yang@intel.com>
Date:   Tue Dec 21 09:08:16 2021 +0800

    ALSA: hda: intel-sdw-acpi: harden detection of controller
    
    [ Upstream commit 385f287f9853da402d94278e59f594501c1d1dad ]
    
    The existing code currently sets a pointer to an ACPI handle before
    checking that it's actually a SoundWire controller. This can lead to
    issues where the graph walk continues and eventually fails, but the
    pointer was set already.
    
    This patch changes the logic so that the information provided to
    the caller is set when a controller is found.
    
    Reviewed-by: Péter Ujfalusi <peter.ujfalusi@linux.intel.com>
    Signed-off-by: Libin Yang <libin.yang@intel.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Link: https://lore.kernel.org/r/20211221010817.23636-2-yung-chuan.liao@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62f0a61fcb8a05302d2e5f0433b06f52729a214c
Author: Jackie Liu <liuyun01@kylinos.cn>
Date:   Fri Dec 17 10:07:54 2021 +0800

    memblock: fix memblock_phys_alloc() section mismatch error
    
    [ Upstream commit d7f55471db2719629f773c2d6b5742a69595bfd3 ]
    
    Fix modpost Section mismatch error in memblock_phys_alloc()
    
    [...]
    WARNING: modpost: vmlinux.o(.text.unlikely+0x1dcc): Section mismatch in reference
    from the function memblock_phys_alloc() to the function .init.text:memblock_phys_alloc_range()
    The function memblock_phys_alloc() references
    the function __init memblock_phys_alloc_range().
    This is often because memblock_phys_alloc lacks a __init
    annotation or the annotation of memblock_phys_alloc_range is wrong.
    
    ERROR: modpost: Section mismatches detected.
    Set CONFIG_SECTION_MISMATCH_WARN_ONLY=y to allow them.
    [...]
    
    memblock_phys_alloc() is a one-line wrapper, make it __always_inline to
    avoid these section mismatches.
    
    Reported-by: k2ci <kernel-bot@kylinos.cn>
    Suggested-by: Mike Rapoport <rppt@kernel.org>
    Signed-off-by: Jackie Liu <liuyun01@kylinos.cn>
    [rppt: slightly massaged changelog ]
    Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
    Link: https://lore.kernel.org/r/20211217020754.2874872-1-liu.yun@linux.dev
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea48bffecc3ed1fc137502ad7d4d396c904aa2d8
Author: Wang Qing <wangqing@vivo.com>
Date:   Tue Dec 14 04:18:36 2021 -0800

    platform/x86: apple-gmux: use resource_size() with res
    
    [ Upstream commit eb66fb03a727cde0ab9b1a3858de55c26f3007da ]
    
    This should be (res->end - res->start + 1) here actually,
    use resource_size() derectly.
    
    Signed-off-by: Wang Qing <wangqing@vivo.com>
    Link: https://lore.kernel.org/r/1639484316-75873-1-git-send-email-wangqing@vivo.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6964e81f11cec6980c9bb89e081fe1dc2d17ec27
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Dec 10 07:07:53 2021 +0000

    platform/mellanox: mlxbf-pmc: Fix an IS_ERR() vs NULL bug in mlxbf_pmc_map_counters
    
    [ Upstream commit 804034c4ffc502795cea9b3867acb2ec7fad99ba ]
    
    The devm_ioremap() function returns NULL on error, it doesn't return
    error pointers. Also according to doc of device_property_read_u64_array,
    values in info array are properties of device or NULL.
    
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20211210070753.10761-1-linmq006@gmail.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e96373f0a5f484bc1e193f9951dcb3adf24bf3f7
Author: Helge Deller <deller@gmx.de>
Date:   Wed Dec 8 11:06:52 2021 +0100

    parisc: Clear stale IIR value on instruction access rights trap
    
    [ Upstream commit 484730e5862f6b872dca13840bed40fd7c60fa26 ]
    
    When a trap 7 (Instruction access rights) occurs, this means the CPU
    couldn't execute an instruction due to missing execute permissions on
    the memory region.  In this case it seems the CPU didn't even fetched
    the instruction from memory and thus did not store it in the cr19 (IIR)
    register before calling the trap handler. So, the trap handler will find
    some random old stale value in cr19.
    
    This patch simply overwrites the stale IIR value with a constant magic
    "bad food" value (0xbaadf00d), in the hope people don't start to try to
    understand the various random IIR values in trap 7 dumps.
    
    Noticed-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d76daf2013ce1da20eab5e26bd81d983e1c18fb
Author: Paul Blakey <paulb@nvidia.com>
Date:   Tue Dec 14 19:24:33 2021 +0200

    net/sched: Extend qdisc control block with tc control block
    
    [ Upstream commit ec624fe740b416fb68d536b37fb8eef46f90b5c2 ]
    
    BPF layer extends the qdisc control block via struct bpf_skb_data_end
    and because of that there is no more room to add variables to the
    qdisc layer control block without going over the skb->cb size.
    
    Extend the qdisc control block with a tc control block,
    and move all tc related variables to there as a pre-step for
    extending the tc control block with additional members.
    
    Signed-off-by: Paul Blakey <paulb@nvidia.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80176f65fa28898e7e20077e85989be479392cd2
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Wed Dec 15 20:13:55 2021 +0900

    tomoyo: use hwight16() in tomoyo_domain_quota_is_ok()
    
    [ Upstream commit f702e1107601230eec707739038a89018ea3468d ]
    
    hwight16() is much faster. While we are at it, no need to include
    "perm =" part into data_race() macro, for perm is a local variable
    that cannot be accessed by other threads.
    
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fe6a63b5dbdc0864f01d3171046af03d34ee747
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Tue Dec 14 10:45:26 2021 +0100

    tomoyo: Check exceeded quota early in tomoyo_domain_quota_is_ok().
    
    [ Upstream commit 04e57a2d952bbd34bc45744e72be3eecdc344294 ]
    
    If tomoyo is used in a testing/fuzzing environment in learning mode,
    for lots of domains the quota will be exceeded and stay exceeded
    for prolonged periods of time. In such cases it's pointless (and slow)
    to walk the whole acl list again and again just to rediscover that
    the quota is exceeded. We already have the TOMOYO_DIF_QUOTA_WARNED flag
    that notes the overflow condition. Check it early to avoid the slowdown.
    
    [penguin-kernel]
    This patch causes a user visible change that the learning mode will not be
    automatically resumed after the quota is increased. To resume the learning
    mode, administrator will need to explicitly clear TOMOYO_DIF_QUOTA_WARNED
    flag after increasing the quota. But I think that this change is generally
    preferable, for administrator likely wants to optimize the acl list for
    that domain before increasing the quota, or that domain likely hits the
    quota again. Therefore, don't try to care to clear TOMOYO_DIF_QUOTA_WARNED
    flag automatically when the quota for that domain changed.
    
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e97d5549f842dafb7d212e4269574efddc596d1a
Author: Samuel Čavoj <samuel@cavoj.net>
Date:   Sat Dec 4 13:17:36 2021 -0800

    Input: i8042 - enable deferred probe quirk for ASUS UM325UA
    
    [ Upstream commit 44ee250aeeabb28b52a10397ac17ffb8bfe94839 ]
    
    The ASUS UM325UA suffers from the same issue as the ASUS UX425UA, which
    is a very similar laptop. The i8042 device is not usable immediately
    after boot and fails to initialize, requiring a deferred retry.
    
    Enable the deferred probe quirk for the UM325UA.
    
    BugLink: https://bugzilla.suse.com/show_bug.cgi?id=1190256
    Signed-off-by: Samuel Čavoj <samuel@cavoj.net>
    Link: https://lore.kernel.org/r/20211204015615.232948-1-samuel@cavoj.net
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd33054e4c18a54645072c7a62d46cdf6d05dace
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sun Nov 28 23:21:41 2021 -0800

    Input: i8042 - add deferred probe support
    
    [ Upstream commit 9222ba68c3f4065f6364b99cc641b6b019ef2d42 ]
    
    We've got a bug report about the non-working keyboard on ASUS ZenBook
    UX425UA.  It seems that the PS/2 device isn't ready immediately at
    boot but takes some seconds to get ready.  Until now, the only
    workaround is to defer the probe, but it's available only when the
    driver is a module.  However, many distros, including openSUSE as in
    the original report, build the PS/2 input drivers into kernel, hence
    it won't work easily.
    
    This patch adds the support for the deferred probe for i8042 stuff as
    a workaround of the problem above.  When the deferred probe mode is
    enabled and the device couldn't be probed, it'll be repeated with the
    standard deferred probe mechanism.
    
    The deferred probe mode is enabled either via the new option
    i8042.probe_defer or via the quirk table entry.  As of this patch, the
    quirk table contains only ASUS ZenBook UX425UA.
    
    The deferred probe part is based on Fabio's initial work.
    
    BugLink: https://bugzilla.suse.com/show_bug.cgi?id=1190256
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Tested-by: Samuel Čavoj <samuel@cavoj.net>
    Link: https://lore.kernel.org/r/20211117063757.11380-1-tiwai@suse.de
    
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
