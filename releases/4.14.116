commit 6d1510d86ef67e5fadb8038671e2ec43416daf7f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat May 4 09:15:23 2019 +0200

    Linux 4.14.116

commit 464f7643bbcfb383a3a5436c58eb5c512e791c51
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Sat Mar 9 00:04:11 2019 -0600

    leds: pca9532: fix a potential NULL pointer dereference
    
    [ Upstream commit 0aab8e4df4702b31314a27ec4b0631dfad0fae0a ]
    
    In case of_match_device cannot find a match, return -EINVAL to avoid
    NULL pointer dereference.
    
    Fixes: fa4191a609f2 ("leds: pca9532: Add device tree support")
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit fd76b2d5045f0a23e4fa2199500af326e5a1081c
Author: Andrei Vagin <avagin@gmail.com>
Date:   Thu Mar 28 20:44:13 2019 -0700

    ptrace: take into account saved_sigmask in PTRACE{GET,SET}SIGMASK
    
    [ Upstream commit fcfc2aa0185f4a731d05a21e9f359968fdfd02e7 ]
    
    There are a few system calls (pselect, ppoll, etc) which replace a task
    sigmask while they are running in a kernel-space
    
    When a task calls one of these syscalls, the kernel saves a current
    sigmask in task->saved_sigmask and sets a syscall sigmask.
    
    On syscall-exit-stop, ptrace traps a task before restoring the
    saved_sigmask, so PTRACE_GETSIGMASK returns the syscall sigmask and
    PTRACE_SETSIGMASK does nothing, because its sigmask is replaced by
    saved_sigmask, when the task returns to user-space.
    
    This patch fixes this problem.  PTRACE_GETSIGMASK returns saved_sigmask
    if it's set.  PTRACE_SETSIGMASK drops the TIF_RESTORE_SIGMASK flag.
    
    Link: http://lkml.kernel.org/r/20181120060616.6043-1-avagin@gmail.com
    Fixes: 29000caecbe8 ("ptrace: add ability to get/set signal-blocked mask")
    Signed-off-by: Andrei Vagin <avagin@gmail.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 0af211ec4928af9a01a1b0c81e999e00cd728706
Author: Joerg Roedel <jroedel@suse.de>
Date:   Thu Mar 28 11:44:59 2019 +0100

    iommu/amd: Reserve exclusion range in iova-domain
    
    [ Upstream commit 8aafaaf2212192012f5bae305bb31cdf7681d777 ]
    
    If a device has an exclusion range specified in the IVRS
    table, this region needs to be reserved in the iova-domain
    of that device. This hasn't happened until now and can cause
    data corruption on data transfered with these devices.
    
    Treat exclusion ranges as reserved regions in the iommu-core
    to fix the problem.
    
    Fixes: be2a022c0dd0 ('x86, AMD IOMMU: add functions to parse IOMMU memory mapping requirements for devices')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Reviewed-by: Gary R Hook <gary.hook@amd.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 03f9b44775f88a4b916f87fb9be6c6055e4647b9
Author: Changbin Du <changbin.du@intel.com>
Date:   Mon Mar 25 15:16:47 2019 +0000

    kconfig/[mn]conf: handle backspace (^H) key
    
    [ Upstream commit 9c38f1f044080392603c497ecca4d7d09876ff99 ]
    
    Backspace is not working on some terminal emulators which do not send the
    key code defined by terminfo. Terminals either send '^H' (8) or '^?' (127).
    But currently only '^?' is handled. Let's also handle '^H' for those
    terminals.
    
    Signed-off-by: Changbin Du <changbin.du@gmail.com>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit d23be337c71d9951d754c31f7c680a148535ea11
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Mar 28 14:13:47 2019 +0100

    gpio: of: Fix of_gpiochip_add() error path
    
    [ Upstream commit f7299d441a4da8a5088e651ea55023525a793a13 ]
    
    If the call to of_gpiochip_scan_gpios() in of_gpiochip_add() fails, no
    error handling is performed.  This lead to the need of callers to call
    of_gpiochip_remove() on failure, which causes "BAD of_node_put() on ..."
    if the failure happened before the call to of_node_get().
    
    Fix this by adding proper error handling.
    
    Note that calling gpiochip_remove_pin_ranges() multiple times causes no
    harm: subsequent calls are a no-op.
    
    Fixes: dfbd379ba9b7431e ("gpio: of: Return error if gpio hog configuration failed")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Mukesh Ojha <mojha@codeaurora.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 6a56dc1e2087e013446e69f5a4879575036eb995
Author: raymond pang <raymondpangxd@gmail.com>
Date:   Thu Mar 28 12:19:25 2019 +0000

    libata: fix using DMA buffers on stack
    
    [ Upstream commit dd08a8d9a66de4b54575c294a92630299f7e0fe7 ]
    
    When CONFIG_VMAP_STACK=y, __pa() returns incorrect physical address for
    a stack virtual address. Stack DMA buffers must be avoided.
    
    Signed-off-by: raymond pang <raymondpangxd@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 790d908cbdeea0bd711ffb25ba03a522fcbcd195
Author: Steffen Maier <maier@linux.ibm.com>
Date:   Tue Mar 26 14:37:00 2019 +0100

    scsi: zfcp: reduce flood of fcrscn1 trace records on multi-element RSCN
    
    [ Upstream commit c8206579175c34a2546de8a74262456278a7795a ]
    
    If an incoming ELS of type RSCN contains more than one element, zfcp
    suboptimally causes repeated erp trigger NOP trace records for each
    previously failed port. These could be ports that went away.  It loops over
    each RSCN element, and for each of those in an inner loop over all
    zfcp_ports.
    
    The trigger to recover failed ports should be just the reception of some
    RSCN, no matter how many elements it has. So we can loop over failed ports
    separately, and only then loop over each RSCN element to handle the
    non-failed ports.
    
    The call chain was:
    
      zfcp_fc_incoming_rscn
        for (i = 1; i < no_entries; i++)
          _zfcp_fc_incoming_rscn
            list_for_each_entry(port, &adapter->port_list, list)
              if (masked port->d_id match) zfcp_fc_test_link
              if (!port->d_id) zfcp_erp_port_reopen "fcrscn1"   <===
    
    In order the reduce the "flooding" of the REC trace area in such cases, we
    factor out handling the failed ports to be outside of the entries loop:
    
      zfcp_fc_incoming_rscn
        if (no_entries > 1)                                     <===
          list_for_each_entry(port, &adapter->port_list, list)  <===
            if (!port->d_id) zfcp_erp_port_reopen "fcrscn1"     <===
        for (i = 1; i < no_entries; i++)
          _zfcp_fc_incoming_rscn
            list_for_each_entry(port, &adapter->port_list, list)
              if (masked port->d_id match) zfcp_fc_test_link
    
    Abbreviated example trace records before this code change:
    
    Tag            : fcrscn1
    WWPN           : 0x500507630310d327
    ERP want       : 0x02
    ERP need       : 0x02
    
    Tag            : fcrscn1
    WWPN           : 0x500507630310d327
    ERP want       : 0x02
    ERP need       : 0x00                 NOP => superfluous trace record
    
    The last trace entry repeats if there are more than 2 RSCN elements.
    
    Signed-off-by: Steffen Maier <maier@linux.ibm.com>
    Reviewed-by: Benjamin Block <bblock@linux.ibm.com>
    Reviewed-by: Jens Remus <jremus@linux.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 9b0d0e776dae15f613549ae6dcf0e097705c84df
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Tue Mar 26 01:38:58 2019 +0000

    ceph: fix use-after-free on symlink traversal
    
    [ Upstream commit daf5cc27eed99afdea8d96e71b89ba41f5406ef6 ]
    
    free the symlink body after the same RCU delay we have for freeing the
    struct inode itself, so that traversal during RCU pathwalk wouldn't step
    into freed memory.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit cbce4a687c47514c5221a3506a69b83078e6a413
Author: Mukesh Ojha <mojha@codeaurora.org>
Date:   Tue Mar 26 13:42:22 2019 +0530

    usb: u132-hcd: fix resource leak
    
    [ Upstream commit f276e002793cdb820862e8ea8f76769d56bba575 ]
    
    if platform_driver_register fails, cleanup the allocated resource
    gracefully.
    
    Signed-off-by: Mukesh Ojha <mojha@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 085df4a0edb58e5dfe6a661a5dcc5e0e3cfbf4c1
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Wed Mar 20 10:27:11 2019 -0500

    usb: usb251xb: fix to avoid potential NULL pointer dereference
    
    [ Upstream commit 41f00e6e9e55546390031996b773e7f3c1d95928 ]
    
    of_match_device in usb251xb_probe can fail and returns a NULL pointer.
    The patch avoids a potential NULL pointer dereference in this scenario.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Reviewed-by: Richard Leitner <richard.leitner@skidata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 5d429f762470c15b7bc2d5b3f3bb2e5bb41c22d6
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Thu Mar 14 01:30:59 2019 -0500

    scsi: qla4xxx: fix a potential NULL pointer dereference
    
    [ Upstream commit fba1bdd2a9a93f3e2181ec1936a3c2f6b37e7ed6 ]
    
    In case iscsi_lookup_endpoint fails, the fix returns -EINVAL to avoid NULL
    pointer dereference.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Acked-by: Manish Rangankar <mrangankar@marvell.com>
    Reviewed-by: Mukesh Ojha <mojha@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 12ec9f9267db6de43c524a5be7291f4863e4181d
Author: Jean-Philippe Brucker <jean-philippe@linaro.org>
Date:   Fri Mar 22 15:26:57 2019 +0000

    drm/meson: Uninstall IRQ handler
    
    [ Upstream commit 2d8f92897ad816f5dda54b2ed2fd9f2d7cb1abde ]
    
    meson_drv_unbind() doesn't unregister the IRQ handler, which can lead to
    use-after-free if the IRQ fires after unbind:
    
    [   64.656876] Unable to handle kernel paging request at virtual address ffff000011706dbc
    ...
    [   64.662001] pc : meson_irq+0x18/0x30 [meson_drm]
    
    I'm assuming that a similar problem could happen on the error path of
    bind(), so uninstall the IRQ handler there as well.
    
    Fixes: bbbe775ec5b5 ("drm: Add support for Amlogic Meson Graphic Controller")
    Signed-off-by: Jean-Philippe Brucker <jean-philippe.brucker@arm.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190322152657.13752-2-jean-philippe.brucker@arm.com
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit afc0ca59516b928d7efa6a416ee9d4b1bb52ef1e
Author: Jean-Philippe Brucker <jean-philippe@linaro.org>
Date:   Fri Mar 22 15:26:56 2019 +0000

    drm/meson: Fix invalid pointer in meson_drv_unbind()
    
    [ Upstream commit 776e78677f514ecddd12dba48b9040958999bd5a ]
    
    meson_drv_bind() registers a meson_drm struct as the device's privdata,
    but meson_drv_unbind() tries to retrieve a drm_device. This may cause a
    segfault on shutdown:
    
    [ 5194.593429] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000197
     ...
    [ 5194.788850] Call trace:
    [ 5194.791349]  drm_dev_unregister+0x1c/0x118 [drm]
    [ 5194.795848]  meson_drv_unbind+0x50/0x78 [meson_drm]
    
    Retrieve the right pointer in meson_drv_unbind().
    
    Fixes: bbbe775ec5b5 ("drm: Add support for Amlogic Meson Graphic Controller")
    Signed-off-by: Jean-Philippe Brucker <jean-philippe.brucker@arm.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190322152657.13752-1-jean-philippe.brucker@arm.com
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit ecb44816ba352d9bcf8e0d814d452cbbe45f8bfb
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Sun Mar 24 18:10:02 2019 -0500

    gpio: aspeed: fix a potential NULL pointer dereference
    
    [ Upstream commit 6cf4511e9729c00a7306cf94085f9cc3c52ee723 ]
    
    In case devm_kzalloc, the patch returns ENOMEM to avoid potential
    NULL pointer dereference.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Reviewed-by: Andrew Jeffery <andrew@aj.id.au>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 6d18191c3eb53d25e2df7e46a86c3964efdb0394
Author: Wen Yang <wen.yang99@zte.com.cn>
Date:   Fri Mar 22 11:04:09 2019 +0800

    net: ethernet: ti: fix possible object reference leak
    
    [ Upstream commit 75eac7b5f68b0a0671e795ac636457ee27cc11d8 ]
    
    The call to of_get_child_by_name returns a node pointer with refcount
    incremented thus it must be explicitly decremented after the last
    usage.
    
    Detected by coccinelle with the following warnings:
    ./drivers/net/ethernet/ti/netcp_ethss.c:3661:2-8: ERROR: missing of_node_put; acquired a node pointer with refcount incremented on line 3654, but without a corresponding object release within this function.
    ./drivers/net/ethernet/ti/netcp_ethss.c:3665:2-8: ERROR: missing of_node_put; acquired a node pointer with refcount incremented on line 3654, but without a corresponding object release within this function.
    
    Signed-off-by: Wen Yang <wen.yang99@zte.com.cn>
    Cc: Wingman Kwok <w-kwok2@ti.com>
    Cc: Murali Karicheri <m-karicheri2@ti.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: netdev@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 0f45a8b6c9cec97e42df825a2050d6c32c50e248
Author: Wen Yang <wen.yang99@zte.com.cn>
Date:   Fri Mar 22 11:04:08 2019 +0800

    net: ibm: fix possible object reference leak
    
    [ Upstream commit be693df3cf9dd113ff1d2c0d8150199efdba37f6 ]
    
    The call to ehea_get_eth_dn returns a node pointer with refcount
    incremented thus it must be explicitly decremented after the last
    usage.
    
    Detected by coccinelle with the following warnings:
    ./drivers/net/ethernet/ibm/ehea/ehea_main.c:3163:2-8: ERROR: missing of_node_put; acquired a node pointer with refcount incremented on line 3154, but without a corresponding object release within this function.
    
    Signed-off-by: Wen Yang <wen.yang99@zte.com.cn>
    Cc: Douglas Miller <dougmill@linux.ibm.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: netdev@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 709606ec20c9144c44b49cf5a1d4b91710a22e95
Author: Wen Yang <wen.yang99@zte.com.cn>
Date:   Fri Mar 22 11:04:07 2019 +0800

    net: xilinx: fix possible object reference leak
    
    [ Upstream commit fa3a419d2f674b431d38748cb58fb7da17ee8949 ]
    
    The call to of_parse_phandle returns a node pointer with refcount
    incremented thus it must be explicitly decremented after the last
    usage.
    
    Detected by coccinelle with the following warnings:
    ./drivers/net/ethernet/xilinx/xilinx_axienet_main.c:1624:1-7: ERROR: missing of_node_put; acquired a node pointer with refcount incremented on line 1569, but without a corresponding object release within this function.
    
    Signed-off-by: Wen Yang <wen.yang99@zte.com.cn>
    Cc: Anirudha Sarangi <anirudh@xilinx.com>
    Cc: John Linn <John.Linn@xilinx.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Michal Simek <michal.simek@xilinx.com>
    Cc: netdev@vger.kernel.org
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit b341405561703aaadd50d88cad873a9d287e8a48
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Mar 21 17:57:56 2019 -0400

    NFS: Fix a typo in nfs_init_timeout_values()
    
    [ Upstream commit 5a698243930c441afccec04e4d5dc8febfd2b775 ]
    
    Specifying a retrans=0 mount parameter to a NFS/TCP mount, is
    inadvertently causing the NFS client to rewrite any specified
    timeout parameter to the default of 60 seconds.
    
    Fixes: a956beda19a6 ("NFS: Allow the mount option retrans=0")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit d4644c90586bfcdac2800fe4e9a94b5cd35996c7
Author: Masanari Iida <standby24x7@gmail.com>
Date:   Tue Mar 19 01:30:09 2019 +0900

    ARM: dts: imx6qdl: Fix typo in imx6qdl-icore-rqs.dtsi
    
    [ Upstream commit 41b37f4c0fa67185691bcbd30201cad566f2f0d1 ]
    
    This patch fixes a spelling typo.
    
    Signed-off-by: Masanari Iida <standby24x7@gmail.com>
    Fixes: cc42603de320 ("ARM: dts: imx6q-icore-rqs: Add Engicam IMX6 Q7 initial support")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit d2e7387e5128e2182a90e82ff36a5dab4cd0c1bc
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Wed Mar 20 15:00:15 2019 +0100

    net/sched: don't dereference a->goto_chain to read the chain index
    
    [ Upstream commit fe384e2fa36ca084a456fd30558cccc75b4b3fbd ]
    
    callers of tcf_gact_goto_chain_index() can potentially read an old value
    of the chain index, or even dereference a NULL 'goto_chain' pointer,
    because 'goto_chain' and 'tcfa_action' are read in the traffic path
    without caring of concurrent write in the control path. The most recent
    value of chain index can be read also from a->tcfa_action (it's encoded
    there together with TC_ACT_GOTO_CHAIN bits), so we don't really need to
    dereference 'goto_chain': just read the chain id from the control action.
    
    Fixes: e457d86ada27 ("net: sched: add couple of goto_chain helpers")
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 670588f2eb0f9f8ada16d834935bd535c31f482b
Author: Harini Katakam <harini.katakam@xilinx.com>
Date:   Wed Mar 20 19:12:22 2019 +0530

    net: macb: Add null check for PCLK and HCLK
    
    [ Upstream commit cd5afa91f078c0787be0a62b5ef90301c00b0271 ]
    
    Both PCLK and HCLK are "required" clocks according to macb devicetree
    documentation. There is a chance that devm_clk_get doesn't return a
    negative error but just a NULL clock structure instead. In such a case
    the driver proceeds as usual and uses pclk value 0 to calculate MDC
    divisor which is incorrect. Hence fix the same in clock initialization.
    
    Signed-off-by: Harini Katakam <harini.katakam@xilinx.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit d1e7cfba1e8952b4d7f03d7acb14822c29f743e5
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Wed Mar 20 10:42:32 2019 -0500

    staging: rtlwifi: Fix potential NULL pointer dereference of kzalloc
    
    [ Upstream commit 6a8ca24590a2136921439b376c926c11a6effc0e ]
    
    phydm.internal is allocated using kzalloc which is used multiple
    times without a check for NULL pointer. This patch avoids such a
    scenario by returning 0, consistent with the failure case.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Reviewed-by: Mukesh Ojha <mojha@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 9db1d06bd4ada8ffd0605cc31daca8f410aa7548
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Mar 21 09:26:38 2019 +0300

    staging: rtl8712: uninitialized memory in read_bbreg_hdl()
    
    [ Upstream commit 22c971db7dd4b0ad8dd88e99c407f7a1f4231a2e ]
    
    Colin King reported a bug in read_bbreg_hdl():
    
            memcpy(pcmd->rsp, (u8 *)&val, pcmd->rspsz);
    
    The problem is that "val" is uninitialized.
    
    This code is obviously not useful, but so far as I can tell
    "pcmd->cmdcode" is never GEN_CMD_CODE(_Read_BBREG) so it's not harmful
    either.  For now the easiest fix is to just call r8712_free_cmd_obj()
    and return.
    
    Fixes: 2865d42c78a9 ("staging: r8712u: Add the new driver to the mainline kernel")
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 726d8583abf43495475f5e95189bdeb28c57e015
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Wed Mar 20 12:02:49 2019 -0500

    staging: rtlwifi: rtl8822b: fix to avoid potential NULL pointer dereference
    
    [ Upstream commit d70d70aec9632679dd00dcc1b1e8b2517e2c7da0 ]
    
    skb allocated via dev_alloc_skb can fail and return a NULL pointer.
    This patch avoids such a scenario and returns, consistent with other
    invocations.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Reviewed-by: Mukesh Ojha <mojha@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 6849e040a935a09fdfee55c7f9fe12609921c489
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Wed Mar 20 12:21:35 2019 -0500

    staging: rtl8188eu: Fix potential NULL pointer dereference of kcalloc
    
    [ Upstream commit 7671ce0d92933762f469266daf43bd34d422d58c ]
    
    hwxmits is allocated via kcalloc and not checked for failure before its
    dereference. The patch fixes this problem by returning error upstream
    in rtl8723bs, rtl8188eu.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Acked-by: Mukesh Ojha <mojha@codeaurora.org>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit b6ca8ec8bb742625e8b2e19e1fcbb3936a543cef
Author: Lukas Wunner <lukas@wunner.de>
Date:   Wed Mar 20 15:02:00 2019 +0100

    net: ks8851: Set initial carrier state to down
    
    [ Upstream commit 9624bafa5f6418b9ca5b3f66d1f6a6a2e8bf6d4c ]
    
    The ks8851 chip's initial carrier state is down. A Link Change Interrupt
    is signaled once interrupts are enabled if the carrier is up.
    
    The ks8851 driver has it backwards by assuming that the initial carrier
    state is up. The state is therefore misrepresented if the interface is
    opened with no cable attached. Fix it.
    
    The Link Change interrupt is sometimes not signaled unless the P1MBSR
    register (which contains the Link Status bit) is read on ->ndo_open().
    This might be a hardware erratum. Read the register by calling
    mii_check_link(), which has the desirable side effect of setting the
    carrier state to down if the cable was detached while the interface was
    closed.
    
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: Frank Pavlic <f.pavlic@kunbus.de>
    Cc: Ben Dooks <ben.dooks@codethink.co.uk>
    Cc: Tristram Ha <Tristram.Ha@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 64e8347986d0962dfbb335c5a6754bb261c69aa9
Author: Lukas Wunner <lukas@wunner.de>
Date:   Wed Mar 20 15:02:00 2019 +0100

    net: ks8851: Delay requesting IRQ until opened
    
    [ Upstream commit d268f31552794abf5b6aa5af31021643411f25f5 ]
    
    The ks8851 driver currently requests the IRQ before registering the
    net_device.  Because the net_device name is used as IRQ name and is
    still "eth%d" when the IRQ is requested, it's impossibe to tell IRQs
    apart if multiple ks8851 chips are present.  Most other drivers delay
    requesting the IRQ until the net_device is opened.  Do the same.
    
    The driver doesn't enable interrupts on the chip before opening the
    net_device and disables them when closing it, so there doesn't seem to
    be a need to request the IRQ already on probe.
    
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: Frank Pavlic <f.pavlic@kunbus.de>
    Cc: Ben Dooks <ben.dooks@codethink.co.uk>
    Cc: Tristram Ha <Tristram.Ha@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 79b7bb03cd4675bc7383420c15281cecf5fb6466
Author: Lukas Wunner <lukas@wunner.de>
Date:   Wed Mar 20 15:02:00 2019 +0100

    net: ks8851: Reassert reset pin if chip ID check fails
    
    [ Upstream commit 761cfa979a0c177d6c2d93ef5585cd79ae49a7d5 ]
    
    Commit 73fdeb82e963 ("net: ks8851: Add optional vdd_io regulator and
    reset gpio") amended the ks8851 driver to briefly assert the chip's
    reset pin on probe. It also amended the probe routine's error path to
    reassert the reset pin if a subsequent initialization step fails.
    
    However the commit misplaced reassertion of the reset pin in the error
    path such that it is not performed if the check of the Chip ID and
    Enable Register (CIDER) fails. The error path is therefore slightly
    asymmetrical to the probe routine's body. Fix it.
    
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: Frank Pavlic <f.pavlic@kunbus.de>
    Cc: Stephen Boyd <sboyd@codeaurora.org>
    Cc: Nishanth Menon <nm@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit fce7c596c8bd726c07c09008134fa1ea9baceea1
Author: Lukas Wunner <lukas@wunner.de>
Date:   Wed Mar 20 15:02:00 2019 +0100

    net: ks8851: Dequeue RX packets explicitly
    
    [ Upstream commit 536d3680fd2dab5c39857d62a3e084198fc74ff9 ]
    
    The ks8851 driver lets the chip auto-dequeue received packets once they
    have been read in full. It achieves that by setting the ADRFE flag in
    the RXQCR register ("Auto-Dequeue RXQ Frame Enable").
    
    However if allocation of a packet's socket buffer or retrieval of the
    packet over the SPI bus fails, the packet will not have been read in
    full and is not auto-dequeued. Such partial retrieval of a packet
    confuses the chip's RX queue management:  On the next RX interrupt,
    the first packet read from the queue will be the one left there
    previously and this one can be retrieved without issues. But for any
    newly received packets, the frame header status and byte count registers
    (RXFHSR and RXFHBCR) contain bogus values, preventing their retrieval.
    
    The chip allows explicitly dequeueing a packet from the RX queue by
    setting the RRXEF flag in the RXQCR register ("Release RX Error Frame").
    This could be used to dequeue the packet in case of an error, but if
    that error is a failed SPI transfer, it is unknown if the packet was
    transferred in full and was auto-dequeued or if it was only transferred
    in part and requires an explicit dequeue. The safest approach is thus
    to always dequeue packets explicitly and forgo auto-dequeueing.
    
    Without this change, I've witnessed packet retrieval break completely
    when an SPI DMA transfer fails, requiring a chip reset. Explicit
    dequeueing magically fixes this and makes packet retrieval absolutely
    robust for me.
    
    The chip's documentation suggests auto-dequeuing and uses the RRXEF
    flag only to dequeue error frames which the driver doesn't want to
    retrieve. But that seems to be a fair-weather approach.
    
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: Frank Pavlic <f.pavlic@kunbus.de>
    Cc: Ben Dooks <ben.dooks@codethink.co.uk>
    Cc: Tristram Ha <Tristram.Ha@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit a4ab77747e79a39c09a10f16a004453bce095e89
Author: Marco Felsch <m.felsch@pengutronix.de>
Date:   Mon Mar 4 11:49:40 2019 +0100

    ARM: dts: pfla02: increase phy reset duration
    
    [ Upstream commit 032f85c9360fb1a08385c584c2c4ed114b33c260 ]
    
    Increase the reset duration to ensure correct phy functionality. The
    reset duration is taken from barebox commit 52fdd510de ("ARM: dts:
    pfla02: use long enough reset for ethernet phy"):
    
      Use a longer reset time for ethernet phy Micrel KSZ9031RNX. Otherwise a
      small percentage of modules have 'transmission timeouts' errors like
    
      barebox@Phytec phyFLEX-i.MX6 Quad Carrier-Board:/ ifup eth0
      warning: No MAC address set. Using random address 7e:94:4d:02:f8:f3
      eth0: 1000Mbps full duplex link detected
      eth0: transmission timeout
      T eth0: transmission timeout
      T eth0: transmission timeout
      T eth0: transmission timeout
      T eth0: transmission timeout
    
    Cc: Stefan Christ <s.christ@phytec.de>
    Cc: Christian Hemp <c.hemp@phytec.de>
    Signed-off-by: Marco Felsch <m.felsch@pengutronix.de>
    Fixes: 3180f956668e ("ARM: dts: Phytec imx6q pfla02 and pbab01 support")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 5aedac453b9bb16a00087cc6cd6f2138c8366f37
Author: Guido Kiener <guido@kiener-muenchen.de>
Date:   Mon Mar 18 09:18:34 2019 +0100

    usb: gadget: net2272: Fix net2272_dequeue()
    
    [ Upstream commit 091dacc3cc10979ab0422f0a9f7fcc27eee97e69 ]
    
    Restore the status of ep->stopped in function net2272_dequeue().
    
    When the given request is not found in the endpoint queue
    the function returns -EINVAL without restoring the state of
    ep->stopped. Thus the endpoint keeps blocked and does not transfer
    any data anymore.
    
    This fix is only compile-tested, since we do not have a
    corresponding hardware. An analogous fix was tested in the sibling
    driver. See "usb: gadget: net2280: Fix net2280_dequeue()"
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Guido Kiener <guido.kiener@rohde-schwarz.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 12d9d2e9ce986f89d86686559d29ac4a3fba674a
Author: Guido Kiener <guido@kiener-muenchen.de>
Date:   Mon Mar 18 09:18:33 2019 +0100

    usb: gadget: net2280: Fix net2280_dequeue()
    
    [ Upstream commit f1d3fba17cd4eeea20397f1324b7b9c69a6a935c ]
    
    When a request must be dequeued with net2280_dequeue() e.g. due
    to a device clear action and the same request is finished by the
    function scan_dma_completions() then the function net2280_dequeue()
    does not find the request in the following search loop and
    returns the error -EINVAL without restoring the status ep->stopped.
    Thus the endpoint keeps blocked and does not receive any data
    anymore.
    This fix restores the status and does not issue an error message.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Guido Kiener <guido.kiener@rohde-schwarz.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit c276c78434bf90202df2072dd4ca3649dee84b2f
Author: Guido Kiener <guido@kiener-muenchen.de>
Date:   Tue Mar 19 19:12:03 2019 +0100

    usb: gadget: net2280: Fix overrun of OUT messages
    
    [ Upstream commit 9d6a54c1430647355a5e23434881b2ca3d192b48 ]
    
    The OUT endpoint normally blocks (NAK) subsequent packets when a
    short packet was received and returns an incomplete queue entry to
    the gadget driver. Thereby the gadget driver can detect a short packet
    when reading queue entries with a length that is not equal to a
    multiple of packet size.
    
    The start_queue() function enables receiving OUT packets regardless of
    the content of the OUT FIFO. This results in a race: With the current
    code, it's possible that the "!ep->is_in && (readl(&ep->regs->ep_stat)
    & BIT(NAK_OUT_PACKETS))" test in start_dma() will fail, then a short
    packet will be received, and then start_queue() will call
    stop_out_naking(). That's what we don't want (OUT naking gets turned
    off while there is data in the FIFO) because then the next driver
    request might receive a mixture of old and new packets.
    
    With the patch, this race can't occur because the FIFO's state is
    tested after we know that OUT naking is already turned on, and OUT
    naking is stopped only when both of the conditions are met.  This
    ensures that all received data is delivered to the gadget driver,
    which can detect a short packet now before new packets are appended
    to the last short packet.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Guido Kiener <guido.kiener@rohde-schwarz.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 423ad0b9b095a23e3cde27f2e79e6835e134968e
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Mar 19 12:56:23 2019 +0000

    KVM: arm/arm64: vgic-its: Take the srcu lock when parsing the memslots
    
    [ Upstream commit 7494cec6cb3ba7385a6a223b81906384f15aae34 ]
    
    Calling kvm_is_visible_gfn() implies that we're parsing the memslots,
    and doing this without the srcu lock is frown upon:
    
    [12704.164532] =============================
    [12704.164544] WARNING: suspicious RCU usage
    [12704.164560] 5.1.0-rc1-00008-g600025238f51-dirty #16 Tainted: G        W
    [12704.164573] -----------------------------
    [12704.164589] ./include/linux/kvm_host.h:605 suspicious rcu_dereference_check() usage!
    [12704.164602] other info that might help us debug this:
    [12704.164616] rcu_scheduler_active = 2, debug_locks = 1
    [12704.164631] 6 locks held by qemu-system-aar/13968:
    [12704.164644]  #0: 000000007ebdae4f (&kvm->lock){+.+.}, at: vgic_its_set_attr+0x244/0x3a0
    [12704.164691]  #1: 000000007d751022 (&its->its_lock){+.+.}, at: vgic_its_set_attr+0x250/0x3a0
    [12704.164726]  #2: 00000000219d2706 (&vcpu->mutex){+.+.}, at: lock_all_vcpus+0x64/0xd0
    [12704.164761]  #3: 00000000a760aecd (&vcpu->mutex){+.+.}, at: lock_all_vcpus+0x64/0xd0
    [12704.164794]  #4: 000000000ef8e31d (&vcpu->mutex){+.+.}, at: lock_all_vcpus+0x64/0xd0
    [12704.164827]  #5: 000000007a872093 (&vcpu->mutex){+.+.}, at: lock_all_vcpus+0x64/0xd0
    [12704.164861] stack backtrace:
    [12704.164878] CPU: 2 PID: 13968 Comm: qemu-system-aar Tainted: G        W         5.1.0-rc1-00008-g600025238f51-dirty #16
    [12704.164887] Hardware name: rockchip evb_rk3399/evb_rk3399, BIOS 2019.04-rc3-00124-g2feec69fb1 03/15/2019
    [12704.164896] Call trace:
    [12704.164910]  dump_backtrace+0x0/0x138
    [12704.164920]  show_stack+0x24/0x30
    [12704.164934]  dump_stack+0xbc/0x104
    [12704.164946]  lockdep_rcu_suspicious+0xcc/0x110
    [12704.164958]  gfn_to_memslot+0x174/0x190
    [12704.164969]  kvm_is_visible_gfn+0x28/0x70
    [12704.164980]  vgic_its_check_id.isra.0+0xec/0x1e8
    [12704.164991]  vgic_its_save_tables_v0+0x1ac/0x330
    [12704.165001]  vgic_its_set_attr+0x298/0x3a0
    [12704.165012]  kvm_device_ioctl_attr+0x9c/0xd8
    [12704.165022]  kvm_device_ioctl+0x8c/0xf8
    [12704.165035]  do_vfs_ioctl+0xc8/0x960
    [12704.165045]  ksys_ioctl+0x8c/0xa0
    [12704.165055]  __arm64_sys_ioctl+0x28/0x38
    [12704.165067]  el0_svc_common+0xd8/0x138
    [12704.165078]  el0_svc_handler+0x38/0x78
    [12704.165089]  el0_svc+0x8/0xc
    
    Make sure the lock is taken when doing this.
    
    Fixes: bf308242ab98 ("KVM: arm/arm64: VGIC/ITS: protect kvm_read_guest() calls with SRCU lock")
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 10a0ba2fd42e0d5061dbee62b4a5a66ee8267173
Author: Petr Štetiar <ynezz@true.cz>
Date:   Wed Mar 6 17:54:03 2019 +0100

    serial: ar933x_uart: Fix build failure with disabled console
    
    [ Upstream commit 72ff51d8dd262d1fef25baedc2ac35116435be47 ]
    
    Andrey has reported on OpenWrt's bug tracking system[1], that he
    currently can't use ar93xx_uart as pure serial UART without console
    (CONFIG_SERIAL_8250_CONSOLE and CONFIG_SERIAL_AR933X_CONSOLE undefined),
    because compilation ends with following error:
    
     ar933x_uart.c: In function 'ar933x_uart_console_write':
     ar933x_uart.c:550:14: error: 'struct uart_port' has no
                                   member named 'sysrq'
    
    So this patch moves all the code related to console handling behind
    series of CONFIG_SERIAL_AR933X_CONSOLE ifdefs.
    
    1. https://bugs.openwrt.org/index.php?do=details&task_id=2152
    
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Slaby <jslaby@suse.com>
    Cc: Andrey Batyiev <batyiev@gmail.com>
    Reported-by: Andrey Batyiev <batyiev@gmail.com>
    Tested-by: Andrey Batyiev <batyiev@gmail.com>
    Signed-off-by: Petr Štetiar <ynezz@true.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 707615f47db3e240158abe732ef4f99e01c2a91f
Author: Mao Wenan <maowenan@huawei.com>
Date:   Fri Mar 8 22:08:31 2019 +0800

    sc16is7xx: missing unregister/delete driver on error in sc16is7xx_init()
    
    [ Upstream commit ac0cdb3d990108df795b676cd0d0e65ac34b2273 ]
    
    Add the missing uart_unregister_driver() and i2c_del_driver() before return
    from sc16is7xx_init() in the error handling case.
    
    Signed-off-by: Mao Wenan <maowenan@huawei.com>
    Reviewed-by: Vladimir Zapolskiy <vz@mleia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit ae35822a3ee0f9e2e86a8e878084eca7c08fa1e2
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Mon Mar 18 16:40:55 2019 +0100

    s390/qeth: fix race when initializing the IP address table
    
    [ Upstream commit 7221b727f0079a32aca91f657141e1de564d4b97 ]
    
    The ucast IP table is utilized by some of the L3-specific sysfs attributes
    that qeth_l3_create_device_attributes() provides. So initialize the table
    _before_ registering the attributes.
    
    Fixes: ebccc7397e4a ("s390/qeth: add missing hash table initializations")
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 208decebe101968ea9a9069b32c3f9883ac2298f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Mar 13 16:33:29 2019 +0800

    netfilter: bridge: set skb transport_header before entering NF_INET_PRE_ROUTING
    
    [ Upstream commit e166e4fdaced850bee3d5ee12a5740258fb30587 ]
    
    Since Commit 21d1196a35f5 ("ipv4: set transport header earlier"),
    skb->transport_header has been always set before entering INET
    netfilter. This patch is to set skb->transport_header for bridge
    before entering INET netfilter by bridge-nf-call-iptables.
    
    It also fixes an issue that sctp_error() couldn't compute a right
    csum due to unset skb->transport_header.
    
    Fixes: e6d8b64b34aa ("net: sctp: fix and consolidate SCTP checksumming code")
    Reported-by: Li Shuang <shuali@redhat.com>
    Suggested-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Acked-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit fdad255b70c1132da2ba4fe56a625203f2794579
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Tue Mar 12 12:10:59 2019 +0100

    netfilter: nft_set_rbtree: check for inactive element after flag mismatch
    
    [ Upstream commit 05b7639da55f5555b9866a1f4b7e8995232a6323 ]
    
    Otherwise, we hit bogus ENOENT when removing elements.
    
    Fixes: e701001e7cbe ("netfilter: nft_rbtree: allow adjacent intervals with dynamic updates")
    Reported-by: Václav Zindulka <vaclav.zindulka@tlapnet.cz>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 74a9e727ea1b294330f4cd65b290c79e43fbe46d
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Thu Mar 14 15:31:40 2019 -0500

    qlcnic: Avoid potential NULL pointer dereference
    
    [ Upstream commit 5bf7295fe34a5251b1d241b9736af4697b590670 ]
    
    netdev_alloc_skb can fail and return a NULL pointer which is
    dereferenced without a check. The patch avoids such a scenario.
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 3b2c5114a6c3017ac44bd9caf6211c825d701a1c
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Mon Mar 4 12:33:28 2019 +0100

    s390: limit brk randomization to 32MB
    
    [ Upstream commit cd479eccd2e057116d504852814402a1e68ead80 ]
    
    For a 64-bit process the randomization of the program break is quite
    large with 1GB. That is as big as the randomization of the anonymous
    mapping base, for a test case started with '/lib/ld64.so.1 <exec>'
    it can happen that the heap is placed after the stack. To avoid
    this limit the program break randomization to 32MB for 64-bit and
    keep 8MB for 31-bit.
    
    Reported-by: Stefan Liebler <stli@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit 93c2b843ca2c97ee04a2c404f8562cffae4419f6
Author: Helen Koike <helen.koike@collabora.com>
Date:   Mon Mar 4 18:48:37 2019 -0300

    ARM: dts: bcm283x: Fix hdmi hpd gpio pull
    
    [ Upstream commit 544e784188f1dd7c797c70b213385e67d92005b6 ]
    
    Raspberry pi board model B revison 2 have the hot plug detector gpio
    active high (and not low as it was in the dts).
    
    Signed-off-by: Helen Koike <helen.koike@collabora.com>
    Fixes: 49ac67e0c39c ("ARM: bcm2835: Add VC4 to the device tree.")
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>

commit c88a0aa7ace7eb10dca42be59f21e2cbd263575e
Author: Matthew Wilcox <willy@infradead.org>
Date:   Fri Apr 5 14:02:10 2019 -0700

    fs: prevent page refcount overflow in pipe_buf_get
    
    commit 15fab63e1e57be9fdb5eec1bbc5916e9825e9acb upstream.
    
    Change pipe_buf_get() to return a bool indicating whether it succeeded
    in raising the refcount of the page (if the thing in the pipe is a page).
    This removes another mechanism for overflowing the page refcount.  All
    callers converted to handle a failure.
    
    Reported-by: Jann Horn <jannh@google.com>
    Signed-off-by: Matthew Wilcox <willy@infradead.org>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04198de24771f6aaf6374979db64403101d809df
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Apr 11 10:49:19 2019 -0700

    mm: prevent get_user_pages() from overflowing page refcount
    
    commit 8fde12ca79aff9b5ba951fce1a2641901b8d8e64 upstream.
    
    If the page refcount wraps around past zero, it will be freed while
    there are still four billion references to it.  One of the possible
    avenues for an attacker to try to make this happen is by doing direct IO
    on a page multiple times.  This patch makes get_user_pages() refuse to
    take a new page reference if there are already more than two billion
    references to the page.
    
    Reported-by: Jann Horn <jannh@google.com>
    Acked-by: Matthew Wilcox <willy@infradead.org>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a280d881726795ae490dc45bcaa9f6d4bf43741
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Apr 11 10:14:59 2019 -0700

    mm: add 'try_get_page()' helper function
    
    commit 88b1a17dfc3ed7728316478fae0f5ad508f50397 upstream.
    
    This is the same as the traditional 'get_page()' function, but instead
    of unconditionally incrementing the reference count of the page, it only
    does so if the count was "safe".  It returns whether the reference count
    was incremented (and is marked __must_check, since the caller obviously
    has to be aware of it).
    
    Also like 'get_page()', you can't use this function unless you already
    had a reference to the page.  The intent is that you can use this
    exactly like get_page(), but in situations where you want to limit the
    maximum reference count.
    
    The code currently does an unconditional WARN_ON_ONCE() if we ever hit
    the reference count issues (either zero or negative), as a notification
    that the conditional non-increment actually happened.
    
    NOTE! The count access for the "safety" check is inherently racy, but
    that doesn't matter since the buffer we use is basically half the range
    of the reference count (ie we look at the sign of the count).
    
    Acked-by: Matthew Wilcox <willy@infradead.org>
    Cc: Jann Horn <jannh@google.com>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94d99a2355e32ba8eae7bdfdf861f90286634cd9
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Apr 11 10:06:20 2019 -0700

    mm: make page ref count overflow check tighter and more explicit
    
    commit f958d7b528b1b40c44cfda5eabe2d82760d868c3 upstream.
    
    We have a VM_BUG_ON() to check that the page reference count doesn't
    underflow (or get close to overflow) by checking the sign of the count.
    
    That's all fine, but we actually want to allow people to use a "get page
    ref unless it's already very high" helper function, and we want that one
    to use the sign of the page ref (without triggering this VM_BUG_ON).
    
    Change the VM_BUG_ON to only check for small underflows (or _very_ close
    to overflowing), and ignore overflows which have strayed into negative
    territory.
    
    Acked-by: Matthew Wilcox <willy@infradead.org>
    Cc: Jann Horn <jannh@google.com>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b41449d9be2103c15c22b988d10b6303fdadebd3
Author: Gustavo A. R. Silva <garsilva@embeddedor.com>
Date:   Fri Nov 17 14:02:09 2017 -0600

    usbnet: ipheth: fix potential null pointer dereference in ipheth_carrier_set
    
    commit 61c59355e0154a938b28710dfa6c1d8be2ddcefa upstream.
    
    _dev_ is being dereferenced before it is null checked, hence there
    is a potential null pointer dereference.
    
    Fix this by moving the pointer dereference after _dev_ has been null
    checked.
    
    Addresses-Coverity-ID: 1462020
    Fixes: bb1b40c7cb86 ("usbnet: ipheth: prevent TX queue timeouts when device not ready")
    Signed-off-by: Gustavo A. R. Silva <garsilva@embeddedor.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5bca75dc46701f4c0d1dcbaae401233ae7ff06b
Author: Alexander Kappner <agk@godking.net>
Date:   Mon Nov 13 17:44:20 2017 -0800

    usbnet: ipheth: prevent TX queue timeouts when device not ready
    
    commit bb1b40c7cb863f0800a6410c7dcb86cf3f28d3b1 upstream.
    
    iOS devices require the host to be "trusted" before servicing network
    packets. Establishing trust requires the user to confirm a dialog on the
    iOS device.Until trust is established, the iOS device will silently discard
    network packets from the host. Currently, the ipheth driver does not detect
    whether an iOS device has established trust with the host, and immediately
    sets up the transmit queues.
    
    This causes the following problems:
    
    - Kernel taint due to WARN() in netdev watchdog.
    - Dmesg spam ("TX timeout").
    - Disruption of user space networking activity (dhcpd, etc...) when new
    interface comes up but cannot be used.
    - Unnecessary host and device wakeups and USB traffic
    
    Example dmesg output:
    
    [ 1101.319778] NETDEV WATCHDOG: eth1 (ipheth): transmit queue 0 timed out
    [ 1101.319817] ------------[ cut here ]------------
    [ 1101.319828] WARNING: CPU: 0 PID: 0 at net/sched/sch_generic.c:316 dev_watchdog+0x20f/0x220
    [ 1101.319831] Modules linked in: ipheth usbmon nvidia_drm(PO) nvidia_modeset(PO) nvidia(PO) iwlmvm mac80211 iwlwifi btusb btrtl btbcm btintel qmi_wwan bluetooth cfg80211 ecdh_generic thinkpad_acpi rfkill [last unloaded: ipheth]
    [ 1101.319861] CPU: 0 PID: 0 Comm: swapper/0 Tainted: P           O    4.13.12.1 #1
    [ 1101.319864] Hardware name: LENOVO 20ENCTO1WW/20ENCTO1WW, BIOS N1EET62W (1.35 ) 11/10/2016
    [ 1101.319867] task: ffffffff81e11500 task.stack: ffffffff81e00000
    [ 1101.319873] RIP: 0010:dev_watchdog+0x20f/0x220
    [ 1101.319876] RSP: 0018:ffff8810a3c03e98 EFLAGS: 00010292
    [ 1101.319880] RAX: 000000000000003a RBX: 0000000000000000 RCX: 0000000000000000
    [ 1101.319883] RDX: ffff8810a3c15c48 RSI: ffffffff81ccbfc2 RDI: 00000000ffffffff
    [ 1101.319886] RBP: ffff880c04ebc41c R08: 0000000000000000 R09: 0000000000000379
    [ 1101.319889] R10: 00000100696589d0 R11: 0000000000000378 R12: ffff880c04ebc000
    [ 1101.319892] R13: 0000000000000000 R14: 0000000000000001 R15: ffff880c2865fc80
    [ 1101.319896] FS:  0000000000000000(0000) GS:ffff8810a3c00000(0000) knlGS:0000000000000000
    [ 1101.319899] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 1101.319902] CR2: 00007f3ff24ac000 CR3: 0000000001e0a000 CR4: 00000000003406f0
    [ 1101.319905] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 1101.319908] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 1101.319910] Call Trace:
    [ 1101.319914]  <IRQ>
    [ 1101.319921]  ? dev_graft_qdisc+0x70/0x70
    [ 1101.319928]  ? dev_graft_qdisc+0x70/0x70
    [ 1101.319934]  ? call_timer_fn+0x2e/0x170
    [ 1101.319939]  ? dev_graft_qdisc+0x70/0x70
    [ 1101.319944]  ? run_timer_softirq+0x1ea/0x440
    [ 1101.319951]  ? timerqueue_add+0x54/0x80
    [ 1101.319956]  ? enqueue_hrtimer+0x38/0xa0
    [ 1101.319963]  ? __do_softirq+0xed/0x2e7
    [ 1101.319970]  ? irq_exit+0xb4/0xc0
    [ 1101.319976]  ? smp_apic_timer_interrupt+0x39/0x50
    [ 1101.319981]  ? apic_timer_interrupt+0x8c/0xa0
    [ 1101.319983]  </IRQ>
    [ 1101.319992]  ? cpuidle_enter_state+0xfa/0x2a0
    [ 1101.319999]  ? do_idle+0x1a3/0x1f0
    [ 1101.320004]  ? cpu_startup_entry+0x5f/0x70
    [ 1101.320011]  ? start_kernel+0x444/0x44c
    [ 1101.320017]  ? early_idt_handler_array+0x120/0x120
    [ 1101.320023]  ? x86_64_start_kernel+0x145/0x154
    [ 1101.320028]  ? secondary_startup_64+0x9f/0x9f
    [ 1101.320033] Code: 20 04 00 00 eb 9f 4c 89 e7 c6 05 59 44 71 00 01 e8 a7 df fd ff 89 d9 4c 89 e6 48 c7 c7 70 b7 cd 81 48 89 c2 31 c0 e8 97 64 90 ff <0f> ff eb bf 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00
    [ 1101.320103] ---[ end trace 0cc4d251e2b57080 ]---
    [ 1101.320110] ipheth 1-5:4.2: ipheth_tx_timeout: TX timeout
    
    The last message "TX timeout" is repeated every 5 seconds until trust is
    established or the device is disconnected, filling up dmesg.
    
    The proposed patch eliminates the problem by, upon connection, keeping the
    TX queue and carrier disabled until a packet is first received from the iOS
    device. This is reflected by the confirmed_pairing variable in the device
    structure. Only after at least one packet has been received from the iOS
    device, the transmit queue and carrier are brought up during the periodic
    device poll in ipheth_carrier_set. Because the iOS device will always send
    a packet immediately upon trust being established, this should not delay
    the interface becoming useable. To prevent failed UBRs in
    ipheth_rcvbulk_callback from perpetually re-enabling the queue if it was
    disabled, a new check is added so only successful transfers re-enable the
    queue, whereas failed transfers only trigger an immediate poll.
    
    This has the added benefit of removing the periodic control requests to the
    iOS device until trust has been established and thus should reduce wakeup
    events on both the host and the iOS device.
    
    Signed-off-by: Alexander Kappner <agk@godking.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [groeck: Fixed context conflict seen because 45611c61dd50 was applied first]
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 760f8522ce08a24abac3208290f93fe3fffc0d6c
Author: Paulo Alcantara <paulo@paulo.ac>
Date:   Sun Feb 24 21:55:28 2019 -0300

    selinux: use kernel linux/socket.h for genheaders and mdp
    
    commit dfbd199a7cfe3e3cd8531e1353cdbd7175bfbc5e upstream.
    
    When compiling genheaders and mdp from a newer host kernel, the
    following error happens:
    
        In file included from scripts/selinux/genheaders/genheaders.c:18:
        ./security/selinux/include/classmap.h:238:2: error: #error New
        address family defined, please update secclass_map.  #error New
        address family defined, please update secclass_map.  ^~~~~
        make[3]: *** [scripts/Makefile.host:107:
        scripts/selinux/genheaders/genheaders] Error 1 make[2]: ***
        [scripts/Makefile.build:599: scripts/selinux/genheaders] Error 2
        make[1]: *** [scripts/Makefile.build:599: scripts/selinux] Error 2
        make[1]: *** Waiting for unfinished jobs....
    
    Instead of relying on the host definition, include linux/socket.h in
    classmap.h to have PF_MAX.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Paulo Alcantara <paulo@paulo.ac>
    Acked-by: Stephen Smalley <sds@tycho.nsa.gov>
    [PM: manually merge in mdp.c, subject line tweaks]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
