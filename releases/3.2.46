commit a2d09e92ec5a7ee46e55d29ce8ad5afb45b02d37
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Thu May 30 14:35:16 2013 +0100

    Linux 3.2.46

commit 8cd656dbac3dca07869aab089b600133786cee34
Author: Richard Weinberger <richard@nod.at>
Date:   Tue Feb 7 01:22:47 2012 +0100

    um: Serve io_remap_pfn_range()
    
    commit 4d94d6d030adfdea4837694d293ec6918d133ab2 upstream.
    
    At some places io_remap_pfn_range() is needed.
    UML has to serve it like all other archs do.
    
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2e4b48300640fd023e2644142ff11da6e88e9aa2
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Dec 4 15:59:55 2012 +0000

    staging: comedi: prevent auto-unconfig of manually configured devices
    
    commit 7d3135af399e92cf4c9bbc5f86b6c140aab3b88c upstream.
    
    When a low-level comedi driver auto-configures a device, a `struct
    comedi_dev_file_info` is allocated (as well as a `struct
    comedi_device`) by `comedi_alloc_board_minor()`.  A pointer to the
    hardware `struct device` is stored as a cookie in the `struct
    comedi_dev_file_info`.  When the low-level comedi driver
    auto-unconfigures the device, `comedi_auto_unconfig()` uses the cookie
    to find the `struct comedi_dev_file_info` so it can detach the comedi
    device from the driver, clean it up and free it.
    
    A problem arises if the user manually unconfigures and reconfigures the
    comedi device using the `COMEDI_DEVCONFIG` ioctl so that is no longer
    associated with the original hardware device.  The problem is that the
    cookie is not cleared, so that a call to `comedi_auto_unconfig()` from
    the low-level driver will still find it, detach it, clean it up and free
    it.
    
    Stop this problem occurring by always clearing the `hardware_device`
    cookie in the `struct comedi_dev_file_info` whenever the
    `COMEDI_DEVCONFIG` ioctl call is successful.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0a686e3291bf91d6fa52046505002b2c6cb556a2
Author: Alan Cox <alan@linux.intel.com>
Date:   Thu Aug 9 12:33:52 2012 -0300

    [media] mantis: fix silly crash case
    
    commit e1d45ae10aea8e8a403e5d96bf5902ee670007ff upstream.
    
    If we set mantis->fe to NULL on an error its not a good idea to then try
    passing NULL to the unregister paths and oopsing really.
    
    Resolves-bug: https://bugzilla.kernel.org/show_bug.cgi?id=16473
    
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7abe9d39f7a6c39cb282dac10c9345e242b4c6fb
Author: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
Date:   Mon Apr 29 16:21:07 2013 -0700

    drivers/rtc/rtc-pcf2123.c: fix error return code in pcf2123_probe()
    
    commit 35623715818dfa720cccf99cd280dcbb4b78da23 upstream.
    
    Fix to return -ENODEV in the chip not found error handling
    case instead of 0, as done elsewhere in this function.
    
    Signed-off-by: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
    Cc: Jingoo Han <jg1.han@samsung.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 01b0d887f67a388fb2a658ee2bdd74e5ba146818
Author: Cong Wang <amwang@redhat.com>
Date:   Thu May 9 22:40:00 2013 +0000

    xfrm6: release dev before returning error
    
    [ Upstream commit 84c4a9dfbf430861e7588d95ae3ff61535dca351 ]
    
    We forget to call dev_put() on error path in xfrm6_fill_dst(),
    its caller doesn't handle this.
    
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Cc: David S. Miller <davem@davemloft.net>
    Signed-off-by: Cong Wang <amwang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6b0c985d7eedd52ddba6968d46bbc12ad603a577
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu May 9 10:28:16 2013 +0000

    ipv6: do not clear pinet6 field
    
    [ Upstream commit f77d602124d865c38705df7fa25c03de9c284ad2 ]
    
    We have seen multiple NULL dereferences in __inet6_lookup_established()
    
    After analysis, I found that inet6_sk() could be NULL while the
    check for sk_family == AF_INET6 was true.
    
    Bug was added in linux-2.6.29 when RCU lookups were introduced in UDP
    and TCP stacks.
    
    Once an IPv6 socket, using SLAB_DESTROY_BY_RCU is inserted in a hash
    table, we no longer can clear pinet6 field.
    
    This patch extends logic used in commit fcbdf09d9652c891
    ("net: fix nulls list corruptions in sk_prot_alloc")
    
    TCP/UDP/UDPLite IPv6 protocols provide their own .clear_sk() method
    to make sure we do not clear pinet6 field.
    
    At socket clone phase, we do not really care, as cloning the parent (non
    NULL) pinet6 is not adding a fatal race.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 24ac9e8939ffcbfed67eea6e82c7eb99c34d0b55
Author: Jiri Pirko <jiri@resnulli.us>
Date:   Thu May 9 04:23:40 2013 +0000

    macvlan: fix passthru mode race between dev removal  and rx path
    
    [ Upstream commit 233c7df0821c4190e2d3f4be0f2ca0ab40a5ed8c, note
      that I had to add list_first_or_null_rcu to rculist.h in order
      to accomodate this fix. ]
    
    Currently, if macvlan in passthru mode is created and data are rxed and
    you remove this device, following panic happens:
    
    NULL pointer dereference at 0000000000000198
    IP: [<ffffffffa0196058>] macvlan_handle_frame+0x153/0x1f7 [macvlan]
    
    I'm using following script to trigger this:
    <script>
    while [ 1 ]
    do
            ip link add link e1 name macvtap0 type macvtap mode passthru
            ip link set e1 up
            ip link set macvtap0 up
            IFINDEX=`ip link |grep macvtap0 | cut -f 1 -d ':'`
            cat /dev/tap$IFINDEX  >/dev/null &
            ip link del dev macvtap0
    done
    </script>
    
    I run this script while "ping -f" is running on another machine to send
    packets to e1 rx.
    
    Reason of the panic is that list_first_entry() is blindly called in
    macvlan_handle_frame() even if the list was empty. vlan is set to
    incorrect pointer which leads to the crash.
    
    I'm fixing this by protecting port->vlans list by rcu and by preventing
    from getting incorrect pointer in case the list is empty.
    
    Introduced by: commit eb06acdc85585f2 "macvlan: Introduce 'passthru' mode to takeover the underlying device"
    
    Signed-off-by: Jiri Pirko <jiri@resnulli.us>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 00c76e26b7e25c4f0790b9d4d54253cbf24dce1b
Author: Josh Boyer <jwboyer@redhat.com>
Date:   Wed May 8 09:45:47 2013 +0000

    if_cablemodem.h: Add parenthesis around ioctl macros
    
    [ Upstream commit 4f924b2aa4d3cb30f07e57d6b608838edcbc0d88 ]
    
    Protect the SIOCGCM* ioctl macros with parenthesis.
    
    Reported-by: Paul Wouters <pwouters@redhat.com>
    Signed-off-by: Josh Boyer <jwboyer@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bbdec1089e3dcdbaa1cc1b817b62bf8d91ba767f
Author: Sergei Shtylyov <sshtylyov@ru.mvista.com>
Date:   Thu May 9 11:14:07 2013 +0000

    3c59x: fix PCI resource management
    
    [ Upstream commit 4b264a1676e70dc656ba53a8cac690f2d4b65f4e ]
    
    The driver wrongly claimed I/O ports at an address returned by pci_iomap() --
    even if it was passed an MMIO address.  Fix this by claiming/releasing all PCI
    resources in the PCI driver's probe()/remove() methods instead and get rid of
    'must_free_region' flag weirdness (why would Cardbus claim anything for us?).
    
    Signed-off-by: Sergei Shtylyov <sshtylyov@ru.mvista.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6261f7e1bb2e940c457aeda29262842e9ab5f1e2
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Thu May 2 11:10:22 2013 +0000

    3c59x: fix freeing nonexistent resource on driver  unload
    
    [ Upstream commit c81400be716aa4c76f6ebf339ba94358dbbf6da6 ]
    
    When unloading the driver that drives an EISA board, a message similar to the
    following one is displayed:
    
    Trying to free nonexistent resource <0000000000013000-000000000001301f>
    
    Then an user is unable to reload the driver because the resource it requested in
    the previous load hasn't been freed. This happens most probably due to a typo in
    vortex_eisa_remove() which calls release_region() with 'dev->base_addr'  instead
    of 'edev->base_addr'...
    
    Reported-by: Matthew Whitehead <tedheadster@gmail.com>
    Tested-by: Matthew Whitehead <tedheadster@gmail.com>
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f130a20abbbadc40d16b196a98d7cf4d5cbe961b
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri May 3 02:57:00 2013 +0000

    packet: tpacket_v3: do not trigger bug() on wrong  header status
    
    [ Upstream commit 8da3056c04bfc5f69f840ab038a38389e2de8189 ]
    
    Jakub reported that it is fairly easy to trigger the BUG() macro
    from user space with TPACKET_V3's RX_RING by just giving a wrong
    header status flag. We already had a similar situation in commit
    7f5c3e3a80e6654 (``af_packet: remove BUG statement in
    tpacket_destruct_skb'') where this was the case in the TX_RING
    side that could be triggered from user space. So really, don't use
    BUG() or BUG_ON() unless there's really no way out, and i.e.
    don't use it for consistency checking when there's user space
    involved, no excuses, especially not if you're slapping the user
    with WARN + dump_stack + BUG all at once. The two functions are
    of concern:
    
      prb_retire_current_block() [when block status != TP_STATUS_KERNEL]
      prb_open_block() [when block_status != TP_STATUS_KERNEL]
    
    Calls to prb_open_block() are guarded by ealier checks if block_status
    is really TP_STATUS_KERNEL (racy!), but the first one BUG() is easily
    triggable from user space. System behaves still stable after they are
    removed. Also remove that yoda condition entirely, since it's already
    guarded.
    
    Reported-by: Jakub Zawadzki <darkjames-ws@darkjames.pl>
    Signed-off-by: Daniel Borkmann <dborkman@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e55ab1122b0077d494bd6576513d4952e17bc3ce
Author: stephen hemminger <stephen@networkplumber.org>
Date:   Thu May 2 14:23:28 2013 +0000

    bridge: fix race with topology change timer
    
    [ Upstream commit 83401eb4990ff6af55aeed8f49681558544192e6 ]
    
    A bridge should only send topology change notice if it is not
    the root bridge. It is possible for message age timer to elect itself
    as a new root bridge, and still have a topology change timer running
    but waiting for bridge lock on other CPU.
    
    Solve the race by checking if we are root bridge before continuing.
    This was the root cause of the cases where br_send_tcn_bpdu would OOPS.
    
    Reported-by: JerryKang <jerry.kang@samsung.com>
    Signed-off-by: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fa83b862b34e82d8cbcc1d40889a8d6dd5d56e25
Author: Jamal Hadi Salim <jhs@mojatatu.com>
Date:   Sun Apr 28 05:06:38 2013 +0000

    net_sched: act_ipt forward compat with xtables
    
    [ Upstream commit 0dcffd09641f3abb21ac5cabc61542ab289d1a3c ]
    
    Deal with changes in newer xtables while maintaining backward
    compatibility. Thanks to Jan Engelhardt for suggestions.
    
    Signed-off-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8e4edf4c3ccf8a041cde6ea0200f58ffcc080e98
Author: Matthew Whitehead <tedheadster@gmail.com>
Date:   Mon Apr 29 17:46:53 2013 -0400

    3c509.c: call SET_NETDEV_DEV for all device types  (ISA/ISAPnP/EISA)
    
    [ Upstream commit 3b54912f9cd167641b91d4a697bd742f70e534fe ]
    
    The venerable 3c509 driver only sets its device parent in one case, the ISAPnP one.
    It does this with the SET_NETDEV_DEV function. It should register with the device
    hierarchy in two additional cases: standard (non-PnP) ISA and EISA.
    
    - Currently they appear here:
    /sys/devices/virtual/net/eth0 (standard ISA)
    /sys/devices/virtual/net/eth1 (EISA)
    
    - Rather, they should instead be here:
    /sys/devices/isa/3c509.0/net/eth0 (standard ISA)
    /sys/devices/pci0000:00/0000:00:07.0/00:04/net/eth1 (EISA)
    
    Tested on ISA and EISA boards.
    
    Signed-off-by: Matthew Whitehead <tedheadster@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 36fced6bf3ea54b198963cac4338d218f3ad0942
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Apr 24 18:34:55 2013 -0700

    tcp: force a dst refcount when prequeue packet
    
    [ Upstream commit 093162553c33e9479283e107b4431378271c735d ]
    
    Before escaping RCU protected section and adding packet into
    prequeue, make sure the dst is refcounted.
    
    Reported-by: Mike Galbraith <bitbucket@online.de>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2a068400fcef7b1563d60f294b584b728236307f
Author: Richard Weinberger <richard@nod.at>
Date:   Wed Apr 17 01:00:53 2013 +0200

    x86,efi: Implement efi_no_storage_paranoia parameter
    
    commit 8c58bf3eec3b8fc8162fe557e9361891c20758f2 upstream.
    
    Using this parameter one can disable the storage_size/2 check if
    he is really sure that the UEFI does sane gc and fulfills the spec.
    
    This parameter is useful if a devices uses more than 50% of the
    storage by default.
    The Intel DQSW67 desktop board is such a sucker for exmaple.
    
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b12bcd7b3fe04a5fcca945aaf5b74181d9a223f4
Author: Richard Weinberger <richard@nod.at>
Date:   Wed Apr 10 10:59:34 2013 +0200

    x86,efi: Check max_size only if it is non-zero.
    
    commit 7791c8423f1f7f4dad94e753bae67461d5b80be8 upstream.
    
    Some EFI implementations return always a MaximumVariableSize of 0,
    check against max_size only if it is non-zero.
    My Intel DQ67SW desktop board has such an implementation.
    
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c5ba30a73ebcca1b4068363ca08410fa3729ebeb
Author: Sergey Vlasov <vsu@altlinux.ru>
Date:   Tue Apr 16 18:31:09 2013 +0400

    efi: Export efi_query_variable_store() for efivars.ko
    
    commit 3668011d4ad556224f7c012c1e870a6eaa0e59da upstream.
    
    Fixes build with CONFIG_EFI_VARS=m which was broken after the commit
    "x86, efivars: firmware bug workarounds should be in platform code".
    
    Signed-off-by: Sergey Vlasov <vsu@altlinux.ru>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 649aeb46c8ff0aa527e73e8f847f9895c835d8cb
Author: Matt Fleming <matt.fleming@intel.com>
Date:   Mon Mar 25 09:14:30 2013 +0000

    x86, efivars: firmware bug workarounds should be in platform code
    
    commit a6e4d5a03e9e3587e88aba687d8f225f4f04c792 upstream.
    
    Let's not burden ia64 with checks in the common efivars code that we're not
    writing too much data to the variable store. That kind of thing is an x86
    firmware bug, plain and simple.
    
    efi_query_variable_store() provides platforms with a wrapper in which they can
    perform checks and workarounds for EFI variable storage bugs.
    
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Matthew Garrett <mjg59@srcf.ucam.org>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9c4254fbab06989a943eb5633cf6dd1bd6b79d6b
Author: Philipp Reisner <philipp.reisner@linbit.com>
Date:   Wed Mar 27 14:08:47 2013 +0100

    drbd: fix for deadlock when using automatic split-brain-recovery
    
    commit 7c689e63a847316c1b2500f86891b0a574ce7e69 upstream.
    
    With an automatic after split-brain recovery policy of
    "after-sb-1pri call-pri-lost-after-sb",
    when trying to drbd_set_role() to R_SECONDARY,
    we run into a deadlock.
    
    This was first recognized and supposedly fixed by
    2009-06-10 "Fixed a deadlock when using automatic split brain recovery when both nodes are"
    replacing drbd_set_role() with drbd_change_state() in that code-path,
    but the first hunk of that patch forgets to remove the drbd_set_role().
    
    We apparently only ever tested the "two primaries" case.
    
    Signed-off-by: Philipp Reisner <philipp.reisner@linbit.com>
    Signed-off-by: Lars Ellenberg <lars.ellenberg@linbit.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 99f9dba9919c903f04eec1001b5634e3e8bb40cb
Author: Tomoya MORINAGA <tomoya.rohm@gmail.com>
Date:   Tue Feb 12 11:25:33 2013 +0900

    pch_dma: Use GFP_ATOMIC because called from interrupt context
    
    commit 5c1ef59168c485318e40ba485c1eba57d81d0faa upstream.
    
    pdc_desc_get() is called from pd_prep_slave_sg, and the function is
    called from interrupt context(e.g. Uart driver "pch_uart.c").
    In fact, I saw kernel error message.
    So, GFP_ATOMIC must be used not GFP_NOIO.
    
    Signed-off-by: Tomoya MORINAGA <tomoya.rohm@gmail.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3bda05cf930f4d93cea39f157a069472db1be266
Author: Hans Schillstrom <hans@schillstrom.com>
Date:   Sat Apr 27 20:06:14 2013 +0200

    ipvs: ip_vs_sip_fill_param() BUG: bad check of return value
    
    commit f7a1dd6e3ad59f0cfd51da29dfdbfd54122c5916 upstream.
    
    The reason for this patch is crash in kmemdup
    caused by returning from get_callid with uniialized
    matchoff and matchlen.
    
    Removing Zero check of matchlen since it's done by ct_sip_get_header()
    
    BUG: unable to handle kernel paging request at ffff880457b5763f
    IP: [<ffffffff810df7fc>] kmemdup+0x2e/0x35
    PGD 27f6067 PUD 0
    Oops: 0000 [#1] PREEMPT SMP
    Modules linked in: xt_state xt_helper nf_conntrack_ipv6 nf_defrag_ipv6 ip6table_mangle xt_connmark xt_conntrack ip6_tables nf_conntrack_ftp ip_vs_ftp nf_nat xt_tcpudp iptable_mangle xt_mark ip_tables x_tables ip_vs_rr ip_vs_lblcr ip_vs_pe_sip ip_vs nf_conntrack_sip nf_conntrack bonding igb i2c_algo_bit i2c_core
    CPU 5
    Pid: 0, comm: swapper/5 Not tainted 3.9.0-rc5+ #5                  /S1200KP
    RIP: 0010:[<ffffffff810df7fc>]  [<ffffffff810df7fc>] kmemdup+0x2e/0x35
    RSP: 0018:ffff8803fea03648  EFLAGS: 00010282
    RAX: ffff8803d61063e0 RBX: 0000000000000003 RCX: 0000000000000003
    RDX: 0000000000000003 RSI: ffff880457b5763f RDI: ffff8803d61063e0
    RBP: ffff8803fea03658 R08: 0000000000000008 R09: 0000000000000011
    R10: 0000000000000011 R11: 00ffffffff81a8a3 R12: ffff880457b5763f
    R13: ffff8803d67f786a R14: ffff8803fea03730 R15: ffffffffa0098e90
    FS:  0000000000000000(0000) GS:ffff8803fea00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: ffff880457b5763f CR3: 0000000001a0c000 CR4: 00000000001407e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
    Process swapper/5 (pid: 0, threadinfo ffff8803ee18c000, task ffff8803ee18a480)
    Stack:
     ffff8803d822a080 000000000000001c ffff8803fea036c8 ffffffffa000937a
     ffffffff81f0d8a0 000000038135fdd5 ffff880300000014 ffff880300110000
     ffffffff150118ac ffff8803d7e8a000 ffff88031e0118ac 0000000000000000
    Call Trace:
     <IRQ>
    
     [<ffffffffa000937a>] ip_vs_sip_fill_param+0x13a/0x187 [ip_vs_pe_sip]
     [<ffffffffa007b209>] ip_vs_sched_persist+0x2c6/0x9c3 [ip_vs]
     [<ffffffff8107dc53>] ? __lock_acquire+0x677/0x1697
     [<ffffffff8100972e>] ? native_sched_clock+0x3c/0x7d
     [<ffffffff8100972e>] ? native_sched_clock+0x3c/0x7d
     [<ffffffff810649bc>] ? sched_clock_cpu+0x43/0xcf
     [<ffffffffa007bb1e>] ip_vs_schedule+0x181/0x4ba [ip_vs]
    ...
    
    Signed-off-by: Hans Schillstrom <hans@schillstrom.com>
    Acked-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ac93bc6a8ab8b760423ca0c4d42311f0d1f5cfcd
Author: libin <huawei.libin@huawei.com>
Date:   Mon Apr 8 14:39:12 2013 +0800

    sched/debug: Fix sd->*_idx limit range avoiding overflow
    
    commit fd9b86d37a600488dbd80fe60cca46b822bff1cd upstream.
    
    Commit 201c373e8e ("sched/debug: Limit sd->*_idx range on
    sysctl") was an incomplete bug fix.
    
    This patch fixes sd->*_idx limit range to [0 ~ CPU_LOAD_IDX_MAX-1]
    avoiding array overflow caused by setting sd->*_idx to CPU_LOAD_IDX_MAX
    on sysctl.
    
    Signed-off-by: Libin <huawei.libin@huawei.com>
    Cc: <jiang.liu@huawei.com>
    Cc: <guohanjun@huawei.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/51626610.2040607@huawei.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 077c9f651e2d46f374ed2103b95ed492c4f4b52b
Author: Namhyung Kim <namhyung.kim@lge.com>
Date:   Thu Aug 16 17:03:24 2012 +0900

    sched/debug: Limit sd->*_idx range on sysctl
    
    commit 201c373e8e4823700d3160d5c28e1ab18fd1193e upstream.
    
    Various sd->*_idx's are used for refering the rq's load average table
    when selecting a cpu to run.  However they can be set to any number
    with sysctl knobs so that it can crash the kernel if something bad is
    given. Fix it by limiting them into the actual range.
    
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Signed-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Link: http://lkml.kernel.org/r/1345104204-8317-1-git-send-email-namhyung@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [bwh: Backported to 3.2:
     - Adjust filename
     - s/umode_t/mode_t/]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8ebf4043186fe8f7a275cf4e241f39105556e3ef
Author: Sarah Sharp <sarah.a.sharp@linux.intel.com>
Date:   Mon Mar 18 10:19:51 2013 -0700

    xhci: Don't warn on empty ring for suspended devices.
    
    commit a83d6755814e4614ba77e15d82796af0f695c6b8 upstream.
    
    When a device attached to the roothub is suspended, the endpoint rings
    are stopped.  The host may generate a completion event with the
    completion code set to 'Stopped' or 'Stopped Invalid' when the ring is
    halted.  The current xHCI code prints a warning in that case, which can
    be really annoying if the USB device is coming into and out of suspend.
    
    Remove the unnecessary warning.
    
    Signed-off-by: Sarah Sharp <sarah.a.sharp@linux.intel.com>
    Tested-by: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 81363d1b2071e404c261b6f38265ba3b90a0c556
Author: Cliff Wickman <cpw@sgi.com>
Date:   Fri May 24 15:55:36 2013 -0700

    mm/pagewalk.c: walk_page_range should avoid VM_PFNMAP areas
    
    commit a9ff785e4437c83d2179161e012f5bdfbd6381f0 upstream.
    
    A panic can be caused by simply cat'ing /proc/<pid>/smaps while an
    application has a VM_PFNMAP range.  It happened in-house when a
    benchmarker was trying to decipher the memory layout of his program.
    
    /proc/<pid>/smaps and similar walks through a user page table should not
    be looking at VM_PFNMAP areas.
    
    Certain tests in walk_page_range() (specifically split_huge_page_pmd())
    assume that all the mapped PFN's are backed with page structures.  And
    this is not usually true for VM_PFNMAP areas.  This can result in panics
    on kernel page faults when attempting to address those page structures.
    
    There are a half dozen callers of walk_page_range() that walk through a
    task's entire page table (as N.  Horiguchi pointed out).  So rather than
    change all of them, this patch changes just walk_page_range() to ignore
    VM_PFNMAP areas.
    
    The logic of hugetlb_vma() is moved back into walk_page_range(), as we
    want to test any vma in the range.
    
    VM_PFNMAP areas are used by:
    - graphics memory manager   gpu/drm/drm_gem.c
    - global reference unit     sgi-gru/grufile.c
    - sgi special memory        char/mspec.c
    - and probably several out-of-tree modules
    
    [akpm@linux-foundation.org: remove now-unused hugetlb_vma() stub]
    Signed-off-by: Cliff Wickman <cpw@sgi.com>
    Reviewed-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: Mel Gorman <mel@csn.ul.ie>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: David Sterba <dsterba@suse.cz>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: KOSAKI Motohiro <kosaki.motohiro@gmail.com>
    Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8580583da0353b8653e323e9bbfecbe3c80845e8
Author: Joseph Qi <joseph.qi@huawei.com>
Date:   Fri May 24 15:55:34 2013 -0700

    ocfs2: goto out_unlock if ocfs2_get_clusters_nocache() failed in ocfs2_fiemap()
    
    commit b4ca2b4b577c3530e34dcfaafccb2cc680ce95d1 upstream.
    
    Last time we found there is lock/unlock bug in ocfs2_file_aio_write, and
    then we did a thorough search for all lock resources in
    ocfs2_inode_info, including rw, inode and open lockres and found this
    bug.  My kernel version is 3.0.13, and it is also in the lastest version
    3.9.  In ocfs2_fiemap, once ocfs2_get_clusters_nocache failed, it should
    goto out_unlock instead of out, because we need release buffer head, up
    read alloc sem and unlock inode.
    
    Signed-off-by: Joseph Qi <joseph.qi@huawei.com>
    Reviewed-by: Jie Liu <jeff.liu@oracle.com>
    Cc: Mark Fasheh <mfasheh@suse.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Acked-by: Sunil Mushran <sunil.mushran@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c1bfba08b91429f57ee1184e52a607b7ec1739e4
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Fri May 24 15:55:33 2013 -0700

    random: fix accounting race condition with lockless irq entropy_count update
    
    commit 10b3a32d292c21ea5b3ad5ca5975e88bb20b8d68 upstream.
    
    Commit 902c098a3663 ("random: use lockless techniques in the interrupt
    path") turned IRQ path from being spinlock protected into lockless
    cmpxchg-retry update.
    
    That commit removed r->lock serialization between crediting entropy bits
    from IRQ context and accounting when extracting entropy on userspace
    read path, but didn't turn the r->entropy_count reads/updates in
    account() to use cmpxchg as well.
    
    It has been observed, that under certain circumstances this leads to
    read() on /dev/urandom to return 0 (EOF), as r->entropy_count gets
    corrupted and becomes negative, which in turn results in propagating 0
    all the way from account() to the actual read() call.
    
    Convert the accounting code to be the proper lockless counterpart of
    what has been partially done by 902c098a3663.
    
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Cc: Theodore Ts'o <tytso@mit.edu>
    Cc: Greg KH <greg@kroah.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 068a932999ef2485209a06809335ca8394c5beda
Author: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
Date:   Fri May 24 15:55:29 2013 -0700

    nilfs2: fix issue of nilfs_set_page_dirty() for page at EOF boundary
    
    commit 136e8770cd5d1fe38b3c613100dd6dc4db6d4fa6 upstream.
    
    nilfs2: fix issue of nilfs_set_page_dirty for page at EOF boundary
    
    DESCRIPTION:
     There are use-cases when NILFS2 file system (formatted with block size
    lesser than 4 KB) can be remounted in RO mode because of encountering of
    "broken bmap" issue.
    
    The issue was reported by Anthony Doggett <Anthony2486@interfaces.org.uk>:
     "The machine I've been trialling nilfs on is running Debian Testing,
      Linux version 3.2.0-4-686-pae (debian-kernel@lists.debian.org) (gcc
      version 4.6.3 (Debian 4.6.3-14) ) #1 SMP Debian 3.2.35-2), but I've
      also reproduced it (identically) with Debian Unstable amd64 and Debian
      Experimental (using the 3.8-trunk kernel).  The problematic partitions
      were formatted with "mkfs.nilfs2 -b 1024 -B 8192"."
    
    SYMPTOMS:
    (1) System log contains error messages likewise:
    
        [63102.496756] nilfs_direct_assign: invalid pointer: 0
        [63102.496786] NILFS error (device dm-17): nilfs_bmap_assign: broken bmap (inode number=28)
        [63102.496798]
        [63102.524403] Remounting filesystem read-only
    
    (2) The NILFS2 file system is remounted in RO mode.
    
    REPRODUSING PATH:
    (1) Create volume group with name "unencrypted" by means of vgcreate utility.
    (2) Run script (prepared by Anthony Doggett <Anthony2486@interfaces.org.uk>):
    
    ----------------[BEGIN SCRIPT]--------------------
    
    VG=unencrypted
    lvcreate --size 2G --name ntest $VG
    mkfs.nilfs2 -b 1024 -B 8192 /dev/mapper/$VG-ntest
    mkdir /var/tmp/n
    mkdir /var/tmp/n/ntest
    mount /dev/mapper/$VG-ntest /var/tmp/n/ntest
    mkdir /var/tmp/n/ntest/thedir
    cd /var/tmp/n/ntest/thedir
    sleep 2
    date
    darcs init
    sleep 2
    dmesg|tail -n 5
    date
    darcs whatsnew || true
    date
    sleep 2
    dmesg|tail -n 5
    ----------------[END SCRIPT]--------------------
    
    REPRODUCIBILITY: 100%
    
    INVESTIGATION:
    As it was discovered, the issue takes place during segment
    construction after executing such sequence of user-space operations:
    
      open("_darcs/index", O_RDWR|O_CREAT|O_NOCTTY, 0666) = 7
      fstat(7, {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
      ftruncate(7, 60)
    
    The error message "NILFS error (device dm-17): nilfs_bmap_assign: broken
    bmap (inode number=28)" takes place because of trying to get block
    number for third block of the file with logical offset #3072 bytes.  As
    it is possible to see from above output, the file has 60 bytes of the
    whole size.  So, it is enough one block (1 KB in size) allocation for
    the whole file.  Trying to operate with several blocks instead of one
    takes place because of discovering several dirty buffers for this file
    in nilfs_segctor_scan_file() method.
    
    The root cause of this issue is in nilfs_set_page_dirty function which
    is called just before writing to an mmapped page.
    
    When nilfs_page_mkwrite function handles a page at EOF boundary, it
    fills hole blocks only inside EOF through __block_page_mkwrite().
    
    The __block_page_mkwrite() function calls set_page_dirty() after filling
    hole blocks, thus nilfs_set_page_dirty function (=
    a_ops->set_page_dirty) is called.  However, the current implementation
    of nilfs_set_page_dirty() wrongly marks all buffers dirty even for page
    at EOF boundary.
    
    As a result, buffers outside EOF are inconsistently marked dirty and
    queued for write even though they are not mapped with nilfs_get_block
    function.
    
    FIX:
    This modifies nilfs_set_page_dirty() not to mark hole blocks dirty.
    
    Thanks to Vyacheslav Dubeyko for his effort on analysis and proposals
    for this issue.
    
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Reported-by: Anthony Doggett <Anthony2486@interfaces.org.uk>
    Reported-by: Vyacheslav Dubeyko <slava@dubeyko.com>
    Cc: Vyacheslav Dubeyko <slava@dubeyko.com>
    Tested-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6045e6d7315d2ed99b7ff383aa6a46cc706181e5
Author: Brian Behlendorf <behlendorf1@llnl.gov>
Date:   Fri May 24 15:55:28 2013 -0700

    drivers/block/brd.c: fix brd_lookup_page() race
    
    commit dfd20b2b174d3a9b258ea3b7a35ead33576587b1 upstream.
    
    The index on the page must be set before it is inserted in the radix
    tree.  Otherwise there is a small race which can occur during lookup
    where the page can be found with the incorrect index.  This will trigger
    the BUG_ON() in brd_lookup_page().
    
    Signed-off-by: Brian Behlendorf <behlendorf1@llnl.gov>
    Reported-by: Chris Wedgwood <cw@f00f.org>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f45f28f4921a03d20d04f273dad68d30736304c6
Author: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Date:   Fri May 24 15:55:21 2013 -0700

    mm/THP: use pmd_populate() to update the pmd with pgtable_t pointer
    
    commit 7c3425123ddfdc5f48e7913ff59d908789712b18 upstream.
    
    We should not use set_pmd_at to update pmd_t with pgtable_t pointer.
    set_pmd_at is used to set pmd with huge pte entries and architectures
    like ppc64, clear few flags from the pte when saving a new entry.
    Without this change we observe bad pte errors like below on ppc64 with
    THP enabled.
    
      BUG: Bad page map in process ld mm=0xc000001ee39f4780 pte:7fc3f37848000001 pmd:c000001ec0000000
    
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Reviewed-by: Andrea Arcangeli <aarcange@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7fa32acca588177bbc49dc2b4c6fa469c4aa5bd5
Author: Leonid Yegoshin <Leonid.Yegoshin@imgtec.com>
Date:   Fri May 24 15:55:18 2013 -0700

    mm compaction: fix of improper cache flush in migration code
    
    commit c2cc499c5bcf9040a738f49e8051b42078205748 upstream.
    
    Page 'new' during MIGRATION can't be flushed with flush_cache_page().
    Using flush_cache_page(vma, addr, pfn) is justified only if the page is
    already placed in process page table, and that is done right after
    flush_cache_page().  But without it the arch function has no knowledge
    of process PTE and does nothing.
    
    Besides that, flush_cache_page() flushes an application cache page, but
    the kernel has a different page virtual address and dirtied it.
    
    Replace it with flush_dcache_page(new) which is the proper usage.
    
    The old page is flushed in try_to_unmap_one() before migration.
    
    This bug takes place in Sead3 board with M14Kc MIPS CPU without cache
    aliasing (but Harvard arch - separate I and D cache) in tight memory
    environment (128MB) each 1-3days on SOAK test.  It fails in cc1 during
    kernel build (SIGILL, SIGBUS, SIGSEG) if CONFIG_COMPACTION is switched
    ON.
    
    Signed-off-by: Leonid Yegoshin <Leonid.Yegoshin@imgtec.com>
    Cc: Leonid Yegoshin <yegoshin@mips.com>
    Acked-by: Rik van Riel <riel@redhat.com>
    Cc: Michal Hocko <mhocko@suse.cz>
    Acked-by: Mel Gorman <mgorman@suse.de>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Russell King <rmk@arm.linux.org.uk>
    Cc: David Miller <davem@davemloft.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1619f441963ea57fa1082d046da867acfcd4d099
Author: Alexandre Bounine <alexandre.bounine@idt.com>
Date:   Fri May 24 15:55:17 2013 -0700

    rapidio/tsi721: fix bug in MSI interrupt handling
    
    commit 1ccc819da6fda9bee10ab8b72e9adbb5ad3e4959 upstream.
    
    Fix bug in MSI interrupt handling which causes loss of event
    notifications.
    
    Typical indication of lost MSI interrupts are stalled message and
    doorbell transfers between RapidIO endpoints.  To avoid loss of MSI
    interrupts all interrupts from the device must be disabled on entering
    the interrupt handler routine and re-enabled when exiting it.
    Re-enabling device interrupts will trigger new MSI message(s) if Tsi721
    registered new events since entering interrupt handler routine.
    
    This patch is applicable to kernel versions starting from v3.2.
    
    Signed-off-by: Alexandre Bounine <alexandre.bounine@idt.com>
    Cc: Matt Porter <mporter@kernel.crashing.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7cdf9a24694742936fcf78dc6ed8dc31c636141d
Author: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>
Date:   Fri May 24 15:55:11 2013 -0700

    mm: mmu_notifier: re-fix freed page still mapped in secondary MMU
    
    commit d34883d4e35c0a994e91dd847a82b4c9e0c31d83 upstream.
    
    Commit 751efd8610d3 ("mmu_notifier_unregister NULL Pointer deref and
    multiple ->release()") breaks the fix 3ad3d901bbcf ("mm: mmu_notifier:
    fix freed page still mapped in secondary MMU").
    
    Since hlist_for_each_entry_rcu() is changed now, we can not revert that
    patch directly, so this patch reverts the commit and simply fix the bug
    spotted by that patch
    
    This bug spotted by commit 751efd8610d3 is:
    
        There is a race condition between mmu_notifier_unregister() and
        __mmu_notifier_release().
    
        Assume two tasks, one calling mmu_notifier_unregister() as a result
        of a filp_close() ->flush() callout (task A), and the other calling
        mmu_notifier_release() from an mmput() (task B).
    
                            A                               B
        t1                                            srcu_read_lock()
        t2            if (!hlist_unhashed())
        t3                                            srcu_read_unlock()
        t4            srcu_read_lock()
        t5                                            hlist_del_init_rcu()
        t6                                            synchronize_srcu()
        t7            srcu_read_unlock()
        t8            hlist_del_rcu()  <--- NULL pointer deref.
    
    This can be fixed by using hlist_del_init_rcu instead of hlist_del_rcu.
    
    The another issue spotted in the commit is "multiple ->release()
    callouts", we needn't care it too much because it is really rare (e.g,
    can not happen on kvm since mmu-notify is unregistered after
    exit_mmap()) and the later call of multiple ->release should be fast
    since all the pages have already been released by the first call.
    Anyway, this issue should be fixed in a separate patch.
    
    -stable suggestions: Any version that has commit 751efd8610d3 need to be
    backported.  I find the oldest version has this commit is 3.0-stable.
    
    [akpm@linux-foundation.org: tweak comments]
    Signed-off-by: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>
    Tested-by: Robin Holt <holt@sgi.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.2: hlist_for_each_entry_rcu() still requires the
     struct hlist_node pointer]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 13fd0ed7f75373d6189c2c8e3dec2601d87c945f
Author: Imre Deak <imre.deak@intel.com>
Date:   Fri May 24 15:55:09 2013 -0700

    wait: fix false timeouts when using wait_event_timeout()
    
    commit 4c663cfc523a88d97a8309b04a089c27dc57fd7e upstream.
    
    Many callers of the wait_event_timeout() and
    wait_event_interruptible_timeout() expect that the return value will be
    positive if the specified condition becomes true before the timeout
    elapses.  However, at the moment this isn't guaranteed.  If the wake-up
    handler is delayed enough, the time remaining until timeout will be
    calculated as 0 - and passed back as a return value - even if the
    condition became true before the timeout has passed.
    
    Fix this by returning at least 1 if the condition becomes true.  This
    semantic is in line with what wait_for_condition_timeout() does; see
    commit bb10ed09 ("sched: fix wait_for_completion_timeout() spurious
    failure under heavy load").
    
    Daniel said "We have 3 instances of this bug in drm/i915.  One case even
    where we switch between the interruptible and not interruptible
    wait_event_timeout variants, foolishly presuming they have the same
    semantics.  I very much like this."
    
    One such bug is reported at
      https://bugs.freedesktop.org/show_bug.cgi?id=64133
    
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Acked-by: David Howells <dhowells@redhat.com>
    Acked-by: Jens Axboe <axboe@kernel.dk>
    Cc: "Paul E.  McKenney" <paulmck@linux.vnet.ibm.com>
    Cc: Dave Jones <davej@redhat.com>
    Cc: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 01aab5ff3033fd6778f9cf7b044da9afef5b2f54
Author: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
Date:   Fri May 24 15:55:08 2013 -0700

    fat: fix possible overflow for fat_clusters
    
    commit 7b92d03c3239f43e5b86c9cc9630f026d36ee995 upstream.
    
    Intermediate value of fat_clusters can be overflowed on 32bits arch.
    
    Reported-by: Krzysztof Strasburger <strasbur@chkw386.ch.pwr.wroc.pl>
    Signed-off-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2114b0ee38405ced73040bc1228c6cd42ecac8e2
Author: Bastian Triller <bastian.triller@gmail.com>
Date:   Sun May 19 11:52:33 2013 +0000

    ACPI / video: Add "Asus UL30A" to ACPI video detect blacklist
    
    commit c8f6d8351ba8c89d5cd4c562552ec7ec29274e31 upstream.
    
    Like on UL30VT, the ACPI video driver can't control backlight correctly on
    Asus UL30A.  Vendor driver (asus-laptop) can work.  This patch is to
    add "Asus UL30A" to ACPI video detect blacklist in order to use
    asus-laptop for video control on the "Asus UL30A" rather than ACPI
    video driver.
    
    Signed-off-by: Bastian Triller <bastian.triller@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a9c23a1564f3afe9606aa12654b09f2e0699825b
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Mon May 20 14:45:26 2013 +0000

    perf: net_dropmonitor: Fix symbol-relative addresses
    
    commit 5a1e99dd2028e00998d42029be86835d8ef4a46e upstream.
    
    The comparison between traced and symbol addresses is backwards: if
    the traced address doesn't exactly match a symbol (which we don't
    expect it to), we'll show the next symbol and the offset to it,
    whereas we should show the previous symbol and the offset from it.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit 459a0d39ee135123fc91670d5665daf6deb80d74
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Mon May 20 14:44:43 2013 +0000

    perf: net_dropmonitor: Fix trace parameter order
    
    commit 140c3c6a2bcd2c31e2f7f5a8d59689724776c8e5 upstream.
    
    This works much better if we don't treat protocol numbers as addresses.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>

commit f7b72b71fe00b5159d71f0d385c8d5e5865bcd32
Author: Trond Myklebust <Trond.Myklebust@netapp.com>
Date:   Wed May 22 12:57:24 2013 -0400

    SUNRPC: Prevent an rpc_task wakeup race
    
    commit a3c3cac5d31879cd9ae2de7874dc6544ca704aec upstream.
    
    The lockless RPC_IS_QUEUED() test in __rpc_execute means that we need to
    be careful about ordering the calls to rpc_test_and_set_running(task) and
    rpc_clear_queued(task). If we get the order wrong, then we may end up
    testing the RPC_TASK_RUNNING flag after __rpc_execute() has looped
    and changed the state of the rpc_task.
    
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a27e05b0cf32d711c1ec57625b6053658efd11fc
Author: Jeff Layton <jlayton@kernel.org>
Date:   Mon Jul 23 15:51:55 2012 -0400

    sunrpc: clarify comments on rpc_make_runnable
    
    commit 506026c3ec270e18402f0c9d33fee37482c23861 upstream.
    
    rpc_make_runnable is not generally called with the queue lock held, unless
    it's waking up a task that has been sitting on a waitqueue. This is safe
    when the task has not entered the FSM yet, but the comments don't really
    spell this out.
    
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 40a2e8cd0cb2548bb78a8b8b3ace6b911f2bb98b
Author: Wang YanQing <udknight@gmail.com>
Date:   Thu May 9 14:16:47 2013 +0800

    TTY: Fix tty miss restart after we turn off flow-control
    
    commit dab73b4eb9ef924a2b90dab84e539076d82b256f upstream.
    
    I meet emacs hang in start if I do the operation below:
      1: echo 3 > /proc/sys/vm/drop_caches
      2: emacs BigFile
      3: Press CTRL-S follow 2 immediately
    
    Then emacs hang on, CTRL-Q can't resume, the terminal
    hang on, you can do nothing with this terminal except
    close it.
    
    The reason is before emacs takeover control the tty,
    we use CTRL-S to XOFF it. Then when emacs takeover the
    control, it may don't use the flow-control, so emacs hang.
    This patch fix it.
    
    This patch will fix a kind of strange tty relation hang problem,
    I believe I meet it with vim in ssh, and also see below bug report:
    http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=465823
    
    Signed-off-by: Wang YanQing <udknight@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e75b61897276c5100e61c9c74fd55ded28f31431
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Sun May 19 21:52:20 2013 +0300

    USB: cxacru: potential underflow in cxacru_cm_get_array()
    
    commit 2a0ebf80aa95cc758d4725f74a7016e992606a39 upstream.
    
    The value of "offd" comes off the instance->rcv_buf[] and we used it as
    the offset into an array.  The problem is that we check the upper bound
    but not for negative values.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cba40e7f42e477750bd1bf63ec8337b6f65a9baf
Author: Gregory CLEMENT <gregory.clement@bootlin.com>
Date:   Sun May 19 22:12:43 2013 +0200

    ARM: plat-orion: Fix num_resources and id for ge10 and ge11
    
    commit 2b8b2797142c7951e635c6eec5d1705ee9bc45c5 upstream.
    
    When platform data were moved from arch/arm/mach-mv78xx0/common.c to
    arch/arm/plat-orion/common.c with the commit "7e3819d ARM: orion:
    Consolidate ethernet platform data", there were few typo made on
    gigabit Ethernet interface ge10 and ge11. This commit writes back
    their initial value, which allows to use this interfaces again.
    
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Acked-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0cbb6f3def0ceedcbef5af335c756cd427d9e8cc
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Fri May 17 10:44:15 2013 +0930

    virtio_console: fix uapi header
    
    commit 6407d75afd08545f2252bb39806ffd3f10c7faac upstream.
    
    uapi should use __u32 not u32.
    Fix a macro in virtio_console.h which uses u32.
    
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d63f0b723b88be5e598795f0c2b1544d5bbc5def
Author: Gabriel de Perthuis <g2p.code@gmail.com>
Date:   Mon May 6 17:40:18 2013 +0000

    btrfs: don't stop searching after encountering the wrong item
    
    commit 03b71c6ca6286625d8f1ed44aabab9b5bf5dac10 upstream.
    
    The search ioctl skips items that are too large for a result buffer, but
    inline items of a certain size occuring before any search result is
    found would trigger an overflow and stop the search entirely.
    
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=57641
    
    Signed-off-by: Gabriel de Perthuis <g2p.code+btrfs@gmail.com>
    Signed-off-by: Josef Bacik <jbacik@fusionio.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8dd735ad73c1d71f18d9022373b5f785814b0232
Author: Gomella, Andrew (NIH/NHLBI) [F] <andrew.gomella@nih.gov>
Date:   Fri May 17 17:39:46 2013 +0000

    USB: ftdi_sio: Add support for Newport CONEX motor drivers
    
    commit 7138143972b7c293267c783fc99a194f0ceff7f2 upstream.
    
    Here are two more devices that use FTDI USB-to-serial chips with new product ID's.
    
    The devices are the Newport Conex-AGP and Conex-CC motor controllers.
    (http://www.newport.com/CONEX-AGP-Integrated-Piezo-Motor-Rotation-Stages-/987623/1033/info.aspx)
    (http://www.newport.com/CONEX-CC-DC-Servo-Controller-Actuators/934114/1033/info.aspx)
    
    usb-devices command yields:
    
    P:  Vendor=104d ProdID=3002 Rev=06.00
    S:  Manufacturer=Newport
    S:  Product=CONEX-CC
    
    as well as
    
    P:  Vendor=104d ProdID=3006 Rev=06.00
    S:  Manufacturer=Newport
    S:  Product=CONEX-AGP
    
    Signed-off-by: Andrew Gomella <andrew.gomella@nih.gov>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e6ba935d6c8a7297a9b0a846cb58df2479703cba
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Mon May 13 00:54:30 2013 +0000

    i2c: designware: always clear interrupts before enabling them
    
    commit 2a2d95e9d6d29e726cc294b65391917ed2e32bf4 upstream.
    
    If the I2C bus is put to a low power state by an ACPI method it might pull
    the SDA line low (as its power is removed). Once the bus is put to full
    power state again, the SDA line is pulled back to high. This transition
    looks like a STOP condition from the controller point-of-view which sets
    STOP detected bit in its status register causing the driver to fail
    subsequent transfers.
    
    Fix this by always clearing all interrupts before we start a transfer.
    
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dc7838a64147429730e997a9fede3f47106b9f96
Author: Dan Williams <dcbw@redhat.com>
Date:   Mon May 6 16:16:44 2013 -0500

    USB: option: add device IDs for Dell 5804 (Novatel E371) WWAN card
    
    commit 49c6e370dd6400b84897c4100095089b5c13a061 upstream.
    
    A rebranded Novatel E371 for AT&T's LTE bands.
    
    Signed-off-by: Dan Williams <dcbw@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bad58e4ca9b2871113204f6e0765e2297562c891
Author: Schemmel Hans-Christoph <Hans-Christoph.Schemmel@gemalto.com>
Date:   Mon May 6 11:05:12 2013 +0200

    USB: Blacklisted Cinterion's PLxx WWAN Interface
    
    commit 8ff10bdb14a52e3f25d4ce09e0582a8684c1a6db upstream.
    
    /drivers/usb/serial/option.c: Blacklisted Cinterion's PLxx WWAN
    Interface (USB Interface 4), because it will be handled by QMI WWAN
    driver. Product IDs renamed.
    
    Signed-off-by: Hans-Christoph Schemmel <hans-christoph.schemmel@gemalto.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8087e56e56129d8c0ee2a3d4d68e1aa059ad815e
Author: Teppo Kotilainen <qubit303@gmail.com>
Date:   Fri May 3 10:28:12 2013 +0300

    usb: option: Add Telewell TW-LTE 4G
    
    commit 73c042df6e1bc50544842a04b777b36bbe3630e6 upstream.
    
    Information from driver description files:
    
      diag:  VID_19D2&PID_0412&MI_00
      nmea:  VID_19D2&PID_0412&MI_01
      at:    VID_19D2&PID_0412&MI_02
      modem: VID_19D2&PID_0412&MI_03
      net:   VID_19D2&PID_0412&MI_04
    
    Signed-off-by: Teppo Kotilainen <qubit303@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit efd0912f0d3a1f91ae10bd60d8c604bf7fd3ace6
Author: Oliver Neukum <oliver@neukum.org>
Date:   Tue Apr 30 10:18:04 2013 +0200

    USB: reset resume quirk needed by a hub
    
    commit bac6b03275184c912ad0818c9a0a736847804dca upstream.
    
    Werner Fink has reported problems with this hub.
    
    Signed-off-by: Oliver Neukum <oliver@neukum.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a40e87cb5098aec01b309ac99cca73f54efb3958
Author: Benjamin LaHaise <bcrl@kvack.org>
Date:   Thu May 16 14:04:27 2013 -0500

    ipmi: ipmi_devintf: compat_ioctl method fails to take ipmi_mutex
    
    commit 6368087e851e697679af059b4247aca33a69cef3 upstream.
    
    When a 32 bit version of ipmitool is used on a 64 bit kernel, the
    ipmi_devintf code fails to correctly acquire ipmi_mutex.  This results in
    incomplete data being retrieved in some cases, or other possible failures.
    Add a wrapper around compat_ipmi_ioctl() to take ipmi_mutex to fix this.
    
    Signed-off-by: Benjamin LaHaise <bcrl@kvack.org>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a03d85b70271c0664caf15ea10d3e232848082d0
Author: Chen Gang <gang.chen@asianux.com>
Date:   Thu May 16 14:04:25 2013 -0500

    drivers/char/ipmi: memcpy, need additional 2 bytes to avoid memory overflow
    
    commit a5f2b3d6a738e7d4180012fe7b541172f8c8dcea upstream.
    
    When calling memcpy, read_data and write_data need additional 2 bytes.
    
      write_data:
        for checking:  "if (size > IPMI_MAX_MSG_LENGTH)"
        for operating: "memcpy(bt->write_data + 3, data + 1, size - 1)"
    
      read_data:
        for checking:  "if (msg_len < 3 || msg_len > IPMI_MAX_MSG_LENGTH)"
        for operating: "memcpy(data + 2, bt->read_data + 4, msg_len - 2)"
    
    Signed-off-by: Chen Gang <gang.chen@asianux.com>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b5bcd909bef8caf59cfc85f02ac2879419c89ab3
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Thu May 16 17:43:55 2013 +0200

    usermodehelper: check subprocess_info->path != NULL
    
    commit 264b83c07a84223f0efd0d1db9ccc66d6f88288f upstream.
    
    argv_split(empty_or_all_spaces) happily succeeds, it simply returns
    argc == 0 and argv[0] == NULL. Change call_usermodehelper_exec() to
    check sub_info->path != NULL to avoid the crash.
    
    This is the minimal fix, todo:
    
     - perhaps we should change argv_split() to return NULL or change the
       callers.
    
     - kill or justify ->path[0] check
    
     - narrow the scope of helper_lock()
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Acked-By: Lucas De Marchi <lucas.demarchi@intel.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 67544c758f9d9fbc27915ea34d6cd70b27f56104
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Tue May 14 15:40:48 2013 -0400

    tracing: Fix leaks of filter preds
    
    commit 60705c89460fdc7227f2d153b68b3f34814738a4 upstream.
    
    Special preds are created when folding a series of preds that
    can be done in serial. These are allocated in an ops field of
    the pred structure. But they were never freed, causing memory
    leaks.
    
    This was discovered using the kmemleak checker:
    
    unreferenced object 0xffff8800797fd5e0 (size 32):
      comm "swapper/0", pid 1, jiffies 4294690605 (age 104.608s)
      hex dump (first 32 bytes):
        00 00 01 00 03 00 05 00 07 00 09 00 0b 00 0d 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<ffffffff814b52af>] kmemleak_alloc+0x73/0x98
        [<ffffffff8111ff84>] kmemleak_alloc_recursive.constprop.42+0x16/0x18
        [<ffffffff81120e68>] __kmalloc+0xd7/0x125
        [<ffffffff810d47eb>] kcalloc.constprop.24+0x2d/0x2f
        [<ffffffff810d4896>] fold_pred_tree_cb+0xa9/0xf4
        [<ffffffff810d3781>] walk_pred_tree+0x47/0xcc
        [<ffffffff810d5030>] replace_preds.isra.20+0x6f8/0x72f
        [<ffffffff810d50b5>] create_filter+0x4e/0x8b
        [<ffffffff81b1c30d>] ftrace_test_event_filter+0x5a/0x155
        [<ffffffff8100028d>] do_one_initcall+0xa0/0x137
        [<ffffffff81afbedf>] kernel_init_freeable+0x14d/0x1dc
        [<ffffffff814b24b7>] kernel_init+0xe/0xdb
        [<ffffffff814d539c>] ret_from_fork+0x7c/0xb0
        [<ffffffffffffffff>] 0xffffffffffffffff
    
    Cc: Tom Zanussi <tzanussi@gmail.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4e3a840b91c1591888fdec16fbd50e15cb1d6a63
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Tue May 14 13:55:29 2013 -0400

    USB: UHCI: fix for suspend of virtual HP controller
    
    commit 997ff893603c6455da4c5e26ba1d0f81adfecdfc upstream.
    
    HP's virtual UHCI host controller takes a long time to suspend
    (several hundred microseconds), even when no devices are attached.
    This provokes a warning message from uhci-hcd in the auto-stop case.
    
    To prevent this from happening, this patch adds a test to avoid
    performing an auto-stop when the wait_for_hp quirk flag is set.  The
    controller will still suspend through the normal runtime PM mechanism.
    And since that pathway includes a 1-ms delay, the slowness of the
    virtual hardware won't matter.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-and-tested-by: ZhenHua <zhen-hual@hp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 90f20d722e132a7e2a2588c3d11734a375fe7bd7
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Wed May 8 11:18:05 2013 -0400

    USB: xHCI: override bogus bulk wMaxPacketSize values
    
    commit e4f47e3675e6f1f40906b785b934ce963e9f2eb3 upstream.
    
    This patch shortens the logic in xhci_endpoint_init() by moving common
    calculations involving max_packet and max_burst outside the switch
    statement, rather than repeating the same code in multiple
    case-specific statements.  It also replaces two usages of max_packet
    which were clearly intended to be max_burst all along.
    
    More importantly, it compensates for a common bug in high-speed bulk
    endpoint descriptors.  In many devices there is a bulk endpoint having
    a wMaxPacketSize value smaller than 512, which is forbidden by the USB
    spec.  Some xHCI controllers can't handle this and refuse to accept
    the endpoint.  This patch changes the max_packet value to 512, which
    allows the controller to use the endpoint properly.
    
    In practice the bogus maxpacket size doesn't matter, because none of
    the transfers sent via these endpoints are longer than the maxpacket
    value anyway.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-and-tested-by: "Aurélien Leblond" <blablack@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f5dd62805f100ddad8c0a856b530800aae92cc5d
Author: Nithin Sujir <nsujir@broadcom.com>
Date:   Mon May 13 11:04:15 2013 +0000

    tg3: Skip powering down function 0 on certain serdes devices
    
    commit 44f3b503c16425c8e9db4bbaa2fc9cd0c9d0ba91 upstream.
    
    On the 5718, 5719 and 5720 serdes devices, powering down function 0
    results in all the other ports being powered down. Add code to skip
    function 0 power down.
    
    v2:
     - Modify tg3_phy_power_bug() function to use a switch instead of a
       complicated if statement. Suggested by Joe Perches.
    
    Signed-off-by: Michael Chan <mchan@broadcom.com>
    Signed-off-by: Nithin Nayak Sujir <nsujir@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2:
     s/tg3_asic_rev\(tp\)/GET_ASIC_REV(tp->pci_chip_rev_id)/]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9ea470782e37a58e3fc2e592648248fb8fb6ca31
Author: Tirupathi Reddy <tirupath@codeaurora.org>
Date:   Tue May 14 13:59:02 2013 +0530

    timer: Don't reinitialize the cpu base lock during CPU_UP_PREPARE
    
    commit 42a5cf46cd56f46267d2a9fcf2655f4078cd3042 upstream.
    
    An inactive timer's base can refer to a offline cpu's base.
    
    In the current code, cpu_base's lock is blindly reinitialized each
    time a CPU is brought up. If a CPU is brought online during the period
    that another thread is trying to modify an inactive timer on that CPU
    with holding its timer base lock, then the lock will be reinitialized
    under its feet. This leads to following SPIN_BUG().
    
    <0> BUG: spinlock already unlocked on CPU#3, kworker/u:3/1466
    <0> lock: 0xe3ebe000, .magic: dead4ead, .owner: kworker/u:3/1466, .owner_cpu: 1
    <4> [<c0013dc4>] (unwind_backtrace+0x0/0x11c) from [<c026e794>] (do_raw_spin_unlock+0x40/0xcc)
    <4> [<c026e794>] (do_raw_spin_unlock+0x40/0xcc) from [<c076c160>] (_raw_spin_unlock+0x8/0x30)
    <4> [<c076c160>] (_raw_spin_unlock+0x8/0x30) from [<c009b858>] (mod_timer+0x294/0x310)
    <4> [<c009b858>] (mod_timer+0x294/0x310) from [<c00a5e04>] (queue_delayed_work_on+0x104/0x120)
    <4> [<c00a5e04>] (queue_delayed_work_on+0x104/0x120) from [<c04eae00>] (sdhci_msm_bus_voting+0x88/0x9c)
    <4> [<c04eae00>] (sdhci_msm_bus_voting+0x88/0x9c) from [<c04d8780>] (sdhci_disable+0x40/0x48)
    <4> [<c04d8780>] (sdhci_disable+0x40/0x48) from [<c04bf300>] (mmc_release_host+0x4c/0xb0)
    <4> [<c04bf300>] (mmc_release_host+0x4c/0xb0) from [<c04c7aac>] (mmc_sd_detect+0x90/0xfc)
    <4> [<c04c7aac>] (mmc_sd_detect+0x90/0xfc) from [<c04c2504>] (mmc_rescan+0x7c/0x2c4)
    <4> [<c04c2504>] (mmc_rescan+0x7c/0x2c4) from [<c00a6a7c>] (process_one_work+0x27c/0x484)
    <4> [<c00a6a7c>] (process_one_work+0x27c/0x484) from [<c00a6e94>] (worker_thread+0x210/0x3b0)
    <4> [<c00a6e94>] (worker_thread+0x210/0x3b0) from [<c00aad9c>] (kthread+0x80/0x8c)
    <4> [<c00aad9c>] (kthread+0x80/0x8c) from [<c000ea80>] (kernel_thread_exit+0x0/0x8)
    
    As an example, this particular crash occurred when CPU #3 is executing
    mod_timer() on an inactive timer whose base is refered to offlined CPU
    #2.  The code locked the timer_base corresponding to CPU #2. Before it
    could proceed, CPU #2 came online and reinitialized the spinlock
    corresponding to its base. Thus now CPU #3 held a lock which was
    reinitialized. When CPU #3 finally ended up unlocking the old cpu_base
    corresponding to CPU #2, we hit the above SPIN_BUG().
    
    CPU #0          CPU #3                                 CPU #2
    ------          -------                                -------
    .....            ......                               <Offline>
                    mod_timer()
                     lock_timer_base
                       spin_lock_irqsave(&base->lock)
    
    cpu_up(2)        .....                                  ......
                                                            init_timers_cpu()
    ....             .....                                  spin_lock_init(&base->lock)
    .....              spin_unlock_irqrestore(&base->lock)  ......
                       <spin_bug>
    
    Allocation of per_cpu timer vector bases is done only once under
    "tvec_base_done[]" check. In the current code, spinlock_initialization
    of base->lock isn't under this check. When a CPU is up each time the
    base lock is reinitialized. Move base spinlock initialization under
    the check.
    
    Signed-off-by: Tirupathi Reddy <tirupath@codeaurora.org>
    Link: http://lkml.kernel.org/r/1368520142-4136-1-git-send-email-tirupath@codeaurora.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 97bc4b97d4908d5c76592b740e88df0ca6362e59
Author: Robert Jennings <rcj@linux.vnet.ibm.com>
Date:   Tue May 7 04:34:11 2013 +0000

    powerpc: Bring all threads online prior to migration/hibernation
    
    commit 120496ac2d2d60aee68d3123a68169502a85f4b5 upstream.
    
    This patch brings online all threads which are present but not online
    prior to migration/hibernation.  After migration/hibernation those
    threads are taken back offline.
    
    During migration/hibernation all online CPUs must call H_JOIN, this is
    required by the hypervisor.  Without this patch, threads that are offline
    (H_CEDE'd) will not be woken to make the H_JOIN call and the OS will be
    deadlocked (all threads either JOIN'd or CEDE'd).
    
    Signed-off-by: Robert Jennings <rcj@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 37dda1cc714d2af30ab5a537907b4317c6bb62e6
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Wed Jan 11 06:56:04 2012 +0000

    powerpc/pseries: Fix partition migration hang in stop_topology_update
    
    commit 444080d13d05dc38d07dd3bf751d38bce7ab7c72 upstream.
    
    This fixes a hang that was observed during live partition migration.
    Since stop_topology_update must not be called from an interrupt
    context, call it earlier in the migration process. The hang observed
    can be seen below:
    
    WARNING: at kernel/timer.c:1011
    Modules linked in: ip6t_LOG xt_tcpudp xt_pkttype ipt_LOG xt_limit ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 ip6table_raw xt_NOTRACK ipt_REJECT xt_state iptable_raw iptable_filter ip6table_mangle nf_conntrack_netbios_ns nf_conntrack_broadcast nf_conntrack_ipv4 nf_conntrack nf_defrag_ipv4 ip_tables ip6table_filter ip6_tables x_tables ipv6 fuse loop ibmveth sg ext3 jbd mbcache raid456 async_raid6_recov async_pq raid6_pq async_xor xor async_memcpy async_tx raid10 raid1 raid0 scsi_dh_alua scsi_dh_rdac scsi_dh_hp_sw scsi_dh_emc dm_round_robin dm_multipath scsi_dh sd_mod crc_t10dif ibmvfc scsi_transport_fc scsi_tgt scsi_mod dm_snapshot dm_mod
    NIP: c0000000000c52d8 LR: c00000000004be28 CTR: 0000000000000000
    REGS: c00000005ffd77d0 TRAP: 0700   Not tainted  (3.2.0-git-00001-g07d106d)
    MSR: 8000000000021032 <ME,CE,IR,DR>  CR: 48000084  XER: 00000001
    CFAR: c00000000004be20
    TASK = c00000005ec78860[0] 'swapper/3' THREAD: c00000005ec98000 CPU: 3
    GPR00: 0000000000000001 c00000005ffd7a50 c000000000fbbc98 c000000000ec8340
    GPR04: 00000000282a0020 0000000000000000 0000000000004000 0000000000000101
    GPR08: 0000000000000012 c00000005ffd4000 0000000000000020 c000000000f3ba88
    GPR12: 0000000000000000 c000000007f40900 0000000000000001 0000000000000004
    GPR16: 0000000000000001 0000000000000000 0000000000000000 c000000001022310
    GPR20: 0000000000000001 0000000000000000 0000000000200200 c000000001029e14
    GPR24: 0000000000000000 0000000000000001 0000000000000040 c00000003f74bc80
    GPR28: c00000003f74bc84 c000000000f38038 c000000000f16b58 c000000000ec8340
    NIP [c0000000000c52d8] .del_timer_sync+0x28/0x60
    LR [c00000000004be28] .stop_topology_update+0x20/0x38
    Call Trace:
    [c00000005ffd7a50] [c00000005ec78860] 0xc00000005ec78860 (unreliable)
    [c00000005ffd7ad0] [c00000000004be28] .stop_topology_update+0x20/0x38
    [c00000005ffd7b40] [c000000000028378] .__rtas_suspend_last_cpu+0x58/0x260
    [c00000005ffd7bf0] [c0000000000fa230] .generic_smp_call_function_interrupt+0x160/0x358
    [c00000005ffd7cf0] [c000000000036ec8] .smp_ipi_demux+0x88/0x100
    [c00000005ffd7d80] [c00000000005c154] .icp_hv_ipi_action+0x5c/0x80
    [c00000005ffd7e00] [c00000000012a088] .handle_irq_event_percpu+0x100/0x318
    [c00000005ffd7f00] [c00000000012e774] .handle_percpu_irq+0x84/0xd0
    [c00000005ffd7f90] [c000000000022ba8] .call_handle_irq+0x1c/0x2c
    [c00000005ec9ba20] [c00000000001157c] .do_IRQ+0x22c/0x2a8
    [c00000005ec9bae0] [c0000000000054bc] hardware_interrupt_entry+0x18/0x1c
    Exception: 501 at .cpu_idle+0x194/0x2f8
        LR = .cpu_idle+0x194/0x2f8
    [c00000005ec9bdd0] [c000000000017e58] .cpu_idle+0x188/0x2f8 (unreliable)
    [c00000005ec9be90] [c00000000067ec18] .start_secondary+0x3e4/0x524
    [c00000005ec9bf90] [c0000000000093e8] .start_secondary_prolog+0x10/0x14
    Instruction dump:
    ebe1fff8 4e800020 fbe1fff8 7c0802a6 f8010010 7c7f1b78 f821ff81 78290464
    80090014 5400019e 7c0000d0 78000fe0 <0b000000> 4800000c 7c210b78 7c421378
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 151a475dab0a3fd7581065a3345dd58037afe69b
Author: Hans-Christian Egtvedt <egtvedt@samfundet.no>
Date:   Mon May 13 22:22:10 2013 +0200

    avr32: fix relocation check for signed 18-bit offset
    
    commit e68c636d88db3fda74e664ecb1a213ae0d50a7d8 upstream.
    
    Caught by static code analysis by David.
    
    Reported-by: David Binderman <dcb314@hotmail.com>
    Signed-off-by: Hans-Christian Egtvedt <egtvedt@samfundet.no>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 834605405a206ad927ca0056c15c70fd73820e46
Author: Martin Michlmayr <tbm@cyrius.com>
Date:   Sun Apr 21 17:14:00 2013 +0100

    Kirkwood: Enable PCIe port 1 on QNAP TS-11x/TS-21x
    
    commit 99e11334dcb846f9b76fb808196c7f47aa83abb3 upstream.
    
    Enable KW_PCIE1 on QNAP TS-11x/TS-21x devices as newer revisions
    (rev 1.3) have a USB 3.0 chip from Etron on PCIe port 1.  Thanks
    to Marek Vasut for identifying this issue!
    
    Signed-off-by: Martin Michlmayr <tbm@cyrius.com>
    Tested-by: Marek Vasut <marex@denx.de>
    Acked-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Jason Cooper <jason@lakedaemon.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2a4485a4e6cbd373d368ac2c89fe31493123803c
Author: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
Date:   Mon May 13 14:01:43 2013 +0800

    hwmon: fix error return code in abituguru_probe()
    
    commit ecacb0b17c08fae89f65468727f0e4b8e91da4e1 upstream.
    
    Fix to return a negative error code from the error handling
    case instead of 0, as done elsewhere in this function.
    
    Signed-off-by: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 55c7a9407cd751b0ea746ea5563c29831285d84a
Author: Hema Prathaban <hemaklnce@gmail.com>
Date:   Sat May 11 22:39:47 2013 +0530

    staging: vt6656: use free_netdev instead of kfree
    
    commit 0a438d5b381e2bdfd5e02d653bf46fcc878356e3 upstream.
    
    use free_netdev() instead of kfree(pDevice->apdev)
    
    Signed-off-by: Hema Prathaban <hemaklnce@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 05172d75318ab9c583895576acb24c62382f60fe
Author: Kees Cook <keescook@chromium.org>
Date:   Sun May 12 22:00:51 2013 -0700

    drm/radeon: check incoming cliprects pointer
    
    commit fefaedcfb82d2e57c2320acf60604ab03b750cc0 upstream.
    
    The "boxes" parameter points into userspace memory. It should be verified
    like any other operation against user memory.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 694da87f929f867afe14efcc5683bc652dca4da8
Author: Lan Tianyu <tianyu.lan@intel.com>
Date:   Mon May 6 03:23:40 2013 +0000

    ACPI / EC: Restart transaction even when the IBF flag set
    
    commit 28fe5c825f8e15744d04c7c1b8df197950923ecd upstream.
    
    The EC driver works abnormally with IBF flag always set.
    IBF means "The host has written a byte of data to the command
    or data port, but the embedded controller has not yet read it".
    If IBF is set in the EC status and not cleared, this will cause
    all subsequent EC requests to fail with a timeout error.
    
    Change the EC driver so that it doesn't refuse to restart a
    transaction if IBF is set in the status.  Also increase the
    number of transaction restarts to 5, as it turns out that 2
    is not sufficient in some cases.
    
    This bug happens on several different machines (Asus V1S,
    Dell Latitude E6530, Samsung R719, Acer Aspire 5930G,
    Sony Vaio SR19VN and others).
    
    [rjw: Changelog]
    References: https://bugzilla.kernel.org/show_bug.cgi?id=14733
    References: https://bugzilla.kernel.org/show_bug.cgi?id=15560
    References: https://bugzilla.kernel.org/show_bug.cgi?id=15946
    References: https://bugzilla.kernel.org/show_bug.cgi?id=42945
    References: https://bugzilla.kernel.org/show_bug.cgi?id=48221
    Signed-off-by: Lan Tianyu <tianyu.lan@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d9202d65aa6b0378fd833a5098e4dcb855d38f44
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri May 3 15:02:50 2013 +0200

    tick: Cleanup NOHZ per cpu data on cpu down
    
    commit 4b0c0f294f60abcdd20994a8341a95c8ac5eeb96 upstream.
    
    Prarit reported a crash on CPU offline/online. The reason is that on
    CPU down the NOHZ related per cpu data of the dead cpu is not cleaned
    up. If at cpu online an interrupt happens before the per cpu tick
    device is registered the irq_enter() check potentially sees stale data
    and dereferences a NULL pointer.
    
    Cleanup the data after the cpu is dead.
    
    Reported-by: Prarit Bhargava <prarit@redhat.com>
    Cc: Mike Galbraith <bitbucket@online.de>
    Link: http://lkml.kernel.org/r/alpine.LFD.2.02.1305031451561.2886@ionos
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4725f1715429f75fa5f053dbe05575d08aeb5967
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Fri May 10 14:37:15 2013 +0100

    dm bufio: avoid a possible __vmalloc deadlock
    
    commit 502624bdad3dba45dfaacaf36b7d83e39e74b2d2 upstream.
    
    This patch uses memalloc_noio_save to avoid a possible deadlock in
    dm-bufio.  (it could happen only with large block size, at most
    PAGE_SIZE << MAX_ORDER (typically 8MiB).
    
    __vmalloc doesn't fully respect gfp flags. The specified gfp flags are
    used for allocation of requested pages, structures vmap_area, vmap_block
    and vm_struct and the radix tree nodes.
    
    However, the kernel pagetables are allocated always with GFP_KERNEL.
    Thus the allocation of pagetables can recurse back to the I/O layer and
    cause a deadlock.
    
    This patch uses the function memalloc_noio_save to set per-process
    PF_MEMALLOC_NOIO flag and the function memalloc_noio_restore to restore
    it. When this flag is set, all allocations in the process are done with
    implied GFP_NOIO flag, thus the deadlock can't happen.
    
    This should be backported to stable kernels, but they don't have the
    PF_MEMALLOC_NOIO flag and memalloc_noio_save/memalloc_noio_restore
    functions. So, PF_MEMALLOC should be set and restored instead.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Alasdair G Kergon <agk@redhat.com>
    [bwh: Backported to 3.2 as recommended]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7dbae28560d16704190ba198fb7b5a070f49427c
Author: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
Date:   Fri May 10 14:37:15 2013 +0100

    dm snapshot: fix error return code in snapshot_ctr
    
    commit 09e8b813897a0f85bb401435d009228644c81214 upstream.
    
    Return -ENOMEM instead of success if unable to allocate pending
    exception mempool in snapshot_ctr.
    
    Signed-off-by: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
    Signed-off-by: Alasdair G Kergon <agk@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6911aeee972aecf791394c1ab668804d6cad066f
Author: Gleb Natapov <gleb@redhat.com>
Date:   Wed May 8 18:38:44 2013 +0300

    KVM: VMX: fix halt emulation while emulating invalid guest sate
    
    commit 8d76c49e9ffeee839bc0b7a3278a23f99101263e upstream.
    
    The invalid guest state emulation loop does not check halt_request
    which causes 100% cpu loop while guest is in halt and in invalid
    state, but more serious issue is that this leaves halt_request set, so
    random instruction emulated by vm86 #GP exit can be interpreted
    as halt which causes guest hang. Fix both problems by handling
    halt_request in emulation loop.
    
    Reported-by: Tomas Papan <tomas.papan@gmail.com>
    Tested-by: Tomas Papan <tomas.papan@gmail.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Gleb Natapov <gleb@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3975dfc85a3579e5a4c549ebd5ab9b0862061fa6
Author: Shuah Khan <shuah@kernel.org>
Date:   Sat Mar 9 11:39:22 2013 -0700

    hp_accel: Ignore the error from lis3lv02d_poweron() at resume
    
    commit 7783819920ca52fc582a2782f654fe6ed373f465 upstream.
    
    The error in lis3lv02_poweron() is harmless in the resume path, so
    we should ignore it. It is inline with the other usages of lis3lv02_poweron()
    and matches the 3.0 code for this routine. This patch is in suse git and
    might have missed making it into the mainline.
    opensuse - commit id: 66ccdac87c322cf7af12bddba8c805af640b1cff
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Shuah Khan <shuah.khan@hp.com>
    Signed-off-by: Matthew Garrett <matthew.garrett@nebula.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8ac645ff787751eb2d5a80abd7338a4fb838c3a0
Author: Jeff Layton <jlayton@kernel.org>
Date:   Tue May 7 11:28:31 2013 -0400

    cifs: only set ops for inodes in I_NEW state
    
    commit c2b93e0699723700f886ce17bb65ffd771195a6d upstream.
    
    It's generally not safe to reset the inode ops once they've been set. In
    the case where the inode was originally thought to be a directory and
    then later found to be a DFS referral, this can lead to an oops when we
    try to trigger an inode op on it after changing the ops to the blank
    referral operations.
    
    Reported-and-Tested-by: Sachin Prabhu <sprabhu@redhat.com>
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c9936e44f19870fcea6835e127a4181005ef06ae
Author: Daniel Drake <dsd@laptop.org>
Date:   Wed May 8 15:37:19 2013 -0400

    mwifiex: fix setting of multicast filter
    
    commit ccd384b10420ac81ba3fb9b0a7d18272c7173552 upstream.
    
    A small bug in this code was causing the ALLMULTI filter to be set
    when in fact we were just wanting to program a selective multicast list
    to the hardware.
    
    Fix that bug and remove a redundant if condition in the code that
    follows.
    
    This fixes wakeup behaviour when multicast WOL is enabled. Previously,
    all multicast packets would wake up the system. Now, only those that the
    host intended to receive trigger wakeups.
    
    Signed-off-by: Daniel Drake <dsd@laptop.org>
    Acked-by: Bing Zhao <bzhao@marvell.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dc9c65a5bdf489b3227b3e5739025785685c0c33
Author: Amitkumar Karwar <akarwar@marvell.com>
Date:   Mon May 6 19:46:54 2013 -0700

    mwifiex: fix memory leak issue when driver unload
    
    commit f16fdc9d2dc1e5b270e9a08377587e831e0d36ac upstream.
    
    After unregister_netdevice() call the request is queued and
    reg_state is changed to NETREG_UNREGISTERING.
    As we check for NETREG_UNREGISTERED state, free_netdev() never
    gets executed causing memory leak.
    
    Initialize "dev->destructor" to free_netdev() to free device
    data after unregistration.
    
    Reported-by: Daniel Drake <dsd@laptop.org>
    Tested-by: Daniel Drake <dsd@laptop.org>
    Signed-off-by: Amitkumar Karwar <akarwar@marvell.com>
    Signed-off-by: Bing Zhao <bzhao@marvell.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    [bwh: Backported to 3.2: s/wdev->netdev/dev/]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e6fad3e139b0b4e1b25aea977bd742f15d3bfb1a
Author: Bing Zhao <bzhao@marvell.com>
Date:   Mon May 6 19:46:53 2013 -0700

    mwifiex: clear is_suspended flag when interrupt is received early
    
    commit 48795424acff7215d5eac0b52793a2c1eb3a6283 upstream.
    
    When the XO-4 with 8787 wireless is woken up due to wake-on-WLAN
    mwifiex is often flooded with "not allowed while suspended" messages
    and the interface is unusable.
    
    [  202.171609] int: sdio_ireg = 0x1
    [  202.180700] info: mwifiex_process_hs_config: auto cancelling host
                   sleep since there is interrupt from the firmware
    [  202.201880] event: wakeup device...
    [  202.211452] event: hs_deactivated
    [  202.514638] info: --- Rx: Data packet ---
    [  202.514753] data: 4294957544 BSS(0-0): Data <= kernel
    [  202.514825] PREP_CMD: device in suspended state
    [  202.514839] data: dequeuing the packet ec7248c0 ec4869c0
    [  202.514886] mwifiex_write_data_sync: not allowed while suspended
    [  202.514886] host_to_card, write iomem (1) failed: -1
    [  202.514917] mwifiex_write_data_sync: not allowed while suspended
    [  202.514936] host_to_card, write iomem (2) failed: -1
    [  202.514949] mwifiex_write_data_sync: not allowed while suspended
    [  202.514965] host_to_card, write iomem (3) failed: -1
    [  202.514976] mwifiex_write_data_async failed: 0xFFFFFFFF
    
    This can be readily reproduced when putting the XO-4 in a loop where
    it goes to sleep due to inactivity, but then wakes up due to an
    incoming ping. The error is hit within an hour or two.
    
    This issue happens when an interrupt comes in early while host sleep
    is still activated. Driver handles this case by auto cancelling host
    sleep. However is_suspended flag is still set which prevents any cmd
    or data from being sent to firmware. Fix it by clearing is_suspended
    flag in this path.
    
    Reported-by: Daniel Drake <dsd@laptop.org>
    Tested-by: Daniel Drake <dsd@laptop.org>
    Signed-off-by: Bing Zhao <bzhao@marvell.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fc6320b1a675001ac9599bf82aeba59f47deba6d
Author: Thommy Jakobsson <thommyj@gmail.com>
Date:   Tue Apr 23 21:45:11 2013 +0200

    B43: Handle DMA RX descriptor underrun
    
    commit 73b82bf0bfbf58e6ff328d3726934370585f6e78 upstream.
    
    Add handling of rx descriptor underflow. This fixes a fault that could
    happen on slow machines, where data is received faster than the CPU can
    handle. In such a case the device will use up all rx descriptors and
    refuse to send any more data before confirming that it is ok. This
    patch enables necessary interrupt to discover such a situation and will
    handle them by dropping everything in the ring buffer.
    
    Reviewed-by: Michael Buesch <m@bues.ch>
    Signed-off-by: Thommy Jakobsson <thommyj@gmail.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 43d5219bffe5fe4b4e8c37959d4a9b37856af59f
Author: Bob Moore <robert.moore@intel.com>
Date:   Wed May 8 04:01:15 2013 +0000

    ACPICA: Fix possible buffer overflow during a field unit read operation
    
    commit 61388f9e5d93053cf399a356414f31f9b4814c6d upstream.
    
    Can only happen under these conditions: 1) The DSDT version is 1,
    meaning integers are 32-bits.  2) The field is between 33 and 64
    bits long.
    
    It applies cleanly back to ACPICA 20100806+ (Linux v2.6.37+).
    
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 414ab9225762097a2ba0aedbc29802fc176f63e4
Author: Shlomo Pongratz <shlomop@mellanox.com>
Date:   Sun May 5 17:36:26 2013 +0300

    iscsi-target: Fix processing of OOO commands
    
    commit 3eccfdb01da58fbd0f789ae6ca61cee3769e26de upstream.
    
    Fix two issues in OOO commands processing done at iscsit_attach_ooo_cmdsn.
    
    Handle command serial numbers wrap around by using iscsi_sna_lt and not regular comparisson.
    
    The routine iterates until it finds an entry whose serial number is greater than the serial number of
    the new one, thus the new entry should be inserted before that entry and not after.
    
    Signed-off-by: Shlomo Pongratz <shlomop@mellanox.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fcc6acda6626851e42aa3c74d9b8d3dfe49d87d1
Author: Wang YanQing <udknight@gmail.com>
Date:   Tue May 7 11:27:33 2013 +0800

    ALSA: HDA: Fix Oops caused by dereference NULL pointer
    
    commit 2195b063f6609e4c6268f291683902f25eaf9aa6 upstream.
    
    The interrupt handler azx_interrupt will call azx_update_rirb,
    which may call snd_hda_queue_unsol_event, snd_hda_queue_unsol_event
    will dereference chip->bus pointer.
    
    The problem is we alloc chip->bus in azx_codec_create
    which will be called after we enable IRQ and enable unsolicited
    event in azx_probe.
    
    This will cause Oops due dereference NULL pointer. I meet it, good luck:)
    
    [Rearranged the NULL check before the tracepoint and added another
     NULL check of bus->workq -- tiwai]
    
    Signed-off-by: Wang YanQing <udknight@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9670f6d8280fa5be96c38e7f8415c70eafd511c7
Author: David Jeffery <djeffery@redhat.com>
Date:   Mon May 6 13:49:30 2013 +0800

    autofs - remove autofs dentry mount check
    
    commit ce8a5dbdf9e709bdaf4618d7ef8cceb91e8adc69 upstream.
    
    When checking if an autofs mount point is busy it isn't sufficient to
    only check if it's a mount point.
    
    For example, if the mount of an offset mountpoint in a tree is denied
    for this host by its export and the dentry becomes a process working
    directory the check incorrectly returns the mount as not in use at
    expire.
    
    This can happen since the default when mounting within a tree is
    nostrict, which means ingnore mount fails on mounts within the tree and
    continue.  The nostrict option is meant to allow mounting in this case.
    
    Signed-off-by: David Jeffery <djeffery@redhat.com>
    Signed-off-by: Ian Kent <raven@themaw.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 289ca1f20ef7f965b4e34a2644800ee6b95f8cab
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Sun May 5 09:30:09 2013 -0400

    xen/vcpu/pvhvm: Fix vcpu hotplugging hanging.
    
    commit 7f1fc268c47491fd5e63548f6415fc8604e13003 upstream.
    
    If a user did:
    
            echo 0 > /sys/devices/system/cpu/cpu1/online
            echo 1 > /sys/devices/system/cpu/cpu1/online
    
    we would (this a build with DEBUG enabled) get to:
    smpboot: ++++++++++++++++++++=_---CPU UP  1
    .. snip..
    smpboot: Stack at about ffff880074c0ff44
    smpboot: CPU1: has booted.
    
    and hang. The RCU mechanism would kick in an try to IPI the CPU1
    but the IPIs (and all other interrupts) would never arrive at the
    CPU1. At first glance at least. A bit digging in the hypervisor
    trace shows that (using xenanalyze):
    
    [vla] d4v1 vec 243 injecting
       0.043163027 --|x d4v1 intr_window vec 243 src 5(vector) intr f3
    ]  0.043163639 --|x d4v1 vmentry cycles 1468
    ]  0.043164913 --|x d4v1 vmexit exit_reason PENDING_INTERRUPT eip ffffffff81673254
       0.043164913 --|x d4v1 inj_virq vec 243  real
      [vla] d4v1 vec 243 injecting
       0.043164913 --|x d4v1 intr_window vec 243 src 5(vector) intr f3
    ]  0.043165526 --|x d4v1 vmentry cycles 1472
    ]  0.043166800 --|x d4v1 vmexit exit_reason PENDING_INTERRUPT eip ffffffff81673254
       0.043166800 --|x d4v1 inj_virq vec 243  real
      [vla] d4v1 vec 243 injecting
    
    there is a pending event (subsequent debugging shows it is the IPI
    from the VCPU0 when smpboot.c on VCPU1 has done
    "set_cpu_online(smp_processor_id(), true)") and the guest VCPU1 is
    interrupted with the callback IPI (0xf3 aka 243) which ends up calling
    __xen_evtchn_do_upcall.
    
    The __xen_evtchn_do_upcall seems to do *something* but not acknowledge
    the pending events. And the moment the guest does a 'cli' (that is the
    ffffffff81673254 in the log above) the hypervisor is invoked again to
    inject the IPI (0xf3) to tell the guest it has pending interrupts.
    This repeats itself forever.
    
    The culprit was the per_cpu(xen_vcpu, cpu) pointer. At the bootup
    we set each per_cpu(xen_vcpu, cpu) to point to the
    shared_info->vcpu_info[vcpu] but later on use the VCPUOP_register_vcpu_info
    to register per-CPU  structures (xen_vcpu_setup).
    This is used to allow events for more than 32 VCPUs and for performance
    optimizations reasons.
    
    When the user performs the VCPU hotplug we end up calling the
    the xen_vcpu_setup once more. We make the hypercall which returns
    -EINVAL as it does not allow multiple registration calls (and
    already has re-assigned where the events are being set). We pick
    the fallback case and set per_cpu(xen_vcpu, cpu) to point to the
    shared_info->vcpu_info[vcpu] (which is a good fallback during bootup).
    However the hypervisor is still setting events in the register
    per-cpu structure (per_cpu(xen_vcpu_info, cpu)).
    
    As such when the events are set by the hypervisor (such as timer one),
    and when we iterate in __xen_evtchn_do_upcall we end up reading stale
    events from the shared_info->vcpu_info[vcpu] instead of the
    per_cpu(xen_vcpu_info, cpu) structures. Hence we never acknowledge the
    events that the hypervisor has set and the hypervisor keeps on reminding
    us to ack the events which we never do.
    
    The fix is simple. Don't on the second time when xen_vcpu_setup is
    called over-write the per_cpu(xen_vcpu, cpu) if it points to
    per_cpu(xen_vcpu_info).
    
    Acked-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f75ef16606bcde8f506b18ddf674bf7e78f99e27
Author: Lachlan McIlroy <lmcilroy@redhat.com>
Date:   Sun May 5 23:10:00 2013 -0400

    ext4: limit group search loop for non-extent files
    
    commit e6155736ad76b2070652745f9e54cdea3f0d8567 upstream.
    
    In the case where we are allocating for a non-extent file,
    we must limit the groups we allocate from to those below
    2^32 blocks, and ext4_mb_regular_allocator() attempts to
    do this initially by putting a cap on ngroups for the
    subsequent search loop.
    
    However, the initial target group comes in from the
    allocation context (ac), and it may already be beyond
    the artificially limited ngroups.  In this case,
    the limit
    
            if (group == ngroups)
                    group = 0;
    
    at the top of the loop is never true, and the loop will
    run away.
    
    Catch this case inside the loop and reset the search to
    start at group 0.
    
    [sandeen@redhat.com: add commit msg & comments]
    
    Signed-off-by: Lachlan McIlroy <lmcilroy@redhat.com>
    Signed-off-by: Eric Sandeen <sandeen@redhat.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9628e65da399acd8b5301b5981f127d9e99ab45a
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri May 3 17:19:01 2013 +0000

    net/eth/ibmveth: Fixup retrieval of MAC address
    
    commit 13f85203e1060da83d9ec1c1c5a63343eaab8de4 upstream.
    
    Some ancient pHyp versions used to create a 8 bytes local-mac-address
    property in the device-tree instead of a 6 bytes one for veth.
    
    The Linux driver code to deal with that is an insane hack which also
    happens to break with some choices of MAC addresses in qemu by testing
    for a bit in the address rather than just looking at the size of the
    property.
    
    Sanitize this by doing the latter instead.
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 26bdeae55b558d983d7c6033200eac14f52f063d
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Fri May 3 16:09:09 2013 -0400

    nfsd4: don't allow owner override on 4.1 CLAIM_FH opens
    
    commit 9f415eb25574db4b73a9a712a4438e41dc284922 upstream.
    
    The Linux client is using CLAIM_FH to implement regular opens, not just
    recovery cases, so it depends on the server to check permissions
    correctly.
    
    Therefore the owner override, which may make sense in the delegation
    recovery case, isn't right in the CLAIM_FH case.
    
    Symptoms: on a client with 49f9a0fafd844c32f2abada047c0b9a5ba0d6255
    "NFSv4.1: Enable open-by-filehandle", Bryan noticed this:
    
            touch test.txt
            chmod 000 test.txt
            echo test > test.txt
    
    succeeding.
    
    Reported-by: Bryan Schumaker <bjschuma@netapp.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8e590dc654420b9aa0172b6a3ff64a7675927672
Author: Felix Fietkau <nbd@openwrt.org>
Date:   Sat Apr 27 11:47:01 2013 +0200

    ath9k: fix key allocation error handling for powersave keys
    
    commit 4ef69d0394cba8caa9f75d3f2e53429bfb8b3045 upstream.
    
    If no keycache slots are available, ath_key_config can return -ENOSPC.
    If the key index is not checked for errors, it can lead to logspam that
    looks like this: "ath: wiphy0: keyreset: keycache entry 228 out of range"
    This can cause follow-up errors if the invalid keycache index gets
    used for tx.
    
    Signed-off-by: Felix Fietkau <nbd@openwrt.org>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a71745129b6be9de9cca1b716df15f5ce817d49e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Apr 30 10:24:41 2013 +0300

    ASoC: wm8994: missing break in wm8994_aif3_hw_params()
    
    commit 4495e46fe18f198366961bb2b324a694ef8a9b44 upstream.
    
    The missing break here means that we always return early and the
    function is a no-op.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mark Brown <broonie@opensource.wolfsonmicro.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 54d6a8acaa54f4292ed6ffb62eda5a3bdeecee06
Author: Li Fei <fei.li@intel.com>
Date:   Fri Apr 26 20:50:11 2013 +0800

    x86: Eliminate irq_mis_count counted in arch_irq_stat
    
    commit f7b0e1055574ce06ab53391263b4e205bf38daf3 upstream.
    
    With the current implementation, kstat_cpu(cpu).irqs_sum is also
    increased in case of irq_mis_count increment.
    
    So there is no need to count irq_mis_count in arch_irq_stat,
    otherwise irq_mis_count will be counted twice in the sum of
    /proc/stat.
    
    Reported-by: Liu Chuansheng <chuansheng.liu@intel.com>
    Signed-off-by: Li Fei <fei.li@intel.com>
    Acked-by: Liu Chuansheng <chuansheng.liu@intel.com>
    Cc: tomoki.sekiyama.qu@hitachi.com
    Cc: joe@perches.com
    Link: http://lkml.kernel.org/r/1366980611.32469.7.camel@fli24-HP-Compaq-8100-Elite-CMT-PC
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3c6fc3ed92a2614f0027a778a3598764ace0bb11
Author: Terry Barnaby <terry@beam.ltd.uk>
Date:   Mon Apr 8 12:05:47 2013 -0400

    mmc: atmel-mci: pio hang on block errors
    
    commit bdbc5d0c60f3e9de3eeccf1c1a18bdc11dca62cc upstream.
    
    The driver is doing, by default, multi-block reads. When a block error
    occurs, card/block.c instigates a single block read: "mmcblk0: retrying
    using single block read".  It leaves the sg chain intact and just changes
    the length attribute for the first sg entry and the overall sg_len
    parameter.  When atmci_read_data_pio is called to read the single block
    of data it ignores the sg_len and expects to read more than 512 bytes as
    it sees there are multiple items in the sg list. No more data comes as
    the controller has only been commanded to get one block.
    
    Signed-off-by: Terry Barnaby <terry@beam.ltd.uk>
    Acked-by: Ludovic Desroches <ludovic.desroches@atmel.com>
    Signed-off-by: Chris Ball <cjb@laptop.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit df5ef181b7b1c6e14a53935b90e43a92df9abaf2
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Tue Feb 19 11:51:22 2013 +0100

    mfd: adp5520: Restore mode bits on resume
    
    commit c6cc25fda58da8685ecef3f179adc7b99c8253b2 upstream.
    
    The adp5520 unfortunately also clears the BL_EN bit when the nSTNDBY bit is
    cleared. So we need to make sure to restore it during resume if it was set
    before suspend.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9126ab0cea7cde9180ed18c72997cadff18f6213
Author: Philip Rakity <prakity@yahoo.com>
Date:   Thu Apr 4 20:18:11 2013 +0100

    mmc: core: Fix bit width test failing on old eMMC cards
    
    commit 836dc2fe89c968c10cada87e0dfae6626f8f9da3 upstream.
    
    PARTITION_SUPPORT needs to be set before doing the compare on version
    number so the bit width test does not get invalid data.  Before this
    patch, a Sandisk iNAND eMMC card would detect 1-bit width although
    the hardware supports 4-bit.
    
    Only affects old emmc devices - pre 4.4 devices.
    
    Reported-by: Elad Yi <elad.yi@gmail.com>
    Signed-off-by: Philip Rakity <prakity@yahoo.com>
    Signed-off-by: Chris Ball <cjb@laptop.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 29878cdb099a4703b884aa1e0354fedff9766133
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Mar 13 17:11:59 2013 +0100

    mmc: at91/avr32/atmel-mci: fix DMA-channel leak on module unload
    
    commit 91cf54feecf815bec0b6a8d6d9dbd0e219f2f2cc upstream.
    
    Fix regression introduced by commit 796211b7953 ("mmc: atmel-mci: add
    pdc support and runtime capabilities detection") which removed the need
    for CONFIG_MMC_ATMELMCI_DMA but kept the Kconfig-entry as well as the
    compile guards around dma_release_channel() in remove(). Consequently,
    DMA is always enabled (if supported), but the DMA-channel is not
    released on module unload unless the DMA-config option is selected.
    
    Remove the no longer used CONFIG_MMC_ATMELMCI_DMA option completely.
    
    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@atmel.com>
    Signed-off-by: Chris Ball <cjb@laptop.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a331e84de8c7f69cf484fcc47713893668e2edeb
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sun May 19 01:13:29 2013 +0100

    Revert "drm/i915: Fix detection of base of stolen memory"
    
    This reverts commit 53e587aa5ca81497d0ea6e340320ec5778d1f311.
    Yves-Alexis Perez reported that it broke the driver on two machines
    with GMA4500 and i965 chips.  Only the backported version in 3.2.45
    had this effect; the fix in mainline is fine.
    
    Daniel Vetter stated that the fix is not needed in 3.2 anyway.
    
    Reported-by: Yves-Alexis Perez <corsac@debian.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
