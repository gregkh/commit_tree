commit 4231b6a98fceb1589f13e886c26130d2fd4e3901
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Dec 16 10:33:57 2017 +0100

    Linux 4.4.106

commit 5c6db4afbd9f951674777d040d60dfffc831ee67
Author: Vincent Pelletier <plr.vincent@gmail.com>
Date:   Sun Nov 26 06:52:53 2017 +0000

    usb: gadget: ffs: Forbid usb_ep_alloc_request from sleeping
    
    commit 30bf90ccdec1da9c8198b161ecbff39ce4e5a9ba upstream.
    
    Found using DEBUG_ATOMIC_SLEEP while submitting an AIO read operation:
    
    [  100.853642] BUG: sleeping function called from invalid context at mm/slab.h:421
    [  100.861148] in_atomic(): 1, irqs_disabled(): 1, pid: 1880, name: python
    [  100.867954] 2 locks held by python/1880:
    [  100.867961]  #0:  (&epfile->mutex){....}, at: [<f8188627>] ffs_mutex_lock+0x27/0x30 [usb_f_fs]
    [  100.868020]  #1:  (&(&ffs->eps_lock)->rlock){....}, at: [<f818ad4b>] ffs_epfile_io.isra.17+0x24b/0x590 [usb_f_fs]
    [  100.868076] CPU: 1 PID: 1880 Comm: python Not tainted 4.14.0-edison+ #118
    [  100.868085] Hardware name: Intel Corporation Merrifield/BODEGA BAY, BIOS 542 2015.01.21:18.19.48
    [  100.868093] Call Trace:
    [  100.868122]  dump_stack+0x47/0x62
    [  100.868156]  ___might_sleep+0xfd/0x110
    [  100.868182]  __might_sleep+0x68/0x70
    [  100.868217]  kmem_cache_alloc_trace+0x4b/0x200
    [  100.868248]  ? dwc3_gadget_ep_alloc_request+0x24/0xe0 [dwc3]
    [  100.868302]  dwc3_gadget_ep_alloc_request+0x24/0xe0 [dwc3]
    [  100.868343]  usb_ep_alloc_request+0x16/0xc0 [udc_core]
    [  100.868386]  ffs_epfile_io.isra.17+0x444/0x590 [usb_f_fs]
    [  100.868424]  ? _raw_spin_unlock_irqrestore+0x27/0x40
    [  100.868457]  ? kiocb_set_cancel_fn+0x57/0x60
    [  100.868477]  ? ffs_ep0_poll+0xc0/0xc0 [usb_f_fs]
    [  100.868512]  ffs_epfile_read_iter+0xfe/0x157 [usb_f_fs]
    [  100.868551]  ? security_file_permission+0x9c/0xd0
    [  100.868587]  ? rw_verify_area+0xac/0x120
    [  100.868633]  aio_read+0x9d/0x100
    [  100.868692]  ? __fget+0xa2/0xd0
    [  100.868727]  ? __might_sleep+0x68/0x70
    [  100.868763]  SyS_io_submit+0x471/0x680
    [  100.868878]  do_int80_syscall_32+0x4e/0xd0
    [  100.868921]  entry_INT80_32+0x2a/0x2a
    [  100.868932] EIP: 0xb7fbb676
    [  100.868941] EFLAGS: 00000292 CPU: 1
    [  100.868951] EAX: ffffffda EBX: b7aa2000 ECX: 00000002 EDX: b7af8368
    [  100.868961] ESI: b7fbb660 EDI: b7aab000 EBP: bfb6c658 ESP: bfb6c638
    [  100.868973]  DS: 007b ES: 007b FS: 0000 GS: 0033 SS: 007b
    
    Signed-off-by: Vincent Pelletier <plr.vincent@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Siqi Lin <siqilin@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5fa9efe4e019e1f8f213142836c84f010cc4faf
Author: Marc Zyngier <maz@kernel.org>
Date:   Thu Nov 16 17:58:21 2017 +0000

    arm: KVM: Fix VTTBR_BADDR_MASK BUG_ON off-by-one
    
    commit 5553b142be11e794ebc0805950b2e8313f93d718 upstream.
    
    VTTBR_BADDR_MASK is used to sanity check the size and alignment of the
    VTTBR address. It seems to currently be off by one, thereby only
    allowing up to 39-bit addresses (instead of 40-bit) and also
    insufficiently checking the alignment. This patch fixes it.
    
    This patch is the 32bit pendent of Kristina's arm64 fix, and
    she deserves the actual kudos for pinpointing that one.
    
    Fixes: f7ed45be3ba52 ("KVM: ARM: World-switch implementation")
    Cc: <stable@vger.kernel.org> # 3.9
    Reported-by: Kristina Martsenko <kristina.martsenko@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f5a8d610dd38c9b8e4c227f0c92cfaebe0ef135
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Dec 14 21:25:00 2017 +0100

    Revert "x86/mm/pat: Ensure cpa->pfn only contains page frame numbers"
    
    This reverts commit 87e2bd898d3a79a8c609f183180adac47879a2a4 which is
    commit edc3b9129cecd0f0857112136f5b8b1bc1d45918 upstream.
    
    Turns there was too many other issues with this patch to make it viable
    for the stable tree.
    
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Jones <davej@codemonkey.org.uk>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
    Cc: Stephen Smalley <sds@tycho.nsa.gov>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Toshi Kani <toshi.kani@hp.com>
    Cc: linux-efi@vger.kernel.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: "Ghannam, Yazen" <Yazen.Ghannam@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34933c2ce99cabb549efe5d444136ecbe7dcba85
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Dec 14 21:23:48 2017 +0100

    Revert "x86/efi: Hoist page table switching code into efi_call_virt()"
    
    This reverts commit b73adb60852034d84092d123b323196ca42529cd which is
    commit c9f2a9a65e4855b74d92cdad688f6ee4a1a323ff upstream.
    
    Turns there was too many other issues with this patch to make it viable
    for the stable tree.
    
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Jones <davej@codemonkey.org.uk>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
    Cc: Stephen Smalley <sds@tycho.nsa.gov>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Toshi Kani <toshi.kani@hp.com>
    Cc: linux-efi@vger.kernel.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: "Ghannam, Yazen" <Yazen.Ghannam@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dfe268df584969351cce0edc945d2586ebc9b9f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Dec 14 21:21:50 2017 +0100

    Revert "x86/efi: Build our own page table structures"
    
    This reverts commit 36e0f05afd4e1d09fd47936761a502aedbc50649 which is
    commit 67a9108ed4313b85a9c53406d80dc1ae3f8c3e36 upstream.
    
    Turns there was too many other issues with this patch to make it viable
    for the stable tree.
    
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Jones <davej@codemonkey.org.uk>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
    Cc: Stephen Smalley <sds@tycho.nsa.gov>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Toshi Kani <toshi.kani@hp.com>
    Cc: linux-efi@vger.kernel.org
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: "Ghannam, Yazen" <Yazen.Ghannam@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b90f87c641bc9af04f0d8a21008880ae032de72c
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Nov 28 08:03:30 2017 -0800

    net/packet: fix a race in packet_bind() and packet_notifier()
    
    
    [ Upstream commit 15fe076edea787807a7cdc168df832544b58eba6 ]
    
    syzbot reported crashes [1] and provided a C repro easing bug hunting.
    
    When/if packet_do_bind() calls __unregister_prot_hook() and releases
    po->bind_lock, another thread can run packet_notifier() and process an
    NETDEV_UP event.
    
    This calls register_prot_hook() and hooks again the socket right before
    first thread is able to grab again po->bind_lock.
    
    Fixes this issue by temporarily setting po->num to 0, as suggested by
    David Miller.
    
    [1]
    dev_remove_pack: ffff8801bf16fa80 not found
    ------------[ cut here ]------------
    kernel BUG at net/core/dev.c:7945!  ( BUG_ON(!list_empty(&dev->ptype_all)); )
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Modules linked in:
    device syz0 entered promiscuous mode
    CPU: 0 PID: 3161 Comm: syzkaller404108 Not tainted 4.14.0+ #190
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    task: ffff8801cc57a500 task.stack: ffff8801cc588000
    RIP: 0010:netdev_run_todo+0x772/0xae0 net/core/dev.c:7945
    RSP: 0018:ffff8801cc58f598 EFLAGS: 00010293
    RAX: ffff8801cc57a500 RBX: dffffc0000000000 RCX: ffffffff841f75b2
    RDX: 0000000000000000 RSI: 1ffff100398b1ede RDI: ffff8801bf1f8810
    device syz0 entered promiscuous mode
    RBP: ffff8801cc58f898 R08: 0000000000000001 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: ffff8801bf1f8cd8
    R13: ffff8801cc58f870 R14: ffff8801bf1f8780 R15: ffff8801cc58f7f0
    FS:  0000000001716880(0000) GS:ffff8801db400000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000020b13000 CR3: 0000000005e25000 CR4: 00000000001406f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     rtnl_unlock+0xe/0x10 net/core/rtnetlink.c:106
     tun_detach drivers/net/tun.c:670 [inline]
     tun_chr_close+0x49/0x60 drivers/net/tun.c:2845
     __fput+0x333/0x7f0 fs/file_table.c:210
     ____fput+0x15/0x20 fs/file_table.c:244
     task_work_run+0x199/0x270 kernel/task_work.c:113
     exit_task_work include/linux/task_work.h:22 [inline]
     do_exit+0x9bb/0x1ae0 kernel/exit.c:865
     do_group_exit+0x149/0x400 kernel/exit.c:968
     SYSC_exit_group kernel/exit.c:979 [inline]
     SyS_exit_group+0x1d/0x20 kernel/exit.c:977
     entry_SYSCALL_64_fastpath+0x1f/0x96
    RIP: 0033:0x44ad19
    
    Fixes: 30f7ea1c2b5f ("packet: race condition in packet_bind")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Francesco Ruggeri <fruggeri@aristanetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f50e9c872cb55179ca630e333848fc1f475d614d
Author: Mike Maloney <maloney@google.com>
Date:   Tue Nov 28 10:44:29 2017 -0500

    packet: fix crash in fanout_demux_rollover()
    
    
    syzkaller found a race condition fanout_demux_rollover() while removing
    a packet socket from a fanout group.
    
    po->rollover is read and operated on during packet_rcv_fanout(), via
    fanout_demux_rollover(), but the pointer is currently cleared before the
    synchronization in packet_release().   It is safer to delay the cleanup
    until after synchronize_net() has been called, ensuring all calls to
    packet_rcv_fanout() for this socket have finished.
    
    To further simplify synchronization around the rollover structure, set
    po->rollover in fanout_add() only if there are no errors.  This removes
    the need for rcu in the struct and in the call to
    packet_getsockopt(..., PACKET_ROLLOVER_STATS, ...).
    
    Crashing stack trace:
     fanout_demux_rollover+0xb6/0x4d0 net/packet/af_packet.c:1392
     packet_rcv_fanout+0x649/0x7c8 net/packet/af_packet.c:1487
     dev_queue_xmit_nit+0x835/0xc10 net/core/dev.c:1953
     xmit_one net/core/dev.c:2975 [inline]
     dev_hard_start_xmit+0x16b/0xac0 net/core/dev.c:2995
     __dev_queue_xmit+0x17a4/0x2050 net/core/dev.c:3476
     dev_queue_xmit+0x17/0x20 net/core/dev.c:3509
     neigh_connected_output+0x489/0x720 net/core/neighbour.c:1379
     neigh_output include/net/neighbour.h:482 [inline]
     ip6_finish_output2+0xad1/0x22a0 net/ipv6/ip6_output.c:120
     ip6_finish_output+0x2f9/0x920 net/ipv6/ip6_output.c:146
     NF_HOOK_COND include/linux/netfilter.h:239 [inline]
     ip6_output+0x1f4/0x850 net/ipv6/ip6_output.c:163
     dst_output include/net/dst.h:459 [inline]
     NF_HOOK.constprop.35+0xff/0x630 include/linux/netfilter.h:250
     mld_sendpack+0x6a8/0xcc0 net/ipv6/mcast.c:1660
     mld_send_initial_cr.part.24+0x103/0x150 net/ipv6/mcast.c:2072
     mld_send_initial_cr net/ipv6/mcast.c:2056 [inline]
     ipv6_mc_dad_complete+0x99/0x130 net/ipv6/mcast.c:2079
     addrconf_dad_completed+0x595/0x970 net/ipv6/addrconf.c:4039
     addrconf_dad_work+0xac9/0x1160 net/ipv6/addrconf.c:3971
     process_one_work+0xbf0/0x1bc0 kernel/workqueue.c:2113
     worker_thread+0x223/0x1990 kernel/workqueue.c:2247
     kthread+0x35e/0x430 kernel/kthread.c:231
     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:432
    
    Fixes: 0648ab70afe6 ("packet: rollover prepare: per-socket state")
    Fixes: 509c7a1ecc860 ("packet: avoid panic in packet_getsockopt()")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Mike Maloney <maloney@google.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6189fa45c6de583172b639c940dc7ac1cb85184
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu Nov 30 10:41:14 2017 +0800

    sit: update frag_off info
    
    
    [ Upstream commit f859b4af1c52493ec21173ccc73d0b60029b5b88 ]
    
    After parsing the sit netlink change info, we forget to update frag_off in
    ipip6_tunnel_update(). Fix it by assigning frag_off with new value.
    
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Acked-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c154d536d9457bee261d057559e43d3f8ae5fd5
Author: Håkon Bugge <Haakon.Bugge@oracle.com>
Date:   Wed Dec 6 17:18:28 2017 +0100

    rds: Fix NULL pointer dereference in __rds_rdma_map
    
    
    [ Upstream commit f3069c6d33f6ae63a1668737bc78aaaa51bff7ca ]
    
    This is a fix for syzkaller719569, where memory registration was
    attempted without any underlying transport being loaded.
    
    Analysis of the case reveals that it is the setsockopt() RDS_GET_MR
    (2) and RDS_GET_MR_FOR_DEST (7) that are vulnerable.
    
    Here is an example stack trace when the bug is hit:
    
    BUG: unable to handle kernel NULL pointer dereference at 00000000000000c0
    IP: __rds_rdma_map+0x36/0x440 [rds]
    PGD 2f93d03067 P4D 2f93d03067 PUD 2f93d02067 PMD 0
    Oops: 0000 [#1] SMP
    Modules linked in: bridge stp llc tun rpcsec_gss_krb5 nfsv4
    dns_resolver nfs fscache rds binfmt_misc sb_edac intel_powerclamp
    coretemp kvm_intel kvm irqbypass crct10dif_pclmul c rc32_pclmul
    ghash_clmulni_intel pcbc aesni_intel crypto_simd glue_helper cryptd
    iTCO_wdt mei_me sg iTCO_vendor_support ipmi_si mei ipmi_devintf nfsd
    shpchp pcspkr i2c_i801 ioatd ma ipmi_msghandler wmi lpc_ich mfd_core
    auth_rpcgss nfs_acl lockd grace sunrpc ip_tables ext4 mbcache jbd2
    mgag200 i2c_algo_bit drm_kms_helper ixgbe syscopyarea ahci sysfillrect
    sysimgblt libahci mdio fb_sys_fops ttm ptp libata sd_mod mlx4_core drm
    crc32c_intel pps_core megaraid_sas i2c_core dca dm_mirror
    dm_region_hash dm_log dm_mod
    CPU: 48 PID: 45787 Comm: repro_set2 Not tainted 4.14.2-3.el7uek.x86_64 #2
    Hardware name: Oracle Corporation ORACLE SERVER X5-2L/ASM,MOBO TRAY,2U, BIOS 31110000 03/03/2017
    task: ffff882f9190db00 task.stack: ffffc9002b994000
    RIP: 0010:__rds_rdma_map+0x36/0x440 [rds]
    RSP: 0018:ffffc9002b997df0 EFLAGS: 00010202
    RAX: 0000000000000000 RBX: ffff882fa2182580 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffffc9002b997e40 RDI: ffff882fa2182580
    RBP: ffffc9002b997e30 R08: 0000000000000000 R09: 0000000000000002
    R10: ffff885fb29e3838 R11: 0000000000000000 R12: ffff882fa2182580
    R13: ffff882fa2182580 R14: 0000000000000002 R15: 0000000020000ffc
    FS:  00007fbffa20b700(0000) GS:ffff882fbfb80000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000000000c0 CR3: 0000002f98a66006 CR4: 00000000001606e0
    Call Trace:
     rds_get_mr+0x56/0x80 [rds]
     rds_setsockopt+0x172/0x340 [rds]
     ? __fget_light+0x25/0x60
     ? __fdget+0x13/0x20
     SyS_setsockopt+0x80/0xe0
     do_syscall_64+0x67/0x1b0
     entry_SYSCALL64_slow_path+0x25/0x25
    RIP: 0033:0x7fbff9b117f9
    RSP: 002b:00007fbffa20aed8 EFLAGS: 00000293 ORIG_RAX: 0000000000000036
    RAX: ffffffffffffffda RBX: 00000000000c84a4 RCX: 00007fbff9b117f9
    RDX: 0000000000000002 RSI: 0000400000000114 RDI: 000000000000109b
    RBP: 00007fbffa20af10 R08: 0000000000000020 R09: 00007fbff9dd7860
    R10: 0000000020000ffc R11: 0000000000000293 R12: 0000000000000000
    R13: 00007fbffa20b9c0 R14: 00007fbffa20b700 R15: 0000000000000021
    
    Code: 41 56 41 55 49 89 fd 41 54 53 48 83 ec 18 8b 87 f0 02 00 00 48
    89 55 d0 48 89 4d c8 85 c0 0f 84 2d 03 00 00 48 8b 87 00 03 00 00 <48>
    83 b8 c0 00 00 00 00 0f 84 25 03 00 0 0 48 8b 06 48 8b 56 08
    
    The fix is to check the existence of an underlying transport in
    __rds_rdma_map().
    
    Signed-off-by: Håkon Bugge <haakon.bugge@oracle.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 827fd89bc552a7ac916707225ca3de1f516d3b9c
Author: Jon Maloy <jon.maloy@ericsson.com>
Date:   Mon Dec 4 22:00:20 2017 +0100

    tipc: fix memory leak in tipc_accept_from_sock()
    
    
    [ Upstream commit a7d5f107b4978e08eeab599ee7449af34d034053 ]
    
    When the function tipc_accept_from_sock() fails to create an instance of
    struct tipc_subscriber it omits to free the already created instance of
    struct tipc_conn instance before it returns.
    
    We fix that with this commit.
    
    Reported-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 047a7bb12d63c41569ce9c9e88f5b231fd1f6cf5
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Sep 23 15:51:23 2017 -0400

    more bio_map_user_iov() leak fixes
    
    commit 2b04e8f6bbb196cab4b232af0f8d48ff2c7a8058 upstream.
    
    we need to take care of failure exit as well - pages already
    in bio should be dropped by analogue of bio_unmap_pages(),
    since their refcounts had been bumped only once per reference
    in bio.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a620404e24a8710a9e0f44b3c826536004c2d92
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Nov 20 12:38:44 2017 +0100

    s390: always save and restore all registers on context switch
    
    commit fbbd7f1a51965b50dd12924841da0d478f3da71b upstream.
    
    The switch_to() macro has an optimization to avoid saving and
    restoring register contents that aren't needed for kernel threads.
    
    There is however the possibility that a kernel thread execve's a user
    space program. In such a case the execve'd process can partially see
    the contents of the previous process, which shouldn't be allowed.
    
    To avoid this, simply always save and restore register contents on
    context switch.
    
    Cc: <stable@vger.kernel.org> # v2.6.37+
    Fixes: fdb6d070effba ("switch_to: dont restore/save access & fpu regs for kernel threads")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99962affcb8fa76baade269adf9de23eb40d53f4
Author: Masamitsu Yamazaki <m-yamazaki@ah.jp.nec.com>
Date:   Wed Nov 15 07:33:14 2017 +0000

    ipmi: Stop timers before cleaning up the module
    
    commit 4f7f5551a760eb0124267be65763008169db7087 upstream.
    
    System may crash after unloading ipmi_si.ko module
    because a timer may remain and fire after the module cleaned up resources.
    
    cleanup_one_si() contains the following processing.
    
            /*
             * Make sure that interrupts, the timer and the thread are
             * stopped and will not run again.
             */
            if (to_clean->irq_cleanup)
                    to_clean->irq_cleanup(to_clean);
            wait_for_timer_and_thread(to_clean);
    
            /*
             * Timeouts are stopped, now make sure the interrupts are off
             * in the BMC.  Note that timers and CPU interrupts are off,
             * so no need for locks.
             */
            while (to_clean->curr_msg || (to_clean->si_state != SI_NORMAL)) {
                    poll(to_clean);
                    schedule_timeout_uninterruptible(1);
            }
    
    si_state changes as following in the while loop calling poll(to_clean).
    
      SI_GETTING_MESSAGES
        => SI_CHECKING_ENABLES
         => SI_SETTING_ENABLES
          => SI_GETTING_EVENTS
           => SI_NORMAL
    
    As written in the code comments above,
    timers are expected to stop before the polling loop and not to run again.
    But the timer is set again in the following process
    when si_state becomes SI_SETTING_ENABLES.
    
      => poll
         => smi_event_handler
           => handle_transaction_done
              // smi_info->si_state == SI_SETTING_ENABLES
             => start_getting_events
               => start_new_msg
                => smi_mod_timer
                  => mod_timer
    
    As a result, before the timer set in start_new_msg() expires,
    the polling loop may see si_state becoming SI_NORMAL
    and the module clean-up finishes.
    
    For example, hard LOCKUP and panic occurred as following.
    smi_timeout was called after smi_event_handler,
    kcs_event and hangs at port_inb()
    trying to access I/O port after release.
    
        [exception RIP: port_inb+19]
        RIP: ffffffffc0473053  RSP: ffff88069fdc3d80  RFLAGS: 00000006
        RAX: ffff8806800f8e00  RBX: ffff880682bd9400  RCX: 0000000000000000
        RDX: 0000000000000ca3  RSI: 0000000000000ca3  RDI: ffff8806800f8e40
        RBP: ffff88069fdc3d80   R8: ffffffff81d86dfc   R9: ffffffff81e36426
        R10: 00000000000509f0  R11: 0000000000100000  R12: 0000000000]:000000
        R13: 0000000000000000  R14: 0000000000000246  R15: ffff8806800f8e00
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0000
     --- <NMI exception stack> ---
    
    To fix the problem I defined a flag, timer_can_start,
    as member of struct smi_info.
    The flag is enabled immediately after initializing the timer
    and disabled immediately before waiting for timer deletion.
    
    Fixes: 0cfec916e86d ("ipmi: Start the timer and thread on internal msgs")
    Signed-off-by: Yamazaki Masamitsu <m-yamazaki@ah.jp.nec.com>
    [Adjusted for recent changes in the driver.]
    [Some fairly major changes went into the IPMI driver in 4.15, so this
     required a backport as the code had changed and moved to a different
     file.  The 4.14 version of this patch moved some code under an
     if statement and there was an API change causing it to not apply to
     4.4-4.6.]
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3495712705844b252ad8f81130a75a7ba1a0a7c
Author: Paul Moore <paul@paul-moore.com>
Date:   Fri Sep 1 09:44:34 2017 -0400

    audit: ensure that 'audit=1' actually enables audit for PID 1
    
    
    [ Upstream commit 173743dd99a49c956b124a74c8aacb0384739a4c ]
    
    Prior to this patch we enabled audit in audit_init(), which is too
    late for PID 1 as the standard initcalls are run after the PID 1 task
    is forked.  This means that we never allocate an audit_context (see
    audit_alloc()) for PID 1 and therefore miss a lot of audit events
    generated by PID 1.
    
    This patch enables audit as early as possible to help ensure that when
    PID 1 is forked it can allocate an audit_context if required.
    
    Reviewed-by: Richard Guy Briggs <rgb@redhat.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b9baf30673cb261356d0a2e10d0028c267a92f6
Author: Keefe Liu <liuqifa@huawei.com>
Date:   Thu Nov 9 20:09:31 2017 +0800

    ipvlan: fix ipv6 outbound device
    
    
    [ Upstream commit ca29fd7cce5a6444d57fb86517589a1a31c759e1 ]
    
    When process the outbound packet of ipv6, we should assign the master
    device to output device other than input device.
    
    Signed-off-by: Keefe Liu <liuqifa@huawei.com>
    Acked-by: Mahesh Bandewar <maheshb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdfe2d0a4834ed35ca19476700c4a2c0f4658435
Author: David Howells <dhowells@redhat.com>
Date:   Thu Nov 2 15:27:48 2017 +0000

    afs: Connect up the CB.ProbeUuid
    
    
    [ Upstream commit f4b3526d83c40dd8bf5948b9d7a1b2c340f0dcc8 ]
    
    The handler for the CB.ProbeUuid operation in the cache manager is
    implemented, but isn't listed in the switch-statement of operation
    selection, so won't be used.  Fix this by adding it.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 452ae09136146531d1aeff7e034acd439e75661e
Author: Majd Dibbiny <majd@mellanox.com>
Date:   Mon Oct 30 14:23:13 2017 +0200

    IB/mlx5: Assign send CQ and recv CQ of UMR QP
    
    
    [ Upstream commit 31fde034a8bd964a5c7c1a5663fc87a913158db2 ]
    
    The UMR's QP is created by calling mlx5_ib_create_qp directly, and
    therefore the send CQ and the recv CQ on the ibqp weren't assigned.
    
    Assign them right after calling the mlx5_ib_create_qp to assure
    that any access to those pointers will work as expected and won't
    crash the system as might happen as part of reset flow.
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Signed-off-by: Majd Dibbiny <majd@mellanox.com>
    Reviewed-by: Yishai Hadas <yishaih@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d1d4642fc55e4d77f69469b47bf9066ab303a56
Author: Mark Bloch <markb@mellanox.com>
Date:   Thu Nov 2 15:22:26 2017 +0200

    IB/mlx4: Increase maximal message size under UD QP
    
    
    [ Upstream commit 5f22a1d87c5315a98981ecf93cd8de226cffe6ca ]
    
    Maximal message should be used as a limit to the max message payload allowed,
    without the headers. The ConnectX-3 check is done against this value includes
    the headers. When the payload is 4K this will cause the NIC to drop packets.
    
    Increase maximal message to 8K as workaround, this shouldn't change current
    behaviour because we continue to set the MTU to 4k.
    
    To reproduce;
    set MTU to 4296 on the corresponding interface, for example:
    ifconfig eth0 mtu 4296 (both server and client)
    
    On server:
    ib_send_bw -c UD -d mlx4_0 -s 4096 -n 1000000 -i1 -m 4096
    
    On client:
    ib_send_bw -d mlx4_0 -c UD <server_ip> -s 4096 -n 1000000 -i 1 -m 4096
    
    Fixes: 6e0d733d9215 ("IB/mlx4: Allow 4K messages for UD QPs")
    Signed-off-by: Mark Bloch <markb@mellanox.com>
    Reviewed-by: Majd Dibbiny <majd@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8bfafc972a340092325a3f6f0986d273eb0cd55c
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Nov 10 14:14:06 2017 +1100

    xfrm: Copy policy family in clone_policy
    
    
    [ Upstream commit 0e74aa1d79a5bbc663e03a2804399cae418a0321 ]
    
    The syzbot found an ancient bug in the IPsec code.  When we cloned
    a socket policy (for example, for a child TCP socket derived from a
    listening socket), we did not copy the family field.  This results
    in a live policy with a zero family field.  This triggers a BUG_ON
    check in the af_key code when the cloned policy is retrieved.
    
    This patch fixes it by copying the family field over.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c15c5c8ebc5b17e5cbd2fc77c2764d2249cc6f1
Author: Jason Baron <jbaron@akamai.com>
Date:   Mon Nov 13 16:48:47 2017 -0500

    jump_label: Invoke jump_label_test() via early_initcall()
    
    
    [ Upstream commit 92ee46efeb505ead3ab06d3c5ce695637ed5f152 ]
    
    Fengguang Wu reported that running the rcuperf test during boot can cause
    the jump_label_test() to hit a WARN_ON(). The issue is that the core jump
    label code relies on kernel_text_address() to detect when it can no longer
    update branches that may be contained in __init sections. The
    kernel_text_address() in turn assumes that if the system_state variable is
    greter than or equal to SYSTEM_RUNNING then __init sections are no longer
    valid (since the assumption is that they have been freed). However, when
    rcuperf is setup to run in early boot it can call kernel_power_off() which
    sets the system_state to SYSTEM_POWER_OFF.
    
    Since rcuperf initialization is invoked via a module_init(), we can make
    the dependency of jump_label_test() needing to complete before rcuperf
    explicit by calling it via early_initcall().
    
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Jason Baron <jbaron@akamai.com>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1510609727-2238-1-git-send-email-jbaron@akamai.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b85cd5d926273b22273770f610a025f907b6ba6
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Tue Nov 14 13:42:38 2017 +0530

    atm: horizon: Fix irq release error
    
    
    [ Upstream commit bde533f2ea607cbbbe76ef8738b36243939a7bc2 ]
    
    atm_dev_register() can fail here and passed parameters to free irq
    which is not initialised. Initialization of 'dev->irq' happened after
    the 'goto out_free_irq'. So using 'irq' insted of 'dev->irq' in
    free_irq().
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dde5bbd52a2896a4856fa579d97e310399d446d9
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Nov 15 16:57:26 2017 +0800

    sctp: use the right sk after waking up from wait_buf sleep
    
    
    [ Upstream commit cea0cc80a6777beb6eb643d4ad53690e1ad1d4ff ]
    
    Commit dfcb9f4f99f1 ("sctp: deny peeloff operation on asocs with threads
    sleeping on it") fixed the race between peeloff and wait sndbuf by
    checking waitqueue_active(&asoc->wait) in sctp_do_peeloff().
    
    But it actually doesn't work, as even if waitqueue_active returns false
    the waiting sndbuf thread may still not yet hold sk lock. After asoc is
    peeled off, sk is not asoc->base.sk any more, then to hold the old sk
    lock couldn't make assoc safe to access.
    
    This patch is to fix this by changing to hold the new sk lock if sk is
    not asoc->base.sk, meanwhile, also set the sk in sctp_sendmsg with the
    new sk.
    
    With this fix, there is no more race between peeloff and waitbuf, the
    check 'waitqueue_active' in sctp_do_peeloff can be removed.
    
    Thanks Marcelo and Neil for making this clear.
    
    v1->v2:
      fix it by changing to lock the new sock instead of adding a flag in asoc.
    
    Suggested-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ad621272bd78e212b3225f853066760f5ee7dab
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Nov 15 16:55:54 2017 +0800

    sctp: do not free asoc when it is already dead in sctp_sendmsg
    
    
    [ Upstream commit ca3af4dd28cff4e7216e213ba3b671fbf9f84758 ]
    
    Now in sctp_sendmsg sctp_wait_for_sndbuf could schedule out without
    holding sock sk. It means the current asoc can be freed elsewhere,
    like when receiving an abort packet.
    
    If the asoc is just created in sctp_sendmsg and sctp_wait_for_sndbuf
    returns err, the asoc will be freed again due to new_asoc is not nil.
    An use-after-free issue would be triggered by this.
    
    This patch is to fix it by setting new_asoc with nil if the asoc is
    already dead when cpu schedules back, so that it will not be freed
    again in sctp_sendmsg.
    
    v1->v2:
      set new_asoc as nil in sctp_sendmsg instead of sctp_wait_for_sndbuf.
    
    Suggested-by: Neil Horman <nhorman@tuxdriver.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59e52050b17c8a616895fa050b86c47f8a8cdea8
Author: Pavel Tatashin <pasha.tatashin@oracle.com>
Date:   Wed Nov 15 17:36:18 2017 -0800

    sparc64/mm: set fields in deferred pages
    
    
    [ Upstream commit 2a20aa171071a334d80c4e5d5af719d8374702fc ]
    
    Without deferred struct page feature (CONFIG_DEFERRED_STRUCT_PAGE_INIT),
    flags and other fields in "struct page"es are never changed prior to
    first initializing struct pages by going through __init_single_page().
    
    With deferred struct page feature enabled there is a case where we set
    some fields prior to initializing:
    
    mem_init() {
         register_page_bootmem_info();
         free_all_bootmem();
         ...
    }
    
    When register_page_bootmem_info() is called only non-deferred struct
    pages are initialized.  But, this function goes through some reserved
    pages which might be part of the deferred, and thus are not yet
    initialized.
    
    mem_init
    register_page_bootmem_info
    register_page_bootmem_info_node
     get_page_bootmem
      .. setting fields here ..
      such as: page->freelist = (void *)type;
    
    free_all_bootmem()
    free_low_memory_core_early()
     for_each_reserved_mem_region()
      reserve_bootmem_region()
       init_reserved_page() <- Only if this is deferred reserved page
        __init_single_pfn()
         __init_single_page()
          memset(0) <-- Loose the set fields here
    
    We end up with similar issue as in the previous patch, where currently
    we do not observe problem as memory is zeroed.  But, if flag asserts are
    changed we can start hitting issues.
    
    Also, because in this patch series we will stop zeroing struct page
    memory during allocation, we must make sure that struct pages are
    properly initialized prior to using them.
    
    The deferred-reserved pages are initialized in free_all_bootmem().
    Therefore, the fix is to switch the above calls.
    
    Link: http://lkml.kernel.org/r/20171013173214.27300-4-pasha.tatashin@oracle.com
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Reviewed-by: Steven Sistare <steven.sistare@oracle.com>
    Reviewed-by: Daniel Jordan <daniel.m.jordan@oracle.com>
    Reviewed-by: Bob Picco <bob.picco@oracle.com>
    Acked-by: David S. Miller <davem@davemloft.net>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b99b00cf3f07c26ca862ca7defbe370a1b2575b
Author: Ming Lei <ming.lei@redhat.com>
Date:   Thu Nov 16 08:08:44 2017 +0800

    block: wake up all tasks blocked in get_request()
    
    
    [ Upstream commit 34d9715ac1edd50285168dd8d80c972739a4f6a4 ]
    
    Once blk_set_queue_dying() is done in blk_cleanup_queue(), we call
    blk_freeze_queue() and wait for q->q_usage_counter becoming zero. But
    if there are tasks blocked in get_request(), q->q_usage_counter can
    never become zero. So we have to wake up all these tasks in
    blk_set_queue_dying() first.
    
    Fixes: 3ef28e83ab157997 ("block: generic request_queue reference counting")
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a54dcc51a4a600953042686f6d6dfc81e3642d3
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Nov 3 13:46:06 2017 -0400

    sunrpc: Fix rpc_task_begin trace point
    
    
    [ Upstream commit b2bfe5915d5fe7577221031a39ac722a0a2a1199 ]
    
    The rpc_task_begin trace point always display a task ID of zero.
    Move the trace point call site so that it picks up the new task ID.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c02608144e79ab71f5121937fc95521f131d5447
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Mon Nov 6 15:28:04 2017 -0500

    NFS: Fix a typo in nfs_rename()
    
    
    [ Upstream commit d803224c84be067754db7fa58a93f36f61566493 ]
    
    On successful rename, the "old_dentry" is retained and is attached to
    the "new_dir", so we need to call nfs_set_verifier() accordingly.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 640192431a29a336a6a7226653dbeb949f56bc6b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Nov 17 15:27:35 2017 -0800

    dynamic-debug-howto: fix optional/omitted ending line number to be LARGE instead of 0
    
    
    [ Upstream commit 1f3c790bd5989fcfec9e53ad8fa09f5b740c958f ]
    
    line-range is supposed to treat "1-" as "1-endoffile", so
    handle the special case by setting last_lineno to UINT_MAX.
    
    Fixes this error:
    
      dynamic_debug:ddebug_parse_query: last-line:0 < 1st-line:1
      dynamic_debug:ddebug_exec_query: query parse failed
    
    Link: http://lkml.kernel.org/r/10a6a101-e2be-209f-1f41-54637824788e@infradead.org
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Acked-by: Jason Baron <jbaron@akamai.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24c98ec494c2df1e449c6aa6c3904d7c32c20c44
Author: Stephen Bates <sbates@raithlin.com>
Date:   Fri Nov 17 15:28:16 2017 -0800

    lib/genalloc.c: make the avail variable an atomic_long_t
    
    
    [ Upstream commit 36a3d1dd4e16bcd0d2ddfb4a2ec7092f0ae0d931 ]
    
    If the amount of resources allocated to a gen_pool exceeds 2^32 then the
    avail atomic overflows and this causes problems when clients try and
    borrow resources from the pool.  This is only expected to be an issue on
    64 bit systems.
    
    Add the <linux/atomic.h> header to pull in atomic_long* operations.  So
    that 32 bit systems continue to use atomic32_t but 64 bit systems can
    use atomic64_t.
    
    Link: http://lkml.kernel.org/r/1509033843-25667-1-git-send-email-sbates@raithlin.com
    Signed-off-by: Stephen Bates <sbates@raithlin.com>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Reviewed-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Reviewed-by: Daniel Mentz <danielmentz@google.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90ec232a3911f676f6c67a289b764b41ea8cbc31
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Nov 17 14:27:06 2017 +0800

    route: update fnhe_expires for redirect when the fnhe exists
    
    
    [ Upstream commit e39d5246111399dbc6e11cd39fd8580191b86c47 ]
    
    Now when creating fnhe for redirect, it sets fnhe_expires for this
    new route cache. But when updating the exist one, it doesn't do it.
    It will cause this fnhe never to be expired.
    
    Paolo already noticed it before, in Jianlin's test case, it became
    even worse:
    
    When ip route flush cache, the old fnhe is not to be removed, but
    only clean it's members. When redirect comes again, this fnhe will
    be found and updated, but never be expired due to fnhe_expires not
    being set.
    
    So fix it by simply updating fnhe_expires even it's for redirect.
    
    Fixes: aee06da6726d ("ipv4: use seqlock for nh_exceptions")
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41dee81f22c972a3905600bf127cea74d42025bc
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Nov 17 14:27:18 2017 +0800

    route: also update fnhe_genid when updating a route cache
    
    
    [ Upstream commit cebe84c6190d741045a322f5343f717139993c08 ]
    
    Now when ip route flush cache and it turn out all fnhe_genid != genid.
    If a redirect/pmtu icmp packet comes and the old fnhe is found and all
    it's members but fnhe_genid will be updated.
    
    Then next time when it looks up route and tries to rebind this fnhe to
    the new dst, the fnhe will be flushed due to fnhe_genid != genid. It
    causes this redirect/pmtu icmp packet acutally not to be applied.
    
    This patch is to also reset fnhe_genid when updating a route cache.
    
    Fixes: 5aad1de5ea2c ("ipv4: use separate genid for next hop exceptions")
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32f8870cc9a92467c411b492c6bf4781c41f0afa
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Fri Nov 10 18:48:50 2017 +0000

    mac80211_hwsim: Fix memory leak in hwsim_new_radio_nl()
    
    
    [ Upstream commit 67bd52386125ce1159c0581cbcd2740addf33cd4 ]
    
    hwsim_new_radio_nl() now copies the name attribute in order to add a
    null-terminator.  mac80211_hwsim_new_radio() (indirectly) copies it
    again into the net_device structure, so the first copy is not used or
    freed later.  Free the first copy before returning.
    
    Fixes: ff4dd73dd2b4 ("mac80211_hwsim: check HWSIM_ATTR_RADIO_NAME length")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0aab426757d3fc8e573856721d32a3c676c8138a
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Nov 15 18:17:07 2017 +0900

    kbuild: pkg: use --transform option to prefix paths in tar
    
    
    [ Upstream commit 2dbc644ac62bbcb9ee78e84719953f611be0413d ]
    
    For rpm-pkg and deb-pkg, a source tar file is created.  All paths in
    the archive must be prefixed with the base name of the tar so that
    everything is contained in the directory when you extract it.
    
    Currently, scripts/package/Makefile uses a symlink for that, and
    removes it after the tar is created.
    
    If you terminate the build during the tar creation, the symlink is
    left over.  Then, at the next package build, you will see a warning
    like follows:
    
      ln: '.' and 'kernel-4.14.0+/.' are the same file
    
    It is possible to fix it by adding -n (--no-dereference) option to
    the "ln" command, but a cleaner way is to use --transform option
    of "tar" command.  This option is GNU extension, but it should not
    hurt to use it in the Linux build system.
    
    The 'S' flag is needed to exclude symlinks from the path fixup.
    Without it, symlinks in the kernel are broken.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f72d29e70249472fd0dded2fbfa3858492b8475
Author: Jérémy Lefaure <jeremy.lefaure@lse.epita.fr>
Date:   Wed Jun 28 20:57:29 2017 -0400

    EDAC, i5000, i5400: Fix definition of NRECMEMB register
    
    
    [ Upstream commit a8c8261425649da58bdf08221570e5335ad33a31 ]
    
    In the i5000 and i5400 drivers, the NRECMEMB register is defined as a
    16-bit value, which results in wrong shifts in the code, as reported by
    sparse.
    
    In the datasheets ([1], section 3.9.22.20 and [2], section 3.9.22.21),
    this register is a 32-bit register. A u32 value for the register fixes
    the wrong shifts warnings and matches the datasheet.
    
    Also fix the mask to access to the CAS bits [27:16] in the i5000 driver.
    
    [1]: https://www.intel.com/content/dam/doc/datasheet/5000p-5000v-5000z-chipset-memory-controller-hub-datasheet.pdf
    [2]: https://www.intel.se/content/dam/doc/datasheet/5400-chipset-memory-controller-hub-datasheet.pdf
    
    Signed-off-by: Jérémy Lefaure <jeremy.lefaure@lse.epita.fr>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20170629005729.8478-1-jeremy.lefaure@lse.epita.fr
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 222de157ccd0b18add755da9a161cf95fff0b973
Author: Jérémy Lefaure <jeremy.lefaure@lse.epita.fr>
Date:   Wed Mar 8 20:18:09 2017 -0500

    EDAC, i5000, i5400: Fix use of MTR_DRAM_WIDTH macro
    
    
    [ Upstream commit e61555c29c28a4a3b6ba6207f4a0883ee236004d ]
    
    The MTR_DRAM_WIDTH macro returns the data width. It is sometimes used
    as if it returned a boolean true if the width if 8. Fix the tests where
    MTR_DRAM_WIDTH is misused.
    
    Signed-off-by: Jérémy Lefaure <jeremy.lefaure@lse.epita.fr>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20170309011809.8340-1-jeremy.lefaure@lse.epita.fr
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1ff979f97bd5e1ee176112665db20c6114a6c45
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Wed Feb 22 15:43:59 2017 +1100

    powerpc/powernv/ioda2: Gracefully fail if too many TCE levels requested
    
    
    [ Upstream commit 7aafac11e308d37ed3c509829bb43d80c1811ac3 ]
    
    The IODA2 specification says that a 64 DMA address cannot use top 4 bits
    (3 are reserved and one is a "TVE select"); bottom page_shift bits
    cannot be used for multilevel table addressing either.
    
    The existing IODA2 table allocation code aligns the minimum TCE table
    size to PAGE_SIZE so in the case of 64K system pages and 4K IOMMU pages,
    we have 64-4-12=48 bits. Since 64K page stores 8192 TCEs, i.e. needs
    13 bits, the maximum number of levels is 48/13 = 3 so we physically
    cannot address more and EEH happens on DMA accesses.
    
    This adds a check that too many levels were requested.
    
    It is still possible to have 5 levels in the case of 4K system page size.
    
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Acked-by: Gavin Shan <gwshan@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d42ebf56380fb12b2699a07893beaf506c3a9c58
Author: Jim Qu <Jim.Qu@amd.com>
Date:   Wed Mar 1 15:53:29 2017 +0800

    drm/amd/amdgpu: fix console deadlock if late init failed
    
    
    [ Upstream commit c085bd5119d5d0bdf3ef591a5563566be7dedced ]
    
    Signed-off-by: Jim Qu <Jim.Qu@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40b2b6453f89ee1343de00b7822b0eec5b17aaa2
Author: Jan Kara <jack@suse.cz>
Date:   Wed Mar 8 14:56:05 2017 +0100

    axonram: Fix gendisk handling
    
    
    [ Upstream commit 672a2c87c83649fb0167202342ce85af9a3b4f1c ]
    
    It is invalid to call del_gendisk() when disk->queue is NULL. Fix error
    handling in axon_ram_probe() to avoid doing that.
    
    Also del_gendisk() does not drop a reference to gendisk allocated by
    alloc_disk(). That has to be done by put_disk(). Add that call where
    needed.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2396d60746fd2d3c9e038ecba03aaa09dab5134
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Mar 3 21:44:00 2017 +0100

    netfilter: don't track fragmented packets
    
    
    [ Upstream commit 7b4fdf77a450ec0fdcb2f677b080ddbf2c186544 ]
    
    Andrey reports syzkaller splat caused by
    
    NF_CT_ASSERT(!ip_is_fragment(ip_hdr(skb)));
    
    in ipv4 nat.  But this assertion (and the comment) are wrong, this function
    does see fragments when IP_NODEFRAG setsockopt is used.
    
    As conntrack doesn't track packets without complete l4 header, only the
    first fragment is tracked.
    
    Because applying nat to first packet but not the rest makes no sense this
    also turns off tracking of all fragments.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca6d40bb082ae3d6f75da2fbd7af5ae77b7a80de
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Mon Mar 6 11:23:35 2017 +0100

    zram: set physical queue limits to avoid array out of bounds accesses
    
    
    [ Upstream commit 0bc315381fe9ed9fb91db8b0e82171b645ac008f ]
    
    zram can handle at most SECTORS_PER_PAGE sectors in a bio's bvec. When using
    the NVMe over Fabrics loopback target which potentially sends a huge bulk of
    pages attached to the bio's bvec this results in a kernel panic because of
    array out of bounds accesses in zram_decompress_page().
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39c626c1f9e3c96b96d4d0dd089dcd653b2874bb
Author: Chris Brandt <chris.brandt@renesas.com>
Date:   Mon Mar 6 15:20:51 2017 -0500

    i2c: riic: fix restart condition
    
    
    [ Upstream commit 2501c1bb054290679baad0ff7f4f07c714251f4c ]
    
    While modifying the driver to use the STOP interrupt, the completion of the
    intermediate transfers need to wake the driver back up in order to initiate
    the next transfer (restart condition). Otherwise you get never ending
    interrupts and only the first transfer sent.
    
    Fixes: 71ccea095ea1 ("i2c: riic: correctly finish transfers")
    Reported-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Chris Brandt <chris.brandt@renesas.com>
    Tested-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a836e1952f284ce2f922eac592791d037695c086
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Sun Mar 5 19:14:07 2017 +0200

    crypto: s5p-sss - Fix completing crypto request in IRQ handler
    
    
    [ Upstream commit 07de4bc88ce6a4d898cad9aa4c99c1df7e87702d ]
    
    In a regular interrupt handler driver was finishing the crypt/decrypt
    request by calling complete on crypto request.  This is disallowed since
    converting to skcipher in commit b286d8b1a690 ("crypto: skcipher - Add
    skcipher walk interface") and causes a warning:
            WARNING: CPU: 0 PID: 0 at crypto/skcipher.c:430 skcipher_walk_first+0x13c/0x14c
    
    The interrupt is marked shared but in fact there are no other users
    sharing it.  Thus the simplest solution seems to be to just use a
    threaded interrupt handler, after converting it to oneshot.
    
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c5deeccc664a79d5586df86b4221493f28e9ef9
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Sun Mar 5 12:34:53 2017 -0800

    ipv6: reorder icmpv6_init() and ip6_mr_init()
    
    
    [ Upstream commit 15e668070a64bb97f102ad9cf3bccbca0545cda8 ]
    
    Andrey reported the following kernel crash:
    
    kasan: GPF could be caused by NULL-ptr deref or user memory access
    general protection fault: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Modules linked in:
    CPU: 0 PID: 14446 Comm: syz-executor6 Not tainted 4.10.0+ #82
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    task: ffff88001f311700 task.stack: ffff88001f6e8000
    RIP: 0010:ip6mr_sk_done+0x15a/0x3d0 net/ipv6/ip6mr.c:1618
    RSP: 0018:ffff88001f6ef418 EFLAGS: 00010202
    RAX: dffffc0000000000 RBX: 1ffff10003edde8c RCX: ffffc900043ee000
    RDX: 0000000000000004 RSI: ffffffff83e3b3f8 RDI: 0000000000000020
    RBP: ffff88001f6ef508 R08: fffffbfff0dcc5d8 R09: 0000000000000000
    R10: ffffffff86e62ec0 R11: 0000000000000000 R12: 0000000000000000
    R13: 0000000000000000 R14: ffff88001f6ef4e0 R15: ffff8800380a0040
    FS:  00007f7a52cec700(0000) GS:ffff88003ec00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000000061c500 CR3: 000000001f1ae000 CR4: 00000000000006f0
    DR0: 0000000020000000 DR1: 0000000020000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000600
    Call Trace:
     rawv6_close+0x4c/0x80 net/ipv6/raw.c:1217
     inet_release+0xed/0x1c0 net/ipv4/af_inet.c:425
     inet6_release+0x50/0x70 net/ipv6/af_inet6.c:432
     sock_release+0x8d/0x1e0 net/socket.c:597
     __sock_create+0x39d/0x880 net/socket.c:1226
     sock_create_kern+0x3f/0x50 net/socket.c:1243
     inet_ctl_sock_create+0xbb/0x280 net/ipv4/af_inet.c:1526
     icmpv6_sk_init+0x163/0x500 net/ipv6/icmp.c:954
     ops_init+0x10a/0x550 net/core/net_namespace.c:115
     setup_net+0x261/0x660 net/core/net_namespace.c:291
     copy_net_ns+0x27e/0x540 net/core/net_namespace.c:396
    9pnet_virtio: no channels available for device ./file1
     create_new_namespaces+0x437/0x9b0 kernel/nsproxy.c:106
     unshare_nsproxy_namespaces+0xae/0x1e0 kernel/nsproxy.c:205
     SYSC_unshare kernel/fork.c:2281 [inline]
     SyS_unshare+0x64e/0x1000 kernel/fork.c:2231
     entry_SYSCALL_64_fastpath+0x1f/0xc2
    
    This is because net->ipv6.mr6_tables is not initialized at that point,
    ip6mr_rules_init() is not called yet, therefore on the error path when
    we iterator the list, we trigger this oops. Fix this by reordering
    ip6mr_rules_init() before icmpv6_sk_init().
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84bc40c4b31bc82d890187b0e42dc425fa469a4f
Author: Michal Schmidt <mschmidt@redhat.com>
Date:   Fri Mar 3 17:08:32 2017 +0100

    bnx2x: do not rollback VF MAC/VLAN filters we did not configure
    
    
    [ Upstream commit 78d5505432436516456c12abbe705ec8dee7ee2b ]
    
    On failure to configure a VF MAC/VLAN filter we should not attempt to
    rollback filters that we failed to configure with -EEXIST.
    
    Signed-off-by: Michal Schmidt <mschmidt@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 871e4b11eba2be14d146834863ac39431c1614ff
Author: Michal Schmidt <mschmidt@redhat.com>
Date:   Fri Mar 3 17:08:30 2017 +0100

    bnx2x: fix possible overrun of VFPF multicast addresses array
    
    
    [ Upstream commit 22118d861cec5da6ed525aaf12a3de9bfeffc58f ]
    
    It is too late to check for the limit of the number of VF multicast
    addresses after they have already been copied to the req->multicast[]
    array, possibly overflowing it.
    
    Do the check before copying.
    
    Also fix the error path to not skip unlocking vf2pf_mutex.
    
    Signed-off-by: Michal Schmidt <mschmidt@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1aead0538b89f3c69457ea9fa50b7baca5894ef5
Author: Michal Schmidt <mschmidt@redhat.com>
Date:   Fri Mar 3 17:08:28 2017 +0100

    bnx2x: prevent crash when accessing PTP with interface down
    
    
    [ Upstream commit 466e8bf10ac104d96e1ea813e8126e11cb72ea20 ]
    
    It is possible to crash the kernel by accessing a PTP device while its
    associated bnx2x interface is down. Before the interface is brought up,
    the timecounter is not initialized, so accessing it results in NULL
    dereference.
    
    Fix it by checking if the interface is up.
    
    Use -ENETDOWN as the error code when the interface is down.
     -EFAULT in bnx2x_ptp_adjfreq() did not seem right.
    
    Tested using phc_ctl get/set/adj/freq commands.
    
    Signed-off-by: Michal Schmidt <mschmidt@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bbc908cfc1ce230fe14ae00b316f427e77a56d1
Author: Blomme, Maarten <Maarten.Blomme@flir.com>
Date:   Thu Mar 2 13:08:36 2017 +0100

    spi_ks8995: fix "BUG: key accdaa28 not in .data!"
    
    
    [ Upstream commit 4342696df764ec65dcdfbd0c10d90ea52505f8ba ]
    
    Signed-off-by: Maarten Blomme <Maarten.Blomme@flir.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6871214530050eba6a7fa41245a73af30945b58d
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Feb 20 12:30:12 2017 +0000

    arm64: KVM: Survive unknown traps from guests
    
    
    [ Upstream commit ba4dd156eabdca93501d92a980ba27fa5f4bbd27 ]
    
    Currently we BUG() if we see an ESR_EL2.EC value we don't recognise. As
    configurable disables/enables are added to the architecture (controlled
    by RES1/RES0 bits respectively), with associated synchronous exceptions,
    it may be possible for a guest to trigger exceptions with classes that
    we don't recognise.
    
    While we can't service these exceptions in a manner useful to the guest,
    we can avoid bringing down the host. Per ARM DDI 0487A.k_iss10775, page
    D7-1937, EC values within the range 0x00 - 0x2c are reserved for future
    use with synchronous exceptions, and EC values within the range 0x2d -
    0x3f may be used for either synchronous or asynchronous exceptions.
    
    The patch makes KVM handle any unknown EC by injecting an UNDEFINED
    exception into the guest, with a corresponding (ratelimited) warning in
    the host dmesg. We could later improve on this with with a new (opt-in)
    exit to the host userspace.
    
    Cc: Dave Martin <dave.martin@arm.com>
    Cc: Suzuki K Poulose <suzuki.poulose@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5dc5c8e6551541fa9502b15dd5532c01273fa1f3
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Feb 20 12:30:11 2017 +0000

    arm: KVM: Survive unknown traps from guests
    
    
    [ Upstream commit f050fe7a9164945dd1c28be05bf00e8cfb082ccf ]
    
    Currently we BUG() if we see a HSR.EC value we don't recognise. As
    configurable disables/enables are added to the architecture (controlled
    by RES1/RES0 bits respectively), with associated synchronous exceptions,
    it may be possible for a guest to trigger exceptions with classes that
    we don't recognise.
    
    While we can't service these exceptions in a manner useful to the guest,
    we can avoid bringing down the host. Per ARM DDI 0406C.c, all currently
    unallocated HSR EC encodings are reserved, and per ARM DDI
    0487A.k_iss10775, page G6-4395, EC values within the range 0x00 - 0x2c
    are reserved for future use with synchronous exceptions, and EC values
    within the range 0x2d - 0x3f may be used for either synchronous or
    asynchronous exceptions.
    
    The patch makes KVM handle any unknown EC by injecting an UNDEFINED
    exception into the guest, with a corresponding (ratelimited) warning in
    the host dmesg. We could later improve on this with with a new (opt-in)
    exit to the host userspace.
    
    Cc: Dave Martin <dave.martin@arm.com>
    Cc: Suzuki K Poulose <suzuki.poulose@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccf72fe2e5ccd4b3425e71f0763f0f0e7c66af03
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Mon Mar 6 04:03:28 2017 -0800

    KVM: nVMX: reset nested_run_pending if the vCPU is going to be reset
    
    
    [ Upstream commit 2f707d97982286b307ef2a9b034e19aabc1abb56 ]
    
    Reported by syzkaller:
    
        WARNING: CPU: 1 PID: 27742 at arch/x86/kvm/vmx.c:11029
        nested_vmx_vmexit+0x5c35/0x74d0 arch/x86/kvm/vmx.c:11029
        CPU: 1 PID: 27742 Comm: a.out Not tainted 4.10.0+ #229
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
        Call Trace:
         __dump_stack lib/dump_stack.c:15 [inline]
         dump_stack+0x2ee/0x3ef lib/dump_stack.c:51
         panic+0x1fb/0x412 kernel/panic.c:179
         __warn+0x1c4/0x1e0 kernel/panic.c:540
         warn_slowpath_null+0x2c/0x40 kernel/panic.c:583
         nested_vmx_vmexit+0x5c35/0x74d0 arch/x86/kvm/vmx.c:11029
         vmx_leave_nested arch/x86/kvm/vmx.c:11136 [inline]
         vmx_set_msr+0x1565/0x1910 arch/x86/kvm/vmx.c:3324
         kvm_set_msr+0xd4/0x170 arch/x86/kvm/x86.c:1099
         do_set_msr+0x11e/0x190 arch/x86/kvm/x86.c:1128
         __msr_io arch/x86/kvm/x86.c:2577 [inline]
         msr_io+0x24b/0x450 arch/x86/kvm/x86.c:2614
         kvm_arch_vcpu_ioctl+0x35b/0x46a0 arch/x86/kvm/x86.c:3497
         kvm_vcpu_ioctl+0x232/0x1120 arch/x86/kvm/../../../virt/kvm/kvm_main.c:2721
         vfs_ioctl fs/ioctl.c:43 [inline]
         do_vfs_ioctl+0x1bf/0x1790 fs/ioctl.c:683
         SYSC_ioctl fs/ioctl.c:698 [inline]
         SyS_ioctl+0x8f/0xc0 fs/ioctl.c:689
         entry_SYSCALL_64_fastpath+0x1f/0xc2
    
    The syzkaller folks reported a nested_run_pending warning during userspace
    clear VMX capability which is exposed to L1 before.
    
    The warning gets thrown while doing
    
    (*(uint32_t*)0x20aecfe8 = (uint32_t)0x1);
    (*(uint32_t*)0x20aecfec = (uint32_t)0x0);
    (*(uint32_t*)0x20aecff0 = (uint32_t)0x3a);
    (*(uint32_t*)0x20aecff4 = (uint32_t)0x0);
    (*(uint64_t*)0x20aecff8 = (uint64_t)0x0);
    r[29] = syscall(__NR_ioctl, r[4], 0x4008ae89ul,
                    0x20aecfe8ul, 0, 0, 0, 0, 0, 0);
    
    i.e. KVM_SET_MSR ioctl with
    
    struct kvm_msrs {
            .nmsrs = 1,
                    .pad = 0,
                    .entries = {
                            {.index = MSR_IA32_FEATURE_CONTROL,
                             .reserved = 0,
                             .data = 0}
                    }
    }
    
    The VMLANCH/VMRESUME emulation should be stopped since the CPU is going to
    reset here. This patch resets the nested_run_pending since the CPU is going
    to be reset hence there should be nothing pending.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Suggested-by: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: David Hildenbrand <david@redhat.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a12875fa51fc62d9e0ceb047e56760e84fc25c3
Author: Franck Demathieu <fdemathieu@gmail.com>
Date:   Mon Mar 6 14:41:06 2017 +0100

    irqchip/crossbar: Fix incorrect type of register size
    
    
    [ Upstream commit 4b9de5da7e120c7f02395da729f0ec77ce7a6044 ]
    
    The 'size' variable is unsigned according to the dt-bindings.
    As this variable is used as integer in other places, create a new variable
    that allows to fix the following sparse issue (-Wtypesign):
    
      drivers/irqchip/irq-crossbar.c:279:52: warning: incorrect type in argument 3 (different signedness)
      drivers/irqchip/irq-crossbar.c:279:52:    expected unsigned int [usertype] *out_value
      drivers/irqchip/irq-crossbar.c:279:52:    got int *<noident>
    
    Signed-off-by: Franck Demathieu <fdemathieu@gmail.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a15c626996c61faa279eac9d852c8ca7bb8c0ac
Author: James Smart <jsmart2021@gmail.com>
Date:   Sat Mar 4 09:30:25 2017 -0800

    scsi: lpfc: Fix crash during Hardware error recovery on SLI3 adapters
    
    
    [ Upstream commit 5d181531bc6169e19a02a27d202cf0e982db9d0e ]
    
    if REG_VPI fails, the driver was incorrectly issuing INIT_VFI
    (a SLI4 command) on a SLI3 adapter.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9d47a6d6862df5536837b43407d3b527cad5090
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Mar 6 15:33:42 2017 -0500

    workqueue: trigger WARN if queue_delayed_work() is called with NULL @wq
    
    
    [ Upstream commit 637fdbae60d6cb9f6e963c1079d7e0445c86ff7d ]
    
    If queue_delayed_work() gets called with NULL @wq, the kernel will
    oops asynchronuosly on timer expiration which isn't too helpful in
    tracking down the offender.  This actually happened with smc.
    
    __queue_delayed_work() already does several input sanity checks
    synchronously.  Add NULL @wq check.
    
    Reported-by: Dave Jones <davej@codemonkey.org.uk>
    Link: http://lkml.kernel.org/r/20170227171439.jshx3qplflyrgcv7@codemonkey.org.uk
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14a7aa2ae61e815c1bf5a1a6f5ae751e1a0a1cbc
Author: Tejun Heo <tj@kernel.org>
Date:   Mon Mar 6 15:26:54 2017 -0500

    libata: drop WARN from protocol error in ata_sff_qc_issue()
    
    
    [ Upstream commit 0580b762a4d6b70817476b90042813f8573283fa ]
    
    ata_sff_qc_issue() expects upper layers to never issue commands on a
    command protocol that it doesn't implement.  While the assumption
    holds fine with the usual IO path, nothing filters based on the
    command protocol in the passthrough path (which was added later),
    allowing the warning to be tripped with a passthrough command with the
    right (well, wrong) protocol.
    
    Failing with AC_ERR_SYSTEM is the right thing to do anyway.  Remove
    the unnecessary WARN.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Link: http://lkml.kernel.org/r/CACT4Y+bXkvevNZU8uP6X0QVqsj6wNoUA_1exfTSOzc+SmUtMOA@mail.gmail.com
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9b291aed2a9f1e1a9be8a88161bebeef7b1fe00
Author: Jim Mattson <jmattson@google.com>
Date:   Thu Mar 2 12:41:48 2017 -0800

    kvm: nVMX: VMCLEAR should not cause the vCPU to shut down
    
    
    [ Upstream commit 587d7e72aedca91cee80c0a56811649c3efab765 ]
    
    VMCLEAR should silently ignore a failure to clear the launch state of
    the VMCS referenced by the operand.
    
    Signed-off-by: Jim Mattson <jmattson@google.com>
    [Changed "kvm_write_guest(vcpu->kvm" to "kvm_vcpu_write_guest(vcpu".]
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef21f3a12bb1ea9da69167c7f4644ed22b73af27
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Feb 21 22:33:11 2017 +0100

    USB: gadgetfs: Fix a potential memory leak in 'dev_config()'
    
    
    [ Upstream commit b6e7aeeaf235901c42ec35de4633c7c69501d303 ]
    
    'kbuf' is allocated just a few lines above using 'memdup_user()'.
    If the 'if (dev->buf)' test fails, this memory is never released.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4036947a43a068965f0cd235c554204bc98a9814
Author: John Keeping <john@metanate.com>
Date:   Tue Feb 28 10:55:30 2017 +0000

    usb: gadget: configs: plug memory leak
    
    
    [ Upstream commit 38355b2a44776c25b0f2ad466e8c51bb805b3032 ]
    
    When binding a gadget to a device, "name" is stored in gi->udc_name, but
    this does not happen when unregistering and the string is leaked.
    
    Signed-off-by: John Keeping <john@metanate.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24e9fc7ef051e353e554f1b5be7eae7b7087e0aa
Author: Daniel Drake <drake@endlessm.com>
Date:   Fri Feb 17 07:40:52 2017 -0600

    HID: chicony: Add support for another ASUS Zen AiO keyboard
    
    
    [ Upstream commit f2f10b7e722a75c6d75a7f7cd06b0eee3ae20f7c ]
    
    Add support for media keys on the keyboard that comes with the
    Asus V221ID and ZN241IC All In One computers.
    
    The keys to support here are WLAN, BRIGHTNESSDOWN and BRIGHTNESSUP.
    
    This device is not visibly branded as Chicony, and the USB Vendor ID
    suggests that it is a JESS device. However this seems like the right place
    to put it: the usage codes are identical to the currently supported
    devices, and this driver already supports the ASUS AIO keyboard AK1D.
    
    Signed-off-by: Daniel Drake <drake@endlessm.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3aec56b819605c0687469bace92064ea75a250c1
Author: Phil Reid <preid@electromag.com.au>
Date:   Mon Feb 20 09:41:45 2017 +0800

    gpio: altera: Use handle_level_irq when configured as a level_high
    
    
    [ Upstream commit f759921cfbf4847319d197a6ed7c9534d593f8bc ]
    
    When a threaded irq handler is chained attached to one of the gpio
    pins when configure for level irq the altera_gpio_irq_leveL_high_handler
    does not mask the interrupt while being handled by the chained irq.
    This resulting in the threaded irq not getting enough cycles to complete
    quickly enough before the irq was disabled as faulty. handle_level_irq
    should be used in this situation instead of handle_simple_irq.
    
    In gpiochip_irqchip_add set default handler to handle_bad_irq as
    per Documentation/gpio/driver.txt. Then set the correct handler in
    the set_type callback.
    
    Signed-off-by: Phil Reid <preid@electromag.com.au>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c52017de0ba6637ccdadae1e89d988fc61c5390a
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sat Mar 4 07:02:11 2017 -0800

    ARM: OMAP2+: Release device node after it is no longer needed.
    
    
    [ Upstream commit b92675d998a9fa37fe9e0e35053a95b4a23c158b ]
    
    The device node returned by of_find_node_by_name() needs to be released
    after it is no longer needed to avoid a device node leak.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14c39618452952a5e3ad95d1fad6cef59cbe66e0
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Sat Mar 4 07:02:10 2017 -0800

    ARM: OMAP2+: Fix device node reference counts
    
    
    [ Upstream commit 10e5778f54765c96fe0c8f104b7a030e5b35bc72 ]
    
    After commit 0549bde0fcb1 ("of: fix of_node leak caused in
    of_find_node_opts_by_path"), the following error may be
    reported when running omap images.
    
    OF: ERROR: Bad of_node_put() on /ocp@68000000
    CPU: 0 PID: 0 Comm: swapper Not tainted 4.10.0-rc7-next-20170210 #1
    Hardware name: Generic OMAP3-GP (Flattened Device Tree)
    [<c0310604>] (unwind_backtrace) from [<c030bbf4>] (show_stack+0x10/0x14)
    [<c030bbf4>] (show_stack) from [<c05add8c>] (dump_stack+0x98/0xac)
    [<c05add8c>] (dump_stack) from [<c05af1b0>] (kobject_release+0x48/0x7c)
    [<c05af1b0>] (kobject_release)
            from [<c0ad1aa4>] (of_find_node_by_name+0x74/0x94)
    [<c0ad1aa4>] (of_find_node_by_name)
            from [<c1215bd4>] (omap3xxx_hwmod_is_hs_ip_block_usable+0x24/0x2c)
    [<c1215bd4>] (omap3xxx_hwmod_is_hs_ip_block_usable) from
    [<c1215d5c>] (omap3xxx_hwmod_init+0x180/0x274)
    [<c1215d5c>] (omap3xxx_hwmod_init)
            from [<c120faa8>] (omap3_init_early+0xa0/0x11c)
    [<c120faa8>] (omap3_init_early)
            from [<c120fb2c>] (omap3430_init_early+0x8/0x30)
    [<c120fb2c>] (omap3430_init_early)
            from [<c1204710>] (setup_arch+0xc04/0xc34)
    [<c1204710>] (setup_arch) from [<c1200948>] (start_kernel+0x68/0x38c)
    [<c1200948>] (start_kernel) from [<8020807c>] (0x8020807c)
    
    of_find_node_by_name() drops the reference to the passed device node.
    The commit referenced above exposes this problem.
    
    To fix the problem, use of_get_child_by_name() instead of
    of_find_node_by_name(); of_get_child_by_name() does not drop
    the reference count of passed device nodes. While semantically
    different, we only look for immediate children of the passed
    device node, so of_get_child_by_name() is a more appropriate
    function to use anyway.
    
    Release the reference to the device node obtained with
    of_get_child_by_name() after it is no longer needed to avoid
    another device node leak.
    
    While at it, clean up the code and change the return type of
    omap3xxx_hwmod_is_hs_ip_block_usable() to bool to match its use
    and the return type of of_device_is_available().
    
    Cc: Qi Hou <qi.hou@windriver.com>
    Cc: Peter Rosin <peda@axentia.se>
    Cc: Rob Herring <robh@kernel.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d180639d86e1dfd28edad94992443ac731a5e517
Author: David Daney <david.daney@cavium.com>
Date:   Wed Mar 1 14:04:53 2017 -0800

    module: set __jump_table alignment to 8
    
    
    [ Upstream commit ab42632156becd35d3884ee5c14da2bedbf3149a ]
    
    For powerpc the __jump_table section in modules is not aligned, this
    causes a WARN_ON() splat when loading a module containing a __jump_table.
    
    Strict alignment became necessary with commit 3821fd35b58d
    ("jump_label: Reduce the size of struct static_key"), currently in
    linux-next, which uses the two least significant bits of pointers to
    __jump_table elements.
    
    Fix by forcing __jump_table to 8, which is the same alignment used for
    this section in the kernel proper.
    
    Link: http://lkml.kernel.org/r/20170301220453.4756-1-david.daney@cavium.com
    
    Reviewed-by: Jason Baron <jbaron@akamai.com>
    Acked-by: Jessica Yu <jeyu@redhat.com>
    Acked-by: Michael Ellerman <mpe@ellerman.id.au> (powerpc)
    Tested-by: Sachin Sant <sachinp@linux.vnet.ibm.com>
    Signed-off-by: David Daney <david.daney@cavium.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23f9e8448219a75f4f135f672308fb757db8a992
Author: Sachin Sant <sachinp@linux.vnet.ibm.com>
Date:   Sun Feb 26 11:38:39 2017 +0530

    selftest/powerpc: Fix false failures for skipped tests
    
    
    [ Upstream commit a6d8a21596df041f36f4c2ccc260c459e3e851f1 ]
    
    Tests under alignment subdirectory are skipped when executed on previous
    generation hardware, but harness still marks them as failed.
    
      test: test_copy_unaligned
      tags: git_version:unknown
      [SKIP] Test skipped on line 26
      skip: test_copy_unaligned
      selftests: copy_unaligned [FAIL]
    
    The MAGIC_SKIP_RETURN_VALUE value assigned to rc variable is retained till
    the program exit which causes the test to be marked as failed.
    
    This patch resets the value before returning to the main() routine.
    With this patch the test o/p is as follows:
    
      test: test_copy_unaligned
      tags: git_version:unknown
      [SKIP] Test skipped on line 26
      skip: test_copy_unaligned
      selftests: copy_unaligned [PASS]
    
    Signed-off-by: Sachin Sant <sachinp@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bf3fc6cbc8bede0ec7f57d2dbe0b762cdb49b7f
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Mar 1 21:10:17 2017 +0100

    x86/hpet: Prevent might sleep splat on resume
    
    
    [ Upstream commit bb1a2c26165640ba2cbcfe06c81e9f9d6db4e643 ]
    
    Sergey reported a might sleep warning triggered from the hpet resume
    path. It's caused by the call to disable_irq() from interrupt disabled
    context.
    
    The problem with the low level resume code is that it is not accounted as a
    special system_state like we do during the boot process. Calling the same
    code during system boot would not trigger the warning. That's inconsistent
    at best.
    
    In this particular case it's trivial to replace the disable_irq() with
    disable_hardirq() because this particular code path is solely used from
    system resume and the involved hpet interrupts can never be force threaded.
    
    Reported-and-tested-by: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: "Rafael J. Wysocki" <rjw@sisk.pl>
    Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1703012108460.3684@nanos
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0500c6d35274aff625804ea5075d59006c5b4264
Author: Ladislav Michl <ladis@linux-mips.org>
Date:   Sat Feb 11 14:02:49 2017 +0100

    ARM: OMAP2+: gpmc-onenand: propagate error on initialization failure
    
    
    [ Upstream commit 7807e086a2d1f69cc1a57958cac04fea79fc2112 ]
    
    gpmc_probe_onenand_child returns success even on gpmc_onenand_init
    failure. Fix that.
    
    Signed-off-by: Ladislav Michl <ladis@linux-mips.org>
    Acked-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 572b639bde31f0c2c4cc2715e6e2a562da17eab0
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Wed Feb 15 11:38:58 2017 +0100

    vti6: Don't report path MTU below IPV6_MIN_MTU.
    
    
    [ Upstream commit e3dc847a5f85b43ee2bfc8eae407a7e383483228 ]
    
    In vti6_xmit(), the check for IPV6_MIN_MTU before we
    send a ICMPV6_PKT_TOOBIG message is missing. So we might
    report a PMTU below 1280. Fix this by adding the required
    check.
    
    Fixes: ccd740cbc6e ("vti6: Add pmtu handling to vti6_xmit.")
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3771241e5bc34f8cb8b5fef5df522e9ea2e7b985
Author: Sasha Levin <alexander.levin@verizon.com>
Date:   Fri Dec 8 00:11:47 2017 -0500

    Revert "s390/kbuild: enable modversions for symbols exported from asm"
    
    
    This reverts commit cabab3f9f5ca077535080b3252e6168935b914af.
    
    Not needed for < 4.9.
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e891a29531d4fc6026099421e81f4000521aaa70
Author: Sasha Levin <alexander.levin@verizon.com>
Date:   Thu Dec 7 23:23:42 2017 -0500

    Revert "spi: SPI_FSL_DSPI should depend on HAS_DMA"
    
    
    This reverts commit dadab2d4e3cf708ceba22ecddd94aedfecb39199.
    
    Not required on < 4.10.
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f854e20999155239b0338939b3e5ac65177f90a8
Author: Sasha Levin <alexander.levin@verizon.com>
Date:   Thu Dec 7 23:21:06 2017 -0500

    Revert "drm/armada: Fix compile fail"
    
    
    This reverts commit 82f260d472c3b4dbb7324624e395c3e91f73a040.
    
    Not required on < 4.10.
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5327f9badacdbd268b182b4fc89cd9b94a358a38
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Apr 13 14:56:23 2017 -0700

    mm: drop unused pmdp_huge_get_and_clear_notify()
    
    commit c0c379e2931b05facef538e53bf3b21f283d9a0b upstream.
    
    Dave noticed that after fixing MADV_DONTNEED vs numa balancing race the
    last pmdp_huge_get_and_clear_notify() user is gone.
    
    Let's drop the helper.
    
    Link: http://lkml.kernel.org/r/20170306112047.24809-1-kirill.shutemov@linux.intel.com
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [jwang: adjust context for 4.4]
    Signed-off-by: Jack Wang <jinpu.wang@profitbricks.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47c53ccca4a0984d45b4157447b8eeca47d9a51f
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Apr 13 14:56:20 2017 -0700

    thp: fix MADV_DONTNEED vs. numa balancing race
    
    commit ced108037c2aa542b3ed8b7afd1576064ad1362a upstream.
    
    In case prot_numa, we are under down_read(mmap_sem).  It's critical to
    not clear pmd intermittently to avoid race with MADV_DONTNEED which is
    also under down_read(mmap_sem):
    
            CPU0:                           CPU1:
                                    change_huge_pmd(prot_numa=1)
                                     pmdp_huge_get_and_clear_notify()
    madvise_dontneed()
     zap_pmd_range()
      pmd_trans_huge(*pmd) == 0 (without ptl)
      // skip the pmd
                                     set_pmd_at();
                                     // pmd is re-established
    
    The race makes MADV_DONTNEED miss the huge pmd and don't clear it
    which may break userspace.
    
    Found by code analysis, never saw triggered.
    
    Link: http://lkml.kernel.org/r/20170302151034.27829-3-kirill.shutemov@linux.intel.com
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Hillf Danton <hillf.zj@alibaba-inc.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [jwang: adjust context for 4.4]
    Signed-off-by: Jack Wang <jinpu.wang@profitbricks.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4443b53732e5e98220ec8777d11e3c9eb87f5fd
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Apr 13 14:56:17 2017 -0700

    thp: reduce indentation level in change_huge_pmd()
    
    commit 0a85e51d37645e9ce57e5e1a30859e07810ed07c upstream.
    
    Patch series "thp: fix few MADV_DONTNEED races"
    
    For MADV_DONTNEED to work properly with huge pages, it's critical to not
    clear pmd intermittently unless you hold down_write(mmap_sem).
    
    Otherwise MADV_DONTNEED can miss the THP which can lead to userspace
    breakage.
    
    See example of such race in commit message of patch 2/4.
    
    All these races are found by code inspection.  I haven't seen them
    triggered.  I don't think it's worth to apply them to stable@.
    
    This patch (of 4):
    
    Restructure code in preparation for a fix.
    
    Link: http://lkml.kernel.org/r/20170302151034.27829-2-kirill.shutemov@linux.intel.com
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Hillf Danton <hillf.zj@alibaba-inc.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [jwang: adjust context for 4.4 kernel]
    Signed-off-by: Jack Wang <jinpu.wang@profitbricks.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 696fbe191acd2809e2e8b385b455845cf0a18887
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Tue Mar 7 09:15:53 2017 -0800

    scsi: storvsc: Workaround for virtual DVD SCSI version
    
    commit f1c635b439a5c01776fe3a25b1e2dc546ea82e6f upstream.
    
    Hyper-V host emulation of SCSI for virtual DVD device reports SCSI
    version 0 (UNKNOWN) but is still capable of supporting REPORTLUN.
    
    Without this patch, a GEN2 Linux guest on Hyper-V will not boot 4.11
    successfully with virtual DVD ROM device. What happens is that the SCSI
    scan process falls back to doing sequential probing by INQUIRY.  But the
    storvsc driver has a previous workaround that masks/blocks all errors
    reports from INQUIRY (or MODE_SENSE) commands.  This workaround causes
    the scan to then populate a full set of bogus LUN's on the target and
    then sends kernel spinning off into a death spiral doing block reads on
    the non-existent LUNs.
    
    By setting the correct blacklist flags, the target with the DVD device
    is scanned with REPORTLUN and that works correctly.
    
    Patch needs to go in current 4.11, it is safe but not necessary in older
    kernels.
    
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Reviewed-by: K. Y. Srinivasan <kys@microsoft.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd8c78e2501eae30d27de93e6f17caf1504a3174
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Mon Nov 27 11:22:42 2017 +0000

    ARM: avoid faulting on qemu
    
    commit 3aaf33bebda8d4ffcc0fc8ef39e6c1ac68823b11 upstream.
    
    When qemu starts a kernel in a bare environment, the default SCR has
    the AW and FW bits clear, which means that the kernel can't modify
    the PSR A or PSR F bits, and means that FIQs and imprecise aborts are
    always masked.
    
    When running uboot under qemu, the AW and FW SCR bits are set, and the
    kernel functions normally - and this is how real hardware behaves.
    
    Fix this for qemu by ignoring the FIQ bit.
    
    Fixes: 8bafae202c82 ("ARM: BUG if jumping to usermode address in kernel mode")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Cc: Alex Shi <alex.shi@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af1d17239682cb019916195c3e9cdb7a5793cea3
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Fri Nov 24 23:49:34 2017 +0000

    ARM: BUG if jumping to usermode address in kernel mode
    
    commit 8bafae202c82dc257f649ea3c275a0f35ee15113 upstream.
    
    Detect if we are returning to usermode via the normal kernel exit paths
    but the saved PSR value indicates that we are in kernel mode.  This
    could occur due to corrupted stack state, which has been observed with
    "ftracetest".
    
    This ensures that we catch the problem case before we get to user code.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Cc: Alex Shi <alex.shi@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 750f60edebac3de31d107b187ab1d754118d95ea
Author: Dave Martin <Dave.Martin@arm.com>
Date:   Tue Dec 5 14:56:42 2017 +0000

    arm64: fpsimd: Prevent registers leaking from dead tasks
    
    commit 071b6d4a5d343046f253a5a8835d477d93992002 upstream.
    
    Currently, loading of a task's fpsimd state into the CPU registers
    is skipped if that task's state is already present in the registers
    of that CPU.
    
    However, the code relies on the struct fpsimd_state * (and by
    extension struct task_struct *) to unambiguously identify a task.
    
    There is a particular case in which this doesn't work reliably:
    when a task exits, its task_struct may be recycled to describe a
    new task.
    
    Consider the following scenario:
    
     1) Task P loads its fpsimd state onto cpu C.
            per_cpu(fpsimd_last_state, C) := P;
            P->thread.fpsimd_state.cpu := C;
    
     2) Task X is scheduled onto C and loads its fpsimd state on C.
            per_cpu(fpsimd_last_state, C) := X;
            X->thread.fpsimd_state.cpu := C;
    
     3) X exits, causing X's task_struct to be freed.
    
     4) P forks a new child T, which obtains X's recycled task_struct.
            T == X.
            T->thread.fpsimd_state.cpu == C (inherited from P).
    
     5) T is scheduled on C.
            T's fpsimd state is not loaded, because
            per_cpu(fpsimd_last_state, C) == T (== X) &&
            T->thread.fpsimd_state.cpu == C.
    
            (This is the check performed by fpsimd_thread_switch().)
    
    So, T gets X's registers because the last registers loaded onto C
    were those of X, in (2).
    
    This patch fixes the problem by ensuring that the sched-in check
    fails in (5): fpsimd_flush_task_state(T) is called when T is
    forked, so that T->thread.fpsimd_state.cpu == C cannot be true.
    This relies on the fact that T is not schedulable until after
    copy_thread() completes.
    
    Once T's fpsimd state has been loaded on some CPU C there may still
    be other cpus D for which per_cpu(fpsimd_last_state, D) ==
    &X->thread.fpsimd_state.  But D is necessarily != C in this case,
    and the check in (5) must fail.
    
    An alternative fix would be to do refcounting on task_struct.  This
    would result in each CPU holding a reference to the last task whose
    fpsimd state was loaded there.  It's not clear whether this is
    preferable, and it involves higher overhead than the fix proposed
    in this patch.  It would also move all the task_struct freeing
    work into the context switch critical section, or otherwise some
    deferred cleanup mechanism would need to be introduced, neither of
    which seems obviously justified.
    
    Fixes: 005f78cd8849 ("arm64: defer reloading a task's FPSIMD state to userland resume")
    Signed-off-by: Dave Martin <Dave.Martin@arm.com>
    Reviewed-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    [will: word-smithed the comment so it makes more sense]
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 477b837533a2f592702d2affab36b8052691287b
Author: Andrew Honig <ahonig@google.com>
Date:   Fri Dec 1 10:21:09 2017 -0800

    KVM: VMX: remove I/O port 0x80 bypass on Intel hosts
    
    commit d59d51f088014f25c2562de59b9abff4f42a7468 upstream.
    
    This fixes CVE-2017-1000407.
    
    KVM allows guests to directly access I/O port 0x80 on Intel hosts.  If
    the guest floods this port with writes it generates exceptions and
    instability in the host kernel, leading to a crash.  With this change
    guest writes to port 0x80 on Intel will behave the same as they
    currently behave on AMD systems.
    
    Prevent the flooding by removing the code that sets port 0x80 as a
    passthrough port.  This is essentially the same as upstream patch
    99f85a28a78e96d28907fe036e1671a218fee597, except that patch was
    for AMD chipsets and this patch is for Intel.
    
    Signed-off-by: Andrew Honig <ahonig@google.com>
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Fixes: fdef3ad1b386 ("KVM: VMX: Enable io bitmaps to avoid IO port 0x80 VMEXITs")
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11030654676b284c1cd49fa020dd7316bd958a4e
Author: Kristina Martsenko <kristina.martsenko@arm.com>
Date:   Thu Nov 16 17:58:20 2017 +0000

    arm64: KVM: fix VTTBR_BADDR_MASK BUG_ON off-by-one
    
    commit 26aa7b3b1c0fb3f1a6176a0c1847204ef4355693 upstream.
    
    VTTBR_BADDR_MASK is used to sanity check the size and alignment of the
    VTTBR address. It seems to currently be off by one, thereby only
    allowing up to 47-bit addresses (instead of 48-bit) and also
    insufficiently checking the alignment. This patch fixes it.
    
    As an example, with 4k pages, before this patch we have:
    
      PHYS_MASK_SHIFT = 48
      VTTBR_X = 37 - 24 = 13
      VTTBR_BADDR_SHIFT = 13 - 1 = 12
      VTTBR_BADDR_MASK = ((1 << 35) - 1) << 12 = 0x00007ffffffff000
    
    Which is wrong, because the mask doesn't allow bit 47 of the VTTBR
    address to be set, and only requires the address to be 12-bit (4k)
    aligned, while it actually needs to be 13-bit (8k) aligned because we
    concatenate two 4k tables.
    
    With this patch, the mask becomes 0x0000ffffffffe000, which is what we
    want.
    
    Fixes: 0369f6a34b9f ("arm64: KVM: EL2 register definitions")
    Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Reviewed-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Kristina Martsenko <kristina.martsenko@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0b99544dde83fa9e53a40c47c5478fefc9c0683
Author: Laurent Caumont <lcaumont2@gmail.com>
Date:   Sat Nov 11 12:44:46 2017 -0500

    media: dvb: i2c transfers over usb cannot be done from stack
    
    commit 6d33377f2abbf9f0e561b116dd468d1c3ff36a6a upstream.
    
    Signed-off-by: Laurent Caumont <lcaumont2@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81bf294f5f7b7668576f6857fa7fd67b42e58153
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed Nov 22 14:14:47 2017 +0100

    drm/exynos: gem: Drop NONCONTIG flag for buffers allocated without IOMMU
    
    commit 120a264f9c2782682027d931d83dcbd22e01da80 upstream.
    
    When no IOMMU is available, all GEM buffers allocated by Exynos DRM driver
    are contiguous, because of the underlying dma_alloc_attrs() function
    provides only such buffers. In such case it makes no sense to keep
    BO_NONCONTIG flag for the allocated GEM buffers. This allows to avoid
    failures for buffer contiguity checks in the subsequent operations on GEM
    objects.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74b6030355a45a0c01f7f928e8c24c74be823dda
Author: Dave Gordon <david.s.gordon@intel.com>
Date:   Thu Aug 18 18:17:22 2016 +0100

    drm: extra printk() wrapper macros
    
    commit 30b0da8d556e65ff935a56cd82c05ba0516d3e4a upstream.
    
    We had only DRM_INFO() and DRM_ERROR(), whereas the underlying printk()
    provides several other useful intermediate levels such as NOTICE and
    WARNING. So this patch fills out the set by providing both regular and
    once-only macros for each of the levels INFO, NOTICE, and WARNING, using
    a common underlying macro that does all the token-pasting.
    
    DRM_ERROR is unchanged, as it's not just a printk wrapper.
    
    v2:
        Fix whitespace, missing ## (Eric Engestrom)
    
    Signed-off-by: Dave Gordon <david.s.gordon@intel.com>
    Reviewed-by: Eric Engestrom <eric.engestrom@imgtec.com>
    Cc: dri-devel@lists.freedesktop.org
    Acked-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6ff4cce9aa3a8b2b6076785723ac387cfe0454c
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Mon Mar 2 14:13:36 2015 +0000

    kdb: Fix handling of kallsyms_symbol_next() return value
    
    commit c07d35338081d107e57cf37572d8cc931a8e32e2 upstream.
    
    kallsyms_symbol_next() returns a boolean (true on success). Currently
    kdb_read() tests the return value with an inequality that
    unconditionally evaluates to true.
    
    This is fixed in the obvious way and, since the conditional branch is
    supposed to be unreachable, we also add a WARN_ON().
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb47cf7f8e470a1af81a43cb6910c0626169a9b6
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Wed Dec 6 16:11:27 2017 +0100

    s390: fix compat system call table
    
    commit e779498df587dd2189b30fe5b9245aefab870eb8 upstream.
    
    When wiring up the socket system calls the compat entries were
    incorrectly set. Not all of them point to the corresponding compat
    wrapper functions, which clear the upper 33 bits of user space
    pointers, like it is required.
    
    Fixes: 977108f89c989 ("s390: wire up separate socketcalls system calls")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc41b6e35f9379399443785165cba97e1f46ab37
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Thu Sep 28 15:14:01 2017 +0100

    iommu/vt-d: Fix scatterlist offset handling
    
    commit 29a90b70893817e2f2bb3cea40a29f5308e21b21 upstream.
    
    The intel-iommu DMA ops fail to correctly handle scatterlists where
    sg->offset is greater than PAGE_SIZE - the IOVA allocation is computed
    appropriately based on the page-aligned portion of the offset, but the
    mapping is set up relative to sg->page, which means it fails to actually
    cover the whole buffer (and in the worst case doesn't cover it at all):
    
        (sg->dma_address + sg->dma_len) ----+
        sg->dma_address ---------+          |
        iov_pfn------+           |          |
                     |           |          |
                     v           v          v
    iova:   a        b        c        d        e        f
            |--------|--------|--------|--------|--------|
                              <...calculated....>
                     [_____mapped______]
    pfn:    0        1        2        3        4        5
            |--------|--------|--------|--------|--------|
                     ^           ^          ^
                     |           |          |
        sg->page ----+           |          |
        sg->offset --------------+          |
        (sg->offset + sg->length) ----------+
    
    As a result, the caller ends up overrunning the mapping into whatever
    lies beyond, which usually goes badly:
    
    [  429.645492] DMAR: DRHD: handling fault status reg 2
    [  429.650847] DMAR: [DMA Write] Request device [02:00.4] fault addr f2682000 ...
    
    Whilst this is a fairly rare occurrence, it can happen from the result
    of intermediate scatterlist processing such as scatterwalk_ffwd() in the
    crypto layer. Whilst that particular site could be fixed up, it still
    seems worthwhile to bring intel-iommu in line with other DMA API
    implementations in handling this robustly.
    
    To that end, fix the intel_map_sg() path to line up the mapping
    correctly (in units of MM pages rather than VT-d pages to match the
    aligned_nrpages() calculation) regardless of the offset, and use
    sg_phys() consistently for clarity.
    
    Reported-by: Harsh Jain <Harsh@chelsio.com>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Reviewed by: Ashok Raj <ashok.raj@intel.com>
    Tested by: Jacob Pan <jacob.jun.pan@intel.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90a20a81dc1c05ceb8dc215d9e475b5cc66241a8
Author: Jaejoong Kim <climbbb.kim@gmail.com>
Date:   Mon Dec 4 15:31:49 2017 +0900

    ALSA: usb-audio: Add check return value for usb_string()
    
    commit 89b89d121ffcf8d9546633b98ded9d18b8f75891 upstream.
    
    snd_usb_copy_string_desc() returns zero if usb_string() fails.
    In case of failure, we need to check the snd_usb_copy_string_desc()'s
    return value and add an exception case
    
    Signed-off-by: Jaejoong Kim <climbbb.kim@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f5c6b108850b020b74175b8aa0cec88303869cf
Author: Jaejoong Kim <climbbb.kim@gmail.com>
Date:   Mon Dec 4 15:31:48 2017 +0900

    ALSA: usb-audio: Fix out-of-bound error
    
    commit 251552a2b0d454badc8f486e6d79100970c744b0 upstream.
    
    The snd_usb_copy_string_desc() retrieves the usb string corresponding to
    the index number through the usb_string(). The problem is that the
    usb_string() returns the length of the string (>= 0) when successful, but
    it can also return a negative value about the error case or status of
    usb_control_msg().
    
    If iClockSource is '0' as shown below, usb_string() will returns -EINVAL.
    This will result in '0' being inserted into buf[-22], and the following
    KASAN out-of-bound error message will be output.
    
    AudioControl Interface Descriptor:
      bLength                 8
      bDescriptorType        36
      bDescriptorSubtype     10 (CLOCK_SOURCE)
      bClockID                1
      bmAttributes         0x07 Internal programmable Clock (synced to SOF)
      bmControls           0x07
      Clock Frequency Control (read/write)
      Clock Validity Control (read-only)
      bAssocTerminal          0
      iClockSource            0
    
    To fix it, check usb_string()'return value and bail out.
    
    ==================================================================
    BUG: KASAN: stack-out-of-bounds in parse_audio_unit+0x1327/0x1960 [snd_usb_audio]
    Write of size 1 at addr ffff88007e66735a by task systemd-udevd/18376
    
    CPU: 0 PID: 18376 Comm: systemd-udevd Not tainted 4.13.0+ #3
    Hardware name: LG Electronics                   15N540-RFLGL/White Tip Mountain, BIOS 15N5
    Call Trace:
    dump_stack+0x63/0x8d
    print_address_description+0x70/0x290
    ? parse_audio_unit+0x1327/0x1960 [snd_usb_audio]
    kasan_report+0x265/0x350
    __asan_store1+0x4a/0x50
    parse_audio_unit+0x1327/0x1960 [snd_usb_audio]
    ? save_stack+0xb5/0xd0
    ? save_stack_trace+0x1b/0x20
    ? save_stack+0x46/0xd0
    ? kasan_kmalloc+0xad/0xe0
    ? kmem_cache_alloc_trace+0xff/0x230
    ? snd_usb_create_mixer+0xb0/0x4b0 [snd_usb_audio]
    ? usb_audio_probe+0x4de/0xf40 [snd_usb_audio]
    ? usb_probe_interface+0x1f5/0x440
    ? driver_probe_device+0x3ed/0x660
    ? build_feature_ctl+0xb10/0xb10 [snd_usb_audio]
    ? save_stack_trace+0x1b/0x20
    ? init_object+0x69/0xa0
    ? snd_usb_find_csint_desc+0xa8/0xf0 [snd_usb_audio]
    snd_usb_mixer_controls+0x1dc/0x370 [snd_usb_audio]
    ? build_audio_procunit+0x890/0x890 [snd_usb_audio]
    ? snd_usb_create_mixer+0xb0/0x4b0 [snd_usb_audio]
    ? kmem_cache_alloc_trace+0xff/0x230
    ? usb_ifnum_to_if+0xbd/0xf0
    snd_usb_create_mixer+0x25b/0x4b0 [snd_usb_audio]
    ? snd_usb_create_stream+0x255/0x2c0 [snd_usb_audio]
    usb_audio_probe+0x4de/0xf40 [snd_usb_audio]
    ? snd_usb_autosuspend.part.7+0x30/0x30 [snd_usb_audio]
    ? __pm_runtime_idle+0x90/0x90
    ? kernfs_activate+0xa6/0xc0
    ? usb_match_one_id_intf+0xdc/0x130
    ? __pm_runtime_set_status+0x2d4/0x450
    usb_probe_interface+0x1f5/0x440
    
    Signed-off-by: Jaejoong Kim <climbbb.kim@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1d3b7d04d9d01e856b808a85a637ab693a5c6ad
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 30 10:08:28 2017 +0100

    ALSA: seq: Remove spurious WARN_ON() at timer check
    
    commit 43a3542870328601be02fcc9d27b09db467336ef upstream.
    
    The use of snd_BUG_ON() in ALSA sequencer timer may lead to a spurious
    WARN_ON() when a slave timer is deployed as its backend and a
    corresponding master timer stops meanwhile.  The symptom was triggered
    by syzkaller spontaneously.
    
    Since the NULL timer is valid there, rip off snd_BUG_ON().
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 659e7d2588f0fd970044fe00d9edeb482d375288
Author: Robb Glasser <rglasser@google.com>
Date:   Tue Dec 5 09:16:55 2017 -0800

    ALSA: pcm: prevent UAF in snd_pcm_info
    
    commit 362bca57f5d78220f8b5907b875961af9436e229 upstream.
    
    When the device descriptor is closed, the `substream->runtime` pointer
    is freed. But another thread may be in the ioctl handler, case
    SNDRV_CTL_IOCTL_PCM_INFO. This case calls snd_pcm_info_user() which
    calls snd_pcm_info() which accesses the now freed `substream->runtime`.
    
    Note: this fixes CVE-2017-0861
    
    Signed-off-by: Robb Glasser <rglasser@google.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5986c9685f1e53c20e6a5ddd9f39020d8634fc62
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Dec 1 15:08:12 2017 +0100

    x86/PCI: Make broadcom_postcore_init() check acpi_disabled
    
    commit ddec3bdee05b06f1dda20ded003c3e10e4184cab upstream.
    
    acpi_os_get_root_pointer() may return a valid address even if acpi_disabled
    is set, but the host bridge information from the ACPI tables is not going
    to be used in that case and the Broadcom host bridge initialization should
    not be skipped then, So make broadcom_postcore_init() check acpi_disabled
    too to avoid this issue.
    
    Fixes: 6361d72b04d1 (x86/PCI: read Broadcom CNB20LE host bridge info before PCI scan)
    Reported-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Linux PCI <linux-pci@vger.kernel.org>
    Link: https://lkml.kernel.org/r/3186627.pxZj1QbYNg@aspire.rjw.lan
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c2e4b7d279ac624c12a9d6612cd22d62462223e
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:27 2017 +0000

    X.509: reject invalid BIT STRING for subjectPublicKey
    
    commit 0f30cbea005bd3077bd98cd29277d7fc2699c1da upstream.
    
    Adding a specially crafted X.509 certificate whose subjectPublicKey
    ASN.1 value is zero-length caused x509_extract_key_data() to set the
    public key size to SIZE_MAX, as it subtracted the nonexistent BIT STRING
    metadata byte.  Then, x509_cert_parse() called kmemdup() with that bogus
    size, triggering the WARN_ON_ONCE() in kmalloc_slab().
    
    This appears to be harmless, but it still must be fixed since WARNs are
    never supposed to be user-triggerable.
    
    Fix it by updating x509_cert_parse() to validate that the value has a
    BIT STRING metadata byte, and that the byte is 0 which indicates that
    the number of bits in the bitstring is a multiple of 8.
    
    It would be nice to handle the metadata byte in asn1_ber_decoder()
    instead.  But that would be tricky because in the general case a BIT
    STRING could be implicitly tagged, and/or could legitimately have a
    length that is not a whole number of bytes.
    
    Here was the WARN (cleaned up slightly):
    
        WARNING: CPU: 1 PID: 202 at mm/slab_common.c:971 kmalloc_slab+0x5d/0x70 mm/slab_common.c:971
        Modules linked in:
        CPU: 1 PID: 202 Comm: keyctl Tainted: G    B            4.14.0-09238-g1d3b78bbc6e9 #26
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-20171110_100015-anatol 04/01/2014
        task: ffff880033014180 task.stack: ffff8800305c8000
        Call Trace:
         __do_kmalloc mm/slab.c:3706 [inline]
         __kmalloc_track_caller+0x22/0x2e0 mm/slab.c:3726
         kmemdup+0x17/0x40 mm/util.c:118
         kmemdup include/linux/string.h:414 [inline]
         x509_cert_parse+0x2cb/0x620 crypto/asymmetric_keys/x509_cert_parser.c:106
         x509_key_preparse+0x61/0x750 crypto/asymmetric_keys/x509_public_key.c:174
         asymmetric_key_preparse+0xa4/0x150 crypto/asymmetric_keys/asymmetric_type.c:388
         key_create_or_update+0x4d4/0x10a0 security/keys/key.c:850
         SYSC_add_key security/keys/keyctl.c:122 [inline]
         SyS_add_key+0xe8/0x290 security/keys/keyctl.c:62
         entry_SYSCALL_64_fastpath+0x1f/0x96
    
    Fixes: 42d5ec27f873 ("X.509: Add an ASN.1 decoder")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1471d125892123b1a204f425952b86a8f86264b8
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:27 2017 +0000

    ASN.1: check for error from ASN1_OP_END__ACT actions
    
    commit 81a7be2cd69b412ab6aeacfe5ebf1bb6e5bce955 upstream.
    
    asn1_ber_decoder() was ignoring errors from actions associated with the
    opcodes ASN1_OP_END_SEQ_ACT, ASN1_OP_END_SET_ACT,
    ASN1_OP_END_SEQ_OF_ACT, and ASN1_OP_END_SET_OF_ACT.  In practice, this
    meant the pkcs7_note_signed_info() action (since that was the only user
    of those opcodes).  Fix it by checking for the error, just like the
    decoder does for actions associated with the other opcodes.
    
    This bug allowed users to leak slab memory by repeatedly trying to add a
    specially crafted "pkcs7_test" key (requires CONFIG_PKCS7_TEST_KEY).
    
    In theory, this bug could also be used to bypass module signature
    verification, by providing a PKCS#7 message that is misparsed such that
    a signature's ->authattrs do not contain its ->msgdigest.  But it
    doesn't seem practical in normal cases, due to restrictions on the
    format of the ->authattrs.
    
    Fixes: 42d5ec27f873 ("X.509: Add an ASN.1 decoder")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 621dac1d699106265f3245fe9f6dd2ca2adbe518
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 8 15:13:27 2017 +0000

    ASN.1: fix out-of-bounds read when parsing indefinite length item
    
    commit e0058f3a874ebb48b25be7ff79bc3b4e59929f90 upstream.
    
    In asn1_ber_decoder(), indefinitely-sized ASN.1 items were being passed
    to the action functions before their lengths had been computed, using
    the bogus length of 0x80 (ASN1_INDEFINITE_LENGTH).  This resulted in
    reading data past the end of the input buffer, when given a specially
    crafted message.
    
    Fix it by rearranging the code so that the indefinite length is resolved
    before the action is called.
    
    This bug was originally found by fuzzing the X.509 parser in userspace
    using libFuzzer from the LLVM project.
    
    KASAN report (cleaned up slightly):
    
        BUG: KASAN: slab-out-of-bounds in memcpy ./include/linux/string.h:341 [inline]
        BUG: KASAN: slab-out-of-bounds in x509_fabricate_name.constprop.1+0x1a4/0x940 crypto/asymmetric_keys/x509_cert_parser.c:366
        Read of size 128 at addr ffff880035dd9eaf by task keyctl/195
    
        CPU: 1 PID: 195 Comm: keyctl Not tainted 4.14.0-09238-g1d3b78bbc6e9 #26
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-20171110_100015-anatol 04/01/2014
        Call Trace:
         __dump_stack lib/dump_stack.c:17 [inline]
         dump_stack+0xd1/0x175 lib/dump_stack.c:53
         print_address_description+0x78/0x260 mm/kasan/report.c:252
         kasan_report_error mm/kasan/report.c:351 [inline]
         kasan_report+0x23f/0x350 mm/kasan/report.c:409
         memcpy+0x1f/0x50 mm/kasan/kasan.c:302
         memcpy ./include/linux/string.h:341 [inline]
         x509_fabricate_name.constprop.1+0x1a4/0x940 crypto/asymmetric_keys/x509_cert_parser.c:366
         asn1_ber_decoder+0xb4a/0x1fd0 lib/asn1_decoder.c:447
         x509_cert_parse+0x1c7/0x620 crypto/asymmetric_keys/x509_cert_parser.c:89
         x509_key_preparse+0x61/0x750 crypto/asymmetric_keys/x509_public_key.c:174
         asymmetric_key_preparse+0xa4/0x150 crypto/asymmetric_keys/asymmetric_type.c:388
         key_create_or_update+0x4d4/0x10a0 security/keys/key.c:850
         SYSC_add_key security/keys/keyctl.c:122 [inline]
         SyS_add_key+0xe8/0x290 security/keys/keyctl.c:62
         entry_SYSCALL_64_fastpath+0x1f/0x96
    
        Allocated by task 195:
         __do_kmalloc_node mm/slab.c:3675 [inline]
         __kmalloc_node+0x47/0x60 mm/slab.c:3682
         kvmalloc ./include/linux/mm.h:540 [inline]
         SYSC_add_key security/keys/keyctl.c:104 [inline]
         SyS_add_key+0x19e/0x290 security/keys/keyctl.c:62
         entry_SYSCALL_64_fastpath+0x1f/0x96
    
    Fixes: 42d5ec27f873 ("X.509: Add an ASN.1 decoder")
    Reported-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 481efb4c7256bb5516287c46f8315a56c65b9dbb
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Dec 6 09:50:08 2017 +0000

    efi: Move some sysfs files to be read-only by root
    
    commit af97a77bc01ce49a466f9d4c0125479e2e2230b6 upstream.
    
    Thanks to the scripts/leaking_addresses.pl script, it was found that
    some EFI values should not be readable by non-root users.
    
    So make them root-only, and to do that, add a __ATTR_RO_MODE() macro to
    make this easier, and use it in other places at the same time.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Tested-by: Dave Young <dyoung@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Link: http://lkml.kernel.org/r/20171206095010.24170-2-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e0091c2951fa831992d2f00e4453951d84a58b6
Author: Huacai Chen <chenhc@lemote.com>
Date:   Tue Nov 21 14:23:39 2017 +0100

    scsi: libsas: align sata_device's rps_resp on a cacheline
    
    commit c2e8fbf908afd81ad502b567a6639598f92c9b9d upstream.
    
    The rps_resp buffer in ata_device is a DMA target, but it isn't
    explicitly cacheline aligned. Due to this, adjacent fields can be
    overwritten with stale data from memory on non-coherent architectures.
    As a result, the kernel is sometimes unable to communicate with an SATA
    device behind a SAS expander.
    
    Fix this by ensuring that the rps_resp buffer is cacheline aligned.
    
    This issue is similar to that fixed by Commit 84bda12af31f93 ("libata:
    align ap->sector_buf") and Commit 4ee34ea3a12396f35b26 ("libata: Align
    ata_device's id on a cacheline").
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98448333588c4a516a44e31d3ffcce4c3406a3b7
Author: William Breathitt Gray <vilhelm.gray@gmail.com>
Date:   Wed Nov 8 10:23:11 2017 -0500

    isa: Prevent NULL dereference in isa_bus driver callbacks
    
    commit 5a244727f428a06634f22bb890e78024ab0c89f3 upstream.
    
    The isa_driver structure for an isa_bus device is stored in the device
    platform_data member of the respective device structure. This
    platform_data member may be reset to NULL if isa_driver match callback
    for the device fails, indicating a device unsupported by the ISA driver.
    
    This patch fixes a possible NULL pointer dereference if one of the
    isa_driver callbacks to attempted for an unsupported device. This error
    should not occur in practice since ISA devices are typically manually
    configured and loaded by the users, but we may as well prevent this
    error from popping up for the 0day testers.
    
    Fixes: a5117ba7da37 ("[PATCH] Driver model: add ISA bus")
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90e2ea6dc851a3c92f160684591856da43b27bf2
Author: Paul Meyer <Paul.Meyer@microsoft.com>
Date:   Tue Nov 14 13:06:47 2017 -0700

    hv: kvp: Avoid reading past allocated blocks from KVP file
    
    commit 297d6b6e56c2977fc504c61bbeeaa21296923f89 upstream.
    
    While reading in more than one block (50) of KVP records, the allocation
    goes per block, but the reads used the total number of allocated records
    (without resetting the pointer/stream). This causes the records buffer to
    overrun when the refresh reads more than one block over the previous
    capacity (e.g. reading more than 100 KVP records whereas the in-memory
    database was empty before).
    
    Fix this by reading the correct number of KVP records from file each time.
    
    Signed-off-by: Paul Meyer <Paul.Meyer@microsoft.com>
    Signed-off-by: Long Li <longli@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94739ddf35cba7c4002489f212186010888b421e
Author: weiping zhang <zwp10758@gmail.com>
Date:   Wed Nov 29 09:23:01 2017 +0800

    virtio: release virtio index when fail to device_register
    
    commit e60ea67bb60459b95a50a156296041a13e0e380e upstream.
    
    index can be reused by other virtio device.
    
    Signed-off-by: weiping zhang <zhangweiping@didichuxing.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d73fcef16da050b6a6db8c86d8f4a69836d9b5e7
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:50 2017 -0800

    can: usb_8dev: cancel urb on -EPIPE and -EPROTO
    
    commit 12147edc434c9e4c7c2f5fee2e5519b2e5ac34ce upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 191b419bd0b11d8ec204f0bbd9e0f930f099a386
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:48 2017 -0800

    can: esd_usb2: cancel urb on -EPIPE and -EPROTO
    
    commit 7a31ced3de06e9878e4f9c3abe8f87d9344d8144 upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af11f3afc2c2557fcc66b2649ef251e99253e51a
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:47 2017 -0800

    can: ems_usb: cancel urb on -EPIPE and -EPROTO
    
    commit bd352e1adfe0d02d3ea7c8e3fb19183dc317e679 upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd424bd1757291ba95c4c47f35ea5c955a4b3e42
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:49 2017 -0800

    can: kvaser_usb: cancel urb on -EPIPE and -EPROTO
    
    commit 6aa8d5945502baf4687d80de59b7ac865e9e666b upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e3dabd83630a66def375442c55fc78b9723e81a
Author: Jimmy Assarsson <jimmyassarsson@gmail.com>
Date:   Tue Nov 21 08:22:28 2017 +0100

    can: kvaser_usb: ratelimit errors if incomplete messages are received
    
    commit 8bd13bd522ff7dfa0eb371921aeb417155f7a3be upstream.
    
    Avoid flooding the kernel log with "Formate error", if incomplete message
    are received.
    
    Signed-off-by: Jimmy Assarsson <jimmyassarsson@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 816bc7dffea2cfe58802b1699a2e7aa6d6c7a2bd
Author: Jimmy Assarsson <jimmyassarsson@gmail.com>
Date:   Tue Nov 21 08:22:27 2017 +0100

    can: kvaser_usb: Fix comparison bug in kvaser_usb_read_bulk_callback()
    
    commit e84f44eb5523401faeb9cc1c97895b68e3cfb78d upstream.
    
    The conditon in the while-loop becomes true when actual_length is less than
    2 (MSG_HEADER_LEN). In best case we end up with a former, already
    dispatched msg, that got msg->len greater than actual_length. This will
    result in a "Format error" error printout.
    
    Problem seen when unplugging a Kvaser USB device connected to a vbox guest.
    
    warning: comparison between signed and unsigned integer expressions
    [-Wsign-compare]
    
    Signed-off-by: Jimmy Assarsson <jimmyassarsson@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6fa54c18e8d9060ed666ec0a597efbb8698fc7c
Author: Jimmy Assarsson <jimmyassarsson@gmail.com>
Date:   Tue Nov 21 08:22:26 2017 +0100

    can: kvaser_usb: free buf in error paths
    
    commit 435019b48033138581a6171093b181fc6b4d3d30 upstream.
    
    The allocated buffer was not freed if usb_submit_urb() failed.
    
    Signed-off-by: Jimmy Assarsson <jimmyassarsson@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a68e3c90dfb169af592849066c43d6e003e61bc4
Author: Oliver Stäbler <oliver.staebler@bytesatwork.ch>
Date:   Mon Nov 20 14:45:15 2017 +0100

    can: ti_hecc: Fix napi poll return value for repoll
    
    commit f6c23b174c3c96616514827407769cbcfc8005cf upstream.
    
    After commit d75b1ade567f ("net: less interrupt masking in NAPI") napi
    repoll is done only when work_done == budget.
    So we need to return budget if there are still packets to receive.
    
    Signed-off-by: Oliver Stäbler <oliver.staebler@bytesatwork.ch>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
