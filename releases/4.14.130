commit bc2bccef19ee4353d759a12950088b968b5c6618
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Jun 25 11:36:55 2019 +0800

    Linux 4.14.130

commit 02eeea5b49649467a7dafdbca9377218547697c1
Author: Jouni Malinen <j@w1.fi>
Date:   Tue May 28 01:46:43 2019 +0300

    mac80211: Do not use stack memory with scatterlist for GMAC
    
    commit a71fd9dac23613d96ba3c05619a8ef4fd6cdf9b9 upstream.
    
    ieee80211_aes_gmac() uses the mic argument directly in sg_set_buf() and
    that does not allow use of stack memory (e.g., BUG_ON() is hit in
    sg_set_buf() with CONFIG_DEBUG_SG). BIP GMAC TX side is fine for this
    since it can use the skb data buffer, but the RX side was using a stack
    variable for deriving the local MIC value to compare against the
    received one.
    
    Fix this by allocating heap memory for the mic buffer.
    
    This was found with hwsim test case ap_cipher_bip_gmac_128 hitting that
    BUG_ON() and kernel panic.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Jouni Malinen <j@w1.fi>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e669f9c50a05c184e8746c751817514d9ddd0e4e
Author: Yu Wang <yyuwang@codeaurora.org>
Date:   Fri May 10 17:04:52 2019 +0800

    mac80211: handle deauthentication/disassociation from TDLS peer
    
    commit 79c92ca42b5a3e0ea172ea2ce8df8e125af237da upstream.
    
    When receiving a deauthentication/disassociation frame from a TDLS
    peer, a station should not disconnect the current AP, but only
    disable the current TDLS link if it's enabled.
    
    Without this change, a TDLS issue can be reproduced by following the
    steps as below:
    
    1. STA-1 and STA-2 are connected to AP, bidirection traffic is running
       between STA-1 and STA-2.
    2. Set up TDLS link between STA-1 and STA-2, stay for a while, then
       teardown TDLS link.
    3. Repeat step #2 and monitor the connection between STA and AP.
    
    During the test, one STA may send a deauthentication/disassociation
    frame to another, after TDLS teardown, with reason code 6/7, which
    means: Class 2/3 frame received from nonassociated STA.
    
    On receive this frame, the receiver STA will disconnect the current
    AP and then reconnect. It's not a expected behavior, purpose of this
    frame should be disabling the TDLS link, not the link with AP.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Yu Wang <yyuwang@codeaurora.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a680d6e5441400b768d6e6cfe5524726ebd6b7f
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Feb 13 15:13:30 2019 +0100

    mac80211: drop robust management frames from unknown TA
    
    commit 588f7d39b3592a36fb7702ae3b8bdd9be4621e2f upstream.
    
    When receiving a robust management frame, drop it if we don't have
    rx->sta since then we don't have a security association and thus
    couldn't possibly validate the frame.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf85d4d0796431666bac45eb61c37a68883b9a48
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Jun 10 13:02:19 2019 -0700

    cfg80211: fix memory leak of wiphy device name
    
    commit 4f488fbca2a86cc7714a128952eead92cac279ab upstream.
    
    In wiphy_new_nm(), if an error occurs after dev_set_name() and
    device_initialize() have already been called, it's necessary to call
    put_device() (via wiphy_free()) to avoid a memory leak.
    
    Reported-by: syzbot+7fddca22578bc67c3fe4@syzkaller.appspotmail.com
    Fixes: 1f87f7d3a3b4 ("cfg80211: add rfkill support")
    Cc: stable@vger.kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f49898960a6c1090d5a14ba67026666a8a5693c1
Author: Steve French <stfrench@microsoft.com>
Date:   Mon Jun 17 14:49:07 2019 -0500

    SMB3: retry on STATUS_INSUFFICIENT_RESOURCES instead of failing write
    
    commit 8d526d62db907e786fd88948c75d1833d82bd80e upstream.
    
    Some servers such as Windows 10 will return STATUS_INSUFFICIENT_RESOURCES
    as the number of simultaneous SMB3 requests grows (even though the client
    has sufficient credits).  Return EAGAIN on STATUS_INSUFFICIENT_RESOURCES
    so that we can retry writes which fail with this status code.
    
    This (for example) fixes large file copies to Windows 10 on fast networks.
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    CC: Stable <stable@vger.kernel.org>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fd49b11c8f7c0bf1f018144266cd6c1de1e6056
Author: Marcel Holtmann <marcel@holtmann.org>
Date:   Sat Jun 22 15:47:01 2019 +0200

    Bluetooth: Fix regression with minimum encryption key size alignment
    
    commit 693cd8ce3f882524a5d06f7800dd8492411877b3 upstream.
    
    When trying to align the minimum encryption key size requirement for
    Bluetooth connections, it turns out doing this in a central location in
    the HCI connection handling code is not possible.
    
    Original Bluetooth version up to 2.0 used a security model where the
    L2CAP service would enforce authentication and encryption.  Starting
    with Bluetooth 2.1 and Secure Simple Pairing that model has changed into
    that the connection initiator is responsible for providing an encrypted
    ACL link before any L2CAP communication can happen.
    
    Now connecting Bluetooth 2.1 or later devices with Bluetooth 2.0 and
    before devices are causing a regression.  The encryption key size check
    needs to be moved out of the HCI connection handling into the L2CAP
    channel setup.
    
    To achieve this, the current check inside hci_conn_security() has been
    moved into l2cap_check_enc_key_size() helper function and then called
    from four decisions point inside L2CAP to cover all combinations of
    Secure Simple Pairing enabled devices and device using legacy pairing
    and legacy service security model.
    
    Fixes: d5bb334a8e17 ("Bluetooth: Align minimum encryption key size for LE and BR/EDR connections")
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=203643
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49fa199baf54e6dd0592d47ecb0c8de5c94684bd
Author: Marcel Holtmann <marcel@holtmann.org>
Date:   Wed Apr 24 22:19:17 2019 +0200

    Bluetooth: Align minimum encryption key size for LE and BR/EDR connections
    
    commit d5bb334a8e171b262e48f378bd2096c0ea458265 upstream.
    
    The minimum encryption key size for LE connections is 56 bits and to
    align LE with BR/EDR, enforce 56 bits of minimum encryption key size for
    BR/EDR connections as well.
    
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c0f4895dce86accb1190bc2c29cfa09ef2acfdd
Author: Faiz Abbas <faiz_abbas@ti.com>
Date:   Thu May 2 14:17:48 2019 +0530

    ARM: dts: am57xx-idk: Remove support for voltage switching for SD card
    
    commit 88a748419b84187fd1da05637b8e5928b04a1e06 upstream.
    
    If UHS speed modes are enabled, a compatible SD card switches down to
    1.8V during enumeration. If after this a software reboot/crash takes
    place and on-chip ROM tries to enumerate the SD card, the difference in
    IO voltages (host @ 3.3V and card @ 1.8V) may end up damaging the card.
    
    The fix for this is to have support for power cycling the card in
    hardware (with a PORz/soft-reset line causing a power cycle of the
    card). Since am571x-, am572x- and am574x-idk don't have this
    capability, disable voltage switching for these boards.
    
    The major effect of this is that the maximum supported speed
    mode is now high speed(50 MHz) down from SDR104(200 MHz).
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Faiz Abbas <faiz_abbas@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0278bdc9ae0687adc50eb6bf6e49d2bd70972102
Author: Fabio Estevam <festevam@gmail.com>
Date:   Mon May 13 00:15:31 2019 -0300

    ARM: imx: cpuidle-imx6sx: Restrict the SW2ISO increase to i.MX6SX
    
    commit b25af2ff7c07bd19af74e3f64ff82e2880d13d81 upstream.
    
    Since commit 1e434b703248 ("ARM: imx: update the cpu power up timing
    setting on i.mx6sx") some characters loss is noticed on i.MX6ULL UART
    as reported by Christoph Niedermaier.
    
    The intention of such commit was to increase the SW2ISO field for i.MX6SX
    only, but since cpuidle-imx6sx is also used on i.MX6UL/i.MX6ULL this caused
    unintended side effects on other SoCs.
    
    Fix this problem by keeping the original SW2ISO value for i.MX6UL/i.MX6ULL
    and only increase SW2ISO in the i.MX6SX case.
    
    Cc: stable@vger.kernel.org
    Fixes: 1e434b703248 ("ARM: imx: update the cpu power up timing setting on i.mx6sx")
    Reported-by: Christoph Niedermaier <cniedermaier@dh-electronics.com>
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Tested-by: SÃ©bastien Szymanski <sebastien.szymanski@armadeus.com>
    Tested-by: Christoph Niedermaier <cniedermaier@dh-electronics.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a40222841938bf162d11ba855a3cb8a7e0cddb57
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Jun 13 00:21:40 2019 +0530

    powerpc/bpf: use unsigned division instruction for 64-bit operations
    
    commit 758f2046ea040773ae8ea7f72dd3bbd8fa984501 upstream.
    
    BPF_ALU64 div/mod operations are currently using signed division, unlike
    BPF_ALU32 operations. Fix the same. DIV64 and MOD64 overflow tests pass
    with this fix.
    
    Fixes: 156d0e290e969c ("powerpc/ebpf/jit: Implement JIT compiler for extended BPF")
    Cc: stable@vger.kernel.org # v4.8+
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ef48fdde36790c6331e5b8629c758a1f2c74856
Author: Willem de Bruijn <willemb@google.com>
Date:   Fri Jun 7 16:46:07 2019 -0400

    can: purge socket error queue on sock destruct
    
    commit fd704bd5ee749d560e86c4f1fd2ef486d8abf7cf upstream.
    
    CAN supports software tx timestamps as of the below commit. Purge
    any queued timestamp packets on socket destroy.
    
    Fixes: 51f31cabe3ce ("ip: support for TX timestamps on UDP and RAW sockets")
    Reported-by: syzbot+a90604060cb40f5bdd16@syzkaller.appspotmail.com
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66a60fda031c1c91f0ba1026ed76d6006a2cb81d
Author: Joakim Zhang <qiangqing.zhang@nxp.com>
Date:   Thu Jan 31 09:37:22 2019 +0000

    can: flexcan: fix timeout when set small bitrate
    
    commit 247e5356a709eb49a0d95ff2a7f07dac05c8252c upstream.
    
    Current we can meet timeout issue when setting a small bitrate like
    10000 as follows on i.MX6UL EVK board (ipg clock = 66MHZ, per clock =
    30MHZ):
    
    | root@imx6ul7d:~# ip link set can0 up type can bitrate 10000
    
    A link change request failed with some changes committed already.
    Interface can0 may have been left with an inconsistent configuration,
    please check.
    
    | RTNETLINK answers: Connection timed out
    
    It is caused by calling of flexcan_chip_unfreeze() timeout.
    
    Originally the code is using usleep_range(10, 20) for unfreeze
    operation, but the patch (8badd65 can: flexcan: avoid calling
    usleep_range from interrupt context) changed it into udelay(10) which is
    only a half delay of before, there're also some other delay changes.
    
    After double to FLEXCAN_TIMEOUT_US to 100 can fix the issue.
    
    Meanwhile, Rasmus Villemoes reported that even with a timeout of 100,
    flexcan_probe() fails on the MPC8309, which requires a value of at least
    140 to work reliably. 250 works for everyone.
    
    Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
    Reviewed-by: Dong Aisheng <aisheng.dong@nxp.com>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1eb2215413e601cb7a745ddfc10a0ae68a0de91a
Author: Naohiro Aota <naohiro.aota@wdc.com>
Date:   Thu Jun 6 16:54:44 2019 +0900

    btrfs: start readahead also in seed devices
    
    commit c4e0540d0ad49c8ceab06cceed1de27c4fe29f6e upstream.
    
    Currently, btrfs does not consult seed devices to start readahead. As a
    result, if readahead zone is added to the seed devices, btrfs_reada_wait()
    indefinitely wait for the reada_ctl to finish.
    
    You can reproduce the hung by modifying btrfs/163 to have larger initial
    file size (e.g. xfs_io pwrite 4M instead of current 256K).
    
    Fixes: 7414a03fbf9e ("btrfs: initial readahead code and prototypes")
    Cc: stable@vger.kernel.org # 3.2+: ce7791ffee1e: Btrfs: fix race between readahead and device replace/removal
    Cc: stable@vger.kernel.org # 3.2+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Naohiro Aota <naohiro.aota@wdc.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74c0cf1368ef8ffcb1cd80128108042edcc2a123
Author: Jaesoo Lee <jalee@purestorage.com>
Date:   Mon Jun 3 16:42:28 2019 -0700

    nvme: Fix u32 overflow in the number of namespace list calculation
    
    [ Upstream commit c8e8c77b3bdbade6e26e8e76595f141ede12b692 ]
    
    The Number of Namespaces (nn) field in the identify controller data structure is
    defined as u32 and the maximum allowed value in NVMe specification is
    0xFFFFFFFEUL. This change fixes the possible overflow of the DIV_ROUND_UP()
    operation used in nvme_scan_ns_list() by casting the nn to u64.
    
    Signed-off-by: Jaesoo Lee <jalee@purestorage.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8953143e35a92b82fec039fe96108c72463a4a7d
Author: Robert Hancock <hancock@sedsystems.ca>
Date:   Wed Jun 5 13:49:00 2019 -0600

    hwmon: (pmbus/core) Treat parameters as paged if on multiple pages
    
    [ Upstream commit 4a60570dce658e3f8885bbcf852430b99f65aca5 ]
    
    Some chips have attributes which exist on more than one page but the
    attribute is not presently marked as paged. This causes the attributes
    to be generated with the same label, which makes it impossible for
    userspace to tell them apart.
    
    Marking all such attributes as paged would result in the page suffix
    being added regardless of whether they were present on more than one
    page or not, which might break existing setups. Therefore, we add a
    second check which treats the attribute as paged, even if not marked as
    such, if it is present on multiple pages.
    
    Fixes: b4ce237b7f7d ("hwmon: (pmbus) Introduce infrastructure to detect sensors and limit registers")
    Signed-off-by: Robert Hancock <hancock@sedsystems.ca>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c50023277970f07bce8e7487e43cb53ced2ab5a
Author: Eduardo Valentin <eduval@amazon.com>
Date:   Wed May 29 19:56:04 2019 -0700

    hwmon: (core) add thermal sensors only if dev->of_node is present
    
    [ Upstream commit c41dd48e21fae3e55b3670ccf2eb562fc1f6a67d ]
    
    Drivers may register to hwmon and request for also registering
    with the thermal subsystem (HWMON_C_REGISTER_TZ). However,
    some of these driver, e.g. marvell phy, may be probed from
    Device Tree or being dynamically allocated, and in the later
    case, it will not have a dev->of_node entry.
    
    Registering with hwmon without the dev->of_node may result in
    different outcomes depending on the device tree, which may
    be a bit misleading. If the device tree blob has no 'thermal-zones'
    node, the *hwmon_device_register*() family functions are going
    to gracefully succeed, because of-thermal,
    *thermal_zone_of_sensor_register() return -ENODEV in this case,
    and the hwmon error path handles this error code as success to
    cover for the case where CONFIG_THERMAL_OF is not set.
    However, if the device tree blob has the 'thermal-zones'
    entry, the *hwmon_device_register*() will always fail on callers
    with no dev->of_node, propagating -EINVAL.
    
    If dev->of_node is not present, calling of-thermal does not
    make sense. For this reason, this patch checks first if the
    device has a of_node before going over the process of registering
    with the thermal subsystem of-thermal interface. And in this case,
    when a caller of *hwmon_device_register*() with HWMON_C_REGISTER_TZ
    and no dev->of_node will still register with hwmon, but not with
    the thermal subsystem. If all the hwmon part bits are in place,
    the registration will succeed.
    
    Fixes: d560168b5d0f ("hwmon: (core) New hwmon registration API")
    Cc: Jean Delvare <jdelvare@suse.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: linux-hwmon@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Eduardo Valentin <eduval@amazon.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78c4d1d9c67d33131f02df01ed204dd2f88596c4
Author: Alexandra Winter <wintera@linux.ibm.com>
Date:   Wed Jun 5 13:48:50 2019 +0200

    s390/qeth: fix VLAN attribute in bridge_hostnotify udev event
    
    [ Upstream commit 335726195e460cb6b3f795b695bfd31f0ea70ef0 ]
    
    Enabling sysfs attribute bridge_hostnotify triggers a series of udev events
    for the MAC addresses of all currently connected peers. In case no VLAN is
    set for a peer, the device reports the corresponding MAC addresses with
    VLAN ID 4096. This currently results in attribute VLAN=4096 for all
    non-VLAN interfaces in the initial series of events after host-notify is
    enabled.
    
    Instead, no VLAN attribute should be reported in the udev event for
    non-VLAN interfaces.
    
    Only the initial events face this issue. For dynamic changes that are
    reported later, the device uses a validity flag.
    
    This also changes the code so that it now sets the VLAN attribute for
    MAC addresses with VID 0. On Linux, no qeth interface will ever be
    registered with VID 0: Linux kernel registers VID 0 on all network
    interfaces initially, but qeth will drop .ndo_vlan_rx_add_vid for VID 0.
    Peers with other OSs could register MACs with VID 0.
    
    Fixes: 9f48b9db9a22 ("qeth: bridgeport support - address notifications")
    Signed-off-by: Alexandra Winter <wintera@linux.ibm.com>
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61b8237c719a629e71d10339d71b1e65410c0573
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Tue Jun 4 06:07:34 2019 +0000

    net: ipvlan: Fix ipvlan device tso disabled while NETIF_F_IP_CSUM is set
    
    [ Upstream commit ceae266bf0ae6564ac16d086bf749a096fa90ded ]
    
    There's some NICs, such as hinic, with NETIF_F_IP_CSUM and NETIF_F_TSO
    on but NETIF_F_HW_CSUM off. And ipvlan device features will be
    NETIF_F_TSO on with NETIF_F_IP_CSUM and NETIF_F_IP_CSUM both off as
    IPVLAN_FEATURES only care about NETIF_F_HW_CSUM. So TSO will be
    disabled in netdev_fix_features.
    For example:
    Features for enp129s0f0:
    rx-checksumming: on
    tx-checksumming: on
            tx-checksum-ipv4: on
            tx-checksum-ip-generic: off [fixed]
            tx-checksum-ipv6: on
    
    Fixes: a188222b6ed2 ("net: Rename NETIF_F_ALL_CSUM to NETIF_F_CSUM_MASK")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 569899ffe1b416c8fd4c5a99a02eb452c139440e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed May 29 14:07:39 2019 +0300

    scsi: smartpqi: unlock on error in pqi_submit_raid_request_synchronous()
    
    [ Upstream commit cc8f52609bb4177febade24d11713e20c0893b0a ]
    
    We need to drop the "ctrl_info->sync_request_sem" lock before returning.
    
    Fixes: 6c223761eb54 ("smartpqi: initial commit of Microsemi smartpqi driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Don Brace <don.brace@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c27a9807d67ec5fa1073a8848e136357c70a96a3
Author: Avri Altman <avri.altman@wdc.com>
Date:   Tue May 21 11:24:22 2019 +0300

    scsi: ufs: Check that space was properly alloced in copy_query_response
    
    [ Upstream commit 1c90836f70f9a8ef7b7ad9e1fdd8961903e6ced6 ]
    
    struct ufs_dev_cmd is the main container that supports device management
    commands. In the case of a read descriptor request, we assume that the
    proper space was allocated in dev_cmd to hold the returning descriptor.
    
    This is no longer true, as there are flows that doesn't use dev_cmd for
    device management requests, and was wrong in the first place.
    
    Fixes: d44a5f98bb49 (ufs: query descriptor API)
    Signed-off-by: Avri Altman <avri.altman@wdc.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Acked-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fea6066fb52c89f48307218de209a85d7c56e38
Author: George G. Davis <george_davis@mentor.com>
Date:   Mon Jun 3 10:30:39 2019 -0400

    scripts/checkstack.pl: Fix arm64 wrong or unknown architecture
    
    [ Upstream commit 4f45d62a52297b10ded963412a158685647ecdec ]
    
    The following error occurs for the `make ARCH=arm64 checkstack` case:
    
    aarch64-linux-gnu-objdump -d vmlinux $(find . -name '*.ko') | \
    perl ./scripts/checkstack.pl arm64
    wrong or unknown architecture "arm64"
    
    As suggested by Masahiro Yamada, fix the above error using regular
    expressions in the same way it was fixed for the `ARCH=x86` case via
    commit fda9f9903be6 ("scripts/checkstack.pl: automatically handle
    32-bit and 64-bit mode for ARCH=x86").
    
    Suggested-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: George G. Davis <george_davis@mentor.com>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1268f8b6b7910abf334200c9c1afa773b25c6874
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Fri May 17 17:37:22 2019 +0100

    drm/arm/hdlcd: Allow a bit of clock tolerance
    
    [ Upstream commit 1c810739097fdeb31b393b67a0a1e3d7ffdd9f63 ]
    
    On the Arm Juno platform, the HDLCD pixel clock is constrained to 250KHz
    resolution in order to avoid the tiny System Control Processor spending
    aeons trying to calculate exact PLL coefficients. This means that modes
    like my oddball 1600x1200 with 130.89MHz clock get rejected since the
    rate cannot be matched exactly. In practice, though, this mode works
    quite happily with the clock at 131MHz, so let's relax the check to
    allow a little bit of slop.
    
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Liviu Dudau <liviu.dudau@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 301f9d04c5909193b564718f7330ffae50b27eef
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Fri May 17 17:37:21 2019 +0100

    drm/arm/hdlcd: Actually validate CRTC modes
    
    [ Upstream commit b96151edced4edb6a18aa89a5fa02c7066efff45 ]
    
    Rather than allowing any old mode through, then subsequently refusing
    unmatchable clock rates in atomic_check when it's too late to back out
    and pick a different mode, let's do that validation up-front where it
    will cause unsupported modes to be correctly pruned in the first place.
    
    This also eliminates an issue whereby a perceived clock rate of 0 would
    cause atomic disable to fail and prevent the module from being unloaded.
    
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Liviu Dudau <liviu.dudau@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd8020337b26f2bcb8b753ee2fa61e0624872638
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Sat Jun 1 08:16:27 2019 +0800

    net: ethernet: mediatek: Use NET_IP_ALIGN to judge if HW RX_2BYTE_OFFSET is enabled
    
    [ Upstream commit 880c2d4b2fdfd580ebcd6bb7240a8027a1d34751 ]
    
    Should only enable HW RX_2BYTE_OFFSET function in the case NET_IP_ALIGN
    equals to 2.
    
    Signed-off-by: Mark Lee <mark-mc.lee@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b0b65efdd1ccb51ed56bdcf38c202f3580c7e6d
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Sat Jun 1 08:16:26 2019 +0800

    net: ethernet: mediatek: Use hw_feature to judge if HWLRO is supported
    
    [ Upstream commit 9e4f56f1a7f3287718d0083b5cb85298dc05a5fd ]
    
    Should hw_feature as hardware capability flags to check if hardware LRO
    got support.
    
    Signed-off-by: Mark Lee <mark-mc.lee@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d52a68399b71044e44977f007dcf3bedf5119b1d
Author: Young Xiao <92siuyang@gmail.com>
Date:   Wed May 29 10:21:48 2019 +0800

    sparc: perf: fix updated event period in response to PERF_EVENT_IOC_PERIOD
    
    [ Upstream commit 56cd0aefa475079e9613085b14a0f05037518fed ]
    
    The PERF_EVENT_IOC_PERIOD ioctl command can be used to change the
    sample period of a running perf_event. Consequently, when calculating
    the next event period, the new period will only be considered after the
    previous one has overflowed.
    
    This patch changes the calculation of the remaining event ticks so that
    they are offset if the period has changed.
    
    See commit 3581fe0ef37c ("ARM: 7556/1: perf: fix updated event period in
    response to PERF_EVENT_IOC_PERIOD") for details.
    
    Signed-off-by: Young Xiao <92siuyang@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1013624a8adb9caa83b4c9f487778c7b51467a0
Author: Gen Zhang <blackgod016574@gmail.com>
Date:   Fri May 31 09:24:18 2019 +0800

    mdesc: fix a missing-check bug in get_vdev_port_node_info()
    
    [ Upstream commit 80caf43549e7e41a695c6d1e11066286538b336f ]
    
    In get_vdev_port_node_info(), 'node_info->vdev_port.name' is allcoated
    by kstrdup_const(), and it returns NULL when fails. So
    'node_info->vdev_port.name' should be checked.
    
    Signed-off-by: Gen Zhang <blackgod016574@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4855c94b529e70e49a287a33de0aeb9d7c2e9264
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Fri May 31 16:59:50 2019 +0800

    net: hns: Fix loopback test failed at copper ports
    
    [ Upstream commit 2e1f164861e500f4e068a9d909bbd3fcc7841483 ]
    
    When doing a loopback test at copper ports, the serdes loopback
    and the phy loopback will fail, because of the adjust link had
    not finished, and phy not ready.
    
    Adds sleep between adjust link and test process to fix it.
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26c2e190fd52385a7b7f1407dc16478ed1698b20
Author: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
Date:   Fri May 31 10:35:14 2019 +0300

    net: dsa: mv88e6xxx: avoid error message on remove from VLAN 0
    
    [ Upstream commit 62394708f3e01c9f2be6be74eb6305bae1ed924f ]
    
    When non-bridged, non-vlan'ed mv88e6xxx port is moving down, error
    message is logged:
    
    failed to kill vid 0081/0 for device eth_cu_1000_4
    
    This is caused by call from __vlan_vid_del() with vin set to zero, over
    call chain this results into _mv88e6xxx_port_vlan_del() called with
    vid=0, and mv88e6xxx_vtu_get() called from there returns -EINVAL.
    
    On symmetric path moving port up, call goes through
    mv88e6xxx_port_vlan_prepare() that calls mv88e6xxx_port_check_hw_vlan()
    that returns -EOPNOTSUPP for zero vid.
    
    This patch changes mv88e6xxx_vtu_get() to also return -EOPNOTSUPP for
    zero vid, then this error code is explicitly cleared in
    dsa_slave_vlan_rx_kill_vid() and error message is no longer logged.
    
    Signed-off-by: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
    Reviewed-by: Vivien Didelot <vivien.didelot@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 194c5725cd28b6ce63c6e84814e445ac79ff22c2
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Thu May 30 05:41:38 2019 -0700

    xtensa: Fix section mismatch between memblock_reserve and mem_reserve
    
    [ Upstream commit adefd051a6707a6ca0ebad278d3c1c05c960fc3b ]
    
    Since commit 9012d011660ea5cf2 ("compiler: allow all arches to enable
    CONFIG_OPTIMIZE_INLINING"), xtensa:tinyconfig fails to build with section
    mismatch errors.
    
    WARNING: vmlinux.o(.text.unlikely+0x68): Section mismatch in reference
            from the function ___pa()
            to the function .meminit.text:memblock_reserve()
    WARNING: vmlinux.o(.text.unlikely+0x74): Section mismatch in reference
            from the function mem_reserve()
            to the function .meminit.text:memblock_reserve()
    FATAL: modpost: Section mismatches detected.
    
    This was not seen prior to the above mentioned commit because mem_reserve()
    was always inlined.
    
    Mark mem_reserve(() as __init_memblock to have it reside in the same
    section as memblock_reserve().
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Message-Id: <1559220098-9955-1-git-send-email-linux@roeck-us.net>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77862490bd9cf624da74c2449141d97ca644c282
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Sat May 25 20:20:24 2019 +0800

    MIPS: uprobes: remove set but not used variable 'epc'
    
    [ Upstream commit f532beeeff0c0a3586cc15538bc52d249eb19e7c ]
    
    Fixes gcc '-Wunused-but-set-variable' warning:
    
    arch/mips/kernel/uprobes.c: In function 'arch_uprobe_pre_xol':
    arch/mips/kernel/uprobes.c:115:17: warning: variable 'epc' set but not used [-Wunused-but-set-variable]
    
    It's never used since introduction in
    commit 40e084a506eb ("MIPS: Add uprobes support.")
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: <ralf@linux-mips.org>
    Cc: <jhogan@kernel.org>
    Cc: <linux-kernel@vger.kernel.org>
    Cc: <linux-mips@vger.kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27300b189c4d1bf785b71894d451b16f0b65acd0
Author: Kamenee Arumugam <kamenee.arumugam@intel.com>
Date:   Fri May 24 11:45:04 2019 -0400

    IB/hfi1: Validate page aligned for a given virtual address
    
    [ Upstream commit 97736f36dbebf2cda2799db3b54717ba5b388255 ]
    
    User applications can register memory regions for TID buffers that are not
    aligned on page boundaries. Hfi1 is expected to pin those pages in memory
    and cache the pages with mmu_rb. The rb tree will fail to insert pages
    that are not aligned correctly.
    
    Validate whether a given virtual address is page aligned before pinning.
    
    Fixes: 7e7a436ecb6e ("staging/hfi1: Add TID entry program function body")
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Kamenee Arumugam <kamenee.arumugam@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af538eeefc03955ef6912225acddad95395b2ab4
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Fri May 24 11:44:51 2019 -0400

    IB/{qib, hfi1, rdmavt}: Correct ibv_devinfo max_mr value
    
    [ Upstream commit 35164f5259a47ea756fa1deb3e463ac2a4f10dc9 ]
    
    The command 'ibv_devinfo -v' reports 0 for max_mr.
    
    Fix by assigning the query values after the mr lkey_table has been built
    rather than early on in the driver.
    
    Fixes: 7b1e2099adc8 ("IB/rdmavt: Move memory registration into rdmavt")
    Reviewed-by: Josh Collier <josh.d.collier@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04e9b055ae828f8fe14d3f7b1d690d10fbc20f12
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Fri May 24 11:44:45 2019 -0400

    IB/hfi1: Insure freeze_work work_struct is canceled on shutdown
    
    [ Upstream commit 6d517353c70bb0818b691ca003afdcb5ee5ea44e ]
    
    By code inspection, the freeze_work is never canceled.
    
    Fix by adding a cancel_work_sync in the shutdown path to insure it is no
    longer running.
    
    Fixes: 7724105686e7 ("IB/hfi1: add driver files")
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89dd40e0d1ac158c4b13f55125d14fbc6b5736a5
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Fri May 24 11:44:38 2019 -0400

    IB/rdmavt: Fix alloc_qpn() WARN_ON()
    
    [ Upstream commit 2abae62a26a265129b364d8c1ef3be55e2c01309 ]
    
    The qpn allocation logic has a WARN_ON() that intends to detect the use of
    an index that will introduce bits in the lower order bits of the QOS bits
    in the QPN.
    
    Unfortunately, it has the following bugs:
    - it misfires when wrapping QPN allocation for non-QOS
    - it doesn't correctly detect low order QOS bits (despite the comment)
    
    The WARN_ON() should not be applied to non-QOS (qos_shift == 1).
    
    Additionally, it SHOULD test the qpn bits per the table below:
    
    2 data VLs:   [qp7, qp6, qp5, qp4, qp3, qp2, qp1] ^
                  [  0,   0,   0,   0,   0,   0, sc0],  qp bit 1 always 0*
    3-4 data VLs: [qp7, qp6, qp5, qp4, qp3, qp2, qp1] ^
                  [  0,   0,   0,   0,   0, sc1, sc0], qp bits [21] always 0
    5-8 data VLs: [qp7, qp6, qp5, qp4, qp3, qp2, qp1] ^
                  [  0,   0,   0,   0, sc2, sc1, sc0] qp bits [321] always 0
    
    Fix by qualifying the warning for qos_shift > 1 and producing the correct
    mask to insure the above bits are zero without generating a superfluous
    warning.
    
    Fixes: 501edc42446e ("IB/rdmavt: Correct warning during QPN allocation")
    Reviewed-by: Kaike Wan <kaike.wan@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56fc13864109d3b4d28cd56b57e42783265f53f7
Author: Helge Deller <deller@gmx.de>
Date:   Fri May 24 23:16:25 2019 +0200

    parisc: Fix compiler warnings in float emulation code
    
    [ Upstream commit 6b98d9134e14f5ef4bcf64b27eedf484ed19a1ec ]
    
    Avoid such compiler warnings:
    arch/parisc/math-emu/cnv_float.h:71:27: warning: â<<â in boolean context, did you mean â<â ? [-Wint-in-bool-context]
         ((Dintp1(dint_valueA) << 33 - SGL_EXP_LENGTH) || Dintp2(dint_valueB))
    arch/parisc/math-emu/fcnvxf.c:257:6: note: in expansion of macro âDint_isinexact_to_sglâ
      if (Dint_isinexact_to_sgl(srcp1,srcp2)) {
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38ea8c0429a750ad4905c7e0edad442a02518cb4
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue May 14 23:24:37 2019 +0800

    parport: Fix mem leak in parport_register_dev_model
    
    [ Upstream commit 1c7ebeabc9e5ee12e42075a597de40fdb9059530 ]
    
    BUG: memory leak
    unreferenced object 0xffff8881df48cda0 (size 16):
      comm "syz-executor.0", pid 5077, jiffies 4295994670 (age 22.280s)
      hex dump (first 16 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<00000000d2d0d5fe>] parport_register_dev_model+0x141/0x6e0 [parport]
        [<00000000782f6dab>] 0xffffffffc15d1196
        [<00000000d2ca6ae4>] platform_drv_probe+0x7e/0x100
        [<00000000628c2a94>] really_probe+0x342/0x4d0
        [<000000006874f5da>] driver_probe_device+0x8c/0x170
        [<00000000424de37a>] __device_attach_driver+0xda/0x100
        [<000000002acab09a>] bus_for_each_drv+0xfe/0x170
        [<000000003d9e5f31>] __device_attach+0x190/0x230
        [<0000000035d32f80>] bus_probe_device+0x123/0x140
        [<00000000a05ba627>] device_add+0x7cc/0xce0
        [<000000003f7560bf>] platform_device_add+0x230/0x3c0
        [<000000002a0be07d>] 0xffffffffc15d0949
        [<000000007361d8d2>] port_check+0x3b/0x50 [parport]
        [<000000004d67200f>] bus_for_each_dev+0x115/0x180
        [<000000003ccfd11c>] __parport_register_driver+0x1f0/0x210 [parport]
        [<00000000987f06fc>] 0xffffffffc15d803e
    
    After commit 4e5a74f1db8d ("parport: Revert "parport: fix
    memory leak""), free_pardevice do not free par_dev->state,
    we should free it in error path of parport_register_dev_model
    before return.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: 4e5a74f1db8d ("parport: Revert "parport: fix memory leak"")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b8b3dddf5eb20263b5a63e25da563c19392cacd
Author: Jose Abreu <joabreu@synopsys.com>
Date:   Mon May 20 15:43:13 2019 +0200

    ARC: [plat-hsdk]: Add missing FIFO size entry in GMAC node
    
    [ Upstream commit 4c70850aeb2e40016722cd1abd43c679666d3ca0 ]
    
    Add the binding for RX/TX fifo size of GMAC node.
    
    Cc: Joao Pinto <jpinto@synopsys.com>
    Cc: Rob Herring <robh+dt@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Tested-by: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
    Acked-by: Alexey Brodkin <abrodkin@synopsys.com>
    Signed-off-by: Jose Abreu <joabreu@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e96749cee80f830ee2f03244df4302b67e4b21c1
Author: Jose Abreu <joabreu@synopsys.com>
Date:   Mon May 20 15:43:12 2019 +0200

    ARC: [plat-hsdk]: Add missing multicast filter bins number to GMAC node
    
    [ Upstream commit ecc906a11c2a0940e1a380debd8bd5bc09faf454 ]
    
    GMAC controller on HSDK boards supports 256 Hash Table size so we need to
    add the multicast filter bins property. This allows for the Hash filter
    to work properly using stmmac driver.
    
    Cc: Joao Pinto <jpinto@synopsys.com>
    Cc: Rob Herring <robh+dt@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
    Acked-by: Alexey Brodkin <abrodkin@synopsys.com>
    Signed-off-by: Jose Abreu <joabreu@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 743e95fe15d8d45212641f2193d455d45461c52e
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Tue May 7 10:45:24 2019 -0700

    ARC: fix build warnings
    
    [ Upstream commit 89c92142f75eb80064f5b9f1111484b1b4d81790 ]
    
    | arch/arc/mm/tlb.c:914:2: warning: variable length array 'pd0' is used [-Wvla]
    | arch/arc/include/asm/cmpxchg.h:95:29: warning: value computed is not used [-Wunused-value]
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4758984fa3ba0b1ac39687750e74ca0350ada753
Author: Jann Horn <jannh@google.com>
Date:   Tue May 28 17:32:26 2019 +0200

    apparmor: enforce nullbyte at end of tag string
    
    commit 8404d7a674c49278607d19726e0acc0cae299357 upstream.
    
    A packed AppArmor policy contains null-terminated tag strings that are read
    by unpack_nameX(). However, unpack_nameX() uses string functions on them
    without ensuring that they are actually null-terminated, potentially
    leading to out-of-bounds accesses.
    
    Make sure that the tag string is null-terminated before passing it to
    strcmp().
    
    Cc: stable@vger.kernel.org
    Fixes: 736ec752d95e ("AppArmor: policy routines for loading and unpacking policy")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fadee027bf8fa90f3057a98a89871cbe8dd4adf5
Author: Andrey Smirnov <andrew.smirnov@gmail.com>
Date:   Thu May 23 12:55:26 2019 -0700

    Input: uinput - add compat ioctl number translation for UI_*_FF_UPLOAD
    
    commit 7c7da40da1640ce6814dab1e8031b44e19e5a3f6 upstream.
    
    In the case of compat syscall ioctl numbers for UI_BEGIN_FF_UPLOAD and
    UI_END_FF_UPLOAD need to be adjusted before being passed on
    uinput_ioctl_handler() since code built with -m32 will be passing
    slightly different values. Extend the code already covering
    UI_SET_PHYS to cover UI_BEGIN_FF_UPLOAD and UI_END_FF_UPLOAD as well.
    
    Reported-by: Pierre-Loup A. Griffais <pgriffais@valvesoftware.com>
    Signed-off-by: Andrey Smirnov <andrew.smirnov@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f21813e88df200c5df155decf17c8e396dcfe66b
Author: Alexander Mikhaylenko <exalm7659@gmail.com>
Date:   Wed Jun 12 14:59:46 2019 -0700

    Input: synaptics - enable SMBus on ThinkPad E480 and E580
    
    commit 9843f3e08e2144724be7148e08d77a195dea257a upstream.
    
    They are capable of using intertouch and it works well with
    psmouse.synaptics_intertouch=1, so add them to the list.
    
    Without it, scrolling and gestures are jumpy, three-finger pinch gesture
    doesn't work and three- or four-finger swipes sometimes get stuck.
    
    Signed-off-by: Alexander Mikhaylenko <exalm7659@gmail.com>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ca76ee9ff945d7c723743542a23fdc124859229
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Fri Jun 14 12:32:32 2019 -0400

    IB/hfi1: Silence txreq allocation warnings
    
    commit 3230f4a8d44e4a0bb7afea814b280b5129521f52 upstream.
    
    The following warning can happen when a memory shortage
    occurs during txreq allocation:
    
    [10220.939246] SLUB: Unable to allocate memory on node -1, gfp=0xa20(GFP_ATOMIC)
    [10220.939246] Hardware name: Intel Corporation S2600WT2R/S2600WT2R, BIOS SE5C610.86B.01.01.0018.C4.072020161249 07/20/2016
    [10220.939247]   cache: mnt_cache, object size: 384, buffer size: 384, default order: 2, min order: 0
    [10220.939260] Workqueue: hfi0_0 _hfi1_do_send [hfi1]
    [10220.939261]   node 0: slabs: 1026568, objs: 43115856, free: 0
    [10220.939262] Call Trace:
    [10220.939262]   node 1: slabs: 820872, objs: 34476624, free: 0
    [10220.939263]  dump_stack+0x5a/0x73
    [10220.939265]  warn_alloc+0x103/0x190
    [10220.939267]  ? wake_all_kswapds+0x54/0x8b
    [10220.939268]  __alloc_pages_slowpath+0x86c/0xa2e
    [10220.939270]  ? __alloc_pages_nodemask+0x2fe/0x320
    [10220.939271]  __alloc_pages_nodemask+0x2fe/0x320
    [10220.939273]  new_slab+0x475/0x550
    [10220.939275]  ___slab_alloc+0x36c/0x520
    [10220.939287]  ? hfi1_make_rc_req+0x90/0x18b0 [hfi1]
    [10220.939299]  ? __get_txreq+0x54/0x160 [hfi1]
    [10220.939310]  ? hfi1_make_rc_req+0x90/0x18b0 [hfi1]
    [10220.939312]  __slab_alloc+0x40/0x61
    [10220.939323]  ? hfi1_make_rc_req+0x90/0x18b0 [hfi1]
    [10220.939325]  kmem_cache_alloc+0x181/0x1b0
    [10220.939336]  hfi1_make_rc_req+0x90/0x18b0 [hfi1]
    [10220.939348]  ? hfi1_verbs_send_dma+0x386/0xa10 [hfi1]
    [10220.939359]  ? find_prev_entry+0xb0/0xb0 [hfi1]
    [10220.939371]  hfi1_do_send+0x1d9/0x3f0 [hfi1]
    [10220.939372]  process_one_work+0x171/0x380
    [10220.939374]  worker_thread+0x49/0x3f0
    [10220.939375]  kthread+0xf8/0x130
    [10220.939377]  ? max_active_store+0x80/0x80
    [10220.939378]  ? kthread_bind+0x10/0x10
    [10220.939379]  ret_from_fork+0x35/0x40
    [10220.939381] SLUB: Unable to allocate memory on node -1, gfp=0xa20(GFP_ATOMIC)
    
    The shortage is handled properly so the message isn't needed. Silence by
    adding the no warn option to the slab allocation.
    
    Fixes: 45842abbb292 ("staging/rdma/hfi1: move txreq header code")
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c4e24a69a88f0c8293136fa472f812791a66f56
Author: Peter Chen <peter.chen@nxp.com>
Date:   Mon Jun 17 09:49:07 2019 +0800

    usb: chipidea: udc: workaround for endpoint conflict issue
    
    commit c19dffc0a9511a7d7493ec21019aefd97e9a111b upstream.
    
    An endpoint conflict occurs when the USB is working in device mode
    during an isochronous communication. When the endpointA IN direction
    is an isochronous IN endpoint, and the host sends an IN token to
    endpointA on another device, then the OUT transaction may be missed
    regardless the OUT endpoint number. Generally, this occurs when the
    device is connected to the host through a hub and other devices are
    connected to the same hub.
    
    The affected OUT endpoint can be either control, bulk, isochronous, or
    an interrupt endpoint. After the OUT endpoint is primed, if an IN token
    to the same endpoint number on another device is received, then the OUT
    endpoint may be unprimed (cannot be detected by software), which causes
    this endpoint to no longer respond to the host OUT token, and thus, no
    corresponding interrupt occurs.
    
    There is no good workaround for this issue, the only thing the software
    could do is numbering isochronous IN from the highest endpoint since we
    have observed most of device number endpoint from the lowest.
    
    Cc: <stable@vger.kernel.org> #v3.14+
    Cc: Fabio Estevam <festevam@gmail.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Cc: Jun Li <jun.li@nxp.com>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73e3c601e9dc28a01c5087f4056c8bd89f4c582b
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Wed Jun 12 23:19:05 2019 +0800

    scsi: ufs: Avoid runtime suspend possibly being blocked forever
    
    commit 24e2e7a19f7e4b83d0d5189040d997bce3596473 upstream.
    
    UFS runtime suspend can be triggered after pm_runtime_enable() is invoked
    in ufshcd_pltfrm_init(). However if the first runtime suspend is triggered
    before binding ufs_hba structure to ufs device structure via
    platform_set_drvdata(), then UFS runtime suspend will be no longer
    triggered in the future because its dev->power.runtime_error was set in the
    first triggering and does not have any chance to be cleared.
    
    To be more clear, dev->power.runtime_error is set if hba is NULL in
    ufshcd_runtime_suspend() which returns -EINVAL to rpm_callback() where
    dev->power.runtime_error is set as -EINVAL. In this case, any future
    rpm_suspend() for UFS device fails because rpm_check_suspend_allowed()
    fails due to non-zero
    dev->power.runtime_error.
    
    To resolve this issue, make sure the first UFS runtime suspend get valid
    "hba" in ufshcd_runtime_suspend(): Enable UFS runtime PM only after hba is
    successfully bound to UFS device structure.
    
    Fixes: 62694735ca95 ([SCSI] ufs: Add runtime PM support for UFS host controller driver)
    Cc: stable@vger.kernel.org
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d48a494f0d0a065720b59f1d4aa5c0db7a314856
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Tue Jun 18 14:05:17 2019 +0200

    mmc: core: Prevent processing SDIO IRQs when the card is suspended
    
    commit 83293386bc95cf5e9f0c0175794455835bd1cb4a upstream.
    
    Processing of SDIO IRQs must obviously be prevented while the card is
    system suspended, otherwise we may end up trying to communicate with an
    uninitialized SDIO card.
    
    Reports throughout the years shows that this is not only a theoretical
    problem, but a real issue. So, let's finally fix this problem, by keeping
    track of the state for the card and bail out before processing the SDIO
    IRQ, in case the card is suspended.
    
    Cc: stable@vger.kernel.org
    Reported-by: Douglas Anderson <dianders@chromium.org>
    Tested-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e18364239cc036f28933479c9155d9edf55ca9d4
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Fri Mar 2 15:08:39 2018 -0800

    net: phy: broadcom: Use strlcpy() for ethtool::get_strings
    
    commit 8a17eefa235f73b60c0ca7d397d2e4f66f85f413 upstream.
    
    Our statistics strings are allocated at initialization without being
    bound to a specific size, yet, we would copy ETH_GSTRING_LEN bytes using
    memcpy() which would create out of bounds accesses, this was flagged by
    KASAN. Replace this with strlcpy() to make sure we are bound the source
    buffer size and we also always NUL-terminate strings.
    
    Fixes: 820ee17b8d3b ("net: phy: broadcom: Add support code for reading PHY counters")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e69458509d2acebb1297753d0320ff2e8ce5f64
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 1 11:05:41 2019 -0700

    gcc-9: silence 'address-of-packed-member' warning
    
    commit 6f303d60534c46aa1a239f29c321f95c83dda748 upstream.
    
    We already did this for clang, but now gcc has that warning too.  Yes,
    yes, the address may be unaligned.  And that's kind of the point.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1a58e1bcad882ea08778320147c7ef9118f704f
Author: Allan Xavier <allan.x.xavier@oracle.com>
Date:   Fri Sep 7 08:12:01 2018 -0500

    objtool: Support per-function rodata sections
    
    commit 4a60aa05a0634241ce17f957bf9fb5ac1eed6576 upstream.
    
    Add support for processing switch jump tables in objects with multiple
    .rodata sections, such as those created by '-ffunction-sections' and
    '-fdata-sections'.  Currently, objtool always looks in .rodata for jump
    table information, which results in many "sibling call from callable
    instruction with modified stack frame" warnings with objects compiled
    using those flags.
    
    The fix is comprised of three parts:
    
    1. Flagging all .rodata sections when importing ELF information for
       easier checking later.
    
    2. Keeping a reference to the section each relocation is from in order
       to get the list_head for the other relocations in that section.
    
    3. Finding jump tables by following relocations to .rodata sections,
       rather than always referencing a single global .rodata section.
    
    The patch has been tested without data sections enabled and no
    differences in the resulting orc unwind information were seen.
    
    Note that as objtool adds terminators to end of each .text section the
    unwind information generated between a function+data sections build and
    a normal build aren't directly comparable. Manual inspection suggests
    that objtool is now generating the correct information, or at least
    making more of an effort to do so than it did previously.
    
    Signed-off-by: Allan Xavier <allan.x.xavier@oracle.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lkml.kernel.org/r/099bdc375195c490dda04db777ee0b95d566ded1.1536325914.git.jpoimboe@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50bbae7dad924ed0cf214b128f654a229930a549
Author: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
Date:   Thu May 23 14:45:35 2019 +0200

    tracing: Silence GCC 9 array bounds warning
    
    commit 0c97bf863efce63d6ab7971dad811601e6171d2f upstream.
    
    Starting with GCC 9, -Warray-bounds detects cases when memset is called
    starting on a member of a struct but the size to be cleared ends up
    writing over further members.
    
    Such a call happens in the trace code to clear, at once, all members
    after and including `seq` on struct trace_iterator:
    
        In function 'memset',
            inlined from 'ftrace_dump' at kernel/trace/trace.c:8914:3:
        ./include/linux/string.h:344:9: warning: '__builtin_memset' offset
        [8505, 8560] from the object at 'iter' is out of the bounds of
        referenced subobject 'seq' with type 'struct trace_seq' at offset
        4368 [-Warray-bounds]
          344 |  return __builtin_memset(p, c, size);
              |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    In order to avoid GCC complaining about it, we compute the address
    ourselves by adding the offsetof distance instead of referring
    directly to the member.
    
    Since there are two places doing this clear (trace.c and trace_kdb.c),
    take the chance to move the workaround into a single place in
    the internal header.
    
    Link: http://lkml.kernel.org/r/20190523124535.GA12931@gmail.com
    
    Signed-off-by: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
    [ Removed unnecessary parenthesis around "iter" ]
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
