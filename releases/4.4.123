commit 3753696b0aee3f3f55e161ef41d2cb0ea7e6e225
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Mar 22 09:23:32 2018 +0100

    Linux 4.4.123

commit a6132276ab5dcc38b3299082efeb25b948263adb
Author: Jann Horn <jannh@google.com>
Date:   Mon Mar 19 17:55:52 2018 +0100

    bpf: fix incorrect sign extension in check_alu_op()
    
    commit 95a762e2c8c942780948091f8f2a4f32fce1ac6f upstream.
    
    Distinguish between
    BPF_ALU64|BPF_MOV|BPF_K (load 32-bit immediate, sign-extended to 64-bit)
    and BPF_ALU|BPF_MOV|BPF_K (load 32-bit immediate, zero-padded to 64-bit);
    only perform sign extension in the first case.
    
    This patch differs from the mainline one because the verifier's internals
    have changed in the meantime. Mainline tracks register values as 64-bit
    values; however, 4.4 still stores tracked register values as 32-bit
    values with sign extension. Therefore, in the case of a 32-bit op with
    negative immediate, the value can't be tracked; leave the register as
    UNKNOWN_VALUE (set by the preceding check_reg_arg() call).
    
    
    I have manually tested this patch on top of 4.4.122. For the following BPF
    bytecode:
    
            BPF_MOV64_IMM(BPF_REG_1, 1),
            BPF_JMP_IMM(BPF_JEQ, BPF_REG_1, 1, 1),
            BPF_EXIT_INSN(),
    
            BPF_MOV32_IMM(BPF_REG_1, 1),
            BPF_JMP_IMM(BPF_JEQ, BPF_REG_1, 1, 1),
            BPF_EXIT_INSN(),
    
            BPF_MOV64_IMM(BPF_REG_1, -1),
            BPF_JMP_IMM(BPF_JEQ, BPF_REG_1, -1, 1),
            BPF_EXIT_INSN(),
    
            BPF_MOV32_IMM(BPF_REG_1, -1),
            BPF_JMP_IMM(BPF_JEQ, BPF_REG_1, -1, 2),
            BPF_MOV32_IMM(BPF_REG_0, 42),
            BPF_EXIT_INSN(),
    
            BPF_MOV32_IMM(BPF_REG_0, 43),
            BPF_EXIT_INSN()
    
    Verifier output on 4.4.122 without this patch:
    
    0: (b7) r1 = 1
    1: (15) if r1 == 0x1 goto pc+1
    3: (b4) (u32) r1 = (u32) 1
    4: (15) if r1 == 0x1 goto pc+1
    6: (b7) r1 = -1
    7: (15) if r1 == 0xffffffff goto pc+1
    9: (b4) (u32) r1 = (u32) -1
    10: (15) if r1 == 0xffffffff goto pc+2
    13: (b4) (u32) r0 = (u32) 43
    14: (95) exit
    
    Verifier output on 4.4.122+ with this patch:
    
    0: (b7) r1 = 1
    1: (15) if r1 == 0x1 goto pc+1
    3: (b4) (u32) r1 = (u32) 1
    4: (15) if r1 == 0x1 goto pc+1
    6: (b7) r1 = -1
    7: (15) if r1 == 0xffffffff goto pc+1
    9: (b4) (u32) r1 = (u32) -1
    10: (15) if r1 == 0xffffffff goto pc+2
     R1=inv R10=fp
    11: (b4) (u32) r0 = (u32) 42
    12: (95) exit
    
    from 10 to 13: R1=imm-1 R10=fp
    13: (b4) (u32) r0 = (u32) 43
    14: (95) exit
    
    
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a876e8742b709ed4d3db068fe453515609e0402
Author: Srinath Mannam <srinath.mannam@broadcom.com>
Date:   Thu Jun 15 14:39:22 2017 +0530

    usb: gadget: bdc: 64-bit pointer capability check
    
    commit c8e4e5bdb62a5ac6f860ebcaaf7b467b62f453f1 upstream.
    
    Corrected the register to check the 64-bit pointer
    capability state. 64-bit pointer implementation capability
    was checking in wrong register, which causes the BDC
    enumeration failure in 64-bit memory address.
    
    Fixes: efed421a94e6 ("usb: gadget: Add UDC driver for
    Broadcom USB3.0 device controller IP BDC")
    
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Srinath Mannam <srinath.mannam@broadcom.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a52a0a6c908a83166f490e0983b7fbad92ea338c
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Tue Jan 23 09:35:14 2018 +0000

    USB: gadget: udc: Add missing platform_device_put() on error in bdc_pci_probe()
    
    commit 8874ae5f15f3feef3b4a415b9aed51edcf449aa1 upstream.
    
    Add the missing platform_device_put() before return from bdc_pci_probe()
    in the platform_device_add_resources() error handling case.
    
    Fixes: efed421a94e6 ("usb: gadget: Add UDC driver for Broadcom USB3.0 device controller IP BDC")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1994e4d56b36d5d4cc9aacd252e3fd60d3c5595
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Tue Jan 30 16:07:37 2018 +0200

    btrfs: Fix use-after-free when cleaning up fs_devs with a single stale device
    
    commit fd649f10c3d21ee9d7542c609f29978bdf73ab94 upstream.
    
    Commit 4fde46f0cc71 ("Btrfs: free the stale device") introduced
    btrfs_free_stale_device which iterates the device lists for all
    registered btrfs filesystems and deletes those devices which aren't
    mounted. In a btrfs_devices structure has only 1 device attached to it
    and it is unused then btrfs_free_stale_devices will proceed to also free
    the btrfs_fs_devices struct itself. Currently this leads to a use after
    free since list_for_each_entry will try to perform a check on the
    already freed memory to see if it has to terminate the loop.
    
    The fix is to use 'break' when we know we are freeing the current
    fs_devs.
    
    Fixes: 4fde46f0cc71 ("Btrfs: free the stale device")
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97c3e46ef53748278286fc09dcc30b138d6677c4
Author: Hans van Kranenburg <hans.van.kranenburg@mendix.com>
Date:   Mon Feb 5 17:45:11 2018 +0100

    btrfs: alloc_chunk: fix DUP stripe size handling
    
    commit 92e222df7b8f05c565009c7383321b593eca488b upstream.
    
    In case of using DUP, we search for enough unallocated disk space on a
    device to hold two stripes.
    
    The devices_info[ndevs-1].max_avail that holds the amount of unallocated
    space found is directly assigned to stripe_size, while it's actually
    twice the stripe size.
    
    Later on in the code, an unconditional division of stripe_size by
    dev_stripes corrects the value, but in the meantime there's a check to
    see if the stripe_size does not exceed max_chunk_size. Since during this
    check stripe_size is twice the amount as intended, the check will reduce
    the stripe_size to max_chunk_size if the actual correct to be used
    stripe_size is more than half the amount of max_chunk_size.
    
    The unconditional division later tries to correct stripe_size, but will
    actually make sure we can't allocate more than half the max_chunk_size.
    
    Fix this by moving the division by dev_stripes before the max chunk size
    check, so it always contains the right value, instead of putting a duct
    tape division in further on to get it fixed again.
    
    Since in all other cases than DUP, dev_stripes is 1, this change only
    affects DUP.
    
    Other attempts in the past were made to fix this:
    * 37db63a400 "Btrfs: fix max chunk size check in chunk allocator" tried
    to fix the same problem, but still resulted in part of the code acting
    on a wrongly doubled stripe_size value.
    * 86db25785a "Btrfs: fix max chunk size on raid5/6" unintentionally
    broke this fix again.
    
    The real problem was already introduced with the rest of the code in
    73c5de0051.
    
    The user visible result however will be that the max chunk size for DUP
    will suddenly double, while it's actually acting according to the limits
    in the code again like it was 5 years ago.
    
    Reported-by: Naohiro Aota <naohiro.aota@wdc.com>
    Link: https://www.spinics.net/lists/linux-btrfs/msg69752.html
    Fixes: 73c5de0051 ("btrfs: quasi-round-robin for chunk allocation")
    Fixes: 86db25785a ("Btrfs: fix max chunk size on raid5/6")
    Signed-off-by: Hans van Kranenburg <hans.van.kranenburg@mendix.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ update comment ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29b2031139a141facd75163b84f64c685cffd693
Author: Adam Ford <aford173@gmail.com>
Date:   Thu Jan 25 14:10:37 2018 -0600

    ARM: dts: LogicPD Torpedo: Fix I2C1 pinmux
    
    commit 74402055a2d3ec998a1ded599e86185a27d9bbf4 upstream.
    
    The pinmuxing was missing for I2C1 which was causing intermittent issues
    with the PMIC which is connected to I2C1.  The bootloader did not quite
    configure the I2C1 either, so when running at 2.6MHz, it was generating
    errors at time.
    
    This correctly sets the I2C1 pinmuxing so it can operate at 2.6MHz
    
    Fixes: 687c27676151 ("ARM: dts: Add minimal support for LogicPD Torpedo
    DM3730 devkit")
    
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 036c4bdd66b72b45e43e0815294598c6b580c72a
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Thu Jul 27 09:11:26 2017 +0200

    scsi: sg: only check for dxfer_len greater than 256M
    
    commit f930c7043663188429cd9b254e9d761edfc101ce upstream.
    
    Don't make any assumptions on the sg_io_hdr_t::dxfer_direction or the
    sg_io_hdr_t::dxferp in order to determine if it is a valid request. The
    only way we can check for bad requests is by checking if the length
    exceeds 256M.
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Fixes: 28676d869bbb (scsi: sg: check for valid direction before starting the request)
    Reported-by: Jason L Tibbitts III <tibbs@math.uh.edu>
    Tested-by: Jason L Tibbitts III <tibbs@math.uh.edu>
    Suggested-by: Doug Gilbert <dgilbert@interlog.com>
    Cc: Doug Gilbert <dgilbert@interlog.com>
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db259b6768cf52ae1c0c92b7fc6e093a28969d71
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Mon Jul 17 15:11:42 2017 +0200

    scsi: sg: fix static checker warning in sg_is_valid_dxfer
    
    commit 14074aba4bcda3764c9a702b276308b89901d5b6 upstream.
    
    dxfer_len is an unsigned int and we always assign a value > 0 to it, so
    it doesn't make any sense to check if it is < 0. We can't really check
    dxferp as well as we have both NULL and not NULL cases in the possible
    call paths.
    
    So just return true for SG_DXFER_FROM_DEV transfer in
    sg_is_valid_dxfer().
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d85835042a7f94b0ccc02d0103bd2000ebe25f6
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Fri Jul 7 10:56:38 2017 +0200

    scsi: sg: fix SG_DXFER_FROM_DEV transfers
    
    commit 68c59fcea1f2c6a54c62aa896cc623c1b5bc9b47 upstream.
    
    SG_DXFER_FROM_DEV transfers do not necessarily have a dxferp as we set
    it to NULL for the old sg_io read/write interface, but must have a
    length bigger than 0. This fixes a regression introduced by commit
    28676d869bbb ("scsi: sg: check for valid direction before starting the
    request")
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Fixes: 28676d869bbb ("scsi: sg: check for valid direction before starting the request")
    Reported-by: Chris Clayton <chris2553@googlemail.com>
    Tested-by: Chris Clayton <chris2553@googlemail.com>
    Cc: Douglas Gilbert <dgilbert@interlog.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Tested-by: Chris Clayton <chris2553@googlemail.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Cristian Crinteanu <crinteanu.cristian@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abca46335f09a14ce98e31abef51083c39c09e03
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Mar 6 15:51:32 2018 +0000

    irqchip/gic-v3-its: Ensure nr_ites >= nr_lpis
    
    commit 4f2c7583e33eb08dc09dd2e25574b80175ba7d93 upstream.
    
    When struct its_device instances are created, the nr_ites member
    will be set to a power of 2 that equals or exceeds the requested
    number of MSIs passed to the msi_prepare() callback. At the same
    time, the LPI map is allocated to be some multiple of 32 in size,
    where the allocated size may be less than the requested size
    depending on whether a contiguous range of sufficient size is
    available in the global LPI bitmap.
    
    This may result in the situation where the nr_ites < nr_lpis, and
    since nr_ites is what we program into the hardware when we map the
    device, the additional LPIs will be non-functional.
    
    For bog standard hardware, this does not really matter. However,
    in cases where ITS device IDs are shared between different PCIe
    devices, we may end up allocating these additional LPIs without
    taking into account that they don't actually work.
    
    So let's make nr_ites at least 32. This ensures that all allocated
    LPIs are 'live', and that its_alloc_device_irq() will fail when
    attempts are made to allocate MSIs beyond what was allocated in
    the first place.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    [maz: updated comment]
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    [ardb: trivial tweak of unrelated context]
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ae91b40db1df6899365c170d49bcb0d7f0f5190
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Mar 14 12:10:17 2018 -0700

    fs/aio: Use RCU accessors for kioctx_table->table[]
    
    commit d0264c01e7587001a8c4608a5d1818dba9a4c11a upstream.
    
    While converting ioctx index from a list to a table, db446a08c23d
    ("aio: convert the ioctx list to table lookup v3") missed tagging
    kioctx_table->table[] as an array of RCU pointers and using the
    appropriate RCU accessors.  This introduces a small window in the
    lookup path where init and access may race.
    
    Mark kioctx_table->table[] with __rcu and use the approriate RCU
    accessors when using the field.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Jann Horn <jannh@google.com>
    Fixes: db446a08c23d ("aio: convert the ioctx list to table lookup v3")
    Cc: Benjamin LaHaise <bcrl@kvack.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: stable@vger.kernel.org # v3.12+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c68e1f443fca1ecb00d3c206d29ca14f4f21184b
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Mar 14 12:10:17 2018 -0700

    fs/aio: Add explicit RCU grace period when freeing kioctx
    
    commit a6d7cff472eea87d96899a20fa718d2bab7109f3 upstream.
    
    While fixing refcounting, e34ecee2ae79 ("aio: Fix a trinity splat")
    incorrectly removed explicit RCU grace period before freeing kioctx.
    The intention seems to be depending on the internal RCU grace periods
    of percpu_ref; however, percpu_ref uses a different flavor of RCU,
    sched-RCU.  This can lead to kioctx being freed while RCU read
    protected dereferences are still in progress.
    
    Fix it by updating free_ioctx() to go through call_rcu() explicitly.
    
    v2: Comment added to explain double bouncing.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Jann Horn <jannh@google.com>
    Fixes: e34ecee2ae79 ("aio: Fix a trinity splat")
    Cc: Kent Overstreet <kent.overstreet@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: stable@vger.kernel.org # v3.13+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8dc6893e8fadbd63c1549f411c20c96c53e3381f
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Feb 23 20:47:17 2018 -0500

    lock_parent() needs to recheck if dentry got __dentry_kill'ed under it
    
    commit 3b821409632ab778d46e807516b457dfa72736ed upstream.
    
    In case when dentry passed to lock_parent() is protected from freeing only
    by the fact that it's on a shrink list and trylock of parent fails, we
    could get hit by __dentry_kill() (and subsequent dentry_kill(parent))
    between unlocking dentry and locking presumed parent.  We need to recheck
    that dentry is alive once we lock both it and parent *and* postpone
    rcu_read_unlock() until after that point.  Otherwise we could return
    a pointer to struct dentry that already is rcu-scheduled for freeing, with
    ->d_lock held on it; caller's subsequent attempt to unlock it can end
    up with memory corruption.
    
    Cc: stable@vger.kernel.org # 3.12+, counting backports
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8c71406b74f81114b391b28395f3f3a7affdd56
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Mar 14 18:20:29 2018 -0500

    fs: Teach path_connected to handle nfs filesystems with multiple roots.
    
    commit 95dd77580ccd66a0da96e6d4696945b8cea39431 upstream.
    
    On nfsv2 and nfsv3 the nfs server can export subsets of the same
    filesystem and report the same filesystem identifier, so that the nfs
    client can know they are the same filesystem.  The subsets can be from
    disjoint directory trees.  The nfsv2 and nfsv3 filesystems provides no
    way to find the common root of all directory trees exported form the
    server with the same filesystem identifier.
    
    The practical result is that in struct super s_root for nfs s_root is
    not necessarily the root of the filesystem.  The nfs mount code sets
    s_root to the root of the first subset of the nfs filesystem that the
    kernel mounts.
    
    This effects the dcache invalidation code in generic_shutdown_super
    currently called shrunk_dcache_for_umount and that code for years
    has gone through an additional list of dentries that might be dentry
    trees that need to be freed to accomodate nfs.
    
    When I wrote path_connected I did not realize nfs was so special, and
    it's hueristic for avoiding calling is_subdir can fail.
    
    The practical case where this fails is when there is a move of a
    directory from the subtree exposed by one nfs mount to the subtree
    exposed by another nfs mount.  This move can happen either locally or
    remotely.  With the remote case requiring that the move directory be cached
    before the move and that after the move someone walks the path
    to where the move directory now exists and in so doing causes the
    already cached directory to be moved in the dcache through the magic
    of d_splice_alias.
    
    If someone whose working directory is in the move directory or a
    subdirectory and now starts calling .. from the initial mount of nfs
    (where s_root == mnt_root), then path_connected as a heuristic will
    not bother with the is_subdir check.  As s_root really is not the root
    of the nfs filesystem this heuristic is wrong, and the path may
    actually not be connected and path_connected can fail.
    
    The is_subdir function might be cheap enough that we can call it
    unconditionally.  Verifying that will take some benchmarking and
    the result may not be the same on all kernels this fix needs
    to be backported to.  So I am avoiding that for now.
    
    Filesystems with snapshots such as nilfs and btrfs do something
    similar.  But as the directory tree of the snapshots are disjoint
    from one another and from the main directory tree rename won't move
    things between them and this problem will not occur.
    
    Cc: stable@vger.kernel.org
    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
    Fixes: 397d425dc26d ("vfs: Test for and handle paths that are unreachable from their mnt_root")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89a42b03fd37eea645e095c04c92380ae2048d71
Author: Michel Dänzer <michel.daenzer@amd.com>
Date:   Fri Mar 9 18:26:18 2018 +0100

    drm/amdgpu/dce: Don't turn off DP sink when disconnected
    
    commit 7d617264eb22b18d979eac6e85877a141253034e upstream.
    
    Turning off the sink in this case causes various issues, because
    userspace expects it to stay on until it turns it off explicitly.
    
    Instead, turn the sink off and back on when a display is connected
    again. This dance seems necessary for link training to work correctly.
    
    Bugzilla: https://bugs.freedesktop.org/105308
    Cc: stable@vger.kernel.org
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b64129350fa765d8e313180abfc8a514b8ff06bd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Mar 9 22:23:31 2018 +0100

    ALSA: seq: Clear client entry before deleting else at closing
    
    commit a2ff19f7b70118ced291a28d5313469914de451b upstream.
    
    When releasing a client, we need to clear the clienttab[] entry at
    first, then call snd_seq_queue_client_leave().  Otherwise, the
    in-flight cell in the queue might be picked up by the timer interrupt
    via snd_seq_check_queue() before calling snd_seq_queue_client_leave(),
    and it's delivered to another queue while the client is clearing
    queues.  This may eventually result in an uncleared cell remaining in
    a queue, and the later snd_seq_pool_delete() may need to wait for a
    long time until the event gets really processed.
    
    By moving the clienttab[] clearance at the beginning of release, any
    event delivery of a cell belonging to this client will fail at a later
    point, since snd_seq_client_ptr() returns NULL.  Thus the cell that
    was picked up by the timer interrupt will be returned immediately
    without further delivery, and the long stall of snd_seq_delete_pool()
    can be avoided, too.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0b0e342f9483d9ef47cdea192f81047dc7f72db
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Mar 9 21:58:28 2018 +0100

    ALSA: seq: Fix possible UAF in snd_seq_check_queue()
    
    commit d0f833065221cbfcbadf19fd4102bcfa9330006a upstream.
    
    Although we've covered the races between concurrent write() and
    ioctl() in the previous patch series, there is still a possible UAF in
    the following scenario:
    
    A: user client closed           B: timer irq
      -> snd_seq_release()            -> snd_seq_timer_interrupt()
        -> snd_seq_free_client()        -> snd_seq_check_queue()
                                          -> cell = snd_seq_prioq_cell_peek()
          -> snd_seq_prioq_leave()
             .... removing all cells
          -> snd_seq_pool_done()
             .... vfree()
                                          -> snd_seq_compare_tick_time(cell)
                                             ... Oops
    
    So the problem is that a cell is peeked and accessed without any
    protection until it's retrieved from the queue again via
    snd_seq_prioq_cell_out().
    
    This patch tries to address it, also cleans up the code by a slight
    refactoring.  snd_seq_prioq_cell_out() now receives an extra pointer
    argument.  When it's non-NULL, the function checks the event timestamp
    with the given pointer.  The caller needs to pass the right reference
    either to snd_seq_tick or snd_seq_realtime depending on the event
    timestamp type.
    
    A good news is that the above change allows us to remove the
    snd_seq_prioq_cell_peek(), too, thus the patch actually reduces the
    code size.
    
    Reviewed-by: Nicolai Stange <nstange@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 996ecf9374ac5f6f6c94410d8c223d504a56e1d0
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 12 13:55:48 2018 +0100

    ALSA: hda - Revert power_save option default value
    
    commit 40088dc4e1ead7df31728c73f5b51d71da18831d upstream.
    
    With the commit 1ba8f9d30817 ("ALSA: hda: Add a power_save
    blacklist"), we changed the default value of power_save option to -1
    for processing the power-save blacklist.
    Unfortunately, this seems breaking user-space applications that
    actually read the power_save parameter value via sysfs and judge /
    adjust the power-saving status.  They see the value -1 as if the
    power-save is turned off, although the actual value is taken from
    CONFIG_SND_HDA_POWER_SAVE_DEFAULT and it can be a positive.
    
    So, overall, passing -1 there was no good idea.  Let's partially
    revert it -- at least for power_save option default value is restored
    again to CONFIG_SND_HDA_POWER_SAVE_DEFAULT.  Meanwhile, in this patch,
    we keep the blacklist behavior and make is adjustable via the new
    option, pm_blacklist.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=199073
    Fixes: 1ba8f9d30817 ("ALSA: hda: Add a power_save blacklist")
    Acked-by: Hans de Goede <hdegoede@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 422d4f1c0711b7563fa9833af971b51114796ad1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sat Mar 10 23:04:23 2018 +0100

    ALSA: pcm: Fix UAF in snd_pcm_oss_get_formats()
    
    commit 01c0b4265cc16bc1f43f475c5944c55c10d5768f upstream.
    
    snd_pcm_oss_get_formats() has an obvious use-after-free around
    snd_mask_test() calls, as spotted by syzbot.  The passed format_mask
    argument is a pointer to the hw_params object that is freed before the
    loop.  What a surprise that it has been present since the original
    code of decades ago...
    
    Reported-by: syzbot+4090700a4f13fccaf648@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7230d5286cec2301912714581024e9f0e22083b
Author: Toshi Kani <toshi.kani@hpe.com>
Date:   Tue Mar 13 11:03:46 2018 -0600

    x86/mm: Fix vmalloc_fault to use pXd_large
    
    commit 18a955219bf7d9008ce480d4451b6b8bf4483a22 upstream.
    
    Gratian Crisan reported that vmalloc_fault() crashes when CONFIG_HUGETLBFS
    is not set since the function inadvertently uses pXn_huge(), which always
    return 0 in this case.  ioremap() does not depend on CONFIG_HUGETLBFS.
    
    Fix vmalloc_fault() to call pXd_large() instead.
    
    Fixes: f4eafd8bcd52 ("x86/mm: Fix vmalloc_fault() to handle large pages properly")
    Reported-by: Gratian Crisan <gratian.crisan@ni.com>
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Cc: linux-mm@kvack.org
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Link: https://lkml.kernel.org/r/20180313170347.3829-2-toshi.kani@hpe.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa23dba4d83777fe04f4636d5d3d558b9af49a94
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Mar 13 22:03:12 2018 -0700

    x86/vm86/32: Fix POPF emulation
    
    commit b5069782453459f6ec1fdeb495d9901a4545fcb5 upstream.
    
    POPF would trap if VIP was set regardless of whether IF was set.  Fix it.
    
    Suggested-by: Stas Sergeev <stsp@list.ru>
    Reported-by: Bart Oldeman <bartoldeman@gmail.com>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Fixes: 5ed92a8ab71f ("x86/vm86: Use the normal pt_regs area for vm86")
    Link: http://lkml.kernel.org/r/ce95f40556e7b2178b6bc06ee9557827ff94bd28.1521003603.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3680c0455c824715d6f1268d7a7f0a86c7f51d95
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Mar 13 22:03:11 2018 -0700

    selftests/x86/entry_from_vm86: Add test cases for POPF
    
    commit 78393fdde2a456cafa414b171c90f26a3df98b20 upstream.
    
    POPF is currently broken -- add tests to catch the error.  This
    results in:
    
       [RUN]        POPF with VIP set and IF clear from vm86 mode
       [INFO]       Exited vm86 mode due to STI
       [FAIL]       Incorrect return reason (started at eip = 0xd, ended at eip = 0xf)
    
    because POPF currently fails to check IF before reporting a pending
    interrupt.
    
    This patch also makes the FAIL message a bit more informative.
    
    Reported-by: Bart Oldeman <bartoldeman@gmail.com>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stas Sergeev <stsp@list.ru>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/a16270b5cfe7832d6d00c479d0f871066cbdb52b.1521003603.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9c392b61286174a1efbac15c363533d5fa9d00f
Author: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date:   Sun Nov 5 18:27:57 2017 -0800

    selftests/x86: Add tests for the STR and SLDT instructions
    
    commit a9e017d5619eb371460c8e516f4684def62bef3a upstream.
    
    The STR and SLDT instructions are not valid when running on virtual-8086
    mode and generate an invalid operand exception. These two instructions are
    protected by the Intel User-Mode Instruction Prevention (UMIP) security
    feature. In protected mode, if UMIP is enabled, these instructions generate
    a general protection fault if called from CPL > 0. Linux traps the general
    protection fault and emulates the instructions sgdt, sidt and smsw; but not
    str and sldt.
    
    These tests are added to verify that the emulation code does not emulate
    these two instructions but the expected invalid operand exception is
    seen.
    
    Tests fallback to exit with INT3 in case emulation does happen.
    
    Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Chen Yucong <slaoub@gmail.com>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Huang Rui <ray.huang@amd.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ravi V. Shankar <ravi.v.shankar@intel.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: ricardo.neri@intel.com
    Link: http://lkml.kernel.org/r/1509935277-22138-13-git-send-email-ricardo.neri-calderon@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00968998edd5445ddb09c2889c4957a32aa43d34
Author: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
Date:   Sun Nov 5 18:27:56 2017 -0800

    selftests/x86: Add tests for User-Mode Instruction Prevention
    
    commit 9390afebe1d3f5a0be18b1afdd0ce09d67cebf9e upstream.
    
    Certain user space programs that run on virtual-8086 mode may utilize
    instructions protected by the User-Mode Instruction Prevention (UMIP)
    security feature present in new Intel processors: SGDT, SIDT and SMSW. In
    such a case, a general protection fault is issued if UMIP is enabled. When
    such a fault happens, the kernel traps it and emulates the results of
    these instructions with dummy values. The purpose of this new
    test is to verify whether the impacted instructions can be executed
    without causing such #GP. If no #GP exceptions occur, we expect to exit
    virtual-8086 mode from INT3.
    
    The instructions protected by UMIP are executed in representative use
    cases:
    
     a) displacement-only memory addressing
     b) register-indirect memory addressing
     c) results stored directly in operands
    
    Unfortunately, it is not possible to check the results against a set of
    expected values because no emulation will occur in systems that do not
    have the UMIP feature. Instead, results are printed for verification. A
    simple verification is done to ensure that results of all tests are
    identical.
    
    Signed-off-by: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Chen Yucong <slaoub@gmail.com>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Huang Rui <ray.huang@amd.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ravi V. Shankar <ravi.v.shankar@intel.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: ricardo.neri@intel.com
    Link: http://lkml.kernel.org/r/1509935277-22138-12-git-send-email-ricardo.neri-calderon@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21b0ae799a3c3195cb48dd3dc0798399545d25f8
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Mar 13 22:03:10 2018 -0700

    selftests/x86/entry_from_vm86: Exit with 1 if we fail
    
    commit 327d53d005ca47b10eae940616ed11c569f75a9b upstream.
    
    Fix a logic error that caused the test to exit with 0 even if test
    cases failed.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stas Sergeev <stsp@list.ru>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: bartoldeman@gmail.com
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/b1cc37144038958a469c8f70a5f47a6a5638636a.1521003603.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76bda31c54844169bc28adec9240e567566cf10b
Author: Mimi Zohar <zohar@linux.vnet.ibm.com>
Date:   Wed Nov 8 07:38:28 2017 -0500

    ima: relax requiring a file signature for new files with zero length
    
    
    [ Upstream commit b7e27bc1d42e8e0cc58b602b529c25cd0071b336 ]
    
    Custom policies can require file signatures based on LSM labels.  These
    files are normally created and only afterwards labeled, requiring them
    to be signed.
    
    Instead of requiring file signatures based on LSM labels, entire
    filesystems could require file signatures.  In this case, we need the
    ability of writing new files without requiring file signatures.
    
    The definition of a "new" file was originally defined as any file with
    a length of zero.  Subsequent patches redefined a "new" file to be based
    on the FILE_CREATE open flag.  By combining the open flag with a file
    size of zero, this patch relaxes the file signature requirement.
    
    Fixes: 1ac202e978e1 ima: accept previously set IMA_NEW_FILE
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be272b01f8a725d0d6ff4c937d1507d3141ec71c
Author: SeongJae Park <sj38.park@gmail.com>
Date:   Fri Nov 3 19:17:20 2017 +0900

    rcutorture/configinit: Fix build directory error message
    
    
    [ Upstream commit 2adfa4210f8f35cdfb4e08318cc06b99752964c2 ]
    
    The 'configinit.sh' script checks the format of optional argument for the
    build directory, printing an error message if the format is not valid.
    However, the error message uses the wrong variable, indicating an empty
    string even though the user entered a non-empty (but erroneous) string.
    This commit fixes the script to use the correct variable.
    
    Fixes: c87b9c601ac8 ("rcutorture: Add KVM-based test framework")
    
    Signed-off-by: SeongJae Park <sj38.park@gmail.com>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 401a3b5c027bde94e8318c4995cac8c82596b93d
Author: Mahesh Bandewar <maheshb@google.com>
Date:   Thu Dec 7 15:15:43 2017 -0800

    ipvlan: add L2 check for packets arriving via virtual devices
    
    
    [ Upstream commit 92ff42645028fa6f9b8aa767718457b9264316b4 ]
    
    Packets that don't have dest mac as the mac of the master device should
    not be entertained by the IPvlan rx-handler. This is mostly true as the
    packet path mostly takes care of that, except when the master device is
    a virtual device. As demonstrated in the following case -
    
      ip netns add ns1
      ip link add ve1 type veth peer name ve2
      ip link add link ve2 name iv1 type ipvlan mode l2
      ip link set dev iv1 netns ns1
      ip link set ve1 up
      ip link set ve2 up
      ip -n ns1 link set iv1 up
      ip addr add 192.168.10.1/24 dev ve1
      ip -n ns1 addr 192.168.10.2/24 dev iv1
      ping -c2 192.168.10.2
      <Works!>
      ip neigh show dev ve1
      ip neigh show 192.168.10.2 lladdr <random> dev ve1
      ping -c2 192.168.10.2
      <Still works! Wrong!!>
    
    This patch adds that missing check in the IPvlan rx-handler.
    
    Reported-by: Amit Sikka <amit.sikka@ericsson.com>
    Signed-off-by: Mahesh Bandewar <maheshb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62882df7b20cd2bd0f4f7084ee77c2062057ee8d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Sat Dec 9 14:52:28 2017 +0300

    ASoC: nuc900: Fix a loop timeout test
    
    
    [ Upstream commit 65a12b3aafed5fc59f4ce41b22b752b1729e6701 ]
    
    We should be finishing the loop with timeout set to zero but because
    this is a post-op we finish with timeout == -1.
    
    Fixes: 1082e2703a2d ("ASoC: NUC900/audio: add nuc900 audio driver support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b9e0d070a0338a46283063c0ec1e467f725cd36
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Sun Oct 29 11:51:10 2017 +0200

    mac80211: remove BUG() when interface type is invalid
    
    
    [ Upstream commit c7976f5272486e4ff406014c4b43e2fa3b70b052 ]
    
    In the ieee80211_setup_sdata() we check if the interface type is valid
    and, if not, call BUG().  This should never happen, but if there is
    something wrong with the code, it will not be caught until the bug
    happens when an interface is being set up.  Calling BUG() is too
    extreme for this and a WARN_ON() would be better used instead.  Change
    that.
    
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f80285895d53fe221bdc51e37a98a7ecb82821bc
Author: Adiel Aloni <adiel.aloni@intel.com>
Date:   Fri Dec 1 13:50:53 2017 +0200

    mac80211_hwsim: enforce PS_MANUAL_POLL to be set after PS_ENABLED
    
    
    [ Upstream commit e16ea4bb516bc21ea2202f2107718b29218bea59 ]
    
    Enforce using PS_MANUAL_POLL in ps hwsim debugfs to trigger a poll,
    only if PS_ENABLED was set before.
    This is required due to commit c9491367b759 ("mac80211: always update the
    PM state of a peer on MGMT / DATA frames") that enforces the ap to
    check only mgmt/data frames ps bit, and then update station's power save
    accordingly.
    When sending only ps-poll (control frame) the ap will not be aware that
    the station entered power save.
    Setting ps enable before triggering ps_poll, will send NDP with PM bit
    enabled first.
    
    Signed-off-by: Adiel Aloni <adiel.aloni@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7740d2fa98b5475a71de343455e8e94add86d22d
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Fri Dec 8 21:46:16 2017 +0000

    agp/intel: Flush all chipset writes after updating the GGTT
    
    
    [ Upstream commit 8516673a996870ea0ceb337ee4f83c33c5ec3111 ]
    
    Before accessing the GGTT we must flush the PTE writes and make them
    visible to the chipset, or else the indirect access may end up in the
    wrong page. In commit 3497971a71d8 ("agp/intel: Flush chipset writes
    after updating a single PTE"), we noticed corruption of the uploads for
    pwrite and for capturing GPU error states, but it was presumed that the
    explicit calls to intel_gtt_chipset_flush() were sufficient for the
    execbuffer path. However, we have not been flushing the chipset between
    the PTE writes and access via the GTT itself.
    
    For simplicity, do the flush after any PTE update rather than try and
    batch the flushes on a just-in-time basis.
    
    References: 3497971a71d8 ("agp/intel: Flush chipset writes after updating a single PTE")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Cc: Mika Kuoppala <mika.kuoppala@intel.com>
    Cc: drm-intel-fixes@lists.freedesktop.org
    Reviewed-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171208214616.30147-1-chris@chris-wilson.co.uk
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a9a365664c7f05e33bbda8f90f1180dcc202b38
Author: Yong Zhao <yong.zhao@amd.com>
Date:   Fri Dec 8 23:08:48 2017 -0500

    drm/amdkfd: Fix memory leaks in kfd topology
    
    
    [ Upstream commit 5108d768408abc80e4e8d99f5b406a73cb04056b ]
    
    Kobject created using kobject_create_and_add() can be freed using
    kobject_put() when there is no referenece any more. However,
    kobject memory allocated with kzalloc() has to set up a release
    callback in order to free it when the counter decreases to 0.
    Otherwise it causes memory leak.
    
    Signed-off-by: Yong Zhao <yong.zhao@amd.com>
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaea613f64dc2edd9d6c1bc6addd3dc8f49fb140
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Thu Dec 7 15:40:20 2017 -0800

    veth: set peer GSO values
    
    
    [ Upstream commit 72d24955b44a4039db54a1c252b5031969eeaac3 ]
    
    When new veth is created, and GSO values have been configured
    on one device, clone those values to the peer.
    
    For example:
       # ip link add dev vm1 gso_max_size 65530 type veth peer name vm2
    
    This should create vm1 <--> vm2 with both having GSO maximum
    size set to 65530.
    
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8978bc9e74dbf40e3eb35cded8cb21d589259fe3
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Nov 9 16:28:14 2017 -0500

    media: cpia2: Fix a couple off by one bugs
    
    
    [ Upstream commit d5ac225c7d64c9c3ef821239edc035634e594ec9 ]
    
    The cam->buffers[] array has cam->num_frames elements so the > needs to
    be changed to >= to avoid going beyond the end of the array.  The
    ->buffers[] array is allocated in cpia2_allocate_buffers() if you want
    to confirm.
    
    Fixes: ab33d5071de7 ("V4L/DVB (3376): Add cpia2 camera support")
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79cefe83df6b8184f675d2784c73d3de3f9a1385
Author: Xose Vazquez Perez <xose.vazquez@gmail.com>
Date:   Fri Nov 17 22:05:13 2017 +0100

    scsi: dh: add new rdac devices
    
    
    [ Upstream commit 4b3aec2bbbce1c35f50e7475a9fd78d24b9ea4ea ]
    
    Add IBM 3542 and 3552, arrays: FAStT200 and FAStT500.
    
    Add full STK OPENstorage family, arrays: 9176, D173, D178, D210, D220,
    D240 and D280.
    
    Add STK BladeCtlr family, arrays: B210, B220, B240 and B280.
    
    These changes were done in multipath-tools time ago.
    
    Cc: NetApp RDAC team <ng-eseries-upstream-maintainers@netapp.com>
    Cc: Hannes Reinecke <hare@suse.de>
    Cc: Christophe Varoqui <christophe.varoqui@opensvc.com>
    Cc: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: James E.J. Bottomley <jejb@linux.vnet.ibm.com>
    Cc: SCSI ML <linux-scsi@vger.kernel.org>
    Cc: device-mapper development <dm-devel@redhat.com>
    Signed-off-by: Xose Vazquez Perez <xose.vazquez@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3727a8819f085a32d472cd436235488f5966e903
Author: Xose Vazquez Perez <xose.vazquez@gmail.com>
Date:   Fri Nov 17 21:31:36 2017 +0100

    scsi: devinfo: apply to HP XP the same flags as Hitachi VSP
    
    
    [ Upstream commit b369a0471503130cfc74f9f62071db97f48948c3 ]
    
    Commit 56f3d383f37b ("scsi: scsi_devinfo: Add TRY_VPD_PAGES to HITACHI
    OPEN-V blacklist entry") modified some Hitachi entries:
    
        HITACHI is always supporting VPD pages, even though it's claiming to
        support SCSI Revision 3 only.
    
    The same should have been done also for HP-rebranded.
    
    [mkp: checkpatch and tweaked commit message]
    
    Cc: Hannes Reinecke <hare@suse.de>
    Cc: Takahiro Yasui <takahiro.yasui@hds.com>
    Cc: Matthias Rudolph <Matthias.Rudolph@hitachivantara.com>
    Cc: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: James E.J. Bottomley <jejb@linux.vnet.ibm.com>
    Cc: SCSI ML <linux-scsi@vger.kernel.org>
    Signed-off-by: Xose Vazquez Perez <xose.vazquez@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee79fc9f4e9162f8f2c5e5ede9d943e203a47b22
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Dec 4 10:36:31 2017 -0800

    scsi: core: scsi_get_device_flags_keyed(): Always return device flags
    
    
    [ Upstream commit a44c9d36509c83cf64f33b93f6ab2e63822c01eb ]
    
    Since scsi_get_device_flags_keyed() callers do not check whether or not
    the returned value is an error code, change that function such that it
    returns a flags value even if the 'key' argument is invalid.  Note:
    since commit 28a0bc4120d3 ("scsi: sd: Implement blacklist option for
    WRITE SAME w/ UNMAP") bit 31 is a valid device information flag so
    checking whether bit 31 is set in the return value is not sufficient to
    tell the difference between an error code and a flags value.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abda3469c366826a404fd62bfac6f3080471ef6b
Author: Tobias Jordan <Tobias.Jordan@elektrobit.com>
Date:   Thu Dec 7 15:04:53 2017 +0100

    spi: sun6i: disable/unprepare clocks on remove
    
    
    [ Upstream commit 2d9bbd02c54094ceffa555143b0d68cd06504d63 ]
    
    sun6i_spi_probe() uses sun6i_spi_runtime_resume() to prepare/enable
    clocks, so sun6i_spi_remove() should use sun6i_spi_runtime_suspend() to
    disable/unprepare them if we're not suspended.
    Replacing pm_runtime_disable() by pm_runtime_force_suspend() will ensure
    that sun6i_spi_runtime_suspend() is called if needed.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: 3558fe900e8af (spi: sunxi: Add Allwinner A31 SPI controller driver)
    Signed-off-by: Tobias Jordan <Tobias.Jordan@elektrobit.com>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6638091f1b1623db8b2338ef5a5f26d9ec870444
Author: Julien BOIBESSOT <julien.boibessot@armadeus.com>
Date:   Tue Dec 5 18:48:14 2017 +0100

    tools/usbip: fixes build with musl libc toolchain
    
    
    [ Upstream commit 77be4c878c72e411ad22af96b6f81dd45c26450a ]
    
    Indeed musl doesn't define old SIGCLD signal name but only new one SIGCHLD.
    SIGCHLD is the new POSIX name for that signal so it doesn't change
    anything on other libcs.
    
    This fixes this kind of build error:
    
    usbipd.c: In function ‘set_signal’:
    usbipd.c:459:12: error: 'SIGCLD' undeclared (first use in this function)
      sigaction(SIGCLD, &act, NULL);
                ^~~~~~
    usbipd.c:459:12: note: each undeclared identifier is reported only once
            for each function it appears in
    Makefile:407: recipe for target 'usbipd.o' failed
    make[3]: *** [usbipd.o] Error 1
    
    Signed-off-by: Julien BOIBESSOT <julien.boibessot@armadeus.com>
    Acked-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17190f748384b72bac19caf12e586a305dec15f0
Author: Ben Greear <greearb@candelatech.com>
Date:   Sat Dec 2 16:50:49 2017 +0200

    ath10k: fix invalid STS_CAP_OFFSET_MASK
    
    
    [ Upstream commit 8cec57f5277ef0e354e37a0bf909dc71bc1f865b ]
    
    The 10.4 firmware defines this as a 3-bit field, as does the
    mac80211 stack.  The 4th bit is defined as CONF_IMPLICIT_BF
    at least in the firmware header I have seen.  This patch
    fixes the ath10k wmi header to match the firmware.
    
    Signed-off-by: Ben Greear <greearb@candelatech.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73b81f16cfdaa91ffc5c647f08415a0dbf75e905
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Wed Dec 6 12:11:38 2017 +0000

    clk: qcom: msm8916: fix mnd_width for codec_digcodec
    
    
    [ Upstream commit d8e488e8242ecf129eebc440c92d800a99ca109d ]
    
    This patch fixes missing mnd_width for codec_digital clk, this is now set to
    8 inline with datasheet.
    
    Fixes: 3966fab8b6ab ("clk: qcom: Add MSM8916 Global Clock Controller support")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f7dfb7fcf98a7e73dee018c4a68537ce7fec646
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Nov 23 14:27:07 2017 +0100

    cpufreq: Fix governor module removal race
    
    
    [ Upstream commit a8b149d32b663c1a4105273295184b78f53d33cf ]
    
    It is possible to remove a cpufreq governor module after
    cpufreq_parse_governor() has returned success in
    store_scaling_governor() and before cpufreq_set_policy()
    acquires a reference to it, because the governor list is
    not protected during that period and nothing prevents the
    governor from being unregistered then.
    
    Prevent that from happening by acquiring an extra reference
    to the governor module temporarily in cpufreq_parse_governor(),
    under cpufreq_governor_mutex, and dropping it in
    store_scaling_governor(), when cpufreq_set_policy() returns.
    
    Note that the second cpufreq_parse_governor() call site is fine,
    because it only cares about the policy member of new_policy.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c715f9883dedc196c2f4402445b9ec3596f6394f
Author: Manikanta Pubbisetty <mpubbise@qti.qualcomm.com>
Date:   Mon Nov 6 13:39:31 2017 +0530

    ath10k: update tdls teardown state to target
    
    
    [ Upstream commit 424ea0d174e82365f85c6770225dba098b8f1d5f ]
    
    It is required to update the teardown state of the peer when
    a tdls link with that peer is terminated. This information is
    useful for the target to perform some cleanups wrt the tdls peer.
    
    Without proper cleanup, target assumes that the peer is connected and
    blocks future connection requests, updating the teardown state of the
    peer addresses the problem.
    
    Tested this change on QCA9888 with 10.4-3.5.1-00018 fw version.
    
    Signed-off-by: Manikanta Pubbisetty <mpubbise@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffa0a8252863189f0bc92d46c34588df3699f8f8
Author: Andrew F. Davis <afd@ti.com>
Date:   Wed Nov 29 11:13:59 2017 -0600

    ARM: dts: omap3-n900: Fix the audio CODEC's reset pin
    
    
    [ Upstream commit 7be4b5dc7ffa9499ac6ef33a5ffa9ff43f9b7057 ]
    
    The correct DT property for specifying a GPIO used for reset
    is "reset-gpios", fix this here.
    
    Fixes: 14e3e295b2b9 ("ARM: dts: omap3-n900: Add TLV320AIC3X support")
    
    Signed-off-by: Andrew F. Davis <afd@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59df934af72fe74a64be6a0d8dba21375a5482bc
Author: Andrew F. Davis <afd@ti.com>
Date:   Wed Nov 29 11:13:56 2017 -0600

    ARM: dts: am335x-pepper: Fix the audio CODEC's reset pin
    
    
    [ Upstream commit e153db03c6b7a035c797bcdf35262586f003ee93 ]
    
    The correct DT property for specifying a GPIO used for reset
    is "reset-gpios", fix this here.
    
    Fixes: 4341881d0562 ("ARM: dts: Add devicetree for Gumstix Pepper board")
    
    Signed-off-by: Andrew F. Davis <afd@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26d13e92539a15b7c4ac393e090ce0946f884550
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Nov 8 17:00:27 2017 +0100

    mtd: nand: fix interpretation of NAND_CMD_NONE in nand_command[_lp]()
    
    
    [ Upstream commit df467899da0b71465760b4e35127bce837244eee ]
    
    Some drivers (like nand_hynix.c) call ->cmdfunc() with NAND_CMD_NONE
    and a column address and expect the controller to only send address
    cycles. Right now, the default ->cmdfunc() implementations provided by
    the core do not filter out the command cycle in this case and forwards
    the request to the controller driver through the ->cmd_ctrl() method.
    The thing is, NAND controller drivers can get this wrong and send a
    command cycle with a NAND_CMD_NONE opcode and since NAND_CMD_NONE is
    -1, and the command field is usually casted to an u8, we end up sending
    the 0xFF command which is actually a RESET operation.
    
    Add conditions in nand_command[_lp]() functions to sending the initial
    command cycle when command == NAND_CMD_NONE.
    
    Signed-off-by: Miquel Raynal <miquel.raynal@free-electrons.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9e82cb34c3c2ee895af01bc899c6ed0bc6eb04a
Author: Lorenzo Colitti <lorenzo@google.com>
Date:   Mon Nov 20 19:26:02 2017 +0900

    net: xfrm: allow clearing socket xfrm policies.
    
    
    [ Upstream commit be8f8284cd897af2482d4e54fbc2bdfc15557259 ]
    
    Currently it is possible to add or update socket policies, but
    not clear them. Therefore, once a socket policy has been applied,
    the socket cannot be used for unencrypted traffic.
    
    This patch allows (privileged) users to clear socket policies by
    passing in a NULL pointer and zero length argument to the
    {IP,IPV6}_{IPSEC,XFRM}_POLICY setsockopts. This results in both
    the incoming and outgoing policies being cleared.
    
    The simple approach taken in this patch cannot clear socket
    policies in only one direction. If desired this could be added
    in the future, for example by continuing to pass in a length of
    zero (which currently is guaranteed to return EMSGSIZE) and
    making the policy be a pointer to an integer that contains one
    of the XFRM_POLICY_{IN,OUT} enum values.
    
    An alternative would have been to interpret the length as a
    signed integer and use XFRM_POLICY_IN (i.e., 0) to clear the
    input policy and -XFRM_POLICY_OUT (i.e., -1) to clear the output
    policy.
    
    Tested: https://android-review.googlesource.com/539816
    Signed-off-by: Lorenzo Colitti <lorenzo@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6daa32b6cb51b6daced7d17d28ab1ca48f01d401
Author: Luis R. Rodriguez <mcgrof@kernel.org>
Date:   Mon Nov 20 09:45:35 2017 -0800

    test_firmware: fix setting old custom fw path back on exit
    
    
    [ Upstream commit 65c79230576873b312c3599479c1e42355c9f349 ]
    
    The file /sys/module/firmware_class/parameters/path can be used
    to set a custom firmware path. The fw_filesystem.sh script creates
    a temporary directory to add a test firmware file to be used during
    testing, in order for this to work it uses the custom path syfs file
    and it was supposed to reset back the file on execution exit. The
    script failed to do this due to a typo, it was using OLD_PATH instead
    of OLD_FWPATH, since its inception since v3.17.
    
    Its not as easy to just keep the old setting, it turns out that
    resetting an empty setting won't actually do what we want, we need
    to check if it was empty and set an empty space.
    
    Without this we end up having the temporary path always set after
    we run these tests.
    
    Fixes: 0a8adf58475 ("test: add firmware_class loader test")
    Signed-off-by: Luis R. Rodriguez <mcgrof@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49bca2f6c7501eba79f95d9064872c0f443cb7b8
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Fri Oct 13 16:24:28 2017 -0700

    sched: Stop resched_cpu() from sending IPIs to offline CPUs
    
    
    [ Upstream commit a0982dfa03efca6c239c52cabebcea4afb93ea6b ]
    
    The rcutorture test suite occasionally provokes a splat due to invoking
    resched_cpu() on an offline CPU:
    
    WARNING: CPU: 2 PID: 8 at /home/paulmck/public_git/linux-rcu/arch/x86/kernel/smp.c:128 native_smp_send_reschedule+0x37/0x40
    Modules linked in:
    CPU: 2 PID: 8 Comm: rcu_preempt Not tainted 4.14.0-rc4+ #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
    task: ffff902ede9daf00 task.stack: ffff96c50010c000
    RIP: 0010:native_smp_send_reschedule+0x37/0x40
    RSP: 0018:ffff96c50010fdb8 EFLAGS: 00010096
    RAX: 000000000000002e RBX: ffff902edaab4680 RCX: 0000000000000003
    RDX: 0000000080000003 RSI: 0000000000000000 RDI: 00000000ffffffff
    RBP: ffff96c50010fdb8 R08: 0000000000000000 R09: 0000000000000001
    R10: 0000000000000000 R11: 00000000299f36ae R12: 0000000000000001
    R13: ffffffff9de64240 R14: 0000000000000001 R15: ffffffff9de64240
    FS:  0000000000000000(0000) GS:ffff902edfc80000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000f7d4c642 CR3: 000000001e0e2000 CR4: 00000000000006e0
    Call Trace:
     resched_curr+0x8f/0x1c0
     resched_cpu+0x2c/0x40
     rcu_implicit_dynticks_qs+0x152/0x220
     force_qs_rnp+0x147/0x1d0
     ? sync_rcu_exp_select_cpus+0x450/0x450
     rcu_gp_kthread+0x5a9/0x950
     kthread+0x142/0x180
     ? force_qs_rnp+0x1d0/0x1d0
     ? kthread_create_on_node+0x40/0x40
     ret_from_fork+0x27/0x40
    Code: 14 01 0f 92 c0 84 c0 74 14 48 8b 05 14 4f f4 00 be fd 00 00 00 ff 90 a0 00 00 00 5d c3 89 fe 48 c7 c7 38 89 ca 9d e8 e5 56 08 00 <0f> ff 5d c3 0f 1f 44 00 00 8b 05 52 9e 37 02 85 c0 75 38 55 48
    ---[ end trace 26df9e5df4bba4ac ]---
    
    This splat cannot be generated by expedited grace periods because they
    always invoke resched_cpu() on the current CPU, which is good because
    expedited grace periods require that resched_cpu() unconditionally
    succeed.  However, other parts of RCU can tolerate resched_cpu() acting
    as a no-op, at least as long as it doesn't happen too often.
    
    This commit therefore makes resched_cpu() invoke resched_curr() only if
    the CPU is either online or is the current CPU.
    
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35be5af4d2572bc71b6ca92d153bb0e18ae84641
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Fri Oct 13 17:00:18 2017 -0700

    sched: Stop switched_to_rt() from sending IPIs to offline CPUs
    
    
    [ Upstream commit 2fe2582649aa2355f79acddb86bd4d6c5363eb63 ]
    
    The rcutorture test suite occasionally provokes a splat due to invoking
    rt_mutex_lock() which needs to boost the priority of a task currently
    sitting on a runqueue that belongs to an offline CPU:
    
    WARNING: CPU: 0 PID: 12 at /home/paulmck/public_git/linux-rcu/arch/x86/kernel/smp.c:128 native_smp_send_reschedule+0x37/0x40
    Modules linked in:
    CPU: 0 PID: 12 Comm: rcub/7 Not tainted 4.14.0-rc4+ #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
    task: ffff9ed3de5f8cc0 task.stack: ffffbbf80012c000
    RIP: 0010:native_smp_send_reschedule+0x37/0x40
    RSP: 0018:ffffbbf80012fd10 EFLAGS: 00010082
    RAX: 000000000000002f RBX: ffff9ed3dd9cb300 RCX: 0000000000000004
    RDX: 0000000080000004 RSI: 0000000000000086 RDI: 00000000ffffffff
    RBP: ffffbbf80012fd10 R08: 000000000009da7a R09: 0000000000007b9d
    R10: 0000000000000001 R11: ffffffffbb57c2cd R12: 000000000000000d
    R13: ffff9ed3de5f8cc0 R14: 0000000000000061 R15: ffff9ed3ded59200
    FS:  0000000000000000(0000) GS:ffff9ed3dea00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000080686f0 CR3: 000000001b9e0000 CR4: 00000000000006f0
    Call Trace:
     resched_curr+0x61/0xd0
     switched_to_rt+0x8f/0xa0
     rt_mutex_setprio+0x25c/0x410
     task_blocks_on_rt_mutex+0x1b3/0x1f0
     rt_mutex_slowlock+0xa9/0x1e0
     rt_mutex_lock+0x29/0x30
     rcu_boost_kthread+0x127/0x3c0
     kthread+0x104/0x140
     ? rcu_report_unblock_qs_rnp+0x90/0x90
     ? kthread_create_on_node+0x40/0x40
     ret_from_fork+0x22/0x30
    Code: f0 00 0f 92 c0 84 c0 74 14 48 8b 05 34 74 c5 00 be fd 00 00 00 ff 90 a0 00 00 00 5d c3 89 fe 48 c7 c7 a0 c6 fc b9 e8 d5 b5 06 00 <0f> ff 5d c3 0f 1f 44 00 00 8b 05 a2 d1 13 02 85 c0 75 38 55 48
    
    But the target task's priority has already been adjusted, so the only
    purpose of switched_to_rt() invoking resched_curr() is to wake up the
    CPU running some task that needs to be preempted by the boosted task.
    But the CPU is offline, which presumably means that the task must be
    migrated to some other CPU, and that this other CPU will undertake any
    needed preemption at the time of migration.  Because the runqueue lock
    is held when resched_curr() is invoked, we know that the boosted task
    cannot go anywhere, so it is not necessary to invoke resched_curr()
    in this particular case.
    
    This commit therefore makes switched_to_rt() refrain from invoking
    resched_curr() when the target CPU is offline.
    
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1333bbd4fdcb89ec4a9125aa9261ddf6bdb6ffef
Author: Simon Shields <simon@lineageos.org>
Date:   Tue Nov 21 22:24:24 2017 +1100

    ARM: dts: exynos: Correct Trats2 panel reset line
    
    
    [ Upstream commit 1b377924841df1e13ab5b225be3a83f807a92b52 ]
    
    Trats2 uses gpf2-1 as the panel reset GPIO. gpy4-5 was only used
    on early revisions of the board.
    
    Fixes: 420ae8451a22 ("ARM: dts: exynos4412-trats2: add panel node")
    Signed-off-by: Simon Shields <simon@lineageos.org>
    Acked-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5b1c194e1fe3eb097ac391919b9a40a8e4c3ebc
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Wed Nov 22 11:19:51 2017 +0100

    HID: elo: clear BTN_LEFT mapping
    
    
    [ Upstream commit 9abd04af951e5734c9d5cfee9b49790844b734cf ]
    
    ELO devices have one Button usage in GenDesk field, which makes hid-input map
    it to BTN_LEFT; that confuses userspace, which then considers the device to be
    a mouse/touchpad instead of touchscreen.
    
    Fix that by unmapping BTN_LEFT and keeping only BTN_TOUCH in place.
    
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea1bdd6d034ca469012905d8d20d897cc4466938
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Nov 13 19:04:18 2017 +0200

    video/hdmi: Allow "empty" HDMI infoframes
    
    
    [ Upstream commit 593f4b19a094c4426bd1e1e3cbab87a48bd13c71 ]
    
    HDMI 2.0 Appendix F suggest that we should keep sending the infoframe
    when switching from 3D to 2D mode, even if the infoframe isn't strictly
    necessary (ie. not needed to transmit the VIC or stereo information).
    This is a workaround against some sinks that fail to realize that they
    should switch from 3D to 2D mode when the source stop transmitting
    the infoframe.
    
    v2: Handle unpack() as well
        Pull the length calculation into a helper
    
    Cc: Shashank Sharma <shashank.sharma@intel.com>
    Cc: Andrzej Hajda <a.hajda@samsung.com>
    Cc: Thierry Reding <thierry.reding@gmail.com>
    Cc: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: linux-media@vger.kernel.org
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com> #v1
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171113170427.4150-2-ville.syrjala@linux.intel.com
    Reviewed-by: Shashank Sharma <shashank.sharma@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b59718a13495d420491fa86f915273066d89fcab
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Wed Nov 1 16:20:58 2017 +0200

    drm/edid: set ELD connector type in drm_edid_to_eld()
    
    
    [ Upstream commit 1d1c36650752b7fb81cee515a9bba4131cac4b7c ]
    
    Since drm_edid_to_eld() knows the connector type, we can set the type in
    ELD while at it. Most connectors this gets called on are not DP
    encoders, and with the HDMI type being 0, this does not change behaviour
    for non-DP.
    
    For i915 having this in place earlier would have saved a considerable
    amount of debugging that lead to the fix 2d8f63297b9f ("drm/i915: always
    update ELD connector type after get modes"). I don't see other drivers,
    even the ones calling drm_edid_to_eld() on DP connectors, setting the
    connector type in ELD.
    
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: Christian König <christian.koenig@amd.com>
    Cc: Archit Taneja <architt@codeaurora.org>
    Cc: Andrzej Hajda <a.hajda@samsung.com>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: CK Hu <ck.hu@mediatek.com>
    Cc: Philipp Zabel <p.zabel@pengutronix.de>
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Mark Yao <mark.yao@rock-chips.com>
    Cc: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Cc: Vincent Abriou <vincent.abriou@st.com>
    Cc: Thierry Reding <thierry.reding@gmail.com>
    Cc: Eric Anholt <eric@anholt.net>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Acked-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/d527b31619528c477c2c136f25cdf118bc0cfc1d.1509545641.git.jani.nikula@intel.com
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5fc0f0e82b8982e762348db5a76ba2337792020
Author: Dedy Lansky <qca_dlansky@qca.qualcomm.com>
Date:   Wed Apr 5 14:58:11 2017 +0300

    wil6210: fix memory access violation in wil_memcpy_from/toio_32
    
    
    [ Upstream commit 0f6edfe2bbbb59d161580cb4870fcc46f5490f85 ]
    
    In case count is not multiple of 4, there is a read access in
    wil_memcpy_toio_32() from outside src buffer boundary.
    In wil_memcpy_fromio_32(), in case count is not multiple of 4, there is
    a write access to outside dst io memory boundary.
    
    Fix these issues with proper handling of the last 1 to 4 copied bytes.
    
    Signed-off-by: Dedy Lansky <qca_dlansky@qca.qualcomm.com>
    Signed-off-by: Maya Erez <qca_merez@qca.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51dd2600ccca3fc6108ed9bceda24bce3dd06d5d
Author: Laxman Dewangan <ldewangan@nvidia.com>
Date:   Fri Apr 7 15:04:00 2017 +0530

    pwm: tegra: Increase precision in PWM rate calculation
    
    
    [ Upstream commit 250b76f43f57d578ebff5e7211eb2c73aa5cd6ca ]
    
    The rate of the PWM calculated as follows:
    
            hz = NSEC_PER_SEC / period_ns;
            rate = (rate + (hz / 2)) / hz;
    
    This has the precision loss in lower PWM rate.
    
    Change this to have more precision as:
    
            hz = DIV_ROUND_CLOSEST_ULL(NSEC_PER_SEC * 100, period_ns);
            rate = DIV_ROUND_CLOSEST(rate * 100, hz)
    
    Example:
    
    1. period_ns = 16672000, PWM clock rate is 200 KHz.
    
            Based on old formula
                    hz = NSEC_PER_SEC / period_ns
                       = 1000000000ul/16672000
                       = 59 (59.98)
                    rate = (200K + 59/2)/59 = 3390
    
            Based on new method:
                    hz = 5998
                    rate = DIV_ROUND_CLOSE(200000*100, 5998) = 3334
    
            If we measure the PWM signal rate, we will get more accurate
            period with rate value of 3334 instead of 3390.
    
    2.  period_ns = 16803898, PWM clock rate is 200 KHz.
    
            Based on old formula:
                    hz = 59, rate = 3390
    
            Based on new formula:
                    hz = 5951, rate = 3360
    
            The PWM signal rate of 3360 is more near to requested period
            than 3333.
    
    Signed-off-by: Laxman Dewangan <ldewangan@nvidia.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 176bee4cfcecb523314b18f2ada3da3249e68787
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Wed Mar 29 14:02:46 2017 +0900

    kprobes/x86: Set kprobes pages read-only
    
    
    [ Upstream commit d0381c81c2f782fa2131178d11e0cfb23d50d631 ]
    
    Set the pages which is used for kprobes' singlestep buffer
    and optprobe's trampoline instruction buffer to readonly.
    This can prevent unexpected (or unintended) instruction
    modification.
    
    This also passes rodata_test as below.
    
    Without this patch, rodata_test shows a warning:
    
      WARNING: CPU: 0 PID: 1 at arch/x86/mm/dump_pagetables.c:235 note_page+0x7a9/0xa20
      x86/mm: Found insecure W+X mapping at address ffffffffa0000000/0xffffffffa0000000
    
    With this fix, no W+X pages are found:
    
      x86/mm: Checked W+X mappings: passed, no W+X pages found.
      rodata_test: all tests were successful
    
    Reported-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David S . Miller <davem@davemloft.net>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ye Xiaolong <xiaolong.ye@intel.com>
    Link: http://lkml.kernel.org/r/149076375592.22469.14174394514338612247.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41e08a6d0ce0dba699f3eabedf357b74ef721b63
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Wed Mar 29 13:56:56 2017 +0900

    kprobes/x86: Fix kprobe-booster not to boost far call instructions
    
    
    [ Upstream commit bd0b90676c30fe640e7ead919b3e38846ac88ab7 ]
    
    Fix the kprobe-booster not to boost far call instruction,
    because a call may store the address in the single-step
    execution buffer to the stack, which should be modified
    after single stepping.
    
    Currently, this instruction will be filtered as not
    boostable in resume_execution(), so this is not a
    critical issue.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Ananth N Mavinakayanahalli <ananth@linux.vnet.ibm.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David S . Miller <davem@davemloft.net>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ye Xiaolong <xiaolong.ye@intel.com>
    Link: http://lkml.kernel.org/r/149076340615.22469.14066273186134229909.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a8e8e0af9a520a685e0ab2d489327d5220d7ce2
Author: Hannes Reinecke <hare@suse.de>
Date:   Fri Apr 7 09:34:17 2017 +0200

    scsi: sg: close race condition in sg_remove_sfp_usercontext()
    
    
    [ Upstream commit 97d27b0dd015e980ade63fda111fd1353276e28b ]
    
    sg_remove_sfp_usercontext() is clearing any sg requests, but needs to
    take 'rq_list_lock' when modifying the list.
    
    Reported-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Tested-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9088ad9fb1c004bbac5fd083a1a43cd52f8c8415
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Fri Apr 7 09:34:15 2017 +0200

    scsi: sg: check for valid direction before starting the request
    
    
    [ Upstream commit 28676d869bbb5257b5f14c0c95ad3af3a7019dd5 ]
    
    Check for a valid direction before starting the request, otherwise we
    risk running into an assertion in the scsi midlayer checking for valid
    requests.
    
    [mkp: fixed typo]
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Link: http://www.spinics.net/lists/linux-scsi/msg104400.html
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Tested-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3ba97ff30a0b3abf42c01b86f61fa4de45d7f3e
Author: David Carrillo-Cisneros <davidcc@google.com>
Date:   Mon Apr 10 13:14:30 2017 -0700

    perf session: Don't rely on evlist in pipe mode
    
    
    [ Upstream commit 0973ad97c187e06aece61f685b9c3b2d93290a73 ]
    
    Session sets a number parameters that rely on evlist. These parameters
    are not used in pipe-mode and should not be set, since evlist is
    unavailable. Fix that.
    
    Signed-off-by: David Carrillo-Cisneros <davidcc@google.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: He Kuang <hekuang@huawei.com>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Paul Turner <pjt@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Simon Que <sque@chromium.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: http://lkml.kernel.org/r/20170410201432.24807-6-davidcc@google.com
    [ Check if file != NULL in perf_session__new(), like when used by builtin-top.c ]
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80a2c7be43de39740467dc4e73a1bc1b4dbd54d5
Author: David Carrillo-Cisneros <davidcc@google.com>
Date:   Mon Apr 10 13:14:27 2017 -0700

    perf inject: Copy events when reordering events in pipe mode
    
    
    [ Upstream commit 1e0d4f0200e4dbdfc38d818f329d8a0955f7c6f5 ]
    
    __perf_session__process_pipe_events reuses the same memory buffer to
    process all events in the pipe.
    
    When reordering is needed (e.g. -b option), events are not immediately
    flushed, but kept around until reordering is possible, causing
    memory corruption.
    
    The problem is usually observed by a "Unknown sample error" output. It
    can easily be reproduced by:
    
      perf record -o - noploop | perf inject -b > output
    
    Committer testing:
    
    Before:
    
      $ perf record -o - stress -t 2 -c 2 | perf inject -b > /dev/null
      stress: info: [8297] dispatching hogs: 2 cpu, 0 io, 0 vm, 0 hdd
      stress: info: [8297] successful run completed in 2s
      [ perf record: Woken up 3 times to write data ]
      [ perf record: Captured and wrote 0.000 MB - ]
      Warning:
      Found 1 unknown events!
    
      Is this an older tool processing a perf.data file generated by a more recent tool?
    
      If that is not the case, consider reporting to linux-kernel@vger.kernel.org.
    
      $
    
    After:
    
      $ perf record -o - stress -t 2 -c 2 | perf inject -b > /dev/null
      stress: info: [9027] dispatching hogs: 2 cpu, 0 io, 0 vm, 0 hdd
      stress: info: [9027] successful run completed in 2s
      [ perf record: Woken up 3 times to write data ]
      [ perf record: Captured and wrote 0.000 MB - ]
      no symbols found in /usr/bin/stress, maybe install a debug package?
      no symbols found in /usr/bin/stress, maybe install a debug package?
      $
    
    Signed-off-by: David Carrillo-Cisneros <davidcc@google.com>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: He Kuang <hekuang@huawei.com>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Paul Turner <pjt@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Simon Que <sque@chromium.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: http://lkml.kernel.org/r/20170410201432.24807-3-davidcc@google.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f71cd02d128da6ab6057616611539e1fd9693301
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Tue Apr 11 09:39:49 2017 +0100

    drivers/perf: arm_pmu: handle no platform_device
    
    
    [ Upstream commit 7654137071fa706e5c91f4f27bc2a5cd7e435a9b ]
    
    In armpmu_dispatch_irq() we look at arm_pmu::plat_device to acquire
    platdata, so that we can defer to platform-specific IRQ handling,
    required on some 32-bit parts. With the advent of ACPI we won't always
    have a platform_device, and so we must avoid trying to dereference
    fields from it.
    
    This patch fixes up armpmu_dispatch_irq() to avoid doing so, introducing
    a new armpmu_get_platdata() helper.
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Tested-by: Jeremy Linton <jeremy.linton@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7c4718ff04741e29d46d3e7a7ed5e03fadccc21
Author: Yuyang Du <yuyang.du@intel.com>
Date:   Fri Mar 24 04:06:11 2017 +0800

    usb: gadget: dummy_hcd: Fix wrong power status bit clear/reset in dummy_hub_control()
    
    
    [ Upstream commit 9f20dfb44d03745d0d3cef2ffb3abf8d8024fa61 ]
    
    This fixes the commit: 1cd8fd2887e1 ("usb: gadget: dummy_hcd: add
    SuperSpeed support").
    
    In the case of ClearPortFeature and USB_PORT_FEAT_POWER, simply clear
    the right bit regardless of what the wValue is.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Yuyang Du <yuyang.du@intel.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed5fb5479972d0db84e3bdbb664ace6f3e8b0bca
Author: John Stultz <john.stultz@linaro.org>
Date:   Mon Feb 13 20:08:08 2017 -0800

    usb: dwc2: Make sure we disconnect the gadget state
    
    
    [ Upstream commit dad3f793f20fbb5c0c342f0f5a0bdf69a4d76089 ]
    
    I had seen some odd behavior with HiKey's usb-gadget interface
    that I finally seemed to have chased down. Basically every other
    time I plugged in the OTG port, the gadget interface would
    properly initialize. The other times, I'd get a big WARN_ON
    in dwc2_hsotg_init_fifo() about the fifo_map not being clear.
    
    Ends up if we don't disconnect the gadget state, the fifo-map
    doesn't get cleared properly, which causes WARN_ON messages and
    also results in the device not properly being setup as a gadget
    every other time the OTG port is connected.
    
    So this patch adds a call to dwc2_hsotg_disconnect() in the
    reset path so the state is properly cleared.
    
    With it, the gadget interface initializes properly on every
    plug in.
    
    Cc: Wei Xu <xuwei5@hisilicon.com>
    Cc: Guodong Xu <guodong.xu@linaro.org>
    Cc: Amit Pundir <amit.pundir@linaro.org>
    Cc: Rob Herring <robh+dt@kernel.org>
    Cc: John Youn <johnyoun@synopsys.com>
    Cc: Douglas Anderson <dianders@chromium.org>
    Cc: Chen Yu <chenyu56@huawei.com>
    Cc: Felipe Balbi <felipe.balbi@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: linux-usb@vger.kernel.org
    Acked-by: John Youn <johnyoun@synopsys.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b84883f74b2be66de7f424e1f7d9bdf3b1530b2
Author: NeilBrown <neilb@suse.com>
Date:   Mon Apr 3 12:11:32 2017 +1000

    md/raid6: Fix anomily when recovering a single device in RAID6.
    
    
    [ Upstream commit 7471fb77ce4dc4cb81291189947fcdf621a97987 ]
    
    When recoverying a single missing/failed device in a RAID6,
    those stripes where the Q block is on the missing device are
    handled a bit differently.  In these cases it is easy to
    check that the P block is correct, so we do.  This results
    in the P block be destroy.  Consequently the P block needs
    to be read a second time in order to compute Q.  This causes
    lots of seeks and hurts performance.
    
    It shouldn't be necessary to re-read P as it can be computed
    from the DATA.  But we only compute blocks on missing
    devices, since c337869d9501 ("md: do not compute parity
    unless it is on a failed drive").
    
    So relax the change made in that commit to allow computing
    of the P block in a RAID6 which it is the only missing that
    block.
    
    This makes RAID6 recovery run much faster as the disk just
    "before" the recovering device is no longer seeking
    back-and-forth.
    
    Reported-by-tested-by: Brad Campbell <lists2009@fnarfbargle.com>
    Reviewed-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23e4e7b49c65500cf4a4e494ee62076b009d29e6
Author: Vincent Stehlé <vincent.stehle@laposte.net>
Date:   Sun Apr 9 22:05:05 2017 +0200

    regulator: isl9305: fix array size
    
    
    [ Upstream commit 0c08aaf873174c95e674cf21ffcd041c589d2e5b ]
    
    ISL9305_MAX_REGULATOR is the last index used to access the init_data[]
    array, so we need to add one to this last index to obtain the necessary
    array size.
    
    This fixes the following smatch error:
    
      drivers/regulator/isl9305.c:160 isl9305_i2c_probe() error: buffer overflow 'pdata->init_data' 3 <= 3
    
    Fixes: dec38b5ce6a9edb4 ("regulator: isl9305: Add Intersil ISL9305/H driver")
    Signed-off-by: Vincent Stehlé <vincent.stehle@laposte.net>
    Cc: Mark Brown <broonie@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23d76e6eb830e948785eaa412c027c7a602578f4
Author: Aleksandar Markovic <aleksandar.markovic@mips.com>
Date:   Mon Mar 13 16:36:36 2017 +0100

    MIPS: r2-on-r6-emu: Clear BLTZALL and BGEZALL debugfs counters
    
    
    [ Upstream commit 411dac79cc2ed80f7e348ccc23eb4d8b0ba9f6d5 ]
    
    Add missing clearing of BLTZALL and BGEZALL emulation counters in
    function mipsr2_stats_clear_show().
    
    Previously, it was not possible to reset BLTZALL and BGEZALL
    emulation counters - their value remained the same even after
    explicit request via debugfs. As far as other related counters
    are concerned, they all seem to be properly cleared.
    
    This change affects debugfs operation only, core R2 emulation
    functionality is not affected.
    
    Signed-off-by: Aleksandar Markovic <aleksandar.markovic@imgtec.com>
    Reviewed-by: Paul Burton <paul.burton@imgtec.com>
    Cc: james.hogan@imgtec.com
    Cc: leonid.yegoshin@imgtec.com
    Cc: douglas.leung@imgtec.com
    Cc: petar.jovanovic@imgtec.com
    Cc: miodrag.dinic@imgtec.com
    Cc: goran.ferenc@imgtec.com
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/15517/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e28ef2aec18c5c680be0d29363cff363a4547e0
Author: Leonid Yegoshin <Leonid.Yegoshin@imgtec.com>
Date:   Mon Mar 13 16:36:35 2017 +0100

    MIPS: r2-on-r6-emu: Fix BLEZL and BGTZL identification
    
    
    [ Upstream commit 5bba7aa4958e271c3ffceb70d47d3206524cf489 ]
    
    Fix the problem of inaccurate identification of instructions BLEZL and
    BGTZL in R2 emulation code by making sure all necessary encoding
    specifications are met.
    
    Previously, certain R6 instructions could be identified as BLEZL or
    BGTZL. R2 emulation routine didn't take into account that both BLEZL
    and BGTZL instructions require their rt field (bits 20 to 16 of
    instruction encoding) to be 0, and that, at same time, if the value in
    that field is not 0, the encoding may represent a legitimate MIPS R6
    instruction.
    
    This means that a problem could occur after emulation optimization,
    when emulation routine tried to pipeline emulation, picked up a next
    candidate, and subsequently misrecognized an R6 instruction as BLEZL
    or BGTZL.
    
    It should be said that for single pass strategy, the problem does not
    happen because CPU doesn't trap on branch-compacts which share opcode
    space with BLEZL/BGTZL (but have rt field != 0, of course).
    
    Signed-off-by: Leonid Yegoshin <leonid.yegoshin@imgtec.com>
    Signed-off-by: Miodrag Dinic <miodrag.dinic@imgtech.com>
    Signed-off-by: Aleksandar Markovic <aleksandar.markovic@imgtech.com>
    Reported-by: Douglas Leung <douglas.leung@imgtec.com>
    Reviewed-by: Paul Burton <paul.burton@imgtec.com>
    Cc: james.hogan@imgtec.com
    Cc: petar.jovanovic@imgtec.com
    Cc: goran.ferenc@imgtec.com
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/15456/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f877d51c772e08c357175d3765c0fb3a984a94a4
Author: David Daney <david.daney@cavium.com>
Date:   Tue Mar 14 14:21:44 2017 -0700

    MIPS: BPF: Fix multiple problems in JIT skb access helpers.
    
    
    [ Upstream commit a81507c79f4ae9a0f9fb1054b59b62a090620dd9 ]
    
    o Socket data is unsigned, so use unsigned accessors instructions.
    
     o Fix path result pointer generation arithmetic.
    
     o Fix half-word byte swapping code for unsigned semantics.
    
    Signed-off-by: David Daney <david.daney@cavium.com>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Steven J. Hill <steven.hill@cavium.com>
    Cc: linux-mips@linux-mips.org
    Cc: netdev@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/15747/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01438902bfef3166aa8ba85a9b2acc0212e9fa3f
Author: David Daney <david.daney@cavium.com>
Date:   Tue Mar 14 14:21:43 2017 -0700

    MIPS: BPF: Quit clobbering callee saved registers in JIT code.
    
    
    [ Upstream commit 1ef0910cfd681f0bd0b81f8809935b2006e9cfb9 ]
    
    If bpf_needs_clear_a() returns true, only actually clear it if it is
    ever used.  If it is not used, we don't save and restore it, so the
    clearing has the nasty side effect of clobbering caller state.
    
    Also, don't emit stack pointer adjustment instructions if the
    adjustment amount is zero.
    
    Signed-off-by: David Daney <david.daney@cavium.com>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Steven J. Hill <steven.hill@cavium.com>
    Cc: linux-mips@linux-mips.org
    Cc: netdev@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/15745/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2197bf03143e9b57438a0bf05663af5c0cc697bc
Author: Mike Leach <mike.leach@linaro.org>
Date:   Mon Mar 27 11:09:33 2017 -0600

    coresight: Fixes coresight DT parse to get correct output port ID.
    
    
    [ Upstream commit eeedc5421dd3b51de73e6106405c5c77f920f281 ]
    
    Corrected to get the port numbering to allow programmable replicator driver
    to operate correctly.
    
    By convention, CoreSight devices number ports, not endpoints in
    the .dts files:-
    
    port {
         reg<N>
         endpoint {
         }
    }
    
    Existing code read endpoint number - always 0x0, rather than the correct
    port number.
    
    Signed-off-by: Mike Leach <mike.leach@linaro.org>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e339465a836bb8070d62a728f6a1d9d2543f984
Author: Christopher James Halse Rogers <christopher.halse.rogers@canonical.com>
Date:   Wed Mar 29 15:02:11 2017 +1100

    drm/amdgpu: Fail fb creation from imported dma-bufs. (v2)
    
    
    [ Upstream commit 1769152ac64b0b07583f696b621624df2ca4c840 ]
    
    Any use of the framebuffer will migrate it to VRAM, which is not sensible for
    an imported dma-buf.
    
    v2: Use DRM_DEBUG_KMS to prevent userspace accidentally spamming dmesg.
    
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Christopher James Halse Rogers <christopher.halse.rogers@canonical.com>
    CC: amd-gfx@lists.freedesktop.org
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e6d38bf9450805947c288a3349c73197d5e48cb
Author: Christopher James Halse Rogers <christopher.halse.rogers@canonical.com>
Date:   Wed Mar 29 15:00:54 2017 +1100

    drm/radeon: Fail fb creation from imported dma-bufs.
    
    
    [ Upstream commit a294043b2fbd8de69d161457ed0c7a4026bbfa5a ]
    
    Any use of the framebuffer will migrate it to VRAM, which is not sensible for
    an imported dma-buf.
    
    v2: Use DRM_DEBUG_KMS to prevent userspace accidentally spamming dmesg.
    
    Reviewed-by: Michel Dänzer <michel.daenzer@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Christopher James Halse Rogers <christopher.halse.rogers@canonical.com>
    CC: amd-gfx@lists.freedesktop.org
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 055510997257621d29f81a5d97b85927392a9243
Author: Liam Beguin <lbeguin@tycoint.com>
Date:   Fri Apr 7 17:03:24 2017 +0200

    video: ARM CLCD: fix dma allocation size
    
    
    [ Upstream commit 9a1c779e6b06855e41099caa6f15b3b584dfa88c ]
    
    This patch forces the frambuffer size to be aligned on kernel pages.
    
    During the board startup, the splash screed did appear;
    the "ts_test" program or our application were not able to start.
    
    The following error message was reported:
    error: failed to map framebuffer device to memory.
    LinuxFB: driver cannot connect
    
    The issue was discovered, on the LPC32xx platform, during the migration
    of the LCD definition from the board file to the device tree.
    
    Signed-off-by: Liam Beguin <lbeguin@tycoint.com>
    Signed-off-by: Sylvain Lemieux <slemieux@tycoint.com>
    Cc: Vladimir Zapolskiy <vz@mleia.com>
    Cc: Russell King <linux@armlinux.org.uk>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ebf08beedcefcf9d35fc0b22b8e9a3a2b38bc2c
Author: Nate Watterson <nwatters@codeaurora.org>
Date:   Fri Apr 7 01:36:20 2017 -0400

    iommu/iova: Fix underflow bug in __alloc_and_insert_iova_range
    
    
    [ Upstream commit 5016bdb796b3726eec043ca0ce3be981f712c756 ]
    
    Normally, calling alloc_iova() using an iova_domain with insufficient
    pfns remaining between start_pfn and dma_limit will fail and return a
    NULL pointer. Unexpectedly, if such a "full" iova_domain contains an
    iova with pfn_lo == 0, the alloc_iova() call will instead succeed and
    return an iova containing invalid pfns.
    
    This is caused by an underflow bug in __alloc_and_insert_iova_range()
    that occurs after walking the "full" iova tree when the search ends
    at the iova with pfn_lo == 0 and limit_pfn is then adjusted to be just
    below that (-1). This (now huge) limit_pfn gives the impression that a
    vast amount of space is available between it and start_pfn and thus
    a new iova is allocated with the invalid pfn_hi value, 0xFFF.... .
    
    To rememdy this, a check is introduced to ensure that adjustments to
    limit_pfn will not underflow.
    
    This issue has been observed in the wild, and is easily reproduced with
    the following sample code.
    
            struct iova_domain *iovad = kzalloc(sizeof(*iovad), GFP_KERNEL);
            struct iova *rsvd_iova, *good_iova, *bad_iova;
            unsigned long limit_pfn = 3;
            unsigned long start_pfn = 1;
            unsigned long va_size = 2;
    
            init_iova_domain(iovad, SZ_4K, start_pfn, limit_pfn);
            rsvd_iova = reserve_iova(iovad, 0, 0);
            good_iova = alloc_iova(iovad, va_size, limit_pfn, true);
            bad_iova = alloc_iova(iovad, va_size, limit_pfn, true);
    
    Prior to the patch, this yielded:
            *rsvd_iova == {0, 0}   /* Expected */
            *good_iova == {2, 3}   /* Expected */
            *bad_iova  == {-2, -1} /* Oh no... */
    
    After the patch, bad_iova is NULL as expected since inadequate
    space remains between limit_pfn and start_pfn after allocating
    good_iova.
    
    Signed-off-by: Nate Watterson <nwatters@codeaurora.org>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f540051a2b4271e5ac9fd77c172e9c50c925c27
Author: John Johansen <john.johansen@canonical.com>
Date:   Thu Apr 6 06:55:24 2017 -0700

    apparmor: Make path_max parameter readonly
    
    
    [ Upstream commit 622f6e3265707ebf02ba776ac6e68003bcc31213 ]
    
    The path_max parameter determines the max size of buffers allocated
    but it should  not be setable at run time. If can be used to cause an
    oops
    
    root@ubuntu:~# echo 16777216 > /sys/module/apparmor/parameters/path_max
    root@ubuntu:~# cat /sys/module/apparmor/parameters/path_max
    Killed
    
    [  122.141911] BUG: unable to handle kernel paging request at ffff880080945fff
    [  122.143497] IP: [<ffffffff81228844>] d_absolute_path+0x44/0xa0
    [  122.144742] PGD 220c067 PUD 0
    [  122.145453] Oops: 0002 [#1] SMP
    [  122.146204] Modules linked in: vmw_vsock_vmci_transport vsock ppdev vmw_balloon snd_ens1371 btusb snd_ac97_codec gameport snd_rawmidi btrtl snd_seq_device ac97_bus btbcm btintel snd_pcm input_leds bluetooth snd_timer snd joydev soundcore serio_raw coretemp shpchp nfit parport_pc i2c_piix4 8250_fintek vmw_vmci parport mac_hid ib_iser rdma_cm iw_cm ib_cm ib_sa ib_mad ib_core ib_addr iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi autofs4 btrfs raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx xor raid6_pq libcrc32c raid1 raid0 multipath linear hid_generic usbhid hid crct10dif_pclmul crc32_pclmul ghash_clmulni_intel aesni_intel aes_x86_64 lrw gf128mul glue_helper ablk_helper cryptd vmwgfx psmouse mptspi ttm mptscsih drm_kms_helper mptbase syscopyarea scsi_transport_spi sysfillrect
    [  122.163365]  ahci sysimgblt e1000 fb_sys_fops libahci drm pata_acpi fjes
    [  122.164747] CPU: 3 PID: 1501 Comm: bash Not tainted 4.4.0-59-generic #80-Ubuntu
    [  122.166250] Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 07/02/2015
    [  122.168611] task: ffff88003496aa00 ti: ffff880076474000 task.ti: ffff880076474000
    [  122.170018] RIP: 0010:[<ffffffff81228844>]  [<ffffffff81228844>] d_absolute_path+0x44/0xa0
    [  122.171525] RSP: 0018:ffff880076477b90  EFLAGS: 00010206
    [  122.172462] RAX: ffff880080945fff RBX: 0000000000000000 RCX: 0000000001000000
    [  122.173709] RDX: 0000000000ffffff RSI: ffff880080946000 RDI: ffff8800348a1010
    [  122.174978] RBP: ffff880076477bb8 R08: ffff880076477c80 R09: 0000000000000000
    [  122.176227] R10: 00007ffffffff000 R11: ffff88007f946000 R12: ffff88007f946000
    [  122.177496] R13: ffff880076477c80 R14: ffff8800348a1010 R15: ffff8800348a2400
    [  122.178745] FS:  00007fd459eb4700(0000) GS:ffff88007b6c0000(0000) knlGS:0000000000000000
    [  122.180176] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  122.181186] CR2: ffff880080945fff CR3: 0000000073422000 CR4: 00000000001406e0
    [  122.182469] Stack:
    [  122.182843]  00ffffff00000001 ffff880080946000 0000000000000000 0000000000000000
    [  122.184409]  00000000570f789c ffff880076477c30 ffffffff81385671 ffff88007a2e7a58
    [  122.185810]  0000000000000000 ffff880076477c88 01000000008a1000 0000000000000000
    [  122.187231] Call Trace:
    [  122.187680]  [<ffffffff81385671>] aa_path_name+0x81/0x370
    [  122.188637]  [<ffffffff813875dd>] profile_transition+0xbd/0xb80
    [  122.190181]  [<ffffffff811af9bc>] ? zone_statistics+0x7c/0xa0
    [  122.191674]  [<ffffffff81389b20>] apparmor_bprm_set_creds+0x9b0/0xac0
    [  122.193288]  [<ffffffff812e1971>] ? ext4_xattr_get+0x81/0x220
    [  122.194793]  [<ffffffff812e800c>] ? ext4_xattr_security_get+0x1c/0x30
    [  122.196392]  [<ffffffff813449b9>] ? get_vfs_caps_from_disk+0x69/0x110
    [  122.198004]  [<ffffffff81232d4f>] ? mnt_may_suid+0x3f/0x50
    [  122.199737]  [<ffffffff81344b03>] ? cap_bprm_set_creds+0xa3/0x600
    [  122.201377]  [<ffffffff81346e53>] security_bprm_set_creds+0x33/0x50
    [  122.203024]  [<ffffffff81214ce5>] prepare_binprm+0x85/0x190
    [  122.204515]  [<ffffffff81216545>] do_execveat_common.isra.33+0x485/0x710
    [  122.206200]  [<ffffffff81216a6a>] SyS_execve+0x3a/0x50
    [  122.207615]  [<ffffffff81838795>] stub_execve+0x5/0x5
    [  122.208978]  [<ffffffff818384f2>] ? entry_SYSCALL_64_fastpath+0x16/0x71
    [  122.210615] Code: f8 31 c0 48 63 c2 83 ea 01 48 c7 45 e8 00 00 00 00 48 01 c6 85 d2 48 c7 45 f0 00 00 00 00 48 89 75 e0 89 55 dc 78 0c 48 8d 46 ff <c6> 46 ff 00 48 89 45 e0 48 8d 55 e0 48 8d 4d dc 48 8d 75 e8 e8
    [  122.217320] RIP  [<ffffffff81228844>] d_absolute_path+0x44/0xa0
    [  122.218860]  RSP <ffff880076477b90>
    [  122.219919] CR2: ffff880080945fff
    [  122.220936] ---[ end trace 506cdbd85eb6c55e ]---
    
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 942c3c95ff969813573e755fb017e1f2d12cf461
Author: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
Date:   Wed Apr 5 12:18:19 2017 -0300

    scsi: ses: don't get power status of SES device slot on probe
    
    
    [ Upstream commit 75106523f39751390b5789b36ee1d213b3af1945 ]
    
    The commit 08024885a2a3 ("ses: Add power_status to SES device slot")
    introduced the 'power_status' attribute to enclosure components and
    the associated callbacks.
    
    There are 2 callbacks available to get the power status of a device:
    1) ses_get_power_status() for 'struct enclosure_component_callbacks'
    2) get_component_power_status() for the sysfs device attribute
    (these are available for kernel-space and user-space, respectively.)
    
    However, despite both methods being available to get power status
    on demand, that commit also introduced a call to get power status
    in ses_enclosure_data_process().
    
    This dramatically increased the total probe time for SCSI devices
    on larger configurations, because ses_enclosure_data_process() is
    called several times during the SCSI devices probe and loops over
    the component devices (but that is another problem, another patch).
    
    That results in a tremendous continuous hammering of SCSI Receive
    Diagnostics commands to the enclosure-services device, which does
    delay the total probe time for the SCSI devices __significantly__:
    
      Originally, ~34 minutes on a system attached to ~170 disks:
    
        [ 9214.490703] mpt3sas version 13.100.00.00 loaded
        ...
        [11256.580231] scsi 17:0:177:0: qdepth(16), tagged(1), simple(0),
                       ordered(0), scsi_level(6), cmd_que(1)
    
      With this patch, it decreased to ~2.5 minutes -- a 13.6x faster
    
        [ 1002.992533] mpt3sas version 13.100.00.00 loaded
        ...
        [ 1151.978831] scsi 11:0:177:0: qdepth(16), tagged(1), simple(0),
                       ordered(0), scsi_level(6), cmd_que(1)
    
    Back to the commit discussion.. on the ses_get_power_status() call
    introduced in ses_enclosure_data_process(): impact of removing it.
    
    That may possibly be in place to initialize the power status value
    on device probe.  However, those 2 functions available to retrieve
    that value _do_ automatically refresh/update it.  So the potential
    benefit would be a direct access of the 'power_status' field which
    does not use the callbacks...
    
    But the only reader of 'struct enclosure_component::power_status'
    is the get_component_power_status() callback for sysfs attribute,
    and it _does_ check for and call the .get_power_status callback,
    (which indeed is defined and implemented by that commit), so the
    power status value is, again, automatically updated.
    
    So, the remaining potential for a direct/non-callback access to
    the power_status attribute would be out-of-tree modules -- well,
    for those, if they are for whatever reason interested in values
    that are set during device probe and not up-to-date by the time
    they need it.. well, that would be curious.
    
    Well, to handle that more properly, set the initial power state
    value to '-1' (i.e., uninitialized) instead of '1' (power 'on'),
    and check for it in that callback which may do an direct access
    to the field value _if_ a callback function is not defined.
    
    Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Fixes: 08024885a2a3 ("ses: Add power_status to SES device slot")
    Reviewed-by: Dan Williams <dan.j.williams@intel.com>
    Reviewed-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 349a8d9b7b759a2f3ef773513bb4b3459a7e7fa4
Author: Phil Turnbull <phil.turnbull@oracle.com>
Date:   Wed Nov 23 13:33:58 2016 -0500

    fm10k: correctly check if interface is removed
    
    
    [ Upstream commit 540fca35e38d15777b310f450f63f056e63039f5 ]
    
    FM10K_REMOVED expects a hardware address, not a 'struct fm10k_hw'.
    
    Fixes: 5cb8db4a4cbc ("fm10k: Add support for VF")
    Signed-off-by: Phil Turnbull <phil.turnbull@oracle.com>
    Tested-by: Krishneil Singh <krishneil.k.singh@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 365a1dcaefccba917f513a5625bc086cfa6c22d1
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Apr 2 23:48:25 2017 +0900

    ALSA: firewire-digi00x: handle all MIDI messages on streaming packets
    
    
    [ Upstream commit 8820a4cf0cb4cd5c6540a9a18b2cedbdfd5a6891 ]
    
    At a commit 9dc5d31cdceb ("ALSA: firewire-digi00x: handle MIDI messages in
    isochronous packets"), a functionality to handle MIDI messages on
    isochronous packet was supported. But this includes some of my
    misunderstanding. This commit is to fix them.
    
    For digi00x series, first data channel of data blocks in rx/tx packet
    includes MIDI messages. The data channel has 0x80 in 8 bit of its MSB,
    however it's against IEC 61883-6. Unique data format is applied:
     - Upper 4 bits of LSB represent port number.
      - 0x0: port 1.
      - 0x2: port 2.
      - 0xe: console port.
     - Lower 4 bits of LSB represent the number of included MIDI message bytes;
       0x0/0x1/0x2.
     - Two bytes of middle of this data channel have MIDI bytes.
    
    Especially, MIDI messages from/to console surface are also transferred by
    isochronous packets, as well as physical MIDI ports.
    
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0628003f0dce308b1fb45ab3ed119321c8a70d76
Author: Jan Kara <jack@suse.cz>
Date:   Wed Apr 5 14:09:48 2017 +0200

    reiserfs: Make cancel_old_flush() reliable
    
    
    [ Upstream commit 71b0576bdb862e964a82c73327cdd1a249c53e67 ]
    
    Currently canceling of delayed work that flushes old data using
    cancel_old_flush() does not prevent work from being requeued. Thus
    in theory new work can be queued after cancel_old_flush() from
    reiserfs_freeze() has run. This will become larger problem once
    flush_old_commits() can requeue the work itself.
    
    Fix the problem by recording in sbi->work_queue that flushing work is
    canceled and should not be requeued.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f73ddaefa4b15949a7beeea4978b7b2a2e2569c
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Apr 3 11:55:19 2017 +0200

    ARM: dts: koelsch: Correct clock frequency of X2 DU clock input
    
    
    [ Upstream commit ebf06af55c7594ed1fc18469a5cddf911c40e687 ]
    
    The X2 crystal oscillator on the Koelsch development board provides a
    74.25 MHz clock, not a 148.5 MHz clock.
    
    Fixes: cd21cb46e14aae3a ("ARM: shmobile: koelsch: Add DU external pixel clocks to DT")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Tested-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 561a5d23b0a27a3edb8875d74efacc10e1cfedac
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Sun Apr 2 20:20:47 2017 +0200

    net/faraday: Add missing include of of.h
    
    
    [ Upstream commit d39004ab136ebb6949a7dda9d24376f3d6209295 ]
    
    Breaking the include loop netdevice.h, dsa.h, devlink.h broke this
    driver, it depends on includes brought in by these headers. Adding
    linux/of.h fixes it.
    
    Fixes: ed0e39e97d34 ("net: break include loop netdevice.h, dsa.h, devlink.h")
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 597609c8602285b94d520506a4ee6f7cba582d51
Author: Anton Blanchard <anton@samba.org>
Date:   Mon Apr 3 16:41:02 2017 +1000

    powerpc: Avoid taking a data miss on every userspace instruction miss
    
    
    [ Upstream commit a7a9dcd882a67b68568868b988289fce5ffd8419 ]
    
    Early on in do_page_fault() we call store_updates_sp(), regardless of
    the type of exception. For an instruction miss this doesn't make
    sense, because we only use this information to detect if a data miss
    is the result of a stack expansion instruction or not.
    
    Worse still, it results in a data miss within every userspace
    instruction miss handler, because we try and load the very instruction
    we are about to install a pte for!
    
    A simple exec microbenchmark runs 6% faster on POWER8 with this fix:
    
     #include <stdlib.h>
     #include <stdio.h>
     #include <unistd.h>
    
    int main(int argc, char *argv[])
    {
            unsigned long left = atol(argv[1]);
            char leftstr[16];
    
            if (left-- == 0)
                    return 0;
    
            sprintf(leftstr, "%ld", left);
            execlp(argv[0], argv[0], leftstr, NULL);
            perror("exec failed\n");
    
            return 0;
    }
    
    Pass the number of iterations on the command line (eg 10000) and time
    how long it takes to execute.
    
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4898ddf7e18b090d2d31ca9c9d51522d3fad1c2
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Apr 3 11:45:42 2017 +0200

    ARM: dts: r8a7791: Correct parent of SSI[0-9] clocks
    
    
    [ Upstream commit 16fe68dcab5702a024d85229ff7e98979cb701a5 ]
    
    The SSI-ALL gate clock is located in between the P clock and the
    individual SSI[0-9] clocks, hence the former should be listed as their
    parent.
    
    Fixes: ee9141522dcf13f8 ("ARM: shmobile: r8a7791: add MSTP10 support on DTSI")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8f9b4ba7e0bc702973f3895ca0a3f6d1fb2a7b5
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Apr 3 11:45:41 2017 +0200

    ARM: dts: r8a7790: Correct parent of SSI[0-9] clocks
    
    
    [ Upstream commit d13d4e063d4a08eb1686e890e9183dde709871bf ]
    
    The SSI-ALL gate clock is located in between the P clock and the
    individual SSI[0-9] clocks, hence the former should be listed as their
    parent.
    
    Fixes: bcde372254386872 ("ARM: shmobile: r8a7790: add MSTP10 support on DTSI")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4e7c94c8d315fc902ae5c19eb386da53b7917ac
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Mar 8 08:22:37 2017 +0300

    NFC: nfcmrvl: double free on error path
    
    
    [ Upstream commit ca42fb9e52d155547e6cf18cf26bce3e1a6af4ea ]
    
    The nci_spi_send() function calls kfree_skb(skb) on both error and
    success so this extra kfree_skb() is a double free.
    
    Fixes: caf6e49bf6d0 ("NFC: nfcmrvl: add spi driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 416aa216705520b8a959b7e65417bd0cd92a0b9c
Author: Tobias Klauser <tklauser@distanz.ch>
Date:   Wed Oct 26 11:00:12 2016 +0200

    NFC: nfcmrvl: Include unaligned.h instead of access_ok.h
    
    
    [ Upstream commit d916d923724d59cde99ee588f15eec59dd863bbd ]
    
    Including linux/unaligned/access_ok.h causes the allmodconfig build on
    ia64 (and maybe others) to fail with the following warnings:
    
    include/linux/unaligned/access_ok.h:7:19: error: redefinition of 'get_unaligned_le16'
    include/linux/unaligned/access_ok.h:12:19: error: redefinition of 'get_unaligned_le32'
    include/linux/unaligned/access_ok.h:17:19: error: redefinition of 'get_unaligned_le64'
    include/linux/unaligned/access_ok.h:22:19: error: redefinition of 'get_unaligned_be16'
    include/linux/unaligned/access_ok.h:27:19: error: redefinition of 'get_unaligned_be32'
    include/linux/unaligned/access_ok.h:32:19: error: redefinition of 'get_unaligned_be64'
    include/linux/unaligned/access_ok.h:37:20: error: redefinition of 'put_unaligned_le16'
    include/linux/unaligned/access_ok.h:42:20: error: redefinition of 'put_unaligned_le32'
    include/linux/unaligned/access_ok.h:42:20: error: redefinition of 'put_unaligned_le64'
    include/linux/unaligned/access_ok.h:42:20: error: redefinition of 'put_unaligned_be16'
    include/linux/unaligned/access_ok.h:42:20: error: redefinition of 'put_unaligned_be32'
    include/linux/unaligned/access_ok.h:42:20: error: redefinition of 'put_unaligned_be64'
    
    Fix these by including asm/unaligned.h instead and leave it up to the
    architecture to decide how to implement unaligned accesses.
    
    Fixes: 3194c6870158 ("NFC: nfcmrvl: add firmware download support")
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Link: https://lkml.org/lkml/2016/10/22/247
    Cc: Vincent Cuissard <cuissard@marvell.com>
    Signed-off-by: Tobias Klauser <tklauser@distanz.ch>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb45f5f30a77b56e7f30594e2313b3f4368d6bf5
Author: Felix Manlunas <felix.manlunas@cavium.com>
Date:   Wed Mar 29 17:56:43 2017 -0700

    vxlan: vxlan dev should inherit lowerdev's gso_max_size
    
    
    [ Upstream commit d6acfeb17d030bb3907e77c048b0e7783ad8e5a9 ]
    
    vxlan dev currently ignores lowerdev's gso_max_size, which adversely
    affects TSO performance of liquidio if it's the lowerdev.  Egress TCP
    packets' skb->len often exceed liquidio's advertised gso_max_size.  This
    may happen on other NIC drivers.
    
    Fix it by assigning lowerdev's gso_max_size to that of vxlan dev.  Might as
    well do likewise for gso_max_segs.
    
    Single flow TSO throughput of liquidio as lowerdev (using iperf3):
    
        Before the patch:    139 Mbps
        After the patch :   8.68 Gbps
        Percent increase:  6,144 %
    
    Signed-off-by: Felix Manlunas <felix.manlunas@cavium.com>
    Signed-off-by: Satanand Burla <satananda.burla@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5d46d1ede440dd6af24f3e8c373cf1fc666a330
Author: Sinclair Yeh <syeh@vmware.com>
Date:   Thu Mar 23 14:28:21 2017 -0700

    drm/vmwgfx: Fixes to vmwgfx_fb
    
    
    [ Upstream commit aa74f0687cfe998e59b20d6454f45e8aa4403c45 ]
    
    1.  When unsetting a mode, num_connector should be set to zero
    2.  The pixel_format field needs to be initialized as newer DRM internal
        functions checks this field
    3.  Take the drm_modeset_lock_all() because vmw_fb_kms_detach() can
        change current mode
    
    Signed-off-by: Sinclair Yeh <syeh@vmware.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37f60dd06e434e939007e3ed1e8ddc5177f1c169
Author: Samuel Thibault <samuel.thibault@ens-lyon.org>
Date:   Sun Mar 26 22:47:36 2017 +0200

    braille-console: Fix value returned by _braille_console_setup
    
    
    [ Upstream commit 2ed2b8621be2708c0f6d61fe9841e9ad8b9753f0 ]
    
    commit bbeddf52adc1 ("printk: move braille console support into
    separate braille.[ch] files") introduced _braille_console_setup()
    to outline the braille initialization code.  There was however some
    confusion over the value it was supposed to return. commit 2cfe6c4ac7ee
    ("printk: Fix return of braille_register_console()") tried to fix it
    but failed to.
    
    This fixes and documents the returned value according to the use
    in printk.c: non-zero return means a parsing error, and thus this
    console configuration should be ignored.
    
    Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>
    Cc: Aleksey Makarov <aleksey.makarov@linaro.org>
    Cc: Joe Perches <joe@perches.com>
    Cc: Ming Lei <ming.lei@canonical.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Acked-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4d8f491c95f65eba894c90d36e96de151d1d129
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Mar 29 10:45:44 2017 -0700

    bonding: refine bond_fold_stats() wrap detection
    
    
    [ Upstream commit 142c6594acbcc32391af9c15f8cd65c6c177698f ]
    
    Some device drivers reset their stats at down/up events, possibly
    fooling bonding stats, since they operate with relative deltas.
    
    It is nearly not possible to fix drivers, since some of them compute the
    tx/rx counters based on per rx/tx queue stats, and the queues can be
    reconfigured (ethtool -L) between the down/up sequence.
    
    Lets avoid accumulating 'negative' values that render bonding stats
    useless.
    
    It is better to lose small deltas, assuming the bonding stats are
    fetched at a reasonable frequency.
    
    Fixes: 5f0c5f73e5ef ("bonding: make global bonding stats more reliable")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87a597c7a76352d8bdb73fc9f86e314829445a72
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Tue Mar 21 10:59:50 2017 -0400

    f2fs: relax node version check for victim data in gc
    
    
    [ Upstream commit c13ff37e359bb3eacf4e1760dcea8d9760aa7459 ]
    
    - has_not_enough_free_secs
    node_secs: 0  dent_secs: 0  freed:0  free_segments:103  reserved:104
    
              - f2fs_gc
                 - get_victim_by_default
    alloc_mode 0, gc_mode 1, max_search 2672, offset 4654, ofs_unit 1
    
                    - do_garbage_collect
    start_segno 3976, end_segno 3977   type 0
    
                      - is_alive
    nid 22797, blkaddr 2131882, ofs_in_node 0, version 0x8/0x0
    
                       - gc_data_segment 766, segno 3976, block 512/426 not alive
    
    So, this patch fixes subtle corrupted case where node version does not match
    to summary version which results in infinite loop by gc.
    
    Reported-by: Yunlei He <heyunlei@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc23c57dbf90e2c9d5e1e394def93b4d2f190dbd
Author: Shaohua Li <shli@fb.com>
Date:   Mon Mar 27 10:51:36 2017 -0700

    blk-throttle: make sure expire time isn't too big
    
    
    [ Upstream commit 06cceedcca67a93ac7f7aa93bbd9980c7496d14e ]
    
    cgroup could be throttled to a limit but when all cgroups cross high
    limit, queue enters a higher state and so the group should be throttled
    to a higher limit. It's possible the cgroup is sleeping because of
    throttle and other cgroups don't dispatch IO any more. In this case,
    nobody can trigger current downgrade/upgrade logic. To fix this issue,
    we could either set up a timer to wakeup the cgroup if other cgroups are
    idle or make sure this cgroup doesn't sleep too long. Setting up a timer
    means we must change the timer very frequently. This patch chooses the
    latter. Making cgroup sleep time not too big wouldn't change cgroup
    bps/iops, but could make it wakeup more frequently, which isn't a big
    issue because throtl_slice * 8 is already quite big.
    
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 610c3618669fd609d4ed2c199d64b26f1e41549a
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri Mar 24 14:13:05 2017 +0300

    mm: Fix false-positive VM_BUG_ON() in page_cache_{get,add}_speculative()
    
    
    [ Upstream commit 591a3d7c09fa08baff48ad86c2347dbd28a52753 ]
    
    0day testing by Fengguang Wu triggered this crash while running Trinity:
    
      kernel BUG at include/linux/pagemap.h:151!
      ...
      CPU: 0 PID: 458 Comm: trinity-c0 Not tainted 4.11.0-rc2-00251-g2947ba0 #1
      ...
      Call Trace:
       __get_user_pages_fast()
       get_user_pages_fast()
       get_futex_key()
       futex_requeue()
       do_futex()
       SyS_futex()
       do_syscall_64()
       entry_SYSCALL64_slow_path()
    
    It' VM_BUG_ON() due to false-negative in_atomic(). We call
    page_cache_get_speculative() with disabled local interrupts.
    It should be atomic enough.
    
    So let's check for disabled interrupts in the VM_BUG_ON() condition
    too, to resolve this.
    
    ( This got triggered by the conversion of the x86 GUP code to the
      generic GUP code. )
    
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Kirill A. Shutemov <kirill@shutemov.name>
    Cc: LKP <lkp@01.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20170324114709.pcytvyb3d6ajux33@black.fi.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3b33bdd9b85d9faad9b99158e05d481b3f5cb88
Author: Shikhar Dogra <shidogra@cisco.com>
Date:   Mon Mar 27 16:16:44 2017 -0700

    driver: (adm1275) set the m,b and R coefficients correctly for power
    
    
    [ Upstream commit 6faecba0b3da7b617bf72bef422bf0d3bb6dfe7d ]
    
    Seems like coefficient values for m, b and R under power have been
    put in the wrong order. Rearranging them properly to get correct
    values of coefficients for power.
    
    For specs, please refer to table 7 (page 35) on
    http://www.analog.com/media/en/technical-documentation/data-sheets/ADM1075.pdf
    
    Fixes: 904b296f308d ("hwmon: (adm1275) Introduce configuration data structure for coeffcients")
    Signed-off-by: Shikhar Dogra <shidogra@cisco.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cd99a14aa3730e45aac7b4e9472181686796985
Author: Jiada Wang <jiada_wang@mentor.com>
Date:   Thu Mar 16 23:12:09 2017 -0700

    dmaengine: imx-sdma: add 1ms delay to ensure SDMA channel is stopped
    
    
    [ Upstream commit 7f3ff14b7eb1ffad132117f08a1973b48e653d43 ]
    
    sdma_disable_channel() cannot ensure dma is stopped to access
    module's FIFOs. There is chance SDMA core is running and accessing
    BD when disable of corresponding channel, this may cause sometimes
    even after call of .sdma_disable_channel(), SDMA core still be
    running and accessing module's FIFOs.
    
    According to NXP R&D team a delay of one BD SDMA cost time (maximum
    is 1ms) should be added after disable of the channel bit, to ensure
    SDMA core has really been stopped after SDMA clients call
    .device_terminate_all.
    
    This patch introduces adds a new function sdma_disable_channel_with_delay()
    which simply adds 1ms delay after call sdma_disable_channel(),
    and set it as .device_terminate_all.
    
    Signed-off-by: Jiada Wang <jiada_wang@mentor.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37633f021b7f88a003ef57b334c9ac31509e89f9
Author: Gao Feng <fgao@ikuai8.com>
Date:   Fri Mar 24 07:05:12 2017 +0800

    tcp: sysctl: Fix a race to avoid unexpected 0 window from space
    
    
    [ Upstream commit c48367427a39ea0b85c7cf018fe4256627abfd9e ]
    
    Because sysctl_tcp_adv_win_scale could be changed any time, so there
    is one race in tcp_win_from_space.
    For example,
    1.sysctl_tcp_adv_win_scale<=0 (sysctl_tcp_adv_win_scale is negative now)
    2.space>>(-sysctl_tcp_adv_win_scale) (sysctl_tcp_adv_win_scale is postive now)
    
    As a result, tcp_win_from_space returns 0. It is unexpected.
    
    Certainly if the compiler put the sysctl_tcp_adv_win_scale into one
    register firstly, then use the register directly, it would be ok.
    But we could not depend on the compiler behavior.
    
    Signed-off-by: Gao Feng <fgao@ikuai8.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d074ae9505e4f9f811e4df37ec7136f2900ca1ae
Author: Akinobu Mita <akinobu.mita@gmail.com>
Date:   Wed Mar 22 09:18:26 2017 +0900

    spi: omap2-mcspi: poll OMAP2_MCSPI_CHSTAT_RXS for PIO transfer
    
    
    [ Upstream commit 812613591cb652344186c4cd912304ed02138566 ]
    
    When running the spi-loopback-test with slower clock rate like 10 KHz,
    the test for 251 bytes transfer was failed.  This failure triggered an
    spi-omap2-mcspi's error message "DMA RX last word empty".
    
    This message means that PIO for reading the remaining bytes due to the
    DMA transfer length reduction is failed.  This problem can be fixed by
    polling OMAP2_MCSPI_CHSTAT_RXS bit in channel status register to wait
    until the receive buffer register is filled.
    
    Cc: Mark Brown <broonie@kernel.org>
    Signed-off-by: Akinobu Mita <akinobu.mita@gmail.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffe11f9f642fad25a4443c08b8d7a345f46404ce
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Wed Mar 22 04:02:43 2017 +0000

    ASoC: rcar: ssi: don't set SSICR.CKDV = 000 with SSIWSR.CONT
    
    
    [ Upstream commit 6b8530cc056efd4a11b034ca5b1e9f7e9563f553 ]
    
    R-Car Datasheet is indicating "SSICR.CKDV = 000 is invalid when
    SSIWSR.WS_MODE = 1 or SSIWSR.CONT = 1".
    Current driver will set CONT, thus, we shouldn't use CKDV = 000.
    This patch fixup it.
    
    Reported-by: Hiroyuki Yokoyama <hiroyuki.yokoyama.vx@renesas.com>
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Hiroyuki Yokoyama <hiroyuki.yokoyama.vx@renesas.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25952d168d82cc6f5697d7a3bd8532da65c2048a
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Thu Mar 23 10:39:40 2017 +0100

    sched: act_csum: don't mangle TCP and UDP GSO packets
    
    
    [ Upstream commit add641e7dee31b36aee83412c29e39dd1f5e0c9c ]
    
    after act_csum computes the checksum on skbs carrying GSO TCP/UDP packets,
    subsequent segmentation fails because skb_needs_check(skb, true) returns
    true. Because of that, skb_warn_bad_offload() is invoked and the following
    message is displayed:
    
    WARNING: CPU: 3 PID: 28 at net/core/dev.c:2553 skb_warn_bad_offload+0xf0/0xfd
    <...>
    
      [<ffffffff8171f486>] skb_warn_bad_offload+0xf0/0xfd
      [<ffffffff8161304c>] __skb_gso_segment+0xec/0x110
      [<ffffffff8161340d>] validate_xmit_skb+0x12d/0x2b0
      [<ffffffff816135d2>] validate_xmit_skb_list+0x42/0x70
      [<ffffffff8163c560>] sch_direct_xmit+0xd0/0x1b0
      [<ffffffff8163c760>] __qdisc_run+0x120/0x270
      [<ffffffff81613b3d>] __dev_queue_xmit+0x23d/0x690
      [<ffffffff81613fa0>] dev_queue_xmit+0x10/0x20
    
    Since GSO is able to compute checksum on individual segments of such skbs,
    we can simply skip mangling the packet.
    
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 359c65e5d1bf9f1a67473cd320d5a088aeabfc67
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Thu Mar 23 13:33:12 2017 -0700

    Input: qt1070 - add OF device ID table
    
    
    [ Upstream commit cf5cd9d4480a87da78768718cac194a71079b5cb ]
    
    The driver doesn't have a struct of_device_id table but supported devices
    are registered via Device Trees. This is working on the assumption that a
    I2C device registered via OF will always match a legacy I2C device ID and
    that the MODALIAS reported will always be of the form i2c:<device>.
    
    But this could change in the future so the correct approach is to have an
    OF device ID table if the devices are registered via OF.
    
    The compatible strings don't have a vendor prefix because that's how it's
    used currently, and changing this will be a Device Tree ABI break.
    
    Signed-off-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75e674419d547ecdaed2c60f3a267442928ec5f1
Author: Tom Hromatka <tom.hromatka@oracle.com>
Date:   Wed Jan 4 15:28:04 2017 -0700

    sysrq: Reset the watchdog timers while displaying high-resolution timers
    
    
    [ Upstream commit 0107042768658fea9f5f5a9c00b1c90f5dab6a06 ]
    
    On systems with a large number of CPUs, running sysrq-<q> can cause
    watchdog timeouts.  There are two slow sections of code in the sysrq-<q>
    path in timer_list.c.
    
    1. print_active_timers() - This function is called by print_cpu() and
       contains a slow goto loop.  On a machine with hundreds of CPUs, this
       loop took approximately 100ms for the first CPU in a NUMA node.
       (Subsequent CPUs in the same node ran much quicker.)  The total time
       to print all of the CPUs is ultimately long enough to trigger the
       soft lockup watchdog.
    
    2. print_tickdevice() - This function outputs a large amount of textual
       information.  This function also took approximately 100ms per CPU.
    
    Since sysrq-<q> is not a performance critical path, there should be no
    harm in touching the nmi watchdog in both slow sections above.  Touching
    it in just one location was insufficient on systems with hundreds of
    CPUs as occasional timeouts were still observed during testing.
    
    This issue was observed on an Oracle T7 machine with 128 CPUs, but I
    anticipate it may affect other systems with similarly large numbers of
    CPUs.
    
    Signed-off-by: Tom Hromatka <tom.hromatka@oracle.com>
    Reviewed-by: Rob Gardner <rob.gardner@oracle.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c07f47bbadcd54e5b54e539719528bfb146b4c6
Author: David Engraf <david.engraf@sysgo.com>
Date:   Fri Feb 17 08:51:03 2017 +0100

    timers, sched_clock: Update timeout for clock wrap
    
    
    [ Upstream commit 1b8955bc5ac575009835e371ae55e7f3af2197a9 ]
    
    The scheduler clock framework may not use the correct timeout for the clock
    wrap. This happens when a new clock driver calls sched_clock_register()
    after the kernel called sched_clock_postinit(). In this case the clock wrap
    timeout is too long thus sched_clock_poll() is called too late and the clock
    already wrapped.
    
    On my ARM system the scheduler was no longer scheduling any other task than
    the idle task because the sched_clock() wrapped.
    
    Signed-off-by: David Engraf <david.engraf@sysgo.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb796cd622706be3b0481f7e0e5f8ed0e2b06d91
Author: Janusz Krzysztofik <jmkrzyszt@gmail.com>
Date:   Wed Jun 15 19:29:50 2016 -0300

    media: i2c/soc_camera: fix ov6650 sensor getting wrong clock
    
    
    [ Upstream commit 54449af0e0b2ea43a8166611c95b730c850c3184 ]
    
    After changes to v4l2_clk API introduced in v4.1 by commits a37462b919
    '[media] V4L: remove clock name from v4l2_clk API' and 4f528afcfb
    '[media] V4L: add CCF support to the v4l2_clk API', ov6650 sensor
    stopped responding because v4l2_clk_get(), still called with
    depreciated V4L2 clock name "mclk", started to return respective CCF
    clock instead of the V4l2 one registered by soc_camera. Fix it by
    calling v4l2_clk_get() with NULL clock name.
    
    Created and tested on Amstrad Delta against Linux-4.7-rc3 with
    omap1_camera fixes.
    
    Signed-off-by: Janusz Krzysztofik <jmkrzyszt@gmail.com>
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b7750bdb26daeecf60b81781659cbc5896973d2
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Wed Mar 15 16:58:36 2017 -0500

    scsi: ipr: Fix missed EH wakeup
    
    
    [ Upstream commit 66a0d59cdd12546ddf01d229de28b07ccf6d637f ]
    
    Following a command abort or device reset, ipr's EH handlers wait for
    the commands getting aborted to get sent back from the adapter prior to
    returning from the EH handler. This fixes up some cases where the
    completion handler was not getting called, which would have resulted in
    the EH thread waiting until it timed out, greatly extending EH time.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Reviewed-by: Wendy Xiong <wenxiong@linux.vnet.ibm.com>
    Tested-by: Wendy Xiong <wenxiong@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4e4d194739aa7489b320648fdb60d943f215448
Author: Anton Sviridenko <anton@corp.bluecherry.net>
Date:   Thu Mar 9 10:46:18 2017 -0300

    solo6x10: release vb2 buffers in solo_stop_streaming()
    
    
    [ Upstream commit 6e4c8480bd2eb95309ad3c875e11d2cad98f9188 ]
    
    Fixes warning that appears in dmesg after closing V4L2 userspace
    application that plays video from the display device
    (first device from V4L2 device nodes provided by solo, usually /dev/video0
    when no other V4L2 devices are present). Encoder device nodes are not
    affected. Can be reproduced by starting and closing
    
    ffplay -f video4linux2  /dev/video0
    
    [ 8130.281251] ------------[ cut here ]------------
    [ 8130.281256] WARNING: CPU: 1 PID: 20414 at drivers/media/v4l2-core/videobuf2-core.c:1651 __vb2_queue_cancel+0x14b/0x230
    [ 8130.281257] Modules linked in: ipt_MASQUERADE nf_nat_masquerade_ipv4 iptable_nat solo6x10 x86_pkg_temp_thermal vboxpci(O) vboxnetadp(O) vboxnetflt(O) vboxdrv(O)
    [ 8130.281264] CPU: 1 PID: 20414 Comm: ffplay Tainted: G           O    4.10.0-gentoo #1
    [ 8130.281264] Hardware name: ASUS All Series/B85M-E, BIOS 2301 03/30/2015
    [ 8130.281265] Call Trace:
    [ 8130.281267]  dump_stack+0x4f/0x72
    [ 8130.281270]  __warn+0xc7/0xf0
    [ 8130.281271]  warn_slowpath_null+0x18/0x20
    [ 8130.281272]  __vb2_queue_cancel+0x14b/0x230
    [ 8130.281273]  vb2_core_streamoff+0x23/0x90
    [ 8130.281275]  vb2_streamoff+0x24/0x50
    [ 8130.281276]  vb2_ioctl_streamoff+0x3d/0x50
    [ 8130.281278]  v4l_streamoff+0x15/0x20
    [ 8130.281279]  __video_do_ioctl+0x25e/0x2f0
    [ 8130.281280]  video_usercopy+0x279/0x520
    [ 8130.281282]  ? v4l_enum_fmt+0x1330/0x1330
    [ 8130.281285]  ? unmap_region+0xdf/0x110
    [ 8130.281285]  video_ioctl2+0x10/0x20
    [ 8130.281286]  v4l2_ioctl+0xce/0xe0
    [ 8130.281289]  do_vfs_ioctl+0x8b/0x5b0
    [ 8130.281290]  ? __fget+0x72/0xa0
    [ 8130.281291]  SyS_ioctl+0x74/0x80
    [ 8130.281294]  entry_SYSCALL_64_fastpath+0x13/0x94
    [ 8130.281295] RIP: 0033:0x7ff86fee6b27
    [ 8130.281296] RSP: 002b:00007ffe467f6a08 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    [ 8130.281297] RAX: ffffffffffffffda RBX: 00000000d1a4d788 RCX: 00007ff86fee6b27
    [ 8130.281297] RDX: 00007ffe467f6a14 RSI: 0000000040045613 RDI: 0000000000000006
    [ 8130.281298] RBP: 000000000373f8d0 R08: 00000000ffffffff R09: 00007ff860001140
    [ 8130.281298] R10: 0000000000000243 R11: 0000000000000246 R12: 0000000000000000
    [ 8130.281299] R13: 00000000000000a0 R14: 00007ffe467f6530 R15: 0000000001f32228
    [ 8130.281300] ---[ end trace 00695dc96be646e7 ]---
    
    Signed-off-by: Anton Sviridenko <anton@corp.bluecherry.net>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60872f9e197cfb13eb11ab31bdf6a149e228ee3c
Author: Rob Herring <robh@kernel.org>
Date:   Mon Jan 16 14:28:39 2017 -0600

    of: fix of_device_get_modalias returned length when truncating buffers
    
    
    [ Upstream commit bcf54d5385abaea9c8026aae6f4eeb348671a52d ]
    
    If the length of the modalias is greater than the buffer size, then the
    modalias is truncated. However the untruncated length is returned which
    will cause an error. Fix this to return the truncated length. If an error
    in the case was desired, then then we should just return -ENOMEM.
    
    The reality is no device will ever have 4KB of compatible strings to hit
    this case.
    
    Signed-off-by: Rob Herring <robh@kernel.org>
    Cc: Frank Rowand <frowand.list@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d59be48a99480ef920f4df4a4de010590c0f634
Author: Andreas Pape <APape@phoenixcontact.com>
Date:   Mon Sep 5 13:20:29 2016 +0200

    batman-adv: handle race condition for claims between gateways
    
    
    [ Upstream commit a3a5129e122709306cfa6409781716c2933df99b ]
    
    Consider the following situation which has been found in a test setup:
    Gateway B has claimed client C and gateway A has the same backbone
    network as B. C sends a broad- or multicast to B and directly after
    this packet decides to send another packet to A due to a better TQ
    value. B will forward the broad-/multicast into the backbone as it is
    the responsible gw and after that A will claim C as it has been
    chosen by C as the best gateway. If it now happens that A claims C
    before it has received the broad-/multicast forwarded by B (due to
    backbone topology or due to some delay in B when forwarding the
    packet) we get a critical situation: in the current code A will
    immediately unclaim C when receiving the multicast due to the
    roaming client scenario although the position of C has not changed
    in the mesh. If this happens the multi-/broadcast forwarded by B
    will be sent back into the mesh by A and we have looping packets
    until one of the gateways claims C again.
    In order to prevent this, unclaiming of a client due to the roaming
    client scenario is only done after a certain time is expired after
    the last claim of the client. 100 ms are used here, which should be
    slow enough for big backbones and slow gateways but fast enough not
    to break the roaming client use case.
    
    Acked-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Andreas Pape <apape@phoenixcontact.com>
    [sven@narfation.org: fix conflicts with current version]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 182b1a9332536d824380d3d49ff6ed97686d885e
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sat Mar 18 17:40:01 2017 +0100

    ARM: dts: Adjust moxart IRQ controller and flags
    
    
    [ Upstream commit c2a736b698008d296c5010ec39077eeb5796109f ]
    
    The moxart interrupt line flags were not respected in previous
    driver: instead of assigning them per-consumer, a fixes mask
    was set in the controller.
    
    With the migration to a standard Faraday driver we need to
    set up and handle the consumer flags correctly. Also remove
    the Moxart-specific flags when switching to using real consumer
    flags.
    
    Extend the register window to 0x100 bytes as we may have a few
    more registers in there and it doesn't hurt.
    
    Tested-by: Jonas Jensen <jonas.jensen@gmail.com>
    Signed-off-by: Jonas Jensen <jonas.jensen@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d813b4903ff6d10f362dee6a33fa2ec052949f30
Author: Andrey Vagin <avagin@openvz.org>
Date:   Wed Mar 15 17:41:14 2017 -0700

    net/8021q: create device with all possible features in wanted_features
    
    
    [ Upstream commit 88997e4208aea117627898e5f6f9801cf3cd42d2 ]
    
    wanted_features is a set of features which have to be enabled if a
    hardware allows that.
    
    Currently when a vlan device is created, its wanted_features is set to
    current features of its base device.
    
    The problem is that the base device can get new features and they are
    not propagated to vlan-s of this device.
    
    If we look at bonding devices, they doesn't have this problem and this
    patch suggests to fix this issue by the same way how it works for bonding
    devices.
    
    We meet this problem, when we try to create a vlan device over a bonding
    device. When a system are booting, real devices require time to be
    initialized, so bonding devices created without slaves, then vlan
    devices are created and only then ethernet devices are added to the
    bonding device. As a result we have vlan devices with disabled
    scatter-gather.
    
    * create a bonding device
      $ ip link add bond0 type bond
      $ ethtool -k bond0 | grep scatter
      scatter-gather: off
            tx-scatter-gather: off [requested on]
            tx-scatter-gather-fraglist: off [requested on]
    
    * create a vlan device
      $ ip link add link bond0 name bond0.10 type vlan id 10
      $ ethtool -k bond0.10 | grep scatter
      scatter-gather: off
            tx-scatter-gather: off
            tx-scatter-gather-fraglist: off
    
    * Add a slave device to bond0
      $ ip link set dev eth0 master bond0
    
    And now we can see that the bond0 device has got the scatter-gather
    feature, but the bond0.10 hasn't got it.
    [root@laptop linux-task-diag]# ethtool -k bond0 | grep scatter
    scatter-gather: on
            tx-scatter-gather: on
            tx-scatter-gather-fraglist: on
    [root@laptop linux-task-diag]# ethtool -k bond0.10 | grep scatter
    scatter-gather: off
            tx-scatter-gather: off
            tx-scatter-gather-fraglist: off
    
    With this patch the vlan device will get all new features from the
    bonding device.
    
    Here is a call trace how features which are set in this patch reach
    dev->wanted_features.
    
    register_netdevice
       vlan_dev_init
            ...
            dev->hw_features = NETIF_F_HW_CSUM | NETIF_F_SG |
                           NETIF_F_FRAGLIST | NETIF_F_GSO_SOFTWARE |
                           NETIF_F_HIGHDMA | NETIF_F_SCTP_CRC |
                           NETIF_F_ALL_FCOE;
    
            dev->features |= dev->hw_features;
            ...
        dev->wanted_features = dev->features & dev->hw_features;
        __netdev_update_features(dev);
            vlan_dev_fix_features
               ...
    
    Cc: Alexey Kuznetsov <kuznet@virtuozzo.com>
    Cc: Patrick McHardy <kaber@trash.net>
    Cc: "David S. Miller" <davem@davemloft.net>
    Signed-off-by: Andrei Vagin <avagin@openvz.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa4b0ac7c16942717370b704869a72c383b0508a
Author: Tomasz Kramkowski <tk@the-tk.com>
Date:   Tue Mar 14 13:29:13 2017 +0000

    HID: clamp input to logical range if no null state
    
    
    [ Upstream commit c3883fe06488a483658ba5d849b70e49bee15e7c ]
    
    This patch fixes an issue in drivers/hid/hid-input.c where values
    outside of the logical range are not clamped when "null state" bit of
    the input control is not set.
    
    This was discussed on the lists [1] and this change stems from the fact
    due to the ambiguity of the HID specification it might be appropriate to
    follow Microsoft's own interpretation of the specification. As noted in
    Microsoft's documentation [2] in the section titled "Required HID usages
    for digitizers" it is noted that values reported outside the logical
    range "will be considered as invalid data and the value will be changed
    to the nearest boundary value (logical min/max)."
    
    This patch fixes an issue where the (1292:4745) Innomedia INNEX
    GENESIS/ATARI reports out of range values for its X and Y axis of the
    DPad which, due to the null state bit being unset, are forwarded to
    userspace as is. Now these values will get clamped to the logical range
    before being forwarded to userspace. This device was also used to test
    this patch.
    
    This patch expands on commit 3f3752705dbd ("HID: reject input outside
    logical range only if null state is set").
    
    [1]: http://lkml.kernel.org/r/20170307131036.GA853@gaia.local
    [2]: https://msdn.microsoft.com/en-us/library/windows/hardware/dn672278(v=vs.85).asp
    
    Signed-off-by: Tomasz Kramkowski <tk@the-tk.com>
    Acked-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7acee5659b2008481d500b3299545a74f0cb78e1
Author: Kefeng Wang <wangkefeng.wang@huawei.com>
Date:   Fri Mar 17 16:16:32 2017 +0800

    perf probe: Return errno when not hitting any event
    
    
    [ Upstream commit 70946723eeb859466f026274b29c6196e39149c4 ]
    
    On old perf, when using 'perf probe -d' to delete an inexistent event,
    it returns errno, eg,
    
      -bash-4.3# perf probe -d xxx  || echo $?
      Info: Event "*:xxx" does not exist.
        Error: Failed to delete events.
      255
    
    But now perf_del_probe_events() will always set ret = 0, different from
    previous del_perf_probe_events(). After this, it returns errno again,
    eg,
    
      -bash-4.3# ./perf probe -d xxx  || echo $?
      "xxx" does not hit any event.
        Error: Failed to delete events.
      254
    
    And it is more appropriate to return -ENOENT instead of -EPERM.
    
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Hanjun Guo <guohanjun@huawei.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Fixes: dddc7ee32fa1 ("perf probe: Fix an error when deleting probes successfully")
    Link: http://lkml.kernel.org/r/1489738592-61011-1-git-send-email-wangkefeng.wang@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2393b51e235875e79b15bb0dc751e4afdca55e9
Author: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
Date:   Wed Feb 22 21:03:11 2017 +0530

    ath10k: disallow DFS simulation if DFS channel is not enabled
    
    
    [ Upstream commit ca07baab0b1e627ae1d4a55d190fb1c9d32a3445 ]
    
    If DFS is not enabled in hostapd (ieee80211h=0) DFS channels shall
    not be available for use even though the hardware may have the capability
    to support DFS. With this configuration (DFS disabled in hostapd) trying to
    bring up ath10k device in DFS channel for AP mode fails and trying to
    simulate DFS in ath10k debugfs results in a warning in cfg80211 complaining
    invalid channel and this should be avoided in the driver itself rather than
    false propogating RADAR detection to mac80211/cfg80211. Fix this by
    checking for the first vif 'is_started' state(should work for client mode
    as well) as all the vifs shall be configured for the same channel
    
    sys/kernel/debug/ieee80211/phy1/ath10k# echo 1 > dfs_simulate_radar
    
    WARNING: at net/wireless/chan.c:265 cfg80211_radar_event+0x24/0x60
    Workqueue: phy0 ieee80211_dfs_radar_detected_work [mac80211]
    [<c022f2d4>] (warn_slowpath_null) from
    [<bf72dab8>] (cfg80211_radar_event+0x24/0x60 [cfg80211])
    [<bf72dab8>] (cfg80211_radar_event [cfg80211]) from
    [<bf7813e0>] (ieee80211_dfs_radar_detected_work+0x94/0xa0 [mac80211])
    [<bf7813e0>] (ieee80211_dfs_radar_detected_work [mac80211]) from
    [<c0242320>] (process_one_work+0x20c/0x32c)
    
    WARNING: at net/wireless/nl80211.c:2488 nl80211_get_mpath+0x13c/0x4cc
     Workqueue: phy0 ieee80211_dfs_radar_detected_work [mac80211]
    [<c022f2d4>] (warn_slowpath_null) from
    [<bf72dab8>] (cfg80211_radar_event+0x24/0x60 [cfg80211])
    [<bf72dab8>] (cfg80211_radar_event [cfg80211]) from
    [<bf7813e0>] (ieee80211_dfs_radar_detected_work+0x94/0xa0 [mac80211])
    [<bf7813e0>] (ieee80211_dfs_radar_detected_work [mac80211]) from
    [<c0242320>] (process_one_work+0x20c/0x32c)
    
    Signed-off-by: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b3ec39d3b6d1d252e03a86fcdcc8f8a2970258e
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Wed Mar 15 20:40:25 2017 +0000

    drm: Defer disabling the vblank IRQ until the next interrupt (for instant-off)
    
    
    [ Upstream commit 608b20506941969ea30d8c08dc9ae02bb87dbf7d ]
    
    On vblank instant-off systems, we can get into a situation where the cost
    of enabling and disabling the vblank IRQ around a drmWaitVblank query
    dominates. And with the advent of even deeper hardware sleep state,
    touching registers becomes ever more expensive.  However, we know that if
    the user wants the current vblank counter, they are also very likely to
    immediately queue a vblank wait and so we can keep the interrupt around
    and only turn it off if we have no further vblank requests queued within
    the interrupt interval.
    
    After vblank event delivery, this patch adds a shadow of one vblank where
    the interrupt is kept alive for the user to query and queue another vblank
    event. Similarly, if the user is using blocking drmWaitVblanks, the
    interrupt will be disabled on the IRQ following the wait completion.
    However, if the user is simply querying the current vblank counter and
    timestamp, the interrupt will be disabled after every IRQ and the user
    will enabled it again on the first query following the IRQ.
    
    v2: Mario Kleiner -
    After testing this, one more thing that would make sense is to move
    the disable block at the end of drm_handle_vblank() instead of at the
    top.
    
    Turns out that if high precision timestaming is disabled or doesn't
    work for some reason (as can be simulated by echo 0 >
    /sys/module/drm/parameters/timestamp_precision_usec), then with your
    delayed disable code at its current place, the vblank counter won't
    increment anymore at all for instant queries, ie. with your other
    "instant query" patches. Clients which repeatedly query the counter
    and wait for it to progress will simply hang, spinning in an endless
    query loop. There's that comment in vblank_disable_and_save:
    
    "* Skip this step if there isn't any high precision timestamp
     * available. In that case we can't account for this and just
     * hope for the best.
     */
    
    With the disable happening after leading edge of vblank (== hw counter
    increment already happened) but before the vblank counter/timestamp
    handling in drm_handle_vblank, that step is needed to keep the counter
    progressing, so skipping it is bad.
    
    Now without high precision timestamping support, a kms driver must not
    set dev->vblank_disable_immediate = true, as this would cause problems
    for clients, so this shouldn't matter, but it would be good to still
    make this robust against a future kms driver which might have
    unreliable high precision timestamping, e.g., high precision
    timestamping that intermittently doesn't work.
    
    v3: Patch before coffee needs extra coffee.
    
    Testcase: igt/kms_vblank
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Michel Dänzer <michel@daenzer.net>
    Cc: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Cc: Dave Airlie <airlied@redhat.com>,
    Cc: Mario Kleiner <mario.kleiner.de@gmail.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170315204027.20160-1-chris@chris-wilson.co.uk
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f51536fff7b7c2a054b9dee487fec4eb55fe2d2e
Author: Quan Nguyen <qnguyen@apm.com>
Date:   Wed Mar 15 13:27:16 2017 -0700

    drivers: net: xgene: Fix hardware checksum setting
    
    
    [ Upstream commit e026e700d940a1ea3d3bc84d92ac668b1f015462 ]
    
    This patch fixes the hardware checksum settings by properly program
    the classifier. Otherwise, packet may be received with checksum error
    on X-Gene1 SoC.
    
    Signed-off-by: Quan Nguyen <qnguyen@apm.com>
    Signed-off-by: Iyappan Subramanian <isubramanian@apm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7bb9f33452f06da2e114cf154fa729963399414
Author: Stephane Eranian <eranian@google.com>
Date:   Wed Mar 15 10:17:13 2017 -0700

    perf tools: Make perf_event__synthesize_mmap_events() scale
    
    
    [ Upstream commit 88b897a30c525c2eee6e7f16e1e8d0f18830845e ]
    
    This patch significantly improves the execution time of
    perf_event__synthesize_mmap_events() when running perf record on systems
    where processes have lots of threads.
    
    It just happens that cat /proc/pid/maps support uses a O(N^2) algorithm to
    generate each map line in the maps file.  If you have 1000 threads, then you
    have necessarily 1000 stacks.  For each vma, you need to check if it
    corresponds to a thread's stack.  With a large number of threads, this can take
    a very long time. I have seen latencies >> 10mn.
    
    As of today, perf does not use the fact that a mapping is a stack, therefore we
    can work around the issue by using /proc/pid/tasks/pid/maps.  This entry does
    not try to map a vma to stack and is thus much faster with no loss of
    functonality.
    
    The proc-map-timeout logic is kept in case users still want some upper limit.
    
    In V2, we fix the file path from /proc/pid/tasks/pid/maps to actual
    /proc/pid/task/pid/maps, tasks -> task.  Thanks Arnaldo for catching this.
    
    Committer note:
    
    This problem seems to have been elliminated in the kernel since commit :
    b18cb64ead40 ("fs/proc: Stop trying to report thread stacks").
    
    Signed-off-by: Stephane Eranian <eranian@google.com>
    Acked-by: Jiri Olsa <jolsa@redhat.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20170315135059.GC2177@redhat.com
    Link: http://lkml.kernel.org/r/1489598233-25586-1-git-send-email-eranian@google.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f18637f909ad2e12de3ada8329deb1e4b30880e8
Author: Lihong Yang <lihong.yang@intel.com>
Date:   Mon Jan 30 12:29:32 2017 -0800

    i40e: fix ethtool to get EEPROM data from X722 interface
    
    
    [ Upstream commit c271dd6c391b535226cf1a81aaad9f33cb5899d3 ]
    
    Currently ethtool -e will error out with a X722 interface
    as its EEPROM has a scope limit at offset 0x5B9FFF.
    This patch fixes the issue by setting the EEPROM length to
    the scope limit to avoid NVM read failure beyond that.
    
    Change-ID: I0b7d4dd6c7f2a57cace438af5dffa0f44c229372
    Signed-off-by: Lihong Yang <lihong.yang@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d6455c5f59f1445ceafc68ac6e51ed9eb6dd1a6
Author: Aaron Salter <aaron.k.salter@intel.com>
Date:   Fri Dec 2 12:33:02 2016 -0800

    i40e: Acquire NVM lock before reads on all devices
    
    
    [ Upstream commit 96a39aed25e6559b160786117df124084feb9080 ]
    
    Acquire NVM lock before reads on all devices.  Previously, locks were
    only used for X722 and later.  Fixes an issue where simultaneous X710
    NVM accesses were interfering with each other.
    
    Change-ID: If570bb7acf958cef58725ec2a2011cead6f80638
    Signed-off-by: Aaron Salter <aaron.k.salter@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecabc4777cf0918eb5e0ad2e0842bb4b1faab59e
Author: Changbin Du <changbin.du@intel.com>
Date:   Mon Mar 13 16:31:48 2017 +0800

    perf sort: Fix segfault with basic block 'cycles' sort dimension
    
    
    [ Upstream commit 4b0b3aa6a2756e6115fdf275c521e4552a7082f3 ]
    
    Skip the sample which doesn't have branch_info to avoid segmentation
    fault:
    
    The fault can be reproduced by:
    
      perf record -a
      perf report -F cycles
    
    Signed-off-by: Changbin Du <changbin.du@intel.com>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Fixes: 0e332f033a82 ("perf tools: Add support for cycles, weight branch_info field")
    Link: http://lkml.kernel.org/r/20170313083148.23568-1-changbin.du@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89aadbc66e41aee339979f5b86c8bd6354c6ceac
Author: Alexander Potapenko <glider@google.com>
Date:   Mon Mar 6 19:46:14 2017 +0100

    selinux: check for address length in selinux_socket_bind()
    
    
    [ Upstream commit e2f586bd83177d22072b275edd4b8b872daba924 ]
    
    KMSAN (KernelMemorySanitizer, a new error detection tool) reports use of
    uninitialized memory in selinux_socket_bind():
    
    ==================================================================
    BUG: KMSAN: use of unitialized memory
    inter: 0
    CPU: 3 PID: 1074 Comm: packet2 Tainted: G    B           4.8.0-rc6+ #1916
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
     0000000000000000 ffff8800882ffb08 ffffffff825759c8 ffff8800882ffa48
     ffffffff818bf551 ffffffff85bab870 0000000000000092 ffffffff85bab550
     0000000000000000 0000000000000092 00000000bb0009bb 0000000000000002
    Call Trace:
     [<     inline     >] __dump_stack lib/dump_stack.c:15
     [<ffffffff825759c8>] dump_stack+0x238/0x290 lib/dump_stack.c:51
     [<ffffffff818bdee6>] kmsan_report+0x276/0x2e0 mm/kmsan/kmsan.c:1008
     [<ffffffff818bf0fb>] __msan_warning+0x5b/0xb0 mm/kmsan/kmsan_instr.c:424
     [<ffffffff822dae71>] selinux_socket_bind+0xf41/0x1080 security/selinux/hooks.c:4288
     [<ffffffff8229357c>] security_socket_bind+0x1ec/0x240 security/security.c:1240
     [<ffffffff84265d98>] SYSC_bind+0x358/0x5f0 net/socket.c:1366
     [<ffffffff84265a22>] SyS_bind+0x82/0xa0 net/socket.c:1356
     [<ffffffff81005678>] do_syscall_64+0x58/0x70 arch/x86/entry/common.c:292
     [<ffffffff8518217c>] entry_SYSCALL64_slow_path+0x25/0x25 arch/x86/entry/entry_64.o:?
    chained origin: 00000000ba6009bb
     [<ffffffff810bb7a7>] save_stack_trace+0x27/0x50 arch/x86/kernel/stacktrace.c:67
     [<     inline     >] kmsan_save_stack_with_flags mm/kmsan/kmsan.c:322
     [<     inline     >] kmsan_save_stack mm/kmsan/kmsan.c:337
     [<ffffffff818bd2b8>] kmsan_internal_chain_origin+0x118/0x1e0 mm/kmsan/kmsan.c:530
     [<ffffffff818bf033>] __msan_set_alloca_origin4+0xc3/0x130 mm/kmsan/kmsan_instr.c:380
     [<ffffffff84265b69>] SYSC_bind+0x129/0x5f0 net/socket.c:1356
     [<ffffffff84265a22>] SyS_bind+0x82/0xa0 net/socket.c:1356
     [<ffffffff81005678>] do_syscall_64+0x58/0x70 arch/x86/entry/common.c:292
     [<ffffffff8518217c>] return_from_SYSCALL_64+0x0/0x6a arch/x86/entry/entry_64.o:?
    origin description: ----address@SYSC_bind (origin=00000000b8c00900)
    ==================================================================
    
    (the line numbers are relative to 4.8-rc6, but the bug persists upstream)
    
    , when I run the following program as root:
    
    =======================================================
      #include <string.h>
      #include <sys/socket.h>
      #include <netinet/in.h>
    
      int main(int argc, char *argv[]) {
        struct sockaddr addr;
        int size = 0;
        if (argc > 1) {
          size = atoi(argv[1]);
        }
        memset(&addr, 0, sizeof(addr));
        int fd = socket(PF_INET6, SOCK_DGRAM, IPPROTO_IP);
        bind(fd, &addr, size);
        return 0;
      }
    =======================================================
    
    (for different values of |size| other error reports are printed).
    
    This happens because bind() unconditionally copies |size| bytes of
    |addr| to the kernel, leaving the rest uninitialized. Then
    security_socket_bind() reads the IP address bytes, including the
    uninitialized ones, to determine the port, or e.g. pass them further to
    sel_netnode_find(), which uses them to calculate a hash.
    
    Signed-off-by: Alexander Potapenko <glider@google.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    [PM: fixed some whitespace damage]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fbe422076d36615ec6fe8648d1aecfa460bc67d
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Thu Jan 26 14:07:47 2017 -0500

    PCI/MSI: Stop disabling MSI/MSI-X in pci_device_shutdown()
    
    
    [ Upstream commit fda78d7a0ead144f4b2cdb582dcba47911f4952c ]
    
    The pci_bus_type .shutdown method, pci_device_shutdown(), is called from
    device_shutdown() in the kernel restart and shutdown paths.
    
    Previously, pci_device_shutdown() called pci_msi_shutdown() and
    pci_msix_shutdown().  This disables MSI and MSI-X, which causes the device
    to fall back to raising interrupts via INTx.  But the driver is still bound
    to the device, it doesn't know about this change, and it likely doesn't
    have an INTx handler, so these INTx interrupts cause "nobody cared"
    warnings like this:
    
      irq 16: nobody cared (try booting with the "irqpoll" option)
      CPU: 0 PID: 0 Comm: swapper/0 Not tainted 4.8.2-1.el7_UNSUPPORTED.x86_64 #1
      Hardware name: Hewlett-Packard HP Z820 Workstation/158B, BIOS J63 v03.90 06/
      ...
    
    The MSI disabling code was added by d52877c7b1af ("pci/irq: let
    pci_device_shutdown to call pci_msi_shutdown v2") because a driver left MSI
    enabled and kdump failed because the kexeced kernel wasn't prepared to
    receive the MSI interrupts.
    
    Subsequent commits 1851617cd2da ("PCI/MSI: Disable MSI at enumeration even
    if kernel doesn't support MSI") and  e80e7edc55ba ("PCI/MSI: Initialize MSI
    capability for all architectures") changed the kexeced kernel to disable
    all MSIs itself so it no longer depends on the crashed kernel to clean up
    after itself.
    
    Stop disabling MSI/MSI-X in pci_device_shutdown().  This resolves the
    "nobody cared" unhandled IRQ issue above.  It also allows PCI serial
    devices, which may rely on the MSI interrupts, to continue outputting
    messages during reboot/shutdown.
    
    [bhelgaas: changelog, drop pci_msi_shutdown() and pci_msix_shutdown() calls
    altogether]
    Fixes: https://bugzilla.kernel.org/show_bug.cgi?id=187351
    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    CC: Alex Williamson <alex.williamson@redhat.com>
    CC: David Arcari <darcari@redhat.com>
    CC: Myron Stowe <mstowe@redhat.com>
    CC: Lukas Wunner <lukas@wunner.de>
    CC: Keith Busch <keith.busch@intel.com>
    CC: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d676ed9c0467494c9bfeb977d0fb26005546c82b
Author: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
Date:   Wed Mar 8 13:52:06 2017 +0200

    ath10k: fix a warning during channel switch with multiple vaps
    
    
    [ Upstream commit c73f8c00330f59ce9b1ace9ff698aca83390d358 ]
    
    Doing a channel switch via hostapd_cli seems to update
    the new channel context for each VAP's appropriately as below
    in 'ath10k_mac_update_vif_chan', hence we can safely suppress the
    warning that shows up during this operation and dump the warning only
    if no vaps are available for channel switch
    
    hostapd_cli -i wlan0 chan_switch 5 5200
    OK
    
    ath10k_pci : mac chanctx switch n_vifs 3 mode 1
    ath10k_pci : mac chanctx switch vdev_id 2 freq 5180->5200 width 0->0
    ath10k_pci : mac chanctx switch vdev_id 1 freq 5180->5200 width 0->0
    ath10k_pci : mac chanctx switch vdev_id 0 freq 5180->5200 width 0->0
    
    Call Trace:
    
    WARNING: backports-20161201-3.14.77-9ab3068/drivers/net/wireless/ath/ath10k/mac.c:7126
    [<c022f2d4>] (warn_slowpath_null) from [<bf7f150c>]
    (ath10k_reconfig_complete+0xe4/0x25c [ath10k_core])
    [<bf7f150c>] (ath10k_reconfig_complete [ath10k_core])
    [<bf7f35f0>] (ath10k_mac_vif_ap_csa_work+0x214/0x370 [ath10k_core])
    [<bf7f38b8>] (ath10k_mac_op_change_chanctx+0x108/0x128 [ath10k_core])
    [<bf782ac0>] (ieee80211_recalc_chanctx_min_def+0x30c/0x430 [mac80211])
    [<bf7830a4>] (ieee80211_recalc_smps_chanctx+0x2ec/0x840 [mac80211])
    [<bf7843e8>] (ieee80211_vif_use_reserved_context+0x7c/0xf8 [mac80211])
    [<bf7843e8>] (ieee80211_vif_use_reserved_context [mac80211])
    [<bf76e5d4>] (ieee80211_csa_finalize_work+0x5c/0x88 [mac80211])
    
    Fixes: d7bf4b4aba05 ("ath10k: fix ar->rx_channel updating logic")
    Signed-off-by: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1a3bc45832dedcee6137f048bbc3e49b8a657fb
Author: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
Date:   Mon Feb 27 17:33:30 2017 -0300

    drm: qxl: Don't alloc fbdev if emulation is not supported
    
    
    [ Upstream commit 861078381ba56b56808113736000d9e7ead349c8 ]
    
    If fbdev emulation is disabled, the QXL shutdown path will try to clean
    a framebuffer that wasn't initialized, hitting the Oops below.  The
    problem is that even when FBDEV_EMULATION is disabled we allocate the
    qfbdev strutucture, but we don't initialize it.  The fix is to stop
    allocating the memory, since it won't be used.  This allows the existing
    verification in the cleanup hook to do it's job preventing the oops.
    
    Now that we don't allocate the unused fbdev structure, we need to be
    careful when dereferencing it in the PM suspend hook.
    
    [   24.284684] BUG: unable to handle kernel NULL pointer dereference at 00000000000002e0
    [   24.285627] IP: mutex_lock+0x18/0x30
    [   24.286049] PGD 78cdf067
    [   24.286050] PUD 7940f067
    [   24.286344] PMD 0
    [   24.286649]
    [   24.287072] Oops: 0002 [#1] SMP
    [   24.287422] Modules linked in: qxl
    [   24.287806] CPU: 0 PID: 2328 Comm: bash Not tainted 4.10.0-rc5+ #97
    [   24.288515] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.9.3-20161025_171302-gandalf 04/01/2014
    [   24.289681] task: ffff88007c4c0000 task.stack: ffffc90001b58000
    [   24.290354] RIP: 0010:mutex_lock+0x18/0x30
    [   24.290812] RSP: 0018:ffffc90001b5bcb0 EFLAGS: 00010246
    [   24.291401] RAX: 0000000000000000 RBX: 00000000000002e0 RCX: 0000000000000000
    [   24.292209] RDX: ffff88007c4c0000 RSI: 0000000000000001 RDI: 00000000000002e0
    [   24.292987] RBP: ffffc90001b5bcb8 R08: fffffffffffffffe R09: 0000000000000001
    [   24.293797] R10: ffff880078d80b80 R11: 0000000000011400 R12: 0000000000000000
    [   24.294601] R13: 00000000000002e0 R14: ffffffffa0009c28 R15: 0000000000000060
    [   24.295439] FS:  00007f30e3acbb40(0000) GS:ffff88007fc00000(0000) knlGS:0000000000000000
    [   24.296364] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   24.296997] CR2: 00000000000002e0 CR3: 0000000078c7b000 CR4: 00000000000006f0
    [   24.297813] Call Trace:
    [   24.298097]  drm_framebuffer_cleanup+0x1f/0x70
    [   24.298612]  qxl_fbdev_fini+0x68/0x90 [qxl]
    [   24.299074]  qxl_modeset_fini+0xd/0x30 [qxl]
    [   24.299562]  qxl_pci_remove+0x22/0x50 [qxl]
    [   24.300025]  pci_device_remove+0x34/0xb0
    [   24.300507]  device_release_driver_internal+0x150/0x200
    [   24.301082]  device_release_driver+0xd/0x10
    [   24.301587]  unbind_store+0x108/0x150
    [   24.301993]  drv_attr_store+0x20/0x30
    [   24.302402]  sysfs_kf_write+0x32/0x40
    [   24.302827]  kernfs_fop_write+0x108/0x190
    [   24.303269]  __vfs_write+0x23/0x120
    [   24.303678]  ? security_file_permission+0x36/0xb0
    [   24.304193]  ? rw_verify_area+0x49/0xb0
    [   24.304636]  vfs_write+0xb0/0x190
    [   24.305004]  SyS_write+0x41/0xa0
    [   24.305362]  entry_SYSCALL_64_fastpath+0x1a/0xa9
    [   24.305887] RIP: 0033:0x7f30e31d9620
    [   24.306285] RSP: 002b:00007ffc54b47e68 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    [   24.307128] RAX: ffffffffffffffda RBX: 00007f30e3497600 RCX: 00007f30e31d9620
    [   24.307928] RDX: 000000000000000d RSI: 0000000000da2008 RDI: 0000000000000001
    [   24.308727] RBP: 000000000070bc60 R08: 00007f30e3498760 R09: 00007f30e3acbb40
    [   24.309504] R10: 0000000000000073 R11: 0000000000000246 R12: 0000000000000001
    [   24.310295] R13: 0000000000000000 R14: 0000000000000000 R15: 00007ffc54b47f34
    [   24.311095] Code: 0e 01 e9 7b fe ff ff 66 90 66 2e 0f 1f 84 00 00 00 00 00
    55 48 89 e5 53 48 89 fb e8 83 e8 ff ff 65 48 8b 14 25 40 c4 00 00 31 c0 <3e>
    48 0f b1 13 48 85 c0 74 08 48 89 df e8 66 fd ff ff 5b 5d c3
    [   24.313182] RIP: mutex_lock+0x18/0x30 RSP: ffffc90001b5bcb0
    [   24.313811] CR2: 00000000000002e0
    [   24.314208] ---[ end trace 29669c1593cae14b ]---
    
    Signed-off-by: Gabriel Krisman Bertazi <krisman@collabora.co.uk>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170227203330.18542-1-krisman@collabora.co.uk
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b7940be33211e6f26ca129b8aaf53ea6e0f176b
Author: Valtteri Heikkilä <rnd@nic.fi>
Date:   Tue Feb 14 23:14:32 2017 +0000

    HID: reject input outside logical range only if null state is set
    
    
    [ Upstream commit 3f3752705dbd50b66b66ad7b4d54fe33d2f746ed ]
    
    This patch fixes an issue in drivers/hid/hid-input.c where USB HID
    control null state flag is not checked upon rejecting inputs outside
    logical minimum-maximum range. The check should be made according to USB
    HID specification 1.11, section 6.2.2.5, p.31. The fix will resolve
    issues with some game controllers, such as:
    https://bugzilla.kernel.org/show_bug.cgi?id=68621
    
    [tk@the-tk.com: shortened and fixed spelling in commit message]
    Signed-off-by: Valtteri Heikkilä <rnd@nic.fi>
    Signed-off-by: Tomasz Kramkowski <tk@the-tk.com>
    Acked-By: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6e7ba9d76af6ae8b223e7e8a68c2daaa3ffb789
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Feb 28 11:47:33 2017 +0000

    staging: wilc1000: add check for kmalloc allocation failure.
    
    
    [ Upstream commit 6cc0c259d034c6ab48f4e12f505213988e73d380 ]
    
    Add a sanity check that wid.val has been allocated, fixes a null
    pointer deference on stamac when calling ether_add_copy.
    
    Detected by CoverityScan, CID#1369537 ("Dereference null return value")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2e4c685b3c97bbf6210602cbe5791c468a31fdd
Author: Varsha Rao <rvarsha016@gmail.com>
Date:   Sat Feb 25 17:53:58 2017 +0530

    staging: speakup: Replace BUG_ON() with WARN_ON().
    
    
    [ Upstream commit d351c2db5420bb17dcd2d9aac7ddb5f64c6d04b3 ]
    
    BUG_ON() is replaced with WARN_ON() and EINVAL is returned, when
    WARN_ON() is true. This fixes the following checkpatch issue:
    
    Avoid crashing the kernel - try using WARN_ON & recovery code rather
    than BUG() or BUG_ON().
    
    Signed-off-by: Varsha Rao <rvarsha016@gmail.com>
    Reviewed-by: Samuel Thibault <samuel.thibault@ens-lyon.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3389b386139d79b5eb8bb023e9ca603d6245a8fa
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Fri Feb 17 12:51:19 2017 -0800

    Input: tsc2007 - check for presence and power down tsc2007 during probe
    
    
    [ Upstream commit 934df23171e7c5b71d937104d4957891c39748ff ]
    
    1. check if chip is really present and don't succeed if it isn't.
    2. if it succeeds, power down the chip until accessed
    
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 633a5a5235d697b145171ca1e702d3a4f6778131
Author: Hou Tao <houtao1@huawei.com>
Date:   Fri Feb 3 17:19:07 2017 +0800

    blkcg: fix double free of new_blkg in blkcg_init_queue
    
    commit 9b54d816e00425c3a517514e0d677bb3cec49258 upstream.
    
    If blkg_create fails, new_blkg passed as an argument will
    be freed by blkg_create, so there is no need to free it again.
    
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
