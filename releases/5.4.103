commit c4ca4659678e07f0a14b3b143f6fb746efe11f88
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Mar 7 12:20:50 2021 +0100

    Linux 5.4.103
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Hulk Robot <hulkci@huawei.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20210305120857.341630346@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47478db9ad2193c43ef0a8232b21eca524a06d4d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Mar 3 15:23:46 2021 +0100

    ALSA: hda/realtek: Apply dual codec quirks for MSI Godlike X570 board
    
    commit 26af17722a07597d3e556eda92c6fce8d528bc9f upstream.
    
    There is another MSI board (1462:cc34) that has dual Realtek codecs,
    and we need to apply the existing quirk for fixing the conflicts of
    Master control.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=211743
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210303142346.28182-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cf2434764632a3c4b87ad5232dbcb5eddc884b3
Author: Werner Sembach <wse@tuxedocomputers.com>
Date:   Tue Mar 2 19:04:14 2021 +0100

    ALSA: hda/realtek: Add quirk for Intel NUC 10
    
    commit 73e7161eab5dee98114987239ec9c87fe8034ddb upstream.
    
    This adds a new SND_PCI_QUIRK(...) and applies it to the Intel NUC 10
    devices. This fixes the issue of the devices not having audio input and
    output on the headset jack because the kernel does not recognize when
    something is plugged in.
    
    The new quirk was inspired by the quirk for the Intel NUC 8 devices, but
    it turned out that the NUC 10 uses another pin. This information was
    acquired by black box testing likely pins.
    
    Co-developed-by: Eckhart Mohr <e.mohr@tuxedocomputers.com>
    Signed-off-by: Eckhart Mohr <e.mohr@tuxedocomputers.com>
    Signed-off-by: Werner Sembach <wse@tuxedocomputers.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210302180414.23194-1-wse@tuxedocomputers.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2254dfa684284047b6e2704adfbce69ec6c0a43b
Author: Eckhart Mohr <e.mohr@tuxedocomputers.com>
Date:   Tue Mar 2 17:25:22 2021 +0100

    ALSA: hda/realtek: Add quirk for Clevo NH55RZQ
    
    commit 48698c973e6b4dde94d87cd1ded56d9436e9c97d upstream.
    
    This applies a SND_PCI_QUIRK(...) to the Clevo NH55RZQ barebone. This
    fixes the issue of the device not recognizing a pluged in microphone.
    
    The device has both, a microphone only jack, and a speaker + microphone
    combo jack. The combo jack already works. The microphone-only jack does
    not recognize when a device is pluged in without this patch.
    
    Signed-off-by: Eckhart Mohr <e.mohr@tuxedocomputers.com>
    Co-developed-by: Werner Sembach <wse@tuxedocomputers.com>
    Signed-off-by: Werner Sembach <wse@tuxedocomputers.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/0eee6545-5169-ef08-6cfa-5def8cd48c86@tuxedocomputers.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 027ddd67f68583a178a9bd65220611e9f978f014
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Sat Dec 19 23:29:58 2020 +0100

    media: v4l: ioctl: Fix memory leak in video_usercopy
    
    commit fb18802a338b36f675a388fc03d2aa504a0d0899 upstream.
    
    When an IOCTL with argument size larger than 128 that also used array
    arguments were handled, two memory allocations were made but alas, only
    the latter one of them was released. This happened because there was only
    a single local variable to hold such a temporary allocation.
    
    Fix this by adding separate variables to hold the pointers to the
    temporary allocations.
    
    Reported-by: Arnd Bergmann <arnd@kernel.org>
    Reported-by: syzbot+1115e79c8df6472c612b@syzkaller.appspotmail.com
    Fixes: d14e6d76ebf7 ("[media] v4l: Add multi-planar ioctl handling code")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60fdceaa91ad3bd7d7171b7280492d7438492d5c
Author: Jens Axboe <axboe@kernel.dk>
Date:   Tue Mar 2 14:53:21 2021 -0700

    swap: fix swapfile read/write offset
    
    commit caf6912f3f4af7232340d500a4a2008f81b93f14 upstream.
    
    We're not factoring in the start of the file for where to write and
    read the swapfile, which leads to very unfortunate side effects of
    writing where we should not be...
    
    Fixes: dd6bd0d9c7db ("swap: use bdev_read_page() / bdev_write_page()")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Cc: Anthony Iliopoulos <ailiop@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bebf5e8327799cfb27c5c0c361b943b0f0e0a2d7
Author: Rokudo Yan <wu-yan@tcl.com>
Date:   Thu Feb 25 17:18:31 2021 -0800

    zsmalloc: account the number of compacted pages correctly
    
    commit 2395928158059b8f9858365fce7713ce7fef62e4 upstream.
    
    There exists multiple path may do zram compaction concurrently.
    1. auto-compaction triggered during memory reclaim
    2. userspace utils write zram<id>/compaction node
    
    So, multiple threads may call zs_shrinker_scan/zs_compact concurrently.
    But pages_compacted is a per zsmalloc pool variable and modification
    of the variable is not serialized(through under class->lock).
    There are two issues here:
    1. the pages_compacted may not equal to total number of pages
    freed(due to concurrently add).
    2. zs_shrinker_scan may not return the correct number of pages
    freed(issued by current shrinker).
    
    The fix is simple:
    1. account the number of pages freed in zs_compact locally.
    2. use actomic variable pages_compacted to accumulate total number.
    
    Link: https://lkml.kernel.org/r/20210202122235.26885-1-wu-yan@tcl.com
    Fixes: 860c707dca155a56 ("zsmalloc: account the number of compacted pages")
    Signed-off-by: Rokudo Yan <wu-yan@tcl.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f038a22632a4cb6b4db521b945469270c994f75b
Author: Jan Beulich <jbeulich@suse.com>
Date:   Thu Feb 25 16:35:15 2021 +0100

    xen-netback: respect gnttab_map_refs()'s return value
    
    commit 2991397d23ec597405b116d96de3813420bdcbc3 upstream.
    
    Commit 3194a1746e8a ("xen-netback: don't "handle" error by BUG()")
    dropped respective a BUG_ON() without noticing that with this the
    variable's value wouldn't be consumed anymore. With gnttab_set_map_op()
    setting all status fields to a non-zero value, in case of an error no
    slot should have a status of GNTST_okay (zero).
    
    This is part of XSA-367.
    
    Cc: <stable@vger.kernel.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/d933f495-619a-0086-5fb4-1ec3cf81a8fc@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 474773c42ffd89f7606b54443990ccf5086a4734
Author: Jan Beulich <jbeulich@suse.com>
Date:   Thu Feb 25 16:34:43 2021 +0100

    Xen/gnttab: handle p2m update errors on a per-slot basis
    
    commit 8310b77b48c5558c140e7a57a702e7819e62f04e upstream.
    
    Bailing immediately from set_foreign_p2m_mapping() upon a p2m updating
    error leaves the full batch in an ambiguous state as far as the caller
    is concerned. Instead flags respective slots as bad, unmapping what
    was mapped there right away.
    
    HYPERVISOR_grant_table_op()'s return value and the individual unmap
    slots' status fields get used only for a one-time - there's not much we
    can do in case of a failure.
    
    Note that there's no GNTST_enomem or alike, so GNTST_general_error gets
    used.
    
    The map ops' handle fields get overwritten just to be on the safe side.
    
    This is part of XSA-367.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Link: https://lore.kernel.org/r/96cccf5d-e756-5f53-b91a-ea269bfb9be0@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit def70c33c478259057486c3c7798737b34797b0d
Author: Chris Leech <cleech@redhat.com>
Date:   Tue Feb 23 21:39:01 2021 -0800

    scsi: iscsi: Verify lengths on passthrough PDUs
    
    commit f9dbdf97a5bd92b1a49cee3d591b55b11fd7a6d5 upstream.
    
    Open-iSCSI sends passthrough PDUs over netlink, but the kernel should be
    verifying that the provided PDU header and data lengths fall within the
    netlink message to prevent accessing beyond that in memory.
    
    Cc: stable@vger.kernel.org
    Reported-by: Adam Nichols <adam@grimm-co.com>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Chris Leech <cleech@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 567a234a231db16a99067db3d31d351d9e770a82
Author: Chris Leech <cleech@redhat.com>
Date:   Tue Feb 23 18:00:17 2021 -0800

    scsi: iscsi: Ensure sysfs attributes are limited to PAGE_SIZE
    
    commit ec98ea7070e94cc25a422ec97d1421e28d97b7ee upstream.
    
    As the iSCSI parameters are exported back through sysfs, it should be
    enforcing that they never are more than PAGE_SIZE (which should be more
    than enough) before accepting updates through netlink.
    
    Change all iSCSI sysfs attributes to use sysfs_emit().
    
    Cc: stable@vger.kernel.org
    Reported-by: Adam Nichols <adam@grimm-co.com>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Chris Leech <cleech@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f4243642873c6fccc1f7382a9ea256c4d830a69
Author: Joe Perches <joe@perches.com>
Date:   Wed Sep 16 13:40:38 2020 -0700

    sysfs: Add sysfs_emit and sysfs_emit_at to format sysfs output
    
    commit 2efc459d06f1630001e3984854848a5647086232 upstream.
    
    Output defects can exist in sysfs content using sprintf and snprintf.
    
    sprintf does not know the PAGE_SIZE maximum of the temporary buffer
    used for outputting sysfs content and it's possible to overrun the
    PAGE_SIZE buffer length.
    
    Add a generic sysfs_emit function that knows that the size of the
    temporary buffer and ensures that no overrun is done.
    
    Add a generic sysfs_emit_at function that can be used in multiple
    call situations that also ensures that no overrun is done.
    
    Validate the output buffer argument to be page aligned.
    Validate the offset len argument to be within the PAGE_SIZE buf.
    
    Signed-off-by: Joe Perches <joe@perches.com>
    Link: https://lore.kernel.org/r/884235202216d464d61ee975f7465332c86f76b2.1600285923.git.joe@perches.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca3afdd0377379f5031f376aec4b0c1b0285b556
Author: Lee Duncan <lduncan@suse.com>
Date:   Tue Feb 23 13:06:24 2021 -0800

    scsi: iscsi: Restrict sessions and handles to admin capabilities
    
    commit 688e8128b7a92df982709a4137ea4588d16f24aa upstream.
    
    Protect the iSCSI transport handle, available in sysfs, by requiring
    CAP_SYS_ADMIN to read it. Also protect the netlink socket by restricting
    reception of messages to ones sent with CAP_SYS_ADMIN. This disables
    normal users from being able to end arbitrary iSCSI sessions.
    
    Cc: stable@vger.kernel.org
    Reported-by: Adam Nichols <adam@grimm-co.com>
    Reviewed-by: Chris Leech <cleech@redhat.com>
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdaec40526b4e7cf8f2b802297f85fd5768d297e
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Feb 16 22:35:55 2021 +0100

    ASoC: Intel: bytcr_rt5640: Add quirk for the Acer One S1002 tablet
    
    [ Upstream commit c58947af08aedbdee0fce5ea6e6bf3e488ae0e2c ]
    
    The Acer One S1002 tablet is using an analog mic on IN1 and has
    its jack-detect connected to JD2_IN4N, instead of using the default
    IN3 for its internal mic and JD1_IN4P for jack-detect.
    
    Note it is also using AIF2 instead of AIF1 which is somewhat unusual,
    this is correctly advertised in the ACPI CHAN package, so the speakers
    do work without the quirk.
    
    Add a quirk for the mic and jack-detect settings.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210216213555.36555-5-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68b15ca91add8596c87793815ea1f49ae1263584
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Feb 16 22:35:54 2021 +0100

    ASoC: Intel: bytcr_rt5651: Add quirk for the Jumper EZpad 7 tablet
    
    [ Upstream commit df8359c512fa770ffa6b0b0309807d9b9825a47f ]
    
    Add a DMI quirk for the Jumper EZpad 7 tablet, this tablet has
    a jack-detect switch which reads 1/high when a jack is inserted,
    rather then using the standard active-low setup which most
    jack-detect switches use. All other settings are using the defaults.
    
    Add a DMI-quirk setting the defaults + the BYT_RT5651_JD_NOT_INV
    flags for this.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210216213555.36555-4-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db0e94615263c049f7f893ccedf15baf9b3affb8
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Feb 16 22:35:53 2021 +0100

    ASoC: Intel: bytcr_rt5640: Add quirk for the Voyo Winpad A15 tablet
    
    [ Upstream commit e1317cc9ca4ac20262895fddb065ffda4fc29cfb ]
    
    The Voyo Winpad A15 tablet uses a Bay Trail (non CR) SoC, so it is using
    SSP2 (AIF1) and it mostly works with the defaults. But instead of using
    DMIC1 it is using an analog mic on IN1, add a quirk for this.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210216213555.36555-3-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 925ae8148535326c486f7fa55d9cf62b01ca2888
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Feb 16 22:35:52 2021 +0100

    ASoC: Intel: bytcr_rt5640: Add quirk for the Estar Beauty HD MID 7316R tablet
    
    [ Upstream commit bdea43fc0436c9e98fdfe151c2ed8a3fc7277404 ]
    
    The Estar Beauty HD MID 7316R tablet almost fully works with out default
    settings. The only problem is that it has only 1 speaker so any sounds
    only playing on the right channel get lost.
    
    Add a quirk for this model using the default settings + MONO_SPEAKER.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210216213555.36555-2-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99d2926531ac2cfa95cb1b0ed9302c5e2c62be46
Author: Juri Lelli <juri.lelli@redhat.com>
Date:   Mon Feb 8 08:35:53 2021 +0100

    sched/features: Fix hrtick reprogramming
    
    [ Upstream commit 156ec6f42b8d300dbbf382738ff35c8bad8f4c3a ]
    
    Hung tasks and RCU stall cases were reported on systems which were not
    100% busy. Investigation of such unexpected cases (no sign of potential
    starvation caused by tasks hogging the system) pointed out that the
    periodic sched tick timer wasn't serviced anymore after a certain point
    and that caused all machinery that depends on it (timers, RCU, etc.) to
    stop working as well. This issues was however only reproducible if
    HRTICK was enabled.
    
    Looking at core dumps it was found that the rbtree of the hrtimer base
    used also for the hrtick was corrupted (i.e. next as seen from the base
    root and actual leftmost obtained by traversing the tree are different).
    Same base is also used for periodic tick hrtimer, which might get "lost"
    if the rbtree gets corrupted.
    
    Much alike what described in commit 1f71addd34f4c ("tick/sched: Do not
    mess with an enqueued hrtimer") there is a race window between
    hrtimer_set_expires() in hrtick_start and hrtimer_start_expires() in
    __hrtick_restart() in which the former might be operating on an already
    queued hrtick hrtimer, which might lead to corruption of the base.
    
    Use hrtick_start() (which removes the timer before enqueuing it back) to
    ensure hrtick hrtimer reprogramming is entirely guarded by the base
    lock, so that no race conditions can occur.
    
    Signed-off-by: Juri Lelli <juri.lelli@redhat.com>
    Signed-off-by: Luis Claudio R. Goncalves <lgoncalv@redhat.com>
    Signed-off-by: Daniel Bristot de Oliveira <bristot@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lkml.kernel.org/r/20210208073554.14629-2-juri.lelli@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a3f4feeb62276c5cdc76ec88873c396aa8f5b05
Author: John David Anglin <dave.anglin@bell.net>
Date:   Thu Jan 28 18:12:30 2021 -0500

    parisc: Bump 64-bit IRQ stack size to 64 KB
    
    [ Upstream commit 31680c1d1595a59e17c14ec036b192a95f8e5f4a ]
    
    Bump 64-bit IRQ stack size to 64 KB.
    
    I had a kernel IRQ stack overflow on the mx3210 debian buildd machine.  This patch increases the
    64-bit IRQ stack size to 64 KB.  The 64-bit stack size needs to be larger than the 32-bit stack
    size since registers are twice as big.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f41ed21643644ec56f3e193336feb61358460339
Author: Jim Mattson <jmattson@google.com>
Date:   Fri Feb 5 11:13:24 2021 -0800

    perf/x86/kvm: Add Cascade Lake Xeon steppings to isolation_ucodes[]
    
    [ Upstream commit b3c3361fe325074d4144c29d46daae4fc5a268d5 ]
    
    Cascade Lake Xeon parts have the same model number as Skylake Xeon
    parts, so they are tagged with the intel_pebs_isolation
    quirk. However, as with Skylake Xeon H0 stepping parts, the PEBS
    isolation issue is fixed in all microcode versions.
    
    Add the Cascade Lake Xeon steppings (5, 6, and 7) to the
    isolation_ucodes[] table so that these parts benefit from Andi's
    optimization in commit 9b545c04abd4f ("perf/x86/kvm: Avoid unnecessary
    work in guest filtering").
    
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Andi Kleen <ak@linux.intel.com>
    Link: https://lkml.kernel.org/r/20210205191324.2889006-1-jmattson@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b130871e20ad7a3148aecc0e81af2b0fc8c2df7
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Tue Dec 1 09:53:23 2020 -0500

    btrfs: fix error handling in commit_fs_roots
    
    [ Upstream commit 4f4317c13a40194940acf4a71670179c4faca2b5 ]
    
    While doing error injection I would sometimes get a corrupt file system.
    This is because I was injecting errors at btrfs_search_slot, but would
    only do it one time per stack.  This uncovered a problem in
    commit_fs_roots, where if we get an error we would just break.  However
    we're in a nested loop, the first loop being a loop to find all the
    dirty fs roots, and then subsequent root updates would succeed clearing
    the error value.
    
    This isn't likely to happen in real scenarios, however we could
    potentially get a random ENOMEM once and then not again, and we'd end up
    with a corrupted file system.  Fix this by moving the error checking
    around a bit to the main loop, as this is the only place where something
    will fail, and return the error as soon as it occurs.
    
    With this patch my reproducer no longer corrupts the file system.
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9bf519ca55c40c6466b8d965dcb1da52263fa499
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Jan 20 22:49:56 2021 +0100

    ASoC: Intel: Add DMI quirk table to soc_intel_is_byt_cr()
    
    [ Upstream commit 8ade6d8b02b1ead741bd4f6c42921035caab6560 ]
    
    Some Bay Trail systems:
    1. Use a non CR version of the Bay Trail SoC
    2. Contain at least 6 interrupt resources so that the
       platform_get_resource(pdev, IORESOURCE_IRQ, 5) check to workaround
       non CR systems which list their IPC IRQ at index 0 despite being
       non CR does not work
    3. Despite 1. and 2. still have their IPC IRQ at index 0 rather then 5
    
    Add a DMI quirk table to check for the few known models with this issue,
    so that the right IPC IRQ index is used on these systems.
    
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210120214957.140232-5-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7702b331861bb031ba903cbf11325d2809baa0ed
Author: Chao Leng <lengchao@huawei.com>
Date:   Thu Jan 21 11:32:38 2021 +0800

    nvme-tcp: add clean action for failed reconnection
    
    [ Upstream commit 70a99574a79f1cd4dc7ad56ea37be40844bfb97b ]
    
    If reconnect failed after start io queues, the queues will be unquiesced
    and new requests continue to be delivered. Reconnection error handling
    process directly free queues without cancel suspend requests. The
    suppend request will time out, and then crash due to use the queue
    after free.
    
    Add sync queues and cancel suppend requests for reconnection error
    handling.
    
    Signed-off-by: Chao Leng <lengchao@huawei.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9ea34d2717a8c8892d3c5677329de9485e325ac
Author: Chao Leng <lengchao@huawei.com>
Date:   Thu Jan 21 11:32:37 2021 +0800

    nvme-rdma: add clean action for failed reconnection
    
    [ Upstream commit 958dc1d32c80566f58d18f05ef1f05bd32d172c1 ]
    
    A crash happens when inject failed reconnection.
    If reconnect failed after start io queues, the queues will be unquiesced
    and new requests continue to be delivered. Reconnection error handling
    process directly free queues without cancel suspend requests. The
    suppend request will time out, and then crash due to use the queue
    after free.
    
    Add sync queues and cancel suppend requests for reconnection error
    handling.
    
    Signed-off-by: Chao Leng <lengchao@huawei.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bf6c84c9ad326016c179de5ba4f6e868e07acc7
Author: Chao Leng <lengchao@huawei.com>
Date:   Thu Jan 21 11:32:36 2021 +0800

    nvme-core: add cancel tagset helpers
    
    [ Upstream commit 2547906982e2e6a0d42f8957f55af5bb51a7e55f ]
    
    Add nvme_cancel_tagset and nvme_cancel_admin_tagset for tear down and
    reconnection error handling.
    
    Signed-off-by: Chao Leng <lengchao@huawei.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8253cc11abb2baae408a2ac40e88c7910d1eb549
Author: Chao Yu <chao@kernel.org>
Date:   Tue Jan 12 09:55:09 2021 +0800

    f2fs: fix to set/clear I_LINKABLE under i_lock
    
    [ Upstream commit 46085f37fc9e12d5c3539fb768b5ad7951e72acf ]
    
    fsstress + fault injection test case reports a warning message as
    below:
    
    WARNING: CPU: 13 PID: 6226 at fs/inode.c:361 inc_nlink+0x32/0x40
    Call Trace:
     f2fs_init_inode_metadata+0x25c/0x4a0 [f2fs]
     f2fs_add_inline_entry+0x153/0x3b0 [f2fs]
     f2fs_add_dentry+0x75/0x80 [f2fs]
     f2fs_do_add_link+0x108/0x160 [f2fs]
     f2fs_rename2+0x6ab/0x14f0 [f2fs]
     vfs_rename+0x70c/0x940
     do_renameat2+0x4d8/0x4f0
     __x64_sys_renameat2+0x4b/0x60
     do_syscall_64+0x33/0x80
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Following race case can cause this:
    Thread A                                Kworker
    - f2fs_rename
     - f2fs_create_whiteout
      - __f2fs_tmpfile
       - f2fs_i_links_write
        - f2fs_mark_inode_dirty_sync
         - mark_inode_dirty_sync
                                            - writeback_single_inode
                                             - __writeback_single_inode
                                              - spin_lock(&inode->i_lock)
       - inode->i_state |= I_LINKABLE
                                              - inode->i_state &= ~dirty
                                              - spin_unlock(&inode->i_lock)
     - f2fs_add_link
      - f2fs_do_add_link
       - f2fs_add_dentry
        - f2fs_add_inline_entry
         - f2fs_init_inode_metadata
          - f2fs_i_links_write
           - inc_nlink
            - WARN_ON(!(inode->i_state & I_LINKABLE))
    
    Fix to add i_lock to avoid i_state update race condition.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77dc257b4feb05c9e92d57d2021428a4f38a19e4
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Wed Dec 23 11:44:25 2020 -0800

    f2fs: handle unallocated section and zone on pinned/atgc
    
    [ Upstream commit 632faca72938f9f63049e48a8c438913828ac7a9 ]
    
    If we have large section/zone, unallocated segment makes them corrupted.
    
    E.g.,
    
      - Pinned file:       -1 119304647 119304647
      - ATGC   data:       -1 119304647 119304647
    
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa1362606059ade437a901fe7c33b24901683c14
Author: Ricardo Ribalda <ribalda@chromium.org>
Date:   Wed Dec 23 14:35:19 2020 +0100

    media: uvcvideo: Allow entities with no pads
    
    [ Upstream commit 7532dad6634031d083df7af606fac655b8d08b5c ]
    
    Avoid an underflow while calculating the number of inputs for entities
    with zero pads.
    
    Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e9d7902764a751086407b3bdb2ed5ac26638e62
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Fri Dec 18 12:14:00 2020 -0500

    drm/amd/display: Guard against NULL pointer deref when get_i2c_info fails
    
    [ Upstream commit 44a09e3d95bd2b7b0c224100f78f335859c4e193 ]
    
    [Why]
    If the BIOS table is invalid or corrupt then get_i2c_info can fail
    and we dereference a NULL pointer.
    
    [How]
    Check that ddc_pin is not NULL before using it and log an error if it
    is because this is unexpected.
    
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Reviewed-by: Eric Yang <eric.yang2@amd.com>
    Acked-by: Anson Jacob <anson.jacob@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1fef55a3f1a59b751fd58e287cbdb4defa18fba
Author: Nirmoy Das <nirmoy.das@amd.com>
Date:   Thu Jan 7 12:26:55 2021 +0100

    PCI: Add a REBAR size quirk for Sapphire RX 5600 XT Pulse
    
    [ Upstream commit 907830b0fc9e374d00f3c83de5e426157b482c01 ]
    
    RX 5600 XT Pulse advertises support for BAR 0 being 256MB, 512MB,
    or 1GB, but it also supports 2GB, 4GB, and 8GB. Add a rebar
    size quirk so that the BAR 0 is big enough to cover complete VARM.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Nirmoy Das <nirmoy.das@amd.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Link: https://patchwork.kernel.org/project/dri-devel/patch/20210107175017.15893-5-nirmoy.das@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b252cdd9c6503dac6a2c4f52f825ee3112e3fd69
Author: Defang Bo <bodefang@126.com>
Date:   Wed Jan 6 00:06:39 2021 +0800

    drm/amdgpu: Add check to prevent IH overflow
    
    [ Upstream commit e4180c4253f3f2da09047f5139959227f5cf1173 ]
    
    Similar to commit <b82175750131>("drm/amdgpu: fix IH overflow on Vega10 v2").
    When an ring buffer overflow happens the appropriate bit is set in the WPTR
    register which is also written back to memory. But clearing the bit in the
    WPTR doesn't trigger another memory writeback.
    
    So what can happen is that we end up processing the buffer overflow over and
    over again because the bit is never cleared. Resulting in a random system
    lockup because of an infinite loop in an interrupt handler.
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Defang Bo <bodefang@126.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8d46a3feb024c449fc920d76a1f7ec1cfd53f1e
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Dec 8 15:34:41 2020 +0100

    crypto: tcrypt - avoid signed overflow in byte count
    
    [ Upstream commit 303fd3e1c771077e32e96e5788817f025f0067e2 ]
    
    The signed long type used for printing the number of bytes processed in
    tcrypt benchmarks limits the range to -/+ 2 GiB, which is not sufficient
    to cover the performance of common accelerated ciphers such as AES-NI
    when benchmarked with sec=1. So switch to u64 instead.
    
    While at it, fix up a missing printk->pr_cont conversion in the AEAD
    benchmark.
    
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f8d3e4b8ad85c6388574425d3d906dc6ebc5ae9
Author: Tian Tao <tiantao6@hisilicon.com>
Date:   Mon Dec 14 18:32:53 2020 +0800

    drm/hisilicon: Fix use-after-free
    
    [ Upstream commit c855af2f9c5c60760fd1bed7889a81bc37d2591d ]
    
    Fix the problem of dev being released twice.
    ------------[ cut here ]------------
    refcount_t: underflow; use-after-free.
    WARNING: CPU: 75 PID: 15700 at lib/refcount.c:28 refcount_warn_saturate+0xd4/0x150
    CPU: 75 PID: 15700 Comm: rmmod Tainted: G            E     5.10.0-rc3+ #3
    Hardware name: Huawei TaiShan 200 (Model 2280)/BC82AMDDA, BIOS 0.88 07/24/2019
    pstate: 40400009 (nZcv daif +PAN -UAO -TCO BTYPE=--)
    pc : refcount_warn_saturate+0xd4/0x150
    lr : refcount_warn_saturate+0xd4/0x150
    sp : ffff2028150cbc00
    x29: ffff2028150cbc00 x28: ffff2028150121c0
    x27: 0000000000000000 x26: 0000000000000000
    x25: 0000000000000000 x24: 0000000000000003
    x23: 0000000000000000 x22: ffff2028150cbc90
    x21: ffff2020038a30a8 x20: ffff2028150cbc90
    x19: ffff0020cd938020 x18: 0000000000000010
    x17: 0000000000000000 x16: 0000000000000000
    x15: ffffffffffffffff x14: ffff2028950cb88f
    x13: ffff2028150cb89d x12: 0000000000000000
    x11: 0000000005f5e0ff x10: ffff2028150cb800
    x9 : 00000000ffffffd0 x8 : 75203b776f6c6672
    x7 : ffff800011a6f7c8 x6 : 0000000000000001
    x5 : 0000000000000000 x4 : 0000000000000000
    x3 : 0000000000000000 x2 : ffff202ffe2f9dc0
    x1 : ffffa02fecf40000 x0 : 0000000000000026
    Call trace:
     refcount_warn_saturate+0xd4/0x150
     devm_drm_dev_init_release+0x50/0x70
     devm_action_release+0x20/0x30
     release_nodes+0x13c/0x218
     devres_release_all+0x80/0x170
     device_release_driver_internal+0x128/0x1f0
     driver_detach+0x6c/0xe0
     bus_remove_driver+0x74/0x100
     driver_unregister+0x34/0x60
     pci_unregister_driver+0x24/0xd8
     hibmc_pci_driver_exit+0x14/0xe858 [hibmc_drm]
     __arm64_sys_delete_module+0x1fc/0x2d0
     el0_svc_common.constprop.3+0xa8/0x188
     do_el0_svc+0x80/0xa0
     el0_sync_handler+0x8c/0xb0
     el0_sync+0x15c/0x180
    CPU: 75 PID: 15700 Comm: rmmod Tainted: G            E     5.10.0-rc3+ #3
    Hardware name: Huawei TaiShan 200 (Model 2280)/BC82AMDDA, BIOS 0.88 07/24/2019
    Call trace:
     dump_backtrace+0x0/0x208
     show_stack+0x2c/0x40
     dump_stack+0xd8/0x10c
     __warn+0xac/0x128
     report_bug+0xcc/0x180
     bug_handler+0x24/0x78
     call_break_hook+0x80/0xa0
     brk_handler+0x28/0x68
     do_debug_exception+0x9c/0x148
     el1_sync_handler+0x7c/0x128
     el1_sync+0x80/0x100
     refcount_warn_saturate+0xd4/0x150
     devm_drm_dev_init_release+0x50/0x70
     devm_action_release+0x20/0x30
     release_nodes+0x13c/0x218
     devres_release_all+0x80/0x170
     device_release_driver_internal+0x128/0x1f0
     driver_detach+0x6c/0xe0
     bus_remove_driver+0x74/0x100
     driver_unregister+0x34/0x60
     pci_unregister_driver+0x24/0xd8
     hibmc_pci_driver_exit+0x14/0xe858 [hibmc_drm]
     __arm64_sys_delete_module+0x1fc/0x2d0
     el0_svc_common.constprop.3+0xa8/0x188
     do_el0_svc+0x80/0xa0
     el0_sync_handler+0x8c/0xb0
     el0_sync+0x15c/0x180
    ---[ end trace 00718630d6e5ff18 ]---
    
    Signed-off-by: Tian Tao <tiantao6@hisilicon.com>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/1607941973-32287-1-git-send-email-tiantao6@hisilicon.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1b9c1c9dbb01b647ad8505e6dd1a96e10c76297
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Jan 29 18:14:13 2021 +0100

    brcmfmac: Add DMI nvram filename quirk for Voyo winpad A15 tablet
    
    [ Upstream commit a338c874d3d9d2463f031e89ae14942929b93db6 ]
    
    The Voyo winpad A15 tablet contains quite generic names in the sys_vendor
    and product_name DMI strings, without this patch brcmfmac will try to load:
    rcmfmac4330-sdio.To be filled by O.E.M.-To be filled by O.E.M..txt
    as nvram file which is a bit too generic.
    
    Add a DMI quirk so that a unique and clearly identifiable nvram file name
    is used on the Voyo winpad A15 tablet.
    
    While preparing a matching linux-firmware update I noticed that the nvram
    is identical to the nvram used on the Prowise-PT301 tablet, so the new DMI
    quirk entry simply points to the already existing Prowise-PT301 nvram file.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210129171413.139880-2-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c099c272eb5e8149ab418ad904a9474a8638559
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Jan 29 18:14:12 2021 +0100

    brcmfmac: Add DMI nvram filename quirk for Predia Basic tablet
    
    [ Upstream commit af4b3a6f36d6c2fc5fca026bccf45e0fdcabddd9 ]
    
    The Predia Basic tablet contains quite generic names in the sys_vendor and
    product_name DMI strings, without this patch brcmfmac will try to load:
    brcmfmac43340-sdio.Insyde-CherryTrail.txt as nvram file which is a bit
    too generic.
    
    Add a DMI quirk so that a unique and clearly identifiable nvram file name
    is used on the Predia Basic tablet.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210129171413.139880-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1f2625619930882352b79f0b84eb6d9b5f7fdbb
Author: Juerg Haefliger <juerg.haefliger@canonical.com>
Date:   Fri Feb 5 08:25:02 2021 +0100

    staging: bcm2835-audio: Replace unsafe strcpy() with strscpy()
    
    [ Upstream commit 4964a4300660d27907ceb655f219ac47e5941534 ]
    
    Replace strcpy() with strscpy() in bcm2835-audio/bcm2835.c to prevent the
    following when loading snd-bcm2835:
    
    [   58.480634] ------------[ cut here ]------------
    [   58.485321] kernel BUG at lib/string.c:1149!
    [   58.489650] Internal error: Oops - BUG: 0 [#1] PREEMPT SMP
    [   58.495214] Modules linked in: snd_bcm2835(COE+) snd_pcm snd_timer snd dm_multipath scsi_dh_rdac scsi_dh_emc scsi_dh_alua btsdio bluetooth ecdh_generic ecc bcm2835_v4l2(CE) bcm2835_codec(CE) brcmfmac bcm2835_isp(CE) bcm2835_mmal_vchiq(CE) brcmutil cfg80211 v4l2_mem2mem videobuf2_vmalloc videobuf2_dma_contig videobuf2_memops raspberrypi_hwmon videobuf2_v4l2 videobuf2_common videodev bcm2835_gpiomem mc vc_sm_cma(CE) rpivid_mem uio_pdrv_genirq uio sch_fq_codel drm ip_tables x_tables autofs4 btrfs blake2b_generic raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx xor xor_neon raid6_pq libcrc32c raid1 raid0 multipath linear dwc2 roles spidev udc_core crct10dif_ce xhci_pci xhci_pci_renesas phy_generic aes_neon_bs aes_neon_blk crypto_simd cryptd
    [   58.563787] CPU: 3 PID: 1959 Comm: insmod Tainted: G         C OE     5.11.0-1001-raspi #1
    [   58.572172] Hardware name: Raspberry Pi 4 Model B Rev 1.2 (DT)
    [   58.578086] pstate: 60400005 (nZCv daif +PAN -UAO -TCO BTYPE=--)
    [   58.584178] pc : fortify_panic+0x20/0x24
    [   58.588161] lr : fortify_panic+0x20/0x24
    [   58.592136] sp : ffff800010a83990
    [   58.595491] x29: ffff800010a83990 x28: 0000000000000002
    [   58.600879] x27: ffffb0b07cb72928 x26: 0000000000000000
    [   58.606268] x25: ffff39e884973838 x24: ffffb0b07cb74190
    [   58.611655] x23: ffffb0b07cb72030 x22: 0000000000000000
    [   58.617042] x21: ffff39e884973014 x20: ffff39e88b793010
    [   58.622428] x19: ffffb0b07cb72670 x18: 0000000000000030
    [   58.627814] x17: 0000000000000000 x16: ffffb0b092ce2c1c
    [   58.633200] x15: ffff39e88b901500 x14: 0720072007200720
    [   58.638588] x13: 0720072007200720 x12: 0720072007200720
    [   58.643979] x11: ffffb0b0936cbdf0 x10: 00000000fffff000
    [   58.649366] x9 : ffffb0b09220cfa8 x8 : 0000000000000000
    [   58.654752] x7 : ffffb0b093673df0 x6 : ffffb0b09364e000
    [   58.660140] x5 : 0000000000000000 x4 : ffff39e93b7db948
    [   58.665526] x3 : ffff39e93b7ebcf0 x2 : 0000000000000000
    [   58.670913] x1 : 0000000000000000 x0 : 0000000000000022
    [   58.676299] Call trace:
    [   58.678775]  fortify_panic+0x20/0x24
    [   58.682402]  snd_bcm2835_alsa_probe+0x5b8/0x7d8 [snd_bcm2835]
    [   58.688247]  platform_probe+0x74/0xe4
    [   58.691963]  really_probe+0xf0/0x510
    [   58.695585]  driver_probe_device+0xe0/0x100
    [   58.699826]  device_driver_attach+0xcc/0xd4
    [   58.704068]  __driver_attach+0xb0/0x17c
    [   58.707956]  bus_for_each_dev+0x7c/0xd4
    [   58.711843]  driver_attach+0x30/0x40
    [   58.715467]  bus_add_driver+0x154/0x250
    [   58.719354]  driver_register+0x84/0x140
    [   58.723242]  __platform_driver_register+0x34/0x40
    [   58.728013]  bcm2835_alsa_driver_init+0x30/0x1000 [snd_bcm2835]
    [   58.734024]  do_one_initcall+0x54/0x300
    [   58.737914]  do_init_module+0x60/0x280
    [   58.741719]  load_module+0x680/0x770
    [   58.745344]  __do_sys_finit_module+0xbc/0x130
    [   58.749761]  __arm64_sys_finit_module+0x2c/0x40
    [   58.754356]  el0_svc_common.constprop.0+0x88/0x220
    [   58.759216]  do_el0_svc+0x30/0xa0
    [   58.762575]  el0_svc+0x28/0x70
    [   58.765669]  el0_sync_handler+0x1a4/0x1b0
    [   58.769732]  el0_sync+0x178/0x180
    [   58.773095] Code: aa0003e1 91366040 910003fd 97ffee21 (d4210000)
    [   58.779275] ---[ end trace 29be5b17497bd898 ]---
    [   58.783955] note: insmod[1959] exited with preempt_count 1
    [   58.791921] ------------[ cut here ]------------
    
    For the sake of it, replace all the other occurences of strcpy() under
    bcm2835-audio/ as well.
    
    Signed-off-by: Juerg Haefliger <juergh@canonical.com>
    Link: https://lore.kernel.org/r/20210205072502.10907-1-juergh@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3ec4af5064212641b72e4316dacb6ae0b9ee0d6
Author: Christian Gromm <christian.gromm@microchip.com>
Date:   Tue Feb 2 17:21:05 2021 +0100

    staging: most: sound: add sanity check for function argument
    
    [ Upstream commit 45b754ae5b82949dca2b6e74fa680313cefdc813 ]
    
    This patch checks the function parameter 'bytes' before doing the
    subtraction to prevent memory corruption.
    
    Signed-off-by: Christian Gromm <christian.gromm@microchip.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/1612282865-21846-1-git-send-email-christian.gromm@microchip.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d16e7c1615d91e98b295769a32608e1f5ce632b
Author: Gopal Tiwari <gtiwari@redhat.com>
Date:   Tue Feb 2 15:12:30 2021 +0530

    Bluetooth: Fix null pointer dereference in amp_read_loc_assoc_final_data
    
    [ Upstream commit e8bd76ede155fd54d8c41d045dda43cd3174d506 ]
    
    kernel panic trace looks like:
    
     #5 [ffffb9e08698fc80] do_page_fault at ffffffffb666e0d7
     #6 [ffffb9e08698fcb0] page_fault at ffffffffb70010fe
        [exception RIP: amp_read_loc_assoc_final_data+63]
        RIP: ffffffffc06ab54f  RSP: ffffb9e08698fd68  RFLAGS: 00010246
        RAX: 0000000000000000  RBX: ffff8c8845a5a000  RCX: 0000000000000004
        RDX: 0000000000000000  RSI: ffff8c8b9153d000  RDI: ffff8c8845a5a000
        RBP: ffffb9e08698fe40   R8: 00000000000330e0   R9: ffffffffc0675c94
        R10: ffffb9e08698fe58  R11: 0000000000000001  R12: ffff8c8b9cbf6200
        R13: 0000000000000000  R14: 0000000000000000  R15: ffff8c8b2026da0b
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
     #7 [ffffb9e08698fda8] hci_event_packet at ffffffffc0676904 [bluetooth]
     #8 [ffffb9e08698fe50] hci_rx_work at ffffffffc06629ac [bluetooth]
     #9 [ffffb9e08698fe98] process_one_work at ffffffffb66f95e7
    
    hcon->amp_mgr seems NULL triggered kernel panic in following line inside
    function amp_read_loc_assoc_final_data
    
            set_bit(READ_LOC_AMP_ASSOC_FINAL, &mgr->state);
    
    Fixed by checking NULL for mgr.
    
    Signed-off-by: Gopal Tiwari <gtiwari@redhat.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bba1995325b5ed317c8583a1cdb74fd09278b39e
Author: Fangrui Song <maskray@google.com>
Date:   Wed Jan 27 12:56:00 2021 -0800

    x86/build: Treat R_386_PLT32 relocation as R_386_PC32
    
    [ Upstream commit bb73d07148c405c293e576b40af37737faf23a6a ]
    
    This is similar to commit
    
      b21ebf2fb4cd ("x86: Treat R_X86_64_PLT32 as R_X86_64_PC32")
    
    but for i386. As far as the kernel is concerned, R_386_PLT32 can be
    treated the same as R_386_PC32.
    
    R_386_PLT32/R_X86_64_PLT32 are PC-relative relocation types which
    can only be used by branches. If the referenced symbol is defined
    externally, a PLT will be used.
    
    R_386_PC32/R_X86_64_PC32 are PC-relative relocation types which can be
    used by address taking operations and branches. If the referenced symbol
    is defined externally, a copy relocation/canonical PLT entry will be
    created in the executable.
    
    On x86-64, there is no PIC vs non-PIC PLT distinction and an
    R_X86_64_PLT32 relocation is produced for both `call/jmp foo` and
    `call/jmp foo@PLT` with newer (2018) GNU as/LLVM integrated assembler.
    This avoids canonical PLT entries (st_shndx=0, st_value!=0).
    
    On i386, there are 2 types of PLTs, PIC and non-PIC. Currently,
    the GCC/GNU as convention is to use R_386_PC32 for non-PIC PLT and
    R_386_PLT32 for PIC PLT. Copy relocations/canonical PLT entries
    are possible ABI issues but GCC/GNU as will likely keep the status
    quo because (1) the ABI is legacy (2) the change will drop a GNU
    ld diagnostic for non-default visibility ifunc in shared objects.
    
    clang-12 -fno-pic (since [1]) can emit R_386_PLT32 for compiler
    generated function declarations, because preventing canonical PLT
    entries is weighed over the rare ifunc diagnostic.
    
    Further info for the more interested:
    
      https://github.com/ClangBuiltLinux/linux/issues/1210
      https://sourceware.org/bugzilla/show_bug.cgi?id=27169
      https://github.com/llvm/llvm-project/commit/a084c0388e2a59b9556f2de0083333232da3f1d6 [1]
    
     [ bp: Massage commit message. ]
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Fangrui Song <maskray@google.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Tested-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Link: https://lkml.kernel.org/r/20210127205600.1227437-1-maskray@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e37674e1a48ddc5d5962fcec87aee7827a1bbe6c
Author: Miaoqing Pan <miaoqing@codeaurora.org>
Date:   Tue Dec 22 14:34:47 2020 +0800

    ath10k: fix wmi mgmt tx queue full due to race condition
    
    [ Upstream commit b55379e343a3472c35f4a1245906db5158cab453 ]
    
    Failed to transmit wmi management frames:
    
    [84977.840894] ath10k_snoc a000000.wifi: wmi mgmt tx queue is full
    [84977.840913] ath10k_snoc a000000.wifi: failed to transmit packet, dropping: -28
    [84977.840924] ath10k_snoc a000000.wifi: failed to submit frame: -28
    [84977.840932] ath10k_snoc a000000.wifi: failed to transmit frame: -28
    
    This issue is caused by race condition between skb_dequeue and
    __skb_queue_tail. The queue of ‘wmi_mgmt_tx_queue’ is protected by a
    different lock: ar->data_lock vs list->lock, the result is no protection.
    So when ath10k_mgmt_over_wmi_tx_work() and ath10k_mac_tx_wmi_mgmt()
    running concurrently on different CPUs, there appear to be a rare corner
    cases when the queue length is 1,
    
      CPUx (skb_deuque)                     CPUy (__skb_queue_tail)
                                            next=list
                                            prev=list
      struct sk_buff *skb = skb_peek(list); WRITE_ONCE(newsk->next, next);
      WRITE_ONCE(list->qlen, list->qlen - 1);WRITE_ONCE(newsk->prev, prev);
      next       = skb->next;               WRITE_ONCE(next->prev, newsk);
      prev       = skb->prev;               WRITE_ONCE(prev->next, newsk);
      skb->next  = skb->prev = NULL;        list->qlen++;
      WRITE_ONCE(next->prev, prev);
      WRITE_ONCE(prev->next, next);
    
    If the instruction ‘next = skb->next’ is executed before
    ‘WRITE_ONCE(prev->next, newsk)’, newsk will be lost, as CPUx get the
    old ‘next’ pointer, but the length is still added by one. The final
    result is the length of the queue will reach the maximum value but
    the queue is empty.
    
    So remove ar->data_lock, and use 'skb_queue_tail' instead of
    '__skb_queue_tail' to prevent the potential race condition. Also switch
    to use skb_queue_len_lockless, in case we queue a few SKBs simultaneously.
    
    Tested-on: WCN3990 hw1.0 SNOC WLAN.HL.3.1.c2-00033-QCAHLSWMTPLZ-1
    
    Signed-off-by: Miaoqing Pan <miaoqing@codeaurora.org>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1608618887-8857-1-git-send-email-miaoqing@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46813e4a7caa280f6a0e478b8882e2c56aa8b9be
Author: Di Zhu <zhudi21@huawei.com>
Date:   Mon Jan 25 20:42:29 2021 +0800

    pktgen: fix misuse of BUG_ON() in pktgen_thread_worker()
    
    [ Upstream commit 275b1e88cabb34dbcbe99756b67e9939d34a99b6 ]
    
    pktgen create threads for all online cpus and bond these threads to
    relevant cpu repecivtily. when this thread firstly be woken up, it
    will compare cpu currently running with the cpu specified at the time
    of creation and if the two cpus are not equal, BUG_ON() will take effect
    causing panic on the system.
    Notice that these threads could be migrated to other cpus before start
    running because of the cpu hotplug after these threads have created. so the
    BUG_ON() used here seems unreasonable and we can replace it with WARN_ON()
    to just printf a warning other than panic the system.
    
    Signed-off-by: Di Zhu <zhudi21@huawei.com>
    Link: https://lore.kernel.org/r/20210125124229.19334-1-zhudi21@huawei.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b074e7e20cc92ce4bd1b1ae0340c4330e3b5daa8
Author: Claire Chang <tientzu@chromium.org>
Date:   Tue Jan 19 19:47:00 2021 +0800

    Bluetooth: hci_h5: Set HCI_QUIRK_SIMULTANEOUS_DISCOVERY for btrtl
    
    [ Upstream commit 7f9f2c3f7d99b8ae773459c74ac5e99a0dd46db9 ]
    
    Realtek Bluetooth controllers can do both LE scan and BR/EDR inquiry
    at once, need to set HCI_QUIRK_SIMULTANEOUS_DISCOVERY quirk.
    
    Signed-off-by: Claire Chang <tientzu@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a8bbefd00746afe00226fe1dca165b5ba19b9c6
Author: Tony Lindgren <tony@atomide.com>
Date:   Fri Jan 15 08:56:13 2021 +0200

    wlcore: Fix command execute failure 19 for wl12xx
    
    [ Upstream commit cb88d01b67383a095e3f7caeb4cdade5a6cf0417 ]
    
    We can currently get a "command execute failure 19" error on beacon loss
    if the signal is weak:
    
    wlcore: Beacon loss detected. roles:0xff
    wlcore: Connection loss work (role_id: 0).
    ...
    wlcore: ERROR command execute failure 19
    ...
    WARNING: CPU: 0 PID: 1552 at drivers/net/wireless/ti/wlcore/main.c:803
    ...
    (wl12xx_queue_recovery_work.part.0 [wlcore])
    (wl12xx_cmd_role_start_sta [wlcore])
    (wl1271_op_bss_info_changed [wlcore])
    (ieee80211_prep_connection [mac80211])
    
    Error 19 is defined as CMD_STATUS_WRONG_NESTING from the wlcore firmware,
    and seems to mean that the firmware no longer wants to see the quirk
    handling for WLCORE_QUIRK_START_STA_FAILS done.
    
    This quirk got added with commit 18eab430700d ("wlcore: workaround
    start_sta problem in wl12xx fw"), and it seems that this already got fixed
    in the firmware long time ago back in 2012 as wl18xx never had this quirk
    in place to start with.
    
    As we no longer even support firmware that early, to me it seems that it's
    safe to just drop WLCORE_QUIRK_START_STA_FAILS to fix the error. Looks
    like earlier firmware got disabled back in 2013 with commit 0e284c074ef9
    ("wl12xx: increase minimum singlerole firmware version required").
    
    If it turns out we still need WLCORE_QUIRK_START_STA_FAILS with any
    firmware that the driver works with, we can simply revert this patch and
    add extra checks for firmware version used.
    
    With this fix wlcore reconnects properly after a beacon loss.
    
    Cc: Raz Bouganim <r-bouganim@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210115065613.7731-1-tony@atomide.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48549db10dbe3ef5a765a920b8fa11e83a741270
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Tue Jan 5 13:02:34 2021 +0100

    vt/consolemap: do font sum unsigned
    
    [ Upstream commit 9777f8e60e718f7b022a94f2524f967d8def1931 ]
    
    The constant 20 makes the font sum computation signed which can lead to
    sign extensions and signed wraps. It's not much of a problem as we build
    with -fno-strict-overflow. But if we ever decide not to, be ready, so
    switch the constant to unsigned.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20210105120239.28031-7-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de00b8f037ca683c8ddd4cd52a7cf1f157afa3eb
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Tue Dec 1 12:39:57 2020 +0100

    x86/reboot: Add Zotac ZBOX CI327 nano PCI reboot quirk
    
    [ Upstream commit 4b2d8ca9208be636b30e924b1cbcb267b0740c93 ]
    
    On this system the M.2 PCIe WiFi card isn't detected after reboot, only
    after cold boot. reboot=pci fixes this behavior. In [0] the same issue
    is described, although on another system and with another Intel WiFi
    card. In case it's relevant, both systems have Celeron CPUs.
    
    Add a PCI reboot quirk on affected systems until a more generic fix is
    available.
    
    [0] https://bugzilla.kernel.org/show_bug.cgi?id=202399
    
     [ bp: Massage commit message. ]
    
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/1524eafd-f89c-cfa4-ed70-0bde9e45eec9@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48f6c1a89487d7c497317a1df517d3972011673f
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Mon Dec 21 20:24:35 2020 +0800

    staging: fwserial: Fix error handling in fwserial_create
    
    [ Upstream commit f31559af97a0eabd467e4719253675b7dccb8a46 ]
    
    When fw_core_add_address_handler() fails, we need to destroy
    the port by tty_port_destroy(). Also we need to unregister
    the address handler by fw_core_remove_address_handler() on
    failure.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Link: https://lore.kernel.org/r/20201221122437.10274-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce2b4b9c86b7c2caa85a8cd842ba3c46fedb7773
Author: Marek Vasut <marex@denx.de>
Date:   Tue Nov 3 19:09:40 2020 +0100

    rsi: Move card interrupt handling to RX thread
    
    [ Upstream commit 287431463e786766e05e4dc26d0a11d5f8ac8815 ]
    
    The interrupt handling of the RS911x is particularly heavy. For each RX
    packet, the card does three SDIO transactions, one to read interrupt
    status register, one to RX buffer length, one to read the RX packet(s).
    This translates to ~330 uS per one cycle of interrupt handler. In case
    there is more incoming traffic, this will be more.
    
    The drivers/mmc/core/sdio_irq.c has the following comment, quote "Just
    like traditional hard IRQ handlers, we expect SDIO IRQ handlers to be
    quick and to the point, so that the holding of the host lock does not
    cover too much work that doesn't require that lock to be held."
    
    The RS911x interrupt handler does not fit that. This patch therefore
    changes it such that the entire IRQ handler is moved to the RX thread
    instead, and the interrupt handler only wakes the RX thread.
    
    This is OK, because the interrupt handler only does things which can
    also be done in the RX thread, that is, it checks for firmware loading
    error(s), it checks buffer status, it checks whether a packet arrived
    and if so, reads out the packet and passes it to network stack.
    
    Moreover, this change permits removal of a code which allocated an
    skbuff only to get 4-byte-aligned buffer, read up to 8kiB of data
    into the skbuff, queue this skbuff into local private queue, then in
    RX thread, this buffer is dequeued, the data in the skbuff as passed
    to the RSI driver core, and the skbuff is deallocated. All this is
    replaced by directly calling the RSI driver core with local buffer.
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Angus Ainslie <angus@akkea.ca>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Kalle Valo <kvalo@codeaurora.org>
    Cc: Lee Jones <lee.jones@linaro.org>
    Cc: Martin Kepplinger <martink@posteo.de>
    Cc: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
    Cc: Siva Rebbagondla <siva8118@gmail.com>
    Cc: linux-wireless@vger.kernel.org
    Cc: netdev@vger.kernel.org
    Tested-by: Martin Kepplinger <martin.kepplinger@puri.sm>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201103180941.443528-1-marex@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 133b0b1aa5c4490d8a01e70c0e92969378378368
Author: Marek Vasut <marex@denx.de>
Date:   Thu Oct 15 13:16:16 2020 +0200

    rsi: Fix TX EAPOL packet handling against iwlwifi AP
    
    [ Upstream commit 65277100caa2f2c62b6f3c4648b90d6f0435f3bc ]
    
    In case RSI9116 SDIO WiFi operates in STA mode against Intel 9260 in AP mode,
    the association fails. The former is using wpa_supplicant during association,
    the later is set up using hostapd:
    
    iwl$ cat hostapd.conf
    interface=wlp1s0
    ssid=test
    country_code=DE
    hw_mode=g
    channel=1
    wpa=2
    wpa_passphrase=test
    wpa_key_mgmt=WPA-PSK
    iwl$ hostapd -d hostapd.conf
    
    rsi$ wpa_supplicant -i wlan0 -c <(wpa_passphrase test test)
    
    The problem is that the TX EAPOL data descriptor RSI_DESC_REQUIRE_CFM_TO_HOST
    flag and extended descriptor EAPOL4_CONFIRM frame type are not set in case the
    AP is iwlwifi, because in that case the TX EAPOL packet is 2 bytes shorter.
    
    The downstream vendor driver has this change in place already [1], however
    there is no explanation for it, neither is there any commit history from which
    such explanation could be obtained.
    
    [1] https://github.com/SiliconLabs/RS911X-nLink-OSD/blob/master/rsi/rsi_91x_hal.c#L238
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Angus Ainslie <angus@akkea.ca>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Kalle Valo <kvalo@codeaurora.org>
    Cc: Lee Jones <lee.jones@linaro.org>
    Cc: Martin Kepplinger <martink@posteo.de>
    Cc: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
    Cc: Siva Rebbagondla <siva8118@gmail.com>
    Cc: linux-wireless@vger.kernel.org
    Cc: netdev@vger.kernel.org
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201015111616.429220-1-marex@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8c3088a90c304d27c3d146bf60b57ec2ef148d8
Author: Sergey Senozhatsky <senozhatsky@chromium.org>
Date:   Thu Nov 5 10:47:44 2020 +0900

    drm/virtio: use kvmalloc for large allocations
    
    commit ea86f3defd55f141a44146e66cbf8ffb683d60da upstream.
    
    We observed that some of virtio_gpu_object_shmem_init() allocations
    can be rather costly - order 6 - which can be difficult to fulfill
    under memory pressure conditions. Switch to kvmalloc_array() in
    virtio_gpu_object_shmem_init() and let the kernel vmalloc the entries
    array.
    
    Signed-off-by: Sergey Senozhatsky <senozhatsky@chromium.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/20201105014744.1662226-1-senozhatsky@chromium.org
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Doug Horn <doughorn@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 584149c771ec0110da184445bfdfb42beeb39bd9
Author: Paul Burton <paulburton@kernel.org>
Date:   Tue Oct 8 19:46:01 2019 +0000

    MIPS: Drop 32-bit asm string functions
    
    commit 3c0be5849259b729580c23549330973a2dd513a2 upstream.
    
    We have assembly implementations of strcpy(), strncpy(), strcmp() &
    strncmp() which:
    
     - Are simple byte-at-a-time loops with no particular optimizations. As
       a comment in the code describes, they're "rather naive".
    
     - Offer no clear performance advantage over the generic C
       implementations - in microbenchmarks performed by Alexander Lobakin
       the asm functions sometimes win & sometimes lose, but generally not
       by large margins in either direction.
    
     - Don't support 64-bit kernels, where we already make use of the
       generic C implementations.
    
     - Tend to bloat kernel code size due to inlining.
    
     - Don't support CONFIG_FORTIFY_SOURCE.
    
     - Won't support nanoMIPS without rework.
    
    For all of these reasons, delete the asm implementations & make use of
    the generic C implementations for 32-bit kernels just like we already do
    for 64-bit kernels.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    URL: https://lore.kernel.org/linux-mips/a2a35f1cf58d6db19eb4af9b4ae21e35@dlink.ru/
    Cc: Alexander Lobakin <alobakin@dlink.ru>
    Reviewed-by: Philippe Mathieu-Daudé <f4bug@amsat.org>
    Cc: linux-mips@vger.kernel.org
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 648c5b1b24d00fe37554e7e5239d844ff1aae7a3
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Jan 14 14:13:33 2021 +0100

    dt-bindings: net: btusb: DT fix s/interrupt-name/interrupt-names/
    
    commit f288988930e93857e0375bdf88bb670c312b82eb upstream.
    
    The standard DT property name is "interrupt-names".
    
    Fixes: fd913ef7ce619467 ("Bluetooth: btusb: Add out-of-band wakeup support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Acked-by: Rajat Jain <rajatja@google.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 823e6524e1f320f286a4bcb72820b2a0d094902a
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Mon Feb 1 10:02:20 2021 +0000

    dt-bindings: ethernet-controller: fix fixed-link specification
    
    commit 322322d15b9b912bc8710c367a95a7de62220a72 upstream.
    
    The original fixed-link.txt allowed a pause property for fixed link.
    This has been missed in the conversion to yaml format.
    
    Fixes: 9d3de3c58347 ("dt-bindings: net: Add YAML schemas for the generic Ethernet options")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/E1l6W2G-0002Ga-0O@rmk-PC.armlinux.org.uk
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 176188cff67ec1aa55103647b61d02315cc38e98
Author: Cong Wang <cong.wang@bytedance.com>
Date:   Thu Feb 11 11:34:10 2021 -0800

    net: fix dev_ifsioc_locked() race condition
    
    commit 3b23a32a63219f51a5298bc55a65ecee866e79d0 upstream.
    
    dev_ifsioc_locked() is called with only RCU read lock, so when
    there is a parallel writer changing the mac address, it could
    get a partially updated mac address, as shown below:
    
    Thread 1                        Thread 2
    // eth_commit_mac_addr_change()
    memcpy(dev->dev_addr, addr->sa_data, ETH_ALEN);
                                    // dev_ifsioc_locked()
                                    memcpy(ifr->ifr_hwaddr.sa_data,
                                            dev->dev_addr,...);
    
    Close this race condition by guarding them with a RW semaphore,
    like netdev_get_name(). We can not use seqlock here as it does not
    allow blocking. The writers already take RTNL anyway, so this does
    not affect the slow path. To avoid bothering existing
    dev_set_mac_address() callers in drivers, introduce a new wrapper
    just for user-facing callers on ioctl and rtnetlink paths.
    
    Note, bonding also changes slave mac addresses but that requires
    a separate patch due to the complexity of bonding code.
    
    Fixes: 3710becf8a58 ("net: RCU locking for simple ioctl()")
    Reported-by: "Gong, Sishuai" <sishuai@purdue.edu>
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Cong Wang <cong.wang@bytedance.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4fc812e3577f3673c59a8983f901761fdae6726
Author: DENG Qingfang <dqfext@gmail.com>
Date:   Thu Feb 18 11:45:14 2021 +0800

    net: ag71xx: remove unnecessary MTU reservation
    
    commit 04b385f325080157ab1b5f8ce1b1de07ce0d9e27 upstream.
    
    2 bytes of the MTU are reserved for Atheros DSA tag, but DSA core
    has already handled that since commit dc0fe7d47f9f.
    Remove the unnecessary reservation.
    
    Fixes: d51b6ce441d3 ("net: ethernet: add ag71xx driver")
    Signed-off-by: DENG Qingfang <dqfext@gmail.com>
    Reviewed-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Link: https://lore.kernel.org/r/20210218034514.3421-1-dqfext@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad112654e21d77bc3709798fce0cf477f65e7845
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Sun Feb 7 21:47:33 2021 +0200

    net: bridge: use switchdev for port flags set through sysfs too
    
    commit 8043c845b63a2dd88daf2d2d268a33e1872800f0 upstream.
    
    Looking through patchwork I don't see that there was any consensus to
    use switchdev notifiers only in case of netlink provided port flags but
    not sysfs (as a sort of deprecation, punishment or anything like that),
    so we should probably keep the user interface consistent in terms of
    functionality.
    
    http://patchwork.ozlabs.org/project/netdev/patch/20170605092043.3523-3-jiri@resnulli.us/
    http://patchwork.ozlabs.org/project/netdev/patch/20170608064428.4785-3-jiri@resnulli.us/
    
    Fixes: 3922285d96e7 ("net: bridge: Add support for offloading port attributes")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Acked-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e235c3a95183c27754930b1c1af130fa66186fb
Author: Li Xinhai <lixinhai.lxh@gmail.com>
Date:   Wed Feb 24 12:06:54 2021 -0800

    mm/hugetlb.c: fix unnecessary address expansion of pmd sharing
    
    commit a1ba9da8f0f9a37d900ff7eff66482cf7de8015e upstream.
    
    The current code would unnecessarily expand the address range.  Consider
    one example, (start, end) = (1G-2M, 3G+2M), and (vm_start, vm_end) =
    (1G-4M, 3G+4M), the expected adjustment should be keep (1G-2M, 3G+2M)
    without expand.  But the current result will be (1G-4M, 3G+4M).  Actually,
    the range (1G-4M, 1G) and (3G, 3G+4M) would never been involved in pmd
    sharing.
    
    After this patch, we will check that the vma span at least one PUD aligned
    size and the start,end range overlap the aligned range of vma.
    
    With above example, the aligned vma range is (1G, 3G), so if (start, end)
    range is within (1G-4M, 1G), or within (3G, 3G+4M), then no adjustment to
    both start and end.  Otherwise, we will have chance to adjust start
    downwards or end upwards without exceeding (vm_start, vm_end).
    
    Mike:
    
    : The 'adjusted range' is used for calls to mmu notifiers and cache(tlb)
    : flushing.  Since the current code unnecessarily expands the range in some
    : cases, more entries than necessary would be flushed.  This would/could
    : result in performance degradation.  However, this is highly dependent on
    : the user runtime.  Is there a combination of vma layout and calls to
    : actually hit this issue?  If the issue is hit, will those entries
    : unnecessarily flushed be used again and need to be unnecessarily reloaded?
    
    Link: https://lkml.kernel.org/r/20210104081631.2921415-1-lixinhai.lxh@gmail.com
    Fixes: 75802ca66354 ("mm/hugetlb: fix calculation of adjust_range_if_pmd_sharing_possible")
    Signed-off-by: Li Xinhai <lixinhai.lxh@gmail.com>
    Suggested-by: Mike Kravetz <mike.kravetz@oracle.com>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Peter Xu <peterx@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ed3162e92bf74d4d918a99fae5f224300db470f
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Feb 22 15:09:53 2021 -0500

    nbd: handle device refs for DESTROY_ON_DISCONNECT properly
    
    commit c9a2f90f4d6b9d42b9912f7aaf68e8d748acfffd upstream.
    
    There exists a race where we can be attempting to create a new nbd
    configuration while a previous configuration is going down, both
    configured with DESTROY_ON_DISCONNECT.  Normally devices all have a
    reference of 1, as they won't be cleaned up until the module is torn
    down.  However with DESTROY_ON_DISCONNECT we'll make sure that there is
    only 1 reference (generally) on the device for the config itself, and
    then once the config is dropped, the device is torn down.
    
    The race that exists looks like this
    
    TASK1                                   TASK2
    nbd_genl_connect()
      idr_find()
        refcount_inc_not_zero(nbd)
          * count is 2 here ^^
                                            nbd_config_put()
                                              nbd_put(nbd) (count is 1)
        setup new config
          check DESTROY_ON_DISCONNECT
            put_dev = true
        if (put_dev) nbd_put(nbd)
            * free'd here ^^
    
    In nbd_genl_connect() we assume that the nbd ref count will be 2,
    however clearly that won't be true if the nbd device had been setup as
    DESTROY_ON_DISCONNECT with its prior configuration.  Fix this by getting
    rid of the runtime flag to check if we need to mess with the nbd device
    refcount, and use the device NBD_DESTROY_ON_DISCONNECT flag to check if
    we need to adjust the ref counts.  This was reported by syzkaller with
    the following kasan dump
    
    BUG: KASAN: use-after-free in instrument_atomic_read include/linux/instrumented.h:71 [inline]
    BUG: KASAN: use-after-free in atomic_read include/asm-generic/atomic-instrumented.h:27 [inline]
    BUG: KASAN: use-after-free in refcount_dec_not_one+0x71/0x1e0 lib/refcount.c:76
    Read of size 4 at addr ffff888143bf71a0 by task systemd-udevd/8451
    
    CPU: 0 PID: 8451 Comm: systemd-udevd Not tainted 5.11.0-rc7-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x107/0x163 lib/dump_stack.c:120
     print_address_description.constprop.0.cold+0x5b/0x2f8 mm/kasan/report.c:230
     __kasan_report mm/kasan/report.c:396 [inline]
     kasan_report.cold+0x79/0xd5 mm/kasan/report.c:413
     check_memory_region_inline mm/kasan/generic.c:179 [inline]
     check_memory_region+0x13d/0x180 mm/kasan/generic.c:185
     instrument_atomic_read include/linux/instrumented.h:71 [inline]
     atomic_read include/asm-generic/atomic-instrumented.h:27 [inline]
     refcount_dec_not_one+0x71/0x1e0 lib/refcount.c:76
     refcount_dec_and_mutex_lock+0x19/0x140 lib/refcount.c:115
     nbd_put drivers/block/nbd.c:248 [inline]
     nbd_release+0x116/0x190 drivers/block/nbd.c:1508
     __blkdev_put+0x548/0x800 fs/block_dev.c:1579
     blkdev_put+0x92/0x570 fs/block_dev.c:1632
     blkdev_close+0x8c/0xb0 fs/block_dev.c:1640
     __fput+0x283/0x920 fs/file_table.c:280
     task_work_run+0xdd/0x190 kernel/task_work.c:140
     tracehook_notify_resume include/linux/tracehook.h:189 [inline]
     exit_to_user_mode_loop kernel/entry/common.c:174 [inline]
     exit_to_user_mode_prepare+0x249/0x250 kernel/entry/common.c:201
     __syscall_exit_to_user_mode_work kernel/entry/common.c:283 [inline]
     syscall_exit_to_user_mode+0x19/0x50 kernel/entry/common.c:294
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x7fc1e92b5270
    Code: 73 01 c3 48 8b 0d 38 7d 20 00 f7 d8 64 89 01 48 83 c8 ff c3 66 0f 1f 44 00 00 83 3d 59 c1 20 00 00 75 10 b8 03 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 31 c3 48 83 ec 08 e8 ee fb ff ff 48 89 04 24
    RSP: 002b:00007ffe8beb2d18 EFLAGS: 00000246 ORIG_RAX: 0000000000000003
    RAX: 0000000000000000 RBX: 0000000000000007 RCX: 00007fc1e92b5270
    RDX: 000000000aba9500 RSI: 0000000000000000 RDI: 0000000000000007
    RBP: 00007fc1ea16f710 R08: 000000000000004a R09: 0000000000000008
    R10: 0000562f8cb0b2a8 R11: 0000000000000246 R12: 0000000000000000
    R13: 0000562f8cb0afd0 R14: 0000000000000003 R15: 000000000000000e
    
    Allocated by task 1:
     kasan_save_stack+0x1b/0x40 mm/kasan/common.c:38
     kasan_set_track mm/kasan/common.c:46 [inline]
     set_alloc_info mm/kasan/common.c:401 [inline]
     ____kasan_kmalloc.constprop.0+0x82/0xa0 mm/kasan/common.c:429
     kmalloc include/linux/slab.h:552 [inline]
     kzalloc include/linux/slab.h:682 [inline]
     nbd_dev_add+0x44/0x8e0 drivers/block/nbd.c:1673
     nbd_init+0x250/0x271 drivers/block/nbd.c:2394
     do_one_initcall+0x103/0x650 init/main.c:1223
     do_initcall_level init/main.c:1296 [inline]
     do_initcalls init/main.c:1312 [inline]
     do_basic_setup init/main.c:1332 [inline]
     kernel_init_freeable+0x605/0x689 init/main.c:1533
     kernel_init+0xd/0x1b8 init/main.c:1421
     ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:296
    
    Freed by task 8451:
     kasan_save_stack+0x1b/0x40 mm/kasan/common.c:38
     kasan_set_track+0x1c/0x30 mm/kasan/common.c:46
     kasan_set_free_info+0x20/0x30 mm/kasan/generic.c:356
     ____kasan_slab_free+0xe1/0x110 mm/kasan/common.c:362
     kasan_slab_free include/linux/kasan.h:192 [inline]
     slab_free_hook mm/slub.c:1547 [inline]
     slab_free_freelist_hook+0x5d/0x150 mm/slub.c:1580
     slab_free mm/slub.c:3143 [inline]
     kfree+0xdb/0x3b0 mm/slub.c:4139
     nbd_dev_remove drivers/block/nbd.c:243 [inline]
     nbd_put.part.0+0x180/0x1d0 drivers/block/nbd.c:251
     nbd_put drivers/block/nbd.c:295 [inline]
     nbd_config_put+0x6dd/0x8c0 drivers/block/nbd.c:1242
     nbd_release+0x103/0x190 drivers/block/nbd.c:1507
     __blkdev_put+0x548/0x800 fs/block_dev.c:1579
     blkdev_put+0x92/0x570 fs/block_dev.c:1632
     blkdev_close+0x8c/0xb0 fs/block_dev.c:1640
     __fput+0x283/0x920 fs/file_table.c:280
     task_work_run+0xdd/0x190 kernel/task_work.c:140
     tracehook_notify_resume include/linux/tracehook.h:189 [inline]
     exit_to_user_mode_loop kernel/entry/common.c:174 [inline]
     exit_to_user_mode_prepare+0x249/0x250 kernel/entry/common.c:201
     __syscall_exit_to_user_mode_work kernel/entry/common.c:283 [inline]
     syscall_exit_to_user_mode+0x19/0x50 kernel/entry/common.c:294
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    The buggy address belongs to the object at ffff888143bf7000
     which belongs to the cache kmalloc-1k of size 1024
    The buggy address is located 416 bytes inside of
     1024-byte region [ffff888143bf7000, ffff888143bf7400)
    The buggy address belongs to the page:
    page:000000005238f4ce refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x143bf0
    head:000000005238f4ce order:3 compound_mapcount:0 compound_pincount:0
    flags: 0x57ff00000010200(slab|head)
    raw: 057ff00000010200 ffffea00004b1400 0000000300000003 ffff888010c41140
    raw: 0000000000000000 0000000000100010 00000001ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff888143bf7080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff888143bf7100: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    >ffff888143bf7180: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                   ^
     ffff888143bf7200: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    
    Reported-and-tested-by: syzbot+429d3f82d757c211bff3@syzkaller.appspotmail.com
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6af7cb64b7b37b8a371acdbe33a636496ffb5a4
Author: Marco Elver <elver@google.com>
Date:   Mon Feb 1 17:04:20 2021 +0100

    net: fix up truesize of cloned skb in skb_prepare_for_shift()
    
    commit 097b9146c0e26aabaa6ff3e5ea536a53f5254a79 upstream.
    
    Avoid the assumption that ksize(kmalloc(S)) == ksize(kmalloc(S)): when
    cloning an skb, save and restore truesize after pskb_expand_head(). This
    can occur if the allocator decides to service an allocation of the same
    size differently (e.g. use a different size class, or pass the
    allocation on to KFENCE).
    
    Because truesize is used for bookkeeping (such as sk_wmem_queued), a
    modified truesize of a cloned skb may result in corrupt bookkeeping and
    relevant warnings (such as in sk_stream_kill_queues()).
    
    Link: https://lkml.kernel.org/r/X9JR/J6dMMOy1obu@elver.google.com
    Reported-by: syzbot+7b99aafdcc2eedea6178@syzkaller.appspotmail.com
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Marco Elver <elver@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20210201160420.2826895-1-elver@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ceb5ca9e626a8912efb45c924713121b9fc0655
Author: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
Date:   Thu Jan 28 17:58:01 2021 +0600

    smackfs: restrict bytes count in smackfs write functions
    
    commit 7ef4c19d245f3dc233fd4be5acea436edd1d83d8 upstream.
    
    syzbot found WARNINGs in several smackfs write operations where
    bytes count is passed to memdup_user_nul which exceeds
    GFP MAX_ORDER. Check count size if bigger than PAGE_SIZE.
    
    Per smackfs doc, smk_write_net4addr accepts any label or -CIPSO,
    smk_write_net6addr accepts any label or -DELETE. I couldn't find
    any general rule for other label lengths except SMK_LABELLEN,
    SMK_LONGLABEL, SMK_CIPSOMAX which are documented.
    
    Let's constrain, in general, smackfs label lengths for PAGE_SIZE.
    Although fuzzer crashes write to smackfs/netlabel on 0x400000 length.
    
    Here is a quick way to reproduce the WARNING:
    python -c "print('A' * 0x400000)" > /sys/fs/smackfs/netlabel
    
    Reported-by: syzbot+a71a442385a0b2815497@syzkaller.appspotmail.com
    Signed-off-by: Sabyrzhan Tasbolatov <snovitoll@gmail.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fe244620e74b4862168a44db7fed328443b386c
Author: Alexander Egorenkov <egorenar@linux.ibm.com>
Date:   Thu Jan 28 12:41:04 2021 +0100

    net/af_iucv: remove WARN_ONCE on malformed RX packets
    
    commit 27e9c1de529919d8dd7d072415d3bcae77709300 upstream.
    
    syzbot reported the following finding:
    
    AF_IUCV failed to receive skb, len=0
    WARNING: CPU: 0 PID: 522 at net/iucv/af_iucv.c:2039 afiucv_hs_rcv+0x174/0x190 net/iucv/af_iucv.c:2039
    CPU: 0 PID: 522 Comm: syz-executor091 Not tainted 5.10.0-rc1-syzkaller-07082-g55027a88ec9f #0
    Hardware name: IBM 3906 M04 701 (KVM/Linux)
    Call Trace:
     [<00000000b87ea538>] afiucv_hs_rcv+0x178/0x190 net/iucv/af_iucv.c:2039
    ([<00000000b87ea534>] afiucv_hs_rcv+0x174/0x190 net/iucv/af_iucv.c:2039)
     [<00000000b796533e>] __netif_receive_skb_one_core+0x13e/0x188 net/core/dev.c:5315
     [<00000000b79653ce>] __netif_receive_skb+0x46/0x1c0 net/core/dev.c:5429
     [<00000000b79655fe>] netif_receive_skb_internal+0xb6/0x220 net/core/dev.c:5534
     [<00000000b796ac3a>] netif_receive_skb+0x42/0x318 net/core/dev.c:5593
     [<00000000b6fd45f4>] tun_rx_batched.isra.0+0x6fc/0x860 drivers/net/tun.c:1485
     [<00000000b6fddc4e>] tun_get_user+0x1c26/0x27f0 drivers/net/tun.c:1939
     [<00000000b6fe0f00>] tun_chr_write_iter+0x158/0x248 drivers/net/tun.c:1968
     [<00000000b4f22bfa>] call_write_iter include/linux/fs.h:1887 [inline]
     [<00000000b4f22bfa>] new_sync_write+0x442/0x648 fs/read_write.c:518
     [<00000000b4f238fe>] vfs_write.part.0+0x36e/0x5d8 fs/read_write.c:605
     [<00000000b4f2984e>] vfs_write+0x10e/0x148 fs/read_write.c:615
     [<00000000b4f29d0e>] ksys_write+0x166/0x290 fs/read_write.c:658
     [<00000000b8dc4ab4>] system_call+0xe0/0x28c arch/s390/kernel/entry.S:415
    Last Breaking-Event-Address:
     [<00000000b8dc64d4>] __s390_indirect_jump_r14+0x0/0xc
    
    Malformed RX packets shouldn't generate any warnings because
    debugging info already flows to dropmon via the kfree_skb().
    
    Signed-off-by: Alexander Egorenkov <egorenar@linux.ibm.com>
    Reviewed-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09e47dc27ed5c233c20dd278886ac23a9927fb06
Author: Yumei Huang <yuhuang@redhat.com>
Date:   Fri Jan 22 16:48:19 2021 -0800

    xfs: Fix assert failure in xfs_setattr_size()
    
    commit 88a9e03beef22cc5fabea344f54b9a0dfe63de08 upstream.
    
    An assert failure is triggered by syzkaller test due to
    ATTR_KILL_PRIV is not cleared before xfs_setattr_size.
    As ATTR_KILL_PRIV is not checked/used by xfs_setattr_size,
    just remove it from the assert.
    
    Signed-off-by: Yumei Huang <yuhuang@redhat.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a72c45f4ee33988ff2db4cba91b9daa75869e047
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Wed Jan 20 09:28:02 2021 +0100

    media: v4l2-ctrls.c: fix shift-out-of-bounds in std_validate
    
    commit 048c96e28674f15c0403deba2104ffba64544a06 upstream.
    
    If a menu has more than 64 items, then don't check menu_skip_mask
    for items 65 and up.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reported-by: syzbot+42d8c7c3d3e594b34346@syzkaller.appspotmail.com
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edaa0a0aab6e63b2ea7747f14daa68808ea4f36b
Author: Gao Xiang <hsiangkao@redhat.com>
Date:   Wed Jan 20 09:30:16 2021 +0800

    erofs: fix shift-out-of-bounds of blkszbits
    
    commit bde545295b710bdd13a0fcd4b9fddd2383eeeb3a upstream.
    
    syzbot generated a crafted bitszbits which can be shifted
    out-of-bounds[1]. So directly print unsupported blkszbits
    instead of blksize.
    
    [1] https://lore.kernel.org/r/000000000000c72ddd05b9444d2f@google.com
    
    Link: https://lore.kernel.org/r/20210120013016.14071-1-hsiangkao@aol.com
    Reported-by: syzbot+c68f467cd7c45860e8d4@syzkaller.appspotmail.com
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Gao Xiang <hsiangkao@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 706068d0811a6bce6e324d1a1c11fcd4d0047c60
Author: Sean Young <sean@mess.org>
Date:   Tue Jan 19 14:53:50 2021 +0100

    media: mceusb: sanity check for prescaler value
    
    commit 9dec0f48a75e0dadca498002d25ef4e143e60194 upstream.
    
    prescaler larger than 8 would mean the carrier is at most 152Hz,
    which does not make sense for IR carriers.
    
    Reported-by: syzbot+6d31bf169a8265204b8d@syzkaller.appspotmail.com
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64677f10e560e931bd477f461f7f28921f3a3823
Author: Zqiang <qiang.zhang@windriver.com>
Date:   Tue Dec 15 14:30:22 2020 +0800

    udlfb: Fix memory leak in dlfb_usb_probe
    
    commit 5c0e4110f751934e748a66887c61f8e73805f0f9 upstream.
    
    The dlfb_alloc_urb_list function is called in dlfb_usb_probe function,
    after that if an error occurs, the dlfb_free_urb_list function need to
    be called.
    
    BUG: memory leak
    unreferenced object 0xffff88810adde100 (size 32):
      comm "kworker/1:0", pid 17, jiffies 4294947788 (age 19.520s)
      hex dump (first 32 bytes):
        10 30 c3 0d 81 88 ff ff c0 fa 63 12 81 88 ff ff  .0........c.....
        00 30 c3 0d 81 88 ff ff 80 d1 3a 08 81 88 ff ff  .0........:.....
      backtrace:
        [<0000000019512953>] kmalloc include/linux/slab.h:552 [inline]
        [<0000000019512953>] kzalloc include/linux/slab.h:664 [inline]
        [<0000000019512953>] dlfb_alloc_urb_list drivers/video/fbdev/udlfb.c:1892 [inline]
        [<0000000019512953>] dlfb_usb_probe.cold+0x289/0x988 drivers/video/fbdev/udlfb.c:1704
        [<0000000072160152>] usb_probe_interface+0x177/0x370 drivers/usb/core/driver.c:396
        [<00000000a8d6726f>] really_probe+0x159/0x480 drivers/base/dd.c:554
        [<00000000c3ce4b0e>] driver_probe_device+0x84/0x100 drivers/base/dd.c:738
        [<00000000e942e01c>] __device_attach_driver+0xee/0x110 drivers/base/dd.c:844
        [<00000000de0a5a5c>] bus_for_each_drv+0xb7/0x100 drivers/base/bus.c:431
        [<00000000463fbcb4>] __device_attach+0x122/0x250 drivers/base/dd.c:912
        [<00000000b881a711>] bus_probe_device+0xc6/0xe0 drivers/base/bus.c:491
        [<00000000364bbda5>] device_add+0x5ac/0xc30 drivers/base/core.c:2936
        [<00000000eecca418>] usb_set_configuration+0x9de/0xb90 drivers/usb/core/message.c:2159
        [<00000000edfeca2d>] usb_generic_driver_probe+0x8c/0xc0 drivers/usb/core/generic.c:238
        [<000000001830872b>] usb_probe_device+0x5c/0x140 drivers/usb/core/driver.c:293
        [<00000000a8d6726f>] really_probe+0x159/0x480 drivers/base/dd.c:554
        [<00000000c3ce4b0e>] driver_probe_device+0x84/0x100 drivers/base/dd.c:738
        [<00000000e942e01c>] __device_attach_driver+0xee/0x110 drivers/base/dd.c:844
        [<00000000de0a5a5c>] bus_for_each_drv+0xb7/0x100 drivers/base/bus.c:431
    
    Reported-by: syzbot+c9e365d7f450e8aa615d@syzkaller.appspotmail.com
    Signed-off-by: Zqiang <qiang.zhang@windriver.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20201215063022.16746-1-qiang.zhang@windriver.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e3b08cfe619433d4acd42cbeeeca77ff3cd368a
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Dec 18 12:17:16 2020 -0800

    JFS: more checks for invalid superblock
    
    commit 3bef198f1b17d1bb89260bad947ef084c0a2d1a6 upstream.
    
    syzbot is feeding invalid superblock data to JFS for mount testing.
    JFS does not check several of the fields -- just assumes that they
    are good since the JFS_MAGIC and version fields are good.
    
    In this case (syzbot reproducer), we have s_l2bsize == 0xda0c,
    pad == 0xf045, and s_state == 0x50, all of which are invalid IMO.
    Having s_l2bsize == 0xda0c causes this UBSAN warning:
      UBSAN: shift-out-of-bounds in fs/jfs/jfs_mount.c:373:25
      shift exponent -9716 is negative
    
    s_l2bsize can be tested for correctness. pad can be tested for non-0
    and punted. s_state can be tested for its valid values and punted.
    
    Do those 3 tests and if any of them fails, report the superblock as
    invalid/corrupt and let fsck handle it.
    
    With this patch, chkSuper() says this when JFS_DEBUG is enabled:
      jfs_mount: Mount Failure: superblock is corrupt!
      Mount JFS Failure: -22
      jfs_mount failed w/return code = -22
    
    The obvious problem with this method is that next week there could
    be another syzbot test that uses different fields for invalid values,
    this making this like a game of whack-a-mole.
    
    syzkaller link: https://syzkaller.appspot.com/bug?extid=36315852ece4132ec193
    
    Reported-by: syzbot+36315852ece4132ec193@syzkaller.appspotmail.com
    Reported-by: kernel test robot <lkp@intel.com> # v2
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Dave Kleikamp <dave.kleikamp@oracle.com>
    Cc: jfs-discussion@lists.sourceforge.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86d7c693670e49b7635b42b9e763eedb52497de5
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Fri Jan 15 12:26:22 2021 -0700

    MIPS: VDSO: Use CLANG_FLAGS instead of filtering out '--target='
    
    commit 76d7fff22be3e4185ee5f9da2eecbd8188e76b2c upstream.
    
    Commit ee67855ecd9d ("MIPS: vdso: Allow clang's --target flag in VDSO
    cflags") allowed the '--target=' flag from the main Makefile to filter
    through to the vDSO. However, it did not bring any of the other clang
    specific flags for controlling the integrated assembler and the GNU
    tools locations (--prefix=, --gcc-toolchain=, and -no-integrated-as).
    Without these, we will get a warning (visible with tinyconfig):
    
    arch/mips/vdso/elf.S:14:1: warning: DWARF2 only supports one section per
    compilation unit
    .pushsection .note.Linux, "a",@note ; .balign 4 ; .long 2f - 1f ; .long
    4484f - 3f ; .long 0 ; 1:.asciz "Linux" ; 2:.balign 4 ; 3:
    ^
    arch/mips/vdso/elf.S:34:2: warning: DWARF2 only supports one section per
    compilation unit
     .section .mips_abiflags, "a"
     ^
    
    All of these flags are bundled up under CLANG_FLAGS in the main Makefile
    and exported so that they can be added to Makefiles that set their own
    CFLAGS. Use this value instead of filtering out '--target=' so there is
    no warning and all of the tools are properly used.
    
    Cc: stable@vger.kernel.org
    Fixes: ee67855ecd9d ("MIPS: vdso: Allow clang's --target flag in VDSO cflags")
    Link: https://github.com/ClangBuiltLinux/linux/issues/1256
    Reported-by: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    [nc: Fix conflict due to lack of 99570c3da96a in 5.4]
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9757d5c4fc3f7e4ab8cab07c4642194f57c551fc
Author: Shaoying Xu <shaoyi@amazon.com>
Date:   Tue Feb 16 18:32:34 2021 +0000

    arm64 module: set plt* section addresses to 0x0
    
    commit f5c6d0fcf90ce07ee0d686d465b19b247ebd5ed7 upstream.
    
    These plt* and .text.ftrace_trampoline sections specified for arm64 have
    non-zero addressses. Non-zero section addresses in a relocatable ELF would
    confuse GDB when it tries to compute the section offsets and it ends up
    printing wrong symbol addresses. Therefore, set them to zero, which mirrors
    the change in commit 5d8591bc0fba ("module: set ksymtab/kcrctab* section
    addresses to 0x0").
    
    Reported-by: Frank van der Linden <fllinden@amazon.com>
    Signed-off-by: Shaoying Xu <shaoyi@amazon.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210216183234.GA23876@amazon.com
    Signed-off-by: Will Deacon <will@kernel.org>
    [shaoyi@amazon.com: made same changes in arch/arm64/kernel/module.lds for 5.4]
    Signed-off-by: Shaoying Xu <shaoyi@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69861dcc78c2a838ebb5e6371d9c0e7b7f304f2c
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Mar 2 17:39:11 2021 +0000

    nvme-pci: fix error unwind in nvme_map_data
    
    commit fa0732168fa1369dd089e5b06d6158a68229f7b7 upstream.
    
    Properly unwind step by step using refactored helpers from nvme_unmap_data
    to avoid a potential double dma_unmap on a mapping failure.
    
    Fixes: 7fe07d14f71f ("nvme-pci: merge nvme_free_iod into nvme_unmap_data")
    Reported-by: Marc Orr <marcorr@google.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Marc Orr <marcorr@google.com>
    Signed-off-by: Marc Orr <marcorr@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 744073c5c79c7dce746a351b7da249f20141f8fa
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Mar 2 17:39:10 2021 +0000

    nvme-pci: refactor nvme_unmap_data
    
    commit 9275c206f88e5c49cb3e71932c81c8561083db9e upstream.
    
    Split out three helpers from nvme_unmap_data that will allow finer grained
    unwinding from nvme_map_data.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Marc Orr <marcorr@google.com>
    Signed-off-by: Marc Orr <marcorr@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e4815cf178561104881e5d687ef69396aca1c8d
Author: jingle.wu <jingle.wu@emc.com.tw>
Date:   Thu Dec 10 23:49:16 2020 -0800

    Input: elantech - fix protocol errors for some trackpoints in SMBus mode
    
    commit e4c9062717feda88900b566463228d1c4910af6d upstream.
    
    There are some version of Elan trackpads that send incorrect data when
    in SMbus mode, unless they are switched to use 0x5f reports instead of
    standard 0x5e. This patch implements querying device to retrieve chips
    identifying data, and switching it, when needed to the alternative
    report.
    
    Signed-off-by: Jingle Wu <jingle.wu@emc.com.tw>
    Link: https://lore.kernel.org/r/20201211071531.32413-1-jingle.wu@emc.com.tw
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Cc: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1d010346e482dba374cd09ec41b53896b820952
Author: Lech Perczak <lech.perczak@gmail.com>
Date:   Tue Feb 23 19:34:56 2021 +0100

    net: usb: qmi_wwan: support ZTE P685M modem
    
    commit 88eee9b7b42e69fb622ddb3ff6f37e8e4347f5b2 upstream.
    
    Now that interface 3 in "option" driver is no longer mapped, add device
    ID matching it to qmi_wwan.
    
    The modem is used inside ZTE MF283+ router and carriers identify it as
    such.
    Interface mapping is:
    0: QCDM, 1: AT (PCUI), 2: AT (Modem), 3: QMI, 4: ADB
    
    T:  Bus=02 Lev=02 Prnt=02 Port=05 Cnt=01 Dev#=  3 Spd=480  MxCh= 0
    D:  Ver= 2.01 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=19d2 ProdID=1275 Rev=f0.00
    S:  Manufacturer=ZTE,Incorporated
    S:  Product=ZTE Technologies MSM
    S:  SerialNumber=P685M510ZTED0000CP&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&0
    C:* #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:* If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=83(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    E:  Ad=87(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=42 Prot=01 Driver=(none)
    E:  Ad=88(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: Lech Perczak <lech.perczak@gmail.com>
    Link: https://lore.kernel.org/r/20210223183456.6377-1-lech.perczak@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
