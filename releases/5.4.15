commit 111e415c94f5c299de1ee50c825b60e63d5919e9
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Jan 26 10:01:09 2020 +0100

    Linux 5.4.15

commit 15763f047ea2785a253d53edc91892ed7acb304f
Author: Sumit Garg <sumit.garg@linaro.org>
Date:   Mon Dec 30 18:52:40 2019 +0530

    optee: Fix multi page dynamic shm pool alloc
    
    [ Upstream commit 5a769f6ff439cedc547395a6dc78faa26108f741 ]
    
    optee_shm_register() expected pages to be passed as an array of page
    pointers rather than as an array of contiguous pages. So fix that via
    correctly passing pages as per expectation.
    
    Fixes: a249dd200d03 ("tee: optee: Fix dynamic shm pool allocations")
    Reported-by: Vincent Cao <vincent.t.cao@intel.com>
    Signed-off-by: Sumit Garg <sumit.garg@linaro.org>
    Tested-by: Vincent Cao <vincent.t.cao@intel.com>
    Signed-off-by: Jens Wiklander <jens.wiklander@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88532d1e64e1a303b23ea13355c990f10a6b4b93
Author: Jonas Karlman <jonas@kwiboo.se>
Date:   Mon Dec 23 08:49:19 2019 +0000

    phy/rockchip: inno-hdmi: round clock rate down to closest 1000 Hz
    
    [ Upstream commit 4f510aa10468954b1da4e94689c38ac6ea8d3627 ]
    
    Commit 287422a95fe2 ("drm/rockchip: Round up _before_ giving to the clock framework")
    changed what rate clk_round_rate() is called with, an additional 999 Hz
    added to the requsted mode clock. This has caused a regression on RK3328
    and presumably also on RK3228 because the inno-hdmi-phy clock requires an
    exact match of the requested rate in the pre pll config table.
    
    When an exact match is not found the parent clock rate (24MHz) is returned
    to the clk_round_rate() caller. This cause wrong pixel clock to be used and
    result in no-signal when configuring a mode on RK3328.
    
    Fix this by rounding the rate down to closest 1000 Hz in round_rate func,
    this allows an exact match to be found in pre pll config table.
    
    Fixes: 287422a95fe2 ("drm/rockchip: Round up _before_ giving to the clock framework")
    Signed-off-by: Jonas Karlman <jonas@kwiboo.se>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce28f9842d0e1d36a3c8891c4d46cc4c1d56940f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Dec 10 21:28:31 2019 +0100

    gpio: aspeed: avoid return type warning
    
    [ Upstream commit 11e299de3aced4ea23a9fb1fef6c983c8d516302 ]
    
    gcc has a hard time tracking whether BUG_ON(1) ends
    execution or not:
    
    drivers/gpio/gpio-aspeed-sgpio.c: In function 'bank_reg':
    drivers/gpio/gpio-aspeed-sgpio.c:112:1: error: control reaches end of non-void function [-Werror=return-type]
    
    Use the simpler BUG() that gcc knows cannot continue.
    
    Fixes: f8b410e3695a ("gpio: aspeed-sgpio: Rename and add Kconfig/Makefile")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Andrew Jeffery <andrew@aj.id.au>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60d671da2fa2e9505e560aef0ee510fc45fb4322
Author: Jouni Hogander <jouni.hogander@unikie.com>
Date:   Thu Dec 5 15:57:07 2019 +0200

    net-sysfs: Call dev_hold always in netdev_queue_add_kobject
    
    [ Upstream commit e0b60903b434a7ee21ba8d8659f207ed84101e89 ]
    
    Dev_hold has to be called always in netdev_queue_add_kobject.
    Otherwise usage count drops below 0 in case of failure in
    kobject_init_and_add.
    
    Fixes: b8eb718348b8 ("net-sysfs: Fix reference count leak in rx|netdev_queue_add_kobject")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: David Miller <davem@davemloft.net>
    Cc: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 465b10fee9a8ad820a191b1be0991fdac98b188b
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Thu Dec 5 14:33:04 2019 +0100

    s390/qeth: fix dangling IO buffers after halt/clear
    
    [ Upstream commit f9e50b02a99c3ebbaa30690e8d5be28a5c2624eb ]
    
    The cio layer's intparm logic does not align itself well with how qeth
    manages cmd IOs. When an active IO gets terminated via halt/clear, the
    corresponding IRQ's intparm does not reflect the cmd buffer but rather
    the intparm that was passed to ccw_device_halt() / ccw_device_clear().
    This behaviour was recently clarified in
    commit b91d9e67e50b ("s390/cio: fix intparm documentation").
    
    As a result, qeth_irq() currently doesn't cancel a cmd that was
    terminated via halt/clear. This primarily causes us to leak
    card->read_cmd after the qeth device is removed, since our IO path still
    holds a refcount for this cmd.
    
    For qeth this means that we need to keep track of which IO is pending on
    a device ('active_cmd'), and use this as the intparm when calling
    halt/clear. Otherwise qeth_irq() can't match the subsequent IRQ to its
    cmd buffer.
    Since we now keep track of the _expected_ intparm, we can also detect
    any mismatch; this would constitute a bug somewhere in the lower layers.
    In this case cancel the active cmd - we effectively "lost" the IRQ and
    should not expect any further notification for this IO.
    
    Fixes: 405548959cc7 ("s390/qeth: add support for dynamically allocated cmds")
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ccbc5d03c2bd83a07be78351571483bc22c0c63e
Author: Justin Tee <justin.tee@broadcom.com>
Date:   Thu Dec 5 10:09:01 2019 +0800

    block: fix memleak of bio integrity data
    
    [ Upstream commit ece841abbed2da71fa10710c687c9ce9efb6bf69 ]
    
    7c20f11680a4 ("bio-integrity: stop abusing bi_end_io") moves
    bio_integrity_free from bio_uninit() to bio_integrity_verify_fn()
    and bio_endio(). This way looks wrong because bio may be freed
    without calling bio_endio(), for example, blk_rq_unprep_clone() is
    called from dm_mq_queue_rq() when the underlying queue of dm-mpath
    is busy.
    
    So memory leak of bio integrity data is caused by commit 7c20f11680a4.
    
    Fixes this issue by re-adding bio_integrity_free() to bio_uninit().
    
    Fixes: 7c20f11680a4 ("bio-integrity: stop abusing bi_end_io")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by Justin Tee <justin.tee@broadcom.com>
    
    Add commit log, and simplify/fix the original patch wroten by Justin.
    
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 022321aa796730da85c8b765c63dcaa289b89391
Author: Wen Yang <wenyang@linux.alibaba.com>
Date:   Sat Nov 30 21:08:42 2019 +0800

    platform/chrome: wilco_ec: fix use after free issue
    
    [ Upstream commit 856a0a6e2d09d31fd8f00cc1fc6645196a509d56 ]
    
    This is caused by dereferencing 'dev_data' after put_device() in
    the telem_device_remove() function.
    This patch just moves the put_device() down a bit to avoid this
    issue.
    
    Fixes: 1210d1e6bad1 ("platform/chrome: wilco_ec: Add telemetry char device interface")
    Signed-off-by: Wen Yang <wenyang@linux.alibaba.com>
    Cc: Benson Leung <bleung@chromium.org>
    Cc: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Cc: Nick Crews <ncrews@chromium.org>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 074fd02d45976eed02f82cb2d9e01b0169cc1ec5
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Thu Nov 21 14:36:12 2019 +0100

    xdp: Fix cleanup on map free for devmap_hash map type
    
    [ Upstream commit 071cdecec57fb5d5df78e6a12114ad7bccea5b0e ]
    
    Tetsuo pointed out that it was not only the device unregister hook that was
    broken for devmap_hash types, it was also cleanup on map free. So better
    fix this as well.
    
    While we're at it, there's no reason to allocate the netdev_map array for
    DEVMAP_HASH, so skip that and adjust the cost accordingly.
    
    Fixes: 6f9d451ab1a3 ("xdp: Add devmap_hash map type for looking up devices by hashed index")
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20191121133612.430414-1-toke@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62ac16b0deeffff42501cface181a652a9004f26
Author: Sam Bobroff <sbobroff@linux.ibm.com>
Date:   Mon Nov 18 10:53:53 2019 +1100

    drm/radeon: fix bad DMA from INTERRUPT_CNTL2
    
    [ Upstream commit 62d91dd2851e8ae2ca552f1b090a3575a4edf759 ]
    
    The INTERRUPT_CNTL2 register expects a valid DMA address, but is
    currently set with a GPU MC address.  This can cause problems on
    systems that detect the resulting DMA read from an invalid address
    (found on a Power8 guest).
    
    Instead, use the DMA address of the dummy page because it will always
    be safe.
    
    Fixes: d8f60cfc9345 ("drm/radeon/kms: Add support for interrupts on r6xx/r7xx chips (v3)")
    Fixes: 25a857fbe973 ("drm/radeon/kms: add support for interrupts on SI")
    Fixes: a59781bbe528 ("drm/radeon: add support for interrupts on CIK (v5)")
    Signed-off-by: Sam Bobroff <sbobroff@linux.ibm.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca4c17f2106e2d1296d335d39ecb2e3d8a9ccccf
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Mon Nov 18 15:38:02 2019 +0800

    dmaengine: ti: edma: fix missed failure handling
    
    [ Upstream commit 340049d453682a9fe8d91fe794dd091730f4bb25 ]
    
    When devm_kcalloc fails, it forgets to call edma_free_slot.
    Replace direct return with failure handler to fix it.
    
    Fixes: 1be5336bc7ba ("dmaengine: edma: New device tree binding")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Link: https://lore.kernel.org/r/20191118073802.28424-1-hslester96@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1b9854f3e3f9dffc671952a59d652cf9e31afab
Author: zhengbin <zhengbin13@huawei.com>
Date:   Thu Nov 21 09:12:18 2019 +0000

    afs: Remove set but not used variables 'before', 'after'
    
    [ Upstream commit 51590df4f3306cb1f43dca54e3ccdd121ab89594 ]
    
    Fixes gcc '-Wunused-but-set-variable' warning:
    
    fs/afs/dir_edit.c: In function afs_set_contig_bits:
    fs/afs/dir_edit.c:75:20: warning: variable after set but not used [-Wunused-but-set-variable]
    fs/afs/dir_edit.c: In function afs_set_contig_bits:
    fs/afs/dir_edit.c:75:12: warning: variable before set but not used [-Wunused-but-set-variable]
    fs/afs/dir_edit.c: In function afs_clear_contig_bits:
    fs/afs/dir_edit.c:100:20: warning: variable after set but not used [-Wunused-but-set-variable]
    fs/afs/dir_edit.c: In function afs_clear_contig_bits:
    fs/afs/dir_edit.c:100:12: warning: variable before set but not used [-Wunused-but-set-variable]
    
    They are never used since commit 63a4681ff39c.
    
    Fixes: 63a4681ff39c ("afs: Locally edit directory data for mkdir/create/unlink/...")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: zhengbin <zhengbin13@huawei.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8444fa88da81f66e27b278907ff63be09d75fd1
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Nov 19 17:35:36 2019 +0100

    dma-direct: don't check swiotlb=force in dma_direct_map_resource
    
    [ Upstream commit 4268ac6ae5870af10a7417b22990d615f72f77e2 ]
    
    When mapping resources we can't just use swiotlb ram for bounce
    buffering.  Switch to a direct dma_capable check instead.
    
    Fixes: cfced786969c ("dma-mapping: remove the default map_resource implementation")
    Reported-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0812e7de492804b3d31048cc0b1c941769b79553
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Mon Oct 28 16:21:41 2019 +0100

    mt76: mt76u: rely on usb_interface instead of usb_dev
    
    [ Upstream commit 80df01f4dc79abbed724bbe0851cab3fe8ad9d99 ]
    
    usb drivers are supposed to communicate using usb_interface instead
    mt76x{0,2}u is now registering through usb_device. Fix it by passing
    usb_intf device to mt76_alloc_device routine.
    
    Fixes: 112f980ac8926 ("mt76usb: use usb_dev private data")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Tested-By: Zero_Chaos <sidhayn@gmail.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e9619ff10caa2f74d9d605f2be31d3faa843aea
Author: Vincent Guittot <vincent.guittot@linaro.org>
Date:   Mon Nov 18 14:21:19 2019 +0100

    sched/cpufreq: Move the cfs_rq_util_change() call to cpufreq_update_util()
    
    [ Upstream commit bef69dd87828ef5d8ecdab8d857cd3a33cf98675 ]
    
    update_cfs_rq_load_avg() calls cfs_rq_util_change() every time PELT decays,
    which might be inefficient when the cpufreq driver has rate limitation.
    
    When a task is attached on a CPU, we have this call path:
    
    update_load_avg()
      update_cfs_rq_load_avg()
        cfs_rq_util_change -- > trig frequency update
      attach_entity_load_avg()
        cfs_rq_util_change -- > trig frequency update
    
    The 1st frequency update will not take into account the utilization of the
    newly attached task and the 2nd one might be discarded because of rate
    limitation of the cpufreq driver.
    
    update_cfs_rq_load_avg() is only called by update_blocked_averages()
    and update_load_avg() so we can move the call to
    cfs_rq_util_change/cpufreq_update_util() into these two functions.
    
    It's also interesting to note that update_load_avg() already calls
    cfs_rq_util_change() directly for the !SMP case.
    
    This change will also ensure that cpufreq_update_util() is called even
    when there is no more CFS rq in the leaf_cfs_rq_list to update, but only
    IRQ, RT or DL PELT signals.
    
    [ mingo: Minor updates. ]
    
    Reported-by: Doug Smythies <dsmythies@telus.net>
    Tested-by: Doug Smythies <dsmythies@telus.net>
    Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: juri.lelli@redhat.com
    Cc: linux-pm@vger.kernel.org
    Cc: mgorman@suse.de
    Cc: rostedt@goodmis.org
    Cc: sargun@sargun.me
    Cc: srinivas.pandruvada@linux.intel.com
    Cc: tj@kernel.org
    Cc: xiexiuqi@huawei.com
    Cc: xiezhipeng1@huawei.com
    Fixes: 039ae8bcf7a5 ("sched/fair: Fix O(nr_cgroups) in the load balancing path")
    Link: https://lkml.kernel.org/r/1574083279-799-1-git-send-email-vincent.guittot@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0e2379bfc70ef2d540e6f29f2aafd3c07a8026d
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Nov 15 08:39:07 2019 -0500

    SUNRPC: Fix another issue with MIC buffer space
    
    [ Upstream commit e8d70b321ecc9b23d09b8df63e38a2f73160c209 ]
    
    xdr_shrink_pagelen() BUG's when @len is larger than buf->page_len.
    This can happen when xdr_buf_read_mic() is given an xdr_buf with
    a small page array (like, only a few bytes).
    
    Instead, just cap the number of bytes that xdr_shrink_pagelen()
    will move.
    
    Fixes: 5f1bc39979d ("SUNRPC: Fix buffer handling of GSS MIC ... ")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Reviewed-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16128944c90749d0b88758bcf727c8e8af3b2f4e
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Fri Nov 15 19:01:25 2019 +0100

    workqueue: Add RCU annotation for pwq list walk
    
    [ Upstream commit 49e9d1a9faf2f71fdfd80a30697ee9a15070626d ]
    
    An additional check has been recently added to ensure that a RCU related lock
    is held while the RCU list is iterated.
    The `pwqs' are sometimes iterated without a RCU lock but with the &wq->mutex
    acquired leading to a warning.
    
    Teach list_for_each_entry_rcu() that the RCU usage is okay if &wq->mutex
    is acquired during the list traversal.
    
    Fixes: 28875945ba98d ("rcu: Add support for consolidated-RCU reader checking")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b30a9b012a4e9b400a3e3caa0e4c83d77089ef7b
Author: Jens Wiklander <jens.wiklander@linaro.org>
Date:   Wed Nov 6 16:48:28 2019 +0100

    tee: optee: fix device enumeration error handling
    
    [ Upstream commit 03212e347f9443e524d6383c6806ac08295c1fb0 ]
    
    Prior to this patch in optee_probe() when optee_enumerate_devices() was
    called the struct optee was fully initialized. If
    optee_enumerate_devices() returns an error optee_probe() is supposed to
    clean up and free the struct optee completely, but will at this late
    stage need to call optee_remove() instead. This isn't done and thus
    freeing the struct optee prematurely.
    
    With this patch the call to optee_enumerate_devices() is done after
    optee_probe() has returned successfully and in case
    optee_enumerate_devices() fails everything is cleaned up with a call to
    optee_remove().
    
    Fixes: c3fa24af9244 ("tee: optee: add TEE bus device enumeration support")
    Reviewed-by: Sumit Garg <sumit.garg@linaro.org>
    Signed-off-by: Jens Wiklander <jens.wiklander@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c179c003b45909df8bf55c072df897bcb2ef0e0
Author: Sumit Garg <sumit.garg@linaro.org>
Date:   Fri Nov 8 16:57:14 2019 +0530

    tee: optee: Fix dynamic shm pool allocations
    
    [ Upstream commit a249dd200d03791cab23e47571f3e13d9c72af6c ]
    
    In case of dynamic shared memory pool, kernel memory allocated using
    dmabuf_mgr pool needs to be registered with OP-TEE prior to its usage
    during optee_open_session() or optee_invoke_func().
    
    So fix dmabuf_mgr pool allocations via an additional call to
    optee_shm_register().
    
    Also, allow kernel pages to be registered as shared memory with OP-TEE.
    
    Fixes: 9733b072a12a ("optee: allow to work without static shared memory")
    Signed-off-by: Sumit Garg <sumit.garg@linaro.org>
    Signed-off-by: Jens Wiklander <jens.wiklander@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2eb4d745cf7f4617fdbc33d8278191a36ada0ee4
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Thu Nov 7 11:30:43 2019 +0100

    mmc: core: fix wl1251 sdio quirks
    
    [ Upstream commit 16568b4a4f0c34bd35cfadac63303c7af7812764 ]
    
    wl1251 and wl1271 have different vendor id and device id.
    So we need to handle both with sdio quirks.
    
    Fixes: 884f38607897 ("mmc: core: move some sdio IDs out of quirks file")
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: <stable@vger.kernel.org> # v4.11+
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8afdceb9f2b13f9f732f944db94f9df8a533559
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Thu Nov 7 11:30:42 2019 +0100

    mmc: sdio: fix wl1251 vendor id
    
    [ Upstream commit e5db673e7fe2f971ec82039a28dc0811c2100e87 ]
    
    v4.11-rc1 did introduce a patch series that rearranged the
    sdio quirks into a header file. Unfortunately this did forget
    to handle SDIO_VENDOR_ID_TI differently between wl1251 and
    wl1271 with the result that although the wl1251 was found on
    the sdio bus, the firmware did not load any more and there was
    no interface registration.
    
    This patch defines separate constants to be used by sdio quirks
    and drivers.
    
    Fixes: 884f38607897 ("mmc: core: move some sdio IDs out of quirks file")
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: <stable@vger.kernel.org> # v4.11+
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b8b5f9a7b3b6295325e0252c31c4947f8ed5b5c
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Mon Nov 11 16:25:22 2019 +0000

    firmware: arm_scmi: Fix doorbell ring logic for !CONFIG_64BIT
    
    [ Upstream commit 7bd39bc6bfdf96f5df0f92199bbc1a3ee2f2adb8 ]
    
    The logic to ring the scmi performance fastchannel ignores the
    value read from the doorbell register in case of !CONFIG_64BIT.
    This bug also shows up as warning with '-Wunused-but-set-variable' gcc
    flag:
    
    drivers/firmware/arm_scmi/perf.c: In function scmi_perf_fc_ring_db:
    drivers/firmware/arm_scmi/perf.c:323:7: warning: variable val set but
                            not used [-Wunused-but-set-variable]
    
    Fix the same by aligning the logic with CONFIG_64BIT as used in the
    macro SCMI_PERF_FC_RING_DB().
    
    Fixes: 823839571d76 ("firmware: arm_scmi: Make use SCMI v2.0 fastchannel for performance protocol")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Reported-by: Zheng Yongjun <zhengyongjun3@huawei.com>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 83ff921a5e891a22e8b4ac1d0dfbb478de3691e8
Author: Hewenliang <hewenliang4@huawei.com>
Date:   Mon Nov 11 21:16:55 2019 -0500

    kselftests: cgroup: Avoid the reuse of fd after it is deallocated
    
    [ Upstream commit d671fa6393d6788fc65555d4643b71cb3a361f36 ]
    
    It is necessary to set fd to -1 when inotify_add_watch() fails in
    cg_prepare_for_wait. Otherwise the fd which has been closed in
    cg_prepare_for_wait may be misused in other functions such as
    cg_enter_and_wait_for_frozen and cg_freeze_wait.
    
    Fixes: 5313bfe425c8 ("selftests: cgroup: add freezer controller self-tests")
    Signed-off-by: Hewenliang <hewenliang4@huawei.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c570172d62413eddc9ac330449e84446ade384ad
Author: Alain Volmat <alain.volmat@st.com>
Date:   Thu Oct 24 14:52:00 2019 +0200

    i2c: stm32f7: report dma error during probe
    
    [ Upstream commit d77eceb2de99f5d7e0c645bad15511fe1af59e09 ]
    
    Distinguish between the case where dma information is not provided
    within the DT and the case of an error during the dma init.
    Exit the probe with error in case of an error during dma init.
    
    Fixes: bb8822cbbc53 ("i2c: i2c-stm32: Add generic DMA API")
    Signed-off-by: Alain Volmat <alain.volmat@st.com>
    Reviewed-by: Pierre-Yves MORDRET <pierre-yves.mordret@st.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6d362634e1645e74a8472511f29a63a7c41cb13
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Nov 8 05:07:46 2019 -0800

    packet: fix data-race in fanout_flow_is_huge()
    
    [ Upstream commit b756ad928d98e5ef0b74af7546a6a31a8dadde00 ]
    
    KCSAN reported the following data-race [1]
    
    Adding a couple of READ_ONCE()/WRITE_ONCE() should silence it.
    
    Since the report hinted about multiple cpus using the history
    concurrently, I added a test avoiding writing on it if the
    victim slot already contains the desired value.
    
    [1]
    
    BUG: KCSAN: data-race in fanout_demux_rollover / fanout_demux_rollover
    
    read to 0xffff8880b01786cc of 4 bytes by task 18921 on cpu 1:
     fanout_flow_is_huge net/packet/af_packet.c:1303 [inline]
     fanout_demux_rollover+0x33e/0x3f0 net/packet/af_packet.c:1353
     packet_rcv_fanout+0x34e/0x490 net/packet/af_packet.c:1453
     deliver_skb net/core/dev.c:1888 [inline]
     dev_queue_xmit_nit+0x15b/0x540 net/core/dev.c:1958
     xmit_one net/core/dev.c:3195 [inline]
     dev_hard_start_xmit+0x3f5/0x430 net/core/dev.c:3215
     __dev_queue_xmit+0x14ab/0x1b40 net/core/dev.c:3792
     dev_queue_xmit+0x21/0x30 net/core/dev.c:3825
     neigh_direct_output+0x1f/0x30 net/core/neighbour.c:1530
     neigh_output include/net/neighbour.h:511 [inline]
     ip6_finish_output2+0x7a2/0xec0 net/ipv6/ip6_output.c:116
     __ip6_finish_output net/ipv6/ip6_output.c:142 [inline]
     __ip6_finish_output+0x2d7/0x330 net/ipv6/ip6_output.c:127
     ip6_finish_output+0x41/0x160 net/ipv6/ip6_output.c:152
     NF_HOOK_COND include/linux/netfilter.h:294 [inline]
     ip6_output+0xf2/0x280 net/ipv6/ip6_output.c:175
     dst_output include/net/dst.h:436 [inline]
     ip6_local_out+0x74/0x90 net/ipv6/output_core.c:179
     ip6_send_skb+0x53/0x110 net/ipv6/ip6_output.c:1795
     udp_v6_send_skb.isra.0+0x3ec/0xa70 net/ipv6/udp.c:1173
     udpv6_sendmsg+0x1906/0x1c20 net/ipv6/udp.c:1471
     inet6_sendmsg+0x6d/0x90 net/ipv6/af_inet6.c:576
     sock_sendmsg_nosec net/socket.c:637 [inline]
     sock_sendmsg+0x9f/0xc0 net/socket.c:657
     ___sys_sendmsg+0x2b7/0x5d0 net/socket.c:2311
     __sys_sendmmsg+0x123/0x350 net/socket.c:2413
     __do_sys_sendmmsg net/socket.c:2442 [inline]
     __se_sys_sendmmsg net/socket.c:2439 [inline]
     __x64_sys_sendmmsg+0x64/0x80 net/socket.c:2439
     do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    write to 0xffff8880b01786cc of 4 bytes by task 18922 on cpu 0:
     fanout_flow_is_huge net/packet/af_packet.c:1306 [inline]
     fanout_demux_rollover+0x3a4/0x3f0 net/packet/af_packet.c:1353
     packet_rcv_fanout+0x34e/0x490 net/packet/af_packet.c:1453
     deliver_skb net/core/dev.c:1888 [inline]
     dev_queue_xmit_nit+0x15b/0x540 net/core/dev.c:1958
     xmit_one net/core/dev.c:3195 [inline]
     dev_hard_start_xmit+0x3f5/0x430 net/core/dev.c:3215
     __dev_queue_xmit+0x14ab/0x1b40 net/core/dev.c:3792
     dev_queue_xmit+0x21/0x30 net/core/dev.c:3825
     neigh_direct_output+0x1f/0x30 net/core/neighbour.c:1530
     neigh_output include/net/neighbour.h:511 [inline]
     ip6_finish_output2+0x7a2/0xec0 net/ipv6/ip6_output.c:116
     __ip6_finish_output net/ipv6/ip6_output.c:142 [inline]
     __ip6_finish_output+0x2d7/0x330 net/ipv6/ip6_output.c:127
     ip6_finish_output+0x41/0x160 net/ipv6/ip6_output.c:152
     NF_HOOK_COND include/linux/netfilter.h:294 [inline]
     ip6_output+0xf2/0x280 net/ipv6/ip6_output.c:175
     dst_output include/net/dst.h:436 [inline]
     ip6_local_out+0x74/0x90 net/ipv6/output_core.c:179
     ip6_send_skb+0x53/0x110 net/ipv6/ip6_output.c:1795
     udp_v6_send_skb.isra.0+0x3ec/0xa70 net/ipv6/udp.c:1173
     udpv6_sendmsg+0x1906/0x1c20 net/ipv6/udp.c:1471
     inet6_sendmsg+0x6d/0x90 net/ipv6/af_inet6.c:576
     sock_sendmsg_nosec net/socket.c:637 [inline]
     sock_sendmsg+0x9f/0xc0 net/socket.c:657
     ___sys_sendmsg+0x2b7/0x5d0 net/socket.c:2311
     __sys_sendmmsg+0x123/0x350 net/socket.c:2413
     __do_sys_sendmmsg net/socket.c:2442 [inline]
     __se_sys_sendmmsg net/socket.c:2439 [inline]
     __x64_sys_sendmmsg+0x64/0x80 net/socket.c:2439
     do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 0 PID: 18922 Comm: syz-executor.3 Not tainted 5.4.0-rc6+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 3b3a5b0aab5b ("packet: rollover huge flows before small flows")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3cf5124e28d50c4ae3e0c86434eed720921f0ef
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Nov 6 08:34:18 2019 +0000

    rtc: bd70528: fix module alias to autoload module
    
    [ Upstream commit afe19a7ae8b6b6032d04d3895ebd5bbac7fe9f30 ]
    
    The module alias platform tag contains a spelling mistake. Fix it.
    
    Fixes: f33506abbcdd ("rtc: bd70528: Add MODULE ALIAS to autoload module")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20191106083418.159045-1-colin.king@canonical.com
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7bd74545fae9721b72749b4ff0bda54a3d2736c8
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Oct 30 12:46:08 2019 -0700

    selftests: gen_kselftest_tar.sh: Do not clobber kselftest/
    
    [ Upstream commit ea1bf0bb18c0bd627d7b551196453ff2fff44225 ]
    
    The default installation location for gen_kselftest_tar.sh was still
    "kselftest/" which collides with the existing directory. Instead, this
    moves the installation target into "kselftest_install/kselftest/" and
    adjusts the tar creation accordingly. This also adjusts indentation and
    logic to be consistent.
    
    Fixes: 42d46e57ec97 ("selftests: Extract single-test shell logic from lib.mk")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9870cdb685cd0750fb4f05cbfc81075be88919e
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Wed Nov 6 15:54:49 2019 +0000

    net: axienet: Fix error return code in axienet_probe()
    
    [ Upstream commit eb34e98baf4ce269423948dacefea6747e963b48 ]
    
    In the DMA memory resource get failed case, the error is not
    set and 0 will be returned. Fix it by removing redundant check
    since devm_ioremap_resource() will handle it.
    
    Fixes: 28ef9ebdb64c ("net: axienet: make use of axistream-connected attribute optional")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Reviewed-by: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9a6f09fc29ca36ae5a6df7644cce51fccf705e7
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Nov 5 14:11:49 2019 -0800

    net: neigh: use long type to store jiffies delta
    
    [ Upstream commit 9d027e3a83f39b819e908e4e09084277a2e45e95 ]
    
    A difference of two unsigned long needs long storage.
    
    Fixes: c7fb64db001f ("[NETLINK]: Neighbour table configuration and statistics via rtnetlink")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab269ffa5aa153965868bd34f747819a4b88bdc5
Author: Daniel Golle <daniel@makrotopia.org>
Date:   Sat Nov 2 18:47:01 2019 +0100

    rt2800: remove errornous duplicate condition
    
    [ Upstream commit a1f7c2cabf701a17b1a05d6526bbdadc3d05e05c ]
    
    On 2019-10-28 06:07, wbob wrote:
    > Hello Roman,
    >
    > while reading around drivers/net/wireless/ralink/rt2x00/rt2800lib.c
    > I stumbled on what I think is an edit of yours made in error in march
    > 2017:
    >
    > https://github.com/torvalds/linux/commit/41977e86#diff-dae5dc10da180f3b055809a48118e18aR5281
    >
    > RT6352 in line 5281 should not have been introduced as the "else if"
    > below line 5291 can then not take effect for a RT6352 device. Another
    > possibility is for line 5291 to be not for RT6352, but this seems
    > very unlikely. Are you able to clarify still after this substantial time?
    >
    > 5277: static int rt2800_init_registers(struct rt2x00_dev *rt2x00dev)
    > ...
    > 5279:  } else if (rt2x00_rt(rt2x00dev, RT5390) ||
    > 5280:         rt2x00_rt(rt2x00dev, RT5392) ||
    > 5281:         rt2x00_rt(rt2x00dev, RT6352)) {
    > ...
    > 5291:  } else if (rt2x00_rt(rt2x00dev, RT6352)) {
    > ...
    
    Hence remove errornous line 5281 to make the driver actually
    execute the correct initialization routine for MT7620 chips.
    
    As it was requested by Stanislaw Gruszka remove setting values of
    MIMO_PS_CFG and TX_PIN_CFG. MIMO_PS_CFG is responsible for MIMO
    power-safe mode (which is disabled), hence we can drop setting it.
    TX_PIN_CFG is set correctly in other functions, and as setting this
    value breaks some devices, rather don't set it here during init, but
    only modify it later on.
    
    Fixes: 41977e86c984 ("rt2x00: add support for MT7620")
    Reported-by: wbob <wbob@jify.de>
    Reported-by: Roman Yeryomin <roman@advem.lv>
    Signed-off-by: Daniel Golle <daniel@makrotopia.org>
    Acked-by: Stanislaw Gruszka <sgruszka@redhat.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca52b5cd5d18c18a24327f192d145df70fad3186
Author: Stephen Hemminger <sthemmin@microsoft.com>
Date:   Fri Nov 1 16:42:37 2019 -0700

    hv_netvsc: flag software created hash value
    
    [ Upstream commit df9f540ca74297a84bafacfa197e9347b20beea5 ]
    
    When the driver needs to create a hash value because it
    was not done at higher level, then the hash should be marked
    as a software not hardware hash.
    
    Fixes: f72860afa2e3 ("hv_netvsc: Exclude non-TCP port numbers from vRSS hashing")
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79310c41b0c789a98ab662c02263cc4038ffd023
Author: Tonghao Zhang <xiangxia.m.yue@gmail.com>
Date:   Fri Nov 1 22:23:53 2019 +0800

    net: openvswitch: don't unlock mutex when changing the user_features fails
    
    [ Upstream commit 4c76bf696a608ea5cc555fe97ec59a9033236604 ]
    
    Unlocking of a not locked mutex is not allowed.
    Other kernel thread may be in critical section while
    we unlock it because of setting user_feature fail.
    
    Fixes: 95a7233c4 ("net: openvswitch: Set OvS recirc_id from tc chain index")
    Cc: Paul Blakey <paulb@mellanox.com>
    Signed-off-by: Tonghao Zhang <xiangxia.m.yue@gmail.com>
    Tested-by: Greg Rose <gvrose8192@gmail.com>
    Acked-by: William Tu <u9012063@gmail.com>
    Acked-by: Pravin B Shelar <pshelar@ovn.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c3327816d3491675b6368575bef73d547a6d59f
Author: Bean Huo <beanhuo@micron.com>
Date:   Tue Oct 29 14:22:45 2019 +0000

    scsi: ufs: delete redundant function ufshcd_def_desc_sizes()
    
    [ Upstream commit 059efd847a4097c67817782d8ff65397e369e69b ]
    
    There is no need to call ufshcd_def_desc_sizes() in ufshcd_init(), since
    descriptor lengths will be checked and initialized later in
    ufshcd_init_desc_sizes().
    
    Fixes: a4b0e8a4e92b1b(scsi: ufs: Factor out ufshcd_read_desc_param)
    Link: https://lore.kernel.org/r/BN7PR08MB5684A3ACE214C3D4792CE729DB610@BN7PR08MB5684.namprd08.prod.outlook.com
    Signed-off-by: Bean Huo <beanhuo@micron.com>
    Acked-by: Avri Altman <avri.altman.wdc.com>
    Reviewed-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71394774331d8e0cfa6205bbbf5413a883d8d70d
Author: Madalin Bucur <madalin.bucur@nxp.com>
Date:   Thu Oct 31 16:37:50 2019 +0200

    dpaa_eth: avoid timestamp read on error paths
    
    [ Upstream commit 9a4f4f3a894ff4487f5597b7aabba9432b238292 ]
    
    The dpaa_cleanup_tx_fd() function is called by the frame transmit
    confirmation callback but also on several error paths. This function
    is reading the transmit timestamp value. Avoid reading an invalid
    timestamp value on the error paths.
    
    Fixes: 4664856e9ca2 ("dpaa_eth: add support for hardware timestamping")
    Signed-off-by: Madalin Bucur <madalin.bucur@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54c45b818ad1f91aad149e0e5c0fdfadcab17f19
Author: Madalin Bucur <madalin.bucur@nxp.com>
Date:   Thu Oct 31 16:37:49 2019 +0200

    dpaa_eth: perform DMA unmapping before read
    
    [ Upstream commit c70fd3182caef014e6c628b412f81aa57a3ef9e4 ]
    
    DMA unmapping is required before accessing the HW provided timestamping
    information.
    
    Fixes: 4664856e9ca2 ("dpaa_eth: add support for hardware timestamping")
    Signed-off-by: Madalin Bucur <madalin.bucur@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4e32af72d0cd26d1ca291a85b6e5e6e7b0dd576
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Sep 23 17:26:34 2019 +0300

    rcu: Fix uninitialized variable in nocb_gp_wait()
    
    [ Upstream commit b8889c9c89a2655a231dfed93cc9bdca0930ea67 ]
    
    We never set this to false.  This probably doesn't affect most people's
    runtime because GCC will automatically initialize it to false at certain
    common optimization levels.  But that behavior is related to a bug in
    GCC and obviously should not be relied on.
    
    Fixes: 5d6742b37727 ("rcu/nocb: Use rcu_segcblist for no-CBs CPUs")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 220ba320861c7368159b5c80b7dc7418e4ea5d8b
Author: Andrii Nakryiko <andriin@fb.com>
Date:   Mon Oct 28 22:59:53 2019 -0700

    libbpf: Don't use kernel-side u32 type in xsk.c
    
    [ Upstream commit a566e35f1e8b4b3be1e96a804d1cca38b578167c ]
    
    u32 is a kernel-side typedef. User-space library is supposed to use __u32.
    This breaks Github's projection of libbpf. Do u32 -> __u32 fix.
    
    Fixes: 94ff9ebb49a5 ("libbpf: Fix compatibility for kernels without need_wakeup")
    Signed-off-by: Andrii Nakryiko <andriin@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Björn Töpel <bjorn.topel@intel.com>
    Cc: Magnus Karlsson <magnus.karlsson@intel.com>
    Link: https://lore.kernel.org/bpf/20191029055953.2461336-1-andriin@fb.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd9d813ca8fe455e58c22512f225e14dc9ac209a
Author: Daniel Baluta <daniel.baluta@nxp.com>
Date:   Mon Oct 14 18:32:28 2019 +0300

    firmware: imx: Remove call to devm_of_platform_populate
    
    [ Upstream commit 0e4e8cc30a2940c57448af1376e40d3c0996fb29 ]
    
    IMX DSP device is created by SOF layer. The current call to
    devm_of_platform_populate is not needed and it doesn't produce
    any effects.
    
    Fixes: ffbf23d50353915d ("firmware: imx: Add DSP IPC protocol interface)
    Signed-off-by: Daniel Baluta <daniel.baluta@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16232b03957ccd3d2e121c89393fdad2dc375929
Author: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
Date:   Wed Oct 23 15:35:24 2019 +0300

    power: supply: bd70528: Add MODULE_ALIAS to allow module auto loading
    
    [ Upstream commit 9480029fe5c24d482efad38dc631bd555fc7afe2 ]
    
    The bd70528 charger driver is probed by MFD driver. Add MODULE_ALIAS
    in order to allow udev to load the module when MFD sub-device cell for
    charger is added.
    
    Fixes: f8c7f7ddd8ef0 ("power: supply: Initial support for ROHM BD70528 PMIC charger block")
    Signed-off-by: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdfb7621c4c79ec0bd86494823ae36a651a9d693
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Oct 17 12:12:16 2019 +0300

    drm/amdgpu/vi: silence an uninitialized variable warning
    
    [ Upstream commit 4ff17a1df7d550257972a838220a8af4611c8f2c ]
    
    Smatch complains that we need to initialized "*cap" otherwise it can
    lead to an uninitialized variable bug in the caller.  This seems like a
    reasonable warning and it doesn't hurt to silence it at least.
    
    drivers/gpu/drm/amd/amdgpu/vi.c:767 vi_asic_reset_method() error: uninitialized symbol 'baco_reset'.
    
    Fixes: 425db2553e43 ("drm/amdgpu: expose BACO interfaces to upper level from PP")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6cb98e60d0649e0d7c59da550c9860e03483656
Author: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
Date:   Wed Oct 23 15:14:52 2019 +0300

    regulator: bd70528: Add MODULE_ALIAS to allow module auto loading
    
    [ Upstream commit 55d5f62c3fa005a6a8010363d7d1855909ceefbc ]
    
    The bd70528 regulator driver is probed by MFD driver. Add MODULE_ALIAS
    in order to allow udev to load the module when MFD sub-device cell for
    regulators is added.
    
    Fixes: 99ea37bd1e7d7 ("regulator: bd70528: Support ROHM BD70528 regulator block")
    Signed-off-by: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
    Link: https://lore.kernel.org/r/20191023121452.GA1812@localhost.localdomain
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e70290bb1f8fa625b0e9a98fd78efd3ec51fabcb
Author: Ondrej Jirman <megous@megous.com>
Date:   Mon Oct 14 15:53:03 2019 +0200

    pwm: sun4i: Fix incorrect calculation of duty_cycle/period
    
    [ Upstream commit 50cc7e3e4f26e3bf5ed74a8d061195c4d2161b8b ]
    
    Since 5.4-rc1, pwm_apply_state calls ->get_state after ->apply
    if available, and this revealed an issue with integer precision
    when calculating duty_cycle and period for the currently set
    state in ->get_state callback.
    
    This issue manifested in broken backlight on several Allwinner
    based devices.
    
    Previously this worked, because ->apply updated the passed state
    directly.
    
    Fixes: deb9c462f4e53 ("pwm: sun4i: Don't update the state for the caller of pwm_apply_state")
    Signed-off-by: Ondrej Jirman <megous@megous.com>
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aff509a3a127f0f059f2da9ddcbf477a74585664
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Aug 30 17:34:32 2019 +0300

    ACPI: platform: Unregister stale platform devices
    
    [ Upstream commit cb0701acfa7e3fe9e919cf2aa2aa939b7fd603c2 ]
    
    When commit 68bdb6773289 ("ACPI: add support for ACPI reconfiguration
    notifiers") introduced reconfiguration notifiers, it missed the point
    that the ACPI table, which might be loaded and then unloaded via
    ConfigFS, could contain devices that were not enumerated by their
    parents.
    
    In such cases, the stale platform device is dangling in the system
    while the rest of the devices from the same table are already gone.
    
    Introduce acpi_platform_device_remove_notify() notifier that, in
    similar way to I²C or SPI buses, unregisters the platform devices
    on table removal event.
    
    Fixes: 68bdb6773289 ("ACPI: add support for ACPI reconfiguration notifiers")
    Depends-on: 00500147cbd3 ("drivers: Introduce device lookup variants by ACPI_COMPANION device")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    [ rjw: Changelog & function rename ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c99f4a8c666dbfd69b05c2321b43de46b0e8dfe7
Author: Ilias Apalodimas <ilias.apalodimas@linaro.org>
Date:   Wed Oct 16 14:40:32 2019 +0300

    net: netsec: Correct dma sync for XDP_TX frames
    
    [ Upstream commit d9496f3ecfe4823c1e12aecbcc29220147fa012c ]
    
    bpf_xdp_adjust_head() can change the frame boundaries. Account for the
    potential shift properly by calculating the new offset before
    syncing the buffer to the device for XDP_TX
    
    Fixes: ba2b232108d3 ("net: netsec: add XDP support")
    Signed-off-by: Ilias Apalodimas <ilias.apalodimas@linaro.org>
    Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 238ca6417eec3b82a812964d5f98561b22614c7d
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Tue Sep 17 08:23:53 2019 +0200

    drm: rcar_lvds: Fix color mismatches on R-Car H2 ES2.0 and later
    
    [ Upstream commit 3986457110a054466bf02f9c4a85aa2bba96177b ]
    
    Commit 5cca30ebe089be23 ("drm/rcar-du: Add LVDS_LANES quirk") states
    that LVDS lanes 1 and 3 are inverted on R-Car H2 ES1 only, and that the
    problem has been fixed in newer revisions.
    
    However, the code didn't take into account the actual hardware revision,
    thus applying the quirk also on newer hardware revisions, causing green
    color reversals.
    
    Fix this by applying the quirk when running on R-Car H2 ES1.x only.
    
    Reported-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Fixes: 5cca30ebe089be23 ("drm/rcar-du: Add LVDS_LANES quirk")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Tested-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Reviewed-by: Ulrich Hecht <uli+renesas@fpond.eu>
    Reviewed-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1865d6440fb63ad979d7034b2d7c94937bfd2200
Author: Kefeng Wang <wangkefeng.wang@huawei.com>
Date:   Fri Oct 4 12:19:25 2019 +0800

    PCI: mobiveil: Fix csr_read()/write() build issue
    
    [ Upstream commit 4906c05b87d44c19b225935e24d62e4480ca556d ]
    
    RISCV has csr_read()/write() macros in arch/riscv/include/asm/csr.h.
    
    The same function naming is used in the PCI mobiveil driver thus
    causing build error.
    
    Rename csr_[read,write][l,] to mobiveil_csr_read()/write() to fix it.
    
    drivers/pci/controller/pcie-mobiveil.c:238:69: error: macro "csr_read" passed 3 arguments, but takes just 1
     static u32 csr_read(struct mobiveil_pcie *pcie, u32 off, size_t size)
    
    drivers/pci/controller/pcie-mobiveil.c:253:80: error: macro "csr_write" passed 4 arguments, but takes just 2
     static void csr_write(struct mobiveil_pcie *pcie, u32 val, u32 off, size_t size)
    
    Fixes: bcbe0d9a8d93 ("PCI: mobiveil: Unify register accessors")
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Andrew Murray <andrew.murray@arm.com>
    Cc: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
    Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: Minghuan Lian <Minghuan.Lian@nxp.com>
    Cc: Subrahmanya Lingappa <l.subrahmanya@mobiveil.co.in>
    Cc: Andrew Murray <andrew.murray@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3da105401e6f7e7ba77fe412da4bdb5214274611
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Thu Oct 3 15:32:08 2019 +0300

    software node: Get reference to parent swnode in get_parent op
    
    [ Upstream commit 51c100a651a471fcb8ead1ecc1224471eb0d61b9 ]
    
    The software_node_get_parent() returned a pointer to the parent swnode,
    but did not take a reference to it, leading the caller to put a reference
    that was not taken. Take that reference now.
    
    Fixes: 59abd83672f7 ("drivers: base: Introducing software nodes to the firmware node framework")
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a77d9e20752b67cb3602cc5e4d9997f53e7d463
Author: Douglas Anderson <dianders@chromium.org>
Date:   Thu Oct 3 11:47:30 2019 -0700

    drm/rockchip: Round up _before_ giving to the clock framework
    
    [ Upstream commit 287422a95fe28e05c1952de0472e0dfdffa6caae ]
    
    I'm embarassed to say that even though I've touched
    vop_crtc_mode_fixup() twice and I swear I tested it, there's still a
    stupid glaring bug in it.  Specifically, on veyron_minnie (with all
    the latest display timings) we want to be setting our pixel clock to
    66,666,666.67 Hz and we tell userspace that's what we set, but we're
    actually choosing 66,000,000 Hz.  This is confirmed by looking at the
    clock tree.
    
    The problem is that in drm_display_mode_from_videomode() we convert
    from Hz to kHz with:
    
      dmode->clock = vm->pixelclock / 1000;
    
    ...and drm_display_mode_from_videomode() is called from panel-simple
    when we have an "override_mode" like we do on veyron_minnie.  See
    commit 123643e5c40a ("ARM: dts: rockchip: Specify
    rk3288-veyron-minnie's display timings").
    
    ...so when the device tree specifies a clock of 66666667 for the panel
    then DRM translates that to 66666000.  The clock framework will always
    pick a clock that is _lower_ than the one requested, so it will refuse
    to pick 66666667 and we'll end up at 66000000.
    
    While we could try to fix drm_display_mode_from_videomode() to round
    to the nearest kHz and it would fix our problem, it wouldn't help if
    the clock we actually needed was 60,000,001 Hz.  We could
    alternatively have DRM always round up, but maybe this would break
    someone else who already baked in the assumption that DRM rounds down.
    Specifically note that clock drivers are not consistent about whether
    they round up or round down when you call clk_set_rate().  We know how
    Rockchip's clock driver works, but (for instance) you can see that on
    most Qualcomm clocks the default is clk_rcg2_ops which rounds up.
    
    Let's solve this by just adding 999 Hz before calling
    clk_round_rate().  This should be safe and work everywhere.  As
    discussed in more detail in comments in the commit, Rockchip's PLLs
    are configured in a way that there shouldn't be another PLL setting
    that is only a few kHz off so we won't get mixed up.
    
    NOTE: if this is picked to stable, it's probably easiest to first pick
    commit 527e4ca3b6d1 ("drm/rockchip: Base adjustments of the mode based
    on prev adjustments") which shouldn't hurt in stable.
    
    Fixes: b59b8de31497 ("drm/rockchip: return a true clock rate to adjusted_mode")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191003114726.v2.1.Ib233b3e706cf6317858384264d5b0ed35657456e@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66f0a21ad07dfa47bb58742168cc3248699715b6
Author: Ioana Radulescu <ruxandra.radulescu@nxp.com>
Date:   Mon Oct 7 14:38:27 2019 +0300

    dpaa2-eth: Fix minor bug in ethtool stats reporting
    
    [ Upstream commit 4b177f065e7ec37399b18e18412a8c7b75f8f299 ]
    
    Don't print error message for a successful return value.
    
    Fixes: d84c3a4ded96 ("dpaa2-eth: Add new DPNI statistics counters")
    
    Signed-off-by: Ioana Radulescu <ruxandra.radulescu@nxp.com>
    Signed-off-by: Ioana Ciornei <ioana.ciornei@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9af27538c55d7f838e1a0e465e40deaa033bf396
Author: Tony Lindgren <tony@atomide.com>
Date:   Sat Sep 14 14:02:55 2019 -0700

    hwrng: omap3-rom - Fix missing clock by probing with device tree
    
    [ Upstream commit 0c0ef9ea6f3f0d5979dc7b094b0a184c1a94716b ]
    
    Commit 0ed266d7ae5e ("clk: ti: omap3: cleanup unnecessary clock aliases")
    removed old omap3 clock framework aliases but caused omap3-rom-rng to
    stop working with clock not found error.
    
    Based on discussions on the mailing list it was requested by Tero Kristo
    that it would be best to fix this issue by probing omap3-rom-rng using
    device tree to provide a proper clk property. The other option would be
    to add back the missing clock alias, but that does not help moving things
    forward with removing old legacy platform_data.
    
    Let's also add a proper device tree binding and keep it together with
    the fix.
    
    Cc: devicetree@vger.kernel.org
    Cc: Aaro Koskinen <aaro.koskinen@iki.fi>
    Cc: Adam Ford <aford173@gmail.com>
    Cc: Pali Rohár <pali.rohar@gmail.com>
    Cc: Rob Herring <robh+dt@kernel.org>
    Cc: Sebastian Reichel <sre@kernel.org>
    Cc: Tero Kristo <t-kristo@ti.com>
    Fixes: 0ed266d7ae5e ("clk: ti: omap3: cleanup unnecessary clock aliases")
    Reported-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6bdbfb6e7e8da254dbdfbb262d925a1da0cfb4d2
Author: yu kuai <yukuai3@huawei.com>
Date:   Thu Sep 19 22:09:09 2019 +0800

    drm/amdgpu: remove excess function parameter description
    
    [ Upstream commit d0580c09c65cff211f589a40e08eabc62da463fb ]
    
    Fixes gcc warning:
    
    drivers/gpu/drm/amd/amdgpu/vcn_v2_5.c:431: warning: Excess function
    parameter 'sw' description in 'vcn_v2_5_disable_clock_gating'
    drivers/gpu/drm/amd/amdgpu/vcn_v2_5.c:550: warning: Excess function
    parameter 'sw' description in 'vcn_v2_5_enable_clock_gating'
    
    Fixes: cbead2bdfcf1 ("drm/amdgpu: add VCN2.5 VCPU start and stop")
    Signed-off-by: yu kuai <yukuai3@huawei.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d500cbaf0cc7f8e541e4b499941504dd1346541a
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 11 13:49:28 2019 +0300

    drm: panel-lvds: Potential Oops in probe error handling
    
    [ Upstream commit fb2ee9bf084bcaeff1e5be100decc0eacb4af2d5 ]
    
    The "lvds->backlight" pointer could be NULL in situations where
    of_parse_phandle() returns NULL.  This code is cleaner if we use the
    managed devm_of_find_backlight() so the clean up is automatic.
    
    Fixes: 7c9dff5bd643 ("drm: panels: Add LVDS panel driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190911104928.GA15930@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9bd9e94fb95bbbf63d1d80adabfb13b297d1cdc7
Author: Steven Price <steven.price@arm.com>
Date:   Thu Aug 22 10:32:18 2019 +0100

    drm/panfrost: Add missing check for pfdev->regulator
    
    [ Upstream commit 52282163dfa651849e905886845bcf6850dd83c2 ]
    
    When modifying panfrost_devfreq_target() to support a device without a
    regulator defined I missed the check on the error path. Let's add it.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Fixes: e21dd290881b ("drm/panfrost: Enable devfreq to work without regulator")
    Signed-off-by: Steven Price <steven.price@arm.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190822093218.26014-1-steven.price@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f88ed5cf0d995b3a095839141dbd4eee49f0b913
Author: Ping-Ke Shih <pkshih@realtek.com>
Date:   Wed Oct 2 14:35:31 2019 +0800

    rtw88: fix error handling when setup efuse info
    
    commit f4268729eb1eefe23f6746849c1b5626d9030532 upstream.
    
    Disable efuse if the efuse is enabled when we failed to setup the efuse
    information, otherwise the hardware will not turn off.
    
    Fixes: e3037485c68e ("rtw88: new Realtek 802.11ac driver")
    Signed-off-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Yan-Hsuan Chuang <yhchuang@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b6d5f5338e82e21cf78e72828b79c861db0efab
Author: Yan-Hsuan Chuang <yhchuang@realtek.com>
Date:   Wed Oct 2 14:35:25 2019 +0800

    rtw88: fix beaconing mode rsvd_page memory violation issue
    
    commit c3594559f49c601d410dee4b767c3536a5535bfd upstream.
    
    When downloading the reserved page, the first page always contains
    a beacon for the firmware to reference. For non-beaconing modes such
    as station mode, also put a blank skb with length=1.
    
    And for the beaconing modes, driver will get a real beacon with a
    length approximate to the page size. But as the beacon is always put
    at the first page, it does not need a tx_desc, because the TX path
    will generate one when TXing the reserved page to the hardware. So we
    could allocate a buffer with a size smaller than the reserved page,
    when using memcpy() to copy the content of reserved page to the buffer,
    the over-sized reserved page will violate the kernel memory.
    
    To fix it, add the tx_desc before memcpy() the reserved packets to
    the buffer, then we can get SKBs with correct length when counting
    the pages in total. And for page 0, count the extra tx_desc_sz that
    the TX path will generate. This way, the first beacon that allocated
    without tx_desc can be counted with the extra tx_desc_sz to get
    actual pages it requires.
    
    Fixes: e3037485c68e ("rtw88: new Realtek 802.11ac driver")
    Signed-off-by: Yan-Hsuan Chuang <yhchuang@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddb46d9a909488c702046575df673aa3c5efe305
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Nov 5 20:06:54 2019 +0200

    gpiolib: No need to call gpiochip_remove_pin_ranges() twice
    
    commit 2f4133bb5f14f49a99acf0cc55b84996dbfb4dff upstream.
    
    of_gpiochip_add(), when fails, calls gpiochip_remove_pin_ranges().
    
    ADD:
      gpiochip_add_data_with_key() ->
        of_gpiochip_add() -> (ERROR path)
          gpiochip_remove_pin_ranges()
    
    At the same time of_gpiochip_remove() calls exactly the above mentioned
    function unconditionally and so does gpiochip_remove().
    
    REMOVE:
      gpiochip_remove() ->
        gpiochip_remove_pin_ranges()
        of_gpiochip_remove() ->
          gpiochip_remove_pin_ranges()
    
    Since gpiochip_remove() calls gpiochip_remove_pin_ranges() unconditionally,
    we have duplicate call to the same function when it's not necessary.
    
    Move gpiochip_remove_pin_ranges() from of_gpiochip_add() to gpiochip_add()
    to avoid duplicate calls and be consistent with the explicit call in
    gpiochip_remove().
    
    Fixes: e93fa3f24353 ("gpiolib: remove duplicate pin range code")
    Depends-on: f7299d441a4d ("gpio: of: Fix of_gpiochip_add() error path")
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37bb3c4646818d15089fe2c48424d52700743a93
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Nov 8 14:16:00 2019 +0100

    sched/core: Further clarify sched_class::set_next_task()
    
    commit a0e813f26ebcb25c0b5e504498fbd796cca1a4ba upstream.
    
    It turns out there really is something special to the first
    set_next_task() invocation. In specific the 'change' pattern really
    should not cause balance callbacks.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: bsegall@google.com
    Cc: dietmar.eggemann@arm.com
    Cc: juri.lelli@redhat.com
    Cc: ktkhai@virtuozzo.com
    Cc: mgorman@suse.de
    Cc: qais.yousef@arm.com
    Cc: qperret@google.com
    Cc: rostedt@goodmis.org
    Cc: valentin.schneider@arm.com
    Cc: vincent.guittot@linaro.org
    Fixes: f95d4eaee6d0 ("sched/{rt,deadline}: Fix set_next_task vs pick_next_task")
    Link: https://lkml.kernel.org/r/20191108131909.775434698@infradead.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57d748f43f0742f58b5cf01b2d7b9a0d2e113e3d
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Mon Oct 21 15:06:48 2019 -0500

    ipmi: Fix memory leak in __ipmi_bmc_register
    
    commit 4aa7afb0ee20a97fbf0c5bab3df028d5fb85fdab upstream.
    
    In the impelementation of __ipmi_bmc_register() the allocated memory for
    bmc should be released in case ida_simple_get() fails.
    
    Fixes: 68e7e50f195f ("ipmi: Don't use BMC product/dev ids in the BMC name")
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Message-Id: <20191021200649.1511-1-navid.emamdoost@gmail.com>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b35a576043f37641a1743ad0dd8cbf88161992c
Author: Shuiqing Li <shuiqing.li@unisoc.com>
Date:   Fri Nov 8 18:57:12 2019 +0800

    watchdog: sprd: Fix the incorrect pointer getting from driver data
    
    commit 39e68d9e7ab276880980ee5386301fb218202192 upstream.
    
    The device driver data saved the 'struct sprd_wdt' object, it is
    incorrect to get 'struct watchdog_device' object from the driver
    data, thus fix it.
    
    Fixes: 477603467009 ("watchdog: Add Spreadtrum watchdog driver")
    Reported-by: Dongwei Wang <dongwei.wang@unisoc.com>
    Signed-off-by: Shuiqing Li <shuiqing.li@unisoc.com>
    Signed-off-by: Baolin Wang <baolin.wang@linaro.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/76d4687189ec940baa90cb8d679a8d4c8f02ee80.1573210405.git.baolin.wang@linaro.org
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a43239f46a557b8444be4f0119d1354993af0ff
Author: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Date:   Thu Nov 21 15:48:51 2019 +1030

    soc: aspeed: Fix snoop_file_poll()'s return type
    
    commit a4e55ccd4392e70f296d12e81b93c6ca96ee21d5 upstream.
    
    snoop_file_poll() is defined as returning 'unsigned int' but the
    .poll method is declared as returning '__poll_t', a bitwise type.
    
    Fix this by using the proper return type and using the EPOLL
    constants instead of the POLL ones, as required for __poll_t.
    
    Link: https://lore.kernel.org/r/20191121051851.268726-1-joel@jms.id.au
    Fixes: 3772e5da4454 ("drivers/misc: Aspeed LPC snoop output using misc chardev")
    Signed-off-by: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Reviewed-by: Andrew Jeffery <andrew@aj.id.au>
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f255ba7d639bb1be48417bef0e083b7989de44d9
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Oct 16 16:33:06 2019 +0200

    soc: renesas: Add missing check for non-zero product register address
    
    commit 4194b583c104922c6141d6610bfbce26847959df upstream.
    
    If the DTB for a device with an RZ/A2 SoC lacks a device node for the
    BSID register, the ID validation code falls back to using a register at
    address 0x0, which leads to undefined behavior (e.g. reading back a
    random value).
    
    This could be fixed by letting fam_rza2.reg point to the actual BSID
    register.  However, the hardcoded fallbacks were meant for backwards
    compatibility with old DTBs only, not for new SoCs.  Hence fix this by
    validating renesas_family.reg before using it.
    
    Fixes: 175f435f44b724e3 ("soc: renesas: identify RZ/A2")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20191016143306.28995-1-geert+renesas@glider.be
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe20bda153045d9b9a2ea799a45c11a89d9ce63c
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Tue Oct 8 16:45:04 2019 -0700

    soc: qcom: llcc: Name regmaps to avoid collisions
    
    commit 2bfd3e7651addcaf48f12d4f11ea9d8fca6c3aa8 upstream.
    
    We'll end up with debugfs collisions if we don't give names to the
    regmaps created by this driver. Change the name of the config before
    registering it so we don't collide in debugfs.
    
    Fixes: 7f9c136216c7 ("soc: qcom: Add broadcast base for Last Level Cache Controller (LLCC)")
    Cc: Venkata Narendra Kumar Gutta <vnkgutta@codeaurora.org>
    Reviewed-by: Evan Green <evgreen@chromium.org>
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9ec66b1c86dd664ed479c7c9d5c35382c52e19d
Author: Thierry Reding <treding@nvidia.com>
Date:   Tue Oct 1 13:48:29 2019 +0200

    soc/tegra: pmc: Fix crashes for hierarchical interrupts
    
    commit c9e753767a9c75d2044fb7343950a6a992d34a16 upstream.
    
    Interrupts that don't have an associated wake event or GPIO wake events
    end up with an associate IRQ chip that is NULL and which causes IRQ code
    to crash. This is because we don't implicitly set the parent IRQ chip by
    allocating the interrupt at the parent. However, there really isn't a
    corresponding interrupt at the parent, so we need to work around this by
    setting the special no_irq_chip as the IRQ chip for these interrupts.
    
    Fixes: 19906e6b1667 ("soc/tegra: pmc: Add wake event support")
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3af1974d54d4618b103f35b46101b9daeec9499c
Author: Jean-Jacques Hiblot <jjhiblot@ti.com>
Date:   Mon Sep 23 12:02:50 2019 +0200

    leds: tlc591xx: update the maximum brightness
    
    commit a2cafdfd8cf5ad8adda6c0ce44a59f46431edf02 upstream.
    
    The TLC chips actually offer 257 levels:
    - 0: led OFF
    - 1-255: Led dimmed is using a PWM. The duty cycle range from 0.4% to 99.6%
    - 256: led fully ON
    
    Fixes: e370d010a5fe ("leds: tlc591xx: Driver for the TI 8/16 Channel i2c LED driver")
    Signed-off-by: Jean-Jacques Hiblot <jjhiblot@ti.com>
    Signed-off-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6498b7a5718e42ce9ee0954e1fa2a6942e8f7af1
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Nov 14 10:46:45 2019 -0300

    perf map: No need to adjust the long name of modules
    
    commit f068435d9bb2d825d59e3c101bc579f09315ee01 upstream.
    
    At some point in the past we needed to make sure we would get the long
    name of modules and not just what we get from /proc/modules, but that
    need, as described in the cset that introduced the adjustment function:
    
    Fixes: c03d5184f0e9 ("perf machine: Adjust dso->long_name for offline module")
    
    Without using the buildid-cache:
    
      # lsmod | grep trusted
      # insmod trusted.ko
      # lsmod | grep trusted
      trusted                24576  0
      # strace -e open,openat perf probe -m ./trusted.ko key_seal |& grep trusted
      openat(AT_FDCWD, "/sys/module/trusted/notes/.note.gnu.build-id", O_RDONLY) = 4
      openat(AT_FDCWD, "/sys/module/trusted/notes/.note.gnu.build-id", O_RDONLY) = 7
      openat(AT_FDCWD, "/root/trusted.ko", O_RDONLY) = 3
      openat(AT_FDCWD, "/root/.debug/root/trusted.ko/dd3d355d567394d540f527e093e0f64b95879584/probes", O_RDWR|O_CREAT, 0644) = 3
      openat(AT_FDCWD, "/usr/lib/debug/root/trusted.ko.debug", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "/usr/lib/debug/root/trusted.ko", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "/root/.debug/trusted.ko", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "/root/trusted.ko", O_RDONLY) = 3
      openat(AT_FDCWD, "trusted.ko.debug", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, ".debug/trusted.ko.debug", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "trusted.ko.debug", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "/root/trusted.ko", O_RDONLY) = 3
      openat(AT_FDCWD, "/root/trusted.ko", O_RDONLY) = 3
      openat(AT_FDCWD, "/root/trusted.ko", O_RDONLY) = 4
      openat(AT_FDCWD, "/root/trusted.ko", O_RDONLY) = 3
        probe:key_seal       (on key_seal in trusted)
      # perf probe -l
        probe:key_seal       (on key_seal in trusted)
      #
    
    No attempt at opening '[trusted]'.
    
    Now using the build-id cache:
    
      # rmmod trusted
      # perf buildid-cache --add ./trusted.ko
      # insmod trusted.ko
      # strace -e open,openat perf probe -m ./trusted.ko key_seal |& grep trusted
      openat(AT_FDCWD, "/sys/module/trusted/notes/.note.gnu.build-id", O_RDONLY) = 4
      openat(AT_FDCWD, "/sys/module/trusted/notes/.note.gnu.build-id", O_RDONLY) = 7
      openat(AT_FDCWD, "/root/trusted.ko", O_RDONLY) = 3
      openat(AT_FDCWD, "/root/.debug/root/trusted.ko/dd3d355d567394d540f527e093e0f64b95879584/probes", O_RDWR|O_CREAT, 0644) = 3
      openat(AT_FDCWD, "/usr/lib/debug/root/trusted.ko.debug", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "/usr/lib/debug/root/trusted.ko", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "/root/.debug/trusted.ko", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "/root/trusted.ko", O_RDONLY) = 3
      openat(AT_FDCWD, "trusted.ko.debug", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, ".debug/trusted.ko.debug", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "trusted.ko.debug", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "/root/trusted.ko", O_RDONLY) = 3
      openat(AT_FDCWD, "/root/trusted.ko", O_RDONLY) = 3
      openat(AT_FDCWD, "/root/trusted.ko", O_RDONLY) = 4
      openat(AT_FDCWD, "/root/trusted.ko", O_RDONLY) = 3
      #
    
    Again, no attempt at reading '[trusted]'.
    
    Finally, adding a probe to that function and then using:
    
    [root@quaco ~]# perf trace -e probe_perf:*/max-stack=16/ --max-events=2
         0.000 perf/13456 probe_perf:dso__adjust_kmod_long_name(__probe_ip: 5492263)
                                           dso__adjust_kmod_long_name (/home/acme/bin/perf)
                                           machine__process_kernel_mmap_event (/home/acme/bin/perf)
                                           machine__process_mmap_event (/home/acme/bin/perf)
                                           perf_event__process_mmap (/home/acme/bin/perf)
                                           machines__deliver_event (/home/acme/bin/perf)
                                           perf_session__deliver_event (/home/acme/bin/perf)
                                           perf_session__process_event (/home/acme/bin/perf)
                                           process_simple (/home/acme/bin/perf)
                                           reader__process_events (/home/acme/bin/perf)
                                           __perf_session__process_events (/home/acme/bin/perf)
                                           perf_session__process_events (/home/acme/bin/perf)
                                           process_buildids (/home/acme/bin/perf)
                                           record__finish_output (/home/acme/bin/perf)
                                           __cmd_record (/home/acme/bin/perf)
                                           cmd_record (/home/acme/bin/perf)
                                           run_builtin (/home/acme/bin/perf)
         0.055 perf/13456 probe_perf:dso__adjust_kmod_long_name(__probe_ip: 5492263)
                                           dso__adjust_kmod_long_name (/home/acme/bin/perf)
                                           machine__process_kernel_mmap_event (/home/acme/bin/perf)
                                           machine__process_mmap_event (/home/acme/bin/perf)
                                           perf_event__process_mmap (/home/acme/bin/perf)
                                           machines__deliver_event (/home/acme/bin/perf)
                                           perf_session__deliver_event (/home/acme/bin/perf)
                                           perf_session__process_event (/home/acme/bin/perf)
                                           process_simple (/home/acme/bin/perf)
                                           reader__process_events (/home/acme/bin/perf)
                                           __perf_session__process_events (/home/acme/bin/perf)
                                           perf_session__process_events (/home/acme/bin/perf)
                                           process_buildids (/home/acme/bin/perf)
                                           record__finish_output (/home/acme/bin/perf)
                                           __cmd_record (/home/acme/bin/perf)
                                           cmd_record (/home/acme/bin/perf)
                                           run_builtin (/home/acme/bin/perf)
      #
    
    This was the only path I could find using the perf tools that reach at this
    function, then as of november/2019, if we put a probe in the line where the
    actuall setting of the dso->long_name is done:
    
      # perf trace -e probe_perf:*
      ^C[root@quaco ~]
      # perf stat -e probe_perf:*  -I 2000
           2.000404265                  0      probe_perf:dso__adjust_kmod_long_name
           4.001142200                  0      probe_perf:dso__adjust_kmod_long_name
           6.001704120                  0      probe_perf:dso__adjust_kmod_long_name
           8.002398316                  0      probe_perf:dso__adjust_kmod_long_name
          10.002984010                  0      probe_perf:dso__adjust_kmod_long_name
          12.003597851                  0      probe_perf:dso__adjust_kmod_long_name
          14.004113303                  0      probe_perf:dso__adjust_kmod_long_name
          16.004582773                  0      probe_perf:dso__adjust_kmod_long_name
          18.005176373                  0      probe_perf:dso__adjust_kmod_long_name
          20.005801605                  0      probe_perf:dso__adjust_kmod_long_name
          22.006467540                  0      probe_perf:dso__adjust_kmod_long_name
      ^C    23.683261941                  0      probe_perf:dso__adjust_kmod_long_name
    
      #
    
    Its not being used at all.
    
    To further test this I used kvm.ko as the offline module, i.e. removed
    if from the buildid-cache by nuking it completely (rm -rf ~/.debug) and
    moved it from the normal kernel distro path, removed the modules, stoped
    the kvm guest, and then installed it manually, etc.
    
      # rmmod kvm-intel
      # rmmod kvm
      # lsmod | grep kvm
      # modprobe kvm-intel
      modprobe: ERROR: ctx=0x55d3b1722260 path=/lib/modules/5.3.8-200.fc30.x86_64/kernel/arch/x86/kvm/kvm.ko.xz error=No such file or directory
      modprobe: ERROR: ctx=0x55d3b1722260 path=/lib/modules/5.3.8-200.fc30.x86_64/kernel/arch/x86/kvm/kvm.ko.xz error=No such file or directory
      modprobe: ERROR: could not insert 'kvm_intel': Unknown symbol in module, or unknown parameter (see dmesg)
      # insmod ./kvm.ko
      # modprobe kvm-intel
      modprobe: ERROR: ctx=0x562f34026260 path=/lib/modules/5.3.8-200.fc30.x86_64/kernel/arch/x86/kvm/kvm.ko.xz error=No such file or directory
      modprobe: ERROR: ctx=0x562f34026260 path=/lib/modules/5.3.8-200.fc30.x86_64/kernel/arch/x86/kvm/kvm.ko.xz error=No such file or directory
      # lsmod | grep kvm
      kvm_intel             299008  0
      kvm                   765952  1 kvm_intel
      irqbypass              16384  1 kvm
      #
      # perf probe -x ~/bin/perf machine__findnew_module_map:12 mname=m.name:string filename=filename:string 'dso_long_name=map->dso->long_name:string' 'dso_name=map->dso->name:string'
      # perf probe -l
        probe_perf:machine__findnew_module_map (on machine__findnew_module_map:12@util/machine.c in /home/acme/bin/perf with mname filename dso_long_name dso_name)
      # perf record
      ^C[ perf record: Woken up 2 times to write data ]
      [ perf record: Captured and wrote 3.416 MB perf.data (33956 samples) ]
      # perf trace -e probe_perf:machine*
      <SNIP>
           6.322 perf/23099 probe_perf:machine__findnew_module_map(__probe_ip: 5492493, mname: "[salsa20_generic]", filename: "/lib/modules/5.3.8-200.fc30.x86_64/kernel/crypto/salsa20_generic.ko.xz", dso_long_name: "/lib/modules/5.3.8-200.fc30.x86_64/kernel/crypto/salsa20_generic.ko.xz", dso_name: "[salsa20_generic]")
           6.375 perf/23099 probe_perf:machine__findnew_module_map(__probe_ip: 5492493, mname: "[kvm]", filename: "[kvm]", dso_long_name: "[kvm]", dso_name: "[kvm]")
      <SNIP>
    
    The filename doesn't come with the path, no point in trying to set the dso->long_name.
    
      [root@quaco ~]# strace -e open,openat perf probe -m ./kvm.ko kvm_apic_local_deliver |& egrep 'open.*kvm'
      openat(AT_FDCWD, "/sys/module/kvm_intel/notes/.note.gnu.build-id", O_RDONLY) = 4
      openat(AT_FDCWD, "/sys/module/kvm/notes/.note.gnu.build-id", O_RDONLY) = 4
      openat(AT_FDCWD, "/lib/modules/5.3.8-200.fc30.x86_64/kernel/arch/x86/kvm", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = 7
      openat(AT_FDCWD, "/sys/module/kvm_intel/notes/.note.gnu.build-id", O_RDONLY) = 8
      openat(AT_FDCWD, "/root/kvm.ko", O_RDONLY) = 3
      openat(AT_FDCWD, "/root/.debug/root/kvm.ko/5955f426cb93f03f30f3e876814be2db80ab0b55/probes", O_RDWR|O_CREAT, 0644) = 3
      openat(AT_FDCWD, "/usr/lib/debug/root/kvm.ko.debug", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "/usr/lib/debug/root/kvm.ko", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "/root/.debug/kvm.ko", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "/root/kvm.ko", O_RDONLY) = 3
      openat(AT_FDCWD, "kvm.ko.debug", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, ".debug/kvm.ko.debug", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "kvm.ko.debug", O_RDONLY) = -1 ENOENT (No such file or directory)
      openat(AT_FDCWD, "/root/kvm.ko", O_RDONLY) = 3
      openat(AT_FDCWD, "/root/kvm.ko", O_RDONLY) = 3
      openat(AT_FDCWD, "/root/kvm.ko", O_RDONLY) = 4
      openat(AT_FDCWD, "/root/kvm.ko", O_RDONLY) = 3
      [root@quaco ~]#
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: https://lkml.kernel.org/n/tip-jlfew3lyb24d58egrp0o72o2@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1763c9456be68151543cccfa810ae0de1554384
Author: Corentin Labbe <clabbe.montjoie@gmail.com>
Date:   Thu Nov 14 13:58:49 2019 +0100

    crypto: sun4i-ss - fix big endian issues
    
    commit d1d787bcebfe122a5bd443ae565696661e2e9656 upstream.
    
    When testing BigEndian kernel, the sun4i-ss was failling all crypto
    tests.
    This patch fix endian issues with it.
    
    Fixes: 6298e948215f ("crypto: sunxi-ss - Add Allwinner Security System crypto accelerator")
    Signed-off-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36148a8fdc2fa336304b8a0f302067125b0ebc24
Author: Christian Lamparter <chunkeey@gmail.com>
Date:   Sun Oct 27 16:47:47 2019 +0100

    crypto: amcc - restore CRYPTO_AES dependency
    
    commit 298b4c604008025b134bc6fccbc4018449945d60 upstream.
    
    This patch restores the CRYPTO_AES dependency. This is
    necessary since some of the crypto4xx driver provided
    modes need functioning software fallbacks for
    AES-CTR/CCM and GCM.
    
    Fixes: da3e7a9715ea ("crypto: amcc - switch to AES library for GCM key derivation")
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdac80457e88195e82c3bbe197faae89ab98fbaa
Author: Patrick Steinhardt <ps@pks.im>
Date:   Wed Dec 4 07:13:22 2019 +0100

    nfsd: depend on CRYPTO_MD5 for legacy client tracking
    
    commit 38a2204f5298620e8a1c3b1dc7b831425106dbc0 upstream.
    
    The legacy client tracking infrastructure of nfsd makes use of MD5 to
    derive a client's recovery directory name. As the nfsd module doesn't
    declare any dependency on CRYPTO_MD5, though, it may fail to allocate
    the hash if the kernel was compiled without it. As a result, generation
    of client recovery directories will fail with the following error:
    
        NFSD: unable to generate recoverydir name
    
    The explicit dependency on CRYPTO_MD5 was removed as redundant back in
    6aaa67b5f3b9 (NFSD: Remove redundant "select" clauses in fs/Kconfig
    2008-02-11) as it was already implicitly selected via RPCSEC_GSS_KRB5.
    This broke when RPCSEC_GSS_KRB5 was made optional for NFSv4 in commit
    df486a25900f (NFS: Fix the selection of security flavours in Kconfig) at
    a later point.
    
    Fix the issue by adding back an explicit dependency on CRYPTO_MD5.
    
    Fixes: df486a25900f (NFS: Fix the selection of security flavours in Kconfig)
    Signed-off-by: Patrick Steinhardt <ps@pks.im>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8dea4ed48865460353e2833b40bacde8a3ce9fb
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Tue Nov 12 09:19:26 2019 +0100

    s390/pkey: fix memory leak within _copy_apqns_from_user()
    
    commit f9cac4fd8878929c6ebff0bd272317905d77c38a upstream.
    
    Fixes: f2bbc96e7cfad ("s390/pkey: add CCA AES cipher key support")
    Reported-by: Markus Elfring <Markus.Elfring@web.de>
    Reported-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0198ab3a28fc7b0ae8199f44e151af9ddf09ee2
Author: Jesse Brandeburg <jesse.brandeburg@intel.com>
Date:   Fri Nov 8 06:23:21 2019 -0800

    ice: fix stack leakage
    
    commit 949375de945f7042df2b6488228a1a2b36e69f35 upstream.
    
    In the case of an invalid virtchannel request the driver
    would return uninitialized data to the VF from the PF stack
    which is a bug.  Fix by initializing the stack variable
    earlier in the function before any return paths can be taken.
    
    Fixes: 1071a8358a28 ("ice: Implement virtchnl commands for AVF support")
    Signed-off-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bc814d98e92f94b03ce51aa588491935d46c642
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Sat Sep 21 10:44:01 2019 +0200

    mt7601u: fix bbp version check in mt7601u_wait_bbp_ready
    
    commit 15e14f76f85f4f0eab3b8146e1cd3c58ce272823 upstream.
    
    Fix bbp ready check in mt7601u_wait_bbp_ready. The issue is reported by
    coverity with the following error:
    
    Logical vs. bitwise operator
    The expression's value does not depend on the operands; inadvertent use
    of the wrong operator is a likely logic error.
    
    Addresses-Coverity-ID: 1309441 ("Logical vs. bitwise operator")
    Fixes: c869f77d6abb ("add mt7601u driver")
    Acked-by: Jakub Kicinski <kubakici@wp.pl>
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1de9dd61f0e0cdaf25fa6e9f7f3eba046687b23c
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Sun Nov 17 14:26:14 2019 +0200

    mt76: mt76u: fix endpoint definition order
    
    commit 23cb16d2ccb5f819d7acff602e5a153157bf2884 upstream.
    
    Even if they are not currently used fix BK/BE endpoint definition order.
    
    Fixes: b40b15e1521f ("mt76: add usb support to mt76 layer")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 162854d6dd706d08b73e108ccd925e3da4045d31
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Wed Oct 23 17:47:44 2019 +0300

    phy: ti: gmii-sel: fix mac tx internal delay for rgmii-rxid
    
    commit 316b429459066215abb50060873ec0832efc4044 upstream.
    
    Now phy-gmii-sel will disable MAC TX internal delay for PHY interface mode
    "rgmii-rxid" which is incorrect.
    Hence, fix it by enabling MAC TX internal delay in the case of "rgmii-rxid"
    mode.
    
    Fixes: 92b58b34741f ("phy: ti: introduce phy-gmii-sel driver")
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52fa627e20df2ea352bf1ecec636d8f81a196bbd
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Oct 3 11:43:51 2019 -0700

    net: phy: broadcom: Fix RGMII delays configuration for BCM54210E
    
    commit fea7fda7f50a6059220f83251e70709e45cc8040 upstream.
    
    Commit 0fc9ae107669 ("net: phy: broadcom: add support for
    BCM54210E") added support for BCM54210E but also unconditionally cleared
    the RXC to RXD skew and the TXD to TXC skew, thus only making
    PHY_INTERFACE_MODE_RGMII a possible configuration. Use
    bcm54xx_config_clock_delay() which correctly sets the registers
    depending on the 4 possible PHY interface values that exist for RGMII.
    
    Fixes: 0fc9ae107669 ("net: phy: broadcom: add support for BCM54210E")
    Reported-by: Manasa Mudireddy <manasa.mudireddy@broadcom.com>
    Reported-by: Ray Jui <ray.jui@broadcom.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f51f661fd2be6349441a2aa8e558409d37b6aab
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Wed Sep 4 11:40:14 2019 +0000

    phy: lantiq: vrx200-pcie: fix error return code in ltq_vrx200_pcie_phy_power_on()
    
    commit 82b5d164415549e74cfa1f9156ffd4463d0a76e2 upstream.
    
    Fix to return a negative error code from the error handling
    case instead of 0, as done elsewhere in this function.
    
    Fixes: e52a632195bf ("phy: lantiq: vrx200-pcie: add a driver for the Lantiq VRX200 PCIe PHY")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 142cb2bd612d0dfe7ef5d5fa788bcb7b10d6b4f2
Author: Roi Dayan <roid@mellanox.com>
Date:   Mon Dec 2 19:19:47 2019 +0200

    net/mlx5e: Fix free peer_flow when refcount is 0
    
    commit eb252c3a24fc5856fa62140c2f8269ddce6ce4e5 upstream.
    
    It could be neigh update flow took a refcount on peer flow so
    sometimes we cannot release peer flow even if parent flow is
    being freed now.
    
    Fixes: 5a7e5bcb663d ("net/mlx5e: Extend tc flow struct with reference counter")
    Signed-off-by: Roi Dayan <roid@mellanox.com>
    Reviewed-by: Eli Britstein <elibr@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bc7663b711a6f3c46f35f6b7e1d53449f451b2f
Author: Tung Nguyen <tung.q.nguyen@dektech.com.au>
Date:   Thu Nov 28 10:10:07 2019 +0700

    tipc: fix wrong timeout input for tipc_wait_for_cond()
    
    commit 12db3c8083fcab4270866a88191933f2d9f24f89 upstream.
    
    In function __tipc_shutdown(), the timeout value passed to
    tipc_wait_for_cond() is not jiffies.
    
    This commit fixes it by converting that value from milliseconds
    to jiffies.
    
    Fixes: 365ad353c256 ("tipc: reduce risk of user starvation during link congestion")
    Signed-off-by: Tung Nguyen <tung.q.nguyen@dektech.com.au>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58e007884a7bf7ad34552f266e7bb51cc9a7273b
Author: Tung Nguyen <tung.q.nguyen@dektech.com.au>
Date:   Thu Nov 28 10:10:06 2019 +0700

    tipc: fix wrong socket reference counter after tipc_sk_timeout() returns
    
    commit 91a4a3eb433e4d786420c41f3c08d1d16c605962 upstream.
    
    When tipc_sk_timeout() is executed but user space is grabbing
    ownership, this function rearms itself and returns. However, the
    socket reference counter is not reduced. This causes potential
    unexpected behavior.
    
    This commit fixes it by calling sock_put() before tipc_sk_timeout()
    returns in the above-mentioned case.
    
    Fixes: afe8792fec69 ("tipc: refactor function tipc_sk_timeout()")
    Signed-off-by: Tung Nguyen <tung.q.nguyen@dektech.com.au>
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55a0b2c95fd47db2adfeae50840c4b3a87c56179
Author: Tung Nguyen <tung.q.nguyen@dektech.com.au>
Date:   Thu Nov 28 10:10:05 2019 +0700

    tipc: fix potential memory leak in __tipc_sendmsg()
    
    commit 2fe97a578d7bad3116a89dc8a6692a51e6fc1d9c upstream.
    
    When initiating a connection message to a server side, the connection
    message is cloned and added to the socket write queue. However, if the
    cloning is failed, only the socket write queue is purged. It causes
    memory leak because the original connection message is not freed.
    
    This commit fixes it by purging the list of connection message when
    it cannot be cloned.
    
    Fixes: 6787927475e5 ("tipc: buffer overflow handling in listener socket")
    Reported-by: Hoang Le <hoang.h.le@dektech.com.au>
    Signed-off-by: Tung Nguyen <tung.q.nguyen@dektech.com.au>
    Acked-by: Ying Xue <ying.xue@windriver.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28845c28f842e9e55e75b2c116bff714bb039055
Author: Hoang Le <hoang.h.le@dektech.com.au>
Date:   Tue Nov 12 07:40:04 2019 +0700

    tipc: update mon's self addr when node addr generated
    
    commit 46cb01eeeb86fca6afe24dda1167b0cb95424e29 upstream.
    
    In commit 25b0b9c4e835 ("tipc: handle collisions of 32-bit node address
    hash values"), the 32-bit node address only generated after one second
    trial period expired. However the self's addr in struct tipc_monitor do
    not update according to node address generated. This lead to it is
    always zero as initial value. As result, sorting algorithm using this
    value does not work as expected, neither neighbor monitoring framework.
    
    In this commit, we add a fix to update self's addr when 32-bit node
    address generated.
    
    Fixes: 25b0b9c4e835 ("tipc: handle collisions of 32-bit node address hash values")
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Hoang Le <hoang.h.le@dektech.com.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3182a666aea23ef14cc7e1df5baa712b02f87bd
Author: Hoang Le <hoang.h.le@dektech.com.au>
Date:   Wed Nov 6 13:26:10 2019 +0700

    tipc: reduce sensitive to retransmit failures
    
    commit 426071f1f3995d7e9603246bffdcbf344cd31719 upstream.
    
    With huge cluster (e.g >200nodes), the amount of that flow:
    gap -> retransmit packet -> acked will take time in case of STATE_MSG
    dropped/delayed because a lot of traffic. This lead to 1.5 sec tolerance
    value criteria made link easy failure around 2nd, 3rd of failed
    retransmission attempts.
    
    Instead of re-introduced criteria of 99 faled retransmissions to fix the
    issue, we increase failure detection timer to ten times tolerance value.
    
    Fixes: 77cf8edbc0e7 ("tipc: simplify stale link failure criteria")
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Hoang Le <hoang.h.le@dektech.com.au>
    Acked-by: Jon
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81c13f38975dd1f51538cde88584eed3f2c0c928
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Wed Dec 4 11:50:15 2019 +0000

    powerpc/archrandom: fix arch_get_random_seed_int()
    
    commit b6afd1234cf93aa0d71b4be4788c47534905f0be upstream.
    
    Commit 01c9348c7620ec65
    
      powerpc: Use hardware RNG for arch_get_random_seed_* not arch_get_random_*
    
    updated arch_get_random_[int|long]() to be NOPs, and moved the hardware
    RNG backing to arch_get_random_seed_[int|long]() instead. However, it
    failed to take into account that arch_get_random_int() was implemented
    in terms of arch_get_random_long(), and so we ended up with a version
    of the former that is essentially a NOP as well.
    
    Fix this by calling arch_get_random_seed_long() from
    arch_get_random_seed_int() instead.
    
    Fixes: 01c9348c7620ec65 ("powerpc: Use hardware RNG for arch_get_random_seed_* not arch_get_random_*")
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20191204115015.18015-1-ardb@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 618e593b090202383d5dc5336e4aa7692c0e2d61
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri Nov 29 14:26:41 2019 +0000

    powerpc/kasan: Fix boot failure with RELOCATABLE && FSL_BOOKE
    
    commit 71eb40fc53371bc247c8066ae76ad9e22ae1e18d upstream.
    
    When enabling CONFIG_RELOCATABLE and CONFIG_KASAN on FSL_BOOKE,
    the kernel doesn't boot.
    
    relocate_init() requires KASAN early shadow area to be set up because
    it needs access to the device tree through generic functions.
    
    Call kasan_early_init() before calling relocate_init()
    
    Reported-by: Lexi Shao <shaolexi@huawei.com>
    Fixes: 2edb16efc899 ("powerpc/32: Add KASAN support")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/b58426f1664a4b344ff696d18cacf3b3e8962111.1575036985.git.christophe.leroy@c-s.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0254daa0aebbb27f777e1423e535dcae37f7a191
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Sun Nov 10 23:21:37 2019 -0600

    powerpc/pseries: Enable support for ibm,drc-info property
    
    commit 0a87ccd3699983645f54cafd2258514a716b20b8 upstream.
    
    Advertise client support for the PAPR architected ibm,drc-info device
    tree property during CAS handshake.
    
    Fixes: c7a3275e0f9e ("powerpc/pseries: Revert support for ibm,drc-info devtree property")
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1573449697-5448-11-git-send-email-tyreld@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5c4594b2043c4eefaae3dbf6f5deb198e33b89f
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Oct 21 16:23:09 2019 +0200

    powerpc/security: Fix debugfs data leak on 32-bit
    
    commit 3b05a1e517e1a8cfda4866ec31d28b2bc4fee4c4 upstream.
    
    "powerpc_security_features" is "unsigned long", i.e. 32-bit or 64-bit,
    depending on the platform (PPC_FSL_BOOK3E or PPC_BOOK3S_64).  Hence
    casting its address to "u64 *", and calling debugfs_create_x64() is
    wrong, and leaks 32-bit of nearby data to userspace on 32-bit platforms.
    
    While all currently defined SEC_FTR_* security feature flags fit in
    32-bit, they all have "ULL" suffixes to make them 64-bit constants.
    Hence fix the leak by changing the type of "powerpc_security_features"
    (and the parameter types of its accessors) to "u64".  This also allows
    to drop the cast.
    
    Fixes: 398af571128fe75f ("powerpc/security: Show powerpc_security_features in debugfs")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20191021142309.28105-1-geert+renesas@glider.be
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46fabfd623a88fc1f4695cff420a7855e4078010
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Wed Nov 20 16:25:46 2019 -0500

    SUNRPC: Fix backchannel latency metrics
    
    commit 8729aaba74626c4ebce3abf1b9e96bb62d2958ca upstream.
    
    I noticed that for callback requests, the reported backlog latency
    is always zero, and the rtt value is crazy big. The problem was that
    rqst->rq_xtime is never set for backchannel requests.
    
    Fixes: 78215759e20d ("SUNRPC: Make RTT measurement more ... ")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7be8c165dc81564705e8e0b72d398ef708f67eaa
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Thu Oct 24 09:34:16 2019 -0400

    SUNRPC: Fix svcauth_gss_proxy_init()
    
    commit 5866efa8cbfbadf3905072798e96652faf02dbe8 upstream.
    
    gss_read_proxy_verf() assumes things about the XDR buffer containing
    the RPC Call that are not true for buffers generated by
    svc_rdma_recv().
    
    RDMA's buffers look more like what the upper layer generates for
    sending: head is a kmalloc'd buffer; it does not point to a page
    whose contents are contiguous with the first page in the buffers'
    page array. The result is that ACCEPT_SEC_CONTEXT via RPC/RDMA has
    stopped working on Linux NFS servers that use gssproxy.
    
    This does not affect clients that use only TCP to send their
    ACCEPT_SEC_CONTEXT operation (that's all Linux clients). Other
    clients, like Solaris NFS clients, send ACCEPT_SEC_CONTEXT on the
    same transport as they send all other NFS operations. Such clients
    can send ACCEPT_SEC_CONTEXT via RPC/RDMA.
    
    I thought I had found every direct reference in the server RPC code
    to the rqstp->rq_pages field.
    
    Bug found at the 2019 Westford NFS bake-a-thon.
    
    Fixes: 3316f0631139 ("svcrdma: Persistently allocate and DMA- ... ")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Tested-by: Bill Baker <bill.baker@oracle.com>
    Reviewed-by: Simo Sorce <simo@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8120a689b71dabf356f6120eddd272ca2f0f22f
Author: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date:   Wed Sep 4 08:56:25 2019 +0300

    mfd: intel-lpss: Add default I2C device properties for Gemini Lake
    
    commit 3f31bc67e4dc6a555341dffefe328ddd58e8b431 upstream.
    
    It turned out Intel Gemini Lake doesn't use the same I2C timing
    parameters as Broxton.
    
    I got confirmation from the Windows team that Gemini Lake systems should
    use updated timing parameters that differ from those used in Broxton
    based systems.
    
    Fixes: f80e78aa11ad ("mfd: intel-lpss: Add Intel Gemini Lake PCI IDs")
    Tested-by: Chris Chiu <chiu@endlessm.com>
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Acked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45f884c2adfec0bc6543612b2f4cc3d13ba05262
Author: Alain Volmat <alain.volmat@st.com>
Date:   Tue Nov 12 09:19:44 2019 +0100

    i2c: i2c-stm32f7: fix 10-bits check in slave free id search loop
    
    commit 7787657d7ee55a9ecf4aea4907b46b87a44eda67 upstream.
    
    Fix a typo in the free slave id search loop. Instead of I2C_CLIENT_PEC,
    it should have been I2C_CLIENT_TEN. The slave id 1 can only handle 7-bit
    addresses and thus is not eligible in case of 10-bit addresses.
    As a matter of fact none of the slave id support I2C_CLIENT_PEC, overall
    check is performed at the beginning of the stm32f7_i2c_reg_slave function.
    
    Fixes: 60d609f30de2 ("i2c: i2c-stm32f7: Add slave support")
    Signed-off-by: Alain Volmat <alain.volmat@st.com>
    Reviewed-by: Pierre-Yves MORDRET <pierre-yves.mordret@st.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd1061bc2bc6eca48da633053d521742ce025b96
Author: Alain Volmat <alain.volmat@st.com>
Date:   Tue Oct 15 15:03:09 2019 +0200

    i2c: stm32f7: rework slave_id allocation
    
    commit 52d3be711e065a97a57c2f2ffba3098748855bd6 upstream.
    
    The IP can handle two slave addresses. One address can either be
    7 bits or 10 bits while the other can only be 7 bits.
    In order to ensure that a 10 bits address can always be allocated
    (assuming there is only one 7 bits address already allocated),
    pick up the 7-bits only address slot in priority when performing a 7-bits
    address allocation.
    
    Fixes: 60d609f30de2 ("i2c: i2c-stm32f7: Add slave support")
    Signed-off-by: Alain Volmat <alain.volmat@st.com>
    Reviewed-by: Pierre-Yves MORDRET <pierre-yves.mordret@st.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc08e4455a169ac18c7dfba3879aeceaf089f7c8
Author: Jan Kara <jack@suse.cz>
Date:   Wed Oct 23 17:00:45 2019 -0700

    xfs: Sanity check flags of Q_XQUOTARM call
    
    commit 3dd4d40b420846dd35869ccc8f8627feef2cff32 upstream.
    
    Flags passed to Q_XQUOTARM were not sanity checked for invalid values.
    Fix that.
    
    Fixes: 9da93f9b7cdf ("xfs: fix Q_XQUOTARM ioctl")
    Reported-by: Yang Xu <xuyang2018.jy@cn.fujitsu.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Eric Sandeen <sandeen@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da22b367d9bda32dd77168bd71d028f3182cfd21
Author: Markus Elfring <elfring@users.sourceforge.net>
Date:   Sat Nov 9 17:19:35 2019 +0100

    ARM: OMAP2+: Add missing put_device() call in omapdss_init_of()
    
    commit 0b491904f053e41685162af5c5411b85b18c97a7 upstream.
    
    A coccicheck run provided information like the following.
    
    arch/arm/mach-omap2/display.c:268:2-8: ERROR: missing put_device;
    call of_find_device_by_node on line 258, but without a corresponding
    object release within this function.
    
    Generated by: scripts/coccinelle/free/put_device.cocci
    
    Thus add the missed function call to fix the exception handling for
    this function implementation.
    
    Fixes: e0c827aca0730b51f38081aa4e8ecf0912aab55f ("drm/omap: Populate DSS children in omapdss driver")
    Signed-off-by: Markus Elfring <elfring@users.sourceforge.net>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b9014d17cbe3bfe6c7a830ed6061a3de9aafc56
Author: Adam Ford <aford173@gmail.com>
Date:   Wed Oct 16 08:51:47 2019 -0500

    ARM: dts: logicpd-torpedo-37xx-devkit-28: Reference new DRM panel
    
    commit a177057a95f6a3f1e0e52a17eea2178c15073648 upstream.
    
    With the removal of the panel-dpi from the omap drivers, the
    LCD no longer works.  This patch points the device tree to
    a newly created panel named "logicpd,type28"
    
    Fixes: 8bf4b1621178 ("drm/omap: Remove panel-dpi driver")
    
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 634813e41f85355a5dc7e032a0933495694f8b1a
Author: Jesper Dangaard Brouer <brouer@redhat.com>
Date:   Mon Dec 2 13:37:31 2019 +0100

    samples/bpf: Fix broken xdp_rxq_info due to map order assumptions
    
    commit edbca120a8cdfa5a5793707e33497aa5185875ca upstream.
    
    In the days of using bpf_load.c the order in which the 'maps' sections
    were defines in BPF side (*_kern.c) file, were used by userspace side
    to identify the map via using the map order as an index. In effect the
    order-index is created based on the order the maps sections are stored
    in the ELF-object file, by the LLVM compiler.
    
    This have also carried over in libbpf via API bpf_map__next(NULL, obj)
    to extract maps in the order libbpf parsed the ELF-object file.
    
    When BTF based maps were introduced a new section type ".maps" were
    created. I found that the LLVM compiler doesn't create the ".maps"
    sections in the order they are defined in the C-file. The order in the
    ELF file is based on the order the map pointer is referenced in the code.
    
    This combination of changes lead to xdp_rxq_info mixing up the map
    file-descriptors in userspace, resulting in very broken behaviour, but
    without warning the user.
    
    This patch fix issue by instead using bpf_object__find_map_by_name()
    to find maps via their names. (Note, this is the ELF name, which can
    be longer than the name the kernel retains).
    
    Fixes: be5bca44aa6b ("samples: bpf: convert some XDP samples from bpf_load to libbpf")
    Fixes: 451d1dc886b5 ("samples: bpf: update map definition to new syntax BTF-defined map")
    Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/157529025128.29832.5953245340679936909.stgit@firesoul
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76aff568ee2df8d7f86713391f48ca6aa5cfa260
Author: Daniel T. Lee <danieltimlee@gmail.com>
Date:   Thu Nov 7 09:51:53 2019 +0900

    samples: bpf: update map definition to new syntax BTF-defined map
    
    commit 451d1dc886b548d6e18c933adca326c1307023c9 upstream.
    
    Since, the new syntax of BTF-defined map has been introduced,
    the syntax for using maps under samples directory are mixed up.
    For example, some are already using the new syntax, and some are using
    existing syntax by calling them as 'legacy'.
    
    As stated at commit abd29c931459 ("libbpf: allow specifying map
    definitions using BTF"), the BTF-defined map has more compatablility
    with extending supported map definition features.
    
    The commit doesn't replace all of the map to new BTF-defined map,
    because some of the samples still use bpf_load instead of libbpf, which
    can't properly create BTF-defined map.
    
    This will only updates the samples which uses libbpf API for loading bpf
    program. (ex. bpf_prog_load_xattr)
    
    Signed-off-by: Daniel T. Lee <danieltimlee@gmail.com>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2227983d535bf4ac8444ad72c0b4be244dce9d3
Author: Stanislav Fomichev <sdf@google.com>
Date:   Wed Nov 27 14:57:59 2019 -0800

    bpf: Force .BTF section start to zero when dumping from vmlinux
    
    commit df786c9b947639aedbc7bb44b5dae2a7824af360 upstream.
    
    While trying to figure out why fentry_fexit selftest doesn't pass for me
    (old pahole, broken BTF), I found out that my latest patch can break vmlinux
    .BTF generation. objcopy preserves section start when doing --only-section,
    so there is a chance (depending on where pahole inserts .BTF section) to
    have leading empty zeroes. Let's explicitly force section offset to zero.
    
    Before:
    
    $ objcopy --set-section-flags .BTF=alloc -O binary \
            --only-section=.BTF vmlinux .btf.vmlinux.bin
    $ xxd .btf.vmlinux.bin | head -n1
    00000000: 0000 0000 0000 0000 0000 0000 0000 0000  ................
    
    After:
    
    $ objcopy --change-section-address .BTF=0 \
            --set-section-flags .BTF=alloc -O binary \
            --only-section=.BTF vmlinux .btf.vmlinux.bin
    $ xxd .btf.vmlinux.bin | head -n1
    00000000: 9feb 0100 1800 0000 0000 0000 80e1 1c00  ................
              ^BTF magic
    
    As part of this change, I'm also dropping '2>/dev/null' from objcopy
    invocation to be able to catch possible other issues (objcopy doesn't
    produce any warnings for me anymore, it did before with --dump-section).
    
    Fixes: da5fb18225b4 ("bpf: Support pre-2.25-binutils objcopy for vmlinux BTF")
    Signed-off-by: Stanislav Fomichev <sdf@google.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Cc: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/20191127225759.39923-1-sdf@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2948fecb0e3f2364b79b1d306712468014d135dd
Author: Andrii Nakryiko <andriin@fb.com>
Date:   Wed Nov 6 18:08:54 2019 -0800

    libbpf: Make btf__resolve_size logic always check size error condition
    
    commit 994021a7e08477f7e51285920aac99fc967fae8a upstream.
    
    Perform size check always in btf__resolve_size. Makes the logic a bit more
    robust against corrupted BTF and silences LGTM/Coverity complaining about
    always true (size < 0) check.
    
    Fixes: 69eaab04c675 ("btf: extract BTF type size calculation")
    Signed-off-by: Andrii Nakryiko <andriin@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20191107020855.3834758-5-andriin@fb.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a3c8e037978e963469395b091e553a479f576c0
Author: Andrii Nakryiko <andriin@fb.com>
Date:   Wed Nov 6 18:08:53 2019 -0800

    libbpf: Fix another potential overflow issue in bpf_prog_linfo
    
    commit dd3ab126379ec040b3edab8559f9c72de6ef9d29 upstream.
    
    Fix few issues found by Coverity and LGTM.
    
    Fixes: b053b439b72a ("bpf: libbpf: bpftool: Print bpf_line_info during prog dump")
    Signed-off-by: Andrii Nakryiko <andriin@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20191107020855.3834758-4-andriin@fb.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02d3c2fb209ff786e844cbe062e942eba5401bf4
Author: Andrii Nakryiko <andriin@fb.com>
Date:   Wed Nov 6 18:08:52 2019 -0800

    libbpf: Fix potential overflow issue
    
    commit 4ee1135615713387b869dfd099ffdf8656be6784 upstream.
    
    Fix a potential overflow issue found by LGTM analysis, based on Github libbpf
    source code.
    
    Fixes: 3d65014146c6 ("bpf: libbpf: Add btf_line_info support to libbpf")
    Signed-off-by: Andrii Nakryiko <andriin@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20191107020855.3834758-3-andriin@fb.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bc794f2038e1cbb0c39b6f2c462e75e49c9bccc
Author: Andrii Nakryiko <andriin@fb.com>
Date:   Wed Nov 6 18:08:51 2019 -0800

    libbpf: Fix memory leak/double free issue
    
    commit 3dc5e059821376974177cc801d377e3fcdac6712 upstream.
    
    Coverity scan against Github libbpf code found the issue of not freeing memory and
    leaving already freed memory still referenced from bpf_program. Fix it by
    re-assigning successfully reallocated memory sooner.
    
    Fixes: 2993e0515bb4 ("tools/bpf: add support to read .BTF.ext sections")
    Signed-off-by: Andrii Nakryiko <andriin@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20191107020855.3834758-2-andriin@fb.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fb2e3c739228e932d3fc99c272b75f37bd3b5ee
Author: Magnus Karlsson <magnus.karlsson@intel.com>
Date:   Fri Oct 25 11:17:15 2019 +0200

    libbpf: Fix compatibility for kernels without need_wakeup
    
    commit 94ff9ebb49a546b7f009ed840bafa235c96d4c4b upstream.
    
    When the need_wakeup flag was added to AF_XDP, the format of the
    XDP_MMAP_OFFSETS getsockopt was extended. Code was added to the
    kernel to take care of compatibility issues arrising from running
    applications using any of the two formats. However, libbpf was
    not extended to take care of the case when the application/libbpf
    uses the new format but the kernel only supports the old
    format. This patch adds support in libbpf for parsing the old
    format, before the need_wakeup flag was added, and emulating a
    set of static need_wakeup flags that will always work for the
    application.
    
    v2 -> v3:
    * Incorporated code improvements suggested by Jonathan Lemon
    
    v1 -> v2:
    * Rebased to bpf-next
    * Rewrote the code as the previous version made you blind
    
    Fixes: a4500432c2587cb2a ("libbpf: add support for need_wakeup flag in AF_XDP part")
    Reported-by: Eloy Degen <degeneloy@gmail.com>
    Signed-off-by: Magnus Karlsson <magnus.karlsson@intel.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Jonathan Lemon <jonathan.lemon@gmail.com>
    Link: https://lore.kernel.org/bpf/1571995035-21889-1-git-send-email-magnus.karlsson@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e380176dad397656d3315c1a72c1f057750154a0
Author: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
Date:   Tue Dec 17 17:09:33 2019 +0000

    drm/i915: Fix pid leak with banned clients
    
    commit f0f3a6cecf3b98990985cd42f7bf5a0313894822 upstream.
    
    Get_pid_task() needs to be paired with a put_pid or we leak a pid
    reference every time a banned client tries to create a context.
    
    v2:
     * task_pid_nr helper exists! (Chris)
    
    Signed-off-by: Tvrtko Ursulin <tvrtko.ursulin@intel.com>
    Fixes: b083a0870c79 ("drm/i915: Add per client max context ban limit")
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Mika Kuoppala <mika.kuoppala@intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191217170933.8108-1-tvrtko.ursulin@linux.intel.com
    (cherry picked from commit ba16a48af797db124ac100417f9229b1650ce1fb)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
