commit 6a60263487c4a8543275bcc707561369522bacba
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Jan 4 13:34:38 2020 +0100

    Linux 4.4.208

commit a6f738d2b10758922ec8e6d19a58c1bc2cac68a1
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Dec 12 12:55:29 2019 -0800

    tcp: do not send empty skb from tcp_write_xmit()
    
    [ Upstream commit 1f85e6267caca44b30c54711652b0726fadbb131 ]
    
    Backport of commit fdfc5c8594c2 ("tcp: remove empty skb from
    write queue in error cases") in linux-4.14 stable triggered
    various bugs. One of them has been fixed in commit ba2ddb43f270
    ("tcp: Don't dequeue SYN/FIN-segments from write-queue"), but
    we still have crashes in some occasions.
    
    Root-cause is that when tcp_sendmsg() has allocated a fresh
    skb and could not append a fragment before being blocked
    in sk_stream_wait_memory(), tcp_write_xmit() might be called
    and decide to send this fresh and empty skb.
    
    Sending an empty packet is not only silly, it might have caused
    many issues we had in the past with tp->packets_out being
    out of sync.
    
    Fixes: c65f7f00c587 ("[TCP]: Simplify SKB data portion allocation with NETIF_F_SG.")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Christoph Paasch <cpaasch@apple.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Cc: Jason Baron <jbaron@akamai.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43a86f8855cc7b0aa4c138b2486fd557379e2162
Author: Faiz Abbas <faiz_abbas@ti.com>
Date:   Fri Dec 6 17:13:26 2019 +0530

    mmc: sdhci: Update the tuning failed messages to pr_debug level
    
    [ Upstream commit 2c92dd20304f505b6ef43d206fff21bda8f1f0ae ]
    
    Tuning support in DDR50 speed mode was added in SD Specifications Part1
    Physical Layer Specification v3.01. Its not possible to distinguish
    between v3.00 and v3.01 from the SCR and that is why since
    commit 4324f6de6d2e ("mmc: core: enable CMD19 tuning for DDR50 mode")
    tuning failures are ignored in DDR50 speed mode.
    
    Cards compatible with v3.00 don't respond to CMD19 in DDR50 and this
    error gets printed during enumeration and also if retune is triggered at
    any time during operation. Update the printk level to pr_debug so that
    these errors don't lead to false error reports.
    
    Signed-off-by: Faiz Abbas <faiz_abbas@ti.com>
    Cc: stable@vger.kernel.org # v4.4+
    Link: https://lore.kernel.org/r/20191206114326.15856-1-faiz_abbas@ti.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f9fc3e64904b57db8aa83580adba11886e06f5d
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Nov 6 09:48:04 2019 -0800

    hrtimer: Annotate lockless access to timer->state
    
    commit 56144737e67329c9aaed15f942d46a6302e2e3d8 upstream.
    
    syzbot reported various data-race caused by hrtimer_is_queued() reading
    timer->state. A READ_ONCE() is required there to silence the warning.
    
    Also add the corresponding WRITE_ONCE() when timer->state is set.
    
    In remove_hrtimer() the hrtimer_is_queued() helper is open coded to avoid
    loading timer->state twice.
    
    KCSAN reported these cases:
    
    BUG: KCSAN: data-race in __remove_hrtimer / tcp_pacing_check
    
    write to 0xffff8880b2a7d388 of 1 bytes by interrupt on cpu 0:
     __remove_hrtimer+0x52/0x130 kernel/time/hrtimer.c:991
     __run_hrtimer kernel/time/hrtimer.c:1496 [inline]
     __hrtimer_run_queues+0x250/0x600 kernel/time/hrtimer.c:1576
     hrtimer_run_softirq+0x10e/0x150 kernel/time/hrtimer.c:1593
     __do_softirq+0x115/0x33f kernel/softirq.c:292
     run_ksoftirqd+0x46/0x60 kernel/softirq.c:603
     smpboot_thread_fn+0x37d/0x4a0 kernel/smpboot.c:165
     kthread+0x1d4/0x200 drivers/block/aoe/aoecmd.c:1253
     ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:352
    
    read to 0xffff8880b2a7d388 of 1 bytes by task 24652 on cpu 1:
     tcp_pacing_check net/ipv4/tcp_output.c:2235 [inline]
     tcp_pacing_check+0xba/0x130 net/ipv4/tcp_output.c:2225
     tcp_xmit_retransmit_queue+0x32c/0x5a0 net/ipv4/tcp_output.c:3044
     tcp_xmit_recovery+0x7c/0x120 net/ipv4/tcp_input.c:3558
     tcp_ack+0x17b6/0x3170 net/ipv4/tcp_input.c:3717
     tcp_rcv_established+0x37e/0xf50 net/ipv4/tcp_input.c:5696
     tcp_v4_do_rcv+0x381/0x4e0 net/ipv4/tcp_ipv4.c:1561
     sk_backlog_rcv include/net/sock.h:945 [inline]
     __release_sock+0x135/0x1e0 net/core/sock.c:2435
     release_sock+0x61/0x160 net/core/sock.c:2951
     sk_stream_wait_memory+0x3d7/0x7c0 net/core/stream.c:145
     tcp_sendmsg_locked+0xb47/0x1f30 net/ipv4/tcp.c:1393
     tcp_sendmsg+0x39/0x60 net/ipv4/tcp.c:1434
     inet_sendmsg+0x6d/0x90 net/ipv4/af_inet.c:807
     sock_sendmsg_nosec net/socket.c:637 [inline]
     sock_sendmsg+0x9f/0xc0 net/socket.c:657
    
    BUG: KCSAN: data-race in __remove_hrtimer / __tcp_ack_snd_check
    
    write to 0xffff8880a3a65588 of 1 bytes by interrupt on cpu 0:
     __remove_hrtimer+0x52/0x130 kernel/time/hrtimer.c:991
     __run_hrtimer kernel/time/hrtimer.c:1496 [inline]
     __hrtimer_run_queues+0x250/0x600 kernel/time/hrtimer.c:1576
     hrtimer_run_softirq+0x10e/0x150 kernel/time/hrtimer.c:1593
     __do_softirq+0x115/0x33f kernel/softirq.c:292
     invoke_softirq kernel/softirq.c:373 [inline]
     irq_exit+0xbb/0xe0 kernel/softirq.c:413
     exiting_irq arch/x86/include/asm/apic.h:536 [inline]
     smp_apic_timer_interrupt+0xe6/0x280 arch/x86/kernel/apic/apic.c:1137
     apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:830
    
    read to 0xffff8880a3a65588 of 1 bytes by task 22891 on cpu 1:
     __tcp_ack_snd_check+0x415/0x4f0 net/ipv4/tcp_input.c:5265
     tcp_ack_snd_check net/ipv4/tcp_input.c:5287 [inline]
     tcp_rcv_established+0x750/0xf50 net/ipv4/tcp_input.c:5708
     tcp_v4_do_rcv+0x381/0x4e0 net/ipv4/tcp_ipv4.c:1561
     sk_backlog_rcv include/net/sock.h:945 [inline]
     __release_sock+0x135/0x1e0 net/core/sock.c:2435
     release_sock+0x61/0x160 net/core/sock.c:2951
     sk_stream_wait_memory+0x3d7/0x7c0 net/core/stream.c:145
     tcp_sendmsg_locked+0xb47/0x1f30 net/ipv4/tcp.c:1393
     tcp_sendmsg+0x39/0x60 net/ipv4/tcp.c:1434
     inet_sendmsg+0x6d/0x90 net/ipv4/af_inet.c:807
     sock_sendmsg_nosec net/socket.c:637 [inline]
     sock_sendmsg+0x9f/0xc0 net/socket.c:657
     __sys_sendto+0x21f/0x320 net/socket.c:1952
     __do_sys_sendto net/socket.c:1964 [inline]
     __se_sys_sendto net/socket.c:1960 [inline]
     __x64_sys_sendto+0x89/0xb0 net/socket.c:1960
     do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 24652 Comm: syz-executor.3 Not tainted 5.4.0-rc3+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    [ tglx: Added comments ]
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lkml.kernel.org/r/20191106174804.74723-1-edumazet@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90c53fa12c2807f089088d394027478d2665d052
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Nov 8 10:34:47 2019 -0800

    net: icmp: fix data-race in cmp_global_allow()
    
    commit bbab7ef235031f6733b5429ae7877bfa22339712 upstream.
    
    This code reads two global variables without protection
    of a lock. We need READ_ONCE()/WRITE_ONCE() pairs to
    avoid load/store-tearing and better document the intent.
    
    KCSAN reported :
    BUG: KCSAN: data-race in icmp_global_allow / icmp_global_allow
    
    read to 0xffffffff861a8014 of 4 bytes by task 11201 on cpu 0:
     icmp_global_allow+0x36/0x1b0 net/ipv4/icmp.c:254
     icmpv6_global_allow net/ipv6/icmp.c:184 [inline]
     icmpv6_global_allow net/ipv6/icmp.c:179 [inline]
     icmp6_send+0x493/0x1140 net/ipv6/icmp.c:514
     icmpv6_send+0x71/0xb0 net/ipv6/ip6_icmp.c:43
     ip6_link_failure+0x43/0x180 net/ipv6/route.c:2640
     dst_link_failure include/net/dst.h:419 [inline]
     vti_xmit net/ipv4/ip_vti.c:243 [inline]
     vti_tunnel_xmit+0x27f/0xa50 net/ipv4/ip_vti.c:279
     __netdev_start_xmit include/linux/netdevice.h:4420 [inline]
     netdev_start_xmit include/linux/netdevice.h:4434 [inline]
     xmit_one net/core/dev.c:3280 [inline]
     dev_hard_start_xmit+0xef/0x430 net/core/dev.c:3296
     __dev_queue_xmit+0x14c9/0x1b60 net/core/dev.c:3873
     dev_queue_xmit+0x21/0x30 net/core/dev.c:3906
     neigh_direct_output+0x1f/0x30 net/core/neighbour.c:1530
     neigh_output include/net/neighbour.h:511 [inline]
     ip6_finish_output2+0x7a6/0xec0 net/ipv6/ip6_output.c:116
     __ip6_finish_output net/ipv6/ip6_output.c:142 [inline]
     __ip6_finish_output+0x2d7/0x330 net/ipv6/ip6_output.c:127
     ip6_finish_output+0x41/0x160 net/ipv6/ip6_output.c:152
     NF_HOOK_COND include/linux/netfilter.h:294 [inline]
     ip6_output+0xf2/0x280 net/ipv6/ip6_output.c:175
     dst_output include/net/dst.h:436 [inline]
     ip6_local_out+0x74/0x90 net/ipv6/output_core.c:179
    
    write to 0xffffffff861a8014 of 4 bytes by task 11183 on cpu 1:
     icmp_global_allow+0x174/0x1b0 net/ipv4/icmp.c:272
     icmpv6_global_allow net/ipv6/icmp.c:184 [inline]
     icmpv6_global_allow net/ipv6/icmp.c:179 [inline]
     icmp6_send+0x493/0x1140 net/ipv6/icmp.c:514
     icmpv6_send+0x71/0xb0 net/ipv6/ip6_icmp.c:43
     ip6_link_failure+0x43/0x180 net/ipv6/route.c:2640
     dst_link_failure include/net/dst.h:419 [inline]
     vti_xmit net/ipv4/ip_vti.c:243 [inline]
     vti_tunnel_xmit+0x27f/0xa50 net/ipv4/ip_vti.c:279
     __netdev_start_xmit include/linux/netdevice.h:4420 [inline]
     netdev_start_xmit include/linux/netdevice.h:4434 [inline]
     xmit_one net/core/dev.c:3280 [inline]
     dev_hard_start_xmit+0xef/0x430 net/core/dev.c:3296
     __dev_queue_xmit+0x14c9/0x1b60 net/core/dev.c:3873
     dev_queue_xmit+0x21/0x30 net/core/dev.c:3906
     neigh_direct_output+0x1f/0x30 net/core/neighbour.c:1530
     neigh_output include/net/neighbour.h:511 [inline]
     ip6_finish_output2+0x7a6/0xec0 net/ipv6/ip6_output.c:116
     __ip6_finish_output net/ipv6/ip6_output.c:142 [inline]
     __ip6_finish_output+0x2d7/0x330 net/ipv6/ip6_output.c:127
     ip6_finish_output+0x41/0x160 net/ipv6/ip6_output.c:152
     NF_HOOK_COND include/linux/netfilter.h:294 [inline]
     ip6_output+0xf2/0x280 net/ipv6/ip6_output.c:175
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 11183 Comm: syz-executor.2 Not tainted 5.4.0-rc3+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 4cdf507d5452 ("icmp: add a global rate limitation")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e49b8dbaeaad015e24d73cd521b9cc968276da5c
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Dec 7 14:43:39 2019 -0800

    netfilter: bridge: make sure to pull arp header in br_nf_forward_arp()
    
    commit 5604285839aaedfb23ebe297799c6e558939334d upstream.
    
    syzbot is kind enough to remind us we need to call skb_may_pull()
    
    BUG: KMSAN: uninit-value in br_nf_forward_arp+0xe61/0x1230 net/bridge/br_netfilter_hooks.c:665
    CPU: 1 PID: 11631 Comm: syz-executor.1 Not tainted 5.4.0-rc8-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x1c9/0x220 lib/dump_stack.c:118
     kmsan_report+0x128/0x220 mm/kmsan/kmsan_report.c:108
     __msan_warning+0x64/0xc0 mm/kmsan/kmsan_instr.c:245
     br_nf_forward_arp+0xe61/0x1230 net/bridge/br_netfilter_hooks.c:665
     nf_hook_entry_hookfn include/linux/netfilter.h:135 [inline]
     nf_hook_slow+0x18b/0x3f0 net/netfilter/core.c:512
     nf_hook include/linux/netfilter.h:260 [inline]
     NF_HOOK include/linux/netfilter.h:303 [inline]
     __br_forward+0x78f/0xe30 net/bridge/br_forward.c:109
     br_flood+0xef0/0xfe0 net/bridge/br_forward.c:234
     br_handle_frame_finish+0x1a77/0x1c20 net/bridge/br_input.c:162
     nf_hook_bridge_pre net/bridge/br_input.c:245 [inline]
     br_handle_frame+0xfb6/0x1eb0 net/bridge/br_input.c:348
     __netif_receive_skb_core+0x20b9/0x51a0 net/core/dev.c:4830
     __netif_receive_skb_one_core net/core/dev.c:4927 [inline]
     __netif_receive_skb net/core/dev.c:5043 [inline]
     process_backlog+0x610/0x13c0 net/core/dev.c:5874
     napi_poll net/core/dev.c:6311 [inline]
     net_rx_action+0x7a6/0x1aa0 net/core/dev.c:6379
     __do_softirq+0x4a1/0x83a kernel/softirq.c:293
     do_softirq_own_stack+0x49/0x80 arch/x86/entry/entry_64.S:1091
     </IRQ>
     do_softirq kernel/softirq.c:338 [inline]
     __local_bh_enable_ip+0x184/0x1d0 kernel/softirq.c:190
     local_bh_enable+0x36/0x40 include/linux/bottom_half.h:32
     rcu_read_unlock_bh include/linux/rcupdate.h:688 [inline]
     __dev_queue_xmit+0x38e8/0x4200 net/core/dev.c:3819
     dev_queue_xmit+0x4b/0x60 net/core/dev.c:3825
     packet_snd net/packet/af_packet.c:2959 [inline]
     packet_sendmsg+0x8234/0x9100 net/packet/af_packet.c:2984
     sock_sendmsg_nosec net/socket.c:637 [inline]
     sock_sendmsg net/socket.c:657 [inline]
     __sys_sendto+0xc44/0xc70 net/socket.c:1952
     __do_sys_sendto net/socket.c:1964 [inline]
     __se_sys_sendto+0x107/0x130 net/socket.c:1960
     __x64_sys_sendto+0x6e/0x90 net/socket.c:1960
     do_syscall_64+0xb6/0x160 arch/x86/entry/common.c:291
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x45a679
    Code: ad b6 fb ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 7b b6 fb ff c3 66 2e 0f 1f 84 00 00 00 00
    RSP: 002b:00007f0a3c9e5c78 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
    RAX: ffffffffffffffda RBX: 0000000000000006 RCX: 000000000045a679
    RDX: 000000000000000e RSI: 0000000020000200 RDI: 0000000000000003
    RBP: 000000000075bf20 R08: 00000000200000c0 R09: 0000000000000014
    R10: 0000000000000000 R11: 0000000000000246 R12: 00007f0a3c9e66d4
    R13: 00000000004c8ec1 R14: 00000000004dfe28 R15: 00000000ffffffff
    
    Uninit was created at:
     kmsan_save_stack_with_flags mm/kmsan/kmsan.c:149 [inline]
     kmsan_internal_poison_shadow+0x5c/0x110 mm/kmsan/kmsan.c:132
     kmsan_slab_alloc+0x97/0x100 mm/kmsan/kmsan_hooks.c:86
     slab_alloc_node mm/slub.c:2773 [inline]
     __kmalloc_node_track_caller+0xe27/0x11a0 mm/slub.c:4381
     __kmalloc_reserve net/core/skbuff.c:141 [inline]
     __alloc_skb+0x306/0xa10 net/core/skbuff.c:209
     alloc_skb include/linux/skbuff.h:1049 [inline]
     alloc_skb_with_frags+0x18c/0xa80 net/core/skbuff.c:5662
     sock_alloc_send_pskb+0xafd/0x10a0 net/core/sock.c:2244
     packet_alloc_skb net/packet/af_packet.c:2807 [inline]
     packet_snd net/packet/af_packet.c:2902 [inline]
     packet_sendmsg+0x63a6/0x9100 net/packet/af_packet.c:2984
     sock_sendmsg_nosec net/socket.c:637 [inline]
     sock_sendmsg net/socket.c:657 [inline]
     __sys_sendto+0xc44/0xc70 net/socket.c:1952
     __do_sys_sendto net/socket.c:1964 [inline]
     __se_sys_sendto+0x107/0x130 net/socket.c:1960
     __x64_sys_sendto+0x6e/0x90 net/socket.c:1960
     do_syscall_64+0xb6/0x160 arch/x86/entry/common.c:291
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: c4e70a87d975 ("netfilter: bridge: rename br_netfilter.c to br_netfilter_hooks.c")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 521b00fe8fafaf444f895882b3a2b3f912133fc8
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Dec 12 10:32:13 2019 -0800

    6pack,mkiss: fix possible deadlock
    
    commit 5c9934b6767b16ba60be22ec3cbd4379ad64170d upstream.
    
    We got another syzbot report [1] that tells us we must use
    write_lock_irq()/write_unlock_irq() to avoid possible deadlock.
    
    [1]
    
    WARNING: inconsistent lock state
    5.5.0-rc1-syzkaller #0 Not tainted
    --------------------------------
    inconsistent {HARDIRQ-ON-W} -> {IN-HARDIRQ-R} usage.
    syz-executor826/9605 [HC1[1]:SC0[0]:HE0:SE1] takes:
    ffffffff8a128718 (disc_data_lock){+-..}, at: sp_get.isra.0+0x1d/0xf0 drivers/net/ppp/ppp_synctty.c:138
    {HARDIRQ-ON-W} state was registered at:
      lock_acquire+0x190/0x410 kernel/locking/lockdep.c:4485
      __raw_write_lock_bh include/linux/rwlock_api_smp.h:203 [inline]
      _raw_write_lock_bh+0x33/0x50 kernel/locking/spinlock.c:319
      sixpack_close+0x1d/0x250 drivers/net/hamradio/6pack.c:657
      tty_ldisc_close.isra.0+0x119/0x1a0 drivers/tty/tty_ldisc.c:489
      tty_set_ldisc+0x230/0x6b0 drivers/tty/tty_ldisc.c:585
      tiocsetd drivers/tty/tty_io.c:2337 [inline]
      tty_ioctl+0xe8d/0x14f0 drivers/tty/tty_io.c:2597
      vfs_ioctl fs/ioctl.c:47 [inline]
      file_ioctl fs/ioctl.c:545 [inline]
      do_vfs_ioctl+0x977/0x14e0 fs/ioctl.c:732
      ksys_ioctl+0xab/0xd0 fs/ioctl.c:749
      __do_sys_ioctl fs/ioctl.c:756 [inline]
      __se_sys_ioctl fs/ioctl.c:754 [inline]
      __x64_sys_ioctl+0x73/0xb0 fs/ioctl.c:754
      do_syscall_64+0xfa/0x790 arch/x86/entry/common.c:294
      entry_SYSCALL_64_after_hwframe+0x49/0xbe
    irq event stamp: 3946
    hardirqs last  enabled at (3945): [<ffffffff87c86e43>] __raw_spin_unlock_irq include/linux/spinlock_api_smp.h:168 [inline]
    hardirqs last  enabled at (3945): [<ffffffff87c86e43>] _raw_spin_unlock_irq+0x23/0x80 kernel/locking/spinlock.c:199
    hardirqs last disabled at (3946): [<ffffffff8100675f>] trace_hardirqs_off_thunk+0x1a/0x1c arch/x86/entry/thunk_64.S:42
    softirqs last  enabled at (2658): [<ffffffff86a8b4df>] spin_unlock_bh include/linux/spinlock.h:383 [inline]
    softirqs last  enabled at (2658): [<ffffffff86a8b4df>] clusterip_netdev_event+0x46f/0x670 net/ipv4/netfilter/ipt_CLUSTERIP.c:222
    softirqs last disabled at (2656): [<ffffffff86a8b22b>] spin_lock_bh include/linux/spinlock.h:343 [inline]
    softirqs last disabled at (2656): [<ffffffff86a8b22b>] clusterip_netdev_event+0x1bb/0x670 net/ipv4/netfilter/ipt_CLUSTERIP.c:196
    
    other info that might help us debug this:
     Possible unsafe locking scenario:
    
           CPU0
           ----
      lock(disc_data_lock);
      <Interrupt>
        lock(disc_data_lock);
    
     *** DEADLOCK ***
    
    5 locks held by syz-executor826/9605:
     #0: ffff8880a905e198 (&tty->legacy_mutex){+.+.}, at: tty_lock+0xc7/0x130 drivers/tty/tty_mutex.c:19
     #1: ffffffff899a56c0 (rcu_read_lock){....}, at: mutex_spin_on_owner+0x0/0x330 kernel/locking/mutex.c:413
     #2: ffff8880a496a2b0 (&(&i->lock)->rlock){-.-.}, at: spin_lock include/linux/spinlock.h:338 [inline]
     #2: ffff8880a496a2b0 (&(&i->lock)->rlock){-.-.}, at: serial8250_interrupt+0x2d/0x1a0 drivers/tty/serial/8250/8250_core.c:116
     #3: ffffffff8c104048 (&port_lock_key){-.-.}, at: serial8250_handle_irq.part.0+0x24/0x330 drivers/tty/serial/8250/8250_port.c:1823
     #4: ffff8880a905e090 (&tty->ldisc_sem){++++}, at: tty_ldisc_ref+0x22/0x90 drivers/tty/tty_ldisc.c:288
    
    stack backtrace:
    CPU: 1 PID: 9605 Comm: syz-executor826 Not tainted 5.5.0-rc1-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x197/0x210 lib/dump_stack.c:118
     print_usage_bug.cold+0x327/0x378 kernel/locking/lockdep.c:3101
     valid_state kernel/locking/lockdep.c:3112 [inline]
     mark_lock_irq kernel/locking/lockdep.c:3309 [inline]
     mark_lock+0xbb4/0x1220 kernel/locking/lockdep.c:3666
     mark_usage kernel/locking/lockdep.c:3554 [inline]
     __lock_acquire+0x1e55/0x4a00 kernel/locking/lockdep.c:3909
     lock_acquire+0x190/0x410 kernel/locking/lockdep.c:4485
     __raw_read_lock include/linux/rwlock_api_smp.h:149 [inline]
     _raw_read_lock+0x32/0x50 kernel/locking/spinlock.c:223
     sp_get.isra.0+0x1d/0xf0 drivers/net/ppp/ppp_synctty.c:138
     sixpack_write_wakeup+0x25/0x340 drivers/net/hamradio/6pack.c:402
     tty_wakeup+0xe9/0x120 drivers/tty/tty_io.c:536
     tty_port_default_wakeup+0x2b/0x40 drivers/tty/tty_port.c:50
     tty_port_tty_wakeup+0x57/0x70 drivers/tty/tty_port.c:387
     uart_write_wakeup+0x46/0x70 drivers/tty/serial/serial_core.c:104
     serial8250_tx_chars+0x495/0xaf0 drivers/tty/serial/8250/8250_port.c:1761
     serial8250_handle_irq.part.0+0x2a2/0x330 drivers/tty/serial/8250/8250_port.c:1834
     serial8250_handle_irq drivers/tty/serial/8250/8250_port.c:1820 [inline]
     serial8250_default_handle_irq+0xc0/0x150 drivers/tty/serial/8250/8250_port.c:1850
     serial8250_interrupt+0xf1/0x1a0 drivers/tty/serial/8250/8250_core.c:126
     __handle_irq_event_percpu+0x15d/0x970 kernel/irq/handle.c:149
     handle_irq_event_percpu+0x74/0x160 kernel/irq/handle.c:189
     handle_irq_event+0xa7/0x134 kernel/irq/handle.c:206
     handle_edge_irq+0x25e/0x8d0 kernel/irq/chip.c:830
     generic_handle_irq_desc include/linux/irqdesc.h:156 [inline]
     do_IRQ+0xde/0x280 arch/x86/kernel/irq.c:250
     common_interrupt+0xf/0xf arch/x86/entry/entry_64.S:607
     </IRQ>
    RIP: 0010:cpu_relax arch/x86/include/asm/processor.h:685 [inline]
    RIP: 0010:mutex_spin_on_owner+0x247/0x330 kernel/locking/mutex.c:579
    Code: c3 be 08 00 00 00 4c 89 e7 e8 e5 06 59 00 4c 89 e0 48 c1 e8 03 42 80 3c 38 00 0f 85 e1 00 00 00 49 8b 04 24 a8 01 75 96 f3 90 <e9> 2f fe ff ff 0f 0b e8 0d 19 09 00 84 c0 0f 85 ff fd ff ff 48 c7
    RSP: 0018:ffffc90001eafa20 EFLAGS: 00000246 ORIG_RAX: ffffffffffffffd7
    RAX: 0000000000000000 RBX: ffff88809fd9e0c0 RCX: 1ffffffff13266dd
    RDX: 0000000000000000 RSI: 0000000000000008 RDI: 0000000000000000
    RBP: ffffc90001eafa60 R08: 1ffff11013d22898 R09: ffffed1013d22899
    R10: ffffed1013d22898 R11: ffff88809e9144c7 R12: ffff8880a905e138
    R13: ffff88809e9144c0 R14: 0000000000000000 R15: dffffc0000000000
     mutex_optimistic_spin kernel/locking/mutex.c:673 [inline]
     __mutex_lock_common kernel/locking/mutex.c:962 [inline]
     __mutex_lock+0x32b/0x13c0 kernel/locking/mutex.c:1106
     mutex_lock_nested+0x16/0x20 kernel/locking/mutex.c:1121
     tty_lock+0xc7/0x130 drivers/tty/tty_mutex.c:19
     tty_release+0xb5/0xe90 drivers/tty/tty_io.c:1665
     __fput+0x2ff/0x890 fs/file_table.c:280
     ____fput+0x16/0x20 fs/file_table.c:313
     task_work_run+0x145/0x1c0 kernel/task_work.c:113
     exit_task_work include/linux/task_work.h:22 [inline]
     do_exit+0x8e7/0x2ef0 kernel/exit.c:797
     do_group_exit+0x135/0x360 kernel/exit.c:895
     __do_sys_exit_group kernel/exit.c:906 [inline]
     __se_sys_exit_group kernel/exit.c:904 [inline]
     __x64_sys_exit_group+0x44/0x50 kernel/exit.c:904
     do_syscall_64+0xfa/0x790 arch/x86/entry/common.c:294
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    RIP: 0033:0x43fef8
    Code: Bad RIP value.
    RSP: 002b:00007ffdb07d2338 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7
    RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 000000000043fef8
    RDX: 0000000000000000 RSI: 000000000000003c RDI: 0000000000000000
    RBP: 00000000004bf730 R08: 00000000000000e7 R09: ffffffffffffffd0
    R10: 00000000004002c8 R11: 0000000000000246 R12: 0000000000000001
    R13: 00000000006d1180 R14: 0000000000000000 R15: 0000000000000000
    
    Fixes: 6e4e2f811bad ("6pack,mkiss: fix lock inconsistency")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 315f24df6b96f42b8af958cc2b1391c5453a8be4
Author: Florian Westphal <fw@strlen.de>
Date:   Sun Dec 15 03:49:25 2019 +0100

    netfilter: ebtables: compat: reject all padding in matches/watchers
    
    commit e608f631f0ba5f1fc5ee2e260a3a35d13107cbfe upstream.
    
    syzbot reported following splat:
    
    BUG: KASAN: vmalloc-out-of-bounds in size_entry_mwt net/bridge/netfilter/ebtables.c:2063 [inline]
    BUG: KASAN: vmalloc-out-of-bounds in compat_copy_entries+0x128b/0x1380 net/bridge/netfilter/ebtables.c:2155
    Read of size 4 at addr ffffc900004461f4 by task syz-executor267/7937
    
    CPU: 1 PID: 7937 Comm: syz-executor267 Not tainted 5.5.0-rc1-syzkaller #0
     size_entry_mwt net/bridge/netfilter/ebtables.c:2063 [inline]
     compat_copy_entries+0x128b/0x1380 net/bridge/netfilter/ebtables.c:2155
     compat_do_replace+0x344/0x720 net/bridge/netfilter/ebtables.c:2249
     compat_do_ebt_set_ctl+0x22f/0x27e net/bridge/netfilter/ebtables.c:2333
     [..]
    
    Because padding isn't considered during computation of ->buf_user_offset,
    "total" is decremented by fewer bytes than it should.
    
    Therefore, the first part of
    
    if (*total < sizeof(*entry) || entry->next_offset < sizeof(*entry))
    
    will pass, -- it should not have.  This causes oob access:
    entry->next_offset is past the vmalloced size.
    
    Reject padding and check that computed user offset (sum of ebt_entry
    structure plus all individual matches/watchers/targets) is same
    value that userspace gave us as the offset of the next entry.
    
    Reported-by: syzbot+f68108fed972453a0ad4@syzkaller.appspotmail.com
    Fixes: 81e675c227ec ("netfilter: ebtables: add CONFIG_COMPAT support")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75d70b155dffed9b4f0feebeae0012ebac495d6f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Jan 29 12:39:10 2016 +0100

    net: davinci_cpdma: use dma_addr_t for DMA address
    
    commit 84092996673211f16ef3b942a191d7952e9dfea9 upstream.
    
    The davinci_cpdma mixes up physical addresses as seen from the CPU
    and DMA addresses as seen from a DMA master, since it can operate
    on both normal memory or an on-chip buffer. If dma_addr_t is
    different from phys_addr_t, this means we get a compile-time warning
    about the type mismatch:
    
    ethernet/ti/davinci_cpdma.c: In function 'cpdma_desc_pool_create':
    ethernet/ti/davinci_cpdma.c:182:48: error: passing argument 3 of 'dma_alloc_coherent' from incompatible pointer type [-Werror=incompatible-pointer-types]
       pool->cpumap = dma_alloc_coherent(dev, size, &pool->phys,
    In file included from ethernet/ti/davinci_cpdma.c:21:0:
    dma-mapping.h:398:21: note: expected 'dma_addr_t * {aka long long unsigned int *}' but argument is of type 'phys_addr_t * {aka unsigned int *}'
     static inline void *dma_alloc_coherent(struct device *dev, size_t size,
    
    This slightly restructures the code so the address we use for
    mapping RAM into a DMA address is always a dma_addr_t, avoiding
    the warning. The code is correct even if both types are 32-bit
    because the DMA master in this device only supports 32-bit addressing
    anyway, independent of the types that are used.
    
    We still assign this value to pool->phys, and that is wrong if
    the driver is ever used with an IOMMU, but that value appears to
    be never used, so there is no problem really. I've added a couple
    of comments about where we do things that are slightly violating
    the API.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Daniel Wagner <dwagner@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d41a0c34053b38a687087747f7d76494aa9f05c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Oct 18 18:41:16 2019 -0400

    filldir[64]: remove WARN_ON_ONCE() for bad directory entries
    
    commit b9959c7a347d6adbb558fba7e36e9fef3cba3b07 upstream.
    
    This was always meant to be a temporary thing, just for testing and to
    see if it actually ever triggered.
    
    The only thing that reported it was syzbot doing disk image fuzzing, and
    then that warning is expected.  So let's just remove it before -rc4,
    because the extra sanity testing should probably go to -stable, but we
    don't want the warning to do so.
    
    Reported-by: syzbot+3031f712c7ad5dd4d926@syzkaller.appspotmail.com
    Fixes: 8a23eb804ca4 ("Make filldir[64]() verify the directory entry filename is valid")
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Siddharth Chandrasekaran <csiddharth@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cce8d88a5a2735305198c23fa944737c2a1b3939
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 5 11:32:52 2019 -0700

    Make filldir[64]() verify the directory entry filename is valid
    
    commit 8a23eb804ca4f2be909e372cf5a9e7b30ae476cd upstream.
    
    This has been discussed several times, and now filesystem people are
    talking about doing it individually at the filesystem layer, so head
    that off at the pass and just do it in getdents{64}().
    
    This is partially based on a patch by Jann Horn, but checks for NUL
    bytes as well, and somewhat simplified.
    
    There's also commentary about how it might be better if invalid names
    due to filesystem corruption don't cause an immediate failure, but only
    an error at the end of the readdir(), so that people can still see the
    filenames that are ok.
    
    There's also been discussion about just how much POSIX strictly speaking
    requires this since it's about filesystem corruption.  It's really more
    "protect user space from bad behavior" as pointed out by Jann.  But
    since Eric Biederman looked up the POSIX wording, here it is for context:
    
     "From readdir:
    
       The readdir() function shall return a pointer to a structure
       representing the directory entry at the current position in the
       directory stream specified by the argument dirp, and position the
       directory stream at the next entry. It shall return a null pointer
       upon reaching the end of the directory stream. The structure dirent
       defined in the <dirent.h> header describes a directory entry.
    
      From definitions:
    
       3.129 Directory Entry (or Link)
    
       An object that associates a filename with a file. Several directory
       entries can associate names with the same file.
    
      ...
    
       3.169 Filename
    
       A name consisting of 1 to {NAME_MAX} bytes used to name a file. The
       characters composing the name may be selected from the set of all
       character values excluding the slash character and the null byte. The
       filenames dot and dot-dot have special meaning. A filename is
       sometimes referred to as a 'pathname component'."
    
    Note that I didn't bother adding the checks to any legacy interfaces
    that nobody uses.
    
    Also note that if this ends up being noticeable as a performance
    regression, we can fix that to do a much more optimized model that
    checks for both NUL and '/' at the same time one word at a time.
    
    We haven't really tended to optimize 'memchr()', and it only checks for
    one pattern at a time anyway, and we really _should_ check for NUL too
    (but see the comment about "soft errors" in the code about why it
    currently only checks for '/')
    
    See the CONFIG_DCACHE_WORD_ACCESS case of hash_name() for how the name
    lookup code looks for pathname terminating characters in parallel.
    
    Link: https://lore.kernel.org/lkml/20190118161440.220134-2-jannh@google.com/
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Jann Horn <jannh@google.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Siddharth Chandrasekaran <csiddharth@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bb7431dec3f8d3609c9be6d6fad22220736297f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Dec 16 16:12:24 2019 +0100

    ALSA: hda - Downgrade error message for single-cmd fallback
    
    [ Upstream commit 475feec0c41ad71cb7d02f0310e56256606b57c5 ]
    
    We made the error message for the CORB/RIRB communication clearer by
    upgrading to dev_WARN() so that user can notice better.  But this
    struck us like a boomerang: now it caught syzbot and reported back as
    a fatal issue although it's not really any too serious bug that worth
    for stopping the whole system.
    
    OK, OK, let's be softy, downgrade it to the standard dev_err() again.
    
    Fixes: dd65f7e19c69 ("ALSA: hda - Show the fatal CORB/RIRB error more clearly")
    Reported-by: syzbot+b3028ac3933f5c466389@syzkaller.appspotmail.com
    Link: https://lore.kernel.org/r/20191216151224.30013-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c31663c4d97e992bec8d592eba61050722fa5f44
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Sat Nov 30 17:56:08 2019 -0800

    kernel: sysctl: make drop_caches write-only
    
    [ Upstream commit 204cb79ad42f015312a5bbd7012d09c93d9b46fb ]
    
    Currently, the drop_caches proc file and sysctl read back the last value
    written, suggesting this is somehow a stateful setting instead of a
    one-time command.  Make it write-only, like e.g.  compact_memory.
    
    While mitigating a VM problem at scale in our fleet, there was confusion
    about whether writing to this file will permanently switch the kernel into
    a non-caching mode.  This influences the decision making in a tense
    situation, where tens of people are trying to fix tens of thousands of
    affected machines: Do we need a rollback strategy?  What are the
    performance implications of operating in a non-caching state for several
    days?  It also caused confusion when the kernel team said we may need to
    write the file several times to make sure it's effective ("But it already
    reads back 3?").
    
    Link: http://lkml.kernel.org/r/20191031221602.9375-1-hannes@cmpxchg.org
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Chris Down <chris@chrisdown.name>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Acked-by: David Hildenbrand <david@redhat.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Alexey Dobriyan <adobriyan@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ee2b8c6968cb38cc92dbe112cb7804364b9c64c
Author: Ding Xiang <dingxiang@cmss.chinamobile.com>
Date:   Sat Nov 30 17:49:12 2019 -0800

    ocfs2: fix passing zero to 'PTR_ERR' warning
    
    [ Upstream commit 188c523e1c271d537f3c9f55b6b65bf4476de32f ]
    
    Fix a static code checker warning:
    fs/ocfs2/acl.c:331
            ocfs2_acl_chmod() warn: passing zero to 'PTR_ERR'
    
    Link: http://lkml.kernel.org/r/1dee278b-6c96-eec2-ce76-fe6e07c6e20f@linux.alibaba.com
    Fixes: 5ee0fbd50fd ("ocfs2: revert using ocfs2_acl_chmod to avoid inode cluster lock hang")
    Signed-off-by: Ding Xiang <dingxiang@cmss.chinamobile.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f480ec73a07e585c866ddd51ffbe7c7952021810
Author: Thomas Richter <tmricht@linux.ibm.com>
Date:   Fri Nov 22 16:43:15 2019 +0100

    s390/cpum_sf: Check for SDBT and SDB consistency
    
    [ Upstream commit 247f265fa502e7b17a0cb0cc330e055a36aafce4 ]
    
    Each SBDT is located at a 4KB page and contains 512 entries.
    Each entry of a SDBT points to a SDB, a 4KB page containing
    sampled data. The last entry is a link to another SDBT page.
    
    When an event is created the function sequence executed is:
    
      __hw_perf_event_init()
      +--> allocate_buffers()
           +--> realloc_sampling_buffers()
                +---> alloc_sample_data_block()
    
    Both functions realloc_sampling_buffers() and
    alloc_sample_data_block() allocate pages and the allocation
    can fail. This is handled correctly and all allocated
    pages are freed and error -ENOMEM is returned to the
    top calling function. Finally the event is not created.
    
    Once the event has been created, the amount of initially
    allocated SDBT and SDB can be too low. This is detected
    during measurement interrupt handling, where the amount
    of lost samples is calculated. If the number of lost samples
    is too high considering sampling frequency and already allocated
    SBDs, the number of SDBs is enlarged during the next execution
    of cpumsf_pmu_enable().
    
    If more SBDs need to be allocated, functions
    
           realloc_sampling_buffers()
           +---> alloc-sample_data_block()
    
    are called to allocate more pages. Page allocation may fail
    and the returned error is ignored. A SDBT and SDB setup
    already exists.
    
    However the modified SDBTs and SDBs might end up in a situation
    where the first entry of an SDBT does not point to an SDB,
    but another SDBT, basicly an SBDT without payload.
    This can not be handled by the interrupt handler, where an SDBT
    must have at least one entry pointing to an SBD.
    
    Add a check to avoid SDBTs with out payload (SDBs) when enlarging
    the buffer setup.
    
    Signed-off-by: Thomas Richter <tmricht@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58ebfe8f929cdd27c45604f3934d5b3a6c98cb93
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Nov 13 16:12:02 2019 +0900

    libfdt: define INT32_MAX and UINT32_MAX in libfdt_env.h
    
    [ Upstream commit a8de1304b7df30e3a14f2a8b9709bb4ff31a0385 ]
    
    The DTC v1.5.1 added references to (U)INT32_MAX.
    
    This is no problem for user-space programs since <stdint.h> defines
    (U)INT32_MAX along with (u)int32_t.
    
    For the kernel space, libfdt_env.h needs to be adjusted before we
    pull in the changes.
    
    In the kernel, we usually use s/u32 instead of (u)int32_t for the
    fixed-width types.
    
    Accordingly, we already have S/U32_MAX for their max values.
    So, we should not add (U)INT32_MAX to <linux/limits.h> any more.
    
    Instead, add them to the in-kernel libfdt_env.h to compile the
    latest libfdt.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89852a87cf2f6ab77410cd12bbbe9ee6945c47b7
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Wed Nov 27 10:13:34 2019 -0300

    perf regs: Make perf_reg_name() return "unknown" instead of NULL
    
    [ Upstream commit 5b596e0ff0e1852197d4c82d3314db5e43126bf7 ]
    
    To avoid breaking the build on arches where this is not wired up, at
    least all the other features should be made available and when using
    this specific routine, the "unknown" should point the user/developer to
    the need to wire this up on this particular hardware architecture.
    
    Detected in a container mipsel debian cross build environment, where it
    shows up as:
    
      In file included from /usr/mipsel-linux-gnu/include/stdio.h:867,
                       from /git/linux/tools/perf/lib/include/perf/cpumap.h:6,
                       from util/session.c:13:
      In function 'printf',
          inlined from 'regs_dump__printf' at util/session.c:1103:3,
          inlined from 'regs__printf' at util/session.c:1131:2:
      /usr/mipsel-linux-gnu/include/bits/stdio2.h:107:10: error: '%-5s' directive argument is null [-Werror=format-overflow=]
        107 |   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
            |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    cross compiler details:
    
      mipsel-linux-gnu-gcc (Debian 9.2.1-8) 9.2.1 20190909
    
    Also on mips64:
    
      In file included from /usr/mips64-linux-gnuabi64/include/stdio.h:867,
                       from /git/linux/tools/perf/lib/include/perf/cpumap.h:6,
                       from util/session.c:13:
      In function 'printf',
          inlined from 'regs_dump__printf' at util/session.c:1103:3,
          inlined from 'regs__printf' at util/session.c:1131:2,
          inlined from 'regs_user__printf' at util/session.c:1139:3,
          inlined from 'dump_sample' at util/session.c:1246:3,
          inlined from 'machines__deliver_event' at util/session.c:1421:3:
      /usr/mips64-linux-gnuabi64/include/bits/stdio2.h:107:10: error: '%-5s' directive argument is null [-Werror=format-overflow=]
        107 |   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
            |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      In function 'printf',
          inlined from 'regs_dump__printf' at util/session.c:1103:3,
          inlined from 'regs__printf' at util/session.c:1131:2,
          inlined from 'regs_intr__printf' at util/session.c:1147:3,
          inlined from 'dump_sample' at util/session.c:1249:3,
          inlined from 'machines__deliver_event' at util/session.c:1421:3:
      /usr/mips64-linux-gnuabi64/include/bits/stdio2.h:107:10: error: '%-5s' directive argument is null [-Werror=format-overflow=]
        107 |   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
            |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    cross compiler details:
    
      mips64-linux-gnuabi64-gcc (Debian 9.2.1-8) 9.2.1 20190909
    
    Fixes: 2bcd355b71da ("perf tools: Add interface to arch registers sets")
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: https://lkml.kernel.org/n/tip-95wjyv4o65nuaeweq31t7l1s@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e53915bcd2bde5e86f896e47287be485ca4acebb
Author: Diego Elio Pettenò <flameeyes@flameeyes.com>
Date:   Tue Nov 19 21:37:08 2019 +0000

    cdrom: respect device capabilities during opening action
    
    [ Upstream commit 366ba7c71ef77c08d06b18ad61b26e2df7352338 ]
    
    Reading the TOC only works if the device can play audio, otherwise
    these commands fail (and possibly bring the device to an unhealthy
    state.)
    
    Similarly, cdrom_mmc3_profile() should only be called if the device
    supports generic packet commands.
    
    To: Jens Axboe <axboe@kernel.dk>
    Cc: linux-kernel@vger.kernel.org
    Cc: linux-scsi@vger.kernel.org
    Signed-off-by: Diego Elio Pettenò <flameeyes@flameeyes.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f9d7ba584a152f56e90821272f51ea32cfa3c65
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Sun Nov 24 01:04:30 2019 +0900

    scripts/kallsyms: fix definitely-lost memory leak
    
    [ Upstream commit 21915eca088dc271c970e8351290e83d938114ac ]
    
    build_initial_tok_table() overwrites unused sym_entry to shrink the
    table size. Before the entry is overwritten, table[i].sym must be freed
    since it is malloc'ed data.
    
    This fixes the 'definitely lost' report from valgrind. I ran valgrind
    against x86_64_defconfig of v5.4-rc8 kernel, and here is the summary:
    
    [Before the fix]
    
      LEAK SUMMARY:
         definitely lost: 53,184 bytes in 2,874 blocks
    
    [After the fix]
    
      LEAK SUMMARY:
         definitely lost: 0 bytes in 0 blocks
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d67e58d136fa6da2afca278d1f24c6f8307ef19a
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Fri Nov 15 14:55:51 2019 +0200

    gpio: mpc8xxx: Don't overwrite default irq_set_type callback
    
    [ Upstream commit 4e50573f39229d5e9c985fa3b4923a8b29619ade ]
    
    The per-SoC devtype structures can contain their own callbacks that
    overwrite mpc8xxx_gpio_devtype_default.
    
    The clear intention is that mpc8xxx_irq_set_type is used in case the SoC
    does not specify a more specific callback. But what happens is that if
    the SoC doesn't specify one, its .irq_set_type is de-facto NULL, and
    this overwrites mpc8xxx_irq_set_type to a no-op. This means that the
    following SoCs are affected:
    
    - fsl,mpc8572-gpio
    - fsl,ls1028a-gpio
    - fsl,ls1088a-gpio
    
    On these boards, the irq_set_type does exactly nothing, and the GPIO
    controller keeps its GPICR register in the hardware-default state. On
    the LS1028A, that is ACTIVE_BOTH, which means 2 interrupts are raised
    even if the IRQ client requests LEVEL_HIGH. Another implication is that
    the IRQs are not checked (e.g. level-triggered interrupts are not
    rejected, although they are not supported).
    
    Fixes: 82e39b0d8566 ("gpio: mpc8xxx: handle differences between incarnations at a single place")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Link: https://lore.kernel.org/r/20191115125551.31061-1-olteanv@gmail.com
    Tested-by: Michael Walle <michael@walle.cc>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d008481a830e7099b2d0d093a9e8f31dafba4095
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Nov 13 14:05:08 2019 -0800

    scsi: target: iscsi: Wait for all commands to finish before freeing a session
    
    [ Upstream commit e9d3009cb936bd0faf0719f68d98ad8afb1e613b ]
    
    The iSCSI target driver is the only target driver that does not wait for
    ongoing commands to finish before freeing a session. Make the iSCSI target
    driver wait for ongoing commands to finish before freeing a session. This
    patch fixes the following KASAN complaint:
    
    BUG: KASAN: use-after-free in __lock_acquire+0xb1a/0x2710
    Read of size 8 at addr ffff8881154eca70 by task kworker/0:2/247
    
    CPU: 0 PID: 247 Comm: kworker/0:2 Not tainted 5.4.0-rc1-dbg+ #6
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-1 04/01/2014
    Workqueue: target_completion target_complete_ok_work [target_core_mod]
    Call Trace:
     dump_stack+0x8a/0xd6
     print_address_description.constprop.0+0x40/0x60
     __kasan_report.cold+0x1b/0x33
     kasan_report+0x16/0x20
     __asan_load8+0x58/0x90
     __lock_acquire+0xb1a/0x2710
     lock_acquire+0xd3/0x200
     _raw_spin_lock_irqsave+0x43/0x60
     target_release_cmd_kref+0x162/0x7f0 [target_core_mod]
     target_put_sess_cmd+0x2e/0x40 [target_core_mod]
     lio_check_stop_free+0x12/0x20 [iscsi_target_mod]
     transport_cmd_check_stop_to_fabric+0xd8/0xe0 [target_core_mod]
     target_complete_ok_work+0x1b0/0x790 [target_core_mod]
     process_one_work+0x549/0xa40
     worker_thread+0x7a/0x5d0
     kthread+0x1bc/0x210
     ret_from_fork+0x24/0x30
    
    Allocated by task 889:
     save_stack+0x23/0x90
     __kasan_kmalloc.constprop.0+0xcf/0xe0
     kasan_slab_alloc+0x12/0x20
     kmem_cache_alloc+0xf6/0x360
     transport_alloc_session+0x29/0x80 [target_core_mod]
     iscsi_target_login_thread+0xcd6/0x18f0 [iscsi_target_mod]
     kthread+0x1bc/0x210
     ret_from_fork+0x24/0x30
    
    Freed by task 1025:
     save_stack+0x23/0x90
     __kasan_slab_free+0x13a/0x190
     kasan_slab_free+0x12/0x20
     kmem_cache_free+0x146/0x400
     transport_free_session+0x179/0x2f0 [target_core_mod]
     transport_deregister_session+0x130/0x180 [target_core_mod]
     iscsit_close_session+0x12c/0x350 [iscsi_target_mod]
     iscsit_logout_post_handler+0x136/0x380 [iscsi_target_mod]
     iscsit_response_queue+0x8de/0xbe0 [iscsi_target_mod]
     iscsi_target_tx_thread+0x27f/0x370 [iscsi_target_mod]
     kthread+0x1bc/0x210
     ret_from_fork+0x24/0x30
    
    The buggy address belongs to the object at ffff8881154ec9c0
     which belongs to the cache se_sess_cache of size 352
    The buggy address is located 176 bytes inside of
     352-byte region [ffff8881154ec9c0, ffff8881154ecb20)
    The buggy address belongs to the page:
    page:ffffea0004553b00 refcount:1 mapcount:0 mapping:ffff888101755400 index:0x0 compound_mapcount: 0
    flags: 0x2fff000000010200(slab|head)
    raw: 2fff000000010200 dead000000000100 dead000000000122 ffff888101755400
    raw: 0000000000000000 0000000080130013 00000001ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff8881154ec900: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
     ffff8881154ec980: fc fc fc fc fc fc fc fc fb fb fb fb fb fb fb fb
    >ffff8881154eca00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                                                 ^
     ffff8881154eca80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff8881154ecb00: fb fb fb fb fc fc fc fc fc fc fc fc fc fc fc fc
    
    Cc: Mike Christie <mchristi@redhat.com>
    Link: https://lore.kernel.org/r/20191113220508.198257-3-bvanassche@acm.org
    Reviewed-by: Roman Bolshakov <r.bolshakov@yadro.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 409ac8803ca3eba83d37064b44110b1e1d7dc536
Author: peter chang <dpf@google.com>
Date:   Thu Nov 14 15:38:58 2019 +0530

    scsi: pm80xx: Fix for SATA device discovery
    
    [ Upstream commit ce21c63ee995b7a8b7b81245f2cee521f8c3c220 ]
    
    Driver was missing complete() call in mpi_sata_completion which result in
    SATA abort error handling timing out. That causes the device to be left in
    the in_recovery state so subsequent commands sent to the device fail and
    the OS removes access to it.
    
    Link: https://lore.kernel.org/r/20191114100910.6153-2-deepak.ukey@microchip.com
    Acked-by: Jack Wang <jinpu.wang@cloud.ionos.com>
    Signed-off-by: peter chang <dpf@google.com>
    Signed-off-by: Deepak Ukey <deepak.ukey@microchip.com>
    Signed-off-by: Viswas G <Viswas.G@microchip.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a5a9d02428d4e8c181413a51f7bcf0d7080dbf3
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Nov 11 22:18:13 2019 -0500

    ext4: work around deleting a file with i_nlink == 0 safely
    
    [ Upstream commit c7df4a1ecb8579838ec8c56b2bb6a6716e974f37 ]
    
    If the file system is corrupted such that a file's i_links_count is
    too small, then it's possible that when unlinking that file, i_nlink
    will already be zero.  Previously we were working around this kind of
    corruption by forcing i_nlink to one; but we were doing this before
    trying to delete the directory entry --- and if the file system is
    corrupted enough that ext4_delete_entry() fails, then we exit with
    i_nlink elevated, and this causes the orphan inode list handling to be
    FUBAR'ed, such that when we unmount the file system, the orphan inode
    list can get corrupted.
    
    A better way to fix this is to simply skip trying to call drop_nlink()
    if i_nlink is already zero, thus moving the check to the place where
    it makes the most sense.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=205433
    
    Link: https://lore.kernel.org/r/20191112032903.8828-1-tytso@mit.edu
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8de68e22e16bc503b573a2d1c81a322346c0b5b
Author: Blaž Hrastnik <blaz@mxxn.io>
Date:   Wed Nov 6 20:02:46 2019 +0900

    HID: Improve Windows Precision Touchpad detection.
    
    [ Upstream commit 2dbc6f113acd74c66b04bf49fb027efd830b1c5a ]
    
    Per Microsoft spec, usage 0xC5 (page 0xFF) returns a blob containing
    data used to verify the touchpad as a Windows Precision Touchpad.
    
       0x85, REPORTID_PTPHQA,    //    REPORT_ID (PTPHQA)
        0x09, 0xC5,              //    USAGE (Vendor Usage 0xC5)
        0x15, 0x00,              //    LOGICAL_MINIMUM (0)
        0x26, 0xff, 0x00,        //    LOGICAL_MAXIMUM (0xff)
        0x75, 0x08,              //    REPORT_SIZE (8)
        0x96, 0x00, 0x01,        //    REPORT_COUNT (0x100 (256))
        0xb1, 0x02,              //    FEATURE (Data,Var,Abs)
    
    However, some devices, namely Microsoft's Surface line of products
    instead implement a "segmented device certification report" (usage 0xC6)
    which returns the same report, but in smaller chunks.
    
        0x06, 0x00, 0xff,        //     USAGE_PAGE (Vendor Defined)
        0x85, REPORTID_PTPHQA,   //     REPORT_ID (PTPHQA)
        0x09, 0xC6,              //     USAGE (Vendor usage for segment #)
        0x25, 0x08,              //     LOGICAL_MAXIMUM (8)
        0x75, 0x08,              //     REPORT_SIZE (8)
        0x95, 0x01,              //     REPORT_COUNT (1)
        0xb1, 0x02,              //     FEATURE (Data,Var,Abs)
        0x09, 0xC7,              //     USAGE (Vendor Usage)
        0x26, 0xff, 0x00,        //     LOGICAL_MAXIMUM (0xff)
        0x95, 0x20,              //     REPORT_COUNT (32)
        0xb1, 0x02,              //     FEATURE (Data,Var,Abs)
    
    By expanding Win8 touchpad detection to also look for the segmented
    report, all Surface touchpads are now properly recognized by
    hid-multitouch.
    
    Signed-off-by: Blaž Hrastnik <blaz@mxxn.io>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 436cb5b3e75878c09ef2c61d67151ebe76ba9a37
Author: Coly Li <colyli@suse.de>
Date:   Wed Nov 13 16:03:24 2019 +0800

    bcache: at least try to shrink 1 node in bch_mca_scan()
    
    [ Upstream commit 9fcc34b1a6dd4b8e5337e2b6ef45e428897eca6b ]
    
    In bch_mca_scan(), the number of shrinking btree node is calculated
    by code like this,
            unsigned long nr = sc->nr_to_scan;
    
            nr /= c->btree_pages;
            nr = min_t(unsigned long, nr, mca_can_free(c));
    variable sc->nr_to_scan is number of objects (here is bcache B+tree
    nodes' number) to shrink, and pointer variable sc is sent from memory
    management code as parametr of a callback.
    
    If sc->nr_to_scan is smaller than c->btree_pages, after the above
    calculation, variable 'nr' will be 0 and nothing will be shrunk. It is
    frequeently observed that only 1 or 2 is set to sc->nr_to_scan and make
    nr to be zero. Then bch_mca_scan() will do nothing more then acquiring
    and releasing mutex c->bucket_lock.
    
    This patch checkes whether nr is 0 after the above calculation, if 0
    is the result then set 1 to variable 'n'. Then at least bch_mca_scan()
    will try to shrink a single B+tree node.
    
    Signed-off-by: Coly Li <colyli@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90d2e86ab1da49d59aaaacd72a5faf5e6d0e1ca2
Author: Robert Jarzmik <robert.jarzmik@free.fr>
Date:   Sat Oct 26 21:44:20 2019 +0200

    clk: pxa: fix one of the pxa RTC clocks
    
    [ Upstream commit 46acbcb4849b2ca2e6e975e7c8130c1d61c8fd0c ]
    
    The pxa27x platforms have a single IP with 2 drivers, sa1100-rtc and
    rtc-pxa drivers.
    
    A previous patch fixed the sa1100-rtc case, but the pxa-rtc wasn't
    fixed. This patch completes the previous one.
    
    Fixes: 8b6d10345e16 ("clk: pxa: add missing pxa27x clocks for Irda and sa1100-rtc")
    Signed-off-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Link: https://lkml.kernel.org/r/20191026194420.11918-1-robert.jarzmik@free.fr
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 387ad594a4b5fa8360b28857052b5ce8d0c7d097
Author: Gustavo L. F. Walbon <gwalbon@linux.ibm.com>
Date:   Thu May 2 18:09:07 2019 -0300

    powerpc/security: Fix wrong message when RFI Flush is disable
    
    [ Upstream commit 4e706af3cd8e1d0503c25332b30cad33c97ed442 ]
    
    The issue was showing "Mitigation" message via sysfs whatever the
    state of "RFI Flush", but it should show "Vulnerable" when it is
    disabled.
    
    If you have "L1D private" feature enabled and not "RFI Flush" you are
    vulnerable to meltdown attacks.
    
    "RFI Flush" is the key feature to mitigate the meltdown whatever the
    "L1D private" state.
    
    SEC_FTR_L1D_THREAD_PRIV is a feature for Power9 only.
    
    So the message should be as the truth table shows:
    
      CPU | L1D private | RFI Flush |                sysfs
      ----|-------------|-----------|-------------------------------------
       P9 |    False    |   False   | Vulnerable
       P9 |    False    |   True    | Mitigation: RFI Flush
       P9 |    True     |   False   | Vulnerable: L1D private per thread
       P9 |    True     |   True    | Mitigation: RFI Flush, L1D private per thread
       P8 |    False    |   False   | Vulnerable
       P8 |    False    |   True    | Mitigation: RFI Flush
    
    Output before this fix:
      # cat /sys/devices/system/cpu/vulnerabilities/meltdown
      Mitigation: RFI Flush, L1D private per thread
      # echo 0 > /sys/kernel/debug/powerpc/rfi_flush
      # cat /sys/devices/system/cpu/vulnerabilities/meltdown
      Mitigation: L1D private per thread
    
    Output after fix:
      # cat /sys/devices/system/cpu/vulnerabilities/meltdown
      Mitigation: RFI Flush, L1D private per thread
      # echo 0 > /sys/kernel/debug/powerpc/rfi_flush
      # cat /sys/devices/system/cpu/vulnerabilities/meltdown
      Vulnerable: L1D private per thread
    
    Signed-off-by: Gustavo L. F. Walbon <gwalbon@linux.ibm.com>
    Signed-off-by: Mauro S. M. Rodrigues <maurosr@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190502210907.42375-1-gwalbon@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e023577604219bc8a912901abbea25bc77c2738
Author: David Hildenbrand <david@redhat.com>
Date:   Thu Oct 31 15:29:22 2019 +0100

    powerpc/pseries/cmm: Implement release() function for sysfs device
    
    [ Upstream commit 7d8212747435c534c8d564fbef4541a463c976ff ]
    
    When unloading the module, one gets
      ------------[ cut here ]------------
      Device 'cmm0' does not have a release() function, it is broken and must be fixed. See Documentation/kobject.txt.
      WARNING: CPU: 0 PID: 19308 at drivers/base/core.c:1244 .device_release+0xcc/0xf0
      ...
    
    We only have one static fake device. There is nothing to do when
    releasing the device (via cmm_exit()).
    
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20191031142933.10779-2-david@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 643d1854c2c376b4c3e4df899653bc4916eee2df
Author: Bean Huo <beanhuo@micron.com>
Date:   Tue Nov 12 23:34:36 2019 +0100

    scsi: ufs: fix potential bug which ends in system hang
    
    [ Upstream commit cfcbae3895b86c390ede57b2a8f601dd5972b47b ]
    
    In function __ufshcd_query_descriptor(), in the event of an error
    happening, we directly goto out_unlock and forget to invaliate
    hba->dev_cmd.query.descriptor pointer. This results in this pointer still
    valid in ufshcd_copy_query_response() for other query requests which go
    through ufshcd_exec_raw_upiu_cmd(). This will cause __memcpy() crash and
    system hangs. Log as shown below:
    
    Unable to handle kernel paging request at virtual address
    ffff000012233c40
    Mem abort info:
       ESR = 0x96000047
       Exception class = DABT (current EL), IL = 32 bits
       SET = 0, FnV = 0
       EA = 0, S1PTW = 0
    Data abort info:
       ISV = 0, ISS = 0x00000047
       CM = 0, WnR = 1
    swapper pgtable: 4k pages, 48-bit VAs, pgdp = 0000000028cc735c
    [ffff000012233c40] pgd=00000000bffff003, pud=00000000bfffe003,
    pmd=00000000ba8b8003, pte=0000000000000000
     Internal error: Oops: 96000047 [#2] PREEMPT SMP
     ...
     Call trace:
      __memcpy+0x74/0x180
      ufshcd_issue_devman_upiu_cmd+0x250/0x3c0
      ufshcd_exec_raw_upiu_cmd+0xfc/0x1a8
      ufs_bsg_request+0x178/0x3b0
      bsg_queue_rq+0xc0/0x118
      blk_mq_dispatch_rq_list+0xb0/0x538
      blk_mq_sched_dispatch_requests+0x18c/0x1d8
      __blk_mq_run_hw_queue+0xb4/0x118
      blk_mq_run_work_fn+0x28/0x38
      process_one_work+0x1ec/0x470
      worker_thread+0x48/0x458
      kthread+0x130/0x138
      ret_from_fork+0x10/0x1c
     Code: 540000ab a8c12027 a88120c7 a8c12027 (a88120c7)
     ---[ end trace 793e1eb5dff69f2d ]---
     note: kworker/0:2H[2054] exited with preempt_count 1
    
    This patch is to move "descriptor = NULL" down to below the label
    "out_unlock".
    
    Fixes: d44a5f98bb49b2(ufs: query descriptor API)
    Link: https://lore.kernel.org/r/20191112223436.27449-3-huobean@gmail.com
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1fcddca055a19f28678623e095e30a5d54fc3b23
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Nov 11 15:03:57 2019 -0800

    scsi: lpfc: fix: Coverity: lpfc_cmpl_els_rsp(): Null pointer dereferences
    
    [ Upstream commit 6c6d59e0fe5b86cf273d6d744a6a9768c4ecc756 ]
    
    Coverity reported the following:
    
    *** CID 101747:  Null pointer dereferences  (FORWARD_NULL)
    /drivers/scsi/lpfc/lpfc_els.c: 4439 in lpfc_cmpl_els_rsp()
    4433                            kfree(mp);
    4434                    }
    4435                    mempool_free(mbox, phba->mbox_mem_pool);
    4436            }
    4437     out:
    4438            if (ndlp && NLP_CHK_NODE_ACT(ndlp)) {
    vvv     CID 101747:  Null pointer dereferences  (FORWARD_NULL)
    vvv     Dereferencing null pointer "shost".
    4439                    spin_lock_irq(shost->host_lock);
    4440                    ndlp->nlp_flag &= ~(NLP_ACC_REGLOGIN | NLP_RM_DFLT_RPI);
    4441                    spin_unlock_irq(shost->host_lock);
    4442
    4443                    /* If the node is not being used by another discovery thread,
    4444                     * and we are sending a reject, we are done with it.
    
    Fix by adding a check for non-null shost in line 4438.
    The scenario when shost is set to null is when ndlp is null.
    As such, the ndlp check present was sufficient. But better safe
    than sorry so add the shost check.
    
    Reported-by: coverity-bot <keescook+coverity-bot@chromium.org>
    Addresses-Coverity-ID: 101747 ("Null pointer dereferences")
    Fixes: 2e0fef85e098 ("[SCSI] lpfc: NPIV: split ports")
    
    CC: James Bottomley <James.Bottomley@SteelEye.com>
    CC: "Gustavo A. R. Silva" <gustavo@embeddedor.com>
    CC: linux-next@vger.kernel.org
    Link: https://lore.kernel.org/r/20191111230401.12958-3-jsmart2021@gmail.com
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6867faef8ab7698a6e208cdbf4b807cd50ecbac1
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Sun Nov 10 12:49:06 2019 +0300

    fs/quota: handle overflows of sysctl fs.quota.* and report as unsigned long
    
    [ Upstream commit 6fcbcec9cfc7b3c6a2c1f1a23ebacedff7073e0a ]
    
    Quota statistics counted as 64-bit per-cpu counter. Reading sums per-cpu
    fractions as signed 64-bit int, filters negative values and then reports
    lower half as signed 32-bit int.
    
    Result may looks like:
    
    fs.quota.allocated_dquots = 22327
    fs.quota.cache_hits = -489852115
    fs.quota.drops = -487288718
    fs.quota.free_dquots = 22083
    fs.quota.lookups = -486883485
    fs.quota.reads = 22327
    fs.quota.syncs = 335064
    fs.quota.writes = 3088689
    
    Values bigger than 2^31-1 reported as negative.
    
    All counters except "allocated_dquots" and "free_dquots" are monotonic,
    thus they should be reported as is without filtering negative values.
    
    Kernel doesn't have generic helper for 64-bit sysctl yet,
    let's use at least unsigned long.
    
    Link: https://lore.kernel.org/r/157337934693.2078.9842146413181153727.stgit@buzz
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be43769e604ce1f2560b6cd8ad9f6e30ddc56403
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Wed Oct 2 19:25:22 2019 +0800

    irqchip: ingenic: Error out if IRQ domain creation failed
    
    [ Upstream commit 52ecc87642f273a599c9913b29fd179c13de457b ]
    
    If we cannot create the IRQ domain, the driver should fail to probe
    instead of succeeding with just a warning message.
    
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/1570015525-27018-3-git-send-email-zhouyanjie@zoho.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57d030bc4a699606e42600af905dd9725d2f4369
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Oct 24 13:14:13 2019 -0700

    irqchip/irq-bcm7038-l1: Enable parent IRQ if necessary
    
    [ Upstream commit 27eebb60357ed5aa6659442f92907c0f7368d6ae ]
    
    If the 'brcm,irq-can-wake' property is specified, make sure we also
    enable the corresponding parent interrupt we are attached to.
    
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20191024201415.23454-4-f.fainelli@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4127a30af64af0fb93272b1b39fe08579bae6b31
Author: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
Date:   Thu Oct 31 11:57:15 2019 -0700

    clk: qcom: Allow constant ratio freq tables for rcg
    
    [ Upstream commit efd164b5520afd6fb2883b68e0d408a7de29c491 ]
    
    Some RCGs (the gfx_3d_src_clk in msm8998 for example) are basically just
    some constant ratio from the input across the entire frequency range.  It
    would be great if we could specify the frequency table as a single entry
    constant ratio instead of a long list, ie:
    
            { .src = P_GPUPLL0_OUT_EVEN, .pre_div = 3 },
            { }
    
    So, lets support that.
    
    We need to fix a corner case in qcom_find_freq() where if the freq table
    is non-null, but has no frequencies, we end up returning an "entry" before
    the table array, which is bad.  Then, we need ignore the freq from the
    table, and instead base everything on the requested freq.
    
    Suggested-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
    Link: https://lkml.kernel.org/r/20191031185715.15504-1-jeffrey.l.hugo@gmail.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7cc9e5dab63c9a315727c526f65c0eb152201d4d
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Nov 4 16:56:58 2019 -0800

    scsi: lpfc: Fix duplicate unreg_rpi error in port offline flow
    
    [ Upstream commit 7cfd5639d99bec0d27af089d0c8c114330e43a72 ]
    
    If the driver receives a login that is later then LOGO'd by the remote port
    (aka ndlp), the driver, upon the completion of the LOGO ACC transmission,
    will logout the node and unregister the rpi that is being used for the
    node.  As part of the unreg, the node's rpi value is replaced by the
    LPFC_RPI_ALLOC_ERROR value.  If the port is subsequently offlined, the
    offline walks the nodes and ensures they are logged out, which possibly
    entails unreg'ing their rpi values.  This path does not validate the node's
    rpi value, thus doesn't detect that it has been unreg'd already.  The
    replaced rpi value is then used when accessing the rpi bitmask array which
    tracks active rpi values.  As the LPFC_RPI_ALLOC_ERROR value is not a valid
    index for the bitmask, it may fault the system.
    
    Revise the rpi release code to detect when the rpi value is the replaced
    RPI_ALLOC_ERROR value and ignore further release steps.
    
    Link: https://lore.kernel.org/r/20191105005708.7399-2-jsmart2021@gmail.com
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37c20c9721fbee51b68c0c072e6f7492eb83dcb9
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Tue Nov 5 13:55:53 2019 -0800

    scsi: tracing: Fix handling of TRANSFER LENGTH == 0 for READ(6) and WRITE(6)
    
    [ Upstream commit f6b8540f40201bff91062dd64db8e29e4ddaaa9d ]
    
    According to SBC-2 a TRANSFER LENGTH field of zero means that 256 logical
    blocks must be transferred. Make the SCSI tracing code follow SBC-2.
    
    Fixes: bf8162354233 ("[SCSI] add scsi trace core functions and put trace points")
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Douglas Gilbert <dgilbert@interlog.com>
    Link: https://lore.kernel.org/r/20191105215553.185018-1-bvanassche@acm.org
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cad737efd8609a442f19991d683663b71a4d95ed
Author: Jan Kara <jack@suse.cz>
Date:   Tue Nov 5 17:44:19 2019 +0100

    jbd2: Fix statistics for the number of logged blocks
    
    [ Upstream commit 015c6033068208d6227612c878877919f3fcf6b6 ]
    
    jbd2 statistics counting number of blocks logged in a transaction was
    wrong. It didn't count the commit block and more importantly it didn't
    count revoke descriptor blocks. Make sure these get properly counted.
    
    Reviewed-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20191105164437.32602-13-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43d8ff8f09f027275dbee75df6d78487e0335d2a
Author: Anthony Steinhauser <asteinhauser@google.com>
Date:   Tue Oct 29 12:07:59 2019 -0700

    powerpc/security/book3s64: Report L1TF status in sysfs
    
    [ Upstream commit 8e6b6da91ac9b9ec5a925b6cb13f287a54bd547d ]
    
    Some PowerPC CPUs are vulnerable to L1TF to the same extent as to
    Meltdown. It is also mitigated by flushing the L1D on privilege
    transition.
    
    Currently the sysfs gives a false negative on L1TF on CPUs that I
    verified to be vulnerable, a Power9 Talos II Boston 004e 1202, PowerNV
    T2P9D01.
    
    Signed-off-by: Anthony Steinhauser <asteinhauser@google.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    [mpe: Just have cpu_show_l1tf() call cpu_show_meltdown() directly]
    Link: https://lore.kernel.org/r/20191029190759.84821-1-asteinhauser@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0eba4f1059ca1b99ad2e8eded69d7b3bb0e8116
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Wed Oct 16 20:43:30 2019 +0800

    clocksource/drivers/asm9260: Add a check for of_clk_get
    
    [ Upstream commit 6e001f6a4cc73cd06fc7b8c633bc4906c33dd8ad ]
    
    asm9260_timer_init misses a check for of_clk_get.
    Add a check for it and print errors like other clocksource drivers.
    
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20191016124330.22211-1-hslester96@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1fae4cc3142cec3842e919b3648b2213f9905c5
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 28 14:56:46 2019 -0700

    dma-debug: add a schedule point in debug_dma_dump_mappings()
    
    [ Upstream commit 9ff6aa027dbb98755f0265695354f2dd07c0d1ce ]
    
    debug_dma_dump_mappings() can take a lot of cpu cycles :
    
    lpk43:/# time wc -l /sys/kernel/debug/dma-api/dump
    163435 /sys/kernel/debug/dma-api/dump
    
    real    0m0.463s
    user    0m0.003s
    sys     0m0.459s
    
    Let's add a cond_resched() to avoid holding cpu for too long.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Corentin Labbe <clabbe@baylibre.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2144754f471857e234140fa9febddf81acde0937
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Sun Oct 13 21:23:51 2019 +1100

    powerpc/pseries: Mark accumulate_stolen_time() as notrace
    
    [ Upstream commit eb8e20f89093b64f48975c74ccb114e6775cee22 ]
    
    accumulate_stolen_time() is called prior to interrupt state being
    reconciled, which can trip the warning in arch_local_irq_restore():
    
      WARNING: CPU: 5 PID: 1017 at arch/powerpc/kernel/irq.c:258 .arch_local_irq_restore+0x9c/0x130
      ...
      NIP .arch_local_irq_restore+0x9c/0x130
      LR  .rb_start_commit+0x38/0x80
      Call Trace:
        .ring_buffer_lock_reserve+0xe4/0x620
        .trace_function+0x44/0x210
        .function_trace_call+0x148/0x170
        .ftrace_ops_no_ops+0x180/0x1d0
        ftrace_call+0x4/0x8
        .accumulate_stolen_time+0x1c/0xb0
        decrementer_common+0x124/0x160
    
    For now just mark it as notrace. We may change the ordering to call it
    after interrupt state has been reconciled, but that is a larger
    change.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20191024055932.27940-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d17e8c8a8add5e9653649d9858f5c23e2f4e3f87
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Sat Oct 19 11:59:13 2019 +0300

    scsi: csiostor: Don't enable IRQs too early
    
    [ Upstream commit d6c9b31ac3064fbedf8961f120a4c117daa59932 ]
    
    These are called with IRQs disabled from csio_mgmt_tmo_handler() so we
    can't call spin_unlock_irq() or it will enable IRQs prematurely.
    
    Fixes: a3667aaed569 ("[SCSI] csiostor: Chelsio FCoE offload driver")
    Link: https://lore.kernel.org/r/20191019085913.GA14245@mwanda
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a2a778d81c2223f218efc0f7ae4bdaad75f22b3
Author: James Smart <jsmart2021@gmail.com>
Date:   Fri Oct 18 14:18:20 2019 -0700

    scsi: lpfc: Fix SLI3 hba in loop mode not discovering devices
    
    [ Upstream commit feff8b3d84d3d9570f893b4d83e5eab6693d6a52 ]
    
    When operating in private loop mode, PLOGI exchanges are racing and the
    driver tries to abort it's PLOGI. But the PLOGI abort ends up terminating
    the login with the other end causing the other end to abort its PLOGI as
    well. Discovery never fully completes.
    
    Fix by disabling the PLOGI abort when private loop and letting the state
    machine play out.
    
    Link: https://lore.kernel.org/r/20191018211832.7917-5-jsmart2021@gmail.com
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38513e3c2a73a042059a0bdc6dc0773ad7ff333f
Author: David Disseldorp <ddiss@suse.de>
Date:   Thu Sep 12 11:55:45 2019 +0200

    scsi: target: compare full CHAP_A Algorithm strings
    
    [ Upstream commit 9cef2a7955f2754257a7cddedec16edae7b587d0 ]
    
    RFC 2307 states:
    
      For CHAP [RFC1994], in the first step, the initiator MUST send:
    
          CHAP_A=<A1,A2...>
    
       Where A1,A2... are proposed algorithms, in order of preference.
    ...
       For the Algorithm, as stated in [RFC1994], one value is required to
       be implemented:
    
           5     (CHAP with MD5)
    
    LIO currently checks for this value by only comparing a single byte in
    the tokenized Algorithm string, which means that any value starting with
    a '5' (e.g. "55") is interpreted as "CHAP with MD5". Fix this by
    comparing the entire tokenized string.
    
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Reviewed-by: Mike Christie <mchristi@redhat.com>
    Signed-off-by: David Disseldorp <ddiss@suse.de>
    Link: https://lore.kernel.org/r/20190912095547.22427-2-ddiss@suse.de
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb746cd38c445dbb2ea5e607018833292b236dff
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Oct 16 13:50:26 2019 +0200

    iommu/tegra-smmu: Fix page tables in > 4 GiB memory
    
    [ Upstream commit 96d3ab802e4930a29a33934373157d6dff1b2c7e ]
    
    Page tables that reside in physical memory beyond the 4 GiB boundary are
    currently not working properly. The reason is that when the physical
    address for page directory entries is read, it gets truncated at 32 bits
    and can cause crashes when passing that address to the DMA API.
    
    Fix this by first casting the PDE value to a dma_addr_t and then using
    the page frame number mask for the SMMU instance to mask out the invalid
    bits, which are typically used for mapping attributes, etc.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9298f1cd375633782b82407ab03253744e8cde55
Author: Evan Green <evgreen@chromium.org>
Date:   Wed Oct 2 14:00:21 2019 -0700

    Input: atmel_mxt_ts - disable IRQ across suspend
    
    [ Upstream commit 463fa44eec2fef50d111ed0199cf593235065c04 ]
    
    Across suspend and resume, we are seeing error messages like the following:
    
    atmel_mxt_ts i2c-PRP0001:00: __mxt_read_reg: i2c transfer failed (-121)
    atmel_mxt_ts i2c-PRP0001:00: Failed to read T44 and T5 (-121)
    
    This occurs because the driver leaves its IRQ enabled. Upon resume, there
    is an IRQ pending, but the interrupt is serviced before both the driver and
    the underlying I2C bus have been resumed. This causes EREMOTEIO errors.
    
    Disable the IRQ in suspend, and re-enable it on resume. If there are cases
    where the driver enters suspend with interrupts disabled, that's a bug we
    should fix separately.
    
    Signed-off-by: Evan Green <evgreen@chromium.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a27ab78a85eddde39f9f5792044e8a4352206bad
Author: James Smart <jsmart2021@gmail.com>
Date:   Sat Sep 21 20:58:53 2019 -0700

    scsi: lpfc: Fix locking on mailbox command completion
    
    [ Upstream commit 07b8582430370097238b589f4e24da7613ca6dd3 ]
    
    Symptoms were seen of the driver not having valid data for mailbox
    commands. After debugging, the following sequence was found:
    
    The driver maintains a port-wide pointer of the mailbox command that is
    currently in execution. Once finished, the port-wide pointer is cleared
    (done in lpfc_sli4_mq_release()). The next mailbox command issued will set
    the next pointer and so on.
    
    The mailbox response data is only copied if there is a valid port-wide
    pointer.
    
    In the failing case, it was seen that a new mailbox command was being
    attempted in parallel with the completion.  The parallel path was seeing
    the mailbox no long in use (flag check under lock) and thus set the port
    pointer.  The completion path had cleared the active flag under lock, but
    had not touched the port pointer.  The port pointer is cleared after the
    lock is released. In this case, the completion path cleared the just-set
    value by the parallel path.
    
    Fix by making the calls that clear mbox state/port pointer while under
    lock.  Also slightly cleaned up the error path.
    
    Link: https://lore.kernel.org/r/20190922035906.10977-8-jsmart2021@gmail.com
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af305dcef5267994c9fe397d5c65ffdb208de771
Author: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
Date:   Fri Sep 13 09:04:40 2019 -0400

    scsi: mpt3sas: Fix clear pending bit in ioctl status
    
    [ Upstream commit 782b281883caf70289ba6a186af29441a117d23e ]
    
    When user issues diag register command from application with required size,
    and if driver unable to allocate the memory, then it will fail the register
    command. While failing the register command, driver is not currently
    clearing MPT3_CMD_PENDING bit in ctl_cmds.status variable which was set
    before trying to allocate the memory. As this bit is set, subsequent
    register command will be failed with BUSY status even when user wants to
    register the trace buffer will less memory.
    
    Clear MPT3_CMD_PENDING bit in ctl_cmds.status before returning the diag
    register command with no memory status.
    
    Link: https://lore.kernel.org/r/1568379890-18347-4-git-send-email-sreekanth.reddy@broadcom.com
    Signed-off-by: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2574108dd2d8528e6b28af78a145658c71da7630
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu Oct 24 18:12:54 2019 +0900

    perf probe: Fix to show function entry line as probe-able
    
    commit 91e2f539eeda26ab00bd03fae8dc434c128c85ed upstream.
    
    Fix die_walk_lines() to list the function entry line correctly.  Since
    the dwarf_entrypc() does not return the entry pc if the DIE has only
    range attribute, __die_walk_funclines() fails to list the declaration
    line (entry line) in that case.
    
    To solve this issue, this introduces die_entrypc() which correctly
    returns the entry PC (the first address range) even if the DIE has only
    range attribute. With this fix die_walk_lines() shows the function entry
    line is able to probe correctly.
    
    Fixes: 4cc9cec636e7 ("perf probe: Introduce lines walker interface")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/157190837419.1859.4619125803596816752.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53644aeb8336fc8f1f797525d3fac09942433f6c
Author: Yangbo Lu <yangbo.lu@nxp.com>
Date:   Mon Dec 16 11:18:42 2019 +0800

    mmc: sdhci-of-esdhc: fix P2020 errata handling
    
    commit fe0acab448f68c3146235afe03fb932e242ec94c upstream.
    
    Two previous patches introduced below quirks for P2020 platforms.
    - SDHCI_QUIRK_RESET_AFTER_REQUEST
    - SDHCI_QUIRK_BROKEN_TIMEOUT_VAL
    
    The patches made a mistake to add them in quirks2 of sdhci_host
    structure, while they were defined for quirks.
            host->quirks2 |= SDHCI_QUIRK_RESET_AFTER_REQUEST;
            host->quirks2 |= SDHCI_QUIRK_BROKEN_TIMEOUT_VAL;
    
    This patch is to fix them.
            host->quirks |= SDHCI_QUIRK_RESET_AFTER_REQUEST;
            host->quirks |= SDHCI_QUIRK_BROKEN_TIMEOUT_VAL;
    
    Fixes: 05cb6b2a66fa ("mmc: sdhci-of-esdhc: add erratum eSDHC-A001 and A-008358 support")
    Fixes: a46e42712596 ("mmc: sdhci-of-esdhc: add erratum eSDHC5 support")
    Signed-off-by: Yangbo Lu <yangbo.lu@nxp.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20191216031842.40068-1-yangbo.lu@nxp.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e774da21f327cad0d6b7a476879cc38dca59fd37
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Mon Dec 9 06:19:08 2019 +0000

    powerpc/irq: fix stack overflow verification
    
    commit 099bc4812f09155da77eeb960a983470249c9ce1 upstream.
    
    Before commit 0366a1c70b89 ("powerpc/irq: Run softirqs off the top of
    the irq stack"), check_stack_overflow() was called by do_IRQ(), before
    switching to the irq stack.
    In that commit, do_IRQ() was renamed __do_irq(), and is now executing
    on the irq stack, so check_stack_overflow() has just become almost
    useless.
    
    Move check_stack_overflow() call in do_IRQ() to do the check while
    still on the current stack.
    
    Fixes: 0366a1c70b89 ("powerpc/irq: Run softirqs off the top of the irq stack")
    Cc: stable@vger.kernel.org
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/e033aa8116ab12b7ca9a9c75189ad0741e3b9b5f.1575872340.git.christophe.leroy@c-s.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebd77f0f4885d9c3d84c6f2ffd680a1215e3ca16
Author: Jan Kara <jack@suse.cz>
Date:   Mon Dec 2 18:02:13 2019 +0100

    ext4: check for directory entries too close to block end
    
    commit 109ba779d6cca2d519c5dd624a3276d03e21948e upstream.
    
    ext4_check_dir_entry() currently does not catch a case when a directory
    entry ends so close to the block end that the header of the next
    directory entry would not fit in the remaining space. This can lead to
    directory iteration code trying to access address beyond end of current
    buffer head leading to oops.
    
    CC: stable@vger.kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20191202170213.4761-3-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e1fe86683b7dd13baafc9a3d50f75267cc0c93f
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Mon Dec 16 11:08:23 2019 +0000

    staging: comedi: gsc_hpdi: check dma_alloc_coherent() return value
    
    commit ab42b48f32d4c766420c3499ee9c0289b7028182 upstream.
    
    The "auto-attach" handler function `gsc_hpdi_auto_attach()` calls
    `dma_alloc_coherent()` in a loop to allocate some DMA data buffers, and
    also calls it to allocate a buffer for a DMA descriptor chain.  However,
    it does not check the return value of any of these calls.  Change
    `gsc_hpdi_auto_attach()` to return `-ENOMEM` if any of these
    `dma_alloc_coherent()` calls fail.  This will result in the comedi core
    calling the "detach" handler `gsc_hpdi_detach()` as part of the
    clean-up, which will call `gsc_hpdi_free_dma()` to free any allocated
    DMA coherent memory buffers.
    
    Cc: <stable@vger.kernel.org> #4.6+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20191216110823.216237-1-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fd8e24970ba4e4f0e5aa36e9f5cd7b503c279d1
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Dec 17 20:06:04 2019 +0100

    platform/x86: hp-wmi: Make buffer for HPWMI_FEATURE2_QUERY 128 bytes
    
    commit 133b2acee3871ae6bf123b8fe34be14464aa3d2c upstream.
    
    At least on the HP Envy x360 15-cp0xxx model the WMI interface
    for HPWMI_FEATURE2_QUERY requires an outsize of at least 128 bytes,
    otherwise it fails with an error code 5 (HPWMI_RET_INVALID_PARAMETERS):
    
    Dec 06 00:59:38 kernel: hp_wmi: query 0xd returned error 0x5
    
    We do not care about the contents of the buffer, we just want to know
    if the HPWMI_FEATURE2_QUERY command is supported.
    
    This commits bumps the buffer size, fixing the error.
    
    Fixes: 8a1513b4932 ("hp-wmi: limit hotkey enable")
    Cc: stable@vger.kernel.org
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1520703
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60da88251e489ce7a24f7180ebb88dff853860dc
Author: Erkka Talvitie <erkka.talvitie@vincit.fi>
Date:   Wed Dec 11 10:08:39 2019 +0200

    USB: EHCI: Do not return -EPIPE when hub is disconnected
    
    commit 64cc3f12d1c7dd054a215bc1ff9cc2abcfe35832 upstream.
    
    When disconnecting a USB hub that has some child device(s) connected to it
    (such as a USB mouse), then the stack tries to clear halt and
    reset device(s) which are _already_ physically disconnected.
    
    The issue has been reproduced with:
    
    CPU: IMX6D5EYM10AD or MCIMX6D5EYM10AE.
    SW: U-Boot 2019.07 and kernel 4.19.40.
    
    CPU: HP Proliant Microserver Gen8.
    SW: Linux version 4.2.3-300.fc23.x86_64
    
    In this situation there will be error bit for MMF active yet the
    CERR equals EHCI_TUNE_CERR + halt. Existing implementation
    interprets this as a stall [1] (chapter 8.4.5).
    
    The possible conditions when the MMF will be active + halt
    can be found from [2] (Table 4-13).
    
    Fix for the issue is to check whether MMF is active and PID Code is
    IN before checking for the stall. If these conditions are true then
    it is not a stall.
    
    What happens after the fix is that when disconnecting a hub with
    attached device(s) the situation is not interpret as a stall.
    
    [1] [https://www.usb.org/document-library/usb-20-specification, usb_20.pdf]
    [2] [https://www.intel.com/content/dam/www/public/us/en/documents/
         technical-specifications/ehci-specification-for-usb.pdf]
    
    Signed-off-by: Erkka Talvitie <erkka.talvitie@vincit.fi>
    Reviewed-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/ef70941d5f349767f19c0ed26b0dd9eed8ad81bb.1576050523.git.erkka.talvitie@vincit.fi
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d03848e61725bec92eb675316a604e44eda5dc3
Author: Suwan Kim <suwan.kim027@gmail.com>
Date:   Fri Dec 13 11:30:55 2019 +0900

    usbip: Fix error path of vhci_recv_ret_submit()
    
    commit aabb5b833872524eaf28f52187e5987984982264 upstream.
    
    If a transaction error happens in vhci_recv_ret_submit(), event
    handler closes connection and changes port status to kick hub_event.
    Then hub tries to flush the endpoint URBs, but that causes infinite
    loop between usb_hub_flush_endpoint() and vhci_urb_dequeue() because
    "vhci_priv" in vhci_urb_dequeue() was already released by
    vhci_recv_ret_submit() before a transmission error occurred. Thus,
    vhci_urb_dequeue() terminates early and usb_hub_flush_endpoint()
    continuously calls vhci_urb_dequeue().
    
    The root cause of this issue is that vhci_recv_ret_submit()
    terminates early without giving back URB when transaction error
    occurs in vhci_recv_ret_submit(). That causes the error URB to still
    be linked at endpoint list without “vhci_priv".
    
    So, in the case of transaction error in vhci_recv_ret_submit(),
    unlink URB from the endpoint, insert proper error code in
    urb->status and give back URB.
    
    Reported-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Tested-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Signed-off-by: Suwan Kim <suwan.kim027@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20191213023055.19933-3-suwan.kim027@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac895dcf7db0703f8618ea9031033d1f26377ec4
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Fri Dec 20 14:31:40 2019 +0100

    net: dst: Force 4-byte alignment of dst_metrics
    
    [ Upstream commit 258a980d1ec23e2c786e9536a7dd260bea74bae6 ]
    
    When storing a pointer to a dst_metrics structure in dst_entry._metrics,
    two flags are added in the least significant bits of the pointer value.
    Hence this assumes all pointers to dst_metrics structures have at least
    4-byte alignment.
    
    However, on m68k, the minimum alignment of 32-bit values is 2 bytes, not
    4 bytes.  Hence in some kernel builds, dst_default_metrics may be only
    2-byte aligned, leading to obscure boot warnings like:
    
        WARNING: CPU: 0 PID: 7 at lib/refcount.c:28 refcount_warn_saturate+0x44/0x9a
        refcount_t: underflow; use-after-free.
        Modules linked in:
        CPU: 0 PID: 7 Comm: ksoftirqd/0 Tainted: G        W         5.5.0-rc2-atari-01448-g114a1a1038af891d-dirty #261
        Stack from 10835e6c:
                10835e6c 0038134f 00023fa6 00394b0f 0000001c 00000009 00321560 00023fea
                00394b0f 0000001c 001a70f8 00000009 00000000 10835eb4 00000001 00000000
                04208040 0000000a 00394b4a 10835ed4 00043aa8 001a70f8 00394b0f 0000001c
                00000009 00394b4a 0026aba8 003215a4 00000003 00000000 0026d5a8 00000001
                003215a4 003a4361 003238d6 000001f0 00000000 003215a4 10aa3b00 00025e84
                003ddb00 10834000 002416a8 10aa3b00 00000000 00000080 000aa038 0004854a
        Call Trace: [<00023fa6>] __warn+0xb2/0xb4
         [<00023fea>] warn_slowpath_fmt+0x42/0x64
         [<001a70f8>] refcount_warn_saturate+0x44/0x9a
         [<00043aa8>] printk+0x0/0x18
         [<001a70f8>] refcount_warn_saturate+0x44/0x9a
         [<0026aba8>] refcount_sub_and_test.constprop.73+0x38/0x3e
         [<0026d5a8>] ipv4_dst_destroy+0x5e/0x7e
         [<00025e84>] __local_bh_enable_ip+0x0/0x8e
         [<002416a8>] dst_destroy+0x40/0xae
    
    Fix this by forcing 4-byte alignment of all dst_metrics structures.
    
    Fixes: e5fd387ad5b30ca3 ("ipv6: do not overwrite inetpeer metrics prematurely")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fafa1cf6761a0149e5cfcf0ae349b7fbeae2c960
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 9 13:45:54 2019 +0800

    sctp: fully initialize v4 addr in some functions
    
    [ Upstream commit b6f3320b1d5267e7b583a6d0c88dda518101740c ]
    
    Syzbot found a crash:
    
      BUG: KMSAN: uninit-value in crc32_body lib/crc32.c:112 [inline]
      BUG: KMSAN: uninit-value in crc32_le_generic lib/crc32.c:179 [inline]
      BUG: KMSAN: uninit-value in __crc32c_le_base+0x4fa/0xd30 lib/crc32.c:202
      Call Trace:
        crc32_body lib/crc32.c:112 [inline]
        crc32_le_generic lib/crc32.c:179 [inline]
        __crc32c_le_base+0x4fa/0xd30 lib/crc32.c:202
        chksum_update+0xb2/0x110 crypto/crc32c_generic.c:90
        crypto_shash_update+0x4c5/0x530 crypto/shash.c:107
        crc32c+0x150/0x220 lib/libcrc32c.c:47
        sctp_csum_update+0x89/0xa0 include/net/sctp/checksum.h:36
        __skb_checksum+0x1297/0x12a0 net/core/skbuff.c:2640
        sctp_compute_cksum include/net/sctp/checksum.h:59 [inline]
        sctp_packet_pack net/sctp/output.c:528 [inline]
        sctp_packet_transmit+0x40fb/0x4250 net/sctp/output.c:597
        sctp_outq_flush_transports net/sctp/outqueue.c:1146 [inline]
        sctp_outq_flush+0x1823/0x5d80 net/sctp/outqueue.c:1194
        sctp_outq_uncork+0xd0/0xf0 net/sctp/outqueue.c:757
        sctp_cmd_interpreter net/sctp/sm_sideeffect.c:1781 [inline]
        sctp_side_effects net/sctp/sm_sideeffect.c:1184 [inline]
        sctp_do_sm+0x8fe1/0x9720 net/sctp/sm_sideeffect.c:1155
        sctp_primitive_REQUESTHEARTBEAT+0x175/0x1a0 net/sctp/primitive.c:185
        sctp_apply_peer_addr_params+0x212/0x1d40 net/sctp/socket.c:2433
        sctp_setsockopt_peer_addr_params net/sctp/socket.c:2686 [inline]
        sctp_setsockopt+0x189bb/0x19090 net/sctp/socket.c:4672
    
    The issue was caused by transport->ipaddr set with uninit addr param, which
    was passed by:
    
      sctp_transport_init net/sctp/transport.c:47 [inline]
      sctp_transport_new+0x248/0xa00 net/sctp/transport.c:100
      sctp_assoc_add_peer+0x5ba/0x2030 net/sctp/associola.c:611
      sctp_process_param net/sctp/sm_make_chunk.c:2524 [inline]
    
    where 'addr' is set by sctp_v4_from_addr_param(), and it doesn't initialize
    the padding of addr->v4.
    
    Later when calling sctp_make_heartbeat(), hbinfo.daddr(=transport->ipaddr)
    will become the part of skb, and the issue occurs.
    
    This patch is to fix it by initializing the padding of addr->v4 in
    sctp_v4_from_addr_param(), as well as other functions that do the similar
    thing, and these functions shouldn't trust that the caller initializes the
    memory, as Marcelo suggested.
    
    Reported-by: syzbot+6dcbfea81cd3d4dd0b02@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45d894d61135897da79d6384e0741582961274d6
Author: Cristian Birsan <cristian.birsan@microchip.com>
Date:   Thu Dec 12 13:52:47 2019 +0200

    net: usb: lan78xx: Fix suspend/resume PHY register access error
    
    [ Upstream commit 20032b63586ac6c28c936dff696981159913a13f ]
    
    Lan78xx driver accesses the PHY registers through MDIO bus over USB
    connection. When performing a suspend/resume, the PHY registers can be
    accessed before the USB connection is resumed. This will generate an
    error and will prevent the device to resume correctly.
    This patch adds the dependency between the MDIO bus and USB device to
    allow correct handling of suspend/resume.
    
    Fixes: ce85e13ad6ef ("lan78xx: Update to use phylib instead of mii_if_info.")
    Signed-off-by: Cristian Birsan <cristian.birsan@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0ef2c13f679118839d2b761aba1f5e3c743b491
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Tue Dec 17 01:57:40 2019 +0000

    net: qlogic: Fix error paths in ql_alloc_large_buffers()
    
    [ Upstream commit cad46039e4c99812db067c8ac22a864960e7acc4 ]
    
    ql_alloc_large_buffers() has the usual RX buffer allocation
    loop where it allocates skbs and maps them for DMA.  It also
    treats failure as a fatal error.
    
    There are (at least) three bugs in the error paths:
    
    1. ql_free_large_buffers() assumes that the lrg_buf[] entry for the
    first buffer that couldn't be allocated will have .skb == NULL.
    But the qla_buf[] array is not zero-initialised.
    
    2. ql_free_large_buffers() DMA-unmaps all skbs in lrg_buf[].  This is
    incorrect for the last allocated skb, if DMA mapping failed.
    
    3. Commit 1acb8f2a7a9f ("net: qlogic: Fix memory leak in
    ql_alloc_large_buffers") added a direct call to dev_kfree_skb_any()
    after the skb is recorded in lrg_buf[], so ql_free_large_buffers()
    will double-free it.
    
    The bugs are somewhat inter-twined, so fix them all at once:
    
    * Clear each entry in qla_buf[] before attempting to allocate
      an skb for it.  This goes half-way to fixing bug 1.
    * Set the .skb field only after the skb is DMA-mapped.  This
      fixes the rest.
    
    Fixes: 1357bfcf7106 ("qla3xxx: Dynamically size the rx buffer queue ...")
    Fixes: 0f8ab89e825f ("qla3xxx: Check return code from pci_map_single() ...")
    Fixes: 1acb8f2a7a9f ("net: qlogic: Fix memory leak in ql_alloc_large_buffers")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe8905d84175f58aff97e7d16f1c76ba95012ccf
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Wed Dec 18 17:21:55 2019 +0800

    net: nfc: nci: fix a possible sleep-in-atomic-context bug in nci_uart_tty_receive()
    
    [ Upstream commit b7ac893652cafadcf669f78452329727e4e255cc ]
    
    The kernel may sleep while holding a spinlock.
    The function call path (from bottom to top) in Linux 4.19 is:
    
    net/nfc/nci/uart.c, 349:
            nci_skb_alloc in nci_uart_default_recv_buf
    net/nfc/nci/uart.c, 255:
            (FUNC_PTR)nci_uart_default_recv_buf in nci_uart_tty_receive
    net/nfc/nci/uart.c, 254:
            spin_lock in nci_uart_tty_receive
    
    nci_skb_alloc(GFP_KERNEL) can sleep at runtime.
    (FUNC_PTR) means a function pointer is called.
    
    To fix this bug, GFP_KERNEL is replaced with GFP_ATOMIC for
    nci_skb_alloc().
    
    This bug is found by a static analysis tool STCheck written by myself.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c86f5822a320e59bb52cde61ff99ae1515c55aaa
Author: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
Date:   Thu Dec 19 10:08:07 2019 +0800

    net: hisilicon: Fix a BUG trigered by wrong bytes_compl
    
    [ Upstream commit 90b3b339364c76baa2436445401ea9ade040c216 ]
    
    When doing stress test, we get the following trace:
    kernel BUG at lib/dynamic_queue_limits.c:26!
    Internal error: Oops - BUG: 0 [#1] SMP ARM
    Modules linked in: hip04_eth
    CPU: 0 PID: 2003 Comm: tDblStackPcap0 Tainted: G           O L  4.4.197 #1
    Hardware name: Hisilicon A15
    task: c3637668 task.stack: de3bc000
    PC is at dql_completed+0x18/0x154
    LR is at hip04_tx_reclaim+0x110/0x174 [hip04_eth]
    pc : [<c041abfc>]    lr : [<bf0003a8>]    psr: 800f0313
    sp : de3bdc2c  ip : 00000000  fp : c020fb10
    r10: 00000000  r9 : c39b4224  r8 : 00000001
    r7 : 00000046  r6 : c39b4000  r5 : 0078f392  r4 : 0078f392
    r3 : 00000047  r2 : 00000000  r1 : 00000046  r0 : df5d5c80
    Flags: Nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user
    Control: 32c5387d  Table: 1e189b80  DAC: 55555555
    Process tDblStackPcap0 (pid: 2003, stack limit = 0xde3bc190)
    Stack: (0xde3bdc2c to 0xde3be000)
    [<c041abfc>] (dql_completed) from [<bf0003a8>] (hip04_tx_reclaim+0x110/0x174 [hip04_eth])
    [<bf0003a8>] (hip04_tx_reclaim [hip04_eth]) from [<bf0012c0>] (hip04_rx_poll+0x20/0x388 [hip04_eth])
    [<bf0012c0>] (hip04_rx_poll [hip04_eth]) from [<c04c8d9c>] (net_rx_action+0x120/0x374)
    [<c04c8d9c>] (net_rx_action) from [<c021eaf4>] (__do_softirq+0x218/0x318)
    [<c021eaf4>] (__do_softirq) from [<c021eea0>] (irq_exit+0x88/0xac)
    [<c021eea0>] (irq_exit) from [<c0240130>] (msa_irq_exit+0x11c/0x1d4)
    [<c0240130>] (msa_irq_exit) from [<c0267ba8>] (__handle_domain_irq+0x110/0x148)
    [<c0267ba8>] (__handle_domain_irq) from [<c0201588>] (gic_handle_irq+0xd4/0x118)
    [<c0201588>] (gic_handle_irq) from [<c0558360>] (__irq_svc+0x40/0x58)
    Exception stack(0xde3bdde0 to 0xde3bde28)
    dde0: 00000000 00008001 c3637668 00000000 00000000 a00f0213 dd3627a0 c0af6380
    de00: c086d380 a00f0213 c0a22a50 de3bde6c 00000002 de3bde30 c0558138 c055813c
    de20: 600f0213 ffffffff
    [<c0558360>] (__irq_svc) from [<c055813c>] (_raw_spin_unlock_irqrestore+0x44/0x54)
    Kernel panic - not syncing: Fatal exception in interrupt
    
    Pre-modification code:
    int hip04_mac_start_xmit(struct sk_buff *skb, struct net_device *ndev)
    {
    [...]
    [1]     priv->tx_head = TX_NEXT(tx_head);
    [2]     count++;
    [3]     netdev_sent_queue(ndev, skb->len);
    [...]
    }
    An rx interrupt occurs if hip04_mac_start_xmit just executes to the line 2,
    tx_head has been updated, but corresponding 'skb->len' has not been
    added to dql_queue.
    
    And then
    hip04_mac_interrupt->__napi_schedule->hip04_rx_poll->hip04_tx_reclaim
    
    In hip04_tx_reclaim, because tx_head has been updated,
    bytes_compl will plus an additional "skb-> len"
    which has not been added to dql_queue. And then
    trigger the BUG_ON(bytes_compl > num_queued - dql->num_completed).
    
    To solve the problem described above, we put
    "netdev_sent_queue(ndev, skb->len);"
    before
    "priv->tx_head = TX_NEXT(tx_head);"
    
    Fixes: a41ea46a9a12 ("net: hisilicon: new hip04 ethernet driver")
    Signed-off-by: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31484f2f826eb85f65510806258e71042b24606f
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Dec 19 23:24:47 2019 +0000

    mod_devicetable: fix PHY module format
    
    [ Upstream commit d2ed49cf6c13e379c5819aa5ac20e1f9674ebc89 ]
    
    When a PHY is probed, if the top bit is set, we end up requesting a
    module with the string "mdio:-10101110000000100101000101010001" -
    the top bit is printed to a signed -1 value. This leads to the module
    not being loaded.
    
    Fix the module format string and the macro generating the values for
    it to ensure that we only print unsigned types and the top bit is
    always 0/1. We correctly end up with
    "mdio:10101110000000100101000101010001".
    
    Fixes: 8626d3b43280 ("phylib: Support phy module autoloading")
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46fd5dd0099382c6fa567ea62e40da163a77b38b
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Tue Dec 10 00:22:07 2019 +0800

    fjes: fix missed check in fjes_acpi_add
    
    [ Upstream commit a288f105a03a7e0e629a8da2b31f34ebf0343ee2 ]
    
    fjes_acpi_add() misses a check for platform_device_register_simple().
    Add a check to fix it.
    
    Fixes: 658d439b2292 ("fjes: Introduce FUJITSU Extended Socket Network Device driver")
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b424ed744453c1b0ce0e67f2e64e7719725f65a3
Author: Mao Wenan <maowenan@huawei.com>
Date:   Mon Dec 9 21:31:25 2019 +0800

    af_packet: set defaule value for tmo
    
    [ Upstream commit b43d1f9f7067c6759b1051e8ecb84e82cef569fe ]
    
    There is softlockup when using TPACKET_V3:
    ...
    NMI watchdog: BUG: soft lockup - CPU#2 stuck for 60010ms!
    (__irq_svc) from [<c0558a0c>] (_raw_spin_unlock_irqrestore+0x44/0x54)
    (_raw_spin_unlock_irqrestore) from [<c027b7e8>] (mod_timer+0x210/0x25c)
    (mod_timer) from [<c0549c30>]
    (prb_retire_rx_blk_timer_expired+0x68/0x11c)
    (prb_retire_rx_blk_timer_expired) from [<c027a7ac>]
    (call_timer_fn+0x90/0x17c)
    (call_timer_fn) from [<c027ab6c>] (run_timer_softirq+0x2d4/0x2fc)
    (run_timer_softirq) from [<c021eaf4>] (__do_softirq+0x218/0x318)
    (__do_softirq) from [<c021eea0>] (irq_exit+0x88/0xac)
    (irq_exit) from [<c0240130>] (msa_irq_exit+0x11c/0x1d4)
    (msa_irq_exit) from [<c0209cf0>] (handle_IPI+0x650/0x7f4)
    (handle_IPI) from [<c02015bc>] (gic_handle_irq+0x108/0x118)
    (gic_handle_irq) from [<c0558ee4>] (__irq_usr+0x44/0x5c)
    ...
    
    If __ethtool_get_link_ksettings() is failed in
    prb_calc_retire_blk_tmo(), msec and tmo will be zero, so tov_in_jiffies
    is zero and the timer expire for retire_blk_timer is turn to
    mod_timer(&pkc->retire_blk_timer, jiffies + 0),
    which will trigger cpu usage of softirq is 100%.
    
    Fixes: f6fb8f100b80 ("af-packet: TPACKET_V3 flexible buffer implementation.")
    Tested-by: Xiao Jiangfeng <xiaojiangfeng@huawei.com>
    Signed-off-by: Mao Wenan <maowenan@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 408d9794b634b1e401f17bda546bdea15d9306c1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Dec 11 16:57:42 2019 +0100

    ALSA: pcm: Avoid possible info leaks from PCM stream buffers
    
    commit add9d56d7b3781532208afbff5509d7382fb6efe upstream.
    
    The current PCM code doesn't initialize explicitly the buffers
    allocated for PCM streams, hence it might leak some uninitialized
    kernel data or previous stream contents by mmapping or reading the
    buffer before actually starting the stream.
    
    Since this is a common problem, this patch simply adds the clearance
    of the buffer data at hw_params callback.  Although this does only
    zero-clear no matter which format is used, which doesn't mean the
    silence for some formats, but it should be OK because the intention is
    just to clear the previous data on the buffer.
    
    Reported-by: Lionel Koenig <lionel.koenig@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191211155742.3213-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d24bdac247dfa31c38ad1f9ff40191df22bc8eab
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Dec 6 12:27:39 2019 +0000

    Btrfs: fix removal logic of the tree mod log that leads to use-after-free issues
    
    [ Upstream commit 6609fee8897ac475378388238456c84298bff802 ]
    
    When a tree mod log user no longer needs to use the tree it calls
    btrfs_put_tree_mod_seq() to remove itself from the list of users and
    delete all no longer used elements of the tree's red black tree, which
    should be all elements with a sequence number less then our equals to
    the caller's sequence number. However the logic is broken because it
    can delete and free elements from the red black tree that have a
    sequence number greater then the caller's sequence number:
    
    1) At a point in time we have sequence numbers 1, 2, 3 and 4 in the
       tree mod log;
    
    2) The task which got assigned the sequence number 1 calls
       btrfs_put_tree_mod_seq();
    
    3) Sequence number 1 is deleted from the list of sequence numbers;
    
    4) The current minimum sequence number is computed to be the sequence
       number 2;
    
    5) A task using sequence number 2 is at tree_mod_log_rewind() and gets
       a pointer to one of its elements from the red black tree through
       a call to tree_mod_log_search();
    
    6) The task with sequence number 1 iterates the red black tree of tree
       modification elements and deletes (and frees) all elements with a
       sequence number less then or equals to 2 (the computed minimum sequence
       number) - it ends up only leaving elements with sequence numbers of 3
       and 4;
    
    7) The task with sequence number 2 now uses the pointer to its element,
       already freed by the other task, at __tree_mod_log_rewind(), resulting
       in a use-after-free issue. When CONFIG_DEBUG_PAGEALLOC=y it produces
       a trace like the following:
    
      [16804.546854] general protection fault: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC PTI
      [16804.547451] CPU: 0 PID: 28257 Comm: pool Tainted: G        W         5.4.0-rc8-btrfs-next-51 #1
      [16804.548059] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.0-0-ga698c8995f-prebuilt.qemu.org 04/01/2014
      [16804.548666] RIP: 0010:rb_next+0x16/0x50
      (...)
      [16804.550581] RSP: 0018:ffffb948418ef9b0 EFLAGS: 00010202
      [16804.551227] RAX: 6b6b6b6b6b6b6b6b RBX: ffff90e0247f6600 RCX: 6b6b6b6b6b6b6b6b
      [16804.551873] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff90e0247f6600
      [16804.552504] RBP: ffff90dffe0d4688 R08: 0000000000000001 R09: 0000000000000000
      [16804.553136] R10: ffff90dffa4a0040 R11: 0000000000000000 R12: 000000000000002e
      [16804.553768] R13: ffff90e0247f6600 R14: 0000000000001663 R15: ffff90dff77862b8
      [16804.554399] FS:  00007f4b197ae700(0000) GS:ffff90e036a00000(0000) knlGS:0000000000000000
      [16804.555039] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [16804.555683] CR2: 00007f4b10022000 CR3: 00000002060e2004 CR4: 00000000003606f0
      [16804.556336] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      [16804.556968] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      [16804.557583] Call Trace:
      [16804.558207]  __tree_mod_log_rewind+0xbf/0x280 [btrfs]
      [16804.558835]  btrfs_search_old_slot+0x105/0xd00 [btrfs]
      [16804.559468]  resolve_indirect_refs+0x1eb/0xc70 [btrfs]
      [16804.560087]  ? free_extent_buffer.part.19+0x5a/0xc0 [btrfs]
      [16804.560700]  find_parent_nodes+0x388/0x1120 [btrfs]
      [16804.561310]  btrfs_check_shared+0x115/0x1c0 [btrfs]
      [16804.561916]  ? extent_fiemap+0x59d/0x6d0 [btrfs]
      [16804.562518]  extent_fiemap+0x59d/0x6d0 [btrfs]
      [16804.563112]  ? __might_fault+0x11/0x90
      [16804.563706]  do_vfs_ioctl+0x45a/0x700
      [16804.564299]  ksys_ioctl+0x70/0x80
      [16804.564885]  ? trace_hardirqs_off_thunk+0x1a/0x20
      [16804.565461]  __x64_sys_ioctl+0x16/0x20
      [16804.566020]  do_syscall_64+0x5c/0x250
      [16804.566580]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
      [16804.567153] RIP: 0033:0x7f4b1ba2add7
      (...)
      [16804.568907] RSP: 002b:00007f4b197adc88 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
      [16804.569513] RAX: ffffffffffffffda RBX: 00007f4b100210d8 RCX: 00007f4b1ba2add7
      [16804.570133] RDX: 00007f4b100210d8 RSI: 00000000c020660b RDI: 0000000000000003
      [16804.570726] RBP: 000055de05a6cfe0 R08: 0000000000000000 R09: 00007f4b197add44
      [16804.571314] R10: 0000000000000000 R11: 0000000000000246 R12: 00007f4b197add48
      [16804.571905] R13: 00007f4b197add40 R14: 00007f4b100210d0 R15: 00007f4b197add50
      (...)
      [16804.575623] ---[ end trace 87317359aad4ba50 ]---
    
    Fix this by making btrfs_put_tree_mod_seq() skip deletion of elements that
    have a sequence number equals to the computed minimum sequence number, and
    not just elements with a sequence number greater then that minimum.
    
    Fixes: bd989ba359f2ac ("Btrfs: add tree modification log functions")
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21a5ac9e427e76bbb5f663ed3897d10c393a765f
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Dec 6 09:37:15 2019 -0500

    btrfs: abort transaction after failed inode updates in create_subvol
    
    [ Upstream commit c7e54b5102bf3614cadb9ca32d7be73bad6cecf0 ]
    
    We can just abort the transaction here, and in fact do that for every
    other failure in this function except these two cases.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc6c9967a8ef07741ade4bec0284a07e5d784bc8
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Dec 3 14:24:58 2019 +0300

    btrfs: return error pointer from alloc_test_extent_buffer
    
    [ Upstream commit b6293c821ea8fa2a631a2112cd86cd435effeb8b ]
    
    Callers of alloc_test_extent_buffer have not correctly interpreted the
    return value as error pointer, as alloc_test_extent_buffer should behave
    as alloc_extent_buffer. The self-tests were unaffected but
    btrfs_find_create_tree_block could call both functions and that would
    cause problems up in the call chain.
    
    Fixes: faa2dbf004e8 ("Btrfs: add sanity tests for new qgroup accounting code")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d03068998be9cd56709c17c5fa232284ee5f607f
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Tue Nov 19 13:59:35 2019 -0500

    btrfs: do not call synchronize_srcu() in inode_tree_del
    
    [ Upstream commit f72ff01df9cf5db25c76674cac16605992d15467 ]
    
    Testing with the new fsstress uncovered a pretty nasty deadlock with
    lookup and snapshot deletion.
    
    Process A
    unlink
     -> final iput
       -> inode_tree_del
         -> synchronize_srcu(subvol_srcu)
    
    Process B
    btrfs_lookup  <- srcu_read_lock() acquired here
      -> btrfs_iget
        -> find inode that has I_FREEING set
          -> __wait_on_freeing_inode()
    
    We're holding the srcu_read_lock() while doing the iget in order to make
    sure our fs root doesn't go away, and then we are waiting for the inode
    to finish freeing.  However because the free'ing process is doing a
    synchronize_srcu() we deadlock.
    
    Fix this by dropping the synchronize_srcu() in inode_tree_del().  We
    don't need people to stop accessing the fs root at this point, we're
    only adding our empty root to the dead roots list.
    
    A larger much more invasive fix is forthcoming to address how we deal
    with fs roots, but this fixes the immediate problem.
    
    Fixes: 76dda93c6ae2 ("Btrfs: add snapshot/subvolume destroy ioctl")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d88d0a210db76f0e36c04f3c58ec80f028bdd1c1
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Tue Dec 17 17:19:11 2019 -0800

    usb: xhci: Fix build warning seen with CONFIG_PM=n
    
    [ Upstream commit 6056a0f8ede27b296d10ef46f7f677cc9d715371 ]
    
    The following build warning is seen if CONFIG_PM is disabled.
    
    drivers/usb/host/xhci-pci.c:498:13: warning:
            unused function 'xhci_pci_shutdown'
    
    Fixes: f2c710f7dca8 ("usb: xhci: only set D3hot for pci device")
    Cc: Henry Lin <henryl@nvidia.com>
    Cc: stable@vger.kernel.org      # all stable releases with f2c710f7dca8
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20191218011911.6907-1-linux@roeck-us.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28dcd98c1f720e7fc53b997b8a59982a34d0cb03
Author: Faiz Abbas <faiz_abbas@ti.com>
Date:   Thu Nov 28 16:34:22 2019 +0530

    Revert "mmc: sdhci: Fix incorrect switch to HS mode"
    
    commit 07bcc411567cb96f9d1fc84fff8d387118a2920d upstream.
    
    This reverts commit c894e33ddc1910e14d6f2a2016f60ab613fd8b37.
    
    This commit aims to treat SD High speed and SDR25 as the same while
    setting UHS Timings in HOST_CONTROL2 which leads to failures with some
    SD cards in AM65x. Revert this commit.
    
    The issue this commit was trying to fix can be implemented in a platform
    specific callback instead of common sdhci code.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Faiz Abbas <faiz_abbas@ti.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/20191128110422.25917-1-faiz_abbas@ti.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a925c99fb193027a57906f8166932fa7cf244fdb
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Fri Nov 22 15:23:23 2019 +0000

    net: phy: initialise phydev speed and duplex sanely
    
    [ Upstream commit a5d66f810061e2dd70fb7a108dcd14e535bc639f ]
    
    When a phydev is created, the speed and duplex are set to zero and
    -1 respectively, rather than using the predefined SPEED_UNKNOWN and
    DUPLEX_UNKNOWN constants.
    
    There is a window at initialisation time where we may report link
    down using the 0/-1 values.  Tidy this up and use the predefined
    constants, so debug doesn't complain with:
    
    "Unsupported (update phy-core.c)/Unsupported (update phy-core.c)"
    
    when the speed and duplex settings are printed.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3833a53d1f721bf8358dff47f494a21b611cc010
Author: Hewenliang <hewenliang4@huawei.com>
Date:   Mon Nov 18 20:44:15 2019 -0500

    libtraceevent: Fix memory leakage in copy_filter_type
    
    [ Upstream commit 10992af6bf46a2048ad964985a5b77464e5563b1 ]
    
    It is necessary to free the memory that we have allocated when error occurs.
    
    Fixes: ef3072cd1d5c ("tools lib traceevent: Get rid of die in add_filter_type()")
    Signed-off-by: Hewenliang <hewenliang4@huawei.com>
    Reviewed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Tzvetomir Stoyanov <tstoyanov@vmware.com>
    Link: http://lore.kernel.org/lkml/20191119014415.57210-1-hewenliang4@huawei.com
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b843e99ca998cc72d41dc672076d757482c97b9
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Nov 20 22:27:38 2019 +1100

    crypto: vmx - Avoid weird build failures
    
    [ Upstream commit 4ee812f6143d78d8ba1399671d78c8d78bf2817c ]
    
    In the vmx crypto Makefile we assign to a variable called TARGET and
    pass that to the aesp8-ppc.pl and ghashp8-ppc.pl scripts.
    
    The variable is meant to describe what flavour of powerpc we're
    building for, eg. either 32 or 64-bit, and big or little endian.
    
    Unfortunately TARGET is a fairly common name for a make variable, and
    if it happens that TARGET is specified as a command line parameter to
    make, the value specified on the command line will override our value.
    
    In particular this can happen if the kernel Makefile is driven by an
    external Makefile that uses TARGET for something.
    
    This leads to weird build failures, eg:
      nonsense  at /build/linux/drivers/crypto/vmx/ghashp8-ppc.pl line 45.
      /linux/drivers/crypto/vmx/Makefile:20: recipe for target 'drivers/crypto/vmx/ghashp8-ppc.S' failed
    
    Which shows that we passed an empty value for $(TARGET) to the perl
    script, confirmed with make V=1:
    
      perl /linux/drivers/crypto/vmx/ghashp8-ppc.pl  > drivers/crypto/vmx/ghashp8-ppc.S
    
    We can avoid this confusion by using override, to tell make that we
    don't want anything to override our variable, even a value specified
    on the command line. We can also use a less common name, given the
    script calls it "flavour", let's use that.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 394432e474d701beb2c7076b02e9b6341ffdeab0
Author: Corentin Labbe <clabbe.montjoie@gmail.com>
Date:   Thu Nov 14 11:49:06 2019 +0100

    crypto: sun4i-ss - Fix 64-bit size_t warnings on sun4i-ss-hash.c
    
    [ Upstream commit a7126603d46fe8f01aeedf589e071c6aaa6c6c39 ]
    
    If you try to compile this driver on a 64-bit platform then you
    will get warnings because it mixes size_t with unsigned int which
    only works on 32-bit.
    
    This patch fixes all of the warnings on sun4i-ss-hash.c.
    Signed-off-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 368598681f79d22ab95f8af32f14d099ae253f48
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Nov 20 11:57:12 2019 +0200

    fbtft: Make sure string is NULL terminated
    
    [ Upstream commit 21f585480deb4bcf0d92b08879c35d066dfee030 ]
    
    New GCC warns about inappropriate use of strncpy():
    
    drivers/staging/fbtft/fbtft-core.c: In function ‘fbtft_framebuffer_alloc’:
    drivers/staging/fbtft/fbtft-core.c:665:2: warning: ‘strncpy’ specified bound 16 equals destination size [-Wstringop-truncation]
      665 |  strncpy(info->fix.id, dev->driver->name, 16);
          |  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Later on the copy is being used with the assumption to be NULL terminated.
    Make sure string is NULL terminated by switching to snprintf().
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20191120095716.26628-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7af10b4e774f6407804b73bcaa45f1ebdcff90fa
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Nov 5 14:50:32 2019 +0100

    iwlwifi: check kasprintf() return value
    
    [ Upstream commit 5974fbb5e10b018fdbe3c3b81cb4cc54e1105ab9 ]
    
    kasprintf() can fail, we should check the return value.
    
    Fixes: 5ed540aecc2a ("iwlwifi: use mac80211 throughput trigger")
    Fixes: 8ca151b568b6 ("iwlwifi: add the MVM driver")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a56904dac5646215c576020726921fab7aa050d
Author: Omar Sandoval <osandov@fb.com>
Date:   Mon Sep 16 11:30:54 2019 -0700

    btrfs: don't prematurely free work in end_workqueue_fn()
    
    [ Upstream commit 9be490f1e15c34193b1aae17da58e14dd9f55a95 ]
    
    Currently, end_workqueue_fn() frees the end_io_wq entry (which embeds
    the work item) and then calls bio_endio(). This is another potential
    instance of the bug in "btrfs: don't prematurely free work in
    run_ordered_work()".
    
    In particular, the endio call may depend on other work items. For
    example, btrfs_end_dio_bio() can call btrfs_subio_endio_read() ->
    __btrfs_correct_data_nocsum() -> dio_read_error() ->
    submit_dio_repair_bio(), which submits a bio that is also completed
    through a end_workqueue_fn() work item. However,
    __btrfs_correct_data_nocsum() waits for the newly submitted bio to
    complete, thus it depends on another work item.
    
    This example currently usually works because we use different workqueue
    helper functions for BTRFS_WQ_ENDIO_DATA and BTRFS_WQ_ENDIO_DIO_REPAIR.
    However, it may deadlock with stacked filesystems and is fragile
    overall. The proper fix is to free the work item at the very end of the
    work function, so let's do that.
    
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 697b44a58cad6d797523e8748a4c530b39ec9bed
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Fri Nov 15 16:31:22 2019 +0800

    spi: tegra20-slink: add missed clk_unprepare
    
    [ Upstream commit 04358e40ba96d687c0811c21d9dede73f5244a98 ]
    
    The driver misses calling clk_unprepare in probe failure and remove.
    Add the calls to fix it.
    
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Link: https://lore.kernel.org/r/20191115083122.12278-1-hslester96@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0205756e8ff79b02384449ff7bbc3db6adbdeca6
Author: Lianbo Jiang <lijiang@redhat.com>
Date:   Fri Nov 8 17:00:27 2019 +0800

    x86/crash: Add a forward declaration of struct kimage
    
    [ Upstream commit 112eee5d06007dae561f14458bde7f2a4879ef4e ]
    
    Add a forward declaration of struct kimage to the crash.h header because
    future changes will invoke a crash-specific function from the realmode
    init path and the compiler will complain otherwise like this:
    
      In file included from arch/x86/realmode/init.c:11:
      ./arch/x86/include/asm/crash.h:5:32: warning: ‘struct kimage’ declared inside\
       parameter list will not be visible outside of this definition or declaration
          5 | int crash_load_segments(struct kimage *image);
            |                                ^~~~~~
      ./arch/x86/include/asm/crash.h:6:37: warning: ‘struct kimage’ declared inside\
       parameter list will not be visible outside of this definition or declaration
          6 | int crash_copy_backup_region(struct kimage *image);
            |                                     ^~~~~~
      ./arch/x86/include/asm/crash.h:7:39: warning: ‘struct kimage’ declared inside\
       parameter list will not be visible outside of this definition or declaration
          7 | int crash_setup_memmap_entries(struct kimage *image,
            |
    
     [ bp: Rewrite the commit message. ]
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Lianbo Jiang <lijiang@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: bhe@redhat.com
    Cc: d.hatayama@fujitsu.com
    Cc: dhowells@redhat.com
    Cc: dyoung@redhat.com
    Cc: ebiederm@xmission.com
    Cc: horms@verge.net.au
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jürgen Gross <jgross@suse.com>
    Cc: kexec@lists.infradead.org
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: vgoyal@redhat.com
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20191108090027.11082-4-lijiang@redhat.com
    Link: https://lkml.kernel.org/r/201910310233.EJRtTMWP%25lkp@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5adfa8a8d4e1f0d8dd3638d785aa2020c215fc1
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Nov 14 09:06:17 2019 +0530

    cpufreq: Register drivers only after CPU devices have been registered
    
    [ Upstream commit 46770be0cf94149ca48be87719bda1d951066644 ]
    
    The cpufreq core heavily depends on the availability of the struct
    device for CPUs and if they aren't available at the time cpufreq driver
    is registered, we will never succeed in making cpufreq work.
    
    This happens due to following sequence of events:
    
    - cpufreq_register_driver()
      - subsys_interface_register()
      - return 0; //successful registration of driver
    
    ... at a later point of time
    
    - register_cpu();
      - device_register();
        - bus_probe_device();
          - sif->add_dev();
            - cpufreq_add_dev();
              - get_cpu_device(); //FAILS
      - per_cpu(cpu_sys_devices, num) = &cpu->dev; //used by get_cpu_device()
      - return 0; //CPU registered successfully
    
    Because the per-cpu variable cpu_sys_devices is set only after the CPU
    device is regsitered, cpufreq will never be able to get it when
    cpufreq_add_dev() is called.
    
    This patch avoids this failure by making sure device structure of at
    least CPU0 is available when the cpufreq driver is registered, else
    return -EPROBE_DEFER.
    
    Reported-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Co-developed-by: Amit Kucheria <amit.kucheria@linaro.org>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Tested-by: Amit Kucheria <amit.kucheria@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 165e25cc78e9ab885f0d35b2fc00f6e8e17cf3c0
Author: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
Date:   Wed Oct 16 15:45:39 2019 +0100

    parport: load lowlevel driver if ports not found
    
    [ Upstream commit 231ec2f24dad18d021b361045bbd618ba62a274e ]
    
    Usually all the distro will load the parport low level driver as part
    of their initialization. But we can get into a situation where all the
    parallel port drivers are built as module and we unload all the modules
    at a later time. Then if we just do "modprobe parport" it will only
    load the parport module and will not load the low level driver which
    will actually register the ports. So, check the bus if there is any
    parport registered, if not, load the low level driver.
    
    We can get into the above situation with all distro but only Suse has
    setup the alias for "parport_lowlevel" and so it only works in Suse.
    Users of Debian based distro will need to load the lowlevel module
    manually.
    
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Link: https://lore.kernel.org/r/20191016144540.18810-3-sudipm.mukherjee@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f1dca3a8b0189da11dfbc61641eaae64c53e5d1
Author: Ben Zhang <benzh@chromium.org>
Date:   Tue Nov 5 17:13:30 2019 -0800

    ASoC: rt5677: Mark reg RT5677_PWR_ANLG2 as volatile
    
    [ Upstream commit eabf424f7b60246c76dcb0ea6f1e83ef9abbeaa6 ]
    
    The codec dies when RT5677_PWR_ANLG2(MX-64h) is set to 0xACE1
    while it's streaming audio over SPI. The DSP firmware turns
    on PLL2 (MX-64 bit 8) when SPI streaming starts.  However regmap
    does not believe that register can change by itself. When
    BST1 (bit 15) is turned on with regmap_update_bits(), it doesn't
    read the register first before write, so PLL2 power bit is
    cleared by accident.
    
    Marking MX-64h as volatile in regmap solved the issue.
    
    Signed-off-by: Ben Zhang <benzh@chromium.org>
    Signed-off-by: Curtis Malainey <cujomalainey@chromium.org>
    Link: https://lore.kernel.org/r/20191106011335.223061-6-cujomalainey@chromium.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 515a007132812ec5287ca6265dcd38a785b1293f
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Sat Nov 9 16:09:43 2019 +0800

    spi: pxa2xx: Add missed security checks
    
    [ Upstream commit 5eb263ef08b5014cfc2539a838f39d2fd3531423 ]
    
    pxa2xx_spi_init_pdata misses checks for devm_clk_get and
    platform_get_irq.
    Add checks for them to fix the bugs.
    
    Since ssp->clk and ssp->irq are used in probe, they are mandatory here.
    So we cannot use _optional() for devm_clk_get and platform_get_irq.
    
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Link: https://lore.kernel.org/r/20191109080943.30428-1-hslester96@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f75b6ff9ca8e4dc685073fa8da04693fbd2dfbdf
Author: Robert Richter <rrichter@marvell.com>
Date:   Wed Nov 6 09:33:23 2019 +0000

    EDAC/ghes: Fix grain calculation
    
    [ Upstream commit 7088e29e0423d3195e09079b4f849ec4837e5a75 ]
    
    The current code to convert a physical address mask to a grain
    (defined as granularity in bytes) is:
    
            e->grain = ~(mem_err->physical_addr_mask & ~PAGE_MASK);
    
    This is broken in several ways:
    
    1) It calculates to wrong grain values. E.g., a physical address mask
    of ~0xfff should give a grain of 0x1000. Without considering
    PAGE_MASK, there is an off-by-one. Things are worse when also
    filtering it with ~PAGE_MASK. This will calculate to a grain with the
    upper bits set. In the example it even calculates to ~0.
    
    2) The grain does not depend on and is unrelated to the kernel's
    page-size. The page-size only matters when unmapping memory in
    memory_failure(). Smaller grains are wrongly rounded up to the
    page-size, on architectures with a configurable page-size (e.g. arm64)
    this could round up to the even bigger page-size of the hypervisor.
    
    Fix this with:
    
            e->grain = ~mem_err->physical_addr_mask + 1;
    
    The grain_bits are defined as:
    
            grain = 1 << grain_bits;
    
    Change also the grain_bits calculation accordingly, it is the same
    formula as in edac_mc.c now and the code can be unified.
    
    The value in ->physical_addr_mask coming from firmware is assumed to
    be contiguous, but this is not sanity-checked. However, in case the
    mask is non-contiguous, a conversion to grain_bits effectively
    converts the grain bit mask to a power of 2 by rounding it up.
    
    Suggested-by: James Morse <james.morse@arm.com>
    Signed-off-by: Robert Richter <rrichter@marvell.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Cc: "linux-edac@vger.kernel.org" <linux-edac@vger.kernel.org>
    Cc: Tony Luck <tony.luck@intel.com>
    Link: https://lkml.kernel.org/r/20191106093239.25517-11-rrichter@marvell.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90253bcd31a618c0c2485a7f26463a1156e57499
Author: Chuhong Yuan <hslester96@gmail.com>
Date:   Sun Nov 10 07:28:15 2019 +0100

    media: si470x-i2c: add missed operations in remove
    
    [ Upstream commit 2df200ab234a86836a8879a05a8007d6b884eb14 ]
    
    The driver misses calling v4l2_ctrl_handler_free and
    v4l2_device_unregister in remove like what is done in probe failure.
    Add the calls to fix it.
    
    Signed-off-by: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c545c6a2ce4fa83556e261b4d8a47ebf355c7f7e
Author: Mike Isely <isely@pobox.com>
Date:   Wed Nov 6 12:11:14 2019 +0100

    media: pvrusb2: Fix oops on tear-down when radio support is not present
    
    [ Upstream commit 7f404ae9cf2a285f73b3c18ab9303d54b7a3d8e1 ]
    
    In some device configurations there's no radio or radio support in the
    driver.  That's OK, as the driver sets itself up accordingly.  However
    on tear-down in these caes it's still trying to tear down radio
    related context when there isn't anything there, leading to
    dereferences through a null pointer and chaos follows.
    
    How this bug survived unfixed for 11 years in the pvrusb2 driver is a
    mystery to me.
    
    [hverkuil: fix two checkpatch warnings]
    
    Signed-off-by: Mike Isely <isely@pobox.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6007b4f1efc78ca7c9bb7ed36d4f2f360fb06053
Author: Miaoqing Pan <miaoqing@codeaurora.org>
Date:   Wed Nov 6 20:04:37 2019 +0200

    ath10k: fix get invalid tx rate for Mesh metric
    
    [ Upstream commit 05a11003a56507023f18d3249a4d4d119c0a3e9c ]
    
    ath10k does not provide transmit rate info per MSDU
    in tx completion, mark that as -1 so mac80211
    will ignore the rates. This fixes mac80211 update Mesh
    link metric with invalid transmit rate info.
    
    Tested HW: QCA9984
    Tested FW: 10.4-3.9.0.2-00035
    
    Signed-off-by: Hou Bao Hou <houbao@codeaurora.org>
    Signed-off-by: Anilkumar Kolli <akolli@codeaurora.org>
    Signed-off-by: Miaoqing Pan <miaoqing@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ce248b9cec71b4f74b1fcb853676d38f7fc80f8
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Wed Oct 30 16:09:30 2019 +0900

    perf probe: Filter out instances except for inlined subroutine and subprogram
    
    [ Upstream commit da6cb952a89efe24bb76c4971370d485737a2d85 ]
    
    Filter out instances except for inlined_subroutine and subprogram DIE in
    die_walk_instances() and die_is_func_instance().
    
    This fixes an issue that perf probe sets some probes on calling address
    instead of a target function itself.
    
    When perf probe walks on instances of an abstruct origin (a kind of
    function prototype of inlined function), die_walk_instances() can also
    pass a GNU_call_site (a GNU extension for call site) to callback. Since
    it is not an inlined instance of target function, we have to filter out
    when searching a probe point.
    
    Without this patch, perf probe sets probes on call site address too.This
    can happen on some function which is marked "inlined", but has actual
    symbol. (I'm not sure why GCC mark it "inlined"):
    
      # perf probe -D vfs_read
      p:probe/vfs_read _text+2500017
      p:probe/vfs_read_1 _text+2499468
      p:probe/vfs_read_2 _text+2499563
      p:probe/vfs_read_3 _text+2498876
      p:probe/vfs_read_4 _text+2498512
      p:probe/vfs_read_5 _text+2498627
    
    With this patch:
    
    Slightly different results, similar tho:
    
      # perf probe -D vfs_read
      p:probe/vfs_read _text+2498512
    
    Committer testing:
    
      # uname -a
      Linux quaco 5.3.8-200.fc30.x86_64 #1 SMP Tue Oct 29 14:46:22 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
    
    Before:
    
      # perf probe -D vfs_read
      p:probe/vfs_read _text+3131557
      p:probe/vfs_read_1 _text+3130975
      p:probe/vfs_read_2 _text+3131047
      p:probe/vfs_read_3 _text+3130380
      p:probe/vfs_read_4 _text+3130000
      # uname -a
      Linux quaco 5.3.8-200.fc30.x86_64 #1 SMP Tue Oct 29 14:46:22 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
      #
    
    After:
    
      # perf probe -D vfs_read
      p:probe/vfs_read _text+3130000
      #
    
    Fixes: db0d2c6420ee ("perf probe: Search concrete out-of-line instances")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/157241937063.32002.11024544873990816590.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37219acdc6ba9c5a80e91ed850f8cf833ec70012
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Wed Oct 30 16:09:21 2019 +0900

    perf probe: Skip end-of-sequence and non statement lines
    
    [ Upstream commit f4d99bdfd124823a81878b44b5e8750b97f73902 ]
    
    Skip end-of-sequence and non-statement lines while walking through lines
    list.
    
    The "end-of-sequence" line information means:
    
     "the current address is that of the first byte after the
      end of a sequence of target machine instructions."
     (DWARF version 4 spec 6.2.2)
    
    This actually means out of scope and we can not probe on it.
    
    On the other hand, the statement lines (is_stmt) means:
    
     "the current instruction is a recommended breakpoint location.
      A recommended breakpoint location is intended to “represent”
      a line, a statement and/or a semantically distinct subpart
      of a statement."
    
     (DWARF version 4 spec 6.2.2)
    
    So, non-statement line info also should be skipped.
    
    These can reduce unneeded probe points and also avoid an error.
    
    E.g. without this patch:
    
      # perf probe -a "clear_tasks_mm_cpumask:1"
      Added new events:
        probe:clear_tasks_mm_cpumask (on clear_tasks_mm_cpumask:1)
        probe:clear_tasks_mm_cpumask_1 (on clear_tasks_mm_cpumask:1)
        probe:clear_tasks_mm_cpumask_2 (on clear_tasks_mm_cpumask:1)
        probe:clear_tasks_mm_cpumask_3 (on clear_tasks_mm_cpumask:1)
        probe:clear_tasks_mm_cpumask_4 (on clear_tasks_mm_cpumask:1)
    
      You can now use it in all perf tools, such as:
    
            perf record -e probe:clear_tasks_mm_cpumask_4 -aR sleep 1
    
      #
    
    This puts 5 probes on one line, but acutally it's not inlined function.
    This is because there are many non statement instructions at the
    function prologue.
    
    With this patch:
    
      # perf probe -a "clear_tasks_mm_cpumask:1"
      Added new event:
        probe:clear_tasks_mm_cpumask (on clear_tasks_mm_cpumask:1)
    
      You can now use it in all perf tools, such as:
    
            perf record -e probe:clear_tasks_mm_cpumask -aR sleep 1
    
      #
    
    Now perf-probe skips unneeded addresses.
    
    Committer testing:
    
    Slightly different results, but similar:
    
    Before:
    
      # uname -a
      Linux quaco 5.3.8-200.fc30.x86_64 #1 SMP Tue Oct 29 14:46:22 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
      #
      # perf probe -a "clear_tasks_mm_cpumask:1"
      Added new events:
        probe:clear_tasks_mm_cpumask (on clear_tasks_mm_cpumask:1)
        probe:clear_tasks_mm_cpumask_1 (on clear_tasks_mm_cpumask:1)
        probe:clear_tasks_mm_cpumask_2 (on clear_tasks_mm_cpumask:1)
    
      You can now use it in all perf tools, such as:
    
            perf record -e probe:clear_tasks_mm_cpumask_2 -aR sleep 1
    
      #
    
    After:
    
      # perf probe -a "clear_tasks_mm_cpumask:1"
      Added new event:
        probe:clear_tasks_mm_cpumask (on clear_tasks_mm_cpumask:1)
    
      You can now use it in all perf tools, such as:
    
            perf record -e probe:clear_tasks_mm_cpumask -aR sleep 1
    
      # perf probe -l
        probe:clear_tasks_mm_cpumask (on clear_tasks_mm_cpumask@kernel/cpu.c)
      #
    
    Fixes: 4cc9cec636e7 ("perf probe: Introduce lines walker interface")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/157241936090.32002.12156347518596111660.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 488899021a91704fbd859c25474f5524134248c9
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Wed Oct 30 16:09:40 2019 +0900

    perf probe: Fix to show calling lines of inlined functions
    
    [ Upstream commit 86c0bf8539e7f46d91bd105e55eda96e0064caef ]
    
    Fix to show calling lines of inlined functions (where an inline function
    is called).
    
    die_walk_lines() filtered out the lines inside inlined functions based
    on the address. However this also filtered out the lines which call
    those inlined functions from the target function.
    
    To solve this issue, check the call_file and call_line attributes and do
    not filter out if it matches to the line information.
    
    Without this fix, perf probe -L doesn't show some lines correctly.
    (don't see the lines after 17)
    
      # perf probe -L vfs_read
      <vfs_read@/home/mhiramat/ksrc/linux/fs/read_write.c:0>
            0  ssize_t vfs_read(struct file *file, char __user *buf, size_t count, loff_t *pos)
            1  {
            2         ssize_t ret;
    
            4         if (!(file->f_mode & FMODE_READ))
                              return -EBADF;
            6         if (!(file->f_mode & FMODE_CAN_READ))
                              return -EINVAL;
            8         if (unlikely(!access_ok(buf, count)))
                              return -EFAULT;
    
           11         ret = rw_verify_area(READ, file, pos, count);
           12         if (!ret) {
           13                 if (count > MAX_RW_COUNT)
                                      count =  MAX_RW_COUNT;
           15                 ret = __vfs_read(file, buf, count, pos);
           16                 if (ret > 0) {
                                      fsnotify_access(file);
                                      add_rchar(current, ret);
                              }
    
    With this fix:
    
      # perf probe -L vfs_read
      <vfs_read@/home/mhiramat/ksrc/linux/fs/read_write.c:0>
            0  ssize_t vfs_read(struct file *file, char __user *buf, size_t count, loff_t *pos)
            1  {
            2         ssize_t ret;
    
            4         if (!(file->f_mode & FMODE_READ))
                              return -EBADF;
            6         if (!(file->f_mode & FMODE_CAN_READ))
                              return -EINVAL;
            8         if (unlikely(!access_ok(buf, count)))
                              return -EFAULT;
    
           11         ret = rw_verify_area(READ, file, pos, count);
           12         if (!ret) {
           13                 if (count > MAX_RW_COUNT)
                                      count =  MAX_RW_COUNT;
           15                 ret = __vfs_read(file, buf, count, pos);
           16                 if (ret > 0) {
           17                         fsnotify_access(file);
           18                         add_rchar(current, ret);
                              }
           20                 inc_syscr(current);
                      }
    
    Fixes: 4cc9cec636e7 ("perf probe: Introduce lines walker interface")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/157241937995.32002.17899884017011512577.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f932770de1015e9bfa3078bac45390a3416a322
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Nov 5 09:16:49 2019 +0900

    perf probe: Return a better scope DIE if there is no best scope
    
    [ Upstream commit c701636aeec4c173208697d68da6e4271125564b ]
    
    Make find_best_scope() returns innermost DIE at given address if there
    is no best matched scope DIE. Since Gcc sometimes generates intuitively
    strange line info which is out of inlined function address range, we
    need this fixup.
    
    Without this, sometimes perf probe failed to probe on a line inside an
    inlined function:
    
      # perf probe -D ksys_open:3
      Failed to find scope of probe point.
        Error: Failed to add events.
    
    With this fix, 'perf probe' can probe it:
    
      # perf probe -D ksys_open:3
      p:probe/ksys_open _text+25707308
      p:probe/ksys_open_1 _text+25710596
      p:probe/ksys_open_2 _text+25711114
      p:probe/ksys_open_3 _text+25711343
      p:probe/ksys_open_4 _text+25714058
      p:probe/ksys_open_5 _text+2819653
      p:probe/ksys_open_6 _text+2819701
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Cc: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Tom Zanussi <tom.zanussi@linux.intel.com>
    Link: http://lore.kernel.org/lkml/157291300887.19771.14936015360963292236.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7351a40b437b1a11eafef723a5bda72f42cf6ad
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Wed Oct 30 16:09:49 2019 +0900

    perf probe: Skip overlapped location on searching variables
    
    [ Upstream commit dee36a2abb67c175265d49b9a8c7dfa564463d9a ]
    
    Since debuginfo__find_probes() callback function can be called with  the
    location which already passed, the callback function must filter out
    such overlapped locations.
    
    add_probe_trace_event() has already done it by commit 1a375ae7659a
    ("perf probe: Skip same probe address for a given line"), but
    add_available_vars() doesn't. Thus perf probe -v shows same address
    repeatedly as below:
    
      # perf probe -V vfs_read:18
      Available variables at vfs_read:18
              @<vfs_read+217>
                      char*   buf
                      loff_t* pos
                      ssize_t ret
                      struct file*    file
              @<vfs_read+217>
                      char*   buf
                      loff_t* pos
                      ssize_t ret
                      struct file*    file
              @<vfs_read+226>
                      char*   buf
                      loff_t* pos
                      ssize_t ret
                      struct file*    file
    
    With this fix, perf probe -V shows it correctly:
    
      # perf probe -V vfs_read:18
      Available variables at vfs_read:18
              @<vfs_read+217>
                      char*   buf
                      loff_t* pos
                      ssize_t ret
                      struct file*    file
              @<vfs_read+226>
                      char*   buf
                      loff_t* pos
                      ssize_t ret
                      struct file*    file
    
    Fixes: cf6eb489e5c0 ("perf probe: Show accessible local variables")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/157241938927.32002.4026859017790562751.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48b3306471a293efaedd23cea13deac5083f2ccb
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Oct 25 17:47:01 2019 +0900

    perf probe: Fix to show inlined function callsite without entry_pc
    
    [ Upstream commit 18e21eb671dc87a4f0546ba505a89ea93598a634 ]
    
    Fix 'perf probe --line' option to show inlined function callsite lines
    even if the function DIE has only ranges.
    
    Without this:
    
      # perf probe -L amd_put_event_constraints
      ...
          2  {
          3         if (amd_has_nb(cpuc) && amd_is_nb_event(&event->hw))
                            __amd_put_nb_event_constraints(cpuc, event);
          5  }
    
    With this patch:
    
      # perf probe -L amd_put_event_constraints
      ...
          2  {
          3         if (amd_has_nb(cpuc) && amd_is_nb_event(&event->hw))
          4                 __amd_put_nb_event_constraints(cpuc, event);
          5  }
    
    Committer testing:
    
    Before:
    
      [root@quaco ~]# perf probe -L amd_put_event_constraints
      <amd_put_event_constraints@/usr/src/debug/kernel-5.2.fc30/linux-5.2.18-200.fc30.x86_64/arch/x86/events/amd/core.c:0>
            0  static void amd_put_event_constraints(struct cpu_hw_events *cpuc,
                                                    struct perf_event *event)
            2  {
            3         if (amd_has_nb(cpuc) && amd_is_nb_event(&event->hw))
                              __amd_put_nb_event_constraints(cpuc, event);
            5  }
    
               PMU_FORMAT_ATTR(event, "config:0-7,32-35");
               PMU_FORMAT_ATTR(umask, "config:8-15"   );
    
      [root@quaco ~]#
    
    After:
    
      [root@quaco ~]# perf probe -L amd_put_event_constraints
      <amd_put_event_constraints@/usr/src/debug/kernel-5.2.fc30/linux-5.2.18-200.fc30.x86_64/arch/x86/events/amd/core.c:0>
            0  static void amd_put_event_constraints(struct cpu_hw_events *cpuc,
                                                    struct perf_event *event)
            2  {
            3         if (amd_has_nb(cpuc) && amd_is_nb_event(&event->hw))
            4                 __amd_put_nb_event_constraints(cpuc, event);
            5  }
    
               PMU_FORMAT_ATTR(event, "config:0-7,32-35");
               PMU_FORMAT_ATTR(umask, "config:8-15"   );
    
      [root@quaco ~]# perf probe amd_put_event_constraints:4
      Added new event:
        probe:amd_put_event_constraints (on amd_put_event_constraints:4)
    
      You can now use it in all perf tools, such as:
    
            perf record -e probe:amd_put_event_constraints -aR sleep 1
    
      [root@quaco ~]#
    
      [root@quaco ~]# perf probe -l
        probe:amd_put_event_constraints (on amd_put_event_constraints:4@arch/x86/events/amd/core.c)
        probe:clear_tasks_mm_cpumask (on clear_tasks_mm_cpumask@kernel/cpu.c)
      [root@quaco ~]#
    
    Using it:
    
      [root@quaco ~]# perf trace -e probe:*
      ^C[root@quaco ~]#
    
    Ok, Intel system here... :-)
    
    Fixes: 4cc9cec636e7 ("perf probe: Introduce lines walker interface")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/157199322107.8075.12659099000567865708.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f0200be685826ce4b2446249fc4a4165fcd367b
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Oct 25 17:47:10 2019 +0900

    perf probe: Fix to show ranges of variables in functions without entry_pc
    
    [ Upstream commit af04dd2f8ebaa8fbd46f698714acbf43da14da45 ]
    
    Fix to show ranges of variables (--range and --vars option) in functions
    which DIE has only ranges but no entry_pc attribute.
    
    Without this fix:
    
      # perf probe --range -V clear_tasks_mm_cpumask
      Available variables at clear_tasks_mm_cpumask
            @<clear_tasks_mm_cpumask+0>
                    (No matched variables)
    
    With this fix:
    
      # perf probe --range -V clear_tasks_mm_cpumask
      Available variables at clear_tasks_mm_cpumask
            @<clear_tasks_mm_cpumask+0>
                    [VAL]   int     cpu     @<clear_tasks_mm_cpumask+[0-35,317-317,2052-2059]>
    
    Committer testing:
    
    Before:
    
      [root@quaco ~]# perf probe --range -V clear_tasks_mm_cpumask
      Available variables at clear_tasks_mm_cpumask
              @<clear_tasks_mm_cpumask+0>
                      (No matched variables)
      [root@quaco ~]#
    
    After:
    
      [root@quaco ~]# perf probe --range -V clear_tasks_mm_cpumask
      Available variables at clear_tasks_mm_cpumask
              @<clear_tasks_mm_cpumask+0>
                      [VAL]   int     cpu     @<clear_tasks_mm_cpumask+[0-23,23-105,105-106,106-106,1843-1850,1850-1862]>
      [root@quaco ~]#
    
    Using it:
    
      [root@quaco ~]# perf probe clear_tasks_mm_cpumask cpu
      Added new event:
        probe:clear_tasks_mm_cpumask (on clear_tasks_mm_cpumask with cpu)
    
      You can now use it in all perf tools, such as:
    
            perf record -e probe:clear_tasks_mm_cpumask -aR sleep 1
    
      [root@quaco ~]# perf probe -l
        probe:clear_tasks_mm_cpumask (on clear_tasks_mm_cpumask@kernel/cpu.c with cpu)
      [root@quaco ~]#
      [root@quaco ~]# perf trace -e probe:*cpumask
      ^C[root@quaco ~]#
    
    Fixes: 349e8d261131 ("perf probe: Add --range option to show a variable's location range")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/157199323018.8075.8179744380479673672.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17e3f83e09c059680f5f161b4a12773392fc391b
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Oct 25 17:46:43 2019 +0900

    perf probe: Fix to probe an inline function which has no entry pc
    
    [ Upstream commit eb6933b29d20bf2c3053883d409a53f462c1a3ac ]
    
    Fix perf probe to probe an inlne function which has no entry pc
    or low pc but only has ranges attribute.
    
    This seems very rare case, but I could find a few examples, as
    same as probe_point_search_cb(), use die_entrypc() to get the
    entry address in probe_point_inline_cb() too.
    
    Without this patch:
    
      # perf probe -D __amd_put_nb_event_constraints
      Failed to get entry address of __amd_put_nb_event_constraints.
      Probe point '__amd_put_nb_event_constraints' not found.
        Error: Failed to add events.
    
    With this patch:
    
      # perf probe -D __amd_put_nb_event_constraints
      p:probe/__amd_put_nb_event_constraints amd_put_event_constraints+43
    
    Committer testing:
    
    Before:
    
      [root@quaco ~]# perf probe -D __amd_put_nb_event_constraints
      Failed to get entry address of __amd_put_nb_event_constraints.
      Probe point '__amd_put_nb_event_constraints' not found.
        Error: Failed to add events.
      [root@quaco ~]#
    
    After:
    
      [root@quaco ~]# perf probe -D __amd_put_nb_event_constraints
      p:probe/__amd_put_nb_event_constraints _text+33789
      [root@quaco ~]#
    
    Fixes: 4ea42b181434 ("perf: Add perf probe subcommand, a kprobe-event setup helper")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/157199320336.8075.16189530425277588587.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53afba304e6f8d482b40c83636b6c5e03673d680
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu Oct 24 18:12:45 2019 +0900

    perf probe: Walk function lines in lexical blocks
    
    [ Upstream commit acb6a7047ac2146b723fef69ee1ab6b7143546bf ]
    
    Since some inlined functions are in lexical blocks of given function, we
    have to recursively walk through the DIE tree.  Without this fix,
    perf-probe -L can miss the inlined functions which is in a lexical block
    (like if (..) { func() } case.)
    
    However, even though, to walk the lines in a given function, we don't
    need to follow the children DIE of inlined functions because those do
    not have any lines in the specified function.
    
    We need to walk though whole trees only if we walk all lines in a given
    file, because an inlined function can include another inlined function
    in the same file.
    
    Fixes: b0e9cb2802d4 ("perf probe: Fix to search nested inlined functions in CU")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/157190836514.1859.15996864849678136353.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b6ddd7234e96315fe85d0f0e2184f7f78759576
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Oct 25 17:46:52 2019 +0900

    perf probe: Fix to list probe event with correct line number
    
    [ Upstream commit 3895534dd78f0fd4d3f9e05ee52b9cdd444a743e ]
    
    Since debuginfo__find_probe_point() uses dwarf_entrypc() for finding the
    entry address of the function on which a probe is, it will fail when the
    function DIE has only ranges attribute.
    
    To fix this issue, use die_entrypc() instead of dwarf_entrypc().
    
    Without this fix, perf probe -l shows incorrect offset:
    
      # perf probe -l
        probe:clear_tasks_mm_cpumask (on clear_tasks_mm_cpumask+18446744071579263632@work/linux/linux/kernel/cpu.c)
        probe:clear_tasks_mm_cpumask_1 (on clear_tasks_mm_cpumask+18446744071579263752@work/linux/linux/kernel/cpu.c)
    
    With this:
    
      # perf probe -l
        probe:clear_tasks_mm_cpumask (on clear_tasks_mm_cpumask@work/linux/linux/kernel/cpu.c)
        probe:clear_tasks_mm_cpumask_1 (on clear_tasks_mm_cpumask:21@work/linux/linux/kernel/cpu.c)
    
    Committer testing:
    
    Before:
    
      [root@quaco ~]# perf probe -l
        probe:clear_tasks_mm_cpumask (on clear_tasks_mm_cpumask+18446744071579765152@kernel/cpu.c)
      [root@quaco ~]#
    
    After:
    
      [root@quaco ~]# perf probe -l
        probe:clear_tasks_mm_cpumask (on clear_tasks_mm_cpumask@kernel/cpu.c)
      [root@quaco ~]#
    
    Fixes: 1d46ea2a6a40 ("perf probe: Fix listing incorrect line number with inline function")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/157199321227.8075.14655572419136993015.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73bea529d14f39f0ae8ae9110e49377967abd278
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu Oct 24 18:12:36 2019 +0900

    perf probe: Fix to find range-only function instance
    
    [ Upstream commit b77afa1f810f37bd8a36cb1318178dfe2d7af6b6 ]
    
    Fix die_is_func_instance() to find range-only function instance.
    
    In some case, a function instance can be made without any low PC or
    entry PC, but only with address ranges by optimization.  (e.g. cold text
    partially in "text.unlikely" section) To find such function instance, we
    have to check the range attribute too.
    
    Fixes: e1ecbbc3fa83 ("perf probe: Fix to handle optimized not-inlined functions")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/157190835669.1859.8368628035930950596.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d095e83679791119d03a30e6b511600f123b87b0
Author: Ping-Ke Shih <pkshih@realtek.com>
Date:   Tue Nov 5 10:18:38 2019 +0800

    rtlwifi: fix memory leak in rtl92c_set_fw_rsvdpagepkt()
    
    [ Upstream commit 5174f1e41074b5186608badc2e89441d021e8c08 ]
    
    This leak was found by testing the EDIMAX EW-7612 on Raspberry Pi 3B+ with
    Linux 5.4-rc5 (multi_v7_defconfig + rtlwifi + kmemleak) and noticed a
    single memory leak during probe:
    
    unreferenced object 0xec13ee40 (size 176):
      comm "kworker/u8:1", pid 36, jiffies 4294939321 (age 5580.790s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<fc1bbb3e>] __netdev_alloc_skb+0x9c/0x164
        [<863dfa6e>] rtl92c_set_fw_rsvdpagepkt+0x254/0x340 [rtl8192c_common]
        [<9572be0d>] rtl92cu_set_hw_reg+0xf48/0xfa4 [rtl8192cu]
        [<116df4d8>] rtl_op_bss_info_changed+0x234/0x96c [rtlwifi]
        [<8933575f>] ieee80211_bss_info_change_notify+0xb8/0x264 [mac80211]
        [<d4061e86>] ieee80211_assoc_success+0x934/0x1798 [mac80211]
        [<e55adb56>] ieee80211_rx_mgmt_assoc_resp+0x174/0x314 [mac80211]
        [<5974629e>] ieee80211_sta_rx_queued_mgmt+0x3f4/0x7f0 [mac80211]
        [<d91091c6>] ieee80211_iface_work+0x208/0x318 [mac80211]
        [<ac5fcae4>] process_one_work+0x22c/0x564
        [<f5e6d3b6>] worker_thread+0x44/0x5d8
        [<82c7b073>] kthread+0x150/0x154
        [<b43e1b7d>] ret_from_fork+0x14/0x2c
        [<794dff30>] 0x0
    
    It is because 8192cu doesn't implement usb_cmd_send_packet(), and this
    patch just frees the skb within the function to resolve memleak problem
    by now. Since 8192cu doesn't turn on fwctrl_lps that needs to download
    command packet for firmware via the function, applying this patch doesn't
    affect driver behavior.
    
    Reported-by: Stefan Wahren <wahrenst@gmx.net>
    Signed-off-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b32838b21ff7503b75336926a4bd3f34247521d2
Author: Pan Bian <bianpan2016@163.com>
Date:   Wed Nov 6 10:36:09 2019 +0800

    spi: img-spfi: fix potential double release
    
    [ Upstream commit e9a8ba9769a0e354341bc6cc01b98aadcea1dfe9 ]
    
    The channels spfi->tx_ch and spfi->rx_ch are not set to NULL after they
    are released. As a result, they will be released again, either on the
    error handling branch in the same function or in the corresponding
    remove function, i.e. img_spfi_remove(). This patch fixes the bug by
    setting the two members to NULL.
    
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Link: https://lore.kernel.org/r/1573007769-20131-1-git-send-email-bianpan2016@163.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 901184cf8cbafaf2802044141b8b6832924f4fe7
Author: Manish Chopra <manishc@marvell.com>
Date:   Mon Nov 4 21:51:11 2019 -0800

    bnx2x: Fix PF-VF communication over multi-cos queues.
    
    [ Upstream commit dc5a3d79c345871439ffe72550b604fcde9770e1 ]
    
    PF driver doesn't enable tx-switching for all cos queues/clients,
    which causes packets drop from PF to VF. Fix this by enabling
    tx-switching on all cos queues/clients.
    
    Signed-off-by: Manish Chopra <manishc@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5cd08667c927ad01f7a73fb17a2fcbaf541a1ec0
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Oct 24 15:13:08 2019 +0200

    pinctrl: sh-pfc: sh7734: Fix duplicate TCLK1_B
    
    [ Upstream commit 884caadad128efad8e00c1cdc3177bc8912ee8ec ]
    
    The definitions for bit field [19:18] of the Peripheral Function Select
    Register 3 were accidentally copied from bit field [20], leading to
    duplicates for the TCLK1_B function, and missing TCLK0, CAN_CLK_B, and
    ET0_ETXD4 functions.
    
    Fix this by adding the missing GPIO_FN_CAN_CLK_B and GPIO_FN_ET0_ETXD4
    enum values, and correcting the functions.
    
    Reported-by: Ben Dooks <ben.dooks@codethink.co.uk>
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20191024131308.16659-1-geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20ba9b9569f39c75f9031efb26ee1b8b9fe0eb6f
Author: John Garry <john.garry@huawei.com>
Date:   Wed Oct 16 18:19:52 2019 +0800

    libata: Ensure ata_port probe has completed before detach
    
    [ Upstream commit 130f4caf145c3562108b245a576db30b916199d2 ]
    
    With CONFIG_DEBUG_TEST_DRIVER_REMOVE set, we may find the following WARN:
    
    [   23.452574] ------------[ cut here ]------------
    [   23.457190] WARNING: CPU: 59 PID: 1 at drivers/ata/libata-core.c:6676 ata_host_detach+0x15c/0x168
    [   23.466047] Modules linked in:
    [   23.469092] CPU: 59 PID: 1 Comm: swapper/0 Not tainted 5.4.0-rc1-00010-g5b83fd27752b-dirty #296
    [   23.477776] Hardware name: Huawei D06 /D06, BIOS Hisilicon D06 UEFI RC0 - V1.16.01 03/15/2019
    [   23.486286] pstate: a0c00009 (NzCv daif +PAN +UAO)
    [   23.491065] pc : ata_host_detach+0x15c/0x168
    [   23.495322] lr : ata_host_detach+0x88/0x168
    [   23.499491] sp : ffff800011cabb50
    [   23.502792] x29: ffff800011cabb50 x28: 0000000000000007
    [   23.508091] x27: ffff80001137f068 x26: ffff8000112c0c28
    [   23.513390] x25: 0000000000003848 x24: ffff0023ea185300
    [   23.518689] x23: 0000000000000001 x22: 00000000000014c0
    [   23.523987] x21: 0000000000013740 x20: ffff0023bdc20000
    [   23.529286] x19: 0000000000000000 x18: 0000000000000004
    [   23.534584] x17: 0000000000000001 x16: 00000000000000f0
    [   23.539883] x15: ffff0023eac13790 x14: ffff0023eb76c408
    [   23.545181] x13: 0000000000000000 x12: ffff0023eac13790
    [   23.550480] x11: ffff0023eb76c228 x10: 0000000000000000
    [   23.555779] x9 : ffff0023eac13798 x8 : 0000000040000000
    [   23.561077] x7 : 0000000000000002 x6 : 0000000000000001
    [   23.566376] x5 : 0000000000000002 x4 : 0000000000000000
    [   23.571674] x3 : ffff0023bf08a0bc x2 : 0000000000000000
    [   23.576972] x1 : 3099674201f72700 x0 : 0000000000400284
    [   23.582272] Call trace:
    [   23.584706]  ata_host_detach+0x15c/0x168
    [   23.588616]  ata_pci_remove_one+0x10/0x18
    [   23.592615]  ahci_remove_one+0x20/0x40
    [   23.596356]  pci_device_remove+0x3c/0xe0
    [   23.600267]  really_probe+0xdc/0x3e0
    [   23.603830]  driver_probe_device+0x58/0x100
    [   23.608000]  device_driver_attach+0x6c/0x90
    [   23.612169]  __driver_attach+0x84/0xc8
    [   23.615908]  bus_for_each_dev+0x74/0xc8
    [   23.619730]  driver_attach+0x20/0x28
    [   23.623292]  bus_add_driver+0x148/0x1f0
    [   23.627115]  driver_register+0x60/0x110
    [   23.630938]  __pci_register_driver+0x40/0x48
    [   23.635199]  ahci_pci_driver_init+0x20/0x28
    [   23.639372]  do_one_initcall+0x5c/0x1b0
    [   23.643199]  kernel_init_freeable+0x1a4/0x24c
    [   23.647546]  kernel_init+0x10/0x108
    [   23.651023]  ret_from_fork+0x10/0x18
    [   23.654590] ---[ end trace 634a14b675b71c13 ]---
    
    With KASAN also enabled, we may also get many use-after-free reports.
    
    The issue is that when CONFIG_DEBUG_TEST_DRIVER_REMOVE is set, we may
    attempt to detach the ata_port before it has been probed.
    
    This is because the ata_ports are async probed, meaning that there is no
    guarantee that the ata_port has probed prior to detach. When the ata_port
    does probe in this scenario, we get all sorts of issues as the detach may
    have already happened.
    
    Fix by ensuring synchronisation with async_synchronize_full(). We could
    alternatively use the cookie returned from the ata_port probe
    async_schedule() call, but that means managing the cookie, so more
    complicated.
    
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afd3db1ca9048815b76ca20fca5d779169d4d995
Author: Yunfeng Ye <yeyunfeng@huawei.com>
Date:   Mon Oct 21 19:31:21 2019 +0800

    arm64: psci: Reduce the waiting time for cpu_psci_cpu_kill()
    
    [ Upstream commit bfcef4ab1d7ee8921bc322109b1692036cc6cbe0 ]
    
    In cases like suspend-to-disk and suspend-to-ram, a large number of CPU
    cores need to be shut down. At present, the CPU hotplug operation is
    serialised, and the CPU cores can only be shut down one by one. In this
    process, if PSCI affinity_info() does not return LEVEL_OFF quickly,
    cpu_psci_cpu_kill() needs to wait for 10ms. If hundreds of CPU cores
    need to be shut down, it will take a long time.
    
    Normally, there is no need to wait 10ms in cpu_psci_cpu_kill(). So
    change the wait interval from 10 ms to max 1 ms and use usleep_range()
    instead of msleep() for more accurate timer.
    
    In addition, reducing the time interval will increase the messages
    output, so remove the "Retry ..." message, instead, track time and
    output to the the sucessful message.
    
    Signed-off-by: Yunfeng Ye <yeyunfeng@huawei.com>
    Reviewed-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d63906f8a789d46306056515994bbf6d9ba48b7
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Oct 17 12:19:01 2019 +0200

    x86/ioapic: Prevent inconsistent state when moving an interrupt
    
    [ Upstream commit df4393424af3fbdcd5c404077176082a8ce459c4 ]
    
    There is an issue with threaded interrupts which are marked ONESHOT
    and using the fasteoi handler:
    
      if (IS_ONESHOT())
        mask_irq();
      ....
      cond_unmask_eoi_irq()
        chip->irq_eoi();
          if (setaffinity_pending) {
             mask_ioapic();
             ...
             move_affinity();
             unmask_ioapic();
          }
    
    So if setaffinity is pending the interrupt will be moved and then
    unconditionally unmasked at the ioapic level, which is wrong in two
    aspects:
    
     1) It should be kept masked up to the point where the threaded handler
        finished.
    
     2) The physical chip state and the software masked state are inconsistent
    
    Guard both the mask and the unmask with a check for the software masked
    state. If the line is marked masked then the ioapic line is also masked, so
    both mask_ioapic() and unmask_ioapic() can be skipped safely.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sebastian Siewior <bigeasy@linutronix.de>
    Fixes: 3aa551c9b4c4 ("genirq: add threaded interrupt handler support")
    Link: https://lkml.kernel.org/r/20191017101938.321393687@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a0bb821889912b342b229aa26fec1eb77660d7a
Author: Kangjie Lu <kjlu@umn.edu>
Date:   Thu Oct 17 23:41:50 2019 -0500

    drm/gma500: fix memory disclosures due to uninitialized bytes
    
    [ Upstream commit ec3b7b6eb8c90b52f61adff11b6db7a8db34de19 ]
    
    "clock" may be copied to "best_clock". Initializing best_clock
    is not sufficient. The fix initializes clock as well to avoid
    memory disclosures and informaiton leaks.
    
    Signed-off-by: Kangjie Lu <kjlu@umn.edu>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20191018044150.1899-1-kjlu@umn.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85d1225b09578649415ebd0a34d3bbb7ec223364
Author: Mattijs Korpershoek <mkorpershoek@baylibre.com>
Date:   Wed Oct 16 20:20:39 2019 -0700

    Bluetooth: hci_core: fix init for HCI_USER_CHANNEL
    
    [ Upstream commit eb8c101e28496888a0dcfe16ab86a1bee369e820 ]
    
    During the setup() stage, HCI device drivers expect the chip to
    acknowledge its setup() completion via vendor specific frames.
    
    If userspace opens() such HCI device in HCI_USER_CHANNEL [1] mode,
    the vendor specific frames are never tranmitted to the driver, as
    they are filtered in hci_rx_work().
    
    Allow HCI devices which operate in HCI_USER_CHANNEL mode to receive
    frames if the HCI device is is HCI_INIT state.
    
    [1] https://www.spinics.net/lists/linux-bluetooth/msg37345.html
    
    Fixes: 23500189d7e0 ("Bluetooth: Introduce new HCI socket channel for user operation")
    Signed-off-by: Mattijs Korpershoek <mkorpershoek@baylibre.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91986927053a94913eb20b67dac0d777babfc628
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Fri Oct 11 16:43:42 2019 +0200

    iio: adc: max1027: Reset the device at probe time
    
    [ Upstream commit db033831b4f5589f9fcbadb837614a7c4eac0308 ]
    
    All the registers are configured by the driver, let's reset the chip
    at probe time, avoiding any conflict with a possible earlier
    configuration.
    
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit faece3af80729763bb28449fa803d12c962571bd
Author: Jin Yao <yao.jin@linux.intel.com>
Date:   Fri Oct 11 10:21:22 2019 +0800

    perf report: Add warning when libunwind not compiled in
    
    [ Upstream commit 800d3f561659b5436f8c57e7c26dd1f6928b5615 ]
    
    We received a user report that call-graph DWARF mode was enabled in
    'perf record' but 'perf report' didn't unwind the callstack correctly.
    The reason was, libunwind was not compiled in.
    
    We can use 'perf -vv' to check the compiled libraries but it would be
    valuable to report a warning to user directly (especially valuable for
    a perf newbie).
    
    The warning is:
    
    Warning:
    Please install libunwind development packages during the perf build.
    
    Both TUI and stdio are supported.
    
    Signed-off-by: Jin Yao <yao.jin@linux.intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/20191011022122.26369-1-yao.jin@linux.intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8acd0d6543eb5043dabb1e1fd9914eae9fce9ca
Author: Sami Tolvanen <samitolvanen@google.com>
Date:   Fri Sep 13 14:14:02 2019 -0700

    x86/mm: Use the correct function type for native_set_fixmap()
    
    [ Upstream commit f53e2cd0b8ab7d9e390414470bdbd830f660133f ]
    
    We call native_set_fixmap indirectly through the function pointer
    struct pv_mmu_ops::set_fixmap, which expects the first parameter to be
    'unsigned' instead of 'enum fixed_addresses'. This patch changes the
    function type for native_set_fixmap to match the pointer, which fixes
    indirect call mismatches with Control-Flow Integrity (CFI) checking.
    
    Signed-off-by: Sami Tolvanen <samitolvanen@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: H . Peter Anvin <hpa@zytor.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@surriel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lkml.kernel.org/r/20190913211402.193018-1-samitolvanen@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 619555501cdd9193a71e9551d929c21e8923cab4
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Thu Oct 10 17:47:20 2019 +0200

    extcon: sm5502: Reset registers during initialization
    
    [ Upstream commit 6942635032cfd3e003e980d2dfa4e6323a3ce145 ]
    
    On some devices (e.g. Samsung Galaxy A5 (2015)), the bootloader
    seems to keep interrupts enabled for SM5502 when booting Linux.
    Changing the cable state (i.e. plugging in a cable) - until the driver
    is loaded - will therefore produce an interrupt that is never read.
    
    In this situation, the cable state will be stuck forever on the
    initial state because SM5502 stops sending interrupts.
    This can be avoided by clearing those pending interrupts after
    the driver has been loaded.
    
    One way to do this is to reset all registers to default state
    by writing to SM5502_REG_RESET. This ensures that we start from
    a clean state, with all interrupts disabled.
    
    Suggested-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a69f2c5b1dbba073fe334219df17f46264961fe3
Author: Benoit Parrot <bparrot@ti.com>
Date:   Mon Oct 7 12:09:58 2019 -0300

    media: ti-vpe: vpe: Make sure YUYV is set as default format
    
    [ Upstream commit e20b248051ca0f90d84b4d9378e4780bc31f16c6 ]
    
    v4l2-compliance fails with this message:
    
       fail: v4l2-test-formats.cpp(672): \
            Video Capture Multiplanar: TRY_FMT(G_FMT) != G_FMT
       fail: v4l2-test-formats.cpp(672): \
            Video Output Multiplanar: TRY_FMT(G_FMT) != G_FMT
            ...
       test VIDIOC_TRY_FMT: FAIL
    
    The default pixel format was setup as pointing to a specific offset in
    the vpe_formats table assuming it was pointing to the V4L2_PIX_FMT_YUYV
    entry. This became false after the addition on the NV21 format (see
    above commid-id)
    
    So instead of hard-coding an offset which might change over time we need
    to use a lookup helper instead so we know the default will always be what
    we intended.
    
    Signed-off-by: Benoit Parrot <bparrot@ti.com>
    Fixes: 40cc823f7005 ("media: ti-vpe: Add support for NV21 format")
    Reviewed-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd8497e48c1ed69319c7d3fd5bd1205b857baa88
Author: Benoit Parrot <bparrot@ti.com>
Date:   Mon Oct 7 12:10:00 2019 -0300

    media: ti-vpe: vpe: fix a v4l2-compliance failure about frame sequence number
    
    [ Upstream commit 2444846c0dbfa4ead21b621e4300ec32c90fbf38 ]
    
    v4l2-compliance fails with this message:
    
       fail: v4l2-test-buffers.cpp(294): \
            (int)g_sequence() < seq.last_seq + 1
       fail: v4l2-test-buffers.cpp(740): \
            buf.check(m2m_q, last_m2m_seq)
       fail: v4l2-test-buffers.cpp(974): \
            captureBufs(node, q, m2m_q, frame_count, true)
       test MMAP: FAIL
    
    The driver is failing to update the source frame sequence number in the
    vb2 buffer object. Only the destination frame sequence was being
    updated.
    
    This is only a reporting issue if the user space app actually cares
    about the frame sequence number. But it is fixed nonetheless.
    
    Signed-off-by: Benoit Parrot <bparrot@ti.com>
    Reviewed-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbeb1a4e6bcc08425e92993c0ee757f3c53e7e5c
Author: Benoit Parrot <bparrot@ti.com>
Date:   Mon Oct 7 12:09:57 2019 -0300

    media: ti-vpe: vpe: fix a v4l2-compliance warning about invalid pixel format
    
    [ Upstream commit 06bec72b250b2cb3ba96fa45c2b8e0fb83745517 ]
    
    v4l2-compliance warns with this message:
    
       warn: v4l2-test-formats.cpp(717): \
            TRY_FMT cannot handle an invalid pixelformat.
       warn: v4l2-test-formats.cpp(718): \
            This may or may not be a problem. For more information see:
       warn: v4l2-test-formats.cpp(719): \
            http://www.mail-archive.com/linux-media@vger.kernel.org/msg56550.html
            ...
       test VIDIOC_TRY_FMT: FAIL
    
    We need to make sure that the returns a valid pixel format in all
    instance. Based on the v4l2 framework convention drivers must return a
    valid pixel format when the requested pixel format is either invalid or
    not supported.
    
    Signed-off-by: Benoit Parrot <bparrot@ti.com>
    Reviewed-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a6cf20ca09434486bfbfc742c960157c23c931d
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Fri Oct 4 15:16:48 2019 -0500

    mwifiex: pcie: Fix memory leak in mwifiex_pcie_init_evt_ring
    
    [ Upstream commit d10dcb615c8e29d403a24d35f8310a7a53e3050c ]
    
    In mwifiex_pcie_init_evt_ring, a new skb is allocated which should be
    released if mwifiex_map_pci_memory() fails. The release for skb and
    card->evtbd_ring_vbase is added.
    
    Fixes: 0732484b47b5 ("mwifiex: separate ring initialization and ring creation routines")
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Acked-by: Ganapathi Bhat <gbhat@marvell.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d79d036dabed23b8c1ede9bd648822dc38304bdd
Author: Daniel T. Lee <danieltimlee@gmail.com>
Date:   Sat Oct 5 17:25:07 2019 +0900

    samples: pktgen: fix proc_cmd command result check logic
    
    [ Upstream commit 3cad8f911575191fb3b81d8ed0e061e30f922223 ]
    
    Currently, proc_cmd is used to dispatch command to 'pg_ctrl', 'pg_thread',
    'pg_set'. proc_cmd is designed to check command result with grep the
    "Result:", but this might fail since this string is only shown in
    'pg_thread' and 'pg_set'.
    
    This commit fixes this logic by grep-ing the "Result:" string only when
    the command is not for 'pg_ctrl'.
    
    For clarity of an execution flow, 'errexit' flag has been set.
    
    To cleanup pktgen on exit, trap has been added for EXIT signal.
    
    Signed-off-by: Daniel T. Lee <danieltimlee@gmail.com>
    Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f19a9d8f467e000a176301261b872ca68dc92519
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Sep 24 06:49:04 2019 -0300

    media: flexcop-usb: fix NULL-ptr deref in flexcop_usb_transfer_init()
    
    [ Upstream commit 649cd16c438f51d4cd777e71ca1f47f6e0c5e65d ]
    
    If usb_set_interface() failed, iface->cur_altsetting will
    not be assigned and it will be used in flexcop_usb_transfer_init()
    It may lead a NULL pointer dereference.
    
    Check usb_set_interface() return value in flexcop_usb_init()
    and return failed to avoid using this NULL pointer.
    
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eaa654d1e4f3c2194d8d4d2578aa9bce2dddec61
Author: Yizhuo <yzhai003@ucr.edu>
Date:   Thu Oct 3 10:58:13 2019 -0700

    regulator: max8907: Fix the usage of uninitialized variable in max8907_regulator_probe()
    
    [ Upstream commit 472b39c3d1bba0616eb0e9a8fa3ad0f56927c7d7 ]
    
    Inside function max8907_regulator_probe(), variable val could
    be uninitialized if regmap_read() fails. However, val is used
    later in the if statement to decide the content written to
    "pmic", which is potentially unsafe.
    
    Signed-off-by: Yizhuo <yzhai003@ucr.edu>
    Link: https://lore.kernel.org/r/20191003175813.16415-1-yzhai003@ucr.edu
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6b766dde980641d6d2948dce25f1039be7776ba
Author: Tony Lindgren <tony@atomide.com>
Date:   Sat Sep 14 14:02:56 2019 -0700

    hwrng: omap3-rom - Call clk_disable_unprepare() on exit only if not idled
    
    [ Upstream commit eaecce12f5f0d2c35d278e41e1bc4522393861ab ]
    
    When unloading omap3-rom-rng, we'll get the following:
    
    WARNING: CPU: 0 PID: 100 at drivers/clk/clk.c:948 clk_core_disable
    
    This is because the clock may be already disabled by omap3_rom_rng_idle().
    Let's fix the issue by checking for rng_idle on exit.
    
    Cc: Aaro Koskinen <aaro.koskinen@iki.fi>
    Cc: Adam Ford <aford173@gmail.com>
    Cc: Pali Rohár <pali.rohar@gmail.com>
    Cc: Sebastian Reichel <sre@kernel.org>
    Cc: Tero Kristo <t-kristo@ti.com>
    Fixes: 1c6b7c2108bd ("hwrng: OMAP3 ROM Random Number Generator support")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 847d5f145a575dc3ced94facd8d0c6fa3699f9e6
Author: Veeraiyan Chidambaram <veeraiyan.chidambaram@in.bosch.com>
Date:   Wed Sep 11 15:15:56 2019 +0200

    usb: renesas_usbhs: add suspend event support in gadget mode
    
    [ Upstream commit 39abcc84846bbc0538f13c190b6a9c7e36890cd2 ]
    
    When R-Car Gen3 USB 2.0 is in Gadget mode, if host is detached an interrupt
    will be generated and Suspended state bit is set in interrupt status
    register. Interrupt handler will call driver->suspend(composite_suspend)
    if suspended state bit is set. composite_suspend will call
    ffs_func_suspend which will post FUNCTIONFS_SUSPEND and will be consumed
    by user space application via /dev/ep0.
    
    To be able to detect host detach, extend the DVSQ_MASK to cover the
    Suspended bit of the DVSQ[2:0] bitfield from the Interrupt Status
    Register 0 (INTSTS0) register and perform appropriate action in the
    DVST interrupt handler (usbhsg_irq_dev_state).
    
    Without this commit, disconnection of the phone from R-Car-H3 ES2.0
    Salvator-X CN9 port is not recognized and reverse role switch does
    not happen. If phone is connected again it does not enumerate.
    
    With this commit, disconnection will be recognized and reverse role
    switch will happen by a user space application. If phone is connected
    again it will enumerate properly and will become visible in the output
    of 'lsusb'.
    
    Signed-off-by: Veeraiyan Chidambaram <veeraiyan.chidambaram@in.bosch.com>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Reviewed-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Tested-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/1568207756-22325-3-git-send-email-external.veeraiyan.c@de.adit-jv.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd6d6789da7ea3ea7ccdc1c6cea21aa65b06ec6c
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Fri Sep 27 09:26:42 2019 -0700

    tools/power/cpupower: Fix initializer override in hsw_ext_cstates
    
    [ Upstream commit 7e5705c635ecfccde559ebbbe1eaf05b5cc60529 ]
    
    When building cpupower with clang, the following warning appears:
    
     utils/idle_monitor/hsw_ext_idle.c:42:16: warning: initializer overrides
     prior initialization of this subobject [-Winitializer-overrides]
                     .desc                   = N_("Processor Package C2"),
                                                  ^~~~~~~~~~~~~~~~~~~~~~
     ./utils/helpers/helpers.h:25:33: note: expanded from macro 'N_'
     #define N_(String) gettext_noop(String)
                                     ^~~~~~
     ./utils/helpers/helpers.h:23:30: note: expanded from macro
     'gettext_noop'
     #define gettext_noop(String) String
                                  ^~~~~~
     utils/idle_monitor/hsw_ext_idle.c:41:16: note: previous initialization
     is here
                     .desc                   = N_("Processor Package C9"),
                                                  ^~~~~~~~~~~~~~~~~~~~~~
     ./utils/helpers/helpers.h:25:33: note: expanded from macro 'N_'
     #define N_(String) gettext_noop(String)
                                     ^~~~~~
     ./utils/helpers/helpers.h:23:30: note: expanded from macro
     'gettext_noop'
     #define gettext_noop(String) String
                                 ^~~~~~
     1 warning generated.
    
    This appears to be a copy and paste or merge mistake because the name
    and id fields both have PC9 in them, not PC2. Remove the second
    assignment to fix the warning.
    
    Fixes: 7ee767b69b68 ("cpupower: Add Haswell family 0x45 specific idle monitor to show PC8,9,10 states")
    Link: https://github.com/ClangBuiltLinux/linux/issues/718
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1613dd569abdd444c0b9e6ca699fd93e8605dd2f
Author: Janusz Krzysztofik <jmkrzyszt@gmail.com>
Date:   Tue Sep 3 17:11:43 2019 -0300

    media: ov6650: Fix stored frame format not in sync with hardware
    
    [ Upstream commit 3143b459de4cdcce67b36827476c966e93c1cf01 ]
    
    The driver stores frame format settings supposed to be in line with
    hardware state in a device private structure.  Since the driver initial
    submission, those settings are updated before they are actually applied
    on hardware.  If an error occurs on device update, the stored settings
    my not reflect hardware state anymore and consecutive calls to
    .get_fmt() may return incorrect information.  That in turn may affect
    ability of a bridge device to use correct DMA transfer settings if such
    incorrect informmation on active frame format returned by .get_fmt() is
    used.
    
    Assuming a failed device update means its state hasn't changed, update
    frame format related settings stored in the device private structure
    only after they are successfully applied so the stored values always
    reflect hardware state as closely as possible.
    
    Fixes: 2f6e2404799a ("[media] SoC Camera: add driver for OV6650 sensor")
    Signed-off-by: Janusz Krzysztofik <jmkrzyszt@gmail.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff7f8479d3fc9e7144623a904b04cc3aedcf849d
Author: Benoit Parrot <bparrot@ti.com>
Date:   Mon Sep 30 10:06:43 2019 -0300

    media: i2c: ov2659: Fix missing 720p register config
    
    [ Upstream commit 9d669fbfca20e6035ead814e55d9ef1a6b500540 ]
    
    The initial registers sequence is only loaded at probe
    time. Afterward only the resolution and format specific
    register are modified. Care must be taken to make sure
    registers modified by one resolution setting are reverted
    back when another resolution is programmed.
    
    This was not done properly for the 720p case.
    
    Signed-off-by: Benoit Parrot <bparrot@ti.com>
    Acked-by: Lad, Prabhakar <prabhakar.csengg@gmail.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 593c0564f1275aeece776198cab077d56e273bb2
Author: Benoit Parrot <bparrot@ti.com>
Date:   Mon Sep 30 10:06:40 2019 -0300

    media: i2c: ov2659: fix s_stream return value
    
    [ Upstream commit 85c4043f1d403c222d481dfc91846227d66663fb ]
    
    In ov2659_s_stream() return value for invoked function should be checked
    and propagated.
    
    Signed-off-by: Benoit Parrot <bparrot@ti.com>
    Acked-by: Lad, Prabhakar <prabhakar.csengg@gmail.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7361bab5eba37027d5993add2ca6eed7a0870be5
Author: Benoit Parrot <bparrot@ti.com>
Date:   Fri Sep 20 14:05:48 2019 -0300

    media: am437x-vpfe: Setting STD to current value is not an error
    
    [ Upstream commit 13aa21cfe92ce9ebb51824029d89f19c33f81419 ]
    
    VIDIOC_S_STD should not return an error if the value is identical
    to the current one.
    This error was highlighted by the v4l2-compliance test.
    
    Signed-off-by: Benoit Parrot <bparrot@ti.com>
    Acked-by: Lad Prabhakar <prabhakar.csengg@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3bb807dfc80f1ef55543d5aecad0a4eaf335c89
Author: Max Gurtovoy <maxg@mellanox.com>
Date:   Wed Sep 25 00:03:47 2019 +0300

    IB/iser: bound protection_sg size by data_sg size
    
    [ Upstream commit 7718cf03c3ce4b6ebd90107643ccd01c952a1fce ]
    
    In case we don't set the sg_prot_tablesize, the scsi layer assign the
    default size (65535 entries). We should limit this size since we should
    take into consideration the underlaying device capability. This cap is
    considered when calculating the sg_tablesize. Otherwise, for example,
    we can get that /sys/block/sdb/queue/max_segments is 128 and
    /sys/block/sdb/queue/max_integrity_segments is 65535.
    
    Link: https://lore.kernel.org/r/1569359027-10987-1-git-send-email-maxg@mellanox.com
    Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca4fb6974bb645ebf3352f5bba7699db4b44b75f
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Tue Sep 24 20:20:21 2019 -0500

    rtlwifi: prevent memory leak in rtl_usb_probe
    
    [ Upstream commit 3f93616951138a598d930dcaec40f2bfd9ce43bb ]
    
    In rtl_usb_probe if allocation for usb_data fails the allocated hw
    should be released. In addition the allocated rtlpriv->usb_data should
    be released on error handling path.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15a99cbc09f1e6764aec1d22f68ef2d122dbad22
Author: Connor Kuehl <connor.kuehl@canonical.com>
Date:   Thu Sep 26 08:03:17 2019 -0700

    staging: rtl8188eu: fix possible null dereference
    
    [ Upstream commit 228241944a48113470d3c3b46c88ba7fbe0a274b ]
    
    Inside a nested 'else' block at the beginning of this function is a
    call that assigns 'psta' to the return value of 'rtw_get_stainfo()'.
    If 'rtw_get_stainfo()' returns NULL and the flow of control reaches
    the 'else if' where 'psta' is dereferenced, then we will dereference
    a NULL pointer.
    
    Fix this by checking if 'psta' is not NULL before reading its
    'psta->qos_option' data member.
    
    Addresses-Coverity: ("Dereference null return value")
    
    Signed-off-by: Connor Kuehl <connor.kuehl@canonical.com>
    Acked-by: Larry Finger <Larry.Finger@lwfinger.net>
    Link: https://lore.kernel.org/r/20190926150317.5894-1-connor.kuehl@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12b7e214561833bed54e2443bbb4cb6d7c83577f
Author: Lukasz Majewski <lukma@denx.de>
Date:   Wed Sep 25 11:11:42 2019 +0200

    spi: Add call to spi_slave_abort() function when spidev driver is released
    
    [ Upstream commit 9f918a728cf86b2757b6a7025e1f46824bfe3155 ]
    
    This change is necessary for spidev devices (e.g. /dev/spidev3.0) working
    in the slave mode (like NXP's dspi driver for Vybrid SoC).
    
    When SPI HW works in this mode - the master is responsible for providing
    CS and CLK signals. However, when some fault happens - like for example
    distortion on SPI lines - the SPI Linux driver needs a chance to recover
    from this abnormal situation and prepare itself for next (correct)
    transmission.
    
    This change doesn't pose any threat on drivers working in master mode as
    spi_slave_abort() function checks if SPI slave mode is supported.
    
    Signed-off-by: Lukasz Majewski <lukma@denx.de>
    Link: https://lore.kernel.org/r/20190924110547.14770-2-lukma@denx.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Reported-by: kbuild test robot <lkp@intel.com>
    Link: https://lore.kernel.org/r/20190925091143.15468-2-lukma@denx.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c10313962b39672630e2b63c6da4e572ed9416a4
Author: Krzysztof Wilczynski <kw@linux.com>
Date:   Fri Sep 13 22:24:13 2019 +0200

    iio: light: bh1750: Resolve compiler warning and make code more readable
    
    [ Upstream commit f552fde983d378e7339f9ea74a25f918563bf0d3 ]
    
    Separate the declaration of struct bh1750_chip_info from definition
    of bh1750_chip_info_tbl[] in a single statement as it makes the code
    hard to read, and with the extra newline it makes it look as if the
    bh1750_chip_info_tbl[] had no explicit type.
    
    This change also resolves the following compiler warning about the
    unusual position of the static keyword that can be seen when building
    with warnings enabled (W=1):
    
    drivers/iio/light/bh1750.c:64:1: warning:
      ‘static’ is not at beginning of declaration [-Wold-style-declaration]
    
    Related to commit 3a11fbb037a1 ("iio: light: add support for ROHM
    BH1710/BH1715/BH1721/BH1750/BH1751 ambient light sensors").
    
    Signed-off-by: Krzysztof Wilczynski <kw@linux.com>
    Acked-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d71b43537c84ca92337c9b8aeb058bc3ef34660
Author: Sean Paul <seanpaul@chromium.org>
Date:   Thu Aug 29 12:52:19 2019 -0400

    drm: mst: Fix query_payload ack reply struct
    
    [ Upstream commit 268de6530aa18fe5773062367fd119f0045f6e88 ]
    
    Spec says[1] Allocated_PBN is 16 bits
    
    [1]- DisplayPort 1.2 Spec, Section 2.11.9.8, Table 2-98
    
    Fixes: ad7f8a1f9ced ("drm/helper: add Displayport multi-stream helper (v0.6)")
    Cc: Lyude Paul <lyude@redhat.com>
    Cc: Todd Previte <tprevite@gmail.com>
    Cc: Dave Airlie <airlied@redhat.com>
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Cc: Maxime Ripard <maxime.ripard@bootlin.com>
    Cc: Sean Paul <sean@poorly.run>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: dri-devel@lists.freedesktop.org
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190829165223.129662-1-sean@poorly.run
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47a3a9ec274f70fe07ce82372aca92cd38f879a5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Dec 13 09:51:10 2019 +0100

    ALSA: hda/ca0132 - Avoid endless loop
    
    commit cb04fc3b6b076f67d228a0b7d096c69ad486c09c upstream.
    
    Introduce a timeout to dspio_clear_response_queue() so that it won't
    be caught in an endless loop even if the hardware doesn't respond
    properly.
    
    Fixes: a73d511c4867 ("ALSA: hda/ca0132: Add unsol handler for DSP and jack detection")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191213085111.22855-3-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86e36047ae49ab937eff9187721bbfd7a46bbb68
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Dec 13 09:51:09 2019 +0100

    ALSA: hda/ca0132 - Keep power on during processing DSP response
    
    commit 377bc0cfabce0244632dada19060839ced4e6949 upstream.
    
    We need to keep power on while processing the DSP response via unsol
    event.  Each snd_hda_codec_read() call does the power management, so
    it should work normally, but still it's safer to keep the power up for
    the whole function.
    
    Fixes: a73d511c4867 ("ALSA: hda/ca0132: Add unsol handler for DSP and jack detection")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191213085111.22855-2-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 328020f2c38a77300f57affb72edf300040ea696
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Dec 6 11:39:00 2019 -0500

    btrfs: handle ENOENT in btrfs_uuid_tree_iterate
    
    commit 714cd3e8cba6841220dce9063a7388a81de03825 upstream.
    
    If we get an -ENOENT back from btrfs_uuid_iter_rem when iterating the
    uuid tree we'll just continue and do btrfs_next_item().  However we've
    done a btrfs_release_path() at this point and no longer have a valid
    path.  So increment the key and go back and do a normal search.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cc448665196f2ab424f4f16918aeff318e240c2
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Dec 6 09:37:18 2019 -0500

    btrfs: do not leak reloc root if we fail to read the fs root
    
    commit ca1aa2818a53875cfdd175fb5e9a2984e997cce9 upstream.
    
    If we fail to read the fs root corresponding with a reloc root we'll
    just break out and free the reloc roots.  But we remove our current
    reloc_root from this list higher up, which means we'll leak this
    reloc_root.  Fix this by adding ourselves back to the reloc_roots list
    so we are properly cleaned up.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
