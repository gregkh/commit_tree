commit 73895725a9401bd3454757fcfa7d691270ac7498
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Mar 26 15:01:29 2015 +0100

    Linux 3.10.73

commit 362684ea8f4c4af3e34a8779b49f07928de449a2
Author: Lee Duncan <lduncan@suse.com>
Date:   Mon Jan 5 10:49:44 2015 -0800

    target: Allow Write Exclusive non-reservation holders to READ
    
    commit 1ecc7586922662e3ca2f3f0c3f17fec8749fc621 upstream.
    
    For PGR reservation of type Write Exclusive Access, allow all non
    reservation holding I_T nexuses with active registrations to READ
    from the device.
    
    This addresses a bug where active registrations that attempted
    to READ would result in an reservation conflict.
    
    Signed-off-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e15feee101bc2853ce01157dba9b66d8c3e3725
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Dec 19 00:49:23 2014 +0000

    target: Allow AllRegistrants to re-RESERVE existing reservation
    
    commit ae450e246e8540300699480a3780a420a028b73f upstream.
    
    This patch changes core_scsi3_pro_release() logic to allow an
    existing AllRegistrants type reservation to be re-reserved by
    any registered I_T nexus.
    
    This addresses a issue where AllRegistrants type RESERVE was
    receiving RESERVATION_CONFLICT status if dev_pr_res_holder did
    not match the same I_T nexus, instead of just returning GOOD
    status following spc4r34 Section 5.9.9:
    
    "If the device server receives a PERSISTENT RESERVE OUT command
     with RESERVE service action where the TYPE field and the SCOPE
     field contain the same values as the existing type and scope
     from a persistent reservation holder, it shall not make any
     change to the existing persistent reservation and shall complete
     the command with GOOD status."
    
    Reported-by: Ilias Tsitsimpis <i.tsitsimpis@gmail.com>
    Cc: Ilias Tsitsimpis <i.tsitsimpis@gmail.com>
    Cc: Lee Duncan <lduncan@suse.com>
    Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dba66c1550f751179776b8d2a86fa06203e54e7d
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Sun Dec 14 01:47:19 2014 -0800

    target: Fix R_HOLDER bit usage for AllRegistrants
    
    commit d16ca7c5198fd668db10d2c7b048ed3359c12c54 upstream.
    
    This patch fixes the usage of R_HOLDER bit for an All Registrants
    reservation in READ_FULL_STATUS, where only the registration who
    issued RESERVE was being reported as having an active reservation.
    
    It changes core_scsi3_pri_read_full_status() to check ahead of the
    list walk of active registrations to see if All Registrants is active,
    and if so set R_HOLDER bit and scope/type fields for all active
    registrations.
    
    Reported-by: Ilias Tsitsimpis <i.tsitsimpis@gmail.com>
    Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bb09afbcef61767194ef3792755e38265915cd9
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Feb 27 03:54:13 2015 -0800

    target/pscsi: Fix NULL pointer dereference in get_device_type
    
    commit 215a8fe4198f607f34ecdbc9969dae783d8b5a61 upstream.
    
    This patch fixes a NULL pointer dereference OOPs with pSCSI backends
    within target_core_stat.c code.  The bug is caused by a configfs attr
    read if no pscsi_dev_virt->pdv_sd has been configured.
    
    Reported-by: Olaf Hering <olaf@aepfle.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2078161617e32d457414cd9accabe33909142b90
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Mon Feb 23 00:57:51 2015 -0800

    iscsi-target: Avoid early conn_logout_comp for iser connections
    
    commit f068fbc82e7696d67b1bb8189306865bedf368b6 upstream.
    
    This patch fixes a iser specific logout bug where early complete()
    of conn->conn_logout_comp in iscsit_close_connection() was causing
    isert_wait4logout() to complete too soon, triggering a use after
    free NULL pointer dereference of iscsi_conn memory.
    
    The complete() was originally added for traditional iscsi-target
    when a ISCSI_LOGOUT_OP failed in iscsi_target_rx_opcode(), but given
    iser-target does not wait in logout failure, this special case needs
    to be avoided.
    
    Reported-by: Sagi Grimberg <sagig@mellanox.com>
    Cc: Sagi Grimberg <sagig@mellanox.com>
    Cc: Slava Shwartsman <valyushash@gmail.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99360ec83ed2fe8046c09e0fcb5eafcfe9d9e86d
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Feb 18 15:33:58 2015 +0100

    target: Fix reference leak in target_get_sess_cmd() error path
    
    commit 7544e597343e2166daba3f32e4708533aa53c233 upstream.
    
    This patch fixes a se_cmd->cmd_kref leak buf when se_sess->sess_tearing_down
    is true within target_get_sess_cmd() submission path code.
    
    This se_cmd reference leak can occur during active session shutdown when
    ack_kref=1 is passed by target_submit_cmd_[map_sgls,tmr]() callers.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1d3eb6ce05ce9ff9b8d7bbe351a23ff8da96254
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Tue Mar 3 19:58:22 2015 +0100

    ARM: at91: pm: fix at91rm9200 standby
    
    commit 84e871660bebfddb9a62ebd6f19d02536e782f0a upstream.
    
    at91rm9200 standby and suspend to ram has been broken since
    00482a4078f4. It is wrongly using AT91_BASE_SYS which is a physical address
    and actually doesn't correspond to any register on at91rm9200.
    
    Use the correct at91_ramc_base[0] instead.
    
    Fixes: 00482a4078f4 (ARM: at91: implement the standby function for pm/cpuidle)
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96b077b4a5e4f7dc1f734072898b5d3e2dcdd2b2
Author: Julian Anastasov <ja@ssi.bg>
Date:   Thu Dec 18 22:41:23 2014 +0200

    ipvs: rerouting to local clients is not needed anymore
    
    commit 579eb62ac35845686a7c4286c0a820b4eb1f96aa upstream.
    
    commit f5a41847acc5 ("ipvs: move ip_route_me_harder for ICMP")
    from 2.6.37 introduced ip_route_me_harder() call for responses to
    local clients, so that we can provide valid rt_src after SNAT.
    It was used by TCP to provide valid daddr for ip_send_reply().
    After commit 0a5ebb8000c5 ("ipv4: Pass explicit daddr arg to
    ip_send_reply()." from 3.0 this rerouting is not needed anymore
    and should be avoided, especially in LOCAL_IN.
    
    Fixes 3.12.33 crash in xfrm reported by Florian Wiessner:
    "3.12.33 - BUG xfrm_selector_match+0x25/0x2f6"
    
    Reported-by: Smart Weblications GmbH - Florian Wiessner <f.wiessner@smart-weblications.de>
    Tested-by: Smart Weblications GmbH - Florian Wiessner <f.wiessner@smart-weblications.de>
    Signed-off-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2fd8357353635ca5d0ebabda0533f04049b35a6f
Author: Julian Anastasov <ja@ssi.bg>
Date:   Sat Feb 21 21:03:10 2015 +0200

    ipvs: add missing ip_vs_pe_put in sync code
    
    commit 528c943f3bb919aef75ab2fff4f00176f09a4019 upstream.
    
    ip_vs_conn_fill_param_sync() gets in param.pe a module
    reference for persistence engine from __ip_vs_pe_getbyname()
    but forgets to put it. Problem occurs in backup for
    sync protocol v1 (2.6.39).
    
    Also, pe_data usually comes in sync messages for
    connection templates and ip_vs_conn_new() copies
    the pointer only in this case. Make sure pe_data
    is not leaked if it comes unexpectedly for normal
    connections. Leak can happen only if bogus messages
    are sent to backup server.
    
    Fixes: fe5e7a1efb66 ("IPVS: Backup, Adding Version 1 receive capability")
    Signed-off-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f18d6525496068dabd5f69cc3dd8d01e79c892b
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Feb 24 17:58:02 2015 +1100

    powerpc/smp: Wait until secondaries are active & online
    
    commit 875ebe940d77a41682c367ad799b4f39f128d3fa upstream.
    
    Anton has a busy ppc64le KVM box where guests sometimes hit the infamous
    "kernel BUG at kernel/smpboot.c:134!" issue during boot:
    
      BUG_ON(td->cpu != smp_processor_id());
    
    Basically a per CPU hotplug thread scheduled on the wrong CPU. The oops
    output confirms it:
    
      CPU: 0
      Comm: watchdog/130
    
    The problem is that we aren't ensuring the CPU active bit is set for the
    secondary before allowing the master to continue on. The master unparks
    the secondary CPU's kthreads and the scheduler looks for a CPU to run
    on. It calls select_task_rq() and realises the suggested CPU is not in
    the cpus_allowed mask. It then ends up in select_fallback_rq(), and
    since the active bit isnt't set we choose some other CPU to run on.
    
    This seems to have been introduced by 6acbfb96976f "sched: Fix hotplug
    vs. set_cpus_allowed_ptr()", which changed from setting active before
    online to setting active after online. However that was in turn fixing a
    bug where other code assumed an active CPU was also online, so we can't
    just revert that fix.
    
    The simplest fix is just to spin waiting for both active & online to be
    set. We already have a barrier prior to set_cpu_online() (which also
    sets active), to ensure all other setup is completed before online &
    active are set.
    
    Fixes: 6acbfb96976f ("sched: Fix hotplug vs. set_cpus_allowed_ptr()")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99a9adcaf4b58031d8802c266b9166d558415c38
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Thu Mar 5 09:13:31 2015 +0100

    x86/vdso: Fix the build on GCC5
    
    commit e893286918d2cde3a94850d8f7101cd1039e0c62 upstream.
    
    On gcc5 the kernel does not link:
    
      ld: .eh_frame_hdr table[4] FDE at 0000000000000648 overlaps table[5] FDE at 0000000000000670.
    
    Because prior GCC versions always emitted NOPs on ALIGN directives, but
    gcc5 started omitting them.
    
    .LSTARTFDEDLSI1 says:
    
            /* HACK: The dwarf2 unwind routines will subtract 1 from the
               return address to get an address in the middle of the
               presumed call instruction.  Since we didn't get here via
               a call, we need to include the nop before the real start
               to make up for it.  */
            .long .LSTART_sigreturn-1-.     /* PC-relative start address */
    
    But commit 69d0627a7f6e ("x86 vDSO: reorder vdso32 code") from 2.6.25
    replaced .org __kernel_vsyscall+32,0x90 by ALIGN right before
    __kernel_sigreturn.
    
    Of course, ALIGN need not generate any NOP in there. Esp. gcc5 collapses
    vclock_gettime.o and int80.o together with no generated NOPs as "ALIGN".
    
    So fix this by adding to that point at least a single NOP and make the
    function ALIGN possibly with more NOPs then.
    
    Kudos for reporting and diagnosing should go to Richard.
    
    Reported-by: Richard Biener <rguenther@suse.de>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Acked-by: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/1425543211-12542-1-git-send-email-jslaby@suse.cz
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16329d3d06836a47ac9bc66867b0bd09dfb76ad9
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Fri Mar 13 09:53:10 2015 +0100

    x86/fpu: Drop_fpu() should not assume that tsk equals current
    
    commit f4c3686386393c120710dd34df2a74183ab805fd upstream.
    
    drop_fpu() does clear_used_math() and usually this is correct
    because tsk == current.
    
    However switch_fpu_finish()->restore_fpu_checking() is called before
    __switch_to() updates the "current_task" variable. If it fails,
    we will wrongly clear the PF_USED_MATH flag of the previous task.
    
    So use clear_stopped_child_used_math() instead.
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Rik van Riel <riel@redhat.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Pekka Riikonen <priikone@iki.fi>
    Cc: Quentin Casasnovas <quentin.casasnovas@oracle.com>
    Cc: Suresh Siddha <sbsiddha@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20150309171041.GB11388@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e6d9ee06210b979bca6f4d3a1e1d663e0bc5bcb
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Fri Mar 13 09:53:09 2015 +0100

    x86/fpu: Avoid math_state_restore() without used_math() in __restore_xstate_sig()
    
    commit a7c80ebcac3068b1c3cb27d538d29558c30010c8 upstream.
    
    math_state_restore() assumes it is called with irqs disabled,
    but this is not true if the caller is __restore_xstate_sig().
    
    This means that if ia32_fxstate == T and __copy_from_user()
    fails, __restore_xstate_sig() returns with irqs disabled too.
    
    This triggers:
    
      BUG: sleeping function called from invalid context at kernel/locking/rwsem.c:41
       dump_stack
       ___might_sleep
       ? _raw_spin_unlock_irqrestore
       __might_sleep
       down_read
       ? _raw_spin_unlock_irqrestore
       print_vma_addr
       signal_fault
       sys32_rt_sigreturn
    
    Change __restore_xstate_sig() to call set_used_math()
    unconditionally. This avoids enabling and disabling interrupts
    in math_state_restore(). If copy_from_user() fails, we can
    simply do fpu_finit() by hand.
    
    [ Note: this is only the first step. math_state_restore() should
            not check used_math(), it should set this flag. While
            init_fpu() should simply die. ]
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Pekka Riikonen <priikone@iki.fi>
    Cc: Quentin Casasnovas <quentin.casasnovas@oracle.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Suresh Siddha <sbsiddha@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20150307153844.GB25954@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31c06b946ce68c0792288f456f0e57e45c19b322
Author: Stephan Mueller <smueller@chronox.de>
Date:   Thu Mar 12 09:17:51 2015 +0100

    crypto: aesni - fix memory usage in GCM decryption
    
    commit ccfe8c3f7e52ae83155cb038753f4c75b774ca8a upstream.
    
    The kernel crypto API logic requires the caller to provide the
    length of (ciphertext || authentication tag) as cryptlen for the
    AEAD decryption operation. Thus, the cipher implementation must
    calculate the size of the plaintext output itself and cannot simply use
    cryptlen.
    
    The RFC4106 GCM decryption operation tries to overwrite cryptlen memory
    in req->dst. As the destination buffer for decryption only needs to hold
    the plaintext memory but cryptlen references the input buffer holding
    (ciphertext || authentication tag), the assumption of the destination
    buffer length in RFC4106 GCM operation leads to a too large size. This
    patch simply uses the already calculated plaintext size.
    
    In addition, this patch fixes the offset calculation of the AAD buffer
    pointer: as mentioned before, cryptlen already includes the size of the
    tag. Thus, the tag does not need to be added. With the addition, the AAD
    will be written beyond the already allocated buffer.
    
    Note, this fixes a kernel crash that can be triggered from user space
    via AF_ALG(aead) -- simply use the libkcapi test application
    from [1] and update it to use rfc4106-gcm-aes.
    
    Using [1], the changes were tested using CAVS vectors to demonstrate
    that the crypto operation still delivers the right results.
    
    [1] http://www.chronox.de/libkcapi.html
    
    CC: Tadeusz Struk <tadeusz.struk@intel.com>
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2e35381f37b4d110add16aa2ca52a19801219c4
Author: James Bottomley <JBottomley@Parallels.com>
Date:   Wed Mar 4 16:18:33 2015 -0800

    libsas: Fix Kernel Crash in smp_execute_task
    
    commit 6302ce4d80aa82b3fdb5c5cd68e7268037091b47 upstream.
    
    This crash was reported:
    
    [  366.947370] sd 3:0:1:0: [sdb] Spinning up disk....
    [  368.804046] BUG: unable to handle kernel NULL pointer dereference at           (null)
    [  368.804072] IP: [<ffffffff81358457>] __mutex_lock_common.isra.7+0x9c/0x15b
    [  368.804098] PGD 0
    [  368.804114] Oops: 0002 [#1] SMP
    [  368.804143] CPU 1
    [  368.804151] Modules linked in: sg netconsole s3g(PO) uinput joydev hid_multitouch usbhid hid snd_hda_codec_via cpufreq_userspace cpufreq_powersave cpufreq_stats uhci_hcd cpufreq_conservative snd_hda_intel snd_hda_codec snd_hwdep snd_pcm sdhci_pci snd_page_alloc sdhci snd_timer snd psmouse evdev serio_raw pcspkr soundcore xhci_hcd shpchp s3g_drm(O) mvsas mmc_core ahci libahci drm i2c_core acpi_cpufreq mperf video processor button thermal_sys dm_dmirror exfat_fs exfat_core dm_zcache dm_mod padlock_aes aes_generic padlock_sha iscsi_target_mod target_core_mod configfs sswipe libsas libata scsi_transport_sas picdev via_cputemp hwmon_vid fuse parport_pc ppdev lp parport autofs4 ext4 crc16 mbcache jbd2 sd_mod crc_t10dif usb_storage scsi_mod ehci_hcd usbcore usb_common
    [  368.804749]
    [  368.804764] Pid: 392, comm: kworker/u:3 Tainted: P        W  O 3.4.87-logicube-ng.22 #1 To be filled by O.E.M. To be filled by O.E.M./EPIA-M920
    [  368.804802] RIP: 0010:[<ffffffff81358457>]  [<ffffffff81358457>] __mutex_lock_common.isra.7+0x9c/0x15b
    [  368.804827] RSP: 0018:ffff880117001cc0  EFLAGS: 00010246
    [  368.804842] RAX: 0000000000000000 RBX: ffff8801185030d0 RCX: ffff88008edcb420
    [  368.804857] RDX: 0000000000000000 RSI: 0000000000000002 RDI: ffff8801185030d4
    [  368.804873] RBP: ffff8801181531c0 R08: 0000000000000020 R09: 00000000fffffffe
    [  368.804885] R10: 0000000000000000 R11: 0000000000000000 R12: ffff8801185030d4
    [  368.804899] R13: 0000000000000002 R14: ffff880117001fd8 R15: ffff8801185030d8
    [  368.804916] FS:  0000000000000000(0000) GS:ffff88011fc80000(0000) knlGS:0000000000000000
    [  368.804931] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [  368.804946] CR2: 0000000000000000 CR3: 000000000160b000 CR4: 00000000000006e0
    [  368.804962] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  368.804978] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
    [  368.804995] Process kworker/u:3 (pid: 392, threadinfo ffff880117000000, task ffff8801181531c0)
    [  368.805009] Stack:
    [  368.805017]  ffff8801185030d8 0000000000000000 ffffffff8161ddf0 ffffffff81056f7c
    [  368.805062]  000000000000b503 ffff8801185030d0 ffff880118503000 0000000000000000
    [  368.805100]  ffff8801185030d0 ffff8801188b8000 ffff88008edcb420 ffffffff813583ac
    [  368.805135] Call Trace:
    [  368.805153]  [<ffffffff81056f7c>] ? up+0xb/0x33
    [  368.805168]  [<ffffffff813583ac>] ? mutex_lock+0x16/0x25
    [  368.805194]  [<ffffffffa018c414>] ? smp_execute_task+0x4e/0x222 [libsas]
    [  368.805217]  [<ffffffffa018ce1c>] ? sas_find_bcast_dev+0x3c/0x15d [libsas]
    [  368.805240]  [<ffffffffa018ce4f>] ? sas_find_bcast_dev+0x6f/0x15d [libsas]
    [  368.805264]  [<ffffffffa018e989>] ? sas_ex_revalidate_domain+0x37/0x2ec [libsas]
    [  368.805280]  [<ffffffff81355a2a>] ? printk+0x43/0x48
    [  368.805296]  [<ffffffff81359a65>] ? _raw_spin_unlock_irqrestore+0xc/0xd
    [  368.805318]  [<ffffffffa018b767>] ? sas_revalidate_domain+0x85/0xb6 [libsas]
    [  368.805336]  [<ffffffff8104e5d9>] ? process_one_work+0x151/0x27c
    [  368.805351]  [<ffffffff8104f6cd>] ? worker_thread+0xbb/0x152
    [  368.805366]  [<ffffffff8104f612>] ? manage_workers.isra.29+0x163/0x163
    [  368.805382]  [<ffffffff81052c4e>] ? kthread+0x79/0x81
    [  368.805399]  [<ffffffff8135fea4>] ? kernel_thread_helper+0x4/0x10
    [  368.805416]  [<ffffffff81052bd5>] ? kthread_flush_work_fn+0x9/0x9
    [  368.805431]  [<ffffffff8135fea0>] ? gs_change+0x13/0x13
    [  368.805442] Code: 83 7d 30 63 7e 04 f3 90 eb ab 4c 8d 63 04 4c 8d 7b 08 4c 89 e7 e8 fa 15 00 00 48 8b 43 10 4c 89 3c 24 48 89 63 10 48 89 44 24 08 <48> 89 20 83 c8 ff 48 89 6c 24 10 87 03 ff c8 74 35 4d 89 ee 41
    [  368.805851] RIP  [<ffffffff81358457>] __mutex_lock_common.isra.7+0x9c/0x15b
    [  368.805877]  RSP <ffff880117001cc0>
    [  368.805886] CR2: 0000000000000000
    [  368.805899] ---[ end trace b720682065d8f4cc ]---
    
    It's directly caused by 89d3cf6 [SCSI] libsas: add mutex for SMP task
    execution, but shows a deeper cause: expander functions expect to be able to
    cast to and treat domain devices as expanders.  The correct fix is to only do
    expander discover when we know we've got an expander device to avoid wrongly
    casting a non-expander device.
    
    Reported-by: Praveen Murali <pmurali@logicube.com>
    Tested-by: Praveen Murali <pmurali@logicube.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c33522995c91a07d6c06f04160af7aaa5d89315
Author: Jan Beulich <JBeulich@suse.com>
Date:   Wed Mar 11 13:51:17 2015 +0000

    xen-pciback: limit guest control of command register
    
    commit af6fc858a35b90e89ea7a7ee58e66628c55c776b upstream.
    
    Otherwise the guest can abuse that control to cause e.g. PCIe
    Unsupported Request responses by disabling memory and/or I/O decoding
    and subsequently causing (CPU side) accesses to the respective address
    ranges, which (depending on system configuration) may be fatal to the
    host.
    
    Note that to alter any of the bits collected together as
    PCI_COMMAND_GUEST permissive mode is now required to be enabled
    globally or on the specific device.
    
    This is CVE-2015-2150 / XSA-120.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: David Vrabel <david.vrabel@citrix.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f37b5d42b6d1e5da217c40b1cd3efa1df79eebd0
Author: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
Date:   Thu Mar 12 16:26:00 2015 -0700

    nilfs2: fix deadlock of segment constructor during recovery
    
    commit 283ee1482f349d6c0c09dfb725db5880afc56813 upstream.
    
    According to a report from Yuxuan Shui, nilfs2 in kernel 3.19 got stuck
    during recovery at mount time.  The code path that caused the deadlock was
    as follows:
    
      nilfs_fill_super()
        load_nilfs()
          nilfs_salvage_orphan_logs()
            * Do roll-forwarding, attach segment constructor for recovery,
              and kick it.
    
            nilfs_segctor_thread()
              nilfs_segctor_thread_construct()
               * A lock is held with nilfs_transaction_lock()
                 nilfs_segctor_do_construct()
                   nilfs_segctor_drop_written_files()
                     iput()
                       iput_final()
                         write_inode_now()
                           writeback_single_inode()
                             __writeback_single_inode()
                               do_writepages()
                                 nilfs_writepage()
                                   nilfs_construct_dsync_segment()
                                     nilfs_transaction_lock() --> deadlock
    
    This can happen if commit 7ef3ff2fea8b ("nilfs2: fix deadlock of segment
    constructor over I_SYNC flag") is applied and roll-forward recovery was
    performed at mount time.  The roll-forward recovery can happen if datasync
    write is done and the file system crashes immediately after that.  For
    instance, we can reproduce the issue with the following steps:
    
     < nilfs2 is mounted on /nilfs (device: /dev/sdb1) >
     # dd if=/dev/zero of=/nilfs/test bs=4k count=1 && sync
     # dd if=/dev/zero of=/nilfs/test conv=notrunc oflag=dsync bs=4k
     count=1 && reboot -nfh
     < the system will immediately reboot >
     # mount -t nilfs2 /dev/sdb1 /nilfs
    
    The deadlock occurs because iput() can run segment constructor through
    writeback_single_inode() if MS_ACTIVE flag is not set on sb->s_flags.  The
    above commit changed segment constructor so that it calls iput()
    asynchronously for inodes with i_nlink == 0, but that change was
    imperfect.
    
    This fixes the another deadlock by deferring iput() in segment constructor
    even for the case that mount is not finished, that is, for the case that
    MS_ACTIVE flag is not set.
    
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Reported-by: Yuxuan Shui <yshuiv7@gmail.com>
    Tested-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b94eb12be1054306bcb349ab45ce655e0b76f544
Author: Doug Anderson <dianders@chromium.org>
Date:   Tue Mar 3 15:20:47 2015 -0800

    regulator: core: Fix enable GPIO reference counting
    
    commit 29d62ec5f87fbeec8413e2215ddad12e7f972e4c upstream.
    
    Normally _regulator_do_enable() isn't called on an already-enabled
    rdev.  That's because the main caller, _regulator_enable() always
    calls _regulator_is_enabled() and only calls _regulator_do_enable() if
    the rdev was not already enabled.
    
    However, there is one caller of _regulator_do_enable() that doesn't
    check: regulator_suspend_finish().  While we might want to make
    regulator_suspend_finish() behave more like _regulator_enable(), it's
    probably also a good idea to make _regulator_do_enable() robust if it
    is called on an already enabled rdev.
    
    At the moment, _regulator_do_enable() is _not_ robust for already
    enabled rdevs if we're using an ena_pin.  Each time
    _regulator_do_enable() is called for an rdev using an ena_pin the
    reference count of the ena_pin is incremented even if the rdev was
    already enabled.  This is not as intended because the ena_pin is for
    something else: for keeping track of how many active rdevs there are
    sharing the same ena_pin.
    
    Here's how the reference counting works here:
    
    * Each time _regulator_enable() is called we increment
      rdev->use_count, so _regulator_enable() calls need to be balanced
      with _regulator_disable() calls.
    
    * There is no explicit reference counting in _regulator_do_enable()
      which is normally just a warapper around rdev->desc->ops->enable()
      with code for supporting delays.  It's not expected that the
      "ops->enable()" call do reference counting.
    
    * Since regulator_ena_gpio_ctrl() does have reference counting
      (handling the sharing of the pin amongst multiple rdevs), we
      shouldn't call it if the current rdev is already enabled.
    
    Note that as part of this we cleanup (remove) the initting of
    ena_gpio_state in regulator_register().  In _regulator_do_enable(),
    _regulator_do_disable() and _regulator_is_enabled() is is clear that
    ena_gpio_state should be the state of whether this particular rdev has
    requested the GPIO be enabled.  regulator_register() was initting it
    as the actual state of the pin.
    
    Fixes: 967cfb18c0e3 ("regulator: core: manage enable GPIO list")
    Signed-off-by: Doug Anderson <dianders@chromium.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5952d84339c3112a29ba787041cd77548895ffaa
Author: Javier Martinez Canillas <javier@osg.samsung.com>
Date:   Mon Mar 2 21:40:39 2015 +0100

    regulator: Only enable disabled regulators on resume
    
    commit 0548bf4f5ad6fc3bd93c4940fa48078b34609682 upstream.
    
    The _regulator_do_enable() call ought to be a no-op when called on an
    already-enabled regulator.  However, as an optimization
    _regulator_enable() doesn't call _regulator_do_enable() on an already
    enabled regulator.  That means we never test the case of calling
    _regulator_do_enable() during normal usage and there may be hidden
    bugs or warnings.  We have seen warnings issued by the tps65090 driver
    and bugs when using the GPIO enable pin.
    
    Let's match the same optimization that _regulator_enable() in
    regulator_suspend_finish().  That may speed up suspend/resume and also
    avoids exposing hidden bugs.
    
    [Use much clearer commit message from Doug Anderson]
    
    Signed-off-by: Javier Martinez Canillas <javier.martinez@collabora.co.uk>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a708f07927d016cdd7e29c01933a82e7d1ac8015
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 16 10:18:08 2015 +0100

    ALSA: hda - Treat stereo-to-mono mix properly
    
    commit cc261738add93947d138d2fabad9f4dbed4e5c00 upstream.
    
    The commit [ef403edb7558: ALSA: hda - Don't access stereo amps for
    mono channel widgets] fixed the handling of mono widgets in general,
    but it still misses an exceptional case: namely, a mono mixer widget
    taking a single stereo input.  In this case, it has stereo volumes
    although it's a mono widget, and thus we have to take care of both
    left and right input channels, as stated in HD-audio spec ("7.1.3
    Widget Interconnection Rules").
    
    This patch covers this missing piece by adding proper checks of stereo
    amps in both the generic parser and the proc output codes.
    
    Reported-by: Raymond Yau <superquad.vortex2@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccd2ddc1d6c3ebccff5e93aca4076cbcc4105266
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 12 20:47:15 2015 +0100

    ALSA: hda - Add workaround for MacBook Air 5,2 built-in mic
    
    commit 2ddee91abe9cc34ddb6294ee14702b46ae07d460 upstream.
    
    MacBook Air 5,2 has the same problem as MacBook Pro 8,1 where the
    built-in mic records only the right channel.  Apply the same
    workaround as MBP8,1 to spread the mono channel via a Cirrus codec
    vendor-specific COEF setup.
    
    Reported-and-tested-by: Vasil Zlatanov <vasil.zlatanov@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4f97389307794b626e2bf3a546091d228da8ad6
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 12 20:28:04 2015 +0100

    ALSA: hda - Set single_adc_amp flag for CS420x codecs
    
    commit bad994f5b4ab57eec8d56c180edca00505c3eeb2 upstream.
    
    CS420x codecs seem to deal only the single amps of ADC nodes even
    though the nodes receive multiple inputs.  This leads to the
    inconsistent amp value after S3/S4 resume, for example.
    
    The fix is just to set codec->single_adc_amp flag.  Then the driver
    handles these ADC amps as if single connections.
    
    Reported-and-tested-by: Vasil Zlatanov <vasil.zlatanov@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51cb71ec7375459e125628707572f24c77d3660d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Mar 12 08:30:11 2015 +0100

    ALSA: hda - Don't access stereo amps for mono channel widgets
    
    commit ef403edb75580a3ec5d155f5de82155f0419c621 upstream.
    
    The current HDA generic parser initializes / modifies the amp values
    always in stereo, but this seems causing the problem on ALC3229 codec
    that has a few mono channel widgets: namely, these mono widgets react
    to actions for both channels equally.
    
    In the driver code, we do care the mono channel and create a control
    only for the left channel (as defined in HD-audio spec) for such a
    node.  When the control is updated, only the left channel value is
    changed.  However, in the resume, the right channel value is also
    restored from the initial value we took as stereo, and this overwrites
    the left channel value.  This ends up being the silent output as the
    right channel has been never touched and remains muted.
    
    This patch covers the places where unconditional stereo amp accesses
    are done and converts to the conditional accesses.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=94581
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4dccf1d7c37d181da9824c9af79384253cf2ada
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Mar 11 16:05:19 2015 +0100

    ALSA: hda - Fix built-in mic on Compaq Presario CQ60
    
    commit ddb6ca75b5671b8fbf1909bc588c449ee74b34f9 upstream.
    
    Compaq Presario CQ60 laptop with CX20561 gives a wrong pin for the
    built-in mic NID 0x17 instead of NID 0x1d, and it results in the
    non-working mic.  This patch just remaps the pin correctly via fixup.
    
    Bugzilla: https://bugzilla.opensuse.org/show_bug.cgi?id=920604
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21a7b4f112711eb7443274b3b496254b2fe881fc
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Mar 11 18:12:49 2015 +0100

    ALSA: control: Add sanity checks for user ctl id name string
    
    commit be3bb8236db2d0fcd705062ae2e2a9d75131222f upstream.
    
    There was no check about the id string of user control elements, so we
    accepted even a control element with an empty string, which is
    obviously bogus.  This patch adds more sanity checks of id strings.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b81da6c4557194be7e9f7118c08fae0ab607c58a
Author: Alexander Sverdlin <alexander.sverdlin@nokia.com>
Date:   Fri Feb 27 16:30:21 2015 +0100

    spi: pl022: Fix race in giveback() leading to driver lock-up
    
    commit cd6fa8d2ca53cac3226fdcffcf763be390abae32 upstream.
    
    Commit fd316941c ("spi/pl022: disable port when unused") introduced a race,
    which leads to possible driver lock up (easily reproducible on SMP).
    
    The problem happens in giveback() function where the completion of the transfer
    is signalled to SPI subsystem and then the HW SPI controller is disabled. Another
    transfer might be setup in between, which brings driver in locked-up state.
    
    Exact event sequence on SMP:
    
    core0                                   core1
    
                                            => pump_transfers()
                                            /* message->state == STATE_DONE */
                                              => giveback()
                                                => spi_finalize_current_message()
    
    => pl022_unprepare_transfer_hardware()
    => pl022_transfer_one_message
      => flush()
      => do_interrupt_dma_transfer()
        => set_up_next_transfer()
        /* Enable SSP, turn on interrupts */
        writew((readw(SSP_CR1(pl022->virtbase)) |
               SSP_CR1_MASK_SSE), SSP_CR1(pl022->virtbase));
    
    ...
    
    => pl022_interrupt_handler()
      => readwriter()
    
                                            /* disable the SPI/SSP operation */
                                            => writew((readw(SSP_CR1(pl022->virtbase)) &
                                                      (~SSP_CR1_MASK_SSE)), SSP_CR1(pl022->virtbase));
    
    Lockup! SPI controller is disabled and the data will never be received. Whole
    SPI subsystem is waiting for transfer ACK and blocked.
    
    So, only signal transfer completion after disabling the controller.
    
    Fixes: fd316941c (spi/pl022: disable port when unused)
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 230a7eea686c125a6f982480bc84b586346b4472
Author: jmlatten@linux.vnet.ibm.com <jmlatten@linux.vnet.ibm.com>
Date:   Fri Feb 20 18:11:24 2015 -0600

    tpm/ibmvtpm: Additional LE support for tpm_ibmvtpm_send
    
    commit 62dfd912ab3b5405b6fe72d0135c37e9648071f1 upstream.
    
    Problem: When IMA and VTPM are both enabled in kernel config,
    kernel hangs during bootup on LE OS.
    
    Why?: IMA calls tpm_pcr_read() which results in tpm_ibmvtpm_send
    and tpm_ibmtpm_recv getting called. A trace showed that
    tpm_ibmtpm_recv was hanging.
    
    Resolution: tpm_ibmtpm_recv was hanging because tpm_ibmvtpm_send
    was sending CRQ message that probably did not make much sense
    to phype because of Endianness. The fix below sends correctly
    converted CRQ for LE. This was not caught before because it
    seems IMA is not enabled by default in kernel config and
    IMA exercises this particular code path in vtpm.
    
    Tested with IMA and VTPM enabled in kernel config and VTPM
    enabled on both a BE OS and a LE OS ppc64 lpar. This exercised
    CRQ and TPM command code paths in vtpm.
    Patch is against Peter's tpmdd tree on github which included
    Vicky's previous vtpm le patches.
    
    Signed-off-by: Joy Latten <jmlatten@linux.vnet.ibm.com>
    Reviewed-by: Ashley Lai <ashley@ahsleylai.com>
    Signed-off-by: Peter Huewe <peterhuewe@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8bee0e3abef10e73a003fdc7ec04ba313334007
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Mar 5 08:04:13 2015 -0500

    workqueue: fix hang involving racing cancel[_delayed]_work_sync()'s for PREEMPT_NONE
    
    commit 8603e1b30027f943cc9c1eef2b291d42c3347af1 upstream.
    
    cancel[_delayed]_work_sync() are implemented using
    __cancel_work_timer() which grabs the PENDING bit using
    try_to_grab_pending() and then flushes the work item with PENDING set
    to prevent the on-going execution of the work item from requeueing
    itself.
    
    try_to_grab_pending() can always grab PENDING bit without blocking
    except when someone else is doing the above flushing during
    cancelation.  In that case, try_to_grab_pending() returns -ENOENT.  In
    this case, __cancel_work_timer() currently invokes flush_work().  The
    assumption is that the completion of the work item is what the other
    canceling task would be waiting for too and thus waiting for the same
    condition and retrying should allow forward progress without excessive
    busy looping
    
    Unfortunately, this doesn't work if preemption is disabled or the
    latter task has real time priority.  Let's say task A just got woken
    up from flush_work() by the completion of the target work item.  If,
    before task A starts executing, task B gets scheduled and invokes
    __cancel_work_timer() on the same work item, its try_to_grab_pending()
    will return -ENOENT as the work item is still being canceled by task A
    and flush_work() will also immediately return false as the work item
    is no longer executing.  This puts task B in a busy loop possibly
    preventing task A from executing and clearing the canceling state on
    the work item leading to a hang.
    
    task A                  task B                  worker
    
                                                    executing work
    __cancel_work_timer()
      try_to_grab_pending()
      set work CANCELING
      flush_work()
        block for work completion
                                                    completion, wakes up A
                            __cancel_work_timer()
                            while (forever) {
                              try_to_grab_pending()
                                -ENOENT as work is being canceled
                              flush_work()
                                false as work is no longer executing
                            }
    
    This patch removes the possible hang by updating __cancel_work_timer()
    to explicitly wait for clearing of CANCELING rather than invoking
    flush_work() after try_to_grab_pending() fails with -ENOENT.
    
    Link: http://lkml.kernel.org/g/20150206171156.GA8942@axis.com
    
    v3: bit_waitqueue() can't be used for work items defined in vmalloc
        area.  Switched to custom wake function which matches the target
        work item and exclusive wait and wakeup.
    
    v2: v1 used wake_up() on bit_waitqueue() which leads to NULL deref if
        the target bit waitqueue has wait_bit_queue's on it.  Use
        DEFINE_WAIT_BIT() and __wake_up_bit() instead.  Reported by Tomeu
        Vizoso.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Rabin Vincent <rabin.vincent@axis.com>
    Cc: Tomeu Vizoso <tomeu.vizoso@gmail.com>
    Tested-by: Jesper Nilsson <jesper.nilsson@axis.com>
    Tested-by: Rabin Vincent <rabin.vincent@axis.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82fb39a22b8d0b612d4a4bf922af97e9d981bdee
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Mon Feb 23 20:37:54 2015 +0100

    can: add missing initialisations in CAN related skbuffs
    
    commit 969439016d2cf61fef53a973d7e6d2061c3793b1 upstream.
    
    When accessing CAN network interfaces with AF_PACKET sockets e.g. by dhclient
    this can lead to a skb_under_panic due to missing skb initialisations.
    
    Add the missing initialisations at the CAN skbuff creation times on driver
    level (rx path) and in the network layer (tx path).
    
    Reported-by: Austin Schuh <austin@peloton-tech.com>
    Reported-by: Daniel Steer <daniel.steer@mclaren.com>
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8706baf7a6dbc625ba7399c531bb2579b80793ad
Author: Russell King <rmk+kernel@arm.linux.org.uk>
Date:   Fri Mar 6 10:49:21 2015 +0000

    Change email address for 8250_pci
    
    commit f2e0ea861117bda073d1d7ffbd3120c07c0d5d34 upstream.
    
    I'm still receiving reports to my email address, so let's point this
    at the linux-serial mailing list instead.
    
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 811fe127d8934539ebb9ee38abd3f9d55159e1ca
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Thu Mar 5 10:45:30 2015 +1030

    virtio_console: init work unconditionally
    
    commit 4f6e24ed9de8634d6471ef86b382cba6d4e57ca8 upstream.
    
    when multiport is off, we don't initialize config work,
    but we then cancel uninitialized control_work on freeze.
    
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Amit Shah <amit.shah@redhat.com>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12bda52e8f3720c7398e95b10462b185a7dafa4b
Author: Miklos Szeredi <mszeredi@suse.cz>
Date:   Thu Feb 26 11:45:47 2015 +0100

    fuse: notify: don't move pages
    
    commit 0d2783626a53d4c922f82d51fa675cb5d13f0d36 upstream.
    
    fuse_try_move_page() is not prepared for replacing pages that have already
    been read.
    
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce6f883465ceb83908bd2385fd91145a466f3715
Author: Miklos Szeredi <mszeredi@suse.cz>
Date:   Thu Feb 26 11:45:47 2015 +0100

    fuse: set stolen page uptodate
    
    commit aa991b3b267e24f578bac7b09cc57579b660304b upstream.
    
    Regular pipe buffers' ->steal method (generic_pipe_buf_steal()) doesn't set
    PG_uptodate.
    
    Don't warn on this condition, just set the uptodate flag.
    
    Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 379bcb3aaf534d9d9a38a00ebb9af884889a36ef
Author: Christian König <christian.koenig@amd.com>
Date:   Thu Feb 19 09:40:28 2015 +0100

    drm/radeon: drop setting UPLL to sleep mode
    
    commit a17d4996e051e78d164989b894608cf37cd5110b upstream.
    
    Just keep it working, seems to fix some PLL problems.
    
    Bug: https://bugs.freedesktop.org/show_bug.cgi?id=73378
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75ee55cb5901b7dd04f65ce17b5fb5da10d0e9fc
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Mar 2 20:39:56 2015 -0500

    drm/radeon: do a posting read in rs600_set_irq
    
    commit 54acf107e4e66d1f4a697e08a7f60dba9fcf07c3 upstream.
    
    To make sure the writes go through the pci bridge.
    
    bug:
    https://bugzilla.kernel.org/show_bug.cgi?id=90741
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 693fcdbda7ecc657abb6e83d306c7c43c4b766bc
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Mar 2 20:43:53 2015 -0500

    drm/radeon: do a posting read in si_set_irq
    
    commit 0586915ec10d0ae60de5cd3381ad25a704760402 upstream.
    
    To make sure the writes go through the pci bridge.
    
    bug:
    https://bugzilla.kernel.org/show_bug.cgi?id=90741
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96e612822a99f6a19f2a5a9e3405da7123a762d6
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Mar 2 20:41:31 2015 -0500

    drm/radeon: do a posting read in r600_set_irq
    
    commit 9d1393f23d5656cdd5f368efd60694d4aeed81d3 upstream.
    
    To make sure the writes go through the pci bridge.
    
    bug:
    https://bugzilla.kernel.org/show_bug.cgi?id=90741
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a02db0f24cda0f97d9c101df3eafa7ccfc88452e
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Mar 2 20:36:26 2015 -0500

    drm/radeon: do a posting read in r100_set_irq
    
    commit f957063fee6392bb9365370db6db74dc0b2dce0a upstream.
    
    To make sure the writes go through the pci bridge.
    
    bug:
    https://bugzilla.kernel.org/show_bug.cgi?id=90741
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1f447877ae10c0185be9823db482b324b061a9e
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Mar 2 20:42:53 2015 -0500

    drm/radeon: do a posting read in evergreen_set_irq
    
    commit c320bb5f6dc0cb88a811cbaf839303e0a3916a92 upstream.
    
    To make sure the writes go through the pci bridge.
    
    bug:
    https://bugzilla.kernel.org/show_bug.cgi?id=90741
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1cd17df940b483afaaa1f9b6abc003ebcd1a11d
Author: Tommi Rantala <tt.rantala@gmail.com>
Date:   Mon Mar 2 21:36:07 2015 +0200

    drm/radeon: fix DRM_IOCTL_RADEON_CS oops
    
    commit a28b2a47edcd0cb7c051b445f71a426000394606 upstream.
    
    Passing zeroed drm_radeon_cs struct to DRM_IOCTL_RADEON_CS produces the
    following oops.
    
    Fix by always calling INIT_LIST_HEAD() to avoid the crash in list_sort().
    
    ----------------------------------
    
     #include <stdint.h>
     #include <fcntl.h>
     #include <unistd.h>
     #include <sys/ioctl.h>
     #include <drm/radeon_drm.h>
    
     static const struct drm_radeon_cs cs;
    
     int main(int argc, char **argv)
     {
             return ioctl(open(argv[1], O_RDWR), DRM_IOCTL_RADEON_CS, &cs);
     }
    
    ----------------------------------
    
    [ttrantal@test2 ~]$ ./main /dev/dri/card0
    [   46.904650] BUG: unable to handle kernel NULL pointer dereference at           (null)
    [   46.905022] IP: [<ffffffff814d6df2>] list_sort+0x42/0x240
    [   46.905022] PGD 68f29067 PUD 688b5067 PMD 0
    [   46.905022] Oops: 0002 [#1] SMP
    [   46.905022] CPU: 0 PID: 2413 Comm: main Not tainted 4.0.0-rc1+ #58
    [   46.905022] Hardware name: Hewlett-Packard HP Compaq dc5750 Small Form Factor/0A64h, BIOS 786E3 v02.10 01/25/2007
    [   46.905022] task: ffff880058e2bcc0 ti: ffff880058e64000 task.ti: ffff880058e64000
    [   46.905022] RIP: 0010:[<ffffffff814d6df2>]  [<ffffffff814d6df2>] list_sort+0x42/0x240
    [   46.905022] RSP: 0018:ffff880058e67998  EFLAGS: 00010246
    [   46.905022] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    [   46.905022] RDX: ffffffff81644410 RSI: ffff880058e67b40 RDI: ffff880058e67a58
    [   46.905022] RBP: ffff880058e67a88 R08: 0000000000000000 R09: 0000000000000000
    [   46.905022] R10: ffff880058e2bcc0 R11: ffffffff828e6ca0 R12: ffffffff81644410
    [   46.905022] R13: ffff8800694b8018 R14: 0000000000000000 R15: ffff880058e679b0
    [   46.905022] FS:  00007fdc65a65700(0000) GS:ffff88006d600000(0000) knlGS:0000000000000000
    [   46.905022] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   46.905022] CR2: 0000000000000000 CR3: 0000000058dd9000 CR4: 00000000000006f0
    [   46.905022] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   46.905022] DR3: 0000000000000000 DR6: 00000000ffff4ff0 DR7: 0000000000000400
    [   46.905022] Stack:
    [   46.905022]  ffff880058e67b40 ffff880058e2bcc0 ffff880058e67a78 0000000000000000
    [   46.905022]  0000000000000000 0000000000000000 0000000000000000 0000000000000000
    [   46.905022]  0000000000000000 0000000000000000 0000000000000000 0000000000000000
    [   46.905022] Call Trace:
    [   46.905022]  [<ffffffff81644a65>] radeon_cs_parser_fini+0x195/0x220
    [   46.905022]  [<ffffffff81645069>] radeon_cs_ioctl+0xa9/0x960
    [   46.905022]  [<ffffffff815e1f7c>] drm_ioctl+0x19c/0x640
    [   46.905022]  [<ffffffff810f8fdd>] ? trace_hardirqs_on_caller+0xfd/0x1c0
    [   46.905022]  [<ffffffff810f90ad>] ? trace_hardirqs_on+0xd/0x10
    [   46.905022]  [<ffffffff8160c066>] radeon_drm_ioctl+0x46/0x80
    [   46.905022]  [<ffffffff81211868>] do_vfs_ioctl+0x318/0x570
    [   46.905022]  [<ffffffff81462ef6>] ? selinux_file_ioctl+0x56/0x110
    [   46.905022]  [<ffffffff81211b41>] SyS_ioctl+0x81/0xa0
    [   46.905022]  [<ffffffff81dc6312>] system_call_fastpath+0x12/0x17
    [   46.905022] Code: 48 89 b5 10 ff ff ff 0f 84 03 01 00 00 4c 8d bd 28 ff ff
    ff 31 c0 48 89 fb b9 15 00 00 00 49 89 d4 4c 89 ff f3 48 ab 48 8b 46 08 <48> c7
    00 00 00 00 00 48 8b 0e 48 85 c9 0f 84 7d 00 00 00 c7 85
    [   46.905022] RIP  [<ffffffff814d6df2>] list_sort+0x42/0x240
    [   46.905022]  RSP <ffff880058e67998>
    [   46.905022] CR2: 0000000000000000
    [   47.149253] ---[ end trace 09576b4e8b2c20b8 ]---
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Tommi Rantala <tt.rantala@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e64a85197b3fba7009fdeb1f1dbe515283aa984a
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Nov 17 23:06:20 2014 -0800

    tcp: make connect() mem charging friendly
    
    [ Upstream commit 355a901e6cf1b2b763ec85caa2a9f04fbcc4ab4a ]
    
    While working on sk_forward_alloc problems reported by Denys
    Fedoryshchenko, we found that tcp connect() (and fastopen) do not call
    sk_wmem_schedule() for SYN packet (and/or SYN/DATA packet), so
    sk_forward_alloc is negative while connect is in progress.
    
    We can fix this by calling regular sk_stream_alloc_skb() both for the
    SYN packet (in tcp_connect()) and the syn_data packet in
    tcp_send_syn_data()
    
    Then, tcp_send_syn_data() can avoid copying syn_data as we simply
    can manipulate syn_data->cb[] to remove SYN flag (and increment seq)
    
    Instead of open coding memcpy_fromiovecend(), simply use this helper.
    
    This leaves in socket write queue clean fast clone skbs.
    
    This was tested against our fastopen packetdrill tests.
    
    Reported-by: Denys Fedoryshchenko <nuclearcat@nuclearcat.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 281c9c3601b69f1fbc492beb5976e1e2685854de
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Fri Mar 20 16:48:13 2015 +0000

    net: compat: Update get_compat_msghdr() to match copy_msghdr_from_user() behaviour
    
    [ Upstream commit 91edd096e224941131f896b86838b1e59553696a ]
    
    Commit db31c55a6fb2 (net: clamp ->msg_namelen instead of returning an
    error) introduced the clamping of msg_namelen when the unsigned value
    was larger than sizeof(struct sockaddr_storage). This caused a
    msg_namelen of -1 to be valid. The native code was subsequently fixed by
    commit dbb490b96584 (net: socket: error on a negative msg_namelen).
    
    In addition, the native code sets msg_namelen to 0 when msg_name is
    NULL. This was done in commit (6a2a2b3ae075 net:socket: set msg_namelen
    to 0 if msg_name is passed as NULL in msghdr struct from userland) and
    subsequently updated by 08adb7dabd48 (fold verify_iovec() into
    copy_msghdr_from_user()).
    
    This patch brings the get_compat_msghdr() in line with
    copy_msghdr_from_user().
    
    Fixes: db31c55a6fb2 (net: clamp ->msg_namelen instead of returning an error)
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 175ff19c37149c352e3b983a8d78add034aef36f
Author: Josh Hunt <johunt@akamai.com>
Date:   Thu Mar 19 19:19:30 2015 -0400

    tcp: fix tcp fin memory accounting
    
    [ Upstream commit d22e1537181188e5dc8cbc51451832625035bdc2 ]
    
    tcp_send_fin() does not account for the memory it allocates properly, so
    sk_forward_alloc can be negative in cases where we've sent a FIN:
    
    ss example output (ss -amn | grep -B1 f4294):
    tcp    FIN-WAIT-1 0      1            192.168.0.1:45520         192.0.2.1:8080
            skmem:(r0,rb87380,t0,tb87380,f4294966016,w1280,o0,bl0)
    Acked-by: Eric Dumazet <edumazet@google.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 742c1c523e50723c7b7ff0af228c6711f7d747dd
Author: Ondrej Zary <linux@rainbow-software.org>
Date:   Wed Mar 18 23:01:01 2015 +0100

    Revert "net: cx82310_eth: use common match macro"
    
    [ Upstream commit 8d006e0105978619fb472e150c88b0d49337fe2b ]
    
    This reverts commit 11ad714b98f6d9ca0067568442afe3e70eb94845 because
    it breaks cx82310_eth.
    
    The custom USB_DEVICE_CLASS macro matches
    bDeviceClass, bDeviceSubClass and bDeviceProtocol
    but the common USB_DEVICE_AND_INTERFACE_INFO matches
    bInterfaceClass, bInterfaceSubClass and bInterfaceProtocol instead, which are
    not specified.
    
    Signed-off-by: Ondrej Zary <linux@rainbow-software.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 208370eb74e796b8b5ae7e373789db4bf84fc7c7
Author: Al Viro <viro@ZenIV.linux.org.uk>
Date:   Sat Mar 14 05:34:56 2015 +0000

    rxrpc: bogus MSG_PEEK test in rxrpc_recvmsg()
    
    [ Upstream commit 7d985ed1dca5c90535d67ce92ef6ca520302340a ]
    
    [I would really like an ACK on that one from dhowells; it appears to be
    quite straightforward, but...]
    
    MSG_PEEK isn't passed to ->recvmsg() via msg->msg_flags; as the matter of
    fact, neither the kernel users of rxrpc, nor the syscalls ever set that bit
    in there.  It gets passed via flags; in fact, another such check in the same
    function is done correctly - as flags & MSG_PEEK.
    
    It had been that way (effectively disabled) for 8 years, though, so the patch
    needs beating up - that case had never been tested.  If it is correct, it's
    -stable fodder.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c77b9a724d8597e1151b1fcf013560188088dc8c
Author: Al Viro <viro@ZenIV.linux.org.uk>
Date:   Sat Mar 14 05:22:21 2015 +0000

    caif: fix MSG_OOB test in caif_seqpkt_recvmsg()
    
    [ Upstream commit 3eeff778e00c956875c70b145c52638c313dfb23 ]
    
    It should be checking flags, not msg->msg_flags.  It's ->sendmsg()
    instances that need to look for that in ->msg_flags, ->recvmsg() ones
    (including the other ->recvmsg() instance in that file, as well as
    unix_dgram_recvmsg() this one claims to be imitating) check in flags.
    Braino had been introduced in commit dcda13 ("caif: Bugfix - use MSG_TRUNC
    in receive") back in 2010, so it goes quite a while back.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43b93504d1196578a3c48b2f2562e1bfed588a3d
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Mar 13 09:49:59 2015 -0700

    inet_diag: fix possible overflow in inet_diag_dump_one_icsk()
    
    [ Upstream commit c8e2c80d7ec00d020320f905822bf49c5ad85250 ]
    
    inet_diag_dump_one_icsk() allocates too small skb.
    
    Add inet_sk_attr_size() helper right before inet_sk_diag_fill()
    so that it can be updated if/when new attributes are added.
    
    iproute2/ss currently does not use this dump_one() interface,
    this might explain nobody noticed this problem yet.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 895652af317379b0347353b00bca9d1bb26335bb
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Mar 11 22:46:59 2015 +0100

    rds: avoid potential stack overflow
    
    [ Upstream commit f862e07cf95d5b62a5fc5e981dd7d0dbaf33a501 ]
    
    The rds_iw_update_cm_id function stores a large 'struct rds_sock' object
    on the stack in order to pass a pair of addresses. This happens to just
    fit withint the 1024 byte stack size warning limit on x86, but just
    exceed that limit on ARM, which gives us this warning:
    
    net/rds/iw_rdma.c:200:1: warning: the frame size of 1056 bytes is larger than 1024 bytes [-Wframe-larger-than=]
    
    As the use of this large variable is basically bogus, we can rearrange
    the code to not do that. Instead of passing an rds socket into
    rds_iw_get_device, we now just pass the two addresses that we have
    available in rds_iw_update_cm_id, and we change rds_iw_get_mr accordingly,
    to create two address structures on the stack there.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2f572a9be3f00bcf470a918d9e53353bea9ef4c
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Wed Mar 11 14:29:17 2015 +0300

    net: sysctl_net_core: check SNDBUF and RCVBUF for min length
    
    [ Upstream commit b1cb59cf2efe7971d3d72a7b963d09a512d994c9 ]
    
    sysctl has sysctl.net.core.rmem_*/wmem_* parameters which can be
    set to incorrect values. Given that 'struct sk_buff' allocates from
    rcvbuf, incorrectly set buffer length could result to memory
    allocation failures. For example, set them as follows:
    
        # sysctl net.core.rmem_default=64
          net.core.wmem_default = 64
        # sysctl net.core.wmem_default=64
          net.core.wmem_default = 64
        # ping localhost -s 1024 -i 0 > /dev/null
    
    This could result to the following failure:
    
    skbuff: skb_over_panic: text:ffffffff81628db4 len:-32 put:-32
    head:ffff88003a1cc200 data:ffff88003a1cc200 tail:0xffffffe0 end:0xc0 dev:<NULL>
    kernel BUG at net/core/skbuff.c:102!
    invalid opcode: 0000 [#1] SMP
    ...
    task: ffff88003b7f5550 ti: ffff88003ae88000 task.ti: ffff88003ae88000
    RIP: 0010:[<ffffffff8155fbd1>]  [<ffffffff8155fbd1>] skb_put+0xa1/0xb0
    RSP: 0018:ffff88003ae8bc68  EFLAGS: 00010296
    RAX: 000000000000008d RBX: 00000000ffffffe0 RCX: 0000000000000000
    RDX: ffff88003fdcf598 RSI: ffff88003fdcd9c8 RDI: ffff88003fdcd9c8
    RBP: ffff88003ae8bc88 R08: 0000000000000001 R09: 0000000000000000
    R10: 0000000000000001 R11: 00000000000002b2 R12: 0000000000000000
    R13: 0000000000000000 R14: ffff88003d3f7300 R15: ffff88000012a900
    FS:  00007fa0e2b4a840(0000) GS:ffff88003fc00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000d0f7e0 CR3: 000000003b8fb000 CR4: 00000000000006f0
    Stack:
     ffff88003a1cc200 00000000ffffffe0 00000000000000c0 ffffffff818cab1d
     ffff88003ae8bd68 ffffffff81628db4 ffff88003ae8bd48 ffff88003b7f5550
     ffff880031a09408 ffff88003b7f5550 ffff88000012aa48 ffff88000012ab00
    Call Trace:
     [<ffffffff81628db4>] unix_stream_sendmsg+0x2c4/0x470
     [<ffffffff81556f56>] sock_write_iter+0x146/0x160
     [<ffffffff811d9612>] new_sync_write+0x92/0xd0
     [<ffffffff811d9cd6>] vfs_write+0xd6/0x180
     [<ffffffff811da499>] SyS_write+0x59/0xd0
     [<ffffffff81651532>] system_call_fastpath+0x12/0x17
    Code: 00 00 48 89 44 24 10 8b 87 c8 00 00 00 48 89 44 24 08 48 8b 87 d8 00
          00 00 48 c7 c7 30 db 91 81 48 89 04 24 31 c0 e8 4f a8 0e 00 <0f> 0b
          eb fe 66 66 2e 0f 1f 84 00 00 00 00 00 55 48 89 e5 48 83
    RIP  [<ffffffff8155fbd1>] skb_put+0xa1/0xb0
    RSP <ffff88003ae8bc68>
    Kernel panic - not syncing: Fatal exception
    
    Moreover, the possible minimum is 1, so we can get another kernel panic:
    ...
    BUG: unable to handle kernel paging request at ffff88013caee5c0
    IP: [<ffffffff815604cf>] __alloc_skb+0x12f/0x1f0
    ...
    
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ca2893325f9015fc85b1537a17402e33fb03473
Author: David S. Miller <davem@davemloft.net>
Date:   Mon Mar 23 09:22:10 2015 -0700

    sparc64: Fix several bugs in memmove().
    
    [ Upstream commit 2077cef4d5c29cf886192ec32066f783d6a80db8 ]
    
    Firstly, handle zero length calls properly.  Believe it or not there
    are a few of these happening during early boot.
    
    Next, we can't just drop to a memcpy() call in the forward copy case
    where dst <= src.  The reason is that the cache initializing stores
    used in the Niagara memcpy() implementations can end up clearing out
    cache lines before we've sourced their original contents completely.
    
    For example, considering NG4memcpy, the main unrolled loop begins like
    this:
    
         load   src + 0x00
         load   src + 0x08
         load   src + 0x10
         load   src + 0x18
         load   src + 0x20
         store  dst + 0x00
    
    Assume dst is 64 byte aligned and let's say that dst is src - 8 for
    this memcpy() call.  That store at the end there is the one to the
    first line in the cache line, thus clearing the whole line, which thus
    clobbers "src + 0x28" before it even gets loaded.
    
    To avoid this, just fall through to a simple copy only mildly
    optimized for the case where src and dst are 8 byte aligned and the
    length is a multiple of 8 as well.  We could get fancy and call
    GENmemcpy() but this is good enough for how this thing is actually
    used.
    
    Reported-by: David Ahern <david.ahern@oracle.com>
    Reported-by: Bob Picco <bpicco@meloft.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 146c982f2227ef6540db851b5bcc73d36d7e5c0e
Author: David Ahern <david.ahern@oracle.com>
Date:   Thu Mar 19 16:06:53 2015 -0400

    sparc: Touch NMI watchdog when walking cpus and calling printk
    
    [ Upstream commit 31aaa98c248da766ece922bbbe8cc78cfd0bc920 ]
    
    With the increase in number of CPUs calls to functions that dump
    output to console (e.g., arch_trigger_all_cpu_backtrace) can take
    a long time to complete. If IRQs are disabled eventually the NMI
    watchdog kicks in and creates more havoc. Avoid by telling the NMI
    watchdog everything is ok.
    
    Signed-off-by: David Ahern <david.ahern@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d42f5dffbce92064e44cc51ab4123a4384166145
Author: David Ahern <david.ahern@oracle.com>
Date:   Thu Mar 19 16:06:17 2015 -0400

    sparc: perf: Make counting mode actually work
    
    [ Upstream commit d51291cb8f32bfae6b331e1838651f3ddefa73a5 ]
    
    Currently perf-stat (aka, counting mode) does not work:
    
    $ perf stat ls
    ...
     Performance counter stats for 'ls':
    
              1.585665      task-clock (msec)         #    0.580 CPUs utilized
                    24      context-switches          #    0.015 M/sec
                     0      cpu-migrations            #    0.000 K/sec
                    86      page-faults               #    0.054 M/sec
       <not supported>      cycles
       <not supported>      stalled-cycles-frontend
       <not supported>      stalled-cycles-backend
       <not supported>      instructions
       <not supported>      branches
       <not supported>      branch-misses
    
           0.002735100 seconds time elapsed
    
    The reason is that state is never reset (stays with PERF_HES_UPTODATE set).
    Add a call to sparc_pmu_enable_event during the added_event handling.
    Clean up the encoding since pmu_start calls sparc_pmu_enable_event which
    does the same. Passing PERF_EF_RELOAD to sparc_pmu_start means the call
    to sparc_perf_event_set_period can be removed as well.
    
    With this patch:
    
    $ perf stat ls
    ...
     Performance counter stats for 'ls':
    
              1.552890      task-clock (msec)         #    0.552 CPUs utilized
                    24      context-switches          #    0.015 M/sec
                     0      cpu-migrations            #    0.000 K/sec
                    86      page-faults               #    0.055 M/sec
             5,748,997      cycles                    #    3.702 GHz
       <not supported>      stalled-cycles-frontend:HG
       <not supported>      stalled-cycles-backend:HG
             1,684,362      instructions:HG           #    0.29  insns per cycle
               295,133      branches:HG               #  190.054 M/sec
                28,007      branch-misses:HG          #    9.49% of all branches
    
           0.002815665 seconds time elapsed
    
    Signed-off-by: David Ahern <david.ahern@oracle.com>
    Acked-by: Bob Picco <bob.picco@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cea2eaea5fa770fd023c9c1b1e4e122d226a5d8
Author: David Ahern <david.ahern@oracle.com>
Date:   Thu Mar 19 16:05:57 2015 -0400

    sparc: perf: Remove redundant perf_pmu_{en|dis}able calls
    
    [ Upstream commit 5b0d4b5514bbcce69b516d0742f2cfc84ebd6db3 ]
    
    perf_pmu_disable is called by core perf code before pmu->del and the
    enable function is called by core perf code afterwards. No need to
    call again within sparc_pmu_del.
    
    Ditto for pmu->add and sparc_pmu_add.
    
    Signed-off-by: David Ahern <david.ahern@oracle.com>
    Acked-by: Bob Picco <bob.picco@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b9529f3e93ca1376897357466b0a7e91e817ccf
Author: Rob Gardner <rob.gardner@oracle.com>
Date:   Mon Mar 2 23:16:55 2015 -0700

    sparc: semtimedop() unreachable due to comparison error
    
    [ Upstream commit 53eb2516972b8c4628651dfcb926cb9ef8b2864a ]
    
    A bug was reported that the semtimedop() system call was always
    failing eith ENOSYS.
    
    Since SEMCTL is defined as 3, and SEMTIMEDOP is defined as 4,
    the comparison "call <= SEMCTL" will always prevent SEMTIMEDOP
    from getting through to the semaphore ops switch statement.
    
    This is corrected by changing the comparison to "call <= SEMTIMEDOP".
    
    Orabug: 20633375
    
    Signed-off-by: Rob Gardner <rob.gardner@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 243bd1fa3b9911d6722304a2748ffe10487e3988
Author: Andreas Larsson <andreas@gaisler.com>
Date:   Thu Dec 18 13:23:23 2014 +0100

    sparc32: destroy_context() and switch_mm() needs to disable interrupts.
    
    [ Upstream commit 66d0f7ec9f1038452178b1993fc07fd96d30fd38 ]
    
    Load balancing can be triggered in the critical sections protected by
    srmmu_context_spinlock in destroy_context() and switch_mm() and can hang
    the cpu waiting for the rq lock of another cpu that in turn has called
    switch_mm hangning on srmmu_context_spinlock leading to deadlock.
    
    So, disable interrupt while taking srmmu_context_spinlock in
    destroy_context() and switch_mm() so we don't deadlock.
    
    See also commit 77b838fa1ef0 ("[SPARC64]: destroy_context() needs to disable
    interrupts.")
    
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
