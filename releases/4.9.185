commit 9c51e1102c95e1c4849bf9b88c8b0c3da56b9c13
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jul 10 09:55:47 2019 +0200

    Linux 4.9.185

commit dd862509c7989d785c6a6bea7622fa0d89310d4c
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Jun 25 19:08:54 2019 +0200

    arm64: kaslr: keep modules inside module region when KASAN is enabled
    
    commit 6f496a555d93db7a11d4860b9220d904822f586a upstream.
    
    When KASLR and KASAN are both enabled, we keep the modules where they
    are, and randomize the placement of the kernel so it is within 2 GB
    of the module region. The reason for this is that putting modules in
    the vmalloc region (like we normally do when KASLR is enabled) is not
    possible in this case, given that the entire vmalloc region is already
    backed by KASAN zero shadow pages, and so allocating dedicated KASAN
    shadow space as required by loaded modules is not possible.
    
    The default module allocation window is set to [_etext - 128MB, _etext]
    in kaslr.c, which is appropriate for KASLR kernels booted without a
    seed or with 'nokaslr' on the command line. However, as it turns out,
    it is not quite correct for the KASAN case, since it still intersects
    the vmalloc region at the top, where attempts to allocate shadow pages
    will collide with the KASAN zero shadow pages, causing a WARN() and all
    kinds of other trouble. So cap the top end to MODULES_END explicitly
    when running with KASAN.
    
    Cc: <stable@vger.kernel.org> # 4.9+
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Tested-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    [will: backport to 4.9.y]
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e8aa99a2ef8ddd088f2a138fed7b924255e34d5
Author: Robin Gong <yibin.gong@nxp.com>
Date:   Fri Jun 21 16:23:06 2019 +0800

    dmaengine: imx-sdma: remove BD_INTR for channel0
    
    commit 3f93a4f297961c12bb17aa16cb3a4d1291823cae upstream.
    
    It is possible for an irq triggered by channel0 to be received later
    after clks are disabled once firmware loaded during sdma probe. If
    that happens then clearing them by writing to SDMA_H_INTR won't work
    and the kernel will hang processing infinite interrupts. Actually,
    don't need interrupt triggered on channel0 since it's pollling
    SDMA_H_STATSTOP to know channel0 done rather than interrupt in
    current code, just clear BD_INTR to disable channel0 interrupt to
    avoid the above case.
    This issue was brought by commit 1d069bfa3c78 ("dmaengine: imx-sdma:
    ack channel 0 IRQ in the interrupt handler") which didn't take care
    the above case.
    
    Fixes: 1d069bfa3c78 ("dmaengine: imx-sdma: ack channel 0 IRQ in the interrupt handler")
    Cc: stable@vger.kernel.org #5.0+
    Signed-off-by: Robin Gong <yibin.gong@nxp.com>
    Reported-by: Sven Van Asbroeck <thesven73@gmail.com>
    Tested-by: Sven Van Asbroeck <thesven73@gmail.com>
    Reviewed-by: Michael Olbrich <m.olbrich@pengutronix.de>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd8f65a719dba119efab14c37d18fe719449726b
Author: Dmitry Korotin <dkorotin@wavecomp.com>
Date:   Mon Jun 24 19:05:27 2019 +0000

    MIPS: Add missing EHB in mtc0 -> mfc0 sequence.
    
    commit 0b24cae4d535045f4c9e177aa228d4e97bad212c upstream.
    
    Add a missing EHB (Execution Hazard Barrier) in mtc0 -> mfc0 sequence.
    Without this execution hazard barrier it's possible for the value read
    back from the KScratch register to be the value from before the mtc0.
    
    Reproducible on P5600 & P6600.
    
    The hazard is documented in the MIPS Architecture Reference Manual Vol.
    III: MIPS32/microMIPS32 Privileged Resource Architecture (MD00088), rev
    6.03 table 8.1 which includes:
    
       Producer | Consumer | Hazard
      ----------|----------|----------------------------
       mtc0     | mfc0     | any coprocessor 0 register
    
    Signed-off-by: Dmitry Korotin <dkorotin@wavecomp.com>
    [paul.burton@mips.com:
      - Commit message tweaks.
      - Add Fixes tags.
      - Mark for stable back to v3.15 where P5600 support was introduced.]
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Fixes: 3d8bfdd03072 ("MIPS: Use C0_KScratch (if present) to hold PGD pointer.")
    Fixes: 829dcc0a956a ("MIPS: Add MIPS P5600 probe support")
    Cc: linux-mips@vger.kernel.org
    Cc: stable@vger.kernel.org # v3.15+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea663abb285bfe46d136c1e386b2e799de3274ea
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Fri Jun 7 08:25:31 2019 -0400

    IB/hfi1: Close PSM sdma_progress sleep window
    
    commit da9de5f8527f4b9efc82f967d29a583318c034c7 upstream.
    
    The call to sdma_progress() is called outside the wait lock.
    
    In this case, there is a race condition where sdma_progress() can return
    false and the sdma_engine can idle.  If that happens, there will be no
    more sdma interrupts to cause the wakeup and the user_sdma xmit will hang.
    
    Fix by moving the lock to enclose the sdma_progress() call.
    
    Also, delete busycount. The need for this was removed by:
    commit bcad29137a97 ("IB/hfi1: Serve the most starved iowait entry first")
    
    Cc: <stable@vger.kernel.org>
    Fixes: 7724105686e7 ("IB/hfi1: add driver files")
    Reviewed-by: Gary Leshner <Gary.S.Leshner@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 997ef649f2973da1cb7e8b4f07a5aa2ed9c551bb
Author: Wanpeng Li <wanpengli@tencent.com>
Date:   Tue Jul 2 17:25:02 2019 +0800

    KVM: LAPIC: Fix pending interrupt in IRR blocked by software disable LAPIC
    
    commit bb34e690e9340bc155ebed5a3d75fc63ff69e082 upstream.
    
    Thomas reported that:
    
     | Background:
     |
     |    In preparation of supporting IPI shorthands I changed the CPU offline
     |    code to software disable the local APIC instead of just masking it.
     |    That's done by clearing the APIC_SPIV_APIC_ENABLED bit in the APIC_SPIV
     |    register.
     |
     | Failure:
     |
     |    When the CPU comes back online the startup code triggers occasionally
     |    the warning in apic_pending_intr_clear(). That complains that the IRRs
     |    are not empty.
     |
     |    The offending vector is the local APIC timer vector who's IRR bit is set
     |    and stays set.
     |
     | It took me quite some time to reproduce the issue locally, but now I can
     | see what happens.
     |
     | It requires apicv_enabled=0, i.e. full apic emulation. With apicv_enabled=1
     | (and hardware support) it behaves correctly.
     |
     | Here is the series of events:
     |
     |     Guest CPU
     |
     |     goes down
     |
     |       native_cpu_disable()
     |
     |                      apic_soft_disable();
     |
     |     play_dead()
     |
     |     ....
     |
     |     startup()
     |
     |       if (apic_enabled())
     |         apic_pending_intr_clear()    <- Not taken
     |
     |      enable APIC
     |
     |         apic_pending_intr_clear()    <- Triggers warning because IRR is stale
     |
     | When this happens then the deadline timer or the regular APIC timer -
     | happens with both, has fired shortly before the APIC is disabled, but the
     | interrupt was not serviced because the guest CPU was in an interrupt
     | disabled region at that point.
     |
     | The state of the timer vector ISR/IRR bits:
     |
     |                              ISR     IRR
     | before apic_soft_disable()    0            1
     | after apic_soft_disable()     0            1
     |
     | On startup                            0            1
     |
     | Now one would assume that the IRR is cleared after the INIT reset, but this
     | happens only on CPU0.
     |
     | Why?
     |
     | Because our CPU0 hotplug is just for testing to make sure nothing breaks
     | and goes through an NMI wakeup vehicle because INIT would send it through
     | the boots-trap code which is not really working if that CPU was not
     | physically unplugged.
     |
     | Now looking at a real world APIC the situation in that case is:
     |
     |                              ISR     IRR
     | before apic_soft_disable()    0            1
     | after apic_soft_disable()     0            1
     |
     | On startup                            0            0
     |
     | Why?
     |
     | Once the dying CPU reenables interrupts the pending interrupt gets
     | delivered as a spurious interupt and then the state is clear.
     |
     | While that CPU0 hotplug test case is surely an esoteric issue, the APIC
     | emulation is still wrong, Even if the play_dead() code would not enable
     | interrupts then the pending IRR bit would turn into an ISR .. interrupt
     | when the APIC is reenabled on startup.
    
    From SDM 10.4.7.2 Local APIC State After It Has Been Software Disabled
    * Pending interrupts in the IRR and ISR registers are held and require
      masking or handling by the CPU.
    
    In Thomas's testing, hardware cpu will not respect soft disable LAPIC
    when IRR has already been set or APICv posted-interrupt is in flight,
    so we can skip soft disable APIC checking when clearing IRR and set ISR,
    continue to respect soft disable APIC when attempting to set IRR.
    
    Reported-by: Rong Chen <rong.a.chen@intel.com>
    Reported-by: Feng Tang <feng.tang@intel.com>
    Reported-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Rong Chen <rong.a.chen@intel.com>
    Cc: Feng Tang <feng.tang@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 830d3a71e1ce42f3a06d071d29ebdd838626b76f
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Jul 5 20:47:20 2019 +0200

    arm64, vdso: Define vdso_{start,end} as array
    
    Commit dbbb08f500d6146398b794fdc68a8e811366b451 upstream.
    
    Adjust vdso_{start|end} to be char arrays to avoid compile-time analysis
    that flags "too large" memcmp() calls with CONFIG_FORTIFY_SOURCE.
    
    Cc: Jisheng Zhang <jszhang@marvell.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Suggested-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a391af9be4418d0f7c22d39235224aa3c4a3e067
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon May 6 11:28:23 2019 -0700

    tty: rocket: fix incorrect forward declaration of 'rp_init()'
    
    [ Upstream commit 423ea3255424b954947d167681b71ded1b8fca53 ]
    
    Make the forward declaration actually match the real function
    definition, something that previous versions of gcc had just ignored.
    
    This is another patch to fix new warnings from gcc-9 before I start the
    merge window pulls.  I don't want to miss legitimate new warnings just
    because my system update brought a new compiler with new warnings.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c51e9aab0afff0e6531e45f5169814dd985775d5
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Fri May 17 10:44:25 2019 +0300

    btrfs: Ensure replaced device doesn't have pending chunk allocation
    
    commit debd1c065d2037919a7da67baf55cc683fee09f0 upstream.
    
    Recent FITRIM work, namely bbbf7243d62d ("btrfs: combine device update
    operations during transaction commit") combined the way certain
    operations are recoded in a transaction. As a result an ASSERT was added
    in dev_replace_finish to ensure the new code works correctly.
    Unfortunately I got reports that it's possible to trigger the assert,
    meaning that during a device replace it's possible to have an unfinished
    chunk allocation on the source device.
    
    This is supposed to be prevented by the fact that a transaction is
    committed before finishing the replace oepration and alter acquiring the
    chunk mutex. This is not sufficient since by the time the transaction is
    committed and the chunk mutex acquired it's possible to allocate a chunk
    depending on the workload being executed on the replaced device. This
    bug has been present ever since device replace was introduced but there
    was never code which checks for it.
    
    The correct way to fix is to ensure that there is no pending device
    modification operation when the chunk mutex is acquire and if there is
    repeat transaction commit. Unfortunately it's not possible to just
    exclude the source device from btrfs_fs_devices::dev_alloc_list since
    this causes ENOSPC to be hit in transaction commit.
    
    Fixing that in another way would need to add special cases to handle the
    last writes and forbid new ones. The looped transaction fix is more
    obvious, and can be easily backported. The runtime of dev-replace is
    long so there's no noticeable delay caused by that.
    
    Reported-by: David Sterba <dsterba@suse.com>
    Fixes: 391cd9df81ac ("Btrfs: fix unprotected alloc list insertion during the finishing procedure of replace")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e537ba03e79ca82fa30b7b8a67d712a2080420a0
Author: Robert Beckett <bob.beckett@collabora.com>
Date:   Tue Jun 25 18:59:15 2019 +0100

    drm/imx: only send event on crtc disable if kept disabled
    
    commit 5aeab2bfc9ffa72d3ca73416635cb3785dfc076f upstream.
    
    The event will be sent as part of the vblank enable during the modeset
    if the crtc is not being kept disabled.
    
    Fixes: 5f2f911578fb ("drm/imx: atomic phase 3 step 1: Use atomic configuration")
    
    Signed-off-by: Robert Beckett <bob.beckett@collabora.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06a7d357dd6ee6c4d109b22444f58df7845d458c
Author: Robert Beckett <bob.beckett@collabora.com>
Date:   Tue Jun 25 18:59:13 2019 +0100

    drm/imx: notify drm core before sending event during crtc disable
    
    commit 78c68e8f5cd24bd32ba4ca1cdfb0c30cf0642685 upstream.
    
    Notify drm core before sending pending events during crtc disable.
    This fixes the first event after disable having an old stale timestamp
    by having drm_crtc_vblank_off update the timestamp to now.
    
    This was seen while debugging weston log message:
    Warning: computed repaint delay is insane: -8212 msec
    
    This occurred due to:
    1. driver starts up
    2. fbcon comes along and restores fbdev, enabling vblank
    3. vblank_disable_fn fires via timer disabling vblank, keeping vblank
    seq number and time set at current value
    (some time later)
    4. weston starts and does a modeset
    5. atomic commit disables crtc while it does the modeset
    6. ipu_crtc_atomic_disable sends vblank with old seq number and time
    
    Fixes: a474478642d5 ("drm/imx: fix crtc vblank state regression")
    
    Signed-off-by: Robert Beckett <bob.beckett@collabora.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea68394342605bad4a1c2bc8c30de4209b4ffac3
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Jun 24 18:32:26 2019 +0800

    lib/mpi: Fix karactx leak in mpi_powm
    
    commit c8ea9fce2baf7b643384f36f29e4194fa40d33a6 upstream.
    
    Sometimes mpi_powm will leak karactx because a memory allocation
    failure causes a bail-out that skips the freeing of karactx.  This
    patch moves the freeing of karactx to the end of the function like
    everything else so that it can't be skipped.
    
    Reported-by: syzbot+f7baccc38dcc1e094e77@syzkaller.appspotmail.com
    Fixes: cdec9cb5167a ("crypto: GnuPG based MPI lib - source files...")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Reviewed-by: Eric Biggers <ebiggers@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 443449d4a149a65f20585f5084673575d660eec5
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Jun 27 17:43:08 2019 +0100

    ALSA: usb-audio: fix sign unintended sign extension on left shifts
    
    commit 2acf5a3e6e9371e63c9e4ff54d84d08f630467a0 upstream.
    
    There are a couple of left shifts of unsigned 8 bit values that
    first get promoted to signed ints and hence get sign extended
    on the shift if the top bit of the 8 bit values are set. Fix
    this by casting the 8 bit values to unsigned ints to stop the
    unintentional sign extension.
    
    Addresses-Coverity: ("Unintended sign extension")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b449e9dc215e47641c4737a199b7767ffd032a9
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Jul 2 20:07:21 2019 +0200

    ALSA: line6: Fix write on zero-sized buffer
    
    commit 3450121997ce872eb7f1248417225827ea249710 upstream.
    
    LINE6 drivers allocate the buffers based on the value returned from
    usb_maxpacket() calls.  The manipulated device may return zero for
    this, and this results in the kmalloc() with zero size (and it may
    succeed) while the other part of the driver code writes the packet
    data with the fixed size -- which eventually overwrites.
    
    This patch adds a simple sanity check for the invalid buffer size for
    avoiding that problem.
    
    Reported-by: syzbot+219f00fb49874dcaea17@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e25f837422ee932d8587535c4abb343f86d1728e
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Jul 1 23:43:53 2019 +0900

    ALSA: firewire-lib/fireworks: fix miss detection of received MIDI messages
    
    commit 7fbd1753b64eafe21cf842348a40a691d0dee440 upstream.
    
    In IEC 61883-6, 8 MIDI data streams are multiplexed into single
    MIDI conformant data channel. The index of stream is calculated by
    modulo 8 of the value of data block counter.
    
    In fireworks, the value of data block counter in CIP header has a quirk
    with firmware version v5.0.0, v5.7.3 and v5.8.0. This brings ALSA
    IEC 61883-1/6 packet streaming engine to miss detection of MIDI
    messages.
    
    This commit fixes the miss detection to modify the value of data block
    counter for the modulo calculation.
    
    For maintainers, this bug exists since a commit 18f5ed365d3f ("ALSA:
    fireworks/firewire-lib: add support for recent firmware quirk") in Linux
    kernel v4.2. There're many changes since the commit.  This fix can be
    backported to Linux kernel v4.4 or later. I tagged a base commit to the
    backport for your convenience.
    
    Besides, my work for Linux kernel v5.3 brings heavy code refactoring and
    some structure members are renamed in 'sound/firewire/amdtp-stream.h'.
    The content of this patch brings conflict when merging -rc tree with
    this patch and the latest tree. I request maintainers to solve the
    conflict to replace 'tx_first_dbc' with 'ctx_data.tx.first_dbc'.
    
    Fixes: df075feefbd3 ("ALSA: firewire-lib: complete AM824 data block processing layer")
    Cc: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39950c6c376603c7e9d743bddba1bbdcc7394369
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Jun 28 10:54:29 2019 +0100

    ALSA: seq: fix incorrect order of dest_client/dest_ports arguments
    
    commit c3ea60c231446663afd6ea1054da6b7f830855ca upstream.
    
    There are two occurrances of a call to snd_seq_oss_fill_addr where
    the dest_client and dest_port arguments are in the wrong order. Fix
    this by swapping them around.
    
    Addresses-Coverity: ("Arguments in wrong order")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd6f2066307abbcb264d2052da73b951c7066ba9
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Jul 2 14:17:00 2019 -0700

    crypto: user - prevent operating on larval algorithms
    
    commit 21d4120ec6f5b5992b01b96ac484701163917b63 upstream.
    
    Michal Suchanek reported [1] that running the pcrypt_aead01 test from
    LTP [2] in a loop and holding Ctrl-C causes a NULL dereference of
    alg->cra_users.next in crypto_remove_spawns(), via crypto_del_alg().
    The test repeatedly uses CRYPTO_MSG_NEWALG and CRYPTO_MSG_DELALG.
    
    The crash occurs when the instance that CRYPTO_MSG_DELALG is trying to
    unregister isn't a real registered algorithm, but rather is a "test
    larval", which is a special "algorithm" added to the algorithms list
    while the real algorithm is still being tested.  Larvals don't have
    initialized cra_users, so that causes the crash.  Normally pcrypt_aead01
    doesn't trigger this because CRYPTO_MSG_NEWALG waits for the algorithm
    to be tested; however, CRYPTO_MSG_NEWALG returns early when interrupted.
    
    Everything else in the "crypto user configuration" API has this same bug
    too, i.e. it inappropriately allows operating on larval algorithms
    (though it doesn't look like the other cases can cause a crash).
    
    Fix this by making crypto_alg_match() exclude larval algorithms.
    
    [1] https://lkml.kernel.org/r/20190625071624.27039-1-msuchanek@suse.de
    [2] https://github.com/linux-test-project/ltp/blob/20190517/testcases/kernel/crypto/pcrypt_aead01.c
    
    Reported-by: Michal Suchanek <msuchanek@suse.de>
    Fixes: a38f7907b926 ("crypto: Add userspace configuration API")
    Cc: <stable@vger.kernel.org> # v3.2+
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8b99303da935228a33fa7656a964adfb33e271b
Author: Jann Horn <jannh@google.com>
Date:   Thu Jul 4 17:32:23 2019 +0200

    ptrace: Fix ->ptracer_cred handling for PTRACE_TRACEME
    
    commit 6994eefb0053799d2e07cd140df6c2ea106c41ee upstream.
    
    Fix two issues:
    
    When called for PTRACE_TRACEME, ptrace_link() would obtain an RCU
    reference to the parent's objective credentials, then give that pointer
    to get_cred().  However, the object lifetime rules for things like
    struct cred do not permit unconditionally turning an RCU reference into
    a stable reference.
    
    PTRACE_TRACEME records the parent's credentials as if the parent was
    acting as the subject, but that's not the case.  If a malicious
    unprivileged child uses PTRACE_TRACEME and the parent is privileged, and
    at a later point, the parent process becomes attacker-controlled
    (because it drops privileges and calls execve()), the attacker ends up
    with control over two processes with a privileged ptrace relationship,
    which can be abused to ptrace a suid binary and obtain root privileges.
    
    Fix both of these by always recording the credentials of the process
    that is requesting the creation of the ptrace relationship:
    current_cred() can't change under us, and current is the proper subject
    for access control.
    
    This change is theoretically userspace-visible, but I am not aware of
    any code that it will actually break.
    
    Fixes: 64b875f7ac8a ("ptrace: Capture the ptracer's creds not PT_PTRACE_CAP")
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7816df0494bf4c49b6c7d20dbfec4e1a1a016c2
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Aug 20 15:36:18 2018 -0700

    MIPS: Workaround GCC __builtin_unreachable reordering bug
    
    [ Upstream commit 906d441febc0de974b2a6ef848a8f058f3bfada3 ]
    
    Some versions of GCC for the MIPS architecture suffer from a bug which
    can lead to instructions from beyond an unreachable statement being
    incorrectly reordered into earlier branch delay slots if the unreachable
    statement is the only content of a case in a switch statement. This can
    lead to seemingly random behaviour, such as invalid memory accesses from
    incorrectly reordered loads or stores, and link failures on microMIPS
    builds.
    
    See this potential GCC fix for details:
    
        https://gcc.gnu.org/ml/gcc-patches/2015-09/msg00360.html
    
    Runtime problems resulting from this bug were initially observed using a
    maltasmvp_defconfig v4.4 kernel built using GCC 4.9.2 (from a Codescape
    SDK 2015.06-05 toolchain), with the result being an address exception
    taken after log messages about the L1 caches (during probe of the L2
    cache):
    
        Initmem setup node 0 [mem 0x0000000080000000-0x000000009fffffff]
        VPE topology {2,2} total 4
        Primary instruction cache 64kB, VIPT, 4-way, linesize 32 bytes.
        Primary data cache 64kB, 4-way, PIPT, no aliases, linesize 32 bytes
        <AdEL exception here>
    
    This is early enough that the kernel exception vectors are not in use,
    so any further output depends upon the bootloader. This is reproducible
    in QEMU where no further output occurs - ie. the system hangs here.
    Given the nature of the bug it may potentially be hit with differing
    symptoms. The bug is known to affect GCC versions as recent as 7.3, and
    it is unclear whether GCC 8 fixed it or just happens not to encounter
    the bug in the testcase found at the link above due to differing
    optimizations.
    
    This bug can be worked around by placing a volatile asm statement, which
    GCC is prevented from reordering past, prior to the
    __builtin_unreachable call.
    
    That was actually done already for other reasons by commit 173a3efd3edb
    ("bug.h: work around GCC PR82365 in BUG()"), but creates problems for
    microMIPS builds due to the lack of a .insn directive. The microMIPS ISA
    allows for interlinking with regular MIPS32 code by repurposing bit 0 of
    the program counter as an ISA mode bit. To switch modes one changes the
    value of this bit in the PC. However typical branch instructions encode
    their offsets as multiples of 2-byte instruction halfwords, which means
    they cannot change ISA mode - this must be done using either an indirect
    branch (a jump-register in MIPS terminology) or a dedicated jalx
    instruction. In order to ensure that regular branches don't attempt to
    target code in a different ISA which they can't actually switch to, the
    linker will check that branch targets are code in the same ISA as the
    branch.
    
    Unfortunately our empty asm volatile statements don't qualify as code,
    and the link for microMIPS builds fails with errors such as:
    
        arch/mips/mm/dma-default.s:3265: Error: branch to a symbol in another ISA mode
        arch/mips/mm/dma-default.s:5027: Error: branch to a symbol in another ISA mode
    
    Resolve this by adding a .insn directive within the asm statement which
    declares that what comes next is code. This may or may not be true,
    since we don't really know what comes next, but as this code is in an
    unreachable path anyway that doesn't matter since we won't execute it.
    
    We do this in asm/compiler.h & select CONFIG_HAVE_ARCH_COMPILER_H in
    order to have this included by linux/compiler_types.h after
    linux/compiler-gcc.h. This will result in asm/compiler.h being included
    in all C compilations via the -include linux/compiler_types.h argument
    in c_flags, which should be harmless.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Fixes: 173a3efd3edb ("bug.h: work around GCC PR82365 in BUG()")
    Patchwork: https://patchwork.linux-mips.org/patch/20270/
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: linux-mips@linux-mips.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a112705926e7e50118a22ba6186d37df7ca2608
Author: Lucas De Marchi <lucas.demarchi@intel.com>
Date:   Tue Jul 2 12:23:04 2019 -0700

    drm/i915/dmc: protect against reading random memory
    
    commit bc7b488b1d1c71dc4c5182206911127bc6c410d6 upstream.
    
    While loading the DMC firmware we were double checking the headers made
    sense, but in no place we checked that we were actually reading memory
    we were supposed to. This could be wrong in case the firmware file is
    truncated or malformed.
    
    Before this patch:
            # ls -l /lib/firmware/i915/icl_dmc_ver1_07.bin
            -rw-r--r-- 1 root root  25716 Feb  1 12:26 icl_dmc_ver1_07.bin
            # truncate -s 25700 /lib/firmware/i915/icl_dmc_ver1_07.bin
            # modprobe i915
            # dmesg| grep -i dmc
            [drm:intel_csr_ucode_init [i915]] Loading i915/icl_dmc_ver1_07.bin
            [drm] Finished loading DMC firmware i915/icl_dmc_ver1_07.bin (v1.7)
    
    i.e. it loads random data. Now it fails like below:
            [drm:intel_csr_ucode_init [i915]] Loading i915/icl_dmc_ver1_07.bin
            [drm:csr_load_work_fn [i915]] *ERROR* Truncated DMC firmware, rejecting.
            i915 0000:00:02.0: Failed to load DMC firmware i915/icl_dmc_ver1_07.bin. Disabling runtime power management.
            i915 0000:00:02.0: DMC firmware homepage: https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git/tree/i915
    
    Before reading any part of the firmware file, validate the input first.
    
    Fixes: eb805623d8b1 ("drm/i915/skl: Add support to load SKL CSR firmware.")
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190605235535.17791-1-lucas.demarchi@intel.com
    (cherry picked from commit bc7b488b1d1c71dc4c5182206911127bc6c410d6)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    [ Lucas: backported to 4.9+ adjusting the context ]
    Cc: stable@vger.kernel.org # v4.9+
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d271f225263389fa18b0c68f7e3490e8fb746baa
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Wed Jun 26 14:16:13 2019 +0200

    KVM: x86: degrade WARN to pr_warn_ratelimited
    
    commit 3f16a5c318392cbb5a0c7a3d19dff8c8ef3c38ee upstream.
    
    This warning can be triggered easily by userspace, so it should certainly not
    cause a panic if panic_on_warn is set.
    
    Reported-by: syzbot+c03f30b4f4c46bdf8575@syzkaller.appspotmail.com
    Suggested-by: Alexander Potapenko <glider@google.com>
    Acked-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05cd6937e8863d3255d36eac660df91b4d8273a1
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Aug 23 16:39:27 2017 +0200

    clk: sunxi: fix uninitialized access
    
    commit 4e903450bcb9a6bc90733b981d7cb8b3c4996a0e upstream.
    
    gcc-8 reports an uninitialized variable access in a code path
    that we would see with incorrect DTB input:
    
    drivers/clk/sunxi/clk-sun8i-bus-gates.c: In function 'sun8i_h3_bus_gates_init':
    drivers/clk/sunxi/clk-sun8i-bus-gates.c:85:27: error: 'clk_parent' may be used uninitialized in this function [-Werror=maybe-uninitialized]
    
    This works around by skipping invalid input and printing a warning
    instead if it ever happens. The problem was apparently part of the
    initiali driver submission, but older compilers don't notice it.
    
    Fixes: ab6e23a4e388 ("clk: sunxi: Add H3 clocks support")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd67557464c2cf89e239da1f11c5d8905ee18f01
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Fri Dec 8 08:45:57 2017 -0800

    ARC: handle gcc generated __builtin_trap for older compiler
    
    commit af1be2e21203867cb958aaceed5366e2e24b88e8 upstream.
    
    ARC gcc prior to GNU 2018.03 release didn't have a target specific
    __builtin_trap() implementation, generating default abort() call.
    
    Implement the abort() call - emulating what newer gcc does for the same,
    as suggested by Arnd.
    
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 074d0aaec0c61ab19099a1d31d08c7552ed97a16
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Feb 21 14:45:54 2018 -0800

    bug.h: work around GCC PR82365 in BUG()
    
    [ Upstream commit 173a3efd3edb2ef6ef07471397c5f542a360e9c1 ]
    
    Looking at functions with large stack frames across all architectures
    led me discovering that BUG() suffers from the same problem as
    fortify_panic(), which I've added a workaround for already.
    
    In short, variables that go out of scope by calling a noreturn function
    or __builtin_unreachable() keep using stack space in functions
    afterwards.
    
    A workaround that was identified is to insert an empty assembler
    statement just before calling the function that doesn't return.  I'm
    adding a macro "barrier_before_unreachable()" to document this, and
    insert calls to that in all instances of BUG() that currently suffer
    from this problem.
    
    The files that saw the largest change from this had these frame sizes
    before, and much less with my patch:
    
      fs/ext4/inode.c:82:1: warning: the frame size of 1672 bytes is larger than 800 bytes [-Wframe-larger-than=]
      fs/ext4/namei.c:434:1: warning: the frame size of 904 bytes is larger than 800 bytes [-Wframe-larger-than=]
      fs/ext4/super.c:2279:1: warning: the frame size of 1160 bytes is larger than 800 bytes [-Wframe-larger-than=]
      fs/ext4/xattr.c:146:1: warning: the frame size of 1168 bytes is larger than 800 bytes [-Wframe-larger-than=]
      fs/f2fs/inode.c:152:1: warning: the frame size of 1424 bytes is larger than 800 bytes [-Wframe-larger-than=]
      net/netfilter/ipvs/ip_vs_core.c:1195:1: warning: the frame size of 1068 bytes is larger than 800 bytes [-Wframe-larger-than=]
      net/netfilter/ipvs/ip_vs_core.c:395:1: warning: the frame size of 1084 bytes is larger than 800 bytes [-Wframe-larger-than=]
      net/netfilter/ipvs/ip_vs_ftp.c:298:1: warning: the frame size of 928 bytes is larger than 800 bytes [-Wframe-larger-than=]
      net/netfilter/ipvs/ip_vs_ftp.c:418:1: warning: the frame size of 908 bytes is larger than 800 bytes [-Wframe-larger-than=]
      net/netfilter/ipvs/ip_vs_lblcr.c:718:1: warning: the frame size of 960 bytes is larger than 800 bytes [-Wframe-larger-than=]
      drivers/net/xen-netback/netback.c:1500:1: warning: the frame size of 1088 bytes is larger than 800 bytes [-Wframe-larger-than=]
    
    In case of ARC and CRIS, it turns out that the BUG() implementation
    actually does return (or at least the compiler thinks it does),
    resulting in lots of warnings about uninitialized variable use and
    leaving noreturn functions, such as:
    
      block/cfq-iosched.c: In function 'cfq_async_queue_prio':
      block/cfq-iosched.c:3804:1: error: control reaches end of non-void function [-Werror=return-type]
      include/linux/dmaengine.h: In function 'dma_maxpq':
      include/linux/dmaengine.h:1123:1: error: control reaches end of non-void function [-Werror=return-type]
    
    This makes them call __builtin_trap() instead, which should normally
    dump the stack and kill the current process, like some of the other
    architectures already do.
    
    I tried adding barrier_before_unreachable() to panic() and
    fortify_panic() as well, but that had very little effect, so I'm not
    submitting that patch.
    
    Vineet said:
    
    : For ARC, it is double win.
    :
    : 1. Fixes 3 -Wreturn-type warnings
    :
    : | ../net/core/ethtool.c:311:1: warning: control reaches end of non-void function
    : [-Wreturn-type]
    : | ../kernel/sched/core.c:3246:1: warning: control reaches end of non-void function
    : [-Wreturn-type]
    : | ../include/linux/sunrpc/svc_xprt.h:180:1: warning: control reaches end of
    : non-void function [-Wreturn-type]
    :
    : 2.  bloat-o-meter reports code size improvements as gcc elides the
    :    generated code for stack return.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=82365
    Link: http://lkml.kernel.org/r/20171219114112.939391-1-arnd@arndb.de
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Vineet Gupta <vgupta@synopsys.com>    [arch/arc]
    Tested-by: Vineet Gupta <vgupta@synopsys.com>   [arch/arc]
    Cc: Mikael Starvik <starvik@axis.com>
    Cc: Jesper Nilsson <jesper.nilsson@axis.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Christopher Li <sparse@chrisli.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: "Steven Rostedt (VMware)" <rostedt@goodmis.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    [removed cris chunks - gregkh]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39862ccbc8531f6e3326eb3a8e7062307d71b349
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Fri Sep 29 14:46:50 2017 -0700

    ARC: fix allnoconfig build warning
    
    [ Upstream commit 5464d03d92601ac2977ef605b0cbb33276567daf ]
    
    Reported-by: Dmitrii Kolesnichenko <dmitrii@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3002e55a4f81f8ef00d02855507bc6e89f9abd5
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Aug 23 16:44:51 2017 +0200

    mfd: omap-usb-tll: Fix register offsets
    
    [ Upstream commit 993dc737c0996c163325961fb62a0ed9fd0308b4 ]
    
    gcc-8 notices that the register number calculation is wrong
    when the offset is an 'u8' but the number is larger than 256:
    
    drivers/mfd/omap-usb-tll.c: In function 'omap_tll_init':
    drivers/mfd/omap-usb-tll.c:90:46: error: overflow in conversion from 'int' to 'u8 {aka unsigned char}' chages value from 'i * 256 + 2070' to '22' [-Werror=overflow]
    
    This addresses it by always using a 32-bit offset number for
    the register. This is apparently an old problem that previous
    compilers did not find.
    
    Fixes: 16fa3dc75c22 ("mfd: omap-usb-tll: HOST TLL platform driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1a542a1615261e6e0a472465d0ae6f672c5c301
Author: Paul Burton <paulburton@kernel.org>
Date:   Wed Aug 8 09:30:56 2018 -0700

    MIPS: netlogic: xlr: Remove erroneous check in nlm_fmn_send()
    
    [ Upstream commit 02eec6c9fc0cb13169cc97a6139771768791f92b ]
    
    In nlm_fmn_send() we have a loop which attempts to send a message
    multiple times in order to handle the transient failure condition of a
    lack of available credit. When examining the status register to detect
    the failure we check for a condition that can never be true, which falls
    foul of gcc 8's -Wtautological-compare:
    
      In file included from arch/mips/netlogic/common/irq.c:65:
      ./arch/mips/include/asm/netlogic/xlr/fmn.h: In function 'nlm_fmn_send':
      ./arch/mips/include/asm/netlogic/xlr/fmn.h:304:22: error: bitwise
        comparison always evaluates to false [-Werror=tautological-compare]
         if ((status & 0x2) == 1)
                            ^~
    
    If the path taken if this condition were true all we do is print a
    message to the kernel console. Since failures seem somewhat expected
    here (making the console message questionable anyway) and the condition
    has clearly never evaluated true we simply remove it, rather than
    attempting to fix it to check status correctly.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Patchwork: https://patchwork.linux-mips.org/patch/20174/
    Cc: Ganesan Ramalingam <ganesanr@broadcom.com>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Jayachandran C <jnair@caviumnetworks.com>
    Cc: John Crispin <john@phrozen.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31cbea603449a761c9fdc63aec4fb84f5f42ccf0
Author: Manuel Lauss <manuel.lauss@gmail.com>
Date:   Mon Aug 14 12:21:48 2017 +0200

    MIPS: math-emu: do not use bools for arithmetic
    
    [ Upstream commit 8535f2ba0a9b971df62a5890699b9dfe2e0d5580 ]
    
    GCC-7 complains about a boolean value being used with an arithmetic
    AND:
    
    arch/mips/math-emu/cp1emu.c: In function 'cop1Emulate':
    arch/mips/math-emu/cp1emu.c:838:14: warning: '~' on a boolean expression [-Wbool-operation]
      fpr = (x) & ~(cop1_64bit(xcp) == 0);    \
                  ^
    arch/mips/math-emu/cp1emu.c:1068:3: note: in expansion of macro 'DITOREG'
       DITOREG(dval, MIPSInst_RT(ir));
       ^~~~~~~
    arch/mips/math-emu/cp1emu.c:838:14: note: did you mean to use logical not?
      fpr = (x) & ~(cop1_64bit(xcp) == 0);    \
    
    Since cop1_64bit() returns and int, just flip the LSB.
    
    Suggested-by: Maciej W. Rozycki <macro@imgtec.com>
    Signed-off-by: Manuel Lauss <manuel.lauss@gmail.com>
    Reviewed-by: Maciej W. Rozycki <macro@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17058/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32b213483ec59650780d1b8e29406bb582d2de47
Author: swkhack <swkhack@gmail.com>
Date:   Thu Jun 13 15:56:08 2019 -0700

    mm/mlock.c: change count_mm_mlocked_page_nr return type
    
    [ Upstream commit 0874bb49bb21bf24deda853e8bf61b8325e24bcb ]
    
    On a 64-bit machine the value of "vma->vm_end - vma->vm_start" may be
    negative when using 32 bit ints and the "count >> PAGE_SHIFT"'s result
    will be wrong.  So change the local variable and return value to
    unsigned long to fix the problem.
    
    Link: http://lkml.kernel.org/r/20190513023701.83056-1-swkhack@gmail.com
    Fixes: 0cf2f6f6dc60 ("mm: mlock: check against vma for actual mlock() size")
    Signed-off-by: swkhack <swkhack@gmail.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99b6668f2e3f70f703a01c77ada0c4bc80cfb1cf
Author: Manuel Traut <manut@linutronix.de>
Date:   Thu Jun 13 15:55:52 2019 -0700

    scripts/decode_stacktrace.sh: prefix addr2line with $CROSS_COMPILE
    
    [ Upstream commit c04e32e911653442fc834be6e92e072aeebe01a1 ]
    
    At least for ARM64 kernels compiled with the crosstoolchain from
    Debian/stretch or with the toolchain from kernel.org the line number is
    not decoded correctly by 'decode_stacktrace.sh':
    
      $ echo "[  136.513051]  f1+0x0/0xc [kcrash]" | \
        CROSS_COMPILE=/opt/gcc-8.1.0-nolibc/aarch64-linux/bin/aarch64-linux- \
       ./scripts/decode_stacktrace.sh /scratch/linux-arm64/vmlinux \
                                      /scratch/linux-arm64 \
                                      /nfs/debian/lib/modules/4.20.0-devel
      [  136.513051] f1 (/linux/drivers/staging/kcrash/kcrash.c:68) kcrash
    
    If addr2line from the toolchain is used the decoded line number is correct:
    
      [  136.513051] f1 (/linux/drivers/staging/kcrash/kcrash.c:57) kcrash
    
    Link: http://lkml.kernel.org/r/20190527083425.3763-1-manut@linutronix.de
    Signed-off-by: Manuel Traut <manut@linutronix.de>
    Acked-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb1901100a6d5fc479564f0671f3853be7e60085
Author: Don Brace <don.brace@microsemi.com>
Date:   Mon Jun 3 16:43:29 2019 -0500

    scsi: hpsa: correct ioaccel2 chaining
    
    [ Upstream commit 625d7d3518875c4d303c652a198feaa13d9f52d9 ]
    
    - set ioaccel2_sg_element member 'chain_indicator' to IOACCEL2_LAST_SG for
      the last s/g element.
    
    - set ioaccel2_sg_element member 'chain_indicator' to IOACCEL2_CHAIN when
      chaining.
    
    Reviewed-by: Bader Ali - Saleh <bader.alisaleh@microsemi.com>
    Reviewed-by: Scott Teel <scott.teel@microsemi.com>
    Reviewed-by: Matt Perricone <matt.perricone@microsemi.com>
    Signed-off-by: Don Brace <don.brace@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71e54f579ec80a93f45cd8d3266a7a37cb8f96bc
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Wed May 22 14:07:36 2019 +0200

    usb: gadget: udc: lpc32xx: allocate descriptor with GFP_ATOMIC
    
    [ Upstream commit fbc318afadd6e7ae2252d6158cf7d0c5a2132f7d ]
    
    Gadget drivers may queue request in interrupt context. This would lead to
    a descriptor allocation in that context. In that case we would hit
    BUG_ON(in_interrupt()) in __get_vm_area_node.
    
    Also remove the unnecessary cast.
    
    Acked-by: Sylvain Lemieux <slemieux.tyco@gmail.com>
    Tested-by: James Grant <jamesg@zaltys.org>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa5865dc25b29a6cd80f71798503700752490244
Author: Young Xiao <92siuyang@gmail.com>
Date:   Tue May 28 20:17:54 2019 +0800

    usb: gadget: fusb300_udc: Fix memory leak of fusb300->ep[i]
    
    [ Upstream commit 62fd0e0a24abeebe2c19fce49dd5716d9b62042d ]
    
    There is no deallocation of fusb300->ep[i] elements, allocated at
    fusb300_probe.
    
    The patch adds deallocation of fusb300->ep array elements.
    
    Signed-off-by: Young Xiao <92siuyang@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 689aca72d29d76fef0d53cfa7816f1716ff17f06
Author: Yu-Hsuan Hsu <yuhsuan@chromium.org>
Date:   Tue Jun 4 18:49:09 2019 +0800

    ASoC: max98090: remove 24-bit format support if RJ is 0
    
    [ Upstream commit 5628c8979642a076f91ee86c3bae5ad251639af0 ]
    
    The supported formats are S16_LE and S24_LE now. However, by datasheet
    of max98090, S24_LE is only supported when it is in the right justified
    mode. We should remove 24-bit format if it is not in that mode to avoid
    triggering error.
    
    Signed-off-by: Yu-Hsuan Hsu <yuhsuan@chromium.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9c6c4d8ff554d8241d546e12a120c075c58f440
Author: Hsin-Yi Wang <hsinyi@chromium.org>
Date:   Wed May 29 18:25:52 2019 +0800

    drm/mediatek: fix unbind functions
    
    [ Upstream commit 8fd7a37b191f93737f6280a9b5de65f98acc12c9 ]
    
    detatch panel in mtk_dsi_destroy_conn_enc(), since .bind will try to
    attach it again.
    
    Fixes: 2e54c14e310f ("drm/mediatek: Add DSI sub driver")
    Signed-off-by: Hsin-Yi Wang <hsinyi@chromium.org>
    Signed-off-by: CK Hu <ck.hu@mediatek.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b3853bf81cec2611ea70456da74d22653a101a4
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu May 16 15:56:56 2019 +0800

    spi: bitbang: Fix NULL pointer dereference in spi_unregister_master
    
    [ Upstream commit 5caaf29af5ca82d5da8bc1d0ad07d9e664ccf1d8 ]
    
    If spi_register_master fails in spi_bitbang_start
    because device_add failure, We should return the
    error code other than 0, otherwise calling
    spi_bitbang_stop may trigger NULL pointer dereference
    like this:
    
    BUG: KASAN: null-ptr-deref in __list_del_entry_valid+0x45/0xd0
    Read of size 8 at addr 0000000000000000 by task syz-executor.0/3661
    
    CPU: 0 PID: 3661 Comm: syz-executor.0 Not tainted 5.1.0+ #28
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014
    Call Trace:
     dump_stack+0xa9/0x10e
     ? __list_del_entry_valid+0x45/0xd0
     ? __list_del_entry_valid+0x45/0xd0
     __kasan_report+0x171/0x18d
     ? __list_del_entry_valid+0x45/0xd0
     kasan_report+0xe/0x20
     __list_del_entry_valid+0x45/0xd0
     spi_unregister_controller+0x99/0x1b0
     spi_lm70llp_attach+0x3ae/0x4b0 [spi_lm70llp]
     ? 0xffffffffc1128000
     ? klist_next+0x131/0x1e0
     ? driver_detach+0x40/0x40 [parport]
     port_check+0x3b/0x50 [parport]
     bus_for_each_dev+0x115/0x180
     ? subsys_dev_iter_exit+0x20/0x20
     __parport_register_driver+0x1f0/0x210 [parport]
     ? 0xffffffffc1150000
     do_one_initcall+0xb9/0x3b5
     ? perf_trace_initcall_level+0x270/0x270
     ? kasan_unpoison_shadow+0x30/0x40
     ? kasan_unpoison_shadow+0x30/0x40
     do_init_module+0xe0/0x330
     load_module+0x38eb/0x4270
     ? module_frob_arch_sections+0x20/0x20
     ? kernel_read_file+0x188/0x3f0
     ? find_held_lock+0x6d/0xd0
     ? fput_many+0x1a/0xe0
     ? __do_sys_finit_module+0x162/0x190
     __do_sys_finit_module+0x162/0x190
     ? __ia32_sys_init_module+0x40/0x40
     ? __mutex_unlock_slowpath+0xb4/0x3f0
     ? wait_for_completion+0x240/0x240
     ? vfs_write+0x160/0x2a0
     ? lockdep_hardirqs_off+0xb5/0x100
     ? mark_held_locks+0x1a/0x90
     ? do_syscall_64+0x14/0x2a0
     do_syscall_64+0x72/0x2a0
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: 702a4879ec33 ("spi: bitbang: Let spi_bitbang_start() take a reference to master")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Axel Lin <axel.lin@ingics.com>
    Reviewed-by: Mukesh Ojha <mojha@codeaurora.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1166becf84e8c657d85572d857dbf78c2bf40a66
Author: Libin Yang <libin.yang@intel.com>
Date:   Wed May 8 10:32:41 2019 +0800

    ASoC: soc-pcm: BE dai needs prepare when pause release after resume
    
    [ Upstream commit 5087a8f17df868601cd7568299e91c28086d2b45 ]
    
    If playback/capture is paused and system enters S3, after system returns
    from suspend, BE dai needs to call prepare() callback when playback/capture
    is released from pause if RESUME_INFO flag is not set.
    
    Currently, the dpcm_be_dai_prepare() function will block calling prepare()
    if the pcm is in SND_SOC_DPCM_STATE_PAUSED state. This will cause the
    following test case fail if the pcm uses BE:
    
    playback -> pause -> S3 suspend -> S3 resume -> pause release
    
    The playback may exit abnormally when pause is released because the BE dai
    prepare() is not called.
    
    This patch allows dpcm_be_dai_prepare() to call dai prepare() callback in
    SND_SOC_DPCM_STATE_PAUSED state.
    
    Signed-off-by: Libin Yang <libin.yang@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cbb066f11d87b55257e571576ec297ac7d5a5a85
Author: Matt Flax <flatmax@flatmax.org>
Date:   Wed May 8 16:33:13 2019 +1000

    ASoC : cs4265 : readable register too low
    
    [ Upstream commit f3df05c805983427319eddc2411a2105ee1757cf ]
    
    The cs4265_readable_register function stopped short of the maximum
    register.
    
    An example bug is taken from :
    https://github.com/Audio-Injector/Ultra/issues/25
    
    Where alsactl store fails with :
    Cannot read control '2,0,0,C Data Buffer,0': Input/output error
    
    This patch fixes the bug by setting the cs4265 to have readable
    registers up to the maximum hardware register CS4265_MAX_REGISTER.
    
    Signed-off-by: Matt Flax <flatmax@flatmax.org>
    Reviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f470557724f2c94c25e4f6480a41612cf42aff26
Author: Matias Karhumaa <matias.karhumaa@gmail.com>
Date:   Tue Jul 2 16:35:09 2019 +0200

    Bluetooth: Fix faulty expression for minimum encryption key size check
    
    commit eca94432934fe5f141d084f2e36ee2c0e614cc04 upstream.
    
    Fix minimum encryption key size check so that HCI_MIN_ENC_KEY_SIZE is
    also allowed as stated in the comment.
    
    This bug caused connection problems with devices having maximum
    encryption key size of 7 octets (56-bit).
    
    Fixes: 693cd8ce3f88 ("Bluetooth: Fix regression with minimum encryption key size alignment")
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=203997
    Signed-off-by: Matias Karhumaa <matias.karhumaa@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f973fe470fb3cd31636afc133d42019d6108ff1
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Jun 17 21:34:15 2019 +0800

    tipc: pass tunnel dev as NULL to udp_tunnel(6)_xmit_skb
    
    commit c3bcde026684c62d7a2b6f626dc7cf763833875c upstream.
    
    udp_tunnel(6)_xmit_skb() called by tipc_udp_xmit() expects a tunnel device
    to count packets on dev->tstats, a perpcu variable. However, TIPC is using
    udp tunnel with no tunnel device, and pass the lower dev, like veth device
    that only initializes dev->lstats(a perpcu variable) when creating it.
    
    Later iptunnel_xmit_stats() called by ip(6)tunnel_xmit() thinks the dev as
    a tunnel device, and uses dev->tstats instead of dev->lstats. tstats' each
    pointer points to a bigger struct than lstats, so when tstats->tx_bytes is
    increased, other percpu variable's members could be overwritten.
    
    syzbot has reported quite a few crashes due to fib_nh_common percpu member
    'nhc_pcpu_rth_output' overwritten, call traces are like:
    
      BUG: KASAN: slab-out-of-bounds in rt_cache_valid+0x158/0x190
      net/ipv4/route.c:1556
        rt_cache_valid+0x158/0x190 net/ipv4/route.c:1556
        __mkroute_output net/ipv4/route.c:2332 [inline]
        ip_route_output_key_hash_rcu+0x819/0x2d50 net/ipv4/route.c:2564
        ip_route_output_key_hash+0x1ef/0x360 net/ipv4/route.c:2393
        __ip_route_output_key include/net/route.h:125 [inline]
        ip_route_output_flow+0x28/0xc0 net/ipv4/route.c:2651
        ip_route_output_key include/net/route.h:135 [inline]
      ...
    
    or:
    
      kasan: GPF could be caused by NULL-ptr deref or user memory access
      RIP: 0010:dst_dev_put+0x24/0x290 net/core/dst.c:168
        <IRQ>
        rt_fibinfo_free_cpus net/ipv4/fib_semantics.c:200 [inline]
        free_fib_info_rcu+0x2e1/0x490 net/ipv4/fib_semantics.c:217
        __rcu_reclaim kernel/rcu/rcu.h:240 [inline]
        rcu_do_batch kernel/rcu/tree.c:2437 [inline]
        invoke_rcu_callbacks kernel/rcu/tree.c:2716 [inline]
        rcu_process_callbacks+0x100a/0x1ac0 kernel/rcu/tree.c:2697
      ...
    
    The issue exists since tunnel stats update is moved to iptunnel_xmit by
    Commit 039f50629b7f ("ip_tunnel: Move stats update to iptunnel_xmit()"),
    and here to fix it by passing a NULL tunnel dev to udp_tunnel(6)_xmit_skb
    so that the packets counting won't happen on dev->tstats.
    
    Reported-by: syzbot+9d4c12bfd45a58738d0a@syzkaller.appspotmail.com
    Reported-by: syzbot+a9e23ea2aa21044c2798@syzkaller.appspotmail.com
    Reported-by: syzbot+c4c4b2bb358bb936ad7e@syzkaller.appspotmail.com
    Reported-by: syzbot+0290d2290a607e035ba1@syzkaller.appspotmail.com
    Reported-by: syzbot+a43d8d4e7e8a7a9e149e@syzkaller.appspotmail.com
    Reported-by: syzbot+a47c5f4c6c00fc1ed16e@syzkaller.appspotmail.com
    Fixes: 039f50629b7f ("ip_tunnel: Move stats update to iptunnel_xmit()")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f00d44f9884ca588e42f942f6a6fafbb0c0afc0
Author: Martin KaFai Lau <kafai@fb.com>
Date:   Fri May 31 15:29:11 2019 -0700

    bpf: udp: ipv6: Avoid running reuseport's bpf_prog from __udp6_lib_err
    
    commit 4ac30c4b3659efac031818c418beb51e630d512d upstream.
    
    __udp6_lib_err() may be called when handling icmpv6 message. For example,
    the icmpv6 toobig(type=2).  __udp6_lib_lookup() is then called
    which may call reuseport_select_sock().  reuseport_select_sock() will
    call into a bpf_prog (if there is one).
    
    reuseport_select_sock() is expecting the skb->data pointing to the
    transport header (udphdr in this case).  For example, run_bpf_filter()
    is pulling the transport header.
    
    However, in the __udp6_lib_err() path, the skb->data is pointing to the
    ipv6hdr instead of the udphdr.
    
    One option is to pull and push the ipv6hdr in __udp6_lib_err().
    Instead of doing this, this patch follows how the original
    commit 538950a1b752 ("soreuseport: setsockopt SO_ATTACH_REUSEPORT_[CE]BPF")
    was done in IPv4, which has passed a NULL skb pointer to
    reuseport_select_sock().
    
    Fixes: 538950a1b752 ("soreuseport: setsockopt SO_ATTACH_REUSEPORT_[CE]BPF")
    Cc: Craig Gallek <kraig@google.com>
    Signed-off-by: Martin KaFai Lau <kafai@fb.com>
    Acked-by: Song Liu <songliubraving@fb.com>
    Acked-by: Craig Gallek <kraig@google.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c77e8fe4ff65ec3239c22072ff9517b2645dd13
Author: Martin KaFai Lau <kafai@fb.com>
Date:   Fri May 31 15:29:13 2019 -0700

    bpf: udp: Avoid calling reuseport's bpf_prog from udp_gro
    
    commit 257a525fe2e49584842c504a92c27097407f778f upstream.
    
    When the commit a6024562ffd7 ("udp: Add GRO functions to UDP socket")
    added udp[46]_lib_lookup_skb to the udp_gro code path, it broke
    the reuseport_select_sock() assumption that skb->data is pointing
    to the transport header.
    
    This patch follows an earlier __udp6_lib_err() fix by
    passing a NULL skb to avoid calling the reuseport's bpf_prog.
    
    Fixes: a6024562ffd7 ("udp: Add GRO functions to UDP socket")
    Cc: Tom Herbert <tom@herbertland.com>
    Signed-off-by: Martin KaFai Lau <kafai@fb.com>
    Acked-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d76e874053c31555af4fa0ec9819978527ba84e6
Author: Josh Elsasser <jelsasser@appneta.com>
Date:   Mon Jul 1 16:41:43 2019 -0700

    net: check before dereferencing netdev_ops during busy poll
    
    init_dummy_netdev() leaves its netdev_ops pointer zeroed. This leads
    to a NULL pointer dereference when sk_busy_loop fires against an iwlwifi
    wireless adapter and checks napi->dev->netdev_ops->ndo_busy_poll.
    
    Avoid this by ensuring napi->dev->netdev_ops is valid before following
    the pointer, avoiding the following panic when busy polling on a dummy
    netdev:
    
      BUG: unable to handle kernel NULL pointer dereference at 00000000000000c8
      IP: [<ffffffff817b4b72>] sk_busy_loop+0x92/0x2f0
      Call Trace:
       [<ffffffff815a3134>] ? uart_write_room+0x74/0xf0
       [<ffffffff817964a9>] sock_poll+0x99/0xa0
       [<ffffffff81223142>] do_sys_poll+0x2e2/0x520
       [<ffffffff8118d3fc>] ? get_page_from_freelist+0x3bc/0xa30
       [<ffffffff810ada22>] ? update_curr+0x62/0x140
       [<ffffffff811ea671>] ? __slab_free+0xa1/0x2a0
       [<ffffffff811ea671>] ? __slab_free+0xa1/0x2a0
       [<ffffffff8179dbb1>] ? skb_free_head+0x21/0x30
       [<ffffffff81221bd0>] ? poll_initwait+0x50/0x50
       [<ffffffff811eaa36>] ? kmem_cache_free+0x1c6/0x1e0
       [<ffffffff815a4884>] ? uart_write+0x124/0x1d0
       [<ffffffff810bd1cd>] ? remove_wait_queue+0x4d/0x60
       [<ffffffff810bd224>] ? __wake_up+0x44/0x50
       [<ffffffff81582731>] ? tty_write_unlock+0x31/0x40
       [<ffffffff8158c5c6>] ? tty_ldisc_deref+0x16/0x20
       [<ffffffff81584820>] ? tty_write+0x1e0/0x2f0
       [<ffffffff81587e50>] ? process_echoes+0x80/0x80
       [<ffffffff8120c17b>] ? __vfs_write+0x2b/0x130
       [<ffffffff8120d09a>] ? vfs_write+0x15a/0x1a0
       [<ffffffff81223455>] SyS_poll+0x75/0x100
       [<ffffffff819a6524>] entry_SYSCALL_64_fastpath+0x24/0xcf
    
    Commit 79e7fff47b7b ("net: remove support for per driver ndo_busy_poll()")
    indirectly fixed this upstream in linux-4.11 by removing the offending
    pointer usage. No other users of napi->dev touch its netdev_ops.
    
    Fixes: ce6aea93f751 ("net: network drivers no longer need to implement ndo_busy_poll()") # 4.9.y
    Signed-off-by: Josh Elsasser <jelsasser@appneta.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Tested-by: Matteo Croce <mcroce@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4451dc92e5bbd31363dac5c82fc35080b330933b
Author: Stephen Suryaputra <ssuryaextr@gmail.com>
Date:   Mon Jun 24 20:14:06 2019 -0400

    ipv4: Use return value of inet_iif() for __raw_v4_lookup in the while loop
    
    [ Upstream commit 38c73529de13e1e10914de7030b659a2f8b01c3b ]
    
    In commit 19e4e768064a8 ("ipv4: Fix raw socket lookup for local
    traffic"), the dif argument to __raw_v4_lookup() is coming from the
    returned value of inet_iif() but the change was done only for the first
    lookup. Subsequent lookups in the while loop still use skb->dev->ifIndex.
    
    Fixes: 19e4e768064a8 ("ipv4: Fix raw socket lookup for local traffic")
    Signed-off-by: Stephen Suryaputra <ssuryaextr@gmail.com>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b93a8c23a330bc4d79336a661e7c6eed5318130c
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Wed Jun 26 16:08:44 2019 +0800

    bonding: Always enable vlan tx offload
    
    [ Upstream commit 30d8177e8ac776d89d387fad547af6a0f599210e ]
    
    We build vlan on top of bonding interface, which vlan offload
    is off, bond mode is 802.3ad (LACP) and xmit_hash_policy is
    BOND_XMIT_POLICY_ENCAP34.
    
    Because vlan tx offload is off, vlan tci is cleared and skb push
    the vlan header in validate_xmit_vlan() while sending from vlan
    devices. Then in bond_xmit_hash, __skb_flow_dissect() fails to
    get information from protocol headers encapsulated within vlan,
    because 'nhoff' is points to IP header, so bond hashing is based
    on layer 2 info, which fails to distribute packets across slaves.
    
    This patch always enable bonding's vlan tx offload, pass the vlan
    packets to the slave devices with vlan tci, let them to handle
    vlan implementation.
    
    Fixes: 278339a42a1b ("bonding: propogate vlan_features to bonding master")
    Suggested-by: Jiri Pirko <jiri@resnulli.us>
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7abb0db17429afc060309c7c4f56f8df024cd9eb
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Jun 27 00:03:39 2019 +0800

    team: Always enable vlan tx offload
    
    [ Upstream commit ee4297420d56a0033a8593e80b33fcc93fda8509 ]
    
    We should rather have vlan_tci filled all the way down
    to the transmitting netdevice and let it do the hw/sw
    vlan implementation.
    
    Suggested-by: Jiri Pirko <jiri@resnulli.us>
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 167c810e9db35fb79e23458c76b7b5938de42653
Author: Fei Li <lifei.shirley@bytedance.com>
Date:   Mon Jun 17 21:26:36 2019 +0800

    tun: wake up waitqueues after IFF_UP is set
    
    [ Upstream commit 72b319dc08b4924a29f5e2560ef6d966fa54c429 ]
    
    Currently after setting tap0 link up, the tun code wakes tx/rx waited
    queues up in tun_net_open() when .ndo_open() is called, however the
    IFF_UP flag has not been set yet. If there's already a wait queue, it
    would fail to transmit when checking the IFF_UP flag in tun_sendmsg().
    Then the saving vhost_poll_start() will add the wq into wqh until it
    is waken up again. Although this works when IFF_UP flag has been set
    when tun_chr_poll detects; this is not true if IFF_UP flag has not
    been set at that time. Sadly the latter case is a fatal error, as
    the wq will never be waken up in future unless later manually
    setting link up on purpose.
    
    Fix this by moving the wakeup process into the NETDEV_UP event
    notifying process, this makes sure IFF_UP has been set before all
    waited queues been waken up.
    
    Signed-off-by: Fei Li <lifei.shirley@bytedance.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c09cff8979696c8b515267ef77cc9a404feab804
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Jun 25 00:28:19 2019 +0800

    tipc: check msg->req data len in tipc_nl_compat_bearer_disable
    
    [ Upstream commit 4f07b80c973348a99b5d2a32476a2e7877e94a05 ]
    
    This patch is to fix an uninit-value issue, reported by syzbot:
    
      BUG: KMSAN: uninit-value in memchr+0xce/0x110 lib/string.c:981
      Call Trace:
        __dump_stack lib/dump_stack.c:77 [inline]
        dump_stack+0x191/0x1f0 lib/dump_stack.c:113
        kmsan_report+0x130/0x2a0 mm/kmsan/kmsan.c:622
        __msan_warning+0x75/0xe0 mm/kmsan/kmsan_instr.c:310
        memchr+0xce/0x110 lib/string.c:981
        string_is_valid net/tipc/netlink_compat.c:176 [inline]
        tipc_nl_compat_bearer_disable+0x2a1/0x480 net/tipc/netlink_compat.c:449
        __tipc_nl_compat_doit net/tipc/netlink_compat.c:327 [inline]
        tipc_nl_compat_doit+0x3ac/0xb00 net/tipc/netlink_compat.c:360
        tipc_nl_compat_handle net/tipc/netlink_compat.c:1178 [inline]
        tipc_nl_compat_recv+0x1b1b/0x27b0 net/tipc/netlink_compat.c:1281
    
    TLV_GET_DATA_LEN() may return a negtive int value, which will be
    used as size_t (becoming a big unsigned long) passed into memchr,
    cause this issue.
    
    Similar to what it does in tipc_nl_compat_bearer_enable(), this
    fix is to return -EINVAL when TLV_GET_DATA_LEN() is negtive in
    tipc_nl_compat_bearer_disable(), as well as in
    tipc_nl_compat_link_stat_dump() and tipc_nl_compat_link_reset_stats().
    
    v1->v2:
      - add the missing Fixes tags per Eric's request.
    
    Fixes: 0762216c0ad2 ("tipc: fix uninit-value in tipc_nl_compat_bearer_enable")
    Fixes: 8b66fee7f8ee ("tipc: fix uninit-value in tipc_nl_compat_link_reset_stats")
    Reported-by: syzbot+30eaa8bf392f7fafffaf@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00bdf8d549416d003f322f573499bc37d67cb016
Author: Xin Long <lucien.xin@gmail.com>
Date:   Thu Jun 20 18:39:28 2019 +0800

    tipc: change to use register_pernet_device
    
    [ Upstream commit c492d4c74dd3f87559883ffa0f94a8f1ae3fe5f5 ]
    
    This patch is to fix a dst defcnt leak, which can be reproduced by doing:
    
      # ip net a c; ip net a s; modprobe tipc
      # ip net e s ip l a n eth1 type veth peer n eth1 netns c
      # ip net e c ip l s lo up; ip net e c ip l s eth1 up
      # ip net e s ip l s lo up; ip net e s ip l s eth1 up
      # ip net e c ip a a 1.1.1.2/8 dev eth1
      # ip net e s ip a a 1.1.1.1/8 dev eth1
      # ip net e c tipc b e m udp n u1 localip 1.1.1.2
      # ip net e s tipc b e m udp n u1 localip 1.1.1.1
      # ip net d c; ip net d s; rmmod tipc
    
    and it will get stuck and keep logging the error:
    
      unregister_netdevice: waiting for lo to become free. Usage count = 1
    
    The cause is that a dst is held by the udp sock's sk_rx_dst set on udp rx
    path with udp_early_demux == 1, and this dst (eventually holding lo dev)
    can't be released as bearer's removal in tipc pernet .exit happens after
    lo dev's removal, default_device pernet .exit.
    
     "There are two distinct types of pernet_operations recognized: subsys and
      device.  At creation all subsys init functions are called before device
      init functions, and at destruction all device exit functions are called
      before subsys exit function."
    
    So by calling register_pernet_device instead to register tipc_net_ops, the
    pernet .exit() will be invoked earlier than loopback dev's removal when a
    netns is being destroyed, as fou/gue does.
    
    Note that vxlan and geneve udp tunnels don't have this issue, as the udp
    sock is released in their device ndo_stop().
    
    This fix is also necessary for tipc dst_cache, which will hold dsts on tx
    path and I will introduce in my next patch.
    
    Reported-by: Li Shuang <shuali@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17bcbe8589a7d1fece2c64d56fe8f32188441383
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Jun 25 00:21:45 2019 +0800

    sctp: change to hold sk after auth shkey is created successfully
    
    [ Upstream commit 25bff6d5478b2a02368097015b7d8eb727c87e16 ]
    
    Now in sctp_endpoint_init(), it holds the sk then creates auth
    shkey. But when the creation fails, it doesn't release the sk,
    which causes a sk defcnf leak,
    
    Here to fix it by only holding the sk when auth shkey is created
    successfully.
    
    Fixes: a29a5bd4f5c3 ("[SCTP]: Implement SCTP-AUTH initializations.")
    Reported-by: syzbot+afabda3890cc2f765041@syzkaller.appspotmail.com
    Reported-by: syzbot+276ca1c77a19977c0130@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ced5e8ddd7745f692b04fdf7b1e18bf2e248a41
Author: Roland Hii <roland.king.guan.hii@intel.com>
Date:   Wed Jun 19 22:13:48 2019 +0800

    net: stmmac: fixed new system time seconds value calculation
    
    [ Upstream commit a1e5388b4d5fc78688e5e9ee6641f779721d6291 ]
    
    When ADDSUB bit is set, the system time seconds field is calculated as
    the complement of the seconds part of the update value.
    
    For example, if 3.000000001 seconds need to be subtracted from the
    system time, this field is calculated as
    2^32 - 3 = 4294967296 - 3 = 0x100000000 - 3 = 0xFFFFFFFD
    
    Previously, the 0x100000000 is mistakenly written as 100000000.
    
    This is further simplified from
      sec = (0x100000000ULL - sec);
    to
      sec = -sec;
    
    Fixes: ba1ffd74df74 ("stmmac: fix PTP support for GMAC4")
    Signed-off-by: Roland Hii <roland.king.guan.hii@intel.com>
    Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
    Signed-off-by: Voon Weifeng <weifeng.voon@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c76cea627b42de36c306706a1e4f8f4e751c927
Author: Neil Horman <nhorman@tuxdriver.com>
Date:   Tue Jun 25 17:57:49 2019 -0400

    af_packet: Block execution of tasks waiting for transmit to complete in AF_PACKET
    
    [ Upstream commit 89ed5b519004a7706f50b70f611edbd3aaacff2c ]
    
    When an application is run that:
    a) Sets its scheduler to be SCHED_FIFO
    and
    b) Opens a memory mapped AF_PACKET socket, and sends frames with the
    MSG_DONTWAIT flag cleared, its possible for the application to hang
    forever in the kernel.  This occurs because when waiting, the code in
    tpacket_snd calls schedule, which under normal circumstances allows
    other tasks to run, including ksoftirqd, which in some cases is
    responsible for freeing the transmitted skb (which in AF_PACKET calls a
    destructor that flips the status bit of the transmitted frame back to
    available, allowing the transmitting task to complete).
    
    However, when the calling application is SCHED_FIFO, its priority is
    such that the schedule call immediately places the task back on the cpu,
    preventing ksoftirqd from freeing the skb, which in turn prevents the
    transmitting task from detecting that the transmission is complete.
    
    We can fix this by converting the schedule call to a completion
    mechanism.  By using a completion queue, we force the calling task, when
    it detects there are no more frames to send, to schedule itself off the
    cpu until such time as the last transmitted skb is freed, allowing
    forward progress to be made.
    
    Tested by myself and the reporter, with good results
    
    Change Notes:
    
    V1->V2:
            Enhance the sleep logic to support being interruptible and
    allowing for honoring to SK_SNDTIMEO (Willem de Bruijn)
    
    V2->V3:
            Rearrage the point at which we wait for the completion queue, to
    avoid needing to check for ph/skb being null at the end of the loop.
    Also move the complete call to the skb destructor to avoid needing to
    modify __packet_set_status.  Also gate calling complete on
    packet_read_pending returning zero to avoid multiple calls to complete.
    (Willem de Bruijn)
    
            Move timeo computation within loop, to re-fetch the socket
    timeout since we also use the timeo variable to record the return code
    from the wait_for_complete call (Neil Horman)
    
    V3->V4:
            Willem has requested that the control flow be restored to the
    previous state.  Doing so lets us eliminate the need for the
    po->wait_on_complete flag variable, and lets us get rid of the
    packet_next_frame function, but introduces another complexity.
    Specifically, but using the packet pending count, we can, if an
    applications calls sendmsg multiple times with MSG_DONTWAIT set, each
    set of transmitted frames, when complete, will cause
    tpacket_destruct_skb to issue a complete call, for which there will
    never be a wait_on_completion call.  This imbalance will lead to any
    future call to wait_for_completion here to return early, when the frames
    they sent may not have completed.  To correct this, we need to re-init
    the completion queue on every call to tpacket_snd before we enter the
    loop so as to ensure we wait properly for the frames we send in this
    iteration.
    
            Change the timeout and interrupted gotos to out_put rather than
    out_status so that we don't try to free a non-existant skb
            Clean up some extra newlines (Willem de Bruijn)
    
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
    Reported-by: Matteo Croce <mcroce@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cbb0ae75a30908563e37d2c3429e79d207729cc
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Thu May 16 09:09:35 2019 +0200

    cpu/speculation: Warn on unsupported mitigations= parameter
    
    commit 1bf72720281770162c87990697eae1ba2f1d917a upstream.
    
    Currently, if the user specifies an unsupported mitigation strategy on the
    kernel command line, it will be ignored silently.  The code will fall back
    to the default strategy, possibly leaving the system more vulnerable than
    expected.
    
    This may happen due to e.g. a simple typo, or, for a stable kernel release,
    because not all mitigation strategies have been backported.
    
    Inform the user by printing a message.
    
    Fixes: 98af8452945c5565 ("cpu/speculation: Add 'mitigations=' cmdline option")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Jiri Kosina <jkosina@suse.cz>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190516070935.22546-1-geert@linux-m68k.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64d3f00a33eaa7e9d1ca285aca8eec86adc7324b
Author: Trond Myklebust <trondmy@gmail.com>
Date:   Tue Jun 25 16:41:16 2019 -0400

    NFS/flexfiles: Use the correct TCP timeout for flexfiles I/O
    
    commit 68f461593f76bd5f17e87cdd0bea28f4278c7268 upstream.
    
    Fix a typo where we're confusing the default TCP retrans value
    (NFS_DEF_TCP_RETRANS) for the default TCP timeout value.
    
    Fixes: 15d03055cf39f ("pNFS/flexfiles: Set reasonable default ...")
    Cc: stable@vger.kernel.org # 4.8+
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bed86475416a2a6a39e53a8ee76b0f59dd737ff1
Author: Alejandro Jimenez <alejandro.j.jimenez@oracle.com>
Date:   Mon Jun 10 13:20:10 2019 -0400

    x86/speculation: Allow guests to use SSBD even if host does not
    
    commit c1f7fec1eb6a2c86d01bc22afce772c743451d88 upstream.
    
    The bits set in x86_spec_ctrl_mask are used to calculate the guest's value
    of SPEC_CTRL that is written to the MSR before VMENTRY, and control which
    mitigations the guest can enable.  In the case of SSBD, unless the host has
    enabled SSBD always on mode (by passing "spec_store_bypass_disable=on" in
    the kernel parameters), the SSBD bit is not set in the mask and the guest
    can not properly enable the SSBD always on mitigation mode.
    
    This has been confirmed by running the SSBD PoC on a guest using the SSBD
    always on mitigation mode (booted with kernel parameter
    "spec_store_bypass_disable=on"), and verifying that the guest is vulnerable
    unless the host is also using SSBD always on mode. In addition, the guest
    OS incorrectly reports the SSB vulnerability as mitigated.
    
    Always set the SSBD bit in x86_spec_ctrl_mask when the host CPU supports
    it, allowing the guest to use SSBD whether or not the host has chosen to
    enable the mitigation in any of its modes.
    
    Fixes: be6fcb5478e9 ("x86/bugs: Rework spec_ctrl base and mask logic")
    Signed-off-by: Alejandro Jimenez <alejandro.j.jimenez@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Liam Merwick <liam.merwick@oracle.com>
    Reviewed-by: Mark Kanda <mark.kanda@oracle.com>
    Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: bp@alien8.de
    Cc: rkrcmar@redhat.com
    Cc: kvm@vger.kernel.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1560187210-11054-1-git-send-email-alejandro.j.jimenez@oracle.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff2870b00428ba1c6652890d0754e2370b19af9b
Author: Jan Kara <jack@suse.cz>
Date:   Wed Jun 19 09:05:41 2019 +0200

    scsi: vmw_pscsi: Fix use-after-free in pvscsi_queue_lck()
    
    commit 240b4cc8fd5db138b675297d4226ec46594d9b3b upstream.
    
    Once we unlock adapter->hw_lock in pvscsi_queue_lck() nothing prevents just
    queued scsi_cmnd from completing and freeing the request. Thus cmd->cmnd[0]
    dereference can dereference already freed request leading to kernel crashes
    or other issues (which one of our customers observed). Store cmd->cmnd[0]
    in a local variable before unlocking adapter->hw_lock to fix the issue.
    
    CC: <stable@vger.kernel.org>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c4a3f55a80f9bc286bb0ba7cb6262a2cd55fa23
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Jun 28 12:07:05 2019 -0700

    mm/page_idle.c: fix oops because end_pfn is larger than max_pfn
    
    commit 7298e3b0a149c91323b3205d325e942c3b3b9ef6 upstream.
    
    Currently the calcuation of end_pfn can round up the pfn number to more
    than the actual maximum number of pfns, causing an Oops.  Fix this by
    ensuring end_pfn is never more than max_pfn.
    
    This can be easily triggered when on systems where the end_pfn gets
    rounded up to more than max_pfn using the idle-page stress-ng stress test:
    
    sudo stress-ng --idle-page 0
    
      BUG: unable to handle kernel paging request at 00000000000020d8
      #PF error: [normal kernel read fault]
      PGD 0 P4D 0
      Oops: 0000 [#1] SMP PTI
      CPU: 1 PID: 11039 Comm: stress-ng-idle- Not tainted 5.0.0-5-generic #6-Ubuntu
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014
      RIP: 0010:page_idle_get_page+0xc8/0x1a0
      Code: 0f b1 0a 75 7d 48 8b 03 48 89 c2 48 c1 e8 33 83 e0 07 48 c1 ea 36 48 8d 0c 40 4c 8d 24 88 49 c1 e4 07 4c 03 24 d5 00 89 c3 be <49> 8b 44 24 58 48 8d b8 80 a1 02 00 e8 07 d5 77 00 48 8b 53 08 48
      RSP: 0018:ffffafd7c672fde8 EFLAGS: 00010202
      RAX: 0000000000000005 RBX: ffffe36341fff700 RCX: 000000000000000f
      RDX: 0000000000000284 RSI: 0000000000000275 RDI: 0000000001fff700
      RBP: ffffafd7c672fe00 R08: ffffa0bc34056410 R09: 0000000000000276
      R10: ffffa0bc754e9b40 R11: ffffa0bc330f6400 R12: 0000000000002080
      R13: ffffe36341fff700 R14: 0000000000080000 R15: ffffa0bc330f6400
      FS: 00007f0ec1ea5740(0000) GS:ffffa0bc7db00000(0000) knlGS:0000000000000000
      CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00000000000020d8 CR3: 0000000077d68000 CR4: 00000000000006e0
      Call Trace:
        page_idle_bitmap_write+0x8c/0x140
        sysfs_kf_bin_write+0x5c/0x70
        kernfs_fop_write+0x12e/0x1b0
        __vfs_write+0x1b/0x40
        vfs_write+0xab/0x1b0
        ksys_write+0x55/0xc0
        __x64_sys_write+0x1a/0x20
        do_syscall_64+0x5a/0x110
        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Link: http://lkml.kernel.org/r/20190618124352.28307-1-colin.king@canonical.com
    Fixes: 33c3fc71c8cf ("mm: introduce idle page tracking")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42a7a2aa31dc399156307dc65988ba2fca5c8c66
Author: Jann Horn <jannh@google.com>
Date:   Fri Jun 28 12:06:46 2019 -0700

    fs/binfmt_flat.c: make load_flat_shared_library() work
    
    commit 867bfa4a5fcee66f2b25639acae718e8b28b25a5 upstream.
    
    load_flat_shared_library() is broken: It only calls load_flat_file() if
    prepare_binprm() returns zero, but prepare_binprm() returns the number of
    bytes read - so this only happens if the file is empty.
    
    Instead, call into load_flat_file() if the number of bytes read is
    non-negative. (Even if the number of bytes is zero - in that case,
    load_flat_file() will see nullbytes and return a nice -ENOEXEC.)
    
    In addition, remove the code related to bprm creds and stop using
    prepare_binprm() - this code is loading a library, not a main executable,
    and it only actually uses the members "buf", "file" and "filename" of the
    linux_binprm struct. Instead, call kernel_read() directly.
    
    Link: http://lkml.kernel.org/r/20190524201817.16509-1-jannh@google.com
    Fixes: 287980e49ffc ("remove lots of IS_ERR_VALUE abuses")
    Signed-off-by: Jann Horn <jannh@google.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Nicolas Pitre <nicolas.pitre@linaro.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Greg Ungerer <gerg@linux-m68k.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 730855b0f48866eddafe7db720fe0b1a90a099d4
Author: John Ogness <john.ogness@linutronix.de>
Date:   Fri Jun 28 12:06:40 2019 -0700

    fs/proc/array.c: allow reporting eip/esp for all coredumping threads
    
    commit cb8f381f1613cafe3aec30809991cd56e7135d92 upstream.
    
    0a1eb2d474ed ("fs/proc: Stop reporting eip and esp in /proc/PID/stat")
    stopped reporting eip/esp and fd7d56270b52 ("fs/proc: Report eip/esp in
    /prod/PID/stat for coredumping") reintroduced the feature to fix a
    regression with userspace core dump handlers (such as minicoredumper).
    
    Because PF_DUMPCORE is only set for the primary thread, this didn't fix
    the original problem for secondary threads.  Allow reporting the eip/esp
    for all threads by checking for PF_EXITING as well.  This is set for all
    the other threads when they are killed.  coredump_wait() waits for all the
    tasks to become inactive before proceeding to invoke a core dumper.
    
    Link: http://lkml.kernel.org/r/87y32p7i7a.fsf@linutronix.de
    Link: http://lkml.kernel.org/r/20190522161614.628-1-jlu@pengutronix.de
    Fixes: fd7d56270b526ca3 ("fs/proc: Report eip/esp in /prod/PID/stat for coredumping")
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reported-by: Jan Luebbe <jlu@pengutronix.de>
    Tested-by: Jan Luebbe <jlu@pengutronix.de>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7d813033680c81276f21d3adf8ad898fbc9accc
Author: Adeodato Simó <dato@net.com.org.es>
Date:   Tue Nov 13 03:28:53 2018 -0300

    net/9p: include trans_common.h to fix missing prototype warning.
    
    [ Upstream commit 52ad259eaac0454c1ac7123e7148cf8d6e6f5301 ]
    
    This silences -Wmissing-prototypes when defining p9_release_pages.
    
    Link: http://lkml.kernel.org/r/b1c4df8f21689b10d451c28fe38e860722d20e71.1542089696.git.dato@net.com.org.es
    Signed-off-by: Adeodato Simó <dato@net.com.org.es>
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99af179af9cfb7695e285e2298a3aed1e40dd6b3
Author: Dominique Martinet <dominique.martinet@cea.fr>
Date:   Sat Sep 8 00:36:08 2018 +0900

    9p: p9dirent_read: check network-provided name length
    
    [ Upstream commit ef5305f1f72eb1cfcda25c382bb0368509c0385b ]
    
    strcpy to dirent->d_name could overflow the buffer, use strscpy to check
    the provided string length and error out if the size was too big.
    
    While we are here, make the function return an error when the pdu
    parsing failed, instead of returning the pdu offset as if it had been a
    success...
    
    Link: http://lkml.kernel.org/r/1536339057-21974-4-git-send-email-asmadeus@codewreck.org
    Addresses-Coverity-ID: 139133 ("Copy into fixed size buffer")
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c01ddaa54d7411e964ffd250c018d8469c5852f2
Author: Dominique Martinet <dominique.martinet@cea.fr>
Date:   Sat Sep 8 00:26:50 2018 +0900

    9p/rdma: remove useless check in cm_event_handler
    
    [ Upstream commit 473c7dd1d7b59ff8f88a5154737e3eac78a96e5b ]
    
    the client c is always dereferenced to get the rdma struct, so c has to
    be a valid pointer at this point.
    Gcc would optimize that away but let's make coverity happy...
    
    Link: http://lkml.kernel.org/r/1536339057-21974-3-git-send-email-asmadeus@codewreck.org
    Addresses-Coverity-ID: 102778 ("Dereference before null check")
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f779172e370794291ea800f60ec2af391fbf2fa7
Author: Dominique Martinet <dominique.martinet@cea.fr>
Date:   Sat Sep 8 00:10:57 2018 +0900

    9p: acl: fix uninitialized iattr access
    
    [ Upstream commit e02a53d92e197706cad1627bd84705d4aa20a145 ]
    
    iattr is passed to v9fs_vfs_setattr_dotl which does send various
    values from iattr over the wire, even if it tells the server to
    only look at iattr.ia_valid fields this could leak some stack data.
    
    Link: http://lkml.kernel.org/r/1536339057-21974-2-git-send-email-asmadeus@codewreck.org
    Addresses-Coverity-ID: 1195601 ("Uninitalized scalar variable")
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad93d62b121014eb9760ac2efe6f11f287c152ba
Author: Dominique Martinet <dominique.martinet@cea.fr>
Date:   Thu Aug 30 19:29:36 2018 +0900

    9p/rdma: do not disconnect on down_interruptible EAGAIN
    
    [ Upstream commit 8b894adb2b7e1d1e64b8954569c761eaf3d51ab5 ]
    
    9p/rdma would sometimes drop the connection and display errors in
    recv_done when the user does ^C.
    The errors were caused by recv buffers that were posted at the time
    of disconnect, and we just do not want to disconnect when
    down_interruptible is... interrupted.
    
    Link: http://lkml.kernel.org/r/1535625307-18019-1-git-send-email-asmadeus@codewreck.org
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16977a9b7a29a5ac9ae612688d8ad1ccdd159ca9
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Dec 6 11:09:46 2018 -0300

    perf header: Fix unchecked usage of strncpy()
    
    commit 5192bde7d98c99f2cd80225649e3c2e7493722f7 upstream.
    
    The strncpy() function may leave the destination string buffer
    unterminated, better use strlcpy() that we have a __weak fallback
    implementation for systems without it.
    
    This fixes this warning on an Alpine Linux Edge system with gcc 8.2:
    
      util/header.c: In function 'perf_event__synthesize_event_update_name':
      util/header.c:3625:2: error: 'strncpy' output truncated before terminating nul copying as many bytes from a string as its length [-Werror=stringop-truncation]
        strncpy(ev->data, evsel->name, len);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      util/header.c:3618:15: note: length computed here
        size_t len = strlen(evsel->name);
                     ^~~~~~~~~~~~~~~~~~~
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Fixes: a6e5281780d1 ("perf tools: Add event_update event unit type")
    Link: https://lkml.kernel.org/n/tip-wycz66iy8dl2z3yifgqf894p@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07d6f72eef68741e02b1a12d9207ed2a5e92e66f
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Dec 6 11:20:21 2018 -0300

    perf help: Remove needless use of strncpy()
    
    commit b6313899f4ed2e76b8375cf8069556f5b94fbff0 upstream.
    
    Since we make sure the destination buffer has at least strlen(orig) + 1,
    no need to do a strncpy(dest, orig, strlen(orig)), just use strcpy(dest,
    orig).
    
    This silences this gcc 8.2 warning on Alpine Linux:
    
      In function 'add_man_viewer',
          inlined from 'perf_help_config' at builtin-help.c:284:3:
      builtin-help.c:192:2: error: 'strncpy' output truncated before terminating nul copying as many bytes from a string as its length [-Werror=stringop-truncation]
        strncpy((*p)->name, name, len);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      builtin-help.c: In function 'perf_help_config':
      builtin-help.c:187:15: note: length computed here
        size_t len = strlen(name);
                     ^~~~~~~~~~~~
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Fixes: 078006012401 ("perf_counter tools: add in basic glue from Git")
    Link: https://lkml.kernel.org/n/tip-2f69l7drca427ob4km8i7kvo@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 948475f743edfd0979c7c240028d8fac6639cb36
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Dec 6 11:41:03 2018 -0300

    perf ui helpline: Use strlcpy() as a shorter form of strncpy() + explicit set nul
    
    commit 4d0f16d059ddb91424480d88473f7392f24aebdc upstream.
    
    The strncpy() function may leave the destination string buffer
    unterminated, better use strlcpy() that we have a __weak fallback
    implementation for systems without it.
    
    In this case we are actually setting the null byte at the right place,
    but since we pass the buffer size as the limit to strncpy() and not
    it minus one, gcc ends up warning us about that, see below. So, lets
    just switch to the shorter form provided by strlcpy().
    
    This fixes this warning on an Alpine Linux Edge system with gcc 8.2:
    
      ui/tui/helpline.c: In function 'tui_helpline__push':
      ui/tui/helpline.c:27:2: error: 'strncpy' specified bound 512 equals destination size [-Werror=stringop-truncation]
        strncpy(ui_helpline__current, msg, sz)[sz - 1] = '\0';
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      cc1: all warnings being treated as errors
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Fixes: e6e904687949 ("perf ui: Introduce struct ui_helpline")
    Link: https://lkml.kernel.org/n/tip-d1wz0hjjsh19xbalw69qpytj@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e20ec7865223c41864726c082356f8faa83eff00
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Mon Jun 24 11:56:02 2019 -0400

    IB/hfi1: Avoid hardlockup with flushlist_lock
    
    commit cf131a81967583ae737df6383a0893b9fee75b4e upstream.
    
    Heavy contention of the sde flushlist_lock can cause hard lockups at
    extreme scale when the flushing logic is under stress.
    
    Mitigate by replacing the item at a time copy to the local list with
    an O(1) list_splice_init() and using the high priority work queue to
    do the flushes.
    
    Ported to linux-4.9.y.
    
    Fixes: 7724105686e7 ("IB/hfi1: add driver files")
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1707c59edc663bad58d20be48f741e316b5ccad
Author: Jouni Malinen <j@w1.fi>
Date:   Tue May 28 01:46:43 2019 +0300

    mac80211: Do not use stack memory with scatterlist for GMAC
    
    commit a71fd9dac23613d96ba3c05619a8ef4fd6cdf9b9 upstream.
    
    ieee80211_aes_gmac() uses the mic argument directly in sg_set_buf() and
    that does not allow use of stack memory (e.g., BUG_ON() is hit in
    sg_set_buf() with CONFIG_DEBUG_SG). BIP GMAC TX side is fine for this
    since it can use the skb data buffer, but the RX side was using a stack
    variable for deriving the local MIC value to compare against the
    received one.
    
    Fix this by allocating heap memory for the mic buffer.
    
    This was found with hwsim test case ap_cipher_bip_gmac_128 hitting that
    BUG_ON() and kernel panic.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Jouni Malinen <j@w1.fi>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f0f5ff93ed0205a90f11103e9937f3c0417cd4b
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Feb 13 15:13:30 2019 +0100

    mac80211: drop robust management frames from unknown TA
    
    commit 588f7d39b3592a36fb7702ae3b8bdd9be4621e2f upstream.
    
    When receiving a robust management frame, drop it if we don't have
    rx->sta since then we don't have a security association and thus
    couldn't possibly validate the frame.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4f18614c1a6b7bab3d25a1fe316a38c3787a386
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Jun 10 13:02:19 2019 -0700

    cfg80211: fix memory leak of wiphy device name
    
    commit 4f488fbca2a86cc7714a128952eead92cac279ab upstream.
    
    In wiphy_new_nm(), if an error occurs after dev_set_name() and
    device_initialize() have already been called, it's necessary to call
    put_device() (via wiphy_free()) to avoid a memory leak.
    
    Reported-by: syzbot+7fddca22578bc67c3fe4@syzkaller.appspotmail.com
    Fixes: 1f87f7d3a3b4 ("cfg80211: add rfkill support")
    Cc: stable@vger.kernel.org
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68d1e285e934c50df37d807a8e7ae29397c055bc
Author: Marcel Holtmann <marcel@holtmann.org>
Date:   Sat Jun 22 15:47:01 2019 +0200

    Bluetooth: Fix regression with minimum encryption key size alignment
    
    commit 693cd8ce3f882524a5d06f7800dd8492411877b3 upstream.
    
    When trying to align the minimum encryption key size requirement for
    Bluetooth connections, it turns out doing this in a central location in
    the HCI connection handling code is not possible.
    
    Original Bluetooth version up to 2.0 used a security model where the
    L2CAP service would enforce authentication and encryption.  Starting
    with Bluetooth 2.1 and Secure Simple Pairing that model has changed into
    that the connection initiator is responsible for providing an encrypted
    ACL link before any L2CAP communication can happen.
    
    Now connecting Bluetooth 2.1 or later devices with Bluetooth 2.0 and
    before devices are causing a regression.  The encryption key size check
    needs to be moved out of the HCI connection handling into the L2CAP
    channel setup.
    
    To achieve this, the current check inside hci_conn_security() has been
    moved into l2cap_check_enc_key_size() helper function and then called
    from four decisions point inside L2CAP to cover all combinations of
    Secure Simple Pairing enabled devices and device using legacy pairing
    and legacy service security model.
    
    Fixes: d5bb334a8e17 ("Bluetooth: Align minimum encryption key size for LE and BR/EDR connections")
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=203643
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6290d9d3192e7a973d59fd22fb72028a34dab372
Author: Marcel Holtmann <marcel@holtmann.org>
Date:   Wed Apr 24 22:19:17 2019 +0200

    Bluetooth: Align minimum encryption key size for LE and BR/EDR connections
    
    commit d5bb334a8e171b262e48f378bd2096c0ea458265 upstream.
    
    The minimum encryption key size for LE connections is 56 bits and to
    align LE with BR/EDR, enforce 56 bits of minimum encryption key size for
    BR/EDR connections as well.
    
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00d409d807df76d3cfc7112892add6adf2cd5e69
Author: Fabio Estevam <festevam@gmail.com>
Date:   Mon May 13 00:15:31 2019 -0300

    ARM: imx: cpuidle-imx6sx: Restrict the SW2ISO increase to i.MX6SX
    
    commit b25af2ff7c07bd19af74e3f64ff82e2880d13d81 upstream.
    
    Since commit 1e434b703248 ("ARM: imx: update the cpu power up timing
    setting on i.mx6sx") some characters loss is noticed on i.MX6ULL UART
    as reported by Christoph Niedermaier.
    
    The intention of such commit was to increase the SW2ISO field for i.MX6SX
    only, but since cpuidle-imx6sx is also used on i.MX6UL/i.MX6ULL this caused
    unintended side effects on other SoCs.
    
    Fix this problem by keeping the original SW2ISO value for i.MX6UL/i.MX6ULL
    and only increase SW2ISO in the i.MX6SX case.
    
    Cc: stable@vger.kernel.org
    Fixes: 1e434b703248 ("ARM: imx: update the cpu power up timing setting on i.mx6sx")
    Reported-by: Christoph Niedermaier <cniedermaier@dh-electronics.com>
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Tested-by: Sébastien Szymanski <sebastien.szymanski@armadeus.com>
    Tested-by: Christoph Niedermaier <cniedermaier@dh-electronics.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e90a7ecde5f361a7044e169fe6000036ceb69794
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Jun 13 00:21:40 2019 +0530

    powerpc/bpf: use unsigned division instruction for 64-bit operations
    
    commit 758f2046ea040773ae8ea7f72dd3bbd8fa984501 upstream.
    
    BPF_ALU64 div/mod operations are currently using signed division, unlike
    BPF_ALU32 operations. Fix the same. DIV64 and MOD64 overflow tests pass
    with this fix.
    
    Fixes: 156d0e290e969c ("powerpc/ebpf/jit: Implement JIT compiler for extended BPF")
    Cc: stable@vger.kernel.org # v4.8+
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a97e26569b454c4243eb225d61d08751fe39c024
Author: Willem de Bruijn <willemb@google.com>
Date:   Fri Jun 7 16:46:07 2019 -0400

    can: purge socket error queue on sock destruct
    
    commit fd704bd5ee749d560e86c4f1fd2ef486d8abf7cf upstream.
    
    CAN supports software tx timestamps as of the below commit. Purge
    any queued timestamp packets on socket destroy.
    
    Fixes: 51f31cabe3ce ("ip: support for TX timestamps on UDP and RAW sockets")
    Reported-by: syzbot+a90604060cb40f5bdd16@syzkaller.appspotmail.com
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50b1c5b57e4bafdea996e45e814cb11f13aacbec
Author: Joakim Zhang <qiangqing.zhang@nxp.com>
Date:   Thu Jan 31 09:37:22 2019 +0000

    can: flexcan: fix timeout when set small bitrate
    
    commit 247e5356a709eb49a0d95ff2a7f07dac05c8252c upstream.
    
    Current we can meet timeout issue when setting a small bitrate like
    10000 as follows on i.MX6UL EVK board (ipg clock = 66MHZ, per clock =
    30MHZ):
    
    | root@imx6ul7d:~# ip link set can0 up type can bitrate 10000
    
    A link change request failed with some changes committed already.
    Interface can0 may have been left with an inconsistent configuration,
    please check.
    
    | RTNETLINK answers: Connection timed out
    
    It is caused by calling of flexcan_chip_unfreeze() timeout.
    
    Originally the code is using usleep_range(10, 20) for unfreeze
    operation, but the patch (8badd65 can: flexcan: avoid calling
    usleep_range from interrupt context) changed it into udelay(10) which is
    only a half delay of before, there're also some other delay changes.
    
    After double to FLEXCAN_TIMEOUT_US to 100 can fix the issue.
    
    Meanwhile, Rasmus Villemoes reported that even with a timeout of 100,
    flexcan_probe() fails on the MPC8309, which requires a value of at least
    140 to work reliably. 250 works for everyone.
    
    Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
    Reviewed-by: Dong Aisheng <aisheng.dong@nxp.com>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce8c4760635cc089e62c3ec163ec8aac50642f89
Author: Naohiro Aota <naohiro.aota@wdc.com>
Date:   Thu Jun 6 16:54:44 2019 +0900

    btrfs: start readahead also in seed devices
    
    commit c4e0540d0ad49c8ceab06cceed1de27c4fe29f6e upstream.
    
    Currently, btrfs does not consult seed devices to start readahead. As a
    result, if readahead zone is added to the seed devices, btrfs_reada_wait()
    indefinitely wait for the reada_ctl to finish.
    
    You can reproduce the hung by modifying btrfs/163 to have larger initial
    file size (e.g. xfs_io pwrite 4M instead of current 256K).
    
    Fixes: 7414a03fbf9e ("btrfs: initial readahead code and prototypes")
    Cc: stable@vger.kernel.org # 3.2+: ce7791ffee1e: Btrfs: fix race between readahead and device replace/removal
    Cc: stable@vger.kernel.org # 3.2+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Naohiro Aota <naohiro.aota@wdc.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e6a89a37a671a8dbaac9f8012a59e44e879e292
Author: Jaesoo Lee <jalee@purestorage.com>
Date:   Mon Jun 3 16:42:28 2019 -0700

    nvme: Fix u32 overflow in the number of namespace list calculation
    
    [ Upstream commit c8e8c77b3bdbade6e26e8e76595f141ede12b692 ]
    
    The Number of Namespaces (nn) field in the identify controller data structure is
    defined as u32 and the maximum allowed value in NVMe specification is
    0xFFFFFFFEUL. This change fixes the possible overflow of the DIV_ROUND_UP()
    operation used in nvme_scan_ns_list() by casting the nn to u64.
    
    Signed-off-by: Jaesoo Lee <jalee@purestorage.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1e5aff7f05243a3e468d3365a1af5618bd80fd2
Author: Robert Hancock <hancock@sedsystems.ca>
Date:   Wed Jun 5 13:49:00 2019 -0600

    hwmon: (pmbus/core) Treat parameters as paged if on multiple pages
    
    [ Upstream commit 4a60570dce658e3f8885bbcf852430b99f65aca5 ]
    
    Some chips have attributes which exist on more than one page but the
    attribute is not presently marked as paged. This causes the attributes
    to be generated with the same label, which makes it impossible for
    userspace to tell them apart.
    
    Marking all such attributes as paged would result in the page suffix
    being added regardless of whether they were present on more than one
    page or not, which might break existing setups. Therefore, we add a
    second check which treats the attribute as paged, even if not marked as
    such, if it is present on multiple pages.
    
    Fixes: b4ce237b7f7d ("hwmon: (pmbus) Introduce infrastructure to detect sensors and limit registers")
    Signed-off-by: Robert Hancock <hancock@sedsystems.ca>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4b29e588b70631fa93e3e2cce1c110322bd77d4
Author: Alexandra Winter <wintera@linux.ibm.com>
Date:   Wed Jun 5 13:48:50 2019 +0200

    s390/qeth: fix VLAN attribute in bridge_hostnotify udev event
    
    [ Upstream commit 335726195e460cb6b3f795b695bfd31f0ea70ef0 ]
    
    Enabling sysfs attribute bridge_hostnotify triggers a series of udev events
    for the MAC addresses of all currently connected peers. In case no VLAN is
    set for a peer, the device reports the corresponding MAC addresses with
    VLAN ID 4096. This currently results in attribute VLAN=4096 for all
    non-VLAN interfaces in the initial series of events after host-notify is
    enabled.
    
    Instead, no VLAN attribute should be reported in the udev event for
    non-VLAN interfaces.
    
    Only the initial events face this issue. For dynamic changes that are
    reported later, the device uses a validity flag.
    
    This also changes the code so that it now sets the VLAN attribute for
    MAC addresses with VID 0. On Linux, no qeth interface will ever be
    registered with VID 0: Linux kernel registers VID 0 on all network
    interfaces initially, but qeth will drop .ndo_vlan_rx_add_vid for VID 0.
    Peers with other OSs could register MACs with VID 0.
    
    Fixes: 9f48b9db9a22 ("qeth: bridgeport support - address notifications")
    Signed-off-by: Alexandra Winter <wintera@linux.ibm.com>
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48c44d371983517e8892e01f9e9aef483790366f
Author: Avri Altman <avri.altman@wdc.com>
Date:   Tue May 21 11:24:22 2019 +0300

    scsi: ufs: Check that space was properly alloced in copy_query_response
    
    [ Upstream commit 1c90836f70f9a8ef7b7ad9e1fdd8961903e6ced6 ]
    
    struct ufs_dev_cmd is the main container that supports device management
    commands. In the case of a read descriptor request, we assume that the
    proper space was allocated in dev_cmd to hold the returning descriptor.
    
    This is no longer true, as there are flows that doesn't use dev_cmd for
    device management requests, and was wrong in the first place.
    
    Fixes: d44a5f98bb49 (ufs: query descriptor API)
    Signed-off-by: Avri Altman <avri.altman@wdc.com>
    Reviewed-by: Alim Akhtar <alim.akhtar@samsung.com>
    Acked-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c200537f81a02ca2a74929442d8d304b85619c37
Author: George G. Davis <george_davis@mentor.com>
Date:   Mon Jun 3 10:30:39 2019 -0400

    scripts/checkstack.pl: Fix arm64 wrong or unknown architecture
    
    [ Upstream commit 4f45d62a52297b10ded963412a158685647ecdec ]
    
    The following error occurs for the `make ARCH=arm64 checkstack` case:
    
    aarch64-linux-gnu-objdump -d vmlinux $(find . -name '*.ko') | \
    perl ./scripts/checkstack.pl arm64
    wrong or unknown architecture "arm64"
    
    As suggested by Masahiro Yamada, fix the above error using regular
    expressions in the same way it was fixed for the `ARCH=x86` case via
    commit fda9f9903be6 ("scripts/checkstack.pl: automatically handle
    32-bit and 64-bit mode for ARCH=x86").
    
    Suggested-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: George G. Davis <george_davis@mentor.com>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 336ebd79e9a73653f11a500d0eaaf1018ad68576
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Fri May 17 17:37:22 2019 +0100

    drm/arm/hdlcd: Allow a bit of clock tolerance
    
    [ Upstream commit 1c810739097fdeb31b393b67a0a1e3d7ffdd9f63 ]
    
    On the Arm Juno platform, the HDLCD pixel clock is constrained to 250KHz
    resolution in order to avoid the tiny System Control Processor spending
    aeons trying to calculate exact PLL coefficients. This means that modes
    like my oddball 1600x1200 with 130.89MHz clock get rejected since the
    rate cannot be matched exactly. In practice, though, this mode works
    quite happily with the clock at 131MHz, so let's relax the check to
    allow a little bit of slop.
    
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Liviu Dudau <liviu.dudau@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 631a183d5e72ddfbe4078a819e1566e5248e9ea1
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Sat Jun 1 08:16:27 2019 +0800

    net: ethernet: mediatek: Use NET_IP_ALIGN to judge if HW RX_2BYTE_OFFSET is enabled
    
    [ Upstream commit 880c2d4b2fdfd580ebcd6bb7240a8027a1d34751 ]
    
    Should only enable HW RX_2BYTE_OFFSET function in the case NET_IP_ALIGN
    equals to 2.
    
    Signed-off-by: Mark Lee <mark-mc.lee@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 486e866e0acf77b94191a3480b2c6ed8439df15d
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Sat Jun 1 08:16:26 2019 +0800

    net: ethernet: mediatek: Use hw_feature to judge if HWLRO is supported
    
    [ Upstream commit 9e4f56f1a7f3287718d0083b5cb85298dc05a5fd ]
    
    Should hw_feature as hardware capability flags to check if hardware LRO
    got support.
    
    Signed-off-by: Mark Lee <mark-mc.lee@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 198cecace1b713d13914f6bc05d29915e7ffc255
Author: Young Xiao <92siuyang@gmail.com>
Date:   Wed May 29 10:21:48 2019 +0800

    sparc: perf: fix updated event period in response to PERF_EVENT_IOC_PERIOD
    
    [ Upstream commit 56cd0aefa475079e9613085b14a0f05037518fed ]
    
    The PERF_EVENT_IOC_PERIOD ioctl command can be used to change the
    sample period of a running perf_event. Consequently, when calculating
    the next event period, the new period will only be considered after the
    previous one has overflowed.
    
    This patch changes the calculation of the remaining event ticks so that
    they are offset if the period has changed.
    
    See commit 3581fe0ef37c ("ARM: 7556/1: perf: fix updated event period in
    response to PERF_EVENT_IOC_PERIOD") for details.
    
    Signed-off-by: Young Xiao <92siuyang@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 439ab882535b9ea0414c50befc525403921aabe2
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Fri May 31 16:59:50 2019 +0800

    net: hns: Fix loopback test failed at copper ports
    
    [ Upstream commit 2e1f164861e500f4e068a9d909bbd3fcc7841483 ]
    
    When doing a loopback test at copper ports, the serdes loopback
    and the phy loopback will fail, because of the adjust link had
    not finished, and phy not ready.
    
    Adds sleep between adjust link and test process to fix it.
    
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7515188594464e0d397018fe6a89f0eb791060e7
Author: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
Date:   Fri May 31 10:35:14 2019 +0300

    net: dsa: mv88e6xxx: avoid error message on remove from VLAN 0
    
    [ Upstream commit 62394708f3e01c9f2be6be74eb6305bae1ed924f ]
    
    When non-bridged, non-vlan'ed mv88e6xxx port is moving down, error
    message is logged:
    
    failed to kill vid 0081/0 for device eth_cu_1000_4
    
    This is caused by call from __vlan_vid_del() with vin set to zero, over
    call chain this results into _mv88e6xxx_port_vlan_del() called with
    vid=0, and mv88e6xxx_vtu_get() called from there returns -EINVAL.
    
    On symmetric path moving port up, call goes through
    mv88e6xxx_port_vlan_prepare() that calls mv88e6xxx_port_check_hw_vlan()
    that returns -EOPNOTSUPP for zero vid.
    
    This patch changes mv88e6xxx_vtu_get() to also return -EOPNOTSUPP for
    zero vid, then this error code is explicitly cleared in
    dsa_slave_vlan_rx_kill_vid() and error message is no longer logged.
    
    Signed-off-by: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
    Reviewed-by: Vivien Didelot <vivien.didelot@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eac97a7562d7ef5af7b1934d1b13985e643dd0dd
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Sat May 25 20:20:24 2019 +0800

    MIPS: uprobes: remove set but not used variable 'epc'
    
    [ Upstream commit f532beeeff0c0a3586cc15538bc52d249eb19e7c ]
    
    Fixes gcc '-Wunused-but-set-variable' warning:
    
    arch/mips/kernel/uprobes.c: In function 'arch_uprobe_pre_xol':
    arch/mips/kernel/uprobes.c:115:17: warning: variable 'epc' set but not used [-Wunused-but-set-variable]
    
    It's never used since introduction in
    commit 40e084a506eb ("MIPS: Add uprobes support.")
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: <ralf@linux-mips.org>
    Cc: <jhogan@kernel.org>
    Cc: <linux-kernel@vger.kernel.org>
    Cc: <linux-mips@vger.kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb8d1928f53d0e01fac05ac8688dfaecea072fbb
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Fri May 24 11:44:51 2019 -0400

    IB/{qib, hfi1, rdmavt}: Correct ibv_devinfo max_mr value
    
    [ Upstream commit 35164f5259a47ea756fa1deb3e463ac2a4f10dc9 ]
    
    The command 'ibv_devinfo -v' reports 0 for max_mr.
    
    Fix by assigning the query values after the mr lkey_table has been built
    rather than early on in the driver.
    
    Fixes: 7b1e2099adc8 ("IB/rdmavt: Move memory registration into rdmavt")
    Reviewed-by: Josh Collier <josh.d.collier@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e741be94ebc813de70256956f2a506432b04584f
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Fri May 24 11:44:45 2019 -0400

    IB/hfi1: Insure freeze_work work_struct is canceled on shutdown
    
    [ Upstream commit 6d517353c70bb0818b691ca003afdcb5ee5ea44e ]
    
    By code inspection, the freeze_work is never canceled.
    
    Fix by adding a cancel_work_sync in the shutdown path to insure it is no
    longer running.
    
    Fixes: 7724105686e7 ("IB/hfi1: add driver files")
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca45c2cd6b4f379b181f8ad52766b0d4b1a9c818
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Fri May 24 11:44:38 2019 -0400

    IB/rdmavt: Fix alloc_qpn() WARN_ON()
    
    [ Upstream commit 2abae62a26a265129b364d8c1ef3be55e2c01309 ]
    
    The qpn allocation logic has a WARN_ON() that intends to detect the use of
    an index that will introduce bits in the lower order bits of the QOS bits
    in the QPN.
    
    Unfortunately, it has the following bugs:
    - it misfires when wrapping QPN allocation for non-QOS
    - it doesn't correctly detect low order QOS bits (despite the comment)
    
    The WARN_ON() should not be applied to non-QOS (qos_shift == 1).
    
    Additionally, it SHOULD test the qpn bits per the table below:
    
    2 data VLs:   [qp7, qp6, qp5, qp4, qp3, qp2, qp1] ^
                  [  0,   0,   0,   0,   0,   0, sc0],  qp bit 1 always 0*
    3-4 data VLs: [qp7, qp6, qp5, qp4, qp3, qp2, qp1] ^
                  [  0,   0,   0,   0,   0, sc1, sc0], qp bits [21] always 0
    5-8 data VLs: [qp7, qp6, qp5, qp4, qp3, qp2, qp1] ^
                  [  0,   0,   0,   0, sc2, sc1, sc0] qp bits [321] always 0
    
    Fix by qualifying the warning for qos_shift > 1 and producing the correct
    mask to insure the above bits are zero without generating a superfluous
    warning.
    
    Fixes: 501edc42446e ("IB/rdmavt: Correct warning during QPN allocation")
    Reviewed-by: Kaike Wan <kaike.wan@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32ecc73783091f7e1268b776a7ded7431052b435
Author: Helge Deller <deller@gmx.de>
Date:   Fri May 24 23:16:25 2019 +0200

    parisc: Fix compiler warnings in float emulation code
    
    [ Upstream commit 6b98d9134e14f5ef4bcf64b27eedf484ed19a1ec ]
    
    Avoid such compiler warnings:
    arch/parisc/math-emu/cnv_float.h:71:27: warning: ‘<<’ in boolean context, did you mean ‘<’ ? [-Wint-in-bool-context]
         ((Dintp1(dint_valueA) << 33 - SGL_EXP_LENGTH) || Dintp2(dint_valueB))
    arch/parisc/math-emu/fcnvxf.c:257:6: note: in expansion of macro ‘Dint_isinexact_to_sgl’
      if (Dint_isinexact_to_sgl(srcp1,srcp2)) {
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9b7621d7af4c8feffcc047f386d7be87372a2ef
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue May 14 23:24:37 2019 +0800

    parport: Fix mem leak in parport_register_dev_model
    
    [ Upstream commit 1c7ebeabc9e5ee12e42075a597de40fdb9059530 ]
    
    BUG: memory leak
    unreferenced object 0xffff8881df48cda0 (size 16):
      comm "syz-executor.0", pid 5077, jiffies 4295994670 (age 22.280s)
      hex dump (first 16 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<00000000d2d0d5fe>] parport_register_dev_model+0x141/0x6e0 [parport]
        [<00000000782f6dab>] 0xffffffffc15d1196
        [<00000000d2ca6ae4>] platform_drv_probe+0x7e/0x100
        [<00000000628c2a94>] really_probe+0x342/0x4d0
        [<000000006874f5da>] driver_probe_device+0x8c/0x170
        [<00000000424de37a>] __device_attach_driver+0xda/0x100
        [<000000002acab09a>] bus_for_each_drv+0xfe/0x170
        [<000000003d9e5f31>] __device_attach+0x190/0x230
        [<0000000035d32f80>] bus_probe_device+0x123/0x140
        [<00000000a05ba627>] device_add+0x7cc/0xce0
        [<000000003f7560bf>] platform_device_add+0x230/0x3c0
        [<000000002a0be07d>] 0xffffffffc15d0949
        [<000000007361d8d2>] port_check+0x3b/0x50 [parport]
        [<000000004d67200f>] bus_for_each_dev+0x115/0x180
        [<000000003ccfd11c>] __parport_register_driver+0x1f0/0x210 [parport]
        [<00000000987f06fc>] 0xffffffffc15d803e
    
    After commit 4e5a74f1db8d ("parport: Revert "parport: fix
    memory leak""), free_pardevice do not free par_dev->state,
    we should free it in error path of parport_register_dev_model
    before return.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: 4e5a74f1db8d ("parport: Revert "parport: fix memory leak"")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 046a3793f80239e595c0245be4ff17001afc7001
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Tue May 7 10:45:24 2019 -0700

    ARC: fix build warnings with !CONFIG_KPROBES
    
    [ Upstream commit 4c6fabda1ad1dec6d274c098ef0a91809c74f2e3 ]
    
    |   CC      lib/nmi_backtrace.o
    | In file included from ../include/linux/kprobes.h:43:0,
    |                  from ../lib/nmi_backtrace.c:17:
    | ../arch/arc/include/asm/kprobes.h:57:13: warning: 'trap_is_kprobe' defined but not used [-Wunused-function]
    |  static void trap_is_kprobe(unsigned long address, struct pt_regs *regs)
    |              ^~~~~~~~~~~~~~
    
    The warning started with 7d134b2ce6 ("kprobes: move kprobe declarations
    to asm-generic/kprobes.h") which started including <asm/kprobes.h>
    unconditionally into <linux/kprobes.h> exposing a stub function for
    !CONFIG_KPROBES to rest of world. Fix that by making the stub a macro
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a60589dc0ced39f2a511b226bee3a562591beda
Author: Jann Horn <jannh@google.com>
Date:   Tue May 28 17:32:26 2019 +0200

    apparmor: enforce nullbyte at end of tag string
    
    commit 8404d7a674c49278607d19726e0acc0cae299357 upstream.
    
    A packed AppArmor policy contains null-terminated tag strings that are read
    by unpack_nameX(). However, unpack_nameX() uses string functions on them
    without ensuring that they are actually null-terminated, potentially
    leading to out-of-bounds accesses.
    
    Make sure that the tag string is null-terminated before passing it to
    strcmp().
    
    Cc: stable@vger.kernel.org
    Fixes: 736ec752d95e ("AppArmor: policy routines for loading and unpacking policy")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b034f18a4a3e1324a9fa29e1d791d624f196fb4
Author: Andrey Smirnov <andrew.smirnov@gmail.com>
Date:   Thu May 23 12:55:26 2019 -0700

    Input: uinput - add compat ioctl number translation for UI_*_FF_UPLOAD
    
    commit 7c7da40da1640ce6814dab1e8031b44e19e5a3f6 upstream.
    
    In the case of compat syscall ioctl numbers for UI_BEGIN_FF_UPLOAD and
    UI_END_FF_UPLOAD need to be adjusted before being passed on
    uinput_ioctl_handler() since code built with -m32 will be passing
    slightly different values. Extend the code already covering
    UI_SET_PHYS to cover UI_BEGIN_FF_UPLOAD and UI_END_FF_UPLOAD as well.
    
    Reported-by: Pierre-Loup A. Griffais <pgriffais@valvesoftware.com>
    Signed-off-by: Andrey Smirnov <andrew.smirnov@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88bc27bd77170876a459574a5b24b0669581fefd
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Fri Jun 14 12:32:32 2019 -0400

    IB/hfi1: Silence txreq allocation warnings
    
    commit 3230f4a8d44e4a0bb7afea814b280b5129521f52 upstream.
    
    The following warning can happen when a memory shortage
    occurs during txreq allocation:
    
    [10220.939246] SLUB: Unable to allocate memory on node -1, gfp=0xa20(GFP_ATOMIC)
    [10220.939246] Hardware name: Intel Corporation S2600WT2R/S2600WT2R, BIOS SE5C610.86B.01.01.0018.C4.072020161249 07/20/2016
    [10220.939247]   cache: mnt_cache, object size: 384, buffer size: 384, default order: 2, min order: 0
    [10220.939260] Workqueue: hfi0_0 _hfi1_do_send [hfi1]
    [10220.939261]   node 0: slabs: 1026568, objs: 43115856, free: 0
    [10220.939262] Call Trace:
    [10220.939262]   node 1: slabs: 820872, objs: 34476624, free: 0
    [10220.939263]  dump_stack+0x5a/0x73
    [10220.939265]  warn_alloc+0x103/0x190
    [10220.939267]  ? wake_all_kswapds+0x54/0x8b
    [10220.939268]  __alloc_pages_slowpath+0x86c/0xa2e
    [10220.939270]  ? __alloc_pages_nodemask+0x2fe/0x320
    [10220.939271]  __alloc_pages_nodemask+0x2fe/0x320
    [10220.939273]  new_slab+0x475/0x550
    [10220.939275]  ___slab_alloc+0x36c/0x520
    [10220.939287]  ? hfi1_make_rc_req+0x90/0x18b0 [hfi1]
    [10220.939299]  ? __get_txreq+0x54/0x160 [hfi1]
    [10220.939310]  ? hfi1_make_rc_req+0x90/0x18b0 [hfi1]
    [10220.939312]  __slab_alloc+0x40/0x61
    [10220.939323]  ? hfi1_make_rc_req+0x90/0x18b0 [hfi1]
    [10220.939325]  kmem_cache_alloc+0x181/0x1b0
    [10220.939336]  hfi1_make_rc_req+0x90/0x18b0 [hfi1]
    [10220.939348]  ? hfi1_verbs_send_dma+0x386/0xa10 [hfi1]
    [10220.939359]  ? find_prev_entry+0xb0/0xb0 [hfi1]
    [10220.939371]  hfi1_do_send+0x1d9/0x3f0 [hfi1]
    [10220.939372]  process_one_work+0x171/0x380
    [10220.939374]  worker_thread+0x49/0x3f0
    [10220.939375]  kthread+0xf8/0x130
    [10220.939377]  ? max_active_store+0x80/0x80
    [10220.939378]  ? kthread_bind+0x10/0x10
    [10220.939379]  ret_from_fork+0x35/0x40
    [10220.939381] SLUB: Unable to allocate memory on node -1, gfp=0xa20(GFP_ATOMIC)
    
    The shortage is handled properly so the message isn't needed. Silence by
    adding the no warn option to the slab allocation.
    
    Fixes: 45842abbb292 ("staging/rdma/hfi1: move txreq header code")
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74d7687f851c9642fc968e55667250dd464c56cf
Author: Peter Chen <peter.chen@nxp.com>
Date:   Mon Jun 17 09:49:07 2019 +0800

    usb: chipidea: udc: workaround for endpoint conflict issue
    
    commit c19dffc0a9511a7d7493ec21019aefd97e9a111b upstream.
    
    An endpoint conflict occurs when the USB is working in device mode
    during an isochronous communication. When the endpointA IN direction
    is an isochronous IN endpoint, and the host sends an IN token to
    endpointA on another device, then the OUT transaction may be missed
    regardless the OUT endpoint number. Generally, this occurs when the
    device is connected to the host through a hub and other devices are
    connected to the same hub.
    
    The affected OUT endpoint can be either control, bulk, isochronous, or
    an interrupt endpoint. After the OUT endpoint is primed, if an IN token
    to the same endpoint number on another device is received, then the OUT
    endpoint may be unprimed (cannot be detected by software), which causes
    this endpoint to no longer respond to the host OUT token, and thus, no
    corresponding interrupt occurs.
    
    There is no good workaround for this issue, the only thing the software
    could do is numbering isochronous IN from the highest endpoint since we
    have observed most of device number endpoint from the lowest.
    
    Cc: <stable@vger.kernel.org> #v3.14+
    Cc: Fabio Estevam <festevam@gmail.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Cc: Jun Li <jun.li@nxp.com>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6c2b0a5bb7e208123db4f7c7ac70414de32165e
Author: Stanley Chu <stanley.chu@mediatek.com>
Date:   Wed Jun 12 23:19:05 2019 +0800

    scsi: ufs: Avoid runtime suspend possibly being blocked forever
    
    commit 24e2e7a19f7e4b83d0d5189040d997bce3596473 upstream.
    
    UFS runtime suspend can be triggered after pm_runtime_enable() is invoked
    in ufshcd_pltfrm_init(). However if the first runtime suspend is triggered
    before binding ufs_hba structure to ufs device structure via
    platform_set_drvdata(), then UFS runtime suspend will be no longer
    triggered in the future because its dev->power.runtime_error was set in the
    first triggering and does not have any chance to be cleared.
    
    To be more clear, dev->power.runtime_error is set if hba is NULL in
    ufshcd_runtime_suspend() which returns -EINVAL to rpm_callback() where
    dev->power.runtime_error is set as -EINVAL. In this case, any future
    rpm_suspend() for UFS device fails because rpm_check_suspend_allowed()
    fails due to non-zero
    dev->power.runtime_error.
    
    To resolve this issue, make sure the first UFS runtime suspend get valid
    "hba" in ufshcd_runtime_suspend(): Enable UFS runtime PM only after hba is
    successfully bound to UFS device structure.
    
    Fixes: 62694735ca95 ([SCSI] ufs: Add runtime PM support for UFS host controller driver)
    Cc: stable@vger.kernel.org
    Signed-off-by: Stanley Chu <stanley.chu@mediatek.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7601d81506ef23dea9ea44015dcc45c911797a85
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 1 11:05:41 2019 -0700

    gcc-9: silence 'address-of-packed-member' warning
    
    commit 6f303d60534c46aa1a239f29c321f95c83dda748 upstream.
    
    We already did this for clang, but now gcc has that warning too.  Yes,
    yes, the address may be unaligned.  And that's kind of the point.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e41539ee26f2f16f2740ce4a18b6034234bc01c
Author: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
Date:   Thu May 23 14:45:35 2019 +0200

    tracing: Silence GCC 9 array bounds warning
    
    commit 0c97bf863efce63d6ab7971dad811601e6171d2f upstream.
    
    Starting with GCC 9, -Warray-bounds detects cases when memset is called
    starting on a member of a struct but the size to be cleared ends up
    writing over further members.
    
    Such a call happens in the trace code to clear, at once, all members
    after and including `seq` on struct trace_iterator:
    
        In function 'memset',
            inlined from 'ftrace_dump' at kernel/trace/trace.c:8914:3:
        ./include/linux/string.h:344:9: warning: '__builtin_memset' offset
        [8505, 8560] from the object at 'iter' is out of the bounds of
        referenced subobject 'seq' with type 'struct trace_seq' at offset
        4368 [-Warray-bounds]
          344 |  return __builtin_memset(p, c, size);
              |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    In order to avoid GCC complaining about it, we compute the address
    ourselves by adding the offsetof distance instead of referring
    directly to the member.
    
    Since there are two places doing this clear (trace.c and trace_kdb.c),
    take the chance to move the workaround into a single place in
    the internal header.
    
    Link: http://lkml.kernel.org/r/20190523124535.GA12931@gmail.com
    
    Signed-off-by: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
    [ Removed unnecessary parenthesis around "iter" ]
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
