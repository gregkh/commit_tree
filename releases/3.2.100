commit 1c7cb8cda914e52512582111685782dec6bcc73a
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sat Mar 3 15:51:09 2018 +0000

    Linux 3.2.100

commit cbe131eb2d7bab9b3332094ae279fed7cb170a85
Author: Håkon Bugge <Haakon.Bugge@oracle.com>
Date:   Wed Dec 6 17:18:28 2017 +0100

    rds: Fix NULL pointer dereference in __rds_rdma_map
    
    commit f3069c6d33f6ae63a1668737bc78aaaa51bff7ca upstream.
    
    This is a fix for syzkaller719569, where memory registration was
    attempted without any underlying transport being loaded.
    
    Analysis of the case reveals that it is the setsockopt() RDS_GET_MR
    (2) and RDS_GET_MR_FOR_DEST (7) that are vulnerable.
    
    Here is an example stack trace when the bug is hit:
    
    BUG: unable to handle kernel NULL pointer dereference at 00000000000000c0
    IP: __rds_rdma_map+0x36/0x440 [rds]
    PGD 2f93d03067 P4D 2f93d03067 PUD 2f93d02067 PMD 0
    Oops: 0000 [#1] SMP
    Modules linked in: bridge stp llc tun rpcsec_gss_krb5 nfsv4
    dns_resolver nfs fscache rds binfmt_misc sb_edac intel_powerclamp
    coretemp kvm_intel kvm irqbypass crct10dif_pclmul c rc32_pclmul
    ghash_clmulni_intel pcbc aesni_intel crypto_simd glue_helper cryptd
    iTCO_wdt mei_me sg iTCO_vendor_support ipmi_si mei ipmi_devintf nfsd
    shpchp pcspkr i2c_i801 ioatd ma ipmi_msghandler wmi lpc_ich mfd_core
    auth_rpcgss nfs_acl lockd grace sunrpc ip_tables ext4 mbcache jbd2
    mgag200 i2c_algo_bit drm_kms_helper ixgbe syscopyarea ahci sysfillrect
    sysimgblt libahci mdio fb_sys_fops ttm ptp libata sd_mod mlx4_core drm
    crc32c_intel pps_core megaraid_sas i2c_core dca dm_mirror
    dm_region_hash dm_log dm_mod
    CPU: 48 PID: 45787 Comm: repro_set2 Not tainted 4.14.2-3.el7uek.x86_64 #2
    Hardware name: Oracle Corporation ORACLE SERVER X5-2L/ASM,MOBO TRAY,2U, BIOS 31110000 03/03/2017
    task: ffff882f9190db00 task.stack: ffffc9002b994000
    RIP: 0010:__rds_rdma_map+0x36/0x440 [rds]
    RSP: 0018:ffffc9002b997df0 EFLAGS: 00010202
    RAX: 0000000000000000 RBX: ffff882fa2182580 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffffc9002b997e40 RDI: ffff882fa2182580
    RBP: ffffc9002b997e30 R08: 0000000000000000 R09: 0000000000000002
    R10: ffff885fb29e3838 R11: 0000000000000000 R12: ffff882fa2182580
    R13: ffff882fa2182580 R14: 0000000000000002 R15: 0000000020000ffc
    FS:  00007fbffa20b700(0000) GS:ffff882fbfb80000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000000000c0 CR3: 0000002f98a66006 CR4: 00000000001606e0
    Call Trace:
     rds_get_mr+0x56/0x80 [rds]
     rds_setsockopt+0x172/0x340 [rds]
     ? __fget_light+0x25/0x60
     ? __fdget+0x13/0x20
     SyS_setsockopt+0x80/0xe0
     do_syscall_64+0x67/0x1b0
     entry_SYSCALL64_slow_path+0x25/0x25
    RIP: 0033:0x7fbff9b117f9
    RSP: 002b:00007fbffa20aed8 EFLAGS: 00000293 ORIG_RAX: 0000000000000036
    RAX: ffffffffffffffda RBX: 00000000000c84a4 RCX: 00007fbff9b117f9
    RDX: 0000000000000002 RSI: 0000400000000114 RDI: 000000000000109b
    RBP: 00007fbffa20af10 R08: 0000000000000020 R09: 00007fbff9dd7860
    R10: 0000000020000ffc R11: 0000000000000293 R12: 0000000000000000
    R13: 00007fbffa20b9c0 R14: 00007fbffa20b700 R15: 0000000000000021
    
    Code: 41 56 41 55 49 89 fd 41 54 53 48 83 ec 18 8b 87 f0 02 00 00 48
    89 55 d0 48 89 4d c8 85 c0 0f 84 2d 03 00 00 48 8b 87 00 03 00 00 <48>
    83 b8 c0 00 00 00 00 0f 84 25 03 00 0 0 48 8b 06 48 8b 56 08
    
    The fix is to check the existence of an underlying transport in
    __rds_rdma_map().
    
    Signed-off-by: Håkon Bugge <haakon.bugge@oracle.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d019cd4409c70839ea5c8568ea861dcddf2d831c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Jan 19 10:06:03 2018 +0100

    ACPI: sbshc: remove raw pointer from printk() message
    
    commit 43cdd1b716b26f6af16da4e145b6578f98798bf6 upstream.
    
    There's no need to be printing a raw kernel pointer to the kernel log at
    every boot.  So just remove it, and change the whole message to use the
    correct dev_info() call at the same time.
    
    Reported-by: Wang Qize <wang_qize@venustech.com.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8466609ff96439973d04466ccc9d909c16d16977
Author: Daniel Mentz <danielmentz@google.com>
Date:   Wed Feb 14 13:03:23 2018 +0100

    media: v4l2-compat-ioctl32.c: refactor compat ioctl32 logic
    
    commit a1dfb4c48cc1e64eeb7800a27c66a6f7e88d075a upstream.
    
    The 32-bit compat v4l2 ioctl handling is implemented based on its 64-bit
    equivalent. It converts 32-bit data structures into its 64-bit
    equivalents and needs to provide the data to the 64-bit ioctl in user
    space memory which is commonly allocated using
    compat_alloc_user_space().
    
    However, due to how that function is implemented, it can only be called
    a single time for every syscall invocation.
    
    Supposedly to avoid this limitation, the existing code uses a mix of
    memory from the kernel stack and memory allocated through
    compat_alloc_user_space().
    
    Under normal circumstances, this would not work, because the 64-bit
    ioctl expects all pointers to point to user space memory. As a
    workaround, set_fs(KERNEL_DS) is called to temporarily disable this
    extra safety check and allow kernel pointers. However, this might
    introduce a security vulnerability: The result of the 32-bit to 64-bit
    conversion is writeable by user space because the output buffer has been
    allocated via compat_alloc_user_space(). A malicious user space process
    could then manipulate pointers inside this output buffer, and due to the
    previous set_fs(KERNEL_DS) call, functions like get_user() or put_user()
    no longer prevent kernel memory access.
    
    The new approach is to pre-calculate the total amount of user space
    memory that is needed, allocate it using compat_alloc_user_space() and
    then divide up the allocated memory to accommodate all data structures
    that need to be converted.
    
    An alternative approach would have been to retain the union type karg
    that they allocated on the kernel stack in do_video_ioctl(), copy all
    data from user space into karg and then back to user space. However, we
    decided against this approach because it does not align with other
    compat syscall implementations. Instead, we tried to replicate the
    get_user/put_user pairs as found in other places in the kernel:
    
        if (get_user(clipcount, &up->clipcount) ||
            put_user(clipcount, &kp->clipcount)) return -EFAULT;
    
    Notes from hans.verkuil@cisco.com:
    
    This patch was taken from:
        https://github.com/LineageOS/android_kernel_samsung_apq8084/commit/97b733953c06e4f0398ade18850f0817778255f7
    
    Clearly nobody could be bothered to upstream this patch or at minimum
    tell us :-( We only heard about this a week ago.
    
    This patch was rebased and cleaned up. Compared to the original I
    also swapped the order of the convert_in_user arguments so that they
    matched copy_in_user. It was hard to review otherwise. I also replaced
    the ALLOC_USER_SPACE/ALLOC_AND_GET by a normal function.
    
    Fixes: 6b5a9492ca ("v4l: introduce string control support.")
    
    Signed-off-by: Daniel Mentz <danielmentz@google.com>
    Co-developed-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    [bwh: Rebased on top of some earlier fixes]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 816d7d34185291d996c041adf0b9ab58bf5a73d7
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 13:03:22 2018 +0100

    media: v4l2-compat-ioctl32.c: don't copy back the result for certain errors
    
    commit d83a8243aaefe62ace433e4384a4f077bed86acb upstream.
    
    Some ioctls need to copy back the result even if the ioctl returned
    an error. However, don't do this for the error code -ENOTTY.
    It makes no sense in that cases.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dc22dc97541a916c257b497d690f957ce07936d7
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 13:03:21 2018 +0100

    media: v4l2-compat-ioctl32.c: drop pr_info for unknown buffer type
    
    commit 169f24ca68bf0f247d111aef07af00dd3a02ae88 upstream.
    
    There is nothing wrong with using an unknown buffer type. So
    stop spamming the kernel log whenever this happens. The kernel
    will just return -EINVAL to signal this.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 73cac8d582aff16493d29bc26925c9e0da09dc64
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 13:03:20 2018 +0100

    media: v4l2-compat-ioctl32.c: copy clip list in put_v4l2_window32
    
    commit a751be5b142ef6bcbbb96d9899516f4d9c8d0ef4 upstream.
    
    put_v4l2_window32() didn't copy back the clip list to userspace.
    Drivers can update the clip rectangles, so this should be done.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1ee385874fcd3e1356aeac6d8c88c63a83c06cbf
Author: Daniel Mentz <danielmentz@google.com>
Date:   Wed Feb 14 13:03:19 2018 +0100

    media: v4l2-compat-ioctl32: Copy v4l2_window->global_alpha
    
    commit 025a26fa14f8fd55d50ab284a30c016a5be953d0 upstream.
    
    Commit b2787845fb91 ("V4L/DVB (5289): Add support for video output
    overlays.") added the field global_alpha to struct v4l2_window but did
    not update the compat layer accordingly. This change adds global_alpha
    to struct v4l2_window32 and copies the value for global_alpha back and
    forth.
    
    Signed-off-by: Daniel Mentz <danielmentz@google.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c5833ac1da1d7b8a3b7fb56b51b72293efda072e
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 13:03:18 2018 +0100

    media: v4l2-compat-ioctl32.c: fix ctrl_is_pointer
    
    commit b8c601e8af2d08f733d74defa8465303391bb930 upstream.
    
    ctrl_is_pointer just hardcoded two known string controls, but that
    caused problems when using e.g. custom controls that use a pointer
    for the payload.
    
    Reimplement this function: it now finds the v4l2_ctrl (if the driver
    uses the control framework) or it calls vidioc_query_ext_ctrl (if the
    driver implements that directly).
    
    In both cases it can now check if the control is a pointer control
    or not.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    [bwh: Rebased on top of some earlier fixes]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b68691d351df8f31a7fe35969a89ae7840f75790
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 13:03:17 2018 +0100

    media: v4l2-compat-ioctl32.c: copy m.userptr in put_v4l2_plane32
    
    commit 8ed5a59dcb47a6f76034ee760b36e089f3e82529 upstream.
    
    The struct v4l2_plane32 should set m.userptr as well. The same
    happens in v4l2_buffer32 and v4l2-compliance tests for this.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3d4a1d4e7c67e3e6b083797e9ef220cf287b45a9
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 13:03:16 2018 +0100

    media: v4l2-compat-ioctl32.c: avoid sizeof(type)
    
    commit 333b1e9f96ce05f7498b581509bb30cde03018bf upstream.
    
    Instead of doing sizeof(struct foo) use sizeof(*up). There even were
    cases where 4 * sizeof(__u32) was used instead of sizeof(kp->reserved),
    which is very dangerous when the size of the reserved array changes.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    [bwh: Rebased on top of some earlier fixes]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6e5253f46b0c661be373d9e7da49b46ebfd756cb
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 13:03:15 2018 +0100

    media: v4l2-compat-ioctl32.c: move 'helper' functions to __get/put_v4l2_format32
    
    commit 486c521510c44a04cd756a9267e7d1e271c8a4ba upstream.
    
    These helper functions do not really help. Move the code to the
    __get/put_v4l2_format32 functions.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    [bwh: Rebased on top of some earlier fixes]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5188fc724dca92cca2f157f30d4eb63d83f28e28
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 13:03:14 2018 +0100

    media: v4l2-compat-ioctl32.c: fix the indentation
    
    commit b7b957d429f601d6d1942122b339474f31191d75 upstream.
    
    The indentation of this source is all over the place. Fix this.
    This patch only changes whitespace.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    [bwh: Rebased on top of some earlier fixes]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0f79e9353b78146e7d6f582517f578651f5397c0
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 13:03:13 2018 +0100

    media: v4l2-compat-ioctl32.c: add missing VIDIOC_PREPARE_BUF
    
    commit 3ee6d040719ae09110e5cdf24d5386abe5d1b776 upstream.
    
    The result of the VIDIOC_PREPARE_BUF ioctl was never copied back
    to userspace since it was missing in the switch.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dbcecbbd1d078f0c45dfce5afe4a08e617129a14
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Wed Feb 14 13:03:12 2018 +0100

    media: v4l2-ioctl.c: don't copy back the result for -ENOTTY
    
    commit 181a4a2d5a0a7b43cab08a70710d727e7764ccdd upstream.
    
    If the ioctl returned -ENOTTY, then don't bother copying
    back the result as there is no point.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c89536542cc5c49c7ceefd628c36c0326f6e2842
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Fri Aug 4 07:25:06 2017 -0400

    media: v4l2-compat-ioctl32.c: add capabilities field to, v4l2_input32
    
    commit 037e0865c2ecbaa4558feba239ece08d7e457ec0 upstream.
    
    The v4l2_input32 struct wasn't updated when this field was added.
    It didn't cause a failure in the compat code, but it is better to
    keep it in sync with v4l2_input to avoid confusion.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9a99ae972377250ffd11ece40c083dbc30da8d51
Author: Tiffany Lin <tiffany.lin@mediatek.com>
Date:   Mon Mar 14 08:16:14 2016 -0300

    media: v4l2-compat-ioctl32: fix missing reserved field copy in put_v4l2_create32
    
    commit baf43c6eace43868e490f18560287fa3481b2159 upstream.
    
    In v4l2-compliance utility, test VIDIOC_CREATE_BUFS will check whether reserved
    filed of v4l2_create_buffers filled with zero
    Reserved field is filled with zero in v4l_create_bufs.
    This patch copy reserved field of v4l2_create_buffer from kernel space to user
    space
    
    Signed-off-by: Tiffany Lin <tiffany.lin@mediatek.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6aa52b5111746b0bebf640163e575bd803fb06a7
Author: Andrzej Hajda <a.hajda@samsung.com>
Date:   Mon Aug 31 08:56:15 2015 -0300

    v4l2-compat-ioctl32: fix alignment for ARM64
    
    commit 655e9780ab913a3a06d4a164d55e3b755524186d upstream.
    
    Alignment/padding rules on AMD64 and ARM64 differs. To allow properly match
    compatible ioctls on ARM64 kernels without breaking AMD64 some fields
    should be aligned using compat_s64 type and in one case struct should be
    unpacked.
    
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    [hans.verkuil@cisco.com: use compat_u64 instead of compat_s64 in v4l2_input32]
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fd15ac92bcc6276caccfe2e745b593b9a1d62dd9
Author: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
Date:   Fri May 30 20:26:38 2014 -0300

    V4L2: fix VIDIOC_CREATE_BUFS 32-bit compatibility mode data copy-back
    
    commit 6ed9b28504326f8cf542e6b68245b2f7ce009216 upstream.
    
    Similar to an earlier patch, fixing reading user-space data for the
    VIDIOC_CREATE_BUFS ioctl() in 32-bit compatibility mode, this patch fixes
    writing back of the possibly modified struct to the user. However, unlike
    the former bug, this one is much less harmful, because it only results in
    the kernel failing to write the .type field back to the user, but in fact
    this is likely unneeded, because the kernel will hardly want to change
    that field. Therefore this bug is more of a theoretical nature.
    
    Signed-off-by: Guennadi Liakhovetski <g.liakhovetski@gmx.de>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 52604531f71632b2cb474a0af411a3140908321c
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Thu Aug 21 17:07:21 2014 -0300

    v4l2-compat-ioctl32: fix sparse warnings
    
    commit 8ae632b11775254c5e555ee8c42b7d19baeb1473 upstream.
    
    A lot of these warnings are caused by the fact that we don't generally use
    __user in videodev2.h. Normally the video_usercopy function will copy anything
    pointed to by pointers into kernel space, so having __user in the struct will only
    cause lots of warnings in the drivers. But the flip side of that is that you
    need to add __force casts here.
    
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:337:26: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:337:30: warning: incorrect type in argument 2 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:338:31: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:338:49: warning: incorrect type in argument 2 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:343:21: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:346:21: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:349:35: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:349:46: warning: incorrect type in argument 2 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:352:35: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:352:54: warning: incorrect type in argument 2 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:363:26: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:363:32: warning: incorrect type in argument 2 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:364:31: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:364:51: warning: incorrect type in argument 2 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:371:35: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:371:56: warning: incorrect type in argument 2 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:376:35: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:376:48: warning: incorrect type in argument 2 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:430:30: warning: incorrect type in assignment (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:433:48: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:433:56: warning: incorrect type in argument 2 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:501:24: warning: incorrect type in assignment (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:507:48: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:507:56: warning: incorrect type in argument 2 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:565:18: warning: incorrect type in assignment (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:670:22: warning: incorrect type in assignment (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:680:29: warning: incorrect type in assignment (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:692:55: warning: incorrect type in initializer (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:773:18: warning: incorrect type in assignment (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:786:30: warning: incorrect type in argument 1 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:786:44: warning: incorrect type in argument 2 (different address spaces)
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:674:37: warning: dereference of noderef expression
    drivers/media/v4l2-core/v4l2-compat-ioctl32.c:718:37: warning: dereference of noderef expression
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>
    [bwh: Backported to 3.2:
     - Drop changes in {get,put}_v4l2_edid32()
     - Adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 30f7430b476f98e1aa553450b440466f1606aae8
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Mon Feb 26 16:32:31 2018 +0000

    of: fdt: Fix return with value in void function
    
    Commit 49e67dd17649 "of: fdt: add missing allocation-failure check"
    added a "return NULL" statement in __unflatten_device_tree().  When
    applied to the 3.2-stable branch, this introduced a compiler warning
    (not an error!) because the function returns void here.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0294ef89b68f8c59df0be0fd5ecf20aa34d29741
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Tue Jul 17 15:48:00 2012 -0700

    m32r: fix 'fix breakage from "m32r: use generic ptrace_resume code"' fallout
    
    commit a6b202979661eb32646048aeaad7be7b70c2cd22 upstream.
    
    Commit acdc0d5ef9dd ('m32r: fix breakage from "m32r: use generic
    ptrace_resume code"') tried to fix a problem in commit e34112e3966fc
    ("m32r: use generic ptrace_resume code") by returning values in a
    function returning void, causing:
    
      arch/m32r/kernel/ptrace.c: In function 'user_enable_single_step':
      arch/m32r/kernel/ptrace.c:594:3: warning: 'return' with a value, in function returning void [enabled by default]
      arch/m32r/kernel/ptrace.c:598:3: warning: 'return' with a value, in function returning void [enabled by default]
      arch/m32r/kernel/ptrace.c:601:3: warning: 'return' with a value, in function returning void [enabled by default]
      arch/m32r/kernel/ptrace.c:604:2: warning: 'return' with a value, in function returning void [enabled by default]
    
    Remove the unneeded return values.
    
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hirokazu Takata <takata@linux-m32r.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d7b68bb22c750e91ae16f8a539bd67c09abf3fba
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Jan 26 14:54:32 2018 +0100

    hrtimer: Reset hrtimer cpu base proper on CPU hotplug
    
    commit d5421ea43d30701e03cadc56a38854c36a8b4433 upstream.
    
    The hrtimer interrupt code contains a hang detection and mitigation
    mechanism, which prevents that a long delayed hrtimer interrupt causes a
    continous retriggering of interrupts which prevent the system from making
    progress. If a hang is detected then the timer hardware is programmed with
    a certain delay into the future and a flag is set in the hrtimer cpu base
    which prevents newly enqueued timers from reprogramming the timer hardware
    prior to the chosen delay. The subsequent hrtimer interrupt after the delay
    clears the flag and resumes normal operation.
    
    If such a hang happens in the last hrtimer interrupt before a CPU is
    unplugged then the hang_detected flag is set and stays that way when the
    CPU is plugged in again. At that point the timer hardware is not armed and
    it cannot be armed because the hang_detected flag is still active, so
    nothing clears that flag. As a consequence the CPU does not receive hrtimer
    interrupts and no timers expire on that CPU which results in RCU stalls and
    other malfunctions.
    
    Clear the flag along with some other less critical members of the hrtimer
    cpu base to ensure starting from a clean state when a CPU is plugged in.
    
    Thanks to Paul, Sebastian and Anna-Maria for their help to get down to the
    root cause of that hard to reproduce heisenbug. Once understood it's
    trivial and certainly justifies a brown paperbag.
    
    Fixes: 41d2e4949377 ("hrtimer: Tune hrtimer_interrupt hang logic")
    Reported-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sebastian Sewior <bigeasy@linutronix.de>
    Cc: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801261447590.2067@nanos
    [bwh: Backported to 3.2:
     - There's no next_timer field to reset
     - Adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 45f2396c843a12ffab988071e725defba5c9703f
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Fri Jan 26 15:14:16 2018 +0300

    dccp: don't restart ccid2_hc_tx_rto_expire() if sk in closed state
    
    commit dd5684ecae3bd8e44b644f50e2c12c7e57fdfef5 upstream.
    
    ccid2_hc_tx_rto_expire() timer callback always restarts the timer
    again and can run indefinitely (unless it is stopped outside), and after
    commit 120e9dabaf55 ("dccp: defer ccid_hc_tx_delete() at dismantle time"),
    which moved ccid_hc_tx_delete() (also includes sk_stop_timer()) from
    dccp_destroy_sock() to sk_destruct(), this started to happen quite often.
    The timer prevents releasing the socket, as a result, sk_destruct() won't
    be called.
    
    Found with LTP/dccp_ipsec tests running on the bonding device,
    which later couldn't be unloaded after the tests were completed:
    
      unregister_netdevice: waiting for bond0 to become free. Usage count = 148
    
    Fixes: 2a91aa396739 ("[DCCP] CCID2: Initial CCID2 (TCP-Like) implementation")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a305a4f862e663ad235f1cd3dba8bd2a67562f2f
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Mon Jan 22 18:06:37 2018 +0100

    pppoe: take ->needed_headroom of lower device into account on xmit
    
    commit 02612bb05e51df8489db5e94d0cf8d1c81f87b0c upstream.
    
    In pppoe_sendmsg(), reserving dev->hard_header_len bytes of headroom
    was probably fine before the introduction of ->needed_headroom in
    commit f5184d267c1a ("net: Allow netdevices to specify needed head/tailroom").
    
    But now, virtual devices typically advertise the size of their overhead
    in dev->needed_headroom, so we must also take it into account in
    skb_reserve().
    Allocation size of skb is also updated to take dev->needed_tailroom
    into account and replace the arbitrary 32 bytes with the real size of
    a PPPoE header.
    
    This issue was discovered by syzbot, who connected a pppoe socket to a
    gre device which had dev->header_ops->create == ipgre_header and
    dev->hard_header_len == 0. Therefore, PPPoE didn't reserve any
    headroom, and dev_hard_header() crashed when ipgre_header() tried to
    prepend its header to skb->data.
    
    skbuff: skb_under_panic: text:000000001d390b3a len:31 put:24
    head:00000000d8ed776f data:000000008150e823 tail:0x7 end:0xc0 dev:gre0
    ------------[ cut here ]------------
    kernel BUG at net/core/skbuff.c:104!
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
        (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 3670 Comm: syzkaller801466 Not tainted
    4.15.0-rc7-next-20180115+ #97
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    RIP: 0010:skb_panic+0x162/0x1f0 net/core/skbuff.c:100
    RSP: 0018:ffff8801d9bd7840 EFLAGS: 00010282
    RAX: 0000000000000083 RBX: ffff8801d4f083c0 RCX: 0000000000000000
    RDX: 0000000000000083 RSI: 1ffff1003b37ae92 RDI: ffffed003b37aefc
    RBP: ffff8801d9bd78a8 R08: 1ffff1003b37ae8a R09: 0000000000000000
    R10: 0000000000000001 R11: 0000000000000000 R12: ffffffff86200de0
    R13: ffffffff84a981ad R14: 0000000000000018 R15: ffff8801d2d34180
    FS:  00000000019c4880(0000) GS:ffff8801db300000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000208bc000 CR3: 00000001d9111001 CR4: 00000000001606e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      skb_under_panic net/core/skbuff.c:114 [inline]
      skb_push+0xce/0xf0 net/core/skbuff.c:1714
      ipgre_header+0x6d/0x4e0 net/ipv4/ip_gre.c:879
      dev_hard_header include/linux/netdevice.h:2723 [inline]
      pppoe_sendmsg+0x58e/0x8b0 drivers/net/ppp/pppoe.c:890
      sock_sendmsg_nosec net/socket.c:630 [inline]
      sock_sendmsg+0xca/0x110 net/socket.c:640
      sock_write_iter+0x31a/0x5d0 net/socket.c:909
      call_write_iter include/linux/fs.h:1775 [inline]
      do_iter_readv_writev+0x525/0x7f0 fs/read_write.c:653
      do_iter_write+0x154/0x540 fs/read_write.c:932
      vfs_writev+0x18a/0x340 fs/read_write.c:977
      do_writev+0xfc/0x2a0 fs/read_write.c:1012
      SYSC_writev fs/read_write.c:1085 [inline]
      SyS_writev+0x27/0x30 fs/read_write.c:1082
      entry_SYSCALL_64_fastpath+0x29/0xa0
    
    Admittedly PPPoE shouldn't be allowed to run on non Ethernet-like
    interfaces, but reserving space for ->needed_headroom is a more
    fundamental issue that needs to be addressed first.
    
    Same problem exists for __pppoe_xmit(), which also needs to take
    dev->needed_headroom into account in skb_cow_head().
    
    Fixes: f5184d267c1a ("net: Allow netdevices to specify needed head/tailroom")
    Reported-by: syzbot+ed0838d0fa4c4f2b528e20286e6dc63effc7c14d@syzkaller.appspotmail.com
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a75a6c8641e59892466fee830fc9f4d502357a8c
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Fri Jan 19 09:43:39 2018 -0800

    Input: trackpoint - force 3 buttons if 0 button is reported
    
    commit f5d07b9e98022d50720e38aa936fc11c67868ece upstream.
    
    Lenovo introduced trackpoint compatible sticks with minimum PS/2 commands.
    They supposed to reply with 0x02, 0x03, or 0x04 in response to the
    "Read Extended ID" command, so we would know not to try certain extended
    commands. Unfortunately even some trackpoints reporting the original IBM
    version (0x01 firmware 0x0e) now respond with incorrect data to the "Get
    Extended Buttons" command:
    
     thinkpad_acpi: ThinkPad BIOS R0DET87W (1.87 ), EC unknown
     thinkpad_acpi: Lenovo ThinkPad E470, model 20H1004SGE
    
     psmouse serio2: trackpoint: IBM TrackPoint firmware: 0x0e, buttons: 0/0
    
    Since there are no trackpoints without buttons, let's assume the trackpoint
    has 3 buttons when we get 0 response to the extended buttons query.
    
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Fixes: https://bugzilla.kernel.org/show_bug.cgi?id=196253
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    [bwh: Backported to 3.2: use printk() instead of psmouse_warn()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 34a39a59bccd6d0831a4b1d9c4d63625adbef44e
Author: Oscar Campos <oscar.campos@member.fsf.org>
Date:   Tue Jul 18 17:20:36 2017 -0700

    Input: trackpoint - assume 3 buttons when buttons detection fails
    
    commit 293b915fd9bebf33cdc906516fb28d54649a25ac upstream.
    
    Trackpoint buttons detection fails on ThinkPad 570 and 470 series,
    this makes the middle button of the trackpoint to not being recogized.
    As I don't believe there is any trackpoint with less than 3 buttons this
    patch just assumes three buttons when the extended button information
    read fails.
    
    Signed-off-by: Oscar Campos <oscar.campos@member.fsf.org>
    Acked-by: Peter Hutterer <peter.hutterer@who-t.net>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7f51a47feb7835f41ef19ce313410c0bbbebde05
Author: Felix Fietkau <nbd@nbd.name>
Date:   Fri Jan 19 11:50:46 2018 +0100

    net: igmp: fix source address check for IGMPv3 reports
    
    commit ad23b750933ea7bf962678972a286c78a8fa36aa upstream.
    
    Commit "net: igmp: Use correct source address on IGMPv3 reports"
    introduced a check to validate the source address of locally generated
    IGMPv3 packets.
    Instead of checking the local interface address directly, it uses
    inet_ifa_match(fl4->saddr, ifa), which checks if the address is on the
    local subnet (or equal to the point-to-point address if used).
    
    This breaks for point-to-point interfaces, so check against
    ifa->ifa_local directly.
    
    Cc: Kevin Cernekee <cernekee@chromium.org>
    Fixes: a46182b00290 ("net: igmp: Use correct source address on IGMPv3 reports")
    Reported-by: Sebastian Gottschall <s.gottschall@dd-wrt.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ed8e45f1d4ad60d92fc99d5f722c997f94be1f49
Author: Kevin Cernekee <cernekee@chromium.org>
Date:   Mon Dec 11 11:13:45 2017 -0800

    net: igmp: Use correct source address on IGMPv3 reports
    
    commit a46182b00290839fa3fa159d54fd3237bd8669f0 upstream.
    
    Closing a multicast socket after the final IPv4 address is deleted
    from an interface can generate a membership report that uses the
    source IP from a different interface.  The following test script, run
    from an isolated netns, reproduces the issue:
    
        #!/bin/bash
    
        ip link add dummy0 type dummy
        ip link add dummy1 type dummy
        ip link set dummy0 up
        ip link set dummy1 up
        ip addr add 10.1.1.1/24 dev dummy0
        ip addr add 192.168.99.99/24 dev dummy1
    
        tcpdump -U -i dummy0 &
        socat EXEC:"sleep 2" \
            UDP4-DATAGRAM:239.101.1.68:8889,ip-add-membership=239.0.1.68:10.1.1.1 &
    
        sleep 1
        ip addr del 10.1.1.1/24 dev dummy0
        sleep 5
        kill %tcpdump
    
    RFC 3376 specifies that the report must be sent with a valid IP source
    address from the destination subnet, or from address 0.0.0.0.  Add an
    extra check to make sure this is the case.
    
    Signed-off-by: Kevin Cernekee <cernekee@chromium.org>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 24578f5e4c465369b7663873ce7c8bcbc77f7965
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 18 16:28:26 2018 +0100

    x86/mce: Make machine check speculation protected
    
    commit 6f41c34d69eb005e7848716bbcafc979b35037d5 upstream.
    
    The machine check idtentry uses an indirect branch directly from the low
    level code. This evades the speculation protection.
    
    Replace it by a direct call into C code and issue the indirect call there
    so the compiler can apply the proper speculation protection.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by:Borislav Petkov <bp@alien8.de>
    Reviewed-by: David Woodhouse <dwmw@amazon.co.uk>
    Niced-by: Peter Zijlstra <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801181626290.1847@nanos
    [bwh: Backported to 3.2:
     - Don't use dotraplinkage
     - Adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d84be371195fdd1b80f182c8a953542453ae47f1
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Jan 16 23:20:22 2018 +0100

    cfg80211: fix station info handling bugs
    
    commit 5762d7d3eda25c03cc2d9d45227be3f5ab6bec9e upstream.
    
    Fix two places where the structure isn't initialized to zero,
    and thus can't be filled properly by the driver.
    
    Fixes: 4a4b8169501b ("cfg80211: Accept multiple RSSI thresholds for CQM")
    Fixes: 9930380f0bd8 ("cfg80211: implement IWRATE")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2:
     - Drop change in cfg80211_cqm_rssi_update()
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e9dcb12d53e6dbf31574e881cf5d3076dd76432b
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Tue Jan 16 19:30:14 2018 +0100

    can: af_can: can_rcv(): replace WARN_ONCE by pr_warn_once
    
    commit 8cb68751c115d176ec851ca56ecfbb411568c9e8 upstream.
    
    If an invalid CAN frame is received, from a driver or from a tun
    interface, a Kernel warning is generated.
    
    This patch replaces the WARN_ONCE by a simple pr_warn_once, so that a
    kernel, bootet with panic_on_warn, does not panic. A printk seems to be
    more appropriate here.
    
    Reported-by: syzbot+4386709c0c1284dca827@syzkaller.appspotmail.com
    Suggested-by: Dmitry Vyukov <dvyukov@google.com>
    Acked-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    [bwh: Backported to 3.2:
     - Keep using the 'drop' label, as it has another user
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 35189a2e2d729caa1e5a74330e18280bc896fada
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Tue Jan 16 10:33:05 2018 +0100

    net: fs_enet: do not call phy_stop() in interrupts
    
    commit f8b39039cbf2a15f2b8c9f081e1cbd5dee00aaf5 upstream.
    
    In case of TX timeout, fs_timeout() calls phy_stop(), which
    triggers the following BUG_ON() as we are in interrupt.
    
    [92708.199889] kernel BUG at drivers/net/phy/mdio_bus.c:482!
    [92708.204985] Oops: Exception in kernel mode, sig: 5 [#1]
    [92708.210119] PREEMPT
    [92708.212107] CMPC885
    [92708.214216] CPU: 0 PID: 3 Comm: ksoftirqd/0 Tainted: G        W       4.9.61 #39
    [92708.223227] task: c60f0a40 task.stack: c6104000
    [92708.227697] NIP: c02a84bc LR: c02a947c CTR: c02a93d8
    [92708.232614] REGS: c6105c70 TRAP: 0700   Tainted: G        W        (4.9.61)
    [92708.241193] MSR: 00021032 <ME,IR,DR,RI>[92708.244818]   CR: 24000822  XER: 20000000
    [92708.248767]
    GPR00: c02a947c c6105d20 c60f0a40 c62b4c00 00000005 0000001f c069aad8 0001a688
    GPR08: 00000007 00000100 c02a93d8 00000000 000005fc 00000000 c6213240 c06338e4
    GPR16: 00000001 c06330d4 c0633094 00000000 c0680000 c6104000 c6104000 00000000
    GPR24: 00000200 00000000 ffffffff 00000004 00000078 00009032 00000000 c62b4c00
    NIP [c02a84bc] mdiobus_read+0x20/0x74
    [92708.281517] LR [c02a947c] kszphy_config_intr+0xa4/0xc4
    [92708.286547] Call Trace:
    [92708.288980] [c6105d20] [c6104000] 0xc6104000 (unreliable)
    [92708.294339] [c6105d40] [c02a947c] kszphy_config_intr+0xa4/0xc4
    [92708.300098] [c6105d50] [c02a5330] phy_stop+0x60/0x9c
    [92708.305007] [c6105d60] [c02c84d0] fs_timeout+0xdc/0x110
    [92708.310197] [c6105d80] [c035cd48] dev_watchdog+0x268/0x2a0
    [92708.315593] [c6105db0] [c0060288] call_timer_fn+0x34/0x17c
    [92708.321014] [c6105dd0] [c00605f0] run_timer_softirq+0x21c/0x2e4
    [92708.326887] [c6105e50] [c001e19c] __do_softirq+0xf4/0x2f4
    [92708.332207] [c6105eb0] [c001e3c8] run_ksoftirqd+0x2c/0x40
    [92708.337560] [c6105ec0] [c003b420] smpboot_thread_fn+0x1f0/0x258
    [92708.343405] [c6105ef0] [c003745c] kthread+0xbc/0xd0
    [92708.348217] [c6105f40] [c000c400] ret_from_kernel_thread+0x5c/0x64
    [92708.354275] Instruction dump:
    [92708.357207] 7c0803a6 bbc10018 38210020 4e800020 7c0802a6 9421ffe0 54290024 bfc10018
    [92708.364865] 90010024 7c7f1b78 81290008 552902ee <0f090000> 3bc3002c 7fc3f378 90810008
    [92708.372711] ---[ end trace 42b05441616fafd7 ]---
    
    This patch moves fs_timeout() actions into an async worker.
    
    Fixes: commit 48257c4f168e5 ("Add fs_enet ethernet network driver, for several embedded platforms")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fa05746dcb3132105d634eb72ec0d455af3be3cf
Author: Jeremy Compostella <jeremy.compostella@intel.com>
Date:   Wed Nov 15 12:31:44 2017 -0700

    i2c: core-smbus: prevent stack corruption on read I2C_BLOCK_DATA
    
    commit 89c6efa61f5709327ecfa24bff18e57a4e80c7fa upstream.
    
    On a I2C_SMBUS_I2C_BLOCK_DATA read request, if data->block[0] is
    greater than I2C_SMBUS_BLOCK_MAX + 1, the underlying I2C driver writes
    data out of the msgbuf1 array boundary.
    
    It is possible from a user application to run into that issue by
    calling the I2C_SMBUS ioctl with data.block[0] greater than
    I2C_SMBUS_BLOCK_MAX + 1.
    
    This patch makes the code compliant with
    Documentation/i2c/dev-interface by raising an error when the requested
    size is larger than 32 bytes.
    
    Call Trace:
     [<ffffffff8139f695>] dump_stack+0x67/0x92
     [<ffffffff811802a4>] panic+0xc5/0x1eb
     [<ffffffff810ecb5f>] ? vprintk_default+0x1f/0x30
     [<ffffffff817456d3>] ? i2cdev_ioctl_smbus+0x303/0x320
     [<ffffffff8109a68b>] __stack_chk_fail+0x1b/0x20
     [<ffffffff817456d3>] i2cdev_ioctl_smbus+0x303/0x320
     [<ffffffff81745aed>] i2cdev_ioctl+0x4d/0x1e0
     [<ffffffff811f761a>] do_vfs_ioctl+0x2ba/0x490
     [<ffffffff81336e43>] ? security_file_ioctl+0x43/0x60
     [<ffffffff811f7869>] SyS_ioctl+0x79/0x90
     [<ffffffff81a22e97>] entry_SYSCALL_64_fastpath+0x12/0x6a
    
    Signed-off-by: Jeremy Compostella <jeremy.compostella@intel.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8f5e58d2d912157dbf849e75c4ddecb79cd2f49e
Author: Joe Thornber <thornber@redhat.com>
Date:   Wed Dec 20 09:56:06 2017 +0000

    dm btree: fix serious bug in btree_split_beneath()
    
    commit bc68d0a43560e950850fc69b58f0f8254b28f6d6 upstream.
    
    When inserting a new key/value pair into a btree we walk down the spine of
    btree nodes performing the following 2 operations:
    
      i) space for a new entry
      ii) adjusting the first key entry if the new key is lower than any in the node.
    
    If the _root_ node is full, the function btree_split_beneath() allocates 2 new
    nodes, and redistibutes the root nodes entries between them.  The root node is
    left with 2 entries corresponding to the 2 new nodes.
    
    btree_split_beneath() then adjusts the spine to point to one of the two new
    children.  This means the first key is never adjusted if the new key was lower,
    ie. operation (ii) gets missed out.  This can result in the new key being
    'lost' for a period; until another low valued key is inserted that will uncover
    it.
    
    This is a serious bug, and quite hard to make trigger in normal use.  A
    reproducing test case ("thin create devices-in-reverse-order") is
    available as part of the thin-provision-tools project:
      https://github.com/jthornber/thin-provisioning-tools/blob/master/functional-tests/device-mapper/dm-tests.scm#L593
    
    Fix the issue by changing btree_split_beneath() so it no longer adjusts
    the spine.  Instead it unlocks both the new nodes, and lets the main
    loop in btree_insert_raw() relock the appropriate one and make any
    neccessary adjustments.
    
    Reported-by: Monty Pavel <monty_pavel@sina.com>
    Signed-off-by: Joe Thornber <thornber@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 181397fc16b72c4f7a0079a89022df817e99fa19
Author: Dennis Yang <dennisyang@qnap.com>
Date:   Tue Dec 12 18:21:40 2017 +0800

    dm thin metadata: THIN_MAX_CONCURRENT_LOCKS should be 6
    
    commit 490ae017f54e55bde382d45ea24bddfb6d1a0aaf upstream.
    
    For btree removal, there is a corner case that a single thread
    could takes 6 locks which is more than THIN_MAX_CONCURRENT_LOCKS(5)
    and leads to deadlock.
    
    A btree removal might eventually call
    rebalance_children()->rebalance3() to rebalance entries of three
    neighbor child nodes when shadow_spine has already acquired two
    write locks. In rebalance3(), it tries to shadow and acquire the
    write locks of all three child nodes. However, shadowing a child
    node requires acquiring a read lock of the original child node and
    a write lock of the new block. Although the read lock will be
    released after block shadowing, shadowing the third child node
    in rebalance3() could still take the sixth lock.
    (2 write locks for shadow_spine +
     2 write locks for the first two child nodes's shadow +
     1 write lock for the last child node's shadow +
     1 read lock for the last child node)
    
    Signed-off-by: Dennis Yang <dennisyang@qnap.com>
    Acked-by: Joe Thornber <thornber@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4a92df31aa9b79ebeca325ac9991bbca8d2bd5a6
Author: Joe Thornber <ejt@redhat.com>
Date:   Fri Jul 27 15:07:58 2012 +0100

    dm thin metadata: introduce THIN_MAX_CONCURRENT_LOCKS
    
    commit 8c971178a788c70e8d6db5c3a813de1a1f54e5b7 upstream.
    
    Introduce THIN_MAX_CONCURRENT_LOCKS into dm-thin-metadata to
    give a name to an otherwise "magic" number.
    
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Alasdair G Kergon <agk@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 75fce37704670870d9053b6769180a8ecffc1366
Author: Tianyu Lan <lantianyu1986@gmail.com>
Date:   Tue Jan 16 17:34:07 2018 +0800

    KVM/x86: Fix wrong macro references of X86_CR0_PG_BIT and X86_CR4_PAE_BIT in kvm_valid_sregs()
    
    commit 37b95951c58fdf08dc10afa9d02066ed9f176fb5 upstream.
    
    kvm_valid_sregs() should use X86_CR0_PG and X86_CR4_PAE to check bit
    status rather than X86_CR0_PG_BIT and X86_CR4_PAE_BIT. This patch is
    to fix it.
    
    Fixes: f29810335965a(KVM/x86: Check input paging mode when cs.l is set)
    Reported-by: Jeremi Piotrowski <jeremi.piotrowski@gmail.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Tianyu Lan <Tianyu.Lan@microsoft.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 99f87d9bb6b4464b3483d5c329449d8880fc698a
Author: Lan Tianyu <tianyu.lan@intel.com>
Date:   Thu Dec 14 03:01:52 2017 -0500

    KVM/x86: Check input paging mode when cs.l is set
    
    commit f29810335965ac1f7bcb501ee2af5f039f792416 upstream.
    
    Reported by syzkaller:
        WARNING: CPU: 0 PID: 27962 at arch/x86/kvm/emulate.c:5631 x86_emulate_insn+0x557/0x15f0 [kvm]
        Modules linked in: kvm_intel kvm [last unloaded: kvm]
        CPU: 0 PID: 27962 Comm: syz-executor Tainted: G    B   W        4.15.0-rc2-next-20171208+ #32
        Hardware name: Intel Corporation S1200SP/S1200SP, BIOS S1200SP.86B.01.03.0006.040720161253 04/07/2016
        RIP: 0010:x86_emulate_insn+0x557/0x15f0 [kvm]
        RSP: 0018:ffff8807234476d0 EFLAGS: 00010282
        RAX: 0000000000000000 RBX: ffff88072d0237a0 RCX: ffffffffa0065c4d
        RDX: 1ffff100e5a046f9 RSI: 0000000000000003 RDI: ffff88072d0237c8
        RBP: ffff880723447728 R08: ffff88072d020000 R09: ffffffffa008d240
        R10: 0000000000000002 R11: ffffed00e7d87db3 R12: ffff88072d0237c8
        R13: ffff88072d023870 R14: ffff88072d0238c2 R15: ffffffffa008d080
        FS:  00007f8a68666700(0000) GS:ffff880802200000(0000) knlGS:0000000000000000
        CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
        CR2: 000000002009506c CR3: 000000071fec4005 CR4: 00000000003626f0
        Call Trace:
         x86_emulate_instruction+0x3bc/0xb70 [kvm]
         ? reexecute_instruction.part.162+0x130/0x130 [kvm]
         vmx_handle_exit+0x46d/0x14f0 [kvm_intel]
         ? trace_event_raw_event_kvm_entry+0xe7/0x150 [kvm]
         ? handle_vmfunc+0x2f0/0x2f0 [kvm_intel]
         ? wait_lapic_expire+0x25/0x270 [kvm]
         vcpu_enter_guest+0x720/0x1ef0 [kvm]
         ...
    
    When CS.L is set, vcpu should run in the 64 bit paging mode.
    Current kvm set_sregs function doesn't have such check when
    userspace inputs sreg values. This will lead unexpected behavior.
    This patch is to add checks for CS.L, EFER.LME, EFER.LMA and
    CR4.PAE when get SREG inputs from userspace in order to avoid
    unexpected behavior.
    
    Suggested-by: Paolo Bonzini <pbonzini@redhat.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Jim Mattson <jmattson@google.com>
    Signed-off-by: Tianyu Lan <tianyu.lan@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f4f956c79a081b07ad5a63ceae5daa8fc41b55f8
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Jan 15 17:02:00 2018 +0800

    sctp: do not allow the v4 socket to bind a v4mapped v6 address
    
    commit c5006b8aa74599ce19104b31d322d2ea9ff887cc upstream.
    
    The check in sctp_sockaddr_af is not robust enough to forbid binding a
    v4mapped v6 addr on a v4 socket.
    
    The worse thing is that v4 socket's bind_verify would not convert this
    v4mapped v6 addr to a v4 addr. syzbot even reported a crash as the v4
    socket bound a v6 addr.
    
    This patch is to fix it by doing the common sa.sa_family check first,
    then AF_INET check for v4mapped v6 addrs.
    
    Fixes: 7dab83de50c7 ("sctp: Support ipv6only AF_INET6 sockets.")
    Reported-by: syzbot+7b7b518b1228d2743963@syzkaller.appspotmail.com
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 602382075ce41a4735990d4b7fb742d368c89c5f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Jan 15 17:01:36 2018 +0800

    sctp: return error if the asoc has been peeled off in sctp_wait_for_sndbuf
    
    commit a0ff660058b88d12625a783ce9e5c1371c87951f upstream.
    
    After commit cea0cc80a677 ("sctp: use the right sk after waking up from
    wait_buf sleep"), it may change to lock another sk if the asoc has been
    peeled off in sctp_wait_for_sndbuf.
    
    However, the asoc's new sk could be already closed elsewhere, as it's in
    the sendmsg context of the old sk that can't avoid the new sk's closing.
    If the sk's last one refcnt is held by this asoc, later on after putting
    this asoc, the new sk will be freed, while under it's own lock.
    
    This patch is to revert that commit, but fix the old issue by returning
    error under the old sk's lock.
    
    Fixes: cea0cc80a677 ("sctp: use the right sk after waking up from wait_buf sleep")
    Reported-by: syzbot+ac6ea7baa4432811eb50@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e5fbf893d7a14f9d55d181a7204f487c68a4eac6
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Nov 15 16:57:26 2017 +0800

    sctp: use the right sk after waking up from wait_buf sleep
    
    commit cea0cc80a6777beb6eb643d4ad53690e1ad1d4ff upstream.
    
    Commit dfcb9f4f99f1 ("sctp: deny peeloff operation on asocs with threads
    sleeping on it") fixed the race between peeloff and wait sndbuf by
    checking waitqueue_active(&asoc->wait) in sctp_do_peeloff().
    
    But it actually doesn't work, as even if waitqueue_active returns false
    the waiting sndbuf thread may still not yet hold sk lock. After asoc is
    peeled off, sk is not asoc->base.sk any more, then to hold the old sk
    lock couldn't make assoc safe to access.
    
    This patch is to fix this by changing to hold the new sk lock if sk is
    not asoc->base.sk, meanwhile, also set the sk in sctp_sendmsg with the
    new sk.
    
    With this fix, there is no more race between peeloff and waitbuf, the
    check 'waitqueue_active' in sctp_do_peeloff can be removed.
    
    Thanks Marcelo and Neil for making this clear.
    
    v1->v2:
      fix it by changing to lock the new sock instead of adding a flag in asoc.
    
    Suggested-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dc5a6f44b3db2f81cde083a569030b067f06381c
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Jan 15 09:58:27 2018 +0100

    cfg80211: check dev_set_name() return value
    
    commit 59b179b48ce2a6076448a44531242ac2b3f6cef2 upstream.
    
    syzbot reported a warning from rfkill_alloc(), and after a while
    I think that the reason is that it was doing fault injection and
    the dev_set_name() failed, leaving the name NULL, and we didn't
    check the return value and got to rfkill_alloc() with a NULL name.
    Since we really don't want a NULL name, we ought to check the
    return value.
    
    Fixes: fb28ad35906a ("net: struct device - replace bus_id with dev_name(), dev_set_name()")
    Reported-by: syzbot+1ddfb3357e1d7bb5b5d3@syzkaller.appspotmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9d4265fc8f485089645dca8c688eedd890a165af
Author: Li Jinyue <lijinyue@huawei.com>
Date:   Thu Dec 14 17:04:54 2017 +0800

    futex: Prevent overflow by strengthen input validation
    
    commit fbe0e839d1e22d88810f3ee3e2f1479be4c0aa4a upstream.
    
    UBSAN reports signed integer overflow in kernel/futex.c:
    
     UBSAN: Undefined behaviour in kernel/futex.c:2041:18
     signed integer overflow:
     0 - -2147483648 cannot be represented in type 'int'
    
    Add a sanity check to catch negative values of nr_wake and nr_requeue.
    
    Signed-off-by: Li Jinyue <lijinyue@huawei.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: peterz@infradead.org
    Cc: dvhart@infradead.org
    Link: https://lkml.kernel.org/r/1513242294-31786-1-git-send-email-lijinyue@huawei.com
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 39a34000fbdf7b64db95112686658662fd723841
Author: Andrew Honig <ahonig@google.com>
Date:   Wed Jan 10 10:12:03 2018 -0800

    KVM: x86: Add memory barrier on vmcs field lookup
    
    commit 75f139aaf896d6fdeec2e468ddfa4b2fe469bf40 upstream.
    
    This adds a memory barrier when performing a lookup into
    the vmcs_field_to_offset_table.  This is related to
    CVE-2017-5753.
    
    Signed-off-by: Andrew Honig <ahonig@google.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ccaa16ab073a8e0b94ce1d32d9da1199adf712df
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 10 23:48:05 2018 +0100

    ALSA: pcm: Remove yet superfluous WARN_ON()
    
    commit 23b19b7b50fe1867da8d431eea9cd3e4b6328c2c upstream.
    
    muldiv32() contains a snd_BUG_ON() (which is morphed as WARN_ON() with
    debug option) for checking the case of 0 / 0.  This would be helpful
    if this happens only as a logical error; however, since the hw refine
    is performed with any data set provided by user, the inconsistent
    values that can trigger such a condition might be passed easily.
    Actually, syzbot caught this by passing some zero'ed old hw_params
    ioctl.
    
    So, having snd_BUG_ON() there is simply superfluous and rather
    harmful to give unnecessary confusions.  Let's get rid of it.
    
    Reported-by: syzbot+7e6ee55011deeebce15d@syzkaller.appspotmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit be1b829c0d3d1be6692194d1b6bb91d544266ce5
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Tue Jan 9 13:40:41 2018 -0800

    8021q: fix a memory leak for VLAN 0 device
    
    commit 78bbb15f2239bc8e663aa20bbe1987c91a0b75f6 upstream.
    
    A vlan device with vid 0 is allow to creat by not able to be fully
    cleaned up by unregister_vlan_dev() which checks for vlan_id!=0.
    
    Also, VLAN 0 is probably not a valid number and it is kinda
    "reserved" for HW accelerating devices, but it is probably too
    late to reject it from creation even if makes sense. Instead,
    just remove the check in unregister_vlan_dev().
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Fixes: ad1afb003939 ("vlan_dev: VLAN 0 should be treated as "no vlan tag" (802.1p packet)")
    Cc: Vlad Yasevich <vyasevich@gmail.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2: The vlan driver didn't leak memory itself, but might
     cause underlying drivers to leak resources for VID 0.  Keep the check for
     hardware acceleration.]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e9195ac9ad4e66b876782ad80bd6a5b40e2ea7eb
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Sat Jan 6 21:53:27 2018 +0300

    SolutionEngine771x: add Ether TSU resource
    
    commit f9a531d6731d74f1e24298d9641c2dc1fef2631b upstream.
    
    After the  Ether platform data is fixed, the driver probe() method would
    still fail since the 'struct sh_eth_cpu_data' corresponding  to SH771x
    indicates the presence of TSU but the memory resource for it is absent.
    Add the missing TSU resource  to both Ether devices and fix the harmless
    off-by-one error in the main memory resources, while at it...
    
    Fixes: 4986b996882d ("net: sh_eth: remove the SH_TSU_ADDR")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c22d3556c86cd3c321c8949e6b694efa05613d35
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Sat Jan 6 21:53:26 2018 +0300

    SolutionEngine771x: fix Ether platform data
    
    commit 195e2addbce09e5afbc766efc1e6567c9ce840d3 upstream.
    
    The 'sh_eth' driver's probe() method would fail  on the SolutionEngine7710
    board and crash on SolutionEngine7712 board  as the platform code is
    hopelessly behind the driver's platform data --  it passes the PHY address
    instead of 'struct sh_eth_plat_data *'; pass the latter to the driver in
    order to fix the bug...
    
    Fixes: 71557a37adb5 ("[netdrvr] sh_eth: Add SH7619 support")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 56ff66d24079a470e430b751800b2c642d443e88
Author: Nicolai Stange <nstange@suse.de>
Date:   Mon Jan 8 15:54:44 2018 +0100

    net: ipv4: emulate READ_ONCE() on ->hdrincl bit-field in raw_sendmsg()
    
    commit 20b50d79974ea3192e8c3ab7faf4e536e5f14d8f upstream.
    
    Commit 8f659a03a0ba ("net: ipv4: fix for a race condition in
    raw_sendmsg") fixed the issue of possibly inconsistent ->hdrincl handling
    due to concurrent updates by reading this bit-field member into a local
    variable and using the thus stabilized value in subsequent tests.
    
    However, aforementioned commit also adds the (correct) comment that
    
      /* hdrincl should be READ_ONCE(inet->hdrincl)
       * but READ_ONCE() doesn't work with bit fields
       */
    
    because as it stands, the compiler is free to shortcut or even eliminate
    the local variable at its will.
    
    Note that I have not seen anything like this happening in reality and thus,
    the concern is a theoretical one.
    
    However, in order to be on the safe side, emulate a READ_ONCE() on the
    bit-field by doing it on the local 'hdrincl' variable itself:
    
            int hdrincl = inet->hdrincl;
            hdrincl = READ_ONCE(hdrincl);
    
    This breaks the chain in the sense that the compiler is not allowed
    to replace subsequent reads from hdrincl with reloads from inet->hdrincl.
    
    Fixes: 8f659a03a0ba ("net: ipv4: fix for a race condition in raw_sendmsg")
    Signed-off-by: Nicolai Stange <nstange@suse.de>
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2: use ACCESS_ONCE()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d1168c13578d3b6645c41314c8e0ce0ee0c85f6a
Author: Pete Zaitcev <zaitcev@redhat.com>
Date:   Mon Jan 8 15:46:41 2018 -0600

    USB: fix usbmon BUG trigger
    
    commit 46eb14a6e1585d99c1b9f58d0e7389082a5f466b upstream.
    
    Automated tests triggered this by opening usbmon and accessing the
    mmap while simultaneously resizing the buffers. This bug was with
    us since 2006, because typically applications only size the buffers
    once and thus avoid racing. Reported by Kirill A. Shutemov.
    
    Reported-by: <syzbot+f9831b881b3e849829fc@syzkaller.appspotmail.com>
    Signed-off-by: Pete Zaitcev <zaitcev@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 84f7438d82337ab4cbb9f04d031a0005514f78b3
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 8 14:03:53 2018 +0100

    ALSA: pcm: Allow aborting mutex lock at OSS read/write loops
    
    commit 900498a34a3ac9c611e9b425094c8106bdd7dc1c upstream.
    
    PCM OSS read/write loops keep taking the mutex lock for the whole
    read/write, and this might take very long when the exceptionally high
    amount of data is given.  Also, since it invokes with mutex_lock(),
    the concurrent read/write becomes unbreakable.
    
    This patch tries to address these issues by replacing mutex_lock()
    with mutex_lock_interruptible(), and also splits / re-takes the lock
    at each read/write period chunk, so that it can switch the context
    more finely if requested.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 60c444b1c6af1cc3e0b34da57a5dd2d96d2d6da2
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 8 13:58:31 2018 +0100

    ALSA: pcm: Abort properly at pending signal in OSS read/write loops
    
    commit 29159a4ed7044c52e3e2cf1a9fb55cec4745c60b upstream.
    
    The loops for read and write in PCM OSS emulation have no proper check
    of pending signals, and they keep processing even after user tries to
    break.  This results in a very long delay, often seen as RCU stall
    when a huge unprocessed bytes remain queued.  The bug could be easily
    triggered by syzkaller.
    
    As a simple workaround, this patch adds the proper check of pending
    signals and aborts the loop appropriately.
    
    Reported-by: syzbot+993cb4cfcbbff3947c21@syzkaller.appspotmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f5df4e3a6342a9686a2d08820394b2aad3eed737
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Jan 5 22:12:32 2018 +1100

    xfrm: Return error on unknown encap_type in init_state
    
    commit bcfd09f7837f5240c30fd2f52ee7293516641faa upstream.
    
    Currently esp will happily create an xfrm state with an unknown
    encap type for IPv4, without setting the necessary state parameters.
    This patch fixes it by returning -EINVAL.
    
    There is a similar problem in IPv6 where if the mode is unknown
    we will skip initialisation while returning zero.  However, this
    is harmless as the mode has already been checked further up the
    stack.  This patch removes this anomaly by aligning the IPv6
    behaviour with IPv4 and treating unknown modes (which cannot
    actually happen) as transport mode.
    
    Fixes: 38320c70d282 ("[IPSEC]: Use crypto_aead and authenc in ESP")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 24ff3690834d18f20bd6ee06d0c178f9c5c3ff8e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 4 17:38:54 2018 +0100

    ALSA: aloop: Fix racy hw constraints adjustment
    
    commit 898dfe4687f460ba337a01c11549f87269a13fa2 upstream.
    
    The aloop driver tries to update the hw constraints of the connected
    target on the cable of the opened PCM substream.  This is done by
    adding the extra hw constraints rules referring to the substream
    runtime->hw fields, while the other substream may update the runtime
    hw of another side on the fly.
    
    This is, however, racy and may result in the inconsistent values when
    both PCM streams perform the prepare concurrently.  One of the reason
    is that it overwrites the other's runtime->hw field; which is not only
    racy but also broken when it's called before the open of another side
    finishes.  And, since the reference to runtime->hw isn't protected,
    the concurrent write may give the partial value update and become
    inconsistent.
    
    This patch is an attempt to fix and clean up:
    - The prepare doesn't change the runtime->hw of other side any longer,
      but only update the cable->hw that is referred commonly.
    - The extra rules refer to the loopback_pcm object instead of the
      runtime->hw.  The actual hw is deduced from cable->hw.
    - The extra rules take the cable_lock to protect against the race.
    
    Fixes: b1c73fc8e697 ("ALSA: snd-aloop: Fix hw_params restrictions and checking")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8218eb1c28932b4e2f81c306d57a7c7019f348d9
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 5 16:15:33 2018 +0100

    ALSA: aloop: Fix inconsistent format due to incomplete rule
    
    commit b088b53e20c7d09b5ab84c5688e609f478e5c417 upstream.
    
    The extra hw constraint rule for the formats the aloop driver
    introduced has a slight flaw, where it doesn't return a positive value
    when the mask got changed.  It came from the fact that it's basically
    a copy&paste from snd_hw_constraint_mask64().  The original code is
    supposed to be a single-shot and it modifies the mask bits only once
    and never after, while what we need for aloop is the dynamic hw rule
    that limits the mask bits.
    
    This difference results in the inconsistent state, as the hw_refine
    doesn't apply the dependencies fully.  The worse and surprisingly
    result is that it causes a crash in OSS emulation when multiple
    full-duplex reads/writes are performed concurrently (I leave why it
    triggers Oops to readers as a homework).
    
    For fixing this, replace a few open-codes with the standard
    snd_mask_*() macros.
    
    Reported-by: syzbot+3902b5220e8ca27889ca@syzkaller.appspotmail.com
    Fixes: b1c73fc8e697 ("ALSA: snd-aloop: Fix hw_params restrictions and checking")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0e405098eb4ff9034e42810bde1ff24c63417e39
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 5 16:09:47 2018 +0100

    ALSA: aloop: Release cable upon open error path
    
    commit 9685347aa0a5c2869058ca6ab79fd8e93084a67f upstream.
    
    The aloop runtime object and its assignment in the cable are left even
    when opening a substream fails.  This doesn't mean any memory leak,
    but it still keeps the invalid pointer that may be referred by the
    another side of the cable spontaneously, which is a potential Oops
    cause.
    
    Clean up the cable assignment and the empty cable upon the error path
    properly.
    
    Fixes: 597603d615d2 ("ALSA: introduce the snd-aloop module for the PCM loopback")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bbd3b58030892e40a1d7d2b2fee52b2d1961eefe
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Thu Jan 4 22:25:07 2018 +1100

    xfrm: Use __skb_queue_tail in xfrm_trans_queue
    
    commit d16b46e4fd8bc6063624605f25b8c0835bb1fbe3 upstream.
    
    We do not need locking in xfrm_trans_queue because it is designed
    to use per-CPU buffers.  However, the original code incorrectly
    used skb_queue_tail which takes the lock.  This patch switches
    it to __skb_queue_tail instead.
    
    Reported-and-tested-by: Artem Savkov <asavkov@redhat.com>
    Fixes: acf568ee859f ("xfrm: Reinject transport-mode packets...")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0f8388e5735898d5bf0a1615c812ed59f268dca9
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 29 14:30:19 2017 -0600

    crypto: algapi - fix NULL dereference in crypto_remove_spawns()
    
    commit 9a00674213a3f00394f4e3221b88f2d21fc05789 upstream.
    
    syzkaller triggered a NULL pointer dereference in crypto_remove_spawns()
    via a program that repeatedly and concurrently requests AEADs
    "authenc(cmac(des3_ede-asm),pcbc-aes-aesni)" and hashes "cmac(des3_ede)"
    through AF_ALG, where the hashes are requested as "untested"
    (CRYPTO_ALG_TESTED is set in ->salg_mask but clear in ->salg_feat; this
    causes the template to be instantiated for every request).
    
    Although AF_ALG users really shouldn't be able to request an "untested"
    algorithm, the NULL pointer dereference is actually caused by a
    longstanding race condition where crypto_remove_spawns() can encounter
    an instance which has had spawn(s) "grabbed" but hasn't yet been
    registered, resulting in ->cra_users still being NULL.
    
    We probably should properly initialize ->cra_users earlier, but that
    would require updating many templates individually.  For now just fix
    the bug in a simple way that can easily be backported: make
    crypto_remove_spawns() treat a NULL ->cra_users list as empty.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3535183db06e2c7729ab145b55e80d570c098940
Author: Anshuman Khandual <khandual@linux.vnet.ibm.com>
Date:   Thu Jan 4 16:17:52 2018 -0800

    mm/mprotect: add a cond_resched() inside change_pmd_range()
    
    commit 4991c09c7c812dba13ea9be79a68b4565bb1fa4e upstream.
    
    While testing on a large CPU system, detected the following RCU stall
    many times over the span of the workload.  This problem is solved by
    adding a cond_resched() in the change_pmd_range() function.
    
      INFO: rcu_sched detected stalls on CPUs/tasks:
       154-....: (670 ticks this GP) idle=022/140000000000000/0 softirq=2825/2825 fqs=612
       (detected by 955, t=6002 jiffies, g=4486, c=4485, q=90864)
      Sending NMI from CPU 955 to CPUs 154:
      NMI backtrace for cpu 154
      CPU: 154 PID: 147071 Comm: workload Not tainted 4.15.0-rc3+ #3
      NIP:  c0000000000b3f64 LR: c0000000000b33d4 CTR: 000000000000aa18
      REGS: 00000000a4b0fb44 TRAP: 0501   Not tainted  (4.15.0-rc3+)
      MSR:  8000000000009033 <SF,EE,ME,IR,DR,RI,LE>  CR: 22422082  XER: 00000000
      CFAR: 00000000006cf8f0 SOFTE: 1
      GPR00: 0010000000000000 c00003ef9b1cb8c0 c0000000010cc600 0000000000000000
      GPR04: 8e0000018c32b200 40017b3858fd6e00 8e0000018c32b208 40017b3858fd6e00
      GPR08: 8e0000018c32b210 40017b3858fd6e00 8e0000018c32b218 40017b3858fd6e00
      GPR12: ffffffffffffffff c00000000fb25100
      NIP [c0000000000b3f64] plpar_hcall9+0x44/0x7c
      LR [c0000000000b33d4] pSeries_lpar_flush_hash_range+0x384/0x420
      Call Trace:
        flush_hash_range+0x48/0x100
        __flush_tlb_pending+0x44/0xd0
        hpte_need_flush+0x408/0x470
        change_protection_range+0xaac/0xf10
        change_prot_numa+0x30/0xb0
        task_numa_work+0x2d0/0x3e0
        task_work_run+0x130/0x190
        do_notify_resume+0x118/0x120
        ret_from_except_lite+0x70/0x74
      Instruction dump:
      60000000 f8810028 7ca42b78 7cc53378 7ce63b78 7d074378 7d284b78 7d495378
      e9410060 e9610068 e9810070 44000022 <7d806378> e9810028 f88c0000 f8ac0008
    
    Link: http://lkml.kernel.org/r/20171214140551.5794-1-khandual@linux.vnet.ibm.com
    Signed-off-by: Anshuman Khandual <khandual@linux.vnet.ibm.com>
    Suggested-by: Nicholas Piggin <npiggin@gmail.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8dc435cfc6f1315737cdd324e8a4a1dec968c356
Author: Shuah Khan <shuah@kernel.org>
Date:   Fri Dec 22 17:00:06 2017 -0700

    usbip: remove kernel addresses from usb device and urb debug msgs
    
    commit e1346fd87c71a1f61de1fe476ec8df1425ac931c upstream.
    
    usbip_dump_usb_device() and usbip_dump_urb() print kernel addresses.
    Remove kernel addresses from usb device and urb debug msgs and improve
    the message content.
    
    Instead of printing parent device and bus addresses, print parent device
    and bus names.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit de98c69ff495ba992f6ddbbf097d3311ae92db34
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 4 16:39:27 2018 +0100

    ALSA: pcm: Add missing error checks in OSS emulation plugin builder
    
    commit 6708913750344a900f2e73bfe4a4d6dbbce4fe8d upstream.
    
    In the OSS emulation plugin builder where the frame size is parsed in
    the plugin chain, some places miss the possible errors returned from
    the plugin src_ or dst_frames callback.
    
    This patch papers over such places.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 99968853fcef73565a8289cf22b1e247ba504de4
Author: Christian Holl <cyborgx1@gmail.com>
Date:   Wed Jan 3 19:53:02 2018 +0100

    USB: serial: cp210x: add new device ID ELV ALC 8xxx
    
    commit d14ac576d10f865970bb1324d337e5e24d79aaf4 upstream.
    
    This adds the ELV ALC 8xxx Battery Charging device
    to the list of USB IDs of drivers/usb/serial/cp210x.c
    
    Signed-off-by: Christian Holl <cyborgx1@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9a2d195c51a6a1fd965cc5b81146189eda9457ac
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Jan 3 23:49:18 2018 +0100

    mmc: s3mci: mark debug_regs[] as static
    
    commit 2bd7b4aacdb6efa5ccd4749c365c171b884791d2 upstream.
    
    The global array clashes with a newly added symbol of the same name:
    
    drivers/staging/ccree/cc_debugfs.o:(.data+0x0): multiple definition of `debug_regs'
    drivers/mmc/host/s3cmci.o:(.data+0x70): first defined here
    
    We should fix both, this one addresses the s3cmci driver by removing
    the symbol from the global namespace. While at it, this separates
    the declaration from the type definition and makes the variable const.
    
    Fixes: 9bdd203b4dc8 ("s3cmci: add debugfs support for examining driver and hardware state")
    Fixes: b3ec9a6736f2 ("staging: ccree: staging: ccree: replace sysfs by debugfs interface")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a8aa550c5389159756696f95e833de8f776c273c
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Mon Dec 11 16:26:40 2017 +0900

    e1000e: Fix e1000_check_for_copper_link_ich8lan return value.
    
    commit 4110e02eb45ea447ec6f5459c9934de0a273fb91 upstream.
    
    e1000e_check_for_copper_link() and e1000_check_for_copper_link_ich8lan()
    are the two functions that may be assigned to mac.ops.check_for_link when
    phy.media_type == e1000_media_type_copper. Commit 19110cfbb34d ("e1000e:
    Separate signaling for link check/link up") changed the meaning of the
    return value of check_for_link for copper media but only adjusted the first
    function. This patch adjusts the second function likewise.
    
    Reported-by: Christian Hesse <list@eworm.de>
    Reported-by: Gabriel C <nix.or.die@gmail.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=198047
    Fixes: 19110cfbb34d ("e1000e: Separate signaling for link check/link up")
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Tested-by: Christian Hesse <list@eworm.de>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    [bwh: Backported to 3.2: e1000_check_for_copper_link() has a single return
     statement for success and error cases, so set ret_val in the link-up
     case instead of changing that statement.]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ac8f81b0f33b6264fa60163ca2510e7af2ec38bb
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Fri Jul 21 11:36:26 2017 -0700

    e1000e: Separate signaling for link check/link up
    
    commit 19110cfbb34d4af0cdfe14cd243f3b09dc95b013 upstream.
    
    Lennart reported the following race condition:
    
    \ e1000_watchdog_task
        \ e1000e_has_link
            \ hw->mac.ops.check_for_link() === e1000e_check_for_copper_link
                /* link is up */
                mac->get_link_status = false;
    
                                /* interrupt */
                                \ e1000_msix_other
                                    hw->mac.get_link_status = true;
    
            link_active = !hw->mac.get_link_status
            /* link_active is false, wrongly */
    
    This problem arises because the single flag get_link_status is used to
    signal two different states: link status needs checking and link status is
    down.
    
    Avoid the problem by using the return value of .check_for_link to signal
    the link status to e1000e_has_link().
    
    Reported-by: Lennart Sorensen <lsorense@csclub.uwaterloo.ca>
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a36af0bf619c90274a11c518437c306fdaed4279
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 1 09:50:50 2018 +0100

    ALSA: pcm: Remove incorrect snd_BUG_ON() usages
    
    commit fe08f34d066f4404934a509b6806db1a4f700c86 upstream.
    
    syzkaller triggered kernel warnings through PCM OSS emulation at
    closing a stream:
      WARNING: CPU: 0 PID: 3502 at sound/core/pcm_lib.c:1635
      snd_pcm_hw_param_first+0x289/0x690 sound/core/pcm_lib.c:1635
      Call Trace:
      ....
       snd_pcm_hw_param_near.constprop.27+0x78d/0x9a0 sound/core/oss/pcm_oss.c:457
       snd_pcm_oss_change_params+0x17d3/0x3720 sound/core/oss/pcm_oss.c:969
       snd_pcm_oss_make_ready+0xaa/0x130 sound/core/oss/pcm_oss.c:1128
       snd_pcm_oss_sync+0x257/0x830 sound/core/oss/pcm_oss.c:1638
       snd_pcm_oss_release+0x20b/0x280 sound/core/oss/pcm_oss.c:2431
       __fput+0x327/0x7e0 fs/file_table.c:210
       ....
    
    This happens while it tries to open and set up the aloop device
    concurrently.  The warning above (invoked from snd_BUG_ON() macro) is
    to detect the unexpected logical error where snd_pcm_hw_refine() call
    shouldn't fail.  The theory is true for the case where the hw_params
    config rules are static.  But for an aloop device, the hw_params rule
    condition does vary dynamically depending on the connected target;
    when another device is opened and changes the parameters, the device
    connected in another side is also affected, and it caused the error
    from snd_pcm_hw_refine().
    
    That is, the simplest "solution" for this is to remove the incorrect
    assumption of static rules, and treat such an error as a normal error
    path.  As there are a couple of other places using snd_BUG_ON()
    incorrectly, this patch removes these spurious snd_BUG_ON() calls.
    
    Reported-by: syzbot+6f11c7e2a1b91d466432@syzkaller.appspotmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c6071dd45d32f28549dad3afda7fa1a01c4bd6f5
Author: David Howells <dhowells@redhat.com>
Date:   Tue Jan 2 10:02:19 2018 +0000

    fscache: Fix the default for fscache_maybe_release_page()
    
    commit 98801506552593c9b8ac11021b0cdad12cab4f6b upstream.
    
    Fix the default for fscache_maybe_release_page() for when the cookie isn't
    valid or the page isn't cached.  It mustn't return false as that indicates
    the page cannot yet be freed.
    
    The problem with the default is that if, say, there's no cache, but a
    network filesystem's pages are using up almost all the available memory, a
    system can OOM because the filesystem ->releasepage() op will not allow
    them to be released as fscache_maybe_release_page() incorrectly prevents
    it.
    
    This can be tested by writing a sequence of 512MiB files to an AFS mount.
    It does not affect NFS or CIFS because both of those wrap the call in a
    check of PG_fscache and it shouldn't bother Ceph as that only has
    PG_private set whilst writeback is in progress.  This might be an issue for
    9P, however.
    
    Note that the pages aren't entirely stuck.  Removing a file or unmounting
    will clear things because that uses ->invalidatepage() instead.
    
    Fixes: 201a15428bd5 ("FS-Cache: Handle pages pending storage that get evicted under OOM conditions")
    Reported-by: Marc Dionne <marc.dionne@auristor.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Acked-by: Al Viro <viro@zeniv.linux.org.uk>
    Tested-by: Marc Dionne <marc.dionne@auristor.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 68942137fdbf0ef5bc966d522d24afa193c16acd
Author: Diego Elio Pettenò <flameeyes@flameeyes.eu>
Date:   Fri Dec 29 09:54:25 2017 +0000

    USB: serial: cp210x: add IDs for LifeScan OneTouch Verio IQ
    
    commit 4307413256ac1e09b8f53e8715af3df9e49beec3 upstream.
    
    Add IDs for the OneTouch Verio IQ that comes with an embedded
    USB-to-serial converter.
    
    Signed-off-by: Diego Elio Pettenò <flameeyes@flameeyes.eu>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6b85c8c37160135bd9b3fb1dc652ddd230093c25
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Dec 29 17:34:43 2017 -0800

    kbuild: add '-fno-stack-check' to kernel build options
    
    commit 3ce120b16cc548472f80cf8644f90eda958cf1b6 upstream.
    
    It appears that hardened gentoo enables "-fstack-check" by default for
    gcc.
    
    That doesn't work _at_all_ for the kernel, because the kernel stack
    doesn't act like a user stack at all: it's much smaller, and it doesn't
    auto-expand on use.  So the extra "probe one page below the stack" code
    generated by -fstack-check just breaks the kernel in horrible ways,
    causing infinite double faults etc.
    
    [ I have to say, that the particular code gcc generates looks very
      stupid even for user space where it works, but that's a separate
      issue.  ]
    
    Reported-and-tested-by: Alexander Tsoy <alexander@tsoy.me>
    Reported-and-tested-by: Toralf Förster <toralf.foerster@gmx.de>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ac047b312a2945eea68a40f397bc0eebfa55f34d
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 29 18:15:23 2017 -0600

    af_key: fix buffer overread in parse_exthdrs()
    
    commit 4e765b4972af7b07adcb1feb16e7a525ce1f6b28 upstream.
    
    If a message sent to a PF_KEY socket ended with an incomplete extension
    header (fewer than 4 bytes remaining), then parse_exthdrs() read past
    the end of the message, into uninitialized memory.  Fix it by returning
    -EINVAL in this case.
    
    Reproducer:
    
            #include <linux/pfkeyv2.h>
            #include <sys/socket.h>
            #include <unistd.h>
    
            int main()
            {
                    int sock = socket(PF_KEY, SOCK_RAW, PF_KEY_V2);
                    char buf[17] = { 0 };
                    struct sadb_msg *msg = (void *)buf;
    
                    msg->sadb_msg_version = PF_KEY_V2;
                    msg->sadb_msg_type = SADB_DELETE;
                    msg->sadb_msg_len = 2;
    
                    write(sock, buf, 17);
            }
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5211e8d11e9560907b0c577d8d4cfe1054c0c7b7
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 29 18:13:05 2017 -0600

    af_key: fix buffer overread in verify_address_len()
    
    commit 06b335cb51af018d5feeff5dd4fd53847ddb675a upstream.
    
    If a message sent to a PF_KEY socket ended with one of the extensions
    that takes a 'struct sadb_address' but there were not enough bytes
    remaining in the message for the ->sa_family member of the 'struct
    sockaddr' which is supposed to follow, then verify_address_len() read
    past the end of the message, into uninitialized memory.  Fix it by
    returning -EINVAL in this case.
    
    This bug was found using syzkaller with KMSAN.
    
    Reproducer:
    
            #include <linux/pfkeyv2.h>
            #include <sys/socket.h>
            #include <unistd.h>
    
            int main()
            {
                    int sock = socket(PF_KEY, SOCK_RAW, PF_KEY_V2);
                    char buf[24] = { 0 };
                    struct sadb_msg *msg = (void *)buf;
                    struct sadb_address *addr = (void *)(msg + 1);
    
                    msg->sadb_msg_version = PF_KEY_V2;
                    msg->sadb_msg_type = SADB_DELETE;
                    msg->sadb_msg_len = 3;
                    addr->sadb_address_len = 1;
                    addr->sadb_address_exttype = SADB_EXT_ADDRESS_SRC;
    
                    write(sock, buf, 24);
            }
    
    Reported-by: Alexander Potapenko <glider@google.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1d5100425f88b1280bef8571bf1b4de90d25597d
Author: Denys Vlasenko <dvlasenk@redhat.com>
Date:   Mon Mar 9 15:52:17 2015 +0100

    include/stddef.h: Move offsetofend() from vfio.h to a generic kernel header
    
    commit 3876488444e71238e287459c39d7692b6f718c3e upstream.
    
    Suggested by Andy.
    
    Suggested-by: Andy Lutomirski <luto@amacapital.net>
    Signed-off-by: Denys Vlasenko <dvlasenk@redhat.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Alexei Starovoitov <ast@plumgrid.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Will Drewry <wad@chromium.org>
    Link: http://lkml.kernel.org/r/1425912738-559-1-git-send-email-dvlasenk@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [bwh: Backported to 3.2:
     - There is no definition in vfio.h to move
     - Put the definition inside the #ifdef __KERNEL__ section]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cf959482276e2f40f50f5f11c25e9cc9acf908e7
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Fri Dec 22 20:32:35 2017 -0500

    ring-buffer: Mask out the info bits when returning buffer page length
    
    commit 45d8b80c2ac5d21cd1e2954431fb676bc2b1e099 upstream.
    
    Two info bits were added to the "commit" part of the ring buffer data page
    when returned to be consumed. This was to inform the user space readers that
    events have been missed, and that the count may be stored at the end of the
    page.
    
    What wasn't handled, was the splice code that actually called a function to
    return the length of the data in order to zero out the rest of the page
    before sending it up to user space. These data bits were returned with the
    length making the value negative, and that negative value was not checked.
    It was compared to PAGE_SIZE, and only used if the size was less than
    PAGE_SIZE. Luckily PAGE_SIZE is unsigned long which made the compare an
    unsigned compare, meaning the negative size value did not end up causing a
    large portion of memory to be randomly zeroed out.
    
    Fixes: 66a8cb95ed040 ("ring-buffer: Add place holder recording of dropped events")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 792926370daf6450edfdd3308702c31a94d139ae
Author: Max Schulze <max.schulze@posteo.de>
Date:   Wed Dec 20 20:47:44 2017 +0100

    USB: serial: ftdi_sio: add id for Airbus DS P8GR
    
    commit c6a36ad383559a60a249aa6016cebf3cb8b6c485 upstream.
    
    Add AIRBUS_DS_P8GR device IDs to ftdi_sio driver.
    
    Signed-off-by: Max Schulze <max.schulze@posteo.de>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f9275c0530b48be79bdf889841bf68663bb0675b
Author: Jan Engelhardt <jengelh@inai.de>
Date:   Tue Dec 19 19:09:07 2017 +0100

    crypto: n2 - cure use after free
    
    commit 203f45003a3d03eea8fa28d74cfc74c354416fdb upstream.
    
    queue_cache_init is first called for the Control Word Queue
    (n2_crypto_probe). At that time, queue_cache[0] is NULL and a new
    kmem_cache will be allocated. If the subsequent n2_register_algs call
    fails, the kmem_cache will be released in queue_cache_destroy, but
    queue_cache_init[0] is not set back to NULL.
    
    So when the Module Arithmetic Unit gets probed next (n2_mau_probe),
    queue_cache_init will not allocate a kmem_cache again, but leave it
    as its bogus value, causing a BUG() to trigger when queue_cache[0] is
    eventually passed to kmem_cache_zalloc:
    
            n2_crypto: Found N2CP at /virtual-devices@100/n2cp@7
            n2_crypto: Registered NCS HVAPI version 2.0
            called queue_cache_init
            n2_crypto: md5 alg registration failed
            n2cp f028687c: /virtual-devices@100/n2cp@7: Unable to register algorithms.
            called queue_cache_destroy
            n2cp: probe of f028687c failed with error -22
            n2_crypto: Found NCP at /virtual-devices@100/ncp@6
            n2_crypto: Registered NCS HVAPI version 2.0
            called queue_cache_init
            kernel BUG at mm/slab.c:2993!
            Call Trace:
             [0000000000604488] kmem_cache_alloc+0x1a8/0x1e0
                      (inlined) kmem_cache_zalloc
                      (inlined) new_queue
                      (inlined) spu_queue_setup
                      (inlined) handle_exec_unit
             [0000000010c61eb4] spu_mdesc_scan+0x1f4/0x460 [n2_crypto]
             [0000000010c62b80] n2_mau_probe+0x100/0x220 [n2_crypto]
             [000000000084b174] platform_drv_probe+0x34/0xc0
    
    Signed-off-by: Jan Engelhardt <jengelh@inai.de>
    Acked-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c59b407a8cff871710b885ca2d33e2de00a4c319
Author: Steve Wise <larrystevenwise@gmail.com>
Date:   Mon Dec 18 13:10:00 2017 -0800

    iw_cxgb4: Only validate the MSN for successful completions
    
    commit f55688c45442bc863f40ad678c638785b26cdce6 upstream.
    
    If the RECV CQE is in error, ignore the MSN check.  This was causing
    recvs that were flushed into the sw cq to be completed with the wrong
    status (BAD_MSN instead of FLUSHED).
    
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8711719778f9e003be82bba0362e87b97b46c891
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Dec 20 17:57:06 2017 -0800

    n_tty: fix EXTPROC vs ICANON interaction with TIOCINQ (aka FIONREAD)
    
    commit 966031f340185eddd05affcf72b740549f056348 upstream.
    
    We added support for EXTPROC back in 2010 in commit 26df6d13406d ("tty:
    Add EXTPROC support for LINEMODE") and the intent was to allow it to
    override some (all?) ICANON behavior.  Quoting from that original commit
    message:
    
             There is a new bit in the termios local flag word, EXTPROC.
             When this bit is set, several aspects of the terminal driver
             are disabled.  Input line editing, character echo, and mapping
             of signals are all disabled.  This allows the telnetd to turn
             off these functions when in linemode, but still keep track of
             what state the user wants the terminal to be in.
    
    but the problem turns out that "several aspects of the terminal driver
    are disabled" is a bit ambiguous, and you can really confuse the n_tty
    layer by setting EXTPROC and then causing some of the ICANON invariants
    to no longer be maintained.
    
    This fixes at least one such case (TIOCINQ) becoming unhappy because of
    the confusion over whether ICANON really means ICANON when EXTPROC is set.
    
    This basically makes TIOCINQ match the case of read: if EXTPROC is set,
    we ignore ICANON.  Also, make sure to reset the ICANON state ie EXTPROC
    changes, not just if ICANON changes.
    
    Fixes: 26df6d13406d ("tty: Add EXTPROC support for LINEMODE")
    Reported-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Cc: Jiri Slaby <jslaby@suse.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 53ceac7ed0d2911278155d8d2bedcd0499847db3
Author: Dmitry Fleytman Dmitry Fleytman <dmitry.fleytman@gmail.com>
Date:   Tue Dec 19 06:02:04 2017 +0200

    usb: Add device quirk for Logitech HD Pro Webcam C925e
    
    commit 7f038d256c723dd390d2fca942919573995f4cfd upstream.
    
    Commit e0429362ab15
    ("usb: Add device quirk for Logitech HD Pro Webcams C920 and C930e")
    introduced quirk to workaround an issue with some Logitech webcams.
    
    There is one more model that has the same issue - C925e, so applying
    the same quirk as well.
    
    See aforementioned commit message for detailed explanation of the problem.
    
    Signed-off-by: Dmitry Fleytman <dmitry.fleytman@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c4239fb31cbf9c678e94fbb270d5e6c0c5aa007e
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue Dec 12 16:11:30 2017 +0100

    usb: add RESET_RESUME for ELSA MicroLink 56K
    
    commit b9096d9f15c142574ebebe8fbb137012bb9d99c2 upstream.
    
    This modem needs this quirk to operate. It produces timeouts when
    resumed without reset.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 10a272f0242add15497e485c8d8bf31debd5ab20
Author: Juan Zea <juan.zea@qindel.com>
Date:   Fri Dec 15 10:21:20 2017 +0100

    usbip: fix usbip bind writing random string after command in match_busid
    
    commit 544c4605acc5ae4afe7dd5914147947db182f2fb upstream.
    
    usbip bind writes commands followed by random string when writing to
    match_busid attribute in sysfs, caused by using full variable size
    instead of string length.
    
    Signed-off-by: Juan Zea <juan.zea@qindel.com>
    Acked-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 10f1f61202688423e5e70f78f72c0af2b30ea343
Author: Shuah Khan <shuah@kernel.org>
Date:   Fri Dec 15 10:50:09 2017 -0700

    usbip: prevent leaking socket pointer address in messages
    
    commit 90120d15f4c397272aaf41077960a157fc4212bf upstream.
    
    usbip driver is leaking socket pointer address in messages. Remove
    the messages that aren't useful and print sockfd in the ones that
    are useful for debugging.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: adjust filenames, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e3711fb0fa193edd88e1797542016ee191e9aa9c
Author: Shuah Khan <shuah@kernel.org>
Date:   Mon Dec 18 17:23:37 2017 -0700

    usbip: stub: stop printing kernel pointer addresses in messages
    
    commit 248a22044366f588d46754c54dfe29ffe4f8b4df upstream.
    
    Remove and/or change debug, info. and error messages to not print
    kernel pointer addresses.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2:
     - Drop change in stub_complete()
     - Adjust filenames, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ed9e12b36ee78f8ac777baaa993f865af157560a
Author: Shuah Khan <shuah@kernel.org>
Date:   Mon Dec 18 17:24:22 2017 -0700

    usbip: vhci: stop printing kernel pointer addresses in messages
    
    commit 8272d099d05f7ab2776cf56a2ab9f9443be18907 upstream.
    
    Remove and/or change debug, info. and error messages to not print
    kernel pointer addresses.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: adjust filenames, context, indentation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5f9b640d438daf4431c536c94420532f8f519eba
Author: Bart Westgeest <bart@elbrys.com>
Date:   Mon Dec 19 17:44:11 2011 -0500

    staging: usbip: removed dead code from receive function
    
    commit 5a08c5267e45fe936452051a8c126e8418984eb7 upstream.
    
    The usbip_xmit function supported sending and receiving data, however
    the sending part of the function was never used/executed. Renamed the
    function to usbip_recv, and removed the unused code.
    
    Signed-off-by: Bart Westgeest <bart@elbrys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9f98e444a3908c9c9da99368150b7ad96060d075
Author: SZ Lin (林上智) <sz.lin@moxa.com>
Date:   Tue Dec 19 17:40:32 2017 +0800

    USB: serial: option: adding support for YUGA CLM920-NC5
    
    commit 3920bb713038810f25770e7545b79f204685c8f2 upstream.
    
    This patch adds support for YUGA CLM920-NC5 PID 0x9625 USB modem to option
    driver.
    
    Interface layout:
    0: QCDM/DIAG
    1: ADB
    2: MODEM
    3: AT
    4: RMNET
    
    Signed-off-by: Taiyi Wu <taiyity.wu@moxa.com>
    Signed-off-by: SZ Lin (林上智) <sz.lin@moxa.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 69895c5ea0ca2e8d7de1e6d36965d0ab9730787f
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Dec 15 16:40:44 2017 +1100

    xfrm: Reinject transport-mode packets through tasklet
    
    commit acf568ee859f098279eadf551612f103afdacb4e upstream.
    
    This is an old bugbear of mine:
    
    https://www.mail-archive.com/netdev@vger.kernel.org/msg03894.html
    
    By crafting special packets, it is possible to cause recursion
    in our kernel when processing transport-mode packets at levels
    that are only limited by packet size.
    
    The easiest one is with DNAT, but an even worse one is where
    UDP encapsulation is used in which case you just have to insert
    an UDP encapsulation header in between each level of recursion.
    
    This patch avoids this problem by reinjecting tranport-mode packets
    through a tasklet.
    
    Fixes: b05e106698d9 ("[IPV4/6]: Netfilter IPsec input hooks")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    [bwh: Backported to 3.2:
     - netfilter finish callbacks only receive an sk_buff pointer
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1b8f0ef7f1e9f442377b480643e8db601643db30
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Dec 18 23:36:57 2017 +0100

    ALSA: usb-audio: Fix the missing ctl name suffix at parsing SU
    
    commit 5a15f289ee87eaf33f13f08a4909ec99d837ec5f upstream.
    
    The commit 89b89d121ffc ("ALSA: usb-audio: Add check return value for
    usb_string()") added the check of the return value from
    snd_usb_copy_string_desc(), which is correct per se, but it introduced
    a regression.  In the original code, either the "Clock Source",
    "Playback Source" or "Capture Source" suffix is added after the
    terminal string, while the commit changed it to add the suffix only
    when get_term_name() is failing.  It ended up with an incorrect ctl
    name like "PCM" instead of "PCM Capture Source".
    
    Also, even the original code has a similar bug: when the ctl name is
    generated from snd_usb_copy_string_desc() for the given iSelector, it
    also doesn't put the suffix.
    
    This patch addresses these issues: the suffix is added always when no
    static mapping is found.  Also the patch tries to put more comments
    and cleans up the if/else block for better readability in order to
    avoid the same pitfall again.
    
    Fixes: 89b89d121ffc ("ALSA: usb-audio: Add check return value for usb_string()")
    Reported-and-tested-by: Mauro Santos <registo.mailling@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d3e3146caf27aabb40327f113c26c9d39e3ba982
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Mon Dec 18 17:35:09 2017 +0200

    net: bridge: fix early call to br_stp_change_bridge_id and plug newlink leaks
    
    commit 84aeb437ab98a2bce3d4b2111c79723aedfceb33 upstream.
    
    The early call to br_stp_change_bridge_id in bridge's newlink can cause
    a memory leak if an error occurs during the newlink because the fdb
    entries are not cleaned up if a different lladdr was specified, also
    another minor issue is that it generates fdb notifications with
    ifindex = 0. Another unrelated memory leak is the bridge sysfs entries
    which get added on NETDEV_REGISTER event, but are not cleaned up in the
    newlink error path. To remove this special case the call to
    br_stp_change_bridge_id is done after netdev register and we cleanup the
    bridge on changelink error via br_dev_delete to plug all leaks.
    
    This patch makes netlink bridge destruction on newlink error the same as
    dellink and ioctl del which is necessary since at that point we have a
    fully initialized bridge device.
    
    To reproduce the issue:
    $ ip l add br0 address 00:11:22:33:44:55 type bridge group_fwd_mask 1
    RTNETLINK answers: Invalid argument
    
    $ rmmod bridge
    [ 1822.142525] =============================================================================
    [ 1822.143640] BUG bridge_fdb_cache (Tainted: G           O    ): Objects remaining in bridge_fdb_cache on __kmem_cache_shutdown()
    [ 1822.144821] -----------------------------------------------------------------------------
    
    [ 1822.145990] Disabling lock debugging due to kernel taint
    [ 1822.146732] INFO: Slab 0x0000000092a844b2 objects=32 used=2 fp=0x00000000fef011b0 flags=0x1ffff8000000100
    [ 1822.147700] CPU: 2 PID: 13584 Comm: rmmod Tainted: G    B      O     4.15.0-rc2+ #87
    [ 1822.148578] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.7.5-20140531_083030-gandalf 04/01/2014
    [ 1822.150008] Call Trace:
    [ 1822.150510]  dump_stack+0x78/0xa9
    [ 1822.151156]  slab_err+0xb1/0xd3
    [ 1822.151834]  ? __kmalloc+0x1bb/0x1ce
    [ 1822.152546]  __kmem_cache_shutdown+0x151/0x28b
    [ 1822.153395]  shutdown_cache+0x13/0x144
    [ 1822.154126]  kmem_cache_destroy+0x1c0/0x1fb
    [ 1822.154669]  SyS_delete_module+0x194/0x244
    [ 1822.155199]  ? trace_hardirqs_on_thunk+0x1a/0x1c
    [ 1822.155773]  entry_SYSCALL_64_fastpath+0x23/0x9a
    [ 1822.156343] RIP: 0033:0x7f929bd38b17
    [ 1822.156859] RSP: 002b:00007ffd160e9a98 EFLAGS: 00000202 ORIG_RAX: 00000000000000b0
    [ 1822.157728] RAX: ffffffffffffffda RBX: 00005578316ba090 RCX: 00007f929bd38b17
    [ 1822.158422] RDX: 00007f929bd9ec60 RSI: 0000000000000800 RDI: 00005578316ba0f0
    [ 1822.159114] RBP: 0000000000000003 R08: 00007f929bff5f20 R09: 00007ffd160e8a11
    [ 1822.159808] R10: 00007ffd160e9860 R11: 0000000000000202 R12: 00007ffd160e8a80
    [ 1822.160513] R13: 0000000000000000 R14: 0000000000000000 R15: 00005578316ba090
    [ 1822.161278] INFO: Object 0x000000007645de29 @offset=0
    [ 1822.161666] INFO: Object 0x00000000d5df2ab5 @offset=128
    
    Fixes: 30313a3d5794 ("bridge: Handle IFLA_ADDRESS correctly when creating bridge device")
    Fixes: 5b8d5429daa0 ("bridge: netlink: register netdevice before executing changelink")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2: register_netdevice() was the last thing done in
     br_dev_newlink(), so no extra cleanup is needed]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 538839212f263261d1f91ea922f4be52c91e8e0b
Author: Zhao Qiang <qiang.zhao@nxp.com>
Date:   Mon Dec 18 10:26:43 2017 +0800

    net: phy: marvell: Limit 88m1101 autoneg errata to 88E1145 as well.
    
    commit c505873eaece2b4aefd07d339dc7e1400e0235ac upstream.
    
    88E1145 also need this autoneg errata.
    
    Fixes: f2899788353c ("net: phy: marvell: Limit errata to 88m1101")
    Signed-off-by: Zhao Qiang <qiang.zhao@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8f8a0c9e60213d2ab8ea2520ba79c8d1c58fe60a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Dec 14 13:31:16 2017 +0100

    ACPI: APEI / ERST: Fix missing error handling in erst_reader()
    
    commit bb82e0b4a7e96494f0c1004ce50cec3d7b5fb3d1 upstream.
    
    The commit f6f828513290 ("pstore: pass allocated memory region back to
    caller") changed the check of the return value from erst_read() in
    erst_reader() in the following way:
    
            if (len == -ENOENT)
                    goto skip;
    -       else if (len < 0) {
    -               rc = -1;
    +       else if (len < sizeof(*rcd)) {
    +               rc = -EIO;
                    goto out;
    
    This introduced another bug: since the comparison with sizeof() is
    cast to unsigned, a negative len value doesn't hit any longer.
    As a result, when an error is returned from erst_read(), the code
    falls through, and it may eventually lead to some weird thing like
    memory corruption.
    
    This patch adds the negative error value check more explicitly for
    addressing the issue.
    
    Fixes: f6f828513290 (pstore: pass allocated memory region back to caller)
    Tested-by: Jerry Tang <jtang@suse.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Acked-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 74c74ba77281284e92cd37eb8dbe0cee0f20c9d9
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Dec 15 03:07:18 2017 +0100

    PCI / PM: Force devices to D0 in pci_pm_thaw_noirq()
    
    commit 5839ee7389e893a31e4e3c9cf17b50d14103c902 upstream.
    
    It is incorrect to call pci_restore_state() for devices in low-power
    states (D1-D3), as that involves the restoration of MSI setup which
    requires MMIO to be operational and that is only the case in D0.
    
    However, pci_pm_thaw_noirq() may do that if the driver's "freeze"
    callbacks put the device into a low-power state, so fix it by making
    it force devices into D0 via pci_set_power_state() instead of trying
    to "update" their power state which is pointless.
    
    Fixes: e60514bd4485 (PCI/PM: Restore the status of PCI devices across hibernation)
    Reported-by: Thomas Gleixner <tglx@linutronix.de>
    Reported-by: Maarten Lankhorst <dev@mblankhorst.nl>
    Tested-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Maarten Lankhorst <dev@mblankhorst.nl>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cf004884bb1b7477bae56668be41580c798a3aed
Author: Helge Deller <deller@gmx.de>
Date:   Tue Dec 12 21:52:26 2017 +0100

    parisc: Hide Diva-built-in serial aux and graphics card
    
    commit bcf3f1752a622f1372d3252d0fea8855d89812e7 upstream.
    
    Diva GSP card has built-in serial AUX port and ATI graphic card which simply
    don't work and which both don't have external connectors.  User Guides even
    mention that those devices shouldn't be used.
    So, prevent that Linux drivers try to enable those devices.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5344d279331874572d59960247bff1610636b250
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Dec 15 10:32:03 2017 +0100

    posix-timer: Properly check sigevent->sigev_notify
    
    commit cef31d9af908243421258f1df35a4a644604efbe upstream.
    
    timer_create() specifies via sigevent->sigev_notify the signal delivery for
    the new timer. The valid modes are SIGEV_NONE, SIGEV_SIGNAL, SIGEV_THREAD
    and (SIGEV_SIGNAL | SIGEV_THREAD_ID).
    
    The sanity check in good_sigevent() is only checking the valid combination
    for the SIGEV_THREAD_ID bit, i.e. SIGEV_SIGNAL, but if SIGEV_THREAD_ID is
    not set it accepts any random value.
    
    This has no real effects on the posix timer and signal delivery code, but
    it affects show_timer() which handles the output of /proc/$PID/timers. That
    function uses a string array to pretty print sigev_notify. The access to
    that array has no bound checks, so random sigev_notify cause access beyond
    the array bounds.
    
    Add proper checks for the valid notify modes and remove the SIGEV_THREAD_ID
    masking from various code pathes as SIGEV_NONE can never be set in
    combination with SIGEV_THREAD_ID.
    
    Reported-by: Eric Biggers <ebiggers3@gmail.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Reported-by: Alexey Dobriyan <adobriyan@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: John Stultz <john.stultz@linaro.org>
    [bwh: Backported to 3.2:
     - Add sig_none variable in common_timer_get(), added earlier upstream
     - Adjust filename, context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b520f2dc407ffcb097efd2282b42c26bed8492b7
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Mon Jan 22 20:11:06 2018 +0000

    nfsd: auth: Fix gid sorting when rootsquash enabled
    
    commit 1995266727fa8143897e89b55f5d3c79aa828420 upstream.
    
    Commit bdcf0a423ea1 ("kernel: make groups_sort calling a responsibility
    group_info allocators") appears to break nfsd rootsquash in a pretty
    major way.
    
    It adds a call to groups_sort() inside the loop that copies/squashes
    gids, which means the valid gids are sorted along with the following
    garbage.  The net result is that the highest numbered valid gids are
    replaced with any lower-valued garbage gids, possibly including 0.
    
    We should sort only once, after filling in all the gids.
    
    Fixes: bdcf0a423ea1 ("kernel: make groups_sort calling a responsibility ...")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Acked-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c4e6be3af955f2dfae7c0d74d0fc055bd88e0fcc
Author: Thiago Rafael Becker <thiago.becker@gmail.com>
Date:   Thu Dec 14 15:33:12 2017 -0800

    kernel: make groups_sort calling a responsibility group_info allocators
    
    commit bdcf0a423ea1c40bbb40e7ee483b50fc8aa3d758 upstream.
    
    In testing, we found that nfsd threads may call set_groups in parallel
    for the same entry cached in auth.unix.gid, racing in the call of
    groups_sort, corrupting the groups for that entry and leading to
    permission denials for the client.
    
    This patch:
     - Make groups_sort globally visible.
     - Move the call to groups_sort to the modifiers of group_info
     - Remove the call to groups_sort from set_groups
    
    Link: http://lkml.kernel.org/r/20171211151420.18655-1-thiago.becker@gmail.com
    Signed-off-by: Thiago Rafael Becker <thiago.becker@gmail.com>
    Reviewed-by: Matthew Wilcox <mawilcox@microsoft.com>
    Reviewed-by: NeilBrown <neilb@suse.com>
    Acked-by: "J. Bruce Fields" <bfields@fieldses.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.2:
     - Drop change in gss_rpc_xdr.c
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 734c4d00d1525f28cc5c659fafeac43e7f0b8dec
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Dec 14 16:44:12 2017 +0100

    ALSA: rawmidi: Avoid racy info ioctl via ctl device
    
    commit c1cfd9025cc394fd137a01159d74335c5ac978ce upstream.
    
    The rawmidi also allows to obtaining the information via ioctl of ctl
    API.  It means that user can issue an ioctl to the rawmidi device even
    when it's being removed as long as the control device is present.
    Although the code has some protection via the global register_mutex,
    its range is limited to the search of the corresponding rawmidi
    object, and the mutex is already unlocked at accessing the rawmidi
    object.  This may lead to a use-after-free.
    
    For avoiding it, this patch widens the application of register_mutex
    to the whole snd_rawmidi_info_select() function.  We have another
    mutex per rawmidi object, but this operation isn't very hot path, so
    it shouldn't matter from the performance POV.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 741e32f1400a3441779f87a6bf37ce26bcf49806
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Thu Dec 7 00:30:08 2017 -0800

    KVM: X86: Fix load RFLAGS w/o the fixed bit
    
    commit d73235d17ba63b53dc0e1051dbc10a1f1be91b71 upstream.
    
     *** Guest State ***
     CR0: actual=0x0000000000000030, shadow=0x0000000060000010, gh_mask=fffffffffffffff7
     CR4: actual=0x0000000000002050, shadow=0x0000000000000000, gh_mask=ffffffffffffe871
     CR3 = 0x00000000fffbc000
     RSP = 0x0000000000000000  RIP = 0x0000000000000000
     RFLAGS=0x00000000         DR7 = 0x0000000000000400
            ^^^^^^^^^^
    
    The failed vmentry is triggered by the following testcase when ept=Y:
    
        #include <unistd.h>
        #include <sys/syscall.h>
        #include <string.h>
        #include <stdint.h>
        #include <linux/kvm.h>
        #include <fcntl.h>
        #include <sys/ioctl.h>
    
        long r[5];
        int main()
        {
            r[2] = open("/dev/kvm", O_RDONLY);
            r[3] = ioctl(r[2], KVM_CREATE_VM, 0);
            r[4] = ioctl(r[3], KVM_CREATE_VCPU, 7);
            struct kvm_regs regs = {
                    .rflags = 0,
            };
            ioctl(r[4], KVM_SET_REGS, &regs);
            ioctl(r[4], KVM_RUN, 0);
        }
    
    X86 RFLAGS bit 1 is fixed set, userspace can simply clearing bit 1
    of RFLAGS with KVM_SET_REGS ioctl which results in vmentry fails.
    This patch fixes it by oring X86_EFLAGS_FIXED during ioctl.
    
    Suggested-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Quan Xu <quan.xu0@gmail.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Jim Mattson <jmattson@google.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    [bwh: Backported to 3.2: use literal integer]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5a7d47edfa7b0fa1a769fc1b2e013d34b3012bf3
Author: Christoph Paasch <cpaasch@apple.com>
Date:   Mon Dec 11 00:05:46 2017 -0800

    tcp md5sig: Use skb's saddr when replying to an incoming segment
    
    commit 30791ac41927ebd3e75486f9504b6d2280463bf0 upstream.
    
    The MD5-key that belongs to a connection is identified by the peer's
    IP-address. When we are in tcp_v4(6)_reqsk_send_ack(), we are replying
    to an incoming segment from tcp_check_req() that failed the seq-number
    checks.
    
    Thus, to find the correct key, we need to use the skb's saddr and not
    the daddr.
    
    This bug seems to have been there since quite a while, but probably got
    unnoticed because the consequences are not catastrophic. We will call
    tcp_v4_reqsk_send_ack only to send a challenge-ACK back to the peer,
    thus the connection doesn't really fail.
    
    Fixes: 9501f9722922 ("tcp md5sig: Let the caller pass appropriate key for tcp_v{4,6}_do_calc_md5_hash().")
    Signed-off-by: Christoph Paasch <cpaasch@apple.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bc93076beaed2f54459d25cf787c809269e865a0
Author: Chandan Rajendra <chandan@linux.vnet.ibm.com>
Date:   Mon Dec 11 15:00:57 2017 -0500

    ext4: fix crash when a directory's i_size is too small
    
    commit 9d5afec6b8bd46d6ed821aa1579634437f58ef1f upstream.
    
    On a ppc64 machine, when mounting a fuzzed ext2 image (generated by
    fsfuzzer) the following call trace is seen,
    
    VFS: brelse: Trying to free free buffer
    WARNING: CPU: 1 PID: 6913 at /root/repos/linux/fs/buffer.c:1165 .__brelse.part.6+0x24/0x40
    .__brelse.part.6+0x20/0x40 (unreliable)
    .ext4_find_entry+0x384/0x4f0
    .ext4_lookup+0x84/0x250
    .lookup_slow+0xdc/0x230
    .walk_component+0x268/0x400
    .path_lookupat+0xec/0x2d0
    .filename_lookup+0x9c/0x1d0
    .vfs_statx+0x98/0x140
    .SyS_newfstatat+0x48/0x80
    system_call+0x58/0x6c
    
    This happens because the directory that ext4_find_entry() looks up has
    inode->i_size that is less than the block size of the filesystem. This
    causes 'nblocks' to have a value of zero. ext4_bread_batch() ends up not
    reading any of the directory file's blocks. This renders the entries in
    bh_use[] array to continue to have garbage data. buffer_uptodate() on
    bh_use[0] can then return a zero value upon which brelse() function is
    invoked.
    
    This commit fixes the bug by returning -ENOENT when the directory file
    has no associated blocks.
    
    Reported-by: Abdul Haleem <abdhalee@linux.vnet.ibm.com>
    Signed-off-by: Chandan Rajendra <chandan@linux.vnet.ibm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8eec37d0e9039d5fbfc400324a06793b21ff24cd
Author: Mohamed Ghannam <simo.ghannam@gmail.com>
Date:   Sun Dec 10 03:50:58 2017 +0000

    net: ipv4: fix for a race condition in raw_sendmsg
    
    commit 8f659a03a0ba9289b9aeb9b4470e6fb263d6f483 upstream.
    
    inet->hdrincl is racy, and could lead to uninitialized stack pointer
    usage, so its value should be read only once.
    
    Fixes: c008ba5bdc9f ("ipv4: Avoid reading user iov twice after raw_probe_proto_opt")
    Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2:
     - flowi4 flags don't depend on hdrincl
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b800532602c7249778ea2af0c4bcbb583eaeb705
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Nov 7 21:27:09 2014 +0800

    ipv4: Avoid reading user iov twice after raw_probe_proto_opt
    
    commit c008ba5bdc9fa830e1a349b20b0be5a137bdef7a upstream.
    
    Ever since raw_probe_proto_opt was added it had the problem of
    causing the user iov to be read twice, once during the probe for
    the protocol header and once again in ip_append_data.
    
    This is a potential security problem since it means that whatever
    we're probing may be invalid.  This patch plugs the hole by
    firstly advancing the iov so we don't read the same spot again,
    and secondly saving what we read the first time around for use
    by ip_append_data.
    
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9c9c53c5ef6ded65dfc624e3962d5e15f8cfd4c6
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Nov 7 21:27:08 2014 +0800

    ipv4: Use standard iovec primitive in raw_probe_proto_opt
    
    commit 32b5913a931fd753faf3d4e1124b2bc2edb364da upstream.
    
    The function raw_probe_proto_opt tries to extract the first two
    bytes from the user input in order to seed the IPsec lookup for
    ICMP packets.  In doing so it's processing iovec by hand and
    overcomplicating things.
    
    This patch replaces the manual iovec processing with a call to
    memcpy_fromiovecend.
    
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3a70d5ab61400027633a873b9a2d958df39123c8
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Dec 8 18:10:05 2017 +0200

    xhci: Don't add a virt_dev to the devs array before it's fully allocated
    
    commit 5d9b70f7d52eb14bb37861c663bae44de9521c35 upstream.
    
    Avoid null pointer dereference if some function is walking through the
    devs array accessing members of a new virt_dev that is mid allocation.
    
    Add the virt_dev to xhci->devs[i] _after_ the virt_device and all its
    members are properly allocated.
    
    issue found by KASAN: null-ptr-deref in xhci_find_slot_id_by_port
    
    "Quick analysis suggests that xhci_alloc_virt_device() is not mutex
    protected. If so, there is a time frame where xhci->devs[slot_id] is set
    but not fully initialized. Specifically, xhci->devs[i]->udev can be NULL."
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: There is an extra failure path, so we may need to
     free dev->eps[0].ring]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f95ea9d1980fd2dd98bb253cb4b033e447b37c9b
Author: David Kozub <zub@linux.fjfi.cvut.cz>
Date:   Tue Dec 5 22:40:04 2017 +0100

    USB: uas and storage: Add US_FL_BROKEN_FUA for another JMicron JMS567 ID
    
    commit 62354454625741f0569c2cbe45b2d192f8fd258e upstream.
    
    There is another JMS567-based USB3 UAS enclosure (152d:0578) that fails
    with the following error:
    
    [sda] tag#0 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE
    [sda] tag#0 Sense Key : Illegal Request [current]
    [sda] tag#0 Add. Sense: Invalid field in cdb
    
    The issue occurs both with UAS (occasionally) and mass storage
    (immediately after mounting a FS on a disk in the enclosure).
    
    Enabling US_FL_BROKEN_FUA quirk solves this issue.
    
    This patch adds an UNUSUAL_DEV with US_FL_BROKEN_FUA for the enclosure
    for both UAS and mass storage.
    
    Signed-off-by: David Kozub <zub@linux.fjfi.cvut.cz>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2:
     - Drop uas change
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ed005043f1ed42c1cc717b015eb79a6beed9cad2
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:48 2017 -0800

    can: esd_usb2: cancel urb on -EPIPE and -EPROTO
    
    commit 7a31ced3de06e9878e4f9c3abe8f87d9344d8144 upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dd12eb784eddfefabb27bdab05fdf1c29f55b404
Author: Martin Kelly <mkelly@xevo.com>
Date:   Tue Dec 5 11:15:47 2017 -0800

    can: ems_usb: cancel urb on -EPIPE and -EPROTO
    
    commit bd352e1adfe0d02d3ea7c8e3fb19183dc317e679 upstream.
    
    In mcba_usb, we have observed that when you unplug the device, the driver will
    endlessly resubmit failing URBs, which can cause CPU stalls. This issue
    is fixed in mcba_usb by catching the codes seen on device disconnect
    (-EPIPE and -EPROTO).
    
    This driver also resubmits in the case of -EPIPE and -EPROTO, so fix it
    in the same way.
    
    Signed-off-by: Martin Kelly <mkelly@xevo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5f8a88c66330ace8d89110cd7eb259ffd5e6bcae
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Fri Dec 1 11:19:42 2017 +0200

    btrfs: Fix possible off-by-one in btrfs_search_path_in_tree
    
    commit c8bcbfbd239ed60a6562964b58034ac8a25f4c31 upstream.
    
    The name char array passed to btrfs_search_path_in_tree is of size
    BTRFS_INO_LOOKUP_PATH_MAX (4080). So the actual accessible char indexes
    are in the range of [0, 4079]. Currently the code uses the define but this
    represents an off-by-one.
    
    Implications:
    
    Size of btrfs_ioctl_ino_lookup_args is 4096, so the new byte will be
    written to extra space, not some padding that could be provided by the
    allocator.
    
    btrfs-progs store the arguments on stack, but kernel does own copy of
    the ioctl buffer and the off-by-one overwrite does not affect userspace,
    but the ending 0 might be lost.
    
    Kernel ioctl buffer is allocated dynamically so we're overwriting
    somebody else's memory, and the ioctl is privileged if args.objectid is
    not 256. Which is in most cases, but resolving a subvolume stored in
    another directory will trigger that path.
    
    Before this patch the buffer was one byte larger, but then the -1 was
    not added.
    
    Fixes: ac8e9819d71f907 ("Btrfs: add search and inode lookup ioctls")
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ added implications ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f89c8a7e32a17375a8991efdce0aedc35be91b18
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Mon Mar 2 14:13:36 2015 +0000

    kdb: Fix handling of kallsyms_symbol_next() return value
    
    commit c07d35338081d107e57cf37572d8cc931a8e32e2 upstream.
    
    kallsyms_symbol_next() returns a boolean (true on success). Currently
    kdb_read() tests the return value with an inequality that
    unconditionally evaluates to true.
    
    This is fixed in the obvious way and, since the conditional branch is
    supposed to be unreachable, we also add a WARN_ON().
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c51f80d4d3a47dbc97b9b1b67d81e763afe9c398
Author: Robb Glasser <rglasser@google.com>
Date:   Tue Dec 5 09:16:55 2017 -0800

    ALSA: pcm: prevent UAF in snd_pcm_info
    
    commit 362bca57f5d78220f8b5907b875961af9436e229 upstream.
    
    When the device descriptor is closed, the `substream->runtime` pointer
    is freed. But another thread may be in the ioctl handler, case
    SNDRV_CTL_IOCTL_PCM_INFO. This case calls snd_pcm_info_user() which
    calls snd_pcm_info() which accesses the now freed `substream->runtime`.
    
    Note: this fixes CVE-2017-0861
    
    Signed-off-by: Robb Glasser <rglasser@google.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 90eef1fb80510728ba6422c871e9e0a9825ea779
Author: Nogah Frankel <nogahf@mellanox.com>
Date:   Mon Dec 4 13:31:11 2017 +0200

    net_sched: red: Avoid illegal values
    
    commit 8afa10cbe281b10371fee5a87ab266e48d71a7f9 upstream.
    
    Check the qmin & qmax values doesn't overflow for the given Wlog value.
    Check that qmin <= qmax.
    
    Fixes: a783474591f2 ("[PKT_SCHED]: Generic RED layer")
    Signed-off-by: Nogah Frankel <nogahf@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2:
     - Drop changes in sch_sfq
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c4a323871bc221fd11b51c62a3bccf2ea2b9fddd
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Nov 20 12:38:44 2017 +0100

    s390: always save and restore all registers on context switch
    
    commit fbbd7f1a51965b50dd12924841da0d478f3da71b upstream.
    
    The switch_to() macro has an optimization to avoid saving and
    restoring register contents that aren't needed for kernel threads.
    
    There is however the possibility that a kernel thread execve's a user
    space program. In such a case the execve'd process can partially see
    the contents of the previous process, which shouldn't be allowed.
    
    To avoid this, simply always save and restore register contents on
    context switch.
    
    Fixes: fdb6d070effba ("switch_to: dont restore/save access & fpu regs for kernel threads")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    [bwh: Backported to 3.2:
     - The save/restore functions are different here
     - FP restore is non-lazy, so drop the comment about it being lazy
     - Adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2ae45861493b9bcc6f0ca3be499cfd1c9b7e8410
Author: monty_pavel@sina.com <monty_pavel@sina.com>
Date:   Sat Nov 25 01:43:50 2017 +0800

    dm: fix various targets to dm_register_target after module __init resources created
    
    commit 7e6358d244e4706fe612a77b9c36519a33600ac0 upstream.
    
    A NULL pointer is seen if two concurrent "vgchange -ay -K <vg name>"
    processes race to load the dm-thin-pool module:
    
     PID: 25992 TASK: ffff883cd7d23500 CPU: 4 COMMAND: "vgchange"
      #0 [ffff883cd743d600] machine_kexec at ffffffff81038fa9
      0000001 [ffff883cd743d660] crash_kexec at ffffffff810c5992
      0000002 [ffff883cd743d730] oops_end at ffffffff81515c90
      0000003 [ffff883cd743d760] no_context at ffffffff81049f1b
      0000004 [ffff883cd743d7b0] __bad_area_nosemaphore at ffffffff8104a1a5
      0000005 [ffff883cd743d800] bad_area at ffffffff8104a2ce
      0000006 [ffff883cd743d830] __do_page_fault at ffffffff8104aa6f
      0000007 [ffff883cd743d950] do_page_fault at ffffffff81517bae
      0000008 [ffff883cd743d980] page_fault at ffffffff81514f95
         [exception RIP: kmem_cache_alloc+108]
         RIP: ffffffff8116ef3c RSP: ffff883cd743da38 RFLAGS: 00010046
         RAX: 0000000000000004 RBX: ffffffff81121b90 RCX: ffff881bf1e78cc0
         RDX: 0000000000000000 RSI: 00000000000000d0 RDI: 0000000000000000
         RBP: ffff883cd743da68 R8: ffff881bf1a4eb00 R9: 0000000080042000
         R10: 0000000000002000 R11: 0000000000000000 R12: 00000000000000d0
         R13: 0000000000000000 R14: 00000000000000d0 R15: 0000000000000246
         ORIG_RAX: ffffffffffffffff CS: 0010 SS: 0018
      0000009 [ffff883cd743da70] mempool_alloc_slab at ffffffff81121ba5
     0000010 [ffff883cd743da80] mempool_create_node at ffffffff81122083
     0000011 [ffff883cd743dad0] mempool_create at ffffffff811220f4
     0000012 [ffff883cd743dae0] pool_ctr at ffffffffa08de049 [dm_thin_pool]
     0000013 [ffff883cd743dbd0] dm_table_add_target at ffffffffa0005f2f [dm_mod]
     0000014 [ffff883cd743dc30] table_load at ffffffffa0008ba9 [dm_mod]
     0000015 [ffff883cd743dc90] ctl_ioctl at ffffffffa0009dc4 [dm_mod]
    
    The race results in a NULL pointer because:
    
    Process A (vgchange -ay -K):
            a. send DM_LIST_VERSIONS_CMD ioctl;
            b. pool_target not registered;
            c. modprobe dm_thin_pool and wait until end.
    
    Process B (vgchange -ay -K):
            a. send DM_LIST_VERSIONS_CMD ioctl;
            b. pool_target registered;
            c. table_load->dm_table_add_target->pool_ctr;
            d. _new_mapping_cache is NULL and panic.
    Note:
            1. process A and process B are two concurrent processes.
            2. pool_target can be detected by process B but
            _new_mapping_cache initialization has not ended.
    
    To fix dm-thin-pool, and other targets (cache, multipath, and snapshot)
    with the same problem, simply dm_register_target() after all resources
    created during module init (as labelled with __init) are finished.
    
    Signed-off-by: monty <monty_pavel@sina.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    [bwh: Backported to 3.2:
     - Drop changes in dm-cache (non-existent) and dm-thin (doesn't have this bug)
     - In dm-snap, reorder cleanup of tracked_chunk_cache too
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5accd815867fd938849ea0e88a733381b729abe3
Author: Johannes Thumshirn <morbidrsa@gmail.com>
Date:   Sun Jan 11 12:45:23 2015 +0100

    dm mpath: simplify failure path of dm_multipath_init()
    
    commit ff658e9c1aae9a84dd06d46f847dc0cd2bf0dd11 upstream.
    
    Currently the cleanup of all error cases are open-coded.  Introduce a
    common exit path and labels.
    
    Signed-off-by: Johannes Thumshirn <morbidrsa@gmail.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5fb4659d868bde00243997ea6f095e7373c4a21a
Author: Sven Eckelmann <sven@narfation.org>
Date:   Sun Dec 3 11:26:45 2017 +0100

    batman-adv: Fix lock for ogm cnt access in batadv_iv_ogm_calc_tq
    
    commit 5ba7dcfe77037b67016263ea597a8b431692ecab upstream.
    
    The originator node object orig_neigh_node is used to when accessing the
    bcast_own(_sum) and real_packet_count information. The access to them has
    to be protected with the spinlock in orig_neigh_node.
    
    But the function uses the lock in orig_node instead. This is incorrect
    because they could be two different originator node objects.
    
    Fixes: 0ede9f41b217 ("batman-adv: protect bit operations to count OGMs with spinlock")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    [bwh: Backported to 3.2:
     - s/bat_iv\.ogm_cnt_lock/ogm_cnt_lock/
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3459f7bd556193aed0d55cb1006374d1409041eb
Author: Jaejoong Kim <climbbb.kim@gmail.com>
Date:   Mon Dec 4 15:31:49 2017 +0900

    ALSA: usb-audio: Add check return value for usb_string()
    
    commit 89b89d121ffcf8d9546633b98ded9d18b8f75891 upstream.
    
    snd_usb_copy_string_desc() returns zero if usb_string() fails.
    In case of failure, we need to check the snd_usb_copy_string_desc()'s
    return value and add an exception case
    
    Signed-off-by: Jaejoong Kim <climbbb.kim@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d4d5c11915dce18e3b8ce92b0ccbcb08537d0168
Author: Jaejoong Kim <climbbb.kim@gmail.com>
Date:   Mon Dec 4 15:31:48 2017 +0900

    ALSA: usb-audio: Fix out-of-bound error
    
    commit 251552a2b0d454badc8f486e6d79100970c744b0 upstream.
    
    The snd_usb_copy_string_desc() retrieves the usb string corresponding to
    the index number through the usb_string(). The problem is that the
    usb_string() returns the length of the string (>= 0) when successful, but
    it can also return a negative value about the error case or status of
    usb_control_msg().
    
    If iClockSource is '0' as shown below, usb_string() will returns -EINVAL.
    This will result in '0' being inserted into buf[-22], and the following
    KASAN out-of-bound error message will be output.
    
    AudioControl Interface Descriptor:
      bLength                 8
      bDescriptorType        36
      bDescriptorSubtype     10 (CLOCK_SOURCE)
      bClockID                1
      bmAttributes         0x07 Internal programmable Clock (synced to SOF)
      bmControls           0x07
      Clock Frequency Control (read/write)
      Clock Validity Control (read-only)
      bAssocTerminal          0
      iClockSource            0
    
    To fix it, check usb_string()'return value and bail out.
    
    ==================================================================
    BUG: KASAN: stack-out-of-bounds in parse_audio_unit+0x1327/0x1960 [snd_usb_audio]
    Write of size 1 at addr ffff88007e66735a by task systemd-udevd/18376
    
    CPU: 0 PID: 18376 Comm: systemd-udevd Not tainted 4.13.0+ #3
    Hardware name: LG Electronics                   15N540-RFLGL/White Tip Mountain, BIOS 15N5
    Call Trace:
    dump_stack+0x63/0x8d
    print_address_description+0x70/0x290
    ? parse_audio_unit+0x1327/0x1960 [snd_usb_audio]
    kasan_report+0x265/0x350
    __asan_store1+0x4a/0x50
    parse_audio_unit+0x1327/0x1960 [snd_usb_audio]
    ? save_stack+0xb5/0xd0
    ? save_stack_trace+0x1b/0x20
    ? save_stack+0x46/0xd0
    ? kasan_kmalloc+0xad/0xe0
    ? kmem_cache_alloc_trace+0xff/0x230
    ? snd_usb_create_mixer+0xb0/0x4b0 [snd_usb_audio]
    ? usb_audio_probe+0x4de/0xf40 [snd_usb_audio]
    ? usb_probe_interface+0x1f5/0x440
    ? driver_probe_device+0x3ed/0x660
    ? build_feature_ctl+0xb10/0xb10 [snd_usb_audio]
    ? save_stack_trace+0x1b/0x20
    ? init_object+0x69/0xa0
    ? snd_usb_find_csint_desc+0xa8/0xf0 [snd_usb_audio]
    snd_usb_mixer_controls+0x1dc/0x370 [snd_usb_audio]
    ? build_audio_procunit+0x890/0x890 [snd_usb_audio]
    ? snd_usb_create_mixer+0xb0/0x4b0 [snd_usb_audio]
    ? kmem_cache_alloc_trace+0xff/0x230
    ? usb_ifnum_to_if+0xbd/0xf0
    snd_usb_create_mixer+0x25b/0x4b0 [snd_usb_audio]
    ? snd_usb_create_stream+0x255/0x2c0 [snd_usb_audio]
    usb_audio_probe+0x4de/0xf40 [snd_usb_audio]
    ? snd_usb_autosuspend.part.7+0x30/0x30 [snd_usb_audio]
    ? __pm_runtime_idle+0x90/0x90
    ? kernfs_activate+0xa6/0xc0
    ? usb_match_one_id_intf+0xdc/0x130
    ? __pm_runtime_set_status+0x2d4/0x450
    usb_probe_interface+0x1f5/0x440
    
    Signed-off-by: Jaejoong Kim <climbbb.kim@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 69932dcebfbe74ac11313756b86aaea2e18c5b1c
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Dec 1 13:41:19 2017 +0200

    xhci: Don't show incorrect WARN message about events for empty rings
    
    commit e4ec40ec4b260efcca15089de4285a0a3411259b upstream.
    
    xHC can generate two events for a short transfer if the short TRB and
    last TRB in the TD are not the same TRB.
    
    The driver will handle the TD after the first short event, and remove
    it from its internal list. Driver then incorrectly prints a warning
    for the second event:
    
    "WARN Event TRB for slot x ep y with no TDs queued"
    
    Fix this by not printing a warning if we get a event on a empty list
    if the previous event was a short event.
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8840cea8786a9a6f51eeb4a7abe9d4d4e07c960d
Author: Oliver Stäbler <oliver.staebler@bytesatwork.ch>
Date:   Mon Nov 20 14:45:15 2017 +0100

    can: ti_hecc: Fix napi poll return value for repoll
    
    commit f6c23b174c3c96616514827407769cbcfc8005cf upstream.
    
    After commit d75b1ade567f ("net: less interrupt masking in NAPI") napi
    repoll is done only when work_done == budget.
    So we need to return budget if there are still packets to receive.
    
    Signed-off-by: Oliver Stäbler <oliver.staebler@bytesatwork.ch>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f392ce8fe6070f485a6ca937a1a30104ddcb15b9
Author: Laurent Caumont <lcaumont2@gmail.com>
Date:   Sat Nov 11 12:44:46 2017 -0500

    media: dvb: i2c transfers over usb cannot be done from stack
    
    commit 6d33377f2abbf9f0e561b116dd468d1c3ff36a6a upstream.
    
    Signed-off-by: Laurent Caumont <lcaumont2@gmail.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 982892ad57c063a43a152f069191f8e4130e6110
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 30 10:08:28 2017 +0100

    ALSA: seq: Remove spurious WARN_ON() at timer check
    
    commit 43a3542870328601be02fcc9d27b09db467336ef upstream.
    
    The use of snd_BUG_ON() in ALSA sequencer timer may lead to a spurious
    WARN_ON() when a slave timer is deployed as its backend and a
    corresponding master timer stops meanwhile.  The symptom was triggered
    by syzkaller spontaneously.
    
    Since the NULL timer is valid there, rip off snd_BUG_ON().
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8b562a853bf7aa64b6f49da80f25ad89b5de0564
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Fri Nov 24 07:47:50 2017 +0100

    eeprom: at24: check at24_read/write arguments
    
    commit d9bcd462daf34aebb8de9ad7f76de0198bb5a0f0 upstream.
    
    So far we completely rely on the caller to provide valid arguments.
    To be on the safe side perform an own sanity check.
    
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 86c36394d61ce5c5ef29d817953b0e963a6fc7d5
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Nov 28 08:03:30 2017 -0800

    net/packet: fix a race in packet_bind() and packet_notifier()
    
    commit 15fe076edea787807a7cdc168df832544b58eba6 upstream.
    
    syzbot reported crashes [1] and provided a C repro easing bug hunting.
    
    When/if packet_do_bind() calls __unregister_prot_hook() and releases
    po->bind_lock, another thread can run packet_notifier() and process an
    NETDEV_UP event.
    
    This calls register_prot_hook() and hooks again the socket right before
    first thread is able to grab again po->bind_lock.
    
    Fixes this issue by temporarily setting po->num to 0, as suggested by
    David Miller.
    
    [1]
    dev_remove_pack: ffff8801bf16fa80 not found
    ------------[ cut here ]------------
    kernel BUG at net/core/dev.c:7945!  ( BUG_ON(!list_empty(&dev->ptype_all)); )
    invalid opcode: 0000 [#1] SMP KASAN
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Modules linked in:
    device syz0 entered promiscuous mode
    CPU: 0 PID: 3161 Comm: syzkaller404108 Not tainted 4.14.0+ #190
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    task: ffff8801cc57a500 task.stack: ffff8801cc588000
    RIP: 0010:netdev_run_todo+0x772/0xae0 net/core/dev.c:7945
    RSP: 0018:ffff8801cc58f598 EFLAGS: 00010293
    RAX: ffff8801cc57a500 RBX: dffffc0000000000 RCX: ffffffff841f75b2
    RDX: 0000000000000000 RSI: 1ffff100398b1ede RDI: ffff8801bf1f8810
    device syz0 entered promiscuous mode
    RBP: ffff8801cc58f898 R08: 0000000000000001 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: ffff8801bf1f8cd8
    R13: ffff8801cc58f870 R14: ffff8801bf1f8780 R15: ffff8801cc58f7f0
    FS:  0000000001716880(0000) GS:ffff8801db400000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000020b13000 CR3: 0000000005e25000 CR4: 00000000001406f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     rtnl_unlock+0xe/0x10 net/core/rtnetlink.c:106
     tun_detach drivers/net/tun.c:670 [inline]
     tun_chr_close+0x49/0x60 drivers/net/tun.c:2845
     __fput+0x333/0x7f0 fs/file_table.c:210
     ____fput+0x15/0x20 fs/file_table.c:244
     task_work_run+0x199/0x270 kernel/task_work.c:113
     exit_task_work include/linux/task_work.h:22 [inline]
     do_exit+0x9bb/0x1ae0 kernel/exit.c:865
     do_group_exit+0x149/0x400 kernel/exit.c:968
     SYSC_exit_group kernel/exit.c:979 [inline]
     SyS_exit_group+0x1d/0x20 kernel/exit.c:977
     entry_SYSCALL_64_fastpath+0x1f/0x96
    RIP: 0033:0x44ad19
    
    Fixes: 30f7ea1c2b5f ("packet: race condition in packet_bind")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Francesco Ruggeri <fruggeri@aristanetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 3.2: adjust context, indentation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ea5e97d18ccc2a7a52e2a248cb2637b0e9ff5280
Author: William Breathitt Gray <vilhelm.gray@gmail.com>
Date:   Wed Nov 8 10:23:11 2017 -0500

    isa: Prevent NULL dereference in isa_bus driver callbacks
    
    commit 5a244727f428a06634f22bb890e78024ab0c89f3 upstream.
    
    The isa_driver structure for an isa_bus device is stored in the device
    platform_data member of the respective device structure. This
    platform_data member may be reset to NULL if isa_driver match callback
    for the device fails, indicating a device unsupported by the ISA driver.
    
    This patch fixes a possible NULL pointer dereference if one of the
    isa_driver callbacks to attempted for an unsupported device. This error
    should not occur in practice since ISA devices are typically manually
    configured and loaded by the users, but we may as well prevent this
    error from popping up for the 0day testers.
    
    Fixes: a5117ba7da37 ("[PATCH] Driver model: add ISA bus")
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d8628fe8c50bdcd7060e3038ac5518fc9dfb5711
Author: Matt Wilson <msw@amazon.com>
Date:   Mon Nov 13 11:31:31 2017 -0800

    serial: 8250_pci: Add Amazon PCI serial device ID
    
    commit 3bfd1300abfe3adb18e84a89d97a0e82a22124bb upstream.
    
    This device will be used in future Amazon EC2 instances as the primary
    serial port (i.e., data sent to this port will be available via the
    GetConsoleOuput [1] EC2 API).
    
    [1] http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetConsoleOutput.html
    
    Signed-off-by: Matt Wilson <msw@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9085175a4f9f03bb0d1060ac45bab8347f3f78b9
Author: Masakazu Mokuno <masakazu.mokuno@gmail.com>
Date:   Fri Nov 10 01:25:50 2017 +0900

    USB: core: Add type-specific length check of BOS descriptors
    
    commit 81cf4a45360f70528f1f64ba018d61cb5767249a upstream.
    
    As most of BOS descriptors are longer in length than their header
    'struct usb_dev_cap_header', comparing solely with it is not sufficient
    to avoid out-of-bounds access to BOS descriptors.
    
    This patch adds descriptor type specific length check in
    usb_get_bos_descriptor() to fix the issue.
    
    Signed-off-by: Masakazu Mokuno <masakazu.mokuno@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2:
     - Drop handling of USB_PTM_CAP_TYPE and USB_SSP_CAP_TYPE
     - Adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6bfe491e9ebfac511ed2c180ffaf9d7e01830584
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Nov 7 16:45:04 2017 +0000

    usb: host: fix incorrect updating of offset
    
    commit 1d5a31582ef046d3b233f0da1a68ae26519b2f0a upstream.
    
    The variable temp is incorrectly being updated, instead it should
    be offset otherwise the loop just reads the same capability value
    and loops forever.  Thanks to Alan Stern for pointing out the
    correct fix to my original fix.  Fix also cleans up clang warning:
    
    drivers/usb/host/ehci-dbg.c:840:4: warning: Value stored to 'temp'
    is never read
    
    Fixes: d49d43174400 ("USB: misc ehci updates")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3e7e28e317d9b9d7b04179b7b285234ffa527b22
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Nov 23 16:39:52 2017 +0100

    USB: usbfs: Filter flags passed in from user space
    
    commit 446f666da9f019ce2ffd03800995487e79a91462 upstream.
    
    USBDEVFS_URB_ISO_ASAP must be accepted only for ISO endpoints.
    Improve sanity checking.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c10080108b7767d55465c7559d4f1d278ffa6f22
Author: Robert Lippert <roblip@gmail.com>
Date:   Mon Nov 27 15:51:55 2017 -0800

    hwmon: (pmbus) Use 64bit math for DIRECT format values
    
    commit bd467e4eababe4c04272c1e646f066db02734c79 upstream.
    
    Power values in the 100s of watt range can easily blow past
    32bit math limits when processing everything in microwatts.
    
    Use 64bit math instead to avoid these issues on common 32bit ARM
    BMC platforms.
    
    Fixes: 442aba78728e ("hwmon: PMBus device driver")
    Signed-off-by: Robert Lippert <rlippert@google.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    [bwh: Backported to 3.2: use integer literals instead of S16_{MIN,MAX}]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4dd3f19943428e142b87970f6066cd00b2a77291
Author: Gleb Natapov <gleb@redhat.com>
Date:   Sun Oct 14 13:08:58 2012 +0200

    KVM: apic: fix LDR calculation in x2apic mode
    
    commit 7f46ddbd487e0d0528d89534fdfb31d885977804 upstream.
    
    Signed-off-by: Gleb Natapov <gleb@redhat.com>
    Reviewed-by: Chegu Vinod  <chegu_vinod@hp.com>
    Tested-by: Chegu Vinod <chegu_vinod@hp.com>
    Signed-off-by: Avi Kivity <avi@redhat.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7b2c3508ea02718b75bb5f633a284f5ca9438be2
Author: Sebastian Sjoholm <ssjoholm@mac.com>
Date:   Mon Nov 20 19:29:32 2017 +0100

    USB: serial: option: add Quectel BG96 id
    
    commit c654b21ede93845863597de9ad774fd30db5f2ab upstream.
    
    Quectel BG96 is an Qualcomm MDM9206 based IoT modem, supporting both
    CAT-M and NB-IoT. Tested hardware is BG96 mounted on Quectel
    development board (EVB). The USB id is added to option.c to allow
    DIAG,GPS,AT and modem communication with the BG96.
    
    Signed-off-by: Sebastian Sjoholm <ssjoholm@mac.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8aabee8e978620fd395d3bb161faa04eafe60895
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Sat Nov 25 16:48:41 2017 -0800

    Input: elantech - add new icbody type 15
    
    commit 10d900303f1c3a821eb0bef4e7b7ece16768fba4 upstream.
    
    The touchpad of Lenovo Thinkpad L480 reports it's version as 15.
    
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1bed44ae1809ba98ba3a6abac9d2655fe0db1315
Author: Huacai Chen <chenhc@lemote.com>
Date:   Tue Nov 21 14:23:39 2017 +0100

    scsi: libsas: align sata_device's rps_resp on a cacheline
    
    commit c2e8fbf908afd81ad502b567a6639598f92c9b9d upstream.
    
    The rps_resp buffer in ata_device is a DMA target, but it isn't
    explicitly cacheline aligned. Due to this, adjacent fields can be
    overwritten with stale data from memory on non-coherent architectures.
    As a result, the kernel is sometimes unable to communicate with an SATA
    device behind a SAS expander.
    
    Fix this by ensuring that the rps_resp buffer is cacheline aligned.
    
    This issue is similar to that fixed by Commit 84bda12af31f93 ("libata:
    align ap->sector_buf") and Commit 4ee34ea3a12396f35b26 ("libata: Align
    ata_device's id on a cacheline").
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 38df77e5d5de302356d2e879e277e460ef125add
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Nov 17 17:59:45 2011 -0800

    libsas: remove unused ata_task_resp fields
    
    commit 95ac7fd189b7e81a200b4d00b2bb6669b31acf3a upstream.
    
    Commit 1e34c838 "[SCSI] libsas: remove spurious sata control register
    read/write" removed the routines to fake the presence of the sata
    control registers, now remove the unused data structure fields to kill
    any remaining confusion.
    
    Acked-by: Jack Wang <jack_wang@usish.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d8c8a1a737d61e2e9b152564591f62ea8e62a434
Author: Huacai Chen <chenhc@lemote.com>
Date:   Tue Nov 21 14:23:38 2017 +0100

    scsi: use dma_get_cache_alignment() as minimum DMA alignment
    
    commit 90addc6b3c9cda0146fbd62a08e234c2b224a80c upstream.
    
    In non-coherent DMA mode, kernel uses cache flushing operations to
    maintain I/O coherency, so scsi's block queue should be aligned to the
    value returned by dma_get_cache_alignment().  Otherwise, If a DMA buffer
    and a kernel structure share a same cache line, and if the kernel
    structure has dirty data, cache_invalidate (no writeback) will cause
    data corruption.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    [hch: rebased and updated the comment and changelog]
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0d3385ab636b47a61f12798b3205cec4548a8547
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Nov 21 14:23:37 2017 +0100

    scsi: dma-mapping: always provide dma_get_cache_alignment
    
    commit 860dd4424f344400b491b212ee4acb3a358ba9d9 upstream.
    
    Provide the dummy version of dma_get_cache_alignment that always returns
    1 even if CONFIG_HAS_DMA is not set, so that drivers and subsystems can
    use it without ifdefs.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    [bwh: Backported to 3.2: Also delete the conflicting declaration in
     <asm-generic/dma-mapping-broken.h>]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0984cc102900d0d3f2ca2c441f6cc39c4fb4b9af
Author: Josef Bacik <jbacik@fb.com>
Date:   Fri Nov 17 14:50:46 2017 -0500

    btrfs: clear space cache inode generation always
    
    commit 8e138e0d92c6c9d3d481674fb14e3439b495be37 upstream.
    
    We discovered a box that had double allocations, and suspected the space
    cache may be to blame.  While auditing the write out path I noticed that
    if we've already setup the space cache we will just carry on.  This
    means that any error we hit after cache_save_setup before we go to
    actually write the cache out we won't reset the inode generation, so
    whatever was already written will be considered correct, except it'll be
    stale.  Fix this by _always_ resetting the generation on the block group
    inode, this way we only ever have valid or invalid cache.
    
    With this patch I was no longer able to reproduce cache corruption with
    dm-log-writes and my bpf error injection tool.
    
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a169d575495721d0b16d98706ba74c67f277dbac
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Thu Sep 28 15:14:01 2017 +0100

    iommu/vt-d: Fix scatterlist offset handling
    
    commit 29a90b70893817e2f2bb3cea40a29f5308e21b21 upstream.
    
    The intel-iommu DMA ops fail to correctly handle scatterlists where
    sg->offset is greater than PAGE_SIZE - the IOVA allocation is computed
    appropriately based on the page-aligned portion of the offset, but the
    mapping is set up relative to sg->page, which means it fails to actually
    cover the whole buffer (and in the worst case doesn't cover it at all):
    
        (sg->dma_address + sg->dma_len) ----+
        sg->dma_address ---------+          |
        iov_pfn------+           |          |
                     |           |          |
                     v           v          v
    iova:   a        b        c        d        e        f
            |--------|--------|--------|--------|--------|
                              <...calculated....>
                     [_____mapped______]
    pfn:    0        1        2        3        4        5
            |--------|--------|--------|--------|--------|
                     ^           ^          ^
                     |           |          |
        sg->page ----+           |          |
        sg->offset --------------+          |
        (sg->offset + sg->length) ----------+
    
    As a result, the caller ends up overrunning the mapping into whatever
    lies beyond, which usually goes badly:
    
    [  429.645492] DMAR: DRHD: handling fault status reg 2
    [  429.650847] DMAR: [DMA Write] Request device [02:00.4] fault addr f2682000 ...
    
    Whilst this is a fairly rare occurrence, it can happen from the result
    of intermediate scatterlist processing such as scatterwalk_ffwd() in the
    crypto layer. Whilst that particular site could be fixed up, it still
    seems worthwhile to bring intel-iommu in line with other DMA API
    implementations in handling this robustly.
    
    To that end, fix the intel_map_sg() path to line up the mapping
    correctly (in units of MM pages rather than VT-d pages to match the
    aligned_nrpages() calculation) regardless of the offset, and use
    sg_phys() consistently for clarity.
    
    Reported-by: Harsh Jain <Harsh@chelsio.com>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Reviewed by: Ashok Raj <ashok.raj@intel.com>
    Tested by: Jacob Pan <jacob.jun.pan@intel.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit adfdc9c7bf265516a8e61be1d1087bc1f36e3096
Author: Liran Alon <liran.alon@oracle.com>
Date:   Sun Nov 5 16:56:34 2017 +0200

    KVM: x86: Don't re-execute instruction when not passing CR2 value
    
    commit 9b8ae63798cb97e785a667ff27e43fa6220cb734 upstream.
    
    In case of instruction-decode failure or emulation failure,
    x86_emulate_instruction() will call reexecute_instruction() which will
    attempt to use the cr2 value passed to x86_emulate_instruction().
    However, when x86_emulate_instruction() is called from
    emulate_instruction(), cr2 is not passed (passed as 0) and therefore
    it doesn't make sense to execute reexecute_instruction() logic at all.
    
    Fixes: 51d8b66199e9 ("KVM: cleanup emulate_instruction")
    
    Signed-off-by: Liran Alon <liran.alon@oracle.com>
    Reviewed-by: Nikita Leshenko <nikita.leshchenko@oracle.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Reviewed-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d6b82aedc5d1af3a870565d9ce1da585e3c59f82
Author: Gleb Natapov <gleb@redhat.com>
Date:   Thu Apr 11 12:10:51 2013 +0300

    KVM: VMX: do not try to reexecute failed instruction while emulating invalid guest state
    
    commit 991eebf9f8e523e7ff1e4d31ac80641582b2e57a upstream.
    
    During invalid guest state emulation vcpu cannot enter guest mode to try
    to reexecute instruction that emulator failed to emulate, so emulation
    will happen again and again.  Prevent that by telling the emulator that
    instruction reexecution should not be attempted.
    
    Signed-off-by: Gleb Natapov <gleb@redhat.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4ca5236c76357797e6d2feee9be46f4d8d93f46c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 19 17:16:01 2018 +0100

    ALSA: seq: Fix regression by incorrect ioctl_mutex usages
    
    This is the revised backport of the upstream commit
    b3defb791b26ea0683a93a4f49c77ec45ec96f10
    
    We had another backport (e.g. 623e5c8ae32b in 4.4.115), but it applies
    the new mutex also to the code paths that are invoked via faked
    kernel-to-kernel ioctls.  As reported recently, this leads to a
    deadlock at suspend (or other scenarios triggering the kernel
    sequencer client).
    
    This patch addresses the issue by taking the mutex only in the code
    paths invoked by user-space, just like the original fix patch does.
    
    Reported-and-tested-by: Andres Bertens <abertensu@yahoo.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
