commit 940a14a7d844386c72f449045080dbbd86d1d244
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Oct 13 10:08:21 2021 +0200

    Linux 5.4.153
    
    Link: https://lore.kernel.org/r/20211011134503.715740503@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Link: https://lore.kernel.org/r/20211012064436.577746139@linuxfoundation.org
    Link: https://lore.kernel.org/r/20211012093344.002301190@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a89b1e0c25002d386cec56a642c3288d86a4026
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Tue Aug 3 13:35:25 2021 +0200

    x86/Kconfig: Correct reference to MWINCHIP3D
    
    commit 225bac2dc5d192e55f2c50123ee539b1edf8a411 upstream.
    
    Commit in Fixes intended to exclude the Winchip series and referred to
    CONFIG_WINCHIP3D, but the config symbol is called CONFIG_MWINCHIP3D.
    
    Hence, scripts/checkkconfigsymbols.py warns:
    
    WINCHIP3D
    Referencing files: arch/x86/Kconfig
    
    Correct the reference to the intended config symbol.
    
    Fixes: 69b8d3fcabdc ("x86/Kconfig: Exclude i586-class CPUs lacking PAE support from the HIGHMEM64G Kconfig group")
    Suggested-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20210803113531.30720-4-lukas.bulwahn@gmail.com
    [manually adjusted the change to the state on the v4.19.y and v5.4.y stable tree]
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b3b400741a5b4b59305e4a46ec58d3fa413e88f
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Sep 30 19:21:39 2021 +0200

    x86/hpet: Use another crystalball to evaluate HPET usability
    
    commit 6e3cd95234dc1eda488f4f487c281bac8fef4d9b upstream.
    
    On recent Intel systems the HPET stops working when the system reaches PC10
    idle state.
    
    The approach of adding PCI ids to the early quirks to disable HPET on
    these systems is a whack a mole game which makes no sense.
    
    Check for PC10 instead and force disable HPET if supported. The check is
    overbroad as it does not take ACPI, intel_idle enablement and command
    line parameters into account. That's fine as long as there is at least
    PMTIMER available to calibrate the TSC frequency. The decision can be
    overruled by adding "hpet=force" on the kernel command line.
    
    Remove the related early PCI quirks for affected Ice Cake and Coffin Lake
    systems as they are not longer required. That should also cover all
    other systems, i.e. Tiger Rag and newer generations, which are most
    likely affected by this as well.
    
    Fixes: Yet another hardware trainwreck
    Reported-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: Rafael J. Wysocki <rafael@kernel.org>
    Cc: stable@vger.kernel.org
    Cc: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 367f643191b33f8da87b5d2642a133d80f8e05b7
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Tue Aug 3 13:35:24 2021 +0200

    x86/platform/olpc: Correct ifdef symbol to intended CONFIG_OLPC_XO15_SCI
    
    commit 4758fd801f919b8b9acad78d2e49a195ec2be46b upstream.
    
    The refactoring in the commit in Fixes introduced an ifdef
    CONFIG_OLPC_XO1_5_SCI, however the config symbol is actually called
    "CONFIG_OLPC_XO15_SCI".
    
    Fortunately, ./scripts/checkkconfigsymbols.py warns:
    
    OLPC_XO1_5_SCI
    Referencing files: arch/x86/platform/olpc/olpc.c
    
    Correct this ifdef condition to the intended config symbol.
    
    Fixes: ec9964b48033 ("Platform: OLPC: Move EC-specific functionality out from x86")
    Suggested-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20210803113531.30720-3-lukas.bulwahn@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e2a9da532e09d627303d06c1a47d45ac05e33d4
Author: Palmer Dabbelt <palmerdabbelt@google.com>
Date:   Sat Oct 2 17:21:20 2021 -0700

    RISC-V: Include clone3() on rv32
    
    [ Upstream commit 59a4e0d5511ba61353ea9a4efdb1b86c23ecf134 ]
    
    As far as I can tell this should be enabled on rv32 as well, I'm not
    sure why it's rv64-only.  checksyscalls is complaining about our lack of
    clone3() on rv32.
    
    Fixes: 56ac5e213933 ("riscv: enable sys_clone3 syscall for rv64")
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Palmer Dabbelt <palmerdabbelt@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a326f9c01cfbee4450ae49ce618ae6cbc0f76842
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Mon Sep 27 15:06:14 2021 +0800

    bpf, s390: Fix potential memory leak about jit_data
    
    [ Upstream commit 686cb8b9f6b46787f035afe8fbd132a74e6b1bdd ]
    
    Make sure to free jit_data through kfree() in the error path.
    
    Fixes: 1c8f9b91c456 ("bpf: s390: add JIT support for multi-function programs")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Acked-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60bacf259e8c2eb2324f3e13275200baaee9494b
Author: Jamie Iles <quic_jiles@quicinc.com>
Date:   Wed Sep 22 17:57:18 2021 +0100

    i2c: acpi: fix resource leak in reconfiguration device addition
    
    [ Upstream commit 6558b646ce1c2a872fe1c2c7cb116f05a2c1950f ]
    
    acpi_i2c_find_adapter_by_handle() calls bus_find_device() which takes a
    reference on the adapter which is never released which will result in a
    reference count leak and render the adapter unremovable.  Make sure to
    put the adapter after creating the client in the same manner that we do
    for OF.
    
    Fixes: 525e6fabeae2 ("i2c / ACPI: add support for ACPI reconfigure notifications")
    Signed-off-by: Jamie Iles <quic_jiles@quicinc.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    [wsa: fixed title]
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b723b34a98310b09303e2e33ee19219c898fda02
Author: Mike Manning <mvrmanning@gmail.com>
Date:   Tue Oct 5 14:03:42 2021 +0100

    net: prefer socket bound to interface when not in VRF
    
    [ Upstream commit 8d6c414cd2fb74aa6812e9bfec6178f8246c4f3a ]
    
    The commit 6da5b0f027a8 ("net: ensure unbound datagram socket to be
    chosen when not in a VRF") modified compute_score() so that a device
    match is always made, not just in the case of an l3mdev skb, then
    increments the score also for unbound sockets. This ensures that
    sockets bound to an l3mdev are never selected when not in a VRF.
    But as unbound and bound sockets are now scored equally, this results
    in the last opened socket being selected if there are matches in the
    default VRF for an unbound socket and a socket bound to a dev that is
    not an l3mdev. However, handling prior to this commit was to always
    select the bound socket in this case. Reinstate this handling by
    incrementing the score only for bound sockets. The required isolation
    due to choosing between an unbound socket and a socket bound to an
    l3mdev remains in place due to the device match always being made.
    The same approach is taken for compute_score() for stream sockets.
    
    Fixes: 6da5b0f027a8 ("net: ensure unbound datagram socket to be chosen when not in a VRF")
    Fixes: e78190581aff ("net: ensure unbound stream socket to be chosen when not in a VRF")
    Signed-off-by: Mike Manning <mmanning@vyatta.att-mail.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Link: https://lore.kernel.org/r/cf0a8523-b362-1edf-ee78-eef63cbbb428@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17063cac4088b8e2fc0f633abddca5426ed58312
Author: Sylwester Dziedziuch <sylwesterx.dziedziuch@intel.com>
Date:   Fri Sep 24 11:40:41 2021 +0200

    i40e: Fix freeing of uninitialized misc IRQ vector
    
    [ Upstream commit 2e5a20573a926302b233b0c2e1077f5debc7ab2e ]
    
    When VSI set up failed in i40e_probe() as part of PF switch set up
    driver was trying to free misc IRQ vectors in
    i40e_clear_interrupt_scheme and produced a kernel Oops:
    
       Trying to free already-free IRQ 266
       WARNING: CPU: 0 PID: 5 at kernel/irq/manage.c:1731 __free_irq+0x9a/0x300
       Workqueue: events work_for_cpu_fn
       RIP: 0010:__free_irq+0x9a/0x300
       Call Trace:
       ? synchronize_irq+0x3a/0xa0
       free_irq+0x2e/0x60
       i40e_clear_interrupt_scheme+0x53/0x190 [i40e]
       i40e_probe.part.108+0x134b/0x1a40 [i40e]
       ? kmem_cache_alloc+0x158/0x1c0
       ? acpi_ut_update_ref_count.part.1+0x8e/0x345
       ? acpi_ut_update_object_reference+0x15e/0x1e2
       ? strstr+0x21/0x70
       ? irq_get_irq_data+0xa/0x20
       ? mp_check_pin_attr+0x13/0xc0
       ? irq_get_irq_data+0xa/0x20
       ? mp_map_pin_to_irq+0xd3/0x2f0
       ? acpi_register_gsi_ioapic+0x93/0x170
       ? pci_conf1_read+0xa4/0x100
       ? pci_bus_read_config_word+0x49/0x70
       ? do_pci_enable_device+0xcc/0x100
       local_pci_probe+0x41/0x90
       work_for_cpu_fn+0x16/0x20
       process_one_work+0x1a7/0x360
       worker_thread+0x1cf/0x390
       ? create_worker+0x1a0/0x1a0
       kthread+0x112/0x130
       ? kthread_flush_work_fn+0x10/0x10
       ret_from_fork+0x1f/0x40
    
    The problem is that at that point misc IRQ vectors
    were not allocated yet and we get a call trace
    that driver is trying to free already free IRQ vectors.
    
    Add a check in i40e_clear_interrupt_scheme for __I40E_MISC_IRQ_REQUESTED
    PF state before calling i40e_free_misc_vector. This state is set only if
    misc IRQ vectors were properly initialized.
    
    Fixes: c17401a1dd21 ("i40e: use separate state bit for miscellaneous IRQ setup")
    Reported-by: PJ Waskiewicz <pwaskiewicz@jumptrading.com>
    Signed-off-by: Sylwester Dziedziuch <sylwesterx.dziedziuch@intel.com>
    Signed-off-by: Mateusz Palczewski <mateusz.palczewski@intel.com>
    Tested-by: Dave Switzer <david.switzer@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a1fcc981deceb5fb12933203bf178d25f627b8c
Author: Jiri Benc <jbenc@redhat.com>
Date:   Tue Sep 14 10:54:42 2021 +0200

    i40e: fix endless loop under rtnl
    
    [ Upstream commit 857b6c6f665cca9828396d9743faf37fd09e9ac3 ]
    
    The loop in i40e_get_capabilities can never end. The problem is that
    although i40e_aq_discover_capabilities returns with an error if there's
    a firmware problem, the returned error is not checked. There is a check for
    pf->hw.aq.asq_last_status but that value is set to I40E_AQ_RC_OK on most
    firmware problems.
    
    When i40e_aq_discover_capabilities encounters a firmware problem, it will
    encounter the same problem on its next invocation. As the result, the loop
    becomes endless. We hit this with I40E_ERR_ADMIN_QUEUE_TIMEOUT but looking
    at the code, it can happen with a range of other firmware errors.
    
    I don't know what the correct behavior should be: whether the firmware
    should be retried a few times, or whether pf->hw.aq.asq_last_status should
    be always set to the encountered firmware error (but then it would be
    pointless and can be just replaced by the i40e_aq_discover_capabilities
    return value). However, the current behavior with an endless loop under the
    rtnl mutex(!) is unacceptable and Intel has not submitted a fix, although we
    explained the bug to them 7 months ago.
    
    This may not be the best possible fix but it's better than hanging the whole
    system on a firmware bug.
    
    Fixes: 56a62fc86895 ("i40e: init code and hardware support")
    Tested-by: Stefan Assmann <sassmann@redhat.com>
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Reviewed-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Dave Switzer <david.switzer@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6c066811921c8729ffef44714524357d314489e
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Oct 5 17:30:30 2021 -0700

    gve: fix gve_get_stats()
    
    [ Upstream commit 2f57d4975fa027eabd35fdf23a49f8222ef3abf2 ]
    
    gve_get_stats() can report wrong numbers if/when u64_stats_fetch_retry()
    returns true.
    
    What is needed here is to sample values in temporary variables,
    and only use them after each loop is ended.
    
    Fixes: f5cedc84a30d ("gve: Add transmit and receive support")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Catherine Sullivan <csully@google.com>
    Cc: Sagi Shahar <sagis@google.com>
    Cc: Jon Olson <jonolson@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Cc: Luigi Rizzo <lrizzo@google.com>
    Cc: Jeroen de Borst <jeroendb@google.com>
    Cc: Tao Liu <xliutaox@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d83787c26d211735496b0325df08cd4830afea6d
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Oct 5 14:04:17 2021 -0700

    rtnetlink: fix if_nlmsg_stats_size() under estimation
    
    [ Upstream commit d34367991933d28bd7331f67a759be9a8c474014 ]
    
    rtnl_fill_statsinfo() is filling skb with one mandatory if_stats_msg structure.
    
    nlmsg_put(skb, pid, seq, type, sizeof(struct if_stats_msg), flags);
    
    But if_nlmsg_stats_size() never considered the needed storage.
    
    This bug did not show up because alloc_skb(X) allocates skb with
    extra tailroom, because of added alignments. This could very well
    be changed in the future to have deterministic behavior.
    
    Fixes: 10c9ead9f3c6 ("rtnetlink: add new RTM_GETSTATS message to dump link stats")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Roopa Prabhu <roopa@nvidia.com>
    Acked-by: Roopa Prabhu <roopa@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0311d9775390a75a60658ab865ba5f80b763ea4c
Author: Catherine Sullivan <csully@google.com>
Date:   Tue Oct 5 19:42:19 2021 -0700

    gve: Correct available tx qpl check
    
    [ Upstream commit d03477ee10f4bc35d3573cf1823814378ef2dca2 ]
    
    The qpl_map_size is rounded up to a multiple of sizeof(long), but the
    number of qpls doesn't have to be.
    
    Fixes: f5cedc84a30d2 ("gve: Add transmit and receive support")
    Signed-off-by: Catherine Sullivan <csully@google.com>
    Signed-off-by: Jeroen de Borst <jeroendb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11cd944bb87d9e575b94c07c952105eda745b459
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Sep 11 15:50:23 2021 +0800

    drm/nouveau/debugfs: fix file release memory leak
    
    [ Upstream commit f5a8703a9c418c6fc54eb772712dfe7641e3991c ]
    
    When using single_open() for opening, single_release() should be
    called, otherwise the 'op' allocated in single_open() will be leaked.
    
    Fixes: 6e9fc177399f ("drm/nouveau/debugfs: add copy of sysfs pstate interface ported to debugfs")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Reviewed-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210911075023.3969054-2-yangyingliang@huawei.com
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb7e651879839eae28a373b49a1e06b432c82a62
Author: Mark Brown <broonie@kernel.org>
Date:   Tue Sep 21 22:21:02 2021 +0100

    video: fbdev: gbefb: Only instantiate device when built for IP32
    
    [ Upstream commit 11b8e2bb986d23157e82e267fb8cc6b281dfdee9 ]
    
    The gbefb driver not only registers a driver but also the device for that
    driver. This is all well and good when run on the IP32 machines that are
    supported by the driver but since the driver supports building with
    COMPILE_TEST we might also be building on other platforms which do not have
    this hardware and will crash instantiating the driver. Add an IS_ENABLED()
    check so we compile out the device registration if we don't have the Kconfig
    option for the machine enabled.
    
    Fixes: 552ccf6b259d290c0c ("video: fbdev: gbefb: add COMPILE_TEST support")
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210921212102.30803-1-broonie@kernel.org
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04f981251e20089899bb7be60b56699a37371fa3
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed Sep 8 08:49:36 2021 +0300

    bus: ti-sysc: Use CLKDM_NOAUTO for dra7 dcan1 for errata i893
    
    [ Upstream commit b13a270ace2e4c70653aa1d1d0394c553905802f ]
    
    Commit 94f6345712b3 ("bus: ti-sysc: Implement quirk handling for
    CLKDM_NOAUTO") should have also added the quirk for dra7 dcan1 in
    addition to dcan2 for errata i893 handling.
    
    Let's also pass the quirk flag for legacy mode booting for if "ti,hwmods"
    dts property is used with related dcan hwmod data. This should be only
    needed if anybody needs to git bisect earlier stable trees though.
    
    Fixes: 94f6345712b3 ("bus: ti-sysc: Implement quirk handling for CLKDM_NOAUTO")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 809aa82ac64ff59f66f85cc44d006151c16bba6f
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 4 14:24:15 2021 -0700

    netlink: annotate data races around nlk->bound
    
    [ Upstream commit 7707a4d01a648e4c655101a469c956cb11273655 ]
    
    While existing code is correct, KCSAN is reporting
    a data-race in netlink_insert / netlink_sendmsg [1]
    
    It is correct to read nlk->bound without a lock, as netlink_autobind()
    will acquire all needed locks.
    
    [1]
    BUG: KCSAN: data-race in netlink_insert / netlink_sendmsg
    
    write to 0xffff8881031c8b30 of 1 bytes by task 18752 on cpu 0:
     netlink_insert+0x5cc/0x7f0 net/netlink/af_netlink.c:597
     netlink_autobind+0xa9/0x150 net/netlink/af_netlink.c:842
     netlink_sendmsg+0x479/0x7c0 net/netlink/af_netlink.c:1892
     sock_sendmsg_nosec net/socket.c:703 [inline]
     sock_sendmsg net/socket.c:723 [inline]
     ____sys_sendmsg+0x360/0x4d0 net/socket.c:2392
     ___sys_sendmsg net/socket.c:2446 [inline]
     __sys_sendmsg+0x1ed/0x270 net/socket.c:2475
     __do_sys_sendmsg net/socket.c:2484 [inline]
     __se_sys_sendmsg net/socket.c:2482 [inline]
     __x64_sys_sendmsg+0x42/0x50 net/socket.c:2482
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0x90 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    read to 0xffff8881031c8b30 of 1 bytes by task 18751 on cpu 1:
     netlink_sendmsg+0x270/0x7c0 net/netlink/af_netlink.c:1891
     sock_sendmsg_nosec net/socket.c:703 [inline]
     sock_sendmsg net/socket.c:723 [inline]
     __sys_sendto+0x2a8/0x370 net/socket.c:2019
     __do_sys_sendto net/socket.c:2031 [inline]
     __se_sys_sendto net/socket.c:2027 [inline]
     __x64_sys_sendto+0x74/0x90 net/socket.c:2027
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0x90 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    value changed: 0x00 -> 0x01
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 18751 Comm: syz-executor.0 Not tainted 5.14.0-rc1-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: da314c9923fe ("netlink: Replace rhash_portid with bound")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd73c2e64b435fd43f87e6a7a899f925f637a541
Author: Sean Anderson <sean.anderson@seco.com>
Date:   Mon Oct 4 17:50:02 2021 -0400

    net: sfp: Fix typo in state machine debug string
    
    [ Upstream commit 25a9da6641f1f66006e93ddbefee13a437efa8c0 ]
    
    The string should be "tx_disable" to match the state enum.
    
    Fixes: 4005a7cb4f55 ("net: phy: sftp: print debug message with text, not numbers")
    Signed-off-by: Sean Anderson <sean.anderson@seco.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c951c08a5996365aecbc5f1a9bddec3905e1ddfc
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 4 12:55:22 2021 -0700

    net/sched: sch_taprio: properly cancel timer from taprio_destroy()
    
    [ Upstream commit a56d447f196fa9973c568f54c0d76d5391c3b0c0 ]
    
    There is a comment in qdisc_create() about us not calling ops->reset()
    in some cases.
    
    err_out4:
            /*
             * Any broken qdiscs that would require a ops->reset() here?
             * The qdisc was never in action so it shouldn't be necessary.
             */
    
    As taprio sets a timer before actually receiving a packet, we need
    to cancel it from ops->destroy, just in case ops->reset has not
    been called.
    
    syzbot reported:
    
    ODEBUG: free active (active state 0) object type: hrtimer hint: advance_sched+0x0/0x9a0 arch/x86/include/asm/atomic64_64.h:22
    WARNING: CPU: 0 PID: 8441 at lib/debugobjects.c:505 debug_print_object+0x16e/0x250 lib/debugobjects.c:505
    Modules linked in:
    CPU: 0 PID: 8441 Comm: syz-executor813 Not tainted 5.14.0-rc6-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:debug_print_object+0x16e/0x250 lib/debugobjects.c:505
    Code: ff df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 af 00 00 00 48 8b 14 dd e0 d3 e3 89 4c 89 ee 48 c7 c7 e0 c7 e3 89 e8 5b 86 11 05 <0f> 0b 83 05 85 03 92 09 01 48 83 c4 18 5b 5d 41 5c 41 5d 41 5e c3
    RSP: 0018:ffffc9000130f330 EFLAGS: 00010282
    RAX: 0000000000000000 RBX: 0000000000000003 RCX: 0000000000000000
    RDX: ffff88802baeb880 RSI: ffffffff815d87b5 RDI: fffff52000261e58
    RBP: 0000000000000001 R08: 0000000000000000 R09: 0000000000000000
    R10: ffffffff815d25ee R11: 0000000000000000 R12: ffffffff898dd020
    R13: ffffffff89e3ce20 R14: ffffffff81653630 R15: dffffc0000000000
    FS:  0000000000f0d300(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007ffb64b3e000 CR3: 0000000036557000 CR4: 00000000001506e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     __debug_check_no_obj_freed lib/debugobjects.c:987 [inline]
     debug_check_no_obj_freed+0x301/0x420 lib/debugobjects.c:1018
     slab_free_hook mm/slub.c:1603 [inline]
     slab_free_freelist_hook+0x171/0x240 mm/slub.c:1653
     slab_free mm/slub.c:3213 [inline]
     kfree+0xe4/0x540 mm/slub.c:4267
     qdisc_create+0xbcf/0x1320 net/sched/sch_api.c:1299
     tc_modify_qdisc+0x4c8/0x1a60 net/sched/sch_api.c:1663
     rtnetlink_rcv_msg+0x413/0xb80 net/core/rtnetlink.c:5571
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2504
     netlink_unicast_kernel net/netlink/af_netlink.c:1314 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1340
     netlink_sendmsg+0x86d/0xdb0 net/netlink/af_netlink.c:1929
     sock_sendmsg_nosec net/socket.c:704 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:724
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2403
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2457
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2486
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
    
    Fixes: 44d4775ca518 ("net/sched: sch_taprio: reset child qdiscs before freeing them")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Davide Caratti <dcaratti@redhat.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Acked-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2c45102ae195e8bdc358cdeb7d25440f8c8a4fd
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 4 18:05:07 2021 -0700

    net: bridge: use nla_total_size_64bit() in br_get_linkxstats_size()
    
    [ Upstream commit dbe0b88064494b7bb6a9b2aa7e085b14a3112d44 ]
    
    bridge_fill_linkxstats() is using nla_reserve_64bit().
    
    We must use nla_total_size_64bit() instead of nla_total_size()
    for corresponding data structure.
    
    Fixes: 1080ab95e3c7 ("net: bridge: add support for IGMP/MLD stats and export them via netlink")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Nikolay Aleksandrov <nikolay@nvidia.com>
    Cc: Vivien Didelot <vivien.didelot@gmail.com>
    Acked-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8af0c7d3fb552961ecd8652a9079cd3e8add7038
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Tue Sep 28 15:49:40 2021 +0200

    ARM: imx6: disable the GIC CPU interface before calling stby-poweroff sequence
    
    [ Upstream commit 783f3db030563f7bcdfe2d26428af98ea1699a8e ]
    
    Any pending interrupt can prevent entering standby based power off state.
    To avoid it, disable the GIC CPU interface.
    
    Fixes: 8148d2136002 ("ARM: imx6: register pm_power_off handler if "fsl,pmic-stby-poweroff" is set")
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebe58e1c1a7f7b2c1132fb75a77c694888acb780
Author: Michael Walle <michael@walle.cc>
Date:   Thu Oct 1 11:11:30 2020 +0200

    arm64: dts: ls1028a: add missing CAN nodes
    
    [ Upstream commit 04fa4f03e3533f51b4db19cb487435f5862a0514 ]
    
    The LS1028A has two FlexCAN controller. These are compatible with
    the ones from the LX2160A. Add the nodes.
    
    The first controller was tested on the Kontron sl28 board.
    
    Signed-off-by: Michael Walle <michael@walle.cc>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b9f0d242ab6d4a9c30a6d6808718ebb9f79e453
Author: Andre Przywara <andre.przywara@arm.com>
Date:   Fri Aug 28 14:05:56 2020 +0100

    arm64: dts: freescale: Fix SP805 clock-names
    
    [ Upstream commit f2dc2359b75e1fd345fd710862f73db20dc55864 ]
    
    The SP805 binding sets the order of the clock-names to be: "wdog_clk",
    "apb_pclk" (in exactly that order).
    
    Change the order in the DTs for Freescale platforms to match that. The
    two clocks given in all nodes are actually the same, so that does not
    change any behaviour.
    
    Signed-off-by: Andre Przywara <andre.przywara@arm.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27e53e23a3cef73a6aac9a776685af1bebca0565
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Oct 1 19:20:33 2021 +0300

    ptp_pch: Load module automatically if ID matches
    
    [ Upstream commit 7cd8b1542a7ba0720c5a0a85ed414a122015228b ]
    
    The driver can't be loaded automatically because it misses
    module alias to be provided. Add corresponding MODULE_DEVICE_TABLE()
    call to the driver.
    
    Fixes: 863d08ece9bf ("supports eg20t ptp clock")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7b441a2e209d31658c2981b18fc7cb52ba2f323
Author: Pali Rohár <pali@kernel.org>
Date:   Sat Oct 2 11:04:09 2021 +0200

    powerpc/fsl/dts: Fix phy-connection-type for fm1mac3
    
    [ Upstream commit eed183abc0d3b8adb64fd1363b7cea7986cd58d6 ]
    
    Property phy-connection-type contains invalid value "sgmii-2500" per scheme
    defined in file ethernet-controller.yaml.
    
    Correct phy-connection-type value should be "2500base-x".
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Fixes: 84e0f1c13806 ("powerpc/mpc85xx: Add MDIO bus muxing support to the board device tree(s)")
    Acked-by: Scott Wood <oss@buserror.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c951a3be5e8803e93bb49a0aca0d30457d3c1b67
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Sep 30 14:22:39 2021 -0700

    net_sched: fix NULL deref in fifo_set_limit()
    
    [ Upstream commit 560ee196fe9e5037e5015e2cdb14b3aecb1cd7dc ]
    
    syzbot reported another NULL deref in fifo_set_limit() [1]
    
    I could repro the issue with :
    
    unshare -n
    tc qd add dev lo root handle 1:0 tbf limit 200000 burst 70000 rate 100Mbit
    tc qd replace dev lo parent 1:0 pfifo_fast
    tc qd change dev lo root handle 1:0 tbf limit 300000 burst 70000 rate 100Mbit
    
    pfifo_fast does not have a change() operation.
    Make fifo_set_limit() more robust about this.
    
    [1]
    BUG: kernel NULL pointer dereference, address: 0000000000000000
    PGD 1cf99067 P4D 1cf99067 PUD 7ca49067 PMD 0
    Oops: 0010 [#1] PREEMPT SMP KASAN
    CPU: 1 PID: 14443 Comm: syz-executor959 Not tainted 5.15.0-rc3-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:0x0
    Code: Unable to access opcode bytes at RIP 0xffffffffffffffd6.
    RSP: 0018:ffffc9000e2f7310 EFLAGS: 00010246
    RAX: dffffc0000000000 RBX: ffffffff8d6ecc00 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: ffff888024c27910 RDI: ffff888071e34000
    RBP: ffff888071e34000 R08: 0000000000000001 R09: ffffffff8fcfb947
    R10: 0000000000000001 R11: 0000000000000000 R12: ffff888024c27910
    R13: ffff888071e34018 R14: 0000000000000000 R15: ffff88801ef74800
    FS:  00007f321d897700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: ffffffffffffffd6 CR3: 00000000722c3000 CR4: 00000000003506e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     fifo_set_limit net/sched/sch_fifo.c:242 [inline]
     fifo_set_limit+0x198/0x210 net/sched/sch_fifo.c:227
     tbf_change+0x6ec/0x16d0 net/sched/sch_tbf.c:418
     qdisc_change net/sched/sch_api.c:1332 [inline]
     tc_modify_qdisc+0xd9a/0x1a60 net/sched/sch_api.c:1634
     rtnetlink_rcv_msg+0x413/0xb80 net/core/rtnetlink.c:5572
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2504
     netlink_unicast_kernel net/netlink/af_netlink.c:1314 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1340
     netlink_sendmsg+0x86d/0xdb0 net/netlink/af_netlink.c:1929
     sock_sendmsg_nosec net/socket.c:704 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:724
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2409
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2463
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2492
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fixes: fb0305ce1b03 ("net-sched: consolidate default fifo qdisc setup")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Link: https://lore.kernel.org/r/20210930212239.3430364-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 414bb4ead1362ef2c8592db723c017258f213988
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Sep 30 20:50:28 2021 +0300

    phy: mdio: fix memory leak
    
    [ Upstream commit ca6e11c337daf7925ff8a2aac8e84490a8691905 ]
    
    Syzbot reported memory leak in MDIO bus interface, the problem was in
    wrong state logic.
    
    MDIOBUS_ALLOCATED indicates 2 states:
            1. Bus is only allocated
            2. Bus allocated and __mdiobus_register() fails, but
               device_register() was called
    
    In case of device_register() has been called we should call put_device()
    to correctly free the memory allocated for this device, but mdiobus_free()
    calls just kfree(dev) in case of MDIOBUS_ALLOCATED state
    
    To avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED
    _before_ calling device_register(), because put_device() should be
    called even in case of device_register() failure.
    
    Link: https://lore.kernel.org/netdev/YVMRWNDZDUOvQjHL@shell.armlinux.org.uk/
    Fixes: 46abc02175b3 ("phylib: give mdio buses a device tree presence")
    Reported-and-tested-by: syzbot+398e7dc692ddbbb4cfec@syzkaller.appspotmail.com
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Link: https://lore.kernel.org/r/eceae1429fbf8fa5c73dd2a0d39d525aa905074d.1633024062.git.paskripkin@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b14f28126c51533bb329379f65de5b0dd689b13a
Author: Tatsuhiko Yasumatsu <th.yasumatsu@gmail.com>
Date:   Thu Sep 30 22:55:45 2021 +0900

    bpf: Fix integer overflow in prealloc_elems_and_freelist()
    
    [ Upstream commit 30e29a9a2bc6a4888335a6ede968b75cd329657a ]
    
    In prealloc_elems_and_freelist(), the multiplication to calculate the
    size passed to bpf_map_area_alloc() could lead to an integer overflow.
    As a result, out-of-bounds write could occur in pcpu_freelist_populate()
    as reported by KASAN:
    
    [...]
    [   16.968613] BUG: KASAN: slab-out-of-bounds in pcpu_freelist_populate+0xd9/0x100
    [   16.969408] Write of size 8 at addr ffff888104fc6ea0 by task crash/78
    [   16.970038]
    [   16.970195] CPU: 0 PID: 78 Comm: crash Not tainted 5.15.0-rc2+ #1
    [   16.970878] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
    [   16.972026] Call Trace:
    [   16.972306]  dump_stack_lvl+0x34/0x44
    [   16.972687]  print_address_description.constprop.0+0x21/0x140
    [   16.973297]  ? pcpu_freelist_populate+0xd9/0x100
    [   16.973777]  ? pcpu_freelist_populate+0xd9/0x100
    [   16.974257]  kasan_report.cold+0x7f/0x11b
    [   16.974681]  ? pcpu_freelist_populate+0xd9/0x100
    [   16.975190]  pcpu_freelist_populate+0xd9/0x100
    [   16.975669]  stack_map_alloc+0x209/0x2a0
    [   16.976106]  __sys_bpf+0xd83/0x2ce0
    [...]
    
    The possibility of this overflow was originally discussed in [0], but
    was overlooked.
    
    Fix the integer overflow by changing elem_size to u64 from u32.
    
      [0] https://lore.kernel.org/bpf/728b238e-a481-eb50-98e9-b0f430ab01e7@gmail.com/
    
    Fixes: 557c0c6e7df8 ("bpf: convert stackmap to pre-allocation")
    Signed-off-by: Tatsuhiko Yasumatsu <th.yasumatsu@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20210930135545.173698-1-th.yasumatsu@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3d68a42457af7094bbda961a0656ab2f4525abb
Author: Johan Almbladh <johan.almbladh@anyfinetworks.com>
Date:   Tue Sep 28 11:13:10 2021 +0200

    bpf, arm: Fix register clobbering in div/mod implementation
    
    [ Upstream commit 79e3445b38e0cab94264a3894c0c3d57c930b97e ]
    
    On ARM CPUs that lack div/mod instructions, ALU32 BPF_DIV and BPF_MOD are
    implemented using a call to a helper function. Before, the emitted code
    for those function calls failed to preserve caller-saved ARM registers.
    Since some of those registers happen to be mapped to BPF registers, it
    resulted in eBPF register values being overwritten.
    
    This patch emits code to push and pop the remaining caller-saved ARM
    registers r2-r3 into the stack during the div/mod function call. ARM
    registers r0-r1 are used as arguments and return value, and those were
    already saved and restored correctly.
    
    Fixes: 39c13c204bb1 ("arm: eBPF JIT compiler")
    Signed-off-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0c6e864d28dbf496c8f62dd51b3071fb761175f
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Sep 27 09:46:33 2021 -0700

    xtensa: call irqchip_init only when CONFIG_USE_OF is selected
    
    [ Upstream commit 6489f8d0e1d93a3603d8dad8125797559e4cf2a2 ]
    
    During boot time kernel configured with OF=y but USE_OF=n displays the
    following warnings and hangs shortly after starting userspace:
    
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 0 at kernel/irq/irqdomain.c:695 irq_create_mapping_affinity+0x29/0xc0
    irq_create_mapping_affinity(, 6) called with NULL domain
    CPU: 0 PID: 0 Comm: swapper Not tainted 5.15.0-rc3-00001-gd67ed2510d28 #30
    Call Trace:
      __warn+0x69/0xc4
      warn_slowpath_fmt+0x6c/0x94
      irq_create_mapping_affinity+0x29/0xc0
      local_timer_setup+0x40/0x88
      time_init+0xb1/0xe8
      start_kernel+0x31d/0x3f4
      _startup+0x13b/0x13b
    ---[ end trace 1e6630e1c5eda35b ]---
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 0 at arch/xtensa/kernel/time.c:141 local_timer_setup+0x58/0x88
    error: can't map timer irq
    CPU: 0 PID: 0 Comm: swapper Tainted: G        W         5.15.0-rc3-00001-gd67ed2510d28 #30
    Call Trace:
      __warn+0x69/0xc4
      warn_slowpath_fmt+0x6c/0x94
      local_timer_setup+0x58/0x88
      time_init+0xb1/0xe8
      start_kernel+0x31d/0x3f4
      _startup+0x13b/0x13b
    ---[ end trace 1e6630e1c5eda35c ]---
    Failed to request irq 0 (timer)
    
    Fix that by calling irqchip_init only when CONFIG_USE_OF is selected and
    calling legacy interrupt controller init otherwise.
    
    Fixes: da844a81779e ("xtensa: add device trees support")
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d10a2a8f8853c4d8606964e81dfa54a40daa5cd7
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Sep 24 20:29:51 2021 -0700

    xtensa: use CONFIG_USE_OF instead of CONFIG_OF
    
    [ Upstream commit d67ed2510d28a1eb33171010d35cf52178cfcbdd ]
    
    CONFIG_OF can be set by a randconfig or by a user -- without setting the
    early flattree option (OF_EARLY_FLATTREE).  This causes build errors.
    However, if randconfig or a user sets USE_OF in the Xtensa config,
    the right kconfig symbols are set to fix the build.
    
    Fixes these build errors:
    
    ../arch/xtensa/kernel/setup.c:67:19: error: ‘__dtb_start’ undeclared here (not in a function); did you mean ‘dtb_start’?
       67 | void *dtb_start = __dtb_start;
          |                   ^~~~~~~~~~~
    ../arch/xtensa/kernel/setup.c: In function 'xtensa_dt_io_area':
    ../arch/xtensa/kernel/setup.c:201:14: error: implicit declaration of function 'of_flat_dt_is_compatible'; did you mean 'of_machine_is_compatible'? [-Werror=implicit-function-declaration]
      201 |         if (!of_flat_dt_is_compatible(node, "simple-bus"))
    ../arch/xtensa/kernel/setup.c:204:18: error: implicit declaration of function 'of_get_flat_dt_prop' [-Werror=implicit-function-declaration]
      204 |         ranges = of_get_flat_dt_prop(node, "ranges", &len);
    ../arch/xtensa/kernel/setup.c:204:16: error: assignment to 'const __be32 *' {aka 'const unsigned int *'} from 'int' makes pointer from integer without a cast [-Werror=int-conversion]
      204 |         ranges = of_get_flat_dt_prop(node, "ranges", &len);
          |                ^
    ../arch/xtensa/kernel/setup.c: In function 'early_init_devtree':
    ../arch/xtensa/kernel/setup.c:228:9: error: implicit declaration of function 'early_init_dt_scan'; did you mean 'early_init_devtree'? [-Werror=implicit-function-declaration]
      228 |         early_init_dt_scan(params);
    ../arch/xtensa/kernel/setup.c:229:9: error: implicit declaration of function 'of_scan_flat_dt' [-Werror=implicit-function-declaration]
      229 |         of_scan_flat_dt(xtensa_dt_io_area, NULL);
    
    xtensa-elf-ld: arch/xtensa/mm/mmu.o:(.text+0x0): undefined reference to `xtensa_kio_paddr'
    
    Fixes: da844a81779e ("xtensa: add device trees support")
    Fixes: 6cb971114f63 ("xtensa: remap io area defined in device tree")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 73711563f5b5f1a0de079de577433147aee830bb
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Fri Sep 27 21:28:47 2019 -0700

    xtensa: move XCHAL_KIO_* definitions to kmem_layout.h
    
    [ Upstream commit 6591685d50043f615a1ad7ddd5bb263ef54808fc ]
    
    These address and size definitions define xtensa kernel memory layout,
    move them from vectors.h to the kmem_layout.h
    
    Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c82cffe1712410088088fbc6e537ed9355b5981e
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Thu Sep 16 18:13:39 2021 +0300

    arm64: dts: qcom: pm8150: use qcom,pm8998-pon binding
    
    [ Upstream commit a153d317168aa3d61a204fadc85bac3995381d33 ]
    
    Change pm8150 to use the qcom,pm8998-pon compatible string for the pon
    in order to pass reboot mode properly.
    
    Fixes: 5101f22a5c37 ("arm64: dts: qcom: pm8150: Add base dts file")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Tested-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20210916151341.1797512-1-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14c9c75d4809e31fa19040276f83e19631f13d00
Author: Marek Vasut <marex@denx.de>
Date:   Sun Sep 5 02:01:37 2021 +0200

    ARM: dts: imx: Fix USB host power regulator polarity on M53Menlo
    
    [ Upstream commit 5c187e2eb3f92daa38cb3d4ab45e1107ea34108e ]
    
    The MIC2025 switch input signal nEN is active low, describe it as such
    in the DT. The previous change to this regulator polarity was incorrectly
    influenced by broken quirks in gpiolib-of.c, which is now long fixed. So
    fix this regulator polarity setting here once and for all.
    
    Fixes: 3c3601cd6a6d3 ("ARM: dts: imx53: Update USB configuration on M53Menlo")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Shawn Guo <shawnguo@kernel.org>
    Cc: Fabio Estevam <festevam@gmail.com>
    Cc: NXP Linux Team <linux-imx@nxp.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 720a4dceee2284d6770d93bb9f977de3f23fdb54
Author: Marek Vasut <marex@denx.de>
Date:   Sun Sep 5 02:00:48 2021 +0200

    ARM: dts: imx: Add missing pinctrl-names for panel on M53Menlo
    
    [ Upstream commit c8c1efe14a4aadcfe93a158b1272e48298d2de15 ]
    
    The panel already contains pinctrl-0 phandle, but it is missing
    the default pinctrl-names property, so the pin configuration is
    ignored. Fill in the missing pinctrl-names property, so the pin
    configuration is applied.
    
    Fixes: d81765d693db6 ("ARM: dts: imx53: Update LCD panel node on M53Menlo")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Shawn Guo <shawnguo@kernel.org>
    Cc: Fabio Estevam <festevam@gmail.com>
    Cc: NXP Linux Team <linux-imx@nxp.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b2855ac7ef7e68cd3f28e38f93cead504ec491e
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Sat Aug 28 15:02:02 2021 +0800

    soc: qcom: mdt_loader: Drop PT_LOAD check on hash segment
    
    [ Upstream commit 833d51d7c66d6708abbc02398892b96b950167b9 ]
    
    PT_LOAD type denotes that the segment should be loaded into the final
    firmware memory region.  Hash segment is not one such, because it's only
    needed for PAS init and shouldn't be in the final firmware memory region.
    That's why mdt_phdr_valid() explicitly reject non PT_LOAD segment and
    hash segment.  This actually makes the hash segment type check in
    qcom_mdt_read_metadata() unnecessary and redundant.  For a hash segment,
    it won't be loaded into firmware memory region anyway, due to the
    QCOM_MDT_TYPE_HASH check in mdt_phdr_valid(), even if it has a PT_LOAD
    type for some reason (misusing or abusing?).
    
    Some firmware files on Sony phones are such examples, e.g WCNSS firmware
    of Sony Xperia M4 Aqua phone.  The type of hash segment is just PT_LOAD.
    Drop the unnecessary hash segment type check in qcom_mdt_read_metadata()
    to fix firmware loading failure on these phones, while hash segment is
    still kept away from the final firmware memory region.
    
    Fixes: 498b98e93900 ("soc: qcom: mdt_loader: Support loading non-split images")
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Reviewed-by: Marijn Suijten <marijn.suijten@somainline.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20210828070202.7033-1-shawn.guo@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1179cd690a768b5b27eda2809b9c302c70a4411c
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Sun Aug 29 22:30:25 2021 +0200

    ARM: dts: qcom: apq8064: Use 27MHz PXO clock as DSI PLL reference
    
    [ Upstream commit f1db21c315f4b4f8c3fbea56aac500673132d317 ]
    
    The 28NM DSI PLL driver for msm8960 calculates with a 27MHz reference
    clock and should hence use PXO, not CXO which runs at 19.2MHz.
    
    Note that none of the DSI PHY/PLL drivers currently use this "ref"
    clock; they all rely on (sometimes inexistant) global clock names and
    usually function normally without a parent clock.  This discrepancy will
    be corrected in a future patch, for which this change needs to be in
    place first.
    
    Fixes: 6969d1d9c615 ("ARM: dts: qcom-apq8064: Set 'cxo_board' as ref clock of the DSI PHY")
    Reviewed-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Link: https://lore.kernel.org/r/20210829203027.276143-2-marijn.suijten@somainline.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdc189d6b69f594718feb5bc76ea3bdb99daf16d
Author: Antonio Martorana <amartora@codeaurora.org>
Date:   Mon Aug 16 17:24:39 2021 -0700

    soc: qcom: socinfo: Fixed argument passed to platform_set_data()
    
    [ Upstream commit 9c5a4ec69bbf5951f84ada9e0db9c6c50de61808 ]
    
    Set qcom_socinfo pointer as data being stored instead of pointer
    to soc_device structure. Aligns with future calls to platform_get_data()
    which expects qcom_socinfo pointer.
    
    Fixes: efb448d0a3fc ("soc: qcom: Add socinfo driver")
    Signed-off-by: Antonio Martorana <amartora@codeaurora.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/1629159879-95777-1-git-send-email-amartora@codeaurora.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a0fe45501a273ac52252448e43f975f0c18811e
Author: Piotr Krysiuk <piotras@gmail.com>
Date:   Wed Sep 15 17:04:37 2021 +0100

    bpf, mips: Validate conditional branch offsets
    
    commit 37cb28ec7d3a36a5bace7063a3dba633ab110f8b upstream.
    
    The conditional branch instructions on MIPS use 18-bit signed offsets
    allowing for a branch range of 128 KBytes (backward and forward).
    However, this limit is not observed by the cBPF JIT compiler, and so
    the JIT compiler emits out-of-range branches when translating certain
    cBPF programs. A specific example of such a cBPF program is included in
    the "BPF_MAXINSNS: exec all MSH" test from lib/test_bpf.c that executes
    anomalous machine code containing incorrect branch offsets under JIT.
    
    Furthermore, this issue can be abused to craft undesirable machine
    code, where the control flow is hijacked to execute arbitrary Kernel
    code.
    
    The following steps can be used to reproduce the issue:
    
      # echo 1 > /proc/sys/net/core/bpf_jit_enable
      # modprobe test_bpf test_name="BPF_MAXINSNS: exec all MSH"
    
    This should produce multiple warnings from build_bimm() similar to:
    
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 209 at arch/mips/mm/uasm-mips.c:210 build_insn+0x558/0x590
      Micro-assembler field overflow
      Modules linked in: test_bpf(+)
      CPU: 0 PID: 209 Comm: modprobe Not tainted 5.14.3 #1
      Stack : 00000000 807bb824 82b33c9c 801843c0 00000000 00000004 00000000 63c9b5ee
              82b33af4 80999898 80910000 80900000 82fd6030 00000001 82b33a98 82087180
              00000000 00000000 80873b28 00000000 000000fc 82b3394c 00000000 2e34312e
              6d6d6f43 809a180f 809a1836 6f6d203a 80900000 00000001 82b33bac 80900000
              00027f80 00000000 00000000 807bb824 00000000 804ed790 001cc317 00000001
      [...]
      Call Trace:
      [<80108f44>] show_stack+0x38/0x118
      [<807a7aac>] dump_stack_lvl+0x5c/0x7c
      [<807a4b3c>] __warn+0xcc/0x140
      [<807a4c3c>] warn_slowpath_fmt+0x8c/0xb8
      [<8011e198>] build_insn+0x558/0x590
      [<8011e358>] uasm_i_bne+0x20/0x2c
      [<80127b48>] build_body+0xa58/0x2a94
      [<80129c98>] bpf_jit_compile+0x114/0x1e4
      [<80613fc4>] bpf_prepare_filter+0x2ec/0x4e4
      [<8061423c>] bpf_prog_create+0x80/0xc4
      [<c0a006e4>] test_bpf_init+0x300/0xba8 [test_bpf]
      [<8010051c>] do_one_initcall+0x50/0x1d4
      [<801c5e54>] do_init_module+0x60/0x220
      [<801c8b20>] sys_finit_module+0xc4/0xfc
      [<801144d0>] syscall_common+0x34/0x58
      [...]
      ---[ end trace a287d9742503c645 ]---
    
    Then the anomalous machine code executes:
    
    => 0xc0a18000:  addiu   sp,sp,-16
       0xc0a18004:  sw      s3,0(sp)
       0xc0a18008:  sw      s4,4(sp)
       0xc0a1800c:  sw      s5,8(sp)
       0xc0a18010:  sw      ra,12(sp)
       0xc0a18014:  move    s5,a0
       0xc0a18018:  move    s4,zero
       0xc0a1801c:  move    s3,zero
    
       # __BPF_STMT(BPF_LDX | BPF_B | BPF_MSH, 0)
       0xc0a18020:  lui     t6,0x8012
       0xc0a18024:  ori     t4,t6,0x9e14
       0xc0a18028:  li      a1,0
       0xc0a1802c:  jalr    t4
       0xc0a18030:  move    a0,s5
       0xc0a18034:  bnez    v0,0xc0a1ffb8           # incorrect branch offset
       0xc0a18038:  move    v0,zero
       0xc0a1803c:  andi    s4,s3,0xf
       0xc0a18040:  b       0xc0a18048
       0xc0a18044:  sll     s4,s4,0x2
       [...]
    
       # __BPF_STMT(BPF_LDX | BPF_B | BPF_MSH, 0)
       0xc0a1ffa0:  lui     t6,0x8012
       0xc0a1ffa4:  ori     t4,t6,0x9e14
       0xc0a1ffa8:  li      a1,0
       0xc0a1ffac:  jalr    t4
       0xc0a1ffb0:  move    a0,s5
       0xc0a1ffb4:  bnez    v0,0xc0a1ffb8           # incorrect branch offset
       0xc0a1ffb8:  move    v0,zero
       0xc0a1ffbc:  andi    s4,s3,0xf
       0xc0a1ffc0:  b       0xc0a1ffc8
       0xc0a1ffc4:  sll     s4,s4,0x2
    
       # __BPF_STMT(BPF_LDX | BPF_B | BPF_MSH, 0)
       0xc0a1ffc8:  lui     t6,0x8012
       0xc0a1ffcc:  ori     t4,t6,0x9e14
       0xc0a1ffd0:  li      a1,0
       0xc0a1ffd4:  jalr    t4
       0xc0a1ffd8:  move    a0,s5
       0xc0a1ffdc:  bnez    v0,0xc0a3ffb8           # correct branch offset
       0xc0a1ffe0:  move    v0,zero
       0xc0a1ffe4:  andi    s4,s3,0xf
       0xc0a1ffe8:  b       0xc0a1fff0
       0xc0a1ffec:  sll     s4,s4,0x2
       [...]
    
       # epilogue
       0xc0a3ffb8:  lw      s3,0(sp)
       0xc0a3ffbc:  lw      s4,4(sp)
       0xc0a3ffc0:  lw      s5,8(sp)
       0xc0a3ffc4:  lw      ra,12(sp)
       0xc0a3ffc8:  addiu   sp,sp,16
       0xc0a3ffcc:  jr      ra
       0xc0a3ffd0:  nop
    
    To mitigate this issue, we assert the branch ranges for each emit call
    that could generate an out-of-range branch.
    
    Fixes: 36366e367ee9 ("MIPS: BPF: Restore MIPS32 cBPF JIT")
    Fixes: c6610de353da ("MIPS: net: Add BPF JIT")
    Signed-off-by: Piotr Krysiuk <piotras@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Tested-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Acked-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Cc: Paul Burton <paulburton@kernel.org>
    Cc: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Link: https://lore.kernel.org/bpf/20210915160437.4080-1-piotras@gmail.com
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ed040244595db01e765d58d3fdc2d3817f55934
Author: Paul Burton <paulburton@kernel.org>
Date:   Thu Dec 5 10:23:18 2019 -0800

    MIPS: BPF: Restore MIPS32 cBPF JIT
    
    commit 36366e367ee93ced84fddb8fae6675e12985f5a4 upstream.
    
    Commit 716850ab104d ("MIPS: eBPF: Initial eBPF support for MIPS32
    architecture.") enabled our eBPF JIT for MIPS32 kernels, whereas it has
    previously only been availailable for MIPS64. It was my understanding at
    the time that the BPF test suite was passing & JITing a comparable
    number of tests to our cBPF JIT [1], but it turns out that was not the
    case.
    
    The eBPF JIT has a number of problems on MIPS32:
    
    - Most notably various code paths still result in emission of MIPS64
      instructions which will cause reserved instruction exceptions & kernel
      panics when run on MIPS32 CPUs.
    
    - The eBPF JIT doesn't account for differences between the O32 ABI used
      by MIPS32 kernels versus the N64 ABI used by MIPS64 kernels. Notably
      arguments beyond the first 4 are passed on the stack in O32, and this
      is entirely unhandled when JITing a BPF_CALL instruction. Stack space
      must be reserved for arguments even if they all fit in registers, and
      the callee is free to assume that stack space has been reserved for
      its use - with the eBPF JIT this is not the case, so calling any
      function can result in clobbering values on the stack & unpredictable
      behaviour. Function arguments in eBPF are always 64-bit values which
      is also entirely unhandled - the JIT still uses a single (32-bit)
      register per argument. As a result all function arguments are always
      passed incorrectly when JITing a BPF_CALL instruction, leading to
      kernel crashes or strange behavior.
    
    - The JIT attempts to bail our on use of ALU64 instructions or 64-bit
      memory access instructions. The code doing this at the start of
      build_one_insn() incorrectly checks whether BPF_OP() equals BPF_DW,
      when it should really be checking BPF_SIZE() & only doing so when
      BPF_CLASS() is one of BPF_{LD,LDX,ST,STX}. This results in false
      positives that cause more bailouts than intended, and that in turns
      hides some of the problems described above.
    
    - The kernel's cBPF->eBPF translation makes heavy use of 64-bit eBPF
      instructions that the MIPS32 eBPF JIT bails out on, leading to most
      cBPF programs not being JITed at all.
    
    Until these problems are resolved, revert the removal of the cBPF JIT
    performed by commit 716850ab104d ("MIPS: eBPF: Initial eBPF support for
    MIPS32 architecture."). Together with commit f8fffebdea75 ("MIPS: BPF:
    Disable MIPS32 eBPF JIT") this restores MIPS32 BPF JIT behavior back to
    the same state it was prior to the introduction of the broken eBPF JIT
    support.
    
    [1] https://lore.kernel.org/linux-mips/MWHPR2201MB13583388481F01A422CE7D66D4410@MWHPR2201MB1358.namprd22.prod.outlook.com/
    
    Signed-off-by: Paul Burton <paulburton@kernel.org>
    Fixes: 716850ab104d ("MIPS: eBPF: Initial eBPF support for MIPS32 architecture.")
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Hassan Naveed <hnaveed@wavecomp.com>
    Cc: Tony Ambardar <itugrok@yahoo.com>
    Cc: bpf@vger.kernel.org
    Cc: netdev@vger.kernel.org
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4239cd380afddde09a6f6f81d567984ea8b8cece
Author: David Heidelberg <david@ixit.cz>
Date:   Wed Aug 18 08:53:17 2021 +0200

    ARM: dts: qcom: apq8064: use compatible which contains chipid
    
    commit f5c03f131dae3f06d08464e6157dd461200f78d9 upstream.
    
    Also resolves these kernel warnings for APQ8064:
    adreno 4300000.adreno-3xx: Using legacy qcom,chipid binding!
    adreno 4300000.adreno-3xx: Use compatible qcom,adreno-320.2 instead.
    
    Tested on Nexus 7 2013, no functional changes.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Link: https://lore.kernel.org/r/20210818065317.19822-1-david@ixit.cz
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30d68bf74d52d5e1d8d319878decc8893f3d897d
Author: Roger Quadros <rogerq@kernel.org>
Date:   Thu Sep 2 12:58:28 2021 +0300

    ARM: dts: omap3430-sdp: Fix NAND device node
    
    commit 80d680fdccba214e8106dc1aa33de5207ad75394 upstream.
    
    Nand is on CS1 so reg properties first field should be 1 not 0.
    
    Fixes: 44e4716499b8 ("ARM: dts: omap3: Fix NAND device nodes")
    Cc: stable@vger.kernel.org # v4.6+
    Signed-off-by: Roger Quadros <rogerq@kernel.org>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2abb4077fa1b88b147c74d0973afc0bf0bdeafd1
Author: Juergen Gross <jgross@suse.com>
Date:   Tue Oct 5 15:34:33 2021 +0200

    xen/balloon: fix cancelled balloon action
    
    commit 319933a80fd4f07122466a77f93e5019d71be74c upstream.
    
    In case a ballooning action is cancelled the new kernel thread handling
    the ballooning might end up in a busy loop.
    
    Fix that by handling the cancelled action gracefully.
    
    While at it introduce a short wait for the BP_WAIT case.
    
    Cc: stable@vger.kernel.org
    Fixes: 8480ed9c2bbd56 ("xen/balloon: use a kernel thread instead a workqueue")
    Reported-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Tested-by: Jason Andryuk <jandryuk@gmail.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20211005133433.32008-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42fbcbaa8a99381c013577fd0127906528cfc996
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Sep 30 15:44:41 2021 -0400

    nfsd4: Handle the NFSv4 READDIR 'dircount' hint being zero
    
    commit f2e717d655040d632c9015f19aa4275f8b16e7f2 upstream.
    
    RFC3530 notes that the 'dircount' field may be zero, in which case the
    recommendation is to ignore it, and only enforce the 'maxcount' field.
    In RFC5661, this recommendation to ignore a zero valued field becomes a
    requirement.
    
    Fixes: aee377644146 ("nfsd4: fix rd_dircount enforcement")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f88420197a049ded1495b0ad0e3eec471c1e7d5f
Author: Patrick Ho <Patrick.Ho@netapp.com>
Date:   Sat Aug 21 02:56:26 2021 -0400

    nfsd: fix error handling of register_pernet_subsys() in init_nfsd()
    
    commit 1d625050c7c2dd877e108e382b8aaf1ae3cfe1f4 upstream.
    
    init_nfsd() should not unregister pernet subsys if the register fails
    but should instead unwind from the last successful operation which is
    register_filesystem().
    
    Unregistering a failed register_pernet_subsys() call can result in
    a kernel GPF as revealed by programmatically injecting an error in
    register_pernet_subsys().
    
    Verified the fix handled failure gracefully with no lingering nfsd
    entry in /proc/filesystems.  This change was introduced by the commit
    bd5ae9288d64 ("nfsd: register pernet ops last, unregister first"),
    the original error handling logic was correct.
    
    Fixes: bd5ae9288d64 ("nfsd: register pernet ops last, unregister first")
    Cc: stable@vger.kernel.org
    Signed-off-by: Patrick Ho <Patrick.Ho@netapp.com>
    Acked-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fab338f33c25c4816ca0b2d83a04a0097c2c4aaf
Author: Zheng Liang <zhengliang6@huawei.com>
Date:   Fri Sep 24 09:16:27 2021 +0800

    ovl: fix missing negative dentry check in ovl_rename()
    
    commit a295aef603e109a47af355477326bd41151765b6 upstream.
    
    The following reproducer
    
      mkdir lower upper work merge
      touch lower/old
      touch lower/new
      mount -t overlay overlay -olowerdir=lower,upperdir=upper,workdir=work merge
      rm merge/new
      mv merge/old merge/new & unlink upper/new
    
    may result in this race:
    
    PROCESS A:
      rename("merge/old", "merge/new");
      overwrite=true,ovl_lower_positive(old)=true,
      ovl_dentry_is_whiteout(new)=true -> flags |= RENAME_EXCHANGE
    
    PROCESS B:
      unlink("upper/new");
    
    PROCESS A:
      lookup newdentry in new_upperdir
      call vfs_rename() with negative newdentry and RENAME_EXCHANGE
    
    Fix by adding the missing check for negative newdentry.
    
    Signed-off-by: Zheng Liang <zhengliang6@huawei.com>
    Fixes: e9be9d5e76e3 ("overlay filesystem")
    Cc: <stable@vger.kernel.org> # v3.18
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4920aae61bd9def1bfe105f396b2253d91f6231c
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Tue Sep 28 09:36:52 2021 +0200

    mmc: meson-gx: do not use memcpy_to/fromio for dram-access-quirk
    
    commit 8a38a4d51c5055d0201542e5ea3c0cb287f6e223 upstream.
    
    The memory at the end of the controller only accepts 32bit read/write
    accesses, but the arm64 memcpy_to/fromio implementation only uses 64bit
    (which will be split into two 32bit access) and 8bit leading to incomplete
    copies to/from this memory when the buffer is not multiple of 8bytes.
    
    Add a local copy using writel/readl accesses to make sure we use the right
    memory access width.
    
    The switch to memcpy_to/fromio was done because of 285133040e6c
    ("arm64: Import latest memcpy()/memmove() implementation"), but using memcpy
    worked before since it mainly used 32bit memory acceses.
    
    Fixes: 103a5348c22c ("mmc: meson-gx: use memcpy_to/fromio for dram-access-quirk")
    Reported-by: Christian Hewitt <christianshewitt@gmail.com>
    Suggested-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Tested-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210928073652.434690-1-narmstrong@baylibre.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47f7bb3dc2a3f7f5653cfc7ae7cafb9a1e3f4d24
Author: Jan Beulich <jbeulich@suse.com>
Date:   Wed Sep 22 12:17:48 2021 +0200

    xen/privcmd: fix error handling in mmap-resource processing
    
    commit e11423d6721dd63b23fb41ade5e8d0b448b17780 upstream.
    
    xen_pfn_t is the same size as int only on 32-bit builds (and not even
    on Arm32). Hence pfns[] can't be used directly to read individual error
    values returned from xen_remap_domain_mfn_array(); every other error
    indicator would be skipped/ignored on 64-bit.
    
    Fixes: 3ad0876554ca ("xen/privcmd: add IOCTL_PRIVCMD_MMAP_RESOURCE")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Link: https://lore.kernel.org/r/aa6d6a67-6889-338a-a910-51e889f792d5@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>

commit 9d93cfdaf8d4fa6655ddfa50992b8f7b24b7b673
Author: Xu Yang <xu.yang_2@nxp.com>
Date:   Tue Sep 28 19:16:39 2021 +0800

    usb: typec: tcpm: handle SRC_STARTUP state if cc changes
    
    commit 6d91017a295e9790eec02c4e43f020cdb55f5d98 upstream.
    
    TCPM for DRP should do the same action as SRC_ATTACHED when cc changes in
    SRC_STARTUP state. Otherwise, TCPM will transition to SRC_UNATTACHED state
    which is not satisfied with the Type-C spec.
    
    Per Type-C spec:
    DRP port should move to Unattached.SNK instead of Unattached.SRC if sink
    removed.
    
    Fixes: 4b4e02c83167 ("typec: tcpm: Move out of staging")
    cc: <stable@vger.kernel.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Xu Yang <xu.yang_2@nxp.com>
    Link: https://lore.kernel.org/r/20210928111639.3854174-1-xu.yang_2@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b53aa224ada24579e58f04541a7d30d9896a9769
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Sep 29 11:09:37 2021 +0200

    USB: cdc-acm: fix break reporting
    
    commit 58fc1daa4d2e9789b9ffc880907c961ea7c062cc upstream.
    
    A recent change that started reporting break events forgot to push the
    event to the line discipline, which meant that a detected break would
    not be reported until further characters had been receive (the port
    could even have been closed and reopened in between).
    
    Fixes: 08dff274edda ("cdc-acm: fix BREAK rx code path adding necessary calls")
    Cc: stable@vger.kernel.org
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210929090937.7410-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3135935b7f9af4316a02b1fe050f4c36455168ac
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Sep 29 11:09:36 2021 +0200

    USB: cdc-acm: fix racy tty buffer accesses
    
    commit 65a205e6113506e69a503b61d97efec43fc10fd7 upstream.
    
    A recent change that started reporting break events to the line
    discipline caused the tty-buffer insertions to no longer be serialised
    by inserting events also from the completion handler for the interrupt
    endpoint.
    
    Completion calls for distinct endpoints are not guaranteed to be
    serialised. For example, in case a host-controller driver uses
    bottom-half completion, the interrupt and bulk-in completion handlers
    can end up running in parallel on two CPUs (high-and low-prio tasklets,
    respectively) thereby breaking the tty layer's single producer
    assumption.
    
    Fix this by holding the read lock also when inserting characters from
    the bulk endpoint.
    
    Fixes: 08dff274edda ("cdc-acm: fix BREAK rx code path adding necessary calls")
    Cc: stable@vger.kernel.org
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210929090937.7410-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c2392f03f3b3644482383d65a834f05225dc400
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Tue Sep 21 16:34:42 2021 +0200

    Partially revert "usb: Kconfig: using select for USB_COMMON dependency"
    
    commit 4d1aa9112c8e6995ef2c8a76972c9671332ccfea upstream.
    
    This reverts commit cb9c1cfc86926d0e86d19c8e34f6c23458cd3478 for
    USB_LED_TRIG.  This config symbol has bool type and enables extra code
    in usb_common itself, not a separate driver.  Enabling it should not
    force usb_common to be built-in!
    
    Fixes: cb9c1cfc8692 ("usb: Kconfig: using select for USB_COMMON dependency")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Salvatore Bonaccorso <carnil@debian.org>
    Link: https://lore.kernel.org/r/20210921143442.340087-1-carnil@debian.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
