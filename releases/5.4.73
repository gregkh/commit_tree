commit bde3f94035b0e5a724853544d65d00536e1889b2
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Oct 29 09:58:11 2020 +0100

    Linux 5.4.73
    
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20201027135455.027547757@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c7ccd7d4aceebbd1fc3f96db0d900f3dc099b59
Author: Lorenzo Colitti <lorenzo@google.com>
Date:   Tue Aug 25 14:55:05 2020 +0900

    usb: gadget: f_ncm: allow using NCM in SuperSpeed Plus gadgets.
    
    [ Upstream commit 7974ecd7d3c0f42a98566f281e44ea8573a2ad88 ]
    
    Currently, enabling f_ncm at SuperSpeed Plus speeds results in an
    oops in config_ep_by_speed because ncm_set_alt passes in NULL
    ssp_descriptors. Fix this by re-using the SuperSpeed descriptors.
    This is safe because usb_assign_descriptors calls
    usb_copy_descriptors.
    
    Tested: enabled f_ncm on a dwc3 gadget and 10Gbps link, ran iperf
    Reviewed-by: Maciej Å»enczykowski <maze@google.com>
    Signed-off-by: Lorenzo Colitti <lorenzo@google.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit efb893a56cea0b489a8802ddc4c4f61a2063ee5b
Author: Christian Eggers <ceggers@arri.de>
Date:   Tue Jul 28 11:29:59 2020 +0200

    eeprom: at25: set minimum read/write access stride to 1
    
    commit 284f52ac1c6cfa1b2e5c11b84653dd90e4e91de7 upstream.
    
    SPI eeproms are addressed by byte.
    
    Signed-off-by: Christian Eggers <ceggers@arri.de>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200728092959.24600-1-ceggers@arri.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8011f45598cde18cf5da96944d41e6d3f79e07b5
Author: Peter Chen <peter.chen@nxp.com>
Date:   Tue Sep 1 10:35:49 2020 +0800

    usb: cdns3: gadget: free interrupt after gadget has deleted
    
    commit 98df91f8840cf750a0bc7c4c5d6b6085bac945b3 upstream.
    
    The interrupt may occur during the gadget deletion, it fixes the
    below oops.
    
    [ 2394.974604] configfs-gadget gadget: suspend
    [ 2395.042578] configfs-gadget 5b130000.usb: unregistering UDC driver [g1]
    [ 2395.382562] irq 229: nobody cared (try booting with the "irqpoll" option)
    [ 2395.389362] CPU: 0 PID: 301 Comm: kworker/u12:6 Not tainted 5.8.0-rc3-next-20200703-00060-g2f13b83cbf30-dirty #456
    [ 2395.399712] Hardware name: Freescale i.MX8QM MEK (DT)
    [ 2395.404782] Workqueue: 2-0051 tcpm_state_machine_work
    [ 2395.409832] Call trace:
    [ 2395.412289]  dump_backtrace+0x0/0x1d0
    [ 2395.415950]  show_stack+0x1c/0x28
    [ 2395.419271]  dump_stack+0xbc/0x118
    [ 2395.422678]  __report_bad_irq+0x50/0xe0
    [ 2395.426513]  note_interrupt+0x2cc/0x38c
    [ 2395.430355]  handle_irq_event_percpu+0x88/0x90
    [ 2395.434800]  handle_irq_event+0x4c/0xe8
    [ 2395.438640]  handle_fasteoi_irq+0xbc/0x168
    [ 2395.442740]  generic_handle_irq+0x34/0x48
    [ 2395.446752]  __handle_domain_irq+0x68/0xc0
    [ 2395.450846]  gic_handle_irq+0x64/0x150
    [ 2395.454596]  el1_irq+0xb8/0x180
    [ 2395.457733]  __do_softirq+0xac/0x3b8
    [ 2395.461310]  irq_exit+0xc0/0xe0
    [ 2395.464448]  __handle_domain_irq+0x6c/0xc0
    [ 2395.468540]  gic_handle_irq+0x64/0x150
    [ 2395.472295]  el1_irq+0xb8/0x180
    [ 2395.475436]  _raw_spin_unlock_irqrestore+0x14/0x48
    [ 2395.480232]  usb_gadget_disconnect+0x120/0x140
    [ 2395.484678]  usb_gadget_remove_driver+0xb4/0xd0
    [ 2395.489208]  usb_del_gadget+0x6c/0xc8
    [ 2395.492872]  cdns3_gadget_exit+0x5c/0x120
    [ 2395.496882]  cdns3_role_stop+0x60/0x90
    [ 2395.500634]  cdns3_role_set+0x64/0xd8
    [ 2395.504301]  usb_role_switch_set_role.part.0+0x3c/0x90
    [ 2395.509444]  usb_role_switch_set_role+0x20/0x30
    [ 2395.513978]  tcpm_mux_set+0x60/0xf8
    [ 2395.517470]  tcpm_reset_port+0xa4/0xf0
    [ 2395.521222]  tcpm_detach.part.0+0x44/0x50
    [ 2395.525227]  tcpm_state_machine_work+0x8b0/0x2360
    [ 2395.529932]  process_one_work+0x1c8/0x470
    [ 2395.533939]  worker_thread+0x50/0x420
    [ 2395.537603]  kthread+0x148/0x168
    [ 2395.540830]  ret_from_fork+0x10/0x18
    [ 2395.544399] handlers:
    [ 2395.546671] [<000000008dea28da>] cdns3_wakeup_irq
    [ 2395.551375] [<000000009fee5c61>] cdns3_drd_irq threaded [<000000005148eaec>] cdns3_drd_thread_irq
    [ 2395.560255] Disabling IRQ #229
    [ 2395.563454] configfs-gadget gadget: unbind function 'Mass Storage Function'/000000000132f835
    [ 2395.563657] configfs-gadget gadget: unbind
    [ 2395.563917] udc 5b130000.usb: releasing '5b130000.usb'
    
    Fixes: 7733f6c32e36 ("usb: cdns3: Add Cadence USB3 DRD Driver")
    Cc: <stable@vger.kernel.org>
    Acked-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed134662a62be5d69b15594dbf7b9f5a39bc3fb3
Author: Oliver Neukum <oneukum@suse.com>
Date:   Mon Sep 28 23:17:55 2020 +0900

    USB: cdc-wdm: Make wdm_flush() interruptible and add wdm_fsync().
    
    commit 37d2a36394d954413a495da61da1b2a51ecd28ab upstream.
    
    syzbot is reporting hung task at wdm_flush() [1], for there is a circular
    dependency that wdm_flush() from flip_close() for /dev/cdc-wdm0 forever
    waits for /dev/raw-gadget to be closed while close() for /dev/raw-gadget
    cannot be called unless close() for /dev/cdc-wdm0 completes.
    
    Tetsuo Handa considered that such circular dependency is an usage error [2]
    which corresponds to an unresponding broken hardware [3]. But Alan Stern
    responded that we should be prepared for such hardware [4]. Therefore,
    this patch changes wdm_flush() to use wait_event_interruptible_timeout()
    which gives up after 30 seconds, for hardware that remains silent must be
    ignored. The 30 seconds are coming out of thin air.
    
    Changing wait_event() to wait_event_interruptible_timeout() makes error
    reporting from close() syscall less reliable. To compensate it, this patch
    also implements wdm_fsync() which does not use timeout. Those who want to
    be very sure that data has gone out to the device are now advised to call
    fsync(), with a caveat that fsync() can return -EINVAL when running on
    older kernels which do not implement wdm_fsync().
    
    This patch also fixes three more problems (listed below) found during
    exhaustive discussion and testing.
    
      Since multiple threads can concurrently call wdm_write()/wdm_flush(),
      we need to use wake_up_all() whenever clearing WDM_IN_USE in order to
      make sure that all waiters are woken up. Also, error reporting needs
      to use fetch-and-clear approach in order not to report same error for
      multiple times.
    
      Since wdm_flush() checks WDM_DISCONNECTING, wdm_write() should as well
      check WDM_DISCONNECTING.
    
      In wdm_flush(), since locks are not held, it is not safe to dereference
      desc->intf after checking that WDM_DISCONNECTING is not set [5]. Thus,
      remove dev_err() from wdm_flush().
    
    [1] https://syzkaller.appspot.com/bug?id=e7b761593b23eb50855b9ea31e3be5472b711186
    [2] https://lkml.kernel.org/r/27b7545e-8f41-10b8-7c02-e35a08eb1611@i-love.sakura.ne.jp
    [3] https://lkml.kernel.org/r/79ba410f-e0ef-2465-b94f-6b9a4a82adf5@i-love.sakura.ne.jp
    [4] https://lkml.kernel.org/r/20200530011040.GB12419@rowland.harvard.edu
    [5] https://lkml.kernel.org/r/c85331fc-874c-6e46-a77f-0ef1dc075308@i-love.sakura.ne.jp
    
    Reported-by: syzbot <syzbot+854768b99f19e89d7f81@syzkaller.appspotmail.com>
    Cc: stable <stable@vger.kernel.org>
    Co-developed-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20200928141755.3476-1-penguin-kernel@I-love.SAKURA.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cc661ab2bde53e73d65b427241051f76e9f10e9
Author: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
Date:   Sat Oct 3 00:41:51 2020 +0900

    usb: cdc-acm: add quirk to blacklist ETAS ES58X devices
    
    commit a4f88430af896bf34ec25a7a5f0e053fb3d928e0 upstream.
    
    The ES58X devices has a CDC ACM interface (used for debug
    purpose). During probing, the device is thus recognized as USB Modem
    (CDC ACM), preventing the etas-es58x module to load:
      usbcore: registered new interface driver etas_es58x
      usb 1-1.1: new full-speed USB device number 14 using xhci_hcd
      usb 1-1.1: New USB device found, idVendor=108c, idProduct=0159, bcdDevice= 1.00
      usb 1-1.1: New USB device strings: Mfr=1, Product=2, SerialNumber=3
      usb 1-1.1: Product: ES581.4
      usb 1-1.1: Manufacturer: ETAS GmbH
      usb 1-1.1: SerialNumber: 2204355
      cdc_acm 1-1.1:1.0: No union descriptor, testing for castrated device
      cdc_acm 1-1.1:1.0: ttyACM0: USB ACM device
    
    Thus, these have been added to the ignore list in
    drivers/usb/class/cdc-acm.c
    
    N.B. Future firmware release of the ES58X will remove the CDC-ACM
    interface.
    
    `lsusb -v` of the three devices variant (ES581.4, ES582.1 and
    ES584.1):
    
      Bus 001 Device 011: ID 108c:0159 Robert Bosch GmbH ES581.4
      Device Descriptor:
        bLength                18
        bDescriptorType         1
        bcdUSB               1.10
        bDeviceClass            2 Communications
        bDeviceSubClass         0
        bDeviceProtocol         0
        bMaxPacketSize0        64
        idVendor           0x108c Robert Bosch GmbH
        idProduct          0x0159
        bcdDevice            1.00
        iManufacturer           1 ETAS GmbH
        iProduct                2 ES581.4
        iSerial                 3 2204355
        bNumConfigurations      1
        Configuration Descriptor:
          bLength                 9
          bDescriptorType         2
          wTotalLength       0x0035
          bNumInterfaces          1
          bConfigurationValue     1
          iConfiguration          5 Bus Powered Configuration
          bmAttributes         0x80
            (Bus Powered)
          MaxPower              100mA
          Interface Descriptor:
            bLength                 9
            bDescriptorType         4
            bInterfaceNumber        0
            bAlternateSetting       0
            bNumEndpoints           3
            bInterfaceClass         2 Communications
            bInterfaceSubClass      2 Abstract (modem)
            bInterfaceProtocol      0
            iInterface              4 ACM Control Interface
            CDC Header:
              bcdCDC               1.10
            CDC Call Management:
              bmCapabilities       0x01
                call management
              bDataInterface          0
            CDC ACM:
              bmCapabilities       0x06
                sends break
                line coding and serial state
            Endpoint Descriptor:
              bLength                 7
              bDescriptorType         5
              bEndpointAddress     0x81  EP 1 IN
              bmAttributes            3
                Transfer Type            Interrupt
                Synch Type               None
                Usage Type               Data
              wMaxPacketSize     0x0010  1x 16 bytes
              bInterval              10
            Endpoint Descriptor:
              bLength                 7
              bDescriptorType         5
              bEndpointAddress     0x82  EP 2 IN
              bmAttributes            2
                Transfer Type            Bulk
                Synch Type               None
                Usage Type               Data
              wMaxPacketSize     0x0040  1x 64 bytes
              bInterval               0
            Endpoint Descriptor:
              bLength                 7
              bDescriptorType         5
              bEndpointAddress     0x03  EP 3 OUT
              bmAttributes            2
                Transfer Type            Bulk
                Synch Type               None
                Usage Type               Data
              wMaxPacketSize     0x0040  1x 64 bytes
              bInterval               0
      Device Status:     0x0000
        (Bus Powered)
    
      Bus 001 Device 012: ID 108c:0168 Robert Bosch GmbH ES582
      Device Descriptor:
        bLength                18
        bDescriptorType         1
        bcdUSB               2.00
        bDeviceClass            2 Communications
        bDeviceSubClass         0
        bDeviceProtocol         0
        bMaxPacketSize0        64
        idVendor           0x108c Robert Bosch GmbH
        idProduct          0x0168
        bcdDevice            1.00
        iManufacturer           1 ETAS GmbH
        iProduct                2 ES582
        iSerial                 3 0108933
        bNumConfigurations      1
        Configuration Descriptor:
          bLength                 9
          bDescriptorType         2
          wTotalLength       0x0043
          bNumInterfaces          2
          bConfigurationValue     1
          iConfiguration          0
          bmAttributes         0x80
            (Bus Powered)
          MaxPower              500mA
          Interface Descriptor:
            bLength                 9
            bDescriptorType         4
            bInterfaceNumber        0
            bAlternateSetting       0
            bNumEndpoints           1
            bInterfaceClass         2 Communications
            bInterfaceSubClass      2 Abstract (modem)
            bInterfaceProtocol      1 AT-commands (v.25ter)
            iInterface              0
            CDC Header:
              bcdCDC               1.10
            CDC ACM:
              bmCapabilities       0x02
                line coding and serial state
            CDC Union:
              bMasterInterface        0
              bSlaveInterface         1
            CDC Call Management:
              bmCapabilities       0x03
                call management
                use DataInterface
              bDataInterface          1
            Endpoint Descriptor:
              bLength                 7
              bDescriptorType         5
              bEndpointAddress     0x83  EP 3 IN
              bmAttributes            3
                Transfer Type            Interrupt
                Synch Type               None
                Usage Type               Data
              wMaxPacketSize     0x0040  1x 64 bytes
              bInterval              16
          Interface Descriptor:
            bLength                 9
            bDescriptorType         4
            bInterfaceNumber        1
            bAlternateSetting       0
            bNumEndpoints           2
            bInterfaceClass        10 CDC Data
            bInterfaceSubClass      0
            bInterfaceProtocol      0
            iInterface              0
            Endpoint Descriptor:
              bLength                 7
              bDescriptorType         5
              bEndpointAddress     0x81  EP 1 IN
              bmAttributes            2
                Transfer Type            Bulk
                Synch Type               None
                Usage Type               Data
              wMaxPacketSize     0x0200  1x 512 bytes
              bInterval               0
            Endpoint Descriptor:
              bLength                 7
              bDescriptorType         5
              bEndpointAddress     0x02  EP 2 OUT
              bmAttributes            2
                Transfer Type            Bulk
                Synch Type               None
                Usage Type               Data
              wMaxPacketSize     0x0200  1x 512 bytes
              bInterval               0
      Device Qualifier (for other device speed):
        bLength                10
        bDescriptorType         6
        bcdUSB               2.00
        bDeviceClass            2 Communications
        bDeviceSubClass         0
        bDeviceProtocol         0
        bMaxPacketSize0        64
        bNumConfigurations      1
      Device Status:     0x0000
        (Bus Powered)
    
      Bus 001 Device 013: ID 108c:0169 Robert Bosch GmbH ES584.1
      Device Descriptor:
        bLength                18
        bDescriptorType         1
        bcdUSB               2.00
        bDeviceClass            2 Communications
        bDeviceSubClass         0
        bDeviceProtocol         0
        bMaxPacketSize0        64
        idVendor           0x108c Robert Bosch GmbH
        idProduct          0x0169
        bcdDevice            1.00
        iManufacturer           1 ETAS GmbH
        iProduct                2 ES584.1
        iSerial                 3 0100320
        bNumConfigurations      1
        Configuration Descriptor:
          bLength                 9
          bDescriptorType         2
          wTotalLength       0x0043
          bNumInterfaces          2
          bConfigurationValue     1
          iConfiguration          0
          bmAttributes         0x80
            (Bus Powered)
          MaxPower              500mA
          Interface Descriptor:
            bLength                 9
            bDescriptorType         4
            bInterfaceNumber        0
            bAlternateSetting       0
            bNumEndpoints           1
            bInterfaceClass         2 Communications
            bInterfaceSubClass      2 Abstract (modem)
            bInterfaceProtocol      1 AT-commands (v.25ter)
            iInterface              0
            CDC Header:
              bcdCDC               1.10
            CDC ACM:
              bmCapabilities       0x02
                line coding and serial state
            CDC Union:
              bMasterInterface        0
              bSlaveInterface         1
            CDC Call Management:
              bmCapabilities       0x03
                call management
                use DataInterface
              bDataInterface          1
            Endpoint Descriptor:
              bLength                 7
              bDescriptorType         5
              bEndpointAddress     0x83  EP 3 IN
              bmAttributes            3
                Transfer Type            Interrupt
                Synch Type               None
                Usage Type               Data
              wMaxPacketSize     0x0040  1x 64 bytes
              bInterval              16
          Interface Descriptor:
            bLength                 9
            bDescriptorType         4
            bInterfaceNumber        1
            bAlternateSetting       0
            bNumEndpoints           2
            bInterfaceClass        10 CDC Data
            bInterfaceSubClass      0
            bInterfaceProtocol      0
            iInterface              0
            Endpoint Descriptor:
              bLength                 7
              bDescriptorType         5
              bEndpointAddress     0x81  EP 1 IN
              bmAttributes            2
                Transfer Type            Bulk
                Synch Type               None
                Usage Type               Data
              wMaxPacketSize     0x0200  1x 512 bytes
              bInterval               0
            Endpoint Descriptor:
              bLength                 7
              bDescriptorType         5
              bEndpointAddress     0x02  EP 2 OUT
              bmAttributes            2
                Transfer Type            Bulk
                Synch Type               None
                Usage Type               Data
              wMaxPacketSize     0x0200  1x 512 bytes
              bInterval               0
      Device Qualifier (for other device speed):
        bLength                10
        bDescriptorType         6
        bcdUSB               2.00
        bDeviceClass            2 Communications
        bDeviceSubClass         0
        bDeviceProtocol         0
        bMaxPacketSize0        64
        bNumConfigurations      1
      Device Status:     0x0000
        (Bus Powered)
    
    Signed-off-by: Vincent Mailhol <mailhol.vincent@wanadoo.fr>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201002154219.4887-8-mailhol.vincent@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d2ce4350a01df7bf58235933e3042911b6f7b32
Author: Peng Fan <peng.fan@nxp.com>
Date:   Tue Sep 29 17:55:09 2020 +0800

    tty: serial: fsl_lpuart: fix lpuart32_poll_get_char
    
    commit 29788ab1d2bf26c130de8f44f9553ee78a27e8d5 upstream.
    
    The watermark is set to 1, so we need to input two chars to trigger RDRF
    using the original logic. With the new logic, we could always get the
    char when there is data in FIFO.
    
    Suggested-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Link: https://lore.kernel.org/r/20200929095509.21680-1-peng.fan@nxp.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 231146202650bd171e13f47856069d5e08837412
Author: Peng Fan <peng.fan@nxp.com>
Date:   Tue Sep 29 17:19:20 2020 +0800

    tty: serial: lpuart: fix lpuart32_write usage
    
    commit 9ea40db477c024dcb87321b7f32bd6ea12130ac2 upstream.
    
    The 2nd and 3rd parameter were wrongly used, and cause kernel abort when
    doing kgdb debug.
    
    Fixes: 1da17d7cf8e2 ("tty: serial: fsl_lpuart: Use appropriate lpuart32_* I/O funcs")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Link: https://lore.kernel.org/r/20200929091920.22612-1-peng.fan@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8a4b17bcc9dff1942d9115b7fc8706ecd9ebc5e
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Thu Aug 27 10:17:02 2020 +0200

    s390/qeth: don't let HW override the configured port role
    
    [ Upstream commit a04f0ecacdb0639d416614619225a39de3927e22 ]
    
    The only time that our Bridgeport role should change is when we change
    the configuration ourselves. In which case we also adjust our internal
    state tracking, no need to do it again when we receive the corresponding
    event.
    
    Removing the locked section helps a subsequent patch that needs to flush
    the workqueue while under sbp_lock.
    
    It would be nice to raise a warning here in case HW does weird things
    after all, but this could end up generating false-positives when we
    change the configuration ourselves.
    
    Suggested-by: Alexandra Winter <wintera@linux.ibm.com>
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Reviewed-by: Alexandra Winter <wintera@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 905f0d17a07fd173211ba948f7816c5944352647
Author: Valentin Vidic <vvidic@valentin-vidic.from.hr>
Date:   Sun Oct 18 20:42:55 2020 +0200

    net: korina: cast KSEG0 address to pointer in kfree
    
    [ Upstream commit 3bd57b90554b4bb82dce638e0668ef9dc95d3e96 ]
    
    Fixes gcc warning:
    
    passing argument 1 of 'kfree' makes pointer from integer without a cast
    
    Fixes: 3af5f0f5c74e ("net: korina: fix kfree of rx/tx descriptor array")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Valentin Vidic <vvidic@valentin-vidic.from.hr>
    Link: https://lore.kernel.org/r/20201018184255.28989-1-vvidic@valentin-vidic.from.hr
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9bca56ad2f0ae34c2a9519ca3c37b44535563d79
Author: Zekun Shen <bruceshenzk@gmail.com>
Date:   Tue Jun 23 18:11:05 2020 -0400

    ath10k: check idx validity in __ath10k_htt_rx_ring_fill_n()
    
    [ Upstream commit bad60b8d1a7194df38fd7fe4b22f3f4dcf775099 ]
    
    The idx in __ath10k_htt_rx_ring_fill_n function lives in
    consistent dma region writable by the device. Malfunctional
    or malicious device could manipulate such idx to have a OOB
    write. Either by
        htt->rx_ring.netbufs_ring[idx] = skb;
    or by
        ath10k_htt_set_paddrs_ring(htt, paddr, idx);
    
    The idx can also be negative as it's signed, giving a large
    memory space to write to.
    
    It's possibly exploitable by corruptting a legit pointer with
    a skb pointer. And then fill skb with payload as rougue object.
    
    Part of the log here. Sometimes it appears as UAF when writing
    to a freed memory by chance.
    
     [   15.594376] BUG: unable to handle page fault for address: ffff887f5c1804f0
     [   15.595483] #PF: supervisor write access in kernel mode
     [   15.596250] #PF: error_code(0x0002) - not-present page
     [   15.597013] PGD 0 P4D 0
     [   15.597395] Oops: 0002 [#1] SMP KASAN PTI
     [   15.597967] CPU: 0 PID: 82 Comm: kworker/u2:2 Not tainted 5.6.0 #69
     [   15.598843] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996),
     BIOS rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org 04/01/2014
     [   15.600438] Workqueue: ath10k_wq ath10k_core_register_work [ath10k_core]
     [   15.601389] RIP: 0010:__ath10k_htt_rx_ring_fill_n
     (linux/drivers/net/wireless/ath/ath10k/htt_rx.c:173) ath10k_core
    
    Signed-off-by: Zekun Shen <bruceshenzk@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200623221105.3486-1-bruceshenzk@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18ec92b1ce2975f8d27af868084c70835b86ace4
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Fri Jul 31 23:08:23 2020 +0300

    dmaengine: dw: Activate FIFO-mode for memory peripherals only
    
    [ Upstream commit 6d9459d04081c796fc67c2bb771f4e4ebb5744c4 ]
    
    CFGx.FIFO_MODE field controls a DMA-controller "FIFO readiness" criterion.
    In other words it determines when to start pushing data out of a DW
    DMAC channel FIFO to a destination peripheral or from a source
    peripheral to the DW DMAC channel FIFO. Currently FIFO-mode is set to one
    for all DW DMAC channels. It means they are tuned to flush data out of
    FIFO (to a memory peripheral or by accepting the burst transaction
    requests) when FIFO is at least half-full (except at the end of the block
    transfer, when FIFO-flush mode is activated) and are configured to get
    data to the FIFO when it's at least half-empty.
    
    Such configuration is a good choice when there is no slave device involved
    in the DMA transfers. In that case the number of bursts per block is less
    than when CFGx.FIFO_MODE = 0 and, hence, the bus utilization will improve.
    But the latency of DMA transfers may increase when CFGx.FIFO_MODE = 1,
    since DW DMAC will wait for the channel FIFO contents to be either
    half-full or half-empty depending on having the destination or the source
    transfers. Such latencies might be dangerous in case if the DMA transfers
    are expected to be performed from/to a slave device. Since normally
    peripheral devices keep data in internal FIFOs, any latency at some
    critical moment may cause one being overflown and consequently losing
    data. This especially concerns a case when either a peripheral device is
    relatively fast or the DW DMAC engine is relatively slow with respect to
    the incoming data pace.
    
    In order to solve problems, which might be caused by the latencies
    described above, let's enable the FIFO half-full/half-empty "FIFO
    readiness" criterion only for DMA transfers with no slave device involved.
    Thanks to the commit 99ba8b9b0d97 ("dmaengine: dw: Initialize channel
    before each transfer") we can freely do that in the generic
    dw_dma_initialize_chan() method.
    
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20200731200826.9292-3-Sergey.Semin@baikalelectronics.ru
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 190bce292b734de5f164515b587d352b9e26441f
Author: Serge Semin <Sergey.Semin@baikalelectronics.ru>
Date:   Fri Jul 31 23:08:26 2020 +0300

    dmaengine: dw: Add DMA-channels mask cell support
    
    [ Upstream commit e8ee6c8cb61b676f1a2d6b942329e98224bd8ee9 ]
    
    DW DMA IP-core provides a way to synthesize the DMA controller with
    channels having different parameters like maximum burst-length,
    multi-block support, maximum data width, etc. Those parameters both
    explicitly and implicitly affect the channels performance. Since DMA slave
    devices might be very demanding to the DMA performance, let's provide a
    functionality for the slaves to be assigned with DW DMA channels, which
    performance according to the platform engineer fulfill their requirements.
    After this patch is applied it can be done by passing the mask of suitable
    DMA-channels either directly in the dw_dma_slave structure instance or as
    a fifth cell of the DMA DT-property. If mask is zero or not provided, then
    there is no limitation on the channels allocation.
    
    For instance Baikal-T1 SoC is equipped with a DW DMAC engine, which first
    two channels are synthesized with max burst length of 16, while the rest
    of the channels have been created with max-burst-len=4. It would seem that
    the first two channels must be faster than the others and should be more
    preferable for the time-critical DMA slave devices. In practice it turned
    out that the situation is quite the opposite. The channels with
    max-burst-len=4 demonstrated a better performance than the channels with
    max-burst-len=16 even when they both had been initialized with the same
    settings. The performance drop of the first two DMA-channels made them
    unsuitable for the DW APB SSI slave device. No matter what settings they
    are configured with, full-duplex SPI transfers occasionally experience the
    Rx FIFO overflow. It means that the DMA-engine doesn't keep up with
    incoming data pace even though the SPI-bus is enabled with speed of 25MHz
    while the DW DMA controller is clocked with 50MHz signal. There is no such
    problem has been noticed for the channels synthesized with
    max-burst-len=4.
    
    Signed-off-by: Serge Semin <Sergey.Semin@baikalelectronics.ru>
    Link: https://lore.kernel.org/r/20200731200826.9292-6-Sergey.Semin@baikalelectronics.ru
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc94a025cfd237e74444e827260dbb4fe6f9a8c0
Author: Can Guo <cang@codeaurora.org>
Date:   Sun Aug 9 05:15:48 2020 -0700

    scsi: ufs: ufs-qcom: Fix race conditions caused by ufs_qcom_testbus_config()
    
    [ Upstream commit 89dd87acd40a44de8ff3358138aedf8f73f4efc6 ]
    
    If ufs_qcom_dump_dbg_regs() calls ufs_qcom_testbus_config() from
    ufshcd_suspend/resume and/or clk gate/ungate context, pm_runtime_get_sync()
    and ufshcd_hold() will cause a race condition. Fix this by removing the
    unnecessary calls of pm_runtime_get_sync() and ufshcd_hold().
    
    Link: https://lore.kernel.org/r/1596975355-39813-3-git-send-email-cang@codeaurora.org
    Reviewed-by: Hongwu Su <hongwus@codeaurora.org>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Reviewed-by: Bean Huo <beanhuo@micron.com>
    Reviewed-by: Asutosh Das <asutoshd@codeaurora.org>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e13f0d325a04f734cb57dde9deef1deab5f1af7e
Author: Eli Billauer <eli.billauer@gmail.com>
Date:   Fri Jul 31 08:46:50 2020 +0300

    usb: core: Solve race condition in anchor cleanup functions
    
    [ Upstream commit fbc299437c06648afcc7891e6e2e6638dd48d4df ]
    
    usb_kill_anchored_urbs() is commonly used to cancel all URBs on an
    anchor just before releasing resources which the URBs rely on. By doing
    so, users of this function rely on that no completer callbacks will take
    place from any URB on the anchor after it returns.
    
    However if this function is called in parallel with __usb_hcd_giveback_urb
    processing a URB on the anchor, the latter may call the completer
    callback after usb_kill_anchored_urbs() returns. This can lead to a
    kernel panic due to use after release of memory in interrupt context.
    
    The race condition is that __usb_hcd_giveback_urb() first unanchors the URB
    and then makes the completer callback. Such URB is hence invisible to
    usb_kill_anchored_urbs(), allowing it to return before the completer has
    been called, since the anchor's urb_list is empty.
    
    Even worse, if the racing completer callback resubmits the URB, it may
    remain in the system long after usb_kill_anchored_urbs() returns.
    
    Hence list_empty(&anchor->urb_list), which is used in the existing
    while-loop, doesn't reliably ensure that all URBs of the anchor are gone.
    
    A similar problem exists with usb_poison_anchored_urbs() and
    usb_scuttle_anchored_urbs().
    
    This patch adds an external do-while loop, which ensures that all URBs
    are indeed handled before these three functions return. This change has
    no effect at all unless the race condition occurs, in which case the
    loop will busy-wait until the racing completer callback has finished.
    This is a rare condition, so the CPU waste of this spinning is
    negligible.
    
    The additional do-while loop relies on usb_anchor_check_wakeup(), which
    returns true iff the anchor list is empty, and there is no
    __usb_hcd_giveback_urb() in the system that is in the middle of the
    unanchor-before-complete phase. The @suspend_wakeups member of
    struct usb_anchor is used for this purpose, which was introduced to solve
    another problem which the same race condition causes, in commit
    6ec4147e7bdb ("usb-anchor: Delay usb_wait_anchor_empty_timeout wake up
    till completion is done").
    
    The surely_empty variable is necessary, because usb_anchor_check_wakeup()
    must be called with the lock held to prevent races. However the spinlock
    must be released and reacquired if the outer loop spins with an empty
    URB list while waiting for the unanchor-before-complete passage to finish:
    The completer callback may very well attempt to take the very same lock.
    
    To summarize, using usb_anchor_check_wakeup() means that the patched
    functions can return only when the anchor's list is empty, and there is
    no invisible URB being processed. Since the inner while loop finishes on
    the empty list condition, the new do-while loop will terminate as well,
    except for when the said race condition occurs.
    
    Signed-off-by: Eli Billauer <eli.billauer@gmail.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20200731054650.30644-1-eli.billauer@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5912b09c97cd5a04b9486a02abbcefad02aa73ef
Author: Wang Yufen <wangyufen@huawei.com>
Date:   Mon Jul 20 17:36:05 2020 +0800

    brcm80211: fix possible memleak in brcmf_proto_msgbuf_attach
    
    [ Upstream commit 6c151410d5b57e6bb0d91a735ac511459539a7bf ]
    
    When brcmf_proto_msgbuf_attach fail and msgbuf->txflow_wq != NULL,
    we should destroy the workqueue.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Yufen <wangyufen@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1595237765-66238-1-git-send-email-wangyufen@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36df67bd00975ffba213aec7c3aae522e04a80a0
Author: Kevin Barnett <kevin.barnett@microsemi.com>
Date:   Fri Jul 31 16:01:33 2020 -0500

    scsi: smartpqi: Avoid crashing kernel for controller issues
    
    [ Upstream commit 9e68cccc8ef7206f0bccd590378d0dca8f9b4f57 ]
    
    Eliminate kernel panics when getting invalid responses from controller.
    Take controller offline instead of causing kernel panics.
    
    Link: https://lore.kernel.org/r/159622929306.30579.16523318707596752828.stgit@brunhilda
    Reviewed-by: Scott Teel <scott.teel@microsemi.com>
    Reviewed-by: Scott Benesh <scott.benesh@microsemi.com>
    Reviewed-by: Prasad Munirathnam <Prasad.Munirathnam@microsemi.com>
    Reviewed-by: Martin Wilck <mwilck@suse.com>
    Signed-off-by: Kevin Barnett <kevin.barnett@microsemi.com>
    Signed-off-by: Don Brace <don.brace@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d00555d2255ff892521ad45ec97914b29bbf9d3c
Author: Connor McAdams <conmanx360@gmail.com>
Date:   Tue Aug 25 16:10:29 2020 -0400

    ALSA: hda/ca0132 - Add new quirk ID for SoundBlaster AE-7.
    
    [ Upstream commit 620f08eea6d6961b789af3fa3ea86725c8c93ece ]
    
    Add a new PCI subsystem ID for the SoundBlaster AE-7 card.
    
    Signed-off-by: Connor McAdams <conmanx360@gmail.com>
    Link: https://lore.kernel.org/r/20200825201040.30339-11-conmanx360@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4529f9e5067cb542419d7103dff0bc61c27cb6e5
Author: Connor McAdams <conmanx360@gmail.com>
Date:   Tue Aug 25 16:10:37 2020 -0400

    ALSA: hda/ca0132 - Add AE-7 microphone selection commands.
    
    [ Upstream commit ed93f9750c6c2ed371347d0aac3dcd31cb9cf256 ]
    
    Add AE-7 quirk data for setting of microphone. The AE-7 has no front
    panel connector, so only rear-mic/line-in have new commands.
    
    Signed-off-by: Connor McAdams <conmanx360@gmail.com>
    Link: https://lore.kernel.org/r/20200825201040.30339-19-conmanx360@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 752df39ed6e1b916a86ad603d5e8ee24c6387587
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Fri Aug 21 17:27:19 2020 +0900

    mwifiex: don't call del_timer_sync() on uninitialized timer
    
    [ Upstream commit 621a3a8b1c0ecf16e1e5667ea5756a76a082b738 ]
    
    syzbot is reporting that del_timer_sync() is called from
    mwifiex_usb_cleanup_tx_aggr() from mwifiex_unregister_dev() without
    checking timer_setup() from mwifiex_usb_tx_init() was called [1].
    
    Ganapathi Bhat proposed a possibly cleaner fix, but it seems that
    that fix was forgotten [2].
    
    "grep -FrB1 'del_timer' drivers/ | grep -FA1 '.function)'" says that
    currently there are 28 locations which call del_timer[_sync]() only if
    that timer's function field was initialized (because timer_setup() sets
    that timer's function field). Therefore, let's use same approach here.
    
    [1] https://syzkaller.appspot.com/bug?id=26525f643f454dd7be0078423e3cdb0d57744959
    [2] https://lkml.kernel.org/r/CA+ASDXMHt2gq9Hy+iP_BYkWXsSreWdp3_bAfMkNcuqJ3K+-jbQ@mail.gmail.com
    
    Reported-by: syzbot <syzbot+dc4127f950da51639216@syzkaller.appspotmail.com>
    Cc: Ganapathi Bhat <ganapathi.bhat@nxp.com>
    Cc: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Acked-by: Ganapathi Bhat <ganapathi.bhat@nxp.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200821082720.7716-1-penguin-kernel@I-love.SAKURA.ne.jp
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 045f29c16fcf166ac10eed985ea9d923aab03e0e
Author: Jan Kara <jack@suse.cz>
Date:   Wed Mar 4 14:01:44 2020 +0100

    reiserfs: Fix memory leak in reiserfs_parse_options()
    
    [ Upstream commit e9d4709fcc26353df12070566970f080e651f0c9 ]
    
    When a usrjquota or grpjquota mount option is used multiple times, we
    will leak memory allocated for the file name. Make sure the last setting
    is used and all the previous ones are properly freed.
    
    Reported-by: syzbot+c9e294bbe0333a6b7640@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 109f5845a60fc0ef90ce2e842b4cb7ad2752c063
Author: Peilin Ye <yepeilin.cs@gmail.com>
Date:   Tue Aug 11 03:46:40 2020 -0400

    ipvs: Fix uninit-value in do_ip_vs_set_ctl()
    
    [ Upstream commit c5a8a8498eed1c164afc94f50a939c1a10abf8ad ]
    
    do_ip_vs_set_ctl() is referencing uninitialized stack value when `len` is
    zero. Fix it.
    
    Reported-by: syzbot+23b5f9e7caf61d9a3898@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?id=46ebfb92a8a812621a001ef04d90dfa459520fe2
    Suggested-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: Peilin Ye <yepeilin.cs@gmail.com>
    Acked-by: Julian Anastasov <ja@ssi.bg>
    Reviewed-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f8df766f75c591fd611b1604c9a0418a2fb2f86
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Sun Aug 23 15:44:21 2020 +0800

    Bluetooth: btusb: Fix memleak in btusb_mtk_submit_wmt_recv_urb
    
    [ Upstream commit d33fe77bdf75806d785dabf90d21d962122e5296 ]
    
    When kmalloc() on buf fails, urb should be freed just like
    when kmalloc() on dr fails.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4886c2cf3d918a14bff20917b0b5843b7fe3be0a
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Fri Aug 21 12:19:40 2020 -0400

    tty: ipwireless: fix error handling
    
    [ Upstream commit db332356222d9429731ab9395c89cca403828460 ]
    
    ipwireless_send_packet() can only return 0 on success and -ENOMEM on
    error, the caller should check non zero for error condition
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Acked-by: David Sterba <dsterba@suse.com>
    Link: https://lore.kernel.org/r/20200821161942.36589-1-ztong0001@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e80b7ebcfda70d5c10b050fddcd45c5e38af7176
Author: George Kennedy <george.kennedy@oracle.com>
Date:   Tue Jul 7 15:26:03 2020 -0400

    fbmem: add margin check to fb_check_caps()
    
    [ Upstream commit a49145acfb975d921464b84fe00279f99827d816 ]
    
    A fb_ioctl() FBIOPUT_VSCREENINFO call with invalid xres setting
    or yres setting in struct fb_var_screeninfo will result in a
    KASAN: vmalloc-out-of-bounds failure in bitfill_aligned() as
    the margins are being cleared. The margins are cleared in
    chunks and if the xres setting or yres setting is a value of
    zero upto the chunk size, the failure will occur.
    
    Add a margin check to validate xres and yres settings.
    
    Signed-off-by: George Kennedy <george.kennedy@oracle.com>
    Reported-by: syzbot+e5fd3e65515b48c02a30@syzkaller.appspotmail.com
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Dhaval Giani <dhaval.giani@oracle.com>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1594149963-13801-1-git-send-email-george.kennedy@oracle.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f14811c617b40ffab76d6aeacb770b5addcc47c0
Author: Nilesh Javali <njavali@marvell.com>
Date:   Tue Sep 8 02:56:52 2020 -0700

    scsi: qedi: Fix list_del corruption while removing active I/O
    
    [ Upstream commit 28b35d17f9f8573d4646dd8df08917a4076a6b63 ]
    
    While aborting the I/O, the firmware cleanup task timed out and driver
    deleted the I/O from active command list. Some time later the firmware
    sent the cleanup task response and driver again deleted the I/O from
    active command list causing firmware to send completion for non-existent
    I/O and list_del corruption of active command list.
    
    Add fix to check if I/O is present before deleting it from the active
    command list to ensure firmware sends valid I/O completion and protect
    against list_del corruption.
    
    Link: https://lore.kernel.org/r/20200908095657.26821-4-mrangankar@marvell.com
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Manish Rangankar <mrangankar@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56b2fd0cbfb069f6634ef4b3d2e79986752fc98a
Author: Nilesh Javali <njavali@marvell.com>
Date:   Tue Sep 8 02:56:53 2020 -0700

    scsi: qedi: Protect active command list to avoid list corruption
    
    [ Upstream commit c0650e28448d606c84f76c34333dba30f61de993 ]
    
    Protect active command list for non-I/O commands like login response,
    logout response, text response, and recovery cleanup of active list to
    avoid list corruption.
    
    Link: https://lore.kernel.org/r/20200908095657.26821-5-mrangankar@marvell.com
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Manish Rangankar <mrangankar@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8bf0bbee1ccbfe4d885de046db774b420e53688
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Mon Sep 7 05:14:40 2020 -0700

    scsi: qedf: Return SUCCESS if stale rport is encountered
    
    [ Upstream commit 10aff62fab263ad7661780816551420cea956ebb ]
    
    If SUCCESS is not returned, error handling will escalate. Return SUCCESS
    similar to other conditions in this function.
    
    Link: https://lore.kernel.org/r/20200907121443.5150-6-jhasan@marvell.com
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Javed Hasan <jhasan@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09e4f22711783f8a5b414d2fe98a6fe01ccf2ebe
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Sep 1 09:56:42 2020 +0200

    HID: ite: Add USB id match for Acer One S1003 keyboard dock
    
    [ Upstream commit 5bf2f2f331ad812c9b7eea6e14a3ea328acbffc0 ]
    
    The Acer One S1003 2-in-1 keyboard dock uses a Synaptics S910xx touchpad
    which is connected to an ITE 8910 USB keyboard controller chip.
    
    This keyboard has the same quirk for its rfkill / airplane mode hotkey as
    other keyboards with ITE keyboard chips, it only sends a single release
    event when pressed and released, it never sends a press event.
    
    This commit adds this keyboards USB id to the hid-ite id-table, fixing
    the rfkill key not working on this keyboard. Note that like for the
    Acer Aspire Switch 10 (SW5-012) the id-table entry matches on the
    HID_GROUP_GENERIC generic group so that hid-ite only binds to the
    keyboard interface and the mouse/touchpad interface is left untouched
    so that hid-multitouch can bind to it.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3c23dcff8fbc4b321ebb0d05e39f3bea183ed0f
Author: Doug Horn <doughorn@google.com>
Date:   Wed Sep 2 14:08:25 2020 -0700

    Fix use after free in get_capset_info callback.
    
    [ Upstream commit e219688fc5c3d0d9136f8d29d7e0498388f01440 ]
    
    If a response to virtio_gpu_cmd_get_capset_info takes longer than
    five seconds to return, the callback will access freed kernel memory
    in vg->capsets.
    
    Signed-off-by: Doug Horn <doughorn@google.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20200902210847.2689-2-gurchetansingh@chromium.org
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4638768b03d2bf0c063cd2efe68b5c7315bd036
Author: Chris Chiu <chiu@endlessm.com>
Date:   Sun Sep 6 12:04:24 2020 +0800

    rtl8xxxu: prevent potential memory leak
    
    [ Upstream commit 86279456a4d47782398d3cb8193f78f672e36cac ]
    
    Free the skb if usb_submit_urb fails on rx_urb. And free the urb
    no matter usb_submit_urb succeeds or not in rtl8xxxu_submit_int_urb.
    
    Signed-off-by: Chris Chiu <chiu@endlessm.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200906040424.22022-1-chiu@endlessm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5eb55b5f96ff06587410c20bb95b8e8645a1737
Author: Keita Suzuki <keitasuzuki.park@sslab.ics.keio.ac.jp>
Date:   Tue Sep 8 12:17:41 2020 +0000

    brcmsmac: fix memory leak in wlc_phy_attach_lcnphy
    
    [ Upstream commit f4443293d741d1776b86ed1dd8c4e4285d0775fc ]
    
    When wlc_phy_txpwr_srom_read_lcnphy fails in wlc_phy_attach_lcnphy,
    the allocated pi->u.pi_lcnphy is leaked, since struct brcms_phy will be
    freed in the caller function.
    
    Fix this by calling wlc_phy_detach_lcnphy in the error handler of
    wlc_phy_txpwr_srom_read_lcnphy before returning.
    
    Signed-off-by: Keita Suzuki <keitasuzuki.park@sslab.ics.keio.ac.jp>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200908121743.23108-1-keitasuzuki.park@sslab.ics.keio.ac.jp
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 061d2f3fce454c972f984e28322e9fcca0c23b11
Author: Yonghong Song <yhs@fb.com>
Date:   Wed Sep 9 10:15:42 2020 -0700

    selftests/bpf: Fix test_sysctl_loop{1, 2} failure due to clang change
    
    [ Upstream commit 7fb5eefd76394cfefb380724a87ca40b47d44405 ]
    
    Andrii reported that with latest clang, when building selftests, we have
    error likes:
      error: progs/test_sysctl_loop1.c:23:16: in function sysctl_tcp_mem i32 (%struct.bpf_sysctl*):
      Looks like the BPF stack limit of 512 bytes is exceeded.
      Please move large on stack variables into BPF per-cpu array map.
    
    The error is triggered by the following LLVM patch:
      https://reviews.llvm.org/D87134
    
    For example, the following code is from test_sysctl_loop1.c:
      static __always_inline int is_tcp_mem(struct bpf_sysctl *ctx)
      {
        volatile char tcp_mem_name[] = "net/ipv4/tcp_mem/very_very_very_very_long_pointless_string";
        ...
      }
    Without the above LLVM patch, the compiler did optimization to load the string
    (59 bytes long) with 7 64bit loads, 1 8bit load and 1 16bit load,
    occupying 64 byte stack size.
    
    With the above LLVM patch, the compiler only uses 8bit loads, but subregister is 32bit.
    So stack requirements become 4 * 59 = 236 bytes. Together with other stuff on
    the stack, total stack size exceeds 512 bytes, hence compiler complains and quits.
    
    To fix the issue, removing "volatile" key word or changing "volatile" to
    "const"/"static const" does not work, the string is put in .rodata.str1.1 section,
    which libbpf did not process it and errors out with
      libbpf: elf: skipping unrecognized data section(6) .rodata.str1.1
      libbpf: prog 'sysctl_tcp_mem': bad map relo against '.L__const.is_tcp_mem.tcp_mem_name'
              in section '.rodata.str1.1'
    
    Defining the string const as global variable can fix the issue as it puts the string constant
    in '.rodata' section which is recognized by libbpf. In the future, when libbpf can process
    '.rodata.str*.*' properly, the global definition can be changed back to local definition.
    
    Defining tcp_mem_name as a global, however, triggered a verifier failure.
       ./test_progs -n 7/21
      libbpf: load bpf program failed: Permission denied
      libbpf: -- BEGIN DUMP LOG ---
      libbpf:
      invalid stack off=0 size=1
      verification time 6975 usec
      stack depth 160+64
      processed 889 insns (limit 1000000) max_states_per_insn 4 total_states
      14 peak_states 14 mark_read 10
    
      libbpf: -- END LOG --
      libbpf: failed to load program 'sysctl_tcp_mem'
      libbpf: failed to load object 'test_sysctl_loop2.o'
      test_bpf_verif_scale:FAIL:114
      #7/21 test_sysctl_loop2.o:FAIL
    This actually exposed a bpf program bug. In test_sysctl_loop{1,2}, we have code
    like
      const char tcp_mem_name[] = "<...long string...>";
      ...
      char name[64];
      ...
      for (i = 0; i < sizeof(tcp_mem_name); ++i)
          if (name[i] != tcp_mem_name[i])
              return 0;
    In the above code, if sizeof(tcp_mem_name) > 64, name[i] access may be
    out of bound. The sizeof(tcp_mem_name) is 59 for test_sysctl_loop1.c and
    79 for test_sysctl_loop2.c.
    
    Without promotion-to-global change, old compiler generates code where
    the overflowed stack access is actually filled with valid value, so hiding
    the bpf program bug. With promotion-to-global change, the code is different,
    more specifically, the previous loading constants to stack is gone, and
    "name" occupies stack[-64:0] and overflow access triggers a verifier error.
    To fix the issue, adjust "name" buffer size properly.
    
    Reported-by: Andrii Nakryiko <andriin@fb.com>
    Signed-off-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/20200909171542.3673449-1-yhs@fb.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d399015f191bd6e12e6dee94a45320027a137e17
Author: Daniel Wagner <dwagner@suse.de>
Date:   Tue Sep 8 10:15:13 2020 +0200

    scsi: qla2xxx: Warn if done() or free() are called on an already freed srb
    
    [ Upstream commit c0014f94218ea3a312f6235febea0d626c5f2154 ]
    
    Emit a warning when ->done or ->free are called on an already freed
    srb. There is a hidden use-after-free bug in the driver which corrupts
    the srb memory pool which originates from the cleanup callbacks.
    
    An extensive search didn't bring any lights on the real problem. The
    initial fix was to set both pointers to NULL and try to catch invalid
    accesses. But instead the memory corruption was gone and the driver
    didn't crash. Since not all calling places check for NULL pointer, add
    explicitly default handlers. With this we workaround the memory
    corruption and add a debug help.
    
    Link: https://lore.kernel.org/r/20200908081516.8561-2-dwagner@suse.de
    Reviewed-by: Martin Wilck <mwilck@suse.com>
    Reviewed-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Daniel Wagner <dwagner@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bb4a0b5a0ec39e050d7a0d1b500b8a9c1390af9
Author: Jing Xiangfeng <jingxiangfeng@huawei.com>
Date:   Mon Sep 7 16:39:49 2020 +0800

    scsi: ibmvfc: Fix error return in ibmvfc_probe()
    
    [ Upstream commit 5e48a084f4e824e1b624d3fd7ddcf53d2ba69e53 ]
    
    Fix to return error code PTR_ERR() from the error handling case instead of
    0.
    
    Link: https://lore.kernel.org/r/20200907083949.154251-1-jingxiangfeng@huawei.com
    Acked-by: Tyrel Datwyler <tyreld@linux.ibm.com>
    Signed-off-by: Jing Xiangfeng <jingxiangfeng@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff9c607f0355dead802bc46ebe89d6f1a6132d4c
Author: Qian Cai <cai@lca.pw>
Date:   Thu Sep 10 08:26:15 2020 -0700

    iomap: fix WARN_ON_ONCE() from unprivileged users
    
    [ Upstream commit a805c111650cdba6ee880f528abdd03c1af82089 ]
    
    It is trivial to trigger a WARN_ON_ONCE(1) in iomap_dio_actor() by
    unprivileged users which would taint the kernel, or worse - panic if
    panic_on_warn or panic_on_taint is set. Hence, just convert it to
    pr_warn_ratelimited() to let users know their workloads are racing.
    Thank Dave Chinner for the initial analysis of the racing reproducers.
    
    Signed-off-by: Qian Cai <cai@lca.pw>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6458e8e8689b0b32f7ad1752d272ee7d08d3e907
Author: Zhenzhong Duan <zhenzhong.duan@gmail.com>
Date:   Sat Sep 12 18:25:58 2020 +0800

    drm/msm/a6xx: fix a potential overflow issue
    
    [ Upstream commit 08d3ab4b46339bc6f97e83b54a3fb4f8bf8f4cd9 ]
    
    It's allocating an array of a6xx_gpu_state_obj structure rathor than
    its pointers.
    
    This patch fix it.
    
    Signed-off-by: Zhenzhong Duan <zhenzhong.duan@gmail.com>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bab673eef8538a5a939bfec20a23629946e1deb1
Author: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
Date:   Fri Sep 11 15:33:18 2020 -0700

    Bluetooth: Only mark socket zapped after unlocking
    
    [ Upstream commit 20ae4089d0afeb24e9ceb026b996bfa55c983cc2 ]
    
    Since l2cap_sock_teardown_cb doesn't acquire the channel lock before
    setting the socket as zapped, it could potentially race with
    l2cap_sock_release which frees the socket. Thus, wait until the cleanup
    is complete before marking the socket as zapped.
    
    This race was reproduced on a JBL GO speaker after the remote device
    rejected L2CAP connection due to resource unavailability.
    
    Here is a dmesg log with debug logs from a repro of this bug:
    [ 3465.424086] Bluetooth: hci_core.c:hci_acldata_packet() hci0 len 16 handle 0x0003 flags 0x0002
    [ 3465.424090] Bluetooth: hci_conn.c:hci_conn_enter_active_mode() hcon 00000000cfedd07d mode 0
    [ 3465.424094] Bluetooth: l2cap_core.c:l2cap_recv_acldata() conn 000000007eae8952 len 16 flags 0x2
    [ 3465.424098] Bluetooth: l2cap_core.c:l2cap_recv_frame() len 12, cid 0x0001
    [ 3465.424102] Bluetooth: l2cap_core.c:l2cap_raw_recv() conn 000000007eae8952
    [ 3465.424175] Bluetooth: l2cap_core.c:l2cap_sig_channel() code 0x03 len 8 id 0x0c
    [ 3465.424180] Bluetooth: l2cap_core.c:l2cap_connect_create_rsp() dcid 0x0045 scid 0x0000 result 0x02 status 0x00
    [ 3465.424189] Bluetooth: l2cap_core.c:l2cap_chan_put() chan 000000006acf9bff orig refcnt 4
    [ 3465.424196] Bluetooth: l2cap_core.c:l2cap_chan_del() chan 000000006acf9bff, conn 000000007eae8952, err 111, state BT_CONNECT
    [ 3465.424203] Bluetooth: l2cap_sock.c:l2cap_sock_teardown_cb() chan 000000006acf9bff state BT_CONNECT
    [ 3465.424221] Bluetooth: l2cap_core.c:l2cap_chan_put() chan 000000006acf9bff orig refcnt 3
    [ 3465.424226] Bluetooth: hci_core.h:hci_conn_drop() hcon 00000000cfedd07d orig refcnt 6
    [ 3465.424234] BUG: spinlock bad magic on CPU#2, kworker/u17:0/159
    [ 3465.425626] Bluetooth: hci_sock.c:hci_sock_sendmsg() sock 000000002bb0cb64 sk 00000000a7964053
    [ 3465.430330]  lock: 0xffffff804410aac0, .magic: 00000000, .owner: <none>/-1, .owner_cpu: 0
    [ 3465.430332] Causing a watchdog bite!
    
    Signed-off-by: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
    Reported-by: Balakrishna Godavarthi <bgodavar@codeaurora.org>
    Reviewed-by: Manish Mandlik <mmandlik@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78a47ef68262b8fae5ded0be2dc19afa8393844b
Author: Hamish Martin <hamish.martin@alliedtelesis.co.nz>
Date:   Fri Sep 11 09:25:11 2020 +1200

    usb: ohci: Default to per-port over-current protection
    
    [ Upstream commit b77d2a0a223bc139ee8904991b2922d215d02636 ]
    
    Some integrated OHCI controller hubs do not expose all ports of the hub
    to pins on the SoC. In some cases the unconnected ports generate
    spurious over-current events. For example the Broadcom 56060/Ranger 2 SoC
    contains a nominally 3 port hub but only the first port is wired.
    
    Default behaviour for ohci-platform driver is to use global over-current
    protection mode (AKA "ganged"). This leads to the spurious over-current
    events affecting all ports in the hub.
    
    We now alter the default to use per-port over-current protection.
    
    This patch results in the following configuration changes depending
    on quirks:
    - For quirk OHCI_QUIRK_SUPERIO no changes. These systems remain set up
      for ganged power switching and no over-current protection.
    - For quirk OHCI_QUIRK_AMD756 or OHCI_QUIRK_HUB_POWER power switching
      remains at none, while over-current protection is now guaranteed to be
      set to per-port rather than the previous behaviour where it was either
      none or global over-current protection depending on the value at
      function entry.
    
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Hamish Martin <hamish.martin@alliedtelesis.co.nz>
    Link: https://lore.kernel.org/r/20200910212512.16670-1-hamish.martin@alliedtelesis.co.nz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df01087859faa172ffb1d83ced5a26bad8491819
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Wed Sep 9 14:21:06 2020 -0700

    xfs: make sure the rt allocator doesn't run off the end
    
    [ Upstream commit 2a6ca4baed620303d414934aa1b7b0a8e7bab05f ]
    
    There's an overflow bug in the realtime allocator.  If the rt volume is
    large enough to handle a single allocation request that is larger than
    the maximum bmap extent length and the rt bitmap ends exactly on a
    bitmap block boundary, it's possible that the near allocator will try to
    check the freeness of a range that extends past the end of the bitmap.
    This fails with a corruption error and shuts down the fs.
    
    Therefore, constrain maxlen so that the range scan cannot run off the
    end of the rt bitmap.
    
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09b63105d089756cbd3f29457ad5d530b2b00c4e
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Mon Aug 31 11:22:37 2020 +0530

    opp: Prevent memory leak in dev_pm_opp_attach_genpd()
    
    [ Upstream commit cb60e9602cce1593eb1e9cdc8ee562815078a354 ]
    
    If dev_pm_opp_attach_genpd() is called multiple times (once for each CPU
    sharing the table), then it would result in unwanted behavior like
    memory leak, attaching the domain multiple times, etc.
    
    Handle that by checking and returning earlier if the domains are already
    attached. Now that dev_pm_opp_detach_genpd() can get called multiple
    times as well, we need to protect that too.
    
    Note that the virtual device pointers aren't returned in this case, as
    they may become unavailable to some callers during the middle of the
    operation.
    
    Reported-by: Stephan Gerhold <stephan@gerhold.net>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ff3df752c06c13da460f788a5e5b9208ad37926
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Jun 28 00:00:57 2020 -0700

    reiserfs: only call unlock_new_inode() if I_NEW
    
    [ Upstream commit 8859bf2b1278d064a139e3031451524a49a56bd0 ]
    
    unlock_new_inode() is only meant to be called after a new inode has
    already been inserted into the hash table.  But reiserfs_new_inode() can
    call it even before it has inserted the inode, triggering the WARNING in
    unlock_new_inode().  Fix this by only calling unlock_new_inode() if the
    inode has the I_NEW flag set, indicating that it's in the table.
    
    This addresses the syzbot report "WARNING in unlock_new_inode"
    (https://syzkaller.appspot.com/bug?extid=187510916eb6a14598f7).
    
    Link: https://lore.kernel.org/r/20200628070057.820213-1-ebiggers@kernel.org
    Reported-by: syzbot+187510916eb6a14598f7@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e3f41b6bec01192ea87cfc7249b98ad034ad398
Author: Keita Suzuki <keitasuzuki.park@sslab.ics.keio.ac.jp>
Date:   Wed Sep 9 07:18:51 2020 +0000

    misc: rtsx: Fix memory leak in rtsx_pci_probe
    
    [ Upstream commit bc28369c6189009b66d9619dd9f09bd8c684bb98 ]
    
    When mfd_add_devices() fail, pcr->slots should also be freed. However,
    the current implementation does not free the member, leading to a memory
    leak.
    
    Fix this by adding a new goto label that frees pcr->slots.
    
    Signed-off-by: Keita Suzuki <keitasuzuki.park@sslab.ics.keio.ac.jp>
    Link: https://lore.kernel.org/r/20200909071853.4053-1-keitasuzuki.park@sslab.ics.keio.ac.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a8d86d8da1b992db9af553be7c6d62249b5df5e
Author: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
Date:   Wed Sep 16 23:10:07 2020 +0200

    bpf: Limit caller's stack depth 256 for subprogs with tailcalls
    
    [ Upstream commit 7f6e4312e15a5c370e84eaa685879b6bdcc717e4 ]
    
    Protect against potential stack overflow that might happen when bpf2bpf
    calls get combined with tailcalls. Limit the caller's stack depth for
    such case down to 256 so that the worst case scenario would result in 8k
    stack size (32 which is tailcall limit * 256 = 8k).
    
    Suggested-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c3a1aabfcff06e06976808752747a4b9c021f22
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Wed Sep 16 17:01:46 2020 +0200

    drm/panfrost: add amlogic reset quirk callback
    
    [ Upstream commit 110003002291525bb209f47e6dbf121a63249a97 ]
    
    The T820, G31 & G52 GPUs integrated by Amlogic in the respective GXM,
    G12A/SM1 & G12B SoCs needs a quirk in the PWR registers at the GPU reset
    time.
    
    Since the Amlogic's integration of the GPU cores with the SoC is not
    publicly documented we do not know what does these values, but they
    permit having a fully functional GPU running with Panfrost.
    
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    [Steven: Fix typo in commit log]
    Reviewed-by: Steven Price <steven.price@arm.com>
    Reviewed-by: Alyssa Rosenzweig <alyssa.rosenzweig@collabora.com>
    Signed-off-by: Steven Price <steven.price@arm.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200916150147.25753-3-narmstrong@baylibre.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9990ed2d7ca9339d37c7f67d6f5cb298c3f1b34
Author: Brooke Basile <brookebasile@gmail.com>
Date:   Fri Sep 11 03:14:27 2020 -0400

    ath9k: hif_usb: fix race condition between usb_get_urb() and usb_kill_anchored_urbs()
    
    [ Upstream commit 03fb92a432ea5abe5909bca1455b7e44a9380480 ]
    
    Calls to usb_kill_anchored_urbs() after usb_kill_urb() on multiprocessor
    systems create a race condition in which usb_kill_anchored_urbs() deallocates
    the URB before the completer callback is called in usb_kill_urb(), resulting
    in a use-after-free.
    To fix this, add proper lock protection to usb_kill_urb() calls that can
    possibly run concurrently with usb_kill_anchored_urbs().
    
    Reported-by: syzbot+89bd486af9427a9fc605@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?id=cabffad18eb74197f84871802fd2c5117b61febf
    Signed-off-by: Brooke Basile <brookebasile@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200911071427.32354-1-brookebasile@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85b757ca3005482701aad7a18be5e72a469a787c
Author: Joakim Zhang <qiangqing.zhang@nxp.com>
Date:   Tue Sep 22 16:44:19 2020 +0200

    can: flexcan: flexcan_chip_stop(): add error handling and propagate error value
    
    [ Upstream commit 9ad02c7f4f279504bdd38ab706fdc97d5f2b2a9c ]
    
    This patch implements error handling and propagates the error value of
    flexcan_chip_stop(). This function will be called from flexcan_suspend()
    in an upcoming patch in some SoCs which support LPSR mode.
    
    Add a new function flexcan_chip_stop_disable_on_error() that tries to
    disable the chip even in case of errors.
    
    Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
    [mkl: introduce flexcan_chip_stop_disable_on_error() and use it in flexcan_close()]
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Link: https://lore.kernel.org/r/20200922144429.2613631-11-mkl@pengutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42e781da7b37b354210353ec58d6e27adb553df9
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Date:   Tue Sep 8 11:58:23 2020 +0200

    usb: dwc3: simple: add support for Hikey 970
    
    [ Upstream commit b68d9251561f33661e53dd618f1cafe7ec9ec3c2 ]
    
    This binding driver is needed for Hikey 970 to work,
    as otherwise a Serror is produced:
    
        [    1.837458] SError Interrupt on CPU0, code 0xbf000002 -- SError
        [    1.837462] CPU: 0 PID: 74 Comm: kworker/0:1 Not tainted 5.8.0+ #205
        [    1.837463] Hardware name: HiKey970 (DT)
        [    1.837465] Workqueue: events deferred_probe_work_func
        [    1.837467] pstate: 20000005 (nzCv daif -PAN -UAO BTYPE=--)
        [    1.837468] pc : _raw_spin_unlock_irqrestore+0x18/0x50
        [    1.837469] lr : regmap_unlock_spinlock+0x14/0x20
        [    1.837470] sp : ffff8000124dba60
        [    1.837471] x29: ffff8000124dba60 x28: 0000000000000000
        [    1.837474] x27: ffff0001b7e854c8 x26: ffff80001204ea18
        [    1.837476] x25: 0000000000000005 x24: ffff800011f918f8
        [    1.837479] x23: ffff800011fbb588 x22: ffff0001b7e40e00
        [    1.837481] x21: 0000000000000100 x20: 0000000000000000
        [    1.837483] x19: ffff0001b767ec00 x18: 00000000ff10c000
        [    1.837485] x17: 0000000000000002 x16: 0000b0740fdb9950
        [    1.837488] x15: ffff8000116c1198 x14: ffffffffffffffff
        [    1.837490] x13: 0000000000000030 x12: 0101010101010101
        [    1.837493] x11: 0000000000000020 x10: ffff0001bf17d130
        [    1.837495] x9 : 0000000000000000 x8 : ffff0001b6938080
        [    1.837497] x7 : 0000000000000000 x6 : 000000000000003f
        [    1.837500] x5 : 0000000000000000 x4 : 0000000000000000
        [    1.837502] x3 : ffff80001096a880 x2 : 0000000000000000
        [    1.837505] x1 : ffff0001b7e40e00 x0 : 0000000100000001
        [    1.837507] Kernel panic - not syncing: Asynchronous SError Interrupt
        [    1.837509] CPU: 0 PID: 74 Comm: kworker/0:1 Not tainted 5.8.0+ #205
        [    1.837510] Hardware name: HiKey970 (DT)
        [    1.837511] Workqueue: events deferred_probe_work_func
        [    1.837513] Call trace:
        [    1.837514]  dump_backtrace+0x0/0x1e0
        [    1.837515]  show_stack+0x18/0x24
        [    1.837516]  dump_stack+0xc0/0x11c
        [    1.837517]  panic+0x15c/0x324
        [    1.837518]  nmi_panic+0x8c/0x90
        [    1.837519]  arm64_serror_panic+0x78/0x84
        [    1.837520]  do_serror+0x158/0x15c
        [    1.837521]  el1_error+0x84/0x100
        [    1.837522]  _raw_spin_unlock_irqrestore+0x18/0x50
        [    1.837523]  regmap_write+0x58/0x80
        [    1.837524]  hi3660_reset_deassert+0x28/0x34
        [    1.837526]  reset_control_deassert+0x50/0x260
        [    1.837527]  reset_control_deassert+0xf4/0x260
        [    1.837528]  dwc3_probe+0x5dc/0xe6c
        [    1.837529]  platform_drv_probe+0x54/0xb0
        [    1.837530]  really_probe+0xe0/0x490
        [    1.837531]  driver_probe_device+0xf4/0x160
        [    1.837532]  __device_attach_driver+0x8c/0x114
        [    1.837533]  bus_for_each_drv+0x78/0xcc
        [    1.837534]  __device_attach+0x108/0x1a0
        [    1.837535]  device_initial_probe+0x14/0x20
        [    1.837537]  bus_probe_device+0x98/0xa0
        [    1.837538]  deferred_probe_work_func+0x88/0xe0
        [    1.837539]  process_one_work+0x1cc/0x350
        [    1.837540]  worker_thread+0x2c0/0x470
        [    1.837541]  kthread+0x154/0x160
        [    1.837542]  ret_from_fork+0x10/0x30
        [    1.837569] SMP: stopping secondary CPUs
        [    1.837570] Kernel Offset: 0x1d0000 from 0xffff800010000000
        [    1.837571] PHYS_OFFSET: 0x0
        [    1.837572] CPU features: 0x240002,20882004
        [    1.837573] Memory Limit: none
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e1fb72e27d7a596b66889e9b23c8ea828d08ad0
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Sep 21 15:59:49 2020 +0200

    USB: cdc-acm: handle broken union descriptors
    
    [ Upstream commit 960c7339de27c6d6fec13b54880501c3576bb08d ]
    
    Handle broken union functional descriptors where the master-interface
    doesn't exist or where its class is of neither Communication or Data
    type (as required by the specification) by falling back to
    "combined-interface" probing.
    
    Note that this still allows for handling union descriptors with switched
    interfaces.
    
    This specifically makes the Whistler radio scanners TRX series devices
    work with the driver without adding further quirks to the device-id
    table.
    
    Reported-by: Daniel Caujolle-Bert <f1rmb.daniel@gmail.com>
    Tested-by: Daniel Caujolle-Bert <f1rmb.daniel@gmail.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20200921135951.24045-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca4261a249dda6d743c30ad730192a907031f6db
Author: Tzu-En Huang <tehuang@realtek.com>
Date:   Fri Sep 25 14:12:15 2020 +0800

    rtw88: increse the size of rx buffer size
    
    [ Upstream commit ee755732b7a16af018daa77d9562d2493fb7092f ]
    
    The vht capability of MAX_MPDU_LENGTH is 11454 in rtw88; however, the rx
    buffer size for each packet is 8192. When receiving packets that are
    larger than rx buffer size, it will leads to rx buffer ring overflow.
    
    Signed-off-by: Tzu-En Huang <tehuang@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200925061219.23754-2-tehuang@realtek.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41ce99a3ef1a4c6d1e0830b284c5626697e56b94
Author: Jan Kara <jack@suse.cz>
Date:   Fri Sep 25 12:14:03 2020 +0200

    udf: Avoid accessing uninitialized data on failed inode read
    
    [ Upstream commit 044e2e26f214e5ab26af85faffd8d1e4ec066931 ]
    
    When we fail to read inode, some data accessed in udf_evict_inode() may
    be uninitialized. Move the accesses to !is_bad_inode() branch.
    
    Reported-by: syzbot+91f02b28f9bb5f5f1341@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01d886b89eb831d3366994064ddb805e66416c61
Author: Jan Kara <jack@suse.cz>
Date:   Fri Sep 25 14:53:08 2020 +0200

    udf: Limit sparing table size
    
    [ Upstream commit 44ac6b829c4e173fdf6df18e6dd86aecf9a3dc99 ]
    
    Although UDF standard allows it, we don't support sparing table larger
    than a single block. Check it during mount so that we don't try to
    access memory beyond end of buffer.
    
    Reported-by: syzbot+9991561e714f597095da@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9e791f5c39ab30e374a3b1a9c25ca7ff24988f3
Author: Zqiang <qiang.zhang@windriver.com>
Date:   Fri Jun 5 11:05:33 2020 +0800

    usb: gadget: function: printer: fix use-after-free in __lock_acquire
    
    [ Upstream commit e8d5f92b8d30bb4ade76494490c3c065e12411b1 ]
    
    Fix this by increase object reference count.
    
    BUG: KASAN: use-after-free in __lock_acquire+0x3fd4/0x4180
    kernel/locking/lockdep.c:3831
    Read of size 8 at addr ffff8880683b0018 by task syz-executor.0/3377
    
    CPU: 1 PID: 3377 Comm: syz-executor.0 Not tainted 5.6.11 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0xce/0x128 lib/dump_stack.c:118
     print_address_description.constprop.4+0x21/0x3c0 mm/kasan/report.c:374
     __kasan_report+0x131/0x1b0 mm/kasan/report.c:506
     kasan_report+0x12/0x20 mm/kasan/common.c:641
     __asan_report_load8_noabort+0x14/0x20 mm/kasan/generic_report.c:135
     __lock_acquire+0x3fd4/0x4180 kernel/locking/lockdep.c:3831
     lock_acquire+0x127/0x350 kernel/locking/lockdep.c:4488
     __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]
     _raw_spin_lock_irqsave+0x35/0x50 kernel/locking/spinlock.c:159
     printer_ioctl+0x4a/0x110 drivers/usb/gadget/function/f_printer.c:723
     vfs_ioctl fs/ioctl.c:47 [inline]
     ksys_ioctl+0xfb/0x130 fs/ioctl.c:763
     __do_sys_ioctl fs/ioctl.c:772 [inline]
     __se_sys_ioctl fs/ioctl.c:770 [inline]
     __x64_sys_ioctl+0x73/0xb0 fs/ioctl.c:770
     do_syscall_64+0x9e/0x510 arch/x86/entry/common.c:294
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    RIP: 0033:0x4531a9
    Code: ed 60 fc ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48
    89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d
    01 f0 ff ff 0f 83 bb 60 fc ff c3 66 2e 0f 1f 84 00 00 00 00
    RSP: 002b:00007fd14ad72c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    RAX: ffffffffffffffda RBX: 000000000073bfa8 RCX: 00000000004531a9
    RDX: fffffffffffffff9 RSI: 000000000000009e RDI: 0000000000000003
    RBP: 0000000000000003 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 00000000004bbd61
    R13: 00000000004d0a98 R14: 00007fd14ad736d4 R15: 00000000ffffffff
    
    Allocated by task 2393:
     save_stack+0x21/0x90 mm/kasan/common.c:72
     set_track mm/kasan/common.c:80 [inline]
     __kasan_kmalloc.constprop.3+0xa7/0xd0 mm/kasan/common.c:515
     kasan_kmalloc+0x9/0x10 mm/kasan/common.c:529
     kmem_cache_alloc_trace+0xfa/0x2d0 mm/slub.c:2813
     kmalloc include/linux/slab.h:555 [inline]
     kzalloc include/linux/slab.h:669 [inline]
     gprinter_alloc+0xa1/0x870 drivers/usb/gadget/function/f_printer.c:1416
     usb_get_function+0x58/0xc0 drivers/usb/gadget/functions.c:61
     config_usb_cfg_link+0x1ed/0x3e0 drivers/usb/gadget/configfs.c:444
     configfs_symlink+0x527/0x11d0 fs/configfs/symlink.c:202
     vfs_symlink+0x33d/0x5b0 fs/namei.c:4201
     do_symlinkat+0x11b/0x1d0 fs/namei.c:4228
     __do_sys_symlinkat fs/namei.c:4242 [inline]
     __se_sys_symlinkat fs/namei.c:4239 [inline]
     __x64_sys_symlinkat+0x73/0xb0 fs/namei.c:4239
     do_syscall_64+0x9e/0x510 arch/x86/entry/common.c:294
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Freed by task 3368:
     save_stack+0x21/0x90 mm/kasan/common.c:72
     set_track mm/kasan/common.c:80 [inline]
     kasan_set_free_info mm/kasan/common.c:337 [inline]
     __kasan_slab_free+0x135/0x190 mm/kasan/common.c:476
     kasan_slab_free+0xe/0x10 mm/kasan/common.c:485
     slab_free_hook mm/slub.c:1444 [inline]
     slab_free_freelist_hook mm/slub.c:1477 [inline]
     slab_free mm/slub.c:3034 [inline]
     kfree+0xf7/0x410 mm/slub.c:3995
     gprinter_free+0x49/0xd0 drivers/usb/gadget/function/f_printer.c:1353
     usb_put_function+0x38/0x50 drivers/usb/gadget/functions.c:87
     config_usb_cfg_unlink+0x2db/0x3b0 drivers/usb/gadget/configfs.c:485
     configfs_unlink+0x3b9/0x7f0 fs/configfs/symlink.c:250
     vfs_unlink+0x287/0x570 fs/namei.c:4073
     do_unlinkat+0x4f9/0x620 fs/namei.c:4137
     __do_sys_unlink fs/namei.c:4184 [inline]
     __se_sys_unlink fs/namei.c:4182 [inline]
     __x64_sys_unlink+0x42/0x50 fs/namei.c:4182
     do_syscall_64+0x9e/0x510 arch/x86/entry/common.c:294
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    The buggy address belongs to the object at ffff8880683b0000
     which belongs to the cache kmalloc-1k of size 1024
    The buggy address is located 24 bytes inside of
     1024-byte region [ffff8880683b0000, ffff8880683b0400)
    The buggy address belongs to the page:
    page:ffffea0001a0ec00 refcount:1 mapcount:0 mapping:ffff88806c00e300
    index:0xffff8880683b1800 compound_mapcount: 0
    flags: 0x100000000010200(slab|head)
    raw: 0100000000010200 0000000000000000 0000000600000001 ffff88806c00e300
    raw: ffff8880683b1800 000000008010000a 00000001ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    
    Reported-by: Kyungtae Kim <kt0755@gmail.com>
    Signed-off-by: Zqiang <qiang.zhang@windriver.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08045050c6bd2d2c7be94c52a327367cc3169bb4
Author: Yu Chen <chenyu56@huawei.com>
Date:   Tue Sep 8 09:20:56 2020 +0200

    usb: dwc3: Add splitdisable quirk for Hisilicon Kirin Soc
    
    [ Upstream commit f580170f135af14e287560d94045624d4242d712 ]
    
    SPLIT_BOUNDARY_DISABLE should be set for DesignWare USB3 DRD Core
    of Hisilicon Kirin Soc when dwc3 core act as host.
    
    [mchehab: dropped a dev_dbg() as only traces are now allowwed on this driver]
    
    Signed-off-by: Yu Chen <chenyu56@huawei.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 821dcabafded19e6a9c1b005395c2c4ccea33d2e
Author: Sherry Sun <sherry.sun@nxp.com>
Date:   Tue Sep 29 17:11:05 2020 +0800

    misc: vop: add round_up(x,4) for vring_size to avoid kernel panic
    
    [ Upstream commit cc1a2679865a94b83804822996eed010a50a7c1d ]
    
    Since struct _mic_vring_info and vring are allocated together and follow
    vring, if the vring_size() is not four bytes aligned, which will cause
    the start address of struct _mic_vring_info is not four byte aligned.
    For example, when vring entries is 128, the vring_size() will be 5126
    bytes. The _mic_vring_info struct layout in ddr looks like:
    0x90002400:  00000000 00390000 EE010000 0000C0FF
    Here 0x39 is the avail_idx member, and 0xC0FFEE01 is the magic member.
    
    When EP use ioread32(magic) to reads the magic in RC's share memory, it
    will cause kernel panic on ARM64 platform due to the cross-byte io read.
    Here read magic in user space use le32toh(vr0->info->magic) will meet
    the same issue.
    So add round_up(x,4) for vring_size, then the struct _mic_vring_info
    will store in this way:
    0x90002400:  00000000 00000000 00000039 C0FFEE01
    Which will avoid kernel panic when read magic in struct _mic_vring_info.
    
    Signed-off-by: Sherry Sun <sherry.sun@nxp.com>
    Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
    Link: https://lore.kernel.org/r/20200929091106.24624-4-sherry.sun@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85efddd97b72c193452351c35f51d2c3c7641375
Author: Sherry Sun <sherry.sun@nxp.com>
Date:   Tue Sep 29 17:11:06 2020 +0800

    mic: vop: copy data to kernel space then write to io memory
    
    [ Upstream commit 675f0ad4046946e80412896436164d172cd92238 ]
    
    Read and write io memory should address align on ARCH ARM. Change to use
    memcpy_toio to avoid kernel panic caused by the address un-align issue.
    
    Signed-off-by: Sherry Sun <sherry.sun@nxp.com>
    Signed-off-by: Joakim Zhang <qiangqing.zhang@nxp.com>
    Link: https://lore.kernel.org/r/20200929091106.24624-5-sherry.sun@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e93b629d347e5532c1b6ea0857b8cacd567a70e4
Author: Roman Bolshakov <r.bolshakov@yadro.com>
Date:   Tue Sep 29 15:59:57 2020 +0300

    scsi: target: core: Add CONTROL field for trace events
    
    [ Upstream commit 7010645ba7256992818b518163f46bd4cdf8002a ]
    
    trace-cmd report doesn't show events from target subsystem because
    scsi_command_size() leaks through event format string:
    
      [target:target_sequencer_start] function scsi_command_size not defined
      [target:target_cmd_complete] function scsi_command_size not defined
    
    Addition of scsi_command_size() to plugin_scsi.c in trace-cmd doesn't
    help because an expression is used inside TP_printk(). trace-cmd event
    parser doesn't understand minus sign inside [ ]:
    
      Error: expected ']' but read '-'
    
    Rather than duplicating kernel code in plugin_scsi.c, provide a dedicated
    field for CONTROL byte.
    
    Link: https://lore.kernel.org/r/20200929125957.83069-1-r.bolshakov@yadro.com
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Roman Bolshakov <r.bolshakov@yadro.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7cb5830b775a79e16ca39a72c49c8027aac28489
Author: Jing Xiangfeng <jingxiangfeng@huawei.com>
Date:   Thu Sep 10 20:38:48 2020 +0800

    scsi: mvumi: Fix error return in mvumi_io_attach()
    
    [ Upstream commit 055f15ab2cb4a5cbc4c0a775ef3d0066e0fa9b34 ]
    
    Return PTR_ERR() from the error handling case instead of 0.
    
    Link: https://lore.kernel.org/r/20200910123848.93649-1-jingxiangfeng@huawei.com
    Signed-off-by: Jing Xiangfeng <jingxiangfeng@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 267edd6478f934a1719975b32f98564f13037ec1
Author: Christoph Hellwig <hch@lst.de>
Date:   Fri Sep 25 18:14:47 2020 +0200

    PM: hibernate: remove the bogus call to get_gendisk() in software_resume()
    
    [ Upstream commit 428805c0c5e76ef643b1fbc893edfb636b3d8aef ]
    
    get_gendisk grabs a reference on the disk and file operation, so this
    code will leak both of them while having absolutely no use for the
    gendisk itself.
    
    This effectively reverts commit 2df83fa4bce421f ("PM / Hibernate: Use
    get_gendisk to verify partition if resume_file is integer format")
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ff197703e259dfdd44a33b08be0bfc35320ec2b
Author: Thomas Pedersen <thomas@adapt-ip.com>
Date:   Mon Oct 5 09:45:21 2020 -0700

    mac80211: handle lack of sband->bitrates in rates
    
    [ Upstream commit 8b783d104e7f40684333d2ec155fac39219beb2f ]
    
    Even though a driver or mac80211 shouldn't produce a
    legacy bitrate if sband->bitrates doesn't exist, don't
    crash if that is the case either.
    
    This fixes a kernel panic if station dump is run before
    last_rate can be updated with a data frame when
    sband->bitrates is missing (eg. in S1G bands).
    
    Signed-off-by: Thomas Pedersen <thomas@adapt-ip.com>
    Link: https://lore.kernel.org/r/20201005164522.18069-1-thomas@adapt-ip.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8b6ad0a8afbaa8730f782ec0b9dea70c68a0048
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Mon Oct 12 16:17:21 2020 -0700

    ip_gre: set dev->hard_header_len and dev->needed_headroom properly
    
    [ Upstream commit fdafed459998e2be0e877e6189b24cb7a0183224 ]
    
    GRE tunnel has its own header_ops, ipgre_header_ops, and sets it
    conditionally. When it is set, it assumes the outer IP header is
    already created before ipgre_xmit().
    
    This is not true when we send packets through a raw packet socket,
    where L2 headers are supposed to be constructed by user. Packet
    socket calls dev_validate_header() to validate the header. But
    GRE tunnel does not set dev->hard_header_len, so that check can
    be simply bypassed, therefore uninit memory could be passed down
    to ipgre_xmit(). Similar for dev->needed_headroom.
    
    dev->hard_header_len is supposed to be the length of the header
    created by dev->header_ops->create(), so it should be used whenever
    header_ops is set, and dev->needed_headroom should be used when it
    is not set.
    
    Reported-and-tested-by: syzbot+4a2c52677a8a1aa283cb@syzkaller.appspotmail.com
    Cc: William Tu <u9012063@gmail.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Xie He <xie.he.0141@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16281bdd202faf621adf33ccd79a265c755a9177
Author: Rustam Kovhaev <rkovhaev@gmail.com>
Date:   Tue Oct 13 16:48:17 2020 -0700

    ntfs: add check for mft record size in superblock
    
    [ Upstream commit 4f8c94022f0bc3babd0a124c0a7dcdd7547bd94e ]
    
    Number of bytes allocated for mft record should be equal to the mft record
    size stored in ntfs superblock as reported by syzbot, userspace might
    trigger out-of-bounds read by dereferencing ctx->attr in ntfs_attr_find()
    
    Reported-by: syzbot+aed06913f36eff9b544e@syzkaller.appspotmail.com
    Signed-off-by: Rustam Kovhaev <rkovhaev@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Tested-by: syzbot+aed06913f36eff9b544e@syzkaller.appspotmail.com
    Acked-by: Anton Altaparmakov <anton@tuxera.com>
    Link: https://syzkaller.appspot.com/bug?extid=aed06913f36eff9b544e
    Link: https://lkml.kernel.org/r/20200824022804.226242-1-rkovhaev@gmail.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05f9cc28a9542641f55f9691619736c41daf0d79
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Sun Jun 28 07:55:23 2020 +0200

    media: venus: core: Fix runtime PM imbalance in venus_probe
    
    [ Upstream commit bbe516e976fce538db96bd2b7287df942faa14a3 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code. Thus a pairing decrement is needed on
    the error handling path to keep the counter balanced. For other error
    paths after this call, things are the same.
    
    Fix this by adding pm_runtime_put_noidle() after 'err_runtime_disable'
    label. But in this case, the error path after pm_runtime_put_sync()
    will decrease PM usage counter twice. Thus add an extra
    pm_runtime_get_noresume() in this path to balance PM counter.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ce7ba162b3528b489046c5b0b38d2ed463a7c9e
Author: Alexander Aring <aahringo@redhat.com>
Date:   Thu Aug 27 15:02:51 2020 -0400

    fs: dlm: fix configfs memory leak
    
    [ Upstream commit 3d2825c8c6105b0f36f3ff72760799fa2e71420e ]
    
    This patch fixes the following memory detected by kmemleak and umount
    gfs2 filesystem which removed the last lockspace:
    
    unreferenced object 0xffff9264f482f600 (size 192):
      comm "dlm_controld", pid 325, jiffies 4294690276 (age 48.136s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 6e 6f 64 65 73 00 00 00  ........nodes...
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<00000000060481d7>] make_space+0x41/0x130
        [<000000008d905d46>] configfs_mkdir+0x1a2/0x5f0
        [<00000000729502cf>] vfs_mkdir+0x155/0x210
        [<000000000369bcf1>] do_mkdirat+0x6d/0x110
        [<00000000cc478a33>] do_syscall_64+0x33/0x40
        [<00000000ce9ccf01>] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    The patch just remembers the "nodes" entry pointer in space as I think
    it's created as subdirectory when parent "spaces" is created. In
    function drop_space() we will lost the pointer reference to nds because
    configfs_remove_default_groups(). However as this subdirectory is always
    available when "spaces" exists it will just be freed when "spaces" will be
    freed.
    
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed99b3e5117d9afb0634ef29205a8cb6c031df39
Author: Vikash Garodia <vgarodia@codeaurora.org>
Date:   Tue Aug 4 13:48:45 2020 +0200

    media: venus: fixes for list corruption
    
    [ Upstream commit e1c69c4eef61ffe295b747992c6fd849e6cd747d ]
    
    There are few list handling issues while adding and deleting
    node in the registered buf list in the driver.
    1. list addition - buffer added into the list during buf_init
    while not deleted during cleanup.
    2. list deletion - In capture streamoff, the list was reinitialized.
    As a result, if any node was present in the list, it would
    lead to issue while cleaning up that node during buf_cleanup.
    
    Corresponding call traces below:
    [  165.751014] Call trace:
    [  165.753541]  __list_add_valid+0x58/0x88
    [  165.757532]  venus_helper_vb2_buf_init+0x74/0xa8 [venus_core]
    [  165.763450]  vdec_buf_init+0x34/0xb4 [venus_dec]
    [  165.768271]  __buf_prepare+0x598/0x8a0 [videobuf2_common]
    [  165.773820]  vb2_core_qbuf+0xb4/0x334 [videobuf2_common]
    [  165.779298]  vb2_qbuf+0x78/0xb8 [videobuf2_v4l2]
    [  165.784053]  v4l2_m2m_qbuf+0x80/0xf8 [v4l2_mem2mem]
    [  165.789067]  v4l2_m2m_ioctl_qbuf+0x2c/0x38 [v4l2_mem2mem]
    [  165.794624]  v4l_qbuf+0x48/0x58
    
    [ 1797.556001] Call trace:
    [ 1797.558516]  __list_del_entry_valid+0x88/0x9c
    [ 1797.562989]  vdec_buf_cleanup+0x54/0x228 [venus_dec]
    [ 1797.568088]  __buf_prepare+0x270/0x8a0 [videobuf2_common]
    [ 1797.573625]  vb2_core_qbuf+0xb4/0x338 [videobuf2_common]
    [ 1797.579082]  vb2_qbuf+0x78/0xb8 [videobuf2_v4l2]
    [ 1797.583830]  v4l2_m2m_qbuf+0x80/0xf8 [v4l2_mem2mem]
    [ 1797.588843]  v4l2_m2m_ioctl_qbuf+0x2c/0x38 [v4l2_mem2mem]
    [ 1797.594389]  v4l_qbuf+0x48/0x58
    
    Signed-off-by: Vikash Garodia <vgarodia@codeaurora.org>
    Reviewed-by: Fritz Koenig <frkoenig@chromium.org>
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f6af5a3c0f4122db83c178c6126d63a97d1e306
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Date:   Wed Sep 2 08:37:12 2020 +0200

    media: saa7134: avoid a shift overflow
    
    [ Upstream commit 15a36aae1ec1c1f17149b6113b92631791830740 ]
    
    As reported by smatch:
            drivers/media/pci/saa7134//saa7134-tvaudio.c:686 saa_dsp_writel() warn: should 'reg << 2' be a 64 bit type?
    
    On a 64-bits Kernel, the shift might be bigger than 32 bits.
    
    In real, this should never happen, but let's shut up the warning.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb475ba4400f7e457386cca4f8d15767e595e49d
Author: Pali RohÃ¡r <pali@kernel.org>
Date:   Mon Jul 27 15:38:34 2020 +0200

    mmc: sdio: Check for CISTPL_VERS_1 buffer size
    
    [ Upstream commit 8ebe2607965d3e2dc02029e8c7dd35fbe508ffd0 ]
    
    Before parsing CISTPL_VERS_1 structure check that its size is at least two
    bytes to prevent buffer overflow.
    
    Signed-off-by: Pali RohÃ¡r <pali@kernel.org>
    Link: https://lore.kernel.org/r/20200727133837.19086-2-pali@kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67806a68d52c6411d826c932ec3090be9d598b09
Author: Adam Goode <agoode@google.com>
Date:   Sun Aug 23 03:21:33 2020 +0200

    media: uvcvideo: Ensure all probed info is returned to v4l2
    
    [ Upstream commit 8a652a17e3c005dcdae31b6c8fdf14382a29cbbe ]
    
    bFrameIndex and bFormatIndex can be negotiated by the camera during
    probing, resulting in the camera choosing a different format than
    expected. v4l2 can already accommodate such changes, but the code was
    not updating the proper fields.
    
    Without such a change, v4l2 would potentially interpret the payload
    incorrectly, causing corrupted output. This was happening on the
    Elgato HD60 S+, which currently always renegotiates to format 1.
    
    As an aside, the Elgato firmware is buggy and should not be renegotating,
    but it is still a valid thing for the camera to do. Both macOS and Windows
    will properly probe and read uncorrupted images from this camera.
    
    With this change, both qv4l2 and chromium can now read uncorrupted video
    from the Elgato HD60 S+.
    
    [Add blank lines, remove periods at the of messages]
    
    Signed-off-by: Adam Goode <agoode@google.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6827d62a86dea7bbdbf93dd2be8808645948f545
Author: Borislav Petkov <bp@suse.de>
Date:   Sun Sep 6 23:02:52 2020 +0200

    x86/mce: Make mce_rdmsrl() panic on an inaccessible MSR
    
    [ Upstream commit e2def7d49d0812ea40a224161b2001b2e815dce2 ]
    
    If an exception needs to be handled while reading an MSR - which is in
    most of the cases caused by a #GP on a non-existent MSR - then this
    is most likely the incarnation of a BIOS or a hardware bug. Such bug
    violates the architectural guarantee that MCA banks are present with all
    MSRs belonging to them.
    
    The proper fix belongs in the hardware/firmware - not in the kernel.
    
    Handling an #MC exception which is raised while an NMI is being handled
    would cause the nasty NMI nesting issue because of the shortcoming of
    IRET of reenabling NMIs when executed. And the machine is in an #MC
    context already so <Deity> be at its side.
    
    Tracing MSR accesses while in #MC is another no-no due to tracing being
    inherently a bad idea in atomic context:
    
      vmlinux.o: warning: objtool: do_machine_check()+0x4a: call to mce_rdmsrl() leaves .noinstr.text section
    
    so remove all that "additional" functionality from mce_rdmsrl() and
    provide it with a special exception handler which panics the machine
    when that MSR is not accessible.
    
    The exception handler prints a human-readable message explaining what
    the panic reason is but, what is more, it panics while in the #GP
    handler and latter won't have executed an IRET, thus opening the NMI
    nesting issue in the case when the #MC has happened while handling
    an NMI. (#MC itself won't be reenabled until MCG_STATUS hasn't been
    cleared).
    
    Suggested-by: Andy Lutomirski <luto@kernel.org>
    Suggested-by: Peter Zijlstra <peterz@infradead.org>
    [ Add missing prototypes for ex_handler_* ]
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Tony Luck <tony.luck@intel.com>
    Link: https://lkml.kernel.org/r/20200906212130.GA28456@zn.tnic
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7aa3f954cd91ecfe99a09f05528ce64e4e70e456
Author: Xiaolong Huang <butterflyhuangxx@gmail.com>
Date:   Fri Apr 17 11:52:30 2020 +0200

    media: media/pci: prevent memory leak in bttv_probe
    
    [ Upstream commit 7b817585b730665126b45df5508dd69526448bc8 ]
    
    In bttv_probe if some functions such as pci_enable_device,
    pci_set_dma_mask and request_mem_region fails the allocated
     memory for btv should be released.
    
    Signed-off-by: Xiaolong Huang <butterflyhuangxx@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad3825eedb162667dcb795348137cf796f16f217
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Thu May 21 12:00:21 2020 +0200

    media: bdisp: Fix runtime PM imbalance on error
    
    [ Upstream commit dbd2f2dc025f9be8ae063e4f270099677238f620 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code. Thus a pairing decrement is needed on
    the error handling path to keep the counter balanced.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Fabien Dessenne <fabien.dessenne@st.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1285a73c5fad15d92ecabfb0e082c17707ccbb4
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Thu May 21 12:05:02 2020 +0200

    media: platform: sti: hva: Fix runtime PM imbalance on error
    
    [ Upstream commit d912a1d9e9afe69c6066c1ceb6bfc09063074075 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code. Thus a pairing decrement is needed on
    the error handling path to keep the counter balanced.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d727e1d261a21647b09d4ee47065bad44e84fd9
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Thu May 21 15:29:33 2020 +0200

    media: platform: s3c-camif: Fix runtime PM imbalance on error
    
    [ Upstream commit dafa3605fe60d5a61239d670919b2a36e712481e ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code. Thus a pairing decrement is needed on
    the error handling path to keep the counter balanced.
    
    Also, call pm_runtime_disable() when pm_runtime_get_sync() returns
    an error code.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Sylwester Nawrocki <snawrocki@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b3f0742f531bef4709b4279a0e57a47f0de8ae9
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Mon Jun 8 07:29:19 2020 +0200

    media: vsp1: Fix runtime PM imbalance on error
    
    [ Upstream commit 98fae901c8883640202802174a4bd70a1b9118bd ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code. Thus a pairing decrement is needed on
    the error handling path to keep the counter balanced.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7db4c3dfee01f5e403c2b97fdeb60506017fd355
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 05:01:11 2020 +0200

    media: exynos4-is: Fix a reference count leak
    
    [ Upstream commit 64157b2cb1940449e7df2670e85781c690266588 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code, causing incorrect ref count if
    pm_runtime_put_noidle() is not called in error handling paths.
    Thus call pm_runtime_put_noidle() if pm_runtime_get_sync() fails.
    
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f36a80bc75127bd87d288cefbd445a6a6c50904e
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 05:10:58 2020 +0200

    media: exynos4-is: Fix a reference count leak due to pm_runtime_get_sync
    
    [ Upstream commit c47f7c779ef0458a58583f00c9ed71b7f5a4d0a2 ]
    
    On calling pm_runtime_get_sync() the reference count of the device
    is incremented. In case of failure, decrement the
    reference count before returning the error.
    
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8babe11e46ba469502c04315ac5d023269c17881
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 05:18:29 2020 +0200

    media: exynos4-is: Fix several reference count leaks due to pm_runtime_get_sync
    
    [ Upstream commit 7ef64ceea0008c17e94a8a2c60c5d6d46f481996 ]
    
    On calling pm_runtime_get_sync() the reference count of the device
    is incremented. In case of failure, decrement the
    reference count before returning the error.
    
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62f3bc07008d7c1994422771ac06d7690949762f
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 05:31:06 2020 +0200

    media: sti: Fix reference count leaks
    
    [ Upstream commit 6f4432bae9f2d12fc1815b5e26cc07e69bcad0df ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code, causing incorrect ref count if
    pm_runtime_put_noidle() is not called in error handling paths.
    Thus call pm_runtime_put_noidle() if pm_runtime_get_sync() fails.
    
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e4d4abe6e86f4c09075fea15ed6e8e010babd698
Author: Aditya Pakki <pakki001@umn.edu>
Date:   Sun Jun 14 05:58:41 2020 +0200

    media: st-delta: Fix reference count leak in delta_run_work
    
    [ Upstream commit 57cc666d36adc7b45e37ba4cd7bc4e44ec4c43d7 ]
    
    delta_run_work() calls delta_get_sync() that increments
    the reference counter. In case of failure, decrement the reference
    count by calling delta_put_autosuspend().
    
    Signed-off-by: Aditya Pakki <pakki001@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d310c7437cb8972c8a40772af76448d63f6a600d
Author: Oliver Neukum <oneukum@suse.com>
Date:   Wed Sep 16 15:50:51 2020 +0200

    media: ati_remote: sanity check for both endpoints
    
    [ Upstream commit a8be80053ea74bd9c3f9a3810e93b802236d6498 ]
    
    If you do sanity checks, you should do them for both endpoints.
    Hence introduce checking for endpoint type for the output
    endpoint, too.
    
    Reported-by: syzbot+998261c2ae5932458f6c@syzkaller.appspotmail.com
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4325c738f8feb07f31f551ece8b61be809e7e0f
Author: Pavel Machek <pavel@ucw.cz>
Date:   Sun Sep 20 11:01:37 2020 +0200

    media: firewire: fix memory leak
    
    [ Upstream commit b28e32798c78a346788d412f1958f36bb760ec03 ]
    
    Fix memory leak in node_probe.
    
    Signed-off-by: Pavel Machek (CIP) <pavel@denx.de>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d06ea207e90bcbf81df968029b79b38290bab4ca
Author: Borislav Petkov <bp@suse.de>
Date:   Tue Sep 29 19:13:12 2020 -0700

    x86/mce: Add Skylake quirk for patrol scrub reported errors
    
    [ Upstream commit fd258dc4442c5c1c069c6b5b42bfe7d10cddda95 ]
    
    The patrol scrubber in Skylake and Cascade Lake systems can be configured
    to report uncorrected errors using a special signature in the machine
    check bank and to signal using CMCI instead of machine check.
    
    Update the severity calculation mechanism to allow specifying the model,
    minimum stepping and range of machine check bank numbers.
    
    Add a new rule to detect the special signature (on model 0x55, stepping
    >=4 in any of the memory controller banks).
    
     [ bp: Rewrite it.
       aegl: Productize it. ]
    
    Suggested-by: Youquan Song <youquan.song@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Co-developed-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20200930021313.31810-2-tony.luck@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 624c2782b49daf20e5facab9960be420d8619489
Author: Arvind Sankar <nivedita@alum.mit.edu>
Date:   Wed Sep 2 19:21:52 2020 -0400

    x86/asm: Replace __force_order with a memory clobber
    
    [ Upstream commit aa5cacdc29d76a005cbbee018a47faa6e724dd2d ]
    
    The CRn accessor functions use __force_order as a dummy operand to
    prevent the compiler from reordering CRn reads/writes with respect to
    each other.
    
    The fact that the asm is volatile should be enough to prevent this:
    volatile asm statements should be executed in program order. However GCC
    4.9.x and 5.x have a bug that might result in reordering. This was fixed
    in 8.1, 7.3 and 6.5. Versions prior to these, including 5.x and 4.9.x,
    may reorder volatile asm statements with respect to each other.
    
    There are some issues with __force_order as implemented:
    - It is used only as an input operand for the write functions, and hence
      doesn't do anything additional to prevent reordering writes.
    - It allows memory accesses to be cached/reordered across write
      functions, but CRn writes affect the semantics of memory accesses, so
      this could be dangerous.
    - __force_order is not actually defined in the kernel proper, but the
      LLVM toolchain can in some cases require a definition: LLVM (as well
      as GCC 4.9) requires it for PIE code, which is why the compressed
      kernel has a definition, but also the clang integrated assembler may
      consider the address of __force_order to be significant, resulting in
      a reference that requires a definition.
    
    Fix this by:
    - Using a memory clobber for the write functions to additionally prevent
      caching/reordering memory accesses across CRn writes.
    - Using a dummy input operand with an arbitrary constant address for the
      read functions, instead of a global variable. This will prevent reads
      from being reordered across writes, while allowing memory loads to be
      cached/reordered across CRn reads, which should be safe.
    
    Signed-off-by: Arvind Sankar <nivedita@alum.mit.edu>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
    Tested-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=82602
    Link: https://lore.kernel.org/lkml/20200527135329.1172644-1-arnd@arndb.de/
    Link: https://lkml.kernel.org/r/20200902232152.3709896-1-nivedita@alum.mit.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fce2779e1c6e5aca0d14e03baccf3f9e004457ed
Author: Pavel Machek <pavel@denx.de>
Date:   Mon Sep 21 13:34:35 2020 +0200

    crypto: ccp - fix error handling
    
    [ Upstream commit e356c49c6cf0db3f00e1558749170bd56e47652d ]
    
    Fix resource leak in error handling.
    
    Signed-off-by: Pavel Machek (CIP) <pavel@denx.de>
    Acked-by: John Allen <john.allen@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3a0ed411008c921cc009e5d613f92d6e09bd269
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Thu Oct 8 22:37:23 2020 +0900

    block: ratelimit handle_bad_sector() message
    
    [ Upstream commit f4ac712e4fe009635344b9af5d890fe25fcc8c0d ]
    
    syzbot is reporting unkillable task [1], for the caller is failing to
    handle a corrupted filesystem image which attempts to access beyond
    the end of the device. While we need to fix the caller, flooding the
    console with handle_bad_sector() message is unlikely useful.
    
    [1] https://syzkaller.appspot.com/bug?id=f1f49fb971d7a3e01bd8ab8cff2ff4572ccf3092
    
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a47cecbd2816edb72583a545e9ea6cb1736886d8
Author: Zhao Heming <heming.zhao@suse.com>
Date:   Sun Sep 27 13:40:13 2020 +0800

    md/bitmap: fix memory leak of temporary bitmap
    
    [ Upstream commit 1383b347a8ae4a69c04ae3746e6cb5c8d38e2585 ]
    
    Callers of get_bitmap_from_slot() are responsible to free the bitmap.
    
    Suggested-by: Guoqing Jiang <guoqing.jiang@cloud.ionos.com>
    Signed-off-by: Zhao Heming <heming.zhao@suse.com>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44e2bc80a6ece3163c0a557022bc6094c3453fb7
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Oct 14 16:41:58 2020 +0200

    i2c: core: Restore acpi_walk_dep_device_list() getting called after registering the ACPI i2c devs
    
    [ Upstream commit 8058d69905058ec8f467a120b5ec5bb831ea67f3 ]
    
    Commit 21653a4181ff ("i2c: core: Call i2c_acpi_install_space_handler()
    before i2c_acpi_register_devices()")'s intention was to only move the
    acpi_install_address_space_handler() call to the point before where
    the ACPI declared i2c-children of the adapter where instantiated by
    i2c_acpi_register_devices().
    
    But i2c_acpi_install_space_handler() had a call to
    acpi_walk_dep_device_list() hidden (that is I missed it) at the end
    of it, so as an unwanted side-effect now acpi_walk_dep_device_list()
    was also being called before i2c_acpi_register_devices().
    
    Move the acpi_walk_dep_device_list() call to the end of
    i2c_acpi_register_devices(), so that it is once again called *after*
    the i2c_client-s hanging of the adapter have been created.
    
    This fixes the Microsoft Surface Go 2 hanging at boot.
    
    Fixes: 21653a4181ff ("i2c: core: Call i2c_acpi_install_space_handler() before i2c_acpi_register_devices()")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=209627
    Reported-by: Rainer Finke <rainer@finke.cc>
    Reported-by: Kieran Bingham <kieran.bingham@ideasonboard.com>
    Suggested-by: Maximilian Luz <luzmaximilian@gmail.com>
    Tested-by: Kieran Bingham <kieran.bingham@ideasonboard.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f224b8be9e312b88feb40893ec64b6b8490ed85e
Author: Al Grant <al.grant@foss.arm.com>
Date:   Mon Sep 21 21:46:37 2020 +0100

    perf: correct SNOOPX field offset
    
    [ Upstream commit f3d301c1f2f5676465cdf3259737ea19cc82731f ]
    
    perf_event.h has macros that define the field offsets in the
    data_src bitmask in perf records. The SNOOPX and REMOTE offsets
    were both 37. These are distinct fields, and the bitfield layout
    in perf_mem_data_src confirms that SNOOPX should be at offset 38.
    
    Fixes: 52839e653b5629bd ("perf tools: Add support for printing new mem_info encodings")
    Signed-off-by: Al Grant <al.grant@foss.arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Andi Kleen <ak@linux.intel.com>
    Link: https://lkml.kernel.org/r/4ac9f5cc-4388-b34a-9999-418a4099415d@foss.arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78e27678db4ea62377425df497c7421359888b1a
Author: Juri Lelli <juri.lelli@redhat.com>
Date:   Tue Oct 13 07:31:14 2020 +0200

    sched/features: Fix !CONFIG_JUMP_LABEL case
    
    [ Upstream commit a73f863af4ce9730795eab7097fb2102e6854365 ]
    
    Commit:
    
      765cc3a4b224e ("sched/core: Optimize sched_feat() for !CONFIG_SCHED_DEBUG builds")
    
    made sched features static for !CONFIG_SCHED_DEBUG configurations, but
    overlooked the CONFIG_SCHED_DEBUG=y and !CONFIG_JUMP_LABEL cases.
    
    For the latter echoing changes to /sys/kernel/debug/sched_features has
    the nasty effect of effectively changing what sched_features reports,
    but without actually changing the scheduler behaviour (since different
    translation units get different sysctl_sched_features).
    
    Fix CONFIG_SCHED_DEBUG=y and !CONFIG_JUMP_LABEL configurations by properly
    restructuring ifdefs.
    
    Fixes: 765cc3a4b224e ("sched/core: Optimize sched_feat() for !CONFIG_SCHED_DEBUG builds")
    Co-developed-by: Daniel Bristot de Oliveira <bristot@redhat.com>
    Signed-off-by: Daniel Bristot de Oliveira <bristot@redhat.com>
    Signed-off-by: Juri Lelli <juri.lelli@redhat.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Patrick Bellasi <patrick.bellasi@matbug.net>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Link: https://lore.kernel.org/r/20201013053114.160628-1-juri.lelli@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 13153509d8f33ebb4912c1371e9e1137928823c1
Author: Kaige Li <likaige@loongson.cn>
Date:   Tue Aug 11 09:59:57 2020 +0800

    NTB: hw: amd: fix an issue about leak system resources
    
    [ Upstream commit 44a0a3c17919db1498cebb02ecf3cf4abc1ade7b ]
    
    The related system resources were not released when pci_set_dma_mask(),
    pci_set_consistent_dma_mask(), or pci_iomap() return error in the
    amd_ntb_init_pci() function. Add pci_release_regions() to fix it.
    
    Fixes: a1b3695820aa ("NTB: Add support for AMD PCI-Express Non-Transparent Bridge")
    Signed-off-by: Kaige Li <likaige@loongson.cn>
    Signed-off-by: Jon Mason <jdmason@kudzu.us>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit abd19984441c5817937bf47a1cf0abe7c63587f9
Author: zhenwei pi <pizhenwei@bytedance.com>
Date:   Thu Oct 15 09:51:40 2020 +0800

    nvmet: fix uninitialized work for zero kato
    
    [ Upstream commit 85bd23f3dc09a2ae9e56885420e52c54bf983713 ]
    
    When connecting a controller with a zero kato value using the following
    command line
    
       nvme connect -t tcp -n NQN -a ADDR -s PORT --keep-alive-tmo=0
    
    the warning below can be reproduced:
    
    WARNING: CPU: 1 PID: 241 at kernel/workqueue.c:1627 __queue_delayed_work+0x6d/0x90
    with trace:
      mod_delayed_work_on+0x59/0x90
      nvmet_update_cc+0xee/0x100 [nvmet]
      nvmet_execute_prop_set+0x72/0x80 [nvmet]
      nvmet_tcp_try_recv_pdu+0x2f7/0x770 [nvmet_tcp]
      nvmet_tcp_io_work+0x63f/0xb2d [nvmet_tcp]
      ...
    
    This is caused by queuing up an uninitialized work.  Althrough the
    keep-alive timer is disabled during allocating the controller (fixed in
    0d3b6a8d213a), ka_work still has a chance to run (called by
    nvmet_start_ctrl).
    
    Fixes: 0d3b6a8d213a ("nvmet: Disable keep-alive timer when kato is cleared to 0h")
    Signed-off-by: zhenwei pi <pizhenwei@bytedance.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ef1279abc74ede5a7b77e0d3c8ba149d9bde3d1
Author: Ganesh Goudar <ganeshgr@linux.ibm.com>
Date:   Fri Jul 24 12:09:46 2020 +0530

    powerpc/pseries: Avoid using addr_to_pfn in real mode
    
    [ Upstream commit 4ff753feab021242144818b9a3ba011238218145 ]
    
    When an UE or memory error exception is encountered the MCE handler
    tries to find the pfn using addr_to_pfn() which takes effective
    address as an argument, later pfn is used to poison the page where
    memory error occurred, recent rework in this area made addr_to_pfn
    to run in real mode, which can be fatal as it may try to access
    memory outside RMO region.
    
    Have two helper functions to separate things to be done in real mode
    and virtual mode without changing any functionality. This also fixes
    the following error as the use of addr_to_pfn is now moved to virtual
    mode.
    
    Without this change following kernel crash is seen on hitting UE.
    
    [  485.128036] Oops: Kernel access of bad area, sig: 11 [#1]
    [  485.128040] LE SMP NR_CPUS=2048 NUMA pSeries
    [  485.128047] Modules linked in:
    [  485.128067] CPU: 15 PID: 6536 Comm: insmod Kdump: loaded Tainted: G OE 5.7.0 #22
    [  485.128074] NIP:  c00000000009b24c LR: c0000000000398d8 CTR: c000000000cd57c0
    [  485.128078] REGS: c000000003f1f970 TRAP: 0300   Tainted: G OE (5.7.0)
    [  485.128082] MSR:  8000000000001003 <SF,ME,RI,LE>  CR: 28008284  XER: 00000001
    [  485.128088] CFAR: c00000000009b190 DAR: c0000001fab00000 DSISR: 40000000 IRQMASK: 1
    [  485.128088] GPR00: 0000000000000001 c000000003f1fbf0 c000000001634300 0000b0fa01000000
    [  485.128088] GPR04: d000000002220000 0000000000000000 00000000fab00000 0000000000000022
    [  485.128088] GPR08: c0000001fab00000 0000000000000000 c0000001fab00000 c000000003f1fc14
    [  485.128088] GPR12: 0000000000000008 c000000003ff5880 d000000002100008 0000000000000000
    [  485.128088] GPR16: 000000000000ff20 000000000000fff1 000000000000fff2 d0000000021a1100
    [  485.128088] GPR20: d000000002200000 c00000015c893c50 c000000000d49b28 c00000015c893c50
    [  485.128088] GPR24: d0000000021a0d08 c0000000014e5da8 d0000000021a0818 000000000000000a
    [  485.128088] GPR28: 0000000000000008 000000000000000a c0000000017e2970 000000000000000a
    [  485.128125] NIP [c00000000009b24c] __find_linux_pte+0x11c/0x310
    [  485.128130] LR [c0000000000398d8] addr_to_pfn+0x138/0x170
    [  485.128133] Call Trace:
    [  485.128135] Instruction dump:
    [  485.128138] 3929ffff 7d4a3378 7c883c36 7d2907b4 794a1564 7d294038 794af082 3900ffff
    [  485.128144] 79291f24 790af00e 78e70020 7d095214 <7c69502a> 2fa30000 419e011c 70690040
    [  485.128152] ---[ end trace d34b27e29ae0e340 ]---
    
    Fixes: 9ca766f9891d ("powerpc/64s/pseries: machine check convert to use common event code")
    Signed-off-by: Ganesh Goudar <ganeshgr@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200724063946.21378-1-ganeshgr@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72ccbd1481cbea167cbfc53920e82bccc5b88cdf
Author: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
Date:   Sat Oct 17 22:12:10 2020 +0530

    powerpc/powernv/dump: Fix race while processing OPAL dump
    
    [ Upstream commit 0a43ae3e2beb77e3481d812834d33abe270768ab ]
    
    Every dump reported by OPAL is exported to userspace through a sysfs
    interface and notified using kobject_uevent(). The userspace daemon
    (opal_errd) then reads the dump and acknowledges that the dump is
    saved safely to disk. Once acknowledged the kernel removes the
    respective sysfs file entry causing respective resources to be
    released including kobject.
    
    However it's possible the userspace daemon may already be scanning
    dump entries when a new sysfs dump entry is created by the kernel.
    User daemon may read this new entry and ack it even before kernel can
    notify userspace about it through kobject_uevent() call. If that
    happens then we have a potential race between
    dump_ack_store->kobject_put() and kobject_uevent which can lead to
    use-after-free of a kernfs object resulting in a kernel crash.
    
    This patch fixes this race by protecting the sysfs file
    creation/notification by holding a reference count on kobject until we
    safely send kobject_uevent().
    
    The function create_dump_obj() returns the dump object which if used
    by caller function will end up in use-after-free problem again.
    However, the return value of create_dump_obj() function isn't being
    used today and there is no need as well. Hence change it to return
    void to make this fix complete.
    
    Fixes: c7e64b9ce04a ("powerpc/powernv Platform dump interface")
    Signed-off-by: Vasant Hegde <hegdevasant@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20201017164210.264619-1-hegdevasant@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d21b8c8fbf89195e7d55e8182daff95e86d1c43c
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Oct 16 15:33:51 2020 +0100

    lightnvm: fix out-of-bounds write to array devices->info[]
    
    [ Upstream commit a48faebe65b0db55a73b9220c3d919eee849bb79 ]
    
    There is an off-by-one array check that can lead to a out-of-bounds
    write to devices->info[i].  Fix this by checking by using >= rather
    than > for the size check. Also replace hard-coded array size limit
    with ARRAY_SIZE on the array.
    
    Addresses-Coverity: ("Out-of-bounds write")
    Fixes: cd9e9808d18f ("lightnvm: Support for Open-Channel SSDs")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0b10fa454eab242b583c2b1b92793fd3875b627
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sat Aug 15 20:19:57 2020 +0200

    ARM: dts: meson8: remove two invalid interrupt lines from the GPU node
    
    [ Upstream commit 737e7610b545cc901a9696083c1824a7104b8d1b ]
    
    The 3.10 vendor kernel defines the following GPU 20 interrupt lines:
      #define INT_MALI_GP                 AM_IRQ(160)
      #define INT_MALI_GP_MMU             AM_IRQ(161)
      #define INT_MALI_PP                 AM_IRQ(162)
      #define INT_MALI_PMU                AM_IRQ(163)
      #define INT_MALI_PP0                AM_IRQ(164)
      #define INT_MALI_PP0_MMU            AM_IRQ(165)
      #define INT_MALI_PP1                AM_IRQ(166)
      #define INT_MALI_PP1_MMU            AM_IRQ(167)
      #define INT_MALI_PP2                AM_IRQ(168)
      #define INT_MALI_PP2_MMU            AM_IRQ(169)
      #define INT_MALI_PP3                AM_IRQ(170)
      #define INT_MALI_PP3_MMU            AM_IRQ(171)
      #define INT_MALI_PP4                AM_IRQ(172)
      #define INT_MALI_PP4_MMU            AM_IRQ(173)
      #define INT_MALI_PP5                AM_IRQ(174)
      #define INT_MALI_PP5_MMU            AM_IRQ(175)
      #define INT_MALI_PP6                AM_IRQ(176)
      #define INT_MALI_PP6_MMU            AM_IRQ(177)
      #define INT_MALI_PP7                AM_IRQ(178)
      #define INT_MALI_PP7_MMU            AM_IRQ(179)
    
    However, the driver from the 3.10 vendor kernel does not use the
    following four interrupt lines:
    - INT_MALI_PP3
    - INT_MALI_PP3_MMU
    - INT_MALI_PP7
    - INT_MALI_PP7_MMU
    
    Drop the "pp3" and "ppmmu3" interrupt lines. This is also important
    because there is no matching entry in interrupt-names for it (meaning
    the "pp2" interrupt is actually assigned to the "pp3" interrupt line).
    
    Fixes: 7d3f6b536e72c9 ("ARM: dts: meson8: add the Mali-450 MP6 GPU")
    Reported-by: Thomas Graichen <thomas.graichen@gmail.com>
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Tested-by: thomas graichen <thomas.graichen@gmail.com>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20200815181957.408649-1-martin.blumenstingl@googlemail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7de30421d646086b549cd263de64f94ea416fd38
Author: Michal Simek <michal.simek@xilinx.com>
Date:   Mon Aug 24 10:59:14 2020 +0200

    arm64: dts: zynqmp: Remove additional compatible string for i2c IPs
    
    [ Upstream commit 35292518cb0a626fcdcabf739aed75060a018ab5 ]
    
    DT binding permits only one compatible string which was decribed in past by
    commit 63cab195bf49 ("i2c: removed work arounds in i2c driver for Zynq
    Ultrascale+ MPSoC").
    The commit aea37006e183 ("dt-bindings: i2c: cadence: Migrate i2c-cadence
    documentation to YAML") has converted binding to yaml and the following
    issues is reported:
    ...: i2c@ff030000: compatible: Additional items are not allowed
    ('cdns,i2c-r1p10' was unexpected)
            From schema:
    .../Documentation/devicetree/bindings/i2c/cdns,i2c-r1p10.yaml fds
    ...: i2c@ff030000: compatible: ['cdns,i2c-r1p14', 'cdns,i2c-r1p10'] is too
    long
    
    The commit c415f9e8304a ("ARM64: zynqmp: Fix i2c node's compatible string")
    has added the second compatible string but without removing origin one.
    The patch is only keeping one compatible string "cdns,i2c-r1p14".
    
    Fixes: c415f9e8304a ("ARM64: zynqmp: Fix i2c node's compatible string")
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Link: https://lore.kernel.org/r/cc294ae1a79ef845af6809ddb4049f0c0f5bb87a.1598259551.git.michal.simek@xilinx.com
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64b8f8fbe9399682c7b8d7a29399fbb0bbcffb83
Author: Tony Lindgren <tony@atomide.com>
Date:   Wed Sep 23 09:16:22 2020 +0300

    ARM: OMAP2+: Restore MPU power domain if cpu_cluster_pm_enter() fails
    
    [ Upstream commit 8f04aea048d56f3e39a7e543939450246542a6fc ]
    
    If cpu_cluster_pm_enter() fails, we need to set MPU power domain back
    to enabled to prevent the next WFI from potentially triggering an
    undesired MPU power domain state change.
    
    We already do this for omap_enter_idle_smp() but are missing it for
    omap_enter_idle_coupled().
    
    Fixes: 55be2f50336f ("ARM: OMAP2+: Handle errors for cpu_pm")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55a7acbc049524a1e53b14f14f2352540d30441a
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Sun Sep 20 22:26:25 2020 +0200

    soc: fsl: qbman: Fix return value on success
    
    [ Upstream commit 750cf40c0f7088f36a8a5d102e0488b1ac47faf5 ]
    
    On error the function was meant to return -ERRNO.  This also fixes
    compile warning:
    
      drivers/soc/fsl/qbman/bman.c:640:6: warning: variable 'err' set but not used [-Wunused-but-set-variable]
    
    Fixes: 0505d00c8dba ("soc/fsl/qbman: Cleanup buffer pools if BMan was initialized prior to bootup")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7ffa707e657a76777c1387bca5d6c7f39871c08
Author: Cristian Ciocaltea <cristian.ciocaltea@gmail.com>
Date:   Fri Aug 28 16:53:17 2020 +0300

    ARM: dts: owl-s500: Fix incorrect PPI interrupt specifiers
    
    [ Upstream commit 55f6c9931f7c32f19cf221211f099dfd8dab3af9 ]
    
    The PPI interrupts for cortex-a9 were incorrectly specified, fix them.
    
    Fixes: fdfe7f4f9d85 ("ARM: dts: Add Actions Semi S500 and LeMaker Guitar")
    Signed-off-by: Cristian Ciocaltea <cristian.ciocaltea@gmail.com>
    Reviewed-by: Peter Korsgaard <peter@korsgaard.com>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d725df0e2bbbcb7012e79abc8870b67e7c0a1acd
Author: Amit Singh Tomar <amittomer25@gmail.com>
Date:   Sun Jul 19 23:12:02 2020 +0530

    arm64: dts: actions: limit address range for pinctrl node
    
    [ Upstream commit 4bb1eb3cd4bd6241d5e5f99bbfd801ea5a007b6c ]
    
    After commit 7cdf8446ed1d ("arm64: dts: actions: Add pinctrl node for
    Actions Semi S700") following error has been observed while booting
    Linux on Cubieboard7-lite(based on S700 SoC).
    
    [    0.257415] pinctrl-s700 e01b0000.pinctrl: can't request region for
    resource [mem 0xe01b0000-0xe01b0fff]
    [    0.266902] pinctrl-s700: probe of e01b0000.pinctrl failed with error -16
    
    This is due to the fact that memory range for "sps" power domain controller
    clashes with pinctrl.
    
    One way to fix it, is to limit pinctrl address range which is safe
    to do as current pinctrl driver uses address range only up to 0x100.
    
    This commit limits the pinctrl address range to 0x100 so that it doesn't
    conflict with sps range.
    
    Fixes: 7cdf8446ed1d ("arm64: dts: actions: Add pinctrl node for Actions
    Semi S700")
    
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Suggested-by: Andre Przywara <andre.przywara@arm.com>
    Signed-off-by: Amit Singh Tomar <amittomer25@gmail.com>
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 449ad29d76f78f51b9154be633039acd9f8292f9
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Sep 17 15:21:17 2020 +0200

    arm64: dts: renesas: r8a774c0: Fix MSIOF1 DMA channels
    
    [ Upstream commit c91dfc9818df5f43c10c727f1cecaebdb5e2fa92 ]
    
    According to Technical Update TN-RCT-S0352A/E, MSIOF1 DMA can only be
    used with SYS-DMAC0 on R-Car E3.
    
    Fixes: 62c0056f1c3eb15d ("arm64: dts: renesas: r8a774c0: Add MSIOF nodes")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20200917132117.8515-3-geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 845e4eefd3c4eaea4696c6174f61f4a3ab0e1680
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Thu Sep 17 15:21:16 2020 +0200

    arm64: dts: renesas: r8a77990: Fix MSIOF1 DMA channels
    
    [ Upstream commit 453802c463abd003a7c38ffbc90b67ba162335b6 ]
    
    According to Technical Update TN-RCT-S0352A/E, MSIOF1 DMA can only be
    used with SYS-DMAC0 on R-Car E3.
    
    Fixes: 8517042060b55a37 ("arm64: dts: renesas: r8a77990: Add DMA properties to MSIOF nodes")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20200917132117.8515-2-geert+renesas@glider.be
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b78cdf1b51fc5ea2462b5dc444d79811715762b6
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Tue Sep 15 09:12:11 2020 +0200

    arm64: dts: qcom: msm8916: Fix MDP/DSI interrupts
    
    [ Upstream commit 027cca9eb5b450c3f6bb916ba999144c2ec23cb7 ]
    
    The mdss node sets #interrupt-cells = <1>, so its interrupts
    should be referenced using a single cell (in this case: only the
    interrupt number).
    
    However, right now the mdp/dsi node both have two interrupt cells
    set, e.g. interrupts = <4 0>. The 0 is probably meant to say
    IRQ_TYPE_NONE (= 0), but with #interrupt-cells = <1> this is
    actually interpreted as a second interrupt line.
    
    Remove the IRQ flags from both interrupts to fix this.
    
    Fixes: 305410ffd1b2 ("arm64: dts: msm8916: Add display support")
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Link: https://lore.kernel.org/r/20200915071221.72895-5-stephan@gerhold.net
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e61c8fda1bba49ed0d4839fcf951d6eb1391d7e
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Tue Sep 15 09:12:10 2020 +0200

    arm64: dts: qcom: pm8916: Remove invalid reg size from wcd_codec
    
    [ Upstream commit c2f0cbb57dbac6da3d38b47b5b96de0fe4e23884 ]
    
    Tha parent node of "wcd_codec" specifies #address-cells = <1>
    and #size-cells = <0>, which means that each resource should be
    described by one cell for the address and size omitted.
    
    However, wcd_codec currently lists 0x200 as second cell (probably
    the size of the resource). When parsing this would be treated like
    another memory resource - which is entirely wrong.
    
    To quote the device tree specification [1]:
      "If the parent node specifies a value of 0 for #size-cells,
       the length field in the value of reg shall be omitted."
    
    [1]: https://www.devicetree.org/specifications/
    
    Fixes: 5582fcb3829f ("arm64: dts: apq8016-sbc: add analog audio support with multicodec")
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Link: https://lore.kernel.org/r/20200915071221.72895-4-stephan@gerhold.net
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 975dafc038f08a51132bf6ce828361cc0fcd78a8
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Tue Sep 15 09:12:09 2020 +0200

    arm64: dts: qcom: msm8916: Remove one more thermal trip point unit name
    
    [ Upstream commit e6859ae8603c5946b8f3ecbd9b4f02b72955b9d0 ]
    
    Commit fe2aff0c574d2 ("arm64: dts: qcom: msm8916: remove unit name for thermal trip points")
    removed the unit names for most of the thermal trip points defined
    in msm8916.dtsi, but missed to update the one for cpu0_1-thermal.
    
    So why wasn't this spotted by "make dtbs_check"? Apparently, the name
    of the thermal zone is already invalid: thermal-zones.yaml specifies
    a regex of ^[a-zA-Z][a-zA-Z0-9\\-]{1,12}-thermal$, so it is not allowed
    to contain underscores. Therefore the thermal zone was never verified
    using the DTB schema.
    
    After replacing the underscore in the thermal zone name, the warning
    shows up:
    
        apq8016-sbc.dt.yaml: thermal-zones: cpu0-1-thermal:trips: 'trip-point@0'
        does not match any of the regexes: '^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$', 'pinctrl-[0-9]+'
    
    Fix up the thermal zone names and remove the unit name for the trip point.
    
    Cc: Amit Kucheria <amit.kucheria@linaro.org>
    Fixes: fe2aff0c574d2 ("arm64: dts: qcom: msm8916: remove unit name for thermal trip points")
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Link: https://lore.kernel.org/r/20200915071221.72895-3-stephan@gerhold.net
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08ece4ba2a6e32bc91a609369ec12f41804ba0d8
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Fri Sep 4 16:53:09 2020 +0200

    arm64: dts: imx8mq: Add missing interrupts to GPC
    
    [ Upstream commit 791619f66843a213784efb2f171be98933bad991 ]
    
    The i.MX General Power Controller v2 device node was missing interrupts
    property necessary to route its interrupt to GIC.  This also fixes the
    dbts_check warnings like:
    
      arch/arm64/boot/dts/freescale/imx8mq-evk.dt.yaml: gpc@303a0000:
        {'compatible': ... '$nodename': ['gpc@303a0000']} is not valid under any of the given schemas
      arch/arm64/boot/dts/freescale/imx8mq-evk.dt.yaml: gpc@303a0000: 'interrupts' is a required property
    
    Fixes: fdbcc04da246 ("arm64: dts: imx8mq: add GPC power domains")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Reviewed-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93c3898ee8dff7178f1f5cd7c30e9b9173bef610
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Aug 27 09:33:15 2020 +0200

    memory: fsl-corenet-cf: Fix handling of platform_get_irq() error
    
    [ Upstream commit dd85345abca60a8916617e8d75c0f9ce334336dd ]
    
    platform_get_irq() returns -ERRNO on error.  In such case comparison
    to 0 would pass the check.
    
    Fixes: 54afbec0d57f ("memory: Freescale CoreNet Coherency Fabric error reporting driver")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20200827073315.29351-1-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c072b76699a4cff5ce453a023cad102704b5cc4d
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Aug 27 20:53:16 2020 +0800

    memory: omap-gpmc: Fix build error without CONFIG_OF
    
    [ Upstream commit 13d029ee51da365aa9c859db0c7395129252bde8 ]
    
    If CONFIG_OF is n, gcc fails:
    
    drivers/memory/omap-gpmc.o: In function `gpmc_omap_onenand_set_timings':
        omap-gpmc.c:(.text+0x2a88): undefined reference to `gpmc_read_settings_dt'
    
    Add gpmc_read_settings_dt() helper function, which zero the gpmc_settings
    so the caller doesn't proceed with random/invalid settings.
    
    Fixes: a758f50f10cf ("mtd: onenand: omap2: Configure driver from DT")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Acked-by: Roger Quadros <rogerq@ti.com>
    Link: https://lore.kernel.org/r/20200827125316.20780-1-yuehaibing@huawei.com
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afb15453ca4c506285a725b89a999ee010b4de88
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Aug 25 13:47:07 2020 +0300

    memory: omap-gpmc: Fix a couple off by ones
    
    [ Upstream commit 4c54228ac8fd55044195825873c50a524131fa53 ]
    
    These comparisons should be >= instead of > to prevent reading one
    element beyond the end of the gpmc_cs[] array.
    
    Fixes: cdd6928c589a ("ARM: OMAP2+: Add device-tree support for NOR flash")
    Fixes: f37e4580c409 ("ARM: OMAP2: Dynamic allocator for GPMC memory space")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Roger Quadros <rogerq@ti.com>
    Link: https://lore.kernel.org/r/20200825104707.GB278587@mwanda
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8426055fc9609ad7af133bc5e6231631d7bad839
Author: Qiang Yu <yuq825@gmail.com>
Date:   Sat Aug 22 14:27:55 2020 +0800

    arm64: dts: allwinner: h5: remove Mali GPU PMU module
    
    [ Upstream commit 2933bf3528007f834fb7f5eab033f9c5b0683f91 ]
    
    H5's Mali GPU PMU is not present or working corretly although
    H5 datasheet record its interrupt vector.
    
    Adding this module will miss lead lima driver try to shutdown
    it and get waiting timeout. This problem is not exposed before
    lima runtime PM support is added.
    
    Fixes: bb39ed07e55b ("arm64: dts: allwinner: h5: Add device node for Mali-450 GPU")
    Signed-off-by: Qiang Yu <yuq825@gmail.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20200822062755.534761-1-yuq825@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec65c6a90621c82073aec7f06df68a5e4d5f1062
Author: Jernej Skrabec <jernej.skrabec@siol.net>
Date:   Mon Aug 24 21:36:49 2020 +0200

    ARM: dts: sun8i: r40: bananapi-m2-ultra: Fix dcdc1 regulator
    
    [ Upstream commit 3658a2b7f3e16c7053eb8d70657b94bb62c5a0f4 ]
    
    DCDC1 regulator powers many different subsystems. While some of them can
    work at 3.0 V, some of them can not. For example, VCC-HDMI can only work
    between 3.24 V and 3.36 V. According to OS images provided by the board
    manufacturer this regulator should be set to 3.3 V.
    
    Set DCDC1 and DCDC1SW to 3.3 V in order to fix this.
    
    Fixes: da7ac948fa93 ("ARM: dts: sun8i: Add board dts file for Banana Pi M2 Ultra")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@siol.net>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://lore.kernel.org/r/20200824193649.978197-1-jernej.skrabec@siol.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46ac921611448e041eebb578b3b9f3c907279a44
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Aug 6 20:20:20 2020 +0200

    ARM: s3c24xx: fix mmc gpio lookup tables
    
    [ Upstream commit 3af4e8774b6d03683932b0961998e01355bccd74 ]
    
    The gpio controller names differ between s3c24xx and s3c64xx,
    and it seems that these all got the wrong names, using GPx instead
    of GPIOx.
    
    Fixes: d2951dfa070d ("mmc: s3cmci: Use the slot GPIO descriptor")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20200806182059.2431-3-krzk@kernel.org
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e118c1527ffe98a16412631cfeb031d4fa127923
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Wed Aug 5 11:36:50 2020 +0300

    ARM: at91: pm: of_node_put() after its usage
    
    [ Upstream commit e222f943519564978e082c152b4140a47e93392c ]
    
    Put node after it has been used.
    
    Fixes: 13f16017d3e3f ("ARM: at91: pm: Tie the USB clock mask to the pmc")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/1596616610-15460-4-git-send-email-claudiu.beznea@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c4c2f437cead6baa9e430fabf4d381528463b49
Author: Horia GeantÄ <horia.geanta@nxp.com>
Date:   Wed Jul 15 18:26:01 2020 +0300

    ARM: dts: imx6sl: fix rng node
    
    [ Upstream commit 82ffb35c2ce63ef8e0325f75eb48022abcf8edbe ]
    
    rng DT node was added without a compatible string.
    
    i.MX driver for RNGC (drivers/char/hw_random/imx-rngc.c) also claims
    support for RNGB, and is currently used for i.MX25.
    
    Let's use this driver also for RNGB block in i.MX6SL.
    
    Fixes: e29fe21cff96 ("ARM: dts: add device tree source for imx6sl SoC")
    Signed-off-by: Horia GeantÄ <horia.geanta@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1430c876984cdd73fa98e247057a7f1d57ad56c
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Mon Aug 3 16:18:50 2020 +0200

    arm64: dts: meson: vim3: correct led polarity
    
    [ Upstream commit 1f9d87d08e4a2299e86f8a1600aedf87ecd3b636 ]
    
    The LEDs on the vim3 are active when the gpio is high, not low.
    
    Fixes: c6d29c66e582 ("arm64: dts: meson-g12b-khadas-vim3: add initial device-tree")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Link: https://lore.kernel.org/r/20200803141850.172704-1-jbrunet@baylibre.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6dbdc81b26252a3dd55d5b211c12450b9e0f0491
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Wed Oct 21 12:55:52 2020 +0200

    netfilter: nf_fwd_netdev: clear timestamp in forwarding path
    
    [ Upstream commit c77761c8a59405cb7aa44188b30fffe13fbdd02d ]
    
    Similar to 7980d2eabde8 ("ipvs: clear skb->tstamp in forwarding path").
    fq qdisc requires tstamp to be cleared in forwarding path.
    
    Fixes: 8203e2d844d3 ("net: clear skb->tstamp in forwarding paths")
    Fixes: fb420d5d91c1 ("tcp/fq: move back to CLOCK_MONOTONIC")
    Fixes: 80b14dee2bea ("net: Add a new socket option for a future transmit time.")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f3839075a5f8dcf116c1abe35b36b018ac62445
Author: TimothÃ©e COCAULT <timothee.cocault@orange.com>
Date:   Wed Oct 14 12:36:15 2020 +0000

    netfilter: ebtables: Fixes dropping of small packets in bridge nat
    
    [ Upstream commit 63137bc5882a1882c553d389fdeeeace86ee1741 ]
    
    Fixes an error causing small packets to get dropped. skb_ensure_writable
    expects the second parameter to be a length in the ethernet payload.=20
    If we want to write the ethernet header (src, dst), we should pass 0.
    Otherwise, packets with small payloads (< ETH_ALEN) will get dropped.
    
    Fixes: c1a831167901 ("netfilter: bridge: convert skb_make_writable to skb_ensure_writable")
    Signed-off-by: TimothÃ©e COCAULT <timothee.cocault@orange.com>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d1eec59628c9b0dafd951791b209fef10fd9975
Author: Francesco Ruggeri <fruggeri@arista.com>
Date:   Wed Oct 7 12:32:52 2020 -0700

    netfilter: conntrack: connection timeout after re-register
    
    [ Upstream commit 4f25434bccc28cf8a07876ef5142a2869a674353 ]
    
    If the first packet conntrack sees after a re-register is an outgoing
    keepalive packet with no data (SEG.SEQ = SND.NXT-1), td_end is set to
    SND.NXT-1.
    When the peer correctly acknowledges SND.NXT, tcp_in_window fails
    check III (Upper bound for valid (s)ack: sack <= receiver.td_end) and
    returns false, which cascades into nf_conntrack_in setting
    skb->_nfct = 0 and in later conntrack iptables rules not matching.
    In cases where iptables are dropping packets that do not match
    conntrack rules this can result in idle tcp connections to time out.
    
    v2: adjust td_end when getting the reply rather than when sending out
        the keepalive packet.
    
    Fixes: f94e63801ab2 ("netfilter: conntrack: reset tcp maxwin on re-register")
    Signed-off-by: Francesco Ruggeri <fruggeri@arista.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6b7b40aced7079026faef449659670a18f7f630
Author: Jing Xiangfeng <jingxiangfeng@huawei.com>
Date:   Fri Sep 25 14:24:23 2020 +0800

    scsi: bfa: Fix error return in bfad_pci_init()
    
    [ Upstream commit f0f6c3a4fcb80fcbcce4ff6739996dd98c228afd ]
    
    Fix to return error code -ENODEV from the error handling case instead of 0.
    
    Link: https://lore.kernel.org/r/20200925062423.161504-1-jingxiangfeng@huawei.com
    Fixes: 11ea3824140c ("scsi: bfa: fix calls to dma_set_mask_and_coherent()")
    Signed-off-by: Jing Xiangfeng <jingxiangfeng@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48df327e4b04581086e72aa78fb5ce4a94260e9c
Author: Robert Hoo <robert.hu@linux.intel.com>
Date:   Fri Aug 28 10:23:42 2020 +0800

    KVM: x86: emulating RDPID failure shall return #UD rather than #GP
    
    [ Upstream commit a9e2e0ae686094571378c72d8146b5a1a92d0652 ]
    
    Per Intel's SDM, RDPID takes a #UD if it is unsupported, which is more or
    less what KVM is emulating when MSR_TSC_AUX is not available.  In fact,
    there are no scenarios in which RDPID is supposed to #GP.
    
    Fixes: fb6d4d340e ("KVM: x86: emulate RDPID")
    Signed-off-by: Robert Hoo <robert.hu@linux.intel.com>
    Message-Id: <1598581422-76264-1-git-send-email-robert.hu@linux.intel.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad87f31648ab32dd417319b2f34e6d9ebffe4b6c
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Tue Sep 15 17:56:40 2020 -0700

    Input: sun4i-ps2 - fix handling of platform_get_irq() error
    
    [ Upstream commit cafb3abea6136e59ea534004e5773361e196bb94 ]
    
    platform_get_irq() returns -ERRNO on error.  In such case comparison
    to 0 would pass the check.
    
    Fixes: e443631d20f5 ("Input: serio - add support for Alwinner A10/A20 PS/2 controller")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Link: https://lore.kernel.org/r/20200828145744.3636-4-krzk@kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb3b77359a267bff7796a1022751195e3066501e
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Tue Sep 15 17:56:19 2020 -0700

    Input: twl4030_keypad - fix handling of platform_get_irq() error
    
    [ Upstream commit c277e1f0dc3c7d7b5b028e20dd414df241642036 ]
    
    platform_get_irq() returns -ERRNO on error.  In such case casting to
    unsigned and comparing to 0 would pass the check.
    
    Fixes: 7abf38d6d13c ("Input: twl4030-keypad - add device tree support")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20200828145744.3636-3-krzk@kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f967303cbdd84f6746dad20c36bba679aa07739
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Tue Sep 15 17:52:15 2020 -0700

    Input: omap4-keypad - fix handling of platform_get_irq() error
    
    [ Upstream commit 4738dd1992fa13acfbbd71800c71c612f466fa44 ]
    
    platform_get_irq() returns -ERRNO on error.  In such case comparison
    to 0 would pass the check.
    
    Fixes: f3a1ba60dbdb ("Input: omap4-keypad - use platform device helpers")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20200828145744.3636-2-krzk@kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2106d1cbe1c244aa4f3795fb28c4554e1054792f
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Tue Sep 15 17:51:05 2020 -0700

    Input: ep93xx_keypad - fix handling of platform_get_irq() error
    
    [ Upstream commit 7d50f6656dacf085a00beeedbc48b19a37d17881 ]
    
    platform_get_irq() returns -ERRNO on error.  In such case comparison
    to 0 would pass the check.
    
    Fixes: 60214f058f44 ("Input: ep93xx_keypad - update driver to new core support")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20200828145744.3636-1-krzk@kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b205eef763884254fa072c2b0889369fcb92b1d8
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Wed Sep 16 10:26:09 2020 -0700

    Input: stmfts - fix a & vs && typo
    
    [ Upstream commit d04afe14b23651e7a8bc89727a759e982a8458e4 ]
    
    In stmfts_sysfs_hover_enable_write(), we should check value and
    sdata->hover_enabled is all true.
    
    Fixes: 78bcac7b2ae1 ("Input: add support for the STMicroelectronics FingerTip touchscreen")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Link: https://lore.kernel.org/r/20200916141941.16684-1-yuehaibing@huawei.com
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81e5e2c268e90e2e4336896609fee01c46d1b0a8
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Sep 14 10:17:01 2020 -0700

    Input: imx6ul_tsc - clean up some errors in imx6ul_tsc_resume()
    
    [ Upstream commit 30df23c5ecdfb8da5b0bc17ceef67eff9e1b0957 ]
    
    If imx6ul_tsc_init() fails then we need to clean up the clocks.
    
    I reversed the "if (input_dev->users) {" condition to make the code a
    bit simpler.
    
    Fixes: 6cc527b05847 ("Input: imx6ul_tsc - propagate the errors")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20200905124942.GC183976@mwanda
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6498597aeb4c857d5ad97ccc2af848330cbd90d9
Author: Martijn de Gouw <martijn.de.gouw@prodrive-technologies.com>
Date:   Mon Oct 19 13:42:27 2020 +0200

    SUNRPC: fix copying of multiple pages in gss_read_proxy_verf()
    
    [ Upstream commit d48c8124749c9a5081fe68680f83605e272c984b ]
    
    When the passed token is longer than 4032 bytes, the remaining part
    of the token must be copied from the rqstp->rq_arg.pages. But the
    copy must make sure it happens in a consecutive way.
    
    With the existing code, the first memcpy copies 'length' bytes from
    argv->iobase, but since the header is in front, this never fills the
    whole first page of in_token->pages.
    
    The mecpy in the loop copies the following bytes, but starts writing at
    the next page of in_token->pages.  This leaves the last bytes of page 0
    unwritten.
    
    Symptoms were that users with many groups were not able to access NFS
    exports, when using Active Directory as the KDC.
    
    Signed-off-by: Martijn de Gouw <martijn.de.gouw@prodrive-technologies.com>
    Fixes: 5866efa8cbfb "SUNRPC: Fix svcauth_gss_proxy_init()"
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e412625f38a4d856c6ae939e4cab19f6aa771c19
Author: Abel Vesa <abel.vesa@nxp.com>
Date:   Thu Oct 15 12:25:44 2020 +0300

    clk: imx8mq: Fix usdhc parents order
    
    [ Upstream commit b159c63d82ff8ffddc6c6f0eb881b113b36ecad7 ]
    
    According to the latest RM (see Table 5-1. Clock Root Table),
    both usdhc root clocks have the parent order as follows:
    
    000 - 25M_REF_CLK
    001 - SYSTEM_PLL1_DIV2
    010 - SYSTEM_PLL1_CLK
    011 - SYSTEM_PLL2_DIV2
    100 - SYSTEM_PLL3_CLK
    101 - SYSTEM_PLL1_DIV3
    110 - AUDIO_PLL2_CLK
    111 - SYSTEM_PLL1_DIV8
    
    So the audio_pll2_out and sys3_pll_out have to be swapped.
    
    Fixes: b80522040cd3 ("clk: imx: Add clock driver for i.MX8MQ CCM")
    Signed-off-by: Abel Vesa <abel.vesa@nxp.com>
    Reported-by: Cosmin Stefan Stoica <cosmin.stoica@nxp.com>
    Link: https://lore.kernel.org/r/1602753944-30757-1-git-send-email-abel.vesa@nxp.com
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4035b3d64b650543c11daee6b9b9dd13fbc5bd4
Author: Xiaoyang Xu <xuxiaoyang2@huawei.com>
Date:   Fri Oct 16 17:35:58 2020 +0800

    vfio iommu type1: Fix memory leak in vfio_iommu_type1_pin_pages
    
    [ Upstream commit 2e6cfd496f5b57034cf2aec738799571b5a52124 ]
    
    pfn is not added to pfn_list when vfio_add_to_pfn_list fails.
    vfio_unpin_page_external will exit directly without calling
    vfio_iova_put_vfio_pfn.  This will lead to a memory leak.
    
    Fixes: a54eb55045ae ("vfio iommu type1: Add support for mediated devices")
    Signed-off-by: Xiaoyang Xu <xuxiaoyang2@huawei.com>
    [aw: simplified logic, add Fixes]
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f54d8a9e37b0a51d43e9572501558a0246cc5004
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Mon Oct 19 07:13:55 2020 -0600

    vfio/pci: Clear token on bypass registration failure
    
    [ Upstream commit 852b1beecb6ff9326f7ca4bc0fe69ae860ebdb9e ]
    
    The eventfd context is used as our irqbypass token, therefore if an
    eventfd is re-used, our token is the same.  The irqbypass code will
    return an -EBUSY in this case, but we'll still attempt to unregister
    the producer, where if that duplicate token still exists, results in
    removing the wrong object.  Clear the token of failed producers so
    that they harmlessly fall out when unregistered.
    
    Fixes: 6d7425f109d2 ("vfio: Register/unregister irq_bypass_producer")
    Reported-by: guomin chen <guomin_chen@sina.com>
    Tested-by: guomin chen <guomin_chen@sina.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2f616f3e333ad62f80495658a6a60ea5524ebab
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Thu Oct 1 15:21:48 2020 -0700

    ext4: limit entries returned when counting fsmap records
    
    [ Upstream commit af8c53c8bc087459b1aadd4c94805d8272358d79 ]
    
    If userspace asked fsmap to try to count the number of entries, we cannot
    return more than UINT_MAX entries because fmh_entries is u32.
    Therefore, stop counting if we hit this limit or else we will waste time
    to return truncated results.
    
    Fixes: 0c9ec4beecac ("ext4: support GETFSMAP ioctls")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Link: https://lore.kernel.org/r/20201001222148.GA49520@magnolia
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c27185e12e8c2317e5b1507fdf9c23a99d39c7a
Author: Dan Aloni <dan@kernelim.com>
Date:   Fri Oct 2 22:33:43 2020 +0300

    svcrdma: fix bounce buffers for unaligned offsets and multiple pages
    
    [ Upstream commit c327a310ec4d6ecbea13185ed56c11def441d9ab ]
    
    This was discovered using O_DIRECT at the client side, with small
    unaligned file offsets or IOs that span multiple file pages.
    
    Fixes: e248aa7be86 ("svcrdma: Remove max_sge check at connect time")
    Signed-off-by: Dan Aloni <dan@kernelim.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 120222811b2e9daf16ce8ed2c27b3a36821477ef
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Thu Sep 10 09:31:08 2020 -0700

    watchdog: sp5100: Fix definition of EFCH_PM_DECODEEN3
    
    [ Upstream commit 08c619b4923056b5dd2d5045757468c76ad0e3fe ]
    
    EFCH_PM_DECODEEN3 is supposed to access DECODEEN register bits 24..31,
    in other words the register at byte offset 3.
    
    Cc: Jan Kiszka <jan.kiszka@siemens.com>
    Fixes: 887d2ec51e34b ("watchdog: sp5100_tco: Add support for recent FCH versions")
    Tested-by: Jan Kiszka <jan.kiszka@siemens.com>
    Link: https://lore.kernel.org/r/20200910163109.235136-1-linux@roeck-us.net
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dbb9ef17777eba4e6c4121db45d89372c91bd21e
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Mon Aug 24 11:12:30 2020 +0800

    watchdog: Use put_device on error
    
    [ Upstream commit 937425d4cd3ae4e2882b41e332bbbab616bcf0ad ]
    
    We should use put_device() instead of freeing device
    directly after device_initialize().
    
    Fixes: cb36e29bb0e4b ("watchdog: initialize device before misc_register")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20200824031230.31050-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8bbb47d94afb5c1eb53031dfd370213164ee891
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Mon Aug 24 10:40:01 2020 +0800

    watchdog: Fix memleak in watchdog_cdev_register
    
    [ Upstream commit 5afb6d203d0293512aa2c6ae098274a2a4f6ed02 ]
    
    When watchdog_kworker is NULL, we should free wd_data
    before the function returns to prevent memleak.
    
    Fixes: 664a39236e718 ("watchdog: Introduce hardware maximum heartbeat in watchdog core")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20200824024001.25474-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a3ee7177f7216bd78b7b788b0be7908e8d05fff
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Sun Aug 9 18:11:58 2020 -0500

    clk: bcm2835: add missing release if devm_clk_hw_register fails
    
    [ Upstream commit f6c992ca7dd4f49042eec61f3fb426c94d901675 ]
    
    In the implementation of bcm2835_register_pll(), the allocated pll is
    leaked if devm_clk_hw_register() fails to register hw. Release pll if
    devm_clk_hw_register() fails.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Link: https://lore.kernel.org/r/20200809231202.15811-1-navid.emamdoost@gmail.com
    Fixes: 41691b8862e2 ("clk: bcm2835: Add support for programming the audio domain clocks")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c10e3c919a6901f1693a83c867724ce03510a4a8
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Tue Aug 25 09:59:10 2020 +0300

    clk: at91: clk-main: update key before writing AT91_CKGR_MOR
    
    [ Upstream commit 85d071e7f19a6a9abf30476b90b3819642568756 ]
    
    SAMA5D2 datasheet specifies on chapter 33.22.8 (PMC Clock Generator
    Main Oscillator Register) that writing any value other than
    0x37 on KEY field aborts the write operation. Use the key when
    selecting main clock parent.
    
    Fixes: 27cb1c2083373 ("clk: at91: rework main clk implementation")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Reviewed-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/1598338751-20607-3-git-send-email-claudiu.beznea@microchip.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ed7508e684eb0440826072115b71caecda585e3
Author: Daniel Jordan <daniel.m.jordan@oracle.com>
Date:   Thu Oct 8 13:32:20 2020 -0400

    module: statically initialize init section freeing data
    
    [ Upstream commit fdf09ab887829cd1b671e45d9549f8ec1ffda0fa ]
    
    Corentin hit the following workqueue warning when running with
    CRYPTO_MANAGER_EXTRA_TESTS:
    
      WARNING: CPU: 2 PID: 147 at kernel/workqueue.c:1473 __queue_work+0x3b8/0x3d0
      Modules linked in: ghash_generic
      CPU: 2 PID: 147 Comm: modprobe Not tainted
          5.6.0-rc1-next-20200214-00068-g166c9264f0b1-dirty #545
      Hardware name: Pine H64 model A (DT)
      pc : __queue_work+0x3b8/0x3d0
      Call trace:
       __queue_work+0x3b8/0x3d0
       queue_work_on+0x6c/0x90
       do_init_module+0x188/0x1f0
       load_module+0x1d00/0x22b0
    
    I wasn't able to reproduce on x86 or rpi 3b+.
    
    This is
    
      WARN_ON(!list_empty(&work->entry))
    
    from __queue_work(), and it happens because the init_free_wq work item
    isn't initialized in time for a crypto test that requests the gcm
    module.  Some crypto tests were recently moved earlier in boot as
    explained in commit c4741b230597 ("crypto: run initcalls for generic
    implementations earlier"), which went into mainline less than two weeks
    before the Fixes commit.
    
    Avoid the warning by statically initializing init_free_wq and the
    corresponding llist.
    
    Link: https://lore.kernel.org/lkml/20200217204803.GA13479@Red/
    Fixes: 1a7b7d922081 ("modules: Use vmalloc special flag")
    Reported-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Tested-on: sun50i-h6-pine-h64
    Tested-on: imx8mn-ddr4-evk
    Tested-on: sun50i-a64-bananapi-m64
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Daniel Jordan <daniel.m.jordan@oracle.com>
    Signed-off-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b213999028e6334692da43fc5cf6a350e9662438
Author: Hanks Chen <hanks.chen@mediatek.com>
Date:   Thu Jul 30 21:30:16 2020 +0800

    clk: mediatek: add UART0 clock support
    
    [ Upstream commit 804a892456b73604b7ecfb1b00a96a29f3d2aedf ]
    
    Add MT6779 UART0 clock support.
    
    Fixes: 710774e04861 ("clk: mediatek: Add MT6779 clock support")
    Signed-off-by: Wendell Lin <wendell.lin@mediatek.com>
    Signed-off-by: Hanks Chen <hanks.chen@mediatek.com>
    Reviewed-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56e68e2cd8fe8c0347aad6e043e0fc583959292f
Author: Stephen Boyd <sboyd@kernel.org>
Date:   Wed Sep 23 17:41:44 2020 -0700

    clk: rockchip: Initialize hw to error to avoid undefined behavior
    
    [ Upstream commit b608f11d49ec671739604cc763248d8e8fadbbeb ]
    
    We can get down to this return value from ERR_CAST() without
    initializing hw. Set it to -ENOMEM so that we always return something
    sane.
    
    Fixes the following smatch warning:
    
    drivers/clk/rockchip/clk-half-divider.c:228 rockchip_clk_register_halfdiv() error: uninitialized symbol 'hw'.
    drivers/clk/rockchip/clk-half-divider.c:228 rockchip_clk_register_halfdiv() warn: passing zero to 'ERR_CAST'
    
    Cc: Elaine Zhang <zhangqing@rock-chips.com>
    Cc: Heiko Stuebner <heiko@sntech.de>
    Fixes: 956060a52795 ("clk: rockchip: add support for half divider")
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72407e5aa05800e60d1cae32b0b2a15841d1c09f
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Thu Aug 20 19:14:25 2020 +0200

    pwm: img: Fix null pointer access in probe
    
    [ Upstream commit b39c0615d0667b3a6f2f5c4bf99ffadf3b518bb1 ]
    
    dev_get_drvdata() is called in img_pwm_runtime_resume() before the
    driver data is set.
    When pm_runtime_enabled() returns false in img_pwm_probe() it calls
    img_pwm_runtime_resume() which results in a null pointer access.
    
    This patch fixes the problem by setting the driver data earlier in the
    img_pwm_probe() function.
    
    This crash was seen when booting the Imagination Technologies Creator
    Ci40 (Marduk) with kernel 5.4 in OpenWrt.
    
    Fixes: e690ae526216 ("pwm: img: Add runtime PM")
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Acked-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e5155fdd061880ff25f572ce37fd6ffe1e5e037
Author: Tero Kristo <t-kristo@ti.com>
Date:   Mon Sep 7 11:57:38 2020 +0300

    clk: keystone: sci-clk: fix parsing assigned-clock data during probe
    
    [ Upstream commit 2f05cced7307489faab873367fb20cd212e1d890 ]
    
    The DT clock probe loop incorrectly terminates after processing "clocks"
    only, fix this by re-starting the loop when all entries for current
    DT property have been parsed.
    
    Fixes: 8e48b33f9def ("clk: keystone: sci-clk: probe clocks from DT instead of firmware")
    Reported-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Link: https://lore.kernel.org/r/20200907085740.1083-2-t-kristo@ti.com
    Acked-by: Santosh Shilimkar <ssantosh@kernel.org>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b8882b53b0c8fa9b56e3ad8467c96ee27cbf9e2
Author: Konrad Dybcio <konradybcio@gmail.com>
Date:   Tue Sep 22 14:09:09 2020 +0200

    clk: qcom: gcc-sdm660: Fix wrong parent_map
    
    [ Upstream commit d46e5a39f9be9288f1ce2170c4c7f8098f4e7f68 ]
    
    This was likely overlooked while porting the driver upstream.
    
    Reported-by: Pavel Dubrova <pashadubrova@gmail.com>
    Signed-off-by: Konrad Dybcio <konradybcio@gmail.com>
    Link: https://lore.kernel.org/r/20200922120909.97203-1-konradybcio@gmail.com
    Fixes: f2a76a2955c0 ("clk: qcom: Add Global Clock controller (GCC) driver for SDM660")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fddcf515454e04622d96bb8adabb7e8f3a67ec06
Author: Matthew Rosato <mjrosato@linux.ibm.com>
Date:   Thu Sep 10 10:59:57 2020 -0400

    vfio/pci: Decouple PCI_COMMAND_MEMORY bit checks from is_virtfn
    
    [ Upstream commit 515ecd5368f1510152fa4f9b9ce55b66ac56c334 ]
    
    While it is true that devices with is_virtfn=1 will have a Memory Space
    Enable bit that is hard-wired to 0, this is not the only case where we
    see this behavior -- For example some bare-metal hypervisors lack
    Memory Space Enable bit emulation for devices not setting is_virtfn
    (s390). Fix this by instead checking for the newly-added
    no_command_memory bit which directly denotes the need for
    PCI_COMMAND_MEMORY emulation in vfio.
    
    Fixes: abafbc551fdd ("vfio-pci: Invalidate mmaps and block MMIO access on disabled memory")
    Signed-off-by: Matthew Rosato <mjrosato@linux.ibm.com>
    Reviewed-by: Niklas Schnelle <schnelle@linux.ibm.com>
    Reviewed-by: Pierre Morel <pmorel@linux.ibm.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42f16b3add6c3dde6751e5f8f7c2fab6bcc73250
Author: Matthew Rosato <mjrosato@linux.ibm.com>
Date:   Thu Sep 10 10:59:55 2020 -0400

    PCI/IOV: Mark VFs as not implementing PCI_COMMAND_MEMORY
    
    [ Upstream commit 12856e7acde4702b7c3238c15fcba86ff6aa507f ]
    
    For VFs, the Memory Space Enable bit in the Command Register is
    hard-wired to 0.
    
    Add a new bit to signify devices where the Command Register Memory
    Space Enable bit does not control the device's response to MMIO
    accesses.
    
    Fixes: abafbc551fdd ("vfio-pci: Invalidate mmaps and block MMIO access on disabled memory")
    Signed-off-by: Matthew Rosato <mjrosato@linux.ibm.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aafa4b4c38e86a55f345391974e1ca5619974ecb
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Sep 8 10:18:41 2020 +0300

    rpmsg: smd: Fix a kobj leak in in qcom_smd_parse_edge()
    
    [ Upstream commit e69ee0cf655e8e0c4a80f4319e36019b74f17639 ]
    
    We need to call of_node_put(node) on the error paths for this function.
    
    Fixes: 53e2822e56c7 ("rpmsg: Introduce Qualcomm SMD backend")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20200908071841.GA294938@mwanda
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 833f3c362f635647841e1c9d751d408902f87009
Author: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
Date:   Mon Aug 3 15:52:40 2020 +1200

    PCI: iproc: Set affinity mask on MSI interrupts
    
    [ Upstream commit eb7eacaa5b9e4f665bd08d416c8f88e63d2f123c ]
    
    The core interrupt code expects the irq_set_affinity call to update the
    effective affinity for the interrupt. This was not being done, so update
    iproc_msi_irq_set_affinity() to do so.
    
    Link: https://lore.kernel.org/r/20200803035241.7737-1-mark.tomlinson@alliedtelesis.co.nz
    Fixes: 3bc2b2348835 ("PCI: iproc: Add iProc PCIe MSI support")
    Signed-off-by: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Ray Jui <ray.jui@broadcom.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcb9394accb6751c25dadd2198da78ff674390fd
Author: Pali RohÃ¡r <pali@kernel.org>
Date:   Mon Sep 7 13:10:35 2020 +0200

    PCI: aardvark: Check for errors from pci_bridge_emul_init() call
    
    [ Upstream commit 7862a6134456c8b4f8c39e8c94aa97e5c2f7f2b7 ]
    
    Function pci_bridge_emul_init() may fail so correctly check for errors.
    
    Link: https://lore.kernel.org/r/20200907111038.5811-3-pali@kernel.org
    Fixes: 8a3ebd8de328 ("PCI: aardvark: Implement emulated root PCI bridge config space")
    Signed-off-by: Pali RohÃ¡r <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek BehÃºn <marek.behun@nic.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf65e6c51ac402e2fe33adf631b43b4b3ba8d46d
Author: Stefan Agner <stefan@agner.ch>
Date:   Fri Aug 28 17:52:05 2020 +0200

    clk: meson: g12a: mark fclk_div2 as critical
    
    [ Upstream commit 2c4e80e06790cb49ad2603855d30c5aac2209c47 ]
    
    On Amlogic Meson G12b platform, similar to fclk_div3, the fclk_div2
    seems to be necessary for the system to operate correctly as well.
    
    Typically, the clock also gets chosen by the eMMC peripheral. This
    probably masked the problem so far. However, when booting from a SD
    card the clock seems to get disabled which leads to a system freeze.
    
    Let's mark this clock as critical, fixing boot from SD card on G12b
    platforms.
    
    Fixes: 085a4ea93d54 ("clk: meson: g12a: add peripheral clock controller")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Tested-by: Anand Moon <linux.amoon@gmail.com>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Link: https://lore.kernel.org/r/577e0129e8ee93972d92f13187ff4e4286182f67.1598629915.git.stefan@agner.ch
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 423e65dcd59465d0235d011204da27e4f51e66f6
Author: Dirk Behme <dirk.behme@de.bosch.com>
Date:   Thu Aug 27 11:23:30 2020 +0200

    i2c: rcar: Auto select RESET_CONTROLLER
    
    [ Upstream commit 5b9bacf28a973a6b16510493416baeefa2c06289 ]
    
    The i2c-rcar driver utilizes the Generic Reset Controller kernel
    feature, so select the RESET_CONTROLLER option when the I2C_RCAR
    option is selected with a Gen3 SoC.
    
    Fixes: 2b16fd63059ab9 ("i2c: rcar: handle RXDMA HW behaviour on Gen3")
    Signed-off-by: Dirk Behme <dirk.behme@de.bosch.com>
    Signed-off-by: Andy Lowe <andy_lowe@mentor.com>
    [erosca: Add "if ARCH_RCAR_GEN3" per Wolfram's request]
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63bd88ba88650a34ba10006aa2722b1f699e34ad
Author: Jassi Brar <jaswinder.singh@linaro.org>
Date:   Fri Oct 16 12:20:56 2020 -0500

    mailbox: avoid timer start from callback
    
    [ Upstream commit c7dacf5b0f32957b24ef29df1207dc2cd8307743 ]
    
    If the txdone is done by polling, it is possible for msg_submit() to start
    the timer while txdone_hrtimer() callback is running. If the timer needs
    recheduling, it could already be enqueued by the time hrtimer_forward_now()
    is called, leading hrtimer to loudly complain.
    
    WARNING: CPU: 3 PID: 74 at kernel/time/hrtimer.c:932 hrtimer_forward+0xc4/0x110
    CPU: 3 PID: 74 Comm: kworker/u8:1 Not tainted 5.9.0-rc2-00236-gd3520067d01c-dirty #5
    Hardware name: Libre Computer AML-S805X-AC (DT)
    Workqueue: events_freezable_power_ thermal_zone_device_check
    pstate: 20000085 (nzCv daIf -PAN -UAO BTYPE=--)
    pc : hrtimer_forward+0xc4/0x110
    lr : txdone_hrtimer+0xf8/0x118
    [...]
    
    This can be fixed by not starting the timer from the callback path. Which
    requires the timer reloading as long as any message is queued on the
    channel, and not just when current tx is not done yet.
    
    Fixes: 0cc67945ea59 ("mailbox: switch to hrtimer for tx_complete polling")
    Reported-by: Da Xue <da@libre.computer>
    Reviewed-by: Sudeep Holla <sudeep.holla@arm.com>
    Tested-by: Sudeep Holla <sudeep.holla@arm.com>
    Acked-by: Jerome Brunet <jbrunet@baylibre.com>
    Tested-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe1936208e3f29441098134de3163be954a80fdd
Author: Jing Xiangfeng <jingxiangfeng@huawei.com>
Date:   Thu Oct 15 20:13:18 2020 -0700

    rapidio: fix the missed put_device() for rio_mport_add_riodev
    
    [ Upstream commit 85094c05eeb47d195a74a25366a2db066f1c9d47 ]
    
    rio_mport_add_riodev() misses to call put_device() when the device already
    exists.  Add the missed function call to fix it.
    
    Fixes: e8de370188d0 ("rapidio: add mport char device driver")
    Signed-off-by: Jing Xiangfeng <jingxiangfeng@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Matt Porter <mporter@kernel.crashing.org>
    Cc: Alexandre Bounine <alex.bou9@gmail.com>
    Cc: Gustavo A. R. Silva <gustavoars@kernel.org>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Madhuparna Bhowmik <madhuparnabhowmik10@gmail.com>
    Link: https://lkml.kernel.org/r/20200922072525.42330-1-jingxiangfeng@huawei.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bfab0711eb27e14a1afa77963f771dec0c4b915a
Author: Souptick Joarder <jrdr.linux@gmail.com>
Date:   Thu Oct 15 20:13:15 2020 -0700

    rapidio: fix error handling path
    
    [ Upstream commit fa63f083b3492b5ed5332b8d7c90b03b5ef24a1d ]
    
    rio_dma_transfer() attempts to clamp the return value of
    pin_user_pages_fast() to be >= 0.  However, the attempt fails because
    nr_pages is overridden a few lines later, and restored to the undesirable
    -ERRNO value.
    
    The return value is ultimately stored in nr_pages, which in turn is passed
    to unpin_user_pages(), which expects nr_pages >= 0, else, disaster.
    
    Fix this by fixing the nesting of the assignment to nr_pages: nr_pages
    should be clamped to zero if pin_user_pages_fast() returns -ERRNO, or set
    to the return value of pin_user_pages_fast(), otherwise.
    
    [jhubbard@nvidia.com: new changelog]
    
    Fixes: e8de370188d09 ("rapidio: add mport char device driver")
    Signed-off-by: Souptick Joarder <jrdr.linux@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: John Hubbard <jhubbard@nvidia.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Matt Porter <mporter@kernel.crashing.org>
    Cc: Alexandre Bounine <alex.bou9@gmail.com>
    Cc: Gustavo A. R. Silva <gustavoars@kernel.org>
    Cc: Madhuparna Bhowmik <madhuparnabhowmik10@gmail.com>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lkml.kernel.org/r/1600227737-20785-1-git-send-email-jrdr.linux@gmail.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5df8ff043c300d140f72e24c25f3b5ebfc5ff88
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Thu Oct 15 20:13:04 2020 -0700

    ramfs: fix nommu mmap with gaps in the page cache
    
    [ Upstream commit 50b7d85680086126d7bd91dae81d57d4cb1ab6b7 ]
    
    ramfs needs to check that pages are both physically contiguous and
    contiguous in the file.  If the page cache happens to have, eg, page A for
    index 0 of the file, no page for index 1, and page A+1 for index 2, then
    an mmap of the first two pages of the file will succeed when it should
    fail.
    
    Fixes: 642fb4d1f1dd ("[PATCH] NOMMU: Provide shared-writable mmap support on ramfs")
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: David Howells <dhowells@redhat.com>
    Link: https://lkml.kernel.org/r/20200914122239.GO6583@casper.infradead.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 410f50b41c1450389c26d57e888055917d2b2e1d
Author: Tobias Jordan <kernel@cdqe.de>
Date:   Thu Oct 15 20:11:38 2020 -0700

    lib/crc32.c: fix trivial typo in preprocessor condition
    
    [ Upstream commit 904542dc56524f921a6bab0639ff6249c01e775f ]
    
    Whether crc32_be needs a lookup table is chosen based on CRC_LE_BITS.
    Obviously, the _be function should be governed by the _BE_ define.
    
    This probably never pops up as it's hard to come up with a configuration
    where CRC_BE_BITS isn't the same as CRC_LE_BITS and as nobody is using
    bitwise CRC anyway.
    
    Fixes: 46c5801eaf86 ("crc32: bolt on crc32c")
    Signed-off-by: Tobias Jordan <kernel@cdqe.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Krzysztof Kozlowski <krzk@kernel.org>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Link: https://lkml.kernel.org/r/20200923182122.GA3338@agrajag.zerfleddert.de
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3a45516c70e6ec87e9631ba41048e001713d7c8
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Thu Oct 15 20:05:29 2020 -0700

    mm/page_owner: change split_page_owner to take a count
    
    [ Upstream commit 8fb156c9ee2db94f7127c930c89917634a1a9f56 ]
    
    The implementation of split_page_owner() prefers a count rather than the
    old order of the page.  When we support a variable size THP, we won't
    have the order at this point, but we will have the number of pages.
    So change the interface to what the caller and callee would prefer.
    
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: SeongJae Park <sjpark@amazon.de>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Huang Ying <ying.huang@intel.com>
    Link: https://lkml.kernel.org/r/20200908195539.25896-4-willy@infradead.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06727f797f457d6cb409326107203c415d361912
Author: Bob Pearson <rpearsonhpe@gmail.com>
Date:   Tue Oct 13 13:42:37 2020 -0500

    RDMA/rxe: Handle skb_clone() failure in rxe_recv.c
    
    [ Upstream commit 71abf20b28ff87fee6951ec2218d5ce7969c4e87 ]
    
    If skb_clone() is unable to allocate memory for a new sk_buff this is not
    detected by the current code.
    
    Check for a NULL return and continue. This is similar to other errors in
    this loop over QPs attached to the multicast address and consistent with
    the unreliable UD transport.
    
    Fixes: e7ec96fc7932f ("RDMA/rxe: Fix skb lifetime in rxe_rcv_mcast_pkt()")
    Addresses-Coverity-ID: 1497804: Null pointer dereferences (NULL_RETURNS)
    Link: https://lore.kernel.org/r/20201013184236.5231-1-rpearson@hpe.com
    Signed-off-by: Bob Pearson <rpearson@hpe.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6fa4d484bada960568b3cbe5505b0d2bf738495b
Author: Jamie Iles <jamie@nuviainc.com>
Date:   Mon Oct 12 14:09:48 2020 +0100

    f2fs: wait for sysfs kobject removal before freeing f2fs_sb_info
    
    [ Upstream commit ae284d87abade58c8db7760c808f311ef1ce693c ]
    
    syzkaller found that with CONFIG_DEBUG_KOBJECT_RELEASE=y, unmounting an
    f2fs filesystem could result in the following splat:
    
      kobject: 'loop5' ((____ptrval____)): kobject_release, parent 0000000000000000 (delayed 250)
      kobject: 'f2fs_xattr_entry-7:5' ((____ptrval____)): kobject_release, parent 0000000000000000 (delayed 750)
      ------------[ cut here ]------------
      ODEBUG: free active (active state 0) object type: timer_list hint: delayed_work_timer_fn+0x0/0x98
      WARNING: CPU: 0 PID: 699 at lib/debugobjects.c:485 debug_print_object+0x180/0x240
      Kernel panic - not syncing: panic_on_warn set ...
      CPU: 0 PID: 699 Comm: syz-executor.5 Tainted: G S                5.9.0-rc8+ #101
      Hardware name: linux,dummy-virt (DT)
      Call trace:
       dump_backtrace+0x0/0x4d8
       show_stack+0x34/0x48
       dump_stack+0x174/0x1f8
       panic+0x360/0x7a0
       __warn+0x244/0x2ec
       report_bug+0x240/0x398
       bug_handler+0x50/0xc0
       call_break_hook+0x160/0x1d8
       brk_handler+0x30/0xc0
       do_debug_exception+0x184/0x340
       el1_dbg+0x48/0xb0
       el1_sync_handler+0x170/0x1c8
       el1_sync+0x80/0x100
       debug_print_object+0x180/0x240
       debug_check_no_obj_freed+0x200/0x430
       slab_free_freelist_hook+0x190/0x210
       kfree+0x13c/0x460
       f2fs_put_super+0x624/0xa58
       generic_shutdown_super+0x120/0x300
       kill_block_super+0x94/0xf8
       kill_f2fs_super+0x244/0x308
       deactivate_locked_super+0x104/0x150
       deactivate_super+0x118/0x148
       cleanup_mnt+0x27c/0x3c0
       __cleanup_mnt+0x28/0x38
       task_work_run+0x10c/0x248
       do_notify_resume+0x9d4/0x1188
       work_pending+0x8/0x34c
    
    Like the error handling for f2fs_register_sysfs(), we need to wait for
    the kobject to be destroyed before returning to prevent a potential
    use-after-free.
    
    Fixes: bf9e697ecd42 ("f2fs: expose features to sysfs entry")
    Cc: Jaegeuk Kim <jaegeuk@kernel.org>
    Cc: Chao Yu <chao@kernel.org>
    Signed-off-by: Jamie Iles <jamie@nuviainc.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f08ae0c461980409bcb048d0e71ede12c64bc048
Author: Oliver O'Halloran <oohall@gmail.com>
Date:   Wed Oct 14 13:47:11 2020 +1100

    selftests/powerpc: Fix eeh-basic.sh exit codes
    
    [ Upstream commit 996f9e0f93f16211945c8d5f18f296a88cb32f91 ]
    
    The kselftests test running infrastructure expects tests to finish with an
    exit code of 4 if the test decided it should be skipped. Currently
    eeh-basic.sh exits with the number of devices that failed to recover, so if
    four devices didn't recover we'll report a skip instead of a fail.
    
    Fix this by checking if the return code is non-zero and report success
    and failure by returning 0 or 1 respectively. For the cases where should
    actually skip return 4.
    
    Fixes: 85d86c8aa52e ("selftests/powerpc: Add basic EEH selftest")
    Signed-off-by: Oliver O'Halloran <oohall@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20201014024711.1138386-1-oohall@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 180cf2e5f722e7125516f51803086394334cda4b
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Aug 27 09:31:28 2020 +0200

    maiblox: mediatek: Fix handling of platform_get_irq() error
    
    [ Upstream commit 558e4c36ec9f2722af4fe8ef84dc812bcdb5c43a ]
    
    platform_get_irq() returns -ERRNO on error.  In such case casting to u32
    and comparing to 0 would pass the check.
    
    Fixes: 623a6143a845 ("mailbox: mediatek: Add Mediatek CMDQ driver")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7f0b9ab8b7d49dd28aece9ee598f1faada34380
Author: Bob Pearson <rpearsonhpe@gmail.com>
Date:   Thu Oct 8 15:36:52 2020 -0500

    RDMA/rxe: Fix skb lifetime in rxe_rcv_mcast_pkt()
    
    [ Upstream commit e7ec96fc7932f48a6d6cdd05bf82004a1a04285b ]
    
    The changes referenced below replaced sbk_clone)_ by taking additional
    references, passing the skb along and then freeing the skb. This
    deleted the packets before they could be processed and additionally
    passed bad data in each packet. Since pkt is stored in skb->cb
    changing pkt->qp changed it for all the packets.
    
    Replace skb_get() by sbk_clone() in rxe_rcv_mcast_pkt() for cases where
    multiple QPs are receiving multicast packets on the same address.
    
    Delete kfree_skb() because the packets need to live until they have been
    processed by each QP. They are freed later.
    
    Fixes: 86af61764151 ("IB/rxe: remove unnecessary skb_clone")
    Fixes: fe896ceb5772 ("IB/rxe: replace refcount_inc with skb_get")
    Link: https://lore.kernel.org/r/20201008203651.256958-1-rpearson@hpe.com
    Signed-off-by: Bob Pearson <rpearson@hpe.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7efb373881f7c1a699f856cce7de51b6e859c92b
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Oct 8 10:52:04 2020 +0100

    IB/rdmavt: Fix sizeof mismatch
    
    [ Upstream commit 8e71f694e0c819db39af2336f16eb9689f1ae53f ]
    
    An incorrect sizeof is being used, struct rvt_ibport ** is not correct, it
    should be struct rvt_ibport *. Note that since ** is the same size as
    * this is not causing any issues.  Improve this fix by using
    sizeof(*rdi->ports) as this allows us to not even reference the type
    of the pointer.  Also remove line breaks as the entire statement can
    fit on one line.
    
    Link: https://lore.kernel.org/r/20201008095204.82683-1-colin.king@canonical.com
    Addresses-Coverity: ("Sizeof not portable (SIZEOF_MISMATCH)")
    Fixes: ff6acd69518e ("IB/rdmavt: Add device structure allocation")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Ira Weiny <ira.weiny@intel.com>
    Acked-by: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc2cba6b2d5a1ea22aa078c6c3402c3e3b3c16f5
Author: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
Date:   Tue Sep 22 13:32:54 2020 +0530

    cpufreq: powernv: Fix frame-size-overflow in powernv_cpufreq_reboot_notifier
    
    [ Upstream commit a2d0230b91f7e23ceb5d8fb6a9799f30517ec33a ]
    
    The patch avoids allocating cpufreq_policy on stack hence fixing frame
    size overflow in 'powernv_cpufreq_reboot_notifier':
    
      drivers/cpufreq/powernv-cpufreq.c: In function powernv_cpufreq_reboot_notifier:
      drivers/cpufreq/powernv-cpufreq.c:906:1: error: the frame size of 2064 bytes is larger than 2048 bytes
    
    Fixes: cf30af76 ("cpufreq: powernv: Set the cpus to nominal frequency during reboot/kexec")
    Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Reviewed-by: Daniel Axtens <dja@axtens.net>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200922080254.41497-1-srikar@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56c30ffe5fcdcd87dcde8dd59f4a907198cc7e4f
Author: Jing Xiangfeng <jingxiangfeng@huawei.com>
Date:   Fri Sep 11 11:33:50 2020 +0800

    i3c: master: Fix error return in cdns_i3c_master_probe()
    
    [ Upstream commit abea14bfdebbe9bd02f2ad24a1f3a878ed21c8f0 ]
    
    Fix to return negative error code -ENOMEM from the error handling
    case instead of 0.
    
    Fixes: 603f2bee2c54 ("i3c: master: Add driver for Cadence IP")
    Signed-off-by: Jing Xiangfeng <jingxiangfeng@huawei.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@collabora.com>
    Link: https://lore.kernel.org/linux-i3c/20200911033350.23904-1-jingxiangfeng@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebe1a014d7ed81f80e5224cb6c1539bf8faccb2c
Author: Kajol Jain <kjain@linux.ibm.com>
Date:   Sat Oct 3 13:19:39 2020 +0530

    powerpc/perf/hv-gpci: Fix starting index value
    
    [ Upstream commit 0f9866f7e85765bbda86666df56c92f377c3bc10 ]
    
    Commit 9e9f60108423f ("powerpc/perf/{hv-gpci, hv-common}: generate
    requests with counters annotated") adds a framework for defining
    gpci counters.
    In this patch, they adds starting_index value as '0xffffffffffffffff'.
    which is wrong as starting_index is of size 32 bits.
    
    Because of this, incase we try to run hv-gpci event we get error.
    
    In power9 machine:
    
    command#: perf stat -e hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
              -C 0 -I 1000
    event syntax error: '..bie_count_and_time_tlbie_instructions_issued/'
                                      \___ value too big for format, maximum is 4294967295
    
    This patch fix this issue and changes starting_index value to '0xffffffff'
    
    After this patch:
    
    command#: perf stat -e hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/ -C 0 -I 1000
         1.000085786              1,024      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
         2.000287818              1,024      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
         2.439113909             17,408      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
    
    Fixes: 9e9f60108423 ("powerpc/perf/{hv-gpci, hv-common}: generate requests with counters annotated")
    Signed-off-by: Kajol Jain <kjain@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20201003074943.338618-1-kjain@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 271e53005a260edab7a0784c2844fc01f0c8b09e
Author: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
Date:   Mon Sep 21 03:10:04 2020 -0400

    powerpc/perf: Exclude pmc5/6 from the irrelevant PMU group constraints
    
    [ Upstream commit 3b6c3adbb2fa42749c3d38cfc4d4d0b7e096bb7b ]
    
    PMU counter support functions enforces event constraints for group of
    events to check if all events in a group can be monitored. Incase of
    event codes using PMC5 and PMC6 ( 500fa and 600f4 respectively ), not
    all constraints are applicable, say the threshold or sample bits. But
    current code includes pmc5 and pmc6 in some group constraints (like
    IC_DC Qualifier bits) which is actually not applicable and hence
    results in those events not getting counted when scheduled along with
    group of other events. Patch fixes this by excluding PMC5/6 from
    constraints which are not relevant for it.
    
    Fixes: 7ffd948 ("powerpc/perf: factor out power8 pmu functions")
    Signed-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
    Reviewed-by: Madhavan Srinivasan <maddy@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1600672204-1610-1-git-send-email-atrajeev@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc1d4c658b9c123e31054fffcbc0b23566694b1a
Author: Kamal Heib <kamalheib1@gmail.com>
Date:   Sun Oct 4 16:29:48 2020 +0300

    RDMA/ipoib: Set rtnl_link_ops for ipoib interfaces
    
    [ Upstream commit 5ce2dced8e95e76ff7439863a118a053a7fc6f91 ]
    
    Report the "ipoib pkey", "mode" and "umcast" netlink attributes for every
    IPoiB interface type, not just children created with 'ip link add'.
    
    After setting the rtnl_link_ops for the parent interface, implement the
    dellink() callback to block users from trying to remove it.
    
    Fixes: 862096a8bbf8 ("IB/ipoib: Add more rtnl_link_ops callbacks")
    Link: https://lore.kernel.org/r/20201004132948.26669-1-kamalheib1@gmail.com
    Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3a1c7b426b9ab19309249adbc4b96baa2e0a107
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Sep 13 13:29:28 2020 +0300

    overflow: Include header file with SIZE_MAX declaration
    
    [ Upstream commit a4947e84f23474803b62a2759b5808147e4e15f9 ]
    
    The various array_size functions use SIZE_MAX define, but missed limits.h
    causes to failure to compile code that needs overflow.h.
    
     In file included from drivers/infiniband/core/uverbs_std_types_device.c:6:
     ./include/linux/overflow.h: In function 'array_size':
     ./include/linux/overflow.h:258:10: error: 'SIZE_MAX' undeclared (first use in this function)
       258 |   return SIZE_MAX;
           |          ^~~~~~~~
    
    Fixes: 610b15c50e86 ("overflow.h: Add allocation size calculation helpers")
    Link: https://lore.kernel.org/r/20200913102928.134985-1-leon@kernel.org
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de47278648aa72502feb7c5e9e35170cc8e41988
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Wed Sep 9 15:17:08 2020 +0100

    kdb: Fix pager search for multi-line strings
    
    [ Upstream commit d081a6e353168f15e63eb9e9334757f20343319f ]
    
    Currently using forward search doesn't handle multi-line strings correctly.
    The search routine replaces line breaks with \0 during the search and, for
    regular searches ("help | grep Common\n"), there is code after the line
    has been discarded or printed to replace the break character.
    
    However during a pager search ("help\n" followed by "/Common\n") when the
    string is matched we will immediately return to normal output and the code
    that should restore the \n becomes unreachable. Fix this by restoring the
    replaced character when we disable the search mode and update the comment
    accordingly.
    
    Fixes: fb6daa7520f9d ("kdb: Provide forward search at more prompt")
    Link: https://lore.kernel.org/r/20200909141708.338273-1-daniel.thompson@linaro.org
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 626e2200f80bf364aa67ac55739e958aa3f363cd
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Thu Aug 20 18:51:20 2020 +0200

    mtd: spinand: gigadevice: Add QE Bit
    
    [ Upstream commit aea7687e77bebce5b67fab9d03347bd8df7933c7 ]
    
    The following GigaDevice chips have the QE BIT in the feature flags, I
    checked the datasheets, but did not try this.
    * GD5F1GQ4xExxG
    * GD5F1GQ4xFxxG
    * GD5F1GQ4UAYIG
    * GD5F4GQ4UAYIG
    
    The Quad operations like 0xEB mention that the QE bit has to be set.
    
    Fixes: c93c613214ac ("mtd: spinand: add support for GigaDevice GD5FxGQ4xA")
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Tested-by: Chuanhong Guo <gch981213@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200820165121.3192-3-hauke@hauke-m.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8999f59944e31e36b5ee4013fe95ab53e66ab036
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Thu Aug 20 18:51:19 2020 +0200

    mtd: spinand: gigadevice: Only one dummy byte in QUADIO
    
    [ Upstream commit 6387ad9caf8f09747a8569e5876086b72ee9382c ]
    
    The datasheet only lists one dummy byte in the 0xEH operation for the
    following chips:
    * GD5F1GQ4xExxG
    * GD5F1GQ4xFxxG
    * GD5F1GQ4UAYIG
    * GD5F4GQ4UAYIG
    
    Fixes: c93c613214ac ("mtd: spinand: add support for GigaDevice GD5FxGQ4xA")
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Tested-by: Chuanhong Guo <gch981213@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200820165121.3192-2-hauke@hauke-m.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2bb74bc921e0867bd2e9b7d9fe8ce4236043f53b
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Thu Aug 6 10:26:34 2020 +0300

    mtd: rawnand: vf610: disable clk on error handling path in probe
    
    [ Upstream commit cb7dc3178a9862614b1e7567d77f4679f027a074 ]
    
    vf610_nfc_probe() does not invoke clk_disable_unprepare() on one error
    handling path. The patch fixes that.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: 6f0ce4dfc5a3 ("mtd: rawnand: vf610: Avoid a potential NULL pointer dereference")
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200806072634.23528-1-novikov@ispras.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e3782b1fae1ea154a1599206b5b276780d3302f
Author: Weihang Li <liweihang@huawei.com>
Date:   Sat Sep 19 18:03:22 2020 +0800

    RDMA/hns: Fix missing sq_sig_type when querying QP
    
    [ Upstream commit 05df49279f8926178ecb3ce88e61b63104cd6293 ]
    
    The sq_sig_type field should be filled when querying QP, or the users may
    get a wrong value.
    
    Fixes: 926a01dc000d ("RDMA/hns: Add QP operations support for hip08 SoC")
    Link: https://lore.kernel.org/r/1600509802-44382-9-git-send-email-liweihang@huawei.com
    Signed-off-by: Weihang Li <liweihang@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eff57fbc2377821fefd17db953978c604187c7a2
Author: Wenpeng Liang <liangwenpeng@huawei.com>
Date:   Sat Sep 19 18:03:20 2020 +0800

    RDMA/hns: Fix the wrong value of rnr_retry when querying qp
    
    [ Upstream commit 99fcf82521d91468ee6115a3c253aa032dc63cbc ]
    
    The rnr_retry returned to the user is not correct, it should be got from
    another fields in QPC.
    
    Fixes: bfe860351e31 ("RDMA/hns: Fix cast from or to restricted __le32 for driver")
    Link: https://lore.kernel.org/r/1600509802-44382-7-git-send-email-liweihang@huawei.com
    Signed-off-by: Wenpeng Liang <liangwenpeng@huawei.com>
    Signed-off-by: Weihang Li <liweihang@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e583b2948aeb65338dd7e14e87c6d77ad7bf982
Author: Jin Yao <yao.jin@linux.intel.com>
Date:   Tue Sep 22 09:50:04 2020 +0800

    perf stat: Skip duration_time in setup_system_wide
    
    [ Upstream commit 002a3d690f95804bdef6b70b26154103518e13d9 ]
    
    Some metrics (such as DRAM_BW_Use) consists of uncore events and
    duration_time. For uncore events, counter->core.system_wide is true. But
    for duration_time, counter->core.system_wide is false so
    target.system_wide is set to false.
    
    Then 'enable_on_exec' is set in perf_event_attr of uncore event.  Kernel
    will return error when trying to open the uncore event.
    
    This patch skips the duration_time in setup_system_wide then
    target.system_wide will be set to true for the evlist of uncore events +
    duration_time.
    
    Before (tested on skylake desktop):
    
      # perf stat -M DRAM_BW_Use -- sleep 1
      Error:
      The sys_perf_event_open() syscall returned with 22 (Invalid argument) for event (arb/event=0x84,umask=0x1/).
      /bin/dmesg | grep -i perf may provide additional information.
    
    After:
    
      # perf stat -M DRAM_BW_Use -- sleep 1
    
       Performance counter stats for 'system wide':
    
                    169      arb/event=0x84,umask=0x1/ #     0.00 DRAM_BW_Use
                 40,427      arb/event=0x81,umask=0x1/
          1,000,902,197 ns   duration_time
    
            1.000902197 seconds time elapsed
    
    Fixes: e3ba76deef23064f ("perf tools: Force uncore events to system wide monitoring")
    Signed-off-by: Jin Yao <yao.jin@linux.intel.com>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jin Yao <yao.jin@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/20200922015004.30114-1-yao.jin@linux.intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b79dd191680ff4a3f79a0cca5fd58009020a6b3d
Author: Sindhu, Devale <sindhu.devale@intel.com>
Date:   Wed Sep 16 08:18:12 2020 -0500

    i40iw: Add support to make destroy QP synchronous
    
    [ Upstream commit f2334964e969762e266a616acf9377f6046470a2 ]
    
    Occasionally ib_write_bw crash is seen due to access of a pd object in
    i40iw_sc_qp_destroy after it is freed. Destroy qp is not synchronous in
    i40iw and thus the iwqp object could be referencing a pd object that is
    freed by ib core as a result of successful return from i40iw_destroy_qp.
    
    Wait in i40iw_destroy_qp till all QP references are released and destroy
    the QP and its associated resources before returning.  Switch to use the
    refcount API vs atomic API for lifetime management of the qp.
    
     RIP: 0010:i40iw_sc_qp_destroy+0x4b/0x120 [i40iw]
     [...]
     RSP: 0018:ffffb4a7042e3ba8 EFLAGS: 00010002
     RAX: 0000000000000000 RBX: 0000000000000001 RCX: dead000000000122
     RDX: ffffb4a7042e3bac RSI: ffff8b7ef9b1e940 RDI: ffff8b7efbf09080
     RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000
     R10: 8080808080808080 R11: 0000000000000010 R12: ffff8b7efbf08050
     R13: 0000000000000001 R14: ffff8b7f15042928 R15: ffff8b7ef9b1e940
     FS:  0000000000000000(0000) GS:ffff8b7f2fa00000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000000000000400 CR3: 000000020d60a006 CR4: 00000000001606e0
     Call Trace:
      i40iw_exec_cqp_cmd+0x4d3/0x5c0 [i40iw]
      ? try_to_wake_up+0x1ea/0x5d0
      ? __switch_to_asm+0x40/0x70
      i40iw_process_cqp_cmd+0x95/0xa0 [i40iw]
      i40iw_handle_cqp_op+0x42/0x1a0 [i40iw]
      ? cm_event_handler+0x13c/0x1f0 [iw_cm]
      i40iw_rem_ref+0xa0/0xf0 [i40iw]
      cm_work_handler+0x99c/0xd10 [iw_cm]
      process_one_work+0x1a1/0x360
      worker_thread+0x30/0x380
      ? process_one_work+0x360/0x360
      kthread+0x10c/0x130
      ? kthread_park+0x80/0x80
      ret_from_fork+0x35/0x40
    
    Fixes: d37498417947 ("i40iw: add files for iwarp interface")
    Link: https://lore.kernel.org/r/20200916131811.2077-1-shiraz.saleem@intel.com
    Reported-by: Kamal Heib <kheib@redhat.com>
    Signed-off-by: Sindhu, Devale <sindhu.devale@intel.com>
    Signed-off-by: Shiraz, Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61ad14e24ebac485be56426f03857a2a438e92ff
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Mon Sep 14 14:26:52 2020 +0300

    RDMA/mlx5: Disable IB_DEVICE_MEM_MGT_EXTENSIONS if IB_WR_REG_MR can't work
    
    [ Upstream commit 0ec52f0194638e2d284ad55eba5a7aff753de1b9 ]
    
    set_reg_wr() always fails if !umr_modify_entity_size_disabled because
    mlx5_ib_can_use_umr() always fails. Without set_reg_wr() IB_WR_REG_MR
    doesn't work and that means the device should not advertise
    IB_DEVICE_MEM_MGT_EXTENSIONS.
    
    Fixes: 841b07f99a47 ("IB/mlx5: Block MR WR if UMR is not possible")
    Link: https://lore.kernel.org/r/20200914112653.345244-5-leon@kernel.org
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b1d559cc5c6fcb551ad7c72e279119b340206b4
Author: Lijun Ou <oulijun@huawei.com>
Date:   Thu Sep 17 21:50:15 2020 +0800

    RDMA/hns: Set the unsupported wr opcode
    
    [ Upstream commit 22d3e1ed2cc837af87f76c3c8a4ccf4455e225c5 ]
    
    hip06 does not support IB_WR_LOCAL_INV, so the ps_opcode should be set to
    an invalid value instead of being left uninitialized.
    
    Fixes: 9a4435375cd1 ("IB/hns: Add driver files for hns RoCE driver")
    Fixes: a2f3d4479fe9 ("RDMA/hns: Avoid unncessary initialization")
    Link: https://lore.kernel.org/r/1600350615-115217-1-git-send-email-oulijun@huawei.com
    Signed-off-by: Lijun Ou <oulijun@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ff75bfed10d20d82f11b1ab02a3d6ec54180159
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Wed Sep 9 11:49:23 2020 +0300

    perf intel-pt: Fix "context_switch event has no tid" error
    
    [ Upstream commit 7d537a8d2e76bc4fc71e34545ceaa463ac2cd928 ]
    
    A context_switch event can have no tid because pids can be detached from
    a task while the task is still running (in do_exit()). Note this won't
    happen with per-task contexts because then tracing stops at
    perf_event_exit_task()
    
    If a task with no tid gets preempted, or a dying task gets preempted and
    its parent releases it, when it subsequently gets switched back in,
    Intel PT will not be able to determine what task is running and prints
    an error "context_switch event has no tid". However, it is not really an
    error because the task is in kernel space and the decoder can continue
    to decode successfully. Fix by changing the error to be only a logged
    message, and make allowance for tid == -1.
    
    Example:
    
      Using 5.9-rc4 with Preemptible Kernel (Low-Latency Desktop) e.g.
      $ uname -r
      5.9.0-rc4
      $ grep PREEMPT .config
      # CONFIG_PREEMPT_NONE is not set
      # CONFIG_PREEMPT_VOLUNTARY is not set
      CONFIG_PREEMPT=y
      CONFIG_PREEMPT_COUNT=y
      CONFIG_PREEMPTION=y
      CONFIG_PREEMPT_RCU=y
      CONFIG_PREEMPT_NOTIFIERS=y
      CONFIG_DRM_I915_PREEMPT_TIMEOUT=640
      CONFIG_DEBUG_PREEMPT=y
      # CONFIG_PREEMPT_TRACER is not set
      # CONFIG_PREEMPTIRQ_DELAY_TEST is not set
    
    Before:
    
      $ cat forkit.c
    
      #include <sys/types.h>
      #include <unistd.h>
      #include <sys/wait.h>
    
      int main()
      {
              pid_t child;
              int status = 0;
    
              child = fork();
              if (child == 0)
                      return 123;
              wait(&status);
              return 0;
      }
    
      $ gcc -o forkit forkit.c
      $ sudo ~/bin/perf record --kcore -a -m,64M -e intel_pt/cyc/k &
      [1] 11016
      $ taskset 2 ./forkit
      $ sudo pkill perf
      $ [ perf record: Woken up 1 times to write data ]
      [ perf record: Captured and wrote 17.262 MB perf.data ]
    
      [1]+  Terminated              sudo ~/bin/perf record --kcore -a -m,64M -e intel_pt/cyc/k
      $ sudo ~/bin/perf script --show-task-events --show-switch-events --itrace=iqqe-o -C 1 --ns | grep -C 2 forkit
      context_switch event has no tid
               taskset 11019 [001] 66663.270045029:          1 instructions:k:  ffffffffb1d9f844 strnlen_user+0xb4 ([kernel.kallsyms])
               taskset 11019 [001] 66663.270201816:          1 instructions:k:  ffffffffb1a83121 unmap_page_range+0x561 ([kernel.kallsyms])
                forkit 11019 [001] 66663.270327553: PERF_RECORD_COMM exec: forkit:11019/11019
                forkit 11019 [001] 66663.270420028:          1 instructions:k:  ffffffffb1db9537 __clear_user+0x27 ([kernel.kallsyms])
                forkit 11019 [001] 66663.270648704:          1 instructions:k:  ffffffffb18829e6 do_user_addr_fault+0xf6 ([kernel.kallsyms])
                forkit 11019 [001] 66663.270833163:          1 instructions:k:  ffffffffb230a825 irqentry_exit_to_user_mode+0x15 ([kernel.kallsyms])
                forkit 11019 [001] 66663.271092359:          1 instructions:k:  ffffffffb1aea3d9 lock_page_memcg+0x9 ([kernel.kallsyms])
                forkit 11019 [001] 66663.271207092: PERF_RECORD_FORK(11020:11020):(11019:11019)
                forkit 11019 [001] 66663.271234775: PERF_RECORD_SWITCH_CPU_WIDE OUT          next pid/tid: 11020/11020
                forkit 11020 [001] 66663.271238407: PERF_RECORD_SWITCH_CPU_WIDE IN           prev pid/tid: 11019/11019
                forkit 11020 [001] 66663.271312066:          1 instructions:k:  ffffffffb1a88140 handle_mm_fault+0x10 ([kernel.kallsyms])
                forkit 11020 [001] 66663.271476225: PERF_RECORD_EXIT(11020:11020):(11019:11019)
                forkit 11020 [001] 66663.271497488: PERF_RECORD_SWITCH_CPU_WIDE OUT preempt  next pid/tid: 11019/11019
                forkit 11019 [001] 66663.271500523: PERF_RECORD_SWITCH_CPU_WIDE IN           prev pid/tid: 11020/11020
                forkit 11019 [001] 66663.271517241:          1 instructions:k:  ffffffffb24012cd error_entry+0x6d ([kernel.kallsyms])
                forkit 11019 [001] 66663.271664080: PERF_RECORD_EXIT(11019:11019):(1386:1386)
    
    After:
    
      $ sudo ~/bin/perf script --show-task-events --show-switch-events --itrace=iqqe-o -C 1 --ns | grep -C 2 forkit
               taskset 11019 [001] 66663.270045029:          1 instructions:k:  ffffffffb1d9f844 strnlen_user+0xb4 ([kernel.kallsyms])
               taskset 11019 [001] 66663.270201816:          1 instructions:k:  ffffffffb1a83121 unmap_page_range+0x561 ([kernel.kallsyms])
                forkit 11019 [001] 66663.270327553: PERF_RECORD_COMM exec: forkit:11019/11019
                forkit 11019 [001] 66663.270420028:          1 instructions:k:  ffffffffb1db9537 __clear_user+0x27 ([kernel.kallsyms])
                forkit 11019 [001] 66663.270648704:          1 instructions:k:  ffffffffb18829e6 do_user_addr_fault+0xf6 ([kernel.kallsyms])
                forkit 11019 [001] 66663.270833163:          1 instructions:k:  ffffffffb230a825 irqentry_exit_to_user_mode+0x15 ([kernel.kallsyms])
                forkit 11019 [001] 66663.271092359:          1 instructions:k:  ffffffffb1aea3d9 lock_page_memcg+0x9 ([kernel.kallsyms])
                forkit 11019 [001] 66663.271207092: PERF_RECORD_FORK(11020:11020):(11019:11019)
                forkit 11019 [001] 66663.271234775: PERF_RECORD_SWITCH_CPU_WIDE OUT          next pid/tid: 11020/11020
                forkit 11020 [001] 66663.271238407: PERF_RECORD_SWITCH_CPU_WIDE IN           prev pid/tid: 11019/11019
                forkit 11020 [001] 66663.271312066:          1 instructions:k:  ffffffffb1a88140 handle_mm_fault+0x10 ([kernel.kallsyms])
                forkit 11020 [001] 66663.271476225: PERF_RECORD_EXIT(11020:11020):(11019:11019)
                forkit 11020 [001] 66663.271497488: PERF_RECORD_SWITCH_CPU_WIDE OUT preempt  next pid/tid: 11019/11019
                forkit 11019 [001] 66663.271500523: PERF_RECORD_SWITCH_CPU_WIDE IN           prev pid/tid: 11020/11020
                forkit 11019 [001] 66663.271517241:          1 instructions:k:  ffffffffb24012cd error_entry+0x6d ([kernel.kallsyms])
                forkit 11019 [001] 66663.271664080: PERF_RECORD_EXIT(11019:11019):(1386:1386)
                forkit 11019 [001] 66663.271688752: PERF_RECORD_SWITCH_CPU_WIDE OUT          next pid/tid:    -1/-1
                   :-1    -1 [001] 66663.271692086: PERF_RECORD_SWITCH_CPU_WIDE IN           prev pid/tid: 11019/11019
                    :-1    -1 [001] 66663.271707466:          1 instructions:k:  ffffffffb18eb096 update_load_avg+0x306 ([kernel.kallsyms])
    
    Fixes: 86c2786994bd7c ("perf intel-pt: Add support for PERF_RECORD_SWITCH")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Yu-cheng Yu <yu-cheng.yu@intel.com>
    Link: http://lore.kernel.org/lkml/20200909084923.9096-3-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cee5080a0776649f5479bed736a046dd647cb005
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Wed Sep 2 11:11:21 2020 +0300

    RDMA/cma: Consolidate the destruction of a cma_multicast in one place
    
    [ Upstream commit 3788d2997bc0150ea911a964d5b5a2e11808a936 ]
    
    Two places were open coding this sequence, and also pull in
    cma_leave_roce_mc_group() which was called only once.
    
    Link: https://lore.kernel.org/r/20200902081122.745412-8-leon@kernel.org
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c4fec28980dc3b64fa735af175179612e79d36a
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Wed Sep 2 11:11:20 2020 +0300

    RDMA/cma: Remove dead code for kernel rdmacm multicast
    
    [ Upstream commit 1bb5091def706732c749df9aae45fbca003696f2 ]
    
    There is no kernel user of RDMA CM multicast so this code managing the
    multicast subscription of the kernel-only internal QP is dead. Remove it.
    
    This makes the bug fixes in the next patches much simpler.
    
    Link: https://lore.kernel.org/r/20200902081122.745412-7-leon@kernel.org
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 557c184df3c54a894e786a422f87faacbe102a75
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Mon Sep 14 14:52:19 2020 +1000

    powerpc/64s/radix: Fix mm_cpumask trimming race vs kthread_use_mm
    
    [ Upstream commit a665eec0a22e11cdde708c1c256a465ebe768047 ]
    
    Commit 0cef77c7798a7 ("powerpc/64s/radix: flush remote CPUs out of
    single-threaded mm_cpumask") added a mechanism to trim the mm_cpumask of
    a process under certain conditions. One of the assumptions is that
    mm_users would not be incremented via a reference outside the process
    context with mmget_not_zero() then go on to kthread_use_mm() via that
    reference.
    
    That invariant was broken by io_uring code (see previous sparc64 fix),
    but I'll point Fixes: to the original powerpc commit because we are
    changing that assumption going forward, so this will make backports
    match up.
    
    Fix this by no longer relying on that assumption, but by having each CPU
    check the mm is not being used, and clearing their own bit from the mask
    only if it hasn't been switched-to by the time the IPI is processed.
    
    This relies on commit 38cf307c1f20 ("mm: fix kthread_use_mm() vs TLB
    invalidate") and ARCH_WANT_IRQS_OFF_ACTIVATE_MM to disable irqs over mm
    switch sequences.
    
    Fixes: 0cef77c7798a7 ("powerpc/64s/radix: flush remote CPUs out of single-threaded mm_cpumask")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Michael Ellerman <mpe@ellerman.id.au>
    Depends-on: 38cf307c1f20 ("mm: fix kthread_use_mm() vs TLB invalidate")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200914045219.3736466-5-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 148d4f4dc75e78c748a72da3d1bd138cea867a80
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sat Sep 5 09:02:20 2020 +1000

    powerpc/tau: Disable TAU between measurements
    
    [ Upstream commit e63d6fb5637e92725cf143559672a34b706bca4f ]
    
    Enabling CONFIG_TAU_INT causes random crashes:
    
    Unrecoverable exception 1700 at c0009414 (msr=1000)
    Oops: Unrecoverable exception, sig: 6 [#1]
    BE PAGE_SIZE=4K MMU=Hash SMP NR_CPUS=2 PowerMac
    Modules linked in:
    CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.7.0-pmac-00043-gd5f545e1a8593 #5
    NIP:  c0009414 LR: c0009414 CTR: c00116fc
    REGS: c0799eb8 TRAP: 1700   Not tainted  (5.7.0-pmac-00043-gd5f545e1a8593)
    MSR:  00001000 <ME>  CR: 22000228  XER: 00000100
    
    GPR00: 00000000 c0799f70 c076e300 00800000 0291c0ac 00e00000 c076e300 00049032
    GPR08: 00000001 c00116fc 00000000 dfbd3200 ffffffff 007f80a8 00000000 00000000
    GPR16: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 c075ce04
    GPR24: c075ce04 dfff8880 c07b0000 c075ce04 00080000 00000001 c079ef98 c079ef5c
    NIP [c0009414] arch_cpu_idle+0x24/0x6c
    LR [c0009414] arch_cpu_idle+0x24/0x6c
    Call Trace:
    [c0799f70] [00000001] 0x1 (unreliable)
    [c0799f80] [c0060990] do_idle+0xd8/0x17c
    [c0799fa0] [c0060ba4] cpu_startup_entry+0x20/0x28
    [c0799fb0] [c072d220] start_kernel+0x434/0x44c
    [c0799ff0] [00003860] 0x3860
    Instruction dump:
    XXXXXXXX XXXXXXXX XXXXXXXX 3d20c07b XXXXXXXX XXXXXXXX XXXXXXXX 7c0802a6
    XXXXXXXX XXXXXXXX XXXXXXXX 4e800421 XXXXXXXX XXXXXXXX XXXXXXXX 7d2000a6
    ---[ end trace 3a0c9b5cb216db6b ]---
    
    Resolve this problem by disabling each THRMn comparator when handling
    the associated THRMn interrupt and by disabling the TAU entirely when
    updating THRMn thresholds.
    
    Fixes: 1da177e4c3f41 ("Linux-2.6.12-rc2")
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/5a0ba3dc5612c7aac596727331284a3676c08472.1599260540.git.fthain@telegraphics.com.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72407b8d08b359253835d3d3d0604dfcb65bb53f
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sat Sep 5 09:02:20 2020 +1000

    powerpc/tau: Check processor type before enabling TAU interrupt
    
    [ Upstream commit 5e3119e15fed5b9a9a7e528665ff098a4a8dbdbc ]
    
    According to Freescale's documentation, MPC74XX processors have an
    erratum that prevents the TAU interrupt from working, so don't try to
    use it when running on those processors.
    
    Fixes: 1da177e4c3f41 ("Linux-2.6.12-rc2")
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/c281611544768e758bd58fe812cf702a5bd2d042.1599260540.git.fthain@telegraphics.com.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68a8ec0b022f2247e46b95f2c5f8eacee8872acf
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sat Sep 5 09:02:20 2020 +1000

    powerpc/tau: Remove duplicated set_thresholds() call
    
    [ Upstream commit 420ab2bc7544d978a5d0762ee736412fe9c796ab ]
    
    The commentary at the call site seems to disagree with the code. The
    conditional prevents calling set_thresholds() via the exception handler,
    which appears to crash. Perhaps that's because it immediately triggers
    another TAU exception. Anyway, calling set_thresholds() from TAUupdate()
    is redundant because tau_timeout() does so.
    
    Fixes: 1da177e4c3f41 ("Linux-2.6.12-rc2")
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/d7c7ee33232cf72a6a6bbb6ef05838b2e2b113c0.1599260540.git.fthain@telegraphics.com.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0578b423b5e1f51b9bc2a9549facc35f25090be
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sat Sep 5 09:02:20 2020 +1000

    powerpc/tau: Convert from timer to workqueue
    
    [ Upstream commit b1c6a0a10bfaf36ec82fde6f621da72407fa60a1 ]
    
    Since commit 19dbdcb8039cf ("smp: Warn on function calls from softirq
    context") the Thermal Assist Unit driver causes a warning like the
    following when CONFIG_SMP is enabled.
    
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 0 at kernel/smp.c:428 smp_call_function_many_cond+0xf4/0x38c
      Modules linked in:
      CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.7.0-pmac #3
      NIP:  c00b37a8 LR: c00b3abc CTR: c001218c
      REGS: c0799c60 TRAP: 0700   Not tainted  (5.7.0-pmac)
      MSR:  00029032 <EE,ME,IR,DR,RI>  CR: 42000224  XER: 00000000
      GPR00: c00b3abc c0799d18 c076e300 c079ef5c c0011fec 00000000 00000000 00000000
      GPR08: 00000100 00000100 00008000 ffffffff 42000224 00000000 c079d040 c079d044
      GPR16: 00000001 00000000 00000004 c0799da0 c079f054 c07a0000 c07a0000 00000000
      GPR24: c0011fec 00000000 c079ef5c c079ef5c 00000000 00000000 00000000 00000000
      NIP [c00b37a8] smp_call_function_many_cond+0xf4/0x38c
      LR [c00b3abc] on_each_cpu+0x38/0x68
      Call Trace:
      [c0799d18] [ffffffff] 0xffffffff (unreliable)
      [c0799d68] [c00b3abc] on_each_cpu+0x38/0x68
      [c0799d88] [c0096704] call_timer_fn.isra.26+0x20/0x7c
      [c0799d98] [c0096b40] run_timer_softirq+0x1d4/0x3fc
      [c0799df8] [c05b4368] __do_softirq+0x118/0x240
      [c0799e58] [c0039c44] irq_exit+0xc4/0xcc
      [c0799e68] [c000ade8] timer_interrupt+0x1b0/0x230
      [c0799ea8] [c0013520] ret_from_except+0x0/0x14
      --- interrupt: 901 at arch_cpu_idle+0x24/0x6c
          LR = arch_cpu_idle+0x24/0x6c
      [c0799f70] [00000001] 0x1 (unreliable)
      [c0799f80] [c0060990] do_idle+0xd8/0x17c
      [c0799fa0] [c0060ba8] cpu_startup_entry+0x24/0x28
      [c0799fb0] [c072d220] start_kernel+0x434/0x44c
      [c0799ff0] [00003860] 0x3860
      Instruction dump:
      8129f204 2f890000 40beff98 3d20c07a 8929eec4 2f890000 40beff88 0fe00000
      81220000 552805de 550802ef 4182ff84 <0fe00000> 3860ffff 7f65db78 7f44d378
      ---[ end trace 34a886e47819c2eb ]---
    
    Don't call on_each_cpu() from a timer callback, call it from a worker
    thread instead.
    
    Fixes: 1da177e4c3f41 ("Linux-2.6.12-rc2")
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/bb61650bea4f4c91fb8e24b9a6f130a1438651a7.1599260540.git.fthain@telegraphics.com.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0305488040dce95feb8705e1e0270a7df04860e2
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Sat Sep 5 09:02:20 2020 +1000

    powerpc/tau: Use appropriate temperature sample interval
    
    [ Upstream commit 66943005cc41f48e4d05614e8f76c0ca1812f0fd ]
    
    According to the MPC750 Users Manual, the SITV value in Thermal
    Management Register 3 is 13 bits long. The present code calculates the
    SITV value as 60 * 500 cycles. This would overflow to give 10 us on
    a 500 MHz CPU rather than the intended 60 us. (But according to the
    Microprocessor Datasheet, there is also a factor of 266 that has to be
    applied to this value on certain parts i.e. speed sort above 266 MHz.)
    Always use the maximum cycle count, as recommended by the Datasheet.
    
    Fixes: 1da177e4c3f41 ("Linux-2.6.12-rc2")
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/896f542e5f0f1d6cf8218524c2b67d79f3d69b3c.1599260540.git.fthain@telegraphics.com.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2087c04a2ac80a0ad9ce823c3d86bc14af22ddd
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Mon Jun 8 12:39:03 2020 +0530

    powerpc/book3s64/hash/4k: Support large linear mapping range with 4K
    
    [ Upstream commit 7746406baa3bc9e23fdd7b7da2f04d86e25ab837 ]
    
    With commit: 0034d395f89d ("powerpc/mm/hash64: Map all the kernel
    regions in the same 0xc range"), we now split the 64TB address range
    into 4 contexts each of 16TB. That implies we can do only 16TB linear
    mapping.
    
    On some systems, eg. Power9, memory attached to nodes > 0 will appear
    above 16TB in the linear mapping. This resulted in kernel crash when
    we boot such systems in hash translation mode with 4K PAGE_SIZE.
    
    This patch updates the kernel mapping such that we now start supporting upto
    61TB of memory with 4K. The kernel mapping now looks like below 4K PAGE_SIZE
    and hash translation.
    
        vmalloc start     = 0xc0003d0000000000
        IO start          = 0xc0003e0000000000
        vmemmap start     = 0xc0003f0000000000
    
    Our MAX_PHYSMEM_BITS for 4K is still 64TB even though we can only map 61TB.
    We prevent bolt mapping anything outside 61TB range by checking against
    H_VMALLOC_START.
    
    Fixes: 0034d395f89d ("powerpc/mm/hash64: Map all the kernel regions in the same 0xc range")
    Reported-by: Cameron Berkenpas <cam@neo-zeon.de>
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200608070904.387440-3-aneesh.kumar@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fd3154eb0ee3485827ff27bccf7b54a0e91c621
Author: Michal Kalderon <michal.kalderon@marvell.com>
Date:   Wed Sep 2 19:57:40 2020 +0300

    RDMA/qedr: Fix inline size returned for iWARP
    
    [ Upstream commit fbf58026b2256e9cd5f241a4801d79d3b2b7b89d ]
    
    commit 59e8970b3798 ("RDMA/qedr: Return max inline data in QP query
    result") changed query_qp max_inline size to return the max roce inline
    size.  When iwarp was introduced, this should have been modified to return
    the max inline size based on protocol.  This size is cached in the device
    attributes
    
    Fixes: 69ad0e7fe845 ("RDMA/qedr: Add support for iWARP in user space")
    Link: https://lore.kernel.org/r/20200902165741.8355-8-michal.kalderon@marvell.com
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 97336c8296b50d02794fdc6153f3a19cbac36fe8
Author: Michal Kalderon <michal.kalderon@marvell.com>
Date:   Wed Sep 2 19:57:37 2020 +0300

    RDMA/qedr: Fix return code if accept is called on a destroyed qp
    
    [ Upstream commit 8a5a10a1a74465065c75d9de1aa6685e1f1aa117 ]
    
    In iWARP, accept could be called after a QP is already destroyed.  In this
    case an error should be returned and not success.
    
    Fixes: 82af6d19d8d9 ("RDMA/qedr: Fix synchronization methods and memory leaks in qedr")
    Link: https://lore.kernel.org/r/20200902165741.8355-5-michal.kalderon@marvell.com
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c5f385ab49e7fbdd3765e7fd906e1d8d9ba884b
Author: Michal Kalderon <michal.kalderon@marvell.com>
Date:   Wed Sep 2 19:57:36 2020 +0300

    RDMA/qedr: Fix use of uninitialized field
    
    [ Upstream commit a379ad54e55a12618cae7f6333fd1b3071de9606 ]
    
    dev->attr.page_size_caps was used uninitialized when setting device
    attributes
    
    Fixes: ec72fce401c6 ("qedr: Add support for RoCE HW init")
    Link: https://lore.kernel.org/r/20200902165741.8355-4-michal.kalderon@marvell.com
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0a970d8f627d2606f1ec4214a5ca7eb611e70c8
Author: Michal Kalderon <michal.kalderon@marvell.com>
Date:   Wed Sep 2 19:57:34 2020 +0300

    RDMA/qedr: Fix qp structure memory leak
    
    [ Upstream commit 098e345a1a8faaad6e4e54d138773466cecc45d4 ]
    
    The qedr_qp structure wasn't freed when the protocol was RoCE.  kmemleak
    output when running basic RoCE scenario.
    
    unreferenced object 0xffff927ad7e22c00 (size 1024):
      comm "ib_send_bw", pid 7082, jiffies 4384133693 (age 274.698s)
      hex dump (first 32 bytes):
        00 b0 cd a2 79 92 ff ff 00 3f a1 a2 79 92 ff ff  ....y....?..y...
        00 ee 5c dd 80 92 ff ff 00 f6 5c dd 80 92 ff ff  ..\.......\.....
      backtrace:
        [<00000000b2ba0f35>] qedr_create_qp+0xb3/0x6c0 [qedr]
        [<00000000e85a43dd>] ib_uverbs_handler_UVERBS_METHOD_QP_CREATE+0x555/0xad0 [ib_uverbs]
        [<00000000fee4d029>] ib_uverbs_cmd_verbs+0xa5a/0xb80 [ib_uverbs]
        [<000000005d622660>] ib_uverbs_ioctl+0xa4/0x110 [ib_uverbs]
        [<00000000eb4cdc71>] ksys_ioctl+0x87/0xc0
        [<00000000abe6b23a>] __x64_sys_ioctl+0x16/0x20
        [<0000000046e7cef4>] do_syscall_64+0x4d/0x90
        [<00000000c6948f76>] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: 1212767e23bb ("qedr: Add wrapping generic structure for qpidr and adjust idr routines.")
    Link: https://lore.kernel.org/r/20200902165741.8355-2-michal.kalderon@marvell.com
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1738b03e34ad4bdeead724e252577dd472eb154a
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Fri Sep 4 19:41:43 2020 -0300

    RDMA/umem: Prevent small pages from being returned by ib_umem_find_best_pgsz()
    
    [ Upstream commit 10c75ccb54e4fe548cb16d7ed426d7d709e6ae76 ]
    
    rdma_for_each_block() makes assumptions about how the SGL is constructed
    that don't work if the block size is below the page size used to to build
    the SGL.
    
    The rules for umem SGL construction require that the SG's all be PAGE_SIZE
    aligned and we don't encode the actual byte offset of the VA range inside
    the SGL using offset and length. So rdma_for_each_block() has no idea
    where the actual starting/ending point is to compute the first/last block
    boundary if the starting address should be within a SGL.
    
    Fixing the SGL construction turns out to be really hard, and will be the
    subject of other patches. For now block smaller pages.
    
    Fixes: 4a35339958f1 ("RDMA/umem: Add API to find best driver supported page size in an MR")
    Link: https://lore.kernel.org/r/2-v2-270386b7e60b+28f4-umem_1_jgg@nvidia.com
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Reviewed-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 85e40ba1c4a5246b35e91c2ed69d4680426904d7
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Fri Sep 4 19:41:42 2020 -0300

    RDMA/umem: Fix ib_umem_find_best_pgsz() for mappings that cross a page boundary
    
    [ Upstream commit a40c20dabdf9045270767c75918feb67f0727c89 ]
    
    It is possible for a single SGL to span an aligned boundary, eg if the SGL
    is
    
      61440 -> 90112
    
    Then the length is 28672, which currently limits the block size to
    32k. With a 32k page size the two covering blocks will be:
    
      32768->65536 and 65536->98304
    
    However, the correct answer is a 128K block size which will span the whole
    28672 bytes in a single block.
    
    Instead of limiting based on length figure out which high IOVA bits don't
    change between the start and end addresses. That is the highest useful
    page size.
    
    Fixes: 4a35339958f1 ("RDMA/umem: Add API to find best driver supported page size in an MR")
    Link: https://lore.kernel.org/r/1-v2-270386b7e60b+28f4-umem_1_jgg@nvidia.com
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Reviewed-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b1712ec30dfb20a8253f6ba4999e1805170300d8
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Tue Oct 13 08:46:27 2020 -0700

    xfs: fix high key handling in the rt allocator's query_range function
    
    [ Upstream commit d88850bd5516a77c6f727e8b6cefb64e0cc929c7 ]
    
    Fix some off-by-one errors in xfs_rtalloc_query_range.  The highest key
    in the realtime bitmap is always one less than the number of rt extents,
    which means that the key clamp at the start of the function is wrong.
    The 4th argument to xfs_rtfind_forw is the highest rt extent that we
    want to probe, which means that passing 1 less than the high key is
    wrong.  Finally, drop the rem variable that controls the loop because we
    can compare the iteration point (rtstart) against the high key directly.
    
    The sordid history of this function is that the original commit (fb3c3)
    incorrectly passed (high_rec->ar_startblock - 1) as the 'limit' parameter
    to xfs_rtfind_forw.  This was wrong because the "high key" is supposed
    to be the largest key for which the caller wants result rows, not the
    key for the first row that could possibly be outside the range that the
    caller wants to see.
    
    A subsequent attempt (8ad56) to strengthen the parameter checking added
    incorrect clamping of the parameters to the number of rt blocks in the
    system (despite the bitmap functions all taking units of rt extents) to
    avoid querying ranges past the end of rt bitmap file but failed to fix
    the incorrect _rtfind_forw parameter.  The original _rtfind_forw
    parameter error then survived the conversion of the startblock and
    blockcount fields to rt extents (a0e5c), and the most recent off-by-one
    fix (a3a37) thought it was patching a problem when the end of the rt
    volume is not in use, but none of these fixes actually solved the
    original problem that the author was confused about the "limit" argument
    to xfs_rtfind_forw.
    
    Sadly, all four of these patches were written by this author and even
    his own usage of this function and rt testing were inadequate to get
    this fixed quickly.
    
    Original-problem: fb3c3de2f65c ("xfs: add a couple of queries to iterate free extents in the rtbitmap")
    Not-fixed-by: 8ad560d2565e ("xfs: strengthen rtalloc query range checks")
    Not-fixed-by: a0e5c435babd ("xfs: fix xfs_rtalloc_rec units")
    Fixes: a3a374bf1889 ("xfs: fix off-by-one error in xfs_rtalloc_query_range")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Chandan Babu R <chandanrlinux@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b005b448daf2f3a06d22557734c4f80705e18e69
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Thu Oct 1 10:56:07 2020 -0700

    xfs: fix deadlock and streamline xfs_getfsmap performance
    
    [ Upstream commit 8ffa90e1145c70c7ac47f14b59583b2296d89e72 ]
    
    Refactor xfs_getfsmap to improve its performance: instead of indirectly
    calling a function that copies one record to userspace at a time, create
    a shadow buffer in the kernel and copy the whole array once at the end.
    On the author's computer, this reduces the runtime on his /home by ~20%.
    
    This also eliminates a deadlock when running GETFSMAP against the
    realtime device.  The current code locks the rtbitmap to create
    fsmappings and copies them into userspace, having not released the
    rtbitmap lock.  If the userspace buffer is an mmap of a sparse file that
    itself resides on the realtime device, the write page fault will recurse
    into the fs for allocation, which will deadlock on the rtbitmap lock.
    
    Fixes: 4c934c7dd60c ("xfs: report realtime space information via the rtbitmap")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Chandan Babu R <chandanrlinux@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adc3e2698637f9e32036f918856edc36aa767fbd
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Thu Oct 1 10:56:07 2020 -0700

    xfs: limit entries returned when counting fsmap records
    
    [ Upstream commit acd1ac3aa22fd58803a12d26b1ab7f70232f8d8d ]
    
    If userspace asked fsmap to count the number of entries, we cannot
    return more than UINT_MAX entries because fmh_entries is u32.
    Therefore, stop counting if we hit this limit or else we will waste time
    to return truncated results.
    
    Fixes: e89c041338ed ("xfs: implement the GETFSMAP ioctl")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Chandan Babu R <chandanrlinux@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2577720d35e26b92f30eed4b17565f24b3c661d8
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Thu Apr 2 14:26:13 2020 -0400

    ida: Free allocated bitmap in error path
    
    [ Upstream commit a219b856a2b993da234108307be772448f22b0ce ]
    
    If a bitmap needs to be allocated, and then by the time the thread
    is scheduled to be run again all the indices which would satisfy the
    allocation have been allocated then we would leak the allocation.  Almost
    impossible to hit in practice, but a trivial fix.  Found by Coverity.
    
    Fixes: f32f004cddf8 ("ida: Convert to XArray")
    Reported-by: coverity-bot <keescook+coverity-bot@chromium.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3789f5cfd60035d924433a14fb25f2caaafbdd1d
Author: Necip Fazil Yildiran <fazilyildiran@gmail.com>
Date:   Mon Sep 14 14:46:52 2020 +0300

    arc: plat-hsdk: fix kconfig dependency warning when !RESET_CONTROLLER
    
    [ Upstream commit 63bcf87cb1c57956e1179f1a78dde625c7e3cba7 ]
    
    When ARC_SOC_HSDK is enabled and RESET_CONTROLLER is disabled, it results
    in the following Kbuild warning:
    
    WARNING: unmet direct dependencies detected for RESET_HSDK
      Depends on [n]: RESET_CONTROLLER [=n] && HAS_IOMEM [=y] && (ARC_SOC_HSDK [=y] || COMPILE_TEST [=n])
      Selected by [y]:
      - ARC_SOC_HSDK [=y] && ISA_ARCV2 [=y]
    
    The reason is that ARC_SOC_HSDK selects RESET_HSDK without depending on or
    selecting RESET_CONTROLLER while RESET_HSDK is subordinate to
    RESET_CONTROLLER.
    
    Honor the kconfig menu hierarchy to remove kconfig dependency warnings.
    
    Fixes: a528629dfd3b ("ARC: [plat-hsdk] select CONFIG_RESET_HSDK from Kconfig")
    Signed-off-by: Necip Fazil Yildiran <fazilyildiran@gmail.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67c2e58b684e140d1fa35b2e70ed2d17a7bbc37b
Author: Guillaume Tucker <guillaume.tucker@collabora.com>
Date:   Tue Sep 1 16:58:06 2020 +0100

    ARM: 9007/1: l2c: fix prefetch bits init in L2X0_AUX_CTRL using DT values
    
    [ Upstream commit 8e007b367a59bcdf484c81f6df9bd5a4cc179ca6 ]
    
    The L310_PREFETCH_CTRL register bits 28 and 29 to enable data and
    instruction prefetch respectively can also be accessed via the
    L2X0_AUX_CTRL register.  They appear to be actually wired together in
    hardware between the registers.  Changing them in the prefetch
    register only will get undone when restoring the aux control register
    later on.  For this reason, set these bits in both registers during
    initialisation according to the devicetree property values.
    
    Link: https://lore.kernel.org/lkml/76f2f3ad5e77e356e0a5b99ceee1e774a2842c25.1597061474.git.guillaume.tucker@collabora.com/
    
    Fixes: ec3bd0e68a67 ("ARM: 8391/1: l2c: add options to overwrite prefetching behavior")
    Signed-off-by: Guillaume Tucker <guillaume.tucker@collabora.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit baa7ea082f8e6ff981ba12a2d0f873e32313ac0d
Author: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
Date:   Thu Sep 3 15:42:17 2020 +1200

    mtd: mtdoops: Don't write panic data twice
    
    [ Upstream commit c1cf1d57d1492235309111ea6a900940213a9166 ]
    
    If calling mtdoops_write, don't also schedule work to be done later.
    
    Although this appears to not be causing an issue, possibly because the
    scheduled work will never get done, it is confusing.
    
    Fixes: 016c1291ce70 ("mtd: mtdoops: do not use mtd->panic_write directly")
    Signed-off-by: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200903034217.23079-1-mark.tomlinson@alliedtelesis.co.nz
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8d4f65c6ae2fa9fd5fced741d143b030a492cc7
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Aug 30 11:40:04 2020 +0300

    RDMA/mlx5: Fix potential race between destroy and CQE poll
    
    [ Upstream commit 4b916ed9f9e85f705213ca8d69771d3c1cd6ee5a ]
    
    The SRQ can be destroyed right before mlx5_cmd_get_srq is called.
    In such case the latter will return NULL instead of expected SRQ.
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Link: https://lore.kernel.org/r/20200830084010.102381-5-leon@kernel.org
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 935950e3190d864e54029638536bf86922038ee3
Author: Scott Cheloha <cheloha@linux.ibm.com>
Date:   Mon Aug 10 20:51:15 2020 -0500

    pseries/drmem: don't cache node id in drmem_lmb struct
    
    [ Upstream commit e5e179aa3a39c818db8fbc2dce8d2cd24adaf657 ]
    
    At memory hot-remove time we can retrieve an LMB's nid from its
    corresponding memory_block.  There is no need to store the nid
    in multiple locations.
    
    Note that lmb_to_memblock() uses find_memory_block() to get the
    corresponding memory_block.  As find_memory_block() runs in sub-linear
    time this approach is negligibly slower than what we do at present.
    
    In exchange for this lookup at hot-remove time we no longer need to
    call memory_add_physaddr_to_nid() during drmem_init() for each LMB.
    On powerpc, memory_add_physaddr_to_nid() is a linear search, so this
    spares us an O(n^2) initialization during boot.
    
    On systems with many LMBs that initialization overhead is palpable and
    disruptive.  For example, on a box with 249854 LMBs we're seeing
    drmem_init() take upwards of 30 seconds to complete:
    
    [   53.721639] drmem: initializing drmem v2
    [   80.604346] watchdog: BUG: soft lockup - CPU#65 stuck for 23s! [swapper/0:1]
    [   80.604377] Modules linked in:
    [   80.604389] CPU: 65 PID: 1 Comm: swapper/0 Not tainted 5.6.0-rc2+ #4
    [   80.604397] NIP:  c0000000000a4980 LR: c0000000000a4940 CTR: 0000000000000000
    [   80.604407] REGS: c0002dbff8493830 TRAP: 0901   Not tainted  (5.6.0-rc2+)
    [   80.604412] MSR:  8000000002009033 <SF,VEC,EE,ME,IR,DR,RI,LE>  CR: 44000248  XER: 0000000d
    [   80.604431] CFAR: c0000000000a4a38 IRQMASK: 0
    [   80.604431] GPR00: c0000000000a4940 c0002dbff8493ac0 c000000001904400 c0003cfffffede30
    [   80.604431] GPR04: 0000000000000000 c000000000f4095a 000000000000002f 0000000010000000
    [   80.604431] GPR08: c0000bf7ecdb7fb8 c0000bf7ecc2d3c8 0000000000000008 c00c0002fdfb2001
    [   80.604431] GPR12: 0000000000000000 c00000001e8ec200
    [   80.604477] NIP [c0000000000a4980] hot_add_scn_to_nid+0xa0/0x3e0
    [   80.604486] LR [c0000000000a4940] hot_add_scn_to_nid+0x60/0x3e0
    [   80.604492] Call Trace:
    [   80.604498] [c0002dbff8493ac0] [c0000000000a4940] hot_add_scn_to_nid+0x60/0x3e0 (unreliable)
    [   80.604509] [c0002dbff8493b20] [c000000000087c10] memory_add_physaddr_to_nid+0x20/0x60
    [   80.604521] [c0002dbff8493b40] [c0000000010d4880] drmem_init+0x25c/0x2f0
    [   80.604530] [c0002dbff8493c10] [c000000000010154] do_one_initcall+0x64/0x2c0
    [   80.604540] [c0002dbff8493ce0] [c0000000010c4aa0] kernel_init_freeable+0x2d8/0x3a0
    [   80.604550] [c0002dbff8493db0] [c000000000010824] kernel_init+0x2c/0x148
    [   80.604560] [c0002dbff8493e20] [c00000000000b648] ret_from_kernel_thread+0x5c/0x74
    [   80.604567] Instruction dump:
    [   80.604574] 392918e8 e9490000 e90a000a e92a0000 80ea000c 1d080018 3908ffe8 7d094214
    [   80.604586] 7fa94040 419d00dc e9490010 714a0088 <2faa0008> 409e00ac e9490000 7fbe5040
    [   89.047390] drmem: 249854 LMB(s)
    
    With a patched kernel on the same machine we're no longer seeing the
    soft lockup.  drmem_init() now completes in negligible time, even when
    the LMB count is large.
    
    Fixes: b2d3b5ee66f2 ("powerpc/pseries: Track LMB nid instead of using device tree")
    Signed-off-by: Scott Cheloha <cheloha@linux.ibm.com>
    Reviewed-by: Nathan Lynch <nathanl@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200811015115.63677-1-cheloha@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb327e98631e4cd23e15b664d48ab1defe5ba94a
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Thu Aug 13 10:11:31 2020 -0500

    powerpc/pseries: explicitly reschedule during drmem_lmb list traversal
    
    [ Upstream commit 9d6792ffe140240ae54c881cc4183f9acc24b4df ]
    
    The drmem lmb list can have hundreds of thousands of entries, and
    unfortunately lookups take the form of linear searches. As long as
    this is the case, traversals have the potential to monopolize the CPU
    and provoke lockup reports, workqueue stalls, and the like unless
    they explicitly yield.
    
    Rather than placing cond_resched() calls within various
    for_each_drmem_lmb() loop blocks in the code, put it in the iteration
    expression of the loop macro itself so users can't omit it.
    
    Introduce a drmem_lmb_next() iteration helper function which calls
    cond_resched() at a regular interval during array traversal. Each
    iteration of the loop in DLPAR code paths can involve around ten RTAS
    calls which can each take up to 250us, so this ensures the check is
    performed at worst every few milliseconds.
    
    Fixes: 6c6ea53725b3 ("powerpc/mm: Separate ibm, dynamic-memory data from DT format")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20200813151131.2070161-1-nathanl@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 937cdcc45aaadcab8471754d6b57700a3c3082f2
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Aug 25 15:17:08 2020 -0300

    RDMA/umem: Fix signature of stub ib_umem_find_best_pgsz()
    
    [ Upstream commit 61690d01db32eb1f94adc9ac2b8bb741d34e4671 ]
    
    The original function returns unsigned long and 0 on failure.
    
    Fixes: 4a35339958f1 ("RDMA/umem: Add API to find best driver supported page size in an MR")
    Link: https://lore.kernel.org/r/0-v1-982a13cc5c6d+501ae-fix_best_pgsz_stub_jgg@nvidia.com
    Reviewed-by: Gal Pressman <galpress@amazon.com>
    Acked-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a43f936da88fa696fa6dd813ef181c6d5c8d9902
Author: Lang Cheng <chenglang@huawei.com>
Date:   Tue Aug 25 19:07:54 2020 +0800

    RDMA/hns: Add a check for current state before modifying QP
    
    [ Upstream commit e0ef0f68c4c0d85b1eb63f38d5d10324361280e8 ]
    
    It should be considered an illegal operation if the ULP attempts to modify
    a QP from another state to the current hardware state. Otherwise, the ULP
    can modify some fields of QPC at any time. For example, for a QP in state
    of RTS, modify it from RTR to RTS can change the PSN, which is always not
    as expected.
    
    Fixes: 9a4435375cd1 ("IB/hns: Add driver files for hns RoCE driver")
    Link: https://lore.kernel.org/r/1598353674-24270-1-git-send-email-liweihang@huawei.com
    Signed-off-by: Lang Cheng <chenglang@huawei.com>
    Signed-off-by: Weihang Li <liweihang@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a5aaa1747a36fcf73f11a801413071f162072a8
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue May 5 16:01:16 2020 +0200

    mtd: lpddr: fix excessive stack usage with clang
    
    [ Upstream commit 3e1b6469f8324bee5927b063e2aca30d3e56b907 ]
    
    Building lpddr2_nvm with clang can result in a giant stack usage
    in one function:
    
    drivers/mtd/lpddr/lpddr2_nvm.c:399:12: error: stack frame size of 1144 bytes in function 'lpddr2_nvm_probe' [-Werror,-Wframe-larger-than=]
    
    The problem is that clang decides to build a copy of the mtd_info
    structure on the stack and then do a memcpy() into the actual version. It
    shouldn't really do it that way, but it's not strictly a bug either.
    
    As a workaround, use a static const version of the structure to assign
    most of the members upfront and then only set the few members that
    require runtime knowledge at probe time.
    
    Fixes: 96ba9dd65788 ("mtd: lpddr: add driver for LPDDR2-NVM PCM memories")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Acked-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20200505140136.263461-1-arnd@arndb.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1564884a41760e492dd702528ea644a7c8b6e407
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Aug 18 15:05:22 2020 +0300

    RDMA/ucma: Add missing locking around rdma_leave_multicast()
    
    [ Upstream commit 38e03d092699891c3237b5aee9e8029d4ede0956 ]
    
    All entry points to the rdma_cm from a ULP must be single threaded,
    even this error unwinds. Add the missing locking.
    
    Fixes: 7c11910783a1 ("RDMA/ucma: Put a lock around every call to the rdma_cm layer")
    Link: https://lore.kernel.org/r/20200818120526.702120-11-leon@kernel.org
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc8ebd76b10a8b7169a81c532ba686af163d6c15
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Aug 18 15:05:21 2020 +0300

    RDMA/ucma: Fix locking for ctx->events_reported
    
    [ Upstream commit 98837c6c3d7285f6eca86480b6f7fac6880e27a8 ]
    
    This value is locked under the file->mut, ensure it is held whenever
    touching it.
    
    The case in ucma_migrate_id() is a race, while in ucma_free_uctx() it is
    already not possible for the write side to run, the movement is just for
    clarity.
    
    Fixes: 88314e4dda1e ("RDMA/cma: add support for rdma_migrate_id()")
    Link: https://lore.kernel.org/r/20200818120526.702120-10-leon@kernel.org
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22d8bebf634a1a5e753691822250f3844b693a48
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Wed Jul 4 10:03:27 2018 +0200

    powerpc/icp-hv: Fix missing of_node_put() in success path
    
    [ Upstream commit d3e669f31ec35856f5e85df9224ede5bdbf1bc7b ]
    
    Both of_find_compatible_node() and of_find_node_by_type() will return
    a refcounted node on success - thus for the success path the node must
    be explicitly released with a of_node_put().
    
    Fixes: 0b05ac6e2480 ("powerpc/xics: Rewrite XICS driver")
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1530691407-3991-1-git-send-email-hofrat@osadl.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2575bf272790affafe5440bafd7295cd89f6dba
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Mon Jul 2 11:08:16 2018 +0200

    powerpc/pseries: Fix missing of_node_put() in rng_init()
    
    [ Upstream commit 67c3e59443f5fc77be39e2ce0db75fbfa78c7965 ]
    
    The call to of_find_compatible_node() returns a node pointer with
    refcount incremented thus it must be explicitly decremented here
    before returning.
    
    Fixes: a489043f4626 ("powerpc/pseries: Implement arch_get_random_long() based on H_RANDOM")
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1530522496-14816-1-git-send-email-hofrat@osadl.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f74f179a335f55fde667fe27233eca6b1f975d7
Author: HÃ¥kon Bugge <haakon.bugge@oracle.com>
Date:   Mon Aug 3 08:19:41 2020 +0200

    IB/mlx4: Adjust delayed work when a dup is observed
    
    [ Upstream commit 785167a114855c5aa75efca97000e405c2cc85bf ]
    
    When scheduling delayed work to clean up the cache, if the entry already
    has been scheduled for deletion, we adjust the delay.
    
    Fixes: 3cf69cc8dbeb ("IB/mlx4: Add CM paravirtualization")
    Link: https://lore.kernel.org/r/20200803061941.1139994-7-haakon.bugge@oracle.com
    Signed-off-by: HÃ¥kon Bugge <haakon.bugge@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1fe669e9ad1935f7d8d917ad2ae130b4d11dc3a9
Author: HÃ¥kon Bugge <haakon.bugge@oracle.com>
Date:   Mon Aug 3 08:19:39 2020 +0200

    IB/mlx4: Fix starvation in paravirt mux/demux
    
    [ Upstream commit 7fd1507df7cee9c533f38152fcd1dd769fcac6ce ]
    
    The mlx4 driver will proxy MAD packets through the PF driver. A VM or an
    instantiated VF will send its MAD packets to the PF driver using
    loop-back. The PF driver will be informed by an interrupt, but defer the
    handling and polling of CQEs to a worker thread running on an ordered
    work-queue.
    
    Consider the following scenario: the VMs will in short proximity in time,
    for example due to a network event, send many MAD packets to the PF
    driver. Lets say there are K VMs, each sending N packets.
    
    The interrupt from the first VM will start the worker thread, which will
    poll N CQEs. A common case here is where the PF driver will multiplex the
    packets received from the VMs out on the wire QP.
    
    But before the wire QP has returned a send CQE and associated interrupt,
    the other K - 1 VMs have sent their N packets as well.
    
    The PF driver has to multiplex K * N packets out on the wire QP. But the
    send-queue on the wire QP has a finite capacity.
    
    So, in this scenario, if K * N is larger than the send-queue capacity of
    the wire QP, we will get MAD packets dropped on the floor with this
    dynamic debug message:
    
    mlx4_ib_multiplex_mad: failed sending GSI to wire on behalf of slave 2 (-11)
    
    and this despite the fact that the wire send-queue could have capacity,
    but the PF driver isn't aware, because the wire send CQEs have not yet
    been polled.
    
    We can also have a similar scenario inbound, with a wire recv-queue larger
    than the tunnel QP's send-queue. If many remote peers send MAD packets to
    the very same VM, the tunnel send-queue destined to the VM could allegedly
    be construed to be full by the PF driver.
    
    This starvation is fixed by introducing separate work queues for the wire
    QPs vs. the tunnel QPs.
    
    With this fix, using a dual ported HCA, 8 VFs instantiated, we could run
    cmtime on each of the 18 interfaces towards a similar configured peer,
    each cmtime instance with 800 QPs (all in all 14400 QPs) without a single
    CM packet getting lost.
    
    Fixes: 3cf69cc8dbeb ("IB/mlx4: Add CM paravirtualization")
    Link: https://lore.kernel.org/r/20200803061941.1139994-5-haakon.bugge@oracle.com
    Signed-off-by: HÃ¥kon Bugge <haakon.bugge@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d44d75812cf8908c30d9f104bde8c8b84206816
Author: Parshuram Thombare <pthombar@cadence.com>
Date:   Thu May 21 11:32:22 2020 +0200

    i3c: master add i3c_master_attach_boardinfo to preserve boardinfo
    
    [ Upstream commit 9da36a7ec42135428e1d41621e3703429bda3b2e ]
    
    Boardinfo was lost if I3C object for devices with boardinfo
    available are not created or not added to the I3C device list
    because of some failure e.g. SETDASA failed, retrieve info failed etc
    This patch adds i3c_master_attach_boardinfo which scan boardinfo list
    in the master object and 'attach' it to the I3C device object.
    
    Fixes: 3a379bbcea0a ("i3c: Add core I3C infrastructure")
    Signed-off-by: Parshuram Thombare <pthombar@cadence.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@collabora.com>
    Link: https://lore.kernel.org/linux-i3c/1590053542-389-1-git-send-email-pthombar@cadence.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7f826cd20a684b75c8d035fe1fe2def731ee3e5
Author: Tom Zanussi <zanussi@kernel.org>
Date:   Tue Oct 13 09:17:56 2020 -0500

    selftests/ftrace: Change synthetic event name for inter-event-combined test
    
    [ Upstream commit 96378b2088faea68f1fb05ea6b9a566fc569a44c ]
    
    This test uses waking+wakeup_latency as an event name, which doesn't
    make sense since it includes an operator.  Illegal names are now
    detected by the synthetic event command parsing, which causes this
    test to fail.  Change the name to 'waking_plus_wakeup_latency' to
    prevent this.
    
    Link: https://lkml.kernel.org/r/a1ee2f76ff28ef7166fb788ca8be968887808920.1602598160.git.zanussi@kernel.org
    
    Fixes: f06eec4d0f2c (selftests: ftrace: Add inter-event hist triggers testcases)
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Tested-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Tom Zanussi <zanussi@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17ed6448b00cc37ea812460699af4d4fbaea3f7b
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Wed Oct 14 13:45:28 2020 -0700

    fs: fix NULL dereference due to data race in prepend_path()
    
    [ Upstream commit 09cad07547445bf3a41683e4d3abcd154c123ef5 ]
    
    Fix data race in prepend_path() with re-reading mnt->mnt_ns twice
    without holding the lock.
    
    is_mounted() does check for NULL, but is_anon_ns(mnt->mnt_ns) might
    re-read the pointer again which could be NULL already, if in between
    reads one of kern_unmount()/kern_unmount_array()/umount_tree() sets
    mnt->mnt_ns to NULL.
    
    This is seen in production with the following stack trace:
    
      BUG: kernel NULL pointer dereference, address: 0000000000000048
      ...
      RIP: 0010:prepend_path.isra.4+0x1ce/0x2e0
      Call Trace:
        d_path+0xe6/0x150
        proc_pid_readlink+0x8f/0x100
        vfs_readlink+0xf8/0x110
        do_readlinkat+0xfd/0x120
        __x64_sys_readlinkat+0x1a/0x20
        do_syscall_64+0x42/0x110
        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: f2683bd8d5bd ("[PATCH] fix d_absolute_path() interplay with fsmount()")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91e4c12a3bf4cd6723eb9b599dfab9c16ab2c281
Author: Suren Baghdasaryan <surenb@google.com>
Date:   Tue Oct 13 16:58:35 2020 -0700

    mm, oom_adj: don't loop through tasks in __set_oom_adj when not necessary
    
    [ Upstream commit 67197a4f28d28d0b073ab0427b03cb2ee5382578 ]
    
    Currently __set_oom_adj loops through all processes in the system to keep
    oom_score_adj and oom_score_adj_min in sync between processes sharing
    their mm.  This is done for any task with more that one mm_users, which
    includes processes with multiple threads (sharing mm and signals).
    However for such processes the loop is unnecessary because their signal
    structure is shared as well.
    
    Android updates oom_score_adj whenever a tasks changes its role
    (background/foreground/...) or binds to/unbinds from a service, making it
    more/less important.  Such operation can happen frequently.  We noticed
    that updates to oom_score_adj became more expensive and after further
    investigation found out that the patch mentioned in "Fixes" introduced a
    regression.  Using Pixel 4 with a typical Android workload, write time to
    oom_score_adj increased from ~3.57us to ~362us.  Moreover this regression
    linearly depends on the number of multi-threaded processes running on the
    system.
    
    Mark the mm with a new MMF_MULTIPROCESS flag bit when task is created with
    (CLONE_VM && !CLONE_THREAD && !CLONE_VFORK).  Change __set_oom_adj to use
    MMF_MULTIPROCESS instead of mm_users to decide whether oom_score_adj
    update should be synchronized between multiple processes.  To prevent
    races between clone() and __set_oom_adj(), when oom_score_adj of the
    process being cloned might be modified from userspace, we use
    oom_adj_mutex.  Its scope is changed to global.
    
    The combination of (CLONE_VM && !CLONE_THREAD) is rarely used except for
    the case of vfork().  To prevent performance regressions of vfork(), we
    skip taking oom_adj_mutex and setting MMF_MULTIPROCESS when CLONE_VFORK is
    specified.  Clearing the MMF_MULTIPROCESS flag (when the last process
    sharing the mm exits) is left out of this patch to keep it simple and
    because it is believed that this threading model is rare.  Should there
    ever be a need for optimizing that case as well, it can be done by hooking
    into the exit path, likely following the mm_update_next_owner pattern.
    
    With the combination of (CLONE_VM && !CLONE_THREAD && !CLONE_VFORK) being
    quite rare, the regression is gone after the change is applied.
    
    [surenb@google.com: v3]
      Link: https://lkml.kernel.org/r/20200902012558.2335613-1-surenb@google.com
    
    Fixes: 44a70adec910 ("mm, oom_adj: make sure processes sharing mm have same view of oom_score_adj")
    Reported-by: Tim Murray <timmurray@google.com>
    Suggested-by: Michal Hocko <mhocko@kernel.org>
    Signed-off-by: Suren Baghdasaryan <surenb@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Eugene Syromiatnikov <esyr@redhat.com>
    Cc: Christian Kellner <christian@kellner.me>
    Cc: Adrian Reber <areber@redhat.com>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Aleksa Sarai <cyphar@cyphar.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Alexey Gladkov <gladkov.alexey@gmail.com>
    Cc: Michel Lespinasse <walken@google.com>
    Cc: Daniel Jordan <daniel.m.jordan@oracle.com>
    Cc: Andrei Vagin <avagin@gmail.com>
    Cc: Bernd Edlinger <bernd.edlinger@hotmail.de>
    Cc: John Johansen <john.johansen@canonical.com>
    Cc: Yafang Shao <laoar.shao@gmail.com>
    Link: https://lkml.kernel.org/r/20200824153036.3201505-1-surenb@google.com
    Debugged-by: Minchan Kim <minchan@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a1656f1d19b815c8a11216b753118974987a390
Author: Ralph Campbell <rcampbell@nvidia.com>
Date:   Tue Oct 13 16:53:13 2020 -0700

    mm/memcg: fix device private memcg accounting
    
    [ Upstream commit 9a137153fc8798a89d8fce895cd0a06ea5b8e37c ]
    
    The code in mc_handle_swap_pte() checks for non_swap_entry() and returns
    NULL before checking is_device_private_entry() so device private pages are
    never handled.  Fix this by checking for non_swap_entry() after handling
    device private swap PTEs.
    
    I assume the memory cgroup accounting would be off somehow when moving
    a process to another memory cgroup.  Currently, the device private page
    is charged like a normal anonymous page when allocated and is uncharged
    when the page is freed so I think that path is OK.
    
    Signed-off-by: Ralph Campbell <rcampbell@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Jerome Glisse <jglisse@redhat.com>
    Cc: Balbir Singh <bsingharora@gmail.com>
    Cc: Ira Weiny <ira.weiny@intel.com>
    Link: https://lkml.kernel.org/r/20201009215952.2726-1-rcampbell@nvidia.com
    xFixes: c733a82874a7 ("mm/memcontrol: support MEMORY_DEVICE_PRIVATE")
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04fabdfcbf5d08b71485091ae5a595736a571bd5
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Tue Oct 13 16:52:30 2020 -0700

    mm/swapfile.c: fix potential memory leak in sys_swapon
    
    [ Upstream commit 822bca52ee7eb279acfba261a423ed7ac47d6f73 ]
    
    If we failed to drain inode, we would forget to free the swap address
    space allocated by init_swap_address_space() above.
    
    Fixes: dc617f29dbe5 ("vfs: don't allow writes to swap files")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Link: https://lkml.kernel.org/r/20200930101803.53884-1-linmiaohe@huawei.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8194371c4d606adce03d57a08e3439abec0422cf
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Oct 12 17:06:06 2020 +0200

    netfilter: nf_log: missing vlan offload tag and proto
    
    [ Upstream commit 0d9826bc18ce356e8909919ad681ad65d0a6061e ]
    
    Dump vlan tag and proto for the usual vlan offload case if the
    NF_LOG_MACDECODE flag is set on. Without this information the logging is
    misleading as there is no reference to the VLAN header.
    
    [12716.993704] test: IN=veth0 OUT= MACSRC=86:6c:92:ea:d6:73 MACDST=0e:3b:eb:86:73:76 VPROTO=8100 VID=10 MACPROTO=0800 SRC=192.168.10.2 DST=172.217.168.163 LEN=52 TOS=0x00 PREC=0x00 TTL=64 ID=2548 DF PROTO=TCP SPT=55848 DPT=80 WINDOW=501 RES=0x00 ACK FIN URGP=0
    [12721.157643] test: IN=veth0 OUT= MACSRC=86:6c:92:ea:d6:73 MACDST=0e:3b:eb:86:73:76 VPROTO=8100 VID=10 MACPROTO=0806 ARP HTYPE=1 PTYPE=0x0800 OPCODE=2 MACSRC=86:6c:92:ea:d6:73 IPSRC=192.168.10.2 MACDST=0e:3b:eb:86:73:76 IPDST=192.168.10.1
    
    Fixes: 83e96d443b37 ("netfilter: log: split family specific code to nf_log_{ip,ip6,common}.c files")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6aaab712d6abf4a7d57856ad4f050ad0de696fe
Author: Valentin Vidic <vvidic@valentin-vidic.from.hr>
Date:   Mon Oct 12 00:03:29 2020 +0200

    net: korina: fix kfree of rx/tx descriptor array
    
    [ Upstream commit 3af5f0f5c74ecbaf757ef06c3f80d56751277637 ]
    
    kmalloc returns KSEG0 addresses so convert back from KSEG1
    in kfree. Also make sure array is freed when the driver is
    unloaded from the kernel.
    
    Fixes: ef11291bcd5f ("Add support the Korina (IDT RC32434) Ethernet MAC")
    Signed-off-by: Valentin Vidic <vvidic@valentin-vidic.from.hr>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76c0e4b2a50f8905b253552e20771ac8a9f978e1
Author: Julian Anastasov <ja@ssi.bg>
Date:   Fri Oct 9 21:24:25 2020 +0300

    ipvs: clear skb->tstamp in forwarding path
    
    [ Upstream commit 7980d2eabde82be86c5be18aa3d07e88ec13c6a1 ]
    
    fq qdisc requires tstamp to be cleared in forwarding path
    
    Reported-by: Evgeny B <abt-admin@mail.ru>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=209427
    Suggested-by: Eric Dumazet <eric.dumazet@gmail.com>
    Fixes: 8203e2d844d3 ("net: clear skb->tstamp in forwarding paths")
    Fixes: fb420d5d91c1 ("tcp/fq: move back to CLOCK_MONOTONIC")
    Fixes: 80b14dee2bea ("net: Add a new socket option for a future transmit time.")
    Signed-off-by: Julian Anastasov <ja@ssi.bg>
    Reviewed-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c83fe15ecb14bd95596c23b5c0594051f4b8f33
Author: Tom Rix <trix@redhat.com>
Date:   Sun Oct 4 06:19:31 2020 -0700

    mwifiex: fix double free
    
    [ Upstream commit 53708f4fd9cfe389beab5c8daa763bcd0e0b4aef ]
    
    clang static analysis reports this problem:
    
    sdio.c:2403:3: warning: Attempt to free released memory
            kfree(card->mpa_rx.buf);
            ^~~~~~~~~~~~~~~~~~~~~~~
    
    When mwifiex_init_sdio() fails in its first call to
    mwifiex_alloc_sdio_mpa_buffer, it falls back to calling it
    again.  If the second alloc of mpa_tx.buf fails, the error
    handler will try to free the old, previously freed mpa_rx.buf.
    Reviewing the code, it looks like a second double free would
    happen with mwifiex_cleanup_sdio().
    
    So set both pointers to NULL when they are freed.
    
    Fixes: 5e6e3a92b9a4 ("wireless: mwifiex: initial commit for Marvell mwifiex driver")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Reviewed-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20201004131931.29782-1-trix@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91962ac35b48ba35b3d51adc501d81db99a16f46
Author: Vadim Pasternak <vadimp@nvidia.com>
Date:   Wed Sep 23 20:20:49 2020 +0300

    platform/x86: mlx-platform: Remove PSU EEPROM configuration
    
    [ Upstream commit c071afcea6ecf24a3c119f25ce9f71ffd55b5dc2 ]
    
    Remove PSU EEPROM configuration for systems class equipped with
    Mellanox chip Spectrume-2. Till now all the systems from this class
    used few types of power units, all equipped with EEPROM device with
    address space two bytes. Thus, all these devices have been handled by
    EEPROM driver "24c32".
    There is a new requirement is to support power unit replacement by "off
    the shelf" device, matching electrical required parameters. Such device
    could be equipped with different EEPROM type, which could be one byte
    address space addressing or even could be not equipped with EEPROM.
    In such case "24c32" will not work.
    
    Fixes: 1bd42d94ccab ("platform/x86: mlx-platform: Add support for new 200G IB and Ethernet systems")
    Signed-off-by: Vadim Pasternak <vadimp@nvidia.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20200923172053.26296-2-vadimp@nvidia.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dddb49f4152a9f2908e212b6e1fc357818cfee2c
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Mon Oct 5 22:52:12 2020 +0800

    ipmi_si: Fix wrong return value in try_smi_init()
    
    [ Upstream commit 8fe7990ceda8597e407d06bffc4bdbe835a93ece ]
    
    On an error exit path, a negative error code should be returned
    instead of a positive return value.
    
    Fixes: 90b2d4f15ff7 ("ipmi_si: Remove hacks for adding a dummy platform devices")
    Cc: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Message-Id: <20201005145212.84435-1-tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2a98fec2d1ee06483f7668d07b5ac9a21433363
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Sep 28 12:13:00 2020 +0300

    scsi: be2iscsi: Fix a theoretical leak in beiscsi_create_eqs()
    
    [ Upstream commit 38b2db564d9ab7797192ef15d7aade30633ceeae ]
    
    The be_fill_queue() function can only fail when "eq_vaddress" is NULL and
    since it's non-NULL here that means the function call can't fail.  But
    imagine if it could, then in that situation we would want to store the
    "paddr" so that dma memory can be released.
    
    Link: https://lore.kernel.org/r/20200928091300.GD377727@mwanda
    Fixes: bfead3b2cb46 ("[SCSI] be2iscsi: Adding msix and mcc_rings V3")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9899e57bd714878a04288214e49be01600033eab
Author: John Donnelly <john.p.donnelly@oracle.com>
Date:   Wed Sep 23 17:19:20 2020 -0700

    scsi: target: tcmu: Fix warning: 'page' may be used uninitialized
    
    [ Upstream commit 61741d8699e1fc764a309ebd20211bb1cb193110 ]
    
    Corrects drivers/target/target_core_user.c:688:6: warning: 'page' may be
    used uninitialized.
    
    Link: https://lore.kernel.org/r/20200924001920.43594-1-john.p.donnelly@oracle.com
    Fixes: 3c58f737231e ("scsi: target: tcmu: Optimize use of flush_dcache_page")
    Cc: Mike Christie <michael.christie@oracle.com>
    Acked-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: John Donnelly <john.p.donnelly@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fb431e69ad6b2bea61e3d5e92e8b3e89a77b003
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Thu Sep 24 18:08:39 2020 +0400

    usb: dwc2: Fix INTR OUT transfers in DDMA mode.
    
    [ Upstream commit b2c586eb07efab982419f32b7c3bd96829bc8bcd ]
    
    In DDMA mode if INTR OUT transfers mps not multiple of 4 then single packet
    corresponds to single descriptor.
    
    Descriptor limit set to mps and desc chain limit set to mps *
    MAX_DMA_DESC_NUM_GENERIC. On that descriptors complete, to calculate
    transfer size should be considered correction value for each descriptor.
    
    In start request function, if "continue" is true then dma buffer address
    should be incremmented by offset for all type of transfers, not only for
    Control DATA_OUT transfers.
    
    Fixes: cf77b5fb9b394 ("usb: dwc2: gadget: Transfer length limit checking for DDMA")
    Fixes: e02f9aa6119e0 ("usb: dwc2: gadget: EP 0 specific DDMA programming")
    Fixes: aa3e8bc81311e ("usb: dwc2: gadget: DDMA transfer start and complete")
    
    Signed-off-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fed2b5657e429f826316fd065a7975670028ab0
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Sep 28 13:07:18 2020 +0200

    nl80211: fix non-split wiphy information
    
    [ Upstream commit ab10c22bc3b2024f0c9eafa463899a071eac8d97 ]
    
    When dumping wiphy information, we try to split the data into
    many submessages, but for old userspace we still support the
    old mode where this doesn't happen.
    
    However, in this case we were not resetting our state correctly
    and dumping multiple messages for each wiphy, which would have
    broken such older userspace.
    
    This was broken pretty much immediately afterwards because it
    only worked in the original commit where non-split dumps didn't
    have any more data than split dumps...
    
    Fixes: fe1abafd942f ("nl80211: re-add channel width and extended capa advertising")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Link: https://lore.kernel.org/r/20200928130717.3e6d9c6bada2.Ie0f151a8d0d00a8e1e18f6a8c9244dd02496af67@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6aa25d03dfb5e6a29a54bcbd635829f537b27a9e
Author: Lorenzo Colitti <lorenzo@google.com>
Date:   Wed Aug 19 01:19:49 2020 +0900

    usb: gadget: u_ether: enable qmult on SuperSpeed Plus as well
    
    [ Upstream commit 4eea21dc67b0c6ba15ae41b1defa113a680a858e ]
    
    The u_ether driver has a qmult setting that multiplies the
    transmit queue length (which by default is 2).
    
    The intent is that it should be enabled at high/super speed, but
    because the code does not explicitly check for USB_SUPER_PLUS,
    it is disabled at that speed.
    
    Fix this by ensuring that the queue multiplier is enabled for any
    wired link at high speed or above. Using >= for USB_SPEED_*
    constants seems correct because it is what the gadget_is_xxxspeed
    functions do.
    
    The queue multiplier substantially helps performance at higher
    speeds. On a direct SuperSpeed Plus link to a Linux laptop,
    iperf3 single TCP stream:
    
    Before (qmult=1): 1.3 Gbps
    After  (qmult=5): 3.2 Gbps
    
    Fixes: 04617db7aa68 ("usb: gadget: add SS descriptors to Ethernet gadget")
    Reviewed-by: Maciej Å»enczykowski <maze@google.com>
    Signed-off-by: Lorenzo Colitti <lorenzo@google.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9af716ed41e45c0c039ea7ecbc1e41a852546b0d
Author: Lorenzo Colitti <lorenzo@google.com>
Date:   Tue Aug 25 14:55:03 2020 +0900

    usb: gadget: f_ncm: fix ncm_bitrate for SuperSpeed and above.
    
    [ Upstream commit 986499b1569af980a819817f17238015b27793f6 ]
    
    Currently, SuperSpeed NCM gadgets report a speed of 851 Mbps
    in USB_CDC_NOTIFY_SPEED_CHANGE. But the calculation appears to
    assume 16 packets per microframe, and USB 3 and above no longer
    use microframes.
    
    Maximum speed is actually much higher. On a direct connection,
    theoretical throughput is at most 3.86 Gbps for gen1x1 and
    9.36 Gbps for gen2x1, and I have seen gadget->host iperf
    throughput of >2 Gbps for gen1x1 and >4 Gbps for gen2x1.
    
    Unfortunately the ConnectionSpeedChange defined in the CDC spec
    only uses 32-bit values, so we can't report accurate numbers for
    10Gbps and above. So, report 3.75Gbps for SuperSpeed (which is
    roughly maximum theoretical performance) and 4.25Gbps for
    SuperSpeed Plus (which is close to the maximum that we can report
    in a 32-bit unsigned integer).
    
    This results in:
    
    [50879.191272] cdc_ncm 2-2:1.0 enx228b127e050c: renamed from usb0
    [50879.234778] cdc_ncm 2-2:1.0 enx228b127e050c: 3750 mbit/s downlink 3750 mbit/s uplink
    
    on SuperSpeed and:
    
    [50798.434527] cdc_ncm 8-2:1.0 enx228b127e050c: renamed from usb0
    [50798.524278] cdc_ncm 8-2:1.0 enx228b127e050c: 4250 mbit/s downlink 4250 mbit/s uplink
    
    on SuperSpeed Plus.
    
    Fixes: 1650113888fe ("usb: gadget: f_ncm: add SuperSpeed descriptors for CDC NCM")
    Reviewed-by: Maciej Å»enczykowski <maze@google.com>
    Signed-off-by: Lorenzo Colitti <lorenzo@google.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f002b5172b2be94f674c34b35fbe61dad3ba13e
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Wed Sep 30 10:31:20 2020 +0300

    iwlwifi: mvm: split a print to avoid a WARNING in ROC
    
    [ Upstream commit 903b3f9badf1d54f77b468b96706dab679b45b14 ]
    
    A print in the remain on channel code was too long and caused
    a WARNING, split it.
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Fixes: dc28e12f2125 ("iwlwifi: mvm: ROC: Extend the ROC max delay duration & limit ROC duration")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20200930102759.58d57c0bdc68.Ib06008665e7bf1199c360aa92691d9c74fb84990@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1dbf9d994b12067f3b61a01e3ab514197361a340
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Sep 11 14:33:26 2020 +0300

    mfd: sm501: Fix leaks in probe()
    
    [ Upstream commit 8ce24f8967df2836b4557a23e74dc4bb098249f1 ]
    
    This code should clean up if sm501_init_dev() fails.
    
    Fixes: b6d6454fdb66 ("[PATCH] mfd: SM501 core driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df63949a2750598a89afa856037a02ff991fd58e
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Sep 29 22:25:10 2020 +0200

    net: enic: Cure the enic api locking trainwreck
    
    [ Upstream commit a53b59ece86c86d16d12ccdaa1ad0c78250a9d96 ]
    
    enic_dev_wait() has a BUG_ON(in_interrupt()).
    
    Chasing the callers of enic_dev_wait() revealed the gems of enic_reset()
    and enic_tx_hang_reset() which are both invoked through work queues in
    order to be able to call rtnl_lock(). So far so good.
    
    After locking rtnl both functions acquire enic::enic_api_lock which
    serializes against the (ab)use from infiniband. This is where the
    trainwreck starts.
    
    enic::enic_api_lock is a spin_lock() which implicitly disables preemption,
    but both functions invoke a ton of functions under that lock which can
    sleep. The BUG_ON(in_interrupt()) does not trigger in that case because it
    can't detect the preempt disabled condition.
    
    This clearly has never been tested with any of the mandatory debug options
    for 7+ years, which would have caught that for sure.
    
    Cure it by adding a enic_api_busy member to struct enic, which is modified
    and evaluated with enic::enic_api_lock held.
    
    If enic_api_devcmd_proxy_by_index() observes enic::enic_api_busy as true,
    it drops enic::enic_api_lock and busy waits for enic::enic_api_busy to
    become false.
    
    It would be smarter to wait for a completion of that busy period, but
    enic_api_devcmd_proxy_by_index() is called with other spin locks held which
    obviously can't sleep.
    
    Remove the BUG_ON(in_interrupt()) check as well because it's incomplete and
    with proper debugging enabled the problem would have been caught from the
    debug checks in schedule_timeout().
    
    Fixes: 0b038566c0ea ("drivers/net: enic: Add an interface for USNIC to interact with firmware")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c48d6e80e705c46d58a74738d53994c496dd5ea
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Wed Jul 1 16:55:28 2020 +0200

    iio: adc: stm32-adc: fix runtime autosuspend delay when slow polling
    
    [ Upstream commit c537d3457542a398caa1fe58e0976c5f83cf7281 ]
    
    When the ADC is runtime suspended and starting a conversion, the stm32-adc
    driver calls pm_runtime_get_sync() that gets cascaded to the parent
    (e.g. runtime resume of stm32-adc-core driver). This also kicks the
    autosuspend delay (e.g. 2s) of the parent.
    Once the ADC is active, calling pm_runtime_get_sync() again (upon a new
    capture) won't kick the autosuspend delay for the parent (stm32-adc-core
    driver) as already active.
    
    Currently, this makes the stm32-adc-core driver go in suspend state
    every 2s when doing slow polling. As an example, doing a capture, e.g.
    cat in_voltageY_raw at a 0.2s rate, the auto suspend delay for the parent
    isn't refreshed. Once it expires, the parent immediately falls into
    runtime suspended state, in between two captures, as soon as the child
    driver falls into runtime suspend state:
    - e.g. after 2s, + child calls pm_runtime_put_autosuspend() + 100ms
      autosuspend delay of the child.
    - stm32-adc-core switches off regulators, clocks and so on.
    - They get switched on back again 100ms later in this example (at 2.2s).
    
    So, use runtime_idle() callback in stm32-adc-core driver to call
    pm_runtime_mark_last_busy() for the parent driver (stm32-adc-core),
    to avoid this.
    
    Fixes: 9bdbb1139ca1 ("iio: adc: stm32-adc: add power management support")
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Link: https://lore.kernel.org/r/1593615328-5180-1-git-send-email-fabrice.gasnier@st.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cbe5109aa47be52e96f596deff45a5881d5b2214
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Sep 25 14:22:24 2020 +0100

    qtnfmac: fix resource leaks on unsupported iftype error return path
    
    [ Upstream commit 63f6982075d890d7563e2469643f05a37d193f01 ]
    
    Currently if an unsupported iftype is detected the error return path
    does not free the cmd_skb leading to a resource leak. Fix this by
    free'ing cmd_skb.
    
    Addresses-Coverity: ("Resource leak")
    Fixes: 805b28c05c8e ("qtnfmac: prepare for AP_VLAN interface type support")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200925132224.21638-1-colin.king@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d3188378d9b6f50efbc3e8be324321f2dbc8d3c
Author: Lijun Pan <ljp@linux.ibm.com>
Date:   Sun Sep 27 19:06:25 2020 -0500

    ibmvnic: set up 200GBPS speed
    
    [ Upstream commit b9cd795b0e4860f482bf3741d12e1c8f3ec1cfc9 ]
    
    Set up the speed according to crq->query_phys_parms.rsp.speed.
    Fix IBMVNIC_10GBPS typo.
    
    Fixes: f8d6ae0d27ec ("ibmvnic: Report actual backing device speed and duplex values")
    Signed-off-by: Lijun Pan <ljp@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da012618c50239405866d4d54083cbbef83e0b44
Author: Tingwei Zhang <tingwei@codeaurora.org>
Date:   Mon Sep 28 10:34:56 2020 -0600

    coresight: etm: perf: Fix warning caused by etm_setup_aux failure
    
    [ Upstream commit 716f5652a13122364a65e694386b9b26f5e98c51 ]
    
    When coresight_build_path() fails on all the cpus, etm_setup_aux
    calls etm_free_aux() to free allocated event_data.
    WARN_ON(cpumask_empty(mask) will be triggered since cpu mask is empty.
    Check event_data->snk_config is not NULL first to avoid this
    warning.
    
    Fixes: f5200aa9831f38 ("coresight: perf: Refactor function free_event_data()")
    Reviewed-by: Mike Leach <mike.leach@linaro.org>
    Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Tingwei Zhang <tingwei@codeaurora.org>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Link: https://lore.kernel.org/r/20200928163513.70169-9-mathieu.poirier@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56365dbb3ec20561397b61183c530fd92897863f
Author: Rajkumar Manoharan <rmanohar@codeaurora.org>
Date:   Mon Sep 28 00:28:10 2020 -0700

    nl80211: fix OBSS PD min and max offset validation
    
    [ Upstream commit 6c8b6e4a5f745ec49286ac0a3f1d591a34818f82 ]
    
    The SRG min and max offset won't present when SRG Information Present of
    SR control field of Spatial Reuse Parameter Set element set to 0. Per
    spec. IEEE802.11ax D7.0, SRG OBSS PD Min Offset â¤ SRG OBSS PD Max
    Offset. Hence fix the constrain check to allow same values in both
    offset and also call appropriate nla_get function to read the values.
    
    Fixes: 796e90f42b7e ("cfg80211: add support for parsing OBBS_PD attributes")
    Signed-off-by: Rajkumar Manoharan <rmanohar@codeaurora.org>
    Link: https://lore.kernel.org/r/1601278091-20313-1-git-send-email-rmanohar@codeaurora.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99e8886339fa96e87657edfe3c436628c1ca6a3f
Author: Vadym Kochan <vadym.kochan@plvision.eu>
Date:   Wed Sep 23 23:44:56 2020 +0300

    nvmem: core: fix possibly memleak when use nvmem_cell_info_to_nvmem_cell()
    
    [ Upstream commit fc9eec4d643597cf4cb2fef17d48110e677610da ]
    
    Fix missing 'kfree_const(cell->name)' when call to
    nvmem_cell_info_to_nvmem_cell() in several places:
    
         * after nvmem_cell_info_to_nvmem_cell() failed during
           nvmem_add_cells()
    
         * during nvmem_device_cell_{read,write} when cell->name is
           kstrdup'ed() without calling kfree_const() at the end, but
           really there is no reason to do that 'dup, because the cell
           instance is allocated on the stack for some short period to be
           read/write without exposing it to the caller.
    
    So the new nvmem_cell_info_to_nvmem_cell_nodup() helper is introduced
    which is used to convert cell_info -> cell without name duplication as
    a lighweight version of nvmem_cell_info_to_nvmem_cell().
    
    Fixes: e2a5402ec7c6 ("nvmem: Add nvmem_device based consumer apis.")
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Acked-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Vadym Kochan <vadym.kochan@plvision.eu>
    Link: https://lore.kernel.org/r/20200923204456.14032-1-vadym.kochan@plvision.eu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 903bee2ebff13f9904e7d15f5d885b3d2a14a504
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Sep 25 16:35:52 2020 -0700

    HID: hid-input: fix stylus battery reporting
    
    [ Upstream commit 505f394fa239cecb76d916aa858f87ed7ea7fde4 ]
    
    With commit 4f3882177240 hid-input started clearing of "ignored" usages
    to avoid using garbage that might have been left in them. However
    "battery strength" usages should not be ignored, as we do want to
    use them.
    
    Fixes: 4f3882177240 ("HID: hid-input: clear unmapped usages")
    Reported-by: Kenneth Albanowski <kenalba@google.com>
    Tested-by: Kenneth Albanowski <kenalba@google.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ad7f52fe6683200f2fe29bdac1ca7706fd40bb8
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Fri Sep 18 18:26:00 2020 +0800

    ASoC: fsl_sai: Instantiate snd_soc_dai_driver
    
    [ Upstream commit 22a16145af824f91014d07f8664114859900b9e6 ]
    
    Instantiate snd_soc_dai_driver for independent symmetric control.
    Otherwise the symmetric setting may be overwritten by other
    instance.
    
    Fixes: 08fdf65e37d5 ("ASoC: fsl_sai: Add asynchronous mode support")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Link: https://lore.kernel.org/r/1600424760-32071-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56c1c45bb82daeaffcfcedc44c2d50521193e764
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Sep 25 10:55:20 2020 +0100

    slimbus: qcom-ngd-ctrl: disable ngd in qmi server down callback
    
    [ Upstream commit 709ec3f7fc5773ac4aa6fb22c3f0ac8103c674db ]
    
    In QMI new server notification we enable the NGD however during
    delete server notification we do not disable the NGD.
    
    This can lead to multiple instances of NGD being enabled, so make
    sure that we disable NGD in delete server callback to fix this issue!
    
    Fixes: 917809e2280b ("slimbus: ngd: Add qcom SLIMBus NGD driver")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20200925095520.27316-4-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5bfd32bb16dcaef10b3bfc982d2601eb3f2326b9
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Sep 25 10:55:19 2020 +0100

    slimbus: core: do not enter to clock pause mode in core
    
    [ Upstream commit df2c471c4ae07e18a0396db670dca2ef867c5153 ]
    
    Let the controller logic decide when to enter into clock pause mode!
    Entering in to pause mode during unregistration does not really make
    sense as the controller is totally going down at that point in time.
    
    Fixes: 4b14e62ad3c9e ("slimbus: Add support for 'clock-pause' feature")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20200925095520.27316-3-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9da3ff3368b76db3168736608774c98dde100a4c
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Sep 25 10:55:18 2020 +0100

    slimbus: core: check get_addr before removing laddr ida
    
    [ Upstream commit f97769fde678e111a1b7b165b380d8a3dfe54f4e ]
    
    logical address can be either assigned by the SLIMBus controller or the core.
    Core uses IDA in cases where get_addr callback is not provided by the
    controller.
    Core already has this check while allocating IDR, however during absence
    reporting this is not checked. This patch fixes this issue.
    
    Fixes: 46a2bb5a7f7e ("slimbus: core: Add slim controllers support")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20200925095520.27316-2-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7e2b1fe04bf5dc2b77f2493806d4babe1c9b6fb
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Sep 24 11:36:19 2020 -0700

    quota: clear padding in v2r1_mem2diskdqb()
    
    [ Upstream commit 3d3dc274ce736227e3197868ff749cff2f175f63 ]
    
    Freshly allocated memory contains garbage, better make sure
    to init all struct v2r1_disk_dqblk fields to avoid KMSAN report:
    
    BUG: KMSAN: uninit-value in qtree_entry_unused+0x137/0x1b0 fs/quota/quota_tree.c:218
    CPU: 0 PID: 23373 Comm: syz-executor.1 Not tainted 5.9.0-rc4-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x21c/0x280 lib/dump_stack.c:118
     kmsan_report+0xf7/0x1e0 mm/kmsan/kmsan_report.c:122
     __msan_warning+0x58/0xa0 mm/kmsan/kmsan_instr.c:219
     qtree_entry_unused+0x137/0x1b0 fs/quota/quota_tree.c:218
     v2r1_mem2diskdqb+0x43d/0x710 fs/quota/quota_v2.c:285
     qtree_write_dquot+0x226/0x870 fs/quota/quota_tree.c:394
     v2_write_dquot+0x1ad/0x280 fs/quota/quota_v2.c:333
     dquot_commit+0x4af/0x600 fs/quota/dquot.c:482
     ext4_write_dquot fs/ext4/super.c:5934 [inline]
     ext4_mark_dquot_dirty+0x4d8/0x6a0 fs/ext4/super.c:5985
     mark_dquot_dirty fs/quota/dquot.c:347 [inline]
     mark_all_dquot_dirty fs/quota/dquot.c:385 [inline]
     dquot_alloc_inode+0xc05/0x12b0 fs/quota/dquot.c:1755
     __ext4_new_inode+0x8204/0x9d70 fs/ext4/ialloc.c:1155
     ext4_tmpfile+0x41a/0x850 fs/ext4/namei.c:2686
     vfs_tmpfile+0x2a2/0x570 fs/namei.c:3283
     do_tmpfile fs/namei.c:3316 [inline]
     path_openat+0x4035/0x6a90 fs/namei.c:3359
     do_filp_open+0x2b8/0x710 fs/namei.c:3395
     do_sys_openat2+0xa88/0x1140 fs/open.c:1168
     do_sys_open fs/open.c:1184 [inline]
     __do_compat_sys_openat fs/open.c:1242 [inline]
     __se_compat_sys_openat+0x2a4/0x310 fs/open.c:1240
     __ia32_compat_sys_openat+0x56/0x70 fs/open.c:1240
     do_syscall_32_irqs_on arch/x86/entry/common.c:80 [inline]
     __do_fast_syscall_32+0x129/0x180 arch/x86/entry/common.c:139
     do_fast_syscall_32+0x6a/0xc0 arch/x86/entry/common.c:162
     do_SYSENTER_32+0x73/0x90 arch/x86/entry/common.c:205
     entry_SYSENTER_compat_after_hwframe+0x4d/0x5c
    RIP: 0023:0xf7ff4549
    Code: b8 01 10 06 03 74 b4 01 10 07 03 74 b0 01 10 08 03 74 d8 01 00 00 00 00 00 00 00 00 00 00 00 00 00 51 52 55 89 e5 0f 34 cd 80 <5d> 5a 59 c3 90 90 90 90 eb 0d 90 90 90 90 90 90 90 90 90 90 90 90
    RSP: 002b:00000000f55cd0cc EFLAGS: 00000296 ORIG_RAX: 0000000000000127
    RAX: ffffffffffffffda RBX: 00000000ffffff9c RCX: 0000000020000000
    RDX: 0000000000410481 RSI: 0000000000000000 RDI: 0000000000000000
    RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
    R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
    
    Uninit was created at:
     kmsan_save_stack_with_flags mm/kmsan/kmsan.c:143 [inline]
     kmsan_internal_poison_shadow+0x66/0xd0 mm/kmsan/kmsan.c:126
     kmsan_slab_alloc+0x8a/0xe0 mm/kmsan/kmsan_hooks.c:80
     slab_alloc_node mm/slub.c:2907 [inline]
     slab_alloc mm/slub.c:2916 [inline]
     __kmalloc+0x2bb/0x4b0 mm/slub.c:3982
     kmalloc include/linux/slab.h:559 [inline]
     getdqbuf+0x56/0x150 fs/quota/quota_tree.c:52
     qtree_write_dquot+0xf2/0x870 fs/quota/quota_tree.c:378
     v2_write_dquot+0x1ad/0x280 fs/quota/quota_v2.c:333
     dquot_commit+0x4af/0x600 fs/quota/dquot.c:482
     ext4_write_dquot fs/ext4/super.c:5934 [inline]
     ext4_mark_dquot_dirty+0x4d8/0x6a0 fs/ext4/super.c:5985
     mark_dquot_dirty fs/quota/dquot.c:347 [inline]
     mark_all_dquot_dirty fs/quota/dquot.c:385 [inline]
     dquot_alloc_inode+0xc05/0x12b0 fs/quota/dquot.c:1755
     __ext4_new_inode+0x8204/0x9d70 fs/ext4/ialloc.c:1155
     ext4_tmpfile+0x41a/0x850 fs/ext4/namei.c:2686
     vfs_tmpfile+0x2a2/0x570 fs/namei.c:3283
     do_tmpfile fs/namei.c:3316 [inline]
     path_openat+0x4035/0x6a90 fs/namei.c:3359
     do_filp_open+0x2b8/0x710 fs/namei.c:3395
     do_sys_openat2+0xa88/0x1140 fs/open.c:1168
     do_sys_open fs/open.c:1184 [inline]
     __do_compat_sys_openat fs/open.c:1242 [inline]
     __se_compat_sys_openat+0x2a4/0x310 fs/open.c:1240
     __ia32_compat_sys_openat+0x56/0x70 fs/open.c:1240
     do_syscall_32_irqs_on arch/x86/entry/common.c:80 [inline]
     __do_fast_syscall_32+0x129/0x180 arch/x86/entry/common.c:139
     do_fast_syscall_32+0x6a/0xc0 arch/x86/entry/common.c:162
     do_SYSENTER_32+0x73/0x90 arch/x86/entry/common.c:205
     entry_SYSENTER_compat_after_hwframe+0x4d/0x5c
    
    Fixes: 498c60153ebb ("quota: Implement quota format with 64-bit space and inode limits")
    Link: https://lore.kernel.org/r/20200924183619.4176790-1-edumazet@google.com
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Jan Kara <jack@suse.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fcd75ae29b539efbdf5a819e341bcad62577dca
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Fri Jul 24 23:03:54 2020 -0700

    usb: dwc2: Fix parameter type in function pointer prototype
    
    [ Upstream commit 362b9398c962c9ec563653444e15ef9032ef3a90 ]
    
    When booting up on a Raspberry Pi 4 with Control Flow Integrity checking
    enabled, the following warning/panic happens:
    
    [    1.626435] CFI failure (target: dwc2_set_bcm_params+0x0/0x4):
    [    1.632408] WARNING: CPU: 0 PID: 32 at kernel/cfi.c:30 __cfi_check_fail+0x54/0x5c
    [    1.640021] Modules linked in:
    [    1.643137] CPU: 0 PID: 32 Comm: kworker/0:1 Not tainted 5.8.0-rc6-next-20200724-00051-g89ba619726de #1
    [    1.652693] Hardware name: Raspberry Pi 4 Model B Rev 1.2 (DT)
    [    1.658637] Workqueue: events deferred_probe_work_func
    [    1.663870] pstate: 60000005 (nZCv daif -PAN -UAO BTYPE=--)
    [    1.669542] pc : __cfi_check_fail+0x54/0x5c
    [    1.673798] lr : __cfi_check_fail+0x54/0x5c
    [    1.678050] sp : ffff8000102bbaa0
    [    1.681419] x29: ffff8000102bbaa0 x28: ffffab09e21c7000
    [    1.686829] x27: 0000000000000402 x26: ffff0000f6e7c228
    [    1.692238] x25: 00000000fb7cdb0d x24: 0000000000000005
    [    1.697647] x23: ffffab09e2515000 x22: ffffab09e069a000
    [    1.703055] x21: 4c550309df1cf4c1 x20: ffffab09e2433c60
    [    1.708462] x19: ffffab09e160dc50 x18: ffff0000f6e8cc78
    [    1.713870] x17: 0000000000000041 x16: ffffab09e0bce6f8
    [    1.719278] x15: ffffab09e1c819b7 x14: 0000000000000003
    [    1.724686] x13: 00000000ffffefff x12: 0000000000000000
    [    1.730094] x11: 0000000000000000 x10: 00000000ffffffff
    [    1.735501] x9 : c932f7abfc4bc600 x8 : c932f7abfc4bc600
    [    1.740910] x7 : 077207610770075f x6 : ffff0000f6c38f00
    [    1.746317] x5 : 0000000000000000 x4 : 0000000000000000
    [    1.751723] x3 : 0000000000000000 x2 : 0000000000000000
    [    1.757129] x1 : ffff8000102bb7d8 x0 : 0000000000000032
    [    1.762539] Call trace:
    [    1.765030]  __cfi_check_fail+0x54/0x5c
    [    1.768938]  __cfi_check+0x5fa6c/0x66afc
    [    1.772932]  dwc2_init_params+0xd74/0xd78
    [    1.777012]  dwc2_driver_probe+0x484/0x6ec
    [    1.781180]  platform_drv_probe+0xb4/0x100
    [    1.785350]  really_probe+0x228/0x63c
    [    1.789076]  driver_probe_device+0x80/0xc0
    [    1.793247]  __device_attach_driver+0x114/0x160
    [    1.797857]  bus_for_each_drv+0xa8/0x128
    [    1.801851]  __device_attach.llvm.14901095709067289134+0xc0/0x170
    [    1.808050]  bus_probe_device+0x44/0x100
    [    1.812044]  deferred_probe_work_func+0x78/0xb8
    [    1.816656]  process_one_work+0x204/0x3c4
    [    1.820736]  worker_thread+0x2f0/0x4c4
    [    1.824552]  kthread+0x174/0x184
    [    1.827837]  ret_from_fork+0x10/0x18
    
    CFI validates that all indirect calls go to a function with the same
    exact function pointer prototype. In this case, dwc2_set_bcm_params
    is the target, which has a parameter of type 'struct dwc2_hsotg *',
    but it is being implicitly cast to have a parameter of type 'void *'
    because that is the set_params function pointer prototype. Make the
    function pointer protoype match the definitions so that there is no
    more violation.
    
    Fixes: 7de1debcd2de ("usb: dwc2: Remove platform static params")
    Link: https://github.com/ClangBuiltLinux/linux/issues/1107
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f70650083b9ee31b9b291d39d533b2f3577adec3
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Sep 22 10:38:56 2020 +0200

    ALSA: seq: oss: Avoid mutex lock for a long-time ioctl
    
    [ Upstream commit 2759caad2600d503c3b0ed800e7e03d2cd7a4c05 ]
    
    Recently we applied a fix to cover the whole OSS sequencer ioctls with
    the mutex for dealing with the possible races.  This works fine in
    general, but in theory, this may lead to unexpectedly long stall if an
    ioctl like SNDCTL_SEQ_SYNC is issued and an event with the far future
    timestamp was queued.
    
    For fixing such a potential stall, this patch changes the mutex lock
    applied conditionally excluding such an ioctl command.  Also, change
    the mutex_lock() with the interruptible version for user to allow
    escaping from the big-hammer mutex.
    
    Fixes: 80982c7e834e ("ALSA: seq: oss: Serialize ioctls")
    Suggested-by: Pavel Machek <pavel@ucw.cz>
    Link: https://lore.kernel.org/r/20200922083856.28572-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f04266d084d4a0d034831621302569e82e1b9e6
Author: Souptick Joarder <jrdr.linux@gmail.com>
Date:   Sun Sep 20 08:21:35 2020 +0530

    misc: mic: scif: Fix error handling path
    
    [ Upstream commit a81072a9c0ae734b7889929b0bc070fe3f353f0e ]
    
    Inside __scif_pin_pages(), when map_flags != SCIF_MAP_KERNEL it
    will call pin_user_pages_fast() to map nr_pages. However,
    pin_user_pages_fast() might fail with a return value -ERRNO.
    
    The return value is stored in pinned_pages->nr_pages. which in
    turn is passed to unpin_user_pages(), which expects
    pinned_pages->nr_pages >=0, else disaster.
    
    Fix this by assigning pinned_pages->nr_pages to 0 if
    pin_user_pages_fast() returns -ERRNO.
    
    Fixes: ba612aa8b487 ("misc: mic: SCIF memory registration and unregistration")
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Ira Weiny <ira.weiny@intel.com>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: John Hubbard <jhubbard@nvidia.com>
    Signed-off-by: Souptick Joarder <jrdr.linux@gmail.com>
    Link: https://lore.kernel.org/r/1600570295-29546-1-git-send-email-jrdr.linux@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7bf4cf31f57665265cb5102e80c6997efcc2f0b
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Sep 22 14:58:46 2020 +0300

    dmaengine: dmatest: Check list for emptiness before access its last entry
    
    [ Upstream commit b28de385b71abf31ce68ec0387638bee26ae9024 ]
    
    After writing a garbage to the channel we get an Oops in dmatest_chan_set()
    due to access to last entry in the empty list.
    
    [  212.670672] BUG: unable to handle page fault for address: fffffff000000020
    [  212.677562] #PF: supervisor read access in kernel mode
    [  212.682702] #PF: error_code(0x0000) - not-present page
    ...
    [  212.710074] RIP: 0010:dmatest_chan_set+0x149/0x2d0 [dmatest]
    [  212.715739] Code: e8 cc f9 ff ff 48 8b 1d 0d 55 00 00 48 83 7b 10 00 0f 84 63 01 00 00 48 c7 c7 d0 65 4d c0 e8 ee 4a f5 e1 48 89 c6 48 8b 43 10 <48> 8b 40 20 48 8b 78 58 48 85 ff 0f 84 f5 00 00 00 e8 b1 41 f5 e1
    
    Fix this by checking list for emptiness before accessing its last entry.
    
    Fixes: d53513d5dc28 ("dmaengine: dmatest: Add support for multi channel testing")
    Cc: Vladimir Murzin <vladimir.murzin@arm.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Tested-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Link: https://lore.kernel.org/r/20200922115847.30100-2-andriy.shevchenko@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ca39ef88adcab82223a1254ffdadbf4d64e024d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Sep 18 17:27:32 2020 +0300

    ath6kl: wmi: prevent a shift wrapping bug in ath6kl_wmi_delete_pstream_cmd()
    
    [ Upstream commit 6a950755cec1a90ddaaff3e4acb5333617441c32 ]
    
    The "tsid" is a user controlled u8 which comes from debugfs.  Values
    more than 15 are invalid because "active_tsids" is a 16 bit variable.
    If the value of "tsid" is more than 31 then that leads to a shift
    wrapping bug.
    
    Fixes: 8fffd9e5ec9e ("ath6kl: Implement support for QOS-enable and QOS-disable from userspace")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200918142732.GA909725@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 572a7d15f2d14c7d714064cbe66612419312f1a0
Author: Aswath Govindraju <a-govindraju@ti.com>
Date:   Thu Sep 10 17:56:24 2020 +0530

    spi: omap2-mcspi: Improve performance waiting for CHSTAT
    
    [ Upstream commit 7b1d96813317358312440d0d07abbfbeb0ef8d22 ]
    
    This reverts commit 13d515c796 (spi: omap2-mcspi: Switch to
    readl_poll_timeout()).
    
    The amount of time spent polling for the MCSPI_CHSTAT bits to be set on
    AM335x-icev2 platform is less than 1us (about 0.6us) in most cases, with
    or without using DMA. So, in most cases the function need not sleep.
    Also, setting the sleep_usecs to zero would not be optimal here because
    ktime_add_us() used in readl_poll_timeout() is slower compared to the
    direct addition used after the revert. So, it is sub-optimal to use
    readl_poll_timeout in this case.
    
    When DMA is not enabled, this revert results in an increase of about 27%
    in throughput and decrease of about 20% in CPU usage. However, the CPU
    usage and throughput are almost the same when used with DMA.
    
    Therefore, fix this by reverting the commit which switched to using
    readl_poll_timeout().
    
    Fixes: 13d515c796ad ("spi: omap2-mcspi: Switch to readl_poll_timeout()")
    Signed-off-by: Aswath Govindraju <a-govindraju@ti.com>
    Link: https://lore.kernel.org/r/20200910122624.8769-1-a-govindraju@ti.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98d0b2742fe0c02d0f704a055041fd08caf289b6
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sun Sep 20 22:37:33 2020 +0200

    net: dsa: rtl8366rb: Support all 4096 VLANs
    
    [ Upstream commit a7920efdd86d8a0d74402dbc80ead03b023294ba ]
    
    There is an off-by-one error in rtl8366rb_is_vlan_valid()
    making VLANs 0..4094 valid while it should be 1..4095.
    Fix it.
    
    Fixes: d8652956cf37 ("net: dsa: realtek-smi: Add Realtek SMI driver")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06ba92787790d534d8b5e7a89339ee182eedf030
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Fri Sep 11 19:31:39 2020 +0200

    ASoC: tlv320aic32x4: Fix bdiv clock rate derivation
    
    [ Upstream commit 40b37136287ba6b34aa2f1f6123f3d6d205dc2f0 ]
    
    Current code expects a single channel to be always used. Fix this
    situation by forwarding the number of channels used. Then fix the
    derivation of the bdiv clock rate.
    
    Fixes: 96c3bb00239d ("ASoC: tlv320aic32x4: Dynamically Determine Clocking")
    Suggested-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/r/20200911173140.29984-3-miquel.raynal@bootlin.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f5203a88ca4bad23cd21bf4d8397b9bfc186747
Author: Huang Guobin <huangguobin4@huawei.com>
Date:   Thu Sep 17 08:30:19 2020 -0400

    net: wilc1000: clean up resource in error path of init mon interface
    
    [ Upstream commit 55bd149978679742374c800e56e8f6bc74378bbe ]
    
    The wilc_wfi_init_mon_int() forgets to clean up resource when
    register_netdevice() failed. Add the missed call to fix it.
    And the return value of netdev_priv can't be NULL, so remove
    the unnecessary error handling.
    
    Fixes: 588713006ea4 ("staging: wilc1000: avoid the use of 'wilc_wfi_mon' static variable")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Huang Guobin <huangguobin4@huawei.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200917123019.206382-1-huangguobin4@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26751638ff09ccc874d0346b8aa1d90dde8c0b2e
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sat Sep 19 00:29:54 2020 +0200

    net: dsa: rtl8366: Skip PVID setting if not requested
    
    [ Upstream commit 3dfe8dde093a07e82fa472c0f8c29a7f6a2006a5 ]
    
    We go to lengths to determine whether the PVID should be set
    for this port or not, and then fail to take it into account.
    Fix this oversight.
    
    Fixes: d8652956cf37 ("net: dsa: realtek-smi: Add Realtek SMI driver")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11064fef1bb116de47e8de47db3ea794f05bddc8
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Sep 2 00:09:35 2020 +0200

    net: dsa: rtl8366: Refactor VLAN/PVID init
    
    [ Upstream commit 7e1301ed1881447d2a25f9c6423738c33cbca133 ]
    
    The VLANs and PVIDs on the RTL8366 utilizes a "member
    configuration" (MC) which is largely unexplained in the
    code.
    
    This set-up requires a special ordering: rtl8366_set_pvid()
    must be called first, followed by rtl8366_set_vlan(),
    else the MC will not be properly allocated. Relax this
    by factoring out the code obtaining an MC and reuse
    the helper in both rtl8366_set_pvid() and
    rtl8366_set_vlan() so we remove this strict ordering
    requirement.
    
    In the process, add some better comments and debug prints
    so people who read the code understand what is going on.
    
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09cb271bcbde7f13004b09abcfc2f9f2a2466b78
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Sep 2 00:09:34 2020 +0200

    net: dsa: rtl8366: Check validity of passed VLANs
    
    [ Upstream commit 6641a2c42b0a307b7638d10e5d4b90debc61389d ]
    
    The rtl8366_set_vlan() and rtl8366_set_pvid() get invalid
    VLANs tossed at it, especially VLAN0, something the hardware
    and driver cannot handle. Check validity and bail out like
    we do in the other callbacks.
    
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 714ca2d03282217733e85208d36018604a59edea
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Sep 18 16:17:51 2020 +0300

    xhci: don't create endpoint debugfs entry before ring buffer is set.
    
    [ Upstream commit 167657a1bb5fcde53ac304ce6c564bd90a2f9185 ]
    
    Make sure xHC completes the configure endpoint command and xhci driver
    sets the ring pointers correctly before we create the user readable
    debugfs file.
    
    In theory there was a small gap where a user could have read the
    debugfs file and cause a NULL pointer dereference error as ring
    pointer was not yet set, in practise we want this change to simplify
    the upcoming streams debugfs support.
    
    Fixes: 02b6fdc2a153 ("usb: xhci: Add debugfs interface for xHCI driver")
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20200918131752.16488-10-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a31fa71d979ec402cfd320ff81543895f9ed5fd
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Wed Sep 16 13:17:31 2020 -0600

    coresight: etm4x: Handle unreachable sink in perf mode
    
    [ Upstream commit 859d510e58dac94f0b204b7b5cccafbc130d2291 ]
    
    If the specified/hinted sink is not reachable from a subset of the CPUs,
    we could end up unable to trace the event on those CPUs. This
    is the best effort we could do until we support 1:1 configurations.
    Fail gracefully in such cases avoiding a WARN_ON, which can be easily
    triggered by the user on certain platforms (Arm N1SDP), with the following
    trace paths :
    
     CPU0
          \
           -- Funnel0 --> ETF0 -->
          /                        \
     CPU1                           \
                                      MainFunnel
     CPU2                           /
          \                        /
           -- Funnel1 --> ETF1 -->
          /
     CPU1
    
    $ perf record --per-thread -e cs_etm/@ETF0/u -- <app>
    
    could trigger the following WARNING, when the event is scheduled
    on CPU2.
    
    [10919.513250] ------------[ cut here ]------------
    [10919.517861] WARNING: CPU: 2 PID: 24021 at
    drivers/hwtracing/coresight/coresight-etm-perf.c:316 etm_event_start+0xf8/0x100
    ...
    
    [10919.564403] CPU: 2 PID: 24021 Comm: perf Not tainted 5.8.0+ #24
    [10919.570308] pstate: 80400089 (Nzcv daIf +PAN -UAO BTYPE=--)
    [10919.575865] pc : etm_event_start+0xf8/0x100
    [10919.580034] lr : etm_event_start+0x80/0x100
    [10919.584202] sp : fffffe001932f940
    [10919.587502] x29: fffffe001932f940 x28: fffffc834995f800
    [10919.592799] x27: 0000000000000000 x26: fffffe0011f3ced0
    [10919.598095] x25: fffffc837fce244c x24: fffffc837fce2448
    [10919.603391] x23: 0000000000000002 x22: fffffc8353529c00
    [10919.608688] x21: fffffc835bb31000 x20: 0000000000000000
    [10919.613984] x19: fffffc837fcdcc70 x18: 0000000000000000
    [10919.619281] x17: 0000000000000000 x16: 0000000000000000
    [10919.624577] x15: 0000000000000000 x14: 00000000000009f8
    [10919.629874] x13: 00000000000009f8 x12: 0000000000000018
    [10919.635170] x11: 0000000000000000 x10: 0000000000000000
    [10919.640467] x9 : fffffe00108cd168 x8 : 0000000000000000
    [10919.645763] x7 : 0000000000000020 x6 : 0000000000000001
    [10919.651059] x5 : 0000000000000002 x4 : 0000000000000001
    [10919.656356] x3 : 0000000000000000 x2 : 0000000000000000
    [10919.661652] x1 : fffffe836eb40000 x0 : 0000000000000000
    [10919.666949] Call trace:
    [10919.669382]  etm_event_start+0xf8/0x100
    [10919.673203]  etm_event_add+0x40/0x60
    [10919.676765]  event_sched_in.isra.134+0xcc/0x210
    [10919.681281]  merge_sched_in+0xb0/0x2a8
    [10919.685017]  visit_groups_merge.constprop.140+0x15c/0x4b8
    [10919.690400]  ctx_sched_in+0x15c/0x170
    [10919.694048]  perf_event_sched_in+0x6c/0xa0
    [10919.698130]  ctx_resched+0x60/0xa0
    [10919.701517]  perf_event_exec+0x288/0x2f0
    [10919.705425]  begin_new_exec+0x4c8/0xf58
    [10919.709247]  load_elf_binary+0x66c/0xf30
    [10919.713155]  exec_binprm+0x15c/0x450
    [10919.716716]  __do_execve_file+0x508/0x748
    [10919.720711]  __arm64_sys_execve+0x40/0x50
    [10919.724707]  do_el0_svc+0xf4/0x1b8
    [10919.728095]  el0_sync_handler+0xf8/0x124
    [10919.732003]  el0_sync+0x140/0x180
    
    Even though we don't support using separate sinks for the ETMs yet (e.g,
    for 1:1 configurations), we should at least honor the user's choice and
    handle the limitations gracefully, by simply skipping the tracing on ETMs
    which can't reach the requested sink.
    
    Fixes: f9d81a657bb8 ("coresight: perf: Allow tracing on hotplugged CPUs")
    Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
    Cc: Mike Leach <mike.leach@linaro.org>
    Reported-by: Jeremy Linton <jeremy.linton@arm.com>
    Tested-by: Jeremy Linton <jeremy.linton@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Link: https://lore.kernel.org/r/20200916191737.4001561-11-mathieu.poirier@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed8b90d303cf004e88d3f87365848327efe61939
Author: Stefan Agner <stefan@agner.ch>
Date:   Tue Sep 8 16:16:54 2020 +0200

    drm: mxsfb: check framebuffer pitch
    
    [ Upstream commit d5a0c816900419105a12e7471bf074319dfa34be ]
    
    The lcdif IP does not support a framebuffer pitch (stride) other than
    framebuffer width. Check for equality and reject the framebuffer
    otherwise.
    
    This prevents a distorted picture when using 640x800 and running the
    Mesa graphics stack. Mesa tries to use a cache aligned stride, which
    leads at that particular resolution to width != stride. Currently
    Mesa has no fallback behavior, but rejecting this configuration allows
    userspace to handle the issue correctly.
    
    Fixes: 45d59d704080 ("drm: Add new driver for MXSFB controller")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200908141654.266836-1-stefan@agner.ch
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8bc46fc01e4c9357bce45da58360703335586e5
Author: Pali RohÃ¡r <pali@kernel.org>
Date:   Mon Sep 7 15:27:16 2020 +0200

    cpufreq: armada-37xx: Add missing MODULE_DEVICE_TABLE
    
    [ Upstream commit c942d1542f1bc5001216fabce9cb8ffbe515777e ]
    
    CONFIG_ARM_ARMADA_37XX_CPUFREQ is tristate option and therefore this
    cpufreq driver can be compiled as a module. This patch adds missing
    MODULE_DEVICE_TABLE which generates correct modalias for automatic
    loading of this cpufreq driver when is compiled as an external module.
    
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Pali RohÃ¡r <pali@kernel.org>
    Fixes: 92ce45fb875d7 ("cpufreq: Add DVFS support for Armada 37xx")
    [ Viresh: Added __maybe_unused ]
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1122f2a7833c6cbf7c2ef89fe85cee171fe61d2c
Author: Ong Boon Leong <boon.leong.ong@intel.com>
Date:   Tue Sep 15 09:28:40 2020 +0800

    net: stmmac: use netif_tx_start|stop_all_queues() function
    
    [ Upstream commit 9f19306d166688a73356aa636c62e698bf2063cc ]
    
    The current implementation of stmmac_stop_all_queues() and
    stmmac_start_all_queues() will not work correctly when the value of
    tx_queues_to_use is changed through ethtool -L DEVNAME rx N tx M command.
    
    Also, netif_tx_start|stop_all_queues() are only needed in driver open()
    and close() only.
    
    Fixes: c22a3f48 net: stmmac: adding multiple napi mechanism
    
    Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
    Signed-off-by: Voon Weifeng <weifeng.voon@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 148b49be727703c22658263b53f2d8639665a3b3
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Thu Sep 10 16:21:26 2020 +0200

    scsi: mpt3sas: Fix sync irqs
    
    [ Upstream commit 45181eab8ba79ed7a41b549f00500c0093828521 ]
    
    _base_process_reply_queue() called from _base_interrupt() may schedule a
    new irq poll. Fix this by calling synchronize_irq() first.
    
    Also ensure that enable_irq() is called only when necessary to avoid
    "Unbalanced enable for IRQ..." errors.
    
    Link: https://lore.kernel.org/r/20200910142126.8147-1-thenzl@redhat.com
    Fixes: 320e77acb327 ("scsi: mpt3sas: Irq poll to avoid CPU hard lockups")
    Acked-by: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e757a39c2d84246094fcd734e466f9170b5a3ba8
Author: Eran Ben Elisha <eranbe@mellanox.com>
Date:   Tue Jun 16 12:07:10 2020 +0300

    net/mlx5: Don't call timecounter cyc2time directly from 1PPS flow
    
    [ Upstream commit 0d2ffdc8d4002a62de31ff7aa3bef28c843c3cbe ]
    
    Before calling timecounter_cyc2time(), clock->lock must be taken.
    Use mlx5_timecounter_cyc2time instead which guarantees a safe access.
    
    Fixes: afc98a0b46d8 ("net/mlx5: Update ptp_clock_event foreach PPS event")
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50185a14fe8e62d83af5cfae28504c150613b60d
Author: Thomas Preston <thomas.preston@codethink.co.uk>
Date:   Fri Aug 28 22:32:26 2020 +0100

    pinctrl: mcp23s08: Fix mcp23x17 precious range
    
    [ Upstream commit b9b7fb29433b906635231d0a111224efa009198c ]
    
    On page 23 of the datasheet [0] it says "The register remains unchanged
    until the interrupt is cleared via a read of INTCAP or GPIO." Include
    INTCAPA and INTCAPB registers in precious range, so that they aren't
    accidentally cleared when we read via debugfs.
    
    [0] https://ww1.microchip.com/downloads/en/DeviceDoc/20001952C.pdf
    
    Fixes: 8f38910ba4f6 ("pinctrl: mcp23s08: switch to regmap caching")
    Signed-off-by: Thomas Preston <thomas.preston@codethink.co.uk>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20200828213226.1734264-3-thomas.preston@codethink.co.uk
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e829cdd6d624ba30f522d808015e6759bd014c5
Author: Thomas Preston <thomas.preston@codethink.co.uk>
Date:   Fri Aug 28 22:32:25 2020 +0100

    pinctrl: mcp23s08: Fix mcp23x17_regmap initialiser
    
    [ Upstream commit b445f6237744df5e8d4f56f8733b2108c611220a ]
    
    The mcp23x17_regmap is initialised with structs named "mcp23x16".
    However, the mcp23s08 driver doesn't support the MCP23016 device yet, so
    this appears to be a typo.
    
    Fixes: 8f38910ba4f6 ("pinctrl: mcp23s08: switch to regmap caching")
    Signed-off-by: Thomas Preston <thomas.preston@codethink.co.uk>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20200828213226.1734264-2-thomas.preston@codethink.co.uk
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44a83bd3243b0f8a3eb45c82da1825004618a8ea
Author: Matthew Wilcox (Oracle) <willy@infradead.org>
Date:   Thu Sep 10 08:26:17 2020 -0700

    iomap: Clear page error before beginning a write
    
    [ Upstream commit e6e7ca92623a43156100306861272e04d46385fc ]
    
    If we find a page in write_begin which is !Uptodate, we need
    to clear any error on the page before starting to read data
    into it.  This matches how filemap_fault(), do_read_cache_page()
    and generic_file_buffered_read() handle PageError on !Uptodate pages.
    When calling iomap_set_range_uptodate() in __iomap_write_begin(), blocks
    were not being marked as uptodate.
    
    This was found with generic/127 and a specially modified kernel which
    would fail (some) readahead I/Os.  The test read some bytes in a prior
    page which caused readahead to extend into page 0x34.  There was
    a subsequent write to page 0x34, followed by a read to page 0x34.
    Because the blocks were still marked as !Uptodate, the read caused all
    blocks to be re-read, overwriting the write.  With this change, and the
    next one, the bytes which were written are marked as being Uptodate, so
    even though the page is still marked as !Uptodate, the blocks containing
    the written data are not re-read from storage.
    
    Fixes: 9dc55f1389f9 ("iomap: add support for sub-pagesize buffered I/O without buffer heads")
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82ef2b6a9b6c9f8d73bff02d58f0662b086a6923
Author: Steven Price <steven.price@arm.com>
Date:   Wed Sep 9 13:29:57 2020 +0100

    drm/panfrost: Ensure GPU quirks are always initialised
    
    [ Upstream commit 8c3c818c23a5bbce6ff180dd2ee04415241df77c ]
    
    The GPU 'CONFIG' registers used to work around hardware issues are
    cleared on reset so need to be programmed every time the GPU is reset.
    However panfrost_device_reset() failed to do this.
    
    To avoid this in future instead move the call to
    panfrost_gpu_init_quirks() to panfrost_gpu_power_on() so that the
    regsiters are always programmed just before the cores are powered.
    
    Fixes: f3ba91228e8e ("drm/panfrost: Add initial panfrost driver")
    Signed-off-by: Steven Price <steven.price@arm.com>
    Reviewed-by: Alyssa Rosenzweig <alyssa.rosenzweig@collabora.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200909122957.51667-1-steven.price@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a74f0f0a626519a662970355143614584e586aa3
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Tue Sep 1 14:59:41 2020 -0700

    drm/msm: Avoid div-by-zero in dpu_crtc_atomic_check()
    
    [ Upstream commit 22f760941844dbcee6ee446e1896532f6dff01ef ]
    
    The cstate->num_mixers member is only set to a non-zero value once
    dpu_encoder_virt_mode_set() is called, but the atomic check function can
    be called by userspace before that. Let's avoid the div-by-zero here and
    inside _dpu_crtc_setup_lm_bounds() by skipping this part of the atomic
    check if dpu_encoder_virt_mode_set() hasn't been called yet. This fixes
    an UBSAN warning:
    
     UBSAN: Undefined behaviour in drivers/gpu/drm/msm/disp/dpu1/dpu_crtc.c:860:31
     division by zero
     CPU: 7 PID: 409 Comm: frecon Tainted: G S                5.4.31 #128
     Hardware name: Google Trogdor (rev0) (DT)
     Call trace:
      dump_backtrace+0x0/0x14c
      show_stack+0x20/0x2c
      dump_stack+0xa0/0xd8
      __ubsan_handle_divrem_overflow+0xec/0x110
      dpu_crtc_atomic_check+0x97c/0x9d4
      drm_atomic_helper_check_planes+0x160/0x1c8
      drm_atomic_helper_check+0x54/0xbc
      drm_atomic_check_only+0x6a8/0x880
      drm_atomic_commit+0x20/0x5c
      drm_atomic_helper_set_config+0x98/0xa0
      drm_mode_setcrtc+0x308/0x5dc
      drm_ioctl_kernel+0x9c/0x114
      drm_ioctl+0x2ac/0x4b0
      drm_compat_ioctl+0xe8/0x13c
      __arm64_compat_sys_ioctl+0x184/0x324
      el0_svc_common+0xa4/0x154
      el0_svc_compat_handler+0x
    
    Cc: Abhinav Kumar <abhinavk@codeaurora.org>
    Cc: Jeykumar Sankaran <jsanka@codeaurora.org>
    Cc: Jordan Crouse <jcrouse@codeaurora.org>
    Cc: Sean Paul <seanpaul@chromium.org>
    Fixes: 25fdd5933e4c ("drm/msm: Add SDM845 DPU support")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Abhinav Kumar <abhinavk@codeaurora.org>
    Tested-by: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02bf8fbfb44509a8dc8c338c8adea83d714ea35b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Aug 24 11:57:35 2020 +0300

    HID: roccat: add bounds checking in kone_sysfs_write_settings()
    
    [ Upstream commit d4f98dbfe717490e771b6e701904bfcf4b4557f0 ]
    
    This code doesn't check if "settings->startup_profile" is within bounds
    and that could result in an out of bounds array access.  What the code
    does do is it checks if the settings can be written to the firmware, so
    it's possible that the firmware has a bounds check?  It's safer and
    easier to verify when the bounds checking is done in the kernel.
    
    Fixes: 14bf62cde794 ("HID: add driver for Roccat Kone gaming mouse")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d861784f0eb1cd548b7206bc59b5637f6a212ce
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Tue Aug 25 21:02:24 2020 +0800

    ASoC: fsl: imx-es8328: add missing put_device() call in imx_es8328_probe()
    
    [ Upstream commit e525db7e4b44c5b2b5aac0dad24e23cb58c54d22 ]
    
    if of_find_device_by_node() succeed, imx_es8328_probe() doesn't have
    a corresponding put_device(). Thus add a jump target to fix the exception
    handling for this function implementation.
    
    Fixes: 7e7292dba215 ("ASoC: fsl: add imx-es8328 machine driver")
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Link: https://lore.kernel.org/r/20200825130224.1488694-1-yukuai3@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23159b4375a4dbb46c55bbcb66d2ecc080bbbd3d
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Tue Aug 25 14:29:00 2020 +0800

    video: fbdev: radeon: Fix memleak in radeonfb_pci_register
    
    [ Upstream commit fe6c6a4af2be8c15bac77f7ea160f947c04840d1 ]
    
    When radeon_kick_out_firmware_fb() fails, info should be
    freed just like the subsequent error paths.
    
    Fixes: 069ee21a82344 ("fbdev: Fix loading of module radeonfb on PowerMac")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Mathieu Malaterre <malat@debian.org>
    Cc: Kangjie Lu <kjlu@umn.edu>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200825062900.11210-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2370d94aed414345bc3c367f188afb3838fd29ca
Author: Tom Rix <trix@redhat.com>
Date:   Wed Aug 5 07:52:08 2020 -0700

    video: fbdev: sis: fix null ptr dereference
    
    [ Upstream commit ad6f93e9cd56f0b10e9b22e3e137d17a1a035242 ]
    
    Clang static analysis reports this representative error
    
    init.c:2501:18: warning: Array access (from variable 'queuedata') results
      in a null pointer dereference
          templ |= ((queuedata[i] & 0xc0) << 3);
    
    This is the problem block of code
    
       if(ModeNo > 0x13) {
          ...
          if(SiS_Pr->ChipType == SIS_730) {
             queuedata = &FQBQData730[0];
          } else {
             queuedata = &FQBQData[0];
          }
       } else {
    
       }
    
    queuedata is not set in the else block
    
    Reviewing the old code, the arrays FQBQData730 and FQBQData were
    used directly.
    
    So hoist the setting of queuedata out of the if-else block.
    
    Fixes: 544393fe584d ("[PATCH] sisfb update")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Cc: Thomas Winischhofer <thomas@winischhofer.net>
    Cc: Andrew Morton <akpm@osdl.org>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200805145208.17727-1-trix@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67e65396cd567cd591e0b175b9146a8351307377
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Jul 23 18:02:27 2020 +0100

    video: fbdev: vga16fb: fix setting of pixclock because a pass-by-value error
    
    [ Upstream commit c72fab81ceaa54408b827a2f0486d9a0f4be34cf ]
    
    The pixclock is being set locally because it is being passed as a
    pass-by-value argument rather than pass-by-reference, so the computed
    pixclock is never being set in var->pixclock. Fix this by passing
    by reference.
    
    [This dates back to 2002, I found the offending commit from the git
    history git://git.kernel.org/pub/scm/linux/kernel/git/tglx/history.git ]
    
    Addresses-Coverity: ("Unused value")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Jani Nikula <jani.nikula@intel.com>
    [b.zolnierkie: minor patch summary fixup]
    [b.zolnierkie: removed "Fixes:" tag (not in upstream tree)]
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200723170227.996229-1-colin.king@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be700c52ae00666365ac1878abb02e0420fadd9a
Author: Souptick Joarder <jrdr.linux@gmail.com>
Date:   Wed Sep 2 02:51:11 2020 +0530

    drivers/virt/fsl_hypervisor: Fix error handling path
    
    [ Upstream commit 7f360bec37857bfd5a48cef21d86f58a09a3df63 ]
    
    First, when memory allocation for sg_list_unaligned failed, there
    is a bug of calling put_pages() as we haven't pinned any pages.
    
    Second, if get_user_pages_fast() failed we should unpin num_pinned
    pages.
    
    This will address both.
    
    As part of these changes, minor update in documentation.
    
    Fixes: 6db7199407ca ("drivers/virt: introduce Freescale hypervisor management driver")
    Signed-off-by: Souptick Joarder <jrdr.linux@gmail.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: John Hubbard <jhubbard@nvidia.com>
    Link: https://lore.kernel.org/r/1598995271-6755-1-git-send-email-jrdr.linux@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf12e769ff2a307ee8dd551d84e3a1b5d581d359
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Sep 3 13:23:24 2020 +0200

    pwm: lpss: Add range limit check for the base_unit register value
    
    [ Upstream commit ef9f60daab309558c8bb3e086a9a11ee40bd6061 ]
    
    When the user requests a high enough period ns value, then the
    calculations in pwm_lpss_prepare() might result in a base_unit value of 0.
    
    But according to the data-sheet the way the PWM controller works is that
    each input clock-cycle the base_unit gets added to a N bit counter and
    that counter overflowing determines the PWM output frequency. Adding 0
    to the counter is a no-op. The data-sheet even explicitly states that
    writing 0 to the base_unit bits will result in the PWM outputting a
    continuous 0 signal.
    
    When the user requestes a low enough period ns value, then the
    calculations in pwm_lpss_prepare() might result in a base_unit value
    which is bigger then base_unit_range - 1. Currently the codes for this
    deals with this by applying a mask:
    
            base_unit &= (base_unit_range - 1);
    
    But this means that we let the value overflow the range, we throw away the
    higher bits and store whatever value is left in the lower bits into the
    register leading to a random output frequency, rather then clamping the
    output frequency to the highest frequency which the hardware can do.
    
    This commit fixes both issues by clamping the base_unit value to be
    between 1 and (base_unit_range - 1).
    
    Fixes: 684309e5043e ("pwm: lpss: Avoid potential overflow of base_unit")
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200903112337.4113-5-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34f326e702fd710828d8548bf11542ec60d473e8
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Sep 3 13:23:23 2020 +0200

    pwm: lpss: Fix off by one error in base_unit math in pwm_lpss_prepare()
    
    [ Upstream commit 181f4d2f44463fe09fe4df02e03095cb87151c29 ]
    
    According to the data-sheet the way the PWM controller works is that
    each input clock-cycle the base_unit gets added to a N bit counter and
    that counter overflowing determines the PWM output frequency.
    
    So assuming e.g. a 16 bit counter this means that if base_unit is set to 1,
    after 65535 input clock-cycles the counter has been increased from 0 to
    65535 and it will overflow on the next cycle, so it will overflow after
    every 65536 clock cycles and thus the calculations done in
    pwm_lpss_prepare() should use 65536 and not 65535.
    
    This commit fixes this. Note this also aligns the calculations in
    pwm_lpss_prepare() with those in pwm_lpss_get_state().
    
    Note this effectively reverts commit 684309e5043e ("pwm: lpss: Avoid
    potential overflow of base_unit"). The next patch in this series really
    fixes the potential overflow of the base_unit value.
    
    Fixes: 684309e5043e ("pwm: lpss: Avoid potential overflow of base_unit")
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Uwe Kleine-KÃ¶nig <u.kleine-koenig@pengutronix.de>
    Acked-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200903112337.4113-4-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b6fb30cb49dc62d13779de129c88b7f39d4f1f7
Author: Artem Savkov <asavkov@redhat.com>
Date:   Wed Sep 2 14:00:45 2020 +0200

    pty: do tty_flip_buffer_push without port->lock in pty_write
    
    [ Upstream commit 71a174b39f10b4b93223d374722aa894b5d8a82e ]
    
    b6da31b2c07c "tty: Fix data race in tty_insert_flip_string_fixed_flag"
    puts tty_flip_buffer_push under port->lock introducing the following
    possible circular locking dependency:
    
    [30129.876566] ======================================================
    [30129.876566] WARNING: possible circular locking dependency detected
    [30129.876567] 5.9.0-rc2+ #3 Tainted: G S      W
    [30129.876568] ------------------------------------------------------
    [30129.876568] sysrq.sh/1222 is trying to acquire lock:
    [30129.876569] ffffffff92c39480 (console_owner){....}-{0:0}, at: console_unlock+0x3fe/0xa90
    
    [30129.876572] but task is already holding lock:
    [30129.876572] ffff888107cb9018 (&pool->lock/1){-.-.}-{2:2}, at: show_workqueue_state.cold.55+0x15b/0x6ca
    
    [30129.876576] which lock already depends on the new lock.
    
    [30129.876577] the existing dependency chain (in reverse order) is:
    
    [30129.876578] -> #3 (&pool->lock/1){-.-.}-{2:2}:
    [30129.876581]        _raw_spin_lock+0x30/0x70
    [30129.876581]        __queue_work+0x1a3/0x10f0
    [30129.876582]        queue_work_on+0x78/0x80
    [30129.876582]        pty_write+0x165/0x1e0
    [30129.876583]        n_tty_write+0x47f/0xf00
    [30129.876583]        tty_write+0x3d6/0x8d0
    [30129.876584]        vfs_write+0x1a8/0x650
    
    [30129.876588] -> #2 (&port->lock#2){-.-.}-{2:2}:
    [30129.876590]        _raw_spin_lock_irqsave+0x3b/0x80
    [30129.876591]        tty_port_tty_get+0x1d/0xb0
    [30129.876592]        tty_port_default_wakeup+0xb/0x30
    [30129.876592]        serial8250_tx_chars+0x3d6/0x970
    [30129.876593]        serial8250_handle_irq.part.12+0x216/0x380
    [30129.876593]        serial8250_default_handle_irq+0x82/0xe0
    [30129.876594]        serial8250_interrupt+0xdd/0x1b0
    [30129.876595]        __handle_irq_event_percpu+0xfc/0x850
    
    [30129.876602] -> #1 (&port->lock){-.-.}-{2:2}:
    [30129.876605]        _raw_spin_lock_irqsave+0x3b/0x80
    [30129.876605]        serial8250_console_write+0x12d/0x900
    [30129.876606]        console_unlock+0x679/0xa90
    [30129.876606]        register_console+0x371/0x6e0
    [30129.876607]        univ8250_console_init+0x24/0x27
    [30129.876607]        console_init+0x2f9/0x45e
    
    [30129.876609] -> #0 (console_owner){....}-{0:0}:
    [30129.876611]        __lock_acquire+0x2f70/0x4e90
    [30129.876612]        lock_acquire+0x1ac/0xad0
    [30129.876612]        console_unlock+0x460/0xa90
    [30129.876613]        vprintk_emit+0x130/0x420
    [30129.876613]        printk+0x9f/0xc5
    [30129.876614]        show_pwq+0x154/0x618
    [30129.876615]        show_workqueue_state.cold.55+0x193/0x6ca
    [30129.876615]        __handle_sysrq+0x244/0x460
    [30129.876616]        write_sysrq_trigger+0x48/0x4a
    [30129.876616]        proc_reg_write+0x1a6/0x240
    [30129.876617]        vfs_write+0x1a8/0x650
    
    [30129.876619] other info that might help us debug this:
    
    [30129.876620] Chain exists of:
    [30129.876621]   console_owner --> &port->lock#2 --> &pool->lock/1
    
    [30129.876625]  Possible unsafe locking scenario:
    
    [30129.876626]        CPU0                    CPU1
    [30129.876626]        ----                    ----
    [30129.876627]   lock(&pool->lock/1);
    [30129.876628]                                lock(&port->lock#2);
    [30129.876630]                                lock(&pool->lock/1);
    [30129.876631]   lock(console_owner);
    
    [30129.876633]  *** DEADLOCK ***
    
    [30129.876634] 5 locks held by sysrq.sh/1222:
    [30129.876634]  #0: ffff8881d3ce0470 (sb_writers#3){.+.+}-{0:0}, at: vfs_write+0x359/0x650
    [30129.876637]  #1: ffffffff92c612c0 (rcu_read_lock){....}-{1:2}, at: __handle_sysrq+0x4d/0x460
    [30129.876640]  #2: ffffffff92c612c0 (rcu_read_lock){....}-{1:2}, at: show_workqueue_state+0x5/0xf0
    [30129.876642]  #3: ffff888107cb9018 (&pool->lock/1){-.-.}-{2:2}, at: show_workqueue_state.cold.55+0x15b/0x6ca
    [30129.876645]  #4: ffffffff92c39980 (console_lock){+.+.}-{0:0}, at: vprintk_emit+0x123/0x420
    
    [30129.876648] stack backtrace:
    [30129.876649] CPU: 3 PID: 1222 Comm: sysrq.sh Tainted: G S      W         5.9.0-rc2+ #3
    [30129.876649] Hardware name: Intel Corporation 2012 Client Platform/Emerald Lake 2, BIOS ACRVMBY1.86C.0078.P00.1201161002 01/16/2012
    [30129.876650] Call Trace:
    [30129.876650]  dump_stack+0x9d/0xe0
    [30129.876651]  check_noncircular+0x34f/0x410
    [30129.876653]  __lock_acquire+0x2f70/0x4e90
    [30129.876656]  lock_acquire+0x1ac/0xad0
    [30129.876658]  console_unlock+0x460/0xa90
    [30129.876660]  vprintk_emit+0x130/0x420
    [30129.876660]  printk+0x9f/0xc5
    [30129.876661]  show_pwq+0x154/0x618
    [30129.876662]  show_workqueue_state.cold.55+0x193/0x6ca
    [30129.876664]  __handle_sysrq+0x244/0x460
    [30129.876665]  write_sysrq_trigger+0x48/0x4a
    [30129.876665]  proc_reg_write+0x1a6/0x240
    [30129.876666]  vfs_write+0x1a8/0x650
    
    It looks like the commit was aimed to protect tty_insert_flip_string and
    there is no need for tty_flip_buffer_push to be under this lock.
    
    Fixes: b6da31b2c07c ("tty: Fix data race in tty_insert_flip_string_fixed_flag")
    Signed-off-by: Artem Savkov <asavkov@redhat.com>
    Acked-by: Jiri Slaby <jirislaby@kernel.org>
    Link: https://lore.kernel.org/r/20200902120045.3693075-1-asavkov@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf94a8754f2a2ab3eea82a25a2ccef933df5533f
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Thu Aug 20 18:46:38 2020 -0500

    tty: hvcs: Don't NULL tty->driver_data until hvcs_cleanup()
    
    [ Upstream commit 63ffcbdad738e3d1c857027789a2273df3337624 ]
    
    The code currently NULLs tty->driver_data in hvcs_close() with the
    intent of informing the next call to hvcs_open() that device needs to be
    reconfigured. However, when hvcs_cleanup() is called we copy hvcsd from
    tty->driver_data which was previoulsy NULLed by hvcs_close() and our
    call to tty_port_put(&hvcsd->port) doesn't actually do anything since
    &hvcsd->port ends up translating to NULL by chance. This has the side
    effect that when hvcs_remove() is called we have one too many port
    references preventing hvcs_destuct_port() from ever being called. This
    also prevents us from reusing the /dev/hvcsX node in a future
    hvcs_probe() and we can eventually run out of /dev/hvcsX devices.
    
    Fix this by waiting to NULL tty->driver_data in hvcs_cleanup().
    
    Fixes: 27bf7c43a19c ("TTY: hvcs, add tty install")
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>
    Link: https://lore.kernel.org/r/20200820234643.70412-1-tyreld@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3f79d92ca718e24323b8370756b9bb80453a479
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Fri Aug 28 08:39:50 2020 -0400

    tty: serial: earlycon dependency
    
    [ Upstream commit 0fb9342d06b0f667b915ba58bfefc030e534a218 ]
    
    parse_options() in drivers/tty/serial/earlycon.c calls uart_parse_earlycon
    in drivers/tty/serial/serial_core.c therefore selecting SERIAL_EARLYCON
    should automatically select SERIAL_CORE, otherwise will result in symbol
    not found error during linking if SERIAL_CORE is not configured as builtin
    
    Fixes: 9aac5887595b ("tty/serial: add generic serial earlycon")
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Link: https://lore.kernel.org/r/20200828123949.2642-1-ztong0001@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b150aa2e3ef864df904acceb976d688d7ea19a6
Author: Jann Horn <jannh@google.com>
Date:   Thu Aug 6 18:53:59 2020 +0200

    binder: Remove bogus warning on failed same-process transaction
    
    [ Upstream commit e8b8ae7ce32e17a5c29f0289e9e2a39c7dcaa1b8 ]
    
    While binder transactions with the same binder_proc as sender and recipient
    are forbidden, transactions with the same task_struct as sender and
    recipient are possible (even though currently there is a weird check in
    binder_transaction() that rejects them in the target==0 case).
    Therefore, task_struct identities can't be used to distinguish whether
    the caller is running in the context of the sender or the recipient.
    
    Since I see no easy way to make this WARN_ON() useful and correct, let's
    just remove it.
    
    Fixes: 44d8047f1d87 ("binder: use standard functions to allocate fds")
    Reported-by: syzbot+e113a0b970b7b3f394ba@syzkaller.appspotmail.com
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Acked-by: Todd Kjos <tkjos@google.com>
    Signed-off-by: Jann Horn <jannh@google.com>
    Link: https://lore.kernel.org/r/20200806165359.2381483-1-jannh@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48c121a74fb62a9dd7d4f2be46f14f68cc5b9caa
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Wed Aug 19 16:22:28 2020 +0800

    drm/crc-debugfs: Fix memleak in crc_control_write
    
    [ Upstream commit f7ec68b341dbd5da13d4c65ce444dcd605f1c42e ]
    
    When verify_crc_source() fails, source needs to be freed.
    However, current code is returning directly and ends up
    leaking memory.
    
    Fixes: d5cc15a0c66e ("drm: crc: Introduce verify_crc_source callback")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    [danvet: change Fixes: tag per Laurent's review]
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200819082228.26847-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 751c4cf0ee6206a2b48b336c8af699cf9818adc4
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Mon Aug 24 03:32:54 2020 +0300

    drm: panel: Fix bpc for OrtusTech COM43H4M85ULC panel
    
    [ Upstream commit 3b8095169982ff4ec2a1b4be61b7224bbef23b48 ]
    
    The OrtusTech COM43H4M85ULC panel is a 18-bit RGB panel. Commit
    f098f168e91c ("drm: panel: Fix bus format for OrtusTech COM43H4M85ULC
    panel") has fixed the bus formats, but forgot to address the bpc value.
    Set it to 6.
    
    Fixes: f098f168e91c ("drm: panel: Fix bus format for OrtusTech COM43H4M85ULC panel")
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200824003254.21904-1-laurent.pinchart@ideasonboard.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d911c0e9fcf070688691bc65e32e7290c053ca45
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Thu Aug 27 15:01:10 2020 -0700

    mm/error_inject: Fix allow_error_inject function signatures.
    
    [ Upstream commit 76cd61739fd107a7f7ec4c24a045e98d8ee150f0 ]
    
    'static' and 'static noinline' function attributes make no guarantees that
    gcc/clang won't optimize them. The compiler may decide to inline 'static'
    function and in such case ALLOW_ERROR_INJECT becomes meaningless. The compiler
    could have inlined __add_to_page_cache_locked() in one callsite and didn't
    inline in another. In such case injecting errors into it would cause
    unpredictable behavior. It's worse with 'static noinline' which won't be
    inlined, but it still can be optimized. Like the compiler may decide to remove
    one argument or constant propagate the value depending on the callsite.
    
    To avoid such issues make sure that these functions are global noinline.
    
    Fixes: af3b854492f3 ("mm/page_alloc.c: allow error injection")
    Fixes: cfcbfb1382db ("mm/filemap.c: enable error injection at add_to_page_cache()")
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Link: https://lore.kernel.org/bpf/20200827220114.69225-2-alexei.starovoitov@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebc1d548a729f7a7f333935d3cec6244adaca1ef
Author: Alex Dewar <alex.dewar90@gmail.com>
Date:   Tue Aug 25 17:45:18 2020 +0100

    VMCI: check return value of get_user_pages_fast() for errors
    
    [ Upstream commit 90ca6333fd65f318c47bff425e1ea36c0a5539f6 ]
    
    In a couple of places in qp_host_get_user_memory(),
    get_user_pages_fast() is called without properly checking for errors. If
    e.g. -EFAULT is returned, this negative value will then be passed on to
    qp_release_pages(), which expects a u64 as input.
    
    Fix this by only calling qp_release_pages() when we have a positive
    number returned.
    
    Fixes: 06164d2b72aa ("VMCI: queue pairs implementation.")
    Signed-off-by: Alex Dewar <alex.dewar90@gmail.com>
    Link: https://lore.kernel.org/r/20200825164522.412392-1-alex.dewar90@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 659da2df0c5d056c3b024e9b19b9e9cea4abd4d4
Author: Alex Dewar <alex.dewar90@gmail.com>
Date:   Tue Aug 25 10:19:28 2020 +0100

    staging: emxx_udc: Fix passing of NULL to dma_alloc_coherent()
    
    [ Upstream commit cc34073c6248e9cec801bf690d1455f264d12357 ]
    
    In nbu2ss_eq_queue() memory is allocated with dma_alloc_coherent(),
    though, strangely, NULL is passed as the struct device* argument. Pass
    the UDC's device instead. Fix up the corresponding call to
    dma_free_coherent() in the same way.
    
    Build-tested on x86 only.
    
    Fixes: 33aa8d45a4fe ("staging: emxx_udc: Add Emma Mobile USB Gadget driver")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alex Dewar <alex.dewar90@gmail.com>
    Link: https://lore.kernel.org/r/20200825091928.55794-1-alex.dewar90@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f87f0236bdbb65871aeeaca7e2973712f216e40b
Author: dinghao.liu@zju.edu.cn <dinghao.liu@zju.edu.cn>
Date:   Thu Aug 20 14:38:17 2020 +0800

    backlight: sky81452-backlight: Fix refcount imbalance on error
    
    [ Upstream commit b7a4f80bc316a56d6ec8750e93e66f42431ed960 ]
    
    When of_property_read_u32_array() returns an error code, a
    pairing refcount decrement is needed to keep np's refcount
    balanced.
    
    Fixes: f705806c9f355 ("backlight: Add support Skyworks SKY81452 backlight driver")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 517f0785cef9f14510fd5843189f8a4931dc2efa
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:31 2020 +0800

    scsi: csiostor: Fix wrong return value in csio_hw_prep_fw()
    
    [ Upstream commit 44f4daf8678ae5f08c93bbe70792f90cd88e4649 ]
    
    On an error exit path, a negative error code should be returned instead of
    a positive return value.
    
    Link: https://lore.kernel.org/r/20200802111531.5065-1-tianjia.zhang@linux.alibaba.com
    Fixes: f40e74ffa3de ("csiostor:firmware upgrade fix")
    Cc: Praveen Madhavan <praveenm@chelsio.com>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a28b846431c69649f6d848a63451597f1d604f53
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:30 2020 +0800

    scsi: qla2xxx: Fix wrong return value in qla_nvme_register_hba()
    
    [ Upstream commit ca4fb89a3d714a770e9c73c649da830f3f4a5326 ]
    
    On an error exit path, a negative error code should be returned instead of
    a positive return value.
    
    Link: https://lore.kernel.org/r/20200802111530.5020-1-tianjia.zhang@linux.alibaba.com
    Fixes: 8777e4314d39 ("scsi: qla2xxx: Migrate NVME N2N handling into state machine")
    Cc: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 835e3a595aa321d67857fea3e06c7f78b8902976
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:28 2020 +0800

    scsi: qla2xxx: Fix wrong return value in qlt_chk_unresolv_exchg()
    
    [ Upstream commit bbf2d06a9d767718bfe6028d6288c03edb98554a ]
    
    In the case of a failed retry, a positive value EIO is returned here.  I
    think this is a typo error. It is necessary to return an error value.
    
    [mkp: caller checks != 0 but the rest of the file uses -Exxx so fix this up
    to be consistent]
    
    Link: https://lore.kernel.org/r/20200802111528.4974-1-tianjia.zhang@linux.alibaba.com
    Fixes: 0691094ff3f2 ("scsi: qla2xxx: Add logic to detect ABTS hang and response completion")
    Cc: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49fc81280f83ea43501b44d3dd3989a049343659
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 2 12:15:27 2020 +0200

    scsi: qla4xxx: Fix an error handling path in 'qla4xxx_get_host_stats()'
    
    [ Upstream commit 574918e69720fe62ab3eb42ec3750230c8d16b06 ]
    
    Update the size used in 'dma_free_coherent()' in order to match the one
    used in the corresponding 'dma_alloc_coherent()'.
    
    Link: https://lore.kernel.org/r/20200802101527.676054-1-christophe.jaillet@wanadoo.fr
    Fixes: 4161cee52df8 ("[SCSI] qla4xxx: Add host statistics support")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58826ecb738590b4bdd5d89255d366a7ab8a060d
Author: Tom Rix <trix@redhat.com>
Date:   Wed Aug 5 13:59:11 2020 -0700

    drm/gma500: fix error check
    
    [ Upstream commit cdd296cdae1af2d27dae3fcfbdf12c5252ab78cf ]
    
    Reviewing this block of code in cdv_intel_dp_init()
    
    ret = cdv_intel_dp_aux_native_read(gma_encoder, DP_DPCD_REV, ...
    
    cdv_intel_edp_panel_vdd_off(gma_encoder);
    if (ret == 0) {
            /* if this fails, presume the device is a ghost */
            DRM_INFO("failed to retrieve link info, disabling eDP\n");
            drm_encoder_cleanup(encoder);
            cdv_intel_dp_destroy(connector);
            goto err_priv;
    } else {
    
    The (ret == 0) is not strict enough.
    cdv_intel_dp_aux_native_read() returns > 0 on success
    otherwise it is failure.
    
    So change to <=
    
    Fixes: d112a8163f83 ("gma500/cdv: Add eDP support")
    
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Patrik Jakobsson <patrik.r.jakobsson@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200805205911.20927-1-trix@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84b79c48535630605b939a5ca5a911227c5042ec
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Aug 13 19:34:58 2020 +0200

    staging: rtl8192u: Do not use GFP_KERNEL in atomic context
    
    [ Upstream commit acac75bb451fd39344eb54fad6602dfc9482e970 ]
    
    'rtl8192_irq_rx_tasklet()' is a tasklet initialized in
    'rtl8192_init_priv_task()'.
    >From this function it is possible to allocate some memory with the
    GFP_KERNEL flag, which is not allowed in the atomic context of a tasklet.
    
    Use GFP_ATOMIC instead.
    
    The call chain is:
      rtl8192_irq_rx_tasklet            (in r8192U_core.c)
        --> rtl8192_rx_nomal            (in r8192U_core.c)
          --> ieee80211_rx              (in ieee80211/ieee80211_rx.c)
            --> RxReorderIndicatePacket (in ieee80211/ieee80211_rx.c)
    
    Fixes: 79a5ccd97209 ("staging: rtl8192u: fix large frame size compiler warning")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/20200813173458.758284-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc432c231f4ae23c25061b8e2a93ddfafee88912
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 9 11:29:06 2020 +0200

    mwifiex: Do not use GFP_KERNEL in atomic context
    
    [ Upstream commit d2ab7f00f4321370a8ee14e5630d4349fdacc42e ]
    
    A possible call chain is as follow:
      mwifiex_sdio_interrupt                            (sdio.c)
        --> mwifiex_main_process                        (main.c)
          --> mwifiex_process_cmdresp                   (cmdevt.c)
            --> mwifiex_process_sta_cmdresp             (sta_cmdresp.c)
              --> mwifiex_ret_802_11_scan               (scan.c)
                --> mwifiex_parse_single_response_buf   (scan.c)
    
    'mwifiex_sdio_interrupt()' is an interrupt function.
    
    Also note that 'mwifiex_ret_802_11_scan()' already uses GFP_ATOMIC.
    
    So use GFP_ATOMIC instead of GFP_KERNEL when memory is allocated in
    'mwifiex_parse_single_response_buf()'.
    
    Fixes: 7c6fa2a843c5 ("mwifiex: use cfg80211 dynamic scan table and cfg80211_get_bss API")
    or
    Fixes: 601216e12c65e ("mwifiex: process RX packets in SDIO IRQ thread directly")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200809092906.744621-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7bf50ff5a32cc2267f55266385d3a5ed472f23b1
Author: Tom Rix <trix@redhat.com>
Date:   Sun Aug 2 09:18:04 2020 -0700

    brcmfmac: check ndev pointer
    
    [ Upstream commit 9c9f015bc9f8839831c7ba0a6d731a3853c464e2 ]
    
    Clang static analysis reports this error
    
    brcmfmac/core.c:490:4: warning: Dereference of null pointer
            (*ifp)->ndev->stats.rx_errors++;
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    In this block of code
    
            if (ret || !(*ifp) || !(*ifp)->ndev) {
                    if (ret != -ENODATA && *ifp)
                            (*ifp)->ndev->stats.rx_errors++;
                    brcmu_pkt_buf_free_skb(skb);
                    return -ENODATA;
            }
    
    (*ifp)->ndev being NULL is caught as an error
    But then it is used to report the error.
    
    So add a check before using it.
    
    Fixes: 91b632803ee4 ("brcmfmac: Use net_device_stats from struct net_device")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200802161804.6126-1-trix@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb4bb7e520a72df9568223f45a4fc8fd44240ca0
Author: Rohit kumar <rohitkr@codeaurora.org>
Date:   Fri Aug 14 16:23:02 2020 +0530

    ASoC: qcom: lpass-cpu: fix concurrency issue
    
    [ Upstream commit 753a6e17942f6f425ca622e1610625998312ad89 ]
    
    i2sctl register value is set to 0 during hw_free(). This
    impacts any ongoing concurrent session on the same i2s
    port. As trigger() stop already resets enable bit to 0,
    there is no need of explicit hw_free. Removing it to
    fix the issue.
    
    Fixes: 80beab8e1d86 ("ASoC: qcom: Add LPASS CPU DAI driver")
    Signed-off-by: Rohit kumar <rohitkr@codeaurora.org>
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/1597402388-14112-7-git-send-email-rohitkr@codeaurora.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cab19b7f827b70e5dc57ee3e6088bf0e11dc2741
Author: Rohit kumar <rohitkr@codeaurora.org>
Date:   Fri Aug 14 16:23:00 2020 +0530

    ASoC: qcom: lpass-platform: fix memory leak
    
    [ Upstream commit 5fd188215d4eb52703600d8986b22311099a5940 ]
    
    lpass_pcm_data is never freed. Free it in close
    ops to avoid memory leak.
    
    Fixes: 022d00ee0b55 ("ASoC: lpass-platform: Fix broken pcm data usage")
    Signed-off-by: Rohit kumar <rohitkr@codeaurora.org>
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/1597402388-14112-5-git-send-email-rohitkr@codeaurora.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0627ae9be94127349f2e770e104c48905c916014
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Sun Aug 2 01:48:24 2020 +0100

    wcn36xx: Fix reported 802.11n rx_highest rate wcn3660/wcn3680
    
    [ Upstream commit 3b9fb6791e7113679b1eb472e6ce1659e80f5797 ]
    
    Qualcomm's document "80-WL007-1 Rev. J" states that the highest rx rate for
    the WCN3660 and WCN3680 on MCS 7 is 150 Mbps not the 72 Mbps stated here.
    
    This patch fixes the data-rate declared in the 5GHz table.
    
    Fixes: 8e84c2582169 ("wcn36xx: mac80211 driver for Qualcomm WCN3660/WCN3680
    hardware")
    
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200802004824.1307124-1-bryan.odonoghue@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3cf5b3ad12dd37480df26c64704e41c96cd0cc4
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 2 14:22:27 2020 +0200

    ath10k: Fix the size used in a 'dma_free_coherent()' call in an error handling path
    
    [ Upstream commit 454530a9950b5a26d4998908249564cedfc4babc ]
    
    Update the size used in 'dma_free_coherent()' in order to match the one
    used in the corresponding 'dma_alloc_coherent()'.
    
    Fixes: 1863008369ae ("ath10k: fix shadow register implementation for WCN3990")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Rakesh Pillai <pillair@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200802122227.678637-1-christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9981ef0f9cfab06248917781717bd6e03313c4c8
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Aug 13 17:12:53 2020 +0300

    ath9k: Fix potential out of bounds in ath9k_htc_txcompletion_cb()
    
    [ Upstream commit 2705cd7558e718a7240c64eb0afb2edad5f8c190 ]
    
    The value of "htc_hdr->endpoint_id" comes from skb->data so Smatch marks
    it as untrusted so we have to check it before using it as an array
    offset.
    
    This is similar to a bug that syzkaller found in commit e4ff08a4d727
    ("ath9k: Fix use-after-free Write in ath9k_htc_rx_msg") so it is
    probably a real issue.
    
    Fixes: fb9987d0f748 ("ath9k_htc: Support for AR9271 chipset.")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200813141253.GA457408@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80ff60f046f4aeeb221199f7b8532b6c41abde5c
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Aug 13 17:13:15 2020 +0300

    ath6kl: prevent potential array overflow in ath6kl_add_new_sta()
    
    [ Upstream commit 54f9ab7b870934b70e5a21786d951fbcf663970f ]
    
    The value for "aid" comes from skb->data so Smatch marks it as
    untrusted.  If it's invalid then it can result in an out of bounds array
    access in ath6kl_add_new_sta().
    
    Fixes: 572e27c00c9d ("ath6kl: Fix AP mode connect event parsing and TIM updates")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20200813141315.GB457408@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2a1b94f7fd2c9a256c9bfab608e9ea2bcd180c5
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Thu Aug 13 01:02:44 2020 +0300

    drm: panel: Fix bus format for OrtusTech COM43H4M85ULC panel
    
    [ Upstream commit f098f168e91ca915c6cf8aa316136af647792f2f ]
    
    The OrtusTech COM43H4M85ULC panel is a 18-bit RGB panel, set the bus
    format to MEDIA_BUS_FMT_RGB666_1X18.
    
    Fixes: 725c9d40f3fe ("drm/panel: Add support for OrtusTech COM43H4M85ULC panel")
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sam Ravnborg <sam.ravnborg@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200812220244.24500-1-laurent.pinchart@ideasonboard.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a5630dee31fb47ad0afef606feb9812f8b80d7f
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:36 2020 +0800

    drm/amd/display: Fix wrong return value in dm_update_plane_state()
    
    [ Upstream commit c35376137e940c3389df2726a92649c01a9844b4 ]
    
    On an error exit path, a negative error code should be returned
    instead of a positive return value.
    
    Fixes: 9e869063b0021 ("drm/amd/display: Move iteration out of dm_update_planes")
    Cc: Leo Li <sunpeng.li@amd.com>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d234d1135dcd8876de0576dac68efd0a87eef87
Author: Samuel Holland <samuel@sholland.org>
Date:   Sat Aug 1 11:29:56 2020 -0500

    Bluetooth: hci_uart: Cancel init work before unregistering
    
    [ Upstream commit 3b799254cf6f481460719023d7a18f46651e5e7f ]
    
    If hci_uart_tty_close() or hci_uart_unregister_device() is called while
    hu->init_ready is scheduled, hci_register_dev() could be called after
    the hci_uart is torn down. Avoid this by ensuring the work is complete
    or canceled before checking the HCI_UART_REGISTERED flag.
    
    Fixes: 9f2aee848fe6 ("Bluetooth: Add delayed init sequence support for UART controllers")
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e99958ec096b73b10df3255b4f7f8e971a714225
Author: Melissa Wen <melissa.srw@gmail.com>
Date:   Thu Jul 30 17:25:24 2020 -0300

    drm/vkms: fix xrgb on compute crc
    
    [ Upstream commit 0986191186128b10b6bbfa5220fc587ed5725e49 ]
    
    The previous memset operation was not correctly zeroing the alpha
    channel to compute the crc, and as a result, the IGT subtest
    kms_cursor_crc/pipe-A-cursor-alpha-transparent fails.
    
    Fixes: db7f419c06d7c ("drm/vkms: Compute CRC with Cursor Plane")
    
    Signed-off-by: Melissa Wen <melissa.srw@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200730202524.5upzuh4irboru7my@smtp.gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ae399b5da2a522cabef0e9fdf8e1874db1cc014
Author: Venkateswara Naralasetty <vnaralas@codeaurora.org>
Date:   Mon Jun 15 20:29:03 2020 +0300

    ath10k: provide survey info as accumulated data
    
    [ Upstream commit 720e5c03e5cb26d33d97f55192b791bb48478aa5 ]
    
    It is expected that the returned counters by .get_survey are monotonic
    increasing. But the data from ath10k gets reset to zero regularly. Channel
    active/busy time are then showing incorrect values (less than previous or
    sometimes zero) for the currently active channel during successive survey
    dump commands.
    
    example:
    
      $ iw dev wlan0 survey dump
      Survey data from wlan0
            frequency:                      5180 MHz [in use]
            channel active time:            54995 ms
            channel busy time:              432 ms
            channel receive time:           0 ms
            channel transmit time:          59 ms
      ...
    
      $ iw dev wlan0 survey dump
      Survey data from wlan0
            frequency:                      5180 MHz [in use]
            channel active time:            32592 ms
            channel busy time:              254 ms
            channel receive time:           0 ms
            channel transmit time:          0 ms
      ...
    
    The correct way to handle this is to use the non-clearing
    WMI_BSS_SURVEY_REQ_TYPE_READ wmi_bss_survey_req_type. The firmware will
    then accumulate the survey data and handle wrap arounds.
    
    Tested-on: QCA9984 hw1.0 10.4-3.5.3-00057
    Tested-on: QCA988X hw2.0 10.2.4-1.0-00047
    Tested-on: QCA9888 hw2.0 10.4-3.9.0.2-00024
    Tested-on: QCA4019 hw1.0 10.4-3.6-00140
    
    Fixes: fa7937e3d5c2 ("ath10k: update bss channel survey information")
    Signed-off-by: Venkateswara Naralasetty <vnaralas@codeaurora.org>
    Tested-by: Markus Theil <markus.theil@tu-ilmenau.de>
    Tested-by: John Deere <24601deerej@gmail.com>
    [sven@narfation.org: adjust commit message]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1592232686-28712-1-git-send-email-kvalo@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 450d03435ca9da70dfa49f776df8b163ee5434e7
Author: Yang Yang <yang.yang@vivo.com>
Date:   Fri Oct 9 01:00:14 2020 -0700

    blk-mq: move cancel of hctx->run_work to the front of blk_exit_queue
    
    [ Upstream commit 47ce030b7ac5a5259a9a5919f230b52497afc31a ]
    
    blk_exit_queue will free elevator_data, while blk_mq_run_work_fn
    will access it. Move cancel of hctx->run_work to the front of
    blk_exit_queue to avoid use-after-free.
    
    Fixes: 1b97871b501f ("blk-mq: move cancel of hctx->run_work into blk_mq_hw_sysfs_release")
    Signed-off-by: Yang Yang <yang.yang@vivo.com>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96bc5e4cb4c8a6356b40ba21d6b064afd31cd131
Author: Åukasz Stelmach <l.stelmach@samsung.com>
Date:   Fri Oct 2 14:22:37 2020 +0200

    spi: spi-s3c64xx: Check return values
    
    [ Upstream commit 2f4db6f705c5cba85d23836c19b44d9687dc1334 ]
    
    Check return values in prepare_dma() and s3c64xx_spi_config() and
    propagate errors upwards.
    
    Fixes: 788437273fa8 ("spi: s3c64xx: move to generic dmaengine API")
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Åukasz Stelmach <l.stelmach@samsung.com>
    Link: https://lore.kernel.org/r/20201002122243.26849-4-l.stelmach@samsung.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a053db13b3e670ea36e5e8940fdc4bda7ca4abcb
Author: Åukasz Stelmach <l.stelmach@samsung.com>
Date:   Fri Oct 2 14:22:35 2020 +0200

    spi: spi-s3c64xx: swap s3c64xx_spi_set_cs() and s3c64xx_enable_datapath()
    
    [ Upstream commit 581e2b41977dfc2d4c26c8e976f89c43bb92f9bf ]
    
    Fix issues with DMA transfers bigger than 512 bytes on Exynos3250. Without
    the patches such transfers fail to complete. This solution to the problem
    is found in the vendor kernel for ARTIK5 boards based on Exynos3250.
    
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Åukasz Stelmach <l.stelmach@samsung.com>
    Link: https://lore.kernel.org/r/20201002122243.26849-2-l.stelmach@samsung.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcf7bf4065902168f071cc430a5aa62328e644d7
Author: Necip Fazil Yildiran <fazilyildiran@gmail.com>
Date:   Mon Sep 14 17:40:26 2020 +0300

    pinctrl: bcm: fix kconfig dependency warning when !GPIOLIB
    
    [ Upstream commit 513034d8b089b9a49dab57845aee70e830fe7334 ]
    
    When PINCTRL_BCM2835 is enabled and GPIOLIB is disabled, it results in the
    following Kbuild warning:
    
    WARNING: unmet direct dependencies detected for GPIOLIB_IRQCHIP
      Depends on [n]: GPIOLIB [=n]
      Selected by [y]:
      - PINCTRL_BCM2835 [=y] && PINCTRL [=y] && OF [=y] && (ARCH_BCM2835 [=n] || ARCH_BRCMSTB [=n] || COMPILE_TEST [=y])
    
    The reason is that PINCTRL_BCM2835 selects GPIOLIB_IRQCHIP without
    depending on or selecting GPIOLIB while GPIOLIB_IRQCHIP is subordinate to
    GPIOLIB.
    
    Honor the kconfig menu hierarchy to remove kconfig dependency warnings.
    
    Fixes: 85ae9e512f43 ("pinctrl: bcm2835: switch to GPIOLIB_IRQCHIP")
    Signed-off-by: Necip Fazil Yildiran <fazilyildiran@gmail.com>
    Link: https://lore.kernel.org/r/20200914144025.371370-1-fazilyildiran@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0120ec32a7774b5061ced1a9a7ff833edd8b4cb6
Author: MichaÅ MirosÅaw <mirq-linux@rere.qmqm.pl>
Date:   Sat Sep 26 23:32:41 2020 +0200

    regulator: resolve supply after creating regulator
    
    [ Upstream commit aea6cb99703e17019e025aa71643b4d3e0a24413 ]
    
    When creating a new regulator its supply cannot create the sysfs link
    because the device is not yet published. Remove early supply resolving
    since it will be done later anyway. This makes the following error
    disappear and the symlinks get created instead.
    
      DCDC_REG1: supplied by VSYS
      VSYS: could not add device link regulator.3 err -2
    
    Note: It doesn't fix the problem for bypassed regulators, though.
    
    Fixes: 45389c47526d ("regulator: core: Add early supply resolution for regulators")
    Signed-off-by: MichaÅ MirosÅaw <mirq-linux@rere.qmqm.pl>
    Link: https://lore.kernel.org/r/ba09e0a8617ffeeb25cb4affffe6f3149319cef8.1601155770.git.mirq-linux@rere.qmqm.pl
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd68531d29815c760006fb40f7562599bef3303d
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 04:56:05 2020 +0200

    media: ti-vpe: Fix a missing check and reference count leak
    
    [ Upstream commit 7dae2aaaf432767ca7aa11fa84643a7c2600dbdd ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code, causing incorrect ref count if
    pm_runtime_put_noidle() is not called in error handling paths.
    And also, when the call of function vpe_runtime_get() failed,
    we won't call vpe_runtime_put().
    Thus call pm_runtime_put_noidle() if pm_runtime_get_sync() fails
    inside vpe_runtime_get().
    
    Fixes: 4571912743ac ("[media] v4l: ti-vpe: Add VPE mem to mem driver")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c4ffc07f92ef6a2aea4b0a860f13871832d8a6b
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 04:36:59 2020 +0200

    media: stm32-dcmi: Fix a reference count leak
    
    [ Upstream commit 88f50a05f907d96a27a9ce3cc9e8cbb91a6f0f22 ]
    
    Calling pm_runtime_get_sync increments the counter even in case of
    failure, causing incorrect ref count if pm_runtime_put is not
    called in error handling paths. Thus replace the jump target
    "err_release_buffers" by "err_pm_putw".
    
    Fixes: 152e0bf60219 ("media: stm32-dcmi: add power saving support")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a05590cc08e37b9a09f479169fb179bed248432e
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 04:31:22 2020 +0200

    media: s5p-mfc: Fix a reference count leak
    
    [ Upstream commit 78741ce98c2e36188e2343434406b0e0bc50b0e7 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code, causing incorrect ref count if
    pm_runtime_put_noidle() is not called in error handling paths.
    Thus call pm_runtime_put_noidle() if pm_runtime_get_sync() fails.
    
    Fixes: c5086f130a77 ("[media] s5p-mfc: Use clock gating only on MFC v5 hardware")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0747ff17aa6cf8e45ec0912e297bf2c2877269d3
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 01:27:12 2020 +0200

    media: camss: Fix a reference count leak.
    
    [ Upstream commit d0675b67b42eb4f1a840d1513b5b00f78312f833 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code, causing incorrect ref count if
    PM runtime put is not called in error handling paths.
    Thus call pm_runtime_put_sync() if pm_runtime_get_sync() fails.
    
    Fixes: 02afa816dbbf ("media: camss: Add basic runtime PM support")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28b21e02dce923eff04f168c745898960961d400
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 01:19:44 2020 +0200

    media: platform: fcp: Fix a reference count leak.
    
    [ Upstream commit 63e36a381d92a9cded97e90d481ee22566557dd1 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code, causing incorrect ref count if
    pm_runtime_put_noidle() is not called in error handling paths.
    Thus call pm_runtime_put_noidle() if pm_runtime_get_sync() fails.
    
    Fixes: 6eaafbdb668b ("[media] v4l: rcar-fcp: Keep the coding style consistent")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e954d4dea1e0df3bc727af1dc316ebafc9c36f7
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 01:13:49 2020 +0200

    media: rockchip/rga: Fix a reference count leak.
    
    [ Upstream commit 884d638e0853c4b5f01eb6d048fc3b6239012404 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code. Thus call pm_runtime_put_noidle()
    if pm_runtime_get_sync() fails.
    
    Fixes: f7e7b48e6d79 ("[media] rockchip/rga: v4l2 m2m support")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Reviewed-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa60f4ad0707daba0dbfc1d8729a46c47c07562c
Author: Qiushi Wu <wu000273@umn.edu>
Date:   Sun Jun 14 00:30:08 2020 +0200

    media: rcar-vin: Fix a reference count leak.
    
    [ Upstream commit aaffa0126a111d65f4028c503c76192d4cc93277 ]
    
    pm_runtime_get_sync() increments the runtime PM usage counter even
    when it returns an error code. Thus call pm_runtime_put_noidle()
    if pm_runtime_get_sync() fails.
    
    Fixes: 90dedce9bc54 ("media: rcar-vin: add function to manipulate Gen3 chsel value")
    Signed-off-by: Qiushi Wu <wu000273@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55d01160af68f3ea4973ceed7900f1d1feb005a8
Author: Tom Rix <trix@redhat.com>
Date:   Wed Sep 2 20:32:12 2020 +0200

    media: tc358743: cleanup tc358743_cec_isr
    
    [ Upstream commit 877cb8a444dad2304e891294afb0915fe3c278d6 ]
    
    tc358743_cec_isr is misnammed, it is not the main isr.
    So rename it to be consistent with its siblings,
    tc358743_cec_handler.
    
    It also does not check if its input parameter 'handled' is
    is non NULL like its siblings, so add a check.
    
    Fixes: a0ec8d1dc42e ("media: tc358743: add CEC support")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de566409e3ad014811332bd7aa41ec1ccc5e4b4a
Author: Tom Rix <trix@redhat.com>
Date:   Sun Aug 30 18:30:43 2020 +0200

    media: tc358743: initialize variable
    
    [ Upstream commit 274cf92d5dff5c2fec1a518078542ffe70d07646 ]
    
    clang static analysis flags this error
    
    tc358743.c:1468:9: warning: Branch condition evaluates
      to a garbage value
            return handled ? IRQ_HANDLED : IRQ_NONE;
                   ^~~~~~~
    handled should be initialized to false.
    
    Fixes: d747b806abf4 ("[media] tc358743: add direct interrupt handling")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c66762f0c64db9a48ff5ea362446c1386fbca6a
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Wed Aug 26 11:26:04 2020 +0200

    media: mx2_emmaprp: Fix memleak in emmaprp_probe
    
    [ Upstream commit 21d387b8d372f859d9e87fdcc7c3b4a432737f4d ]
    
    When platform_get_irq() fails, we should release
    vfd and unregister pcdev->v4l2_dev just like the
    subsequent error paths.
    
    Fixes: d4e192cc44914 ("media: mx2_emmaprp: Check for platform_get_irq() error")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7fb271426a7086a6d3c31d4b4944dfa37840937b
Author: Xiaoliang Pang <dawning.pang@gmail.com>
Date:   Mon Sep 14 11:00:51 2020 +0800

    cypto: mediatek - fix leaks in mtk_desc_ring_alloc
    
    [ Upstream commit 228d284aac61283cde508a925d666f854b57af63 ]
    
    In the init loop, if an error occurs in function 'dma_alloc_coherent',
    then goto the err_cleanup section, after run i--,
    in the array ring, the struct mtk_ring with index i will not be released,
    causing memory leaks
    
    Fixes: 785e5c616c849 ("crypto: mediatek - Add crypto driver support for some MediaTek chips")
    Cc: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Xiaoliang Pang <dawning.pang@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc0f250409721f8dfe2d8413e0c1b2304fca5bbd
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Thu Sep 17 14:39:29 2020 -0700

    hwmon: (pmbus/max34440) Fix status register reads for MAX344{51,60,61}
    
    [ Upstream commit 6c094b31ea2ad773824362ba0fccb88d36f8d32d ]
    
    Starting with MAX34451, the chips of this series support STATUS_IOUT and
    STATUS_TEMPERATURE commands, and no longer report over-current and
    over-temperature status with STATUS_MFR_SPECIFIC.
    
    Fixes: 7a001dbab4ade ("hwmon: (pmbus/max34440) Add support for MAX34451.")
    Fixes: 50115ac9b6f35 ("hwmon: (pmbus/max34440) Add support for MAX34460 and MAX34461")
    Reported-by: Steve Foreman <foremans@google.com>
    Cc: Steve Foreman <foremans@google.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90e8f87c0b25e35d9fd7d72ce2dd66ad3f82efe4
Author: Tero Kristo <t-kristo@ti.com>
Date:   Mon Sep 7 10:56:24 2020 +0300

    crypto: omap-sham - fix digcnt register handling with export/import
    
    [ Upstream commit 3faf757bad75f3fc1b2736f0431e295a073a7423 ]
    
    Running export/import for hashes in peculiar order (mostly done by
    openssl) can mess up the internal book keeping of the OMAP SHA core.
    Fix by forcibly writing the correct DIGCNT back to hardware. This issue
    was noticed while transitioning to openssl 1.1 support.
    
    Fixes: 0d373d603202 ("crypto: omap-sham - Add OMAP4/AM33XX SHAM Support")
    Signed-off-by: Tero Kristo <t-kristo@ti.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0db26c777a250dd8331136952a74385e2334a1d9
Author: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
Date:   Tue Aug 11 22:59:38 2020 +0200

    media: rcar-csi2: Allocate v4l2_async_subdev dynamically
    
    [ Upstream commit 2cac7cbfb4099980e78244359ab9c6f056d6a7ec ]
    
    v4l2_async_notifier_add_subdev() requires the asd to be allocated
    dynamically, but the rcar-csi2 driver embeds it in the rcar_csi2
    structure. This causes memory corruption when the notifier is destroyed
    at remove time with v4l2_async_notifier_cleanup().
    
    Fix this issue by registering the asd with
    v4l2_async_notifier_add_fwnode_subdev(), which allocates it dynamically
    internally.
    
    Fixes: 769afd212b16 ("media: rcar-csi2: add Renesas R-Car MIPI CSI-2 receiver driver")
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7906b7a7ce1d023c6c7aeeb5038de6c78bea41e4
Author: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
Date:   Tue Aug 11 22:59:37 2020 +0200

    media: rcar_drif: Allocate v4l2_async_subdev dynamically
    
    [ Upstream commit 468e986dac0e94194334ca6d0abf3af8c250792e ]
    
    v4l2_async_notifier_add_subdev() requires the asd to be allocated
    dynamically, but the rcar-drif driver embeds it in the
    rcar_drif_graph_ep structure. This causes memory corruption when the
    notifier is destroyed at remove time with v4l2_async_notifier_cleanup().
    
    Fix this issue by registering the asd with
    v4l2_async_notifier_add_fwnode_subdev(), which allocates it dynamically
    internally.
    
    Fixes: d079f94c9046 ("media: platform: Switch to v4l2_async_notifier_add_subdev")
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58e2bcb7fa43b4cb0383d4032fe11f5976b8e8d4
Author: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
Date:   Tue Aug 11 22:59:36 2020 +0200

    media: rcar_drif: Fix fwnode reference leak when parsing DT
    
    [ Upstream commit cdd4f7824994c9254acc6e415750529ea2d2cfe0 ]
    
    The fwnode reference corresponding to the endpoint is leaked in an error
    path of the rcar_drif_parse_subdevs() function. Fix it, and reorganize
    fwnode reference handling in the function to release references early,
    simplifying error paths.
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79ec0578c7e0a99eafd62cccd002d2a1faf5b6b8
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Fri Sep 4 22:18:32 2020 +0200

    media: i2c: ov5640: Enable data pins on poweron for DVP mode
    
    [ Upstream commit 576f5d4ba8f672953513280510abf9a736b015cc ]
    
    During testing this sensor on iW-RainboW-G21D-Qseven platform in 8-bit DVP
    mode with rcar-vin bridge noticed the capture worked fine for the first run
    (with yavta), but for subsequent runs the bridge driver waited for the
    frame to be captured. Debugging further noticed the data lines were
    enabled/disabled in stream on/off callback and dumping the register
    contents 0x3017/0x3018 in ov5640_set_stream_dvp() reported the correct
    values, but yet frame capturing failed.
    
    To get around this issue data lines are enabled in s_power callback.
    (Also the sensor remains in power down mode if not streaming so power
    consumption shouldn't be affected)
    
    Fixes: f22996db44e2d ("media: ov5640: add support of DVP parallel interface")
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Biju Das <biju.das.jz@bp.renesas.com>
    Tested-by: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2f8546056b355c479e87fe07df9b8b021facba3
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Fri Sep 4 22:18:31 2020 +0200

    media: i2c: ov5640: Separate out mipi configuration from s_power
    
    [ Upstream commit b1751ae652fb95919c08df5bdd739ccf9886158a ]
    
    In preparation for adding DVP configuration in s_power callback
    move mipi configuration into separate function
    
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Biju Das <biju.das.jz@bp.renesas.com>
    Tested-by: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9ccea5405645b84a9a9d5dbc0a90ca181225a2e
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Fri Sep 4 22:18:30 2020 +0200

    media: i2c: ov5640: Remain in power down for DVP mode unless streaming
    
    [ Upstream commit 3b987d70e903962eb8c5961ba166c345a49d1a0b ]
    
    Keep the sensor in software power down mode and wake up only in
    ov5640_set_stream_dvp() callback.
    
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Biju Das <biju.das.jz@bp.renesas.com>
    Tested-by: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8409370ae02e44784662768c405937a2d2f5c89c
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Mon Aug 24 08:53:52 2020 +0200

    media: omap3isp: Fix memleak in isp_probe
    
    [ Upstream commit d8fc21c17099635e8ebd986d042be65a6c6b5bd0 ]
    
    When devm_ioremap_resource() fails, isp should be
    freed just like other error paths in isp_probe.
    
    Fixes: 8644cdf972dd6 ("[media] omap3isp: Replace many MMIO regions by two")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79a41d2357c6a2a52793d5a92ce209423eca77f0
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Aug 22 15:11:24 2020 +0200

    media: staging/intel-ipu3: css: Correctly reset some memory
    
    [ Upstream commit 08913a8e458e03f886a1a1154a6501fcb9344c39 ]
    
    The intent here is to reset the whole 'scaler_coeffs_luma' array, not just
    the first element.
    
    Fixes: e11110a5b744 ("media: staging/intel-ipu3: css: Compute and program ccs")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Bingbu Cao <bingbu.cao@intel.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bcc5c270771b6cec7cf8e1f8f5ede95d3931f7c
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Wed Aug 19 01:56:49 2020 +0200

    media: uvcvideo: Silence shift-out-of-bounds warning
    
    [ Upstream commit 171994e498a0426cbe17f874c5c6af3c0af45200 ]
    
    UBSAN reports a shift-out-of-bounds warning in uvc_get_le_value(). The
    report is correct, but the issue should be harmless as the computed
    value isn't used when the shift is negative. This may however cause
    incorrect behaviour if a negative shift could generate adverse side
    effects (such as a trap on some architectures for instance).
    
    Regardless of whether that may happen or not, silence the warning as a
    full WARN backtrace isn't nice.
    
    Reported-by: Bart Van Assche <bvanassche@acm.org>
    Fixes: c0efd232929c ("V4L/DVB (8145a): USB Video Class driver")
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Tested-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8504250759f493827f5e941bf023bd82f72115a0
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Sun Jun 7 04:05:49 2020 +0200

    media: uvcvideo: Set media controller entity functions
    
    [ Upstream commit d6834b4b58d110814aaf3469e7fd87d34ae5ae81 ]
    
    The media controller core prints a warning when an entity is registered
    without a function being set. This affects the uvcvideo driver, as the
    warning was added without first addressing the issue in existing
    drivers. The problem is harmless, but unnecessarily worries users. Fix
    it by mapping UVC entity types to MC entity functions as accurately as
    possible using the existing functions.
    
    Fixes: b50bde4e476d ("[media] v4l2-subdev: use MEDIA_ENT_T_UNKNOWN for new subdevs")
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reviewed-by: Kieran Bingham <kieran.bingham@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b426d665a41acff72068822107654fbe9465ef6
Author: Tom Rix <trix@redhat.com>
Date:   Sun Jul 19 17:34:47 2020 +0200

    media: m5mols: Check function pointer in m5mols_sensor_power
    
    [ Upstream commit 52438c4463ac904d14bf3496765e67750766f3a6 ]
    
    clang static analysis reports this error
    
    m5mols_core.c:767:4: warning: Called function pointer
      is null (null dereference) [core.CallAndMessage]
        info->set_power(&client->dev, 0);
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    In other places, the set_power ptr is checked.
    So add a check.
    
    Fixes: bc125106f8af ("[media] Add support for M-5MOLS 8 Mega Pixel camera ISP")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 361a1b76b2d25b5c4064378070429c1be1c0c8fa
Author: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
Date:   Mon Aug 3 11:06:58 2020 +0200

    media: ov5640: Correct Bit Div register in clock tree diagram
    
    [ Upstream commit 4c85f628f6639e3e3e0a7788416154f28dfcae4f ]
    
    Although the code is correct and doing the right thing, the clock diagram
    showed the wrong register for the bit divider, which had me doubting the
    understanding of the tree. Fix this to avoid doubts in the future.
    
    Signed-off-by: Paul Kocialkowski <paul.kocialkowski@bootlin.com>
    Fixes: aa2882481cada ("media: ov5640: Adjust the clock based on the expected rate")
    Acked-by: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7052f4c5ab512cb88c85f952475d630eec2d8221
Author: Sylwester Nawrocki <s.nawrocki@samsung.com>
Date:   Mon Aug 10 17:32:39 2020 +0200

    media: Revert "media: exynos4-is: Add missed check for pinctrl_lookup_state()"
    
    [ Upstream commit 00d21f325d58567d81d9172096692d0a9ea7f725 ]
    
    The "idle" pinctrl state is optional as documented in the DT binding.
    The change introduced by the commit being reverted makes that pinctrl state
    mandatory and breaks initialization of the whole media driver, since the
    "idle" state is not specified in any mainline dts.
    
    This reverts commit 18ffec750578 ("media: exynos4-is: Add missed check for pinctrl_lookup_state()")
    to fix the regression.
    
    Fixes: 18ffec750578 ("media: exynos4-is: Add missed check for pinctrl_lookup_state()")
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6243d107c32563d675289ea82b7b3c46fde4918
Author: Tom Rix <trix@redhat.com>
Date:   Sat Aug 22 23:15:47 2020 +0200

    media: tuner-simple: fix regression in simple_set_radio_freq
    
    [ Upstream commit 505bfc2a142f12ce7bc7a878b44abc3496f2e747 ]
    
    clang static analysis reports this problem
    
    tuner-simple.c:714:13: warning: Assigned value is
      garbage or undefined
            buffer[1] = buffer[3];
                      ^ ~~~~~~~~~
    In simple_set_radio_freq buffer[3] used to be done
    in-function with a switch of tuner type, now done
    by a call to simple_radio_bandswitch which has this case
    
            case TUNER_TENA_9533_DI:
            case TUNER_YMEC_TVF_5533MF:
                    tuner_dbg("This tuner doesn't ...
                    return 0;
    
    which does not set buffer[3].  In the old logic, this case
    would have returned 0 from simple_set_radio_freq.
    
    Recover this old behavior by returning an error for this
    codition. Since the old simple_set_radio_freq behavior
    returned a 0, do the same.
    
    Fixes: c7a9f3aa1e1b ("V4L/DVB (7129): tuner-simple: move device-specific code into three separate functions")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac36f94d34dfd8deb7fc2703ca5c6487af872253
Author: Madhuparna Bhowmik <madhuparnabhowmik10@gmail.com>
Date:   Tue Aug 11 18:00:24 2020 +0530

    crypto: picoxcell - Fix potential race condition bug
    
    [ Upstream commit 64f4a62e3b17f1e473f971127c2924cae42afc82 ]
    
    engine->stat_irq_thresh was initialized after device_create_file() in
    the probe function, the initialization may race with call to
    spacc_stat_irq_thresh_store() which updates engine->stat_irq_thresh,
    therefore initialize it before creating the file in probe function.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Fixes: ce92136843cb ("crypto: picoxcell - add support for the...")
    Signed-off-by: Madhuparna Bhowmik <madhuparnabhowmik10@gmail.com>
    Acked-by: Jamie Iles <jamie@jamieiles.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71444295839cc5efe614e855189d17ef5b0e09dd
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Aug 2 16:56:48 2020 +0200

    crypto: ixp4xx - Fix the size used in a 'dma_free_coherent()' call
    
    [ Upstream commit f7ade9aaf66bd5599690acf0597df2c0f6cd825a ]
    
    Update the size used in 'dma_free_coherent()' in order to match the one
    used in the corresponding 'dma_alloc_coherent()', in 'setup_crypt_desc()'.
    
    Fixes: 81bef0150074 ("crypto: ixp4xx - Hardware crypto support for IXP4xx CPUs")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3dd9ffbb6eda28b73e4523cf1780d5b15caffe31
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Sun Aug 2 19:15:32 2020 +0800

    crypto: mediatek - Fix wrong return value in mtk_desc_ring_alloc()
    
    [ Upstream commit 8cbde6c6a6d2b1599ff90f932304aab7e32fce89 ]
    
    In case of memory allocation failure, a negative error code should
    be returned.
    
    Fixes: 785e5c616c849 ("crypto: mediatek - Add crypto driver support for some MediaTek chips")
    Cc: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 528acbf310ff43f943f57b4921fd933ea6988e33
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Jul 31 17:03:27 2020 +1000

    crypto: algif_skcipher - EBUSY on aio should be an error
    
    [ Upstream commit 2a05b029c1ee045b886ebf9efef9985ca23450de ]
    
    I removed the MAY_BACKLOG flag on the aio path a while ago but
    the error check still incorrectly interpreted EBUSY as success.
    This may cause the submitter to wait for a request that will never
    complete.
    
    Fixes: dad419970637 ("crypto: algif_skcipher - Do not set...")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6623eea9abb43607621bd85fccaed6543a042c4
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Oct 1 12:39:00 2020 +0100

    x86/events/amd/iommu: Fix sizeof mismatch
    
    [ Upstream commit 59d5396a4666195f89a67e118e9e627ddd6f53a1 ]
    
    An incorrect sizeof is being used, struct attribute ** is not correct,
    it should be struct attribute *. Note that since ** is the same size as
    * this is not causing any issues.  Improve this fix by using sizeof(*attrs)
    as this allows us to not even reference the type of the pointer.
    
    Addresses-Coverity: ("Sizeof not portable (SIZEOF_MISMATCH)")
    Fixes: 51686546304f ("x86/events/amd/iommu: Fix sysfs perf attribute groups")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20201001113900.58889-1-colin.king@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 200f13d0d9a1a677df86e37fcf1aeb8aebb0a482
Author: Libing Zhou <libing.zhou@nokia-sbell.com>
Date:   Thu Aug 20 10:56:41 2020 +0800

    x86/nmi: Fix nmi_handle() duration miscalculation
    
    [ Upstream commit f94c91f7ba3ba7de2bc8aa31be28e1abb22f849e ]
    
    When nmi_check_duration() is checking the time an NMI handler took to
    execute, the whole_msecs value used should be read from the @duration
    argument, not from the ->max_duration, the latter being used to store
    the current maximal duration.
    
     [ bp: Rewrite commit message. ]
    
    Fixes: 248ed51048c4 ("x86/nmi: Remove irq_work from the long duration NMI handler")
    Suggested-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Libing Zhou <libing.zhou@nokia-sbell.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Changbin Du <changbin.du@gmail.com>
    Link: https://lkml.kernel.org/r/20200820025641.44075-1-libing.zhou@nokia-sbell.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b257bb437dc30231728be8d4caafd2fccb675541
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Fri Sep 25 06:49:05 2020 -0700

    perf/x86/intel/uncore: Reduce the number of CBOX counters
    
    [ Upstream commit ee139385432e919f4d1f59b80edbc073cdae1391 ]
    
    An oops is triggered by the fuzzy test.
    
    [  327.853081] unchecked MSR access error: RDMSR from 0x70c at rIP:
    0xffffffffc082c820 (uncore_msr_read_counter+0x10/0x50 [intel_uncore])
    [  327.853083] Call Trace:
    [  327.853085]  <IRQ>
    [  327.853089]  uncore_pmu_event_start+0x85/0x170 [intel_uncore]
    [  327.853093]  uncore_pmu_event_add+0x1a4/0x410 [intel_uncore]
    [  327.853097]  ? event_sched_in.isra.118+0xca/0x240
    
    There are 2 GP counters for each CBOX, but the current code claims 4
    counters. Accessing the invalid registers triggers the oops.
    
    Fixes: 6e394376ee89 ("perf/x86/intel/uncore: Add Intel Icelake uncore support")
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20200925134905.8839-3-kan.liang@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e089a75b778696fe11db57cfcbaf081909b5550d
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Fri Sep 25 06:49:04 2020 -0700

    perf/x86/intel/uncore: Update Ice Lake uncore units
    
    [ Upstream commit 8f5d41f3a0f495435c88ebba8fc150c931c10fef ]
    
    There are some updates for the Icelake model specific uncore performance
    monitors. (The update can be found at 10th generation intel core
    processors families specification update Revision 004, ICL068)
    
    1) Counter 0 of ARB uncore unit is not available for software use
    2) The global 'enable bit' (bit 29) and 'freeze bit' (bit 31) of
       MSR_UNC_PERF_GLOBAL_CTRL cannot be used to control counter behavior.
       Needs to use local enable in event select MSR.
    
    Accessing the modified bit/registers will be ignored by HW. Users may
    observe inaccurate results with the current code.
    
    The changes of the MSR_UNC_PERF_GLOBAL_CTRL imply that groups cannot be
    read atomically anymore. Although the error of the result for a group
    becomes a bit bigger, it still far lower than not using a group. The
    group support is still kept. Only Remove the *_box() related
    implementation.
    
    Since the counter 0 of ARB uncore unit is not available, update the MSR
    address for the ARB uncore unit.
    
    There is no change for IMC uncore unit, which only include free-running
    counters.
    
    Fixes: 6e394376ee89 ("perf/x86/intel/uncore: Add Intel Icelake uncore support")
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20200925134905.8839-2-kan.liang@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cfa97676cb4499d6bef09af826a349320f284f77
Author: Xunlei Pang <xlpang@linux.alibaba.com>
Date:   Thu Sep 24 14:48:47 2020 +0800

    sched/fair: Fix wrong cpu selecting from isolated domain
    
    [ Upstream commit df3cb4ea1fb63ff326488efd671ba3c39034255e ]
    
    We've met problems that occasionally tasks with full cpumask
    (e.g. by putting it into a cpuset or setting to full affinity)
    were migrated to our isolated cpus in production environment.
    
    After some analysis, we found that it is due to the current
    select_idle_smt() not considering the sched_domain mask.
    
    Steps to reproduce on my 31-CPU hyperthreads machine:
    1. with boot parameter: "isolcpus=domain,2-31"
       (thread lists: 0,16 and 1,17)
    2. cgcreate -g cpu:test; cgexec -g cpu:test "test_threads"
    3. some threads will be migrated to the isolated cpu16~17.
    
    Fix it by checking the valid domain mask in select_idle_smt().
    
    Fixes: 10e2f1acd010 ("sched/core: Rewrite and improve select_idle_siblings())
    Reported-by: Wetp Zhang <wetp.zy@linux.alibaba.com>
    Signed-off-by: Xunlei Pang <xlpang@linux.alibaba.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Jiang Biao <benbjiang@tencent.com>
    Reviewed-by: Vincent Guittot <vincent.guittot@linaro.org>
    Link: https://lkml.kernel.org/r/1600930127-76857-1-git-send-email-xlpang@linux.alibaba.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 500a98894821979a5350bb3f4ca443f3eddfbfe4
Author: Mark Salter <msalter@redhat.com>
Date:   Tue Sep 15 16:41:10 2020 -0400

    drivers/perf: thunderx2_pmu: Fix memory resource error handling
    
    [ Upstream commit 688494a407d1419a6b158c644b262c61cde39f48 ]
    
    In tx2_uncore_pmu_init_dev(), a call to acpi_dev_get_resources() is used
    to create a list _CRS resources which is searched for the device base
    address. There is an error check following this:
    
       if (!rentry->res)
               return NULL
    
    In no case, will rentry->res be NULL, so the test is useless. Even
    if the test worked, it comes before the resource list memory is
    freed. None of this really matters as long as the ACPI table has
    the memory resource. Let's clean it up so that it makes sense and
    will give a meaningful error should firmware leave out the memory
    resource.
    
    Fixes: 69c32972d593 ("drivers/perf: Add Cavium ThunderX2 SoC UNCORE PMU driver")
    Signed-off-by: Mark Salter <msalter@redhat.com>
    Link: https://lore.kernel.org/r/20200915204110.326138-2-msalter@redhat.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1731c693a62c79886a150788bdbf2fa3e675679a
Author: Mark Salter <msalter@redhat.com>
Date:   Tue Sep 15 16:41:09 2020 -0400

    drivers/perf: xgene_pmu: Fix uninitialized resource struct
    
    [ Upstream commit a76b8236edcf5b785d044b930f9e14ad02b4a484 ]
    
    This splat was reported on newer Fedora kernels booting on certain
    X-gene based machines:
    
     xgene-pmu APMC0D83:00: X-Gene PMU version 3
     Unable to handle kernel read from unreadable memory at virtual \
     address 0000000000004006
     ...
     Call trace:
      string+0x50/0x100
      vsnprintf+0x160/0x750
      devm_kvasprintf+0x5c/0xb4
      devm_kasprintf+0x54/0x60
      __devm_ioremap_resource+0xdc/0x1a0
      devm_ioremap_resource+0x14/0x20
      acpi_get_pmu_hw_inf.isra.0+0x84/0x15c
      acpi_pmu_dev_add+0xbc/0x21c
      acpi_ns_walk_namespace+0x16c/0x1e4
      acpi_walk_namespace+0xb4/0xfc
      xgene_pmu_probe_pmu_dev+0x7c/0xe0
      xgene_pmu_probe.part.0+0x2c0/0x310
      xgene_pmu_probe+0x54/0x64
      platform_drv_probe+0x60/0xb4
      really_probe+0xe8/0x4a0
      driver_probe_device+0xe4/0x100
      device_driver_attach+0xcc/0xd4
      __driver_attach+0xb0/0x17c
      bus_for_each_dev+0x6c/0xb0
      driver_attach+0x30/0x40
      bus_add_driver+0x154/0x250
      driver_register+0x84/0x140
      __platform_driver_register+0x54/0x60
      xgene_pmu_driver_init+0x28/0x34
      do_one_initcall+0x40/0x204
      do_initcalls+0x104/0x144
      kernel_init_freeable+0x198/0x210
      kernel_init+0x20/0x12c
      ret_from_fork+0x10/0x18
     Code: 91000400 110004e1 eb08009f 540000c0 (38646846)
     ---[ end trace f08c10566496a703 ]---
    
    This is due to use of an uninitialized local resource struct in the xgene
    pmu driver. The thunderx2_pmu driver avoids this by using the resource list
    constructed by acpi_dev_get_resources() rather than using a callback from
    that function. The callback in the xgene driver didn't fully initialize
    the resource. So get rid of the callback and search the resource list as
    done by thunderx2.
    
    Fixes: 832c927d119b ("perf: xgene: Add APM X-Gene SoC Performance Monitoring Unit driver")
    Signed-off-by: Mark Salter <msalter@redhat.com>
    Link: https://lore.kernel.org/r/20200915204110.326138-1-msalter@redhat.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e297c83e64df6981509943ebc603c487abdea8b
Author: Arvind Sankar <nivedita@alum.mit.edu>
Date:   Mon Sep 7 17:39:19 2020 -0400

    x86/fpu: Allow multiple bits in clearcpuid= parameter
    
    [ Upstream commit 0a4bb5e5507a585532cc413125b921c8546fc39f ]
    
    Commit
    
      0c2a3913d6f5 ("x86/fpu: Parse clearcpuid= as early XSAVE argument")
    
    changed clearcpuid parsing from __setup() to cmdline_find_option().
    While the __setup() function would have been called for each clearcpuid=
    parameter on the command line, cmdline_find_option() will only return
    the last one, so the change effectively made it impossible to disable
    more than one bit.
    
    Allow a comma-separated list of bit numbers as the argument for
    clearcpuid to allow multiple bits to be disabled again. Log the bits
    being disabled for informational purposes.
    
    Also fix the check on the return value of cmdline_find_option(). It
    returns -1 when the option is not found, so testing as a boolean is
    incorrect.
    
    Fixes: 0c2a3913d6f5 ("x86/fpu: Parse clearcpuid= as early XSAVE argument")
    Signed-off-by: Arvind Sankar <nivedita@alum.mit.edu>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20200907213919.2423441-1-nivedita@alum.mit.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab6bb1c1f1de2aed4727d508d775c8a4688d8ce5
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Wed Sep 2 14:06:49 2020 -0700

    perf/x86/intel/ds: Fix x86_pmu_stop warning for large PEBS
    
    [ Upstream commit 35d1ce6bec133679ff16325d335217f108b84871 ]
    
    A warning as below may be triggered when sampling with large PEBS.
    
    [  410.411250] perf: interrupt took too long (72145 > 71975), lowering
    kernel.perf_event_max_sample_rate to 2000
    [  410.724923] ------------[ cut here ]------------
    [  410.729822] WARNING: CPU: 0 PID: 16397 at arch/x86/events/core.c:1422
    x86_pmu_stop+0x95/0xa0
    [  410.933811]  x86_pmu_del+0x50/0x150
    [  410.937304]  event_sched_out.isra.0+0xbc/0x210
    [  410.941751]  group_sched_out.part.0+0x53/0xd0
    [  410.946111]  ctx_sched_out+0x193/0x270
    [  410.949862]  __perf_event_task_sched_out+0x32c/0x890
    [  410.954827]  ? set_next_entity+0x98/0x2d0
    [  410.958841]  __schedule+0x592/0x9c0
    [  410.962332]  schedule+0x5f/0xd0
    [  410.965477]  exit_to_usermode_loop+0x73/0x120
    [  410.969837]  prepare_exit_to_usermode+0xcd/0xf0
    [  410.974369]  ret_from_intr+0x2a/0x3a
    [  410.977946] RIP: 0033:0x40123c
    [  411.079661] ---[ end trace bc83adaea7bb664a ]---
    
    In the non-overflow context, e.g., context switch, with large PEBS, perf
    may stop an event twice. An example is below.
    
      //max_samples_per_tick is adjusted to 2
      //NMI is triggered
      intel_pmu_handle_irq()
         handle_pmi_common()
           drain_pebs()
             __intel_pmu_pebs_event()
               perf_event_overflow()
                 __perf_event_account_interrupt()
                   hwc->interrupts = 1
                   return 0
      //A context switch happens right after the NMI.
      //In the same tick, the perf_throttled_seq is not changed.
      perf_event_task_sched_out()
         perf_pmu_sched_task()
           intel_pmu_drain_pebs_buffer()
             __intel_pmu_pebs_event()
               perf_event_overflow()
                 __perf_event_account_interrupt()
                   ++hwc->interrupts >= max_samples_per_tick
                   return 1
               x86_pmu_stop();  # First stop
         perf_event_context_sched_out()
           task_ctx_sched_out()
             ctx_sched_out()
               event_sched_out()
                 x86_pmu_del()
                   x86_pmu_stop();  # Second stop and trigger the warning
    
    Perf should only invoke the perf_event_overflow() in the overflow
    context.
    
    Current drain_pebs() is called from:
    - handle_pmi_common()                   -- overflow context
    - intel_pmu_pebs_sched_task()           -- non-overflow context
    - intel_pmu_pebs_disable()              -- non-overflow context
    - intel_pmu_auto_reload_read()          -- possible overflow context
      With PERF_SAMPLE_READ + PERF_FORMAT_GROUP, the function may be
      invoked in the NMI handler. But, before calling the function, the
      PEBS buffer has already been drained. The __intel_pmu_pebs_event()
      will not be called in the possible overflow context.
    
    To fix the issue, an indicator is required to distinguish between the
    overflow context aka handle_pmi_common() and other cases.
    The dummy regs pointer can be used as the indicator.
    
    In the non-overflow context, perf should treat the last record the same
    as other PEBS records, and doesn't invoke the generic overflow handler.
    
    Fixes: 21509084f999 ("perf/x86/intel: Handle multiple records in the PEBS buffer")
    Reported-by: Like Xu <like.xu@linux.intel.com>
    Suggested-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Tested-by: Like Xu <like.xu@linux.intel.com>
    Link: https://lkml.kernel.org/r/20200902210649.2743-1-kan.liang@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9aee8216556e93b166c6039d571a6a89a5fb6f36
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Aug 27 09:07:43 2020 +0200

    EDAC/ti: Fix handling of platform_get_irq() error
    
    [ Upstream commit 66077adb70a2a9e92540155b2ace33ec98299c90 ]
    
    platform_get_irq() returns a negative error number on error. In such a
    case, comparison to 0 would pass the check therefore check the return
    value properly, whether it is negative.
    
     [ bp: Massage commit message. ]
    
    Fixes: 86a18ee21e5e ("EDAC, ti: Add support for TI keystone and DRA7xx EDAC")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Tero Kristo <t-kristo@ti.com>
    Link: https://lkml.kernel.org/r/20200827070743.26628-2-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64a9f5a30fbb0adcf11321eedfc3c41e7b4fa32b
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Aug 27 09:07:42 2020 +0200

    EDAC/aspeed: Fix handling of platform_get_irq() error
    
    [ Upstream commit afce6996943be265fa39240b67025cfcb1bcdfb1 ]
    
    platform_get_irq() returns a negative error number on error. In such a
    case, comparison to 0 would pass the check therefore check the return
    value properly, whether it is negative.
    
     [ bp: Massage commit message. ]
    
    Fixes: 9b7e6242ee4e ("EDAC, aspeed: Add an Aspeed AST2500 EDAC driver")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Stefan Schaeckeler <schaecsn@gmx.net>
    Link: https://lkml.kernel.org/r/20200827070743.26628-1-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d86328e42c3e6f1aecd4e32c4980def0b717227
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Wed Aug 26 20:14:37 2020 +0800

    EDAC/i5100: Fix error handling order in i5100_init_one()
    
    [ Upstream commit 857a3139bd8be4f702c030c8ca06f3fd69c1741a ]
    
    When pci_get_device_func() fails, the driver doesn't need to execute
    pci_dev_put(). mci should still be freed, though, to prevent a memory
    leak. When pci_enable_device() fails, the error injection PCI device
    "einj" doesn't need to be disabled either.
    
     [ bp: Massage commit message, rename label to "bail_mc_free". ]
    
    Fixes: 52608ba205461 ("i5100_edac: probe for device 19 function 0")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20200826121437.31606-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24543df3f4912e060c17db01ee6d33692f9d4a44
Author: Andrei Botila <andrei.botila@nxp.com>
Date:   Tue Sep 22 19:03:20 2020 +0300

    crypto: caam/qi - add fallback for XTS with more than 8B IV
    
    commit 83e8aa9121380b23ebae6e413962fa2a7b52cf92 upstream.
    
    A hardware limitation exists for CAAM until Era 9 which restricts
    the accelerator to IVs with only 8 bytes. When CAAM has a lower era
    a fallback is necessary to process 16 bytes IV.
    
    Fixes: b189817cf789 ("crypto: caam/qi - add ablkcipher and authenc algorithms")
    Cc: <stable@vger.kernel.org> # v4.12+
    Signed-off-by: Andrei Botila <andrei.botila@nxp.com>
    Reviewed-by: Horia GeantÄ <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66ec3755f791e7de67ad002bf9436d746d9b0b93
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Fri Jul 31 17:03:50 2020 +1000

    crypto: algif_aead - Do not set MAY_BACKLOG on the async path
    
    commit cbdad1f246dd98e6c9c32a6e5212337f542aa7e0 upstream.
    
    The async path cannot use MAY_BACKLOG because it is not meant to
    block, which is what MAY_BACKLOG does.  On the other hand, both
    the sync and async paths can make use of MAY_SLEEP.
    
    Fixes: 83094e5e9e49 ("crypto: af_alg - add async support to...")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68e3b25444cbc121fe7ec06909c4499c9ac103fd
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Fri Sep 4 11:23:28 2020 +0200

    ima: Don't ignore errors from crypto_shash_update()
    
    commit 60386b854008adc951c470067f90a2d85b5d520f upstream.
    
    Errors returned by crypto_shash_update() are not checked in
    ima_calc_boot_aggregate_tfm() and thus can be overwritten at the next
    iteration of the loop. This patch adds a check after calling
    crypto_shash_update() and returns immediately if the result is not zero.
    
    Cc: stable@vger.kernel.org
    Fixes: 3323eec921efd ("integrity: IMA as an integrity service provider")
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a62024168c3c75e977af3a75c6045587e1984b9
Author: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Date:   Sat Oct 3 23:27:07 2020 +0000

    KVM: SVM: Initialize prev_ga_tag before use
    
    commit f6426ab9c957e97418ac5b0466538792767b1738 upstream.
    
    The function amd_ir_set_vcpu_affinity makes use of the parameter struct
    amd_iommu_pi_data.prev_ga_tag to determine if it should delete struct
    amd_iommu_pi_data from a list when not running in AVIC mode.
    
    However, prev_ga_tag is initialized only when AVIC is enabled. The non-zero
    uninitialized value can cause unintended code path, which ends up making
    use of the struct vcpu_svm.ir_list and ir_list_lock without being
    initialized (since they are intended only for the AVIC case).
    
    This triggers NULL pointer dereference bug in the function vm_ir_list_del
    with the following call trace:
    
        svm_update_pi_irte+0x3c2/0x550 [kvm_amd]
        ? proc_create_single_data+0x41/0x50
        kvm_arch_irq_bypass_add_producer+0x40/0x60 [kvm]
        __connect+0x5f/0xb0 [irqbypass]
        irq_bypass_register_producer+0xf8/0x120 [irqbypass]
        vfio_msi_set_vector_signal+0x1de/0x2d0 [vfio_pci]
        vfio_msi_set_block+0x77/0xe0 [vfio_pci]
        vfio_pci_set_msi_trigger+0x25c/0x2f0 [vfio_pci]
        vfio_pci_set_irqs_ioctl+0x88/0xb0 [vfio_pci]
        vfio_pci_ioctl+0x2ea/0xed0 [vfio_pci]
        ? alloc_file_pseudo+0xa5/0x100
        vfio_device_fops_unl_ioctl+0x26/0x30 [vfio]
        ? vfio_device_fops_unl_ioctl+0x26/0x30 [vfio]
        __x64_sys_ioctl+0x96/0xd0
        do_syscall_64+0x37/0x80
        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Therefore, initialize prev_ga_tag to zero before use. This should be safe
    because ga_tag value 0 is invalid (see function avic_vm_init).
    
    Fixes: dfa20099e26e ("KVM: SVM: Refactor AVIC vcpu initialization into avic_init_vcpu()")
    Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Message-Id: <20201003232707.4662-1-suravee.suthikulpanit@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39ba2b6c3d111a5eedd76c949485cea82cc110d0
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Wed Sep 23 11:37:28 2020 -0700

    KVM: x86/mmu: Commit zap of remaining invalid pages when recovering lpages
    
    commit e89505698c9f70125651060547da4ff5046124fc upstream.
    
    Call kvm_mmu_commit_zap_page() after exiting the "prepare zap" loop in
    kvm_recover_nx_lpages() to finish zapping pages in the unlikely event
    that the loop exited due to lpage_disallowed_mmu_pages being empty.
    Because the recovery thread drops mmu_lock() when rescheduling, it's
    possible that lpage_disallowed_mmu_pages could be emptied by a different
    thread without to_zap reaching zero despite to_zap being derived from
    the number of disallowed lpages.
    
    Fixes: 1aa9b9572b105 ("kvm: x86: mmu: Recovery of shattered NX large pages")
    Cc: Junaid Shahid <junaids@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Message-Id: <20200923183735.584-2-sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 413aeed19567912acf71a98aa2c1bc32e2b709a9
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Wed Sep 23 11:44:47 2020 -0700

    KVM: nVMX: Reload vmcs01 if getting vmcs12's pages fails
    
    commit b89d5ad00e789967a5e2c5335f75c48755bebd88 upstream.
    
    Reload vmcs01 when bailing from nested_vmx_enter_non_root_mode() as KVM
    expects vmcs01 to be loaded when is_guest_mode() is false.
    
    Fixes: 671ddc700fd08 ("KVM: nVMX: Don't leak L1 MMIO regions to L2")
    Cc: stable@vger.kernel.org
    Cc: Dan Cross <dcross@google.com>
    Cc: Jim Mattson <jmattson@google.com>
    Cc: Peter Shier <pshier@google.com>
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Message-Id: <20200923184452.980-3-sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9ac2036344a34e5c82094991ed4a27dbbf8e9f6
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Wed Sep 23 11:44:46 2020 -0700

    KVM: nVMX: Reset the segment cache when stuffing guest segs
    
    commit fc387d8daf3960c5e1bc18fa353768056f4fd394 upstream.
    
    Explicitly reset the segment cache after stuffing guest segment regs in
    prepare_vmcs02_rare().  Although the cache is reset when switching to
    vmcs02, there is nothing that prevents KVM from re-populating the cache
    prior to writing vmcs02 with vmcs12's values.  E.g. if the vCPU is
    preempted after switching to vmcs02 but before prepare_vmcs02_rare(),
    kvm_arch_vcpu_put() will dereference GUEST_SS_AR_BYTES via .get_cpl()
    and cache the stale vmcs02 value.  While the current code base only
    caches stale data in the preemption case, it's theoretically possible
    future code could read a segment register during the nested flow itself,
    i.e. this isn't technically illegal behavior in kvm_arch_vcpu_put(),
    although it did introduce the bug.
    
    This manifests as an unexpected nested VM-Enter failure when running
    with unrestricted guest disabled if the above preemption case coincides
    with L1 switching L2's CPL, e.g. when switching from a L2 vCPU at CPL3
    to to a L2 vCPU at CPL0.  stack_segment_valid() will see the new SS_SEL
    but the old SS_AR_BYTES and incorrectly mark the guest state as invalid
    due to SS.dpl != SS.rpl.
    
    Don't bother updating the cache even though prepare_vmcs02_rare() writes
    every segment.  With unrestricted guest, guest segments are almost never
    read, let alone L2 guest segments.  On the other hand, populating the
    cache requires a large number of memory writes, i.e. it's unlikely to be
    a net win.  Updating the cache would be a win when unrestricted guest is
    not supported, as guest_state_valid() will immediately cache all segment
    registers.  But, nested virtualization without unrestricted guest is
    dirt slow, saving some VMREADs won't change that, and every CPU
    manufactured in the last decade supports unrestricted guest.  In other
    words, the extra (minor) complexity isn't worth the trouble.
    
    Note, kvm_arch_vcpu_put() may see stale data when querying guest CPL
    depending on when preemption occurs.  This is "ok" in that the usage is
    imperfect by nature, i.e. it's used heuristically to improve performance
    but doesn't affect functionality.  kvm_arch_vcpu_put() could be "fixed"
    by also disabling preemption while loading segments, but that's
    pointless and misleading as reading state from kvm_sched_{in,out}() is
    guaranteed to see stale data in one form or another.  E.g. even if all
    the usage of regs_avail is fixed to call kvm_register_mark_available()
    after the associated state is set, the individual state might still be
    stale with respect to the overall vCPU state.  I.e. making functional
    decisions in an asynchronous hook is doomed from the get go.  Thankfully
    KVM doesn't do that.
    
    Fixes: de63ad4cf4973 ("KVM: X86: implement the logic for spinlock optimization")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Message-Id: <20200923184452.980-2-sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5513655cfee0e9c9f58a7b8678ecbbd81d56ccf
Author: Rohith Surabattula <rohiths@microsoft.com>
Date:   Thu Oct 8 09:58:41 2020 +0000

    SMB3: Resolve data corruption of TCP server info fields
    
    commit 62593011247c8a8cfeb0c86aff84688b196727c2 upstream.
    
    TCP server info field server->total_read is modified in parallel by
    demultiplex thread and decrypt offload worker thread. server->total_read
    is used in calculation to discard the remaining data of PDU which is
    not read into memory.
    
    Because of parallel modification, server->total_read can get corrupted
    and can result in discarding the valid data of next PDU.
    
    Signed-off-by: Rohith Surabattula <rohiths@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    CC: Stable <stable@vger.kernel.org> #5.4+
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aeaa30720d67c3097256786c7047db9cf0e234b9
Author: Shyam Prasad N <sprasad@microsoft.com>
Date:   Thu Oct 15 10:41:31 2020 -0700

    cifs: Return the error from crypt_message when enc/dec key not found.
    
    commit 0bd294b55a5de442370c29fa53bab17aef3ff318 upstream.
    
    In crypt_message, when smb2_get_enc_key returns error, we need to
    return the error back to the caller. If not, we end up processing
    the message further, causing a kernel oops due to unwarranted access
    of memory.
    
    Call Trace:
    smb3_receive_transform+0x120/0x870 [cifs]
    cifs_demultiplex_thread+0xb53/0xc20 [cifs]
    ? cifs_handle_standard+0x190/0x190 [cifs]
    kthread+0x116/0x130
    ? kthread_park+0x80/0x80
    ret_from_fork+0x1f/0x30
    
    Signed-off-by: Shyam Prasad N <sprasad@microsoft.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65604f3ea2f269fa1dc5703e1686fbad3daf333d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 16 23:18:21 2020 +0300

    cifs: remove bogus debug code
    
    commit d367cb960ce88914898cbfa43645c2e43ede9465 upstream.
    
    The "end" pointer is either NULL or it points to the next byte to parse.
    If there isn't a next byte then dereferencing "end" is an off-by-one out
    of bounds error.  And, of course, if it's NULL that leads to an Oops.
    Printing "*end" doesn't seem very useful so let's delete this code.
    
    Also for the last debug statement, I noticed that it should be printing
    "sequence_end" instead of "end" so fix that as well.
    
    Reported-by: Dominik Maier <dmaier@sect.tu-berlin.de>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 706538edacc69732403936475a9f0ad9eb7155a8
Author: Jian-Hong Pan <jhp@endlessos.org>
Date:   Wed Oct 7 13:22:25 2020 +0800

    ALSA: hda/realtek: Enable audio jacks of ASUS D700SA with ALC887
    
    commit ca184355db8e60290fa34bf61c13308e6f4f50d3 upstream.
    
    The ASUS D700SA desktop's audio (1043:2390) with ALC887 cannot detect
    the headset microphone and another headphone jack until
    ALC887_FIXUP_ASUS_HMIC and ALC887_FIXUP_ASUS_AUDIO quirks are applied.
    The NID 0x15 maps as the headset microphone and NID 0x19 maps as another
    headphone jack. Also need the function like alc887_fixup_asus_jack to
    enable the audio jacks.
    
    Signed-off-by: Jian-Hong Pan <jhp@endlessos.org>
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201007052224.22611-1-jhp@endlessos.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e19bf634c92d5d403ee21639becd70a0e65055d
Author: Qiu Wenbo <qiuwenbo@kylinos.com.cn>
Date:   Fri Oct 2 20:44:54 2020 +0800

    ALSA: hda/realtek - Add mute Led support for HP Elitebook 845 G7
    
    commit 08befca40026136c14c3cd84f9e36c4cd20a358e upstream.
    
    After installing archlinux, the mute led and micmute led are not working
    at all. This patch fix this issue by applying a fixup from similar
    model. These mute leds are confirmed working on HP Elitebook 845 G7.
    
    Signed-off-by: Qiu Wenbo <qiuwenbo@kylinos.com.cn>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201002124454.7240-1-qiuwenbo@kylinos.com.cn
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 995a90e7042939d7ea6fcb77a1404a8328eaf43e
Author: Hui Wang <hui.wang@canonical.com>
Date:   Mon Sep 28 16:01:17 2020 +0800

    ALSA: hda/realtek - set mic to auto detect on a HP AIO machine
    
    commit 13468bfa8c58731dc9ecda1cd9b22a191114f944 upstream.
    
    Recently we enabled a HP AIO machine, we found the mic on the machine
    couldn't record any sound and it couldn't detect plugging and
    unplugging as well.
    
    Through debugging we found the mic is set to manual detect mode, after
    setting it to auto detect mode, it could detect plugging and
    unplugging and could record sound.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Link: https://lore.kernel.org/r/20200928080117.12435-1-hui.wang@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a40f49438a15e68ecb976bdce883318ee459407e
Author: Jeremy Szu <jeremy.szu@canonical.com>
Date:   Thu Oct 8 18:56:44 2020 +0800

    ALSA: hda/realtek - The front Mic on a HP machine doesn't work
    
    commit 148ebf548a1af366fc797fcc7d03f0bb92b12a79 upstream.
    
    On a HP ZCentral, the front Mic could not be detected.
    
    The codec of the HP ZCentrol is alc671 and it needs to override the pin
    configuration to enable the headset mic.
    
    Signed-off-by: Jeremy Szu <jeremy.szu@canonical.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201008105645.65505-1-jeremy.szu@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8df0ffe2f32c09b4627cbce5cd5faf8e98a6a71e
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Oct 15 11:42:00 2020 -0700

    icmp: randomize the global rate limiter
    
    [ Upstream commit b38e7819cae946e2edf869e604af1e65a5d241c5 ]
    
    Keyu Man reported that the ICMP rate limiter could be used
    by attackers to get useful signal. Details will be provided
    in an upcoming academic publication.
    
    Our solution is to add some noise, so that the attackers
    no longer can get help from the predictable token bucket limiter.
    
    Fixes: 4cdf507d5452 ("icmp: add a global rate limitation")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Keyu Man <kman001@ucr.edu>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fa95d101cafc4dc838771dfb2e7449e0bec561a
Author: Neal Cardwell <ncardwell@google.com>
Date:   Thu Oct 22 10:33:31 2020 -0400

    tcp: fix to update snd_wl1 in bulk receiver fast path
    
    [ Upstream commit 18ded910b589839e38a51623a179837ab4cc3789 ]
    
    In the header prediction fast path for a bulk data receiver, if no
    data is newly acknowledged then we do not call tcp_ack() and do not
    call tcp_ack_update_window(). This means that a bulk receiver that
    receives large amounts of data can have the incoming sequence numbers
    wrap, so that the check in tcp_may_update_window fails:
       after(ack_seq, tp->snd_wl1)
    
    If the incoming receive windows are zero in this state, and then the
    connection that was a bulk data receiver later wants to send data,
    that connection can find itself persistently rejecting the window
    updates in incoming ACKs. This means the connection can persistently
    fail to discover that the receive window has opened, which in turn
    means that the connection is unable to send anything, and the
    connection's sending process can get permanently "stuck".
    
    The fix is to update snd_wl1 in the header prediction fast path for a
    bulk data receiver, so that it keeps up and does not see wrapping
    problems.
    
    This fix is based on a very nice and thorough analysis and diagnosis
    by Apollon Oikonomopoulos (see link below).
    
    This is a stable candidate but there is no Fixes tag here since the
    bug predates current git history. Just for fun: looks like the bug
    dates back to when header prediction was added in Linux v2.1.8 in Nov
    1996. In that version tcp_rcv_established() was added, and the code
    only updates snd_wl1 in tcp_ack(), and in the new "Bulk data transfer:
    receiver" code path it does not call tcp_ack(). This fix seems to
    apply cleanly at least as far back as v3.2.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Reported-by: Apollon Oikonomopoulos <apoikos@dmesg.gr>
    Tested-by: Apollon Oikonomopoulos <apoikos@dmesg.gr>
    Link: https://www.spinics.net/lists/netdev/msg692430.html
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20201022143331.1887495-1-ncardwell.kernel@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5e4e010f39e4984045c270b42d065d1cfdaacb4
Author: Po-Hsu Lin <po-hsu.lin@canonical.com>
Date:   Mon Oct 19 11:09:28 2020 +0800

    selftests: rtnetlink: load fou module for kci_test_encap_fou() test
    
    [ Upstream commit 26ebd6fed9bb3aa480c7c0f147ac0e7b11000f65 ]
    
    The kci_test_encap_fou() test from kci_test_encap() in rtnetlink.sh
    needs the fou module to work. Otherwise it will fail with:
    
      $ ip netns exec "$testns" ip fou add port 7777 ipproto 47
      RTNETLINK answers: No such file or directory
      Error talking to the kernel
    
    Add the CONFIG_NET_FOU into the config file as well. Which needs at
    least to be set as a loadable module.
    
    Fixes: 6227efc1a20b ("selftests: rtnetlink.sh: add vxlan and fou test cases")
    Signed-off-by: Po-Hsu Lin <po-hsu.lin@canonical.com>
    Link: https://lore.kernel.org/r/20201019030928.9859-1-po-hsu.lin@canonical.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f7c40767bf4c2a44d61d24720a0f0f02624979d
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Thu Oct 15 11:45:25 2020 +0300

    selftests: forwarding: Add missing 'rp_filter' configuration
    
    [ Upstream commit 71a0e29e99405d89b695882d52eec60844173697 ]
    
    When 'rp_filter' is configured in strict mode (1) the tests fail because
    packets received from the macvlan netdevs would not be forwarded through
    them on the reverse path.
    
    Fix this by disabling the 'rp_filter', meaning no source validation is
    performed.
    
    Fixes: 1538812e0880 ("selftests: forwarding: Add a test for VXLAN asymmetric routing")
    Fixes: 438a4f5665b2 ("selftests: forwarding: Add a test for VXLAN symmetric routing")
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Reported-by: Hangbin Liu <liuhangbin@gmail.com>
    Tested-by: Hangbin Liu <liuhangbin@gmail.com>
    Link: https://lore.kernel.org/r/20201015084525.135121-1-idosch@idosch.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f93a27b0f3010708bb8214377cec75b419c57da6
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Sun Oct 18 18:38:59 2020 +0200

    r8169: fix operation under forced interrupt threading
    
    [ Upstream commit 424a646e072a887aa87283b53aa6f8b19c2a7bef ]
    
    For several network drivers it was reported that using
    __napi_schedule_irqoff() is unsafe with forced threading. One way to
    fix this is switching back to __napi_schedule, but then we lose the
    benefit of the irqoff version in general. As stated by Eric it doesn't
    make sense to make the minimal hard irq handlers in drivers using NAPI
    a thread. Therefore ensure that the hard irq handler is never
    thread-ified.
    
    Fixes: 9a899a35b0d6 ("r8169: switch to napi_schedule_irqoff")
    Link: https://lkml.org/lkml/2020/10/18/19
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Link: https://lore.kernel.org/r/4d3ef84a-c812-5072-918a-22a6f6468310@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68db21094ee5ef6c16228cce302ea9526096ae84
Author: Defang Bo <bodefang@126.com>
Date:   Mon Oct 19 19:38:58 2020 +0800

    nfc: Ensure presence of NFC_ATTR_FIRMWARE_NAME attribute in nfc_genl_fw_download()
    
    [ Upstream commit 280e3ebdafb863b3cb50d5842f056267e15bf40c ]
    
    Check that the NFC_ATTR_FIRMWARE_NAME attributes are provided by
    the netlink client prior to accessing them.This prevents potential
    unhandled NULL pointer dereference exceptions which can be triggered
    by malicious user-mode programs, if they omit one or both of these
    attributes.
    
    Similar to commit a0323b979f81 ("nfc: Ensure presence of required attributes in the activate_target handler").
    
    Fixes: 9674da8759df ("NFC: Add firmware upload netlink command")
    Signed-off-by: Defang Bo <bodefang@126.com>
    Link: https://lore.kernel.org/r/1603107538-4744-1-git-send-email-bodefang@126.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f58abe7708a412a8b6f086ec8ba68c0b5410af3
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Fri Oct 16 20:29:14 2020 +0300

    nexthop: Fix performance regression in nexthop deletion
    
    [ Upstream commit df6afe2f7c19349de2ee560dc62ea4d9ad3ff889 ]
    
    While insertion of 16k nexthops all using the same netdev ('dummy10')
    takes less than a second, deletion takes about 130 seconds:
    
    # time -p ip -b nexthop.batch
    real 0.29
    user 0.01
    sys 0.15
    
    # time -p ip link set dev dummy10 down
    real 131.03
    user 0.06
    sys 0.52
    
    This is because of repeated calls to synchronize_rcu() whenever a
    nexthop is removed from a nexthop group:
    
    # /usr/share/bcc/tools/offcputime -p `pgrep -nx ip` -K
    ...
        b'finish_task_switch'
        b'schedule'
        b'schedule_timeout'
        b'wait_for_completion'
        b'__wait_rcu_gp'
        b'synchronize_rcu.part.0'
        b'synchronize_rcu'
        b'__remove_nexthop'
        b'remove_nexthop'
        b'nexthop_flush_dev'
        b'nh_netdev_event'
        b'raw_notifier_call_chain'
        b'call_netdevice_notifiers_info'
        b'__dev_notify_flags'
        b'dev_change_flags'
        b'do_setlink'
        b'__rtnl_newlink'
        b'rtnl_newlink'
        b'rtnetlink_rcv_msg'
        b'netlink_rcv_skb'
        b'rtnetlink_rcv'
        b'netlink_unicast'
        b'netlink_sendmsg'
        b'____sys_sendmsg'
        b'___sys_sendmsg'
        b'__sys_sendmsg'
        b'__x64_sys_sendmsg'
        b'do_syscall_64'
        b'entry_SYSCALL_64_after_hwframe'
        -                ip (277)
            126554955
    
    Since nexthops are always deleted under RTNL, synchronize_net() can be
    used instead. It will call synchronize_rcu_expedited() which only blocks
    for several microseconds as opposed to multiple milliseconds like
    synchronize_rcu().
    
    With this patch deletion of 16k nexthops takes less than a second:
    
    # time -p ip link set dev dummy10 down
    real 0.12
    user 0.00
    sys 0.04
    
    Tested with fib_nexthops.sh which includes torture tests that prompted
    the initial change:
    
    # ./fib_nexthops.sh
    ...
    Tests passed: 134
    Tests failed:   0
    
    Fixes: 90f33bffa382 ("nexthops: don't modify published nexthop groups")
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Reviewed-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Acked-by: Nikolay Aleksandrov <nikolay@nvidia.com>
    Link: https://lore.kernel.org/r/20201016172914.643282-1-idosch@idosch.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6d4782908150d3cd6ce55708e620f1e797886bf
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Wed Oct 21 00:02:40 2020 +0200

    net/sched: act_tunnel_key: fix OOB write in case of IPv6 ERSPAN tunnels
    
    [ Upstream commit a7a12b5a0f950bc6b9f7153390634ea798738db9 ]
    
    the following command
    
     # tc action add action tunnel_key \
     > set src_ip 2001:db8::1 dst_ip 2001:db8::2 id 10 erspan_opts 1:6789:0:0
    
    generates the following splat:
    
     BUG: KASAN: slab-out-of-bounds in tunnel_key_copy_opts+0xcc9/0x1010 [act_tunnel_key]
     Write of size 4 at addr ffff88813f5f1cc8 by task tc/873
    
     CPU: 2 PID: 873 Comm: tc Not tainted 5.9.0+ #282
     Hardware name: Red Hat KVM, BIOS 1.11.1-4.module+el8.1.0+4066+0f1aadab 04/01/2014
     Call Trace:
      dump_stack+0x99/0xcb
      print_address_description.constprop.7+0x1e/0x230
      kasan_report.cold.13+0x37/0x7c
      tunnel_key_copy_opts+0xcc9/0x1010 [act_tunnel_key]
      tunnel_key_init+0x160c/0x1f40 [act_tunnel_key]
      tcf_action_init_1+0x5b5/0x850
      tcf_action_init+0x15d/0x370
      tcf_action_add+0xd9/0x2f0
      tc_ctl_action+0x29b/0x3a0
      rtnetlink_rcv_msg+0x341/0x8d0
      netlink_rcv_skb+0x120/0x380
      netlink_unicast+0x439/0x630
      netlink_sendmsg+0x719/0xbf0
      sock_sendmsg+0xe2/0x110
      ____sys_sendmsg+0x5ba/0x890
      ___sys_sendmsg+0xe9/0x160
      __sys_sendmsg+0xd3/0x170
      do_syscall_64+0x33/0x40
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
     RIP: 0033:0x7f872a96b338
     Code: 89 02 48 c7 c0 ff ff ff ff eb b5 0f 1f 80 00 00 00 00 f3 0f 1e fa 48 8d 05 25 43 2c 00 8b 00 85 c0 75 17 b8 2e 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 58 c3 0f 1f 80 00 00 00 00 41 54 41 89 d4 55
     RSP: 002b:00007ffffe367518 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
     RAX: ffffffffffffffda RBX: 000000005f8f5aed RCX: 00007f872a96b338
     RDX: 0000000000000000 RSI: 00007ffffe367580 RDI: 0000000000000003
     RBP: 0000000000000000 R08: 0000000000000001 R09: 000000000000001c
     R10: 000000000000000b R11: 0000000000000246 R12: 0000000000000001
     R13: 0000000000686760 R14: 0000000000000601 R15: 0000000000000000
    
     Allocated by task 873:
      kasan_save_stack+0x19/0x40
      __kasan_kmalloc.constprop.7+0xc1/0xd0
      __kmalloc+0x151/0x310
      metadata_dst_alloc+0x20/0x40
      tunnel_key_init+0xfff/0x1f40 [act_tunnel_key]
      tcf_action_init_1+0x5b5/0x850
      tcf_action_init+0x15d/0x370
      tcf_action_add+0xd9/0x2f0
      tc_ctl_action+0x29b/0x3a0
      rtnetlink_rcv_msg+0x341/0x8d0
      netlink_rcv_skb+0x120/0x380
      netlink_unicast+0x439/0x630
      netlink_sendmsg+0x719/0xbf0
      sock_sendmsg+0xe2/0x110
      ____sys_sendmsg+0x5ba/0x890
      ___sys_sendmsg+0xe9/0x160
      __sys_sendmsg+0xd3/0x170
      do_syscall_64+0x33/0x40
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
     The buggy address belongs to the object at ffff88813f5f1c00
      which belongs to the cache kmalloc-256 of size 256
     The buggy address is located 200 bytes inside of
      256-byte region [ffff88813f5f1c00, ffff88813f5f1d00)
     The buggy address belongs to the page:
     page:0000000011b48a19 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x13f5f0
     head:0000000011b48a19 order:1 compound_mapcount:0
     flags: 0x17ffffc0010200(slab|head)
     raw: 0017ffffc0010200 0000000000000000 0000000d00000001 ffff888107c43400
     raw: 0000000000000000 0000000080100010 00000001ffffffff 0000000000000000
     page dumped because: kasan: bad access detected
    
     Memory state around the buggy address:
      ffff88813f5f1b80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
      ffff88813f5f1c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     >ffff88813f5f1c80: 00 00 00 00 00 00 00 00 00 fc fc fc fc fc fc fc
                                                   ^
      ffff88813f5f1d00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
      ffff88813f5f1d80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    
    using IPv6 tunnels, act_tunnel_key allocates a fixed amount of memory for
    the tunnel metadata, but then it expects additional bytes to store tunnel
    specific metadata with tunnel_key_copy_opts().
    
    Fix the arguments of __ipv6_tun_set_dst(), so that 'md_size' contains the
    size previously computed by tunnel_key_get_opts_len(), like it's done for
    IPv4 tunnels.
    
    Fixes: 0ed5269f9e41 ("net/sched: add tunnel option support to act_tunnel_key")
    Reported-by: Shuang Li <shuali@redhat.com>
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Link: https://lore.kernel.org/r/36ebe969f6d13ff59912d6464a4356fe6f103766.1603231100.git.dcaratti@redhat.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09ea22aa36814581e44d8a57963fcc80ec4ed056
Author: Ke Li <keli@akamai.com>
Date:   Thu Oct 22 02:41:46 2020 -0400

    net: Properly typecast int values to set sk_max_pacing_rate
    
    [ Upstream commit 700465fd338fe5df08a1b2e27fa16981f562547f ]
    
    In setsockopt(SO_MAX_PACING_RATE) on 64bit systems, sk_max_pacing_rate,
    after extended from 'u32' to 'unsigned long', takes unintentionally
    hiked value whenever assigned from an 'int' value with MSB=1, due to
    binary sign extension in promoting s32 to u64, e.g. 0x80000000 becomes
    0xFFFFFFFF80000000.
    
    Thus inflated sk_max_pacing_rate causes subsequent getsockopt to return
    ~0U unexpectedly. It may also result in increased pacing rate.
    
    Fix by explicitly casting the 'int' value to 'unsigned int' before
    assigning it to sk_max_pacing_rate, for zero extension to happen.
    
    Fixes: 76a9ebe811fb ("net: extend sk_pacing_rate to unsigned long")
    Signed-off-by: Ji Li <jli@akamai.com>
    Signed-off-by: Ke Li <keli@akamai.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20201022064146.79873-1-keli@akamai.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 432336b3cf2abdaec8295f4f26d4cf17522dcd9e
Author: Xie He <xie.he.0141@gmail.com>
Date:   Mon Oct 19 23:34:20 2020 -0700

    net: hdlc_raw_eth: Clear the IFF_TX_SKB_SHARING flag after calling ether_setup
    
    [ Upstream commit 5fce1e43e2d5bf2f7e3224d7b99b1c65ab2c26e2 ]
    
    This driver calls ether_setup to set up the network device.
    The ether_setup function would add the IFF_TX_SKB_SHARING flag to the
    device. This flag indicates that it is safe to transmit shared skbs to
    the device.
    
    However, this is not true. This driver may pad the frame (in eth_tx)
    before transmission, so the skb may be modified.
    
    Fixes: 550fd08c2ceb ("net: Audit drivers to identify those needing IFF_TX_SKB_SHARING cleared")
    Cc: Neil Horman <nhorman@tuxdriver.com>
    Cc: Krzysztof Halasa <khc@pm.waw.pl>
    Signed-off-by: Xie He <xie.he.0141@gmail.com>
    Link: https://lore.kernel.org/r/20201020063420.187497-1-xie.he.0141@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62d366f8e5704ea76e4b9ede82371db048d92609
Author: Xie He <xie.he.0141@gmail.com>
Date:   Mon Oct 19 18:31:52 2020 -0700

    net: hdlc: In hdlc_rcv, check to make sure dev is an HDLC device
    
    [ Upstream commit 01c4ceae0a38a0bdbfea6896f41efcd985a9c064 ]
    
    The hdlc_rcv function is used as hdlc_packet_type.func to process any
    skb received in the kernel with skb->protocol == htons(ETH_P_HDLC).
    The purpose of this function is to provide second-stage processing for
    skbs not assigned a "real" L3 skb->protocol value in the first stage.
    
    This function assumes the device from which the skb is received is an
    HDLC device (a device created by this module). It assumes that
    netdev_priv(dev) returns a pointer to "struct hdlc_device".
    
    However, it is possible that some driver in the kernel (not necessarily
    in our control) submits a received skb with skb->protocol ==
    htons(ETH_P_HDLC), from a non-HDLC device. In this case, the skb would
    still be received by hdlc_rcv. This will cause problems.
    
    hdlc_rcv should be able to recognize and drop invalid skbs. It should
    first make sure "dev" is actually an HDLC device, before starting its
    processing. This patch adds this check to hdlc_rcv.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: Krzysztof Halasa <khc@pm.waw.pl>
    Signed-off-by: Xie He <xie.he.0141@gmail.com>
    Link: https://lore.kernel.org/r/20201020013152.89259-1-xie.he.0141@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a3c8d6acbfcf8be4e09313c35a3830748b86323
Author: Dylan Hung <dylan_hung@aspeedtech.com>
Date:   Wed Oct 14 14:06:32 2020 +0800

    net: ftgmac100: Fix Aspeed ast2600 TX hang issue
    
    [ Upstream commit 137d23cea1c044b2d4853ac71bc68126b25fdbb2 ]
    
    The new HW arbitration feature on Aspeed ast2600 will cause MAC TX to
    hang when handling scatter-gather DMA.  Disable the problematic feature
    by setting MAC register 0x58 bit28 and bit27.
    
    Fixes: 39bfab8844a0 ("net: ftgmac100: Add support for DT phy-handle property")
    Signed-off-by: Dylan Hung <dylan_hung@aspeedtech.com>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a6a016c5281d953314de559bb3604fc8d8890e8
Author: Lijun Pan <ljp@linux.ibm.com>
Date:   Tue Oct 20 17:39:19 2020 -0500

    ibmvnic: save changed mac address to adapter->mac_addr
    
    [ Upstream commit d9b0e599b2b892422f1cbc5d2658049b895b2b58 ]
    
    After mac address change request completes successfully, the new mac
    address need to be saved to adapter->mac_addr as well as
    netdev->dev_addr. Otherwise, adapter->mac_addr still holds old
    data.
    
    Fixes: 62740e97881c ("net/ibmvnic: Update MAC address settings after adapter reset")
    Signed-off-by: Lijun Pan <ljp@linux.ibm.com>
    Link: https://lore.kernel.org/r/20201020223919.46106-1-ljp@linux.ibm.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 416eec363622810fed74f7c1525264e6fc611c81
Author: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
Date:   Mon Oct 19 17:20:24 2020 +0530

    chelsio/chtls: correct function return and return type
    
    [ Upstream commit 8580a61aede28d441e1c80588803411ee86aa299 ]
    
    csk_mem_free() should return true if send buffer is available,
    false otherwise.
    
    Fixes: 3b8305f5c844 ("crypto: chtls - wait for memory sendmsg, sendpage")
    Signed-off-by: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15110ce6e26ffee8fce48b9718c49f3739517d59
Author: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
Date:   Mon Oct 19 17:20:21 2020 +0530

    chelsio/chtls: correct netdevice for vlan interface
    
    [ Upstream commit 81519d1f7df7ed1bd5b1397540c8884438f57ae2 ]
    
    Check if netdevice is a vlan interface and find real vlan netdevice.
    
    Fixes: cc35c88ae4db ("crypto : chtls - CPL handler definition")
    Signed-off-by: Venkatesh Ellapu <venkatesh.e@chelsio.com>
    Signed-off-by: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe97af291feedbdfc8ba6b60c696a819e03219b7
Author: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
Date:   Mon Oct 19 17:20:20 2020 +0530

    chelsio/chtls: fix socket lock
    
    [ Upstream commit 0fb5f0160a36d7acaa8e84ce873af99f94b60484 ]
    
    In chtls_sendpage() socket lock is released but not acquired,
    fix it by taking lock.
    
    Fixes: 36bedb3f2e5b ("crypto: chtls - Inline TLS record Tx")
    Signed-off-by: Vinay Kumar Yadav <vinay.yadav@chelsio.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 750e81e2dbc03761839e331b8318917dc4b1b37d
Author: David Milburn <dmilburn@redhat.com>
Date:   Thu Sep 10 16:18:50 2020 -0500

    nvme-pci: disable the write zeros command for Intel 600P/P3100
    
    commit ce4cc3133dc72c31bd49ddcf22d0f9eeff47a761 upstream.
    
    The write zeros command does not work with 4k range.
    
    bash-4.4# ./blkdiscard /dev/nvme0n1p2
    bash-4.4# strace -efallocate xfs_io -c "fzero 536895488 2048" /dev/nvme0n1p2
    fallocate(3, FALLOC_FL_ZERO_RANGE, 536895488, 2048) = 0
    +++ exited with 0 +++
    bash-4.4# dd bs=1 if=/dev/nvme0n1p2 skip=536895488 count=512 | hexdump -C
    00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
    *
    00000200
    
    bash-4.4# ./blkdiscard /dev/nvme0n1p2
    bash-4.4# strace -efallocate xfs_io -c "fzero 536895488 4096" /dev/nvme0n1p2
    fallocate(3, FALLOC_FL_ZERO_RANGE, 536895488, 4096) = 0
    +++ exited with 0 +++
    bash-4.4# dd bs=1 if=/dev/nvme0n1p2 skip=536895488 count=512 | hexdump -C
    00000000  5c 61 5c b0 96 21 1b 5e  85 0c 07 32 9c 8c eb 3c  |\a\..!.^...2...<|
    00000010  4a a2 06 ca 67 15 2d 8e  29 8d a8 a0 7e 46 8c 62  |J...g.-.)...~F.b|
    00000020  bb 4c 6c c1 6b f5 ae a5  e4 a9 bc 93 4f 60 ff 7a  |.Ll.k.......O`.z|
    
    Reported-by: Eric Sandeen <esandeen@redhat.com>
    Signed-off-by: David Milburn <dmilburn@redhat.com>
    Tested-by: Eric Sandeen <sandeen@redhat.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    [ Fix-up for 5.4 since NVME_QUIRK_NO_TEMP_THRESH_CHANGE doesn't exist ]
    Signed-off-by: Jason Andryuk <jandryuk@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a86bf1d8b19cc1b9088d49041218c93126edbf19
Author: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Date:   Tue Oct 13 18:26:28 2020 +0300

    ALSA: hda/hdmi: fix incorrect locking in hdmi_pcm_close
    
    commit ce1558c285f9ad04c03b46833a028230771cc0a7 upstream.
    
    A race exists between closing a PCM and update of ELD data. In
    hdmi_pcm_close(), hinfo->nid value is modified without taking
    spec->pcm_lock. If this happens concurrently while processing an ELD
    update in hdmi_pcm_setup_pin(), converter assignment may be done
    incorrectly.
    
    This bug was found by hitting a WARN_ON in snd_hda_spdif_ctls_assign()
    in a HDMI receiver connection stress test:
    
    [2739.684569] WARNING: CPU: 5 PID: 2090 at sound/pci/hda/patch_hdmi.c:1898 check_non_pcm_per_cvt+0x41/0x50 [snd_hda_codec_hdmi]
    ...
    [2739.684707] Call Trace:
    [2739.684720]  update_eld+0x121/0x5a0 [snd_hda_codec_hdmi]
    [2739.684736]  hdmi_present_sense+0x21e/0x3b0 [snd_hda_codec_hdmi]
    [2739.684750]  check_presence_and_report+0x81/0xd0 [snd_hda_codec_hdmi]
    [2739.684842]  intel_audio_codec_enable+0x122/0x190 [i915]
    
    Fixes: 42b2987079ec ("ALSA: hda - hdmi playback without monitor in dynamic pcm bind mode")
    Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201013152628.920764-1-kai.vehmanen@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17784cec2da4beac41fc9eb3e479f74ad7cce95a
Author: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Date:   Mon Oct 12 13:27:04 2020 +0300

    ALSA: hda: fix jack detection with Realtek codecs when in D3
    
    commit a6e7d0a4bdb02a7a3ffe0b44aaa8842b7efdd056 upstream.
    
    In case HDA controller becomes active, but codec is runtime suspended,
    jack detection is not successful and no interrupt is raised. This has
    been observed with multiple Realtek codecs and HDA controllers from
    different vendors. Bug does not occur if both codec and controller are
    active, or both are in suspend. Bug can be easily hit on desktop systems
    with no built-in speaker.
    
    The problem can be fixed by powering up the codec once after every
    controller runtime resume. Even if codec goes back to suspend later, the
    jack detection will continue to work. Add a flag to 'hda_codec' to
    describe codecs that require this flow from the controller driver.
    Modify __azx_runtime_resume() to use pm_request_resume() to make the
    intent clearer.
    
    Mark all Realtek codecs with the new forced_resume flag.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=209379
    Cc: Kailang Yang <kailang@realtek.com>
    Co-developed-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201012102704.794423-1-kai.vehmanen@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8bedcbceaaa37f4362b8fb21e8c9d275e6cbe3a2
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 7 10:49:28 2020 +0300

    ALSA: bebob: potential info leak in hwdep_read()
    
    commit b41c15f4e1c1f1657da15c482fa837c1b7384452 upstream.
    
    The "count" variable needs to be capped on every path so that we don't
    copy too much information to the user.
    
    Fixes: 618eabeae711 ("ALSA: bebob: Add hwdep interface")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20201007074928.GA2529578@mwanda
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 401d4d79a8ed5ac1c78031a00f8ac414e6605a38
Author: Todd Kjos <tkjos@google.com>
Date:   Fri Oct 9 16:24:55 2020 -0700

    binder: fix UAF when releasing todo list
    
    commit f3277cbfba763cd2826396521b9296de67cf1bbc upstream.
    
    When releasing a thread todo list when tearing down
    a binder_proc, the following race was possible which
    could result in a use-after-free:
    
    1.  Thread 1: enter binder_release_work from binder_thread_release
    2.  Thread 2: binder_update_ref_for_handle() -> binder_dec_node_ilocked()
    3.  Thread 2: dec nodeA --> 0 (will free node)
    4.  Thread 1: ACQ inner_proc_lock
    5.  Thread 2: block on inner_proc_lock
    6.  Thread 1: dequeue work (BINDER_WORK_NODE, part of nodeA)
    7.  Thread 1: REL inner_proc_lock
    8.  Thread 2: ACQ inner_proc_lock
    9.  Thread 2: todo list cleanup, but work was already dequeued
    10. Thread 2: free node
    11. Thread 2: REL inner_proc_lock
    12. Thread 1: deref w->type (UAF)
    
    The problem was that for a BINDER_WORK_NODE, the binder_work element
    must not be accessed after releasing the inner_proc_lock while
    processing the todo list elements since another thread might be
    handling a deref on the node containing the binder_work element
    leading to the node being freed.
    
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Link: https://lore.kernel.org/r/20201009232455.4054810-1-tkjos@google.com
    Cc: <stable@vger.kernel.org> # 4.14, 4.19, 5.4, 5.8
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 711c0471ef17d276d6a7f394abdc39b98fc888a7
Author: Herat Ramani <herat@chelsio.com>
Date:   Tue Oct 13 15:01:29 2020 +0530

    cxgb4: handle 4-tuple PEDIT to NAT mode translation
    
    [ Upstream commit 2ef813b8f405db3f72202b6fcae40a628ab80a53 ]
    
    The 4-tuple NAT offload via PEDIT always overwrites all the 4-tuple
    fields even if they had not been explicitly enabled. If any fields in
    the 4-tuple are not enabled, then the hardware overwrites the
    disabled fields with zeros, instead of ignoring them.
    
    So, add a parser that can translate the enabled 4-tuple PEDIT fields
    to one of the NAT mode combinations supported by the hardware and
    hence avoid overwriting disabled fields to 0. Any rule with
    unsupported NAT mode combination is rejected.
    
    Signed-off-by: Herat Ramani <herat@chelsio.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f269cb9e513b65d06405e2708269ff72e813ead
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Thu Oct 1 09:23:02 2020 +0200

    r8169: fix data corruption issue on RTL8402
    
    [ Upstream commit ef9da46ddef071e1bbb943afbbe9b38771855554 ]
    
    Petr reported that after resume from suspend RTL8402 partially
    truncates incoming packets, and re-initializing register RxConfig
    before the actual chip re-initialization sequence is needed to avoid
    the issue.
    
    Reported-by: Petr Tesarik <ptesarik@suse.cz>
    Proposed-by: Petr Tesarik <ptesarik@suse.cz>
    Tested-by: Petr Tesarik <ptesarik@suse.cz>
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5b868eecb4f8ef155c205480ff8a0f11e88d5ba
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Mon Sep 28 11:31:03 2020 -0700

    net_sched: remove a redundant goto chain check
    
    [ Upstream commit 1aad8049909a6d3379175ef2824a68ac35c0b564 ]
    
    All TC actions call tcf_action_check_ctrlact() to validate
    goto chain, so this check in tcf_action_init_1() is actually
    redundant. Remove it to save troubles of leaking memory.
    
    Fixes: e49d8c22f126 ("net_sched: defer tcf_idr_insert() in tcf_action_init_1()")
    Reported-by: Vlad Buslov <vladbu@mellanox.com>
    Suggested-by: Davide Caratti <dcaratti@redhat.com>
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Cc: Jiri Pirko <jiri@resnulli.us>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Reviewed-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba05057bd0563d6ffb06d6737b5c5ba949088a6c
Author: Maciej Å»enczykowski <maze@google.com>
Date:   Wed Sep 23 13:18:15 2020 -0700

    net/ipv4: always honour route mtu during forwarding
    
    [ Upstream commit 02a1b175b0e92d9e0fa5df3957ade8d733ceb6a0 ]
    
    Documentation/networking/ip-sysctl.txt:46 says:
      ip_forward_use_pmtu - BOOLEAN
        By default we don't trust protocol path MTUs while forwarding
        because they could be easily forged and can lead to unwanted
        fragmentation by the router.
        You only need to enable this if you have user-space software
        which tries to discover path mtus by itself and depends on the
        kernel honoring this information. This is normally not the case.
        Default: 0 (disabled)
        Possible values:
        0 - disabled
        1 - enabled
    
    Which makes it pretty clear that setting it to 1 is a potential
    security/safety/DoS issue, and yet it is entirely reasonable to want
    forwarded traffic to honour explicitly administrator configured
    route mtus (instead of defaulting to device mtu).
    
    Indeed, I can't think of a single reason why you wouldn't want to.
    Since you configured a route mtu you probably know better...
    
    It is pretty common to have a higher device mtu to allow receiving
    large (jumbo) frames, while having some routes via that interface
    (potentially including the default route to the internet) specify
    a lower mtu.
    
    Note that ipv6 forwarding uses device mtu unless the route is locked
    (in which case it will use the route mtu).
    
    This approach is not usable for IPv4 where an 'mtu lock' on a route
    also has the side effect of disabling TCP path mtu discovery via
    disabling the IPv4 DF (don't frag) bit on all outgoing frames.
    
    I'm not aware of a way to lock a route from an IPv6 RA, so that also
    potentially seems wrong.
    
    Signed-off-by: Maciej Å»enczykowski <maze@google.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Cc: Lorenzo Colitti <lorenzo@google.com>
    Cc: Sunmeet Gill (Sunny) <sgill@quicinc.com>
    Cc: Vinay Paradkar <vparadka@qti.qualcomm.com>
    Cc: Tyler Wear <twear@quicinc.com>
    Cc: David Ahern <dsahern@kernel.org>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46a55a44cc7511778f4a6a1b714912c4959c9db6
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Thu Oct 8 23:23:10 2020 +0200

    net: j1939: j1939_session_fresh_new(): fix missing initialization of skbcnt
    
    [ Upstream commit 13ba4c434422837d7c8c163f9c8d854e67bf3c99 ]
    
    This patch add the initialization of skbcnt, similar to:
    
        e009f95b1543 can: j1935: j1939_tp_tx_dat_new(): fix missing initialization of skbcnt
    
    Let's play save and initialize this skbcnt as well.
    
    Suggested-by: Jakub Kicinski <kuba@kernel.org>
    Fixes: 9d71dd0c7009 ("can: add support of SAE J1939 protocol")
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25bd9ea1ae5b902db7d59b033aba85323ff5049a
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Oct 7 23:18:21 2020 -0700

    can: j1935: j1939_tp_tx_dat_new(): fix missing initialization of skbcnt
    
    [ Upstream commit e009f95b1543e26606dca2f7e6e9f0f9174538e5 ]
    
    This fixes an uninit-value warning:
    BUG: KMSAN: uninit-value in can_receive+0x26b/0x630 net/can/af_can.c:650
    
    Reported-and-tested-by: syzbot+3f3837e61a48d32b495f@syzkaller.appspotmail.com
    Fixes: 9d71dd0c7009 ("can: add support of SAE J1939 protocol")
    Cc: Robin van der Gracht <robin@protonic.nl>
    Cc: Oleksij Rempel <linux@rempel-privat.de>
    Cc: Pengutronix Kernel Team <kernel@pengutronix.de>
    Cc: Oliver Hartkopp <socketcan@hartkopp.net>
    Cc: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Link: https://lore.kernel.org/r/20201008061821.24663-1-xiyou.wangcong@gmail.com
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0342b87cad88894a989604df549e88ff47fb513
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Tue Aug 11 10:15:44 2020 +0200

    can: m_can_platform: don't call m_can_class_suspend in runtime suspend
    
    [ Upstream commit 81f1f5ae8b3cbd54fdd994c9e9aacdb7b414a802 ]
    
        0704c5743694 can: m_can_platform: remove unnecessary m_can_class_resume() call
    
    removed the m_can_class_resume() call in the runtime resume path to get
    rid of a infinite recursion, so the runtime resume now only handles the device
    clocks.
    
    Unfortunately it did not remove the complementary m_can_class_suspend() call in
    the runtime suspend function, so those paths are now unbalanced, which causes
    the pinctrl state to get stuck on the "sleep" state, which breaks all CAN
    functionality on SoCs where this state is defined. Remove the
    m_can_class_suspend() call to fix this.
    
    Fixes: 0704c5743694 can: m_can_platform: remove unnecessary m_can_class_resume() call
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Link: https://lore.kernel.org/r/20200811081545.19921-1-l.stach@pengutronix.de
    Acked-by: Dan Murphy <dmurphy@ti.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4099221dbc0e0f0b7539c1a4c42144cd544b66a
Author: Christian Eggers <ceggers@arri.de>
Date:   Mon Oct 12 11:35:41 2020 +0200

    socket: fix option SO_TIMESTAMPING_NEW
    
    [ Upstream commit 59e611a566e7cd48cf54b6777a11fe3f9c2f9db5 ]
    
    The comparison of optname with SO_TIMESTAMPING_NEW is wrong way around,
    so SOCK_TSTAMP_NEW will first be set and than reset again. Additionally
    move it out of the test for SOF_TIMESTAMPING_RX_SOFTWARE as this seems
    unrelated.
    
    This problem happens on 32 bit platforms were the libc has already
    switched to struct timespec64 (from SO_TIMExxx_OLD to SO_TIMExxx_NEW
    socket options). ptp4l complains with "missing timestamp on transmitted
    peer delay request" because the wrong format is received (and
    discarded).
    
    Fixes: 9718475e6908 ("socket: Add SO_TIMESTAMPING_NEW")
    Signed-off-by: Christian Eggers <ceggers@arri.de>
    Reviewed-by: Willem de Bruijn <willemdebruijn.kernel@gmail.com>
    Reviewed-by: Deepa Dinamani <deepa.kernel@gmail.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Acked-by: Deepa Dinamani <deepa.kernel@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d31e5722cbf4e24bb893ed56705bcce6950f6cb
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Oct 7 21:12:50 2020 -0700

    tipc: fix the skb_unshare() in tipc_buf_append()
    
    [ Upstream commit ed42989eab57d619667d7e87dfbd8fe207db54fe ]
    
    skb_unshare() drops a reference count on the old skb unconditionally,
    so in the failure case, we end up freeing the skb twice here.
    And because the skb is allocated in fclone and cloned by caller
    tipc_msg_reassemble(), the consequence is actually freeing the
    original skb too, thus triggered the UAF by syzbot.
    
    Fix this by replacing this skb_unshare() with skb_cloned()+skb_copy().
    
    Fixes: ff48b6222e65 ("tipc: use skb_unshare() instead in tipc_buf_append()")
    Reported-and-tested-by: syzbot+e96a7ba46281824cc46a@syzkaller.appspotmail.com
    Cc: Jon Maloy <jmaloy@redhat.com>
    Cc: Ying Xue <ying.xue@windriver.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd3f58f499d0848359d7b86a3b1d863edac8f4a0
Author: Wilken Gottwalt <wilken.gottwalt@mailbox.org>
Date:   Thu Oct 8 09:21:38 2020 +0200

    net: usb: qmi_wwan: add Cellient MPL200 card
    
    [ Upstream commit 28802e7c0c9954218d1830f7507edc9d49b03a00 ]
    
    Add usb ids of the Cellient MPL200 card.
    
    Signed-off-by: Wilken Gottwalt <wilken.gottwalt@mailbox.org>
    Acked-by: BjÃ¸rn Mork <bjorn@mork.no>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65033e39f72819d3ebb229596b3bfce44b69dc32
Author: Rohit Maheshwari <rohitm@chelsio.com>
Date:   Thu Oct 8 00:10:21 2020 +0530

    net/tls: sendfile fails with ktls offload
    
    [ Upstream commit ea1dd3e9d080c961b9a451130b61c72dc9a5397b ]
    
    At first when sendpage gets called, if there is more data, 'more' in
    tls_push_data() gets set which later sets pending_open_record_frags, but
    when there is no more data in file left, and last time tls_push_data()
    gets called, pending_open_record_frags doesn't get reset. And later when
    2 bytes of encrypted alert comes as sendmsg, it first checks for
    pending_open_record_frags, and since this is set, it creates a record with
    0 data bytes to encrypt, meaning record length is prepend_size + tag_size
    only, which causes problem.
     We should set/reset pending_open_record_frags based on more bit.
    
    Fixes: e8f69799810c ("net/tls: Add generic NIC offload infrastructure")
    Signed-off-by: Rohit Maheshwari <rohitm@chelsio.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 926210cd815834693c29159b1e2b7a33bcc5c1af
Author: Karsten Graul <kgraul@linux.ibm.com>
Date:   Wed Oct 14 19:43:28 2020 +0200

    net/smc: fix valid DMBE buffer sizes
    
    [ Upstream commit ef12ad45880b696eb993d86c481ca891836ab593 ]
    
    The SMCD_DMBE_SIZES should include all valid DMBE buffer sizes, so the
    correct value is 6 which means 1MB. With 7 the registration of an ISM
    buffer would always fail because of the invalid size requested.
    Fix that and set the value to 6.
    
    Fixes: c6ba7c9ba43d ("net/smc: add base infrastructure for SMC-D and ISM")
    Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdd3c52a983e5f3249466881bd68619b4e4ce5a3
Author: Yonghong Song <yhs@fb.com>
Date:   Wed Oct 14 07:46:12 2020 -0700

    net: fix pos incrementment in ipv6_route_seq_next
    
    [ Upstream commit 6617dfd440149e42ce4d2be615eb31a4755f4d30 ]
    
    Commit 4fc427e05158 ("ipv6_route_seq_next should increase position index")
    tried to fix the issue where seq_file pos is not increased
    if a NULL element is returned with seq_ops->next(). See bug
      https://bugzilla.kernel.org/show_bug.cgi?id=206283
    The commit effectively does:
      - increase pos for all seq_ops->start()
      - increase pos for all seq_ops->next()
    
    For ipv6_route, increasing pos for all seq_ops->next() is correct.
    But increasing pos for seq_ops->start() is not correct
    since pos is used to determine how many items to skip during
    seq_ops->start():
      iter->skip = *pos;
    seq_ops->start() just fetches the *current* pos item.
    The item can be skipped only after seq_ops->show() which essentially
    is the beginning of seq_ops->next().
    
    For example, I have 7 ipv6 route entries,
      root@arch-fb-vm1:~/net-next dd if=/proc/net/ipv6_route bs=4096
      00000000000000000000000000000000 40 00000000000000000000000000000000 00 00000000000000000000000000000000 00000400 00000001 00000000 00000001     eth0
      fe800000000000000000000000000000 40 00000000000000000000000000000000 00 00000000000000000000000000000000 00000100 00000001 00000000 00000001     eth0
      00000000000000000000000000000000 00 00000000000000000000000000000000 00 00000000000000000000000000000000 ffffffff 00000001 00000000 00200200       lo
      00000000000000000000000000000001 80 00000000000000000000000000000000 00 00000000000000000000000000000000 00000000 00000003 00000000 80200001       lo
      fe800000000000002050e3fffebd3be8 80 00000000000000000000000000000000 00 00000000000000000000000000000000 00000000 00000002 00000000 80200001     eth0
      ff000000000000000000000000000000 08 00000000000000000000000000000000 00 00000000000000000000000000000000 00000100 00000004 00000000 00000001     eth0
      00000000000000000000000000000000 00 00000000000000000000000000000000 00 00000000000000000000000000000000 ffffffff 00000001 00000000 00200200       lo
      0+1 records in
      0+1 records out
      1050 bytes (1.0 kB, 1.0 KiB) copied, 0.00707908 s, 148 kB/s
      root@arch-fb-vm1:~/net-next
    
    In the above, I specify buffer size 4096, so all records can be returned
    to user space with a single trip to the kernel.
    
    If I use buffer size 128, since each record size is 149, internally
    kernel seq_read() will read 149 into its internal buffer and return the data
    to user space in two read() syscalls. Then user read() syscall will trigger
    next seq_ops->start(). Since the current implementation increased pos even
    for seq_ops->start(), it will skip record #2, #4 and #6, assuming the first
    record is #1.
    
      root@arch-fb-vm1:~/net-next dd if=/proc/net/ipv6_route bs=128
      00000000000000000000000000000000 40 00000000000000000000000000000000 00 00000000000000000000000000000000 00000400 00000001 00000000 00000001     eth0
      00000000000000000000000000000000 00 00000000000000000000000000000000 00 00000000000000000000000000000000 ffffffff 00000001 00000000 00200200       lo
      fe800000000000002050e3fffebd3be8 80 00000000000000000000000000000000 00 00000000000000000000000000000000 00000000 00000002 00000000 80200001     eth0
      00000000000000000000000000000000 00 00000000000000000000000000000000 00 00000000000000000000000000000000 ffffffff 00000001 00000000 00200200       lo
    4+1 records in
    4+1 records out
    600 bytes copied, 0.00127758 s, 470 kB/s
    
    To fix the problem, create a fake pos pointer so seq_ops->start()
    won't actually increase seq_file pos. With this fix, the
    above `dd` command with `bs=128` will show correct result.
    
    Fixes: 4fc427e05158 ("ipv6_route_seq_next should increase position index")
    Cc: Alexei Starovoitov <ast@kernel.org>
    Suggested-by: Vasily Averin <vvs@virtuozzo.com>
    Reviewed-by: Vasily Averin <vvs@virtuozzo.com>
    Signed-off-by: Yonghong Song <yhs@fb.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Acked-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f08752a4498b7608d7cd94f76928557f93c35f1b
Author: Marek Vasut <marex@denx.de>
Date:   Tue Oct 6 15:52:53 2020 +0200

    net: fec: Fix PHY init after phy_reset_after_clk_enable()
    
    [ Upstream commit 0da1ccbbefb662915228bc17e1c7d4ad28b3ddab ]
    
    The phy_reset_after_clk_enable() does a PHY reset, which means the PHY
    loses its register settings. The fec_enet_mii_probe() starts the PHY
    and does the necessary calls to configure the PHY via PHY framework,
    and loads the correct register settings into the PHY. Therefore,
    fec_enet_mii_probe() should be called only after the PHY has been
    reset, not before as it is now.
    
    Fixes: 1b0a83ac04e3 ("net: fec: add phy_reset_after_clk_enable() support")
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Tested-by: Richard Leitner <richard.leitner@skidata.com>
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Christoph Niedermaier <cniedermaier@dh-electronics.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: NXP Linux Team <linux-imx@nxp.com>
    Cc: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e70485b40c8306298adea8bdc867ca27f88955a
Author: Marek Vasut <marex@denx.de>
Date:   Sat Oct 10 11:10:00 2020 +0200

    net: fec: Fix phy_device lookup for phy_reset_after_clk_enable()
    
    [ Upstream commit 64a632da538a6827fad0ea461925cedb9899ebe2 ]
    
    The phy_reset_after_clk_enable() is always called with ndev->phydev,
    however that pointer may be NULL even though the PHY device instance
    already exists and is sufficient to perform the PHY reset.
    
    This condition happens in fec_open(), where the clock must be enabled
    first, then the PHY must be reset, and then the PHY IDs can be read
    out of the PHY.
    
    If the PHY still is not bound to the MAC, but there is OF PHY node
    and a matching PHY device instance already, use the OF PHY node to
    obtain the PHY device instance, and then use that PHY device instance
    when triggering the PHY reset.
    
    Fixes: 1b0a83ac04e3 ("net: fec: add phy_reset_after_clk_enable() support")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Christoph Niedermaier <cniedermaier@dh-electronics.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: NXP Linux Team <linux-imx@nxp.com>
    Cc: Richard Leitner <richard.leitner@skidata.com>
    Cc: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b41975f7b782c9689773fb7953a7fef2b409047
Author: Jonathan Lemon <bsd@fb.com>
Date:   Thu Oct 8 11:45:26 2020 -0700

    mlx4: handle non-napi callers to napi_poll
    
    [ Upstream commit b2b8a92733b288128feb57ffa694758cf475106c ]
    
    netcons calls napi_poll with a budget of 0 to transmit packets.
    Handle this by:
     - skipping RX processing
     - do not try to recycle TX packets to the RX cache
    
    Signed-off-by: Jonathan Lemon <jonathan.lemon@gmail.com>
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3392c9d8f9aa102dba68101d1e67e1efba7ab876
Author: David Ahern <dsahern@kernel.org>
Date:   Fri Oct 9 11:01:01 2020 -0700

    ipv4: Restore flowi4_oif update before call to xfrm_lookup_route
    
    [ Upstream commit 874fb9e2ca949b443cc419a4f2227cafd4381d39 ]
    
    Tobias reported regressions in IPsec tests following the patch
    referenced by the Fixes tag below. The root cause is dropping the
    reset of the flowi4_oif after the fib_lookup. Apparently it is
    needed for xfrm cases, so restore the oif update to ip_route_output_flow
    right before the call to xfrm_lookup_route.
    
    Fixes: 2fbc6e89b2f1 ("ipv4: Update exception handling for multipath routes via same device")
    Reported-by: Tobias Brunner <tobias@strongswan.org>
    Signed-off-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7d2587f726a2295ae70d43a020b06f5de82c0d7
Author: David Wilder <dwilder@us.ibm.com>
Date:   Tue Oct 13 16:20:14 2020 -0700

    ibmveth: Identify ingress large send packets.
    
    [ Upstream commit 413f142cc05cb03f2d1ea83388e40c1ddc0d74e9 ]
    
    Ingress large send packets are identified by either:
    The IBMVETH_RXQ_LRG_PKT flag in the receive buffer
    or with a -1 placed in the ip header checksum.
    The method used depends on firmware version. Frame
    geometry and sufficient header validation is performed by the
    hypervisor eliminating the need for further header checks here.
    
    Fixes: 7b5967389f5a ("ibmveth: set correct gso_size and gso_type")
    Signed-off-by: David Wilder <dwilder@us.ibm.com>
    Reviewed-by: Thomas Falcon <tlfalcon@linux.ibm.com>
    Reviewed-by: Cristobal Forno <cris.forno@ibm.com>
    Reviewed-by: Pradeep Satyanarayana <pradeeps@linux.vnet.ibm.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b809bead48a3e97d1e5eb5fc38db750cf96fe6cf
Author: David Wilder <dwilder@us.ibm.com>
Date:   Tue Oct 13 16:20:13 2020 -0700

    ibmveth: Switch order of ibmveth_helper calls.
    
    [ Upstream commit 5ce9ad815a296374ca21f43f3b1ab5083d202ee1 ]
    
    ibmveth_rx_csum_helper() must be called after ibmveth_rx_mss_helper()
    as ibmveth_rx_csum_helper() may alter ip and tcp checksum values.
    
    Fixes: 66aa0678efc2 ("ibmveth: Support to enable LSO/CSO for Trunk VEA.")
    Signed-off-by: David Wilder <dwilder@us.ibm.com>
    Reviewed-by: Thomas Falcon <tlfalcon@linux.ibm.com>
    Reviewed-by: Cristobal Forno <cris.forno@ibm.com>
    Reviewed-by: Pradeep Satyanarayana <pradeeps@linux.vnet.ibm.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
