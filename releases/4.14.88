commit 1bb538a39cf959009d4e424ea4e590a1f58b2ed6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Dec 13 09:18:54 2018 +0100

    Linux 4.14.88

commit 7b6d932725ec18c1d84892b73c9da4d624939955
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Mon Dec 3 21:16:07 2018 +0200

    mac80211: ignore NullFunc frames in the duplicate detection
    
    commit 990d71846a0b7281bd933c34d734e6afc7408e7e upstream.
    
    NullFunc packets should never be duplicate just like
    QoS-NullFunc packets.
    
    We saw a client that enters / exits power save with
    NullFunc frames (and not with QoS-NullFunc) despite the
    fact that the association supports HT.
    This specific client also re-uses a non-zero sequence number
    for different NullFunc frames.
    At some point, the client had to send a retransmission of
    the NullFunc frame and we dropped it, leading to a
    misalignment in the power save state.
    Fix this by never consider a NullFunc frame as duplicate,
    just like we do for QoS NullFunc frames.
    
    This fixes https://bugzilla.kernel.org/show_bug.cgi?id=201449
    
    CC: <stable@vger.kernel.org>
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbc4242a9c2e3c97a5a8e7822b9c27915599f0c4
Author: Felix Fietkau <nbd@nbd.name>
Date:   Wed Nov 28 22:39:16 2018 +0100

    mac80211: fix reordering of buffered broadcast packets
    
    commit 9ec1190d065998650fd9260dea8cf3e1f56c0e8c upstream.
    
    If the buffered broadcast queue contains packets, letting new packets bypass
    that queue can lead to heavy reordering, since the driver is probably throttling
    transmission of buffered multicast packets after beacons.
    
    Keep buffering packets until the buffer has been cleared (and no client
    is in powersave mode).
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2c934fbbd43b5c349157c05374b9598f53a65f1
Author: Felix Fietkau <nbd@nbd.name>
Date:   Tue Nov 13 20:32:13 2018 +0100

    mac80211: ignore tx status for PS stations in ieee80211_tx_status_ext
    
    commit a317e65face482371de30246b6494feb093ff7f9 upstream.
    
    Make it behave like regular ieee80211_tx_status calls, except for the lack of
    filtered frame processing.
    This fixes spurious low-ack triggered disconnections with powersave clients
    connected to an AP.
    
    Fixes: f027c2aca0cf4 ("mac80211: add ieee80211_tx_status_noskb")
    Cc: stable@vger.kernel.org
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e82abdd0c0341b880f510fc8b19464410912069
Author: Ben Greear <greearb@candelatech.com>
Date:   Tue Oct 23 13:36:52 2018 -0700

    mac80211: Clear beacon_int in ieee80211_do_stop
    
    commit 5c21e8100dfd57c806e833ae905e26efbb87840f upstream.
    
    This fixes stale beacon-int values that would keep a netdev
    from going up.
    
    To reproduce:
    
    Create two VAP on one radio.
    vap1 has beacon-int 100, start it.
    vap2 has beacon-int 240, start it (and it will fail
      because beacon-int mismatch).
    reconfigure vap2 to have beacon-int 100 and start it.
      It will fail because the stale beacon-int 240 will be used
      in the ifup path and hostapd never gets a chance to set the
      new beacon interval.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Ben Greear <greearb@candelatech.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 199a81acf2bb66b5a640e6484aacd87bdd2a4854
Author: Vasyl Vavrychuk <vasyl.vavrychuk@globallogic.com>
Date:   Thu Oct 18 01:02:12 2018 +0300

    mac80211_hwsim: Timer should be initialized before device registered
    
    commit a1881c9b8a1edef0a5ae1d5c1b61406fe3402114 upstream.
    
    Otherwise if network manager starts configuring Wi-Fi interface
    immidiatelly after getting notification of its creation, we will get
    NULL pointer dereference:
    
      BUG: unable to handle kernel NULL pointer dereference at           (null)
      IP: [<ffffffff95ae94c8>] hrtimer_active+0x28/0x50
      ...
      Call Trace:
       [<ffffffff95ae9997>] ? hrtimer_try_to_cancel+0x27/0x110
       [<ffffffff95ae9a95>] ? hrtimer_cancel+0x15/0x20
       [<ffffffffc0803bf0>] ? mac80211_hwsim_config+0x140/0x1c0 [mac80211_hwsim]
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Vasyl Vavrychuk <vasyl.vavrychuk@globallogic.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4794d94b44c4903514a878b9097e99417a5e6dbe
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Sat Nov 24 10:47:04 2018 -0800

    libnvdimm, pfn: Pad pfn namespaces relative to other regions
    
    commit ae86cbfef3818300f1972e52f67a93211acb0e24 upstream.
    
    Commit cfe30b872058 "libnvdimm, pmem: adjust for section collisions with
    'System RAM'" enabled Linux to workaround occasions where platform
    firmware arranges for "System RAM" and "Persistent Memory" to collide
    within a single section boundary. Unfortunately, as reported in this
    issue [1], platform firmware can inflict the same collision between
    persistent memory regions.
    
    The approach of interrogating iomem_resource does not work in this
    case because platform firmware may merge multiple regions into a single
    iomem_resource range. Instead provide a method to interrogate regions
    that share the same parent bus.
    
    This is a stop-gap until the core-MM can grow support for hotplug on
    sub-section boundaries.
    
    [1]: https://github.com/pmem/ndctl/issues/76
    
    Fixes: cfe30b872058 ("libnvdimm, pmem: adjust for section collisions with...")
    Cc: <stable@vger.kernel.org>
    Reported-by: Patrick Geary <patrickg@supermicro.com>
    Tested-by: Patrick Geary <patrickg@supermicro.com>
    Reviewed-by: Vishal Verma <vishal.l.verma@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b919b4842b42a148ad12754019c58cfc939ae955
Author: Macpaul Lin <macpaul@gmail.com>
Date:   Wed Oct 17 23:08:38 2018 +0800

    kgdboc: fix KASAN global-out-of-bounds bug in param_set_kgdboc_var()
    
    commit dada6a43b0402eba438a17ac86fdc64ac56a4607 upstream.
    
    This patch is trying to fix KE issue due to
    "BUG: KASAN: global-out-of-bounds in param_set_kgdboc_var+0x194/0x198"
    reported by Syzkaller scan."
    
    [26364:syz-executor0][name:report8t]BUG: KASAN: global-out-of-bounds in param_set_kgdboc_var+0x194/0x198
    [26364:syz-executor0][name:report&]Read of size 1 at addr ffffff900e44f95f by task syz-executor0/26364
    [26364:syz-executor0][name:report&]
    [26364:syz-executor0]CPU: 7 PID: 26364 Comm: syz-executor0 Tainted: G W 0
    [26364:syz-executor0]Call trace:
    [26364:syz-executor0][<ffffff9008095cf8>] dump_bacIctrace+Ox0/0x470
    [26364:syz-executor0][<ffffff9008096de0>] show_stack+0x20/0x30
    [26364:syz-executor0][<ffffff90089cc9c8>] dump_stack+Oxd8/0x128
    [26364:syz-executor0][<ffffff90084edb38>] print_address_description +0x80/0x4a8
    [26364:syz-executor0][<ffffff90084ee270>] kasan_report+Ox178/0x390
    [26364:syz-executor0][<ffffff90084ee4a0>] _asan_report_loadi_noabort+Ox18/0x20
    [26364:syz-executor0][<ffffff9008b092ac>] param_set_kgdboc_var+Ox194/0x198
    [26364:syz-executor0][<ffffff900813af64>] param_attr_store+Ox14c/0x270
    [26364:syz-executor0][<ffffff90081394c8>] module_attr_store+0x60/0x90
    [26364:syz-executor0][<ffffff90086690c0>] sysfs_kl_write+Ox100/0x158
    [26364:syz-executor0][<ffffff9008666d84>] kernfs_fop_write+0x27c/0x3a8
    [26364:syz-executor0][<ffffff9008508264>] do_loop_readv_writev+0x114/0x1b0
    [26364:syz-executor0][<ffffff9008509ac8>] do_readv_writev+0x4f8/0x5e0
    [26364:syz-executor0][<ffffff9008509ce4>] vfs_writev+0x7c/Oxb8
    [26364:syz-executor0][<ffffff900850ba64>] SyS_writev+Oxcc/0x208
    [26364:syz-executor0][<ffffff90080883f0>] elO_svc_naked +0x24/0x28
    [26364:syz-executor0][name:report&]
    [26364:syz-executor0][name:report&]The buggy address belongs to the variable:
    [26364:syz-executor0][name:report&] kgdb_tty_line+Ox3f/0x40
    [26364:syz-executor0][name:report&]
    [26364:syz-executor0][name:report&]Memory state around the buggy address:
    [26364:syz-executor0] ffffff900e44f800: 00 00 00 00 00 04 fa fa fa fa fa fa 00 fa fa fa
    [26364:syz-executor0] ffffff900e44f880: fa fa fa fa 00 fa fa fa fa fa fa fa 00 fa fa fa
    [26364:syz-executor0]> ffffff900e44f900: fa fa fa fa 04 fa fa fa fa fa fa fa 00 00 00 00
    [26364:syz-executor0][name:report&]                                       ^
    [26364:syz-executor0] ffffff900e44f980: 00 fa fa fa fa fa fa fa 04 fa fa fa fa fa fa fa
    [26364:syz-executor0] ffffff900e44fa00: 04 fa fa fa fa fa fa fa 00 fa fa fa fa fa fa fa
    [26364:syz-executor0][name:report&]
    [26364:syz-executor0][name:panic&]Disabling lock debugging due to kernel taint
    [26364:syz-executor0]------------[cut here]------------
    
    After checking the source code, we've found there might be an out-of-bounds
    access to "config[len - 1]" array when the variable "len" is zero.
    
    Signed-off-by: Macpaul Lin <macpaul@gmail.com>
    Acked-by: Daniel Thompson <daniel.thompson@linaro.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4c3cc6b08087550e7f000bd7510ccb9a887c543
Author: Chanho Park <parkch98@gmail.com>
Date:   Thu Nov 22 18:23:47 2018 +0900

    tty: do not set TTY_IO_ERROR flag if console port
    
    commit 2a48602615e0a2f563549c7d5c8d507f904cf96e upstream.
    
    Since Commit 761ed4a94582 ('tty: serial_core: convert uart_close to use
    tty_port_close') and Commit 4dda864d7307 ('tty: serial_core: Fix serial
    console crash on port shutdown), a serial port which is used as
    console can be stuck when logging out if there is a remained process.
    After logged out, agetty will try to grab the serial port but it will
    be failed because the previous process did not release the port
    correctly. To fix this, TTY_IO_ERROR bit should not be enabled of
    tty_port_close if the port is console port.
    
    Reproduce step:
    - Run background processes from serial console
    $ while true; do sleep 10; done &
    
    - Log out
    $ logout
    -> Stuck
    
    - Read journal log by journalctl | tail
    Jan 28 16:07:01 ubuntu systemd[1]: Stopped Serial Getty on ttyAMA0.
    Jan 28 16:07:01 ubuntu systemd[1]: Started Serial Getty on ttyAMA0.
    Jan 28 16:07:02 ubuntu agetty[1643]: /dev/ttyAMA0: not a tty
    
    Fixes: 761ed4a94582 ("tty: serial_core: convert uart_close to use tty_port_close")
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: Rob Herring <robh@kernel.org>
    Cc: Jiri Slaby <jslaby@suse.com>
    Signed-off-by: Chanho Park <parkch98@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f50d3a08df40a3ad261b8527345df92c9f1a731
Author: Peter Shih <pihsun@chromium.org>
Date:   Tue Nov 27 12:49:50 2018 +0800

    tty: serial: 8250_mtk: always resume the device in probe.
    
    commit 100bc3e2bebf95506da57cbdf5f26b25f6da4c81 upstream.
    
    serial8250_register_8250_port calls uart_config_port, which calls
    config_port on the port before it tries to power on the port. So we need
    the port to be on before calling serial8250_register_8250_port. Change
    the code to always do a runtime resume in probe before registering port,
    and always do a runtime suspend in remove.
    
    This basically reverts the change in commit 68e5fc4a255a ("tty: serial:
    8250_mtk: use pm_runtime callbacks for enabling"), but still use
    pm_runtime callbacks.
    
    Fixes: 68e5fc4a255a ("tty: serial: 8250_mtk: use pm_runtime callbacks for enabling")
    Signed-off-by: Peter Shih <pihsun@chromium.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1063941e7360e1a5c998c58de789d5de267175b
Author: Dexuan Cui <decui@microsoft.com>
Date:   Mon Dec 3 00:54:35 2018 +0000

    Drivers: hv: vmbus: Offload the handling of channels to two workqueues
    
    commit 37c2578c0c40e286bc0d30bdc05290b2058cf66e upstream.
    
    vmbus_process_offer() mustn't call channel->sc_creation_callback()
    directly for sub-channels, because sc_creation_callback() ->
    vmbus_open() may never get the host's response to the
    OPEN_CHANNEL message (the host may rescind a channel at any time,
    e.g. in the case of hot removing a NIC), and vmbus_onoffer_rescind()
    may not wake up the vmbus_open() as it's blocked due to a non-zero
    vmbus_connection.offer_in_progress, and finally we have a deadlock.
    
    The above is also true for primary channels, if the related device
    drivers use sync probing mode by default.
    
    And, usually the handling of primary channels and sub-channels can
    depend on each other, so we should offload them to different
    workqueues to avoid possible deadlock, e.g. in sync-probing mode,
    NIC1's netvsc_subchan_work() can race with NIC2's netvsc_probe() ->
    rtnl_lock(), and causes deadlock: the former gets the rtnl_lock
    and waits for all the sub-channels to appear, but the latter
    can't get the rtnl_lock and this blocks the handling of sub-channels.
    
    The patch can fix the multiple-NIC deadlock described above for
    v3.x kernels (e.g. RHEL 7.x) which don't support async-probing
    of devices, and v4.4, v4.9, v4.14 and v4.18 which support async-probing
    but don't enable async-probing for Hyper-V drivers (yet).
    
    The patch can also fix the hang issue in sub-channel's handling described
    above for all versions of kernels, including v4.19 and v4.20-rc4.
    
    So actually the patch should be applied to all the existing kernels,
    not only the kernels that have 8195b1396ec8.
    
    Fixes: 8195b1396ec8 ("hv_netvsc: fix deadlock on hotplug")
    Cc: stable@vger.kernel.org
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eff5e74f7b680d51c9cd9a087f18ce99788b2aba
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Nov 28 23:25:41 2018 -0500

    drm/amdgpu/gmc8: update MC firmware for polaris
    
    commit a81a7c9c9ea3042ab02d66ac35def74abf091c15 upstream.
    
    Some variants require different MC firmware images.
    
    Acked-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Junwei Zhang <Jerry.Zhang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99e6900dfa125ef5062e7b0595f6ce5eb75a6d2c
Author: Junwei Zhang <Jerry.Zhang@amd.com>
Date:   Thu Nov 22 17:53:00 2018 +0800

    drm/amdgpu: update mc firmware image for polaris12 variants
    
    commit d7fd67653f847327e545bdb198b901ee124afd7c upstream.
    
    Some new variants require updated firmware.
    
    Signed-off-by: Junwei Zhang <Jerry.Zhang@amd.com>
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c33e7a5a3714250ca452ef8353c91cf7ad411ac6
Author: Young Xiao <YangX92@hotmail.com>
Date:   Tue Nov 27 09:12:20 2018 +0000

    Revert commit ef9209b642f "staging: rtl8723bs: Fix indenting errors and an off-by-one mistake in core/rtw_mlme_ext.c"
    
    commit 87e4a5405f087427fbf8b437d2796283dce2b38f upstream.
    
    pstapriv->max_num_sta is always <= NUM_STA, since max_num_sta is either
    set in _rtw_init_sta_priv() or rtw_set_beacon().
    
    Fixes: ef9209b642f1 ("staging: rtl8723bs: Fix indenting errors and an off-by-one mistake in core/rtw_mlme_ext.c")
    Signed-off-by: Young Xiao <YangX92@hotmail.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 948ef68099ebe26a52749ad031febb15b4c5dac7
Author: Young Xiao <YangX92@hotmail.com>
Date:   Wed Nov 28 08:06:53 2018 +0000

    staging: rtl8712: Fix possible buffer overrun
    
    commit 300cd664865bed5d50ae0a42fb4e3a6f415e8a10 upstream.
    
    In commit 8b7a13c3f404 ("staging: r8712u: Fix possible buffer
    overrun") we fix a potential off by one by making the limit smaller.
    The better fix is to make the buffer larger.  This makes it match up
    with the similar code in other drivers.
    
    Fixes: 8b7a13c3f404 ("staging: r8712u: Fix possible buffer overrun")
    Signed-off-by: Young Xiao <YangX92@hotmail.com>
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b505b9b09e531cfe9bfcb602ed9407d8bd902ad4
Author: Paulo Alcantara <palcantara@suse.com>
Date:   Thu Nov 15 15:20:52 2018 +0100

    cifs: Fix separator when building path from dentry
    
    commit c988de29ca161823db6a7125e803d597ef75b49c upstream.
    
    Make sure to use the CIFS_DIR_SEP(cifs_sb) as path separator for
    prefixpath too. Fixes a bug with smb1 UNIX extensions.
    
    Fixes: a6b5058fafdf ("fs/cifs: make share unaccessible at root level mountable")
    Signed-off-by: Paulo Alcantara <palcantara@suse.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a604686c468dc0ab9492dbeaa1722cc3878b0582
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Dec 11 13:50:55 2018 +0100

    staging: atomisp: remove "fun" strncpy warning
    
    [for older kernels only, atomisp has been removed from upstream]
    
    gcc-8 rightfully warns that this instance of strncpy is just copying
    from the source, to the same source, for a few bytes.  Meaning this call
    does nothing.  As the author of the code obviously meant it to do
    something, but this code must be working properly, just replace the call
    to the kernel internal strscpy() which gcc doesn't know about, so the
    warning goes away.
    
    As this driver was deleted from newer kernel versions, none of this
    really matters but now at least we do not have to worry about a build
    warning in the stable trees.
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4e4b85708bb31df79d6fc77661bb171e07e0868
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Dec 11 13:50:37 2018 +0100

    Staging: lustre: remove two build warnings
    
    [for older kernels only, lustre has been removed from upstream]
    
    When someone writes:
            strncpy(dest, source, sizeof(source));
    they really are just doing the same thing as:
            strcpy(dest, source);
    but somehow they feel better because they are now using the "safe"
    version of the string functions.  Cargo-cult programming at its
    finest...
    
    gcc-8 rightfully warns you about doing foolish things like this.  Now
    that the stable kernels are all starting to be built using gcc-8, let's
    get rid of this warning so that we do not have to gaze at this horror.
    
    To dropt the warning, just convert the code to using strcpy() so that if
    someone really wants to audit this code and find all of the obvious
    problems, it will be easier to do so.
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2a4f7622d052eb987e8693633468c239c13575a
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Dec 10 18:14:58 2018 +0000

    swiotlb: clean up reporting
    
    commit 7d63fb3af87aa67aa7d24466e792f9d7c57d8e79 upstream.
    
    This removes needless use of '%p', and refactors the printk calls to
    use pr_*() helpers instead.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    [bwh: Backported to 4.14:
     - Adjust filename
     - Remove "swiotlb: " prefix from an additional log message]
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38fce19d4d7bc8acfa183ee2918758d279a69c9a
Author: Chao Yu <chao@kernel.org>
Date:   Mon Dec 10 17:00:50 2018 +0000

    f2fs: fix to do sanity check with block address in main area v2
    
    commit 91291e9998d208370eb8156c760691b873bd7522 upstream.
    
    This patch adds f2fs_is_valid_blkaddr() in below functions to do sanity
    check with block address to avoid pentential panic:
    - f2fs_grab_read_bio()
    - __written_first_block()
    
    https://bugzilla.kernel.org/show_bug.cgi?id=200465
    
    - Reproduce
    
    - POC (poc.c)
        #define _GNU_SOURCE
        #include <sys/types.h>
        #include <sys/mount.h>
        #include <sys/mman.h>
        #include <sys/stat.h>
        #include <sys/xattr.h>
    
        #include <dirent.h>
        #include <errno.h>
        #include <error.h>
        #include <fcntl.h>
        #include <stdio.h>
        #include <stdlib.h>
        #include <string.h>
        #include <unistd.h>
    
        #include <linux/falloc.h>
        #include <linux/loop.h>
    
        static void activity(char *mpoint) {
    
          char *xattr;
          int err;
    
          err = asprintf(&xattr, "%s/foo/bar/xattr", mpoint);
    
          char buf2[113];
          memset(buf2, 0, sizeof(buf2));
          listxattr(xattr, buf2, sizeof(buf2));
    
        }
    
        int main(int argc, char *argv[]) {
          activity(argv[1]);
          return 0;
        }
    
    - kernel message
    [  844.718738] F2FS-fs (loop0): Mounted with checkpoint version = 2
    [  846.430929] F2FS-fs (loop0): access invalid blkaddr:1024
    [  846.431058] WARNING: CPU: 1 PID: 1249 at fs/f2fs/checkpoint.c:154 f2fs_is_valid_blkaddr+0x10f/0x160
    [  846.431059] Modules linked in: snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hda_core snd_hwdep snd_pcm snd_timer snd input_leds joydev soundcore serio_raw i2c_piix4 mac_hid ib_iser rdma_cm iw_cm ib_cm ib_core configfs iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi autofs4 raid10 raid456 libcrc32c async_raid6_recov async_memcpy async_pq async_xor xor async_tx raid6_pq raid1 raid0 multipath linear qxl ttm crct10dif_pclmul crc32_pclmul drm_kms_helper ghash_clmulni_intel syscopyarea sysfillrect sysimgblt fb_sys_fops pcbc drm 8139too aesni_intel 8139cp floppy psmouse mii aes_x86_64 crypto_simd pata_acpi cryptd glue_helper
    [  846.431310] CPU: 1 PID: 1249 Comm: a.out Not tainted 4.18.0-rc3+ #1
    [  846.431312] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
    [  846.431315] RIP: 0010:f2fs_is_valid_blkaddr+0x10f/0x160
    [  846.431316] Code: 00 eb ed 31 c0 83 fa 05 75 ae 48 83 ec 08 48 8b 3f 89 f1 48 c7 c2 fc 0b 0f 8b 48 c7 c6 8b d7 09 8b 88 44 24 07 e8 61 8b ff ff <0f> 0b 0f b6 44 24 07 48 83 c4 08 eb 81 4c 8b 47 10 8b 8f 38 04 00
    [  846.431347] RSP: 0018:ffff961c414a7bc0 EFLAGS: 00010282
    [  846.431349] RAX: 0000000000000000 RBX: ffffc5f787b8ea80 RCX: 0000000000000000
    [  846.431350] RDX: 0000000000000000 RSI: ffff89dfffd165d8 RDI: ffff89dfffd165d8
    [  846.431351] RBP: ffff961c414a7c20 R08: 0000000000000001 R09: 0000000000000248
    [  846.431353] R10: 0000000000000000 R11: 0000000000000248 R12: 0000000000000007
    [  846.431369] R13: ffff89dff5492800 R14: ffff89dfae3aa000 R15: ffff89dff4ff88d0
    [  846.431372] FS:  00007f882e2fb700(0000) GS:ffff89dfffd00000(0000) knlGS:0000000000000000
    [  846.431373] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  846.431374] CR2: 0000000001a88008 CR3: 00000001eb572000 CR4: 00000000000006e0
    [  846.431384] Call Trace:
    [  846.431426]  f2fs_iget+0x6f4/0xe70
    [  846.431430]  ? f2fs_find_entry+0x71/0x90
    [  846.431432]  f2fs_lookup+0x1aa/0x390
    [  846.431452]  __lookup_slow+0x97/0x150
    [  846.431459]  lookup_slow+0x35/0x50
    [  846.431462]  walk_component+0x1c6/0x470
    [  846.431479]  ? memcg_kmem_charge_memcg+0x70/0x90
    [  846.431488]  ? page_add_file_rmap+0x13/0x200
    [  846.431491]  path_lookupat+0x76/0x230
    [  846.431501]  ? __alloc_pages_nodemask+0xfc/0x280
    [  846.431504]  filename_lookup+0xb8/0x1a0
    [  846.431534]  ? _cond_resched+0x16/0x40
    [  846.431541]  ? kmem_cache_alloc+0x160/0x1d0
    [  846.431549]  ? path_listxattr+0x41/0xa0
    [  846.431551]  path_listxattr+0x41/0xa0
    [  846.431570]  do_syscall_64+0x55/0x100
    [  846.431583]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  846.431607] RIP: 0033:0x7f882de1c0d7
    [  846.431607] Code: f0 ff ff 73 01 c3 48 8b 0d be dd 2b 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 b8 c2 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 91 dd 2b 00 f7 d8 64 89 01 48
    [  846.431639] RSP: 002b:00007ffe8e66c238 EFLAGS: 00000202 ORIG_RAX: 00000000000000c2
    [  846.431641] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f882de1c0d7
    [  846.431642] RDX: 0000000000000071 RSI: 00007ffe8e66c280 RDI: 0000000001a880c0
    [  846.431643] RBP: 00007ffe8e66c300 R08: 0000000001a88010 R09: 0000000000000000
    [  846.431645] R10: 00000000000001ab R11: 0000000000000202 R12: 0000000000400550
    [  846.431646] R13: 00007ffe8e66c400 R14: 0000000000000000 R15: 0000000000000000
    [  846.431648] ---[ end trace abca54df39d14f5c ]---
    [  846.431651] F2FS-fs (loop0): invalid blkaddr: 1024, type: 5, run fsck to fix.
    [  846.431762] WARNING: CPU: 1 PID: 1249 at fs/f2fs/f2fs.h:2697 f2fs_iget+0xd17/0xe70
    [  846.431763] Modules linked in: snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hda_core snd_hwdep snd_pcm snd_timer snd input_leds joydev soundcore serio_raw i2c_piix4 mac_hid ib_iser rdma_cm iw_cm ib_cm ib_core configfs iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi autofs4 raid10 raid456 libcrc32c async_raid6_recov async_memcpy async_pq async_xor xor async_tx raid6_pq raid1 raid0 multipath linear qxl ttm crct10dif_pclmul crc32_pclmul drm_kms_helper ghash_clmulni_intel syscopyarea sysfillrect sysimgblt fb_sys_fops pcbc drm 8139too aesni_intel 8139cp floppy psmouse mii aes_x86_64 crypto_simd pata_acpi cryptd glue_helper
    [  846.431797] CPU: 1 PID: 1249 Comm: a.out Tainted: G        W         4.18.0-rc3+ #1
    [  846.431798] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
    [  846.431800] RIP: 0010:f2fs_iget+0xd17/0xe70
    [  846.431801] Code: ff ff 48 63 d8 e9 e1 f6 ff ff 48 8b 45 c8 41 b8 05 00 00 00 48 c7 c2 d8 e8 0e 8b 48 c7 c6 1d b0 0a 8b 48 8b 38 e8 f9 b4 00 00 <0f> 0b 48 8b 45 c8 f0 80 48 48 04 e9 d8 f9 ff ff 0f 0b 48 8b 43 18
    [  846.431832] RSP: 0018:ffff961c414a7bd0 EFLAGS: 00010282
    [  846.431834] RAX: 0000000000000000 RBX: ffffc5f787b8ea80 RCX: 0000000000000006
    [  846.431835] RDX: 0000000000000000 RSI: 0000000000000096 RDI: ffff89dfffd165d0
    [  846.431836] RBP: ffff961c414a7c20 R08: 0000000000000000 R09: 0000000000000273
    [  846.431837] R10: 0000000000000000 R11: ffff89dfad50ca60 R12: 0000000000000007
    [  846.431838] R13: ffff89dff5492800 R14: ffff89dfae3aa000 R15: ffff89dff4ff88d0
    [  846.431840] FS:  00007f882e2fb700(0000) GS:ffff89dfffd00000(0000) knlGS:0000000000000000
    [  846.431841] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  846.431842] CR2: 0000000001a88008 CR3: 00000001eb572000 CR4: 00000000000006e0
    [  846.431846] Call Trace:
    [  846.431850]  ? f2fs_find_entry+0x71/0x90
    [  846.431853]  f2fs_lookup+0x1aa/0x390
    [  846.431856]  __lookup_slow+0x97/0x150
    [  846.431858]  lookup_slow+0x35/0x50
    [  846.431874]  walk_component+0x1c6/0x470
    [  846.431878]  ? memcg_kmem_charge_memcg+0x70/0x90
    [  846.431880]  ? page_add_file_rmap+0x13/0x200
    [  846.431882]  path_lookupat+0x76/0x230
    [  846.431884]  ? __alloc_pages_nodemask+0xfc/0x280
    [  846.431886]  filename_lookup+0xb8/0x1a0
    [  846.431890]  ? _cond_resched+0x16/0x40
    [  846.431891]  ? kmem_cache_alloc+0x160/0x1d0
    [  846.431894]  ? path_listxattr+0x41/0xa0
    [  846.431896]  path_listxattr+0x41/0xa0
    [  846.431898]  do_syscall_64+0x55/0x100
    [  846.431901]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  846.431902] RIP: 0033:0x7f882de1c0d7
    [  846.431903] Code: f0 ff ff 73 01 c3 48 8b 0d be dd 2b 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 b8 c2 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 91 dd 2b 00 f7 d8 64 89 01 48
    [  846.431934] RSP: 002b:00007ffe8e66c238 EFLAGS: 00000202 ORIG_RAX: 00000000000000c2
    [  846.431936] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f882de1c0d7
    [  846.431937] RDX: 0000000000000071 RSI: 00007ffe8e66c280 RDI: 0000000001a880c0
    [  846.431939] RBP: 00007ffe8e66c300 R08: 0000000001a88010 R09: 0000000000000000
    [  846.431940] R10: 00000000000001ab R11: 0000000000000202 R12: 0000000000400550
    [  846.431941] R13: 00007ffe8e66c400 R14: 0000000000000000 R15: 0000000000000000
    [  846.431943] ---[ end trace abca54df39d14f5d ]---
    [  846.432033] F2FS-fs (loop0): access invalid blkaddr:1024
    [  846.432051] WARNING: CPU: 1 PID: 1249 at fs/f2fs/checkpoint.c:154 f2fs_is_valid_blkaddr+0x10f/0x160
    [  846.432051] Modules linked in: snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hda_core snd_hwdep snd_pcm snd_timer snd input_leds joydev soundcore serio_raw i2c_piix4 mac_hid ib_iser rdma_cm iw_cm ib_cm ib_core configfs iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi autofs4 raid10 raid456 libcrc32c async_raid6_recov async_memcpy async_pq async_xor xor async_tx raid6_pq raid1 raid0 multipath linear qxl ttm crct10dif_pclmul crc32_pclmul drm_kms_helper ghash_clmulni_intel syscopyarea sysfillrect sysimgblt fb_sys_fops pcbc drm 8139too aesni_intel 8139cp floppy psmouse mii aes_x86_64 crypto_simd pata_acpi cryptd glue_helper
    [  846.432085] CPU: 1 PID: 1249 Comm: a.out Tainted: G        W         4.18.0-rc3+ #1
    [  846.432086] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
    [  846.432089] RIP: 0010:f2fs_is_valid_blkaddr+0x10f/0x160
    [  846.432089] Code: 00 eb ed 31 c0 83 fa 05 75 ae 48 83 ec 08 48 8b 3f 89 f1 48 c7 c2 fc 0b 0f 8b 48 c7 c6 8b d7 09 8b 88 44 24 07 e8 61 8b ff ff <0f> 0b 0f b6 44 24 07 48 83 c4 08 eb 81 4c 8b 47 10 8b 8f 38 04 00
    [  846.432120] RSP: 0018:ffff961c414a7900 EFLAGS: 00010286
    [  846.432122] RAX: 0000000000000000 RBX: 0000000000000400 RCX: 0000000000000006
    [  846.432123] RDX: 0000000000000000 RSI: 0000000000000096 RDI: ffff89dfffd165d0
    [  846.432124] RBP: ffff89dff5492800 R08: 0000000000000001 R09: 000000000000029d
    [  846.432125] R10: ffff961c414a7820 R11: 000000000000029d R12: 0000000000000400
    [  846.432126] R13: 0000000000000000 R14: ffff89dff4ff88d0 R15: 0000000000000000
    [  846.432128] FS:  00007f882e2fb700(0000) GS:ffff89dfffd00000(0000) knlGS:0000000000000000
    [  846.432130] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  846.432131] CR2: 0000000001a88008 CR3: 00000001eb572000 CR4: 00000000000006e0
    [  846.432135] Call Trace:
    [  846.432151]  f2fs_wait_on_block_writeback+0x20/0x110
    [  846.432158]  f2fs_grab_read_bio+0xbc/0xe0
    [  846.432161]  f2fs_submit_page_read+0x21/0x280
    [  846.432163]  f2fs_get_read_data_page+0xb7/0x3c0
    [  846.432165]  f2fs_get_lock_data_page+0x29/0x1e0
    [  846.432167]  f2fs_get_new_data_page+0x148/0x550
    [  846.432170]  f2fs_add_regular_entry+0x1d2/0x550
    [  846.432178]  ? __switch_to+0x12f/0x460
    [  846.432181]  f2fs_add_dentry+0x6a/0xd0
    [  846.432184]  f2fs_do_add_link+0xe9/0x140
    [  846.432186]  __recover_dot_dentries+0x260/0x280
    [  846.432189]  f2fs_lookup+0x343/0x390
    [  846.432193]  __lookup_slow+0x97/0x150
    [  846.432195]  lookup_slow+0x35/0x50
    [  846.432208]  walk_component+0x1c6/0x470
    [  846.432212]  ? memcg_kmem_charge_memcg+0x70/0x90
    [  846.432215]  ? page_add_file_rmap+0x13/0x200
    [  846.432217]  path_lookupat+0x76/0x230
    [  846.432219]  ? __alloc_pages_nodemask+0xfc/0x280
    [  846.432221]  filename_lookup+0xb8/0x1a0
    [  846.432224]  ? _cond_resched+0x16/0x40
    [  846.432226]  ? kmem_cache_alloc+0x160/0x1d0
    [  846.432228]  ? path_listxattr+0x41/0xa0
    [  846.432230]  path_listxattr+0x41/0xa0
    [  846.432233]  do_syscall_64+0x55/0x100
    [  846.432235]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  846.432237] RIP: 0033:0x7f882de1c0d7
    [  846.432237] Code: f0 ff ff 73 01 c3 48 8b 0d be dd 2b 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 b8 c2 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 91 dd 2b 00 f7 d8 64 89 01 48
    [  846.432269] RSP: 002b:00007ffe8e66c238 EFLAGS: 00000202 ORIG_RAX: 00000000000000c2
    [  846.432271] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f882de1c0d7
    [  846.432272] RDX: 0000000000000071 RSI: 00007ffe8e66c280 RDI: 0000000001a880c0
    [  846.432273] RBP: 00007ffe8e66c300 R08: 0000000001a88010 R09: 0000000000000000
    [  846.432274] R10: 00000000000001ab R11: 0000000000000202 R12: 0000000000400550
    [  846.432275] R13: 00007ffe8e66c400 R14: 0000000000000000 R15: 0000000000000000
    [  846.432277] ---[ end trace abca54df39d14f5e ]---
    [  846.432279] F2FS-fs (loop0): invalid blkaddr: 1024, type: 5, run fsck to fix.
    [  846.432376] WARNING: CPU: 1 PID: 1249 at fs/f2fs/f2fs.h:2697 f2fs_wait_on_block_writeback+0xb1/0x110
    [  846.432376] Modules linked in: snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hda_core snd_hwdep snd_pcm snd_timer snd input_leds joydev soundcore serio_raw i2c_piix4 mac_hid ib_iser rdma_cm iw_cm ib_cm ib_core configfs iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi autofs4 raid10 raid456 libcrc32c async_raid6_recov async_memcpy async_pq async_xor xor async_tx raid6_pq raid1 raid0 multipath linear qxl ttm crct10dif_pclmul crc32_pclmul drm_kms_helper ghash_clmulni_intel syscopyarea sysfillrect sysimgblt fb_sys_fops pcbc drm 8139too aesni_intel 8139cp floppy psmouse mii aes_x86_64 crypto_simd pata_acpi cryptd glue_helper
    [  846.432410] CPU: 1 PID: 1249 Comm: a.out Tainted: G        W         4.18.0-rc3+ #1
    [  846.432411] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
    [  846.432413] RIP: 0010:f2fs_wait_on_block_writeback+0xb1/0x110
    [  846.432414] Code: 66 90 f0 ff 4b 34 74 59 5b 5d c3 48 8b 7d 00 41 b8 05 00 00 00 89 d9 48 c7 c2 d8 e8 0e 8b 48 c7 c6 1d b0 0a 8b e8 df bc fd ff <0f> 0b f0 80 4d 48 04 e9 67 ff ff ff 48 8b 03 48 c1 e8 37 83 e0 07
    [  846.432445] RSP: 0018:ffff961c414a7910 EFLAGS: 00010286
    [  846.432447] RAX: 0000000000000000 RBX: 0000000000000400 RCX: 0000000000000006
    [  846.432448] RDX: 0000000000000000 RSI: 0000000000000092 RDI: ffff89dfffd165d0
    [  846.432449] RBP: ffff89dff5492800 R08: 0000000000000000 R09: 00000000000002d1
    [  846.432450] R10: ffff961c414a7820 R11: ffff89dfad50cf80 R12: 0000000000000400
    [  846.432451] R13: 0000000000000000 R14: ffff89dff4ff88d0 R15: 0000000000000000
    [  846.432453] FS:  00007f882e2fb700(0000) GS:ffff89dfffd00000(0000) knlGS:0000000000000000
    [  846.432454] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  846.432455] CR2: 0000000001a88008 CR3: 00000001eb572000 CR4: 00000000000006e0
    [  846.432459] Call Trace:
    [  846.432463]  f2fs_grab_read_bio+0xbc/0xe0
    [  846.432464]  f2fs_submit_page_read+0x21/0x280
    [  846.432466]  f2fs_get_read_data_page+0xb7/0x3c0
    [  846.432468]  f2fs_get_lock_data_page+0x29/0x1e0
    [  846.432470]  f2fs_get_new_data_page+0x148/0x550
    [  846.432473]  f2fs_add_regular_entry+0x1d2/0x550
    [  846.432475]  ? __switch_to+0x12f/0x460
    [  846.432477]  f2fs_add_dentry+0x6a/0xd0
    [  846.432480]  f2fs_do_add_link+0xe9/0x140
    [  846.432483]  __recover_dot_dentries+0x260/0x280
    [  846.432485]  f2fs_lookup+0x343/0x390
    [  846.432488]  __lookup_slow+0x97/0x150
    [  846.432490]  lookup_slow+0x35/0x50
    [  846.432505]  walk_component+0x1c6/0x470
    [  846.432509]  ? memcg_kmem_charge_memcg+0x70/0x90
    [  846.432511]  ? page_add_file_rmap+0x13/0x200
    [  846.432513]  path_lookupat+0x76/0x230
    [  846.432515]  ? __alloc_pages_nodemask+0xfc/0x280
    [  846.432517]  filename_lookup+0xb8/0x1a0
    [  846.432520]  ? _cond_resched+0x16/0x40
    [  846.432522]  ? kmem_cache_alloc+0x160/0x1d0
    [  846.432525]  ? path_listxattr+0x41/0xa0
    [  846.432526]  path_listxattr+0x41/0xa0
    [  846.432529]  do_syscall_64+0x55/0x100
    [  846.432531]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  846.432533] RIP: 0033:0x7f882de1c0d7
    [  846.432533] Code: f0 ff ff 73 01 c3 48 8b 0d be dd 2b 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 b8 c2 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 91 dd 2b 00 f7 d8 64 89 01 48
    [  846.432565] RSP: 002b:00007ffe8e66c238 EFLAGS: 00000202 ORIG_RAX: 00000000000000c2
    [  846.432567] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f882de1c0d7
    [  846.432568] RDX: 0000000000000071 RSI: 00007ffe8e66c280 RDI: 0000000001a880c0
    [  846.432569] RBP: 00007ffe8e66c300 R08: 0000000001a88010 R09: 0000000000000000
    [  846.432570] R10: 00000000000001ab R11: 0000000000000202 R12: 0000000000400550
    [  846.432571] R13: 00007ffe8e66c400 R14: 0000000000000000 R15: 0000000000000000
    [  846.432573] ---[ end trace abca54df39d14f5f ]---
    [  846.434280] BUG: unable to handle kernel NULL pointer dereference at 0000000000000008
    [  846.434424] PGD 80000001ebd3a067 P4D 80000001ebd3a067 PUD 1eb1ae067 PMD 0
    [  846.434551] Oops: 0000 [#1] SMP PTI
    [  846.434697] CPU: 0 PID: 44 Comm: kworker/u5:0 Tainted: G        W         4.18.0-rc3+ #1
    [  846.434805] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
    [  846.435000] Workqueue: fscrypt_read_queue decrypt_work
    [  846.435174] RIP: 0010:fscrypt_do_page_crypto+0x6e/0x2d0
    [  846.435351] Code: 00 65 48 8b 04 25 28 00 00 00 48 89 84 24 88 00 00 00 31 c0 e8 43 c2 e0 ff 49 8b 86 48 02 00 00 85 ed c7 44 24 70 00 00 00 00 <48> 8b 58 08 0f 84 14 02 00 00 48 8b 78 10 48 8b 0c 24 48 c7 84 24
    [  846.435696] RSP: 0018:ffff961c40f9bd60 EFLAGS: 00010206
    [  846.435870] RAX: 0000000000000000 RBX: ffffc5f787719b80 RCX: ffffc5f787719b80
    [  846.436051] RDX: ffffffff8b9f4b88 RSI: ffffffff8b0ae622 RDI: ffff961c40f9bdb8
    [  846.436261] RBP: 0000000000001000 R08: ffffc5f787719b80 R09: 0000000000001000
    [  846.436433] R10: 0000000000000018 R11: fefefefefefefeff R12: ffffc5f787719b80
    [  846.436562] R13: ffffc5f787719b80 R14: ffff89dff4ff88d0 R15: 0ffff89dfaddee60
    [  846.436658] FS:  0000000000000000(0000) GS:ffff89dfffc00000(0000) knlGS:0000000000000000
    [  846.436758] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  846.436898] CR2: 0000000000000008 CR3: 00000001eddd0000 CR4: 00000000000006f0
    [  846.437001] Call Trace:
    [  846.437181]  ? check_preempt_wakeup+0xf2/0x230
    [  846.437276]  ? check_preempt_curr+0x7c/0x90
    [  846.437370]  fscrypt_decrypt_page+0x48/0x4d
    [  846.437466]  __fscrypt_decrypt_bio+0x5b/0x90
    [  846.437542]  decrypt_work+0x12/0x20
    [  846.437651]  process_one_work+0x15e/0x3d0
    [  846.437740]  worker_thread+0x4c/0x440
    [  846.437848]  kthread+0xf8/0x130
    [  846.437938]  ? rescuer_thread+0x350/0x350
    [  846.438022]  ? kthread_associate_blkcg+0x90/0x90
    [  846.438117]  ret_from_fork+0x35/0x40
    [  846.438201] Modules linked in: snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hda_core snd_hwdep snd_pcm snd_timer snd input_leds joydev soundcore serio_raw i2c_piix4 mac_hid ib_iser rdma_cm iw_cm ib_cm ib_core configfs iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi autofs4 raid10 raid456 libcrc32c async_raid6_recov async_memcpy async_pq async_xor xor async_tx raid6_pq raid1 raid0 multipath linear qxl ttm crct10dif_pclmul crc32_pclmul drm_kms_helper ghash_clmulni_intel syscopyarea sysfillrect sysimgblt fb_sys_fops pcbc drm 8139too aesni_intel 8139cp floppy psmouse mii aes_x86_64 crypto_simd pata_acpi cryptd glue_helper
    [  846.438653] CR2: 0000000000000008
    [  846.438713] ---[ end trace abca54df39d14f60 ]---
    [  846.438796] RIP: 0010:fscrypt_do_page_crypto+0x6e/0x2d0
    [  846.438844] Code: 00 65 48 8b 04 25 28 00 00 00 48 89 84 24 88 00 00 00 31 c0 e8 43 c2 e0 ff 49 8b 86 48 02 00 00 85 ed c7 44 24 70 00 00 00 00 <48> 8b 58 08 0f 84 14 02 00 00 48 8b 78 10 48 8b 0c 24 48 c7 84 24
    [  846.439084] RSP: 0018:ffff961c40f9bd60 EFLAGS: 00010206
    [  846.439176] RAX: 0000000000000000 RBX: ffffc5f787719b80 RCX: ffffc5f787719b80
    [  846.440927] RDX: ffffffff8b9f4b88 RSI: ffffffff8b0ae622 RDI: ffff961c40f9bdb8
    [  846.442083] RBP: 0000000000001000 R08: ffffc5f787719b80 R09: 0000000000001000
    [  846.443284] R10: 0000000000000018 R11: fefefefefefefeff R12: ffffc5f787719b80
    [  846.444448] R13: ffffc5f787719b80 R14: ffff89dff4ff88d0 R15: 0ffff89dfaddee60
    [  846.445558] FS:  0000000000000000(0000) GS:ffff89dfffc00000(0000) knlGS:0000000000000000
    [  846.446687] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  846.447796] CR2: 0000000000000008 CR3: 00000001eddd0000 CR4: 00000000000006f0
    
    - Location
    https://elixir.bootlin.com/linux/v4.18-rc4/source/fs/crypto/crypto.c#L149
            struct crypto_skcipher *tfm = ci->ci_ctfm;
    Here ci can be NULL
    
    Note that this issue maybe require CONFIG_F2FS_FS_ENCRYPTION=y to reproduce.
    
    Reported-by Wen Xu <wen.xu@gatech.edu>
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    [bwh: Backported to 4.14: adjust context]
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cacfa255bee4fd7137939411b05a0527475a19ec
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Wed Dec 5 14:22:39 2018 +0200

    xhci: Prevent U1/U2 link pm states if exit latency is too long
    
    commit 0472bf06c6fd33c1a18aaead4c8f91e5a03d8d7b upstream.
    
    Don't allow USB3 U1 or U2 if the latency to wake up from the U-state
    reaches the service interval for a periodic endpoint.
    
    This is according to xhci 1.1 specification section 4.23.5.2 extra note:
    
    "Software shall ensure that a device is prevented from entering a U-state
     where its worst case exit latency approaches the ESIT."
    
    Allowing too long exit latencies for periodic endpoint confuses xHC
    internal scheduling, and new devices may fail to enumerate with a
    "Not enough bandwidth for new device state" error from the host.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ff0131284e94ddac80520fa549d55a4294776cb
Author: Sandeep Singh <sandeep.singh@amd.com>
Date:   Wed Dec 5 14:22:38 2018 +0200

    xhci: workaround CSS timeout on AMD SNPS 3.0 xHC
    
    commit a7d57abcc8a5bdeb53bbf8e87558e8e0a2c2a29d upstream.
    
    Occasionally AMD SNPS 3.0 xHC does not respond to
    CSS when set, also it does not flag anything on SRE and HCE
    to point the internal xHC errors on USBSTS register. This stalls
    the entire system wide suspend and there is no point in stalling
    just because of xHC CSS is not responding.
    
    To work around this problem, if the xHC does not flag
    anything on SRE and HCE, we can skip the CSS
    timeout and allow the system to continue the suspend. Once the
    system resume happens we can internally reset the controller
    using XHCI_RESET_ON_RESUME quirk
    
    Signed-off-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Signed-off-by: Sandeep Singh <Sandeep.Singh@amd.com>
    cc: Nehal Shah <Nehal-bakulchandra.Shah@amd.com>
    Cc: <stable@vger.kernel.org>
    Tested-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9e0bc710347fadad55910846ee36f0681d0dca8
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Oct 30 22:12:56 2018 +0100

    ARM: 8806/1: kprobes: Fix false positive with FORTIFY_SOURCE
    
    commit e46daee53bb50bde38805f1823a182979724c229 upstream.
    
    The arm compiler internally interprets an inline assembly label
    as an unsigned long value, not a pointer. As a result, under
    CONFIG_FORTIFY_SOURCE, the address of a label has a size of 4 bytes,
    which was tripping the runtime checks. Instead, we can just cast the label
    (as done with the size calculations earlier).
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1639397
    
    Reported-by: William Cohen <wcohen@redhat.com>
    Fixes: 6974f0c4555e ("include/linux/string.h: add the option of fortified string.h functions")
    Cc: stable@vger.kernel.org
    Acked-by: Laura Abbott <labbott@redhat.com>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Tested-by: William Cohen <wcohen@redhat.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e47a6e68c3bbfebb6d6f336d92884df37b722e4b
Author: Bin Liu <b-liu@ti.com>
Date:   Mon Nov 12 09:43:22 2018 -0600

    dmaengine: cppi41: delete channel from pending list when stop channel
    
    commit 59861547ec9a9736e7882f6fb0c096a720ff811a upstream.
    
    The driver defines three states for a cppi channel.
    - idle: .chan_busy == 0 && not in .pending list
    - pending: .chan_busy == 0 && in .pending list
    - busy: .chan_busy == 1 && not in .pending list
    
    There are cases in which the cppi channel could be in the pending state
    when cppi41_dma_issue_pending() is called after cppi41_runtime_suspend()
    is called.
    
    cppi41_stop_chan() has a bug for these cases to set channels to idle state.
    It only checks the .chan_busy flag, but not the .pending list, then later
    when cppi41_runtime_resume() is called the channels in .pending list will
    be transitioned to busy state.
    
    Removing channels from the .pending list solves the problem.
    
    Fixes: 975faaeb9985 ("dma: cppi41: start tear down only if channel is busy")
    Cc: stable@vger.kernel.org # v3.15+
    Signed-off-by: Bin Liu <b-liu@ti.com>
    Reviewed-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc3d506a116f1a00dba4a380ff511007c71e4db9
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Dec 5 18:33:59 2018 +0200

    dmaengine: dw: Fix FIFO size for Intel Merrifield
    
    commit ffe843b18211301ad25893eba09f402c19d12304 upstream.
    
    Intel Merrifield has a reduced size of FIFO used in iDMA 32-bit controller,
    i.e. 512 bytes instead of 1024.
    
    Fix this by partitioning it as 64 bytes per channel.
    
    Note, in the future we might switch to 'fifo-size' property instead of
    hard coded value.
    
    Fixes: 199244d69458 ("dmaengine: dw: add support of iDMA 32-bit hardware")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3dccb527cfc97c4027824b6104635714ae14f47
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Nov 30 15:39:57 2018 -0500

    SUNRPC: Fix leak of krb5p encode pages
    
    commit 8dae5398ab1ac107b1517e8195ed043d5f422bd0 upstream.
    
    call_encode can be invoked more than once per RPC call. Ensure that
    each call to gss_wrap_req_priv does not overwrite pointers to
    previously allocated memory.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Cc: stable@kernel.org
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f15c072d6576c5e2b693c22e39ccc9103c952078
Author: Stefan Hajnoczi <stefanha@redhat.com>
Date:   Mon Nov 5 10:35:47 2018 +0000

    vhost/vsock: fix use-after-free in network stack callers
    
    commit 834e772c8db0c6a275d75315d90aba4ebbb1e249 upstream.
    
    If the network stack calls .send_pkt()/.cancel_pkt() during .release(),
    a struct vhost_vsock use-after-free is possible.  This occurs because
    .release() does not wait for other CPUs to stop using struct
    vhost_vsock.
    
    Switch to an RCU-enabled hashtable (indexed by guest CID) so that
    .release() can wait for other CPUs by calling synchronize_rcu().  This
    also eliminates vhost_vsock_lock acquisition in the data path so it
    could have a positive effect on performance.
    
    This is CVE-2018-14625 "kernel: use-after-free Read in vhost_transport_send_pkt".
    
    Cc: stable@vger.kernel.org
    Reported-and-tested-by: syzbot+bd391451452fb0b93039@syzkaller.appspotmail.com
    Reported-by: syzbot+e3e074963495f92a89ed@syzkaller.appspotmail.com
    Reported-by: syzbot+d5a0a170c5069658b141@syzkaller.appspotmail.com
    Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52b993b4c4c2a88b62601b0cc0662a564e1d65dc
Author: Halil Pasic <pasic@linux.ibm.com>
Date:   Wed Sep 26 18:48:30 2018 +0200

    virtio/s390: fix race in ccw_io_helper()
    
    commit 78b1a52e05c9db11d293342e8d6d8a230a04b4e7 upstream.
    
    While ccw_io_helper() seems like intended to be exclusive in a sense that
    it is supposed to facilitate I/O for at most one thread at any given
    time, there is actually nothing ensuring that threads won't pile up at
    vcdev->wait_q. If they do, all threads get woken up and see the status
    that belongs to some other request than their own. This can lead to bugs.
    For an example see:
    https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1788432
    
    This race normally does not cause any problems. The operations provided
    by struct virtio_config_ops are usually invoked in a well defined
    sequence, normally don't fail, and are normally used quite infrequent
    too.
    
    Yet, if some of the these operations are directly triggered via sysfs
    attributes, like in the case described by the referenced bug, userspace
    is given an opportunity to force races by increasing the frequency of the
    given operations.
    
    Let us fix the problem by ensuring, that for each device, we finish
    processing the previous request before starting with a new one.
    
    Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Cc: stable@vger.kernel.org
    Message-Id: <20180925121309.58524-3-pasic@linux.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73f6d525be2cded3bd3dd3bcfcfffec548a79e94
Author: Halil Pasic <pasic@linux.ibm.com>
Date:   Wed Sep 26 18:48:29 2018 +0200

    virtio/s390: avoid race on vcdev->config
    
    commit 2448a299ec416a80f699940a86f4a6d9a4f643b1 upstream.
    
    Currently we have a race on vcdev->config in virtio_ccw_get_config() and
    in virtio_ccw_set_config().
    
    This normally does not cause problems, as these are usually infrequent
    operations. However, for some devices writing to/reading from the config
    space can be triggered through sysfs attributes. For these, userspace can
    force the race by increasing the frequency.
    
    Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
    Cc: stable@vger.kernel.org
    Message-Id: <20180925121309.58524-2-pasic@linux.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01a02e66228b69b497136168716cb1ba2b5ebd73
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Dec 3 10:44:15 2018 +0100

    ALSA: hda/realtek - Fix speaker output regression on Thinkpad T570
    
    commit 54947cd64c1b8290f64bb2958e343c07270e3a58 upstream.
    
    We've got a regression report for some Thinkpad models (at least
    T570s) which shows the too low speaker output volume.  The bisection
    leaded to the commit 61fcf8ece9b6 ("ALSA: hda/realtek - Enable Thinkpad
    Dock device for ALC298 platform"), and it's basically adding the two
    pin configurations for the dock, and looks harmless.
    
    The real culprit seems, though, that the DAC assignment for the
    speaker pin is implicitly assumed on these devices, i.e. pin NID 0x14
    to be coupled with DAC NID 0x03.  When more pins are configured by the
    commit above, the auto-parser changes the DAC assignment, and this
    resulted in the regression.
    
    As a workaround, just provide the fixed pin / DAC mapping table for
    this Thinkpad fixup function.  It's no generic solution, but the
    problem itself is pretty much device-specific, so must be good
    enough.
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1554304
    Fixes: 61fcf8ece9b6 ("ALSA: hda/realtek - Enable Thinkpad Dock device for ALC298 platform")
    Cc: <stable@vger.kernel.org>
    Reported-and-tested-by: Jeremy Cline <jcline@redhat.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7852f54f08a0a7222235561fc57ccd83f1c358d4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 29 12:05:19 2018 +0100

    ALSA: pcm: Fix interval evaluation with openmin/max
    
    commit 5363857b916c1f48027e9b96ee8be8376bf20811 upstream.
    
    As addressed in alsa-lib (commit b420056604f0), we need to fix the
    case where the evaluation of PCM interval "(x x+1]" leading to
    -EINVAL.  After applying rules, such an interval may be translated as
    "(x x+1)".
    
    Fixes: ff2d6acdf6f1 ("ALSA: pcm: Fix snd_interval_refine first/last with open min/max")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cabb9539dc1741b2a5bf6077a4aac8156f07a1c8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 29 08:02:49 2018 +0100

    ALSA: pcm: Call snd_pcm_unlink() conditionally at closing
    
    commit b51abed8355e5556886623b2772fa6b7598d2282 upstream.
    
    Currently the PCM core calls snd_pcm_unlink() always unconditionally
    at closing a stream.  However, since snd_pcm_unlink() invokes the
    global rwsem down, the lock can be easily contended.  More badly, when
    a thread runs in a high priority RT-FIFO, it may stall at spinning.
    
    Basically the call of snd_pcm_unlink() is required only for the linked
    streams that are already rare occasion.  For normal use cases, this
    code path is fairly superfluous.
    
    As an optimization (and also as a workaround for the RT problem
    above in normal situations without linked streams), this patch adds a
    check before calling snd_pcm_unlink() and calls it only when needed.
    
    Reported-by: Chanho Min <chanho.min@lge.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 108ab9eafbbeffa17431cb1acd7a930d23bfd197
Author: Chanho Min <chanho.min@lge.com>
Date:   Mon Nov 26 14:36:37 2018 +0900

    ALSA: pcm: Fix starvation on down_write_nonblock()
    
    commit b888a5f713e4d17faaaff24316585a4eb07f35b7 upstream.
    
    Commit 67ec1072b053 ("ALSA: pcm: Fix rwsem deadlock for non-atomic PCM
    stream") fixes deadlock for non-atomic PCM stream. But, This patch
    causes antother stuck.
    If writer is RT thread and reader is a normal thread, the reader
    thread will be difficult to get scheduled. It may not give chance to
    release readlocks and writer gets stuck for a long time if they are
    pinned to single cpu.
    
    The deadlock described in the previous commit is because the linux
    rwsem queues like a FIFO. So, we might need non-FIFO writelock, not
    non-block one.
    
    My suggestion is that the writer gives reader a chance to be scheduled
    by using the minimum msleep() instaed of spinning without blocking by
    writer. Also, The *_nonblock may be changed to *_nonfifo appropriately
    to this concept.
    In terms of performance, when trylock is failed, this minimum periodic
    msleep will have the same performance as the tick-based
    schedule()/wake_up_q().
    
    [ Although this has a fairly high performance penalty, the relevant
      code path became already rare due to the previous commit ("ALSA:
      pcm: Call snd_pcm_unlink() conditionally at closing").  That is, now
      this unconditional msleep appears only when using linked streams,
      and this must be a rare case.  So we accept this as a quick
      workaround until finding a more suitable one -- tiwai ]
    
    Fixes: 67ec1072b053 ("ALSA: pcm: Fix rwsem deadlock for non-atomic PCM stream")
    Suggested-by: Wonmin Jung <wonmin.jung@lge.com>
    Signed-off-by: Chanho Min <chanho.min@lge.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0618c71c73caa194f4d9ac2d42551ad6df047103
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Nov 29 08:57:37 2018 +0000

    ALSA: hda: Add support for AMD Stoney Ridge
    
    commit 3deef52ce10514ccdebba8e8ab85f9cebd0eb3f7 upstream.
    
    It's similar to other AMD audio devices, it also supports D3, which can
    save some power drain.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19f74e45746253cafb8cb1e773041e7cadbac622
Author: Hui Peng <benquike@gmail.com>
Date:   Mon Dec 3 16:09:34 2018 +0100

    ALSA: usb-audio: Fix UAF decrement if card has no live interfaces in card.c
    
    commit 5f8cf712582617d523120df67d392059eaf2fc4b upstream.
    
    If a USB sound card reports 0 interfaces, an error condition is triggered
    and the function usb_audio_probe errors out. In the error path, there was a
    use-after-free vulnerability where the memory object of the card was first
    freed, followed by a decrement of the number of active chips. Moving the
    decrement above the atomic_dec fixes the UAF.
    
    [ The original problem was introduced in 3.1 kernel, while it was
      developed in a different form.  The Fixes tag below indicates the
      original commit but it doesn't mean that the patch is applicable
      cleanly. -- tiwai ]
    
    Fixes: 362e4e49abe5 ("ALSA: usb-audio - clear chip->probing on error exit")
    Reported-by: Hui Peng <benquike@gmail.com>
    Reported-by: Mathias Payer <mathias.payer@nebelwelt.net>
    Signed-off-by: Hui Peng <benquike@gmail.com>
    Signed-off-by: Mathias Payer <mathias.payer@nebelwelt.net>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b6e85da8d94948201abb8d576d485892a6a878f
Author: Mathias Payer <mathias.payer@nebelwelt.net>
Date:   Wed Dec 5 21:19:59 2018 +0100

    USB: check usb_get_extra_descriptor for proper size
    
    commit 704620afc70cf47abb9d6a1a57f3825d2bca49cf upstream.
    
    When reading an extra descriptor, we need to properly check the minimum
    and maximum size allowed, to prevent from invalid data being sent by a
    device.
    
    Reported-by: Hui Peng <benquike@gmail.com>
    Reported-by: Mathias Payer <mathias.payer@nebelwelt.net>
    Co-developed-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Hui Peng <benquike@gmail.com>
    Signed-off-by: Mathias Payer <mathias.payer@nebelwelt.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 810487aa9d483262044c41fc1973c7abd95e1d86
Author: Alexander Theissen <alex.theissen@me.com>
Date:   Tue Dec 4 23:43:35 2018 +0100

    usb: appledisplay: Add 27" Apple Cinema Display
    
    commit d7859905301880ad3e16272399d26900af3ac496 upstream.
    
    Add another Apple Cinema Display to the list of supported displays.
    
    Signed-off-by: Alexander Theissen <alex.theissen@me.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2afd22aff69bc448b1defc06fcd311479f336f5
Author: Harry Pan <harry.pan@intel.com>
Date:   Thu Nov 29 00:40:41 2018 +0800

    usb: quirk: add no-LPM quirk on SanDisk Ultra Flair device
    
    commit 2f2dde6ba89b1ef1fe23c1138131b315d9aa4019 upstream.
    
    Some lower volume SanDisk Ultra Flair in 16GB, which the VID:PID is
    in 0781:5591, will aggressively request LPM of U1/U2 during runtime,
    when using this thumb drive as the OS installation key we found the
    device will generate failure during U1 exit path making it dropped
    from the USB bus, this causes a corrupted installation in system at
    the end.
    
    i.e.,
    [  166.918296] hub 2-0:1.0: state 7 ports 7 chg 0000 evt 0004
    [  166.918327] usb usb2-port2: link state change
    [  166.918337] usb usb2-port2: do warm reset
    [  166.970039] usb usb2-port2: not warm reset yet, waiting 50ms
    [  167.022040] usb usb2-port2: not warm reset yet, waiting 200ms
    [  167.276043] usb usb2-port2: status 02c0, change 0041, 5.0 Gb/s
    [  167.276050] usb 2-2: USB disconnect, device number 2
    [  167.276058] usb 2-2: unregistering device
    [  167.276060] usb 2-2: unregistering interface 2-2:1.0
    [  167.276170] xhci_hcd 0000:00:15.0: shutdown urb ffffa3c7cc695cc0 ep1in-bulk
    [  167.284055] sd 0:0:0:0: [sda] tag#0 FAILED Result: hostbyte=DID_NO_CONNECT driverbyte=DRIVER_OK
    [  167.284064] sd 0:0:0:0: [sda] tag#0 CDB: Read(10) 28 00 00 33 04 90 00 01 00 00
    ...
    
    Analyzed the USB trace in the link layer we realized it is because
    of the 6-ms timer of tRecoveryConfigurationTimeout which documented
    on the USB 3.2 Revision 1.0, the section 7.5.10.4.2 of "Exit from
    Recovery.Configuration"; device initiates U1 exit -> Recovery.Active
    -> Recovery.Configuration, then the host timer timeout makes the link
    transits to eSS.Inactive -> Rx.Detect follows by a Warm Reset.
    
    Interestingly, the other higher volume of SanDisk Ultra Flair sharing
    the same VID:PID, such as 64GB, would not request LPM during runtime,
    it sticks at U0 always, thus disabling LPM does not affect those thumb
    drives at all.
    
    The same odd occures in SanDisk Ultra Fit 16GB, VID:PID in 0781:5583.
    
    Signed-off-by: Harry Pan <harry.pan@intel.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4515bbc4e284066d4e2f4a66eccf13813f6e7206
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Wed Nov 15 17:38:37 2017 -0800

    mm: don't warn about allocations which stall for too long
    
    [ Upstream commit 400e22499dd92613821374c8c6c88c7225359980 ]
    
    Commit 63f53dea0c98 ("mm: warn about allocations which stall for too
    long") was a great step for reducing possibility of silent hang up
    problem caused by memory allocation stalls.  But this commit reverts it,
    for it is possible to trigger OOM lockup and/or soft lockups when many
    threads concurrently called warn_alloc() (in order to warn about memory
    allocation stalls) due to current implementation of printk(), and it is
    difficult to obtain useful information due to limitation of synchronous
    warning approach.
    
    Current printk() implementation flushes all pending logs using the
    context of a thread which called console_unlock().  printk() should be
    able to flush all pending logs eventually unless somebody continues
    appending to printk() buffer.
    
    Since warn_alloc() started appending to printk() buffer while waiting
    for oom_kill_process() to make forward progress when oom_kill_process()
    is processing pending logs, it became possible for warn_alloc() to force
    oom_kill_process() loop inside printk().  As a result, warn_alloc()
    significantly increased possibility of preventing oom_kill_process()
    from making forward progress.
    
    ---------- Pseudo code start ----------
    Before warn_alloc() was introduced:
    
      retry:
        if (mutex_trylock(&oom_lock)) {
          while (atomic_read(&printk_pending_logs) > 0) {
            atomic_dec(&printk_pending_logs);
            print_one_log();
          }
          // Send SIGKILL here.
          mutex_unlock(&oom_lock)
        }
        goto retry;
    
    After warn_alloc() was introduced:
    
      retry:
        if (mutex_trylock(&oom_lock)) {
          while (atomic_read(&printk_pending_logs) > 0) {
            atomic_dec(&printk_pending_logs);
            print_one_log();
          }
          // Send SIGKILL here.
          mutex_unlock(&oom_lock)
        } else if (waited_for_10seconds()) {
          atomic_inc(&printk_pending_logs);
        }
        goto retry;
    ---------- Pseudo code end ----------
    
    Although waited_for_10seconds() becomes true once per 10 seconds,
    unbounded number of threads can call waited_for_10seconds() at the same
    time.  Also, since threads doing waited_for_10seconds() keep doing
    almost busy loop, the thread doing print_one_log() can use little CPU
    resource.  Therefore, this situation can be simplified like
    
    ---------- Pseudo code start ----------
      retry:
        if (mutex_trylock(&oom_lock)) {
          while (atomic_read(&printk_pending_logs) > 0) {
            atomic_dec(&printk_pending_logs);
            print_one_log();
          }
          // Send SIGKILL here.
          mutex_unlock(&oom_lock)
        } else {
          atomic_inc(&printk_pending_logs);
        }
        goto retry;
    ---------- Pseudo code end ----------
    
    when printk() is called faster than print_one_log() can process a log.
    
    One of possible mitigation would be to introduce a new lock in order to
    make sure that no other series of printk() (either oom_kill_process() or
    warn_alloc()) can append to printk() buffer when one series of printk()
    (either oom_kill_process() or warn_alloc()) is already in progress.
    
    Such serialization will also help obtaining kernel messages in readable
    form.
    
    ---------- Pseudo code start ----------
      retry:
        if (mutex_trylock(&oom_lock)) {
          mutex_lock(&oom_printk_lock);
          while (atomic_read(&printk_pending_logs) > 0) {
            atomic_dec(&printk_pending_logs);
            print_one_log();
          }
          // Send SIGKILL here.
          mutex_unlock(&oom_printk_lock);
          mutex_unlock(&oom_lock)
        } else {
          if (mutex_trylock(&oom_printk_lock)) {
            atomic_inc(&printk_pending_logs);
            mutex_unlock(&oom_printk_lock);
          }
        }
        goto retry;
    ---------- Pseudo code end ----------
    
    But this commit does not go that direction, for we don't want to
    introduce a new lock dependency, and we unlikely be able to obtain
    useful information even if we serialized oom_kill_process() and
    warn_alloc().
    
    Synchronous approach is prone to unexpected results (e.g.  too late [1],
    too frequent [2], overlooked [3]).  As far as I know, warn_alloc() never
    helped with providing information other than "something is going wrong".
    I want to consider asynchronous approach which can obtain information
    during stalls with possibly relevant threads (e.g.  the owner of
    oom_lock and kswapd-like threads) and serve as a trigger for actions
    (e.g.  turn on/off tracepoints, ask libvirt daemon to take a memory dump
    of stalling KVM guest for diagnostic purpose).
    
    This commit temporarily loses ability to report e.g.  OOM lockup due to
    unable to invoke the OOM killer due to !__GFP_FS allocation request.
    But asynchronous approach will be able to detect such situation and emit
    warning.  Thus, let's remove warn_alloc().
    
    [1] https://bugzilla.kernel.org/show_bug.cgi?id=192981
    [2] http://lkml.kernel.org/r/CAM_iQpWuPVGc2ky8M-9yukECtS+zKjiDasNymX7rMcBjBFyM_A@mail.gmail.com
    [3] commit db73ee0d46379922 ("mm, vmscan: do not loop on too_many_isolated for ever"))
    
    Link: http://lkml.kernel.org/r/1509017339-4802-1-git-send-email-penguin-kernel@I-love.SAKURA.ne.jp
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reported-by: Cong Wang <xiyou.wangcong@gmail.com>
    Reported-by: yuwang.yuwang <yuwang.yuwang@alibaba-inc.com>
    Reported-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: Petr Mladek <pmladek@suse.com>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ccbffb5d7dc88b7e7eecf504d8fa2a271f10ee16
Author: Yangtao Li <tiny.windzz@gmail.com>
Date:   Thu Nov 22 07:34:41 2018 -0500

    net: amd: add missing of_node_put()
    
    [ Upstream commit c44c749d3b6fdfca39002e7e48e03fe9f9fe37a3 ]
    
    of_find_node_by_path() acquires a reference to the node
    returned by it and that reference needs to be dropped by its caller.
    This place doesn't do that, so fix it.
    
    Signed-off-by: Yangtao Li <tiny.windzz@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63e307e81cffa11dbc8b513ee2b951ffa59fc61c
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu Nov 22 16:15:28 2018 +0800

    team: no need to do team_notify_peers or team_mcast_rejoin when disabling port
    
    [ Upstream commit 5ed9dc99107144f83b6c1bb52a69b58875baf540 ]
    
    team_notify_peers() will send ARP and NA to notify peers. team_mcast_rejoin()
    will send multicast join group message to notify peers. We should do this when
    enabling/changed to a new port. But it doesn't make sense to do it when a port
    is disabled.
    
    On the other hand, when we set mcast_rejoin_count to 2, and do a failover,
    team_port_disable() will increase mcast_rejoin.count_pending to 2 and then
    team_port_enable() will increase mcast_rejoin.count_pending to 4. We will send
    4 mcast rejoin messages at latest, which will make user confused. The same
    with notify_peers.count.
    
    Fix it by deleting team_notify_peers() and team_mcast_rejoin() in
    team_port_disable().
    
    Reported-by: Liang Li <liali@redhat.com>
    Fixes: fc423ff00df3a ("team: add peer notification")
    Fixes: 492b200efdd20 ("team: add support for sending multicast rejoins")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c1fbd4d2e9200f4b8a69d2b517e5708b0965a68
Author: Thomas Falcon <tlfalcon@linux.ibm.com>
Date:   Wed Nov 21 11:17:58 2018 -0600

    ibmvnic: Fix RX queue buffer cleanup
    
    [ Upstream commit b7cdec3d699db2e5985ad39de0f25d3b6111928e ]
    
    The wrong index is used when cleaning up RX buffer objects during release
    of RX queues. Update to use the correct index counter.
    
    Signed-off-by: Thomas Falcon <tlfalcon@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dab45f4d03f01e8d6612803518c225bf859f796c
Author: Tigran Mkrtchyan <tigran.mkrtchyan@desy.de>
Date:   Wed Nov 21 12:25:41 2018 +0100

    flexfiles: use per-mirror specified stateid for IO
    
    [ Upstream commit bb21ce0ad227b69ec0f83279297ee44232105d96 ]
    
    rfc8435 says:
    
      For tight coupling, ffds_stateid provides the stateid to be used by
      the client to access the file.
    
    However current implementation replaces per-mirror provided stateid with
    by open or lock stateid.
    
    Ensure that per-mirror stateid is used by ff_layout_write_prepare_v4 and
    nfs4_ff_layout_prepare_ds.
    
    Signed-off-by: Tigran Mkrtchyan <tigran.mkrtchyan@desy.de>
    Signed-off-by: Rick Macklem <rmacklem@uoguelph.ca>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84f49bb07f9d8f48891976229a6eaed9e1a4d6ca
Author: Pan Bian <bianpan2016@163.com>
Date:   Wed Nov 21 17:53:47 2018 +0800

    iommu/vt-d: Use memunmap to free memremap
    
    [ Upstream commit 829383e183728dec7ed9150b949cd6de64127809 ]
    
    memunmap() should be used to free the return of memremap(), not
    iounmap().
    
    Fixes: dfddb969edf0 ('iommu/vt-d: Switch from ioremap_cache to memremap')
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0decb8d7cbb225336e043a63e9a8c72498834fd
Author: Vincent Chen <vincentc@andestech.com>
Date:   Wed Nov 21 09:38:11 2018 +0800

    net: faraday: ftmac100: remove netif_running(netdev) check before disabling interrupts
    
    [ Upstream commit 426a593e641ebf0d9288f0a2fcab644a86820220 ]
    
    In the original ftmac100_interrupt(), the interrupts are only disabled when
    the condition "netif_running(netdev)" is true. However, this condition
    causes kerenl hang in the following case. When the user requests to
    disable the network device, kernel will clear the bit __LINK_STATE_START
    from the dev->state and then call the driver's ndo_stop function. Network
    device interrupts are not blocked during this process. If an interrupt
    occurs between clearing __LINK_STATE_START and stopping network device,
    kernel cannot disable the interrupts due to the condition
    "netif_running(netdev)" in the ISR. Hence, kernel will hang due to the
    continuous interruption of the network device.
    
    In order to solve the above problem, the interrupts of the network device
    should always be disabled in the ISR without being restricted by the
    condition "netif_running(netdev)".
    
    [V2]
    Remove unnecessary curly braces.
    
    Signed-off-by: Vincent Chen <vincentc@andestech.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7a6fd087a300dabc4dbde84b1f2d4d0ac5173e0
Author: Denis Bolotin <denis.bolotin@cavium.com>
Date:   Mon Nov 19 16:28:31 2018 +0200

    qed: Fix QM getters to always return a valid pq
    
    [ Upstream commit eb62cca9bee842e5b23bd0ddfb1f271ca95e8759 ]
    
    The getter callers doesn't know the valid Physical Queues (PQ) values.
    This patch makes sure that a valid PQ will always be returned.
    
    The patch consists of 3 fixes:
    
     - When qed_init_qm_get_idx_from_flags() receives a disabled flag, it
       returned PQ 0, which can potentially be another function's pq. Verify
       that flag is enabled, otherwise return default start_pq.
    
     - When qed_init_qm_get_idx_from_flags() receives an unknown flag, it
       returned NULL and could lead to a segmentation fault. Return default
       start_pq instead.
    
     - A modulo operation was added to MCOS/VFS PQ getters to make sure the
       PQ returned is in range of the required flag.
    
    Fixes: b5a9ee7cf3be ("qed: Revise QM cofiguration")
    Signed-off-by: Denis Bolotin <denis.bolotin@cavium.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9dded0ffdeb7fa10698d534978892b406b60c91e
Author: Denis Bolotin <denis.bolotin@cavium.com>
Date:   Mon Nov 19 16:28:30 2018 +0200

    qed: Fix bitmap_weight() check
    
    [ Upstream commit 276d43f0ae963312c0cd0e2b9a85fd11ac65dfcc ]
    
    Fix the condition which verifies that only one flag is set. The API
    bitmap_weight() should receive size in bits instead of bytes.
    
    Fixes: b5a9ee7cf3be ("qed: Revise QM cofiguration")
    Signed-off-by: Denis Bolotin <denis.bolotin@cavium.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b4c6714a19792f616fc03696594dafbb5a9b9a1
Author: Thor Thayer <thor.thayer@linux.intel.com>
Date:   Fri Nov 16 08:25:49 2018 -0600

    mtd: spi-nor: Fix Cadence QSPI page fault kernel panic
    
    [ Upstream commit a6a66f80c85e8e20573ca03fabf32445954a88d5 ]
    
    The current Cadence QSPI driver caused a kernel panic sporadically
    when writing to QSPI. The problem was caused by writing more bytes
    than needed because the QSPI operated on 4 bytes at a time.
    <snip>
    [   11.202044] Unable to handle kernel paging request at virtual address bffd3000
    [   11.209254] pgd = e463054d
    [   11.211948] [bffd3000] *pgd=2fffb811, *pte=00000000, *ppte=00000000
    [   11.218202] Internal error: Oops: 7 [#1] SMP ARM
    [   11.222797] Modules linked in:
    [   11.225844] CPU: 1 PID: 1317 Comm: systemd-hwdb Not tainted 4.17.7-d0c45cd44a8f
    [   11.235796] Hardware name: Altera SOCFPGA Arria10
    [   11.240487] PC is at __raw_writesl+0x70/0xd4
    [   11.244741] LR is at cqspi_write+0x1a0/0x2cc
    </snip>
    On a page boundary limit the number of bytes copied from the tx buffer
    to remain within the page.
    
    This patch uses a temporary buffer to hold the 4 bytes to write and then
    copies only the bytes required from the tx buffer.
    
    Reported-by: Adrian Amborzewicz <adrian.ambrozewicz@intel.com>
    Signed-off-by: Thor Thayer <thor.thayer@linux.intel.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16f2433ede2374060ccb79767fcd3a69cde2a22f
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Nov 14 05:35:20 2018 +0000

    HID: multitouch: Add pointstick support for Cirque Touchpad
    
    [ Upstream commit 12d43aacf9a74d0eb66fd0ea54ebeb79ca28940f ]
    
    Cirque Touchpad/Pointstick combo is similar to Alps devices, it requires
    MT_CLS_WIN_8_DUAL to expose its pointstick as a mouse.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60adf764a94f393d9ec56e05d976987d4d3cfdd3
Author: Olof Johansson <olof@lixom.net>
Date:   Fri Nov 16 19:43:27 2018 -0800

    mtd: rawnand: qcom: Namespace prefix some commands
    
    [ Upstream commit 33bf5519ae5dd356b182a94e3622f42860274a38 ]
    
    PAGE_READ is used by RISC-V arch code included through mm headers,
    and it makes sense to bring in a prefix on these in the driver.
    
    drivers/mtd/nand/raw/qcom_nandc.c:153: warning: "PAGE_READ" redefined
     #define PAGE_READ   0x2
    In file included from include/linux/memremap.h:7,
                     from include/linux/mm.h:27,
                     from include/linux/scatterlist.h:8,
                     from include/linux/dma-mapping.h:11,
                     from drivers/mtd/nand/raw/qcom_nandc.c:17:
    arch/riscv/include/asm/pgtable.h:48: note: this is the location of the previous definition
    
    Caught by riscv allmodconfig.
    
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Reviewed-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c65ce92019b50861cd0b1763da8ea8217d6a420
Author: Bartosz Golaszewski <brgl@bgdev.pl>
Date:   Thu Nov 8 17:52:53 2018 +0100

    gpio: mockup: fix indicated direction
    
    [ Upstream commit bff466bac59994cfcceabe4d0be5fdc1c20cd5b8 ]
    
    Commit 3edfb7bd76bd ("gpiolib: Show correct direction from the
    beginning") fixed an existing issue but broke libgpiod tests by
    changing the default direction of dummy lines to output.
    
    We don't break user-space so make gpio-mockup behave as before.
    
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 934f4965b46b99885e31b89fbf3240cb034c0959
Author: Aya Levin <ayal@mellanox.com>
Date:   Thu Nov 15 18:05:15 2018 +0200

    net/mlx4: Fix UBSAN warning of signed integer overflow
    
    [ Upstream commit a463146e67c848cbab5ce706d6528281b7cded08 ]
    
    UBSAN: Undefined behavior in
    drivers/net/ethernet/mellanox/mlx4/resource_tracker.c:626:29
    signed integer overflow: 1802201963 + 1802201963 cannot be represented
    in type 'int'
    
    The union of res_reserved and res_port_rsvd[MLX4_MAX_PORTS] monitors
    granting of reserved resources. The grant operation is calculated and
    protected, thus both members of the union cannot be negative.  Changed
    type of res_reserved and of res_port_rsvd[MLX4_MAX_PORTS] from signed
    int to unsigned int, allowing large value.
    
    Fixes: 5a0d0a6161ae ("mlx4: Structures and init/teardown for VF resource quotas")
    Signed-off-by: Aya Levin <ayal@mellanox.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6e5d3dda0ea79e4c9a52ed2031ed832713f3e99
Author: Tariq Toukan <tariqt@mellanox.com>
Date:   Thu Nov 15 18:05:14 2018 +0200

    net/mlx4_core: Fix uninitialized variable compilation warning
    
    [ Upstream commit 3ea7e7ea53c9f6ee41cb69a29c375fe9dd9a56a7 ]
    
    Initialize the uid variable to zero to avoid the compilation warning.
    
    Fixes: 7a89399ffad7 ("net/mlx4: Add mlx4_bitmap zone allocator")
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 471b2b9c525424e5213b4d6084ed1d12758ce8c8
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Thu Nov 15 18:05:13 2018 +0200

    net/mlx4_core: Zero out lkey field in SW2HW_MPT fw command
    
    [ Upstream commit bd85fbc2038a1bbe84990b23ff69b6fc81a32b2c ]
    
    When re-registering a user mr, the mpt information for the
    existing mr when running SRIOV is obtained via the QUERY_MPT
    fw command. The returned information includes the mpt's lkey.
    
    This retrieved mpt information is used to move the mpt back
    to hardware ownership in the rereg flow (via the SW2HW_MPT
    fw command when running SRIOV).
    
    The fw API spec states that for SW2HW_MPT, the lkey field
    must be zero. Any ConnectX-3 PF driver which checks for strict spec
    adherence will return failure for SW2HW_MPT if the lkey field is not
    zero (although the fw in practice ignores this field for SW2HW_MPT).
    
    Thus, in order to conform to the fw API spec, set the lkey field to zero
    before invoking SW2HW_MPT when running SRIOV.
    
    Fixes: e630664c8383 ("mlx4_core: Add helper functions to support MR re-registration")
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65d9e9821b86155dc810ff08c12cc29c7fabbca9
Author: Shen Jing <jingx.shen@intel.com>
Date:   Thu Nov 1 15:35:17 2018 +0530

    Revert "usb: gadget: ffs: Fix BUG when userland exits with submitted AIO transfers"
    
    [ Upstream commit a9c859033f6ec772f8e3228c343bb1321584ae0e ]
    
    This reverts commit b4194da3f9087dd38d91b40f9bec42d59ce589a8
    since it causes list corruption followed by kernel panic:
    
    Workqueue: adb ffs_aio_cancel_worker
    RIP: 0010:__list_add_valid+0x4d/0x70
    Call Trace:
    insert_work+0x47/0xb0
    __queue_work+0xf6/0x400
    queue_work_on+0x65/0x70
    dwc3_gadget_giveback+0x44/0x50 [dwc3]
    dwc3_gadget_ep_dequeue+0x83/0x2d0 [dwc3]
    ? finish_wait+0x80/0x80
    usb_ep_dequeue+0x1e/0x90
    process_one_work+0x18c/0x3b0
    worker_thread+0x3c/0x390
    ? process_one_work+0x3b0/0x3b0
    kthread+0x11e/0x140
    ? kthread_create_worker_on_cpu+0x70/0x70
    ret_from_fork+0x3a/0x50
    
    This issue is seen with warm reboot stability testing.
    
    Signed-off-by: Shen Jing <jingx.shen@intel.com>
    Signed-off-by: Saranya Gopal <saranya.gopal@intel.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93663e617b8fdcaceb6f407af6e494df2d5c7067
Author: Denis Bolotin <denis.bolotin@cavium.com>
Date:   Mon Nov 12 12:50:23 2018 +0200

    qed: Fix reading wrong value in loop condition
    
    [ Upstream commit ed4eac20dcffdad47709422e0cb925981b056668 ]
    
    The value of "sb_index" is written by the hardware. Reading its value and
    writing it to "index" must finish before checking the loop condition.
    
    Signed-off-by: Denis Bolotin <denis.bolotin@cavium.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f1c847db352a87f9974aa1869ca3e6f26b621f7
Author: Denis Bolotin <denis.bolotin@cavium.com>
Date:   Mon Nov 12 12:50:20 2018 +0200

    qed: Fix PTT leak in qed_drain()
    
    [ Upstream commit 9aaa4e8ba12972d674caeefbc5f88d83235dd697 ]
    
    Release PTT before entering error flow.
    
    Signed-off-by: Denis Bolotin <denis.bolotin@cavium.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd358f42a60d85798b6d4715cd936b438fa2cc3e
Author: Sudarsana Reddy Kalluru <sudarsana.kalluru@cavium.com>
Date:   Sun Nov 11 18:27:34 2018 -0800

    bnx2x: Assign unique DMAE channel number for FW DMAE transactions.
    
    [ Upstream commit 77e461d14ed141253573eeeb4d34eccc51e38328 ]
    
    Driver assigns DMAE channel 0 for FW as part of START_RAMROD command. FW
    uses this channel for DMAE operations (e.g., TIME_SYNC implementation).
    Driver also uses the same channel 0 for DMAE operations for some of the PFs
    (e.g., PF0 on Port0). This could lead to concurrent access to the DMAE
    channel by FW and driver which is not legal. Hence need to assign unique
    DMAE id for FW.
    Currently following DMAE channels are used by the clients,
      MFW - OCBB/OCSD functionality uses DMAE channel 14/15
      Driver 0-3 and 8-11 (for PF dmae operations)
             4 and 12 (for stats requests)
    Assigning unique dmae_id '13' to the FW.
    
    Changes from previous version:
    ------------------------------
    v2: Incorporated the review comments.
    
    Signed-off-by: Sudarsana Reddy Kalluru <Sudarsana.Kalluru@cavium.com>
    Signed-off-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41cb057690134a335b689be7e8db6d46db54a8ed
Author: Filippo Sironi <sironi@amazon.de>
Date:   Mon Nov 12 12:26:30 2018 +0000

    amd/iommu: Fix Guest Virtual APIC Log Tail Address Register
    
    [ Upstream commit ab99be4683d9db33b100497d463274ebd23bd67e ]
    
    This register should have been programmed with the physical address
    of the memory location containing the shadow tail pointer for
    the guest virtual APIC log instead of the base address.
    
    Fixes: 8bda0cfbdc1a  ('iommu/amd: Detect and initialize guest vAPIC log')
    Signed-off-by: Filippo Sironi <sironi@amazon.de>
    Signed-off-by: Wei Wang <wawei@amazon.de>
    Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2761d3237145412c1405b204f152b796bf9df4a2
Author: Sven Eckelmann <sven@narfation.org>
Date:   Wed Nov 7 23:09:12 2018 +0100

    batman-adv: Expand merged fragment buffer for full packet
    
    [ Upstream commit d7d8bbb40a5b1f682ee6589e212934f4c6b8ad60 ]
    
    The complete size ("total_size") of the fragmented packet is stored in the
    fragment header and in the size of the fragment chain. When the fragments
    are ready for merge, the skbuff's tail of the first fragment is expanded to
    have enough room after the data pointer for at least total_size. This means
    that it gets expanded by total_size - first_skb->len.
    
    But this is ignoring the fact that after expanding the buffer, the fragment
    header is pulled by from this buffer. Assuming that the tailroom of the
    buffer was already 0, the buffer after the data pointer of the skbuff is
    now only total_size - len(fragment_header) large. When the merge function
    is then processing the remaining fragments, the code to copy the data over
    to the merged skbuff will cause an skb_over_panic when it tries to actually
    put enough data to fill the total_size bytes of the packet.
    
    The size of the skb_pull must therefore also be taken into account when the
    buffer's tailroom is expanded.
    
    Fixes: 610bfc6bc99b ("batman-adv: Receive fragmented packets and merge")
    Reported-by: Martin Weinelt <martin@darmstadt.freifunk.net>
    Co-authored-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94f748fd4ed3ac4c90990413681e703444c26225
Author: Sven Eckelmann <sven@narfation.org>
Date:   Tue Oct 30 12:17:10 2018 +0100

    batman-adv: Use explicit tvlv padding for ELP packets
    
    [ Upstream commit f4156f9656feac21f4de712fac94fae964c5d402 ]
    
    The announcement messages of batman-adv COMPAT_VERSION 15 have the
    possibility to announce additional information via a dynamic TVLV part.
    This part is optional for the ELP packets and currently not parsed by the
    Linux implementation. Still out-of-tree versions are using it to transport
    things like neighbor hashes to optimize the rebroadcast behavior.
    
    Since the ELP broadcast packets are smaller than the minimal ethernet
    packet, it often has to be padded. This is often done (as specified in
    RFC894) with octets of zero and thus work perfectly fine with the TVLV
    part (making it a zero length and thus empty). But not all ethernet
    compatible hardware seems to follow this advice. To avoid ambiguous
    situations when parsing the TVLV header, just force the 4 bytes (TVLV
    length + padding) after the required ELP header to zero.
    
    Fixes: d6f94d91f766 ("batman-adv: ELP - adding basic infrastructure")
    Reported-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1270af9b1a0d3ba66ac3425771767e677d2fd0d
Author: Benson Leung <bleung@chromium.org>
Date:   Thu Nov 8 15:59:21 2018 -0800

    HID: input: Ignore battery reported by Symbol DS4308
    
    [ Upstream commit 0fd791841a6d67af1155a9c3de54dea51220721e ]
    
    The Motorola/Zebra Symbol DS4308-HD is a handheld USB barcode scanner
    which does not have a battery, but reports one anyway that always has
    capacity 2.
    
    Let's apply the IGNORE quirk to prevent it from being treated like a
    power supply so that userspaces don't get confused that this
    accessory is almost out of power and warn the user that they need to charge
    their wired barcode scanner.
    
    Reported here: https://bugs.chromium.org/p/chromium/issues/detail?id=804720
    
    Signed-off-by: Benson Leung <bleung@chromium.org>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58e0bc43507120ce1185268f588b191c2f5f4df4
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Oct 19 13:58:01 2018 +0100

    test_firmware: fix error return getting clobbered
    
    [ Upstream commit 8bb0a88600f0267cfcc245d34f8c4abe8c282713 ]
    
    In the case where eq->fw->size > PAGE_SIZE the error return rc
    is being set to EINVAL however this is being overwritten to
    rc = req->fw->size because the error exit path via label 'out' is
    not being taken.  Fix this by adding the jump to the error exit
    path 'out'.
    
    Detected by CoverityScan, CID#1453465 ("Unused value")
    
    Fixes: c92316bf8e94 ("test_firmware: add batched firmware tests")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6b578b1b4a7c56b469e16e6afd3ec478e1872c3
Author: Fabrizio Castro <fabrizio.castro@bp.renesas.com>
Date:   Mon Sep 10 11:43:13 2018 +0100

    can: rcar_can: Fix erroneous registration
    
    [ Upstream commit 68c8d209cd4337da4fa04c672f0b62bb735969bc ]
    
    Assigning 2 to "renesas,can-clock-select" tricks the driver into
    registering the CAN interface, even though we don't want that.
    This patch improves one of the checks to prevent that from happening.
    
    Fixes: 862e2b6af9413b43 ("can: rcar_can: support all input clocks")
    Signed-off-by: Fabrizio Castro <fabrizio.castro@bp.renesas.com>
    Signed-off-by: Chris Paterson <Chris.Paterson2@renesas.com>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b65fa7b581f8a50ef147055006a7aa28ddb1086d
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Nov 7 14:18:50 2018 +0100

    iommu/ipmmu-vmsa: Fix crash on early domain free
    
    [ Upstream commit e5b78f2e349eef5d4fca5dc1cf5a3b4b2cc27abd ]
    
    If iommu_ops.add_device() fails, iommu_ops.domain_free() is still
    called, leading to a crash, as the domain was only partially
    initialized:
    
        ipmmu-vmsa e67b0000.mmu: Cannot accommodate DMA translation for IOMMU page tables
        sata_rcar ee300000.sata: Unable to initialize IPMMU context
        iommu: Failed to add device ee300000.sata to group 0: -22
        Unable to handle kernel NULL pointer dereference at virtual address 0000000000000038
        ...
        Call trace:
         ipmmu_domain_free+0x1c/0xa0
         iommu_group_release+0x48/0x68
         kobject_put+0x74/0xe8
         kobject_del.part.0+0x3c/0x50
         kobject_put+0x60/0xe8
         iommu_group_get_for_dev+0xa8/0x1f0
         ipmmu_add_device+0x1c/0x40
         of_iommu_configure+0x118/0x190
    
    Fix this by checking if the domain's context already exists, before
    trying to destroy it.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Fixes: d25a2a16f0889 ('iommu: Add driver for Renesas VMSA-compatible IPMMU')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fa55f1d1859a6b0d2e6c1606b6d8fa1a9ef63d2
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Fri Oct 26 12:50:39 2018 +0200

    brcmutil: really fix decoding channel info for 160 MHz bandwidth
    
    [ Upstream commit 3401d42c7ea2d064d15c66698ff8eb96553179ce ]
    
    Previous commit /adding/ support for 160 MHz chanspecs was incomplete.
    It didn't set bandwidth info and didn't extract control channel info. As
    the result it was also using uninitialized "sb" var.
    
    This change has been tested for two chanspecs found to be reported by
    some devices/firmwares:
    1) 60/160 (0xee32)
       Before: chnum:50 control_ch_num:36
        After: chnum:50 control_ch_num:60
    2) 120/160 (0xed72)
       Before: chnum:114 control_ch_num:100
        After: chnum:114 control_ch_num:120
    
    Fixes: 330994e8e8ec ("brcmfmac: fix for proper support of 160MHz bandwidth")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df11500b9dbf1bb3dd752f11be62a1cad22ca16d
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Mon Nov 5 10:18:58 2018 +0800

    iommu/vt-d: Fix NULL pointer dereference in prq_event_thread()
    
    [ Upstream commit 19ed3e2dd8549c1a34914e8dad01b64e7837645a ]
    
    When handling page request without pasid event, go to "no_pasid"
    branch instead of "bad_req". Otherwise, a NULL pointer deference
    will happen there.
    
    Cc: Ashok Raj <ashok.raj@intel.com>
    Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Cc: Sohil Mehta <sohil.mehta@intel.com>
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Fixes: a222a7f0bb6c9 'iommu/vt-d: Implement page request handling'
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcdfccfd8dee5f024b618a3ec4df17fab1296658
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Tue Oct 9 07:49:49 2018 -0400

    media: omap3isp: Unregister media device as first
    
    [ Upstream commit 30efae3d789cd0714ef795545a46749236e29558 ]
    
    While there are issues related to object lifetime management, unregister the
    media device first when the driver is being unbound. This is slightly
    safer.
    
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
