commit 87dc7c99c72e49461fba277c81871525700821fb
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Feb 6 06:52:56 2015 -0800

    Linux 3.10.68

commit e2d881763200eb6e9feed35d807b8c78d66fac90
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Jan 30 22:17:31 2015 +0000

    target: Drop arbitrary maximum I/O size limit
    
    commit 046ba64285a4389ae5e9a7dfa253c6bff3d7c341 upstream.
    
    This patch drops the arbitrary maximum I/O size limit in sbc_parse_cdb(),
    which currently for fabric_max_sectors is hardcoded to 8192 (4 MB for 512
    byte sector devices), and for hw_max_sectors is a backend driver dependent
    value.
    
    This limit is problematic because Linux initiators have only recently
    started to honor block limits MAXIMUM TRANSFER LENGTH, and other non-Linux
    based initiators (eg: MSFT Fibre Channel) can also generate I/Os larger
    than 4 MB in size.
    
    Currently when this happens, the following message will appear on the
    target resulting in I/Os being returned with non recoverable status:
    
      SCSI OP 28h with too big sectors 16384 exceeds fabric_max_sectors: 8192
    
    Instead, drop both [fabric,hw]_max_sector checks in sbc_parse_cdb(),
    and convert the existing hw_max_sectors into a purely informational
    attribute used to represent the granuality that backend driver and/or
    subsystem code is splitting I/Os upon.
    
    Also, update FILEIO with an explicit FD_MAX_BYTES check in fd_execute_rw()
    to deal with the one special iovec limitiation case.
    
    v2 changes:
      - Drop hw_max_sectors check in sbc_parse_cdb()
    
    Reported-by: Lance Gropper <lance.gropper@qosserver.com>
    Reported-by: Stefan Priebe <s.priebe@profihost.ag>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3ecefb6bf2ce3d6fbaa1ca0469dcd3f53fce2f4
Author: Sagi Grimberg <sagig@mellanox.com>
Date:   Fri Jan 30 22:17:30 2015 +0000

    iser-target: Fix implicit termination of connections
    
    commit b02efbfc9a051b41e71fe8f94ddf967260e024a6 upstream.
    
    In situations such as bond failover, The new session establishment
    implicitly invokes the termination of the old connection.
    
    So, we don't want to wait for the old connection wait_conn to completely
    terminate before we accept the new connection and post a login response.
    
    The solution is to deffer the comp_wait completion and the conn_put to
    a work so wait_conn will effectively be non-blocking (flush errors are
    assumed to come very fast).
    
    We allocate isert_release_wq with WQ_UNBOUND and WQ_UNBOUND_MAX_ACTIVE
    to spread the concurrency of release works.
    
    Reported-by: Slava Shwartsman <valyushash@gmail.com>
    Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b80e6c5ae062134a0a857d831388d73a52cecbd5
Author: Sagi Grimberg <sagig@mellanox.com>
Date:   Fri Jan 30 22:17:29 2015 +0000

    iser-target: Handle ADDR_CHANGE event for listener cm_id
    
    commit ca6c1d82d12d8013fb75ce015900d62b9754623c upstream.
    
    The np listener cm_id will also get ADDR_CHANGE event
    upcall (in case it is bound to a specific IP). Handle
    it correctly by creating a new cm_id and implicitly
    destroy the old one.
    
    Since this is the second event a listener np cm_id may
    encounter, we move the np cm_id event handling to a
    routine.
    
    Squashed:
    
    iser-target: Move cma_id setup to a function
    
    Reported-by: Slava Shwartsman <valyushash@gmail.com>
    Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b524a8828bad59410a5d2249da825cb050cf7d69
Author: Sagi Grimberg <sagig@mellanox.com>
Date:   Fri Jan 30 22:17:28 2015 +0000

    iser-target: Fix connected_handler + teardown flow race
    
    commit 19e2090fb246ca21b3e569ead51a6a7a1748eadd upstream.
    
    Take isert_conn pointer from cm_id->qp->qp_context. This
    will allow us to know that the cm_id context is always
    the network portal. This will make the cm_id event check
    (connection or network portal) more reliable.
    
    In order to avoid a NULL dereference in cma_id->qp->qp_context
    we destroy the qp after we destroy the cm_id (and make the
    dereference safe). session stablishment/teardown sequences
    can happen in parallel, we should take into account that
    connected_handler might race with connection teardown flow.
    
    Also, protect isert_conn->conn_device->active_qps decrement
    within the error patch during QP creation failure and the
    normal teardown path in isert_connect_release().
    
    Squashed:
    
    iser-target: Decrement completion context active_qps in error flow
    
    Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 022ff2f59792d927bc55e863995e7240d6f12184
Author: Sagi Grimberg <sagig@mellanox.com>
Date:   Fri Jan 30 22:17:27 2015 +0000

    iser-target: Parallelize CM connection establishment
    
    commit 2371e5da8cfe91443339b54444dec6254fdd6dfc upstream.
    
    There is no point in accepting a new CM request only
    when we are completely done with the last iscsi login.
    Instead we accept immediately, this will also cause the
    CM connection to reach connected state and the initiator
    is allowed to send the first login. We mark that we got
    the initial login and let iscsi layer pick it up when it
    gets there.
    
    This reduces the parallel login sequence by a factor of
    more then 4 (and more for multi-login) and also prevents
    the initiator (who does all logins in parallel) from
    giving up on login timeout expiration.
    
    In order to support multiple login requests sequence (CHAP)
    we call isert_rx_login_req from isert_rx_completion insead
    of letting isert_get_login_rx call it.
    
    Squashed:
    
    iser-target: Use kref_get_unless_zero in connected_handler
    iser-target: Acquire conn_mutex when changing connection state
    iser-target: Reject connect request in failure path
    
    Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc0672f1f216c4f13e90854ec8e37b2780e9b8db
Author: Sagi Grimberg <sagig@mellanox.com>
Date:   Fri Jan 30 22:17:26 2015 +0000

    iser-target: Fix flush + disconnect completion handling
    
    commit 128e9cc84566a84146baea2335b3824288eed817 upstream.
    
    ISER_CONN_UP state is not sufficient to know if
    we should wait for completion of flush errors and
    disconnected_handler event.
    
    Instead, split it to 2 states:
    - ISER_CONN_UP: Got to CM connected phase, This state
    indicates that we need to wait for a CM disconnect
    event before going to teardown.
    
    - ISER_CONN_FULL_FEATURE: Got to full feature phase
    after we posted login response, This state indicates
    that we posted recv buffers and we need to wait for
    flush completions before going to teardown.
    
    Also avoid deffering disconnected handler to a work,
    and handle it within disconnected handler.
    More work here is needed to handle DEVICE_REMOVAL event
    correctly (cleanup all resources).
    
    Squashed:
    
    iser-target: Don't deffer disconnected handler to a work
    
    Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 839eac57ebaec95f1a46c5ec0a6597bde7718ad7
Author: Sagi Grimberg <sagig@mellanox.com>
Date:   Fri Jan 30 22:17:25 2015 +0000

    iscsi,iser-target: Initiate termination only once
    
    commit 954f23722b5753305be490330cf2680b7a25f4a3 upstream.
    
    Since commit 0fc4ea701fcf ("Target/iser: Don't put isert_conn inside
    disconnected handler") we put the conn kref in isert_wait_conn, so we
    need .wait_conn to be invoked also in the error path.
    
    Introduce call to isert_conn_terminate (called under lock)
    which transitions the connection state to TERMINATING and calls
    rdma_disconnect. If the state is already teminating, just bail
    out back (temination started).
    
    Also, make sure to destroy the connection when getting a connect
    error event if didn't get to connected (state UP). Same for the
    handling of REJECTED and UNREACHABLE cma events.
    
    Squashed:
    
    iscsi-target: Add call to wait_conn in establishment error flow
    
    Reported-by: Slava Shwartsman <valyushash@gmail.com>
    Signed-off-by: Sagi Grimberg <sagig@mellanox.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92c6741bd6a1c5b0200c4e5695866c3dff0f8e40
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Jan 30 22:17:24 2015 +0000

    vhost-scsi: Add missing virtio-scsi -> TCM attribute conversion
    
    commit 46243860806bdc2756f3ce8ac86b4d7c616bcd6c upstream.
    
    While looking at hch's recent conversion to drop the MSG_*_TAG
    definitions, I noticed a long standing bug in vhost-scsi where
    the VIRTIO_SCSI_S_* attribute definitions where incorrectly
    being passed directly into target_submit_cmd_map_sgls().
    
    This patch adds the missing virtio-scsi to TCM/SAM task attribute
    conversion.
    
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ed763fc279b669a1b8389164ce9bbc28338f7a8
Author: Hannes Reinecke <hare@suse.de>
Date:   Fri Jan 30 22:17:23 2015 +0000

    tcm_loop: Fix wrong I_T nexus association
    
    commit 506787a2c7daed45f0a213674ca706cbc83a9089 upstream.
    
    tcm_loop has the I_T nexus associated with the HBA. This causes
    commands to become misdirected if the HBA has more than one
    target portal group; any command is then being sent to the
    first target portal group instead of the correct one.
    
    The nexus needs to be associated with the target portal group
    instead.
    
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ce3a8612dd01acab5c60ebf51daf85b0001a0c5
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Jan 30 22:17:22 2015 +0000

    vhost-scsi: Take configfs group dependency during VHOST_SCSI_SET_ENDPOINT
    
    commit ab8edab132829b26dd13db6caca3c242cce35dc1 upstream.
    
    This patch addresses a bug where individual vhost-scsi configfs endpoint
    groups can be removed from below while active exports to QEMU userspace
    still exist, resulting in an OOPs.
    
    It adds a configfs_depend_item() in vhost_scsi_set_endpoint() to obtain
    an explicit dependency on se_tpg->tpg_group in order to prevent individual
    vhost-scsi WWPN endpoints from being released via normal configfs methods
    while an QEMU ioctl reference still exists.
    
    Also, add matching configfs_undepend_item() in vhost_scsi_clear_endpoint()
    to release the dependency, once QEMU's reference to the individual group
    at /sys/kernel/config/target/vhost/$WWPN/$TPGT is released.
    
    (Fix up vhost_scsi_clear_endpoint() error path - DanC)
    
    Cc: Michael S. Tsirkin <mst@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Stefan Hajnoczi <stefanha@redhat.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2da3c240dc6e510b11a34974c829e8090a65202
Author: Or Gerlitz <ogerlitz@mellanox.com>
Date:   Fri Jan 30 22:17:21 2015 +0000

    ib_isert: Add max_send_sge=2 minimum for control PDU responses
    
    commit f57915cfa5b2b14c1cffa2e83c034f55e3f0e70d upstream.
    
    This patch adds a max_send_sge=2 minimum in isert_conn_setup_qp()
    to ensure outgoing control PDU responses with tx_desc->num_sge=2
    are able to function correctly.
    
    This addresses a bug with RDMA hardware using dev_attr.max_sge=3,
    that in the original code with the ConnectX-2 work-around would
    result in isert_conn->max_sge=1 being negotiated.
    
    Originally reported by Chris with ocrdma driver.
    
    Reported-by: Chris Moore <Chris.Moore@emulex.com>
    Tested-by: Chris Moore <Chris.Moore@emulex.com>
    Signed-off-by: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c50ad63aabedaa98bc9b4d57e38fa8e2d22938a3
Author: Chris Moore <Chris.Moore@Emulex.Com>
Date:   Fri Jan 30 22:17:20 2015 +0000

    IB/isert: Adjust CQ size to HW limits
    
    commit b1a5ad006b34ded9dc7ec64988deba1b3ecad367 upstream.
    
    isert has an issue of trying to create a CQ with more CQEs than are
    supported by the hardware, that currently results in failures during
    isert_device creation during first session login.
    
    This is the isert version of the patch that Minh Tran submitted for
    iser, and is simple a workaround required to function with existing
    ocrdma hardware.
    
    Signed-off-by: Chris Moore <chris.moore@emulex.com>
    Reviewied-by: Sagi Grimberg <sagig@mellanox.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85be16bad779a187bedc4292f2adc54863b4375b
Author: Tejun Heo <tj@kernel.org>
Date:   Fri Jan 16 14:21:16 2015 -0500

    workqueue: fix subtle pool management issue which can stall whole worker_pool
    
    commit 29187a9eeaf362d8422e62e17a22a6e115277a49 upstream.
    
    A worker_pool's forward progress is guaranteed by the fact that the
    last idle worker assumes the manager role to create more workers and
    summon the rescuers if creating workers doesn't succeed in timely
    manner before proceeding to execute work items.
    
    This manager role is implemented in manage_workers(), which indicates
    whether the worker may proceed to work item execution with its return
    value.  This is necessary because multiple workers may contend for the
    manager role, and, if there already is a manager, others should
    proceed to work item execution.
    
    Unfortunately, the function also indicates that the worker may proceed
    to work item execution if need_to_create_worker() is false at the head
    of the function.  need_to_create_worker() tests the following
    conditions.
    
            pending work items && !nr_running && !nr_idle
    
    The first and third conditions are protected by pool->lock and thus
    won't change while holding pool->lock; however, nr_running can change
    asynchronously as other workers block and resume and while it's likely
    to be zero, as someone woke this worker up in the first place, some
    other workers could have become runnable inbetween making it non-zero.
    
    If this happens, manage_worker() could return false even with zero
    nr_idle making the worker, the last idle one, proceed to execute work
    items.  If then all workers of the pool end up blocking on a resource
    which can only be released by a work item which is pending on that
    pool, the whole pool can deadlock as there's no one to create more
    workers or summon the rescuers.
    
    This patch fixes the problem by removing the early exit condition from
    maybe_create_worker() and making manage_workers() return false iff
    there's already another manager, which ensures that the last worker
    doesn't start executing work items.
    
    We can leave the early exit condition alone and just ignore the return
    value but the only reason it was put there is because the
    manage_workers() used to perform both creations and destructions of
    workers and thus the function may be invoked while the pool is trying
    to reduce the number of workers.  Now that manage_workers() is called
    only when more workers are needed, the only case this early exit
    condition is triggered is rare race conditions rendering it pointless.
    
    Tested with simulated workload and modified workqueue code which
    trigger the pool deadlock reliably without this patch.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Eric Sandeen <sandeen@sandeen.net>
    Link: http://lkml.kernel.org/g/54B019F4.8030009@sandeen.net
    Cc: Dave Chinner <david@fromorbit.com>
    Cc: Lai Jiangshan <laijs@cn.fujitsu.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60e353b14ad68daaef8685cc324fa45501615bee
Author: Martin Kaiser <lists@kaiser.cx>
Date:   Fri Jan 30 15:01:29 2015 +0100

    gpio: squelch a compiler warning
    
    drivers/gpio/gpiolib-of.c: In function 'of_gpiochip_find_and_xlate':
    drivers/gpio/gpiolib-of.c:51:21: warning: assignment makes integer from
    pointer without a cast [enabled by default]
       gg_data->out_gpio = ERR_PTR(ret);
                         ^
    this was introduced in d1c3449160df60fac4abb56f0ba0a3784305e43e
    
    the upstream kernel changed the type of out_gpio from int to struct gpio_desc *
    as part of a larger refactoring that wasn't backported
    
    Signed-off-by: Martin Kaiser <martin@kaiser.cx>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45006972b8570cbb7c083169f0f50afb05b9011d
Author: Madper Xie <cxie@redhat.com>
Date:   Fri Nov 29 15:58:57 2013 +0800

    efi-pstore: Make efi-pstore return a unique id
    
    commit fdeadb43fdf1e7d5698c027b555c389174548e5a upstream.
    
    Pstore fs expects that backends provide a unique id which could avoid
    pstore making entries as duplication or denominating entries the same
    name. So I combine the timestamp, part and count into id.
    
    Signed-off-by: Madper Xie <cxie@redhat.com>
    Cc: Seiji Aguchi <seiji.aguchi@hds.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>
    [hkp: Backported to 3.10: adjust context]
    Signed-off-by: Hu Keping <hukeping@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 681f57171b9614a11695facba99ed299f7f33dc7
Author: Rob Herring <rob.herring@calxeda.com>
Date:   Mon Apr 8 20:23:33 2013 -0500

    pstore/ram: avoid atomic accesses for ioremapped regions
    
    commit 0405a5cec3406f19e69da07c8111a6bf1088ac29 upstream.
    
    For persistent RAM outside of main memory, the memory may have limitations
    on supported accesses. For internal RAM on highbank platform exclusive
    accesses are not supported and will hang the system. So atomic_cmpxchg
    cannot be used. This commit uses spinlock protection for buffer size and
    start updates on ioremapped regions instead.
    
    Signed-off-by: Rob Herring <rob.herring@calxeda.com>
    Acked-by: Anton Vorontsov <anton@enomsg.org>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    [hkp: Backported to 3.10: adjust context]
    Signed-off-by: HuKeping <hukeping@huawei.com>

commit 979d65e705225f8780c09ceb9b4cbc2cbdc36c6e
Author: Liu ShuoX <shuox.liu@intel.com>
Date:   Mon Mar 17 13:57:49 2014 -0700

    pstore: Fix NULL pointer fault if get NULL prz in ramoops_get_next_prz
    
    commit b0aa931fb84431394d995472d0af2a6c2b61064d upstream.
    
    ramoops_get_next_prz get the prz according the paramters. If it get a
    uninitialized prz, access its members by following persistent_ram_old_size(prz)
    will cause a NULL pointer crash.
    Ex: if ftrace_size is 0, fprz will be NULL.
    
    Fix it by return NULL in advance.
    
    Signed-off-by: Liu ShuoX <shuox.liu@intel.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Cc: HuKeping <hukeping@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca889efda7bb061eb29716ba34a3271c298eb948
Author: Liu ShuoX <shuox.liu@intel.com>
Date:   Mon Mar 17 11:24:49 2014 +1100

    pstore: skip zero size persistent ram buffer in traverse
    
    commit aa9a4a1edfbd3d223af01db833da2f07850bc655 upstream.
    
    In ramoops_pstore_read, a valid prz pointer with zero size buffer will
    break traverse of all persistent ram buffers.  The latter buffer might be
    lost.
    
    Signed-off-by: Liu ShuoX <shuox.liu@intel.com>
    Cc: "Zhang, Yanmin" <yanmin_zhang@linux.intel.com>
    Cc: Colin Cross <ccross@android.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Cc: HuKeping <hukeping@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93ad866ac560221de44101e36837e40942c75226
Author: Liu ShuoX <shuox.liu@intel.com>
Date:   Mon Mar 17 11:24:49 2014 +1100

    pstore: clarify clearing of _read_cnt in ramoops_context
    
    commit 57fd835385a043577457a385f28c08be693991bf upstream.
    
    *_read_cnt in ramoops_context need to be cleared during pstore ->open to
    support mutli times getting the records.  The patch added missed
    ftrace_read_cnt clearing and removed duplicate clearing in ramoops_probe.
    
    Signed-off-by: Liu ShuoX <shuox.liu@intel.com>
    Cc: "Zhang, Yanmin" <yanmin_zhang@linux.intel.com>
    Cc: Colin Cross <ccross@android.com>
    Cc: Kees Cook <keescook@chromium.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Cc: HuKeping <hukeping@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6dd0c8127040899f815c2ed1667eb1b0b684f51
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Aug 14 10:55:49 2013 -0700

    pstore: d_alloc_name() doesn't return an ERR_PTR
    
    commit c39524e6744284452ef45480d3153bec28960c32 upstream.
    
    d_alloc_name() returns NULL on error.  Also I changed the error code
    from -ENOSPC to -ENOMEM to reflect that we were short on RAM not disk
    space.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Cc: HuKeping <hukeping@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 841eb01f53cdb78d840dc4000f103fa7dd4228d2
Author: Aruna Balakrishnaiah <aruna@linux.vnet.ibm.com>
Date:   Tue Jun 25 14:33:56 2013 +0530

    pstore: Fail to unlink if a driver has not defined pstore_erase
    
    commit bf2883339a33b7544b92ea465b90c3de55082032 upstream.
    
    pstore_erase is used to erase the record from the persistent store.
    So if a driver has not defined pstore_erase callback return
    -EPERM instead of unlinking a file as deleting the file without
    erasing its record in persistent store will give a wrong impression
    to customers.
    
    Signed-off-by: Aruna Balakrishnaiah <aruna@linux.vnet.ibm.com>
    Acked-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Cc: HuKeping <hukeping@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b12835bdb935057b69b0b9059226f554a926415e
Author: Steven Capper <steve.capper@linaro.org>
Date:   Fri Jul 18 16:16:15 2014 +0100

    ARM: 8109/1: mm: Modify pte_write and pmd_write logic for LPAE
    
    commit ded9477984690d026e46dd75e8157392cea3f13f upstream.
    
    For LPAE, we have the following means for encoding writable or dirty
    ptes:
                                  L_PTE_DIRTY       L_PTE_RDONLY
        !pte_dirty && !pte_write        0               1
        !pte_dirty && pte_write         0               1
        pte_dirty && !pte_write         1               1
        pte_dirty && pte_write          1               0
    
    So we can't distinguish between writeable clean ptes and read only
    ptes. This can cause problems with ptes being incorrectly flagged as
    read only when they are writeable but not dirty.
    
    This patch renumbers L_PTE_RDONLY from AP[2] to a software bit #58,
    and adds additional logic to set AP[2] whenever the pte is read only
    or not dirty. That way we can distinguish between clean writeable ptes
    and read only ptes.
    
    HugeTLB pages will use this new logic automatically.
    
    We need to add some logic to Transparent HugePages to ensure that they
    correctly interpret the revised pgprot permissions (L_PTE_RDONLY has
    moved and no longer matches PMD_SECT_AP2). In the process of revising
    THP, the names of the PMD software bits have been prefixed with L_ to
    make them easier to distinguish from their hardware bit counterparts.
    
    
    Signed-off-by: Steve Capper <steve.capper@linaro.org>
    Reviewed-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    [hpy: Backported to 3.10
     - adjust the context
     - ignore change related to pmd, because 3.10 does not support HugePage ]
    Signed-off-by: Hou Pengyang <houpengyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5012ebf4bc33c18cd63f7ea62b85c38e64b811ac
Author: Steven Capper <steve.capper@linaro.org>
Date:   Fri Jul 18 16:15:27 2014 +0100

    ARM: 8108/1: mm: Introduce {pte,pmd}_isset and {pte,pmd}_isclear
    
    commit f2950706871c4b6e8c0f0d7c3f62d35930b8de63 upstream.
    
    Long descriptors on ARM are 64 bits, and some pte functions such as
    pte_dirty return a bitwise-and of a flag with the pte value. If the
    flag to be tested resides in the upper 32 bits of the pte, then we run
    into the danger of the result being dropped if downcast.
    
    For example:
            gather_stats(page, md, pte_dirty(*pte), 1);
    where pte_dirty(*pte) is downcast to an int.
    
    This patch introduces a new macro pte_isset which performs the bitwise
    and, then performs a double logical invert (where needed) to ensure
    predictable downcasting. The logical inverse pte_isclear is also
    introduced.
    
    Equivalent pmd functions for Transparent HugePages have also been
    added.
    
    Signed-off-by: Steve Capper <steve.capper@linaro.org>
    Reviewed-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    [hpy: Backported to 3.10:
     - adjust the context
     - ignore change to pmd, because 3.10 does not support HugePage.]
    Signed-off-by: Hou Pengyang <houpengyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36e2738b5ef615f4092f930577438b5f15e7491f
Author: Russell King <rmk+kernel@arm.linux.org.uk>
Date:   Thu Jul 17 12:17:45 2014 +0100

    ARM: DMA: ensure that old section mappings are flushed from the TLB
    
    commit 6b076991dca9817e75c37e2f0db6d52611ea42fa upstream.
    
    When setting up the CMA region, we must ensure that the old section
    mappings are flushed from the TLB before replacing them with page
    tables, otherwise we can suffer from mismatched aliases if the CPU
    speculatively prefetches from these mappings at an inopportune time.
    
    A mismatched alias can occur when the TLB contains a section mapping,
    but a subsequent prefetch causes it to load a page table mapping,
    resulting in the possibility of the TLB containing two matching
    mappings for the same virtual address region.
    
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Cc: Hou Pengyang <houpengyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19e1e4794d60aab17055e001dfdfb8520f1a8c2b
Author: Laura Abbott <lauraa@codeaurora.org>
Date:   Sat Dec 21 01:03:06 2013 +0100

    ARM: 7931/1: Correct virt_addr_valid
    
    commit efea3403d4b7c6d1dd5d5ac3234c161e8b314d66 upstream.
    
    The definition of virt_addr_valid is that virt_addr_valid should
    return true if and only if virt_to_page returns a valid pointer.
    The current definition of virt_addr_valid only checks against the
    virtual address range. There's no guarantee that just because a
    virtual address falls bewteen PAGE_OFFSET and high_memory the
    associated physical memory has a valid backing struct page. Follow
    the example of other architectures and convert to pfn_valid to
    verify that the virtual address is actually valid. The check for
    an address between PAGE_OFFSET and high_memory is still necessary
    as vmalloc/highmem addresses are not valid with virt_to_page.
    
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Nicolas Pitre <nico@linaro.org>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Laura Abbott <lauraa@codeaurora.org>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Cc: Hou Pengyang <houpengyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe9c7cb696aee94f37c459d30c38d086874300b1
Author: Russell King <rmk+kernel@arm.linux.org.uk>
Date:   Tue Dec 10 19:21:08 2013 +0000

    ARM: fix asm/memory.h build error
    
    commit b713aa0b15015a65ad5421543b80df86de043d62 upstream.
    
    Jason Gunthorpe reports a build failure when ARM_PATCH_PHYS_VIRT is
    not defined:
    
    In file included from arch/arm/include/asm/page.h:163:0,
                     from include/linux/mm_types.h:16,
                     from include/linux/sched.h:24,
                     from arch/arm/kernel/asm-offsets.c:13:
    arch/arm/include/asm/memory.h: In function '__virt_to_phys':
    arch/arm/include/asm/memory.h:244:40: error: 'PHYS_OFFSET' undeclared (first use in this function)
    arch/arm/include/asm/memory.h:244:40: note: each undeclared identifier is reported only once for each function it appears in
    arch/arm/include/asm/memory.h: In function '__phys_to_virt':
    arch/arm/include/asm/memory.h:249:13: error: 'PHYS_OFFSET' undeclared (first use in this function)
    
    Fixes: ca5a45c06cd4 ("ARM: mm: use phys_addr_t appropriately in p2v and v2p conversions")
    Tested-By: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    [hpy: Backported to 3.10:
     - adjust the context
     - MPU is not supported by 3.10, so ignore fix to MPU compared with the original patch.]
    Signed-off-by: Hou Pengyang <houpengyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 200d9918496952207f3f26f432368b208d984936
Author: Chen Gang <gang.chen@asianux.com>
Date:   Sat Oct 26 15:07:25 2013 +0100

    ARM: 7867/1: include: asm: use 'int' instead of 'unsigned long' for 'oldval' in atomic_cmpxchg().
    
    commit 4dcc1cf7316a26e112f5c9fcca531ff98ef44700 upstream.
    
    For atomic_cmpxchg(), the type of 'oldval' need be 'int' to match the
    type of "*ptr" (used by 'ldrex' instruction) and 'old' (used by 'teq'
    instruction).
    
    Reviewed-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Chen Gang <gang.chen@asianux.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Cc: Hou Pengyang <houpengyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4db1ea4eb527d38ea61b449474a79438c6a8af93
Author: Chen Gang <gang.chen@asianux.com>
Date:   Sat Oct 26 15:07:04 2013 +0100

    ARM: 7866/1: include: asm: use 'long long' instead of 'u64' within atomic.h
    
    commit 237f12337cfa2175474e4dd015bc07a25eb9080d upstream.
    
    atomic* value is signed value, and atomic* functions need also process
    signed value (parameter value, and return value), so 32-bit arm need
    use 'long long' instead of 'u64'.
    
    After replacement, it will also fix a bug for atomic64_add_negative():
    "u64 is never less than 0".
    
    The modifications are:
    
      in vim, use "1,% s/\<u64\>/long long/g" command.
      remove '__aligned(8)' which is useless for 64-bit.
      be sure of 80 column limitation after replacement.
    
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Chen Gang <gang.chen@asianux.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Cc: Hou Pengyang <houpengyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 716669313b88cce317a83230cde7644451aea9f4
Author: Will Deacon <will@kernel.org>
Date:   Thu May 2 13:52:01 2013 +0100

    ARM: lpae: fix definition of PTE_HWTABLE_PTRS
    
    commit e38a517578d6c0f764b0d0f6e26dcdf9f70c69d7 upstream.
    
    For 2-level page tables, PTE_HWTABLE_PTRS describes the offset between
    Linux PTEs and hardware PTEs. On LPAE, there is no distinction (since
    we have 64-bit descriptors with plenty of space) so PTE_HWTABLE_PTRS
    should be 0. Unfortunately, it is wrongly defined as PTRS_PER_PTE,
    meaning that current pte table flushing is off by a page. Luckily,
    all current LPAE implementations are SMP, so the hardware walker can
    snoop L1.
    
    This patch fixes the broken definition.
    
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Cc: Hou Pengyang <houpengyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98d1567891367f794f10b7cf907055abdb4f897b
Author: Cyril Chemparathy <cyril@ti.com>
Date:   Wed Sep 12 10:19:05 2012 -0400

    ARM: fix type of PHYS_PFN_OFFSET to unsigned long
    
    commit 5b20c5b2f014ecc0a6310988af69cd7ede9e7c67 upstream.
    
    On LPAE machines, PHYS_OFFSET evaluates to a phys_addr_t and this type is
    inherited by the PHYS_PFN_OFFSET definition as well.  Consequently, the kernel
    build emits warnings of the form:
    
    init/main.c: In function 'start_kernel':
    init/main.c:588:7: warning: format '%lx' expects argument of type 'long unsigned int', but argument 2 has type 'phys_addr_t' [-Wformat]
    
    This patch fixes this warning by pinning down the PFN type to unsigned long.
    
    Signed-off-by: Cyril Chemparathy <cyril@ti.com>
    Acked-by: Nicolas Pitre <nico@linaro.org>
    Tested-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Tested-by: Subash Patel <subash.rp@samsung.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Cc: Hou Pengyang <houpengyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aff6af4df8026e480a8672708c38bb45fcb426ce
Author: Vitaly Andrianov <vitalya@ti.com>
Date:   Tue Jul 10 14:41:17 2012 -0400

    ARM: LPAE: use phys_addr_t in alloc_init_pud()
    
    commit 20d6956d8cd2452cec0889ff040f18afc03c2e6b upstream.
    
    This patch fixes the alloc_init_pud() function to use phys_addr_t instead of
    unsigned long when passing in the phys argument.
    
    This is an extension to commit 97092e0c56830457af0639f6bd904537a150ea4a (ARM:
    pgtable: use phys_addr_t for physical addresses), which applied similar changes
    elsewhere in the ARM memory management code.
    
    Signed-off-by: Vitaly Andrianov <vitalya@ti.com>
    Signed-off-by: Cyril Chemparathy <cyril@ti.com>
    Acked-by: Nicolas Pitre <nico@linaro.org>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Tested-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Tested-by: Subash Patel <subash.rp@samsung.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Cc: Hou Pengyang <houpengyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 353b679419e93bb1a2c148b2934df27f59b41db8
Author: Cyril Chemparathy <cyril@ti.com>
Date:   Sun Jul 22 13:40:38 2012 -0400

    ARM: LPAE: use signed arithmetic for mask definitions
    
    commit 926edcc747e2efb3c9add7ed4dbc4e7a3a959d02 upstream.
    
    This patch applies to PAGE_MASK, PMD_MASK, and PGDIR_MASK, where forcing
    unsigned long math truncates the mask at the 32-bits.  This clearly does bad
    things on PAE systems.
    
    This patch fixes this problem by defining these masks as signed quantities.
    We then rely on sign extension to do the right thing.
    
    Signed-off-by: Cyril Chemparathy <cyril@ti.com>
    Signed-off-by: Vitaly Andrianov <vitalya@ti.com>
    Reviewed-by: Nicolas Pitre <nico@linaro.org>
    Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
    Tested-by: Santosh Shilimkar <santosh.shilimkar@ti.com>
    Tested-by: Subash Patel <subash.rp@samsung.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Cc: Hou Pengyang <houpengyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 171b1455b3f59346412848703a41a9a8019c99c9
Author: Steve Capper <steve.capper@linaro.org>
Date:   Fri May 17 12:32:55 2013 +0100

    ARM: mm: correct pte_same behaviour for LPAE.
    
    commit dde1b65110353517816bcbc58539463396202244 upstream.
    
    For 3 levels of paging the PTE_EXT_NG bit will be set for user
    address ptes that are written to a page table but not for ptes
    created with mk_pte.
    
    This can cause some comparison tests made by pte_same to fail
    spuriously and lead to other problems.
    
    To correct this behaviour, we mask off PTE_EXT_NG for any pte that
    is present before running the comparison.
    
    Signed-off-by: Steve Capper <steve.capper@linaro.org>
    Reviewed-by: Will Deacon <will.deacon@arm.com>
    Cc: Hou Pengyang <houpengyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30e2adb098750046be48eb595a7c6732a4293d54
Author: Douglas Anderson <dianders@chromium.org>
Date:   Thu Aug 29 00:08:01 2013 +0100

    ARM: 7829/1: Add ".text.unlikely" and ".text.hot" to arm unwind tables
    
    commit 849b882b52df0f276d9ffded01d85654aa0da422 upstream.
    
    It appears that gcc may put some code in ".text.unlikely" or
    ".text.hot" sections.  Right now those aren't accounted for in unwind
    tables.  Add them.
    
    I found some docs about this at:
      http://gcc.gnu.org/onlinedocs/gcc-4.6.2/gcc.pdf
    
    Without this, if you have slub_debug turned on, you can get messages
    that look like this:
      unwind: Index not found 7f008c50
    
    Signed-off-by: Doug Anderson <dianders@chromium.org>
    Acked-by: Mike Frysinger <vapier@gentoo.org>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    [wangkai: backport to 3.10
            - adjust context
    ]
    Signed-off-by: Wang Kai <morgan.wang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f80113d0c1a347bef06481a56b6d9c5bb90622f
Author: Mugunthan V N <mugunthanvnm@ti.com>
Date:   Thu Jan 22 15:19:22 2015 +0530

    drivers: net: cpsw: discard dual emac default vlan configuration
    
    commit 02a54164c52ed6eca3089a0d402170fbf34d6cf5 upstream.
    
    In Dual EMAC, the default VLANs are used to segregate Rx packets between
    the ports, so adding the same default VLAN to the switch will affect the
    normal packet transfers. So returning error on addition of dual EMAC
    default VLANs.
    
    Even if EMAC 0 default port VLAN is added to EMAC 1, it will lead to
    break dual EMAC port separations.
    
    Fixes: d9ba8f9e6298 (driver: net: ethernet: cpsw: dual emac interface implementation)
    Reported-by: Felipe Balbi <balbi@ti.com>
    Signed-off-by: Mugunthan V N <mugunthanvnm@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f256de7d38a3a5ca68ab105cf8794fe2ec21e83a
Author: Ashay Jaiswal <ashayj@codeaurora.org>
Date:   Thu Jan 8 18:54:25 2015 +0530

    regulator: core: fix race condition in regulator_put()
    
    commit 83b0302d347a49f951e904184afe57ac3723476e upstream.
    
    The regulator framework maintains a list of consumer regulators
    for a regulator device and protects it from concurrent access using
    the regulator device's mutex lock.
    
    In the case of regulator_put() the consumer is removed and regulator
    device's parameters are updated without holding the regulator device's
    mutex. This would lead to a race condition between the regulator_put()
    and any function which traverses the consumer list or modifies regulator
    device's parameters.
    Fix this race condition by holding the regulator device's mutex in case
    of regulator_put.
    
    Signed-off-by: Ashay Jaiswal <ashayj@codeaurora.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba455124c34d113bf781bfb2c1416d33cb1f26ce
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Mon Dec 29 10:33:36 2014 +0200

    spi/pxa2xx: Clear cur_chip pointer before starting next message
    
    commit c957e8f084e0d21febcd6b8a0ea9631eccc92f36 upstream.
    
    Once the current message is finished, the driver notifies SPI core about
    this by calling spi_finalize_current_message(). This function queues next
    message to be transferred. If there are more messages in the queue, it is
    possible that the driver is asked to transfer the next message at this
    point.
    
    When spi_finalize_current_message() returns the driver clears the
    drv_data->cur_chip pointer to NULL. The problem is that if the driver
    already started the next message clearing drv_data->cur_chip will cause
    NULL pointer dereference which crashes the kernel like:
    
     BUG: unable to handle kernel NULL pointer dereference at 0000000000000048
     IP: [<ffffffffa0022bc8>] cs_deassert+0x18/0x70 [spi_pxa2xx_platform]
     PGD 78bb8067 PUD 37712067 PMD 0
     Oops: 0000 [#1] SMP
     Modules linked in:
     CPU: 1 PID: 11 Comm: ksoftirqd/1 Tainted: G           O   3.18.0-rc4-mjo #5
     Hardware name: Intel Corp. VALLEYVIEW B3 PLATFORM/NOTEBOOK, BIOS MNW2CRB1.X64.0071.R30.1408131301 08/13/2014
     task: ffff880077f9f290 ti: ffff88007a820000 task.ti: ffff88007a820000
     RIP: 0010:[<ffffffffa0022bc8>]  [<ffffffffa0022bc8>] cs_deassert+0x18/0x70 [spi_pxa2xx_platform]
     RSP: 0018:ffff88007a823d08  EFLAGS: 00010202
     RAX: 0000000000000008 RBX: ffff8800379a4430 RCX: 0000000000000026
     RDX: 0000000000000000 RSI: 0000000000000246 RDI: ffff8800379a4430
     RBP: ffff88007a823d18 R08: 00000000ffffffff R09: 000000007a9bc65a
     R10: 000000000000028f R11: 0000000000000005 R12: ffff880070123e98
     R13: ffff880070123de8 R14: 0000000000000100 R15: ffffc90004888000
     FS:  0000000000000000(0000) GS:ffff880079a80000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
     CR2: 0000000000000048 CR3: 000000007029b000 CR4: 00000000001007e0
     Stack:
      ffff88007a823d58 ffff8800379a4430 ffff88007a823d48 ffffffffa0022c89
      0000000000000000 ffff8800379a4430 0000000000000000 0000000000000006
      ffff88007a823da8 ffffffffa0023be0 ffff88007a823dd8 ffffffff81076204
     Call Trace:
      [<ffffffffa0022c89>] giveback+0x69/0xa0 [spi_pxa2xx_platform]
      [<ffffffffa0023be0>] pump_transfers+0x710/0x740 [spi_pxa2xx_platform]
      [<ffffffff81076204>] ? pick_next_task_fair+0x744/0x830
      [<ffffffff81049679>] tasklet_action+0xa9/0xe0
      [<ffffffff81049a0e>] __do_softirq+0xee/0x280
      [<ffffffff81049bc0>] run_ksoftirqd+0x20/0x40
      [<ffffffff810646df>] smpboot_thread_fn+0xff/0x1b0
      [<ffffffff810645e0>] ? SyS_setgroups+0x150/0x150
      [<ffffffff81060f9d>] kthread+0xcd/0xf0
      [<ffffffff81060ed0>] ? kthread_create_on_node+0x180/0x180
      [<ffffffff8187a82c>] ret_from_fork+0x7c/0xb0
    
    Fix this by clearing drv_data->cur_chip before we call spi_finalize_current_message().
    
    Reported-by: Martin Oldfield <m@mjoldfield.com>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Acked-by: Robert Jarzmik <robert.jarzmik@free.fr>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d298d4d3d0faee7cdcc853dad3c5fedefbe8e9b
Author: Joe Thornber <ejt@redhat.com>
Date:   Wed Jan 28 12:07:46 2015 +0000

    dm cache: fix missing ERR_PTR returns and handling
    
    commit 766a78882ddf79b162243649d7dfdbac1fb6fb88 upstream.
    
    Commit 9b1cc9f251 ("dm cache: share cache-metadata object across
    inactive and active DM tables") mistakenly ignored the use of ERR_PTR
    returns.  Restore missing IS_ERR checks and ERR_PTR returns where
    appropriate.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2c38d8fcf5648129ebb28016f619cccc23d6368
Author: Joe Thornber <ejt@redhat.com>
Date:   Mon Jan 26 11:38:21 2015 +0000

    dm thin: don't allow messages to be sent to a pool target in READ_ONLY or FAIL mode
    
    commit 2a7eaea02b99b6e267b1e89c79acc6e9a51cee3b upstream.
    
    You can't modify the metadata in these modes.  It's better to fail these
    messages immediately than let the block-manager deny write locks on
    metadata blocks.  Otherwise these failed metadata changes will trigger
    'needs_check' to get set in the metadata superblock -- requiring repair
    using the thin_check utility.
    
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2811d3a0cf62f899bec79d535610c4535a8df893
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Jan 23 11:10:12 2015 +0100

    nl80211: fix per-station group key get/del and memory leak
    
    commit 0fa7b39131576dd1baa6ca17fca53c65d7f62249 upstream.
    
    In case userspace attempts to obtain key information for or delete a
    unicast key, this is currently erroneously rejected unless the driver
    sets the WIPHY_FLAG_IBSS_RSN flag. Apparently enough drivers do so it
    was never noticed.
    
    Fix that, and while at it fix a potential memory leak: the error path
    in the get_key() function was placed after allocating a message but
    didn't free it - move it to a better place. Luckily admin permissions
    are needed to call this operation.
    
    Fixes: e31b82136d1ad ("cfg80211/mac80211: allow per-station GTKs")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 535516f21ff0e7272e44496c575e3e6c4aa74342
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Wed Jan 21 14:37:44 2015 -0500

    NFSv4.1: Fix an Oops in nfs41_walk_client_list
    
    commit 3175e1dcec40fab1a444c010087f2068b6b04732 upstream.
    
    If we start state recovery on a client that failed to initialise correctly,
    then we are very likely to Oops.
    
    Reported-by: "Mkrtchyan, Tigran" <tigran.mkrtchyan@desy.de>
    Link: http://lkml.kernel.org/r/130621862.279655.1421851650684.JavaMail.zimbra@desy.de
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e70c526add70fd1aad3b5c12c9ca56a8e7b63ef
Author: Peng Tao <tao.peng@primarydata.com>
Date:   Tue Jan 20 07:44:29 2015 +0800

    nfs: fix dio deadlock when O_DIRECT flag is flipped
    
    commit ee8a1a8b160a87dc3a9c81a86796aa4db85ea815 upstream.
    
    We only support swap file calling nfs_direct_IO. However, application
    might be able to get to nfs_direct_IO if it toggles O_DIRECT flag
    during IO and it can deadlock because we grab inode->i_mutex in
    nfs_file_direct_write(). So return 0 for such case. Then the generic
    layer will fall back to buffer IO.
    
    Signed-off-by: Peng Tao <tao.peng@primarydata.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b15f0c0f6f989d3dd7b94db772c08d18350fd235
Author: Jochen Hein <jochen@jochen.org>
Date:   Thu Jan 22 12:03:15 2015 -0800

    Input: i8042 - add noloop quirk for Medion Akoya E7225 (MD98857)
    
    commit 1d90d6d5522befa8efa1a7ea406be65cf865ded4 upstream.
    
    Without this the aux port does not get detected, and consequently the touchpad
    will not work.
    
    With this patch the touchpad is detected:
    
    $ dmesg | grep -E "(SYN|i8042|serio)"
    pnp 00:03: Plug and Play ACPI device, IDs SYN1d22 PNP0f13 (active)
    i8042: PNP: PS/2 Controller [PNP0303:PS2K,PNP0f13:PS2M] at 0x60,0x64 irq 1,12
    serio: i8042 KBD port at 0x60,0x64 irq 1
    serio: i8042 AUX port at 0x60,0x64 irq 12
    input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input4
    psmouse serio1: synaptics: Touchpad model: 1, fw: 8.1, id: 0x1e2b1, caps: 0xd00123/0x840300/0x126800, board id: 2863, fw id: 1473085
    input: SynPS/2 Synaptics TouchPad as /devices/platform/i8042/serio1/input/input6
    
    dmidecode excerpt for this laptop is:
    
    Handle 0x0001, DMI type 1, 27 bytes
    System Information
            Manufacturer: Medion
            Product Name: Akoya E7225
            Version: 1.0
    
    Signed-off-by: Jochen Hein <jochen@jochen.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 662e62d5c1c1d24b5e7abe9a7d23e473459430c0
Author: Clemens Ladisch <clemens@ladisch.de>
Date:   Sun Jan 25 14:34:29 2015 +0100

    ALSA: seq-dummy: remove deadlock-causing events on close
    
    commit 0767e95bb96d7fdddcd590fb809e6975d93aebc5 upstream.
    
    When the last subscriber to a "Through" port has been removed, the
    subscribed destination ports might still be active, so it would be
    wrong to send "all sounds off" and "reset controller" events to them.
    The proper place for such a shutdown would be the closing of the actual
    MIDI port (and close_substream() in rawmidi.c already can do this).
    
    This also fixes a deadlock when dummy_unuse() tries to send events to
    its own port that is already locked because it is being freed.
    
    Reported-by: Peter Billam <peter@www.pjb.com.au>
    Signed-off-by: Clemens Ladisch <clemens@ladisch.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae22350e9c6817042a2fd84e51ec3c4b48489a9f
Author: Laurent Dufour <ldufour@linux.vnet.ibm.com>
Date:   Thu Jan 15 18:23:47 2015 +0100

    powerpc/xmon: Fix another endiannes issue in RTAS call from xmon
    
    commit e6eb2eba494d6f99e69ca3c3748cd37a2544ab38 upstream.
    
    The commit 3b8a3c010969 ("powerpc/pseries: Fix endiannes issue in RTAS
    call from xmon") was fixing an endianness issue in the call made from
    xmon to RTAS.
    
    However, as Michael Ellerman noticed, this fix was not complete, the
    token value was not byte swapped. This lead to call an unexpected and
    most of the time unexisting RTAS function, which is silently ignored by
    RTAS.
    
    This fix addresses this hole.
    
    Reported-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Laurent Dufour <ldufour@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd99ca324e0943f47ea404ae088a6b553b74f4f2
Author: Ahmed S. Darwish <ahmed.darwish@valeo.com>
Date:   Mon Jan 26 07:25:43 2015 +0200

    can: kvaser_usb: Fix state handling upon BUS_ERROR events
    
    commit e638642b08c170d2021b706f0b1c4f4ae93d8cbd upstream.
    
    While being in an ERROR_WARNING state, and receiving further
    bus error events with error counters still in the ERROR_WARNING
    range of 97-127 inclusive, the state handling code erroneously
    reverts back to ERROR_ACTIVE.
    
    Per the CAN standard, only revert to ERROR_ACTIVE when the
    error counters are less than 96.
    
    Moreover, in certain Kvaser models, the BUS_ERROR flag is
    always set along with undefined bits in the M16C status
    register. Thus use bitwise operators instead of full equality
    for checking that register against bus errors.
    
    Signed-off-by: Ahmed S. Darwish <ahmed.darwish@valeo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d5c90471fd3b7f51877665c2ba9987acd64b100
Author: Ahmed S. Darwish <ahmed.darwish@valeo.com>
Date:   Mon Jan 26 07:24:06 2015 +0200

    can: kvaser_usb: Retry the first bulk transfer on -ETIMEDOUT
    
    commit 14c10c2a1dd8eb8e00b750b521753260befa2789 upstream.
    
    On some x86 laptops, plugging a Kvaser device again after an
    unplug makes the firmware always ignore the very first command.
    For such a case, provide some room for retries instead of
    completely exiting the driver init code.
    
    Signed-off-by: Ahmed S. Darwish <ahmed.darwish@valeo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1098d7d7c95106e8bdca6265a9297294c7441cdc
Author: Ahmed S. Darwish <ahmed.darwish@valeo.com>
Date:   Mon Jan 26 07:22:54 2015 +0200

    can: kvaser_usb: Send correct context to URB completion
    
    commit 3803fa6977f1de15fda4e8646c8fec97c8045cae upstream.
    
    Send expected argument to the URB completion hander: a CAN
    netdevice instead of the network interface private context
    `kvaser_usb_net_priv'.
    
    This was discovered by having some garbage in the kernel
    log in place of the netdevice names: can0 and can1.
    
    Signed-off-by: Ahmed S. Darwish <ahmed.darwish@valeo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85efdfb6e5640b9ceac3ba68cb62089ad5718669
Author: Ahmed S. Darwish <ahmed.darwish@valeo.com>
Date:   Mon Jan 26 07:20:39 2015 +0200

    can: kvaser_usb: Do not sleep in atomic context
    
    commit ded5006667318c06df875609535176bd33f243a1 upstream.
    
    Upon receiving a hardware event with the BUS_RESET flag set,
    the driver kills all of its anchored URBs and resets all of
    its transmit URB contexts.
    
    Unfortunately it does so under the context of URB completion
    handler `kvaser_usb_read_bulk_callback()', which is often
    called in an atomic context.
    
    While the device is flooded with many received error packets,
    usb_kill_urb() typically sleeps/reschedules till the transfer
    request of each killed URB in question completes, leading to
    the sleep in atomic bug. [3]
    
    In v2 submission of the original driver patch [1], it was
    stated that the URBs kill and tx contexts reset was needed
    since we don't receive any tx acknowledgments later and thus
    such resources will be locked down forever. Fortunately this
    is no longer needed since an earlier bugfix in this patch
    series is now applied: all tx URB contexts are reset upon CAN
    channel close. [2]
    
    Moreover, a BUS_RESET is now treated _exactly_ like a BUS_OFF
    event, which is the recommended handling method advised by
    the device manufacturer.
    
    [1] http://article.gmane.org/gmane.linux.network/239442
        http://www.webcitation.org/6Vr2yagAQ
    
    [2] can: kvaser_usb: Reset all URB tx contexts upon channel close
        889b77f7fd2bcc922493d73a4c51d8a851505815
    
    [3] Stacktrace:
    
     <IRQ>  [<ffffffff8158de87>] dump_stack+0x45/0x57
     [<ffffffff8158b60c>] __schedule_bug+0x41/0x4f
     [<ffffffff815904b1>] __schedule+0x5f1/0x700
     [<ffffffff8159360a>] ? _raw_spin_unlock_irqrestore+0xa/0x10
     [<ffffffff81590684>] schedule+0x24/0x70
     [<ffffffff8147d0a5>] usb_kill_urb+0x65/0xa0
     [<ffffffff81077970>] ? prepare_to_wait_event+0x110/0x110
     [<ffffffff8147d7d8>] usb_kill_anchored_urbs+0x48/0x80
     [<ffffffffa01f4028>] kvaser_usb_unlink_tx_urbs+0x18/0x50 [kvaser_usb]
     [<ffffffffa01f45d0>] kvaser_usb_rx_error+0xc0/0x400 [kvaser_usb]
     [<ffffffff8108b14a>] ? vprintk_default+0x1a/0x20
     [<ffffffffa01f5241>] kvaser_usb_read_bulk_callback+0x4c1/0x5f0 [kvaser_usb]
     [<ffffffff8147a73e>] __usb_hcd_giveback_urb+0x5e/0xc0
     [<ffffffff8147a8a1>] usb_hcd_giveback_urb+0x41/0x110
     [<ffffffffa0008748>] finish_urb+0x98/0x180 [ohci_hcd]
     [<ffffffff810cd1a7>] ? acct_account_cputime+0x17/0x20
     [<ffffffff81069f65>] ? local_clock+0x15/0x30
     [<ffffffffa000a36b>] ohci_work+0x1fb/0x5a0 [ohci_hcd]
     [<ffffffff814fbb31>] ? process_backlog+0xb1/0x130
     [<ffffffffa000cd5b>] ohci_irq+0xeb/0x270 [ohci_hcd]
     [<ffffffff81479fc1>] usb_hcd_irq+0x21/0x30
     [<ffffffff8108bfd3>] handle_irq_event_percpu+0x43/0x120
     [<ffffffff8108c0ed>] handle_irq_event+0x3d/0x60
     [<ffffffff8108ec84>] handle_fasteoi_irq+0x74/0x110
     [<ffffffff81004dfd>] handle_irq+0x1d/0x30
     [<ffffffff81004727>] do_IRQ+0x57/0x100
     [<ffffffff8159482a>] common_interrupt+0x6a/0x6a
    
    Signed-off-by: Ahmed S. Darwish <ahmed.darwish@valeo.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f42bc6c5ffb63b1a702f7bc5a8a64588ac460cf
Author: Zidan Wang <b50113@freescale.com>
Date:   Wed Dec 31 11:39:14 2014 +0800

    ASoC: wm8960: Fix capture sample rate from 11250 to 11025
    
    commit 22ee76daddb87f88d2336d1b4737ef27c4f307ac upstream.
    
    wm8960 codec can't support sample rate 11250, it must be 11025.
    
    Signed-off-by: Zidan Wang <b50113@freescale.com>
    Acked-by: Charles Keepax <ckeepax@opensource.wolfsonmicro.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09572e4fa883185794e81b3b36438af5c9ff2132
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jan 2 17:48:51 2015 +0200

    spi: dw-mid: fix FIFO size
    
    commit 67bf9cda4b498b8cea4a40be67a470afe57d2e88 upstream.
    
    The FIFO size is 40 accordingly to the specifications, but this means 0x40,
    i.e. 64 bytes. This patch fixes the typo and enables FIFO size autodetection
    for Intel MID devices.
    
    Fixes: 7063c0d942a1 (spi/dw_spi: add DMA support)
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
