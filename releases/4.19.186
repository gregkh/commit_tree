commit 830a059cbba6832c11fefc0894c7ec7a27f75734
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Apr 10 13:21:19 2021 +0200

    Linux 4.19.186
    
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20210409095301.525783608@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afee927e8276d19ac913cee1fb03e6f26e75802c
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Fri Mar 12 21:07:08 2021 -0800

    init/Kconfig: make COMPILE_TEST depend on HAS_IOMEM
    
    commit ea29b20a828511de3348334e529a3d046a180416 upstream.
    
    I read the commit log of the following two:
    
    - bc083a64b6c0 ("init/Kconfig: make COMPILE_TEST depend on !UML")
    - 334ef6ed06fa ("init/Kconfig: make COMPILE_TEST depend on !S390")
    
    Both are talking about HAS_IOMEM dependency missing in many drivers.
    
    So, 'depends on HAS_IOMEM' seems the direct, sensible solution to me.
    
    This does not change the behavior of UML. UML still cannot enable
    COMPILE_TEST because it does not provide HAS_IOMEM.
    
    The current dependency for S390 is too strong. Under the condition of
    CONFIG_PCI=y, S390 provides HAS_IOMEM, hence can enable COMPILE_TEST.
    
    I also removed the meaningless 'default n'.
    
    Link: https://lkml.kernel.org/r/20210224140809.1067582-1-masahiroy@kernel.org
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: Arnd Bergmann <arnd@kernel.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: KP Singh <kpsingh@google.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Cc: Nick Terrell <terrelln@fb.com>
    Cc: Quentin Perret <qperret@google.com>
    Cc: Valentin Schneider <valentin.schneider@arm.com>
    Cc: "Enrico Weigelt, metux IT consult" <lkml@metux.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b97ed64cf80b072cb765c3b9389a7f19df2dd595
Author: Heiko Carstens <hca@linux.ibm.com>
Date:   Wed Nov 18 21:32:33 2020 +0100

    init/Kconfig: make COMPILE_TEST depend on !S390
    
    commit 334ef6ed06fa1a54e35296b77b693bcf6d63ee9e upstream.
    
    While allmodconfig and allyesconfig build for s390 there are also
    various bots running compile tests with randconfig, where PCI is
    disabled. This reveals that a lot of drivers should actually depend on
    HAS_IOMEM.
    Adding this to each device driver would be a never ending story,
    therefore just disable COMPILE_TEST for s390.
    
    The reasoning is more or less the same as described in
    commit bc083a64b6c0 ("init/Kconfig: make COMPILE_TEST depend on !UML").
    
    Reported-by: kernel test robot <lkp@intel.com>
    Suggested-by: Arnd Bergmann <arnd@kernel.org>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b77ae2a0d6f9e110e13e85d802124b111b3e027
Author: Piotr Krysiuk <piotras@gmail.com>
Date:   Tue Apr 6 21:59:39 2021 +0100

    bpf, x86: Validate computation of branch displacements for x86-32
    
    commit 26f55a59dc65ff77cd1c4b37991e26497fc68049 upstream.
    
    The branch displacement logic in the BPF JIT compilers for x86 assumes
    that, for any generated branch instruction, the distance cannot
    increase between optimization passes.
    
    But this assumption can be violated due to how the distances are
    computed. Specifically, whenever a backward branch is processed in
    do_jit(), the distance is computed by subtracting the positions in the
    machine code from different optimization passes. This is because part
    of addrs[] is already updated for the current optimization pass, before
    the branch instruction is visited.
    
    And so the optimizer can expand blocks of machine code in some cases.
    
    This can confuse the optimizer logic, where it assumes that a fixed
    point has been reached for all machine code blocks once the total
    program size stops changing. And then the JIT compiler can output
    abnormal machine code containing incorrect branch displacements.
    
    To mitigate this issue, we assert that a fixed point is reached while
    populating the output image. This rejects any problematic programs.
    The issue affects both x86-32 and x86-64. We mitigate separately to
    ease backporting.
    
    Signed-off-by: Piotr Krysiuk <piotras@gmail.com>
    Reviewed-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f26f1f838aa960045c712e13dbab8ff451fed74
Author: Piotr Krysiuk <piotras@gmail.com>
Date:   Mon Apr 5 22:52:15 2021 +0100

    bpf, x86: Validate computation of branch displacements for x86-64
    
    commit e4d4d456436bfb2fe412ee2cd489f7658449b098 upstream.
    
    The branch displacement logic in the BPF JIT compilers for x86 assumes
    that, for any generated branch instruction, the distance cannot
    increase between optimization passes.
    
    But this assumption can be violated due to how the distances are
    computed. Specifically, whenever a backward branch is processed in
    do_jit(), the distance is computed by subtracting the positions in the
    machine code from different optimization passes. This is because part
    of addrs[] is already updated for the current optimization pass, before
    the branch instruction is visited.
    
    And so the optimizer can expand blocks of machine code in some cases.
    
    This can confuse the optimizer logic, where it assumes that a fixed
    point has been reached for all machine code blocks once the total
    program size stops changing. And then the JIT compiler can output
    abnormal machine code containing incorrect branch displacements.
    
    To mitigate this issue, we assert that a fixed point is reached while
    populating the output image. This rejects any problematic programs.
    The issue affects both x86-32 and x86-64. We mitigate separately to
    ease backporting.
    
    Signed-off-by: Piotr Krysiuk <piotras@gmail.com>
    Reviewed-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 313bb63b1d145502ba15e4bcf66790ee0375686d
Author: Vincent Whitchurch <vincent.whitchurch@axis.com>
Date:   Fri Mar 19 14:57:11 2021 +0100

    cifs: Silently ignore unknown oplock break handle
    
    [ Upstream commit 219481a8f90ec3a5eed9638fb35609e4b1aeece7 ]
    
    Make SMB2 not print out an error when an oplock break is received for an
    unknown handle, similar to SMB1.  The debug message which is printed for
    these unknown handles may also be misleading, so fix that too.
    
    The SMB2 lease break path is not affected by this patch.
    
    Without this, a program which writes to a file from one thread, and
    opens, reads, and writes the same file from another thread triggers the
    below errors several times a minute when run against a Samba server
    configured with "smb2 leases = no".
    
     CIFS: VFS: \\192.168.0.1 No task to wake, unknown frame received! NumMids 2
     00000000: 424d53fe 00000040 00000000 00000012  .SMB@...........
     00000010: 00000001 00000000 ffffffff ffffffff  ................
     00000020: 00000000 00000000 00000000 00000000  ................
     00000030: 00000000 00000000 00000000 00000000  ................
    
    Signed-off-by: Vincent Whitchurch <vincent.whitchurch@axis.com>
    Reviewed-by: Tom Talpey <tom@talpey.com>
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7dc01be7a2831ca0514439bd20be01df5cccef4
Author: Ronnie Sahlberg <lsahlber@redhat.com>
Date:   Thu Mar 25 16:26:35 2021 +1000

    cifs: revalidate mapping when we open files for SMB1 POSIX
    
    [ Upstream commit cee8f4f6fcabfdf229542926128e9874d19016d5 ]
    
    RHBZ: 1933527
    
    Under SMB1 + POSIX, if an inode is reused on a server after we have read and
    cached a part of a file, when we then open the new file with the
    re-cycled inode there is a chance that we may serve the old data out of cache
    to the application.
    This only happens for SMB1 (deprecated) and when posix are used.
    The simplest solution to avoid this race is to force a revalidate
    on smb1-posix open.
    
    Signed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f81895a6815e2428af088b3aa37ab7a8db6c4b1
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Wed Mar 24 21:37:41 2021 -0700

    ia64: fix format strings for err_inject
    
    [ Upstream commit 95d44a470a6814207d52dd6312203b0f4ef12710 ]
    
    Fix warning with %lx / u64 mismatch:
    
      arch/ia64/kernel/err_inject.c: In function 'show_resources':
      arch/ia64/kernel/err_inject.c:62:22: warning:
        format '%lx' expects argument of type 'long unsigned int',
        but argument 3 has type 'u64' {aka 'long long unsigned int'}
         62 |  return sprintf(buf, "%lx", name[cpu]);   \
            |                      ^~~~~~~
    
    Link: https://lkml.kernel.org/r/20210313104312.1548232-1-slyfox@gentoo.org
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdd0b85e6cb48f4bf81ff002576862e6b06ccc67
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Wed Mar 24 21:37:38 2021 -0700

    ia64: mca: allocate early mca with GFP_ATOMIC
    
    [ Upstream commit f2a419cf495f95cac49ea289318b833477e1a0e2 ]
    
    The sleep warning happens at early boot right at secondary CPU
    activation bootup:
    
        smp: Bringing up secondary CPUs ...
        BUG: sleeping function called from invalid context at mm/page_alloc.c:4942
        in_atomic(): 0, irqs_disabled(): 1, non_block: 0, pid: 0, name: swapper/1
        CPU: 1 PID: 0 Comm: swapper/1 Not tainted 5.12.0-rc2-00007-g79e228d0b611-dirty #99
        ..
        Call Trace:
          show_stack+0x90/0xc0
          dump_stack+0x150/0x1c0
          ___might_sleep+0x1c0/0x2a0
          __might_sleep+0xa0/0x160
          __alloc_pages_nodemask+0x1a0/0x600
          alloc_page_interleave+0x30/0x1c0
          alloc_pages_current+0x2c0/0x340
          __get_free_pages+0x30/0xa0
          ia64_mca_cpu_init+0x2d0/0x3a0
          cpu_init+0x8b0/0x1440
          start_secondary+0x60/0x700
          start_ap+0x750/0x780
        Fixed BSP b0 value from CPU 1
    
    As I understand interrupts are not enabled yet and system has a lot of
    memory.  There is little chance to sleep and switch to GFP_ATOMIC should
    be a no-op.
    
    Link: https://lkml.kernel.org/r/20210315085045.204414-1-slyfox@gentoo.org
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c98be70f28edecc75a8ef5a28c8423594299beb
Author: Martin Wilck <mwilck@suse.com>
Date:   Tue Mar 23 22:24:31 2021 +0100

    scsi: target: pscsi: Clean up after failure in pscsi_map_sg()
    
    [ Upstream commit 36fa766faa0c822c860e636fe82b1affcd022974 ]
    
    If pscsi_map_sg() fails, make sure to drop references to already allocated
    bios.
    
    Link: https://lore.kernel.org/r/20210323212431.15306-2-mwilck@suse.com
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Martin Wilck <mwilck@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06c0ec0ba795eb494a78d8246d0b73c882a6e157
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 23 13:48:36 2021 +0100

    x86/build: Turn off -fcf-protection for realmode targets
    
    [ Upstream commit 9fcb51c14da2953de585c5c6e50697b8a6e91a7b ]
    
    The new Ubuntu GCC packages turn on -fcf-protection globally,
    which causes a build failure in the x86 realmode code:
    
      cc1: error: ‘-fcf-protection’ is not compatible with this target
    
    Turn it off explicitly on compilers that understand this option.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/20210323124846.1584944-1-arnd@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 882d5a991d49efd9a24ea8fa472dd3be94e09f78
Author: Esteve Varela Colominas <esteve.varela@gmail.com>
Date:   Mon Mar 15 20:58:24 2021 +0100

    platform/x86: thinkpad_acpi: Allow the FnLock LED to change state
    
    [ Upstream commit 3d677f12ea3a2097a16ded570623567403dea959 ]
    
    On many recent ThinkPad laptops, there's a new LED next to the ESC key,
    that indicates the FnLock status.
    When the Fn+ESC combo is pressed, FnLock is toggled, which causes the
    Media Key functionality to change, making it so that the media keys
    either perform their media key function, or function as an F-key by
    default. The Fn key can be used the access the alternate function at any
    time.
    
    With the current linux kernel, the LED doens't change state if you press
    the Fn+ESC key combo. However, the media key functionality *does*
    change. This is annoying, since the LED will stay on if it was on during
    bootup, and it makes it hard to keep track what the current state of the
    FnLock is.
    
    This patch calls an ACPI function, that gets the current media key
    state, when the Fn+ESC key combo is pressed. Through testing it was
    discovered that this function causes the LED to update correctly to
    reflect the current state when this function is called.
    
    The relevant ACPI calls are the following:
    \_SB_.PCI0.LPC0.EC0_.HKEY.GMKS: Get media key state, returns 0x603 if the FnLock mode is enabled, and 0x602 if it's disabled.
    \_SB_.PCI0.LPC0.EC0_.HKEY.SMKS: Set media key state, sending a 1 will enable FnLock mode, and a 0 will disable it.
    
    Relevant discussion:
    https://bugzilla.kernel.org/show_bug.cgi?id=207841
    https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1881015
    
    Signed-off-by: Esteve Varela Colominas <esteve.varela@gmail.com>
    Link: https://lore.kernel.org/r/20210315195823.23212-1-esteve.varela@gmail.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19b383ca5cda2ad87a6e2c19de373884de188959
Author: Rob Clark <robdclark@chromium.org>
Date:   Wed Mar 17 09:40:38 2021 -0700

    drm/msm: Ratelimit invalid-fence message
    
    [ Upstream commit 7ad48d27a2846bfda29214fb454d001c3e02b9e7 ]
    
    We have seen a couple cases where low memory situations cause something
    bad to happen, followed by a flood of these messages obscuring the root
    cause.  Lets ratelimit the dmesg spam so that next time it happens we
    don't lose the kernel traces leading up to this.
    
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0cc1f6b20c45a6c3409c6d28fcdfd20f05abc188
Author: Karthikeyan Kathirvel <kathirve@codeaurora.org>
Date:   Thu Mar 11 10:59:07 2021 +0530

    mac80211: choose first enabled channel for monitor
    
    [ Upstream commit 041c881a0ba8a75f71118bd9766b78f04beed469 ]
    
    Even if the first channel from sband channel list is invalid
    or disabled mac80211 ends up choosing it as the default channel
    for monitor interfaces, making them not usable.
    
    Fix this by assigning the first available valid or enabled
    channel instead.
    
    Signed-off-by: Karthikeyan Kathirvel <kathirve@codeaurora.org>
    Link: https://lore.kernel.org/r/1615440547-7661-1-git-send-email-kathirve@codeaurora.org
    [reword commit message, comment, code cleanups]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2186fb5c7f7c321719f25985197b7945959dab89
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Wed Mar 10 23:27:35 2021 -0500

    mISDN: fix crash in fritzpci
    
    [ Upstream commit a9f81244d2e33e6dfcef120fefd30c96b3f7cdb0 ]
    
    setup_fritz() in avmfritz.c might fail with -EIO and in this case the
    isac.type and isac.write_reg is not initialized and remains 0(NULL).
    A subsequent call to isac_release() will dereference isac->write_reg and
    crash.
    
    [    1.737444] BUG: kernel NULL pointer dereference, address: 0000000000000000
    [    1.737809] #PF: supervisor instruction fetch in kernel mode
    [    1.738106] #PF: error_code(0x0010) - not-present page
    [    1.738378] PGD 0 P4D 0
    [    1.738515] Oops: 0010 [#1] SMP NOPTI
    [    1.738711] CPU: 0 PID: 180 Comm: systemd-udevd Not tainted 5.12.0-rc2+ #78
    [    1.739077] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-48-gd9c812dda519-p
    rebuilt.qemu.org 04/01/2014
    [    1.739664] RIP: 0010:0x0
    [    1.739807] Code: Unable to access opcode bytes at RIP 0xffffffffffffffd6.
    [    1.740200] RSP: 0018:ffffc9000027ba10 EFLAGS: 00010202
    [    1.740478] RAX: 0000000000000000 RBX: ffff888102f41840 RCX: 0000000000000027
    [    1.740853] RDX: 00000000000000ff RSI: 0000000000000020 RDI: ffff888102f41800
    [    1.741226] RBP: ffffc9000027ba20 R08: ffff88817bc18440 R09: ffffc9000027b808
    [    1.741600] R10: 0000000000000001 R11: 0000000000000001 R12: ffff888102f41840
    [    1.741976] R13: 00000000fffffffb R14: ffff888102f41800 R15: ffff8881008b0000
    [    1.742351] FS:  00007fda3a38a8c0(0000) GS:ffff88817bc00000(0000) knlGS:0000000000000000
    [    1.742774] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [    1.743076] CR2: ffffffffffffffd6 CR3: 00000001021ec000 CR4: 00000000000006f0
    [    1.743452] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [    1.743828] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [    1.744206] Call Trace:
    [    1.744339]  isac_release+0xcc/0xe0 [mISDNipac]
    [    1.744582]  fritzpci_probe.cold+0x282/0x739 [avmfritz]
    [    1.744861]  local_pci_probe+0x48/0x80
    [    1.745063]  pci_device_probe+0x10f/0x1c0
    [    1.745278]  really_probe+0xfb/0x420
    [    1.745471]  driver_probe_device+0xe9/0x160
    [    1.745693]  device_driver_attach+0x5d/0x70
    [    1.745917]  __driver_attach+0x8f/0x150
    [    1.746123]  ? device_driver_attach+0x70/0x70
    [    1.746354]  bus_for_each_dev+0x7e/0xc0
    [    1.746560]  driver_attach+0x1e/0x20
    [    1.746751]  bus_add_driver+0x152/0x1f0
    [    1.746957]  driver_register+0x74/0xd0
    [    1.747157]  ? 0xffffffffc00d8000
    [    1.747334]  __pci_register_driver+0x54/0x60
    [    1.747562]  AVM_init+0x36/0x1000 [avmfritz]
    [    1.747791]  do_one_initcall+0x48/0x1d0
    [    1.747997]  ? __cond_resched+0x19/0x30
    [    1.748206]  ? kmem_cache_alloc_trace+0x390/0x440
    [    1.748458]  ? do_init_module+0x28/0x250
    [    1.748669]  do_init_module+0x62/0x250
    [    1.748870]  load_module+0x23ee/0x26a0
    [    1.749073]  __do_sys_finit_module+0xc2/0x120
    [    1.749307]  ? __do_sys_finit_module+0xc2/0x120
    [    1.749549]  __x64_sys_finit_module+0x1a/0x20
    [    1.749782]  do_syscall_64+0x38/0x90
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b633286c9f11a597fb5681ef7d7c5b30a7f8a23f
Author: Pavel Andrianov <andrianov@ispras.ru>
Date:   Wed Mar 10 11:10:46 2021 +0300

    net: pxa168_eth: Fix a potential data race in pxa168_eth_remove
    
    [ Upstream commit 0571a753cb07982cc82f4a5115e0b321da89e1f3 ]
    
    pxa168_eth_remove() firstly calls unregister_netdev(),
    then cancels a timeout work. unregister_netdev() shuts down a device
    interface and removes it from the kernel tables. If the timeout occurs
    in parallel, the timeout work (pxa168_eth_tx_timeout_task) performs stop
    and open of the device. It may lead to an inconsistent state and memory
    leaks.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Pavel Andrianov <andrianov@ispras.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33d059161264f7e108f6fd6b387cc5fc5a87d604
Author: Alban Bedel <albeu@free.fr>
Date:   Mon Feb 22 15:15:59 2021 +0100

    platform/x86: intel-hid: Support Lenovo ThinkPad X1 Tablet Gen 2
    
    [ Upstream commit 56678a5f44ef5f0ad9a67194bbee2280c6286534 ]
    
    Like a few other system the Lenovo ThinkPad X1 Tablet Gen 2 miss the
    HEBC method, which prevent the power button from working. Add a quirk
    to enable the button array on this system family and fix the power
    button.
    
    Signed-off-by: Alban Bedel <albeu@free.fr>
    Tested-by: Alexander Kobel <a-kobel@a-kobel.de>
    Link: https://lore.kernel.org/r/20210222141559.3775-1-albeu@free.fr
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 144744d153f0b18fa94c77731f538d1f84ea92bd
Author: Tony Lindgren <tony@atomide.com>
Date:   Thu Feb 18 13:06:57 2021 +0200

    bus: ti-sysc: Fix warning on unbind if reset is not deasserted
    
    [ Upstream commit a7b5d7c4969aba8d1f04c29048906abaa71fb6a9 ]
    
    We currently get thefollowing on driver unbind if a reset is configured
    and asserted:
    
    WARNING: CPU: 0 PID: 993 at drivers/reset/core.c:432 reset_control_assert
    ...
    (reset_control_assert) from [<c0fecda8>] (sysc_remove+0x190/0x1e4)
    (sysc_remove) from [<c0a2bb58>] (platform_remove+0x24/0x3c)
    (platform_remove) from [<c0a292fc>] (__device_release_driver+0x154/0x214)
    (__device_release_driver) from [<c0a2a210>] (device_driver_detach+0x3c/0x8c)
    (device_driver_detach) from [<c0a27d64>] (unbind_store+0x60/0xd4)
    (unbind_store) from [<c0546bec>] (kernfs_fop_write_iter+0x10c/0x1cc)
    
    Let's fix it by checking the reset status.
    
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bed8c13b9973fea90494da5b205a9cfc3862ab0
Author: Mans Rullgard <mans@mansr.com>
Date:   Thu Jan 28 15:56:44 2021 +0000

    ARM: dts: am33xx: add aliases for mmc interfaces
    
    [ Upstream commit 9bbce32a20d6a72c767a7f85fd6127babd1410ac ]
    
    Without DT aliases, the numbering of mmc interfaces is unpredictable.
    Adding them makes it possible to refer to devices consistently.  The
    popular suggestion to use UUIDs obviously doesn't work with a blank
    device fresh from the factory.
    
    See commit fa2d0aa96941 ("mmc: core: Allow setting slot index via
    device tree alias") for more discussion.
    
    Signed-off-by: Mans Rullgard <mans@mansr.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
