commit ce061ef43f1dede7ee2bd907d2bf38402831e30d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Oct 17 10:42:35 2021 +0200

    Linux 5.4.154
    
    Link: https://lore.kernel.org/r/20211014145207.314256898@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 291a48871e51b06bd84742ad9f37155bb6b7ed72
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Sep 20 15:31:11 2021 +0200

    sched: Always inline is_percpu_thread()
    
    [ Upstream commit 83d40a61046f73103b4e5d8f1310261487ff63b0 ]
    
      vmlinux.o: warning: objtool: check_preemption_disabled()+0x81: call to is_percpu_thread() leaves .noinstr.text section
    
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20210928084218.063371959@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e105ecc4ab73cf1bf8ae7116dc9fc9be4603153
Author: Colin Ian King <colin.king@canonical.com>
Date:   Sat Sep 25 00:03:30 2021 +0100

    scsi: virtio_scsi: Fix spelling mistake "Unsupport" -> "Unsupported"
    
    [ Upstream commit cced4c0ec7c06f5230a2958907a409c849762293 ]
    
    There are a couple of spelling mistakes in pr_info and pr_err messages.
    Fix them.
    
    Link: https://lore.kernel.org/r/20210924230330.143785-1-colin.king@canonical.com
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ff5ee9d3926ff25be06f25d7121936e4de27daf
Author: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
Date:   Fri Sep 24 17:51:53 2021 +0800

    scsi: ses: Fix unsigned comparison with less than zero
    
    [ Upstream commit dd689ed5aa905daf4ba4c99319a52aad6ea0a796 ]
    
    Fix the following coccicheck warning:
    
    ./drivers/scsi/ses.c:137:10-16: WARNING: Unsigned expression compared
    with zero: result > 0.
    
    Link: https://lore.kernel.org/r/1632477113-90378-1-git-send-email-jiapeng.chong@linux.alibaba.com
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 83d857d6b0967b6709cd38750c3ce2ed8ced1a95
Author: Leslie Shi <Yuliang.Shi@amd.com>
Date:   Thu Sep 23 16:05:31 2021 +0800

    drm/amdgpu: fix gart.bo pin_count leak
    
    [ Upstream commit 66805763a97f8f7bdf742fc0851d85c02ed9411f ]
    
    gmc_v{9,10}_0_gart_disable() isn't called matched with
    correspoding gart_enbale function in SRIOV case. This will
    lead to gart.bo pin_count leak on driver unload.
    
    Cc: Hawking Zhang <Hawking.Zhang@amd.com>
    Signed-off-by: Leslie Shi <Yuliang.Shi@amd.com>
    Signed-off-by: Guchun Chen <guchun.chen@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1843ae8c4b2bc1ec858dac933882e5bfa1af7b5e
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Sep 27 14:48:23 2021 -0700

    net: sun: SUNVNET_COMMON should depend on INET
    
    [ Upstream commit 103bde372f084206c6972be543ecc247ebbff9f3 ]
    
    When CONFIG_INET is not set, there are failing references to IPv4
    functions, so make this driver depend on INET.
    
    Fixes these build errors:
    
    sparc64-linux-ld: drivers/net/ethernet/sun/sunvnet_common.o: in function `sunvnet_start_xmit_common':
    sunvnet_common.c:(.text+0x1a68): undefined reference to `__icmp_send'
    sparc64-linux-ld: drivers/net/ethernet/sun/sunvnet_common.o: in function `sunvnet_poll_common':
    sunvnet_common.c:(.text+0x358c): undefined reference to `ip_send_check'
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Aaron Young <aaron.young@oracle.com>
    Cc: Rashmi Narasimhan <rashmi.narasimhan@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d1d7acb1067726325f9817fce6556d7eb2e87c8
Author: MichelleJin <shjy180909@gmail.com>
Date:   Mon Sep 27 03:34:57 2021 +0000

    mac80211: check return value of rhashtable_init
    
    [ Upstream commit 111461d573741c17eafad029ac93474fa9adcce0 ]
    
    When rhashtable_init() fails, it returns -EINVAL.
    However, since error return value of rhashtable_init is not checked,
    it can cause use of uninitialized pointers.
    So, fix unhandled errors of rhashtable_init.
    
    Signed-off-by: MichelleJin <shjy180909@gmail.com>
    Link: https://lore.kernel.org/r/20210927033457.1020967-4-shjy180909@gmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2aaf3fd5e109b970370db52dbc1ae6f2b369d27a
Author: 王贇 <yun.wang@linux.alibaba.com>
Date:   Fri Sep 24 10:35:58 2021 +0800

    net: prevent user from passing illegal stab size
    
    [ Upstream commit b193e15ac69d56f35e1d8e2b5d16cbd47764d053 ]
    
    We observed below report when playing with netlink sock:
    
      UBSAN: shift-out-of-bounds in net/sched/sch_api.c:580:10
      shift exponent 249 is too large for 32-bit type
      CPU: 0 PID: 685 Comm: a.out Not tainted
      Call Trace:
       dump_stack_lvl+0x8d/0xcf
       ubsan_epilogue+0xa/0x4e
       __ubsan_handle_shift_out_of_bounds+0x161/0x182
       __qdisc_calculate_pkt_len+0xf0/0x190
       __dev_queue_xmit+0x2ed/0x15b0
    
    it seems like kernel won't check the stab log value passing from
    user, and will use the insane value later to calculate pkt_len.
    
    This patch just add a check on the size/cell_log to avoid insane
    calculation.
    
    Reported-by: Abaci <abaci@linux.alibaba.com>
    Signed-off-by: Michael Wang <yun.wang@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e66a472b51b75d5a839a5f00c054090fe11bcbb
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sun Jul 25 17:19:00 2021 +0000

    m68k: Handle arrivals of multiple signals correctly
    
    [ Upstream commit 4bb0bd81ce5e97092dfda6a106d414b703ec0ee8 ]
    
    When we have several pending signals, have entered with the kernel
    with large exception frame *and* have already built at least one
    sigframe, regs->stkadj is going to be non-zero and regs->format/sr/pc
    are going to be junk - the real values are in shifted exception stack
    frame we'd built when putting together the first sigframe.
    
    If that happens, subsequent sigframes are going to be garbage.
    Not hard to fix - just need to find the "adjusted" frame first
    and look for format/vector/sr/pc in it.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Tested-by: Michael Schmitz <schmitzmic@gmail.com>
    Reviewed-by: Michael Schmitz <schmitzmic@gmail.com>
    Tested-by: Finn Thain <fthain@linux-m68k.org>
    Link: https://lore.kernel.org/r/YP2dBIAPTaVvHiZ6@zeniv-ca.linux.org.uk
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be191c8e68fe3b872b657b025915b1a74d471f4d
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Aug 27 22:42:30 2021 +0800

    mac80211: Drop frames from invalid MAC address in ad-hoc mode
    
    [ Upstream commit a6555f844549cd190eb060daef595f94d3de1582 ]
    
    WARNING: CPU: 1 PID: 9 at net/mac80211/sta_info.c:554
    sta_info_insert_rcu+0x121/0x12a0
    Modules linked in:
    CPU: 1 PID: 9 Comm: kworker/u8:1 Not tainted 5.14.0-rc7+ #253
    Workqueue: phy3 ieee80211_iface_work
    RIP: 0010:sta_info_insert_rcu+0x121/0x12a0
    ...
    Call Trace:
     ieee80211_ibss_finish_sta+0xbc/0x170
     ieee80211_ibss_work+0x13f/0x7d0
     ieee80211_iface_work+0x37a/0x500
     process_one_work+0x357/0x850
     worker_thread+0x41/0x4d0
    
    If an Ad-Hoc node receives packets with invalid source MAC address,
    it hits a WARN_ON in sta_info_insert_check(), this can spam the log.
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Link: https://lore.kernel.org/r/20210827144230.39944-1-yuehaibing@huawei.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fffad5988f2895c4d18b31074f7545cac8864f22
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Sep 15 16:46:39 2021 +0200

    netfilter: nf_nat_masquerade: defer conntrack walk to work queue
    
    [ Upstream commit 7970a19b71044bf4dc2c1becc200275bdf1884d4 ]
    
    The ipv4 and device notifiers are called with RTNL mutex held.
    The table walk can take some time, better not block other RTNL users.
    
    'ip a' has been reported to block for up to 20 seconds when conntrack table
    has many entries and device down events are frequent (e.g., PPP).
    
    Reported-and-tested-by: Martin Zaharinov <micron10@gmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3cb0630341942338a38c43eed84579d5fde614f
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Sep 15 16:46:38 2021 +0200

    netfilter: nf_nat_masquerade: make async masq_inet6_event handling generic
    
    [ Upstream commit 30db406923b9285a9bac06a6af5e74bd6d0f1d06 ]
    
    masq_inet6_event is called asynchronously from system work queue,
    because the inet6 notifier is atomic and nf_iterate_cleanup can sleep.
    
    The ipv4 and device notifiers call nf_iterate_cleanup directly.
    
    This is legal, but these notifiers are called with RTNL mutex held.
    A large conntrack table with many devices coming and going will have severe
    impact on the system usability, with 'ip a' blocking for several seconds.
    
    This change places the defer code into a helper and makes it more
    generic so ipv4 and ifdown notifiers can be converted to defer the
    cleanup walk as well in a follow patch.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9d8aa2d3ca8909d79c016e3e4463e6c1efba884
Author: Joshua-Dickens <Joshua@Joshua-Dickens.com>
Date:   Tue Sep 14 13:28:25 2021 -0400

    HID: wacom: Add new Intuos BT (CTL-4100WL/CTL-6100WL) device IDs
    
    [ Upstream commit 0c8fbaa553077630e8eae45bd9676cfc01836aeb ]
    
    Add the new PIDs to wacom_wac.c to support the new models in the Intuos series.
    
    [jkosina@suse.cz: fix changelog]
    Signed-off-by: Joshua Dickens <joshua.dickens@wacom.com>
    Reviewed-by: Ping Cheng <ping.cheng@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c6680025b49f8d4c17e3ebfac5eec38786d59e9
Author: Jeremy Sowden <jeremy@azazel.net>
Date:   Sun Sep 12 22:24:33 2021 +0100

    netfilter: ip6_tables: zero-initialize fragment offset
    
    [ Upstream commit 310e2d43c3ad429c1fba4b175806cf1f55ed73a6 ]
    
    ip6tables only sets the `IP6T_F_PROTO` flag on a rule if a protocol is
    specified (`-p tcp`, for example).  However, if the flag is not set,
    `ip6_packet_match` doesn't call `ipv6_find_hdr` for the skb, in which
    case the fragment offset is left uninitialized and a garbage value is
    passed to each matcher.
    
    Signed-off-by: Jeremy Sowden <jeremy@azazel.net>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 744b908a7f3f1597e1c7d8769a8bb05f7cba2467
Author: Mizuho Mori <morimolymoly@gmail.com>
Date:   Thu Jul 29 20:03:25 2021 +0900

    HID: apple: Fix logical maximum and usage maximum of Magic Keyboard JIS
    
    [ Upstream commit 67fd71ba16a37c663d139f5ba5296f344d80d072 ]
    
    Apple Magic Keyboard(JIS)'s Logical Maximum and Usage Maximum are wrong.
    
    Below is a report descriptor.
    
    0x05, 0x01,         /*  Usage Page (Desktop),                           */
    0x09, 0x06,         /*  Usage (Keyboard),                               */
    0xA1, 0x01,         /*  Collection (Application),                       */
    0x85, 0x01,         /*      Report ID (1),                              */
    0x05, 0x07,         /*      Usage Page (Keyboard),                      */
    0x15, 0x00,         /*      Logical Minimum (0),                        */
    0x25, 0x01,         /*      Logical Maximum (1),                        */
    0x19, 0xE0,         /*      Usage Minimum (KB Leftcontrol),             */
    0x29, 0xE7,         /*      Usage Maximum (KB Right GUI),               */
    0x75, 0x01,         /*      Report Size (1),                            */
    0x95, 0x08,         /*      Report Count (8),                           */
    0x81, 0x02,         /*      Input (Variable),                           */
    0x95, 0x05,         /*      Report Count (5),                           */
    0x75, 0x01,         /*      Report Size (1),                            */
    0x05, 0x08,         /*      Usage Page (LED),                           */
    0x19, 0x01,         /*      Usage Minimum (01h),                        */
    0x29, 0x05,         /*      Usage Maximum (05h),                        */
    0x91, 0x02,         /*      Output (Variable),                          */
    0x95, 0x01,         /*      Report Count (1),                           */
    0x75, 0x03,         /*      Report Size (3),                            */
    0x91, 0x03,         /*      Output (Constant, Variable),                */
    0x95, 0x08,         /*      Report Count (8),                           */
    0x75, 0x01,         /*      Report Size (1),                            */
    0x15, 0x00,         /*      Logical Minimum (0),                        */
    0x25, 0x01,         /*      Logical Maximum (1),                        */
    
    here is a report descriptor which is parsed one in kernel.
    see sys/kernel/debug/hid/<dev>/rdesc
    
    05 01 09 06 a1 01 85 01 05 07
    15 00 25 01 19 e0 29 e7 75 01
    95 08 81 02 95 05 75 01 05 08
    19 01 29 05 91 02 95 01 75 03
    91 03 95 08 75 01 15 00 25 01
    06 00 ff 09 03 81 03 95 06 75
    08 15 00 25 [65] 05 07 19 00 29
    [65] 81 00 95 01 75 01 15 00 25
    01 05 0c 09 b8 81 02 95 01 75
    01 06 01 ff 09 03 81 02 95 01
    75 06 81 03 06 02 ff 09 55 85
    55 15 00 26 ff 00 75 08 95 40
    b1 a2 c0 06 00 ff 09 14 a1 01
    85 90 05 84 75 01 95 03 15 00
    25 01 09 61 05 85 09 44 09 46
    81 02 95 05 81 01 75 08 95 01
    15 00 26 ff 00 09 65 81 02 c0
    00
    
    Position 64(Logical Maximum) and 70(Usage Maximum) are 101.
    Both should be 0xE7 to support JIS specific keys(ろ, Eisu, Kana, |) support.
    position 117 is also 101 but not related(it is Usage 65h).
    
    There are no difference of product id between JIS and ANSI.
    They are same 0x0267.
    
    Signed-off-by: Mizuho Mori <morimolymoly@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6bccc978ec88c1df12c54e2af28417d36a11552
Author: Zhang Yi <yi.zhang@huawei.com>
Date:   Fri Jul 16 20:20:22 2021 +0800

    ext4: correct the error path of ext4_write_inline_data_end()
    
    [ Upstream commit 55ce2f649b9e88111270333a8127e23f4f8f42d7 ]
    
    Current error path of ext4_write_inline_data_end() is not correct.
    
    Firstly, it should pass out the error value if ext4_get_inode_loc()
    return fail, or else it could trigger infinite loop if we inject error
    here. And then it's better to add inode to orphan list if it return fail
    in ext4_journal_stop(), otherwise we could not restore inline xattr
    entry after power failure. Finally, we need to reset the 'ret' value if
    ext4_write_inline_data_end() return success in ext4_write_end() and
    ext4_journalled_write_end(), otherwise we could not get the error return
    value of ext4_journal_stop().
    
    Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Link: https://lore.kernel.org/r/20210716122024.1105856-3-yi.zhang@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de4a28b718bb9f8574d50d3882d7bf861d13d3c2
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Sep 28 13:32:33 2021 -0700

    net: phy: bcm7xxx: Fixed indirect MMD operations
    
    commit d88fd1b546ff19c8040cfaea76bf16aed1c5a0bb upstream.
    
    When EEE support was added to the 28nm EPHY it was assumed that it would
    be able to support the standard clause 45 over clause 22 register access
    method. It turns out that the PHY does not support that, which is the
    very reason for using the indirect shadow mode 2 bank 3 access method.
    
    Implement {read,write}_mmd to allow the standard PHY library routines
    pertaining to EEE querying and configuration to work correctly on these
    PHYs. This forces us to implement a __phy_set_clr_bits() function that
    does not grab the MDIO bus lock since the PHY driver's {read,write}_mmd
    functions are always called with that lock held.
    
    Fixes: 83ee102a6998 ("net: phy: bcm7xxx: add support for 28nm EPHY")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
