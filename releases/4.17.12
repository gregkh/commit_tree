commit 506f6fba269679b77f5e7b71df07ef0bb3013a36
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Aug 3 07:48:07 2018 +0200

    Linux 4.17.12

commit 54babab9098fcc0e875477e699933615f72e41aa
Author: Erik Kaneda <erik.kaneda@intel.com>
Date:   Sat Jul 28 14:05:19 2018 -0700

    ACPICA: AML Parser: ignore control method status in module-level code
    
    commit 460a53106ac39b74625d1104d9a113e0f3716c18 upstream.
    
    Previous change in the AML parser code blindly set all non-successful
    dispatcher statuses to AE_OK. That approach is incorrect, though,
    because successful control method invocations from module-level
    return AE_CTRL_TRANSFER. Overwriting AE_OK to this status causes the
    AML parser to think that there was no return value from the control
    method invocation.
    
    Fixes: 92c0f4af386 (ACPICA: AML Parser: ignore dispatcher error status during table load)
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Tested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Tested-by: Oleksandr Natalenko <oleksandr@natalenko.name>
    Signed-off-by: Erik Schmauss <erik.schmauss@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89db44642f707c9211df9a0359328861e80af4a2
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Jul 26 10:58:20 2018 +0200

    ACPI / LPSS: Avoid PM quirks on suspend and resume from hibernation
    
    commit 12864ff8545f6b8144fdf1bb89b5663357f29ec4 upstream.
    
    Commit a09c59130688 (ACPI / LPSS: Avoid PM quirks on suspend and
    resume from S3) modified the ACPI driver for Intel SoCs (LPSS) to
    avoid applying PM quirks on suspend and resume from S3 to address
    system-wide suspend and resume problems on some systems, but it is
    reported that the same issue also affects hibernation, so extend
    the approach used by that commit to cover hibernation as well.
    
    Fixes: a09c59130688 (ACPI / LPSS: Avoid PM quirks on suspend and resume from S3)
    Link: https://bugs.launchpad.net/bugs/1774950
    Reported-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: 4.15+ <stable@vger.kernel.org> # 4.15+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b3610883fa58662c9fc422b4e0559dddea4a50c
Author: Lawrence Brakmo <brakmo@fb.com>
Date:   Mon Jul 23 17:49:39 2018 -0700

    tcp: ack immediately when a cwr packet arrives
    
    [ Upstream commit 9aee40006190a3cda9a4d2dbae71e92617c8c362 ]
    
    We observed high 99 and 99.9% latencies when doing RPCs with DCTCP. The
    problem is triggered when the last packet of a request arrives CE
    marked. The reply will carry the ECE mark causing TCP to shrink its cwnd
    to 1 (because there are no packets in flight). When the 1st packet of
    the next request arrives, the ACK was sometimes delayed even though it
    is CWR marked, adding up to 40ms to the RPC latency.
    
    This patch insures that CWR marked data packets arriving will be acked
    immediately.
    
    Packetdrill script to reproduce the problem:
    
    0.000 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
    0.000 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
    0.000 setsockopt(3, SOL_TCP, TCP_CONGESTION, "dctcp", 5) = 0
    0.000 bind(3, ..., ...) = 0
    0.000 listen(3, 1) = 0
    
    0.100 < [ect0] SEW 0:0(0) win 32792 <mss 1000,sackOK,nop,nop,nop,wscale 7>
    0.100 > SE. 0:0(0) ack 1 <mss 1460,nop,nop,sackOK,nop,wscale 8>
    0.110 < [ect0] . 1:1(0) ack 1 win 257
    0.200 accept(3, ..., ...) = 4
    
    0.200 < [ect0] . 1:1001(1000) ack 1 win 257
    0.200 > [ect01] . 1:1(0) ack 1001
    
    0.200 write(4, ..., 1) = 1
    0.200 > [ect01] P. 1:2(1) ack 1001
    
    0.200 < [ect0] . 1001:2001(1000) ack 2 win 257
    0.200 write(4, ..., 1) = 1
    0.200 > [ect01] P. 2:3(1) ack 2001
    
    0.200 < [ect0] . 2001:3001(1000) ack 3 win 257
    0.200 < [ect0] . 3001:4001(1000) ack 3 win 257
    0.200 > [ect01] . 3:3(0) ack 4001
    
    0.210 < [ce] P. 4001:4501(500) ack 3 win 257
    
    +0.001 read(4, ..., 4500) = 4500
    +0 write(4, ..., 1) = 1
    +0 > [ect01] PE. 3:4(1) ack 4501
    
    +0.010 < [ect0] W. 4501:5501(1000) ack 4 win 257
    // Previously the ACK sequence below would be 4501, causing a long RTO
    +0.040~+0.045 > [ect01] . 4:4(0) ack 5501   // delayed ack
    
    +0.311 < [ect0] . 5501:6501(1000) ack 4 win 257  // More data
    +0 > [ect01] . 4:4(0) ack 6501     // now acks everything
    
    +0.500 < F. 9501:9501(0) ack 4 win 257
    
    Modified based on comments by Neal Cardwell <ncardwell@google.com>
    
    Signed-off-by: Lawrence Brakmo <brakmo@fb.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b98838f41e2005b62a56fa06ac30f1a35d512ecc
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jun 27 08:47:21 2018 -0700

    tcp: add one more quick ack after after ECN events
    
    [ Upstream commit 15ecbe94a45ef88491ca459b26efdd02f91edb6d ]
    
    Larry Brakmo proposal ( https://patchwork.ozlabs.org/patch/935233/
    tcp: force cwnd at least 2 in tcp_cwnd_reduction) made us rethink
    about our recent patch removing ~16 quick acks after ECN events.
    
    tcp_enter_quickack_mode(sk, 1) makes sure one immediate ack is sent,
    but in the case the sender cwnd was lowered to 1, we do not want
    to have a delayed ack for the next packet we will receive.
    
    Fixes: 522040ea5fdd ("tcp: do not aggressively quick ack after ECN events")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Neal Cardwell <ncardwell@google.com>
    Cc: Lawrence Brakmo <brakmo@fb.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04a7cf23ff9a93f0ac53708b03cf1aaebb171264
Author: Yousuk Seung <ysseung@google.com>
Date:   Mon Jun 4 15:29:51 2018 -0700

    tcp: refactor tcp_ecn_check_ce to remove sk type cast
    
    [ Upstream commit f4c9f85f3b2cb7669830cd04d0be61192a4d2436 ]
    
    Refactor tcp_ecn_check_ce and __tcp_ecn_check_ce to accept struct sock*
    instead of tcp_sock* to clean up type casts. This is a pure refactor
    patch.
    
    Signed-off-by: Yousuk Seung <ysseung@google.com>
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d90f13b0751b5ac60916ce04a9f72183c30ec96d
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon May 21 15:08:57 2018 -0700

    tcp: do not aggressively quick ack after ECN events
    
    [ Upstream commit 522040ea5fdd1c33bbf75e1d7c7c0422b96a94ef ]
    
    ECN signals currently forces TCP to enter quickack mode for
    up to 16 (TCP_MAX_QUICKACKS) following incoming packets.
    
    We believe this is not needed, and only sending one immediate ack
    for the current packet should be enough.
    
    This should reduce the extra load noticed in DCTCP environments,
    after congestion events.
    
    This is part 2 of our effort to reduce pure ACK packets.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8893617eeb196a6a13ff87bbbd143e11fa4965a8
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon May 21 15:08:56 2018 -0700

    tcp: add max_quickacks param to tcp_incr_quickack and tcp_enter_quickack_mode
    
    [ Upstream commit 9a9c9b51e54618861420093ae6e9b50a961914c5 ]
    
    We want to add finer control of the number of ACK packets sent after
    ECN events.
    
    This patch is not changing current behavior, it only enables following
    change.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26318452131f18ad220332d9eca194943b2b51f8
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu May 17 14:47:25 2018 -0700

    tcp: do not force quickack when receiving out-of-order packets
    
    [ Upstream commit a3893637e1eb0ef5eb1bbc52b3a8d2dfa317a35d ]
    
    As explained in commit 9f9843a751d0 ("tcp: properly handle stretch
    acks in slow start"), TCP stacks have to consider how many packets
    are acknowledged in one single ACK, because of GRO, but also
    because of ACK compression or losses.
    
    We plan to add SACK compression in the following patch, we
    must therefore not call tcp_enter_quickack_mode()
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc73f8ae16dbc6371256baa3f9c2eb5963101864
Author: Dmitry Safonov <0x7f454c46@gmail.com>
Date:   Mon Jul 30 18:32:36 2018 +0100

    netlink: Don't shift with UB on nlk->ngroups
    
    [ Upstream commit 61f4b23769f0cc72ae62c9a81cf08f0397d40da8 ]
    
    On i386 nlk->ngroups might be 32 or 0. Which leads to UB, resulting in
    hang during boot.
    Check for 0 ngroups and use (unsigned long long) as a type to shift.
    
    Fixes: 7acf9d4237c4 ("netlink: Do not subscribe to non-existent groups").
    Reported-by: kernel test robot <rong.a.chen@intel.com>
    Signed-off-by: Dmitry Safonov <dima@arista.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc3364865d978bfa7b83c9fb2ba74a38500cc090
Author: Dmitry Safonov <0x7f454c46@gmail.com>
Date:   Fri Jul 27 16:54:44 2018 +0100

    netlink: Do not subscribe to non-existent groups
    
    [ Upstream commit 7acf9d4237c46894e0fa0492dd96314a41742e84 ]
    
    Make ABI more strict about subscribing to group > ngroups.
    Code doesn't check for that and it looks bogus.
    (one can subscribe to non-existing group)
    Still, it's possible to bind() to all possible groups with (-1)
    
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Cc: netdev@vger.kernel.org
    Signed-off-by: Dmitry Safonov <dima@arista.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 469bda04fc892f99af71d3b973c583dffe159bdc
Author: Tariq Toukan <tariqt@mellanox.com>
Date:   Tue Jul 24 14:12:20 2018 +0300

    net: rollback orig value on failure of dev_qdisc_change_tx_queue_len
    
    [ Upstream commit 7effaf06c3cdef6855e127886c7405b9ab62f90d ]
    
    Fix dev_change_tx_queue_len so it rolls back original value
    upon a failure in dev_qdisc_change_tx_queue_len.
    This is already done for notifirers' failures, share the code.
    
    In case of failure in dev_qdisc_change_tx_queue_len, some tx queues
    would still be of the new length, while they should be reverted.
    Currently, the revert is not done, and is marked with a TODO label
    in dev_qdisc_change_tx_queue_len, and should find some nice solution
    to do it.
    Yet it is still better to not apply the newly requested value.
    
    Fixes: 48bfd55e7e41 ("net_sched: plug in qdisc ops change_tx_queue_len")
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
    Reported-by: Ran Rozenstein <ranro@mellanox.com>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d685bbf1acf724d9479593dc886e10202eda0c04
Author: Arjun Vynipadath <arjun@chelsio.com>
Date:   Wed Jul 25 19:39:52 2018 +0530

    cxgb4: Added missing break in ndo_udp_tunnel_{add/del}
    
    [ Upstream commit 942a656f1f228f06a37adad0e6c347773cfe7bd6 ]
    
    Break statements were missing for Geneve case in
    ndo_udp_tunnel_{add/del}, thereby raw mac matchall
    entries were not getting added.
    
    Fixes: c746fc0e8b2d("cxgb4: add geneve offload support for T6")
    Signed-off-by: Arjun Vynipadath <arjun@chelsio.com>
    Signed-off-by: Ganesh Goudar <ganeshgr@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8cd998af04a3cfb710f40037f140a2e4dcacd583
Author: Xiao Liang <xiliang@redhat.com>
Date:   Fri Jul 27 17:56:08 2018 +0800

    xen-netfront: wait xenbus state change when load module manually
    
    [ Upstream commit 822fb18a82abaf4ee7058793d95d340f5dab7bfc ]
    
    When loading module manually, after call xenbus_switch_state to initializes
    the state of the netfront device, the driver state did not change so fast
    that may lead no dev created in latest kernel. This patch adds wait to make
    sure xenbus knows the driver is not in closed/unknown state.
    
    Current state:
    [vm]# ethtool eth0
    Settings for eth0:
            Link detected: yes
    [vm]# modprobe -r xen_netfront
    [vm]# modprobe  xen_netfront
    [vm]# ethtool eth0
    Settings for eth0:
    Cannot get device settings: No such device
    Cannot get wake-on-lan settings: No such device
    Cannot get message level: No such device
    Cannot get link status: No such device
    No data available
    
    With the patch installed.
    [vm]# ethtool eth0
    Settings for eth0:
            Link detected: yes
    [vm]# modprobe -r xen_netfront
    [vm]# modprobe xen_netfront
    [vm]# ethtool eth0
    Settings for eth0:
            Link detected: yes
    
    Signed-off-by: Xiao Liang <xiliang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c42c0bfd065cda8ee87b8455af1d18814a79177
Author: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
Date:   Mon Jul 23 23:36:04 2018 +0900

    virtio_net: Fix incosistent received bytes counter
    
    [ Upstream commit ecbc42ca5d665e9238a4cdb595024d2e6cf87f2d ]
    
    When received packets are dropped in virtio_net driver, received packets
    counter is incremented but bytes counter is not.
    As a result, for instance if we drop all packets by XDP, only received
    is counted and bytes stays 0, which looks inconsistent.
    IMHO received packets/bytes should be counted if packets are produced by
    the hypervisor, like what common NICs on physical machines are doing.
    So fix the bytes counter.
    
    Signed-off-by: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a21b4b34c8901916bb525e531584b3d475af912f
Author: Neal Cardwell <ncardwell@google.com>
Date:   Fri Jul 27 17:19:12 2018 -0400

    tcp_bbr: fix bw probing to raise in-flight data for very small BDPs
    
    [ Upstream commit 383d470936c05554219094a4d364d964cb324827 ]
    
    For some very small BDPs (with just a few packets) there was a
    quantization effect where the target number of packets in flight
    during the super-unity-gain (1.25x) phase of gain cycling was
    implicitly truncated to a number of packets no larger than the normal
    unity-gain (1.0x) phase of gain cycling. This meant that in multi-flow
    scenarios some flows could get stuck with a lower bandwidth, because
    they did not push enough packets inflight to discover that there was
    more bandwidth available. This was really only an issue in multi-flow
    LAN scenarios, where RTTs and BDPs are low enough for this to be an
    issue.
    
    This fix ensures that gain cycling can raise inflight for small BDPs
    by ensuring that in PROBE_BW mode target inflight values with a
    super-unity gain are always greater than inflight values with a gain
    <= 1. Importantly, this applies whether the inflight value is
    calculated for use as a cwnd value, or as a target inflight value for
    the end of the super-unity phase in bbr_is_next_cycle_phase() (both
    need to be bigger to ensure we can probe with more packets in flight
    reliably).
    
    This is a candidate fix for stable releases.
    
    Fixes: 0f8782ea1497 ("tcp_bbr: add BBR congestion control")
    Signed-off-by: Neal Cardwell <ncardwell@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Acked-by: Priyaranjan Jha <priyarjha@google.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb2a0a6c164d55ed09a0c682a16d8234942bce92
Author: Avinash Repaka <avinash.repaka@oracle.com>
Date:   Tue Jul 24 20:31:58 2018 -0700

    RDS: RDMA: Fix the NULL-ptr deref in rds_ib_get_mr
    
    [ Upstream commit 9e630bcb7701f94dbd729fe57d37c089c763ad9f ]
    
    Registration of a memory region(MR) through FRMR/fastreg(unlike FMR)
    needs a connection/qp. With a proxy qp, this dependency on connection
    will be removed, but that needs more infrastructure patches, which is a
    work in progress.
    
    As an intermediate fix, the get_mr returns EOPNOTSUPP when connection
    details are not populated. The MR registration through sendmsg() will
    continue to work even with fast registration, since connection in this
    case is formed upfront.
    
    This patch fixes the following crash:
    kasan: GPF could be caused by NULL-ptr deref or user memory access
    general protection fault: 0000 [#1] SMP KASAN
    Modules linked in:
    CPU: 1 PID: 4244 Comm: syzkaller468044 Not tainted 4.16.0-rc6+ #361
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    RIP: 0010:rds_ib_get_mr+0x5c/0x230 net/rds/ib_rdma.c:544
    RSP: 0018:ffff8801b059f890 EFLAGS: 00010202
    RAX: dffffc0000000000 RBX: ffff8801b07e1300 RCX: ffffffff8562d96e
    RDX: 000000000000000d RSI: 0000000000000001 RDI: 0000000000000068
    RBP: ffff8801b059f8b8 R08: ffffed0036274244 R09: ffff8801b13a1200
    R10: 0000000000000004 R11: ffffed0036274243 R12: ffff8801b13a1200
    R13: 0000000000000001 R14: ffff8801ca09fa9c R15: 0000000000000000
    FS:  00007f4d050af700(0000) GS:ffff8801db300000(0000)
    knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f4d050aee78 CR3: 00000001b0d9b006 CR4: 00000000001606e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     __rds_rdma_map+0x710/0x1050 net/rds/rdma.c:271
     rds_get_mr_for_dest+0x1d4/0x2c0 net/rds/rdma.c:357
     rds_setsockopt+0x6cc/0x980 net/rds/af_rds.c:347
     SYSC_setsockopt net/socket.c:1849 [inline]
     SyS_setsockopt+0x189/0x360 net/socket.c:1828
     do_syscall_64+0x281/0x940 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x4456d9
    RSP: 002b:00007f4d050aedb8 EFLAGS: 00000246 ORIG_RAX: 0000000000000036
    RAX: ffffffffffffffda RBX: 00000000006dac3c RCX: 00000000004456d9
    RDX: 0000000000000007 RSI: 0000000000000114 RDI: 0000000000000004
    RBP: 00000000006dac38 R08: 00000000000000a0 R09: 0000000000000000
    R10: 0000000020000380 R11: 0000000000000246 R12: 0000000000000000
    R13: 00007fffbfb36d6f R14: 00007f4d050af9c0 R15: 0000000000000005
    Code: fa 48 c1 ea 03 80 3c 02 00 0f 85 cc 01 00 00 4c 8b bb 80 04 00 00
    48
    b8 00 00 00 00 00 fc ff df 49 8d 7f 68 48 89 fa 48 c1 ea 03 <80> 3c 02
    00 0f
    85 9c 01 00 00 4d 8b 7f 68 48 b8 00 00 00 00 00
    RIP: rds_ib_get_mr+0x5c/0x230 net/rds/ib_rdma.c:544 RSP:
    ffff8801b059f890
    ---[ end trace 7e1cea13b85473b0 ]---
    
    Reported-by: syzbot+b51c77ef956678a65834@syzkaller.appspotmail.com
    Signed-off-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: Avinash Repaka <avinash.repaka@oracle.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77629161f025b873d7b4b1713d58896bfe794b9d
Author: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
Date:   Thu Jul 26 15:05:37 2018 +0300

    NET: stmmac: align DMA stuff to largest cache line length
    
    [ Upstream commit 9939a46d90c6c76f4533d534dbadfa7b39dc6acc ]
    
    As for today STMMAC_ALIGN macro (which is used to align DMA stuff)
    relies on L1 line length (L1_CACHE_BYTES).
    This isn't correct in case of system with several cache levels
    which might have L1 cache line length smaller than L2 line. This
    can lead to sharing one cache line between DMA buffer and other
    data, so we can lose this data while invalidate DMA buffer before
    DMA transaction.
    
    Fix that by using SMP_CACHE_BYTES instead of L1_CACHE_BYTES for
    aligning.
    
    Signed-off-by: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71e5f4e1ea18879f44c2447ce7d1eb2313b330bd
Author: Anton Vasilyev <vasilyev@ispras.ru>
Date:   Fri Jul 27 18:57:47 2018 +0300

    net: mdio-mux: bcm-iproc: fix wrong getter and setter pair
    
    [ Upstream commit b0753408aadf32c7ece9e6b765017881e54af833 ]
    
    mdio_mux_iproc_probe() uses platform_set_drvdata() to store md pointer
    in device, whereas mdio_mux_iproc_remove() restores md pointer by
    dev_get_platdata(&pdev->dev). This leads to wrong resources release.
    
    The patch replaces getter to platform_get_drvdata.
    
    Fixes: 98bc865a1ec8 ("net: mdio-mux: Add MDIO mux driver for iProc SoCs")
    Signed-off-by: Anton Vasilyev <vasilyev@ispras.ru>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 967868627207c34298c6fe59f12a1ab3f8aba0b4
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Sat Jul 28 09:52:10 2018 +0200

    net: lan78xx: fix rx handling before first packet is send
    
    [ Upstream commit 136f55f660192ce04af091642efc75d85e017364 ]
    
    As long the bh tasklet isn't scheduled once, no packet from the rx path
    will be handled. Since the tx path also schedule the same tasklet
    this situation only persits until the first packet transmission.
    So fix this issue by scheduling the tasklet after link reset.
    
    Link: https://github.com/raspberrypi/linux/issues/2617
    Fixes: 55d7de9de6c3 ("Microchip's LAN7800 family USB 2/3 to 10/100/1000 Ethernet")
    Suggested-by: Floris Bos <bos@je-eigen-domein.nl>
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db610cdfa9565b11ff760b72471d0c8a8eaec0e8
Author: tangpengpeng <tangpengpeng@higon.com>
Date:   Thu Jul 26 14:45:16 2018 +0800

    net: fix amd-xgbe flow-control issue
    
    [ Upstream commit 7f3fc7ddf719cd6faaf787722c511f6918ac6aab ]
    
    If we enable or disable xgbe flow-control by ethtool ,
    it does't work.Because the parameter is not properly
    assigned,so we need to adjust the assignment order
    of the parameters.
    
    Fixes: c1ce2f77366b ("amd-xgbe: Fix flow control setting logic")
    Signed-off-by: tangpengpeng <tangpengpeng@higon.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 780ce03df1de34b2d4e1b8ab03ac9d0a7c56e020
Author: Gal Pressman <pressmangal@gmail.com>
Date:   Thu Jul 26 23:40:33 2018 +0300

    net: ena: Fix use of uninitialized DMA address bits field
    
    [ Upstream commit 101f0cd4f2216d32f1b8a75a2154cf3997484ee2 ]
    
    UBSAN triggers the following undefined behaviour warnings:
    [...]
    [   13.236124] UBSAN: Undefined behaviour in drivers/net/ethernet/amazon/ena/ena_eth_com.c:468:22
    [   13.240043] shift exponent 64 is too large for 64-bit type 'long long unsigned int'
    [...]
    [   13.744769] UBSAN: Undefined behaviour in drivers/net/ethernet/amazon/ena/ena_eth_com.c:373:4
    [   13.748694] shift exponent 64 is too large for 64-bit type 'long long unsigned int'
    [...]
    
    When splitting the address to high and low, GENMASK_ULL is used to generate
    a bitmask with dma_addr_bits field from io_sq (in ena_com_prepare_tx and
    ena_com_add_single_rx_desc).
    The problem is that dma_addr_bits is not initialized with a proper value
    (besides being cleared in ena_com_create_io_queue).
    Assign dma_addr_bits the correct value that is stored in ena_dev when
    initializing the SQ.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Gal Pressman <pressmangal@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f2634dd58115cb516290f49c6d448db0247ff45
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Jul 25 15:39:27 2018 -0700

    netdevsim: don't leak devlink resources
    
    [ Upstream commit c259b4fb33ee6e7667bf1d34bf0803b7c5fdbdce ]
    
    Devlink resources registered with devlink_resource_register() have
    to be unregistered.
    
    Fixes: 37923ed6b8ce ("netdevsim: Add simple FIB resource controller via devlink")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Quentin Monnet <quentin.monnet@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11f8d2a65692fe727dfa4a53c0d2ff0a7d56c4a8
Author: Lorenzo Bianconi <lorenzo.bianconi@redhat.com>
Date:   Fri Jul 27 18:15:46 2018 +0200

    ipv4: remove BUG_ON() from fib_compute_spec_dst
    
    [ Upstream commit 9fc12023d6f51551d6ca9ed7e02ecc19d79caf17 ]
    
    Remove BUG_ON() from fib_compute_spec_dst routine and check
    in_dev pointer during flowi4 data structure initialization.
    fib_compute_spec_dst routine can be run concurrently with device removal
    where ip_ptr net_device pointer is set to NULL. This can happen
    if userspace enables pkt info on UDP rx socket and the device
    is removed while traffic is flowing
    
    Fixes: 35ebf65e851c ("ipv4: Create and use fib_compute_spec_dst() helper")
    Signed-off-by: Lorenzo Bianconi <lorenzo.bianconi@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1eb99afb655b9ac26108f8e50e1af24e9be3ad80
Author: Michal Vokáč <vokac.m@gmail.com>
Date:   Wed May 23 08:20:22 2018 +0200

    net: dsa: qca8k: Allow overwriting CPU port setting
    
    commit 9bb2289f90e671bdb78e306974187424ac19ff8e upstream.
    
    Implement adjust_link function that allows to overwrite default CPU port
    setting using fixed-link device tree subnode.
    
    Signed-off-by: Michal Vokáč <michal.vokac@ysoft.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02ccbb263eef5f4487f1af2479c15bfc0b82bff3
Author: Michal Vokáč <vokac.m@gmail.com>
Date:   Wed May 23 08:20:18 2018 +0200

    net: dsa: qca8k: Add QCA8334 binding documentation
    
    commit 218bbea11a777c156eb7bcbdc72867b32ae10985 upstream.
    
    Add support for the four-port variant of the Qualcomm QCA833x switch.
    
    The CPU port default link settings can be reconfigured using
    a fixed-link sub-node.
    
    Signed-off-by: Michal Vokáč <michal.vokac@ysoft.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8760d052c55e012953e83778f034d7d0292fda3
Author: Michal Vokáč <vokac.m@gmail.com>
Date:   Wed May 23 08:20:20 2018 +0200

    net: dsa: qca8k: Enable RXMAC when bringing up a port
    
    commit eee1fe64765c562d8bcaf95e5631a8ea2f760f34 upstream.
    
    When a port is brought up/down do not enable/disable only the TXMAC
    but the RXMAC as well. This is essential for the CPU port to work.
    
    Fixes: 6b93fb46480a ("net-next: dsa: add new driver for qca8xxx family")
    Signed-off-by: Michal Vokáč <michal.vokac@ysoft.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef405a8c14315113dc6772c6d394fb859b899036
Author: Michal Vokáč <vokac.m@gmail.com>
Date:   Wed May 23 08:20:21 2018 +0200

    net: dsa: qca8k: Force CPU port to its highest bandwidth
    
    commit 79a4ed4f0f93fc65e48a0fc5247ffa5645f7b0cc upstream.
    
    By default autonegotiation is enabled to configure MAC on all ports.
    For the CPU port autonegotiation can not be used so we need to set
    some sensible defaults manually.
    
    This patch forces the default setting of the CPU port to 1000Mbps/full
    duplex which is the chip maximum capability.
    
    Also correct size of the bit field used to configure link speed.
    
    Fixes: 6b93fb46480a ("net-next: dsa: add new driver for qca8xxx family")
    Signed-off-by: Michal Vokáč <michal.vokac@ysoft.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36d1eff3591b7d206c42c6b504ba67392f0e13ca
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Jun 24 11:23:42 2018 +0300

    RDMA/uverbs: Protect from attempts to create flows on unsupported QP
    
    commit 940efcc8889f0d15567eb07fc9fd69b06e366aa5 upstream.
    
    Flows can be created on UD and RAW_PACKET QP types. Attempts to provide
    other QP types as an input causes to various unpredictable failures.
    
    The reason is that in order to support all various types (e.g. XRC), we
    are supposed to use real_qp handle and not qp handle and expect to
    driver/FW to fail such (XRC) flows. The simpler and safer variant is to
    ban all QP types except UD and RAW_PACKET, instead of relying on
    driver/FW.
    
    Cc: <stable@vger.kernel.org> # 3.11
    Fixes: 436f2ad05a0b ("IB/core: Export ib_create/destroy_flow through uverbs")
    Cc: syzkaller <syzkaller@googlegroups.com>
    Reported-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6645b869f959e28ba41a3058782dc7cd0faa8596
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Thu Jun 14 14:27:45 2018 +0900

    gpio: uniphier: set legitimate irq trigger type in .to_irq hook
    
    commit bbfbf04c2d4ef673f657175456f6693c9225748a upstream.
    
    If a GPIO chip is a part of a hierarchy IRQ domain, there is no
    way to specify the trigger type when gpio(d)_to_irq() allocates an
    interrupt on-the-fly.
    
    Currently, uniphier_gpio_to_irq() sets IRQ_TYPE_NONE, but it causes
    an error in the .alloc() hook of the parent domain.
    (drivers/irq/irq-uniphier-aidet.c)
    
    Even if we change irq-uniphier-aidet.c to accept the NONE type,
    GIC complains about it since commit 83a86fbb5b56 ("irqchip/gic:
    Loudly complain about the use of IRQ_TYPE_NONE").
    
    Instead, use IRQ_TYPE_LEVEL_HIGH as a temporary value when an irq
    is allocated.  irq_set_irq_type() will override it when the irq is
    really requested.
    
    Fixes: dbe776c2ca54 ("gpio: uniphier: add UniPhier GPIO controller driver")
    Reported-by: Katsuhiro Suzuki <suzuki.katsuhiro@socionext.com>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Tested-by: Katsuhiro Suzuki <suzuki.katsuhiro@socionext.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33d553b27bd57362af25d292bea4dffcf094685c
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Jun 11 15:11:41 2018 +0200

    gpio: of: Handle fixed regulator flags properly
    
    commit 906402a44b5d090e9c330c562b8aa65c80790ccc upstream.
    
    This fixes up the handling of fixed regulator polarity
    inversion flags: while I remembered to fix it for the
    undocumented "reg-fixed-voltage" I forgot about the
    official "regulator-fixed" binding, there are two ways
    to do a fixed regulator.
    
    The error was noticed and fixed.
    
    Fixes: a603a2b8d86e ("gpio: of: Add special quirk to parse regulator flags")
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Thierry Reding <thierry.reding@gmail.com>
    Reported-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f668f6ef2b51242c15b770f01ae2239ed8d8ee91
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sat Jul 28 08:12:04 2018 -0400

    ext4: fix check to prevent initializing reserved inodes
    
    commit 5012284700775a4e6e3fbe7eac4c543c4874b559 upstream.
    
    Commit 8844618d8aa7: "ext4: only look at the bg_flags field if it is
    valid" will complain if block group zero does not have the
    EXT4_BG_INODE_ZEROED flag set.  Unfortunately, this is not correct,
    since a freshly created file system has this flag cleared.  It gets
    almost immediately after the file system is mounted read-write --- but
    the following somewhat unlikely sequence will end up triggering a
    false positive report of a corrupted file system:
    
       mkfs.ext4 /dev/vdc
       mount -o ro /dev/vdc /vdc
       mount -o remount,rw /dev/vdc
    
    Instead, when initializing the inode table for block group zero, test
    to make sure that itable_unused count is not too large, since that is
    the case that will result in some or all of the reserved inodes
    getting cleared.
    
    This fixes the failures reported by Eric Whiteney when running
    generic/230 and generic/231 in the the nojournal test case.
    
    Fixes: 8844618d8aa7 ("ext4: only look at the bg_flags field if it is valid")
    Reported-by: Eric Whitney <enwlinux@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8062ee9cbb311cf720a278daceab2d8060184c04
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Jul 12 19:08:05 2018 -0400

    ext4: check for allocation block validity with block group locked
    
    commit 8d5a803c6a6ce4ec258e31f76059ea5153ba46ef upstream.
    
    With commit 044e6e3d74a3: "ext4: don't update checksum of new
    initialized bitmaps" the buffer valid bit will get set without
    actually setting up the checksum for the allocation bitmap, since the
    checksum will get calculated once we actually allocate an inode or
    block.
    
    If we are doing this, then we need to (re-)check the verified bit
    after we take the block group lock.  Otherwise, we could race with
    another process reading and verifying the bitmap, which would then
    complain about the checksum being invalid.
    
    https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1780137
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78cd6a047da8fe55a1f718d9403f97f9bc3083f1
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Tue Jul 10 01:07:43 2018 -0400

    ext4: fix inline data updates with checksums enabled
    
    commit 362eca70b53389bddf3143fe20f53dcce2cfdf61 upstream.
    
    The inline data code was updating the raw inode directly; this is
    problematic since if metadata checksums are enabled,
    ext4_mark_inode_dirty() must be called to update the inode's checksum.
    In addition, the jbd2 layer requires that get_write_access() be called
    before the metadata buffer is modified.  Fix both of these problems.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=200443
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56ac8b3c5b4936e0533e83995b56f0552264a54a
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sun Jul 8 19:35:02 2018 -0400

    ext4: fix false negatives *and* false positives in ext4_check_descriptors()
    
    commit 44de022c4382541cebdd6de4465d1f4f465ff1dd upstream.
    
    Ext4_check_descriptors() was getting called before s_gdb_count was
    initialized.  So for file systems w/o the meta_bg feature, allocation
    bitmaps could overlap the block group descriptors and ext4 wouldn't
    notice.
    
    For file systems with the meta_bg feature enabled, there was a
    fencepost error which would cause the ext4_check_descriptors() to
    incorrectly believe that the block allocation bitmap overlaps with the
    block group descriptor blocks, and it would reject the mount.
    
    Fix both of these problems.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1273d1f1c43413ce9f3cc92190c11efd7703685b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jul 29 12:44:46 2018 -0700

    squashfs: be more careful about metadata corruption
    
    commit 01cfb7937a9af2abb1136c7e89fbf3fd92952956 upstream.
    
    Anatoly Trosinenko reports that a corrupted squashfs image can cause a
    kernel oops.  It turns out that squashfs can end up being confused about
    negative fragment lengths.
    
    The regular squashfs_read_data() does check for negative lengths, but
    squashfs_read_metadata() did not, and the fragment size code just
    blindly trusted the on-disk value.  Fix both the fragment parsing and
    the metadata reading code.
    
    Reported-by: Anatoly Trosinenko <anatoly.trosinenko@gmail.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Phillip Lougher <phillip@squashfs.org.uk>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0c1006b354ce44eeada03f8bc9ac68de3bbc454
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sat Jul 14 23:55:57 2018 -0400

    random: mix rdrand with entropy sent in from userspace
    
    commit 81e69df38e2911b642ec121dec319fad2a4782f3 upstream.
    
    Fedora has integrated the jitter entropy daemon to work around slow
    boot problems, especially on VM's that don't support virtio-rng:
    
        https://bugzilla.redhat.com/show_bug.cgi?id=1572944
    
    It's understandable why they did this, but the Jitter entropy daemon
    works fundamentally on the principle: "the CPU microarchitecture is
    **so** complicated and we can't figure it out, so it *must* be
    random".  Yes, it uses statistical tests to "prove" it is secure, but
    AES_ENCRYPT(NSA_KEY, COUNTER++) will also pass statistical tests with
    flying colors.
    
    So if RDRAND is available, mix it into entropy submitted from
    userspace.  It can't hurt, and if you believe the NSA has backdoored
    RDRAND, then they probably have enough details about the Intel
    microarchitecture that they can reverse engineer how the Jitter
    entropy daemon affects the microarchitecture, and attack its output
    stream.  And if RDRAND is in fact an honest DRNG, it will immeasurably
    improve on what the Jitter entropy daemon might produce.
    
    This also provides some protection against someone who is able to read
    or set the entropy seed file.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae7b02e0806594bc050c5de35b60c03aff0e2d4e
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Thu Jun 28 22:45:38 2018 +0200

    i2c: rcar: handle RXDMA HW behaviour on Gen3
    
    commit 2b16fd63059ab9a46d473620749672dc342e1d21 upstream.
    
    On Gen3, we can only do RXDMA once per transfer reliably. For that, we
    must reset the device, then we can have RXDMA once. This patch
    implements this. When there is no reset controller or the reset fails,
    RXDMA will be blocked completely. Otherwise, it will be disabled after
    the first RXDMA transfer. Based on a commit from the BSP by Hiromitsu
    Yamasaki, yet completely refactored to handle multiple read messages
    within one transfer.
    
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eabee58e7f2b800142ba0278c91f2ab3849a8a6b
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Jul 16 14:38:14 2018 -0700

    nvmet-fc: fix target sgl list on large transfers
    
    commit d082dc1562a2ff0947b214796f12faaa87e816a9 upstream.
    
    The existing code to carve up the sg list expected an sg element-per-page
    which can be very incorrect with iommu's remapping multiple memory pages
    to fewer bus addresses. To hit this error required a large io payload
    (greater than 256k) and a system that maps on a per-page basis. It's
    possible that large ios could get by fine if the system condensed the
    sgl list into the first 64 elements.
    
    This patch corrects the sg list handling by specifically walking the
    sg list element by element and attempting to divide the transfer up
    on a per-sg element boundary. While doing so, it still tries to keep
    sequences under 256k, but will exceed that rule if a single sg element
    is larger than 256k.
    
    Fixes: 48fa362b6c3f ("nvmet-fc: simplify sg list handling")
    Cc: <stable@vger.kernel.org> # 4.14
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5e451d30d00dd63550552ce6f55c2a1e60b752c
Author: Greg Edwards <gedwards@ddn.com>
Date:   Thu Jul 26 14:39:37 2018 -0400

    block: reset bi_iter.bi_done after splitting bio
    
    commit 5151842b9d8732d4cbfa8400b40bff894f501b2f upstream.
    
    After the bio has been updated to represent the remaining sectors, reset
    bi_done so bio_rewind_iter() does not rewind further than it should.
    
    This resolves a bio_integrity_process() failure on reads where the
    original request was split.
    
    Fixes: 63573e359d05 ("bio-integrity: Restore original iterator on verify stage")
    Signed-off-by: Greg Edwards <gedwards@ddn.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93ba679354cf9a9a6a9ea9b62cad227e1b71ac09
Author: Martin Wilck <mwilck@suse.com>
Date:   Wed Jul 25 23:15:08 2018 +0200

    blkdev: __blkdev_direct_IO_simple: fix leak in error case
    
    commit 9362dd1109f87a9d0a798fbc890cb339c171ed35 upstream.
    
    Fixes: 72ecad22d9f1 ("block: support a full bio worth of IO for simplified bdev direct-io")
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin Wilck <mwilck@suse.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c08cdf9b5ffdbeed136b171afa35771c7ffba4f7
Author: Martin Wilck <mwilck@suse.com>
Date:   Wed Jul 25 23:15:07 2018 +0200

    block: bio_iov_iter_get_pages: fix size of last iovec
    
    commit b403ea2404889e1227812fa9657667a1deb9c694 upstream.
    
    If the last page of the bio is not "full", the length of the last
    vector slot needs to be corrected. This slot has the index
    (bio->bi_vcnt - 1), but only in bio->bi_io_vec. In the "bv" helper
    array, which is shifted by the value of bio->bi_vcnt at function
    invocation, the correct index is (nr_pages - 1).
    
    v2: improved readability following suggestions from Ming Lei.
    v3: followed a formatting suggestion from Christoph Hellwig.
    
    Fixes: 2cefe4dbaadf ("block: add bio_iov_iter_get_pages()")
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin Wilck <mwilck@suse.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09e3b44aeaac9e0fe575ba17d360fd4803382d02
Author: Felix Kuehling <Felix.Kuehling@amd.com>
Date:   Fri Mar 23 15:32:30 2018 -0400

    drm/amdgpu: Avoid reclaim while holding locks taken in MMU notifier
    
    [ Upstream commit 6e08e0995b8f339fd2a7ee4fa11f17396405ef60 ]
    
    When an MMU notifier runs in memory reclaim context, it can deadlock
    trying to take locks that are already held in the thread causing the
    memory reclaim. The solution is to avoid memory reclaim while holding
    locks that are taken in MMU notifiers.
    
    This commit fixes kmalloc while holding rmn->lock by moving the call
    outside the lock. The GFX MMU notifier also locks reservation objects.
    I have no good solution for avoiding reclaim while holding reservation
    objects. The HSA MMU notifier will not lock any reservation objects.
    
    v2: Moved allocation outside lock instead of using GFP_NOIO
    
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Acked-by: Oded Gabbay <oded.gabbay@gmail.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dee772d923e831f96031fda9b62fc9b2054f26ea
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Mar 19 16:19:32 2018 +0200

    drm/dp/mst: Fix off-by-one typo when dump payload table
    
    [ Upstream commit 7056a2bccc3b5afc51f9b35b30a46f0d9219968d ]
    
    It seems there is a classical off-by-one typo from the beginning
    when commit
    
      ad7f8a1f9ced ("drm/helper: add Displayport multi-stream helper (v0.6)")
    
    introduced a new helper.
    
    Fix a typo by introducing a macro constant.
    
    Cc: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180319141932.37290-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e9ea39872d84b274e753ce2cc05ef6c84cab084
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Thu Mar 22 17:22:51 2018 +0200

    drm/atomic-helper: Drop plane->fb references only for drm_atomic_helper_shutdown()
    
    [ Upstream commit 5e9cfeba6abb7e1a3f240bd24eb29178f0b83716 ]
    
    drm_atomic_helper_shutdown() needs to release the reference held by
    plane->fb. Since commit 49d70aeaeca8 ("drm/atomic-helper: Fix leak in
    disable_all") we're doing that by calling drm_atomic_clean_old_fb() in
    drm_atomic_helper_disable_all(). This also leaves plane->fb == NULL
    afterwards. However, since drm_atomic_helper_disable_all() is also
    used by the i915 gpu reset code
    drm_atomic_helper_commit_duplicated_state() then has to undo the
    damage and put the correct plane->fb pointers back in (and also
    adjust the ref counts to match again as well).
    
    That approach doesn't work so well for load detection as nothing
    sets up the plane->old_fb pointers for us. This causes us to
    leak an extra reference for each plane->fb when
    drm_atomic_helper_commit_duplicated_state() calls
    drm_atomic_clean_old_fb() after load detection.
    
    To fix this let's call drm_atomic_clean_old_fb() only for
    drm_atomic_helper_shutdown() as that's the only time we need to
    actually drop the plane->fb references. In all the other cases
    (load detection, gpu reset) we want to leave plane->fb alone.
    
    v2: Don't inflict the clean_old_fbs bool to drivers (Daniel)
    v3: Squash in the revert and rewrite the commit msg (Daniel)
    
    Cc: martin.peres@free.fr
    Cc: chris@chris-wilson.co.uk
    Cc: Dave Airlie <airlied@gmail.com>
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180322152313.6561-3-ville.syrjala@linux.intel.com
    Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com> #pre-squash
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac70c738be06434ab7d28cf5877e7395f22139ab
Author: José Roberto de Souza <jose.souza@intel.com>
Date:   Wed Mar 28 15:30:37 2018 -0700

    drm: Add DP PSR2 sink enable bit
    
    [ Upstream commit 4f212e40468650e220c1770876c7f25b8e0c1ff5 ]
    
    To comply with eDP1.4a this bit should be set when enabling PSR2.
    
    Signed-off-by: José Roberto de Souza <jose.souza@intel.com>
    Reviewed-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180328223046.16125-1-jose.souza@intel.com
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6f51bf5793cf1265ff0d6e3be39a4fc40d370bd
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Wed Mar 14 17:36:26 2018 -0300

    ARM: dts: imx6qdl-wandboard: Let the codec control MCLK pinctrl
    
    [ Upstream commit 6e1386b2ee6822b00ae944a3de2c3304d2d422e6 ]
    
    sgtl5000 codec needs MCLK clock to be present so that it can
    successfully read/write via I2C.
    
    In the case of wandboard, MCLK is provided via
    MX6QDL_PAD_GPIO_0__CCM_CLKO1 pad.
    
    Move the MCLK pinctrl from hog group to the codec group, so that the
    codec clock can be present prior to reading the codec ID.
    
    This avoids the following error that happens from time to time:
    
    [    2.484443] sgtl5000 1-000a: Error reading chip id -6
    
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 636ef9d6b1acbb6e9d640b9febb6b3840735c47e
Author: Kirill Marinushkin <k.marinushkin@gmail.com>
Date:   Wed Apr 4 06:19:38 2018 +0200

    ASoC: topology: Add missing clock gating parameter when parsing hw_configs
    
    [ Upstream commit 933e1c4a667103c4d10ebdc9505a0a6abd8c3fbd ]
    
    Clock gating parameter is a part of `dai_fmt`. It is supported by
    `alsa-lib` when creating a topology binary file, but ignored by kernel
    when loading this topology file.
    
    After applying this commit, the clock gating parameter is not ignored any
    more. This solution is backwards compatible. The existing behaviour is
    not broken, because by default the parameter value is 0 and is ignored.
    
    snd_soc_tplg_hw_config.clock_gated = 0 => no effect
    snd_soc_tplg_hw_config.clock_gated = 1 => SND_SOC_DAIFMT_GATED
    snd_soc_tplg_hw_config.clock_gated = 2 => SND_SOC_DAIFMT_CONT
    
    For example, the following config, based on
    alsa-lib/src/conf/topology/broadwell/broadwell.conf, is now supported:
    
    ~~~~
    SectionHWConfig."CodecHWConfig" {
            id "1"
            format "I2S"            # physical audio format.
            pm_gate_clocks "true"   # clock can be gated
    }
    
    SectionLink."Codec" {
    
            # used for binding to the physical link
            id "0"
    
            hw_configs [
                    "CodecHWConfig"
            ]
    
            default_hw_conf_id "1"
    }
    ~~~~
    
    Signed-off-by: Kirill Marinushkin <k.marinushkin@gmail.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Cc: Jaroslav Kysela <perex@perex.cz>
    Cc: Takashi Iwai <tiwai@suse.de>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Pan Xiuli <xiuli.pan@linux.intel.com>
    Cc: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Cc: linux-kernel@vger.kernel.org
    Cc: alsa-devel@alsa-project.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 671dc72c2c3773eb3b81bdf9d49514be598c313f
Author: Kirill Marinushkin <k.marinushkin@gmail.com>
Date:   Wed Apr 4 06:19:37 2018 +0200

    ASoC: topology: Fix bclk and fsync inversion in set_link_hw_format()
    
    [ Upstream commit a941e2fab3207cb0d57dc4ec47b1b12c8ea78b84 ]
    
    The values of bclk and fsync are inverted WRT the codec. But the existing
    solution already works for Broadwell, see the alsa-lib config:
    
    `alsa-lib/src/conf/topology/broadwell/broadwell.conf`
    
    This commit provides the backwards-compatible solution to fix this misuse.
    
    Signed-off-by: Kirill Marinushkin <k.marinushkin@gmail.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Tested-by: Pan Xiuli <xiuli.pan@linux.intel.com>
    Tested-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Cc: Jaroslav Kysela <perex@perex.cz>
    Cc: Takashi Iwai <tiwai@suse.de>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Cc: linux-kernel@vger.kernel.org
    Cc: alsa-devel@alsa-project.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f33d118994845529547b9caa0cbb4c0855c75076
Author: Masahisa KOJIMA <masahisa.kojima@linaro.org>
Date:   Mon Apr 16 13:09:59 2018 +0530

    net: socionext: reset hardware in ndo_stop
    
    [ Upstream commit 9a00b697ce31e38c670a3042cf9f1e9cf28dabb5 ]
    
    When the interface is down, head/tail of the descriptor
    ring address is set to 0 in netsec_netdev_stop().
    But netsec hardware still keeps the previous descriptor
    ring address, so there is inconsistency between driver
    and hardware after interface is up at a later time.
    To address this inconsistency, add netsec_reset_hardware()
    when the interface is down.
    
    In addition, to minimize the reset process,
    add flag to decide whether driver loads the netsec microcode.
    Even if driver resets the netsec hardware, netsec microcode
    keeps resident on RAM, so it is ok we only load the microcode
    at initialization.
    
    This patch is critical for installation over network.
    
    Signed-off-by: Masahisa KOJIMA <masahisa.kojima@linaro.org>
    Fixes: 533dd11a12f6 ("net: socionext: Add Synquacer NetSec driver")
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a90a8d31d9fa6e9892a958412f4f9d7594c7685
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Fri Apr 6 07:54:51 2018 -0400

    media: si470x: fix __be16 annotations
    
    [ Upstream commit 90db5c829692a0a7845e977e45719b4699216bd4 ]
    
    The annotations there are wrong as warned:
       drivers/media/radio/si470x/radio-si470x-i2c.c:107:35: warning: cast to restricted __be16
       drivers/media/radio/si470x/radio-si470x-i2c.c:107:35: warning: cast to restricted __be16
       drivers/media/radio/si470x/radio-si470x-i2c.c:107:35: warning: cast to restricted __be16
       drivers/media/radio/si470x/radio-si470x-i2c.c:107:35: warning: cast to restricted __be16
       drivers/media/radio/si470x/radio-si470x-i2c.c:129:24: warning: incorrect type in assignment (different base types)
       drivers/media/radio/si470x/radio-si470x-i2c.c:129:24:    expected unsigned short [unsigned] [short] <noident>
       drivers/media/radio/si470x/radio-si470x-i2c.c:129:24:    got restricted __be16 [usertype] <noident>
       drivers/media/radio/si470x/radio-si470x-i2c.c:163:39: warning: cast to restricted __be16
       drivers/media/radio/si470x/radio-si470x-i2c.c:163:39: warning: cast to restricted __be16
       drivers/media/radio/si470x/radio-si470x-i2c.c:163:39: warning: cast to restricted __be16
       drivers/media/radio/si470x/radio-si470x-i2c.c:163:39: warning: cast to restricted __be16
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 956ebc825b4ad8754586281704688a3b211003e8
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Sat Apr 7 05:38:52 2018 -0400

    media: cec: fix smatch error
    
    [ Upstream commit b66d448487a478c203368f2b72d7d9156a01f6be ]
    
    drivers/media/cec/cec-pin-error-inj.c:231
    cec_pin_error_inj_parse_line() error: uninitialized symbol 'pos'.
    
    The tx-add-bytes command didn't check for the presence of an argument, and
    also didn't check that it was > 0.
    
    This should fix this error.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf57026b307d8c1b229028e0f67ff71de65295d9
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Thu Apr 12 05:31:59 2018 -0400

    media: atomisp: compat32: fix __user annotations
    
    [ Upstream commit ad4222a0e29664666a71685a6e732923ca7c7e45 ]
    
    The __user annotations at the compat32 code is not right:
    
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:81:18: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:81:18:    expected void *base
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:81:18:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:232:23: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:232:23:    expected unsigned int [usertype] *xcoords_y
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:232:23:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:233:23: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:233:23:    expected unsigned int [usertype] *ycoords_y
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:233:23:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:234:24: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:234:24:    expected unsigned int [usertype] *xcoords_uv
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:234:24:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:235:24: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:235:24:    expected unsigned int [usertype] *ycoords_uv
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:235:24:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:296:29: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:296:29:    expected unsigned int [usertype] *effective_width
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:296:29:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:360:29: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:360:29:    expected unsigned int [usertype] *effective_width
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:360:29:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:437:19: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:437:19:    expected struct v4l2_framebuffer *frame
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:437:19:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:481:29: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:481:29:    expected unsigned short *calb_grp_values
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:481:29:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:701:39: warning: cast removes address space of expression
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:704:21: warning: incorrect type in argument 1 (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:704:21:    expected void const volatile [noderef] <asn:1>*<noident>
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:704:21:    got unsigned int [usertype] *src
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:737:43: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:737:43:    expected struct atomisp_shading_table *shading_table
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:737:43:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:742:44: warning: incorrect type in argument 1 (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:742:44:    expected void [noderef] <asn:1>*to
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:742:44:    got struct atomisp_shading_table *shading_table
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:755:41: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:755:41:    expected struct atomisp_morph_table *morph_table
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:755:41:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:760:44: warning: incorrect type in argument 1 (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:760:44:    expected void [noderef] <asn:1>*to
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:760:44:    got struct atomisp_morph_table *morph_table
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:772:40: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:772:40:    expected struct atomisp_dvs2_coefficients *dvs2_coefs
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:772:40:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:777:44: warning: incorrect type in argument 1 (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:777:44:    expected void [noderef] <asn:1>*to
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:777:44:    got struct atomisp_dvs2_coefficients *dvs2_coefs
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:788:46: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:788:46:    expected struct atomisp_dvs_6axis_config *dvs_6axis_config
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:788:46:    got void [noderef] <asn:1>*
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:793:44: warning: incorrect type in argument 1 (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:793:44:    expected void [noderef] <asn:1>*to
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:793:44:    got struct atomisp_dvs_6axis_config *dvs_6axis_config
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:853:17: warning: incorrect type in assignment (different address spaces)
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:853:17:    expected struct atomisp_sensor_ae_bracketing_lut_entry *lut
       drivers/staging/media/atomisp/pci/atomisp2/atomisp_compat_ioctl32.c:853:17:    got void [noderef] <asn:1>*
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c037af7e6ef4931c5e53be259d57975d2399f708
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Tue Apr 17 11:25:51 2018 -0500

    PCI/ASPM: Disable ASPM L1.2 Substate if we don't have LTR
    
    [ Upstream commit 9ab105deb60fa76d66cae5548819b4e8703d2056 ]
    
    When in the ASPM L1.0 state (but not the PCI-PM L1.0 state), the most
    recent LTR value and the LTR_L1.2_THRESHOLD determines whether the link
    enters the L1.2 substate.
    
    If we don't have LTR enabled, prevent the use of ASPM L1.2.
    
    PCI-PM L1.2 may still be used because it doesn't depend on
    LTR_L1.2_THRESHOLD (see PCIe r4.0, sec 5.5.1).
    
    Tested-by: Srinath Mannam <srinath.mannam@broadcom.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1e6939d1bd15c49370a91dd91a7fd2d8f86b158
Author: Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
Date:   Mon Mar 26 11:30:22 2018 -0500

    scsi: cxlflash: Avoid clobbering context control register value
    
    [ Upstream commit 465891fe9237b02f8d0fd26448f733fae7236f4a ]
    
    The SISLite specification originally defined the context control register with
    a single field of bits to represent the LISN and also stipulated that the
    register reset value be 0. The cxlflash driver took advantage of this when
    programming the LISN for the master contexts via an unconditional write - no
    other bits were preserved.
    
    When unmap support was added, SISLite was updated to define bit 0 of the
    context control register as a way for the AFU to notify the context owner that
    unmap operations were supported. Thus the assumptions under which the register
    is setup changed and the existing unconditional write is clobbering the unmap
    state for master contexts. This is presently not an issue due to the order in
    which the context control register is programmed in relation to the unmap bit
    being queried but should be addressed to avoid a future regression in the
    event this code is moved elsewhere.
    
    To remedy this issue, preserve the bits when programming the LISN field in the
    context control register. Since the LISN will now be programmed using a read
    value, assert that the initial state of the LISN field is as described in
    SISLite (0).
    
    Signed-off-by: Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
    Signed-off-by: Uma Krishnan <ukrishn@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b79aae23e57eab93959b5453facc0f148163940
Author: Uma Krishnan <ukrishn@linux.vnet.ibm.com>
Date:   Mon Mar 26 11:35:27 2018 -0500

    scsi: cxlflash: Synchronize reset and remove ops
    
    [ Upstream commit a3feb6ef50def7c91244d7bd15a3625b7b49b81f ]
    
    The following Oops can be encountered if a device removal or system shutdown
    is initiated while an EEH recovery is in process:
    
    [c000000ff2f479c0] c008000015256f18 cxlflash_pci_slot_reset+0xa0/0x100
                                          [cxlflash]
    [c000000ff2f47a30] c00800000dae22e0 cxl_pci_slot_reset+0x168/0x290 [cxl]
    [c000000ff2f47ae0] c00000000003ef1c eeh_report_reset+0xec/0x170
    [c000000ff2f47b20] c00000000003d0b8 eeh_pe_dev_traverse+0x98/0x170
    [c000000ff2f47bb0] c00000000003f80c eeh_handle_normal_event+0x56c/0x580
    [c000000ff2f47c60] c00000000003fba4 eeh_handle_event+0x2a4/0x338
    [c000000ff2f47d10] c0000000000400b8 eeh_event_handler+0x1f8/0x200
    [c000000ff2f47dc0] c00000000013da48 kthread+0x1a8/0x1b0
    [c000000ff2f47e30] c00000000000b528 ret_from_kernel_thread+0x5c/0xb4
    
    The remove handler frees AFU memory while the EEH recovery is in progress,
    leading to a race condition. This can result in a crash if the recovery thread
    tries to access this memory.
    
    To resolve this issue, the cxlflash remove handler will evaluate the device
    state and yield to any active reset or probing threads.
    
    Signed-off-by: Uma Krishnan <ukrishn@linux.vnet.ibm.com>
    Acked-by: Matthew R. Ochs <mrochs@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d9aaf59125778e9c96e86713391cb222574f2f0
Author: Shivasharan S <shivasharan.srikanteshwara@broadcom.com>
Date:   Fri Apr 6 02:02:11 2018 -0700

    scsi: megaraid_sas: Increase timeout by 1 sec for non-RAID fastpath IOs
    
    [ Upstream commit 3239b8cd28fd849a2023483257d35d68c5876c74 ]
    
    Hardware could time out Fastpath IOs one second earlier than the timeout
    provided by the host.
    
    For non-RAID devices, driver provides timeout value based on OS provided
    timeout value. Under certain scenarios, if the OS provides a timeout
    value of 1 second, due to above behavior hardware will timeout
    immediately.
    
    Increase timeout value for non-RAID fastpath IOs by 1 second.
    
    Signed-off-by: Shivasharan S <shivasharan.srikanteshwara@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef33a2d5d0f2690afa001c7bf7e4dc0f12aaa5d5
Author: Xose Vazquez Perez <xose.vazquez@gmail.com>
Date:   Sat Apr 7 00:47:23 2018 +0200

    scsi: scsi_dh: replace too broad "TP9" string with the exact models
    
    [ Upstream commit 37b37d2609cb0ac267280ef27350b962d16d272e ]
    
    SGI/TP9100 is not an RDAC array:
        ^^^
    https://git.opensvc.com/gitweb.cgi?p=multipath-tools/.git;a=blob;f=libmultipath/hwtable.c;h=88b4700beb1d8940008020fbe4c3cd97d62f4a56;hb=HEAD#l235
    
    This partially reverts commit 35204772ea03 ("[SCSI] scsi_dh_rdac :
    Consolidate rdac strings together")
    
    [mkp: fixed up the new entries to align with rest of struct]
    
    Cc: NetApp RDAC team <ng-eseries-upstream-maintainers@netapp.com>
    Cc: Hannes Reinecke <hare@suse.de>
    Cc: James E.J. Bottomley <jejb@linux.vnet.ibm.com>
    Cc: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: SCSI ML <linux-scsi@vger.kernel.org>
    Cc: DM ML <dm-devel@redhat.com>
    Signed-off-by: Xose Vazquez Perez <xose.vazquez@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bea183133dfb9eede992b764b56b0ad359e8d38
Author: Philippe CORNU <philippe.cornu@st.com>
Date:   Tue Apr 10 15:53:12 2018 +0200

    drm/stm: ltdc: fix warning in ltdc_crtc_update_clut()
    
    [ Upstream commit c20f5f69c898899027c3e573afaab837195895b6 ]
    
    Fix the warning
    "warn: variable dereferenced before check 'crtc' (see line 390)"
    by removing unnecessary checks as ltdc_crtc_update_clut() is
    only called from ltdc_crtc_atomic_flush() where crtc and
    crtc->state are not NULL.
    
    Many thanks to Dan Carpenter for the bug report
    https://lists.freedesktop.org/archives/dri-devel/2018-February/166918.html
    
    Signed-off-by: Philippe Cornu <philippe.cornu@st.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: yannick fertre <yannick.fertre@st.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180410135312.3553-1-philippe.cornu@st.com
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2435709952b4718565c081a2f50d5d161efb87bb
Author: Thomas Hebb <tommyhebb@gmail.com>
Date:   Fri Apr 13 17:40:26 2018 +0300

    ath10k: search all IEs for variant before falling back
    
    [ Upstream commit c8489668065a283d3027e86e877b103a87f99d22 ]
    
    commit f2593cb1b291 ("ath10k: Search SMBIOS for OEM board file
    extension") added a feature to ath10k that allows Board Data File
    (BDF) conflicts between multiple devices that use the same device IDs
    but have different calibration requirements to be resolved by allowing
    a "variant" string to be stored in SMBIOS [and later device tree, added
    by commit d06f26c5c8a4 ("ath10k: search DT for qcom,ath10k-calibration-
    variant")] that gets appended to the ID stored in board-2.bin.
    
    This original patch had a regression, however. Namely that devices with
    a variant present in SMBIOS that didn't need custom BDFs could no longer
    find the default BDF, which has no variant appended. The patch was
    reverted and re-applied with a fix for this issue in commit 1657b8f84ed9
    ("search SMBIOS for OEM board file extension").
    
    But the fix to fall back to a default BDF introduced another issue: the
    driver currently parses IEs in board-2.bin one by one, and for each one
    it first checks to see if it matches the ID with the variant appended.
    If it doesn't, it checks to see if it matches the "fallback" ID with no
    variant. If a matching BDF is found at any point during this search, the
    search is terminated and that BDF is used. The issue is that it's very
    possible (and is currently the case for board-2.bin files present in the
    ath10k-firmware repository) for the default BDF to occur in an earlier
    IE than the variant-specific BDF. In this case, the current code will
    happily choose the default BDF even though a better-matching BDF is
    present later in the file.
    
    This patch fixes the issue by first searching the entire file for the ID
    with variant, and searching for the fallback ID only if that search
    fails. It also includes some code cleanup in the area, as
    ath10k_core_fetch_board_data_api_n() no longer does its own string
    mangling to remove the variant from an ID, instead leaving that job to a
    new flag passed to ath10k_core_create_board_name().
    
    I've tested this patch on a QCA4019 and verified that the driver behaves
    correctly for 1) both fallback and variant BDFs present, 2) only fallback
    BDF present, and 3) no matching BDFs present.
    
    Fixes: 1657b8f84ed9 ("ath10k: search SMBIOS for OEM board file extension")
    Signed-off-by: Thomas Hebb <tommyhebb@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99cf307b59c8c9007e7c02a8cd2b2269a8e5ad6e
Author: Douglas Anderson <dianders@chromium.org>
Date:   Wed Apr 18 08:54:18 2018 -0700

    regulator: Don't return or expect -errno from of_map_mode()
    
    [ Upstream commit 02f3703934a42417021405ef336fe45add13c3d1 ]
    
    In of_get_regulation_constraints() we were taking the result of
    of_map_mode() (an unsigned int) and assigning it to an int.  We were
    then checking whether this value was -EINVAL.  Some implementers of
    of_map_mode() were returning -EINVAL (even though the return type of
    their function needed to be unsigned int) because they needed to
    signal an error back to of_get_regulation_constraints().
    
    In general in the regulator framework the mode is always referred to
    as an unsigned int.  While we could fix this to be a signed int (the
    highest value we store in there right now is 0x8), it's actually
    pretty clean to just define the regulator mode 0x0 (the lack of any
    bits set) as an invalid mode.  Let's do that.
    
    Fixes: 5e5e3a42c653 ("regulator: of: Add support for parsing initial and suspend modes")
    Suggested-by: Javier Martinez Canillas <javierm@redhat.com>
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f207585f964f60e52475271c98500b6509887c97
Author: Suman Anna <s-anna@ti.com>
Date:   Wed Mar 14 11:41:36 2018 -0400

    media: omap3isp: fix unbalanced dma_iommu_mapping
    
    [ Upstream commit b7e1e6859fbf60519fd82d7120cee106a6019512 ]
    
    The OMAP3 ISP driver manages its MMU mappings through the IOMMU-aware
    ARM DMA backend. The current code creates a dma_iommu_mapping and
    attaches this to the ISP device, but never detaches the mapping in
    either the probe failure paths or the driver remove path resulting
    in an unbalanced mapping refcount and a memory leak. Fix this properly.
    
    Reported-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Suman Anna <s-anna@ti.com>
    Tested-by: Pavel Machek <pavel@ucw.cz>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 432dd20071a591c94f1da7d467ec5841e410325e
Author: Sean Young <sean@mess.org>
Date:   Sun Mar 25 11:45:40 2018 -0400

    media: rc: mce_kbd decoder: low timeout values cause double keydowns
    
    [ Upstream commit c421c62a4a08aba220ad7176ef4aa4b0ced9480a ]
    
    The mce keyboard repeats pressed keys every 100ms. If the IR timeout
    is set to less than that, we send key up events before the repeat
    arrives, so we have key up/key down for each IR repeat.
    
    The keyboard ends any sequence with a 0 scancode, in which case all keys
    are cleared so there is no need to run the timeout timer: it only exists
    for the case that the final 0 was not received.
    
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8356e461d29bc15540fbd8834ea082546fb674e
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Apr 12 15:19:44 2018 +0200

    y2038: ipc: Use ktime_get_real_seconds consistently
    
    [ Upstream commit 2a70b7879b84d471fd0e440f027bba310e0c1fb7 ]
    
    In some places, we still used get_seconds() instead of
    ktime_get_real_seconds(), and I'm changing the remaining ones now to
    all use ktime_get_real_seconds() so we use the full available range for
    timestamps instead of overflowing the 'unsigned long' return value in
    year 2106 on 32-bit kernels.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6705c48563c5e503f3e58715a0da71f4d8fd1c40
Author: Tudor-Dan Ambarus <tudor.ambarus@microchip.com>
Date:   Tue Apr 3 09:39:00 2018 +0300

    crypto: authenc - don't leak pointers to authenc keys
    
    [ Upstream commit ad2fdcdf75d169e7a5aec6c7cb421c0bec8ec711 ]
    
    In crypto_authenc_setkey we save pointers to the authenc keys in
    a local variable of type struct crypto_authenc_keys and we don't
    zeroize it after use. Fix this and don't leak pointers to the
    authenc keys.
    
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 296805b12d9df058860fd891c6d418a09399e4f2
Author: Tudor-Dan Ambarus <tudor.ambarus@microchip.com>
Date:   Tue Apr 3 09:39:01 2018 +0300

    crypto: authencesn - don't leak pointers to authenc keys
    
    [ Upstream commit 31545df391d58a3bb60e29b1192644a6f2b5a8dd ]
    
    In crypto_authenc_esn_setkey we save pointers to the authenc keys
    in a local variable of type struct crypto_authenc_keys and we don't
    zeroize it after use. Fix this and don't leak pointers to the
    authenc keys.
    
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 030fa9dd34ec5991f48fa625ae934e9be8a0315b
Author: Dominik Bozek <dominikx.bozek@intel.com>
Date:   Fri Apr 13 10:42:31 2018 -0700

    usb: hub: Don't wait for connect state at resume for powered-off ports
    
    [ Upstream commit 5d111f5190848d6fb1c414dc57797efea3526a2f ]
    
    wait_for_connected() wait till a port change status to
    USB_PORT_STAT_CONNECTION, but this is not possible if
    the port is unpowered. The loop will only exit at timeout.
    
    Such case take place if an over-current incident happen
    while system is in S3. Then during resume wait_for_connected()
    will wait 2s, which may be noticeable by the user.
    
    Signed-off-by: Dominik Bozek <dominikx.bozek@intel.com>
    Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 920610162fb7ad881a1e4d50427803d37fd00811
Author: Michal Simek <michal.simek@xilinx.com>
Date:   Tue Apr 10 15:05:42 2018 +0200

    microblaze: Fix simpleImage format generation
    
    [ Upstream commit ece97f3a5fb50cf5f98886fbc63c9665f2bb199d ]
    
    simpleImage generation was broken for some time. This patch is fixing
    steps how simpleImage.*.ub file is generated. Steps are objdump of
    vmlinux and create .ub.
    Also make sure that there is striped elf version with .strip suffix.
    
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3412088e7c06c84a7160e109e1308dd0c6259ec9
Author: Andrey Smirnov <andrew.smirnov@gmail.com>
Date:   Tue Apr 10 11:32:09 2018 -0700

    soc: imx: gpcv2: Do not pass static memory as platform data
    
    [ Upstream commit 050f810e238f268670f14a8f8b793ba2dbf2e92f ]
    
    Platform device core assumes the ownership of dev.platform_data as
    well as that it is dynamically allocated and it will try to kfree it
    as a part of platform_device_release(). Change the code to use
    platform_device_add_data() n instead of a pointer to a static memory
    to avoid causing a BUG() when calling platform_device_put().
    
    The problem can be reproduced by artificially enabling the error path
    of platform_device_add() call (around line 357).
    
    Note that this change also allows us to constify imx7_pgc_domains,
    since we no longer need to be able to modify it.
    
    Cc: Stefan Agner <stefan@agner.ch>
    Cc: Lucas Stach <l.stach@pengutronix.de>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Andrey Smirnov <andrew.smirnov@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64b8131944f14ef2b977b5a72c062507a6c87bc0
Author: Douglas Anderson <dianders@chromium.org>
Date:   Fri Mar 23 10:58:31 2018 -0700

    serial: core: Make sure compiler barfs for 16-byte earlycon names
    
    [ Upstream commit c1c734cb1f54b062f7e67ffc9656d82f5b412b9c ]
    
    As part of bringup I ended up wanting to call an earlycon driver by a
    name that was exactly 16-bytes big, specifically "qcom_geni_serial".
    
    Unfortunately, when I tried this I found that things compiled just
    fine.  They just didn't work.
    
    Specifically the compiler felt perfectly justified in initting the
    ".name" field of "struct earlycon_id" with the full 16-bytes and just
    skipping the '\0'.  Needless to say, that behavior didn't seem ideal,
    but I guess someone must have allowed it for a reason.
    
    One way to fix this is to shorten the name field to 15 bytes and then
    add an extra byte after that nobody touches.  This should always be
    initted to 0 and we're golden.
    
    There are, of course, other ways to fix this too.  We could audit all
    the users of the "name" field and make them stop at both null
    termination or at 16 bytes.  We could also just make the name field
    much bigger so that we're not likely to run into this.  ...but both
    seem like we'll just hit the bug again.
    
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ee03ec41689f54420f1c9729d6ff929da34ca53
Author: Sergio Paracuellos <sergio.paracuellos@gmail.com>
Date:   Tue Apr 3 17:13:00 2018 +0200

    staging: ks7010: fix error handling in ks7010_upload_firmware
    
    [ Upstream commit 6e043704fb99e3e1d7a1bb02030e49c093cdd943 ]
    
    This commit checks missing error code check when checking
    if the firmware is running reading General Communication
    Register A (GCR_A).
    
    It also set ret to EBUSY if firmware is running before
    copying it.
    
    Signed-off-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 181e50c19f0b060adfd4c0ac762b3e19114d29c3
Author: NeilBrown <neilb@suse.com>
Date:   Thu Mar 29 15:26:48 2018 +1100

    staging: lustre: ldlm: free resource when ldlm_lock_create() fails.
    
    [ Upstream commit d8caf662b4aeeb2ac83ac0b22e40db88e9360c77 ]
    
    ldlm_lock_create() gets a resource, but don't put it on
    all failure paths. It should.
    
    Signed-off-by: NeilBrown <neilb@suse.com>
    Reviewed-by: James Simmons <jsimmons@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c7d4194b294eaa29116705dcec3761734d27c28
Author: James Simmons <jsimmons@infradead.org>
Date:   Mon Apr 16 00:15:10 2018 -0400

    staging: lustre: llite: correct removexattr detection
    
    [ Upstream commit 1b60f6dfa38403ff7c4d0b4b7ecdb810f9789a2a ]
    
    In ll_xattr_set_common() detect the removexattr() case correctly by
    testing for a NULL value as well as XATTR_REPLACE.
    
    Signed-off-by: John L. Hammond <john.hammond@intel.com>
    Intel-bug-id: https://jira.hpdd.intel.com/browse/LU-10787
    Reviewed-on: https://review.whamcloud.com/
    Reviewed-by: Dmitry Eremin <dmitry.eremin@intel.com>
    Reviewed-by: James Simmons <uja.ornl@yahoo.com>
    Signed-off-by: James Simmons <jsimmons@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81805d08b445f3a4754e19d7b9105d95c6ebd946
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Sat Mar 31 22:09:37 2018 +0200

    staging: vchiq_core: Fix missing semaphore release in error case
    
    [ Upstream commit 8113b89fc615cfb531df0334fb3a091cf6a45ce0 ]
    
    The bail out branch in case of a invalid tx_pos missed a semaphore
    release. Dan Carpenter found this with a static checker.
    
    Fixes: d1eab9dec610 ("staging: vchiq_core: Bail out in case of invalid tx_pos")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33c6b263167ea5a0b0fa1396e9ed4fab477f7298
Author: Mario Limonciello <mario.limonciello@dell.com>
Date:   Tue Apr 17 14:45:56 2018 -0500

    platform/x86: dell-smbios: Match on www.dell.com in OEM strings too
    
    [ Upstream commit b004b21cc664ca00782508514dade43e29eebf94 ]
    
    Sergey reported that some much older Dell systems don't support
    the OEM string "Dell System" but instead supported www.dell.com
    in OEM strings.
    
    Match both of these to indicate that this driver is running on
    a Dell system.
    
    Reported-by: Sergey Kubushyn <ksi@koi8.net>
    Tested-by: Sergey Kubushyn <ksi@koi8.net>
    Signed-off-by: Mario Limonciello <mario.limonciello@dell.com>
    [dvhart: Simplify DMI logic and eliminate unnecessary variables]
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4eeda9c88a92bacf1159700694b93a4c7e020724
Author: Tomasz Figa <tfiga@chromium.org>
Date:   Mon Apr 23 12:49:59 2018 +0200

    drm/rockchip: analogix_dp: Do not call Analogix code before bind
    
    [ Upstream commit a4169609def769c66f88140678970b2be6f64ac7 ]
    
    Driver callbacks, such as system suspend or resume can be called any
    time, specifically they can be called before the component bind
    callback. Let's use dp->adp pointer as a safeguard and skip calling
    Analogix entry points if it is an ERR_PTR().
    
    Signed-off-by: Tomasz Figa <tfiga@chromium.org>
    Signed-off-by: Thierry Escande <thierry.escande@collabora.com>
    Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Archit Taneja <architt@codeaurora.org>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180423105003.9004-24-enric.balletbo@collabora.com
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d5a72ab3570f6202b9537835f829491e04a988f
Author: Ondrej Mosnáček <omosnace@redhat.com>
Date:   Mon Apr 9 10:00:06 2018 +0200

    audit: allow not equal op for audit by executable
    
    [ Upstream commit 23bcc480dac204c7dbdf49d96b2c918ed98223c2 ]
    
    Current implementation of auditing by executable name only implements
    the 'equal' operator. This patch extends it to also support the 'not
    equal' operator.
    
    See: https://github.com/linux-audit/audit-kernel/issues/53
    
    Signed-off-by: Ondrej Mosnacek <omosnace@redhat.com>
    Reviewed-by: Richard Guy Briggs <rgb@redhat.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d130239aca06048d0d36f368a0dca4de64e14a3
Author: Siva Rebbagondla <siva.rebbagondla@redpinesignals.com>
Date:   Wed Apr 11 12:13:31 2018 +0530

    rsi: fix nommu_map_sg overflow kernel panic
    
    [ Upstream commit f700546682a62a87a9615121a37ee7452dab4b76 ]
    
    Following overflow kernel panic is observed on some platforms while
    loading the driver. It is fixed if dynamically allocated memory is
    passed to SDIO instead of static one
    
    [  927.513963] nommu_map_sg: overflow 17d54064ba7c+20 of device mask ffffffff
    [  927.517712] Modules linked in: rsi_sdio(+) cmac bnep arc4 rsi_91x mac80211 cfg80211
                   btrsi rfcomm bluetooth ecdh_generic snd_soc_sst_bytcr_rt5660
    [  927.517861] CPU: 0 PID: 1624 Comm: insmod Tainted: G W 4.15.0-1000 #1
    [  927.517870] RIP: 0010:sdhci_send_command+0x5f0/0xa90 [sdhci]
    [  927.517873] RSP: 0000:ffffac3fc064b6d8 EFLAGS: 00010086
    [  927.517895] Call Trace:
    [  927.517908]  ? __schedule+0x3cd/0x890
    [  927.517915]  ? mod_timer+0x17b/0x3c0
    [  927.517922]  sdhci_request+0x7c/0xf0 [sdhci]
    [  927.517928]  __mmc_start_request+0x5a/0x170
    [  927.517932]  mmc_start_request+0x74/0x90
    [  927.517936]  mmc_wait_for_req+0x87/0xe0
    [  927.517940]  mmc_io_rw_extended+0x2fd/0x330
    [  927.517946]  ? mmc_wait_data_done+0x30/0x30
    [  927.517951]  sdio_io_rw_ext_helper+0x160/0x210
    [  927.517956]  sdio_writesb+0x1d/0x20
    [  927.517966]  rsi_sdio_write_register_multiple+0x68/0x110 [rsi_sdio]
    [  927.517976]  rsi_hal_device_init+0x357/0x910 [rsi_91x]
    [  927.517983]  ? rsi_hal_device_init+0x357/0x910 [rsi_91x]
    [  927.517990]  rsi_probe+0x2c6/0x450 [rsi_sdio]
    [  927.517995]  sdio_bus_probe+0xfc/0x110
    [  927.518000]  driver_probe_device+0x2b3/0x490
    [  927.518005]  __driver_attach+0xdf/0xf0
    [  927.518008]  ? driver_probe_device+0x490/0x490
    [  927.518014]  bus_for_each_dev+0x6c/0xc0
    [  927.518018]  driver_attach+0x1e/0x20
    [  927.518021]  bus_add_driver+0x1f4/0x270
    [  927.518028]  ? rsi_sdio_ack_intr+0x50/0x50 [rsi_sdio]
    [  927.518031]  driver_register+0x60/0xe0
    [  927.518038]  ? rsi_sdio_ack_intr+0x50/0x50 [rsi_sdio]
    [  927.518041]  sdio_register_driver+0x20/0x30
    [  927.518047]  rsi_module_init+0x16/0x40 [rsi_sdio]
    
    Signed-off-by: Siva Rebbagondla <siva.rebbagondla@redpinesignals.com>
    Signed-off-by: Amitkumar Karwar <amit.karwar@redpinesignals.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ea0308c83d12658897b364ebbb71a3d4966657a
Author: Siva Rebbagondla <siva.rebbagondla@redpinesignals.com>
Date:   Wed Apr 11 12:13:32 2018 +0530

    rsi: Fix 'invalid vdd' warning in mmc
    
    [ Upstream commit 78e450719c702784e42af6da912d3692fd3da0cb ]
    
    While performing cleanup, driver is messing with card->ocr
    value by not masking rocr against ocr_avail. Below panic
    is observed with some of the SDIO host controllers due to
    this. Issue is resolved by reverting incorrect modifications
    to vdd.
    
    [  927.423821] mmc1: Invalid vdd 0x1f
    [  927.423925] Modules linked in: rsi_sdio(+) cmac bnep arc4 rsi_91x
                   mac80211 cfg80211 btrsi rfcomm bluetooth ecdh_generic
    [  927.424073] CPU: 0 PID: 1624 Comm: insmod Tainted: G         W        4.15.0-1000-caracalla #1
    [  927.424075] Hardware name: Dell Inc. Edge Gateway    3003/      , BIOS 01.00.06 01/22/2018
    [  927.424082] RIP: 0010:sdhci_set_power_noreg+0xdd/0x190[sdhci]
    [  927.424085] RSP: 0018:ffffac3fc064b930 EFLAGS:  00010282
    [  927.424107] Call Trace:
    [  927.424118]  sdhci_set_power+0x5a/0x60 [sdhci]
    [  927.424125]  sdhci_set_ios+0x360/0x3b0 [sdhci]
    [  927.424133]  mmc_set_initial_state+0x92/0x120
    [  927.424137]  mmc_power_up.part.34+0x33/0x1d0
    [  927.424141]  mmc_power_up+0x17/0x20
    [  927.424147]  mmc_sdio_runtime_resume+0x2d/0x50
    [  927.424151]  mmc_runtime_resume+0x17/0x20
    [  927.424156]  __rpm_callback+0xc4/0x200
    [  927.424161]  ? idr_alloc_cyclic+0x57/0xd0
    [  927.424165]  ? mmc_runtime_suspend+0x20/0x20
    [  927.424169]  rpm_callback+0x24/0x80
    [  927.424172]  ? mmc_runtime_suspend+0x20/0x20
    [  927.424176]  rpm_resume+0x4b3/0x6c0
    [  927.424181]  __pm_runtime_resume+0x4e/0x80
    [  927.424188]  driver_probe_device+0x41/0x490
    [  927.424192]  __driver_attach+0xdf/0xf0
    [  927.424196]  ? driver_probe_device+0x490/0x490
    [  927.424201]  bus_for_each_dev+0x6c/0xc0
    [  927.424205]  driver_attach+0x1e/0x20
    [  927.424209]  bus_add_driver+0x1f4/0x270
    [  927.424217]  ? rsi_sdio_ack_intr+0x50/0x50 [rsi_sdio]
    [  927.424221]  driver_register+0x60/0xe0
    [  927.424227]  ? rsi_sdio_ack_intr+0x50/0x50 [rsi_sdio]
    [  927.424231]  sdio_register_driver+0x20/0x30
    [  927.424237]  rsi_module_init+0x16/0x40 [rsi_sdio]
    
    Signed-off-by: Siva Rebbagondla <siva.rebbagondla@redpinesignals.com>
    Signed-off-by: Amitkumar Karwar <amit.karwar@redpinesignals.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 791f834d48d2ff4aad0e457d0f9400bf6d7fd2b8
Author: Chris Novakovic <chris@chrisn.me.uk>
Date:   Tue Apr 24 03:56:37 2018 +0100

    ipconfig: Correctly initialise ic_nameservers
    
    [ Upstream commit 300eec7c0a2495f771709c7642aa15f7cc148b83 ]
    
    ic_nameservers, which stores the list of name servers discovered by
    ipconfig, is initialised (i.e. has all of its elements set to NONE, or
    0xffffffff) by ic_nameservers_predef() in the following scenarios:
    
     - before the "ip=" and "nfsaddrs=" kernel command line parameters are
       parsed (in ip_auto_config_setup());
     - before autoconfiguring via DHCP or BOOTP (in ic_bootp_init()), in
       order to clear any values that may have been set after parsing "ip="
       or "nfsaddrs=" and are no longer needed.
    
    This means that ic_nameservers_predef() is not called when neither "ip="
    nor "nfsaddrs=" is specified on the kernel command line. In this
    scenario, every element in ic_nameservers remains set to 0x00000000,
    which is indistinguishable from ANY and causes pnp_seq_show() to write
    the following (bogus) information to /proc/net/pnp:
    
      #MANUAL
      nameserver 0.0.0.0
      nameserver 0.0.0.0
      nameserver 0.0.0.0
    
    This is potentially problematic for systems that blindly link
    /etc/resolv.conf to /proc/net/pnp.
    
    Ensure that ic_nameservers is also initialised when neither "ip=" nor
    "nfsaddrs=" are specified by calling ic_nameservers_predef() in
    ip_auto_config(), but only when ip_auto_config_setup() was not called
    earlier. This causes the following to be written to /proc/net/pnp, and
    is consistent with what gets written when ipconfig is configured
    manually but no name servers are specified on the kernel command line:
    
      #MANUAL
    
    Signed-off-by: Chris Novakovic <chris@chrisn.me.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2af55216e2d7cea2d4492099f9359dd96391448
Author: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Date:   Tue Apr 24 15:14:57 2018 +0200

    drm/gma500: fix psb_intel_lvds_mode_valid()'s return type
    
    [ Upstream commit 2ea009095c6e7396915a1d0dd480c41f02985f79 ]
    
    The method struct drm_connector_helper_funcs::mode_valid is defined
    as returning an 'enum drm_mode_status' but the driver implementation
    for this method, psb_intel_lvds_mode_valid(), uses an 'int' for it.
    
    Fix this by using 'enum drm_mode_status' for psb_intel_lvds_mode_valid().
    
    Signed-off-by: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180424131458.2060-1-luc.vanoostenryck@gmail.com
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de152d298fddfa4a3493967bd0e810f0da8d3a43
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Thu Apr 5 10:49:49 2018 -0500

    qtnfmac: pearl: pcie: fix memory leak in qtnf_fw_work_handler
    
    [ Upstream commit 3763770044640caeb1101cdea40697cc0814403c ]
    
    In case memory resources for fw were succesfully allocated, release
    them before jumping to fw_load_fail.
    
    Addresses-Coverity-ID: 1466092 ("Resource leak")
    Fixes: c3b2f7ca4186 ("qtnfmac: implement asynchronous firmware loading")
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Reviewed-by: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62de12170fdc846623394ab5791fd74c548f2a26
Author: Vinicius Costa Gomes <vinicius.gomes@intel.com>
Date:   Tue Apr 10 10:49:51 2018 -0700

    igb: Fix queue selection on MAC filters on i210
    
    [ Upstream commit 4dc93fcf0b95dc3fda4db917effae31fbb8ad2a8 ]
    
    On the RAH registers there are semantic differences on the meaning of
    the "queue" parameter for traffic steering depending on the controller
    model: there is the 82575 meaning, which "queue" means a RX Hardware
    Queue, and the i350 meaning, where it is a reception pool.
    
    The previous behaviour was having no effect for i210 based controllers
    because the QSEL bit of the RAH register wasn't being set.
    
    This patch separates the condition in discrete cases, so the different
    handling is clearer.
    
    Fixes: 83c21335c876 ("igb: improve MAC filter handling")
    Signed-off-by: Vinicius Costa Gomes <vinicius.gomes@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2731f8c6afc025b96199b0551573ff4d6cff574a
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Tue Apr 24 16:39:01 2018 +0100

    ASoC: compress: Only call free for components which have been opened
    
    [ Upstream commit 572e6c8dd174bc6fc7ba5d9b6935e9ec8d2660f5 ]
    
    The core should only call free on a component if said component has
    already had open called on it. This is not presently the case and most
    compressed drivers in the kernel assume it will be. This causes null
    pointer dereferences in the drivers as they attempt clean up for stuff
    that was never put in place.
    
    This is fixed by aborting calling open callbacks once a failure is
    encountered and then during clean up only iterating through the
    component list to that point.
    
    This is a fairly quick fix to the issue, to allow backporting. There
    is more refactoring to follow to tidy the code up a little.
    
    Fixes: 9e7e3738ab0e ("ASoC: snd_soc_component_driver has snd_compr_ops")
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Acked-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61145bfe1a6b1c7776e0673f68afe7470892df91
Author: Enric Balletbo i Serra <enric.balletbo@collabora.com>
Date:   Mon Apr 16 11:39:57 2018 -0300

    arm64: defconfig: Enable Rockchip io-domain driver
    
    [ Upstream commit 7c8b77f81552c2b0e5d9c560da70bc4149ce66a5 ]
    
    Heiko Stübner justified pretty well the change in commit e330eb86ba0b
    ("ARM: multi_v7_defconfig: enable Rockchip io-domain driver"). This
    change is also needed for arm64 rockchip boards, so, do the same for arm64.
    
    The io-domain driver is necessary to notify the soc about voltages
    changes happening on supplying regulators. Probably the most important
    user right now is the mmc tuning code, where the soc needs to get
    notified when the voltage is dropped to the 1.8V point.
    
    As this option is necessary to successfully tune UHS cards etc, it
    should get built in. Otherwise, tuning will fail with,
    
       dwmmc_rockchip fe320000.dwmmc: All phases bad!
       mmc0: tuning execution failed: -5
    
    Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Acked-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 021310e245debd78c41d75fae579e20c87a8a4b0
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Wed Apr 25 19:53:52 2018 -0300

    ASoC: fsl_ssi: Use u32 variable type when using regmap_read()
    
    [ Upstream commit 671f8204b12fae98dcc6fc5a5703a5c62cbea187 ]
    
    Convert the sisr and sisr2 variable types to u32 to avoid the following
    sparse warnings:
    
    sound/soc/fsl/fsl_ssi.c:391:42: warning: incorrect type in argument 3 (different base types)
    sound/soc/fsl/fsl_ssi.c:391:42:    expected unsigned int *val
    sound/soc/fsl/fsl_ssi.c:391:42:    got restricted __be32 *<noident>
    sound/soc/fsl/fsl_ssi.c:393:17: warning: restricted __be32 degrades to integer
    sound/soc/fsl/fsl_ssi.c:393:15: warning: incorrect type in assignment (different base types)
    sound/soc/fsl/fsl_ssi.c:393:15:    expected restricted __be32 [usertype] sisr2
    sound/soc/fsl/fsl_ssi.c:393:15:    got unsigned int
    sound/soc/fsl/fsl_ssi.c:396:50: warning: incorrect type in argument 3 (different base types)
    sound/soc/fsl/fsl_ssi.c:396:50:    expected unsigned int [unsigned] val
    sound/soc/fsl/fsl_ssi.c:396:50:    got restricted __be32 [usertype] sisr2
    sound/soc/fsl/fsl_ssi.c:398:42: warning: incorrect type in argument 2 (different base types)
    sound/soc/fsl/fsl_ssi.c:398:42:    expected unsigned int [unsigned] [usertype] sisr
    sound/soc/fsl/fsl_ssi.c:398:42:    got restricted __be32 [addressable] [usertype] sisr
    
    In other places where regmap_read() is used a u32 variable is passed
    to store the register read value, so do the same here as well.
    
    regmap API already takes care of endianness, so the usage of u32 is safe.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 207276a52d3fdbd7af9f86c682e42a38fc5fd1ff
Author: Wei Xu <wxu@cnexlabs.com>
Date:   Thu Apr 26 14:59:19 2018 -0600

    nvme: lightnvm: add granby support
    
    [ Upstream commit ea48e877994f086af481427bac110aa63686c3ce ]
    
    Add a new lightnvm quirk to identify CNEX’s Granby controller.
    
    Signed-off-by: Wei Xu <wxu@cnexlabs.com>
    Reviewed-by: Javier González <javier@cnexlabs.com>
    Reviewed-by: Matias Bjørling <mb@lightnvm.io>
    Signed-off-by: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bce56f0cb64a1e0a461e1aba39c666958d5aaa40
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Mon Apr 9 22:28:29 2018 +0300

    memory: tegra: Apply interrupts mask per SoC
    
    [ Upstream commit 1c74d5c0de0c2cc29fef97a19251da2ad6f579bd ]
    
    Currently we are enabling handling of interrupts specific to Tegra124+
    which happen to overlap with previous generations. Let's specify
    interrupts mask per SoC generation for consistency and in a preparation
    of squashing of Tegra20 driver into the common one that will enable
    handling of GART faults which may be undesirable by newer generations.
    
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e4197353329a1d8eb8717e9acb92633a9a6dcb9
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Mon Apr 9 22:28:27 2018 +0300

    memory: tegra: Do not handle spurious interrupts
    
    [ Upstream commit bf3fbdfbec947cdd04b2f2c4bce11534c8786eee ]
    
    The ISR reads interrupts-enable mask, but doesn't utilize it. Apply the
    mask to the interrupt status and don't handle interrupts that MC driver
    haven't asked for. Kernel would disable spurious MC IRQ and report the
    error. This would happen only in a case of a very severe bug.
    
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4f84c17f04e5d112ebba17b3ebce8f407b77d87
Author: Tamizh Chelvam <tamizhr@codeaurora.org>
Date:   Wed Apr 25 11:36:44 2018 +0300

    ath10k: fix kernel panic while reading tpc_stats
    
    [ Upstream commit 4b190675ad06f5a6ecbeef0b01890c5fb372e3eb ]
    
    When attempt to read tpc_stats for the chipsets which support
    more than 3 tx chain will trigger kernel panic(kernel stack is corrupted)
    due to writing values on rate_code array out of range.
    This patch changes the array size depends on the WMI_TPC_TX_N_CHAIN and
    added check to avoid write values on the array if the num tx chain
    get in tpc config event is greater than WMI_TPC_TX_N_CHAIN.
    
    Tested on QCA9984 with firmware-5.bin_10.4-3.5.3-00057
    
    Kernel panic log :
    
    [  323.510944] Kernel panic - not syncing: stack-protector: Kernel stack is corrupted in: bf90c654
    [  323.510944]
    [  323.524390] CPU: 0 PID: 1908 Comm: cat Not tainted 3.14.77 #31
    [  323.530224] [<c021db48>] (unwind_backtrace) from [<c021ac08>] (show_stack+0x10/0x14)
    [  323.537941] [<c021ac08>] (show_stack) from [<c03c53c0>] (dump_stack+0x80/0xa0)
    [  323.545146] [<c03c53c0>] (dump_stack) from [<c022e4ac>] (panic+0x84/0x1e4)
    [  323.552000] [<c022e4ac>] (panic) from [<c022e61c>] (__stack_chk_fail+0x10/0x14)
    [  323.559350] [<c022e61c>] (__stack_chk_fail) from [<bf90c654>] (ath10k_wmi_event_pdev_tpc_config+0x424/0x438 [ath10k_core])
    [  323.570471] [<bf90c654>] (ath10k_wmi_event_pdev_tpc_config [ath10k_core]) from [<bf90d800>] (ath10k_wmi_10_4_op_rx+0x2f0/0x39c [ath10k_core])
    [  323.583047] [<bf90d800>] (ath10k_wmi_10_4_op_rx [ath10k_core]) from [<bf8fcc18>] (ath10k_htc_rx_completion_handler+0x170/0x1a0 [ath10k_core])
    [  323.595702] [<bf8fcc18>] (ath10k_htc_rx_completion_handler [ath10k_core]) from [<bf961f44>] (ath10k_pci_hif_send_complete_check+0x1f0/0x220 [ath10k_pci])
    [  323.609421] [<bf961f44>] (ath10k_pci_hif_send_complete_check [ath10k_pci]) from [<bf96562c>] (ath10k_ce_per_engine_service+0x74/0xc4 [ath10k_pci])
    [  323.622490] [<bf96562c>] (ath10k_ce_per_engine_service [ath10k_pci]) from [<bf9656f0>] (ath10k_ce_per_engine_service_any+0x74/0x80 [ath10k_pci])
    [  323.635423] [<bf9656f0>] (ath10k_ce_per_engine_service_any [ath10k_pci]) from [<bf96365c>] (ath10k_pci_napi_poll+0x44/0xe8 [ath10k_pci])
    [  323.647665] [<bf96365c>] (ath10k_pci_napi_poll [ath10k_pci]) from [<c0599994>] (net_rx_action+0xac/0x160)
    [  323.657208] [<c0599994>] (net_rx_action) from [<c02324a4>] (__do_softirq+0x104/0x294)
    [  323.665017] [<c02324a4>] (__do_softirq) from [<c0232920>] (irq_exit+0x9c/0x11c)
    [  323.672314] [<c0232920>] (irq_exit) from [<c0217fc0>] (handle_IRQ+0x6c/0x90)
    [  323.679341] [<c0217fc0>] (handle_IRQ) from [<c02084e0>] (gic_handle_irq+0x3c/0x60)
    [  323.686893] [<c02084e0>] (gic_handle_irq) from [<c02095c0>] (__irq_svc+0x40/0x70)
    [  323.694349] Exception stack(0xdd489c58 to 0xdd489ca0)
    [  323.699384] 9c40:                                                       00000000 a0000013
    [  323.707547] 9c60: 00000000 dc4bce40 60000013 ddc1d800 dd488000 00000990 00000000 c085c800
    [  323.715707] 9c80: 00000000 dd489d44 0000092d dd489ca0 c026e664 c026e668 60000013 ffffffff
    [  323.723877] [<c02095c0>] (__irq_svc) from [<c026e668>] (rcu_note_context_switch+0x170/0x184)
    [  323.732298] [<c026e668>] (rcu_note_context_switch) from [<c020e928>] (__schedule+0x50/0x4d4)
    [  323.740716] [<c020e928>] (__schedule) from [<c020e490>] (schedule_timeout+0x148/0x178)
    [  323.748611] [<c020e490>] (schedule_timeout) from [<c020f804>] (wait_for_common+0x114/0x154)
    [  323.756972] [<c020f804>] (wait_for_common) from [<bf8f6ef0>] (ath10k_tpc_stats_open+0xc8/0x340 [ath10k_core])
    [  323.766873] [<bf8f6ef0>] (ath10k_tpc_stats_open [ath10k_core]) from [<c02bb598>] (do_dentry_open+0x1ac/0x274)
    [  323.776741] [<c02bb598>] (do_dentry_open) from [<c02c838c>] (do_last+0x8c0/0xb08)
    [  323.784201] [<c02c838c>] (do_last) from [<c02c87e4>] (path_openat+0x210/0x598)
    [  323.791408] [<c02c87e4>] (path_openat) from [<c02c9d1c>] (do_filp_open+0x2c/0x78)
    [  323.798873] [<c02c9d1c>] (do_filp_open) from [<c02bc85c>] (do_sys_open+0x114/0x1b4)
    [  323.806509] [<c02bc85c>] (do_sys_open) from [<c0208c80>] (ret_fast_syscall+0x0/0x44)
    [  323.814241] CPU1: stopping
    [  323.816927] CPU: 1 PID: 0 Comm: swapper/1 Not tainted 3.14.77 #31
    [  323.823008] [<c021db48>] (unwind_backtrace) from [<c021ac08>] (show_stack+0x10/0x14)
    [  323.830731] [<c021ac08>] (show_stack) from [<c03c53c0>] (dump_stack+0x80/0xa0)
    [  323.837934] [<c03c53c0>] (dump_stack) from [<c021cfac>] (handle_IPI+0xb8/0x140)
    [  323.845224] [<c021cfac>] (handle_IPI) from [<c02084fc>] (gic_handle_irq+0x58/0x60)
    [  323.852774] [<c02084fc>] (gic_handle_irq) from [<c02095c0>] (__irq_svc+0x40/0x70)
    [  323.860233] Exception stack(0xdd499fa0 to 0xdd499fe8)
    [  323.865273] 9fa0: ffffffed 00000000 1d3c9000 00000000 dd498000 dd498030 10c0387d c08b62c8
    [  323.873432] 9fc0: 4220406a 512f04d0 00000000 00000000 00000001 dd499fe8 c021838c c0218390
    [  323.881588] 9fe0: 60000013 ffffffff
    [  323.885070] [<c02095c0>] (__irq_svc) from [<c0218390>] (arch_cpu_idle+0x30/0x50)
    [  323.892454] [<c0218390>] (arch_cpu_idle) from [<c026500c>] (cpu_startup_entry+0xa4/0x108)
    [  323.900690] [<c026500c>] (cpu_startup_entry) from [<422085a4>] (0x422085a4)
    
    Signed-off-by: Tamizh chelvam <tamizhr@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe52ec8c67bf1b2b026e857b7b49c6c2f3b6363a
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Mon Apr 23 18:10:23 2018 +0200

    delayacct: Use raw_spinlocks
    
    [ Upstream commit 02acc80d19edb0d5684c997b2004ad19f9f5236e ]
    
    try_to_wake_up() might invoke delayacct_blkio_end() while holding the
    pi_lock (which is a raw_spinlock_t). delayacct_blkio_end() acquires
    task_delay_info.lock which is a spinlock_t. This causes a might sleep splat
    on -RT where non raw spinlocks are converted to 'sleeping' spinlocks.
    
    task_delay_info.lock is only held for a short amount of time so it's not a
    problem latency wise to make convert it to a raw spinlock.
    
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Balbir Singh <bsingharora@gmail.com>
    Link: https://lkml.kernel.org/r/20180423161024.6710-1-bigeasy@linutronix.de
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 852de89a5f928fbeb3b9acf60d355b632168ba84
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Apr 23 21:16:35 2018 +0200

    stop_machine: Use raw spinlocks
    
    [ Upstream commit de5b55c1d4e30740009864eb35ce4ed856aac01d ]
    
    Use raw-locks in stop_machine() to allow locking in irq-off and
    preempt-disabled regions on -RT. This also documents the possible locking
    context in general.
    
    [bigeasy: update patch description.]
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Link: https://lkml.kernel.org/r/20180423191635.6014-1-bigeasy@linutronix.de
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa38c2df9ad83cf85bd0fedc8692bfcd4d19aefd
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Sun Jan 14 22:07:10 2018 +0100

    backlight: pwm_bl: Don't use GPIOF_* with gpiod_get_direction
    
    [ Upstream commit bb084c0f61d659f0e6d371b096e0e57998f191d6 ]
    
    The documentation was wrong, gpiod_get_direction() returns 0/1 instead
    of the GPIOF_* flags. The docs were fixed with commit 94fc73094abe47
    ("gpio: correct docs about return value of gpiod_get_direction"). Now,
    fix this user (until a better, system-wide solution is in place).
    
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Acked-by: Daniel Thompson <daniel.thompson@linaro.org>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bad56027a936de7fdff5a9326b401805da50544
Author: Felix Fietkau <nbd@nbd.name>
Date:   Wed Apr 25 11:11:23 2018 +0200

    mt76: add rcu locking around tx scheduling
    
    [ Upstream commit 1d868b70e06a2319fdda46cc46ec7c6762557543 ]
    
    Fixes a reported lockdep error in mac80211:
    
    [  179.867321] =============================
    [  179.871510] WARNING: suspicious RCU usage
    [  179.875528] 4.14.32 #0 Not tainted
    [  179.878924] -----------------------------
    [  179.882981] backports-2017-11-01/net/mac80211/tx.c:594 suspicious rcu_dereference_check() usage!
    [  179.891785]
    [  179.891785] other info that might help us debug this:
    [  179.891785]
    [  179.899824]
    [  179.899824] rcu_scheduler_active = 2, debug_locks = 1
    [  179.906343] 2 locks held by ksoftirqd/0/7:
    [  179.910479]  #0:  (&(&q->lock)->rlock){+.-.}, at: [<86b207a4>] mt76_dma_tx_cleanup+0x64/0x354 [mt76]
    [  179.919734]  #1:  (&(&fq->lock)->rlock){+.-.}, at: [<87238410>] ieee80211_tx_dequeue+0x54/0xc3c [mac80211]
    [  179.929890]
    [  179.929890] stack backtrace:
    [  179.934257] CPU: 0 PID: 7 Comm: ksoftirqd/0 Not tainted 4.14.32 #0
    [  179.940421] Stack : 00000000 00000000 00000000 00000000 80e0fce2 00000036 00000000 00000000
    [  179.948864]         87c3d24c 80696377 8061039c 00000000 00000007 00000001 87c5db78 6534689d
    [  179.957306]         00000000 00000000 80e10000 87c5da74 00000001 0000015a 00000007 00000000
    [  179.965748]         00000000 806a0000 000e4171 00000000 00000000 00000000 ffffffff 00000001
    [  179.974189]         806c0000 8692b240 86b000d0 87316fe4 00000001 802c9a68 00000000 80700000
    [  179.982632]         ...
    [  179.985104] Call Trace:
    [  179.987582] [<80010a48>] show_stack+0x58/0x100
    [  179.992040] [<804c2c58>] dump_stack+0xe8/0x170
    [  179.996868] [<87234a04>] ieee80211_tx_h_select_key+0xa8/0x5b8 [mac80211]
    [  180.004299] [<87238d44>] ieee80211_tx_dequeue+0x988/0xc3c [mac80211]
    [  180.011048] [<86b230dc>] mt76_txq_schedule+0x110/0x3a4 [mt76]
    [  180.016821] [<86b209d0>] mt76_dma_tx_cleanup+0x290/0x354 [mt76]
    [  180.022777] [<86be2e60>] mt7603_tx_tasklet+0x40/0x6c [mt7603e]
    [  180.028637] [<80037058>] tasklet_action+0x110/0x1ec
    [  180.033532] [<804e1dac>] __do_softirq+0x164/0x35c
    [  180.038235] [<80037174>] run_ksoftirqd+0x40/0x84
    [  180.042870] [<800580c8>] smpboot_thread_fn+0x1a8/0x1d8
    [  180.048023] [<800542e8>] kthread+0x130/0x144
    [  180.052297] [<8000b1f8>] ret_from_kernel_thread+0x14/0x1c
    
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bcca8a39076c40754513db93b812f4d9526921c
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Fri Apr 20 01:41:38 2018 -0700

    i40e: avoid overflow in i40e_ptp_adjfreq()
    
    [ Upstream commit 830e0dd9996c4644e42412aa6c46ed8f8eab0cca ]
    
    When operating at 1GbE, the base incval for the PTP clock is so large
    that multiplying it by numbers close to the max_adj can overflow the
    u64.
    
    Rather than attempting to limit the max_adj to a value small enough to
    avoid overflow, instead calculate the incvalue adjustment based on the
    40GbE incvalue, and then multiply that by the scaling factor for the
    link speed.
    
    This sacrifices a small amount of precision in the adjustment but we
    avoid erratic behavior of the clock due to the overflow caused if ppb is
    very near the maximum adjustment.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8fb5d37a9b8c4fd1e54de61b11f798a8b1c016f
Author: Jakub Pawlak <jakub.pawlak@intel.com>
Date:   Fri Apr 20 01:41:35 2018 -0700

    i40e: Add advertising 10G LR mode
    
    [ Upstream commit 6ee4d32255865fc4b383355a8354603d60ab9f8a ]
    
    The advertising 10G LR mode should be possible to set
    but in the function i40e_set_link_ksettings() check for this
    is missed. This patch adds check for 10000baseLR_Full
    flag for 10G modes.
    
    Signed-off-by: Jakub Pawlak <jakub.pawlak@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91781a4d00161cd8b4149b9cc81f5f987bb5868f
Author: Yixun Lan <yixun.lan@amlogic.com>
Date:   Sat Apr 28 10:21:10 2018 +0000

    dt-bindings: net: meson-dwmac: new compatible name for AXG SoC
    
    [ Upstream commit 7e5d05e18ba1ed491c6f836edee7f0b90f3167bc ]
    
    We need to introduce a new compatible name for the Meson-AXG SoC
    in order to support the RMII 100M ethernet PHY, since the PRG_ETH0
    register of the dwmac glue layer is changed from previous old SoC.
    
    Signed-off-by: Yixun Lan <yixun.lan@amlogic.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a47d8531e43654aaaa938869e88541e77cd577ba
Author: Huazhong Tan <tanhuazhong@huawei.com>
Date:   Tue May 1 19:55:59 2018 +0100

    net: hns3: Fixes the out of bounds access in hclge_map_tqp
    
    [ Upstream commit 38e62046d4c95272e2fb001d2d72baf48fa090e9 ]
    
    This patch fixes the handling of the check when number of vports
    are detected to be more than available TPQs. Current handling causes
    an out of bounds access in hclge_map_tqp().
    
    Fixes: 7df7dad633e2 ("net: hns3: Refactor the mapping of tqp to vport")
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26fd86b8d07b3cf94bc04db47bd5e8960240c3ff
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sun Apr 29 01:46:23 2018 +0300

    spi: meson-spicc: Fix error handling in meson_spicc_probe()
    
    [ Upstream commit ded5fa4e8bac25612caab8f0822691308a28a552 ]
    
    If devm_spi_register_master() fails in meson_spicc_probe(),
    spicc->core is left undisabled. The patch fixes that.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9dc7f5dd7dd788ed4a020f6c01ec7175014a70c
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sun Apr 22 12:53:28 2018 +0200

    dt-bindings: pinctrl: meson: add support for the Meson8m2 SoC
    
    [ Upstream commit 03d9fbc39730b3e6b2e7047dc85f0f70de8fb97d ]
    
    The Meson8m2 SoC is a variant of Meson8 with some updates from Meson8b
    (such as the Gigabit capable DesignWare MAC).
    It is mostly pin compatible with Meson8, only 10 (existing) CBUS pins
    get an additional function (four of these are Ethernet RXD2, RXD3, TXD2
    and TXD3 which are required when the board uses an RGMII PHY).
    The AOBUS pins seem to be identical on Meson8 and Meson8m2.
    
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 719e769be2bac88bed7c16fb3773a21ff271692e
Author: Tobin C. Harding <me@tobin.cc>
Date:   Mon Mar 26 17:33:14 2018 +1100

    mmc: pwrseq: Use kmalloc_array instead of stack VLA
    
    [ Upstream commit 486e6661367b40f927aadbed73237693396cbf94 ]
    
    The use of stack Variable Length Arrays needs to be avoided, as they
    can be a vector for stack exhaustion, which can be both a runtime bug
    (kernel Oops) or a security flaw (overwriting memory beyond the
    stack). Also, in general, as code evolves it is easy to lose track of
    how big a VLA can get. Thus, we can end up having runtime failures
    that are hard to debug. As part of the directive[1] to remove all VLAs
    from the kernel, and build with -Wvla.
    
    Currently driver is using a VLA declared using the number of descriptors.  This
    array is used to store integer values and is later used as an argument to
    `gpiod_set_array_value_cansleep()` This can be avoided by using
    `kmalloc_array()` to allocate memory for the array of integer values.  Memory is
    free'd before return from function.
    
    >From the code it appears that it is safe to sleep so we can use GFP_KERNEL
    (based _cansleep() suffix of function `gpiod_set_array_value_cansleep()`.
    
    It can be expected that this patch will result in a small increase in overhead
    due to the use of `kmalloc_array()`
    
    [1] https://lkml.org/lkml/2018/3/7/621
    
    Signed-off-by: Tobin C. Harding <me@tobin.cc>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72e0bdbdb7b098a599a9f7379526b5b0b237db58
Author: Shawn Lin <shawn.lin@rock-chips.com>
Date:   Mon Mar 26 17:26:25 2018 +0800

    mmc: dw_mmc: update actual clock for mmc debugfs
    
    [ Upstream commit ff178981bd5fd1667f373098740cb1c6d6efa1ba ]
    
    Respect the actual clock for mmc debugfs to help better debug
    the hardware.
    
    mmc_host mmc0: Bus speed (slot 0) = 135475200Hz (slot req 150000000Hz,
    actual 135475200HZ div = 0)
    
    cat /sys/kernel/debug/mmc0/ios
    clock:          150000000 Hz
    actual clock:   135475200 Hz
    vdd:            21 (3.3 ~ 3.4 V)
    bus mode:       2 (push-pull)
    chip select:    0 (don't care)
    power mode:     2 (on)
    bus width:      3 (8 bits)
    timing spec:    9 (mmc HS200)
    signal voltage: 0 (1.80 V)
    driver type:    0 (driver type B)
    
    Cc: Xiao Yao <xiaoyao@rock-chips.com>
    Cc: Ziyuan <xzy.xu@rock-chips.com>
    Signed-off-by: Shawn Lin <shawn.lin@rock-chips.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 786d69794a4977c932c43ba85d314fac1a84d0ed
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Wed May 2 22:48:16 2018 +0900

    ALSA: hda/ca0132: fix build failure when a local macro is defined
    
    [ Upstream commit 8e142e9e628975b0dddd05cf1b095331dff6e2de ]
    
    DECLARE_TLV_DB_SCALE (alias of SNDRV_CTL_TLVD_DECLARE_DB_SCALE) is used but
    tlv.h is not included. This causes build failure when local macro is
    defined by comment-out.
    
    This commit fixes the bug. At the same time, the alias macro is replaced
    with a destination macro added at a commit 46e860f76804 ("ALSA: rename
    TLV-related macros so that they're friendly to user applications")
    
    Reported-by: Connor McAdams <conmanx360@gmail.com>
    Fixes: 44f0c9782cc6 ('ALSA: hda/ca0132: Add tuning controls')
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a44c424f081e3ba6774e2cf25c39ed577842e819
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Wed May 2 10:17:34 2018 +0300

    mlxsw: spectrum_router: Return an error for non-default FIB rules
    
    [ Upstream commit 6290182b2b3bda119ecb243fb3d6bcc98a74344f ]
    
    Since commit 9776d32537d2 ("net: Move call_fib_rule_notifiers up in
    fib_nl_newrule") it is possible to forbid the installation of
    unsupported FIB rules.
    
    Have mlxsw return an error for non-default FIB rules in addition to the
    existing extack message.
    
    Example:
    # ip rule add from 198.51.100.1 table 10
    Error: mlxsw_spectrum: FIB rules not supported.
    
    Note that offload is only aborted when non-default FIB rules are already
    installed and merely replayed during module initialization.
    
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Acked-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a70bfed87ce90fdeef57893eb1df1c4c052fe90f
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Fri Apr 20 23:44:59 2018 -0700

    f2fs: check cap_resource only for data blocks
    
    [ Upstream commit a90a0884ac75f825157470a1c17e707d487bceb6 ]
    
    This patch changes the rule to check cap_resource for data blocks, not inode
    or node blocks in order to avoid selinux denial.
    
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b50b523b723ac272b35c79cb081d8650cdb1f97
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Fri Apr 27 17:17:10 2018 +0530

    mmc: sdhci-omap: Fix when capabilities are obtained from SDHCI_CAPABILITIES reg
    
    [ Upstream commit 0ec4ee3c9b9755b28fd2e89b2ceaae6f15403368 ]
    
    sdhci_omap_config_iodelay_pinctrl_state() requires caps and caps2 to be
    initialized (speed mode capabilities like UHS/HS200) before it is
    invoked. While mmc_of_parse() initializes caps/caps2 if capabilities is
    populated in device tree, it will remain uninitialized for capabilities
    obtained from SDHCI_CAPABILITIES register.
    Fix sdhci_omap_config_iodelay_pinctrl_state() to be used even while
    getting the capabilities from SDHCI_CAPABILITIES register by invoking
    sdhci_setup_host() before sdhci_omap_config_iodelay_pinctrl_state().
    
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Acked-by: Tony Lindgren <tony@atomide.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c81350c31d0d20661a0aa839b79182bcb0e7a45d
Author: Satendra Singh Thakur <satendra.t@samsung.com>
Date:   Thu May 3 11:19:32 2018 +0530

    drm/atomic: Handling the case when setting old crtc for plane
    
    [ Upstream commit fc2a69f3903dfd97cd47f593e642b47918c949df ]
    
    In the func drm_atomic_set_crtc_for_plane, with the current code,
    if crtc of the plane_state and crtc passed as argument to the func
    are same, entire func will executed in vein.
    It will get state of crtc and clear and set the bits in plane_mask.
    All these steps are not required for same old crtc.
    Ideally, we should do nothing in this case, this patch handles the same,
    and causes the program to return without doing anything in such scenario.
    
    Signed-off-by: Satendra Singh Thakur <satendra.t@samsung.com>
    Cc: Madhur Verma <madhur.verma@samsung.com>
    Cc: Hemanshu Srivastava <hemanshu.s@samsung.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/1525326572-25854-1-git-send-email-satendra.t@samsung.com
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b6c80113d541ca0498cf1a25c7f69972d7f7442
Author: Lorenzo Bianconi <lorenzo.bianconi@redhat.com>
Date:   Wed May 2 11:46:36 2018 +0200

    mt76x2: fix avg_rssi estimation
    
    [ Upstream commit c990affd5abce1f338ac52539e092dad04647fb6 ]
    
    Add leftover filter coefficients in IIR rssi estimation
    
    Fixes: 7bc04215a66b ("mt76: add driver code for MT76x2e")
    Signed-off-by: Lorenzo Bianconi <lorenzo.bianconi@redhat.com>
    Acked-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43f5952d0f5338ea74d65c35028f2a39fd26a57d
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Fri Apr 20 08:32:16 2018 -0400

    media: siano: get rid of __le32/__le16 cast warnings
    
    [ Upstream commit e1b7f11b37def5f3021c06e8c2b4953e099357aa ]
    
    Those are all false-positives that appear with smatch when building for
    arm:
    
      drivers/media/common/siano/smsendian.c:38:36: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:38:36: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:38:36: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:38:36: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:38:36: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:38:36: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:47:44: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:47:44: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:47:44: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:47:44: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:47:44: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:47:44: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:67:35: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:67:35: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:67:35: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:67:35: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:84:44: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:84:44: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:84:44: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:84:44: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:84:44: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:84:44: warning: cast to restricted __le32
      drivers/media/common/siano/smsendian.c:98:26: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:98:26: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:98:26: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:98:26: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:99:28: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:99:28: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:99:28: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:99:28: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:100:27: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:100:27: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:100:27: warning: cast to restricted __le16
      drivers/media/common/siano/smsendian.c:100:27: warning: cast to restricted __le16
    
    Get rid of them by adding explicit forced casts.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aad7993a563b9f183513ab3a1ae3e9c3f240fdf1
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Fri Mar 9 07:21:45 2018 -0500

    media: em28xx: fix a regression with HVR-950
    
    [ Upstream commit 509f89652f83e834b3ef7a083e2eeac812b055f0 ]
    
    Commit be7fd3c3a8c5 ("media: em28xx: Hauppauge DualHD second tuner
    functionality") removed the logic with sets the alternate for the DVB
    device. Without setting the right alternate, the device won't be
    able to submit URBs, and userspace fails with -EMSGSIZE:
    
            ERROR     DMX_SET_PES_FILTER failed (PID = 0x2000): 90 Message too long
    
    Tested with Hauppauge HVR-950 model A1C0.
    
    Fixes: be7fd3c3a8c5 ("media: em28xx: Hauppauge DualHD second tuner functionality")
    
    Cc: Brad Love <brad@nextdimension.cc>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fc891a62cecb43b0be4c2a8f676d74efba6131f
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Thu May 3 23:26:02 2018 -0700

    f2fs: avoid fsync() failure caused by EAGAIN in writepage()
    
    [ Upstream commit 5b19d284f5195a925dd015a6397bfce184097378 ]
    
    pageout() in MM traslates EAGAIN, so calls handle_write_error()
     -> mapping_set_error() -> set_bit(AS_EIO, ...).
     file_write_and_wait_range() will see EIO error, which is critical
     to return value of fsync() followed by atomic_write failure to user.
    
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7825eb34a1a8cf09dd66cf370efcc4a406d49ef
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Thu May 3 18:37:17 2018 -0700

    bpf: fix references to free_bpf_prog_info() in comments
    
    [ Upstream commit ab7f5bf0928be2f148d000a6eaa6c0a36e74750e ]
    
    Comments in the verifier refer to free_bpf_prog_info() which
    seems to have never existed in tree.  Replace it with
    free_used_maps().
    
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Quentin Monnet <quentin.monnet@netronome.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 666778425ab1b0621af3bd8f684c8e2cdfbd18c7
Author: Changbin Du <changbin.du@intel.com>
Date:   Wed May 2 21:44:57 2018 +0800

    regulator: add dummy function of_find_regulator_by_node
    
    [ Upstream commit 08813e0ec1cb48e53c86a24d88d26b26878e7b6e ]
    
    If device tree is not enabled, of_find_regulator_by_node() should have
    a dummy function since the function call is still there.
    
    This is to fix build error after CONFIG_NO_AUTO_INLINE is introduced.
    If this option is enabled, GCC will not auto-inline functions that are
    not explicitly marked as inline.
    
    In this case (no CONFIG_OF), the copmiler will report error in function
    regulator_dev_lookup().
    
    W/O NO_AUTO_INLINE, function of_get_regulator() is auto-inlined and then
    the call to of_find_regulator_by_node() is optimized out since
    of_get_regulator() always return NULL.
    
    W/ NO_AUTO_INLINE, the return value of of_get_regulator() is a variable
    so the call to of_find_regulator_by_node() cannot be optimized out. So
    we need a stub of_find_regulator_by_node().
    
    static struct regulator_dev *regulator_dev_lookup(struct device *dev,
                                                      const char *supply)
    {
            struct regulator_dev *r = NULL;
            struct device_node *node;
            struct regulator_map *map;
            const char *devname = NULL;
    
            regulator_supply_alias(&dev, &supply);
    
            /* first do a dt based lookup */
            if (dev && dev->of_node) {
                    node = of_get_regulator(dev, supply);
                    if (node) {
                            r = of_find_regulator_by_node(node);
                            if (r)
                                    return r;
            ...
    
    Signed-off-by: Changbin Du <changbin.du@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9267f3fe1f818864c5058780dc9726b52d7ca592
Author: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
Date:   Thu Apr 26 13:51:16 2018 +0200

    thermal: exynos: fix setting rising_threshold for Exynos5433
    
    [ Upstream commit 8bfc218d0ebbabcba8ed2b8ec1831e0cf1f71629 ]
    
    Add missing clearing of the previous value when setting rising
    temperature threshold.
    
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fd91802e069f8f5c09d4741487345b19f45047a
Author: Doug Oucharek <dougso@me.com>
Date:   Tue May 1 23:49:18 2018 -0400

    staging: lustre: o2iblnd: Fix FastReg map/unmap for MLX5
    
    [ Upstream commit 24d4b7c8de007cff9c7d83c06ae76099fdcce008 ]
    
    The FastReg support in ko2iblnd was not unmapping pool items
    causing the items to leak.  In addition, the mapping code
    is not growing the pool like we do with FMR.
    
    This patch makes sure we are unmapping FastReg pool elements
    when we are done with them.  It also makes sure the pool
    will grow when we depleat the pool.
    
    Signed-off-by: Doug Oucharek <doug.s.oucharek@intel.com>
    Intel-bug-id: https://jira.hpdd.intel.com/browse/LU-9472
    Reviewed-on: https://review.whamcloud.com/27015
    Reviewed-by: Andrew Perepechko <andrew.perepechko@seagate.com>
    Reviewed-by: Dmitry Eremin <dmitry.eremin@intel.com>
    Reviewed-by: James Simmons <uja.ornl@yahoo.com>
    Reviewed-by: Oleg Drokin <oleg.drokin@intel.com>
    Signed-off-by: Doug Oucharek <dougso@me.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8bd8f2d1d4878372e37d2c23bc10e827ab2a1b51
Author: Doug Oucahrek <dougso@me.com>
Date:   Tue May 1 22:22:19 2018 -0700

    staging: lustre: o2iblnd: fix race at kiblnd_connect_peer
    
    [ Upstream commit cf04968efe341b9b1c30a527e5dd61b2af9c43d2 ]
    
    cmid will be destroyed at OFED if kiblnd_cm_callback return error.
    if error happen before the end of kiblnd_connect_peer, it will touch
    destroyed cmid and fail as
    (o2iblnd_cb.c:1315:kiblnd_connect_peer())
                ASSERTION( cmid->device != ((void *)0) ) failed:
    
    Signed-off-by: Alexander Boyko <alexander.boyko@seagate.com>
    Intel-bug-id: https://jira.hpdd.intel.com/browse/LU-10015
    Reviewed-by: Alexey Lyashkov <c17817@cray.com>
    Reviewed-by: Doug Oucharek <dougso@me.com>
    Reviewed-by: John L. Hammond <john.hammond@intel.com>
    Signed-off-by: Doug Oucharek <dougso@me.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 833e3bd59dcc143c0879af3f70ca35538f1ac8a5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Apr 16 17:18:19 2018 +0200

    dma-direct: try reallocation with GFP_DMA32 if possible
    
    [ Upstream commit de7eab301de78869322104ea13e124c936ad3e1f ]
    
    As the recent swiotlb bug revealed, we seem to have given up the direct
    DMA allocation too early and felt back to swiotlb allocation.  The reason
    is that swiotlb allocator expected that dma_direct_alloc() would try
    harder to get pages even below 64bit DMA mask with GFP_DMA32, but the
    function doesn't do that but only deals with GFP_DMA case.
    
    This patch adds a similar fallback reallocation with GFP_DMA32 as we've
    done with GFP_DMA.  The condition is that the coherent mask is smaller
    than 64bit (i.e. some address limitation), and neither GFP_DMA nor
    GFP_DMA32 is set beforehand.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d36ea91e67dd8668074bf3e433358a32f3cb0fe6
Author: Chad Dupuis <chad.dupuis@cavium.com>
Date:   Wed Apr 25 06:09:02 2018 -0700

    scsi: qedf: Set the UNLOADING flag when removing a vport
    
    [ Upstream commit 4f4616ceebaf045c59e8a6aa01f08826d18d5c63 ]
    
    Similar to what we do when we remove a PCI function, set the
    QEDF_UNLOADING flag to prevent any requests from being queued while a
    vport is being deleted.  This prevents any requests from getting stuck
    in limbo when the vport is unloaded or deleted.
    
    Fixes the crash:
    
    PID: 106676  TASK: ffff9a436aa90000  CPU: 12  COMMAND: "multipathd"
     #0 [ffff9a43567d3550] machine_kexec+522 at ffffffffaca60b2a
     #1 [ffff9a43567d35b0] __crash_kexec+114 at ffffffffacb13512
     #2 [ffff9a43567d3680] crash_kexec+48 at ffffffffacb13600
     #3 [ffff9a43567d3698] oops_end+168 at ffffffffad117768
     #4 [ffff9a43567d36c0] no_context+645 at ffffffffad106f52
     #5 [ffff9a43567d3710] __bad_area_nosemaphore+116 at ffffffffad106fe9
     #6 [ffff9a43567d3760] bad_area+70 at ffffffffad107379
     #7 [ffff9a43567d3788] __do_page_fault+1247 at ffffffffad11a8cf
     #8 [ffff9a43567d37f0] do_page_fault+53 at ffffffffad11a915
     #9 [ffff9a43567d3820] page_fault+40 at ffffffffad116768
        [exception RIP: qedf_init_task+61]
        RIP: ffffffffc0e13c2d  RSP: ffff9a43567d38d0  RFLAGS: 00010046
        RAX: 0000000000000000  RBX: ffffbe920472c738  RCX: ffff9a434fa0e3e8
        RDX: ffff9a434f695280  RSI: ffffbe920472c738  RDI: ffff9a43aa359c80
        RBP: ffff9a43567d3950   R8: 0000000000000c15   R9: ffff9a3fb09b9880
        R10: ffff9a434fa0e3e8  R11: ffff9a43567d35ce  R12: 0000000000000000
        R13: ffff9a434f695280  R14: ffff9a43aa359c80  R15: ffff9a3fb9e005c0
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
    
    Signed-off-by: Chad Dupuis <chad.dupuis@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 073b0ab717d7aa8c6af0865f1264f773fa7cdc30
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu May 3 13:56:17 2018 +0530

    soc/tegra: pmc: Don't allocate struct tegra_powergate on stack
    
    [ Upstream commit 495ac33a3b82f85ed4fbdd9b826c1d2fbc8e9b68 ]
    
    With a later commit an instance of the struct device will be added to
    struct genpd and with that the size of the struct tegra_powergate will
    be over 1024 bytes. That generates following warning:
    
    drivers/soc/tegra/pmc.c:579:1: warning: the frame size of 1200 bytes is larger than 1024 bytes [-Wframe-larger-than=]
    
    Avoid such warnings by allocating the structure dynamically.
    
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Acked-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93eb64009b9665bf7efbc314f7018fba08518d2c
Author: Xiang Chen <chenxiang66@hisilicon.com>
Date:   Wed May 2 23:56:31 2018 +0800

    scsi: hisi_sas: config ATA de-reset as an constrained command for v3 hw
    
    [ Upstream commit 9413532788df7470297dd0475995c5dc5b07f362 ]
    
    As a unconstrained command, a command can be sent to SATA disk even if
    SATA disk status is BUSY, ERR or DRQ.
    
    If an ATA reset assert is successful but ATA reset de-assert fails, then
    it will retry the reset de-assert. If reset de- assert retry is
    successful, we think it is okay to probe the device but actually it
    still has Err status.
    
    Apparently we need to retry the ATA reset assertion and de- assertion
    instead for this mentioned scenario.
    
    As such, we config ATA reset assert as a constrained command, if ATA
    reset de-assert fails, then ATA reset de-assert retry will also
    fail. Then we will retry the proper process of ATA reset assert and
    de-assert again.
    
    Signed-off-by: Xiang Chen <chenxiang66@hisilicon.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ddaebbdd6701073d071569a91904fd02f450b92
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu May 3 13:54:32 2018 +0300

    scsi: megaraid: silence a static checker bug
    
    [ Upstream commit 27e833dabab74ee665e487e291c9afc6d71effba ]
    
    If we had more than 32 megaraid cards then it would cause memory
    corruption.  That's not likely, of course, but it's handy to enforce it
    and make the static checker happy.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c093edfddc98c0593df8f317c917cef623c6c0e
Author: Wenwen Wang <wang6495@umn.edu>
Date:   Mon May 7 19:54:01 2018 -0500

    scsi: 3w-xxxx: fix a missing-check bug
    
    [ Upstream commit 9899e4d3523faaef17c67141aa80ff2088f17871 ]
    
    In tw_chrdev_ioctl(), the length of the data buffer is firstly copied
    from the userspace pointer 'argp' and saved to the kernel object
    'data_buffer_length'. Then a security check is performed on it to make
    sure that the length is not more than 'TW_MAX_IOCTL_SECTORS *
    512'. Otherwise, an error code -EINVAL is returned. If the security
    check is passed, the entire ioctl command is copied again from the
    'argp' pointer and saved to the kernel object 'tw_ioctl'. Then, various
    operations are performed on 'tw_ioctl' according to the 'cmd'. Given
    that the 'argp' pointer resides in userspace, a malicious userspace
    process can race to change the buffer length between the two
    copies. This way, the user can bypass the security check and inject
    invalid data buffer length. This can cause potential security issues in
    the following execution.
    
    This patch checks for capable(CAP_SYS_ADMIN) in tw_chrdev_open() to
    avoid the above issues.
    
    Signed-off-by: Wenwen Wang <wang6495@umn.edu>
    Acked-by: Adam Radford <aradford@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1781ecf288437161ea802d05a6022462d7d32066
Author: Wenwen Wang <wang6495@umn.edu>
Date:   Mon May 7 19:46:43 2018 -0500

    scsi: 3w-9xxx: fix a missing-check bug
    
    [ Upstream commit c9318a3e0218bc9dacc25be46b9eec363259536f ]
    
    In twa_chrdev_ioctl(), the ioctl driver command is firstly copied from
    the userspace pointer 'argp' and saved to the kernel object
    'driver_command'.  Then a security check is performed on the data buffer
    size indicated by 'driver_command', which is
    'driver_command.buffer_length'. If the security check is passed, the
    entire ioctl command is copied again from the 'argp' pointer and saved
    to the kernel object 'tw_ioctl'. Then, various operations are performed
    on 'tw_ioctl' according to the 'cmd'. Given that the 'argp' pointer
    resides in userspace, a malicious userspace process can race to change
    the buffer size between the two copies. This way, the user can bypass
    the security check and inject invalid data buffer size. This can cause
    potential security issues in the following execution.
    
    This patch checks for capable(CAP_SYS_ADMIN) in twa_chrdev_open()t o
    avoid the above issues.
    
    Signed-off-by: Wenwen Wang <wang6495@umn.edu>
    Acked-by: Adam Radford <aradford@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e04adf0f74aa40c3c24838d1f43cf6b0101020c
Author: Christian Gromm <christian.gromm@microchip.com>
Date:   Tue May 8 11:45:06 2018 +0200

    staging: most: cdev: fix chrdev_region leak
    
    [ Upstream commit aba258b73101670c06b1dd700e500ed0a3fa0e8e ]
    
    The function unregister_chrdev_region is called with a different counter
    as the alloc_chrdev_region. To fix this, this patch introduces the
    constant CHRDEV_REGION_SIZE that is used in both functions.
    
    Signed-off-by: Christian Gromm <christian.gromm@microchip.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0225a1b338770d5d419242466dd0f4248c1c67c1
Author: Ram Pai <linuxram@us.ibm.com>
Date:   Tue Mar 27 02:09:26 2018 -0700

    mm, powerpc, x86: define VM_PKEY_BITx bits if CONFIG_ARCH_HAS_PKEYS is enabled
    
    [ Upstream commit 5212213aa5a2359dd0474c9dab22b6220b591fe1 ]
    
    VM_PKEY_BITx are defined only if CONFIG_X86_INTEL_MEMORY_PROTECTION_KEYS
    is enabled. Powerpc also needs these bits. Hence lets define the
    VM_PKEY_BITx bits for any architecture that enables
    CONFIG_ARCH_HAS_PKEYS.
    
    Reviewed-by: Dave Hansen <dave.hansen@intel.com>
    Signed-off-by: Ram Pai <linuxram@us.ibm.com>
    Reviewed-by: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcb85cc9f94b020941e4ccbbee825aad8ab17f5e
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Tue May 8 03:18:41 2018 -0400

    bnxt_en: Always forward VF MAC address to the PF.
    
    [ Upstream commit 707e7e96602675beb5e09bb994195663da6eb56d ]
    
    The current code already forwards the VF MAC address to the PF, except
    in one case.  If the VF driver gets a valid MAC address from the firmware
    during probe time, it will not forward the MAC address to the PF,
    incorrectly assuming that the PF already knows the MAC address.  This
    causes "ip link show" to show zero VF MAC addresses for this case.
    
    This assumption is not correct.  Newer firmware remembers the VF MAC
    address last used by the VF and provides it to the VF driver during
    probe.  So we need to always forward the VF MAC address to the PF.
    
    The forwarded MAC address may now be the PF assigned MAC address and so we
    need to make sure we approve it for this case.
    
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ceba5d5f55fb0df16f13a971b80025a2f6c4d628
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Tue May 8 03:18:39 2018 -0400

    bnxt_en: Check unsupported speeds in bnxt_update_link() on PF only.
    
    [ Upstream commit dac0490718bd17df5e3995ffca14255e5f9ed22d ]
    
    Only non-NPAR PFs need to actively check and manage unsupported link
    speeds.  NPAR functions and VFs do not control the link speed and
    should skip the unsupported speed detection logic, to avoid warning
    messages from firmware rejecting the unsupported firmware calls.
    
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af4a392e5a15920e7a337fae01a5f866cb9f605c
Author: Antoine Tenart <antoine.tenart@bootlin.com>
Date:   Fri May 4 17:21:03 2018 +0200

    net: phy: sfp: handle cases where neither BR, min nor BR, max is given
    
    [ Upstream commit 2b999ba899059eed00a03d029894a62486e7e2bc ]
    
    When computing the bitrate using values read from an SFP module EEPROM,
    we use the nominal BR plus BR,min and BR,max to determine the
    boundaries. But in some cases BR,min and BR,max aren't provided, which
    led the SFP code to end up having the nominal value for both the minimum
    and maximum bitrate values. When using a passive cable, the nominal
    value should be used as the maximum one, and there is no minimum one
    so we should use 0.
    
    Signed-off-by: Antoine Tenart <antoine.tenart@bootlin.com>
    Acked-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8410a8ddfea1c80b9d9532bdbc5972850c6b2b08
Author: Thomas Richter <tmricht@linux.ibm.com>
Date:   Tue May 8 07:53:39 2018 +0200

    perf: fix invalid bit in diagnostic entry
    
    [ Upstream commit 3c0a83b14ea71fef5ccc93a3bd2de5f892be3194 ]
    
    The s390 CPU measurement facility sampling mode supports basic entries
    and diagnostic entries. Each entry has a valid bit to indicate the
    status of the entry as valid or invalid.
    
    This bit is bit 31 in the diagnostic entry, but the bit mask definition
    refers to bit 30.
    
    Fix this by making the reserved field one bit larger.
    
    Fixes: 7e75fc3ff4cf ("s390/cpum_sf: Add raw data sampling to support the diagnostic-sampling function")
    Signed-off-by: Thomas Richter <tmricht@linux.ibm.com>
    Reviewed-by: Hendrik Brueckner <brueckner@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d610dedaf3150a11bf790c10e32a7305e9d5103a
Author: Thomas Richter <tmricht@linux.ibm.com>
Date:   Tue May 8 10:18:39 2018 +0200

    s390/cpum_sf: Add data entry sizes to sampling trailer entry
    
    [ Upstream commit 77715b7ddb446bd39a06f3376e85f4bb95b29bb8 ]
    
    The CPU Measurement sampling facility creates a trailer entry for each
    Sample-Data-Block of stored samples. The trailer entry contains the sizes
    (in bytes) of the stored sampling types:
     - basic-sampling data entry size
     - diagnostic-sampling data entry size
    Both sizes are 2 bytes long.
    
    This patch changes the trailer entry definition to reflect this.
    
    Fixes: fcc77f507333 ("s390/cpum_sf: Atomically reset trailer entry fields of sample-data-blocks")
    Signed-off-by: Thomas Richter <tmricht@linux.ibm.com>
    Reviewed-by: Hendrik Brueckner <brueckner@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f07963e9cc5fd36225a19db83b55e4a04c2e984
Author: Sean Lanigan <sean@lano.id.au>
Date:   Fri May 4 16:48:23 2018 +1000

    brcmfmac: Add support for bcm43364 wireless chipset
    
    [ Upstream commit 9c4a121e82634aa000a702c98cd6f05b27d6e186 ]
    
    Add support for the BCM43364 chipset via an SDIO interface, as used in
    e.g. the Murata 1FX module.
    
    The BCM43364 uses the same firmware as the BCM43430 (which is already
    included), the only difference is the omission of Bluetooth.
    
    However, the SDIO_ID for the BCM43364 is 02D0:A9A4, giving it a MODALIAS
    of sdio:c00v02D0dA9A4, which doesn't get recognised and hence doesn't
    load the brcmfmac module. Adding the 'A9A4' ID in the appropriate place
    triggers the brcmfmac driver to load, and then correctly use the
    firmware file 'brcmfmac43430-sdio.bin'.
    
    Signed-off-by: Sean Lanigan <sean@lano.id.au>
    Acked-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9de437a135949891b167296a5cb61ac6e7d35301
Author: Jane Wan <Jane.Wan@nokia.com>
Date:   Tue May 8 14:19:53 2018 -0700

    mtd: rawnand: fsl_ifc: fix FSL NAND driver to read all ONFI parameter pages
    
    [ Upstream commit a75bbe71a27875fdc61cde1af6d799037cef6bed ]
    
    Per ONFI specification (Rev. 4.0), if the CRC of the first parameter page
    read is not valid, the host should read redundant parameter page copies.
    Fix FSL NAND driver to read the two redundant copies which are mandatory
    in the specification.
    
    Signed-off-by: Jane Wan <Jane.Wan@nokia.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8af60c2be4b63f95d8835157a0733c9640ad4792
Author: Brad Love <brad@nextdimension.cc>
Date:   Wed May 2 17:46:18 2018 -0400

    media: em28xx: Fix DualHD broken second tuner
    
    [ Upstream commit 01affb000e00cfa0a9e9954476ef50962eb8b168 ]
    
    The use of a hard coded i2c address breaks the creation of the
    second tuner in DualHD 01595 models. The issue is compounded
    by lack of any error message stating that a driver failed
    initialization. Use addr, which contains the correct address
    for each tuner.
    
    Fixes: ad32495b1513 ("media: em28xx-dvb: simplify DVB module probing logic")
    
    Signed-off-by: Brad Love <brad@nextdimension.cc>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc074a5a27512bd4143dac28efd6732f0338ed5b
Author: Jacopo Mondi <jacopo+renesas@jmondi.org>
Date:   Fri May 4 05:32:17 2018 -0400

    media: renesas-ceu: Set mbus_fmt on subdev operations
    
    [ Upstream commit d3a67f27471d4792caf84132228def2b18617932 ]
    
    The renesas-ceu driver intializes the desired mbus_format at 'complete'
    time, inspecting the supported subdevice ones, and tuning some
    parameters to produce the requested memory format from what the sensor
    can produce. Although, the initially selected mbus_format was not
    provided to the subdevice during set_fmt and try_fmt operations,
    providing instead a '0' mbus format code.
    
    As long as the sensor defaults to a compatible mbus_format when an
    invalid code as '0' is provided, capture operations work correctly. If
    the subdevice defaults to an unsupported format (eg. some RGB
    permutations) capture does not work properly due to a mismatch on the
    expected and received image format on the wire.
    
    Fix that by re-using the initially selected mbus_format code during
    set_fmt and try_fmt subdevice operation calls.
    
    Tested by printing out the format selection procedure with ov7670
    sensor.
    
    Before this patch:
    [    0.866001] ov7670_try_fmt_internal -- Looking for mbus_code 0x0000
    [    0.870882] ov7670_try_fmt_internal -- Try mbus_code 0x2008
    [    0.876336] ov7670_try_fmt_internal -- Try mbus_code 0x1002
    [    0.881387] ov7670_try_fmt_internal -- Try mbus_code 0x1008
    [    0.886537] ov7670_try_fmt_internal -- Try mbus_code 0x3001
    [    0.891584] ov7670_try_fmt_internal -- mbus_code defaulted to 0x2008
    
    With this patch applied:
    [    0.867015] ov7670_try_fmt_internal -- Looking for mbus_code 0x2008
    [    0.873205] ov7670_try_fmt_internal -- Try mbus_code 0x2008: match
    
    Signed-off-by: Jacopo Mondi <jacopo+renesas@jmondi.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f5f31dbb466d8488dc42f53cebb162eaf36604e
Author: Brad Love <brad@nextdimension.cc>
Date:   Fri May 4 17:53:35 2018 -0400

    media: saa7164: Fix driver name in debug output
    
    [ Upstream commit 0cc4655cb57af0b7e105d075c4f83f8046efafe7 ]
    
    This issue was reported by a user who downloaded a corrupt saa7164
    firmware, then went looking for a valid xc5000 firmware to fix the
    error displayed...but the device in question has no xc5000, thus after
    much effort, the wild goose chase eventually led to a support call.
    
    The xc5000 has nothing to do with saa7164 (as far as I can tell),
    so replace the string with saa7164 as well as give a meaningful
    hint on the firmware mismatch.
    
    Signed-off-by: Brad Love <brad@nextdimension.cc>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1cea0cdba7a9ecae7a36998808647434c2ebec7
Author: Sami Tolvanen <samitolvanen@google.com>
Date:   Mon May 7 14:09:46 2018 -0400

    media: media-device: fix ioctl function types
    
    [ Upstream commit daa36370b62428cca6d48d1b2530a8419f631c8c ]
    
    This change fixes function types for media device ioctls to avoid
    indirect call mismatches with Control-Flow Integrity checking.
    
    Signed-off-by: Sami Tolvanen <samitolvanen@google.com>
    Acked-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5236233eb9471f802bdb477594ba9dbc2a208885
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Apr 13 14:54:17 2018 +0200

    ACPI / LPSS: Only call pwm_add_table() for Bay Trail PWM if PMIC HRV is 2
    
    [ Upstream commit c975e472ec12392a0c34de1350e634310f8a1dea ]
    
    The Point of View mobii wintab p800w Bay Trail tablet comes with a Crystal
    Cove PMIC, yet uses the LPSS PWM for backlight control, rather then the
    Crystal Cove's PWM, so we need to call pwm_add_table() to add a
    pwm_backlight mapping for the LPSS pwm despite there being an INT33FD
    ACPI device present.
    
    On all Bay Trail devices the _HRV object of the INT33FD ACPI device
    will normally return 2, to indicate the Bay Trail variant of the CRC
    PMIC is present, except on this tablet where _HRV is 0xffff. I guess this
    is a hack to make the windows Crystal Cove PWM driver not bind.
    
    Out of the 44 DSTDs with an INT33FD device in there which I have (from
    different model devices) only the pov mobii wintab p800w uses 0xffff for
    the HRV.
    
    The byt_pwm_setup code calls acpi_dev_present to check for the presence
    of a INT33FD ACPI device which indicates that a CRC PMIC is present and
    if the INT33FD ACPI device is present then byt_pwm_setup will not add
    a pwm_backlight mapping for the LPSS pwm, so that the CRC PWM will get
    used instead.
    
    acpi_dev_present has a hrv parameter, this commit make us pass 2 instead
    of -1, so that things still match on normal tablets, but on this special
    case with its _HRV of 0xffff, the check will now fail so that the
    pwm_backlight mapping for the LPSS pwm gets added fixing backlight
    brightness control on this device.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5d790a0436eaa2ffd1765320f7f31175902f7d3
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Wed May 9 09:28:12 2018 +0900

    libata: Fix command retry decision
    
    [ Upstream commit 804689ad2d9b66d0d3920b48cf05881049d44589 ]
    
    For failed commands with valid sense data (e.g. NCQ commands),
    scsi_check_sense() is used in ata_analyze_tf() to determine if the
    command can be retried. In such case, rely on this decision and ignore
    the command error mask based decision done in ata_worth_retry().
    
    This fixes useless retries of commands such as unaligned writes on zoned
    disks (TYPE_ZAC).
    
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c892cdfbe0fbefc7feb880637851a56f5a941a6d
Author: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
Date:   Tue Jul 12 07:21:46 2016 -0400

    media: rcar_jpu: Add missing clk_disable_unprepare() on error in jpu_open()
    
    [ Upstream commit 43d0d3c52787df0221d1c52494daabd824fe84f1 ]
    
    Add the missing clk_disable_unprepare() before return from
    jpu_open() in the software reset error handling case.
    
    Signed-off-by: Wei Yongjun <yongjun_wei@trendmicro.com.cn>
    Acked-by: Mikhail Ulyanov <mikhail.ulyanov@cogentembedded.com>
    Reviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Signed-off-by: Hans Verkuil <hansverk@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a35b70b64fa0fd6c9ba3b66d4555e807c1f51d90
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu May 10 13:17:30 2018 -0700

    net: phy: phylink: Release link GPIO
    
    [ Upstream commit daab3349ad1a69663ccad278ed71d55974d104b4 ]
    
    We are not releasing the link GPIO descriptor with gpiod_put() which results in
    subsequent probing to get -EBUSY when calling fwnode_get_named_gpiod(). Fix this
    by doing the release in phylink_destroy().
    
    Fixes: 9525ae83959b ("phylink: add phylink infrastructure")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ad25429ea42464d7ab22df46920177034578991
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue May 8 13:14:33 2018 +0100

    dma-iommu: Fix compilation when !CONFIG_IOMMU_DMA
    
    [ Upstream commit 8a22a3e1e768c309b718f99bd86f9f25a453e0dc ]
    
    Inclusion of include/dma-iommu.h when CONFIG_IOMMU_DMA is not selected
    results in the following splat:
    
    In file included from drivers/irqchip/irq-gic-v3-mbi.c:20:0:
    ./include/linux/dma-iommu.h:95:69: error: unknown type name ‘dma_addr_t’
     static inline int iommu_get_msi_cookie(struct iommu_domain *domain, dma_addr_t base)
                                                                         ^~~~~~~~~~
    ./include/linux/dma-iommu.h:108:74: warning: ‘struct list_head’ declared inside parameter list will not be visible outside of this definition or declaration
     static inline void iommu_dma_get_resv_regions(struct device *dev, struct list_head *list)
                                                                              ^~~~~~~~~
    scripts/Makefile.build:312: recipe for target 'drivers/irqchip/irq-gic-v3-mbi.o' failed
    
    Fix it by including linux/types.h.
    
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Rob Herring <robh@kernel.org>
    Cc: Jason Cooper <jason@lakedaemon.net>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Cc: Thomas Petazzoni <thomas.petazzoni@bootlin.com>
    Cc: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lkml.kernel.org/r/20180508121438.11301-5-marc.zyngier@arm.com
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60c4e8db32815474bfaeabe888ebb14e698caea1
Author: DaeRyong Jeong <threeearcat@gmail.com>
Date:   Tue May 1 00:27:04 2018 +0900

    tty: Fix data race in tty_insert_flip_string_fixed_flag
    
    [ Upstream commit b6da31b2c07c46f2dcad1d86caa835227a16d9ff ]
    
    Unlike normal serials, in pty layer, there is no guarantee that multiple
    threads don't insert input characters at the same time. If it is happened,
    tty_insert_flip_string_fixed_flag can be executed concurrently. This can
    lead slab out-of-bounds write in tty_insert_flip_string_fixed_flag.
    
    Call sequences are as follows.
    CPU0                                    CPU1
    n_tty_ioctl_helper                      n_tty_ioctl_helper
    __start_tty                             tty_send_xchar
    tty_wakeup                              pty_write
    n_hdlc_tty_wakeup                       tty_insert_flip_string
    n_hdlc_send_frames                      tty_insert_flip_string_fixed_flag
    pty_write
    tty_insert_flip_string
    tty_insert_flip_string_fixed_flag
    
    To fix the race, acquire port->lock in pty_write() before it inserts input
    characters to tty buffer. It prevents multiple threads from inserting
    input characters concurrently.
    
    The crash log is as follows:
    BUG: KASAN: slab-out-of-bounds in tty_insert_flip_string_fixed_flag+0xb5/
    0x130 drivers/tty/tty_buffer.c:316 at addr ffff880114fcc121
    Write of size 1792 by task syz-executor0/30017
    CPU: 1 PID: 30017 Comm: syz-executor0 Not tainted 4.8.0 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996),
    BIOS rel-1.8.2-0-g33fbe13 by qemu-project.org 04/01/2014
     0000000000000000 ffff88011638f888 ffffffff81694cc3 ffff88007d802140
     ffff880114fcb300 ffff880114fcc300 ffff880114fcb300 ffff88011638f8b0
     ffffffff8130075c ffff88011638f940 ffff88007d802140 ffff880194fcc121
    Call Trace:
     __dump_stack lib/dump_stack.c:15 [inline]
     dump_stack+0xb3/0x110 lib/dump_stack.c:51
     kasan_object_err+0x1c/0x70 mm/kasan/report.c:156
     print_address_description mm/kasan/report.c:194 [inline]
     kasan_report_error+0x1f7/0x4e0 mm/kasan/report.c:283
     kasan_report+0x36/0x40 mm/kasan/report.c:303
     check_memory_region_inline mm/kasan/kasan.c:292 [inline]
     check_memory_region+0x13e/0x1a0 mm/kasan/kasan.c:299
     memcpy+0x37/0x50 mm/kasan/kasan.c:335
     tty_insert_flip_string_fixed_flag+0xb5/0x130 drivers/tty/tty_buffer.c:316
     tty_insert_flip_string include/linux/tty_flip.h:35 [inline]
     pty_write+0x7f/0xc0 drivers/tty/pty.c:115
     n_hdlc_send_frames+0x1d4/0x3b0 drivers/tty/n_hdlc.c:419
     n_hdlc_tty_wakeup+0x73/0xa0 drivers/tty/n_hdlc.c:496
     tty_wakeup+0x92/0xb0 drivers/tty/tty_io.c:601
     __start_tty.part.26+0x66/0x70 drivers/tty/tty_io.c:1018
     __start_tty+0x34/0x40 drivers/tty/tty_io.c:1013
     n_tty_ioctl_helper+0x146/0x1e0 drivers/tty/tty_ioctl.c:1138
     n_hdlc_tty_ioctl+0xb3/0x2b0 drivers/tty/n_hdlc.c:794
     tty_ioctl+0xa85/0x16d0 drivers/tty/tty_io.c:2992
     vfs_ioctl fs/ioctl.c:43 [inline]
     do_vfs_ioctl+0x13e/0xba0 fs/ioctl.c:679
     SYSC_ioctl fs/ioctl.c:694 [inline]
     SyS_ioctl+0x8f/0xc0 fs/ioctl.c:685
     entry_SYSCALL_64_fastpath+0x1f/0xbd
    
    Signed-off-by: DaeRyong Jeong <threeearcat@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69596fc961e0fc66342fe7c663f98b5bc40f926c
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Thu May 10 05:59:48 2018 -0700

    i40e: free the skb after clearing the bitlock
    
    [ Upstream commit c79756cb5f084736b138da9319a02f7c72644548 ]
    
    In commit bbc4e7d273b5 ("i40e: fix race condition with PTP_TX_IN_PROGRESS
    bits") we modified the code which handles Tx timestamps so that we would
    clear the progress bit as soon as possible.
    
    A later commit 0bc0706b46cd ("i40e: check for Tx timestamp timeouts during
    watchdog") introduced similar code for detecting and handling cleanup of
    a blocked Tx timestamp. This code did not use the same pattern for cleaning
    up the skb.
    
    Update this code to wait to free the skb until after the bit lock is
    free, by first setting the ptp_tx_skb to NULL and clearing the lock.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbaa721c180c09dc23408eb76e31720e7d4559f8
Author: Rob Herring <robh@kernel.org>
Date:   Tue May 8 08:59:27 2018 -0500

    ARM: dts: imx53: Fix LDB OF graph warning
    
    [ Upstream commit 77dd4bd0c0db8e4856e7abc2192f126e226e14c5 ]
    
    Single child nodes in OF graph don't need an address and now dtc will
    warn about this:
    
    Warning (graph_child_address): /soc/aips@50000000/ldb@53fa8008/lvds-channel@0: graph node has single child node 'port@0', #address-cells/#size-cells are not necessary
    
    Since the LDB should always have an output port, fix the warning by
    adding the output port, 2, to the DT.
    
    Cc: Sascha Hauer <s.hauer@pengutronix.de>
    Cc: Pengutronix Kernel Team <kernel@pengutronix.de>
    Cc: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acc85d00a2203754a25b1c1c29f1932c7cc32ac0
Author: Mathieu Malaterre <malat@debian.org>
Date:   Fri May 11 12:07:03 2018 +0100

    nvmem: properly handle returned value nvmem_reg_read
    
    [ Upstream commit 50808bfcc14b854775a9f1d0abe3dac2babcf5c3 ]
    
    Function nvmem_reg_read can return a non zero value indicating an error.
    This returned value must be read and error propagated to
    nvmem_cell_prepare_write_buffer. Silence the following gcc warning (W=1):
    
    drivers/nvmem/core.c:1093:9: warning: variable 'rc' set but
     not used [-Wunused-but-set-variable]
    
    Signed-off-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ede0d2fa33b83bc7264bd5b812757581b5da824c
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon May 7 15:40:04 2018 +0200

    ARM: dts: sh73a0: Add missing interrupt-affinity to PMU node
    
    [ Upstream commit 57a66497e1b7486609250a482f05935eae5035e9 ]
    
    The PMU node references two interrupts, but lacks the interrupt-affinity
    property, which is required in that case:
    
        hw perfevents: no interrupt-affinity property for /pmu, guessing.
    
    Add the missing property to fix this.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39f97084a6a60322e5dbebd88e594cffb3aa88b7
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon May 7 15:40:05 2018 +0200

    ARM: dts: emev2: Add missing interrupt-affinity to PMU node
    
    [ Upstream commit 7207b94754b6f503b278b5b200faaf662ffa1da8 ]
    
    The PMU node references two interrupts, but lacks the interrupt-affinity
    property, which is required in that case:
    
        hw perfevents: no interrupt-affinity property for /pmu, guessing.
    
    Add the missing property to fix this.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f08cbd7939df5e9e77b898fb42f9746cd5b37ed4
Author: Patrice Chotard <patrice.chotard@st.com>
Date:   Fri Apr 20 17:41:31 2018 +0200

    ARM: dts: stih407-pinctrl: Fix complain about IRQ_TYPE_NONE usage
    
    [ Upstream commit e95b8e718f9bd2386a29639dd21c633b4951dc21 ]
    
    Since commit 83a86fbb5b56 ("irqchip/gic: Loudly complain about the use of IRQ_TYPE_NONE")
    kernel is complaining about the IRQ_TYPE_NONE usage which shouldn't
    be used.
    
    Use IRQ_TYPE_LEVEL_HIGH instead.
    
    Signed-off-by: Patrice Chotard <patrice.chotard@st.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f5f9a3c4f6b4de94be983640afcb7086fdec213
Author: Patrice Chotard <patrice.chotard@st.com>
Date:   Fri Apr 20 17:41:54 2018 +0200

    ARM: dts: stih410: Fix complain about IRQ_TYPE_NONE usage
    
    [ Upstream commit fd827d0ec86bce8d421423ad2c4add84aa23e1b9 ]
    
    Since commit 83a86fbb5b56 ("irqchip/gic: Loudly complain about the use of IRQ_TYPE_NONE")
    kernel is complaining about the IRQ_TYPE_NONE usage which shouldn't
    be used.
    
    Use IRQ_TYPE_LEVEL_HIGH instead.
    
    Signed-off-by: Patrice Chotard <patrice.chotard@st.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0430c9e0991c3e82f224514a1164cb6c192c4ecf
Author: Sanjay Kumar Konduri <sanjay.konduri@redpinesignals.com>
Date:   Fri May 11 20:27:51 2018 +0530

    rsi: Add null check for virtual interfaces in wowlan config
    
    [ Upstream commit 54b5172087aeae61150835c91e68f084a9644f1c ]
    
    When the "poweroff" command is executed after wowlan enabled, we have
    observed a system crash. In the system "poweroff" sequence, network-manager
    is sent to inactive state by cleaning up the network interfaces, using
    rsi_mac80211_remove_interface() and when driver tries to access those
    network interfaces in rsi_wowlan_config() which was invoked by SDIO
    shutdown, results in a crash. Added a NULL check before accessing the
    network interfaces in rsi_wowlan_config().
    
    Signed-off-by: Sanjay Kumar Konduri <sanjay.konduri@redpinesignals.com>
    Signed-off-by: Siva Rebbagondla <siva.rebbagondla@redpinesignals.com>
    Signed-off-by: Sushant Kumar Mishra <sushant.mishra@redpinesignals.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4c1d404da853a568ae8fc62b7063a76796cb96c
Author: Thor Thayer <thor.thayer@linux.intel.com>
Date:   Mon May 14 12:04:01 2018 -0500

    EDAC, altera: Fix ARM64 build warning
    
    [ Upstream commit 9ef20753e044f7468c4113e5aecd785419b0b3cc ]
    
    The kbuild test robot reported the following warning:
    
      drivers/edac/altera_edac.c: In function 'ocram_free_mem':
      drivers/edac/altera_edac.c:1410:42: warning: cast from pointer to integer
            of different size [-Wpointer-to-int-cast]
        gen_pool_free((struct gen_pool *)other, (u32)p, size);
                                                 ^
    
    After adding support for ARM64 architectures, the unsigned long
    parameter is 64 bits and causes a build warning on 64-bit configs. Fix
    by casting to the correct size (unsigned long) instead of u32.
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Thor Thayer <thor.thayer@linux.intel.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Fixes: c3eea1942a16 ("EDAC, altera: Add Altera L2 cache and OCRAM support")
    Link: http://lkml.kernel.org/r/1526317441-4996-1-git-send-email-thor.thayer@linux.intel.com
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 633faf7dac9efc68dc71bf61496f0c28af591750
Author: Dmitry Torokhov <dtor@chromium.org>
Date:   Wed May 9 12:12:15 2018 -0700

    HID: i2c-hid: check if device is there before really probing
    
    [ Upstream commit b3a81b6c4fc6730ac49e20d789a93c0faabafc98 ]
    
    On many Chromebooks touch devices are multi-sourced; the components are
    electrically compatible and one can be freely swapped for another without
    changing the OS image or firmware.
    
    To avoid bunch of scary messages when device is not actually present in the
    system let's try testing basic communication with it and if there is no
    response terminate probe early with -ENXIO.
    
    Signed-off-by: Dmitry Torokhov <dtor@chromium.org>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 523942f9a1c2c1487a436ebf29745997f387cb8c
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Thu May 10 23:59:19 2018 +0200

    powerpc/embedded6xx/hlwd-pic: Prevent interrupts from being handled by Starlet
    
    [ Upstream commit 9dcb3df4281876731e4e8bff7940514d72375154 ]
    
    The interrupt controller inside the Wii's Hollywood chip is connected to
    two masters, the "Broadway" PowerPC and the "Starlet" ARM926, each with
    their own interrupt status and mask registers.
    
    When booting the Wii with mini[1], interrupts from the SD card
    controller (IRQ 7) are handled by the ARM, because mini provides SD
    access over IPC. Linux however can't currently use or disable this IPC
    service, so both sides try to handle IRQ 7 without coordination.
    
    Let's instead make sure that all interrupts that are unmasked on the PPC
    side are masked on the ARM side; this will also make sure that Linux can
    properly talk to the SD card controller (and potentially other devices).
    
    If access to a device through IPC is desired in the future, interrupts
    from that device should not be handled by Linux directly.
    
    [1]: https://github.com/lewurm/mini
    
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 113d7a74bc053d926ddf96c83a8108b54095a77f
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed May 9 22:48:41 2018 +0100

    IB: Fix RDMA_RXE and INFINIBAND_RDMAVT dependencies for DMA_VIRT_OPS
    
    [ Upstream commit e02637e97d68a54b1527bc654bf8377eda310226 ]
    
    DMA_VIRT_OPS requires that dma_addr_t is at least as wide as a
    pointer, which is expressed as a dependency on !64BIT ||
    ARCH_DMA_ADDR_T_64BIT.
    
    For parisc64 this is not true, and if these IB modules are enabled,
    kconfig warns:
    
    WARNING: unmet direct dependencies detected for DMA_VIRT_OPS
      Depends on [n]: HAS_DMA [=y] && (!64BIT [=y] || ARCH_DMA_ADDR_T_64BIT)
      Selected by [m]:
      - INFINIBAND_RDMAVT [=m] && INFINIBAND [=m] && 64BIT [=y] && PCI [=y]
      - RDMA_RXE [=m] && INET [=y] && PCI [=y] && INFINIBAND [=m]
    
    Add dependencies to fix this.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78d0d21852db260b8cb1e85f3f467f9866903065
Author: Leo (Sunpeng) Li <sunpeng.li@amd.com>
Date:   Thu Mar 29 17:04:12 2018 -0400

    drm/amd/display: Fix dim display on DCE11
    
    [ Upstream commit 84ffa80123f56f80145dc638f21dfcbedda5610d ]
    
    Before programming the input gamma, check that we're not using the
    identity correction.
    
    Signed-off-by: Leo (Sunpeng) Li <sunpeng.li@amd.com>
    Reviewed-by: Anthony Koo <Anthony.Koo@amd.com>
    Acked-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4acd141d2e594103e83b93d21b7b2ec7cb92b6b7
Author: Samuel Li <Samuel.Li@amd.com>
Date:   Wed Apr 18 16:26:18 2018 -0400

    drm/amdgpu: Remove VRAM from shared bo domains.
    
    [ Upstream commit 9b3f217faf48603c91d4ca44a18e6ff74c3c1c0c ]
    
    This fixes an issue introduced by change "allow framebuffer in GART
    memory as well" which could lead to a shared buffer ending up
    pinned in vram.  Use GTT if it is included in the domain, otherwise
    return an error.
    
    Signed-off-by: Samuel Li <Samuel.Li@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 299a168893cbb2b4291acf508b3991b88d652696
Author: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
Date:   Tue Apr 24 15:15:13 2018 +0200

    drm/radeon: fix mode_valid's return type
    
    [ Upstream commit 7a47f20eb1fb8fa8d7a8fe3a4fd8c721f04c2174 ]
    
    The method struct drm_connector_helper_funcs::mode_valid is defined
    as returning an 'enum drm_mode_status' but the driver implementation
    for this method uses an 'int' for it.
    
    Fix this by using 'enum drm_mode_status' in the driver too.
    
    Signed-off-by: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86633402fba706e400cab5d27f751b91030ce08a
Author: Shirish S <shirish.s@amd.com>
Date:   Fri Apr 27 15:47:21 2018 +0530

    drm/amd/display: remove need of modeset flag for overlay planes (V2)
    
    [ Upstream commit a2a330ad66313084c9432b32862aa7e1255da9b4 ]
    
    This patch is in continuation to the
    "843e3c7 drm/amd/display: defer modeset check in dm_update_planes_state"
    where we started to eliminate the dependency on
    DRM_MODE_ATOMIC_ALLOW_MODESET to be set by the user space,
    which as such is not mandatory.
    
    After deferring, this patch eliminates the dependency on the flag
    for overlay planes.
    
    This has to be done in stages as its a pretty complex and requires thorough
    testing before we free primary planes as well from dependency on modeset
    flag.
    
    V2: Simplified the plane type check.
    
    Signed-off-by: Shirish S <shirish.s@amd.com>
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86c9d0bbb057584132ec8dadf677711edbf1a7c3
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Apr 23 01:40:16 2018 +0000

    arm64: dts: renesas: salvator-common: use audio-graph-card for Sound
    
    [ Upstream commit 06a574c7ef69bd0bd26ed08e35967acb76622ab3 ]
    
    Current Sound is using simple-audio-card which can't support HDMI.
    To use HDMI sound, we need to use audio-graph-card.
    But, one note is that r8a7795 has 2 HDMI ports, but r8a7796 has 1.
    Because of this mismatch, supporting HDMI on salvator-common is
    impossible.
    Thus, this patch exchange sound card to audio-graph-card and keep
    supporting ak4613 as 1st sound node.
    r8a7795/r8a7796 salvator-x{s} need to add HDMI sound individually.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Tested-by: Nguyen Viet Dung <nv-dung@jinso.co.jp>
    Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26b95032b4f416697b4334c0b8bbea8840b55281
Author: Terry Junge <terry.junge@plantronics.com>
Date:   Mon Apr 30 13:32:46 2018 -0700

    HID: hid-plantronics: Re-resend Update to map button for PTT products
    
    [ Upstream commit 37e376df5f4993677c33968a0c19b0c5acbf1108 ]
    
    Add a mapping for Push-To-Talk joystick trigger button.
    
    Tested on ChromeBox/ChromeBook with various Plantronics devices.
    
    Signed-off-by: Terry Junge <terry.junge@plantronics.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f983711cf1003cc7e533d6c36b09e322bdcd9622
Author: Will Deacon <will@kernel.org>
Date:   Mon Apr 30 13:56:32 2018 +0100

    arm64: cmpwait: Clear event register before arming exclusive monitor
    
    [ Upstream commit 1cfc63b5ae60fe7e01773f38132f98d8b13a99a0 ]
    
    When waiting for a cacheline to change state in cmpwait, we may immediately
    wake-up the first time around the outer loop if the event register was
    already set (for example, because of the event stream).
    
    Avoid these spurious wakeups by explicitly clearing the event register
    before loading the cacheline and setting the exclusive monitor.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77fe703ed6cf4b1a87ba90b59d752cc37a8a7bf2
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Mon Apr 16 12:37:08 2018 -0400

    media: staging: atomisp: Comment out several unused sensor resolutions
    
    [ Upstream commit db01f7ccfa6d4738e366077ce7423d1710b805f3 ]
    
    The register settings for several resolutions aren't used
    currently. So, comment them out.
    
    Fix those warnings:
    
    In file included from drivers/staging/media/atomisp/i2c/atomisp-gc2235.c:35:0:
    drivers/staging/media/atomisp/i2c/gc2235.h:340:32: warning: 'gc2235_960_640_30fps' defined but not used [-Wunused-const-variable=]
     static struct gc2235_reg const gc2235_960_640_30fps[] = {
                                    ^~~~~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/gc2235.h:287:32: warning: 'gc2235_1296_736_30fps' defined but not used [-Wunused-const-variable=]
     static struct gc2235_reg const gc2235_1296_736_30fps[] = {
                                    ^~~~~~~~~~~~~~~~~~~~~
    In file included from drivers/staging/media/atomisp/i2c/atomisp-ov2722.c:35:0:
    drivers/staging/media/atomisp/i2c/ov2722.h:999:32: warning: 'ov2722_720p_30fps' defined but not used [-Wunused-const-variable=]
     static struct ov2722_reg const ov2722_720p_30fps[] = {
                                    ^~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2722.h:787:32: warning: 'ov2722_1M3_30fps' defined but not used [-Wunused-const-variable=]
     static struct ov2722_reg const ov2722_1M3_30fps[] = {
                                    ^~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2722.h:476:32: warning: 'ov2722_VGA_30fps' defined but not used [-Wunused-const-variable=]
     static struct ov2722_reg const ov2722_VGA_30fps[] = {
                                    ^~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2722.h:367:32: warning: 'ov2722_480P_30fps' defined but not used [-Wunused-const-variable=]
     static struct ov2722_reg const ov2722_480P_30fps[] = {
                                    ^~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2722.h:257:32: warning: 'ov2722_QVGA_30fps' defined but not used [-Wunused-const-variable=]
     static struct ov2722_reg const ov2722_QVGA_30fps[] = {
                                    ^~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/atomisp-ov2680.c: In function '__ov2680_set_exposure':
    In file included from drivers/staging/media/atomisp/i2c/atomisp-ov2680.c:35:0:
    At top level:
    drivers/staging/media/atomisp/i2c/ov2680.h:736:33: warning: 'ov2680_1616x1082_30fps' defined but not used [-Wunused-const-variable=]
      static struct ov2680_reg const ov2680_1616x1082_30fps[] = {
                                     ^~~~~~~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2680.h:649:33: warning: 'ov2680_1456x1096_30fps' defined but not used [-Wunused-const-variable=]
      static struct ov2680_reg const ov2680_1456x1096_30fps[]= {
                                     ^~~~~~~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2680.h:606:33: warning: 'ov2680_1296x976_30fps' defined but not used [-Wunused-const-variable=]
      static struct ov2680_reg const ov2680_1296x976_30fps[] = {
                                     ^~~~~~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2680.h:563:33: warning: 'ov2680_720p_30fps' defined but not used [-Wunused-const-variable=]
      static struct ov2680_reg const ov2680_720p_30fps[] = {
                                     ^~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2680.h:520:33: warning: 'ov2680_800x600_30fps' defined but not used [-Wunused-const-variable=]
      static struct ov2680_reg const ov2680_800x600_30fps[] = {
                                     ^~~~~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2680.h:475:33: warning: 'ov2680_720x592_30fps' defined but not used [-Wunused-const-variable=]
      static struct ov2680_reg const ov2680_720x592_30fps[] = {
                                     ^~~~~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2680.h:433:33: warning: 'ov2680_656x496_30fps' defined but not used [-Wunused-const-variable=]
      static struct ov2680_reg const ov2680_656x496_30fps[] = {
                                     ^~~~~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2680.h:389:33: warning: 'ov2680_QVGA_30fps' defined but not used [-Wunused-const-variable=]
      static struct ov2680_reg const ov2680_QVGA_30fps[] = {
                                     ^~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2680.h:346:33: warning: 'ov2680_CIF_30fps' defined but not used [-Wunused-const-variable=]
      static struct ov2680_reg const ov2680_CIF_30fps[] = {
                                     ^~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov2680.h:301:33: warning: 'ov2680_QCIF_30fps' defined but not used [-Wunused-const-variable=]
      static struct ov2680_reg const ov2680_QCIF_30fps[] = {
                                     ^~~~~~~~~~~~~~~~~
    In file included from drivers/staging/media/atomisp/i2c/ov5693/atomisp-ov5693.c:36:0:
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:988:32: warning: 'ov5693_1424x1168_30fps' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_1424x1168_30fps[] = {
                                    ^~~~~~~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:954:32: warning: 'ov5693_2592x1944_30fps' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_2592x1944_30fps[] = {
                                    ^~~~~~~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:889:32: warning: 'ov5693_2592x1456_30fps' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_2592x1456_30fps[] = {
                                    ^~~~~~~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:862:32: warning: 'ov5693_1940x1096' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_1940x1096[] = {
                                    ^~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:796:32: warning: 'ov5693_1636p_30fps' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_1636p_30fps[] = {
                                    ^~~~~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:758:32: warning: 'ov5693_1296x736' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_1296x736[] = {
                                    ^~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:730:32: warning: 'ov5693_976x556' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_976x556[] = {
                                    ^~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:672:32: warning: 'ov5693_736x496' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_736x496[] = {
                                    ^~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:643:32: warning: 'ov5693_192x160' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_192x160[] = {
                                    ^~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:616:32: warning: 'ov5693_368x304' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_368x304[] = {
                                    ^~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:587:32: warning: 'ov5693_336x256' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_336x256[] = {
                                    ^~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:540:32: warning: 'ov5693_1296x976' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_1296x976[] = {
                                    ^~~~~~~~~~~~~~~
    drivers/staging/media/atomisp/i2c/ov5693/ov5693.h:509:32: warning: 'ov5693_654x496' defined but not used [-Wunused-const-variable=]
     static struct ov5693_reg const ov5693_654x496[] = {
                                    ^~~~~~~~~~~~~~
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21afef8a50d66824bff235036fa97c753bb9a66f
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Mon Apr 16 12:37:09 2018 -0400

    media: atomisp: ov2680: don't declare unused vars
    
    [ Upstream commit e5c0680fd2c44252868fe4062558925b5506b179 ]
    
    drivers/staging/media/atomisp/i2c/atomisp-ov2680.c: In function ‘__ov2680_set_exposure’:
    drivers/staging/media/atomisp/i2c/atomisp-ov2680.c:400:10: warning: variable ‘hts’ set but not used [-Wunused-but-set-variable]
      u16 vts,hts;
              ^~~
    drivers/staging/media/atomisp/i2c/atomisp-ov2680.c: In function ‘ov2680_detect’:
    drivers/staging/media/atomisp/i2c/atomisp-ov2680.c:1164:5: warning: variable ‘revision’ set but not used [-Wunused-but-set-variable]
      u8 revision;
         ^~~~~~~~
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b7ba81e08a5fcf1b7e5132dceac4518112d0da4
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Tue May 15 19:20:12 2018 +0100

    net: hns3: Fix for fiber link up problem
    
    [ Upstream commit be8d8cdb8ebf3afd841c109dd035fd789a0c7d53 ]
    
    When hclge_ae_start is called, hdev->hw.mac.link may be set
    to one after up/down multi-times, which does not correspond to
    the link state of netdev when the netdev is up.
    
    This fixes it by setting hdev->hw.mac.link to zero when
    hclge_ae_start is called.
    
    Fixes: 46a3df9f9718 ("net: hns3: Add HNS3 Acceleration Engine & Compatibility Layer Support")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92a5d5d44aeb7e4c28457632dd703931a46cd903
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed May 16 20:07:18 2018 +0200

    ALSA: usb-audio: Apply rate limit to warning messages in URB complete callback
    
    [ Upstream commit 377a879d9832f4ba69bd6a1fc996bb4181b1e504 ]
    
    retire_capture_urb() may print warning messages when the given URB
    doesn't align, and this may flood the system log easily.
    Put the rate limit to the message for avoiding it.
    
    Bugzilla: https://bugzilla.suse.com/show_bug.cgi?id=1093485
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6bc812dc0d0b29973e1b46ea66e9fc296713b72
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Tue May 15 18:37:25 2018 -0500

    net: ethernet: ti: cpsw-phy-sel: check bus_find_device() ret value
    
    [ Upstream commit c6213eb1aee308e67377fd1890d84f7284caf531 ]
    
    This fixes klockworks warnings: Pointer 'dev' returned from call to
    function 'bus_find_device' at line 179 may be NULL and will be dereferenced
    at line 181.
    
        cpsw-phy-sel.c:179: 'dev' is assigned the return value from function 'bus_find_device'.
        bus.c:342: 'bus_find_device' explicitly returns a NULL value.
        cpsw-phy-sel.c:181: 'dev' is dereferenced by passing argument 1 to function 'dev_get_drvdata'.
        device.h:1024: 'dev' is passed to function 'dev_get_drvdata'.
        device.h:1026: 'dev' is explicitly dereferenced.
    
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    [nsekhar@ti.com: add an error message, fix return path]
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a5dd807782bbe6392b3288dd79a4e17e14ecbd2
Author: Mathieu Malaterre <malat@debian.org>
Date:   Wed May 16 21:59:43 2018 +0200

    clocksource: Move inline keyword to the beginning of function declarations
    
    [ Upstream commit db6f9e55c8d80a4a1a329b9b68a1d370bffb6aad ]
    
    The inline keyword was not at the beginning of the function declarations.
    Fix the following warnings triggered when using W=1:
    
      kernel/time/clocksource.c:456:1: warning: ‘inline’ is not at beginning of declaration [-Wold-style-declaration]
      kernel/time/clocksource.c:457:1: warning: ‘inline’ is not at beginning of declaration [-Wold-style-declaration]
    
    Signed-off-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Stephen Boyd <sboyd@kernel.org>
    Cc: John Stultz <john.stultz@linaro.org>
    Link: https://lkml.kernel.org/r/20180516195943.31924-1-malat@debian.org
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 496c2dadccf64b308252d725f384320aaca9d4f9
Author: Oza Pawandeep <poza@codeaurora.org>
Date:   Wed May 16 15:59:35 2018 -0500

    PCI/DPC: Clear interrupt status in interrupt handler top half
    
    [ Upstream commit 56abbf8ad73c89d0a4c3c84b1449ceaaabd1b8c7 ]
    
    The generic IRQ handling code ensures that an interrupt handler runs with
    its interrupt masked or disabled.  If the interrupt is level-triggered, the
    interrupt handler must tell its device to stop asserting the interrupt
    before returning.  If it doesn't, we will immediately take the interrupt
    again when the handler returns and the generic code unmasks the interrupt.
    
    The driver doesn't know whether its interrupt is edge- or level-triggered,
    so it must clear its interrupt source directly in its interrupt handler.
    
    Previously we cleared the DPC interrupt status in the bottom half, i.e., in
    deferred work, which can cause an interrupt storm if the DPC interrupt
    happens to be level-triggered, e.g., if we're using INTx instead of MSI.
    
    Clear the DPC interrupt status bit in the interrupt handler, not in the
    deferred work.
    
    Signed-off-by: Oza Pawandeep <poza@codeaurora.org>
    [bhelgaas: changelog]
    Signed-off-by: Bjorn Helgaas <helgaas@kernel.org>
    Reviewed-by: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a665c015908aaa364722bd876882215e24fe9fa5
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Apr 25 11:04:21 2018 -0400

    media: smiapp: fix timeout checking in smiapp_read_nvm
    
    [ Upstream commit 7a2148dfda8001c983f0effd9afd8a7fa58e99c4 ]
    
    The current code decrements the timeout counter i and the end of
    each loop i is incremented, so the check for timeout will always
    be false and hence the timeout mechanism is just a dead code path.
    Potentially, if the RD_READY bit is not set, we could end up in
    an infinite loop.
    
    Fix this so the timeout starts from 1000 and decrements to zero,
    if at the end of the loop i is zero we have a timeout condition.
    
    Detected by CoverityScan, CID#1324008 ("Logically dead code")
    
    Fixes: ccfc97bdb5ae ("[media] smiapp: Add driver")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b2daed8673931eaf7c68ff2f06c79c0f58aa82b
Author: Thierry Reding <treding@nvidia.com>
Date:   Mon May 14 11:14:00 2018 +0200

    gpu: host1x: Acquire a reference to the IOVA cache
    
    [ Upstream commit f40e1590c5270e5559fb95a5a0a7c1f5266a522d ]
    
    The IOVA API uses a memory cache to allocate IOVA nodes from. To make
    sure that this cache is available, obtain a reference to it and release
    the reference when the cache is no longer needed.
    
    On 64-bit ARM this is hidden by the fact that the DMA mapping API gets
    that reference and never releases it. On 32-bit ARM, this is papered
    over by the Tegra DRM driver (the sole user of the host1x API requiring
    the cache) acquiring a reference to the IOVA cache for its own purposes.
    However, there may be additional users of this API in the future, so fix
    this upfront to avoid surprises.
    
    Fixes: 404bfb78daf3 ("gpu: host1x: Add IOMMU support")
    Reviewed-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e775c2bc95000ccb3fbdb6e404caf205859e360e
Author: Emil Tantilov <emil.s.tantilov@intel.com>
Date:   Mon May 14 11:16:16 2018 -0700

    ixgbevf: fix MAC address changes through ixgbevf_set_mac()
    
    [ Upstream commit 6e7d0ba1e59b1a306761a731e67634c0f2efea2a ]
    
    Set hw->mac.perm_addr in ixgbevf_set_mac() in order to avoid losing the
    custom MAC on reset. This can happen in the following case:
    
    >ip link set $vf address $mac
    >ethtool -r $vf
    
    Signed-off-by: Emil Tantilov <emil.s.tantilov@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5dd1888d3c6de1878e0d5d30c2e57c3f6b5205a
Author: Yufen Yu <yuyufen@huawei.com>
Date:   Fri May 4 18:08:10 2018 +0800

    md: fix NULL dereference of mddev->pers in remove_and_add_spares()
    
    [ Upstream commit c42a0e2675721e1444f56e6132a07b7b1ec169ac ]
    
    We met NULL pointer BUG as follow:
    
    [  151.760358] BUG: unable to handle kernel NULL pointer dereference at 0000000000000060
    [  151.761340] PGD 80000001011eb067 P4D 80000001011eb067 PUD 1011ea067 PMD 0
    [  151.762039] Oops: 0000 [#1] SMP PTI
    [  151.762406] Modules linked in:
    [  151.762723] CPU: 2 PID: 3561 Comm: mdadm-test Kdump: loaded Not tainted 4.17.0-rc1+ #238
    [  151.763542] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1.fc26 04/01/2014
    [  151.764432] RIP: 0010:remove_and_add_spares.part.56+0x13c/0x3a0
    [  151.765061] RSP: 0018:ffffc90001d7fcd8 EFLAGS: 00010246
    [  151.765590] RAX: 0000000000000000 RBX: ffff88013601d600 RCX: 0000000000000000
    [  151.766306] RDX: 0000000000000000 RSI: ffff88013601d600 RDI: ffff880136187000
    [  151.767014] RBP: ffff880136187018 R08: 0000000000000003 R09: 0000000000000051
    [  151.767728] R10: ffffc90001d7fed8 R11: 0000000000000000 R12: ffff88013601d600
    [  151.768447] R13: ffff8801298b1300 R14: ffff880136187000 R15: 0000000000000000
    [  151.769160] FS:  00007f2624276700(0000) GS:ffff88013ae80000(0000) knlGS:0000000000000000
    [  151.769971] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  151.770554] CR2: 0000000000000060 CR3: 0000000111aac000 CR4: 00000000000006e0
    [  151.771272] Call Trace:
    [  151.771542]  md_ioctl+0x1df2/0x1e10
    [  151.771906]  ? __switch_to+0x129/0x440
    [  151.772295]  ? __schedule+0x244/0x850
    [  151.772672]  blkdev_ioctl+0x4bd/0x970
    [  151.773048]  block_ioctl+0x39/0x40
    [  151.773402]  do_vfs_ioctl+0xa4/0x610
    [  151.773770]  ? dput.part.23+0x87/0x100
    [  151.774151]  ksys_ioctl+0x70/0x80
    [  151.774493]  __x64_sys_ioctl+0x16/0x20
    [  151.774877]  do_syscall_64+0x5b/0x180
    [  151.775258]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    For raid6, when two disk of the array are offline, two spare disks can
    be added into the array. Before spare disks recovery completing,
    system reboot and mdadm thinks it is ok to restart the degraded
    array by md_ioctl(). Since disks in raid6 is not only_parity(),
    raid5_run() will abort, when there is no PPL feature or not setting
    'start_dirty_degraded' parameter. Therefore, mddev->pers is NULL.
    
    But, mddev->raid_disks has been set and it will not be cleared when
    raid5_run abort. md_ioctl() can execute cmd 'HOT_REMOVE_DISK' to
    remove a disk by mdadm, which will cause NULL pointer dereference
    in remove_and_add_spares() finally.
    
    Signed-off-by: Yufen Yu <yuyufen@huawei.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07a43bbfe3c9a320d30f3f1129f5803a7f4fae2a
Author: Gioh Kim <gi-oh.kim@profitbricks.com>
Date:   Wed May 2 13:08:11 2018 +0200

    md/raid1: add error handling of read error from FailFast device
    
    [ Upstream commit b33d10624fdc15cdf1495f3f00481afccec76783 ]
    
    Current handle_read_error() function calls fix_read_error()
    only if md device is RW and rdev does not include FailFast flag.
    It does not handle a read error from a RW device including
    FailFast flag.
    
    I am not sure it is intended. But I found that write IO error
    sets rdev faulty. The md module should handle the read IO error and
    write IO error equally. So I think read IO error should set rdev faulty.
    
    Signed-off-by: Gioh Kim <gi-oh.kim@profitbricks.com>
    Reviewed-by: Jack Wang <jinpu.wang@profitbricks.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02e9f887677c1f4449ebb9c9dc24e09ae2811cb4
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Thu May 17 15:27:22 2018 +0800

    regulator: pfuze100: add .is_enable() for pfuze100_swb_regulator_ops
    
    [ Upstream commit 0b01fd3d40fe6402e5fa3b491ef23109feb1aaa5 ]
    
    If is_enabled() is not defined, regulator core will assume
    this regulator is already enabled, then it can NOT be really
    enabled after disabled.
    
    Based on Li Jun's patch from the NXP kernel tree.
    
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a3209375ff2fcb72682d061c38bd03c5abdb863
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu May 17 20:02:23 2018 +0200

    ALSA: emu10k1: Rate-limit error messages about page errors
    
    [ Upstream commit 11d42c81036324697d367600bfc16f6dd37636fd ]
    
    The error messages at sanity checks of memory pages tend to repeat too
    many times once when it hits, and without the rate limit, it may flood
    and become unreadable.  Replace such messages with the *_ratelimited()
    variant.
    
    Bugzilla: http://bugzilla.opensuse.org/show_bug.cgi?id=1093027
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f4a958e27f302e3403a53e61efb4f0fb9067e93
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Thu May 17 22:26:21 2018 +0200

    rtc: tps65910: fix possible race condition
    
    [ Upstream commit e6000a438e534ee0afd9e83b67f4e23a26dd1067 ]
    
    The IRQ is requested before the struct rtc is allocated and registered, but
    this struct is used in the IRQ handler. This may lead to a NULL pointer
    dereference.
    
    Switch to devm_rtc_allocate_device/rtc_register_device to allocate the rtc
    before requesting the IRQ.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 954e00ba3e6fe6f38ac3d96d487ed883e75390e8
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Thu May 17 22:47:05 2018 +0200

    rtc: vr41xx: fix possible race condition
    
    [ Upstream commit 9a99247c9c1d1c95c6e8153d013979aac6111c6e ]
    
    The probe function is not allowed to fail after the RTC is registered
    because the following may happen:
    
    CPU0:                                CPU1:
    sys_load_module()
     do_init_module()
      do_one_initcall()
       cmos_do_probe()
        rtc_device_register()
         __register_chrdev()
         cdev->owner = struct module*
                                         open("/dev/rtc0")
        rtc_device_unregister()
      module_put()
      free_module()
       module_free(mod->module_core)
       /* struct module *module is now
          freed */
                                          chrdev_open()
                                           spin_lock(cdev_lock)
                                           cdev_get()
                                            try_module_get()
                                             module_is_live()
                                             /* dereferences already
                                                freed struct module* */
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6aa5ebac3a79e9aa09ab9dfc26dc1adff248e8d2
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Thu May 17 22:48:17 2018 +0200

    rtc: tps6586x: fix possible race condition
    
    [ Upstream commit 63d22063073b0ab46d1e06fe633fb5de8f5c58e1 ]
    
    The probe function is not allowed to fail after the RTC is registered
    because the following may happen:
    
    CPU0:                                CPU1:
    sys_load_module()
     do_init_module()
      do_one_initcall()
       cmos_do_probe()
        rtc_device_register()
         __register_chrdev()
         cdev->owner = struct module*
                                         open("/dev/rtc0")
        rtc_device_unregister()
      module_put()
      free_module()
       module_free(mod->module_core)
       /* struct module *module is now
          freed */
                                          chrdev_open()
                                           spin_lock(cdev_lock)
                                           cdev_get()
                                            try_module_get()
                                             module_is_live()
                                             /* dereferences already
                                                freed struct module* */
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8f2bb00c2db00c4c1c83b94c6f06f3d20558bf4
Author: Vic Wei <vwei@codeaurora.org>
Date:   Mon Apr 23 15:17:07 2018 -0700

    Bluetooth: btusb: add ID for LiteOn 04ca:301a
    
    [ Upstream commit d666fc5479ad76a1bcbe6476d4997cea714bab2d ]
    
    Contains a QCA6174A chipset, with USB BT. Let's support loading
    firmware on it.
    
    >From usb-devices:
    T:  Bus=02 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12   MxCh= 0
    D:  Ver= 2.01 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=04ca ProdID=301a Rev= 0.01
    C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=100mA
    I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    
    Signed-off-by: Vic Wei <vwei@codeaurora.org>
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8867977862123c4c684dfa118ae6633518afe9ff
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:46 2018 +1000

    drm/nouveau/fifo/gk104-: poll for runlist update completion
    
    [ Upstream commit 4f2fc25c0f8bcc8db1b8a7b21e88c3d7f35c5acb ]
    
    Newer HW doesn't appear to send this event, which will cause long delays
    in runlist updates if they don't complete immediately.
    
    RM doesn't use these events anywhere, and an NVGPU commit message notes
    that polling is the preferred method even on HW that supports the event.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcc16811023394a5e61a20c107f1fa560a28b7c1
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau/gem: lookup VMAs for buffers referenced by pushbuf ioctl
    
    [ Upstream commit 19ca10d82e33bcfe92412c461fc3534ec1e14747 ]
    
    We previously only did this for push buffers, but an upcoming patch will
    need to attach fences to all VMAs to resolve another issue.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 125efb51cdd9c7e8649add5bc3866e3ed325ff76
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue May 8 20:39:47 2018 +1000

    drm/nouveau: remove fence wait code from deferred client work handler
    
    [ Upstream commit 11e451e74050d9e9030581ce40337838acfcea5b ]
    
    Fences attached to deferred client work items now originate from channels
    belonging to the client, meaning we can be certain they've been signalled
    before we destroy a client.
    
    This closes a race that could happen if the dma_fence_wait_timeout() call
    didn't succeed.  When the fence was later signalled, a use-after-free was
    possible.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52e3ca2ed5cf9ddfbbfbb776d2e3f66736b374e9
Author: Jens Remus <jremus@linux.ibm.com>
Date:   Thu May 17 19:15:05 2018 +0200

    scsi: zfcp: assert that the ERP lock is held when tracing a recovery trigger
    
    [ Upstream commit 9e156c54ace310ce7fb1cd960e62416947f3d47c ]
    
    Otherwise iterating with list_for_each() over the adapter->erp_ready_head
    and adapter->erp_running_head lists can lead to an infinite loop. See commit
    "zfcp: fix infinite iteration on erp_ready_head list".
    
    The run-time check is only performed for debug kernels which have the kernel
    lock validator enabled. Following is an example of the warning that is
    reported, if the ERP lock is not held when calling zfcp_dbf_rec_trig():
    
    WARNING: CPU: 0 PID: 604 at drivers/s390/scsi/zfcp_dbf.c:288 zfcp_dbf_rec_trig+0x172/0x188
    Modules linked in: ...
    CPU: 0 PID: 604 Comm: kworker/u128:3 Not tainted 4.16.0-... #1
    Hardware name: IBM 2964 N96 702 (z/VM 6.4.0)
    Workqueue: zfcp_q_0.0.1906 zfcp_scsi_rport_work
    Krnl PSW : 00000000330fdbf9 00000000367e9728 (zfcp_dbf_rec_trig+0x172/0x188)
               R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:3 PM:0 RI:0 EA:3
    Krnl GPRS: 00000000c57a5d99 3288200000000000 0000000000000000 000000006cc82740
               00000000009d09d6 0000000000000000 00000000000000ff 0000000000000000
               0000000000000000 0000000000e1b5fe 000000006de01d38 0000000076130958
               000000006cc82548 000000006de01a98 00000000009d09d6 000000006a6d3c80
    Krnl Code: 00000000009d0ad2: eb7ff0b80004        lmg        %r7,%r15,184(%r15)
               00000000009d0ad8: c0f4000d7dd0        brcl       15,b80678
              #00000000009d0ade: a7f40001            brc        15,9d0ae0
              >00000000009d0ae2: a7f4ff7d            brc        15,9d09dc
               00000000009d0ae6: e340f0f00004        lg         %r4,240(%r15)
               00000000009d0aec: eb7ff0b80004        lmg        %r7,%r15,184(%r15)
               00000000009d0af2: 07f4                bcr        15,%r4
               00000000009d0af4: 0707                bcr        0,%r7
    Call Trace:
    ([<00000000009d09d6>] zfcp_dbf_rec_trig+0x66/0x188)
     [<00000000009dd740>] zfcp_scsi_rport_work+0x98/0x190
     [<0000000000169b34>] process_one_work+0x3d4/0x6f8
     [<000000000016a08a>] worker_thread+0x232/0x418
     [<000000000017219e>] kthread+0x166/0x178
     [<0000000000b815ea>] kernel_thread_starter+0x6/0xc
     [<0000000000b815e4>] kernel_thread_starter+0x0/0xc
    2 locks held by kworker/u128:3/604:
     #0:  ((wq_completion)name){+.+.}, at: [<0000000082af1024>] process_one_work+0x1dc/0x6f8
     #1:  ((work_completion)(&port->rport_work)){+.+.}, at: [<0000000082af1024>] process_one_work+0x1dc/0x6f8
    Last Breaking-Event-Address:
     [<00000000009d0ade>] zfcp_dbf_rec_trig+0x16e/0x188
    ---[ end trace b2f4020572e2c124 ]---
    
    Suggested-by: Steffen Maier <maier@linux.ibm.com>
    Signed-off-by: Jens Remus <jremus@linux.ibm.com>
    Reviewed-by: Benjamin Block <bblock@linux.ibm.com>
    Reviewed-by: Steffen Maier <maier@linux.ibm.com>
    Signed-off-by: Steffen Maier <maier@linux.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88ebbdac6f68e3c5f3af482c721f96ef29b301fe
Author: Maya Erez <merez@codeaurora.org>
Date:   Thu May 3 16:37:16 2018 +0530

    scsi: ufs: fix exception event handling
    
    [ Upstream commit 2e3611e9546c2ed4def152a51dfd34e8dddae7a5 ]
    
    The device can set the exception event bit in one of the response UPIU,
    for example to notify the need for urgent BKOPs operation.  In such a
    case, the host driver calls ufshcd_exception_event_handler to handle
    this notification.  When trying to check the exception event status (for
    finding the cause for the exception event), the device may be busy with
    additional SCSI commands handling and may not respond within the 100ms
    timeout.
    
    To prevent that, we need to block SCSI commands during handling of
    exception events and allow retransmissions of the query requests, in
    case of timeout.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Maya Erez <merez@codeaurora.org>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Reviewed-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b2a881027f4fdfe7c117750329b89cbb871a0c9
Author: Subhash Jadavani <subhashj@codeaurora.org>
Date:   Thu May 3 16:37:17 2018 +0530

    scsi: ufs: ufshcd: fix possible unclocked register access
    
    [ Upstream commit b334456ec2021b1addc19806990115e69ec4ac32 ]
    
    Vendor specific setup_clocks ops may depend on clocks managed by ufshcd
    driver so if the vendor specific setup_clocks callback is called when
    the required clocks are turned off, it results into unclocked register
    access.
    
    This change make sure that required clocks are enabled before vendor
    specific setup_clocks callback is called.
    
    Signed-off-by: Subhash Jadavani <subhashj@codeaurora.org>
    Signed-off-by: Venkat Gopalakrishnan <venkatg@codeaurora.org>
    Signed-off-by: Can Guo <cang@codeaurora.org>
    Signed-off-by: Asutosh Das <asutoshd@codeaurora.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82ee36f98bac0e3857e0f43abce133055a2ce4e1
Author: Maxime Chevallier <maxime.chevallier@bootlin.com>
Date:   Fri May 18 09:33:39 2018 +0200

    net: mvpp2: Add missing VLAN tag detection
    
    [ Upstream commit 62c8a069b510d905039abd4097434f190a316941 ]
    
    Marvell PPv2 Header Parser sets some bits in the 'result_info' field in
    each lookup iteration, to identify different packet attributes such as
    DSA / VLAN tag, protocol infos, etc. This is used in further
    classification stages in the controller.
    
    It's the DSA tag detection entry that is in charge of detecting when there
    is a single VLAN tag.
    
    This commits adds the missing update of the result_info in this case.
    
    Signed-off-by: Maxime Chevallier <maxime.chevallier@bootlin.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecdc49e2cbf3524d16777eb12d66b2dcb2088efb
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Apr 20 16:30:02 2018 -0700

    fscrypt: use unbound workqueue for decryption
    
    [ Upstream commit 36dd26e0c8d42699eeba87431246c07c28075bae ]
    
    Improve fscrypt read performance by switching the decryption workqueue
    from bound to unbound.  With the bound workqueue, when multiple bios
    completed on the same CPU, they were decrypted on that same CPU.  But
    with the unbound queue, they are now decrypted in parallel on any CPU.
    
    Although fscrypt read performance can be tough to measure due to the
    many sources of variation, this change is most beneficial when
    decryption is slow, e.g. on CPUs without AES instructions.  For example,
    I timed tarring up encrypted directories on f2fs.  On x86 with AES-NI
    instructions disabled, the unbound workqueue improved performance by
    about 25-35%, using 1 to NUM_CPUs jobs with 4 or 8 CPUs available.  But
    with AES-NI enabled, performance was unchanged to within ~2%.
    
    I also did the same test on a quad-core ARM CPU using xts-speck128-neon
    encryption.  There performance was usually about 10% better with the
    unbound workqueue, bringing it closer to the unencrypted speed.
    
    The unbound workqueue may be worse in some cases due to worse locality,
    but I think it's still the better default.  dm-crypt uses an unbound
    workqueue by default too, so this change makes fscrypt match.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd14ddcb1737003a969d9aa71410bfe32d1f5f17
Author: Xi Wang <wangxi11@huawei.com>
Date:   Sat May 19 16:53:19 2018 +0100

    net: hns3: Fix for hns3 module is loaded multiple times problem
    
    [ Upstream commit 3c7624d8fc0b893b644b945ab904c629ebc9611e ]
    
    If the hns3 driver has been built into kernel and then loaded with
    the same driver which built as KLM, it may trigger an error like
    below:
    
    [   20.009555] hns3: Hisilicon Ethernet Network Driver for Hip08 Family - version
    [   20.016789] hns3: Copyright (c) 2017 Huawei Corporation.
    [   20.022100] Error: Driver 'hns3' is already registered, aborting...
    [   23.517397] Unable to handle kernel NULL pointer dereference at virtual address 00000000
    ...
    [   23.691583] Process insmod (pid: 1982, stack limit = 0x00000000cd5f21cb)
    [   23.698270] Call trace:
    [   23.700705]  __list_del_entry_valid+0x2c/0xd8
    [   23.705049]  hnae3_unregister_client+0x68/0xa8
    [   23.709487]  hns3_init_module+0x98/0x1000 [hns3]
    [   23.714093]  do_one_initcall+0x5c/0x170
    [   23.717918]  do_init_module+0x64/0x1f4
    [   23.721654]  load_module+0x1d14/0x24b0
    [   23.725390]  SyS_init_module+0x158/0x208
    [   23.729300]  el0_svc_naked+0x30/0x34
    
    This patch fixes it by adding module version info.
    
    Fixes: 38caee9d3ee8 ("net: hns3: Add support of the HNAE3 framework")
    Signed-off-by: Xi Wang <wangxi11@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45c5224a8310d9e753280a753174cc4ea6849e0a
Author: Xi Wang <wangxi11@huawei.com>
Date:   Sat May 19 16:53:18 2018 +0100

    net: hns3: Fix the missing client list node initialization
    
    [ Upstream commit 13562d1f5e2fbe2cf33b23a00abca3f71264c4ac ]
    
    This patch fixes the missing initialization of the client list node
    in the hnae3_register_client() function.
    
    Fixes: 76ad4f0ee747 ("net: hns3: Add support of HNS3 Ethernet Driver for hip08 SoC")
    Signed-off-by: Xi Wang <wangxi11@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cfbedaf65e12ef8e4157eb5cc0829e683eb52a0
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Sat May 19 16:53:23 2018 +0100

    net: hns3: Fix for CMDQ and Misc. interrupt init order problem
    
    [ Upstream commit eddf04626d1d6d0bcd01ac6a287e49f5ddb90a26 ]
    
    When vf module is loading, the cmd queue initialization should
    happen before misc interrupt initialization, otherwise the misc
    interrupt handle will cause using uninitialized cmd queue problem.
    There is also the same issue when vf module is unloading.
    
    This patch fixes it by adjusting the location of some function.
    
    Fixes: e2cb1dec9779 ("net: hns3: Add HNS3 VF HCL(Hardware Compatibility Layer) Support")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f8d490da5bd9d3dc5a8e8de07ba25e2ab13488c
Author: Tony Lindgren <tony@atomide.com>
Date:   Fri May 18 10:30:07 2018 -0700

    spi: Add missing pm_runtime_put_noidle() after failed get
    
    [ Upstream commit 7e48e23a1f4a50f93ac1073f1326e0a73829b631 ]
    
    If pm_runtime_get_sync() fails we should call pm_runtime_put_noidle().
    This is probably not a critical fix as we should only hit this when
    things are broken elsewhere.
    
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9556db4e7028af40beac2497306b49663d29267
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon May 21 18:19:49 2018 +0100

    drivers/perf: arm-ccn: don't log to dmesg in event_init
    
    [ Upstream commit 1898eb61fbc9703efee886d3abec27a388cf28c3 ]
    
    The ARM CCN PMU driver uses dev_warn() to complain about parameters in
    the user-provided perf_event_attr. This means that under normal
    operation (e.g. a single invocation of the perf tool), a number of
    messages warnings may be logged to dmesg.
    
    Tools may issue multiple syscalls to probe for feature support, and
    multiple applications (from multiple users) can attempt to open events
    simultaneously, so this is not very helpful, even if a user happens to
    have access to dmesg. Worse, this can push important information out of
    the dmesg ring buffer, and can significantly slow down syscall fuzzers,
    vastly increasing the time it takes to find critical bugs.
    
    Demote the dev_warn() instances to dev_dbg(), as is the case for all
    other PMU drivers under drivers/perf/. Users who wish to debug PMU event
    initialisation can enable dynamic debug to receive these messages.
    
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Cc: Pawel Moll <pawel.moll@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7404c0350f984d6f84f6a0593b5ea78bd646d0c5
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Mon May 7 14:29:42 2018 +0200

    watchdog: renesas-wdt: Add support for the R8A77965 WDT
    
    [ Upstream commit b1eb8fedc01499132ced4b2a44b3ab3855c4e681 ]
    
    Document support for the Watchdog Timer (WDT) Controller in the Renesas
    R-Car M3-N (R8A77965) SoC. No driver update is needed.
    
    Signed-off-by: Takeshi Kihara <takeshi.kihara.df@renesas.com>
    [wsa: rebased to v4.17-rc3]
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f51ab3ad41aa74927ad97cbf662065692de1a2b
Author: Mimi Zohar <zohar@linux.vnet.ibm.com>
Date:   Fri Apr 27 14:31:40 2018 -0400

    ima: based on policy verify firmware signatures (pre-allocated buffer)
    
    [ Upstream commit fd90bc559bfba743ae8de87ff23b92a5e4668062 ]
    
    Don't differentiate, for now, between kernel_read_file_id READING_FIRMWARE
    and READING_FIRMWARE_PREALLOC_BUFFER enumerations.
    
    Fixes: a098ecd firmware: support loading into a pre-allocated buffer (since 4.8)
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Cc: Luis R. Rodriguez <mcgrof@suse.com>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Serge E. Hallyn <serge@hallyn.com>
    Cc: Stephen Boyd <stephen.boyd@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f9d1ad761f7c551adff085c14162db8dae8aafb
Author: Lorenzo Bianconi <lorenzo.bianconi@redhat.com>
Date:   Tue May 15 12:08:14 2018 +0200

    mt76x2: apply coverage class on slot time too
    
    [ Upstream commit 0d45d3fe42efc76b6c4f5a62f8d110c7a2e6f83f ]
    
    According to 802.11-2007 17.3.8.6 (slot time), the slot time should
    be increased by 3 us * coverage class. Taking into account coverage
    class in slot time configuration allows to increase by an order of
    magnitude the throughput on a 4Km link in a noisy environment
    
    Tested-by: Luca Bisti <luca.bisti@gmail.com>
    Tested-by: Gaetano Catalli <gaetano.catalli@gmail.com>
    Signed-off-by: Lorenzo Bianconi <lorenzo.bianconi@redhat.com>
    Acked-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab3088c623b52cf0b8292cf4aad09bafaddf616b
Author: Xinming Hu <huxm@marvell.com>
Date:   Fri May 18 15:38:54 2018 +0800

    mwifiex: correct histogram data with appropriate index
    
    [ Upstream commit 30bfce0b63fa68c14ae1613eb9d259fa18644074 ]
    
    Correct snr/nr/rssi data index to avoid possible buffer underflow.
    
    Signed-off-by: Xinming Hu <huxm@marvell.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a93a58ecd50f9809185c91be009da941656b8e4
Author: Michal Vokáč <vokac.m@gmail.com>
Date:   Wed May 23 08:20:19 2018 +0200

    net: dsa: qca8k: Add support for QCA8334 switch
    
    [ Upstream commit 64cf81675a1f64c1b311e4611dd3b6a961607612 ]
    
    Add support for the four-port variant of the Qualcomm QCA833x switch.
    
    Signed-off-by: Michal Vokáč <michal.vokac@ysoft.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0abb4b17c7b6ae6452b9a0745613e2e956ca1104
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Wed May 23 17:19:22 2018 -0500

    PCI: pciehp: Request control of native hotplug only if supported
    
    [ Upstream commit 408fec36a1ab3d14273c2116b449ef1e9be3cb8b ]
    
    Currently we request control of native PCIe hotplug unconditionally.
    Native PCIe hotplug events are handled by the pciehp driver, and if it is
    not enabled those events will be lost.
    
    Request control of native PCIe hotplug only if the pciehp driver is
    enabled, so we will actually handle native PCIe hotplug events.
    
    Suggested-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a35392ed9ba8ad4d8ce536402a09f288a7748b2
Author: Sandipan Das <sandipan@linux.vnet.ibm.com>
Date:   Thu May 24 12:26:46 2018 +0530

    bpf: powerpc64: pad function address loads with NOPs
    
    [ Upstream commit 4ea69b2fd623dee2bbc77d3b6b7d8c0924e2026a ]
    
    For multi-function programs, loading the address of a callee
    function to a register requires emitting instructions whose
    count varies from one to five depending on the nature of the
    address.
    
    Since we come to know of the callee's address only before the
    extra pass, the number of instructions required to load this
    address may vary from what was previously generated. This can
    make the JITed image grow or shrink.
    
    To avoid this, we should generate a constant five-instruction
    when loading function addresses by padding the optimized load
    sequence with NOPs.
    
    Signed-off-by: Sandipan Das <sandipan@linux.vnet.ibm.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 238a59e463e8e801959ec14f2b9869284dbf6f6d
Author: Sandipan Das <sandipan@linux.vnet.ibm.com>
Date:   Thu May 24 12:26:51 2018 +0530

    bpf: fix multi-function JITed dump obtained via syscall
    
    [ Upstream commit 4d56a76ead2fcd856e677cdc9445ad331a409b8c ]
    
    Currently, for multi-function programs, we cannot get the JITed
    instructions using the bpf system call's BPF_OBJ_GET_INFO_BY_FD
    command. Because of this, userspace tools such as bpftool fail
    to identify a multi-function program as being JITed or not.
    
    With the JIT enabled and the test program running, this can be
    verified as follows:
    
      # cat /proc/sys/net/core/bpf_jit_enable
      1
    
    Before applying this patch:
    
      # bpftool prog list
      1: kprobe  name foo  tag b811aab41a39ad3d  gpl
              loaded_at 2018-05-16T11:43:38+0530  uid 0
              xlated 216B  not jited  memlock 65536B
      ...
    
      # bpftool prog dump jited id 1
      no instructions returned
    
    After applying this patch:
    
      # bpftool prog list
      1: kprobe  name foo  tag b811aab41a39ad3d  gpl
              loaded_at 2018-05-16T12:13:01+0530  uid 0
              xlated 216B  jited 308B  memlock 65536B
      ...
    
      # bpftool prog dump jited id 1
         0:   nop
         4:   nop
         8:   mflr    r0
         c:   std     r0,16(r1)
        10:   stdu    r1,-112(r1)
        14:   std     r31,104(r1)
        18:   addi    r31,r1,48
        1c:   li      r3,10
      ...
    
    Signed-off-by: Sandipan Das <sandipan@linux.vnet.ibm.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1678d98a2850ab5ace07e8bf7ff9d4025343ae01
Author: Christian Lamparter <chunkeey@gmail.com>
Date:   Mon May 21 22:57:37 2018 +0200

    pinctrl: msm: fix gpio-hog related boot issues
    
    [ Upstream commit a86caa9ba5d70696ceb35d1d39caa20d8b641387 ]
    
    Sven Eckelmann reported an issue with the current IPQ4019 pinctrl.
    Setting up any gpio-hog in the device-tree for his device would
    "kill the bootup completely":
    
    | [    0.477838] msm_serial 78af000.serial: could not find pctldev for node /soc/pinctrl@1000000/serial_pinmux, deferring probe
    | [    0.499828] spi_qup 78b5000.spi: could not find pctldev for node /soc/pinctrl@1000000/spi_0_pinmux, deferring probe
    | [    1.298883] requesting hog GPIO enable USB2 power (chip 1000000.pinctrl, offset 58) failed, -517
    | [    1.299609] gpiochip_add_data: GPIOs 0..99 (1000000.pinctrl) failed to register
    | [    1.308589] ipq4019-pinctrl 1000000.pinctrl: Failed register gpiochip
    | [    1.316586] msm_serial 78af000.serial: could not find pctldev for node /soc/pinctrl@1000000/serial_pinmux, deferring probe
    | [    1.322415] spi_qup 78b5000.spi: could not find pctldev for node /soc/pinctrl@1000000/spi_0_pinmux, deferri
    
    This was also verified on a RT-AC58U (IPQ4018) which would
    no longer boot, if a gpio-hog was specified. (Tried forcing
    the USB LED PIN (GPIO0) to high.).
    
    The problem is that Pinctrl+GPIO registration is currently
    peformed in the following order in pinctrl-msm.c:
            1. pinctrl_register()
            2. gpiochip_add()
            3. gpiochip_add_pin_range()
    
    The actual error code -517 == -EPROBE_DEFER is coming from
    pinctrl_get_device_gpio_range(), which is called through:
            gpiochip_add
                of_gpiochip_add
                    of_gpiochip_scan_gpios
                        gpiod_hog
                            gpiochip_request_own_desc
                                __gpiod_request
                                    chip->request
                                        gpiochip_generic_request
                                           pinctrl_gpio_request
                                              pinctrl_get_device_gpio_range
    
    pinctrl_get_device_gpio_range() is unable to find any valid
    pin ranges, since nothing has been added to the pinctrldev_list yet.
    so the range can't be found, and the operation fails with -EPROBE_DEFER.
    
    This patch fixes the issue by adding the "gpio-ranges" property to
    the pinctrl device node of all upstream Qcom SoC. The pin ranges are
    then added by the gpio core.
    
    In order to remain compatible with older, existing DTs (and ACPI)
    a check for the "gpio-ranges" property has been added to
    msm_gpio_init(). This prevents the driver of adding the same entry
    to the pinctrldev_list twice.
    
    Reported-by: Sven Eckelmann <sven.eckelmann@openmesh.com>
    Tested-by: Sven Eckelmann <sven.eckelmann@openmesh.com> [ipq4019]
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d08b49507ab936aca644892411c1fac6fc5f59b9
Author: Julia Lawall <Julia.Lawall@lip6.fr>
Date:   Wed May 23 21:07:12 2018 +0200

    pinctrl: at91-pio4: add missing of_node_put
    
    [ Upstream commit 21816364715f508c10da1e087e352bc1e326614f ]
    
    The device node iterators perform an of_node_get on each iteration, so a
    jump out of the loop requires an of_node_put.
    
    The semantic patch that fixes this problem is as follows
    (http://coccinelle.lip6.fr):
    
    // <smpl>
    @@
    expression root,e;
    local idexpression child;
    iterator name for_each_child_of_node;
    @@
    
     for_each_child_of_node(root, child) {
       ... when != of_node_put(child)
           when != e = child
    +  of_node_put(child);
    ?  break;
       ...
    }
    ... when != child
    // </smpl>
    
    Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f468a90a22a6339add43eb65cd91ac082b5b8dfe
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Thu May 24 11:02:06 2018 +0000

    powerpc/8xx: fix invalid register expression in head_8xx.S
    
    [ Upstream commit e4ccb1dae6bdef228d729c076c38161ef6e7ca34 ]
    
    New binutils generate the following warning
    
      AS      arch/powerpc/kernel/head_8xx.o
    arch/powerpc/kernel/head_8xx.S: Assembler messages:
    arch/powerpc/kernel/head_8xx.S:916: Warning: invalid register expression
    
    This patch fixes it.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab89e086ea114228bec27c5b64b185e433a1eac8
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed May 23 11:02:04 2018 +0200

    spi: sh-msiof: Fix setting SIRMDR1.SYNCAC to match SITMDR1.SYNCAC
    
    [ Upstream commit 0921e11e1e12802ae0a3c19cb02e33354ca51967 ]
    
    According to section 59.2.4 MSIOF Receive Mode Register 1 (SIRMDR1) in
    the R-Car Gen3 datasheet Rev.1.00, the value of the SIRMDR1.SYNCAC bit
    must match the value of the SITMDR1.SYNCAC bit.  However,
    sh_msiof_spi_setup() changes only the latter.
    
    Fix this by updating the SIRMDR1 register like the SITMDR1 register,
    taking into account register bits that exist in SITMDR1 only.
    
    Reported-by: Renesas BSP team via Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Fixes: 7ff0b53c4051145d ("spi: sh-msiof: Avoid writing to registers from spi_master.setup()")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f4e7c5559e51cd0f62d482c7885b921fb9b6059
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Sat May 19 09:01:36 2018 +0300

    KVM: x86: prevent integer overflows in KVM_MEMORY_ENCRYPT_REG_REGION
    
    [ Upstream commit 86bf20cb57b9570262338752c9df580328bc5632 ]
    
    This is a fix from reviewing the code, but it looks like it might be
    able to lead to an Oops.  It affects 32bit systems.
    
    The KVM_MEMORY_ENCRYPT_REG_REGION ioctl uses a u64 for range->addr and
    range->size but the high 32 bits would be truncated away on a 32 bit
    system.  This is harmless but it's also harmless to prevent it.
    
    Then in sev_pin_memory() the "uaddr + ulen" calculation can wrap around.
    The wrap around can happen on 32 bit or 64 bit systems, but I was only
    able to figure out a problem for 32 bit systems.  We would pick a number
    which results in "npages" being zero.  The sev_pin_memory() would then
    return ZERO_SIZE_PTR without allocating anything.
    
    I made it illegal to call sev_pin_memory() with "ulen" set to zero.
    Hopefully, that doesn't cause any problems.  I also changed the type of
    "first" and "last" to long, just for cosmetic reasons.  Otherwise on a
    64 bit system you're saving "uaddr >> 12" in an int and it truncates the
    high 20 bits away.  The math works in the current code so far as I can
    see but it's just weird.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    [Brijesh noted that the code is only reachable on X86_64.]
    Reviewed-by: Brijesh Singh <brijesh.singh@amd.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc197d0bed9e7d995823b2363b3a1fe155e2d96f
Author: Mathieu Malaterre <malat@debian.org>
Date:   Fri Apr 6 22:12:19 2018 +0200

    powerpc: Add __printf verification to prom_printf
    
    [ Upstream commit eae5f709a4d738c52b6ab636981755d76349ea9e ]
    
    __printf is useful to verify format and arguments. Fix arg mismatch
    reported by gcc, remove the following warnings (with W=1):
    
      arch/powerpc/kernel/prom_init.c:1467:31: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’
      arch/powerpc/kernel/prom_init.c:1471:31: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’
      arch/powerpc/kernel/prom_init.c:1504:33: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’
      arch/powerpc/kernel/prom_init.c:1505:33: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’
      arch/powerpc/kernel/prom_init.c:1506:33: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’
      arch/powerpc/kernel/prom_init.c:1507:33: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’
      arch/powerpc/kernel/prom_init.c:1508:33: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’
      arch/powerpc/kernel/prom_init.c:1509:33: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’
      arch/powerpc/kernel/prom_init.c:1975:39: error: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 2 has type ‘unsigned int’
      arch/powerpc/kernel/prom_init.c:1986:27: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’
      arch/powerpc/kernel/prom_init.c:2567:38: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’
      arch/powerpc/kernel/prom_init.c:2567:46: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 3 has type ‘long unsigned int’
      arch/powerpc/kernel/prom_init.c:2569:38: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘long unsigned int’
      arch/powerpc/kernel/prom_init.c:2569:46: error: format ‘%x’ expects argument of type ‘unsigned int’, but argument 3 has type ‘long unsigned int’
    
    The patch also include arg mismatch fix for case with #define DEBUG_PROM
    (warning not listed here).
    
    This patch fix also the following warnings revealed by checkpatch:
    
      WARNING: Prefer using '"%s...", __func__' to using 'alloc_up', this function's name, in a string
      #101: FILE: arch/powerpc/kernel/prom_init.c:1235:
      + prom_debug("alloc_up(%lx, %lx)\n", size, align);
    
    and
    
      WARNING: Prefer using '"%s...", __func__' to using 'alloc_down', this function's name, in a string
      #138: FILE: arch/powerpc/kernel/prom_init.c:1278:
      + prom_debug("alloc_down(%lx, %lx, %s)\n", size, align,
    
    Signed-off-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 994fecb1c3676fe99ce54198b41703f5a4c85613
Author: Mathieu Malaterre <malat@debian.org>
Date:   Wed Apr 4 22:07:46 2018 +0200

    powerpc/powermac: Mark variable x as unused
    
    [ Upstream commit 5a4b475cf8511da721f20ba432c244061db7139f ]
    
    Since the value of x is never intended to be read, declare it with gcc
    attribute as unused. Fix warning treated as error with W=1:
    
      arch/powerpc/platforms/powermac/bootx_init.c:471:21: error: variable ‘x’ set but not used [-Werror=unused-but-set-variable]
    
    Suggested-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 526475ce2fa4ce4c87d81d7d0bf4a61f20fb2f14
Author: Mathieu Malaterre <malat@debian.org>
Date:   Wed Apr 4 22:13:05 2018 +0200

    powerpc/powermac: Add missing prototype for note_bootable_part()
    
    [ Upstream commit f72cf3f1d49f2c35d6cb682af2e8c93550f264e4 ]
    
    Add a missing prototype for function `note_bootable_part` to silence a
    warning treated as error with W=1:
    
      arch/powerpc/platforms/powermac/setup.c:361:12: error: no previous prototype for ‘note_bootable_part’ [-Werror=missing-prototypes]
    
    Suggested-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a43f02c8a5d5fe8357218b3a724b126a39757db
Author: Mathieu Malaterre <malat@debian.org>
Date:   Thu Mar 22 21:19:56 2018 +0100

    powerpc/chrp/time: Make some functions static, add missing header include
    
    [ Upstream commit b87a358b4a1421abd544c0b554b1b7159b2b36c0 ]
    
    Add a missing include <platforms/chrp/chrp.h>.
    
    These functions can all be static, make it so. Fix warnings treated as
    errors with W=1:
    
      arch/powerpc/platforms/chrp/time.c:41:13: error: no previous prototype for ‘chrp_time_init’ [-Werror=missing-prototypes]
      arch/powerpc/platforms/chrp/time.c:66:5: error: no previous prototype for ‘chrp_cmos_clock_read’ [-Werror=missing-prototypes]
      arch/powerpc/platforms/chrp/time.c:74:6: error: no previous prototype for ‘chrp_cmos_clock_write’ [-Werror=missing-prototypes]
      arch/powerpc/platforms/chrp/time.c:86:5: error: no previous prototype for ‘chrp_set_rtc_time’ [-Werror=missing-prototypes]
      arch/powerpc/platforms/chrp/time.c:130:6: error: no previous prototype for ‘chrp_get_rtc_time’ [-Werror=missing-prototypes]
    
    Signed-off-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 030da2a1d5b778be0f26662b71274d810c7412ce
Author: Mathieu Malaterre <malat@debian.org>
Date:   Thu Mar 22 21:20:03 2018 +0100

    powerpc/32: Add a missing include header
    
    [ Upstream commit c89ca593220931c150cffda24b4d4ccf82f13fc8 ]
    
    The header file <linux/syscalls.h> was missing from the includes. Fix the
    following warning, treated as error with W=1:
    
      arch/powerpc/kernel/pci_32.c:286:6: error: no previous prototype for ‘sys_pciconfig_iobase’ [-Werror=missing-prototypes]
    
    Signed-off-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed2716b0e0f3faaff2122fe77c6b28a733ed1ff1
Author: Patrick Bellasi <patrick.bellasi@arm.com>
Date:   Thu May 24 15:10:22 2018 +0100

    sched/cpufreq: Modify aggregate utilization to always include blocked FAIR utilization
    
    [ Upstream commit 8ecf04e11283a28ca88b8b8049ac93c3a99fcd2c ]
    
    Since the refactoring introduced by:
    
       commit 8f111bc357aa ("cpufreq/schedutil: Rewrite CPUFREQ_RT support")
    
    we aggregate FAIR utilization only if this class has runnable tasks.
    
    This was mainly due to avoid the risk to stay on an high frequency just
    because of the blocked utilization of a CPU not being properly decayed
    while the CPU was idle.
    
    However, since:
    
       commit 31e77c93e432 ("sched/fair: Update blocked load when newly idle")
    
    the FAIR blocked utilization is properly decayed also for IDLE CPUs.
    
    This allows us to use the FAIR blocked utilization as a safe mechanism
    to gracefully reduce the frequency only if no FAIR tasks show up on a
    CPU for a reasonable period of time.
    
    Moreover, we also reduce the frequency drops of CPUs running periodic
    tasks which, depending on the task periodicity and the time required
    for a frequency switch, was increasing the chances to introduce some
    undesirable performance variations.
    
    Reported-by: Vincent Guittot <vincent.guittot@linaro.org>
    Tested-by: Vincent Guittot <vincent.guittot@linaro.org>
    Signed-off-by: Patrick Bellasi <patrick.bellasi@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Acked-by: Vincent Guittot <vincent.guittot@linaro.org>
    Cc: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Cc: Joel Fernandes <joelaf@google.com>
    Cc: Juri Lelli <juri.lelli@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Morten Rasmussen <morten.rasmussen@arm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rafael J . Wysocki <rafael.j.wysocki@intel.com>
    Cc: Steve Muckle <smuckle@google.com>
    Link: http://lkml.kernel.org/r/20180524141023.13765-2-patrick.bellasi@arm.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90212b23abfbde2fdd5bd564faf511cd654e43c5
Author: Sven Eckelmann <sven.eckelmann@openmesh.com>
Date:   Wed May 23 11:09:53 2018 +0300

    ath: Add regulatory mapping for Bahamas
    
    [ Upstream commit 699e2302c286a14afe7b7394151ce6c4e1790cc1 ]
    
    The country code is used by the ath to detect the ISO 3166-1 alpha-2 name
    and to select the correct conformance test limits (CTL) for a country. If
    the country isn't available and it is still programmed in the EEPROM then
    it will cause an error and stop the initialization with:
    
      Invalid EEPROM contents
    
    The current CTL mappings for this country are:
    
    * 2.4GHz: ETSI
    * 5GHz: FCC
    
    Signed-off-by: Sven Eckelmann <sven.eckelmann@openmesh.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f95f6a05616a311b926ffff249fecf638d79c3f1
Author: Sven Eckelmann <sven.eckelmann@openmesh.com>
Date:   Wed May 23 11:09:59 2018 +0300

    ath: Add regulatory mapping for Bermuda
    
    [ Upstream commit 9c790f2d234f65697e3b0948adbfdf36dbe63dd7 ]
    
    The country code is used by the ath to detect the ISO 3166-1 alpha-2 name
    and to select the correct conformance test limits (CTL) for a country. If
    the country isn't available and it is still programmed in the EEPROM then
    it will cause an error and stop the initialization with:
    
      Invalid EEPROM contents
    
    The current CTL mappings for this country are:
    
    * 2.4GHz: FCC
    * 5GHz: FCC
    
    Signed-off-by: Sven Eckelmann <sven.eckelmann@openmesh.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bce8a8c2032752d5243270ab30acc9dfaf63038
Author: Sven Eckelmann <sven.eckelmann@openmesh.com>
Date:   Wed May 23 11:10:43 2018 +0300

    ath: Add regulatory mapping for Serbia
    
    [ Upstream commit 2a3169a54bb53717928392a04fb84deb765b51f1 ]
    
    The country code is used by the ath to detect the ISO 3166-1 alpha-2 name
    and to select the correct conformance test limits (CTL) for a country. If
    the country isn't available and it is still programmed in the EEPROM then
    it will cause an error and stop the initialization with:
    
      Invalid EEPROM contents
    
    The current CTL mappings for this country are:
    
    * 2.4GHz: ETSI
    * 5GHz: ETSI
    
    Signed-off-by: Sven Eckelmann <sven.eckelmann@openmesh.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit decbb5cdd6b95a12e67679033ef4076a7c20322e
Author: Sven Eckelmann <sven.eckelmann@openmesh.com>
Date:   Wed May 23 11:10:48 2018 +0300

    ath: Add regulatory mapping for Tanzania
    
    [ Upstream commit 667ddac5745fb9fddfe8f7fd2523070f50bd4442 ]
    
    The country code is used by the ath to detect the ISO 3166-1 alpha-2 name
    and to select the correct conformance test limits (CTL) for a country. If
    the country isn't available and it is still programmed in the EEPROM then
    it will cause an error and stop the initialization with:
    
      Invalid EEPROM contents
    
    The current CTL mappings for this country are:
    
    * 2.4GHz: ETSI
    * 5GHz: FCC
    
    Signed-off-by: Sven Eckelmann <sven.eckelmann@openmesh.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 097287cd620c5650bd3f7898c5ac9bd9f57ef695
Author: Sven Eckelmann <sven.eckelmann@openmesh.com>
Date:   Wed May 23 11:10:54 2018 +0300

    ath: Add regulatory mapping for Uganda
    
    [ Upstream commit 1ea3986ad2bc72081c69f3fbc1e5e0eeb3c44f17 ]
    
    The country code is used by the ath to detect the ISO 3166-1 alpha-2 name
    and to select the correct conformance test limits (CTL) for a country. If
    the country isn't available and it is still programmed in the EEPROM then
    it will cause an error and stop the initialization with:
    
      Invalid EEPROM contents
    
    The current CTL mappings for this country are:
    
    * 2.4GHz: ETSI
    * 5GHz: FCC
    
    Signed-off-by: Sven Eckelmann <sven.eckelmann@openmesh.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2480c6992104d6be139e0b3fc24a5ebde485232
Author: Sven Eckelmann <sven.eckelmann@openmesh.com>
Date:   Wed May 23 11:11:05 2018 +0300

    ath: Add regulatory mapping for APL2_FCCA
    
    [ Upstream commit 4f183687e3fad3ce0e06e38976cad81bc4541990 ]
    
    The regdomain code is used to select the correct the correct conformance
    test limits (CTL) for a country. If the regdomain code isn't available and
    it is still programmed in the EEPROM then it will cause an error and stop
    the initialization with:
    
      Invalid EEPROM contents
    
    The current CTL mappings for this regdomain code are:
    
    * 2.4GHz: FCC
    * 5GHz: FCC
    
    Signed-off-by: Sven Eckelmann <sven.eckelmann@openmesh.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11d13f9a1d1061701c444cb9a4d0b5e3517809e6
Author: Sven Eckelmann <sven.eckelmann@openmesh.com>
Date:   Wed May 23 11:11:14 2018 +0300

    ath: Add regulatory mapping for APL13_WORLD
    
    [ Upstream commit 9ba8df0c52b3e6baa436374b429d3d73bd09a320 ]
    
    The regdomain code is used to select the correct the correct conformance
    test limits (CTL) for a country. If the regdomain code isn't available and
    it is still programmed in the EEPROM then it will cause an error and stop
    the initialization with:
    
      Invalid EEPROM contents
    
    The current CTL mappings for this regdomain code are:
    
    * 2.4GHz: ETSI
    * 5GHz: ETSI
    
    Signed-off-by: Sven Eckelmann <sven.eckelmann@openmesh.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb59856a151faeb5c3e38a8b65d7a895b67e56cc
Author: Sven Eckelmann <sven.eckelmann@openmesh.com>
Date:   Wed May 23 11:11:18 2018 +0300

    ath: Add regulatory mapping for ETSI8_WORLD
    
    [ Upstream commit 45faf6e096da8bb80e1ddf8c08a26a9601d9469e ]
    
    The regdomain code is used to select the correct the correct conformance
    test limits (CTL) for a country. If the regdomain code isn't available and
    it is still programmed in the EEPROM then it will cause an error and stop
    the initialization with:
    
      Invalid EEPROM contents
    
    The current CTL mappings for this regdomain code are:
    
    * 2.4GHz: ETSI
    * 5GHz: ETSI
    
    Signed-off-by: Sven Eckelmann <sven.eckelmann@openmesh.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21d9cd47a973e4140e8314adb905669ded4c36dc
Author: Sven Eckelmann <sven.eckelmann@openmesh.com>
Date:   Wed May 23 11:11:30 2018 +0300

    ath: Add regulatory mapping for FCC3_ETSIC
    
    [ Upstream commit 01fb2994a98dc72c8818c274f7b5983d5dd885c7 ]
    
    The regdomain code is used to select the correct the correct conformance
    test limits (CTL) for a country. If the regdomain code isn't available and
    it is still programmed in the EEPROM then it will cause an error and stop
    the initialization with:
    
      Invalid EEPROM contents
    
    The current CTL mappings for this regdomain code are:
    
    * 2.4GHz: ETSI
    * 5GHz: FCC
    
    Signed-off-by: Sven Eckelmann <sven.eckelmann@openmesh.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be7d23f84a115033b965d3fce443fd918fecbb71
Author: Keith Busch <keith.busch@intel.com>
Date:   Thu May 24 16:16:04 2018 -0600

    nvme-pci: Fix AER reset handling
    
    [ Upstream commit 72cd4cc28e234ed7189ee508ed65ab60c80a97c8 ]
    
    The nvme timeout handling doesn't do anything if the pci channel is
    offline, which is the case when recovering from PCI error event, so it
    was a bad idea to sync the controller reset in this state. This patch
    flushes the reset work in the error_resume callback instead when the
    channel is back to online. This keeps AER handling serialized and
    can recover from timeouts.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=199757
    Fixes: cc1d5e749a2e ("nvme/pci: Sync controller reset for AER slot_reset")
    Reported-by: Alex Gagniuc <mr.nuke.me@gmail.com>
    Tested-by: Alex Gagniuc <mr.nuke.me@gmail.com>
    Signed-off-by: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a3d189410204a7f541121aada5293675520e87e
Author: Jianchao Wang <jianchao.w.wang@oracle.com>
Date:   Thu May 24 09:27:38 2018 +0800

    nvme-rdma: stop admin queue before freeing it
    
    [ Upstream commit 2e050f00a0f0e07467050cb4afae0234941e5bf3 ]
    
    For any failure after nvme_rdma_start_queue in
    nvme_rdma_configure_admin_queue, the admin queue will be freed with the
    NVME_RDMA_Q_LIVE flag still set.  Once nvme_rdma_stop_queue is invoked,
    that will cause a use-after-free.
    BUG: KASAN: use-after-free in rdma_disconnect+0x1f/0xe0 [rdma_cm]
    
    To fix it, call nvme_rdma_stop_queue for all the failed cases after
    nvme_rdma_start_queue.
    
    Signed-off-by: Jianchao Wang <jianchao.w.wang@oracle.com>
    Suggested-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01acc132dd4300a7370128b1f6575ab1aeb0a8c2
Author: Alex Elder <elder@linaro.org>
Date:   Tue Apr 10 17:25:39 2018 -0500

    soc: qcom: smem: byte swap values properly
    
    [ Upstream commit 04a512fea333369cc0b550f3b90df0d638e34d00 ]
    
    Two places report an error when a partition header is found to
    not contain the right canary value.  The error messages do not
    properly byte swap the host ids.  Fix this, and adjust the format
    specificier to match the 16-bit unsigned data type.
    
    Move the error handling for a bad canary value to the end of
    qcom_smem_alloc_private().  This avoids some long lines, and
    reduces the distraction of handling this unexpected problem.
    
    Signed-off-by: Alex Elder <elder@linaro.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90a9f2c6e28a674bcd8d84ed52242c3898583626
Author: Alex Elder <elder@linaro.org>
Date:   Tue Apr 10 17:25:41 2018 -0500

    soc: qcom: smem: fix qcom_smem_set_global_partition()
    
    [ Upstream commit 8fa1a21409da6abfe890f66532f9fcd8d2c25a3d ]
    
    If there is at least one entry in the partition table, but no global
    entry, the qcom_smem_set_global_partition() should return an error
    just like it does if there are no partition table entries.
    
    It turns out the function still returns an error in this case, but
    it waits to do so until it has mistakenly treated the last entry in
    the table as if it were the global entry found.
    
    Fix the function to return immediately if no global entry is found
    in the table.
    
    Signed-off-by: Alex Elder <elder@linaro.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 892dec9a2f25d268d204c660ce38ee5139ae7163
Author: Alex Elder <elder@linaro.org>
Date:   Fri Apr 27 09:08:17 2018 -0500

    soc: qcom: qmi: fix a buffer sizing bug
    
    [ Upstream commit 7df5ff258bd27900d516fea88da10d05602bf8c7 ]
    
    In qmi_handle_init(), a buffer is allocated for to hold messages
    received through the handle's socket.  Any "normal" messages
    (expected by the caller) will have a header prepended, so the
    buffer size is adjusted to accomodate that.
    
    The buffer must also be of sufficient size to receive control
    messages, so the size is increased if necessary to ensure these
    will fit.
    
    Unfortunately the calculation is done wrong, making it possible
    for the calculated buffer size to be too small to hold a "normal"
    message.  Specifically, if:
    
      recv_buf_size > sizeof(struct qrtr_ctrl_pkt) - sizeof(struct qmi_header)
                    AND
      recv_buf_size < sizeof(struct qrtr_ctrl_pkt)
    
    the current logic will use sizeof(struct qrtr_ctrl_pkt) as the
    receive buffer size, which is not enough to hold the maximum
    "normal" message plus its header.  Currently this problem occurs
    for (13 < recv_buf_size < 20).
    
    This patch corrects this.
    
    Signed-off-by: Alex Elder <elder@linaro.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 050ac33bbf85f5ace61c89e071b457b33e0360f2
Author: Christoph Hellwig <hch@lst.de>
Date:   Fri May 18 18:56:24 2018 +0200

    PCI: Prevent sysfs disable of device while driver is attached
    
    [ Upstream commit 6f5cdfa802733dcb561bf664cc89d203f2fd958f ]
    
    Manipulating the enable_cnt behind the back of the driver will wreak
    complete havoc with the kernel state, so disallow it.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Acked-by: Keith Busch <keith.busch@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fbe1a98d6e57c1389ba7f696724747b4b48091c
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Fri May 25 11:46:48 2018 +0200

    PM / wakeup: Make s2idle_lock a RAW_SPINLOCK
    
    [ Upstream commit 62fc00a6611a0014c85763f9def1fc07c15d1302 ]
    
    The `s2idle_lock' is acquired during suspend while interrupts are
    disabled even on RT. The lock is acquired for short sections only.
    Make it a RAW lock which avoids "sleeping while atomic" warnings on RT.
    
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ce076323dc1fa4052366c230baf5318537b7b9d
Author: Scott Wood <swood@redhat.com>
Date:   Thu May 24 10:44:20 2018 -0500

    x86/microcode: Make the late update update_lock a raw lock for RT
    
    [ Upstream commit ff987fcf011d20c53b3a613edf6e2055ea48e26e ]
    
    __reload_late() is called from stop_machine context and thus cannot
    acquire a non-raw spinlock on PREEMPT_RT.
    
    Signed-off-by: Scott Wood <swood@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Cc: Clark Williams <williams@redhat.com>
    Cc: Pei Zhang <pezhang@redhat.com>
    Cc: x86-ml <x86@kernel.org>
    Link: http://lkml.kernel.org/r/20180524154420.24455-1-swood@redhat.com
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9c0f6b27d58fe0e01cee5dc03bf3d5fa76cde59
Author: Qu Wenruo <wqu@suse.com>
Date:   Mon May 14 09:38:13 2018 +0800

    btrfs: qgroup: Finish rescan when hit the last leaf of extent tree
    
    [ Upstream commit ff3d27a048d926b3920ccdb75d98788c567cae0d ]
    
    Under the following case, qgroup rescan can double account cowed tree
    blocks:
    
    In this case, extent tree only has one tree block.
    
    -
    | transid=5 last committed=4
    | btrfs_qgroup_rescan_worker()
    | |- btrfs_start_transaction()
    | |  transid = 5
    | |- qgroup_rescan_leaf()
    |    |- btrfs_search_slot_for_read() on extent tree
    |       Get the only extent tree block from commit root (transid = 4).
    |       Scan it, set qgroup_rescan_progress to the last
    |       EXTENT/META_ITEM + 1
    |       now qgroup_rescan_progress = A + 1.
    |
    | fs tree get CoWed, new tree block is at A + 16K
    | transid 5 get committed
    -
    | transid=6 last committed=5
    | btrfs_qgroup_rescan_worker()
    | btrfs_qgroup_rescan_worker()
    | |- btrfs_start_transaction()
    | |  transid = 5
    | |- qgroup_rescan_leaf()
    |    |- btrfs_search_slot_for_read() on extent tree
    |       Get the only extent tree block from commit root (transid = 5).
    |       scan it using qgroup_rescan_progress (A + 1).
    |       found new tree block beyong A, and it's fs tree block,
    |       account it to increase qgroup numbers.
    -
    
    In above case, tree block A, and tree block A + 16K get accounted twice,
    while qgroup rescan should stop when it already reach the last leaf,
    other than continue using its qgroup_rescan_progress.
    
    Such case could happen by just looping btrfs/017 and with some
    possibility it can hit such double qgroup accounting problem.
    
    Fix it by checking the path to determine if we should finish qgroup
    rescan, other than relying on next loop to exit.
    
    Reported-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b57325823ce0bd66a17841b9dd11f380565567c5
Author: David Sterba <dsterba@suse.com>
Date:   Tue Apr 24 14:53:56 2018 +0200

    btrfs: add barriers to btrfs_sync_log before log_commit_wait wakeups
    
    [ Upstream commit 3d3a2e610ea5e7c6d4f9481ecce5d8e2d8317843 ]
    
    Currently the code assumes that there's an implied barrier by the
    sequence of code preceding the wakeup, namely the mutex unlock.
    
    As Nikolay pointed out:
    
    I think this is wrong (not your code) but the original assumption that
    the RELEASE semantics provided by mutex_unlock is sufficient.
    According to memory-barriers.txt:
    
    Section 'LOCK ACQUISITION FUNCTIONS' states:
    
     (2) RELEASE operation implication:
    
         Memory operations issued before the RELEASE will be completed before the
         RELEASE operation has completed.
    
         Memory operations issued after the RELEASE *may* be completed before the
         RELEASE operation has completed.
    
    (I've bolded the may portion)
    
    The example given there:
    
    As an example, consider the following:
    
        *A = a;
        *B = b;
        ACQUIRE
        *C = c;
        *D = d;
        RELEASE
        *E = e;
        *F = f;
    
    The following sequence of events is acceptable:
    
        ACQUIRE, {*F,*A}, *E, {*C,*D}, *B, RELEASE
    
    So if we assume that *C is modifying the flag which the waitqueue is checking,
    and *E is the actual wakeup, then those accesses can be re-ordered...
    
    IMHO this code should be considered broken...
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a913944b7e534191e53ad8a7b3d39b69d00967c8
Author: Omar Sandoval <osandov@fb.com>
Date:   Fri May 11 13:13:31 2018 -0700

    Btrfs: don't BUG_ON() in btrfs_truncate_inode_items()
    
    [ Upstream commit 0552210997badb6a60740a26ff9d976a416510f0 ]
    
    btrfs_free_extent() can fail because of ENOMEM. There's no reason to
    panic here, we can just abort the transaction.
    
    Fixes: f4b9aa8d3b87 ("btrfs_truncate")
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f1e725b720e5c6f996985b96d3eec81237b7d4e
Author: Omar Sandoval <osandov@fb.com>
Date:   Fri May 11 13:13:35 2018 -0700

    Btrfs: don't return ino to ino cache if inode item removal fails
    
    [ Upstream commit c08db7d8d295a4f3a10faaca376de011afff7950 ]
    
    In btrfs_evict_inode(), if btrfs_truncate_inode_items() fails, the inode
    item will still be in the tree but we still return the ino to the ino
    cache. That will blow up later when someone tries to allocate that ino,
    so don't return it to the cache.
    
    Fixes: 581bb050941b ("Btrfs: Cache free inode numbers in memory")
    Reviewed-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c5742e8112830ef86af45cd7aa2529c5c55e694
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Mon May 21 08:43:02 2018 -0400

    media: videobuf2-core: don't call memop 'finish' when queueing
    
    [ Upstream commit 90b2da89a083e1395cb322521a42397c49ae4500 ]
    
    When a buffer is queued or requeued in vb2_buffer_done, then don't
    call the finish memop. In this case the buffer is only returned to vb2,
    not to userspace.
    
    Calling 'finish' here will cause an unbalance when the queue is
    canceled, since the core will call the same memop again.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76dbad5017b54ba3602f54e4a4fa1a3f6ad82b94
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Tue May 15 15:23:16 2018 -0400

    media: cec-pin-error-inj: avoid a false-positive Spectre detection
    
    [ Upstream commit a3d71f256c8a8b5d51ea0dfd09cd85ce3a09d9e1 ]
    
    The current logic makes Smatch to false-detect a Spectre variant 1
    vulnerability. The problem is that it initializes an u32 indirectly
    from user space input.
    
    After trying to write a fixup, after a while I realized that, in
    practice, this shouldn't be a problem, as an u32 is initialized
    from u8, but it took some time to discover it.
    
    So, do some code cleanup to make it clearer for both humans
    and machines about the valid range for "op".
    
    Fix this warning:
            drivers/media/cec/cec-pin-error-inj.c:170 cec_pin_error_inj_parse_line() warn: potential spectre issue 'pin->error_inj_args'
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 605adcb4bbc6183b841a9adb9a2ddb62b9bc06a2
Author: Ezequiel Garcia <ezequiel@collabora.com>
Date:   Fri May 18 17:07:48 2018 -0400

    media: tw686x: Fix incorrect vb2_mem_ops GFP flags
    
    [ Upstream commit 636757ab6c93e19e2f58d3b3af1312e34eaffbab ]
    
    When the driver is configured in the "memcpy" dma-mode,
    it uses vb2_vmalloc_memops, which is backed by a SLAB
    allocator and so shouldn't be using GFP_DMA32.
    
    Fix it.
    
    Signed-off-by: Ezequiel Garcia <ezequiel@collabora.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit befb5d0a366a3a59c0ef72686b39eac5fc81b67e
Author: Fuyun Liang <liangfuyun1@huawei.com>
Date:   Fri May 25 19:43:02 2018 +0100

    net: hns3: Fixes the init of the VALID BD info in the descriptor
    
    [ Upstream commit 7d0b130cbbfa4651cc1ab9268a2956c1b9d82ff9 ]
    
    RX Buffer Descriptor contains a VALID bit which indicates if the BD
    is valid and has some data. This field is set by HNS3 hardware to
    intimate the driver of some valid data present in the BD. nd should
    be reset by the driver when BD is being used again. In the existing
    code this bit was not being (re-)initialized properly and hence was
    causing problems.
    
    Fixes: 76ad4f0ee747 ("net: hns3: Add support of HNS3 Ethernet Driver for hip08 SoC")
    Signed-off-by: Fuyun Liang <liangfuyun1@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f987e9ba7163b9198d51550de82a86e20afa1768
Author: Lijun Ou <oulijun@huawei.com>
Date:   Fri May 25 19:43:07 2018 +0100

    net: hns3: Fixes initalization of RoCE handle and makes it conditional
    
    [ Upstream commit 544a7bcd5cc74734003cf7f12502b26cebfed19f ]
    
    When register a RoCE client with hnae3vf device, it needs to judge
    the device whether support RoCE vf function. Otherwise, it will
    lead to calltrace when RoCE is not support vf function and remove
    roce device.
    
    The calltrace as follows:
    [   93.156614] Unable to handle kernel NULL pointer dereference at virtual address 00000015
     <SNIP>
    [   93.278784] Call trace:
    [   93.278788]  hnae3_match_n_instantiate+0x24/0xd8 [hnae3]
    [   93.278790]  hnae3_register_client+0xcc/0x150 [hnae3]
    [   93.278801]  hns_roce_hw_v2_init+0x18/0x1000 [hns_roce_hw_v2]
    [   93.278805]  do_one_initcall+0x58/0x160
    [   93.278807]  do_init_module+0x64/0x1d8
    [   93.278809]  load_module+0x135c/0x15c8
    [   93.278811]  SyS_finit_module+0x100/0x118
    [   93.278816]  __sys_trace_return+0x0/0x4
    [   93.278827] Code: aa0003f5 12001c56 aa1e03e0 d503201f (b9402660)
    
    Fixes: e2cb1dec9779 ("net: hns3: Add HNS3 VF HCL(Hardware Compatibility Layer) Support")
    Reported-by: Xinwei Kong <kong.kongxinwei@hisilicon.com>
    Reported-by: Zhou Wang <wangzhou1@hisilicon.com>
    Signed-off-by: Lijun Ou <oulijun@huawei.com>
    Signed-off-by: Zhou Wang <wangzhou1@hisilicon.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f2a641ece96c7dc610600fc254fd1e2dcf2e22e
Author: Eyal Reizer <eyalreizer@gmail.com>
Date:   Mon May 28 11:36:42 2018 +0300

    wlcore: sdio: check for valid platform device data before suspend
    
    [ Upstream commit 6e91d48371e79862ea2c05867aaebe4afe55a865 ]
    
    the wl pointer can be null In case only wlcore_sdio is probed while
    no WiLink module is successfully probed, as in the case of mounting a
    wl12xx module while using a device tree file configured with wl18xx
    related settings.
    In this case the system was crashing in wl1271_suspend() as platform
    device data is not set.
    Make sure wl the pointer is valid before using it.
    
    Signed-off-by: Eyal Reizer <eyalr@ti.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a509e634713bc8ace82653a69b9a2618a959fac
Author: Ganapathi Bhat <gbhat@marvell.com>
Date:   Thu May 24 19:18:27 2018 +0530

    mwifiex: handle race during mwifiex_usb_disconnect
    
    [ Upstream commit b817047ae70c0bd67b677b65d0d69d72cd6e9728 ]
    
    Race condition is observed during rmmod of mwifiex_usb:
    
    1. The rmmod thread will call mwifiex_usb_disconnect(), download
       SHUTDOWN command and do wait_event_interruptible_timeout(),
       waiting for response.
    
    2. The main thread will handle the response and will do a
       wake_up_interruptible(), unblocking rmmod thread.
    
    3. On getting unblocked, rmmod thread  will make rx_cmd.urb = NULL in
       mwifiex_usb_free().
    
    4. The main thread will try to resubmit rx_cmd.urb in
       mwifiex_usb_submit_rx_urb(), which is NULL.
    
    To fix, wait for main thread to complete before calling
    mwifiex_usb_free().
    
    Signed-off-by: Ganapathi Bhat <gbhat@marvell.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 827c5922c55b1ab7857c0a7ae9917934139187ed
Author: Vincent Palatin <vpalatin@chromium.org>
Date:   Wed Apr 18 12:23:58 2018 +0200

    mfd: cros_ec: Fail early if we cannot identify the EC
    
    [ Upstream commit 0dbbf25561b29ffab5ba6277429760abdf49ceff ]
    
    If we cannot communicate with the EC chip to detect the protocol version
    and its features, it's very likely useless to continue. Else we will
    commit all kind of uninformed mistakes (using the wrong protocol, the
    wrong buffer size, mixing the EC with other chips).
    
    Signed-off-by: Vincent Palatin <vpalatin@chromium.org>
    Acked-by: Benson Leung <bleung@chromium.org>
    Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Reviewed-by: Gwendal Grignou <gwendal@chromium.org>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fefe0728f80e65e7c9ada76404bf94ecfdd8e0c7
Author: Kai Chieh Chuang <kaichieh.chuang@mediatek.com>
Date:   Mon May 28 10:18:18 2018 +0800

    ASoC: dpcm: fix BE dai not hw_free and shutdown
    
    [ Upstream commit 9c0ac70ad24d76b873c1551e27790c7f6a815d5c ]
    
    In case, one BE is used by two FE1/FE2
    FE1--->BE-->
           |
    FE2----]
    when FE1/FE2 call dpcm_be_dai_hw_free() together
    the BE users will be 2 (> 1), hence cannot be hw_free
    the be state will leave at, ex. SND_SOC_DPCM_STATE_STOP
    
    later FE1/FE2 call dpcm_be_dai_shutdown(),
    will be skip due to wrong state.
    leaving the BE not being hw_free and shutdown.
    
    The BE dai will be hw_free later when calling
    dpcm_be_dai_shutdown() if still in invalid state.
    
    Signed-off-by: KaiChieh Chuang <kaichieh.chuang@mediatek.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6c0a276731ad8be3cbac04fbe51e28b1004011a
Author: Jian-Hong Pan <jian-hong@endlessm.com>
Date:   Mon May 21 18:09:20 2018 +0800

    Bluetooth: btusb: Add a new Realtek 8723DE ID 2ff8:b011
    
    [ Upstream commit 66d9975c5a7c40aa7e4bb0ec0b0c37ba1f190923 ]
    
    Without this patch we cannot turn on the Bluethooth adapter on ASUS
    E406MA.
    
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12   MxCh= 0
    D:  Ver= 1.10 Cls=e0(wlcon) Sub=01 Prot=01 MxPS=64 #Cfgs=  1
    P:  Vendor=2ff8 ProdID=b011 Rev= 2.00
    S:  Manufacturer=Realtek
    S:  Product=802.11n WLAN Adapter
    S:  SerialNumber=00e04c000001
    C:* #Ifs= 2 Cfg#= 1 Atr=e0 MxPwr=500mA
    I:* If#= 0 Alt= 0 #EPs= 3 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=81(I) Atr=03(Int.) MxPS=  16 Ivl=1ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
    E:  Ad=82(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   0 Ivl=1ms
    I:  If#= 1 Alt= 1 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=   9 Ivl=1ms
    I:  If#= 1 Alt= 2 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  17 Ivl=1ms
    I:  If#= 1 Alt= 3 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  25 Ivl=1ms
    I:  If#= 1 Alt= 4 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  33 Ivl=1ms
    I:  If#= 1 Alt= 5 #EPs= 2 Cls=e0(wlcon) Sub=01 Prot=01 Driver=btusb
    E:  Ad=03(O) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    E:  Ad=83(I) Atr=01(Isoc) MxPS=  49 Ivl=1ms
    
    Signed-off-by: Jian-Hong Pan <jian-hong@endlessm.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1df4b682131a68269c116fc7746beb420677e103
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon May 28 17:41:47 2018 +0200

    drivers/bus: arm-cci: fix build warnings
    
    [ Upstream commit 984e9cf1b9eaab08e4f1f082ce49ed2670e99d90 ]
    
    When the arm-cci driver is enabled, but both CONFIG_ARM_CCI5xx_PMU and
    CONFIG_ARM_CCI400_PMU are not, we get a warning about how parts of
    the driver are never used:
    
    drivers/perf/arm-cci.c:1454:29: error: 'cci_pmu_models' defined but not used [-Werror=unused-variable]
    drivers/perf/arm-cci.c:693:16: error: 'cci_pmu_event_show' defined but not used [-Werror=unused-function]
    drivers/perf/arm-cci.c:685:16: error: 'cci_pmu_format_show' defined but not used [-Werror=unused-function]
    
    Marking all three functions as __maybe_unused avoids the warnings in
    randconfig builds. I'm doing this lacking any ideas for a better fix.
    
    Fixes: 3de6be7a3dd8 ("drivers/bus: Split Arm CCI driver")
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a22c783ba498ffe8e7f683f7e5d9b88c02054994
Author: Mikita Lipski <mikita.lipski@amd.com>
Date:   Thu May 3 17:08:51 2018 -0400

    drm/amd/display: Do not program interrupt status on disabled crtc
    
    [ Upstream commit 4ea7fc09539bd2399c1fa7acea14529406120d9e ]
    
    Prevent interrupt programming of a crtc on which the stream is disabled and
    it doesn't have an OTG to reference.
    
    Signed-off-by: Mikita Lipski <mikita.lipski@amd.com>
    Reviewed-by: Harry Wentland <Harry.Wentland@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b603ad3cebb70fd1454c09059b6bb3dc020fc36
Author: Thierry Escande <thierry.escande@linaro.org>
Date:   Tue May 29 18:37:16 2018 +0200

    Bluetooth: hci_qca: Fix "Sleep inside atomic section" warning
    
    [ Upstream commit 9960521c44a5d828f29636ceac0600603ecbddbf ]
    
    This patch fixes the following warning during boot:
    
     do not call blocking ops when !TASK_RUNNING; state=1 set at
     [<(ptrval)>] qca_setup+0x194/0x750 [hci_uart]
     WARNING: CPU: 2 PID: 1878 at kernel/sched/core.c:6135
     __might_sleep+0x7c/0x88
    
    In qca_set_baudrate(), the current task state is set to
    TASK_UNINTERRUPTIBLE before going to sleep for 300ms. It was then
    restored to TASK_INTERRUPTIBLE. This patch sets the current task state
    back to TASK_RUNNING instead.
    
    Signed-off-by: Thierry Escande <thierry.escande@linaro.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58c79c9fbcdab952ff6e7f52766708ce8fea05c2
Author: Gregory Greenman <gregory.greenman@intel.com>
Date:   Tue Apr 24 06:26:41 2018 +0300

    iwlwifi: mvm: open BA session only when sta is authorized
    
    [ Upstream commit d94c5a820d107fdde711ec72c16848876027713d ]
    
    Currently, a BA session is opened when the tx traffic exceeds
    10 frames per second. As a result of inter-op problems with some
    APs, add a condition to open BA session only when station is
    already authorized.
    
    Fixes: 482e48440a0e ("iwlwifi: mvm: change open and close criteria of a BA session")
    Signed-off-by: Gregory Greenman <gregory.greenman@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff09c3c18ef4cd317caaf5f2ad9a79b20b441323
Author: Shaul Triebitz <shaul.triebitz@intel.com>
Date:   Thu Mar 22 14:14:45 2018 +0200

    iwlwifi: pcie: fix race in Rx buffer allocator
    
    [ Upstream commit 0f22e40053bd5378ad1e3250e65c574fd61c0cd6 ]
    
    Make sure the rx_allocator worker is canceled before running the
    rx_init routine.  rx_init frees and re-allocates all rxb's pages.  The
    rx_allocator worker also allocates pages for the used rxb's.  Running
    rx_init and rx_allocator simultaniously causes a kernel panic.  Fix
    that by canceling the work in rx_init.
    
    Signed-off-by: Shaul Triebitz <shaul.triebitz@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fba701fb4b600fb6808f4c110c83a250757393ac
Author: Ethan Lien <ethanlien@synology.com>
Date:   Mon May 28 13:48:20 2018 +0800

    btrfs: balance dirty metadata pages in btrfs_finish_ordered_io
    
    [ Upstream commit e73e81b6d0114d4a303205a952ab2e87c44bd279 ]
    
    [Problem description and how we fix it]
    We should balance dirty metadata pages at the end of
    btrfs_finish_ordered_io, since a small, unmergeable random write can
    potentially produce dirty metadata which is multiple times larger than
    the data itself. For example, a small, unmergeable 4KiB write may
    produce:
    
        16KiB dirty leaf (and possibly 16KiB dirty node) in subvolume tree
        16KiB dirty leaf (and possibly 16KiB dirty node) in checksum tree
        16KiB dirty leaf (and possibly 16KiB dirty node) in extent tree
    
    Although we do call balance dirty pages in write side, but in the
    buffered write path, most metadata are dirtied only after we reach the
    dirty background limit (which by far only counts dirty data pages) and
    wakeup the flusher thread. If there are many small, unmergeable random
    writes spread in a large btree, we'll find a burst of dirty pages
    exceeds the dirty_bytes limit after we wakeup the flusher thread - which
    is not what we expect. In our machine, it caused out-of-memory problem
    since a page cannot be dropped if it is marked dirty.
    
    Someone may worry about we may sleep in btrfs_btree_balance_dirty_nodelay,
    but since we do btrfs_finish_ordered_io in a separate worker, it will not
    stop the flusher consuming dirty pages. Also, we use different worker for
    metadata writeback endio, sleep in btrfs_finish_ordered_io help us throttle
    the size of dirty metadata pages.
    
    [Reproduce steps]
    To reproduce the problem, we need to do 4KiB write randomly spread in a
    large btree. In our 2GiB RAM machine:
    
    1) Create 4 subvolumes.
    2) Run fio on each subvolume:
    
       [global]
       direct=0
       rw=randwrite
       ioengine=libaio
       bs=4k
       iodepth=16
       numjobs=1
       group_reporting
       size=128G
       runtime=1800
       norandommap
       time_based
       randrepeat=0
    
    3) Take snapshot on each subvolume and repeat fio on existing files.
    4) Repeat step (3) until we get large btrees.
       In our case, by observing btrfs_root_item->bytes_used, we have 2GiB of
       metadata in each subvolume tree and 12GiB of metadata in extent tree.
    5) Stop all fio, take snapshot again, and wait until all delayed work is
       completed.
    6) Start all fio. Few seconds later we hit OOM when the flusher starts
       to work.
    
    It can be reproduced even when using nocow write.
    
    Signed-off-by: Ethan Lien <ethanlien@synology.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ add comment ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 253ee5a4904ace46f97ce175029c4f6d1c9d8460
Author: Jan Kiszka <jan.kiszka@siemens.com>
Date:   Tue May 15 11:07:01 2018 +0200

    PCI: Fix devm_pci_alloc_host_bridge() memory leak
    
    [ Upstream commit 3bbce531788719749520f28052cabdef16af6b16 ]
    
    Fix a memory leak by freeing the PCI resource list in
    devm_pci_release_host_bridge_dev().
    
    Fixes: 5c3f18cce083 ("PCI: Add devm_pci_alloc_host_bridge() interface")
    Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f79fe4592f95b78047009b97eaf966dd6cd1f41a
Author: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
Date:   Tue May 29 15:00:05 2018 +0300

    qtnfmac: fix invalid STA state on EAPOL failure
    
    [ Upstream commit 480daa9cb62c14bbd1b87a01cd9bc10cc56dbf32 ]
    
    Driver switches vif sta_state into QTNF_STA_CONNECTING when cfg80211
    core initiates connect procedure. Further this state is changed either
    to QTNF_STA_CONNECTED or to QTNF_STA_DISCONNECTED by BSS_JOIN and
    BSS_LEAVE events from firmware. However it is possible that no such
    events will be sent by firmware, e.g. if EAPOL timed out.
    
    In this case vif sta_mode will remain in QTNF_STA_CONNECTING state and
    all subsequent connection attempts will fail with -EBUSY error code.
    Fix this by perfroming STA state transition from QTNF_STA_CONNECTING
    to QTNF_STA_DISCONNECTED in cfg80211 disconnect callback.
    No need to rely upon firmware events in this case.
    
    Signed-off-by: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75da3bb5d2dd9c78ea23288179a866108cc48734
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Wed Apr 18 09:52:55 2018 +0200

    selftests/filesystems: devpts_pts included wrong header
    
    [ Upstream commit dd4b16b4f9b1b7d9f4a185cb8222e42f3a5daf00 ]
    
    We were picking up the wrong header should use asm/ioctls.h form the kernel
    and not the header from the system (sys/ioctl.h). In the current code we
    added the correct include and we added the kernel headers path to the CFLAGS.
    
    Fixes: ce290a19609d ("selftests: add devpts selftests")
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1f01d50beeefc47d91f62c89a920c8ceac8cb7d
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Thu May 3 16:21:20 2018 -0600

    selftests: filesystems: return Kselftest Skip code for skipped tests
    
    [ Upstream commit 7357dcf2ef2811156fdf223a9a27f73528934e1f ]
    
    When devpts_pts test is skipped because of unmet dependencies and/or
    unsupported configuration, it exits with error which is treated as
    a fail by the Kselftest framework. This leads to false negative
    result even when the test could not be run.
    
    In another case, it returns pass for a skipped test reporting a false
    postive.
    
    Change it to return kselftest skip code when a test gets skipped to
    clearly report that the test could not be run.
    
    Change it to use ksft_exit_skip() when test is skipped.
    
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f7441943e9c6574e3558fec5c54afd82ae5a9b5
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Thu May 3 17:09:40 2018 -0600

    selftests: intel_pstate: return Kselftest Skip code for skipped tests
    
    [ Upstream commit 5c30a038fb8ec8cdff011e6b5d5d51eb415381d4 ]
    
    When intel_pstate test is skipped because of unmet dependencies and/or
    unsupported configuration, it returns 0 which is treated as a pass
    by the Kselftest framework. This leads to false positive result even
    when the test could not be run.
    
    Change it to return kselftest skip code when a test gets skipped to
    clearly report that the test could not be run.
    
    Kselftest framework SKIP code is 4 and the framework prints appropriate
    messages to indicate that the test is skipped.
    
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4bf3a0aa48fcc1fadd316034f5f93d2c9cf175d
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Thu May 3 19:53:03 2018 -0600

    selftests: kvm: return Kselftest Skip code for skipped tests
    
    [ Upstream commit ab0e9c4b91ca902b1cae593b3dec9c4c7a724f9f ]
    
    When kvm test is skipped because of unmet dependencies and/or unsupported
    configuration, it exits with error which is treated as a fail by the
    Kselftest framework. This leads to false negative result even when the test
    could not be run.
    
    Change it to return kselftest skip code when a test gets skipped to clearly
    report that the test could not be run.
    
    Change it to use ksft_exit_skip() when the test is skipped. In addition,
    refine test_assert() message to include strerror() string and add explicit
    check for EACCES to cleary identify when test doesn't run when access is
    denied to resources required e.g: open /dev/kvm failed, rc: -1 errno: 13
    
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99f27166939bff8b39a5db9734994515967413bb
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Fri May 4 13:33:37 2018 -0600

    selftests: memfd: return Kselftest Skip code for skipped tests
    
    [ Upstream commit b27f0259e8cea74c627327c063742a83613dd460 ]
    
    When memfd test is skipped because of unmet dependencies and/or unsupported
    configuration, it returns non-zero value which is treated as a fail by the
    Kselftest framework. This leads to false negative result even when the test
    could not be run.
    
    Change it to return kselftest skip code when a test gets skipped to clearly
    report that the test could not be run.
    
    Added an explicit check for root user at the start of memfd hugetlbfs test
    and return skip code if a non-root user attempts to run it.
    
    In addition, return skip code when not enough huge pages are available to
    run the test.
    
    Kselftest framework SKIP code is 4 and the framework prints appropriate
    messages to indicate that the test is skipped.
    
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5737a8de8f9f33984799c0762c341b8cacb4a868
Author: Daniel Díaz <daniel.diaz@linaro.org>
Date:   Tue Apr 10 17:11:15 2018 -0500

    selftests/intel_pstate: Improve test, minor fixes
    
    [ Upstream commit e9d33f149f52981fd856a0b16aa8ebda89b02e34 ]
    
    A few changes improve the overall usability of the test:
    * fix a hard-coded maximum frequency (3300),
    * don't adjust the CPU frequency if only evaluating results,
    * fix a comparison for multiple frequencies.
    
    A symptom of that last issue looked like this:
      ./run.sh: line 107: [: too many arguments
      ./run.sh: line 110: 3099
      3099
      3100-3100: syntax error in expression (error token is \"3099
      3100-3100\")
    
    Because a check will count how many differente frequencies
    there are among the CPUs of the system, and after they are
    tallied another read is performed, which might produce
    different results.
    
    Signed-off-by: Daniel Díaz <daniel.diaz@linaro.org>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84e79250b3ea0d4e6e4a9753f5017019e39e7e70
Author: Kan Liang <kan.liang@intel.com>
Date:   Thu May 3 11:25:07 2018 -0700

    perf/x86/intel/uncore: Correct fixed counter index check for NHM
    
    [ Upstream commit d71f11c076c420c4e2fceb4faefa144e055e0935 ]
    
    For Nehalem and Westmere, there is only one fixed counter for W-Box.
    There is no index which is bigger than UNCORE_PMC_IDX_FIXED.
    It is not correct to use >= to check fixed counter.
    The code quality issue will bring problem when new counter index is
    introduced.
    
    Signed-off-by: Kan Liang <kan.liang@intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: acme@kernel.org
    Cc: eranian@google.com
    Link: http://lkml.kernel.org/r/1525371913-10597-2-git-send-email-kan.liang@intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd2de0692eb43db97fab21e7acb287436e2e29e0
Author: Kan Liang <kan.liang@intel.com>
Date:   Thu May 3 11:25:08 2018 -0700

    perf/x86/intel/uncore: Correct fixed counter index check in generic code
    
    [ Upstream commit 4749f8196452eeb73cf2086a6a9705bae479d33d ]
    
    There is no index which is bigger than UNCORE_PMC_IDX_FIXED. The only
    exception is client IMC uncore, which has been specially handled.
    For generic code, it is not correct to use >= to check fixed counter.
    The code quality issue will bring problem when a new counter index is
    introduced.
    
    Signed-off-by: Kan Liang <kan.liang@intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: acme@kernel.org
    Cc: eranian@google.com
    Link: http://lkml.kernel.org/r/1525371913-10597-3-git-send-email-kan.liang@intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16e8771478fa00522049cab40ba2ed979d2ce008
Author: Michael Grzeschik <m.grzeschik@pengutronix.de>
Date:   Fri May 25 16:23:46 2018 +0200

    usbip: dynamically allocate idev by nports found in sysfs
    
    [ Upstream commit de19ca6fd72c7dd45ad82403e7b3fe9c74ef6767 ]
    
    As the amount of available ports varies by the kernels build
    configuration. To remove the limitation of the fixed 128 ports
    we allocate the amount of idevs by using the number we get
    from the kernel.
    
    Signed-off-by: Michael Grzeschik <m.grzeschik@pengutronix.de>
    Acked-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6d7b8c25c929424af71d90a2a2b4a89d9d1d054
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Tue May 29 16:13:03 2018 -0600

    usbip: usbip_detach: Fix memory, udev context and udev leak
    
    [ Upstream commit d179f99a651685b19333360e6558110da2fe9bd7 ]
    
    detach_port() fails to call usbip_vhci_driver_close() from its error
    path after usbip_vhci_detach_device() returns failure, leaking memory
    allocated in usbip_vhci_driver_open() and holding udev_context and udev
    references. Fix it to call usbip_vhci_driver_close().
    
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ba8e51fbac29efda0d48437959f5bb068b82cd7
Author: Filippo Muzzini <filippo.muzzini@outlook.it>
Date:   Thu May 31 15:23:11 2018 +0200

    block, bfq: remove wrong lock in bfq_requests_merged
    
    [ Upstream commit a12bffebc0c9d6a5851f062aaea3aa7c4adc6042 ]
    
    In bfq_requests_merged(), there is a deadlock because the lock on
    bfqq->bfqd->lock is held by the calling function, but the code of
    this function tries to grab the lock again.
    
    This deadlock is currently hidden by another bug (fixed by next commit
    for this source file), which causes the body of bfq_requests_merged()
    to be never executed.
    
    This commit removes the deadlock by removing the lock/unlock pair.
    
    Signed-off-by: Filippo Muzzini <filippo.muzzini@outlook.it>
    Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e631f675763b13c357b17bce8ef5afd997b487e1
Author: Chao Yu <chao@kernel.org>
Date:   Tue Apr 17 17:51:28 2018 +0800

    f2fs: fix race in between GC and atomic open
    
    [ Upstream commit 27319ba4044c0c67d62ae39e53c0118c89f0a029 ]
    
    Thread                                  GC thread
    - f2fs_ioc_start_atomic_write
     - get_dirty_pages
     - filemap_write_and_wait_range
                                            - f2fs_gc
                                             - do_garbage_collect
                                              - gc_data_segment
                                               - move_data_page
                                                - f2fs_is_atomic_file
                                                - set_page_dirty
     - set_inode_flag(, FI_ATOMIC_FILE)
    
    Dirty data page can still be generated by GC in race condition as
    above call stack.
    
    This patch adds fi->dio_rwsem[WRITE] in f2fs_ioc_start_atomic_write
    to avoid such race.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f149c797f54b92b42a863ed8a5527ba2c682acc
Author: Chao Yu <chao@kernel.org>
Date:   Sat Apr 21 17:53:52 2018 +0800

    f2fs: fix to detect failure of dquot_initialize
    
    [ Upstream commit c22aecd75919511abea872b201751e0be1add898 ]
    
    dquot_initialize() can fail due to any exception inside quota subsystem,
    f2fs needs to be aware of it, and return correct return value to caller.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e34dc89b918885bcfa4ad9af462852e26e893b1
Author: Yunlei He <heyunlei@huawei.com>
Date:   Tue Apr 24 11:40:19 2018 +0800

    f2fs: fix missing clear FI_NO_PREALLOC in some error case
    
    [ Upstream commit cba41be08cb182476fec4d318a8a8f2f8361a901 ]
    
    This patch fix missing clear FI_NO_PREALLOC in some error case
    
    Signed-off-by: Yunlei He <heyunlei@huawei.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f7f2ac469341046c243f861725f1f73c9245502
Author: Sahitya Tummala <stummala@codeaurora.org>
Date:   Fri May 18 11:51:52 2018 +0530

    f2fs: Fix deadlock in shutdown ioctl
    
    [ Upstream commit 60b2b4ee2bc01dd052f99fa9d65da2232102ef8e ]
    
    f2fs_ioc_shutdown() ioctl gets stuck in the below path
    when issued with F2FS_GOING_DOWN_FULLSYNC option.
    
    __switch_to+0x90/0xc4
    percpu_down_write+0x8c/0xc0
    freeze_super+0xec/0x1e4
    freeze_bdev+0xc4/0xcc
    f2fs_ioctl+0xc0c/0x1ce0
    f2fs_compat_ioctl+0x98/0x1f0
    
    Signed-off-by: Sahitya Tummala <stummala@codeaurora.org>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1bbc0425f2dda148f2736799a8c70695ab2d62e
Author: Chao Yu <chao@kernel.org>
Date:   Mon Apr 23 10:36:13 2018 +0800

    f2fs: fix to wait page writeback during revoking atomic write
    
    [ Upstream commit e5e5732d8120654159254c16834bc8663d8be124 ]
    
    After revoking atomic write, related LBA can be reused by others, so we
    need to wait page writeback before reusing the LBA, in order to avoid
    interference between old atomic written in-flight IO and new IO.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37fa60d923e146e5d7d1174334a03e6ad67d5cf4
Author: Chao Yu <chao@kernel.org>
Date:   Sat May 26 18:03:34 2018 +0800

    f2fs: fix to don't trigger writeback during recovery
    
    [ Upstream commit 64c74a7ab505ea40d1b3e5d02735ecab08ae1b14 ]
    
    - f2fs_fill_super
     - recover_fsync_data
      - recover_data
       - del_fsync_inode
        - iput
         - iput_final
          - write_inode_now
           - f2fs_write_inode
            - f2fs_balance_fs
             - f2fs_balance_fs_bg
              - sync_dirty_inodes
    
    With data_flush mount option, during recovery, in order to avoid entering
    above writeback flow, let's detect recovery status and do skip in
    f2fs_balance_fs_bg.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Yunlei He <heyunlei@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c37accee80ce213cd43cf3d01f099fd477346e4
Author: Chao Yu <chao@kernel.org>
Date:   Mon May 28 16:59:26 2018 +0800

    f2fs: don't drop dentry pages after fs shutdown
    
    [ Upstream commit 1174abfd8309f4c47d454734233aa3b694560e10 ]
    
    As description in commit "f2fs: don't drop any page on f2fs_cp_error()
    case":
    
    "We still provide readdir() after shtudown, so we should keep pages to
    avoid additional IOs."
    
    In order to provider lastest directory structure, let's keep dentry
    pages in cache after fs shutdown.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df44c0553defe56dfa1113d5712bfa2c8b305f05
Author: Chao Yu <chao@kernel.org>
Date:   Mon May 28 16:59:27 2018 +0800

    f2fs: fix error path of move_data_page
    
    [ Upstream commit 14a28559f43ac7c0b98dd1b0e73ec9ec8ab4fc45 ]
    
    This patch fixes error path of move_data_page:
    - clear cold data flag if it fails to write page.
    - redirty page for non-ENOMEM case.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac3db8cb962cf81254de955f374ad5d2085dea56
Author: Anatoly Pugachev <matorola@gmail.com>
Date:   Mon May 28 02:06:37 2018 +0300

    disable loading f2fs module on PAGE_SIZE > 4KB
    
    [ Upstream commit 4071e67cffcc5c2a007116a02437471351f550eb ]
    
    The following patch disables loading of f2fs module on architectures
    which have PAGE_SIZE > 4096 , since it is impossible to mount f2fs on
    such architectures , log messages are:
    
    mount: /mnt: wrong fs type, bad option, bad superblock on
    /dev/vdiskb1, missing codepage or helper program, or other error.
    /dev/vdiskb1: F2FS filesystem,
    UUID=1d8b9ca4-2389-4910-af3b-10998969f09c, volume name ""
    
    May 15 18:03:13 ttip kernel: F2FS-fs (vdiskb1): Invalid
    page_cache_size (8192), supports only 4KB
    May 15 18:03:13 ttip kernel: F2FS-fs (vdiskb1): Can't find valid F2FS
    filesystem in 1th superblock
    May 15 18:03:13 ttip kernel: F2FS-fs (vdiskb1): Invalid
    page_cache_size (8192), supports only 4KB
    May 15 18:03:13 ttip kernel: F2FS-fs (vdiskb1): Can't find valid F2FS
    filesystem in 2th superblock
    May 15 18:03:13 ttip kernel: F2FS-fs (vdiskb1): Invalid
    page_cache_size (8192), supports only 4KB
    
    which was introduced by git commit 5c9b469295fb6b10d98923eab5e79c4edb80ed20
    
    tested on git kernel 4.17.0-rc6-00309-gec30dcf7f425
    
    with patch applied:
    
    modprobe: ERROR: could not insert 'f2fs': Invalid argument
    May 28 01:40:28 v215 kernel: F2FS not supported on PAGE_SIZE(8192) != 4096
    
    Signed-off-by: Anatoly Pugachev <matorola@gmail.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee523c118586377820a6894bdc93c3cb851b4dec
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue May 29 11:15:49 2018 -0400

    NFS: Fix up nfs_post_op_update_inode() to force ctime updates
    
    [ Upstream commit d554168f87a55b35b7c59921a0dc45b6ba17d08d ]
    
    We do not want to ignore ctime updates that originate from functions
    such as link().
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40183caa46dad78cd12dbc8bfc1e6a7bb95ecf3b
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue May 22 11:17:16 2018 -0400

    pnfs: Don't release the sequence slot until we've processed layoutget on open
    
    [ Upstream commit ae55e59da0e401893b3c52b575fc18a00623d0a1 ]
    
    If the server recalls the layout that was just handed out, we risk hitting
    a race as described in RFC5661 Section 2.10.6.3 unless we ensure that we
    release the sequence slot after processing the LAYOUTGET operation that
    was sent as part of the OPEN compound.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 669d2e45c03b3204d58ee5b91d445e75110f4ec6
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Thu May 31 19:53:33 2018 +0300

    netfilter: nf_tables: check msg_type before nft_trans_set(trans)
    
    [ Upstream commit 9c7f96fd77b0dbe1fe7ed1f9c462c45dc48a1076 ]
    
    The patch moves the "trans->msg_type == NFT_MSG_NEWSET" check before
    using nft_trans_set(trans). Otherwise we can get out of bounds read.
    
    For example, KASAN reported the one when running 0001_cache_handling_0 nft
    test. In this case "trans->msg_type" was NFT_MSG_NEWTABLE:
    
    [75517.177808] BUG: KASAN: slab-out-of-bounds in nft_set_lookup_global+0x22f/0x270 [nf_tables]
    [75517.279094] Read of size 8 at addr ffff881bdb643fc8 by task nft/7356
    ...
    [75517.375605] CPU: 26 PID: 7356 Comm: nft Tainted: G  E   4.17.0-rc7.1.x86_64 #1
    [75517.489587] Hardware name: Oracle Corporation SUN SERVER X4-2
    [75517.618129] Call Trace:
    [75517.648821]  dump_stack+0xd1/0x13b
    [75517.691040]  ? show_regs_print_info+0x5/0x5
    [75517.742519]  ? kmsg_dump_rewind_nolock+0xf5/0xf5
    [75517.799300]  ? lock_acquire+0x143/0x310
    [75517.846738]  print_address_description+0x85/0x3a0
    [75517.904547]  kasan_report+0x18d/0x4b0
    [75517.949892]  ? nft_set_lookup_global+0x22f/0x270 [nf_tables]
    [75518.019153]  ? nft_set_lookup_global+0x22f/0x270 [nf_tables]
    [75518.088420]  ? nft_set_lookup_global+0x22f/0x270 [nf_tables]
    [75518.157689]  nft_set_lookup_global+0x22f/0x270 [nf_tables]
    [75518.224869]  nf_tables_newsetelem+0x1a5/0x5d0 [nf_tables]
    [75518.291024]  ? nft_add_set_elem+0x2280/0x2280 [nf_tables]
    [75518.357154]  ? nla_parse+0x1a5/0x300
    [75518.401455]  ? kasan_kmalloc+0xa6/0xd0
    [75518.447842]  nfnetlink_rcv+0xc43/0x1bdf [nfnetlink]
    [75518.507743]  ? nfnetlink_rcv+0x7a5/0x1bdf [nfnetlink]
    [75518.569745]  ? nfnl_err_reset+0x3c0/0x3c0 [nfnetlink]
    [75518.631711]  ? lock_acquire+0x143/0x310
    [75518.679133]  ? netlink_deliver_tap+0x9b/0x1070
    [75518.733840]  ? kasan_unpoison_shadow+0x31/0x40
    [75518.788542]  netlink_unicast+0x45d/0x680
    [75518.837111]  ? __isolate_free_page+0x890/0x890
    [75518.891913]  ? netlink_attachskb+0x6b0/0x6b0
    [75518.944542]  netlink_sendmsg+0x6fa/0xd30
    [75518.993107]  ? netlink_unicast+0x680/0x680
    [75519.043758]  ? netlink_unicast+0x680/0x680
    [75519.094402]  sock_sendmsg+0xd9/0x160
    [75519.138810]  ___sys_sendmsg+0x64d/0x980
    [75519.186234]  ? copy_msghdr_from_user+0x350/0x350
    [75519.243118]  ? lock_downgrade+0x650/0x650
    [75519.292738]  ? do_raw_spin_unlock+0x5d/0x250
    [75519.345456]  ? _raw_spin_unlock+0x24/0x30
    [75519.395065]  ? __handle_mm_fault+0xbde/0x3410
    [75519.448830]  ? sock_setsockopt+0x3d2/0x1940
    [75519.500516]  ? __lock_acquire.isra.25+0xdc/0x19d0
    [75519.558448]  ? lock_downgrade+0x650/0x650
    [75519.608057]  ? __audit_syscall_entry+0x317/0x720
    [75519.664960]  ? __fget_light+0x58/0x250
    [75519.711325]  ? __sys_sendmsg+0xde/0x170
    [75519.758850]  __sys_sendmsg+0xde/0x170
    [75519.804193]  ? __ia32_sys_shutdown+0x90/0x90
    [75519.856725]  ? syscall_trace_enter+0x897/0x10e0
    [75519.912354]  ? trace_event_raw_event_sys_enter+0x920/0x920
    [75519.979432]  ? __audit_syscall_entry+0x720/0x720
    [75520.036118]  do_syscall_64+0xa3/0x3d0
    [75520.081248]  ? prepare_exit_to_usermode+0x47/0x1d0
    [75520.139904]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [75520.201680] RIP: 0033:0x7fc153320ba0
    [75520.245772] RSP: 002b:00007ffe294c3638 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
    [75520.337708] RAX: ffffffffffffffda RBX: 00007ffe294c4820 RCX: 00007fc153320ba0
    [75520.424547] RDX: 0000000000000000 RSI: 00007ffe294c46b0 RDI: 0000000000000003
    [75520.511386] RBP: 00007ffe294c47b0 R08: 0000000000000004 R09: 0000000002114090
    [75520.598225] R10: 00007ffe294c30a0 R11: 0000000000000246 R12: 00007ffe294c3660
    [75520.684961] R13: 0000000000000001 R14: 00007ffe294c3650 R15: 0000000000000001
    
    [75520.790946] Allocated by task 7356:
    [75520.833994]  kasan_kmalloc+0xa6/0xd0
    [75520.878088]  __kmalloc+0x189/0x450
    [75520.920107]  nft_trans_alloc_gfp+0x20/0x190 [nf_tables]
    [75520.983961]  nf_tables_newtable+0xcd0/0x1bd0 [nf_tables]
    [75521.048857]  nfnetlink_rcv+0xc43/0x1bdf [nfnetlink]
    [75521.108655]  netlink_unicast+0x45d/0x680
    [75521.157013]  netlink_sendmsg+0x6fa/0xd30
    [75521.205271]  sock_sendmsg+0xd9/0x160
    [75521.249365]  ___sys_sendmsg+0x64d/0x980
    [75521.296686]  __sys_sendmsg+0xde/0x170
    [75521.341822]  do_syscall_64+0xa3/0x3d0
    [75521.386957]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    [75521.467867] Freed by task 23454:
    [75521.507804]  __kasan_slab_free+0x132/0x180
    [75521.558137]  kfree+0x14d/0x4d0
    [75521.596005]  free_rt_sched_group+0x153/0x280
    [75521.648410]  sched_autogroup_create_attach+0x19a/0x520
    [75521.711330]  ksys_setsid+0x2ba/0x400
    [75521.755529]  __ia32_sys_setsid+0xa/0x10
    [75521.802850]  do_syscall_64+0xa3/0x3d0
    [75521.848090]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    [75521.929000] The buggy address belongs to the object at ffff881bdb643f80
     which belongs to the cache kmalloc-96 of size 96
    [75522.079797] The buggy address is located 72 bytes inside of
     96-byte region [ffff881bdb643f80, ffff881bdb643fe0)
    [75522.221234] The buggy address belongs to the page:
    [75522.280100] page:ffffea006f6d90c0 count:1 mapcount:0 mapping:0000000000000000 index:0x0
    [75522.377443] flags: 0x2fffff80000100(slab)
    [75522.426956] raw: 002fffff80000100 0000000000000000 0000000000000000 0000000180200020
    [75522.521275] raw: ffffea006e6fafc0 0000000c0000000c ffff881bf180f400 0000000000000000
    [75522.615601] page dumped because: kasan: bad access detected
    
    Fixes: 37a9cc525525 ("netfilter: nf_tables: add generation mask to sets")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Acked-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22bfca4ea2a98f3079fd27a47ed846f55fcc32af
Author: Javier González <javier@cnexlabs.com>
Date:   Fri Jun 1 15:04:19 2018 +0200

    lightnvm: pblk: warn in case of corrupted write buffer
    
    [ Upstream commit e37d07983af9068de0303054542d2652ca917f58 ]
    
    When cleaning up buffer entries as we wrap up, their state should be
    "completed". If any of the entries is in "submitted" state, it means
    that something bad has happened. Trigger a warning immediately instead of
    waiting for the state flag to eventually be updated, thus hiding the
    issue.
    
    Signed-off-by: Javier González <javier@cnexlabs.com>
    Signed-off-by: Matias Bjørling <mb@lightnvm.io>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84574d56f01a67ff29b1d43ca2471d2953b42218
Author: Igor Konopko <igor.j.konopko@intel.com>
Date:   Fri Jun 1 16:41:08 2018 +0200

    lightnvm: proper error handling for pblk_bio_add_pages
    
    [ Upstream commit f142ac0b5d18547a9614a697f86820ee35fd7bf0 ]
    
    Currently in case of error caused by bio_pc_add_page in
    pblk_bio_add_pages two issues occur when calling from
    pblk_rb_read_to_bio(). First one is in pblk_bio_free_pages, since we
    are trying to free pages not allocated from our mempool. Second one
    is the warn from dma_pool_free, that we are trying to free NULL
    pointer dma.
    
    This commit fix both issues.
    
    Signed-off-by: Igor Konopko <igor.j.konopko@intel.com>
    Signed-off-by: Marcin Dziegielewski <marcin.dziegielewski@intel.com>
    Signed-off-by: Matias Bjørling <mb@lightnvm.io>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41c1c490b6e1399eb58842c9d9243b6ac6456744
Author: Igor Konopko <igor.j.konopko@intel.com>
Date:   Fri Jun 1 16:41:09 2018 +0200

    lightnvm: fix partial read error path
    
    [ Upstream commit fbadca7396b97d95e2390c97506358f4f9dce7c7 ]
    
    When error occurs during bio_add_page on partial read path, pblk
    tries to free pages twice.
    
    Signed-off-by: Igor Konopko <igor.j.konopko@intel.com>
    Signed-off-by: Marcin Dziegielewski <marcin.dziegielewski@intel.com>
    Signed-off-by: Matias Bjørling <mb@lightnvm.io>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69321a3a0c8ec8ed74a74c5abf1f15d280156c4a
Author: Leon Romanovsky <leon@kernel.org>
Date:   Tue May 29 14:56:19 2018 +0300

    RDMA/mad: Convert BUG_ONs to error flows
    
    [ Upstream commit 2468b82d69e3a53d024f28d79ba0fdb8bf43dfbf ]
    
    Let's perform checks in-place instead of BUG_ONs.
    
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0f55e97f4411d94afe9cbf0459ba5d512950d47
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Fri Jun 1 17:52:05 2018 +0100

    net: hns3: Fix for service_task not running problem after resetting
    
    [ Upstream commit f5be79673fc4c925708c99ec37d77e0a2c3cd30b ]
    
    When hclge_ae_stop is called during resetting, it will cancel the
    service_task by calling cancel_work_sync, which may cause the
    service_task to exit without clearing HCLGE_STATE_SERVICE_SCHED
    bit. If this happens, the service_task will never run again.
    
    This patch fixes this problem by clearing it after calling
    cancel_work_sync in hclge_ae_stop.
    
    Fixes: 46a3df9f9718 ("net: hns3: Add HNS3 Acceleration Engine & Compatibility Layer Support")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4eb463ea15edc2d007f895e38ea0720339023b72
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Fri Jun 1 17:52:07 2018 +0100

    net: hns3: Fix for phy not link up problem after resetting
    
    [ Upstream commit 9617f66867b09b326cc932416be2431c5b91c8d8 ]
    
    When resetting, phy_state_machine may be accessing the phy through
    firmware if the phy is not stopped or disconnected, which will
    cause firemware timeout problem because the firmware is busy
    processing the reset request.
    
    This patch fixes it by disabling the phy when resetting.
    
    Fixes: b940aeae0ed6 ("net: hns3: never send command queue message to IMP when reset")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5d3cbd6241e516984b9770401d4bec14badb388
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Sun May 20 16:31:15 2018 +0000

    clk: ingenic: jz4770: Modify C1CLK clock to disable CPU clock stop on idle
    
    [ Upstream commit 45ba63a29fd9b8a461110185e3abc5b4c90b806a ]
    
    When the main processor goes idle, by default its clock is stopped.
    However, this also stops the clock of the co-processor.
    
    Here, if the C1CLK clock is enabled, we disable this functionality.
    
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 862b3a1af47f189a24d901f4117249ee6e6c0d0b
Author: Mike Looijmans <mike.looijmans@topic.nl>
Date:   Thu May 31 16:03:55 2018 +0200

    clk-si544: Properly round requested frequency to nearest match
    
    [ Upstream commit 4d3f36c5e9ca0f947eed71660239c529c501141a ]
    
    The si544 driver had a rounding problem that using the result of clk_round_rate
    may set the clock to yet another rate, for example:
    clk_round_rate(195000000) = 194999999
    clk_round_rate(194999999) = 194999998
    
    Clients would expect that after clk_set_rate(clk, freq2=clk_round_rate(clk, freq)) the
    chip will be running at exactly freq2.
    
    The problem was in the calculation of the feedback divider, it was always rounded
    down instead of to the nearest possible VCO value.
    
    After this change, the following holds true for any supported frequency:
    actual_freq = clk_round_rate(clk, freq);
    clk_set_rate(clk, actual_freq);
    clk_round_rate(clk, actual_freq) == actual_freq && clk_get_rate(clk) == actual_freq
    
    Signed-off-by: Mike Looijmans <mike.looijmans@topic.nl>
    Fixes: 953cc3e81170 ("clk: Add driver for the si544 clock generator chip")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89b5ab4d0d4dd067bda5e848bdec7dde2486b655
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed May 30 20:31:22 2018 +1000

    powerpc/64s: Fix compiler store ordering to SLB shadow area
    
    [ Upstream commit 926bc2f100c24d4842b3064b5af44ae964c1d81c ]
    
    The stores to update the SLB shadow area must be made as they appear
    in the C code, so that the hypervisor does not see an entry with
    mismatched vsid and esid. Use WRITE_ONCE for this.
    
    GCC has been observed to elide the first store to esid in the update,
    which means that if the hypervisor interrupts the guest after storing
    to vsid, it could see an entry with old esid and new vsid, which may
    possibly result in memory corruption.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8cae46595b44b719b90f04d074282f97fccbcc8d
Author: Stewart Smith <stewart@linux.ibm.com>
Date:   Thu Mar 29 17:02:46 2018 +1100

    hvc_opal: don't set tb_ticks_per_usec in udbg_init_opal_common()
    
    [ Upstream commit 447808bf500a7cc92173266a59f8a494e132b122 ]
    
    time_init() will set up tb_ticks_per_usec based on reality.
    time_init() is called *after* udbg_init_opal_common() during boot.
    
    from arch/powerpc/kernel/time.c:
      unsigned long tb_ticks_per_usec = 100; /* sane default */
    
    Currently, all powernv systems have a timebase frequency of 512mhz
    (512000000/1000000 == 0x200) - although there's nothing written
    down anywhere that I can find saying that we couldn't make that
    different based on the requirements in the ISA.
    
    So, we've been (accidentally) thwacking the (currently) correct
    (for powernv at least) value for tb_ticks_per_usec earlier than
    we otherwise would have.
    
    The "sane default" seems to be adequate for our purposes between
    udbg_init_opal_common() and time_init() being called, and if it isn't,
    then we should probably be setting it somewhere that isn't hvc_opal.c!
    
    Signed-off-by: Stewart Smith <stewart@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1463986b198769ecb98ce81be37e88f46156004
Author: Sam Bobroff <sbobroff@linux.ibm.com>
Date:   Fri May 25 13:11:30 2018 +1000

    powerpc/eeh: Fix use-after-release of EEH driver
    
    [ Upstream commit 46d4be41b987a6b2d25a2ebdd94cafb44e21d6c5 ]
    
    Correct two cases where eeh_pcid_get() is used to reference the driver's
    module but the reference is dropped before the driver pointer is used.
    
    In eeh_rmv_device() also refactor a little so that only two calls to
    eeh_pcid_put() are needed, rather than three and the reference isn't
    taken at all if it wasn't needed.
    
    Signed-off-by: Sam Bobroff <sbobroff@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50a5991e800df7b907f62820c345b893236522de
Author: Michal Suchanek <msuchanek@suse.de>
Date:   Tue Apr 24 14:15:54 2018 +1000

    powerpc/64s: Add barrier_nospec
    
    [ Upstream commit a6b3964ad71a61bb7c61d80a60bea7d42187b2eb ]
    
    A no-op form of ori (or immediate of 0 into r31 and the result stored
    in r31) has been re-tasked as a speculation barrier. The instruction
    only acts as a barrier on newer machines with appropriate firmware
    support. On older CPUs it remains a harmless no-op.
    
    Implement barrier_nospec using this instruction.
    
    mpe: The semantics of the instruction are believed to be that it
    prevents execution of subsequent instructions until preceding branches
    have been fully resolved and are no longer executing speculatively.
    There is no further documentation available at this time.
    
    Signed-off-by: Michal Suchanek <msuchanek@suse.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da3fbfc559f4dd9af398eb6267ef792474469cf6
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri May 18 15:01:16 2018 +0200

    powerpc/lib: Adjust .balign inside string functions for PPC32
    
    [ Upstream commit 1128bb7813a896bd608fb622eee3c26aaf33b473 ]
    
    commit 87a156fb18fe1 ("Align hot loops of some string functions")
    degraded the performance of string functions by adding useless
    nops
    
    A simple benchmark on an 8xx calling 100000x a memchr() that
    matches the first byte runs in 41668 TB ticks before this patch
    and in 35986 TB ticks after this patch. So this gives an
    improvement of approx 10%
    
    Another benchmark doing the same with a memchr() matching the 128th
    byte runs in 1011365 TB ticks before this patch and 1005682 TB ticks
    after this patch, so regardless on the number of loops, removing
    those useless nops improves the test by 5683 TB ticks.
    
    Fixes: 87a156fb18fe1 ("Align hot loops of some string functions")
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da1320feb7d48f2a4c5e02b253d5a2186d2bee6c
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Fri Jun 1 11:31:44 2018 -0700

    infiniband: fix a possible use-after-free bug
    
    [ Upstream commit cb2595c1393b4a5211534e6f0a0fbad369e21ad8 ]
    
    ucma_process_join() will free the new allocated "mc" struct,
    if there is any error after that, especially the copy_to_user().
    
    But in parallel, ucma_leave_multicast() could find this "mc"
    through idr_find() before ucma_process_join() frees it, since it
    is already published.
    
    So "mc" could be used in ucma_leave_multicast() after it is been
    allocated and freed in ucma_process_join(), since we don't refcnt
    it.
    
    Fix this by separating "publish" from ID allocation, so that we
    can get an ID first and publish it later after copy_to_user().
    
    Fixes: c8f6a362bf3e ("RDMA/cma: Add multicast communication support")
    Reported-by: Noam Rathaus <noamr@beyondsecurity.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1a6cfeea67fffc73589f3195dd7aec7ac2ea583
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Thu May 10 16:28:35 2018 +0900

    e1000e: Ignore TSYNCRXCTL when getting I219 clock attributes
    
    [ Upstream commit fff200caf6f9179dd9a7fc67acd659e614c3f72f ]
    
    There have been multiple reports of crashes that look like
    kernel: RIP: 0010:[<ffffffff8110303f>] timecounter_read+0xf/0x50
    [...]
    kernel: Call Trace:
    kernel:  [<ffffffffa0806b0f>] e1000e_phc_gettime+0x2f/0x60 [e1000e]
    kernel:  [<ffffffffa0806c5d>] e1000e_systim_overflow_work+0x1d/0x80 [e1000e]
    kernel:  [<ffffffff810992c5>] process_one_work+0x155/0x440
    kernel:  [<ffffffff81099e16>] worker_thread+0x116/0x4b0
    kernel:  [<ffffffff8109f422>] kthread+0xd2/0xf0
    kernel:  [<ffffffff8163184f>] ret_from_fork+0x3f/0x70
    
    These can be traced back to the fact that e1000e_systim_reset() skips the
    timecounter_init() call if e1000e_get_base_timinca() returns -EINVAL, which
    leads to a null deref in timecounter_read().
    
    Commit 83129b37ef35 ("e1000e: fix systim issues", v4.2-rc1) reworked
    e1000e_get_base_timinca() in such a way that it can return -EINVAL for
    e1000_pch_spt if the SYSCFI bit is not set in TSYNCRXCTL.
    
    Some experimentation has shown that on I219 (e1000_pch_spt, "MAC: 12")
    adapters, the E1000_TSYNCRXCTL_SYSCFI flag is unstable; TSYNCRXCTL reads
    sometimes don't have the SYSCFI bit set. Retrying the read shortly after
    finds the bit to be set. This was observed at boot (probe) but also link up
    and link down.
    
    Moreover, the phc (PTP Hardware Clock) seems to operate normally even after
    reads where SYSCFI=0. Therefore, remove this register read and
    unconditionally set the clock parameters.
    
    Reported-by: Achim Mildenberger <admin@fph.physik.uni-karlsruhe.de>
    Message-Id: <20180425065243.g5mqewg5irkwgwgv@f2>
    Bugzilla: https://bugzilla.suse.com/show_bug.cgi?id=1075876
    Fixes: 83129b37ef35 ("e1000e: fix systim issues")
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7aae3e007292de7e5fba5e3986c3baf10b73f33
Author: Luis Henriques <lhenriques@suse.com>
Date:   Mon May 28 18:37:40 2018 +0100

    ceph: fix use-after-free in ceph_statfs()
    
    [ Upstream commit 73fb0949cf246b212ff63d692a0ec88db954bb35 ]
    
    KASAN found an UAF in ceph_statfs.  This was a one-off bug but looking at
    the code it looks like the monmap access needs to be protected as it can
    be modified while we're accessing it.  Fix this by protecting the access
    with the monc->mutex.
    
      BUG: KASAN: use-after-free in ceph_statfs+0x21d/0x2c0
      Read of size 8 at addr ffff88006844f2e0 by task trinity-c5/304
    
      CPU: 0 PID: 304 Comm: trinity-c5 Not tainted 4.17.0-rc6+ #172
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014
      Call Trace:
       dump_stack+0xa5/0x11b
       ? show_regs_print_info+0x5/0x5
       ? kmsg_dump_rewind+0x118/0x118
       ? ceph_statfs+0x21d/0x2c0
       print_address_description+0x73/0x2b0
       ? ceph_statfs+0x21d/0x2c0
       kasan_report+0x243/0x360
       ceph_statfs+0x21d/0x2c0
       ? ceph_umount_begin+0x80/0x80
       ? kmem_cache_alloc+0xdf/0x1a0
       statfs_by_dentry+0x79/0xb0
       vfs_statfs+0x28/0x110
       user_statfs+0x8c/0xe0
       ? vfs_statfs+0x110/0x110
       ? __fdget_raw+0x10/0x10
       __se_sys_statfs+0x5d/0xa0
       ? user_statfs+0xe0/0xe0
       ? mutex_unlock+0x1d/0x40
       ? __x64_sys_statfs+0x20/0x30
       do_syscall_64+0xee/0x290
       ? syscall_return_slowpath+0x1c0/0x1c0
       ? page_fault+0x1e/0x30
       ? syscall_return_slowpath+0x13c/0x1c0
       ? prepare_exit_to_usermode+0xdb/0x140
       ? syscall_trace_enter+0x330/0x330
       ? __put_user_4+0x1c/0x30
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      Allocated by task 130:
       __kmalloc+0x124/0x210
       ceph_monmap_decode+0x1c1/0x400
       dispatch+0x113/0xd20
       ceph_con_workfn+0xa7e/0x44e0
       process_one_work+0x5f0/0xa30
       worker_thread+0x184/0xa70
       kthread+0x1a0/0x1c0
       ret_from_fork+0x35/0x40
    
      Freed by task 130:
       kfree+0xb8/0x210
       dispatch+0x15a/0xd20
       ceph_con_workfn+0xa7e/0x44e0
       process_one_work+0x5f0/0xa30
       worker_thread+0x184/0xa70
       kthread+0x1a0/0x1c0
       ret_from_fork+0x35/0x40
    
    Signed-off-by: Luis Henriques <lhenriques@suse.com>
    Reviewed-by: "Yan, Zheng" <zyan@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 026a8e91bfbd4e28f192038e08e022d2d40f3f2a
Author: Chengguang Xu <cgxu519@gmx.com>
Date:   Wed May 30 10:13:11 2018 +0800

    ceph: fix alignment of rasize
    
    [ Upstream commit c36ed50de2ad1649ce0369a4a6fc2cc11b20dfb7 ]
    
    On currently logic:
    when I specify rasize=0~1 then it will be 4096.
    when I specify rasize=2~4097 then it will be 8192.
    
    Make it the same as rsize & wsize.
    
    Signed-off-by: Chengguang Xu <cgxu519@gmx.com>
    Reviewed-by: "Yan, Zheng" <zyan@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c4f26b05f460cedd2c9131d7c2fcac80df1ff85
Author: Wang YanQing <udknight@gmail.com>
Date:   Fri May 11 10:52:17 2018 +0800

    bpf, arm32: fix inconsistent naming about emit_a32_lsr_{r64,i64}
    
    [ Upstream commit 68565a1af9f7012e6f2fe2bdd612f67d2d830c28 ]
    
    The names for BPF_ALU64 | BPF_ARSH are emit_a32_arsh_*,
    the names for BPF_ALU64 | BPF_LSH are emit_a32_lsh_*, but
    the names for BPF_ALU64 | BPF_RSH are emit_a32_lsr_*.
    
    For consistence reason, let's rename emit_a32_lsr_* to
    emit_a32_rsh_*.
    
    This patch also corrects a wrong comment.
    
    Fixes: 39c13c204bb1 ("arm: eBPF JIT compiler")
    Signed-off-by: Wang YanQing <udknight@gmail.com>
    Cc: Shubham Bansal <illusionist.neo@gmail.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux@armlinux.org.uk
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60f778f897f87cb9925af1a2354f502260b515ea
Author: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
Date:   Wed May 30 16:03:50 2018 +0900

    printk: drop in_nmi check from printk_safe_flush_on_panic()
    
    [ Upstream commit 554755be08fba31c74f66b82a485e5513205af84 ]
    
    Drop the in_nmi() check from printk_safe_flush_on_panic()
    and attempt to re-init (IOW unlock) locked logbuf spinlock
    from panic CPU regardless of its context.
    
    Otherwise, theoretically, we can deadlock on logbuf trying to flush
    per-CPU buffers:
    
      a) Panic CPU is running in non-NMI context
      b) Panic CPU sends out shutdown IPI via reboot vector
      c) Panic CPU fails to stop all remote CPUs
      d) Panic CPU sends out shutdown IPI via NMI vector
         One of the CPUs that we bring down via NMI vector can hold
         logbuf spin lock (theoretically).
    
    Link: http://lkml.kernel.org/r/20180530070350.10131-1-sergey.senozhatsky@gmail.com
    To: Steven Rostedt <rostedt@goodmis.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0363c8f4dd526d7b72e9f8f93eec4918775ba2ae
Author: Jacopo Mondi <jacopo+renesas@jmondi.org>
Date:   Wed May 30 05:13:24 2018 -0400

    media: arch: sh: migor: Fix TW9910 PDN gpio
    
    [ Upstream commit 2b787b66bcb03ec3bd97e950464e0452f459e2ca ]
    
    The TW9910 PDN gpio (power down) is listed as active high in the chip
    manual. It turns out it is actually active low as when set to physical
    level 0 it actually turns the video decoder power off.
    
    Without this patch applied:
    tw9910 0-0045: Product ID error 1f:2
    
    With this patch applied:
    tw9910 0-0045: tw9910 Product ID b:0
    
    Fixes: commit "186c446f4b840bd77b79d3dc951ca436cb8abe79"
    
    Signed-off-by: Jacopo Mondi <jacopo+renesas@jmondi.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 941829b7d5fbc989285bc249a5d5cb4ad8084db7
Author: Marco Felsch <m.felsch@pengutronix.de>
Date:   Mon May 28 08:45:45 2018 +0200

    watchdog: da9063: Fix updating timeout value
    
    [ Upstream commit 44ee54aabfdb3b35866ed909bde3ab01e9679385 ]
    
    The DA9063 watchdog has only one register field to store the timeout value
    and to enable the watchdog. The watchdog gets enabled if the value is
    not zero. There is no issue if the watchdog is already running but it
    leads into problems if the watchdog is disabled.
    
    If the watchdog is disabled and only the timeout value should be prepared
    the watchdog gets enabled too. Add a check to get the current watchdog
    state and update the watchdog timeout value on hw-side only if the
    watchdog is already active.
    
    Fixes: 5e9c16e37608 ("watchdog: Add DA9063 PMIC watchdog driver.")
    Signed-off-by: Marco Felsch <m.felsch@pengutronix.de>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90ec36a180921218faedb69bb0731bce9d4b82d5
Author: Laurentiu Tudor <laurentiu.tudor@nxp.com>
Date:   Tue Jun 5 15:27:27 2018 +0300

    irqchip/ls-scfg-msi: Map MSIs in the iommu
    
    [ Upstream commit 0cdd431c337e99177e68597f3de34bedd3a20a74 ]
    
    Add the required iommu_dma_map_msi_msg() when composing the MSI message,
    otherwise the interrupts will not work.
    
    Signed-off-by: Laurentiu Tudor <laurentiu.tudor@nxp.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: jason@lakedaemon.net
    Cc: marc.zyngier@arm.com
    Cc: zhiqiang.hou@nxp.com
    Cc: minghuan.lian@nxp.com
    Link: https://lkml.kernel.org/r/20180605122727.12831-1-laurentiu.tudor@nxp.com
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70eabe726131521b382da45c97f1454854a6e0ac
Author: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
Date:   Thu May 31 18:45:21 2018 +0200

    netfilter: ipset: List timing out entries with "timeout 1" instead of zero
    
    [ Upstream commit bd975e691486ba52790ba23cc9b4fecab7bc0d31 ]
    
    When listing sets with timeout support, there's a probability that
    just timing out entries with "0" timeout value is listed/saved.
    However when restoring the saved list, the zero timeout value means
    permanent elelements.
    
    The new behaviour is that timing out entries are listed with "timeout 1"
    instead of zero.
    
    Fixes netfilter bugzilla #1258.
    
    Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit deab8c62392794e47f2dd2f8ccf25bb86f3f9661
Author: Florent Fourcot <florent.fourcot@wifirst.fr>
Date:   Mon Jun 4 16:51:19 2018 +0200

    netfilter: ipset: forbid family for hash:mac sets
    
    [ Upstream commit cbdebe481a14b42c45aa9f4ceb5ff19b55de2c57 ]
    
    Userspace `ipset` command forbids family option for hash:mac type:
    
    ipset create test hash:mac family inet4
    ipset v6.30: Unknown argument: `family'
    
    However, this check is not done in kernel itself. When someone use
    external netlink applications (pyroute2 python library for example), one
    can create hash:mac with invalid family and inconsistant results from
    userspace (`ipset` command cannot read set content anymore).
    
    This patch enforce the logic in kernel, and forbids insertion of
    hash:mac with a family set.
    
    Since IP_SET_PROTO_UNDEF is defined only for hash:mac, this patch has no
    impact on other hash:* sets
    
    Signed-off-by: Florent Fourcot <florent.fourcot@wifirst.fr>
    Signed-off-by: Victorien Molle <victorien.molle@wifirst.fr>
    Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccd6c8836437f87c42bd4e1c440ecca3368d0eaa
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Tue Jun 5 14:14:16 2018 +0200

    perf tools: Fix pmu events parsing rule
    
    [ Upstream commit ceac7b79df7bd67ef9aaf464b0179a2686aff4ee ]
    
    Currently all the event parsing fails end up
    in the event_pmu rule, and display misleading
    help like:
    
      $ perf stat -e inst kill
      event syntax error: 'inst'
                           \___ Cannot find PMU `inst'. Missing kernel support?
      ...
    
    The reason is that the event_pmu is too strong
    and match also single string. Changing it to
    force the '/' separators to be part of the rule,
    and getting the proper error now:
    
      $ perf stat -e inst kill
      event syntax error: 'inst'
                           \___ parser error
      Run 'perf list' for a list of valid events
      ...
    
    Suggested-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20180605121416.31645-1-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abca35ca189ca15498d3b8f65847ca579c8ef8fd
Author: Xi Wang <wangxi11@huawei.com>
Date:   Wed Jun 6 14:07:51 2018 +0100

    net: hns3: Fix for VF mailbox cannot receiving PF response
    
    [ Upstream commit 1819e40908ee76c7219287224c22c772556c927e ]
    
    When the VF frequently switches the CMDQ interrupt, if the CMDQ_SRC is not
    cleared, the VF will not receive the new PF response after the interrupt
    is re-enabled, the corresponding log is as follows:
    
    [  317.482222] hns3 0000:00:03.0: VF could not get mbx resp(=0) from PF
    in 500 tries
    [  317.483137] hns3 0000:00:03.0: VF request to get tqp info from PF
    failed -5
    
    This patch fixes this problem by clearing CMDQ_SRC before enabling
    interrupt and syncing pending IRQ handlers after disabling interrupt.
    
    Fixes: e2cb1dec9779 ("net: hns3: Add HNS3 VF HCL(Hardware Compatibility Layer) Support")
    Signed-off-by: Xi Wang <wangxi11@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f8a2aa1c5c782afb03e7ff38597a17e6fea303e
Author: David Howells <dhowells@redhat.com>
Date:   Wed Jun 6 14:59:14 2018 +0100

    rxrpc: Fix terminal retransmission connection ID to include the channel
    
    [ Upstream commit fb1967a69f756073362b8f19347f863f227320ad ]
    
    When retransmitting the final ACK or ABORT packet for a call, the cid field
    in the packet header is set to the connection's cid, but this is incorrect
    as it also needs to include the channel number on that connection that the
    call was made on.
    
    Fix this by OR'ing in the channel number.
    
    Note that this fixes the bug that:
    
            commit 1a025028d400b23477341aa7ec2ce55f8b39b554
            rxrpc: Fix handling of call quietly cancelled out on server
    
    works around.  I'm not intending to revert that as it will help protect
    against problems that might occur on the server.
    
    Fixes: 3136ef49a14c ("rxrpc: Delay terminal ACK transmission on a client call")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bae9208199822d02c2faea005dfdf596a9a5b9c
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Tue Jun 5 23:09:14 2018 +0200

    rtc: ensure rtc_set_alarm fails when alarms are not supported
    
    [ Upstream commit abfdff44bc38e9e2ef7929f633fb8462632299d4 ]
    
    When using RTC_ALM_SET or RTC_WKALM_SET with rtc_wkalrm.enabled not set,
    rtc_timer_enqueue() is not called and rtc_set_alarm() may succeed but the
    subsequent RTC_AIE_ON ioctl will fail. RTC_ALM_READ would also fail in that
    case.
    
    Ensure rtc_set_alarm() fails when alarms are not supported to avoid letting
    programs think the alarms are working for a particular RTC when they are
    not.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74b40894cb2db051eb5cc8f980730956836512cf
Author: Mathieu Malaterre <malat@debian.org>
Date:   Thu Jun 7 17:05:17 2018 -0700

    mm/slub.c: add __printf verification to slab_err()
    
    [ Upstream commit a38965bf941b7c2af50de09c96bc5f03e136caef ]
    
    __printf is useful to verify format and arguments.  Remove the following
    warning (with W=1):
    
      mm/slub.c:721:2: warning: function might be possible candidate for `gnu_printf' format attribute [-Wsuggest-attribute=format]
    
    Link: http://lkml.kernel.org/r/20180505200706.19986-1-malat@debian.org
    Signed-off-by: Mathieu Malaterre <malat@debian.org>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21c3a6582f1936b806e4983f98d40f2f8b4ccb8f
Author: Chintan Pandya <cpandya@codeaurora.org>
Date:   Thu Jun 7 17:06:50 2018 -0700

    mm: vmalloc: avoid racy handling of debugobjects in vunmap
    
    [ Upstream commit f3c01d2f3ade6790db67f80fef60df84424f8964 ]
    
    Currently, __vunmap flow is,
     1) Release the VM area
     2) Free the debug objects corresponding to that vm area.
    
    This leave some race window open.
     1) Release the VM area
     1.5) Some other client gets the same vm area
     1.6) This client allocates new debug objects on the same
          vm area
     2) Free the debug objects corresponding to this vm area.
    
    Here, we actually free 'other' client's debug objects.
    
    Fix this by freeing the debug objects first and then releasing the VM
    area.
    
    Link: http://lkml.kernel.org/r/1523961828-9485-2-git-send-email-cpandya@codeaurora.org
    Signed-off-by: Chintan Pandya <cpandya@codeaurora.org>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Byungchul Park <byungchul.park@lge.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Wei Yang <richard.weiyang@gmail.com>
    Cc: Yisheng Xie <xieyisheng1@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb7c923483c5d70fef41161a16c92ba6c2e35ce1
Author: Huang Ying <ying.huang@intel.com>
Date:   Thu Jun 7 17:07:39 2018 -0700

    mm: /proc/pid/pagemap: hide swap entries from unprivileged users
    
    [ Upstream commit ab6ecf247a9321e3180e021a6a60164dee53ab2e ]
    
    In commit ab676b7d6fbf ("pagemap: do not leak physical addresses to
    non-privileged userspace"), the /proc/PID/pagemap is restricted to be
    readable only by CAP_SYS_ADMIN to address some security issue.
    
    In commit 1c90308e7a77 ("pagemap: hide physical addresses from
    non-privileged users"), the restriction is relieved to make
    /proc/PID/pagemap readable, but hide the physical addresses for
    non-privileged users.
    
    But the swap entries are readable for non-privileged users too.  This
    has some security issues.  For example, for page under migrating, the
    swap entry has physical address information.  So, in this patch, the
    swap entries are hided for non-privileged users too.
    
    Link: http://lkml.kernel.org/r/20180508012745.7238-1-ying.huang@intel.com
    Fixes: 1c90308e7a77 ("pagemap: hide physical addresses from non-privileged users")
    Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
    Suggested-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Reviewed-by: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Reviewed-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Cc: Andrei Vagin <avagin@openvz.org>
    Cc: Jerome Glisse <jglisse@redhat.com>
    Cc: Daniel Colascione <dancol@google.com>
    Cc: Zi Yan <zi.yan@cs.rutgers.edu>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53e342076969ef4a92882d0f41d1037e40b3da48
Author: Aaron Lu <aaron.lu@intel.com>
Date:   Thu Jun 7 17:09:44 2018 -0700

    mem_cgroup: make sure moving_account, move_lock_task and stat_cpu in the same cacheline
    
    [ Upstream commit e81bf9793b1861d74953ef041b4f6c7faecc2dbd ]
    
    The LKP robot found a 27% will-it-scale/page_fault3 performance
    regression regarding commit e27be240df53("mm: memcg: make sure
    memory.events is uptodate when waking pollers").
    
    What the test does is:
     1 mkstemp() a 128M file on a tmpfs;
     2 start $nr_cpu processes, each to loop the following:
       2.1 mmap() this file in shared write mode;
       2.2 write 0 to this file in a PAGE_SIZE step till the end of the file;
       2.3 unmap() this file and repeat this process.
     3 After 5 minutes, check how many loops they managed to complete, the
       higher the better.
    
    The commit itself looks innocent enough as it merely changed some event
    counting mechanism and this test didn't trigger those events at all.
    Perf shows increased cycles spent on accessing root_mem_cgroup->stat_cpu
    in count_memcg_event_mm()(called by handle_mm_fault()) and in
    __mod_memcg_state() called by page_add_file_rmap().  So it's likely due
    to the changed layout of 'struct mem_cgroup' that either make stat_cpu
    falling into a constantly modifying cacheline or some hot fields stop
    being in the same cacheline.
    
    I verified this by moving memory_events[] back to where it was:
    
    : --- a/include/linux/memcontrol.h
    : +++ b/include/linux/memcontrol.h
    : @@ -205,7 +205,6 @@ struct mem_cgroup {
    :       int             oom_kill_disable;
    :
    :       /* memory.events */
    : -     atomic_long_t memory_events[MEMCG_NR_MEMORY_EVENTS];
    :       struct cgroup_file events_file;
    :
    :       /* protect arrays of thresholds */
    : @@ -238,6 +237,7 @@ struct mem_cgroup {
    :       struct mem_cgroup_stat_cpu __percpu *stat_cpu;
    :       atomic_long_t           stat[MEMCG_NR_STAT];
    :       atomic_long_t           events[NR_VM_EVENT_ITEMS];
    : +     atomic_long_t memory_events[MEMCG_NR_MEMORY_EVENTS];
    :
    :       unsigned long           socket_pressure;
    
    And performance restored.
    
    Later investigation found that as long as the following 3 fields
    moving_account, move_lock_task and stat_cpu are in the same cacheline,
    performance will be good.  To avoid future performance surprise by other
    commits changing the layout of 'struct mem_cgroup', this patch makes
    sure the 3 fields stay in the same cacheline.
    
    One concern of this approach is, moving_account and move_lock_task could
    be modified when a process changes memory cgroup while stat_cpu is a
    always read field, it might hurt to place them in the same cacheline.  I
    assume it is rare for a process to change memory cgroup so this should
    be OK.
    
    Link: https://lkml.kernel.org/r/20180528114019.GF9904@yexl-desktop
    Link: http://lkml.kernel.org/r/20180601071115.GA27302@intel.com
    Signed-off-by: Aaron Lu <aaron.lu@intel.com>
    Reported-by: kernel test robot <xiaolong.ye@intel.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Tejun Heo <tj@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54bc29b6630b0c27b5d2a1c434dec878add005db
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Thu Jun 7 17:10:34 2018 -0700

    kernel/hung_task.c: show all hung tasks before panic
    
    [ Upstream commit 401c636a0eeb0d51862fce222da1bf08e3a0ffd0 ]
    
    When we get a hung task it can often be valuable to see _all_ the hung
    tasks on the system before calling panic().
    
    Quoting from https://syzkaller.appspot.com/text?tag=CrashReport&id=5316056503549952
    ----------------------------------------
    INFO: task syz-executor0:6540 blocked for more than 120 seconds.
          Not tainted 4.16.0+ #13
    "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    syz-executor0   D23560  6540   4521 0x80000004
    Call Trace:
     context_switch kernel/sched/core.c:2848 [inline]
     __schedule+0x8fb/0x1ef0 kernel/sched/core.c:3490
     schedule+0xf5/0x430 kernel/sched/core.c:3549
     schedule_preempt_disabled+0x10/0x20 kernel/sched/core.c:3607
     __mutex_lock_common kernel/locking/mutex.c:833 [inline]
     __mutex_lock+0xb7f/0x1810 kernel/locking/mutex.c:893
     mutex_lock_nested+0x16/0x20 kernel/locking/mutex.c:908
     lo_ioctl+0x8b/0x1b70 drivers/block/loop.c:1355
     __blkdev_driver_ioctl block/ioctl.c:303 [inline]
     blkdev_ioctl+0x1759/0x1e00 block/ioctl.c:601
     ioctl_by_bdev+0xa5/0x110 fs/block_dev.c:2060
     isofs_get_last_session fs/isofs/inode.c:567 [inline]
     isofs_fill_super+0x2ba9/0x3bc0 fs/isofs/inode.c:660
     mount_bdev+0x2b7/0x370 fs/super.c:1119
     isofs_mount+0x34/0x40 fs/isofs/inode.c:1560
     mount_fs+0x66/0x2d0 fs/super.c:1222
     vfs_kern_mount.part.26+0xc6/0x4a0 fs/namespace.c:1037
     vfs_kern_mount fs/namespace.c:2514 [inline]
     do_new_mount fs/namespace.c:2517 [inline]
     do_mount+0xea4/0x2b90 fs/namespace.c:2847
     ksys_mount+0xab/0x120 fs/namespace.c:3063
     SYSC_mount fs/namespace.c:3077 [inline]
     SyS_mount+0x39/0x50 fs/namespace.c:3074
     do_syscall_64+0x281/0x940 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    (...snipped...)
    Showing all locks held in the system:
    (...snipped...)
    2 locks held by syz-executor0/6540:
     #0: 00000000566d4c39 (&type->s_umount_key#49/1){+.+.}, at: alloc_super fs/super.c:211 [inline]
     #0: 00000000566d4c39 (&type->s_umount_key#49/1){+.+.}, at: sget_userns+0x3b2/0xe60 fs/super.c:502 /* down_write_nested(&s->s_umount, SINGLE_DEPTH_NESTING); */
     #1: 0000000043ca8836 (&lo->lo_ctl_mutex/1){+.+.}, at: lo_ioctl+0x8b/0x1b70 drivers/block/loop.c:1355 /* mutex_lock_nested(&lo->lo_ctl_mutex, 1); */
    (...snipped...)
    3 locks held by syz-executor7/6541:
     #0: 0000000043ca8836 (&lo->lo_ctl_mutex/1){+.+.}, at: lo_ioctl+0x8b/0x1b70 drivers/block/loop.c:1355 /* mutex_lock_nested(&lo->lo_ctl_mutex, 1); */
     #1: 000000007bf3d3f9 (&bdev->bd_mutex){+.+.}, at: blkdev_reread_part+0x1e/0x40 block/ioctl.c:192
     #2: 00000000566d4c39 (&type->s_umount_key#50){.+.+}, at: __get_super.part.10+0x1d3/0x280 fs/super.c:663 /* down_read(&sb->s_umount); */
    ----------------------------------------
    
    When reporting an AB-BA deadlock like shown above, it would be nice if
    trace of PID=6541 is printed as well as trace of PID=6540 before calling
    panic().
    
    Showing hung tasks up to /proc/sys/kernel/hung_task_warnings could delay
    calling panic() but normally there should not be so many hung tasks.
    
    Link: http://lkml.kernel.org/r/201804050705.BHE57833.HVFOFtSOMQJFOL@I-love.SAKURA.ne.jp
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Acked-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: Vegard Nossum <vegard.nossum@oracle.com>
    Cc: Mandeep Singh Baines <msb@chromium.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e446d115741314cc3cb99ac11782868004dc61b
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Fri May 11 09:05:02 2018 -0600

    vfio/type1: Fix task tracking for QEMU vCPU hotplug
    
    [ Upstream commit 48d8476b41eed63567dd2f0ad125c895b9ac648a ]
    
    MAP_DMA ioctls might be called from various threads within a process,
    for example when using QEMU, the vCPU threads are often generating
    these calls and we therefore take a reference to that vCPU task.
    However, QEMU also supports vCPU hotplug on some machines and the task
    that called MAP_DMA may have exited by the time UNMAP_DMA is called,
    resulting in the mm_struct pointer being NULL and thus a failure to
    match against the existing mapping.
    
    To resolve this, we instead take a reference to the thread
    group_leader, which has the same mm_struct and resource limits, but
    is less likely exit, at least in the QEMU case.  A difficulty here is
    guaranteeing that the capabilities of the group_leader match that of
    the calling thread, which we resolve by tracking CAP_IPC_LOCK at the
    time of calling rather than at an indeterminate time in the future.
    Potentially this also results in better efficiency as this is now
    recorded once per MAP_DMA ioctl.
    
    Reported-by: Xu Yandong <xuyandong2@huawei.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85d742bcaf59bfcc24c41b2f63cc9179c5a5bae2
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Tue May 15 13:53:55 2018 -0600

    vfio/mdev: Check globally for duplicate devices
    
    [ Upstream commit 002fe996f67f4f46d8917b14cfb6e4313c20685a ]
    
    When we create an mdev device, we check for duplicates against the
    parent device and return -EEXIST if found, but the mdev device
    namespace is global since we'll link all devices from the bus.  We do
    catch this later in sysfs_do_create_link_sd() to return -EEXIST, but
    with it comes a kernel warning and stack trace for trying to create
    duplicate sysfs links, which makes it an undesirable response.
    
    Therefore we should really be looking for duplicates across all mdev
    parent devices, or as implemented here, against our mdev device list.
    Using mdev_list to prevent duplicates means that we can remove
    mdev_parent.lock, but in order not to serialize mdev device creation
    and removal globally, we add mdev_device.active which allows UUIDs to
    be reserved such that we can drop the mdev_list_lock before the mdev
    device is fully in place.
    
    Two behavioral notes; first, mdev_parent.lock had the side-effect of
    serializing mdev create and remove ops per parent device.  This was
    an implementation detail, not an intentional guarantee provided to
    the mdev vendor drivers.  Vendor drivers can trivially provide this
    serialization internally if necessary.  Second, review comments note
    the new -EAGAIN behavior when the device, and in particular the remove
    attribute, becomes visible in sysfs.  If a remove is triggered prior
    to completion of mdev_device_create() the user will see a -EAGAIN
    error.  While the errno is different, receiving an error during this
    period is not, the previous implementation returned -ENODEV for the
    same condition.  Furthermore, the consistency to the user is improved
    in the case where mdev_device_remove_ops() returns error.  Previously
    concurrent calls to mdev_device_remove() could see the device
    disappear with -ENODEV and return in the case of error.  Now a user
    would see -EAGAIN while the device is in this transitory state.
    
    Reviewed-by: Kirti Wankhede <kwankhede@nvidia.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Acked-by: Halil Pasic <pasic@linux.ibm.com>
    Acked-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33329cb2641c3abe70c72d4e4235466f5e5e56db
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Apr 11 11:15:48 2018 +0200

    vfio: platform: Fix reset module leak in error path
    
    [ Upstream commit 28a68387888997e8a7fa57940ea5d55f2e16b594 ]
    
    If the IOMMU group setup fails, the reset module is not released.
    
    Fixes: b5add544d677d363 ("vfio, platform: make reset driver a requirement by default")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Acked-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5da8ae0ed5e7f1ecfda086d52a61c405fdd3345
Author: Scott Mayhew <smayhew@redhat.com>
Date:   Fri Jun 8 16:31:46 2018 -0400

    nfsd: fix potential use-after-free in nfsd4_decode_getdeviceinfo
    
    [ Upstream commit 3171822fdcdd6e6d536047c425af6dc7a92dc585 ]
    
    When running a fuzz tester against a KASAN-enabled kernel, the following
    splat periodically occurs.
    
    The problem occurs when the test sends a GETDEVICEINFO request with a
    malformed xdr array (size but no data) for gdia_notify_types and the
    array size is > 0x3fffffff, which results in an overflow in the value of
    nbytes which is passed to read_buf().
    
    If the array size is 0x40000000, 0x80000000, or 0xc0000000, then after
    the overflow occurs, the value of nbytes 0, and when that happens the
    pointer returned by read_buf() points to the end of the xdr data (i.e.
    argp->end) when really it should be returning NULL.
    
    Fix this by returning NFS4ERR_BAD_XDR if the array size is > 1000 (this
    value is arbitrary, but it's the same threshold used by
    nfsd4_decode_bitmap()... in could really be any value >= 1 since it's
    expected to get at most a single bitmap in gdia_notify_types).
    
    [  119.256854] ==================================================================
    [  119.257611] BUG: KASAN: use-after-free in nfsd4_decode_getdeviceinfo+0x5a4/0x5b0 [nfsd]
    [  119.258422] Read of size 4 at addr ffff880113ada000 by task nfsd/538
    
    [  119.259146] CPU: 0 PID: 538 Comm: nfsd Not tainted 4.17.0+ #1
    [  119.259662] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.9.3-1.fc25 04/01/2014
    [  119.261202] Call Trace:
    [  119.262265]  dump_stack+0x71/0xab
    [  119.263371]  print_address_description+0x6a/0x270
    [  119.264609]  kasan_report+0x258/0x380
    [  119.265854]  ? nfsd4_decode_getdeviceinfo+0x5a4/0x5b0 [nfsd]
    [  119.267291]  nfsd4_decode_getdeviceinfo+0x5a4/0x5b0 [nfsd]
    [  119.268549]  ? nfs4svc_decode_compoundargs+0xa5b/0x13c0 [nfsd]
    [  119.269873]  ? nfsd4_decode_sequence+0x490/0x490 [nfsd]
    [  119.271095]  nfs4svc_decode_compoundargs+0xa5b/0x13c0 [nfsd]
    [  119.272393]  ? nfsd4_release_compoundargs+0x1b0/0x1b0 [nfsd]
    [  119.273658]  nfsd_dispatch+0x183/0x850 [nfsd]
    [  119.274918]  svc_process+0x161c/0x31a0 [sunrpc]
    [  119.276172]  ? svc_printk+0x190/0x190 [sunrpc]
    [  119.277386]  ? svc_xprt_release+0x451/0x680 [sunrpc]
    [  119.278622]  nfsd+0x2b9/0x430 [nfsd]
    [  119.279771]  ? nfsd_destroy+0x1c0/0x1c0 [nfsd]
    [  119.281157]  kthread+0x2db/0x390
    [  119.282347]  ? kthread_create_worker_on_cpu+0xc0/0xc0
    [  119.283756]  ret_from_fork+0x35/0x40
    
    [  119.286041] Allocated by task 436:
    [  119.287525]  kasan_kmalloc+0xa0/0xd0
    [  119.288685]  kmem_cache_alloc+0xe9/0x1f0
    [  119.289900]  get_empty_filp+0x7b/0x410
    [  119.291037]  path_openat+0xca/0x4220
    [  119.292242]  do_filp_open+0x182/0x280
    [  119.293411]  do_sys_open+0x216/0x360
    [  119.294555]  do_syscall_64+0xa0/0x2f0
    [  119.295721]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    [  119.298068] Freed by task 436:
    [  119.299271]  __kasan_slab_free+0x130/0x180
    [  119.300557]  kmem_cache_free+0x78/0x210
    [  119.301823]  rcu_process_callbacks+0x35b/0xbd0
    [  119.303162]  __do_softirq+0x192/0x5ea
    
    [  119.305443] The buggy address belongs to the object at ffff880113ada000
                    which belongs to the cache filp of size 256
    [  119.308556] The buggy address is located 0 bytes inside of
                    256-byte region [ffff880113ada000, ffff880113ada100)
    [  119.311376] The buggy address belongs to the page:
    [  119.312728] page:ffffea00044eb680 count:1 mapcount:0 mapping:0000000000000000 index:0xffff880113ada780
    [  119.314428] flags: 0x17ffe000000100(slab)
    [  119.315740] raw: 0017ffe000000100 0000000000000000 ffff880113ada780 00000001000c0001
    [  119.317379] raw: ffffea0004553c60 ffffea00045c11e0 ffff88011b167e00 0000000000000000
    [  119.319050] page dumped because: kasan: bad access detected
    
    [  119.321652] Memory state around the buggy address:
    [  119.322993]  ffff880113ad9f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [  119.324515]  ffff880113ad9f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [  119.326087] >ffff880113ada000: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [  119.327547]                    ^
    [  119.328730]  ffff880113ada080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [  119.330218]  ffff880113ada100: fc fc fc fc fc fc fc fc fb fb fb fb fb fb fb fb
    [  119.331740] ==================================================================
    
    Signed-off-by: Scott Mayhew <smayhew@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e8a0a341b0b18e4167d40316352248daffd6648
Author: Andrew Elble <aweits@rit.edu>
Date:   Wed Apr 18 17:04:37 2018 -0400

    nfsd: fix error handling in nfs4_set_delegation()
    
    [ Upstream commit 692ad280bff3e81721ab138b9455948ab5289acf ]
    
    I noticed a memory corruption crash in nfsd in
    4.17-rc1. This patch corrects the issue.
    
    Fix to return error if the delegation couldn't be hashed or there was
    a recall in progress. Use the existing error path instead of
    destroy_delegation() for readability.
    
    Signed-off-by: Andrew Elble <aweits@rit.edu>
    Fixes: 353601e7d323c ("nfsd: create a separate lease for each delegation")
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddc109ede2129a6d070eb4b325e97b11c53b0e3e
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Sat Jun 9 19:10:31 2018 -0400

    NFSv4.1: Fix the client behaviour on NFS4ERR_SEQ_FALSE_RETRY
    
    [ Upstream commit f9312a541050007ec59eb0106273a0a10718cd83 ]
    
    If the server returns NFS4ERR_SEQ_FALSE_RETRY or NFS4ERR_RETRY_UNCACHED_REP,
    then it thinks we're trying to replay an existing request. If so, then
    let's just bump the sequence ID and retry the operation.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 533e47e4e867cacdce608e9920164c811427f465
Author: Zhouyang Jia <jiazhouyang09@gmail.com>
Date:   Mon Jun 11 16:04:06 2018 +0800

    ALSA: fm801: add error handling for snd_ctl_add
    
    [ Upstream commit ef1ffbe7889e99f5b5cccb41c89e5c94f50f3218 ]
    
    When snd_ctl_add fails, the lack of error-handling code may
    cause unexpected results.
    
    This patch adds error-handling code after calling snd_ctl_add.
    
    Signed-off-by: Zhouyang Jia <jiazhouyang09@gmail.com>
    Acked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff7d68c64601f0d4a69ad58ac7a13bfa5b60639c
Author: Zhouyang Jia <jiazhouyang09@gmail.com>
Date:   Mon Jun 11 16:18:40 2018 +0800

    ALSA: emu10k1: add error handling for snd_ctl_add
    
    [ Upstream commit 6d531e7b972cb62ded011c2dfcc2d9f72ea6c421 ]
    
    When snd_ctl_add fails, the lack of error-handling code may
    cause unexpected results.
    
    This patch adds error-handling code after calling snd_ctl_add.
    
    Signed-off-by: Zhouyang Jia <jiazhouyang09@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2bed54f0e5d3744a4e50ed657643d38fb2a744b
Author: Alexander Duyck <alexander.h.duyck@intel.com>
Date:   Mon Jun 4 11:07:24 2018 -0400

    ixgbe: Fix setting of TC configuration for macvlan case
    
    [ Upstream commit 646bb57ce86e4d7b0bd9d33244450ae009411e48 ]
    
    When we were enabling macvlan interfaces we weren't correctly configuring
    things until ixgbe_setup_tc was called a second time either by tweaking the
    number of queues or increasing the macvlan count past 15.
    
    The issue came down to the fact that num_rx_pools is not populated until
    after the queues and interrupts are reinitialized.
    
    Instead of trying to set it sooner we can just move the call to setup at
    least 1 traffic class to the SR-IOV/VMDq setup function so that we just set
    it for this one case. We already had a spot that was configuring the queues
    for TC 0 in the code here anyway so it makes sense to also set the number
    of TCs here as well.
    
    Fixes: 49cfbeb7a95c ("ixgbe: Fix handling of macvlan Tx offload")
    Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f9e388d1dba44cf7c43c3dd16543bbbd57119c5
Author: Olga Kornievskaia <olga.kornievskaia@gmail.com>
Date:   Mon Jun 11 15:32:06 2018 -0400

    skip LAYOUTRETURN if layout is invalid
    
    [ Upstream commit 93b7f7ad2018d2037559b1d0892417864c78b371 ]
    
    Currently, when IO to DS fails, client returns the layout and
    retries against the MDS. However, then on umounting (inode eviction)
    it returns the layout again.
    
    This is because pnfs_return_layout() was changed in
    commit d78471d32bb6 ("pnfs/blocklayout: set PNFS_LAYOUTRETURN_ON_ERROR")
    to always set NFS_LAYOUT_RETURN_REQUESTED so even if we returned
    the layout, it will be returned again. Instead, let's also check
    if we have already marked the layout invalid.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b13d05c52def309a5a9ba6400cb1ff7953053c4
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon Jun 11 12:44:55 2018 -0700

    hv_netvsc: fix network namespace issues with VF support
    
    [ Upstream commit 7bf7bb37f16a80465ee3bd7c6c966f96f5a075a6 ]
    
    When finding the parent netvsc device, the search needs to be across
    all netvsc device instances (independent of network namespace).
    
    Find parent device of VF using upper_dev_get routine which
    searches only adjacent list.
    
    Fixes: e8ff40d4bff1 ("hv_netvsc: improve VF device matching")
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    
    netns aware byref
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7197915a49212aa70b524627227071fbbd4ac458
Author: Juergen Gross <jgross@suse.com>
Date:   Tue Jun 12 08:57:53 2018 +0200

    xen/netfront: raise max number of slots in xennet_get_responses()
    
    [ Upstream commit 57f230ab04d2910a06d17d988f1c4d7586a59113 ]
    
    The max number of slots used in xennet_get_responses() is set to
    MAX_SKB_FRAGS + (rx->status <= RX_COPY_THRESHOLD).
    
    In old kernel-xen MAX_SKB_FRAGS was 18, while nowadays it is 17. This
    difference is resulting in frequent messages "too many slots" and a
    reduced network throughput for some workloads (factor 10 below that of
    a kernel-xen based guest).
    
    Replacing MAX_SKB_FRAGS by XEN_NETIF_NR_SLOTS_MIN for calculation of
    the max number of slots to use solves that problem (tests showed no
    more messages "too many slots" and throughput was as high as with the
    kernel-xen based guest system).
    
    Replace MAX_SKB_FRAGS-2 by XEN_NETIF_NR_SLOTS_MIN-1 in
    netfront_tx_slot_available() for making it clearer what is really being
    tested without actually modifying the tested value.
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c608e524f1a5424e7cfcaeab6f98a459eaa577f4
Author: Kenneth Feng <kenneth.feng@amd.com>
Date:   Tue Jun 12 15:07:37 2018 +0800

    drm/amd/powerplay: Set higher SCLK&MCLK frequency than dpm7 in OD (v2)
    
    [ Upstream commit 5c16f36f6f003b4415237acca59384a074cd8030 ]
    
    Fix the issue that SCLK&MCLK can't be set higher than dpm7 when
    OD is enabled in SMU7.
    
    v2: fix warning (Alex)
    
    Signed-off-by: Kenneth Feng <kenneth.feng@amd.com>
    Acked-by: Rex Zhu<rezhu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b120017178894e041baa51c51a197cfa82b53b45
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Thu Jun 14 15:26:34 2018 -0700

    mm: check for SIGKILL inside dup_mmap() loop
    
    [ Upstream commit 655c79bb40a0870adcd0871057d01de11625882b ]
    
    As a theoretical problem, dup_mmap() of an mm_struct with 60000+ vmas
    can loop while potentially allocating memory, with mm->mmap_sem held for
    write by current thread.  This is bad if current thread was selected as
    an OOM victim, for current thread will continue allocations using memory
    reserves while OOM reaper is unable to reclaim memory.
    
    As an actually observable problem, it is not difficult to make OOM
    reaper unable to reclaim memory if the OOM victim is blocked at
    i_mmap_lock_write() in this loop.  Unfortunately, since nobody can
    explain whether it is safe to use killable wait there, let's check for
    SIGKILL before trying to allocate memory.  Even without an OOM event,
    there is no point with continuing the loop from the beginning if current
    thread is killed.
    
    I tested with debug printk().  This patch should be safe because we
    already fail if security_vm_enough_memory_mm() or
    kmem_cache_alloc(GFP_KERNEL) fails and exit_mmap() handles it.
    
       ***** Aborting dup_mmap() due to SIGKILL *****
       ***** Aborting dup_mmap() due to SIGKILL *****
       ***** Aborting dup_mmap() due to SIGKILL *****
       ***** Aborting dup_mmap() due to SIGKILL *****
       ***** Aborting exit_mmap() due to NULL mmap *****
    
    [akpm@linux-foundation.org: add comment]
    Link: http://lkml.kernel.org/r/201804071938.CDE04681.SOFVQJFtMHOOLF@I-love.SAKURA.ne.jp
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: David Rientjes <rientjes@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1ba42ed2b0f7902008491a06a494a296a5952ed
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Thu Jun 14 15:27:34 2018 -0700

    kcov: ensure irq code sees a valid area
    
    [ Upstream commit c9484b986ef03492357fddd50afbdd02929cfa72 ]
    
    Patch series "kcov: fix unexpected faults".
    
    These patches fix a few issues where KCOV code could trigger recursive
    faults, discovered while debugging a patch enabling KCOV for arch/arm:
    
    * On CONFIG_PREEMPT kernels, there's a small race window where
      __sanitizer_cov_trace_pc() can see a bogus kcov_area.
    
    * Lazy faulting of the vmalloc area can cause mutual recursion between
      fault handling code and __sanitizer_cov_trace_pc().
    
    * During the context switch, switching the mm can cause the kcov_area to
      be transiently unmapped.
    
    These are prerequisites for enabling KCOV on arm, but the issues
    themsevles are generic -- we just happen to avoid them by chance rather
    than design on x86-64 and arm64.
    
    This patch (of 3):
    
    For kernels built with CONFIG_PREEMPT, some C code may execute before or
    after the interrupt handler, while the hardirq count is zero.  In these
    cases, in_task() can return true.
    
    A task can be interrupted in the middle of a KCOV_DISABLE ioctl while it
    resets the task's kcov data via kcov_task_init().  Instrumented code
    executed during this period will call __sanitizer_cov_trace_pc(), and as
    in_task() returns true, will inspect t->kcov_mode before trying to write
    to t->kcov_area.
    
    In kcov_init_task() we update t->kcov_{mode,area,size} with plain stores,
    which may be re-ordered, torn, etc.  Thus __sanitizer_cov_trace_pc() may
    see bogus values for any of these fields, and may attempt to write to
    memory which is not mapped.
    
    Let's avoid this by using WRITE_ONCE() to set t->kcov_mode, with a
    barrier() to ensure this is ordered before we clear t->kov_{area,size}.
    This ensures that any code execute while kcov_init_task() is preempted
    will either see valid values for t->kcov_{area,size}, or will see that
    t->kcov_mode is KCOV_MODE_DISABLED, and bail out without touching
    t->kcov_area.
    
    Link: http://lkml.kernel.org/r/20180504135535.53744-2-mark.rutland@arm.com
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d23eb94c9af1872b8aa64dfa7355aee2b5d3d532
Author: Petr Machata <petrm@mellanox.com>
Date:   Fri Jun 15 16:23:38 2018 +0300

    mlxsw: spectrum_switchdev: Fix port_vlan refcounting
    
    [ Upstream commit 9e25826ffc942e985b8595b2f1cf2065d3880514 ]
    
    Switchdev notifications for addition of SWITCHDEV_OBJ_ID_PORT_VLAN are
    distributed not only on clean addition, but also when flags on an
    existing VLAN are changed. mlxsw_sp_bridge_port_vlan_add() calls
    mlxsw_sp_port_vlan_get() to get at the port_vlan in question, which
    implicitly references the object. This then leads to discrepancies in
    reference counting when the VLAN is removed. spectrum.c warns about the
    problem when the module is removed:
    
    [13578.493090] WARNING: CPU: 0 PID: 2454 at drivers/net/ethernet/mellanox/mlxsw/spectrum.c:2973 mlxsw_sp_port_remove+0xfd/0x110 [mlxsw_spectrum]
    [...]
    [13578.627106] Call Trace:
    [13578.629617]  mlxsw_sp_fini+0x2a/0xe0 [mlxsw_spectrum]
    [13578.634748]  mlxsw_core_bus_device_unregister+0x3e/0x130 [mlxsw_core]
    [13578.641290]  mlxsw_pci_remove+0x13/0x40 [mlxsw_pci]
    [13578.646238]  pci_device_remove+0x31/0xb0
    [13578.650244]  device_release_driver_internal+0x14f/0x220
    [13578.655562]  driver_detach+0x32/0x70
    [13578.659183]  bus_remove_driver+0x47/0xa0
    [13578.663134]  pci_unregister_driver+0x1e/0x80
    [13578.667486]  mlxsw_sp_module_exit+0xc/0x3fa [mlxsw_spectrum]
    [13578.673207]  __x64_sys_delete_module+0x13b/0x1e0
    [13578.677888]  ? exit_to_usermode_loop+0x78/0x80
    [13578.682374]  do_syscall_64+0x39/0xe0
    [13578.685976]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fix by putting the port_vlan when mlxsw_sp_port_vlan_bridge_join()
    determines it's a flag-only change.
    
    Fixes: b3529af6bb0d ("spectrum: Reference count VLAN entries")
    Signed-off-by: Petr Machata <petrm@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9572453d5bb746c82c2596e6e12f043e1760adf2
Author: Clint Taylor <clinton.a.taylor@intel.com>
Date:   Tue Jul 10 13:02:05 2018 -0700

    drm/i915/glk: Add Quirk for GLK NUC HDMI port issues.
    
    commit 0ca9488193e61ec5f31a631d8147f74525629e8a upstream.
    
    On GLK NUC platforms the HDMI retiming buffer needs additional disabled
    time to correctly sync to a faster incoming signal.
    
    When measured on a scope the highspeed lines of the HDMI clock turn off
     for ~400uS during a normal resolution change. The HDMI retimer on the
     GLK NUC appears to require at least a full frame of quiet time before a
    new faster clock can be correctly sync'd. Wait 100ms due to msleep
    inaccuracies while waiting for a completed frame. Add a quirk to the
    driver for GLK boards that use ITE66317 HDMI retimers.
    
    V2: Add more devices to the quirk list
    V3: Delay increased to 100ms, check to confirm crtc type is HDMI.
    V4: crtc type check extended to include _DDI and whitespace fixes
    v5: Fix white spaces, remove the macro for delay. Revert the crtc type
        check introduced in v4.
    
    Cc: Imre Deak <imre.deak@intel.com>
    Cc: <stable@vger.kernel.org> # v4.14+
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=105887
    Signed-off-by: Clint Taylor <clinton.a.taylor@intel.com>
    Tested-by: Daniel Scheller <d.scheller.oss@gmail.com>
    Signed-off-by: Radhakrishna Sripada <radhakrishna.sripada@intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Imre Deak <imre.deak@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180710200205.1478-1-radhakrishna.sripada@intel.com
    (cherry picked from commit 90c3e2198777aaa355b6994a31a79c636c8d4306)
    Signed-off-by: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e20330ac4868f7bd43bdcf1541498f5a70b6e121
Author: Johannes Weiner <hannes@cmpxchg.org>
Date:   Mon Jul 23 10:18:23 2018 -0400

    arm64: fix vmemmap BUILD_BUG_ON() triggering on !vmemmap setups
    
    commit 7b0eb6b41a08fa1fa0d04b1c53becd62b5fbfaee upstream.
    
    Arnd reports the following arm64 randconfig build error with the PSI
    patches that add another page flag:
    
      /git/arm-soc/arch/arm64/mm/init.c: In function 'mem_init':
      /git/arm-soc/include/linux/compiler.h:357:38: error: call to
      '__compiletime_assert_618' declared with attribute error: BUILD_BUG_ON
      failed: sizeof(struct page) > (1 << STRUCT_PAGE_MAX_SHIFT)
    
    The additional page flag causes other information stored in
    page->flags to get bumped into their own struct page member:
    
      #if SECTIONS_WIDTH+ZONES_WIDTH+NODES_SHIFT+LAST_CPUPID_SHIFT <=
      BITS_PER_LONG - NR_PAGEFLAGS
      #define LAST_CPUPID_WIDTH LAST_CPUPID_SHIFT
      #else
      #define LAST_CPUPID_WIDTH 0
      #endif
    
      #if defined(CONFIG_NUMA_BALANCING) && LAST_CPUPID_WIDTH == 0
      #define LAST_CPUPID_NOT_IN_PAGE_FLAGS
      #endif
    
    which in turn causes the struct page size to exceed the size set in
    STRUCT_PAGE_MAX_SHIFT. This value is an an estimate used to size the
    VMEMMAP page array according to address space and struct page size.
    
    However, the check is performed - and triggers here - on a !VMEMMAP
    config, which consumes an additional 22 page bits for the sparse
    section id. When VMEMMAP is enabled, those bits are returned, cpupid
    doesn't need its own member, and the page passes the VMEMMAP check.
    
    Restrict that check to the situation it was meant to check: that we
    are sizing the VMEMMAP page array correctly.
    
    Says Arnd:
    
        Further experiments show that the build error already existed before,
        but was only triggered with larger values of CONFIG_NR_CPU and/or
        CONFIG_NODES_SHIFT that might be used in actual configurations but
        not in randconfig builds.
    
        With longer CPU and node masks, I could recreate the problem with
        kernels as old as linux-4.7 when arm64 NUMA support got added.
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Tested-by: Arnd Bergmann <arnd@arndb.de>
    Cc: stable@vger.kernel.org
    Fixes: 1a2db300348b ("arm64, numa: Add NUMA support for arm64 platforms.")
    Fixes: 3e1907d5bf5a ("arm64: mm: move vmemmap region right below the linear region")
    Signed-off-by: Johannes Weiner <hannes@cmpxchg.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 211b2bcdeb98e3feb11d448e431c4a6dae6b7681
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Wed Jul 25 22:28:56 2018 -0400

    tracing: Quiet gcc warning about maybe unused link variable
    
    commit 2519c1bbe38d7acacc9aacba303ca6f97482ed53 upstream.
    
    Commit 57ea2a34adf4 ("tracing/kprobes: Fix trace_probe flags on
    enable_trace_kprobe() failure") added an if statement that depends on another
    if statement that gcc doesn't see will initialize the "link" variable and
    gives the warning:
    
     "warning: 'link' may be used uninitialized in this function"
    
    It is really a false positive, but to quiet the warning, and also to make
    sure that it never actually is used uninitialized, initialize the "link"
    variable to NULL and add an if (!WARN_ON_ONCE(!link)) where the compiler
    thinks it could be used uninitialized.
    
    Cc: stable@vger.kernel.org
    Fixes: 57ea2a34adf4 ("tracing/kprobes: Fix trace_probe flags on enable_trace_kprobe() failure")
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b4ac7c36c9ca3eacbe86141188e892235cbd6d8
Author: Artem Savkov <asavkov@redhat.com>
Date:   Wed Jul 25 16:20:38 2018 +0200

    tracing/kprobes: Fix trace_probe flags on enable_trace_kprobe() failure
    
    commit 57ea2a34adf40f3a6e88409aafcf803b8945619a upstream.
    
    If enable_trace_kprobe fails to enable the probe in enable_k(ret)probe
    it returns an error, but does not unset the tp flags it set previously.
    This results in a probe being considered enabled and failures like being
    unable to remove the probe through kprobe_events file since probes_open()
    expects every probe to be disabled.
    
    Link: http://lkml.kernel.org/r/20180725102826.8300-1-asavkov@redhat.com
    Link: http://lkml.kernel.org/r/20180725142038.4765-1-asavkov@redhat.com
    
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: stable@vger.kernel.org
    Fixes: 41a7dd420c57 ("tracing/kprobes: Support ftrace_event_file base multibuffer")
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reviewed-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Artem Savkov <asavkov@redhat.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b750e294bf030ce36806e0ae381f26ded6d08550
Author: Snild Dolkow <snild@sony.com>
Date:   Thu Jul 26 09:15:39 2018 +0200

    kthread, tracing: Don't expose half-written comm when creating kthreads
    
    commit 3e536e222f2930534c252c1cc7ae799c725c5ff9 upstream.
    
    There is a window for racing when printing directly to task->comm,
    allowing other threads to see a non-terminated string. The vsnprintf
    function fills the buffer, counts the truncated chars, then finally
    writes the \0 at the end.
    
            creator                     other
            vsnprintf:
              fill (not terminated)
              count the rest            trace_sched_waking(p):
              ...                         memcpy(comm, p->comm, TASK_COMM_LEN)
              write \0
    
    The consequences depend on how 'other' uses the string. In our case,
    it was copied into the tracing system's saved cmdlines, a buffer of
    adjacent TASK_COMM_LEN-byte buffers (note the 'n' where 0 should be):
    
            crash-arm64> x/1024s savedcmd->saved_cmdlines | grep 'evenk'
            0xffffffd5b3818640:     "irq/497-pwr_evenkworker/u16:12"
    
    ...and a strcpy out of there would cause stack corruption:
    
            [224761.522292] Kernel panic - not syncing: stack-protector:
                Kernel stack is corrupted in: ffffff9bf9783c78
    
            crash-arm64> kbt | grep 'comm\|trace_print_context'
            #6  0xffffff9bf9783c78 in trace_print_context+0x18c(+396)
                  comm (char [16]) =  "irq/497-pwr_even"
    
            crash-arm64> rd 0xffffffd4d0e17d14 8
            ffffffd4d0e17d14:  2f71726900000000 5f7277702d373934   ....irq/497-pwr_
            ffffffd4d0e17d24:  726f776b6e657665 3a3631752f72656b   evenkworker/u16:
            ffffffd4d0e17d34:  f9780248ff003231 cede60e0ffffff9b   12..H.x......`..
            ffffffd4d0e17d44:  cede60c8ffffffd4 00000fffffffffd4   .....`..........
    
    The workaround in e09e28671 (use strlcpy in __trace_find_cmdline) was
    likely needed because of this same bug.
    
    Solved by vsnprintf:ing to a local buffer, then using set_task_comm().
    This way, there won't be a window where comm is not terminated.
    
    Link: http://lkml.kernel.org/r/20180726071539.188015-1-snild@sony.com
    
    Cc: stable@vger.kernel.org
    Fixes: bc0c38d139ec7 ("ftrace: latency tracer infrastructure")
    Reviewed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Snild Dolkow <snild@sony.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fad75b37e8d3c0287fc18492a86c4b16cc180aa
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Wed Jul 25 16:02:06 2018 -0400

    tracing: Fix possible double free in event_enable_trigger_func()
    
    commit 15cc78644d0075e76d59476a4467e7143860f660 upstream.
    
    There was a case that triggered a double free in event_trigger_callback()
    due to the called reg() function freeing the trigger_data and then it
    getting freed again by the error return by the caller. The solution there
    was to up the trigger_data ref count.
    
    Code inspection found that event_enable_trigger_func() has the same issue,
    but is not as easy to trigger (requires harder to trigger failures). It
    needs to be solved slightly different as it needs more to clean up when the
    reg() function fails.
    
    Link: http://lkml.kernel.org/r/20180725124008.7008e586@gandalf.local.home
    
    Cc: stable@vger.kernel.org
    Fixes: 7862ad1846e99 ("tracing: Add 'enable_event' and 'disable_event' event trigger commands")
    Reivewed-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc6e18d3dead843faf4f301f3bc27029621e1a2b
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Tue Jul 24 19:13:31 2018 -0400

    tracing: Fix double free of event_trigger_data
    
    commit 1863c387259b629e4ebfb255495f67cd06aa229b upstream.
    
    Running the following:
    
     # cd /sys/kernel/debug/tracing
     # echo 500000 > buffer_size_kb
    [ Or some other number that takes up most of memory ]
     # echo snapshot > events/sched/sched_switch/trigger
    
    Triggers the following bug:
    
     ------------[ cut here ]------------
     kernel BUG at mm/slub.c:296!
     invalid opcode: 0000 [#1] SMP DEBUG_PAGEALLOC PTI
     CPU: 6 PID: 6878 Comm: bash Not tainted 4.18.0-rc6-test+ #1066
     Hardware name: Hewlett-Packard HP Compaq Pro 6300 SFF/339A, BIOS K01 v03.03 07/14/2016
     RIP: 0010:kfree+0x16c/0x180
     Code: 05 41 0f b6 72 51 5b 5d 41 5c 4c 89 d7 e9 ac b3 f8 ff 48 89 d9 48 89 da 41 b8 01 00 00 00 5b 5d 41 5c 4c 89 d6 e9 f4 f3 ff ff <0f> 0b 0f 0b 48 8b 3d d9 d8 f9 00 e9 c1 fe ff ff 0f 1f 40 00 0f 1f
     RSP: 0018:ffffb654436d3d88 EFLAGS: 00010246
     RAX: ffff91a9d50f3d80 RBX: ffff91a9d50f3d80 RCX: ffff91a9d50f3d80
     RDX: 00000000000006a4 RSI: ffff91a9de5a60e0 RDI: ffff91a9d9803500
     RBP: ffffffff8d267c80 R08: 00000000000260e0 R09: ffffffff8c1a56be
     R10: fffff0d404543cc0 R11: 0000000000000389 R12: ffffffff8c1a56be
     R13: ffff91a9d9930e18 R14: ffff91a98c0c2890 R15: ffffffff8d267d00
     FS:  00007f363ea64700(0000) GS:ffff91a9de580000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 000055c1cacc8e10 CR3: 00000000d9b46003 CR4: 00000000001606e0
     Call Trace:
      event_trigger_callback+0xee/0x1d0
      event_trigger_write+0xfc/0x1a0
      __vfs_write+0x33/0x190
      ? handle_mm_fault+0x115/0x230
      ? _cond_resched+0x16/0x40
      vfs_write+0xb0/0x190
      ksys_write+0x52/0xc0
      do_syscall_64+0x5a/0x160
      entry_SYSCALL_64_after_hwframe+0x49/0xbe
     RIP: 0033:0x7f363e16ab50
     Code: 73 01 c3 48 8b 0d 38 83 2c 00 f7 d8 64 89 01 48 83 c8 ff c3 66 0f 1f 44 00 00 83 3d 79 db 2c 00 00 75 10 b8 01 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 31 c3 48 83 ec 08 e8 1e e3 01 00 48 89 04 24
     RSP: 002b:00007fff9a4c6378 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
     RAX: ffffffffffffffda RBX: 0000000000000009 RCX: 00007f363e16ab50
     RDX: 0000000000000009 RSI: 000055c1cacc8e10 RDI: 0000000000000001
     RBP: 000055c1cacc8e10 R08: 00007f363e435740 R09: 00007f363ea64700
     R10: 0000000000000073 R11: 0000000000000246 R12: 0000000000000009
     R13: 0000000000000001 R14: 00007f363e4345e0 R15: 00007f363e4303c0
     Modules linked in: ip6table_filter ip6_tables snd_hda_codec_hdmi snd_hda_codec_realtek snd_hda_codec_generic snd_hda_intel snd_hda_codec snd_hwdep snd_hda_core snd_seq snd_seq_device i915 snd_pcm snd_timer i2c_i801 snd soundcore i2c_algo_bit drm_kms_helper
    86_pkg_temp_thermal video kvm_intel kvm irqbypass wmi e1000e
     ---[ end trace d301afa879ddfa25 ]---
    
    The cause is because the register_snapshot_trigger() call failed to
    allocate the snapshot buffer, and then called unregister_trigger()
    which freed the data that was passed to it. Then on return to the
    function that called register_snapshot_trigger(), as it sees it
    failed to register, it frees the trigger_data again and causes
    a double free.
    
    By calling event_trigger_init() on the trigger_data (which only ups
    the reference counter for it), and then event_trigger_free() afterward,
    the trigger_data would not get freed by the registering trigger function
    as it would only up and lower the ref count for it. If the register
    trigger function fails, then the event_trigger_free() called after it
    will free the trigger data normally.
    
    Link: http://lkml.kernel.org/r/20180724191331.738eb819@gandalf.local.home
    
    Cc: stable@vger.kerne.org
    Fixes: 93e31ffbf417 ("tracing: Add 'snapshot' event trigger command")
    Reported-by: Masami Hiramatsu <mhiramat@kernel.org>
    Reviewed-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b591ff16962bd8254b920993e8f3172652b2abf3
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Jul 26 16:37:08 2018 -0700

    delayacct: fix crash in delayacct_blkio_end() after delayacct init failure
    
    commit b512719f771a82180211c9a315b8a7f628832b3d upstream.
    
    While forking, if delayacct init fails due to memory shortage, it
    continues expecting all delayacct users to check task->delays pointer
    against NULL before dereferencing it, which all of them used to do.
    
    Commit c96f5471ce7d ("delayacct: Account blkio completion on the correct
    task"), while updating delayacct_blkio_end() to take the target task
    instead of always using %current, made the function test NULL on
    %current->delays and then continue to operated on @p->delays.  If
    %current succeeded init while @p didn't, it leads to the following
    crash.
    
     BUG: unable to handle kernel NULL pointer dereference at 0000000000000004
     IP: __delayacct_blkio_end+0xc/0x40
     PGD 8000001fd07e1067 P4D 8000001fd07e1067 PUD 1fcffbb067 PMD 0
     Oops: 0000 [#1] SMP PTI
     CPU: 4 PID: 25774 Comm: QIOThread0 Not tainted 4.16.0-9_fbk1_rc2_1180_g6b593215b4d7 #9
     RIP: 0010:__delayacct_blkio_end+0xc/0x40
     Call Trace:
      try_to_wake_up+0x2c0/0x600
      autoremove_wake_function+0xe/0x30
      __wake_up_common+0x74/0x120
      wake_up_page_bit+0x9c/0xe0
      mpage_end_io+0x27/0x70
      blk_update_request+0x78/0x2c0
      scsi_end_request+0x2c/0x1e0
      scsi_io_completion+0x20b/0x5f0
      blk_mq_complete_request+0xa2/0x100
      ata_scsi_qc_complete+0x79/0x400
      ata_qc_complete_multiple+0x86/0xd0
      ahci_handle_port_interrupt+0xc9/0x5c0
      ahci_handle_port_intr+0x54/0xb0
      ahci_single_level_irq_intr+0x3b/0x60
      __handle_irq_event_percpu+0x43/0x190
      handle_irq_event_percpu+0x20/0x50
      handle_irq_event+0x2a/0x50
      handle_edge_irq+0x80/0x1c0
      handle_irq+0xaf/0x120
      do_IRQ+0x41/0xc0
      common_interrupt+0xf/0xf
    
    Fix it by updating delayacct_blkio_end() check @p->delays instead.
    
    Link: http://lkml.kernel.org/r/20180724175542.GP1934745@devbig577.frc2.facebook.com
    Fixes: c96f5471ce7d ("delayacct: Account blkio completion on the correct task")
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Dave Jones <dsj@fb.com>
    Debugged-by: Dave Jones <dsj@fb.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Josh Snyder <joshs@netflix.com>
    Cc: <stable@vger.kernel.org>    [4.15+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a84297b8711dae583dbb6b127e3e94d6c01f0c29
Author: Shakeel Butt <shakeelb@google.com>
Date:   Thu Jul 26 16:37:45 2018 -0700

    kvm, mm: account shadow page tables to kmemcg
    
    commit d97e5e6160c0e0a23963ec198c7cb1c69e6bf9e8 upstream.
    
    The size of kvm's shadow page tables corresponds to the size of the
    guest virtual machines on the system.  Large VMs can spend a significant
    amount of memory as shadow page tables which can not be left as system
    memory overhead.  So, account shadow page tables to the kmemcg.
    
    [shakeelb@google.com: replace (GFP_KERNEL|__GFP_ACCOUNT) with GFP_KERNEL_ACCOUNT]
      Link: http://lkml.kernel.org/r/20180629140224.205849-1-shakeelb@google.com
    Link: http://lkml.kernel.org/r/20180627181349.149778-1-shakeelb@google.com
    Signed-off-by: Shakeel Butt <shakeelb@google.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Greg Thelen <gthelen@google.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Peter Feiner <pfeiner@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d163441d5f8f07f998b97fe8276c65ce28e1b2e
Author: Dave Jiang <dave.jiang@intel.com>
Date:   Thu Jul 26 16:37:15 2018 -0700

    mm: disallow mappings that conflict for devm_memremap_pages()
    
    commit 15d36fecd0bdc7510b70a0e5ec6671140b3fce0c upstream.
    
    When pmem namespaces created are smaller than section size, this can
    cause an issue during removal and gpf was observed:
    
      general protection fault: 0000 1 SMP PTI
      CPU: 36 PID: 3941 Comm: ndctl Tainted: G W 4.14.28-1.el7uek.x86_64 #2
      task: ffff88acda150000 task.stack: ffffc900233a4000
      RIP: 0010:__put_page+0x56/0x79
      Call Trace:
        devm_memremap_pages_release+0x155/0x23a
        release_nodes+0x21e/0x260
        devres_release_all+0x3c/0x48
        device_release_driver_internal+0x15c/0x207
        device_release_driver+0x12/0x14
        unbind_store+0xba/0xd8
        drv_attr_store+0x27/0x31
        sysfs_kf_write+0x3f/0x46
        kernfs_fop_write+0x10f/0x18b
        __vfs_write+0x3a/0x16d
        vfs_write+0xb2/0x1a1
        SyS_write+0x55/0xb9
        do_syscall_64+0x79/0x1ae
        entry_SYSCALL_64_after_hwframe+0x3d/0x0
    
    Add code to check whether we have a mapping already in the same section
    and prevent additional mappings from being created if that is the case.
    
    Link: http://lkml.kernel.org/r/152909478401.50143.312364396244072931.stgit@djiang5-desk3.ch.intel.com
    Signed-off-by: Dave Jiang <dave.jiang@intel.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Robert Elliott <elliott@hpe.com>
    Cc: Jeff Moyer <jmoyer@redhat.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c006356b44ae0fc6f818bd25bf70ec7dfb426835
Author: KT Liao <kt.liao@emc.com.tw>
Date:   Mon Jul 16 12:10:03 2018 +0000

    Input: elan_i2c - add another ACPI ID for Lenovo Ideapad 330-15AST
    
    commit 6f88a6439da5d94de334a341503bc2c7f4a7ea7f upstream.
    
    Add ELAN0622 to ACPI mapping table to support Elan touchpad found in
    Ideapad 330-15AST.
    
    Signed-off-by: KT Liao <kt.liao@emc.com.tw>
    Reported-by: Anant Shende <anantshende@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7097414ddfd4416e5b6121a756fd09060b506ed0
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Wed Jul 18 17:24:35 2018 +0000

    Input: i8042 - add Lenovo LaVie Z to the i8042 reset list
    
    commit 384cf4285b34e08917e3e66603382f2b0c4f6e1b upstream.
    
    The Lenovo LaVie Z laptop requires i8042 to be reset in order to
    consistently detect its Elantech touchpad. The nomux and kbdreset
    quirks are not sufficient.
    
    It's possible the other LaVie Z models from NEC require this as well.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fc88223fe821e71f0a8c57d9288ae0c21be3e7e
Author: Donald Shanty III <dshanty@protonmail.com>
Date:   Wed Jul 4 15:50:47 2018 +0000

    Input: elan_i2c - add ACPI ID for lenovo ideapad 330
    
    commit 938f45008d8bc391593c97508bc798cc95a52b9b upstream.
    
    This allows Elan driver to bind to the touchpad found in Lenovo Ideapad 330
    series laptops.
    
    Signed-off-by: Donald Shanty III <dshanty@protonmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acdd6caa629d876013194a767d445629e14b0313
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed May 16 10:42:39 2018 +0200

    spi: spi-s3c64xx: Fix system resume support
    
    commit e935dba111621bd6a0c5d48e6511a4d9885103b4 upstream.
    
    Since Linux v4.10 release (commit 1d9174fbc55e "PM / Runtime: Defer
    resuming of the device in pm_runtime_force_resume()"),
    pm_runtime_force_resume() function doesn't runtime resume device if it was
    not runtime active before system suspend. Thus, driver should not do any
    register access after pm_runtime_force_resume() without checking the
    runtime status of the device. To fix this issue, simply move
    s3c64xx_spi_hwinit() call to s3c64xx_spi_runtime_resume() to ensure that
    hardware is always properly initialized. This fixes Synchronous external
    abort issue on system suspend/resume cycle on newer Exynos SoCs.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
