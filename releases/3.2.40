commit 733c7943173143e29005c44b4fceb64302dd3098
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed Mar 6 03:24:30 2013 +0000

    Linux 3.2.40

commit 933ef2d5e70eba0cdd652a43157004e8619f66e9
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Fri Aug 17 08:54:52 2012 -0400

    ext4: fix kernel BUG on large-scale rm -rf commands
    
    commit 89a4e48f8479f8145eca9698f39fe188c982212f upstream.
    
    Commit 968dee7722: "ext4: fix hole punch failure when depth is greater
    than 0" introduced a regression in v3.5.1/v3.6-rc1 which caused kernel
    crashes when users ran run "rm -rf" on large directory hierarchy on
    ext4 filesystems on RAID devices:
    
        BUG: unable to handle kernel NULL pointer dereference at 0000000000000028
    
        Process rm (pid: 18229, threadinfo ffff8801276bc000, task ffff880123631710)
        Call Trace:
         [<ffffffff81236483>] ? __ext4_handle_dirty_metadata+0x83/0x110
         [<ffffffff812353d3>] ext4_ext_truncate+0x193/0x1d0
         [<ffffffff8120a8cf>] ? ext4_mark_inode_dirty+0x7f/0x1f0
         [<ffffffff81207e05>] ext4_truncate+0xf5/0x100
         [<ffffffff8120cd51>] ext4_evict_inode+0x461/0x490
         [<ffffffff811a1312>] evict+0xa2/0x1a0
         [<ffffffff811a1513>] iput+0x103/0x1f0
         [<ffffffff81196d84>] do_unlinkat+0x154/0x1c0
         [<ffffffff8118cc3a>] ? sys_newfstatat+0x2a/0x40
         [<ffffffff81197b0b>] sys_unlinkat+0x1b/0x50
         [<ffffffff816135e9>] system_call_fastpath+0x16/0x1b
        Code: 8b 4d 20 0f b7 41 02 48 8d 04 40 48 8d 04 81 49 89 45 18 0f b7 49 02 48 83 c1 01 49 89 4d 00 e9 ae f8 ff ff 0f 1f 00 49 8b 45 28 <48> 8b 40 28 49 89 45 20 e9 85 f8 ff ff 0f 1f 80 00 00 00
    
        RIP  [<ffffffff81233164>] ext4_ext_remove_space+0xa34/0xdf0
    
    This could be reproduced as follows:
    
    The problem in commit 968dee7722 was that caused the variable 'i' to
    be left uninitialized if the truncate required more space than was
    available in the journal.  This resulted in the function
    ext4_ext_truncate_extend_restart() returning -EAGAIN, which caused
    ext4_ext_remove_space() to restart the truncate operation after
    starting a new jbd2 handle.
    
    Reported-by: Maciej Å»enczykowski <maze@google.com>
    Reported-by: Marti Raudsepp <marti@juffo.org>
    Tested-by: Fengguang Wu <fengguang.wu@intel.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e5a563d126bd68533e9afaf94ae5c1140921f859
Author: Ashish Sangwan <ashishsangwan2@gmail.com>
Date:   Sun Jul 22 22:49:08 2012 -0400

    ext4: fix hole punch failure when depth is greater than 0
    
    commit 968dee77220768a5f52cf8b21d0bdb73486febef upstream.
    
    Whether to continue removing extents or not is decided by the return
    value of function ext4_ext_more_to_rm() which checks 2 conditions:
    a) if there are no more indexes to process.
    b) if the number of entries are decreased in the header of "depth -1".
    
    In case of hole punch, if the last block to be removed is not part of
    the last extent index than this index will not be deleted, hence the
    number of valid entries in the extent header of "depth - 1" will
    remain as it is and ext4_ext_more_to_rm will return 0 although the
    required blocks are not yet removed.
    
    This patch fixes the above mentioned problem as instead of removing
    the extents from the end of file, it starts removing the blocks from
    the particular extent from which removing blocks is actually required
    and continue backward until done.
    
    Signed-off-by: Ashish Sangwan <ashish.sangwan2@gmail.com>
    Signed-off-by: Namjae Jeon <linkinjeon@gmail.com>
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 00fa8c8da0a2cb2c14f358cd0c235ca196f4da48
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Mon Mar 19 23:03:19 2012 -0400

    ext4: rewrite punch hole to use ext4_ext_remove_space()
    
    commit 5f95d21fb6f2aaa52830e5b7fb405f6c71d3ab85 upstream.
    
    This commit rewrites ext4 punch hole implementation to use
    ext4_ext_remove_space() instead of its home gown way of doing this via
    ext4_ext_map_blocks(). There are several reasons for changing this.
    
    Firstly it is quite non obvious that punching hole needs to
    ext4_ext_map_blocks() to punch a hole, especially given that this
    function should map blocks, not unmap it. It also required a lot of new
    code in ext4_ext_map_blocks().
    
    Secondly the design of it is not very effective. The reason is that we
    are trying to punch out blocks in ext4_ext_punch_hole() in opposite
    direction than in ext4_ext_rm_leaf() which causes the ext4_ext_rm_leaf()
    to iterate through the whole tree from the end to the start to find the
    requested extent for every extent we are going to punch out.
    
    And finally the current implementation does not use the existing code,
    but bring a lot of new code, which is IMO unnecessary since there
    already is some infrastructure we can use. Specifically
    ext4_ext_remove_space().
    
    This commit changes ext4_ext_remove_space() to accept 'end' parameter so
    we can not only truncate to the end of file, but also remove the space
    in the middle of the file (punch a hole). Moreover, because the last
    block to punch out, might be in the middle of the extent, we have to
    split the extent at 'end + 1' so ext4_ext_rm_leaf() can easily either
    remove the whole fist part of split extent, or change its size.
    
    ext4_ext_remove_space() is then used to actually remove the space
    (extents) from within the hole, instead of ext4_ext_map_blocks().
    
    Note that this also fix the issue with punch hole, where we would forget
    to remove empty index blocks from the extent tree, resulting in double
    free block error and file system corruption. This is simply because we
    now use different code path, where this problem does not exist.
    
    This has been tested with fsx running for several days and xfstests,
    plus xfstest #251 with '-o discard' run on the loop image (which
    converts discard requestes into punch hole to the backing file). All of
    it on 1K and 4K file system block size.
    
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    [bwh: Backported to 3.2.y: move EXT4_EXT_DATA_VALID{1,2} along with the
     other extent splitting flags]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 55a058d4a89c4ef33294f9758559f0704d347738
Author: Justin Lecher <jlec@gentoo.org>
Date:   Mon Jul 30 14:42:53 2012 -0700

    fs: cachefiles: add support for large files in filesystem caching
    
    commit 98c350cda2c14a343d34ea01a3d9c24fea5ec66d upstream.
    
    Support the caching of large files.
    
    Addresses https://bugzilla.kernel.org/show_bug.cgi?id=31182
    
    Signed-off-by: Justin Lecher <jlec@gentoo.org>
    Signed-off-by: Suresh Jayaraman <sjayaraman@suse.com>
    Tested-by: Suresh Jayaraman <sjayaraman@suse.com>
    Acked-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.2:
     - Adjust context
     - dentry_open() takes dentry and vfsmount pointers, not a path pointer]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 511d07bc0a060049009954eeb8b34eda016c9c0e
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Dec 6 17:00:21 2012 +1100

    exec: use -ELOOP for max recursion depth
    
    commit d740269867021faf4ce38a449353d2b986c34a67 upstream.
    
    To avoid an explosion of request_module calls on a chain of abusive
    scripts, fail maximum recursion with -ELOOP instead of -ENOEXEC. As soon
    as maximum recursion depth is hit, the error will fail all the way back
    up the chain, aborting immediately.
    
    This also has the side-effect of stopping the user's shell from attempting
    to reexecute the top-level file as a shell script. As seen in the
    dash source:
    
            if (cmd != path_bshell && errno == ENOEXEC) {
                    *argv-- = cmd;
                    *argv = cmd = path_bshell;
                    goto repeat;
            }
    
    The above logic was designed for running scripts automatically that lacked
    the "#!" header, not to re-try failed recursion. On a legitimate -ENOEXEC,
    things continue to behave as the shell expects.
    
    Additionally, when tracking recursion, the binfmt handlers should not be
    involved. The recursion being tracked is the depth of calls through
    search_binary_handler(), so that function should be exclusively responsible
    for tracking the depth.
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: halfdog <me@halfdog.net>
    Cc: P J P <ppandit@redhat.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d0820f8020fa87d9e0433b062fca2b7206e0cd11
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Fri Mar 23 15:02:50 2012 -0700

    kmod: make __request_module() killable
    
    commit 1cc684ab75123efe7ff446eb821d44375ba8fa30 upstream.
    
    As Tetsuo Handa pointed out, request_module() can stress the system
    while the oom-killed caller sleeps in TASK_UNINTERRUPTIBLE.
    
    The task T uses "almost all" memory, then it does something which
    triggers request_module().  Say, it can simply call sys_socket().  This
    in turn needs more memory and leads to OOM.  oom-killer correctly
    chooses T and kills it, but this can't help because it sleeps in
    TASK_UNINTERRUPTIBLE and after that oom-killer becomes "disabled" by the
    TIF_MEMDIE task T.
    
    Make __request_module() killable.  The only necessary change is that
    call_modprobe() should kmalloc argv and module_name, they can't live in
    the stack if we use UMH_KILLABLE.  This memory is freed via
    call_usermodehelper_freeinfo()->cleanup.
    
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 95b467ca30d2e56c08fbe541a02318470457cca7
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Fri Mar 23 15:02:49 2012 -0700

    kmod: introduce call_modprobe() helper
    
    commit 3e63a93b987685f02421e18b2aa452d20553a88b upstream.
    
    No functional changes.  Move the call_usermodehelper code from
    __request_module() into the new simple helper, call_modprobe().
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9aa0f9b368807533afd246b0e2e3a72fae9c7c98
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Fri Mar 23 15:02:49 2012 -0700

    usermodehelper: ____call_usermodehelper() doesn't need do_exit()
    
    commit 5b9bd473e3b8a8c6c4ae99be475e6e9b27568555 upstream.
    
    Minor cleanup.  ____call_usermodehelper() can simply return, no need to
    call do_exit() explicitely.
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ed549cef5a192eae889b36117beae72d4d68de79
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Fri Mar 23 15:02:47 2012 -0700

    usermodehelper: implement UMH_KILLABLE
    
    commit d0bd587a80960d7ba7e0c8396e154028c9045c54 upstream.
    
    Implement UMH_KILLABLE, should be used along with UMH_WAIT_EXEC/PROC.
    The caller must ensure that subprocess_info->path/etc can not go away
    until call_usermodehelper_freeinfo().
    
    call_usermodehelper_exec(UMH_KILLABLE) does
    wait_for_completion_killable.  If it fails, it uses
    xchg(&sub_info->complete, NULL) to serialize with umh_complete() which
    does the same xhcg() to access sub_info->complete.
    
    If call_usermodehelper_exec wins, it can safely return.  umh_complete()
    should get NULL and call call_usermodehelper_freeinfo().
    
    Otherwise we know that umh_complete() was already called, in this case
    call_usermodehelper_exec() falls back to wait_for_completion() which
    should succeed "very soon".
    
    Note: UMH_NO_WAIT == -1 but it obviously should not be used with
    UMH_KILLABLE.  We delay the neccessary cleanup to simplify the back
    porting.
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3ba91066fd4f9b4340ae88ce5cb18cd4b58d9184
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Fri Mar 23 15:02:47 2012 -0700

    usermodehelper: introduce umh_complete(sub_info)
    
    commit b3449922502f5a161ee2b5022a33aec8472fbf18 upstream.
    
    Preparation.  Add the new trivial helper, umh_complete().  Currently it
    simply does complete(sub_info->complete).
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 989c07163fe2672e488124e7d606cda349e719ba
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Thu Nov 29 09:12:37 2012 +0100

    asus-laptop: Do not call HWRS on init
    
    commit cb7da022450cdaaebd33078b6b32fb7dd2aaf6db upstream.
    
    Since commit 8871e99f89b7 ('asus-laptop: HRWS/HWRS typo'), module
    initialisation is very slow on the Asus UL30A.  The HWRS method takes
    about 12 seconds to run, and subsequent initialisation also seems to
    be delayed.  Since we don't really need the result, don't bother
    calling it on init.  Those who are curious can still get the result
    through the 'infos' device attribute.
    
    Update the comment about HWRS in show_infos().
    
    Reported-by: ryan <draziw+deb@gmail.com>
    References: http://bugs.debian.org/692436
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Corentin Chary <corentin.chary@gmail.com>
    Signed-off-by: Matthew Garrett <matthew.garrett@nebula.com>

commit 6f06c8d13890b34a9de8760e7c0dc76291fdf682
Author: Samuel Thibault <samuel.thibault@ens-lyon.org>
Date:   Sun Aug 26 23:35:17 2012 +0200

    speakup: lower default software speech rate
    
    commit cfd757010691eae4e17acc246f74e7622c3a2f05 upstream.
    
    Speech synthesis beginners need a low speech rate, and trained people
    want a high speech rate.  A medium speech rate is thus actually not a
    good default for neither.  Since trained people will typically know how
    to change the rate, better default for a low speech rate, which
    beginners can grasp and learn how to increase it afterwards
    
    This was agreed with users on the speakup mailing list.
    
    Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fdf60a1cce3e089f3f2a80505297187c3a7e39b3
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Thu Jul 19 12:39:14 2012 +0200

    usb: Add USB_QUIRK_RESET_RESUME for all Logitech UVC webcams
    
    commit e387ef5c47ddeaeaa3cbdc54424cdb7a28dae2c0 upstream.
    
    Most Logitech UVC webcams (both early models that don't advertise UVC
    compatibility and newer UVC-advertised devices) require the RESET_RESUME
    quirk. Instead of listing each and every model, match the devices based
    on the UVC interface information.
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Adjust context to apply after 3.2.38]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f94c6107b49ac52f2e0f9929aeffeceb5ed97704
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Thu Jul 19 12:39:13 2012 +0200

    usb: Add quirk detection based on interface information
    
    commit 80da2e0df5af700518611b7d1cc4fc9945bcaf95 upstream.
    
    When a whole class of devices (possibly from a specific vendor, or
    across multiple vendors) require a quirk, explictly listing all devices
    in the class make the quirks table unnecessarily large. Fix this by
    allowing matching devices based on interface information.
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 025f690b5b6ed3978c46c55542ae15244f1bd61f
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sun Mar 3 03:24:34 2013 +0000

    8250: use correct value for PORT_BRCM_TRUMANAGE
    
    When backporting commit ebebd49a8eab ('8250/16?50: Add support for
    Broadcom TruManage redirected serial port') I took the next
    available port type number for PORT_BRCM_TRUMANAGE (22).
    
    However, the 8250 port type numbers are exposed to userland through
    the TIOC{G,S}SERIAL ioctls and so must remain stable.  Redefine
    PORT_BRCM_TRUMANAGE as 25, matching mainline as of commit
    85f024401bf807.
    
    This leaves port types 22-24 within the valid range for 8250 but not
    implemented there.  Change serial8250_verify_port() to specifically
    reject these and change serial8250_type() to return "unknown" for them
    (though I'm not sure why it would ever see them).
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e188567f35fe514253b2e46a31cf03272ab8c030
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Mon Nov 26 05:57:27 2012 +0000

    vhost: fix length for cross region descriptor
    
    commit bd97120fc3d1a11f3124c7c9ba1d91f51829eb85 upstream.
    
    If a single descriptor crosses a region, the
    second chunk length should be decremented
    by size translated so far, instead it includes
    the full descriptor length.
    
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 04ea2389e48049a79da78e517ebb411d2fad7bf2
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Nov 27 13:35:09 2012 -0300

    rc: unlock on error in show_protocols()
    
    commit 30ebc5e44d057a1619ad63fe32c8c1670c37c4b8 upstream.
    
    We recently introduced a new return -ENODEV in this function but we need
    to unlock before returning.
    
    [mchehab@redhat.com: found two patches with the same fix. Merged SOB's/acks into one patch]
    Acked-by: Herton R. Krzesinski <herton.krzesinski@canonical.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Douglas Bagnall <douglas@paradise.net.nz>
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 86e9259d57d7eb2fae2acf5539e782403b689efb
Author: Douglas Bagnall <douglas@paradise.net.nz>
Date:   Fri Jul 6 23:27:57 2012 -0300

    Avoid sysfs oops when an rc_dev's raw device is absent
    
    commit 720bb6436ff30fccad05cf5bdf961ea5b1f5686d upstream.
    
    For some reason, when the lirc daemon learns that a usb remote control
    has been unplugged, it wants to read the sysfs attributes of the
    disappearing device. This is useful for uncovering transient
    inconsistencies, but less so for keeping the system running when such
    inconsistencies exist.
    
    Under some circumstances (like every time I unplug my dvb stick from
    my laptop), lirc catches an rc_dev whose raw event handler has been
    removed (presumably by ir_raw_event_unregister), and proceeds to
    interrogate the raw protocols supported by the NULL pointer.
    
    This patch avoids the NULL dereference, and ignores the issue of how
    this state of affairs came about in the first place.
    
    Version 2 incorporates changes recommended by Mauro Carvalho Chehab
    (-ENODEV instead of -EINVAL, and a signed-off-by).
    
    Signed-off-by: Douglas Bagnall <douglas@paradise.net.nz>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 91668663ec66998d18533c2d0fac4faef1a08d77
Author: Alexey Klimov <klimov.linux@gmail.com>
Date:   Mon Nov 12 02:57:03 2012 -0300

    usb hid quirks for Masterkit MA901 usb radio
    
    commit 0322bd3980b3ebf7dde8474e22614cb443d6479a upstream.
    
    Don't let Masterkit MA901 USB radio be handled by usb hid drivers.
    This device will be handled by radio-ma901.c driver.
    
    Signed-off-by: Alexey Klimov <klimov.linux@gmail.com>
    Acked-by: Hans Verkuil <hans.verkuil@cisco.com>
    Acked-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2a1b9ce3428210c050dc34d4eaa64aa7e258c0fb
Author: James Ralston <james.d.ralston@intel.com>
Date:   Fri Feb 8 17:24:12 2013 -0800

    ata_piix: Add Device IDs for Intel Wellsburg PCH
    
    commit 3aee8bc52c415aba8148f144e5e5359b0fd75dd1 upstream.
    
    This patch adds the IDE-mode SATA Device IDs for the Intel Wellsburg PCH
    
    Signed-off-by: James Ralston <james.d.ralston@intel.com>
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 117d2e32af3d29b516594775c0cdc93adbf2f24c
Author: Seth Heasley <seth.heasley@intel.com>
Date:   Fri Jan 25 11:57:05 2013 -0800

    ata_piix: IDE-mode SATA patch for Intel Avoton DeviceIDs
    
    commit aaa515277db9585eeb4fdeb4637b9f9df50a1dd9 upstream.
    
    This patch adds the IDE-mode SATA DeviceIDs for the Intel Avoton SOC.
    
    Signed-off-by: Seth Heasley <seth.heasley@intel.com>
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d3493114eccc62a0a74f183adaf1fbb58f3bfc38
Author: James Ralston <james.d.ralston@intel.com>
Date:   Thu Aug 9 09:34:20 2012 -0700

    ata_piix: Add Device IDs for Intel Lynx Point-LP PCH
    
    commit 389cd784969e9148fedcde0608f15bd74d6b769e upstream.
    
    This patch adds the IDE-mode SATA Device IDs for the Intel Lynx Point-LP PCH
    
    Signed-off-by: James Ralston <james.d.ralston@intel.com>
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 745544cbd47e3ec3219ed1bd6170036d356470bc
Author: Seth Heasley <seth.heasley@intel.com>
Date:   Tue Feb 21 10:45:26 2012 -0800

    ata_piix: IDE-mode SATA patch for Intel DH89xxCC DeviceIDs
    
    commit 96d5d96aedc29c75bb16433f6ecf8664ec3c1b46 upstream.
    
    This patch adds the IDE-mode SATA DeviceIDs for the Intel DH89xxCC PCH.
    
    Signed-off-by: Seth Heasley <seth.heasley@intel.com>
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 18e7222c4c2df0db0a33bc300a39e8bfa55e50bf
Author: Seth Heasley <seth.heasley@intel.com>
Date:   Mon Jan 23 16:29:50 2012 -0800

    ata_piix: IDE-mode SATA patch for Intel Lynx Point DeviceIDs
    
    commit 78140cfec503c60a178b11fbaae2fef63e9abdc0 upstream.
    
    This patch adds the IDE-mode SATA DeviceIDs for the Intel Lynx Point PCH.
    
    Signed-off-by: Seth Heasley <seth.heasley@intel.com>
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 019c74a99a5278cbeea999779f998a326d1d40c7
Author: Seiji Aguchi <seiji.aguchi@hds.com>
Date:   Fri Jan 11 18:09:41 2013 +0000

    pstore: Avoid deadlock in panic and emergency-restart path
    
    commit 9f244e9cfd70c7c0f82d3c92ce772ab2a92d9f64 upstream.
    
    [Issue]
    
    When pstore is in panic and emergency-restart paths, it may be blocked
    in those paths because it simply takes spin_lock.
    
    This is an example scenario which pstore may hang up in a panic path:
    
     - cpuA grabs psinfo->buf_lock
     - cpuB panics and calls smp_send_stop
     - smp_send_stop sends IRQ to cpuA
     - after 1 second, cpuB gives up on cpuA and sends an NMI instead
     - cpuA is now in an NMI handler while still holding buf_lock
     - cpuB is deadlocked
    
    This case may happen if a firmware has a bug and
    cpuA is stuck talking with it more than one second.
    
    Also, this is a similar scenario in an emergency-restart path:
    
     - cpuA grabs psinfo->buf_lock and stucks in a firmware
     - cpuB kicks emergency-restart via either sysrq-b or hangcheck timer.
       And then, cpuB is deadlocked by taking psinfo->buf_lock again.
    
    [Solution]
    
    This patch avoids the deadlocking issues in both panic and emergency_restart
    paths by introducing a function, is_non_blocking_path(), to check if a cpu
    can be blocked in current path.
    
    With this patch, pstore is not blocked even if another cpu has
    taken a spin_lock, in those paths by changing from spin_lock_irqsave
    to spin_trylock_irqsave.
    
    In addition, according to a comment of emergency_restart() in kernel/sys.c,
    spin_lock shouldn't be taken in an emergency_restart path to avoid
    deadlock. This patch fits the comment below.
    
    <snip>
    /**
     *      emergency_restart - reboot the system
     *
     *      Without shutting down any hardware or taking any locks
     *      reboot the system.  This is called when we know we are in
     *      trouble so this is our best effort to reboot.  This is
     *      safe to call in interrupt context.
     */
    void emergency_restart(void)
    <snip>
    
    Signed-off-by: Seiji Aguchi <seiji.aguchi@hds.com>
    Acked-by: Don Zickus <dzickus@redhat.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    [bwh: Backported to 3.2:
     - Adjust context
     - Add #include <linux/kmsg_dump.h>]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 56546c8c2a08d511b6499c7997fd95f22da5400c
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Wed Feb 27 12:52:46 2013 +0000

    staging: comedi: ni_labpc: set up command4 register *after* command3
    
    commit 22056e2b46246d97ff0f7c6e21a77b8daa07f02c upstream.
    
    Tuomas <tvainikk _at_ gmail _dot_ com> reported problems getting
    meaningful output from a Lab-PC+ in differential mode for AI cmds, but
    AI insn reads gave correct readings.  He tracked it down to two
    problems, one of which is addressed by this patch.
    
    It seems that writing to the command3 register after writing to the
    command4 register in `labpc_ai_cmd()` messes up the differential
    reference bit setting in the command4 register.  Set up the command4
    register after the command3 register (as in `labpc_ai_rinsn()`) to avoid
    the problem.
    
    Thanks to Tuomas for suggesting the fix.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8e53d294a77b695883bf20351a60edb35b479904
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Wed Feb 27 12:52:45 2013 +0000

    staging: comedi: ni_labpc: correct differential channel sequence for AI commands
    
    commit 4c4bc25d0fa6beaf054c0b4c3b324487f266c820 upstream.
    
    Tuomas <tvainikk _at_ gmail _dot_ com> reported problems getting
    meaningful output from a Lab-PC+ in differential mode for AI cmds, but
    AI insn reads gave correct readings.  He tracked it down to two
    problems, one of which is addressed by this patch.
    
    It seems the setting of the channel bits for particular scanning modes
    was incorrect for differential mode.  (Only half the number of channels
    are available in differential mode; comedi refers to them as channels 0,
    1, 2 and 3, but the hardware documentation refers to them as channels 0,
    2, 4 and 6.)  In differential mode, the setting of the channel enable
    bits in the command1 register should depend on whether the scan enable
    bit is set.  Effectively, we need to double the comedi channel number
    when the scan enable bit is not set in differential mode.  The scan
    enable bit gets set when the AI scan mode is `MODE_MULT_CHAN_UP` or
    `MODE_MULT_CHAN_DOWN`, and gets cleared when the AI scan mode is
    `MODE_SINGLE_CHAN` or `MODE_SINGLE_CHAN_INTERVAL`.  The existing test
    for whether the comedi channel number needs to be doubled in
    differential mode is incorrect in `labpc_ai_cmd()`.  This patch corrects
    the test.
    
    Thanks to Tuomas for suggesting the fix.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0fd0ff7e1fcc4b4bc5d17ab1d200f23dea7c681d
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Feb 21 12:18:52 2013 +0000

    ipv6: use a stronger hash for tcp
    
    [ Upstream commit 08dcdbf6a7b9d14c2302c5bd0c5390ddf122f664 ]
    
    It looks like its possible to open thousands of TCP IPv6
    sessions on a server, all landing in a single slot of TCP hash
    table. Incoming packets have to lookup sockets in a very
    long list.
    
    We should hash all bits from foreign IPv6 addresses, using
    a salt and hash mix, not a simple XOR.
    
    inet6_ehashfn() can also separately use the ports, instead
    of xoring them.
    
    Reported-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 52430c06469c05c36dd688c8daff25e5bcfde8e9
Author: Li Wei <lw@cn.fujitsu.com>
Date:   Thu Feb 21 00:09:54 2013 +0000

    ipv4: fix a bug in ping_err().
    
    [ Upstream commit b531ed61a2a2a77eeb2f7c88b49aa5ec7d9880d8 ]
    
    We should get 'type' and 'code' from the outer ICMP header.
    
    Signed-off-by: Li Wei <lw@cn.fujitsu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit db3521fa50cd7ccab57c6b5eb7a118637804af50
Author: David Vrabel <david.vrabel@citrix.com>
Date:   Thu Feb 14 03:18:58 2013 +0000

    xen-netback: cancel the credit timer when taking the vif down
    
    [ Upstream commit 3e55f8b306cf305832a4ac78aa82e1b40e818ece ]
    
    If the credit timer is left armed after calling
    xen_netbk_remove_xenvif(), then it may fire and attempt to schedule
    the vif which will then oops as vif->netbk == NULL.
    
    This may happen both in the fatal error path and during normal
    disconnection from the front end.
    
    The sequencing during shutdown is critical to ensure that: a)
    vif->netbk doesn't become unexpectedly NULL; and b) the net device/vif
    is not freed.
    
    1. Mark as unschedulable (netif_carrier_off()).
    2. Synchronously cancel the timer.
    3. Remove the vif from the schedule list.
    4. Remove it from it netback thread group.
    5. Wait for vif->refcnt to become 0.
    
    Signed-off-by: David Vrabel <david.vrabel@citrix.com>
    Acked-by: Ian Campbell <ian.campbell@citrix.com>
    Reported-by: Christopher S. Aker <caker@theshore.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit aa067cfc66595a3a842ef56a9211a674ee136422
Author: David Vrabel <david.vrabel@citrix.com>
Date:   Thu Feb 14 03:18:57 2013 +0000

    xen-netback: correctly return errors from netbk_count_requests()
    
    [ Upstream commit 35876b5ffc154c357476b2c3bdab10feaf4bd8f0 ]
    
    netbk_count_requests() could detect an error, call
    netbk_fatal_tx_error() but return 0.  The vif may then be used
    afterwards (e.g., in a call to netbk_tx_error().
    
    Since netbk_fatal_tx_error() could set vif->refcnt to 1, the vif may
    be freed immediately after the call to netbk_fatal_tx_error() (e.g.,
    if the vif is also removed).
    
    Netback thread              Xenwatch thread
    -------------------------------------------
    netbk_fatal_tx_err()        netback_remove()
                                  xenvif_disconnect()
                                    ...
                                    free_netdev()
    netbk_tx_err() Oops!
    
    Signed-off-by: Wei Liu <wei.liu2@citrix.com>
    Signed-off-by: Jan Beulich <JBeulich@suse.com>
    Signed-off-by: David Vrabel <david.vrabel@citrix.com>
    Reported-by: Christopher S. Aker <caker@theshore.net>
    Acked-by: Ian Campbell <ian.campbell@citrix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1642974c7f646c8a32bc7a15d37f4e14ceead334
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Mon Feb 11 08:22:22 2013 +0000

    bridge: set priority of STP packets
    
    [ Upstream commit 547b4e718115eea74087e28d7fa70aec619200db ]
    
    Spanning Tree Protocol packets should have always been marked as
    control packets, this causes them to get queued in the high prirority
    FIFO. As Radia Perlman mentioned in her LCA talk, STP dies if bridge
    gets overloaded and can't communicate. This is a long-standing bug back
    to the first versions of Linux bridge.
    
    Signed-off-by: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ecb1d58c0722e593e50317a63294a52ac2308ace
Author: Jan Beulich <jbeulich@suse.com>
Date:   Wed Feb 6 10:30:38 2013 -0500

    xen-pciback: rate limit error messages from xen_pcibk_enable_msi{,x}()
    
    commit 51ac8893a7a51b196501164e645583bf78138699 upstream.
    
    ... as being guest triggerable (e.g. by invoking
    XEN_PCI_OP_enable_msi{,x} on a device not being MSI/MSI-X capable).
    
    This is CVE-2013-0231 / XSA-43.
    
    Also make the two messages uniform in both their wording and severity.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Acked-by: Ian Campbell <ian.campbell@citrix.com>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    [bwh: Backported to 3.2: add #include <linux/ratelimited.h>, needed by
     printk_ratelimited()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f20a819cc8b7335f2714950ff7638d52fcd50fdc
Author: Helge Deller <deller@gmx.de>
Date:   Mon Feb 4 19:39:52 2013 +0000

    unbreak automounter support on 64-bit kernel with 32-bit userspace (v2)
    
    commit 4f4ffc3a5398ef9bdbb32db04756d7d34e356fcf upstream.
    
    automount-support is broken on the parisc architecture, because the existing
    #if list does not include a check for defined(__hppa__). The HPPA (parisc)
    architecture is similiar to other 64bit Linux targets where we have to define
    autofs_wqt_t (which is passed back and forth to user space) as int type which
    has a size of 32bit across 32 and 64bit kernels.
    
    During the discussion on the mailing list, H. Peter Anvin suggested to invert
    the #if list since only specific platforms (specifically those who do not have
    a 32bit userspace, like IA64 and Alpha) should have autofs_wqt_t as unsigned
    long type.
    
    This suggestion is probably the best way to go, since Arm64 (and maybe others?)
    seems to have a non-working automounter. So in the long run even for other new
    upcoming architectures this inverted check seem to be the best solution, since
    it will not require them to change this #if again (unless they are 64bit only).
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Acked-by: H. Peter Anvin <hpa@zytor.com>
    Acked-by: Ian Kent <raven@themaw.net>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    CC: James Bottomley <James.Bottomley@HansenPartnership.com>
    CC: Rolf Eike Beer <eike-kernel@sf-tec.de>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 903fba3bd1e99fbcac8a5e45e78059ce9357f7c1
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Tue Jan 29 09:16:28 2013 +0100

    s390/timer: avoid overflow when programming clock comparator
    
    commit d911e03d097bdc01363df5d81c43f69432eb785c upstream.
    
    Since ed4f209 "s390/time: fix sched_clock() overflow" a new helper function
    is used to avoid overflows when converting TOD format values to nanosecond
    values.
    The kvm interrupt code formerly however only worked by accident because of
    an overflow. It tried to program a timer that would expire in more than ~29
    years. Because of the old TOD-to-nanoseconds overflow bug the real expiry
    value however was much smaller, but now it isn't anymore.
    This however triggers yet another bug in the function that programs the clock
    comparator s390_next_ktime(): if the absolute "expires" value is after 2042
    this will result in an overflow and the programmed value is lower than the
    current TOD value which immediatly triggers a clock comparator (= timer)
    interrupt.
    Since the timer isn't expired it will be programmed immediately again and so
    on... the result is a dead system.
    To fix this simply program the maximum possible value if an overflow is
    detected.
    
    Reported-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Tested-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 39ca2020de1d46ae51e44f7380a9d3b5cb809a0a
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Thu Jan 31 09:00:52 2013 -0500

    drm/radeon/evergreen+: wait for the MC to settle after MC blackout
    
    commit ed39fadd6df01095378e499fac3674883f16b853 upstream.
    
    Some chips seem to need a little delay after blacking out
    the MC before the requests actually stop.
    
    May fix:
    https://bugs.freedesktop.org/show_bug.cgi?id=56139
    https://bugs.freedesktop.org/show_bug.cgi?id=57567
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 74d789d80dcc1f966956b6698722577f6343c110
Author: Alexander Duyck <alexander.h.duyck@intel.com>
Date:   Wed Aug 8 05:23:22 2012 +0000

    igb: Remove artificial restriction on RQDPC stat reading
    
    commit ae1c07a6b7ced6c0c94c99e3b53f4e7856fa8bff upstream.
    
    For some reason the reading of the RQDPC register was being artificially
    limited to 4K.  Instead of limiting the value we should read the value and
    add the full amount.  Otherwise this can lead to a misleading number of
    dropped packets when the actual value is in fact much higher.
    
    Signed-off-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Tested-by: Jeff Pieper   <jeffrey.e.pieper@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4189aa4ceebb1cd2b216d88980e35399e299c8c5
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Wed Feb 27 17:05:25 2013 -0800

    nbd: fsync and kill block device on shutdown
    
    commit 3a2d63f87989e01437ba994df5f297528c353d7d upstream.
    
    There are two problems with shutdown in the NBD driver.
    
    1: Receiving the NBD_DISCONNECT ioctl does not sync the filesystem.
    
       This patch adds the sync operation into __nbd_ioctl()'s
       NBD_DISCONNECT handler.  This is useful because BLKFLSBUF is restricted
       to processes that have CAP_SYS_ADMIN, and the NBD client may not
       possess it (fsync of the block device does not sync the filesystem,
       either).
    
    2: Once we clear the socket we have no guarantee that later reads will
       come from the same backing storage.
    
       The patch adds calls to kill_bdev() in __nbd_ioctl()'s socket
       clearing code so the page cache is cleaned, lest reads that hit on the
       page cache will return stale data from the previously-accessible disk.
    
    Example:
    
        # qemu-nbd -r -c/dev/nbd0 /dev/sr0
        # file -s /dev/nbd0
        /dev/stdin: # UDF filesystem data (version 1.5) etc.
        # qemu-nbd -d /dev/nbd0
        # qemu-nbd -r -c/dev/nbd0 /dev/sda
        # file -s /dev/nbd0
        /dev/stdin: # UDF filesystem data (version 1.5) etc.
    
    While /dev/sda has:
    
        # file -s /dev/sda
        /dev/sda: x86 boot sector; etc.
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Acked-by: Paul Clements <Paul.Clements@steeleye.com>
    Cc: Alex Bligh <alex@alex.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.2:
     - Adjusted context
     - s/\bnbd\b/lo/
     - Incorporate export of kill_bdev() from commit ff01bb483265
       ('fs: move code out of buffer.c')]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0ba15a927d8cf09cab753066736c87831a735987
Author: Xi Wang <xi.wang@gmail.com>
Date:   Wed Feb 27 17:05:21 2013 -0800

    sysctl: fix null checking in bin_dn_node_address()
    
    commit df1778be1a33edffa51d094eeda87c858ded6560 upstream.
    
    The null check of `strchr() + 1' is broken, which is always non-null,
    leading to OOB read.  Instead, check the result of strchr().
    
    Signed-off-by: Xi Wang <xi.wang@gmail.com>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a2a9af6cffebedfbbe70081157096826ff4eef9a
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Feb 27 17:05:02 2013 -0800

    idr: fix top layer handling
    
    commit 326cf0f0f308933c10236280a322031f0097205d upstream.
    
    Most functions in idr fail to deal with the high bits when the idr
    tree grows to the maximum height.
    
    * idr_get_empty_slot() stops growing idr tree once the depth reaches
      MAX_IDR_LEVEL - 1, which is one depth shallower than necessary to
      cover the whole range.  The function doesn't even notice that it
      didn't grow the tree enough and ends up allocating the wrong ID
      given sufficiently high @starting_id.
    
      For example, on 64 bit, if the starting id is 0x7fffff01,
      idr_get_empty_slot() will grow the tree 5 layer deep, which only
      covers the 30 bits and then proceed to allocate as if the bit 30
      wasn't specified.  It ends up allocating 0x3fffff01 without the bit
      30 but still returns 0x7fffff01.
    
    * __idr_remove_all() will not remove anything if the tree is fully
      grown.
    
    * idr_find() can't find anything if the tree is fully grown.
    
    * idr_for_each() and idr_get_next() can't iterate anything if the tree
      is fully grown.
    
    Fix it by introducing idr_max() which returns the maximum possible ID
    given the depth of tree and replacing the id limit checks in all
    affected places.
    
    As the idr_layer pointer array pa[] needs to be 1 larger than the
    maximum depth, enlarge pa[] arrays by one.
    
    While this plugs the discovered issues, the whole code base is
    horrible and in desparate need of rewrite.  It's fragile like hell,
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Rusty Russell <rusty@rustcorp.com.au>
    
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.2:
     - Adjust context
     - s/MAX_IDR_LEVEL/MAX_LEVEL/; s/MAX_IDR_SHIFT/MAX_ID_SHIFT/
     - Drop change to idr_alloc()]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6195dff3efda58746096daf01c3dbb74015dc0b5
Author: Hugh Dickins <hughd@google.com>
Date:   Wed Mar 21 16:34:20 2012 -0700

    idr: make idr_get_next() good for rcu_read_lock()
    
    commit 9f7de8275b46d9d11b1505adbfe6c2bb48df4741 upstream.
    
    Make one small adjustment to idr_get_next(): take the height from the top
    layer (stable under RCU) instead of from the root (unprotected by RCU), as
    idr_find() does: so that it can be used with RCU locking.  Copied comment
    on RCU locking from idr_find().
    
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Acked-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
    Acked-by: Li Zefan <lizf@cn.fujitsu.com>
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 507b2ac935cfe53dbe3a61d61254154e4829c2e4
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Feb 27 17:04:04 2013 -0800

    firewire: add minor number range check to fw_device_init()
    
    commit 3bec60d511179853138836ae6e1b61fe34d9235f upstream.
    
    fw_device_init() didn't check whether the allocated minor number isn't
    too large.  Fail if it goes overflows MINORBITS.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Suggested-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Acked-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a51db52c68e3ad5c718c1915d28086b2c0ef8642
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Feb 27 17:03:56 2013 -0800

    block: fix synchronization and limit check in blk_alloc_devt()
    
    commit ce23bba842aee98092225d9576dba47c82352521 upstream.
    
    idr allocation in blk_alloc_devt() wasn't synchronized against lookup
    and removal, and its limit check was off by one - 1 << MINORBITS is
    the number of minors allowed, not the maximum allowed minor.
    
    Add locking and rename MAX_EXT_DEVT to NR_EXT_DEVT and fix limit
    checking.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Acked-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 18536d611e05f6141504c7029943967ea3b56ba7
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Feb 27 17:03:34 2013 -0800

    idr: fix a subtle bug in idr_get_next()
    
    commit 6cdae7416a1c45c2ce105a78187d9b7e8feb9e24 upstream.
    
    The iteration logic of idr_get_next() is borrowed mostly verbatim from
    idr_for_each().  It walks down the tree looking for the slot matching
    the current ID.  If the matching slot is not found, the ID is
    incremented by the distance of single slot at the given level and
    repeats.
    
    The implementation assumes that during the whole iteration id is aligned
    to the layer boundaries of the level closest to the leaf, which is true
    for all iterations starting from zero or an existing element and thus is
    fine for idr_for_each().
    
    However, idr_get_next() may be given any point and if the starting id
    hits in the middle of a non-existent layer, increment to the next layer
    will end up skipping the same offset into it.  For example, an IDR with
    IDs filled between [64, 127] would look like the following.
    
              [  0  64 ... ]
           /----/   |
           |        |
          NULL    [ 64 ... 127 ]
    
    If idr_get_next() is called with 63 as the starting point, it will try
    to follow down the pointer from 0.  As it is NULL, it will then try to
    proceed to the next slot in the same level by adding the slot distance
    at that level which is 64 - making the next try 127.  It goes around the
    loop and finds and returns 127 skipping [64, 126].
    
    Note that this bug also triggers in idr_for_each_entry() loop which
    deletes during iteration as deletions can make layers go away leaving
    the iteration with unaligned ID into missing layers.
    
    Fix it by ensuring proceeding to the next slot doesn't carry over the
    unaligned offset - ie.  use round_up(id + 1, slot_distance) instead of
    id += slot_distance.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: David Teigland <teigland@redhat.com>
    Cc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2abb7d3a3cf05900a6d9cc6b98b1ba3aa432ce30
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Wed Feb 27 17:03:32 2013 -0800

    block: fix ext_devt_idr handling
    
    commit 7b74e912785a11572da43292786ed07ada7e3e0c upstream.
    
    While adding and removing a lot of disks disks and partitions this
    sometimes shows up:
    
      WARNING: at fs/sysfs/dir.c:512 sysfs_add_one+0xc9/0x130() (Not tainted)
      Hardware name:
      sysfs: cannot create duplicate filename '/dev/block/259:751'
      Modules linked in: raid1 autofs4 bnx2fc cnic uio fcoe libfcoe libfc 8021q scsi_transport_fc scsi_tgt garp stp llc sunrpc cpufreq_ondemand powernow_k8 freq_table mperf ipv6 dm_mirror dm_region_hash dm_log power_meter microcode dcdbas serio_raw amd64_edac_mod edac_core edac_mce_amd i2c_piix4 i2c_core k10temp bnx2 sg ixgbe dca mdio ext4 mbcache jbd2 dm_round_robin sr_mod cdrom sd_mod crc_t10dif ata_generic pata_acpi pata_atiixp ahci mptsas mptscsih mptbase scsi_transport_sas dm_multipath dm_mod [last unloaded: scsi_wait_scan]
      Pid: 44103, comm: async/16 Not tainted 2.6.32-195.el6.x86_64 #1
      Call Trace:
        warn_slowpath_common+0x87/0xc0
        warn_slowpath_fmt+0x46/0x50
        sysfs_add_one+0xc9/0x130
        sysfs_do_create_link+0x12b/0x170
        sysfs_create_link+0x13/0x20
        device_add+0x317/0x650
        idr_get_new+0x13/0x50
        add_partition+0x21c/0x390
        rescan_partitions+0x32b/0x470
        sd_open+0x81/0x1f0 [sd_mod]
        __blkdev_get+0x1b6/0x3c0
        blkdev_get+0x10/0x20
        register_disk+0x155/0x170
        add_disk+0xa6/0x160
        sd_probe_async+0x13b/0x210 [sd_mod]
        add_wait_queue+0x46/0x60
        async_thread+0x102/0x250
        default_wake_function+0x0/0x20
        async_thread+0x0/0x250
        kthread+0x96/0xa0
        child_rip+0xa/0x20
        kthread+0x0/0xa0
        child_rip+0x0/0x20
    
    This most likely happens because dev_t is freed while the number is
    still used and idr_get_new() is not protected on every use.  The fix
    adds a mutex where it wasn't before and moves the dev_t free function so
    it is called after device del.
    
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0ebab9088b68ea6dec0a91be63f837044c83f42a
Author: Xiaowei.Hu <xiaowei.hu@oracle.com>
Date:   Wed Feb 27 17:02:49 2013 -0800

    ocfs2: ac->ac_allow_chain_relink=0 won't disable group relink
    
    commit 309a85b6861fedbb48a22d45e0e079d1be993b3a upstream.
    
    ocfs2_block_group_alloc_discontig() disables chain relink by setting
    ac->ac_allow_chain_relink = 0 because it grabs clusters from multiple
    cluster groups.
    
    It doesn't keep the credits for all chain relink,but
    ocfs2_claim_suballoc_bits overrides this in this call trace:
    ocfs2_block_group_claim_bits()->ocfs2_claim_clusters()->
    __ocfs2_claim_clusters()->ocfs2_claim_suballoc_bits()
    ocfs2_claim_suballoc_bits set ac->ac_allow_chain_relink = 1; then call
    ocfs2_search_chain() one time and disable it again, and then we run out
    of credits.
    
    Fix is to allow relink by default and disable it in
    ocfs2_block_group_alloc_discontig.
    
    Without this patch, End-users will run into a crash due to run out of
    credits, backtrace like this:
    
      RIP: 0010:[<ffffffffa0808b14>]  [<ffffffffa0808b14>]
      jbd2_journal_dirty_metadata+0x164/0x170 [jbd2]
      RSP: 0018:ffff8801b919b5b8  EFLAGS: 00010246
      RAX: 0000000000000000 RBX: ffff88022139ddc0 RCX: ffff880159f652d0
      RDX: ffff880178aa3000 RSI: ffff880159f652d0 RDI: ffff880087f09bf8
      RBP: ffff8801b919b5e8 R08: 0000000000000000 R09: 0000000000000000
      R10: 0000000000001e00 R11: 00000000000150b0 R12: ffff880159f652d0
      R13: ffff8801a0cae908 R14: ffff880087f09bf8 R15: ffff88018d177800
      FS:  00007fc9b0b6b6e0(0000) GS:ffff88022fd40000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
      CR2: 000000000040819c CR3: 0000000184017000 CR4: 00000000000006e0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
      Process dd (pid: 9945, threadinfo ffff8801b919a000, task ffff880149a264c0)
      Call Trace:
        ocfs2_journal_dirty+0x2f/0x70 [ocfs2]
        ocfs2_relink_block_group+0x111/0x480 [ocfs2]
        ocfs2_search_chain+0x455/0x9a0 [ocfs2]
        ...
    
    Signed-off-by: Xiaowei.Hu <xiaowei.hu@oracle.com>
    Reviewed-by: Srinivas Eeda <srinivas.eeda@oracle.com>
    Cc: Mark Fasheh <mfasheh@suse.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 98e4a53174838511e5b4d8eb2d447b160258d001
Author: Jeff Liu <jeff.liu@oracle.com>
Date:   Wed Feb 27 17:02:48 2013 -0800

    ocfs2: fix ocfs2_init_security_and_acl() to initialize acl correctly
    
    commit 32918dd9f19e5960af4cdfa41190bb843fb2247b upstream.
    
    We need to re-initialize the security for a new reflinked inode with its
    parent dirs if it isn't specified to be preserved for ocfs2_reflink().
    However, the code logic is broken at ocfs2_init_security_and_acl()
    although ocfs2_init_security_get() succeed.  As a result,
    ocfs2_acl_init() does not involked and therefore the default ACL of
    parent dir was missing on the new inode.
    
    Note this was introduced by 9d8f13ba3 ("security: new
    security_inode_init_security API adds function callback")
    
    To reproduce:
    
        set default ACL for the parent dir(ocfs2 in this case):
        $ setfacl -m default:user:jeff:rwx ../ocfs2/
        $ getfacl ../ocfs2/
        # file: ../ocfs2/
        # owner: jeff
        # group: jeff
        user::rwx
        group::r-x
        other::r-x
        default:user::rwx
        default:user:jeff:rwx
        default:group::r-x
        default:mask::rwx
        default:other::r-x
    
        $ touch a
        $ getfacl a
        # file: a
        # owner: jeff
        # group: jeff
        user::rw-
        group::rw-
        other::r--
    
    Before patching, create reflink file b from a, the user
    default ACL entry(user:jeff:rwx)was missing:
    
        $ ./ocfs2_reflink a b
        $ getfacl b
        # file: b
        # owner: jeff
        # group: jeff
        user::rw-
        group::rw-
        other::r--
    
    In this case, the end user can also observed an error message at syslog:
    
      (ocfs2_reflink,3229,2):ocfs2_init_security_and_acl:7193 ERROR: status = 0
    
    After applying this patch, create reflink file c from a:
    
        $ ./ocfs2_reflink a c
        $ getfacl c
        # file: c
        # owner: jeff
        # group: jeff
        user::rw-
        user:jeff:rwx                       #effective:rw-
        group::r-x                  #effective:r--
        mask::rw-
        other::r--
    
    Test program:
    /* Usage: reflink <source> <dest> */
    #include <stdio.h>
    #include <stdint.h>
    #include <stdbool.h>
    #include <string.h>
    #include <errno.h>
    #include <sys/types.h>
    #include <sys/stat.h>
    #include <fcntl.h>
    #include <sys/ioctl.h>
    
    static int
    reflink_file(char const *src_name, char const *dst_name,
                 bool preserve_attrs)
    {
            int fd;
    
    #ifndef REFLINK_ATTR_NONE
    #  define REFLINK_ATTR_NONE 0
    #endif
    #ifndef REFLINK_ATTR_PRESERVE
    #  define REFLINK_ATTR_PRESERVE 1
    #endif
    #ifndef OCFS2_IOC_REFLINK
            struct reflink_arguments {
                    uint64_t old_path;
                    uint64_t new_path;
                    uint64_t preserve;
            };
    
    #  define OCFS2_IOC_REFLINK _IOW ('o', 4, struct reflink_arguments)
    #endif
            struct reflink_arguments args = {
                    .old_path = (unsigned long) src_name,
                    .new_path = (unsigned long) dst_name,
                    .preserve = preserve_attrs ? REFLINK_ATTR_PRESERVE :
                                                 REFLINK_ATTR_NONE,
            };
    
            fd = open(src_name, O_RDONLY);
            if (fd < 0) {
                    fprintf(stderr, "Failed to open %s: %s\n",
                            src_name, strerror(errno));
                    return -1;
            }
    
            if (ioctl(fd, OCFS2_IOC_REFLINK, &args) < 0) {
                    fprintf(stderr, "Failed to reflink %s to %s: %s\n",
                            src_name, dst_name, strerror(errno));
                    return -1;
            }
    }
    
    int
    main(int argc, char *argv[])
    {
            if (argc != 3) {
                    fprintf(stdout, "Usage: %s source dest\n", argv[0]);
                    return 1;
            }
    
            return reflink_file(argv[1], argv[2], 0);
    }
    
    Signed-off-by: Jie Liu <jeff.liu@oracle.com>
    Reviewed-by: Tao Ma <boyu.mt@taobao.com>
    Cc: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Mark Fasheh <mfasheh@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c2581d3df8552f9237245f85338f767c5a22660f
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Wed Feb 27 12:46:40 2013 -0800

    x86: Make sure we can boot in the case the BDA contains pure garbage
    
    commit 7c10093692ed2e6f318387d96b829320aa0ca64c upstream.
    
    On non-BIOS platforms it is possible that the BIOS data area contains
    garbage instead of being zeroed or something equivalent (firmware
    people: we are talking of 1.5K here, so please do the sane thing.)
    
    We need on the order of 20-30K of low memory in order to boot, which
    may grow up to < 64K in the future.  We probably want to avoid the
    lowest of the low memory.  At the same time, it seems extremely
    unlikely that a legitimate EBDA would ever reach down to the 128K
    (which would require it to be over half a megabyte in size.)  Thus,
    pick 128K as the cutoff for "this is insane, ignore."  We may still
    end up reserving a bunch of extra memory on the low megabyte, but that
    is not really a major issue these days.  In the worst case we lose
    512K of RAM.
    
    This code really should be merged with trim_bios_range() in
    arch/x86/kernel/setup.c, but that is a bigger patch for a later merge
    window.
    
    Reported-by: Darren Hart <dvhart@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Matt Fleming <matt.fleming@intel.com>
    Link: http://lkml.kernel.org/n/tip-oebml055yyfm8yxmria09rja@git.kernel.org
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d7763498ca68b50980381ce62187b86dcfdd0ba4
Author: Jan Kara <jack@suse.cz>
Date:   Wed Feb 20 13:16:39 2013 +1100

    ocfs2: fix possible use-after-free with AIO
    
    commit 9b171e0c74ca0549d0610990a862dd895870f04a upstream.
    
    Running AIO is pinning inode in memory using file reference. Once AIO
    is completed using aio_complete(), file reference is put and inode can
    be freed from memory. So we have to be sure that calling aio_complete()
    is the last thing we do with the inode.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Acked-by: Jeff Moyer <jmoyer@redhat.com>
    Acked-by: Joel Becker <jlbec@evilplan.org>
    Cc: Mark Fasheh <mfasheh@suse.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7479d5dd8b13e8b75e7233d094bca7b1935b9914
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Mon Feb 25 15:54:09 2013 -0500

    doc, kernel-parameters: Document 'console=hvc<n>'
    
    commit a2fd6419174470f5ae6383f5037d0ee21ed9833f upstream.
    
    Both the PowerPC hypervisor and Xen hypervisor can utilize the
    hvc driver.
    
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Link: http://lkml.kernel.org/r/1361825650-14031-3-git-send-email-konrad.wilk@oracle.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 560701883d7a0679e9186f145a2e43a77b447cff
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Mon Feb 25 15:54:08 2013 -0500

    doc, xen: Mention 'earlyprintk=xen' in the documentation.
    
    commit 2482a92e7d17187301d7313cfe5021b13393a0b4 upstream.
    
    The earlyprintk for Xen PV guests utilizes a simple hypercall
    (console_io) to provide output to Xen emergency console.
    
    Note that the Xen hypervisor should be booted with 'loglevel=all'
    to output said information.
    
    Reported-by: H. Peter Anvin <hpa@zytor.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Link: http://lkml.kernel.org/r/1361825650-14031-2-git-send-email-konrad.wilk@oracle.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e3efb0af9406a25d27c03407c288b187c95e8244
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Tue Jan 15 23:30:27 2013 +0800

    mmc: sdhci-esdhc-imx: fix host version read
    
    commit ef4d0888bb7e1b963880f086575081c3d39cad2d upstream.
    
    When commit 95a2482 (mmc: sdhci-esdhc-imx: add basic imx6q usdhc
    support) works around host version issue on imx6q, it gets the
    register address fixup "reg ^= 2" lost for imx25/35/51/53 esdhc.
    Thus, the controller version on these SoCs is wrongly identified
    as v1 while it's actually v2.
    
    Add the address fixup back and take a different approach to correct
    imx6q host version, so that the host version read gets back to work
    for all SoCs.
    
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Chris Ball <cjb@laptop.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2b82b58d6d1a3c79e28ce80c559a442e3d034b1a
Author: Greg Thelen <gthelen@google.com>
Date:   Fri Feb 22 16:36:01 2013 -0800

    tmpfs: fix use-after-free of mempolicy object
    
    commit 5f00110f7273f9ff04ac69a5f85bb535a4fd0987 upstream.
    
    The tmpfs remount logic preserves filesystem mempolicy if the mpol=M
    option is not specified in the remount request.  A new policy can be
    specified if mpol=M is given.
    
    Before this patch remounting an mpol bound tmpfs without specifying
    mpol= mount option in the remount request would set the filesystem's
    mempolicy object to a freed mempolicy object.
    
    To reproduce the problem boot a DEBUG_PAGEALLOC kernel and run:
        # mkdir /tmp/x
    
        # mount -t tmpfs -o size=100M,mpol=interleave nodev /tmp/x
    
        # grep /tmp/x /proc/mounts
        nodev /tmp/x tmpfs rw,relatime,size=102400k,mpol=interleave:0-3 0 0
    
        # mount -o remount,size=200M nodev /tmp/x
    
        # grep /tmp/x /proc/mounts
        nodev /tmp/x tmpfs rw,relatime,size=204800k,mpol=??? 0 0
            # note ? garbage in mpol=... output above
    
        # dd if=/dev/zero of=/tmp/x/f count=1
            # panic here
    
    Panic:
        BUG: unable to handle kernel NULL pointer dereference at           (null)
        IP: [<          (null)>]           (null)
        [...]
        Oops: 0010 [#1] SMP DEBUG_PAGEALLOC
        Call Trace:
          mpol_shared_policy_init+0xa5/0x160
          shmem_get_inode+0x209/0x270
          shmem_mknod+0x3e/0xf0
          shmem_create+0x18/0x20
          vfs_create+0xb5/0x130
          do_last+0x9a1/0xea0
          path_openat+0xb3/0x4d0
          do_filp_open+0x42/0xa0
          do_sys_open+0xfe/0x1e0
          compat_sys_open+0x1b/0x20
          cstar_dispatch+0x7/0x1f
    
    Non-debug kernels will not crash immediately because referencing the
    dangling mpol will not cause a fault.  Instead the filesystem will
    reference a freed mempolicy object, which will cause unpredictable
    behavior.
    
    The problem boils down to a dropped mpol reference below if
    shmem_parse_options() does not allocate a new mpol:
    
        config = *sbinfo
        shmem_parse_options(data, &config, true)
        mpol_put(sbinfo->mpol)
        sbinfo->mpol = config.mpol  /* BUG: saves unreferenced mpol */
    
    This patch avoids the crash by not releasing the mempolicy if
    shmem_parse_options() doesn't create a new mpol.
    
    How far back does this issue go? I see it in both 2.6.36 and 3.3.  I did
    not look back further.
    
    Signed-off-by: Greg Thelen <gthelen@google.com>
    Acked-by: Hugh Dickins <hughd@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9fb42c9a8a7c9aadfd2b4d404fd61bdd3b531bb1
Author: Mel Gorman <mgorman@suse.de>
Date:   Fri Feb 22 16:35:59 2013 -0800

    mm/fadvise.c: drain all pagevecs if POSIX_FADV_DONTNEED fails to discard all pages
    
    commit 67d46b296a1ba1477c0df8ff3bc5e0167a0b0732 upstream.
    
    Rob van der Heij reported the following (paraphrased) on private mail.
    
            The scenario is that I want to avoid backups to fill up the page
            cache and purge stuff that is more likely to be used again (this is
            with s390x Linux on z/VM, so I don't give it as much memory that
            we don't care anymore). So I have something with LD_PRELOAD that
            intercepts the close() call (from tar, in this case) and issues
            a posix_fadvise() just before closing the file.
    
            This mostly works, except for small files (less than 14 pages)
            that remains in page cache after the face.
    
    Unfortunately Rob has not had a chance to test this exact patch but the
    test program below should be reproducing the problem he described.
    
    The issue is the per-cpu pagevecs for LRU additions.  If the pages are
    added by one CPU but fadvise() is called on another then the pages
    remain resident as the invalidate_mapping_pages() only drains the local
    pagevecs via its call to pagevec_release().  The user-visible effect is
    that a program that uses fadvise() properly is not obeyed.
    
    A possible fix for this is to put the necessary smarts into
    invalidate_mapping_pages() to globally drain the LRU pagevecs if a
    pagevec page could not be discarded.  The downside with this is that an
    inode cache shrink would send a global IPI and memory pressure
    potentially causing global IPI storms is very undesirable.
    
    Instead, this patch adds a check during fadvise(POSIX_FADV_DONTNEED) to
    check if invalidate_mapping_pages() discarded all the requested pages.
    If a subset of pages are discarded it drains the LRU pagevecs and tries
    again.  If the second attempt fails, it assumes it is due to the pages
    being mapped, locked or dirty and does not care.  With this patch, an
    application using fadvise() correctly will be obeyed but there is a
    downside that a malicious application can force the kernel to send
    global IPIs and increase overhead.
    
    If accepted, I would like this to be considered as a -stable candidate.
    It's not an urgent issue but it's a system call that is not working as
    advertised which is weak.
    
    The following test program demonstrates the problem.  It should never
    report that pages are still resident but will without this patch.  It
    assumes that CPU 0 and 1 exist.
    
    int main() {
            int fd;
            int pagesize = getpagesize();
            ssize_t written = 0, expected;
            char *buf;
            unsigned char *vec;
            int resident, i;
            cpu_set_t set;
    
            /* Prepare a buffer for writing */
            expected = FILESIZE_PAGES * pagesize;
            buf = malloc(expected + 1);
            if (buf == NULL) {
                    printf("ENOMEM\n");
                    exit(EXIT_FAILURE);
            }
            buf[expected] = 0;
            memset(buf, 'a', expected);
    
            /* Prepare the mincore vec */
            vec = malloc(FILESIZE_PAGES);
            if (vec == NULL) {
                    printf("ENOMEM\n");
                    exit(EXIT_FAILURE);
            }
    
            /* Bind ourselves to CPU 0 */
            CPU_ZERO(&set);
            CPU_SET(0, &set);
            if (sched_setaffinity(getpid(), sizeof(set), &set) == -1) {
                    perror("sched_setaffinity");
                    exit(EXIT_FAILURE);
            }
    
            /* open file, unlink and write buffer */
            fd = open("fadvise-test-file", O_CREAT|O_EXCL|O_RDWR);
            if (fd == -1) {
                    perror("open");
                    exit(EXIT_FAILURE);
            }
            unlink("fadvise-test-file");
            while (written < expected) {
                    ssize_t this_write;
                    this_write = write(fd, buf + written, expected - written);
    
                    if (this_write == -1) {
                            perror("write");
                            exit(EXIT_FAILURE);
                    }
    
                    written += this_write;
            }
            free(buf);
    
            /*
             * Force ourselves to another CPU. If fadvise only flushes the local
             * CPUs pagevecs then the fadvise will fail to discard all file pages
             */
            CPU_ZERO(&set);
            CPU_SET(1, &set);
            if (sched_setaffinity(getpid(), sizeof(set), &set) == -1) {
                    perror("sched_setaffinity");
                    exit(EXIT_FAILURE);
            }
    
            /* sync and fadvise to discard the page cache */
            fsync(fd);
            if (posix_fadvise(fd, 0, expected, POSIX_FADV_DONTNEED) == -1) {
                    perror("posix_fadvise");
                    exit(EXIT_FAILURE);
            }
    
            /* map the file and use mincore to see which parts of it are resident */
            buf = mmap(NULL, expected, PROT_READ, MAP_SHARED, fd, 0);
            if (buf == NULL) {
                    perror("mmap");
                    exit(EXIT_FAILURE);
            }
            if (mincore(buf, expected, vec) == -1) {
                    perror("mincore");
                    exit(EXIT_FAILURE);
            }
    
            /* Check residency */
            for (i = 0, resident = 0; i < FILESIZE_PAGES; i++) {
                    if (vec[i])
                            resident++;
            }
            if (resident != 0) {
                    printf("Nr unexpected pages resident: %d\n", resident);
                    exit(EXIT_FAILURE);
            }
    
            munmap(buf, expected);
            close(fd);
            free(vec);
            exit(EXIT_SUCCESS);
    }
    
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    Reported-by: Rob van der Heij <rvdheij@gmail.com>
    Tested-by: Rob van der Heij <rvdheij@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 09454abba5062d829949a552502220d3666119e1
Author: Robin Holt <holt@sgi.com>
Date:   Fri Feb 22 16:35:34 2013 -0800

    mmu_notifier_unregister NULL Pointer deref and multiple ->release() callouts
    
    commit 751efd8610d3d7d67b7bdf7f62646edea7365dd7 upstream.
    
    There is a race condition between mmu_notifier_unregister() and
    __mmu_notifier_release().
    
    Assume two tasks, one calling mmu_notifier_unregister() as a result of a
    filp_close() ->flush() callout (task A), and the other calling
    mmu_notifier_release() from an mmput() (task B).
    
                    A                               B
    t1                                              srcu_read_lock()
    t2              if (!hlist_unhashed())
    t3                                              srcu_read_unlock()
    t4              srcu_read_lock()
    t5                                              hlist_del_init_rcu()
    t6                                              synchronize_srcu()
    t7              srcu_read_unlock()
    t8              hlist_del_rcu()  <--- NULL pointer deref.
    
    Additionally, the list traversal in __mmu_notifier_release() is not
    protected by the by the mmu_notifier_mm->hlist_lock which can result in
    callouts to the ->release() notifier from both mmu_notifier_unregister()
    and __mmu_notifier_release().
    
    -stable suggestions:
    
    The stable trees prior to 3.7.y need commits 21a92735f660 and
    70400303ce0c cherry-picked in that order prior to cherry-picking this
    commit.  The 3.7.y tree already has those two commits.
    
    Signed-off-by: Robin Holt <holt@sgi.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Wanpeng Li <liwanp@linux.vnet.ibm.com>
    Cc: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>
    Cc: Avi Kivity <avi@redhat.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Marcelo Tosatti <mtosatti@redhat.com>
    Cc: Sagi Grimberg <sagig@mellanox.co.il>
    Cc: Haggai Eran <haggaie@mellanox.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3d2b066c9254c7f03bdc2e8fb1714ed865947b40
Author: Andrea Arcangeli <aarcange@redhat.com>
Date:   Mon Oct 8 16:31:52 2012 -0700

    mm: mmu_notifier: make the mmu_notifier srcu static
    
    commit 70400303ce0c4ced3139499c676d5c79636b0c72 upstream.
    
    The variable must be static especially given the variable name.
    
    s/RCU/SRCU/ over a few comments.
    
    Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>
    Cc: Sagi Grimberg <sagig@mellanox.com>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Haggai Eran <haggaie@mellanox.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 80da2799fe53edf15fd33f19ebd32c57d645bbb6
Author: Sagi Grimberg <sagig@mellanox.co.il>
Date:   Mon Oct 8 16:29:24 2012 -0700

    mm: mmu_notifier: have mmu_notifiers use a global SRCU so they may safely schedule
    
    commit 21a92735f660eaecf69a6f2e777f18463760ec32 upstream.
    
    With an RCU based mmu_notifier implementation, any callout to
    mmu_notifier_invalidate_range_{start,end}() or
    mmu_notifier_invalidate_page() would not be allowed to call schedule()
    as that could potentially allow a modification to the mmu_notifier
    structure while it is currently being used.
    
    Since srcu allocs 4 machine words per instance per cpu, we may end up
    with memory exhaustion if we use srcu per mm.  So all mms share a global
    srcu.  Note that during large mmu_notifier activity exit & unregister
    paths might hang for longer periods, but it is tolerable for current
    mmu_notifier clients.
    
    Signed-off-by: Sagi Grimberg <sagig@mellanox.co.il>
    Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Haggai Eran <haggaie@mellanox.com>
    Cc: "Paul E. McKenney" <paulmck@us.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 819a56e867d8e4ebe87060eaf576c0032a8963c2
Author: Phileas Fogg <phileas-fogg@mail.ru>
Date:   Sat Feb 23 00:32:19 2013 +0100

    powerpc/kexec: Disable hard IRQ before kexec
    
    commit 8520e443aa56cc157b015205ea53e7b9fc831291 upstream.
    
    Disable hard IRQ before kexec a new kernel image.
    Not doing it can result in corrupted data in the memory segments
    reserved for the new kernel.
    
    Signed-off-by: Phileas Fogg <phileas-fogg@mail.ru>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 53edcd239765c93597d079ac98858916d1f724f4
Author: Jan Kara <jack@suse.cz>
Date:   Wed Jan 30 00:28:01 2013 +0100

    fs: Fix possible use-after-free with AIO
    
    commit 54c807e71d5ac59dee56c685f2b66e27cd54c475 upstream.
    
    Running AIO is pinning inode in memory using file reference. Once AIO
    is completed using aio_complete(), file reference is put and inode can
    be freed from memory. So we have to be sure that calling aio_complete()
    is the last thing we do with the inode.
    
    CC: Christoph Hellwig <hch@infradead.org>
    CC: Jens Axboe <axboe@kernel.dk>
    CC: Jeff Moyer <jmoyer@redhat.com>
    Acked-by: Jeff Moyer <jmoyer@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 668f6e6afe49c6c7d16bb99f2d9e2baa4a14fb44
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Fri Feb 22 15:27:52 2013 -0500

    ext4: fix free clusters calculation in bigalloc filesystem
    
    commit 304e220f0879198b1f5309ad6f0be862b4009491 upstream.
    
    ext4_has_free_clusters() should tell us whether there is enough free
    clusters to allocate, however number of free clusters in the file system
    is converted to blocks using EXT4_C2B() which is not only wrong use of
    the macro (we should have used EXT4_NUM_B2C) but it's also completely
    wrong concept since everything else is in cluster units.
    
    Moreover when calculating number of root clusters we should be using
    macro EXT4_NUM_B2C() instead of EXT4_B2C() otherwise the result might be
    off by one. However r_blocks_count should always be a multiple of the
    cluster ratio so doing a plain bit shift should be enough here. We
    avoid using EXT4_B2C() because it's confusing.
    
    As a result of the first problem number of free clusters is much bigger
    than it should have been and ext4_has_free_clusters() would return 1 even
    if there is really not enough free clusters available.
    
    Fix this by removing the EXT4_C2B() conversion of free clusters and
    using bit shift when calculating number of root clusters. This bug
    affects number of xfstests tests covering file system ENOSPC situation
    handling. With this patch most of the ENOSPC problems with bigalloc file
    system disappear, especially the errors caused by delayed allocation not
    having enough space when the actual allocation is finally requested.
    
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8ca4e7b9a92a55c8e47e654013aea9e61968bc61
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Thu Feb 21 16:44:04 2013 -0800

    drivers/video/backlight/adp88?0_bl.c: fix resume
    
    commit 5eb02c01bd1f3ef195989ab05e835e2b0711b5a9 upstream.
    
    Clearing the NSTBY bit in the control register also automatically clears
    the BLEN bit.  So we need to make sure to set it again during resume,
    otherwise the backlight will stay off.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9ba3d1e2eb9dfa96b0b5c53fe77c09d2f4e2d292
Author: Junxiao Bi <junxiao.bi@oracle.com>
Date:   Thu Feb 21 16:42:45 2013 -0800

    ocfs2: unlock super lock if lockres refresh failed
    
    commit 3278bb748d2437eb1464765f36429e5d6aa91c38 upstream.
    
    If lockres refresh failed, the super lock will never be released which
    will cause some processes on other cluster nodes hung forever.
    
    Signed-off-by: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Mark Fasheh <mfasheh@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 65a79a3b36345cab460edef6c71f08d89db2ae03
Author: MITSUNARI Shigeo <herumi@nifty.com>
Date:   Thu Feb 21 16:42:01 2013 -0800

    fs/block_dev.c: page cache wrongly left invalidated after revalidate_disk()
    
    commit 7630b661da330b35dd57b6f5d6d62b386f2dd751 upstream.
    
    We found that bdev->bd_invalidated was left set once revalidate_disk()
    is called, which results in page cache flush every time that device is
    open.
    
    Specifically, we found this problem in MD block device.  Once we resize
    a MD device, mdadm --monitor periodically flush all page cache for that
    device every 60 or 1000 seconds when it opens the device.
    
    This bug lies since at least 3.2.0 till the latest kernel(3.6.2).  Patch
    is attached.
    
    The following steps will reproduce the problem.
    
    1. prepair a block device (eg /dev/sdb).
    
    2. create two partitions:
    
       sudo parted /dev/sdb
       mklabel gpt
       mkpart primary 0% 50%
       mkpart primary 50% 100%
    
    3. create a md device.
    
       sudo mdadm -C /dev/md/hoge -l 1 -n 2 -e 1.2 --assume-clean --auto=md --symlink=no /dev/sdb1 /dev/sdb2
    
    4. create file system and mount it
    
       sudo mkfs.ext3 /dev/md/hoge
       sudo mkdir /mnt/test
       sudo mount /dev/md/hoge /mnt/test
    
    5. try to resize the device
    
       sudo mdadm -G /dev/md/hoge --size=max
    
    6. create a file to fill file cache.
    
      sudo dd if=/dev/urandom of=/mnt/test/data bs=1M count=10
    
    and verify the current status of file by free command.
    
    7. mdadm monitor will open the md device every 1000 seconds and you
       will find all file cache on the device are cleared.
    
    The timing can be reduced by the following steps.
    
    a) kill mdadm and restart it with --delay option
    
       /sbin/mdadm --monitor --delay=30 --pid-file /var/run/mdadm/monitor.pid --daemonise --scan --syslog
    
    or open the md device directly.
    
       sudo dd if=/dev/md/hoge of=/dev/null bs=4096 count=1
    
    Signed-off-by: MITSUNARI Shigeo <herumi@nifty.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Jeff Moyer <jmoyer@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c8164cb53aaf4c8a9e189fce2c5b5f67bfbf7291
Author: Jim Somerville <Jim.Somerville@windriver.com>
Date:   Thu Feb 21 16:41:59 2013 -0800

    inotify: remove broken mask checks causing unmount to be EINVAL
    
    commit 676a0675cf9200ac047fb50825f80867b3bb733b upstream.
    
    Running the command:
    
            inotifywait -e unmount /mnt/disk
    
    immediately aborts with a -EINVAL return code.  This is however a valid
    parameter.  This abort occurs only if unmount is the sole event
    parameter.  If other event parameters are supplied, then the unmount
    event wait will work.
    
    The problem was introduced by commit 44b350fc23e ("inotify: Fix mask
    checks").  In that commit, it states:
    
            The mask checks in inotify_update_existing_watch() and
            inotify_new_watch() are useless because inotify_arg_to_mask()
            sets FS_IN_IGNORED and FS_EVENT_ON_CHILD bits anyway.
    
    But instead of removing the useless checks, it did this:
    
                    mask = inotify_arg_to_mask(arg);
            -       if (unlikely(!mask))
            +       if (unlikely(!(mask & IN_ALL_EVENTS)))
                            return -EINVAL;
    
    The problem is that IN_ALL_EVENTS doesn't include IN_UNMOUNT, and other
    parts of the code keep IN_UNMOUNT separate from IN_ALL_EVENTS.  So the
    check should be:
    
            if (unlikely(!(mask & (IN_ALL_EVENTS | IN_UNMOUNT))))
    
    But inotify_arg_to_mask(arg) always sets the IN_UNMOUNT bit in the mask
    anyway, so the check is always going to pass and thus should simply be
    removed.  Also note that inotify_arg_to_mask completely controls what
    mask bits get set from arg, there's no way for invalid bits to get
    enabled there.
    
    Lets fix it by simply removing the useless broken checks.
    
    Signed-off-by: Jim Somerville <Jim.Somerville@windriver.com>
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Jerome Marchand <jmarchan@redhat.com>
    Cc: John McCutchan <john@johnmccutchan.com>
    Cc: Robert Love <rlove@rlove.org>
    Cc: Eric Paris <eparis@parisplace.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4fa1b6edec2f38073f34bb4cd8306e200c3c750c
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Feb 20 15:24:12 2013 -0800

    posix-timer: Don't call idr_find() with out-of-range ID
    
    commit e182bb38d7db7494fa5dcd82da17fe0dedf60ecf upstream.
    
    When idr_find() was fed a negative ID, it used to look up the ID
    ignoring the sign bit before recent ("idr: remove MAX_IDR_MASK and
    move left MAX_IDR_* into idr.c") patch. Now a negative ID triggers
    a WARN_ON_ONCE().
    
    __lock_timer() feeds timer_id from userland directly to idr_find()
    without sanitizing it which can trigger the above malfunctions.  Add a
    range check on @timer_id before invoking idr_find() in __lock_timer().
    
    While timer_t is defined as int by all archs at the moment, Andrew
    worries that it may be defined as a larger type later on.  Make the
    test cover larger integers too so that it at least is guaranteed to
    not return the wrong timer.
    
    Note that WARN_ON_ONCE() in idr_find() on id < 0 is transitional
    precaution while moving away from ignoring MSB.  Once it's gone we can
    remove the guard as long as timer_t isn't larger than int.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>nnn
    Reported-by: Sasha Levin <sasha.levin@oracle.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Link: http://lkml.kernel.org/r/20130220232412.GL3570@htj.dyndns.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7d3cbb434e8a45001d21bfc3ad31738409e9d517
Author: Pawel Moll <mail@pawelmoll.com>
Date:   Thu Feb 21 01:55:50 2013 +0000

    ALSA: usb: Fix Processing Unit Descriptor parsers
    
    commit b531f81b0d70ffbe8d70500512483227cc532608 upstream.
    
    Commit 99fc86450c439039d2ef88d06b222fd51a779176 "ALSA: usb-mixer:
    parse descriptors with structs" introduced a set of useful parsers
    for descriptors. Unfortunately the parses for the Processing Unit
    Descriptor came with a very subtle bug...
    
    Functions uac_processing_unit_iProcessing() and
    uac_processing_unit_specific() were indexing the baSourceID array
    forgetting the fields before the iProcessing and process-specific
    descriptors.
    
    The problem was observed with Sound Blaster Extigy mixer,
    where nNrModes in Up/Down-mix Processing Unit Descriptor
    was accessed at offset 10 of the descriptor (value 0)
    instead of offset 15 (value 7). In result the resulting
    control had interesting limit values:
    
    Simple mixer control 'Channel Routing Mode Select',0
      Capabilities: volume volume-joined penum
      Playback channels: Mono
      Capture channels: Mono
      Limits: 0 - -1
      Mono: -1 [100%]
    
    Fixed by starting from the bmControls, which was calculated
    correctly, instead of baSourceID.
    
    Now the mentioned control is fine:
    
    Simple mixer control 'Channel Routing Mode Select',0
      Capabilities: volume volume-joined penum
      Playback channels: Mono
      Capture channels: Mono
      Limits: 0 - 6
      Mono: 0 [0%]
    
    Signed-off-by: Pawel Moll <mail@pawelmoll.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1a116473beaf0b6c1ca6bfe18967094ce513f029
Author: Matt Fleming <matt.fleming@intel.com>
Date:   Wed Feb 20 20:36:12 2013 +0000

    x86, efi: Make "noefi" really disable EFI runtime serivces
    
    commit fb834c7acc5e140cf4f9e86da93a66de8c0514da upstream.
    
    commit 1de63d60cd5b ("efi: Clear EFI_RUNTIME_SERVICES rather than
    EFI_BOOT by "noefi" boot parameter") attempted to make "noefi" true to
    its documentation and disable EFI runtime services to prevent the
    bricking bug described in commit e0094244e41c ("samsung-laptop:
    Disable on EFI hardware"). However, it's not possible to clear
    EFI_RUNTIME_SERVICES from an early param function because
    EFI_RUNTIME_SERVICES is set in efi_init() *after* parse_early_param().
    
    This resulted in "noefi" effectively becoming a no-op and no longer
    providing users with a way to disable EFI, which is bad for those
    users that have buggy machines.
    
    Reported-by: Walt Nelson Jr <walt0924@gmail.com>
    Cc: Satoru Takeuchi <takeuchi_satoru@jp.fujitsu.com>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>
    Link: http://lkml.kernel.org/r/1361392572-25657-1-git-send-email-matt@console-pimps.org
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    [bwh: Backported to 3.2: efi_runtime_init() is not a separate function,
     so put a whole set of statements in an if (!disable_runtime) block]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7afb6c33d409713fd204557c183bbe47c4983ea8
Author: Stefan Bader <stefan.bader@canonical.com>
Date:   Fri Feb 15 09:48:52 2013 +0100

    xen: Send spinlock IPI to all waiters
    
    commit 76eaca031f0af2bb303e405986f637811956a422 upstream.
    
    There is a loophole between Xen's current implementation of
    pv-spinlocks and the scheduler. This was triggerable through
    a testcase until v3.6 changed the TLB flushing code. The
    problem potentially is still there just not observable in the
    same way.
    
    What could happen was (is):
    
    1. CPU n tries to schedule task x away and goes into a slow
       wait for the runq lock of CPU n-# (must be one with a lower
       number).
    2. CPU n-#, while processing softirqs, tries to balance domains
       and goes into a slow wait for its own runq lock (for updating
       some records). Since this is a spin_lock_irqsave in softirq
       context, interrupts will be re-enabled for the duration of
       the poll_irq hypercall used by Xen.
    3. Before the runq lock of CPU n-# is unlocked, CPU n-1 receives
       an interrupt (e.g. endio) and when processing the interrupt,
       tries to wake up task x. But that is in schedule and still
       on_cpu, so try_to_wake_up goes into a tight loop.
    4. The runq lock of CPU n-# gets unlocked, but the message only
       gets sent to the first waiter, which is CPU n-# and that is
       busily stuck.
    5. CPU n-# never returns from the nested interruption to take and
       release the lock because the scheduler uses a busy wait.
       And CPU n never finishes the task migration because the unlock
       notification only went to CPU n-#.
    
    To avoid this and since the unlocking code has no real sense of
    which waiter is best suited to grab the lock, just send the IPI
    to all of them. This causes the waiters to return from the hyper-
    call (those not interrupted at least) and do active spinlocking.
    
    BugLink: http://bugs.launchpad.net/bugs/1011792
    
    Acked-by: Jan Beulich <JBeulich@suse.com>
    Signed-off-by: Stefan Bader <stefan.bader@canonical.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c03cebd18980114fd931e30dbaf05c5982268ea4
Author: Wei Liu <wei.liu2@citrix.com>
Date:   Mon Feb 18 14:57:58 2013 +0000

    xen: close evtchn port if binding to irq fails
    
    commit e7e44e444876478d50630f57b0c31d29f6725020 upstream.
    
    Signed-off-by: Wei Liu <wei.liu2@citrix.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit cf65e1c8b3974df5bbf5b7cfbebbd125485d3a48
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Mon Jan 21 19:48:59 2013 +0100

    intel/iommu: force writebuffer-flush quirk on Gen 4 Chipsets
    
    commit 210561ffd72d00eccf12c0131b8024d5436bae95 upstream.
    
    We already have the quirk entry for the mobile platform, but also
    reports on some desktop versions. So be paranoid and set it
    everywhere.
    
    References: http://www.mail-archive.com/dri-devel@lists.freedesktop.org/msg33138.html
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: "Sankaran, Rajesh" <rajesh.sankaran@intel.com>
    Reported-and-tested-by: Mihai Moldovan <ionic@ionic.de>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9ee8bc68e866f3aec6a8a563b8e044f0b2e24532
Author: Patrik Jakobsson <patrik.r.jakobsson@gmail.com>
Date:   Wed Feb 13 22:20:22 2013 +0100

    drm/i915: Set i9xx sdvo clock limits according to specifications
    
    commit 4f7dfb6788dd022446847fbbfbe45e13bedb5be2 upstream.
    
    The Intel PRM says the M1 and M2 divisors must be in the range of 10-20 and 5-9.
    Since we do all calculations based on them being register values (which are
    subtracted by 2) we need to specify them accordingly.
    
    Signed-off-by: Patrik Jakobsson <patrik.r.jakobsson@gmail.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=56359
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 59bebf6c060bc75ebda8c37e205c690249588238
Author: Jani Nikula <jani.nikula@intel.com>
Date:   Thu Feb 14 11:23:35 2013 +0200

    drm/i915: add missing \n to UTS_RELEASE in the error_state
    
    commit fdfa175d0a9cfa2082ce24e67e284e5acbba452a upstream.
    
    Amending
    commit 4518f611ba21ba165ea3714055938a8984a44ff9
    Author: Daniel Vetter <daniel.vetter@ffwll.ch>
    Date:   Wed Jan 23 16:16:35 2013 +0100
    
        drm/i915: dump UTS_RELEASE into the error_state
    
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit db0a8a8700cae3057b9f8b4d50056aa6a2fa2600
Author: Mika Kuoppala <mika.kuoppala@linux.intel.com>
Date:   Fri Feb 8 16:35:37 2013 +0200

    drm/i915: disable shared panel fitter for pipe
    
    commit 24a1f16de97c4cf0029d9acd04be06db32208726 upstream.
    
    If encoder is switched off by BIOS, but the panel fitter is left on,
    we never try to turn off the panel fitter and leave it still attached
    to the pipe - which can cause blurry output elsewhere.
    
    Based on work by Chris Wilson <chris@chris-wilson.co.uk>
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=58867
    Signed-off-by: Mika Kuoppala <mika.kuoppala@intel.com>
    Tested-by: Andreas Sturmlechner <andreas.sturmlechner@gmail.com>
    [danvet: Remove the redundant HAS_PCH_SPLIT check and add a tiny
    comment.]
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7a8e149e6a8c3f03777dc31582415d3b9ce71ced
Author: Paulo Zanoni <paulo.r.zanoni@intel.com>
Date:   Fri Feb 15 13:36:27 2013 -0200

    drm: don't add inferred modes for monitors that don't support them
    
    commit 196e077dc165a307efbd9e7569f81bbdbcf18f65 upstream.
    
    If bit 0 of the features byte (0x18) is set to 0, then, according to
    the EDID spec, "the display is non-continuous frequency (multi-mode)
    and is only specified to accept the video timing formats that are
    listed in Base EDID and certain Extension Blocks".
    
    For more information, please see the EDID spec, check the notes of the
    table that explains the "Feature Support" byte (18h) and also the
    notes on the tables of the section that explains "Display Range Limits
    & Additional Timing Description Definition (tag #FDh)".
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=45729
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: Adam Jackson <ajax@redhat.com>
    Signed-off-by: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0b9662bc67d91cf8ce3a7b8f88fa12bbd5eba153
Author: Jan Beulich <JBeulich@suse.com>
Date:   Thu Dec 20 10:31:11 2012 +0000

    xen-blkback: do not leak mode property
    
    commit 9d092603cc306ee6edfe917bf9ab8beb5f32d7bc upstream.
    
    "be->mode" is obtained from xenbus_read(), which does a kmalloc() for
    the message body. The short string is never released, so do it along
    with freeing "be" itself, and make sure the string isn't kept when
    backend_changed() doesn't complete successfully (which made it
    desirable to slightly re-structure that function, so that the error
    cleanup can be done in one place).
    
    Reported-by: Olaf Hering <olaf@aepfle.de>
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit dd250c184bc8eb81e7c994884046b4255ec98df6
Author: David Henningsson <david.henningsson@canonical.com>
Date:   Tue Feb 19 16:11:22 2013 +0100

    ALSA: hda - hdmi: ELD shouldn't be valid after unplug
    
    commit bbfd8a19b6913f50a362457c34d49bfafe5e456e upstream.
    
    Currently, eld_valid is never set to false, except at kernel module
    load time. This patch makes sure that eld is no longer valid when
    the cable is (hot-)unplugged.
    
    Signed-off-by: David Henningsson <david.henningsson@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c0bb151f11915056a9457bc9234de5c0fe9c4d2c
Author: Trond Myklebust <Trond.Myklebust@netapp.com>
Date:   Tue Feb 19 12:04:42 2013 -0500

    NLM: Ensure that we resend all pending blocking locks after a reclaim
    
    commit 666b3d803a511fbc9bc5e5ea8ce66010cf03ea13 upstream.
    
    Currently, nlmclnt_lock will break out of the for(;;) loop when
    the reclaimer wakes up the blocking lock thread by setting
    nlm_lck_denied_grace_period. This causes the lock request to fail
    with an ENOLCK error.
    The intention was always to ensure that we resend the lock request
    after the grace period has expired.
    
    Reported-by: Wangyuan Zhang <Wangyuan.Zhang@netapp.com>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit c6f8eab7b3f687d2642e2c6e99da46d9dcef3927
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Sun Feb 17 17:01:20 2013 +0000

    b43: Increase number of RX DMA slots
    
    commit ccae0e50c16a7f7adb029c169147400d1ce9f703 upstream.
    
    Bastian Bittorf reported that some of the silent freezes on a Linksys WRT54G
    were due to overflow of the RX DMA ring buffer, which was created with 64
    slots. That finding reminded me that I was seeing similar crashed on a netbook,
    which also has a relatively slow processor. After increasing the number of
    slots to 128, runs on the netbook that previously failed now worked; however,
    I found that 109 slots had been used in one test. For that reason, the number
    of slots is being increased to 256.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Cc: Bastian Bittorf <bittorf@bluebottle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a638e6bbea546a265787029b5016a85af494967f
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Wed Feb 13 15:18:38 2013 -0500

    ftrace: Call ftrace cleanup module notifier after all other notifiers
    
    commit 8c189ea64eea01ca20d102ddb74d6936dd16c579 upstream.
    
    Commit: c1bf08ac "ftrace: Be first to run code modification on modules"
    
    changed ftrace module notifier's priority to INT_MAX in order to
    process the ftrace nops before anything else could touch them
    (namely kprobes). This was the correct thing to do.
    
    Unfortunately, the ftrace module notifier also contains the ftrace
    clean up code. As opposed to the set up code, this code should be
    run *after* all the module notifiers have run in case a module is doing
    correct clean-up and unregisters its ftrace hooks. Basically, ftrace
    needs to do clean up on module removal, as it needs to know about code
    being removed so that it doesn't try to modify that code. But after it
    removes the module from its records, if a ftrace user tries to remove
    a probe, that removal will fail due as the record of that code segment
    no longer exists.
    
    Nothing really bad happens if the probe removal is called after ftrace
    did the clean up, but the ftrace removal function will return an error.
    Correct code (such as kprobes) will produce a WARN_ON() if it fails
    to remove the probe. As people get annoyed by frivolous warnings, it's
    best to do the ftrace clean up after everything else.
    
    By splitting the ftrace_module_notifier into two notifiers, one that
    does the module load setup that is run at high priority, and the other
    that is called for module clean up that is run at low priority, the
    problem is solved.
    
    Reported-by: Frank Ch. Eigler <fche@redhat.com>
    Acked-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5f5db37d7a8f41489e766a137dd25409a020c677
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Mon Feb 18 18:31:37 2013 -0800

    target: Add missing mapped_lun bounds checking during make_mappedlun setup
    
    commit fbbf8555a986ed31e54f006b6cc637ea4ff1425b upstream.
    
    This patch adds missing bounds checking for the configfs provided
    mapped_lun value during target_fabric_make_mappedlun() setup ahead
    of se_lun_acl initialization.
    
    This addresses a potential OOPs when using a mapped_lun value that
    exceeds the hardcoded TRANSPORT_MAX_LUNS_PER_TPG-1 value within
    se_node_acl->device_list[].
    
    Reported-by: Jan Engelhardt <jengelh@inai.de>
    Cc: Jan Engelhardt <jengelh@inai.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f310bed9032a920cc5c7adb873caa0191fdf760e
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Mon Feb 18 18:00:33 2013 -0800

    target: Fix lookup of dynamic NodeACLs during cached demo-mode operation
    
    commit fcf29481fb8e106daad6688f2e898226ee928992 upstream.
    
    This patch fixes a bug in core_tpg_check_initiator_node_acl() ->
    core_tpg_get_initiator_node_acl() where a dynamically created
    se_node_acl generated during session login would be skipped during
    subsequent lookup due to the '!acl->dynamic_node_acl' check, causing
    a new se_node_acl to be created with a duplicate ->initiatorname.
    
    This would occur when a fabric endpoint was configured with
    TFO->tpg_check_demo_mode()=1 + TPF->tpg_check_demo_mode_cache()=1
    preventing the release of an existing se_node_acl during se_session
    shutdown.
    
    Also, drop the unnecessary usage of core_tpg_get_initiator_node_acl()
    within core_dev_init_initiator_node_lun_acl() that originally
    required the extra '!acl->dynamic_node_acl' check, and just pass
    the configfs provided se_node_acl pointer instead.
    
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    [bwh: Backported to 3.2: adjust context, filename of header]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9e2282d4b05fdc74ef5677174d3146494dff64a9
Author: Jussi Kivilinna <jussi.kivilinna@mbnet.fi>
Date:   Mon Feb 18 10:29:30 2013 +0200

    rtlwifi: usb: allocate URB control message setup_packet and data buffer separately
    
    commit bc6b89237acb3dee6af6e64e51a18255fef89cc2 upstream.
    
    rtlwifi allocates both setup_packet and data buffer of control message urb,
    using shared kmalloc in _usbctrl_vendorreq_async_write. Structure used for
    allocating is:
            struct {
                    u8 data[254];
                    struct usb_ctrlrequest dr;
            };
    
    Because 'struct usb_ctrlrequest' is __packed, setup packet is unaligned and
    DMA mapping of both 'data' and 'dr' confuses ARM/sunxi, leading to memory
    corruptions and freezes.
    
    Patch changes setup packet to be allocated separately.
    
    [v2]:
     - Use WARN_ON_ONCE instead of WARN_ON
    
    Signed-off-by: Jussi Kivilinna <jussi.kivilinna@mbnet.fi>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0d15de8ef0b034aa2829ed18492a08789a6ece8a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Feb 18 09:58:02 2013 -0800

    mm: fix pageblock bitmap allocation
    
    commit 7c45512df987c5619db041b5c9b80d281e26d3db upstream.
    
    Commit c060f943d092 ("mm: use aligned zone start for pfn_to_bitidx
    calculation") fixed out calculation of the index into the pageblock
    bitmap when a !SPARSEMEM zome was not aligned to pageblock_nr_pages.
    
    However, the _allocation_ of that bitmap had never taken this alignment
    requirement into accout, so depending on the exact size and alignment of
    the zone, the use of that index could then access past the allocation,
    resulting in some very subtle memory corruption.
    
    This was reported (and bisected) by Ingo Molnar: one of his random
    config builds would hang with certain very specific kernel command line
    options.
    
    In the meantime, commit c060f943d092 has been marked for stable, so this
    fix needs to be back-ported to the stable kernels that backported the
    commit to use the right alignment.
    
    Bisected-and-tested-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Mel Gorman <mgorman@suse.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f861f64d9250a14a1b84e1edf3f6d0531fc37a0c
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Mon Feb 18 12:12:07 2013 -0500

    ext4: fix xattr block allocation/release with bigalloc
    
    commit 1231b3a1eb5740192aeebf5344dd6d6da000febf upstream.
    
    Currently when new xattr block is created or released we we would call
    dquot_free_block() or dquot_alloc_block() respectively, among the else
    decrementing or incrementing the number of blocks assigned to the
    inode by one block.
    
    This however does not work for bigalloc file system because we always
    allocate/free the whole cluster so we have to count with that in
    dquot_free_block() and dquot_alloc_block() as well.
    
    Use the clusters-to-blocks conversion EXT4_C2B() when passing number of
    blocks to the dquot_alloc/free functions to fix the problem.
    
    The problem has been revealed by xfstests #117 (and possibly others).
    
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Reviewed-by: Eric Sandeen <sandeen@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 59222bdd5b2a0e4f868d867a71397945236c1412
Author: Li Zefan <lizefan@huawei.com>
Date:   Fri Jan 25 16:08:01 2013 +0800

    cpuset: fix cpuset_print_task_mems_allowed() vs rename() race
    
    commit 63f43f55c9bbc14f76b582644019b8a07dc8219a upstream.
    
    rename() will change dentry->d_name. The result of this race can
    be worse than seeing partially rewritten name, but we might access
    a stale pointer because rename() will re-allocate memory to hold
    a longer name.
    
    It's safe in the protection of dentry->d_lock.
    
    v2: check NULL dentry before acquiring dentry lock.
    
    Signed-off-by: Li Zefan <lizefan@huawei.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d6f179e6f4e2dd693f848bb4e06176a01a6553ab
Author: Li Zefan <lizefan@huawei.com>
Date:   Thu Jan 24 14:43:28 2013 +0800

    cgroup: fix exit() vs rmdir() race
    
    commit 71b5707e119653039e6e95213f00479668c79b75 upstream.
    
    In cgroup_exit() put_css_set_taskexit() is called without any lock,
    which might lead to accessing a freed cgroup:
    
    thread1                           thread2
    ---------------------------------------------
    exit()
      cgroup_exit()
        put_css_set_taskexit()
          atomic_dec(cgrp->count);
                                       rmdir();
          /* not safe !! */
          check_for_release(cgrp);
    
    rcu_read_lock() can be used to make sure the cgroup is alive.
    
    Signed-off-by: Li Zefan <lizefan@huawei.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a6a26fe018f2e369692ba098c02d51728acb14e8
Author: fanchaoting <fanchaoting@cn.fujitsu.com>
Date:   Mon Feb 4 21:15:02 2013 +0800

    umount oops when remove blocklayoutdriver first
    
    commit 5a12cca697aca5dfba42a7d4c3356acc0445a2b0 upstream.
    
    now pnfs client uses block layout, maybe we can remove
    blocklayoutdriver first. if we umount later,
    it can cause oops in unset_pnfs_layoutdriver.
    because nfss->pnfs_curr_ld->clear_layoutdriver is invalid.
    
    reproduce it:
     modprobe  blocklayoutdriver
     mount -t nfs4 -o minorversion=1 pnfsip:/ /mnt/
     rmmod blocklayoutdriver
     umount /mnt
    
    then you can see following
    
    CPU 0
    Pid: 17023, comm: umount.nfs4 Tainted: GF          O 3.7.0-rc6-pnfs #1 VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform
    RIP: 0010:[<ffffffffa04cfe6d>]  [<ffffffffa04cfe6d>] unset_pnfs_layoutdriver+0x1d/0x70 [nfsv4]
    RSP: 0018:ffff8800022d9e48  EFLAGS: 00010286
    RAX: ffffffffa04a1b00 RBX: ffff88000b013800 RCX: 0000000000000001
    RDX: ffffffff81ae8ee0 RSI: ffff880001ee94b8 RDI: ffff88000b013800
    RBP: ffff8800022d9e58 R08: 0000000000000001 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: ffff880001ee9400
    R13: ffff8800105978c0 R14: 00007fff25846c08 R15: 0000000001bba550
    FS:  00007f45ae7f0700(0000) GS:ffff880012c00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    CR2: ffffffffa04a1b38 CR3: 0000000002c0c000 CR4: 00000000000006f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
    Process umount.nfs4 (pid: 17023, threadinfo ffff8800022d8000, task ffff880006e48aa0)
    Stack:
    ffff8800105978c0 ffff88000b013800 ffff8800022d9e78 ffffffffa04cd0ce
    ffff8800022d9e78 ffff88000b013800 ffff8800022d9ea8 ffffffffa04755a7
    ffff8800022d9ea8 ffff880002f96400 ffff88000b013800 ffff880002f96400
    Call Trace:
    [<ffffffffa04cd0ce>] nfs4_destroy_server+0x1e/0x30 [nfsv4]
    [<ffffffffa04755a7>] nfs_free_server+0xb7/0x150 [nfs]
    [<ffffffffa047d4d5>] nfs_kill_super+0x35/0x40 [nfs]
    [<ffffffff81178d35>] deactivate_locked_super+0x45/0x70
    [<ffffffff8117986a>] deactivate_super+0x4a/0x70
    [<ffffffff81193ee2>] mntput_no_expire+0xd2/0x130
    [<ffffffff81194d62>] sys_umount+0x72/0xe0
    [<ffffffff8154af59>] system_call_fastpath+0x16/0x1b
    Code: 06 e1 b8 ea ff ff ff eb 9e 0f 1f 44 00 00 55 48 89 e5 53 48 83 ec 08 66 66 66 66 90 48 8b 87 80 03 00 00 48 89 fb 48 85 c0 74 29 <48> 8b 40 38 48 85 c0 74 02 ff d0 48 8b 03 3e ff 48 04 0f 94 c2
    RIP  [<ffffffffa04cfe6d>] unset_pnfs_layoutdriver+0x1d/0x70 [nfsv4]
    RSP <ffff8800022d9e48>
    CR2: ffffffffa04a1b38
    ---[ end trace 29f75aaedda058bf ]---
    
    Signed-off-by: fanchaoting<fanchaoting@cn.fujitsu.com>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3c5add9c302ac2e86a1b99c738fc3d1c06dfc03a
Author: Weston Andros Adamson <dros@netapp.com>
Date:   Fri Feb 15 16:03:46 2013 -0500

    NFSv4.1: Don't decode skipped layoutgets
    
    commit 085b7a45c63d3da5be155faab9249a5cab224561 upstream.
    
    layoutget's prepare hook can call rpc_exit with status = NFS4_OK (0).
    Because of this, nfs4_proc_layoutget can't depend on a 0 status to mean
    that the RPC was successfully sent, received and parsed.
    
    To fix this, use the result's len member to see if parsing took place.
    
    This fixes the following OOPS -- calling xdr_init_decode() with a buffer length
    0 doesn't set the stream's 'p' member and ends up using uninitialized memory
    in filelayout_decode_layout.
    
    BUG: unable to handle kernel paging request at 0000000000008050
    IP: [<ffffffff81282e78>] memcpy+0x18/0x120
    PGD 0
    Oops: 0000 [#1] SMP
    last sysfs file: /sys/devices/pci0000:00/0000:00:11.0/0000:02:01.0/irq
    CPU 1
    Modules linked in: nfs_layout_nfsv41_files nfs lockd fscache auth_rpcgss nfs_acl autofs4 sunrpc ipt_REJECT nf_conntrack_ipv4 nf_defrag_ipv4 iptable_filter ip_tables ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 xt_state nf_conntrack ip6table_filter ip6_tables ipv6 dm_mirror dm_region_hash dm_log dm_mod ppdev parport_pc parport snd_ens1371 snd_rawmidi snd_ac97_codec ac97_bus snd_seq snd_seq_device snd_pcm snd_timer snd soundcore snd_page_alloc e1000 microcode vmware_balloon i2c_piix4 i2c_core sg shpchp ext4 mbcache jbd2 sr_mod cdrom sd_mod crc_t10dif pata_acpi ata_generic ata_piix mptspi mptscsih mptbase scsi_transport_spi [last unloaded: speedstep_lib]
    
    Pid: 1665, comm: flush-0:22 Not tainted 2.6.32-356-test-2 #2 VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform
    RIP: 0010:[<ffffffff81282e78>]  [<ffffffff81282e78>] memcpy+0x18/0x120
    RSP: 0018:ffff88003dfab588  EFLAGS: 00010206
    RAX: ffff88003dc42000 RBX: ffff88003dfab610 RCX: 0000000000000009
    RDX: 000000003f807ff0 RSI: 0000000000008050 RDI: ffff88003dc42000
    RBP: ffff88003dfab5b0 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000080 R12: 0000000000000024
    R13: ffff88003dc42000 R14: ffff88003f808030 R15: ffff88003dfab6a0
    FS:  0000000000000000(0000) GS:ffff880003420000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0018 ES: 0018 CR0: 000000008005003b
    CR2: 0000000000008050 CR3: 000000003bc92000 CR4: 00000000001407e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400
    Process flush-0:22 (pid: 1665, threadinfo ffff88003dfaa000, task ffff880037f77540)
    Stack:
    ffffffffa0398ac1 ffff8800397c5940 ffff88003dfab610 ffff88003dfab6a0
    <d> ffff88003dfab5d0 ffff88003dfab680 ffffffffa01c150b ffffea0000d82e70
    <d> 000000508116713b 0000000000000000 0000000000000000 0000000000000000
    Call Trace:
    [<ffffffffa0398ac1>] ? xdr_inline_decode+0xb1/0x120 [sunrpc]
    [<ffffffffa01c150b>] filelayout_decode_layout+0xeb/0x350 [nfs_layout_nfsv41_files]
    [<ffffffffa01c17fc>] filelayout_alloc_lseg+0x8c/0x3c0 [nfs_layout_nfsv41_files]
    [<ffffffff8150e6ce>] ? __wait_on_bit+0x7e/0x90
    
    Signed-off-by: Weston Andros Adamson <dros@netapp.com>
    Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a60210baeedfc036f19fcbf58fe9c82d26ea12a5
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Sun Feb 10 11:33:48 2013 -0500

    svcrpc: make svc_age_temp_xprts enqueue under sv_lock
    
    commit e75bafbff2270993926abcc31358361db74a9bc2 upstream.
    
    svc_age_temp_xprts expires xprts in a two-step process: first it takes
    the sv_lock and moves the xprts to expire off their server-wide list
    (sv_tempsocks or sv_permsocks) to a local list.  Then it drops the
    sv_lock and enqueues and puts each one.
    
    I see no reason for this: svc_xprt_enqueue() will take sp_lock, but the
    sv_lock and sp_lock are not otherwise nested anywhere (and documentation
    at the top of this file claims it's correct to nest these with sp_lock
    inside.)
    
    Tested-by: Jason Tibbitts <tibbs@math.uh.edu>
    Tested-by: PaweÅ Sikora <pawel.sikora@agmk.net>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit de80ffb430582159b78f6f6fb3bb240f7ab7034f
Author: Stanislaw Gruszka <sgruszka@redhat.com>
Date:   Fri Feb 15 11:08:11 2013 +0100

    posix-cpu-timers: Fix nanosleep task_struct leak
    
    commit e6c42c295e071dd74a66b5a9fcf4f44049888ed8 upstream.
    
    The trinity fuzzer triggered a task_struct reference leak via
    clock_nanosleep with CPU_TIMERs. do_cpu_nanosleep() calls
    posic_cpu_timer_create(), but misses a corresponding
    posix_cpu_timer_del() which leads to the task_struct reference leak.
    
    Reported-and-tested-by: Tommi Rantala <tt.rantala@gmail.com>
    Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com>
    Cc: Dave Jones <davej@redhat.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Link: http://lkml.kernel.org/r/20130215100810.GF4392@redhat.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b6803d8d50f015c043c507bf251b51df6bfb8d7b
Author: Josh Boyer <jwboyer@redhat.com>
Date:   Thu Feb 14 09:39:09 2013 -0500

    USB: usb-storage: unusual_devs update for Super TOP SATA bridge
    
    commit 18e03310b5caa6d11c1a8c61b982c37047693fba upstream.
    
    The current entry in unusual_cypress.h for the Super TOP SATA bridge devices
    seems to be causing corruption on newer revisions of this device.  This has
    been reported in Arch Linux and Fedora.  The original patch was tested on
    devices with bcdDevice of 1.60, whereas the newer devices report bcdDevice
    as 2.20.  Limit the UNUSUAL_DEV entry to devices less than 2.20.
    
    This fixes https://bugzilla.redhat.com/show_bug.cgi?id=909591
    
    The Arch Forum post on this is here:
            https://bbs.archlinux.org/viewtopic.php?id=152011
    
    Reported-by: Carsten S. <carsteniq@yahoo.com>
    Tested-by: Carsten S. <carsteniq@yahoo.com>
    Signed-off-by: Josh Boyer <jwboyer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 507c50ba088916e2eb3cc17c5aead3aa76ab968b
Author: Roger Quadros <rogerq@ti.com>
Date:   Thu Feb 14 17:08:09 2013 +0200

    USB: ehci-omap: Fix autoloading of module
    
    commit 04753523266629b1cd0518091da1658755787198 upstream.
    
    The module alias should be "ehci-omap" and not
    "omap-ehci" to match the platform device name.
    The omap-ehci module should now autoload correctly.
    
    Signed-off-by: Roger Quadros <rogerq@ti.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ee0a25ab1c315dbd8483b03a5ecd661e130ff18f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Jan 14 12:49:02 2013 +0000

    ARM: w90x900: fix legacy assembly syntax
    
    commit fa5ce5f94c0f2bfa41ba68d2d2524298e1fc405e upstream.
    
    New ARM binutils don't allow extraneous whitespace inside
    of brackets, which causes this error on all mach-w90x900
    defconfigs:
    
    arch/arm/kernel/entry-armv.S: Assembler messages:
    arch/arm/kernel/entry-armv.S:214: Error: ARM register expected -- `ldr r0,[ r6,#(0x10C)]'
    arch/arm/kernel/entry-armv.S:214: Error: ARM register expected -- `ldr r0,[ r6,#(0x110)]'
    arch/arm/kernel/entry-armv.S:430: Error: ARM register expected -- `ldr r0,[ r6,#(0x10C)]'
    arch/arm/kernel/entry-armv.S:430: Error: ARM register expected -- `ldr r0,[ r6,#(0x110)]'
    
    This removes the whitespace in order to build the kernel
    again.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Cc: Wan ZongShun <mcuos.com@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 70c469761ceedc66693e010da610f1f05bdfaf4b
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Jan 8 21:58:31 2013 +0000

    ARM: samsung: fix assembly syntax for new gas
    
    commit 2815774bb38445006074e16251b9ef5123bdc616 upstream.
    
    Recent assembler versions complain about extraneous
    whitespace inside [] brackets. This fixes all of
    these instances for the samsung platforms. We should
    backport this to all kernels that might need to
    be built with new binutils.
    
    arch/arm/kernel/entry-armv.S: Assembler messages:
    arch/arm/kernel/entry-armv.S:214: Error: ARM register expected -- `ldr r2,[ r6,#(0x10)]'
    arch/arm/kernel/entry-armv.S:214: Error: ARM register expected -- `ldr r0,[ r6,#(0x14)]'
    arch/arm/kernel/entry-armv.S:430: Error: ARM register expected -- `ldr r2,[ r6,#(0x10)]'
    arch/arm/kernel/entry-armv.S:430: Error: ARM register expected -- `ldr r0,[ r6,#(0x14)]'
    arch/arm/mach-s3c24xx/sleep-s3c2410.S: Assembler messages:
    arch/arm/mach-s3c24xx/sleep-s3c2410.S:48: Error: ARM register expected -- `ldr r7,[ r4 ]'
    arch/arm/mach-s3c24xx/sleep-s3c2410.S:49: Error: ARM register expected -- `ldr r8,[ r5 ]'
    arch/arm/mach-s3c24xx/sleep-s3c2410.S:50: Error: ARM register expected -- `ldr r9,[ r6 ]'
    arch/arm/mach-s3c24xx/sleep-s3c2410.S:64: Error: ARM register expected -- `streq r7,[ r4 ]'
    arch/arm/mach-s3c24xx/sleep-s3c2410.S:65: Error: ARM register expected -- `streq r8,[ r5 ]'
    arch/arm/mach-s3c24xx/sleep-s3c2410.S:66: Error: ARM register expected -- `streq r9,[ r6 ]'
    arch/arm/kernel/debug.S: Assembler messages:
    arch/arm/kernel/debug.S:83: Error: ARM register expected -- `ldr r2,[ r2,#((0x0B0)+(((0x56000000)-(0x50000000))+(0xF6000000+(0x01000000))))-((0)+(((0x56000000)-(0x50000000))+(0xF6000000+(0x01000000))))]'
    arch/arm/kernel/debug.S:83: Error: ARM register expected -- `ldr r2,[ r3,#(0x18)]'
    arch/arm/kernel/debug.S:85: Error: ARM register expected -- `ldr r2,[ r2,#((0x0B0)+(((0x56000000)-(0x50000000))+(0xF6000000+(0x01000000))))-((0)+(((0x56000000)-(0x50000000))+(0xF6000000+(0x01000000))))]'
    arch/arm/kernel/debug.S:85: Error: ARM register expected -- `ldr r2,[ r3,#(0x18)]'
    arch/arm/mach-s3c24xx/pm-h1940.S: Assembler messages:
    arch/arm/mach-s3c24xx/pm-h1940.S:33: Error: ARM register expected -- `ldr pc,[ r0,#((0x0B8)+(((0x56000000)-(0x50000000))+(0xF6000000+(0x01000000))))-(((0x56000000)-(0x50000000))+(0xF6000000+(0x01000000)))]'
    arch/arm/mach-s3c24xx/sleep-s3c2412.S: Assembler messages:
    arch/arm/mach-s3c24xx/sleep-s3c2412.S:60: Error: ARM register expected -- `ldrne r9,[ r1 ]'
    arch/arm/mach-s3c24xx/sleep-s3c2412.S:61: Error: ARM register expected -- `strne r9,[ r1 ]'
    arch/arm/mach-s3c24xx/sleep-s3c2412.S:62: Error: ARM register expected -- `ldrne r9,[ r2 ]'
    arch/arm/mach-s3c24xx/sleep-s3c2412.S:63: Error: ARM register expected -- `strne r9,[ r2 ]'
    arch/arm/mach-s3c24xx/sleep-s3c2412.S:64: Error: ARM register expected -- `ldrne r9,[ r3 ]'
    arch/arm/mach-s3c24xx/sleep-s3c2412.S:65: Error: ARM register expected -- `strne r9,[ r3 ]'
    arch/arm/kernel/debug.S:83: Error: ARM register expected -- `ldr r2,[ r3,#(0x08)]'
    arch/arm/kernel/debug.S:83: Error: ARM register expected -- `ldr r2,[ r3,#(0x18)]'
    arch/arm/kernel/debug.S:83: Error: ARM register expected -- `ldr r2,[ r3,#(0x10)]'
    arch/arm/kernel/debug.S:85: Error: ARM register expected -- `ldr r2,[ r3,#(0x08)]'
    arch/arm/kernel/debug.S:85: Error: ARM register expected -- `ldr r2,[ r3,#(0x18)]'
    arch/arm/kernel/debug.S:85: Error: ARM register expected -- `ldr r2,[ r3,#(0x10)]'
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Kukjin Kim <kgene.kim@samsung.com>
    Cc: Ben Dooks <ben-linux@fluff.org>
    [bwh: Backported to 3.2: adjust filenames]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit ce75086eb205efa219fb9975ba53bdc1a1390839
Author: Satoru Takeuchi <takeuchi_satoru@jp.fujitsu.com>
Date:   Thu Feb 14 09:12:52 2013 +0900

    efi: Clear EFI_RUNTIME_SERVICES rather than EFI_BOOT by "noefi" boot parameter
    
    commit 1de63d60cd5b0d33a812efa455d5933bf1564a51 upstream.
    
    There was a serious problem in samsung-laptop that its platform driver is
    designed to run under BIOS and running under EFI can cause the machine to
    become bricked or can cause Machine Check Exceptions.
    
        Discussion about this problem:
        https://bugs.launchpad.net/ubuntu-cdimage/+bug/1040557
        https://bugzilla.kernel.org/show_bug.cgi?id=47121
    
        The patches to fix this problem:
        efi: Make 'efi_enabled' a function to query EFI facilities
        83e68189745ad931c2afd45d8ee3303929233e7f
    
        samsung-laptop: Disable on EFI hardware
        e0094244e41c4d0c7ad69920681972fc45d8ce34
    
    Unfortunately this problem comes back again if users specify "noefi" option.
    This parameter clears EFI_BOOT and that driver continues to run even if running
    under EFI. Refer to the document, this parameter should clear
    EFI_RUNTIME_SERVICES instead.
    
    Documentation/kernel-parameters.txt:
    ===============================================================================
    ...
            noefi           [X86] Disable EFI runtime services support.
    ...
    ===============================================================================
    
    Documentation/x86/x86_64/uefi.txt:
    ===============================================================================
    ...
    - If some or all EFI runtime services don't work, you can try following
      kernel command line parameters to turn off some or all EFI runtime
      services.
            noefi           turn off all EFI runtime services
    ...
    ===============================================================================
    
    Signed-off-by: Satoru Takeuchi <takeuchi_satoru@jp.fujitsu.com>
    Link: http://lkml.kernel.org/r/511C2C04.2070108@jp.fujitsu.com
    Cc: Matt Fleming <matt.fleming@intel.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e8c945322f8a8c9b9601b00b30faf60857fa9f7e
Author: BjÃ¸rn Mork <bjorn@mork.no>
Date:   Wed Feb 13 23:41:34 2013 +0100

    USB: option: add Huawei "ACM" devices using protocol = vendor
    
    commit 1f3f687722fd9b29a0c2a85b4844e3b2a3585c63 upstream.
    
    The USB device descriptor of one identity presented by a few
    Huawei morphing devices have serial functions with class codes
    02/02/ff, indicating CDC ACM with a vendor specific protocol. This
    combination is often used for MSFT RNDIS functions, and the CDC
    ACM class driver will therefore ignore such functions.
    
    The CDC ACM class driver cannot support functions with only 2
    endpoints.  The underlying serial functions of these modems are
    also believed to be the same as for alternate device identities
    already supported by the option driver. Letting the same driver
    handle these functions independently of the current identity
    ensures consistent handling and user experience.
    
    There is no need to blacklist these devices in the rndis_host
    driver. Huawei serial functions will either have only 2 endpoints
    or a CDC ACM functional descriptor with bmCapabilities != 0, making
    them correctly ignored as "non RNDIS" by that driver.
    
    Signed-off-by: BjÃ¸rn Mork <bjorn@mork.no>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f93873c3be9b7cd1e705fadbd6424e2b61d24e68
Author: Rafael J. Wysocki <rjw@rjwysocki.net>
Date:   Mon Feb 11 20:49:49 2013 +0100

    PCI/PM: Clean up PME state when removing a device
    
    commit 249bfb83cf8ba658955f0245ac3981d941f746ee upstream.
    
    Devices are added to pci_pme_list when drivers use pci_enable_wake()
    or pci_wake_from_d3(), but they aren't removed from the list unless
    the driver explicitly disables wakeup.  Many drivers never disable
    wakeup, so their devices remain on the list even after they are
    removed, e.g., via hotplug.  A subsequent PME poll will oops when
    it tries to touch the device.
    
    This patch disables PME# on a device before removing it, which removes
    the device from pci_pme_list.  This is safe even if the device never
    had PME# enabled.
    
    This oops can be triggered by unplugging a Thunderbolt ethernet adapter
    on a Macbook Pro, as reported by Daniel below.
    
    [bhelgaas: changelog]
    Reference: http://lkml.kernel.org/r/CAMVG2svG21yiM1wkH4_2pen2n+cr2-Zv7TbH3Gj+8MwevZjDbw@mail.gmail.com
    Reported-and-tested-by: Daniel J Blueman <daniel@quora.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 77327a71f9841b7dfa708195d1cb133d4ef4a989
Author: George Spelvin <linux@horizon.com>
Date:   Tue Feb 12 02:27:20 2013 -0500

    pps: Fix a use-after free bug when unregistering a source.
    
    commit d953e0e837e65ecc1ddaa4f9560f7925878a0de6 upstream.
    
    Remove the cdev from the system (with cdev_del) *before* deallocating it
    (in pps_device_destruct, called via kobject_put from device_destroy).
    
    Also prevent deallocating a device with open file handles.
    
    A better long-term fix is probably to remove the cdev from the pps_device
    entirely, and instead have all devices reference one global cdev.  Then
    the deallocation ordering becomes simpler.
    
    But that's more complex and invasive change, so we leave that
    for later.
    
    Signed-off-by: George Spelvin <linux@horizon.com>
    Acked-by: Rodolfo Giometti <giometti@enneenne.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 24625640fe278feac753e36888ff1d335d39964b
Author: George Spelvin <linux@horizon.com>
Date:   Sun Feb 10 04:41:56 2013 -0500

    pps: Use pps_lookup_dev to reduce ldisc coupling
    
    commit 03a7ffe4e542310838bac70ef85acc17536b6d7c upstream.
    
    Now that N_TTY uses tty->disc_data for its private data,
    'subclass' ldiscs cannot use ->disc_data for their own private data.
    (This is a regression is v3.8-rc1)
    
    Use pps_lookup_dev to associate the tty with the pps source instead.
    
    This fixes a crashing regression in 3.8-rc1.
    
    Signed-off-by: George Spelvin <linux@horizon.com>
    Acked-by: Rodolfo Giometti <giometti@enneenne.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7063a9950d1005f4e797bd047eae7fda181209fb
Author: George Spelvin <linux@horizon.com>
Date:   Sun Feb 10 04:08:32 2013 -0500

    pps: Add pps_lookup_dev() function
    
    commit 513b032c98b4b9414aa4e9b4a315cb1bf0380101 upstream.
    
    The PPS serial line discipline wants to attach a PPS device to a tty
    without changing the tty code to add a struct pps_device * pointer.
    
    Since the number of PPS devices in a typical system is generally very low
    (n=1 is by far the most common), it's practical to search the entire list
    of allocated pps devices.  (We capture the timestamp before the lookup,
    so the timing isn't affected.)
    
    It is a bit ugly that this function, which is part of the in-kernel
    PPS API, has to be in pps.c as opposed to kapi,c, but that's not
    something that affects users.
    
    Signed-off-by: George Spelvin <linux@horizon.com>
    Acked-by: Rodolfo Giometti <giometti@enneenne.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 72df9eccdc41633b6eab5ef2489ff8acb8391c6c
Author: Philipp Reisner <philipp.reisner@linbit.com>
Date:   Wed Jul 20 14:59:37 2011 +0200

    idr: idr_for_each_entry() macro
    
    commit 9749f30f1a387070e6e8351f35aeb829eacc3ab6 upstream.
    
    Inspired by the list_for_each_entry() macro
    
    Signed-off-by: Philipp Reisner <philipp.reisner@linbit.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 36614259f65555c6194d8d5dcd554a1ded0458a5
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Feb 13 17:53:28 2013 +0100

    USB: serial: fix null-pointer dereferences on disconnect
    
    commit b2ca699076573c94fee9a73cb0d8645383b602a0 upstream.
    
    Make sure serial-driver dtr_rts is called with disc_mutex held after
    checking the disconnected flag.
    
    Due to a bug in the tty layer, dtr_rts may get called after a device has
    been disconnected and the tty-device unregistered. Some drivers have had
    individual checks for disconnect to make sure the disconnected interface
    was not accessed, but this should really be handled in usb-serial core
    (at least until the long-standing tty-bug has been fixed).
    
    Note that the problem has been made more acute with commit 0998d0631001
    ("device-core: Ensure drvdata = NULL when no driver is bound") as the
    port data is now also NULL when dtr_rts is called resulting in further
    oopses.
    
    Reported-by: Chris Ruehl <chris.ruehl@gtsys.com.hk>
    Signed-off-by: Johan Hovold <jhovold@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2:
     - Adjust context
     - Drop changes to quatech2.c]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0055ccfc4019801fda4800c468232344dc7af316
Author: BjÃ¸rn Mork <bjorn@mork.no>
Date:   Tue Feb 12 13:42:24 2013 +0100

    USB: option: add Yota / Megafon M100-1 4g modem
    
    commit cd565279e51bedee1b2988e84f9b3bef485adeb6 upstream.
    
    Interface layout:
    
     00 CD-ROM
     01 debug COM port
     02 AP control port
     03 modem
     04 usb-ethernet
    
    Bus=01 Lev=02 Prnt=02 Port=01 Cnt=02 Dev#=  4 Spd=480  MxCh= 0
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=0408 ProdID=ea42 Rev= 0.00
    S:  Manufacturer=Qualcomm, Incorporated
    S:  Product=Qualcomm CDMA Technologies MSM
    S:  SerialNumber=353568051xxxxxx
    C:* #Ifs= 5 Cfg#= 1 Atr=e0 MxPwr=500mA
    I:* If#= 0 Alt= 0 #EPs= 2 Cls=08(stor.) Sub=06 Prot=50 Driver=usb-storage
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    E:  Ad=82(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=4ms
    I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    E:  Ad=83(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS= 512 Ivl=4ms
    I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    E:  Ad=84(I) Atr=03(Int.) MxPS=  64 Ivl=2ms
    E:  Ad=85(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS= 512 Ivl=4ms
    I:* If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    E:  Ad=86(I) Atr=03(Int.) MxPS=  64 Ivl=2ms
    E:  Ad=87(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=05(O) Atr=02(Bulk) MxPS= 512 Ivl=4ms
    
    Signed-off-by: BjÃ¸rn Mork <bjorn@mork.no>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 8f8dc63d1c490fac760ed74ed55759a45be68707
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Wed Feb 13 20:37:48 2013 +1000

    Revert "drm: Add EDID_QUIRK_FORCE_REDUCED_BLANKING for ASUS VW222S"
    
    commit db3985e5ca8f50fc17606855ba394783d11683a5 upstream.
    
    This reverts commit 6f33814bd4d9cfe76033a31b1c0c76c960cd8e4b.
    
    The quirk cause a regression, and it looks like the original bug was
    simply a lack of FIFO bandwidth on the i915G of the reporter. Which
    should eventually be fixed as soon as we get around to implemented
    DSPARB FIFO reassignment on gen 3.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=52281
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7ee959779fbb0ac92d264c88e53eac3628cfcc1f
Author: Mel Gorman <mgorman@suse.de>
Date:   Mon Feb 11 14:52:36 2013 +0000

    x86/mm: Check if PUD is large when validating a kernel address
    
    commit 0ee364eb316348ddf3e0dfcd986f5f13f528f821 upstream.
    
    A user reported the following oops when a backup process reads
    /proc/kcore:
    
     BUG: unable to handle kernel paging request at ffffbb00ff33b000
     IP: [<ffffffff8103157e>] kern_addr_valid+0xbe/0x110
     [...]
    
     Call Trace:
      [<ffffffff811b8aaa>] read_kcore+0x17a/0x370
      [<ffffffff811ad847>] proc_reg_read+0x77/0xc0
      [<ffffffff81151687>] vfs_read+0xc7/0x130
      [<ffffffff811517f3>] sys_read+0x53/0xa0
      [<ffffffff81449692>] system_call_fastpath+0x16/0x1b
    
    Investigation determined that the bug triggered when reading
    system RAM at the 4G mark. On this system, that was the first
    address using 1G pages for the virt->phys direct mapping so the
    PUD is pointing to a physical address, not a PMD page.
    
    The problem is that the page table walker in kern_addr_valid() is
    not checking pud_large() and treats the physical address as if
    it was a PMD.  If it happens to look like pmd_none then it'll
    silently fail, probably returning zeros instead of real data. If
    the data happens to look like a present PMD though, it will be
    walked resulting in the oops above.
    
    This patch adds the necessary pud_large() check.
    
    Unfortunately the problem was not readily reproducible and now
    they are running the backup program without accessing
    /proc/kcore so the patch has not been validated but I think it
    makes sense.
    
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    Reviewed-by: Rik van Riel <riel@redhat.coM>
    Reviewed-by: Michal Hocko <mhocko@suse.cz>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Cc: linux-mm@kvack.org
    Link: http://lkml.kernel.org/r/20130211145236.GX21389@suse.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 12324875d79c23a13bbf66390b595a84337dc8d7
Author: Olaf Hering <[mailto:olaf@aepfle.de]>
Date:   Sun Feb 3 17:22:37 2013 -0800

    x86: Hyper-V: register clocksource only if its advertised
    
    commit 32068f6527b8f1822a30671dedaf59c567325026 upstream.
    
    Enable hyperv_clocksource only if its advertised as a feature.
    XenServer 6 returns the signature which is checked in
    ms_hyperv_platform(), but it does not offer all features. Currently the
    clocksource is enabled unconditionally in ms_hyperv_init_platform(), and
    the result is a hanging guest.
    
    Hyper-V spec Bit 1 indicates the availability of Partition Reference
    Counter.  Register the clocksource only if this bit is set.
    
    The guest in question prints this in dmesg:
     [    0.000000] Hypervisor detected: Microsoft HyperV
     [    0.000000] HyperV: features 0x70, hints 0x0
    
    This bug can be reproduced easily be setting 'viridian=1' in a HVM domU
    .cfg file. A workaround without this patch is to boot the HVM guest with
    'clocksource=jiffies'.
    
    Signed-off-by: Olaf Hering <olaf@aepfle.de>
    Link: http://lkml.kernel.org/r/1359940959-32168-1-git-send-email-kys@microsoft.com
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7366b52c44b46c073a4bf1285ca09ca6ce5d9b39
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Tue Feb 12 13:46:19 2013 -0800

    drivers/rtc/rtc-pl031.c: restore ST variant functionality
    
    commit 3399cfb5df9594495b876d1843a7165f77366b2b upstream.
    
    Commit e7e034e18a0a ("drivers/rtc/rtc-pl031.c: fix the missing operation
    on enable") accidentally broke the ST variants of PL031.
    
    The bit that is being poked as "clockwatch" enable bit for the ST
    variants does the work of bit 0 on this variant.  Bit 0 is used for a
    clock divider on the ST variants, and setting it to 1 will affect
    timekeeping in a very bad way.
    
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Acked-by: Haojian Zhuang <haojian.zhuang@gmail.com>
    Cc: Mian Yousaf KAUKAB <mian.yousaf.kaukab@stericsson.com>
    Cc: Srinidhi Kasagar <srinidhi.kasagar@stericsson.com>
    Cc: Alessandro Zummo <a.zummo@towertech.it>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 24bc276d78799da0c2ed5ea1c46bf4ac8f1a0a9e
Author: Denis Efremov <yefremov.denis@gmail.com>
Date:   Mon Feb 11 19:49:48 2013 +0400

    ALSA: ali5451: remove irq enabling in pointer callback
    
    commit dacae5a19b4cbe1b5e3a86de23ea74cbe9ec9652 upstream.
    
    snd_ali_pointer function is called with local
    interrupts disabled. However it seems very strange to
    reenable them in such way.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Denis Efremov <yefremov.denis@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit e3f48db0492100426fd63335ce7dc02b1c94dc2a
Author: Denis Efremov <yefremov.denis@gmail.com>
Date:   Mon Feb 11 19:04:06 2013 +0400

    ALSA: rme32.c irq enabling after spin_lock_irq
    
    commit f49a59c4471d81a233e09dda45187cc44fda009d upstream.
    
    According to the other code in this driver and similar
    code in rme96 it seems, that spin_lock_irq in
    snd_rme32_capture_close function should be paired
    with spin_unlock_irq.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Denis Efremov <yefremov.denis@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 7d2658f0cdf781bcf55ef3ded2fdbd5b649a73da
Author: Stoney Wang <song-bo.wang@hp.com>
Date:   Thu Feb 7 10:53:02 2013 -0800

    x86/apic: Work around boot failure on HP ProLiant DL980 G7 Server systems
    
    commit cb214ede7657db458fd0b2a25ea0b28dbf900ebc upstream.
    
    When a HP ProLiant DL980 G7 Server boots a regular kernel,
    there will be intermittent lost interrupts which could
    result in a hang or (in extreme cases) data loss.
    
    The reason is that this system only supports x2apic physical
    mode, while the kernel boots with a logical-cluster default
    setting.
    
    This bug can be worked around by specifying the "x2apic_phys" or
    "nox2apic" boot option, but we want to handle this system
    without requiring manual workarounds.
    
    The BIOS sets ACPI_FADT_APIC_PHYSICAL in FADT table.
    As all apicids are smaller than 255, BIOS need to pass the
    control to the OS with xapic mode, according to x2apic-spec,
    chapter 2.9.
    
    Current code handle x2apic when BIOS pass with xapic mode
    enabled:
    
    When user specifies x2apic_phys, or FADT indicates PHYSICAL:
    
    1. During madt oem check, apic driver is set with xapic logical
       or xapic phys driver at first.
    
    2. enable_IR_x2apic() will enable x2apic_mode.
    
    3. if user specifies x2apic_phys on the boot line, x2apic_phys_probe()
       will install the correct x2apic phys driver and use x2apic phys mode.
       Otherwise it will skip the driver will let x2apic_cluster_probe to
       take over to install x2apic cluster driver (wrong one) even though FADT
       indicates PHYSICAL, because x2apic_phys_probe does not check
       FADT PHYSICAL.
    
    Add checking x2apic_fadt_phys in x2apic_phys_probe() to fix the
    problem.
    
    Signed-off-by: Stoney Wang <song-bo.wang@hp.com>
    [ updated the changelog and simplified the code ]
    Signed-off-by: Yinghai Lu <yinghai@kernel.org>
    Link: http://lkml.kernel.org/r/1360263182-16226-1-git-send-email-yinghai@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5fa3fabbefb65be822da1f94c84795177f0e8f11
Author: Greg Pearson <greg.pearson@hp.com>
Date:   Tue Apr 24 18:23:56 2012 -0600

    x86/apic: Use x2apic physical mode based on FADT setting
    
    commit ea0dcf903e7d76aa5d483d876215fedcfdfe140f upstream.
    
    Provide systems that do not support x2apic cluster mode
    a mechanism to select x2apic physical mode using the
    FADT FORCE_APIC_PHYSICAL_DESTINATION_MODE bit.
    
    Changes from v1: (based on Suresh's comments)
     - removed #ifdef CONFIG_ACPI
     - removed #include <linux/acpi.h>
    
    Signed-off-by: Greg Pearson <greg.pearson@hp.com>
    Acked-by: Suresh Siddha <suresh.b.siddha@intel.com>
    Link: http://lkml.kernel.org/r/1335313436-32020-1-git-send-email-greg.pearson@hp.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d0d26e575d02c5ff51a9fb6fbe79de6fe7a6dd58
Author: fangxiaozhi <huananhu@huawei.com>
Date:   Thu Feb 7 15:32:07 2013 +0800

    USB: storage: properly handle the endian issues of idProduct
    
    commit cd060956c5e97931c3909e4a808508469c0bb9f6 upstream.
    
    1. The idProduct is little endian, so make sure its value to be
    compatible with the current CPU. Make no break on big endian processors.
    
    Signed-off-by: fangxiaozhi <huananhu@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4413840e5c227b869aaf53d5f9d782e72636d9e1
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Fri Feb 8 12:28:18 2013 -0600

    rtlwifi: rtl8192cu: Add new USB ID
    
    commit 8708aac79e4572ba673d7a21e94ddca9f3abb7fc upstream.
    
    A new model of the RTL8188CUS has appeared.
    
    Reported-and-tested-by: Thomas Rosenkrantz <tom.rosary@googlemail.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 581e58916c90eb2ba65f6c0a5a1c33ba2238a7bf
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Wed Feb 6 12:54:17 2013 -0600

    rtlwifi: rtl8192cu: Fix NULL dereference BUG when using new_id
    
    commit 957f4aca5fa0db69635271bc4621cc0b65b2d590 upstream.
    
    When the new_id entry in /sysfs is used for a foreign USB device, rtlwifi
    BUGS with a NULL pointer dereference because the per-driver configuration
    data is not available. The probe function has been restructured as
    suggested by Ben Hutchings <bhutchings@solarflare.com>.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    [bwh: Backported to 3.2: adjust context, indentation]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d66d1873526fa1fb405fef0206035cd3e683a7c2
Author: Tomasz Guszkowski <tsg@o2.pl>
Date:   Tue Feb 5 22:10:31 2013 +0100

    p54usb: corrected USB ID for T-Com Sinus 154 data II
    
    commit 008e33f733ca51acb2dd9d88ea878693b04d1d2a upstream.
    
    Corrected USB ID for T-Com Sinus 154 data II. ISL3887-based. The
    device was tested in managed mode with no security, WEP 128
    bit and WPA-PSK (TKIP) with firmware 2.13.1.0.lm87.arm (md5sum:
    7d676323ac60d6e1a3b6d61e8c528248). It works.
    
    Signed-off-by: Tomasz Guszkowski <tsg@o2.pl>
    Acked-By: Christian Lamparter <chunkeey@googlemail.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2f6cca22e6302c99d7d7035f762ffce1e83bd7ab
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 25 10:28:18 2013 +1000

    fb: Yet another band-aid for fixing lockdep mess
    
    commit e93a9a868792ad71cdd09d75e5a02d8067473c4e upstream.
    
    I've still got lockdep warnings even after Alan's patch, and it seems that
    yet more band aids are required to paper over similar paths for
    unbind_con_driver() and unregister_con_driver().  After this hack, lockdep
    warnings are finally gone.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Cc: Alan Cox <alan@linux.intel.com>
    Cc: Florian Tobias Schandinat <FlorianSchandinat@gmx.de>
    Cc: Jiri Kosina <jkosina@suse.cz>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit da4a8acdf96e6744028f7e0429d47edad1bd7e28
Author: Alan Cox <alan@linux.intel.com>
Date:   Fri Jan 25 10:28:15 2013 +1000

    fb: rework locking to fix lock ordering on takeover
    
    commit 50e244cc793d511b86adea24972f3a7264cae114 upstream.
    
    Adjust the console layer to allow a take over call where the caller
    already holds the locks.  Make the fb layer lock in order.
    
    This is partly a band aid, the fb layer is terminally confused about the
    locking rules it uses for its notifiers it seems.
    
    [akpm@linux-foundation.org: remove stray non-ascii char, tidy comment]
    [akpm@linux-foundation.org: export do_take_over_console()]
    [airlied: cleanup another non-ascii char]
    Signed-off-by: Alan Cox <alan@linux.intel.com>
    Cc: Florian Tobias Schandinat <FlorianSchandinat@gmx.de>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Jiri Kosina <jkosina@suse.cz>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit fab58c4dc8da9983c88357da7455955e1fa05c38
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Thu Feb 7 17:14:08 2013 -0800

    timeconst.pl: Eliminate Perl warning
    
    commit 63a3f603413ffe82ad775f2d62a5afff87fd94a0 upstream.
    
    defined(@array) is deprecated in Perl and gives off a warning.
    Restructure the code to remove that warning.
    
    [ hpa: it would be interesting to revert to the timeconst.bc script.
      It appears that the failures reported by akpm during testing of
      that script was due to a known broken version of make, not a problem
      with bc.  The Makefile rules could probably be restructured to avoid
      the make bug, or it is probably old enough that it doesn't matter. ]
    
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d8db3e2260deb9f5007f2d663fd9d767746cf139
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Feb 7 09:44:13 2013 -0800

    x86: Do not leak kernel page mapping locations
    
    commit e575a86fdc50d013bf3ad3aa81d9100e8e6cc60d upstream.
    
    Without this patch, it is trivial to determine kernel page
    mappings by examining the error code reported to dmesg[1].
    Instead, declare the entire kernel memory space as a violation
    of a present page.
    
    Additionally, since show_unhandled_signals is enabled by
    default, switch branch hinting to the more realistic
    expectation, and unobfuscate the setting of the PF_PROT bit to
    improve readability.
    
    [1] http://vulnfactory.org/blog/2013/02/06/a-linux-memory-trick/
    
    Reported-by: Dan Rosenberg <dan.j.rosenberg@gmail.com>
    Suggested-by: Brad Spengler <spender@grsecurity.net>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Acked-by: H. Peter Anvin <hpa@zytor.com>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Link: http://lkml.kernel.org/r/20130207174413.GA12485@www.outflux.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 901fe4bb2a69121c1c405db935398b314d8343cd
Author: Dave Airlie <airlied@redhat.com>
Date:   Thu Feb 7 10:10:04 2013 +1000

    drm/usb: bind driver to correct device
    
    commit 9f23de52b64f7fb801fd76f3dd8651a0dc89187b upstream.
    
    While looking at plymouth on udl I noticed that plymouth was trying
    to use its fb plugin not its drm one, it was trying to drmOpen a driver called
    usb not udl, noticed that we actually had out driver pointing at the wrong
    device.
    
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit b6f84cb8ce3aa61f0b9ee8e72f8a0b5a3003cd9c
Author: Dave Airlie <airlied@redhat.com>
Date:   Thu Jan 24 16:12:41 2013 +1000

    fbcon: don't lose the console font across generic->chip driver switch
    
    commit ae1287865f5361fa138d4d3b1b6277908b54eac9 upstream.
    
    If grub2 loads efifb/vesafb, then when systemd starts it can set the console
    font on that framebuffer device, however when we then load the native KMS
    driver, the first thing it does is tear down the generic framebuffer driver.
    
    The thing is the generic code is doing the right thing, it frees the font
    because otherwise it would leak memory. However we can assume that if you
    are removing the generic firmware driver (vesa/efi/offb), that a new driver
    *should* be loading soon after, so we effectively leak the font.
    
    However the old code left a dangling pointer in vc->vc_font.data and we
    can now reuse that dangling pointer to load the font into the new
    driver, now that we aren't freeing it.
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=892340
    
    Cc: Kay Sievers <kay.sievers@vrfy.org>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 154184713475e6a077724f0db41b0a921008512d
Author: Dave Airlie <airlied@redhat.com>
Date:   Thu Jan 24 14:14:19 2013 +1000

    vgacon/vt: clear buffer attributes when we load a 512 character font (v2)
    
    commit 2a2483072393b27f4336ab068a1f48ca19ff1c1e upstream.
    
    When we switch from 256->512 byte font rendering mode, it means the
    current contents of the screen is being reinterpreted. The bit that holds
    the high bit of the 9-bit font, may have been previously set, and thus
    the new font misrenders.
    
    The problem case we see is grub2 writes spaces with the bit set, so it
    ends up with data like 0x820, which gets reinterpreted into 0x120 char
    which the font translates into G with a circumflex. This flashes up on
    screen at boot and is quite ugly.
    
    A current side effect of this patch though is that any rendering on the
    screen changes color to a slightly darker color, but at least the screen
    no longer corrupts.
    
    v2: as suggested by hpa, always clear the attribute space, whether we
    are are going to or from 512 chars.
    
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6684f6e7ac5669cfcaad4d89b09773b7139e30fb
Author: Joseph Salisbury <joseph.salisbury@canonical.com>
Date:   Tue Feb 5 00:16:29 2013 +0000

    ACPI: Add DMI entry for Sony VGN-FW41E_H
    
    commit 66f2fda93b67fa744d406e6dcf443f67bac204b6 upstream.
    
    This patch adds a quirk to allow the Sony VGN-FW41E_H to suspend/resume
    properly.
    
    References: http://bugs.launchpad.net/bugs/1113547
    Signed-off-by: Joseph Salisbury <joseph.salisbury@canonical.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1ff13c78ca3975a94460a6a0b49acf9a787ed350
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Wed Feb 27 10:56:19 2013 +0000

    staging: comedi: check s->async for poll(), read() and write()
    
    commit cc400e185c07c15a42d2635995f422de5b94b696 upstream.
    
    Some low-level comedi drivers (incorrectly) point `dev->read_subdev` or
    `dev->write_subdev` to a subdevice that does not support asynchronous
    commands.  Comedi's poll(), read() and write() file operation handlers
    assume these subdevices do support asynchronous commands.  In
    particular, they assume `s->async` is valid (where `s` points to the
    read or write subdevice), which it won't be if it has been set
    incorrectly.  This can lead to a NULL pointer dereference.
    
    Check `s->async` is non-NULL in `comedi_poll()`, `comedi_read()` and
    `comedi_write()` to avoid the bug.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 35ad1797ad99b8e73758c805803021cbda799dcb
Author: majianpeng <majianpeng@gmail.com>
Date:   Tue Jan 29 13:16:06 2013 +0800

    nfsd: Fix memleak
    
    commit 2d32b29a1c2830f7c42caa8258c714acd983961f upstream.
    
    When free nfs-client, it must free the ->cl_stateids.
    
    Signed-off-by: Jianpeng Ma <majianpeng@gmail.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d03659265edc9c622ecbdb94999a27f868a60a4b
Author: Leonid Shatz <leonid.shatz@ravellosystems.com>
Date:   Mon Feb 4 14:33:37 2013 +0200

    hrtimer: Prevent hrtimer_enqueue_reprogram race
    
    commit b22affe0aef429d657bc6505aacb1c569340ddd2 upstream.
    
    hrtimer_enqueue_reprogram contains a race which could result in
    timer.base switch during unlock/lock sequence.
    
    hrtimer_enqueue_reprogram is releasing the lock protecting the timer
    base for calling raise_softirq_irqsoff() due to a lock ordering issue
    versus rq->lock.
    
    If during that time another CPU calls __hrtimer_start_range_ns() on
    the same hrtimer, the timer base might switch, before the current CPU
    can lock base->lock again and therefor the unlock_timer_base() call
    will unlock the wrong lock.
    
    [ tglx: Added comment and massaged changelog ]
    
    Signed-off-by: Leonid Shatz <leonid.shatz@ravellosystems.com>
    Signed-off-by: Izik Eidus <izik.eidus@ravellosystems.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Link: http://lkml.kernel.org/r/1359981217-389-1-git-send-email-izik.eidus@ravellosystems.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6c4df7b1225c95b49bb13cef410277e342bb9b7b
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Tue Jan 29 20:07:41 2013 +0100

    tty: set_termios/set_termiox should not return -EINTR
    
    commit 183d95cdd834381c594d3aa801c1f9f9c0c54fa9 upstream.
    
    See https://bugzilla.redhat.com/show_bug.cgi?id=904907
    read command causes bash to abort with double free or corruption (out).
    
    A simple test-case from Roman:
    
            // Compile the reproducer and send sigchld ti that process.
            // EINTR occurs even if SA_RESTART flag is set.
    
            void handler(int sig)
            {
            }
    
            main()
            {
              struct sigaction act;
              act.sa_handler = handler;
              act.sa_flags = SA_RESTART;
              sigaction (SIGCHLD, &act, 0);
              struct termio ttp;
              ioctl(0, TCGETA, &ttp);
              while(1)
              {
                if (ioctl(0, TCSETAW, ttp) < 0)
                  {
                    if (errno == EINTR)
                    {
                      fprintf(stderr, "BUG!"); return(1);
                    }
                  }
              }
            }
    
    Change set_termios/set_termiox to return -ERESTARTSYS to fix this
    particular problem.
    
    I didn't dare to change other EINTR's in drivers/tty/, but they look
    equally wrong.
    
    Reported-by: Roman Rakus <rrakus@redhat.com>
    Reported-by: Lingzhu Xiang <lxiang@redhat.com>
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 2ff3ae3932b9ca1152c1835f674048c4cd227db7
Author: Adam Thomas <adamthomas1111@gmail.com>
Date:   Sat Feb 2 22:35:08 2013 +0000

    UBIFS: fix double free of ubifs_orphan objects
    
    commit 8afd500cb52a5d00bab4525dd5a560d199f979b9 upstream.
    
    The last orphan in the dnext list has its dnext set to NULL. Because
    of that, ubifs_delete_orphan assumes that it is not on the dnext list
    and frees it immediately instead ignoring it as a second delete. The
    orphan is later freed again by erase_deleted.
    
    This change adds an explicit flag to ubifs_orphan indicating whether
    it is pending delete.
    
    Signed-off-by: Adam Thomas <adamthomas1111@gmail.com>
    Signed-off-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit bc32ef0a6d6a6e1a4745101f2678a2ca1f3eb8fe
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 4 10:28:15 2013 +0100

    ALSA: aloop: Fix Oops while PM resume
    
    commit edac894389f9c9de2a1368c78809c824b343f3a5 upstream.
    
    snd-aloop driver has no proper PM implementation, thus the PM resume
    may trigger Oops due to leftover timer instance.  This patch adds the
    missing suspend/resume implementation.
    
    Reported-and-tested-by: El boulangero <elboulangero@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit a3fe69ce2d34124b4db677e2a624afa323e557bb
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Tue Jan 29 16:44:27 2013 -0700

    Driver core: treat unregistered bus_types as having no devices
    
    commit 4fa3e78be7e985ca814ce2aa0c09cbee404efcf7 upstream.
    
    A bus_type has a list of devices (klist_devices), but the list and the
    subsys_private structure that contains it are not initialized until the
    bus_type is registered with bus_register().
    
    The panic/reboot path has fixups that look up devices in pci_bus_type.  If
    we panic before registering pci_bus_type, the bus_type exists but the list
    does not, so mach_reboot_fixups() trips over a null pointer and panics
    again:
    
        mach_reboot_fixups
          pci_get_device
            ..
              bus_find_device(&pci_bus_type, ...)
                bus->p is NULL
    
    Joonsoo reported a problem when panicking before PCI was initialized.
    I think this patch should be sufficient to replace the patch he posted
    here: https://lkml.org/lkml/2012/12/28/75 ("[PATCH] x86, reboot: skip
    reboot_fixups in early boot phase")
    
    Reported-by: Joonsoo Kim <js1304@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 41247561dc218af7ab5cb4113b0c8ee1f79b75de
Author: Minchan Kim <minchan@kernel.org>
Date:   Wed Jan 30 11:41:39 2013 +0900

    zram: Fix deadlock bug in partial read/write
    
    commit 7e5a5104c6af709a8d97d5f4711e7c917761d464 upstream.
    
    Now zram allocates new page with GFP_KERNEL in zram I/O path
    if IO is partial. Unfortunately, It may cause deadlock with
    reclaim path like below.
    
    write_page from fs
    fs_lock
    allocation(GFP_KERNEL)
    reclaim
    pageout
                                    write_page from fs
                                    fs_lock <-- deadlock
    
    This patch fixes it by using GFP_NOIO.  In read path, we
    reorganize code flow so that kmap_atomic is called after the
    GFP_NOIO allocation.
    
    Acked-by: Jerome Marchand <jmarchand@redhat.com>
    Acked-by: Nitin Gupta <ngupta@vflare.org>
    [ penberg@kernel.org: don't use GFP_ATOMIC ]
    Signed-off-by: Pekka Enberg <penberg@kernel.org>
    Signed-off-by: Minchan Kim <minchan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.2: no reordering is needed in the read path]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d812e4d8b480c8ddd4096c60ff8a18726ddae8a6
Author: Niu Yawei <yawei.niu@gmail.com>
Date:   Fri Feb 1 21:31:27 2013 -0500

    ext4: fix race in ext4_mb_add_n_trim()
    
    commit f1167009711032b0d747ec89a632a626c901a1ad upstream.
    
    In ext4_mb_add_n_trim(), lg_prealloc_lock should be taken when
    changing the lg_prealloc_list.
    
    Signed-off-by: Niu Yawei <yawei.niu@intel.com>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 45d12e995b298e90420f0f9172c972279a3ebcee
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Feb 1 14:01:27 2013 +0100

    ALSA: hda - Release assigned pin/cvt at error path of hdmi_pcm_open()
    
    commit 2ad779b7329d6894a80df94e693e72eaa0d56790 upstream.
    
    If the driver detects and invalid ELD, it gives an open error.
    But it forgot to release the assigned pin, converter and spdif ctls
    before returning.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6d6e66d90d1e9564d20060ffd03dbf75ed85c7d2
Author: Dave Hansen <dave@linux.vnet.ibm.com>
Date:   Wed Jan 30 16:56:16 2013 -0800

    x86-32, mm: Rip out x86_32 NUMA remapping code
    
    commit f03574f2d5b2d6229dcdf2d322848065f72953c7 upstream.
    
    This code was an optimization for 32-bit NUMA systems.
    
    It has probably been the cause of a number of subtle bugs over
    the years, although the conditions to excite them would have
    been hard to trigger.  Essentially, we remap part of the kernel
    linear mapping area, and then sometimes part of that area gets
    freed back in to the bootmem allocator.  If those pages get
    used by kernel data structures (say mem_map[] or a dentry),
    there's no big deal.  But, if anyone ever tried to use the
    linear mapping for these pages _and_ cared about their physical
    address, bad things happen.
    
    For instance, say you passed __GFP_ZERO to the page allocator
    and then happened to get handed one of these pages, it zero the
    remapped page, but it would make a pte to the _old_ page.
    There are probably a hundred other ways that it could screw
    with things.
    
    We don't need to hang on to performance optimizations for
    these old boxes any more.  All my 32-bit NUMA systems are long
    dead and buried, and I probably had access to more than most
    people.
    
    This code is causing real things to break today:
    
            https://lkml.org/lkml/2013/1/9/376
    
    I looked in to actually fixing this, but it requires surgery
    to way too much brittle code, as well as stuff like
    per_cpu_ptr_to_phys().
    
    [ hpa: Cc: this for -stable, since it is a memory corruption issue.
      However, an alternative is to simply mark NUMA as depends BROKEN
      rather than EXPERIMENTAL in the X86_32 subclause... ]
    
    Link: http://lkml.kernel.org/r/20130131005616.1C79F411@kernel.stglabs.ibm.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    [bwh: For 3.2, using the suggested alternative]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 1156e00581faf102d8b6b45c6210d73dd256abd1
Author: Clemens Ladisch <clemens@ladisch.de>
Date:   Thu Jan 31 21:14:33 2013 +0100

    ALSA: usb-audio: fix Roland A-PRO support
    
    commit 7da58046482fceb17c4a0d4afefd9507ec56de7f upstream.
    
    The quirk for the Roland/Cakewalk A-PRO keyboards accidentally used the
    wrong interface number, which prevented the driver from attaching to the
    device.
    
    Signed-off-by: Clemens Ladisch <clemens@ladisch.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 6c7050330611973632ce7d73f0e914ed6f63f946
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Mon Jan 28 16:14:31 2013 +0000

    staging: comedi: disallow COMEDI_DEVCONFIG on non-board minors
    
    commit 754ab5c0e55dd118273ca2c217c4d95e9fbc8259 upstream.
    
    Comedi has two sorts of minor devices:
    (a) normal board minor devices in the range 0 to
    COMEDI_NUM_BOARD_MINORS-1 inclusive; and
    (b) special subdevice minor devices in the range COMEDI_NUM_BOARD_MINORS
    upwards that are used to open the same underlying comedi device as the
    normal board minor devices, but with non-default read and write
    subdevices for asynchronous commands.
    
    The special subdevice minor devices get created when a board supporting
    asynchronous commands is attached to a normal board minor device, and
    destroyed when the board is detached from the normal board minor device.
    One way to attach or detach a board is by using the COMEDI_DEVCONFIG
    ioctl.  This should only be used on normal board minors as the special
    subdevice minors are too ephemeral.  In particular, the change
    introduced in commit 7d3135af399e92cf4c9bbc5f86b6c140aab3b88c ("staging:
    comedi: prevent auto-unconfig of manually configured devices") breaks
    horribly for special subdevice minor devices.
    
    Since there's no legitimate use for the COMEDI_DEVCONFIG ioctl on a
    special subdevice minor device node, disallow it and return -ENOTTY.
    
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 39b9d4375b2ccdf7df13f94bbf29a308c90cd03f
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Fri Jan 25 15:34:15 2013 +0100

    s390/kvm: Fix store status for ACRS/FPRS
    
    commit 15bc8d8457875f495c59d933b05770ba88d1eacb upstream.
    
    On store status we need to copy the current state of registers
    into a save area. Currently we might save stale versions:
    The sie state descriptor doesnt have fields for guest ACRS,FPRS,
    those registers are simply stored in the host registers. The host
    program must copy these away if needed. We do that in vcpu_put/load.
    
    If we now do a store status in KVM code between vcpu_put/load, the
    saved values are not up-to-date. Lets collect the ACRS/FPRS before
    saving them.
    
    This also fixes some strange problems with hotplug and virtio-ccw,
    since the low level machine check handler (on hotplug a machine check
    will happen) will revalidate all registers with the content of the
    save area.
    
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Gleb Natapov <gleb@redhat.com>
    [bwh: Backported to 3.2 as done in 3.0 by Jiri Slaby]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Cc: Jiri Slaby <jslaby@suse.cz>

commit 3e411534ea3be89a7d0ddf4e62e5c5b79d80556a
Author: Jan Kara <jack@suse.cz>
Date:   Tue Jan 29 22:48:17 2013 -0500

    ext4: fix possible use-after-free with AIO
    
    commit 091e26dfc156aeb3b73bc5c5f277e433ad39331c upstream.
    
    Running AIO is pinning inode in memory using file reference. Once AIO
    is completed using aio_complete(), file reference is put and inode can
    be freed from memory. So we have to be sure that calling aio_complete()
    is the last thing we do with the inode.
    
    Reviewed-by: Carlos Maiolino <cmaiolino@redhat.com>
    Acked-by: Jeff Moyer <jmoyer@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 70430b37bf00e72209fb13e5f232db3d4d0b48e9
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Jan 24 23:24:56 2013 -0500

    quota: autoload the quota_v2 module for QFMT_VFS_V1 quota format
    
    commit c3ad83d9efdfe6a86efd44945a781f00c879b7b4 upstream.
    
    Otherwise, ext4 file systems with the quota featured enable will get a
    very confusing "No such process" error message if the quota code is
    built as a module and the quota_v2 module has not been loaded.
    
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Reviewed-by: Carlos Maiolino <cmaiolino@redhat.com>
    Acked-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit d18e2707f1f3e96b59313f338123a88ba59b4a87
Author: BjÃ¸rn Mork <bjorn@mork.no>
Date:   Wed Jan 23 10:44:36 2013 +0100

    USB: option: add and update Alcatel modems
    
    commit f8f0302bbcbd1b14655bef29f6996a2152be559d upstream.
    
    Adding three currently unsupported modems based on information
    from .inf driver files:
    
      Diag  VID_1BBB&PID_0052&MI_00
      AGPS  VID_1BBB&PID_0052&MI_01
      VOICE VID_1BBB&PID_0052&MI_02
      AT    VID_1BBB&PID_0052&MI_03
      Modem VID_1BBB&PID_0052&MI_05
      wwan  VID_1BBB&PID_0052&MI_06
    
      Diag  VID_1BBB&PID_00B6&MI_00
      AT    VID_1BBB&PID_00B6&MI_01
      Modem VID_1BBB&PID_00B6&MI_02
      wwan  VID_1BBB&PID_00B6&MI_03
    
      Diag  VID_1BBB&PID_00B7&MI_00
      AGPS  VID_1BBB&PID_00B7&MI_01
      VOICE VID_1BBB&PID_00B7&MI_02
      AT    VID_1BBB&PID_00B7&MI_03
      Modem VID_1BBB&PID_00B7&MI_04
      wwan  VID_1BBB&PID_00B7&MI_05
    
    Updating the blacklist info for the X060S_X200 and X220_X500D,
    reserving interfaces for a wwan driver, based on
    
      wwan VID_1BBB&PID_0000&MI_04
      wwan VID_1BBB&PID_0017&MI_06
    
    Signed-off-by: BjÃ¸rn Mork <bjorn@mork.no>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit f51cb5d14fe696356c6e4118d0a6a4b533154dba
Author: Igor Grinberg <grinberg@compulab.co.il>
Date:   Sun Jan 13 13:49:47 2013 +0200

    ARM: PXA3xx: program the CSMSADRCFG register
    
    commit d107a204154ddd79339203c2deeb7433f0cf6777 upstream.
    
    The Chip Select Configuration Register must be programmed to 0x2 in
    order to achieve the correct behavior of the Static Memory Controller.
    
    Without this patch devices wired to DFI and accessed through SMC cannot
    be accessed after resume from S2.
    
    Do not rely on the boot loader to program the CSMSADRCFG register by
    programming it in the kernel smemc module.
    
    Signed-off-by: Igor Grinberg <grinberg@compulab.co.il>
    Acked-by: Eric Miao <eric.y.miao@gmail.com>
    Signed-off-by: Haojian Zhuang <haojian.zhuang@gmail.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 0af31617ad5cf724312c90f78ed95cb6988c3d6f
Author: John David Anglin <dave.anglin@bell.net>
Date:   Mon Jan 14 19:45:00 2013 -0500

    Purge existing TLB entries in set_pte_at and ptep_set_wrprotect
    
    commit 7139bc1579901b53db7e898789e916ee2fb52d78 upstream.
    
    This patch goes a long way toward fixing the minifail bug, and
    itÂ  significantly improves the stability of SMP machines such as
    the rp3440.Â  When writeÂ  protecting a page for COW, we need to
    purge the existing translation.Â  Otherwise, the COW break
    doesn't occur as expected because the TLB may still have a stale entry
    which allows writes.
    
    [jejb: fix up checkpatch errors]
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 26d9655e02f35f47c2d2fd026dcd19a7d0b233cd
Author: Jean Delvare <khali@linux-fr.org>
Date:   Sun Dec 16 22:00:50 2012 +0100

    pcmcia/vrc4171: Add missing spinlock init
    
    commit 811af9723859884f2f771f3174f3ddedab7c53b5 upstream.
    
    It doesn't seem this spinlock was properly initialized. This bug was
    introduced by commit 7a410e8d4d97457c8c381e2de9cdc7bd3306badc.
    
    Signed-off-by: Jean Delvare <khali@linux-fr.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 99d930c0ffe5396442f93cd3c421a9bd1984b923
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sat Jan 12 16:19:36 2013 -0500

    ext4: return ENOMEM if sb_getblk() fails
    
    commit 860d21e2c585f7ee8a4ecc06f474fdc33c9474f4 upstream.
    
    The only reason for sb_getblk() failing is if it can't allocate the
    buffer_head.  So ENOMEM is more appropriate than EIO.  In addition,
    make sure that the file system is marked as being inconsistent if
    sb_getblk() fails.
    
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    [bwh: Backported to 3.2:
     - Adjust context
     - Drop change to inline.c
     - Call to ext4_ext_check() from ext4_ext_find_extent() is conditional]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 066f289835f09a3f744d6bac96f25e25d20b3ded
Author: Thadeu Lima de Souza Cascardo <cascardo@linux.vnet.ibm.com>
Date:   Fri Dec 28 09:13:19 2012 +0000

    powerpc/eeh: Fix crash when adding a device in a slot with DDW
    
    commit 6a040ce72598159a74969a2d01ab0ba5ee6536b3 upstream.
    
    The DDW code uses a eeh_dev struct from the pci_dev. However, this is
    not set until eeh_add_device_late is called.
    
    Since pci_bus_add_devices is called before eeh_add_device_late, the PCI
    devices are added to the bus, making drivers' probe hooks to be called.
    These will call set_dma_mask, which will call the DDW code, which will
    require the eeh_dev struct from pci_dev. This would result in a crash,
    due to a NULL dereference.
    
    Calling eeh_add_device_late after pci_bus_add_devices would make the
    system BUG, because device files shouldn't be added to devices there
    were not added to the system. So, a new function is needed to add such
    files only after pci_bus_add_devices have been called.
    
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@linux.vnet.ibm.com>
    Acked-by: Gavin Shan <shangw@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    [bwh: Backported to 3.2: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 10928eb067be9d946771fe1adcb22bbaad43830c
Author: Maciej Sosnowski <maciej.sosnowski@intel.com>
Date:   Wed May 23 17:27:07 2012 +0200

    dca: check against empty dca_domains list before unregister provider
    
    commit c419fcfd071cf34ba00f9f65282583772d2655e7 upstream.
    
    When providers get blocked unregister_dca_providers() is called ending up
    with dca_providers and dca_domain lists emptied. Dca should be prevented from
    trying to unregister any provider if dca_domain list is found empty.
    
    Reported-by: Jiang Liu <jiang.liu@huawei.com>
    Tested-by: Gaohuai Han <hangaohuai@huawei.com>
    Signed-off-by: Maciej Sosnowski <maciej.sosnowski@intel.com>
    Signed-off-by: Dan Williams <djbw@fb.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 5a82145cb978983b79993ee1d0b1982f3b80cd9b
Author: Al Viro <viro@ZenIV.linux.org.uk>
Date:   Sun Dec 16 16:04:46 2012 -0300

    omap_vout: find_vma() needs ->mmap_sem held
    
    commit 55ee64b30a38d688232e5eb2860467dddc493573 upstream.
    
    Walking rbtree while it's modified is a Bad Idea(tm); besides,
    the result of find_vma() can be freed just as it's getting returned
    to caller.  Fortunately, it's easy to fix - just take ->mmap_sem a bit
    earlier (and don't bother with find_vma() at all if virtp >= PAGE_OFFSET -
    in that case we don't even look at its result).
    
    While we are at it, what prevents VIDIOC_PREPARE_BUF calling
    v4l_prepare_buf() -> (e.g) vb2_ioctl_prepare_buf() -> vb2_prepare_buf() ->
    __buf_prepare() -> __qbuf_userptr() -> vb2_vmalloc_get_userptr() -> find_vma(),
    AFAICS without having taken ->mmap_sem anywhere in process?  The code flow
    is bloody convoluted and depends on a bunch of things done by initialization,
    so I certainly might've missed something...
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Sakari Ailus <sakari.ailus@iki.fi>
    Cc: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Cc: Archit Taneja <archit@ti.com>
    Cc: Prabhakar Lad <prabhakar.lad@ti.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    [bwh: Backported to 3.2: adjust filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 754aed1b98d1c1ed2a8eaae2fc933bc9c6a87629
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Sat Nov 24 21:35:48 2012 -0300

    v4l: Reset subdev v4l2_dev field to NULL if registration fails
    
    commit 317efce991620adc589b3005b9baed433dcb2a56 upstream.
    
    When subdev registration fails the subdev v4l2_dev field is left to a
    non-NULL value. Later calls to v4l2_device_unregister_subdev() will
    consider the subdev as registered and will module_put() the subdev
    module without any matching module_get().
    Fix this by setting the subdev v4l2_dev field to NULL in
    v4l2_device_register_subdev() when the function fails.
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
    [bwh: Backported to 3.2: adjust context, filename]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 4e392406854be9807fbd51e626ec74530655e8a4
Author: Tejun Heo <tj@kernel.org>
Date:   Tue Dec 18 10:35:02 2012 -0800

    workqueue: consider work function when searching for busy work items
    
    commit a2c1c57be8d9fd5b716113c8991d3d702eeacf77 upstream.
    
    To avoid executing the same work item concurrenlty, workqueue hashes
    currently busy workers according to their current work items and looks
    up the the table when it wants to execute a new work item.  If there
    already is a worker which is executing the new work item, the new item
    is queued to the found worker so that it gets executed only after the
    current execution finishes.
    
    Unfortunately, a work item may be freed while being executed and thus
    recycled for different purposes.  If it gets recycled for a different
    work item and queued while the previous execution is still in
    progress, workqueue may make the new work item wait for the old one
    although the two aren't really related in any way.
    
    In extreme cases, this false dependency may lead to deadlock although
    it's extremely unlikely given that there aren't too many self-freeing
    work item users and they usually don't wait for other work items.
    
    To alleviate the problem, record the current work function in each
    busy worker and match it together with the work item address in
    find_worker_executing_work().  While this isn't complete, it ensures
    that unrelated work items don't interact with each other and in the
    very unlikely case where a twisted wq user triggers it, it's always
    onto itself making the culprit easy to spot.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Andrey Isakov <andy51@gmx.ru>
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=51701
    [bwh: Backported to 3.2:
     - Adjust context
     - Incorporate earlier logging cleanup in process_one_work() from
       044c782ce3a9 ('workqueue: fix checkpatch issues')]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 99aee84b407aeab44e12ef46b5698a654d6552de
Author: Cornelia Huck <cornelia.huck@de.ibm.com>
Date:   Fri Dec 14 17:02:16 2012 +0100

    KVM: s390: Handle hosts not supporting s390-virtio.
    
    commit 55c171a6d90dc0574021f9c836127cfd1a7d2e30 upstream.
    
    Running under a kvm host does not necessarily imply the presence of
    a page mapped above the main memory with the virtio information;
    however, the code includes a hard coded access to that page.
    
    Instead, check for the presence of the page and exit gracefully
    before we hit an addressing exception if it does not exist.
    
    Reviewed-by: Marcelo Tosatti <mtosatti@redhat.com>
    Reviewed-by: Alexander Graf <agraf@suse.de>
    Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>
    Signed-off-by: Gleb Natapov <gleb@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 9771304decd27e25593b1c3f6cd80a91c1c8f219
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Nov 23 10:08:44 2012 +0100

    genirq: Avoid deadlock in spurious handling
    
    commit e716efde75267eab919cdb2bef5b2cb77f305326 upstream.
    
    commit 52553ddf(genirq: fix regression in irqfixup, irqpoll)
    introduced a potential deadlock by calling the action handler with the
    irq descriptor lock held.
    
    Remove the call and let the handling code run even for an interrupt
    where only a single action is registered. That matches the goal of
    the above commit and avoids the deadlock.
    
    Document the confusing action = desc->action reload in the handling
    loop while at it.
    
    Reported-and-tested-by: "Wang, Warner" <warner.wang@hp.com>
    Tested-by: Edward Donovan <edward.donovan@numble.net>
    Cc: "Wang, Song-Bo (Stoney)" <song-bo.wang@hp.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 3208ee7f73115f8a92912ad05a15b97da41fae58
Author: David S. Miller <davem@davemloft.net>
Date:   Thu Feb 14 11:49:01 2013 -0800

    sunvdc: Fix off-by-one in generic_request().
    
    [ Upstream commit f4d9605434c0fd4cc8639bf25cfc043418c52362 ]
    
    The 'operations' bitmap corresponds one-for-one with the operation
    codes, no adjustment is necessary.
    
    Reported-by: Mark Kettenis <mark.kettenis@xs4all.nl>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
