commit be67db109090b17b56eb8eb2190cd70700f107aa
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue May 13 14:00:04 2014 +0200

    Linux 3.10.40

commit 149849f8b5e2b6f3424dde4ad95c521954bafeb9
Author: Vineet Gupta <Vineet.Gupta1@synopsys.com>
Date:   Wed Apr 30 15:26:45 2014 +0530

    ARC: !PREEMPT: Ensure Return to kernel mode is IRQ safe
    
    commit 8aa9e85adac609588eeec356e5a85059b3b819ba upstream.
    
    There was a very small race window where resume to kernel mode from a
    Exception Path (or pure kernel mode which is true for most of ARC
    exceptions anyways), was not disabling interrupts in restore_regs,
    clobbering the exception regs
    
    Anton found the culprit call flow (after many sleepless nights)
    
    | 1. we got a Trap from user land
    | 2. started to service it.
    | 3. While doing some stuff on user-land memory (I think it is padzero()),
    |     we got a DataTlbMiss
    | 4. On return from it we are taking "resume_kernel_mode" path
    | 5. NEED_RESHED is not set, so we go to "return from exception" path in
    |     restore regs.
    | 6. there seems to be IRQ happening
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Cc: Anton Kolesov <Anton.Kolesov@synopsys.com>
    Cc: Francois Bedard <Francois.Bedard@synopsys.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec2d1018b19afeedaba7e0aff6ccd0f0c73c00e4
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Mon Apr 14 11:34:48 2014 +0200

    drm: cirrus: add power management support
    
    commit 2f1e800799bf478494cec3573cd63eb34ca89c9d upstream.
    
    cirrus kms driver lacks power management support, thus
    the vga display doesn't work any more after S3 resume.
    
    Fix this by adding suspend and resume functions.
    Also make the mode_set function unblank the screen.
    
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5da302cfd0307be7c3419d79ae5afb819358f388
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Apr 23 13:02:35 2014 -0700

    Input: synaptics - add min/max quirk for ThinkPad Edge E431
    
    commit 27a38856a948c3e8de30dc71647ff9e1778c99fc upstream.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e1aef05e5efb53285aacf6a1fd96ad72b67ee00
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Apr 19 22:31:18 2014 -0700

    Input: synaptics - add min/max quirk for ThinkPad T431s, L440, L540, S1 Yoga and X1
    
    commit 46a2986ebbe18757c2d8c352f8fb6e0f4f0754e3 upstream.
    
    We expect that all the Haswell series will need such quirks, sigh.
    
    The T431s seems to be T430 hardware in a T440s case, using the T440s touchpad,
    with the same min/max issue.
    
    The X1 Carbon 3rd generation name says 2nd while it is a 3rd generation.
    
    The X1 and T431s share a PnPID with the T540p, but the reported ranges are
    closer to those of the T440s.
    
    HdG: Squashed 5 quirk patches into one. T431s + L440 + L540 are written by me,
    S1 Yoga and X1 are written by Benjamin Tissoires.
    
    Hdg: Standardized S1 Yoga and X1 values, Yoga uses the same touchpad as the
    X240, X1 uses the same touchpad as the T440.
    
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72a6e594497032bd911bd187a88fae4b4473abb3
Author: Jeff Layton <jlayton@kernel.org>
Date:   Tue Mar 25 11:55:26 2014 -0700

    lockd: ensure we tear down any live sockets when socket creation fails during lockd_up
    
    commit 679b033df48422191c4cac52b610d9980e019f9b upstream.
    
    We had a Fedora ABRT report with a stack trace like this:
    
    kernel BUG at net/sunrpc/svc.c:550!
    invalid opcode: 0000 [#1] SMP
    [...]
    CPU: 2 PID: 913 Comm: rpc.nfsd Not tainted 3.13.6-200.fc20.x86_64 #1
    Hardware name: Hewlett-Packard HP ProBook 4740s/1846, BIOS 68IRR Ver. F.40 01/29/2013
    task: ffff880146b00000 ti: ffff88003f9b8000 task.ti: ffff88003f9b8000
    RIP: 0010:[<ffffffffa0305fa8>]  [<ffffffffa0305fa8>] svc_destroy+0x128/0x130 [sunrpc]
    RSP: 0018:ffff88003f9b9de0  EFLAGS: 00010206
    RAX: ffff88003f829628 RBX: ffff88003f829600 RCX: 00000000000041ee
    RDX: 0000000000000000 RSI: 0000000000000286 RDI: 0000000000000286
    RBP: ffff88003f9b9de8 R08: 0000000000017360 R09: ffff88014fa97360
    R10: ffffffff8114ce57 R11: ffffea00051c9c00 R12: ffff88003f829600
    R13: 00000000ffffff9e R14: ffffffff81cc7cc0 R15: 0000000000000000
    FS:  00007f4fde284840(0000) GS:ffff88014fa80000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f4fdf5192f8 CR3: 00000000a569a000 CR4: 00000000001407e0
    Stack:
     ffff88003f792300 ffff88003f9b9e18 ffffffffa02de02a 0000000000000000
     ffffffff81cc7cc0 ffff88003f9cb000 0000000000000008 ffff88003f9b9e60
     ffffffffa033bb35 ffffffff8131c86c ffff88003f9cb000 ffff8800a5715008
    Call Trace:
     [<ffffffffa02de02a>] lockd_up+0xaa/0x330 [lockd]
     [<ffffffffa033bb35>] nfsd_svc+0x1b5/0x2f0 [nfsd]
     [<ffffffff8131c86c>] ? simple_strtoull+0x2c/0x50
     [<ffffffffa033c630>] ? write_pool_threads+0x280/0x280 [nfsd]
     [<ffffffffa033c6bb>] write_threads+0x8b/0xf0 [nfsd]
     [<ffffffff8114efa4>] ? __get_free_pages+0x14/0x50
     [<ffffffff8114eff6>] ? get_zeroed_page+0x16/0x20
     [<ffffffff811dec51>] ? simple_transaction_get+0xb1/0xd0
     [<ffffffffa033c098>] nfsctl_transaction_write+0x48/0x80 [nfsd]
     [<ffffffff811b8b34>] vfs_write+0xb4/0x1f0
     [<ffffffff811c3f99>] ? putname+0x29/0x40
     [<ffffffff811b9569>] SyS_write+0x49/0xa0
     [<ffffffff810fc2a6>] ? __audit_syscall_exit+0x1f6/0x2a0
     [<ffffffff816962e9>] system_call_fastpath+0x16/0x1b
    Code: 31 c0 e8 82 db 37 e1 e9 2a ff ff ff 48 8b 07 8b 57 14 48 c7 c7 d5 c6 31 a0 48 8b 70 20 31 c0 e8 65 db 37 e1 e9 f4 fe ff ff 0f 0b <0f> 0b 66 0f 1f 44 00 00 0f 1f 44 00 00 55 48 89 e5 41 56 41 55
    RIP  [<ffffffffa0305fa8>] svc_destroy+0x128/0x130 [sunrpc]
     RSP <ffff88003f9b9de0>
    
    Evidently, we created some lockd sockets and then failed to create
    others. make_socks then returned an error and we tried to tear down the
    svc, but svc->sv_permsocks was not empty so we ended up tripping over
    the BUG() in svc_destroy().
    
    Fix this by ensuring that we tear down any live sockets we created when
    socket creation is going to return an error.
    
    Fixes: 786185b5f8abefa (SUNRPC: move per-net operations from...)
    Reported-by: Raphos <raphoszap@laposte.net>
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Reviewed-by: Stanislav Kinsbursky <skinsbursky@parallels.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2e8845036f5cd4391fc753367604562c65d8008
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Fri Mar 28 02:15:02 2014 -0400

    dm thin: fix dangling bio in process_deferred_bios error path
    
    commit fe76cd88e654124d1431bb662a0fc6e99ca811a5 upstream.
    
    If unable to ensure_next_mapping() we must add the current bio, which
    was removed from the @bios list via bio_list_pop, back to the
    deferred_bios list before all the remaining @bios.
    
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Acked-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff3296214ce60fb2215ef06143a773eb48a0e5d3
Author: Joe Thornber <ejt@redhat.com>
Date:   Thu Mar 27 14:13:20 2014 +0000

    dm transaction manager: fix corruption due to non-atomic transaction commit
    
    commit a9d45396f5956d0b615c7ae3b936afd888351a47 upstream.
    
    The persistent-data library used by dm-thin, dm-cache, etc is
    transactional.  If anything goes wrong, such as an io error when writing
    new metadata or a power failure, then we roll back to the last
    transaction.
    
    Atomicity when committing a transaction is achieved by:
    
    a) Never overwriting data from the previous transaction.
    b) Writing the superblock last, after all other metadata has hit the
       disk.
    
    This commit and the following commit ("dm: take care to copy the space
    map roots before locking the superblock") fix a bug associated with (b).
    When committing it was possible for the superblock to still be written
    in spite of an io error occurring during the preceeding metadata flush.
    With these commits we're careful not to take the write lock out on the
    superblock until after the metadata flush has completed.
    
    Change the transaction manager's semantics for dm_tm_commit() to assume
    all data has been flushed _before_ the single superblock that is passed
    in.
    
    As a prerequisite, split the block manager's block unlocking and
    flushing by simplifying dm_bm_flush_and_unlock() to dm_bm_flush().  Now
    the unlocking must be done separately.
    
    This issue was discovered by forcing io errors at the crucial time
    using dm-flakey.
    
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c364acd2ce66025c9980cfd2399097376a2bab2
Author: Giacomo Comes <comes@naic.edu>
Date:   Thu Apr 3 14:13:55 2014 -0400

    Skip intel_crt_init for Dell XPS 8700
    
    commit 10b6ee4a87811a110cb01eaca01eb04da6801baf upstream.
    
    The Dell XPS 8700 has a onboard Display port and HDMI port and no VGA port.
    The call intel_crt_init freeze the machine, so skip such call.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=73559
    Signed-off-by: Giacomo Comes <comes at naic.edu>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67876f85f8cd0282c652a14e227e16121dc54ed8
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Dec 5 17:53:50 2013 +0300

    mtd: sm_ftl: heap corruption in sm_create_sysfs_attributes()
    
    commit b4c233057771581698a13694ab6f33b48ce837dc upstream.
    
    We always put a NUL terminator one space past the end of the "vendor"
    buffer.  Walter Harms also pointed out that this should just use
    kstrndup().
    
    Fixes: 7d17c02a01a1 ('mtd: Add new SmartMedia/xD FTL')
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Brian Norris <computersforpeace@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5c4957067ada52d90ac2b5b52e56999aae2b4d5
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Feb 17 23:03:08 2014 +0300

    mtd: nuc900_nand: NULL dereference in nuc900_nand_enable()
    
    commit c69dbbf3335a21aae74376d7e5db50a486d52439 upstream.
    
    Instead of writing to "nand->reg + REG_FMICSR" we write to "REG_FMICSR"
    which is NULL and not a valid register.
    
    Fixes: 8bff82cbc308 ('mtd: add nand support for w90p910 (v2)')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Brian Norris <computersforpeace@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71eec3f820e23c9f2f9f709c49b9661d04d024fb
Author: Herve Codina <Herve.CODINA@celad.com>
Date:   Mon Mar 3 12:15:29 2014 +0100

    mtd: atmel_nand: Disable subpage NAND write when using Atmel PMECC
    
    commit 90445ff6241e2a13445310803e2efa606c61f276 upstream.
    
    Crash detected on sam5d35 and its pmecc nand ecc controller.
    
    The problem was a call to chip->ecc.hwctl from nand_write_subpage_hwecc
    (nand_base.c) when we write a sub page.
    chip->ecc.hwctl function is not set when we are using PMECC controller.
    As a workaround, set NAND_NO_SUBPAGE_WRITE for PMECC controller in
    order to disable sub page access in nand_write_page.
    
    Signed-off-by: Herve Codina <Herve.CODINA@celad.com>
    Acked-by: Josh Wu <josh.wu@atmel.com>
    Signed-off-by: Brian Norris <computersforpeace@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c6859c7f5b26fc236d301563dd5b3d5945cf557
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jan 23 14:43:10 2014 -0500

    tgafb: fix data copying
    
    commit 6b0df6827bb6fcacb158dff29ad0a62d6418b534 upstream.
    
    The functions for data copying copyarea_foreward_8bpp and
    copyarea_backward_8bpp are buggy, they produce screen corruption.
    
    This patch fixes the functions and moves the logic to one function
    "copyarea_8bpp". For simplicity, the function only handles copying that
    is aligned on 8 pixes. If we copy an unaligned area, generic function
    cfb_copyarea is used.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83fa27bdb9ed1dee900b21ffc9c75f2f2906d141
Author: Marek Vasut <marex@denx.de>
Date:   Mon Mar 24 03:38:10 2014 +0100

    gpio: mxs: Allow for recursive enable_irq_wake() call
    
    commit a585f87c863e4e1d496459d382b802bf5ebe3717 upstream.
    
    The scenario here is that someone calls enable_irq_wake() from somewhere
    in the code. This will result in the lockdep producing a backtrace as can
    be seen below. In my case, this problem is triggered when using the wl1271
    (TI WlCore) driver found in drivers/net/wireless/ti/ .
    
    The problem cause is rather obvious from the backtrace, but let's outline
    the dependency. enable_irq_wake() grabs the IRQ buslock in irq_set_irq_wake(),
    which in turns calls mxs_gpio_set_wake_irq() . But mxs_gpio_set_wake_irq()
    calls enable_irq_wake() again on the one-level-higher IRQ , thus it tries to
    grab the IRQ buslock again in irq_set_irq_wake() . Because the spinlock in
    irq_set_irq_wake()->irq_get_desc_buslock()->__irq_get_desc_lock() is not
    marked as recursive, lockdep will spew the stuff below.
    
    We know we can safely re-enter the lock, so use IRQ_GC_INIT_NESTED_LOCK to
    fix the spew.
    
     =============================================
     [ INFO: possible recursive locking detected ]
     3.10.33-00012-gf06b763-dirty #61 Not tainted
     ---------------------------------------------
     kworker/0:1/18 is trying to acquire lock:
      (&irq_desc_lock_class){-.-...}, at: [<c00685f0>] __irq_get_desc_lock+0x48/0x88
    
     but task is already holding lock:
      (&irq_desc_lock_class){-.-...}, at: [<c00685f0>] __irq_get_desc_lock+0x48/0x88
    
     other info that might help us debug this:
      Possible unsafe locking scenario:
    
            CPU0
            ----
       lock(&irq_desc_lock_class);
       lock(&irq_desc_lock_class);
    
      *** DEADLOCK ***
    
      May be due to missing lock nesting notation
    
     3 locks held by kworker/0:1/18:
      #0:  (events){.+.+.+}, at: [<c0036308>] process_one_work+0x134/0x4a4
      #1:  ((&fw_work->work)){+.+.+.}, at: [<c0036308>] process_one_work+0x134/0x4a4
      #2:  (&irq_desc_lock_class){-.-...}, at: [<c00685f0>] __irq_get_desc_lock+0x48/0x88
    
     stack backtrace:
     CPU: 0 PID: 18 Comm: kworker/0:1 Not tainted 3.10.33-00012-gf06b763-dirty #61
     Workqueue: events request_firmware_work_func
     [<c0013eb4>] (unwind_backtrace+0x0/0xf0) from [<c0011c74>] (show_stack+0x10/0x14)
     [<c0011c74>] (show_stack+0x10/0x14) from [<c005bb08>] (__lock_acquire+0x140c/0x1a64)
     [<c005bb08>] (__lock_acquire+0x140c/0x1a64) from [<c005c6a8>] (lock_acquire+0x9c/0x104)
     [<c005c6a8>] (lock_acquire+0x9c/0x104) from [<c051d5a4>] (_raw_spin_lock_irqsave+0x44/0x58)
     [<c051d5a4>] (_raw_spin_lock_irqsave+0x44/0x58) from [<c00685f0>] (__irq_get_desc_lock+0x48/0x88)
     [<c00685f0>] (__irq_get_desc_lock+0x48/0x88) from [<c0068e78>] (irq_set_irq_wake+0x20/0xf4)
     [<c0068e78>] (irq_set_irq_wake+0x20/0xf4) from [<c027260c>] (mxs_gpio_set_wake_irq+0x1c/0x24)
     [<c027260c>] (mxs_gpio_set_wake_irq+0x1c/0x24) from [<c0068cf4>] (set_irq_wake_real+0x30/0x44)
     [<c0068cf4>] (set_irq_wake_real+0x30/0x44) from [<c0068ee4>] (irq_set_irq_wake+0x8c/0xf4)
     [<c0068ee4>] (irq_set_irq_wake+0x8c/0xf4) from [<c0310748>] (wlcore_nvs_cb+0x10c/0x97c)
     [<c0310748>] (wlcore_nvs_cb+0x10c/0x97c) from [<c02be5e8>] (request_firmware_work_func+0x38/0x58)
     [<c02be5e8>] (request_firmware_work_func+0x38/0x58) from [<c0036394>] (process_one_work+0x1c0/0x4a4)
     [<c0036394>] (process_one_work+0x1c0/0x4a4) from [<c0036a4c>] (worker_thread+0x138/0x394)
     [<c0036a4c>] (worker_thread+0x138/0x394) from [<c003cb74>] (kthread+0xa4/0xb0)
     [<c003cb74>] (kthread+0xa4/0xb0) from [<c000ee00>] (ret_from_fork+0x14/0x34)
     wlcore: loaded
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Acked-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e357717f96ec2ce26ee16fb648bc505ff1b1a82
Author: Colin Ian King <colin.king@canonical.com>
Date:   Mon Apr 21 17:38:44 2014 +0100

    rtlwifi: rtl8188ee: initialize packet_beacon
    
    commit 328e203fc35f0b4f6df1c4943f74cf553bcc04f8 upstream.
    
    static code analysis from cppcheck reports:
    
    [drivers/net/wireless/rtlwifi/rtl8188ee/trx.c:322]:
      (error) Uninitialized variable: packet_beacon
    
    packet_beacon is not initialized and hence packet_beacon
    contains garbage from the stack, so set it to false.
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7037ead4a60cc4f30fb9a72475718ea821497f52
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Fri Apr 25 10:05:43 2014 -0500

    rtlwifi: rtl8192se: Fix regression due to commit 1bf4bbb
    
    commit 5f9186990ec4579ee5b7a99b3254c29eda479f36 upstream.
    
    Beginning with kernel 3.13, this driver fails on some systems. The problem
    was bisected to:
    
    Commit 1bf4bbb4024dcdab5e57634dd8ae1072d42a53ac
    Author: Felix Fietkau <nbd@openwrt.org>
    Title: mac80211: send control port protocol frames to the VO queue
    
    There is noting wrong with the above commit. The regression occurs because
    V0 queue on RTL8192SE cards uses priority 6, not the usual 7. The fix is to
    modify the rtl8192se routine that sets the correct transmit queue.
    
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=74541
    
    Reported-by: Alex Miller <almiller_1@yahoo.co.uk>
    Tested-by: Alex Miller <almiller_1@yahoo.co.uk>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 217bef054f56b287d7e18b9c533beafbfe5faefe
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Tue Mar 4 16:53:51 2014 -0600

    rtlwifi: rtl8192se: Fix too long disable of IRQs
    
    commit 2610decdd0b3808ba20471a999835cfee5275f98 upstream.
    
    In commit f78bccd79ba3cd9d9664981b501d57bdb81ab8a4 entitled "rtlwifi:
    rtl8192ce: Fix too long disable of IRQs", Olivier Langlois
    <olivier@trillion01.com> fixed a problem caused by an extra long disabling
    of interrupts. This patch makes the same fix for rtl8192se.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c980c82bc34215e983d7d7db81a55342c727fac0
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Tue Mar 4 16:53:50 2014 -0600

    rtlwifi: rtl8192cu: Fix too long disable of IRQs
    
    commit a53268be0cb9763f11da4f6fe3fb924cbe3a7d4a upstream.
    
    In commit f78bccd79ba3cd9d9664981b501d57bdb81ab8a4 entitled "rtlwifi:
    rtl8192ce: Fix too long disable of IRQs", Olivier Langlois
    <olivier@trillion01.com> fixed a problem caused by an extra long disabling
    of interrupts. This patch makes the same fix for rtl8192cu.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3151d410319f4eb88f4275ce37ca5d781357fe7b
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Tue Mar 4 16:53:52 2014 -0600

    rtlwifi: rtl8188ee: Fix too long disable of IRQs
    
    commit 6b6392715856d563719991e9ce95e773491a8983 upstream.
    
    In commit f78bccd79ba3cd9d9664981b501d57bdb81ab8a4 entitled "rtlwifi:
    rtl8192ce: Fix too long disable of IRQs", Olivier Langlois
    <olivier@trillion01.com> fixed a problem caused by an extra long disabling
    of interrupts. This patch makes the same fix for rtl8188ee.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8adfa292b5fd32f784422c691d63edf5c4cb1f18
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Tue Mar 4 16:53:53 2014 -0600

    rtlwifi: rtl8723ae: Fix too long disable of IRQs
    
    commit bfc1010c418a22cbebd8b1bd1e75dad6a527a609 upstream.
    
    In commit f78bccd79ba3cd9d9664981b501d57bdb81ab8a4 entitled "rtlwifi:
    rtl8192ce: Fix too long disable of IRQs", Olivier Langlois
    <olivier@trillion01.com> fixed a problem caused by an extra long disabling
    of interrupts. This patch makes the same fix for rtl8723ae.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8771da18d27db1295c4dcc7bd54a71d441c1731b
Author: Jeff Layton <jlayton@kernel.org>
Date:   Tue Apr 15 08:44:12 2014 -0400

    locks: allow __break_lease to sleep even when break_time is 0
    
    commit 4991a628a789dc5954e98e79476d9808812292ec upstream.
    
    A fl->fl_break_time of 0 has a special meaning to the lease break code
    that basically means "never break the lease". knfsd uses this to ensure
    that leases don't disappear out from under it.
    
    Unfortunately, the code in __break_lease can end up passing this value
    to wait_event_interruptible as a timeout, which prevents it from going
    to sleep at all. This causes __break_lease to spin in a tight loop and
    causes soft lockups.
    
    Fix this by ensuring that we pass a minimum value of 1 as a timeout
    instead.
    
    Cc: J. Bruce Fields <bfields@fieldses.org>
    Reported-by: Terry Barnaby <terry1@beam.ltd.uk>
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4dc15ca34591231e91a50b10320b6265e10aa127
Author: Felix Fietkau <nbd@openwrt.org>
Date:   Thu Apr 10 15:06:48 2014 +0200

    mac80211: exclude AP_VLAN interfaces from tx power calculation
    
    commit 764152ff66f4a8be1f9d7981e542ffdaa5bd7aff upstream.
    
    Their power value is initialized to zero. This patch fixes an issue
    where the configured power drops to the minimum value when AP_VLAN
    interfaces are created/removed.
    
    Signed-off-by: Felix Fietkau <nbd@openwrt.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 007058ac423d001c996682baf10fed481186df37
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Mar 27 15:39:20 2014 +0100

    mac80211: fix software remain-on-channel implementation
    
    commit 115b943a6ea12656088fa1ff6634c0d30815e55b upstream.
    
    Jouni reported that when doing off-channel transmissions mixed
    with on-channel transmissions, the on-channel ones ended up on
    the off-channel in some cases.
    
    The reason for that is that during the refactoring of the off-
    channel code, I lost the part that stopped all activity and as
    a consequence the on-channel frames (including data frames)
    were no longer queued but would be transmitted on the temporary
    channel.
    
    Fix this by simply restoring the lost activity stop call.
    
    Fixes: 2eb278e083549 ("mac80211: unify SW/offload remain-on-channel")
    Reported-by: Jouni Malinen <j@w1.fi>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea6dbcd027542fb255fa6cd34f88f8dfb697646b
Author: Michael Braun <michael-dev@fami-braun.de>
Date:   Thu Mar 6 15:08:43 2014 +0100

    mac80211: fix WPA with VLAN on AP side with ps-sta again
    
    commit 112c44b2df0984121a52fbda89425843b8e1a457 upstream.
    
    commit de74a1d9032f4d37ea453ad2a647e1aff4cd2591
      "mac80211: fix WPA with VLAN on AP side with ps-sta"
    fixed an issue where queued multicast packets would
    be sent out encrypted with the key of an other bss.
    
    commit "7cbf9d017dbb5e3276de7d527925d42d4c11e732"
      "mac80211: fix oops on mesh PS broadcast forwarding"
    essentially reverted it, because vif.type cannot be AP_VLAN
    due to the check to vif.type in ieee80211_get_buffered_bc before.
    
    As the later commit intended to fix the MESH case, fix it
    by checking for IFTYPE_AP instead of IFTYPE_AP_VLAN.
    
    Fixes: 7cbf9d017dbb ("mac80211: fix oops on mesh PS broadcast forwarding")
    Signed-off-by: Michael Braun <michael-dev@fami-braun.de>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e6d61f30ed8bac11313cbb0f8f0031f1bd5a268
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Mon Mar 10 15:22:03 2014 +0200

    iwlwifi: dvm: take mutex when sending SYNC BT config command
    
    commit 82e5a649453a3cf23516277abb84273768a1592b upstream.
    
    There is a flow in which we send the host command in SYNC
    mode, but we don't take priv->mutex.
    
    Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1046495
    
    Reviewed-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfd192c9983ea4e993cabf4f899ef587f31ab51e
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Apr 17 11:48:21 2014 -0700

    libata/ahci: accommodate tag ordered controllers
    
    commit 8a4aeec8d2d6a3edeffbdfae451cdf05cbf0fefd upstream.
    
    The AHCI spec allows implementations to issue commands in tag order
    rather than FIFO order:
    
            5.3.2.12 P:SelectCmd
            HBA sets pSlotLoc = (pSlotLoc + 1) mod (CAP.NCS + 1)
            or HBA selects the command to issue that has had the
            PxCI bit set to '1' longer than any other command
            pending to be issued.
    
    The result is that commands posted sequentially (time-wise) may play out
    of sequence when issued by hardware.
    
    This behavior has likely been hidden by drives that arrange for commands
    to complete in issue order.  However, it appears recent drives (two from
    different vendors that we have found so far) inflict out-of-order
    completions as a matter of course.  So, we need to take care to maintain
    ordered submission, otherwise we risk triggering a drive to fall out of
    sequential-io automation and back to random-io processing, which incurs
    large latency and degrades throughput.
    
    This issue was found in simple benchmarks where QD=2 seq-write
    performance was 30-50% *greater* than QD=32 seq-write performance.
    
    Tagging for -stable and making the change globally since it has a low
    risk-to-reward ratio.  Also, word is that recent versions of an unnamed
    OS also does it this way now.  So, drives in the field are already
    experienced with this tag ordering scheme.
    
    Cc: Dave Jiang <dave.jiang@intel.com>
    Cc: Ed Ciechanowski <ed.ciechanowski@intel.com>
    Reviewed-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43dae355ff1d15be58dd267a07aea6eb31ebfd9f
Author: Rafał Miłecki <zajec5@gmail.com>
Date:   Sat Apr 5 18:08:25 2014 +0200

    b43: Fix machine check error due to improper access of B43_MMIO_PSM_PHY_HDR
    
    commit 12cd43c6ed6da7bf7c5afbd74da6959cda6d056b upstream.
    
    Register B43_MMIO_PSM_PHY_HDR is 16 bit one, so accessing it with 32b
    functions isn't safe. On my machine it causes delayed (!) CPU exception:
    
    Disabling lock debugging due to kernel taint
    mce: [Hardware Error]: CPU 0: Machine Check Exception: 4 Bank 4: b200000000070f0f
    mce: [Hardware Error]: TSC 164083803dc
    mce: [Hardware Error]: PROCESSOR 2:20fc2 TIME 1396650505 SOCKET 0 APIC 0 microcode 0
    mce: [Hardware Error]: Run the above through 'mcelog --ascii'
    mce: [Hardware Error]: Machine check: Processor context corrupt
    Kernel panic - not syncing: Fatal machine check on current CPU
    Kernel Offset: 0x0 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffff9fffffff)
    
    Signed-off-by: Rafał Miłecki <zajec5@gmail.com>
    Acked-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecb4abb32b38bd7ef4a1fd0c8c122c6491f534c5
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jan 23 14:41:59 2014 -0500

    mach64: fix cursor when character width is not a multiple of 8 pixels
    
    commit 43751a1b8ee2e70ce392bf31ef3133da324e68b3 upstream.
    
    This patch fixes the hardware cursor on mach64 when font width is not a
    multiple of 8 pixels.
    
    If you load such a font, the cursor is expanded to the next 8-byte
    boundary and a part of the next character after the cursor is not
    visible.
    For example, when you load a font with 12-pixel width, the cursor width
    is 16 pixels and when the cursor is displayed, 4 pixels of the next
    character are not visible.
    
    The reason is this: atyfb_cursor is called with proper parameters to
    load an image that is 12-pixel wide. However, the number is aligned on
    the next 8-pixel boundary on the line
    "unsigned int width = (cursor->image.width + 7) >> 3;" and the whole
    function acts as it is was loading a 16-pixel image.
    
    This patch fixes it so that the value written to the framebuffer is
    padded with 0xaaaa (the transparent pattern) when the image size it not
    a multiple of 8 pixels. The transparent pattern causes that the cursor
    will not interfere with the next character.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 032a61b41df3fe43554d4aee1ec9f84ce0eda1db
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jan 23 14:41:09 2014 -0500

    mach64: use unaligned access
    
    commit c29dd8696dc5dbd50b3ac441b8a26751277ba520 upstream.
    
    This patch fixes mach64 to use unaligned access to the font bitmap.
    
    This fixes unaligned access warning on sparc64 when 14x8 font is loaded.
    
    On x86(64), unaligned access is handled in hardware, so both functions
    le32_to_cpup and get_unaligned_le32 perform the same operation.
    
    On RISC machines, unaligned access is not handled in hardware, so we
    better use get_unaligned_le32 to avoid the unaligned trap and warning.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 709b6a943bd0a1a3e0b49206230981f8d48ec532
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jan 23 14:39:04 2014 -0500

    matroxfb: restore the registers M_ACCESS and M_PITCH
    
    commit a772d4736641ec1b421ad965e13457c17379fc86 upstream.
    
    When X11 is running and the user switches back to console, the card
    modifies the content of registers M_MACCESS and M_PITCH in periodic
    intervals.
    
    This patch fixes it by restoring the content of these registers before
    issuing any accelerator command.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b984ea1f20cdd2eb84879defa4df9ebe85ce680
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jan 23 14:39:29 2014 -0500

    framebuffer: fix cfb_copyarea
    
    commit 00a9d699bc85052d2d3ed56251cd928024ce06a3 upstream.
    
    The function cfb_copyarea is buggy when the copy operation is not aligned on
    long boundary (4 bytes on 32-bit machines, 8 bytes on 64-bit machines).
    
    How to reproduce:
    - use x86-64 machine
    - use a framebuffer driver without acceleration (for example uvesafb)
    - set the framebuffer to 8-bit depth
            (for example fbset -a 1024x768-60 -depth 8)
    - load a font with character width that is not a multiple of 8 pixels
            note: the console-tools package cannot load a font that has
            width different from 8 pixels. You need to install the packages
            "kbd" and "console-terminus" and use the program "setfont" to
            set font width (for example: setfont Uni2-Terminus20x10)
    - move some text left and right on the bash command line and you get a
            screen corruption
    
    To expose more bugs, put this line to the end of uvesafb_init_info:
    info->flags |= FBINFO_HWACCEL_COPYAREA | FBINFO_READS_FAST;
    - Now framebuffer console will use cfb_copyarea for console scrolling.
    You get a screen corruption when console is scrolled.
    
    This patch is a rewrite of cfb_copyarea. It fixes the bugs, with this
    patch, console scrolling in 8-bit depth with a font width that is not a
    multiple of 8 pixels works fine.
    
    The cfb_copyarea code was very buggy and it looks like it was written
    and never tried with non-8-pixel font.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27dd47db1ba11a6f34d158a7dfa4c5bd78f81d1f
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Tue Jul 9 17:06:40 2013 +0530

    ARC: Entry Handler tweaks: Optimize away redundant IRQ_DISABLE_SAVE
    
    commit fce16bc35ae4a45634f3dc348d8d297a25c277cf upstream.
    
    In the exception return path, for both U/K cases, intr are already
    disabled (for various existing reasons). So when we drop down to
    @restore_regs, we need not redo that.
    
    There was subtle issue - when intr were NOT being disabled for
    ret-to-kernel-but-no-preemption case - now fixed by moving the
    IRQ_DISABLE further up in @resume_kernel_mode.
    
    So what do we gain:
    
    * Shaves off a few insn in return path.
    
    * Eliminates the need for IRQ_DISABLE_SAVE assembler macro for ARCv2
      hence allows for entry code sharing.
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a43738d057559e87e0036e25c33715d6eff11ed
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Tue May 14 18:30:50 2013 +0530

    ARC: Entry Handler tweaks: Simplify branch for in-kernel preemption
    
    commit 147aece29b15051173eb1e767018135361cdba89 upstream.
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6eed5b7500dc3754dc4d24f328f02bed118adb89
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Fri Apr 25 10:53:44 2014 +0200

    s390/bpf,jit: initialize A register if 1st insn is BPF_S_LDX_B_MSH
    
    commit 6e0de817594c61f3b392a9245deeb09609ec707d upstream.
    
    The A register needs to be initialized to zero in the prolog if the
    first instruction of the BPF program is BPF_S_LDX_B_MSH to prevent
    leaking the content of %r5 to user space.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 506841af86605c1d44df1d45ab271c69dcf46b70
Author: Sebastian Ott <sebott@linux.vnet.ibm.com>
Date:   Tue Apr 15 20:08:01 2014 +0200

    s390/chsc: fix SEI usage on old FW levels
    
    commit 06cd7a874ec6e09d151aeb1fa8600e14f1ff89f6 upstream.
    
    Using a notification type mask for the store event information chsc
    is unsupported on some firmware levels. Retry SEI with that mask set
    to zero (which is the old way of requesting only channel subsystem
    related events).
    
    Reported-and-tested-by: Stefan Haberland <stefan.haberland@de.ibm.com>
    Reviewed-by: Peter Oberparleiter <oberpar@linux.vnet.ibm.com>
    Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2b708cf2f9c51bf5a75845eb0b2f2390707957c
Author: Michael Neuling <mikey@neuling.org>
Date:   Fri Apr 4 20:19:48 2014 +1100

    powerpc/tm: Disable IRQ in tm_recheckpoint
    
    commit e6b8fd028b584ffca7a7255b8971f254932c9fce upstream.
    
    We can't take an IRQ when we're about to do a trechkpt as our GPR state is set
    to user GPR values.
    
    We've hit this when running some IBM Java stress tests in the lab resulting in
    the following dump:
    
      cpu 0x3f: Vector: 700 (Program Check) at [c000000007eb3d40]
          pc: c000000000050074: restore_gprs+0xc0/0x148
          lr: 00000000b52a8184
          sp: ac57d360
         msr: 8000000100201030
        current = 0xc00000002c500000
        paca    = 0xc000000007dbfc00     softe: 0     irq_happened: 0x00
          pid   = 34535, comm = Pooled Thread #
      R00 = 00000000b52a8184   R16 = 00000000b3e48fda
      R01 = 00000000ac57d360   R17 = 00000000ade79bd8
      R02 = 00000000ac586930   R18 = 000000000fac9bcc
      R03 = 00000000ade60000   R19 = 00000000ac57f930
      R04 = 00000000f6624918   R20 = 00000000ade79be8
      R05 = 00000000f663f238   R21 = 00000000ac218a54
      R06 = 0000000000000002   R22 = 000000000f956280
      R07 = 0000000000000008   R23 = 000000000000007e
      R08 = 000000000000000a   R24 = 000000000000000c
      R09 = 00000000b6e69160   R25 = 00000000b424cf00
      R10 = 0000000000000181   R26 = 00000000f66256d4
      R11 = 000000000f365ec0   R27 = 00000000b6fdcdd0
      R12 = 00000000f66400f0   R28 = 0000000000000001
      R13 = 00000000ada71900   R29 = 00000000ade5a300
      R14 = 00000000ac2185a8   R30 = 00000000f663f238
      R15 = 0000000000000004   R31 = 00000000f6624918
      pc  = c000000000050074 restore_gprs+0xc0/0x148
      cfar= c00000000004fe28 dont_restore_vec+0x1c/0x1a4
      lr  = 00000000b52a8184
      msr = 8000000100201030   cr  = 24804888
      ctr = 0000000000000000   xer = 0000000000000000   trap =  700
    
    This moves tm_recheckpoint to a C function and moves the tm_restore_sprs into
    that function.  It then adds IRQ disabling over the trechkpt critical section.
    It also sets the TEXASR FS in the signals code to ensure this is never set now
    that we explictly write the TM sprs in tm_recheckpoint.
    
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2b2d904290eb928793f06e179d8878c3ee1a394
Author: Anton Blanchard <anton@samba.org>
Date:   Thu Mar 6 16:10:11 2014 +1100

    powerpc/compat: 32-bit little endian machine name is ppcle, not ppc
    
    commit 422b9b9684db3c511e65c91842275c43f5910ae9 upstream.
    
    I noticed this when testing setarch. No, we don't magically
    support a big endian userspace on a little endian kernel.
    
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ff13c4bf4b0e3d5c90fb8b130b92622eda32990
Author: Tyler Stachecki <tstache1@binghamton.edu>
Date:   Fri Apr 25 16:41:04 2014 -0400

    mpt2sas: Don't disable device twice at suspend.
    
    commit af61e27c3f77c7623b5335590ae24b6a5c323e22 upstream.
    
    On suspend, _scsih_suspend calls mpt2sas_base_free_resources, which
    in turn calls pci_disable_device if the device is enabled prior to
    suspending. However, _scsih_suspend also calls pci_disable_device
    itself.
    
    Thus, in the event that the device is enabled prior to suspending,
    pci_disable_device will be called twice. This patch removes the
    duplicate call to pci_disable_device in _scsi_suspend as it is both
    unnecessary and results in a kernel oops.
    
    Signed-off-by: Tyler Stachecki <tstache1@binghamton.edu>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abf9fb59f0c3ac2c182dc6de2ef14c6fc33bc2de
Author: Fam Zheng <famz@redhat.com>
Date:   Mon Apr 14 10:16:09 2014 +0800

    virtio-scsi: Skip setting affinity on uninitialized vq
    
    commit 0c8482ac92db5ac15792caf23b7f7df9e4f48ae1 upstream.
    
    virtscsi_init calls virtscsi_remove_vqs on err, even before initializing
    the vqs. The latter calls virtscsi_set_affinity, so let's check the
    pointer there before setting affinity on it.
    
    This fixes a panic when setting device's num_queues=2 on RHEL 6.5:
    
    qemu-system-x86_64 ... \
    -device virtio-scsi-pci,id=scsi0,addr=0x13,...,num_queues=2 \
    -drive file=/stor/vm/dummy.raw,id=drive-scsi-disk,... \
    -device scsi-hd,drive=drive-scsi-disk,...
    
    [    0.354734] scsi0 : Virtio SCSI HBA
    [    0.379504] BUG: unable to handle kernel NULL pointer dereference at 0000000000000020
    [    0.380141] IP: [<ffffffff814741ef>] __virtscsi_set_affinity+0x4f/0x120
    [    0.380141] PGD 0
    [    0.380141] Oops: 0000 [#1] SMP
    [    0.380141] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.14.0+ #5
    [    0.380141] Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2007
    [    0.380141] task: ffff88003c9f0000 ti: ffff88003c9f8000 task.ti: ffff88003c9f8000
    [    0.380141] RIP: 0010:[<ffffffff814741ef>]  [<ffffffff814741ef>] __virtscsi_set_affinity+0x4f/0x120
    [    0.380141] RSP: 0000:ffff88003c9f9c08  EFLAGS: 00010256
    [    0.380141] RAX: 0000000000000000 RBX: ffff88003c3a9d40 RCX: 0000000000001070
    [    0.380141] RDX: 0000000000000002 RSI: 0000000000000000 RDI: 0000000000000000
    [    0.380141] RBP: ffff88003c9f9c28 R08: 00000000000136c0 R09: ffff88003c801c00
    [    0.380141] R10: ffffffff81475229 R11: 0000000000000008 R12: 0000000000000000
    [    0.380141] R13: ffffffff81cc7ca8 R14: ffff88003cac3d40 R15: ffff88003cac37a0
    [    0.380141] FS:  0000000000000000(0000) GS:ffff88003e400000(0000) knlGS:0000000000000000
    [    0.380141] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [    0.380141] CR2: 0000000000000020 CR3: 0000000001c0e000 CR4: 00000000000006f0
    [    0.380141] Stack:
    [    0.380141]  ffff88003c3a9d40 0000000000000000 ffff88003cac3d80 ffff88003cac3d40
    [    0.380141]  ffff88003c9f9c48 ffffffff814742e8 ffff88003c26d000 ffff88003c26d000
    [    0.380141]  ffff88003c9f9c68 ffffffff81474321 ffff88003c26d000 ffff88003c3a9d40
    [    0.380141] Call Trace:
    [    0.380141]  [<ffffffff814742e8>] virtscsi_set_affinity+0x28/0x40
    [    0.380141]  [<ffffffff81474321>] virtscsi_remove_vqs+0x21/0x50
    [    0.380141]  [<ffffffff81475231>] virtscsi_init+0x91/0x240
    [    0.380141]  [<ffffffff81365290>] ? vp_get+0x50/0x70
    [    0.380141]  [<ffffffff81475544>] virtscsi_probe+0xf4/0x280
    [    0.380141]  [<ffffffff81363ea5>] virtio_dev_probe+0xe5/0x140
    [    0.380141]  [<ffffffff8144c669>] driver_probe_device+0x89/0x230
    [    0.380141]  [<ffffffff8144c8ab>] __driver_attach+0x9b/0xa0
    [    0.380141]  [<ffffffff8144c810>] ? driver_probe_device+0x230/0x230
    [    0.380141]  [<ffffffff8144c810>] ? driver_probe_device+0x230/0x230
    [    0.380141]  [<ffffffff8144ac1c>] bus_for_each_dev+0x8c/0xb0
    [    0.380141]  [<ffffffff8144c499>] driver_attach+0x19/0x20
    [    0.380141]  [<ffffffff8144bf28>] bus_add_driver+0x198/0x220
    [    0.380141]  [<ffffffff8144ce9f>] driver_register+0x5f/0xf0
    [    0.380141]  [<ffffffff81d27c91>] ? spi_transport_init+0x79/0x79
    [    0.380141]  [<ffffffff8136403b>] register_virtio_driver+0x1b/0x30
    [    0.380141]  [<ffffffff81d27d19>] init+0x88/0xd6
    [    0.380141]  [<ffffffff81d27c18>] ? scsi_init_procfs+0x5b/0x5b
    [    0.380141]  [<ffffffff81ce88a7>] do_one_initcall+0x7f/0x10a
    [    0.380141]  [<ffffffff81ce8aa7>] kernel_init_freeable+0x14a/0x1de
    [    0.380141]  [<ffffffff81ce8b3b>] ? kernel_init_freeable+0x1de/0x1de
    [    0.380141]  [<ffffffff817dec20>] ? rest_init+0x80/0x80
    [    0.380141]  [<ffffffff817dec29>] kernel_init+0x9/0xf0
    [    0.380141]  [<ffffffff817e68fc>] ret_from_fork+0x7c/0xb0
    [    0.380141]  [<ffffffff817dec20>] ? rest_init+0x80/0x80
    [    0.380141] RIP  [<ffffffff814741ef>] __virtscsi_set_affinity+0x4f/0x120
    [    0.380141]  RSP <ffff88003c9f9c08>
    [    0.380141] CR2: 0000000000000020
    [    0.380141] ---[ end trace 8074b70c3d5e1d73 ]---
    [    0.475018] Kernel panic - not syncing: Attempted to kill init! exitcode=0x00000009
    [    0.475018]
    [    0.475068] Kernel Offset: 0x0 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffff9fffffff)
    [    0.475068] ---[ end Kernel panic - not syncing: Attempted to kill init! exitcode=0x00000009
    
    [jejb: checkpatch fixes]
    Signed-off-by: Fam Zheng <famz@redhat.com>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16440b5497cb3882d45b291147dbd61eb4951015
Author: Rusty Russell <rusty@rustcorp.com.au>
Date:   Thu Mar 13 11:23:38 2014 +1030

    virtio_balloon: don't softlockup on huge balloon changes.
    
    commit 1f74ef0f2d7d692fcd615621e0e734c3e7771413 upstream.
    
    When adding or removing 100G from a balloon:
    
        BUG: soft lockup - CPU#0 stuck for 22s! [vballoon:367]
    
    We have a wait_event_interruptible(), but the condition is always true
    (more ballooning to do) so we don't ever sleep.  We also have a
    wait_event() for the host to ack, but that is also always true as QEMU
    is synchronous for balloon operations.
    
    Reported-by: Gopesh Kumar Chaudhary <gopchaud@in.ibm.com>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a93daee35a6d511e71f19c7227c64a9dc2c3e273
Author: Huacai Chen <chenhc@lemote.com>
Date:   Sat Mar 22 17:21:44 2014 +0800

    MIPS: Hibernate: Flush TLB entries in swsusp_arch_resume()
    
    commit c14af233fbe279d0e561ecf84f1208b1bae087ef upstream.
    
    The original MIPS hibernate code flushes cache and TLB entries in
    swsusp_arch_resume(). But they are removed in Commit 44eeab67416711
    (MIPS: Hibernation: Remove SMP TLB and cacheflushing code.). A cross-
    CPU flush is surely unnecessary because all but the local CPU have
    already been disabled. But a local flush (at least the TLB flush) is
    needed. When we do hibernation on Loongson-3 with an E1000E NIC, it is
    very easy to produce a kernel panic (kernel page fault, or unaligned
    access). The root cause is E1000E driver use vzalloc_node() to allocate
    pages, the stale TLB entries of the booting kernel will be misused by
    the resumed target kernel.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Cc: John Crispin <john@phrozen.org>
    Cc: Steven J. Hill <Steven.Hill@imgtec.com>
    Cc: Aurelien Jarno <aurelien@aurel32.net>
    Cc: linux-mips@linux-mips.org
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Patchwork: https://patchwork.linux-mips.org/patch/6643/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d73b6735480b56ca74c8474368f01a31cabfb57
Author: James Hogan <jhogan@kernel.org>
Date:   Fri Mar 14 13:06:07 2014 +0000

    MIPS: KVM: Pass reserved instruction exceptions to guest
    
    commit 15505679362270d02c449626385cb74af8905514 upstream.
    
    Previously a reserved instruction exception while in guest code would
    cause a KVM internal error if kvm_mips_handle_ri() didn't recognise the
    instruction (including a RDHWR from an unrecognised hardware register).
    
    However the guest OS should really have the opportunity to catch the
    exception so that it can take the appropriate actions such as sending a
    SIGILL to the guest user process or emulating the instruction itself.
    
    Therefore in these cases emulate a guest RI exception and only return
    EMULATE_FAIL if that fails, being careful to revert the PC first in case
    the exception occurred in a branch delay slot in which case the PC will
    already point to the branch target.
    
    Also turn the printk messages relating to these cases into kvm_debug
    messages so that they aren't usually visible.
    
    This allows crashme to run in the guest without killing the entire VM.
    
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Gleb Natapov <gleb@kernel.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Sanjay Lal <sanjayl@kymasys.com>
    Cc: linux-mips@linux-mips.org
    Cc: kvm@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9ded882d5168e2fd5c0c20e2874f85c56016b4b
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Mar 28 20:41:50 2014 +0100

    KVM: ioapic: fix assignment of ioapic->rtc_status.pending_eoi (CVE-2014-0155)
    
    commit 5678de3f15010b9022ee45673f33bcfc71d47b60 upstream.
    
    QE reported that they got the BUG_ON in ioapic_service to trigger.
    I cannot reproduce it, but there are two reasons why this could happen.
    
    The less likely but also easiest one, is when kvm_irq_delivery_to_apic
    does not deliver to any APIC and returns -1.
    
    Because irqe.shorthand == 0, the kvm_for_each_vcpu loop in that
    function is never reached.  However, you can target the similar loop in
    kvm_irq_delivery_to_apic_fast; just program a zero logical destination
    address into the IOAPIC, or an out-of-range physical destination address.
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6b461e90f8fbebb8fa46f363999ed5023be7d3c
Author: Sergey Dyasly <dserrg@gmail.com>
Date:   Tue Sep 24 16:38:00 2013 +0100

    ARM: 7840/1: LPAE: don't reject mapping /dev/mem above 4GB
    
    commit 3159f372354e8e1f5dee714663d705dd2c7e0759 upstream.
    
    With LPAE enabled, physical address space is larger than 4GB. Allow mapping any
    part of it via /dev/mem by using PHYS_MASK to determine valid range.
    
    PHYS_MASK covers 40 bits with LPAE enabled and 32 bits otherwise.
    
    Reported-by: Vassili Karpov <av1474@comtv.ru>
    Signed-off-by: Sergey Dyasly <dserrg@gmail.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Cc: hujianyang <hujianyang@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d306606e58d53a9d8cd78fefacbe9a50b3aa9fcd
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Sun Mar 30 15:50:03 2014 -0700

    iser-target: Add missing se_cmd put for WRITE_PENDING in tx_comp_err
    
    commit 03e7848a64ed535a30f5d7fc6dede2d5a6a2534b upstream.
    
    This patch fixes a bug where outstanding RDMA_READs with WRITE_PENDING
    status require an extra target_put_sess_cmd() in isert_put_cmd() code
    when called from isert_cq_tx_comp_err() + isert_cq_drain_comp_llist()
    context during session shutdown.
    
    The extra kref PUT is required so that transport_generic_free_cmd()
    invokes the last target_put_sess_cmd() -> target_release_cmd_kref(),
    which will complete(&se_cmd->cmd_wait_comp) the outstanding se_cmd
    descriptor with WRITE_PENDING status, and awake the completion in
    target_wait_for_sess_cmds() to invoke TFO->release_cmd().
    
    The bug was manifesting itself in target_wait_for_sess_cmds() where
    a se_cmd descriptor with WRITE_PENDING status would end up sleeping
    indefinately.
    
    Acked-by: Sagi Grimberg <sagig@mellanox.com>
    Cc: Or Gerlitz <ogerlitz@mellanox.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50c648e394a0968f19d448b70bec82da88219963
Author: Matthew Daley <mattd@bugfuzz.com>
Date:   Mon Apr 28 19:05:21 2014 +1200

    floppy: don't write kernel-only members to FDRAWCMD ioctl output
    
    commit 2145e15e0557a01b9195d1c7199a1b92cb9be81f upstream.
    
    Do not leak kernel-only floppy_raw_cmd structure members to userspace.
    This includes the linked-list pointer and the pointer to the allocated
    DMA space.
    
    Signed-off-by: Matthew Daley <mattd@bugfuzz.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21506304588afab20b2d52aaa56b70e85aca6386
Author: Matthew Daley <mattd@bugfuzz.com>
Date:   Mon Apr 28 19:05:20 2014 +1200

    floppy: ignore kernel-only members in FDRAWCMD ioctl input
    
    commit ef87dbe7614341c2e7bfe8d32fcb7028cc97442c upstream.
    
    Always clear out these floppy_raw_cmd struct members after copying the
    entire structure from userspace so that the in-kernel version is always
    valid and never left in an interdeterminate state.
    
    Signed-off-by: Matthew Daley <mattd@bugfuzz.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abb5100737bba3f82b5514350fea89ca361ac66c
Author: Peter Hurley <peter@hurleysoftware.com>
Date:   Sat May 3 14:04:59 2014 +0200

    n_tty: Fix n_tty_write crash when echoing in raw mode
    
    commit 4291086b1f081b869c6d79e5b7441633dc3ace00 upstream.
    
    The tty atomic_write_lock does not provide an exclusion guarantee for
    the tty driver if the termios settings are LECHO & !OPOST.  And since
    it is unexpected and not allowed to call TTY buffer helpers like
    tty_insert_flip_string concurrently, this may lead to crashes when
    concurrect writers call pty_write. In that case the following two
    writers:
    * the ECHOing from a workqueue and
    * pty_write from the process
    race and can overflow the corresponding TTY buffer like follows.
    
    If we look into tty_insert_flip_string_fixed_flag, there is:
      int space = __tty_buffer_request_room(port, goal, flags);
      struct tty_buffer *tb = port->buf.tail;
      ...
      memcpy(char_buf_ptr(tb, tb->used), chars, space);
      ...
      tb->used += space;
    
    so the race of the two can result in something like this:
                  A                                B
    __tty_buffer_request_room
                                      __tty_buffer_request_room
    memcpy(buf(tb->used), ...)
    tb->used += space;
                                      memcpy(buf(tb->used), ...) ->BOOM
    
    B's memcpy is past the tty_buffer due to the previous A's tb->used
    increment.
    
    Since the N_TTY line discipline input processing can output
    concurrently with a tty write, obtain the N_TTY ldisc output_lock to
    serialize echo output with normal tty writes.  This ensures the tty
    buffer helper tty_insert_flip_string is not called concurrently and
    everything is fine.
    
    Note that this is nicely reproducible by an ordinary user using
    forkpty and some setup around that (raw termios + ECHO). And it is
    present in kernels at least after commit
    d945cb9cce20ac7143c2de8d88b187f62db99bdc (pty: Rework the pty layer to
    use the normal buffering logic) in 2.6.31-rc3.
    
    js: add more info to the commit log
    js: switch to bool
    js: lock unconditionally
    js: lock only the tty->ops->write call
    
    References: CVE-2014-0196
    Reported-and-tested-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Peter Hurley <peter@hurleysoftware.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Alan Cox <alan@lxorguk.ukuu.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 437c7b9d0b4b2ce5125c884887e59ead6b9062ad
Author: Michael Welling <mwelling@ieee.org>
Date:   Fri Apr 25 19:27:48 2014 -0500

    tty: serial: 8250_core.c Bug fix for Exar chips.
    
    commit b790f210fe8423eff881b2a8a93ba5dbc45534d0 upstream.
    
    The sleep function was updated to put the serial port to sleep only when necessary.
    This appears to resolve the errant behavior of the driver as described in
    Kernel Bug 61961 – "My Exar Corp. XR17C/D152 Dual PCI UART modem does not
    work with 3.8.0".
    
    Signed-off-by: Michael Welling <mwelling@ieee.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eebf62b8cda55d51e197e81f55962a25524714ce
Author: Tomoki Sekiyama <tomoki.sekiyama@hds.com>
Date:   Fri May 2 18:58:24 2014 -0400

    drivers/tty/hvc: don't free hvc_console_setup after init
    
    commit 501fed45b7e8836ee9373f4d31e2d85e3db6103a upstream.
    
    When 'console=hvc0' is specified to the kernel parameter in x86 KVM guest,
    hvc console is setup within a kthread. However, that will cause SEGV
    and the boot will fail when the driver is builtin to the kernel,
    because currently hvc_console_setup() is annotated with '__init'. This
    patch removes '__init' to boot the guest successfully with 'console=hvc0'.
    
    Signed-off-by: Tomoki Sekiyama <tomoki.sekiyama@hds.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
