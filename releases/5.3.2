commit b09339127155bf38eb28bf8ef4781a53b4c1f13f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Oct 1 08:24:50 2019 +0200

    Linux 5.3.2

commit 6cc24e4fea57f2aed486a5d9feaacd0a3b1468a3
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Thu Aug 29 18:28:49 2019 -0500

    objtool: Clobber user CFLAGS variable
    
    commit f73b3cc39c84220e6dccd463b5c8279b03514646 upstream.
    
    If the build user has the CFLAGS variable set in their environment,
    objtool blindly appends to it, which can cause unexpected behavior.
    
    Clobber CFLAGS to ensure consistent objtool compilation behavior.
    
    Reported-by: Valdis Kletnieks <valdis.kletnieks@vt.edu>
    Tested-by: Valdis Kletnieks <valdis.kletnieks@vt.edu>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lkml.kernel.org/r/83a276df209962e6058fcb6c615eef9d401c21bc.1567121311.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    CC: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b85207bf2e7ac9b5c9d63df87eefdf9bb420ef3
Author: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Date:   Fri Sep 20 13:02:33 2019 +0300

    platform/x86: i2c-multi-instantiate: Derive the device name from parent
    
    commit 24a8d78a9affb63e5ced313ccde6888fe96edc6e upstream.
    
    When naming the new devices, instead of using the ACPI ID in
    the name as base, using the parent device's name. That makes
    it possible to support multiple multi-instance i2c devices
    of the same type in the same system.
    
    This fixes an issue seen on some Intel Kaby Lake based
    boards:
    
    sysfs: cannot create duplicate filename '/devices/pci0000:00/0000:00:15.0/i2c_designware.0/i2c-0/i2c-INT3515-tps6598x.0'
    
    Fixes: 2336dfadfb1e ("platform/x86: i2c-multi-instantiate: Allow to have same slaves")
    Cc: stable@vger.kernel.org
    Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b69151681a73260999eadcd57002d5957d114efe
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Sep 20 09:30:40 2019 +0200

    ALSA: hda - Apply AMD controller workaround for Raven platform
    
    commit d2c63b7dfd06788a466d5ec8a850491f084c5fc2 upstream.
    
    It's reported that the garbled sound on HP Envy x360 13z-ag000 (Ryzen
    Laptop) is fixed by the same workaround applied to other AMD chips.
    Update the driver_data entry for Raven (1022:15e3) to use the newly
    introduced preset, AZX_DCAPS_PRESET_AMD_SB.  Since it already contains
    AZX_DCAPS_PM_RUNTIME, we can drop that bit, too.
    
    Reported-and-tested-by: Dennis Padiernos <depadiernos@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190920073040.31764-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 531ed21c73001dc0543c78b0ddea707ed5eb3d83
Author: Shih-Yuan Lee (FourDollars) <fourdollars@debian.org>
Date:   Fri Sep 20 21:40:53 2019 +0800

    ALSA: hda - Add laptop imic fixup for ASUS M9V laptop
    
    commit 7b485d175631be676424aedb8cd2f66d0c93da78 upstream.
    
    The same fixup to enable laptop imic is needed for ASUS M9V with AD1986A
    codec like another HP machine.
    
    Signed-off-by: Shih-Yuan Lee (FourDollars) <fourdollars@debian.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190920134052.GA8035@localhost
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a5074b1c16d76efb2b2e8a4a8ebad243cd40806
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Sep 16 19:18:51 2019 +0900

    ALSA: dice: fix wrong packet parameter for Alesis iO26
    
    commit 3a9236e97207f2469254b4098995159b80174d95 upstream.
    
    At higher sampling rate (e.g. 192.0 kHz), Alesis iO26 transfers 4 data
    channels per data block in CIP.
    
    Both iO14 and iO26 have the same contents in their configuration ROM.
    For this reason, ALSA Dice driver attempts to distinguish them according
    to the value of TX0_AUDIO register at probe callback. Although the way is
    valid at lower and middle sampling rate, it's lastly invalid at higher
    sampling rate because because the two models returns the same value for
    read transaction to the register.
    
    In the most cases, users just plug-in the device and ALSA dice driver
    detects it. In the case, the device runs at lower sampling rate and
    the driver detects expectedly. For this reason, this commit leaves the
    way to detect as is.
    
    Fixes: 28b208f600a3 ("ALSA: dice: add parameters of stream formats for models produced by Alesis")
    Cc: <stable@vger.kernel.org> # v4.18+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20190916101851.30409-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d0b5b77fbb5ae4c784c0dd17be636763c450563
Author: Jussi Laako <jussi@sonarnerd.net>
Date:   Tue Sep 24 10:11:43 2019 +0300

    ALSA: usb-audio: Add DSD support for EVGA NU Audio
    
    commit f41f900568d9ffd896cc941db7021eb14bd55910 upstream.
    
    EVGA NU Audio is actually a USB audio device on a PCIexpress card,
    with it's own USB controller. It supports both PCM and DSD.
    
    Signed-off-by: Jussi Laako <jussi@sonarnerd.net>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190924071143.30911-1-jussi@sonarnerd.net
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0a6f7be0a16e140e046beeded9e67751dca2653
Author: Ilya Pshonkin <sudokamikaze@protonmail.com>
Date:   Tue Sep 17 10:49:34 2019 +0300

    ALSA: usb-audio: Add Hiby device family to quirks for native DSD support
    
    commit 029d2c0fd61eac74700fb4ffff36fc63bfff7e5e upstream.
    
    This patch adds quirk VID ID for Hiby portable players family with
    native DSD playback support.
    
    Signed-off-by: Ilya Pshonkin <sudokamikaze@protonmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190917074937.157802-1-ilya.pshonkin@netforce.ua
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5346eea9da865018134b9b78f382933b504e21ab
Author: Vitaly Wool <vitalywool@gmail.com>
Date:   Mon Sep 23 15:32:56 2019 -0700

    Revert "mm/z3fold.c: fix race between migration and destruction"
    
    commit 6e73fd25e2c7510b7dfadbaf701f31d4bff9c75b upstream.
    
    With the original commit applied, z3fold_zpool_destroy() may get blocked
    on wait_event() for indefinite time.  Revert this commit for the time
    being to get rid of this problem since the issue the original commit
    addresses is less severe.
    
    Link: http://lkml.kernel.org/r/20190910123142.7a9c8d2de4d0acbc0977c602@gmail.com
    Fixes: d776aaa9895eb6eb77 ("mm/z3fold.c: fix race between migration and destruction")
    Reported-by: Agust√≠n Dall'Alba <agustin@dallalba.com.ar>
    Signed-off-by: Vitaly Wool <vitalywool@gmail.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Vitaly Wool <vitalywool@gmail.com>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Jonathan Adams <jwadams@google.com>
    Cc: Henry Burns <henrywolfeburns@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fb15d8390ed4c2b0de9ec147af7478adfbcf170
Author: Peng Fan <peng.fan@nxp.com>
Date:   Mon Jul 15 02:55:43 2019 +0000

    clk: imx: imx8mm: fix audio pll setting
    
    commit 053a4ffe298836bb973d2cba59f82fff60c7db5b upstream.
    
    The AUDIO PLL max support 650M, so the original clk settings violate
    spec. This patch makes the output 786432000 -> 393216000,
    and 722534400 -> 361267200 to aligned with NXP vendor kernel without any
    impact on audio functionality and go within 650MHz PLL limit.
    
    Cc: <stable@vger.kernel.org>
    Fixes: ba5625c3e272 ("clk: imx: Add clock driver support for imx8mm")
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Acked-by: Abel Vesa <abel.vesa@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit faef8874ffdd66be771d218d13fd77bf3a35d281
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Mon Sep 9 00:29:52 2019 -0500

    crypto: talitos - fix missing break in switch statement
    
    commit 5fc194ea6d34dfad9833d3043ce41d6c52aff39a upstream.
    
    Add missing break statement in order to prevent the code from falling
    through to case CRYPTO_ALG_TYPE_AHASH.
    
    Fixes: aeb4c132f33d ("crypto: talitos - Convert to new AEAD interface")
    Cc: stable@vger.kernel.org
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Reviewed-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6028d22535ab7715fa576b5ef25780e8f1e04e8
Author: Tokunori Ikegami <ikegami.t@gmail.com>
Date:   Tue Aug 6 04:03:18 2019 +0900

    mtd: cfi_cmdset_0002: Use chip_good() to retry in do_write_oneword()
    
    commit 37c673ade35c707d50583b5b25091ff8ebdeafd7 upstream.
    
    As reported by the OpenWRT team, write requests sometimes fail on some
    platforms.
    Currently to check the state chip_ready() is used correctly as described by
    the flash memory S29GL256P11TFI01 datasheet.
    Also chip_good() is used to check if the write is succeeded and it was
    implemented by the commit fb4a90bfcd6d8 ("[MTD] CFI-0002 - Improve error
    checking").
    But actually the write failure is caused on some platforms and also it can
    be fixed by using chip_good() to check the state and retry instead.
    Also it seems that it is caused after repeated about 1,000 times to retry
    the write one word with the reset command.
    By using chip_good() to check the state to be done it can be reduced the
    retry with reset.
    It is depended on the actual flash chip behavior so the root cause is
    unknown.
    
    Cc: Chris Packham <chris.packham@alliedtelesis.co.nz>
    Cc: Joakim Tjernlund <Joakim.Tjernlund@infinera.com>
    Cc: linux-mtd@lists.infradead.org
    Cc: stable@vger.kernel.org
    Reported-by: Fabio Bettoni <fbettoni@gmail.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: Tokunori Ikegami <ikegami.t@gmail.com>
    [vigneshr@ti.com: Fix a checkpatch warning]
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a38a6cd65028c74b8e738eb94a69db83c79823f
Author: Sebastian Parschauer <s.parschauer@gmx.de>
Date:   Mon Sep 2 12:39:30 2019 +0200

    HID: Add quirk for HP X500 PIXART OEM mouse
    
    commit 2acf40f0454d41b8d51c95d317283c20c931164d upstream.
    
    The PixArt OEM mice are known for disconnecting every minute in
    runlevel 1 or 3 if they are not always polled. So add quirk
    ALWAYS_POLL for this one as well.
    
    Ville Viinikka (viinikv) reported and tested the quirk.
    Link: https://github.com/sriemer/fix-linux-mouse issue 15
    
    Signed-off-by: Sebastian Parschauer <s.parschauer@gmx.de>
    CC: stable@vger.kernel.org # v4.16+
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9abb8ab96ec8da434e4d86eebcfe51c6ef948115
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Wed Aug 21 13:27:12 2019 -0400

    HID: hidraw: Fix invalid read in hidraw_ioctl
    
    commit 416dacb819f59180e4d86a5550052033ebb6d72c upstream.
    
    The syzbot fuzzer has reported a pair of problems in the
    hidraw_ioctl() function: slab-out-of-bounds read and use-after-free
    read.  An example of the first:
    
    BUG: KASAN: slab-out-of-bounds in strlen+0x79/0x90 lib/string.c:525
    Read of size 1 at addr ffff8881c8035f38 by task syz-executor.4/2833
    
    CPU: 1 PID: 2833 Comm: syz-executor.4 Not tainted 5.3.0-rc2+ #1
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    Call Trace:
      __dump_stack lib/dump_stack.c:77 [inline]
      dump_stack+0xca/0x13e lib/dump_stack.c:113
      print_address_description+0x6a/0x32c mm/kasan/report.c:351
      __kasan_report.cold+0x1a/0x33 mm/kasan/report.c:482
      kasan_report+0xe/0x12 mm/kasan/common.c:612
      strlen+0x79/0x90 lib/string.c:525
      strlen include/linux/string.h:281 [inline]
      hidraw_ioctl+0x245/0xae0 drivers/hid/hidraw.c:446
      vfs_ioctl fs/ioctl.c:46 [inline]
      file_ioctl fs/ioctl.c:509 [inline]
      do_vfs_ioctl+0xd2d/0x1330 fs/ioctl.c:696
      ksys_ioctl+0x9b/0xc0 fs/ioctl.c:713
      __do_sys_ioctl fs/ioctl.c:720 [inline]
      __se_sys_ioctl fs/ioctl.c:718 [inline]
      __x64_sys_ioctl+0x6f/0xb0 fs/ioctl.c:718
      do_syscall_64+0xb7/0x580 arch/x86/entry/common.c:296
      entry_SYSCALL_64_after_hwframe+0x49/0xbe
    RIP: 0033:0x459829
    Code: fd b7 fb ff c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 89 f7
    48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff
    ff 0f 83 cb b7 fb ff c3 66 2e 0f 1f 84 00 00 00 00
    RSP: 002b:00007f7a68f6dc78 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 0000000000459829
    RDX: 0000000000000000 RSI: 0000000080404805 RDI: 0000000000000004
    RBP: 000000000075bf20 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 00007f7a68f6e6d4
    R13: 00000000004c21de R14: 00000000004d5620 R15: 00000000ffffffff
    
    The two problems have the same cause: hidraw_ioctl() fails to test
    whether the device has been removed.  This patch adds the missing test.
    
    Reported-and-tested-by: syzbot+5a6c4ec678a0c6ee84ba@syzkaller.appspotmail.com
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 864eea8d3943dde70bf27131d54938211b6ab5a1
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Aug 25 17:35:42 2019 +0200

    HID: logitech-dj: Fix crash when initial logi_dj_recv_query_paired_devices fails
    
    commit 8ccff2843fb4e6d9d26e5ae9ffe9840b38b92638 upstream.
    
    Before this commit dj_probe would exit with an error if the initial
    logi_dj_recv_query_paired_devices fails. The initial call may fail
    when the receiver is connected through a kvm and the focus is away.
    
    When the call fails this causes 2 problems:
    
    1) dj_probe calls logi_dj_recv_query_paired_devices after calling
    hid_device_io_start() so a HID report may have been received in between
    and our delayedwork_callback may be running. It seems that the initial
    logi_dj_recv_query_paired_devices failure happening with some KVMs triggers
    this exact scenario, causing the work-queue to run on free-ed memory,
    leading to:
    
     BUG: unable to handle page fault for address: 0000000000001e88
     #PF: supervisor read access in kernel mode
     #PF: error_code(0x0000) - not-present page
     PGD 0 P4D 0
     Oops: 0000 [#1] SMP PTI
     CPU: 3 PID: 257 Comm: kworker/3:3 Tainted: G           OE     5.3.0-rc5+ #100
     Hardware name: To Be Filled By O.E.M. To Be Filled By O.E.M./B150M Pro4S/D3, BIOS P7.10 12/06/2016
     Workqueue: events 0xffffffffc02ba200
     RIP: 0010:0xffffffffc02ba1bd
     Code: e8 e8 13 00 d8 48 89 c5 48 85 c0 74 4c 48 8b 7b 10 48 89 ea b9 07 00 00 00 41 b9 09 00 00 00 41 b8 01 00 00 00 be 10 00 00 00 <48> 8b 87 88 1e 00 00 48 8b 40 40 e8 b3 6b b4 d8 48 89 ef 41 89 c4
     RSP: 0018:ffffb760c046bdb8 EFLAGS: 00010286
     RAX: ffff935038ea4550 RBX: ffff935046778000 RCX: 0000000000000007
     RDX: ffff935038ea4550 RSI: 0000000000000010 RDI: 0000000000000000
     RBP: ffff935038ea4550 R08: 0000000000000001 R09: 0000000000000009
     R10: 000000000000e011 R11: 0000000000000001 R12: ffff9350467780e8
     R13: ffff935046778000 R14: 0000000000000000 R15: ffff935046778070
     FS:  0000000000000000(0000) GS:ffff935054e00000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000000000001e88 CR3: 000000075a612002 CR4: 00000000003606e0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     Call Trace:
      0xffffffffc02ba2f7
      ? process_one_work+0x1b1/0x560
      process_one_work+0x234/0x560
      worker_thread+0x50/0x3b0
      kthread+0x10a/0x140
      ? process_one_work+0x560/0x560
      ? kthread_park+0x80/0x80
      ret_from_fork+0x3a/0x50
     Modules linked in: vboxpci(O) vboxnetadp(O) vboxnetflt(O) vboxdrv(O) bnep vfat fat btusb btrtl btbcm btintel bluetooth intel_rapl_msr ecdh_generic rfkill ecc snd_usb_audio snd_usbmidi_lib intel_rapl_common snd_rawmidi mc x86_pkg_temp_thermal intel_powerclamp coretemp iTCO_wdt iTCO_vendor_support mei_wdt mei_hdcp ppdev kvm_intel kvm irqbypass crct10dif_pclmul crc32_generic crc32_pclmul snd_hda_codec_hdmi snd_hda_codec_realtek snd_hda_codec_generic ledtrig_audio ghash_clmulni_intel intel_cstate snd_hda_intel snd_hda_codec intel_uncore snd_hda_core snd_hwdep intel_rapl_perf snd_seq snd_seq_device snd_pcm snd_timer intel_wmi_thunderbolt snd e1000e soundcore mxm_wmi i2c_i801 bfq mei_me mei intel_pch_thermal parport_pc parport acpi_pad binfmt_misc hid_lg_g15(E) hid_logitech_dj(E) i915 crc32c_intel i2c_algo_bit drm_kms_helper nvme nvme_core drm wmi video uas usb_storage i2c_dev
     CR2: 0000000000001e88
     ---[ end trace 1d3f8afdcfcbd842 ]---
    
    2) Even if we were to fix 1. by making sure the work is stopped before
    failing probe, failing probe is the wrong thing to do, we have
    logi_dj_recv_queue_unknown_work to deal with the initial
    logi_dj_recv_query_paired_devices failure.
    
    Rather then error-ing out of the probe, causing the receiver to not work at
    all we should rely on this, so that the attached devices will get properly
    enumerated once the KVM focus is switched back.
    
    Cc: stable@vger.kernel.org
    Fixes: 74808f9115ce ("HID: logitech-dj: add support for non unifying receivers")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a89b2b967d8c5cefecb966ddc5caf0a31395d327
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Tue Aug 20 16:00:21 2019 -0400

    HID: logitech: Fix general protection fault caused by Logitech driver
    
    commit 5f9242775bb61f390f0885f23fc16397262c7538 upstream.
    
    The syzbot fuzzer found a general protection fault in the HID subsystem:
    
    kasan: CONFIG_KASAN_INLINE enabled
    kasan: GPF could be caused by NULL-ptr deref or user memory access
    general protection fault: 0000 [#1] SMP KASAN
    CPU: 0 PID: 3715 Comm: syz-executor.3 Not tainted 5.2.0-rc6+ #15
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    RIP: 0010:__pm_runtime_resume+0x49/0x180 drivers/base/power/runtime.c:1069
    Code: ed 74 d5 fe 45 85 ed 0f 85 9a 00 00 00 e8 6f 73 d5 fe 48 8d bd c1 02
    00 00 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <0f> b6 04 02 48
    89 fa 83 e2 07 38 d0 7f 08 84 c0 0f 85 fe 00 00 00
    RSP: 0018:ffff8881d99d78e0 EFLAGS: 00010202
    RAX: dffffc0000000000 RBX: 0000000000000020 RCX: ffffc90003f3f000
    RDX: 0000000416d8686d RSI: ffffffff82676841 RDI: 00000020b6c3436a
    RBP: 00000020b6c340a9 R08: ffff8881c6d64800 R09: fffffbfff0e84c25
    R10: ffff8881d99d7940 R11: ffffffff87426127 R12: 0000000000000004
    R13: 0000000000000000 R14: ffff8881d9b94000 R15: ffffffff897f9048
    FS:  00007f047f542700(0000) GS:ffff8881db200000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000001b30f21000 CR3: 00000001ca032000 CR4: 00000000001406f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
      pm_runtime_get_sync include/linux/pm_runtime.h:226 [inline]
      usb_autopm_get_interface+0x1b/0x50 drivers/usb/core/driver.c:1707
      usbhid_power+0x7c/0xe0 drivers/hid/usbhid/hid-core.c:1234
      hid_hw_power include/linux/hid.h:1038 [inline]
      hidraw_open+0x20d/0x740 drivers/hid/hidraw.c:282
      chrdev_open+0x219/0x5c0 fs/char_dev.c:413
      do_dentry_open+0x497/0x1040 fs/open.c:778
      do_last fs/namei.c:3416 [inline]
      path_openat+0x1430/0x3ff0 fs/namei.c:3533
      do_filp_open+0x1a1/0x280 fs/namei.c:3563
      do_sys_open+0x3c0/0x580 fs/open.c:1070
      do_syscall_64+0xb7/0x560 arch/x86/entry/common.c:301
      entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    It turns out the fault was caused by a bug in the HID Logitech driver,
    which violates the requirement that every pathway calling
    hid_hw_start() must also call hid_hw_stop().  This patch fixes the bug
    by making sure the requirement is met.
    
    Reported-and-tested-by: syzbot+3cbe5cd105d2ad56a1df@syzkaller.appspotmail.com
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6841d3b5bd82a2edde64028f70587a3524efefd
Author: Roderick Colenbrander <roderick.colenbrander@sony.com>
Date:   Wed Sep 4 14:22:11 2019 -0700

    HID: sony: Fix memory corruption issue on cleanup.
    
    commit 2bcdacb70327013ca2066bfcf2af1009eff01f1d upstream.
    
    The sony driver is not properly cleaning up from potential failures in
    sony_input_configured. Currently it calls hid_hw_stop, while hid_connect
    is still running. This is not a good idea, instead hid_hw_stop should
    be moved to sony_probe. Similar changes were recently made to Logitech
    drivers, which were also doing improper cleanup.
    
    Signed-off-by: Roderick Colenbrander <roderick.colenbrander@sony.com>
    CC: stable@vger.kernel.org
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02a1385dc36026ba969074a989183c98dee61b9d
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Wed Sep 4 11:54:20 2019 -0400

    HID: prodikeys: Fix general protection fault during probe
    
    commit 98375b86c79137416e9fd354177b85e768c16e56 upstream.
    
    The syzbot fuzzer provoked a general protection fault in the
    hid-prodikeys driver:
    
    kasan: CONFIG_KASAN_INLINE enabled
    kasan: GPF could be caused by NULL-ptr deref or user memory access
    general protection fault: 0000 [#1] SMP KASAN
    CPU: 0 PID: 12 Comm: kworker/0:1 Not tainted 5.3.0-rc5+ #28
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    Workqueue: usb_hub_wq hub_event
    RIP: 0010:pcmidi_submit_output_report drivers/hid/hid-prodikeys.c:300  [inline]
    RIP: 0010:pcmidi_set_operational drivers/hid/hid-prodikeys.c:558 [inline]
    RIP: 0010:pcmidi_snd_initialise drivers/hid/hid-prodikeys.c:686 [inline]
    RIP: 0010:pk_probe+0xb51/0xfd0 drivers/hid/hid-prodikeys.c:836
    Code: 0f 85 50 04 00 00 48 8b 04 24 4c 89 7d 10 48 8b 58 08 e8 b2 53 e4 fc
    48 8b 54 24 20 48 b8 00 00 00 00 00 fc ff df 48 c1 ea 03 <80> 3c 02 00 0f
    85 13 04 00 00 48 ba 00 00 00 00 00 fc ff df 49 8b
    
    The problem is caused by the fact that pcmidi_get_output_report() will
    return an error if the HID device doesn't provide the right sort of
    output report, but pcmidi_set_operational() doesn't bother to check
    the return code and assumes the function call always succeeds.
    
    This patch adds the missing check and aborts the probe operation if
    necessary.
    
    Reported-and-tested-by: syzbot+1088533649dafa1c9004@syzkaller.appspotmail.com
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de70e672fb72d442b786b5ac55579b17d9043945
Author: Greg Kurz <groug@kaod.org>
Date:   Wed Sep 11 17:52:18 2019 +0200

    powerpc/xive: Fix bogus error code returned by OPAL
    
    commit 6ccb4ac2bf8a35c694ead92f8ac5530a16e8f2c8 upstream.
    
    There's a bug in skiboot that causes the OPAL_XIVE_ALLOCATE_IRQ call
    to return the 32-bit value 0xffffffff when OPAL has run out of IRQs.
    Unfortunatelty, OPAL return values are signed 64-bit entities and
    errors are supposed to be negative. If that happens, the linux code
    confusingly treats 0xffffffff as a valid IRQ number and panics at some
    point.
    
    A fix was recently merged in skiboot:
    
    e97391ae2bb5 ("xive: fix return value of opal_xive_allocate_irq()")
    
    but we need a workaround anyway to support older skiboots already
    in the field.
    
    Internally convert 0xffffffff to OPAL_RESOURCE which is the usual error
    returned upon resource exhaustion.
    
    Cc: stable@vger.kernel.org # v4.12+
    Signed-off-by: Greg Kurz <groug@kaod.org>
    Reviewed-by: C√©dric Le Goater <clg@kaod.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/156821713818.1985334.14123187368108582810.stgit@bahia.lan
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7e7ba5757ec4dc3cd85b2390a2719a03fc82fa8
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Mon Jul 22 15:31:05 2019 -0700

    drm/amd/display: readd -msse2 to prevent Clang from emitting libcalls to undefined SW FP routines
    
    commit 0f0727d971f6fdf8f1077180d495ddb9928f0c8b upstream.
    
    arch/x86/Makefile disables SSE and SSE2 for the whole kernel.  The
    AMDGPU drivers modified in this patch re-enable SSE but not SSE2.  Turn
    on SSE2 to support emitting double precision floating point instructions
    rather than calls to non-existent (usually available from gcc_s or
    compiler_rt) floating point helper routines for Clang.
    
    This was originally landed in:
    commit 10117450735c ("drm/amd/display: add -msse2 to prevent Clang from emitting libcalls to undefined SW FP routines")
    but reverted in:
    commit 193392ed9f69 ("Revert "drm/amd/display: add -msse2 to prevent Clang from emitting libcalls to undefined SW FP routines"")
    due to bugreports from GCC builds. Add guards to only do so for Clang.
    
    Link: https://bugs.freedesktop.org/show_bug.cgi?id=109487
    Link: https://github.com/ClangBuiltLinux/linux/issues/327
    
    Suggested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Suggested-by: Sami Tolvanen <samitolvanen@google.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaf30707118815e2e5bf332ccb34857a4959c644
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Wed Jul 31 10:33:54 2019 -0400

    drm/amd/display: Don't replace the dc_state for fast updates
    
    commit bd200d190f45b62c006d1ad0a63eeffd87db7a47 upstream.
    
    [Why]
    DRM private objects have no hw_done/flip_done fencing mechanism on their
    own and cannot be used to sequence commits accordingly.
    
    When issuing commits that don't touch the same set of hardware resources
    like page-flips on different CRTCs we can run into the issue below
    because of this:
    
    1. Client requests non-blocking Commit #1, has a new dc_state #1,
    state is swapped, commit tail is deferred to work queue
    
    2. Client requests non-blocking Commit #2, has a new dc_state #2,
    state is swapped, commit tail is deferred to work queue
    
    3. Commit #2 work starts, commit tail finishes,
    atomic state is cleared, dc_state #1 is freed
    
    4. Commit #1 work starts,
    commit tail encounters null pointer deref on dc_state #1
    
    In order to change the DC state as in the private object we need to
    ensure that we wait for all outstanding commits to finish and that
    any other pending commits must wait for the current one to finish as
    well.
    
    We do this for MEDIUM and FULL updates. But not for FAST updates, nor
    would we want to since it would cause stuttering from the delays.
    
    FAST updates that go through dm_determine_update_type_for_commit always
    create a new dc_state and lock the DRM private object if there are
    any changed planes.
    
    We need the old state to validate, but we don't actually need the new
    state here.
    
    [How]
    If the commit isn't a full update then the use after free can be
    resolved by simply discarding the new state entirely and retaining
    the existing one instead.
    
    With this change the sequence above can be reexamined. Commit #2 will
    still free Commit #1's reference, but before this happens we actually
    added an additional reference as part of Commit #2.
    
    If an update comes in during this that needs to change the dc_state
    it will need to wait on Commit #1 and Commit #2 to finish. Then it'll
    swap the state, finish the work in commit tail and drop the last
    reference on Commit #2's dc_state.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=204181
    Fixes: 004b3938e637 ("drm/amd/display: Check scaling info when determing update type")
    
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: David Francis <david.francis@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf3cf431215396397122b7608d96dae4eadf3ea1
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Wed Jul 31 09:45:16 2019 -0400

    drm/amd/display: Skip determining update type for async updates
    
    commit 43d10d30df156f7834fa91aecb69614fefc8bb0a upstream.
    
    [Why]
    By passing through the dm_determine_update_type_for_commit for atomic
    commits that can be done asynchronously we are incurring a
    performance penalty by locking access to the global private object
    and holding that access until the end of the programming sequence.
    
    This is also allocating a new large dc_state on every access in addition
    to retaining all the references on each stream and plane until the end
    of the programming sequence.
    
    [How]
    Shift the determination for async update before validation. Return early
    if it's going to be an async update.
    
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: David Francis <david.francis@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d260d0cf9ea5ee6ae8f9cef9edf4e343fb5450ed
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Mon Jun 10 08:47:57 2019 -0400

    drm/amd/display: Allow cursor async updates for framebuffer swaps
    
    commit e16e37efb4c9eb7bcb9dab756c975040c5257e98 upstream.
    
    [Why]
    We previously allowed framebuffer swaps as async updates for cursor
    planes but had to disable them due to a bug in DRM with async update
    handling and incorrect ref counting. The check to block framebuffer
    swaps has been added to DRM for a while now, so this check is redundant.
    
    The real fix that allows this to properly in DRM has also finally been
    merged and is getting backported into stable branches, so dropping
    this now seems to be the right time to do so.
    
    [How]
    Drop the redundant check for old_fb != new_fb.
    
    With the proper fix in DRM, this should also fix some cursor stuttering
    issues with xf86-video-amdgpu since it double buffers the cursor.
    
    IGT tests that swap framebuffers (-varying-size for example) should
    also pass again.
    
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Reviewed-by: David Francis <david.francis@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68d96dec527724f7190ff9107bd0864edcfebae0
Author: Jon Hunter <jonathanh@nvidia.com>
Date:   Wed Aug 21 16:02:41 2019 +0100

    clocksource/drivers: Do not warn on probe defer
    
    commit 14e019df1e64c8b19ce8e0b3da25b6f40c8716be upstream.
    
    Deferred probe is an expected return value on many platforms and so
    there's no need to output a warning that may potentially confuse users.
    
    Signed-off-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 580ddb48741ce64e14a60ca27b45c149aeafe245
Author: Jon Hunter <jonathanh@nvidia.com>
Date:   Wed Aug 21 16:02:40 2019 +0100

    clocksource/drivers/timer-of: Do not warn on deferred probe
    
    commit 763719771e84b8c8c2f53af668cdc905faa608de upstream.
    
    Deferred probe is an expected return value for clk_get() on many
    platforms. The driver deals with it properly, so there's no need
    to output a warning that may potentially confuse users.
    
    Signed-off-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa992c6922f8df7988d215ed763e6da973c61649
Author: Jeremy Sowden <jeremy@azazel.net>
Date:   Wed Aug 7 15:17:01 2019 +0100

    netfilter: add missing IS_ENABLED(CONFIG_NF_TABLES) check to header-file.
    
    commit 47e640af2e492cc28778dd6f894d50313f7fba75 upstream.
    
    nf_tables.h defines an API comprising several inline functions and
    macros that depend on the nft member of struct net.  However, this is
    only defined is CONFIG_NF_TABLES is enabled.  Added preprocessor checks
    to ensure that nf_tables.h will compile if CONFIG_NF_TABLES is disabled.
    
    Signed-off-by: Jeremy Sowden <jeremy@azazel.net>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Link: https://lore.kernel.org/netfilter-devel/20190920094925.aw7actk4tdnk3rke@salvia/T/
    Fixes: 3c171f496ef5 ("netfilter: bridge: add connection tracking system")
    Reported-by: Adam Borowski <kilobyte@angband.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
