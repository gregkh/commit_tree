commit bb2d990b6fefaf99b2832a7a588234e7986ebe15
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 27 16:09:42 2018 +0100

    Linux 4.9.141

commit c3ec4e5bda441079e8b5b02bd9e5edd544132123
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Thu Nov 8 15:55:37 2018 +0100

    libceph: fall back to sendmsg for slab pages
    
    commit 7e241f647dc7087a0401418a187f3f5b527cc690 upstream.
    
    skb_can_coalesce() allows coalescing neighboring slab objects into
    a single frag:
    
      return page == skb_frag_page(frag) &&
             off == frag->page_offset + skb_frag_size(frag);
    
    ceph_tcp_sendpage() can be handed slab pages.  One example of this is
    XFS: it passes down sector sized slab objects for its metadata I/O.  If
    the kernel client is co-located on the OSD node, the skb may go through
    loopback and pop on the receive side with the exact same set of frags.
    When tcp_recvmsg() attempts to copy out such a frag, hardened usercopy
    complains because the size exceeds the object's allocated size:
    
      usercopy: kernel memory exposure attempt detected from ffff9ba917f20a00 (kmalloc-512) (1024 bytes)
    
    Although skb_can_coalesce() could be taught to return false if the
    resulting frag would cross a slab object boundary, we already have
    a fallback for non-refcounted pages.  Utilize it for slab pages too.
    
    Cc: stable@vger.kernel.org # 4.8+
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab26f7fd578afad4eec4b4282fb6324f1940f50d
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Nov 14 13:55:09 2018 -0800

    HID: uhid: forbid UHID_CREATE under KERNEL_DS or elevated privileges
    
    commit 8c01db7619f07c85c5cd81ec5eb83608b56c88f5 upstream.
    
    When a UHID_CREATE command is written to the uhid char device, a
    copy_from_user() is done from a user pointer embedded in the command.
    When the address limit is KERNEL_DS, e.g. as is the case during
    sys_sendfile(), this can read from kernel memory.  Alternatively,
    information can be leaked from a setuid binary that is tricked to write
    to the file descriptor.  Therefore, forbid UHID_CREATE in these cases.
    
    No other commands in uhid_char_write() are affected by this bug and
    UHID_CREATE is marked as "obsolete", so apply the restriction to
    UHID_CREATE only rather than to uhid_char_write() entirely.
    
    Thanks to Dmitry Vyukov for adding uhid definitions to syzkaller and to
    Jann Horn for commit 9da3f2b740544 ("x86/fault: BUG() when uaccess
    helpers fault on kernel addresses"), allowing this bug to be found.
    
    Reported-by: syzbot+72473edc9bf4eb1c6556@syzkaller.appspotmail.com
    Fixes: d365c6cfd337 ("HID: uhid: add UHID_CREATE and UHID_DESTROY events")
    Cc: <stable@vger.kernel.org> # v3.6+
    Cc: Jann Horn <jannh@google.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Jann Horn <jannh@google.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cf6ba5b3d7839f88514bfa4d78ef99a97827292
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Mar 20 21:08:07 2017 -0400

    new helper: uaccess_kernel()
    
    commit db68ce10c4f0a27c1ff9fa0e789e5c41f8c4ea63 upstream.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    [only take the include/linux/uaccess.h portion - gregkh]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea41e45381fb8dd2fc969b461d48207a17ca61cf
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 19 19:06:01 2018 +0100

    ACPI / platform: Add SMB0001 HID to forbidden_id_list
    
    commit 2bbb5fa37475d7aa5fa62f34db1623f3da2dfdfa upstream.
    
    Many HP AMD based laptops contain an SMB0001 device like this:
    
    Device (SMBD)
    {
        Name (_HID, "SMB0001")  // _HID: Hardware ID
        Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
        {
            IO (Decode16,
                0x0B20,             // Range Minimum
                0x0B20,             // Range Maximum
                0x20,               // Alignment
                0x20,               // Length
                )
            IRQ (Level, ActiveLow, Shared, )
                {7}
        })
    }
    
    The legacy style IRQ resource here causes acpi_dev_get_irqresource() to
    be called with legacy=true and this message to show in dmesg:
    ACPI: IRQ 7 override to edge, high
    
    This causes issues when later on the AMD0030 GPIO device gets enumerated:
    
    Device (GPIO)
    {
        Name (_HID, "AMDI0030")  // _HID: Hardware ID
        Name (_CID, "AMDI0030")  // _CID: Compatible ID
        Name (_UID, Zero)  // _UID: Unique ID
        Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
        {
            Name (RBUF, ResourceTemplate ()
            {
                Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                {
                    0x00000007,
                }
                Memory32Fixed (ReadWrite,
                    0xFED81500,         // Address Base
                    0x00000400,         // Address Length
                    )
            })
            Return (RBUF) /* \_SB_.GPIO._CRS.RBUF */
        }
    }
    
    Now acpi_dev_get_irqresource() gets called with legacy=false, but because
    of the earlier override of the trigger-type acpi_register_gsi() returns
    -EBUSY (because we try to register the same interrupt with a different
    trigger-type) and we end up setting IORESOURCE_DISABLED in the flags.
    
    The setting of IORESOURCE_DISABLED causes platform_get_irq() to call
    acpi_irq_get() which is not implemented on x86 and returns -EINVAL.
    resulting in the following in dmesg:
    
    amd_gpio AMDI0030:00: Failed to get gpio IRQ: -22
    amd_gpio: probe of AMDI0030:00 failed with error -22
    
    The SMB0001 is a "virtual" device in the sense that the only way the OS
    interacts with it is through calling a couple of methods to do SMBus
    transfers. As such it is weird that it has IO and IRQ resources at all,
    because the driver for it is not expected to ever access the hardware
    directly.
    
    The Linux driver for the SMB0001 device directly binds to the acpi_device
    through the acpi_bus, so we do not need to instantiate a platform_device
    for this ACPI device. This commit adds the SMB0001 HID to the
    forbidden_id_list, avoiding the instantiating of a platform_device for it.
    Not instantiating a platform_device means we will no longer call
    acpi_dev_get_irqresource() for the legacy IRQ resource fixing the probe of
    the AMDI0030 device failing.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1644013
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=198715
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=199523
    Reported-by: Lukas Kahnert <openproggerfreak@gmail.com>
    Tested-by: Marc <suaefar@googlemail.com>
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7810fe9f2377ea0eebf8d4340e35be5ec1e6dfb6
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Tue Oct 16 12:59:44 2018 +0200

    drivers/misc/sgi-gru: fix Spectre v1 vulnerability
    
    commit fee05f455ceb5c670cbe48e2f9454ebc4a388554 upstream.
    
    req.gid can be indirectly controlled by user-space, hence leading to
    a potential exploitation of the Spectre variant 1 vulnerability.
    
    This issue was detected with the help of Smatch:
    
    vers/misc/sgi-gru/grukdump.c:200 gru_dump_chiplet_request() warn:
    potential spectre issue 'gru_base' [w]
    
    Fix this by sanitizing req.gid before calling macro GID_TO_GRU, which
    uses it to index gru_base.
    
    Notice that given that speculation windows are large, the policy is
    to kill the speculation on the first load and not worry if it can be
    completed with a dependent load/store [1].
    
    [1] https://marc.info/?l=linux-kernel&m=152449131114778&w=2
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdddfd7fbe522d08ff2d7984a3a28e018ca4b09a
Author: Mattias Jacobsson <2pi@mok.nu>
Date:   Sun Oct 21 11:25:37 2018 +0200

    USB: misc: appledisplay: add 20" Apple Cinema Display
    
    commit f6501f49199097b99e4e263644d88c90d1ec1060 upstream.
    
    Add another Apple Cinema Display to the list of supported displays
    
    Signed-off-by: Mattias Jacobsson <2pi@mok.nu>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1b4d95e4d43c1582cd457240d3497e20ca523e5
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Oct 17 10:09:02 2018 -0700

    misc: atmel-ssc: Fix section annotation on atmel_ssc_get_driver_data
    
    commit 7c97301285b62a41d6bceded7d964085fc8cc50f upstream.
    
    After building the kernel with Clang, the following section mismatch
    warning appears:
    
    WARNING: vmlinux.o(.text+0x3bf19a6): Section mismatch in reference from
    the function ssc_probe() to the function
    .init.text:atmel_ssc_get_driver_data()
    The function ssc_probe() references
    the function __init atmel_ssc_get_driver_data().
    This is often because ssc_probe lacks a __init
    annotation or the annotation of atmel_ssc_get_driver_data is wrong.
    
    Remove __init from atmel_ssc_get_driver_data to get rid of the mismatch.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 305a97a9db730b7f8dfc8357287a92ea73d01780
Author: Emmanuel Pescosta <emmanuelpescosta099@gmail.com>
Date:   Fri Oct 26 14:48:09 2018 +0200

    usb: quirks: Add delay-init quirk for Corsair K70 LUX RGB
    
    commit a77112577667cbda7c6292c52d909636aef31fd9 upstream.
    
    Following on from this patch: https://lkml.org/lkml/2017/11/3/516,
    Corsair K70 LUX RGB keyboards also require the DELAY_INIT quirk to
    start correctly at boot.
    
    Dmesg output:
    usb 1-6: string descriptor 0 read error: -110
    usb 1-6: New USB device found, idVendor=1b1c, idProduct=1b33
    usb 1-6: New USB device strings: Mfr=1, Product=2, SerialNumber=3
    usb 1-6: can't set config #1, error -110
    
    Signed-off-by: Emmanuel Pescosta <emmanuelpescosta099@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 148b90c112f948f0fa4647a960823e1abb9b07e9
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Fri Oct 26 13:33:15 2018 +0800

    USB: quirks: Add no-lpm quirk for Raydium touchscreens
    
    commit deefd24228a172d1b27d4a9adbfd2cdacd60ae64 upstream.
    
    Raydium USB touchscreen fails to set config if LPM is enabled:
    [    2.030658] usb 1-8: New USB device found, idVendor=2386, idProduct=3119
    [    2.030659] usb 1-8: New USB device strings: Mfr=1, Product=2, SerialNumber=0
    [    2.030660] usb 1-8: Product: Raydium Touch System
    [    2.030661] usb 1-8: Manufacturer: Raydium Corporation
    [    7.132209] usb 1-8: can't set config #1, error -110
    
    Same behavior can be observed on 2386:3114.
    
    Raydium claims the touchscreen supports LPM under Windows, so I used
    Microsoft USB Test Tools (MUTT) [1] to check its LPM status. MUTT shows
    that the LPM doesn't work under Windows, either. So let's just disable LPM
    for Raydium touchscreens.
    
    [1] https://docs.microsoft.com/en-us/windows-hardware/drivers/usbcon/usb-test-tools
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f08cfeb966c15ff6b8938cc027c62ddeb65e6a6
Author: Maarten Jacobs <maarten256@outlook.com>
Date:   Mon Nov 19 23:18:49 2018 +0000

    usb: cdc-acm: add entry for Hiro (Conexant) modem
    
    commit 63529eaa6164ef7ab4b907b25ac3648177e5e78f upstream.
    
    The cdc-acm kernel module currently does not support the Hiro (Conexant)
    H05228 USB modem. The patch below adds the device specific information:
            idVendor        0x0572
            idProduct       0x1349
    
    Signed-off-by: Maarten Jacobs <maarten256@outlook.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb5f531d73dab2bd3912a902365f0ba6559f0c7d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Oct 26 10:19:51 2018 +0300

    uio: Fix an Oops on load
    
    commit 432798195bbce1f8cd33d1c0284d0538835e25fb upstream.
    
    I was trying to solve a double free but I introduced a more serious
    NULL dereference bug.  The problem is that if there is an IRQ which
    triggers immediately, then we need "info->uio_dev" but it's not set yet.
    
    This patch puts the original initialization back to how it was and just
    sets info->uio_dev to NULL on the error path so it should solve both
    the Oops and the double free.
    
    Fixes: f019f07ecf6a ("uio: potential double frees if __uio_register_device() fails")
    Reported-by: Mathias Thore <Mathias.Thore@infinera.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Tested-by: Mathias Thore <Mathias.Thore@infinera.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 496f98c088f9f00d3592387953928cf3480828e6
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Mon Nov 5 09:35:44 2018 -0500

    media: v4l: event: Add subscription to list before calling "add" operation
    
    commit 92539d3eda2c090b382699bbb896d4b54e9bdece upstream.
    
    Patch ad608fbcf166 changed how events were subscribed to address an issue
    elsewhere. As a side effect of that change, the "add" callback was called
    before the event subscription was added to the list of subscribed events,
    causing the first event queued by the add callback (and possibly other
    events arriving soon afterwards) to be lost.
    
    Fix this by adding the subscription to the list before calling the "add"
    callback, and clean up afterwards if that fails.
    
    Fixes: ad608fbcf166 ("media: v4l: event: Prevent freeing event subscriptions while accessed")
    
    Reported-by: Dave Stevenson <dave.stevenson@raspberrypi.org>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Tested-by: Dave Stevenson <dave.stevenson@raspberrypi.org>
    Reviewed-by: Hans Verkuil <hans.verkuil@cisco.com>
    Tested-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: stable@vger.kernel.org (for 4.14 and up)
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    [Sakari Ailus: Backported to v4.9 stable]
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93848099e77bd64197f97ca0194bdbd1f2639c2b
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Nov 26 08:22:30 2018 +0100

    Revert "Bluetooth: h5: Fix missing dependency on BT_HCIUART_SERDEV"
    
    This reverts commit b5c98d8ca8f93a4f73e9cbb53c7e6b8c78ed3f80 which is
    commit 6c3711ec64fd23a9abc8aaf59a9429569a6282df upstream.
    
    You Ling writes that this config option isn't even in 4.9.y yet, so it
    causes a regression.  Revert the patch because of this.
    
    Reported-by: youling 257 <youling257@gmail.com>
    Cc: Johan Hedberg <johan.hedberg@intel.com>
    Cc: Marcel Holtmann <marcel@holtmann.org>
    Cc: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a540483bfefad25186127a1ebed9fbc525eb4010
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Thu Nov 22 12:43:56 2018 +0100

    Revert "media: videobuf2-core: don't call memop 'finish' when queueing"
    
    This reverts commit 9ac47200b51cb09d2f15dbefa67e0412741d98aa.
    
    This commit fixes a bug in upstream commit a136f59c0a1f ("vb2: Move
    buffer cache synchronisation to prepare from queue") which isn't
    present in 4.9.
    
    So as a result you get an UNBALANCED message in the kernel log if
    this patch is applied:
    
    vb2:   counters for queue ffffffc0f3687478, buffer 3: UNBALANCED!
    vb2:     buf_init: 1 buf_cleanup: 1 buf_prepare: 805 buf_finish: 805
    vb2:     buf_queue: 806 buf_done: 806
    vb2:     alloc: 0 put: 0 prepare: 806 finish: 805 mmap: 0
    vb2:     get_userptr: 0 put_userptr: 0
    vb2:     attach_dmabuf: 1 detach_dmabuf: 1 map_dmabuf: 805 unmap_dmabuf: 805
    vb2:     get_dmabuf: 0 num_users: 1609 vaddr: 0 cookie: 805
    
    Reverting this patch solves this regression.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33f3f3bd76087cd2c7cb04b67f199348b3dee42d
Author: Lu Fengqi <lufq.fnst@cn.fujitsu.com>
Date:   Tue Nov 20 11:17:32 2018 +0800

    btrfs: fix pinned underflow after transaction aborted
    
    commit fcd5e74288f7d36991b1f0fb96b8c57079645e38 upstream.
    
    When running generic/475, we may get the following warning in dmesg:
    
    [ 6902.102154] WARNING: CPU: 3 PID: 18013 at fs/btrfs/extent-tree.c:9776 btrfs_free_block_groups+0x2af/0x3b0 [btrfs]
    [ 6902.109160] CPU: 3 PID: 18013 Comm: umount Tainted: G        W  O      4.19.0-rc8+ #8
    [ 6902.110971] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015
    [ 6902.112857] RIP: 0010:btrfs_free_block_groups+0x2af/0x3b0 [btrfs]
    [ 6902.118921] RSP: 0018:ffffc9000459bdb0 EFLAGS: 00010286
    [ 6902.120315] RAX: ffff880175050bb0 RBX: ffff8801124a8000 RCX: 0000000000170007
    [ 6902.121969] RDX: 0000000000000002 RSI: 0000000000170007 RDI: ffffffff8125fb74
    [ 6902.123716] RBP: ffff880175055d10 R08: 0000000000000000 R09: 0000000000000000
    [ 6902.125417] R10: 0000000000000000 R11: 0000000000000000 R12: ffff880175055d88
    [ 6902.127129] R13: ffff880175050bb0 R14: 0000000000000000 R15: dead000000000100
    [ 6902.129060] FS:  00007f4507223780(0000) GS:ffff88017ba00000(0000) knlGS:0000000000000000
    [ 6902.130996] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 6902.132558] CR2: 00005623599cac78 CR3: 000000014b700001 CR4: 00000000003606e0
    [ 6902.134270] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 6902.135981] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 6902.137836] Call Trace:
    [ 6902.138939]  close_ctree+0x171/0x330 [btrfs]
    [ 6902.140181]  ? kthread_stop+0x146/0x1f0
    [ 6902.141277]  generic_shutdown_super+0x6c/0x100
    [ 6902.142517]  kill_anon_super+0x14/0x30
    [ 6902.143554]  btrfs_kill_super+0x13/0x100 [btrfs]
    [ 6902.144790]  deactivate_locked_super+0x2f/0x70
    [ 6902.146014]  cleanup_mnt+0x3b/0x70
    [ 6902.147020]  task_work_run+0x9e/0xd0
    [ 6902.148036]  do_syscall_64+0x470/0x600
    [ 6902.149142]  ? trace_hardirqs_off_thunk+0x1a/0x1c
    [ 6902.150375]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
    [ 6902.151640] RIP: 0033:0x7f45077a6a7b
    [ 6902.157324] RSP: 002b:00007ffd589f3e68 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
    [ 6902.159187] RAX: 0000000000000000 RBX: 000055e8eec732b0 RCX: 00007f45077a6a7b
    [ 6902.160834] RDX: 0000000000000001 RSI: 0000000000000000 RDI: 000055e8eec73490
    [ 6902.162526] RBP: 0000000000000000 R08: 000055e8eec734b0 R09: 00007ffd589f26c0
    [ 6902.164141] R10: 0000000000000000 R11: 0000000000000246 R12: 000055e8eec73490
    [ 6902.165815] R13: 00007f4507ac61a4 R14: 0000000000000000 R15: 00007ffd589f40d8
    [ 6902.167553] irq event stamp: 0
    [ 6902.168998] hardirqs last  enabled at (0): [<0000000000000000>]           (null)
    [ 6902.170731] hardirqs last disabled at (0): [<ffffffff810cd810>] copy_process.part.55+0x3b0/0x1f00
    [ 6902.172773] softirqs last  enabled at (0): [<ffffffff810cd810>] copy_process.part.55+0x3b0/0x1f00
    [ 6902.174671] softirqs last disabled at (0): [<0000000000000000>]           (null)
    [ 6902.176407] ---[ end trace 463138c2986b275c ]---
    [ 6902.177636] BTRFS info (device dm-3): space_info 4 has 273465344 free, is not full
    [ 6902.179453] BTRFS info (device dm-3): space_info total=276824064, used=4685824, pinned=18446744073708158976, reserved=0, may_use=0, readonly=65536
    
    In the above line there's "pinned=18446744073708158976" which is an
    unsigned u64 value of -1392640, an obvious underflow.
    
    When transaction_kthread is running cleanup_transaction(), another
    fsstress is running btrfs_commit_transaction(). The
    btrfs_finish_extent_commit() may get the same range as
    btrfs_destroy_pinned_extent() got, which causes the pinned underflow.
    
    Fixes: d4b450cd4b33 ("Btrfs: fix race between transaction commit and empty block group removal")
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Lu Fengqi <lufq.fnst@cn.fujitsu.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4423e072fe37bb27c3f67e7ceb4d998fe61c2bde
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Nov 20 10:26:37 2018 +0800

    btrfs: Ensure btrfs_trim_fs can trim the whole filesystem
    
    Commit 6ba9fc8e628becf0e3ec94083450d089b0dec5f5 upstream.
    
    [BUG]
    fstrim on some btrfs only trims the unallocated space, not trimming any
    space in existing block groups.
    
    [CAUSE]
    Before fstrim_range passed to btrfs_trim_fs(), it gets truncated to
    range [0, super->total_bytes).  So later btrfs_trim_fs() will only be
    able to trim block groups in range [0, super->total_bytes).
    
    While for btrfs, any bytenr aligned to sectorsize is valid, since btrfs
    uses its logical address space, there is nothing limiting the location
    where we put block groups.
    
    For filesystem with frequent balance, it's quite easy to relocate all
    block groups and bytenr of block groups will start beyond
    super->total_bytes.
    
    In that case, btrfs will not trim existing block groups.
    
    [FIX]
    Just remove the truncation in btrfs_ioctl_fitrim(), so btrfs_trim_fs()
    can get the unmodified range, which is normally set to [0, U64_MAX].
    
    Reported-by: Chris Murphy <lists@colorremedies.com>
    Fixes: f4c697e6406d ("btrfs: return EINVAL if start > total_bytes in fitrim ioctl")
    CC: <stable@vger.kernel.org> # v4.9
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    [ change parameter from @fs_info to @fs_info->root for older kernel ]
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc43e4cd7f92aa3ce41677850740e465c04ee0a5
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Nov 20 10:26:36 2018 +0800

    btrfs: Enhance btrfs_trim_fs function to handle error better
    
    Commit 93bba24d4b5ad1e5cd8b43f64e66ff9d6355dd20 upstream.
    
    Function btrfs_trim_fs() doesn't handle errors in a consistent way. If
    error happens when trimming existing block groups, it will skip the
    remaining blocks and continue to trim unallocated space for each device.
    
    The return value will only reflect the final error from device trimming.
    
    This patch will fix such behavior by:
    
    1) Recording the last error from block group or device trimming
       The return value will also reflect the last error during trimming.
       Make developer more aware of the problem.
    
    2) Continuing trimming if possible
       If we failed to trim one block group or device, we could still try
       the next block group or device.
    
    3) Report number of failures during block group and device trimming
       It would be less noisy, but still gives user a brief summary of
       what's going wrong.
    
    Such behavior can avoid confusion for cases like failure to trim the
    first block group and then only unallocated space is trimmed.
    
    Reported-by: Chris Murphy <lists@colorremedies.com>
    CC: stable@vger.kernel.org # 4.9
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ add bg_ret and dev_ret to the messages ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    [ change parameter from @fs_info to @fs_info->root for older kernel ]
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 230c832a4e1b908c91a0bc8c0762a63afc1ee10e
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Tue May 22 14:16:50 2018 +0300

    ACPI / watchdog: Prefer iTCO_wdt always when WDAT table uses RTC SRAM
    
    [ Upstream commit 5a802a7a285c8877ca872e44eeb0f06afcb5212f ]
    
    After we added quirk for Lenovo Z50-70 it turns out there are at least
    two more systems where WDAT table includes instructions accessing RTC
    SRAM. Instead of quirking each system separately, look for such
    instructions in the table and automatically prefer iTCO_wdt if found.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=199033
    Reported-by: Arnold Guy <aurnoldg@gmail.com>
    Reported-by: Alois Nespor <nespor@fssp.cz>
    Reported-by: Yury Pakin <zxwarior@gmail.com>
    Reported-by: Ihor Chyhin <ihorchyhin@ukr.net>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Acked-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad226b632b8d17ea5bbc3b1484a5755cac20ef81
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Mon Apr 23 14:16:03 2018 +0300

    ACPI / watchdog: Prefer iTCO_wdt on Lenovo Z50-70
    
    [ Upstream commit a0a37862a4e1844793d39aca9ccb8fecbdcb8659 ]
    
    WDAT table on Lenovo Z50-70 is using RTC SRAM (ports 0x70 and 0x71) to
    store state of the timer. This conflicts with Linux RTC driver
    (rtc-cmos.c) who fails to reserve those ports for itself preventing RTC
    from functioning. In addition the WDAT table seems not to be fully
    functional because it does not reset the system when the watchdog times
    out.
    
    On this system iTCO_wdt works just fine so we simply prefer to use it
    instead of WDAT. This makes RTC working again and also results working
    watchdog via iTCO_wdt.
    
    Reported-by: Peter Milley <pbmilley@gmail.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=199033
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92b4499e795de51e32b8c883c351533b83266e5b
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Mon Nov 19 17:22:32 2018 +0100

    gfs2: Put bitmap buffers in put_super
    
    commit 10283ea525d30f2e99828978fd04d8427876a7ad upstream.
    
    gfs2_put_super calls gfs2_clear_rgrpd to destroy the gfs2_rgrpd objects
    attached to the resource group glocks.  That function should release the
    buffers attached to the gfs2_bitmap objects (bi_bh), but the call to
    gfs2_rgrp_brelse for doing that is missing.
    
    When gfs2_releasepage later runs across these buffers which are still
    referenced, it refuses to free them.  This causes the pages the buffers
    are attached to to remain referenced as well.  With enough mount/unmount
    cycles, the system will eventually run out of memory.
    
    Fix this by adding the missing call to gfs2_rgrp_brelse in
    gfs2_clear_rgrpd.
    
    (Also fix a gfs2_rgrp_relse -> gfs2_rgrp_brelse typo in a comment.)
    
    Fixes: 39b0f1e92908 ("GFS2: Don't brelse rgrp buffer_heads every allocation")
    Cc: stable@vger.kernel.org # v4.9
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a38ad671d1cafda6f6c4f8fbade9b831cfdbda75
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Nov 8 02:04:57 2018 +0000

    SUNRPC: drop pointless static qualifier in xdr_get_next_encode_buffer()
    
    [ Upstream commit 025911a5f4e36955498ed50806ad1b02f0f76288 ]
    
    There is no need to have the '__be32 *p' variable static since new value
    always be assigned before use it.
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 553a56136333203a6d9f8cadb5e27cdfc3306650
Author: Minchan Kim <minchan@kernel.org>
Date:   Fri Nov 23 15:28:02 2018 +0900

    zram: close udev startup race condition as default groups
    
    commit fef912bf860e upstream.
    commit 98af4d4df889 upstream.
    
    I got a report from Howard Chen that he saw zram and sysfs race(ie,
    zram block device file is created but sysfs for it isn't yet)
    when he tried to create new zram devices via hotadd knob.
    
    v4.20 kernel fixes it by [1, 2] but it's too large size to merge
    into -stable so this patch fixes the problem by registering defualt
    group by Greg KH's approach[3].
    
    This patch should be applied to every stable tree [3.16+] currently
    existing from kernel.org because the problem was introduced at 2.6.37
    by [4].
    
    [1] fef912bf860e, block: genhd: add 'groups' argument to device_add_disk
    [2] 98af4d4df889, zram: register default groups with device_add_disk()
    [3] http://kroah.com/log/blog/2013/06/26/how-to-create-a-sysfs-file-correctly/
    [4] 33863c21e69e9, Staging: zram: Replace ioctls with sysfs interface
    
    Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Tested-by: Howard Chen <howardsoc@google.com>
    Signed-off-by: Minchan Kim <minchan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e90f343311c815c03a3f32e90c88d22ab52a6caa
Author: Denis Bolotin <denis.bolotin@cavium.com>
Date:   Thu Nov 8 16:46:09 2018 +0200

    qed: Fix blocking/unlimited SPQ entries leak
    
    [ Upstream commit 2632f22ebd08da249c2017962a199a0cfb2324bf ]
    
    When there are no SPQ entries left in the free_pool, new entries are
    allocated and are added to the unlimited list. When an entry in the pool
    is available, the content is copied from the original entry, and the new
    entry is sent to the device. qed_spq_post() is not aware of that, so the
    additional entry is stored in the original entry as p_post_ent, which can
    later be returned to the pool.
    
    Signed-off-by: Denis Bolotin <denis.bolotin@cavium.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 897d6d429b6cfc1098e93c41f88f8d5d2f16157a
Author: Denis Bolotin <denis.bolotin@cavium.com>
Date:   Thu Nov 8 16:46:08 2018 +0200

    qed: Fix memory/entry leak in qed_init_sp_request()
    
    [ Upstream commit 39477551df940ddb1339203817de04f5caaacf7a ]
    
    Free the allocated SPQ entry or return the acquired SPQ entry to the free
    list in error flows.
    
    Signed-off-by: Denis Bolotin <denis.bolotin@cavium.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d05e26d49ed30201299ca60eec2de3872d43a3d2
Author: Jeremy Linton <jeremy.linton@arm.com>
Date:   Mon Nov 5 18:14:41 2018 -0600

    lib/raid6: Fix arm64 test build
    
    [ Upstream commit 313a06e636808387822af24c507cba92703568b1 ]
    
    The lib/raid6/test fails to build the neon objects
    on arm64 because the correct machine type is 'aarch64'.
    
    Once this is correctly enabled, the neon recovery objects
    need to be added to the build.
    
    Reviewed-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Jeremy Linton <jeremy.linton@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fc19eac0f361891f287dcfca026c772a91a9db5
Author: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
Date:   Thu Nov 1 14:15:49 2018 +0100

    clk: fixed-factor: fix of_node_get-put imbalance
    
    [ Upstream commit f98e8a572bddbf27032114127d2fcc78fa5e6a9d ]
    
    When the fixed factor clock is created by devicetree,
    of_clk_add_provider is called.  Add a call to
    of_clk_del_provider in the remove function to balance
    it out.
    
    Reported-by: Alan Tull <atull@kernel.org>
    Fixes: 971451b3b15d ("clk: fixed-factor: Convert into a module platform driver")
    Signed-off-by: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d75d4fd8c71881a033705baf91f9dc9cf0b4616f
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Sun Oct 28 18:16:51 2018 +0100

    hwmon: (ibmpowernv) Remove bogus __init annotations
    
    [ Upstream commit e3e61f01d755188cb6c2dcf5a244b9c0937c258e ]
    
    If gcc decides not to inline make_sensor_label():
    
        WARNING: vmlinux.o(.text+0x4df549c): Section mismatch in reference from the function .create_device_attrs() to the function .init.text:.make_sensor_label()
        The function .create_device_attrs() references
        the function __init .make_sensor_label().
        This is often because .create_device_attrs lacks a __init
        annotation or the annotation of .make_sensor_label is wrong.
    
    As .probe() can be called after freeing of __init memory, all __init
    annotiations in the driver are bogus, and should be removed.
    
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f280735afb246511b4aafa338bc1337c76890780
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Fri Nov 2 19:04:09 2018 +0100

    s390/qeth: fix HiperSockets sniffer
    
    [ Upstream commit bd74a7f9cc033cf4d405788f80292268987dc0c5 ]
    
    Sniffing mode for L3 HiperSockets requires that no IP addresses are
    registered with the HW. The preferred way to achieve this is for
    userspace to delete all the IPs on the interface. But qeth is expected
    to also tolerate a configuration where that is not the case, by skipping
    the IP registration when in sniffer mode.
    Since commit 5f78e29ceebf ("qeth: optimize IP handling in rx_mode callback")
    reworked the IP registration logic in the L3 subdriver, this no longer
    works. When the qeth device is set online, qeth_l3_recover_ip() now
    unconditionally registers all unicast addresses from our internal
    IP table.
    
    While we could fix this particular problem by skipping
    qeth_l3_recover_ip() on a sniffer device, the more future-proof change
    is to skip the IP address registration at the lowest level. This way we
    a) catch any future code path that attempts to register an IP address
       without considering the sniffer scenario, and
    b) continue to build up our internal IP table, so that if sniffer mode
       is switched off later we can operate just like normal.
    
    Fixes: 5f78e29ceebf ("qeth: optimize IP handling in rx_mode callback")
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f184d303d10df3d79a0b68b5d5d983ffe8f5b760
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Sun Oct 21 00:00:08 2018 +0900

    netfilter: xt_IDLETIMER: add sysfs filename checking routine
    
    [ Upstream commit 54451f60c8fa061af9051a53be9786393947367c ]
    
    When IDLETIMER rule is added, sysfs file is created under
    /sys/class/xt_idletimer/timers/
    But some label name shouldn't be used.
    ".", "..", "power", "uevent", "subsystem", etc...
    So that sysfs filename checking routine is needed.
    
    test commands:
       %iptables -I INPUT -j IDLETIMER --timeout 1 --label "power"
    
    splat looks like:
    [95765.423132] sysfs: cannot create duplicate filename '/devices/virtual/xt_idletimer/timers/power'
    [95765.433418] CPU: 0 PID: 8446 Comm: iptables Not tainted 4.19.0-rc6+ #20
    [95765.449755] Call Trace:
    [95765.449755]  dump_stack+0xc9/0x16b
    [95765.449755]  ? show_regs_print_info+0x5/0x5
    [95765.449755]  sysfs_warn_dup+0x74/0x90
    [95765.449755]  sysfs_add_file_mode_ns+0x352/0x500
    [95765.449755]  sysfs_create_file_ns+0x179/0x270
    [95765.449755]  ? sysfs_add_file_mode_ns+0x500/0x500
    [95765.449755]  ? idletimer_tg_checkentry+0x3e5/0xb1b [xt_IDLETIMER]
    [95765.449755]  ? rcu_read_lock_sched_held+0x114/0x130
    [95765.449755]  ? __kmalloc_track_caller+0x211/0x2b0
    [95765.449755]  ? memcpy+0x34/0x50
    [95765.449755]  idletimer_tg_checkentry+0x4e2/0xb1b [xt_IDLETIMER]
    [ ... ]
    
    Fixes: 0902b469bd25 ("netfilter: xtables: idletimer target implementation")
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8ccc61ce7209a9b357a66468062a5a28f61845a
Author: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
Date:   Fri Oct 19 19:35:19 2018 +0200

    netfilter: ipset: Correct rcu_dereference() call in ip_set_put_comment()
    
    [ Upstream commit 17b8b74c0f8dbf9b9e3301f9ca5b65dd1c079951 ]
    
    The function is called when rcu_read_lock() is held and not
    when rcu_read_lock_bh() is held.
    
    Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 064cd456641a57c9eb2259269208c5aee9776679
Author: Justin M. Forbes <jforbes@fedoraproject.org>
Date:   Wed Oct 31 13:02:03 2018 -0500

    s390/mm: Fix ERROR: "__node_distance" undefined!
    
    [ Upstream commit a541f0ebcc08ed8bc0cc492eec9a86cb280a9f24 ]
    
    Fixes:
    ERROR: "__node_distance" [drivers/nvme/host/nvme-core.ko] undefined!
    make[1]: *** [scripts/Makefile.modpost:92: __modpost] Error 1
    make: *** [Makefile:1275: modules] Error 2
    + exit 1
    
    Signed-off-by: Justin M. Forbes <jforbes@fedoraproject.org>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 919560afc21f91ca352a20394d5249aba1799690
Author: Eric Westbrook <eric@westbrook.io>
Date:   Tue Aug 28 15:14:42 2018 -0600

    netfilter: ipset: actually allow allowable CIDR 0 in hash:net,port,net
    
    [ Upstream commit 886503f34d63e681662057448819edb5b1057a97 ]
    
    Allow /0 as advertised for hash:net,port,net sets.
    
    For "hash:net,port,net", ipset(8) says that "either subnet
    is permitted to be a /0 should you wish to match port
    between all destinations."
    
    Make that statement true.
    
    Before:
    
        # ipset create cidrzero hash:net,port,net
        # ipset add cidrzero 0.0.0.0/0,12345,0.0.0.0/0
        ipset v6.34: The value of the CIDR parameter of the IP address is invalid
    
        # ipset create cidrzero6 hash:net,port,net family inet6
        # ipset add cidrzero6 ::/0,12345,::/0
        ipset v6.34: The value of the CIDR parameter of the IP address is invalid
    
    After:
    
        # ipset create cidrzero hash:net,port,net
        # ipset add cidrzero 0.0.0.0/0,12345,0.0.0.0/0
        # ipset test cidrzero 192.168.205.129,12345,172.16.205.129
        192.168.205.129,tcp:12345,172.16.205.129 is in set cidrzero.
    
        # ipset create cidrzero6 hash:net,port,net family inet6
        # ipset add cidrzero6 ::/0,12345,::/0
        # ipset test cidrzero6 fe80::1,12345,ff00::1
        fe80::1,tcp:12345,ff00::1 is in set cidrzero6.
    
    See also:
    
      https://bugzilla.kernel.org/show_bug.cgi?id=200897
      https://github.com/ewestbrook/linux/commit/df7ff6efb0934ab6acc11f003ff1a7580d6c1d9c
    
    Signed-off-by: Eric Westbrook <linux@westbrook.io>
    Signed-off-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2636487a47664446e6611b244f5d1527c3706a9c
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Fri Oct 19 15:37:01 2018 +0200

    s390/vdso: add missing FORCE to build targets
    
    [ Upstream commit b44b136a3773d8a9c7853f8df716bd1483613cbb ]
    
    According to Documentation/kbuild/makefiles.txt all build targets using
    if_changed should use FORCE as well. Add missing FORCE to make sure
    vdso targets are rebuild properly when not just immediate prerequisites
    have changed but also when build command differs.
    
    Reviewed-by: Philipp Rudo <prudo@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b9158aec72ec2d8a76d3b96bc5e53075d2307a4
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Tue Sep 25 12:44:59 2018 -0700

    arm64: percpu: Initialize ret in the default case
    
    [ Upstream commit b5bb425871186303e6936fa2581521bdd1964a58 ]
    
    Clang warns that if the default case is taken, ret will be
    uninitialized.
    
    ./arch/arm64/include/asm/percpu.h:196:2: warning: variable 'ret' is used
    uninitialized whenever switch default is taken
    [-Wsometimes-uninitialized]
            default:
            ^~~~~~~
    ./arch/arm64/include/asm/percpu.h:200:9: note: uninitialized use occurs
    here
            return ret;
                   ^~~
    ./arch/arm64/include/asm/percpu.h:157:19: note: initialize the variable
    'ret' to silence this warning
            unsigned long ret, loop;
                             ^
                              = 0
    
    This warning appears several times while building the erofs filesystem.
    While it's not strictly wrong, the BUILD_BUG will prevent this from
    becoming a true problem. Initialize ret to 0 in the default case right
    before the BUILD_BUG to silence all of these warnings.
    
    Reported-by: Prasad Sodagudi <psodagud@codeaurora.org>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Dennis Zhou <dennis@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c0f309d6eb2df1639c69720e3d31bcd07329f5b
Author: Paul Gortmaker <paul.gortmaker@windriver.com>
Date:   Thu Sep 20 21:44:19 2018 -0400

    platform/x86: acerhdf: Add BIOS entry for Gateway LT31 v1.3307
    
    [ Upstream commit 684238d79ad85c5e19a71bb5818e77e329912fbc ]
    
    To fix:
    
      acerhdf: unknown (unsupported) BIOS version Gateway  /LT31   /v1.3307 , please report, aborting!
    
    As can be seen in the context, the BIOS registers haven't changed in
    the previous versions, so the assumption is they won't have changed
    in this last update for this somewhat older platform either.
    
    Cc: Peter Feuerer <peter@piie.net>
    Cc: Darren Hart <dvhart@infradead.org>
    Cc: Andy Shevchenko <andy@infradead.org>
    Signed-off-by: Paul Gortmaker <paul.gortmaker@windriver.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Reviewed-by: Peter Feuerer <peter@piie.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a13a81d3ace70eb54da2f4858bd9529d257f9164
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Mon Sep 24 13:01:20 2018 +0200

    clk: samsung: exynos5420: Enable PERIS clocks for suspend
    
    [ Upstream commit b33228029d842269e17bba591609e83ed422005d ]
    
    Ensure that clocks for core SoC modules (including TZPC0..9 modules)
    are enabled for suspend/resume cycle. This fixes suspend/resume
    support on Exynos5422-based Odroid XU3/XU4 boards.
    
    Suggested-by: Joonyoung Shim <jy0922.shim@samsung.com>
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Sylwester Nawrocki <snawrocki@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac270f140a28892487a5208f6df8f08824d3c18f
Author: Chengguang Xu <cgxu519@gmx.com>
Date:   Wed Jun 13 12:05:13 2018 +0800

    fs/exofs: fix potential memory leak in mount option parsing
    
    [ Upstream commit 515f1867addaba49c1c6ac73abfaffbc192c1db4 ]
    
    There are some cases can cause memory leak when parsing
    option 'osdname'.
    
    Signed-off-by: Chengguang Xu <cgxu519@gmx.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cde0628c270147eaa73744229872f5004e9ff39c
Author: Alan Tull <atull@kernel.org>
Date:   Thu Oct 18 14:54:11 2018 -0500

    clk: fixed-rate: fix of_node_get-put imbalance
    
    [ Upstream commit 52091c256bdcad0d01e2852a63f19cd2cce6af96 ]
    
    When the fixed rate clock is created by devicetree,
    of_clk_add_provider is called.  Add a call to
    of_clk_del_provider in the remove function to balance
    it out.
    
    Signed-off-by: Alan Tull <atull@kernel.org>
    Fixes: 435779fe1336 ("clk: fixed-rate: Convert into a module platform driver")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebaf1e35da0f5eb1f3cd9686a628f1ce1bdd0516
Author: Rajneesh Bhardwaj <rajneesh.bhardwaj@linux.intel.com>
Date:   Sat Oct 6 12:21:13 2018 +0530

    platform/x86: intel_telemetry: report debugfs failure
    
    [ Upstream commit 8d98b1ef368feeb7720b8b9b6f3bd93f2ad892bc ]
    
    On some Goldmont based systems such as ASRock J3455M the BIOS may not
    enable the IPC1 device that provides access to the PMC and PUNIT. In
    such scenarios, the IOSS and PSS resources from the platform device can
    not be obtained and result in a invalid telemetry_plt_config which is an
    internal data structure that holds platform config and is maintained by
    the telemetry platform driver.
    
    This is also applicable to the platforms where the BIOS supports IPC1
    device under debug configurations but IPC1 is disabled by user or the
    policy.
    
    This change allows user to know the reason for not seeing entries under
    /sys/kernel/debug/telemetry/* when there is no apparent failure at boot.
    
    Cc: Matt Turner <matt.turner@intel.com>
    Cc: Len Brown <len.brown@intel.com>
    Cc: Souvik Kumar Chakravarty <souvik.k.chakravarty@intel.com>
    Cc: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@intel.com>
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=198779
    Acked-by: Matt Turner <matt.turner@intel.com>
    Signed-off-by: Rajneesh Bhardwaj <rajneesh.bhardwaj@linux.intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 541f0aa32457ca56eca69e92bb1494cb8822d080
Author: Lee, Shawn C <shawn.c.lee@intel.com>
Date:   Sun Oct 28 22:49:33 2018 -0700

    drm/edid: Add 6 bpc quirk for BOE panel.
    
    [ Upstream commit 922dceff8dc1fb4dafc9af78139ba65671408103 ]
    
    BOE panel (ID: 0x0771) that reports "DFP 1.x compliant TMDS".
    But it's 6bpc panel only instead of 8 bpc.
    
    Add panel ID to edid quirk list and set 6 bpc as default to
    work around this issue.
    
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Cc: Cooper Chiou <cooper.chiou@intel.com>
    Signed-off-by: Lee, Shawn C <shawn.c.lee@intel.com>>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/1540792173-7288-1-git-send-email-shawn.c.lee@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11832f3cfbdad1b6120b5411ae2551b3acd0f37b
Author: Richard Weinberger <richard@nod.at>
Date:   Fri Jun 15 16:42:56 2018 +0200

    um: Give start_idle_thread() a return code
    
    [ Upstream commit 7ff1e34bbdc15acab823b1ee4240e94623d50ee8 ]
    
    Fixes:
    arch/um/os-Linux/skas/process.c:613:1: warning: control reaches end of
    non-void function [-Wreturn-type]
    
    longjmp() never returns but gcc still warns that the end of the function
    can be reached.
    Add a return code and debug aid to detect this impossible case.
    
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b275768a13bdf0d949b78c78db8065065a3a8d9
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Tue Oct 30 15:06:00 2018 -0700

    hfsplus: prevent btree data loss on root split
    
    [ Upstream commit 0a3021d4f5295aa073c7bf5c5e4de60a2e292578 ]
    
    Creating, renaming or deleting a file may cause catalog corruption and
    data loss.  This bug is randomly triggered by xfstests generic/027, but
    here is a faster reproducer:
    
      truncate -s 50M fs.iso
      mkfs.hfsplus fs.iso
      mount fs.iso /mnt
      i=100
      while [ $i -le 150 ]; do
        touch /mnt/$i &>/dev/null
        ((++i))
      done
      i=100
      while [ $i -le 150 ]; do
        mv /mnt/$i /mnt/$(perl -e "print $i x82") &>/dev/null
        ((++i))
      done
      umount /mnt
      fsck.hfsplus -n fs.iso
    
    The bug is triggered whenever hfs_brec_update_parent() needs to split the
    root node.  The height of the btree is not increased, which leaves the new
    node orphaned and its records lost.
    
    Link: http://lkml.kernel.org/r/26d882184fc43043a810114258f45277752186c7.1535682461.git.ernesto.mnd.fernandez@gmail.com
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Cc: Christoph Hellwig <hch@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36b9d757247be4c9099c25989f5372716c876b79
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Tue Oct 30 15:06:07 2018 -0700

    hfs: prevent btree data loss on root split
    
    [ Upstream commit d057c036672f33d43a5f7344acbb08cf3a8a0c09 ]
    
    This bug is triggered whenever hfs_brec_update_parent() needs to split
    the root node.  The height of the btree is not increased, which leaves
    the new node orphaned and its records lost.  It is not possible for this
    to happen on a valid hfs filesystem because the index nodes have fixed
    length keys.
    
    For reasons I ignore, the hfs module does have support for a number of
    hfsplus features.  A corrupt btree header may report variable length
    keys and trigger this bug, so it's better to fix it.
    
    Link: http://lkml.kernel.org/r/9750b1415685c4adca10766895f6d5ef12babdb0.1535682463.git.ernesto.mnd.fernandez@gmail.com
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Cc: Christoph Hellwig <hch@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c35bb58c85a967e35e3151007a6cfdc83d74799
Author: Jann Horn <jannh@google.com>
Date:   Tue Oct 30 15:06:38 2018 -0700

    reiserfs: propagate errors from fill_with_dentries() properly
    
    [ Upstream commit b10298d56c9623f9b173f19959732d3184b35f4f ]
    
    fill_with_dentries() failed to propagate errors up to
    reiserfs_for_each_xattr() properly.  Plumb them through.
    
    Note that reiserfs_for_each_xattr() is only used by
    reiserfs_delete_xattrs() and reiserfs_chown_xattrs().  The result of
    reiserfs_delete_xattrs() is discarded anyway, the only difference there is
    whether a warning is printed to dmesg.  The result of
    reiserfs_chown_xattrs() does matter because it can block chowning of the
    file to which the xattrs belong; but either way, the resulting state can
    have misaligned ownership, so my patch doesn't improve things greatly.
    
    Credit for making me look at this code goes to Al Viro, who pointed out
    that the ->actor calling convention is suboptimal and should be changed.
    
    Link: http://lkml.kernel.org/r/20180802163335.83312-1-jannh@google.com
    Signed-off-by: Jann Horn <jannh@google.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Jeff Mahoney <jeffm@suse.com>
    Cc: Eric Biggers <ebiggers@google.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f89c9ff374588484e9bb9d611df4df0e180d5be5
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Nov 1 13:14:30 2018 +0000

    cifs: don't dereference smb_file_target before null check
    
    [ Upstream commit 8c6c9bed8773375b1d54ccca2911ec892c59db5d ]
    
    There is a null check on dst_file->private data which suggests
    it can be potentially null. However, before this check, pointer
    smb_file_target is derived from dst_file->private and dereferenced
    in the call to tlink_tcon, hence there is a potential null pointer
    deference.
    
    Fix this by assigning smb_file_target and target_tcon after the
    null pointer sanity checks.
    
    Detected by CoverityScan, CID#1475302 ("Dereference before null check")
    
    Fixes: 04b38d601239 ("vfs: pull btrfs clone API to vfs layer")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
