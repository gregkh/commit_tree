commit 6559b2338d96ec330887871d47e1ced520bc4f03
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 13 11:12:59 2018 -0800

    Linux 4.18.19

commit 5c4f8ea1f31301875411a3b6d18e03ae99864d0e
Author: Shaohua Li <shli@fb.com>
Date:   Sun Oct 14 17:05:07 2018 -0700

    MD: fix invalid stored role for a disk - try2
    
    commit 9e753ba9b9b405e3902d9f08aec5f2ea58a0c317 upstream.
    
    Commit d595567dc4f0 (MD: fix invalid stored role for a disk) broke linear
    hotadd. Let's only fix the role for disks in raid1/10.
    Based on Guoqing's original patch.
    
    Reported-by: kernel test robot <rong.a.chen@intel.com>
    Cc: Gioh Kim <gi-oh.kim@profitbricks.com>
    Cc: Guoqing Jiang <gqjiang@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddf734ede053ad9cf1e9555b63cb00dccbf144cf
Author: Daniel Colascione <dancol@google.com>
Date:   Fri Oct 12 03:54:27 2018 -0700

    bpf: wait for running BPF programs when updating map-in-map
    
    commit 1ae80cf31938c8f77c37a29bbe29e7f1cd492be8 upstream.
    
    The map-in-map frequently serves as a mechanism for atomic
    snapshotting of state that a BPF program might record.  The current
    implementation is dangerous to use in this way, however, since
    userspace has no way of knowing when all programs that might have
    retrieved the "old" value of the map may have completed.
    
    This change ensures that map update operations on map-in-map map types
    always wait for all references to the old map to drop before returning
    to userspace.
    
    Signed-off-by: Daniel Colascione <dancol@google.com>
    Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Chenbo Feng <fengc@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbfed258eb08070e051a1c086282623cc562ff24
Author: Jann Horn <jannh@google.com>
Date:   Mon Nov 5 20:55:09 2018 +0100

    userns: also map extents in the reverse map to kernel IDs
    
    commit d2f007dbe7e4c9583eea6eb04d60001e85c6f1bd upstream.
    
    The current logic first clones the extent array and sorts both copies, then
    maps the lower IDs of the forward mapping into the lower namespace, but
    doesn't map the lower IDs of the reverse mapping.
    
    This means that code in a nested user namespace with >5 extents will see
    incorrect IDs. It also breaks some access checks, like
    inode_owner_or_capable() and privileged_wrt_inode_uidgid(), so a process
    can incorrectly appear to be capable relative to an inode.
    
    To fix it, we have to make sure that the "lower_first" members of extents
    in both arrays are translated; and we have to make sure that the reverse
    map is sorted *after* the translation (since otherwise the translation can
    break the sorting).
    
    This is CVE-2018-18955.
    
    Fixes: 6397fac4915a ("userns: bump idmap limits to 340")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jann Horn <jannh@google.com>
    Tested-by: Eric W. Biederman <ebiederm@xmission.com>
    Reviewed-by: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46aa7eb182c9c11f659900c8628cf1ef4c585e1e
Author: David Ahern <dsahern@gmail.com>
Date:   Wed Oct 24 08:32:49 2018 -0700

    net: sched: Remove TCA_OPTIONS from policy
    
    commit e72bde6b66299602087c8c2350d36a525e75d06e upstream.
    
    Marco reported an error with hfsc:
    root@Calimero:~# tc qdisc add dev eth0 root handle 1:0 hfsc default 1
    Error: Attribute failed policy validation.
    
    Apparently a few implementations pass TCA_OPTIONS as a binary instead
    of nested attribute, so drop TCA_OPTIONS from the policy.
    
    Fixes: 8b4c3cdd9dd8 ("net: sched: Add policy validation for tc attributes")
    Reported-by: Marco Berizzi <pupilla@libero.it>
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 928b261cfbe6e7a028311f9d58e0d93024f51d18
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Oct 22 10:43:06 2018 +0100

    Btrfs: fix use-after-free when dumping free space
    
    commit 9084cb6a24bf5838a665af92ded1af8363f9e563 upstream.
    
    We were iterating a block group's free space cache rbtree without locking
    first the lock that protects it (the free_space_ctl->free_space_offset
    rbtree is protected by the free_space_ctl->tree_lock spinlock).
    
    KASAN reported an use-after-free problem when iterating such a rbtree due
    to a concurrent rbtree delete:
    
    [ 9520.359168] ==================================================================
    [ 9520.359656] BUG: KASAN: use-after-free in rb_next+0x13/0x90
    [ 9520.359949] Read of size 8 at addr ffff8800b7ada500 by task btrfs-transacti/1721
    [ 9520.360357]
    [ 9520.360530] CPU: 4 PID: 1721 Comm: btrfs-transacti Tainted: G             L    4.19.0-rc8-nbor #555
    [ 9520.360990] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014
    [ 9520.362682] Call Trace:
    [ 9520.362887]  dump_stack+0xa4/0xf5
    [ 9520.363146]  print_address_description+0x78/0x280
    [ 9520.363412]  kasan_report+0x263/0x390
    [ 9520.363650]  ? rb_next+0x13/0x90
    [ 9520.363873]  __asan_load8+0x54/0x90
    [ 9520.364102]  rb_next+0x13/0x90
    [ 9520.364380]  btrfs_dump_free_space+0x146/0x160 [btrfs]
    [ 9520.364697]  dump_space_info+0x2cd/0x310 [btrfs]
    [ 9520.364997]  btrfs_reserve_extent+0x1ee/0x1f0 [btrfs]
    [ 9520.365310]  __btrfs_prealloc_file_range+0x1cc/0x620 [btrfs]
    [ 9520.365646]  ? btrfs_update_time+0x180/0x180 [btrfs]
    [ 9520.365923]  ? _raw_spin_unlock+0x27/0x40
    [ 9520.366204]  ? btrfs_alloc_data_chunk_ondemand+0x2c0/0x5c0 [btrfs]
    [ 9520.366549]  btrfs_prealloc_file_range_trans+0x23/0x30 [btrfs]
    [ 9520.366880]  cache_save_setup+0x42e/0x580 [btrfs]
    [ 9520.367220]  ? btrfs_check_data_free_space+0xd0/0xd0 [btrfs]
    [ 9520.367518]  ? lock_downgrade+0x2f0/0x2f0
    [ 9520.367799]  ? btrfs_write_dirty_block_groups+0x11f/0x6e0 [btrfs]
    [ 9520.368104]  ? kasan_check_read+0x11/0x20
    [ 9520.368349]  ? do_raw_spin_unlock+0xa8/0x140
    [ 9520.368638]  btrfs_write_dirty_block_groups+0x2af/0x6e0 [btrfs]
    [ 9520.368978]  ? btrfs_start_dirty_block_groups+0x870/0x870 [btrfs]
    [ 9520.369282]  ? do_raw_spin_unlock+0xa8/0x140
    [ 9520.369534]  ? _raw_spin_unlock+0x27/0x40
    [ 9520.369811]  ? btrfs_run_delayed_refs+0x1b8/0x230 [btrfs]
    [ 9520.370137]  commit_cowonly_roots+0x4b9/0x610 [btrfs]
    [ 9520.370560]  ? commit_fs_roots+0x350/0x350 [btrfs]
    [ 9520.370926]  ? btrfs_run_delayed_refs+0x1b8/0x230 [btrfs]
    [ 9520.371285]  btrfs_commit_transaction+0x5e5/0x10e0 [btrfs]
    [ 9520.371612]  ? btrfs_apply_pending_changes+0x90/0x90 [btrfs]
    [ 9520.371943]  ? start_transaction+0x168/0x6c0 [btrfs]
    [ 9520.372257]  transaction_kthread+0x21c/0x240 [btrfs]
    [ 9520.372537]  kthread+0x1d2/0x1f0
    [ 9520.372793]  ? btrfs_cleanup_transaction+0xb50/0xb50 [btrfs]
    [ 9520.373090]  ? kthread_park+0xb0/0xb0
    [ 9520.373329]  ret_from_fork+0x3a/0x50
    [ 9520.373567]
    [ 9520.373738] Allocated by task 1804:
    [ 9520.373974]  kasan_kmalloc+0xff/0x180
    [ 9520.374208]  kasan_slab_alloc+0x11/0x20
    [ 9520.374447]  kmem_cache_alloc+0xfc/0x2d0
    [ 9520.374731]  __btrfs_add_free_space+0x40/0x580 [btrfs]
    [ 9520.375044]  unpin_extent_range+0x4f7/0x7a0 [btrfs]
    [ 9520.375383]  btrfs_finish_extent_commit+0x15f/0x4d0 [btrfs]
    [ 9520.375707]  btrfs_commit_transaction+0xb06/0x10e0 [btrfs]
    [ 9520.376027]  btrfs_alloc_data_chunk_ondemand+0x237/0x5c0 [btrfs]
    [ 9520.376365]  btrfs_check_data_free_space+0x81/0xd0 [btrfs]
    [ 9520.376689]  btrfs_delalloc_reserve_space+0x25/0x80 [btrfs]
    [ 9520.377018]  btrfs_direct_IO+0x42e/0x6d0 [btrfs]
    [ 9520.377284]  generic_file_direct_write+0x11e/0x220
    [ 9520.377587]  btrfs_file_write_iter+0x472/0xac0 [btrfs]
    [ 9520.377875]  aio_write+0x25c/0x360
    [ 9520.378106]  io_submit_one+0xaa0/0xdc0
    [ 9520.378343]  __se_sys_io_submit+0xfa/0x2f0
    [ 9520.378589]  __x64_sys_io_submit+0x43/0x50
    [ 9520.378840]  do_syscall_64+0x7d/0x240
    [ 9520.379081]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
    [ 9520.379387]
    [ 9520.379557] Freed by task 1802:
    [ 9520.379782]  __kasan_slab_free+0x173/0x260
    [ 9520.380028]  kasan_slab_free+0xe/0x10
    [ 9520.380262]  kmem_cache_free+0xc1/0x2c0
    [ 9520.380544]  btrfs_find_space_for_alloc+0x4cd/0x4e0 [btrfs]
    [ 9520.380866]  find_free_extent+0xa99/0x17e0 [btrfs]
    [ 9520.381166]  btrfs_reserve_extent+0xd5/0x1f0 [btrfs]
    [ 9520.381474]  btrfs_get_blocks_direct+0x60b/0xbd0 [btrfs]
    [ 9520.381761]  __blockdev_direct_IO+0x10ee/0x58a1
    [ 9520.382059]  btrfs_direct_IO+0x25a/0x6d0 [btrfs]
    [ 9520.382321]  generic_file_direct_write+0x11e/0x220
    [ 9520.382623]  btrfs_file_write_iter+0x472/0xac0 [btrfs]
    [ 9520.382904]  aio_write+0x25c/0x360
    [ 9520.383172]  io_submit_one+0xaa0/0xdc0
    [ 9520.383416]  __se_sys_io_submit+0xfa/0x2f0
    [ 9520.383678]  __x64_sys_io_submit+0x43/0x50
    [ 9520.383927]  do_syscall_64+0x7d/0x240
    [ 9520.384165]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
    [ 9520.384439]
    [ 9520.384610] The buggy address belongs to the object at ffff8800b7ada500
                    which belongs to the cache btrfs_free_space of size 72
    [ 9520.385175] The buggy address is located 0 bytes inside of
                    72-byte region [ffff8800b7ada500, ffff8800b7ada548)
    [ 9520.385691] The buggy address belongs to the page:
    [ 9520.385957] page:ffffea0002deb680 count:1 mapcount:0 mapping:ffff880108a1d700 index:0x0 compound_mapcount: 0
    [ 9520.388030] flags: 0x8100(slab|head)
    [ 9520.388281] raw: 0000000000008100 ffffea0002deb608 ffffea0002728808 ffff880108a1d700
    [ 9520.388722] raw: 0000000000000000 0000000000130013 00000001ffffffff 0000000000000000
    [ 9520.389169] page dumped because: kasan: bad access detected
    [ 9520.389473]
    [ 9520.389658] Memory state around the buggy address:
    [ 9520.389943]  ffff8800b7ada400: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [ 9520.390368]  ffff8800b7ada480: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [ 9520.390796] >ffff8800b7ada500: fb fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc
    [ 9520.391223]                    ^
    [ 9520.391461]  ffff8800b7ada580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [ 9520.391885]  ffff8800b7ada600: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [ 9520.392313] ==================================================================
    [ 9520.392772] BTRFS critical (device vdc): entry offset 2258497536, bytes 131072, bitmap no
    [ 9520.393247] BUG: unable to handle kernel NULL pointer dereference at 0000000000000011
    [ 9520.393705] PGD 800000010dbab067 P4D 800000010dbab067 PUD 107551067 PMD 0
    [ 9520.394059] Oops: 0000 [#1] SMP DEBUG_PAGEALLOC KASAN PTI
    [ 9520.394378] CPU: 4 PID: 1721 Comm: btrfs-transacti Tainted: G    B        L    4.19.0-rc8-nbor #555
    [ 9520.394858] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014
    [ 9520.395350] RIP: 0010:rb_next+0x3c/0x90
    [ 9520.396461] RSP: 0018:ffff8801074ff780 EFLAGS: 00010292
    [ 9520.396762] RAX: 0000000000000000 RBX: 0000000000000001 RCX: ffffffff81b5ac4c
    [ 9520.397115] RDX: 0000000000000000 RSI: 0000000000000008 RDI: 0000000000000011
    [ 9520.397468] RBP: ffff8801074ff7a0 R08: ffffed0021d64ccc R09: ffffed0021d64ccc
    [ 9520.397821] R10: 0000000000000001 R11: ffffed0021d64ccb R12: ffff8800b91e0000
    [ 9520.398188] R13: ffff8800a3ceba48 R14: ffff8800b627bf80 R15: 0000000000020000
    [ 9520.398555] FS:  0000000000000000(0000) GS:ffff88010eb00000(0000) knlGS:0000000000000000
    [ 9520.399007] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 9520.399335] CR2: 0000000000000011 CR3: 0000000106b52000 CR4: 00000000000006a0
    [ 9520.399679] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 9520.400023] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 9520.400400] Call Trace:
    [ 9520.400648]  btrfs_dump_free_space+0x146/0x160 [btrfs]
    [ 9520.400974]  dump_space_info+0x2cd/0x310 [btrfs]
    [ 9520.401287]  btrfs_reserve_extent+0x1ee/0x1f0 [btrfs]
    [ 9520.401609]  __btrfs_prealloc_file_range+0x1cc/0x620 [btrfs]
    [ 9520.401952]  ? btrfs_update_time+0x180/0x180 [btrfs]
    [ 9520.402232]  ? _raw_spin_unlock+0x27/0x40
    [ 9520.402522]  ? btrfs_alloc_data_chunk_ondemand+0x2c0/0x5c0 [btrfs]
    [ 9520.402882]  btrfs_prealloc_file_range_trans+0x23/0x30 [btrfs]
    [ 9520.403261]  cache_save_setup+0x42e/0x580 [btrfs]
    [ 9520.403570]  ? btrfs_check_data_free_space+0xd0/0xd0 [btrfs]
    [ 9520.403871]  ? lock_downgrade+0x2f0/0x2f0
    [ 9520.404161]  ? btrfs_write_dirty_block_groups+0x11f/0x6e0 [btrfs]
    [ 9520.404481]  ? kasan_check_read+0x11/0x20
    [ 9520.404732]  ? do_raw_spin_unlock+0xa8/0x140
    [ 9520.405026]  btrfs_write_dirty_block_groups+0x2af/0x6e0 [btrfs]
    [ 9520.405375]  ? btrfs_start_dirty_block_groups+0x870/0x870 [btrfs]
    [ 9520.405694]  ? do_raw_spin_unlock+0xa8/0x140
    [ 9520.405958]  ? _raw_spin_unlock+0x27/0x40
    [ 9520.406243]  ? btrfs_run_delayed_refs+0x1b8/0x230 [btrfs]
    [ 9520.406574]  commit_cowonly_roots+0x4b9/0x610 [btrfs]
    [ 9520.406899]  ? commit_fs_roots+0x350/0x350 [btrfs]
    [ 9520.407253]  ? btrfs_run_delayed_refs+0x1b8/0x230 [btrfs]
    [ 9520.407589]  btrfs_commit_transaction+0x5e5/0x10e0 [btrfs]
    [ 9520.407925]  ? btrfs_apply_pending_changes+0x90/0x90 [btrfs]
    [ 9520.408262]  ? start_transaction+0x168/0x6c0 [btrfs]
    [ 9520.408582]  transaction_kthread+0x21c/0x240 [btrfs]
    [ 9520.408870]  kthread+0x1d2/0x1f0
    [ 9520.409138]  ? btrfs_cleanup_transaction+0xb50/0xb50 [btrfs]
    [ 9520.409440]  ? kthread_park+0xb0/0xb0
    [ 9520.409682]  ret_from_fork+0x3a/0x50
    [ 9520.410508] Dumping ftrace buffer:
    [ 9520.410764]    (ftrace buffer empty)
    [ 9520.411007] CR2: 0000000000000011
    [ 9520.411297] ---[ end trace 01a0863445cf360a ]---
    [ 9520.411568] RIP: 0010:rb_next+0x3c/0x90
    [ 9520.412644] RSP: 0018:ffff8801074ff780 EFLAGS: 00010292
    [ 9520.412932] RAX: 0000000000000000 RBX: 0000000000000001 RCX: ffffffff81b5ac4c
    [ 9520.413274] RDX: 0000000000000000 RSI: 0000000000000008 RDI: 0000000000000011
    [ 9520.413616] RBP: ffff8801074ff7a0 R08: ffffed0021d64ccc R09: ffffed0021d64ccc
    [ 9520.414007] R10: 0000000000000001 R11: ffffed0021d64ccb R12: ffff8800b91e0000
    [ 9520.414349] R13: ffff8800a3ceba48 R14: ffff8800b627bf80 R15: 0000000000020000
    [ 9520.416074] FS:  0000000000000000(0000) GS:ffff88010eb00000(0000) knlGS:0000000000000000
    [ 9520.416536] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 9520.416848] CR2: 0000000000000011 CR3: 0000000106b52000 CR4: 00000000000006a0
    [ 9520.418477] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 9520.418846] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 9520.419204] Kernel panic - not syncing: Fatal exception
    [ 9520.419666] Dumping ftrace buffer:
    [ 9520.419930]    (ftrace buffer empty)
    [ 9520.420168] Kernel Offset: disabled
    [ 9520.420406] ---[ end Kernel panic - not syncing: Fatal exception ]---
    
    Fix this by acquiring the respective lock before iterating the rbtree.
    
    Reported-by: Nikolay Borisov <nborisov@suse.com>
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7edab6df938ba3c73fbe9d19c1bb88846444645
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Oct 12 13:02:48 2018 +0100

    Btrfs: fix use-after-free during inode eviction
    
    commit 421f0922a2cfb0c75acd9746454aaa576c711a65 upstream.
    
    At inode.c:evict_inode_truncate_pages(), when we iterate over the
    inode's extent states, we access an extent state record's "state" field
    after we unlocked the inode's io tree lock. This can lead to a
    use-after-free issue because after we unlock the io tree that extent
    state record might have been freed due to being merged into another
    adjacent extent state record (a previous inflight bio for a read
    operation finished in the meanwhile which unlocked a range in the io
    tree and cause a merge of extent state records, as explained in the
    comment before the while loop added in commit 6ca0709756710 ("Btrfs: fix
    hang during inode eviction due to concurrent readahead")).
    
    Fix this by keeping a copy of the extent state's flags in a local
    variable and using it after unlocking the io tree.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=201189
    Fixes: b9d0b38928e2 ("btrfs: Add handler for invalidate page")
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fbcf14ceb4cba90de0998990731204ea42e5de2
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Oct 12 15:32:32 2018 -0400

    btrfs: move the dio_sem higher up the callchain
    
    commit c495144bc6962186feae31d687596d2472000e45 upstream.
    
    We're getting a lockdep splat because we take the dio_sem under the
    log_mutex.  What we really need is to protect fsync() from logging an
    extent map for an extent we never waited on higher up, so just guard the
    whole thing with dio_sem.
    
    ======================================================
    WARNING: possible circular locking dependency detected
    4.18.0-rc4-xfstests-00025-g5de5edbaf1d4 #411 Not tainted
    ------------------------------------------------------
    aio-dio-invalid/30928 is trying to acquire lock:
    0000000092621cfd (&mm->mmap_sem){++++}, at: get_user_pages_unlocked+0x5a/0x1e0
    
    but task is already holding lock:
    00000000cefe6b35 (&ei->dio_sem){++++}, at: btrfs_direct_IO+0x3be/0x400
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #5 (&ei->dio_sem){++++}:
           lock_acquire+0xbd/0x220
           down_write+0x51/0xb0
           btrfs_log_changed_extents+0x80/0xa40
           btrfs_log_inode+0xbaf/0x1000
           btrfs_log_inode_parent+0x26f/0xa80
           btrfs_log_dentry_safe+0x50/0x70
           btrfs_sync_file+0x357/0x540
           do_fsync+0x38/0x60
           __ia32_sys_fdatasync+0x12/0x20
           do_fast_syscall_32+0x9a/0x2f0
           entry_SYSENTER_compat+0x84/0x96
    
    -> #4 (&ei->log_mutex){+.+.}:
           lock_acquire+0xbd/0x220
           __mutex_lock+0x86/0xa10
           btrfs_record_unlink_dir+0x2a/0xa0
           btrfs_unlink+0x5a/0xc0
           vfs_unlink+0xb1/0x1a0
           do_unlinkat+0x264/0x2b0
           do_fast_syscall_32+0x9a/0x2f0
           entry_SYSENTER_compat+0x84/0x96
    
    -> #3 (sb_internal#2){.+.+}:
           lock_acquire+0xbd/0x220
           __sb_start_write+0x14d/0x230
           start_transaction+0x3e6/0x590
           btrfs_evict_inode+0x475/0x640
           evict+0xbf/0x1b0
           btrfs_run_delayed_iputs+0x6c/0x90
           cleaner_kthread+0x124/0x1a0
           kthread+0x106/0x140
           ret_from_fork+0x3a/0x50
    
    -> #2 (&fs_info->cleaner_delayed_iput_mutex){+.+.}:
           lock_acquire+0xbd/0x220
           __mutex_lock+0x86/0xa10
           btrfs_alloc_data_chunk_ondemand+0x197/0x530
           btrfs_check_data_free_space+0x4c/0x90
           btrfs_delalloc_reserve_space+0x20/0x60
           btrfs_page_mkwrite+0x87/0x520
           do_page_mkwrite+0x31/0xa0
           __handle_mm_fault+0x799/0xb00
           handle_mm_fault+0x7c/0xe0
           __do_page_fault+0x1d3/0x4a0
           async_page_fault+0x1e/0x30
    
    -> #1 (sb_pagefaults){.+.+}:
           lock_acquire+0xbd/0x220
           __sb_start_write+0x14d/0x230
           btrfs_page_mkwrite+0x6a/0x520
           do_page_mkwrite+0x31/0xa0
           __handle_mm_fault+0x799/0xb00
           handle_mm_fault+0x7c/0xe0
           __do_page_fault+0x1d3/0x4a0
           async_page_fault+0x1e/0x30
    
    -> #0 (&mm->mmap_sem){++++}:
           __lock_acquire+0x42e/0x7a0
           lock_acquire+0xbd/0x220
           down_read+0x48/0xb0
           get_user_pages_unlocked+0x5a/0x1e0
           get_user_pages_fast+0xa4/0x150
           iov_iter_get_pages+0xc3/0x340
           do_direct_IO+0xf93/0x1d70
           __blockdev_direct_IO+0x32d/0x1c20
           btrfs_direct_IO+0x227/0x400
           generic_file_direct_write+0xcf/0x180
           btrfs_file_write_iter+0x308/0x58c
           aio_write+0xf8/0x1d0
           io_submit_one+0x3a9/0x620
           __ia32_compat_sys_io_submit+0xb2/0x270
           do_int80_syscall_32+0x5b/0x1a0
           entry_INT80_compat+0x88/0xa0
    
    other info that might help us debug this:
    
    Chain exists of:
      &mm->mmap_sem --> &ei->log_mutex --> &ei->dio_sem
    
     Possible unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock(&ei->dio_sem);
                                   lock(&ei->log_mutex);
                                   lock(&ei->dio_sem);
      lock(&mm->mmap_sem);
    
     *** DEADLOCK ***
    
    1 lock held by aio-dio-invalid/30928:
     #0: 00000000cefe6b35 (&ei->dio_sem){++++}, at: btrfs_direct_IO+0x3be/0x400
    
    stack backtrace:
    CPU: 0 PID: 30928 Comm: aio-dio-invalid Not tainted 4.18.0-rc4-xfstests-00025-g5de5edbaf1d4 #411
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04/01/2014
    Call Trace:
     dump_stack+0x7c/0xbb
     print_circular_bug.isra.37+0x297/0x2a4
     check_prev_add.constprop.45+0x781/0x7a0
     ? __lock_acquire+0x42e/0x7a0
     validate_chain.isra.41+0x7f0/0xb00
     __lock_acquire+0x42e/0x7a0
     lock_acquire+0xbd/0x220
     ? get_user_pages_unlocked+0x5a/0x1e0
     down_read+0x48/0xb0
     ? get_user_pages_unlocked+0x5a/0x1e0
     get_user_pages_unlocked+0x5a/0x1e0
     get_user_pages_fast+0xa4/0x150
     iov_iter_get_pages+0xc3/0x340
     do_direct_IO+0xf93/0x1d70
     ? __alloc_workqueue_key+0x358/0x490
     ? __blockdev_direct_IO+0x14b/0x1c20
     __blockdev_direct_IO+0x32d/0x1c20
     ? btrfs_run_delalloc_work+0x40/0x40
     ? can_nocow_extent+0x490/0x490
     ? kvm_clock_read+0x1f/0x30
     ? can_nocow_extent+0x490/0x490
     ? btrfs_run_delalloc_work+0x40/0x40
     btrfs_direct_IO+0x227/0x400
     ? btrfs_run_delalloc_work+0x40/0x40
     generic_file_direct_write+0xcf/0x180
     btrfs_file_write_iter+0x308/0x58c
     aio_write+0xf8/0x1d0
     ? kvm_clock_read+0x1f/0x30
     ? __might_fault+0x3e/0x90
     io_submit_one+0x3a9/0x620
     ? io_submit_one+0xe5/0x620
     __ia32_compat_sys_io_submit+0xb2/0x270
     do_int80_syscall_32+0x5b/0x1a0
     entry_INT80_compat+0x88/0xa0
    
    CC: stable@vger.kernel.org # 4.14+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 904c7dc9dec1c84d550d814fb7ee50200b48e9d9
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Thu Oct 11 15:54:31 2018 -0400

    btrfs: don't run delayed_iputs in commit
    
    commit 30928e9baac238a7330085a1c5747f0b5df444b4 upstream.
    
    This could result in a really bad case where we do something like
    
    evict
      evict_refill_and_join
        btrfs_commit_transaction
          btrfs_run_delayed_iputs
            evict
              evict_refill_and_join
                btrfs_commit_transaction
    ... forever
    
    We have plenty of other places where we run delayed iputs that are much
    safer, let those do the work.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13d6628c019d7d3ddd749d09ffb4152ae0ad8e8b
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Thu Oct 11 15:54:22 2018 -0400

    btrfs: fix insert_reserved error handling
    
    commit 80ee54bfe8a3850015585ebc84e8d207fcae6831 upstream.
    
    We were not handling the reserved byte accounting properly for data
    references.  Metadata was fine, if it errored out the error paths would
    free the bytes_reserved count and pin the extent, but it even missed one
    of the error cases.  So instead move this handling up into
    run_one_delayed_ref so we are sure that both cases are properly cleaned
    up in case of a transaction abort.
    
    CC: stable@vger.kernel.org # 4.18+
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68c7db7c8f76e80d2128da46249561208f51d988
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Thu Oct 11 15:54:21 2018 -0400

    btrfs: only free reserved extent if we didn't insert it
    
    commit 49940bdd57779c78462da7aa5a8650b2fea8c2ff upstream.
    
    When we insert the file extent once the ordered extent completes we free
    the reserved extent reservation as it'll have been migrated to the
    bytes_used counter.  However if we error out after this step we'll still
    clear the reserved extent reservation, resulting in a negative
    accounting of the reserved bytes for the block group and space info.
    Fix this by only doing the free if we didn't successfully insert a file
    extent for this extent.
    
    CC: stable@vger.kernel.org # 4.14+
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e9205b1d619280c1b7a1348e2e0180b1561a73c
Author: Josef Bacik <jbacik@fb.com>
Date:   Thu Oct 11 15:54:09 2018 -0400

    btrfs: don't use ctl->free_space for max_extent_size
    
    commit fb5c39d7a887108087de6ff93d3f326b01b4ef41 upstream.
    
    max_extent_size is supposed to be the largest contiguous range for the
    space info, and ctl->free_space is the total free space in the block
    group.  We need to keep track of these separately and _only_ use the
    max_free_space if we don't have a max_extent_size, as that means our
    original request was too large to search any of the block groups for and
    therefore wouldn't have a max_extent_size set.
    
    CC: stable@vger.kernel.org # 4.14+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 171d45102ea88b69e686d95717f29e8fcffe2e1d
Author: Josef Bacik <jbacik@fb.com>
Date:   Fri Oct 12 15:32:33 2018 -0400

    btrfs: set max_extent_size properly
    
    commit ad22cf6ea47fa20fbe11ac324a0a15c0a9a4a2a9 upstream.
    
    We can't use entry->bytes if our entry is a bitmap entry, we need to use
    entry->max_extent_size in that case.  Fix up all the logic to make this
    consistent.
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17a7240a9508d8fbb189456960628170bb9b8833
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Thu Oct 11 15:54:03 2018 -0400

    btrfs: reset max_extent_size properly
    
    commit 21a94f7acf0f748599ea552af5d9ee7d7e41c72f upstream.
    
    If we use up our block group before allocating a new one we'll easily
    get a max_extent_size that's set really really low, which will result in
    a lot of fragmentation.  We need to make sure we're resetting the
    max_extent_size when we add a new chunk or add new space.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 645dd2f9feab405216397a40b0ed5ef17a6e8aa2
Author: Filipe Manana <fdmanana@suse.com>
Date:   Fri Oct 12 10:03:55 2018 +0100

    Btrfs: fix deadlock when writing out free space caches
    
    commit 5ce555578e0919237fa4bda92b4670e2dd176f85 upstream.
    
    When writing out a block group free space cache we can end deadlocking
    with ourselves on an extent buffer lock resulting in a warning like the
    following:
    
      [245043.379979] WARNING: CPU: 4 PID: 2608 at fs/btrfs/locking.c:251 btrfs_tree_lock+0x1be/0x1d0 [btrfs]
      [245043.392792] CPU: 4 PID: 2608 Comm: btrfs-transacti Tainted: G
        W I      4.16.8 #1
      [245043.395489] RIP: 0010:btrfs_tree_lock+0x1be/0x1d0 [btrfs]
      [245043.396791] RSP: 0018:ffffc9000424b840 EFLAGS: 00010246
      [245043.398093] RAX: 0000000000000a30 RBX: ffff8807e20a3d20 RCX: 0000000000000001
      [245043.399414] RDX: 0000000000000001 RSI: 0000000000000002 RDI: ffff8807e20a3d20
      [245043.400732] RBP: 0000000000000001 R08: ffff88041f39a700 R09: ffff880000000000
      [245043.402021] R10: 0000000000000040 R11: ffff8807e20a3d20 R12: ffff8807cb220630
      [245043.403296] R13: 0000000000000001 R14: ffff8807cb220628 R15: ffff88041fbdf000
      [245043.404780] FS:  0000000000000000(0000) GS:ffff88082fc80000(0000) knlGS:0000000000000000
      [245043.406050] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [245043.407321] CR2: 00007fffdbdb9f10 CR3: 0000000001c09005 CR4: 00000000000206e0
      [245043.408670] Call Trace:
      [245043.409977]  btrfs_search_slot+0x761/0xa60 [btrfs]
      [245043.411278]  btrfs_insert_empty_items+0x62/0xb0 [btrfs]
      [245043.412572]  btrfs_insert_item+0x5b/0xc0 [btrfs]
      [245043.413922]  btrfs_create_pending_block_groups+0xfb/0x1e0 [btrfs]
      [245043.415216]  do_chunk_alloc+0x1e5/0x2a0 [btrfs]
      [245043.416487]  find_free_extent+0xcd0/0xf60 [btrfs]
      [245043.417813]  btrfs_reserve_extent+0x96/0x1e0 [btrfs]
      [245043.419105]  btrfs_alloc_tree_block+0xfb/0x4a0 [btrfs]
      [245043.420378]  __btrfs_cow_block+0x127/0x550 [btrfs]
      [245043.421652]  btrfs_cow_block+0xee/0x190 [btrfs]
      [245043.422979]  btrfs_search_slot+0x227/0xa60 [btrfs]
      [245043.424279]  ? btrfs_update_inode_item+0x59/0x100 [btrfs]
      [245043.425538]  ? iput+0x72/0x1e0
      [245043.426798]  write_one_cache_group.isra.49+0x20/0x90 [btrfs]
      [245043.428131]  btrfs_start_dirty_block_groups+0x102/0x420 [btrfs]
      [245043.429419]  btrfs_commit_transaction+0x11b/0x880 [btrfs]
      [245043.430712]  ? start_transaction+0x8e/0x410 [btrfs]
      [245043.432006]  transaction_kthread+0x184/0x1a0 [btrfs]
      [245043.433341]  kthread+0xf0/0x130
      [245043.434628]  ? btrfs_cleanup_transaction+0x4e0/0x4e0 [btrfs]
      [245043.435928]  ? kthread_create_worker_on_cpu+0x40/0x40
      [245043.437236]  ret_from_fork+0x1f/0x30
      [245043.441054] ---[ end trace 15abaa2aaf36827f ]---
    
    This is because at write_one_cache_group() when we are COWing a leaf from
    the extent tree we end up allocating a new block group (chunk) and,
    because we have hit a threshold on the number of bytes reserved for system
    chunks, we attempt to finalize the creation of new block groups from the
    current transaction, by calling btrfs_create_pending_block_groups().
    However here we also need to modify the extent tree in order to insert
    a block group item, and if the location for this new block group item
    happens to be in the same leaf that we were COWing earlier, we deadlock
    since btrfs_search_slot() tries to write lock the extent buffer that we
    locked before at write_one_cache_group().
    
    We have already hit similar cases in the past and commit d9a0540a79f8
    ("Btrfs: fix deadlock when finalizing block group creation") fixed some
    of those cases by delaying the creation of pending block groups at the
    known specific spots that could lead to a deadlock. This change reworks
    that commit to be more generic so that we don't have to add similar logic
    to every possible path that can lead to a deadlock. This is done by
    making __btrfs_cow_block() disallowing the creation of new block groups
    (setting the transaction's can_flush_pending_bgs to false) before it
    attempts to allocate a new extent buffer for either the extent, chunk or
    device trees, since those are the trees that pending block creation
    modifies. Once the new extent buffer is allocated, it allows creation of
    pending block groups to happen again.
    
    This change depends on a recent patch from Josef which is not yet in
    Linus' tree, named "btrfs: make sure we create all new block groups" in
    order to avoid occasional warnings at btrfs_trans_release_chunk_metadata().
    
    Fixes: d9a0540a79f8 ("Btrfs: fix deadlock when finalizing block group creation")
    CC: stable@vger.kernel.org # 4.4+
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=199753
    Link: https://lore.kernel.org/linux-btrfs/CAJtFHUTHna09ST-_EEiyWmDH6gAqS6wa=zMNMBsifj8ABu99cw@mail.gmail.com/
    Reported-by: E V <eliventer@gmail.com>
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7c7d298a76fbe3f5882dbc96b53afae6787768c
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Oct 15 09:51:00 2018 +0100

    Btrfs: fix assertion on fsync of regular file when using no-holes feature
    
    commit 7ed586d0a8241e81d58c656c5b315f781fa6fc97 upstream.
    
    When using the NO_HOLES feature and logging a regular file, we were
    expecting that if we find an inline extent, that either its size in RAM
    (uncompressed and unenconded) matches the size of the file or if it does
    not, that it matches the sector size and it represents compressed data.
    This assertion does not cover a case where the length of the inline extent
    is smaller than the sector size and also smaller the file's size, such
    case is possible through fallocate. Example:
    
      $ mkfs.btrfs -f -O no-holes /dev/sdb
      $ mount /dev/sdb /mnt
    
      $ xfs_io -f -c "pwrite -S 0xb60 0 21" /mnt/foobar
      $ xfs_io -c "falloc 40 40" /mnt/foobar
      $ xfs_io -c "fsync" /mnt/foobar
    
    In the above example we trigger the assertion because the inline extent's
    length is 21 bytes while the file size is 80 bytes. The fallocate() call
    merely updated the file's size and did not touch the existing inline
    extent, as expected.
    
    So fix this by adjusting the assertion so that an inline extent length
    smaller than the file size is valid if the file size is smaller than the
    filesystem's sector size.
    
    A test case for fstests follows soon.
    
    Reported-by: Anatoly Trosinenko <anatoly.trosinenko@gmail.com>
    Fixes: a89ca6f24ffe ("Btrfs: fix fsync after truncate when no_holes feature is enabled")
    CC: stable@vger.kernel.org # 4.14+
    Link: https://lore.kernel.org/linux-btrfs/CAE5jQCfRSBC7n4pUTFJcmHh109=gwyT9mFkCOL+NKfzswmR=_Q@mail.gmail.com/
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 191597b15b24f1a6d8fee3a76f51638f35fa7503
Author: Filipe Manana <fdmanana@suse.com>
Date:   Sat Oct 13 00:37:25 2018 +0100

    Btrfs: fix null pointer dereference on compressed write path error
    
    commit 3527a018c00e5dbada2f9d7ed5576437b6dd5cfb upstream.
    
    At inode.c:compress_file_range(), under the "free_pages_out" label, we can
    end up dereferencing the "pages" pointer when it has a NULL value. This
    case happens when "start" has a value of 0 and we fail to allocate memory
    for the "pages" pointer. When that happens we jump to the "cont" label and
    then enter the "if (start == 0)" branch where we immediately call the
    cow_file_range_inline() function. If that function returns 0 (success
    creating an inline extent) or an error (like -ENOMEM for example) we jump
    to the "free_pages_out" label and then access "pages[i]" leading to a NULL
    pointer dereference, since "nr_pages" has a value greater than zero at
    that point.
    
    Fix this by setting "nr_pages" to 0 when we fail to allocate memory for
    the "pages" pointer.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=201119
    Fixes: 771ed689d2cd ("Btrfs: Optimize compressed writeback and reads")
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Liu Bo <bo.liu@linux.alibaba.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07cf04229031af4b960ee093e665caa4c4371186
Author: Qu Wenruo <wqu@suse.com>
Date:   Fri Aug 10 10:20:26 2018 +0800

    btrfs: qgroup: Dirty all qgroups before rescan
    
    commit 9c7b0c2e8dbfbcd80a71e2cbfe02704f26c185c6 upstream.
    
    [BUG]
    In the following case, rescan won't zero out the number of qgroup 1/0:
    
      $ mkfs.btrfs -fq $DEV
      $ mount $DEV /mnt
    
      $ btrfs quota enable /mnt
      $ btrfs qgroup create 1/0 /mnt
      $ btrfs sub create /mnt/sub
      $ btrfs qgroup assign 0/257 1/0 /mnt
    
      $ dd if=/dev/urandom of=/mnt/sub/file bs=1k count=1000
      $ btrfs sub snap /mnt/sub /mnt/snap
      $ btrfs quota rescan -w /mnt
      $ btrfs qgroup show -pcre /mnt
      qgroupid         rfer         excl     max_rfer     max_excl parent  child
      --------         ----         ----     --------     -------- ------  -----
      0/5          16.00KiB     16.00KiB         none         none ---     ---
      0/257      1016.00KiB     16.00KiB         none         none 1/0     ---
      0/258      1016.00KiB     16.00KiB         none         none ---     ---
      1/0        1016.00KiB     16.00KiB         none         none ---     0/257
    
    So far so good, but:
    
      $ btrfs qgroup remove 0/257 1/0 /mnt
      WARNING: quotas may be inconsistent, rescan needed
      $ btrfs quota rescan -w /mnt
      $ btrfs qgroup show -pcre  /mnt
      qgoupid         rfer         excl     max_rfer     max_excl parent  child
      --------         ----         ----     --------     -------- ------  -----
      0/5          16.00KiB     16.00KiB         none         none ---     ---
      0/257      1016.00KiB     16.00KiB         none         none ---     ---
      0/258      1016.00KiB     16.00KiB         none         none ---     ---
      1/0        1016.00KiB     16.00KiB         none         none ---     ---
                 ^^^^^^^^^^     ^^^^^^^^ not cleared
    
    [CAUSE]
    Before rescan we call qgroup_rescan_zero_tracking() to zero out all
    qgroups' accounting numbers.
    
    However we don't mark all qgroups dirty, but rely on rescan to do so.
    
    If we have any high level qgroup without children, it won't be marked
    dirty during rescan, since we cannot reach that qgroup.
    
    This will cause QGROUP_INFO items of childless qgroups never get updated
    in the quota tree, thus their numbers will stay the same in "btrfs
    qgroup show" output.
    
    [FIX]
    Just mark all qgroups dirty in qgroup_rescan_zero_tracking(), so even if
    we have childless qgroups, their QGROUP_INFO items will still get
    updated during rescan.
    
    Reported-by: Misono Tomohiro <misono.tomohiro@jp.fujitsu.com>
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Misono Tomohiro <misono.tomohiro@jp.fujitsu.com>
    Tested-by: Misono Tomohiro <misono.tomohiro@jp.fujitsu.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96437af32b61485d5dde5ec2b3d0c6388fbf7280
Author: Filipe Manana <fdmanana@suse.com>
Date:   Tue Oct 9 15:05:29 2018 +0100

    Btrfs: fix wrong dentries after fsync of file that got its parent replaced
    
    commit 0f375eed92b5a407657532637ed9652611a682f5 upstream.
    
    In a scenario like the following:
    
      mkdir /mnt/A               # inode 258
      mkdir /mnt/B               # inode 259
      touch /mnt/B/bar           # inode 260
    
      sync
    
      mv /mnt/B/bar /mnt/A/bar
      mv -T /mnt/A /mnt/B
      fsync /mnt/B/bar
    
      <power fail>
    
    After replaying the log we end up with file bar having 2 hard links, both
    with the name 'bar' and one in the directory with inode number 258 and the
    other in the directory with inode number 259. Also, we end up with the
    directory inode 259 still existing and with the directory inode 258 still
    named as 'A', instead of 'B'. In this scenario, file 'bar' should only
    have one hard link, located at directory inode 258, the directory inode
    259 should not exist anymore and the name for directory inode 258 should
    be 'B'.
    
    This incorrect behaviour happens because when attempting to log the old
    parents of an inode, we skip any parents that no longer exist. Fix this
    by forcing a full commit if an old parent no longer exists.
    
    A test case for fstests follows soon.
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41bdbc9ea1ecc477e2c13fed4c08d4f5fbef3a59
Author: Filipe Manana <fdmanana@suse.com>
Date:   Mon Oct 8 11:12:55 2018 +0100

    Btrfs: fix warning when replaying log after fsync of a tmpfile
    
    commit f2d72f42d5fa3bf33761d9e47201745f624fcff5 upstream.
    
    When replaying a log which contains a tmpfile (which necessarily has a
    link count of 0) we end up calling inc_nlink(), at
    fs/btrfs/tree-log.c:replay_one_buffer(), which produces a warning like
    the following:
    
      [195191.943673] WARNING: CPU: 0 PID: 6924 at fs/inode.c:342 inc_nlink+0x33/0x40
      [195191.943723] CPU: 0 PID: 6924 Comm: mount Not tainted 4.19.0-rc6-btrfs-next-38 #1
      [195191.943724] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.2-0-gf9626ccb91-prebuilt.qemu-project.org 04/01/2014
      [195191.943726] RIP: 0010:inc_nlink+0x33/0x40
      [195191.943728] RSP: 0018:ffffb96e425e3870 EFLAGS: 00010246
      [195191.943730] RAX: 0000000000000000 RBX: ffff8c0d1e6af4f0 RCX: 0000000000000006
      [195191.943731] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff8c0d1e6af4f0
      [195191.943731] RBP: 0000000000000097 R08: 0000000000000001 R09: 0000000000000000
      [195191.943732] R10: 0000000000000000 R11: 0000000000000000 R12: ffffb96e425e3a60
      [195191.943733] R13: ffff8c0d10cff0c8 R14: ffff8c0d0d515348 R15: ffff8c0d78a1b3f8
      [195191.943735] FS:  00007f570ee24480(0000) GS:ffff8c0dfb200000(0000) knlGS:0000000000000000
      [195191.943736] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [195191.943737] CR2: 00005593286277c8 CR3: 00000000bb8f2006 CR4: 00000000003606f0
      [195191.943739] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      [195191.943740] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      [195191.943741] Call Trace:
      [195191.943778]  replay_one_buffer+0x797/0x7d0 [btrfs]
      [195191.943802]  walk_up_log_tree+0x1c1/0x250 [btrfs]
      [195191.943809]  ? rcu_read_lock_sched_held+0x3f/0x70
      [195191.943825]  walk_log_tree+0xae/0x1d0 [btrfs]
      [195191.943840]  btrfs_recover_log_trees+0x1d7/0x4d0 [btrfs]
      [195191.943856]  ? replay_dir_deletes+0x280/0x280 [btrfs]
      [195191.943870]  open_ctree+0x1c3b/0x22a0 [btrfs]
      [195191.943887]  btrfs_mount_root+0x6b4/0x800 [btrfs]
      [195191.943894]  ? rcu_read_lock_sched_held+0x3f/0x70
      [195191.943899]  ? pcpu_alloc+0x55b/0x7c0
      [195191.943906]  ? mount_fs+0x3b/0x140
      [195191.943908]  mount_fs+0x3b/0x140
      [195191.943912]  ? __init_waitqueue_head+0x36/0x50
      [195191.943916]  vfs_kern_mount+0x62/0x160
      [195191.943927]  btrfs_mount+0x134/0x890 [btrfs]
      [195191.943936]  ? rcu_read_lock_sched_held+0x3f/0x70
      [195191.943938]  ? pcpu_alloc+0x55b/0x7c0
      [195191.943943]  ? mount_fs+0x3b/0x140
      [195191.943952]  ? btrfs_remount+0x570/0x570 [btrfs]
      [195191.943954]  mount_fs+0x3b/0x140
      [195191.943956]  ? __init_waitqueue_head+0x36/0x50
      [195191.943960]  vfs_kern_mount+0x62/0x160
      [195191.943963]  do_mount+0x1f9/0xd40
      [195191.943967]  ? memdup_user+0x4b/0x70
      [195191.943971]  ksys_mount+0x7e/0xd0
      [195191.943974]  __x64_sys_mount+0x21/0x30
      [195191.943977]  do_syscall_64+0x60/0x1b0
      [195191.943980]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
      [195191.943983] RIP: 0033:0x7f570e4e524a
      [195191.943986] RSP: 002b:00007ffd83589478 EFLAGS: 00000206 ORIG_RAX: 00000000000000a5
      [195191.943989] RAX: ffffffffffffffda RBX: 0000563f335b2060 RCX: 00007f570e4e524a
      [195191.943990] RDX: 0000563f335b2240 RSI: 0000563f335b2280 RDI: 0000563f335b2260
      [195191.943992] RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000020
      [195191.943993] R10: 00000000c0ed0000 R11: 0000000000000206 R12: 0000563f335b2260
      [195191.943994] R13: 0000563f335b2240 R14: 0000000000000000 R15: 00000000ffffffff
      [195191.944002] irq event stamp: 8688
      [195191.944010] hardirqs last  enabled at (8687): [<ffffffff9cb004c3>] console_unlock+0x503/0x640
      [195191.944012] hardirqs last disabled at (8688): [<ffffffff9ca037dd>] trace_hardirqs_off_thunk+0x1a/0x1c
      [195191.944018] softirqs last  enabled at (8638): [<ffffffff9cc0a5d1>] __set_page_dirty_nobuffers+0x101/0x150
      [195191.944020] softirqs last disabled at (8634): [<ffffffff9cc26bbe>] wb_wakeup_delayed+0x2e/0x60
      [195191.944022] ---[ end trace 5d6e873a9a0b811a ]---
    
    This happens because the inode does not have the flag I_LINKABLE set,
    which is a runtime only flag, not meant to be persisted, set when the
    inode is created through open(2) if the flag O_EXCL is not passed to it.
    Except for the warning, there are no other consequences (like corruptions
    or metadata inconsistencies).
    
    Since it's pointless to replay a tmpfile as it would be deleted in a
    later phase of the log replay procedure (it has a link count of 0), fix
    this by not logging tmpfiles and if a tmpfile is found in a log (created
    by a kernel without this change), skip the replay of the inode.
    
    A test case for fstests follows soon.
    
    Fixes: 471d557afed1 ("Btrfs: fix loss of prealloc extents past i_size after fsync log replay")
    CC: stable@vger.kernel.org # 4.18+
    Reported-by: Martin Steigerwald <martin@lichtvoll.de>
    Link: https://lore.kernel.org/linux-btrfs/3666619.NTnn27ZJZE@merkaba/
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09cbc39c1b7f70372c108910f41e774b62e2b2fb
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Sep 28 07:18:02 2018 -0400

    btrfs: make sure we create all new block groups
    
    commit 545e3366db823dc3342ca9d7fea803f829c9062f upstream.
    
    Allocating new chunks modifies both the extent and chunk tree, which can
    trigger new chunk allocations.  So instead of doing list_for_each_safe,
    just do while (!list_empty()) so we make sure we don't exit with other
    pending bg's still on our list.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: Liu Bo <bo.liu@linux.alibaba.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 302e6eaa09d85229d52e290e6c7c4338652569af
Author: Josef Bacik <jbacik@fb.com>
Date:   Fri Sep 28 07:18:00 2018 -0400

    btrfs: reset max_extent_size on clear in a bitmap
    
    commit 553cceb49681d60975d00892877d4c871bf220f9 upstream.
    
    We need to clear the max_extent_size when we clear bits from a bitmap
    since it could have been from the range that contains the
    max_extent_size.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Liu Bo <bo.liu@linux.alibaba.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6078b6126651588fb0131fbbb95ce17e2eb9498b
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Sep 28 07:17:49 2018 -0400

    btrfs: protect space cache inode alloc with GFP_NOFS
    
    commit 84de76a2fb217dc1b6bc2965cc397d1648aa1404 upstream.
    
    If we're allocating a new space cache inode it's likely going to be
    under a transaction handle, so we need to use memalloc_nofs_save() in
    order to avoid deadlocks, and more importantly lockdep messages that
    make xfstests fail.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff9e68fd136b1f3db80d2a38cb10645d8eb7f858
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Sep 28 07:17:48 2018 -0400

    btrfs: release metadata before running delayed refs
    
    commit f45c752b65af46bf42963295c332865d95f97fff upstream.
    
    We want to release the unused reservation we have since it refills the
    delayed refs reserve, which will make everything go smoother when
    running the delayed refs if we're short on our reservation.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: Liu Bo <bo.liu@linux.alibaba.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07ddb36eb1507f40e725db3f8cebec236f86ee02
Author: Chris Mason <clm@fb.com>
Date:   Wed Jun 20 07:56:11 2018 -0700

    Btrfs: don't clean dirty pages during buffered writes
    
    commit 7703bdd8d23e6ef057af3253958a793ec6066b28 upstream.
    
    During buffered writes, we follow this basic series of steps:
    
    again:
            lock all the pages
            wait for writeback on all the pages
            Take the extent range lock
            wait for ordered extents on the whole range
            clean all the pages
    
            if (copy_from_user_in_atomic() hits a fault) {
                    drop our locks
                    goto again;
            }
    
            dirty all the pages
            release all the locks
    
    The extra waiting, cleaning and locking are there to make sure we don't
    modify pages in flight to the drive, after they've been crc'd.
    
    If some of the pages in the range were already dirty when the write
    began, and we need to goto again, we create a window where a dirty page
    has been cleaned and unlocked.  It may be reclaimed before we're able to
    lock it again, which means we'll read the old contents off the drive and
    lose any modifications that had been pending writeback.
    
    We don't actually need to clean the pages.  All of the other locking in
    place makes sure we don't start IO on the pages, so we can just leave
    them dirty for the duration of the write.
    
    Fixes: 73d59314e6ed (the original btrfs merge)
    CC: stable@vger.kernel.org # v4.4+
    Signed-off-by: Chris Mason <clm@fb.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0efba7a66329dbadc17c059d14eea25a345d8e02
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Wed Sep 12 10:45:45 2018 -0400

    btrfs: wait on caching when putting the bg cache
    
    commit 3aa7c7a31c26321696b92841d5103461c6f3f517 upstream.
    
    While testing my backport I noticed there was a panic if I ran
    generic/416 generic/417 generic/418 all in a row.  This just happened to
    uncover a race where we had outstanding IO after we destroy all of our
    workqueues, and then we'd go to queue the endio work on those free'd
    workqueues.
    
    This is because we aren't waiting for the caching threads to be done
    before freeing everything up, so to fix this make sure we wait on any
    outstanding caching that's being done before we free up the block group,
    so we're sure to be done with all IO by the time we get to
    btrfs_stop_all_workers().  This fixes the panic I was seeing
    consistently in testing.
    
    ------------[ cut here ]------------
    kernel BUG at fs/btrfs/volumes.c:6112!
    SMP PTI
    Modules linked in:
    CPU: 1 PID: 27165 Comm: kworker/u4:7 Not tainted 4.16.0-02155-g3553e54a578d-dirty #875
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04/01/2014
    Workqueue: btrfs-cache btrfs_cache_helper
    RIP: 0010:btrfs_map_bio+0x346/0x370
    RSP: 0000:ffffc900061e79d0 EFLAGS: 00010202
    RAX: 0000000000000000 RBX: ffff880071542e00 RCX: 0000000000533000
    RDX: ffff88006bb74380 RSI: 0000000000000008 RDI: ffff880078160000
    RBP: 0000000000000001 R08: ffff8800781cd200 R09: 0000000000503000
    R10: ffff88006cd21200 R11: 0000000000000000 R12: 0000000000000000
    R13: 0000000000000000 R14: ffff8800781cd200 R15: ffff880071542e00
    FS:  0000000000000000(0000) GS:ffff88007fd00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000000817ffc4 CR3: 0000000078314000 CR4: 00000000000006e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     btree_submit_bio_hook+0x8a/0xd0
     submit_one_bio+0x5d/0x80
     read_extent_buffer_pages+0x18a/0x320
     btree_read_extent_buffer_pages+0xbc/0x200
     ? alloc_extent_buffer+0x359/0x3e0
     read_tree_block+0x3d/0x60
     read_block_for_search.isra.30+0x1a5/0x360
     btrfs_search_slot+0x41b/0xa10
     btrfs_next_old_leaf+0x212/0x470
     caching_thread+0x323/0x490
     normal_work_helper+0xc5/0x310
     process_one_work+0x141/0x340
     worker_thread+0x44/0x3c0
     kthread+0xf8/0x130
     ? process_one_work+0x340/0x340
     ? kthread_bind+0x10/0x10
     ret_from_fork+0x35/0x40
    RIP: btrfs_map_bio+0x346/0x370 RSP: ffffc900061e79d0
    ---[ end trace 827eb13e50846033 ]---
    Kernel panic - not syncing: Fatal exception
    Kernel Offset: disabled
    ---[ end Kernel panic - not syncing: Fatal exception
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 112249f4f379e58f78a52ea46e2c1a7f5df830e4
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Thu Sep 6 17:18:16 2018 -0400

    btrfs: keep trim from interfering with transaction commits
    
    commit fee7acc361314df6561208c2d3c0882d663dd537 upstream.
    
    Commit 499f377f49f08 (btrfs: iterate over unused chunk space in FITRIM)
    fixed free space trimming, but introduced latency when it was running.
    This is due to it pinning the transaction using both a incremented
    refcount and holding the commit root sem for the duration of a single
    trim operation.
    
    This was to ensure safety but it's unnecessary.  We already hold the the
    chunk mutex so we know that the chunk we're using can't be allocated
    while we're trimming it.
    
    In order to check against chunks allocated already in this transaction,
    we need to check the pending chunks list.  To to that safely without
    joining the transaction (or attaching than then having to commit it) we
    need to ensure that the dev root's commit root doesn't change underneath
    us and the pending chunk lists stays around until we're done with it.
    
    We can ensure the former by holding the commit root sem and the latter
    by pinning the transaction.  We do this now, but the critical section
    covers the trim operation itself and we don't need to do that.
    
    This patch moves the pinning and unpinning logic into helpers and unpins
    the transaction after performing the search and check for pending
    chunks.
    
    Limiting the critical section of the transaction pinning improves the
    latency substantially on slower storage (e.g. image files over NFS).
    
    Fixes: 499f377f49f08 ("btrfs: iterate over unused chunk space in FITRIM")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74a0609298dc0f38fa2c7484159fead5cedea6b6
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Thu Sep 6 17:18:15 2018 -0400

    btrfs: don't attempt to trim devices that don't support it
    
    commit 0be88e367fd8fbdb45257615d691f4675dda062f upstream.
    
    We check whether any device the file system is using supports discard in
    the ioctl call, but then we attempt to trim free extents on every device
    regardless of whether discard is supported.  Due to the way we mask off
    EOPNOTSUPP, we can end up issuing the trim operations on each free range
    on devices that don't support it, just wasting time.
    
    Fixes: 499f377f49f08 ("btrfs: iterate over unused chunk space in FITRIM")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 599c6e4376cbc9fcf3e2cb3ab986add45f036df6
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Thu Sep 6 17:18:14 2018 -0400

    btrfs: iterate all devices during trim, instead of fs_devices::alloc_list
    
    commit d4e329de5e5e21594df2e0dd59da9acee71f133b upstream.
    
    btrfs_trim_fs iterates over the fs_devices->alloc_list while holding the
    device_list_mutex.  The problem is that ->alloc_list is protected by the
    chunk mutex.  We don't want to hold the chunk mutex over the trim of the
    entire file system.  Fortunately, the ->dev_list list is protected by
    the dev_list mutex and while it will give us all devices, including
    read-only devices, we already just skip the read-only devices.  Then we
    can continue to take and release the chunk mutex while scanning each
    device.
    
    Fixes: 499f377f49f ("btrfs: iterate over unused chunk space in FITRIM")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d12a47554ea9d71cd7de7573d355ec13ac1e62d0
Author: Qu Wenruo <wqu@suse.com>
Date:   Fri Sep 7 14:16:24 2018 +0800

    btrfs: Ensure btrfs_trim_fs can trim the whole filesystem
    
    commit 6ba9fc8e628becf0e3ec94083450d089b0dec5f5 upstream.
    
    [BUG]
    fstrim on some btrfs only trims the unallocated space, not trimming any
    space in existing block groups.
    
    [CAUSE]
    Before fstrim_range passed to btrfs_trim_fs(), it gets truncated to
    range [0, super->total_bytes).  So later btrfs_trim_fs() will only be
    able to trim block groups in range [0, super->total_bytes).
    
    While for btrfs, any bytenr aligned to sectorsize is valid, since btrfs
    uses its logical address space, there is nothing limiting the location
    where we put block groups.
    
    For filesystem with frequent balance, it's quite easy to relocate all
    block groups and bytenr of block groups will start beyond
    super->total_bytes.
    
    In that case, btrfs will not trim existing block groups.
    
    [FIX]
    Just remove the truncation in btrfs_ioctl_fitrim(), so btrfs_trim_fs()
    can get the unmodified range, which is normally set to [0, U64_MAX].
    
    Reported-by: Chris Murphy <lists@colorremedies.com>
    Fixes: f4c697e6406d ("btrfs: return EINVAL if start > total_bytes in fitrim ioctl")
    CC: <stable@vger.kernel.org> # v4.4+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89dbabf7e2c36298724d5026b0a3d7dcb035a7ed
Author: Qu Wenruo <wqu@suse.com>
Date:   Fri Sep 7 14:16:23 2018 +0800

    btrfs: Enhance btrfs_trim_fs function to handle error better
    
    commit 93bba24d4b5ad1e5cd8b43f64e66ff9d6355dd20 upstream.
    
    Function btrfs_trim_fs() doesn't handle errors in a consistent way. If
    error happens when trimming existing block groups, it will skip the
    remaining blocks and continue to trim unallocated space for each device.
    
    The return value will only reflect the final error from device trimming.
    
    This patch will fix such behavior by:
    
    1) Recording the last error from block group or device trimming
       The return value will also reflect the last error during trimming.
       Make developer more aware of the problem.
    
    2) Continuing trimming if possible
       If we failed to trim one block group or device, we could still try
       the next block group or device.
    
    3) Report number of failures during block group and device trimming
       It would be less noisy, but still gives user a brief summary of
       what's going wrong.
    
    Such behavior can avoid confusion for cases like failure to trim the
    first block group and then only unallocated space is trimmed.
    
    Reported-by: Chris Murphy <lists@colorremedies.com>
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ add bg_ret and dev_ret to the messages ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 449f9b8dcf15d02d64ccb111ed5191ae0d6f198d
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Thu Sep 6 15:52:17 2018 -0400

    btrfs: fix error handling in btrfs_dev_replace_start
    
    commit 5c06147128fbbdf7a84232c5f0d808f53153defe upstream.
    
    When we fail to start a transaction in btrfs_dev_replace_start, we leave
    dev_replace->replace_start set to STARTED but clear ->srcdev and
    ->tgtdev.  Later, that can result in an Oops in
    btrfs_dev_replace_progress when having state set to STARTED or SUSPENDED
    implies that ->srcdev is valid.
    
    Also fix error handling when the state is already STARTED or SUSPENDED
    while starting.  That, too, will clear ->srcdev and ->tgtdev even though
    it doesn't own them.  This should be an impossible case to hit since we
    should be protected by the BTRFS_FS_EXCL_OP bit being set.  Let's add an
    ASSERT there while we're at it.
    
    Fixes: e93c89c1aaaaa (Btrfs: add new sources for device replace code)
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7e2afa8f83c833bdd5c4467f1d9b02ffa0410f3
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Thu Sep 6 16:59:33 2018 -0400

    btrfs: fix error handling in free_log_tree
    
    commit 374b0e2d6ba5da7fd1cadb3247731ff27d011f6f upstream.
    
    When we hit an I/O error in free_log_tree->walk_log_tree during file system
    shutdown we can crash due to there not being a valid transaction handle.
    
    Use btrfs_handle_fs_error when there's no transaction handle to use.
    
      BUG: unable to handle kernel NULL pointer dereference at 0000000000000060
      IP: free_log_tree+0xd2/0x140 [btrfs]
      PGD 0 P4D 0
      Oops: 0000 [#1] SMP DEBUG_PAGEALLOC PTI
      Modules linked in: <modules>
      CPU: 2 PID: 23544 Comm: umount Tainted: G        W        4.12.14-kvmsmall #9 SLE15 (unreleased)
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014
      task: ffff96bfd3478880 task.stack: ffffa7cf40d78000
      RIP: 0010:free_log_tree+0xd2/0x140 [btrfs]
      RSP: 0018:ffffa7cf40d7bd10 EFLAGS: 00010282
      RAX: 00000000fffffffb RBX: 00000000fffffffb RCX: 0000000000000002
      RDX: 0000000000000000 RSI: ffff96c02f07d4c8 RDI: 0000000000000282
      RBP: ffff96c013cf1000 R08: ffff96c02f07d4c8 R09: ffff96c02f07d4d0
      R10: 0000000000000000 R11: 0000000000000002 R12: 0000000000000000
      R13: ffff96c005e800c0 R14: ffffa7cf40d7bdb8 R15: 0000000000000000
      FS:  00007f17856bcfc0(0000) GS:ffff96c03f600000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000000000000060 CR3: 0000000045ed6002 CR4: 00000000003606e0
      DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
      DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
      Call Trace:
       ? wait_for_writer+0xb0/0xb0 [btrfs]
       btrfs_free_log+0x17/0x30 [btrfs]
       btrfs_drop_and_free_fs_root+0x9a/0xe0 [btrfs]
       btrfs_free_fs_roots+0xc0/0x130 [btrfs]
       ? wait_for_completion+0xf2/0x100
       close_ctree+0xea/0x2e0 [btrfs]
       ? kthread_stop+0x161/0x260
       generic_shutdown_super+0x6c/0x120
       kill_anon_super+0xe/0x20
       btrfs_kill_super+0x13/0x100 [btrfs]
       deactivate_locked_super+0x3f/0x70
       cleanup_mnt+0x3b/0x70
       task_work_run+0x78/0x90
       exit_to_usermode_loop+0x77/0xa6
       do_syscall_64+0x1c5/0x1e0
       entry_SYSCALL_64_after_hwframe+0x42/0xb7
      RIP: 0033:0x7f1784f90827
      RSP: 002b:00007ffdeeb03118 EFLAGS: 00000246 ORIG_RAX: 00000000000000a6
      RAX: 0000000000000000 RBX: 0000556a60c62970 RCX: 00007f1784f90827
      RDX: 0000000000000001 RSI: 0000000000000000 RDI: 0000556a60c62b50
      RBP: 0000000000000000 R08: 0000000000000005 R09: 00000000ffffffff
      R10: 0000556a60c63900 R11: 0000000000000246 R12: 0000556a60c62b50
      R13: 00007f17854a81c4 R14: 0000000000000000 R15: 0000000000000000
      RIP: free_log_tree+0xd2/0x140 [btrfs] RSP: ffffa7cf40d7bd10
      CR2: 0000000000000060
    
    Fixes: 681ae50917df9 ("Btrfs: cleanup reserved space when freeing tree log on error")
    CC: <stable@vger.kernel.org> # v3.13
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fc2295c6ce8bbab9e6ffe633dd06fef0d63f64f
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Aug 21 09:53:47 2018 +0800

    btrfs: locking: Add extra check in btrfs_init_new_buffer() to avoid deadlock
    
    commit b72c3aba09a53fc7c1824250d71180ca154517a7 upstream.
    
    [BUG]
    For certain crafted image, whose csum root leaf has missing backref, if
    we try to trigger write with data csum, it could cause deadlock with the
    following kernel WARN_ON():
    
      WARNING: CPU: 1 PID: 41 at fs/btrfs/locking.c:230 btrfs_tree_lock+0x3e2/0x400
      CPU: 1 PID: 41 Comm: kworker/u4:1 Not tainted 4.18.0-rc1+ #8
      Workqueue: btrfs-endio-write btrfs_endio_write_helper
      RIP: 0010:btrfs_tree_lock+0x3e2/0x400
      Call Trace:
       btrfs_alloc_tree_block+0x39f/0x770
       __btrfs_cow_block+0x285/0x9e0
       btrfs_cow_block+0x191/0x2e0
       btrfs_search_slot+0x492/0x1160
       btrfs_lookup_csum+0xec/0x280
       btrfs_csum_file_blocks+0x2be/0xa60
       add_pending_csums+0xaf/0xf0
       btrfs_finish_ordered_io+0x74b/0xc90
       finish_ordered_fn+0x15/0x20
       normal_work_helper+0xf6/0x500
       btrfs_endio_write_helper+0x12/0x20
       process_one_work+0x302/0x770
       worker_thread+0x81/0x6d0
       kthread+0x180/0x1d0
       ret_from_fork+0x35/0x40
    
    [CAUSE]
    That crafted image has missing backref for csum tree root leaf.  And
    when we try to allocate new tree block, since there is no
    EXTENT/METADATA_ITEM for csum tree root, btrfs consider it's free slot
    and use it.
    
    The extent tree of the image looks like:
    
      Normal image                      |       This fuzzed image
      ----------------------------------+--------------------------------
      BG 29360128                       | BG 29360128
       One empty slot                   |  One empty slot
      29364224: backref to UUID tree    | 29364224: backref to UUID tree
       Two empty slots                  |  Two empty slots
      29376512: backref to CSUM tree    |  One empty slot (bad type) <<<
      29380608: backref to D_RELOC tree | 29380608: backref to D_RELOC tree
      ...                               | ...
    
    Since bytenr 29376512 has no METADATA/EXTENT_ITEM, when btrfs try to
    alloc tree block, it's an valid slot for btrfs.
    
    And for finish_ordered_write, when we need to insert csum, we try to CoW
    csum tree root.
    
    By accident, empty slots at bytenr BG_OFFSET, BG_OFFSET + 8K,
    BG_OFFSET + 12K is already used by tree block COW for other trees, the
    next empty slot is BG_OFFSET + 16K, which should be the backref for CSUM
    tree.
    
    But due to the bad type, btrfs can recognize it and still consider it as
    an empty slot, and will try to use it for csum tree CoW.
    
    Then in the following call trace, we will try to lock the new tree
    block, which turns out to be the old csum tree root which is already
    locked:
    
    btrfs_search_slot() called on csum tree root, which is at 29376512
    |- btrfs_cow_block()
       |- btrfs_set_lock_block()
       |  |- Now locks tree block 29376512 (old csum tree root)
       |- __btrfs_cow_block()
          |- btrfs_alloc_tree_block()
             |- btrfs_reserve_extent()
                | Now it returns tree block 29376512, which extent tree
                | shows its empty slot, but it's already hold by csum tree
                |- btrfs_init_new_buffer()
                   |- btrfs_tree_lock()
                      | Triggers WARN_ON(eb->lock_owner == current->pid)
                      |- wait_event()
                         Wait lock owner to release the lock, but it's
                         locked by ourself, so it will deadlock
    
    [FIX]
    This patch will do the lock_owner and current->pid check at
    btrfs_init_new_buffer().
    So above deadlock can be avoided.
    
    Since such problem can only happen in crafted image, we will still
    trigger kernel warning for later aborted transaction, but with a little
    more meaningful warning message.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=200405
    Reported-by: Xu Wen <wen.xu@gatech.edu>
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0d7061e2905dd43bced59e990a7b174b0984fcd
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Aug 21 09:42:03 2018 +0800

    btrfs: Handle owner mismatch gracefully when walking up tree
    
    commit 65c6e82becec33731f48786e5a30f98662c86b16 upstream.
    
    [BUG]
    When mounting certain crafted image, btrfs will trigger kernel BUG_ON()
    when trying to recover balance:
    
      kernel BUG at fs/btrfs/extent-tree.c:8956!
      invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
      CPU: 1 PID: 662 Comm: mount Not tainted 4.18.0-rc1-custom+ #10
      RIP: 0010:walk_up_proc+0x336/0x480 [btrfs]
      RSP: 0018:ffffb53540c9b890 EFLAGS: 00010202
      Call Trace:
       walk_up_tree+0x172/0x1f0 [btrfs]
       btrfs_drop_snapshot+0x3a4/0x830 [btrfs]
       merge_reloc_roots+0xe1/0x1d0 [btrfs]
       btrfs_recover_relocation+0x3ea/0x420 [btrfs]
       open_ctree+0x1af3/0x1dd0 [btrfs]
       btrfs_mount_root+0x66b/0x740 [btrfs]
       mount_fs+0x3b/0x16a
       vfs_kern_mount.part.9+0x54/0x140
       btrfs_mount+0x16d/0x890 [btrfs]
       mount_fs+0x3b/0x16a
       vfs_kern_mount.part.9+0x54/0x140
       do_mount+0x1fd/0xda0
       ksys_mount+0xba/0xd0
       __x64_sys_mount+0x21/0x30
       do_syscall_64+0x60/0x210
       entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    [CAUSE]
    Extent tree corruption.  In this particular case, reloc tree root's
    owner is DATA_RELOC_TREE (should be TREE_RELOC), thus its backref is
    corrupted and we failed the owner check in walk_up_tree().
    
    [FIX]
    It's pretty hard to take care of every extent tree corruption, but at
    least we can remove such BUG_ON() and exit more gracefully.
    
    And since in this particular image, DATA_RELOC_TREE and TREE_RELOC share
    the same root (which is obviously invalid), we needs to make
    __del_reloc_root() more robust to detect such invalid sharing to avoid
    possible NULL dereference as root->node can be NULL in this case.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=200411
    Reported-by: Xu Wen <wen.xu@gatech.edu>
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68b0e1cae6f38f147fd43cd90bcf20c260168c29
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Oct 9 14:36:45 2018 +0800

    btrfs: qgroup: Avoid calling qgroup functions if qgroup is not enabled
    
    commit 3628b4ca64f24a4ec55055597d0cb1c814729f8b upstream.
    
    Some qgroup trace events like btrfs_qgroup_release_data() and
    btrfs_qgroup_free_delayed_ref() can still be triggered even if qgroup is
    not enabled.
    
    This is caused by the lack of qgroup status check before calling some
    qgroup functions.  Thankfully the functions can handle quota disabled
    case well and just do nothing for qgroup disabled case.
    
    This patch will do earlier check before triggering related trace events.
    
    And for enabled <-> disabled race case:
    
    1) For enabled->disabled case
       Disable will wipe out all qgroups data including reservation and
       excl/rfer. Even if we leak some reservation or numbers, it will
       still be cleared, so nothing will go wrong.
    
    2) For disabled -> enabled case
       Current btrfs_qgroup_release_data() will use extent_io tree to ensure
       we won't underflow reservation. And for delayed_ref we use
       head->qgroup_reserved to record the reserved space, so in that case
       head->qgroup_reserved should be 0 and we won't underflow.
    
    CC: stable@vger.kernel.org # 4.14+
    Reported-by: Chris Murphy <lists@colorremedies.com>
    Link: https://lore.kernel.org/linux-btrfs/CAJCQCtQau7DtuUUeycCkZ36qjbKuxNzsgqJ7+sJ6W0dK_NLE3w@mail.gmail.com/
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3734cce8cf6c59ba60c1a501fbcf020c33063ebf
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Mon Oct 22 00:08:20 2018 +0900

    tracing: Return -ENOENT if there is no target synthetic event
    
    commit 18858511fd8a877303cc34c06efa461b26a0e070 upstream.
    
    Return -ENOENT error if there is no target synthetic event.
    This notices an operation failure to user as below;
    
      # echo 'wakeup_latency u64 lat; pid_t pid;' > synthetic_events
      # echo '!wakeup' >> synthetic_events
      sh: write error: No such file or directory
    
    Link: http://lkml.kernel.org/r/154013449986.25576.9487131386597290172.stgit@devbox
    
    Acked-by: Tom Zanussi <zanussi@linux.intel.com>
    Tested-by: Tom Zanussi <zanussi@linux.intel.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Rajvi Jingar <rajvi.jingar@intel.com>
    Cc: stable@vger.kernel.org
    Fixes: 4b147936fa50 ('tracing: Add support for 'synthetic' events')
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d3714bb7abe85fd7d72854c2043997b47be580a
Author: Breno Leitao <leitao@debian.org>
Date:   Mon Oct 22 18:16:26 2018 -0300

    selftests/powerpc: Fix ptrace tm failure
    
    commit 48dc0ef19044bfb69193302fbe3a834e3331b7ae upstream.
    
    Test ptrace-tm-spd-gpr fails on current kernel (4.19) due to a segmentation
    fault that happens on the child process prior to setting cptr[2] = 1. This
    causes the parent process to wait forever at 'while (!pptr[2])' and the test to
    be killed by the test harness framework by timeout, thus, failing.
    
    The segmentation fault happens because of a inline assembly being
    generated as:
    
            0x10000355c <tm_spd_gpr+492>    lfs    f0, 0(0)
    
    This is reading memory position 0x0 and causing the segmentation fault.
    
    This code is being generated by ASM_LOAD_FPR_SINGLE_PRECISION(flt_4), where
    flt_4 is passed to the inline assembly block as:
    
            [flt_4] "r" (&d)
    
    Since the inline assembly 'r' constraint means any GPR, gpr0 is being
    chosen, thus causing this issue when issuing a Load Floating-Point Single
    instruction.
    
    This patch simply changes the constraint to 'b', which specify that this
    register will be used as base, and r0 is not allowed to be used, avoiding
    this issue.
    
    Other than that, removing flt_2 register from the input operands, since it
    is not used by the inline assembly code at all.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Breno Leitao <leitao@debian.org>
    Acked-by: Segher Boessenkool <segher@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bd6237fc951fa96267d20192349d9b8e8239245
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Mon Oct 22 00:08:48 2018 +0900

    selftests/ftrace: Fix synthetic event test to delete event correctly
    
    commit 0d0352d8b3d6d7ca9a710b40e194cbbaeb841c88 upstream.
    
    Fix the synthetic event test case to remove event correctly.
    If redirecting command to synthetic_event file without append
    mode, it cleans up all existing events and execute (parse) the
    command. This means "delete event" always fails to find the
    target event.
    
    Since previous synthetic event has a bug which doesn't return
    -ENOENT even if it fails to find the deleting event, this test
    passed. But fixing that bug, this test fails because this test
    itself has a bug.
    
    This fixes that bug by trying to delete event right after
    adding an event, and use append mode redirection ('>>') instead
    of normal redirection ('>').
    
    Link: http://lkml.kernel.org/r/154013452832.25576.2305459545429386517.stgit@devbox
    
    Acked-by: Shuah Khan <shuah@kernel.org>
    Acked-by: Tom Zanussi <zanussi@linux.intel.com>
    Tested-by: Tom Zanussi <zanussi@linux.intel.com>
    Cc: Tom Zanussi <zanussi@kernel.org>
    Cc: Tom Zanussi <tom.zanussi@linux.intel.com>
    Cc: Rajvi Jingar <rajvi.jingar@intel.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: stable@vger.kernel.org
    Fixes: f06eec4d0f2c ('selftests: ftrace: Add inter-event hist triggers testcases')
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efd03258cc5c690ae7a6be7cd48a2f3edf2122eb
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Nov 15 10:44:58 2017 +0100

    soc/tegra: pmc: Fix child-node lookup
    
    commit 1dc6bd5e39a29453bdcc17348dd2a89f1aa4004e upstream.
    
    Fix child-node lookup during probe, which ended up searching the whole
    device tree depth-first starting at the parent rather than just matching
    on its children.
    
    To make things worse, the parent pmc node could end up being prematurely
    freed as of_find_node_by_name() drops a reference to its first argument.
    
    Fixes: 3568df3d31d6 ("soc: tegra: Add thermal reset (thermtrip) support to PMC")
    Cc: stable <stable@vger.kernel.org>     # 4.0
    Cc: Mikko Perttunen <mperttunen@nvidia.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Mikko Perttunen <mperttunen@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4d1e7a2b1c876a16d9bbeeaee98eb2a17b2007a
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Mon Aug 27 22:05:48 2018 -0700

    soc: qcom: rmtfs-mem: Validate that scm is available
    
    commit 137dc5843faeacabf48fc22a8dc58c4e0b4f0927 upstream.
    
    The scm device must be present in order for the rmtfs driver to
    configure memory permissions for the rmtfs memory region, so check that
    it is probed before continuing.
    
    Cc: stable@vger.kernel.org
    Fixes: fa65f8045137 ("soc: qcom: rmtfs-mem: Add support for assigning memory to remote")
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bfdd88d22a151a7c32b1e759666fd97a03a90d9
Author: Thor Thayer <thor.thayer@linux.intel.com>
Date:   Tue Sep 25 10:31:52 2018 -0500

    arm64: dts: stratix10: Correct System Manager register size
    
    commit 74121b9aa3cd571ddfff014a9f47db36cae3cda9 upstream.
    
    Correct the register size of the System Manager node.
    
    Cc: stable@vger.kernel.org
    Fixes: 78cd6a9d8e154 ("arm64: dts: Add base stratix 10 dtsi")
    Signed-off-by: Thor Thayer <thor.thayer@linux.intel.com>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09242a77726c5e0e84cb09c8a3b5476e9b80d613
Author: Thor Thayer <thor.thayer@linux.intel.com>
Date:   Tue Sep 25 10:21:10 2018 -0500

    ARM: dts: socfpga: Fix SDRAM node address for Arria10
    
    commit ce3bf934f919a7d675c5b7fa4cc233ded9c6256e upstream.
    
    The address in the SDRAM node was incorrect. Fix this to agree with the
    correct address and to match the reg definition block.
    
    Cc: stable@vger.kernel.org
    Fixes: 54b4a8f57848b("arm: socfpga: dts: Add Arria10 SDRAM EDAC DTS support")
    Signed-off-by: Thor Thayer <thor.thayer@linux.intel.com>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29b85eacc07ade392d2a50c4e728f09cf677e70a
Author: Nicolas Pitre <nico@fluxnic.net>
Date:   Tue Oct 30 13:26:15 2018 -0400

    Cramfs: fix abad comparison when wrap-arounds occur
    
    commit 672ca9dd13f1aca0c17516f76fc5b0e8344b3e46 upstream.
    
    It is possible for corrupted filesystem images to produce very large
    block offsets that may wrap when a length is added, and wrongly pass
    the buffer size test.
    
    Reported-by: Anatoly Trosinenko <anatoly.trosinenko@gmail.com>
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb3de273d7a34451dfc9d5042703fe3c6679b568
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Sep 27 22:36:27 2018 +0100

    rpmsg: smd: fix memory leak on channel create
    
    commit 940c620d6af8fca7d115de40f19870fba415efac upstream.
    
    Currently a failed allocation of channel->name leads to an
    immediate return without freeing channel. Fix this by setting
    ret to -ENOMEM and jumping to an exit path that kfree's channel.
    
    Detected by CoverityScan, CID#1473692 ("Resource Leak")
    
    Fixes: 53e2822e56c7 ("rpmsg: Introduce Qualcomm SMD backend")
    Cc: stable@vger.kernel.org
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd376dc39890fbbfa4967953f947d6ec1caba795
Author: Tri Vo <trong@android.com>
Date:   Wed Sep 19 12:27:50 2018 -0700

    arm64: lse: remove -fcall-used-x0 flag
    
    commit 2a6c7c367de82951c98a290a21156770f6f82c84 upstream.
    
    x0 is not callee-saved in the PCS. So there is no need to specify
    -fcall-used-x0.
    
    Clang doesn't currently support -fcall-used flags. This patch will help
    building the kernel with clang.
    
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Tri Vo <trong@android.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 391d6f13307e4026f518051f611e5fd50478b26d
Author: Hans Verkuil <hansverk@cisco.com>
Date:   Thu Sep 13 07:47:29 2018 -0400

    media: hdmi.h: rename ADOBE_RGB to OPRGB and ADOBE_YCC to OPYCC
    
    commit 463659a08d7999d5461fa45b35b17686189a70ca upstream.
    
    These names have been renamed in the CTA-861 standard due to trademark
    issues. Replace them here as well so they are in sync with the standard.
    
    Signed-off-by: Hans Verkuil <hansverk@cisco.com>
    Cc: stable@vger.kernel.org
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11e879dd4a6d7c50ae80790cade70c4c2a1a4f11
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Fri Sep 14 04:58:03 2018 -0400

    media: replace ADOBERGB by OPRGB
    
    commit db0340182444612bcadb98bdec22f651aa42266c upstream.
    
    The CTA-861 standards have been updated to refer to opRGB instead
    of AdobeRGB. The official standard is in fact named opRGB, so
    switch to that.
    
    The two old defines referring to ADOBERGB in the public API are
    put under #ifndef __KERNEL__ and a comment mentions that they are
    deprecated.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: stable@vger.kernel.org
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aff52a2f431b92dc1febd15a5b84d014444281ec
Author: Hans Verkuil <hansverk@cisco.com>
Date:   Thu Sep 13 07:47:28 2018 -0400

    media: media colorspaces*.rst: rename AdobeRGB to opRGB
    
    commit a58c37978cf02f6d35d05ee4e9288cb8455f1401 upstream.
    
    Drop all Adobe references and use the official opRGB standard
    instead.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: stable@vger.kernel.org
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b33dfe74c2a95de32b840e3a88e22004cbed9ab
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:46 2018 +0200

    drm/mediatek: fix OF sibling-node lookup
    
    commit ceff2f4dcd44abf35864d9a99f85ac619e89a01d upstream.
    
    Use the new of_get_compatible_child() helper to lookup the sibling
    instead of using of_find_compatible_node(), which searches the entire
    tree from a given start node and thus can return an unrelated (i.e.
    non-sibling) node.
    
    This also addresses a potential use-after-free (e.g. after probe
    deferral) as the tree-wide helper drops a reference to its first
    argument (i.e. the parent device node).
    
    While at it, also fix the related cec-node reference leak.
    
    Fixes: 8f83f26891e1 ("drm/mediatek: Add HDMI support")
    Cc: stable <stable@vger.kernel.org>     # 4.8
    Cc: Junzhi Zhao <junzhi.zhao@mediatek.com>
    Cc: Philipp Zabel <p.zabel@pengutronix.de>
    Cc: CK Hu <ck.hu@mediatek.com>
    Cc: David Airlie <airlied@linux.ie>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 795449cb0c51b4d9c57ada3120a2421dc6e301de
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Thu Oct 4 03:58:34 2018 -0400

    media: adv7842: when the EDID is cleared, unconfigure CEC as well
    
    commit ab83203e181015b099720aff43ffabc1812e0fb3 upstream.
    
    When there is no EDID the CEC adapter should be unconfigured as
    well. So call cec_phys_addr_invalidate() when this happens.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: <stable@vger.kernel.org>      # for v4.18 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit feb3a39a17abb7ca51fa509d530f510ef8f840e3
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Thu Oct 4 03:57:06 2018 -0400

    media: adv7604: when the EDID is cleared, unconfigure CEC as well
    
    commit e7da89926f6dc6cf855f5ffdf79ef99a1b115ca7 upstream.
    
    When there is no EDID the CEC adapter should be unconfigured as
    well. So call cec_phys_addr_invalidate() when this happens.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: <stable@vger.kernel.org>      # for v4.18 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5df5d951c10716cea03c0aa2c8301d890788fa50
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Fri Sep 14 13:13:15 2018 -0400

    media: em28xx: fix handler for vidioc_s_input()
    
    commit 258c430456ba5f0005043762e14fc3be35983aaf upstream.
    
    The a->index is not the name of the internal amux entry,
    but, instead a value from zero to the maximum number
    of audio inputs.
    
    As the actual available inputs depend on each board, build
    it dynamically.
    
    This is broken for a really long time. On a quick check,
    since at least commit 195a4ef627e1 ("V4L/DVB (6585): Convert
    em28xx to video_ioctl2") this was not implemented right.
    
    Fixes: 195a4ef627e1 ("V4L/DVB (6585): Convert em28xx to video_ioctl2")
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 634eb3c8780abf19ccf6a76d41a610b4a1305a3c
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Thu Sep 13 22:46:29 2018 -0400

    media: em28xx: make v4l2-compliance happier by starting sequence on zero
    
    commit afeaade90db4c5dab93f326d9582be1d5954a198 upstream.
    
    The v4l2-compliance tool complains if a video doesn't start
    with a zero sequence number.
    
    While this shouldn't cause any real problem for apps, let's
    make it happier, in order to better check the v4l2-compliance
    differences before and after patchsets.
    
    This is actually an old issue. It is there since at least its
    videobuf2 conversion, e. g. changeset 3829fadc461 ("[media]
    em28xx: convert to videobuf2"), if VB1 wouldn't suffer from
    the same issue.
    
    Cc: stable@vger.kernel.org
    Fixes: d3829fadc461 ("[media] em28xx: convert to videobuf2")
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be91657a304c95ee6dc6b35a898d9714cae2395a
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Fri Sep 14 00:20:21 2018 -0400

    media: em28xx: fix input name for Terratec AV 350
    
    commit 15644bfa195bd166d0a5ed76ae2d587f719c3dac upstream.
    
    Instead of using a register value, use an AMUX name, as otherwise
    VIDIOC_G_AUDIO would fail.
    
    Cc: stable@vger.kernel.org
    Fixes: 766ed64de554 ("V4L/DVB (11827): Add support for Terratec Grabster AV350")
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95dfd1d5aad413836d40fe504c5906813c063218
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Thu Sep 13 16:49:51 2018 -0400

    media: tvp5150: avoid going past array on v4l2_querymenu()
    
    commit 5c4c4505b716cb782ad7263091edc466c4d1fbd4 upstream.
    
    The parameters of v4l2_ctrl_new_std_menu_items() are tricky: instead of
    the number of possible values, it requires the number of the maximum
    value. In other words, the ARRAY_SIZE() value should be decremented,
    otherwise it will go past the array bounds, as warned by KASAN:
    
    [  279.839688] BUG: KASAN: global-out-of-bounds in v4l2_querymenu+0x10d/0x180 [videodev]
    [  279.839709] Read of size 8 at addr ffffffffc10a4cb0 by task v4l2-compliance/16676
    
    [  279.839736] CPU: 1 PID: 16676 Comm: v4l2-compliance Not tainted 4.18.0-rc2+ #120
    [  279.839741] Hardware name:  /NUC5i7RYB, BIOS RYBDWi35.86A.0364.2017.0511.0949 05/11/2017
    [  279.839743] Call Trace:
    [  279.839758]  dump_stack+0x71/0xab
    [  279.839807]  ? v4l2_querymenu+0x10d/0x180 [videodev]
    [  279.839817]  print_address_description+0x1c9/0x270
    [  279.839863]  ? v4l2_querymenu+0x10d/0x180 [videodev]
    [  279.839871]  kasan_report+0x237/0x360
    [  279.839918]  v4l2_querymenu+0x10d/0x180 [videodev]
    [  279.839964]  __video_do_ioctl+0x2c8/0x590 [videodev]
    [  279.840011]  ? copy_overflow+0x20/0x20 [videodev]
    [  279.840020]  ? avc_ss_reset+0xa0/0xa0
    [  279.840028]  ? check_stack_object+0x21/0x60
    [  279.840036]  ? __check_object_size+0xe7/0x240
    [  279.840080]  video_usercopy+0xed/0x730 [videodev]
    [  279.840123]  ? copy_overflow+0x20/0x20 [videodev]
    [  279.840167]  ? v4l_enumstd+0x40/0x40 [videodev]
    [  279.840177]  ? __handle_mm_fault+0x9f9/0x1ba0
    [  279.840186]  ? __pmd_alloc+0x2c0/0x2c0
    [  279.840193]  ? __vfs_write+0xb6/0x350
    [  279.840200]  ? kernel_read+0xa0/0xa0
    [  279.840244]  ? video_usercopy+0x730/0x730 [videodev]
    [  279.840284]  v4l2_ioctl+0xa1/0xb0 [videodev]
    [  279.840295]  do_vfs_ioctl+0x117/0x8a0
    [  279.840303]  ? selinux_file_ioctl+0x211/0x2f0
    [  279.840313]  ? ioctl_preallocate+0x120/0x120
    [  279.840319]  ? selinux_capable+0x20/0x20
    [  279.840332]  ksys_ioctl+0x70/0x80
    [  279.840342]  __x64_sys_ioctl+0x3d/0x50
    [  279.840351]  do_syscall_64+0x6d/0x1c0
    [  279.840361]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  279.840367] RIP: 0033:0x7fdfb46275d7
    [  279.840369] Code: b3 66 90 48 8b 05 b1 48 2d 00 64 c7 00 26 00 00 00 48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 81 48 2d 00 f7 d8 64 89 01 48
    [  279.840474] RSP: 002b:00007ffee1179038 EFLAGS: 00000202 ORIG_RAX: 0000000000000010
    [  279.840483] RAX: ffffffffffffffda RBX: 00007ffee1179180 RCX: 00007fdfb46275d7
    [  279.840488] RDX: 00007ffee11790c0 RSI: 00000000c02c5625 RDI: 0000000000000003
    [  279.840493] RBP: 0000000000000002 R08: 0000000000000020 R09: 00000000009f0902
    [  279.840497] R10: 0000000000000000 R11: 0000000000000202 R12: 00007ffee117a5a0
    [  279.840501] R13: 00007ffee11790c0 R14: 0000000000000002 R15: 0000000000000000
    
    [  279.840515] The buggy address belongs to the variable:
    [  279.840535]  tvp5150_test_patterns+0x10/0xffffffffffffe360 [tvp5150]
    
    Fixes: c43875f66140 ("[media] tvp5150: replace MEDIA_ENT_F_CONN_TEST by a control")
    Cc: stable@vger.kernel.org
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ac7a4b394ad3f41bfa6cd36bd4e4389085db749
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Thu Sep 13 23:22:40 2018 -0400

    media: em28xx: use a default format if TRY_FMT fails
    
    commit f823ce2a1202d47110a7ef86b65839f0be8adc38 upstream.
    
    Follow the V4L2 spec, as warned by v4l2-compliance:
    
            warn: v4l2-test-formats.cpp(732): TRY_FMT cannot handle an invalid pixelformat.
            warn: v4l2-test-formats.cpp(733): This may or may not be a problem. For more information see:
    
    warn: v4l2-test-formats.cpp(734): http://www.mail-archive.com/linux-media@vger.kernel.org/msg56550.html
    
    Cc: stable@vger.kernel.org
    Fixes: bddcf63313c6 ("V4L/DVB (9927): em28xx: use a more standard way to specify video formats")
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e448dfd6d3ec944411f6575bc24e4f8baa1e297f
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Mon Oct 15 06:14:22 2018 -0400

    media: cec: forgot to cancel delayed work
    
    commit 490d84f6d73c12f4204241cff8651eed60aae914 upstream.
    
    If the wait for completion was interrupted, then make sure to cancel
    any delayed work.
    
    This can only happen if a transmit is waiting for a reply, and you press
    Ctrl-C or reboot/poweroff or something like that which interrupts the
    thread waiting for the reply and then proceeds to delete the CEC message.
    
    Since the delayed work wasn't canceled, once it would trigger it referred
    to stale data and resulted in a kernel oops.
    
    Fixes: 7ec2b3b941a6 ("cec: add new tx/rx status bits to detect aborts/timeouts")
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: <stable@vger.kernel.org>      # for v4.18 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8ee0bd5b09997ef69cb39e9b451683cf5f6badf
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Fri Oct 5 08:00:21 2018 -0400

    media: cec: fix the Signal Free Time calculation
    
    commit 7d867a1b765e2b70815fec4964d7822a976ed349 upstream.
    
    The calculation of the Signal Free Time in the framework was not
    correct. If a message was received, then the next transmit should be
    considered a New Initiator and use a shorter SFT value.
    
    This was not done with the result that if both sides where continually
    sending messages, they both could use the same SFT value and one side
    could deny the other side access to the bus.
    
    Note that this fix does not take the corner case into account where
    a receive is in progress when you call adap_transmit.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: <stable@vger.kernel.org>      # for v4.18 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11f9f361470d690dc8dd761dce906d30d2e4bd7b
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Thu Oct 4 03:28:21 2018 -0400

    media: cec: add new tx/rx status bits to detect aborts/timeouts
    
    commit 7ec2b3b941a666a942859684281b5f6460a0c234 upstream.
    
    If the HDMI cable is disconnected or the CEC adapter is manually
    unconfigured, then all pending transmits and wait-for-replies are
    aborted. Signal this with new status bits (CEC_RX/TX_STATUS_ABORTED).
    
    If due to (usually) a driver bug a transmit never ends (i.e. the
    transmit_done was never called by the driver), then when this times
    out the message is marked with CEC_TX_STATUS_TIMEOUT.
    
    This should not happen and is an indication of a driver bug.
    
    Without a separate status bit for this it was impossible to detect
    this from userspace.
    
    The 'transmit timed out' kernel message is now a warning, so this
    should be more prominent in the kernel log as well.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: <stable@vger.kernel.org>      # for v4.18 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b92b55fd2cfbb7c944bb0cd98e6e36d54015b51
Author: Manjunath Patil <manjunath.b.patil@oracle.com>
Date:   Tue Oct 30 09:49:21 2018 -0700

    xen-blkfront: fix kernel panic with negotiate_mq error path
    
    commit 6cc4a0863c9709c512280c64e698d68443ac8053 upstream.
    
    info->nr_rings isn't adjusted in case of ENOMEM error from
    negotiate_mq(). This leads to kernel panic in error path.
    
    Typical call stack involving panic -
     #8 page_fault at ffffffff8175936f
        [exception RIP: blkif_free_ring+33]
        RIP: ffffffffa0149491  RSP: ffff8804f7673c08  RFLAGS: 00010292
     ...
     #9 blkif_free at ffffffffa0149aaa [xen_blkfront]
     #10 talk_to_blkback at ffffffffa014c8cd [xen_blkfront]
     #11 blkback_changed at ffffffffa014ea8b [xen_blkfront]
     #12 xenbus_otherend_changed at ffffffff81424670
     #13 backend_changed at ffffffff81426dc3
     #14 xenwatch_thread at ffffffff81422f29
     #15 kthread at ffffffff810abe6a
     #16 ret_from_fork at ffffffff81754078
    
    Cc: stable@vger.kernel.org
    Fixes: 7ed8ce1c5fc7 ("xen-blkfront: move negotiate_mq to cover all cases of new VBDs")
    Signed-off-by: Manjunath Patil <manjunath.b.patil@oracle.com>
    Acked-by: Roger Pau Monné <roger.pau@citrix.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bc564ec56820235ad0539713c117d17ee6b9698
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Nov 1 13:33:07 2018 +0100

    xen: remove size limit of privcmd-buf mapping interface
    
    commit 3941552aec1e04d63999988a057ae09a1c56ebeb upstream.
    
    Currently the size of hypercall buffers allocated via
    /dev/xen/hypercall is limited to a default of 64 memory pages. For live
    migration of guests this might be too small as the page dirty bitmask
    needs to be sized according to the size of the guest. This means
    migrating a 8GB sized guest is already exhausting the default buffer
    size for the dirty bitmap.
    
    There is no sensible way to set a sane limit, so just remove it
    completely. The device node's usage is limited to root anyway, so there
    is no additional DOS scenario added by allowing unlimited buffers.
    
    While at it make the error path for the -ENOMEM case a little bit
    cleaner by setting n_pages to the number of successfully allocated
    pages instead of the target size.
    
    Fixes: c51b3c639e01f2 ("xen: add new hypercall buffer mapping device")
    Cc: <stable@vger.kernel.org> #4.18
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 905632c2e61dcf488e4c26ee6e4f85187bb45486
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Nov 8 08:35:06 2018 +0100

    xen: fix xen_qlock_wait()
    
    commit d3132b3860f6cf35ff7609a76bbcdbb814bd027c upstream.
    
    Commit a856531951dc80 ("xen: make xen_qlock_wait() nestable")
    introduced a regression for Xen guests running fully virtualized
    (HVM or PVH mode). The Xen hypervisor wouldn't return from the poll
    hypercall with interrupts disabled in case of an interrupt (for PV
    guests it does).
    
    So instead of disabling interrupts in xen_qlock_wait() use a nesting
    counter to avoid calling xen_clear_irq_pending() in case
    xen_qlock_wait() is nested.
    
    Fixes: a856531951dc80 ("xen: make xen_qlock_wait() nestable")
    Cc: stable@vger.kernel.org
    Reported-by: Sander Eikelenboom <linux@eikelenboom.it>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Tested-by: Sander Eikelenboom <linux@eikelenboom.it>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbcbbbbf5aa37675b19f509e2f0364774a09bf1c
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Thu Sep 13 03:36:29 2018 -0400

    media: cec: integrate cec_validate_phys_addr() in cec-api.c
    
    commit e81bff39489a06384822bb38ce7a59f9e365bbe9 upstream.
    
    The cec_phys_addr_validate() function will be moved to V4L2,
    so use a simplified variant of that function in cec-api.c.
    cec now no longer calls cec_phys_addr_validate() and it can
    be safely moved to V4L2.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: <stable@vger.kernel.org>      # for v4.17 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4e97d13dd135eeb7fd70e4b9f33ebfd874a06c7
Author: Hans Verkuil <hans.verkuil@cisco.com>
Date:   Thu Sep 13 03:25:59 2018 -0400

    media: cec: make cec_get_edid_spa_location() an inline function
    
    commit b915bf575d5b7774d0f22d57d6c143e07dcaade2 upstream.
    
    This function is needed by both V4L2 and CEC, so move this to
    cec.h as a static inline since there are no obvious shared
    modules between the two subsystems.
    
    This patch, together with the following ones, fixes a
    dependency bug: if CEC_CORE is disabled, then building adv7604
    (and other HDMI receivers) will fail because an essential
    function is now stubbed out.
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: <stable@vger.kernel.org>      # for v4.17 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 239efda32abd24c270a0348f678cb3a99223189b
Author: He Zhe <zhe.he@windriver.com>
Date:   Fri Aug 17 22:42:28 2018 +0800

    kgdboc: Passing ekgdboc to command line causes panic
    
    commit 1bd54d851f50dea6af30c3e6ff4f3e9aab5558f9 upstream.
    
    kgdboc_option_setup does not check input argument before passing it
    to strlen. The argument would be a NULL pointer if "ekgdboc", without
    its value, is set in command line and thus cause the following panic.
    
    PANIC: early exception 0xe3 IP 10:ffffffff8fbbb620 error 0 cr2 0x0
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 4.18-rc8+ #1
    [    0.000000] RIP: 0010:strlen+0x0/0x20
    ...
    [    0.000000] Call Trace
    [    0.000000]  ? kgdboc_option_setup+0x9/0xa0
    [    0.000000]  ? kgdboc_early_init+0x6/0x1b
    [    0.000000]  ? do_early_param+0x4d/0x82
    [    0.000000]  ? parse_args+0x212/0x330
    [    0.000000]  ? rdinit_setup+0x26/0x26
    [    0.000000]  ? parse_early_options+0x20/0x23
    [    0.000000]  ? rdinit_setup+0x26/0x26
    [    0.000000]  ? parse_early_param+0x2d/0x39
    [    0.000000]  ? setup_arch+0x2f7/0xbf4
    [    0.000000]  ? start_kernel+0x5e/0x4c2
    [    0.000000]  ? load_ucode_bsp+0x113/0x12f
    [    0.000000]  ? secondary_startup_64+0xa5/0xb0
    
    This patch adds a check to prevent the panic.
    
    Cc: stable@vger.kernel.org
    Cc: jason.wessel@windriver.com
    Cc: gregkh@linuxfoundation.org
    Cc: jslaby@suse.com
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e589ba2d14ad6c9deaf2674a39800e320003aa5c
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Fri Oct 5 10:21:25 2018 -0400

    Revert "media: dvbsky: use just one mutex for serializing device R/W ops"
    
    commit 9afc82194de9a1ce298f0d77d7d779d585bf962c upstream.
    
    As pointed at:
            https://bugzilla.kernel.org/show_bug.cgi?id=199323
    
    This patch causes a bad effect on RPi. I suspect that the root
    cause is at the USB out of tree RPi driver, with uses high priority
    interrupts instead of normal ones. Anyway, as this patch
    is mostly a cleanup, better to revert it.
    
    This reverts commit 7d95fb746c4eece67308f1642a666ea1ebdbd2cc.
    
    Cc: stable@vger.kernel.org # For Kernel 4.18
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d661c89b177d8b0b8e2be703b918146e9fc9d132
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Mon Oct 8 15:08:27 2018 -0400

    media: v4l2-tpg: fix kernel oops when enabling HFLIP and OSD
    
    commit 250854eed5d45a73d81e4137dfd85180af6f2ec3 upstream.
    
    When the OSD is on (i.e. vivid displays text on top of the test pattern), and
    you enable hflip, then the driver crashes.
    
    The cause turned out to be a division of a negative number by an unsigned value.
    You expect that -8 / 2U would be -4, but in reality it is 2147483644 :-(
    
    Fixes: 3e14e7a82c1ef ("vivid-tpg: add hor/vert downsampling support to tpg_gen_text")
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Reported-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Cc: <stable@vger.kernel.org>      # for v4.1 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebc14b2ad1e763a5a71bd0901f5d816bbe0ab48b
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:50 2018 +0200

    net: bcmgenet: fix OF child-node lookup
    
    commit d397dbe606120a1ea1b11b0020c3f7a3852da5ac upstream.
    
    Use the new of_get_compatible_child() helper to lookup the mdio child
    node instead of using of_find_compatible_node(), which searches the
    entire tree from a given start node and thus can return an unrelated
    (i.e. non-child) node.
    
    This also addresses a potential use-after-free (e.g. after probe
    deferral) as the tree-wide helper drops a reference to its first
    argument (i.e. the node of the device being probed).
    
    Fixes: aa09677cba42 ("net: bcmgenet: add MDIO routines")
    Cc: stable <stable@vger.kernel.org>     # 3.15
    Cc: David S. Miller <davem@davemloft.net>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f664bdc5f98bdfabfadea4b3c35f2cd84770d56
Author: Maciej W. Rozycki <macro@linux-mips.org>
Date:   Wed Oct 3 13:21:07 2018 +0100

    TC: Set DMA masks for devices
    
    commit 3f2aa244ee1a0d17ed5b6c86564d2c1b24d1c96b upstream.
    
    Fix a TURBOchannel support regression with commit 205e1b7f51e4
    ("dma-mapping: warn when there is no coherent_dma_mask") that caused
    coherent DMA allocations to produce a warning such as:
    
    defxx: v1.11 2014/07/01  Lawrence V. Stefani and others
    tc1: DEFTA at MMIO addr = 0x1e900000, IRQ = 20, Hardware addr = 08-00-2b-a3-a3-29
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 1 at ./include/linux/dma-mapping.h:516 dfx_dev_register+0x670/0x678
    Modules linked in:
    CPU: 0 PID: 1 Comm: swapper Not tainted 4.19.0-rc6 #2
    Stack : ffffffff8009ffc0 fffffffffffffec0 0000000000000000 ffffffff80647650
            0000000000000000 0000000000000000 ffffffff806f5f80 ffffffffffffffff
            0000000000000000 0000000000000000 0000000000000001 ffffffff8065d4e8
            98000000031b6300 ffffffff80563478 ffffffff805685b0 ffffffffffffffff
            0000000000000000 ffffffff805d6720 0000000000000204 ffffffff80388df8
            0000000000000000 0000000000000009 ffffffff8053efd0 ffffffff806657d0
            0000000000000000 ffffffff803177f8 0000000000000000 ffffffff806d0000
            9800000003078000 980000000307b9e0 000000001e900000 ffffffff80067940
            0000000000000000 ffffffff805d6720 0000000000000204 ffffffff80388df8
            ffffffff805176c0 ffffffff8004dc78 0000000000000000 ffffffff80067940
            ...
    Call Trace:
    [<ffffffff8004dc78>] show_stack+0xa0/0x130
    [<ffffffff80067940>] __warn+0x128/0x170
    ---[ end trace b1d1e094f67f3bb2 ]---
    
    This is because the TURBOchannel bus driver fails to set the coherent
    DMA mask for devices enumerated.
    
    Set the regular and coherent DMA masks for TURBOchannel devices then,
    observing that the bus protocol supports a 34-bit (16GiB) DMA address
    space, by interpreting the value presented in the address cycle across
    the 32 `ad' lines as a 32-bit word rather than byte address[1].  The
    architectural size of the TURBOchannel DMA address space exceeds the
    maximum amount of RAM any actual TURBOchannel system in existence may
    have, hence both masks are the same.
    
    This removes the warning shown above.
    
    References:
    
    [1] "TURBOchannel Hardware Specification", EK-369AA-OD-007B, Digital
        Equipment Corporation, January 1993, Section "DMA", pp. 1-15 -- 1-17
    
    Signed-off-by: Maciej W. Rozycki <macro@linux-mips.org>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Patchwork: https://patchwork.linux-mips.org/patch/20835/
    Fixes: 205e1b7f51e4 ("dma-mapping: warn when there is no coherent_dma_mask")
    Cc: stable@vger.kernel.org # 4.16+
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eddf6140dbeadd3cb336214f24ee2edb1bb263fd
Author: Will Deacon <will@kernel.org>
Date:   Mon Oct 1 12:42:49 2018 +0100

    iommu/arm-smmu: Ensure that page-table updates are visible before TLBI
    
    commit 7d321bd3542500caf125249f44dc37cb4e738013 upstream.
    
    The IO-pgtable code relies on the driver TLB invalidation callbacks to
    ensure that all page-table updates are visible to the IOMMU page-table
    walker.
    
    In the case that the page-table walker is cache-coherent, we cannot rely
    on an implicit DSB from the DMA-mapping code, so we must ensure that we
    execute a DSB in our tlb_add_flush() callback prior to triggering the
    invalidation.
    
    Cc: <stable@vger.kernel.org>
    Cc: Robin Murphy <robin.murphy@arm.com>
    Fixes: 2df7a25ce4a7 ("iommu/arm-smmu: Clean up DMA API usage")
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 220720a431bfe42cb00d9d0b7583657df7c82e4b
Author: Christophe Lombard <clombard@linux.vnet.ibm.com>
Date:   Tue Aug 14 14:45:15 2018 +0200

    ocxl: Fix access to the AFU Descriptor Data
    
    commit 6f8e45f7eb1bee5efdbe4a9cfe4a45627403c5fb upstream.
    
    The AFU Information DVSEC capability is a means to extract common,
    general information about all of the AFUs associated with a Function
    independent of the specific functionality that each AFU provides.
    Write in the AFU Index field allows to access to the descriptor data
    for each AFU.
    
    With the current code, we are not able to access to these specific data
    when the index >= 1 because we are writing to the wrong location.
    All requests to the data of each AFU are pointing to those of the AFU 0,
    which could have impacts when using a card with more than one AFU per
    function.
    
    This patch fixes the access to the AFU Descriptor Data indexed by the
    AFU Info Index field.
    
    Fixes: 5ef3166e8a32 ("ocxl: Driver code for 'generic' opencapi devices")
    Cc: stable <stable@vger.kernel.org>     # 4.16
    Signed-off-by: Christophe Lombard <clombard@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Acked-by: Frederic Barrat <fbarrat@linux.vnet.ibm.com>
    Acked-by: Andrew Donnellan <andrew.donnellan@au1.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

commit 02eabf6ac681b57e21d7332c0290ec2be4801094
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:53 2018 +0200

    power: supply: twl4030-charger: fix OF sibling-node lookup
    
    commit 9844fb2e351311210e6660a9a1c62d17424a6145 upstream.
    
    Use the new of_get_compatible_child() helper to lookup the usb sibling
    node instead of using of_find_compatible_node(), which searches the
    entire tree from a given start node and thus can return an unrelated
    (non-sibling) node.
    
    This also addresses a potential use-after-free (e.g. after probe
    deferral) as the tree-wide helper drops a reference to its first
    argument (i.e. the parent device node).
    
    While at it, also fix the related phy-node reference leak.
    
    Fixes: f5e4edb8c888 ("power: twl4030_charger: find associated phy by more reliable means.")
    Cc: stable <stable@vger.kernel.org>     # 4.2
    Cc: NeilBrown <neilb@suse.de>
    Cc: Felipe Balbi <felipe.balbi@linux.intel.com>
    Cc: Sebastian Reichel <sre@kernel.org>
    Reviewed-by: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8631b7bd98b94efba28e918eac0311a6db03c3f4
Author: Maciej W. Rozycki <macro@linux-mips.org>
Date:   Tue Oct 2 02:09:05 2018 +0100

    rtc: cmos: Remove the `use_acpi_alarm' module parameter for !ACPI
    
    commit bc51098cdd9573bfdecfd02fc8ed474419d73ea0 upstream.
    
    Fix a problem with commit 311ee9c151ad ("rtc: cmos: allow using ACPI for
    RTC alarm instead of HPET") defining `use_acpi_alarm' module parameter
    even for non-ACPI platforms, which ignore it.  Wrap the definition into
    #ifdef CONFIG_ACPI and use a static inline wrapper function, hardcoded
    to return 0 and consequently optimized away for !ACPI, following the
    existing pattern with HPET handling functions.
    
    Signed-off-by: Maciej W. Rozycki <macro@linux-mips.org>
    Fixes: 311ee9c151ad ("rtc: cmos: allow using ACPI for RTC alarm instead of HPET")
    Cc: stable@vger.kernel.org # 4.18+
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b6bdf14357c1c535f6f534889c377c501f110fc
Author: Maciej W. Rozycki <macro@linux-mips.org>
Date:   Tue Oct 2 02:08:49 2018 +0100

    rtc: cmos: Fix non-ACPI undefined reference to `hpet_rtc_interrupt'
    
    commit d197a253855d2d8e507a003880aab35c4e2473db upstream.
    
    Fix a commit 311ee9c151ad ("rtc: cmos: allow using ACPI for RTC alarm
    instead of HPET") `rtc-cmos' regression causing a link error:
    
    drivers/rtc/rtc-cmos.o: In function `cmos_platform_probe':
    rtc-cmos.c:(.init.text+0x33c): undefined reference to `hpet_rtc_interrupt'
    rtc-cmos.c:(.init.text+0x3f4): undefined reference to `hpet_rtc_interrupt'
    
    with non-ACPI platforms using this driver.  The cause is the change of
    the condition guarding the use of `hpet_rtc_interrupt'.
    
    Previously it was a call to `is_hpet_enabled'.  That function is static
    inline and has a hardcoded 0 result for non-ACPI platforms, which imply
    !HPET_EMULATE_RTC.  Consequently the compiler optimized the whole block
    away including the reference to `hpet_rtc_interrupt', which never made
    it to the link stage.
    
    Now the guarding condition is a call to `use_hpet_alarm', which is not
    static inline and therefore the compiler may not be able to prove that
    it actually always returns 0 for non-ACPI platforms.  Consequently the
    build breaks with an unsatisfied reference, because `hpet_rtc_interrupt'
    is nowhere defined at link time.
    
    Fix the problem by marking `use_hpet_alarm' inline.  As the `inline'
    keyword serves as an optimization hint rather than a requirement the
    compiler is still free to choose whether inlining will be beneficial or
    not for ACPI platforms.
    
    Signed-off-by: Maciej W. Rozycki <macro@linux-mips.org>
    Fixes: 311ee9c151ad ("rtc: cmos: allow using ACPI for RTC alarm instead of HPET")
    Cc: stable@vger.kernel.org # 4.18+
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0e51867714987b85fbd3dcc9811f319e109d899
Author: Soeren Moch <smoch@web.de>
Date:   Mon Oct 22 14:38:12 2018 +0200

    rtc: ds1307: fix ds1339 wakealarm support
    
    commit 7dceef78f310f5351735060d78a1777c69606016 upstream.
    
    Commit 51ed73eb998a1c79a2b0e9bed68f75a8a2c93b9b ("rtc: ds1340: Add support
    for trickle charger.") breaks ds1339 wakealarm support by limiting
    accessible registers. Fix this.
    
    Fixes: 51ed73eb998a ("rtc: ds1340: Add support for trickle charger.")
    Cc: stable@vger.kernel.org
    Signed-off-by: Soeren Moch <smoch@web.de>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1145e2b587d7af3b0fa631d803380205377698ed
Author: Aaro Koskinen <aaro.koskinen@iki.fi>
Date:   Sat Oct 27 01:46:34 2018 +0300

    MIPS: OCTEON: fix out of bounds array access on CN68XX
    
    commit c0fae7e2452b90c31edd2d25eb3baf0c76b400ca upstream.
    
    The maximum number of interfaces is returned by
    cvmx_helper_get_number_of_interfaces(), and the value is used to access
    interface_port_count[]. When CN68XX support was added, we forgot
    to increase the array size. Fix that.
    
    Fixes: 2c8c3f0201333 ("MIPS: Octeon: Support additional interfaces on CN68XX")
    Signed-off-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Patchwork: https://patchwork.linux-mips.org/patch/20949/
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Cc: stable@vger.kernel.org # v4.3+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cd5e22d5b1d9093140e5c3ec2cb27332aade1ae
Author: Maciej W. Rozycki <macro@linux-mips.org>
Date:   Tue Oct 2 12:50:11 2018 +0100

    MIPS: memset: Fix CPU_DADDI_WORKAROUNDS `small_fixup' regression
    
    commit 2f7619ae90bf78cf576b5e72087aab0435266fdb upstream.
    
    Fix a commit 8a8158c85e1e ("MIPS: memset.S: EVA & fault support for
    small_memset") regression and remove assembly warnings:
    
    arch/mips/lib/memset.S: Assembler messages:
    arch/mips/lib/memset.S:243: Warning: Macro instruction expanded into multiple instructions in a branch delay slot
    
    triggering with the CPU_DADDI_WORKAROUNDS option set and this code:
    
            PTR_SUBU        a2, t1, a0
            jr              ra
             PTR_ADDIU      a2, 1
    
    This is because with that option in place the DADDIU instruction, which
    the PTR_ADDIU CPP macro expands to, becomes a GAS macro, which in turn
    expands to an LI/DADDU (or actually ADDIU/DADDU) sequence:
    
     13c:   01a4302f        dsubu   a2,t1,a0
     140:   03e00008        jr      ra
     144:   24010001        li      at,1
     148:   00c1302d        daddu   a2,a2,at
            ...
    
    Correct this by switching off the `noreorder' assembly mode and letting
    GAS schedule this jump's delay slot, as there is nothing special about
    it that would require manual scheduling.  With this change in place
    correct code is produced:
    
     13c:   01a4302f        dsubu   a2,t1,a0
     140:   24010001        li      at,1
     144:   03e00008        jr      ra
     148:   00c1302d        daddu   a2,a2,at
            ...
    
    Signed-off-by: Maciej W. Rozycki <macro@linux-mips.org>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Fixes: 8a8158c85e1e ("MIPS: memset.S: EVA & fault support for small_memset")
    Patchwork: https://patchwork.linux-mips.org/patch/20833/
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: stable@vger.kernel.org # 4.17+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 163121109386e3876a472aeff31ab0428ee22d3e
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Mon Aug 27 13:03:01 2018 +1000

    powerpc/64s/hash: Do not use PPC_INVALIDATE_ERAT on CPUs before POWER9
    
    commit bc276ecba132caccb1fda5863a652c15def2b8c6 upstream.
    
    PPC_INVALIDATE_ERAT is slbia IH=7 which is a new variant introduced
    with POWER9, and the result is undefined on earlier CPUs.
    
    Commits 7b9f71f974 ("powerpc/64s: POWER9 machine check handler") and
    d4748276ae ("powerpc/64s: Improve local TLB flush for boot and MCE on
    POWER9") caused POWER7/8 code to use this instruction. Remove it. An
    ERAT flush can be made by invalidatig the SLB, but before POWER9 that
    requires a flush and rebolt.
    
    Fixes: 7b9f71f974 ("powerpc/64s: POWER9 machine check handler")
    Fixes: d4748276ae ("powerpc/64s: Improve local TLB flush for boot and MCE on POWER9")
    Cc: stable@vger.kernel.org # v4.11+
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba5a3866a609f3a8f1aec572d5b565ff7fbb4554
Author: Michael Neuling <mikey@neuling.org>
Date:   Tue Sep 11 13:07:56 2018 +1000

    powerpc/tm: Fix HFSCR bit for no suspend case
    
    commit dd9a8c5a87395b6f05552c3b44e42fdc95760552 upstream.
    
    Currently on P9N DD2.1 we end up taking infinite TM facility
    unavailable exceptions on the first TM usage by userspace.
    
    In the special case of TM no suspend (P9N DD2.1), Linux is told TM is
    off via CPU dt-ftrs but told to (partially) use it via
    OPAL_REINIT_CPUS_TM_SUSPEND_DISABLED. So HFSCR[TM] will be off from
    dt-ftrs but we need to turn it on for the no suspend case.
    
    This patch fixes this by enabling HFSCR TM in this case.
    
    Cc: stable@vger.kernel.org # 4.15+
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0668860758ead905b998dc78e9e61a814ff43fa
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Fri Oct 19 06:12:50 2018 +0000

    powerpc/msi: Fix compile error on mpc83xx
    
    commit 0f99153def98134403c9149128e59d3e1786cf04 upstream.
    
    mpic_get_primary_version() is not defined when not using MPIC.
    The compile error log like:
    
    arch/powerpc/sysdev/built-in.o: In function `fsl_of_msi_probe':
    fsl_msi.c:(.text+0x150c): undefined reference to `fsl_mpic_primary_get_version'
    
    Signed-off-by: Jia Hongtao <hongtao.jia@freescale.com>
    Signed-off-by: Scott Wood <scottwood@freescale.com>
    Reported-by: Radu Rendec <radu.rendec@gmail.com>
    Fixes: 807d38b73b6 ("powerpc/mpic: Add get_version API both for internal and external use")
    Cc: stable@vger.kernel.org
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0bac51733c0501900adfcdf85ec3547138b23d6
Author: Jan Kara <jack@suse.cz>
Date:   Wed Oct 17 13:07:05 2018 +0200

    fsnotify: Fix busy inodes during unmount
    
    commit 721fb6fbfd2132164c2e8777cc837f9b2c1794dc upstream.
    
    Detaching of mark connector from fsnotify_put_mark() can race with
    unmounting of the filesystem like:
    
      CPU1                          CPU2
    fsnotify_put_mark()
      spin_lock(&conn->lock);
      ...
      inode = fsnotify_detach_connector_from_object(conn)
      spin_unlock(&conn->lock);
                                    generic_shutdown_super()
                                      fsnotify_unmount_inodes()
                                        sees connector detached for inode
                                          -> nothing to do
                                      evict_inode()
                                        barfs on pending inode reference
      iput(inode);
    
    Resulting in "Busy inodes after unmount" message and possible kernel
    oops. Make fsnotify_unmount_inodes() properly wait for outstanding inode
    references from detached connectors.
    
    Note that the accounting of outstanding inode references in the
    superblock can cause some cacheline contention on the counter. OTOH it
    happens only during deletion of the last notification mark from an inode
    (or during unlinking of watched inode) and that is not too bad. I have
    measured time to create & delete inotify watch 100000 times from 64
    processes in parallel (each process having its own inotify group and its
    own file on a shared superblock) on a 64 CPU machine. Average and
    standard deviation of 15 runs look like:
    
            Avg             Stddev
    Vanilla 9.817400        0.276165
    Fixed   9.710467        0.228294
    
    So there's no statistically significant difference.
    
    Fixes: 6b3f05d24d35 ("fsnotify: Detach mark from object list when last reference is dropped")
    CC: stable@vger.kernel.org
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddb75410b6a6f4176a2813002fc4f045a1e77147
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Thu Oct 4 17:29:03 2018 -0400

    media: ov7670: make "xclk" clock optional
    
    commit 786fa584eda86d6598db3b87c61dc81f68808d11 upstream.
    
    When the "xclk" clock was added, it was made mandatory. This broke the
    driver on an OLPC plaform which doesn't know such clock. Make it
    optional.
    
    Tested on a OLPC XO-1 laptop.
    
    Fixes: 0a024d634cee ("[media] ov7670: get xclk")
    
    Cc: stable@vger.kernel.org # 4.11+
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 933833d56e3c8d6a08e4bc13a00742c7ef7b2b9d
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Wed Oct 17 18:05:08 2018 +0900

    dm zoned: fix various dmz_get_mblock() issues
    
    commit 3d4e738311327bc4ba1d55fbe2f1da3de4a475f9 upstream.
    
    dmz_fetch_mblock() called from dmz_get_mblock() has a race since the
    allocation of the new metadata block descriptor and its insertion in
    the cache rbtree with the READING state is not atomic. Two different
    contexts requesting the same block may end up each adding two different
    descriptors of the same block to the cache.
    
    Another problem for this function is that the BIO for processing the
    block read is allocated after the metadata block descriptor is inserted
    in the cache rbtree. If the BIO allocation fails, the metadata block
    descriptor is freed without first being removed from the rbtree.
    
    Fix the first problem by checking again if the requested block is not in
    the cache right before inserting the newly allocated descriptor,
    atomically under the mblk_lock spinlock. The second problem is fixed by
    simply allocating the BIO before inserting the new block in the cache.
    
    Finally, since dmz_fetch_mblock() also increments a block reference
    counter, rename the function to dmz_get_mblock_slow(). To be symmetric
    and clear, also rename dmz_lookup_mblock() to dmz_get_mblock_fast() and
    increment the block reference counter directly in that function rather
    than in dmz_get_mblock().
    
    Fixes: 3b1a94c88b79 ("dm zoned: drive-managed zoned block device target")
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8acae84c058c890b00bcbb0e4ab4a5634652c071
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Wed Oct 17 18:05:07 2018 +0900

    dm zoned: fix metadata block ref counting
    
    commit 33c2865f8d011a2ca9f67124ddab9dc89382e9f1 upstream.
    
    Since the ref field of struct dmz_mblock is always used with the
    spinlock of struct dmz_metadata locked, there is no need to use an
    atomic_t type. Change the type of the ref field to an unsigne
    integer.
    
    Fixes: 3b1a94c88b79 ("dm zoned: drive-managed zoned block device target")
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58963dc60bb5bf0f44c70ea829b378a3f537cd9d
Author: Wenwen Wang <wang6495@umn.edu>
Date:   Wed Oct 3 11:43:59 2018 -0500

    dm ioctl: harden copy_params()'s copy_from_user() from malicious users
    
    commit 800a7340ab7dd667edf95e74d8e4f23a17e87076 upstream.
    
    In copy_params(), the struct 'dm_ioctl' is first copied from the user
    space buffer 'user' to 'param_kernel' and the field 'data_size' is
    checked against 'minimum_data_size' (size of 'struct dm_ioctl' payload
    up to its 'data' member).  If the check fails, an error code EINVAL will be
    returned.  Otherwise, param_kernel->data_size is used to do a second copy,
    which copies from the same user-space buffer to 'dmi'.  After the second
    copy, only 'dmi->data_size' is checked against 'param_kernel->data_size'.
    Given that the buffer 'user' resides in the user space, a malicious
    user-space process can race to change the content in the buffer between
    the two copies.  This way, the attacker can inject inconsistent data
    into 'dmi' (versus previously validated 'param_kernel').
    
    Fix redundant copying of 'minimum_data_size' from user-space buffer by
    using the first copy stored in 'param_kernel'.  Also remove the
    'data_size' check after the second copy because it is now unnecessary.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Wenwen Wang <wang6495@umn.edu>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1bc549827094742c77cfeb639ef77b8199169a46
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Fri Sep 28 20:41:48 2018 +0300

    lockd: fix access beyond unterminated strings in prints
    
    commit 93f38b6fae0ea8987e22d9e6c38f8dfdccd867ee upstream.
    
    printk format used %*s instead of %.*s, so hostname_len does not limit
    the number of bytes accessed from hostname.
    
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b4718d2d53d5ae878db577a1fb62b97f28827b4
Author: Trond Myklebust <trondmy@gmail.com>
Date:   Tue Oct 9 15:54:15 2018 -0400

    nfsd: Fix an Oops in free_session()
    
    commit bb6ad5572c0022e17e846b382d7413cdcf8055be upstream.
    
    In call_xpt_users(), we delete the entry from the list, but we
    do not reinitialise it. This triggers the list poisoning when
    we later call unregister_xpt_user() in nfsd4_del_conns().
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04868067e324128fd4b3bee2bfaf504aee9bd3d9
Author: Andrew Elble <aweits@rit.edu>
Date:   Fri Oct 5 09:32:08 2018 -0400

    nfsd: correctly decrement odstate refcount in error path
    
    commit bd8d725078867cda250fe94b9c5a067b4a64ca74 upstream.
    
    alloc_init_deleg() both allocates an nfs4_delegation, and
    bumps the refcount on odstate. So after this point, we need to
    put_clnt_odstate() and nfs4_put_stid() to not leave the odstate
    refcount inappropriately bumped.
    
    Signed-off-by: Andrew Elble <aweits@rit.edu>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 209502944483dedde1bbc0c8a1afc7ae839a9bcf
Author: Benjamin Coddington <bcodding@redhat.com>
Date:   Thu Oct 18 15:01:48 2018 -0400

    nfs: Fix a missed page unlock after pg_doio()
    
    commit fdbd1a2e4a71adcb1ae219fcfd964930d77a7f84 upstream.
    
    We must check pg_error and call error_cleanup after any call to pg_doio.
    Currently, we are skipping the unlock of a page if we encounter an error in
    nfs_pageio_complete() before handing off the work to the RPC layer.
    
    Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 006a1e6a2d9e5c2412f09f480d8ade49f29f415c
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Sep 18 10:07:44 2018 -0400

    NFSv4.1: Fix the r/wsize checking
    
    commit 943cff67b842839f4f35364ba2db5c2d3f025d94 upstream.
    
    The intention of nfs4_session_set_rwsize() was to cap the r/wsize to the
    buffer sizes negotiated by the CREATE_SESSION. The initial code had a
    bug whereby we would not check the values negotiated by nfs_probe_fsinfo()
    (the assumption being that CREATE_SESSION will always negotiate buffer values
    that are sane w.r.t. the server's preferred r/wsizes) but would only check
    values set by the user in the 'mount' command.
    
    The code was changed in 4.11 to _always_ set the r/wsize, meaning that we
    now never use the server preferred r/wsizes. This is the regression that
    this patch fixes.
    Also rename the function to nfs4_session_limit_rwsize() in order to avoid
    future confusion.
    
    Fixes: 033853325fe3 (NFSv4.1 respect server's max size in CREATE_SESSION")
    Cc: stable@vger.kernel.org # v4.11+
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fb746ed8e0c5153d2860ba9558e95e0999829d3
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:52 2018 +0200

    NFC: nfcmrvl_uart: fix OF child-node lookup
    
    commit 5bf59773aaf36dd62117dc83d50e1bbf9ef432da upstream.
    
    Use the new of_get_compatible_child() helper to lookup the nfc child
    node instead of using of_find_compatible_node(), which searches the
    entire tree from a given start node and thus can return an unrelated
    (i.e. non-child) node.
    
    This also addresses a potential use-after-free (e.g. after probe
    deferral) as the tree-wide helper drops a reference to its first
    argument (i.e. the parent node).
    
    Fixes: e097dc624f78 ("NFC: nfcmrvl: add UART driver")
    Fixes: d8e018c0b321 ("NFC: nfcmrvl: update device tree bindings for Marvell NFC")
    Cc: stable <stable@vger.kernel.org>     # 4.2
    Cc: Vincent Cuissard <cuissard@marvell.com>
    Cc: Samuel Ortiz <sameo@linux.intel.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 193e214685dd022342fcb8ceaef4c81cc3dff4d1
Author: Lukas Wunner <lukas@wunner.de>
Date:   Thu Oct 18 15:15:05 2018 +0200

    genirq: Fix race on spurious interrupt detection
    
    commit 746a923b863a1065ef77324e1e43f19b1a3eab5c upstream.
    
    Commit 1e77d0a1ed74 ("genirq: Sanitize spurious interrupt detection of
    threaded irqs") made detection of spurious interrupts work for threaded
    handlers by:
    
    a) incrementing a counter every time the thread returns IRQ_HANDLED, and
    b) checking whether that counter has increased every time the thread is
       woken.
    
    However for oneshot interrupts, the commit unmasks the interrupt before
    incrementing the counter.  If another interrupt occurs right after
    unmasking but before the counter is incremented, that interrupt is
    incorrectly considered spurious:
    
    time
     |  irq_thread()
     |    irq_thread_fn()
     |      action->thread_fn()
     |      irq_finalize_oneshot()
     |        unmask_threaded_irq()            /* interrupt is unmasked */
     |
     |                  /* interrupt fires, incorrectly deemed spurious */
     |
     |    atomic_inc(&desc->threads_handled); /* counter is incremented */
     v
    
    This is observed with a hi3110 CAN controller receiving data at high volume
    (from a separate machine sending with "cangen -g 0 -i -x"): The controller
    signals a huge number of interrupts (hundreds of millions per day) and
    every second there are about a dozen which are deemed spurious.
    
    In theory with high CPU load and the presence of higher priority tasks, the
    number of incorrectly detected spurious interrupts might increase beyond
    the 99,900 threshold and cause disablement of the interrupt.
    
    In practice it just increments the spurious interrupt count. But that can
    cause people to waste time investigating it over and over.
    
    Fix it by moving the accounting before the invocation of
    irq_finalize_oneshot().
    
    [ tglx: Folded change log update ]
    
    Fixes: 1e77d0a1ed74 ("genirq: Sanitize spurious interrupt detection of threaded irqs")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Mathias Duckeck <m.duckeck@kunbus.de>
    Cc: Akshay Bhat <akshay.bhat@timesys.com>
    Cc: Casey Fitzpatrick <casey.fitzpatrick@timesys.com>
    Cc: stable@vger.kernel.org # v3.16+
    Link: https://lkml.kernel.org/r/1dfd8bbd16163940648045495e3e9698e63b50ad.1539867047.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06cbcf582cafb2883fd7c9c80c4c3b132e4c1869
Author: He Zhe <zhe.he@windriver.com>
Date:   Sun Sep 30 00:45:50 2018 +0800

    printk: Fix panic caused by passing log_buf_len to command line
    
    commit 277fcdb2cfee38ccdbe07e705dbd4896ba0c9930 upstream.
    
    log_buf_len_setup does not check input argument before passing it to
    simple_strtoull. The argument would be a NULL pointer if "log_buf_len",
    without its value, is set in command line and thus causes the following
    panic.
    
    PANIC: early exception 0xe3 IP 10:ffffffffaaeacd0d error 0 cr2 0x0
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 4.19.0-rc4-yocto-standard+ #1
    [    0.000000] RIP: 0010:_parse_integer_fixup_radix+0xd/0x70
    ...
    [    0.000000] Call Trace:
    [    0.000000]  simple_strtoull+0x29/0x70
    [    0.000000]  memparse+0x26/0x90
    [    0.000000]  log_buf_len_setup+0x17/0x22
    [    0.000000]  do_early_param+0x57/0x8e
    [    0.000000]  parse_args+0x208/0x320
    [    0.000000]  ? rdinit_setup+0x30/0x30
    [    0.000000]  parse_early_options+0x29/0x2d
    [    0.000000]  ? rdinit_setup+0x30/0x30
    [    0.000000]  parse_early_param+0x36/0x4d
    [    0.000000]  setup_arch+0x336/0x99e
    [    0.000000]  start_kernel+0x6f/0x4ee
    [    0.000000]  x86_64_start_reservations+0x24/0x26
    [    0.000000]  x86_64_start_kernel+0x6f/0x72
    [    0.000000]  secondary_startup_64+0xa4/0xb0
    
    This patch adds a check to prevent the panic.
    
    Link: http://lkml.kernel.org/r/1538239553-81805-1-git-send-email-zhe.he@windriver.com
    Cc: stable@vger.kernel.org
    Cc: rostedt@goodmis.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa4aec4d1e6542bfdaa51f332e03c00e1ef230e2
Author: Steve French <stfrench@microsoft.com>
Date:   Sun Oct 28 13:13:23 2018 -0500

    smb3: on kerberos mount if server doesn't specify auth type use krb5
    
    commit 926674de6705f0f1dbf29a62fd758d0977f535d6 upstream.
    
    Some servers (e.g. Azure) do not include a spnego blob in the SMB3
    negotiate protocol response, so on kerberos mounts ("sec=krb5")
    we can fail, as we expected the server to list its supported
    auth types (OIDs in the spnego blob in the negprot response).
    Change this so that on krb5 mounts we default to trying krb5 if the
    server doesn't list its supported protocol mechanisms.
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8c4202e4b1680570a0736e289964a7dcfd45a41
Author: Steve French <stfrench@microsoft.com>
Date:   Fri Oct 19 00:45:21 2018 -0500

    smb3: do not attempt cifs operation in smb3 query info error path
    
    commit 1e77a8c204c9d1b655c61751b8ad0fde22421dbb upstream.
    
    If backupuid mount option is sent, we can incorrectly retry
    (on access denied on query info) with a cifs (FindFirst) operation
    on an smb3 mount which causes the server to force the session close.
    
    We set backup intent on open so no need for this fallback.
    
    See kernel bugzilla 201435
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    CC: Stable <stable@vger.kernel.org>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 278223e1fa26e3580ab9bf2ffcdfb96fd57e24dd
Author: Steve French <stfrench@microsoft.com>
Date:   Sat Sep 15 23:04:41 2018 -0500

    smb3: allow stats which track session and share reconnects to be reset
    
    commit 2c887635cd6ab3af619dc2be94e5bf8f2e172b78 upstream.
    
    Currently, "echo 0 > /proc/fs/cifs/Stats" resets all of the stats
    except the session and share reconnect counts.  Fix it to
    reset those as well.
    
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 418f8bfb26e9aedce566d195e9c219247b00779a
Author: Andreas Kemnade <andreas@kemnade.info>
Date:   Sat Sep 22 21:20:54 2018 +0200

    w1: omap-hdq: fix missing bus unregister at removal
    
    commit a007734618fee1bf35556c04fa498d41d42c7301 upstream.
    
    The bus master was not removed after unloading the module
    or unbinding the driver. That lead to oopses like this
    
    [  127.842987] Unable to handle kernel paging request at virtual address bf01d04c
    [  127.850646] pgd = 70e3cd9a
    [  127.853698] [bf01d04c] *pgd=8f908811, *pte=00000000, *ppte=00000000
    [  127.860412] Internal error: Oops: 80000007 [#1] PREEMPT SMP ARM
    [  127.866668] Modules linked in: bq27xxx_battery overlay [last unloaded: omap_hdq]
    [  127.874542] CPU: 0 PID: 1022 Comm: w1_bus_master1 Not tainted 4.19.0-rc4-00001-g2d51da718324 #12
    [  127.883819] Hardware name: Generic OMAP36xx (Flattened Device Tree)
    [  127.890441] PC is at 0xbf01d04c
    [  127.893798] LR is at w1_search_process_cb+0x4c/0xfc
    [  127.898956] pc : [<bf01d04c>]    lr : [<c05f9580>]    psr: a0070013
    [  127.905609] sp : cf885f48  ip : bf01d04c  fp : ddf1e11c
    [  127.911132] r10: cf8fe040  r9 : c05f8d00  r8 : cf8fe040
    [  127.916656] r7 : 000000f0  r6 : cf8fe02c  r5 : cf8fe000  r4 : cf8fe01c
    [  127.923553] r3 : c05f8d00  r2 : 000000f0  r1 : cf8fe000  r0 : dde1ef10
    [  127.930450] Flags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    [  127.938018] Control: 10c5387d  Table: 8f8f0019  DAC: 00000051
    [  127.944091] Process w1_bus_master1 (pid: 1022, stack limit = 0x9135699f)
    [  127.951171] Stack: (0xcf885f48 to 0xcf886000)
    [  127.955810] 5f40:                   cf8fe000 00000000 cf884000 cf8fe090 000003e8 c05f8d00
    [  127.964477] 5f60: dde5fc34 c05f9700 ddf1e100 ddf1e540 cf884000 cf8fe000 c05f9694 00000000
    [  127.973114] 5f80: dde5fc34 c01499a4 00000000 ddf1e540 c0149874 00000000 00000000 00000000
    [  127.981781] 5fa0: 00000000 00000000 00000000 c01010e8 00000000 00000000 00000000 00000000
    [  127.990447] 5fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [  127.999114] 5fe0: 00000000 00000000 00000000 00000000 00000013 00000000 00000000 00000000
    [  128.007781] [<c05f9580>] (w1_search_process_cb) from [<c05f9700>] (w1_process+0x6c/0x118)
    [  128.016479] [<c05f9700>] (w1_process) from [<c01499a4>] (kthread+0x130/0x148)
    [  128.024047] [<c01499a4>] (kthread) from [<c01010e8>] (ret_from_fork+0x14/0x2c)
    [  128.031677] Exception stack(0xcf885fb0 to 0xcf885ff8)
    [  128.037017] 5fa0:                                     00000000 00000000 00000000 00000000
    [  128.045684] 5fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [  128.054351] 5fe0: 00000000 00000000 00000000 00000000 00000013 00000000
    [  128.061340] Code: bad PC value
    [  128.064697] ---[ end trace af066e33c0e14119 ]---
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andreas Kemnade <andreas@kemnade.info>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cdbf32ae7d23e2fc48ce015afdc64c8d4c37094
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Mon Sep 24 10:51:44 2018 +0300

    iio: adc: at91: fix wrong channel number in triggered buffer mode
    
    commit aea835f2dc8a682942b859179c49ad1841a6c8b9 upstream.
    
    When channels are registered, the hardware channel number is not the
    actual iio channel number.
    This is because the driver is probed with a certain number of accessible
    channels. Some pins are routed and some not, depending on the description of
    the board in the DT.
    Because of that, channels 0,1,2,3 can correspond to hardware channels
    2,3,4,5 for example.
    In the buffered triggered case, we need to do the translation accordingly.
    Fixed the channel number to stop reading the wrong channel.
    
    Fixes: 0e589d5fb ("ARM: AT91: IIO: Add AT91 ADC driver.")
    Cc: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4c1120e31824071b2f9959e53caf6ce0710e689
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Mon Sep 24 10:51:43 2018 +0300

    iio: adc: at91: fix acking DRDY irq on simple conversions
    
    commit bc1b45326223e7e890053cf6266357adfa61942d upstream.
    
    When doing simple conversions, the driver did not acknowledge the DRDY irq.
    If this irq status is not acked, it will be left pending, and as soon as a
    trigger is enabled, the irq handler will be called, it doesn't know why
    this status has occurred because no channel is pending, and then it will go
    int a irq loop and board will hang.
    To avoid this situation, read the LCDR after a raw conversion is done.
    
    Fixes: 0e589d5fb ("ARM: AT91: IIO: Add AT91 ADC driver.")
    Cc: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8221ff37fbb89559cf8881c8d4bdbb535fd3fd87
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Sep 22 00:58:02 2018 +0300

    iio: adc: imx25-gcq: Fix leak of device_node in mx25_gcq_setup_cfgs()
    
    commit d3fa21c73c391975488818b085b894c2980ea052 upstream.
    
    Leaving for_each_child_of_node loop we should release child device node,
    if it is not stored for future use.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    JC: I'm not sending this as a quick fix as it's been wrong for years,
    but good to pick up for stable after the merge window.
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Fixes: 6df2e98c3ea56 ("iio: adc: Add imx25-gcq ADC driver")
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcd4f42d000c7e332de3bf76bc0f1f720b1c56f1
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Fri Sep 28 11:23:40 2018 +0200

    iio: ad5064: Fix regulator handling
    
    commit 8911a43bc198877fad9f4b0246a866b26bb547ab upstream.
    
    The correct way to handle errors returned by regualtor_get() and friends is
    to propagate the error since that means that an regulator was specified,
    but something went wrong when requesting it.
    
    For handling optional regulators, e.g. when the device has an internal
    vref, regulator_get_optional() should be used to avoid getting the dummy
    regulator that the regulator core otherwise provides.
    
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33af6b490a1be6ce5a083eb961ec87ba289f5ddd
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Oct 30 15:07:32 2018 -0700

    kbuild: fix kernel/bounds.c 'W=1' warning
    
    commit 6a32c2469c3fbfee8f25bcd20af647326650a6cf upstream.
    
    Building any configuration with 'make W=1' produces a warning:
    
    kernel/bounds.c:16:6: warning: no previous prototype for 'foo' [-Wmissing-prototypes]
    
    When also passing -Werror, this prevents us from building any other files.
    Nobody ever calls the function, but we can't make it 'static' either
    since we want the compiler output.
    
    Calling it 'main' instead however avoids the warning, because gcc
    does not insist on having a declaration for main.
    
    Link: http://lkml.kernel.org/r/20181005083313.2088252-1-arnd@arndb.de
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reported-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Reviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Cc: David Laight <David.Laight@ACULAB.COM>
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dad142caf8b37d50e7a15ba69de530c9d1000b8b
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Wed Oct 17 17:42:10 2018 +0100

    KVM: arm64: Fix caching of host MDCR_EL2 value
    
    commit da5a3ce66b8bb51b0ea8a89f42aac153903f90fb upstream.
    
    At boot time, KVM stashes the host MDCR_EL2 value, but only does this
    when the kernel is not running in hyp mode (i.e. is non-VHE). In these
    cases, the stashed value of MDCR_EL2.HPMN happens to be zero, which can
    lead to CONSTRAINED UNPREDICTABLE behaviour.
    
    Since we use this value to derive the MDCR_EL2 value when switching
    to/from a guest, after a guest have been run, the performance counters
    do not behave as expected. This has been observed to result in accesses
    via PMXEVTYPER_EL0 and PMXEVCNTR_EL0 not affecting the relevant
    counters, resulting in events not being counted. In these cases, only
    the fixed-purpose cycle counter appears to work as expected.
    
    Fix this by always stashing the host MDCR_EL2 value, regardless of VHE.
    
    Cc: Christopher Dall <christoffer.dall@arm.com>
    Cc: James Morse <james.morse@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: stable@vger.kernel.org
    Fixes: 1e947bad0b63b351 ("arm64: KVM: Skip HYP setup when already running in HYP")
    Tested-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a665c4ab7796a5e518ecbda5455f9d44fc132ea5
Author: Punit Agrawal <punitagrawal@gmail.com>
Date:   Mon Oct 1 16:54:35 2018 +0100

    KVM: arm/arm64: Ensure only THP is candidate for adjustment
    
    commit fd2ef358282c849c193aa36dadbf4f07f7dcd29b upstream.
    
    PageTransCompoundMap() returns true for hugetlbfs and THP
    hugepages. This behaviour incorrectly leads to stage 2 faults for
    unsupported hugepage sizes (e.g., 64K hugepage with 4K pages) to be
    treated as THP faults.
    
    Tighten the check to filter out hugetlbfs pages. This also leads to
    consistently mapping all unsupported hugepage sizes as PTE level
    entries at stage 2.
    
    Signed-off-by: Punit Agrawal <punit.agrawal@arm.com>
    Reviewed-by: Suzuki Poulose <suzuki.poulose@arm.com>
    Cc: Christoffer Dall <christoffer.dall@arm.com>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: stable@vger.kernel.org # v4.13+
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d09d8eaa18067e38d74dfe9f9e6c578bfd32a4d9
Author: Ralph Campbell <rcampbell@nvidia.com>
Date:   Tue Oct 30 15:04:14 2018 -0700

    mm/hmm: fix race between hmm_mirror_unregister() and mmu_notifier callback
    
    commit 86a2d59841ab0b147ffc1b7b3041af87927cf312 upstream.
    
    In hmm_mirror_unregister(), mm->hmm is set to NULL and then
    mmu_notifier_unregister_no_release() is called.  That creates a small
    window where mmu_notifier can call mmu_notifier_ops with mm->hmm equal to
    NULL.  Fix this by first unregistering mmu notifier callbacks and then
    setting mm->hmm to NULL.
    
    Similarly in hmm_register(), set mm->hmm before registering mmu_notifier
    callbacks so callback functions always see mm->hmm set.
    
    Link: http://lkml.kernel.org/r/20181019160442.18723-4-jglisse@redhat.com
    Signed-off-by: Ralph Campbell <rcampbell@nvidia.com>
    Signed-off-by: Jérôme Glisse <jglisse@redhat.com>
    Reviewed-by: John Hubbard <jhubbard@nvidia.com>
    Reviewed-by: Jérôme Glisse <jglisse@redhat.com>
    Reviewed-by: Balbir Singh <bsingharora@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bf8e1e365ba3ff1743af3f9b1822042276b49e9
Author: Ralph Campbell <rcampbell@nvidia.com>
Date:   Tue Oct 30 15:04:11 2018 -0700

    mm/rmap: map_pte() was not handling private ZONE_DEVICE page properly
    
    commit aab8d0520e6e7c2a61f71195e6ce7007a4843afb upstream.
    
    Private ZONE_DEVICE pages use a special pte entry and thus are not
    present.  Properly handle this case in map_pte(), it is already handled in
    check_pte(), the map_pte() part was lost in some rebase most probably.
    
    Without this patch the slow migration path can not migrate back to any
    private ZONE_DEVICE memory to regular memory.  This was found after stress
    testing migration back to system memory.  This ultimatly can lead to the
    CPU constantly page fault looping on the special swap entry.
    
    Link: http://lkml.kernel.org/r/20181019160442.18723-3-jglisse@redhat.com
    Signed-off-by: Ralph Campbell <rcampbell@nvidia.com>
    Signed-off-by: Jérôme Glisse <jglisse@redhat.com>
    Reviewed-by: Balbir Singh <bsingharora@gmail.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d2ac8dbfd92d37bffeb37e38629cc96c16133a3
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Fri Oct 26 15:10:58 2018 -0700

    hugetlbfs: dirty pages as they are added to pagecache
    
    commit 22146c3ce98962436e401f7b7016a6f664c9ffb5 upstream.
    
    Some test systems were experiencing negative huge page reserve counts and
    incorrect file block counts.  This was traced to /proc/sys/vm/drop_caches
    removing clean pages from hugetlbfs file pagecaches.  When non-hugetlbfs
    explicit code removes the pages, the appropriate accounting is not
    performed.
    
    This can be recreated as follows:
     fallocate -l 2M /dev/hugepages/foo
     echo 1 > /proc/sys/vm/drop_caches
     fallocate -l 2M /dev/hugepages/foo
     grep -i huge /proc/meminfo
       AnonHugePages:         0 kB
       ShmemHugePages:        0 kB
       HugePages_Total:    2048
       HugePages_Free:     2047
       HugePages_Rsvd:    18446744073709551615
       HugePages_Surp:        0
       Hugepagesize:       2048 kB
       Hugetlb:         4194304 kB
     ls -lsh /dev/hugepages/foo
       4.0M -rw-r--r--. 1 root root 2.0M Oct 17 20:05 /dev/hugepages/foo
    
    To address this issue, dirty pages as they are added to pagecache.  This
    can easily be reproduced with fallocate as shown above.  Read faulted
    pages will eventually end up being marked dirty.  But there is a window
    where they are clean and could be impacted by code such as drop_caches.
    So, just dirty them all as they are added to the pagecache.
    
    Link: http://lkml.kernel.org/r/b5be45b8-5afe-56cd-9482-28384699a049@oracle.com
    Fixes: 6bda666a03f0 ("hugepages: fold find_or_alloc_pages into huge_no_page()")
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Acked-by: Mihcla Hocko <mhocko@suse.com>
    Reviewed-by: Khalid Aziz <khalid.aziz@oracle.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Cc: "Aneesh Kumar K . V" <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e484e62bc85793a40febf283f42b6480dc98cdd5
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Sep 7 14:33:24 2018 -0700

    ima: fix showing large 'violations' or 'runtime_measurements_count'
    
    commit 1e4c8dafbb6bf72fb5eca035b861e39c5896c2b7 upstream.
    
    The 12 character temporary buffer is not necessarily long enough to hold
    a 'long' value.  Increase it.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f3691794c1a53e7bb252f0ca32bb898f2dacc14
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Fri Oct 26 15:02:16 2018 -0700

    mm: /proc/pid/smaps_rollup: fix NULL pointer deref in smaps_pte_range()
    
    commit fa76da461bb0be13c8339d984dcf179151167c8f upstream.
    
    Leonardo reports an apparent regression in 4.19-rc7:
    
     BUG: unable to handle kernel NULL pointer dereference at 00000000000000f0
     PGD 0 P4D 0
     Oops: 0000 [#1] PREEMPT SMP PTI
     CPU: 3 PID: 6032 Comm: python Not tainted 4.19.0-041900rc7-lowlatency #201810071631
     Hardware name: LENOVO 80UG/Toronto 4A2, BIOS 0XCN45WW 08/09/2018
     RIP: 0010:smaps_pte_range+0x32d/0x540
     Code: 80 00 00 00 00 74 a9 48 89 de 41 f6 40 52 40 0f 85 04 02 00 00 49 2b 30 48 c1 ee 0c 49 03 b0 98 00 00 00 49 8b 80 a0 00 00 00 <48> 8b b8 f0 00 00 00 e8 b7 ef ec ff 48 85 c0 0f 84 71 ff ff ff a8
     RSP: 0018:ffffb0cbc484fb88 EFLAGS: 00010202
     RAX: 0000000000000000 RBX: 0000560ddb9e9000 RCX: 0000000000000000
     RDX: 0000000000000000 RSI: 0000000560ddb9e9 RDI: 0000000000000001
     RBP: ffffb0cbc484fbc0 R08: ffff94a5a227a578 R09: ffff94a5a227a578
     R10: 0000000000000000 R11: 0000560ddbbe7000 R12: ffffe903098ba728
     R13: ffffb0cbc484fc78 R14: ffffb0cbc484fcf8 R15: ffff94a5a2e9cf48
     FS:  00007f6dfb683740(0000) GS:ffff94a5aaf80000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00000000000000f0 CR3: 000000011c118001 CR4: 00000000003606e0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     Call Trace:
      __walk_page_range+0x3c2/0x6f0
      walk_page_vma+0x42/0x60
      smap_gather_stats+0x79/0xe0
      ? gather_pte_stats+0x320/0x320
      ? gather_hugetlb_stats+0x70/0x70
      show_smaps_rollup+0xcd/0x1c0
      seq_read+0x157/0x400
      __vfs_read+0x3a/0x180
      ? security_file_permission+0x93/0xc0
      ? security_file_permission+0x93/0xc0
      vfs_read+0x8f/0x140
      ksys_read+0x55/0xc0
      __x64_sys_read+0x1a/0x20
      do_syscall_64+0x5a/0x110
      entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Decoded code matched to local compilation+disassembly points to
    smaps_pte_entry():
    
            } else if (unlikely(IS_ENABLED(CONFIG_SHMEM) && mss->check_shmem_swap
                                                            && pte_none(*pte))) {
                    page = find_get_entry(vma->vm_file->f_mapping,
                                                    linear_page_index(vma, addr));
    
    Here, vma->vm_file is NULL.  mss->check_shmem_swap should be false in that
    case, however for smaps_rollup, smap_gather_stats() can set the flag true
    for one vma and leave it true for subsequent vma's where it should be
    false.
    
    To fix, reset the check_shmem_swap flag to false.  There's also related
    bug which sets mss->swap to shmem_swapped, which in the context of
    smaps_rollup overwrites any value accumulated from previous vma's.  Fix
    that as well.
    
    Note that the report suggests a regression between 4.17.19 and 4.19-rc7,
    which makes the 4.19 series ending with commit 258f669e7e88 ("mm:
    /proc/pid/smaps_rollup: convert to single value seq_file") suspicious.
    But the mss was reused for rollup since 493b0e9d945f ("mm: add
    /proc/pid/smaps_rollup") so let's play it safe with the stable backport.
    
    Link: http://lkml.kernel.org/r/555fbd1f-4ac9-0b58-dcd4-5dc4380ff7ca@suse.cz
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=201377
    Fixes: 493b0e9d945f ("mm: add /proc/pid/smaps_rollup")
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Reported-by: Leonardo Soares Müller <leozinho29_eu@hotmail.com>
    Tested-by: Leonardo Soares Müller <leozinho29_eu@hotmail.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Daniel Colascione <dancol@google.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2016e63b769222b66b9de83edf345348c0d2f2d1
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Tue Aug 7 08:22:25 2018 +0200

    crypto: speck - remove Speck
    
    commit 578bdaabd015b9b164842c3e8ace9802f38e7ecc upstream.
    
    These are unused, undesired, and have never actually been used by
    anybody. The original authors of this code have changed their mind about
    its inclusion. While originally proposed for disk encryption on low-end
    devices, the idea was discarded [1] in favor of something else before
    that could really get going. Therefore, this patch removes Speck.
    
    [1] https://marc.info/?l=linux-crypto-vger&m=153359499015659
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Acked-by: Eric Biggers <ebiggers@google.com>
    Cc: stable@vger.kernel.org
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4c47d9cf347ee13a2fb799dd8900caac586d38d
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon Oct 1 10:36:38 2018 +0200

    crypto: aegis/generic - fix for big endian systems
    
    commit 4a34e3c2f2f48f47213702a84a123af0fe21ad60 upstream.
    
    Use the correct __le32 annotation and accessors to perform the
    single round of AES encryption performed inside the AEGIS transform.
    Otherwise, tcrypt reports:
    
      alg: aead: Test 1 failed on encryption for aegis128-generic
      00000000: 6c 25 25 4a 3c 10 1d 27 2b c1 d4 84 9a ef 7f 6e
      alg: aead: Test 1 failed on encryption for aegis128l-generic
      00000000: cd c6 e3 b8 a0 70 9d 8e c2 4f 6f fe 71 42 df 28
      alg: aead: Test 1 failed on encryption for aegis256-generic
      00000000: aa ed 07 b1 96 1d e9 e6 f2 ed b5 8e 1c 5f dc 1c
    
    Fixes: f606a88e5823 ("crypto: aegis - Add generic AEGIS AEAD implementations")
    Cc: <stable@vger.kernel.org> # v4.18+
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Reviewed-by: Ondrej Mosnacek <omosnace@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 805fd900bda2b7e7d147aed506e892e67b6f0aac
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon Oct 1 10:36:37 2018 +0200

    crypto: morus/generic - fix for big endian systems
    
    commit 5a8dedfa3276e88c5865f265195d63d72aec3e72 upstream.
    
    Omit the endian swabbing when folding the lengths of the assoc and
    crypt input buffers into the state to finalize the tag. This is not
    necessary given that the memory representation of the state is in
    machine native endianness already.
    
    This fixes an error reported by tcrypt running on a big endian system:
    
      alg: aead: Test 2 failed on encryption for morus640-generic
      00000000: a8 30 ef fb e6 26 eb 23 b0 87 dd 98 57 f3 e1 4b
      00000010: 21
      alg: aead: Test 2 failed on encryption for morus1280-generic
      00000000: 88 19 1b fb 1c 29 49 0e ee 82 2f cb 97 a6 a5 ee
      00000010: 5f
    
    Fixes: 396be41f16fd ("crypto: morus - Add generic MORUS AEAD implementations")
    Cc: <stable@vger.kernel.org> # v4.18+
    Reviewed-by: Ondrej Mosnacek <omosnace@redhat.com>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9899e0e4528e751739b5144a25e3957760ff1928
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Sep 5 09:18:43 2018 -0400

    crypto: aesni - don't use GFP_ATOMIC allocation if the request doesn't cross a page in gcm
    
    commit a788848116454d753b13a4888e0e31ada3c4d393 upstream.
    
    This patch fixes gcmaes_crypt_by_sg so that it won't use memory
    allocation if the data doesn't cross a page boundary.
    
    Authenticated encryption may be used by dm-crypt. If the encryption or
    decryption fails, it would result in I/O error and filesystem corruption.
    The function gcmaes_crypt_by_sg is using GFP_ATOMIC allocation that can
    fail anytime. This patch fixes the logic so that it won't attempt the
    failing allocation if the data doesn't cross a page boundary.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c00600a96550216a4b6a6c77c2c641691d4aa1a6
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Wed Sep 12 16:20:48 2018 +0300

    crypto: tcrypt - fix ghash-generic speed test
    
    commit 331351f89c36bf7d03561a28b6f64fa10a9f6f3a upstream.
    
    ghash is a keyed hash algorithm, thus setkey needs to be called.
    Otherwise the following error occurs:
    $ modprobe tcrypt mode=318 sec=1
    testing speed of async ghash-generic (ghash-generic)
    tcrypt: test  0 (   16 byte blocks,   16 bytes per update,   1 updates):
    tcrypt: hashing failed ret=-126
    
    Cc: <stable@vger.kernel.org> # 4.6+
    Fixes: 0660511c0bee ("crypto: tcrypt - Use ahash")
    Tested-by: Franck Lenormand <franck.lenormand@nxp.com>
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6aa3369f176858ca4900320bddbd4d5d5722e09b
Author: Ondrej Mosnacek <omosnace@redhat.com>
Date:   Thu Sep 13 10:51:31 2018 +0200

    crypto: lrw - Fix out-of bounds access on counter overflow
    
    commit fbe1a850b3b1522e9fc22319ccbbcd2ab05328d2 upstream.
    
    When the LRW block counter overflows, the current implementation returns
    128 as the index to the precomputed multiplication table, which has 128
    entries. This patch fixes it to return the correct value (127).
    
    Fixes: 64470f1b8510 ("[CRYPTO] lrw: Liskov Rivest Wagner, a tweakable narrow block cipher mode")
    Cc: <stable@vger.kernel.org> # 2.6.20+
    Reported-by: Eric Biggers <ebiggers@kernel.org>
    Signed-off-by: Ondrej Mosnacek <omosnace@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f0654d9a878add21b8140335b78bd3aaff9b252
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Oct 10 20:29:44 2018 -0500

    signal: Guard against negative signal numbers in copy_siginfo_from_user32
    
    commit a36700589b85443e28170be59fa11c8a104130a5 upstream.
    
    While fixing an out of bounds array access in known_siginfo_layout
    reported by the kernel test robot it became apparent that the same bug
    exists in siginfo_layout and affects copy_siginfo_from_user32.
    
    The straight forward fix that makes guards against making this mistake
    in the future and should keep the code size small is to just take an
    unsigned signal number instead of a signed signal number, as I did to
    fix known_siginfo_layout.
    
    Cc: stable@vger.kernel.org
    Fixes: cc731525f26a ("signal: Remove kernel interal si_code magic")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 071161f0cce48cb7b72215fe02b71b4985f2f26a
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Thu Sep 13 11:28:01 2018 +0200

    signal/GenWQE: Fix sending of SIGKILL
    
    commit 0ab93e9c99f8208c0a1a7b7170c827936268c996 upstream.
    
    The genweq_add_file and genwqe_del_file by caching current without
    using reference counting embed the assumption that a file descriptor
    will never be passed from one process to another.  It even embeds the
    assumption that the the thread that opened the file will be in
    existence when the process terminates.   Neither of which are
    guaranteed to be true.
    
    Therefore replace caching the task_struct of the opener with
    pid of the openers thread group id.  All the knowledge of the
    opener is used for is as the target of SIGKILL and a SIGKILL
    will kill the entire process group.
    
    Rename genwqe_force_sig to genwqe_terminate, remove it's unncessary
    signal argument, update it's ownly caller, and use kill_pid
    instead of force_sig.
    
    The work force_sig does in changing signal handling state is not
    relevant to SIGKILL sent as SEND_SIG_PRIV.  The exact same processess
    will be killed just with less work, and less confusion.  The work done
    by force_sig is really only needed for handling syncrhonous
    exceptions.
    
    It will still be possible to cause genwqe_device_remove to wait
    8 seconds by passing a file descriptor to another process but
    the possible user after free is fixed.
    
    Fixes: eaf4722d4645 ("GenWQE Character device and DDCB queue")
    Cc: stable@vger.kernel.org
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Frank Haverkamp <haver@linux.vnet.ibm.com>
    Cc: Joerg-Stephan Vogt <jsvogt@de.ibm.com>
    Cc: Michael Jung <mijung@gmx.net>
    Cc: Michael Ruettger <michael@ibmra.de>
    Cc: Kleber Sacilotto de Souza <klebers@linux.vnet.ibm.com>
    Cc: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Cc: Eberhard S. Amann <esa@linux.vnet.ibm.com>
    Cc: Gabriel Krisman Bertazi <krisman@linux.vnet.ibm.com>
    Cc: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5d415583c307818e62a34ca16d37c93e003fb34
Author: Keith Busch <keith.busch@intel.com>
Date:   Tue May 8 10:00:22 2018 -0600

    PCI: vmd: White list for fast interrupt handlers
    
    commit a7f58b9ecfd3c0f63703ec10f4a592cc38dbd1b8 upstream.
    
    Devices with slow interrupt handlers are significantly harming
    performance when their interrupt vector is shared with a fast device.
    
    Create a class code white list for devices with known fast interrupt
    handlers and let all other devices share a single vector so that they
    don't interfere with performance.
    
    At the moment, only the NVM Express class code is on the list, but more
    may be added if VMD users desire to use other low-latency devices in
    these domains.
    
    Signed-off-by: Keith Busch <keith.busch@intel.com>
    [lorenzo.pieralisi@arm.com: changelog]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Acked-by: Jon Derrick: <jonathan.derrick@intel.com>
    Cc: "Heitke, Kenneth" <kenneth.heitke@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a06dfc8d5e184b48972a5e8c44385ab787b8e5b3
Author: Bin Meng <bmeng.cn@gmail.com>
Date:   Wed Sep 26 08:14:01 2018 -0700

    PCI: Add Device IDs for Intel GPU "spurious interrupt" quirk
    
    commit d0c9606b31a21028fb5b753c8ad79626292accfd upstream.
    
    Add Device IDs to the Intel GPU "spurious interrupt" quirk table.
    
    For these devices, unplugging the VGA cable and plugging it in again causes
    spurious interrupts from the IGD.  Linux eventually disables the interrupt,
    but of course that disables any other devices sharing the interrupt.
    
    The theory is that this is a VGA BIOS defect: it should have disabled the
    IGD interrupt but failed to do so.
    
    See f67fd55fa96f ("PCI: Add quirk for still enabled interrupts on Intel
    Sandy Bridge GPUs") and 7c82126a94e6 ("PCI: Add new ID for Intel GPU
    "spurious interrupt" quirk") for some history.
    
    [bhelgaas: See link below for discussion about how to fix this more
    generically instead of adding device IDs for every new Intel GPU.  I hope
    this is the last patch to add device IDs.]
    
    Link: https://lore.kernel.org/linux-pci/1537974841-29928-1-git-send-email-bmeng.cn@gmail.com
    Signed-off-by: Bin Meng <bmeng.cn@gmail.com>
    [bhelgaas: changelog]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org      # v3.4+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c34f34ce93bbd4efc18b75daf4e6fa250ed8df9f
Author: Lukas Wunner <lukas@wunner.de>
Date:   Tue Sep 4 12:34:18 2018 -0500

    PCI/ASPM: Fix link_state teardown on device removal
    
    commit aeae4f3e5c38d47bdaef50446dc0ec857307df68 upstream.
    
    Upon removal of the last device on a bus, the link_state of the bridge
    leading to that bus is sought to be torn down by having pci_stop_dev()
    call pcie_aspm_exit_link_state().
    
    When ASPM was originally introduced by commit 7d715a6c1ae5 ("PCI: add
    PCI Express ASPM support"), it determined whether the device being
    removed is the last one by calling list_empty() on the bridge's
    subordinate devices list.  That didn't work because the device is only
    removed from the list slightly later in pci_destroy_dev().
    
    Commit 3419c75e15f8 ("PCI: properly clean up ASPM link state on device
    remove") attempted to fix it by calling list_is_last(), but that's not
    correct either because it checks whether the device is at the *end* of
    the list, not whether it's the last one *left* in the list.  If the user
    removes the device which happens to be at the end of the list via sysfs
    but other devices are preceding the device in the list, the link_state
    is torn down prematurely.
    
    The real fix is to move the invocation of pcie_aspm_exit_link_state() to
    pci_destroy_dev() and reinstate the call to list_empty().  Remove a
    duplicate check for dev->bus->self because pcie_aspm_exit_link_state()
    already contains an identical check.
    
    Fixes: 7d715a6c1ae5 ("PCI: add PCI Express ASPM support")
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Shaohua Li <shaohua.li@intel.com>
    Cc: stable@vger.kernel.org # v2.6.26
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e952918d04a1182add87704f09ec684e37cb984
Author: Vignesh R <vigneshr@ti.com>
Date:   Tue Sep 25 10:51:51 2018 +0530

    ARM: dts: dra7: Fix up unaligned access setting for PCIe EP
    
    commit 6d0af44a82be87c13f2320821e9fbb8b8cf5a56f upstream.
    
    Bit positions of PCIE_SS1_AXI2OCP_LEGACY_MODE_ENABLE and
    PCIE_SS1_AXI2OCP_LEGACY_MODE_ENABLE in CTRL_CORE_SMA_SW_7 are
    incorrectly documented in the TRM. In fact, the bit positions are
    swapped. Update the DT bindings for PCIe EP to reflect the same.
    
    Fixes: d23f3839fe97 ("ARM: dts: DRA7: Add pcie1 dt node for EP mode")
    Cc: stable@vger.kernel.org
    Signed-off-by: Vignesh R <vigneshr@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5074cd8b99369854e99d15bec52fe2b213fea796
Author: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
Date:   Tue Oct 9 10:20:25 2018 -0700

    EDAC, skx_edac: Fix logical channel intermediate decoding
    
    commit 8f18973877204dc8ca4ce1004a5d28683b9a7086 upstream.
    
    The code "lchan = (lchan << 1) | ~lchan" for logical channel
    intermediate decoding is wrong. The wrong intermediate decoding
    result is {0xffffffff, 0xfffffffe}.
    
    Fix it by replacing '~' with '!'. The correct intermediate
    decoding result is {0x1, 0x2}.
    
    Signed-off-by: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    CC: Aristeu Rozanski <aris@redhat.com>
    CC: Mauro Carvalho Chehab <mchehab@kernel.org>
    CC: linux-edac <linux-edac@vger.kernel.org>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20181009172025.18594-1-tony.luck@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0fc82d940a5a86b20e23fdc44e16e42259ab6dd
Author: Tony Luck <tony.luck@intel.com>
Date:   Fri Sep 28 14:39:34 2018 -0700

    EDAC, {i7core,sb,skx}_edac: Fix uncorrected error counting
    
    commit 432de7fd7630c84ad24f1c2acd1e3bb4ce3741ca upstream.
    
    The count of errors is picked up from bits 52:38 of the machine check
    bank status register. But this is the count of *corrected* errors. If an
    uncorrected error is being logged, the h/w sets this field to 0. Which
    means that when edac_mc_handle_error() is called, the EDAC core will
    carefully add zero to the appropriate uncorrected error counts.
    
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    [ Massage commit message. ]
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: stable@vger.kernel.org
    Cc: Aristeu Rozanski <aris@redhat.com>
    Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
    Cc: Qiuxu Zhuo <qiuxu.zhuo@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20180928213934.19890-1-tony.luck@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ba33971125cf6b3f09be82994bda30af3d260b8
Author: Michael Jin <mikhail.jin@gmail.com>
Date:   Thu Aug 16 15:28:40 2018 -0400

    EDAC, amd64: Add Family 17h, models 10h-2fh support
    
    commit 8960de4a5ca7980ed1e19e7ca5a774d3b7a55c38 upstream.
    
    Add new device IDs for family 17h, models 10h-2fh.
    
    This is required by amd64_edac_mod in order to properly detect PCI
    device functions 0 and 6.
    
    Signed-off-by: Michael Jin <mikhail.jin@gmail.com>
    Reviewed-by: Yazen Ghannam <Yazen.Ghannam@amd.com>
    Cc: <stable@vger.kernel.org>
    Link: http://lkml.kernel.org/r/20180816192840.31166-1-mikhail.jin@gmail.com
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d08463386852bb3f60ad6579d2c72e49fcc64869
Author: Breno Leitao <leitao@debian.org>
Date:   Fri Oct 19 17:01:33 2018 -0300

    HID: hiddev: fix potential Spectre v1
    
    commit f11274396a538b31bc010f782e05c2ce3f804c13 upstream.
    
    uref->usage_index can be indirectly controlled by userspace, hence leading
    to a potential exploitation of the Spectre variant 1 vulnerability.
    
    This field is used as an array index by the hiddev_ioctl_usage() function,
    when 'cmd' is either HIDIOCGCOLLECTIONINDEX, HIDIOCGUSAGES or
    HIDIOCSUSAGES.
    
    For cmd == HIDIOCGCOLLECTIONINDEX case, uref->usage_index is compared to
    field->maxusage and then used as an index to dereference field->usage
    array. The same thing happens to the cmd == HIDIOC{G,S}USAGES cases, where
    uref->usage_index is checked against an array maximum value and then it is
    used as an index in an array.
    
    This is a summary of the HIDIOCGCOLLECTIONINDEX case, which matches the
    traditional Spectre V1 first load:
    
            copy_from_user(uref, user_arg, sizeof(*uref))
            if (uref->usage_index >= field->maxusage)
                    goto inval;
            i = field->usage[uref->usage_index].collection_index;
            return i;
    
    This patch fixes this by sanitizing field uref->usage_index before using it
    to index field->usage (HIDIOCGCOLLECTIONINDEX) or field->value in
    HIDIOC{G,S}USAGES arrays, thus, avoiding speculation in the first load.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Breno Leitao <leitao@debian.org>
    v2: Contemplate cmd == HIDIOC{G,S}USAGES case
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fafa54248a2f33865ed87a7a392bd4c7ffc5ffc8
Author: Jason Gerecke <killertofu@gmail.com>
Date:   Wed Oct 10 13:40:26 2018 -0700

    HID: wacom: Work around HID descriptor bug in DTK-2451 and DTH-2452
    
    commit 11db8173dbab7a94cf5ba5225fcedbfc0f3b7e54 upstream.
    
    The DTK-2451 and DTH-2452 have a buggy HID descriptor which incorrectly
    contains a Cintiq-like report, complete with pen tilt, rotation, twist, serial
    number, etc. The hardware doesn't actually support this data but our driver
    duitifully sets up the device as though it does. To ensure userspace has a
    correct view of devices without updated firmware, we clean up this incorrect
    data in wacom_setup_device_quirks.
    
    We're also careful to clear the WACOM_QUIRK_TOOLSERIAL flag since its presence
    causes the driver to wait for serial number information (via
    wacom_wac_pen_serial_enforce) that never comes, resulting in
    the pen being non-responsive.
    
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Fixes: 8341720642 ("HID: wacom: Queue events with missing type/serial data for later processing")
    Cc: stable@vger.kernel.org # v4.16+
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f076021ce7e638d16ed45a0a959bdaf37f876a8
Author: Stephen Smalley <sds@tycho.nsa.gov>
Date:   Tue Sep 4 16:51:36 2018 -0400

    selinux: fix mounting of cgroup2 under older policies
    
    commit 7bb185edb0306bb90029a5fa6b9cff900ffdbf4b upstream.
    
    commit 901ef845fa2469c ("selinux: allow per-file labeling for cgroupfs")
    broke mounting of cgroup2 under older SELinux policies which lacked
    a genfscon rule for cgroup2.  This prevents mounting of cgroup2 even
    when SELinux is permissive.
    
    Change the handling when there is no genfscon rule in policy to
    just mark the inode unlabeled and not return an error to the caller.
    This permits mounting and access if allowed by policy, e.g. to
    unconfined domains.
    
    I also considered changing the behavior of security_genfs_sid() to
    never return -ENOENT, but the current behavior is relied upon by
    other callers to perform caller-specific handling.
    
    Fixes: 901ef845fa2469c ("selinux: allow per-file labeling for cgroupfs")
    CC: <stable@vger.kernel.org>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Reported-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>
    Tested-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dabb79bd260295c81438f7e2e33522c2bae7810e
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Fri Oct 12 09:28:09 2018 -0400

    ext4: fix use-after-free race in ext4_remount()'s error path
    
    commit 33458eaba4dfe778a426df6a19b7aad2ff9f7eec upstream.
    
    It's possible for ext4_show_quota_options() to try reading
    s_qf_names[i] while it is being modified by ext4_remount() --- most
    notably, in ext4_remount's error path when the original values of the
    quota file name gets restored.
    
    Reported-by: syzbot+a2872d6feea6918008a9@syzkaller.appspotmail.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org # 3.2+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 798d9a4c4d37b752ab1f2961d3ea96ce00cfce03
Author: Wang Shilong <wshilong@ddn.com>
Date:   Wed Oct 3 12:19:21 2018 -0400

    ext4: propagate error from dquot_initialize() in EXT4_IOC_FSSETXATTR
    
    commit 182a79e0c17147d2c2d3990a9a7b6b58a1561c7a upstream.
    
    We return most failure of dquota_initialize() except
    inode evict, this could make a bit sense, for example
    we allow file removal even quota files are broken?
    
    But it dosen't make sense to allow setting project
    if quota files etc are broken.
    
    Signed-off-by: Wang Shilong <wshilong@ddn.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c68737e3e4c3ebcdf2836719b2e5198960a1cbab
Author: Wang Shilong <wangshilong1991@gmail.com>
Date:   Wed Oct 3 10:33:32 2018 -0400

    ext4: fix setattr project check in fssetxattr ioctl
    
    commit dc7ac6c4cae3b58724c2f1e21a7c05ce19ecd5a8 upstream.
    
    Currently, project quota could be changed by fssetxattr
    ioctl, and existed permission check inode_owner_or_capable()
    is obviously not enough, just think that common users could
    change project id of file, that could make users to
    break project quota easily.
    
    This patch try to follow same regular of xfs project
    quota:
    
    "Project Quota ID state is only allowed to change from
    within the init namespace. Enforce that restriction only
    if we are trying to change the quota ID state.
    Everything else is allowed in user namespaces."
    
    Besides that, check and set project id'state should
    be an atomic operation, protect whole operation with
    inode lock, ext4_ioctl_setproject() is only used for
    ioctl EXT4_IOC_FSSETXATTR, we have held mnt_want_write_file()
    before ext4_ioctl_setflags(), and ext4_ioctl_setproject()
    is called after ext4_ioctl_setflags(), we could share
    codes, so remove it inside ext4_ioctl_setproject().
    
    Signed-off-by: Wang Shilong <wshilong@ddn.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5dd65242be71bcc98979809b7bc6f3989da535a6
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Tue Oct 2 21:18:45 2018 -0400

    ext4: initialize retries variable in ext4_da_write_inline_data_begin()
    
    commit 625ef8a3acd111d5f496d190baf99d1a815bd03e upstream.
    
    Variable retries is not initialized in ext4_da_write_inline_data_begin()
    which can lead to nondeterministic number of retries in case we hit
    ENOSPC. Initialize retries to zero as we do everywhere else.
    
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Fixes: bc0ca9df3b2a ("ext4: retry allocation when inline->extent conversion failed")
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34e60cb2f8ea90f0e957dec492c5bc2cca3f56d6
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Tue Oct 2 18:21:19 2018 -0400

    ext4: fix EXT4_IOC_SWAP_BOOT
    
    commit 18aded17492088962ef43f00825179598b3e8c58 upstream.
    
    The code EXT4_IOC_SWAP_BOOT ioctl hasn't been updated in a while, and
    it's a bit broken with respect to more modern ext4 kernels, especially
    metadata checksums.
    
    Other problems fixed with this commit:
    
    * Don't allow installing a DAX, swap file, or an encrypted file as a
      boot loader.
    
    * Respect the immutable and append-only flags.
    
    * Wait until any DIO operations are finished *before* calling
      truncate_inode_pages().
    
    * Don't swap inode->i_flags, since these flags have nothing to do with
      the inode blocks --- and it will give the IMA/audit code heartburn
      when the inode is evicted.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Reported-by: syzbot+e81ccd4744c6c4f71354@syzkaller.appspotmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d543195430fa420cc21b20a9e6dde7aebc241f68
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Oct 13 00:19:13 2018 -0400

    gfs2_meta: ->mount() can get NULL dev_name
    
    commit 3df629d873f8683af6f0d34dfc743f637966d483 upstream.
    
    get in sync with mount_bdev() handling of the same
    
    Reported-by: syzbot+c54f8e94e6bba03b04e9@syzkaller.appspotmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08a394fe1c042826ef6646875ceea544f5c8ade2
Author: Jan Kara <jack@suse.cz>
Date:   Fri Oct 5 18:44:40 2018 -0400

    jbd2: fix use after free in jbd2_log_do_checkpoint()
    
    commit ccd3c4373eacb044eb3832966299d13d2631f66f upstream.
    
    The code cleaning transaction's lists of checkpoint buffers has a bug
    where it increases bh refcount only after releasing
    journal->j_list_lock. Thus the following race is possible:
    
    CPU0                                    CPU1
    jbd2_log_do_checkpoint()
                                            jbd2_journal_try_to_free_buffers()
                                              __journal_try_to_free_buffer(bh)
      ...
      while (transaction->t_checkpoint_io_list)
      ...
        if (buffer_locked(bh)) {
    
    <-- IO completes now, buffer gets unlocked -->
    
          spin_unlock(&journal->j_list_lock);
                                                spin_lock(&journal->j_list_lock);
                                                __jbd2_journal_remove_checkpoint(jh);
                                                spin_unlock(&journal->j_list_lock);
                                              try_to_free_buffers(page);
          get_bh(bh) <-- accesses freed bh
    
    Fix the problem by grabbing bh reference before unlocking
    journal->j_list_lock.
    
    Fixes: dc6e8d669cf5 ("jbd2: don't call get_bh() before calling __jbd2_journal_remove_checkpoint()")
    Fixes: be1158cc615f ("jbd2: fold __process_buffer() into jbd2_log_do_checkpoint()")
    Reported-by: syzbot+7f4a27091759e2fe7453@syzkaller.appspotmail.com
    CC: stable@vger.kernel.org
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54baa22b41dcabf10d955a7a157d6477c23e1b41
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Aug 14 15:33:02 2018 -0700

    IB/rxe: Revise the ib_wr_opcode enum
    
    commit 9a59739bd01f77db6fbe2955a4fce165f0f43568 upstream.
    
    This enum has become part of the uABI, as both RXE and the
    ib_uverbs_post_send() command expect userspace to supply values from this
    enum. So it should be properly placed in include/uapi/rdma.
    
    In userspace this enum is called 'enum ibv_wr_opcode' as part of
    libibverbs.h. That enum defines different values for IB_WR_LOCAL_INV,
    IB_WR_SEND_WITH_INV, and IB_WR_LSO. These were introduced (incorrectly, it
    turns out) into libiberbs in 2015.
    
    The kernel has changed its mind on the numbering for several of the IB_WC
    values over the years, but has remained stable on IB_WR_LOCAL_INV and
    below.
    
    Based on this we can conclude that there is no real user space user of the
    values beyond IB_WR_ATOMIC_FETCH_AND_ADD, as they have never worked via
    rdma-core. This is confirmed by inspection, only rxe uses the kernel enum
    and implements the latter operations. rxe has clearly never worked with
    these attributes from userspace. Other drivers that support these opcodes
    implement the functionality without calling out to the kernel.
    
    To make IB_WR_SEND_WITH_INV and related work for RXE in userspace we
    choose to renumber the IB_WR enum in the kernel to match the uABI that
    userspace has bee using since before Soft RoCE was merged. This is an
    overall simpler configuration for the whole software stack, and obviously
    can't break anything existing.
    
    Reported-by: Seth Howell <seth.howell@intel.com>
    Tested-by: Seth Howell <seth.howell@intel.com>
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5855f20512985c935087cc3e08c2cbeb91cce87e
Author: Artemy Kovalyov <artemyko@mellanox.com>
Date:   Mon Oct 15 14:13:35 2018 +0300

    IB/mlx5: Fix MR cache initialization
    
    commit 013c2403bf32e48119aeb13126929f81352cc7ac upstream.
    
    Schedule MR cache work only after bucket was initialized.
    
    Cc: <stable@vger.kernel.org> # 4.10
    Fixes: 49780d42dfc9 ("IB/mlx5: Expose MR cache for mlx5_ib")
    Signed-off-by: Artemy Kovalyov <artemyko@mellanox.com>
    Reviewed-by: Majd Dibbiny <majd@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a270b59969ad7edb53cbf25bcdec9a373ce53b5
Author: Daniel Mack <daniel@zonque.org>
Date:   Thu Oct 11 20:32:05 2018 +0200

    ASoC: sta32x: set ->component pointer in private struct
    
    commit 747df19747bc9752cd40b9cce761e17a033aa5c2 upstream.
    
    The ESD watchdog code in sta32x_watchdog() dereferences the pointer
    which is never assigned.
    
    This is a regression from a1be4cead9b950 ("ASoC: sta32x: Convert to direct
    regmap API usage.") which went unnoticed since nobody seems to use that ESD
    workaround.
    
    Fixes: a1be4cead9b950 ("ASoC: sta32x: Convert to direct regmap API usage.")
    Signed-off-by: Daniel Mack <daniel@zonque.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31a02dd4ee74bf1ee9c7f71bd9161e8da46e9968
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Oct 3 19:31:44 2018 +0200

    ASoC: intel: skylake: Add missing break in skl_tplg_get_token()
    
    commit 9c80c5a8831471e0a3e139aad1b0d4c0fdc50b2f upstream.
    
    skl_tplg_get_token() misses a break in the big switch() block for
    SKL_TKN_U8_CORE_ID entry.
    Spotted nicely by -Wimplicit-fallthrough compiler option.
    
    Fixes: 6277e83292a2 ("ASoC: Intel: Skylake: Parse vendor tokens to build module data")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db1af96418677cca25b94ad23133c69da447b609
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Oct 4 16:32:08 2018 -0700

    libnvdimm, pmem: Fix badblocks population for 'raw' namespaces
    
    commit 91ed7ac444ef749603a95629a5ec483988c4f14b upstream.
    
    The driver is only initializing bb_res in the devm_memremap_pages()
    paths, but the raw namespace case is passing an uninitialized bb_res to
    nvdimm_badblocks_populate().
    
    Fixes: e8d513483300 ("memremap: change devm_memremap_pages interface...")
    Cc: <stable@vger.kernel.org>
    Cc: Christoph Hellwig <hch@lst.de>
    Reported-by: Jacek Zloch <jacek.zloch@intel.com>
    Reported-by: Krzysztof Rusocki <krzysztof.rusocki@intel.com>
    Reviewed-by: Vishal Verma <vishal.l.verma@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 847179b1261a2d27970b966a8dc72cdb0483f783
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Sep 27 15:01:55 2018 -0700

    libnvdimm, region: Fail badblocks listing for inactive regions
    
    commit 5d394eee2c102453278d81d9a7cf94c80253486a upstream.
    
    While experimenting with region driver loading the following backtrace
    was triggered:
    
     INFO: trying to register non-static key.
     the code is fine but needs lockdep annotation.
     turning off the locking correctness validator.
     [..]
     Call Trace:
      dump_stack+0x85/0xcb
      register_lock_class+0x571/0x580
      ? __lock_acquire+0x2ba/0x1310
      ? kernfs_seq_start+0x2a/0x80
      __lock_acquire+0xd4/0x1310
      ? dev_attr_show+0x1c/0x50
      ? __lock_acquire+0x2ba/0x1310
      ? kernfs_seq_start+0x2a/0x80
      ? lock_acquire+0x9e/0x1a0
      lock_acquire+0x9e/0x1a0
      ? dev_attr_show+0x1c/0x50
      badblocks_show+0x70/0x190
      ? dev_attr_show+0x1c/0x50
      dev_attr_show+0x1c/0x50
    
    This results from a missing successful call to devm_init_badblocks()
    from nd_region_probe(). Block attempts to show badblocks while the
    region is not enabled.
    
    Fixes: 6a6bef90425e ("libnvdimm: add mechanism to publish badblocks...")
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e31a8418c8df7e6771414f99ed3d95ba8aca4e05
Author: Alexander Duyck <alexander.h.duyck@linux.intel.com>
Date:   Tue Sep 25 13:53:02 2018 -0700

    libnvdimm: Hold reference on parent while scheduling async init
    
    commit b6eae0f61db27748606cc00dafcfd1e2c032f0a5 upstream.
    
    Unlike asynchronous initialization in the core we have not yet associated
    the device with the parent, and as such the device doesn't hold a reference
    to the parent.
    
    In order to resolve that we should be holding a reference on the parent
    until the asynchronous initialization has completed.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 4d88a97aa9e8 ("libnvdimm: ...base ... infrastructure")
    Signed-off-by: Alexander Duyck <alexander.h.duyck@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ebefc8202c86b538abc6deaabf3c2ded4ad1089
Author: Christian Lamparter <chunkeey@gmail.com>
Date:   Sun Oct 14 23:28:50 2018 +0200

    dmaengine: ppc4xx: fix off-by-one build failure
    
    commit 27d8d2d7a9b7eb05c4484b74b749eaee7b50b845 upstream.
    
    There are two poly_store, but one should have been poly_show.
    
    |adma.c:4382:16: error: conflicting types for 'poly_store'
    | static ssize_t poly_store(struct device_driver *dev, const char *buf,
    |                ^~~~~~~~~~
    |adma.c:4363:16: note: previous definition of 'poly_store' was here
    | static ssize_t poly_store(struct device_driver *dev, char *buf)
    |                ^~~~~~~~~~
    
    CC: stable@vger.kernel.org
    Fixes: 13efe1a05384 ("dmaengine: ppc4xx: remove DRIVER_ATTR() usage")
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 389d46234082648806d8df0f526253761b56c583
Author: Stefan Nuernberger <snu@amazon.com>
Date:   Mon Sep 17 19:46:53 2018 +0200

    net/ipv4: defensive cipso option parsing
    
    commit 076ed3da0c9b2f88d9157dbe7044a45641ae369e upstream.
    
    commit 40413955ee26 ("Cipso: cipso_v4_optptr enter infinite loop") fixed
    a possible infinite loop in the IP option parsing of CIPSO. The fix
    assumes that ip_options_compile filtered out all zero length options and
    that no other one-byte options beside IPOPT_END and IPOPT_NOOP exist.
    While this assumption currently holds true, add explicit checks for zero
    length and invalid length options to be safe for the future. Even though
    ip_options_compile should have validated the options, the introduction of
    new one-byte options can still confuse this code without the additional
    checks.
    
    Signed-off-by: Stefan Nuernberger <snu@amazon.com>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Simon Veith <sveith@amazon.de>
    Cc: stable@vger.kernel.org
    Acked-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a11eb15106171962e480d318beed386c0260f659
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Sat Oct 13 09:46:08 2018 +0300

    iwlwifi: mvm: check return value of rs_rate_from_ucode_rate()
    
    commit 3d71c3f1f50cf309bd20659422af549bc784bfff upstream.
    
    The rs_rate_from_ucode_rate() function may return -EINVAL if the rate
    is invalid, but none of the callsites check for the error, potentially
    making us access arrays with index IWL_RATE_INVALID, which is larger
    than the arrays, causing an out-of-bounds access.  This will trigger
    KASAN warnings, such as the one reported in the bugzilla issue
    mentioned below.
    
    This fixes https://bugzilla.kernel.org/show_bug.cgi?id=200659
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 255768cf1b571a4f8d0ac78054ccb8793f3e4ca8
Author: Felix Fietkau <nbd@nbd.name>
Date:   Mon Oct 1 13:24:00 2018 +0200

    mt76: mt76x2: fix multi-interface beacon configuration
    
    commit 5289976ad887deb07c76df7eecf553c264aeebed upstream.
    
    If the first virtual interface is a station (or an AP with beacons
    temporarily disabled), the beacon of the second interface needs to
    occupy hardware beacon slot 0.
    For some reason the beacon index was incorrectly masked with the
    virtual interface beacon mask, which prevents the secondary
    interface from sending beacons unless the first one also does.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ea2dd519f59426fadfaf6c48670426bfbda2cb6
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Tue Oct 2 20:57:44 2018 +0900

    usb: gadget: udc: renesas_usb3: Fix b-device mode for "workaround"
    
    commit afc92514a34c7414b28047b1205a6b709103c699 upstream.
    
    If the "workaround_for_vbus" is true, the driver will not call
    usb_disconnect(). So, since the controller keeps some registers'
    value, the driver doesn't re-enumarate suitable speed after
    the b-device mode is disabled. To fix the issue, this patch
    adds usb_disconnect() calling in renesas_usb3_b_device_write()
    if workaround_for_vbus is true.
    
    Fixes: 43ba968b00ea ("usb: gadget: udc: renesas_usb3: add debugfs to set the b-device mode")
    Cc: <stable@vger.kernel.org> # v4.14+
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d5f0d220a293d73bf683b0fd09f91be152e5b72
Author: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
Date:   Fri Sep 21 16:04:11 2018 +0100

    usb: typec: tcpm: Fix APDO PPS order checking to be based on voltage
    
    commit 1b6af2f58c2b1522e0804b150ca95e50a9e80ea7 upstream.
    
    Current code mistakenly checks against max current to determine
    order but this should be max voltage. This commit fixes the issue
    so order is correctly determined, thus avoiding failure based on
    a higher voltage PPS APDO having a lower maximum current output,
    which is actually valid.
    
    Fixes: 2eadc33f40d4 ("typec: tcpm: Add core support for sink side PPS")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0e02f4b273b12e624ff4eded9a7abcb102fbffe
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Thu Oct 18 10:19:29 2018 -0600

    usbip:vudc: BUG kmalloc-2048 (Not tainted): Poison overwritten
    
    commit e28fd56ad5273be67d0fae5bedc7e1680e729952 upstream.
    
    In rmmod path, usbip_vudc does platform_device_put() twice once from
    platform_device_unregister() and then from put_vudc_device().
    
    The second put results in:
    
    BUG kmalloc-2048 (Not tainted): Poison overwritten error or
    BUG: KASAN: use-after-free in kobject_put+0x1e/0x230 if KASAN is
    enabled.
    
    [  169.042156] calling  init+0x0/0x1000 [usbip_vudc] @ 1697
    [  169.042396] =============================================================================
    [  169.043678] probe of usbip-vudc.0 returned 1 after 350 usecs
    [  169.044508] BUG kmalloc-2048 (Not tainted): Poison overwritten
    [  169.044509] -----------------------------------------------------------------------------
    ...
    [  169.057849] INFO: Freed in device_release+0x2b/0x80 age=4223 cpu=3 pid=1693
    [  169.057852]  kobject_put+0x86/0x1b0
    [  169.057853]  0xffffffffc0c30a96
    [  169.057855]  __x64_sys_delete_module+0x157/0x240
    
    Fix it to call platform_device_del() instead and let put_vudc_device() do
    the platform_device_put().
    
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc988a353d59e3d679a694b86ddc00a25fadb515
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Sat Oct 6 22:12:32 2018 +0200

    libertas: don't set URB_ZERO_PACKET on IN USB transfer
    
    commit 6528d88047801b80d2a5370ad46fb6eff2f509e0 upstream.
    
    The USB core gets rightfully upset:
    
      usb 1-1: BOGUS urb flags, 240 --> 200
      WARNING: CPU: 0 PID: 60 at drivers/usb/core/urb.c:503 usb_submit_urb+0x2f8/0x3ed
      Modules linked in:
      CPU: 0 PID: 60 Comm: kworker/0:3 Not tainted 4.19.0-rc6-00319-g5206d00a45c7 #39
      Hardware name: OLPC XO/XO, BIOS OLPC Ver 1.00.01 06/11/2014
      Workqueue: events request_firmware_work_func
      EIP: usb_submit_urb+0x2f8/0x3ed
      Code: 75 06 8b 8f 80 00 00 00 8d 47 78 89 4d e4 89 55 e8 e8 35 1c f6 ff 8b 55 e8 56 52 8b 4d e4 51 50 68 e3 ce c7 c0 e8 ed 18 c6 ff <0f> 0b 83 c4 14 80 7d ef 01 74 0a 80 7d ef 03 0f 85 b8 00 00 00 8b
      EAX: 00000025 EBX: ce7d4980 ECX: 00000000 EDX: 00000001
      ESI: 00000200 EDI: ce7d8800 EBP: ce7f5ea8 ESP: ce7f5e70
      DS: 007b ES: 007b FS: 0000 GS: 00e0 SS: 0068 EFLAGS: 00210292
      CR0: 80050033 CR2: 00000000 CR3: 00e80000 CR4: 00000090
      Call Trace:
       ? if_usb_fw_timeo+0x64/0x64
       __if_usb_submit_rx_urb+0x85/0xe6
       ? if_usb_fw_timeo+0x64/0x64
       if_usb_submit_rx_urb_fwload+0xd/0xf
       if_usb_prog_firmware+0xc0/0x3db
       ? _request_firmware+0x54/0x47b
       ? _request_firmware+0x89/0x47b
       ? if_usb_probe+0x412/0x412
       lbs_fw_loaded+0x55/0xa6
       ? debug_smp_processor_id+0x12/0x14
       helper_firmware_cb+0x3c/0x3f
       request_firmware_work_func+0x37/0x6f
       process_one_work+0x164/0x25a
       worker_thread+0x1c4/0x284
       kthread+0xec/0xf1
       ? cancel_delayed_work_sync+0xf/0xf
       ? kthread_create_on_node+0x1a/0x1a
       ret_from_fork+0x2e/0x38
      ---[ end trace 3ef1e3b2dd53852f ]---
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c47f44d0a93368e22893f6368fc57a44143d468
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Oct 25 09:54:15 2018 +0200

    xen/pvh: don't try to unplug emulated devices
    
    commit e6111161c0a02d58919d776eec94b313bb57911f upstream.
    
    A Xen PVH guest has no associated qemu device model, so trying to
    unplug any emulated devices is making no sense at all.
    
    Bail out early from xen_unplug_emulated_devices() when running as PVH
    guest. This will avoid issuing the boot message:
    
    [    0.000000] Xen Platform PCI: unrecognised magic value
    
    Cc: <stable@vger.kernel.org> # 4.11
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9006cb39229305f4943d082cd0b16dcd7bd953cd
Author: Roger Pau Monne <roger.pau@citrix.com>
Date:   Tue Oct 9 12:32:37 2018 +0200

    xen/pvh: increase early stack size
    
    commit 7deecbda3026f5e2a8cc095d7ef7261a920efcf2 upstream.
    
    While booting on an AMD EPYC box the stack canary would detect stack
    overflows when using the current PVH early stack size (256). Switch to
    using the value defined by BOOT_STACK_SIZE, which prevents the stack
    overflow.
    
    Cc: <stable@vger.kernel.org> # 4.11
    Signed-off-by: Roger Pau Monné <roger.pau@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f91721a7895e48b48ffc33dfb81efa46039259ea
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Oct 1 07:57:42 2018 +0200

    xen: make xen_qlock_wait() nestable
    
    commit a856531951dc8094359dfdac21d59cee5969c18e upstream.
    
    xen_qlock_wait() isn't safe for nested calls due to interrupts. A call
    of xen_qlock_kick() might be ignored in case a deeper nesting level
    was active right before the call of xen_poll_irq():
    
    CPU 1:                                   CPU 2:
    spin_lock(lock1)
                                             spin_lock(lock1)
                                             -> xen_qlock_wait()
                                                -> xen_clear_irq_pending()
                                                Interrupt happens
    spin_unlock(lock1)
    -> xen_qlock_kick(CPU 2)
    spin_lock_irqsave(lock2)
                                             spin_lock_irqsave(lock2)
                                             -> xen_qlock_wait()
                                                -> xen_clear_irq_pending()
                                                   clears kick for lock1
                                                -> xen_poll_irq()
    spin_unlock_irq_restore(lock2)
    -> xen_qlock_kick(CPU 2)
                                                wakes up
                                             spin_unlock_irq_restore(lock2)
                                             IRET
                                               resumes in xen_qlock_wait()
                                               -> xen_poll_irq()
                                               never wakes up
    
    The solution is to disable interrupts in xen_qlock_wait() and not to
    poll for the irq in case xen_qlock_wait() is called in nmi context.
    
    Cc: stable@vger.kernel.org
    Cc: Waiman.Long@hp.com
    Cc: peterz@infradead.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c2395aaa9ba3ba50c79bf138ae5b385e42f0631
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Oct 1 07:57:42 2018 +0200

    xen: fix race in xen_qlock_wait()
    
    commit 2ac2a7d4d9ff4e01e36f9c3d116582f6f655ab47 upstream.
    
    In the following situation a vcpu waiting for a lock might not be
    woken up from xen_poll_irq():
    
    CPU 1:                CPU 2:                      CPU 3:
    takes a spinlock
                          tries to get lock
                          -> xen_qlock_wait()
    frees the lock
    -> xen_qlock_kick(cpu2)
                            -> xen_clear_irq_pending()
    
    takes lock again
                                                      tries to get lock
                                                      -> *lock = _Q_SLOW_VAL
                            -> *lock == _Q_SLOW_VAL ?
                            -> xen_poll_irq()
    frees the lock
    -> xen_qlock_kick(cpu3)
    
    And cpu 2 will sleep forever.
    
    This can be avoided easily by modifying xen_qlock_wait() to call
    xen_poll_irq() only if the related irq was not pending and to call
    xen_clear_irq_pending() only if it was pending.
    
    Cc: stable@vger.kernel.org
    Cc: Waiman.Long@hp.com
    Cc: peterz@infradead.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 726a8d0ae0f969e1ff8aec3d1aabbc83dda207ef
Author: Boris Ostrovsky <boris.ostrovsky@oracle.com>
Date:   Sun Oct 7 16:05:38 2018 -0400

    xen/balloon: Support xend-based toolstack
    
    commit 3aa6c19d2f38be9c6e9a8ad5fa8e3c9d29ee3c35 upstream.
    
    Xend-based toolstacks don't have static-max entry in xenstore. The
    equivalent node for those toolstacks is memory_static_max.
    
    Fixes: 5266b8e4445c (xen: fix booting ballooned down hvm guest)
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: <stable@vger.kernel.org> # 4.13
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a49e27c0efe5a8f283fc13034fb2c45b32d78f64
Author: Vasilis Liaskovitis <vliaskovitis@suse.com>
Date:   Mon Oct 15 15:25:08 2018 +0200

    xen/blkfront: avoid NULL blkfront_info dereference on device removal
    
    commit f92898e7f32e3533bfd95be174044bc349d416ca upstream.
    
    If a block device is hot-added when we are out of grants,
    gnttab_grant_foreign_access fails with -ENOSPC (log message "28
    granting access to ring page") in this code path:
    
      talk_to_blkback ->
            setup_blkring ->
                    xenbus_grant_ring ->
                            gnttab_grant_foreign_access
    
    and the failing path in talk_to_blkback sets the driver_data to NULL:
    
     destroy_blkring:
            blkif_free(info, 0);
    
            mutex_lock(&blkfront_mutex);
            free_info(info);
            mutex_unlock(&blkfront_mutex);
    
            dev_set_drvdata(&dev->dev, NULL);
    
    This results in a NULL pointer BUG when blkfront_remove and blkif_free
    try to access the failing device's NULL struct blkfront_info.
    
    Cc: stable@vger.kernel.org # 4.5 and later
    Signed-off-by: Vasilis Liaskovitis <vliaskovitis@suse.com>
    Reviewed-by: Roger Pau Monné <roger.pau@citrix.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a76ef635cb229512a29f27c6a1131f3b7e19084c
Author: Dr. Greg Wettstein <greg@wind.enjellic.com>
Date:   Mon Sep 17 18:53:33 2018 -0400

    tpm: Restore functionality to xen vtpm driver.
    
    commit e487a0f52301293152a6f8c4e217f2a11dd808e3 upstream.
    
    Functionality of the xen-tpmfront driver was lost secondary to
    the introduction of xenbus multi-page support in commit ccc9d90a9a8b
    ("xenbus_client: Extend interface to support multi-page ring").
    
    In this commit pointer to location of where the shared page address
    is stored was being passed to the xenbus_grant_ring() function rather
    then the address of the shared page itself. This resulted in a situation
    where the driver would attach to the vtpm-stubdom but any attempt
    to send a command to the stub domain would timeout.
    
    A diagnostic finding for this regression is the following error
    message being generated when the xen-tpmfront driver probes for a
    device:
    
    <3>vtpm vtpm-0: tpm_transmit: tpm_send: error -62
    
    <3>vtpm vtpm-0: A TPM error (-62) occurred attempting to determine
    the timeouts
    
    This fix is relevant to all kernels from 4.1 forward which is the
    release in which multi-page xenbus support was introduced.
    
    Daniel De Graaf formulated the fix by code inspection after the
    regression point was located.
    
    Fixes: ccc9d90a9a8b ("xenbus_client: Extend interface to support multi-page ring")
    Signed-off-by: Dr. Greg Wettstein <greg@enjellic.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    [boris: Updated commit message, added Fixes tag]
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: stable@vger.kernel.org # v4.1+
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>

commit 2c400cb65dc4ec8c4a3fb99231536f9516ec2a0e
Author: Joe Jin <joe.jin@oracle.com>
Date:   Tue Oct 16 15:21:16 2018 -0700

    xen-swiotlb: use actually allocated size on check physical continuous
    
    commit 7250f422da0480d8512b756640f131b9b893ccda upstream.
    
    xen_swiotlb_{alloc,free}_coherent() allocate/free memory based on the
    order of the pages and not size argument (bytes). This is inconsistent with
    range_straddles_page_boundary and memset which use the 'size' value,
    which may lead to not exchanging memory with Xen (range_straddles_page_boundary()
    returned true). And then the call to xen_swiotlb_free_coherent() would
    actually try to exchange the memory with Xen, leading to the kernel
    hitting an BUG (as the hypercall returned an error).
    
    This patch fixes it by making the 'size' variable be of the same size
    as the amount of memory allocated.
    
    CC: stable@vger.kernel.org
    Signed-off-by: Joe Jin <joe.jin@oracle.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Christoph Helwig <hch@lst.de>
    Cc: Dongli Zhang <dongli.zhang@oracle.com>
    Cc: John Sobecki <john.sobecki@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 884f8f6e1b41c5828b73b9b545b4570737624618
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Tue Aug 7 12:48:49 2018 +0200

    ARM: dts: exynos: Mark 1 GHz CPU OPP as suspend OPP on Exynos5250
    
    commit 645b23da6f8b47f295fa87051335d41d139717a5 upstream.
    
    1 GHz CPU OPP is the default boot value for the Exynos5250 SOC, so mark it
    as suspend OPP. This fixes suspend/resume on Samsung Exynos5250 Snow
    Chomebook, which was broken since switching to generic cpufreq-dt driver
    in v4.3.
    
    Cc: <stable@vger.kernel.org> # 4.3.x: cd6f55457eb4: ARM: dts: exynos: Remove "cooling-{min|max}-level" for CPU nodes
    Cc: <stable@vger.kernel.org> # 4.3.x: 672f33198bee: arm: dts: exynos: Add missing cooling device properties for CPUs
    Cc: <stable@vger.kernel.org> # 4.3.x
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com>
    Acked-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit feb08c3f3916793edaf8e2f4295d0489cec817a7
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Tue Aug 7 12:48:48 2018 +0200

    ARM: dts: exynos: Convert exynos5250.dtsi to opp-v2 bindings
    
    commit eb9e16d8573e243f8175647f851eb5085dbe97a4 upstream.
    
    Convert Exynos5250 to OPP-v2 bindings. This is a preparation to add proper
    support for suspend operation point, which cannot be marked in opp-v1.
    
    Cc: <stable@vger.kernel.org> # 4.3.x: cd6f55457eb4: ARM: dts: exynos: Remove "cooling-{min|max}-level" for CPU nodes
    Cc: <stable@vger.kernel.org> # 4.3.x: 672f33198bee: arm: dts: exynos: Add missing cooling device properties for CPUs
    Cc: <stable@vger.kernel.org> # 4.3.x
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Chanwoo Choi <cw00.choi@samsung.com>
    Acked-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d5dd7609a88fa427d9f1a46a7d0b3239b583b67
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Fri May 25 16:01:53 2018 +0530

    arm: dts: exynos: Add missing cooling device properties for CPUs
    
    commit 672f33198bee21ee91e6af2cb8f67cfc8bc97ec1 upstream.
    
    The cooling device properties, like "#cooling-cells" and
    "dynamic-power-coefficient", should either be present for all the CPUs
    of a cluster or none. If these are present only for a subset of CPUs of
    a cluster then things will start falling apart as soon as the CPUs are
    brought online in a different order. For example, this will happen
    because the operating system looks for such properties in the CPU node
    it is trying to bring up, so that it can register a cooling device.
    
    Add such missing properties.
    
    Fix other missing properties (clocks, OPP, clock latency) as well to
    make it all work.
    
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e552bb9a21fdb26e21895019149b88ab940587a9
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Tue Sep 11 11:14:34 2018 +0530

    OPP: Free OPP table properly on performance state irregularities
    
    commit 2fbb8670b4ff4454f1c0de510f788d737edc4b90 upstream.
    
    The OPP table was freed, but not the individual OPPs which is done from
    _dev_pm_opp_remove_table(). Fix it by calling _dev_pm_opp_remove_table()
    as well.
    
    Cc: 4.18 <stable@vger.kernel.org> # v4.18
    Fixes: 3ba98324e81a ("PM / OPP: Get performance state using genpd helper")
    Tested-by: Niklas Cassel <niklas.cassel@linaro.org>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d07c6c4373001c0fe71d9176b470e3c5b30d39e9
Author: Chao Yu <chao@kernel.org>
Date:   Mon Oct 22 09:12:51 2018 +0800

    f2fs: fix to account IO correctly
    
    commit 4c58ed076875f36dae0f240da1e25e99e5d4afb8 upstream.
    
    Below race can cause reversed reference on dirty count, fix it by
    relocating __submit_bio() and inc_page_count().
    
    Thread A                                Thread B
    - f2fs_inplace_write_data
     - f2fs_submit_page_bio
      - __submit_bio
                                            - f2fs_write_end_io
                                             - dec_page_count
      - inc_page_count
    
    Cc: <stable@vger.kernel.org>
    Fixes: d1b3e72d5490 ("f2fs: submit bio of in-place-update pages")
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16eb8add5ee9bf0076be4d9bb51518a9d137c9d1
Author: Chao Yu <chao@kernel.org>
Date:   Wed Oct 3 22:32:44 2018 +0800

    f2fs: fix to recover cold bit of inode block during POR
    
    commit ef2a007134b4eaa39264c885999f296577bc87d2 upstream.
    
    Testcase to reproduce this bug:
    1. mkfs.f2fs /dev/sdd
    2. mount -t f2fs /dev/sdd /mnt/f2fs
    3. touch /mnt/f2fs/file
    4. sync
    5. chattr +A /mnt/f2fs/file
    6. xfs_io -f /mnt/f2fs/file -c "fsync"
    7. godown /mnt/f2fs
    8. umount /mnt/f2fs
    9. mount -t f2fs /dev/sdd /mnt/f2fs
    10. chattr -A /mnt/f2fs/file
    11. xfs_io -f /mnt/f2fs/file -c "fsync"
    12. umount /mnt/f2fs
    13. mount -t f2fs /dev/sdd /mnt/f2fs
    14. lsattr /mnt/f2fs/file
    
    -----------------N- /mnt/f2fs/file
    
    But actually, we expect the corrct result is:
    
    -------A---------N- /mnt/f2fs/file
    
    The reason is in step 9) we missed to recover cold bit flag in inode
    block, so later, in fsync, we will skip write inode block due to below
    condition check, result in lossing data in another SPOR.
    
    f2fs_fsync_node_pages()
            if (!IS_DNODE(page) || !is_cold_node(page))
                    continue;
    
    Note that, I guess that some non-dir inode has already lost cold bit
    during POR, so in order to reenable recovery for those inode, let's
    try to recover cold bit in f2fs_iget() to save more fsynced data.
    
    Fixes: c56675750d7c ("f2fs: remove unneeded set_cold_node()")
    Cc: <stable@vger.kernel.org> 4.17+
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8683288c629a5d872329ede260a7457a16c88b7
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Tue Oct 16 19:30:13 2018 -0700

    Revert "f2fs: fix to clear PG_checked flag in set_page_dirty()"
    
    commit 164a63fa6b384e30ceb96ed80bc7dc3379bc0960 upstream.
    
    This reverts commit 66110abc4c931f879d70e83e1281f891699364bf.
    
    If we clear the cold data flag out of the writeback flow, we can miscount
    -1 by end_io, which incurs a deadlock caused by all I/Os being blocked during
    heavy GC.
    
    Balancing F2FS Async:
     - IO (CP:    1, Data:   -1, Flush: (   0    0    1), Discard: (   ...
    
    GC thread:                              IRQ
    - move_data_page()
     - set_page_dirty()
      - clear_cold_data()
                                            - f2fs_write_end_io()
                                             - type = WB_DATA_TYPE(page);
                                               here, we get wrong type
                                             - dec_page_count(sbi, type);
     - f2fs_wait_on_page_writeback()
    
    Cc: <stable@vger.kernel.org>
    Reported-and-Tested-by: Park Ju Hyung <qkrwngud825@gmail.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e602d368b00725fd5c5d2f873ecc04ff372ea144
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Mon Oct 8 11:06:18 2018 -0400

    cpupower: Fix AMD Family 0x17 msr_pstate size
    
    [ Upstream commit 8c22e2f695920ebd94f9a53bcf2a65eb36d4dba1 ]
    
    The msr_pstate data is only 63 bits long and should be 64 bits.
    
    Add in the missing bit from res1 for AMD Family 0x17.
    
    Reference: https://www.amd.com/system/files/TechDocs/54945_PPR_Family_17h_Models_00h-0Fh.pdf, page 138.
    
    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Stafford Horne <shorne@gmail.com>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1511aba3242982fa6a74d8b6841fe341857d9ed1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sat Aug 11 23:33:34 2018 +0200

    ALSA: hda: Check the non-cached stream buffers more explicitly
    
    [ Upstream commit 78c9be61c3a5cd9e2439fd27a5ffad73a81958c7 ]
    
    Introduce a new flag, uc_buffer, to indicate that the controller
    requires the non-cached pages for stream buffers, either as a
    chip-specific requirement or specified via snoop=0 option.
    This improves the code-readability.
    
    Also, this patch fixes the incorrect behavior for C-Media chip where
    the stream buffers were never handled as non-cached due to the check
    of driver_type even if you pass snoop=0 option.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 050d782641c223a38ea01f9e9bb65e29934bdc21
Author: Vijay Immanuel <vijayi@attalasystems.com>
Date:   Tue Jun 12 18:20:49 2018 -0700

    IB/rxe: fix for duplicate request processing and ack psns
    
    [ Upstream commit b97db58557f4aa6d9903f8e1deea6b3d1ed0ba43 ]
    
    Don't reset the resp opcode for a replayed read response.
    The resp opcode could be in the middle of a write or send
    sequence, when the duplicate read request was received.
    An example sequence is as follows:
    - Receive read request for 12KB PSN 20. Transmit read response
      first, middle and last with PSNs 20,21,22.
    - Receive write first PSN 23.
      At this point the resp psn is 24 and resp opcode is write first.
    - The sender notices that PSN 20 is dropped and retransmits.
      Receive read request for 12KB PSN 20. Transmit read response
      first, middle and last with PSNs 20,21,22. The resp opcode is
      set to -1, the resp psn remains 24.
    - Receive write first PSN 23. This is processed by duplicate_request().
      The resp opcode remains -1 and resp psn remains 24.
    - Receive write middle PSN 24. check_op_seq() reports a missing
      first error since the resp opcode is -1.
    
    When sending an ack for a duplicate send or write request,
    use the psn of the previous ack sent. Do not use the psn
    of a read response for the ack.
    An example sequence is as follows:
    - Receive write PSN 30. Transmit ACK for PSN 30.
    - Receive read request 4KB PSN 31. Transmit read response with
      PSN 31. The resp psn is now 32.
    - The sender notices that PSN 30 is dropped and retransmits.
      Receive write PSN 30. duplicate_request() sends an ACK with
      PSN 31. That is incorrect since PSN 31 was a read request.
    
    Signed-off-by: Vijay Immanuel <vijayi@attalasystems.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8efbd111471eb369db264c31d0c31685c5dce699
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Wed Aug 29 23:32:44 2018 +0200

    dmaengine: dma-jz4780: Return error if not probed from DT
    
    [ Upstream commit 54f919a04cf221bc1601d1193682d4379dacacbd ]
    
    The driver calls clk_get() with the clock name set to NULL, which means
    that the driver could only work when probed from devicetree. From now
    on, we explicitly require the driver to be probed from devicetree.
    
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Tested-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit faef9773f48a87c785cfd3edb8f69e30406b5ef1
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Sun Sep 9 22:48:58 2018 +0200

    mfd: menelaus: Fix possible race condition and leak
    
    [ Upstream commit 9612f8f503804d2fd2f63aa6ba1e58bba4612d96 ]
    
    The IRQ work is added before the struct rtc is allocated and registered,
    but this struct is used in the IRQ handler. This may lead to a NULL pointer
    dereference.
    
    Switch to devm_rtc_allocate_device/rtc_register_device to allocate the rtc
    before calling menelaus_add_irq_work.
    
    Also, this solves a possible leak as the RTC is never released.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dc063e47362208f4b8386ae610dbacb0fcd60a3
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Sep 3 20:02:46 2018 +0200

    signal: Always deliver the kernel's SIGKILL and SIGSTOP to a pid namespace init
    
    [ Upstream commit 3597dfe01d12f570bc739da67f857fd222a3ea66 ]
    
    Instead of playing whack-a-mole and changing SEND_SIG_PRIV to
    SEND_SIG_FORCED throughout the kernel to ensure a pid namespace init
    gets signals sent by the kernel, stop allowing a pid namespace init to
    ignore SIGKILL or SIGSTOP sent by the kernel.  A pid namespace init is
    only supposed to be able to ignore signals sent from itself and
    children with SIG_DFL.
    
    Fixes: 921cf9f63089 ("signals: protect cinit from unblocked SIG_DFL signals")
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d5b9f9d3ec392b6e7c9aaa4c3b172ba3a19634e
Author: Yunlei He <heyunlei@huawei.com>
Date:   Tue Jun 26 13:12:43 2018 +0800

    f2fs: report error if quota off error during umount
    
    [ Upstream commit cda9cc595f0bb6ffa51a4efc4b6533dfa4039b4c ]
    
    Now, we depend on fsck to ensure quota file data is ok,
    so we scan whole partition if checkpoint without umount
    flag. It's same for quota off error case, which may make
    quota file data inconsistent.
    
    generic/019 reports below error:
    
     __quota_error: 1160 callbacks suppressed
     Quota error (device zram1): write_blk: dquota write failed
     Quota error (device zram1): qtree_write_dquot: Error -28 occurred while creating quota
     Quota error (device zram1): write_blk: dquota write failed
     Quota error (device zram1): qtree_write_dquot: Error -28 occurred while creating quota
     Quota error (device zram1): write_blk: dquota write failed
     Quota error (device zram1): qtree_write_dquot: Error -28 occurred while creating quota
     Quota error (device zram1): write_blk: dquota write failed
     Quota error (device zram1): qtree_write_dquot: Error -28 occurred while creating quota
     Quota error (device zram1): write_blk: dquota write failed
     Quota error (device zram1): qtree_write_dquot: Error -28 occurred while creating quota
     VFS: Busy inodes after unmount of zram1. Self-destruct in 5 seconds.  Have a nice day...
    
    If we failed in below path due to fail to write dquot block, we will miss
    to release quota inode, fix it.
    
    - f2fs_put_super
     - f2fs_quota_off_umount
      - f2fs_quota_off
       - f2fs_quota_sync   <-- failed
       - dquot_quota_off   <-- missed to call
    
    Signed-off-by: Yunlei He <heyunlei@huawei.com>
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b41c30c5acc9ab771d1ee93ab67c57f7f5bde529
Author: Zhikang Zhang <zhangzhikang1@huawei.com>
Date:   Mon Sep 10 16:18:25 2018 +0800

    f2fs: avoid sleeping under spin_lock
    
    [ Upstream commit b430f7263673eab1dc40e662ae3441a9619d16b8 ]
    
    In the call trace below, we might sleep in function dput().
    
    So in order to avoid sleeping under spin_lock, we remove f2fs_mark_inode_dirty_sync
    from __try_update_largest_extent && __drop_largest_extent.
    
    BUG: sleeping function called from invalid context at fs/dcache.c:796
    Call trace:
            dump_backtrace+0x0/0x3f4
            show_stack+0x24/0x30
            dump_stack+0xe0/0x138
            ___might_sleep+0x2a8/0x2c8
            __might_sleep+0x78/0x10c
            dput+0x7c/0x750
            block_dump___mark_inode_dirty+0x120/0x17c
            __mark_inode_dirty+0x344/0x11f0
            f2fs_mark_inode_dirty_sync+0x40/0x50
            __insert_extent_tree+0x2e0/0x2f4
            f2fs_update_extent_tree_range+0xcf4/0xde8
            f2fs_update_extent_cache+0x114/0x12c
            f2fs_update_data_blkaddr+0x40/0x50
            write_data_page+0x150/0x314
            do_write_data_page+0x648/0x2318
            __write_data_page+0xdb4/0x1640
            f2fs_write_cache_pages+0x768/0xafc
            __f2fs_write_data_pages+0x590/0x1218
            f2fs_write_data_pages+0x64/0x74
            do_writepages+0x74/0xe4
            __writeback_single_inode+0xdc/0x15f0
            writeback_sb_inodes+0x574/0xc98
            __writeback_inodes_wb+0x190/0x204
            wb_writeback+0x730/0xf14
            wb_check_old_data_flush+0x1bc/0x1c8
            wb_workfn+0x554/0xf74
            process_one_work+0x440/0x118c
            worker_thread+0xac/0x974
            kthread+0x1a0/0x1c8
            ret_from_fork+0x10/0x1c
    
    Signed-off-by: Zhikang Zhang <zhangzhikang1@huawei.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec8eb8b5705796b019247035b64f5f71844fbceb
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Sep 10 10:30:44 2018 -0700

    scsi: lpfc: Correct race with abort on completion path
    
    [ Upstream commit ca7fb76e091f889cfda1287c07a9358f73832b39 ]
    
    On io completion, the driver is taking an adapter wide lock and nulling the
    scsi command back pointer.  The nulling of the back pointer is to signify the
    io was completed and the scsi_done() routine was called.  However, the routine
    makes no check to see if the abort routine had done the same thing and
    possibly nulled the pointer. Thus it may doubly-complete the io.
    
    Make the following mods:
    
    - Check to make sure forward progress (call scsi_done()) only happens if the
      command pointer was non-null.
    
    - As the taking of the lock, which is adapter wide, is very costly on a system
      under load, null the pointer using an xchg operation rather than under lock.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 051b5fa2890be7be506b2e40a0258cc7544962fd
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Sep 10 10:30:45 2018 -0700

    scsi: lpfc: Correct soft lockup when running mds diagnostics
    
    [ Upstream commit 0ef01a2d95fd62bb4f536e7ce4d5e8e74b97a244 ]
    
    When running an mds diagnostic that passes frames with the switch, soft
    lockups are detected. The driver is in a CQE processing loop and has
    sufficient amount of traffic that it never exits the ring processing routine,
    thus the "lockup".
    
    Cap the number of elements in the work processing routine to 64 elements. This
    ensures that the cpu will be given up and the handler reschedule to process
    additional items.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e30cf6a23808c61396583e99d293e5080f6c4250
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Thu Aug 16 09:39:41 2018 +0200

    uio: ensure class is registered before devices
    
    [ Upstream commit ae61cf5b9913027c6953a79ed3894da4f47061bd ]
    
    When both uio and the uio drivers are built in the kernel, it is possible
    for a driver to register devices before the uio class is registered.
    
    This may result in a NULL pointer dereference later on in
    get_device_parent() when accessing the class glue_dirs spinlock.
    
    The trace looks like that:
    
    Unable to handle kernel NULL pointer dereference at virtual address 00000140
    [...]
    [<ffff0000089cc234>] _raw_spin_lock+0x14/0x48
    [<ffff0000084f56bc>] device_add+0x154/0x6a0
    [<ffff0000084f5e48>] device_create_groups_vargs+0x120/0x128
    [<ffff0000084f5edc>] device_create+0x54/0x60
    [<ffff0000086e72c0>] __uio_register_device+0x120/0x4a8
    [<ffff000008528b7c>] jaguar2_pci_probe+0x2d4/0x558
    [<ffff0000083fc18c>] local_pci_probe+0x3c/0xb8
    [<ffff0000083fd81c>] pci_device_probe+0x11c/0x180
    [<ffff0000084f88bc>] driver_probe_device+0x22c/0x2d8
    [<ffff0000084f8a24>] __driver_attach+0xbc/0xc0
    [<ffff0000084f69fc>] bus_for_each_dev+0x4c/0x98
    [<ffff0000084f81b8>] driver_attach+0x20/0x28
    [<ffff0000084f7d08>] bus_add_driver+0x1b8/0x228
    [<ffff0000084f93c0>] driver_register+0x60/0xf8
    [<ffff0000083fb918>] __pci_register_driver+0x40/0x48
    
    Return EPROBE_DEFER in that case so the driver can register the device
    later.
    
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a5975e8383c6c3c3c223a7cb6f3b980a2411240
Author: Moni Shoua <monis@mellanox.com>
Date:   Wed Sep 12 09:33:55 2018 +0300

    IB/mlx5: Allow transition of DCI QP to reset
    
    [ Upstream commit 99ed748e878a99c6c7b87bbec063eefd9e47cb42 ]
    
    The transition is allowed from any state and the atrribute mask must be
    IB_QP_STATE.
    
    Fixes: c32a4f296e1d ("IB/mlx5: Add support for DC Initiator QP")
    Signed-off-by: Moni Shoua <monis@mellanox.com>
    Reviewed-by: Artemy Kovalyov <artemyko@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12142fb13d30937059cd6676c316ab3041bf328a
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Wed Aug 15 13:37:04 2018 -0700

    firmware: coreboot: Unmap ioregion after device population
    
    [ Upstream commit 20edec388277b62ddfddb8b2b376a937a2cd6d1b ]
    
    Both callers of coreboot_table_init() ioremap the pointer that comes in
    but they don't unmap the memory on failure. Both of them also fail probe
    immediately with the return value of coreboot_table_init(), leaking a
    mapping when it fails. The mapping isn't necessary at all after devices
    are populated either, so we can just drop the mapping here when we exit
    the function. Let's do that to simplify the code a bit and plug the leak.
    
    Cc: Wei-Ning Huang <wnhuang@chromium.org>
    Cc: Julius Werner <jwerner@chromium.org>
    Cc: Brian Norris <briannorris@chromium.org>
    Cc: Samuel Holland <samuel@sholland.org>
    Fixes: 570d30c2823f ("firmware: coreboot: Expose the coreboot table as a bus")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Julius Werner <jwerner@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0470ae4236d0e273ae81e368eccd8d4d403c86ff
Author: Waiman Long <longman@redhat.com>
Date:   Fri Sep 14 14:53:32 2018 -0400

    driver/dma/ioat: Call del_timer_sync() without holding prep_lock
    
    [ Upstream commit cfb03be6c7e8a1591285849c361d67b09f5149f7 ]
    
    The following lockdep splat was observed:
    
    [ 1222.241750] ======================================================
    [ 1222.271301] WARNING: possible circular locking dependency detected
    [ 1222.301060] 4.16.0-10.el8+5.x86_64+debug #1 Not tainted
    [ 1222.326659] ------------------------------------------------------
    [ 1222.356565] systemd-shutdow/1 is trying to acquire lock:
    [ 1222.382660]  ((&ioat_chan->timer)){+.-.}, at: [<00000000f71e1a28>] del_timer_sync+0x5/0xf0
    [ 1222.422928]
    [ 1222.422928] but task is already holding lock:
    [ 1222.451743]  (&(&ioat_chan->prep_lock)->rlock){+.-.}, at: [<000000008ea98b12>] ioat_shutdown+0x86/0x100 [ioatdma]
       :
    [ 1223.524987] Chain exists of:
    [ 1223.524987]   (&ioat_chan->timer) --> &(&ioat_chan->cleanup_lock)->rlock --> &(&ioat_chan->prep_lock)->rlock
    [ 1223.524987]
    [ 1223.594082]  Possible unsafe locking scenario:
    [ 1223.594082]
    [ 1223.622630]        CPU0                    CPU1
    [ 1223.645080]        ----                    ----
    [ 1223.667404]   lock(&(&ioat_chan->prep_lock)->rlock);
    [ 1223.691535]                                lock(&(&ioat_chan->cleanup_lock)->rlock);
    [ 1223.728657]                                lock(&(&ioat_chan->prep_lock)->rlock);
    [ 1223.765122]   lock((&ioat_chan->timer));
    [ 1223.784095]
    [ 1223.784095]  *** DEADLOCK ***
    [ 1223.784095]
    [ 1223.813492] 4 locks held by systemd-shutdow/1:
    [ 1223.834677]  #0:  (reboot_mutex){+.+.}, at: [<0000000056d33456>] SYSC_reboot+0x10f/0x300
    [ 1223.873310]  #1:  (&dev->mutex){....}, at: [<00000000258dfdd7>] device_shutdown+0x1c8/0x660
    [ 1223.913604]  #2:  (&dev->mutex){....}, at: [<0000000068331147>] device_shutdown+0x1d6/0x660
    [ 1223.954000]  #3:  (&(&ioat_chan->prep_lock)->rlock){+.-.}, at: [<000000008ea98b12>] ioat_shutdown+0x86/0x100 [ioatdma]
    
    In the ioat_shutdown() function:
    
            spin_lock_bh(&ioat_chan->prep_lock);
            set_bit(IOAT_CHAN_DOWN, &ioat_chan->state);
            del_timer_sync(&ioat_chan->timer);
            spin_unlock_bh(&ioat_chan->prep_lock);
    
    According to the synchronization rule for the del_timer_sync() function,
    the caller must not hold locks which would prevent completion of the
    timer's handler.
    
    The timer structure has its own lock that manages its synchronization.
    Setting the IOAT_CHAN_DOWN bit should prevent other CPUs from
    trying to use that device anyway, there is probably no need to call
    del_timer_sync() while holding the prep_lock. So the del_timer_sync()
    call is now moved outside of the prep_lock critical section to prevent
    the circular lock dependency.
    
    Signed-off-by: Waiman Long <longman@redhat.com>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbb33dd581b369d3bbbd68c7c7503e4a6df1e7e2
Author: Casey Schaufler <casey.schaufler@intel.com>
Date:   Tue Sep 18 16:09:16 2018 -0700

    Smack: ptrace capability use fixes
    
    [ Upstream commit dcb569cf6ac99ca899b8109c128b6ae52477a015 ]
    
    This fixes a pair of problems in the Smack ptrace checks
    related to checking capabilities. In both cases, as reported
    by Lukasz Pawelczyk, the raw capability calls are used rather
    than the Smack wrapper that check addition restrictions.
    In one case, as reported by Jann Horn, the wrong task is being
    checked for capabilities.
    
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ae6cf2975fe69f6ae13f12d5365c21472a6f117
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Tue Sep 4 17:18:57 2018 +0200

    usb: chipidea: Prevent unbalanced IRQ disable
    
    [ Upstream commit 8b97d73c4d72a2abf58f8e49062a7ee1e5f1334e ]
    
    The ChipIdea IRQ is disabled before scheduling the otg work and
    re-enabled on otg work completion. However if the job is already
    scheduled we have to undo the effect of disable_irq int order to
    balance the IRQ disable-depth value.
    
    Fixes: be6b0c1bd0be ("usb: chipidea: using one inline function to cover queue work operations")
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4b86b1461f06cedcf4f163a3255a97ded5e5ab9
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Wed Sep 12 11:59:30 2018 +0300

    crypto: caam - fix implicit casts in endianness helpers
    
    [ Upstream commit aae733a3f46f5ef338fbdde26e14cbb205a23de0 ]
    
    Fix the following sparse endianness warnings:
    
    drivers/crypto/caam/regs.h:95:1: sparse: incorrect type in return expression (different base types) @@    expected unsigned int @@    got restricted __le32unsigned int @@
    drivers/crypto/caam/regs.h:95:1:    expected unsigned int
    drivers/crypto/caam/regs.h:95:1:    got restricted __le32 [usertype] <noident>
    drivers/crypto/caam/regs.h:95:1: sparse: incorrect type in return expression (different base types) @@    expected unsigned int @@    got restricted __be32unsigned int @@
    drivers/crypto/caam/regs.h:95:1:    expected unsigned int
    drivers/crypto/caam/regs.h:95:1:    got restricted __be32 [usertype] <noident>
    
    drivers/crypto/caam/regs.h:92:1: sparse: cast to restricted __le32
    drivers/crypto/caam/regs.h:92:1: sparse: cast to restricted __be32
    
    Fixes: 261ea058f016 ("crypto: caam - handle core endianness != caam endianness")
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7f59eb8ae0d69a739ff3d36d835db7d2fa1ead6
Author: Vignesh R <vigneshr@ti.com>
Date:   Tue Sep 25 14:00:24 2018 +0530

    PCI: dwc: pci-dra7xx: Enable errata i870 for both EP and RC mode
    
    [ Upstream commit 726d75a6d243bf6730da3216f3592503f6f0f588 ]
    
    Errata i870 is applicable in both EP and RC mode. Therefore rename
    function dra7xx_pcie_ep_unaligned_memaccess(), that implements errata
    workaround, to dra7xx_pcie_unaligned_memaccess() and call it for both RC
    and EP. Make sure driver probe does not fail in case the workaround is not
    applied for RC mode in order to maintain DT backward compatibility.
    
    Reported-by: Chris Welch <Chris.Welch@viavisolutions.com>
    Signed-off-by: Vignesh R <vigneshr@ti.com>
    [lorenzo.pieralisi@arm.com: reworded the log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Acked-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cf50920c081a9771bc0b36119fe1defcbc543a9
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Thu Sep 20 13:17:46 2018 -0600

    coresight: etb10: Fix handling of perf mode
    
    [ Upstream commit 987d1e8dcd370d96029a3d76a0031b043c4a69ae ]
    
    If the ETB is already enabled in sysfs mode, the ETB reports
    success even if a perf mode is requested. Fix this by checking
    the requested mode.
    
    Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c259506c8a79810a981c37343f66aaf72391a135
Author: Tonghao Zhang <xiangxia.m.yue@gmail.com>
Date:   Mon Sep 24 07:00:41 2018 -0700

    PCI/MSI: Warn and return error if driver enables MSI/MSI-X twice
    
    [ Upstream commit 4c1ef72e9b71a19fb405ebfcd37c0a5e16fa44ca ]
    
    It is a serious driver defect to enable MSI or MSI-X more than once.  Doing
    so may panic the kernel as in the stack trace below:
    
      Call Trace:
        sysfs_add_one+0xa5/0xd0
        create_dir+0x7c/0xe0
        sysfs_create_subdir+0x1c/0x20
        internal_create_group+0x6d/0x290
        sysfs_create_groups+0x4a/0xa0
        populate_msi_sysfs+0x1cd/0x210
        pci_enable_msix+0x31c/0x3e0
        igbuio_pci_open+0x72/0x300 [igb_uio]
        uio_open+0xcc/0x120 [uio]
        chrdev_open+0xa1/0x1e0
        [...]
        do_sys_open+0xf3/0x1f0
        SyS_open+0x1e/0x20
        system_call_fastpath+0x16/0x1b
        ---[ end trace 11042e2848880209 ]---
        Kernel panic - not syncing: stack-protector: Kernel stack is corrupted in: ffffffffa056b4fa
    
    We want to keep the WARN_ON() and stack trace so the driver can be fixed,
    but we can avoid the kernel panic by returning an error.  We may still get
    warnings like this:
    
      Call Trace:
        pci_enable_msix+0x3c9/0x3e0
        igbuio_pci_open+0x72/0x300 [igb_uio]
        uio_open+0xcc/0x120 [uio]
        chrdev_open+0xa1/0x1e0
        [...]
        do_sys_open+0xf3/0x1f0
        SyS_open+0x1e/0x20
        system_call_fastpath+0x16/0x1b
        ------------[ cut here ]------------
        WARNING: at fs/sysfs/dir.c:526 sysfs_add_one+0xa5/0xd0()
        sysfs: cannot create duplicate filename '/devices/pci0000:00/0000:00:03.0/0000:01:00.1/msi_irqs'
    
    Signed-off-by: Tonghao Zhang <xiangxia.m.yue@gmail.com>
    [bhelgaas: changelog, fix patch whitespace, remove !!]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14bbbe74bc3ef3e58109e88bf8c0abe7cb021921
Author: Chao Yu <chao@kernel.org>
Date:   Tue Sep 25 15:35:59 2018 +0800

    f2fs: fix to recover inode's i_flags during POR
    
    [ Upstream commit 19c73a691ccf6fb2f12d4e9cf9830023966cec88 ]
    
    Testcase to reproduce this bug:
    1. mkfs.f2fs /dev/sdd
    2. mount -t f2fs /dev/sdd /mnt/f2fs
    3. touch /mnt/f2fs/file
    4. sync
    5. chattr +A /mnt/f2fs/file
    6. xfs_io -f /mnt/f2fs/file -c "fsync"
    7. godown /mnt/f2fs
    8. umount /mnt/f2fs
    9. mount -t f2fs /dev/sdd /mnt/f2fs
    10. lsattr /mnt/f2fs/file
    
    -----------------N- /mnt/f2fs/file
    
    But actually, we expect the corrct result is:
    
    -------A---------N- /mnt/f2fs/file
    
    The reason is we didn't recover inode.i_flags field during mount,
    fix it.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e40e11233237a6ac6bb586ca4a1f2ecbbffb702
Author: Chao Yu <chao@kernel.org>
Date:   Tue Sep 25 15:36:01 2018 +0800

    f2fs: fix to recover inode's crtime during POR
    
    [ Upstream commit 5cd1f387a13b5188b4edb4c834310302a85a6ea2 ]
    
    Testcase to reproduce this bug:
    1. mkfs.f2fs -O extra_attr -O inode_crtime /dev/sdd
    2. mount -t f2fs /dev/sdd /mnt/f2fs
    3. touch /mnt/f2fs/file
    4. xfs_io -f /mnt/f2fs/file -c "fsync"
    5. godown /mnt/f2fs
    6. umount /mnt/f2fs
    7. mount -t f2fs /dev/sdd /mnt/f2fs
    8. xfs_io -f /mnt/f2fs/file -c "statx -r"
    
    stat.btime.tv_sec = 0
    stat.btime.tv_nsec = 0
    
    This patch fixes to recover inode creation time fields during
    mount.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60e562bb965a2bdcf55c4f3590e1bfa2de5bc3ff
Author: Anshuman Gupta <anshuman.gupta@intel.com>
Date:   Thu Sep 20 19:13:40 2018 +0300

    xhci: Avoid USB autosuspend when resuming USB2 ports.
    
    [ Upstream commit 330e2d61cdd58363eb5e66b2e72f76fe3c5492e0 ]
    
    When USB bus host controller root hub resumes from autosuspend,
    it immediately tries to enter auto-suspend, but there can be a
    scenario when root hub is resuming its usb2 ports, in that particular
    case USB host controller auto suspend fails since it is busy
    to resuming its usb2 ports.
    
    This makes multiple failed cycles of auto-suspend until all usb2
    ports of host controller root hub do not resume.
    
    This patch uses USB core framework usb_hcd_start_port_resume,
    usb_hcd_end_port_resume API's in order to  autoresume/autosuspend
    root hub properly.
    
    Signed-off-by: Anshuman Gupta <anshuman.gupta@intel.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c5e9a93e478118ef050e2098042a9a191baf29e
Author: Bartosz Golaszewski <bgolaszewski@baylibre.com>
Date:   Fri Sep 21 06:40:07 2018 -0700

    nvmem: check the return value of nvmem_add_cells()
    
    [ Upstream commit fa72d847d68d7833b77a4bef944cf2c5baf56f49 ]
    
    This function can fail so check its return value in nvmem_register()
    and act accordingly.
    
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40cdac6bfb73088484340525e045eed0f286b271
Author: Shaohua Li <shli@fb.com>
Date:   Mon Oct 1 18:36:36 2018 -0700

    MD: fix invalid stored role for a disk
    
    [ Upstream commit d595567dc4f0c1d90685ec1e2e296e2cad2643ac ]
    
    If we change the number of array's device after device is removed from array,
    then add the device back to array, we can see that device is added as active
    role instead of spare which we expected.
    
    Please see the below link for details:
    https://marc.info/?l=linux-raid&m=153736982015076&w=2
    
    This is caused by that we prefer to use device's previous role which is
    recorded by saved_raid_disk, but we should respect the new number of
    conf->raid_disks since it could be changed after device is removed.
    
    Reported-by: Gioh Kim <gi-oh.kim@profitbricks.com>
    Tested-by: Gioh Kim <gi-oh.kim@profitbricks.com>
    Acked-by: Guoqing Jiang <gqjiang@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 175d020db6cfe4314b8fc471e0da8f144d6b887f
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Tue Oct 2 01:34:44 2018 -0400

    ext4: fix argument checking in EXT4_IOC_MOVE_EXT
    
    [ Upstream commit f18b2b83a727a3db208308057d2c7945f368e625 ]
    
    If the starting block number of either the source or destination file
    exceeds the EOF, EXT4_IOC_MOVE_EXT should return EINVAL.
    
    Also fixed the helper function mext_check_coverage() so that if the
    logical block is beyond EOF, make it return immediately, instead of
    looping until the block number wraps all the away around.  This takes
    long enough that if there are multiple threads trying to do pound on
    an the same inode doing non-sensical things, it can end up triggering
    the kernel's soft lockup detector.
    
    Reported-by: syzbot+c61979f6f2cba5cb3c06@syzkaller.appspotmail.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f41d070e9fcbd5ba0f1884947939f710276854a7
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Mon Sep 10 22:12:49 2018 +0200

    usb: gadget: udc: atmel: handle at91sam9rl PMC
    
    [ Upstream commit bb80e4fa57eb75ebd64ae9be4155da6d12c1a997 ]
    
    The at91sam9rl PMC is not quite the same as the at91sam9g45 one and now has
    its own compatible string. Add support for that.
    
    Fixes: 217bace8e548 ("ARM: dts: fix PMC compatible")
    Acked-by: Cristian Birsan <cristian.birsan@microchip.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3162e793c743cb1932cca8508bfd3b579e0e1bc9
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Wed Sep 5 13:40:03 2018 +0200

    usb: dwc2: fix a race with external vbus supply
    
    [ Upstream commit 41ee1ea21052583eaf5487dfa0d0c907c9667548 ]
    
    There's a race with root hub resume, when using external vbus supply.
    Root hub gets resumed, but runtime pm autosuspend runs as external vbus
    supply isn't enabled. So, host never exit from power down properly.
    Initialize vbus external supply before, rater that after hub resume.
    
    Fixes: 531ef5ebea96 ("usb: dwc2: add support for host mode external
    vbus supply")
    
    Tested-by: Artur Petrosyan <arturp@synopsys.com>
    Acked-by: Minas Harutyunyan <hminas@synopsys.com>
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Signed-off-by: Amelie Delaunay <amelie.delaunay@st.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcb003c30ac3d3f4e4e151b59b37ceca6b3a1ca0
Author: Lina Iyer <ilina@codeaurora.org>
Date:   Thu Sep 27 11:18:10 2018 -0600

    irqchip/pdc: Setup all edge interrupts as rising edge at GIC
    
    [ Upstream commit 7bae48b22c8d38c5cd50f52b6e15d134e2bb3935 ]
    
    The PDC irqchp can convert a falling edge or level low interrupt to a
    rising edge or level high interrupt at the GIC. We just need to setup
    the GIC correctly. Set up the interrupt type for the IRQ_TYPE_EDGE_BOTH
    as IRQ_TYPE_EDGE_RISING at the GIC.
    
    Fixes: f55c73aef890 ("irqchip/pdc: Add PDC interrupt controller for QCOM SoCs")
    Reported-by: Evan Green <evgreen@chromium.org>
    Reviewed-by: Evan Green <evgreen@chromium.org>
    Signed-off-by: Lina Iyer <ilina@codeaurora.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10be774a8d446b5c4b32721be387a11a7252a522
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Mon Oct 1 14:25:14 2018 -0400

    xprtrdma: Reset credit grant properly after a disconnect
    
    [ Upstream commit ef739b2175dde9c05594f768cb78149f1ce2ac36 ]
    
    On a fresh connection, an RPC/RDMA client is supposed to send only
    one RPC Call until it gets a credit grant in the first RPC Reply
    from the server [RFC 8166, Section 3.3.3].
    
    There is a bug in the Linux client's credit accounting mechanism
    introduced by commit e7ce710a8802 ("xprtrdma: Avoid deadlock when
    credit window is reset"). On connect, it simply dumps all pending
    RPC Calls onto the new connection.
    
    Servers have been tolerant of this bad behavior. Currently no server
    implementation ever changes its credit grant over reconnects, and
    servers always repost enough Receives before connections are fully
    established.
    
    To correct this issue, ensure that the client resets both the credit
    grant _and_ the congestion window when handling a reconnect.
    
    Fixes: e7ce710a8802 ("xprtrdma: Avoid deadlock when credit ... ")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Cc: stable@kernel.org
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f8ffba0789c2e5d7f26fc4b9095b39279066568
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Thu Sep 27 16:54:13 2018 -0500

    PCI / ACPI: Enable wake automatically for power managed bridges
    
    [ Upstream commit 6299cf9ec3985cac70bede8a855b5087b81a6640 ]
    
    We enable power management automatically for bridges where
    pci_bridge_d3_possible() returns true. However, these bridges may have
    ACPI methods such as _DSW that need to be called before D3 entry. For
    example in Lenovo Thinkpad X1 Carbon 6th _DSW method is used to prepare
    D3cold for the PCIe root port hosting Thunderbolt chain. Because wake is
    not enabled _DSW method is never called and the port does not enter
    D3cold properly consuming more power than necessary.
    
    Users can work this around by writing "enabled" to "wakeup" sysfs file
    under the device in question but that is not something an ordinary user
    is expected to do.
    
    Since we already automatically enable power management for PCIe ports
    with ->bridge_d3 set extend that to enable wake for them as well,
    assuming the port has any ACPI wakeup related objects implemented in the
    namespace (adev->wakeup.flags.valid is true). This ensures the necessary
    ACPI methods get called at appropriate times and allows the root port in
    Thinkpad X1 Carbon 6th to go into D3cold.
    
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eedd2de8dc728315c36e50aa19430932d2a88ac0
Author: Jorgen Hansen <jhansen@vmware.com>
Date:   Fri Sep 21 00:31:05 2018 -0700

    VMCI: Resource wildcard match fixed
    
    [ Upstream commit 11924ba5e671d6caef1516923e2bd8c72929a3fe ]
    
    When adding a VMCI resource, the check for an existing entry
    would ignore that the new entry could be a wildcard. This could
    result in multiple resource entries that would match a given
    handle. One disastrous outcome of this is that the
    refcounting used to ensure that delayed callbacks for VMCI
    datagrams have run before the datagram is destroyed can be
    wrong, since the refcount could be increased on the duplicate
    entry. This in turn leads to a use after free bug. This issue
    was discovered by Hangbin Liu using KASAN and syzkaller.
    
    Fixes: bc63dedb7d46 ("VMCI: resource object implementation")
    Reported-by: Hangbin Liu <liuhangbin@gmail.com>
    Reviewed-by: Adit Ranadive <aditr@vmware.com>
    Reviewed-by: Vishnu Dasa <vdasa@vmware.com>
    Signed-off-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe0f3e9e68305e1d6c354a9401e92c36b0427fb0
Author: Dexuan Cui <decui@microsoft.com>
Date:   Sun Sep 23 21:10:44 2018 +0000

    Drivers: hv: vmbus: Use cpumask_var_t for on-stack cpu mask
    
    [ Upstream commit 25355252607ca288f329ee033f387764883393f6 ]
    
    A cpumask structure on the stack can cause a warning with
    CONFIG_NR_CPUS=8192 (e.g. Ubuntu 16.04 and 18.04 use this):
    
    drivers/hv//channel_mgmt.c: In function ‘init_vp_index’:
    drivers/hv//channel_mgmt.c:702:1: warning: the frame size of 1032 bytes
      is larger than 1024 bytes [-Wframe-larger-than=]
    
    Nowadays it looks most distros enable CONFIG_CPUMASK_OFFSTACK=y, and
    hence we can work around the warning by using cpumask_var_t.
    
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e264876d8a64372154d77e7a5e0fadb1e3c70c9
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Tue Sep 25 13:54:33 2018 -0700

    f2fs: clear PageError on the read path
    
    [ Upstream commit fb7d70db305a1446864227abf711b756568f8242 ]
    
    When running fault injection test, I hit somewhat wrong behavior in f2fs_gc ->
    gc_data_segment():
    
    0. fault injection generated some PageError'ed pages
    
    1. gc_data_segment
     -> f2fs_get_read_data_page(REQ_RAHEAD)
    
    2. move_data_page
     -> f2fs_get_lock_data_page()
      -> f2f_get_read_data_page()
       -> f2fs_submit_page_read()
        -> submit_bio(READ)
      -> return EIO due to PageError
      -> fail to move data
    
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbc88d502e8160eda9b8bfd80c7c30a1b28640e8
Author: Javier Martinez Canillas <javierm@redhat.com>
Date:   Thu Aug 30 16:40:05 2018 +0200

    tpm: suppress transmit cmd error logs when TPM 1.2 is disabled/deactivated
    
    [ Upstream commit 0d6d0d62d9505a9816716aa484ebd0b04c795063 ]
    
    For TPM 1.2 chips the system setup utility allows to set the TPM device in
    one of the following states:
    
      * Active: Security chip is functional
      * Inactive: Security chip is visible, but is not functional
      * Disabled: Security chip is hidden and is not functional
    
    When choosing the "Inactive" state, the TPM 1.2 device is enumerated and
    registered, but sending TPM commands fail with either TPM_DEACTIVATED or
    TPM_DISABLED depending if the firmware deactivated or disabled the TPM.
    
    Since these TPM 1.2 error codes don't have special treatment, inactivating
    the TPM leads to a very noisy kernel log buffer that shows messages like
    the following:
    
      tpm_tis 00:05: 1.2 TPM (device-id 0x0, rev-id 78)
      tpm tpm0: A TPM error (6) occurred attempting to read a pcr value
      tpm tpm0: TPM is disabled/deactivated (0x6)
      tpm tpm0: A TPM error (6) occurred attempting get random
      tpm tpm0: A TPM error (6) occurred attempting to read a pcr value
      ima: No TPM chip found, activating TPM-bypass! (rc=6)
      tpm tpm0: A TPM error (6) occurred attempting get random
      tpm tpm0: A TPM error (6) occurred attempting get random
      tpm tpm0: A TPM error (6) occurred attempting get random
      tpm tpm0: A TPM error (6) occurred attempting get random
    
    Let's just suppress error log messages for the TPM_{DEACTIVATED,DISABLED}
    return codes, since this is expected when the TPM 1.2 is set to Inactive.
    
    In that case the kernel log is cleaner and less confusing for users, i.e:
    
      tpm_tis 00:05: 1.2 TPM (device-id 0x0, rev-id 78)
      tpm tpm0: TPM is disabled/deactivated (0x6)
      ima: No TPM chip found, activating TPM-bypass! (rc=6)
    
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47b1c864123a5fd1452709feea371d05a30e24da
Author: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
Date:   Mon Oct 8 13:53:59 2018 +0100

    usb: typec: tcpm: Report back negotiated PPS voltage and current
    
    [ Upstream commit 554fab6dbf20ee7298ed2d4e8398b85e6058abb7 ]
    
    Currently when requesting a specific voltage or current through
    the psy interface, for PPS, when reading back from that interface
    the values will always be the same as previously given, if the
    request was successful. However PPS only allows for 20mV voltage
    steps and 50mA current steps, and the psy class expects microvolt
    and micro amp requests, so inbetween values can be provided through
    this interface. Really when reading back the true values negotiated
    should be given, and not the ones originally asked for.
    
    To report the actual values negotiated with the Source, the values
    stored are now rounded down to the relevant step units prior to
    building the PPS request, so that those values are later correctly
    reported through the psy interface. In addition this improves the
    adjustments made to meet the operating power requirements of the
    platform, which previously could have been slightly out due to not
    using valid PPS units of voltage and current.
    
    Signed-off-by: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b88a5dd150a562edad5be296fd63f3ba70f92528
Author: Alan Douglas <adouglas@cadence.com>
Date:   Thu Oct 11 17:15:43 2018 +0100

    PCI: cadence: Use AXI region 0 to signal interrupts from EP
    
    [ Upstream commit 0652d4b6b56f73c81abbdbc7e26f772cb2dfe370 ]
    
    The IRQ physical address is allocated from region 0, rather than
    the highest region. Update the driver to reserve this region in
    the bitmap and to use region 0 for all types of interrupt.
    
    This corrects a problem which prevents the interrupt being
    signalled correctly if using the first address in the AXI region,
    since an offset of zero will always be mapped to region 0.
    
    Fixes: 37dddf14f1ae ("PCI: cadence: Add EndPoint Controller driver for Cadence PCIe controller")
    Signed-off-by: Alan Douglas <adouglas@cadence.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 979fbe4045c830705da2d79b551010e9ce9e37e6
Author: Honghui Zhang <honghui.zhang@mediatek.com>
Date:   Mon Oct 15 16:08:52 2018 +0800

    PCI: mediatek: Fix mtk_pcie_find_port() endpoint/port matching logic
    
    [ Upstream commit 074d6f32689ce05a084b6fa3db38445745bf11cc ]
    
    The Mediatek's host controller has two slots, each with its own control
    registers. The host driver needs to identify what slot is connected to
    what port in order to access the device's configuration space.
    
    Current code retrieving slot connected to a given endpoint device.
    
    Assuming each slot is connected to one endpoint device as below:
    
                    host bridge
      bus 0 --> __________|_______
               |                  |
               |                  |
             slot 0             slot 1
      bus 1 -->|        bus 2 --> |
               |                  |
             EP 0               EP 1
    
    During PCI enumeration, system software will scan all the PCI devices on
    every bus starting from devfn 0. Using PCI_SLOT(devfn) for matching an
    endpoint to its slot is erroneous in that the devfn does not contain the
    hierarchical bus numbering in it. In order to match an endpoint with its
    slot (and related port), the PCI tree must be walked up to the root bus
    (where the root ports are situated) and then the PCI_SLOT(devfn)
    matching logic can be correctly applied for matching.
    
    This patch fixes the mtk_pcie_find_port() slot matching logic by adding
    appropriate PCI tree walking code to retrieve the slot/port a given
    endpoint is connected to.
    
    Signed-off-by: Honghui Zhang <honghui.zhang@mediatek.com>
    [lorenzo.pieralisi@arm.com: rewrote the commit log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Acked-by: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f91a686192f6ab6ce8d7e56693cda2cc42cee858
Author: Tudor.Ambarus@microchip.com <Tudor.Ambarus@microchip.com>
Date:   Mon Oct 15 09:00:54 2018 +0000

    usb: host: ohci-at91: fix request of irq for optional gpio
    
    [ Upstream commit 325b9313ec3be56c8e2fe03f977fee19cec75820 ]
    
    atmel,oc-gpio is optional. Request its irq only when atmel,oc is set
    in device tree.
    
    devm_gpiod_get_index_optional returns NULL if -ENOENT. Check its
    return value for NULL before error, because it is more probable that
    atmel,oc is not set.
    
    This fixes the following errors on boards where atmel,oc is not set in
    device tree:
    [    0.960000] at91_ohci 500000.ohci: failed to request gpio "overcurrent" IRQ
    [    0.960000] at91_ohci 500000.ohci: failed to request gpio "overcurrent" IRQ
    [    0.970000] at91_ohci 500000.ohci: failed to request gpio "overcurrent" IRQ
    
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd4049585f153cf2584746e11461424071ef9497
Author: Selvin Xavier <selvin.xavier@broadcom.com>
Date:   Mon Oct 8 03:27:53 2018 -0700

    RDMA/bnxt_re: Fix recursive lock warning in debug kernel
    
    [ Upstream commit d455f29f6d76a5f94881ca1289aaa1e90617ff5d ]
    
    Fix possible recursive lock warning. Its a false warning as the locks are
    part of two differnt HW Queue data structure - cmdq and creq. Debug kernel
    is throwing the following warning and stack trace.
    
    [  783.914967] ============================================
    [  783.914970] WARNING: possible recursive locking detected
    [  783.914973] 4.19.0-rc2+ #33 Not tainted
    [  783.914976] --------------------------------------------
    [  783.914979] swapper/2/0 is trying to acquire lock:
    [  783.914982] 000000002aa3949d (&(&hwq->lock)->rlock){..-.}, at: bnxt_qplib_service_creq+0x232/0x350 [bnxt_re]
    [  783.914999]
    but task is already holding lock:
    [  783.915002] 00000000be73920d (&(&hwq->lock)->rlock){..-.}, at: bnxt_qplib_service_creq+0x2a/0x350 [bnxt_re]
    [  783.915013]
    other info that might help us debug this:
    [  783.915016]  Possible unsafe locking scenario:
    
    [  783.915019]        CPU0
    [  783.915021]        ----
    [  783.915034]   lock(&(&hwq->lock)->rlock);
    [  783.915035]   lock(&(&hwq->lock)->rlock);
    [  783.915037]
     *** DEADLOCK ***
    
    [  783.915038]  May be due to missing lock nesting notation
    
    [  783.915039] 1 lock held by swapper/2/0:
    [  783.915040]  #0: 00000000be73920d (&(&hwq->lock)->rlock){..-.}, at: bnxt_qplib_service_creq+0x2a/0x350 [bnxt_re]
    [  783.915044]
    stack backtrace:
    [  783.915046] CPU: 2 PID: 0 Comm: swapper/2 Not tainted 4.19.0-rc2+ #33
    [  783.915047] Hardware name: Dell Inc. PowerEdge R730/0599V5, BIOS 1.0.4 08/28/2014
    [  783.915048] Call Trace:
    [  783.915049]  <IRQ>
    [  783.915054]  dump_stack+0x90/0xe3
    [  783.915058]  __lock_acquire+0x106c/0x1080
    [  783.915061]  ? sched_clock+0x5/0x10
    [  783.915063]  lock_acquire+0xbd/0x1a0
    [  783.915065]  ? bnxt_qplib_service_creq+0x232/0x350 [bnxt_re]
    [  783.915069]  _raw_spin_lock_irqsave+0x4a/0x90
    [  783.915071]  ? bnxt_qplib_service_creq+0x232/0x350 [bnxt_re]
    [  783.915073]  bnxt_qplib_service_creq+0x232/0x350 [bnxt_re]
    [  783.915078]  tasklet_action_common.isra.17+0x197/0x1b0
    [  783.915081]  __do_softirq+0xcb/0x3a6
    [  783.915084]  irq_exit+0xe9/0x100
    [  783.915085]  do_IRQ+0x6a/0x120
    [  783.915087]  common_interrupt+0xf/0xf
    [  783.915088]  </IRQ>
    
    Use nested notation for the spin_lock to avoid this warning.
    
    Signed-off-by: Selvin Xavier <selvin.xavier@broadcom.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12100249f2be8a7fc6d874099ff075a99b9e12c6
Author: Selvin Xavier <selvin.xavier@broadcom.com>
Date:   Mon Oct 8 03:27:56 2018 -0700

    RDMA/bnxt_re: Avoid accessing nq->bar_reg_iomem in failure case
    
    [ Upstream commit ed51efd2ce44091a858ad829f666727e7c95695e ]
    
    In the failure path, nq->bar_reg_iomem gets accessed without
    initializing. Avoid this by calling the bnxt_qplib_nq_stop_irq only if the
    initialization is complete.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Fixes: 1ac5a4047975 ("RDMA/bnxt_re: Add bnxt_re RoCE driver")
    Fixes: 6e04b1035689 ("RDMA/bnxt_re: Fix broken RoCE driver due to recent L2 driver changes")
    Signed-off-by: Selvin Xavier <selvin.xavier@broadcom.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 255cecf2a5ebaba4fe4b9ad11827c40283a43e14
Author: Denis Drozdov <denisd@mellanox.com>
Date:   Thu Oct 11 22:33:57 2018 +0300

    IB/ipoib: Clear IPCB before icmp_send
    
    [ Upstream commit 4d6e4d12da2c308f8f976d3955c45ee62539ac98 ]
    
    IPCB should be cleared before icmp_send, since it may contain data from
    previous layers and the data could be misinterpreted as ip header options,
    which later caused the ihl to be set to an invalid value and resulted in
    the following stack corruption:
    
    [ 1083.031512] ib0: packet len 57824 (> 2048) too long to send, dropping
    [ 1083.031843] ib0: packet len 37904 (> 2048) too long to send, dropping
    [ 1083.032004] ib0: packet len 4040 (> 2048) too long to send, dropping
    [ 1083.032253] ib0: packet len 63800 (> 2048) too long to send, dropping
    [ 1083.032481] ib0: packet len 23960 (> 2048) too long to send, dropping
    [ 1083.033149] ib0: packet len 63800 (> 2048) too long to send, dropping
    [ 1083.033439] ib0: packet len 63800 (> 2048) too long to send, dropping
    [ 1083.033700] ib0: packet len 63800 (> 2048) too long to send, dropping
    [ 1083.034124] ib0: packet len 63800 (> 2048) too long to send, dropping
    [ 1083.034387] ==================================================================
    [ 1083.034602] BUG: KASAN: stack-out-of-bounds in __ip_options_echo+0xf08/0x1310
    [ 1083.034798] Write of size 4 at addr ffff880353457c5f by task kworker/u16:0/7
    [ 1083.034990]
    [ 1083.035104] CPU: 7 PID: 7 Comm: kworker/u16:0 Tainted: G           O      4.19.0-rc5+ #1
    [ 1083.035316] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu2 04/01/2014
    [ 1083.035573] Workqueue: ipoib_wq ipoib_cm_skb_reap [ib_ipoib]
    [ 1083.035750] Call Trace:
    [ 1083.035888]  dump_stack+0x9a/0xeb
    [ 1083.036031]  print_address_description+0xe3/0x2e0
    [ 1083.036213]  kasan_report+0x18a/0x2e0
    [ 1083.036356]  ? __ip_options_echo+0xf08/0x1310
    [ 1083.036522]  __ip_options_echo+0xf08/0x1310
    [ 1083.036688]  icmp_send+0x7b9/0x1cd0
    [ 1083.036843]  ? icmp_route_lookup.constprop.9+0x1070/0x1070
    [ 1083.037018]  ? netif_schedule_queue+0x5/0x200
    [ 1083.037180]  ? debug_show_all_locks+0x310/0x310
    [ 1083.037341]  ? rcu_dynticks_curr_cpu_in_eqs+0x85/0x120
    [ 1083.037519]  ? debug_locks_off+0x11/0x80
    [ 1083.037673]  ? debug_check_no_obj_freed+0x207/0x4c6
    [ 1083.037841]  ? check_flags.part.27+0x450/0x450
    [ 1083.037995]  ? debug_check_no_obj_freed+0xc3/0x4c6
    [ 1083.038169]  ? debug_locks_off+0x11/0x80
    [ 1083.038318]  ? skb_dequeue+0x10e/0x1a0
    [ 1083.038476]  ? ipoib_cm_skb_reap+0x2b5/0x650 [ib_ipoib]
    [ 1083.038642]  ? netif_schedule_queue+0xa8/0x200
    [ 1083.038820]  ? ipoib_cm_skb_reap+0x544/0x650 [ib_ipoib]
    [ 1083.038996]  ipoib_cm_skb_reap+0x544/0x650 [ib_ipoib]
    [ 1083.039174]  process_one_work+0x912/0x1830
    [ 1083.039336]  ? wq_pool_ids_show+0x310/0x310
    [ 1083.039491]  ? lock_acquire+0x145/0x3a0
    [ 1083.042312]  worker_thread+0x87/0xbb0
    [ 1083.045099]  ? process_one_work+0x1830/0x1830
    [ 1083.047865]  kthread+0x322/0x3e0
    [ 1083.050624]  ? kthread_create_worker_on_cpu+0xc0/0xc0
    [ 1083.053354]  ret_from_fork+0x3a/0x50
    
    For instance __ip_options_echo is failing to proceed with invalid srr and
    optlen passed from another layer via IPCB
    
    [  762.139568] IPv4: __ip_options_echo rr=0 ts=0 srr=43 cipso=0
    [  762.139720] IPv4: ip_options_build: IPCB 00000000f3cd969e opt 000000002ccb3533
    [  762.139838] IPv4: __ip_options_echo in srr: optlen 197 soffset 84
    [  762.139852] IPv4: ip_options_build srr=0 is_frag=0 rr_needaddr=0 ts_needaddr=0 ts_needtime=0 rr=0 ts=0
    [  762.140269] ==================================================================
    [  762.140713] IPv4: __ip_options_echo rr=0 ts=0 srr=0 cipso=0
    [  762.141078] BUG: KASAN: stack-out-of-bounds in __ip_options_echo+0x12ec/0x1680
    [  762.141087] Write of size 4 at addr ffff880353457c7f by task kworker/u16:0/7
    
    Signed-off-by: Denis Drozdov <denisd@mellanox.com>
    Reviewed-by: Erez Shitrit <erezsh@mellanox.com>
    Reviewed-by: Feras Daoud <ferasda@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 086b1e14c5256893bc41e246eee004cf01437756
Author: Parav Pandit <parav@mellanox.com>
Date:   Sun Oct 7 12:12:40 2018 +0300

    RDMA/core: Do not expose unsupported counters
    
    [ Upstream commit 0f6ef65d1c6ec8deb5d0f11f86631ec4cfe8f22e ]
    
    If the provider driver (such as rdma_rxe) doesn't support pma counters,
    avoid exposing its directory similar to optional hw_counters directory.
    If core fails to read the PMA counter, return an error so that user can
    retry later if needed.
    
    Fixes: 35c4cbb17811 ("IB/core: Create get_perf_mad function in sysfs.c")
    Reported-by: Holger Hoffstätte <holger@applied-asynchrony.com>
    Tested-by: Holger Hoffstätte <holger@applied-asynchrony.com>
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b7b9aead1865549b9c1eef56f6f71acbf74980a
Author: Wenwen Wang <wang6495@umn.edu>
Date:   Sat Oct 6 13:34:21 2018 -0500

    scsi: megaraid_sas: fix a missing-check bug
    
    [ Upstream commit 47db7873136a9c57c45390a53b57019cf73c8259 ]
    
    In megasas_mgmt_compat_ioctl_fw(), to handle the structure
    compat_megasas_iocpacket 'cioc', a user-space structure megasas_iocpacket
    'ioc' is allocated before megasas_mgmt_ioctl_fw() is invoked to handle
    the packet. Since the two data structures have different fields, the data
    is copied from 'cioc' to 'ioc' field by field. In the copy process,
    'sense_ptr' is prepared if the field 'sense_len' is not null, because it
    will be used in megasas_mgmt_ioctl_fw(). To prepare 'sense_ptr', the
    user-space data 'ioc->sense_off' and 'cioc->sense_off' are copied and
    saved to kernel-space variables 'local_sense_off' and 'user_sense_off'
    respectively. Given that 'ioc->sense_off' is also copied from
    'cioc->sense_off', 'local_sense_off' and 'user_sense_off' should have the
    same value. However, 'cioc' is in the user space and a malicious user can
    race to change the value of 'cioc->sense_off' after it is copied to
    'ioc->sense_off' but before it is copied to 'user_sense_off'. By doing
    so, the attacker can inject different values into 'local_sense_off' and
    'user_sense_off'. This can cause undefined behavior in the following
    execution, because the two variables are supposed to be same.
    
    This patch enforces a check on the two kernel variables 'local_sense_off'
    and 'user_sense_off' to make sure they are the same after the copy. In
    case they are not, an error code EINVAL will be returned.
    
    Signed-off-by: Wenwen Wang <wang6495@umn.edu>
    Acked-by: Sumit Saxena <sumit.saxena@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b4ae263d7d597c3a53aef2545d5f17b41396177
Author: Jim Mattson <jmattson@google.com>
Date:   Fri Sep 21 10:36:17 2018 -0700

    KVM: nVMX: Clear reserved bits of #DB exit qualification
    
    [ Upstream commit cfb634fe3052aefc4e1360fa322018c9a0b49755 ]
    
    According to volume 3 of the SDM, bits 63:15 and 12:4 of the exit
    qualification field for debug exceptions are reserved (cleared to
    0). However, the SDM is incorrect about bit 16 (corresponding to
    DR6.RTM). This bit should be set if a debug exception (#DB) or a
    breakpoint exception (#BP) occurred inside an RTM region while
    advanced debugging of RTM transactional regions was enabled. Note that
    this is the opposite of DR6.RTM, which "indicates (when clear) that a
    debug exception (#DB) or breakpoint exception (#BP) occurred inside an
    RTM region while advanced debugging of RTM transactional regions was
    enabled."
    
    There is still an issue with stale DR6 bits potentially being
    misreported for the current debug exception.  DR6 should not have been
    modified before vectoring the #DB exception, and the "new DR6 bits"
    should be available somewhere, but it was and they aren't.
    
    Fixes: b96fb439774e1 ("KVM: nVMX: fixes to nested virt interrupt injection")
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58d06d2dbea7af4912c7a3608bcb6fd93880c3fe
Author: David Howells <dhowells@redhat.com>
Date:   Thu Sep 6 10:19:24 2018 +0100

    UAPI: ndctl: Fix g++-unsupported initialisation in headers
    
    [ Upstream commit 9607871f37dc3e717639694b8d0dc738f2a68efc ]
    
    The following code in the linux/ndctl header file:
    
            static inline const char *nvdimm_bus_cmd_name(unsigned cmd)
            {
                    static const char * const names[] = {
                            [ND_CMD_ARS_CAP] = "ars_cap",
                            [ND_CMD_ARS_START] = "ars_start",
                            [ND_CMD_ARS_STATUS] = "ars_status",
                            [ND_CMD_CLEAR_ERROR] = "clear_error",
                            [ND_CMD_CALL] = "cmd_call",
                    };
    
                    if (cmd < ARRAY_SIZE(names) && names[cmd])
                            return names[cmd];
                    return "unknown";
            }
    
    is broken in a number of ways:
    
     (1) ARRAY_SIZE() is not generally defined.
    
     (2) g++ does not support "non-trivial" array initialisers fully yet.
    
     (3) Every file that calls this function will acquire a copy of names[].
    
    The same goes for nvdimm_cmd_name().
    
    Fix all three by converting to a switch statement where each case returns a
    string.  That way if cmd is a constant, the compiler can trivially reduce it
    and, if not, the compiler can use a shared lookup table if it thinks that is
    more efficient.
    
    A better way would be to remove these functions and their arrays from the
    header entirely.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97f21a6b942c38517e6e812f576167921bc8cf1a
Author: Evan Green <evgreen@chromium.org>
Date:   Fri Oct 5 10:27:32 2018 -0700

    scsi: ufs: Schedule clk gating work on correct queue
    
    [ Upstream commit f4bb7704699beee9edfbee875daa9089c86cf724 ]
    
    With commit 10e5e37581fc ("scsi: ufs: Add clock ungating to a separate
    workqueue"), clock gating work was moved to a separate work queue with
    WQ_MEM_RECLAIM set, since clock gating could occur from a memory reclaim
    context. Unfortunately, clk_gating.gate_work was left queued via
    schedule_delayed_work, which is a system workqueue that does not have
    WQ_MEM_RECLAIM set.  Because ufshcd_ungate_work attempts to cancel
    gate_work, the following warning appears:
    
    [   14.174170] workqueue: WQ_MEM_RECLAIM ufs_clk_gating_0:ufshcd_ungate_work is flushing !WQ_MEM_RECLAIM events:ufshcd_gate_work
    [   14.174179] WARNING: CPU: 4 PID: 173 at kernel/workqueue.c:2440 check_flush_dependency+0x110/0x118
    [   14.205725] CPU: 4 PID: 173 Comm: kworker/u16:3 Not tainted 4.14.68 #1
    [   14.212437] Hardware name: Google Cheza (rev1) (DT)
    [   14.217459] Workqueue: ufs_clk_gating_0 ufshcd_ungate_work
    [   14.223107] task: ffffffc0f6a40080 task.stack: ffffff800a490000
    [   14.229195] PC is at check_flush_dependency+0x110/0x118
    [   14.234569] LR is at check_flush_dependency+0x110/0x118
    [   14.239944] pc : [<ffffff80080cad14>] lr : [<ffffff80080cad14>] pstate: 60c001c9
    [   14.333050] Call trace:
    [   14.427767] [<ffffff80080cad14>] check_flush_dependency+0x110/0x118
    [   14.434219] [<ffffff80080cafec>] start_flush_work+0xac/0x1fc
    [   14.440046] [<ffffff80080caeec>] flush_work+0x40/0x94
    [   14.445246] [<ffffff80080cb288>] __cancel_work_timer+0x11c/0x1b8
    [   14.451433] [<ffffff80080cb4b8>] cancel_delayed_work_sync+0x20/0x30
    [   14.457886] [<ffffff80085b9294>] ufshcd_ungate_work+0x24/0xd0
    [   14.463800] [<ffffff80080cfb04>] process_one_work+0x32c/0x690
    [   14.469713] [<ffffff80080d0154>] worker_thread+0x218/0x338
    [   14.475361] [<ffffff80080d527c>] kthread+0x120/0x130
    [   14.480470] [<ffffff8008084814>] ret_from_fork+0x10/0x18
    
    The simple solution is to put the gate_work on the same WQ_MEM_RECLAIM
    work queue as the ungate_work.
    
    Fixes: 10e5e37581fc ("scsi: ufs: Add clock ungating to a separate workqueue")
    Signed-off-by: Evan Green <evgreen@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34fb187df0d0db6ca98017f9e04ea970032d53ba
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Tue Oct 16 16:31:25 2018 +1100

    scsi: esp_scsi: Track residual for PIO transfers
    
    [ Upstream commit fd47d919d0c336e7c22862b51ee94927ffea227a ]
    
    If a target disconnects during a PIO data transfer the command may fail
    when the target reconnects:
    
    scsi host1: DMA length is zero!
    scsi host1: cur adr[04380000] len[00000000]
    
    The scsi bus is then reset. This happens because the residual reached
    zero before the transfer was completed.
    
    The usual residual calculation relies on the Transfer Count registers.
    That works for DMA transfers but not for PIO transfers. Fix the problem
    by storing the PIO transfer residual and using that to correctly
    calculate bytes_sent.
    
    Fixes: 6fe07aaffbf0 ("[SCSI] m68k: new mac_esp scsi driver")
    Tested-by: Stan Johnson <userm57@yahoo.com>
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Tested-by: Michael Schmitz <schmitzmic@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b9dd8af6dd52aafdfbd9591a71f134a0bb14d3c
Author: Jack Wang <jinpu.wang@profitbricks.com>
Date:   Fri Oct 19 16:21:31 2018 +0200

    md: fix memleak for mempool
    
    [ Upstream commit 6aaa58c994277647f8b05ffef3b9b225a2d08f36 ]
    
    I noticed kmemleak report memory leak when run create/stop
    md in a loop, backtrace:
    [<000000001ca975e7>] mempool_create_node+0x86/0xd0
    [<0000000095576bcd>] md_run+0x1057/0x1410 [md_mod]
    [<000000007b45c5fc>] do_md_run+0x15/0x130 [md_mod]
    [<000000001ede9ec0>] md_ioctl+0x1f49/0x25d0 [md_mod]
    [<000000004142cacf>] blkdev_ioctl+0x680/0xd00
    
    The root cause is we alloc mddev->flush_pool and
    mddev->flush_bio_pool in md_run, but from do_md_stop
    will not call into md_stop but __md_stop, move the
    mempool_destroy to __md_stop fixes the problem for me.
    
    The bug was introduced in 5a409b4f56d5, the fixes should go to
    4.18+
    
    Fixes: 5a409b4f56d5 ("MD: fix lock contention for flush bios")
    Signed-off-by: Jack Wang <jinpu.wang@profitbricks.com>
    Reviewed-by: Xiao Ni <xni@redhat.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99c08e1dd14627782680d5693fa5d892bb43c7a8
Author: Xiao Ni <xni@redhat.com>
Date:   Sat Oct 20 08:09:25 2018 +0800

    MD: Memory leak when flush bio size is zero
    
    [ Upstream commit af9b926de9c5986ab009e64917de87c9758bab10 ]
    
    flush_pool is leaked when flush bio size is zero
    
    Fixes: 5a409b4f56d5 ("MD: fix lock contention for flush bios")
    Signed-off-by: David Jeffery <djeffery@redhat.com>
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2065558bfab9705c0d418b0b4706b8acf93a161
Author: Chao Yu <chao@kernel.org>
Date:   Mon Oct 22 23:24:28 2018 +0800

    f2fs: fix to account IO correctly for cgroup writeback
    
    [ Upstream commit 78efac537de33faab9a4302cc05a70bb4a8b3b63 ]
    
    Now, we have supported cgroup writeback, it depends on correctly IO
    account of specified filesystem.
    
    But in commit d1b3e72d5490 ("f2fs: submit bio of in-place-update pages"),
    we split write paths from f2fs_submit_page_mbio() to two:
    - f2fs_submit_page_bio() for IPU path
    - f2fs_submit_page_bio() for OPU path
    
    But still we account write IO only in f2fs_submit_page_mbio(), result in
    incorrect IO account, fix it by adding missing IO account in IPU path.
    
    Fixes: d1b3e72d5490 ("f2fs: submit bio of in-place-update pages")
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8eadae7951d5a5963de960cfdf0bc40b42cf4843
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:51 2018 +0200

    net: stmmac: dwmac-sun8i: fix OF child-node lookup
    
    [ Upstream commit ac63043d8cb5503c7e0fe110f947eacf2663804e ]
    
    Use the new of_get_compatible_child() helper to lookup the mdio-internal
    child node instead of using of_find_compatible_node(), which searches
    the entire tree from a given start node and thus can return an unrelated
    (i.e. non-child) node.
    
    This also addresses a potential use-after-free (e.g. after probe
    deferral) as the tree-wide helper drops a reference to its first
    argument (i.e. the mdio-mux node). Fortunately, this was inadvertently
    balanced by a failure to drop the mdio-mux reference after lookup.
    
    While at it, also fix the related mdio-internal- and phy-node reference
    leaks.
    
    Fixes: 634db83b8265 ("net: stmmac: dwmac-sun8i: Handle integrated/external MDIOs")
    Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Cc: Andrew Lunn <andrew@lunn.ch>
    Cc: Giuseppe Cavallaro <peppe.cavallaro@st.com>
    Cc: Alexandre Torgue <alexandre.torgue@st.com>
    Cc: Jose Abreu <joabreu@synopsys.com>
    Cc: David S. Miller <davem@davemloft.net>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35df1a8080abc17c09cd722f9f0eecb82b04694f
Author: Michal Hocko <mhocko@suse.com>
Date:   Thu Oct 18 10:56:17 2018 +0200

    cgroup, netclassid: add a preemption point to write_classid
    
    [ Upstream commit a90e90b7d55e789c71d85b946ffb5c1ab2f137ca ]
    
    We have seen a customer complaining about soft lockups on !PREEMPT
    kernel config with 4.4 based kernel
    
    [1072141.435366] NMI watchdog: BUG: soft lockup - CPU#21 stuck for 22s! [systemd:1]
    [1072141.444090] Modules linked in: mpt3sas raid_class binfmt_misc af_packet 8021q garp mrp stp llc xfs libcrc32c bonding iscsi_ibft iscsi_boot_sysfs msr ext4 crc16 jbd2 mbcache cdc_ether usbnet mii joydev hid_generic usbhid intel_rapl x86_pkg_temp_thermal intel_powerclamp coretemp crct10dif_pclmul crc32_pclmul ghash_clmulni_intel ipmi_ssif mgag200 i2c_algo_bit ttm ipmi_devintf drbg ixgbe drm_kms_helper vxlan ansi_cprng ip6_udp_tunnel drm aesni_intel udp_tunnel aes_x86_64 iTCO_wdt syscopyarea ptp xhci_pci lrw iTCO_vendor_support pps_core gf128mul ehci_pci glue_helper sysfillrect mdio pcspkr sb_edac ablk_helper cryptd ehci_hcd sysimgblt xhci_hcd fb_sys_fops edac_core mei_me lpc_ich ses usbcore enclosure dca mfd_core ipmi_si mei i2c_i801 scsi_transport_sas usb_common ipmi_msghandler shpchp fjes wmi processor button acpi_pad btrfs xor raid6_pq sd_mod crc32c_intel megaraid_sas sg dm_multipath dm_mod scsi_dh_rdac scsi_dh_emc scsi_dh_alua scsi_mod md_mod autofs4
    [1072141.444146] Supported: Yes
    [1072141.444149] CPU: 21 PID: 1 Comm: systemd Not tainted 4.4.121-92.80-default #1
    [1072141.444150] Hardware name: LENOVO Lenovo System x3650 M5 -[5462P4U]- -[5462P4U]-/01GR451, BIOS -[TCE136H-2.70]- 06/13/2018
    [1072141.444151] task: ffff880191bd0040 ti: ffff880191bd4000 task.ti: ffff880191bd4000
    [1072141.444153] RIP: 0010:[<ffffffff815229f9>]  [<ffffffff815229f9>] update_classid_sock+0x29/0x40
    [1072141.444157] RSP: 0018:ffff880191bd7d58  EFLAGS: 00000286
    [1072141.444158] RAX: ffff883b177cb7c0 RBX: 0000000000000000 RCX: 0000000000000000
    [1072141.444159] RDX: 00000000000009c7 RSI: ffff880191bd7d5c RDI: ffff8822e29bb200
    [1072141.444160] RBP: ffff883a72230980 R08: 0000000000000101 R09: 0000000000000000
    [1072141.444161] R10: 0000000000000008 R11: f000000000000000 R12: ffffffff815229d0
    [1072141.444162] R13: 0000000000000000 R14: ffff881fd0a47ac0 R15: ffff880191bd7f28
    [1072141.444163] FS:  00007f3e2f1eb8c0(0000) GS:ffff882000340000(0000) knlGS:0000000000000000
    [1072141.444164] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [1072141.444165] CR2: 00007f3e2f200000 CR3: 0000001ffea4e000 CR4: 00000000001606f0
    [1072141.444166] Stack:
    [1072141.444166]  ffffffa800000246 00000000000009c7 ffffffff8121d583 ffff8818312a05c0
    [1072141.444168]  ffff8818312a1100 ffff880197c3b280 ffff881861422858 ffffffffffffffea
    [1072141.444170]  ffffffff81522b1c ffffffff81d0ca20 ffff8817fa17b950 ffff883fdd8121e0
    [1072141.444171] Call Trace:
    [1072141.444179]  [<ffffffff8121d583>] iterate_fd+0x53/0x80
    [1072141.444182]  [<ffffffff81522b1c>] write_classid+0x4c/0x80
    [1072141.444187]  [<ffffffff8111328b>] cgroup_file_write+0x9b/0x100
    [1072141.444193]  [<ffffffff81278bcb>] kernfs_fop_write+0x11b/0x150
    [1072141.444198]  [<ffffffff81201566>] __vfs_write+0x26/0x100
    [1072141.444201]  [<ffffffff81201bed>] vfs_write+0x9d/0x190
    [1072141.444203]  [<ffffffff812028c2>] SyS_write+0x42/0xa0
    [1072141.444207]  [<ffffffff815f58c3>] entry_SYSCALL_64_fastpath+0x1e/0xca
    [1072141.445490] DWARF2 unwinder stuck at entry_SYSCALL_64_fastpath+0x1e/0xca
    
    If a cgroup has many tasks with many open file descriptors then we would
    end up in a large loop without any rescheduling point throught the
    operation. Add cond_resched once per task.
    
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 477fa78844c3878054bc7f286bef31011ebd5a91
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Oct 12 09:20:17 2018 +0200

    thermal: da9062/61: Prevent hardware access during system suspend
    
    [ Upstream commit 760eea43f8c6d48684f1f34b8a02fddc1456e849 ]
    
    The workqueue used for monitoring the hardware may run while the device
    is already suspended.  Fix this by using the freezable system workqueue
    instead, cfr. commit 51e20d0e3a60cf46 ("thermal: Prevent polling from
    happening during system suspend").
    
    Fixes: 608567aac3206ae8 ("thermal: da9062/61: Thermal junction temperature monitoring driver")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Acked-by: Steve Twiss <stwiss.opensource@diasemi.com>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ba7c7660bed9ba3059c7b63cf2b6ec7696ba57a
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Oct 12 09:20:16 2018 +0200

    thermal: rcar_thermal: Prevent doing work after unbind
    
    [ Upstream commit 697ee786f15d7b65c7f3045d45fe3a05d28e0911 ]
    
    When testing bind/unbind on r8a7791/koelsch:
    
        WARNING: CPU: 1 PID: 697 at lib/debugobjects.c:329 debug_print_object+0x8c/0xb4
        ODEBUG: free active (active state 0) object type: timer_list hint: delayed_work_timer_fn+0x0/0x10
    
    This happens if the workqueue runs after the device has been unbound.
    Fix this by cancelling any queued work during remove.
    
    Fixes: e0a5172e9eec7f0d ("thermal: rcar: add interrupt support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 363e948fcc3abda012cef77dfce687a24a2684c8
Author: Diego Viola <diego.viola@gmail.com>
Date:   Fri Oct 26 10:45:16 2018 -0300

    libata: Apply NOLPM quirk for SAMSUNG MZ7TD256HAFV-000L9
    
    [ Upstream commit a435ab4f80f983c53b4ca4f8c12b3ddd3ca17670 ]
    
    med_power_with_dipm causes my T450 to freeze with a SAMSUNG
    MZ7TD256HAFV-000L9 SSD (firmware DXT02L5Q).
    
    Switching the LPM to max_performance fixes this issue.
    
    Acked-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Diego Viola <diego.viola@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 043b60105fc21182f8604c734a63ae6630834f8e
Author: Martin Willi <martin@strongswan.org>
Date:   Wed Aug 22 09:39:52 2018 +0200

    ath10k: schedule hardware restart if WMI command times out
    
    [ Upstream commit a9911937e7d332761e8c4fcbc7ba0426bdc3956f ]
    
    When running in AP mode, ath10k sometimes suffers from TX credit
    starvation. The issue is hard to reproduce and shows up once in a
    few days, but has been repeatedly seen with QCA9882 and a large
    range of firmwares, including 10.2.4.70.67.
    
    Once the module is in this state, TX credits are never replenished,
    which results in "SWBA overrun" errors, as no beacons can be sent.
    Even worse, WMI commands run in a timeout while holding the conf
    mutex for three seconds each, making any further operations slow
    and the whole system unresponsive.
    
    The firmware/driver never recovers from that state automatically,
    and triggering TX flush or warm restarts won't work over WMI. So
    issue a hardware restart if a WMI command times out due to missing
    TX credits. This implies a connectivity outage of about 1.4s in AP
    mode, but brings back the interface and the whole system to a usable
    state. WMI command timeouts have not been seen in absent of this
    specific issue, so taking such drastic actions seems legitimate.
    
    Signed-off-by: Martin Willi <martin@strongswan.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0368ed155a2af390cfb0032732b6e9898dbf9bd
Author: Sebastian Basierski <sebastianx.basierski@intel.com>
Date:   Thu Aug 9 11:45:40 2018 +0200

    ixgbevf: VF2VF TCP RSS
    
    [ Upstream commit 7fb94bd58dd6650a0158e68d414e185077d8b57a ]
    
    While VF2VF with RSS communication, RSS Type were wrongly recognized
    and RSS hash was not calculated as it should be. Packets was
    distributed on various queues by accident.
    This commit fixes that behaviour and causes proper RSS Type recognition.
    
    Signed-off-by: Sebastian Basierski <sebastianx.basierski@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cfe42772c1d8d91fc9b3ed86c8165a1601968de
Author: Shannon Nelson <shannon.nelson@oracle.com>
Date:   Wed Aug 22 16:47:14 2018 -0700

    ixgbe: disallow IPsec Tx offload when in SR-IOV mode
    
    [ Upstream commit 47b6f50077e68bcd544f657526dad4bfdce7e87d ]
    
    There seems to be a problem in the x540's internal switch wherein if SR-IOV
    mode is enabled and an offloaded IPsec packet is sent to a local VF,
    the packet is silently dropped.  This might never be a problem as it is
    somewhat a corner case, but if someone happens to be using IPsec offload
    from the PF to a VF that just happens to get migrated to the local box,
    communication will mysteriously fail.
    
    Not good.
    
    A simple way to protect from this is to simply not allow any IPsec offloads
    for outgoing packets when num_vfs != 0.  This doesn't help any offloads that
    were created before SR-IOV was enabled, but we'll get to that later.
    
    Signed-off-by: Shannon Nelson <shannon.nelson@oracle.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 253b526d998bce684b5fa193853da936e23d9dc2
Author: Justin Chen <justinpopo6@gmail.com>
Date:   Fri Aug 17 16:47:39 2018 -0700

    gpio: brcmstb: allow 0 width GPIO banks
    
    [ Upstream commit bfba223dcc4548632d8f3bfd15690a86d4c68504 ]
    
    Sometimes we have empty banks within the GPIO block. This commit allows
    proper handling of 0 width GPIO banks. We handle 0 width GPIO banks by
    incrementing the bank and number of GPIOs, but not initializing them.
    This will mean a call into the non-existent GPIOs will return an error.
    
    Also remove "GPIO registered" dev print. This information is misleading
    since the incremented banks and gpio_base do not reflect the actual GPIOs
    that get initialized. We leave this information out since it is already
    printed with dev_dbg.
    
    Signed-off-by: Justin Chen <justinpopo6@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab9a0e99bf29a3f55252c1bfcc616e0b0be1dd97
Author: Sara Sharon <sara.sharon@intel.com>
Date:   Tue May 1 14:54:22 2018 +0300

    iwlwifi: mvm: fix BAR seq ctrl reporting
    
    [ Upstream commit 941ab4eb66c10bc5c7234e83a7a858b2806ed151 ]
    
    There is a bug in FW where the sequence control may be
    incorrect, and the driver overrides it with the value
    of the ieee80211 header.
    
    However, in BAR there is no sequence control in the header,
    which result with arbitrary sequence.
    
    This access to an unknown location is bad and it makes the
    logs very confusing - so fix it.
    
    Signed-off-by: Sara Sharon <sara.sharon@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dec405826694596b8dc92ab0d25bc6b6e86b581a
Author: Siva Rebbagondla <siva.rebbagondla@redpinesignals.com>
Date:   Mon Aug 27 17:05:14 2018 +0530

    rsi: fix memory alignment issue in ARM32 platforms
    
    [ Upstream commit baa8caf4ab7af2d9e84b566b99fe919a4e9e7562 ]
    
    During testing in ARM32 platforms, observed below kernel panic, as driver
    accessing data beyond the allocated memory while submitting URB to USB.
    
    Fix: Resolved this by specifying correct length by considering 64 bit
    alignment. so that, USB bus driver will access only allocated memory.
    
    Unit-test: Tested and confirm that driver bring up and scanning,
    connection and data transfer works fine with this fix.
    
    ...skipping...
    [   25.389450] Unable to handle kernel paging request at virtual
                   address 5aa11422
    [   25.403078] Internal error: Oops: 5 [#1] SMP ARM
    [   25.407703] Modules linked in: rsi_usb
    [   25.411473] CPU: 1 PID: 317 Comm: RX-Thread Not tainted 4.18.0-rc7 #1
    [   25.419221] Hardware name: Freescale i.MX6 Quad/DualLite (Device Tree)
    [   25.425764] PC is at skb_release_data+0x90/0x168
    [   25.430393] LR is at skb_release_all+0x28/0x2c
    [   25.434842] pc : [<807435b0>] lr : [<80742ba0>] psr: 200e0013 5aa1141e
    [   25.464633] Flags: nzCv  IRQs on  FIQs on  Mode SVC_32 ISA ARM Segment none
    [   25.477524] Process RX-Thread (pid: 317, stack limit = 0x(ptrval))
    [   25.483709] Stack: (0xedf69ed8 to 0xedf6a000)
    [   25.569907] Backtrace:
    [   25.572368] [<80743520>] (skb_release_data) from [<80742ba0>]
                   (skb_release_all+0x28/0x2c)
    [   25.580555] r9:7f00258c r8:00000001 r7:ee355000 r6:eddab0d0
                   r5:eddab000 r4:eddbb840
    [   25.588308] [<80742b78>] (skb_release_all) from [<807432cc>]
                   (consume_skb+0x30/0x50)
    [   25.596055] r5:eddab000 r4:eddbb840
    [   25.599648] [<8074329c>] (consume_skb) from [<7f00117c>]
                   (rsi_usb_rx_thread+0x64/0x12c [rsi_usb])
    [   25.608524] r5:eddab000 r4:eddbb840
    [   25.612116] [<7f001118>] (rsi_usb_rx_thread [rsi_usb]) from
                   [<80142750>] (kthread+0x11c/0x15c)
    [   25.620735] r10:ee9ff9e0 r9:edcde3b8 r8:ee355000 r7:edf68000
                   r6:edd3a780 r5:00000000
    [   25.628567] r4:edcde380
    [   25.631110] [<80142634>] (kthread) from [<801010e8>]
                   (ret_from_fork+0x14/0x2c)
    [   25.638336] Exception stack(0xedf69fb0 to 0xedf69ff8)
    [   25.682929] ---[ end trace 8236a5496f5b5d3b ]---
    
    Signed-off-by: Siva Rebbagondla <siva.rebbagondla@redpinesignals.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8b03c1e76638d98a8b0c8ea4e1a60199b2a0b79
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Sun Sep 2 18:13:14 2018 +0200

    net: dsa: mv88e6xxx: Fix writing to a PHY page.
    
    [ Upstream commit c309b158090d788e96ee597444965cb79b040484 ]
    
    After changing to the needed page, actually write the value to the
    register!
    
    Fixes: 09cb7dfd3f14 ("net: dsa: mv88e6xxx: describe PHY page and SerDes")
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba0885680af7549369b68aed5fb986d14018b8de
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Mon Sep 3 11:21:46 2018 +0100

    net: hns3: Fix for vf vlan delete failed problem
    
    [ Upstream commit 41dafea2af781d8e3ab8626d236b52e4172905a3 ]
    
    There are only 128 entries in vf vlan table, if user has added
    more than 128 vlan, fw will ignore it and disable the vf vlan
    table. So when user deletes the vlan entry that has not been
    set to vf vlan table, fw will return not found result and driver
    treat that as error, which will cause vlan delete failed problem.
    
    This patch fixes it by returning ok when fw returns not found
    result.
    
    Fixes: 6c251711b37f ("net: hns3: Disable vf vlan filter when vf vlan table is full")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff80ed73b6cf74efae517bc7d941d1adafb7eabe
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Mon Sep 3 11:21:51 2018 +0100

    net: hns3: Fix ping exited problem when doing lp selftest
    
    [ Upstream commit 3f8601f0f5716c4e63a9f215bbc581df42859d61 ]
    
    When ping is runnig and user executes the loopback selftest, the
    ping cmd will stop and exit.
    
    This patch fixes it by using the hns3_nic_net_open/stop to offline
    the netdev when doing loopback selftest.
    
    Fixes: c39c4d98dc65 ("net: hns3: Add mac loopback selftest support in hns3 driver")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65187c05f4898c0db7ee297a2b284585f02c464c
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Mon Sep 3 11:21:52 2018 +0100

    net: hns3: Preserve vlan 0 in hardware table
    
    [ Upstream commit daaa8521760ee4d4e65f309c4c37b3a1e58c9d4e ]
    
    When netdev is down, the stack will delete the vlan from
    hardware including vlan0, which will cause problem when
    doing loopback selftest when netdev is down.
    
    This patch fixes it by always preserving vlan 0 in hardware,
    because vlan 0 is defalut vlan, which should always be in
    hardware.
    
    Fixes: c39c4d98dc65 ("net: hns3: Add mac loopback selftest support in hns3 driver")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23c98b4d9fbd17513f6a31f0d0d5824ebcab324a
Author: Douglas Anderson <dianders@chromium.org>
Date:   Thu Aug 30 08:23:38 2018 -0700

    pinctrl: ssbi-gpio: Fix pm8xxx_pin_config_get() to be compliant
    
    [ Upstream commit b432414b996d32a1bd9afe2bd595bd5729c1477f ]
    
    If you look at "pinconf-groups" in debugfs for ssbi-gpio you'll notice
    it looks like nonsense.
    
    The problem is fairly well described in commit 1cf86bc21257 ("pinctrl:
    qcom: spmi-gpio: Fix pmic_gpio_config_get() to be compliant") and
    commit 05e0c828955c ("pinctrl: msm: Fix msm_config_group_get() to be
    compliant"), but it was pointed out that ssbi-gpio has the same
    problem.  Let's fix it there too.
    
    Fixes: b4c45fe974bc ("pinctrl: qcom: ssbi: Family A gpio & mpp drivers")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5ba8363907ccd77762bda155b143d8ece74745f
Author: Douglas Anderson <dianders@chromium.org>
Date:   Thu Aug 30 08:23:39 2018 -0700

    pinctrl: spmi-mpp: Fix pmic_mpp_config_get() to be compliant
    
    [ Upstream commit 0d5b476f8f57fcb06c45fe27681ac47254f63fd2 ]
    
    If you look at "pinconf-groups" in debugfs for ssbi-mpp you'll notice
    it looks like nonsense.
    
    The problem is fairly well described in commit 1cf86bc21257 ("pinctrl:
    qcom: spmi-gpio: Fix pmic_gpio_config_get() to be compliant") and
    commit 05e0c828955c ("pinctrl: msm: Fix msm_config_group_get() to be
    compliant"), but it was pointed out that ssbi-mpp has the same
    problem.  Let's fix it there too.
    
    NOTE: in case it's helpful to someone reading this, the way to tell
    whether to do the -EINVAL or not is to look at the PCONFDUMP for a
    given attribute.  If the last element (has_arg) is false then you need
    to do the -EINVAL trick.
    
    ALSO NOTE: it seems unlikely that the values returned when we try to
    get PIN_CONFIG_BIAS_PULL_UP will actually be printed since "has_arg"
    is false for that one, but I guess it's still fine to return different
    values so I kept doing that.  It seems like another driver (ssbi-gpio)
    uses a custom attribute (PM8XXX_QCOM_PULL_UP_STRENGTH) for something
    similar so maybe a future change should do that here too.
    
    Fixes: cfb24f6ebd38 ("pinctrl: Qualcomm SPMI PMIC MPP pin controller driver")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0ff16f0402adac9b966004a5ee2a260548f79fa
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Wed Sep 5 10:47:56 2018 -0300

    perf tests: Fix record+probe_libc_inet_pton.sh without ping's debuginfo
    
    [ Upstream commit 1632936480a53d85ef3012cd9f290e247251cbb9 ]
    
    When we don't have the iputils-debuginfo package installed, i.e. when we
    don't have the DWARF information needed to resolve ping's samples, we
    end up failing this 'perf test' entry:
    
      # perf test ping
      62: probe libc's inet_pton & backtrace it with ping       : Ok
      # rpm -e iputils-debuginfo
      # perf test ping
      62: probe libc's inet_pton & backtrace it with ping       : FAILED!
      #
    
    Fix it to accept "[unknown]" where the symbol + offset, when resolved,
    is expected.
    
    I think this will fail in the other arches as well, but since I can't
    test now, I'm leaving s390x and ppc cases as-is.
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Kim Phillips <kim.phillips@arm.com>
    Cc: Michael Petlan <mpetlan@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Cc: Sandipan Das <sandipan@linux.vnet.ibm.com>
    Cc: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>
    Cc: Thomas Richter <tmricht@linux.vnet.ibm.com>
    Cc: Wang Nan <wangnan0@huawei.com>
    Fixes: 7903a7086723 ("perf script: Show symbol offsets by default")
    Link: https://lkml.kernel.org/n/tip-hnizqwqrs03vcq1b74yao0f6@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit baef398e5deaf27dfa57f9acfbdc571456210d33
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue Sep 4 02:56:26 2018 +0000

    failover: Add missing check to validate 'slave_dev' in net_failover_slave_unregister
    
    [ Upstream commit 9e7e6cabf371cc008cb2244a04c012b516753693 ]
    
    Fixes gcc '-Wunused-but-set-variable' warning:
    
    drivers/net/net_failover.c: In function 'net_failover_slave_unregister':
    drivers/net/net_failover.c:598:35: warning:
     variable 'primary_dev' set but not used [-Wunused-but-set-variable]
    
    There should check the validity of 'slave_dev'.
    
    Fixes: cfc80d9a1163 ("net: Introduce net_failover driver")
    
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Acked-by: Sridhar Samudrala <sridhar.samudrala@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f47ceb5f3a0862f7651b15874452968c8c83b9ad
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Tue Sep 4 19:13:44 2018 -0700

    bpf/verifier: fix verifier instability
    
    [ Upstream commit a9c676bc8fc58d00eea9836fb14ee43c0346416a ]
    
    Edward Cree says:
    In check_mem_access(), for the PTR_TO_CTX case, after check_ctx_access()
    has supplied a reg_type, the other members of the register state are set
    appropriately.  Previously reg.range was set to 0, but as it is in a
    union with reg.map_ptr, which is larger, upper bytes of the latter were
    left in place.  This then caused the memcmp() in regsafe() to fail,
    preventing some branches from being pruned (and occasionally causing the
    same program to take a varying number of processed insns on repeated
    verifier runs).
    
    Fix the instability by clearing bpf_reg_state in __mark_reg_[un]known()
    
    Fixes: f1174f77b50c ("bpf/verifier: rework value tracking")
    Debugged-by: Edward Cree <ecree@solarflare.com>
    Acked-by: Edward Cree <ecree@solarflare.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0222ea97aa1d1acf6f257875903f50d6c2e706a
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Thu Aug 30 17:58:52 2018 -0700

    pinctrl: qcom: spmi-mpp: Fix drive strength setting
    
    [ Upstream commit 89c68b102f13f123aaef22b292526d6b92501334 ]
    
    It looks like we parse the drive strength setting here, but never
    actually write it into the hardware to update it. Parse the setting and
    then write it at the end of the pinconf setting function so that it
    actually sticks in the hardware.
    
    Fixes: 0e948042c420 ("pinctrl: qcom: spmi-mpp: Implement support for sink mode")
    Cc: Doug Anderson <dianders@chromium.org>
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64b74ae515f76ff1e50c9525b8b64704f0498c0a
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Aug 27 09:45:44 2018 +0200

    ACPI / LPSS: Add alternative ACPI HIDs for Cherry Trail DMA controllers
    
    [ Upstream commit 240714061c58e6b1abfb3322398a7634151c06cb ]
    
    Bay and Cherry Trail DSTDs represent a different set of devices depending
    on which OS the device think it is booting. One set of decices for Windows
    and another set of devices for Android which targets the Android-x86 Linux
    kernel fork (which e.g. used to have its own display driver instead of
    using the i915 driver).
    
    Which set of devices we are actually going to get is out of our control,
    this is controlled by the ACPI OSID variable, which gets either set through
    an EFI setup option, or sometimes is autodetected. So we need to support
    both.
    
    This commit adds support for the 80862286 and 808622C0 ACPI HIDs which we
    get for the first resp. second DMA controller on Cherry Trail devices when
    OSID is set to Android.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d70f08ad016276d2f8bc1eb119c2986c7e55c422
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Sep 10 00:28:05 2018 +0200

    spi: gpio: No MISO does not imply no RX
    
    [ Upstream commit abf5feef3ff0cefade0c76be53b59e55fdd46093 ]
    
    There is a logical problem in spi-gpio with host just
    assigning a MOSI line and no MISO: this is interpreted
    as the host cannot do RX and the host is flagged with
    SPI_MASTER_NO_RX.
    
    This is wrong: since GPIO lines can switch direction,
    in 3WIRE operation the host will simply reverse the
    direction of the GPIO line and start reading from it,
    there is even code for doing this in the driver, but
    it went unnoticed because it was tested by using a
    master with 4 wires but a device using just 3 wires.
    
    Remove the offending flag.
    
    Cc: Andrzej Hajda <a.hajda@samsung.com>
    Cc: Lorenzo Bianconi <lorenzo.bianconi@redhat.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e67ec9ef7925eb153a531265e71d36bead1b0f5c
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Sep 11 19:20:40 2018 +0900

    kprobes: Return error if we fail to reuse kprobe instead of BUG_ON()
    
    [ Upstream commit 819319fc93461c07b9cdb3064f154bd8cfd48172 ]
    
    Make reuse_unused_kprobe() to return error code if
    it fails to reuse unused kprobe for optprobe instead
    of calling BUG_ON().
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>
    Cc: David S . Miller <davem@davemloft.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Naveen N . Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/153666124040.21306.14150398706331307654.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a035a98f1b37451c9a5c7fb93eb6d2ec0d8faa5
Author: Will Deacon <will@kernel.org>
Date:   Tue Aug 7 13:43:06 2018 +0100

    arm64: entry: Allow handling of undefined instructions from EL1
    
    [ Upstream commit 0bf0f444b2c49241b2b39aa3cf210d7c95ef6c34 ]
    
    Rather than panic() when taking an undefined instruction exception from
    EL1, allow a hook to be registered in case we want to emulate the
    instruction, like we will for the SSBS PSTATE manipulation instructions.
    
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae9fc312a6d85a7b6efef0ac554152e75d163e66
Author: Paolo Valente <paolo.valente@linaro.org>
Date:   Fri Sep 14 16:23:07 2018 +0200

    block, bfq: correctly charge and reset entity service in all cases
    
    [ Upstream commit cbeb869a3d1110450186b738199963c5e68c2a71 ]
    
    BFQ schedules entities (which represent either per-process queues or
    groups of queues) as a function of their timestamps. In particular, as
    a function of their (virtual) finish times. The finish time of an
    entity is computed as a function of the budget assigned to the entity,
    assuming, tentatively, that the entity, once in service, will receive
    an amount of service equal to its budget. Then, when the entity is
    expired because it finishes to be served, this finish time is updated
    as a function of the actual service received by the entity. This
    allows the entity to be correctly charged with only the service
    received, and then to be correctly re-scheduled.
    
    Yet an entity may receive service also while not being the entity in
    service (in the scheduling environment of its parent entity), for
    several reasons. If the entity remains with no backlog while receiving
    this 'unofficial' service, then it is expired. Also on such an
    expiration, the finish time of the entity should be updated to account
    for only the service actually received by the entity. Unfortunately,
    such an update is not performed for an entity expiring without being
    the entity in service.
    
    In a similar vein, the service counter of the entity in service is
    reset when the entity is expired, to be ready to be used for next
    service cycle. This reset too should be performed also in case an
    entity is expired because it remains empty after receiving service
    while not being the entity in service. But in this case the reset is
    not performed.
    
    This commit performs the above update of the finish time and reset of
    the service received, also for an entity expiring while not being the
    entity in service.
    
    Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f353034eaf75a9d88e54d0a97646d4406c57c8c
Author: Antoine Tenart <antoine.tenart@bootlin.com>
Date:   Wed Sep 19 11:39:31 2018 +0200

    net: phy: phylink: ensure the carrier is off when starting phylink
    
    [ Upstream commit aeeb2e8fdefdd5d257a1446351c70cb3df540199 ]
    
    Phylink made an assumption about the carrier state being down when
    calling phylink_start(). If this assumption isn't satisfied, the
    internal phylink state could misbehave and a net device could end up not
    being functional.
    
    This patch fixes this by explicitly calling netif_carrier_off() in
    phylink_start().
    
    Signed-off-by: Antoine Tenart <antoine.tenart@bootlin.com>
    Acked-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ac72411c7b4bb40839ce80acdd787de863fa1c6
Author: Fuyun Liang <liangfuyun1@huawei.com>
Date:   Wed Sep 19 18:29:52 2018 +0100

    net: hns3: Set STATE_DOWN bit of hdev state when stopping net
    
    [ Upstream commit 2f7e489611bc685b8e00aba436032a8aac6cac57 ]
    
    We clear STATE_DOWN bit of hdev state when starting net, but do not set
    it again when stopping net. It causes that the net is down, but hdev state
    is still up. STATE_DOWN bit of hdev state should be set when stopping net.
    
    Fixes: 46a3df9f9718 ("net: hns3: Add HNS3 Acceleration Engine & Compatibility Layer Support")
    Fixes: e2cb1dec9779 ("net: hns3: Add HNS3 VF HCL(Hardware Compatibility Layer) Support")
    Signed-off-by: Fuyun Liang <liangfuyun1@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 110bdc65290450ce4ce5807abf626a986b795253
Author: Peng Li <lipeng321@huawei.com>
Date:   Wed Sep 19 18:29:53 2018 +0100

    net: hns3: Check hdev state when getting link status
    
    [ Upstream commit 582d37bbb613b8ad86bf82845d3a74a02a5a0fa1 ]
    
    By default, HW link status is up. If hclge_update_link_status is called
    before net up, driver will print "link up". It is not suitable. hdev
    state check is needed when getting link status.
    
    Fixes: 46a3df9f9718 ("net: hns3: Add HNS3 Acceleration Engine & Compatibility Layer Support")
    Fixes: e2cb1dec9779 ("net: hns3: Add HNS3 VF HCL(Hardware Compatibility Layer) Support")
    Signed-off-by: Fuyun Liang <liangfuyun1@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0f6b282ca7812fb5232e7fb7c1038602512d6d7
Author: Arend van Spriel <arend.vanspriel@broadcom.com>
Date:   Wed Sep 5 09:48:58 2018 +0200

    brcmfmac: fix for proper support of 160MHz bandwidth
    
    [ Upstream commit 330994e8e8ec5d0b269a5265e6032b37e29aa336 ]
    
    Decoding of firmware channel information was not complete for 160MHz
    support. This resulted in the following warning:
    
      WARNING: CPU: 2 PID: 2222 at .../broadcom/brcm80211/brcmutil/d11.c:196
            brcmu_d11ac_decchspec+0x2e/0x100 [brcmutil]
      Modules linked in: brcmfmac(O) brcmutil(O) sha256_generic cfg80211 ...
      CPU: 2 PID: 2222 Comm: kworker/2:0 Tainted: G           O
      4.17.0-wt-testing-x64-00002-gf1bed50 #1
      Hardware name: Dell Inc. Latitude E6410/07XJP9, BIOS A07 02/15/2011
      Workqueue: events request_firmware_work_func
      RIP: 0010:brcmu_d11ac_decchspec+0x2e/0x100 [brcmutil]
      RSP: 0018:ffffc90000047bd0 EFLAGS: 00010206
      RAX: 000000000000e832 RBX: ffff8801146fe910 RCX: ffff8801146fd3c0
      RDX: 0000000000002800 RSI: 0000000000000070 RDI: ffffc90000047c30
      RBP: ffffc90000047bd0 R08: 0000000000000000 R09: ffffffffa0798c80
      R10: ffff88012bca55e0 R11: ffff880110a4ea00 R12: ffff8801146f8000
      R13: ffffc90000047c30 R14: ffff8801146fe930 R15: ffff8801138e02e0
      FS:  0000000000000000(0000) GS:ffff88012bc80000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00007f18ce8b8070 CR3: 000000000200a003 CR4: 00000000000206e0
      Call Trace:
       brcmf_setup_wiphybands+0x212/0x780 [brcmfmac]
       brcmf_cfg80211_attach+0xae2/0x11a0 [brcmfmac]
       brcmf_attach+0x1fc/0x4b0 [brcmfmac]
       ? __kmalloc+0x13c/0x1c0
       brcmf_pcie_setup+0x99b/0xe00 [brcmfmac]
       brcmf_fw_request_done+0x16a/0x1f0 [brcmfmac]
       request_firmware_work_func+0x36/0x60
       process_one_work+0x146/0x350
       worker_thread+0x4a/0x3b0
       kthread+0x102/0x140
       ? process_one_work+0x350/0x350
       ? kthread_bind+0x20/0x20
       ret_from_fork+0x35/0x40
      Code: 66 90 0f b7 07 55 48 89 e5 89 c2 88 47 02 88 47 03 66 81 e2 00 38
            66 81 fa 00 18 74 6e 66 81 fa 00 20 74 39 66 81 fa 00 10 74 14 <0f>
            0b 66 25 00 c0 74 20 66 3d 00 c0 75 20 c6 47 04 01 5d c3 66
      ---[ end trace 550c46682415b26d ]---
      brcmfmac: brcmf_construct_chaninfo: Ignoring unexpected firmware channel 50
    
    This patch adds the missing stuff to properly handle this.
    
    Reviewed-by: Hante Meuleman <hante.meuleman@broadcom.com>
    Reviewed-by: Pieter-Paul Giesberts <pieter-paul.giesberts@broadcom.com>
    Reviewed-by: Franky Lin <franky.lin@broadcom.com>
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cd3b487ff72d74a7dd042a523a994c6ac182a13
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Sep 20 01:58:18 2018 +0000

    pinctrl: qcom: spmi-mpp: Fix err handling of pmic_mpp_set_mux
    
    [ Upstream commit 69f8455f6cc78fa6cdf80d0105d7a748106271dc ]
    
    'ret' should be returned while pmic_mpp_write_mode_ctl fails.
    
    Fixes: 0e948042c420 ("pinctrl: qcom: spmi-mpp: Implement support for sink mode")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fae41efdcdb6da25dbb41a8520c3270fb8064613
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Sep 21 09:59:41 2018 +0800

    pinctrl: sunxi: fix 'pctrl->functions' allocation in sunxi_pinctrl_build_state
    
    [ Upstream commit a4925311a5443126ecc90671a1604ea7b0f5b32e ]
    
    fixes following Smatch static check warning:
    
     ./drivers/pinctrl/sunxi/pinctrl-sunxi.c:1112 sunxi_pinctrl_build_state()
     warn: passing devm_ allocated variable to kfree. 'pctrl->functions'
    
    As we will be calling krealloc() on pointer 'pctrl->functions', which means
    kfree() will be called in there, devm_kzalloc() shouldn't be used with
    the allocation in the first place.  Fix the warning by calling kcalloc()
    and managing the free procedure in error path on our own.
    
    Fixes: 0e37f88d9ad8 ("ARM: sunxi: Add pinctrl driver for Allwinner SoCs")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Acked-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7458126fbbf30dbe5d986fa8950949a67bb75714
Author: Jian Shen <shenjian15@huawei.com>
Date:   Fri Sep 21 16:41:37 2018 +0100

    net: hns3: Fix ets validate issue
    
    [ Upstream commit adefc0a2ff465f4ac4a88450fe69d336c8b074c5 ]
    
    There is a defect in hclge_ets_validate(). If each member of tc_tsa is
    not IEEE_8021QAZ_TSA_ETS, the variable total_ets_bw won't be updated.
    In this case, the check for value of total_ets_bw will fail. This patch
    fixes it by checking total_ets_bw only after it has been updated.
    
    Fixes: cacde272dd00 ("net: hns3: Add hclge_dcb module for the support of DCB feature")
    Signed-off-by: Jian Shen <shenjian15@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0d9799dffb125de33e3651475548fe51c01fa2b
Author: Jian Shen <shenjian15@huawei.com>
Date:   Fri Sep 21 16:41:43 2018 +0100

    net: hns3: Add nic state check before calling netif_tx_wake_queue
    
    [ Upstream commit 7a8101109dd37837f587cd56f3111d4fc17a07f5 ]
    
    When nic down, it firstly calls netif_tx_stop_all_queues(), then calls
    napi_disable(). But napi_disable() will wait current napi_poll finish,
    it may call netif_tx_wake_queue(). This patch fixes it by add nic state
    checking.
    
    Fixes: 424eb834a9be ("net: hns3: Unified HNS3 {VF|PF} Ethernet Driver for hip08 SoC")
    Signed-off-by: Jian Shen <shenjian15@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fae4092be8bbee1c771f3b9d62ae7bd43591ee3
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sun Sep 16 16:22:47 2018 +0100

    x86: boot: Fix EFI stub alignment
    
    [ Upstream commit 9c1442a9d039a1a3302fa93e9a11001c5f23b624 ]
    
    We currently align the end of the compressed image to a multiple of
    16.  However, the PE-COFF header included in the EFI stub says that
    the file alignment is 32 bytes, and when adding an EFI signature to
    the file it must first be padded to this alignment.
    
    sbsigntool commands warn about this:
    
      warning: file-aligned section .text extends beyond end of file
      warning: checksum areas are greater than image size. Invalid section table?
    
    Worse, pesign -at least when creating a detached signature- uses the
    hash of the unpadded file, resulting in an invalid signature if
    padding is required.
    
    Avoid both these problems by increasing alignment to 32 bytes when
    CONFIG_EFI_STUB is enabled.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 249af5d524862055f8cec063f82468244cdf7653
Author: Christian Hewitt <christianshewitt@gmail.com>
Date:   Tue Sep 4 21:50:57 2018 +0400

    Bluetooth: btbcm: Add entry for BCM4335C0 UART bluetooth
    
    [ Upstream commit a357ea098c9605f60d92a66a9073f56ce25726da ]
    
    This patch adds the device ID for the AMPAK AP6335 combo module used
    in the 1st generation WeTek Hub Android/LibreELEC HTPC box. The WiFI
    chip identifies itself as BCM4339, while Bluetooth identifies itself
    as BCM4335 (rev C0):
    
    ```
    [    4.864248] Bluetooth: hci0: BCM: chip id 86
    [    4.866388] Bluetooth: hci0: BCM: features 0x2f
    [    4.889317] Bluetooth: hci0: BCM4335C0
    [    4.889332] Bluetooth: hci0: BCM4335C0 (003.001.009) build 0000
    [    9.778383] Bluetooth: hci0: BCM4335C0 (003.001.009) build 0268
    ```
    
    Output from hciconfig:
    
    ```
    hci0:   Type: Primary  Bus: UART
            BD Address: 43:39:00:00:1F:AC  ACL MTU: 1021:8  SCO MTU: 64:1
            UP RUNNING
            RX bytes:7567 acl:234 sco:0 events:386 errors:0
            TX bytes:53844 acl:77 sco:0 commands:304 errors:0
            Features: 0xbf 0xfe 0xcf 0xfe 0xdb 0xff 0x7b 0x87
            Packet type: DM1 DM3 DM5 DH1 DH3 DH5 HV1 HV2 HV3
            Link policy: RSWITCH SNIFF
            Link mode: SLAVE ACCEPT
            Name: 'HUB'
            Class: 0x0c0000
            Service Classes: Rendering, Capturing
            Device Class: Miscellaneous,
            HCI Version: 4.0 (0x6)  Revision: 0x10c
            LMP Version: 4.0 (0x6)  Subversion: 0x6109
            Manufacturer: Broadcom Corporation (15)
    ```
    
    Signed-off-by: Christian Hewitt <christianshewitt@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8ec431379a57e06231d99baebe0b65db68c48ce
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Wed Sep 26 19:28:36 2018 +0100

    net: hns3: Fix for packet buffer setting bug
    
    [ Upstream commit 996ff91840eb6f288826e472685abde78bac20ea ]
    
    The hardware expects a unit of 128 bytes when setting
    packet buffer. When calculating the packet buffer size,
    hclge_rx_buffer_calc does not round up the size as a unit
    of 128 byte, which may casue packet lost problem when stress
    testing.
    
    This patch fixes it by rounding up packet size when calculating.
    
    Fixes: 46a3df9f9718 ("net: hns3: Add HNS3 Acceleration Engine & Compatibility Layer Support")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Peng Li <lipeng321@huawei.com>
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ffa5136a36b0c1e3e867c51ab2f5d0f5d101d5a
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Wed Sep 19 17:23:07 2018 -0700

    ice: update fw version check logic
    
    [ Upstream commit 396fbf9cab5dc07f8f87773062a8d35f54b40a05 ]
    
    We have MAX_FW_API_VER_BRANCH, MAX_FW_API_VER_MAJOR, and
    MAX_FW_API_VER_MINOR that we use in ice_controlq.h to test when a
    firmware version is newer than expected. This is currently tested by
    comparing each field separately. Thus, we compare the branch field
    against the MAX_FW_API_VER_BRANCH, and so forth.
    
    This means that currently, if we suppose that the max firmware version
    is defined as 0.2.1, i.e.
    
    Then firmware 0.1.3 will fail to load. This is because the minor version
    3 is greater than the max minor version 1.
    
    This is not intuitive, because of the notion that increasing the major
    firmware version to 2 should mean any firmware version with a major
    version is less than 2 should be considered older than 2...
    
    In order to allow both 0.2.1 and 0.1.3 to load, you would have to define
    the "max" firmware version as 0.2.3.. It is possible that such
    a firmware version doesn't even exist yet!
    
    Fix this by replacing the current logic with an updated check that
    behaves as follows:
    
    First, we check the major version. If it is greater than the expected
    version, then we prevent driver load. Additionally, a warning message is
    logged to indicate to the system administrator that they need to update
    their driver. This is now the only case where the driver will refuse to
    load.
    
    Second, if the major version is less than the expected version, we log
    an information message indicating the NVM should be updated.
    
    Third, if the major version is exact, we'll then check the minor
    version. If the minor version is more than two versions less than
    expected, we log an information message indicating the NVM should be
    updated. If it is more than two versions greater than the expected
    version, we log an information message that the driver should be
    updated.
    
    To support this, the ice_aq_ver_check function needs its signature
    updated to pass the HW structure. Since we now pass this structure,
    there is no need to pass the firmware API versions separately.
    
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Signed-off-by: Anirudh Venkataramanan <anirudh.venkataramanan@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 345e47a7dfc2117b9b8e89875cc64a2f52e1511c
Author: Bruce Allan <bruce.w.allan@intel.com>
Date:   Wed Sep 19 17:23:11 2018 -0700

    ice: fix changing of ring descriptor size (ethtool -G)
    
    [ Upstream commit f934bb9b8b6136edd261b2dc2c9ad4dbc39ffc66 ]
    
    rx_mini_pending was set to an incorrect value. This was causing EINVAL to
    always be returned to 'ethtool -G'. The driver does not support mini or
    jumbo rings so the respective settings should be zero.
    
    Also, change the valid range of the number of descriptors in the rings to
    make the code simpler and easier for users to understand (this removes the
    valid settings of 8 and 16). Add a system log message indicating when the
    number is rounded-up from what the user specifies with the 'ethtool -G'
    command (i.e. when it is not a multiple of 32), and update the log message
    when a user-provided value is out of range to also indicate the stride.
    
    Signed-off-by: Bruce Allan <bruce.w.allan@intel.com>
    Signed-off-by: Anirudh Venkataramanan <anirudh.venkataramanan@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7a23fd7c189ffa0f4f5afc41f833e898131a569
Author: Will Deacon <will@kernel.org>
Date:   Wed Sep 5 15:34:42 2018 +0100

    signal: Introduce COMPAT_SIGMINSTKSZ for use in compat_sys_sigaltstack
    
    [ Upstream commit 22839869f21ab3850fbbac9b425ccc4c0023926f ]
    
    The sigaltstack(2) system call fails with -ENOMEM if the new alternative
    signal stack is found to be smaller than SIGMINSTKSZ. On architectures
    such as arm64, where the native value for SIGMINSTKSZ is larger than
    the compat value, this can result in an unexpected error being reported
    to a compat task. See, for example:
    
      https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=904385
    
    This patch fixes the problem by extending do_sigaltstack to take the
    minimum signal stack size as an additional parameter, allowing the
    native and compat system call entry code to pass in their respective
    values. COMPAT_SIGMINSTKSZ is just defined as SIGMINSTKSZ if it has not
    been defined by the architecture.
    
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Steve McIntyre <steve.mcintyre@arm.com>
    Tested-by: Steve McIntyre <93sam@debian.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f1f598722040afc7c1872ff81feef6c801baa8a
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Tue Sep 18 08:55:55 2018 -0500

    mtd: rawnand: atmel: Fix potential NULL pointer dereference
    
    [ Upstream commit fbed20280d912449cfb40c382cb55e3d11502587 ]
    
    There is a potential execution path in which function
    of_find_compatible_node() returns NULL. In such a case,
    we end up having a NULL pointer dereference when accessing
    pointer *nfc_np* in function of_clk_get().
    
    So, we better don't take any chances and fix this by null
    checking pointer *nfc_np* before calling of_clk_get().
    
    Addresses-Coverity-ID: 1473052 ("Dereference null return value")
    Fixes: f88fc122cc34 ("mtd: nand: Cleanup/rework the atmel_nand driver")
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Acked-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8c9540b02ce7023d9d8ec4066636794961ddab8
Author: Xiaochen Shen <xiaochen.shen@intel.com>
Date:   Wed Sep 12 16:48:38 2018 -0700

    x86/intel_rdt: Show missing resctrl mount options
    
    [ Upstream commit 2cc81c6992248ea37d0241bc325977bab310bc3b ]
    
    In resctrl filesystem, mount options exist to enable L3/L2 CDP and MBA
    Software Controller features if the platform supports them:
    
     mount -t resctrl resctrl [-o cdp[,cdpl2][,mba_MBps]] /sys/fs/resctrl
    
    But currently only "cdp" option is displayed in /proc/mounts. "cdpl2" and
    "mba_MBps" options are not shown even when they are active.
    
    Before:
     # mount -t resctrl resctrl -o cdp,mba_MBps /sys/fs/resctrl
     # grep resctrl /proc/mounts
     /sys/fs/resctrl /sys/fs/resctrl resctrl rw,relatime,cdp 0 0
    
    After:
     # mount -t resctrl resctrl -o cdp,mba_MBps /sys/fs/resctrl
     # grep resctrl /proc/mounts
     /sys/fs/resctrl /sys/fs/resctrl resctrl rw,relatime,cdp,mba_MBps 0 0
    
    Signed-off-by: Xiaochen Shen <xiaochen.shen@intel.com>
    Signed-off-by: Fenghua Yu <fenghua.yu@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H Peter Anvin" <hpa@zytor.com>
    Cc: "Tony Luck" <tony.luck@intel.com>
    Link: https://lkml.kernel.org/r/1536796118-60135-1-git-send-email-fenghua.yu@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0efa31256ace12485bc49d53917f600bb4a108b5
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Wed Oct 3 15:35:21 2018 +0530

    cpufreq: dt: Try freeing static OPPs only if we have added them
    
    [ Upstream commit 51c99dd2c06b234575661fa1e0a1dea6c3ef566f ]
    
    We can not call dev_pm_opp_of_cpumask_remove_table() freely anymore
    since the latest OPP core updates as that uses reference counting to
    free resources. There are cases where no static OPPs are added (using
    DT) for a platform and trying to remove the OPP table may end up
    decrementing refcount which is already zero and hence generating
    warnings.
    
    Lets track if we were able to add static OPPs or not and then only
    remove the table based on that. Some reshuffling of code is also done to
    do that.
    
    Reported-by: Niklas Cassel <niklas.cassel@linaro.org>
    Tested-by: Niklas Cassel <niklas.cassel@linaro.org>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17b8bb13ac9ddc1b2d3b60950563f83b31b2a71c
Author: Dou Liyang <douly.fnst@cn.fujitsu.com>
Date:   Fri Aug 24 10:51:26 2018 +0800

    ACPI / processor: Fix the return value of acpi_processor_ids_walk()
    
    [ Upstream commit d0381bf4f80c571dde1244fe5b85dc35e8b3f546 ]
    
    ACPI driver should make sure all the processor IDs in their ACPI Namespace
    are unique. the driver performs a depth-first walk of the namespace tree
    and calls the acpi_processor_ids_walk() to check the duplicate IDs.
    
    But, the acpi_processor_ids_walk() mistakes the return value. If a
    processor is checked, it returns true which causes the walk break
    immediately, and other processors will never be checked.
    
    Repace the value with AE_OK which is the standard acpi_status value.
    And don't abort the namespace walk even on error.
    
    Fixes: 8c8cb30f49b8 (acpi/processor: Implement DEVICE operator for processor enumeration)
    Signed-off-by: Dou Liyang <douly.fnst@cn.fujitsu.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcb2a7c2146936396cef75d332df3b3746a165ec
Author: Rajneesh Bhardwaj <rajneesh.bhardwaj@linux.intel.com>
Date:   Fri Sep 28 14:24:02 2018 +0530

    ACPI / PM: LPIT: Register sysfs attributes based on FADT
    
    [ Upstream commit 1cdda9486f5103fb133f88e662e48c504adbb779 ]
    
    ACPI Low Power S0 Idle capabilities are announced via FADT table and can
    be used to inform the kernel about the presence of one or more Low Power
    Idle (LPI) entries as descried in LPIT table. LPIT table can exist
    independently even if the FADT S0 Idle flag is not set and thus it could
    confuse user since the following cpuidle attributes are created.
    
    /sys/devices/system/cpu/cpuidle/low_power_idle_cpu_residency_us
    /sys/devices/system/cpu/cpuidle/low_power_idle_system_residency_us
    
    Presence or absence of above attributes could mean that the given
    platform supports S0ix state or not.
    
    This change allows to create the above cpuidle attributes only if
    FADT table supports Low Power S0 Idle.
    
    Signed-off-by: Rajneesh Bhardwaj <rajneesh.bhardwaj@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c7247b6f6a96ee5a5f1db8570a510ac7eabf8a0
Author: Jeffrey Hugo <jhugo@codeaurora.org>
Date:   Thu Oct 4 09:20:06 2018 -0600

    ACPI/PPTT: Handle architecturally unknown cache types
    
    [ Upstream commit 59bbff3775c0951300f7b41345a54b999438f8d0 ]
    
    The type of a cache might not be specified by architectural mechanisms (ie
    system registers), but its type might be specified in the PPTT.  In this
    case, we should populate the type of the cache, rather than leave it
    undefined.
    
    This fixes the issue where the cacheinfo driver will not populate sysfs
    for such caches, resulting in the information missing from utilities like
    lstopo and lscpu, thus degrading the user experience.
    
    Fixes: 2bd00bcd73e5 (ACPI/PPTT: Add Processor Properties Topology Table parsing)
    Reported-by: Vijaya Kumar K <vkilari@codeaurora.org>
    Signed-off-by: Jeffrey Hugo <jhugo@codeaurora.org>
    Reviewed-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef9c7ed4de607bf17e0cc9a25e727b274b219a52
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Thu Oct 4 18:08:08 2018 +0200

    x86/olpc: Indicate that legacy PC XO-1 platform should not register RTC
    
    [ Upstream commit d92116b800fb79a72ad26121f5011f6aa3ad94c2 ]
    
    On OLPC XO-1, the RTC is discovered via device tree from the arch
    initcall. Don't let the PC platform register another one from its device
    initcall, it's not going to work:
    
      sysfs: cannot create duplicate filename '/devices/platform/rtc_cmos'
      CPU: 0 PID: 1 Comm: swapper Not tainted 4.19.0-rc6 #12
      Hardware name: OLPC XO/XO, BIOS OLPC Ver 1.00.01 06/11/2014
      Call Trace:
       dump_stack+0x16/0x18
       sysfs_warn_dup+0x46/0x58
       sysfs_create_dir_ns+0x76/0x9b
       kobject_add_internal+0xed/0x209
       ? __schedule+0x3fa/0x447
       kobject_add+0x5b/0x66
       device_add+0x298/0x535
       ? insert_resource_conflict+0x2a/0x3e
       platform_device_add+0x14d/0x192
       ? io_delay_init+0x19/0x19
       platform_device_register+0x1c/0x1f
       add_rtc_cmos+0x16/0x31
       do_one_initcall+0x78/0x14a
       ? do_early_param+0x75/0x75
       kernel_init_freeable+0x152/0x1e0
       ? rest_init+0xa2/0xa2
       kernel_init+0x8/0xd5
       ret_from_fork+0x2e/0x38
      kobject_add_internal failed for rtc_cmos with -EEXIST, don't try to
        register things with the same name in the same directory.
      platform rtc_cmos: registered platform RTC device (no PNP device found)
    
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    CC: "H. Peter Anvin" <hpa@zytor.com>
    CC: Ingo Molnar <mingo@redhat.com>
    CC: x86-ml <x86@kernel.org>
    Link: http://lkml.kernel.org/r/20181004160808.307738-1-lkundrak@v3.sk
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7121de89b55224d51b3044949d4bedecc612c13
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Mon Jun 11 11:15:17 2018 +0300

    iwlwifi: mvm: check for n_profiles validity in EWRD ACPI
    
    [ Upstream commit 2e1976bb75263fbad918e82184b16a23bd721546 ]
    
    When reading the profiles from the EWRD table in ACPI, we loop over
    the data and set it into our internal table.  We use the number of
    profiles specified in ACPI without checking its validity, so if the
    ACPI table is corrupted and the number is larger than our array size,
    we will try to make an out-of-bounds access.
    
    Fix this by making sure the value specified in the ACPI table is
    valid.
    
    Fixes: 6996490501ed ("iwlwifi: mvm: add support for EWRD (Dynamic SAR) ACPI table")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af0d1438f4e2fd7015619d81c99cd8681953ee7b
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Wed Jun 13 11:49:20 2018 +0300

    iwlwifi: mvm: clear HW_RESTART_REQUESTED when stopping the interface
    
    [ Upstream commit 155f7e0441cd121b1e673d465a35e99f4b9b2f0b ]
    
    Fix a bug that happens in the following scenario:
    1) suspend without WoWLAN
    2) mac80211 calls drv_stop because of the suspend
    3) __iwl_mvm_mac_stop deallocates the aux station
    4) during drv_stop the firmware crashes
    5) iwlmvm:
            * sets IWL_MVM_STATUS_HW_RESTART_REQUESTED
            * asks mac80211 to kick the restart flow
    6) mac80211 puts the restart worker into a freezable
       queue which means that the worker will not run for now
       since the workqueue is already frozen
    7) ...
    8) resume
    9) mac80211 runs ieee80211_reconfig as part of the resume
    10) mac80211 detects that a restart flow has been requested
        and that we are now resuming from suspend and cancels
        the restart worker
    11) mac80211 calls drv_start()
    12) __iwl_mvm_mac_start checks that IWL_MVM_STATUS_HW_RESTART_REQUESTED
        clears it, sets IWL_MVM_STATUS_IN_HW_RESTART and calls
        iwl_mvm_restart_cleanup()
    13) iwl_fw_error_dump gets called and accesses the device
        to get debug data
    14) iwl_mvm_up adds the aux station
    15) iwl_mvm_add_aux_sta() allocates an internal station for
        the aux station
    16) iwl_mvm_allocate_int_sta() tests IWL_MVM_STATUS_IN_HW_RESTART
        and doesn't really allocate a station ID for the aux
        station
    17) a new queue is added for the aux station
    
    Note that steps from 5 to 9 aren't really part of the
    problem but were described for the sake of completeness.
    
    Once the iwl_mvm_mac_stop() is called, the device is not
    accessible, meaning that step 12) can't succeed and we'll
    see the following:
    
    drivers/net/wireless/intel/iwlwifi/pcie/trans.c:2122 iwl_trans_pcie_grab_nic_access+0xc0/0x1d6 [iwlwifi]()
    Timeout waiting for hardware access (CSR_GP_CNTRL 0x080403d8)
    Call Trace:
    [<ffffffffc03e6ad3>] iwl_trans_pcie_grab_nic_access+0xc0/0x1d6 [iwlwifi]
    [<ffffffffc03e6a13>] iwl_trans_pcie_dump_regs+0x3fd/0x3fd [iwlwifi]
    [<ffffffffc03dad42>] iwl_fw_error_dump+0x4f5/0xe8b [iwlwifi]
    [<ffffffffc04bd43e>] __iwl_mvm_mac_start+0x5a/0x21a [iwlmvm]
    [<ffffffffc04bd6d2>] iwl_mvm_mac_start+0xd4/0x103 [iwlmvm]
    [<ffffffffc042d378>] drv_start+0xa1/0xc5 [iwl7000_mac80211]
    [<ffffffffc045a339>] ieee80211_reconfig+0x145/0xf50 [mac80211]
    [<ffffffffc044788b>] ieee80211_resume+0x62/0x66 [mac80211]
    [<ffffffffc0366c5b>] wiphy_resume+0xa9/0xc6 [cfg80211]
    
    The station id of the aux station is set to 0xff in step 3
    and because we don't really allocate a new station id for
    the auxliary station (as explained in 16), we end up sending
    a command to the firmware asking to connect the queue
    to station id 0xff. This makes the firmware crash with the
    following information:
    
    0x00002093 | ADVANCED_SYSASSERT
    0x000002F0 | trm_hw_status0
    0x00000000 | trm_hw_status1
    0x00000B38 | branchlink2
    0x0001978C | interruptlink1
    0x00000000 | interruptlink2
    0xFF080501 | data1
    0xDEADBEEF | data2
    0xDEADBEEF | data3
    Firmware error during reconfiguration - reprobe!
    FW error in SYNC CMD SCD_QUEUE_CFG
    
    Fix this by clearing IWL_MVM_STATUS_HW_RESTART_REQUESTED
    in iwl_mvm_mac_stop(). We won't be able to collect debug
    data anyway and when we will brought up again, we will
    have a clean state from the firmware perspective.
    Since we won't have IWL_MVM_STATUS_IN_HW_RESTART set in
    step 12) we won't get to the 2093 ASSERT either.
    
    Fixes: bf8b286f86fc ("iwlwifi: mvm: defer setting IWL_MVM_STATUS_IN_HW_RESTART")
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e364a986fe4192536b2dd4d84fa90c9d3662cda6
Author: Shaul Triebitz <shaul.triebitz@intel.com>
Date:   Wed Jun 6 17:20:58 2018 +0300

    iwlwifi: pcie: avoid empty free RB queue
    
    [ Upstream commit 868a1e863f95183f00809363fefba6d4f5bcd116 ]
    
    If all free RB queues are empty, the driver will never restock the
    free RB queue.  That's because the restocking happens in the Rx flow,
    and if the free queue is empty there will be no Rx.
    
    Although there's a background worker (a.k.a. allocator) allocating
    memory for RBs so that the Rx handler can restock them, the worker may
    run only after the free queue has become empty (and then it is too
    late for restocking as explained above).
    
    There is a solution for that called 'emergency': If the number of used
    RB's reaches half the amount of all RB's, the Rx handler will not wait
    for the allocator but immediately allocate memory for the used RB's
    and restock the free queue.
    
    But, since the used RB's is per queue, it may happen that the used
    RB's are spread between the queues such that the emergency check will
    fail for each of the queues
    (and still run out of RBs, causing the above symptom).
    
    To fix it, move to emergency mode if the sum of *all* used RBs (for
    all Rx queues) reaches half the amount of all RB's
    
    Signed-off-by: Shaul Triebitz <shaul.triebitz@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba4a1b62a2d742df9e9c607ac53b3bf33496508f
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Fri Sep 28 13:16:01 2018 +0900

    mtd: rawnand: denali: set SPARE_AREA_SKIP_BYTES register to 8 if unset
    
    [ Upstream commit 0d55c668b218a1db68b5044bce4de74e1bd0f0c8 ]
    
    NAND devices need additional data area (OOB) for error correction,
    but it is also used for Bad Block Marker (BBM).  In many cases, the
    first byte in OOB is used for BBM, but the location actually depends
    on chip vendors.  The NAND controller should preserve the precious
    BBM to keep track of bad blocks.
    
    In Denali IP, the SPARE_AREA_SKIP_BYTES register is used to specify
    the number of bytes to skip from the start of OOB.  The ECC engine
    will automatically skip the specified number of bytes when it gets
    access to OOB area.
    
    The same value for SPARE_AREA_SKIP_BYTES should be used between
    firmware and the operating system if you intend to use the NAND
    device across the control hand-off.
    
    In fact, the current denali.c code expects firmware to have already
    set the SPARE_AREA_SKIP_BYTES register, then reads the value out.
    
    If no firmware (or bootloader) has initialized the controller, the
    register value is zero, which is the default after power-on-reset.
    In other words, the Linux driver cannot initialize the controller
    by itself.
    
    Some possible solutions are:
    
     [1] Add a DT property to specify the skipped bytes in OOB
     [2] Associate the preferred value with compatible
     [3] Hard-code the default value in the driver
    
    My first attempt was [1], but in the review process, [3] was suggested
    as a counter-implementation.
    (https://lore.kernel.org/patchwork/patch/983055/)
    
    The default value 8 was chosen to match to the boot ROM of the UniPhier
    platform.  The preferred value may vary by platform.  If so, please
    trade up to a different solution.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c9e66266a1662bae7f532fffe9e7fc1fb7548c3
Author: Wang Dongsheng <dongsheng.wang@hxt-semitech.com>
Date:   Thu Aug 16 12:48:42 2018 +0800

    sdhci: acpi: add free_slot callback
    
    [ Upstream commit c7eabbee3de99347105faa7fd925a500ccf43baf ]
    
    The device specific resource can be free in free_slot after
    removing host controller.
    
    Signed-off-by: Wang Dongsheng <dongsheng.wang@hxt-semitech.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8be558fb46dfc949af7db88e1de2df18fdbe3a79
Author: Yu Zhao <yuzhao@google.com>
Date:   Sun Sep 23 14:39:24 2018 -0600

    mmc: sdhci-pci-o2micro: Add quirk for O2 Micro dev 0x8620 rev 0x01
    
    [ Upstream commit 5169894982bb67486d93cc1e10151712bb86bcb6 ]
    
    This device reports SDHCI_CLOCK_INT_STABLE even though it's not
    ready to take SDHCI_CLOCK_CARD_EN. The symptom is that reading
    SDHCI_CLOCK_CONTROL after enabling the clock shows absence of the
    bit from the register (e.g. expecting 0x0000fa07 = 0x0000fa03 |
    SDHCI_CLOCK_CARD_EN but only observed the first operand).
    
    mmc1: Timeout waiting for hardware cmd interrupt.
    mmc1: sdhci: ============ SDHCI REGISTER DUMP ===========
    mmc1: sdhci: Sys addr:  0x00000000 | Version:  0x00000603
    mmc1: sdhci: Blk size:  0x00000000 | Blk cnt:  0x00000000
    mmc1: sdhci: Argument:  0x00000000 | Trn mode: 0x00000000
    mmc1: sdhci: Present:   0x01ff0001 | Host ctl: 0x00000001
    mmc1: sdhci: Power:     0x0000000f | Blk gap:  0x00000000
    mmc1: sdhci: Wake-up:   0x00000000 | Clock:    0x0000fa03
    mmc1: sdhci: Timeout:   0x00000000 | Int stat: 0x00000000
    mmc1: sdhci: Int enab:  0x00ff0083 | Sig enab: 0x00ff0083
    mmc1: sdhci: AC12 err:  0x00000000 | Slot int: 0x00000000
    mmc1: sdhci: Caps:      0x25fcc8bf | Caps_1:   0x00002077
    mmc1: sdhci: Cmd:       0x00000000 | Max curr: 0x005800c8
    mmc1: sdhci: Resp[0]:   0x00000000 | Resp[1]:  0x00000000
    mmc1: sdhci: Resp[2]:   0x00000000 | Resp[3]:  0x00000000
    mmc1: sdhci: Host ctl2: 0x00000008
    mmc1: sdhci: ADMA Err:  0x00000000 | ADMA Ptr: 0x00000000
    mmc1: sdhci: ============================================
    
    The problem happens during wakeup from S3. Adding a delay quirk
    after power up reliably fixes the problem.
    
    Signed-off-by: Yu Zhao <yuzhao@google.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9fa6d72d149630e6e83f944f90d3b77d84fd0f5
Author: Ben Peddell <klightspeed@killerwolves.net>
Date:   Mon Oct 8 20:41:13 2018 +0800

    bcache: Populate writeback_rate_minimum attribute
    
    [ Upstream commit 7567c2a2ad9e80a2ce977eef535e64b61899633e ]
    
    Forgot to include the maintainers with my first email.
    
    Somewhere between Michael Lyle's original
    "bcache: PI controller for writeback rate V2" patch dated 07 Sep 2017
    and 1d316e6 bcache: implement PI controller for writeback rate,
    the mapping of the writeback_rate_minimum attribute was dropped.
    
    Re-add the missing sysfs writeback_rate_minimum attribute mapping to
    "allow the user to specify a minimum rate at which dirty blocks are
    retired."
    
    Fixes: 1d316e6 ("bcache: implement PI controller for writeback rate")
    Signed-off-by: Ben Peddell <klightspeed@killerwolves.net>
    Signed-off-by: Coly Li <colyli@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46b8a8d2f33a341d763e21b9d93d29e2e0978faf
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Mon Oct 8 11:06:19 2018 -0400

    cpupower: Fix coredump on VMWare
    
    [ Upstream commit f69ffc5d3db8f1f03fd6d1df5930f9a1fbd787b6 ]
    
    cpupower crashes on VMWare guests.  The guests have the AMD PStateDef MSR
    (0xC0010064 + state number) set to zero.  As a result fid and did are zero
    and the crash occurs because of a divide by zero (cof = fid/did).  This
    can be prevented by checking the enable bit in the PStateDef MSR before
    calculating cof.  By doing this the value of pstate[i] remains zero and
    the value can be tested before displaying the active Pstates.
    
    Check the enable bit in the PstateDef register for all supported families
    and only print out enabled Pstates.
    
    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: Stafford Horne <shorne@gmail.com>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d8b0617b2a5564090e962e9d3ee32f995e1b656
Author: Sanskriti Sharma <sansharm@redhat.com>
Date:   Tue Oct 2 10:29:10 2018 -0400

    perf strbuf: Match va_{add,copy} with va_end
    
    [ Upstream commit ce49d8436cffa9b7a6a5f110879d53e89dbc6746 ]
    
    Ensure that all code paths in strbuf_addv() call va_end() on the
    ap_saved copy that was made.
    
    Fixes the following coverity complaint:
    
      Error: VARARGS (CWE-237): [#def683]
      tools/perf/util/strbuf.c:106: missing_va_end: va_end was not called
      for "ap_saved".
    
    Signed-off-by: Sanskriti Sharma <sansharm@redhat.com>
    Reviewed-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Joe Lawrence <joe.lawrence@redhat.com>
    Link: http://lkml.kernel.org/r/1538490554-8161-2-git-send-email-sansharm@redhat.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74a5a6e86f825566f441594bdca225fb023e146c
Author: Sanskriti Sharma <sansharm@redhat.com>
Date:   Tue Oct 2 10:29:11 2018 -0400

    perf tools: Cleanup trace-event-info 'tdata' leak
    
    [ Upstream commit faedbf3fd19f2511a39397f76359e4cc6ee93072 ]
    
    Free tracing_data structure in tracing_data_get() error paths.
    
    Fixes the following coverity complaint:
    
      Error: RESOURCE_LEAK (CWE-772):
      leaked_storage: Variable "tdata" going out of scope leaks the storage
    
    Signed-off-by: Sanskriti Sharma <sansharm@redhat.com>
    Reviewed-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Joe Lawrence <joe.lawrence@redhat.com>
    Link: http://lkml.kernel.org/r/1538490554-8161-3-git-send-email-sansharm@redhat.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b6ed6f4c33b0a35511e3850187cee2e9dbc3242
Author: Sanskriti Sharma <sansharm@redhat.com>
Date:   Tue Oct 2 10:29:14 2018 -0400

    perf tools: Free temporary 'sys' string in read_event_files()
    
    [ Upstream commit 1e44224fb0528b4c0cc176bde2bb31e9127eb14b ]
    
    For each system in a given pevent, read_event_files() reads in a
    temporary 'sys' string.  Be sure to free this string before moving onto
    to the next system and/or leaving read_event_files().
    
    Fixes the following coverity complaints:
    
      Error: RESOURCE_LEAK (CWE-772):
    
      tools/perf/util/trace-event-read.c:343: overwrite_var: Overwriting
      "sys" in "sys = read_string()" leaks the storage that "sys" points to.
    
      tools/perf/util/trace-event-read.c:353: leaked_storage: Variable "sys"
      going out of scope leaks the storage it points to.
    
    Signed-off-by: Sanskriti Sharma <sansharm@redhat.com>
    Reviewed-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Joe Lawrence <joe.lawrence@redhat.com>
    Link: http://lkml.kernel.org/r/1538490554-8161-6-git-send-email-sansharm@redhat.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91747a58abc5cc3e2dfb14b97c1bfa2d87700645
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Oct 8 11:08:47 2018 -0700

    spi: spi-ep93xx: Use dma_data_direction for ep93xx_spi_dma_{finish,prepare}
    
    [ Upstream commit a1108c7b2efb892350ba6a0e932dfd45622f4e2b ]
    
    Clang warns when one enumerated type is implicitly converted to another.
    
    drivers/spi/spi-ep93xx.c:342:62: warning: implicit conversion from
    enumeration type 'enum dma_transfer_direction' to different enumeration
    type 'enum dma_data_direction' [-Wenum-conversion]
            nents = dma_map_sg(chan->device->dev, sgt->sgl, sgt->nents, dir);
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
    ./include/linux/dma-mapping.h:428:58: note: expanded from macro
    'dma_map_sg'
    #define dma_map_sg(d, s, n, r) dma_map_sg_attrs(d, s, n, r, 0)
                                   ~~~~~~~~~~~~~~~~          ^
    drivers/spi/spi-ep93xx.c:348:57: warning: implicit conversion from
    enumeration type 'enum dma_transfer_direction' to different enumeration
    type 'enum dma_data_direction' [-Wenum-conversion]
                    dma_unmap_sg(chan->device->dev, sgt->sgl, sgt->nents, dir);
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
    ./include/linux/dma-mapping.h:429:62: note: expanded from macro
    'dma_unmap_sg'
    #define dma_unmap_sg(d, s, n, r) dma_unmap_sg_attrs(d, s, n, r, 0)
                                     ~~~~~~~~~~~~~~~~~~          ^
    drivers/spi/spi-ep93xx.c:377:56: warning: implicit conversion from
    enumeration type 'enum dma_transfer_direction' to different enumeration
    type 'enum dma_data_direction' [-Wenum-conversion]
            dma_unmap_sg(chan->device->dev, sgt->sgl, sgt->nents, dir);
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
    ./include/linux/dma-mapping.h:429:62: note: expanded from macro
    'dma_unmap_sg'
    #define dma_unmap_sg(d, s, n, r) dma_unmap_sg_attrs(d, s, n, r, 0)
                                     ~~~~~~~~~~~~~~~~~~          ^
    3 warnings generated.
    
    dma_{,un}map_sg expect an enum of type dma_data_direction but this
    driver uses dma_transfer_direction for everything. Convert the driver to
    use dma_data_direction for these two functions.
    
    There are two places that strictly require an enum of type
    dma_transfer_direction: the direction member in struct dma_slave_config
    and the direction parameter in dmaengine_prep_slave_sg. To avoid using
    an explicit cast, add a simple function, ep93xx_dma_data_to_trans_dir,
    to safely map between the two types because they are not 1 to 1 in
    meaning.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit feea46d8f5b046d9d18116bb180b8b41f7090960
Author: Javier González <javier@cnexlabs.com>
Date:   Tue Oct 9 13:11:35 2018 +0200

    lightnvm: pblk: fix race condition on metadata I/O
    
    [ Upstream commit d8adaa3b86324c6186d0adf74bc256bdacfffdb6 ]
    
    In pblk, when a new line is allocated, metadata for the previously
    written line is scheduled. This is done through a fixed memory region
    that is shared through time and contexts across different lines and
    therefore protected by a lock. Unfortunately, this lock is not properly
    covering all the metadata used for sharing this memory regions,
    resulting in a race condition.
    
    This patch fixes this race condition by protecting this metadata
    properly.
    
    Fixes: dd2a43437337 ("lightnvm: pblk: sched. metadata on write thread")
    Signed-off-by: Javier González <javier@cnexlabs.com>
    Signed-off-by: Matias Bjørling <mb@lightnvm.io>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afa8688bd3bf30e374e0134d44df542d6c51d298
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Tue Oct 9 13:12:00 2018 +0200

    lightnvm: pblk: fix two sleep-in-atomic-context bugs
    
    [ Upstream commit 7325b4bbe5952e3e939f15de812f2ee0c0d33ca9 ]
    
    The driver may sleep with holding a spinlock.
    
    The function call paths (from bottom to top) in Linux-4.16 are:
    
    [FUNC] nvm_dev_dma_alloc(GFP_KERNEL)
    drivers/lightnvm/pblk-core.c, 754:
            nvm_dev_dma_alloc in pblk_line_submit_smeta_io
    drivers/lightnvm/pblk-core.c, 1048:
            pblk_line_submit_smeta_io in pblk_line_init_bb
    drivers/lightnvm/pblk-core.c, 1434:
            pblk_line_init_bb in pblk_line_replace_data
    drivers/lightnvm/pblk-recovery.c, 980:
            pblk_line_replace_data in pblk_recov_l2p
    drivers/lightnvm/pblk-recovery.c, 976:
            spin_lock in pblk_recov_l2p
    
    [FUNC] bio_map_kern(GFP_KERNEL)
    drivers/lightnvm/pblk-core.c, 762:
            bio_map_kern in pblk_line_submit_smeta_io
    drivers/lightnvm/pblk-core.c, 1048:
            pblk_line_submit_smeta_io in pblk_line_init_bb
    drivers/lightnvm/pblk-core.c, 1434:
            pblk_line_init_bb in pblk_line_replace_data
    drivers/lightnvm/pblk-recovery.c, 980:
            pblk_line_replace_data in pblk_recov_l2p
    drivers/lightnvm/pblk-recovery.c, 976:
            spin_lock in pblk_recov_l2p
    
    To fix these bugs, the call to pblk_line_replace_data()
    is moved out of the spinlock protection.
    
    These bugs are found by my static analysis tool DSAC.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Reviewed-by: Javier González <javier@cnexlabs.com>
    Signed-off-by: Matias Bjørling <mb@lightnvm.io>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit beaff0a07547b7d8ef6466a621998557f197e1ab
Author: Javier González <javier@cnexlabs.com>
Date:   Tue Oct 9 13:12:07 2018 +0200

    lightnvm: pblk: fix race on sysfs line state
    
    [ Upstream commit 44cdbdc657b23f75736eca3e88b781f009104363 ]
    
    pblk exposes a sysfs interface that represents its internal state. Part
    of this state is the map bitmap for the current open line, which should
    be protected by the line lock to avoid a race when freeing the line
    metadata. Currently, it is not.
    
    This patch makes sure that the line state is consistent and NULL
    bitmap pointers are not dereferenced.
    
    Signed-off-by: Javier González <javier@cnexlabs.com>
    Signed-off-by: Matias Bjørling <mb@lightnvm.io>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd524f47ecc5060679d4485964b429d2d91b3387
Author: Thierry Reding <treding@nvidia.com>
Date:   Fri Sep 21 12:10:48 2018 +0200

    hwmon: (pwm-fan) Set fan speed to 0 on suspend
    
    [ Upstream commit 95dcd64bc5a27080beaa344edfe5bdcca3d2e7dc ]
    
    Technically this is not required because disabling the PWM should be
    enough. However, when support for atomic operations was implemented in
    the PWM subsystem, only actual changes to the PWM channel are applied
    during pwm_config(), which means that during after resume from suspend
    the old settings won't be applied.
    
    One possible solution is for the PWM driver to implement its own PM
    operations such that settings from before suspend get applied on resume.
    This has the disadvantage of completely ignoring any particular ordering
    requirements that PWM user drivers might have, so it is best to leave it
    up to the user drivers to apply the settings that they want at the
    appropriate time.
    
    Another way to solve this would be to read back the current state of the
    PWM at the time of resume. That way, in case the configuration was lost
    during suspend, applying the old settings in PWM user drivers would
    actually get them applied because they differ from the current settings.
    However, not all PWM drivers support reading the hardware state, and not
    all hardware may support it.
    
    The best workaround at this point seems to be to let PWM user drivers
    tell the PWM subsystem that the PWM is turned off by, in addition to
    disabling it, also setting the duty cycle to 0. This causes the resume
    operation to apply a configuration that is different from the current
    configuration, resulting in the proper state from before suspend getting
    restored.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 340029579377f7ee70f41903add4a6d8aefcf918
Author: Janosch Frank <frankja@linux.ibm.com>
Date:   Tue Oct 2 10:57:52 2018 +0200

    s390/sthyi: Fix machine name validity indication
    
    [ Upstream commit b5130dc2224d1881f24224c0590c6d97f2168d6a ]
    
    When running as a level 3 guest with no host provided sthyi support
    sclp_ocf_cpc_name_copy() will only return zeroes. Zeroes are not a
    valid group name, so let's not indicate that the group name field is
    valid.
    
    Also the group name is not dependent on stsi, let's not return based
    on stsi before setting it.
    
    Fixes: 95ca2cb57985 ("KVM: s390: Add sthyi emulation")
    Signed-off-by: Janosch Frank <frankja@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 034d29a7ef6acaea6a76793c1f8aec5c586319f6
Author: Serhey Popovych <serhe.popovych@gmail.com>
Date:   Tue Oct 9 21:21:01 2018 +0300

    tun: Consistently configure generic netdev params via rtnetlink
    
    [ Upstream commit df52eab23d703142c766ac00bdb8db19d71238d0 ]
    
    Configuring generic network device parameters on tun will fail in
    presence of IFLA_INFO_KIND attribute in IFLA_LINKINFO nested attribute
    since tun_validate() always return failure.
    
    This can be visualized with following ip-link(8) command sequences:
    
      # ip link set dev tun0 group 100
      # ip link set dev tun0 group 100 type tun
      RTNETLINK answers: Invalid argument
    
    with contrast to dummy and veth drivers:
    
      # ip link set dev dummy0 group 100
      # ip link set dev dummy0 type dummy
    
      # ip link set dev veth0 group 100
      # ip link set dev veth0 group 100 type veth
    
    Fix by returning zero in tun_validate() when @data is NULL that is
    always in case since rtnl_link_ops->maxtype is zero in tun driver.
    
    Fixes: f019a7a594d9 ("tun: Implement ip link del tunXXX")
    Signed-off-by: Serhey Popovych <serhe.popovych@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dcaa9d656d105d396de0f7cd332ac032c287fc69
Author: Ryan C Goodfellow <rgoodfel@isi.edu>
Date:   Fri Oct 12 11:09:01 2018 -0700

    nfp: devlink port split support for 1x100G CXP NIC
    
    [ Upstream commit 5948185b97fa1f83d7855e638a72982a1073ebf5 ]
    
    This commit makes it possible to use devlink to split the 100G CXP
    Netronome into two 40G interfaces. Currently when you ask for 2
    interfaces, the math in src/nfp_devlink.c:nfp_devlink_port_split
    calculates that you want 5 lanes per port because for some reason
    eth_port.port_lanes=10 (shouldn't this be 12 for CXP?). What we really
    want when asking for 2 breakout interfaces is 4 lanes per port. This
    commit makes that happen by calculating based on 8 lanes if 10 are
    present.
    
    Signed-off-by: Ryan C Goodfellow <rgoodfel@isi.edu>
    Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Reviewed-by: Greg Weeks <greg.weeks@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4db6211a5bdaf96f255afa06871cd062c6a81b1b
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Tue Oct 9 14:47:05 2018 +0100

    arm64: cpufeature: ctr: Fix cpu capability check for late CPUs
    
    [ Upstream commit 8ab66cbe63aeaf9e5970fb4aaef1c660fca59321 ]
    
    The matches() routine for a capability must honor the "scope"
    passed to it and return the proper results.
    i.e, when passed with SCOPE_LOCAL_CPU, it should check the
    status of the capability on the current CPU. This is used by
    verify_local_cpu_capabilities() on a late secondary CPU to make
    sure that it's compliant with the established system features.
    However, ARM64_HAS_CACHE_{IDC/DIC} always checks the system wide
    registers and this could mean that a late secondary CPU could return
    "true" (since the CPU hasn't updated the system wide registers yet)
    and thus lead the system in an inconsistent state, where
    the system assumes it has IDC/DIC feature, while the new CPU
    doesn't.
    
    Fixes: commit 6ae4b6e0578886eb36 ("arm64: Add support for new control bits CTR_EL0.DIC and CTR_EL0.IDC")
    Cc: Philip Elcan <pelcan@codeaurora.org>
    Cc: Shanker Donthineni <shankerd@codeaurora.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddb265c328806a5e982842f35639cf1024be0b99
Author: Omar Sandoval <osandov@fb.com>
Date:   Thu Oct 11 12:20:41 2018 -0700

    swim: fix cleanup on setup error
    
    [ Upstream commit 1448a2a5360ae06f25e2edc61ae070dff5c0beb4 ]
    
    If we fail to allocate the request queue for a disk, we still need to
    free that disk, not just the previous ones. Additionally, we need to
    cleanup the previous request queues.
    
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 140a8e218463f723f4cc64f6603b33b4ca04e668
Author: Omar Sandoval <osandov@fb.com>
Date:   Thu Oct 11 12:20:49 2018 -0700

    ataflop: fix error handling during setup
    
    [ Upstream commit 71327f547ee3a46ec5c39fdbbd268401b2578d0e ]
    
    Move queue allocation next to disk allocation to fix a couple of issues:
    
    - If add_disk() hasn't been called, we should clear disk->queue before
      calling put_disk().
    - If we fail to allocate a request queue, we still need to put all of
      the disks, not just the ones that we allocated queues for.
    
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3967f93cb91b29a9cc64d4920a82aae353b762dd
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Oct 16 16:52:05 2018 +0200

    netfilter: xt_nat: fix DNAT target for shifted portmap ranges
    
    [ Upstream commit cb20f2d2c0507d60d94ef896991e95708f051dd1 ]
    
    The commit 2eb0f624b709 ("netfilter: add NAT support for shifted
    portmap ranges") did not set the checkentry/destroy callbacks for
    the newly added DNAT target. As a result, rulesets using only
    such nat targets are not effective, as the relevant conntrack hooks
    are not enabled.
    The above affect also nft_compat rulesets.
    Fix the issue adding the missing initializers.
    
    Fixes: 2eb0f624b709 ("netfilter: add NAT support for shifted portmap ranges")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0713bef08f090b7df69b58b73f41fdc370366435
Author: Waiman Long <longman@redhat.com>
Date:   Thu Oct 18 21:45:17 2018 -0400

    locking/lockdep: Fix debug_locks off performance problem
    
    [ Upstream commit 9506a7425b094d2f1d9c877ed5a78f416669269b ]
    
    It was found that when debug_locks was turned off because of a problem
    found by the lockdep code, the system performance could drop quite
    significantly when the lock_stat code was also configured into the
    kernel. For instance, parallel kernel build time on a 4-socket x86-64
    server nearly doubled.
    
    Further analysis into the cause of the slowdown traced back to the
    frequent call to debug_locks_off() from the __lock_acquired() function
    probably due to some inconsistent lockdep states with debug_locks
    off. The debug_locks_off() function did an unconditional atomic xchg
    to write a 0 value into debug_locks which had already been set to 0.
    This led to severe cacheline contention in the cacheline that held
    debug_locks.  As debug_locks is being referenced in quite a few different
    places in the kernel, this greatly slow down the system performance.
    
    To prevent that trashing of debug_locks cacheline, lock_acquired()
    and lock_contended() now checks the state of debug_locks before
    proceeding. The debug_locks_off() function is also modified to check
    debug_locks before calling __debug_locks_off().
    
    Signed-off-by: Waiman Long <longman@redhat.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Link: http://lkml.kernel.org/r/1539913518-15598-1-git-send-email-longman@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92cc2f9792aae53d6b3911b2d78db2efe1b189ad
Author: Masahisa Kojima <masahisa.kojima@linaro.org>
Date:   Tue Oct 23 20:24:28 2018 +0900

    net: socionext: Reset tx queue in ndo_stop
    
    [ Upstream commit 8d5b0bf611ec5b7618d5b772dddc93b8afa78cb8 ]
    
    We observed that packets and bytes count are not reset
    when user performs interface down. Eventually, tx queue is
    exhausted and packets will not be sent out.
    To avoid this problem, resets tx queue in ndo_stop.
    
    Fixes: 533dd11a12f6 ("net: socionext: Add Synquacer NetSec driver")
    Signed-off-by: Masahisa Kojima <masahisa.kojima@linaro.org>
    Signed-off-by: Yoshitoyo Osaki <osaki.yoshitoyo@socionext.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9da20df2fbf67d207c1944e45c8b3d45a60c8155
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Fri Oct 19 21:15:26 2018 +0200

    i2c: rcar: cleanup DMA for all kinds of failure
    
    [ Upstream commit 31d86033a0749a0463ea654130b2de5c163154f1 ]
    
    DMA needs to be cleaned up not only on timeout, but on all errors where
    it has been setup before.
    
    Fixes: 73e8b0528346 ("i2c: rcar: add DMA support")
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f7381656228d00686b89c342fd089315b2ca5e2
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu Oct 18 22:13:02 2018 +0900

    selftests: ftrace: Add synthetic event syntax testcase
    
    [ Upstream commit ba0e41ca81b935b958006c7120466e2217357827 ]
    
    Add a testcase to check the syntax and field types for
    synthetic_events interface.
    
    Link: http://lkml.kernel.org/r/153986838264.18251.16627517536956299922.stgit@devbox
    
    Acked-by: Shuah Khan <shuah@kernel.org>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89c678ab4908b0936d8e2af13c99f642da778dd9
Author: Leo Li <sunpeng.li@amd.com>
Date:   Mon Oct 15 09:46:40 2018 -0400

    drm: Get ref on CRTC commit object when waiting for flip_done
    
    [ Upstream commit 4364bcb2cd21d042bde4776448417ddffbc54045 ]
    
    This fixes a general protection fault, caused by accessing the contents
    of a flip_done completion object that has already been freed. It occurs
    due to the preemption of a non-blocking commit worker thread W by
    another commit thread X. X continues to clear its atomic state at the
    end, destroying the CRTC commit object that W still needs. Switching
    back to W and accessing the commit objects then leads to bad results.
    
    Worker W becomes preemptable when waiting for flip_done to complete. At
    this point, a frequently occurring commit thread X can take over. Here's
    an example where W is a worker thread that flips on both CRTCs, and X
    does a legacy cursor update on both CRTCs:
    
            ...
         1. W does flip work
         2. W runs commit_hw_done()
         3. W waits for flip_done on CRTC 1
         4. > flip_done for CRTC 1 completes
         5. W finishes waiting for CRTC 1
         6. W waits for flip_done on CRTC 2
    
         7. > Preempted by X
         8. > flip_done for CRTC 2 completes
         9. X atomic_check: hw_done and flip_done are complete on all CRTCs
        10. X updates cursor on both CRTCs
        11. X destroys atomic state
        12. X done
    
        13. > Switch back to W
        14. W waits for flip_done on CRTC 2
        15. W raises general protection fault
    
    The error looks like so:
    
        general protection fault: 0000 [#1] PREEMPT SMP PTI
        **snip**
        Call Trace:
         lock_acquire+0xa2/0x1b0
         _raw_spin_lock_irq+0x39/0x70
         wait_for_completion_timeout+0x31/0x130
         drm_atomic_helper_wait_for_flip_done+0x64/0x90 [drm_kms_helper]
         amdgpu_dm_atomic_commit_tail+0xcae/0xdd0 [amdgpu]
         commit_tail+0x3d/0x70 [drm_kms_helper]
         process_one_work+0x212/0x650
         worker_thread+0x49/0x420
         kthread+0xfb/0x130
         ret_from_fork+0x3a/0x50
        Modules linked in: x86_pkg_temp_thermal amdgpu(O) chash(O)
        gpu_sched(O) drm_kms_helper(O) syscopyarea sysfillrect sysimgblt
        fb_sys_fops ttm(O) drm(O)
    
    Note that i915 has this issue masked, since hw_done is signaled after
    waiting for flip_done. Doing so will block the cursor update from
    happening until hw_done is signaled, preventing the cursor commit from
    destroying the state.
    
    v2: The reference on the commit object needs to be obtained before
        hw_done() is signaled, since that's the point where another commit
        is allowed to modify the state. Assuming that the
        new_crtc_state->commit object still exists within flip_done() is
        incorrect.
    
        Fix by getting a reference in setup_commit(), and releasing it
        during default_clear().
    
    Signed-off-by: Leo Li <sunpeng.li@amd.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Harry Wentland <harry.wentland@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1539611200-6184-1-git-send-email-sunpeng.li@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fdd80c2ef128c334b37d5072e67ec99cdcffad8
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Tue Oct 16 19:35:17 2018 +0200

    r8169: re-enable MSI-X on RTL8168g
    
    [ Upstream commit 9675931e6b65d160d16bcc9472c1acef15524def ]
    
    Similar to d49c88d7677b ("r8169: Enable MSI-X on RTL8106e") after
    e9d0ba506ea8 ("PCI: Reprogram bridge prefetch registers on resume")
    we can safely assume that this also fixes the root cause of
    the issue worked around by 7c53a722459c ("r8169: don't use MSI-X on
    RTL8168g"). So let's revert it.
    
    Fixes: 7c53a722459c ("r8169: don't use MSI-X on RTL8168g")
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b78ea67151b7eb98c554ce99ac690c73fd47ae6
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Fri Oct 12 19:14:58 2018 -0700

    net: qla3xxx: Remove overflowing shift statement
    
    [ Upstream commit 8c3bf9b62b667456a57aefcf1689e826df146159 ]
    
    Clang currently warns:
    
    drivers/net/ethernet/qlogic/qla3xxx.c:384:24: warning: signed shift
    result (0xF00000000) requires 37 bits to represent, but 'int' only has
    32 bits [-Wshift-overflow]
                        ((ISP_NVRAM_MASK << 16) | qdev->eeprom_cmd_data));
                          ~~~~~~~~~~~~~~ ^  ~~
    1 warning generated.
    
    The warning is certainly accurate since ISP_NVRAM_MASK is defined as
    (0x000F << 16) which is then shifted by 16, resulting in 64424509440,
    well above UINT_MAX.
    
    Given that this is the only location in this driver where ISP_NVRAM_MASK
    is shifted again, it seems likely that ISP_NVRAM_MASK was originally
    defined without a shift and during the move of the shift to the
    definition, this statement wasn't properly removed (since ISP_NVRAM_MASK
    is used in the statenent right above this). Only the maintainers can
    confirm this since this statment has been here since the driver was
    first added to the kernel.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/127
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a5805bcc60399d049379e20bfc02d4d9ef7d33f
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Tue Oct 16 22:25:24 2018 +0200

    x86/fpu: Remove second definition of fpu in __fpu__restore_sig()
    
    [ Upstream commit 6aa676761d4c1acfa31320e55fa1f83f3fcbbc7a ]
    
    Commit:
    
      c5bedc6847c3b ("x86/fpu: Get rid of PF_USED_MATH usage, convert it to fpu->fpstate_active")
    
    introduced the 'fpu' variable at top of __restore_xstate_sig(),
    which now shadows the other definition:
    
      arch/x86/kernel/fpu/signal.c:318:28: warning: symbol 'fpu' shadows an earlier one
      arch/x86/kernel/fpu/signal.c:271:20: originally declared here
    
    Remove the shadowed definition of 'fpu', as the two definitions are the same.
    
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: c5bedc6847c3b ("x86/fpu: Get rid of PF_USED_MATH usage, convert it to fpu->fpstate_active")
    Link: http://lkml.kernel.org/r/20181016202525.29437-3-bigeasy@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 027622eacae791bc761a4faa3bc77fe858126f49
Author: Milian Wolff <milian.wolff@kdab.com>
Date:   Wed Sep 26 15:52:07 2018 +0200

    perf report: Don't crash on invalid inline debug information
    
    [ Upstream commit d4046e8e17b9f378cb861982ef71c63911b5dff3 ]
    
    When the function name for an inline frame is invalid, we must not try
    to demangle this symbol, otherwise we crash with:
    
      #0  0x0000555555895c01 in bfd_demangle ()
      #1  0x0000555555823262 in demangle_sym (dso=0x555555d92b90, elf_name=0x0, kmodule=0) at util/symbol-elf.c:215
      #2  dso__demangle_sym (dso=dso@entry=0x555555d92b90, kmodule=<optimized out>, kmodule@entry=0, elf_name=elf_name@entry=0x0) at util/symbol-elf.c:400
      #3  0x00005555557fef4b in new_inline_sym (funcname=0x0, base_sym=0x555555d92b90, dso=0x555555d92b90) at util/srcline.c:89
      #4  inline_list__append_dso_a2l (dso=dso@entry=0x555555c7bb00, node=node@entry=0x555555e31810, sym=sym@entry=0x555555d92b90) at util/srcline.c:264
      #5  0x00005555557ff27f in addr2line (dso_name=dso_name@entry=0x555555d92430 "/home/milian/.debug/.build-id/f7/186d14bb94f3c6161c010926da66033d24fce5/elf", addr=addr@entry=2888, file=file@entry=0x0,
          line=line@entry=0x0, dso=dso@entry=0x555555c7bb00, unwind_inlines=unwind_inlines@entry=true, node=0x555555e31810, sym=0x555555d92b90) at util/srcline.c:313
      #6  0x00005555557ffe7c in addr2inlines (sym=0x555555d92b90, dso=0x555555c7bb00, addr=2888, dso_name=0x555555d92430 "/home/milian/.debug/.build-id/f7/186d14bb94f3c6161c010926da66033d24fce5/elf")
          at util/srcline.c:358
    
    So instead handle the case where we get invalid function names for
    inlined frames and use a fallback '??' function name instead.
    
    While this crash was originally reported by Hadrien for rust code, I can
    now also reproduce it with trivial C++ code. Indeed, it seems like
    libbfd fails to interpret the debug information for the inline frame
    symbol name:
    
      $ addr2line -e /home/milian/.debug/.build-id/f7/186d14bb94f3c6161c010926da66033d24fce5/elf -if b48
      main
      /usr/include/c++/8.2.1/complex:610
      ??
      /usr/include/c++/8.2.1/complex:618
      ??
      /usr/include/c++/8.2.1/complex:675
      ??
      /usr/include/c++/8.2.1/complex:685
      main
      /home/milian/projects/kdab/rnd/hotspot/tests/test-clients/cpp-inlining/main.cpp:39
    
    I've reported this bug upstream and also attached a patch there which
    should fix this issue:
    
    https://sourceware.org/bugzilla/show_bug.cgi?id=23715
    
    Reported-by: Hadrien Grasland <grasland@lal.in2p3.fr>
    Signed-off-by: Milian Wolff <milian.wolff@kdab.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Fixes: a64489c56c30 ("perf report: Find the inline stack for a given address")
    [ The above 'Fixes:' cset is where originally the problem was
      introduced, i.e.  using a2l->funcname without checking if it is NULL,
      but this current patch fixes the current codebase, i.e. multiple csets
      were applied after a64489c56c30 before the problem was reported by Hadrien ]
    Link: http://lkml.kernel.org/r/20180926135207.30263-3-milian.wolff@kdab.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a34b5a9d90b177e2675fd2455b2e61b0f253418e
Author: David Miller <davem@davemloft.net>
Date:   Thu Oct 11 22:46:55 2018 -0700

    perf cpu_map: Align cpu map synthesized events properly.
    
    [ Upstream commit 0ed149cf5239cc6e7e65bf00f769e8f1e91076c0 ]
    
    The size of the resulting cpu map can be smaller than a multiple of
    sizeof(u64), resulting in SIGBUS on cpus like Sparc as the next event
    will not be aligned properly.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Kan Liang <kan.liang@intel.com>
    Fixes: 6c872901af07 ("perf cpu_map: Add cpu_map event synthesize function")
    Link: http://lkml.kernel.org/r/20181011.224655.716771175766946817.davem@davemloft.net
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 632f9277621be77d3618f7909dc46f54df65f44e
Author: Jarod Wilson <jarod@redhat.com>
Date:   Thu Sep 6 18:18:12 2018 -0400

    perf tools: Fix use of alternatives to find JDIR
    
    [ Upstream commit 36b8d4628d3cc8f5a748e508cce8673bc00fc63c ]
    
    When a build is run from something like a cron job, the user's $PATH is
    rather minimal, of note, not including /usr/sbin in my own case. Because
    of that, an automated rpm package build ultimately fails to find
    libperf-jvmti.so, because somewhere within the build, this happens...
    
      /bin/sh: alternatives: command not found
      /bin/sh: alternatives: command not found
      Makefile.config:849: No openjdk development package found, please install
      JDK package, e.g. openjdk-8-jdk, java-1.8.0-openjdk-devel
    
    ...and while the build continues, libperf-jvmti.so isn't built, and
    things fall down when rpm tries to find all the %files specified. Exact
    same system builds everything just fine when the job is launched from a
    login shell instead of a cron job, since alternatives is in $PATH, so
    openjdk is actually found.
    
    The test required to get into this section of code actually specifies
    the full path, as does a block just above it, so let's do that here too.
    
    Signed-off-by: Jarod Wilson <jarod@redhat.com>
    Acked-by: Jiri Olsa <jolsa@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: William Cohen <wcohen@redhat.com>
    Fixes: d4dfdf00d43e ("perf jvmti: Plug compilation into perf build")
    Link: http://lkml.kernel.org/r/20180906221812.11167-1-jarod@redhat.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71797bf860be6b747ba3eb5bdeef9a1aa90a1b5b
Author: Jiri Olsa <jolsa@redhat.com>
Date:   Wed Oct 3 23:20:52 2018 +0200

    perf evsel: Store ids for events with their own cpus perf_event__synthesize_event_update_cpus
    
    [ Upstream commit 4ab8455f8bd83298bf7f67ab9357e3b1cc765c7d ]
    
    John reported crash when recording on an event under PMU with cpumask defined:
    
      root@localhost:~# ./perf_debug_ record -e armv8_pmuv3_0/br_mis_pred/ sleep 1
      perf: Segmentation fault
      Obtained 9 stack frames.
      ./perf_debug_() [0x4c5ef8]
      [0xffff82ba267c]
      ./perf_debug_() [0x4bc5a8]
      ./perf_debug_() [0x419550]
      ./perf_debug_() [0x41a928]
      ./perf_debug_() [0x472f58]
      ./perf_debug_() [0x473210]
      ./perf_debug_() [0x4070f4]
      /lib/aarch64-linux-gnu/libc.so.6(__libc_start_main+0xe0) [0xffff8294c8a0]
      Segmentation fault (core dumped)
    
    We synthesize an update event that needs to touch the evsel id array, which is
    not defined at that time. Fixing this by forcing the id allocation for events
    with their own cpus.
    
    Reported-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Tested-by: John Garry <john.garry@huawei.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linuxarm@huawei.com
    Fixes: bfd8f72c2778 ("perf record: Synthesize unit/scale/... in event update")
    Link: http://lkml.kernel.org/r/20181003212052.GA32371@krava
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8148d7cea1f4b3910b022c090a5d36060c7b269
Author: Song Muchun <smuchun@gmail.com>
Date:   Sun Oct 14 19:26:12 2018 +0800

    sched/fair: Fix the min_vruntime update logic in dequeue_entity()
    
    [ Upstream commit 9845c49cc9bbb317a0bc9e9cf78d8e09d54c9af0 ]
    
    The comment and the code around the update_min_vruntime() call in
    dequeue_entity() are not in agreement.
    
    >From commit:
    
      b60205c7c558 ("sched/fair: Fix min_vruntime tracking")
    
    I think that we want to update min_vruntime when a task is sleeping/migrating.
    So, the check is inverted there - fix it.
    
    Signed-off-by: Song Muchun <smuchun@gmail.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: b60205c7c558 ("sched/fair: Fix min_vruntime tracking")
    Link: http://lkml.kernel.org/r/20181014112612.2614-1-smuchun@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0d017fe2a4322711793a4c794026b20100f0173
Author: Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
Date:   Mon Oct 15 16:52:25 2018 -0700

    nfp: flower: use offsets provided by pedit instead of index for ipv6
    
    [ Upstream commit 140b6abac26d799f75d772ab5e969b34ad8d68f1 ]
    
    Previously when populating the set ipv6 address action, we incorrectly
    made use of pedit's key index to determine which 32bit word should be
    set. We now calculate which word has been selected based on the offset
    provided by the pedit action.
    
    Fixes: 354b82bb320e ("nfp: add set ipv6 source and destination address")
    Signed-off-by: Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
    Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8e7c3329332cb8aed633991ec6369bc874188b1
Author: Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
Date:   Mon Oct 15 16:52:23 2018 -0700

    nfp: flower: fix pedit set actions for multiple partial masks
    
    [ Upstream commit 8913806f166e47c6b3fe8253e9cfb9caabe64341 ]
    
    Previously we did not correctly change headers when using multiple
    pedit actions with partial masks. We now take this into account and
    no longer just commit the last pedit action.
    
    Fixes: c0b1bd9a8b8a ("nfp: add set ipv4 header action flower offload")
    Signed-off-by: Pieter Jansen van Vuuren <pieter.jansenvanvuuren@netronome.com>
    Reviewed-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23ef37c73bd70bde1ebf7c9f9da9e6e0d92d66a7
Author: Jian-Hong Pan <jian-hong@endlessm.com>
Date:   Thu Sep 27 12:09:48 2018 +0800

    r8169: Enable MSI-X on RTL8106e
    
    [ Upstream commit d49c88d7677ba737e9d2759a87db0402d5ab2607 ]
    
    Originally, we have an issue where r8169 MSI-X interrupt is broken after
    S3 suspend/resume on RTL8106e of ASUS X441UAR.
    
    02:00.0 Ethernet controller [0200]: Realtek Semiconductor Co., Ltd.
    RTL8101/2/6E PCI Express Fast/Gigabit Ethernet controller [10ec:8136]
    (rev 07)
            Subsystem: ASUSTeK Computer Inc. RTL810xE PCI Express Fast
    Ethernet controller [1043:200f]
            Flags: bus master, fast devsel, latency 0, IRQ 16
            I/O ports at e000 [size=256]
            Memory at ef100000 (64-bit, non-prefetchable) [size=4K]
            Memory at e0000000 (64-bit, prefetchable) [size=16K]
            Capabilities: [40] Power Management version 3
            Capabilities: [50] MSI: Enable- Count=1/1 Maskable- 64bit+
            Capabilities: [70] Express Endpoint, MSI 01
            Capabilities: [b0] MSI-X: Enable+ Count=4 Masked-
            Capabilities: [d0] Vital Product Data
            Capabilities: [100] Advanced Error Reporting
            Capabilities: [140] Virtual Channel
            Capabilities: [160] Device Serial Number 01-00-00-00-36-4c-e0-00
            Capabilities: [170] Latency Tolerance Reporting
            Kernel driver in use: r8169
            Kernel modules: r8169
    
    We found the all of the values in PCI BAR=4 of the ethernet adapter
    become 0xFF after system resumes.  That breaks the MSI-X interrupt.
    Therefore, we can only fall back to MSI interrupt to fix the issue at
    that time.
    
    However, there is a commit which resolves the drivers getting nothing in
    PCI BAR=4 after system resumes.  It is 04cb3ae895d7 "PCI: Reprogram
    bridge prefetch registers on resume" by Daniel Drake.
    
    After apply the patch, the ethernet adapter works fine before suspend
    and after resume.  So, we can revert the workaround after the commit
    "PCI: Reprogram bridge prefetch registers on resume" is merged into main
    tree.
    
    This patch reverts commit 7bb05b85bc2d1a1b647b91424b2ed4a18e6ecd81
    "r8169: don't use MSI-X on RTL8106e".
    
    Buglink: https://bugzilla.kernel.org/show_bug.cgi?id=201181
    Fixes: 7bb05b85bc2d ("r8169: don't use MSI-X on RTL8106e")
    Signed-off-by: Jian-Hong Pan <jian-hong@endlessm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1810feb860b1dcf93c57158047ce28c45a3d155f
Author: Jiri Olsa <jolsa@redhat.com>
Date:   Wed Oct 10 10:03:39 2018 +0200

    perf vendor events intel: Fix wrong filter_band* values for uncore events
    
    [ Upstream commit 94aafb74cee0002e2f2eb6dc5376f54d5951ab4d ]
    
    Michael reported that he could not stat following event:
    
      $ perf stat -e unc_p_freq_ge_1200mhz_cycles -a -- ls
      event syntax error: '..e_1200mhz_cycles'
                                        \___ value too big for format, maximum is 255
      Run 'perf list' for a list of valid events
    
    The event is unwrapped into:
    
      uncore_pcu/event=0xb,filter_band0=1200/
    
    where filter_band0 format says it's one byte only:
    
      # cat uncore_pcu/format/filter_band0
      config1:0-7
    
    while JSON files specifies bigger number:
    
      "Filter": "filter_band0=1200",
    
    all the filter_band* formats show 1 byte width:
    
      # cat uncore_pcu/format/filter_band1
      config1:8-15
      # cat uncore_pcu/format/filter_band2
      config1:16-23
      # cat uncore_pcu/format/filter_band3
      config1:24-31
    
    The reason of the issue is that filter_band* values are supposed to be
    in 100Mhz units.. it's stated in the JSON help for the events, like:
    
      filter_band3=XXX, with XXX in 100Mhz units
    
    This patch divides the filter_band* values by 100, plus there's couple
    of changes that actually change the number completely, like:
    
      -        "Filter": "edge=1,filter_band2=4000",
      +        "Filter": "edge=1,filter_band2=30",
    
    Reported-by: Michael Petlan <mpetlan@redhat.com>
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Acked-by: Andi Kleen <ak@linux.intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/20181010080339.GB15790@krava
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e670a32d2422f8a1fd84491e33c4d025f77887c
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Oct 10 18:02:21 2018 +0200

    xfrm: policy: use hlist rcu variants on insert
    
    [ Upstream commit 9dffff200fd178f11dd50eb1fd8ccd0650c9284e ]
    
    bydst table/list lookups use rcu, so insertions must use rcu versions.
    
    Fixes: a7c44247f704e ("xfrm: policy: make xfrm_policy_lookup_bytype lockless")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b0cdfb2943915368adb5bcfea12ba758e245247
Author: Björn Töpel <bjorn.topel@intel.com>
Date:   Mon Oct 8 19:40:16 2018 +0200

    xsk: do not call synchronize_net() under RCU read lock
    
    [ Upstream commit cee271678d0e3177a25d0fcb2fa5e051d48e4262 ]
    
    The XSKMAP update and delete functions called synchronize_net(), which
    can sleep. It is not allowed to sleep during an RCU read section.
    
    Instead we need to make sure that the sock sk_destruct (xsk_destruct)
    function is asynchronously called after an RCU grace period. Setting
    the SOCK_RCU_FREE flag for XDP sockets takes care of this.
    
    Fixes: fbfc504a24f5 ("bpf: introduce new bpf AF_XDP map type BPF_MAP_TYPE_XSKMAP")
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Björn Töpel <bjorn.topel@intel.com>
    Acked-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1d394e201f050b1fe5261933d67cb2f3a76c78c
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Fri Oct 5 16:17:43 2018 -0600

    selftests: usbip: add wait after attach and before checking port status
    
    [ Upstream commit 4b0aaacee51eb6592a03fdefd5ce97558518e291 ]
    
    Add sleep between attach and "usbip port" check to make sure status is
    updated. Running attach and query back shows incorrect status.
    
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c714f12f60ba23c8db44ee894fd8eef19715df88
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Wed Oct 3 09:20:46 2018 +0200

    Revert "perf tools: Fix PMU term format max value calculation"
    
    [ Upstream commit 1b9caa10b31dda0866f4028e4bfb923fb6e4072f ]
    
    This reverts commit ac0e2cd555373ae6f8f3a3ad3fbbf5b6d1e7aaaa.
    
    Michael reported an issue with oversized terms values assignment
    and I noticed there was actually a misunderstanding of the max
    value check in the past.
    
    The above commit's changelog says:
    
      If bit 21 is set, there is parsing issues as below.
    
        $ perf stat -a -e uncore_qpi_0/event=0x200002,umask=0x8/
        event syntax error: '..pi_0/event=0x200002,umask=0x8/'
                                          \___ value too big for format, maximum is 511
    
    But there's no issue there, because the event value is distributed
    along the value defined by the format. Even if the format defines
    separated bit, the value is treated as a continual number, which
    should follow the format definition.
    
    In above case it's 9-bit value with last bit separated:
      $ cat uncore_qpi_0/format/event
      config:0-7,21
    
    Hence the value 0x200002 is correctly reported as format violation,
    because it exceeds 9 bits. It should have been 0x102 instead, which
    sets the 9th bit - the bit 21 of the format.
    
      $ perf stat -vv -a -e uncore_qpi_0/event=0x102,umask=0x8/
      Using CPUID GenuineIntel-6-2D
      ...
      ------------------------------------------------------------
      perf_event_attr:
        type                             10
        size                             112
        config                           0x200802
        sample_type                      IDENTIFIER
      ...
    
    Reported-by: Michael Petlan <mpetlan@redhat.com>
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Fixes: ac0e2cd55537 ("perf tools: Fix PMU term format max value calculation")
    Link: http://lkml.kernel.org/r/20181003072046.29276-1-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ceb3d05aff50cbedf0ef74ad8bdd38e3e086451
Author: Keith Busch <keith.busch@intel.com>
Date:   Fri Oct 5 08:57:06 2018 -0600

    nvme: remove ns sibling before clearing path
    
    [ Upstream commit 48f78be3326052a7718678ff9a78d6d884a50323 ]
    
    The code had been clearing a namespace being deleted as the current
    path while that namespace was still in the path siblings list. It is
    possible a new IO could set that namespace back to the current path
    since it appeared to be an eligable path to select, which may result in
    a use-after-free error.
    
    This patch ensures a namespace being removed is not eligable to be reset
    as a current path prior to clearing it as the current path.
    
    Signed-off-by: Keith Busch <keith.busch@intel.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5849e9bf203331ac796c3028c816a0d8ef3c814
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Oct 5 19:38:46 2018 -0700

    bpf: do not blindly change rlimit in reuseport net selftest
    
    [ Upstream commit 262f9d811c7608f1e74258ceecfe1fa213bdf912 ]
    
    If the current process has unlimited RLIMIT_MEMLOCK,
    we should should leave it as is.
    
    Fixes: 941ff6f11c02 ("bpf: fix rlimit in reuseport net selftest")
    Signed-off-by: John Sperbeck <jsperbeck@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6dd0eaf03c0ac639665611d1ab9b8609c07a9435
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Mon Sep 17 14:00:54 2018 +0300

    drm: fix use of freed memory in drm_mode_setcrtc
    
    [ Upstream commit 064253c1c0625efd0362a0b7ecdbe8bee2a2904d ]
    
    drm_mode_setcrtc() retries modesetting in case one of the functions it
    calls returns -EDEADLK. connector_set, mode and fb are freed before
    retrying, but they are not set to NULL. This can cause
    drm_mode_setcrtc() to use those variables.
    
    For example: On the first try __drm_mode_set_config_internal() returns
    -EDEADLK. connector_set, mode and fb are freed. Next retry starts, and
    drm_modeset_lock_all_ctx() returns -EDEADLK, and we jump to 'out'. The
    code will happily try to release all three again.
    
    This leads to crashes of different kinds, depending on the sequence the
    EDEADLKs happen.
    
    Fix this by setting the three variables to NULL at the start of the
    retry loop.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180917110054.4053-1-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9493729df3965bee9a15e2a5e3c2eed34d3940f
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed Sep 5 12:02:15 2018 +0200

    ARM: dts: exynos: Disable pull control for MAX8997 interrupts on Origen
    
    commit f5e758b8358f6c27e8a351ddf0b441a64cdabb94 upstream.
    
    PMIC_IRQB and PMIC_KEYINB lines on Exynos4210-based Origen board have
    external pull-up resistors, so disable any pull control for those lines
    in respective pin controller node. This fixes support for MAX8997
    interrupts and enables operation of wakeup from MAX8997 RTC alarm.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Fixes: 17419726aaa1 ("ARM: dts: add max8997 device node for exynos4210-origen board")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db611db0ee15ab4d01dde3d7a12df90874eaeea4
Author: Sai Praneeth <sai.praneeth.prakhya@intel.com>
Date:   Wed Aug 1 11:42:25 2018 -0700

    x86/speculation: Support Enhanced IBRS on future CPUs
    
    commit 706d51681d636a0c4a5ef53395ec3b803e45ed4d upstream.
    
    Future Intel processors will support "Enhanced IBRS" which is an "always
    on" mode i.e. IBRS bit in SPEC_CTRL MSR is enabled once and never
    disabled.
    
    From the specification [1]:
    
     "With enhanced IBRS, the predicted targets of indirect branches
      executed cannot be controlled by software that was executed in a less
      privileged predictor mode or on another logical processor. As a
      result, software operating on a processor with enhanced IBRS need not
      use WRMSR to set IA32_SPEC_CTRL.IBRS after every transition to a more
      privileged predictor mode. Software can isolate predictor modes
      effectively simply by setting the bit once. Software need not disable
      enhanced IBRS prior to entering a sleep state such as MWAIT or HLT."
    
    If Enhanced IBRS is supported by the processor then use it as the
    preferred spectre v2 mitigation mechanism instead of Retpoline. Intel's
    Retpoline white paper [2] states:
    
     "Retpoline is known to be an effective branch target injection (Spectre
      variant 2) mitigation on Intel processors belonging to family 6
      (enumerated by the CPUID instruction) that do not have support for
      enhanced IBRS. On processors that support enhanced IBRS, it should be
      used for mitigation instead of retpoline."
    
    The reason why Enhanced IBRS is the recommended mitigation on processors
    which support it is that these processors also support CET which
    provides a defense against ROP attacks. Retpoline is very similar to ROP
    techniques and might trigger false positives in the CET defense.
    
    If Enhanced IBRS is selected as the mitigation technique for spectre v2,
    the IBRS bit in SPEC_CTRL MSR is set once at boot time and never
    cleared. Kernel also has to make sure that IBRS bit remains set after
    VMEXIT because the guest might have cleared the bit. This is already
    covered by the existing x86_spec_ctrl_set_guest() and
    x86_spec_ctrl_restore_host() speculation control functions.
    
    Enhanced IBRS still requires IBPB for full mitigation.
    
    [1] Speculative-Execution-Side-Channel-Mitigations.pdf
    [2] Retpoline-A-Branch-Target-Injection-Mitigation.pdf
    Both documents are available at:
    https://bugzilla.kernel.org/show_bug.cgi?id=199511
    
    Originally-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tim C Chen <tim.c.chen@intel.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Ravi Shankar <ravi.v.shankar@intel.com>
    Link: https://lkml.kernel.org/r/1533148945-24095-1-git-send-email-sai.praneeth.prakhya@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 178ecd6214509e1ed3eadd0479b3b7f17ff55bd0
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Wed Oct 17 12:34:32 2018 +0200

    x86/mm/pat: Disable preemption around __flush_tlb_all()
    
    commit f77084d96355f5fba8e2c1fb3a51a393b1570de7 upstream.
    
    The WARN_ON_ONCE(__read_cr3() != build_cr3()) in switch_mm_irqs_off()
    triggers every once in a while during a snapshotted system upgrade.
    
    The warning triggers since commit decab0888e6e ("x86/mm: Remove
    preempt_disable/enable() from __native_flush_tlb()"). The callchain is:
    
      get_page_from_freelist() -> post_alloc_hook() -> __kernel_map_pages()
    
    with CONFIG_DEBUG_PAGEALLOC enabled.
    
    Disable preemption during CR3 reset / __flush_tlb_all() and add a comment
    why preemption has to be disabled so it won't be removed accidentaly.
    
    Add another preemptible() check in __flush_tlb_all() to catch callers with
    enabled preemption when PGE is enabled, because PGE enabled does not
    trigger the warning in __native_flush_tlb(). Suggested by Andy Lutomirski.
    
    Fixes: decab0888e6e ("x86/mm: Remove preempt_disable/enable() from __native_flush_tlb()")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20181017103432.zgv46nlu3hc7k4rq@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d601f8c2e0b0d7f2bb81fc4f50324fb2c0cfdabc
Author: He Zhe <zhe.he@windriver.com>
Date:   Tue Aug 14 23:33:42 2018 +0800

    x86/corruption-check: Fix panic in memory_corruption_check() when boot option without value is provided
    
    commit ccde460b9ae5c2bd5e4742af0a7f623c2daad566 upstream.
    
    memory_corruption_check[{_period|_size}]()'s handlers do not check input
    argument before passing it to kstrtoul() or simple_strtoull(). The argument
    would be a NULL pointer if each of the kernel parameters, without its
    value, is set in command line and thus cause the following panic.
    
    PANIC: early exception 0xe3 IP 10:ffffffff73587c22 error 0 cr2 0x0
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 4.18-rc8+ #2
    [    0.000000] RIP: 0010:kstrtoull+0x2/0x10
    ...
    [    0.000000] Call Trace
    [    0.000000]  ? set_corruption_check+0x21/0x49
    [    0.000000]  ? do_early_param+0x4d/0x82
    [    0.000000]  ? parse_args+0x212/0x330
    [    0.000000]  ? rdinit_setup+0x26/0x26
    [    0.000000]  ? parse_early_options+0x20/0x23
    [    0.000000]  ? rdinit_setup+0x26/0x26
    [    0.000000]  ? parse_early_param+0x2d/0x39
    [    0.000000]  ? setup_arch+0x2f7/0xbf4
    [    0.000000]  ? start_kernel+0x5e/0x4c2
    [    0.000000]  ? load_ucode_bsp+0x113/0x12f
    [    0.000000]  ? secondary_startup_64+0xa5/0xb0
    
    This patch adds checks to prevent the panic.
    
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: gregkh@linuxfoundation.org
    Cc: kstewart@linuxfoundation.org
    Cc: pombredanne@nexb.com
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/1534260823-87917-1-git-send-email-zhe.he@windriver.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a359f8f8ec82919c012c77e7531184097cbd9ea
Author: Juergen Gross <jgross@suse.com>
Date:   Wed Oct 10 08:14:54 2018 +0200

    x86/xen: Fix boot loader version reported for PVH guests
    
    commit 357d291ce035d1b757568058f3c9898c60d125b1 upstream.
    
    The boot loader version reported via sysfs is wrong in case of the
    kernel being booted via the Xen PVH boot entry. it should be 2.12
    (0x020c), but it is reported to be 2.18 (0x0212).
    
    As the current way to set the version is error prone use the more
    readable variant (2 << 8) | 12.
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Cc: <stable@vger.kernel.org> # 4.12
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: boris.ostrovsky@oracle.com
    Cc: bp@alien8.de
    Cc: corbet@lwn.net
    Cc: linux-doc@vger.kernel.org
    Cc: xen-devel@lists.xenproject.org
    Link: http://lkml.kernel.org/r/20181010061456.22238-2-jgross@suse.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02fb68711ba6d540087999d7cd4a67c16b69f2c0
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Tue Sep 25 14:38:55 2018 +0200

    x86/speculation: Enable cross-hyperthread spectre v2 STIBP mitigation
    
    commit 53c613fe6349994f023245519265999eed75957f upstream.
    
    STIBP is a feature provided by certain Intel ucodes / CPUs. This feature
    (once enabled) prevents cross-hyperthread control of decisions made by
    indirect branch predictors.
    
    Enable this feature if
    
    - the CPU is vulnerable to spectre v2
    - the CPU supports SMT and has SMT siblings online
    - spectre_v2 mitigation autoselection is enabled (default)
    
    After some previous discussion, this leaves STIBP on all the time, as wrmsr
    on crossing kernel boundary is a no-no. This could perhaps later be a bit
    more optimized (like disabling it in NOHZ, experiment with disabling it in
    idle, etc) if needed.
    
    Note that the synchronization of the mask manipulation via newly added
    spec_ctrl_mutex is currently not strictly needed, as the only updater is
    already being serialized by cpu_add_remove_lock, but let's make this a
    little bit more future-proof.
    
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc:  "WoodhouseDavid" <dwmw@amazon.co.uk>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc:  "SchauflerCasey" <casey.schaufler@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/nycvar.YFH.7.76.1809251438240.15880@cbobk.fhfr.pm
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5e99bd18db35cc96c06b6d0066749a103bbe430
Author: Alex Stanoev <alex@astanoev.com>
Date:   Sun Oct 28 16:55:12 2018 +0000

    ALSA: ca0106: Disable IZD on SB0570 DAC to fix audio pops
    
    commit ac237c28d5ac1b241d58b1b7b4b9fa10efb22fb5 upstream.
    
    The Creative Audigy SE (SB0570) card currently exhibits an audible pop
    whenever playback is stopped or resumed, or during silent periods of an
    audio stream. Initialise the IZD bit to the 0 to eliminate these pops.
    
    The Infinite Zero Detection (IZD) feature on the DAC causes the output
    to be shunted to Vcap after 2048 samples of silence. This discharges the
    AC coupling capacitor through the output and causes the aforementioned
    pop/click noise.
    
    The behaviour of the IZD bit is described on page 15 of the WM8768GEDS
    datasheet: "With IZD=1, applying MUTE for 1024 consecutive input samples
    will cause all outputs to be connected directly to VCAP. This also
    happens if 2048 consecutive zero input samples are applied to all 6
    channels, and IZD=0. It will be removed as soon as any channel receives
    a non-zero input". I believe the second sentence might be referring to
    IZD=1 instead of IZD=0 given the observed behaviour of the card.
    
    This change should make the DAC initialisation consistent with
    Creative's Windows driver, as this popping persists when initialising
    the card in Linux and soft rebooting into Windows, but is not present on
    a cold boot to Windows.
    
    Signed-off-by: Alex Stanoev <alex@astanoev.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c30febb738374921ca103511172309f790b6132
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Oct 16 12:18:21 2018 +0200

    ALSA: hda: Add 2 more models to the power_save blacklist
    
    commit 5cb6b5fc013ee711d19bfc4e9deb8d6ae80741db upstream.
    
    Power-saving is causing plops on audio start/stop on Dell Precision T3600
    laptops and Intel DZ77BH boards, add these to the power_save blacklist.
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1525104
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cfca999ee945a05ac04a4ac9ad96cf6accd4609
Author: Jeremy Cline <jcline@redhat.com>
Date:   Thu Oct 11 15:49:17 2018 -0400

    ALSA: hda - Add mic quirk for the Lenovo G50-30 (17aa:3905)
    
    commit e7bb6ad5685f05685dd8a6a5eda7bfcd14d5f95b upstream.
    
    The Lenovo G50-30, like other G50 models, has a Conexant codec that
    requires a quirk for its inverted stereo dmic.
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1249364
    Reported-by: Alexander Ploumistos <alex.ploumistos@gmail.com>
    Tested-by: Alexander Ploumistos <alex.ploumistos@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43a57738232c31a5955eda6cd4e69af642d01b41
Author: Hui Wang <hui.wang@canonical.com>
Date:   Wed Oct 10 11:57:25 2018 +0800

    ALSA: hda/realtek - Fix the problem of the front MIC on the Lenovo M715
    
    commit d06fb562bff5d14defdacbd92449bacbaedd5cdf upstream.
    
    The front MIC on the Lenovo M715 can't record sound, after applying
    the ALC294_FIXUP_LENOVO_MIC_LOCATION, the problem is fixed. So add
    the pin configuration of this machine to the pin quirk table.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9580bd128c3b6d67a77a10937994fff766ee4b8b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Oct 9 14:20:17 2018 +0200

    ALSA: hda - Fix headphone pin config for ASUS G751
    
    commit 5b7c5e1f4c36b99d0f694f38b9ad910f520cb7ef upstream.
    
    BIOS on ASUS G751 doesn't seem to map the headphone pin (NID 0x16)
    correctly.  Add a quirk to address it, as well as chaining to the
    previous fix for the microphone.
    
    Reported-by: Håvard <hovardslill@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 618ad7fe0e41401baa75025d2fad2f6eb3d0cee5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sun Oct 7 09:44:17 2018 +0200

    ALSA: hda - Add quirk for ASUS G751 laptop
    
    commit 11ba6111160290ccd35562f4e05cec08942a6c4c upstream.
    
    ASUS G751 requires the extra COEF initialization to make it microphone
    working properly.
    
    Reported-and-tested-by: Håvard <hovardslill@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1396c159647a058dc1714491bc37dad67db1468f
Author: Helge Deller <deller@gmx.de>
Date:   Sun Oct 14 21:58:00 2018 +0200

    parisc: Fix exported address of os_hpmc handler
    
    commit 99a3ae51d557d8e38a7aece65678a31f9db215ee upstream.
    
    In the C-code we need to put the physical address of the hpmc handler in
    the interrupt vector table (IVA) in order to get HPMCs working.  Since
    on parisc64 function pointers are indirect (in fact they are function
    descriptors) we instead export the address as variable and not as
    function.
    
    This reverts a small part of commit f39cce654f9a ("parisc: Add
    cfi_startproc and cfi_endproc to assembly code").
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: <stable@vger.kernel.org>    [4.9+]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e3efb6ff698451300b6a7fb6b78b9b19061de3e
Author: Helge Deller <deller@gmx.de>
Date:   Fri Oct 12 22:37:46 2018 +0200

    parisc: Fix map_pages() to not overwrite existing pte entries
    
    commit 3c229b3f2dd8133f61bb81d3cb018be92f4bba39 upstream.
    
    Fix a long-existing small nasty bug in the map_pages() implementation which
    leads to overwriting already written pte entries with zero, *if* map_pages() is
    called a second time with an end address which isn't aligned on a pmd boundry.
    This happens for example if we want to remap only the text segment read/write
    in order to run alternative patching on the code. Exiting the loop when we
    reach the end address fixes this.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9ad0ecfd50338d8a3deb69c6dc942f510a1813a
Author: John David Anglin <dave.anglin@bell.net>
Date:   Sat Oct 6 13:11:30 2018 -0400

    parisc: Fix address in HPMC IVA
    
    commit 1138b6718ff74d2a934459643e3754423d23b5e2 upstream.
    
    Helge noticed that the address of the os_hpmc handler was not being
    correctly calculated in the hpmc macro.  As a result, PDCE_CHECK would
    fail to call os_hpmc:
    
    <Cpu2> e800009802e00000  0000000000000000  CC_ERR_CHECK_HPMC
    <Cpu2> 37000f7302e00000  8040004000000000  CC_ERR_CPU_CHECK_SUMMARY
    <Cpu2> f600105e02e00000  fffffff0f0c00000  CC_MC_HPMC_MONARCH_SELECTED
    <Cpu2> 140003b202e00000  000000000000000b  CC_ERR_HPMC_STATE_ENTRY
    <Cpu2> 5600100b02e00000  00000000000001a0  CC_MC_OS_HPMC_LEN_ERR
    <Cpu2> 5600106402e00000  fffffff0f0438e70  CC_MC_BR_TO_OS_HPMC_FAILED
    <Cpu2> e800009802e00000  0000000000000000  CC_ERR_CHECK_HPMC
    <Cpu2> 37000f7302e00000  8040004000000000  CC_ERR_CPU_CHECK_SUMMARY
    <Cpu2> 4000109f02e00000  0000000000000000  CC_MC_HPMC_INITIATED
    <Cpu2> 4000101902e00000  0000000000000000  CC_MC_MULTIPLE_HPMCS
    <Cpu2> 030010d502e00000  0000000000000000  CC_CPU_STOP
    
    The address problem can be seen by dumping the fault vector:
    
    0000000040159000 <fault_vector_20>:
        40159000:   63 6f 77 73     stb r15,-2447(dp)
        40159004:   20 63 61 6e     ldil L%b747000,r3
        40159008:   20 66 6c 79     ldil L%-1c3b3000,r3
            ...
        40159020:   08 00 02 40     nop
        40159024:   20 6e 60 02     ldil L%15d000,r3
        40159028:   34 63 00 00     ldo 0(r3),r3
        4015902c:   e8 60 c0 02     bv,n r0(r3)
        40159030:   08 00 02 40     nop
        40159034:   00 00 00 00     break 0,0
        40159038:   c0 00 70 00     bb,*< r0,sar,40159840 <fault_vector_20+0x840>
        4015903c:   00 00 00 00     break 0,0
    
    Location 40159038 should contain the physical address of os_hpmc:
    
    000000004015d000 <os_hpmc>:
        4015d000:   08 1a 02 43     copy r26,r3
        4015d004:   01 c0 08 a4     mfctl iva,r4
        4015d008:   48 85 00 68     ldw 34(r4),r5
    
    This patch moves the address setup into initialize_ivt to resolve the
    above problem.  I tested the change by dumping the HPMC entry after setup:
    
    0000000040209020:  8000240
    0000000040209024: 206a2004
    0000000040209028: 34630ac0
    000000004020902c: e860c002
    0000000040209030:  8000240
    0000000040209034: 1bdddce6
    0000000040209038:   15d000
    000000004020903c:      1a0
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acf2f1783055c829622d7db89bebac883916c7e3
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Sat Oct 13 20:32:17 2018 -0700

    acpi, nfit: Fix Address Range Scrub completion tracking
    
    commit d3abaf43bab8d5b0a3c6b982100d9e2be96de4ad upstream.
    
    The Address Range Scrub implementation tried to skip running scrubs
    against ranges that were already scrubbed by the BIOS. Unfortunately
    that support also resulted in early scrub completions as evidenced by
    this debug output from nfit_test:
    
        nd_region region9: ARS: range 1 short complete
        nd_region region3: ARS: range 1 short complete
        nd_region region4: ARS: range 2 ARS start (0)
        nd_region region4: ARS: range 2 short complete
    
    ...i.e. completions without any indications that the scrub was started.
    
    This state of affairs was hard to see in the code due to the
    proliferation of state bits and mistakenly trying to track done state
    per-range when the completion is a global property of the bus.
    
    So, kill the four ARS state bits (ARS_REQ, ARS_REQ_REDO, ARS_DONE, and
    ARS_SHORT), and replace them with just 2 request flags ARS_REQ_SHORT and
    ARS_REQ_LONG. The implementation will still complete and reap the
    results of BIOS initiated ARS, but it will not attempt to use that
    information to affect the completion status of scrubbing the ranges from
    a Linux perspective.
    
    Instead, try to synchronously run a short ARS per range at init time and
    schedule a long scrub in the background. If ARS is busy with an ARS
    request, schedule both a short and a long scrub for when ARS returns to
    idle. This logic also satisfies the intent of what ARS_REQ_REDO was
    trying to achieve. The new rule is that the REQ flag stays set until the
    next successful ars_start() for that range.
    
    With the new policy that the REQ flags are not cleared until the next
    start, the implementation no longer loses requests as can be seen from
    the following log:
    
        nd_region region3: ARS: range 1 ARS start short (0)
        nd_region region9: ARS: range 1 ARS start short (0)
        nd_region region3: ARS: range 1 complete
        nd_region region4: ARS: range 2 ARS start short (0)
        nd_region region9: ARS: range 1 complete
        nd_region region9: ARS: range 1 ARS start long (0)
        nd_region region4: ARS: range 2 complete
        nd_region region3: ARS: range 1 ARS start long (0)
        nd_region region9: ARS: range 1 complete
        nd_region region3: ARS: range 1 complete
        nd_region region4: ARS: range 2 ARS start long (0)
        nd_region region4: ARS: range 2 complete
    
    ...note that the nfit_test emulated driver provides 2 buses, that is why
    some of the range indices are duplicated. Notice that each range
    now successfully completes a short and long scrub.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 14c73f997a5e ("nfit, address-range-scrub: introduce nfit_spa->ars_state")
    Fixes: cc3d3458d46f ("acpi/nfit: queue issuing of ars when an uc error...")
    Reported-by: Jacek Zloch <jacek.zloch@intel.com>
    Reported-by: Krzysztof Rusocki <krzysztof.rusocki@intel.com>
    Reviewed-by: Dave Jiang <dave.jiang@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf7d33fa2dd36fa0d6a98833024f1632f357f9cf
Author: David Arcari <darcari@redhat.com>
Date:   Mon Aug 27 15:19:08 2018 -0400

    mailbox: PCC: handle parse error
    
    commit afd0b1fb22269f48d68fdf269891c653818c8047 upstream.
    
    acpi_pcc_probe() calls acpi_table_parse_entries_array() but fails
    to check for an error return.  This in turn can result in calling
    kcalloc() with a negative count as well as emitting the following
    misleading erorr message:
    
    [    2.642015] Could not allocate space for PCC mbox channels
    
    Fixes: 8f8027c5f935 (mailbox: PCC: erroneous error message when parsing ACPI PCCT)
    Signed-off-by: David Arcari <darcari@redhat.com>
    Reviewed-by: Al Stone <ahs3@redhat.com>
    Cc: 4.18+ <stable@vger.kernel.org> # 4.18+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f703cf73a0cdb3c833c219cb79a829abb6c2432b
Author: Jan Glauber <jan.glauber@gmail.com>
Date:   Thu Oct 11 12:13:01 2018 +0200

    ipmi: Fix timer race with module unload
    
    commit 0711e8c1b4572d076264e71b0002d223f2666ed7 upstream.
    
    Please note that below oops is from an older kernel, but the same
    race seems to be present in the upstream kernel too.
    
    ---8<---
    
    The following panic was encountered during removing the ipmi_ssif
    module:
    
    [ 526.352555] Unable to handle kernel paging request at virtual address ffff000006923090
    [ 526.360464] Mem abort info:
    [ 526.363257] ESR = 0x86000007
    [ 526.366304] Exception class = IABT (current EL), IL = 32 bits
    [ 526.372221] SET = 0, FnV = 0
    [ 526.375269] EA = 0, S1PTW = 0
    [ 526.378405] swapper pgtable: 4k pages, 48-bit VAs, pgd = 000000008ae60416
    [ 526.385185] [ffff000006923090] *pgd=000000bffcffe803, *pud=000000bffcffd803, *pmd=0000009f4731a003, *pte=0000000000000000
    [ 526.396141] Internal error: Oops: 86000007 [#1] SMP
    [ 526.401008] Modules linked in: nls_iso8859_1 ipmi_devintf joydev input_leds ipmi_msghandler shpchp sch_fq_codel ib_iser rdma_cm iw_cm ib_cm ib_core iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi ip_tables x_tables autofs4 btrfs zstd_compress raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx xor raid6_pq libcrc32c raid1 raid0 multipath linear i2c_smbus hid_generic usbhid uas hid usb_storage ast aes_ce_blk i2c_algo_bit aes_ce_cipher qede ttm crc32_ce ptp crct10dif_ce drm_kms_helper ghash_ce syscopyarea sha2_ce sysfillrect sysimgblt pps_core fb_sys_fops sha256_arm64 sha1_ce mpt3sas qed drm raid_class ahci scsi_transport_sas libahci gpio_xlp i2c_xlp9xx aes_neon_bs aes_neon_blk crypto_simd cryptd aes_arm64 [last unloaded: ipmi_ssif]
    [ 526.468085] CPU: 125 PID: 0 Comm: swapper/125 Not tainted 4.15.0-35-generic #38~lp1775396+build.1
    [ 526.476942] Hardware name: To be filled by O.E.M. Saber/Saber, BIOS 0ACKL022 08/14/2018
    [ 526.484932] pstate: 00400009 (nzcv daif +PAN -UAO)
    [ 526.489713] pc : 0xffff000006923090
    [ 526.493198] lr : call_timer_fn+0x34/0x178
    [ 526.497194] sp : ffff000009b0bdd0
    [ 526.500496] x29: ffff000009b0bdd0 x28: 0000000000000082
    [ 526.505796] x27: 0000000000000002 x26: ffff000009515188
    [ 526.511096] x25: ffff000009515180 x24: ffff0000090f1018
    [ 526.516396] x23: ffff000009519660 x22: dead000000000200
    [ 526.521696] x21: ffff000006923090 x20: 0000000000000100
    [ 526.526995] x19: ffff809eeb466a40 x18: 0000000000000000
    [ 526.532295] x17: 000000000000000e x16: 0000000000000007
    [ 526.537594] x15: 0000000000000000 x14: 071c71c71c71c71c
    [ 526.542894] x13: 0000000000000000 x12: 0000000000000000
    [ 526.548193] x11: 0000000000000001 x10: ffff000009b0be88
    [ 526.553493] x9 : 0000000000000000 x8 : 0000000000000005
    [ 526.558793] x7 : ffff80befc1f8528 x6 : 0000000000000020
    [ 526.564092] x5 : 0000000000000040 x4 : 0000000020001b20
    [ 526.569392] x3 : 0000000000000000 x2 : ffff809eeb466a40
    [ 526.574692] x1 : ffff000006923090 x0 : ffff809eeb466a40
    [ 526.579992] Process swapper/125 (pid: 0, stack limit = 0x000000002eb50acc)
    [ 526.586854] Call trace:
    [ 526.589289] 0xffff000006923090
    [ 526.592419] expire_timers+0xc8/0x130
    [ 526.596070] run_timer_softirq+0xec/0x1b0
    [ 526.600070] __do_softirq+0x134/0x328
    [ 526.603726] irq_exit+0xc8/0xe0
    [ 526.606857] __handle_domain_irq+0x6c/0xc0
    [ 526.610941] gic_handle_irq+0x84/0x188
    [ 526.614679] el1_irq+0xe8/0x180
    [ 526.617822] cpuidle_enter_state+0xa0/0x328
    [ 526.621993] cpuidle_enter+0x34/0x48
    [ 526.625564] call_cpuidle+0x44/0x70
    [ 526.629040] do_idle+0x1b8/0x1f0
    [ 526.632256] cpu_startup_entry+0x2c/0x30
    [ 526.636174] secondary_start_kernel+0x11c/0x130
    [ 526.640694] Code: bad PC value
    [ 526.643800] ---[ end trace d020b0b8417c2498 ]---
    [ 526.648404] Kernel panic - not syncing: Fatal exception in interrupt
    [ 526.654778] SMP: stopping secondary CPUs
    [ 526.658734] Kernel Offset: disabled
    [ 526.662211] CPU features: 0x5800c38
    [ 526.665688] Memory Limit: none
    [ 526.668768] ---[ end Kernel panic - not syncing: Fatal exception in interrupt
    
    Prevent mod_timer from arming a timer that was already removed by
    del_timer during module unload.
    
    Signed-off-by: Jan Glauber <jglauber@cavium.com>
    Cc: <stable@vger.kernel.org> # 3.19
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13b8c2e55d7baab2cde0452374adcb3769873995
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sat Oct 20 18:47:53 2018 +0900

    kprobes/x86: Use preempt_enable() in optimized_callback()
    
    commit 2e62024c265aa69315ed02835623740030435380 upstream.
    
    The following commit:
    
      a19b2e3d7839 ("kprobes/x86: Remove IRQ disabling from ftrace-based/optimized kprobes”)
    
    removed local_irq_save/restore() from optimized_callback(), the handler
    might be interrupted by the rescheduling interrupt and might be
    rescheduled - so we must not use the preempt_enable_no_resched() macro.
    
    Use preempt_enable() instead, to not lose preemption events.
    
    [ mingo: Improved the changelog. ]
    
    Reported-by: Nadav Amit <namit@vmware.com>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: <stable@vger.kernel.org>
    Cc: Alexei Starovoitov <alexei.starovoitov@gmail.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dwmw@amazon.co.uk
    Fixes: a19b2e3d7839 ("kprobes/x86: Remove IRQ disabling from ftrace-based/optimized kprobes”)
    Link: http://lkml.kernel.org/r/154002887331.7627.10194920925792947001.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ef3e6e8d3e611518caf55f8045078ce1aad7b12
Author: Erik Kaneda <erik.kaneda@intel.com>
Date:   Wed Oct 17 14:20:51 2018 -0700

    ACPICA: AML Parser: fix parse loop to correctly skip erroneous extended opcodes
    
    commit c64baa3a6fa207d112706bc5e7fd645cd8a8663f upstream.
    
    AML opcodes come in two lengths: 1-byte opcodes and 2-byte, extended opcodes.
    If an error occurs due to illegal opcodes during table load, the AML parser
    needs to continue loading the table. In order to do this, it needs to skip
    parsing of the offending opcode and operands associated with that opcode.
    
    This change fixes the AML parse loop to correctly skip parsing of incorrect
    extended opcodes. Previously, only the short opcodes were skipped correctly.
    
    Signed-off-by: Erik Schmauss <erik.schmauss@intel.com>
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7876d54ad642fbbd1857d37528aa1ec8c5a2c592
Author: Erik Kaneda <erik.kaneda@intel.com>
Date:   Wed Oct 17 14:09:35 2018 -0700

    ACPICA: AML interpreter: add region addresses in global list during initialization
    
    commit 4abb951b73ff0a8a979113ef185651aa3c8da19b upstream.
    
    The table load process omitted adding the operation region address
    range to the global list. This omission is problematic because the OS
    queries the global list to check for address range conflicts before
    deciding which drivers to load. This commit may result in warning
    messages that look like the following:
    
    [    7.871761] ACPI Warning: system_IO range 0x00000428-0x0000042F conflicts with op_region 0x00000400-0x0000047F (\PMIO) (20180531/utaddress-213)
    [    7.871769] ACPI: If an ACPI driver is available for this device, you should use it instead of the native driver
    
    However, these messages do not signify regressions. It is a result of
    properly adding address ranges within the global address list.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=200011
    Tested-by: Jean-Marc Lenoir <archlinux@jihemel.com>
    Signed-off-by: Erik Schmauss <erik.schmauss@intel.com>
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 165ec328038dcd71fdf19b93f02cfeb367efd1f5
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Oct 17 13:24:56 2018 -0700

    ACPI / OSL: Use 'jiffies' as the time bassis for acpi_os_get_timer()
    
    commit 83b2348e2755db48fa8f40fdb791f366fabc0ba0 upstream.
    
    Since acpi_os_get_timer() may be called after the timer subsystem has
    been suspended, use the jiffies counter instead of ktime_get(). This
    patch avoids that the following warning is reported during hibernation:
    
    WARNING: CPU: 0 PID: 612 at kernel/time/timekeeping.c:751 ktime_get+0x116/0x120
    RIP: 0010:ktime_get+0x116/0x120
    Call Trace:
     acpi_os_get_timer+0xe/0x30
     acpi_ds_exec_begin_control_op+0x175/0x1de
     acpi_ds_exec_begin_op+0x2c7/0x39a
     acpi_ps_create_op+0x573/0x5e4
     acpi_ps_parse_loop+0x349/0x1220
     acpi_ps_parse_aml+0x25b/0x6da
     acpi_ps_execute_method+0x327/0x41b
     acpi_ns_evaluate+0x4e9/0x6f5
     acpi_ut_evaluate_object+0xd9/0x2f2
     acpi_rs_get_method_data+0x8f/0x114
     acpi_walk_resources+0x122/0x1b6
     acpi_pci_link_get_current.isra.2+0x157/0x280
     acpi_pci_link_set+0x32f/0x4a0
     irqrouter_resume+0x58/0x80
     syscore_resume+0x84/0x380
     hibernation_snapshot+0x20c/0x4f0
     hibernate+0x22d/0x3a6
     state_store+0x99/0xa0
     kobj_attr_store+0x37/0x50
     sysfs_kf_write+0x87/0xa0
     kernfs_fop_write+0x1a5/0x240
     __vfs_write+0xd2/0x410
     vfs_write+0x101/0x250
     ksys_write+0xab/0x120
     __x64_sys_write+0x43/0x50
     do_syscall_64+0x71/0x220
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Fixes: 164a08cee135 (ACPICA: Dispatcher: Introduce timeout mechanism for infinite loop detection)
    Reported-by: Fengguang Wu <fengguang.wu@intel.com>
    References: https://lists.01.org/pipermail/lkp/2018-April/008406.html
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Cc: 4.16+ <stable@vger.kernel.org> # 4.16+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c869687da7c5e276e277b0534f2b70bebcc85c1
Author: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
Date:   Sun Sep 9 01:21:06 2018 +0200

    pcmcia: Implement CLKRUN protocol disabling for Ricoh bridges
    
    commit 95691e3eddc41da2d1cd3cca51fecdfb46bd85bc upstream.
    
    Currently, "disable_clkrun" yenta_socket module parameter is only
    implemented for TI CardBus bridges.
    Add also an implementation for Ricoh bridges that have the necessary
    setting documented in publicly available datasheets.
    
    Tested on a RL5C476II with a Sunrich C-160 CardBus NIC that doesn't work
    correctly unless the CLKRUN protocol is disabled.
    
    Let's also make it clear in its description that the "disable_clkrun"
    module parameter only works on these two previously mentioned brands of
    CardBus bridges.
    
    Signed-off-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6457bbfb62d858442230ddd5457c98568bca2cf3
Author: He Zhe <zhe.he@windriver.com>
Date:   Mon Sep 17 11:24:20 2018 +0800

    dma-mapping: fix panic caused by passing empty cma command line argument
    
    commit a3ceed87b07769fb80ce9dc6b604e515dba14c4b upstream.
    
    early_cma does not check input argument before passing it to
    simple_strtoull. The argument would be a NULL pointer if "cma", without
    its value, is set in command line and thus causes the following panic.
    
    PANIC: early exception 0xe3 IP 10:ffffffffa3e9db8d error 0 cr2 0x0
    [    0.000000] CPU: 0 PID: 0 Comm: swapper Not tainted 4.19.0-rc3-yocto-standard+ #7
    [    0.000000] RIP: 0010:_parse_integer_fixup_radix+0xd/0x70
    ...
    [    0.000000] Call Trace:
    [    0.000000]  simple_strtoull+0x29/0x70
    [    0.000000]  memparse+0x26/0x90
    [    0.000000]  early_cma+0x17/0x6a
    [    0.000000]  do_early_param+0x57/0x8e
    [    0.000000]  parse_args+0x208/0x320
    [    0.000000]  ? rdinit_setup+0x30/0x30
    [    0.000000]  parse_early_options+0x29/0x2d
    [    0.000000]  ? rdinit_setup+0x30/0x30
    [    0.000000]  parse_early_param+0x36/0x4d
    [    0.000000]  setup_arch+0x336/0x99e
    [    0.000000]  start_kernel+0x6f/0x4e6
    [    0.000000]  x86_64_start_reservations+0x24/0x26
    [    0.000000]  x86_64_start_kernel+0x6f/0x72
    [    0.000000]  secondary_startup_64+0xa4/0xb0
    
    This patch adds a check to prevent the panic.
    
    Signed-off-by: He Zhe <zhe.he@windriver.com>
    Reviewed-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6995a939af68986955b3b8d9b84aa86f1778f3e2
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Oct 15 23:21:05 2018 +0200

    cpufreq: conservative: Take limits changes into account properly
    
    commit da5e79bc70b84971d2b3a55fb252e34e51d81d48 upstream.
    
    If the policy limits change between invocations of cs_dbs_update(),
    the requested frequency value stored in dbs_info may not be updated
    and the function may use a stale value of it next time.  Moreover, if
    idle periods are takem into account by cs_dbs_update(), the requested
    frequency value stored in dbs_info may be below the min policy limit,
    which is incorrect.
    
    To fix these problems, always update the requested frequency value
    in dbs_info along with the local copy of it when the previous
    requested frequency is beyond the policy limits and avoid decreasing
    the requested frequency below the min policy limit when taking
    idle periods into account.
    
    Fixes: abb6627910a1 (cpufreq: conservative: Fix next frequency selection)
    Fixes: 00bfe05889e9 (cpufreq: conservative: Decrease frequency faster for deferred updates)
    Reported-by: Waldemar Rymarkiewicz <waldemarx.rymarkiewicz@intel.com>
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Waldemar Rymarkiewicz <waldemarx.rymarkiewicz@intel.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f793bede6a923a81db55191fc6c958951bf369bf
Author: Ming Lei <ming.lei@redhat.com>
Date:   Mon Oct 29 20:57:19 2018 +0800

    block: make sure writesame bio is aligned with logical block size
    
    commit 34ffec60b27aa81d04e274e71e4c6ef740f75fc7 upstream.
    
    Obviously the created writesame bio has to be aligned with logical block
    size, and use bio_allowed_max_sectors() to retrieve this number.
    
    Cc: stable@vger.kernel.org
    Cc: Mike Snitzer <snitzer@redhat.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Xiao Ni <xni@redhat.com>
    Cc: Mariusz Dabrowski <mariusz.dabrowski@intel.com>
    Fixes: b49a0871be31a745b2ef ("block: remove split code in blkdev_issue_{discard,write_same}")
    Tested-by: Rui Salvaterra <rsalvaterra@gmail.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e660a354aaa1d2a58f788a48212886c1eed8e52
Author: Ming Lei <ming.lei@redhat.com>
Date:   Mon Oct 29 20:57:17 2018 +0800

    block: make sure discard bio is aligned with logical block size
    
    commit 1adfc5e4136f5967d591c399aff95b3b035f16b7 upstream.
    
    Obviously the created discard bio has to be aligned with logical block size.
    
    This patch introduces the helper of bio_allowed_max_sectors() for
    this purpose.
    
    Cc: stable@vger.kernel.org
    Cc: Mike Snitzer <snitzer@redhat.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Xiao Ni <xni@redhat.com>
    Cc: Mariusz Dabrowski <mariusz.dabrowski@intel.com>
    Fixes: 744889b7cbb56a6 ("block: don't deal with discard limit in blkdev_issue_discard()")
    Fixes: a22c4d7e34402cc ("block: re-add discard_granularity and alignment checks")
    Reported-by: Rui Salvaterra <rsalvaterra@gmail.com>
    Tested-by: Rui Salvaterra <rsalvaterra@gmail.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d7cc07a4a0958c0e4045bdf33265d93d0250f60
Author: Ming Lei <ming.lei@redhat.com>
Date:   Fri Oct 12 15:53:10 2018 +0800

    block: don't deal with discard limit in blkdev_issue_discard()
    
    commit 744889b7cbb56a64f957e65ade7cb65fe3f35714 upstream.
    
    blk_queue_split() does respect this limit via bio splitting, so no
    need to do that in blkdev_issue_discard(), then we can align to
    normal bio submit(bio_add_page() & submit_bio()).
    
    More importantly, this patch fixes one issue introduced in a22c4d7e34402cc
    ("block: re-add discard_granularity and alignment checks"), in which
    zero discard bio may be generated in case of zero alignment.
    
    Fixes: a22c4d7e34402ccdf3 ("block: re-add discard_granularity and alignment checks")
    Cc: stable@vger.kernel.org
    Cc: Ming Lin <ming.l@ssi.samsung.com>
    Cc: Mike Snitzer <snitzer@redhat.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Xiao Ni <xni@redhat.com>
    Tested-by: Mariusz Dabrowski <mariusz.dabrowski@intel.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9acb7e6aa615850af7b320a0378989ee64eb017a
Author: Jens Axboe <axboe@kernel.dk>
Date:   Sun Oct 21 12:02:36 2018 -0600

    block: setup bounce bio_sets properly
    
    commit 52990a5fb0c991ecafebdab43138b5ed41376852 upstream.
    
    We're only setting up the bounce bio sets if we happen
    to need bouncing for regular HIGHMEM, not if we only need
    it for ISA devices.
    
    Protect the ISA bounce setup with a mutex, since it's
    being invoked from driver init functions and can thus be
    called in parallel.
    
    Cc: stable@vger.kernel.org
    Reported-by: Ondrej Zary <linux@rainbow-software.org>
    Tested-by: Ondrej Zary <linux@rainbow-software.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22315bd1693b3c29abc065dcf6c1a10310fa9f7b
Author: Hou Tao <houtao1@huawei.com>
Date:   Sat Oct 6 17:09:35 2018 +0800

    jffs2: free jffs2_sb_info through jffs2_kill_sb()
    
    commit 92e2921f7eee63450a5f953f4b15dc6210219430 upstream.
    
    When an invalid mount option is passed to jffs2, jffs2_parse_options()
    will fail and jffs2_sb_info will be freed, but then jffs2_sb_info will
    be used (use-after-free) and freeed (double-free) in jffs2_kill_sb().
    
    Fix it by removing the buggy invocation of kfree() when getting invalid
    mount options.
    
    Fixes: 92abc475d8de ("jffs2: implement mount option parsing and compression overriding")
    Cc: stable@kernel.org
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Reviewed-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e0b30d873232b59da3c562b8704ca5e647a8396
Author: Dmitry Bazhenov <bazhenov.dn@gmail.com>
Date:   Mon Oct 15 14:21:22 2018 +0500

    hwmon: (pmbus) Fix page count auto-detection.
    
    commit e7c6a55606b5c46b449d76588968b4d8caae903f upstream.
    
    Devices with compatible="pmbus" field have zero initial page count,
    and pmbus_clear_faults() being called before the page count auto-
    detection does not actually clear faults because it depends on the
    page count. Non-cleared faults in its turn may fail the subsequent
    page count auto-detection.
    
    This patch fixes this problem by calling pmbus_clear_fault_page()
    for currently set page and calling pmbus_clear_faults() after the
    page count was detected.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Bazhenov <bazhenov.dn@gmail.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79e8dc743d124eebf53304287a158030f255cb97
Author: Tang Junhui <tang.junhui.linux@gmail.com>
Date:   Mon Oct 8 20:41:14 2018 +0800

    bcache: fix miss key refill->end in writeback
    
    commit 2d6cb6edd2c7fb4f40998895bda45006281b1ac5 upstream.
    
    refill->end record the last key of writeback, for example, at the first
    time, keys (1,128K) to (1,1024K) are flush to the backend device, but
    the end key (1,1024K) is not included, since the bellow code:
            if (bkey_cmp(k, refill->end) >= 0) {
                    ret = MAP_DONE;
                    goto out;
            }
    And in the next time when we refill writeback keybuf again, we searched
    key start from (1,1024K), and got a key bigger than it, so the key
    (1,1024K) missed.
    This patch modify the above code, and let the end key to be included to
    the writeback key buffer.
    
    Signed-off-by: Tang Junhui <tang.junhui.linux@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Coly Li <colyli@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c483d0e293af6bdef609dcd3b0690858c4c568a5
Author: Tang Junhui <tang.junhui.linux@gmail.com>
Date:   Mon Oct 8 20:41:12 2018 +0800

    bcache: correct dirty data statistics
    
    commit 2e17a262a2371d38d2ec03614a2675a32cef9912 upstream.
    
    When bcache device is clean, dirty keys may still exist after
    journal replay, so we need to count these dirty keys even
    device in clean status, otherwise after writeback, the amount
    of dirty data would be incorrect.
    
    Signed-off-by: Tang Junhui <tang.junhui.linux@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Coly Li <colyli@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d0bac807a447d205ff01b551aae067d69d7d19d
Author: Tang Junhui <tang.junhui.linux@gmail.com>
Date:   Mon Oct 8 20:41:08 2018 +0800

    bcache: trace missed reading by cache_missed
    
    commit 502b291568fc7faf1ebdb2c2590f12851db0ff76 upstream.
    
    Missed reading IOs are identified by s->cache_missed, not the
    s->cache_miss, so in trace_bcache_read() using trace_bcache_read
    to identify whether the IO is missed or not.
    
    Signed-off-by: Tang Junhui <tang.junhui.linux@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Coly Li <colyli@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4588df8e529c2aef65d0fd312ab4c42f40a579e1
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Oct 11 09:40:22 2018 +0200

    spi: bcm-qspi: fix calculation of address length
    
    commit 0976eda7915507fe94e07870c19d717c9994b57a upstream.
    
    During implementation of the new API bcm_qspi_bspi_set_flex_mode() has
    been modified breaking calculation of address length. An unnecessary
    multiplication was added breaking flash reads.
    
    Fixes: 5f195ee7d830 ("spi: bcm-qspi: Implement the spi_mem interface")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Reviewed-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af70ba70b95e4f0f35ad1aa568fb96f43f2dd3f6
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Oct 11 09:42:17 2018 +0200

    spi: bcm-qspi: switch back to reading flash using smaller chunks
    
    commit 940ec770c295682993d1cccce3081fd7c74fece8 upstream.
    
    Fixing/optimizing bcm_qspi_bspi_read() performance introduced two
    changes:
    1) It added a loop to read all requested data using multiple BSPI ops.
    2) It bumped max size of a single BSPI block request from 256 to 512 B.
    
    The later change resulted in occasional BSPI timeouts causing a
    regression.
    
    For some unknown reason hardware doesn't always handle reads as expected
    when using 512 B chunks. In such cases it may happen that BSPI returns
    amount of requested bytes without the last 1-3 ones. It provides the
    remaining bytes later but doesn't raise an interrupt until another LR
    start.
    
    Switching back to 256 B reads fixes that problem and regression.
    
    Fixes: 345309fa7c0c ("spi: bcm-qspi: Fix bcm_qspi_bspi_read() performance")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b86e6f061276b04432e1b20113f4f59e524236d
Author: Chuanhua Han <chuanhua.han@nxp.com>
Date:   Thu Aug 30 16:43:24 2018 +0800

    spi: spi-mem: Adjust op len based on message/transfer size limitations
    
    commit e757996cafbeb6b71234a17130674bcd8f44c59e upstream.
    
    We need that to adjust the len of the 2nd transfer (called data in
    spi-mem) if it's too long to fit in a SPI message or SPI transfer.
    
    Fixes: c36ff266dc82 ("spi: Extend the core to ease integration of SPI memory controllers")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Chuanhua Han <chuanhua.han@nxp.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 056a4dd50034a7f1012fd62d027295e4c5338c96
Author: Ahmad Fatoum <a.fatoum@pengutronix.de>
Date:   Fri Sep 21 11:32:53 2018 +0200

    mtd: spi-nor: fsl-quadspi: Don't let -EINVAL on the bus
    
    commit 000412276370a9bcfec73b3752ceefd9a927f1db upstream.
    
    fsl_qspi_get_seqid() may return -EINVAL, but fsl_qspi_init_ahb_read()
    doesn't check for error codes with the result that -EINVAL could find
    itself signalled over the bus.
    
    In conjunction with the LS1046A SoC's A-009283 errata
    ("Illegal accesses to SPI flash memory can result in a system hang")
    this illegal access to SPI flash memory results in a system hang
    if userspace attempts reading later on.
    
    Avoid this by always checking fsl_qspi_get_seqid()'s return value
    and bail out otherwise.
    
    Fixes: e46ecda764dc ("mtd: spi-nor: Add Freescale QuadSPI driver")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0368e0a3ab70b340ef8870bd764116155247a3c7
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Thu Aug 30 11:42:57 2018 +0300

    mtd: spi-nor: intel-spi: Add support for Intel Ice Lake SPI serial flash
    
    commit 42460c31ae96cbad5ae226ee6c10bd8d70d764ae upstream.
    
    Intel Ice Lake exposes the SPI serial flash controller as a PCI device
    in the same way than Intel Denverton. Add Ice Lake SPI serial flash PCI
    ID to the driver list of supported devices.
    
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Acked-by: Marek Vasut <marek.vasut@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82a401cad1be71ea67e4ff384694341fa95ea000
Author: Liu Xiang <liu.xiang6@zte.com.cn>
Date:   Tue Aug 28 22:32:57 2018 +0800

    mtd: spi-nor: fsl-quadspi: fix read error for flash size larger than 16MB
    
    commit 41fe242979e463d6ad251077ded01b825a330b7e upstream.
    
    If the size of spi-nor flash is larger than 16MB, the read_opcode
    is set to SPINOR_OP_READ_1_1_4_4B, and fsl_qspi_get_seqid() will
    return -EINVAL when cmd is SPINOR_OP_READ_1_1_4_4B. This can
    cause read operation fail.
    
    Fixes: e46ecda764dc ("mtd: spi-nor: Add Freescale QuadSPI driver")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Liu Xiang <liu.xiang6@zte.com.cn>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57459faa2fbe1fe0a0886c179a9bf87c4f12a132
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Oct 3 11:05:04 2018 +0200

    mtd: rawnand: marvell: fix the IRQ handler complete() condition
    
    commit 53c83b59759c1ee213f5ffa194909daee8902a28 upstream.
    
    With the current implementation, the complete() in the IRQ handler is
    supposed to be called only if the register status has one or the other
    RDY bit set. Other events might trigger an interrupt as well if
    enabled, but should not end-up with a complete() call.
    
    For this purpose, the code was checking if the other bits were set, in
    this case complete() was not called. This is wrong as two events might
    happen in a very tight time-frame and if the NDSR status read reports
    two bits set (eg. RDY(0) and RDDREQ) at the same time, complete() was
    not called.
    
    This logic would lead to timeouts in marvell_nfc_wait_op() and has
    been observed on PXA boards (NFCv1) in the Hamming write path.
    
    Fixes: 02f26ecf8c77 ("mtd: nand: add reworked Marvell NAND controller driver")
    Cc: stable@vger.kernel.org
    Reported-by: Daniel Mack <daniel@zonque.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Tested-by: Daniel Mack <daniel@zonque.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
