commit 985c6fe6e0357c79642bc506f15932983571ce93
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jun 29 09:12:34 2017 +0200

    Linux 3.18.59

commit 6bc55148f5162ec51cbe6908720e509ba37b1e2e
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Sat Jun 10 04:59:12 2017 +0200

    mac80211/wpa: use constant time memory comparison for MACs
    
    commit 98c67d187db7808b1f3c95f2110dd4392d034182 upstream.
    
    Otherwise, we enable all sorts of forgeries via timing attack.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: Johannes Berg <johannes@sipsolutions.net>
    Cc: linux-wireless@vger.kernel.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 131e696cffb3353d3f5e4b51046d4fb6a4580432
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Tue May 30 16:21:51 2017 +0100

    net: phy: fix marvell phy status reading
    
    commit 898805e0cdf7fd860ec21bf661d3a0285a3defbd upstream.
    
    The Marvell driver incorrectly provides phydev->lp_advertising as the
    logical and of the link partner's advert and our advert.  This is
    incorrect - this field is supposed to store the link parter's unmodified
    advertisment.
    
    This allows ethtool to report the correct link partner auto-negotiation
    status.
    
    Fixes: be937f1f89ca ("Marvell PHY m88e1111 driver fix")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1957b18db54491ca504ecc9a3d36634910f3f63
Author: William Wu <william.wu@rock-chips.com>
Date:   Tue Apr 25 17:45:48 2017 +0800

    usb: gadget: f_fs: avoid out of bounds access on comp_desc
    
    commit b7f73850bb4fac1e2209a4dd5e636d39be92f42c upstream.
    
    Companion descriptor is only used for SuperSpeed endpoints,
    if the endpoints are HighSpeed or FullSpeed, the Companion
    descriptor will not allocated, so we can only access it if
    gadget is SuperSpeed.
    
    I can reproduce this issue on Rockchip platform rk3368 SoC
    which supports USB 2.0, and use functionfs for ADB. Kernel
    build with CONFIG_KASAN=y and CONFIG_SLUB_DEBUG=y report
    the following BUG:
    
    ==================================================================
    BUG: KASAN: slab-out-of-bounds in ffs_func_set_alt+0x224/0x3a0 at addr ffffffc0601f6509
    Read of size 1 by task swapper/0/0
    ============================================================================
    BUG kmalloc-256 (Not tainted): kasan: bad access detected
    ----------------------------------------------------------------------------
    
    Disabling lock debugging due to kernel taint
    INFO: Allocated in ffs_func_bind+0x52c/0x99c age=1275 cpu=0 pid=1
    alloc_debug_processing+0x128/0x17c
    ___slab_alloc.constprop.58+0x50c/0x610
    __slab_alloc.isra.55.constprop.57+0x24/0x34
    __kmalloc+0xe0/0x250
    ffs_func_bind+0x52c/0x99c
    usb_add_function+0xd8/0x1d4
    configfs_composite_bind+0x48c/0x570
    udc_bind_to_driver+0x6c/0x170
    usb_udc_attach_driver+0xa4/0xd0
    gadget_dev_desc_UDC_store+0xcc/0x118
    configfs_write_file+0x1a0/0x1f8
    __vfs_write+0x64/0x174
    vfs_write+0xe4/0x200
    SyS_write+0x68/0xc8
    el0_svc_naked+0x24/0x28
    INFO: Freed in inode_doinit_with_dentry+0x3f0/0x7c4 age=1275 cpu=7 pid=247
    ...
    Call trace:
    [<ffffff900808aab4>] dump_backtrace+0x0/0x230
    [<ffffff900808acf8>] show_stack+0x14/0x1c
    [<ffffff90084ad420>] dump_stack+0xa0/0xc8
    [<ffffff90082157cc>] print_trailer+0x188/0x198
    [<ffffff9008215948>] object_err+0x3c/0x4c
    [<ffffff900821b5ac>] kasan_report+0x324/0x4dc
    [<ffffff900821aa38>] __asan_load1+0x24/0x50
    [<ffffff90089eb750>] ffs_func_set_alt+0x224/0x3a0
    [<ffffff90089d3760>] composite_setup+0xdcc/0x1ac8
    [<ffffff90089d7394>] android_setup+0x124/0x1a0
    [<ffffff90089acd18>] _setup+0x54/0x74
    [<ffffff90089b6b98>] handle_ep0+0x3288/0x4390
    [<ffffff90089b9b44>] dwc_otg_pcd_handle_out_ep_intr+0x14dc/0x2ae4
    [<ffffff90089be85c>] dwc_otg_pcd_handle_intr+0x1ec/0x298
    [<ffffff90089ad680>] dwc_otg_pcd_irq+0x10/0x20
    [<ffffff9008116328>] handle_irq_event_percpu+0x124/0x3ac
    [<ffffff9008116610>] handle_irq_event+0x60/0xa0
    [<ffffff900811af30>] handle_fasteoi_irq+0x10c/0x1d4
    [<ffffff9008115568>] generic_handle_irq+0x30/0x40
    [<ffffff90081159b4>] __handle_domain_irq+0xac/0xdc
    [<ffffff9008080e9c>] gic_handle_irq+0x64/0xa4
    ...
    Memory state around the buggy address:
      ffffffc0601f6400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      ffffffc0601f6480: 00 00 00 00 00 00 00 00 00 00 06 fc fc fc fc fc
     >ffffffc0601f6500: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
                           ^
      ffffffc0601f6580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
      ffffffc0601f6600: fc fc fc fc fc fc fc fc 00 00 00 00 00 00 00 00
    ==================================================================
    
    Signed-off-by: William Wu <william.wu@rock-chips.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Cc: Jerry Zhang <zhangjerry@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 668e0da871caa9be0339a9fe44205f51d6fdc382
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Jun 22 16:52:51 2017 +1000

    powerpc/slb: Force a full SLB flush when we insert for a bad EA
    
    [Note this patch is not upstream. The bug fix was fixed differently in
    upstream prior to the bug being identified.]
    
    The SLB miss handler calls slb_allocate_realmode() in order to create an
    SLB entry for the faulting address. At the very start of that function
    we check that the faulting Effective Address (EA) is less than
    PGTABLE_RANGE (ignoring the region), ie. is it an address which could
    possibly fit in the virtual address space.
    
    For an EA which fails that test, we branch out of line (to label 8), but
    we still go on to create an SLB entry for the address. The SLB entry we
    create has a VSID of 0, which means it will never match anything in the
    hash table and so can't actually translate to a physical address.
    
    However that SLB entry will be inserted in the SLB, and so needs to be
    managed properly like any other SLB entry. In particular we need to
    insert the SLB entry in the SLB cache, so that it will be flushed when
    the process is descheduled.
    
    And that is where the bugs begin. The first bug is that slb_finish_load()
    uses cr7 to decide if it should insert the SLB entry into the SLB cache.
    When we come from the invalid EA case we don't set cr7, it just has some
    junk value from userspace. So we may or may not insert the SLB entry in
    the SLB cache. If we fail to insert it, we may then incorrectly leave it
    in the SLB when the process is descheduled.
    
    The second bug is that even if we do happen to add the entry to the SLB
    cache, we do not have enough bits in the SLB cache to remember the full
    ESID value for very large EAs.
    
    For example if a process branches to 0x788c545a18000000, that results in
    a 256MB SLB entry with an ESID of 0x788c545a1. But each entry in the SLB
    cache is only 32-bits, meaning we truncate the ESID to 0x88c545a1. This
    has the same effect as the first bug, we incorrectly leave the SLB entry
    in the SLB when the process is descheduled.
    
    When a process accesses an invalid EA it results in a SEGV signal being
    sent to the process, which typically results in the process being
    killed. Process death isn't instantaneous however, the process may catch
    the SEGV signal and continue somehow, or the kernel may start writing a
    core dump for the process, either of which means it's possible for the
    process to be preempted while its processing the SEGV but before it's
    been killed.
    
    If that happens, when the process is scheduled back onto the CPU we will
    allocate a new SLB entry for the NIP, which will insert a second entry
    into the SLB for the bad EA. Because we never flushed the original
    entry, due to either bug one or two, we now have two SLB entries that
    match the same EA.
    
    If another access is made to that EA, either by the process continuing
    after catching the SEGV, or by a second process accessing the same bad
    EA on the same CPU, we will trigger an SLB multi-hit machine check
    exception. This has been observed happening in the wild.
    
    The fix is when we hit the invalid EA case, we mark the SLB cache as
    being full. This causes us to not insert the truncated ESID into the SLB
    cache, and means when the process is switched out we will flush the
    entire SLB. Note that this works both for the original fault and for a
    subsequent call to slb_allocate_realmode() from switch_slb().
    
    Because we mark the SLB cache as full, it doesn't really matter what
    value is in cr7, but rather than leaving it as something random we set
    it to indicate the address was a kernel address. That also skips the
    attempt to insert it in the SLB cache which is a nice side effect.
    
    Another way to fix the bug would be to make the entries in the SLB cache
    wider, so that we don't truncate the ESID. However this would be a more
    intrusive change as it alters the size and layout of the paca.
    
    This bug was fixed in upstream by commit f0f558b131db ("powerpc/mm:
    Preserve CFAR value on SLB miss caused by access to bogus address"),
    which changed the way we handle a bad EA entirely removing this bug in
    the process.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2eb4011c199b0648276dfc72898676aa2c7e5710
Author: Joël Esponde <joel.esponde@honeywell.com>
Date:   Wed Nov 23 12:47:40 2016 +0100

    mtd: spi-nor: fix spansion quad enable
    
    commit 807c16253319ee6ccf8873ae64f070f7eb532cd5 upstream.
    
    With the S25FL127S nor flash part, each writing to the configuration
    register takes hundreds of ms. During that  time, no more accesses to
    the flash should be done (even reads).
    
    This commit adds a wait loop after the register writing until the flash
    finishes its work.
    
    This issue could make rootfs mounting fail when the latter was done too
    much closely to this quad enable bit setting step. And in this case, a
    driver as UBIFS may try to recover the filesystem and may broke it
    completely.
    
    Signed-off-by: Joël Esponde <joel.esponde@honeywell.com>
    Signed-off-by: Cyrille Pitchen <cyrille.pitchen@atmel.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db89d5c72d4181407c8a0e7720aa7c353bcab8c4
Author: Tobias Wolf <dev-NTEO@vplace.de>
Date:   Wed Nov 23 10:40:07 2016 +0100

    of: Add check to of_scan_flat_dt() before accessing initial_boot_params
    
    commit 3ec754410cb3e931a6c4920b1a150f21a94a2bf4 upstream.
    
    An empty __dtb_start to __dtb_end section might result in
    initial_boot_params being null for arch/mips/ralink. This showed that the
    boot process hangs indefinitely in of_scan_flat_dt().
    
    Signed-off-by: Tobias Wolf <dev-NTEO@vplace.de>
    Cc: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14605/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c3a8a0f69e07fbbe31024ebe72b1c8d7607033e
Author: David Howells <dhowells@redhat.com>
Date:   Thu Jun 15 00:12:24 2017 +0100

    rxrpc: Fix several cases where a padded len isn't checked in ticket decode
    
    commit 5f2f97656ada8d811d3c1bef503ced266fcd53a0 upstream.
    
    This fixes CVE-2017-7482.
    
    When a kerberos 5 ticket is being decoded so that it can be loaded into an
    rxrpc-type key, there are several places in which the length of a
    variable-length field is checked to make sure that it's not going to
    overrun the available data - but the data is padded to the nearest
    four-byte boundary and the code doesn't check for this extra.  This could
    lead to the size-remaining variable wrapping and the data pointer going
    over the end of the buffer.
    
    Fix this by making the various variable-length data checks use the padded
    length.
    
    Reported-by: 石磊 <shilei-c@360.cn>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Marc Dionne <marc.c.dionne@auristor.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b7db7b0fe919e43ff02717eaed1c06a34107d84
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Jun 2 20:00:17 2017 -0700

    target: Fix kref->refcount underflow in transport_cmd_finish_abort
    
    commit 73d4e580ccc5c3e05cea002f18111f66c9c07034 upstream.
    
    This patch fixes a se_cmd->cmd_kref underflow during CMD_T_ABORTED
    when a fabric driver drops it's second reference from below the
    target_core_tmr.c based callers of transport_cmd_finish_abort().
    
    Recently with the conversion of kref to refcount_t, this bug was
    manifesting itself as:
    
    [705519.601034] refcount_t: underflow; use-after-free.
    [705519.604034] INFO: NMI handler (kgdb_nmi_handler) took too long to run: 20116.512 msecs
    [705539.719111] ------------[ cut here ]------------
    [705539.719117] WARNING: CPU: 3 PID: 26510 at lib/refcount.c:184 refcount_sub_and_test+0x33/0x51
    
    Since the original kref atomic_t based kref_put() didn't check for
    underflow and only invoked the final callback when zero was reached,
    this bug did not manifest in practice since all se_cmd memory is
    using preallocated tags.
    
    To address this, go ahead and propigate the existing return from
    transport_put_cmd() up via transport_cmd_finish_abort(), and
    change transport_cmd_finish_abort() + core_tmr_handle_tas_abort()
    callers to only do their local target_put_sess_cmd() if necessary.
    
    Reported-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Tested-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.de>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Himanshu Madhani <himanshu.madhani@qlogic.com>
    Cc: Sagi Grimberg <sagig@mellanox.com>
    Tested-by: Gary Guo <ghg@datera.io>
    Tested-by: Chu Yuan Lin <cyl@datera.io>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90e149d03c4bfa2899d773c735e252611283ddc3
Author: Daniel Drake <drake@endlessm.com>
Date:   Mon Jun 19 19:48:52 2017 -0700

    Input: i8042 - add Fujitsu Lifebook AH544 to notimeout list
    
    commit 817ae460c784f32cd45e60b2b1b21378c3c6a847 upstream.
    
    Without this quirk, the touchpad is not responsive on this product, with
    the following message repeated in the logs:
    
     psmouse serio1: bad data from KBC - timeout
    
    Add it to the notimeout list alongside other similar Fujitsu laptops.
    
    Signed-off-by: Daniel Drake <drake@endlessm.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96ed79b5e00ec55a0a04269da45b493a1c3a12de
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Jun 1 16:18:15 2017 +0530

    powerpc/kprobes: Pause function_graph tracing during jprobes handling
    
    commit a9f8553e935f26cb5447f67e280946b0923cd2dc upstream.
    
    This fixes a crash when function_graph and jprobes are used together.
    This is essentially commit 237d28db036e ("ftrace/jprobes/x86: Fix
    conflict between jprobes and function graph tracing"), but for powerpc.
    
    Jprobes breaks function_graph tracing since the jprobe hook needs to use
    jprobe_return(), which never returns back to the hook, but instead to
    the original jprobe'd function. The solution is to momentarily pause
    function_graph tracing before invoking the jprobe hook and re-enable it
    when returning back to the original jprobe'd function.
    
    Fixes: 6794c78243bf ("powerpc64: port of the function graph tracer")
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ddaca0ac8afda72f061b926e1df3151b50e24b6
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Tue Jun 13 04:31:16 2017 -0500

    signal: Only reschedule timers on signals timers have sent
    
    commit 57db7e4a2d92c2d3dfbca4ef8057849b2682436b upstream.
    
    Thomas Gleixner  wrote:
    > The CRIU support added a 'feature' which allows a user space task to send
    > arbitrary (kernel) signals to itself. The changelog says:
    >
    >   The kernel prevents sending of siginfo with positive si_code, because
    >   these codes are reserved for kernel.  I think we can allow a task to
    >   send such a siginfo to itself.  This operation should not be dangerous.
    >
    > Quite contrary to that claim, it turns out that it is outright dangerous
    > for signals with info->si_code == SI_TIMER. The following code sequence in
    > a user space task allows to crash the kernel:
    >
    >    id = timer_create(CLOCK_XXX, ..... signo = SIGX);
    >    timer_set(id, ....);
    >    info->si_signo = SIGX;
    >    info->si_code = SI_TIMER:
    >    info->_sifields._timer._tid = id;
    >    info->_sifields._timer._sys_private = 2;
    >    rt_[tg]sigqueueinfo(..., SIGX, info);
    >    sigemptyset(&sigset);
    >    sigaddset(&sigset, SIGX);
    >    rt_sigtimedwait(sigset, info);
    >
    > For timers based on CLOCK_PROCESS_CPUTIME_ID, CLOCK_THREAD_CPUTIME_ID this
    > results in a kernel crash because sigwait() dequeues the signal and the
    > dequeue code observes:
    >
    >   info->si_code == SI_TIMER && info->_sifields._timer._sys_private != 0
    >
    > which triggers the following callchain:
    >
    >  do_schedule_next_timer() -> posix_cpu_timer_schedule() -> arm_timer()
    >
    > arm_timer() executes a list_add() on the timer, which is already armed via
    > the timer_set() syscall. That's a double list add which corrupts the posix
    > cpu timer list. As a consequence the kernel crashes on the next operation
    > touching the posix cpu timer list.
    >
    > Posix clocks which are internally implemented based on hrtimers are not
    > affected by this because hrtimer_start() can handle already armed timers
    > nicely, but it's a reliable way to trigger the WARN_ON() in
    > hrtimer_forward(), which complains about calling that function on an
    > already armed timer.
    
    This problem has existed since the posix timer code was merged into
    2.5.63. A few releases earlier in 2.5.60 ptrace gained the ability to
    inject not just a signal (which linux has supported since 1.0) but the
    full siginfo of a signal.
    
    The core problem is that the code will reschedule in response to
    signals getting dequeued not just for signals the timers sent but
    for other signals that happen to a si_code of SI_TIMER.
    
    Avoid this confusion by testing to see if the queued signal was
    preallocated as all timer signals are preallocated, and so far
    only the timer code preallocates signals.
    
    Move the check for if a timer needs to be rescheduled up into
    collect_signal where the preallocation check must be performed,
    and pass the result back to dequeue_signal where the code reschedules
    timers.   This makes it clear why the code cares about preallocated
    timers.
    
    Reported-by: Thomas Gleixner <tglx@linutronix.de>
    History Tree: https://git.kernel.org/pub/scm/linux/kernel/git/tglx/history.git
    Reference: 66dd34ad31e5 ("signal: allow to send any siginfo to itself")
    Reference: 1669ce53e2ff ("Add PTRACE_GETSIGINFO and PTRACE_SETSIGINFO")
    Fixes: db8b50ba75f2 ("[PATCH] POSIX clocks & timers")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5290a58f53cca49ac094b97f5b358bdc976ccad4
Author: Pavel Shilovsky <pshilov@microsoft.com>
Date:   Tue Jun 6 16:58:58 2017 -0700

    CIFS: Improve readdir verbosity
    
    commit dcd87838c06f05ab7650b249ebf0d5b57ae63e1e upstream.
    
    Downgrade the loglevel for SMB2 to prevent filling the log
    with messages if e.g. readdir was interrupted. Also make SMB2
    and SMB1 codepaths do the same logging during readdir.
    
    Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b423daba1809b2652e9728015f80d7db6369cd0
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Thu Jun 15 16:10:27 2017 +1000

    KVM: PPC: Book3S HV: Preserve userspace HTM state properly
    
    commit 46a704f8409f79fd66567ad3f8a7304830a84293 upstream.
    
    If userspace attempts to call the KVM_RUN ioctl when it has hardware
    transactional memory (HTM) enabled, the values that it has put in the
    HTM-related SPRs TFHAR, TFIAR and TEXASR will get overwritten by
    guest values.  To fix this, we detect this condition and save those
    SPR values in the thread struct, and disable HTM for the task.  If
    userspace goes to access those SPRs or the HTM facility in future,
    a TM-unavailable interrupt will occur and the handler will reload
    those SPRs and re-enable HTM.
    
    If userspace has started a transaction and suspended it, we would
    currently lose the transactional state in the guest entry path and
    would almost certainly get a "TM Bad Thing" interrupt, which would
    cause the host to crash.  To avoid this, we detect this case and
    return from the KVM_RUN ioctl with an EINVAL error, with the KVM
    exit reason set to KVM_EXIT_FAIL_ENTRY.
    
    Fixes: b005255e12a3 ("KVM: PPC: Book3S HV: Context-switch new POWER8 SPRs", 2014-01-08)
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d6142de06dc677b9315ec24da5135929ac7ae31
Author: Ilya Matveychikov <matvejchikov@gmail.com>
Date:   Fri Jun 23 15:08:49 2017 -0700

    lib/cmdline.c: fix get_options() overflow while parsing ranges
    
    commit a91e0f680bcd9e10c253ae8b62462a38bd48f09f upstream.
    
    When using get_options() it's possible to specify a range of numbers,
    like 1-100500.  The problem is that it doesn't track array size while
    calling internally to get_range() which iterates over the range and
    fills the memory with numbers.
    
    Link: http://lkml.kernel.org/r/2613C75C-B04D-4BFF-82A6-12F97BA0F620@gmail.com
    Signed-off-by: Ilya V. Matveychikov <matvejchikov@gmail.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75735be71f994da3d90657f06ce72a814bb7fc86
Author: NeilBrown <neilb@suse.com>
Date:   Fri Jun 23 15:08:43 2017 -0700

    autofs: sanity check status reported with AUTOFS_DEV_IOCTL_FAIL
    
    commit 9fa4eb8e490a28de40964b1b0e583d8db4c7e57c upstream.
    
    If a positive status is passed with the AUTOFS_DEV_IOCTL_FAIL ioctl,
    autofs4_d_automount() will return
    
       ERR_PTR(status)
    
    with that status to follow_automount(), which will then dereference an
    invalid pointer.
    
    So treat a positive status the same as zero, and map to ENOENT.
    
    See comment in systemd src/core/automount.c::automount_send_ready().
    
    Link: http://lkml.kernel.org/r/871sqwczx5.fsf@notabene.neil.brown.name
    Signed-off-by: NeilBrown <neilb@suse.com>
    Cc: Ian Kent <raven@themaw.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dff2164d171e9c27f2f7fa778d408ecf4d1e1ea
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Jun 23 15:08:57 2017 -0700

    fs/exec.c: account for argv/envp pointers
    
    commit 98da7d08850fb8bdeb395d6368ed15753304aa0c upstream.
    
    When limiting the argv/envp strings during exec to 1/4 of the stack limit,
    the storage of the pointers to the strings was not included.  This means
    that an exec with huge numbers of tiny strings could eat 1/4 of the stack
    limit in strings and then additional space would be later used by the
    pointers to the strings.
    
    For example, on 32-bit with a 8MB stack rlimit, an exec with 1677721
    single-byte strings would consume less than 2MB of stack, the max (8MB /
    4) amount allowed, but the pointers to the strings would consume the
    remaining additional stack space (1677721 * 4 == 6710884).
    
    The result (1677721 + 6710884 == 8388605) would exhaust stack space
    entirely.  Controlling this stack exhaustion could result in
    pathological behavior in setuid binaries (CVE-2017-1000365).
    
    [akpm@linux-foundation.org: additional commenting from Kees]
    Fixes: b6a2fea39318 ("mm: variable length argument support")
    Link: http://lkml.kernel.org/r/20170622001720.GA32173@beast
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Acked-by: Rik van Riel <riel@redhat.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Qualys Security Advisory <qsa@qualys.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
