commit 191314edb326764c4481b09ccf7d00159abe4679
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Nov 30 08:41:00 2017 +0000

    Linux 4.14.3

commit 0f478f25d50cb6464678284a13f514fefc16e271
Author: Sasha Neftin <sasha.neftin@intel.com>
Date:   Sun Aug 6 16:49:18 2017 +0300

    e1000e: fix buffer overrun while the I219 is processing DMA transactions
    
    commit b10effb92e272051dd1ec0d7be56bf9ca85ab927 upstream.
    
    IntelÂ® 100/200 Series Chipset platforms reduced the round-trip
    latency for the LAN Controller DMA accesses, causing in some high
    performance cases a buffer overrun while the I219 LAN Connected
    Device is processing the DMA transactions. I219LM and I219V devices
    can fall into unrecovered Tx hang under very stressfully UDP traffic
    and multiple reconnection of Ethernet cable. This Tx hang of the LAN
    Controller is only recovered if the system is rebooted. Slightly slow
    down DMA access by reducing the number of outstanding requests.
    This workaround could have an impact on TCP traffic performance
    on the platform. Disabling TSO eliminates performance loss for TCP
    traffic without a noticeable impact on CPU performance.
    
    Please, refer to I218/I219 specification update:
    https://www.intel.com/content/www/us/en/embedded/products/networking/
    ethernet-connection-i218-family-documentation.html
    
    Signed-off-by: Sasha Neftin <sasha.neftin@intel.com>
    Reviewed-by: Dima Ruinskiy <dima.ruinskiy@intel.com>
    Reviewed-by: Raanan Avargil <raanan.avargil@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10d0fd29310387313680b12cb69f7b9e11938c8e
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Fri Jul 21 11:36:27 2017 -0700

    e1000e: Avoid receiver overrun interrupt bursts
    
    commit 4aea7a5c5e940c1723add439f4088844cd26196d upstream.
    
    When e1000e_poll() is not fast enough to keep up with incoming traffic, the
    adapter (when operating in msix mode) raises the Other interrupt to signal
    Receiver Overrun.
    
    This is a double problem because 1) at the moment e1000_msix_other()
    assumes that it is only called in case of Link Status Change and 2) if the
    condition persists, the interrupt is repeatedly raised again in quick
    succession.
    
    Ideally we would configure the Other interrupt to not be raised in case of
    receiver overrun but this doesn't seem possible on this adapter. Instead,
    we handle the first part of the problem by reverting to the practice of
    reading ICR in the other interrupt handler, like before commit 16ecba59bc33
    ("e1000e: Do not read ICR in Other interrupt"). Thanks to commit
    0a8047ac68e5 ("e1000e: Fix msi-x interrupt automask") which cleared IAME
    from CTRL_EXT, reading ICR doesn't interfere with RxQ0, TxQ0 interrupts
    anymore. We handle the second part of the problem by not re-enabling the
    Other interrupt right away when there is overrun. Instead, we wait until
    traffic subsides, napi polling mode is exited and interrupts are
    re-enabled.
    
    Reported-by: Lennart Sorensen <lsorense@csclub.uwaterloo.ca>
    Fixes: 16ecba59bc33 ("e1000e: Do not read ICR in Other interrupt")
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 830466993daf09adbd179e4c74db07279a088f8c
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Fri Jul 21 11:36:26 2017 -0700

    e1000e: Separate signaling for link check/link up
    
    commit 19110cfbb34d4af0cdfe14cd243f3b09dc95b013 upstream.
    
    Lennart reported the following race condition:
    
    \ e1000_watchdog_task
        \ e1000e_has_link
            \ hw->mac.ops.check_for_link() === e1000e_check_for_copper_link
                /* link is up */
                mac->get_link_status = false;
    
                                /* interrupt */
                                \ e1000_msix_other
                                    hw->mac.get_link_status = true;
    
            link_active = !hw->mac.get_link_status
            /* link_active is false, wrongly */
    
    This problem arises because the single flag get_link_status is used to
    signal two different states: link status needs checking and link status is
    down.
    
    Avoid the problem by using the return value of .check_for_link to signal
    the link status to e1000e_has_link().
    
    Reported-by: Lennart Sorensen <lsorense@csclub.uwaterloo.ca>
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b91745f8a4accb0f04c07433ee4297054bc88b1
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Fri Jul 21 11:36:25 2017 -0700

    e1000e: Fix return value test
    
    commit d3509f8bc7b0560044c15f0e3ecfde1d9af757a6 upstream.
    
    All the helpers return -E1000_ERR_PHY.
    
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8606bf0219f6632a931f7317dad0d4b672b1e035
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Fri Jul 21 11:36:23 2017 -0700

    e1000e: Fix error path in link detection
    
    commit c4c40e51f9c32c6dd8adf606624c930a1c4d9bbb upstream.
    
    In case of error from e1e_rphy(), the loop will exit early and "success"
    will be set to true erroneously.
    
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 391243ca6dc70e52afed671c0837aceae198abf7
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Fri Nov 10 14:03:36 2017 +0200

    iwlwifi: mvm: support version 7 of the SCAN_REQ_UMAC FW command
    
    commit dac4df1c5f2c34903f61b1bc4fc722e31b4199e7 upstream.
    
    Newer firmware versions (such as iwlwifi-8000C-34.ucode) have
    introduced an API change in the SCAN_REQ_UMAC command that is not
    backwards compatible.  The driver needs to detect and use the new API
    format when the firmware reports it, otherwise the scan command will
    not work properly, causing a command timeout.
    
    Fix this by adding a TLV that tells the driver that the new API is in
    use and use the correct structures for it.
    
    This fixes https://bugzilla.kernel.org/show_bug.cgi?id=197591
    
    Fixes: d7a5b3e9e42e ("iwlwifi: mvm: bump API to 34 for 8000 and up")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f24172d80a4a9d93e20d03b34491ee7a76602cd
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Wed Nov 15 18:28:04 2017 +0200

    iwlwifi: fix PCI IDs and configuration mapping for 9000 series
    
    commit dbc89253a7e15f8f031fb1eeb956de91204655e3 upstream.
    
    A lot of PCI IDs were missing and there were some problems with the
    configuration and firmware selection for devices on the 9000 series.
    Fix the firmware selection by adding files for the B-steps; add
    configuration for some integrated devices; and add a bunch of PCI IDs
    (mostly for integrated devices) that were missing from the driver's
    list.
    
    Without this patch, a lot of devices will not be recognized or will
    try to load the wrong firmware file.
    
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f4482f1a31784fce0a09a68d1d5a19883c0eadf
Author: Ihab Zhaika <ihab.zhaika@intel.com>
Date:   Tue Oct 24 17:36:43 2017 +0300

    iwlwifi: add new cards for 8260 series
    
    commit d669fc2d42a43ee0abcf2396df6e9c5a124aa984 upstream.
    
    add three new PCI ID'S for 8260 series
    
    Signed-off-by: Ihab Zhaika <ihab.zhaika@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b2c1ae5b3cb13673db2394cd90ad5eec5afefed
Author: Ihab Zhaika <ihab.zhaika@intel.com>
Date:   Tue Oct 24 17:38:12 2017 +0300

    iwlwifi: add new cards for 8265 series
    
    commit 7cddbef445631109bd530ce7cdacaa04ff0a62d1 upstream.
    
    add two new PCI ID'S for 8265 series
    
    Signed-off-by: Ihab Zhaika <ihab.zhaika@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e85efe021070671b8d773560b49b03a16a4c9ec
Author: Ihab Zhaika <ihab.zhaika@intel.com>
Date:   Tue Oct 24 17:04:24 2017 +0300

    iwlwifi: add new cards for a000 series
    
    commit 57b36f7fcb39c5eae8c1f463699f747af69643ba upstream.
    
    add four new PCI ID'S for a000 series
    
    Signed-off-by: Ihab Zhaika <ihab.zhaika@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 150dc29e1d99f0a58d52ec9fe0c93bb5ae86df37
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Thu Oct 12 11:20:50 2017 +0300

    iwlwifi: pcie: sort IDs for the 9000 series for easier comparisons
    
    commit 1105a337375258515ed09b92a83fd7bfd6775958 upstream.
    
    It's hard to find values that are missing in the list, so sorting the
    values and comparing them makes it much easier.  To simplify this
    task, sort the devices in the list.
    
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b4c45dc7d1b149dd4742d0579cdba044bde3482
Author: Oren Givon <oren.givon@intel.com>
Date:   Thu Aug 31 13:15:09 2017 +0300

    iwlwifi: add a new a000 device
    
    commit d048b36b9654c4e0cf0d3576be2d1ed2a3084c6f upstream.
    
    Add a new a000 device with PCI ID (0x2720, 0x0030).
    
    Signed-off-by: Oren Givon <oren.givon@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98f581f6aa4f79dbad1d00271f334d813e0870c2
Author: Oren Givon <oren.givon@intel.com>
Date:   Mon Aug 28 10:33:38 2017 +0300

    iwlwifi: fix wrong struct for a000 device
    
    commit f7f5873bbd45a67d3097dfb55237ade2ad520184 upstream.
    
    The PCI ID (0x2720, 0x0070) was set with the config struct
    iwla000_2ax_cfg_hr instead of iwla000_2ac_cfg_hr_cdb.
    
    Fixes: 175b87c69253 ("iwlwifi: add the new a000_2ax series")
    Signed-off-by: Oren Givon <oren.givon@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Cc: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a51c88c35ae6fbd858a50eef3f30719242659c5
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Wed Oct 11 17:23:12 2017 +0200

    ARM64: dts: meson-gxl: Add alternate ARM Trusted Firmware reserved memory zone
    
    commit 4ee8e51b9edfe7845a094690a365c844e5a35b4b upstream.
    
    This year, Amlogic updated the ARM Trusted Firmware reserved memory mapping
    for Meson GXL SoCs and products sold since May 2017 uses this alternate
    reserved memory mapping.
    But products had been sold using the previous mapping.
    
    This issue has been explained in [1] and a dynamic solution is yet to be
    found to avoid loosing another 3Mbytes of reservable memory.
    
    In the meantime, this patch adds this alternate memory zone only for
    the GXL and GXM SoCs since GXBB based new products stopped earlier.
    
    [1] http://lists.infradead.org/pipermail/linux-amlogic/2017-October/004860.html
    
    Fixes: bba8e3f42736 ("ARM64: dts: meson-gx: Add firmware reserved memory zones")
    Reported-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e7706a2a5e989b3f02d083c3c8829a39ec8482f
Author: Stanimir Varbanov <stanimir.varbanov@linaro.org>
Date:   Fri Oct 13 16:13:17 2017 +0200

    media: venus: reimplement decoder stop command
    
    commit e69b987a97599456b95b5fef4aca8dcdb1505aea upstream.
    
    This addresses the wrong behavior of decoder stop command by
    rewriting it. These new implementation enqueue an empty buffer
    on the decoder input buffer queue to signal end-of-stream. The
    client should stop queuing buffers on the V4L2 Output queue
    and continue queuing/dequeuing buffers on Capture queue. This
    process will continue until the client receives a buffer with
    V4L2_BUF_FLAG_LAST flag raised, which means that this is last
    decoded buffer with data.
    
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Tested-by: Nicolas Dufresne <nicolas.dufresne@collabora.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88a703f31bdf4b609e838495c733aa6c3f270c33
Author: Stanimir Varbanov <stanimir.varbanov@linaro.org>
Date:   Tue Oct 10 09:52:36 2017 +0200

    media: venus: venc: fix bytesused v4l2_plane field
    
    commit 5232c37ce244db04fd50d160b92e40d2df46a2e9 upstream.
    
    This fixes wrongly filled bytesused field of v4l2_plane structure
    by include data_offset in the plane, Also fill data_offset and
    bytesused for capture type of buffers only.
    
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 242ceaf6dc6159e71078fb6d53ecf62d2627da9f
Author: Stanimir Varbanov <stanimir.varbanov@linaro.org>
Date:   Mon Oct 9 14:24:57 2017 +0200

    media: venus: fix wrong size on dma_free
    
    commit cd1a77e3c9cc6dbb57f02aa50e1740fc144d2dad upstream.
    
    This change will fix an issue with dma_free size found with
    DMA API debug enabled.
    
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ab7724bf5bc1811fc83743627a8acbcd17ba7f7b
Author: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
Date:   Tue Oct 17 11:48:50 2017 -0400

    media: v4l2-ctrl: Fix flags field on Control events
    
    commit 9cac9d2fb2fe0e0cadacdb94415b3fe49e3f724f upstream.
    
    VIDIOC_DQEVENT and VIDIOC_QUERY_EXT_CTRL should give the same output for
    the control flags field.
    
    This patch creates a new function user_flags(), that calculates the user
    exported flags value (which is different than the kernel internal flags
    structure). This function is then used by all the code that exports the
    internal flags to userspace.
    
    Reported-by: Dimitrios Katsaros <patcherwork@gmail.com>
    Signed-off-by: Ricardo Ribalda Delgado <ricardo.ribalda@gmail.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a482b8a75500ec7516f3d11c7fb063e3f4abc45
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Sep 21 05:40:18 2017 -0300

    cx231xx-cards: fix NULL-deref on missing association descriptor
    
    commit 6c3b047fa2d2286d5e438bcb470c7b1a49f415f6 upstream.
    
    Make sure to check that we actually have an Interface Association
    Descriptor before dereferencing it during probe to avoid dereferencing a
    NULL-pointer.
    
    Fixes: e0d3bafd0258 ("V4L/DVB (10954): Add cx231xx USB driver")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfec97f26d299f64cb5dd94f5e391d74c9977486
Author: Sean Young <sean@mess.org>
Date:   Sun Oct 1 16:38:29 2017 -0400

    media: rc: nec decoder should not send both repeat and keycode
    
    commit 829bbf268894d0866bb9dd2b1e430cfa5c5f0779 upstream.
    
    When receiving an nec repeat, rc_repeat() is called and then rc_keydown()
    with the last decoded scancode. That last call is redundant.
    
    Fixes: 265a2988d202 ("media: rc-core: consistent use of rc_repeat()")
    
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e82273a266d03aeb00f0d27762ca306abbf14e01
Author: Sean Young <sean@mess.org>
Date:   Sun Oct 8 14:18:52 2017 -0400

    media: rc: check for integer overflow
    
    commit 3e45067f94bbd61dec0619b1c32744eb0de480c8 upstream.
    
    The ioctl LIRC_SET_REC_TIMEOUT would set a timeout of 704ns if called
    with a timeout of 4294968us.
    
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7da7bed3c80ffc818ea3955d1fb21df119c3e9d7
Author: Michele Baldessari <michele@acksyn.org>
Date:   Mon Nov 6 08:50:22 2017 -0500

    media: Don't do DMA on stack for firmware upload in the AS102 driver
    
    commit b3120d2cc447ee77b9d69bf4ad7b452c9adb4d39 upstream.
    
    Firmware load on AS102 is using the stack which is not allowed any
    longer. We currently fail with:
    
    kernel: transfer buffer not dma capable
    kernel: ------------[ cut here ]------------
    kernel: WARNING: CPU: 0 PID: 598 at drivers/usb/core/hcd.c:1595 usb_hcd_map_urb_for_dma+0x41d/0x620
    kernel: Modules linked in: amd64_edac_mod(-) edac_mce_amd as102_fe dvb_as102(+) kvm_amd kvm snd_hda_codec_realtek dvb_core snd_hda_codec_generic snd_hda_codec_hdmi snd_hda_intel snd_hda_codec irqbypass crct10dif_pclmul crc32_pclmul snd_hda_core snd_hwdep snd_seq ghash_clmulni_intel sp5100_tco fam15h_power wmi k10temp i2c_piix4 snd_seq_device snd_pcm snd_timer parport_pc parport tpm_infineon snd tpm_tis soundcore tpm_tis_core tpm shpchp acpi_cpufreq xfs libcrc32c amdgpu amdkfd amd_iommu_v2 radeon hid_logitech_hidpp i2c_algo_bit drm_kms_helper crc32c_intel ttm drm r8169 mii hid_logitech_dj
    kernel: CPU: 0 PID: 598 Comm: systemd-udevd Not tainted 4.13.10-200.fc26.x86_64 #1
    kernel: Hardware name: ASUS All Series/AM1I-A, BIOS 0505 03/13/2014
    kernel: task: ffff979933b24c80 task.stack: ffffaf83413a4000
    kernel: RIP: 0010:usb_hcd_map_urb_for_dma+0x41d/0x620
    systemd-fsck[659]: /dev/sda2: clean, 49/128016 files, 268609/512000 blocks
    kernel: RSP: 0018:ffffaf83413a7728 EFLAGS: 00010282
    systemd-udevd[604]: link_config: autonegotiation is unset or enabled, the speed and duplex are not writable.
    kernel: RAX: 000000000000001f RBX: ffff979930bce780 RCX: 0000000000000000
    kernel: RDX: 0000000000000000 RSI: ffff97993ec0e118 RDI: ffff97993ec0e118
    kernel: RBP: ffffaf83413a7768 R08: 000000000000039a R09: 0000000000000000
    kernel: R10: 0000000000000001 R11: 00000000ffffffff R12: 00000000fffffff5
    kernel: R13: 0000000001400000 R14: 0000000000000001 R15: ffff979930806800
    kernel: FS:  00007effaca5c8c0(0000) GS:ffff97993ec00000(0000) knlGS:0000000000000000
    kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    kernel: CR2: 00007effa9fca962 CR3: 0000000233089000 CR4: 00000000000406f0
    kernel: Call Trace:
    kernel:  usb_hcd_submit_urb+0x493/0xb40
    kernel:  ? page_cache_tree_insert+0x100/0x100
    kernel:  ? xfs_iunlock+0xd5/0x100 [xfs]
    kernel:  ? xfs_file_buffered_aio_read+0x57/0xc0 [xfs]
    kernel:  usb_submit_urb+0x22d/0x560
    kernel:  usb_start_wait_urb+0x6e/0x180
    kernel:  usb_bulk_msg+0xb8/0x160
    kernel:  as102_send_ep1+0x49/0xe0 [dvb_as102]
    kernel:  ? devres_add+0x3f/0x50
    kernel:  as102_firmware_upload.isra.0+0x1dc/0x210 [dvb_as102]
    kernel:  as102_fw_upload+0xb6/0x1f0 [dvb_as102]
    kernel:  as102_dvb_register+0x2af/0x2d0 [dvb_as102]
    kernel:  as102_usb_probe+0x1f3/0x260 [dvb_as102]
    kernel:  usb_probe_interface+0x124/0x300
    kernel:  driver_probe_device+0x2ff/0x450
    kernel:  __driver_attach+0xa4/0xe0
    kernel:  ? driver_probe_device+0x450/0x450
    kernel:  bus_for_each_dev+0x6e/0xb0
    kernel:  driver_attach+0x1e/0x20
    kernel:  bus_add_driver+0x1c7/0x270
    kernel:  driver_register+0x60/0xe0
    kernel:  usb_register_driver+0x81/0x150
    kernel:  ? 0xffffffffc0807000
    kernel:  as102_usb_driver_init+0x1e/0x1000 [dvb_as102]
    kernel:  do_one_initcall+0x50/0x190
    kernel:  ? __vunmap+0x81/0xb0
    kernel:  ? kfree+0x154/0x170
    kernel:  ? kmem_cache_alloc_trace+0x15f/0x1c0
    kernel:  ? do_init_module+0x27/0x1e9
    kernel:  do_init_module+0x5f/0x1e9
    kernel:  load_module+0x2602/0x2c30
    kernel:  SYSC_init_module+0x170/0x1a0
    kernel:  ? SYSC_init_module+0x170/0x1a0
    kernel:  SyS_init_module+0xe/0x10
    kernel:  do_syscall_64+0x67/0x140
    kernel:  entry_SYSCALL64_slow_path+0x25/0x25
    kernel: RIP: 0033:0x7effab6cf3ea
    kernel: RSP: 002b:00007fff5cfcbbc8 EFLAGS: 00000246 ORIG_RAX: 00000000000000af
    kernel: RAX: ffffffffffffffda RBX: 00005569e0b83760 RCX: 00007effab6cf3ea
    kernel: RDX: 00007effac2099c5 RSI: 0000000000009a13 RDI: 00005569e0b98c50
    kernel: RBP: 00007effac2099c5 R08: 00005569e0b83ed0 R09: 0000000000001d80
    kernel: R10: 00007effab98db00 R11: 0000000000000246 R12: 00005569e0b98c50
    kernel: R13: 00005569e0b81c60 R14: 0000000000020000 R15: 00005569dfadfdf7
    kernel: Code: 48 39 c8 73 30 80 3d 59 60 9d 00 00 41 bc f5 ff ff ff 0f 85 26 ff ff ff 48 c7 c7 b8 6b d0 92 c6 05 3f 60 9d 00 01 e8 24 3d ad ff <0f> ff 8b 53 64 e9 09 ff ff ff 65 48 8b 0c 25 00 d3 00 00 48 8b
    kernel: ---[ end trace c4cae366180e70ec ]---
    kernel: as10x_usb: error during firmware upload part1
    
    Let's allocate the the structure dynamically so we can get the firmware
    loaded correctly:
    [   14.243057] as10x_usb: firmware: as102_data1_st.hex loaded with success
    [   14.500777] as10x_usb: firmware: as102_data2_st.hex loaded with success
    
    Signed-off-by: Michele Baldessari <michele@acksyn.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 275e5c44679dcaed07007a8fbc634721afc7020d
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Nov 10 04:27:38 2017 +1100

    powerpc/64s/hash: Allow MAP_FIXED allocations to cross 128TB boundary
    
    commit 35602f82d0c765f991420e319c8d3a596c921eb8 upstream.
    
    While mapping hints with a length that cross 128TB are disallowed,
    MAP_FIXED allocations that cross 128TB are allowed. These are failing
    on hash (on radix they succeed). Add an additional case for fixed
    mappings to expand the addr_limit when crossing 128TB.
    
    Fixes: f4ea6dcb08ea ("powerpc/mm: Enable mappings above 128TB")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34c8d3ffb64883b9279c03e79c1b08c9a1931940
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Nov 10 04:27:37 2017 +1100

    powerpc/64s/hash: Fix fork() with 512TB process address space
    
    commit effc1b25088502fbd30305c79773de2d1f7470a6 upstream.
    
    Hash unconditionally resets the addr_limit to default (128TB) when the
    mm context is initialised. If a process has > 128TB mappings when it
    forks, the child will not get the 512TB addr_limit, so accesses to
    valid > 128TB mappings will fail in the child.
    
    Fix this by only resetting the addr_limit to default if it was 0. Non
    zero indicates it was duplicated from the parent (0 means exec()).
    
    Fixes: f4ea6dcb08ea ("powerpc/mm: Enable mappings above 128TB")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2279e9c895778cc8942b82e6e9fa153d5024acc2
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Nov 10 04:27:36 2017 +1100

    powerpc/64s/hash: Fix 128TB-512TB virtual address boundary case allocation
    
    commit 6a72dc038b615229a1b285829d6c8378d15c2347 upstream.
    
    When allocating VA space with a hint that crosses 128TB, the SLB
    addr_limit variable is not expanded if addr is not > 128TB, but the
    slice allocation looks at task_size, which is 512TB. This results in
    slice_check_fit() incorrectly succeeding because the slice_count
    truncates off bit 128 of the requested mask, so the comparison to the
    available mask succeeds.
    
    Fix this by using mm->context.addr_limit instead of mm->task_size for
    testing allocation limits. This causes such allocations to fail.
    
    Fixes: f4ea6dcb08ea ("powerpc/mm: Enable mappings above 128TB")
    Reported-by: Florian Weimer <fweimer@redhat.com>
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45567ab5983900c5363019c5465b1dc46fa0218d
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Nov 13 23:17:28 2017 +1100

    powerpc/64s/hash: Fix 512T hint detection to use >= 128T
    
    commit 7ece370996b694ae263025e056ad785afc1be5ab upstream.
    
    Currently userspace is able to request mmap() search between 128T-512T
    by specifying a hint address that is greater than 128T. But that means
    a hint of 128T exactly will return an address below 128T, which is
    confusing and wrong.
    
    So fix the logic to check the hint is greater than *or equal* to 128T.
    
    Fixes: f4ea6dcb08ea ("powerpc/mm: Enable mappings above 128TB")
    Suggested-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Suggested-by: Nicholas Piggin <npiggin@gmail.com>
    [mpe: Split out of Nick's bigger patch]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de9c35508f80fc77804402f0d5a50885b43e3339
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Fri Nov 10 04:27:39 2017 +1100

    powerpc/64s/radix: Fix 128TB-512TB virtual address boundary case allocation
    
    commit 85e3f1adcb9d49300b0a943bb93f9604be375bfb upstream.
    
    Radix VA space allocations test addresses against mm->task_size which
    is 512TB, even in cases where the intention is to limit allocation to
    below 128TB.
    
    This results in mmap with a hint address below 128TB but address +
    length above 128TB succeeding when it should fail (as hash does after
    the previous patch).
    
    Set the high address limit to be considered up front, and base
    subsequent allocation checks on that consistently.
    
    Fixes: f4ea6dcb08ea ("powerpc/mm: Enable mappings above 128TB")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cee5a6e8c3966b146a255f121425a064559a0767
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Nov 14 15:48:47 2017 +1100

    powerpc/64s: Fix masking of SRR1 bits on instruction fault
    
    commit 475b581ff57bc01437cbc680e281869918447763 upstream.
    
    On 64-bit Book3s, when we take an instruction fault the reason for the
    fault may be reported in SRR1. For data faults the reason is reported
    in DSISR (Data Storage Instruction Status Register).
    
    The reasons reported in each do not necessarily correspond, so we mask
    the SRR1 bits before copying them to the DSISR, which is then used by
    the page fault code.
    
    Prior to commit b4c001dc44f0 ("powerpc/mm: Use symbolic constants for
    filtering SRR1 bits on ISIs") we used a hard-coded mask of 0x58200000,
    which corresponds to:
    
      DSISR_NOHPTE          0x40000000 /* no translation found */
      DSISR_NOEXEC_OR_G     0x10000000 /* exec of no-exec or guarded */
      DSISR_PROTFAULT       0x08000000 /* protection fault */
      DSISR_KEYFAULT        0x00200000 /* Storage Key fault */
    
    That commit added a #define for the mask, DSISR_SRR1_MATCH_64S, but
    incorrectly used a different similarly named DSISR_BAD_FAULT_64S.
    
    This had the effect of changing the mask to 0xa43a0000, which omits
    everything but DSISR_KEYFAULT.
    
    Luckily this had no visible effect, because in practice we hardly use
    the DSISR bits. The lack of DSISR_NOHPTE means a TLB flush
    optimisation was missed in the native HPTE code, and DSISR_NOEXEC_OR_G
    and DSISR_PROTFAULT are both only used to trigger rare warnings.
    
    So we got lucky, but let's fix it. The new value only has bits between
    17 and 30 set, so we can continue to use andis.
    
    Fixes: b4c001dc44f0 ("powerpc/mm: Use symbolic constants for filtering SRR1 bits on ISIs")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 586fa9ed8b4916c84f1284020843c825fff97e2c
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Aug 31 21:55:57 2017 +0530

    powerpc/signal: Properly handle return value from uprobe_deny_signal()
    
    commit 46725b17f1c6c815a41429259b3f070c01e71bc1 upstream.
    
    When a uprobe is installed on an instruction that we currently do not
    emulate, we copy the instruction into a xol buffer and single step
    that instruction. If that instruction generates a fault, we abort the
    single stepping before invoking the signal handler. Once the signal
    handler is done, the uprobe trap is hit again since the instruction is
    retried and the process repeats.
    
    We use uprobe_deny_signal() to detect if the xol instruction triggered
    a signal. If so, we clear TIF_SIGPENDING and set TIF_UPROBE so that the
    signal is not handled until after the single stepping is aborted. In
    this case, uprobe_deny_signal() returns true and get_signal() ends up
    returning 0. However, in do_signal(), we are not looking at the return
    value, but depending on ksig.sig for further action, all with an
    uninitialized ksig that is not touched in this scenario. Fix the same
    by initializing ksig.sig to 0.
    
    Fixes: 129b69df9c90 ("powerpc: Use get_signal() signal_setup_done()")
    Reported-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b090846da0a14d24a2c943d3ae030692594c9f6
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Oct 16 00:13:41 2017 +0530

    powerpc/perf/imc: Use cpu_to_node() not topology_physical_package_id()
    
    commit f3f1dfd600ff82b18b7ea73d80eb27f476a6aa97 upstream.
    
    init_imc_pmu() uses topology_physical_package_id() to detect the
    node id of the processor it is on to get local memory, but that's
    wrong, and can lead to crashes. Fix it to use cpu_to_node().
    
    Fixes: 885dcd709ba9 ("powerpc/perf: Add nest IMC PMU support")
    Reported-By: Rob Lippert <rlippert@google.com>
    Tested-By: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
    Signed-off-by: Madhavan Srinivasan <maddy@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44a4adbc9949653a89e027a86caf373ec49a2fd1
Author: Balbir Singh <bsingharora@gmail.com>
Date:   Mon Oct 16 16:21:35 2017 +1100

    powerpc/mm/radix: Fix crashes on Power9 DD1 with radix MMU and STRICT_RWX
    
    commit f79ad50ea3c73fb1ea5b09e95c864e5bb263adfb upstream.
    
    When using the radix MMU on Power9 DD1, to work around a hardware
    problem, radix__pte_update() is required to do a two stage update of
    the PTE. First we write a zero value into the PTE, then we flush the
    TLB, and then we write the new PTE value.
    
    In the normal case that works OK, but it does not work if we're
    updating the PTE that maps the code we're executing, because the
    mapping is removed by the TLB flush and we can no longer execute from
    it. Unfortunately the STRICT_RWX code needs to do exactly that.
    
    The exact symptoms when we hit this case vary, sometimes we print an
    oops and then get stuck after that, but I've also seen a machine just
    get stuck continually page faulting with no oops printed. The variance
    is presumably due to the exact layout of the text and the page size
    used for the mappings. In all cases we are unable to boot to a shell.
    
    There are possible solutions such as creating a second mapping of the
    TLB flush code, executing from that, and then jumping back to the
    original. However we don't want to add that level of complexity for a
    DD1 work around.
    
    So just detect that we're running on Power9 DD1 and refrain from
    changing the permissions, effectively disabling STRICT_RWX on Power9
    DD1.
    
    Fixes: 7614ff3272a1 ("powerpc/mm/radix: Implement STRICT_RWX/mark_rodata_ro() for Radix")
    Reported-by: Andrew Jeffery <andrew@aj.id.au>
    [Changelog as suggested by Michael Ellerman <mpe@ellerman.id.au>]
    Signed-off-by: Balbir Singh <bsingharora@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df4d69feaf017cd2d6d521d5d32870e7e05f7121
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Tue Nov 21 15:28:20 2017 +0100

    powerpc: Fix boot on BOOK3S_32 with CONFIG_STRICT_KERNEL_RWX
    
    commit 252eb55816a6f69ef9464cad303cdb3326cdc61d upstream.
    
    On powerpc32, patch_instruction() is called by apply_feature_fixups()
    which is called from early_init()
    
    There is the following note in front of early_init():
     * Note that the kernel may be running at an address which is different
     * from the address that it was linked at, so we must use RELOC/PTRRELOC
     * to access static data (including strings).  -- paulus
    
    Therefore, slab_is_available() cannot be called yet, and
    text_poke_area must be addressed with PTRRELOC()
    
    Fixes: 95902e6c8864 ("powerpc/mm: Implement STRICT_KERNEL_RWX on PPC32")
    Reported-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7311af0e236710e57a71bc942d1fd1f968865a5
Author: John David Anglin <dave.anglin@bell.net>
Date:   Sat Nov 11 17:11:16 2017 -0500

    parisc: Fix validity check of pointer size argument in new CAS implementation
    
    commit 05f016d2ca7a4fab99d5d5472168506ddf95e74f upstream.
    
    As noted by Christoph Biedl, passing a pointer size of 4 in the new CAS
    implementation causes a kernel crash.  The attached patch corrects the
    off by one error in the argument validity check.
    
    In reviewing the code, I noticed that we only perform word operations
    with the pointer size argument.  The subi instruction intentionally uses
    a word condition on 64-bit kernels.  Nullification was used instead of a
    cmpib instruction as the branch should never be taken.  The shlw
    pseudo-operation generates a depw,z instruction and it clears the target
    before doing a shift left word deposit.  Thus, we don't need to clip the
    upper 32 bits of this argument on 64-bit kernels.
    
    Tested with a gcc testsuite run with a 64-bit kernel.  The gcc atomic
    code in libgcc is the only direct user of the new CAS implementation
    that I am aware of.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00f886bb5545ea5eb82a9a0abf656257bb570957
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:43 2017 -0600

    ixgbe: Fix skb list corruption on Power systems
    
    commit 0a9a17e3bb4564caf4bfe2a6783ae1287667d188 upstream.
    
    This patch fixes an issue seen on Power systems with ixgbe which results
    in skb list corruption and an eventual kernel oops. The following is what
    was observed:
    
    CPU 1                                   CPU2
    ============================            ============================
    1: ixgbe_xmit_frame_ring                ixgbe_clean_tx_irq
    2:  first->skb = skb                     eop_desc = tx_buffer->next_to_watch
    3:  ixgbe_tx_map                         read_barrier_depends()
    4:   wmb                                 check adapter written status bit
    5:   first->next_to_watch = tx_desc      napi_consume_skb(tx_buffer->skb ..);
    6:   writel(i, tx_ring->tail);
    
    The read_barrier_depends is insufficient to ensure that tx_buffer->skb does not
    get loaded prior to tx_buffer->next_to_watch, which then results in loading
    a stale skb pointer. This patch replaces the read_barrier_depends with
    smp_rmb to ensure loads are ordered with respect to the load of
    tx_buffer->next_to_watch.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 730501f25a42c88487458b0c08253734fd6ac6b2
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:48 2017 -0600

    fm10k: Use smp_rmb rather than read_barrier_depends
    
    commit 7b8edcc685b5e2c3c37aa13dc50a88e84a5bfef8 upstream.
    
    The original issue being fixed in this patch was seen with the ixgbe
    driver, but the same issue exists with fm10k as well, as the code is
    very similar. read_barrier_depends is not sufficient to ensure
    loads following it are not speculatively loaded out of order
    by the CPU, which can result in stale data being loaded, causing
    potential system crashes.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61cef8f08c5121f1e7d192190c4f71a7eb6ec58f
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:49 2017 -0600

    i40evf: Use smp_rmb rather than read_barrier_depends
    
    commit f72271e2a0ae4277d53c4053f5eed8bb346ba38a upstream.
    
    The original issue being fixed in this patch was seen with the ixgbe
    driver, but the same issue exists with i40evf as well, as the code is
    very similar. read_barrier_depends is not sufficient to ensure
    loads following it are not speculatively loaded out of order
    by the CPU, which can result in stale data being loaded, causing
    potential system crashes.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc46257bf4d825e56566d2710b56efdc913b0eb6
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:45 2017 -0600

    ixgbevf: Use smp_rmb rather than read_barrier_depends
    
    commit ae0c585d93dfaf923d2c7eb44b2c3ab92854ea9b upstream.
    
    The original issue being fixed in this patch was seen with the ixgbe
    driver, but the same issue exists with ixgbevf as well, as the code is
    very similar. read_barrier_depends is not sufficient to ensure
    loads following it are not speculatively loaded out of order
    by the CPU, which can result in stale data being loaded, causing
    potential system crashes.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d8be80e5fc4c2e03bc9df9b0fb53e62981e8d53
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:46 2017 -0600

    igbvf: Use smp_rmb rather than read_barrier_depends
    
    commit 1e1f9ca546556e508d021545861f6b5fc75a95fe upstream.
    
    The original issue being fixed in this patch was seen with the ixgbe
    driver, but the same issue exists with igbvf as well, as the code is
    very similar. read_barrier_depends is not sufficient to ensure
    loads following it are not speculatively loaded out of order
    by the CPU, which can result in stale data being loaded, causing
    potential system crashes.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8379910921d1658391d62d24e6534c4725563252
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:47 2017 -0600

    igb: Use smp_rmb rather than read_barrier_depends
    
    commit c4cb99185b4cc96c0a1c70104dc21ae14d7e7f28 upstream.
    
    The original issue being fixed in this patch was seen with the ixgbe
    driver, but the same issue exists with igb as well, as the code is
    very similar. read_barrier_depends is not sufficient to ensure
    loads following it are not speculatively loaded out of order
    by the CPU, which can result in stale data being loaded, causing
    potential system crashes.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5727faafa56eeacb1f409969b373d912ef259ca5
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Fri Nov 17 11:05:44 2017 -0600

    i40e: Use smp_rmb rather than read_barrier_depends
    
    commit 52c6912fde0133981ee50ba08808f257829c4c93 upstream.
    
    The original issue being fixed in this patch was seen with the ixgbe
    driver, but the same issue exists with i40e as well, as the code is
    very similar. read_barrier_depends is not sufficient to ensure
    loads following it are not speculatively loaded out of order
    by the CPU, which can result in stale data being loaded, causing
    potential system crashes.
    
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    Acked-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb76fcebb9c9edf843581e44c6a0a60033f3a66f
Author: Bin Meng <bmeng.cn@gmail.com>
Date:   Mon Sep 11 02:41:53 2017 -0700

    spi-nor: intel-spi: Fix broken software sequencing codes
    
    commit 9d63f17661e25fd28714dac94bdebc4ff5b75f09 upstream.
    
    There are two bugs in current intel_spi_sw_cycle():
    
    - The 'data byte count' field should be the number of bytes
      transferred minus 1
    - SSFSTS_CTL is the offset from ispi->sregs, not ispi->base
    
    Signed-off-by: Bin Meng <bmeng.cn@gmail.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Cyrille Pitchen <cyrille.pitchen@wedev4u.fr>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb2499b394805094884601b85d209bb9a9d16384
Author: Johan Hovold <johan@kernel.org>
Date:   Sun Jul 9 13:08:58 2017 +0200

    NFC: fix device-allocation error return
    
    commit c45e3e4c5b134b081e8af362109905427967eb19 upstream.
    
    A recent change fixing NFC device allocation itself introduced an
    error-handling bug by returning an error pointer in case device-id
    allocation failed. This is clearly broken as the callers still expected
    NULL to be returned on errors as detected by Dan's static checker.
    
    Fix this up by returning NULL in the event that we've run out of memory
    when allocating a new device id.
    
    Note that the offending commit is marked for stable (3.8) so this fix
    needs to be backported along with it.
    
    Fixes: 20777bc57c34 ("NFC: fix broken device allocation")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f92dea588014ae5083cac7ee33c88d58c9e87127
Author: Daniel Jurgens <danielj@mellanox.com>
Date:   Tue Nov 7 18:33:26 2017 +0200

    IB/core: Only maintain real QPs in the security lists
    
    commit 877add28178a7fa3c68f29c450d050a8e6513f08 upstream.
    
    When modify QP is called on a shared QP update the security context for
    the real QP. When security is subsequently enforced the shared QP
    handles will be checked as well.
    
    Without this change shared QP handles get added to the port/pkey lists,
    which is a bug, because not all shared QP handles will be checked for
    access. Also the shared QP security context wouldn't get removed from
    the port/pkey lists causing access to free memory and list corruption
    when they are destroyed.
    
    Fixes: d291f1a65232 ("IB/core: Enforce PKey security on QPs")
    Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
    Reviewed-by: Parav Pandit <parav@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2477321f8a1ae2920ba503e4216992bddfb33687
Author: Parav Pandit <parav@mellanox.com>
Date:   Tue Oct 31 10:33:18 2017 -0500

    IB/core: Avoid crash on pkey enforcement failed in received MADs
    
    commit 89548bcafec7ecfeea58c553f0834b5d575a66eb upstream.
    
    Below kernel crash is observed when Pkey security enforcement fails on
    received MADs. This issue is reported in [1].
    
    ib_free_recv_mad() accesses the rmpp_list, whose initialization is
    needed before accessing it.
    When security enformcent fails on received MADs, MAD processing avoided
    due to security checks failed.
    
    OpenSM[3770]: SM port is down
    kernel: BUG: unable to handle kernel NULL pointer dereference at 0000000000000008
    kernel: IP: ib_free_recv_mad+0x44/0xa0 [ib_core]
    kernel: PGD 0
    kernel: P4D 0
    kernel:
    kernel: Oops: 0002 [#1] SMP
    kernel: CPU: 0 PID: 2833 Comm: kworker/0:1H Tainted: P          IO    4.13.4-1-pve #1
    kernel: Hardware name: Dell       XS23-TY3        /9CMP63, BIOS 1.71 09/17/2013
    kernel: Workqueue: ib-comp-wq ib_cq_poll_work [ib_core]
    kernel: task: ffffa069c6541600 task.stack: ffffb9a729054000
    kernel: RIP: 0010:ib_free_recv_mad+0x44/0xa0 [ib_core]
    kernel: RSP: 0018:ffffb9a729057d38 EFLAGS: 00010286
    kernel: RAX: ffffa069cb138a48 RBX: ffffa069cb138a10 RCX: 0000000000000000
    kernel: RDX: ffffb9a729057d38 RSI: 0000000000000000 RDI: ffffa069cb138a20
    kernel: RBP: ffffb9a729057d60 R08: ffffa072d2d49800 R09: ffffa069cb138ae0
    kernel: R10: ffffa069cb138ae0 R11: ffffa072b3994e00 R12: ffffb9a729057d38
    kernel: R13: ffffa069d1c90000 R14: 0000000000000000 R15: ffffa069d1c90880
    kernel: FS:  0000000000000000(0000) GS:ffffa069dba00000(0000) knlGS:0000000000000000
    kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    kernel: CR2: 0000000000000008 CR3: 00000011f51f2000 CR4: 00000000000006f0
    kernel: Call Trace:
    kernel:  ib_mad_recv_done+0x5cc/0xb50 [ib_core]
    kernel:  __ib_process_cq+0x5c/0xb0 [ib_core]
    kernel:  ib_cq_poll_work+0x20/0x60 [ib_core]
    kernel:  process_one_work+0x1e9/0x410
    kernel:  worker_thread+0x4b/0x410
    kernel:  kthread+0x109/0x140
    kernel:  ? process_one_work+0x410/0x410
    kernel:  ? kthread_create_on_node+0x70/0x70
    kernel:  ? SyS_exit_group+0x14/0x20
    kernel:  ret_from_fork+0x25/0x30
    kernel: RIP: ib_free_recv_mad+0x44/0xa0 [ib_core] RSP: ffffb9a729057d38
    kernel: CR2: 0000000000000008
    
    [1] : https://www.spinics.net/lists/linux-rdma/msg56190.html
    
    Fixes: 47a2b338fe63 ("IB/core: Enforce security on management datagrams")
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reported-by: Chris Blake <chrisrblake93@gmail.com>
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Reviewed-by: Hal Rosenstock <hal@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c15ec17e8d8da60e07f81afe7c6f699b6233d80e
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Oct 11 10:27:26 2017 -0700

    IB/srp: Avoid that a cable pull can trigger a kernel crash
    
    commit 8a0d18c62121d3c554a83eb96e2752861d84d937 upstream.
    
    This patch fixes the following kernel crash:
    
    general protection fault: 0000 [#1] PREEMPT SMP
    Workqueue: ib_mad2 timeout_sends [ib_core]
    Call Trace:
     ib_sa_path_rec_callback+0x1c4/0x1d0 [ib_core]
     send_handler+0xb2/0xd0 [ib_core]
     timeout_sends+0x14d/0x220 [ib_core]
     process_one_work+0x200/0x630
     worker_thread+0x4e/0x3b0
     kthread+0x113/0x150
    
    Fixes: commit aef9ec39c47f ("IB: Add SCSI RDMA Protocol (SRP) initiator")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d555533d4238957beebbce0e92d190b95c8f5908
Author: Michael J. Ruhl <michael.j.ruhl@intel.com>
Date:   Mon Oct 2 11:04:19 2017 -0700

    IB/hfi1: Fix incorrect available receive user context count
    
    commit d7d626179fb283aba73699071af0df6d00e32138 upstream.
    
    The addition of the VNIC contexts to num_rcv_contexts changes the
    meaning of the sysfs value nctxts from available user contexts, to
    user contexts + reserved VNIC contexts.
    
    User applications that use nctxts are now broken.
    
    Update the calculation so that VNIC contexts are used only if there are
    hardware contexts available, and do not silently affect nctxts.
    
    Update code to use the calculated VNIC context number.
    
    Update the sysfs value nctxts to be available user contexts only.
    
    Fixes: 2280740f01ae ("IB/hfi1: Virtual Network Interface Controller (VNIC) HW support")
    Reviewed-by: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: Niranjana Vishwanathapura <Niranjana.Vishwanathapura@intel.com>
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5449283f245d85c80077fd024491de5ae0e40907
Author: Parav Pandit <parav@mellanox.com>
Date:   Thu Oct 19 08:40:30 2017 +0300

    IB/cm: Fix memory corruption in handling CM request
    
    commit 5a3dc32372439eb9a0d6027c54cbfff64803fce5 upstream.
    
    In recent code, two path record entries are alwasy cleared while
    allocated could be either one or two path record entries.
    This leads to zero out of unallocated memory.
    
    This fix initializes alternative path record only when alternative path
    is set.
    
    While we are at it, path record allocation doesn't check for OPA
    alternative path, but rest of the code checks for OPA alternative path.
    Path record allocation code doesn't check for OPA alternative LID.
    This can further lead to memory corruption when only one path record is
    allocated, but there is actually alternative OPA path record present in CM
    request.
    
    Fixes: 9fdca4da4d8c ("IB/SA: Split struct sa_path_rec based on IB and ROCE specific fields")
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reviewed-by: Moni Shoua <monis@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d56fd8a032ab2879b70f9b69c4f59713552c1f9a
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Oct 11 10:27:22 2017 -0700

    IB/srpt: Do not accept invalid initiator port names
    
    commit c70ca38960399a63d5c048b7b700612ea321d17e upstream.
    
    Make srpt_parse_i_port_id() return a negative value if hex2bin()
    fails.
    
    Fixes: commit a42d985bd5b2 ("ib_srpt: Initial SRP Target merge for v3.3-rc1")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7a05def6f722746259ae58079470ebb891b584d
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Mon Oct 16 12:14:33 2017 -0400

    svcrdma: Preserve CB send buffer across retransmits
    
    commit 0bad47cada5defba13e98827d22d06f13258dfb3 upstream.
    
    During each NFSv4 callback Call, an RDMA Send completion frees the
    page that contains the RPC Call message. If the upper layer
    determines that a retransmit is necessary, this is too soon.
    
    One possible symptom: after a GARBAGE_ARGS response an NFSv4.1
    callback request, the following BUG fires on the NFS server:
    
    kernel: BUG: Bad page state in process kworker/0:2H  pfn:7d3ce2
    kernel: page:ffffea001f4f3880 count:-2 mapcount:0 mapping:          (null) index:0x0
    kernel: flags: 0x2fffff80000000()
    kernel: raw: 002fffff80000000 0000000000000000 0000000000000000 fffffffeffffffff
    kernel: raw: dead000000000100 dead000000000200 0000000000000000 0000000000000000
    kernel: page dumped because: nonzero _refcount
    kernel: Modules linked in: cts rpcsec_gss_krb5 ocfs2_dlmfs ocfs2_stack_o2cb ocfs2_dlm
    ocfs2_nodemanager ocfs2_stackglue rpcrdm a ib_ipoib rdma_ucm ib_ucm ib_uverbs ib_umad
    rdma_cm ib_cm iw_cm x86_pkg_temp_thermal intel_powerclamp coretemp kvm_intel
    kvm irqbypass crct10dif_pc lmul crc32_pclmul ghash_clmulni_intel pcbc iTCO_wdt
    iTCO_vendor_support aesni_intel crypto_simd glue_helper cryptd pcspkr lpc_ich i2c_i801
    mei_me mf d_core mei raid0 sg wmi ioatdma ipmi_si ipmi_devintf ipmi_msghandler shpchp
    acpi_power_meter acpi_pad nfsd nfs_acl lockd auth_rpcgss grace sunrpc ip_tables xfs
    libcrc32c mlx4_en mlx4_ib mlx5_ib ib_core sd_mod sr_mod cdrom ast drm_kms_helper
    syscopyarea sysfillrect sysimgblt fb_sys_fops ttm ahci crc32c_intel libahci drm
    mlx5_core igb libata mlx4_core dca i2c_algo_bit i2c_core nvme
    kernel: ptp nvme_core pps_core dm_mirror dm_region_hash dm_log dm_mod dax
    kernel: CPU: 0 PID: 11495 Comm: kworker/0:2H Not tainted 4.14.0-rc3-00001-g577ce48 #811
    kernel: Hardware name: Supermicro Super Server/X10SRL-F, BIOS 1.0c 09/09/2015
    kernel: Workqueue: ib-comp-wq ib_cq_poll_work [ib_core]
    kernel: Call Trace:
    kernel: dump_stack+0x62/0x80
    kernel: bad_page+0xfe/0x11a
    kernel: free_pages_check_bad+0x76/0x78
    kernel: free_pcppages_bulk+0x364/0x441
    kernel: ? ttwu_do_activate.isra.61+0x71/0x78
    kernel: free_hot_cold_page+0x1c5/0x202
    kernel: __put_page+0x2c/0x36
    kernel: svc_rdma_put_context+0xd9/0xe4 [rpcrdma]
    kernel: svc_rdma_wc_send+0x50/0x98 [rpcrdma]
    
    This issue exists all the way back to v4.5, but refactoring and code
    re-organization prevents this simple patch from applying to kernels
    older than v4.12. The fix is the same, however, if someone needs to
    backport it.
    
    Reported-by: Ben Coddington <bcodding@redhat.com>
    BugLink: https://bugzilla.linux-nfs.org/show_bug.cgi?id=314
    Fixes: 5d252f90a800 ('svcrdma: Add class for RDMA backwards ... ')
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65551fb50f05057da3f731059355fd67e6837a7b
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Sep 26 11:21:24 2017 -0700

    libnvdimm, namespace: make 'resource' attribute only readable by root
    
    commit c1fb3542074fd0c4d901d778bd52455111e4eb6f upstream.
    
    For the same reason that /proc/iomem returns 0's for non-root readers
    and acpi tables are root-only, make the 'resource' attribute for
    namespace devices only readable by root. Otherwise we disclose physical
    address information.
    
    Fixes: bf9bccc14c05 ("libnvdimm: pmem label sets and namespace instantiation")
    Reported-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d6667298d1d0d47de619b23078ceb83ec2c09d46
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Sep 26 11:17:52 2017 -0700

    libnvdimm, region : make 'resource' attribute only readable by root
    
    commit b8ff981f88df03c72a4de2f6eaa9ce447a10ac03 upstream.
    
    For the same reason that /proc/iomem returns 0's for non-root readers
    and acpi tables are root-only, make the 'resource' attribute for region
    devices only readable by root. Otherwise we disclose physical address
    information.
    
    Fixes: 802f4be6feee ("libnvdimm: Add 'resource' sysfs attribute to regions")
    Cc: Dave Jiang <dave.jiang@intel.com>
    Cc: Johannes Thumshirn <jthumshirn@suse.de>
    Reported-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 913ff23bac73a9a8825942c957b6252ab3f8f198
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Sep 26 11:41:28 2017 -0700

    libnvdimm, namespace: fix label initialization to use valid seq numbers
    
    commit b18d4b8a25af6fe83d7692191d6ff962ea611c4f upstream.
    
    The set of valid sequence numbers is {1,2,3}. The specification
    indicates that an implementation should consider 0 a sign of a critical
    error:
    
        UEFI 2.7: 13.19 NVDIMM Label Protocol
    
        Software never writes the sequence number 00, so a correctly
        check-summed Index Block with this sequence number probably indicates a
        critical error. When software discovers this case it treats it as an
        invalid Index Block indication.
    
    While the expectation is that the invalid block is just thrown away, the
    Robustness Principle says we should fix this to make both sequence
    numbers valid.
    
    Fixes: f524bf271a5c ("libnvdimm: write pmem label set")
    Reported-by: Juston Li <juston.li@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a31016ea05be4c90ddf691f29aaf999e606e55e
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Sep 26 13:07:06 2017 -0700

    libnvdimm, pfn: make 'resource' attribute only readable by root
    
    commit 26417ae4fc6108f8db436f24108b08f68bdc520e upstream.
    
    For the same reason that /proc/iomem returns 0's for non-root readers
    and acpi tables are root-only, make the 'resource' attribute for pfn
    devices only readable by root. Otherwise we disclose physical address
    information.
    
    Fixes: f6ed58c70d14 ("libnvdimm, pfn: 'resource'-address and 'size'...")
    Reported-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f8fb6d5c2b77631c9b8d45417d2146e914ddb1b
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Sep 25 11:01:31 2017 -0700

    libnvdimm, dimm: clear 'locked' status on successful DIMM enable
    
    commit d34cb808402898e53b9a9bcbbedd01667a78723b upstream.
    
    If we successfully enable a DIMM then it must not be locked and we can
    clear the label-read failure condition. Otherwise, we need to reload the
    entire bus provider driver to achieve the same effect, and that can
    disrupt unrelated DIMMs and namespaces.
    
    Fixes: 9d62ed965118 ("libnvdimm: handle locked label storage areas")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf93b23582af410df8e9ddd682e9a5c4d48b2c65
Author: Johan Hovold <johan@kernel.org>
Date:   Sat Nov 11 17:29:29 2017 +0100

    clk: ti: dra7-atl-clock: fix child-node lookups
    
    commit 33ec6dbc5a02677509d97fe36cd2105753f0f0ea upstream.
    
    Fix child node-lookup during probe, which ended up searching the whole
    device tree depth-first starting at parent rather than just matching on
    its children.
    
    Note that the original premature free of the parent node has already
    been fixed separately, but that fix was apparently never backported to
    stable.
    
    Fixes: 9ac33b0ce81f ("CLK: TI: Driver for DRA7 ATL (Audio Tracking Logic)")
    Fixes: 660e15519399 ("clk: ti: dra7-atl-clock: Fix of_node reference counting")
    Cc: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 210ecdf24e06fb076f40bf3d904d947deb70055e
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Tue Oct 10 17:31:42 2017 -0400

    SUNRPC: Fix tracepoint storage issues with svc_recv and svc_rqst_status
    
    commit e9d4bf219c83d09579bc62512fea2ca10f025d93 upstream.
    
    There is no guarantee that either the request or the svc_xprt exist
    by the time we get round to printing the trace message.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1c2e5668cfd6b0332330e711f3e86d7bfe29230
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Nov 14 09:59:54 2017 -0500

    dax: fix general protection fault in dax_alloc_inode
    
    commit 9f586fff6574f6ecbf323f92d44ffaf0d96225fe upstream.
    
    Don't crash in case of allocation failure in dax_alloc_inode.
    
        syzkaller hit the following crash on e4880bc5dfb1
    
        kasan: CONFIG_KASAN_INLINE enabled
        kasan: GPF could be caused by NULL-ptr deref or user memory access
        [..]
        RIP: 0010:dax_alloc_inode+0x3b/0x70 drivers/dax/super.c:348
        Call Trace:
        alloc_inode+0x65/0x180 fs/inode.c:208
        new_inode_pseudo+0x69/0x190 fs/inode.c:890
        new_inode+0x1c/0x40 fs/inode.c:919
        mount_pseudo_xattr+0x288/0x560 fs/libfs.c:261
        mount_pseudo include/linux/fs.h:2137 [inline]
        dax_mount+0x2e/0x40 drivers/dax/super.c:388
        mount_fs+0x66/0x2d0 fs/super.c:1223
    
    Fixes: 7b6be8444e0f ("dax: refactor dax-fs into a generic provider...")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c21261e6311a7d237da47b608e933f3abd7e534e
Author: Jeff Moyer <jmoyer@redhat.com>
Date:   Tue Nov 14 20:37:27 2017 -0500

    dax: fix PMD faults on zero-length files
    
    commit 957ac8c421ad8b5eef9b17fe98e146d8311a541e upstream.
    
    PMD faults on a zero length file on a file system mounted with -o dax
    will not generate SIGBUS as expected.
    
            fd = open(...O_TRUNC);
            addr = mmap(NULL, 2*1024*1024, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);
            *addr = 'a';
            <expect SIGBUS>
    
    The problem is this code in dax_iomap_pmd_fault:
    
            max_pgoff = (i_size_read(inode) - 1) >> PAGE_SHIFT;
    
    If the inode size is zero, we end up with a max_pgoff that is way larger
    than 0.  :)  Fix it by using DIV_ROUND_UP, as is done elsewhere in the
    kernel.
    
    I tested this with some simple test code that ensured that SIGBUS was
    received where expected.
    
    Fixes: 642261ac995e ("dax: add struct iomap based DAX PMD support")
    Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a77360e989f3dc06e4f177a0837d533d13a20d91
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Mon Nov 6 13:31:12 2017 +0100

    kvm: vmx: Reinstate support for CPUs without virtual NMI
    
    commit 8a1b43922d0d1279e7936ba85c4c2a870403c95f upstream.
    
    This is more or less a revert of commit 2c82878b0cb3 ("KVM: VMX: require
    virtual NMI support", 2017-03-27); it turns out that Core 2 Duo machines
    only had virtual NMIs in some SKUs.
    
    The revert is not trivial because in the meanwhile there have been several
    fixes to nested NMI injection.  Therefore, the entire vNMI state is moved
    to struct loaded_vmcs.
    
    Another change compared to before the patch is a simplification here:
    
           if (unlikely(!cpu_has_virtual_nmis() && vmx->soft_vnmi_blocked &&
               !(is_guest_mode(vcpu) && nested_cpu_has_virtual_nmis(
                                           get_vmcs12(vcpu))))) {
    
    The final condition here is always true (because nested_cpu_has_virtual_nmis
    is always false) and is removed.
    
    Fixes: 2c82878b0cb38fd516fd612c67852a6bbf282003
    Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1490803
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Radim KrÄmÃ¡Å <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04d7f0cfd5a50cab9edfd73ceca460de5bdd55ac
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Oct 26 09:13:27 2017 +0200

    KVM: SVM: obey guest PAT
    
    commit 15038e14724799b8c205beb5f20f9e54896013c3 upstream.
    
    For many years some users of assigned devices have reported worse
    performance on AMD processors with NPT than on AMD without NPT,
    Intel or bare metal.
    
    The reason turned out to be that SVM is discarding the guest PAT
    setting and uses the default (PA0=PA4=WB, PA1=PA5=WT, PA2=PA6=UC-,
    PA3=UC).  The guest might be using a different setting, and
    especially might want write combining but isn't getting it
    (instead getting slow UC or UC- accesses).
    
    Thanks a lot to geoff@hostfission.com for noticing the relation
    to the g_pat setting.  The patch has been tested also by a bunch
    of people on VFIO users forums.
    
    Fixes: 709ddebf81cb40e3c36c6109a7892e8b93a09464
    Fixes: https://bugzilla.kernel.org/show_bug.cgi?id=196409
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Tested-by: Nick Sarnie <commendsarnex@gmail.com>
    Signed-off-by: Radim KrÄmÃ¡Å <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b09ee40aae7ca0c4a7956dcbc5361c5ef7ccf2e
Author: Ladi Prosek <lprosek@redhat.com>
Date:   Wed Oct 11 16:54:42 2017 +0200

    KVM: nVMX: set IDTR and GDTR limits when loading L1 host state
    
    commit 21f2d551183847bc7fbe8d866151d00cdad18752 upstream.
    
    Intel SDM 27.5.2 Loading Host Segment and Descriptor-Table Registers:
    
    "The GDTR and IDTR limits are each set to FFFFH."
    
    Signed-off-by: Ladi Prosek <lprosek@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5073bc7c18358d08bc9dd39458bc469dc9e978d
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Thu Oct 26 17:00:22 2017 +1100

    KVM: PPC: Book3S HV: Don't call real-mode XICS hypercall handlers if not enabled
    
    commit 00bb6ae5006205e041ce9784c819460562351d47 upstream.
    
    When running a guest on a POWER9 system with the in-kernel XICS
    emulation disabled (for example by running QEMU with the parameter
    "-machine pseries,kernel_irqchip=off"), the kernel does not pass
    the XICS-related hypercalls such as H_CPPR up to userspace for
    emulation there as it should.
    
    The reason for this is that the real-mode handlers for these
    hypercalls don't check whether a XICS device has been instantiated
    before calling the xics-on-xive code.  That code doesn't check
    either, leading to potential NULL pointer dereferences because
    vcpu->arch.xive_vcpu is NULL.  Those dereferences won't cause an
    exception in real mode but will lead to kernel memory corruption.
    
    This fixes it by adding kvmppc_xics_enabled() checks before calling
    the XICS functions.
    
    Fixes: 5af50993850a ("KVM: PPC: Book3S HV: Native usage of the XIVE interrupt controller")
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 665e6619705a19910ab3aaa81eb34343e9628da4
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Fri Oct 20 17:33:18 2017 +0300

    lockd: double unregister of inetaddr notifiers
    
    commit dc3033e16c59a2c4e62b31341258a5786cbcee56 upstream.
    
    lockd_up() can call lockd_unregister_notifiers twice:
    inside lockd_start_svc() when it calls lockd_svc_exit_thread()
    and then in error path of lockd_up()
    
    Patch forces lockd_start_svc() to unregister notifiers in all error cases
    and removes extra unregister in error path of lockd_up().
    
    Fixes: cb7d224f82e4 "lockd: unregister notifier blocks if the service ..."
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca655bc65e830819ded1b7a0b51a3beb204103a2
Author: Johan Hovold <johan@kernel.org>
Date:   Sat Nov 11 17:51:25 2017 +0100

    irqchip/gic-v3: Fix ppi-partitions lookup
    
    commit 00ee9a1ca5080202bc37b44e998c3b2c74d45817 upstream.
    
    Fix child-node lookup during initialisation, which ended up searching
    the whole device tree depth-first starting at the parent rather than
    just matching on its children.
    
    To make things worse, the parent gic node was prematurely freed, while
    the ppi-partitions node was leaked.
    
    Fixes: e3825ba1af3a ("irqchip/gic-v3: Add support for partitioned PPIs")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c01dd3addb99763551f2717d1c7c6d20bd9491de
Author: Marc Zyngier <maz@kernel.org>
Date:   Thu Nov 9 14:17:59 2017 +0000

    genirq: Track whether the trigger type has been set
    
    commit 4f8413a3a799c958f7a10a6310a451e6b8aef5ad upstream.
    
    When requesting a shared interrupt, we assume that the firmware
    support code (DT or ACPI) has called irqd_set_trigger_type
    already, so that we can retrieve it and check that the requester
    is being reasonnable.
    
    Unfortunately, we still have non-DT, non-ACPI systems around,
    and these guys won't call irqd_set_trigger_type before requesting
    the interrupt. The consequence is that we fail the request that
    would have worked before.
    
    We can either chase all these use cases (boring), or address it
    in core code (easier). Let's have a per-irq_desc flag that
    indicates whether irqd_set_trigger_type has been called, and
    let's just check it when checking for a shared interrupt.
    If it hasn't been set, just take whatever the interrupt
    requester asks.
    
    Fixes: 382bd4de6182 ("genirq: Use irqd_get_trigger_type to compare the trigger type for shared IRQs")
    Reported-and-tested-by: Petr Cvek <petrcvekcz@gmail.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d92105f93aeb2c80f6840bed9af71d3f97321916
Author: Nate Dailey <nate.dailey@stratus.com>
Date:   Tue Oct 17 08:17:03 2017 -0400

    raid1: prevent freeze_array/wait_all_barriers deadlock
    
    commit f6eca2d43ed694ab8124dd24c88277f7eca93b7d upstream.
    
    If freeze_array is attempted in the middle of close_sync/
    wait_all_barriers, deadlock can occur.
    
    freeze_array will wait for nr_pending and nr_queued to line up.
    wait_all_barriers increments nr_pending for each barrier bucket, one
    at a time, but doesn't actually issue IO that could be counted in
    nr_queued. So freeze_array is blocked until wait_all_barriers
    completes and allow_all_barriers runs. At the same time, when
    _wait_barrier sees array_frozen == 1, it stops and waits for
    freeze_array to complete.
    
    Prevent the deadlock by making close_sync call _wait_barrier and
    _allow_barrier for one bucket at a time, instead of deferring the
    _allow_barrier calls until after all _wait_barriers are complete.
    
    Signed-off-by: Nate Dailey <nate.dailey@stratus.com>
    Fix: fd76863e37fe(RAID1: a new I/O barrier implementation to remove resync window)
    Reviewed-by: Coly Li <colyli@suse.de>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77a38e88ccbc9e6451333f742b18d0fe5176c5cd
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Oct 19 10:00:48 2017 -0700

    block: Fix a race between blk_cleanup_queue() and timeout handling
    
    commit 4e9b6f20828ac880dbc1fa2fdbafae779473d1af upstream.
    
    Make sure that if the timeout timer fires after a queue has been
    marked "dying" that the affected requests are finished.
    
    Reported-by: chenxiang (M) <chenxiang66@hisilicon.com>
    Fixes: commit 287922eb0b18 ("block: defer timeouts to a workqueue")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Tested-by: chenxiang (M) <chenxiang66@hisilicon.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Keith Busch <keith.busch@intel.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Ming Lei <ming.lei@redhat.com>
    Cc: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbf6614675482ae339510e331c2350455b2292b8
Author: Andrey Konovalov <andreyknvl@google.com>
Date:   Tue Sep 26 17:11:33 2017 +0200

    p54: don't unregister leds when they are not initialized
    
    commit fc09785de0a364427a5df63d703bae9a306ed116 upstream.
    
    ieee80211_register_hw() in p54_register_common() may fail and leds won't
    get initialized. Currently p54_unregister_common() doesn't check that and
    always calls p54_unregister_leds(). The fix is to check priv->registered
    flag before calling p54_unregister_leds().
    
    Found by syzkaller.
    
    INFO: trying to register non-static key.
    the code is fine but needs lockdep annotation.
    turning off the locking correctness validator.
    CPU: 1 PID: 1404 Comm: kworker/1:1 Not tainted
    4.14.0-rc1-42251-gebb2c2437d80-dirty #205
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    Workqueue: usb_hub_wq hub_event
    Call Trace:
     __dump_stack lib/dump_stack.c:16
     dump_stack+0x292/0x395 lib/dump_stack.c:52
     register_lock_class+0x6c4/0x1a00 kernel/locking/lockdep.c:769
     __lock_acquire+0x27e/0x4550 kernel/locking/lockdep.c:3385
     lock_acquire+0x259/0x620 kernel/locking/lockdep.c:4002
     flush_work+0xf0/0x8c0 kernel/workqueue.c:2886
     __cancel_work_timer+0x51d/0x870 kernel/workqueue.c:2961
     cancel_delayed_work_sync+0x1f/0x30 kernel/workqueue.c:3081
     p54_unregister_leds+0x6c/0xc0 drivers/net/wireless/intersil/p54/led.c:160
     p54_unregister_common+0x3d/0xb0 drivers/net/wireless/intersil/p54/main.c:856
     p54u_disconnect+0x86/0x120 drivers/net/wireless/intersil/p54/p54usb.c:1073
     usb_unbind_interface+0x21c/0xa90 drivers/usb/core/driver.c:423
     __device_release_driver drivers/base/dd.c:861
     device_release_driver_internal+0x4f4/0x5c0 drivers/base/dd.c:893
     device_release_driver+0x1e/0x30 drivers/base/dd.c:918
     bus_remove_device+0x2f4/0x4b0 drivers/base/bus.c:565
     device_del+0x5c4/0xab0 drivers/base/core.c:1985
     usb_disable_device+0x1e9/0x680 drivers/usb/core/message.c:1170
     usb_disconnect+0x260/0x7a0 drivers/usb/core/hub.c:2124
     hub_port_connect drivers/usb/core/hub.c:4754
     hub_port_connect_change drivers/usb/core/hub.c:5009
     port_event drivers/usb/core/hub.c:5115
     hub_event+0x1318/0x3740 drivers/usb/core/hub.c:5195
     process_one_work+0xc7f/0x1db0 kernel/workqueue.c:2119
     process_scheduled_works kernel/workqueue.c:2179
     worker_thread+0xb2b/0x1850 kernel/workqueue.c:2255
     kthread+0x3a1/0x470 kernel/kthread.c:231
     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431
    
    Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
    Acked-by: Christian Lamparter <chunkeey@googlemail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90b54bccdd9793d6e906baeb5975afa337987db8
Author: Anup Patel <anup.patel@broadcom.com>
Date:   Tue Oct 3 10:51:48 2017 +0530

    mailbox: bcm-flexrm-mailbox: Fix FlexRM ring flush sequence
    
    commit a371c10ea4b38a5f120e86d906d404d50a0f4660 upstream.
    
    As-per suggestion from FlexRM HW folks, we have to first set
    FlexRM ring flush state and then clear it for FlexRM ring flush
    to work properly.
    
    Currently, the FlexRM driver has incomplete FlexRM ring flush
    sequence which causes repeated insmod+rmmod of mailbox client
    drivers to fail.
    
    This patch fixes FlexRM ring flush sequence in flexrm_shutdown()
    as described above.
    
    Fixes: dbc049eee730 ("mailbox: Add driver for Broadcom FlexRM
    ring manager")
    
    Signed-off-by: Anup Patel <anup.patel@broadcom.com>
    Reviewed-by: Scott Branden <scott.branden@broadcom.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39b3926aad065a371e6dba925d7835117a4b9c16
Author: Xiaolei Li <xiaolei.li@mediatek.com>
Date:   Mon Oct 30 10:39:56 2017 +0800

    mtd: nand: mtk: fix infinite ECC decode IRQ issue
    
    commit 1d2fcdcf33339c7c8016243de0f7f31cf6845e8d upstream.
    
    For MT2701 NAND Controller, there may generate infinite ECC decode IRQ
    during long time burn test on some platforms. Once this issue occurred,
    the ECC decode IRQ status cannot be cleared in the IRQ handler function,
    and threads cannot be scheduled.
    
    ECC HW generates decode IRQ each sector, so there will have more than one
    decode IRQ if read one page of large page NAND.
    
    Currently, ECC IRQ handle flow is that we will check whether it is decode
    IRQ at first by reading the register ECC_DECIRQ_STA. This is a read-clear
    type register. If this IRQ is decode IRQ, then the ECC IRQ signal will be
    cleared at the same time.
    Secondly, we will check whether all sectors are decoded by reading the
    register ECC_DECDONE. This is because the current IRQ may be not dealed
    in time, and the next sectors have been decoded before reading the
    register ECC_DECIRQ_STA. Then, the next sectors's decode IRQs will not
    be generated.
    Thirdly, if all sectors are decoded by comparing with ecc->sectors, then we
    will complete ecc->done, set ecc->sectors as 0, and disable ECC IRQ by
    programming the register ECC_IRQ_REG(op) as 0. Otherwise, wait for the
    next ECC IRQ.
    
    But, there is a timing issue between step one and two. When we read the
    reigster ECC_DECIRQ_STA, all sectors are decoded except the last sector,
    and the ECC IRQ signal is cleared. But the last sector is decoded before
    reading ECC_DECDONE, so the ECC IRQ signal is enabled again by ECC HW, and
    it means we will receive one extra ECC IRQ later. In step three, we will
    find that all sectors were decoded, then disable ECC IRQ and return.
    When deal with the extra ECC IRQ, the ECC IRQ status cannot be cleared
    anymore. That is because the register ECC_DECIRQ_STA can only be cleared
    when the register ECC_IRQ_REG(op) is enabled. But actually we have
    disabled ECC IRQ in the previous ECC IRQ handle. So, there will
    keep receiving ECC decode IRQ.
    
    Now, we read the register ECC_DECIRQ_STA once again before completing the
    ecc done event. This ensures that there will be no extra ECC decode IRQ.
    
    Also, remove writel(0, ecc->regs + ECC_IRQ_REG(op)) from irq handler,
    because ECC IRQ is disabled in mtk_ecc_disable(). And clear ECC_DECIRQ_STA
    in mtk_ecc_disable() in case there is a timeout to wait decode IRQ.
    
    Fixes: 1d6b1e464950 ("mtd: mediatek: driver for MTK Smart Device")
    Signed-off-by: Xiaolei Li <xiaolei.li@mediatek.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff342113b7788420ae7da409e59afb8cd206b08d
Author: Brent Taylor <motobud@gmail.com>
Date:   Mon Oct 30 22:32:45 2017 -0500

    mtd: nand: Fix writing mtdoops to nand flash.
    
    commit 30863e38ebeb500a31cecee8096fb5002677dd9b upstream.
    
    When mtdoops calls mtd_panic_write(), it eventually calls
    panic_nand_write() in nand_base.c. In order to properly wait for the
    nand chip to be ready in panic_nand_wait(), the chip must first be
    selected.
    
    When using the atmel nand flash controller, a panic would occur due to
    a NULL pointer exception.
    
    Fixes: 2af7c6539931 ("mtd: Add panic_write for NAND flashes")
    Signed-off-by: Brent Taylor <motobud@gmail.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d54ca1d0ea19feb7aedd256b9f58a7478ef23819
Author: Roger Quadros <rogerq@ti.com>
Date:   Fri Oct 20 15:16:21 2017 +0300

    mtd: nand: omap2: Fix subpage write
    
    commit 739c64414f01748a36e7d82c8e0611dea94412bd upstream.
    
    Since v4.12, NAND subpage writes were causing a NULL pointer
    dereference on OMAP platforms (omap2-nand) using OMAP_ECC_BCH4_CODE_HW,
    OMAP_ECC_BCH8_CODE_HW and OMAP_ECC_BCH16_CODE_HW.
    
    This is because for those ECC modes, omap_calculate_ecc_bch()
    generates ECC bytes for the entire (multi-sector) page and this can
    overflow the ECC buffer provided by nand_write_subpage_hwecc()
    as it expects ecc.calculate() to return ECC bytes for just one sector.
    
    However, the root cause of the problem is present since v3.9
    but was not seen then as NAND buffers were being allocated
    as one big chunk prior to commit 3deb9979c731 ("mtd: nand: allocate
    aligned buffers if NAND_OWN_BUFFERS is unset").
    
    Fix the issue by providing a OMAP optimized write_subpage()
    implementation.
    
    Fixes: 62116e5171e0 ("mtd: nand: omap2: Support for hardware BCH error correction.")
    Signed-off-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54d8f6c8a454c5f177906d1a3a74b02113afc9bf
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Thu Oct 5 18:57:24 2017 +0200

    mtd: nand: atmel: Actually use the PM ops
    
    commit 1533bfa6f6b6bcca1ea1f172ef4a1c5ce5e7b335 upstream.
    
    commit 6e532afaca8e ("mtd: nand: atmel: Add PM ops") was defining PM
    ops but nothing was using/referencing those PM ops.
    
    Fixes: 6e532afaca8e ("mtd: nand: atmel: Add PM ops")
    Cc: Romain Izard <romain.izard.pro@gmail.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Acked-by: Wenyou Yang <wenyou.yang@microchip.com>
    Tested-by: Romain Izard <romain.izard.pro@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 460bad5fe1ae2ebcd9cb73ad7b51538996b722b2
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Thu Oct 5 18:53:19 2017 +0200

    mtd: nand: Export nand_reset() symbol
    
    commit b9bb98424c51437973b854691aa1e9b2bfd348f5 upstream.
    
    Commit 6e532afaca8e ("mtd: nand: atmel: Add PM ops") started to use the
    nand_reset() function which was not yet exported by the NAND framework
    (because it was only used internally before that). Export this symbol
    to avoid build errors when the driver is enabled as a module.
    
    Fixes: 6e532afaca8e ("mtd: nand: atmel: Add PM ops")
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ad1a61d32af8a7d39dedcafaaf1f209237fa806
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Sat Nov 11 16:08:34 2017 +0100

    mtd: Avoid probe failures when mtd->dbg.dfs_dir is invalid
    
    commit 1530578abdac4edce9244c7a1962ded3ffdb58ce upstream.
    
    Commit e8e3edb95ce6 ("mtd: create per-device and module-scope debugfs
    entries") tried to make MTD related debugfs stuff consistent across the
    MTD framework by creating a root <debugfs>/mtd/ directory containing
    one directory per MTD device.
    
    The problem is that, by default, the MTD layer only registers the
    master device if no partitions are defined for this master. This
    behavior breaks all drivers that expect mtd->dbg.dfs_dir to be filled
    correctly after calling mtd_device_register() in order to add their own
    debugfs entries.
    
    The only way we can force all MTD masters to be registered no matter if
    they expose partitions or not is by enabling the
    CONFIG_MTD_PARTITIONED_MASTER option.
    
    In such situations, there's no other solution but to accept skipping
    debugfs initialization when dbg.dfs_dir is invalid, and when this
    happens, inform the user that he should consider enabling
    CONFIG_MTD_PARTITIONED_MASTER.
    
    Fixes: e8e3edb95ce6 ("mtd: create per-device and module-scope debugfs entries")
    Cc: Mario J. Rugiero <mrugiero@gmail.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Reported-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe1325027b4de33159853e0cf942abee58d01b74
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Oct 27 22:19:26 2017 -0800

    target: Avoid early CMD_T_PRE_EXECUTE failures during ABORT_TASK
    
    commit 1c21a48055a67ceb693e9c2587824a8de60a217c upstream.
    
    This patch fixes bug where early se_cmd exceptions that occur
    before backend execution can result in use-after-free if/when
    a subsequent ABORT_TASK occurs for the same tag.
    
    Since an early se_cmd exception will have had se_cmd added to
    se_session->sess_cmd_list via target_get_sess_cmd(), it will
    not have CMD_T_COMPLETE set by the usual target_complete_cmd()
    backend completion path.
    
    This causes a subsequent ABORT_TASK + __target_check_io_state()
    to signal ABORT_TASK should proceed.  As core_tmr_abort_task()
    executes, it will bring the outstanding se_cmd->cmd_kref count
    down to zero releasing se_cmd, after se_cmd has already been
    queued with error status into fabric driver response path code.
    
    To address this bug, introduce a CMD_T_PRE_EXECUTE bit that is
    set at target_get_sess_cmd() time, and cleared immediately before
    backend driver dispatch in target_execute_cmd() once CMD_T_ACTIVE
    is set.
    
    Then, check CMD_T_PRE_EXECUTE within __target_check_io_state() to
    determine when an early exception has occured, and avoid aborting
    this se_cmd since it will have already been queued into fabric
    driver response path code.
    
    Reported-by: Donald White <dew@datera.io>
    Cc: Donald White <dew@datera.io>
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c68944bda81603075e1205f066c9ff855d3ffe0
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Sep 29 16:43:11 2017 -0700

    target: Fix quiese during transport_write_pending_qf endless loop
    
    commit 9574a497df2bbc0a676b609ce0dd24d237cee3a6 upstream.
    
    This patch fixes a potential end-less loop during QUEUE_FULL,
    where cmd->se_tfo->write_pending() callback fails repeatedly
    but __transport_wait_for_tasks() has already been invoked to
    quiese the outstanding se_cmd descriptor.
    
    To address this bug, this patch adds a CMD_T_STOP|CMD_T_ABORTED
    check within transport_write_pending_qf() and invokes the
    existing se_cmd->t_transport_stop_comp to signal quiese
    completion back to __transport_wait_for_tasks().
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Cc: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Cc: Potnuri Bharat Teja <bharat@chelsio.com>
    Cc: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16870b7ba2855204af532c23fa973d530f4959b6
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Sep 29 16:03:24 2017 -0700

    target: Fix caw_sem leak in transport_generic_request_failure
    
    commit fd2f928b0ddd2fe8876d4f1344df2ace2b715a4d upstream.
    
    With the recent addition of transport_check_aborted_status() within
    transport_generic_request_failure() to avoid sending a SCSI status
    exception after CMD_T_ABORTED w/ TAS=1 has occured, it introduced
    a COMPARE_AND_WRITE early failure regression.
    
    Namely when COMPARE_AND_WRITE fails and se_device->caw_sem has
    been taken by sbc_compare_and_write(), if the new check for
    transport_check_aborted_status() returns true and exits,
    cmd->transport_complete_callback() -> compare_and_write_post()
    is skipped never releasing se_device->caw_sem.
    
    This regression was originally introduced by:
    
      commit e3b88ee95b4e4bf3e9729a4695d695b9c7c296c8
      Author: Bart Van Assche <bart.vanassche@sandisk.com>
      Date:   Tue Feb 14 16:25:45 2017 -0800
    
          target: Fix handling of aborted failed commands
    
    To address this bug, move the transport_check_aborted_status()
    call after transport_complete_task_attr() and
    cmd->transport_complete_callback().
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66abe4fc44689abe5c8b23c22ea5a4092f46d7eb
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Sep 22 16:48:28 2017 -0700

    target: Fix QUEUE_FULL + SCSI task attribute handling
    
    commit 1c79df1f349fb6050016cea4ef1dfbc3853a5685 upstream.
    
    This patch fixes a bug during QUEUE_FULL where transport_complete_qf()
    calls transport_complete_task_attr() after it's already been invoked
    by target_complete_ok_work() or transport_generic_request_failure()
    during initial completion, preceeding QUEUE_FULL.
    
    This will result in se_device->simple_cmds, se_device->dev_cur_ordered_id
    and/or se_device->dev_ordered_sync being updated multiple times for
    a single se_cmd.
    
    To address this bug, clear SCF_TASK_ATTR_SET after the first call
    to transport_complete_task_attr(), and avoid updating SCSI task
    attribute related counters for any subsequent calls.
    
    Also, when a se_cmd is deferred due to ordered tags and executed
    via target_restart_delayed_cmds(), set CMD_T_SENT before execution
    matching what target_execute_cmd() does.
    
    Cc: Michael Cyr <mikecyr@linux.vnet.ibm.com>
    Cc: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ecb83e55b71c2831b96140aa564e6d72e956f0c
Author: tangwenji <tang.wenji@zte.com.cn>
Date:   Thu Aug 17 19:51:54 2017 +0800

    target: fix buffer offset in core_scsi3_pri_read_full_status
    
    commit c58a252beb04cf0e02d6a746b2ed7ea89b6deb71 upstream.
    
    When at least two initiators register pr on the same LUN,
    the target returns the exception data due to buffer offset
    error, therefore the initiator executes command 'sg_persist -s'
    may cause the initiator to appear segfault error.
    
    This fixes a regression originally introduced by:
    
      commit a85d667e58bddf73be84d1981b41eaac985ed216
      Author: Bart Van Assche <bart.vanassche@sandisk.com>
      Date:   Tue May 23 16:48:27 2017 -0700
    
          target: Use {get,put}_unaligned_be*() instead of open coding these functions
    
    Signed-off-by: tangwenji <tang.wenji@zte.com.cn>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31c913191db3c680e1b71547e8d46713103ee805
Author: tangwenji <tang.wenji@zte.com.cn>
Date:   Wed Aug 16 16:39:00 2017 +0800

    target: fix null pointer regression in core_tmr_drain_tmr_list
    
    commit 88fb2fa7db7510bf1078226ab48d162d9854f3d4 upstream.
    
    The target system kernel crash when the initiator executes
    the sg_persist -A command,because of the second argument to
    be set to NULL when core_tmr_lun_reset is called in
    core_scsi3_pro_preempt function.
    
    This fixes a regression originally introduced by:
    
      commit 51ec502a32665fed66c7f03799ede4023b212536
      Author: Bart Van Assche <bart.vanassche@sandisk.com>
      Date:   Tue Feb 14 16:25:54 2017 -0800
    
          target: Delete tmr from list before processing
    
    Signed-off-by: tangwenji <tang.wenji@zte.com.cn>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8009209a65167c899729e9a9d40fd3b809474c9d
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Oct 27 20:52:56 2017 -0700

    iscsi-target: Fix non-immediate TMR reference leak
    
    commit 3fc9fb13a4b2576aeab86c62fd64eb29ab68659c upstream.
    
    This patch fixes a se_cmd->cmd_kref reference leak that can
    occur when a non immediate TMR is proceeded our of command
    sequence number order, and CMDSN_LOWER_THAN_EXP is returned
    by iscsit_sequence_cmd().
    
    To address this bug, call target_put_sess_cmd() during this
    special case following what iscsit_process_scsi_cmd() does
    upon CMDSN_LOWER_THAN_EXP.
    
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84ab17cf4f30740eff6247d2bf657f8ee527b034
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Oct 27 12:32:59 2017 -0700

    iscsi-target: Make TASK_REASSIGN use proper se_cmd->cmd_kref
    
    commit ae072726f6109bb1c94841d6fb3a82dde298ea85 upstream.
    
    Since commit 59b6986dbf fixed a potential NULL pointer dereference
    by allocating a se_tmr_req for ISCSI_TM_FUNC_TASK_REASSIGN, the
    se_tmr_req is currently leaked by iscsit_free_cmd() because no
    iscsi_cmd->se_cmd.se_tfo was associated.
    
    To address this, treat ISCSI_TM_FUNC_TASK_REASSIGN like any other
    TMR and call transport_init_se_cmd() + target_get_sess_cmd() to
    setup iscsi_cmd->se_cmd.se_tfo with se_cmd->cmd_kref of 2.
    
    This will ensure normal release operation once se_cmd->cmd_kref
    reaches zero and target_release_cmd_kref() is invoked, se_tmr_req
    will be released via existing target_free_cmd_mem() and
    core_tmr_release_req() code.
    
    Reported-by: Donald White <dew@datera.io>
    Cc: Donald White <dew@datera.io>
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5b7da1110a481f64f3a0530862a1ac19fc4d48d
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:39 2017 -0700

    scsi: lpfc: Fix oops if nvmet_fc_register_targetport fails
    
    commit e7981a2c725f8e237f749fa1358997707d57e32c upstream.
    
    if nvmet targetport registration fails, the driver encounters a NULL
    pointer oops in lpfc_hb_timeout_handler.
    
    To fix: if registration fails, ensure nvmet_support is cleared on the
    port structure.
    
    Also enhanced the log message on failure.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55d8b65043e7726d907c99d0034ad29669f98167
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:35 2017 -0700

    scsi: lpfc: Fix FCP hba_wqidx assignment
    
    commit 8e036a9497c5d565baafda4c648f2f372999a547 upstream.
    
    The driver is encountering  oops in lpfc_sli_calc_ring.
    
    The driver is setting hba_wqidx for FCP based on the policy in use for
    NVME. The two may not be the same.  Change to set the wqidx based on the
    FCP policy.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27b1313ce913feeef151d167eabc4a8f175d3ad3
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:29 2017 -0700

    scsi: lpfc: Fix crash receiving ELS while detaching driver
    
    commit 1234a6d54fed8a00091968c4eb2fb52e1cbb8e2e upstream.
    
    The driver crashes when attempting to use a freed ndpl pointer.
    
    The pci_remove_one handler runs on a separate kernel thread. The order
    of the removal is starting by freeing all of the ndlps and then
    disabling interrupts. In between these two events the driver can still
    receive an ELS and process it. When it tries to use the ndlp pointer
    will be NULL
    
    Change the order of the pci_remove_one vs disable interrupts so that
    interrupts are disabled before the ndlp's are freed.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d697650498c0e540d2c1a23b07395ca7997055e
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:28 2017 -0700

    scsi: lpfc: fix pci hot plug crash in list_add call
    
    commit 401bb4169da655f3e5d28d0b208182e1ab60bf2a upstream.
    
    During pci hot plug, the kernel crashes in a list_add_call
    
    The lookup by tag function will return null if the IOCB is out of range
    or does not have the on txcmplq flag set.
    
    Fix: Check for null return from lookup by tag.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 890d9fcd787e31d746070f6e4d5cdb674f8f1efc
Author: Dick Kennedy <dick.kennedy@broadcom.com>
Date:   Fri Sep 29 17:34:27 2017 -0700

    scsi: lpfc: fix pci hot plug crash in timer management routines
    
    commit 1901762f2ca2747ed269239ca5332a8023ce4e3d upstream.
    
    During pci hot plug, the kernel crashes in timer management code.
    
    The sli4 remove_one handler is not stoping the timers as it starts to
    remove the port so that it can be swapped.
    
    Fix: Stop the timers early in the handler routine.
    
    Note: Fix in SLI-4 only. SLI-3 already stopped the timers properly.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49414387c4ac273cb7e62632269ea3bef2c7f422
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Wed Oct 11 05:54:25 2017 +0900

    scsi: sd_zbc: Fix sd_zbc_read_zoned_characteristics()
    
    commit 4a109032e3941413d8a029f619543fc5aec1d26d upstream.
    
    The three values starting at byte 8 of the Zoned Block Device
    Characteristics VPD page B6h are 32 bits values, not 64bits. So use
    get_unaligned_be32() to retrieve the values and not get_unaligned_be64()
    
    Fixes: 89d947561077 ("sd: Implement support for ZBC devices")
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Bart Van Assche <Bart.VanAssche@wdc.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 645fbe74f18409fcafca73763812190e077d2174
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Nov 6 11:59:05 2017 -0800

    scsi: qla2xxx: Suppress a kernel complaint in qla_init_base_qpair()
    
    commit 8653188763b56e0bcbdcab30cc7b059672c900ac upstream.
    
    Avoid that the following is reported while loading the qla2xxx
    kernel module:
    
    BUG: using smp_processor_id() in preemptible [00000000] code: modprobe/783
    caller is debug_smp_processor_id+0x17/0x20
    CPU: 7 PID: 783 Comm: modprobe Not tainted 4.14.0-rc8-dbg+ #2
    Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011
    Call Trace:
     dump_stack+0x8e/0xce
     check_preemption_disabled+0xe3/0xf0
     debug_smp_processor_id+0x17/0x20
     qla2x00_probe_one+0xf43/0x26c0 [qla2xxx]
     pci_device_probe+0xca/0x140
     driver_probe_device+0x2e2/0x440
     __driver_attach+0xa3/0xe0
     bus_for_each_dev+0x5f/0x90
     driver_attach+0x19/0x20
     bus_add_driver+0x1c0/0x260
     driver_register+0x5b/0xd0
     __pci_register_driver+0x63/0x70
     qla2x00_module_init+0x1d6/0x222 [qla2xxx]
     do_one_initcall+0x3c/0x163
     do_init_module+0x55/0x1eb
     load_module+0x20a2/0x2890
     SYSC_finit_module+0xd7/0xf0
     SyS_finit_module+0x9/0x10
     entry_SYSCALL_64_fastpath+0x23/0xc2
    
    Fixes: commit 8abfa9e22683 ("scsi: qla2xxx: Add function call to qpair for door bell")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Quinn Tran <quinn.tran@cavium.com>
    Cc: Himanshu Madhani <himanshu.madhani@cavium.com>
    Acked-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5c87f23a703ac257134ac77f7902d0cc10d0a09
Author: Tuomas Tynkkynen <tuomas@tuxera.com>
Date:   Wed Sep 6 17:59:08 2017 +0300

    net/9p: Switch to wait_event_killable()
    
    commit 9523feac272ccad2ad8186ba4fcc89103754de52 upstream.
    
    Because userspace gets Very Unhappy when calls like stat() and execve()
    return -EINTR on 9p filesystem mounts. For instance, when bash is
    looking in PATH for things to execute and some SIGCHLD interrupts
    stat(), bash can throw a spurious 'command not found' since it doesn't
    retry the stat().
    
    In practice, hitting the problem is rare and needs a really
    slow/bogged down 9p server.
    
    Signed-off-by: Tuomas Tynkkynen <tuomas@tuxera.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b178968f557219ae359cbd6c12d84f159038a38d
Author: Tuomas Tynkkynen <tuomas@tuxera.com>
Date:   Wed Sep 6 17:59:07 2017 +0300

    fs/9p: Compare qid.path in v9fs_test_inode
    
    commit 8ee031631546cf2f7859cc69593bd60bbdd70b46 upstream.
    
    Commit fd2421f54423 ("fs/9p: When doing inode lookup compare qid details
    and inode mode bits.") transformed v9fs_qid_iget() to use iget5_locked()
    instead of iget_locked(). However, the test() callback is not checking
    fid.path at all, which means that a lookup in the inode cache can now
    accidentally locate a completely wrong inode from the same inode hash
    bucket if the other fields (qid.type and qid.version) match.
    
    Fixes: fd2421f54423 ("fs/9p: When doing inode lookup compare qid details and inode mode bits.")
    Reviewed-by: Latchesar Ionkov <lucho@ionkov.net>
    Signed-off-by: Tuomas Tynkkynen <tuomas@tuxera.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8319b3bbc296db662736b5c00ff79dccafa19a0
Author: Tuomas Tynkkynen <tuomas@tuxera.com>
Date:   Sun Nov 19 11:28:43 2017 +0200

    9p: Fix missing commas in mount options
    
    commit 61b272c3aa170b3e461b8df636407b29f35f98eb upstream.
    
    Since commit c4fac9100456 ("9p: Implement show_options"), the mount
    options of 9p filesystems are printed out with some missing commas
    between the individual options:
    
    p9-scratch on /mnt/scratch type 9p (rw,dirsync,loose,access=clienttrans=virtio)
    
    Add them back.
    
    Fixes: c4fac9100456 ("9p: Implement show_options")
    Signed-off-by: Tuomas Tynkkynen <tuomas@tuxera.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 357621bca2cb346513d7f4d8f57edb53bd7bbe44
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sun Sep 24 18:36:44 2017 -0400

    fix a page leak in vhost_scsi_iov_to_sgl() error recovery
    
    commit 11d49e9d089ccec81be87c2386dfdd010d7f7f6e upstream.
    
    we are advancing sg as we go, so the pages we need to drop in
    case of error are *before* the current sg.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04dd27af8ea24db24d0777a9ef3259621f32d6f5
Author: Joakim Tjernlund <joakim.tjernlund@infinera.com>
Date:   Wed Oct 11 12:40:55 2017 +0200

    mfd: lpc_ich: Avoton/Rangeley uses SPI_BYT method
    
    commit 07d70913dce59f3c8e5d0ca76250861158a9ca6c upstream.
    
    Avoton/Rangeley are based on Silvermount micro-architecture, like
    Bay Trail, and uses the INTEL_SPI_BYT method to drive SPI.
    
    Signed-off-by: Joakim Tjernlund <joakim.tjernlund@infinera.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79e019f2a539a4ff25327a3831c7c74d0c73c196
Author: Maxime Ripard <mripard@kernel.org>
Date:   Thu Nov 9 10:39:24 2017 +0100

    ASoC: sun8i-codec: Set the BCLK divider
    
    commit 316b7758c998fb13371d14bb6c9e45ab129c19a7 upstream.
    
    While the current code was reporting to be able to work in master mode, it
    failed to do so because the BCLK divider wasn't programmed, meaning that
    the BCLK would run at the PLL's frequency no matter the sample rate.
    
    It was obviously a bit too fast.
    
    Add support to retrieve the divider to use, and set it. Since our PLL is
    not always able to generate a perfect multiple of the sample rate, we'll
    have to choose the closest divider that matches our setup.
    
    Fixes: 36c684936fae ("ASoC: Add sun8i digital audio codec")
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eca496d8fe4bcad503e61dd4510907478ce00118
Author: Maxime Ripard <mripard@kernel.org>
Date:   Wed Nov 8 16:47:10 2017 +0100

    ASoC: sun8i-codec: Fix left and right channels inversion
    
    commit 18c1bf35c1c09bca05cf70bc984a4764e0b0372b upstream.
    
    Since its introduction, the codec had an inversion of the left and right
    channels. It turned out to be pretty simple as it appears that the codec
    doesn't have the same polarity on the LRCK signal than the I2S block.
    
    Fix this by inverting our bit value for the LRCK inversion.
    
    Fixes: 36c684936fae ("ASoC: Add sun8i digital audio codec")
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0bc4abfb872532fd567397ed414b3336f6df7971
Author: Maxime Ripard <mripard@kernel.org>
Date:   Wed Nov 8 16:47:08 2017 +0100

    ASoC: sun8i-codec: Invert Master / Slave condition
    
    commit 560bfe774f058e97596f30ff71cffdac52b72914 upstream.
    
    The current code had the condition backward when checking if the codec
    should be running in slave or master mode.
    
    Fix it, and make the comment a bit more readable.
    
    Fixes: 36c684936fae ("ASoC: Add sun8i digital audio codec")
    Signed-off-by: Maxime Ripard <maxime.ripard@free-electrons.com>
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b177556318a731878a1e9e8a9bb28b98f7bc832c
Author: Kailang Yang <kailang@realtek.com>
Date:   Wed Nov 22 15:21:32 2017 +0800

    ALSA: hda/realtek - Fix ALC700 family no sound issue
    
    commit 2d7fe6185722b0817bb345f62ab06b76a7b26542 upstream.
    
    It maybe the typo for ALC700 support patch.
    To fix the bit value on this patch.
    
    Fixes: 6fbae35a3170 ("ALSA: hda/realtek - Add support for new codecs ALC700/ALC701/ALC703")
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 665000d9507ac332b7dede78fb3f5dd7b6f77177
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 22 12:34:56 2017 +0100

    ALSA: hda - Fix yet remaining issue with vmaster 0dB initialization
    
    commit d6c0615f510bc1ee26cfb2b9a3343ac99b9c46fb upstream.
    
    The previous fix for addressing the breakage in vmaster slave
    initialization, commit a91d66129fb9 ("ALSA: hda - Fix incorrect TLV
    callback check introduced during set_fs() removal"), introduced a new
    helper to process over each slave kctl.  However, this helper passes
    only the original kctl, not the virtual slave kctl.  As a result,
    HD-audio driver (which is the only user so far) couldn't initialize
    the slave correctly because it's trying to update the value directly
    with the original kctl, not with the mapped kctl.
    
    This patch fixes the situation again by passing both the mapped slaved
    and original slave kctls to the function.  Luckily there is a single
    caller as of now, so changing the call signature is no big matter.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=197959
    Fixes: a91d66129fb9 ("ALSA: hda - Fix incorrect TLV callback check introduced during set_fs() removal")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ee1a8cf61714a960f7286d07890499553ea28e0
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Nov 17 12:08:40 2017 +0100

    ALSA: hda: Fix too short HDMI/DP chmap reporting
    
    commit c2432466f583cb719b35a41e757da587d9ab1d00 upstream.
    
    We got a regression report about the HD-audio HDMI chmap, where some
    surround channels are reported as UNKNOWN.  The git bisection pointed
    the culprit at the commit 9b3dc8aa3fb1 ("ALSA: hda - Register chmap
    obj as priv data instead of codec").  The story behind scene is like
    this:
    
    - While moving the code out of the legacy HDA to the HDA common place,
      the patch modifies the code to obtain the chmap array indirectly in
      a byte array, and it expands it to kctl value array.
    - At the latter operation, the size of the array is wrongly passed by
      sizeof() to the pointer.
    - It can be 4 on 32bit arch, thus too short for 6+ channels.
      (And that's the reason why it didn't hit other persons; it's 8 on
      64bit arch, thus it's usually enough.)
    
    The code was further changed meanwhile, but the problem persisted.
    Let's fix it by correctly evaluating the array size.
    
    Fixes: 9b3dc8aa3fb1 ("ALSA: hda - Register chmap obj as priv data instead of codec")
    Reported-by: VDR User <user.vdr@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 072c5925f867ecf3b1567f898abe7ace6b283079
Author: Kailang Yang <kailang@realtek.com>
Date:   Wed Nov 8 15:28:33 2017 +0800

    ALSA: hda/realtek - Fix ALC275 no sound issue
    
    commit 3aabf94c2d95fe465d5fa8590113d1c1f7d8333d upstream.
    
    Sound works after a cold boot but not after a reboot from windows.
    This patch will solve this issue. This is relation with Class-D power control.
    
    [ The bug was reported in Bugzilla below for Sony VAIO SVS13A1C5E
      -- tiwai]
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=197737
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6352ec905f914143ca80ea68b8cbf30f6ae27aa3
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 21 16:36:11 2017 +0100

    ALSA: timer: Remove kernel warning at compat ioctl error paths
    
    commit 3d4e8303f2c747c8540a0a0126d0151514f6468b upstream.
    
    Some timer compat ioctls have NULL checks of timer instance with
    snd_BUG_ON() that bring up WARN_ON() when the debug option is set.
    Actually the condition can be met in the normal situation and it's
    confusing and bad to spew kernel warnings with stack trace there.
    Let's remove snd_BUG_ON() invocation and replace with the simple
    checks.  Also, correct the error code to EBADFD to follow the native
    ioctl error handling.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47f25441ffcfb262b83ec8acc7d94eddc4727014
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 21 17:28:06 2017 +0100

    ALSA: usb-audio: Add sanity checks in v2 clock parsers
    
    commit 0a62d6c966956d77397c32836a5bbfe3af786fc1 upstream.
    
    The helper functions to parse and look for the clock source, selector
    and multiplier unit may return the descriptor with a too short length
    than required, while there is no sanity check in the caller side.
    Add some sanity checks in the parsers, at least, to guarantee the
    given descriptor size, for avoiding the potential crashes.
    
    Fixes: 79f920fbff56 ("ALSA: usb-audio: parse clock topology of UAC2 devices")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f7873c9945dd026e20d006dd18b75b8f05cdb5a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 21 17:00:32 2017 +0100

    ALSA: usb-audio: Fix potential out-of-bound access at parsing SU
    
    commit f658f17b5e0e339935dca23e77e0f3cad591926b upstream.
    
    The usb-audio driver may trigger an out-of-bound access at parsing a
    malformed selector unit, as it checks the header length only after
    evaluating bNrInPins field, which can be already above the given
    length.  Fix it by adding the length check beforehand.
    
    Fixes: 99fc86450c43 ("ALSA: usb-mixer: parse descriptors with structs")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a0e3e553e0dfcabd7b5928f33352c0559afeb75
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 21 16:55:51 2017 +0100

    ALSA: usb-audio: Add sanity checks to FE parser
    
    commit d937cd6790a2bef2d07b500487646bd794c039bb upstream.
    
    When the usb-audio descriptor contains the malformed feature unit
    description with a too short length, the driver may access
    out-of-bounds.  Add a sanity check of the header size at the beginning
    of parse_audio_feature_unit().
    
    Fixes: 23caaf19b11e ("ALSA: usb-mixer: Add support for Audio Class v2.0")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27180144e50dccd03979469c3d714cad4815aa04
Author: Henrik Eriksson <henrik.eriksson@axis.com>
Date:   Tue Nov 21 09:29:28 2017 +0100

    ALSA: pcm: update tstamp only if audio_tstamp changed
    
    commit 20e3f985bb875fea4f86b04eba4b6cc29bfd6b71 upstream.
    
    commit 3179f6200188 ("ALSA: core: add .get_time_info") had a side effect
    of changing the behaviour of the PCM runtime tstamp.  Prior to this
    change tstamp was not updated by snd_pcm_update_hw_ptr0() unless the
    hw_ptr had moved, after this change tstamp was always updated.
    
    For an application using alsa-lib, doing snd_pcm_readi() followed by
    snd_pcm_status() to estimate the age of the read samples by subtracting
    status->avail * [sample rate] from status->tstamp this change degraded
    the accuracy of the estimate on devices where the pcm hw does not
    provide a granular hw_ptr, e.g., devices using
    soc-generic-dmaengine-pcm.c and a dma-engine with residue_granularity
    DMA_RESIDUE_GRANULARITY_DESCRIPTOR.  The accuracy of the estimate
    depended on the latency between the PCM hw completing a period and the
    driver called snd_pcm_period_elapsed() to notify ALSA core, typically
    determined by interrupt handling latency.  After the change the accuracy
    of the estimate depended on the latency between the PCM hw completing a
    period and the application calling snd_pcm_status(), determined by the
    scheduling of the application process.  The maximum error of the
    estimate is one period length in both cases, but the error average and
    variance is smaller when it depends on interrupt latency.
    
    Instead of always updating tstamp, update it only if audio_tstamp
    changed.
    
    Fixes: 3179f6200188 ("ALSA: core: add .get_time_info")
    Suggested-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Henrik Eriksson <henrik.eriksson@axis.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22e5190899e8d159fe59e0c0e3b9a1085ee5d4e8
Author: Ross Zwisler <zwisler@kernel.org>
Date:   Thu Oct 12 11:54:08 2017 -0400

    ext4: prevent data corruption with journaling + DAX
    
    commit e9072d859df3e0f2c3ba450f0d1739595c2d5d13 upstream.
    
    The current code has the potential for data corruption when changing an
    inode's journaling mode, as that can result in a subsequent unsafe change
    in S_DAX.
    
    I've captured an instance of this data corruption in the following fstest:
    
    https://patchwork.kernel.org/patch/9948377/
    
    Prevent this data corruption from happening by disallowing changes to the
    journaling mode if the '-o dax' mount option was used.  This means that for
    a given filesystem we could have a mix of inodes using either DAX or
    data journaling, but whatever state the inodes are in will be held for the
    duration of the mount.
    
    Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 713cb65003f1d1038d211606871b12ff555fb3f3
Author: Ross Zwisler <zwisler@kernel.org>
Date:   Thu Oct 12 11:52:34 2017 -0400

    ext4: prevent data corruption with inline data + DAX
    
    commit 559db4c6d784ceedc2a5418ced4d357cb843e221 upstream.
    
    If an inode has inline data it is currently prevented from using DAX by a
    check in ext4_set_inode_flags().  When the inode grows inline data via
    ext4_create_inline_data() or removes its inline data via
    ext4_destroy_inline_data_nolock(), the value of S_DAX can change.
    
    Currently these changes are unsafe because we don't hold off page faults
    and I/O, write back dirty radix tree entries and invalidate all mappings.
    There are also issues with mm-level races when changing the value of S_DAX,
    as well as issues with the VM_MIXEDMAP flag:
    
    https://www.spinics.net/lists/linux-xfs/msg09859.html
    
    The unsafe transition of S_DAX can reliably cause data corruption, as shown
    by the following fstest:
    
    https://patchwork.kernel.org/patch/9948381/
    
    Fix this issue by preventing the DAX mount option from being used on
    filesystems that were created to support inline data.  Inline data is an
    option given to mkfs.ext4.
    
    Signed-off-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b891e716b8f89b87e1da4976047810aeaf3bd59f
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Fri Oct 6 23:09:55 2017 -0400

    ext4: fix interaction between i_size, fallocate, and delalloc after a crash
    
    commit 51e3ae81ec58e95f10a98ef3dd6d7bce5d8e35a2 upstream.
    
    If there are pending writes subject to delayed allocation, then i_size
    will show size after the writes have completed, while i_disksize
    contains the value of i_size on the disk (since the writes have not
    been persisted to disk).
    
    If fallocate(2) is called with the FALLOC_FL_KEEP_SIZE flag, either
    with or without the FALLOC_FL_ZERO_RANGE flag set, and the new size
    after the fallocate(2) is between i_size and i_disksize, then after a
    crash, if a journal commit has resulted in the changes made by the
    fallocate() call to be persisted after a crash, but the delayed
    allocation write has not resolved itself, i_size would not be updated,
    and this would cause the following e2fsck complaint:
    
    Inode 12, end of extent exceeds allowed value
            (logical block 33, physical block 33441, len 7)
    
    This can only take place on a sparse file, where the fallocate(2) call
    is allocating blocks in a range which is before a pending delayed
    allocation write which is extending i_size.  Since this situation is
    quite rare, and the window in which the crash must take place is
    typically < 30 seconds, in practice this condition will rarely happen.
    
    Nevertheless, it can be triggered in testing, and in particular by
    xfstests generic/456.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reported-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 496e65f64903a3ad420a07466c5d008432136985
Author: Rameshwar Prasad Sahu <rsahu@apm.com>
Date:   Thu Nov 2 16:31:07 2017 +0530

    ata: fixes kernel crash while tracing ata_eh_link_autopsy event
    
    commit f1601113ddc0339a745e702f4fb1ca37d4875e65 upstream.
    
    When tracing ata link error event, the kernel crashes when the disk is
    removed due to NULL pointer access by trace_ata_eh_link_autopsy API.
    This occurs as the dev is NULL when the disk disappeared. This patch
    fixes this crash by calling trace_ata_eh_link_autopsy only if "dev"
    is not NULL.
    
    v2 changes:
     Removed direct passing "link" pointer instead of "dev" in trace API.
    
    Signed-off-by: Rameshwar Prasad Sahu <rsahu@apm.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Fixes: 255c03d15a29 ("libata: Add tracepoints")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f5be981622190fa85ba3eed31e974d73a2cae71
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon Oct 30 21:14:56 2017 +0100

    fsnotify: fix pinning group in fsnotify_prepare_user_wait()
    
    commit 9a31d7ad997f55768c687974ce36b759065b49e5 upstream.
    
    Blind increment of group's user_waits is not enough, we could be far enough
    in the group's destruction that it isn't taken into account (i.e. grabbing
    the mark ref afterwards doesn't guarantee that it was the ref coming from
    the _group_ that was grabbed).
    
    Instead we need to check (under lock) that the mark is still attached to
    the group after having obtained a ref to the mark.  If not, skip it.
    
    Reviewed-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Fixes: 9385a84d7e1f ("fsnotify: Pass fsnotify_iter_info into handle_event handler")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e9569f05ea699e2453f25fed562b3cb969b8aef
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon Oct 30 21:14:55 2017 +0100

    fsnotify: pin both inode and vfsmount mark
    
    commit 0d6ec079d6aaa098b978d6395973bb027c752a03 upstream.
    
    We may fail to pin one of the marks in fsnotify_prepare_user_wait() when
    dropping the srcu read lock, resulting in use after free at the next
    iteration.
    
    Solution is to store both marks in iter_info instead of just the one we'll
    be sending the event for.
    
    Reviewed-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Fixes: 9385a84d7e1f ("fsnotify: Pass fsnotify_iter_info into handle_event handler")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47b02dcac666c310705621187557a84f0176d0f9
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon Oct 30 21:14:55 2017 +0100

    fsnotify: clean up fsnotify_prepare/finish_user_wait()
    
    commit 24c20305c7fc8959836211cb8c50aab93ae0e54f upstream.
    
    This patch doesn't actually fix any bug, just paves the way for fixing mark
    and group pinning.
    
    Reviewed-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6ff2fb417898b57e5f81349731855763260b266
Author: Shaohua Li <shli@fb.com>
Date:   Mon Oct 16 19:03:44 2017 -0700

    md/bitmap: revert a patch
    
    commit 938b533d479e7428b7fa1b8179283646d2e2c53d upstream.
    
    This reverts commit 8031c3ddc70a. That patches doesn't work well if PAGE_SIZE >
    4k. We will fix the original problem with a different approach.
    
    Fix: 8031c3ddc70a(md/bitmap: copy correct data for bitmap super)
    Reported-by: Joshua Kinard <kumba@gentoo.org>
    Suggested-by: Neil Brown <neilb@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5912d9ca14f93b7f10bdf75067d1d9cef4c161a6
Author: Loic Poulain <loic.poulain@linaro.org>
Date:   Tue Sep 5 12:26:03 2017 +0200

    Bluetooth: btqcomsmd: Add support for BD address setup
    
    commit 6e518111060c2290427d79c43d4add9600ad852b upstream.
    
    This patch implements the hdev setup function since wcnss-bt does not have
    persistent memory to store an allocated BD address. The device is therefore
    marked as unconfigured if no BD address has been previously retrieved.
    
    Signed-off-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cd7a7aa01203bc4aebf6b89e09d39148f9b0bce
Author: Artur Paszkiewicz <artur.paszkiewicz@intel.com>
Date:   Thu Oct 26 15:56:54 2017 +0200

    md: don't check MD_SB_CHANGE_CLEAN in md_allow_write
    
    commit b90f6ff080c52e2f05364210733df120e3c4e597 upstream.
    
    Only MD_SB_CHANGE_PENDING should be used to wait for transition from
    clean to dirty. Checking also MD_SB_CHANGE_CLEAN is unnecessary and can
    race with e.g. md_do_sync(). This sporadically causes a hang when
    changing consistency policy during resync:
    
    INFO: task mdadm:6183 blocked for more than 30 seconds.
          Not tainted 4.14.0-rc3+ #391
    "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    mdadm           D12752  6183   6022 0x00000000
    Call Trace:
     __schedule+0x93f/0x990
     schedule+0x6b/0x90
     md_allow_write+0x100/0x130 [md_mod]
     ? do_wait_intr_irq+0x90/0x90
     resize_stripes+0x3a/0x5b0 [raid456]
     ? kernfs_fop_write+0xbe/0x180
     raid5_change_consistency_policy+0xa6/0x200 [raid456]
     consistency_policy_store+0x2e/0x70 [md_mod]
     md_attr_store+0x90/0xc0 [md_mod]
     sysfs_kf_write+0x42/0x50
     kernfs_fop_write+0x119/0x180
     __vfs_write+0x28/0x110
     ? rcu_sync_lockdep_assert+0x12/0x60
     ? __sb_start_write+0x15a/0x1c0
     ? vfs_write+0xa3/0x1a0
     vfs_write+0xb4/0x1a0
     SyS_write+0x49/0xa0
     entry_SYSCALL_64_fastpath+0x18/0xad
    
    Fixes: 2214c260c72b ("md: don't return -EAGAIN in md_allow_write for external metadata arrays")
    Signed-off-by: Artur Paszkiewicz <artur.paszkiewicz@intel.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 459aad50a56bfca28cc41408448d08abdd7e17ae
Author: NeilBrown <neilb@suse.com>
Date:   Thu Oct 5 16:23:16 2017 +1100

    md: fix deadlock error in recent patch.
    
    commit d47c8ad261f787af22a220ffcc2d07afba809223 upstream.
    
    A recent patch aimed to cause md_write_start() to fail (rather than
    block) when the mddev was suspending, so as to avoid deadlocks.
    Unfortunately the test in wait_event() was wrong, and it didn't change
    behaviour at all.
    
    We wait_event() must wait until the metadata is written OR the array is
    suspending.
    
    Fixes: cc27b0c78c79 ("md: fix deadlock between mddev_suspend() and md_write_start()")
    Reported-by: Xiao Ni <xni@redhat.com>
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55e357bc316bc3f46e96bc55415cb7d512c8db6f
Author: Thomas Backlund <tmb@mageia.org>
Date:   Tue Nov 14 12:37:51 2017 +0200

    iwlwifi: fix firmware names for 9000 and A000 series hw
    
    commit c2c48ddfc8b03b9ecb51d2832b586497b37531bc upstream.
    
    iwlwifi 9000 and a0000 series hw contains an extra dash in firmware
    file name as seeen in modinfo output for kernel 4.14:
    
    firmware:       iwlwifi-9260-th-b0-jf-b0--34.ucode
    firmware:       iwlwifi-9260-th-a0-jf-a0--34.ucode
    firmware:       iwlwifi-9000-pu-a0-jf-b0--34.ucode
    firmware:       iwlwifi-9000-pu-a0-jf-a0--34.ucode
    firmware:       iwlwifi-QuQnj-a0-hr-a0--34.ucode
    firmware:       iwlwifi-QuQnj-a0-jf-b0--34.ucode
    firmware:       iwlwifi-QuQnj-f0-hr-a0--34.ucode
    firmware:       iwlwifi-Qu-a0-jf-b0--34.ucode
    firmware:       iwlwifi-Qu-a0-hr-a0--34.ucode
    
    Fix that by dropping the extra adding of '"-"'.
    
    Signed-off-by: Thomas Backlund <tmb@mageia.org>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 404dcc55b001e2d56d75fa0ea65635963f16fe68
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Nov 6 14:55:35 2017 +0100

    rtlwifi: fix uninitialized rtlhal->last_suspend_sec time
    
    commit 3f2a162fab15aee243178b5308bb5d1206fc4043 upstream.
    
    We set rtlhal->last_suspend_sec to an uninitialized stack variable,
    but unfortunately gcc never warned about this, I only found it
    while working on another patch. I opened a gcc bug for this.
    
    Presumably the value of rtlhal->last_suspend_sec is not all that
    important, but it does get used, so we probably want the
    patch backported to stable kernels.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=82839
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f724960c581097e6a84a2f4b9c77a9f17a372cc
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Thu Sep 14 13:17:44 2017 -0500

    rtlwifi: rtl8192ee: Fix memory leak when loading firmware
    
    commit 519ce2f933fa14acf69d5c8cabcc18711943d629 upstream.
    
    In routine rtl92ee_set_fw_rsvdpagepkt(), the driver allocates an skb, but
    never calls rtl_cmd_send_packet(), which will free the buffer. All other
    rtlwifi drivers perform this operation correctly.
    
    This problem has been in the driver since it was included in the kernel.
    Fortunately, each firmware load only leaks 4 buffers, which likely
    explains why it has not previously been detected.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 584f0bb5681a1ed7e05b30aabab2764d55cbc3cb
Author: Andrew Elble <aweits@rit.edu>
Date:   Fri Nov 3 14:06:31 2017 -0400

    nfsd: deal with revoked delegations appropriately
    
    commit 95da1b3a5aded124dd1bda1e3cdb876184813140 upstream.
    
    If a delegation has been revoked by the server, operations using that
    delegation should error out with NFS4ERR_DELEG_REVOKED in the >4.1
    case, and NFS4ERR_BAD_STATEID otherwise.
    
    The server needs NFSv4.1 clients to explicitly free revoked delegations.
    If the server returns NFS4ERR_DELEG_REVOKED, the client will do that;
    otherwise it may just forget about the delegation and be unable to
    recover when it later sees SEQ4_STATUS_RECALLABLE_STATE_REVOKED set on a
    SEQUENCE reply.  That can cause the Linux 4.1 client to loop in its
    stage manager.
    
    Signed-off-by: Andrew Elble <aweits@rit.edu>
    Reviewed-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5756707370240737fc8fca120c6e2b81c6b348c1
Author: NeilBrown <neilb@suse.com>
Date:   Fri Aug 25 17:34:41 2017 +1000

    NFS: revalidate "." etc correctly on "open".
    
    commit b688741cb06695312f18b730653d6611e1bad28d upstream.
    
    For correct close-to-open semantics, NFS must validate
    the change attribute of a directory (or file) on open.
    
    Since commit ecf3d1f1aa74 ("vfs: kill FS_REVAL_DOT by adding a
    d_weak_revalidate dentry op"), open() of "." or a path ending ".." is
    not revalidated reliably (except when that direct is a mount point).
    
    Prior to that commit, "." was revalidated using nfs_lookup_revalidate()
    which checks the LOOKUP_OPEN flag and forces revalidation if the flag is
    set.
    Since that commit, nfs_weak_revalidate() is used for NFSv3 (which
    ignores the flags) and nothing is used for NFSv4.
    
    This is fixed by using nfs_lookup_verify_inode() in
    nfs_weak_revalidate().  This does the revalidation exactly when needed.
    Also, add a definition of .d_weak_revalidate for NFSv4.
    
    The incorrect behavior is easily demonstrated by running "echo *" in
    some non-mountpoint NFS directory while watching network traffic.
    Without this patch, "echo *" sometimes doesn't produce any traffic.
    With the patch it always does.
    
    Fixes: ecf3d1f1aa74 ("vfs: kill FS_REVAL_DOT by adding a d_weak_revalidate dentry op")
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2deb89453f74c576e145f4fd21664d175daf6bee
Author: Anna Schumaker <Anna.Schumaker@Netapp.com>
Date:   Wed Nov 1 15:48:43 2017 -0400

    NFS: Avoid RCU usage in tracepoints
    
    commit 3944369db701f075092357b511fd9f5755771585 upstream.
    
    There isn't an obvious way to acquire and release the RCU lock during a
    tracepoint, so we can't use the rpc_peeraddr2str() function here.
    Instead, rely on the client's cl_hostname, which should have similar
    enough information without needing an rcu_dereference().
    
    Reported-by: Dave Jones <davej@codemonkey.org.uk>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aed1a43399c78d7c329ec39b9a4d352216c40a16
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Sun Nov 5 15:45:22 2017 -0500

    nfs: Fix ugly referral attributes
    
    commit c05cefcc72416a37eba5a2b35f0704ed758a9145 upstream.
    
    Before traversing a referral and performing a mount, the mounted-on
    directory looks strange:
    
    dr-xr-xr-x. 2 4294967294 4294967294 0 Dec 31  1969 dir.0
    
    nfs4_get_referral is wiping out any cached attributes with what was
    returned via GETATTR(fs_locations), but the bit mask for that
    operation does not request any file attributes.
    
    Retrieve owner and timestamp information so that the memcpy in
    nfs4_get_referral fills in more attributes.
    
    Changes since v1:
    - Don't request attributes that the client unconditionally replaces
    - Request only MOUNTED_ON_FILEID or FILEID attribute, not both
    - encode_fs_locations() doesn't use the third bitmask word
    
    Fixes: 6b97fd3da1ea ("NFSv4: Follow a referral")
    Suggested-by: Pradeep Thomas <pradeepthomas@gmail.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57f3c05d030d38355daa001ac28a4c37238e2eb8
Author: Benjamin Coddington <bcodding@redhat.com>
Date:   Fri Nov 10 06:27:49 2017 -0500

    NFS: Revert "NFS: Move the flock open mode check into nfs_flock()"
    
    commit fcfa447062b2061e11f68b846d61cbfe60d0d604 upstream.
    
    Commit e12937279c8b "NFS: Move the flock open mode check into nfs_flock()"
    changed NFSv3 behavior for flock() such that the open mode must match the
    lock type, however that requirement shouldn't be enforced for flock().
    
    Signed-off-by: Benjamin Coddington <bcodding@redhat.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afaacc000e07b084e37f5b0a0f79ce62a399f0c9
Author: Joshua Watt <jpewhacker@gmail.com>
Date:   Tue Nov 7 16:25:47 2017 -0600

    NFS: Fix typo in nomigration mount option
    
    commit f02fee227e5f21981152850744a6084ff3fa94ee upstream.
    
    The option was incorrectly masking off all other options.
    
    Signed-off-by: Joshua Watt <JPEWhacker@gmail.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d628ac8abdfc0d3631cb76d6fc1f0b80d988b34f
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Fri Oct 13 10:27:45 2017 -0700

    f2fs: expose some sectors to user in inline data or dentry case
    
    commit 5b4267d195dd887c4412e34b5a7365baa741b679 upstream.
    
    If there's some data written through inline data or dentry, we need to shouw
    st_blocks. This fixes reporting zero blocks even though there is small written
    data.
    
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    [Jaegeuk Kim: avoid link file for quotacheck]
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1117628310079bbdd4a0fa951602419f258bead
Author: Josef Bacik <jbacik@fb.com>
Date:   Tue Aug 22 16:00:39 2017 -0400

    btrfs: change how we decide to commit transactions during flushing
    
    commit 996478ca9c460886ac147eb0d00e99841b71d31b upstream.
    
    Nikolay reported that generic/273 was failing currently with ENOSPC.
    Turns out this is because we get to the point where the outstanding
    reservations are greater than the pinned space on the fs.  This is a
    mistake, previously we used the current reservation amount in
    may_commit_transaction, not the entire outstanding reservation amount.
    Fix this to find the minimum byte size needed to make progress in
    flushing, and pass that into may_commit_transaction.  From there we can
    make a smarter decision on whether to commit the transaction or not.
    This fixes the failure in generic/273.
    
    From Nikolai, IOW: when we go to the final stage of deciding whether to
    do trans commit, instead of passing all the reservations from all
    tickets we just pass the reservation for the current ticket. Otherwise,
    in case all reservations exceed pinned space, then we don't commit
    transaction and fail prematurely. Before we passed num_bytes from
    flush_space, where num_bytes was the sum of all pending reserverations,
    but now all we do is take the first ticket and commit the trans if we
    can satisfy that.
    
    Fixes: 957780eb2788 ("Btrfs: introduce ticketed enospc infrastructure")
    Reported-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Tested-by: Nikolay Borisov <nborisov@suse.com>
    [ added Nikolai's comment ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2122d66edb0a2df551eabce64ed364c8eb2d5da
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Oct 19 16:47:48 2017 +0200

    isofs: fix timestamps beyond 2027
    
    commit 34be4dbf87fc3e474a842305394534216d428f5d upstream.
    
    isofs uses a 'char' variable to load the number of years since
    1900 for an inode timestamp. On architectures that use a signed
    char type by default, this results in an invalid date for
    anything beyond 2027.
    
    This changes the function argument to a 'u8' array, which
    is defined the same way on all architectures, and unambiguously
    lets us use years until 2155.
    
    This should be backported to all kernels that might still be
    in use by that date.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dd7dd07e875428e5f05ec55d90472ed6089b08e
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon Oct 30 21:14:56 2017 +0100

    fanotify: fix fsnotify_prepare_user_wait() failure
    
    commit f37650f1c7c71cf5180b43229d13b421d81e7170 upstream.
    
    If fsnotify_prepare_user_wait() fails, we leave the event on the
    notification list.  Which will result in a warning in
    fsnotify_destroy_event() and later use-after-free.
    
    Instead of adding a new helper to remove the event from the list in this
    case, I opted to move the prepare/finish up into fanotify_handle_event().
    
    This will allow these to be moved further out into the generic code later,
    and perhaps let us move to non-sleeping RCU.
    
    Reviewed-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Fixes: 05f0e38724e8 ("fanotify: Release SRCU lock when waiting for userspace response")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c21c3dde403cdf4b9c777e9dbd9399e6eb8e9b6
Author: Greg Edwards <gedwards@ddn.com>
Date:   Tue Oct 24 11:21:48 2017 -0600

    fs: guard_bio_eod() needs to consider partitions
    
    commit 67f2519fe2903c4041c0e94394d14d372fe51399 upstream.
    
    guard_bio_eod() needs to look at the partition capacity, not just the
    capacity of the whole device, when determining if truncation is
    necessary.
    
    [   60.268688] attempt to access beyond end of device
    [   60.268690] unknown-block(9,1): rw=0, want=67103509, limit=67103506
    [   60.268693] buffer_io_error: 2 callbacks suppressed
    [   60.268696] Buffer I/O error on dev md1p7, logical block 4524305, async page read
    
    Fixes: 74d46992e0d9 ("block: replace bi_bdev with a gendisk pointer and partitions index")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Edwards <gedwards@ddn.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9c80881b383df54cd519e10314dce4c47df8b8a
Author: Coly Li <colyli@suse.de>
Date:   Fri Oct 13 16:35:29 2017 -0700

    bcache: check ca->alloc_thread initialized before wake up it
    
    commit 91af8300d9c1d7c6b6a2fd754109e08d4798b8d8 upstream.
    
    In bcache code, sysfs entries are created before all resources get
    allocated, e.g. allocation thread of a cache set.
    
    There is posibility for NULL pointer deference if a resource is accessed
    but which is not initialized yet. Indeed Jorg Bornschein catches one on
    cache set allocation thread and gets a kernel oops.
    
    The reason for this bug is, when bch_bucket_alloc() is called during
    cache set registration and attaching, ca->alloc_thread is not properly
    allocated and initialized yet, call wake_up_process() on ca->alloc_thread
    triggers NULL pointer deference failure. A simple and fast fix is, before
    waking up ca->alloc_thread, checking whether it is allocated, and only
    wake up ca->alloc_thread when it is not NULL.
    
    Signed-off-by: Coly Li <colyli@suse.de>
    Reported-by: Jorg Bornschein <jb@capsec.org>
    Cc: Kent Overstreet <kent.overstreet@gmail.com>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcae2363e26309c8063384706dc1e546caed8a36
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Nov 6 21:57:26 2017 -0800

    libceph: don't WARN() if user tries to add invalid key
    
    commit b11270853fa3654f08d4a6a03b23ddb220512d8d upstream.
    
    The WARN_ON(!key->len) in set_secret() in net/ceph/crypto.c is hit if a
    user tries to add a key of type "ceph" with an invalid payload as
    follows (assuming CONFIG_CEPH_LIB=y):
    
        echo -e -n '\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00' \
            | keyctl padd ceph desc @s
    
    This can be hit by fuzzers.  As this is merely bad input and not a
    kernel bug, replace the WARN_ON() with return -EINVAL.
    
    Fixes: 7af3ea189a9a ("libceph: stop allocating a new cipher on every crypto request")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc6e896836242678cd85252336e33d77039cdff3
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Aug 22 23:41:28 2017 +0300

    eCryptfs: use after free in ecryptfs_release_messaging()
    
    commit db86be3a12d0b6e5c5b51c2ab2a48f06329cb590 upstream.
    
    We're freeing the list iterator so we should be using the _safe()
    version of hlist_for_each_entry().
    
    Fixes: 88b4a07e6610 ("[PATCH] eCryptfs: Public key transport mechanism")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Tyler Hicks <tyhicks@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddf1264ec523c7ac7ae0dcbcaccd03a0a034b1b6
Author: Eric Biggers <ebiggers@google.com>
Date:   Sun Oct 29 06:30:19 2017 -0400

    fscrypt: lock mutex before checking for bounce page pool
    
    commit a0b3bc855374c50b5ea85273553485af48caf2f7 upstream.
    
    fscrypt_initialize(), which allocates the global bounce page pool when
    an encrypted file is first accessed, uses "double-checked locking" to
    try to avoid locking fscrypt_init_mutex.  However, it doesn't use any
    memory barriers, so it's theoretically possible for a thread to observe
    a bounce page pool which has not been fully initialized.  This is a
    classic bug with "double-checked locking".
    
    While "only a theoretical issue" in the latest kernel, in pre-4.8
    kernels the pointer that was checked was not even the last to be
    initialized, so it was easily possible for a crash (NULL pointer
    dereference) to happen.  This was changed only incidentally by the large
    refactor to use fs/crypto/.
    
    Solve both problems in a trivial way that can easily be backported: just
    always take the mutex.  It's theoretically less efficient, but it
    shouldn't be noticeable in practice as the mutex is only acquired very
    briefly once per encrypted file.
    
    Later I'd like to make this use a helper macro like DO_ONCE().  However,
    DO_ONCE() runs in atomic context, so we'd need to add a new macro that
    allows blocking.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f94782668b5ae6ee496aadfdea2055dad610b0d5
Author: Andreas Rohner <andreas.rohner@gmx.net>
Date:   Fri Nov 17 15:29:35 2017 -0800

    nilfs2: fix race condition that causes file system corruption
    
    commit 31ccb1f7ba3cfe29631587d451cf5bb8ab593550 upstream.
    
    There is a race condition between nilfs_dirty_inode() and
    nilfs_set_file_dirty().
    
    When a file is opened, nilfs_dirty_inode() is called to update the
    access timestamp in the inode.  It calls __nilfs_mark_inode_dirty() in a
    separate transaction.  __nilfs_mark_inode_dirty() caches the ifile
    buffer_head in the i_bh field of the inode info structure and marks it
    as dirty.
    
    After some data was written to the file in another transaction, the
    function nilfs_set_file_dirty() is called, which adds the inode to the
    ns_dirty_files list.
    
    Then the segment construction calls nilfs_segctor_collect_dirty_files(),
    which goes through the ns_dirty_files list and checks the i_bh field.
    If there is a cached buffer_head in i_bh it is not marked as dirty
    again.
    
    Since nilfs_dirty_inode() and nilfs_set_file_dirty() use separate
    transactions, it is possible that a segment construction that writes out
    the ifile occurs in-between the two.  If this happens the inode is not
    on the ns_dirty_files list, but its ifile block is still marked as dirty
    and written out.
    
    In the next segment construction, the data for the file is written out
    and nilfs_bmap_propagate() updates the b-tree.  Eventually the bmap root
    is written into the i_bh block, which is not dirty, because it was
    written out in another segment construction.
    
    As a result the bmap update can be lost, which leads to file system
    corruption.  Either the virtual block address points to an unallocated
    DAT block, or the DAT entry will be reused for something different.
    
    The error can remain undetected for a long time.  A typical error
    message would be one of the "bad btree" errors or a warning that a DAT
    entry could not be found.
    
    This bug can be reproduced reliably by a simple benchmark that creates
    and overwrites millions of 4k files.
    
    Link: http://lkml.kernel.org/r/1509367935-3086-2-git-send-email-konishi.ryusuke@lab.ntt.co.jp
    Signed-off-by: Andreas Rohner <andreas.rohner@gmx.net>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Tested-by: Andreas Rohner <andreas.rohner@gmx.net>
    Tested-by: Ryusuke Konishi <konishi.ryusuke@lab.ntt.co.jp>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b7f543793b95fe1d21d520ea5479e72bd11e7af
Author: NeilBrown <neilb@suse.com>
Date:   Fri Nov 17 15:29:13 2017 -0800

    autofs: don't fail mount for transient error
    
    commit ecc0c469f27765ed1e2b967be0aa17cee1a60b76 upstream.
    
    Currently if the autofs kernel module gets an error when writing to the
    pipe which links to the daemon, then it marks the whole moutpoint as
    catatonic, and it will stop working.
    
    It is possible that the error is transient.  This can happen if the
    daemon is slow and more than 16 requests queue up.  If a subsequent
    process tries to queue a request, and is then signalled, the write to
    the pipe will return -ERESTARTSYS and autofs will take that as total
    failure.
    
    So change the code to assess -ERESTARTSYS and -ENOMEM as transient
    failures which only abort the current request, not the whole mountpoint.
    
    It isn't a crash or a data corruption, but having autofs mountpoints
    suddenly stop working is rather inconvenient.
    
    Ian said:
    
    : And given the problems with a half dozen (or so) user space applications
    : consuming large amounts of CPU under heavy mount and umount activity this
    : could happen more easily than we expect.
    
    Link: http://lkml.kernel.org/r/87y3norvgp.fsf@notabene.neil.brown.name
    Signed-off-by: NeilBrown <neilb@suse.com>
    Acked-by: Ian Kent <raven@themaw.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1a14af38a50f714fb32581fcd083b49a28c7d41
Author: Vitaly Wool <vitalywool@gmail.com>
Date:   Fri Nov 17 15:26:16 2017 -0800

    mm/z3fold.c: use kref to prevent page free/compact race
    
    commit 5d03a6613957785e94af7a4a6212ad4af66aa5c2 upstream.
    
    There is a race in the current z3fold implementation between
    do_compact() called in a work queue context and the page release
    procedure when page's kref goes to 0.
    
    do_compact() may be waiting for page lock, which is released by
    release_z3fold_page_locked right before putting the page onto the
    "stale" list, and then the page may be freed as do_compact() modifies
    its contents.
    
    The mechanism currently implemented to handle that (checking the
    PAGE_STALE flag) is not reliable enough.  Instead, we'll use page's kref
    counter to guarantee that the page is not released if its compaction is
    scheduled.  It then becomes compaction function's responsibility to
    decrease the counter and quit immediately if the page was actually
    freed.
    
    Link: http://lkml.kernel.org/r/20171117092032.00ea56f42affbed19f4fcc6c@gmail.com
    Signed-off-by: Vitaly Wool <vitaly.wool@sonymobile.com>
    Cc: <Oleksiy.Avramchenko@sony.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 769bfea594f5edb92b077b50ee58866a989ca2bb
Author: Stanislaw Gruszka <sgruszka@redhat.com>
Date:   Thu Nov 9 11:59:24 2017 +0100

    rt2x00usb: mark device removed when get ENOENT usb error
    
    commit bfa62a52cad93686bb8d8171ea5288813248a7c6 upstream.
    
    ENOENT usb error mean "specified interface or endpoint does not exist or
    is not enabled". Mark device not present when we encounter this error
    similar like we do with ENODEV error.
    
    Otherwise we can have infinite loop in rt2x00usb_work_rxdone(), because
    we remove and put again RX entries to the queue infinitely.
    
    We can have similar situation when submit urb will fail all the time
    with other error, so we need consider to limit number of entries
    processed by rxdone work. But for now, since the patch fixes
    reproducible soft lockup issue on single processor systems
    and taken ENOENT error meaning, let apply this fix.
    
    Patch adds additional ENOENT check not only in rx kick routine, but
    also on other places where we check for ENODEV error.
    
    Reported-by: Richard Genoud <richard.genoud@gmail.com>
    Debugged-by: Richard Genoud <richard.genoud@gmail.com>
    Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com>
    Tested-by: Richard Genoud <richard.genoud@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 085d66519c3e643f15b91ed0ece025200a2257a5
Author: Aleksandar Markovic <aleksandar.markovic@mips.com>
Date:   Thu Nov 2 12:13:58 2017 +0100

    MIPS: math-emu: Fix final emulation phase for certain instructions
    
    commit 409fcace9963c1e8d2cb0f7ac62e8b34d47ef979 upstream.
    
    Fix final phase of <CLASS|MADDF|MSUBF|MAX|MIN|MAXA|MINA>.<D|S>
    emulation. Provide proper generation of SIGFPE signal and updating
    debugfs FP exception stats in cases of any exception flags set in
    preceding phases of emulation.
    
    CLASS.<D|S> instruction may generate "Unimplemented Operation" FP
    exception. <MADDF|MSUBF>.<D|S> instructions may generate "Inexact",
    "Unimplemented Operation", "Invalid Operation", "Overflow", and
    "Underflow" FP exceptions. <MAX|MIN|MAXA|MINA>.<D|S> instructions
    can generate "Unimplemented Operation" and "Invalid Operation" FP
    exceptions.
    
    The proper final processing of the cases when any FP exception
    flag is set is achieved by replacing "break" statement with "goto
    copcsr" statement. With such solution, this patch brings the final
    phase of emulation of the above instructions consistent with the
    one corresponding to the previously implemented emulation of other
    related FPU instructions (ADD, SUB, etc.).
    
    Fixes: 38db37ba069f ("MIPS: math-emu: Add support for the MIPS R6 CLASS FPU instruction")
    Fixes: e24c3bec3e8e ("MIPS: math-emu: Add support for the MIPS R6 MADDF FPU instruction")
    Fixes: 83d43305a1df ("MIPS: math-emu: Add support for the MIPS R6 MSUBF FPU instruction")
    Fixes: a79f5f9ba508 ("MIPS: math-emu: Add support for the MIPS R6 MAX{, A} FPU instruction")
    Fixes: 4e9561b20e2f ("MIPS: math-emu: Add support for the MIPS R6 MIN{, A} FPU instruction")
    Signed-off-by: Aleksandar Markovic <aleksandar.markovic@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Douglas Leung <douglas.leung@mips.com>
    Cc: Goran Ferenc <goran.ferenc@mips.com>
    Cc: "Maciej W. Rozycki" <macro@imgtec.com>
    Cc: Miodrag Dinic <miodrag.dinic@mips.com>
    Cc: Paul Burton <paul.burton@mips.com>
    Cc: Petar Jovanovic <petar.jovanovic@mips.com>
    Cc: Raghu Gandham <raghu.gandham@mips.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17581/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d187fa8e9b56a8516291df055d956ca32d453ee
Author: Mirko Parthey <mirko.parthey@web.de>
Date:   Thu May 18 21:30:03 2017 +0200

    MIPS: BCM47XX: Fix LED inversion for WRT54GSv1
    
    commit 56a46acf62af5ba44fca2f3f1c7c25a2d5385b19 upstream.
    
    The WLAN LED on the Linksys WRT54GSv1 is active low, but the software
    treats it as active high. Fix the inverted logic.
    
    Fixes: 7bb26b169116 ("MIPS: BCM47xx: Fix LEDs on WRT54GS V1.0")
    Signed-off-by: Mirko Parthey <mirko.parthey@web.de>
    Looks-ok-by: RafaÅ MiÅecki <zajec5@gmail.com>
    Cc: Hauke Mehrtens <hauke@hauke-m.de>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/16071/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc3aceed47c35bfc5bcf67efea75c1109c7f6e20
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Tue Nov 7 19:09:20 2017 +0000

    MIPS: Fix an n32 core file generation regset support regression
    
    commit 547da673173de51f73887377eb275304775064ad upstream.
    
    Fix a commit 7aeb753b5353 ("MIPS: Implement task_user_regset_view.")
    regression, then activated by commit 6a9c001b7ec3 ("MIPS: Switch ELF
    core dumper to use regsets.)", that caused n32 processes to dump o32
    core files by failing to set the EF_MIPS_ABI2 flag in the ELF core file
    header's `e_flags' member:
    
    $ file tls-core
    tls-core: ELF 32-bit MSB executable, MIPS, N32 MIPS64 rel2 version 1 (SYSV), [...]
    $ ./tls-core
    Aborted (core dumped)
    $ file core
    core: ELF 32-bit MSB core file MIPS, MIPS-I version 1 (SYSV), SVR4-style
    $
    
    Previously the flag was set as the result of a:
    
    statement placed in arch/mips/kernel/binfmt_elfn32.c, however in the
    regset case, i.e. when CORE_DUMP_USE_REGSET is set, ELF_CORE_EFLAGS is
    no longer used by `fill_note_info' in fs/binfmt_elf.c, and instead the
    `->e_flags' member of the regset view chosen is.  We have the views
    defined in arch/mips/kernel/ptrace.c, however only an o32 and an n64
    one, and the latter is used for n32 as well.  Consequently an o32 core
    file is incorrectly dumped from n32 processes (the ELF32 vs ELF64 class
    is chosen elsewhere, and the 32-bit one is correctly selected for n32).
    
    Correct the issue then by defining an n32 regset view and using it as
    appropriate.  Issue discovered in GDB testing.
    
    Fixes: 7aeb753b5353 ("MIPS: Implement task_user_regset_view.")
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Djordje Todorovic <djordje.todorovic@rt-rk.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17617/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43bce9f2eb96e6dd87dbb5850138960a6265b11a
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Sun Nov 5 14:30:52 2017 +0900

    MIPS: dts: remove bogus bcm96358nb4ser.dtb from dtb-y entry
    
    commit 3cad14d56adbf7d621fc5a35db42f3acc0a2d6e8 upstream.
    
    arch/mips/boot/dts/brcm/bcm96358nb4ser.dts does not exist, so
    we cannot build bcm96358nb4ser.dtb .
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Fixes: 695835511f96 ("MIPS: BMIPS: rename bcm96358nb4ser to bcm6358-neufbox4-sercom")
    Acked-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d63534042a1b279ab50b907a4d9bcd5f9d632e98
Author: James Hogan <jhogan@kernel.org>
Date:   Mon Jul 3 23:41:47 2017 +0100

    MIPS: Fix MIPS64 FP save/restore on 32-bit kernels
    
    commit 22b8ba765a726d90e9830ff6134c32b04f12c10f upstream.
    
    32-bit kernels can be configured to support MIPS64, in which case
    neither CONFIG_64BIT or CONFIG_CPU_MIPS32_R* will be set. This causes
    the CP0_Status.FR checks at the point of floating point register save
    and restore to be compiled out, which results in odd FP registers not
    being saved or restored to the task or signal context even when
    CP0_Status.FR is set.
    
    Fix the ifdefs to use CONFIG_CPU_MIPSR2 and CONFIG_CPU_MIPSR6, which are
    enabled for the relevant revisions of either MIPS32 or MIPS64, along
    with some other CPUs such as Octeon (r2), Loongson1 (r2), XLP (r2),
    Loongson 3A R2.
    
    The suspect code originates from commit 597ce1723e0f ("MIPS: Support for
    64-bit FP with O32 binaries") in v3.14, however the code in
    __enable_fpu() was consistent and refused to set FR=1, falling back to
    software FPU emulation. This was suboptimal but should be functionally
    correct.
    
    Commit fcc53b5f6c38 ("MIPS: fpu.h: Allow 64-bit FPU on a 64-bit MIPS R6
    CPU") in v4.2 (and stable tagged back to 4.0) later introduced the bug
    by updating __enable_fpu() to set FR=1 but failing to update the other
    similar ifdefs to enable FR=1 state handling.
    
    Fixes: fcc53b5f6c38 ("MIPS: fpu.h: Allow 64-bit FPU on a 64-bit MIPS R6 CPU")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/16739/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43292e652771658e976dd6e263172b7043cb98f0
Author: James Hogan <jhogan@kernel.org>
Date:   Fri Nov 10 11:46:54 2017 +0000

    MIPS: Fix odd fp register warnings with MIPS64r2
    
    commit c7fd89a6407ea3a44a2a2fa12d290162c42499c4 upstream.
    
    Building 32-bit MIPS64r2 kernels produces warnings like the following
    on certain toolchains (such as GNU assembler 2.24.90, but not GNU
    assembler 2.28.51) since commit 22b8ba765a72 ("MIPS: Fix MIPS64 FP
    save/restore on 32-bit kernels"), due to the exposure of fpu_save_16odd
    from fpu_save_double and fpu_restore_16odd from fpu_restore_double:
    
    arch/mips/kernel/r4k_fpu.S:47: Warning: float register should be even, was 1
    ...
    arch/mips/kernel/r4k_fpu.S:59: Warning: float register should be even, was 1
    ...
    
    This appears to be because .set mips64r2 does not change the FPU ABI to
    64-bit when -march=mips64r2 (or e.g. -march=xlp) is provided on the
    command line on that toolchain, from the default FPU ABI of 32-bit due
    to the -mabi=32. This makes access to the odd FPU registers invalid.
    
    Fix by explicitly changing the FPU ABI with .set fp=64 directives in
    fpu_save_16odd and fpu_restore_16odd, and moving the undefine of fp up
    in asmmacro.h so fp doesn't turn into $30.
    
    Fixes: 22b8ba765a72 ("MIPS: Fix MIPS64 FP save/restore on 32-bit kernels")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Paul Burton <paul.burton@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17656/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e39516d24fb8c3c1bcf1b1b5ba20e0c7093e1512
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Tue Nov 14 15:40:52 2017 -0500

    dm: discard support requires all targets in a table support discards
    
    commit 8a74d29d541cd86569139c6f3f44b2d210458071 upstream.
    
    A DM device with a mix of discard capabilities (due to some underlying
    devices not having discard support) _should_ just return -EOPNOTSUPP for
    the region of the device that doesn't support discards (even if only by
    way of the underlying driver formally not supporting discards).  BUT,
    that does ask the underlying driver to handle something that it never
    advertised support for.  In doing so we're exposing users to the
    potential for a underlying disk driver hanging if/when a discard is
    issued a the device that is incapable and never claimed to support
    discards.
    
    Fix this by requiring that each DM target in a DM table provide discard
    support as a prereq for a DM device to advertise support for discards.
    
    This may cause some configurations that were happily supporting discards
    (even in the face of a mix of discard support) to stop supporting
    discards -- but the risk of users hitting driver hangs, and forced
    reboots, outweighs supporting those fringe mixed discard
    configurations.
    
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bfb87ecb4f7e19c53c31b7beca4ecd9bb906a67
Author: Hou Tao <houtao1@huawei.com>
Date:   Wed Nov 1 15:42:36 2017 +0800

    dm: fix race between dm_get_from_kobject() and __dm_destroy()
    
    commit b9a41d21dceadf8104812626ef85dc56ee8a60ed upstream.
    
    The following BUG_ON was hit when testing repeat creation and removal of
    DM devices:
    
        kernel BUG at drivers/md/dm.c:2919!
        CPU: 7 PID: 750 Comm: systemd-udevd Not tainted 4.1.44
        Call Trace:
         [<ffffffff81649e8b>] dm_get_from_kobject+0x34/0x3a
         [<ffffffff81650ef1>] dm_attr_show+0x2b/0x5e
         [<ffffffff817b46d1>] ? mutex_lock+0x26/0x44
         [<ffffffff811df7f5>] sysfs_kf_seq_show+0x83/0xcf
         [<ffffffff811de257>] kernfs_seq_show+0x23/0x25
         [<ffffffff81199118>] seq_read+0x16f/0x325
         [<ffffffff811de994>] kernfs_fop_read+0x3a/0x13f
         [<ffffffff8117b625>] __vfs_read+0x26/0x9d
         [<ffffffff8130eb59>] ? security_file_permission+0x3c/0x44
         [<ffffffff8117bdb8>] ? rw_verify_area+0x83/0xd9
         [<ffffffff8117be9d>] vfs_read+0x8f/0xcf
         [<ffffffff81193e34>] ? __fdget_pos+0x12/0x41
         [<ffffffff8117c686>] SyS_read+0x4b/0x76
         [<ffffffff817b606e>] system_call_fastpath+0x12/0x71
    
    The bug can be easily triggered, if an extra delay (e.g. 10ms) is added
    between the test of DMF_FREEING & DMF_DELETING and dm_get() in
    dm_get_from_kobject().
    
    To fix it, we need to ensure the test of DMF_FREEING & DMF_DELETING and
    dm_get() are done in an atomic way, so _minor_lock is used.
    
    The other callers of dm_get() have also been checked to be OK: some
    callers invoke dm_get() under _minor_lock, some callers invoke it under
    _hash_lock, and dm_start_request() invoke it after increasing
    md->open_count.
    
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9be341edebf5880a53ff8b27d05c7d229797c4be
Author: John Crispin <john@phrozen.org>
Date:   Mon Feb 20 10:29:43 2017 +0100

    MIPS: pci: Remove KERN_WARN instance inside the mt7620 driver
    
    commit 8593b18ad348733b5d5ddfa0c79dcabf51dff308 upstream.
    
    Switch the printk() call to the prefered pr_warn() api.
    
    Fixes: 7e5873d3755c ("MIPS: pci: Add MT7620a PCIE driver")
    Signed-off-by: John Crispin <john@phrozen.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/15321/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f17c786b28a3060a566a170c2cf3bd7441fc30a3
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Fri Oct 6 14:05:04 2017 -0400

    sched/rt: Simplify the IPI based RT balancing logic
    
    commit 4bdced5c9a2922521e325896a7bbbf0132c94e56 upstream.
    
    When a CPU lowers its priority (schedules out a high priority task for a
    lower priority one), a check is made to see if any other CPU has overloaded
    RT tasks (more than one). It checks the rto_mask to determine this and if so
    it will request to pull one of those tasks to itself if the non running RT
    task is of higher priority than the new priority of the next task to run on
    the current CPU.
    
    When we deal with large number of CPUs, the original pull logic suffered
    from large lock contention on a single CPU run queue, which caused a huge
    latency across all CPUs. This was caused by only having one CPU having
    overloaded RT tasks and a bunch of other CPUs lowering their priority. To
    solve this issue, commit:
    
      b6366f048e0c ("sched/rt: Use IPI to trigger RT task push migration instead of pulling")
    
    changed the way to request a pull. Instead of grabbing the lock of the
    overloaded CPU's runqueue, it simply sent an IPI to that CPU to do the work.
    
    Although the IPI logic worked very well in removing the large latency build
    up, it still could suffer from a large number of IPIs being sent to a single
    CPU. On a 80 CPU box, I measured over 200us of processing IPIs. Worse yet,
    when I tested this on a 120 CPU box, with a stress test that had lots of
    RT tasks scheduling on all CPUs, it actually triggered the hard lockup
    detector! One CPU had so many IPIs sent to it, and due to the restart
    mechanism that is triggered when the source run queue has a priority status
    change, the CPU spent minutes! processing the IPIs.
    
    Thinking about this further, I realized there's no reason for each run queue
    to send its own IPI. As all CPUs with overloaded tasks must be scanned
    regardless if there's one or many CPUs lowering their priority, because
    there's no current way to find the CPU with the highest priority task that
    can schedule to one of these CPUs, there really only needs to be one IPI
    being sent around at a time.
    
    This greatly simplifies the code!
    
    The new approach is to have each root domain have its own irq work, as the
    rto_mask is per root domain. The root domain has the following fields
    attached to it:
    
      rto_push_work  - the irq work to process each CPU set in rto_mask
      rto_lock       - the lock to protect some of the other rto fields
      rto_loop_start - an atomic that keeps contention down on rto_lock
                        the first CPU scheduling in a lower priority task
                        is the one to kick off the process.
      rto_loop_next  - an atomic that gets incremented for each CPU that
                        schedules in a lower priority task.
      rto_loop       - a variable protected by rto_lock that is used to
                        compare against rto_loop_next
      rto_cpu        - The cpu to send the next IPI to, also protected by
                        the rto_lock.
    
    When a CPU schedules in a lower priority task and wants to make sure
    overloaded CPUs know about it. It increments the rto_loop_next. Then it
    atomically sets rto_loop_start with a cmpxchg. If the old value is not "0",
    then it is done, as another CPU is kicking off the IPI loop. If the old
    value is "0", then it will take the rto_lock to synchronize with a possible
    IPI being sent around to the overloaded CPUs.
    
    If rto_cpu is greater than or equal to nr_cpu_ids, then there's either no
    IPI being sent around, or one is about to finish. Then rto_cpu is set to the
    first CPU in rto_mask and an IPI is sent to that CPU. If there's no CPUs set
    in rto_mask, then there's nothing to be done.
    
    When the CPU receives the IPI, it will first try to push any RT tasks that is
    queued on the CPU but can't run because a higher priority RT task is
    currently running on that CPU.
    
    Then it takes the rto_lock and looks for the next CPU in the rto_mask. If it
    finds one, it simply sends an IPI to that CPU and the process continues.
    
    If there's no more CPUs in the rto_mask, then rto_loop is compared with
    rto_loop_next. If they match, everything is done and the process is over. If
    they do not match, then a CPU scheduled in a lower priority task as the IPI
    was being passed around, and the process needs to start again. The first CPU
    in rto_mask is sent the IPI.
    
    This change removes this duplication of work in the IPI logic, and greatly
    lowers the latency caused by the IPIs. This removed the lockup happening on
    the 120 CPU machine. It also simplifies the code tremendously. What else
    could anyone ask for?
    
    Thanks to Peter Zijlstra for simplifying the rto_loop_start atomic logic and
    supplying me with the rto_start_trylock() and rto_start_unlock() helper
    functions.
    
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Clark Williams <williams@redhat.com>
    Cc: Daniel Bristot de Oliveira <bristot@redhat.com>
    Cc: John Kacur <jkacur@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Scott Wood <swood@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20170424114732.1aac6dc4@gandalf.local.home
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bf483c9a402941b5594e5ac8ad3b2b4a335fd34
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Oct 31 19:33:02 2017 -0400

    dm: allocate struct mapped_device with kvzalloc
    
    commit 856eb0916d181da6d043cc33e03f54d5c5bbe54a upstream.
    
    The structure srcu_struct can be very big, its size is proportional to the
    value CONFIG_NR_CPUS. The Fedora kernel has CONFIG_NR_CPUS 8192, the field
    io_barrier in the struct mapped_device has 84kB in the debugging kernel
    and 50kB in the non-debugging kernel. The large size may result in failure
    of the function kzalloc_node.
    
    In order to avoid the allocation failure, we use the function
    kvzalloc_node, this function falls back to vmalloc if a large contiguous
    chunk of memory is not available. This patch also moves the field
    io_barrier to the last position of struct mapped_device - the reason is
    that on many processor architectures, short memory offsets result in
    smaller code than long memory offsets - on x86-64 it reduces code size by
    320 bytes.
    
    Note to stable kernel maintainers - the kernels 4.11 and older don't have
    the function kvzalloc_node, you can use the function vzalloc_node instead.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13e6560075607ff354b48556f306bee925328325
Author: Vivek Goyal <vgoyal@redhat.com>
Date:   Wed Nov 1 15:37:22 2017 -0400

    ovl: Put upperdentry if ovl_check_origin() fails
    
    commit 5455f92b54e516995a9ca45bbf790d3629c27a93 upstream.
    
    If ovl_check_origin() fails, we should put upperdentry. We have a reference
    on it by now. So goto out_put_upper instead of out.
    
    Fixes: a9d019573e88 ("ovl: lookup non-dir copy-up-origin by file handle")
    Signed-off-by: Vivek Goyal <vgoyal@redhat.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08720bf98b6ac0a3ebffeb80c6c6cc992c374d90
Author: Eric Biggers <ebiggers@google.com>
Date:   Wed Nov 15 16:38:09 2017 -0800

    dm bufio: fix integer overflow when limiting maximum cache size
    
    commit 74d4108d9e681dbbe4a2940ed8fdff1f6868184c upstream.
    
    The default max_cache_size_bytes for dm-bufio is meant to be the lesser
    of 25% of the size of the vmalloc area and 2% of the size of lowmem.
    However, on 32-bit systems the intermediate result in the expression
    
        (VMALLOC_END - VMALLOC_START) * DM_BUFIO_VMALLOC_PERCENT / 100
    
    overflows, causing the wrong result to be computed.  For example, on a
    32-bit system where the vmalloc area is 520093696 bytes, the result is
    1174405 rather than the expected 130023424, which makes the maximum
    cache size much too small (far less than 2% of lowmem).  This causes
    severe performance problems for dm-verity users on affected systems.
    
    Fix this by using mult_frac() to correctly multiply by a percentage.  Do
    this for all places in dm-bufio that multiply by a percentage.  Also
    replace (VMALLOC_END - VMALLOC_START) with VMALLOC_TOTAL, which contrary
    to the comment is now defined in include/linux/vmalloc.h.
    
    Depends-on: 9993bc635 ("sched/x86: Fix overflow in cyc2ns_offset")
    Fixes: 95d402f057f2 ("dm: add bufio")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d7a55f5b8099224e250e5e87882e4d7168af129
Author: Ming Lei <ming.lei@redhat.com>
Date:   Sat Sep 30 19:46:48 2017 +0800

    dm mpath: remove annoying message of 'blk_get_request() returned -11'
    
    commit 9dc112e2daf87b40607fd8d357e2d7de32290d45 upstream.
    
    It is very normal to see allocation failure, especially with blk-mq
    request_queues, so it's unnecessary to report this error and annoy
    people.
    
    In practice this 'blk_get_request() returned -11' error gets logged
    quite frequently when a blk-mq DM multipath device sees heavy IO.
    
    This change is marked for stable@ because the annoying message in
    question was included in stable@ commit 7083abbbf.
    
    Fixes: 7083abbbf ("dm mpath: avoid that path removal can trigger an infinite loop")
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac29afdb459c9a75916edc1ee77e2d1e73c50353
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Sat Oct 28 16:39:34 2017 +0900

    dm zoned: ignore last smaller runt zone
    
    commit 114e025968b5990ad0b57bf60697ea64ee206aac upstream.
    
    The SCSI layer allows ZBC drives to have a smaller last runt zone. For
    such a device, specifying the entire capacity for a dm-zoned target
    table entry fails because the specified capacity is not aligned on a
    device zone size indicated in the request queue structure of the
    device.
    
    Fix this problem by ignoring the last runt zone in the entry length
    when seting up the dm-zoned target (ctr method) and when iterating table
    entries of the target (iterate_devices method). This allows dm-zoned
    users to still easily setup a target using the entire device capacity
    (as mandated by dm-zoned) or the aligned capacity excluding the last
    runt zone.
    
    While at it, replace direct references to the device queue chunk_sectors
    limit with calls to the accessor blk_queue_zone_sectors().
    
    Reported-by: Peter Desnoyers <pjd@ccs.neu.edu>
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f71f493f46168bf48a02aaba5ae95335d8c7bb3
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Nov 7 10:35:57 2017 -0500

    dm crypt: allow unaligned bv_offset
    
    commit 0440d5c0ca9744b92a07aeb6df0a9a75db6f4280 upstream.
    
    When slub_debug is enabled kmalloc returns unaligned memory. XFS uses
    this unaligned memory for its buffers (if an unaligned buffer crosses a
    page, XFS frees it and allocates a full page instead - see the function
    xfs_buf_allocate_memory).
    
    dm-crypt checks if bv_offset is aligned on page size and these checks
    fail with slub_debug and XFS.
    
    Fix this bug by removing the bv_offset checks. Switch to checking if
    bv_len is aligned instead of bv_offset (this check should be sufficient
    to prevent overruns if a bio with too small bv_len is received).
    
    Fixes: 8f0009a22517 ("dm crypt: optionally support larger encryption sector size")
    Reported-by: Bruno PrÃ©mont <bonbons@sysophe.eu>
    Tested-by: Bruno PrÃ©mont <bonbons@sysophe.eu>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Reviewed-by: Milan Broz <gmazyland@gmail.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec544ec956bc791f08d66101bc1269c4d944df7f
Author: Joe Thornber <ejt@redhat.com>
Date:   Fri Nov 10 07:53:31 2017 -0500

    dm cache: fix race condition in the writeback mode overwrite_bio optimisation
    
    commit d1260e2a3f85f4c1010510a15f89597001318b1b upstream.
    
    When a DM cache in writeback mode moves data between the slow and fast
    device it can often avoid a copy if the triggering bio either:
    
    i) covers the whole block (no point copying if we're about to overwrite it)
    ii) the migration is a promotion and the origin block is currently discarded
    
    Prior to this fix there was a race with case (ii).  The discard status
    was checked with a shared lock held (rather than exclusive).  This meant
    another bio could run in parallel and write data to the origin, removing
    the discard state.  After the promotion the parallel write would have
    been lost.
    
    With this fix the discard status is re-checked once the exclusive lock
    has been aquired.  If the block is no longer discarded it falls back to
    the slower full copy path.
    
    Fixes: b29d4986d ("dm cache: significant rework to leverage dm-bio-prison-v2")
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a502cd2dd4689f0092c27c450786731c087a56e6
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Tue Nov 7 10:40:40 2017 -0500

    dm integrity: allow unaligned bv_offset
    
    commit 95b1369a9638cfa322ad1c0cde8efbe524059884 upstream.
    
    When slub_debug is enabled kmalloc returns unaligned memory. XFS uses
    this unaligned memory for its buffers (if an unaligned buffer crosses a
    page, XFS frees it and allocates a full page instead - see the function
    xfs_buf_allocate_memory).
    
    dm-integrity checks if bv_offset is aligned on page size and this check
    fail with slub_debug and XFS.
    
    Fix this bug by removing the bv_offset check, leaving only the check for
    bv_len.
    
    Fixes: 7eada909bfd7 ("dm: add integrity target")
    Reported-by: Bruno PrÃ©mont <bonbons@sysophe.eu>
    Reviewed-by: Milan Broz <gmazyland@gmail.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca90f34e2e80597dee73c2e8d55de364a34c112b
Author: Vijendar Mukunda <Vijendar.Mukunda@amd.com>
Date:   Thu Nov 23 20:07:00 2017 +0530

    ALSA: hda: Add Raven PCI ID
    
    commit 9ceace3c9c18c67676e75141032a65a8e01f9a7a upstream.
    
    This commit adds PCI ID for Raven platform
    
    Signed-off-by: Vijendar Mukunda <Vijendar.Mukunda@amd.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a529422a5cb9c489f47647523779d2ea740d9918
Author: Vadim Lomovtsev <Vadim.Lomovtsev@cavium.com>
Date:   Tue Oct 17 05:47:39 2017 -0700

    PCI: Apply Cavium ThunderX ACS quirk to more Root Ports
    
    commit f2ddaf8dfd4a5071ad09074d2f95ab85d35c8a1e upstream.
    
    Extend the Cavium ThunderX ACS quirk to cover more device IDs and restrict
    it to only Root Ports.
    
    Signed-off-by: Vadim Lomovtsev <Vadim.Lomovtsev@cavium.com>
    [bhelgaas: changelog, stable tag]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f97ca60715d43d826657961db82b4704cb2f68c4
Author: Vadim Lomovtsev <Vadim.Lomovtsev@cavium.com>
Date:   Tue Oct 17 05:47:38 2017 -0700

    PCI: Set Cavium ACS capability quirk flags to assert RR/CR/SV/UF
    
    commit 7f342678634f16795892677204366e835e450dda upstream.
    
    The Cavium ThunderX (CN8XXX) family of PCIe Root Ports does not advertise
    an ACS capability.  However, the RTL internally implements similar
    protection as if ACS had Request Redirection, Completion Redirection,
    Source Validation, and Upstream Forwarding features enabled.
    
    Change Cavium ACS capabilities quirk flags accordingly.
    
    Fixes: b404bcfbf035 ("PCI: Add ACS quirk for all Cavium devices")
    Signed-off-by: Vadim Lomovtsev <Vadim.Lomovtsev@cavium.com>
    [bhelgaas: tidy changelog, comment, stable tag]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c85364c66e7dd03336d70e98dd6fc5881f34dcb8
Author: Dexuan Cui <decui@microsoft.com>
Date:   Wed Nov 1 20:30:53 2017 +0000

    PCI: hv: Use effective affinity mask
    
    commit 79aa801e899417a56863d6713f76c4e108856000 upstream.
    
    The effective_affinity_mask is always set when an interrupt is assigned in
    __assign_irq_vector() -> apic->cpu_mask_to_apicid(), e.g. for struct apic
    apic_physflat: -> default_cpu_mask_to_apicid() ->
    irq_data_update_effective_affinity(), but it looks d->common->affinity
    remains all-1's before the user space or the kernel changes it later.
    
    In the early allocation/initialization phase of an IRQ, we should use the
    effective_affinity_mask, otherwise Hyper-V may not deliver the interrupt to
    the expected CPU.  Without the patch, if we assign 7 Mellanox ConnectX-3
    VFs to a 32-vCPU VM, one of the VFs may fail to receive interrupts.
    
    Tested-by: Adrian Suhov <v-adsuho@microsoft.com>
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Jake Oshins <jakeo@microsoft.com>
    Cc: Jork Loeser <jloeser@microsoft.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d42e6a246cd75143e9133f740ac979011f81bc43
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Mon Nov 13 15:05:50 2017 -0600

    PCI/ASPM: Use correct capability pointer to program LTR_L1.2_THRESHOLD
    
    commit c00054f540bf81e592e1fee709b0bdbf20f478b5 upstream.
    
    Previously we programmed the LTR_L1.2_THRESHOLD in the parent (upstream)
    device using the capability pointer of the *child* (downstream) device,
    which corrupted some random word of the parent's config space.
    
    Use the parent's L1 SS capability pointer to program its
    LTR_L1.2_THRESHOLD.
    
    Fixes: aeda9adebab8 ("PCI/ASPM: Configure L1 substate settings")
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Vidya Sagar <vidyas@nvidia.com>
    CC: Rajat Jain <rajatja@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 576bdf9642d97c8aafb0305960c00259d7438b06
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Mon Nov 13 08:50:30 2017 -0600

    PCI/ASPM: Account for downstream device's Port Common_Mode_Restore_Time
    
    commit 94ac327e043ee40d7fc57b54541da50507ef4e99 upstream.
    
    Every Port that supports the L1.2 substate advertises its Port
    Common_Mode_Restore_Time, i.e., the time the Port requires to re-establish
    common mode when exiting L1.2 (see PCIe r3.1, sec 7.33.2).
    
    Per sec 5.5.3.3.1, when exiting L1.2, the Downstream Port (the device at
    the upstream end of the link) must send TS1 training sequences for at least
    T(COMMONMODE) after it detects electrical idle exit on the Link.  We want
    this to be long enough for both ends of the Link, so we should set it to
    the maximum of the Port Common_Mode_Restore_Time for the upstream and
    downstream components on the Link.
    
    Previously we only looked at the Port Common_Mode_Restore_Time of the
    upstream device, so if the downstream device required more time, we didn't
    program the upstream device's T(COMMONMODE) correctly.
    
    Fixes: f1f0366dd6be ("PCI/ASPM: Calculate and save the L1.2 timing parameters")
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Vidya Sagar <vidyas@nvidia.com>
    Acked-by: Rajat Jain <rajatja@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b4c6a3b394f86f6b78a688c092d8dcea976a59c
Author: Tobias Jordan <Tobias.Jordan@elektrobit.com>
Date:   Wed Oct 4 11:35:03 2017 +0530

    PM / OPP: Add missing of_node_put(np)
    
    commit 7978db344719dab1e56d05e6fc04aaaddcde0a5e upstream.
    
    The for_each_available_child_of_node() loop in _of_add_opp_table_v2()
    doesn't drop the reference to "np" on errors. Fix that.
    
    Fixes: 274659029c9d (PM / OPP: Add support to parse "operating-points-v2" bindings)
    Signed-off-by: Tobias Jordan <Tobias.Jordan@elektrobit.com>
    [ VK: Improved commit log. ]
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Reviewed-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2031e243efeea84f4f121018715e8c7755ee1914
Author: Josef Bacik <jbacik@fb.com>
Date:   Mon Nov 6 16:11:58 2017 -0500

    nbd: don't start req until after the dead connection logic
    
    commit 6a468d5990ecd1c2d07dd85f8633bbdd0ba61c40 upstream.
    
    We can end up sleeping for a while waiting for the dead timeout, which
    means we could get the per request timer to fire.  We did handle this
    case, but if the dead timeout happened right after we submitted we'd
    either tear down the connection or possibly requeue as we're handling an
    error and race with the endio which can lead to panics and other
    hilarity.
    
    Fixes: 560bc4b39952 ("nbd: handle dead connections")
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6b7c54c2d0ee8fe4d3b1cdfdb1961a80be60d3f
Author: Josef Bacik <jbacik@fb.com>
Date:   Mon Nov 6 16:11:57 2017 -0500

    nbd: wait uninterruptible for the dead timeout
    
    commit ff57dc94faec023abc267cdc45766fccff497557 upstream.
    
    If we have a pending signal or the user kills their application then
    it'll bring down the whole device, which is less than awesome.  Instead
    wait uninterruptible for the dead timeout so we're sure we gave it our
    best shot.
    
    Fixes: 560bc4b39952 ("nbd: handle dead connections")
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a59e386c4f4fce346161c0a62a5e1fbc1f435d6f
Author: Simon Guinot <simon.guinot@sequanux.org>
Date:   Mon Nov 13 16:27:02 2017 +0100

    net: mvneta: fix handling of the Tx descriptor counter
    
    commit 0d63785c6b94b5d2f095f90755825f90eea791f5 upstream.
    
    The mvneta controller provides a 8-bit register to update the pending
    Tx descriptor counter. Then, a maximum of 255 Tx descriptors can be
    added at once. In the current code the mvneta_txq_pend_desc_add function
    assumes the caller takes care of this limit. But it is not the case. In
    some situations (xmit_more flag), more than 255 descriptors are added.
    When this happens, the Tx descriptor counter register is updated with a
    wrong value, which breaks the whole Tx queue management.
    
    This patch fixes the issue by allowing the mvneta_txq_pend_desc_add
    function to process more than 255 Tx descriptors.
    
    Fixes: 2a90f7e1d5d0 ("net: mvneta: add xmit_more support")
    Signed-off-by: Simon Guinot <simon.guinot@sequanux.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d0a61fbc66724b2fdbbc7bf2b34354a4452efcd
Author: Mathias Kresin <dev@kresin.me>
Date:   Thu May 11 08:11:15 2017 +0200

    MIPS: ralink: Fix typo in mt7628 pinmux function
    
    commit 05a67cc258e75ac9758e6f13d26337b8be51162a upstream.
    
    There is a typo inside the pinmux setup code. The function is called
    refclk and not reclk.
    
    Fixes: 53263a1c6852 ("MIPS: ralink: add mt7628an support")
    Signed-off-by: Mathias Kresin <dev@kresin.me>
    Acked-by: John Crispin <john@phrozen.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/16047/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8086ac5cdda0199d1231267808acc74cc75d6edf
Author: Mathias Kresin <dev@kresin.me>
Date:   Thu May 11 08:11:14 2017 +0200

    MIPS: ralink: Fix MT7628 pinmux
    
    commit 8ef4b43cd3794d63052d85898e42424fd3b14d24 upstream.
    
    According to the datasheet the REFCLK pin is shared with GPIO#37 and
    the PERST pin is shared with GPIO#36.
    
    Fixes: 53263a1c6852 ("MIPS: ralink: add mt7628an support")
    Signed-off-by: Mathias Kresin <dev@kresin.me>
    Acked-by: John Crispin <john@phrozen.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/16046/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c792238027157d0fc6a80a8ea1b9d73443459d75
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed Oct 4 03:46:14 2017 +0100

    MIPS: cmpxchg64() and HAVE_VIRT_CPU_ACCOUNTING_GEN don't work for 32-bit SMP
    
    commit a3f143106596d739e7fbc4b84c96b1475247d876 upstream.
    
    __cmpxchg64_local_generic() is atomic only w.r.t tasks and interrupts
    on the same CPU (that's what the 'local' means).  We can't use it to
    implement cmpxchg64() in SMP configurations.
    
    So, for 32-bit SMP configurations:
    
    - Don't define cmpxchg64()
    - Don't enable HAVE_VIRT_CPU_ACCOUNTING_GEN, which requires it
    
    Fixes: e2093c7b03c1 ("MIPS: Fall back to generic implementation of ...")
    Fixes: bb877e96bea1 ("MIPS: Add support for full dynticks CPU time accounting")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Deng-Cheng Zhu <dengcheng.zhu@mips.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/17413/
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8177aa54c509056c599e7cf1c7e91630814686e6
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Mon Nov 13 03:37:06 2017 +0300

    uapi: fix linux/rxrpc.h userspace compilation errors
    
    commit 0eef304bc9f7d079a1165e8cd2f24b078e9e1f2a upstream.
    
    Consistently use types provided by <linux/types.h> to fix the following
    linux/rxrpc.h userspace compilation errors:
    
    /usr/include/linux/rxrpc.h:24:2: error: unknown type name 'u16'
      u16  srx_service; /* service desired */
    /usr/include/linux/rxrpc.h:25:2: error: unknown type name 'u16'
      u16  transport_type; /* type of transport socket (SOCK_DGRAM) */
    /usr/include/linux/rxrpc.h:26:2: error: unknown type name 'u16'
      u16  transport_len; /* length of transport address */
    
    Use __kernel_sa_family_t instead of sa_family_t the same way
    as uapi/linux/in.h does, to fix the following
    linux/rxrpc.h userspace compilation errors:
    
    /usr/include/linux/rxrpc.h:23:2: error: unknown type name 'sa_family_t'
      sa_family_t srx_family; /* address family */
    /usr/include/linux/rxrpc.h:28:3: error: unknown type name 'sa_family_t'
      sa_family_t family;  /* transport address family */
    
    Fixes: 727f8914477e ("rxrpc: Expose UAPI definitions to userspace")
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33e58deefa0907ffba4d5a4c69f3641a649358d3
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Tue Nov 14 06:30:11 2017 +0300

    uapi: fix linux/tls.h userspace compilation error
    
    commit b9f3eb499d84f8d4adcb2f9212ec655700b28228 upstream.
    
    Move inclusion of a private kernel header <net/tcp.h>
    from uapi/linux/tls.h to its only user - net/tls.h,
    to fix the following linux/tls.h userspace compilation error:
    
    /usr/include/linux/tls.h:41:21: fatal error: net/tcp.h: No such file or directory
    
    As to this point uapi/linux/tls.h was totaly unusuable for userspace,
    cleanup this header file further by moving other redundant includes
    to net/tls.h.
    
    Fixes: 3c4d7559159b ("tls: kernel TLS support")
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30d3389d80eb0c6d2a49ffa07c8fd1eec5a49873
Author: Philip Derrin <philip@cog.systems>
Date:   Tue Nov 14 00:55:26 2017 +0100

    ARM: 8721/1: mm: dump: check hardware RO bit for LPAE
    
    commit 3b0c0c922ff4be275a8beb87ce5657d16f355b54 upstream.
    
    When CONFIG_ARM_LPAE is set, the PMD dump relies on the software
    read-only bit to determine whether a page is writable. This
    concealed a bug which left the kernel text section writable
    (AP2=0) while marked read-only in the software bit.
    
    In a kernel with the AP2 bug, the dump looks like this:
    
        ---[ Kernel Mapping ]---
        0xc0000000-0xc0200000           2M RW NX SHD
        0xc0200000-0xc0600000           4M ro x  SHD
        0xc0600000-0xc0800000           2M ro NX SHD
        0xc0800000-0xc4800000          64M RW NX SHD
    
    The fix is to check that the software and hardware bits are both
    set before displaying "ro". The dump then shows the true perms:
    
        ---[ Kernel Mapping ]---
        0xc0000000-0xc0200000           2M RW NX SHD
        0xc0200000-0xc0600000           4M RW x  SHD
        0xc0600000-0xc0800000           2M RW NX SHD
        0xc0800000-0xc4800000          64M RW NX SHD
    
    Fixes: ded947798469 ("ARM: 8109/1: mm: Modify pte_write and pmd_write logic for LPAE")
    Signed-off-by: Philip Derrin <philip@cog.systems>
    Tested-by: Neil Dick <neil@cog.systems>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb7cc998a0e5f0f4572609ccc334de5a6260b406
Author: Philip Derrin <philip@cog.systems>
Date:   Tue Nov 14 00:55:25 2017 +0100

    ARM: 8722/1: mm: make STRICT_KERNEL_RWX effective for LPAE
    
    commit 400eeffaffc7232c0ae1134fe04e14ae4fb48d8c upstream.
    
    Currently, for ARM kernels with CONFIG_ARM_LPAE and
    CONFIG_STRICT_KERNEL_RWX enabled, the 2MiB pages mapping the
    kernel code and rodata are writable. They are marked read-only in
    a software bit (L_PMD_SECT_RDONLY) but the hardware read-only bit
    is not set (PMD_SECT_AP2).
    
    For user mappings, the logic that propagates the software bit
    to the hardware bit is in set_pmd_at(); but for the kernel,
    section_update() writes the PMDs directly, skipping this logic.
    
    The fix is to set PMD_SECT_AP2 for read-only sections in
    section_update(), at the same time as L_PMD_SECT_RDONLY.
    
    Fixes: 1e3479225acb ("ARM: 8275/1: mm: fix PMD_SECT_RDONLY undeclared compile error")
    Signed-off-by: Philip Derrin <philip@cog.systems>
    Reported-by: Neil Dick <neil@cog.systems>
    Tested-by: Neil Dick <neil@cog.systems>
    Tested-by: Laura Abbott <labbott@redhat.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecc3c4795bc3c7624c7b727c91ef5328fda6fc79
Author: Catalin Marinas <catalin.marinas@arm.com>
Date:   Thu Oct 26 18:36:47 2017 +0100

    arm64: Implement arch-specific pte_access_permitted()
    
    commit 6218f96c58dbf44a06aeaf767aab1f54fc397838 upstream.
    
    The generic pte_access_permitted() implementation only checks for
    pte_present() (together with the write permission where applicable).
    However, for both kernel ptes and PROT_NONE mappings pte_present() also
    returns true on arm64 even though such mappings are not user accessible.
    Additionally, arm64 now supports execute-only user permission
    (PROT_EXEC) which is implemented by clearing the PTE_USER bit.
    
    With this patch the arm64 implementation of pte_access_permitted()
    checks for the PTE_VALID and PTE_USER bits together with writable access
    if applicable.
    
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c35be334862c2cc6f4dd58ba638c0e7b341c7862
Author: Andi Kleen <ak@linux.intel.com>
Date:   Wed Nov 8 16:07:18 2017 -0800

    perf/x86/intel: Hide TSX events when RTM is not supported
    
    commit 58ba4d5a25579e5c7e312bd359c95f3a9a0a242c upstream.
    
    0day testing reported a perf test regression on Haswell systems without
    RTM. Commit a5df70c35 hides the in_tx/in_tx_cp attributes when RTM is not
    available, but the TSX events are still available in sysfs. Due to the
    missing attributes the event parser fails on those files.
    
    Don't show the TSX events in sysfs when RTM is not available on
    Haswell/Broadwell/Skylake.
    
    Fixes: a5df70c354c2 (perf/x86: Only show format attributes when supported)
    Reported-by: kernel test robot <xiaolong.ye@intel.com>
    Tested-by: Jin Yao <yao.jin@linux.intel.com>
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20171109000718.14137-1-andi@firstfloor.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9a64e23a9da528e7d8aa1bd2c7bb92be4ebb724
Author: Andy Lutomirski <luto@kernel.org>
Date:   Wed Nov 22 20:39:16 2017 -0800

    x86/entry/64: Add missing irqflags tracing to native_load_gs_index()
    
    commit ca37e57bbe0cf1455ea3e84eb89ed04a132d59e1 upstream.
    
    Running this code with IRQs enabled (where dummy_lock is a spinlock):
    
    static void check_load_gs_index(void)
    {
            /* This will fail. */
            load_gs_index(0xffff);
    
            spin_lock(&dummy_lock);
            spin_unlock(&dummy_lock);
    }
    
    Will generate a lockdep warning.  The issue is that the actual write
    to %gs would cause an exception with IRQs disabled, and the exception
    handler would, as an inadvertent side effect, update irqflag tracing
    to reflect the IRQs-off status.  native_load_gs_index() would then
    turn IRQs back on and return with irqflag tracing still thinking that
    IRQs were off.  The dummy lock-and-unlock causes lockdep to notice the
    error and warn.
    
    Fix it by adding the missing tracing.
    
    Apparently nothing did this in a context where it mattered.  I haven't
    tried to find a code path that would actually exhibit the warning if
    appropriately nasty user code were running.
    
    I suspect that the security impact of this bug is very, very low --
    production systems don't run with lockdep enabled, and the warning is
    mostly harmless anyway.
    
    Found during a quick audit of the entry code to try to track down an
    unrelated bug that Ingo found in some still-in-development code.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/e1aeb0e6ba8dd430ec36c8a35e63b429698b4132.1511411918.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c91f3fc2411d9f007fbbaf9b10f772805e01cafe
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Nov 21 20:43:56 2017 -0800

    x86/entry/64: Fix entry_SYSCALL_64_after_hwframe() IRQ tracing
    
    commit 548c3050ea8d16997ae27f9e080a8338a606fc93 upstream.
    
    When I added entry_SYSCALL_64_after_hwframe(), I left TRACE_IRQS_OFF
    before it.  This means that users of entry_SYSCALL_64_after_hwframe()
    were responsible for invoking TRACE_IRQS_OFF, and the one and only
    user (Xen, added in the same commit) got it wrong.
    
    I think this would manifest as a warning if a Xen PV guest with
    CONFIG_DEBUG_LOCKDEP=y were used with context tracking.  (The
    context tracking bit is to cause lockdep to get invoked before we
    turn IRQs back on.)  I haven't tested that for real yet because I
    can't get a kernel configured like that to boot at all on Xen PV.
    
    Move TRACE_IRQS_OFF below the label.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 8a9949bc71a7 ("x86/xen/64: Rearrange the SYSCALL entries")
    Link: http://lkml.kernel.org/r/9150aac013b7b95d62c2336751d5b6e91d2722aa.1511325444.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00d5e292a8ea9675c6ac4583743b811fda6ba157
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Nov 24 13:56:30 2017 +0900

    x86/decoder: Add new TEST instruction pattern
    
    commit 12a78d43de767eaf8fb272facb7a7b6f2dc6a9df upstream.
    
    The kbuild test robot reported this build warning:
    
      Warning: arch/x86/tools/test_get_len found difference at <jump_table>:ffffffff8103dd2c
    
      Warning: ffffffff8103dd82: f6 09 d8 testb $0xd8,(%rcx)
      Warning: objdump says 3 bytes, but insn_get_length() says 2
      Warning: decoded and checked 1569014 instructions with 1 warnings
    
    This sequence seems to be a new instruction not in the opcode map in the Intel SDM.
    
    The instruction sequence is "F6 09 d8", means Group3(F6), MOD(00)REG(001)RM(001), and 0xd8.
    Intel SDM vol2 A.4 Table A-6 said the table index in the group is "Encoding of Bits 5,4,3 of
    the ModR/M Byte (bits 2,1,0 in parenthesis)"
    
    In that table, opcodes listed by the index REG bits as:
    
      000         001       010 011  100        101        110         111
     TEST Ib/Iz,(undefined),NOT,NEG,MUL AL/rAX,IMUL AL/rAX,DIV AL/rAX,IDIV AL/rAX
    
    So, it seems TEST Ib is assigned to 001.
    
    Add the new pattern.
    
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46855f80d1a0174b008ac7c6b8439a1c294bcb53
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Mon Nov 6 14:17:53 2017 -0600

    x86/boot: Fix boot failure when SMP MP-table is based at 0
    
    commit ac5292e9a294618cecb31109d1ba265e3d027ba2 upstream.
    
    When crosvm is used to boot a kernel as a VM, the SMP MP-table is found
    at physical address 0x0. This causes mpf_base to be set to 0 and a
    subsequent "if (!mpf_base)" check in default_get_smp_config() results in
    the MP-table not being parsed.  Further into the boot this results in an
    oops when attempting a read_apic_id().
    
    Add a boolean variable that is set to true when the MP-table is found.
    Use this variable for testing if the MP-table was found so that even a
    value of 0 for mpf_base will result in continued parsing of the MP-table.
    
    Fixes: 5997efb96756 ("x86/boot: Use memremap() to map the MPF and MPC data")
    Reported-by: Tomeu Vizoso <tomeu@tomeuvizoso.net>
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: regression@leemhuis.info
    Link: https://lkml.kernel.org/r/20171106201753.23059.86674.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce922b7b4a5178279eb5453e7fcb0b116c757f1e
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Nov 7 14:15:27 2017 -0800

    lib/mpi: call cond_resched() from mpi_powm() loop
    
    commit 1d9ddde12e3c9bab7f3d3484eb9446315e3571ca upstream.
    
    On a non-preemptible kernel, if KEYCTL_DH_COMPUTE is called with the
    largest permitted inputs (16384 bits), the kernel spends 10+ seconds
    doing modular exponentiation in mpi_powm() without rescheduling.  If all
    threads do it, it locks up the system.  Moreover, it can cause
    rcu_sched-stall warnings.
    
    Notwithstanding the insanity of doing this calculation in kernel mode
    rather than in userspace, fix it by calling cond_resched() as each bit
    from the exponent is processed.  It's still noninterruptible, but at
    least it's preemptible now.
    
    Do the cond_resched() once per bit rather than once per MPI limb because
    each limb might still easily take 100+ milliseconds on slow CPUs.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f088f6a6752c18ceb1338e07b7b702a0b086914
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Mon Sep 18 08:54:40 2017 -0700

    sched: Make resched_cpu() unconditional
    
    commit 7c2102e56a3f7d85b5d8f33efbd7aecc1f36fdd8 upstream.
    
    The current implementation of synchronize_sched_expedited() incorrectly
    assumes that resched_cpu() is unconditional, which it is not.  This means
    that synchronize_sched_expedited() can hang when resched_cpu()'s trylock
    fails as follows (analysis by Neeraj Upadhyay):
    
    o       CPU1 is waiting for expedited wait to complete:
    
            sync_rcu_exp_select_cpus
                 rdp->exp_dynticks_snap & 0x1   // returns 1 for CPU5
                 IPI sent to CPU5
    
            synchronize_sched_expedited_wait
                     ret = swait_event_timeout(rsp->expedited_wq,
                                               sync_rcu_preempt_exp_done(rnp_root),
                                               jiffies_stall);
    
            expmask = 0x20, CPU 5 in idle path (in cpuidle_enter())
    
    o       CPU5 handles IPI and fails to acquire rq lock.
    
            Handles IPI
                 sync_sched_exp_handler
                     resched_cpu
                         returns while failing to try lock acquire rq->lock
                     need_resched is not set
    
    o       CPU5 calls  rcu_idle_enter() and as need_resched is not set, goes to
            idle (schedule() is not called).
    
    o       CPU 1 reports RCU stall.
    
    Given that resched_cpu() is now used only by RCU, this commit fixes the
    assumption by making resched_cpu() unconditional.
    
    Reported-by: Neeraj Upadhyay <neeraju@codeaurora.org>
    Suggested-by: Neeraj Upadhyay <neeraju@codeaurora.org>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 668a1285187668ce162a3aa6b4f5e3272e659954
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Oct 10 18:09:49 2017 +0200

    serdev: fix registration of second slave
    
    commit 08fcee289f341786eb3b44e5f2d1dc850943238e upstream.
    
    Serdev currently only supports a single slave device, but the required
    sanity checks to prevent further registration attempts were missing.
    
    If a serial-port node has two child nodes with compatible properties,
    the OF code would try to register two slave devices using the same id
    and name. Driver core will not allow this (and there will be loud
    complaints), but the controller's slave pointer would already have been
    set to address of the soon to be deallocated second struct
    serdev_device. As the first slave device remains registered, this can
    lead to later use-after-free issues when the slave callbacks are
    accessed.
    
    Note that while the serdev registration helpers are exported, they are
    typically only called by serdev core. Any other (out-of-tree) callers
    must serialise registration and deregistration themselves.
    
    Fixes: cd6484e1830b ("serdev: Introduce new bus for serial attached devices")
    Cc: Rob Herring <robh@kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b79974945e48f9583861c464a8558d1db432c613
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Wed Nov 8 20:23:55 2017 +0530

    cpufreq: schedutil: Reset cached_raw_freq when not in sync with next_freq
    
    commit 07458f6a5171d97511dfbdf6ce549ed2ca0280c7 upstream.
    
    'cached_raw_freq' is used to get the next frequency quickly but should
    always be in sync with sg_policy->next_freq. There is a case where it is
    not and in such cases it should be reset to avoid switching to incorrect
    frequencies.
    
    Consider this case for example:
    
     - policy->cur is 1.2 GHz (Max)
     - New request comes for 780 MHz and we store that in cached_raw_freq.
     - Based on 780 MHz, we calculate the effective frequency as 800 MHz.
     - We then see the CPU wasn't idle recently and choose to keep the next
       freq as 1.2 GHz.
     - Now we have cached_raw_freq is 780 MHz and sg_policy->next_freq is
       1.2 GHz.
     - Now if the utilization doesn't change in then next request, then the
       next target frequency will still be 780 MHz and it will match with
       cached_raw_freq. But we will choose 1.2 GHz instead of 800 MHz here.
    
    Fixes: b7eaf1aab9f8 (cpufreq: schedutil: Avoid reducing frequency of busy CPUs prematurely)
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fe36d0c58a2a786308563163a999943bdc7b8b2
Author: Lv Zheng <lv.zheng@intel.com>
Date:   Tue Sep 26 16:54:03 2017 +0800

    ACPI / EC: Fix regression related to triggering source of EC event handling
    
    commit 53c5eaabaea9a1b7a96f95ccc486d2ad721d95bb upstream.
    
    Originally the Samsung quirks removed by commit 4c237371 can be covered
    by commit e923e8e7 and ec_freeze_events=Y mode. But commit 9c40f956
    changed ec_freeze_events=Y back to N, making this problem re-surface.
    
    Actually, if commit e923e8e7 is robust enough, we can freely change
    ec_freeze_events mode, so this patch fixes the issue by improving
    commit e923e8e7.
    
    Related commits listed in the merged order:
    
     Commit: e923e8e79e18fd6be9162f1be6b99a002e9df2cb
     Subject: ACPI / EC: Fix an issue that SCI_EVT cannot be detected
              after event is enabled
    
     Commit: 4c237371f290d1ed3b2071dd43554362137b1cce
     Subject: ACPI / EC: Remove old CLEAR_ON_RESUME quirk
    
     Commit: 9c40f956ce9b331493347d1b3cb7e384f7dc0581
     Subject: Revert "ACPI / EC: Enable event freeze mode..." to fix
              a regression
    
    This patch not only fixes the reported post-resume EC event triggering
    source issue, but also fixes an unreported similar issue related to the
    driver bind by adding EC event triggering source in ec_install_handlers().
    
    Fixes: e923e8e79e18 (ACPI / EC: Fix an issue that SCI_EVT cannot be detected after event is enabled)
    Fixes: 4c237371f290 (ACPI / EC: Remove old CLEAR_ON_RESUME quirk)
    Fixes: 9c40f956ce9b (Revert "ACPI / EC: Enable event freeze mode..." to fix a regression)
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=196833
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Reported-by: Alistair Hamilton <ahpatent@gmail.com>
    Tested-by: Alistair Hamilton <ahpatent@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef2b11c0a31df460cfda8bdc1a79806f9f95a3c5
Author: Ville SyrjÃ¤lÃ¤ <ville.syrjala@linux.intel.com>
Date:   Tue Nov 7 23:08:10 2017 +0200

    ACPI / PM: Fix acpi_pm_notifier_lock vs flush_workqueue() deadlock
    
    commit ff1656790b3a4caca94505c52fd0250f981ea187 upstream.
    
    acpi_remove_pm_notifier() ends up calling flush_workqueue() while
    holding acpi_pm_notifier_lock, and that same lock is taken by
    by the work via acpi_pm_notify_handler(). This can deadlock.
    
    To fix the problem let's split the single lock into two: one to
    protect the dev->wakeup between the work vs. add/remove, and
    another one to handle notifier installation vs. removal.
    
    After commit a1d14934ea4b "workqueue/lockdep: 'Fix' flush_work()
    annotation" I was able to kill the machine (Intel Braswell)
    very easily with 'powertop --auto-tune', runtime suspending i915,
    and trying to wake it up via the USB keyboard. The cases when
    it didn't die are presumably explained by lockdep getting disabled
    by something else (cpu hotplug locking issues usually).
    
    Fortunately I still got a lockdep report over netconsole
    (trickling in very slowly), even though the machine was
    otherwise practically dead:
    
    [  112.179806] ======================================================
    [  114.670858] WARNING: possible circular locking dependency detected
    [  117.155663] 4.13.0-rc6-bsw-bisect-00169-ga1d14934ea4b #119 Not tainted
    [  119.658101] ------------------------------------------------------
    [  121.310242] xhci_hcd 0000:00:14.0: xHCI host not responding to stop endpoint command.
    [  121.313294] xhci_hcd 0000:00:14.0: xHCI host controller not responding, assume dead
    [  121.313346] xhci_hcd 0000:00:14.0: HC died; cleaning up
    [  121.313485] usb 1-6: USB disconnect, device number 3
    [  121.313501] usb 1-6.2: USB disconnect, device number 4
    [  134.747383] kworker/0:2/47 is trying to acquire lock:
    [  137.220790]  (acpi_pm_notifier_lock){+.+.}, at: [<ffffffff813cafdf>] acpi_pm_notify_handler+0x2f/0x80
    [  139.721524]
    [  139.721524] but task is already holding lock:
    [  144.672922]  ((&dpc->work)){+.+.}, at: [<ffffffff8109ce90>] process_one_work+0x160/0x720
    [  147.184450]
    [  147.184450] which lock already depends on the new lock.
    [  147.184450]
    [  154.604711]
    [  154.604711] the existing dependency chain (in reverse order) is:
    [  159.447888]
    [  159.447888] -> #2 ((&dpc->work)){+.+.}:
    [  164.183486]        __lock_acquire+0x1255/0x13f0
    [  166.504313]        lock_acquire+0xb5/0x210
    [  168.778973]        process_one_work+0x1b9/0x720
    [  171.030316]        worker_thread+0x4c/0x440
    [  173.257184]        kthread+0x154/0x190
    [  175.456143]        ret_from_fork+0x27/0x40
    [  177.624348]
    [  177.624348] -> #1 ("kacpi_notify"){+.+.}:
    [  181.850351]        __lock_acquire+0x1255/0x13f0
    [  183.941695]        lock_acquire+0xb5/0x210
    [  186.046115]        flush_workqueue+0xdd/0x510
    [  190.408153]        acpi_os_wait_events_complete+0x31/0x40
    [  192.625303]        acpi_remove_notify_handler+0x133/0x188
    [  194.820829]        acpi_remove_pm_notifier+0x56/0x90
    [  196.989068]        acpi_dev_pm_detach+0x5f/0xa0
    [  199.145866]        dev_pm_domain_detach+0x27/0x30
    [  201.285614]        i2c_device_probe+0x100/0x210
    [  203.411118]        driver_probe_device+0x23e/0x310
    [  205.522425]        __driver_attach+0xa3/0xb0
    [  207.634268]        bus_for_each_dev+0x69/0xa0
    [  209.714797]        driver_attach+0x1e/0x20
    [  211.778258]        bus_add_driver+0x1bc/0x230
    [  213.837162]        driver_register+0x60/0xe0
    [  215.868162]        i2c_register_driver+0x42/0x70
    [  217.869551]        0xffffffffa0172017
    [  219.863009]        do_one_initcall+0x45/0x170
    [  221.843863]        do_init_module+0x5f/0x204
    [  223.817915]        load_module+0x225b/0x29b0
    [  225.757234]        SyS_finit_module+0xc6/0xd0
    [  227.661851]        do_syscall_64+0x5c/0x120
    [  229.536819]        return_from_SYSCALL_64+0x0/0x7a
    [  231.392444]
    [  231.392444] -> #0 (acpi_pm_notifier_lock){+.+.}:
    [  235.124914]        check_prev_add+0x44e/0x8a0
    [  237.024795]        __lock_acquire+0x1255/0x13f0
    [  238.937351]        lock_acquire+0xb5/0x210
    [  240.840799]        __mutex_lock+0x75/0x940
    [  242.709517]        mutex_lock_nested+0x1c/0x20
    [  244.551478]        acpi_pm_notify_handler+0x2f/0x80
    [  246.382052]        acpi_ev_notify_dispatch+0x44/0x5c
    [  248.194412]        acpi_os_execute_deferred+0x14/0x30
    [  250.003925]        process_one_work+0x1ec/0x720
    [  251.803191]        worker_thread+0x4c/0x440
    [  253.605307]        kthread+0x154/0x190
    [  255.387498]        ret_from_fork+0x27/0x40
    [  257.153175]
    [  257.153175] other info that might help us debug this:
    [  257.153175]
    [  262.324392] Chain exists of:
    [  262.324392]   acpi_pm_notifier_lock --> "kacpi_notify" --> (&dpc->work)
    [  262.324392]
    [  267.391997]  Possible unsafe locking scenario:
    [  267.391997]
    [  270.758262]        CPU0                    CPU1
    [  272.431713]        ----                    ----
    [  274.060756]   lock((&dpc->work));
    [  275.646532]                                lock("kacpi_notify");
    [  277.260772]                                lock((&dpc->work));
    [  278.839146]   lock(acpi_pm_notifier_lock);
    [  280.391902]
    [  280.391902]  *** DEADLOCK ***
    [  280.391902]
    [  284.986385] 2 locks held by kworker/0:2/47:
    [  286.524895]  #0:  ("kacpi_notify"){+.+.}, at: [<ffffffff8109ce90>] process_one_work+0x160/0x720
    [  288.112927]  #1:  ((&dpc->work)){+.+.}, at: [<ffffffff8109ce90>] process_one_work+0x160/0x720
    [  289.727725]
    
    Fixes: c072530f391e (ACPI / PM: Revork the handling of ACPI device wakeup notifications)
    Signed-off-by: Ville SyrjÃ¤lÃ¤ <ville.syrjala@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6047980008d8db5de9ef5c7ad897f5d2caac003c
Author: Vasily Gorbik <gor@linux.vnet.ibm.com>
Date:   Wed Nov 15 14:15:36 2017 +0100

    s390/disassembler: increase show_code buffer size
    
    commit b192571d1ae375e0bbe0aa3ccfa1a3c3704454b9 upstream.
    
    Current buffer size of 64 is too small. objdump shows that there are
    instructions which would require up to 75 bytes buffer (with current
    formating). 128 bytes "ought to be enough for anybody".
    
    Also replaces 8 spaces with a single tab to reduce the memory footprint.
    
    Fixes the following KASAN finding:
    
    BUG: KASAN: stack-out-of-bounds in number+0x3fe/0x538
    Write of size 1 at addr 000000005a4a75a0 by task bash/1282
    
    CPU: 1 PID: 1282 Comm: bash Not tainted 4.14.0+ #215
    Hardware name: IBM 2964 N96 702 (z/VM 6.4.0)
    Call Trace:
    ([<000000000011eeb6>] show_stack+0x56/0x88)
     [<0000000000e1ce1a>] dump_stack+0x15a/0x1b0
     [<00000000004e2994>] print_address_description+0xf4/0x288
     [<00000000004e2cf2>] kasan_report+0x13a/0x230
     [<0000000000e38ae6>] number+0x3fe/0x538
     [<0000000000e3dfe4>] vsnprintf+0x194/0x948
     [<0000000000e3ea42>] sprintf+0xa2/0xb8
     [<00000000001198dc>] print_insn+0x374/0x500
     [<0000000000119346>] show_code+0x4ee/0x538
     [<000000000011f234>] show_registers+0x34c/0x388
     [<000000000011f2ae>] show_regs+0x3e/0xa8
     [<000000000011f502>] die+0x1ea/0x2e8
     [<0000000000138f0e>] do_no_context+0x106/0x168
     [<0000000000139a1a>] do_protection_exception+0x4da/0x7d0
     [<0000000000e55914>] pgm_check_handler+0x16c/0x1c0
     [<000000000090639e>] sysrq_handle_crash+0x46/0x58
    ([<0000000000000007>] 0x7)
     [<00000000009073fa>] __handle_sysrq+0x102/0x218
     [<0000000000907c06>] write_sysrq_trigger+0xd6/0x100
     [<000000000061d67a>] proc_reg_write+0xb2/0x128
     [<0000000000520be6>] __vfs_write+0xee/0x368
     [<0000000000521222>] vfs_write+0x21a/0x278
     [<000000000052156a>] SyS_write+0xda/0x178
     [<0000000000e555cc>] system_call+0xc4/0x270
    
    The buggy address belongs to the page:
    page:000003d1016929c0 count:0 mapcount:0 mapping:          (null) index:0x0
    flags: 0x0()
    raw: 0000000000000000 0000000000000000 0000000000000000 ffffffff00000000
    raw: 0000000000000100 0000000000000200 0000000000000000 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     000000005a4a7480: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
     000000005a4a7500: 00 00 00 00 00 00 00 00 f2 f2 f2 f2 00 00 00 00
    >000000005a4a7580: 00 00 00 00 f3 f3 f3 f3 00 00 00 00 00 00 00 00
                                   ^
     000000005a4a7600: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 f8 f8
     000000005a4a7680: f2 f2 f2 f2 f2 f2 f8 f8 f2 f2 f3 f3 f3 f3 00 00
    ==================================================================
    
    Signed-off-by: Vasily Gorbik <gor@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15e82cdb4d8da6c9ab0782c8bea008d03f52a97a
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Tue Sep 26 09:16:48 2017 +0200

    s390/disassembler: add missing end marker for e7 table
    
    commit 5c50538752af7968f53924b22dede8ed4ce4cb3b upstream.
    
    The e7 opcode table does not have an end marker. Hence when trying to
    find an unknown e7 instruction the code will access memory behind the
    table until it finds something that matches the opcode, or the kernel
    crashes, whatever comes first.
    
    This affects not only the in-kernel disassembler but also uprobes and
    kprobes which refuse to set a probe on unknown instructions, and
    therefore search the opcode tables to figure out if instructions are
    known or not.
    
    Fixes: 3585cb0280654 ("s390/disassembler: add vector instructions")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ee3f026aeb388248ecdc5cd6760169ee6a9e5af
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Sep 11 11:24:22 2017 +0200

    s390/guarded storage: fix possible memory corruption
    
    commit fa1edf3f63c05ca8eacafcd7048ed91e5360f1a8 upstream.
    
    For PREEMPT enabled kernels the guarded storage (GS) code contains a
    possible use-after-free bug. If a task that makes use of GS exits, it
    will execute do_exit() while still enabled for preemption.
    
    That function will call exit_thread_runtime_instr() via exit_thread().
    If exit_thread_gs() gets preempted after the GS control block of the
    task has been freed but before the pointer to it is set to NULL, then
    save_gs_cb(), called from switch_to(), will write to already freed
    memory.
    
    Avoid this and simply disable preemption while freeing the control
    block and setting the pointer to NULL.
    
    Fixes: 916cda1aa1b4 ("s390: add a system call for guarded storage")
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27576413d9484cd9df933e3e4c802cb0cfb9c915
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Sep 11 11:24:22 2017 +0200

    s390/runtime instrumention: fix possible memory corruption
    
    commit d6e646ad7cfa7034d280459b2b2546288f247144 upstream.
    
    For PREEMPT enabled kernels the runtime instrumentation (RI) code
    contains a possible use-after-free bug. If a task that makes use of RI
    exits, it will execute do_exit() while still enabled for preemption.
    
    That function will call exit_thread_runtime_instr() via
    exit_thread(). If exit_thread_runtime_instr() gets preempted after the
    RI control block of the task has been freed but before the pointer to
    it is set to NULL, then save_ri_cb(), called from switch_to(), will
    write to already freed memory.
    
    Avoid this and simply disable preemption while freeing the control
    block and setting the pointer to NULL.
    
    Fixes: e4b8b3f33fca ("s390: add support for runtime instrumentation")
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21caac65d29b7d985a7cd1672ad1dd316b227974
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Thu Nov 9 23:00:14 2017 +0100

    s390/noexec: execute kexec datamover without DAT
    
    commit d0e810eeb3d326978f248b8f0233a2f30f58c72d upstream.
    
    Rebooting into a new kernel with kexec fails (system dies) if tried on
    a machine that has no-execute support. Reason for this is that the so
    called datamover code gets executed with DAT on (MMU is active) and
    the page that contains the datamover is marked as non-executable.
    Therefore when branching into the datamover an unexpected program
    check happens and afterwards the machine is dead.
    
    This can be simply avoided by disabling DAT, which also disables any
    no-execute checks, just before the datamover gets executed.
    
    In fact the first thing done by the datamover is to disable DAT. The
    code in the datamover that disables DAT can be removed as well.
    
    Thanks to Michael Holzheu and Gerald Schaefer for tracking this down.
    
    Reviewed-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
    Reviewed-by: Philipp Rudo <prudo@linux.vnet.ibm.com>
    Cc: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Fixes: 57d7f939e7bd ("s390: add no-execute support")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 236f6e7283f593cf485b5233c8f540cf9f8120b9
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Thu Nov 9 12:29:34 2017 +0100

    s390: fix transactional execution control register handling
    
    commit a1c5befc1c24eb9c1ee83f711e0f21ee79cbb556 upstream.
    
    Dan HorÃ¡k reported the following crash related to transactional execution:
    
    User process fault: interruption code 0013 ilc:3 in libpthread-2.26.so[3ff93c00000+1b000]
    CPU: 2 PID: 1 Comm: /init Not tainted 4.13.4-300.fc27.s390x #1
    Hardware name: IBM 2827 H43 400 (z/VM 6.4.0)
    task: 00000000fafc8000 task.stack: 00000000fafc4000
    User PSW : 0705200180000000 000003ff93c14e70
               R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:1 AS:0 CC:2 PM:0 RI:0 EA:3
    User GPRS: 0000000000000077 000003ff00000000 000003ff93144d48 000003ff93144d5e
               0000000000000000 0000000000000002 0000000000000000 000003ff00000000
               0000000000000000 0000000000000418 0000000000000000 000003ffcc9fe770
               000003ff93d28f50 000003ff9310acf0 000003ff92b0319a 000003ffcc9fe6d0
    User Code: 000003ff93c14e62: 60e0b030            std     %f14,48(%r11)
               000003ff93c14e66: 60f0b038            std     %f15,56(%r11)
              #000003ff93c14e6a: e5600000ff0e        tbegin  0,65294
              >000003ff93c14e70: a7740006            brc     7,3ff93c14e7c
               000003ff93c14e74: a7080000            lhi     %r0,0
               000003ff93c14e78: a7f40023            brc     15,3ff93c14ebe
               000003ff93c14e7c: b2220000            ipm     %r0
               000003ff93c14e80: 8800001c            srl     %r0,28
    
    There are several bugs with control register handling with respect to
    transactional execution:
    
    - on task switch update_per_regs() is only called if the next task has
      an mm (is not a kernel thread). This however is incorrect. This
      breaks e.g. for user mode helper handling, where the kernel creates
      a kernel thread and then execve's a user space program. Control
      register contents related to transactional execution won't be
      updated on execve. If the previous task ran with transactional
      execution disabled then the new task will also run with
      transactional execution disabled, which is incorrect. Therefore call
      update_per_regs() unconditionally within switch_to().
    
    - on startup the transactional execution facility is not enabled for
      the idle thread. This is not really a bug, but an inconsistency to
      other facilities. Therefore enable the facility if it is available.
    
    - on fork the new thread's per_flags field is not cleared. This means
      that a child process inherits the PER_FLAG_NO_TE flag. This flag can
      be set with a ptrace request to disable transactional execution for
      the current process. It should not be inherited by new child
      processes in order to be consistent with the handling of all other
      PER related debugging options. Therefore clear the per_flags field in
      copy_thread_tls().
    
    Reported-and-tested-by: Dan HorÃ¡k <dan@danny.cz>
    Fixes: d35339a42dd1 ("s390: add support for transactional memory")
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
