commit 7b43ec8a0cc6fefdd63a1443edef0d2693ff99a2
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Feb 26 10:13:02 2021 +0100

    Linux 5.10.19
    
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Ross Schmidt <ross.schm.dev@gmail.com>
    Tested-by: Hulk Robot <hulkci@huawei.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20210225092516.531932232@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 983f361bde5e41b497e45098c873d7e39eb132b2
Author: Rong Chen <rong.a.chen@intel.com>
Date:   Fri Feb 12 20:52:41 2021 -0800

    scripts/recordmcount.pl: support big endian for ARCH sh
    
    [ Upstream commit 93ca696376dd3d44b9e5eae835ffbc84772023ec ]
    
    The kernel test robot reported the following issue:
    
        CC [M]  drivers/soc/litex/litex_soc_ctrl.o
      sh4-linux-objcopy: Unable to change endianness of input file(s)
      sh4-linux-ld: cannot find drivers/soc/litex/.tmp_gl_litex_soc_ctrl.o: No such file or directory
      sh4-linux-objcopy: 'drivers/soc/litex/.tmp_mx_litex_soc_ctrl.o': No such file
    
    The problem is that the format of input file is elf32-shbig-linux, but
    sh4-linux-objcopy wants to output a file which format is elf32-sh-linux:
    
      $ sh4-linux-objdump -d drivers/soc/litex/litex_soc_ctrl.o | grep format
      drivers/soc/litex/litex_soc_ctrl.o:     file format elf32-shbig-linux
    
    Link: https://lkml.kernel.org/r/20210210150435.2171567-1-rong.a.chen@intel.com
    Link: https://lore.kernel.org/linux-mm/202101261118.GbbYSlHu-lkp@intel.com
    Signed-off-by: Rong Chen <rong.a.chen@intel.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Yoshinori Sato <ysato@users.osdn.me>
    Cc: Rich Felker <dalias@libc.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ca89ac39e48b1e83e97709ba8b4a851132815c1
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Thu Feb 11 15:14:16 2021 +0900

    kbuild: fix CONFIG_TRIM_UNUSED_KSYMS build for ppc64
    
    [ Upstream commit 29500f15b54b63ad0ea60b58e85144262bd24df2 ]
    
    Stephen Rothwell reported a build error on ppc64 when
    CONFIG_TRIM_UNUSED_KSYMS is enabled.
    
    Jessica Yu pointed out the cause of the error with the reference to the
    ppc64 ELF ABI:
      "Symbol names with a dot (.) prefix are reserved for holding entry
       point addresses. The value of a symbol named ".FN", if it exists,
       is the entry point of the function "FN".
    
    As it turned out, CONFIG_TRIM_UNUSED_KSYMS has never worked for ppc64,
    but this issue has been unnoticed until recently because this option
    depends on !UNUSED_SYMBOLS hence is disabled by all{mod,yes}config.
    (Then, it was uncovered by another patch removing UNUSED_SYMBOLS.)
    
    Removing the dot prefix in scripts/gen_autoksyms.sh fixes the issue.
    Please note it must be done before 'sort -u' because modules have
    both ._mcount and _mcount undefined when CONFIG_FUNCTION_TRACER=y.
    
    Link: https://lore.kernel.org/lkml/20210209210843.3af66662@canb.auug.org.au/
    Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Tested-by: Jessica Yu <jeyu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8b65310e4b995324356c5ed5860a774965fdbae
Author: Shyam Prasad N <sprasad@microsoft.com>
Date:   Thu Feb 11 03:26:54 2021 -0800

    cifs: Set CIFS_MOUNT_USE_PREFIX_PATH flag on setting cifs_sb->prepath.
    
    [ Upstream commit a738c93fb1c17e386a09304b517b1c6b2a6a5a8b ]
    
    While debugging another issue today, Steve and I noticed that if a
    subdir for a file share is already mounted on the client, any new
    mount of any other subdir (or the file share root) of the same share
    results in sharing the cifs superblock, which e.g. can result in
    incorrect device name.
    
    While setting prefix path for the root of a cifs_sb,
    CIFS_MOUNT_USE_PREFIX_PATH flag should also be set.
    Without it, prepath is not even considered in some places,
    and output of "mount" and various /proc/<>/*mount* related
    options can be missing part of the device name.
    
    Signed-off-by: Shyam Prasad N <sprasad@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec6504c8a1fcfadd02f90bca6d5d0346e1d57a33
Author: Raju Rangoju <rajur@chelsio.com>
Date:   Tue Feb 2 23:55:11 2021 +0530

    cxgb4: Add new T6 PCI device id 0x6092
    
    [ Upstream commit 3401e4aa43a540881cc97190afead650e709c418 ]
    
    Signed-off-by: Raju Rangoju <rajur@chelsio.com>
    Link: https://lore.kernel.org/r/20210202182511.8109-1-rajur@chelsio.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7e51e5ecf39024c0ac1ab0d8a0af3c05b3a9964
Author: Christoph Schemmel <christoph.schemmel@gmail.com>
Date:   Tue Feb 2 09:45:23 2021 +0100

    NET: usb: qmi_wwan: Adding support for Cinterion MV31
    
    [ Upstream commit a4dc7eee9106a9d2a6e08b442db19677aa9699c7 ]
    
    Adding support for Cinterion MV31 with PID 0x00B7.
    
    T:  Bus=04 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 11 Spd=5000 MxCh= 0
    D:  Ver= 3.20 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  1
    P:  Vendor=1e2d ProdID=00b7 Rev=04.14
    S:  Manufacturer=Cinterion
    S:  Product=Cinterion USB Mobile Broadband
    S:  SerialNumber=b3246eed
    C:  #Ifs= 4 Cfg#= 1 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#=0x1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=30 Driver=option
    
    Signed-off-by: Christoph Schemmel <christoph.schemmel@gmail.com>
    Link: https://lore.kernel.org/r/20210202084523.4371-1-christoph.schemmel@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f683fd2c21f2e7cfbcaa5beb9a2723bd68ae4e8
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Tue Feb 2 14:41:21 2021 +0800

    drm/xlnx: fix kmemleak by sending vblank_event in atomic_disable
    
    [ Upstream commit a7e02f7796c163ac8297b30223bf24bade9f8a50 ]
    
    When running xrandr to change resolution of DP, the kmemleak as below
    can be observed:
    
    unreferenced object 0xffff00080a351000 (size 256):
      comm "Xorg", pid 248, jiffies 4294899614 (age 19.960s)
      hex dump (first 32 bytes):
        98 a0 bc 01 08 00 ff ff 01 00 00 00 00 00 00 00  ................
        ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<00000000e0bd0f69>] kmemleak_alloc+0x30/0x40
        [<00000000cde2f318>] kmem_cache_alloc+0x3d4/0x588
        [<0000000088ea9bd7>] drm_atomic_helper_setup_commit+0x84/0x5f8
        [<000000002290a264>] drm_atomic_helper_commit+0x58/0x388
        [<00000000f6ea78c3>] drm_atomic_commit+0x4c/0x60
        [<00000000c8e0725e>] drm_atomic_connector_commit_dpms+0xe8/0x110
        [<0000000020ade187>] drm_mode_obj_set_property_ioctl+0x1b0/0x450
        [<00000000918206d6>] drm_connector_property_set_ioctl+0x3c/0x68
        [<000000008d51e7a5>] drm_ioctl_kernel+0xc4/0x118
        [<000000002a819b75>] drm_ioctl+0x214/0x448
        [<000000008ca4e588>] __arm64_sys_ioctl+0xa8/0xf0
        [<0000000034e15a35>] el0_svc_common.constprop.0+0x74/0x190
        [<000000001b93d916>] do_el0_svc+0x24/0x90
        [<00000000ce9230e0>] el0_svc+0x14/0x20
        [<00000000e3607d82>] el0_sync_handler+0xb0/0xb8
        [<000000003e79c15f>] el0_sync+0x174/0x180
    
    This is because there is a scenario that a drm_crtc_commit commit is
    allocated but not freed. The drm subsystem require/release references
    to a CRTC commit by calling drm_crtc_commit_get/put, and when
    drm_crtc_commit_put find that commit.ref.refcount is zero, it will
    call __drm_crtc_commit_free to free this CRTC commit. Among these
    drm_crtc_commit_get/put pairs, there is a drm_crtc_commit_get in
    drm_atomic_helper_setup_commit as below:
    
    ...
    new_crtc_state->event->base.completion = &commit->flip_done;
    new_crtc_state->event->base.completion_release = release_crtc_commit;
    drm_crtc_commit_get(commit);
    ...
    
    This reference to the CRTC commit should be released at the function
    release_crtc_commit by calling e->completion_release(e->completion) in
    drm_send_event_locked. So we need to call drm_send_event_locked at
    two places: handling vblank event in the irq handler and the crtc disable
    helper. But in zynqmp_disp_crtc_atomic_disable, it only marks the flip
    is done and not call drm_crtc_commit_put. This result that the refcount
    of this commit is always non-zero and this commit will never be freed.
    
    Since the function drm_crtc_send_vblank_event has operations both sending
    a flip_done signal and releasing reference to the CRTC commit, let's use
    it instead.
    
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210202064121.173362-1-quanyang.wang@windriver.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3320aa64c322512ccc17406c0d60681177a8cac5
Author: Sean Christopherson <seanjc@google.com>
Date:   Mon Feb 8 12:19:40 2021 -0800

    KVM: Use kvm_pfn_t for local PFN variable in hva_to_pfn_remapped()
    
    commit a9545779ee9e9e103648f6f2552e73cfe808d0f4 upstream.
    
    Use kvm_pfn_t, a.k.a. u64, for the local 'pfn' variable when retrieving
    a so called "remapped" hva/pfn pair.  In theory, the hva could resolve to
    a pfn in high memory on a 32-bit kernel.
    
    This bug was inadvertantly exposed by commit bd2fae8da794 ("KVM: do not
    assume PTE is writable after follow_pfn"), which added an error PFN value
    to the mix, causing gcc to comlain about overflowing the unsigned long.
    
      arch/x86/kvm/../../../virt/kvm/kvm_main.c: In function ‘hva_to_pfn_remapped’:
      include/linux/kvm_host.h:89:30: error: conversion from ‘long long unsigned int’
                                      to ‘long unsigned int’ changes value from
                                      ‘9218868437227405314’ to ‘2’ [-Werror=overflow]
       89 | #define KVM_PFN_ERR_RO_FAULT (KVM_PFN_ERR_MASK + 2)
          |                              ^
    virt/kvm/kvm_main.c:1935:9: note: in expansion of macro ‘KVM_PFN_ERR_RO_FAULT’
    
    Cc: stable@vger.kernel.org
    Fixes: add6a0cd1c5b ("KVM: MMU: try to fix up page faults before giving up")
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210208201940.1258328-1-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a42150f1c965d23ea858c1931f53b591d9e817d4
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Feb 5 05:07:11 2021 -0500

    mm: provide a saner PTE walking API for modules
    
    commit 9fd6dad1261a541b3f5fa7dc5b152222306e6702 upstream.
    
    Currently, the follow_pfn function is exported for modules but
    follow_pte is not.  However, follow_pfn is very easy to misuse,
    because it does not provide protections (so most of its callers
    assume the page is writable!) and because it returns after having
    already unlocked the page table lock.
    
    Provide instead a simplified version of follow_pte that does
    not have the pmdpp and range arguments.  The older version
    survives as follow_invalidate_pte() for use by fs/dax.c.
    
    Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83d42c25868df563097dd8c17ed15add81dd402c
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Mon Feb 1 05:12:11 2021 -0500

    KVM: do not assume PTE is writable after follow_pfn
    
    commit bd2fae8da794b55bf2ac02632da3a151b10e664c upstream.
    
    In order to convert an HVA to a PFN, KVM usually tries to use
    the get_user_pages family of functinso.  This however is not
    possible for VM_IO vmas; in that case, KVM instead uses follow_pfn.
    
    In doing this however KVM loses the information on whether the
    PFN is writable.  That is usually not a problem because the main
    use of VM_IO vmas with KVM is for BARs in PCI device assignment,
    however it is a bug.  To fix it, use follow_pte and check pte_write
    while under the protection of the PTE lock.  The information can
    be used to fail hva_to_pfn_remapped or passed back to the
    caller via *writable.
    
    Usage of follow_pfn was introduced in commit add6a0cd1c5b ("KVM: MMU: try to fix
    up page faults before giving up", 2016-07-05); however, even older version
    have the same issue, all the way back to commit 2e2e3738af33 ("KVM:
    Handle vma regions with no backing page", 2008-07-20), as they also did
    not check whether the PFN was writable.
    
    Fixes: 2e2e3738af33 ("KVM: Handle vma regions with no backing page")
    Reported-by: David Stevens <stevensd@google.com>
    Cc: 3pvd@google.com
    Cc: Jann Horn <jannh@google.com>
    Cc: Jason Gunthorpe <jgg@ziepe.ca>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d9c9ec0d8591240ee8b4dab18b180f4972320ba
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Dec 15 20:47:23 2020 -0800

    mm: simplify follow_pte{,pmd}
    
    commit ff5c19ed4b087073cea38ff0edc80c23d7256943 upstream.
    
    Merge __follow_pte_pmd, follow_pte_pmd and follow_pte into a single
    follow_pte function and just pass two additional NULL arguments for the
    two previous follow_pte callers.
    
    [sfr@canb.auug.org.au: merge fix for "s390/pci: remove races against pte updates"]
      Link: https://lkml.kernel.org/r/20201111221254.7f6a3658@canb.auug.org.au
    
    Link: https://lkml.kernel.org/r/20201029101432.47011-3-hch@lst.de
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8d8fb7ae86cef011accf424aee1f3f72e81ff9f
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Dec 15 20:47:20 2020 -0800

    mm: unexport follow_pte_pmd
    
    commit 7336375734d65ecc82956b59a79cf5deccce880c upstream.
    
    Patch series "simplify follow_pte a bit".
    
    This small series drops the not needed follow_pte_pmd exports, and
    simplifies the follow_pte family of functions a bit.
    
    This patch (of 2):
    
    follow_pte_pmd() is only used by the DAX code, which can't be modular.
    
    Link: https://lkml.kernel.org/r/20201029101432.47011-2-hch@lst.de
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2cbae37c3d8f9ce1f33ae690421be6ecf3809d1
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Jan 13 12:50:30 2021 -0800

    KVM: x86: Zap the oldest MMU pages, not the newest
    
    commit 8fc517267fb28576dfca2380cc2497a2454b8fae upstream.
    
    Walk the list of MMU pages in reverse in kvm_mmu_zap_oldest_mmu_pages().
    The list is FIFO, meaning new pages are inserted at the head and thus
    the oldest pages are at the tail.  Using a "forward" iterator causes KVM
    to zap MMU pages that were just added, which obliterates guest
    performance once the max number of shadow MMU pages is reached.
    
    Fixes: 6b82ef2c9cf1 ("KVM: x86/mmu: Batch zap MMU pages when recycling oldest pages")
    Reported-by: Zdenek Kaspar <zkaspar82@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210113205030.3481307-1-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 729fbb8cb27654c75171d6fa4d9cdfe10bc212eb
Author: Thomas Hebb <tommyhebb@gmail.com>
Date:   Sat Jan 23 18:46:08 2021 -0800

    hwmon: (dell-smm) Add XPS 15 L502X to fan control blacklist
    
    commit 4008bc7d39537bb3be166d8a3129c4980e1dd7dc upstream.
    
    It has been reported[0] that the Dell XPS 15 L502X exhibits similar
    freezing behavior to the other systems[1] on this blacklist. The issue
    was exposed by a prior change of mine to automatically load
    dell_smm_hwmon on a wider set of XPS models. To fix the regression, add
    this model to the blacklist.
    
    [0] https://bugzilla.kernel.org/show_bug.cgi?id=211081
    [1] https://bugzilla.kernel.org/show_bug.cgi?id=195751
    
    Fixes: b8a13e5e8f37 ("hwmon: (dell-smm) Use one DMI match for all XPS models")
    Cc: stable@vger.kernel.org
    Reported-by: Bob Hepple <bob.hepple@gmail.com>
    Tested-by: Bob Hepple <bob.hepple@gmail.com>
    Signed-off-by: Thomas Hebb <tommyhebb@gmail.com>
    Reviewed-by: Pali Rohár <pali@kernel.org>
    Link: https://lore.kernel.org/r/a09eea7616881d40d2db2fb5fa2770dc6166bdae.1611456351.git.tommyhebb@gmail.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 956690f5c607d7da2948190d7647ec8ed951c5ef
Author: Sameer Pujar <spujar@nvidia.com>
Date:   Thu Jan 7 10:36:10 2021 +0530

    arm64: tegra: Add power-domain for Tegra210 HDA
    
    commit 1e0ca5467445bc1f41a9e403d6161a22f313dae7 upstream.
    
    HDA initialization is failing occasionally on Tegra210 and following
    print is observed in the boot log. Because of this probe() fails and
    no sound card is registered.
    
      [16.800802] tegra-hda 70030000.hda: no codecs found!
    
    Codecs request a state change and enumeration by the controller. In
    failure cases this does not seem to happen as STATETS register reads 0.
    
    The problem seems to be related to the HDA codec dependency on SOR
    power domain. If it is gated during HDA probe then the failure is
    observed. Building Tegra HDA driver into kernel image avoids this
    failure but does not completely address the dependency part. Fix this
    problem by adding 'power-domains' DT property for Tegra210 HDA. Note
    that Tegra186 and Tegra194 HDA do this already.
    
    Fixes: 742af7e7a0a1 ("arm64: tegra: Add Tegra210 support")
    Depends-on: 96d1f078ff0 ("arm64: tegra: Add SOR power-domain for Tegra210")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sameer Pujar <spujar@nvidia.com>
    Acked-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d63699364fa3c5f8a081b26f7c111888944f0f14
Author: Hui Wang <hui.wang@canonical.com>
Date:   Mon Feb 8 13:02:37 2021 +0800

    Bluetooth: btusb: Some Qualcomm Bluetooth adapters stop working
    
    commit 234f414efd1164786269849b4fbb533d6c9cdbbf upstream.
    
    This issue starts from linux-5.10-rc1, I reproduced this issue on my
    Dell Inspiron 7447 with BT adapter 0cf3:e005, the kernel will print
    out: "Bluetooth: hci0: don't support firmware rome 0x31010000", and
    someone else also reported the similar issue to bugzilla #211571.
    
    I found this is a regression introduced by 'commit b40f58b97386
    ("Bluetooth: btusb: Add Qualcomm Bluetooth SoC WCN6855 support"), the
    patch assumed that if high ROM version is not zero, it is an adapter
    on WCN6855, but many old adapters don't need to load rampatch or nvm,
    and they have non-zero high ROM version.
    
    To fix it, let the driver match the rom_version in the
    qca_devices_table first, if there is no entry matched, check the
    high ROM version, if it is not zero, we assume this adapter is ready
    to work and no need to load rampatch and nvm like previously.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=211571
    Fixes: b40f58b97386 ("Bluetooth: btusb: Add Qualcomm Bluetooth SoC WCN6855 support")
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Cc: Salvatore Bonaccorso <carnil@debian.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f04a05fa1ed725db82993e6075c6b1b60cfc3cb
Author: Rustam Kovhaev <rkovhaev@gmail.com>
Date:   Wed Feb 24 12:00:30 2021 -0800

    ntfs: check for valid standard information attribute
    
    commit 4dfe6bd94959222e18d512bdf15f6bf9edb9c27c upstream.
    
    Mounting a corrupted filesystem with NTFS resulted in a kernel crash.
    
    We should check for valid STANDARD_INFORMATION attribute offset and length
    before trying to access it
    
    Link: https://lkml.kernel.org/r/20210217155930.1506815-1-rkovhaev@gmail.com
    Link: https://syzkaller.appspot.com/bug?extid=c584225dabdea2f71969
    Signed-off-by: Rustam Kovhaev <rkovhaev@gmail.com>
    Reported-by: syzbot+c584225dabdea2f71969@syzkaller.appspotmail.com
    Tested-by: syzbot+c584225dabdea2f71969@syzkaller.appspotmail.com
    Acked-by: Anton Altaparmakov <anton@tuxera.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e81e1db8b50b310de422fed239c409d87e4ab68
Author: Luis Henriques <lhenriques@suse.de>
Date:   Thu Nov 12 11:25:32 2020 +0000

    ceph: downgrade warning from mdsmap decode to debug
    
    commit ccd1acdf1c49b835504b235461fd24e2ed826764 upstream.
    
    While the MDS cluster is unstable and changing state the client may get
    mdsmap updates that will trigger warnings:
    
      [144692.478400] ceph: mdsmap_decode got incorrect state(up:standby-replay)
      [144697.489552] ceph: mdsmap_decode got incorrect state(up:standby-replay)
      [144697.489580] ceph: mdsmap_decode got incorrect state(up:standby-replay)
    
    This patch downgrades these warnings to debug, as they may flood the logs
    if the cluster is unstable for a while.
    
    Signed-off-by: Luis Henriques <lhenriques@suse.de>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92c8c930caa00e7cd775501052cf8d2f546e77d7
Author: Stefan Ursella <stefan.ursella@wolfvision.net>
Date:   Wed Feb 10 15:07:11 2021 +0100

    usb: quirks: add quirk to start video capture on ELMO L-12F document camera reliable
    
    commit 1ebe718bb48278105816ba03a0408ecc2d6cf47f upstream.
    
    Without this quirk starting a video capture from the device often fails with
    
    kernel: uvcvideo: Failed to set UVC probe control : -110 (exp. 34).
    
    Signed-off-by: Stefan Ursella <stefan.ursella@wolfvision.net>
    Link: https://lore.kernel.org/r/20210210140713.18711-1-stefan.ursella@wolfvision.net
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8921ed4d330cc9511381862c14af87a5b7f425e
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Feb 10 12:17:46 2021 +0100

    USB: quirks: sort quirk entries
    
    commit 43861d29c0810a70792bf69d37482efb7bb6677d upstream.
    
    Move the last entry to its proper place to maintain the VID/PID sort
    order.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210210111746.13360-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95c0528c11b234c6292448f6d2963fc5979ca9be
Author: Christoph Hellwig <hch@lst.de>
Date:   Fri Nov 6 19:19:35 2020 +0100

    nvme-rdma: Use ibdev_to_node instead of dereferencing ->dma_device
    
    commit 22dd4c707673129ed17e803b4bf68a567b2731db upstream.
    
    ->dma_device is a private implementation detail of the RDMA core.  Use the
    ibdev_to_node helper to get the NUMA node for a ib_device instead of
    poking into ->dma_device.
    
    Link: https://lore.kernel.org/r/20201106181941.1878556-5-hch@lst.de
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Cc: Krishnamraju Eraparaju <krishna2@chelsio.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 225d207da2e1169aee30faaa71bd7cf70c7277a3
Author: Christoph Hellwig <hch@lst.de>
Date:   Fri Nov 6 19:19:34 2020 +0100

    RDMA: Lift ibdev_to_node from rds to common code
    
    commit 8ecfca68dc4cbee1272a0161e3f2fb9387dc6930 upstream.
    
    Lift the ibdev_to_node from rds to common code and document it.
    
    Link: https://lore.kernel.org/r/20201106181941.1878556-4-hch@lst.de
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Cc: Krishnamraju Eraparaju <krishna2@chelsio.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77344e18cf84b37548292f2adfdb22f89079e0a6
Author: Will McVicker <willmcvicker@google.com>
Date:   Sat Dec 5 00:48:48 2020 +0000

    HID: make arrays usage and value to be the same
    
    commit ed9be64eefe26d7d8b0b5b9fa3ffdf425d87a01f upstream.
    
    The HID subsystem allows an "HID report field" to have a different
    number of "values" and "usages" when it is allocated. When a field
    struct is created, the size of the usage array is guaranteed to be at
    least as large as the values array, but it may be larger. This leads to
    a potential out-of-bounds write in
    __hidinput_change_resolution_multipliers() and an out-of-bounds read in
    hidinput_count_leds().
    
    To fix this, let's make sure that both the usage and value arrays are
    the same size.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Will McVicker <willmcvicker@google.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3320bae8c115863b6f17993c2b7970f7f419da57
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Wed Feb 10 14:14:42 2021 +0100

    bpf: Fix truncation handling for mod32 dst reg wrt zero
    
    commit 9b00f1b78809309163dda2d044d9e94a3c0248a3 upstream.
    
    Recently noticed that when mod32 with a known src reg of 0 is performed,
    then the dst register is 32-bit truncated in verifier:
    
      0: R1=ctx(id=0,off=0,imm=0) R10=fp0
      0: (b7) r0 = 0
      1: R0_w=inv0 R1=ctx(id=0,off=0,imm=0) R10=fp0
      1: (b7) r1 = -1
      2: R0_w=inv0 R1_w=inv-1 R10=fp0
      2: (b4) w2 = -1
      3: R0_w=inv0 R1_w=inv-1 R2_w=inv4294967295 R10=fp0
      3: (9c) w1 %= w0
      4: R0_w=inv0 R1_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R2_w=inv4294967295 R10=fp0
      4: (b7) r0 = 1
      5: R0_w=inv1 R1_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R2_w=inv4294967295 R10=fp0
      5: (1d) if r1 == r2 goto pc+1
       R0_w=inv1 R1_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R2_w=inv4294967295 R10=fp0
      6: R0_w=inv1 R1_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R2_w=inv4294967295 R10=fp0
      6: (b7) r0 = 2
      7: R0_w=inv2 R1_w=inv(id=0,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R2_w=inv4294967295 R10=fp0
      7: (95) exit
      7: R0=inv1 R1=inv(id=0,umin_value=4294967295,umax_value=4294967295,var_off=(0x0; 0xffffffff)) R2=inv4294967295 R10=fp0
      7: (95) exit
    
    However, as a runtime result, we get 2 instead of 1, meaning the dst
    register does not contain (u32)-1 in this case. The reason is fairly
    straight forward given the 0 test leaves the dst register as-is:
    
      # ./bpftool p d x i 23
       0: (b7) r0 = 0
       1: (b7) r1 = -1
       2: (b4) w2 = -1
       3: (16) if w0 == 0x0 goto pc+1
       4: (9c) w1 %= w0
       5: (b7) r0 = 1
       6: (1d) if r1 == r2 goto pc+1
       7: (b7) r0 = 2
       8: (95) exit
    
    This was originally not an issue given the dst register was marked as
    completely unknown (aka 64 bit unknown). However, after 468f6eafa6c4
    ("bpf: fix 32-bit ALU op verification") the verifier casts the register
    output to 32 bit, and hence it becomes 32 bit unknown. Note that for
    the case where the src register is unknown, the dst register is marked
    64 bit unknown. After the fix, the register is truncated by the runtime
    and the test passes:
    
      # ./bpftool p d x i 23
       0: (b7) r0 = 0
       1: (b7) r1 = -1
       2: (b4) w2 = -1
       3: (16) if w0 == 0x0 goto pc+2
       4: (9c) w1 %= w0
       5: (05) goto pc+1
       6: (bc) w1 = w1
       7: (b7) r0 = 1
       8: (1d) if r1 == r2 goto pc+1
       9: (b7) r0 = 2
      10: (95) exit
    
    Semantics also match with {R,W}x mod{64,32} 0 -> {R,W}x. Invalid div
    has always been {R,W}x div{64,32} 0 -> 0. Rewrites are as follows:
    
      mod32:                            mod64:
    
      (16) if w0 == 0x0 goto pc+2       (15) if r0 == 0x0 goto pc+1
      (9c) w1 %= w0                     (9f) r1 %= r0
      (05) goto pc+1
      (bc) w1 = w1
    
    Fixes: 468f6eafa6c4 ("bpf: fix 32-bit ALU op verification")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: John Fastabend <john.fastabend@gmail.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
