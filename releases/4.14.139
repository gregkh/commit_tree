commit 45f092f9e9cb31486db546e39bfe7cc0b3f57099
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Aug 16 10:13:59 2019 +0200

    Linux 4.14.139

commit 3f68c24920284ff41e829934df6bf5021efe8ecc
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Fri Jul 19 12:21:59 2019 +0300

    iwlwifi: mvm: fix version check for GEO_TX_POWER_LIMIT support
    
    commit f5a47fae6aa3eb06f100e701d2342ee56b857bee upstream.
    
    We erroneously added a check for FW API version 41 before sending
    GEO_TX_POWER_LIMIT, but this was already implemented in version 38.
    Additionally, it was cherry-picked to older versions, namely 17, 26
    and 29, so check for those as well.
    
    Cc: stable@vger.kernel.org
    Fixes: eca1e56ceedd ("iwlwifi: mvm: don't send GEO_TX_POWER_LIMIT to old firmwares")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a41636163fda00d27e44b4147635ca849c97290b
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Mon Jun 24 22:29:33 2019 +0300

    iwlwifi: mvm: don't send GEO_TX_POWER_LIMIT on version < 41
    
    commit 39bd984c203e86f3109b49c2a2e20677c4d3ab65 upstream.
    
    Firmware versions before 41 don't support the GEO_TX_POWER_LIMIT
    command, and sending it to the firmware will cause a firmware crash.
    We allow this via debugfs, so we need to return an error value in case
    it's not supported.
    
    This had already been fixed during init, when we send the command if
    the ACPI WGDS table is present.  Fix it also for the other,
    userspace-triggered case.
    
    Cc: stable@vger.kernel.org
    Fixes: 7fe90e0e3d60 ("iwlwifi: mvm: refactor geo init")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e2de0b299c089915501a56a6eed5b1d94c12a4a
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Mon Jul 22 12:47:27 2019 +0300

    iwlwifi: mvm: fix an out-of-bound access
    
    commit ba3224db78034435e9ff0247277cce7c7bb1756c upstream.
    
    The index for the elements of the ACPI object we dereference
    was static. This means that if we called the function twice
    we wouldn't start from 3 again, but rather from the latest
    index we reached in the previous call.
    This was dutifully reported by KASAN.
    
    Fix this.
    
    Cc: stable@vger.kernel.org
    Fixes: 6996490501ed ("iwlwifi: mvm: add support for EWRD (Dynamic SAR) ACPI table")
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5557083f8577fb2d36862b46a405d37ecd54ffff
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Sun Jul 21 14:02:27 2019 +0300

    iwlwifi: don't unmap as page memory that was mapped as single
    
    commit 87e7e25aee6b59fef740856f4e86d4b60496c9e1 upstream.
    
    In order to remember how to unmap a memory (as single or
    as page), we maintain a bit per Transmit Buffer (TBs) in
    the meta data (structure iwl_cmd_meta).
    We maintain a bitmap: 1 bit per TB.
    If the TB is set, we will free the memory as a page.
    This bitmap was never cleared. Fix this.
    
    Cc: stable@vger.kernel.org
    Fixes: 3cd1980b0cdf ("iwlwifi: pcie: introduce new tfd and tb formats")
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c12ea355ef01fc3fe90500cd6da0940e3218e740
Author: Brian Norris <briannorris@chromium.org>
Date:   Wed Jul 24 12:46:34 2019 -0700

    mwifiex: fix 802.11n/WPA detection
    
    commit df612421fe2566654047769c6852ffae1a31df16 upstream.
    
    Commit 63d7ef36103d ("mwifiex: Don't abort on small, spec-compliant
    vendor IEs") adjusted the ieee_types_vendor_header struct, which
    inadvertently messed up the offsets used in
    mwifiex_is_wpa_oui_present(). Add that offset back in, mirroring
    mwifiex_is_rsn_oui_present().
    
    As it stands, commit 63d7ef36103d breaks compatibility with WPA (not
    WPA2) 802.11n networks, since we hit the "info: Disable 11n if AES is
    not supported by AP" case in mwifiex_is_network_compatible().
    
    Fixes: 63d7ef36103d ("mwifiex: Don't abort on small, spec-compliant vendor IEs")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90ad23e8c5838166387684ec1b8d4d8f3b9913a6
Author: Wanpeng Li <wanpengli@tencent.com>
Date:   Mon Aug 5 10:03:19 2019 +0800

    KVM: Fix leak vCPU's VMCS value into other pCPU
    
    commit 17e433b54393a6269acbcb792da97791fe1592d8 upstream.
    
    After commit d73eb57b80b (KVM: Boost vCPUs that are delivering interrupts), a
    five years old bug is exposed. Running ebizzy benchmark in three 80 vCPUs VMs
    on one 80 pCPUs Skylake server, a lot of rcu_sched stall warning splatting
    in the VMs after stress testing:
    
     INFO: rcu_sched detected stalls on CPUs/tasks: { 4 41 57 62 77} (detected by 15, t=60004 jiffies, g=899, c=898, q=15073)
     Call Trace:
       flush_tlb_mm_range+0x68/0x140
       tlb_flush_mmu.part.75+0x37/0xe0
       tlb_finish_mmu+0x55/0x60
       zap_page_range+0x142/0x190
       SyS_madvise+0x3cd/0x9c0
       system_call_fastpath+0x1c/0x21
    
    swait_active() sustains to be true before finish_swait() is called in
    kvm_vcpu_block(), voluntarily preempted vCPUs are taken into account
    by kvm_vcpu_on_spin() loop greatly increases the probability condition
    kvm_arch_vcpu_runnable(vcpu) is checked and can be true, when APICv
    is enabled the yield-candidate vCPU's VMCS RVI field leaks(by
    vmx_sync_pir_to_irr()) into spinning-on-a-taken-lock vCPU's current
    VMCS.
    
    This patch fixes it by checking conservatively a subset of events.
    
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: Marc Zyngier <Marc.Zyngier@arm.com>
    Cc: stable@vger.kernel.org
    Fixes: 98f4a1467 (KVM: add kvm_arch_vcpu_runnable() test to kvm_vcpu_on_spin() loop)
    Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 199e8a4385e2c0d008a8b1cf1c77fabc06cb594d
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Sat Aug 3 10:28:18 2019 -0400

    NFSv4: Fix an Oops in nfs4_do_setattr
    
    commit 09a54f0ebfe263bc27c90bbd80187b9a93283887 upstream.
    
    If the user specifies an open mode of 3, then we don't have a NFSv4 state
    attached to the context, and so we Oops when we try to dereference it.
    
    Reported-by: Olga Kornievskaia <aglo@umich.edu>
    Fixes: 29b59f9416937 ("NFSv4: change nfs4_do_setattr to take...")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Cc: stable@vger.kernel.org # v4.10: 991eedb1371dc: NFSv4: Only pass the...
    Cc: stable@vger.kernel.org # v4.10+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a72bf90d7870c1bbd851351c631e1a6b29b5f05
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Mon Apr 9 11:15:30 2018 -0400

    NFSv4: Only pass the delegation to setattr if we're sending a truncate
    
    commit 991eedb1371dc09b0f9848f59c8898fe63d198c0 upstream.
    
    Even then it isn't really necessary. The reason why we may not want to
    pass in a stateid in other cases is that we cannot use the delegation
    credential.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fab3d4e7a2f220bc40f8e4680a7616bf422c944a
Author: Steve French <stfrench@microsoft.com>
Date:   Thu Jul 25 18:13:10 2019 -0500

    smb3: send CAP_DFS capability during session setup
    
    commit 8d33096a460d5b9bd13300f01615df5bb454db10 upstream.
    
    We had a report of a server which did not do a DFS referral
    because the session setup Capabilities field was set to 0
    (unlike negotiate protocol where we set CAP_DFS).  Better to
    send it session setup in the capabilities as well (this also
    more closely matches Windows client behavior).
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-off-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaff94c5989cf7c9823211f6d5a816678ba4f7a0
Author: Pavel Shilovsky <pshilov@microsoft.com>
Date:   Mon Jul 22 11:34:59 2019 -0700

    SMB3: Fix deadlock in validate negotiate hits reconnect
    
    commit e99c63e4d86d3a94818693147b469fa70de6f945 upstream.
    
    Currently we skip SMB2_TREE_CONNECT command when checking during
    reconnect because Tree Connect happens when establishing
    an SMB session. For SMB 3.0 protocol version the code also calls
    validate negotiate which results in SMB2_IOCL command being sent
    over the wire. This may deadlock on trying to acquire a mutex when
    checking for reconnect. Fix this by skipping SMB2_IOCL command
    when doing the reconnect check.
    
    Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c529d4d8b8a7eeb68f8ac1139d06e1fbacd8fe9
Author: Brian Norris <briannorris@chromium.org>
Date:   Fri Jul 26 15:47:58 2019 -0700

    mac80211: don't WARN on short WMM parameters from AP
    
    commit 05aaa5c97dce4c10a9e7eae2f1569a684e0c5ced upstream.
    
    In a very similar spirit to commit c470bdc1aaf3 ("mac80211: don't WARN
    on bad WMM parameters from buggy APs"), an AP may not transmit a
    fully-formed WMM IE. For example, it may miss or repeat an Access
    Category. The above loop won't catch that and will instead leave one of
    the four ACs zeroed out. This triggers the following warning in
    drv_conf_tx()
    
      wlan0: invalid CW_min/CW_max: 0/0
    
    and it may leave one of the hardware queues unconfigured. If we detect
    such a case, let's just print a warning and fall back to the defaults.
    
    Tested with a hacked version of hostapd, intentionally corrupting the
    IEs in hostapd_eid_wmm().
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Link: https://lore.kernel.org/r/20190726224758.210953-1-briannorris@chromium.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aab77d312dc39aeffe24223f00ea7c2acf6543cd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Aug 6 17:31:48 2019 +0200

    ALSA: hda - Workaround for crackled sound on AMD controller (1022:1457)
    
    commit c02f77d32d2c45cfb1b2bb99eabd8a78f5ecc7db upstream.
    
    A long-time problem on the recent AMD chip (X370, X470, B450, etc with
    PCI ID 1022:1457) with Realtek codecs is the crackled or distorted
    sound for capture streams, as well as occasional playback hiccups.
    After lengthy debugging sessions, the workarounds we've found are like
    the following:
    
    - Set up the proper driver caps for this controller, similar as the
      other AMD controller.
    
    - Correct the DMA position reporting with the fixed FIFO size, which
      is similar like as workaround used for VIA chip set.
    
    - Even after the position correction, PulseAudio still shows
      mysterious stalls of playback streams when a capture is triggered in
      timer-scheduled mode.  Since we have no clear way to eliminate the
      stall, pass the BATCH PCM flag for PA to suppress the tsched mode as
      a temporary workaround.
    
    This patch implements the workarounds.  For the driver caps, it
    defines a new preset, AXZ_DCAPS_PRESET_AMD_SB.  It enables the FIFO-
    corrected position reporting (corresponding to the new position_fix=6)
    and enforces the SNDRV_PCM_INFO_BATCH flag.
    
    Note that the current implementation is merely a workaround.
    Hopefully we'll find a better alternative in future, especially about
    removing the BATCH flag hack again.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=195303
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34ea66aa1b0260977e8efe6638797e2fc724544c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Aug 6 14:03:56 2019 +0200

    ALSA: hda - Don't override global PCM hw info flag
    
    commit c1c6c877b0c79fd7e05c931435aa42211eaeebaf upstream.
    
    The commit bfcba288b97f ("ALSA - hda: Add support for link audio time
    reporting") introduced the conditional PCM hw info setup, but it
    overwrites the global azx_pcm_hw object.  This will cause a problem if
    any other HD-audio controller, as it'll inherit the same bit flag
    although another controller doesn't support that feature.
    
    Fix the bug by setting the PCM hw info flag locally.
    
    Fixes: bfcba288b97f ("ALSA - hda: Add support for link audio time reporting")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 065ddcefa28feadd5cc981d1f3b40af6e67ecad1
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Thu Aug 8 00:50:58 2019 -0500

    ALSA: firewire: fix a memory leak bug
    
    commit 1be3c1fae6c1e1f5bb982b255d2034034454527a upstream.
    
    In iso_packets_buffer_init(), 'b->packets' is allocated through
    kmalloc_array(). Then, the aligned packet size is checked. If it is
    larger than PAGE_SIZE, -EINVAL will be returned to indicate the error.
    However, the allocated 'b->packets' is not deallocated on this path,
    leading to a memory leak.
    
    To fix the above issue, free 'b->packets' before returning the error code.
    
    Fixes: 31ef9134eb52 ("ALSA: add LaCie FireWire Speakers/Griffin FireWave Surround driver")
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Reviewed-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Cc: <stable@vger.kernel.org> # v2.6.39+
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ea33569c48573d413985b02dece01f231cb6a3f
Author: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
Date:   Fri Jul 12 11:19:38 2019 +0300

    drm/i915: Fix wrong escape clock divisor init for GLK
    
    commit 73a0ff0b30af79bf0303d557eb82f1d1945bb6ee upstream.
    
    According to Bspec clock divisor registers in GeminiLake
    should be initialized by shifting 1(<<) to amount of correspondent
    divisor. While i915 was writing all this time that value as is.
    
    Surprisingly that it by accident worked, until we met some issues
    with Microtech Etab.
    
    v2: Added Fixes tag and cc
    v3: Added stable to cc as well.
    
    Signed-off-by: Stanislav Lisovskiy <stanislav.lisovskiy@intel.com>
    Reviewed-by: Vandita Kulkarni <vandita.kulkarni@intel.com>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=108826
    Fixes: bcc657004841 ("drm/i915/glk: Program txesc clock divider for GLK")
    Cc: Deepak M <m.deepak@intel.com>
    Cc: Madhav Chauhan <madhav.chauhan@intel.com>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Cc: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Cc: Rodrigo Vivi <rodrigo.vivi@intel.com>
    Cc: intel-gfx@lists.freedesktop.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190712081938.14185-1-stanislav.lisovskiy@intel.com
    (cherry picked from commit ce52ad5dd52cfaf3398058384e0ff94134bbd89c)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42f10030ef02d8115364d80a72a296e22c407741
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Fri Jul 26 08:00:49 2019 -0700

    hwmon: (nct7802) Fix wrong detection of in4 presence
    
    commit 38ada2f406a9b81fb1249c5c9227fa657e7d5671 upstream.
    
    The code to detect if in4 is present is wrong; if in4 is not present,
    the in4_input sysfs attribute is still present.
    
    In detail:
    
    - Ihen RTD3_MD=11 (VSEN3 present), everything is as expected (no bug).
    - If we have RTD3_MD!=11 (no VSEN3), we unexpectedly have a in4_input
      file under /sys and the "sensors" command displays in4_input.
      But as expected, we have no in4_min, in4_max, in4_alarm, in4_beep.
    
    Fix is_visible function to detect and report in4_input visibility
    as expected.
    
    Reported-by: Gilles Buloz <Gilles.Buloz@kontron.com>
    Cc: Gilles Buloz <Gilles.Buloz@kontron.com>
    Cc: stable@vger.kernel.org
    Fixes: 3434f37835804 ("hwmon: Driver for Nuvoton NCT7802Y")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15312ff709e6a5598a33edb3d31882951233d765
Author: Tomas Bortoli <tomasbortoli@gmail.com>
Date:   Wed Jul 31 10:54:47 2019 -0400

    can: peak_usb: pcan_usb_fd: Fix info-leaks to USB devices
    
    commit 30a8beeb3042f49d0537b7050fd21b490166a3d9 upstream.
    
    Uninitialized Kernel memory can leak to USB devices.
    
    Fix by using kzalloc() instead of kmalloc() on the affected buffers.
    
    Signed-off-by: Tomas Bortoli <tomasbortoli@gmail.com>
    Reported-by: syzbot+513e4d0985298538bf9b@syzkaller.appspotmail.com
    Fixes: 0a25e1f4f185 ("can: peak_usb: add support for PEAK new CANFD USB adapters")
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc741536d5d04065217a8402c52ad49df4cf134c
Author: Tomas Bortoli <tomasbortoli@gmail.com>
Date:   Wed Jul 31 10:54:47 2019 -0400

    can: peak_usb: pcan_usb_pro: Fix info-leaks to USB devices
    
    commit ead16e53c2f0ed946d82d4037c630e2f60f4ab69 upstream.
    
    Uninitialized Kernel memory can leak to USB devices.
    
    Fix by using kzalloc() instead of kmalloc() on the affected buffers.
    
    Signed-off-by: Tomas Bortoli <tomasbortoli@gmail.com>
    Reported-by: syzbot+d6a5a1a3657b596ef132@syzkaller.appspotmail.com
    Fixes: f14e22435a27 ("net: can: peak_usb: Do not do dma on the stack")
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d36507bc56fa8e16b9dcb13758cf36587a5f0606
Author: Roderick Colenbrander <roderick@gaikai.com>
Date:   Fri Aug 2 15:50:19 2019 -0700

    HID: sony: Fix race condition between rumble and device remove.
    
    commit e0f6974a54d3f7f1b5fdf5a593bd43ce9206ec04 upstream.
    
    Valve reported a kernel crash on Ubuntu 18.04 when disconnecting a DS4
    gamepad while rumble is enabled. This issue is reproducible with a
    frequency of 1 in 3 times in the game Borderlands 2 when using an
    automatic weapon, which triggers many rumble operations.
    
    We found the issue to be a race condition between sony_remove and the
    final device destruction by the HID / input system. The problem was
    that sony_remove didn't clean some of its work_item state in
    "struct sony_sc". After sony_remove work, the corresponding evdev
    node was around for sufficient time for applications to still queue
    rumble work after "sony_remove".
    
    On pre-4.19 kernels the race condition caused a kernel crash due to a
    NULL-pointer dereference as "sc->output_report_dmabuf" got freed during
    sony_remove. On newer kernels this crash doesn't happen due the buffer
    now being allocated using devm_kzalloc. However we can still queue work,
    while the driver is an undefined state.
    
    This patch fixes the described problem, by guarding the work_item
    "state_worker" with an initialized variable, which we are setting back
    to 0 on cleanup.
    
    Signed-off-by: Roderick Colenbrander <roderick.colenbrander@sony.com>
    CC: stable@vger.kernel.org
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 666f1e9490abec5fcf29383742981f9458e7f969
Author: Leonard Crestez <leonard.crestez@nxp.com>
Date:   Wed Jul 24 15:53:24 2019 +0300

    perf/core: Fix creating kernel counters for PMUs that override event->cpu
    
    [ Upstream commit 4ce54af8b33d3e21ca935fc1b89b58cbba956051 ]
    
    Some hardware PMU drivers will override perf_event.cpu inside their
    event_init callback. This causes a lockdep splat when initialized through
    the kernel API:
    
     WARNING: CPU: 0 PID: 250 at kernel/events/core.c:2917 ctx_sched_out+0x78/0x208
     pc : ctx_sched_out+0x78/0x208
     Call trace:
      ctx_sched_out+0x78/0x208
      __perf_install_in_context+0x160/0x248
      remote_function+0x58/0x68
      generic_exec_single+0x100/0x180
      smp_call_function_single+0x174/0x1b8
      perf_install_in_context+0x178/0x188
      perf_event_create_kernel_counter+0x118/0x160
    
    Fix this by calling perf_install_in_context with event->cpu, just like
    perf_event_open
    
    Signed-off-by: Leonard Crestez <leonard.crestez@nxp.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Frank Li <Frank.li@nxp.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will@kernel.org>
    Link: https://lkml.kernel.org/r/c4ebe0503623066896d7046def4d6b1e06e0eb2e.1563972056.git.leonard.crestez@nxp.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5aa36e425fbb6dd9a4e1a05ca1a2e0d4652a5ac
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Jul 18 15:03:15 2019 +0200

    tty/ldsem, locking/rwsem: Add missing ACQUIRE to read_failed sleep loop
    
    [ Upstream commit 952041a8639a7a3a73a2b6573cb8aa8518bc39f8 ]
    
    While reviewing rwsem down_slowpath, Will noticed ldsem had a copy of
    a bug we just found for rwsem.
    
      X = 0;
    
      CPU0                  CPU1
    
      rwsem_down_read()
        for (;;) {
          set_current_state(TASK_UNINTERRUPTIBLE);
    
                            X = 1;
                            rwsem_up_write();
                              rwsem_mark_wake()
                                atomic_long_add(adjustment, &sem->count);
                                smp_store_release(&waiter->task, NULL);
    
          if (!waiter.task)
            break;
    
          ...
        }
    
      r = X;
    
    Allows 'r == 0'.
    
    Reported-by: Will Deacon <will@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Will Deacon <will@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Hurley <peter@hurleysoftware.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 4898e640caf0 ("tty: Add timed, writer-prioritized rw semaphore")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d4611f342c9ab6341fff0bb4f822f5cde00d6a1
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Sun Jul 14 01:11:35 2019 -0500

    test_firmware: fix a memory leak bug
    
    [ Upstream commit d4fddac5a51c378c5d3e68658816c37132611e1f ]
    
    In test_firmware_init(), the buffer pointed to by the global pointer
    'test_fw_config' is allocated through kzalloc(). Then, the buffer is
    initialized in __test_firmware_config_init(). In the case that the
    initialization fails, the following execution in test_firmware_init() needs
    to be terminated with an error code returned to indicate this failure.
    However, the allocated buffer is not freed on this execution path, leading
    to a memory leak bug.
    
    To fix the above issue, free the allocated buffer before returning from
    test_firmware_init().
    
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Link: https://lore.kernel.org/r/1563084696-6865-1-git-send-email-wang6495@umn.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7faeeb95faeedc2956fc5d2c8c202fdcdb49d4a0
Author: Hannes Reinecke <hare@suse.de>
Date:   Fri Jul 12 08:53:47 2019 +0200

    scsi: scsi_dh_alua: always use a 2 second delay before retrying RTPG
    
    [ Upstream commit 20122994e38aef0ae50555884d287adde6641c94 ]
    
    Retrying immediately after we've received a 'transitioning' sense code is
    pretty much pointless, we should always use a delay before retrying.  So
    ensure the default delay is applied before retrying.
    
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Tested-by: Zhangguanghui <zhang.guanghui@h3c.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 030d9e2fe766fd0a192fcf7994057bdad3af152e
Author: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
Date:   Wed Jul 17 14:48:27 2019 -0500

    scsi: ibmvfc: fix WARN_ON during event pool release
    
    [ Upstream commit 5578257ca0e21056821e6481bd534ba267b84e58 ]
    
    While removing an ibmvfc client adapter a WARN_ON like the following
    WARN_ON is seen in the kernel log:
    
    WARNING: CPU: 6 PID: 5421 at ./include/linux/dma-mapping.h:541
    ibmvfc_free_event_pool+0x12c/0x1f0 [ibmvfc]
    CPU: 6 PID: 5421 Comm: rmmod Tainted: G            E     4.17.0-rc1-next-20180419-autotest #1
    NIP:  d00000000290328c LR: d00000000290325c CTR: c00000000036ee20
    REGS: c000000288d1b7e0 TRAP: 0700   Tainted: G            E      (4.17.0-rc1-next-20180419-autotest)
    MSR:  800000010282b033 <SF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE,TM[E]>  CR: 44008828  XER: 20000000
    CFAR: c00000000036e408 SOFTE: 1
    GPR00: d00000000290325c c000000288d1ba60 d000000002917900 c000000289d75448
    GPR04: 0000000000000071 c0000000ff870000 0000000018040000 0000000000000001
    GPR08: 0000000000000000 c00000000156e838 0000000000000001 d00000000290c640
    GPR12: c00000000036ee20 c00000001ec4dc00 0000000000000000 0000000000000000
    GPR16: 0000000000000000 0000000000000000 00000100276901e0 0000000010020598
    GPR20: 0000000010020550 0000000010020538 0000000010020578 00000000100205b0
    GPR24: 0000000000000000 0000000000000000 0000000010020590 5deadbeef0000100
    GPR28: 5deadbeef0000200 d000000002910b00 0000000000000071 c0000002822f87d8
    NIP [d00000000290328c] ibmvfc_free_event_pool+0x12c/0x1f0 [ibmvfc]
    LR [d00000000290325c] ibmvfc_free_event_pool+0xfc/0x1f0 [ibmvfc]
    Call Trace:
    [c000000288d1ba60] [d00000000290325c] ibmvfc_free_event_pool+0xfc/0x1f0 [ibmvfc] (unreliable)
    [c000000288d1baf0] [d000000002909390] ibmvfc_abort_task_set+0x7b0/0x8b0 [ibmvfc]
    [c000000288d1bb70] [c0000000000d8c68] vio_bus_remove+0x68/0x100
    [c000000288d1bbb0] [c0000000007da7c4] device_release_driver_internal+0x1f4/0x2d0
    [c000000288d1bc00] [c0000000007da95c] driver_detach+0x7c/0x100
    [c000000288d1bc40] [c0000000007d8af4] bus_remove_driver+0x84/0x140
    [c000000288d1bcb0] [c0000000007db6ac] driver_unregister+0x4c/0xa0
    [c000000288d1bd20] [c0000000000d6e7c] vio_unregister_driver+0x2c/0x50
    [c000000288d1bd50] [d00000000290ba0c] cleanup_module+0x24/0x15e0 [ibmvfc]
    [c000000288d1bd70] [c0000000001dadb0] sys_delete_module+0x220/0x2d0
    [c000000288d1be30] [c00000000000b284] system_call+0x58/0x6c
    Instruction dump:
    e8410018 e87f0068 809f0078 e8bf0080 e8df0088 2fa30000 419e008c e9230200
    2fa90000 419e0080 894d098a 794a07e0 <0b0a0000> e9290008 2fa90000 419e0028
    
    This is tripped as a result of irqs being disabled during the call to
    dma_free_coherent() by ibmvfc_free_event_pool(). At this point in the code path
    we have quiesced the adapter and its overly paranoid anyways to be holding the
    host lock.
    
    Reported-by: Abdul Haleem <abdhalee@linux.vnet.ibm.com>
    Signed-off-by: Tyrel Datwyler <tyreld@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 657d28873deba9e1097d5ea9cbc4bcca992886b7
Author: Junxiao Bi <junxiao.bi@oracle.com>
Date:   Mon Jul 22 09:15:24 2019 -0700

    scsi: megaraid_sas: fix panic on loading firmware crashdump
    
    [ Upstream commit 3b5f307ef3cb5022bfe3c8ca5b8f2114d5bf6c29 ]
    
    While loading fw crashdump in function fw_crash_buffer_show(), left bytes
    in one dma chunk was not checked, if copying size over it, overflow access
    will cause kernel panic.
    
    Signed-off-by: Junxiao Bi <junxiao.bi@oracle.com>
    Acked-by: Sumit Saxena <sumit.saxena@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9aa429ae05fbf7f9fdf8416627010c5f2b056456
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Jul 22 16:51:50 2019 +0200

    ARM: davinci: fix sleep.S build error on ARMv4
    
    [ Upstream commit d64b212ea960db4276a1d8372bd98cb861dfcbb0 ]
    
    When building a multiplatform kernel that includes armv4 support,
    the default target CPU does not support the blx instruction,
    which leads to a build failure:
    
    arch/arm/mach-davinci/sleep.S: Assembler messages:
    arch/arm/mach-davinci/sleep.S:56: Error: selected processor does not support `blx ip' in ARM mode
    
    Add a .arch statement in the sources to make this file build.
    
    Link: https://lore.kernel.org/r/20190722145211.1154785-1-arnd@arndb.de
    Acked-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 012ecf252cc186707949cd512370ecbeabccfb44
Author: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
Date:   Mon Jul 22 17:25:48 2019 +0100

    ACPI/IORT: Fix off-by-one check in iort_dev_find_its_id()
    
    [ Upstream commit 5a46d3f71d5e5a9f82eabc682f996f1281705ac7 ]
    
    Static analysis identified that index comparison against ITS entries in
    iort_dev_find_its_id() is off by one.
    
    Update the comparison condition and clarify the resulting error
    message.
    
    Fixes: 4bf2efd26d76 ("ACPI: Add new IORT functions to support MSI domain handling")
    Link: https://lore.kernel.org/linux-arm-kernel/20190613065410.GB16334@mwanda/
    Reviewed-by: Hanjun Guo <guohanjun@huawei.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Hanjun Guo <guohanjun@huawei.com>
    Cc: Sudeep Holla <sudeep.holla@arm.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fe68d4d100b478012862058c14f62717a0f56d2
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Jul 22 14:26:34 2019 +0200

    drbd: dynamically allocate shash descriptor
    
    [ Upstream commit 77ce56e2bfaa64127ae5e23ef136c0168b818777 ]
    
    Building with clang and KASAN, we get a warning about an overly large
    stack frame on 32-bit architectures:
    
    drivers/block/drbd/drbd_receiver.c:921:31: error: stack frame size of 1280 bytes in function 'conn_connect'
          [-Werror,-Wframe-larger-than=]
    
    We already allocate other data dynamically in this function, so
    just do the same for the shash descriptor, which makes up most of
    this memory.
    
    Link: https://lore.kernel.org/lkml/20190617132440.2721536-1-arnd@arndb.de/
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Roland Kammerer <roland.kammerer@linbit.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79ba04ff40fd476f2d66eadb045a7c1f31d5d215
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Thu Jul 18 11:28:37 2019 -0300

    perf probe: Avoid calling freeing routine multiple times for same pointer
    
    [ Upstream commit d95daf5accf4a72005daa13fbb1d1bd8709f2861 ]
    
    When perf_add_probe_events() we call cleanup_perf_probe_events() for the
    pev pointer it receives, then, as part of handling this failure the main
    'perf probe' goes on and calls cleanup_params() and that will again call
    cleanup_perf_probe_events()for the same pointer, so just set nevents to
    zero when handling the failure of perf_add_probe_events() to avoid the
    double free.
    
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: https://lkml.kernel.org/n/tip-x8qgma4g813z96dvtw9w219q@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0040395471e606f209365ed642c9def0200de88c
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Mon Jul 15 16:04:26 2019 +0200

    perf tools: Fix proper buffer size for feature processing
    
    [ Upstream commit 79b2fe5e756163897175a8f57d66b26cd9befd59 ]
    
    After Song Liu's segfault fix for pipe mode, Arnaldo reported following
    error:
    
      # perf record -o - | perf script
      0x514 [0x1ac]: failed to process type: 80
    
    It's caused by wrong buffer size setup in feature processing, which
    makes cpu topology feature fail, because it's using buffer size to
    recognize its header version.
    
    Reported-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: David Carrillo-Cisneros <davidcc@google.com>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Song Liu <songliubraving@fb.com>
    Fixes: e9def1b2e74e ("perf tools: Add feature header record to pipe-mode")
    Link: http://lkml.kernel.org/r/20190715140426.32509-1-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd2dff49951fdba099c431efbc730bfb29ef9a74
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Mon Jul 22 10:24:36 2019 +0100

    ALSA: compress: Be more restrictive about when a drain is allowed
    
    [ Upstream commit 3b8179944cb0dd53e5223996966746cdc8a60657 ]
    
    Draining makes little sense in the situation of hardware overrun, as the
    hardware will have consumed all its available samples. Additionally,
    draining whilst the stream is paused would presumably get stuck as no
    data is being consumed on the DSP side.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Acked-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0741c777683c46884846861a8452ba966771129
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Mon Jul 22 10:24:35 2019 +0100

    ALSA: compress: Don't allow paritial drain operations on capture streams
    
    [ Upstream commit a70ab8a8645083f3700814e757f2940a88b7ef88 ]
    
    Partial drain and next track are intended for gapless playback and
    don't really have an obvious interpretation for a capture stream, so
    makes sense to not allow those operations on capture streams.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Acked-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 06b9a8bb1263af9312466efe6c3982fea86ee8eb
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Mon Jul 22 10:24:34 2019 +0100

    ALSA: compress: Prevent bypasses of set_params
    
    [ Upstream commit 26c3f1542f5064310ad26794c09321780d00c57d ]
    
    Currently, whilst in SNDRV_PCM_STATE_OPEN it is possible to call
    snd_compr_stop, snd_compr_drain and snd_compr_partial_drain, which
    allow a transition to SNDRV_PCM_STATE_SETUP. The stream should
    only be able to move to the setup state once it has received a
    SNDRV_COMPRESS_SET_PARAMS ioctl. Fix this issue by not allowing
    those ioctls whilst in the open state.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Acked-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc022b0fee190e223515ecf8b003f7b6833bc9f7
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Mon Jul 22 10:24:33 2019 +0100

    ALSA: compress: Fix regression on compressed capture streams
    
    [ Upstream commit 4475f8c4ab7b248991a60d9c02808dbb813d6be8 ]
    
    A previous fix to the stop handling on compressed capture streams causes
    some knock on issues. The previous fix updated snd_compr_drain_notify to
    set the state back to PREPARED for capture streams. This causes some
    issues however as the handling for snd_compr_poll differs between the
    two states and some user-space applications were relying on the poll
    failing after the stream had been stopped.
    
    To correct this regression whilst still fixing the original problem the
    patch was addressing, update the capture handling to skip the PREPARED
    state rather than skipping the SETUP state as it has done until now.
    
    Fixes: 4f2ab5e1d13d ("ALSA: compress: Fix stop handling on compressed capture streams")
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Acked-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2492c69dac8d9053ab1610e8865394e60f98ea65
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Thu Jul 11 18:17:36 2019 +0200

    s390/qdio: add sanity checks to the fast-requeue path
    
    [ Upstream commit a6ec414a4dd529eeac5c3ea51c661daba3397108 ]
    
    If the device driver were to send out a full queue's worth of SBALs,
    current code would end up discovering the last of those SBALs as PRIMED
    and erroneously skip the SIGA-w. This immediately stalls the queue.
    
    Add a check to not attempt fast-requeue in this case. While at it also
    make sure that the state of the previous SBAL was successfully extracted
    before inspecting it.
    
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Reviewed-by: Jens Remus <jremus@linux.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 857e8eb4460add15fc644bfce2eb8842382e98ca
Author: Wen Yang <wen.yang99@zte.com.cn>
Date:   Wed Jul 17 11:55:04 2019 +0800

    cpufreq/pasemi: fix use-after-free in pas_cpufreq_cpu_init()
    
    [ Upstream commit e0a12445d1cb186d875410d093a00d215bec6a89 ]
    
    The cpu variable is still being used in the of_get_property() call
    after the of_node_put() call, which may result in use-after-free.
    
    Fixes: a9acc26b75f6 ("cpufreq/pasemi: fix possible object reference leak")
    Signed-off-by: Wen Yang <wen.yang99@zte.com.cn>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eeb571f64304dda1147f7847b99ca08b0131651f
Author: Qian Cai <cai@lca.pw>
Date:   Mon Jul 22 15:14:46 2019 -0400

    drm: silence variable 'conn' set but not used
    
    [ Upstream commit bbb6fc43f131f77fcb7ae8081f6d7c51396a2120 ]
    
    The "struct drm_connector" iteration cursor from
    "for_each_new_connector_in_state" is never used in atomic_remove_fb()
    which generates a compilation warning,
    
    drivers/gpu/drm/drm_framebuffer.c: In function 'atomic_remove_fb':
    drivers/gpu/drm/drm_framebuffer.c:838:24: warning: variable 'conn' set
    but not used [-Wunused-but-set-variable]
    
    Silence it by marking "conn" __maybe_unused.
    
    Signed-off-by: Qian Cai <cai@lca.pw>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/1563822886-13570-1-git-send-email-cai@lca.pw
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec07fb3ec4485b72751bc97bf794fe98f2bd86e1
Author: Björn Gerhart <gerhart@posteo.de>
Date:   Mon Jul 15 18:33:55 2019 +0200

    hwmon: (nct6775) Fix register address and added missed tolerance for nct6106
    
    [ Upstream commit f3d43e2e45fd9d44ba52d20debd12cd4ee9c89bf ]
    
    Fixed address of third NCT6106_REG_WEIGHT_DUTY_STEP, and
    added missed NCT6106_REG_TOLERANCE_H.
    
    Fixes: 6c009501ff200 ("hwmon: (nct6775) Add support for NCT6102D/6106D")
    Signed-off-by: Bjoern Gerhart <gerhart@posteo.de>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f4355e4cc3c73c7438ef1ad6f9a73aaa2a2bf92
Author: Brian Norris <briannorris@chromium.org>
Date:   Wed Jul 17 18:57:12 2019 -0700

    mac80211: don't warn about CW params when not using them
    
    [ Upstream commit d2b3fe42bc629c2d4002f652b3abdfb2e72991c7 ]
    
    ieee80211_set_wmm_default() normally sets up the initial CW min/max for
    each queue, except that it skips doing this if the driver doesn't
    support ->conf_tx. We still end up calling drv_conf_tx() in some cases
    (e.g., ieee80211_reconfig()), which also still won't do anything
    useful...except it complains here about the invalid CW parameters.
    
    Let's just skip the WARN if we weren't going to do anything useful with
    the parameters.
    
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Link: https://lore.kernel.org/r/20190718015712.197499-1-briannorris@chromium.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3e7eb590697f877fe740568b019938f6a12b10d
Author: Thomas Tai <thomas.tai@oracle.com>
Date:   Thu Jul 18 18:37:34 2019 +0000

    iscsi_ibft: make ISCSI_IBFT dependson ACPI instead of ISCSI_IBFT_FIND
    
    [ Upstream commit 94bccc34071094c165c79b515d21b63c78f7e968 ]
    
    iscsi_ibft can use ACPI to find the iBFT entry during bootup,
    currently, ISCSI_IBFT depends on ISCSI_IBFT_FIND which is
    a X86 legacy way to find the iBFT by searching through the
    low memory. This patch changes the dependency so that other
    arch like ARM64 can use ISCSI_IBFT as long as the arch supports
    ACPI.
    
    ibft_init() needs to use the global variable ibft_addr declared
    in iscsi_ibft_find.c. A #ifndef CONFIG_ISCSI_IBFT_FIND is needed
    to declare the variable if CONFIG_ISCSI_IBFT_FIND is not selected.
    Moving ibft_addr into the iscsi_ibft.c does not work because if
    ISCSI_IBFT is selected as a module, the arch/x86/kernel/setup.c won't
    be able to find the variable at compile time.
    
    Signed-off-by: Thomas Tai <thomas.tai@oracle.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec03a559e69a9e9eb1468d8f4e3782eb5315ba02
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Sat Jul 13 08:50:24 2019 -0300

    scripts/sphinx-pre-install: fix script for RHEL/CentOS
    
    [ Upstream commit b308467c916aa7acc5069802ab76a9f657434701 ]
    
    There's a missing parenthesis at the script, with causes it to
    fail to detect non-Fedora releases (e. g. RHEL/CentOS).
    
    Tested with Centos 7.6.1810.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 628272f3f3f20b40e608e1e72739fae9efb62bc8
Author: Laura Garcia Liebana <nevola@gmail.com>
Date:   Mon Jul 15 13:23:37 2019 +0200

    netfilter: nft_hash: fix symhash with modulus one
    
    [ Upstream commit 28b1d6ef53e3303b90ca8924bb78f31fa527cafb ]
    
    The rule below doesn't work as the kernel raises -ERANGE.
    
    nft add rule netdev nftlb lb01 ip daddr set \
            symhash mod 1 map { 0 : 192.168.0.10 } fwd to "eth0"
    
    This patch allows to use the symhash modulus with one
    element, in the same way that the other types of hashes and
    algorithms that uses the modulus parameter.
    
    Signed-off-by: Laura Garcia Liebana <nevola@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4557544969d5686ed9e48527e6b4c16fef622e26
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Tue Jul 2 03:59:36 2019 +0000

    netfilter: Fix rpfilter dropping vrf packets by mistake
    
    [ Upstream commit b575b24b8eee37f10484e951b62ce2a31c579775 ]
    
    When firewalld is enabled with ipv4/ipv6 rpfilter, vrf
    ipv4/ipv6 packets will be dropped. Vrf device will pass
    through netfilter hook twice. One with enslaved device
    and another one with l3 master device. So in device may
    dismatch witch out device because out device is always
    enslaved device.So failed with the check of the rpfilter
    and drop the packets by mistake.
    
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d63147ee9c6a4a9872cfe17bd5b2faa06e9b6378
Author: Farhan Ali <alifm@linux.ibm.com>
Date:   Thu Jul 11 10:28:53 2019 -0400

    vfio-ccw: Set pa_nr to 0 if memory allocation fails for pa_iova_pfn
    
    [ Upstream commit c1ab69268d124ebdbb3864580808188ccd3ea355 ]
    
    So we don't call try to call vfio_unpin_pages() incorrectly.
    
    Fixes: 0a19e61e6d4c ("vfio: ccw: introduce channel program interfaces")
    Signed-off-by: Farhan Ali <alifm@linux.ibm.com>
    Reviewed-by: Eric Farman <farman@linux.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Message-Id: <33a89467ad6369196ae6edf820cbcb1e2d8d050c.1562854091.git.alifm@linux.ibm.com>
    Signed-off-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a2688446250ac6e8fc13b5a0cc585ee0984a0b7
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Jul 2 21:41:40 2019 +0200

    netfilter: nfnetlink: avoid deadlock due to synchronous request_module
    
    [ Upstream commit 1b0890cd60829bd51455dc5ad689ed58c4408227 ]
    
    Thomas and Juliana report a deadlock when running:
    
    (rmmod nf_conntrack_netlink/xfrm_user)
    
      conntrack -e NEW -E &
      modprobe -v xfrm_user
    
    They provided following analysis:
    
    conntrack -e NEW -E
        netlink_bind()
            netlink_lock_table() -> increases "nl_table_users"
                nfnetlink_bind()
                # does not unlock the table as it's locked by netlink_bind()
                    __request_module()
                        call_usermodehelper_exec()
    
    This triggers "modprobe nf_conntrack_netlink" from kernel, netlink_bind()
    won't return until modprobe process is done.
    
    "modprobe xfrm_user":
        xfrm_user_init()
            register_pernet_subsys()
                -> grab pernet_ops_rwsem
                    ..
                    netlink_table_grab()
                        calls schedule() as "nl_table_users" is non-zero
    
    so modprobe is blocked because netlink_bind() increased
    nl_table_users while also holding pernet_ops_rwsem.
    
    "modprobe nf_conntrack_netlink" runs and inits nf_conntrack_netlink:
        ctnetlink_init()
            register_pernet_subsys()
                -> blocks on "pernet_ops_rwsem" thanks to xfrm_user module
    
    both modprobe processes wait on one another -- neither can make
    progress.
    
    Switch netlink_bind() to "nowait" modprobe -- this releases the netlink
    table lock, which then allows both modprobe instances to complete.
    
    Reported-by: Thomas Jarosch <thomas.jarosch@intra2net.com>
    Reported-by: Juliana Rodrigueiro <juliana.rodrigueiro@intra2net.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27a4b8bbe931ef941705d34e3814b263be98b6e4
Author: Stephane Grosjean <s.grosjean@peak-system.com>
Date:   Fri Jul 5 15:32:16 2019 +0200

    can: peak_usb: fix potential double kfree_skb()
    
    commit fee6a8923ae0d318a7f7950c6c6c28a96cea099b upstream.
    
    When closing the CAN device while tx skbs are inflight, echo skb could
    be released twice. By calling close_candev() before unlinking all
    pending tx urbs, then the internal echo_skb[] array is fully and
    correctly cleared before the USB write callback and, therefore,
    can_get_echo_skb() are called, for each aborted URB.
    
    Fixes: bb4785551f64 ("can: usb: PEAK-System Technik USB adapters driver core")
    Signed-off-by: Stephane Grosjean <s.grosjean@peak-system.com>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 709982a1422ce8d70f2d1967490bbf8f58c6577e
Author: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
Date:   Wed Jun 26 16:08:48 2019 +0300

    can: rcar_canfd: fix possible IRQ storm on high load
    
    commit d4b890aec4bea7334ca2ca56fd3b12fb48a00cd1 upstream.
    
    We have observed rcar_canfd driver entering IRQ storm under high load,
    with following scenario:
    - rcar_canfd_global_interrupt() in entered due to Rx available,
    - napi_schedule_prep() is called, and sets NAPIF_STATE_SCHED in state
    - Rx fifo interrupts are masked,
    - rcar_canfd_global_interrupt() is entered again, this time due to
      error interrupt (e.g. due to overflow),
    - since scheduled napi poller has not yet executed, condition for calling
      napi_schedule_prep() from rcar_canfd_global_interrupt() remains true,
      thus napi_schedule_prep() gets called and sets NAPIF_STATE_MISSED flag
      in state,
    - later, napi poller function rcar_canfd_rx_poll() gets executed, and
      calls napi_complete_done(),
    - due to NAPIF_STATE_MISSED flag in state, this call does not clear
      NAPIF_STATE_SCHED flag from state,
    - on return from napi_complete_done(), rcar_canfd_rx_poll() unmasks Rx
      interrutps,
    - Rx interrupt happens, rcar_canfd_global_interrupt() gets called
      and calls napi_schedule_prep(),
    - since NAPIF_STATE_SCHED is set in state at this time, this call
      returns false,
    - due to that false return, rcar_canfd_global_interrupt() returns
      without masking Rx interrupt
    - and this results into IRQ storm: unmasked Rx interrupt happens again
      and again is misprocessed in the same way.
    
    This patch fixes that scenario by unmasking Rx interrupts only when
    napi_complete_done() returns true, which means it has cleared
    NAPIF_STATE_SCHED in state.
    
    Fixes: dd3bd23eb438 ("can: rcar_canfd: Add Renesas R-Car CAN FD driver")
    Signed-off-by: Nikita Yushchenko <nikita.yoush@cogentembedded.com>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0d684599b4f2525a6a7fe0cde8dff6800d16a22
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Mon Aug 5 12:15:28 2019 +0100

    usb: yurex: Fix use-after-free in yurex_delete
    
    commit fc05481b2fcabaaeccf63e32ac1baab54e5b6963 upstream.
    
    syzbot reported the following crash [0]:
    
    BUG: KASAN: use-after-free in usb_free_coherent+0x79/0x80
    drivers/usb/core/usb.c:928
    Read of size 8 at addr ffff8881b18599c8 by task syz-executor.4/16007
    
    CPU: 0 PID: 16007 Comm: syz-executor.4 Not tainted 5.3.0-rc2+ #23
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS
    Google 01/01/2011
    Call Trace:
      __dump_stack lib/dump_stack.c:77 [inline]
      dump_stack+0xca/0x13e lib/dump_stack.c:113
      print_address_description+0x6a/0x32c mm/kasan/report.c:351
      __kasan_report.cold+0x1a/0x33 mm/kasan/report.c:482
      kasan_report+0xe/0x12 mm/kasan/common.c:612
      usb_free_coherent+0x79/0x80 drivers/usb/core/usb.c:928
      yurex_delete+0x138/0x330 drivers/usb/misc/yurex.c:100
      kref_put include/linux/kref.h:65 [inline]
      yurex_release+0x66/0x90 drivers/usb/misc/yurex.c:392
      __fput+0x2d7/0x840 fs/file_table.c:280
      task_work_run+0x13f/0x1c0 kernel/task_work.c:113
      tracehook_notify_resume include/linux/tracehook.h:188 [inline]
      exit_to_usermode_loop+0x1d2/0x200 arch/x86/entry/common.c:163
      prepare_exit_to_usermode arch/x86/entry/common.c:194 [inline]
      syscall_return_slowpath arch/x86/entry/common.c:274 [inline]
      do_syscall_64+0x45f/0x580 arch/x86/entry/common.c:299
      entry_SYSCALL_64_after_hwframe+0x49/0xbe
    RIP: 0033:0x413511
    Code: 75 14 b8 03 00 00 00 0f 05 48 3d 01 f0 ff ff 0f 83 04 1b 00 00 c3 48
    83 ec 08 e8 0a fc ff ff 48 89 04 24 b8 03 00 00 00 0f 05 <48> 8b 3c 24 48
    89 c2 e8 53 fc ff ff 48 89 d0 48 83 c4 08 48 3d 01
    RSP: 002b:00007ffc424ea2e0 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
    RAX: 0000000000000000 RBX: 0000000000000007 RCX: 0000000000413511
    RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000006
    RBP: 0000000000000001 R08: 0000000029a2fc22 R09: 0000000029a2fc26
    R10: 00007ffc424ea3c0 R11: 0000000000000293 R12: 000000000075c9a0
    R13: 000000000075c9a0 R14: 0000000000761938 R15: ffffffffffffffff
    
    Allocated by task 2776:
      save_stack+0x1b/0x80 mm/kasan/common.c:69
      set_track mm/kasan/common.c:77 [inline]
      __kasan_kmalloc mm/kasan/common.c:487 [inline]
      __kasan_kmalloc.constprop.0+0xbf/0xd0 mm/kasan/common.c:460
      kmalloc include/linux/slab.h:552 [inline]
      kzalloc include/linux/slab.h:748 [inline]
      usb_alloc_dev+0x51/0xf95 drivers/usb/core/usb.c:583
      hub_port_connect drivers/usb/core/hub.c:5004 [inline]
      hub_port_connect_change drivers/usb/core/hub.c:5213 [inline]
      port_event drivers/usb/core/hub.c:5359 [inline]
      hub_event+0x15c0/0x3640 drivers/usb/core/hub.c:5441
      process_one_work+0x92b/0x1530 kernel/workqueue.c:2269
      worker_thread+0x96/0xe20 kernel/workqueue.c:2415
      kthread+0x318/0x420 kernel/kthread.c:255
      ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:352
    
    Freed by task 16007:
      save_stack+0x1b/0x80 mm/kasan/common.c:69
      set_track mm/kasan/common.c:77 [inline]
      __kasan_slab_free+0x130/0x180 mm/kasan/common.c:449
      slab_free_hook mm/slub.c:1423 [inline]
      slab_free_freelist_hook mm/slub.c:1470 [inline]
      slab_free mm/slub.c:3012 [inline]
      kfree+0xe4/0x2f0 mm/slub.c:3953
      device_release+0x71/0x200 drivers/base/core.c:1064
      kobject_cleanup lib/kobject.c:693 [inline]
      kobject_release lib/kobject.c:722 [inline]
      kref_put include/linux/kref.h:65 [inline]
      kobject_put+0x171/0x280 lib/kobject.c:739
      put_device+0x1b/0x30 drivers/base/core.c:2213
      usb_put_dev+0x1f/0x30 drivers/usb/core/usb.c:725
      yurex_delete+0x40/0x330 drivers/usb/misc/yurex.c:95
      kref_put include/linux/kref.h:65 [inline]
      yurex_release+0x66/0x90 drivers/usb/misc/yurex.c:392
      __fput+0x2d7/0x840 fs/file_table.c:280
      task_work_run+0x13f/0x1c0 kernel/task_work.c:113
      tracehook_notify_resume include/linux/tracehook.h:188 [inline]
      exit_to_usermode_loop+0x1d2/0x200 arch/x86/entry/common.c:163
      prepare_exit_to_usermode arch/x86/entry/common.c:194 [inline]
      syscall_return_slowpath arch/x86/entry/common.c:274 [inline]
      do_syscall_64+0x45f/0x580 arch/x86/entry/common.c:299
      entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    The buggy address belongs to the object at ffff8881b1859980
      which belongs to the cache kmalloc-2k of size 2048
    The buggy address is located 72 bytes inside of
      2048-byte region [ffff8881b1859980, ffff8881b185a180)
    The buggy address belongs to the page:
    page:ffffea0006c61600 refcount:1 mapcount:0 mapping:ffff8881da00c000
    index:0x0 compound_mapcount: 0
    flags: 0x200000000010200(slab|head)
    raw: 0200000000010200 0000000000000000 0000000100000001 ffff8881da00c000
    raw: 0000000000000000 00000000000f000f 00000001ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
      ffff8881b1859880: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
      ffff8881b1859900: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    > ffff8881b1859980: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                                   ^
      ffff8881b1859a00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
      ffff8881b1859a80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    ==================================================================
    
    A quick look at the yurex_delete() shows that we drop the reference
    to the usb_device before releasing any buffers associated with the
    device. Delay the reference drop until we have finished the cleanup.
    
    [0] https://lore.kernel.org/lkml/0000000000003f86d8058f0bd671@google.com/
    
    Fixes: 6bc235a2e24a5e ("USB: add driver for Meywa-Denki & Kayac YUREX")
    Cc: Jiri Kosina <jkosina@suse.cz>
    Cc: Tomoki Sekiyama <tomoki.sekiyama@gmail.com>
    Cc: Oliver Neukum <oneukum@suse.com>
    Cc: andreyknvl@google.com
    Cc: gregkh@linuxfoundation.org
    Cc: Alan Stern <stern@rowland.harvard.edu>
    Cc: syzkaller-bugs@googlegroups.com
    Cc: dtor@chromium.org
    Reported-by: syzbot+d1fedb1c1fdb07fca507@syzkaller.appspotmail.com
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190805111528.6758-1-suzuki.poulose@arm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1a8577803d793a2ec06192bc2bd92c343a0e756
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Fri Aug 2 17:33:35 2019 +0900

    usb: host: xhci-rcar: Fix timeout in xhci_suspend()
    
    commit 783bda5e41acc71f98336e1a402c180f9748e5dc upstream.
    
    When a USB device is connected to the host controller and
    the system enters suspend, the following error happens
    in xhci_suspend():
    
            xhci-hcd ee000000.usb: WARN: xHC CMD_RUN timeout
    
    Since the firmware/internal CPU control the USBSTS.STS_HALT
    and the process speed is down when the roothub port enters U3,
    long delay for the handshake of STS_HALT is neeed in xhci_suspend().
    So, this patch adds to set the XHCI_SLOW_SUSPEND.
    
    Fixes: 435cc1138ec9 ("usb: host: xhci-plat: set resume_quirk() for R-Car controllers")
    Cc: <stable@vger.kernel.org> # v4.12+
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/1564734815-17964-1-git-send-email-yoshihiro.shimoda.uh@renesas.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8cf01899362abff03b994ed9ad33d6a146a90fc
Author: Thomas Richter <tmricht@linux.ibm.com>
Date:   Wed Jul 24 14:27:02 2019 +0200

    perf record: Fix module size on s390
    
    commit 12a6d2940b5f02b4b9f71ce098e3bb02bc24a9ea upstream.
    
    On s390 the modules loaded in memory have the text segment located after
    the GOT and Relocation table. This can be seen with this output:
    
      [root@m35lp76 perf]# fgrep qeth /proc/modules
      qeth 151552 1 qeth_l2, Live 0x000003ff800b2000
      ...
      [root@m35lp76 perf]# cat /sys/module/qeth/sections/.text
      0x000003ff800b3990
      [root@m35lp76 perf]#
    
    There is an offset of 0x1990 bytes. The size of the qeth module is
    151552 bytes (0x25000 in hex).
    
    The location of the GOT/relocation table at the beginning of a module is
    unique to s390.
    
    commit 203d8a4aa6ed ("perf s390: Fix 'start' address of module's map")
    adjusts the start address of a module in the map structures, but does
    not adjust the size of the modules. This leads to overlapping of module
    maps as this example shows:
    
    [root@m35lp76 perf] # ./perf report -D
         0 0 0xfb0 [0xa0]: PERF_RECORD_MMAP -1/0: [0x3ff800b3990(0x25000)
              @ 0]:  x /lib/modules/.../qeth.ko.xz
         0 0 0x1050 [0xb0]: PERF_RECORD_MMAP -1/0: [0x3ff800d85a0(0x8000)
              @ 0]:  x /lib/modules/.../ip6_tables.ko.xz
    
    The module qeth.ko has an adjusted start address modified to b3990, but
    its size is unchanged and the module ends at 0x3ff800d8990.  This end
    address overlaps with the next modules start address of 0x3ff800d85a0.
    
    When the size of the leading GOT/Relocation table stored in the
    beginning of the text segment (0x1990 bytes) is subtracted from module
    qeth end address, there are no overlaps anymore:
    
       0x3ff800d8990 - 0x1990 = 0x0x3ff800d7000
    
    which is the same as
    
       0x3ff800b2000 + 0x25000 = 0x0x3ff800d7000.
    
    To fix this issue, also adjust the modules size in function
    arch__fix_module_text_start(). Add another function parameter named size
    and reduce the size of the module when the text segment start address is
    changed.
    
    Output after:
         0 0 0xfb0 [0xa0]: PERF_RECORD_MMAP -1/0: [0x3ff800b3990(0x23670)
              @ 0]:  x /lib/modules/.../qeth.ko.xz
         0 0 0x1050 [0xb0]: PERF_RECORD_MMAP -1/0: [0x3ff800d85a0(0x7a60)
              @ 0]:  x /lib/modules/.../ip6_tables.ko.xz
    
    Reported-by: Stefan Liebler <stli@linux.ibm.com>
    Signed-off-by: Thomas Richter <tmricht@linux.ibm.com>
    Acked-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Hendrik Brueckner <brueckner@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: stable@vger.kernel.org
    Fixes: 203d8a4aa6ed ("perf s390: Fix 'start' address of module's map")
    Link: http://lkml.kernel.org/r/20190724122703.3996-1-tmricht@linux.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f3af12307be5fb1b8f0d9e936bb72e9d0f1a875
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Thu Aug 8 09:48:23 2019 +0300

    perf db-export: Fix thread__exec_comm()
    
    commit 3de7ae0b2a1d86dbb23d0cb135150534fdb2e836 upstream.
    
    Threads synthesized from /proc have comms with a start time of zero, and
    not marked as "exec". Currently, there can be 2 such comms. The first is
    created by processing a synthesized fork event and is set to the
    parent's comm string, and the second by processing a synthesized comm
    event set to the thread's current comm string.
    
    In the absence of an "exec" comm, thread__exec_comm() picks the last
    (oldest) comm, which, in the case above, is the parent's comm string.
    For a main thread, that is very probably wrong. Use the second-to-last
    in that case.
    
    This affects only db-export because it is the only user of
    thread__exec_comm().
    
    Example:
    
      $ sudo perf record -a -o pt-a-sleep-1 -e intel_pt//u -- sleep 1
      $ sudo chown ahunter pt-a-sleep-1
    
    Before:
    
      $ perf script -i pt-a-sleep-1 --itrace=bep -s tools/perf/scripts/python/export-to-sqlite.py pt-a-sleep-1.db branches calls
      $ sqlite3 -header -column pt-a-sleep-1.db 'select * from comm_threads_view'
      comm_id     command     thread_id   pid         tid
      ----------  ----------  ----------  ----------  ----------
      1           swapper     1           0           0
      2           rcu_sched   2           10          10
      3           kthreadd    3           78          78
      5           sudo        4           15180       15180
      5           sudo        5           15180       15182
      7           kworker/4:  6           10335       10335
      8           kthreadd    7           55          55
      10          systemd     8           865         865
      10          systemd     9           865         875
      13          perf        10          15181       15181
      15          sleep       10          15181       15181
      16          kworker/3:  11          14179       14179
      17          kthreadd    12          29376       29376
      19          systemd     13          746         746
      21          systemd     14          401         401
      23          systemd     15          879         879
      23          systemd     16          879         945
      25          kthreadd    17          556         556
      27          kworker/u1  18          14136       14136
      28          kworker/u1  19          15021       15021
      29          kthreadd    20          509         509
      31          systemd     21          836         836
      31          systemd     22          836         967
      33          systemd     23          1148        1148
      33          systemd     24          1148        1163
      35          kworker/2:  25          17988       17988
      36          kworker/0:  26          13478       13478
    
    After:
    
      $ perf script -i pt-a-sleep-1 --itrace=bep -s tools/perf/scripts/python/export-to-sqlite.py pt-a-sleep-1b.db branches calls
      $ sqlite3 -header -column pt-a-sleep-1b.db 'select * from comm_threads_view'
      comm_id     command     thread_id   pid         tid
      ----------  ----------  ----------  ----------  ----------
      1           swapper     1           0           0
      2           rcu_sched   2           10          10
      3           kswapd0     3           78          78
      4           perf        4           15180       15180
      4           perf        5           15180       15182
      6           kworker/4:  6           10335       10335
      7           kcompactd0  7           55          55
      8           accounts-d  8           865         865
      8           accounts-d  9           865         875
      10          perf        10          15181       15181
      12          sleep       10          15181       15181
      13          kworker/3:  11          14179       14179
      14          kworker/1:  12          29376       29376
      15          haveged     13          746         746
      16          systemd-jo  14          401         401
      17          NetworkMan  15          879         879
      17          NetworkMan  16          879         945
      19          irq/131-iw  17          556         556
      20          kworker/u1  18          14136       14136
      21          kworker/u1  19          15021       15021
      22          kworker/u1  20          509         509
      23          thermald    21          836         836
      23          thermald    22          836         967
      25          unity-sett  23          1148        1148
      25          unity-sett  24          1148        1163
      27          kworker/2:  25          17988       17988
      28          kworker/0:  26          13478       13478
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: stable@vger.kernel.org
    Fixes: 65de51f93ebf ("perf tools: Identify which comms are from exec")
    Link: http://lkml.kernel.org/r/20190808064823.14846-1-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f273a4921196e4078870214b03d780373a7bed48
Author: Thomas Richter <tmricht@linux.ibm.com>
Date:   Wed Jul 24 14:27:03 2019 +0200

    perf annotate: Fix s390 gap between kernel end and module start
    
    commit b9c0a64901d5bdec6eafd38d1dc8fa0e2974fccb upstream.
    
    During execution of command 'perf top' the error message:
    
       Not enough memory for annotating '__irf_end' symbol!)
    
    is emitted from this call sequence:
      __cmd_top
        perf_top__mmap_read
          perf_top__mmap_read_idx
            perf_event__process_sample
              hist_entry_iter__add
                hist_iter__top_callback
                  perf_top__record_precise_ip
                    hist_entry__inc_addr_samples
                      symbol__inc_addr_samples
                        symbol__get_annotation
                          symbol__alloc_hist
    
    In this function the size of symbol __irf_end is calculated. The size of
    a symbol is the difference between its start and end address.
    
    When the symbol was read the first time, its start and end was set to:
    
       symbol__new: __irf_end 0xe954d0-0xe954d0
    
    which is correct and maps with /proc/kallsyms:
    
       root@s8360046:~/linux-4.15.0/tools/perf# fgrep _irf_end /proc/kallsyms
       0000000000e954d0 t __irf_end
       root@s8360046:~/linux-4.15.0/tools/perf#
    
    In function symbol__alloc_hist() the end of symbol __irf_end is
    
      symbol__alloc_hist sym:__irf_end start:0xe954d0 end:0x3ff80045a8
    
    which is identical with the first module entry in /proc/kallsyms
    
    This results in a symbol size of __irf_req for histogram analyses of
    70334140059072 bytes and a malloc() for this requested size fails.
    
    The root cause of this is function
      __dso__load_kallsyms()
      +-> symbols__fixup_end()
    
    Function symbols__fixup_end() enlarges the last symbol in the kallsyms
    map:
    
       # fgrep __irf_end /proc/kallsyms
       0000000000e954d0 t __irf_end
       #
    
    to the start address of the first module:
       # cat /proc/kallsyms | sort  | egrep ' [tT] '
       ....
       0000000000e952d0 T __security_initcall_end
       0000000000e954d0 T __initramfs_size
       0000000000e954d0 t __irf_end
       000003ff800045a8 T fc_get_event_number       [scsi_transport_fc]
       000003ff800045d0 t store_fc_vport_disable    [scsi_transport_fc]
       000003ff800046a8 T scsi_is_fc_rport  [scsi_transport_fc]
       000003ff800046d0 t fc_target_setup   [scsi_transport_fc]
    
    On s390 the kernel is located around memory address 0x200, 0x10000 or
    0x100000, depending on linux version. Modules however start some- where
    around 0x3ff xxxx xxxx.
    
    This is different than x86 and produces a large gap for which histogram
    allocation fails.
    
    Fix this by detecting the kernel's last symbol and do no adjustment for
    it. Introduce a weak function and handle s390 specifics.
    
    Reported-by: Klaus Theurich <klaus.theurich@de.ibm.com>
    Signed-off-by: Thomas Richter <tmricht@linux.ibm.com>
    Acked-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Hendrik Brueckner <brueckner@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20190724122703.3996-2-tmricht@linux.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0436bfe8e7be8e3afce501a2a5fc6aa425de65d
Author: Joerg Roedel <jroedel@suse.de>
Date:   Fri Jul 19 20:46:52 2019 +0200

    mm/vmalloc: Sync unmappings in __purge_vmap_area_lazy()
    
    commit 3f8fd02b1bf1d7ba964485a56f2f4b53ae88c167 upstream.
    
    On x86-32 with PTI enabled, parts of the kernel page-tables are not shared
    between processes. This can cause mappings in the vmalloc/ioremap area to
    persist in some page-tables after the region is unmapped and released.
    
    When the region is re-used the processes with the old mappings do not fault
    in the new mappings but still access the old ones.
    
    This causes undefined behavior, in reality often data corruption, kernel
    oopses and panics and even spontaneous reboots.
    
    Fix this problem by activly syncing unmaps in the vmalloc/ioremap area to
    all page-tables in the system before the regions can be re-used.
    
    References: https://bugzilla.suse.com/show_bug.cgi?id=1118689
    Fixes: 5d72b4fba40ef ('x86, mm: support huge I/O mapping capability I/F')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Dave Hansen <dave.hansen@linux.intel.com>
    Link: https://lkml.kernel.org/r/20190719184652.11391-4-joro@8bytes.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efa1f5680bf033f8bf5b05f965ef3d185a6c38d3
Author: Joerg Roedel <jroedel@suse.de>
Date:   Fri Jul 19 20:46:51 2019 +0200

    x86/mm: Sync also unmappings in vmalloc_sync_all()
    
    commit 8e998fc24de47c55b47a887f6c95ab91acd4a720 upstream.
    
    With huge-page ioremap areas the unmappings also need to be synced between
    all page-tables. Otherwise it can cause data corruption when a region is
    unmapped and later re-used.
    
    Make the vmalloc_sync_one() function ready to sync unmappings and make sure
    vmalloc_sync_all() iterates over all page-tables even when an unmapped PMD
    is found.
    
    Fixes: 5d72b4fba40ef ('x86, mm: support huge I/O mapping capability I/F')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Dave Hansen <dave.hansen@linux.intel.com>
    Link: https://lkml.kernel.org/r/20190719184652.11391-3-joro@8bytes.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e2e08356e15269b3bdc2a7155aa98a81d5dd23d
Author: Joerg Roedel <jroedel@suse.de>
Date:   Fri Jul 19 20:46:50 2019 +0200

    x86/mm: Check for pfn instead of page in vmalloc_sync_one()
    
    commit 51b75b5b563a2637f9d8dc5bd02a31b2ff9e5ea0 upstream.
    
    Do not require a struct page for the mapped memory location because it
    might not exist. This can happen when an ioremapped region is mapped with
    2MB pages.
    
    Fixes: 5d72b4fba40ef ('x86, mm: support huge I/O mapping capability I/F')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Dave Hansen <dave.hansen@linux.intel.com>
    Link: https://lkml.kernel.org/r/20190719184652.11391-2-joro@8bytes.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e99e7745d03fc50ba7c5b7c91c17294fee2d5991
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Tue Aug 13 12:53:17 2019 +0100

    tcp: Clear sk_send_head after purging the write queue
    
    Denis Andzakovic discovered a potential use-after-free in older kernel
    versions, using syzkaller.  tcp_write_queue_purge() frees all skbs in
    the TCP write queue and can leave sk->sk_send_head pointing to freed
    memory.  tcp_disconnect() clears that pointer after calling
    tcp_write_queue_purge(), but tcp_connect() does not.  It is
    (surprisingly) possible to add to the write queue between
    disconnection and reconnection, so this needs to be done in both
    places.
    
    This bug was introduced by backports of commit 7f582b248d0a ("tcp:
    purge write queue in tcp_connect_init()") and does not exist upstream
    because of earlier changes in commit 75c119afe14f ("tcp: implement
    rb-tree based retransmit queue").  The latter is a major change that's
    not suitable for stable.
    
    Reported-by: Denis Andzakovic <denis.andzakovic@pulsesecurity.co.nz>
    Bisected-by: Salvatore Bonaccorso <carnil@debian.org>
    Fixes: 7f582b248d0a ("tcp: purge write queue in tcp_connect_init()")
    Cc: <stable@vger.kernel.org> # before 4.15
    Cc: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd31e7c5d5c4b6dae2ee3628129077fab5d39834
Author: Gary R Hook <gary.hook@amd.com>
Date:   Tue Jul 30 16:05:24 2019 +0000

    crypto: ccp - Add support for valid authsize values less than 16
    
    commit 9f00baf74e4b6f79a3a3dfab44fb7bb2e797b551 upstream.
    
    AES GCM encryption allows for authsize values of 4, 8, and 12-16 bytes.
    Validate the requested authsize, and retain it to save in the request
    context.
    
    Fixes: 36cf515b9bbe2 ("crypto: ccp - Enable support for AES GCM on v5 CCPs")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Gary R Hook <gary.hook@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e95468f2333d4b7d85a8ed63fe1f7c90b2fdbea6
Author: Gary R Hook <gary.hook@amd.com>
Date:   Wed Mar 7 11:31:14 2018 -0600

    crypto: ccp - Validate buffer lengths for copy operations
    
    commit b698a9f4c5c52317db486b069190c7e3d2b97e7e upstream.
    
    The CCP driver copies data between scatter/gather lists and DMA buffers.
    The length of the requested copy operation must be checked against
    the available destination buffer length.
    
    Reported-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Signed-off-by: Gary R Hook <gary.hook@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0b0d5b03902fb2fc77dbd01d8f2ed5e4d00fe60
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Wed May 15 11:24:41 2019 -0700

    lkdtm: support llvm-objcopy
    
    commit e9e08a07385e08f1a7f85c5d1e345c21c9564963 upstream.
    
    With CONFIG_LKDTM=y and make OBJCOPY=llvm-objcopy, llvm-objcopy errors:
    llvm-objcopy: error: --set-section-flags=.text conflicts with
    --rename-section=.text=.rodata
    
    Rather than support setting flags then renaming sections vs renaming
    then setting flags, it's simpler to just change both at the same time
    via --rename-section. Adding the load flag is required for GNU objcopy
    to mark .rodata Type as PROGBITS after the rename.
    
    This can be verified with:
    $ readelf -S drivers/misc/lkdtm/rodata_objcopy.o
    ...
    Section Headers:
      [Nr] Name              Type             Address           Offset
           Size              EntSize          Flags  Link  Info  Align
    ...
      [ 1] .rodata           PROGBITS         0000000000000000  00000040
           0000000000000004  0000000000000000   A       0     0     4
    ...
    
    Which shows that .text is now renamed .rodata, the alloc flag A is set,
    the type is PROGBITS, and the section is not flagged as writeable W.
    
    Cc: stable@vger.kernel.org
    Link: https://sourceware.org/bugzilla/show_bug.cgi?id=24554
    Link: https://github.com/ClangBuiltLinux/linux/issues/448
    Reported-by: Nathan Chancellor <natechancellor@gmail.com>
    Suggested-by: Alan Modra <amodra@gmail.com>
    Suggested-by: Jordan Rupprect <rupprecht@google.com>
    Suggested-by: Kees Cook <keescook@chromium.org>
    Acked-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    commit e9e08a07385e08f1a7f85c5d1e345c21c9564963 upstream.
    
    With CONFIG_LKDTM=y and make OBJCOPY=llvm-objcopy, llvm-objcopy errors:
    llvm-objcopy: error: --set-section-flags=.text conflicts with
    --rename-section=.text=.rodata
    
    Rather than support setting flags then renaming sections vs renaming
    then setting flags, it's simpler to just change both at the same time
    via --rename-section. Adding the load flag is required for GNU objcopy
    to mark .rodata Type as PROGBITS after the rename.
    
    This can be verified with:
    $ readelf -S drivers/misc/lkdtm/rodata_objcopy.o
    ...
    Section Headers:
      [Nr] Name              Type             Address           Offset
           Size              EntSize          Flags  Link  Info  Align
    ...
      [ 1] .rodata           PROGBITS         0000000000000000  00000040
           0000000000000004  0000000000000000   A       0     0     4
    ...
    
    Which shows that .text is now renamed .rodata, the alloc flag A is set,
    the type is PROGBITS, and the section is not flagged as writeable W.
    
    Cc: stable@vger.kernel.org
    Link: https://sourceware.org/bugzilla/show_bug.cgi?id=24554
    Link: https://github.com/ClangBuiltLinux/linux/issues/448
    Reported-by: Nathan Chancellor <natechancellor@gmail.com>
    Suggested-by: Alan Modra <amodra@gmail.com>
    Suggested-by: Jordan Rupprect <rupprecht@google.com>
    Suggested-by: Kees Cook <keescook@chromium.org>
    Acked-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd692412199fde75bdb3e5db530dcfb7e9cfb168
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Jul 12 11:37:17 2019 -0700

    Input: synaptics - enable RMI mode for HP Spectre X360
    
    commit 25f8c834e2a6871920cc1ca113f02fb301d007c3 upstream.
    
    The 2016 kabylake HP Spectre X360 (model number 13-w013dx) works much better
    with psmouse.synaptics_intertouch=1 kernel parameter, so let's enable RMI4
    mode automatically.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=204115
    Reported-by: Nate Graham <pointedstick@zoho.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22cd7b0a5444bec5316ec209e2099230166834b2
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Aug 8 11:17:01 2019 -0400

    loop: set PF_MEMALLOC_NOIO for the worker thread
    
    commit d0a255e795ab976481565f6ac178314b34fbf891 upstream.
    
    A deadlock with this stacktrace was observed.
    
    The loop thread does a GFP_KERNEL allocation, it calls into dm-bufio
    shrinker and the shrinker depends on I/O completion in the dm-bufio
    subsystem.
    
    In order to fix the deadlock (and other similar ones), we set the flag
    PF_MEMALLOC_NOIO at loop thread entry.
    
    PID: 474    TASK: ffff8813e11f4600  CPU: 10  COMMAND: "kswapd0"
       #0 [ffff8813dedfb938] __schedule at ffffffff8173f405
       #1 [ffff8813dedfb990] schedule at ffffffff8173fa27
       #2 [ffff8813dedfb9b0] schedule_timeout at ffffffff81742fec
       #3 [ffff8813dedfba60] io_schedule_timeout at ffffffff8173f186
       #4 [ffff8813dedfbaa0] bit_wait_io at ffffffff8174034f
       #5 [ffff8813dedfbac0] __wait_on_bit at ffffffff8173fec8
       #6 [ffff8813dedfbb10] out_of_line_wait_on_bit at ffffffff8173ff81
       #7 [ffff8813dedfbb90] __make_buffer_clean at ffffffffa038736f [dm_bufio]
       #8 [ffff8813dedfbbb0] __try_evict_buffer at ffffffffa0387bb8 [dm_bufio]
       #9 [ffff8813dedfbbd0] dm_bufio_shrink_scan at ffffffffa0387cc3 [dm_bufio]
      #10 [ffff8813dedfbc40] shrink_slab at ffffffff811a87ce
      #11 [ffff8813dedfbd30] shrink_zone at ffffffff811ad778
      #12 [ffff8813dedfbdc0] kswapd at ffffffff811ae92f
      #13 [ffff8813dedfbec0] kthread at ffffffff810a8428
      #14 [ffff8813dedfbf50] ret_from_fork at ffffffff81745242
    
      PID: 14127  TASK: ffff881455749c00  CPU: 11  COMMAND: "loop1"
       #0 [ffff88272f5af228] __schedule at ffffffff8173f405
       #1 [ffff88272f5af280] schedule at ffffffff8173fa27
       #2 [ffff88272f5af2a0] schedule_preempt_disabled at ffffffff8173fd5e
       #3 [ffff88272f5af2b0] __mutex_lock_slowpath at ffffffff81741fb5
       #4 [ffff88272f5af330] mutex_lock at ffffffff81742133
       #5 [ffff88272f5af350] dm_bufio_shrink_count at ffffffffa03865f9 [dm_bufio]
       #6 [ffff88272f5af380] shrink_slab at ffffffff811a86bd
       #7 [ffff88272f5af470] shrink_zone at ffffffff811ad778
       #8 [ffff88272f5af500] do_try_to_free_pages at ffffffff811adb34
       #9 [ffff88272f5af590] try_to_free_pages at ffffffff811adef8
      #10 [ffff88272f5af610] __alloc_pages_nodemask at ffffffff811a09c3
      #11 [ffff88272f5af710] alloc_pages_current at ffffffff811e8b71
      #12 [ffff88272f5af760] new_slab at ffffffff811f4523
      #13 [ffff88272f5af7b0] __slab_alloc at ffffffff8173a1b5
      #14 [ffff88272f5af880] kmem_cache_alloc at ffffffff811f484b
      #15 [ffff88272f5af8d0] do_blockdev_direct_IO at ffffffff812535b3
      #16 [ffff88272f5afb00] __blockdev_direct_IO at ffffffff81255dc3
      #17 [ffff88272f5afb30] xfs_vm_direct_IO at ffffffffa01fe3fc [xfs]
      #18 [ffff88272f5afb90] generic_file_read_iter at ffffffff81198994
      #19 [ffff88272f5afc50] __dta_xfs_file_read_iter_2398 at ffffffffa020c970 [xfs]
      #20 [ffff88272f5afcc0] lo_rw_aio at ffffffffa0377042 [loop]
      #21 [ffff88272f5afd70] loop_queue_work at ffffffffa0377c3b [loop]
      #22 [ffff88272f5afe60] kthread_worker_fn at ffffffff810a8a0c
      #23 [ffff88272f5afec0] kthread at ffffffff810a8428
      #24 [ffff88272f5aff50] ret_from_fork at ffffffff81745242
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8fa223c6721a49197a536f93f403bb69227d26d
Author: Kevin Hao <haokexin@gmail.com>
Date:   Fri Jul 26 10:30:49 2019 +0800

    mmc: cavium: Add the missing dma unmap when the dma has finished.
    
    commit b803974a86039913d5280add083d730b2b9ed8ec upstream.
    
    This fixes the below calltrace when the CONFIG_DMA_API_DEBUG is enabled.
      DMA-API: thunderx_mmc 0000:01:01.4: cpu touching an active dma mapped cacheline [cln=0x000000002fdf9800]
      WARNING: CPU: 21 PID: 1 at kernel/dma/debug.c:596 debug_dma_assert_idle+0x1f8/0x270
      Modules linked in:
      CPU: 21 PID: 1 Comm: init Not tainted 5.3.0-rc1-next-20190725-yocto-standard+ #64
      Hardware name: Marvell OcteonTX CN96XX board (DT)
      pstate: 80400009 (Nzcv daif +PAN -UAO)
      pc : debug_dma_assert_idle+0x1f8/0x270
      lr : debug_dma_assert_idle+0x1f8/0x270
      sp : ffff0000113cfc10
      x29: ffff0000113cfc10 x28: 0000ffff8c880000
      x27: ffff800bc72a0000 x26: ffff000010ff8000
      x25: ffff000010ff8940 x24: ffff000010ff8968
      x23: 0000000000000000 x22: ffff000010e83700
      x21: ffff000010ea2000 x20: ffff000010e835c8
      x19: ffff800bc2c73300 x18: ffffffffffffffff
      x17: 0000000000000000 x16: 0000000000000000
      x15: ffff000010e835c8 x14: 6d20616d64206576
      x13: 69746361206e6120 x12: 676e696863756f74
      x11: 20757063203a342e x10: 31303a31303a3030
      x9 : 303020636d6d5f78 x8 : 3230303030303030
      x7 : 00000000000002fd x6 : ffff000010fd57d0
      x5 : 0000000000000000 x4 : ffff0000106c5210
      x3 : 00000000ffffffff x2 : 0000800bee9c0000
      x1 : 57d5843f4aa62800 x0 : 0000000000000000
      Call trace:
       debug_dma_assert_idle+0x1f8/0x270
       wp_page_copy+0xb0/0x688
       do_wp_page+0xa8/0x5b8
       __handle_mm_fault+0x600/0xd00
       handle_mm_fault+0x118/0x1e8
       do_page_fault+0x200/0x500
       do_mem_abort+0x50/0xb0
       el0_da+0x20/0x24
      ---[ end trace a005534bd23e109f ]---
      DMA-API: Mapped at:
       debug_dma_map_sg+0x94/0x350
       cvm_mmc_request+0x3c4/0x988
       __mmc_start_request+0x9c/0x1f8
       mmc_start_request+0x7c/0xb0
       mmc_blk_mq_issue_rq+0x5c4/0x7b8
    
    Signed-off-by: Kevin Hao <haokexin@gmail.com>
    Fixes: ba3869ff32e4 ("mmc: cavium: Add core MMC driver for Cavium SOCs")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03354840b2c19f5ed204c8ee014db8a2b2d8daee
Author: Kevin Hao <haokexin@gmail.com>
Date:   Fri Jul 26 10:30:48 2019 +0800

    mmc: cavium: Set the correct dma max segment size for mmc_host
    
    commit fa25eba6993b3750f417baabba169afaba076178 upstream.
    
    We have set the mmc_host.max_seg_size to 8M, but the dma max segment
    size of PCI device is set to 64K by default in function pci_device_add().
    The mmc_host.max_seg_size is used to set the max segment size of
    the blk queue. Then this mismatch will trigger a calltrace like below
    when a bigger than 64K segment request arrives at mmc dev. So we should
    consider the limitation of the cvm_mmc_host when setting the
    mmc_host.max_seg_size.
      DMA-API: thunderx_mmc 0000:01:01.4: mapping sg segment longer than device claims to support [len=131072] [max=65536]
      WARNING: CPU: 6 PID: 238 at kernel/dma/debug.c:1221 debug_dma_map_sg+0x2b8/0x350
      Modules linked in:
      CPU: 6 PID: 238 Comm: kworker/6:1H Not tainted 5.3.0-rc1-next-20190724-yocto-standard+ #62
      Hardware name: Marvell OcteonTX CN96XX board (DT)
      Workqueue: kblockd blk_mq_run_work_fn
      pstate: 80c00009 (Nzcv daif +PAN +UAO)
      pc : debug_dma_map_sg+0x2b8/0x350
      lr : debug_dma_map_sg+0x2b8/0x350
      sp : ffff00001770f9e0
      x29: ffff00001770f9e0 x28: ffffffff00000000
      x27: 00000000ffffffff x26: ffff800bc2c73180
      x25: ffff000010e83700 x24: 0000000000000002
      x23: 0000000000000001 x22: 0000000000000001
      x21: 0000000000000000 x20: ffff800bc48ba0b0
      x19: ffff800bc97e8c00 x18: ffffffffffffffff
      x17: 0000000000000000 x16: 0000000000000000
      x15: ffff000010e835c8 x14: 6874207265676e6f
      x13: 6c20746e656d6765 x12: 7320677320676e69
      x11: 7070616d203a342e x10: 31303a31303a3030
      x9 : 303020636d6d5f78 x8 : 35363d78616d5b20
      x7 : 00000000000002fd x6 : ffff000010fd57dc
      x5 : 0000000000000000 x4 : ffff0000106c61f0
      x3 : 00000000ffffffff x2 : 0000800bee060000
      x1 : 7010678df3041a00 x0 : 0000000000000000
      Call trace:
       debug_dma_map_sg+0x2b8/0x350
       cvm_mmc_request+0x3c4/0x988
       __mmc_start_request+0x9c/0x1f8
       mmc_start_request+0x7c/0xb0
       mmc_blk_mq_issue_rq+0x5c4/0x7b8
       mmc_mq_queue_rq+0x11c/0x278
       blk_mq_dispatch_rq_list+0xb0/0x568
       blk_mq_do_dispatch_sched+0x6c/0x108
       blk_mq_sched_dispatch_requests+0x110/0x1b8
       __blk_mq_run_hw_queue+0xb0/0x118
       blk_mq_run_work_fn+0x28/0x38
       process_one_work+0x210/0x490
       worker_thread+0x48/0x458
       kthread+0x130/0x138
       ret_from_fork+0x10/0x1c
    
    Signed-off-by: Kevin Hao <haokexin@gmail.com>
    Fixes: ba3869ff32e4 ("mmc: cavium: Add core MMC driver for Cavium SOCs")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6520011297bdc0e58ec8fb0f24cb5c1c26a190bb
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Thu Aug 8 00:15:21 2019 -0500

    sound: fix a memory leak bug
    
    commit c7cd7c748a3250ca33509f9235efab9c803aca09 upstream.
    
    In sound_insert_unit(), the controlling structure 's' is allocated through
    kmalloc(). Then it is added to the sound driver list by invoking
    __sound_insert_unit(). Later on, if __register_chrdev() fails, 's' is
    removed from the list through __sound_remove_unit(). If 'index' is not less
    than 0, -EBUSY is returned to indicate the error. However, 's' is not
    deallocated on this execution path, leading to a memory leak bug.
    
    To fix the above issue, free 's' before -EBUSY is returned.
    
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5454dae67966de35763b45f08f4e2289e212c12
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Aug 8 11:27:28 2019 +0200

    usb: iowarrior: fix deadlock on disconnect
    
    commit c468a8aa790e0dfe0a7f8a39db282d39c2c00b46 upstream.
    
    We have to drop the mutex before we close() upon disconnect()
    as close() needs the lock. This is safe to do by dropping the
    mutex as intfdata is already set to NULL, so open() will fail.
    
    Fixes: 03f36e885fc26 ("USB: open disconnect race in iowarrior")
    Reported-by: syzbot+a64a382964bf6c71a9c0@syzkaller.appspotmail.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Link: https://lore.kernel.org/r/20190808092728.23417-1-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44db85e0a8e0c277921f7c4b7a4b6bfc757e8969
Author: Gavin Li <git@thegavinli.com>
Date:   Sun Aug 4 16:50:44 2019 -0700

    usb: usbfs: fix double-free of usb memory upon submiturb error
    
    commit c43f28dfdc4654e738aa6d3fd08a105b2bee758d upstream.
    
    Upon an error within proc_do_submiturb(), dec_usb_memory_use_count()
    gets called once by the error handling tail and again by free_async().
    Remove the first call.
    
    Signed-off-by: Gavin Li <git@thegavinli.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190804235044.22327-1-gavinli@thegavinli.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e88103ea43dbb43db5094fa0343d87380b91a204
Author: Gary R Hook <gary.hook@amd.com>
Date:   Tue Jul 30 16:05:26 2019 +0000

    crypto: ccp - Ignore tag length when decrypting GCM ciphertext
    
    commit e2664ecbb2f26225ac6646876f2899558ffb2604 upstream.
    
    AES GCM input buffers for decryption contain AAD+CTEXT+TAG. Only
    decrypt the ciphertext, and use the tag for comparison.
    
    Fixes: 36cf515b9bbe2 ("crypto: ccp - Enable support for AES GCM on v5 CCPs")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Gary R Hook <gary.hook@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45511e4d8940733d31be7a4b81963c629703d8dc
Author: Gary R Hook <gary.hook@amd.com>
Date:   Tue Jul 30 16:05:22 2019 +0000

    crypto: ccp - Fix oops by properly managing allocated structures
    
    commit 25e44338321af545ab34243a6081c3f0fc6107d0 upstream.
    
    A plaintext or ciphertext length of 0 is allowed in AES, in which case
    no encryption occurs. Ensure that we don't clean up data structures
    that were never allocated.
    
    Fixes: 36cf515b9bbe2 ("crypto: ccp - Enable support for AES GCM on v5 CCPs")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Gary R Hook <gary.hook@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9af22331765a05cf12d8a521641ca133111a68cc
Author: Joe Perches <joe@perches.com>
Date:   Tue Jul 9 22:04:17 2019 -0700

    iio: adc: max9611: Fix misuse of GENMASK macro
    
    commit ae8cc91a7d85e018c0c267f580820b2bb558cd48 upstream.
    
    Arguments are supposed to be ordered high then low.
    
    Signed-off-by: Joe Perches <joe@perches.com>
    Fixes: 69780a3bbc0b ("iio: adc: Add Maxim max9611 ADC driver")
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
