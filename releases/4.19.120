commit fdc072324f3c66190a20f57490b4842a391d8233
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat May 2 17:26:01 2020 +0200

    Linux 4.19.120

commit fa87bf609aa173b5dce91d23cd3dcebd9e846124
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Apr 27 10:26:22 2020 -0400

    propagate_one(): mnt_set_mountpoint() needs mount_lock
    
    commit b0d3869ce9eeacbb1bbd541909beeef4126426d5 upstream.
    
    ... to protect the modification of mp->m_count done by it.  Most of
    the places that modify that thing also have namespace_lock held,
    but not all of them can do so, so we really need mount_lock here.
    Kudos to Piotr Krysiuk <piotras@gmail.com>, who'd spotted a related
    bug in pivot_root(2) (fixed unnoticed in 5.3); search for other
    similar turds has caught out this one.
    
    Cc: stable@kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Piotr Krysiuk <piotras@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38faccf5f918330394a33ed8266f98b43525869b
Author: Ritesh Harjani <riteshh@linux.ibm.com>
Date:   Mon Mar 16 15:00:38 2020 +0530

    ext4: check for non-zero journal inum in ext4_calculate_overhead
    
    commit f1eec3b0d0a849996ebee733b053efa71803dad5 upstream.
    
    While calculating overhead for internal journal, also check
    that j_inum shouldn't be 0. Otherwise we get below error with
    xfstests generic/050 with external journal (XXX_LOGDEV config) enabled.
    
    It could be simply reproduced with loop device with an external journal
    and marking blockdev as RO before mounting.
    
    [ 3337.146838] EXT4-fs error (device pmem1p2): ext4_get_journal_inode:4634: comm mount: inode #0: comm mount: iget: illegal inode #
    ------------[ cut here ]------------
    generic_make_request: Trying to write to read-only block-device pmem1p2 (partno 2)
    WARNING: CPU: 107 PID: 115347 at block/blk-core.c:788 generic_make_request_checks+0x6b4/0x7d0
    CPU: 107 PID: 115347 Comm: mount Tainted: G             L   --------- -t - 4.18.0-167.el8.ppc64le #1
    NIP:  c0000000006f6d44 LR: c0000000006f6d40 CTR: 0000000030041dd4
    <...>
    NIP [c0000000006f6d44] generic_make_request_checks+0x6b4/0x7d0
    LR [c0000000006f6d40] generic_make_request_checks+0x6b0/0x7d0
    <...>
    Call Trace:
    generic_make_request_checks+0x6b0/0x7d0 (unreliable)
    generic_make_request+0x3c/0x420
    submit_bio+0xd8/0x200
    submit_bh_wbc+0x1e8/0x250
    __sync_dirty_buffer+0xd0/0x210
    ext4_commit_super+0x310/0x420 [ext4]
    __ext4_error+0xa4/0x1e0 [ext4]
    __ext4_iget+0x388/0xe10 [ext4]
    ext4_get_journal_inode+0x40/0x150 [ext4]
    ext4_calculate_overhead+0x5a8/0x610 [ext4]
    ext4_fill_super+0x3188/0x3260 [ext4]
    mount_bdev+0x778/0x8f0
    ext4_mount+0x28/0x50 [ext4]
    mount_fs+0x74/0x230
    vfs_kern_mount.part.6+0x6c/0x250
    do_mount+0x2fc/0x1280
    sys_mount+0x158/0x180
    system_call+0x5c/0x70
    EXT4-fs (pmem1p2): no journal found
    EXT4-fs (pmem1p2): can't get journal size
    EXT4-fs (pmem1p2): mounted filesystem without journal. Opts: dax,norecovery
    
    Fixes: 3c816ded78bb ("ext4: use journal inode to determine journal overhead")
    Reported-by: Harish Sriram <harish@linux.ibm.com>
    Signed-off-by: Ritesh Harjani <riteshh@linux.ibm.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20200316093038.25485-1-riteshh@linux.ibm.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64325c2855567e9324c3dff7bf343d7faa2f8e95
Author: Yuval Basson <ybason@marvell.com>
Date:   Sun Mar 29 20:32:49 2020 +0300

    qed: Fix use after free in qed_chain_free
    
    commit 8063f761cd7c17fc1d0018728936e0c33a25388a upstream.
    
    The qed_chain data structure was modified in
    commit 1a4a69751f4d ("qed: Chain support for external PBL") to support
    receiving an external pbl (due to iWARP FW requirements).
    The pages pointed to by the pbl are allocated in qed_chain_alloc
    and their virtual address are stored in an virtual addresses array to
    enable accessing and freeing the data. The physical addresses however
    weren't stored and were accessed directly from the external-pbl
    during free.
    
    Destroy-qp flow, leads to freeing the external pbl before the chain is
    freed, when the chain is freed it tries accessing the already freed
    external pbl, leading to a use-after-free. Therefore we need to store
    the physical addresses in additional to the virtual addresses in a
    new data structure.
    
    Fixes: 1a4a69751f4d ("qed: Chain support for external PBL")
    Signed-off-by: Michal Kalderon <mkalderon@marvell.com>
    Signed-off-by: Yuval Bason <ybason@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f670ee4406978e573a86d5c8d5c1827d0d3d5461
Author: Luke Nelson <lukenels@cs.washington.edu>
Date:   Wed Apr 22 10:36:30 2020 -0700

    bpf, x86_32: Fix clobbering of dst for BPF_JSET
    
    commit 50fe7ebb6475711c15b3397467e6424e20026d94 upstream.
    
    The current JIT clobbers the destination register for BPF_JSET BPF_X
    and BPF_K by using "and" and "or" instructions. This is fine when the
    destination register is a temporary loaded from a register stored on
    the stack but not otherwise.
    
    This patch fixes the problem (for both BPF_K and BPF_X) by always loading
    the destination register into temporaries since BPF_JSET should not
    modify the destination register.
    
    This bug may not be currently triggerable as BPF_REG_AX is the only
    register not stored on the stack and the verifier uses it in a limited
    way.
    
    Fixes: 03f5781be2c7b ("bpf, x86_32: add eBPF JIT compiler for ia32")
    Signed-off-by: Xi Wang <xi.wang@gmail.com>
    Signed-off-by: Luke Nelson <luke.r.nels@gmail.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Wang YanQing <udknight@gmail.com>
    Link: https://lore.kernel.org/bpf/20200422173630.8351-2-luke.r.nels@gmail.com
    Signed-off-by: Wang YanQing <udknight@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9184b35e27e6e844efb1bc5b2b1bb5068cc2fc7
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Fri Apr 17 11:28:53 2020 +0200

    hwmon: (jc42) Fix name to have no illegal characters
    
    [ Upstream commit c843b382e61b5f28a3d917712c69a344f632387c ]
    
    The jc42 driver passes I2C client's name as hwmon device name. In case
    of device tree probed devices this ends up being part of the compatible
    string, "jc-42.4-temp". This name contains hyphens and the hwmon core
    doesn't like this:
    
    jc42 2-0018: hwmon: 'jc-42.4-temp' is not a valid name attribute, please fix
    
    This changes the name to "jc42" which doesn't have any illegal
    characters.
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Link: https://lore.kernel.org/r/20200417092853.31206-1-s.hauer@pengutronix.de
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b022298cd012cd9b59057d6d5490e6468be70f0d
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Apr 13 23:33:05 2020 -0400

    ext4: convert BUG_ON's to WARN_ON's in mballoc.c
    
    [ Upstream commit 907ea529fc4c3296701d2bfc8b831dd2a8121a34 ]
    
    If the in-core buddy bitmap gets corrupted (or out of sync with the
    block bitmap), issue a WARN_ON and try to recover.  In most cases this
    involves skipping trying to allocate out of a particular block group.
    We can end up declaring the file system corrupted, which is fair,
    since the file system probably should be checked before we proceed any
    further.
    
    Link: https://lore.kernel.org/r/20200414035649.293164-1-tytso@mit.edu
    Google-Bug-Id: 34811296
    Google-Bug-Id: 34639169
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fffce4a4c4befb2a53fe9bbd5da9addd1efe41a8
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Apr 13 22:30:52 2020 -0400

    ext4: increase wait time needed before reuse of deleted inode numbers
    
    [ Upstream commit a17a9d935dc4a50acefaf319d58030f1da7f115a ]
    
    Current wait times have proven to be too short to protect against inode
    reuses that lead to metadata inconsistencies.
    
    Now that we will retry the inode allocation if we can't find any
    recently deleted inodes, it's a lot safer to increase the recently
    deleted time from 5 seconds to a minute.
    
    Link: https://lore.kernel.org/r/20200414023925.273867-1-tytso@mit.edu
    Google-Bug-Id: 36602237
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70e1d0a0e9f5d07481c6e0996621e4e105424b8f
Author: yangerkun <yangerkun@huawei.com>
Date:   Wed Feb 26 12:10:02 2020 +0800

    ext4: use matching invalidatepage in ext4_writepage
    
    [ Upstream commit c2a559bc0e7ed5a715ad6b947025b33cb7c05ea7 ]
    
    Run generic/388 with journal data mode sometimes may trigger the warning
    in ext4_invalidatepage. Actually, we should use the matching invalidatepage
    in ext4_writepage.
    
    Signed-off-by: yangerkun <yangerkun@huawei.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Ritesh Harjani <riteshh@linux.ibm.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20200226041002.13914-1-yangerkun@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54530dd3beb27b98cbf682ce549ad86a110279cb
Author: Fangrui Song <maskray@google.com>
Date:   Tue Apr 14 09:32:55 2020 -0700

    arm64: Delete the space separator in __emit_inst
    
    [ Upstream commit c9a4ef66450145a356a626c833d3d7b1668b3ded ]
    
    In assembly, many instances of __emit_inst(x) expand to a directive. In
    a few places __emit_inst(x) is used as an assembler macro argument. For
    example, in arch/arm64/kvm/hyp/entry.S
    
      ALTERNATIVE(nop, SET_PSTATE_PAN(1), ARM64_HAS_PAN, CONFIG_ARM64_PAN)
    
    expands to the following by the C preprocessor:
    
      alternative_insn nop, .inst (0xd500401f | ((0) << 16 | (4) << 5) | ((!!1) << 8)), 4, 1
    
    Both comma and space are separators, with an exception that content
    inside a pair of parentheses/quotes is not split, so the clang
    integrated assembler splits the arguments to:
    
       nop, .inst, (0xd500401f | ((0) << 16 | (4) << 5) | ((!!1) << 8)), 4, 1
    
    GNU as preprocesses the input with do_scrub_chars(). Its arm64 backend
    (along with many other non-x86 backends) sees:
    
      alternative_insn nop,.inst(0xd500401f|((0)<<16|(4)<<5)|((!!1)<<8)),4,1
      # .inst(...) is parsed as one argument
    
    while its x86 backend sees:
    
      alternative_insn nop,.inst (0xd500401f|((0)<<16|(4)<<5)|((!!1)<<8)),4,1
      # The extra space before '(' makes the whole .inst (...) parsed as two arguments
    
    The non-x86 backend's behavior is considered unintentional
    (https://sourceware.org/bugzilla/show_bug.cgi?id=25750).
    So drop the space separator inside `.inst (...)` to make the clang
    integrated assembler work.
    
    Suggested-by: Ilie Halip <ilie.halip@gmail.com>
    Signed-off-by: Fangrui Song <maskray@google.com>
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Link: https://github.com/ClangBuiltLinux/linux/issues/939
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e73a9b6c97753a1a366f1d8cf244c5c7ddd824f6
Author: Hui Wang <hui.wang@canonical.com>
Date:   Tue Apr 14 22:27:25 2020 +0800

    ALSA: hda: call runtime_allow() for all hda controllers
    
    [ Upstream commit 9a6418487b566503c772cb6e7d3d44e652b019b0 ]
    
    Before the pci_driver->probe() is called, the pci subsystem calls
    runtime_forbid() and runtime_get_sync() on this pci dev, so only call
    runtime_put_autosuspend() is not enough to enable the runtime_pm on
    this device.
    
    For controllers with vgaswitcheroo feature, the pci/quirks.c will call
    runtime_allow() for this dev, then the controllers could enter
    rt_idle/suspend/resume, but for non-vgaswitcheroo controllers like
    Intel hda controllers, the runtime_pm is not enabled because the
    runtime_allow() is not called.
    
    Since it is no harm calling runtime_allow() twice, here let hda
    driver call runtime_allow() for all controllers. Then the runtime_pm
    is enabled on all controllers after the put_autosuspend() is called.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Link: https://lore.kernel.org/r/20200414142725.6020-1-hui.wang@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41722344981f831d2e935e0bf14db3f26361106c
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Mar 26 09:03:58 2020 +0100

    xen/xenbus: ensure xenbus_map_ring_valloc() returns proper grant status
    
    [ Upstream commit 6b51fd3f65a22e3d1471b18a1d56247e246edd46 ]
    
    xenbus_map_ring_valloc() maps a ring page and returns the status of the
    used grant (0 meaning success).
    
    There are Xen hypervisors which might return the value 1 for the status
    of a failed grant mapping due to a bug. Some callers of
    xenbus_map_ring_valloc() test for errors by testing the returned status
    to be less than zero, resulting in no error detected and crashing later
    due to a not available ring page.
    
    Set the return value of xenbus_map_ring_valloc() to GNTST_general_error
    in case the grant status reported by Xen is greater than zero.
    
    This is part of XSA-316.
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Wei Liu <wl@xen.org>
    Link: https://lore.kernel.org/r/20200326080358.1018-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e575122cd956e492a211511e7bdfa0298b3f680
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Wed Apr 1 13:23:26 2020 -0500

    objtool: Support Clang non-section symbols in ORC dump
    
    [ Upstream commit 8782e7cab51b6bf01a5a86471dd82228af1ac185 ]
    
    Historically, the relocation symbols for ORC entries have only been
    section symbols:
    
      .text+0: sp:sp+8 bp:(und) type:call end:0
    
    However, the Clang assembler is aggressive about stripping section
    symbols.  In that case we will need to use function symbols:
    
      freezing_slow_path+0: sp:sp+8 bp:(und) type:call end:0
    
    In preparation for the generation of such entries in "objtool orc
    generate", add support for reading them in "objtool orc dump".
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Miroslav Benes <mbenes@suse.cz>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/b811b5eb1a42602c3b523576dc5efab9ad1c174d.1585761021.git.jpoimboe@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a80ebc2d32e70843b3430808511d62fb04cf869
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Wed Apr 1 13:23:25 2020 -0500

    objtool: Fix CONFIG_UBSAN_TRAP unreachable warnings
    
    [ Upstream commit bd841d6154f5f41f8a32d3c1b0bc229e326e640a ]
    
    CONFIG_UBSAN_TRAP causes GCC to emit a UD2 whenever it encounters an
    unreachable code path.  This includes __builtin_unreachable().  Because
    the BUG() macro uses __builtin_unreachable() after it emits its own UD2,
    this results in a double UD2.  In this case objtool rightfully detects
    that the second UD2 is unreachable:
    
      init/main.o: warning: objtool: repair_env_string()+0x1c8: unreachable instruction
    
    We weren't able to figure out a way to get rid of the double UD2s, so
    just silence the warning.
    
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Miroslav Benes <mbenes@suse.cz>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/6653ad73c6b59c049211bd7c11ed3809c20ee9f5.1585761021.git.jpoimboe@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e652b2cb83536ae3999a17c749b0416f7111f4b5
Author: Bodo Stroesser <bstroesser@ts.fujitsu.com>
Date:   Thu Apr 9 12:10:26 2020 +0200

    scsi: target: tcmu: reset_ring should reset TCMU_DEV_BIT_BROKEN
    
    [ Upstream commit 066f79a5fd6d1b9a5cc57b5cd445b3e4bb68a5b2 ]
    
    In case command ring buffer becomes inconsistent, tcmu sets device flag
    TCMU_DEV_BIT_BROKEN.  If the bit is set, tcmu rejects new commands from LIO
    core with TCM_LOGICAL_UNIT_COMMUNICATION_FAILURE, and no longer processes
    completions from the ring.  The reset_ring attribute can be used to
    completely clean up the command ring, so after reset_ring the ring no
    longer is inconsistent.
    
    Therefore reset_ring also should reset bit TCMU_DEV_BIT_BROKEN to allow
    normal processing.
    
    Link: https://lore.kernel.org/r/20200409101026.17872-1-bstroesser@ts.fujitsu.com
    Acked-by: Mike Christie <mchristi@redhat.com>
    Signed-off-by: Bodo Stroesser <bstroesser@ts.fujitsu.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34b4e948433182ddf82da287704792da130a1c8c
Author: Bodo Stroesser <bstroesser@ts.fujitsu.com>
Date:   Wed Apr 8 15:26:10 2020 +0200

    scsi: target: fix PR IN / READ FULL STATUS for FC
    
    [ Upstream commit 8fed04eb79a74cbf471dfaa755900a51b37273ab ]
    
    Creation of the response to READ FULL STATUS fails for FC based
    reservations. Reason is the too high loop limit (< 24) in
    fc_get_pr_transport_id(). The string representation of FC WWPN is 23 chars
    long only ("11:22:33:44:55:66:77:88"). So when i is 23, the loop body is
    executed a last time for the ending '\0' of the string and thus hex2bin()
    reports an error.
    
    Link: https://lore.kernel.org/r/20200408132610.14623-3-bstroesser@ts.fujitsu.com
    Signed-off-by: Bodo Stroesser <bstroesser@ts.fujitsu.com>
    Reviewed-by: Mike Christie <mchristi@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d0e94e46712ba888432a61cc1efcd8c01c9a49e
Author: Roy Spliet <nouveau@spliet.org>
Date:   Mon Apr 13 10:20:34 2020 +0200

    ALSA: hda: Explicitly permit using autosuspend if runtime PM is supported
    
    [ Upstream commit 3ba21113bd33d49f3c300a23fc08cf114c434995 ]
    
    This fixes runtime PM not working after a suspend-to-RAM cycle at least for
    the codec-less HDA device found on NVIDIA GPUs.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=207043
    Signed-off-by: Roy Spliet <nouveau@spliet.org>
    Link: https://lore.kernel.org/r/20200413082034.25166-7-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc6fa39f320426e181efb00636ba92739cd3e0de
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Apr 13 10:20:32 2020 +0200

    ALSA: hda: Keep the controller initialization even if no codecs found
    
    [ Upstream commit 9479e75fca370a5220784f7596bf598c4dad0b9b ]
    
    Currently, when the HD-audio controller driver doesn't detect any
    codecs, it tries to abort the probe.  But this abort happens at the
    delayed probe, i.e. the primary probe call already returned success,
    hence the driver is never unbound until user does so explicitly.
    As a result, it may leave the HD-audio device in the running state
    without the runtime PM.  More badly, if the device is a HD-audio bus
    that is tied with a GPU, GPU cannot reach to the full power down and
    consumes unnecessarily much power.
    
    This patch changes the logic after no-codec situation; it continues
    probing without the further codec initialization but keep the
    controller driver running normally.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=207043
    Tested-by: Roy Spliet <nouveau@spliet.org>
    Link: https://lore.kernel.org/r/20200413082034.25166-5-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9276babd9d734be6b3aa95a24b834f4e88366dc1
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Sun Apr 12 13:11:11 2020 -0700

    xfs: fix partially uninitialized structure in xfs_reflink_remap_extent
    
    [ Upstream commit c142932c29e533ee892f87b44d8abc5719edceec ]
    
    In the reflink extent remap function, it turns out that uirec (the block
    mapping corresponding only to the part of the passed-in mapping that got
    unmapped) was not fully initialized.  Specifically, br_state was not
    being copied from the passed-in struct to the uirec.  This could lead to
    unpredictable results such as the reflinked mapping being marked
    unwritten in the destination file.
    
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cae0dc1972936cd6bad3f599af35ddf90f920621
Author: Olaf Hering <olaf@aepfle.de>
Date:   Tue Apr 7 19:27:39 2020 +0200

    x86: hyperv: report value of misc_features
    
    [ Upstream commit 97d9f1c43bedd400301d6f1eff54d46e8c636e47 ]
    
    A few kernel features depend on ms_hyperv.misc_features, but unlike its
    siblings ->features and ->hints, the value was never reported during boot.
    
    Signed-off-by: Olaf Hering <olaf@aepfle.de>
    Link: https://lore.kernel.org/r/20200407172739.31371-1-olaf@aepfle.de
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9891a9eaf20f39d4191c83223dd7fd9f38a5ca7
Author: Martin Fuzzey <martin.fuzzey@flowbird.group>
Date:   Thu Apr 2 15:51:27 2020 +0200

    net: fec: set GPR bit on suspend by DT configuration.
    
    [ Upstream commit da722186f6549d752ea5b5fbc18111833c81a133 ]
    
    On some SoCs, such as the i.MX6, it is necessary to set a bit
    in the SoC level GPR register before suspending for wake on lan
    to work.
    
    The fec platform callback sleep_mode_enable was intended to allow this
    but the platform implementation was NAK'd back in 2015 [1]
    
    This means that, currently, wake on lan is broken on mainline for
    the i.MX6 at least.
    
    So implement the required bit setting in the fec driver by itself
    by adding a new optional DT property indicating the GPR register
    and adding the offset and bit information to the driver.
    
    [1] https://www.spinics.net/lists/netdev/msg310922.html
    
    Signed-off-by: Martin Fuzzey <martin.fuzzey@flowbird.group>
    Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f59dde85ecd34bfbac79137980acef921b0de2c
Author: Luke Nelson <lukenels@cs.washington.edu>
Date:   Sat Apr 18 16:26:53 2020 -0700

    bpf, x86: Fix encoding for lower 8-bit registers in BPF_STX BPF_B
    
    [ Upstream commit aee194b14dd2b2bde6252b3acf57d36dccfc743a ]
    
    This patch fixes an encoding bug in emit_stx for BPF_B when the source
    register is BPF_REG_FP.
    
    The current implementation for BPF_STX BPF_B in emit_stx saves one REX
    byte when the operands can be encoded using Mod-R/M alone. The lower 8
    bits of registers %rax, %rbx, %rcx, and %rdx can be accessed without using
    a REX prefix via %al, %bl, %cl, and %dl, respectively. Other registers,
    (e.g., %rsi, %rdi, %rbp, %rsp) require a REX prefix to use their 8-bit
    equivalents (%sil, %dil, %bpl, %spl).
    
    The current code checks if the source for BPF_STX BPF_B is BPF_REG_1
    or BPF_REG_2 (which map to %rdi and %rsi), in which case it emits the
    required REX prefix. However, it misses the case when the source is
    BPF_REG_FP (mapped to %rbp).
    
    The result is that BPF_STX BPF_B with BPF_REG_FP as the source operand
    will read from register %ch instead of the correct %bpl. This patch fixes
    the problem by fixing and refactoring the check on which registers need
    the extra REX byte. Since no BPF registers map to %rsp, there is no need
    to handle %spl.
    
    Fixes: 622582786c9e0 ("net: filter: x86: internal BPF JIT")
    Signed-off-by: Xi Wang <xi.wang@gmail.com>
    Signed-off-by: Luke Nelson <luke.r.nels@gmail.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20200418232655.23870-1-luke.r.nels@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aef81b0ffded319cafa330074d0d91c699416595
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Mar 10 08:57:27 2020 -0700

    xfs: clear PF_MEMALLOC before exiting xfsaild thread
    
    commit 10a98cb16d80be3595fdb165fad898bb28b8b6d2 upstream.
    
    Leaving PF_MEMALLOC set when exiting a kthread causes it to remain set
    during do_exit().  That can confuse things.  In particular, if BSD
    process accounting is enabled, then do_exit() writes data to an
    accounting file.  If that file has FS_SYNC_FL set, then this write
    occurs synchronously and can misbehave if PF_MEMALLOC is set.
    
    For example, if the accounting file is located on an XFS filesystem,
    then a WARN_ON_ONCE() in iomap_do_writepage() is triggered and the data
    doesn't get written when it should.  Or if the accounting file is
    located on an ext4 filesystem without a journal, then a WARN_ON_ONCE()
    in ext4_write_inode() is triggered and the inode doesn't get written.
    
    Fix this in xfsaild() by using the helper functions to save and restore
    PF_MEMALLOC.
    
    This can be reproduced as follows in the kvm-xfstests test appliance
    modified to add the 'acct' Debian package, and with kvm-xfstests's
    recommended kconfig modified to add CONFIG_BSD_PROCESS_ACCT=y:
    
            mkfs.xfs -f /dev/vdb
            mount /vdb
            touch /vdb/file
            chattr +S /vdb/file
            accton /vdb/file
            mkfs.xfs -f /dev/vdc
            mount /vdc
            umount /vdc
    
    It causes:
            WARNING: CPU: 1 PID: 336 at fs/iomap/buffered-io.c:1534
            CPU: 1 PID: 336 Comm: xfsaild/vdc Not tainted 5.6.0-rc5 #3
            Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20191223_100556-anatol 04/01/2014
            RIP: 0010:iomap_do_writepage+0x16b/0x1f0 fs/iomap/buffered-io.c:1534
            [...]
            Call Trace:
             write_cache_pages+0x189/0x4d0 mm/page-writeback.c:2238
             iomap_writepages+0x1c/0x33 fs/iomap/buffered-io.c:1642
             xfs_vm_writepages+0x65/0x90 fs/xfs/xfs_aops.c:578
             do_writepages+0x41/0xe0 mm/page-writeback.c:2344
             __filemap_fdatawrite_range+0xd2/0x120 mm/filemap.c:421
             file_write_and_wait_range+0x71/0xc0 mm/filemap.c:760
             xfs_file_fsync+0x7a/0x2b0 fs/xfs/xfs_file.c:114
             generic_write_sync include/linux/fs.h:2867 [inline]
             xfs_file_buffered_aio_write+0x379/0x3b0 fs/xfs/xfs_file.c:691
             call_write_iter include/linux/fs.h:1901 [inline]
             new_sync_write+0x130/0x1d0 fs/read_write.c:483
             __kernel_write+0x54/0xe0 fs/read_write.c:515
             do_acct_process+0x122/0x170 kernel/acct.c:522
             slow_acct_process kernel/acct.c:581 [inline]
             acct_process+0x1d4/0x27c kernel/acct.c:607
             do_exit+0x83d/0xbc0 kernel/exit.c:791
             kthread+0xf1/0x140 kernel/kthread.c:257
             ret_from_fork+0x27/0x50 arch/x86/entry/entry_64.S:352
    
    This bug was originally reported by syzbot at
    https://lore.kernel.org/r/0000000000000e7156059f751d7b@google.com.
    
    Reported-by: syzbot+1f9dc49e8de2582d90c2@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 905df10ddeb08a38c8a3fd5d19b913d08715a012
Author: Yang Shi <yang.shi@linux.alibaba.com>
Date:   Mon Apr 20 18:14:17 2020 -0700

    mm: shmem: disable interrupt when acquiring info->lock in userfaultfd_copy path
    
    commit 94b7cc01da5a3cc4f3da5e0ff492ef008bb555d6 upstream.
    
    Syzbot reported the below lockdep splat:
    
        WARNING: possible irq lock inversion dependency detected
        5.6.0-rc7-syzkaller #0 Not tainted
        --------------------------------------------------------
        syz-executor.0/10317 just changed the state of lock:
        ffff888021d16568 (&(&info->lock)->rlock){+.+.}, at: spin_lock include/linux/spinlock.h:338 [inline]
        ffff888021d16568 (&(&info->lock)->rlock){+.+.}, at: shmem_mfill_atomic_pte+0x1012/0x21c0 mm/shmem.c:2407
        but this lock was taken by another, SOFTIRQ-safe lock in the past:
         (&(&xa->xa_lock)->rlock#5){..-.}
    
        and interrupts could create inverse lock ordering between them.
    
        other info that might help us debug this:
         Possible interrupt unsafe locking scenario:
    
               CPU0                    CPU1
               ----                    ----
          lock(&(&info->lock)->rlock);
                                       local_irq_disable();
                                       lock(&(&xa->xa_lock)->rlock#5);
                                       lock(&(&info->lock)->rlock);
          <Interrupt>
            lock(&(&xa->xa_lock)->rlock#5);
    
         *** DEADLOCK ***
    
    The full report is quite lengthy, please see:
    
      https://lore.kernel.org/linux-mm/alpine.LSU.2.11.2004152007370.13597@eggly.anvils/T/#m813b412c5f78e25ca8c6c7734886ed4de43f241d
    
    It is because CPU 0 held info->lock with IRQ enabled in userfaultfd_copy
    path, then CPU 1 is splitting a THP which held xa_lock and info->lock in
    IRQ disabled context at the same time.  If softirq comes in to acquire
    xa_lock, the deadlock would be triggered.
    
    The fix is to acquire/release info->lock with *_irq version instead of
    plain spin_{lock,unlock} to make it softirq safe.
    
    Fixes: 4c27fe4c4c84 ("userfaultfd: shmem: add shmem_mcopy_atomic_pte for userfaultfd support")
    Reported-by: syzbot+e27980339d305f2dbfd9@syzkaller.appspotmail.com
    Signed-off-by: Yang Shi <yang.shi@linux.alibaba.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Tested-by: syzbot+e27980339d305f2dbfd9@syzkaller.appspotmail.com
    Acked-by: Hugh Dickins <hughd@google.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Link: http://lkml.kernel.org/r/1587061357-122619-1-git-send-email-yang.shi@linux.alibaba.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e28b8489d7f6330544706abf43bd0d152781c88
Author: Luke Nelson <lukenels@cs.washington.edu>
Date:   Wed Apr 22 10:36:29 2020 -0700

    bpf, x86_32: Fix incorrect encoding in BPF_LDX zero-extension
    
    commit 5fa9a98fb10380e48a398998cd36a85e4ef711d6 upstream.
    
    The current JIT uses the following sequence to zero-extend into the
    upper 32 bits of the destination register for BPF_LDX BPF_{B,H,W},
    when the destination register is not on the stack:
    
      EMIT3(0xC7, add_1reg(0xC0, dst_hi), 0);
    
    The problem is that C7 /0 encodes a MOV instruction that requires a 4-byte
    immediate; the current code emits only 1 byte of the immediate. This
    means that the first 3 bytes of the next instruction will be treated as
    the rest of the immediate, breaking the stream of instructions.
    
    This patch fixes the problem by instead emitting "xor dst_hi,dst_hi"
    to clear the upper 32 bits. This fixes the problem and is more efficient
    than using MOV to load a zero immediate.
    
    This bug may not be currently triggerable as BPF_REG_AX is the only
    register not stored on the stack and the verifier uses it in a limited
    way, and the verifier implements a zero-extension optimization. But the
    JIT should avoid emitting incorrect encodings regardless.
    
    Fixes: 03f5781be2c7b ("bpf, x86_32: add eBPF JIT compiler for ia32")
    Signed-off-by: Xi Wang <xi.wang@gmail.com>
    Signed-off-by: Luke Nelson <luke.r.nels@gmail.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Reviewed-by: H. Peter Anvin (Intel) <hpa@zytor.com>
    Acked-by: Wang YanQing <udknight@gmail.com>
    Link: https://lore.kernel.org/bpf/20200422173630.8351-1-luke.r.nels@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f8370cdc6ad4f8a8adeb9cc52ccd48c709d3c03
Author: Ian Rogers <irogers@google.com>
Date:   Fri Apr 17 11:28:42 2020 -0700

    perf/core: fix parent pid/tid in task exit events
    
    commit f3bed55e850926614b9898fe982f66d2541a36a5 upstream.
    
    Current logic yields the child task as the parent.
    
    Before:
    $ perf record bash -c "perf list > /dev/null"
    $ perf script -D |grep 'FORK\|EXIT'
    4387036190981094 0x5a70 [0x30]: PERF_RECORD_FORK(10472:10472):(10470:10470)
    4387036606207580 0xf050 [0x30]: PERF_RECORD_EXIT(10472:10472):(10472:10472)
    4387036607103839 0x17150 [0x30]: PERF_RECORD_EXIT(10470:10470):(10470:10470)
                                                       ^
      Note the repeated values here -------------------/
    
    After:
    383281514043 0x9d8 [0x30]: PERF_RECORD_FORK(2268:2268):(2266:2266)
    383442003996 0x2180 [0x30]: PERF_RECORD_EXIT(2268:2268):(2266:2266)
    383451297778 0xb70 [0x30]: PERF_RECORD_EXIT(2266:2266):(2265:2265)
    
    Fixes: 94d5d1b2d891 ("perf_counter: Report the cloning task as parent on perf_counter_fork()")
    Reported-by: KP Singh <kpsingh@google.com>
    Signed-off-by: Ian Rogers <irogers@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20200417182842.12522-1-irogers@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66c03e4d33e503ee1b975f2cdcb1fbb029d9f648
Author: Niklas Schnelle <schnelle@linux.ibm.com>
Date:   Thu Apr 9 09:46:20 2020 +0200

    net/mlx5: Fix failing fw tracer allocation on s390
    
    commit a019b36123aec9700b21ae0724710f62928a8bc1 upstream.
    
    On s390 FORCE_MAX_ZONEORDER is 9 instead of 11, thus a larger kzalloc()
    allocation as done for the firmware tracer will always fail.
    
    Looking at mlx5_fw_tracer_save_trace(), it is actually the driver itself
    that copies the debug data into the trace array and there is no need for
    the allocation to be contiguous in physical memory. We can therefor use
    kvzalloc() instead of kzalloc() and get rid of the large contiguous
    allcoation.
    
    Fixes: f53aaa31cce7 ("net/mlx5: FW tracer, implement tracer logic")
    Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fc9f6c1b586ec577a8b4646aedb8c8e8e8aafc8
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Thu Apr 16 10:31:20 2020 +0200

    cpumap: Avoid warning when CONFIG_DEBUG_PER_CPU_MAPS is enabled
    
    commit bc23d0e3f717ced21fbfacab3ab887d55e5ba367 upstream.
    
    When the kernel is built with CONFIG_DEBUG_PER_CPU_MAPS, the cpumap code
    can trigger a spurious warning if CONFIG_CPUMASK_OFFSTACK is also set. This
    happens because in this configuration, NR_CPUS can be larger than
    nr_cpumask_bits, so the initial check in cpu_map_alloc() is not sufficient
    to guard against hitting the warning in cpumask_check().
    
    Fix this by explicitly checking the supplied key against the
    nr_cpumask_bits variable before calling cpu_possible().
    
    Fixes: 6710e1126934 ("bpf: introduce new bpf cpu map type BPF_MAP_TYPE_CPUMAP")
    Reported-by: Xiumei Mu <xmu@redhat.com>
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Tested-by: Xiumei Mu <xmu@redhat.com>
    Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Acked-by: Song Liu <songliubraving@fb.com>
    Link: https://lore.kernel.org/bpf/20200416083120.453718-1-toke@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 982c2f3e5cf23a55fe57d2230832daaf5f981edb
Author: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
Date:   Wed Apr 15 16:42:33 2020 +0200

    ARM: dts: bcm283x: Disable dsi0 node
    
    commit 90444b958461a5f8fc299ece0fe17eab15cba1e1 upstream.
    
    Since its inception the module was meant to be disabled by default, but
    the original commit failed to add the relevant property.
    
    Fixes: 4aba4cf82054 ("ARM: dts: bcm2835: Add the DSI module nodes and clocks")
    Signed-off-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c038453822c7b5323c1217a30ce42ddea3a95d3
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Thu Apr 9 12:43:45 2020 -0500

    PCI: Move Apex Edge TPU class quirk to fix BAR assignment
    
    commit 0a8f41023e8a3c100b3dc458ed2da651bf961ead upstream.
    
    Some Google Apex Edge TPU devices have a class code of 0
    (PCI_CLASS_NOT_DEFINED).  This prevents the PCI core from assigning
    resources for the Apex BARs because __dev_sort_resources() ignores
    classless devices, host bridges, and IOAPICs.
    
    On x86, firmware typically assigns those resources, so this was not a
    problem.  But on some architectures, firmware does *not* assign BARs, and
    since the PCI core didn't do it either, the Apex device didn't work
    correctly:
    
      apex 0000:01:00.0: can't enable device: BAR 0 [mem 0x00000000-0x00003fff 64bit pref] not claimed
      apex 0000:01:00.0: error enabling PCI device
    
    f390d08d8b87 ("staging: gasket: apex: fixup undefined PCI class") added a
    quirk to fix the class code, but it was in the apex driver, and if the
    driver was built as a module, it was too late to help.
    
    Move the quirk to the PCI core, where it will always run early enough that
    the PCI core will assign resources if necessary.
    
    Link: https://lore.kernel.org/r/CAEzXK1r0Er039iERnc2KJ4jn7ySNUOG9H=Ha8TD8XroVqiZjgg@mail.gmail.com
    Fixes: f390d08d8b87 ("staging: gasket: apex: fixup undefined PCI class")
    Reported-by: Luís Mendes <luis.p.mendes@gmail.com>
    Debugged-by: Luís Mendes <luis.p.mendes@gmail.com>
    Tested-by: Luis Mendes <luis.p.mendes@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Todd Poynor <toddpoynor@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7829106c1c31b326d08d32d0ffbd3d28a262e7e1
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Fri Dec 20 03:20:06 2019 +0800

    PCI: Avoid ASMedia XHCI USB PME# from D0 defect
    
    commit 2880325bda8d53566dcb9725abc929eec871608e upstream.
    
    The ASMedia USB XHCI Controller claims to support generating PME# while
    in D0:
    
      01:00.0 USB controller: ASMedia Technology Inc. Device 2142 (prog-if 30 [XHCI])
        Subsystem: SUNIX Co., Ltd. Device 312b
        Capabilities: [78] Power Management version 3
          Flags: PMEClk- DSI- D1- D2- AuxCurrent=55mA PME(D0+,D1-,D2-,D3hot-,D3cold-)
          Status: D0 NoSoftRst+ PME-Enable+ DSel=0 DScale=0 PME-
    
    However PME# only gets asserted when plugging USB 2.0 or USB 1.1 devices,
    but not for USB 3.0 devices.
    
    Remove PCI_PM_CAP_PME_D0 to avoid using PME under D0.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=205919
    Link: https://lore.kernel.org/r/20191219192006.16270-1-kai.heng.feng@canonical.com
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8aacb4d02974b3818ba9800f52c74fb1dcc5cf8
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Tue Mar 31 17:02:33 2020 -0400

    svcrdma: Fix leak of svc_rdma_recv_ctxt objects
    
    commit 23cf1ee1f1869966b75518c59b5cbda4c6c92450 upstream.
    
    Utilize the xpo_release_rqst transport method to ensure that each
    rqstp's svc_rdma_recv_ctxt object is released even when the server
    cannot return a Reply for that rqstp.
    
    Without this fix, each RPC whose Reply cannot be sent leaks one
    svc_rdma_recv_ctxt. This is a 2.5KB structure, a 4KB DMA-mapped
    Receive buffer, and any pages that might be part of the Reply
    message.
    
    The leak is infrequent unless the network fabric is unreliable or
    Kerberos is in use, as GSS sequence window overruns, which result
    in connection loss, are more common on fast transports.
    
    Fixes: 3a88092ee319 ("svcrdma: Preserve Receive buffer until svc_rdma_sendto")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66a04cd140f282551adb1267a8c137fad05c3eb1
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Mon Mar 30 14:27:37 2020 -0400

    svcrdma: Fix trace point use-after-free race
    
    commit e28b4fc652c1830796a4d3e09565f30c20f9a2cf upstream.
    
    I hit this while testing nfsd-5.7 with kernel memory debugging
    enabled on my server:
    
    Mar 30 13:21:45 klimt kernel: BUG: unable to handle page fault for address: ffff8887e6c279a8
    Mar 30 13:21:45 klimt kernel: #PF: supervisor read access in kernel mode
    Mar 30 13:21:45 klimt kernel: #PF: error_code(0x0000) - not-present page
    Mar 30 13:21:45 klimt kernel: PGD 3601067 P4D 3601067 PUD 87c519067 PMD 87c3e2067 PTE 800ffff8193d8060
    Mar 30 13:21:45 klimt kernel: Oops: 0000 [#1] SMP DEBUG_PAGEALLOC PTI
    Mar 30 13:21:45 klimt kernel: CPU: 2 PID: 1933 Comm: nfsd Not tainted 5.6.0-rc6-00040-g881e87a3c6f9 #1591
    Mar 30 13:21:45 klimt kernel: Hardware name: Supermicro Super Server/X10SRL-F, BIOS 1.0c 09/09/2015
    Mar 30 13:21:45 klimt kernel: RIP: 0010:svc_rdma_post_chunk_ctxt+0xab/0x284 [rpcrdma]
    Mar 30 13:21:45 klimt kernel: Code: c1 83 34 02 00 00 29 d0 85 c0 7e 72 48 8b bb a0 02 00 00 48 8d 54 24 08 4c 89 e6 48 8b 07 48 8b 40 20 e8 5a 5c 2b e1 41 89 c6 <8b> 45 20 89 44 24 04 8b 05 02 e9 01 00 85 c0 7e 33 e9 5e 01 00 00
    Mar 30 13:21:45 klimt kernel: RSP: 0018:ffffc90000dfbdd8 EFLAGS: 00010286
    Mar 30 13:21:45 klimt kernel: RAX: 0000000000000000 RBX: ffff8887db8db400 RCX: 0000000000000030
    Mar 30 13:21:45 klimt kernel: RDX: 0000000000000040 RSI: 0000000000000000 RDI: 0000000000000246
    Mar 30 13:21:45 klimt kernel: RBP: ffff8887e6c27988 R08: 0000000000000000 R09: 0000000000000004
    Mar 30 13:21:45 klimt kernel: R10: ffffc90000dfbdd8 R11: 00c068ef00000000 R12: ffff8887eb4e4a80
    Mar 30 13:21:45 klimt kernel: R13: ffff8887db8db634 R14: 0000000000000000 R15: ffff8887fc931000
    Mar 30 13:21:45 klimt kernel: FS:  0000000000000000(0000) GS:ffff88885bd00000(0000) knlGS:0000000000000000
    Mar 30 13:21:45 klimt kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    Mar 30 13:21:45 klimt kernel: CR2: ffff8887e6c279a8 CR3: 000000081b72e002 CR4: 00000000001606e0
    Mar 30 13:21:45 klimt kernel: Call Trace:
    Mar 30 13:21:45 klimt kernel: ? svc_rdma_vec_to_sg+0x7f/0x7f [rpcrdma]
    Mar 30 13:21:45 klimt kernel: svc_rdma_send_write_chunk+0x59/0xce [rpcrdma]
    Mar 30 13:21:45 klimt kernel: svc_rdma_sendto+0xf9/0x3ae [rpcrdma]
    Mar 30 13:21:45 klimt kernel: ? nfsd_destroy+0x51/0x51 [nfsd]
    Mar 30 13:21:45 klimt kernel: svc_send+0x105/0x1e3 [sunrpc]
    Mar 30 13:21:45 klimt kernel: nfsd+0xf2/0x149 [nfsd]
    Mar 30 13:21:45 klimt kernel: kthread+0xf6/0xfb
    Mar 30 13:21:45 klimt kernel: ? kthread_queue_delayed_work+0x74/0x74
    Mar 30 13:21:45 klimt kernel: ret_from_fork+0x3a/0x50
    Mar 30 13:21:45 klimt kernel: Modules linked in: ocfs2_dlmfs ocfs2_stack_o2cb ocfs2_dlm ocfs2_nodemanager ocfs2_stackglue ib_umad ib_ipoib mlx4_ib sb_edac x86_pkg_temp_thermal iTCO_wdt iTCO_vendor_support coretemp kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul ghash_clmulni_intel aesni_intel glue_helper crypto_simd cryptd pcspkr rpcrdma i2c_i801 rdma_ucm lpc_ich mfd_core ib_iser rdma_cm iw_cm ib_cm mei_me raid0 libiscsi mei sg scsi_transport_iscsi ioatdma wmi ipmi_si ipmi_devintf ipmi_msghandler acpi_power_meter nfsd nfs_acl lockd auth_rpcgss grace sunrpc ip_tables xfs libcrc32c mlx4_en sd_mod sr_mod cdrom mlx4_core crc32c_intel igb nvme i2c_algo_bit ahci i2c_core libahci nvme_core dca libata t10_pi qedr dm_mirror dm_region_hash dm_log dm_mod dax qede qed crc8 ib_uverbs ib_core
    Mar 30 13:21:45 klimt kernel: CR2: ffff8887e6c279a8
    Mar 30 13:21:45 klimt kernel: ---[ end trace 87971d2ad3429424 ]---
    
    It's absolutely not safe to use resources pointed to by the @send_wr
    argument of ib_post_send() _after_ that function returns. Those
    resources are typically freed by the Send completion handler, which
    can run before ib_post_send() returns.
    
    Thus the trace points currently around ib_post_send() in the
    server's RPC/RDMA transport are a hazard, even when they are
    disabled. Rearrange them so that they touch the Work Request only
    _before_ ib_post_send() is invoked.
    
    Fixes: bd2abef33394 ("svcrdma: Trace key RDMA API events")
    Fixes: 4201c7464753 ("svcrdma: Introduce svc_rdma_send_ctxt")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88e28547f049536c589579a3f8bfa1291f2c5251
Author: Brian Foster <bfoster@redhat.com>
Date:   Sun Apr 12 13:11:10 2020 -0700

    xfs: acquire superblock freeze protection on eofblocks scans
    
    commit 4b674b9ac852937af1f8c62f730c325fb6eadcdb upstream.
    
    The filesystem freeze sequence in XFS waits on any background
    eofblocks or cowblocks scans to complete before the filesystem is
    quiesced. At this point, the freezer has already stopped the
    transaction subsystem, however, which means a truncate or cowblock
    cancellation in progress is likely blocked in transaction
    allocation. This results in a deadlock between freeze and the
    associated scanner.
    
    Fix this problem by holding superblock write protection across calls
    into the block reapers. Since protection for background scans is
    acquired from the workqueue task context, trylock to avoid a similar
    deadlock between freeze and blocking on the write lock.
    
    Fixes: d6b636ebb1c9f ("xfs: halt auto-reclamation activities while rebuilding rmap")
    Reported-by: Paul Furtado <paulfurtado91@gmail.com>
    Signed-off-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Chandan Rajendra <chandanrlinux@gmail.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Allison Collins <allison.henderson@oracle.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09d79b07eb1fb97f579357871c57c3825b48f45b
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Apr 14 12:27:08 2020 -0300

    net/cxgb4: Check the return from t4_query_params properly
    
    commit c799fca8baf18d1bbbbad6c3b736eefbde8bdb90 upstream.
    
    Positive return values are also failures that don't set val,
    although this probably can't happen. Fixes gcc 10 warning:
    
    drivers/net/ethernet/chelsio/cxgb4/t4_hw.c: In function ‘t4_phy_fw_ver’:
    drivers/net/ethernet/chelsio/cxgb4/t4_hw.c:3747:14: warning: ‘val’ may be used uninitialized in this function [-Wmaybe-uninitialized]
     3747 |  *phy_fw_ver = val;
    
    Fixes: 01b6961410b7 ("cxgb4: Add PHY firmware support for T420-BT cards")
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7aa592a9cf74230d866ca83e04c483094712ae9
Author: David Howells <dhowells@redhat.com>
Date:   Mon Apr 13 13:57:14 2020 +0100

    rxrpc: Fix DATA Tx to disable nofrag for UDP on AF_INET6 socket
    
    commit 0e631eee17dcea576ab922fa70e4fdbd596ee452 upstream.
    
    Fix the DATA packet transmission to disable nofrag for UDPv4 on an AF_INET6
    socket as well as UDPv6 when trying to transmit fragmentably.
    
    Without this, packets filled to the normal size used by the kernel AFS
    client of 1412 bytes be rejected by udp_sendmsg() with EMSGSIZE
    immediately.  The ->sk_error_report() notification hook is called, but
    rxrpc doesn't generate a trace for it.
    
    This is a temporary fix; a more permanent solution needs to involve
    changing the size of the packets being filled in accordance with the MTU,
    which isn't currently done in AF_RXRPC.  The reason for not doing so was
    that, barring the last packet in an rx jumbo packet, jumbos can only be
    assembled out of 1412-byte packets - and the plan was to construct jumbos
    on the fly at transmission time.
    
    Also, there's no point turning on IPV6_MTU_DISCOVER, since IPv6 has to
    engage in this anyway since fragmentation is only done by the sender.  We
    can then condense the switch-statement in rxrpc_send_data_packet().
    
    Fixes: 75b54cb57ca3 ("rxrpc: Add IPv6 support")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a90f0a7ba29a78445f9f40067cee6023fb18973
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Fri Mar 27 23:28:26 2020 +0100

    i2c: altera: use proper variable to hold errno
    
    commit edb2c9dd3948738ef030c32b948543e84f4d3f81 upstream.
    
    device_property_read_u32() returns errno or 0, so we should use the
    integer variable 'ret' and not the u32 'val' to hold the retval.
    
    Fixes: 0560ad576268 ("i2c: altera: Add Altera I2C Controller driver")
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Thor Thayer <thor.thayer@linux.intel.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 936d36529faeae9c45fcfa7177ac30dcea92f635
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Fri Mar 27 07:50:40 2020 +0300

    nfsd: memory corruption in nfsd4_lock()
    
    commit e1e8399eee72e9d5246d4d1bcacd793debe34dd3 upstream.
    
    New struct nfsd4_blocked_lock allocated in find_or_allocate_block()
    does not initialized nbl_list and nbl_lru.
    If conflock allocation fails rollback can call list_del_init()
    access uninitialized fields and corrupt memory.
    
    v2: just initialize nbl_list and nbl_lru right after nbl allocation.
    
    Fixes: 76d348fadff5 ("nfsd: have nfsd4_lock use blocking locks for v4.1+ lock")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6aa9b6c324796faae2a9a416c0fad6fa99215b86
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Tue Apr 21 19:28:45 2020 +0800

    ASoC: wm8960: Fix wrong clock after suspend & resume
    
    commit 1e060a453c8604311fb45ae2f84f67ed673329b4 upstream.
    
    After suspend & resume, wm8960_hw_params may be called when
    bias_level is not SND_SOC_BIAS_ON, then wm8960_configure_clocking
    is not called. But if sample rate is changed at that time, then
    the output clock rate will be not correct.
    
    So judgement of bias_level is SND_SOC_BIAS_ON in wm8960_hw_params
    is not necessary and it causes above issue.
    
    Fixes: 3176bf2d7ccd ("ASoC: wm8960: update pll and clock setting function")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/1587468525-27514-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f367a7f7c34f3e4b8681a4a0b7da77dfebf8415b
Author: Philipp Puschmann <p.puschmann@pironex.de>
Date:   Tue Apr 14 13:27:54 2020 +0200

    ASoC: tas571x: disable regulators on failed probe
    
    commit 9df8ba7c63073508e5aa677dade48fcab6a6773e upstream.
    
    If probe fails after enabling the regulators regulator_put is called for
    each supply without having them disabled before. This produces some
    warnings like
    
    WARNING: CPU: 0 PID: 90 at drivers/regulator/core.c:2044 _regulator_put.part.0+0x154/0x15c
    [<c010f7a8>] (unwind_backtrace) from [<c010c544>] (show_stack+0x10/0x14)
    [<c010c544>] (show_stack) from [<c012b640>] (__warn+0xd0/0xf4)
    [<c012b640>] (__warn) from [<c012b9b4>] (warn_slowpath_fmt+0x64/0xc4)
    [<c012b9b4>] (warn_slowpath_fmt) from [<c04c4064>] (_regulator_put.part.0+0x154/0x15c)
    [<c04c4064>] (_regulator_put.part.0) from [<c04c4094>] (regulator_put+0x28/0x38)
    [<c04c4094>] (regulator_put) from [<c04c40cc>] (regulator_bulk_free+0x28/0x38)
    [<c04c40cc>] (regulator_bulk_free) from [<c0579b2c>] (release_nodes+0x1d0/0x22c)
    [<c0579b2c>] (release_nodes) from [<c05756dc>] (really_probe+0x108/0x34c)
    [<c05756dc>] (really_probe) from [<c0575aec>] (driver_probe_device+0xb8/0x16c)
    [<c0575aec>] (driver_probe_device) from [<c0575d40>] (device_driver_attach+0x58/0x60)
    [<c0575d40>] (device_driver_attach) from [<c0575da0>] (__driver_attach+0x58/0xcc)
    [<c0575da0>] (__driver_attach) from [<c0573978>] (bus_for_each_dev+0x78/0xc0)
    [<c0573978>] (bus_for_each_dev) from [<c0574b5c>] (bus_add_driver+0x188/0x1e0)
    [<c0574b5c>] (bus_add_driver) from [<c05768b0>] (driver_register+0x74/0x108)
    [<c05768b0>] (driver_register) from [<c061ab7c>] (i2c_register_driver+0x3c/0x88)
    [<c061ab7c>] (i2c_register_driver) from [<c0102df8>] (do_one_initcall+0x58/0x250)
    [<c0102df8>] (do_one_initcall) from [<c01a91bc>] (do_init_module+0x60/0x244)
    [<c01a91bc>] (do_init_module) from [<c01ab5a4>] (load_module+0x2180/0x2540)
    [<c01ab5a4>] (load_module) from [<c01abbd4>] (sys_finit_module+0xd0/0xe8)
    [<c01abbd4>] (sys_finit_module) from [<c01011e0>] (__sys_trace_return+0x0/0x20)
    
    Fixes: 3fd6e7d9a146 (ASoC: tas571x: New driver for TI TAS571x power amplifiers)
    Signed-off-by: Philipp Puschmann <p.puschmann@pironex.de>
    Link: https://lore.kernel.org/r/20200414112754.3365406-1-p.puschmann@pironex.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b53a8ee1955c4e1ef86b6abd71a1f9c76bb9eb1
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Wed Apr 15 17:00:50 2020 +0200

    ASoC: q6dsp6: q6afe-dai: add missing channels to MI2S DAIs
    
    commit 0c824ec094b5cda766c80d88c2036e28c24a4cb1 upstream.
    
    For some reason, the MI2S DAIs do not have channels_min/max defined.
    This means that snd_soc_dai_stream_valid() returns false,
    i.e. the DAIs have neither valid playback nor capture stream.
    
    It's quite surprising that this ever worked correctly,
    but in 5.7-rc1 this is now failing badly: :)
    
    Commit 0e9cf4c452ad ("ASoC: pcm: check if cpu-dai supports a given stream")
    introduced a check for snd_soc_dai_stream_valid() before calling
    hw_params(), which means that the q6i2s_hw_params() function
    was never called, eventually resulting in:
    
        qcom-q6afe aprsvc:q6afe:4:4: no line is assigned
    
    ... even though "qcom,sd-lines" is set in the device tree.
    
    Commit 9b5db059366a ("ASoC: soc-pcm: dpcm: Only allow playback/capture if supported")
    now even avoids creating PCM devices if the stream is not supported,
    which means that it is failing even earlier with e.g.:
    
        Primary MI2S: ASoC: no backend playback stream
    
    Avoid all that trouble by adding channels_min/max for the MI2S DAIs.
    
    Fixes: 24c4cbcfac09 ("ASoC: qdsp6: q6afe: Add q6afe dai driver")
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20200415150050.616392-1-stephan@gerhold.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55e889ead48fa05c26aa982450e81ab8472fb799
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue Mar 10 22:16:54 2020 +0800

    iio:ad7797: Use correct attribute_group
    
    commit 28535877ac5b2b84f0d394fd67a5ec71c0c48b10 upstream.
    
    It should use ad7797_attribute_group in ad7797_info,
    according to commit ("iio:ad7793: Add support for the ad7796 and ad7797").
    
    Scale is fixed for the ad7796 and not programmable, hence
    should not have the scale_available attribute.
    
    Fixes: fd1a8b912841 ("iio:ad7793: Add support for the ad7796 and ad7797")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfde821e78b6c7880216ba0b4d95fdfc2b02855f
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Sat Mar 28 18:12:46 2020 -0700

    usb: gadget: udc: bdc: Remove unnecessary NULL checks in bdc_req_complete
    
    commit 09b04abb70f096333bef6bc95fa600b662e7ee13 upstream.
    
    When building with Clang + -Wtautological-pointer-compare:
    
    drivers/usb/gadget/udc/bdc/bdc_ep.c:543:28: warning: comparison of
    address of 'req->queue' equal to a null pointer is always false
    [-Wtautological-pointer-compare]
            if (req == NULL  || &req->queue == NULL || &req->usb_req == NULL)
                                 ~~~~~^~~~~    ~~~~
    drivers/usb/gadget/udc/bdc/bdc_ep.c:543:51: warning: comparison of
    address of 'req->usb_req' equal to a null pointer is always false
    [-Wtautological-pointer-compare]
            if (req == NULL  || &req->queue == NULL || &req->usb_req == NULL)
                                                        ~~~~~^~~~~~~    ~~~~
    2 warnings generated.
    
    As it notes, these statements will always evaluate to false so remove
    them.
    
    Fixes: efed421a94e6 ("usb: gadget: Add UDC driver for Broadcom USB3.0 device controller IP BDC")
    Link: https://github.com/ClangBuiltLinux/linux/issues/749
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 074e6e411a402ef5c6b22caa5cd46c4791fd72a2
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Fri Jan 31 16:25:50 2020 -0800

    usb: dwc3: gadget: Do link recovery for SS and SSP
    
    commit d0550cd20e52558ecf6847a0f96ebd5d944c17e4 upstream.
    
    The controller always supports link recovery for device in SS and SSP.
    Remove the speed limit check. Also, when the device is in RESUME or
    RESET state, it means the controller received the resume/reset request.
    The driver must send the link recovery to acknowledge the request. They
    are valid states for the driver to send link recovery.
    
    Fixes: 72246da40f37 ("usb: Introduce DesignWare USB3 DRD Driver")
    Fixes: ee5cd41c9117 ("usb: dwc3: Update speed checks for SuperSpeedPlus")
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4b9073a8a5bce1d25ec8237317163b8a02bb3a1
Author: Tyler Hicks <tyhicks@canonical.com>
Date:   Fri Apr 12 21:59:25 2019 +0000

    binder: take read mode of mmap_sem in binder_alloc_free_page()
    
    commit 60d4885710836595192c42d3e04b27551d30ec91 upstream.
    
    Restore the behavior of locking mmap_sem for reading in
    binder_alloc_free_page(), as was first done in commit 3013bf62b67a
    ("binder: reduce mmap_sem write-side lock"). That change was
    inadvertently reverted by commit 5cec2d2e5839 ("binder: fix race between
    munmap() and direct reclaim").
    
    In addition, change the name of the label for the error path to
    accurately reflect that we're taking the lock for reading.
    
    Backporting note: This fix is only needed when *both* of the commits
    mentioned above are applied. That's an unlikely situation since they
    both landed during the development of v5.1 but only one of them is
    targeted for stable.
    
    Fixes: 5cec2d2e5839 ("binder: fix race between munmap() and direct reclaim")
    Signed-off-by: Tyler Hicks <tyhicks@canonical.com>
    Acked-by: Todd Kjos <tkjos@android.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a52262b8a8f944e27466ce906ed312c973f95a05
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Thu Feb 20 20:04:03 2020 -0800

    include/uapi/linux/swab.h: fix userspace breakage, use __BITS_PER_LONG for swap
    
    commit 467d12f5c7842896d2de3ced74e4147ee29e97c8 upstream.
    
    QEMU has a funny new build error message when I use the upstream kernel
    headers:
    
          CC      block/file-posix.o
        In file included from /home/cborntra/REPOS/qemu/include/qemu/timer.h:4,
                         from /home/cborntra/REPOS/qemu/include/qemu/timed-average.h:29,
                         from /home/cborntra/REPOS/qemu/include/block/accounting.h:28,
                         from /home/cborntra/REPOS/qemu/include/block/block_int.h:27,
                         from /home/cborntra/REPOS/qemu/block/file-posix.c:30:
        /usr/include/linux/swab.h: In function `__swab':
        /home/cborntra/REPOS/qemu/include/qemu/bitops.h:20:34: error: "sizeof" is not defined, evaluates to 0 [-Werror=undef]
           20 | #define BITS_PER_LONG           (sizeof (unsigned long) * BITS_PER_BYTE)
              |                                  ^~~~~~
        /home/cborntra/REPOS/qemu/include/qemu/bitops.h:20:41: error: missing binary operator before token "("
           20 | #define BITS_PER_LONG           (sizeof (unsigned long) * BITS_PER_BYTE)
              |                                         ^
        cc1: all warnings being treated as errors
        make: *** [/home/cborntra/REPOS/qemu/rules.mak:69: block/file-posix.o] Error 1
        rm tests/qemu-iotests/socket_scm_helper.o
    
    This was triggered by commit d5767057c9a ("uapi: rename ext2_swab() to
    swab() and share globally in swab.h").  That patch is doing
    
      #include <asm/bitsperlong.h>
    
    but it uses BITS_PER_LONG.
    
    The kernel file asm/bitsperlong.h provide only __BITS_PER_LONG.
    
    Let us use the __ variant in swap.h
    
    Link: http://lkml.kernel.org/r/20200213142147.17604-1-borntraeger@de.ibm.com
    Fixes: d5767057c9a ("uapi: rename ext2_swab() to swab() and share globally in swab.h")
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: Yury Norov <yury.norov@gmail.com>
    Cc: Allison Randal <allison@lohutok.net>
    Cc: Joe Perches <joe@perches.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: William Breathitt Gray <vilhelm.gray@gmail.com>
    Cc: Torsten Hilbrich <torsten.hilbrich@secunet.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2303321f9a73a641dccb4243863d1731dd84c479
Author: Liu Jian <liujian56@huawei.com>
Date:   Sun Mar 3 15:04:18 2019 +0800

    mtd: cfi: fix deadloop in cfi_cmdset_0002.c do_write_buffer
    
    commit d9b8a67b3b95a5c5aae6422b8113adc1c2485f2b upstream.
    
    In function do_write_buffer(), in the for loop, there is a case
    chip_ready() returns 1 while chip_good() returns 0, so it never
    break the loop.
    To fix this, chip_good() is enough and it should timeout if it stay
    bad for a while.
    
    Fixes: dfeae1073583("mtd: cfi_cmdset_0002: Change write buffer to check correct value")
    Signed-off-by: Yi Huaijie <yihuaijie@huawei.com>
    Signed-off-by: Liu Jian <liujian56@huawei.com>
    Reviewed-by: Tokunori Ikegami <ikegami_to@yahoo.co.jp>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90fb92bb55cdbf959c489ed64afd20ea5de1081c
Author: Clement Leger <cleger@kalray.eu>
Date:   Fri Oct 4 09:37:36 2019 +0200

    remoteproc: Fix wrong rvring index computation
    
    commit 00a0eec59ddbb1ce966b19097d8a8d2f777e726a upstream.
    
    Index of rvring is computed using pointer arithmetic. However, since
    rvring->rvdev->vring is the base of the vring array, computation
    of rvring idx should be reversed. It previously lead to writing at negative
    indices in the resource table.
    
    Signed-off-by: Clement Leger <cleger@kalray.eu>
    Link: https://lore.kernel.org/r/20191004073736.8327-1-cleger@kalray.eu
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Cc: Doug Anderson <dianders@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
