commit ee3696c90e3cce141a74b14531cdf2650df2c566
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Jul 11 12:45:27 2021 +0200

    Linux 4.4.275
    
    Link: https://lore.kernel.org/r/20210709131529.395072769@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f780f3fc81d54916d94ffef7282be5ca09b5017e
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Tue Feb 14 00:03:38 2017 +0900

    arm: kprobes: Allow to handle reentered kprobe on single-stepping
    
    commit f3fbd7ec62dec1528fb8044034e2885f2b257941 upstream.
    
    This is arm port of commit 6a5022a56ac3 ("kprobes/x86: Allow to
    handle reentered kprobe on single-stepping")
    
    Since the FIQ handlers can interrupt in the single stepping
    (or preparing the single stepping, do_debug etc.), we should
    consider a kprobe is hit in the NMI handler. Even in that
    case, the kprobe is allowed to be reentered as same as the
    kprobes hit in kprobe handlers
    (KPROBE_HIT_ACTIVE or KPROBE_HIT_SSDONE).
    
    The real issue will happen when a kprobe hit while another
    reentered kprobe is processing (KPROBE_REENTER), because
    we already consumed a saved-area for the previous kprobe.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Jon Medhurst <tixy@linaro.org>
    Fixes: 24ba613c9d6c ("ARM kprobes: core code")
    Cc: stable@vger.kernel.org #v2.6.25~v4.11
    Signed-off-by: huangshaobo <huangshaobo6@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 478791754649395287a5a8e3048784f4b2cc79a6
Author: Juergen Gross <jgross@suse.com>
Date:   Wed Jun 23 15:09:13 2021 +0200

    xen/events: reset active flag for lateeoi events later
    
    commit 3de218ff39b9e3f0d453fe3154f12a174de44b25 upstream.
    
    In order to avoid a race condition for user events when changing
    cpu affinity reset the active flag only when EOI-ing the event.
    
    This is working fine as all user events are lateeoi events. Note that
    lateeoi_ack_mask_dynirq() is not modified as there is no explicit call
    to xen_irq_lateeoi() expected later.
    
    Cc: stable@vger.kernel.org
    Reported-by: Julien Grall <julien@xen.org>
    Fixes: b6622798bc50b62 ("xen/events: avoid handling the same event on two cpus at the same time")
    Tested-by: Julien Grall <julien@xen.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrvsky@oracle.com>
    Link: https://lore.kernel.org/r/20210623130913.9405-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5c196badc2ce43c62e689caf2731e8720252cfe
Author: Christian König <christian.koenig@amd.com>
Date:   Fri Jun 11 14:34:50 2021 +0200

    drm/nouveau: fix dma_address check for CPU/GPU sync
    
    [ Upstream commit d330099115597bbc238d6758a4930e72b49ea9ba ]
    
    AGP for example doesn't have a dma_address array.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210614110517.1624-1-christian.koenig@amd.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2c309e935e4f645dc473cbdf4fbc0e70f929286
Author: ManYi Li <limanyi@uniontech.com>
Date:   Fri Jun 11 17:44:02 2021 +0800

    scsi: sr: Return appropriate error code when disk is ejected
    
    [ Upstream commit 7dd753ca59d6c8cc09aa1ed24f7657524803c7f3 ]
    
    Handle a reported media event code of 3. This indicates that the media has
    been removed from the drive and user intervention is required to proceed.
    Return DISK_EVENT_EJECT_REQUEST in that case.
    
    Link: https://lore.kernel.org/r/20210611094402.23884-1-limanyi@uniontech.com
    Signed-off-by: ManYi Li <limanyi@uniontech.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
