commit fc72a4171174dd6b7ddefe5eeaa12cec9a162704
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed May 9 09:51:56 2018 +0200

    Linux 4.14.40

commit 27f29dbceb3c979d00833a90aa27ff0756ecc1e0
Author: Song Liu <songliubraving@fb.com>
Date:   Mon Apr 23 10:21:34 2018 -0700

    tracing: Fix bad use of igrab in trace_uprobe.c
    
    commit 0c92c7a3c5d416f47b32c5f20a611dfeca5d5f2e upstream.
    
    As Miklos reported and suggested:
    
      This pattern repeats two times in trace_uprobe.c and in
      kernel/events/core.c as well:
    
          ret = kern_path(filename, LOOKUP_FOLLOW, &path);
          if (ret)
              goto fail_address_parse;
    
          inode = igrab(d_inode(path.dentry));
          path_put(&path);
    
      And it's wrong.  You can only hold a reference to the inode if you
      have an active ref to the superblock as well (which is normally
      through path.mnt) or holding s_umount.
    
      This way unmounting the containing filesystem while the tracepoint is
      active will give you the "VFS: Busy inodes after unmount..." message
      and a crash when the inode is finally put.
    
      Solution: store path instead of inode.
    
    This patch fixes two instances in trace_uprobe.c. struct path is added to
    struct trace_uprobe to keep the inode and containing mount point
    referenced.
    
    Link: http://lkml.kernel.org/r/20180423172135.4050588-1-songliubraving@fb.com
    
    Fixes: f3f096cfedf8 ("tracing: Provide trace events interface for uprobes")
    Fixes: 33ea4b24277b ("perf/core: Implement the 'perf_uprobe' PMU")
    Cc: stable@vger.kernel.org
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Howard McLauchlan <hmclauchlan@fb.com>
    Cc: Josef Bacik <jbacik@fb.com>
    Cc: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Acked-by: Miklos Szeredi <mszeredi@redhat.com>
    Reported-by: Miklos Szeredi <miklos@szeredi.hu>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d86aaca9cea2a7b9dac861b339301cf18a5626f2
Author: Agustin Vega-Frias <agustinv@codeaurora.org>
Date:   Tue May 1 10:14:50 2018 -0400

    irqchip/qcom: Fix check for spurious interrupts
    
    commit 1bc2463cee92ef0e2034c813d5e511adeb58b5fd upstream.
    
    When the interrupts for a combiner span multiple registers it must be
    checked if any interrupts have been asserted on each register before
    checking for spurious interrupts.
    
    Checking each register seperately leads to false positive warnings.
    
    [ tglx: Massaged changelog ]
    
    Fixes: f20cc9b00c7b ("irqchip/qcom: Add IRQ combiner driver")
    Signed-off-by: Agustin Vega-Frias <agustinv@codeaurora.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Jason Cooper <jason@lakedaemon.net>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: timur@codeaurora.org
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1525184090-26143-1-git-send-email-agustinv@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd2088d1d77aaf3abc2f5fe0d019af1a1eafe68a
Author: João Paulo Rechi Vita <jprvita@gmail.com>
Date:   Thu Apr 19 07:04:34 2018 -0700

    platform/x86: asus-wireless: Fix NULL pointer dereference
    
    commit 9f0a93de9139c2b0a59299cd36b61564522458f8 upstream.
    
    When the module is removed the led workqueue is destroyed in the remove
    callback, before the led device is unregistered from the led subsystem.
    
    This leads to a NULL pointer derefence when the led device is
    unregistered automatically later as part of the module removal cleanup.
    Bellow is the backtrace showing the problem.
    
      BUG: unable to handle kernel NULL pointer dereference at           (null)
      IP: __queue_work+0x8c/0x410
      PGD 0 P4D 0
      Oops: 0000 [#1] SMP NOPTI
      Modules linked in: ccm edac_mce_amd kvm_amd kvm irqbypass crct10dif_pclmul crc32_pclmul ghash_clmulni_intel pcbc aesni_intel aes_x86_64 joydev crypto_simd asus_nb_wmi glue_helper uvcvideo snd_hda_codec_conexant snd_hda_codec_generic snd_hda_codec_hdmi snd_hda_intel asus_wmi snd_hda_codec cryptd snd_hda_core sparse_keymap videobuf2_vmalloc arc4 videobuf2_memops snd_hwdep input_leds videobuf2_v4l2 ath9k psmouse videobuf2_core videodev ath9k_common snd_pcm ath9k_hw media fam15h_power ath k10temp snd_timer mac80211 i2c_piix4 r8169 mii mac_hid cfg80211 asus_wireless(-) snd soundcore wmi shpchp 8250_dw ip_tables x_tables amdkfd amd_iommu_v2 amdgpu radeon chash i2c_algo_bit drm_kms_helper syscopyarea serio_raw sysfillrect sysimgblt fb_sys_fops ahci ttm libahci drm video
      CPU: 3 PID: 2177 Comm: rmmod Not tainted 4.15.0-5-generic #6+dev94.b4287e5bem1-Endless
      Hardware name: ASUSTeK COMPUTER INC. X555DG/X555DG, BIOS 5.011 05/05/2015
      RIP: 0010:__queue_work+0x8c/0x410
      RSP: 0018:ffffbe8cc249fcd8 EFLAGS: 00010086
      RAX: ffff992ac6810800 RBX: 0000000000000000 RCX: 0000000000000008
      RDX: 0000000000000000 RSI: 0000000000000008 RDI: ffff992ac6400e18
      RBP: ffffbe8cc249fd18 R08: ffff992ac6400db0 R09: 0000000000000000
      R10: 0000000000000040 R11: ffff992ac6400dd8 R12: 0000000000002000
      R13: ffff992abd762e00 R14: ffff992abd763e38 R15: 000000000001ebe0
      FS:  00007f318203e700(0000) GS:ffff992aced80000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 0000000000000000 CR3: 00000001c720e000 CR4: 00000000001406e0
      Call Trace:
       queue_work_on+0x38/0x40
       led_state_set+0x2c/0x40 [asus_wireless]
       led_set_brightness_nopm+0x14/0x40
       led_set_brightness+0x37/0x60
       led_trigger_set+0xfc/0x1d0
       led_classdev_unregister+0x32/0xd0
       devm_led_classdev_release+0x11/0x20
       release_nodes+0x109/0x1f0
       devres_release_all+0x3c/0x50
       device_release_driver_internal+0x16d/0x220
       driver_detach+0x3f/0x80
       bus_remove_driver+0x55/0xd0
       driver_unregister+0x2c/0x40
       acpi_bus_unregister_driver+0x15/0x20
       asus_wireless_driver_exit+0x10/0xb7c [asus_wireless]
       SyS_delete_module+0x1da/0x2b0
       entry_SYSCALL_64_fastpath+0x24/0x87
      RIP: 0033:0x7f3181b65fd7
      RSP: 002b:00007ffe74bcbe18 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0
      RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f3181b65fd7
      RDX: 000000000000000a RSI: 0000000000000800 RDI: 0000555ea2559258
      RBP: 0000555ea25591f0 R08: 00007ffe74bcad91 R09: 000000000000000a
      R10: 0000000000000000 R11: 0000000000000206 R12: 0000000000000003
      R13: 00007ffe74bcae00 R14: 0000000000000000 R15: 0000555ea25591f0
      Code: 01 00 00 02 0f 85 7d 01 00 00 48 63 45 d4 48 c7 c6 00 f4 fa 87 49 8b 9d 08 01 00 00 48 03 1c c6 4c 89 f7 e8 87 fb ff ff 48 85 c0 <48> 8b 3b 0f 84 c5 01 00 00 48 39 f8 0f 84 bc 01 00 00 48 89 c7
      RIP: __queue_work+0x8c/0x410 RSP: ffffbe8cc249fcd8
      CR2: 0000000000000000
      ---[ end trace 7aa4f4a232e9c39c ]---
    
    Unregistering the led device on the remove callback before destroying the
    workqueue avoids this problem.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=196097
    
    Reported-by: Dun Hum <bitter.taste@gmx.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: João Paulo Rechi Vita <jprvita@endlessm.com>
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87fa7da673b4e8911cf0a36a270dc247e558930e
Author: Bin Liu <b-liu@ti.com>
Date:   Mon Apr 30 11:20:54 2018 -0500

    usb: musb: trace: fix NULL pointer dereference in musb_g_tx()
    
    commit 9aea9b6cc78d2b99b23d84fb2e0bc6e464c6569e upstream.
    
    The usb_request pointer could be NULL in musb_g_tx(), where the
    tracepoint call would trigger the NULL pointer dereference failure when
    parsing the members of the usb_request pointer.
    
    Move the tracepoint call to where the usb_request pointer is already
    checked to solve the issue.
    
    Fixes: fc78003e5345 ("usb: musb: gadget: add usb-request tracepoints")
    Cc: stable@vger.kernel.org # v4.8+
    Signed-off-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 303e99bde8dcb6beaa6be738e025f9f9dd2703f1
Author: Bin Liu <b-liu@ti.com>
Date:   Mon Apr 30 11:20:53 2018 -0500

    usb: musb: host: fix potential NULL pointer dereference
    
    commit 2b63f1329df2cd814c1f8353fae4853ace6521d1 upstream.
    
    musb_start_urb() doesn't check the pass-in parameter if it is NULL.  But
    in musb_bulk_nak_timeout() the parameter passed to musb_start_urb() is
    returned from first_qh(), which could be NULL.
    
    So wrap the musb_start_urb() call here with a if condition check to
    avoid the potential NULL pointer dereference.
    
    Fixes: f283862f3b5c ("usb: musb: NAK timeout scheme on bulk TX endpoint")
    Cc: stable@vger.kernel.org # v3.7+
    Signed-off-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec6de93fab502d0b10c5acc4e5c4ef7cfb8f807b
Author: SZ Lin (林上智) <sz.lin@moxa.com>
Date:   Thu Apr 26 14:28:31 2018 +0800

    USB: serial: option: adding support for ublox R410M
    
    commit 4205cb01f6e9ef2ae6daa7be4e8ac1edeb4c9d64 upstream.
    
    This patch adds support for ublox R410M PID 0x90b2 USB modem to option
    driver, this module supports LTE Cat M1 / NB1.
    
    Interface layout:
    0: QCDM/DIAG
    1: ADB
    2: AT
    3: RMNET
    
    Signed-off-by: SZ Lin (林上智) <sz.lin@moxa.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f0c247910d022dacc74b10fd8cc1d3527efe459
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Mar 7 17:40:48 2018 +0100

    USB: serial: option: reimplement interface masking
    
    commit c3a65808f04a8426481b63a4fbd9392f009f6330 upstream.
    
    Reimplement interface masking using device flags stored directly in the
    device-id table. This will make it easier to add and maintain device-id
    entries by using a more compact and readable notation compared to the
    current implementation (which manages pairs of masks in separate
    blacklist structs).
    
    Two convenience macros are used to flag an interface as either reserved
    or as not supporting modem-control requests:
    
            { USB_DEVICE(TELIT_VENDOR_ID, TELIT_PRODUCT_ME910_DUAL_MODEM),
              .driver_info = NCTRL(0) | RSVD(3) },
    
    For now, we limit the highest maskable interface number to seven, which
    allows for (up to 16) additional device flags to be added later should
    need arise.
    
    Note that this will likely need to be backported to stable in order to
    make future device-id backports more manageable.
    
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e548f5abae926ac7c6fabd6bc4027e255ec2d1d
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Thu May 3 11:04:48 2018 -0400

    USB: Accept bulk endpoints with 1024-byte maxpacket
    
    commit fb5ee84ea72c5f1b6cabdd1c9d6e8648995ca7c6 upstream.
    
    Some non-compliant high-speed USB devices have bulk endpoints with a
    1024-byte maxpacket size.  Although such endpoints don't work with
    xHCI host controllers, they do work with EHCI controllers.  We used to
    accept these invalid sizes (with a warning), but we no longer do
    because of an unintentional change introduced by commit aed9d65ac327
    ("USB: validate wMaxPacketValue entries in endpoint descriptors").
    
    This patch restores the old behavior, so that people with these
    peculiar devices can use them without patching their kernels by hand.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Suggested-by: Elvinas <elvinas@veikia.lt>
    Fixes: aed9d65ac327 ("USB: validate wMaxPacketValue entries in endpoint descriptors")
    CC: <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 425a02545d5ea15ce5021ee9ed834f0e9d3b695d
Author: Mayank Rana <mrana@codeaurora.org>
Date:   Fri Mar 23 10:05:33 2018 -0700

    usb: dwc3: gadget: Fix list_del corruption in dwc3_ep_dequeue
    
    commit 96bd39df29c29d348d65311e5954c0b7d3a2a790 upstream.
    
    dwc3_ep_dequeue() waits for completion of End Transfer command using
    wait_event_lock_irq(), which will release the dwc3->lock while waiting
    and reacquire after completion. This allows a potential race condition
    with ep_disable() which also removes all requests from started_list
    and pending_list.
    
    The check for NULL r->trb should catch this but currently it exits to
    the wrong 'out1' label which calls dwc3_gadget_giveback(). Since its
    list entry was already removed, if CONFIG_DEBUG_LIST is enabled a
    'list_del corruption' bug is thrown since its next/prev pointers are
    already LIST_POISON1/2. If r->trb is NULL it should simply exit to
    'out0'.
    
    Fixes: cf3113d893d4 ("usb: dwc3: gadget: properly increment dequeue pointer on ep_dequeue")
    Cc: stable@vger.kernel.org # v4.12+
    Signed-off-by: Mayank Rana <mrana@codeaurora.org>
    Signed-off-by: Jack Pham <jackp@codeaurora.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cc49bb627addd738879950d19a3ba3127c729cd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Apr 29 17:41:55 2018 +0200

    USB: serial: visor: handle potential invalid device configuration
    
    commit 4842ed5bfcb9daf6660537d70503c18d38dbdbb8 upstream.
    
    If we get an invalid device configuration from a palm 3 type device, we
    might incorrectly parse things, and we have the potential to crash in
    "interesting" ways.
    
    Fix this up by verifying the size of the configuration passed to us by
    the device, and only if it is correct, will we handle it.
    
    Note that this also fixes an information leak of slab data.
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Reviewed-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [ johan: add comment about the info leak ]
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0799a0ea96e4923f52f85fe315b62e9176a3319c
Author: Matthew Wilcox <willy@infradead.org>
Date:   Tue Apr 24 14:02:57 2018 -0700

    errseq: Always report a writeback error once
    
    commit b4678df184b314a2bd47d2329feca2c2534aa12b upstream.
    
    The errseq_t infrastructure assumes that errors which occurred before
    the file descriptor was opened are of no interest to the application.
    This turns out to be a regression for some applications, notably Postgres.
    
    Before errseq_t, a writeback error would be reported exactly once (as
    long as the inode remained in memory), so Postgres could open a file,
    call fsync() and find out whether there had been a writeback error on
    that file from another process.
    
    This patch changes the errseq infrastructure to report errors to all
    file descriptors which are opened after the error occurred, but before
    it was reported to any file descriptor.  This restores the user-visible
    behaviour.
    
    Cc: stable@vger.kernel.org
    Fixes: 5660e13d2fd6 ("fs: new infrastructure for writeback error handling and reporting")
    Signed-off-by: Matthew Wilcox <mawilcox@microsoft.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4f6e858433e98964238675405970ae685d021df
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Wed Apr 4 22:38:49 2018 +0200

    test_firmware: fix setting old custom fw path back on exit, second try
    
    commit e538409257d0217a9bc715686100a5328db75a15 upstream.
    
    Commit 65c79230576 tried to clear the custom firmware path on exit by
    writing a single space to the firmware_class.path parameter.  This
    doesn't work because nothing strips this space from the value stored
    and fw_get_filesystem_firmware() only ignores zero-length paths.
    
    Instead, write a null byte.
    
    Fixes: 0a8adf58475 ("test: add firmware_class loader test")
    Fixes: 65c79230576 ("test_firmware: fix setting old custom fw path back on exit")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Acked-by: Luis R. Rodriguez <mcgrof@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43b3ba6ece54f555e4e5857cccd23cb60cb19b8e
Author: Sean Paul <seanpaul@chromium.org>
Date:   Fri Apr 20 14:59:59 2018 -0400

    drm/bridge: vga-dac: Fix edid memory leak
    
    commit 49ceda9de2da4d1827941d06701f3017c27c1855 upstream.
    
    edid should be freed once it's finished being used.
    
    Fixes: 56fe8b6f4991 ("drm/bridge: Add RGB to VGA bridge support")
    Cc: Rob Herring <robh@kernel.org>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: Maxime Ripard <maxime.ripard@free-electrons.com>
    Cc: Archit Taneja <architt@codeaurora.org>
    Cc: Andrzej Hajda <a.hajda@samsung.com>
    Cc: Laurent Pinchart <Laurent.pinchart@ideasonboard.com>
    Cc: <stable@vger.kernel.org> # v4.9+
    Reviewed-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180420190007.1572-1-seanpaul@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df9703e7e72adc0f333b03e3e86096ff3d1ff315
Author: Thomas Hellstrom <thellstrom@vmware.com>
Date:   Thu Apr 26 09:59:30 2018 +0200

    drm/vmwgfx: Fix a buffer object leak
    
    commit 13f149d47392782baafd96d54d4e65f3b5ca342f upstream.
    
    A buffer object leak was introduced when fixing a premature buffer
    object release. Fix this.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 73a88250b709 ("Fix a destoy-while-held mutex problem.")
    Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
    Reviewed-by: Deepak Rawat <drawat@vmware.com>
    Reviewed-by: Sinclair Yeh <syeh@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 758f3340b8037d5f43e8c2ea564d7e5d1292ede6
Author: Bharat Potnuri <bharat@chelsio.com>
Date:   Fri Apr 27 16:41:16 2018 +0530

    iw_cxgb4: Atomically flush per QP HW CQEs
    
    commit 2df19e19ae90d94fd8724083f161f368a2797537 upstream.
    
    When a CQ is shared by multiple QPs, c4iw_flush_hw_cq() needs to acquire
    corresponding QP lock before moving the CQEs into its corresponding SW
    queue and accessing the SQ contents for completing a WR.
    Ignore CQEs if corresponding QP is already flushed.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
    Reviewed-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7683a5c8c946c4b975c84accc70112750ea46b4
Author: Sebastian Sanchez <sebastian.sanchez@intel.com>
Date:   Tue May 1 05:35:58 2018 -0700

    IB/hfi1: Fix NULL pointer dereference when invalid num_vls is used
    
    commit 45d924571a5e1329580811f2419da61b07ac3613 upstream.
    
    When an invalid num_vls is used as a module parameter, the code
    execution follows an exception path where the macro dd_dev_err()
    expects dd->pcidev->dev not to be NULL in hfi1_init_dd(). This
    causes a NULL pointer dereference.
    
    Fix hfi1_init_dd() by initializing dd->pcidev and dd->pcidev->dev
    earlier in the code. If a dd exists, then dd->pcidev and
    dd->pcidev->dev always exists.
    
    BUG: unable to handle kernel NULL pointer dereference
    at 00000000000000f0
    IP: __dev_printk+0x15/0x90
    Workqueue: events work_for_cpu_fn
    RIP: 0010:__dev_printk+0x15/0x90
    Call Trace:
     dev_err+0x6c/0x90
     ? hfi1_init_pportdata+0x38d/0x3f0 [hfi1]
     hfi1_init_dd+0xdd/0x2530 [hfi1]
     ? pci_conf1_read+0xb2/0xf0
     ? pci_read_config_word.part.9+0x64/0x80
     ? pci_conf1_write+0xb0/0xf0
     ? pcie_capability_clear_and_set_word+0x57/0x80
     init_one+0x141/0x490 [hfi1]
     local_pci_probe+0x3f/0xa0
     work_for_cpu_fn+0x10/0x20
     process_one_work+0x152/0x350
     worker_thread+0x1cf/0x3e0
     kthread+0xf5/0x130
     ? max_active_store+0x80/0x80
     ? kthread_bind+0x10/0x10
     ? do_syscall_64+0x6e/0x1a0
     ? SyS_exit_group+0x10/0x10
     ret_from_fork+0x35/0x40
    
    Cc: <stable@vger.kernel.org> # 4.9.x
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Sebastian Sanchez <sebastian.sanchez@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79181a45aa9a2427c6320a2d50e8710fc6931cce
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Tue May 1 05:35:51 2018 -0700

    IB/hfi1: Fix loss of BECN with AHG
    
    commit 0a0bcb046b2f0c15b89f8c1b08ad3de601a83c66 upstream.
    
    AHG may be armed to use the stored header, which by design is limited
    to edits in the PSN/A 32 bit word (bth2).
    
    When the code is trying to send a BECN, the use of the stored header
    will lose the BECN bit.
    
    Fix by avoiding AHG when getting ready to send a BECN. This is
    accomplished by always claiming the packet is not a middle packet which
    is an AHG precursor.  BECNs are not a normal case and this should not
    hurt AHG optimizations.
    
    Cc: <stable@vger.kernel.org> # 4.14.x
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f185bc79bb9d2727b32ab34d2e547ed7fa50a11
Author: Mike Marciniszyn <mike.marciniszyn@intel.com>
Date:   Tue May 1 05:35:36 2018 -0700

    IB/hfi1: Fix handling of FECN marked multicast packet
    
    commit f59fb9e05109b836230813e45f71c9ecc2d5dbe6 upstream.
    
    The code for handling a marked UD packet unconditionally returns the
    dlid in the header of the FECN marked packet.  This is not correct
    for multicast packets where the DLID is in the multicast range.
    
    The subsequent attempt to send the CNP with the multicast lid will
    cause the chip to halt the ack send context because the source
    lid doesn't match the chip programming.   The send context will
    be halted and flush any other pending packets in the pio ring causing
    the CNP to not be sent.
    
    A part of investigating the fix, it was determined that the 16B work
    broke the FECN routine badly with inconsistent use of 16 bit and 32 bits
    types for lids and pkeys.  Since the port's source lid was correctly 32
    bits the type mixmatches need to be dealt with at the same time as
    fixing the CNP header issue.
    
    Fix these issues by:
    - Using the ports lid for as the SLID for responding to FECN marked UD
      packets
    - Insure pkey is always 16 bit in this and subordinate routines
    - Insure lids are 32 bits in this and subordinate routines
    
    Cc: <stable@vger.kernel.org> # 4.14.x
    Fixes: 88733e3b8450 ("IB/hfi1: Add 16B UD support")
    Reviewed-by: Don Hiatt <don.hiatt@intel.com>
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5ebbbc72671f561a10726ac465cccbd3b74fe91
Author: Danit Goldberg <danitg@mellanox.com>
Date:   Mon Apr 23 17:01:54 2018 +0300

    IB/mlx5: Use unlimited rate when static rate is not supported
    
    commit 4f32ac2e452c2180cd2df581cbadac183e27ecd0 upstream.
    
    Before the change, if the user passed a static rate value different
    than zero and the FW doesn't support static rate,
    it would end up configuring rate of 2.5 GBps.
    
    Fix this by using rate 0; unlimited, in cases where FW
    doesn't support static rate configuration.
    
    Cc: <stable@vger.kernel.org> # 3.10
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Reviewed-by: Majd Dibbiny <majd@mellanox.com>
    Signed-off-by: Danit Goldberg <danitg@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a27293f2f6e16657a535187454729d7da31397ec
Author: SZ Lin (林上智) <sz.lin@moxa.com>
Date:   Thu Apr 26 14:30:13 2018 +0800

    NET: usb: qmi_wwan: add support for ublox R410M PID 0x90b2
    
    commit 9306b38e42cb266f98bff6f6f4c1c652aa79ba45 upstream.
    
    This patch adds support for PID 0x90b2 of ublox R410M.
    
    qmicli -d /dev/cdc-wdm0 --dms-get-manufacturer
    [/dev/cdc-wdm0] Device manufacturer retrieved:
            Manufacturer: 'u-blox'
    
    qmicli -d /dev/cdc-wdm0 --dms-get-model
    [/dev/cdc-wdm0] Device model retrieved:
            Model: 'SARA-R410M-02B'
    
    Signed-off-by: SZ Lin (林上智) <sz.lin@moxa.com>
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14ad51557092eae81b1a7a121dd60463196f4d61
Author: Leon Romanovsky <leon@kernel.org>
Date:   Mon Apr 23 17:01:53 2018 +0300

    RDMA/mlx5: Protect from shift operand overflow
    
    commit 002bf2282b2d7318e444dca9ffcb994afc5d5f15 upstream.
    
    Ensure that user didn't supply values too large that can cause overflow.
    
    UBSAN: Undefined behaviour in drivers/infiniband/hw/mlx5/qp.c:263:23
    shift exponent -2147483648 is negative
    CPU: 0 PID: 292 Comm: syzkaller612609 Not tainted 4.16.0-rc1+ #131
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.0-0-g63451fca13-prebuilt.qemu-project.org 04/01/2014 Call
    Trace:
    dump_stack+0xde/0x164
    ubsan_epilogue+0xe/0x81
    set_rq_size+0x7c2/0xa90
    create_qp_common+0xc18/0x43c0
    mlx5_ib_create_qp+0x379/0x1ca0
    create_qp.isra.5+0xc94/0x2260
    ib_uverbs_create_qp+0x21b/0x2a0
    ib_uverbs_write+0xc2c/0x1010
    vfs_write+0x1b0/0x550
    SyS_write+0xc7/0x1a0
    do_syscall_64+0x1aa/0x740
    entry_SYSCALL_64_after_hwframe+0x26/0x9b
    RIP: 0033:0x433569
    RSP: 002b:00007ffc6e62f448 EFLAGS: 00000217 ORIG_RAX: 0000000000000001
    RAX: ffffffffffffffda RBX: 00000000004002f8 RCX: 0000000000433569
    RDX: 0000000000000070 RSI: 00000000200042c0 RDI: 0000000000000003
    RBP: 00000000006d5018 R08: 00000000004002f8 R09: 00000000004002f8
    R10: 00000000004002f8 R11: 0000000000000217 R12: 0000000000000000
    R13: 000000000040c9f0 R14: 000000000040ca80 R15: 0000000000000006
    
    Cc: <stable@vger.kernel.org> # 3.10
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Cc: syzkaller <syzkaller@googlegroups.com>
    Reported-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be855252ebce0d4402fd7abccf58806f12947b64
Author: Leon Romanovsky <leon@kernel.org>
Date:   Mon Apr 23 17:01:52 2018 +0300

    RDMA/mlx5: Fix multiple NULL-ptr deref errors in rereg_mr flow
    
    commit b4bd701ac469075d94ed9699a28755f2862252b9 upstream.
    
    Failure in rereg MR releases UMEM but leaves the MR to be destroyed
    by the user. As a result the following scenario may happen:
    "create MR -> rereg MR with failure -> call to rereg MR again" and
    hit "NULL-ptr deref or user memory access" errors.
    
    Ensure that rereg MR is only performed on a non-dead MR.
    
    Cc: syzkaller <syzkaller@googlegroups.com>
    Cc: <stable@vger.kernel.org> # 4.5
    Fixes: 395a8e4c32ea ("IB/mlx5: Refactoring register MR code")
    Reported-by: Noa Osherovich <noaos@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ae1bf3681352fc8c08cbd3be2d210f59d4cc42a
Author: Roland Dreier <roland@purestorage.com>
Date:   Thu Apr 19 08:28:11 2018 -0700

    RDMA/ucma: Allow resolving address w/o specifying source address
    
    commit 09abfe7b5b2f442a85f4c4d59ecf582ad76088d7 upstream.
    
    The RDMA CM will select a source device and address by consulting
    the routing table if no source address is passed into
    rdma_resolve_address().  Userspace will ask for this by passing an
    all-zero source address in the RESOLVE_IP command.  Unfortunately
    the new check for non-zero address size rejects this with EINVAL,
    which breaks valid userspace applications.
    
    Fix this by explicitly allowing a zero address family for the source.
    
    Fixes: 2975d5de6428 ("RDMA/ucma: Check AF family prior resolving address")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38a65e7535031abbf796e2c645431bf7998d4084
Author: Raju Rangoju <rajur@chelsio.com>
Date:   Mon Apr 23 21:42:37 2018 +0530

    RDMA/cxgb4: release hw resources on device removal
    
    commit 26bff1bd74a4f7417509a83295614e9dab995b2a upstream.
    
    The c4iw_rdev_close() logic was not releasing all the hw
    resources (PBL and RQT memory) during the device removal
    event (driver unload / system reboot). This can cause panic
    in gen_pool_destroy().
    
    The module remove function will wait for all the hw
    resources to be released during the device removal event.
    
    Fixes c12a67fe(iw_cxgb4: free EQ queue memory on last deref)
    Signed-off-by: Raju Rangoju <rajur@chelsio.com>
    Reviewed-by: Steve Wise <swise@opengridcomputing.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd9ca962eeb05767efed7c2dd62d201a54a9d727
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Mon Apr 16 23:07:45 2018 -0700

    xfs: prevent creating negative-sized file via INSERT_RANGE
    
    commit 7d83fb14258b9961920cd86f0b921caaeb3ebe85 upstream.
    
    During the "insert range" fallocate operation, i_size grows by the
    specified 'len' bytes.  XFS verifies that i_size + len < s_maxbytes, as
    it should.  But this comparison is done using the signed 'loff_t', and
    'i_size + len' can wrap around to a negative value, causing the check to
    incorrectly pass, resulting in an inode with "negative" i_size.  This is
    possible on 64-bit platforms, where XFS sets s_maxbytes = LLONG_MAX.
    ext4 and f2fs don't run into this because they set a smaller s_maxbytes.
    
    Fix it by using subtraction instead.
    
    Reproducer:
        xfs_io -f file -c "truncate $(((1<<63)-1))" -c "finsert 0 4096"
    
    Fixes: a904b1ca5751 ("xfs: Add support FALLOC_FL_INSERT_RANGE for fallocate")
    Cc: <stable@vger.kernel.org> # v4.1+
    Originally-From: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    [darrick: fix signed integer addition overflow too]
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b68c7af0b2e7d3675c67e977b200466e26142a7e
Author: Ping-Ke Shih <pkshih@realtek.com>
Date:   Fri Apr 20 10:30:09 2018 +0800

    rtlwifi: cleanup 8723be ant_sel definition
    
    commit af8a41cccf8f469165c6debc8fe07c5fd2ca501a upstream.
    
    Some HP laptops have only a single wifi antenna. This would not be a
    problem except that they were shipped with an incorrectly encoded
    EFUSE. It should have been possible to open the computer and transfer
    the antenna connection to the other terminal except that such action
    might void the warranty, and moving the antenna broke the Windows
    driver. The fix was to add a module option that would override the
    EFUSE encoding. That was done with commit c18d8f509571 ("rtlwifi:
    rtl8723be: Add antenna select module parameter"). There was still a
    problem with Bluetooth coexistence, which was addressed with commit
    baa170229095 ("rtlwifi: btcoexist: Implement antenna selection").
    There were still problems, thus there were commit 0ff78adeef11
    ("rtlwifi: rtl8723be: fix ant_sel code") and commit 6d6226928369
    ("rtlwifi: btcoexist: Fix antenna selection code"). Despite all these
    attempts at fixing the problem, the code is not yet right. A proper
    fix is important as there are now instances of laptops having
    RTL8723DE chips with the same problem.
    
    The module parameter ant_sel is used to control antenna number and path.
    At present enum ANT_{X2,X1} is used to define the antenna number, but
    this choice is not intuitive, thus change to a new enum ANT_{MAIN,AUX}
    to make it more readable. This change showed examples where incorrect
    values were used. It was also possible to remove a workaround in
    halbtcoutsrc.c.
    
    The experimental results with single antenna connected to specific path
    are now as follows:
      ant_sel  ANT_MAIN(#1)  ANT_AUX(#2)
         0        -8            -62
         1        -62           -10
         2        -6            -60
    
    Signed-off-by: Ping-Ke Shih <pkshih@realtek.com>
    Fixes: c18d8f509571 ("rtlwifi: rtl8723be: Add antenna select module parameter")
    Fixes: baa170229095 ("rtlwifi: btcoexist: Implement antenna selection")
    Fixes: 0ff78adeef11 ("rtlwifi: rtl8723be: fix ant_sel code")
    Fixes: 6d6226928369 ("rtlwifi: btcoexist: Fix antenna selection code")
    Cc: Stable <stable@vger.kernel.org> # 4.7+
    Reviewed-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcd835be6c17b30fc608ab72323c7a57a34b8296
Author: Ping-Ke Shih <pkshih@realtek.com>
Date:   Wed Jan 17 14:15:26 2018 +0800

    rtlwifi: btcoex: Add power_on_setting routine
    
    commit a44709bba70fb9badc44b6a551415b152db13182 upstream.
    
    After mac power-on sequence, wifi will start to work so notify btcoex the
    event to configure registers especially related to antenna. This will not
    only help to assign antenna but also to yield better user experience.
    
    Signed-off-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10579ed39e20ed896347711640122e54e33455b5
Author: Vittorio Gambaletta (VittGam) <linuxbugs@vittgam.net>
Date:   Wed Apr 25 15:22:13 2018 -0700

    Input: atmel_mxt_ts - add touchpad button mapping for Samsung Chromebook Pro
    
    commit f372b81101e6895252298e563d634d5e44ae81e7 upstream.
    
    This patch adds the correct platform data information for the Caroline
    Chromebook, so that the mouse button does not get stuck in pressed state
    after the first click.
    
    The Samus button keymap and platform data definition are the correct
    ones for Caroline, so they have been reused here.
    
    Signed-off-by: Vittorio Gambaletta <linuxbugs@vittgam.net>
    Signed-off-by: Salvatore Bellizzi <lkml@seppia.net>
    Tested-by: Guenter Roeck <groeck@chromium.org>
    Cc: stable@vger.kernel.org
    [dtor: adjusted vendor spelling to match shipping firmware]
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 894937021946214de310ebafef6462a19c6dfaba
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Apr 6 10:23:05 2018 -0700

    Input: leds - fix out of bound access
    
    commit 6bd6ae639683c0b41f46990d5c64ff9fbfa019dc upstream.
    
    UI_SET_LEDBIT ioctl() causes the following KASAN splat when used with
    led > LED_CHARGING:
    
    [ 1274.663418] BUG: KASAN: slab-out-of-bounds in input_leds_connect+0x611/0x730 [input_leds]
    [ 1274.663426] Write of size 8 at addr ffff88003377b2c0 by task ckb-next-daemon/5128
    
    This happens because we were writing to the led structure before making
    sure that it exists.
    
    Reported-by: Tasos Sahanidis <tasos@tasossah.com>
    Tested-by: Tasos Sahanidis <tasos@tasossah.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c698f7b169a5534c783a6f3ab35f8db275f456b
Author: Bryant G Ly <bryantly@linux.vnet.ibm.com>
Date:   Tue Apr 17 10:33:21 2018 -0500

    scsi: target: Fix fortify_panic kernel exception
    
    commit f5957dade4f373b04fa1f5315a489f18cc2c4cb4 upstream.
    
    memcmp() requires the two buffers passed as arguments to be at least
    'size' bytes long, otherwise a fortify_panic will trigger.
    
    Use memchr_inv() instead of memcmp() to determine whether the received
    payload is zeroed or not.
    
    The bug was found by running a block backstore via LIO.
    
    [  496.212958] Call Trace:
    [  496.212960] [c0000007e58e3800] [c000000000cbbefc] fortify_panic+0x24/0x38 (unreliable)
    [  496.212965] [c0000007e58e3860] [d00000000f150c28] iblock_execute_write_same+0x3b8/0x3c0 [target_core_iblock]
    [  496.212976] [c0000007e58e3910] [d000000006c737d4] __target_execute_cmd+0x54/0x150 [target_core_mod]
    [  496.212982] [c0000007e58e3940] [d000000006d32ce4] ibmvscsis_write_pending+0x74/0xe0 [ibmvscsis]
    [  496.212991] [c0000007e58e39b0] [d000000006c74fc8] transport_generic_new_cmd+0x318/0x370 [target_core_mod]
    [  496.213001] [c0000007e58e3a30] [d000000006c75084] transport_handle_cdb_direct+0x64/0xd0 [target_core_mod]
    [  496.213011] [c0000007e58e3aa0] [d000000006c75298] target_submit_cmd_map_sgls+0x1a8/0x320 [target_core_mod]
    [  496.213021] [c0000007e58e3b30] [d000000006c75458] target_submit_cmd+0x48/0x60 [target_core_mod]
    [  496.213026] [c0000007e58e3bd0] [d000000006d34c20] ibmvscsis_scheduler+0x370/0x600 [ibmvscsis]
    [  496.213031] [c0000007e58e3c90] [c00000000013135c] process_one_work+0x1ec/0x580
    [  496.213035] [c0000007e58e3d20] [c000000000131798] worker_thread+0xa8/0x600
    [  496.213039] [c0000007e58e3dc0] [c00000000013a468] kthread+0x168/0x1b0
    [  496.213044] [c0000007e58e3e30] [c00000000000b528] ret_from_kernel_thread+0x5c/0xb4
    
    [mkp: tweaked commit message]
    
    Fixes: 2237498f0b5c ("target/iblock: Convert WRITE_SAME to blkdev_issue_zeroout")
    Signed-off-by: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Reviewed-by: Steven Royer <seroyer@linux.vnet.ibm.com>
    Tested-by: Taylor Jakobson <tjakobs@us.ibm.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Nicholas Bellinger <nab@linux-iscsi.org>
    Cc: <stable@vger.kernel.org> # v4.13+
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4438b15755e2cf1a9ce15090efb649e1bb1b997
Author: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Date:   Thu Mar 15 08:44:24 2018 -0400

    tracepoint: Do not warn on ENOMEM
    
    commit d66a270be3310d7aa132fec0cea77d3d32a0ff75 upstream.
    
    Tracepoint should only warn when a kernel API user does not respect the
    required preconditions (e.g. same tracepoint enabled twice, or called
    to remove a tracepoint that does not exist).
    
    Silence warning in out-of-memory conditions, given that the error is
    returned to the caller.
    
    This ensures that out-of-memory error-injection testing does not trigger
    warnings in tracepoint.c, which were seen by syzbot.
    
    Link: https://lkml.kernel.org/r/001a114465e241a8720567419a72@google.com
    Link: https://lkml.kernel.org/r/001a1140e0de15fc910567464190@google.com
    Link: http://lkml.kernel.org/r/20180315124424.32319-1-mathieu.desnoyers@efficios.com
    
    CC: Peter Zijlstra <peterz@infradead.org>
    CC: Jiri Olsa <jolsa@redhat.com>
    CC: Arnaldo Carvalho de Melo <acme@kernel.org>
    CC: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    CC: Namhyung Kim <namhyung@kernel.org>
    CC: stable@vger.kernel.org
    Fixes: de7b2973903c6 ("tracepoint: Use struct pointer instead of name hash for reg/unreg tracepoints")
    Reported-by: syzbot+9c0d616860575a73166a@syzkaller.appspotmail.com
    Reported-by: syzbot+4e9ae7fa46233396f64d@syzkaller.appspotmail.com
    Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd0e2aec5686bc5aa9b93f5609d35b483321f751
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Apr 30 10:06:48 2018 +0200

    ALSA: aloop: Add missing cable lock to ctl API callbacks
    
    commit 76b3421b39bd610546931fc923edcf90c18fa395 upstream.
    
    Some control API callbacks in aloop driver are too lazy to take the
    loopback->cable_lock and it results in possible races of cable access
    while it's being freed.  It eventually lead to a UAF, as reported by
    fuzzer recently.
    
    This patch covers such control API callbacks and add the proper mutex
    locks.
    
    Reported-by: DaeRyong Jeong <threeearcat@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e3460ae33c6a10d4908e3235070cbe0a7a3a280
Author: Robert Rosengren <robert.rosengren@axis.com>
Date:   Mon Mar 26 07:24:49 2018 +0200

    ALSA: aloop: Mark paused device as inactive
    
    commit 306a4f3ca7f3c7dfa473ebd19d66e40e59d99734 upstream.
    
    Show paused ALSA aloop device as inactive, i.e. the control
    "PCM Slave Active" set as false. Notification sent upon state change.
    
    This makes it possible for client capturing from aloop device to know if
    data is expected. Without it the client expects data even if playback
    is paused.
    
    Signed-off-by: Robert Rosengren <robert.rosengren@axis.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9581fff37b1aaafe675c2fe05dd59a8c13094e91
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Apr 29 15:01:46 2018 +0900

    ALSA: dice: fix kernel NULL pointer dereference due to invalid calculation for array index
    
    commit 52759c0963510a2843774aac9b65ccaed3308dc0 upstream.
    
    At a commit f91c9d7610a ('ALSA: firewire-lib: cache maximum length of
    payload to reduce function calls'), maximum size of payload for tx
    isochronous packet is cached to reduce the number of function calls.
    
    This cache was programmed to updated at a first callback of ohci1394 IR
    context. However, the maximum size is required to queueing packets before
    starting the isochronous context.
    
    As a result, the cached value is reused to queue packets in next time to
    starting the isochronous context. Then the cache is updated in a first
    callback of the isochronous context. This can cause kernel NULL pointer
    dereference in a below call graph:
    
    (sound/firewire/amdtp-stream.c)
    amdtp_stream_start()
    ->queue_in_packet()
      ->queue_packet()
        (drivers/firewire/core-iso.c)
        ->fw_iso_context_queue()
          ->struct fw_card_driver.queue_iso()
          (drivers/firewire/ohci.c)
          = ohci_queue_iso()
            ->queue_iso_packet_per_buffer()
              buffer->pages[page]
    
    The issued dereference occurs in a case that:
     - target unit supports different stream formats for sampling transmission
       frequency.
     - maximum length of payload for tx stream in a first trial is bigger
       than the length in a second trial.
    
    In this case, correct number of pages are allocated for DMA and the 'pages'
    array has enough elements, while index of the element is wrongly calculated
    according to the old value of length of payload in a call of
    'queue_in_packet()'. Then it causes the issue.
    
    This commit fixes the critical bug. This affects all of drivers in ALSA
    firewire stack in Linux kernel v4.12 or later.
    
    [12665.302360] BUG: unable to handle kernel NULL pointer dereference at 0000000000000030
    [12665.302415] IP: ohci_queue_iso+0x47c/0x800 [firewire_ohci]
    [12665.302439] PGD 0
    [12665.302440] P4D 0
    [12665.302450]
    [12665.302470] Oops: 0000 [#1] SMP PTI
    [12665.302487] Modules linked in: ...
    [12665.303096] CPU: 1 PID: 12760 Comm: jackd Tainted: P           OE   4.13.0-38-generic #43-Ubuntu
    [12665.303154] Hardware name:                  /DH77DF, BIOS KCH7710H.86A.0069.2012.0224.1825 02/24/2012
    [12665.303215] task: ffff9ce87da2ae80 task.stack: ffffb5b8823d0000
    [12665.303258] RIP: 0010:ohci_queue_iso+0x47c/0x800 [firewire_ohci]
    [12665.303301] RSP: 0018:ffffb5b8823d3ab8 EFLAGS: 00010086
    [12665.303337] RAX: ffff9ce4f4876930 RBX: 0000000000000008 RCX: ffff9ce88a3955e0
    [12665.303384] RDX: 0000000000000000 RSI: 0000000034877f00 RDI: 0000000000000000
    [12665.303427] RBP: ffffb5b8823d3b68 R08: ffff9ce8ccb390a0 R09: ffff9ce877639ab0
    [12665.303475] R10: 0000000000000108 R11: 0000000000000000 R12: 0000000000000003
    [12665.303513] R13: 0000000000000000 R14: ffff9ce4f4876950 R15: 0000000000000000
    [12665.303554] FS:  00007f2ec467f8c0(0000) GS:ffff9ce8df280000(0000) knlGS:0000000000000000
    [12665.303600] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [12665.303633] CR2: 0000000000000030 CR3: 00000002dcf90004 CR4: 00000000000606e0
    [12665.303674] Call Trace:
    [12665.303698]  fw_iso_context_queue+0x18/0x20 [firewire_core]
    [12665.303735]  queue_packet+0x88/0xe0 [snd_firewire_lib]
    [12665.303770]  amdtp_stream_start+0x19b/0x270 [snd_firewire_lib]
    [12665.303811]  start_streams+0x276/0x3c0 [snd_dice]
    [12665.303840]  snd_dice_stream_start_duplex+0x1bf/0x480 [snd_dice]
    [12665.303882]  ? vma_gap_callbacks_rotate+0x1e/0x30
    [12665.303914]  ? __rb_insert_augmented+0xab/0x240
    [12665.303936]  capture_prepare+0x3c/0x70 [snd_dice]
    [12665.303961]  snd_pcm_do_prepare+0x1d/0x30 [snd_pcm]
    [12665.303985]  snd_pcm_action_single+0x3b/0x90 [snd_pcm]
    [12665.304009]  snd_pcm_action_nonatomic+0x68/0x70 [snd_pcm]
    [12665.304035]  snd_pcm_prepare+0x68/0x90 [snd_pcm]
    [12665.304058]  snd_pcm_common_ioctl1+0x4c0/0x940 [snd_pcm]
    [12665.304083]  snd_pcm_capture_ioctl1+0x19b/0x250 [snd_pcm]
    [12665.304108]  snd_pcm_capture_ioctl+0x27/0x40 [snd_pcm]
    [12665.304131]  do_vfs_ioctl+0xa8/0x630
    [12665.304148]  ? entry_SYSCALL_64_after_hwframe+0xe9/0x139
    [12665.304172]  ? entry_SYSCALL_64_after_hwframe+0xe2/0x139
    [12665.304195]  ? entry_SYSCALL_64_after_hwframe+0xdb/0x139
    [12665.304218]  ? entry_SYSCALL_64_after_hwframe+0xd4/0x139
    [12665.304242]  ? entry_SYSCALL_64_after_hwframe+0xcd/0x139
    [12665.304265]  ? entry_SYSCALL_64_after_hwframe+0xc6/0x139
    [12665.304288]  ? entry_SYSCALL_64_after_hwframe+0xbf/0x139
    [12665.304312]  ? entry_SYSCALL_64_after_hwframe+0xb8/0x139
    [12665.304335]  ? entry_SYSCALL_64_after_hwframe+0xb1/0x139
    [12665.304358]  SyS_ioctl+0x79/0x90
    [12665.304374]  ? entry_SYSCALL_64_after_hwframe+0x72/0x139
    [12665.304397]  entry_SYSCALL_64_fastpath+0x24/0xab
    [12665.304417] RIP: 0033:0x7f2ec3750ef7
    [12665.304433] RSP: 002b:00007fff99e31388 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
    [12665.304465] RAX: ffffffffffffffda RBX: 00007fff99e312f0 RCX: 00007f2ec3750ef7
    [12665.304494] RDX: 0000000000000000 RSI: 0000000000004140 RDI: 0000000000000007
    [12665.304522] RBP: 0000556ebc63fd60 R08: 0000556ebc640560 R09: 0000000000000000
    [12665.304553] R10: 0000000000000001 R11: 0000000000000246 R12: 0000556ebc63fcf0
    [12665.304584] R13: 0000000000000000 R14: 0000000000000007 R15: 0000000000000000
    [12665.304612] Code: 01 00 00 44 89 eb 45 31 ed 45 31 db 66 41 89 1e 66 41 89 5e 0c 66 45 89 5e 0e 49 8b 49 08 49 63 d4 4d 85 c0 49 63 ff 48 8b 14 d1 <48> 8b 72 30 41 8d 14 37 41 89 56 04 48 63 d3 0f 84 ce 00 00 00
    [12665.304713] RIP: ohci_queue_iso+0x47c/0x800 [firewire_ohci] RSP: ffffb5b8823d3ab8
    [12665.304743] CR2: 0000000000000030
    [12665.317701] ---[ end trace 9d55b056dd52a19f ]---
    
    Fixes: f91c9d7610a ('ALSA: firewire-lib: cache maximum length of payload to reduce function calls')
    Cc: <stable@vger.kernel.org> # v4.12+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfe7f043bcfccc02362958273cec0dacd1343244
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Apr 26 09:17:45 2018 +0200

    ALSA: seq: Fix races at MIDI encoding in snd_virmidi_output_trigger()
    
    commit 8f22e52528cc372b218b5f100457469615c733ce upstream.
    
    The sequencer virmidi code has an open race at its output trigger
    callback: namely, virmidi keeps only one event packet for processing
    while it doesn't protect for concurrent output trigger calls.
    
    snd_virmidi_output_trigger() tries to process the previously
    unfinished event before starting encoding the given MIDI stream, but
    this is done without any lock.  Meanwhile, if another rawmidi stream
    starts the output trigger, this proceeds further, and overwrites the
    event package that is being processed in another thread.  This
    eventually corrupts and may lead to the invalid memory access if the
    event type is like SYSEX.
    
    The fix is just to move the spinlock to cover both the pending event
    and the new stream.
    
    The bug was spotted by a new fuzzer, RaceFuzzer.
    
    BugLink: http://lkml.kernel.org/r/20180426045223.GA15307@dragonet.kaist.ac.kr
    Reported-by: DaeRyong Jeong <threeearcat@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5e9a770cec20bb51a8024fbaa890e5d0bcbb521
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed May 2 08:48:46 2018 +0200

    ALSA: pcm: Check PCM state at xfern compat ioctl
    
    commit f13876e2c33a657a71bcbb10f767c0951b165020 upstream.
    
    Since snd_pcm_ioctl_xfern_compat() has no PCM state check, it may go
    further and hit the sanity check pcm_sanity_check() when the ioctl is
    called right after open.  It may eventually spew a kernel warning, as
    triggered by syzbot, depending on kconfig.
    
    The lack of PCM state check there was just an oversight.  Although
    it's no real crash, the spurious kernel warning is annoying, so let's
    add the proper check.
    
    Reported-by: syzbot+1dac3a4f6bc9c1c675d4@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f6e6d063ac1836b1a012bf886b2c76b4f86d0de
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Apr 27 17:17:35 2018 +0200

    ALSA: hda - Fix incorrect usage of IS_REACHABLE()
    
    commit 6a30abaa40b62aed46ef12ea4c16c48565bdb376 upstream.
    
    The commit c469652bb5e8 ("ALSA: hda - Use IS_REACHABLE() for
    dependency on input") simplified the dependencies with IS_REACHABLE()
    macro, but it broke due to its incorrect usage: it should have been
    IS_REACHABLE(CONFIG_INPUT) instead of IS_REACHABLE(INPUT).
    
    Fixes: c469652bb5e8 ("ALSA: hda - Use IS_REACHABLE() for dependency on input")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1e76c30079d81f09691d61f2a355a8deb9b8fc5
Author: Kristian Evensen <kristian.evensen@gmail.com>
Date:   Thu Feb 1 10:32:32 2018 +0100

    USB: serial: option: Add support for Quectel EP06
    
    commit 71a0483d56e784b1e11f38f10d7e22d265dbe244 upstream.
    
    The Quectel EP06 is a Cat. 6 LTE modem, and the interface mapping is as
    follows:
    
    0: Diag
    1: NMEA
    2: AT
    3: Modem
    
    Interface 4 is QMI and interface 5 is ADB, so they are blacklisted.
    
    This patch should also be considered for -stable. The QMI-patch for this
    modem is already in the -stable-queue.
    
    v1->v2:
    * Updated commit prefix (thanks Johan Hovold)
    * Updated commit message slightly.
    
    Signed-off-by: Kristian Evensen <kristian.evensen@gmail.com>
    Acked-by: Johan Hovold <johan@kernel.org>
    Cc: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8a622ed9e53a8ac56a52d90920c8f991fc99aaf
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Mon Apr 23 11:16:56 2018 +0200

    ACPI / button: make module loadable when booted in non-ACPI mode
    
    commit ac1e55b1fdb27c1b07a0a6fe519f1291ff1e7d40 upstream.
    
    Modules such as nouveau.ko and i915.ko have a link time dependency on
    acpi_lid_open(), and due to its use of acpi_bus_register_driver(),
    the button.ko module that provides it is only loadable when booted in
    ACPI mode. However, the ACPI button driver can be built into the core
    kernel as well, in which case the dependency can always be satisfied,
    and the dependent modules can be loaded regardless of whether the
    system was booted in ACPI mode or not.
    
    So let's fix this asymmetry by making the ACPI button driver loadable
    as a module even if not booted in ACPI mode, so it can provide the
    acpi_lid_open() symbol in the same way as when built into the kernel.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    [ rjw: Minor adjustments of comments, whitespace and names. ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63d9df9eb7a587c528d3fd97054835a7bdc430c1
Author: LEROY Christophe <christophe.leroy@c-s.fr>
Date:   Thu Mar 22 10:57:01 2018 +0100

    crypto: talitos - fix IPsec cipher in length
    
    commit 2b1227301a8e4729409694e323b72c064c47cb6b upstream.
    
    For SEC 2.x+, cipher in length must contain only the ciphertext length.
    In case of using hardware ICV checking, the ICV length is provided via
    the "extent" field of the descriptor pointer.
    
    Cc: <stable@vger.kernel.org> # 4.8+
    Fixes: 549bd8bc5987 ("crypto: talitos - Implement AEAD for SEC1 using HMAC_SNOOP_NO_AFEU")
    Reported-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Tested-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    [backported to 4.9.y, 4.14.y]
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9caf1e1d5d4a74956a358800af20cb5d8cd2eae
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Mar 14 08:27:26 2018 -0700

    percpu: include linux/sched.h for cond_resched()
    
    commit 71546d100422bcc2c543dadeb9328728997cd23a upstream.
    
    microblaze build broke due to missing declaration of the
    cond_resched() invocation added recently.  Let's include linux/sched.h
    explicitly.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: kbuild test robot <fengguang.wu@intel.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a3c946b205fd5bc3be583a1f3adbda11128e7ed
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Thu Jan 25 19:03:03 2018 +0100

    net: don't call update_pmtu unconditionally
    
    commit f15ca723c1ebe6c1a06bc95fda6b62cd87b44559 upstream.
    
    Some dst_ops (e.g. md_dst_ops)) doesn't set this handler. It may result to:
    "BUG: unable to handle kernel NULL pointer dereference at           (null)"
    
    Let's add a helper to check if update_pmtu is available before calling it.
    
    Fixes: 52a589d51f10 ("geneve: update skb dst pmtu on tx path")
    Fixes: a93bf0ff4490 ("vxlan: update skb dst pmtu on tx path")
    CC: Roman Kapl <code@rkapl.cz>
    CC: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Thomas Deutschmann <whissi@gentoo.org>
    Cc: Eddie Chapman <eddie@ehuk.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a928a262c1c1c63c929ebe40c181376afbcfe41
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Dec 25 14:43:58 2017 +0800

    geneve: update skb dst pmtu on tx path
    
    commit 52a589d51f1008f62569bf89e95b26221ee76690 upstream.
    
    Commit a93bf0ff4490 ("vxlan: update skb dst pmtu on tx path") has fixed
    a performance issue caused by the change of lower dev's mtu for vxlan.
    
    The same thing needs to be done for geneve as well.
    
    Note that geneve cannot adjust it's mtu according to lower dev's mtu
    when creating it. The performance is very low later when netperfing
    over it without fixing the mtu manually. This patch could also avoid
    this issue.
    
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Thomas Deutschmann <whissi@gentoo.org>
    Cc: Eddie Chapman <eddie@ehuk.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
