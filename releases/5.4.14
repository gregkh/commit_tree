commit 0fce94b45b53c9fb1657a94f3419a67b61e0344c
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 23 08:23:01 2020 +0100

    Linux 5.4.14

commit b1b105a633ff74a46b4d2061ee4258a912e0faf8
Author: James Smart <jsmart2021@gmail.com>
Date:   Fri Nov 15 16:38:47 2019 -0800

    scsi: lpfc: use hdwq assigned cpu for allocation
    
    [ Upstream commit 4583a4f66b323c6e4d774be2649e83a4e7c7b78c ]
    
    Looking at the recent conversion from smp_processor_id() to
    raw_smp_processor_id(), realized that the allocation should be based on the
    cpu the hdwq is bound to, not the executing cpu.
    
    Revise to pull cpu number from the hdwq
    
    Fixes: 765ab6cdac3b ("scsi: lpfc: Fix a kernel warning triggered by lpfc_get_sgl_per_hdwq()")
    Link: https://lore.kernel.org/r/20191116003847.6141-1-jsmart2021@gmail.com
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c079ad6506b7cb5433e2ebd4ce0a4dc2afd0f9a
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Oct 11 11:21:39 2019 -0700

    perf script: Fix --reltime with --time
    
    [ Upstream commit b3509b6ed7a79ec49f6b64e4f3b780f259a2a468 ]
    
    My earlier patch to just enable --reltime with --time was a little too
    optimistic.  The --time parsing would accept absolute time, which is
    very confusing to the user.
    
    Support relative time in --time parsing too. This only works with recent
    perf record that records the first sample time. Otherwise we error out.
    
    Fixes: 3714437d3fcc ("perf script: Allow --time with --reltime")
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Link: http://lore.kernel.org/lkml/20191011182140.8353-1-andi@firstfloor.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a672beac788294f176a5d9570bde77f3c4b965f
Author: Eddie James <eajames@linux.ibm.com>
Date:   Wed Nov 6 14:01:06 2019 -0600

    hwmon: (pmbus/ibm-cffps) Fix LED blink behavior
    
    commit 92b39ad440968bab38eb6577d63c12994601ed94 upstream.
    
    The LED blink_set function incorrectly did not tell the PSU LED to blink
    if brightness was LED_OFF. Fix this, and also correct the LED_OFF
    command data, which should give control of the LED back to the PSU
    firmware. Also prevent I2C failures from getting the driver LED state
    out of sync and add some dev_dbg statements.
    
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Link: https://lore.kernel.org/r/20191106200106.29519-3-eajames@linux.ibm.com
    Fixes: ef9e1cdf419a3 ("hwmon: (pmbus/cffps) Add led class device for power supply fault led")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6743bc169fbb211063095942c03d6200e22665b
Author: Eddie James <eajames@linux.ibm.com>
Date:   Wed Nov 6 14:01:05 2019 -0600

    hwmon: (pmbus/ibm-cffps) Switch LEDs to blocking brightness call
    
    commit 9861ff954c7e83e2f738ce16fbe15f8a1e121771 upstream.
    
    Since i2c_smbus functions can sleep, the brightness setting function
    for this driver must be the blocking version to avoid scheduling while
    atomic.
    
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Link: https://lore.kernel.org/r/20191106200106.29519-2-eajames@linux.ibm.com
    Fixes: ef9e1cdf419a3 ("hwmon: (pmbus/cffps) Add led class device for power supply fault led")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6299d9ccd3b0662334672a77695470e5e588c11f
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Wed Nov 6 18:31:25 2019 +0100

    regulator: ab8500: Remove SYSCLKREQ from enum ab8505_regulator_id
    
    commit 458ea3ad033fc86e291712ce50cbe60c3428cf30 upstream.
    
    Those regulators are not actually supported by the AB8500 regulator
    driver. There is no ab8500_regulator_info for them and no entry in
    ab8505_regulator_match.
    
    As such, they cannot be registered successfully, and looking them
    up in ab8505_regulator_match causes an out-of-bounds array read.
    
    Fixes: 547f384f33db ("regulator: ab8500: add support for ab8505")
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20191106173125.14496-2-stephan@gerhold.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aec2290eee890dc6677c4a07cffd4cc226030d32
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Fri Oct 11 17:09:00 2019 +0800

    clk: imx7ulp: Correct DDR clock mux options
    
    commit 2e2b928a04bd74ea410da72bd60e1c5b06398276 upstream.
    
    In the latest reference manual Rev.0,06/2019, the DDR clock mux
    is extended to 2 bits, and the clock options are also changed,
    correct them accordingly.
    
    Fixes: b1260067ac3d ("clk: imx: add imx7ulp clk driver")
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ddd66bad79630263eefd147d9cc1541e6576fafa
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Mon Oct 14 08:56:05 2019 +0800

    clk: imx7ulp: Correct system clock source option #7
    
    commit 96ac93a7c4bea4eb4186425795c00937d2dd6085 upstream.
    
    In the latest reference manual Rev.0,06/2019, the SCS's option #7
    is no longer from upll, it is reserved, update clock driver accordingly.
    
    Fixes: b1260067ac3d ("clk: imx: add imx7ulp clk driver")
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fabffed536484f5bdf67c2a1eb39a116c567f06
Author: Baolin Wang <baolin.wang@linaro.org>
Date:   Tue Oct 8 15:41:38 2019 +0800

    clk: sprd: Use IS_ERR() to validate the return value of syscon_regmap_lookup_by_phandle()
    
    commit 9629dbdabd1983ef53f125336e1d62d77b1620f9 upstream.
    
    The syscon_regmap_lookup_by_phandle() will never return NULL, thus use
    IS_ERR() to validate the return value instead of IS_ERR_OR_NULL().
    
    Fixes: d41f59fd92f2 ("clk: sprd: Add common infrastructure")
    Signed-off-by: Baolin Wang <baolin.wang@linaro.org>
    Link: https://lkml.kernel.org/r/1995139bee5248ff3e9d46dc715968f212cfc4cc.1570520268.git.baolin.wang@linaro.org
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 483cb2b2057050ff6f4d62027589144b2a7cd2e8
Author: Andi Kleen <ak@linux.intel.com>
Date:   Wed Oct 2 09:46:42 2019 -0700

    perf script: Allow --time with --reltime
    
    commit 3714437d3fcc7956cabcb0077f2a506b61160a56 upstream.
    
    The original --reltime patch forbid --time with --reltime.
    
    But it turns out --time doesn't really care about --reltime, because the
    relative time is only used at final output, while the time filtering
    always works earlier on absolute time.
    
    So just remove the check and allow combining the two options.
    
    Fixes: 90b10f47c0ee ("perf script: Support relative time")
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Link: http://lore.kernel.org/lkml/20191002164642.1719-1-andi@firstfloor.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a26701c6c93e6c3d16b7c4f081184360965db91f
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Fri Oct 25 17:46:25 2019 +0900

    perf probe: Fix wrong address verification
    
    commit 07d369857808b7e8e471bbbbb0074a6718f89b31 upstream.
    
    Since there are some DIE which has only ranges instead of the
    combination of entrypc/highpc, address verification must use
    dwarf_haspc() instead of dwarf_entrypc/dwarf_highpc.
    
    Also, the ranges only DIE will have a partial code in different section
    (e.g. unlikely code will be in text.unlikely as "FUNC.cold" symbol). In
    that case, we can not use dwarf_entrypc() or die_entrypc(), because the
    offset from original DIE can be a minus value.
    
    Instead, this simply gets the symbol and offset from symtab.
    
    Without this patch;
    
      # perf probe -D clear_tasks_mm_cpumask:1
      Failed to get entry address of clear_tasks_mm_cpumask
        Error: Failed to add events.
    
    And with this patch:
    
      # perf probe -D clear_tasks_mm_cpumask:1
      p:probe/clear_tasks_mm_cpumask clear_tasks_mm_cpumask+0
      p:probe/clear_tasks_mm_cpumask_1 clear_tasks_mm_cpumask+5
      p:probe/clear_tasks_mm_cpumask_2 clear_tasks_mm_cpumask+8
      p:probe/clear_tasks_mm_cpumask_3 clear_tasks_mm_cpumask+16
      p:probe/clear_tasks_mm_cpumask_4 clear_tasks_mm_cpumask+82
    
    Committer testing:
    
    I managed to reproduce the above:
    
      [root@quaco ~]# perf probe -D clear_tasks_mm_cpumask:1
      p:probe/clear_tasks_mm_cpumask _text+919968
      p:probe/clear_tasks_mm_cpumask_1 _text+919973
      p:probe/clear_tasks_mm_cpumask_2 _text+919976
      [root@quaco ~]#
    
    But then when trying to actually put the probe in place, it fails if I
    use :0 as the offset:
    
      [root@quaco ~]# perf probe -L clear_tasks_mm_cpumask | head -5
      <clear_tasks_mm_cpumask@/usr/src/debug/kernel-5.2.fc30/linux-5.2.18-200.fc30.x86_64/kernel/cpu.c:0>
            0  void clear_tasks_mm_cpumask(int cpu)
            1  {
            2       struct task_struct *p;
    
      [root@quaco ~]# perf probe clear_tasks_mm_cpumask:0
      Probe point 'clear_tasks_mm_cpumask' not found.
        Error: Failed to add events.
      [root@quaco
    
    The next patch is needed to fix this case.
    
    Fixes: 576b523721b7 ("perf probe: Fix probing symbols with optimization suffix")
    Reported-by: Arnaldo Carvalho de Melo <acme@kernel.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/157199318513.8075.10463906803299647907.stgit@devnote2
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fd06c287fb1064dbec7b13588dfaa4b1e899787
Author: Tzu-En Huang <tehuang@realtek.com>
Date:   Fri Oct 25 17:33:44 2019 +0800

    rtw88: fix potential read outside array boundary
    
    commit 18a0696e85fde169e0109aa61d0505b2b935b59d upstream.
    
    The level of cckpd is from 0 to 4, and it is the index of
    array pd_lvl[] and cs_lvl[]. However, the length of both arrays
    are 4, which is smaller than the possible maximum input index.
    Enumerate cck level to make sure the max level will not be wrong
    if new level is added in future.
    
    Fixes: 479c4ee931a6 ("rtw88: add dynamic cck pd mechanism")
    Signed-off-by: Tzu-En Huang <tehuang@realtek.com>
    Signed-off-by: Yan-Hsuan Chuang <yhchuang@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ec3e3ba477334005d041c09861873e43a5f59bf
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Nov 6 21:21:54 2019 -0800

    scsi: lpfc: Fix a kernel warning triggered by lpfc_get_sgl_per_hdwq()
    
    commit 765ab6cdac3b681952da0e22184bf6cf1ae41cf8 upstream.
    
    Fix the following kernel bug report:
    
    BUG: using smp_processor_id() in preemptible [00000000] code: systemd-udevd/954
    
    Fixes: d79c9e9d4b3d ("scsi: lpfc: Support dynamic unbounded SGL lists on G7 hardware.")
    Link: https://lore.kernel.org/r/20191107052158.25788-2-bvanassche@acm.org
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: James Smart <james.smart@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51a2104cc423abdc7e897d7e58d7a11bc17ff7b3
Author: James Smart <jsmart2021@gmail.com>
Date:   Sat Sep 21 20:59:01 2019 -0700

    scsi: lpfc: Fix hdwq sgl locks and irq handling
    
    commit a4c21acca2be6729ecbe72eda9b08092725b0a77 upstream.
    
    Many of the sgl-per-hdwq paths are locking with spin_lock_irq() and
    spin_unlock_irq() and may unwittingly raising irq when it shouldn't. Hard
    deadlocks were seen around lpfc_scsi_prep_cmnd().
    
    Fix by converting the locks to irqsave/irqrestore.
    
    Fixes: d79c9e9d4b3d ("scsi: lpfc: Support dynamic unbounded SGL lists on G7 hardware.")
    Link: https://lore.kernel.org/r/20190922035906.10977-16-jsmart2021@gmail.com
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 287a465e1204f5d2ae26dbb9c9a215e441d832fb
Author: James Smart <jsmart2021@gmail.com>
Date:   Sat Sep 21 20:59:02 2019 -0700

    scsi: lpfc: Fix list corruption detected in lpfc_put_sgl_per_hdwq
    
    commit 35a635af54ce79881eb35ba20b64dcb1e81b0389 upstream.
    
    In lpfc_release_io_buf, an lpfc_io_buf is returned to the 'available' pool
    before any associated sgl or cmd and rsp buffers are returned via their
    respective 'put' routines.  If xri rebalancing occurs and an lpfc_io_buf
    structure is reused quickly, there may be a race condition between release
    of old and association of new resources.
    
    Re-ordered lpfc_release_io_buf to release sgl and cmd/rsp
    buffer lists before releasing the lpfc_io_buf structure for re-use.
    
    Fixes: d79c9e9d4b3d ("scsi: lpfc: Support dynamic unbounded SGL lists on G7 hardware.")
    Link: https://lore.kernel.org/r/20190922035906.10977-17-jsmart2021@gmail.com
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 240333d7b1bff70eac5e23ea8761fb84d2f07a28
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Nov 1 14:14:47 2019 -0700

    scsi: core: scsi_trace: Use get_unaligned_be*()
    
    commit b1335f5b0486f61fb66b123b40f8e7a98e49605d upstream.
    
    This patch fixes an unintended sign extension on left shifts. From Colin
    King: "Shifting a u8 left will cause the value to be promoted to an
    integer. If the top bit of the u8 is set then the following conversion to
    an u64 will sign extend the value causing the upper 32 bits to be set in
    the result."
    
    Fix this by using get_unaligned_be*() instead.
    
    Fixes: bf8162354233 ("[SCSI] add scsi trace core functions and put trace points")
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Hannes Reinecke <hare@suse.com>
    Cc: Douglas Gilbert <dgilbert@interlog.com>
    Link: https://lore.kernel.org/r/20191101211447.187151-1-bvanassche@acm.org
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6acefee17a02b187bcf916e061062ae7b4b123d9
Author: Martin Wilck <mwilck@suse.com>
Date:   Fri Nov 22 22:19:22 2019 +0000

    scsi: qla2xxx: fix rports not being mark as lost in sync fabric scan
    
    commit d341e9a8f2cffe4000c610225c629f62c7489c74 upstream.
    
    In qla2x00_find_all_fabric_devs(), fcport->flags & FCF_LOGIN_NEEDED is a
    necessary condition for logging into new rports, but not for dropping lost
    ones.
    
    Fixes: 726b85487067 ("qla2xxx: Add framework for async fabric discovery")
    Link: https://lore.kernel.org/r/20191122221912.20100-2-martin.wilck@suse.com
    Tested-by: David Bond <dbond@suse.com>
    Signed-off-by: Martin Wilck <mwilck@suse.com>
    Acked-by: Himanshu Madhani <hmadhani@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdad4314310e63157871544fac2baed0b6672636
Author: Huacai Chen <chenhc@lemote.com>
Date:   Thu Nov 21 13:40:47 2019 +0800

    scsi: qla2xxx: Fix qla2x00_request_irqs() for MSI
    
    commit 45dc8f2d9c94ed74a5e31e63e9136a19a7e16081 upstream.
    
    Commit 4fa183455988 ("scsi: qla2xxx: Utilize pci_alloc_irq_vectors/
    pci_free_irq_vectors calls.") use pci_alloc_irq_vectors() to replace
    pci_enable_msi() but it didn't handle the return value correctly. This bug
    make qla2x00 always fail to setup MSI if MSI-X fail, so fix it.
    
    BTW, improve the log message of return value in qla2x00_request_irqs() to
    avoid confusion.
    
    Fixes: 4fa183455988 ("scsi: qla2xxx: Utilize pci_alloc_irq_vectors/pci_free_irq_vectors calls.")
    Cc: Michael Hernandez <michael.hernandez@cavium.com>
    Link: https://lore.kernel.org/r/1574314847-14280-1-git-send-email-chenhc@lemote.com
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Acked-by: Himanshu Madhani <hmadhani@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c98dc7e9a0f838889562d41dcc44bb36bb45e66a
Author: John Garry <john.garry@huawei.com>
Date:   Wed Nov 20 17:39:15 2019 +0800

    scsi: scsi_transport_sas: Fix memory leak when removing devices
    
    commit 82ea3e0e129e2ab913dd6684bab7a6e5e9896dee upstream.
    
    Removing a non-host rphy causes a memory leak:
    
    root@(none)$ echo 0 > /sys/devices/platform/HISI0162:01/host0/port-0:0/expander-0:0/port-0:0:10/phy-0:0:10/sas_phy/phy-0:0:10/enable
    [   79.857888] hisi_sas_v2_hw HISI0162:01: dev[7:1] is gone
    root@(none)$ echo scan > /sys/kernel/debug/kmemleak
    [  131.656603] kmemleak: 3 new suspected memory leaks (see /sys/kernel/debug/kmemleak)
    root@(none)$ more /sys/kernel/debug/kmemleak
    unreferenced object 0xffff041da5c66000 (size 256):
      comm "kworker/u128:1", pid 549, jiffies 4294898543 (age 113.728s)
      hex dump (first 32 bytes):
        00 5e c6 a5 1d 04 ff ff 01 00 00 00 00 00 00 00  .^..............
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<(____ptrval____)>] kmem_cache_alloc+0x188/0x260
        [<(____ptrval____)>] bsg_setup_queue+0x48/0x1a8
        [<(____ptrval____)>] sas_rphy_add+0x108/0x2d0
        [<(____ptrval____)>] sas_probe_devices+0x168/0x208
        [<(____ptrval____)>] sas_discover_domain+0x660/0x9c8
        [<(____ptrval____)>] process_one_work+0x3f8/0x690
        [<(____ptrval____)>] worker_thread+0x70/0x6a0
        [<(____ptrval____)>] kthread+0x1b8/0x1c0
        [<(____ptrval____)>] ret_from_fork+0x10/0x18
    unreferenced object 0xffff041d8c075400 (size 128):
      comm "kworker/u128:1", pid 549, jiffies 4294898543 (age 113.728s)
      hex dump (first 32 bytes):
        00 40 25 97 1d 00 ff ff 00 00 00 00 00 00 00 00  .@%.............
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<(____ptrval____)>] __kmalloc_node+0x1a8/0x2c8
        [<(____ptrval____)>] blk_mq_realloc_tag_set_tags.part.70+0x48/0xd8
        [<(____ptrval____)>] blk_mq_alloc_tag_set+0x1dc/0x530
        [<(____ptrval____)>] bsg_setup_queue+0xe8/0x1a8
        [<(____ptrval____)>] sas_rphy_add+0x108/0x2d0
        [<(____ptrval____)>] sas_probe_devices+0x168/0x208
        [<(____ptrval____)>] sas_discover_domain+0x660/0x9c8
        [<(____ptrval____)>] process_one_work+0x3f8/0x690
        [<(____ptrval____)>] worker_thread+0x70/0x6a0
        [<(____ptrval____)>] kthread+0x1b8/0x1c0
        [<(____ptrval____)>] ret_from_fork+0x10/0x18
    unreferenced object 0xffff041da5c65e00 (size 256):
      comm "kworker/u128:1", pid 549, jiffies 4294898543 (age 113.728s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<(____ptrval____)>] __kmalloc_node+0x1a8/0x2c8
        [<(____ptrval____)>] blk_mq_alloc_tag_set+0x254/0x530
        [<(____ptrval____)>] bsg_setup_queue+0xe8/0x1a8
        [<(____ptrval____)>] sas_rphy_add+0x108/0x2d0
        [<(____ptrval____)>] sas_probe_devices+0x168/0x208
        [<(____ptrval____)>] sas_discover_domain+0x660/0x9c8
        [<(____ptrval____)>] process_one_work+0x3f8/0x690
        [<(____ptrval____)>] worker_thread+0x70/0x6a0
        [<(____ptrval____)>] kthread+0x1b8/0x1c0
        [<(____ptrval____)>] ret_from_fork+0x10/0x18
    root@(none)$
    
    It turns out that we don't clean up the request queue fully for bsg
    devices, as the blk mq tags for the request queue are not freed.
    
    Fix by doing the queue removal in one place - in sas_rphy_remove() -
    instead of unregistering the queue in sas_rphy_remove() and finally
    cleaning up the queue in calling blk_cleanup_queue() from
    sas_end_device_release() or sas_expander_release().
    
    Function bsg_remove_queue() can handle a NULL pointer q, so remove the
    precheck in sas_rphy_remove().
    
    Fixes: 651a013649943 ("scsi: scsi_transport_sas: switch to bsg-lib for SMP passthrough")
    Link: https://lore.kernel.org/r/1574242755-94156-1-git-send-email-john.garry@huawei.com
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83d2e42a2da33534a62131a3bcb38b1f4505d1d0
Author: Xiang Chen <chenxiang66@hisilicon.com>
Date:   Tue Nov 12 17:30:57 2019 +0800

    scsi: hisi_sas: Return directly if init hardware failed
    
    commit 547fde8b5a1923050f388caae4f76613b5a620e0 upstream.
    
    Need to return directly if init hardware failed.
    
    Fixes: 73a4925d154c ("scsi: hisi_sas: Update all the registers after suspend and resume")
    Link: https://lore.kernel.org/r/1573551059-107873-3-git-send-email-john.garry@huawei.com
    Signed-off-by: Xiang Chen <chenxiang66@hisilicon.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9866d5ed24f87dfc4a17bb4420d88e147644949
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Nov 11 15:03:56 2019 -0800

    scsi: lpfc: fix: Coverity: lpfc_get_scsi_buf_s3(): Null pointer dereferences
    
    commit 6f23f8c5c9f1be4eb17c035129c80e49000c18a7 upstream.
    
    Coverity reported the following:

commit 005d3275768a44f6559ef28b0d50fe3326d31dfe
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Nov 7 13:55:25 2019 -0800

    scsi: target: core: Fix a pr_debug() argument
    
    commit c941e0d172605731de9b4628bd4146d35cf2e7d6 upstream.
    
    Print the string for which conversion failed instead of printing the
    function name twice.
    
    Fixes: 2650d71e244f ("target: move transport ID handling to the core")
    Cc: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/20191107215525.64415-1-bvanassche@acm.org
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be4e660bcade06e33a198e6be10d9c03305a663b
Author: Pan Bian <bianpan2016@163.com>
Date:   Wed Nov 6 20:32:21 2019 +0800

    scsi: bnx2i: fix potential use after free
    
    commit 29d28f2b8d3736ac61c28ef7e20fda63795b74d9 upstream.
    
    The member hba->pcidev may be used after its reference is dropped. Move the
    put function to where it is never used to avoid potential use after free
    issues.
    
    Fixes: a77171806515 ("[SCSI] bnx2i: Removed the reference to the netdev->base_addr")
    Link: https://lore.kernel.org/r/1573043541-19126-1-git-send-email-bianpan2016@163.com
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43c5bca0c4b3cf921836a4da78a5d6aea30d4e7e
Author: Pan Bian <bianpan2016@163.com>
Date:   Tue Nov 5 17:25:27 2019 +0800

    scsi: qla4xxx: fix double free bug
    
    commit 3fe3d2428b62822b7b030577cd612790bdd8c941 upstream.
    
    The variable init_fw_cb is released twice, resulting in a double free
    bug. The call to the function dma_free_coherent() before goto is removed to
    get rid of potential double free.
    
    Fixes: 2a49a78ed3c8 ("[SCSI] qla4xxx: added IPv6 support.")
    Link: https://lore.kernel.org/r/1572945927-27796-1-git-send-email-bianpan2016@163.com
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Acked-by: Manish Rangankar <mrangankar@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1331942cbc5ec98224377a622521b5642b219a4e
Author: Xiang Chen <chenxiang66@hisilicon.com>
Date:   Thu Oct 24 22:08:09 2019 +0800

    scsi: hisi_sas: Set the BIST init value before enabling BIST
    
    commit 65a3b8bd56942dc988b8c05615bd3f510a10012b upstream.
    
    If set the BIST init value after enabling BIST, there may be still some few
    error bits. According to the process, need to set the BIST init value
    before enabling BIST.
    
    Fixes: 97b151e75861 ("scsi: hisi_sas: Add BIST support for phy loopback")
    Link: https://lore.kernel.org/r/1571926105-74636-3-git-send-email-john.garry@huawei.com
    Signed-off-by: Xiang Chen <chenxiang66@hisilicon.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1397d34930ff0dd9e1eb1cf92edd92ceb576d534
Author: Xiang Chen <chenxiang66@hisilicon.com>
Date:   Thu Oct 24 22:08:08 2019 +0800

    scsi: hisi_sas: Don't create debugfs dump folder twice
    
    commit 35160421b63d4753a72e9f72ebcdd9d6f88f84b9 upstream.
    
    Due to a merge error, we attempt to create 2x debugfs dump folders, which
    fails:
    [  861.101914] debugfs: Directory 'dump' with parent '0000:74:02.0'
    already present!
    
    This breaks the dump function.
    
    To fix, remove the superfluous attempt to create the folder.
    
    Fixes: 7ec7082c57ec ("scsi: hisi_sas: Add hisi_sas_debugfs_alloc() to centralise allocation")
    Link: https://lore.kernel.org/r/1571926105-74636-2-git-send-email-john.garry@huawei.com
    Signed-off-by: Xiang Chen <chenxiang66@hisilicon.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37a15afafb10544efbbb54a7eb020064a2264193
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Oct 22 13:23:24 2019 +0300

    scsi: esas2r: unlock on error in esas2r_nvram_read_direct()
    
    commit 906ca6353ac09696c1bf0892513c8edffff5e0a6 upstream.
    
    This error path is missing an unlock.
    
    Fixes: 26780d9e12ed ("[SCSI] esas2r: ATTO Technology ExpressSAS 6G SAS/SATA RAID Adapter Driver")
    Link: https://lore.kernel.org/r/20191022102324.GA27540@mwanda
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5090afc7d1a8bb8021d31e9fc51be80cbc43ed8e
Author: Jeff Mahoney <jeffm@suse.com>
Date:   Wed Jan 15 13:00:59 2020 -0500

    reiserfs: fix handling of -EOPNOTSUPP in reiserfs_for_each_xattr
    
    commit 394440d469413fa9b74f88a11f144d76017221f2 upstream.
    
    Commit 60e4cf67a58 (reiserfs: fix extended attributes on the root
    directory) introduced a regression open_xa_root started returning
    -EOPNOTSUPP but it was not handled properly in reiserfs_for_each_xattr.
    
    When the reiserfs module is built without CONFIG_REISERFS_FS_XATTR,
    deleting an inode would result in a warning and chowning an inode
    would also result in a warning and then fail to complete.
    
    With CONFIG_REISERFS_FS_XATTR enabled, the xattr root would always be
    present for read-write operations.
    
    This commit handles -EOPNOSUPP in the same way -ENODATA is handled.
    
    Fixes: 60e4cf67a582 ("reiserfs: fix extended attributes on the root directory")
    CC: stable@vger.kernel.org      # Commit 60e4cf67a58 was picked up by stable
    Link: https://lore.kernel.org/r/20200115180059.6935-1-jeffm@suse.com
    Reported-by: Michael Brunnbauer <brunni@netestate.de>
    Signed-off-by: Jeff Mahoney <jeffm@suse.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8cdfd9bc1ef3f9d885b8f145b864c009a95e5f3
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Oct 8 17:43:21 2019 +0200

    um: virtio_uml: Disallow modular build
    
    commit bf9f80cf0ccab5f346f7d3cdc445da8fcfe6ce34 upstream.
    
    This driver *can* be a module, but then its parameters (socket path)
    are untrusted data from inside the VM, and that isn't allowed. Allow
    the code to only be built-in to avoid that.
    
    Fixes: 5d38f324993f ("um: drivers: Add virtio vhost-user driver")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Acked-by: Anton Ivanov <anton.ivanov@cambridgegreys.co.uk>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0efee942c6bc09ebeb152402ec2f60989dce2803
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Sep 17 13:20:14 2019 +0200

    um: Don't trace irqflags during shutdown
    
    commit 5c1f33e2a03c0b8710b5d910a46f1e1fb0607679 upstream.
    
    In the main() code, we eventually enable signals just before
    exec() or exit(), in order to to not have signals pending and
    delivered *after* the exec().
    
    I've observed SIGSEGV loops at this point, and the reason seems
    to be the irqflags tracing; this makes sense as the kernel is
    no longer really functional at this point. Since there's really
    no reason to use unblock_signals_trace() here (I had just done
    a global search & replace), use the plain unblock_signals() in
    this case to avoid going into the no longer functional kernel.
    
    Fixes: 0dafcbe128d2 ("um: Implement TRACE_IRQFLAGS_SUPPORT")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a05d8ba219dc4246fba4fbcabc90fd82e306f86
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Thu Oct 31 23:39:39 2019 +0300

    mtd: cfi_cmdset_0002: fix delayed error detection on HyperFlash
    
    commit c15995695ea971253ea9507f6732c8cd35384e01 upstream.
    
    The commit 4844ef80305d ("mtd: cfi_cmdset_0002: Add support for polling
    status register") added checking for the status register error bits into
    chip_good() to only return 1 if these bits are 0s.  Unfortunately, this
    means that polling using chip_good() always reaches a timeout condition
    when erase or program failure bits are set. Let's fully delegate the task
    of determining the error conditions to cfi_check_err_status() and make
    chip_good() only look for the Device Ready/Busy condition.
    
    Fixes: 4844ef80305d ("mtd: cfi_cmdset_0002: Add support for polling status register")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1883f6047d8cf7907e8fd8558e5dcb92f6d5db5d
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Thu Oct 31 23:37:27 2019 +0300

    mtd: cfi_cmdset_0002: only check errors when ready in cfi_check_err_status()
    
    commit 72914a8cff7e1d910c58e125e15a0da409e3135f upstream.
    
    Cypress S26K{L|S}P{128|256|512}S datasheet says that the error bits in
    the status register are only valid when the "device ready" bit 7 is set.
    Add the check for the device ready bit in cfi_check_err_status() as that
    function isn't always called with this bit set.
    
    Fixes: 4844ef80305d ("mtd: cfi_cmdset_0002: Add support for polling status register")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acc5e1a86abaf6483db48ac6e8a225ca018df11c
Author: Angelo Dureghello <angelo.dureghello@timesys.com>
Date:   Wed Oct 30 12:39:57 2019 +0100

    mtd: devices: fix mchp23k256 read and write
    
    commit 14f89e088155314d311e4d4dd9f2b4ccaeef92b2 upstream.
    
    Due to the use of sizeof(), command size set for the spi transfer
    was wrong. Driver was sending and receiving always 1 byte less
    and especially on write, it was hanging.
    
    echo -n -e "\\x1\\x2\\x3\\x4" > /dev/mtd1
    
    And read part too now works as expected.
    
    hexdump -C -n16 /dev/mtd1
    00000000  01 02 03 04 ab f3 ad c2  ab e3 f4 36 dd 38 04 15
    00000010
    
    Fixes: 4379075a870b ("mtd: mchp23k256: Add support for mchp23lcv1024")
    Signed-off-by: Angelo Dureghello <angelo.dureghello@timesys.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 835d761721807737f31a77596a0a28c4a4d84935
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Thu Nov 28 15:33:57 2019 +0000

    Revert "arm64: dts: juno: add dma-ranges property"
    
    commit 54fb3fe0f211d4729a2551cf9497bd612189af9d upstream.
    
    This reverts commit 193d00a2b35ee3353813b4006a18131122087205.
    
    Commit 951d48855d86 ("of: Make of_dma_get_range() work on bus nodes")
    reworked the logic such that of_dma_get_range() works correctly
    starting from a bus node containing "dma-ranges".
    
    Since on Juno we don't have a SoC level bus node and "dma-ranges" is
    present only in the root node, we get the following error:
    
    OF: translation of DMA address(0) to CPU address failed node(/sram@2e000000)
    OF: translation of DMA address(0) to CPU address failed node(/uart@7ff80000)
    ...
    OF: translation of DMA address(0) to CPU address failed node(/mhu@2b1f0000)
    OF: translation of DMA address(0) to CPU address failed node(/iommu@2b600000)
    OF: translation of DMA address(0) to CPU address failed node(/iommu@2b600000)
    OF: translation of DMA address(0) to CPU address failed node(/iommu@2b600000)
    
    So let's fix it by dropping the "dma-ranges" property for now. This
    should be fine since it doesn't represent any kind of device-visible
    restriction; it was only there for completeness, and we've since given
    in to the assumption that missing "dma-ranges" implies a 1:1 mapping
    anyway.
    
    We can add it later with a proper SoC bus node and moving all the
    devices that belong there along with the "dma-ranges" if required.
    
    Fixes: 193d00a2b35e ("arm64: dts: juno: add dma-ranges property")
    Cc: Rob Herring <robh+dt@kernel.org>
    Cc: Liviu Dudau <liviu.dudau@arm.com>
    Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Acked-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16023afe579123d506cf316a196ec5736c096855
Author: Tony Lindgren <tony@atomide.com>
Date:   Sun Nov 24 09:43:16 2019 -0800

    ARM: dts: Fix sgx sysconfig register for omap4
    
    commit 3e5c3c41ae925458150273e2f74ffbf999530c5f upstream.
    
    Looks like we've had the sgx sysconfig register and revision register
    always wrong for omap4, including the old platform data. Let's fix the
    offsets to what the TRM says. Otherwise the sgx module may never idle
    depending on the state of the real sysconfig register.
    
    Fixes: d23a163ebe5a ("ARM: dts: Add nodes for missing omap4 interconnect target modules")
    Cc: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: Merlijn Wajer <merlijn@wizzup.org>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Sebastian Reichel <sre@kernel.org>
    Cc: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 893c9f9c75b7611a8165ba8fe4a19468fab5cc33
Author: Andre Przywara <andre.przywara@arm.com>
Date:   Tue Nov 19 12:03:31 2019 +0000

    arm64: dts: juno: Fix UART frequency
    
    commit 39a1a8941b27c37f79508426e27a2ec29829d66c upstream.
    
    Older versions of the Juno *SoC* TRM [1] recommended that the UART clock
    source should be 7.2738 MHz, whereas the *system* TRM [2] stated a more
    correct value of 7.3728 MHz. Somehow the wrong value managed to end up in
    our DT.
    
    Doing a prime factorisation, a modulo divide by 115200 and trying
    to buy a 7.2738 MHz crystal at your favourite electronics dealer suggest
    that the old value was actually a typo. The actual UART clock is driven
    by a PLL, configured via a parameter in some board.txt file in the
    firmware, which reads 7.37 MHz (sic!).
    
    Fix this to correct the baud rate divisor calculation on the Juno board.
    
    [1] http://infocenter.arm.com/help/topic/com.arm.doc.ddi0515b.b/DDI0515B_b_juno_arm_development_platform_soc_trm.pdf
    [2] http://infocenter.arm.com/help/topic/com.arm.doc.100113_0000_07_en/arm_versatile_express_juno_development_platform_(v2m_juno)_technical_reference_manual_100113_0000_07_en.pdf
    
    Fixes: 71f867ec130e ("arm64: Add Juno board device tree.")
    Signed-off-by: Andre Przywara <andre.przywara@arm.com>
    Acked-by: Liviu Dudau <liviu.dudau@arm.com>
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ee117bbce081838189ee30ef4cc94ab30ad0efa
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Mon Nov 18 14:20:16 2019 +0200

    ARM: dts: dra7: fix cpsw mdio fck clock
    
    commit 6af0a549c25e0d02366aa95507bfe3cad2f7b68b upstream.
    
    The DRA7 CPSW MDIO functional clock (gmac_clkctrl DRA7_GMAC_GMAC_CLKCTRL 0)
    is specified incorrectly, which is caused incorrect MDIO bus clock
    configuration MDCLK. The correct CPSW MDIO functional clock is
    gmac_main_clk (125MHz), which is the same as CPSW fck. Hence fix it.
    
    Fixes: 1faa415c9c6e ("ARM: dts: Add fck for cpsw mdio for omap variants")
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51cca512d035d04162e4bfc316591ad57ceefd1d
Author: Andre Przywara <andre.przywara@arm.com>
Date:   Tue Nov 5 11:06:51 2019 +0000

    arm64: dts: allwinner: a64: Re-add PMU node
    
    commit 6b832a148717f1718f57805a9a4aa7f092582d15 upstream.
    
    As it was found recently, the Performance Monitoring Unit (PMU) on the
    Allwinner A64 SoC was not generating (the right) interrupts. With the
    SPI numbers from the manual the kernel did not receive any overflow
    interrupts, so perf was not happy at all.
    It turns out that the numbers were just off by 4, so the PMU interrupts
    are from 148 to 151, not from 152 to 155 as the manual describes.
    
    This was found by playing around with U-Boot, which typically does not
    use interrupts, so the GIC is fully available for experimentation:
    With *every* PPI and SPI enabled, an overflowing PMU cycle counter was
    found to set a bit in one of the GICD_ISPENDR registers, with careful
    counting this was determined to be number 148.
    
    Tested with perf record and perf top on a Pine64-LTS. Also tested with
    tasksetting to every core to confirm the assignment between IRQs and
    cores.
    
    This somewhat "revert-fixes" commit ed3e9406bcbc ("arm64: dts: allwinner:
    a64: Drop PMU node").
    
    Fixes: 34a97fcc71c2 ("arm64: dts: allwinner: a64: Add PMU node")
    Fixes: ed3e9406bcbc ("arm64: dts: allwinner: a64: Drop PMU node")
    Signed-off-by: Andre Przywara <andre.przywara@arm.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7045f88f5f639b8ce9bb43edfecb24d5c81373fa
Author: Frieder Schrempf <frieder.schrempf@kontron.de>
Date:   Mon Nov 4 11:54:04 2019 +0000

    ARM: dts: imx6ul-kontron-n6310-s: Disable the snvs-poweroff driver
    
    commit 0ccafdf3e81bb40fe415ea13e1f42b19c585f0a0 upstream.
    
    The snvs-poweroff driver can power off the system by pulling the
    PMIC_ON_REQ signal low, to let the PMIC disable the power.
    The Kontron SoMs do not have this signal connected, so let's remove
    the node.
    
    This fixes a real issue when the signal is asserted at poweroff,
    but not actually causing the power to turn off. It was observed,
    that in this case the system would not shut down properly.
    
    Signed-off-by: Frieder Schrempf <frieder.schrempf@kontron.de>
    Fixes: 1ea4b76cdfde ("ARM: dts: imx6ul-kontron-n6310: Add Kontron i.MX6UL N6310 SoM and boards")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb65b57e94b78053e62ad0a2054a36d5b42e9851
Author: Rob Clark <robdclark@chromium.org>
Date:   Fri Oct 25 14:21:06 2019 -0700

    arm64: dts: qcom: sdm845-cheza: delete zap-shader
    
    commit 43b0a4b482478aa4fe7240230be74a79dee95679 upstream.
    
    This is unused on cheza.  Delete the node to get ride of the reserved-
    memory section, and to avoid the driver from attempting to load a zap
    shader that doesn't exist every time it powers up the GPU.
    
    This also avoids a massive amount of dmesg spam about missing zap fw:
      msm ae00000.mdss: [drm:adreno_request_fw] *ERROR* failed to load
    qcom/a630_zap.mdt: -2
      adreno 5000000.gpu: [drm:adreno_zap_shader_load] *ERROR* Unable to
    load a630_zap.mdt
    
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Cc: Douglas Anderson <dianders@chromium.org>
    Fixes: 3fdeaee951aa ("arm64: dts: sdm845: Add zap shader region for GPU")
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Tested-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Andy Gross <agross@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ccb2d7a76ed4f6fb8270a7bb611e697795b78bc
Author: S.j. Wang <shengjiu.wang@nxp.com>
Date:   Wed Oct 16 10:36:05 2019 +0000

    arm64: dts: imx8mm-evk: Assigned clocks for audio plls
    
    commit e8b395b23643ca26e62a3081130d895e198c6154 upstream.
    
    Assign clocks and clock-rates for audio plls, that audio
    drivers can utilize them.
    
    Add dai-tdm-slot-num and dai-tdm-slot-width for sound-wm8524,
    that sai driver can generate correct bit clock.
    
    Fixes: 13f3b9fdef6c ("arm64: dts: imx8mm-evk: Enable audio codec wm8524")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Reviewed-by: Daniel Baluta <daniel.baluta@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64b8c5066097ab14a2449e62317af2641af394b6
Author: Biju Das <biju.das@bp.renesas.com>
Date:   Fri Oct 4 15:52:40 2019 +0100

    arm64: dts: renesas: r8a774a1: Remove audio port node
    
    commit a381325812691f57aece60aaee76938ac8fc6619 upstream.
    
    This patch removes audio port node from SoC device tree and
    fixes the below dtb warning
    
        Warning (unit_address_vs_reg): /soc/sound@ec500000/ports/port@0: node has a unit name, but no reg property
    
    Fixes: e2f04248fcd4 ("arm64: dts: renesas: r8a774a1: Add audio support")
    Signed-off-by: Biju Das <biju.das@bp.renesas.com>
    Link: https://lore.kernel.org/r/1570200761-884-1-git-send-email-biju.das@bp.renesas.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 796ffb070235c0ef38e49b4aebda75e4dcb1668e
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Fri Oct 4 16:27:28 2019 +0200

    arm64: dts: marvell: Fix CP110 NAND controller node multi-line comment alignment
    
    commit 2bc26088ba37d4f2a4b8bd813ee757992522d082 upstream.
    
    Fix this tiny typo before renaming/changing this file.
    
    Fixes: 72a3713fadfd ("arm64: dts: marvell: de-duplicate CP110 description")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2523c2693b63aa62c5144548c890caacfa1ad9ff
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Dec 4 20:56:19 2019 -0800

    tick/sched: Annotate lockless access to last_jiffies_update
    
    commit de95a991bb72e009f47e0c4bbc90fc5f594588d5 upstream.
    
    syzbot (KCSAN) reported a data-race in tick_do_update_jiffies64():
    
    BUG: KCSAN: data-race in tick_do_update_jiffies64 / tick_do_update_jiffies64
    
    write to 0xffffffff8603d008 of 8 bytes by interrupt on cpu 1:
     tick_do_update_jiffies64+0x100/0x250 kernel/time/tick-sched.c:73
     tick_sched_do_timer+0xd4/0xe0 kernel/time/tick-sched.c:138
     tick_sched_timer+0x43/0xe0 kernel/time/tick-sched.c:1292
     __run_hrtimer kernel/time/hrtimer.c:1514 [inline]
     __hrtimer_run_queues+0x274/0x5f0 kernel/time/hrtimer.c:1576
     hrtimer_interrupt+0x22a/0x480 kernel/time/hrtimer.c:1638
     local_apic_timer_interrupt arch/x86/kernel/apic/apic.c:1110 [inline]
     smp_apic_timer_interrupt+0xdc/0x280 arch/x86/kernel/apic/apic.c:1135
     apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:830
     arch_local_irq_restore arch/x86/include/asm/paravirt.h:756 [inline]
     kcsan_setup_watchpoint+0x1d4/0x460 kernel/kcsan/core.c:436
     check_access kernel/kcsan/core.c:466 [inline]
     __tsan_read1 kernel/kcsan/core.c:593 [inline]
     __tsan_read1+0xc2/0x100 kernel/kcsan/core.c:593
     kallsyms_expand_symbol.constprop.0+0x70/0x160 kernel/kallsyms.c:79
     kallsyms_lookup_name+0x7f/0x120 kernel/kallsyms.c:170
     insert_report_filterlist kernel/kcsan/debugfs.c:155 [inline]
     debugfs_write+0x14b/0x2d0 kernel/kcsan/debugfs.c:256
     full_proxy_write+0xbd/0x100 fs/debugfs/file.c:225
     __vfs_write+0x67/0xc0 fs/read_write.c:494
     vfs_write fs/read_write.c:558 [inline]
     vfs_write+0x18a/0x390 fs/read_write.c:542
     ksys_write+0xd5/0x1b0 fs/read_write.c:611
     __do_sys_write fs/read_write.c:623 [inline]
     __se_sys_write fs/read_write.c:620 [inline]
     __x64_sys_write+0x4c/0x60 fs/read_write.c:620
     do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    read to 0xffffffff8603d008 of 8 bytes by task 0 on cpu 0:
     tick_do_update_jiffies64+0x2b/0x250 kernel/time/tick-sched.c:62
     tick_nohz_update_jiffies kernel/time/tick-sched.c:505 [inline]
     tick_nohz_irq_enter kernel/time/tick-sched.c:1257 [inline]
     tick_irq_enter+0x139/0x1c0 kernel/time/tick-sched.c:1274
     irq_enter+0x4f/0x60 kernel/softirq.c:354
     entering_irq arch/x86/include/asm/apic.h:517 [inline]
     entering_ack_irq arch/x86/include/asm/apic.h:523 [inline]
     smp_apic_timer_interrupt+0x55/0x280 arch/x86/kernel/apic/apic.c:1133
     apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:830
     native_safe_halt+0xe/0x10 arch/x86/include/asm/irqflags.h:60
     arch_cpu_idle+0xa/0x10 arch/x86/kernel/process.c:571
     default_idle_call+0x1e/0x40 kernel/sched/idle.c:94
     cpuidle_idle_call kernel/sched/idle.c:154 [inline]
     do_idle+0x1af/0x280 kernel/sched/idle.c:263
     cpu_startup_entry+0x1b/0x20 kernel/sched/idle.c:355
     rest_init+0xec/0xf6 init/main.c:452
     arch_call_rest_init+0x17/0x37
     start_kernel+0x838/0x85e init/main.c:786
     x86_64_start_reservations+0x29/0x2b arch/x86/kernel/head64.c:490
     x86_64_start_kernel+0x72/0x76 arch/x86/kernel/head64.c:471
     secondary_startup_64+0xa4/0xb0 arch/x86/kernel/head_64.S:241
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.4.0-rc7+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Use READ_ONCE() and WRITE_ONCE() to annotate this expected race.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20191205045619.204946-1-edumazet@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d4ad8a20a3f68c9000273e53fab4bb762b43d28
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Jan 13 12:53:59 2020 +0100

    cfg80211: check for set_wiphy_params
    
    commit 24953de0a5e31dcca7e82c8a3c79abc2dfe8fb6e upstream.
    
    Check if set_wiphy_params is assigned and return an error if not,
    some drivers (e.g. virt_wifi where syzbot reported it) don't have
    it.
    
    Reported-by: syzbot+e8a797964a4180eb57d5@syzkaller.appspotmail.com
    Reported-by: syzbot+34b582cf32c1db008f8e@syzkaller.appspotmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Link: https://lore.kernel.org/r/20200113125358.ac07f276efff.Ibd85ee1b12e47b9efb00a2adc5cd3fac50da791a@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 155f2fe516575099d012e77e8ab85511caf9ff80
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Fri Oct 4 16:27:19 2019 +0200

    arm64: dts: marvell: Add AP806-dual missing CPU clocks
    
    commit e231c6d47cca4b5df51bcf72dec1af767e63feaf upstream.
    
    CPU clocks have been added to AP806-quad but not to the -dual
    variant.
    
    Fixes: c00bc38354cf ("arm64: dts: marvell: Add cpu clock node on Armada 7K/8K")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 914ffed42a04f867cc206d3720aec470e6cc4ad0
Author: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
Date:   Thu Sep 12 11:31:43 2019 +0100

    arm64: dts: renesas: r8a77970: Fix PWM3
    
    commit 28a1b34c00dad4be91108369ca25ef8dc8bf850d upstream.
    
    The pwm3 was incorrectly added with a compatible reference to the
    renesas,pwm-r8a7790 (H2) due to a single characther ommision.
    
    Fix the compatible string.
    
    Fixes: de625477c632 ("arm64: dts: renesas: r8a779{7|8}0: add PWM support")
    Signed-off-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Link: https://lore.kernel.org/r/20190912103143.985-1-kieran.bingham+renesas@ideasonboard.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0592c04b37f63ccfa57e585b1bcbe927e14c5ceb
Author: Christian Hewitt <christianshewitt@gmail.com>
Date:   Mon Sep 9 19:01:22 2019 +0400

    arm64: dts: meson-gxl-s905x-khadas-vim: fix gpio-keys-polled node
    
    commit d5f6fa904ecbadbb8e9fa6302b0fc165bec0559a upstream.
    
    Fix DTC warnings:
    
    arch/arm/dts/meson-gxl-s905x-khadas-vim.dtb: Warning (avoid_unnecessary_addr_size):
       /gpio-keys-polled: unnecessary #address-cells/#size-cells
          without "ranges" or child "reg" property
    
    Fixes: e15d2774b8c0 ("ARM64: dts: meson-gxl: add support for the Khadas VIM board")
    Signed-off-by: Christian Hewitt <christianshewitt@gmail.com>
    Reviewed-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9c8012a92a29a8be0228a023d178b56408ade5c
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Thu Sep 5 14:59:53 2019 +0200

    arm64: dts: meson: g12: fix audio fifo reg size
    
    commit 22c4b148a0a1085e57a470e6f7dc515cf08f5a5c upstream.
    
    The register region size initially is too small to access all
    the fifo registers.
    
    Fixes: c59b7fe5aafd ("arm64: dts: meson: g12a: add audio fifos")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3495a2700f1d3cf83e39ac68e1ca23dcf36ab6c8
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Thu Sep 5 14:59:52 2019 +0200

    arm64: dts: meson: axg: fix audio fifo reg size
    
    commit 301b94d434ac3a3cd576a4bc1053cc243d6bd841 upstream.
    
    The register region size initially is too small to access all
    the fifo registers.
    
    Fixes: f2b8f6a93357 ("arm64: dts: meson-axg: add audio fifos")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3e9f7d5f0ea3605a76e415d3d3ce0b9d05928fe
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Oct 1 14:45:01 2019 +0300

    cw1200: Fix a signedness bug in cw1200_load_firmware()
    
    commit 4a50d454502f1401171ff061a5424583f91266db upstream.
    
    The "priv->hw_type" is an enum and in this context GCC will treat it
    as an unsigned int so the error handling will never trigger.
    
    Fixes: a910e4a94f69 ("cw1200: add driver for the ST-E CW1100 & CW1200 WLAN chipsets")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f690a8ced5eda144f34e60e7eb73dd3e4a02b52e
Author: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
Date:   Thu Oct 3 12:14:49 2019 +0530

    arm64: dts: qcom: msm8998: Disable coresight by default
    
    commit a636f93fcdb4a516e7cba6a365645ee8429602b2 upstream.
    
    Boot failure has been reported on MSM8998 based laptop when
    coresight is enabled. This is most likely due to lack of
    firmware support for coresight on production device when
    compared to debug device like MTP where this issue is not
    observed. So disable coresight by default for MSM8998 and
    enable it only for MSM8998 MTP.
    
    Reported-and-tested-by: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
    Fixes: 783abfa2249a ("arm64: dts: qcom: msm8998: Add Coresight support")
    Signed-off-by: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ac7f852e2121c1b4815bea3f40ca6f9fc21c3f67
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Wed Oct 2 16:44:52 2019 +0200

    irqchip: Place CONFIG_SIFIVE_PLIC into the menu
    
    commit 0149385537e6d36f535fcd83cfcabf83a32f0836 upstream.
    
    Somehow CONFIG_SIFIVE_PLIC ended up outside of the "IRQ chip support"
    menu.
    
    Fixes: 8237f8bc4f6e ("irqchip: add a SiFive PLIC driver")
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Reviewed-by: Palmer Dabbelt <palmer@sifive.com>
    Acked-by: Palmer Dabbelt <palmer@sifive.com>
    Link: https://lore.kernel.org/r/20191002144452.10178-1-j.neuschaefer@gmx.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e67e245ce0eb11a791754fb3dbfdbc87b3c6acb
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Dec 12 12:55:31 2019 -0800

    tcp: refine rule to allow EPOLLOUT generation under mem pressure
    
    commit 216808c6ba6d00169fd2aa928ec3c0e63bef254f upstream.
    
    At the time commit ce5ec440994b ("tcp: ensure epoll edge trigger
    wakeup when write queue is empty") was added to the kernel,
    we still had a single write queue, combining rtx and write queues.
    
    Once we moved the rtx queue into a separate rb-tree, testing
    if sk_write_queue is empty has been suboptimal.
    
    Indeed, if we have packets in the rtx queue, we probably want
    to delay the EPOLLOUT generation at the time incoming packets
    will free them, making room, but more importantly avoiding
    flooding application with EPOLLOUT events.
    
    Solution is to use tcp_rtx_and_write_queues_empty() helper.
    
    Fixes: 75c119afe14f ("tcp: implement rb-tree based retransmit queue")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Jason Baron <jbaron@akamai.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0445c81cfbe4413bd13e7b9eb000e9f5d92619a3
Author: Rob Herring <robh@kernel.org>
Date:   Tue Dec 17 10:27:12 2019 -0600

    dt-bindings: Add missing 'properties' keyword enclosing 'snps,tso'
    
    commit dbce0b65046d1735d7054c54ec2387dba84ba258 upstream.
    
    DT property definitions must be under a 'properties' keyword. This was
    missing for 'snps,tso' in an if/then clause. A meta-schema fix will
    catch future errors like this.
    
    Fixes: 7db3545aef5f ("dt-bindings: net: stmmac: Convert the binding to a schemas")
    Cc: "David S. Miller" <davem@davemloft.net>
    Acked-by: Maxime Ripard <mripard@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 200f8b968071db0d8bacba4a2ddbc3010b827c66
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Mon Dec 9 13:14:44 2019 -0700

    xen/blkfront: Adjust indentation in xlvbd_alloc_gendisk
    
    commit 589b72894f53124a39d1bb3c0cecaf9dcabac417 upstream.
    
    Clang warns:
    
    ../drivers/block/xen-blkfront.c:1117:4: warning: misleading indentation;
    statement is not part of the previous 'if' [-Wmisleading-indentation]
                    nr_parts = PARTS_PER_DISK;
                    ^
    ../drivers/block/xen-blkfront.c:1115:3: note: previous statement is here
                    if (err)
                    ^
    
    This is because there is a space at the beginning of this line; remove
    it so that the indentation is consistent according to the Linux kernel
    coding style and clang no longer warns.
    
    While we are here, the previous line has some trailing whitespace; clean
    that up as well.
    
    Fixes: c80a420995e7 ("xen-blkfront: handle Xen major numbers other than XENVBD")
    Link: https://github.com/ClangBuiltLinux/linux/issues/791
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Acked-by: Roger Pau Monné <roger.pau@citrix.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e256f8d845bcf22acad4f81ed04a73dd1f1d05e3
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Thu Jan 9 19:57:41 2020 +0200

    devlink: Wait longer before warning about unset port type
    
    commit 4c582234ab3948d08a24c82eb1e00436aabacbc6 upstream.
    
    The commit cited below causes devlink to emit a warning if a type was
    not set on a devlink port for longer than 30 seconds to "prevent
    misbehavior of drivers". This proved to be problematic when
    unregistering the backing netdev. The flow is always:
    
    devlink_port_type_clear()       // schedules the warning
    unregister_netdev()             // blocking
    devlink_port_unregister()       // cancels the warning
    
    The call to unregister_netdev() can block for long periods of time for
    various reasons: RTNL lock is contended, large amounts of configuration
    to unroll following dismantle of the netdev, etc. This results in
    devlink emitting a warning despite the driver behaving correctly.
    
    In emulated environments (of future hardware) which are usually very
    slow, the warning can also be emitted during port creation as more than
    30 seconds can pass between the time the devlink port is registered and
    when its type is set.
    
    In addition, syzbot has hit this warning [1] 1974 times since 07/11/19
    without being able to produce a reproducer. Probably because
    reproduction depends on the load or other bugs (e.g., RTNL not being
    released).
    
    To prevent bogus warnings, increase the timeout to 1 hour.
    
    [1] https://syzkaller.appspot.com/bug?id=e99b59e9c024a666c9f7450dc162a4b74d09d9cb
    
    Fixes: 136bf27fc0e9 ("devlink: add warning in case driver does not set port type")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reported-by: syzbot+b0a18ed7b08b735d2f41@syzkaller.appspotmail.com
    Reported-by: Alex Veber <alexve@mellanox.com>
    Tested-by: Alex Veber <alexve@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79063cb67f69f155b4d0206cdb16088f49f2e6f0
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Fri Jan 10 16:23:53 2020 +0100

    net: stmmac: tc: Do not setup flower filtering if RSS is enabled
    
    commit 7bd754c47dd3ad1b048c9641294b0234fcce2c58 upstream.
    
    RSS, when enabled, will bypass the L3 and L4 filtering causing it not
    to work. Add a check before trying to setup the filters.
    
    Fixes: 425eabddaf0f ("net: stmmac: Implement L3/L4 Filters using TC Flower")
    Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba1c4fa2daea7b0fb1acc9036974089abde8b0a2
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Fri Jan 10 16:23:52 2020 +0100

    net: stmmac: selftests: Update status when disabling RSS
    
    commit e715d74504352968cf24ac95476706bc911a69cd upstream.
    
    We are disabling RSS on HW but not updating the internal private status
    to the 'disabled' state. This is needed for next tc commit that will
    check if RSS is disabled before trying to apply filters.
    
    Fixes: 4647e021193d ("net: stmmac: selftests: Add selftest for L3/L4 Filters")
    Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6084f8300ed1a15acacbba683f49ade487ac1a1f
Author: Petr Machata <petrm@mellanox.com>
Date:   Wed Jan 15 13:53:47 2020 +0200

    selftests: mlxsw: qos_mc_aware: Fix mausezahn invocation
    
    commit fef6d6704944c7be72fd2b77c021f1aed3d5df0d upstream.
    
    Mausezahn does not recognize "own" as a keyword on source IP address. As a
    result, the MC stream is not running at all, and therefore no UC
    degradation can be observed even in principle.
    
    Fix the invocation, and tighten the test: due to the minimum shaper
    configured at the MC TCs, we always expect about 20% degradation. Fail the
    test if it is lower.
    
    Fixes: 573363a68f27 ("selftests: mlxsw: Add qos_lib.sh")
    Signed-off-by: Petr Machata <petrm@mellanox.com>
    Reported-by: Amit Cohen <amitc@mellanox.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a3e4499a50fbbee64966393c5e6e0fd821049b0
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Tue Jan 14 17:09:22 2020 +0100

    net: stmmac: selftests: Mark as fail when received VLAN ID != expected
    
    commit d39b68e5a736afa67d2e9cfb158efdd237d99dbd upstream.
    
    When the VLAN ID does not match the expected one it means filter failed
    in HW. Fix it.
    
    Fixes: 94e18382003c ("net: stmmac: selftests: Add selftest for VLAN TX Offload")
    Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a67039cb144b95303f3ad963e25956fd2b2c029e
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Tue Jan 14 17:09:21 2020 +0100

    net: stmmac: selftests: Make it work in Synopsys AXS101 boards
    
    commit 0b9f932edc1a461933bfde08e620362e2190e0dd upstream.
    
    Synopsys AXS101 boards do not support unaligned memory loads or stores.
    Change the selftests mechanism to explicity:
    - Not add extra alignment in TX SKB
    - Use the unaligned version of ether_addr_equal()
    
    Fixes: 091810dbded9 ("net: stmmac: Introduce selftests support")
    Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f948b666401c1451b2e03500ee2c03fcdef85994
Author: Petr Machata <petrm@mellanox.com>
Date:   Wed Jan 15 13:53:49 2020 +0200

    mlxsw: spectrum_qdisc: Include MC TCs in Qdisc counters
    
    commit 85005b82e59fa7bb7388b12594ab2067bf73d66c upstream.
    
    mlxsw configures Spectrum in such a way that BUM traffic is passed not
    through its nominal traffic class TC, but through its MC counterpart TC+8.
    However, when collecting statistics, Qdiscs only look at the nominal TC and
    ignore the MC TC.
    
    Add two helpers to compute the value for logical TC from the constituents,
    one for backlog, the other for tail drops. Use them throughout instead of
    going through the xstats pointer directly.
    
    Counters for TX bytes and packets are deduced from packet priority
    counters, and therefore already include BUM traffic. wred_drop counter is
    irrelevant on MC TCs, because RED is not enabled on them.
    
    Fixes: 7b8195306694 ("mlxsw: spectrum: Configure MC-aware mode on mlxsw ports")
    Signed-off-by: Petr Machata <petrm@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bd1fbc9125a27d95e20fbf3594f362fa7d1b43f
Author: Petr Machata <petrm@mellanox.com>
Date:   Wed Jan 15 13:53:48 2020 +0200

    mlxsw: spectrum: Wipe xstats.backlog of down ports
    
    commit ca7609ff3680c51d6c29897f3117aa2ad904f92a upstream.
    
    Per-port counter cache used by Qdiscs is updated periodically, unless the
    port is down. The fact that the cache is not updated for down ports is no
    problem for most counters, which are relative in nature. However, backlog
    is absolute in nature, and if there is a non-zero value in the cache around
    the time that the port goes down, that value just stays there. This value
    then leaks to offloaded Qdiscs that report non-zero backlog even if
    there (obviously) is no traffic.
    
    The HW does not keep backlog of a downed port, so do likewise: as the port
    goes down, wipe the backlog value from xstats.
    
    Fixes: 075ab8adaf4e ("mlxsw: spectrum: Collect tclass related stats periodically")
    Signed-off-by: Petr Machata <petrm@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49d8853ac6e2582e7fb364f5986c2a3f42b367ce
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Wed Jan 15 13:53:45 2020 +0200

    mlxsw: spectrum: Do not modify cloned SKBs during xmit
    
    commit 2da51ce75d86ab1f7770ac1391a9a1697ddaa60c upstream.
    
    The driver needs to prepend a Tx header to each packet it is
    transmitting. The header includes information such as the egress port
    and traffic class.
    
    The addition of the header requires the driver to modify the SKB's
    header and therefore it must not be shared. Otherwise, we risk hitting
    various race conditions.
    
    For example, when a packet is flooded (cloned) by the bridge driver to
    two switch ports swp1 and swp2:
    
    t0 - mlxsw_sp_port_xmit() is called for swp1. Tx header is prepended with
         swp1's port number
    t1 - mlxsw_sp_port_xmit() is called for swp2. Tx header is prepended with
         swp2's port number, overwriting swp1's port number
    t2 - The device processes data buffer from t0. Packet is transmitted via
         swp2
    t3 - The device processes data buffer from t1. Packet is transmitted via
         swp2
    
    Usually, the device is fast enough and transmits the packet before its
    Tx header is overwritten, but this is not the case in emulated
    environments.
    
    Fix this by making sure the SKB's header is writable by calling
    skb_cow_head(). Since the function ensures we have headroom to push the
    Tx header, the check further in the function can be removed.
    
    v2:
    * Use skb_cow_head() instead of skb_unshare() as suggested by Jakub
    * Remove unnecessary check regarding headroom
    
    Fixes: 56ade8fe3fe1 ("mlxsw: spectrum: Add initial support for Spectrum ASIC")
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reported-by: Shalom Toledo <shalomt@mellanox.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2f460461c50de056df136a423a7363586ffb2f5
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Wed Jan 8 23:42:42 2020 +0300

    sh_eth: check sh_eth_cpu_data::dual_port when dumping registers
    
    commit 3249b1e442a1be1a6b9f1026785b519d1443f807 upstream.
    
    When adding the sh_eth_cpu_data::dual_port flag I forgot to add the flag
    checks to __sh_eth_get_regs(), causing the non-existing TSU registers to
    be dumped by 'ethtool' on the single port Ether controllers having TSU...
    
    Fixes: a94cf2a614f8 ("sh_eth: fix TSU init on SH7734/R8A7740")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87429054c64706570f4b3fadb8481ebe85797ee0
Author: changzhu <Changfeng.Zhu@amd.com>
Date:   Thu Nov 7 14:09:27 2019 +0800

    drm/amdgpu: allow direct upload save restore list for raven2
    
    commit eebc7f4d7ffa09f2a620bd1e2c67ddd579118af9 upstream.
    
    It will cause modprobe atombios stuck problem in raven2 if it doesn't
    allow direct upload save restore list from gfx driver.
    So it needs to allow direct upload save restore list for raven2
    temporarily.
    
    Signed-off-by: changzhu <Changfeng.Zhu@amd.com>
    Reviewed-by: Huang Rui <ray.huang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97e81f01f03c25a03ca1699111323e3984c3779c
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Wed Sep 25 10:48:30 2019 -0500

    i40e: prevent memory leak in i40e_setup_macvlans
    
    [ Upstream commit 27d461333459d282ffa4a2bdb6b215a59d493a8f ]
    
    In i40e_setup_macvlans if i40e_setup_channel fails the allocated memory
    for ch should be released.
    
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff9d5710cee5d0c251f7a24ef69b950a74f21dd2
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Jan 16 12:55:48 2020 -0800

    net: dsa: bcm_sf2: Configure IMP port for 2Gb/sec
    
    [ Upstream commit 8f1880cbe8d0d49ebb7e9ae409b3b96676e5aa97 ]
    
    With the implementation of the system reset controller we lost a setting
    that is currently applied by the bootloader and which configures the IMP
    port for 2Gb/sec, the default is 1Gb/sec. This is needed given the
    number of ports and applications we expect to run so bring back that
    setting.
    
    Fixes: 01b0ac07589e ("net: dsa: bcm_sf2: Add support for optional reset controller line")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c2e822305969b6cc6eb82907c493039b3180430
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Jan 18 20:45:06 2020 -0800

    net: sched: act_ctinfo: fix memory leak
    
    [ Upstream commit 09d4f10a5e78d76a53e3e584f1e6a701b6d24108 ]
    
    Implement a cleanup method to properly free ci->params
    
    BUG: memory leak
    unreferenced object 0xffff88811746e2c0 (size 64):
      comm "syz-executor617", pid 7106, jiffies 4294943055 (age 14.250s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        c0 34 60 84 ff ff ff ff 00 00 00 00 00 00 00 00  .4`.............
      backtrace:
        [<0000000015aa236f>] kmemleak_alloc_recursive include/linux/kmemleak.h:43 [inline]
        [<0000000015aa236f>] slab_post_alloc_hook mm/slab.h:586 [inline]
        [<0000000015aa236f>] slab_alloc mm/slab.c:3320 [inline]
        [<0000000015aa236f>] kmem_cache_alloc_trace+0x145/0x2c0 mm/slab.c:3549
        [<000000002c946bd1>] kmalloc include/linux/slab.h:556 [inline]
        [<000000002c946bd1>] kzalloc include/linux/slab.h:670 [inline]
        [<000000002c946bd1>] tcf_ctinfo_init+0x21a/0x530 net/sched/act_ctinfo.c:236
        [<0000000086952cca>] tcf_action_init_1+0x400/0x5b0 net/sched/act_api.c:944
        [<000000005ab29bf8>] tcf_action_init+0x135/0x1c0 net/sched/act_api.c:1000
        [<00000000392f56f9>] tcf_action_add+0x9a/0x200 net/sched/act_api.c:1410
        [<0000000088f3c5dd>] tc_ctl_action+0x14d/0x1bb net/sched/act_api.c:1465
        [<000000006b39d986>] rtnetlink_rcv_msg+0x178/0x4b0 net/core/rtnetlink.c:5424
        [<00000000fd6ecace>] netlink_rcv_skb+0x61/0x170 net/netlink/af_netlink.c:2477
        [<0000000047493d02>] rtnetlink_rcv+0x1d/0x30 net/core/rtnetlink.c:5442
        [<00000000bdcf8286>] netlink_unicast_kernel net/netlink/af_netlink.c:1302 [inline]
        [<00000000bdcf8286>] netlink_unicast+0x223/0x310 net/netlink/af_netlink.c:1328
        [<00000000fc5b92d9>] netlink_sendmsg+0x2c0/0x570 net/netlink/af_netlink.c:1917
        [<00000000da84d076>] sock_sendmsg_nosec net/socket.c:639 [inline]
        [<00000000da84d076>] sock_sendmsg+0x54/0x70 net/socket.c:659
        [<0000000042fb2eee>] ____sys_sendmsg+0x2d0/0x300 net/socket.c:2330
        [<000000008f23f67e>] ___sys_sendmsg+0x8a/0xd0 net/socket.c:2384
        [<00000000d838e4f6>] __sys_sendmsg+0x80/0xf0 net/socket.c:2417
        [<00000000289a9cb1>] __do_sys_sendmsg net/socket.c:2426 [inline]
        [<00000000289a9cb1>] __se_sys_sendmsg net/socket.c:2424 [inline]
        [<00000000289a9cb1>] __x64_sys_sendmsg+0x23/0x30 net/socket.c:2424
    
    Fixes: 24ec483cec98 ("net: sched: Introduce act_ctinfo action")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Kevin 'ldir' Darbyshire-Bryant <ldir@darbyshire-bryant.me.uk>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Cc: Toke Høiland-Jørgensen <toke@redhat.com>
    Acked-by: Kevin 'ldir' Darbyshire-Bryant <ldir@darbyshire-bryant.me.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3bccc22e7aa1e8874769981ec8a1ca5ddee68db
Author: Alexander Lobakin <alobakin@dlink.ru>
Date:   Wed Jan 15 11:54:38 2020 +0300

    net: dsa: tag_gswip: fix typo in tagger name
    
    [ Upstream commit ad32205470919c8e04cdd33e0613bdba50c2376d ]
    
    The correct name is GSWIP (Gigabit Switch IP). Typo was introduced in
    875138f81d71a ("dsa: Move tagger name into its ops structure") while
    moving tagger names to their structures.
    
    Fixes: 875138f81d71a ("dsa: Move tagger name into its ops structure")
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Alexander Lobakin <alobakin@dlink.ru>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f668376ad5135fe4a176c711a94a2040fbab3626
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Thu Jan 16 20:43:27 2020 +0200

    net: dsa: sja1105: Don't error out on disabled ports with no phy-mode
    
    [ Upstream commit 27afe0d34e9121a3d61cc0af9b17c2542dadde24 ]
    
    The sja1105_parse_ports_node function was tested only on device trees
    where all ports were enabled. Fix this check so that the driver
    continues to probe only with the ports where status is not "disabled",
    as expected.
    
    Fixes: 8aa9ebccae87 ("net: dsa: Introduce driver for NXP SJA1105 5-port L2 switch")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80e06d0cf349f65ccbfe4c6e026a95527caa3659
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Jan 16 13:08:58 2020 -0800

    net: systemport: Fixed queue mapping in internal ring map
    
    [ Upstream commit 5a9ef19454cd5daec8041bc7c3c11deb7456d9a0 ]
    
    We would not be transmitting using the correct SYSTEMPORT transmit queue
    during ndo_select_queue() which looks up the internal TX ring map
    because while establishing the mapping we would be off by 4, so for
    instance, when we populate switch port mappings we would be doing:
    
    switch port 0, queue 0 -> ring index #0
    switch port 0, queue 1 -> ring index #1
    ...
    switch port 0, queue 3 -> ring index #3
    switch port 1, queue 0 -> ring index #8 (4 + 4 * 1)
    ...
    
    instead of using ring index #4. This would cause our ndo_select_queue()
    to use the fallback queue mechanism which would pick up an incorrect
    ring for that switch port. Fix this by using the correct switch queue
    number instead of SYSTEMPORT queue number.
    
    Fixes: 25c440704661 ("net: systemport: Simplify queue mapping logic")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 591c90ea13290ee293fd0a68ec511cff0b07cf00
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Wed Jan 15 13:02:42 2020 +0900

    net: ethernet: ave: Avoid lockdep warning
    
    [ Upstream commit 82d5d6a638cbd12b7dfe8acafd9efd87a656cc06 ]
    
    When building with PROVE_LOCKING=y, lockdep shows the following
    dump message.
    
        INFO: trying to register non-static key.
        the code is fine but needs lockdep annotation.
        turning off the locking correctness validator.
         ...
    
    Calling device_set_wakeup_enable() directly occurs this issue,
    and it isn't necessary for initialization, so this patch creates
    internal function __ave_ethtool_set_wol() and replaces with this
    in ave_init() and ave_resume().
    
    Fixes: 7200f2e3c9e2 ("net: ethernet: ave: Set initial wol state to disabled")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 698f8c20892d359260dc844513e8d23aa27ff8ce
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Fri Jan 17 00:32:47 2020 -0500

    bnxt_en: Do not treat DSN (Digital Serial Number) read failure as fatal.
    
    [ Upstream commit d061b2411d5f3d6272187ab734ce0640827fca13 ]
    
    DSN read can fail, for example on a kdump kernel without PCIe extended
    config space support.  If DSN read fails, don't set the
    BNXT_FLAG_DSN_VALID flag and continue loading.  Check the flag
    to see if the stored DSN is valid before using it.  Only VF reps
    creation should fail without valid DSN.
    
    Fixes: 03213a996531 ("bnxt: move bp->switch_id initialization to PF probe")
    Reported-by: Marc Smith <msmith626@gmail.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2c97ff56211b4dd7a2d2df6884dc25f636f779a
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Fri Jan 17 00:32:46 2020 -0500

    bnxt_en: Fix ipv6 RFS filter matching logic.
    
    [ Upstream commit 6fc7caa84e713f7627e171ab1e7c4b5be0dc9b3d ]
    
    Fix bnxt_fltr_match() to match ipv6 source and destination addresses.
    The function currently only checks ipv4 addresses and will not work
    corrently on ipv6 filters.
    
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fcbf29512cc47430a90c3c5c48e29b261501bcdf
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Fri Jan 17 00:32:45 2020 -0500

    bnxt_en: Fix NTUPLE firmware command failures.
    
    [ Upstream commit ceb3284c588eee5ea256c70e4d8d7cf399b8134e ]
    
    The NTUPLE related firmware commands are sent to the wrong firmware
    channel, causing all these commands to fail on new firmware that
    supports the new firmware channel.  Fix it by excluding the 3
    NTUPLE firmware commands from the list for the new firmware channel.
    
    Fixes: 760b6d33410c ("bnxt_en: Add support for 2nd firmware message channel.")
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07667c94759d1a7bffb161a4434eade8a790ef68
Author: Pengcheng Yang <yangpc@wangsu.com>
Date:   Tue Jan 14 17:23:40 2020 +0800

    tcp: fix marked lost packets not being retransmitted
    
    [ Upstream commit e176b1ba476cf36f723cfcc7a9e57f3cb47dec70 ]
    
    When the packet pointed to by retransmit_skb_hint is unlinked by ACK,
    retransmit_skb_hint will be set to NULL in tcp_clean_rtx_queue().
    If packet loss is detected at this time, retransmit_skb_hint will be set
    to point to the current packet loss in tcp_verify_retransmit_hint(),
    then the packets that were previously marked lost but not retransmitted
    due to the restriction of cwnd will be skipped and cannot be
    retransmitted.
    
    To fix this, when retransmit_skb_hint is NULL, retransmit_skb_hint can
    be reset only after all marked lost packets are retransmitted
    (retrans_out >= lost_out), otherwise we need to traverse from
    tcp_rtx_queue_head in tcp_xmit_retransmit_queue().
    
    Packetdrill to demonstrate:
    
    // Disable RACK and set max_reordering to keep things simple
        0 `sysctl -q net.ipv4.tcp_recovery=0`
       +0 `sysctl -q net.ipv4.tcp_max_reordering=3`
    
    // Establish a connection
       +0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
       +0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
       +0 bind(3, ..., ...) = 0
       +0 listen(3, 1) = 0
    
      +.1 < S 0:0(0) win 32792 <mss 1000,sackOK,nop,nop,nop,wscale 7>
       +0 > S. 0:0(0) ack 1 <...>
     +.01 < . 1:1(0) ack 1 win 257
       +0 accept(3, ..., ...) = 4
    
    // Send 8 data segments
       +0 write(4, ..., 8000) = 8000
       +0 > P. 1:8001(8000) ack 1
    
    // Enter recovery and 1:3001 is marked lost
     +.01 < . 1:1(0) ack 1 win 257 <sack 3001:4001,nop,nop>
       +0 < . 1:1(0) ack 1 win 257 <sack 5001:6001 3001:4001,nop,nop>
       +0 < . 1:1(0) ack 1 win 257 <sack 5001:7001 3001:4001,nop,nop>
    
    // Retransmit 1:1001, now retransmit_skb_hint points to 1001:2001
       +0 > . 1:1001(1000) ack 1
    
    // 1001:2001 was ACKed causing retransmit_skb_hint to be set to NULL
     +.01 < . 1:1(0) ack 2001 win 257 <sack 5001:8001 3001:4001,nop,nop>
    // Now retransmit_skb_hint points to 4001:5001 which is now marked lost
    
    // BUG: 2001:3001 was not retransmitted
       +0 > . 2001:3001(1000) ack 1
    
    Signed-off-by: Pengcheng Yang <yangpc@wangsu.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Tested-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdca076a9a91f4f352c12ab118a98c2b2da30577
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Jan 14 09:27:29 2020 +0100

    r8152: add missing endpoint sanity check
    
    [ Upstream commit 86f3f4cd53707ceeec079b83205c8d3c756eca93 ]
    
    Add missing endpoint sanity check to probe in order to prevent a
    NULL-pointer dereference (or slab out-of-bounds access) when retrieving
    the interrupt-endpoint bInterval on ndo_open() in case a device lacks
    the expected endpoints.
    
    Fixes: 40a82917b1d3 ("net/usb/r8152: enable interrupt transfer")
    Cc: hayeswang <hayeswang@realtek.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fd16cfcc3ae28cf42c67941fd529600f21bec39
Author: Vladis Dronov <vdronov@redhat.com>
Date:   Mon Jan 13 14:00:09 2020 +0100

    ptp: free ptp device pin descriptors properly
    
    [ Upstream commit 75718584cb3c64e6269109d4d54f888ac5a5fd15 ]
    
    There is a bug in ptp_clock_unregister(), where ptp_cleanup_pin_groups()
    first frees ptp->pin_{,dev_}attr, but then posix_clock_unregister() needs
    them to destroy a related sysfs device.
    
    These functions can not be just swapped, as posix_clock_unregister() frees
    ptp which is needed in the ptp_cleanup_pin_groups(). Fix this by calling
    ptp_cleanup_pin_groups() in ptp_clock_release(), right before ptp is freed.
    
    This makes this patch fix an UAF bug in a patch which fixes an UAF bug.
    
    Reported-by: Antti Laakso <antti.laakso@intel.com>
    Fixes: a33121e5487b ("ptp: fix the race between the release of ptp_clock and cdev")
    Link: https://lore.kernel.org/netdev/3d2bd09735dbdaf003585ca376b7c1e5b69a19bd.camel@intel.com/
    Signed-off-by: Vladis Dronov <vdronov@redhat.com>
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb7f182fe5c92d4d5414e8d93aa39d8e28af2df0
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Jan 14 14:54:48 2020 +0000

    net/wan/fsl_ucc_hdlc: fix out of bounds write on array utdm_info
    
    [ Upstream commit ddf420390526ede3b9ff559ac89f58cb59d9db2f ]
    
    Array utdm_info is declared as an array of MAX_HDLC_NUM (4) elements
    however up to UCC_MAX_NUM (8) elements are potentially being written
    to it.  Currently we have an array out-of-bounds write error on the
    last 4 elements. Fix this by making utdm_info UCC_MAX_NUM elements in
    size.
    
    Addresses-Coverity: ("Out-of-bounds write")
    Fixes: c19b6d246a35 ("drivers/net: support hdlc function for QE-UCC")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04eb36e5d66e80456fac5a1e4bcf82718cb65b63
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jan 13 09:27:11 2020 -0800

    net: usb: lan78xx: limit size of local TSO packets
    
    [ Upstream commit f8d7408a4d7f60f8b2df0f81decdc882dd9c20dc ]
    
    lan78xx_tx_bh() makes sure to not exceed MAX_SINGLE_PACKET_SIZE
    bytes in the aggregated packets it builds, but does
    nothing to prevent large GSO packets being submitted.
    
    Pierre-Francois reported various hangs when/if TSO is enabled.
    
    For localy generated packets, we can use netif_set_gso_max_size()
    to limit the size of TSO packets.
    
    Note that forwarded packets could still hit the issue,
    so a complete fix might require implementing .ndo_features_check
    for this driver, forcing a software segmentation if the size
    of the TSO packet exceeds MAX_SINGLE_PACKET_SIZE.
    
    Fixes: 55d7de9de6c3 ("Microchip's LAN7800 family USB 2/3 to 10/100/1000 Ethernet device driver")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: RENARD Pierre-Francois <pfrenard@gmail.com>
    Tested-by: RENARD Pierre-Francois <pfrenard@gmail.com>
    Cc: Stefan Wahren <stefan.wahren@i2se.com>
    Cc: Woojung Huh <woojung.huh@microchip.com>
    Cc: Microchip Linux Driver Support <UNGLinuxDriver@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 332967b62e9370a5a7101d9adb385238d7d8020a
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jan 15 08:20:39 2020 -0800

    net/sched: act_ife: initalize ife->metalist earlier
    
    [ Upstream commit 44c23d71599f81a1c7fe8389e0319822dd50c37c ]
    
    It seems better to init ife->metalist earlier in tcf_ife_init()
    to avoid the following crash :
    
    kasan: CONFIG_KASAN_INLINE enabled
    kasan: GPF could be caused by NULL-ptr deref or user memory access
    general protection fault: 0000 [#1] PREEMPT SMP KASAN
    CPU: 0 PID: 10483 Comm: syz-executor216 Not tainted 5.5.0-rc5-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:_tcf_ife_cleanup net/sched/act_ife.c:412 [inline]
    RIP: 0010:tcf_ife_cleanup+0x6e/0x400 net/sched/act_ife.c:431
    Code: 48 c1 ea 03 80 3c 02 00 0f 85 94 03 00 00 49 8b bd f8 00 00 00 48 b8 00 00 00 00 00 fc ff df 4c 8d 67 e8 48 89 fa 48 c1 ea 03 <80> 3c 02 00 0f 85 5c 03 00 00 48 bb 00 00 00 00 00 fc ff df 48 8b
    RSP: 0018:ffffc90001dc6d00 EFLAGS: 00010246
    RAX: dffffc0000000000 RBX: ffffffff864619c0 RCX: ffffffff815bfa09
    RDX: 0000000000000000 RSI: 0000000000000004 RDI: 0000000000000000
    RBP: ffffc90001dc6d50 R08: 0000000000000004 R09: fffff520003b8d8e
    R10: fffff520003b8d8d R11: 0000000000000003 R12: ffffffffffffffe8
    R13: ffff8880a79fc000 R14: ffff88809aba0e00 R15: 0000000000000000
    FS:  0000000001b51880(0000) GS:ffff8880ae800000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000563f52cce140 CR3: 0000000093541000 CR4: 00000000001406f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     tcf_action_cleanup+0x62/0x1b0 net/sched/act_api.c:119
     __tcf_action_put+0xfa/0x130 net/sched/act_api.c:135
     __tcf_idr_release net/sched/act_api.c:165 [inline]
     __tcf_idr_release+0x59/0xf0 net/sched/act_api.c:145
     tcf_idr_release include/net/act_api.h:171 [inline]
     tcf_ife_init+0x97c/0x1870 net/sched/act_ife.c:616
     tcf_action_init_1+0x6b6/0xa40 net/sched/act_api.c:944
     tcf_action_init+0x21a/0x330 net/sched/act_api.c:1000
     tcf_action_add+0xf5/0x3b0 net/sched/act_api.c:1410
     tc_ctl_action+0x390/0x488 net/sched/act_api.c:1465
     rtnetlink_rcv_msg+0x45e/0xaf0 net/core/rtnetlink.c:5424
     netlink_rcv_skb+0x177/0x450 net/netlink/af_netlink.c:2477
     rtnetlink_rcv+0x1d/0x30 net/core/rtnetlink.c:5442
     netlink_unicast_kernel net/netlink/af_netlink.c:1302 [inline]
     netlink_unicast+0x58c/0x7d0 net/netlink/af_netlink.c:1328
     netlink_sendmsg+0x91c/0xea0 net/netlink/af_netlink.c:1917
     sock_sendmsg_nosec net/socket.c:639 [inline]
     sock_sendmsg+0xd7/0x130 net/socket.c:659
     ____sys_sendmsg+0x753/0x880 net/socket.c:2330
     ___sys_sendmsg+0x100/0x170 net/socket.c:2384
     __sys_sendmsg+0x105/0x1d0 net/socket.c:2417
     __do_sys_sendmsg net/socket.c:2426 [inline]
     __se_sys_sendmsg net/socket.c:2424 [inline]
     __x64_sys_sendmsg+0x78/0xb0 net/socket.c:2424
     do_syscall_64+0xfa/0x790 arch/x86/entry/common.c:294
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Fixes: 11a94d7fd80f ("net/sched: act_ife: validate the control action inside init()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Davide Caratti <dcaratti@redhat.com>
    Reviewed-by: Davide Caratti <dcaratti@redhat.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8af8396c271952c3087617f9bf9bcc836b1d9f09
Author: Michael Grzeschik <m.grzeschik@pengutronix.de>
Date:   Thu Jan 16 14:16:31 2020 +0100

    net: phy: dp83867: Set FORCE_LINK_GOOD to default after reset
    
    [ Upstream commit 86ffe920e669ec73035e84553e18edf17d16317c ]
    
    According to the Datasheet this bit should be 0 (Normal operation) in
    default. With the FORCE_LINK_GOOD bit set, it is not possible to get a
    link. This patch sets FORCE_LINK_GOOD to the default value after
    resetting the phy.
    
    Signed-off-by: Michael Grzeschik <m.grzeschik@pengutronix.de>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c642ca6d74160ce8057ab905595f0d05eecc555
Author: Yonglong Liu <liuyonglong@huawei.com>
Date:   Thu Jan 16 15:41:17 2020 +0800

    net: hns: fix soft lockup when there is not enough memory
    
    [ Upstream commit 49edd6a2c456150870ddcef5b7ed11b21d849e13 ]
    
    When there is not enough memory and napi_alloc_skb() return NULL,
    the HNS driver will print error message, and than try again, if
    the memory is not enough for a while, huge error message and the
    retry operation will cause soft lockup.
    
    When napi_alloc_skb() return NULL because of no memory, we can
    get a warn_alloc() call trace, so this patch deletes the error
    message. We already use polling mode to handle irq, but the
    retry operation will render the polling weight inactive, this
    patch just return budget when the rx is not completed to avoid
    dead loop.
    
    Fixes: 36eedfde1a36 ("net: hns: Optimize hns_nic_common_poll for better performance")
    Fixes: b5996f11ea54 ("net: add Hisilicon Network Subsystem basic ethernet support")
    Signed-off-by: Yonglong Liu <liuyonglong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 284678e237a55724be9182e89feeb131354eb830
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Wed Jan 15 10:46:45 2020 +0800

    net: hns3: pad the short frame before sending to the hardware
    
    [ Upstream commit 36c67349a1a1c88b9cf11d7ca7762ababdb38867 ]
    
    The hardware can not handle short frames below or equal to 32
    bytes according to the hardware user manual, and it will trigger
    a RAS error when the frame's length is below 33 bytes.
    
    This patch pads the SKB when skb->len is below 33 bytes before
    sending it to hardware.
    
    Fixes: 76ad4f0ee747 ("net: hns3: Add support of HNS3 Ethernet Driver for hip08 SoC")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: Huazhong Tan <tanhuazhong@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42667f36bcdb39796d1254185921c7314f1d3499
Author: Alexander Lobakin <alobakin@dlink.ru>
Date:   Wed Jan 15 11:56:52 2020 +0300

    net: dsa: tag_qca: fix doubled Tx statistics
    
    [ Upstream commit bd5874da57edd001b35cf28ae737779498c16a56 ]
    
    DSA subsystem takes care of netdev statistics since commit 4ed70ce9f01c
    ("net: dsa: Refactor transmit path to eliminate duplication"), so
    any accounting inside tagger callbacks is redundant and can lead to
    messing up the stats.
    This bug is present in Qualcomm tagger since day 0.
    
    Fixes: cafdc45c949b ("net-next: dsa: add Qualcomm tag RX/TX handler")
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Alexander Lobakin <alobakin@dlink.ru>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e892fd84a41163f0d9727ccfc823a6477cb2919
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Jan 15 13:02:38 2020 -0800

    net: avoid updating qdisc_xmit_lock_key in netdev_update_lockdep_key()
    
    [ Upstream commit 53d374979ef147ab51f5d632dfe20b14aebeccd0 ]
    
    syzbot reported some bogus lockdep warnings, for example bad unlock
    balance in sch_direct_xmit(). They are due to a race condition between
    slow path and fast path, that is qdisc_xmit_lock_key gets re-registered
    in netdev_update_lockdep_key() on slow path, while we could still
    acquire the queue->_xmit_lock on fast path in this small window:
    
    CPU A                                           CPU B
                                                    __netif_tx_lock();
    lockdep_unregister_key(qdisc_xmit_lock_key);
                                                    __netif_tx_unlock();
    lockdep_register_key(qdisc_xmit_lock_key);
    
    In fact, unlike the addr_list_lock which has to be reordered when
    the master/slave device relationship changes, queue->_xmit_lock is
    only acquired on fast path and only when NETIF_F_LLTX is not set,
    so there is likely no nested locking for it.
    
    Therefore, we can just get rid of re-registration of
    qdisc_xmit_lock_key.
    
    Reported-by: syzbot+4ec99438ed7450da6272@syzkaller.appspotmail.com
    Fixes: ab92d68fc22f ("net: core: add generic lockdep keys")
    Cc: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d391b5c4b152d3de6f45266f2e27c8416c8a6682
Author: Mohammed Gamal <mgamal@redhat.com>
Date:   Tue Jan 14 15:09:50 2020 +0200

    hv_netvsc: Fix memory leak when removing rndis device
    
    [ Upstream commit 536dc5df2808efbefc5acee334d3c4f701790ec0 ]
    
    kmemleak detects the following memory leak when hot removing
    a network device:
    
    unreferenced object 0xffff888083f63600 (size 256):
      comm "kworker/0:1", pid 12, jiffies 4294831717 (age 1113.676s)
      hex dump (first 32 bytes):
        00 40 c7 33 80 88 ff ff 00 00 00 00 10 00 00 00  .@.3............
        00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00  .....N..........
      backtrace:
        [<00000000d4a8f5be>] rndis_filter_device_add+0x117/0x11c0 [hv_netvsc]
        [<000000009c02d75b>] netvsc_probe+0x5e7/0xbf0 [hv_netvsc]
        [<00000000ddafce23>] vmbus_probe+0x74/0x170 [hv_vmbus]
        [<00000000046e64f1>] really_probe+0x22f/0xb50
        [<000000005cc35eb7>] driver_probe_device+0x25e/0x370
        [<0000000043c642b2>] bus_for_each_drv+0x11f/0x1b0
        [<000000005e3d09f0>] __device_attach+0x1c6/0x2f0
        [<00000000a72c362f>] bus_probe_device+0x1a6/0x260
        [<0000000008478399>] device_add+0x10a3/0x18e0
        [<00000000cf07b48c>] vmbus_device_register+0xe7/0x1e0 [hv_vmbus]
        [<00000000d46cf032>] vmbus_add_channel_work+0x8ab/0x1770 [hv_vmbus]
        [<000000002c94bb64>] process_one_work+0x919/0x17d0
        [<0000000096de6781>] worker_thread+0x87/0xb40
        [<00000000fbe7397e>] kthread+0x333/0x3f0
        [<000000004f844269>] ret_from_fork+0x3a/0x50
    
    rndis_filter_device_add() allocates an instance of struct rndis_device
    which never gets deallocated as rndis_filter_device_remove() sets
    net_device->extension which points to the rndis_device struct to NULL,
    leaving the rndis_device dangling.
    
    Since net_device->extension is eventually freed in free_netvsc_device(),
    we refrain from setting it to NULL inside rndis_filter_device_remove()
    
    Signed-off-by: Mohammed Gamal <mgamal@redhat.com>
    Reviewed-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c17e025049a639b78bb87a15494116b90f2de94f
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Jan 14 13:00:35 2020 -0800

    macvlan: use skb_reset_mac_header() in macvlan_queue_xmit()
    
    [ Upstream commit 1712b2fff8c682d145c7889d2290696647d82dab ]
    
    I missed the fact that macvlan_broadcast() can be used both
    in RX and TX.
    
    skb_eth_hdr() makes only sense in TX paths, so we can not
    use it blindly in macvlan_broadcast()
    
    Fixes: 96cc4b69581d ("macvlan: do not assume mac_header is set in macvlan_broadcast()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Jurgen Van Ham <juvanham@gmail.com>
    Tested-by: Matteo Croce <mcroce@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c69f6a2275a14c4e97135e8c6ddb7f02fac7ac0
Author: Sven Eckelmann <sven@narfation.org>
Date:   Thu Nov 28 12:25:45 2019 +0100

    batman-adv: Fix DAT candidate selection on little endian systems
    
    commit 4cc4a1708903f404d2ca0dfde30e71e052c6cbc9 upstream.
    
    The distributed arp table is using a DHT to store and retrieve MAC address
    information for an IP address. This is done using unicast messages to
    selected peers. The potential peers are looked up using the IP address and
    the VID.
    
    While the IP address is always stored in big endian byte order, this is not
    the case of the VID. It can (depending on the host system) either be big
    endian or little endian. The host must therefore always convert it to big
    endian to ensure that all devices calculate the same peers for the same
    lookup data.
    
    Fixes: be1db4f6615b ("batman-adv: make the Distributed ARP Table vlan aware")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2548a72a6f5c8c011305094b5000381ca57298db
Author: Martin KaFai Lau <kafai@fb.com>
Date:   Fri Jan 10 15:16:44 2020 -0800

    bpftool: Fix printing incorrect pointer in btf_dump_ptr
    
    commit 555089fdfc37ad65e0ee9b42ca40c238ff546f83 upstream.
    
    For plain text output, it incorrectly prints the pointer value
    "void *data".  The "void *data" is actually pointing to memory that
    contains a bpf-map's value.  The intention is to print the content of
    the bpf-map's value instead of printing the pointer pointing to the
    bpf-map's value.
    
    In this case, a member of the bpf-map's value is a pointer type.
    Thus, it should print the "*(void **)data".
    
    Fixes: 22c349e8db89 ("tools: bpftool: fix format strings and arguments for jsonw_printf()")
    Signed-off-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Reviewed-by: Quentin Monnet <quentin.monnet@netronome.com>
    Link: https://lore.kernel.org/bpf/20200110231644.3484151-1-kafai@fb.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4921b2b1caaf720f30979b13f73e2fc3cd0182d1
Author: Lorenz Bauer <lmb@cloudflare.com>
Date:   Fri Jan 10 13:23:36 2020 +0000

    net: bpf: Don't leak time wait and request sockets
    
    commit 2e012c74823629d9db27963c79caa3f5b2010746 upstream.
    
    It's possible to leak time wait and request sockets via the following
    BPF pseudo code:
     
      sk = bpf_skc_lookup_tcp(...)
      if (sk)
        bpf_sk_release(sk)
    
    If sk->sk_state is TCP_NEW_SYN_RECV or TCP_TIME_WAIT the refcount taken
    by bpf_skc_lookup_tcp is not undone by bpf_sk_release. This is because
    sk_flags is re-used for other data in both kinds of sockets. The check
    
      !sock_flag(sk, SOCK_RCU_FREE)
    
    therefore returns a bogus result. Check that sk_flags is valid by calling
    sk_fullsock. Skip checking SOCK_RCU_FREE if we already know that sk is
    not a full socket.
    
    Fixes: edbf8c01de5a ("bpf: add skc_lookup_tcp helper")
    Fixes: f7355a6c0497 ("bpf: Check sk_fullsock() before returning from bpf_sk_lookup()")
    Signed-off-by: Lorenz Bauer <lmb@cloudflare.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Link: https://lore.kernel.org/bpf/20200110132336.26099-1-lmb@cloudflare.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6c89cdf72c10e56e71693bed0fa5f74c784edb5
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 13 18:23:58 2020 +0100

    NFC: pn533: fix bulk-message timeout
    
    commit a112adafcb47760feff959ee1ecd10b74d2c5467 upstream.
    
    The driver was doing a synchronous uninterruptible bulk-transfer without
    using a timeout. This could lead to the driver hanging on probe due to a
    malfunctioning (or malicious) device until the device is physically
    disconnected. While sleeping in probe the driver prevents other devices
    connected to the same hub from being added to (or removed from) the bus.
    
    An arbitrary limit of five seconds should be more than enough.
    
    Fixes: dbafc28955fa ("NFC: pn533: don't send USB data off of the stack")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f4dc50b5c12e159ac846fdc00702c547fdf2e95
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Jan 16 12:03:01 2020 +0100

    netfilter: nf_tables: fix flowtable list del corruption
    
    commit 335178d5429c4cee61b58f4ac80688f556630818 upstream.
    
    syzbot reported following crash:
    
      list_del corruption, ffff88808c9bb000->prev is LIST_POISON2 (dead000000000122)
      [..]
      Call Trace:
       __list_del_entry include/linux/list.h:131 [inline]
       list_del_rcu include/linux/rculist.h:148 [inline]
       nf_tables_commit+0x1068/0x3b30 net/netfilter/nf_tables_api.c:7183
       [..]
    
    The commit transaction list has:
    
    NFT_MSG_NEWTABLE
    NFT_MSG_NEWFLOWTABLE
    NFT_MSG_DELFLOWTABLE
    NFT_MSG_DELTABLE
    
    A missing generation check during DELTABLE processing causes it to queue
    the DELFLOWTABLE operation a second time, so we corrupt the list here:
    
      case NFT_MSG_DELFLOWTABLE:
         list_del_rcu(&nft_trans_flowtable(trans)->list);
         nf_tables_flowtable_notify(&trans->ctx,
    
    because we have two different DELFLOWTABLE transactions for the same
    flowtable.  We then call list_del_rcu() twice for the same flowtable->list.
    
    The object handling seems to suffer from the same bug so add a generation
    check too and only queue delete transactions for flowtables/objects that
    are still active in the next generation.
    
    Reported-by: syzbot+37a6804945a3a13b1572@syzkaller.appspotmail.com
    Fixes: 3b49e2e94e6eb ("netfilter: nf_tables: add flow table netlink frontend")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9b86a8b2d0aa8ebf16bf00bf10f5d7f8d16a0fa
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Jan 13 18:09:58 2020 +0100

    netfilter: nf_tables: store transaction list locally while requesting module
    
    commit ec7470b834fe7b5d7eff11b6677f5d7fdf5e9a91 upstream.
    
    This patch fixes a WARN_ON in nft_set_destroy() due to missing
    set reference count drop from the preparation phase. This is triggered
    by the module autoload path. Do not exercise the abort path from
    nft_request_module() while preparation phase cleaning up is still
    pending.
    
     WARNING: CPU: 3 PID: 3456 at net/netfilter/nf_tables_api.c:3740 nft_set_destroy+0x45/0x50 [nf_tables]
     [...]
     CPU: 3 PID: 3456 Comm: nft Not tainted 5.4.6-arch3-1 #1
     RIP: 0010:nft_set_destroy+0x45/0x50 [nf_tables]
     Code: e8 30 eb 83 c6 48 8b 85 80 00 00 00 48 8b b8 90 00 00 00 e8 dd 6b d7 c5 48 8b 7d 30 e8 24 dd eb c5 48 89 ef 5d e9 6b c6 e5 c5 <0f> 0b c3 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 48 8b 7f 10 e9 52
     RSP: 0018:ffffac4f43e53700 EFLAGS: 00010202
     RAX: 0000000000000001 RBX: ffff99d63a154d80 RCX: 0000000001f88e03
     RDX: 0000000001f88c03 RSI: ffff99d6560ef0c0 RDI: ffff99d63a101200
     RBP: ffff99d617721de0 R08: 0000000000000000 R09: 0000000000000318
     R10: 00000000f0000000 R11: 0000000000000001 R12: ffffffff880fabf0
     R13: dead000000000122 R14: dead000000000100 R15: ffff99d63a154d80
     FS:  00007ff3dbd5b740(0000) GS:ffff99d6560c0000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00001cb5de6a9000 CR3: 000000016eb6a004 CR4: 00000000001606e0
     Call Trace:
      __nf_tables_abort+0x3e3/0x6d0 [nf_tables]
      nft_request_module+0x6f/0x110 [nf_tables]
      nft_expr_type_request_module+0x28/0x50 [nf_tables]
      nf_tables_expr_parse+0x198/0x1f0 [nf_tables]
      nft_expr_init+0x3b/0xf0 [nf_tables]
      nft_dynset_init+0x1e2/0x410 [nf_tables]
      nf_tables_newrule+0x30a/0x930 [nf_tables]
      nfnetlink_rcv_batch+0x2a0/0x640 [nfnetlink]
      nfnetlink_rcv+0x125/0x171 [nfnetlink]
      netlink_unicast+0x179/0x210
      netlink_sendmsg+0x208/0x3d0
      sock_sendmsg+0x5e/0x60
      ____sys_sendmsg+0x21b/0x290
    
    Update comment on the code to describe the new behaviour.
    
    Reported-by: Marco Oliverio <marco.oliverio@tanaza.com>
    Fixes: 452238e8d5ff ("netfilter: nf_tables: add and use helper for module autoload")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba8d5b1938c2204d555f84cfbe690e48bf88b530
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Jan 16 09:06:50 2020 +0100

    netfilter: nf_tables: remove WARN and add NLA_STRING upper limits
    
    commit 9332d27d7918182add34e8043f6a754530fdd022 upstream.
    
    This WARN can trigger because some of the names fed to the module
    autoload function can be of arbitrary length.
    
    Remove the WARN and add limits for all NLA_STRING attributes.
    
    Reported-by: syzbot+0e63ae76d117ae1c3a01@syzkaller.appspotmail.com
    Fixes: 452238e8d5ffd8 ("netfilter: nf_tables: add and use helper for module autoload")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9da572424be1b7e3dac69cf27712ee9dc3bac339
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Jan 16 08:58:05 2020 +0100

    netfilter: nft_tunnel: ERSPAN_VERSION must not be null
    
    commit 9ec22d7c6c69146180577f3ad5fdf504beeaee62 upstream.
    
    Fixes: af308b94a2a4a5 ("netfilter: nf_tables: add tunnel support")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d49538869ec7a3434566df64accd6f2d85449e5
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Jan 16 08:44:11 2020 +0100

    netfilter: nft_tunnel: fix null-attribute check
    
    commit 1c702bf902bd37349f6d91cd7f4b372b1e46d0ed upstream.
    
    else we get null deref when one of the attributes is missing, both
    must be non-null.
    
    Reported-by: syzbot+76d0b80493ac881ff77b@syzkaller.appspotmail.com
    Fixes: aaecfdb5c5dd8ba ("netfilter: nf_tables: match on tunnel metadata")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbc01968ae892a4f587076c6f8c36fb4a86c3995
Author: Eyal Birger <eyal.birger@gmail.com>
Date:   Tue Jan 14 10:03:50 2020 +0200

    netfilter: nat: fix ICMP header corruption on ICMP errors
    
    commit 61177e911dad660df86a4553eb01c95ece2f6a82 upstream.
    
    Commit 8303b7e8f018 ("netfilter: nat: fix spurious connection timeouts")
    made nf_nat_icmp_reply_translation() use icmp_manip_pkt() as the l4
    manipulation function for the outer packet on ICMP errors.
    
    However, icmp_manip_pkt() assumes the packet has an 'id' field which
    is not correct for all types of ICMP messages.
    
    This is not correct for ICMP error packets, and leads to bogus bytes
    being written the ICMP header, which can be wrongfully regarded as
    'length' bytes by RFC 4884 compliant receivers.
    
    Fix by assigning the 'id' field only for ICMP messages that have this
    semantic.
    
    Reported-by: Shmulik Ladkani <shmulik.ladkani@gmail.com>
    Fixes: 8303b7e8f018 ("netfilter: nat: fix spurious connection timeouts")
    Signed-off-by: Eyal Birger <eyal.birger@gmail.com>
    Acked-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4650e3af030954d95d2a49d2f3da51378aa7e2a
Author: Florian Westphal <fw@strlen.de>
Date:   Sat Jan 11 23:19:53 2020 +0100

    netfilter: arp_tables: init netns pointer in xt_tgdtor_param struct
    
    commit 212e7f56605ef9688d0846db60c6c6ec06544095 upstream.
    
    An earlier commit (1b789577f655060d98d20e,
    "netfilter: arp_tables: init netns pointer in xt_tgchk_param struct")
    fixed missing net initialization for arptables, but turns out it was
    incomplete.  We can get a very similar struct net NULL deref during
    error unwinding:
    
    general protection fault: 0000 [#1] PREEMPT SMP KASAN
    RIP: 0010:xt_rateest_put+0xa1/0x440 net/netfilter/xt_RATEEST.c:77
     xt_rateest_tg_destroy+0x72/0xa0 net/netfilter/xt_RATEEST.c:175
     cleanup_entry net/ipv4/netfilter/arp_tables.c:509 [inline]
     translate_table+0x11f4/0x1d80 net/ipv4/netfilter/arp_tables.c:587
     do_replace net/ipv4/netfilter/arp_tables.c:981 [inline]
     do_arpt_set_ctl+0x317/0x650 net/ipv4/netfilter/arp_tables.c:1461
    
    Also init the netns pointer in xt_tgdtor_param struct.
    
    Fixes: add67461240c1d ("netfilter: add struct net * to target parameters")
    Reported-by: syzbot+91bdd8eece0f6629ec8b@syzkaller.appspotmail.com
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7253498cc2446dd92d5342bea99ef4af5d71916f
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Fri Jan 10 11:53:08 2020 -0800

    netfilter: fix a use-after-free in mtype_destroy()
    
    commit c120959387efa51479056fd01dc90adfba7a590c upstream.
    
    map->members is freed by ip_set_free() right before using it in
    mtype_ext_cleanup() again. So we just have to move it down.
    
    Reported-by: syzbot+4c3cc6dbe7259dbf9054@syzkaller.appspotmail.com
    Fixes: 40cd63bf33b2 ("netfilter: ipset: Support extensions which need a per data destroy function")
    Acked-by: Jozsef Kadlecsik <kadlec@netfilter.org>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 404ece795341348d3f018f11aba4615e5193ad95
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Mon Jan 13 18:29:54 2020 +0100

    i2c: iop3xx: Fix memory leak in probe error path
    
    commit e64175776d06a8ceebbfd349d7e66a4a46ca39ef upstream.
    
    When handling devm_gpiod_get_optional() errors, free the memory already
    allocated.  This fixes Smatch warnings:
    
        drivers/i2c/busses/i2c-iop3xx.c:437 iop3xx_i2c_probe() warn: possible memory leak of 'new_adapter'
        drivers/i2c/busses/i2c-iop3xx.c:442 iop3xx_i2c_probe() warn: possible memory leak of 'new_adapter'
    
    Fixes: fdb7e884ad61 ("i2c: iop: Use GPIO descriptors")
    Reported-by: kbuild test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 049e7aba3c2b2917231026f8ec4e037b2ee2e73f
Author: Lingpeng Chen <forrest0579@gmail.com>
Date:   Thu Jan 9 09:48:33 2020 +0800

    bpf/sockmap: Read psock ingress_msg before sk_receive_queue
    
    commit e7a5f1f1cd0008e5ad379270a8657e121eedb669 upstream.
    
    Right now in tcp_bpf_recvmsg, sock read data first from sk_receive_queue
    if not empty than psock->ingress_msg otherwise. If a FIN packet arrives
    and there's also some data in psock->ingress_msg, the data in
    psock->ingress_msg will be purged. It is always happen when request to a
    HTTP1.0 server like python SimpleHTTPServer since the server send FIN
    packet after data is sent out.
    
    Fixes: 604326b41a6fb ("bpf, sockmap: convert to generic sk_msg interface")
    Reported-by: Arika Chen <eaglesora@gmail.com>
    Suggested-by: Arika Chen <eaglesora@gmail.com>
    Signed-off-by: Lingpeng Chen <forrest0579@gmail.com>
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Song Liu <songliubraving@fb.com>
    Link: https://lore.kernel.org/bpf/20200109014833.18951-1-forrest0579@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98268bf6c96c9e0e2462674ada0859b46791043f
Author: Felix Fietkau <nbd@nbd.name>
Date:   Mon Jan 13 19:21:07 2020 +0100

    cfg80211: fix page refcount issue in A-MSDU decap
    
    commit 81c044fc3bdc5b7be967cd3682528ea94b58c06a upstream.
    
    The fragments attached to a skb can be part of a compound page. In that case,
    page_ref_inc will increment the refcount for the wrong page. Fix this by
    using get_page instead, which calls page_ref_inc on the compound head and
    also checks for overflow.
    
    Fixes: 2b67f944f88c ("cfg80211: reuse existing page fragments in A-MSDU rx")
    Cc: stable@vger.kernel.org
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Link: https://lore.kernel.org/r/20200113182107.20461-1-nbd@nbd.name
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7c9d9df172d12d9c09245adff858d49c8c22625
Author: Felix Fietkau <nbd@nbd.name>
Date:   Wed Jan 8 18:06:30 2020 +0100

    cfg80211: fix memory leak in cfg80211_cqm_rssi_update
    
    commit df16737d438f534d0cc9948c7c5158f1986c5c87 upstream.
    
    The per-tid statistics need to be released after the call to rdev_get_station
    
    Cc: stable@vger.kernel.org
    Fixes: 8689c051a201 ("cfg80211: dynamically allocate per-tid stats for station info")
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Link: https://lore.kernel.org/r/20200108170630.33680-2-nbd@nbd.name
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a30704a5fd00b9d36dc9ca0a159217fba550fd9
Author: Felix Fietkau <nbd@nbd.name>
Date:   Wed Jan 8 18:06:29 2020 +0100

    cfg80211: fix memory leak in nl80211_probe_mesh_link
    
    commit 2a279b34169e9bbf7c240691466420aba75b4175 upstream.
    
    The per-tid statistics need to be released after the call to rdev_get_station
    
    Cc: stable@vger.kernel.org
    Fixes: 5ab92e7fe49a ("cfg80211: add support to probe unexercised mesh link")
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Link: https://lore.kernel.org/r/20200108170630.33680-1-nbd@nbd.name
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ba1df726c9c25e107e5006954d0e0657346f4c8
Author: Markus Theil <markus.theil@tu-ilmenau.de>
Date:   Wed Jan 8 12:55:36 2020 +0100

    cfg80211: fix deadlocks in autodisconnect work
    
    commit 5a128a088a2ab0b5190eeb232b5aa0b1017a0317 upstream.
    
    Use methods which do not try to acquire the wdev lock themselves.
    
    Cc: stable@vger.kernel.org
    Fixes: 37b1c004685a3 ("cfg80211: Support all iftypes in autodisconnect_wk")
    Signed-off-by: Markus Theil <markus.theil@tu-ilmenau.de>
    Link: https://lore.kernel.org/r/20200108115536.2262-1-markus.theil@tu-ilmenau.de
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0885de5cc48efee30eb4ab7f02cb74c5f12aa70
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Tue Jan 14 04:34:36 2020 +0300

    i2c: tegra: Properly disable runtime PM on driver's probe error
    
    commit 24a49678f5e20f18006e71b90ac1531876b27eb1 upstream.
    
    One of the recent Tegra I2C commits made a change that resumes runtime PM
    during driver's probe, but it missed to put the RPM in a case of error.
    Note that it's not correct to use pm_runtime_status_suspended because it
    breaks RPM refcounting.
    
    Fixes: 8ebf15e9c869 ("i2c: tegra: Move suspend handling to NOIRQ phase")
    Cc: <stable@vger.kernel.org> # v5.4+
    Tested-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 836162fa1368cb979a3522f8f91dc4e98d289bda
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Tue Jan 14 04:34:35 2020 +0300

    i2c: tegra: Fix suspending in active runtime PM state
    
    commit 9f42de8d4ec2304f10bbc51dc0484f3503d61196 upstream.
    
    I noticed that sometime I2C clock is kept enabled during suspend-resume.
    This happens because runtime PM defers dynamic suspension and thus it may
    happen that runtime PM is in active state when system enters into suspend.
    In particular I2C controller that is used for CPU's DVFS is often kept ON
    during suspend because CPU's voltage scaling happens quite often.
    
    Fixes: 8ebf15e9c869 ("i2c: tegra: Move suspend handling to NOIRQ phase")
    Cc: <stable@vger.kernel.org> # v5.4+
    Tested-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c95e4fb88714895283df9165b0d718794d50b41
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Sat Jan 11 06:12:06 2020 +0000

    bpf: Sockmap/tls, fix pop data with SK_DROP return code
    
    commit 7361d44896ff20d48bdd502d1a0cd66308055d45 upstream.
    
    When user returns SK_DROP we need to reset the number of copied bytes
    to indicate to the user the bytes were dropped and not sent. If we
    don't reset the copied arg sendmsg will return as if those bytes were
    copied giving the user a positive return value.
    
    This works as expected today except in the case where the user also
    pops bytes. In the pop case the sg.size is reduced but we don't correctly
    account for this when copied bytes is reset. The popped bytes are not
    accounted for and we return a small positive value potentially confusing
    the user.
    
    The reason this happens is due to a typo where we do the wrong comparison
    when accounting for pop bytes. In this fix notice the if/else is not
    needed and that we have a similar problem if we push data except its not
    visible to the user because if delta is larger the sg.size we return a
    negative value so it appears as an error regardless.
    
    Fixes: 7246d8ed4dcce ("bpf: helper to pop data from messages")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Jonathan Lemon <jonathan.lemon@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/bpf/20200111061206.8028-9-john.fastabend@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d529d6c9f7e3aaeac13c4948f79799ccb825f29d
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Sat Jan 11 06:12:05 2020 +0000

    bpf: Sockmap/tls, skmsg can have wrapped skmsg that needs extra chaining
    
    commit 9aaaa56845a06aeabdd597cbe19492dc01f281ec upstream.
    
    Its possible through a set of push, pop, apply helper calls to construct
    a skmsg, which is just a ring of scatterlist elements, with the start
    value larger than the end value. For example,
    
          end       start
      |_0_|_1_| ... |_n_|_n+1_|
    
    Where end points at 1 and start points and n so that valid elements is
    the set {n, n+1, 0, 1}.
    
    Currently, because we don't build the correct chain only {n, n+1} will
    be sent. This adds a check and sg_chain call to correctly submit the
    above to the crypto and tls send path.
    
    Fixes: d3b18ad31f93d ("tls: add bpf support to sk_msg handling")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Jonathan Lemon <jonathan.lemon@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/bpf/20200111061206.8028-8-john.fastabend@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 147fd4dc2acba06d062a67dd7c2d21b3b462e91c
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Sat Jan 11 06:12:04 2020 +0000

    bpf: Sockmap/tls, tls_sw can create a plaintext buf > encrypt buf
    
    commit d468e4775c1c351616947ba0cccc43273963b9b5 upstream.
    
    It is possible to build a plaintext buffer using push helper that is larger
    than the allocated encrypt buffer. When this record is pushed to crypto
    layers this can result in a NULL pointer dereference because the crypto
    API expects the encrypt buffer is large enough to fit the plaintext
    buffer. Kernel splat below.
    
    To resolve catch the cases this can happen and split the buffer into two
    records to send individually. Unfortunately, there is still one case to
    handle where the split creates a zero sized buffer. In this case we merge
    the buffers and unmark the split. This happens when apply is zero and user
    pushed data beyond encrypt buffer. This fixes the original case as well
    because the split allocated an encrypt buffer larger than the plaintext
    buffer and the merge simply moves the pointers around so we now have
    a reference to the new (larger) encrypt buffer.
    
    Perhaps its not ideal but it seems the best solution for a fixes branch
    and avoids handling these two cases, (a) apply that needs split and (b)
    non apply case. The are edge cases anyways so optimizing them seems not
    necessary unless someone wants later in next branches.
    
    [  306.719107] BUG: kernel NULL pointer dereference, address: 0000000000000008
    [...]
    [  306.747260] RIP: 0010:scatterwalk_copychunks+0x12f/0x1b0
    [...]
    [  306.770350] Call Trace:
    [  306.770956]  scatterwalk_map_and_copy+0x6c/0x80
    [  306.772026]  gcm_enc_copy_hash+0x4b/0x50
    [  306.772925]  gcm_hash_crypt_remain_continue+0xef/0x110
    [  306.774138]  gcm_hash_crypt_continue+0xa1/0xb0
    [  306.775103]  ? gcm_hash_crypt_continue+0xa1/0xb0
    [  306.776103]  gcm_hash_assoc_remain_continue+0x94/0xa0
    [  306.777170]  gcm_hash_assoc_continue+0x9d/0xb0
    [  306.778239]  gcm_hash_init_continue+0x8f/0xa0
    [  306.779121]  gcm_hash+0x73/0x80
    [  306.779762]  gcm_encrypt_continue+0x6d/0x80
    [  306.780582]  crypto_gcm_encrypt+0xcb/0xe0
    [  306.781474]  crypto_aead_encrypt+0x1f/0x30
    [  306.782353]  tls_push_record+0x3b9/0xb20 [tls]
    [  306.783314]  ? sk_psock_msg_verdict+0x199/0x300
    [  306.784287]  bpf_exec_tx_verdict+0x3f2/0x680 [tls]
    [  306.785357]  tls_sw_sendmsg+0x4a3/0x6a0 [tls]
    
    test_sockmap test signature to trigger bug,
    
    [TEST]: (1, 1, 1, sendmsg, pass,redir,start 1,end 2,pop (1,2),ktls,):
    
    Fixes: d3b18ad31f93d ("tls: add bpf support to sk_msg handling")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Jonathan Lemon <jonathan.lemon@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/bpf/20200111061206.8028-7-john.fastabend@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ae0793f8fe491d7afcf3993d69281f04dc4c1f2
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Sat Jan 11 06:12:03 2020 +0000

    bpf: Sockmap/tls, msg_push_data may leave end mark in place
    
    commit cf21e9ba1eb86c9333ca5b05b2f1cc94021bcaef upstream.
    
    Leaving an incorrect end mark in place when passing to crypto
    layer will cause crypto layer to stop processing data before
    all data is encrypted. To fix clear the end mark on push
    data instead of expecting users of the helper to clear the
    mark value after the fact.
    
    This happens when we push data into the middle of a skmsg and
    have room for it so we don't do a set of copies that already
    clear the end flag.
    
    Fixes: 6fff607e2f14b ("bpf: sk_msg program helper bpf_msg_push_data")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Song Liu <songliubraving@fb.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/bpf/20200111061206.8028-6-john.fastabend@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b332bffe9ac55272b22c6f286252e6b7b25149b3
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Sat Jan 11 06:12:02 2020 +0000

    bpf: Sockmap, skmsg helper overestimates push, pull, and pop bounds
    
    commit 6562e29cf6f0ddd368657d97a8d484ffc30df5ef upstream.
    
    In the push, pull, and pop helpers operating on skmsg objects to make
    data writable or insert/remove data we use this bounds check to ensure
    specified data is valid,
    
     /* Bounds checks: start and pop must be inside message */
     if (start >= offset + l || last >= msg->sg.size)
         return -EINVAL;
    
    The problem here is offset has already included the length of the
    current element the 'l' above. So start could be past the end of
    the scatterlist element in the case where start also points into an
    offset on the last skmsg element.
    
    To fix do the accounting slightly different by adding the length of
    the previous entry to offset at the start of the iteration. And
    ensure its initialized to zero so that the first iteration does
    nothing.
    
    Fixes: 604326b41a6fb ("bpf, sockmap: convert to generic sk_msg interface")
    Fixes: 6fff607e2f14b ("bpf: sk_msg program helper bpf_msg_push_data")
    Fixes: 7246d8ed4dcce ("bpf: helper to pop data from messages")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Song Liu <songliubraving@fb.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/bpf/20200111061206.8028-5-john.fastabend@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2aa7a1ed375c25500c2ef300930f1d03b83fbd91
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Sat Jan 11 06:12:01 2020 +0000

    bpf: Sockmap/tls, push write_space updates through ulp updates
    
    commit 33bfe20dd7117dd81fd896a53f743a233e1ad64f upstream.
    
    When sockmap sock with TLS enabled is removed we cleanup bpf/psock state
    and call tcp_update_ulp() to push updates to TLS ULP on top. However, we
    don't push the write_space callback up and instead simply overwrite the
    op with the psock stored previous op. This may or may not be correct so
    to ensure we don't overwrite the TLS write space hook pass this field to
    the ULP and have it fixup the ctx.
    
    This completes a previous fix that pushed the ops through to the ULP
    but at the time missed doing this for write_space, presumably because
    write_space TLS hook was added around the same time.
    
    Fixes: 95fa145479fbc ("bpf: sockmap/tls, close can race with map free")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
    Acked-by: Jonathan Lemon <jonathan.lemon@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/bpf/20200111061206.8028-4-john.fastabend@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20ae0cb8983b05136d5293c47fadc99a8ca8ca2d
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Sat Jan 11 06:12:00 2020 +0000

    bpf: Sockmap, ensure sock lock held during tear down
    
    commit 7e81a35302066c5a00b4c72d83e3ea4cad6eeb5b upstream.
    
    The sock_map_free() and sock_hash_free() paths used to delete sockmap
    and sockhash maps walk the maps and destroy psock and bpf state associated
    with the socks in the map. When done the socks no longer have BPF programs
    attached and will function normally. This can happen while the socks in
    the map are still "live" meaning data may be sent/received during the walk.
    
    Currently, though we don't take the sock_lock when the psock and bpf state
    is removed through this path. Specifically, this means we can be writing
    into the ops structure pointers such as sendmsg, sendpage, recvmsg, etc.
    while they are also being called from the networking side. This is not
    safe, we never used proper READ_ONCE/WRITE_ONCE semantics here if we
    believed it was safe. Further its not clear to me its even a good idea
    to try and do this on "live" sockets while networking side might also
    be using the socket. Instead of trying to reason about using the socks
    from both sides lets realize that every use case I'm aware of rarely
    deletes maps, in fact kubernetes/Cilium case builds map at init and
    never tears it down except on errors. So lets do the simple fix and
    grab sock lock.
    
    This patch wraps sock deletes from maps in sock lock and adds some
    annotations so we catch any other cases easier.
    
    Fixes: 604326b41a6fb ("bpf, sockmap: convert to generic sk_msg interface")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Song Liu <songliubraving@fb.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/bpf/20200111061206.8028-3-john.fastabend@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2395bfdbf3a6691cc01ab45f072b0041dd2a53c7
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Sat Jan 11 06:11:59 2020 +0000

    bpf: Sockmap/tls, during free we may call tcp_bpf_unhash() in loop
    
    commit 4da6a196f93b1af7612340e8c1ad8ce71e18f955 upstream.
    
    When a sockmap is free'd and a socket in the map is enabled with tls
    we tear down the bpf context on the socket, the psock struct and state,
    and then call tcp_update_ulp(). The tcp_update_ulp() call is to inform
    the tls stack it needs to update its saved sock ops so that when the tls
    socket is later destroyed it doesn't try to call the now destroyed psock
    hooks.
    
    This is about keeping stacked ULPs in good shape so they always have
    the right set of stacked ops.
    
    However, recently unhash() hook was removed from TLS side. But, the
    sockmap/bpf side is not doing any extra work to update the unhash op
    when is torn down instead expecting TLS side to manage it. So both
    TLS and sockmap believe the other side is managing the op and instead
    no one updates the hook so it continues to point at tcp_bpf_unhash().
    When unhash hook is called we call tcp_bpf_unhash() which detects the
    psock has already been destroyed and calls sk->sk_prot_unhash() which
    calls tcp_bpf_unhash() yet again and so on looping and hanging the core.
    
    To fix have sockmap tear down logic fixup the stale pointer.
    
    Fixes: 5d92e631b8be ("net/tls: partially revert fix transition through disconnect with close")
    Reported-by: syzbot+83979935eb6304f8cd46@syzkaller.appspotmail.com
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Jakub Sitnicki <jakub@cloudflare.com>
    Acked-by: Song Liu <songliubraving@fb.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/bpf/20200111061206.8028-2-john.fastabend@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a19ed4acec4100f8848b04897e3c20c0262b58a5
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Wed Jan 15 21:47:33 2020 +0100

    bpf: Fix incorrect verifier simulation of ARSH under ALU32
    
    commit 0af2ffc93a4b50948f9dad2786b7f1bd253bf0b9 upstream.
    
    Anatoly has been fuzzing with kBdysch harness and reported a hang in one
    of the outcomes:
    
      0: R1=ctx(id=0,off=0,imm=0) R10=fp0
      0: (85) call bpf_get_socket_cookie#46
      1: R0_w=invP(id=0) R10=fp0
      1: (57) r0 &= 808464432
      2: R0_w=invP(id=0,umax_value=808464432,var_off=(0x0; 0x30303030)) R10=fp0
      2: (14) w0 -= 810299440
      3: R0_w=invP(id=0,umax_value=4294967295,var_off=(0xcf800000; 0x3077fff0)) R10=fp0
      3: (c4) w0 s>>= 1
      4: R0_w=invP(id=0,umin_value=1740636160,umax_value=2147221496,var_off=(0x67c00000; 0x183bfff8)) R10=fp0
      4: (76) if w0 s>= 0x30303030 goto pc+216
      221: R0_w=invP(id=0,umin_value=1740636160,umax_value=2147221496,var_off=(0x67c00000; 0x183bfff8)) R10=fp0
      221: (95) exit
      processed 6 insns (limit 1000000) [...]
    
    Taking a closer look, the program was xlated as follows:
    
      # ./bpftool p d x i 12
      0: (85) call bpf_get_socket_cookie#7800896
      1: (bf) r6 = r0
      2: (57) r6 &= 808464432
      3: (14) w6 -= 810299440
      4: (c4) w6 s>>= 1
      5: (76) if w6 s>= 0x30303030 goto pc+216
      6: (05) goto pc-1
      7: (05) goto pc-1
      8: (05) goto pc-1
      [...]
      220: (05) goto pc-1
      221: (05) goto pc-1
      222: (95) exit
    
    Meaning, the visible effect is very similar to f54c7898ed1c ("bpf: Fix
    precision tracking for unbounded scalars"), that is, the fall-through
    branch in the instruction 5 is considered to be never taken given the
    conclusion from the min/max bounds tracking in w6, and therefore the
    dead-code sanitation rewrites it as goto pc-1. However, real-life input
    disagrees with verification analysis since a soft-lockup was observed.
    
    The bug sits in the analysis of the ARSH. The definition is that we shift
    the target register value right by K bits through shifting in copies of
    its sign bit. In adjust_scalar_min_max_vals(), we do first coerce the
    register into 32 bit mode, same happens after simulating the operation.
    However, for the case of simulating the actual ARSH, we don't take the
    mode into account and act as if it's always 64 bit, but location of sign
    bit is different:
    
      dst_reg->smin_value >>= umin_val;
      dst_reg->smax_value >>= umin_val;
      dst_reg->var_off = tnum_arshift(dst_reg->var_off, umin_val);
    
    Consider an unknown R0 where bpf_get_socket_cookie() (or others) would
    for example return 0xffff. With the above ARSH simulation, we'd see the
    following results:
    
      [...]
      1: R1=ctx(id=0,off=0,imm=0) R2_w=invP65535 R10=fp0
      1: (85) call bpf_get_socket_cookie#46
      2: R0_w=invP(id=0) R10=fp0
      2: (57) r0 &= 808464432
        -> R0_runtime = 0x3030
      3: R0_w=invP(id=0,umax_value=808464432,var_off=(0x0; 0x30303030)) R10=fp0
      3: (14) w0 -= 810299440
        -> R0_runtime = 0xcfb40000
      4: R0_w=invP(id=0,umax_value=4294967295,var_off=(0xcf800000; 0x3077fff0)) R10=fp0
                                  (0xffffffff)
      4: (c4) w0 s>>= 1
        -> R0_runtime = 0xe7da0000
      5: R0_w=invP(id=0,umin_value=1740636160,umax_value=2147221496,var_off=(0x67c00000; 0x183bfff8)) R10=fp0
                                  (0x67c00000)           (0x7ffbfff8)
      [...]
    
    In insn 3, we have a runtime value of 0xcfb40000, which is '1100 1111 1011
    0100 0000 0000 0000 0000', the result after the shift has 0xe7da0000 that
    is '1110 0111 1101 1010 0000 0000 0000 0000', where the sign bit is correctly
    retained in 32 bit mode. In insn4, the umax was 0xffffffff, and changed into
    0x7ffbfff8 after the shift, that is, '0111 1111 1111 1011 1111 1111 1111 1000'
    and means here that the simulation didn't retain the sign bit. With above
    logic, the updates happen on the 64 bit min/max bounds and given we coerced
    the register, the sign bits of the bounds are cleared as well, meaning, we
    need to force the simulation into s32 space for 32 bit alu mode.
    
    Verification after the fix below. We're first analyzing the fall-through branch
    on 32 bit signed >= test eventually leading to rejection of the program in this
    specific case:
    
      0: R1=ctx(id=0,off=0,imm=0) R10=fp0
      0: (b7) r2 = 808464432
      1: R1=ctx(id=0,off=0,imm=0) R2_w=invP808464432 R10=fp0
      1: (85) call bpf_get_socket_cookie#46
      2: R0_w=invP(id=0) R10=fp0
      2: (bf) r6 = r0
      3: R0_w=invP(id=0) R6_w=invP(id=0) R10=fp0
      3: (57) r6 &= 808464432
      4: R0_w=invP(id=0) R6_w=invP(id=0,umax_value=808464432,var_off=(0x0; 0x30303030)) R10=fp0
      4: (14) w6 -= 810299440
      5: R0_w=invP(id=0) R6_w=invP(id=0,umax_value=4294967295,var_off=(0xcf800000; 0x3077fff0)) R10=fp0
      5: (c4) w6 s>>= 1
      6: R0_w=invP(id=0) R6_w=invP(id=0,umin_value=3888119808,umax_value=4294705144,var_off=(0xe7c00000; 0x183bfff8)) R10=fp0
                                                  (0x67c00000)          (0xfffbfff8)
      6: (76) if w6 s>= 0x30303030 goto pc+216
      7: R0_w=invP(id=0) R6_w=invP(id=0,umin_value=3888119808,umax_value=4294705144,var_off=(0xe7c00000; 0x183bfff8)) R10=fp0
      7: (30) r0 = *(u8 *)skb[808464432]
      BPF_LD_[ABS|IND] uses reserved fields
      processed 8 insns (limit 1000000) [...]
    
    Fixes: 9cbe1f5a32dc ("bpf/verifier: improve register value range tracking with ARSH")
    Reported-by: Anatoly Trosinenko <anatoly.trosinenko@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20200115204733.16648-1-daniel@iogearbox.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 879043dc5c25338d6adfab910c5801013b537eeb
Author: Mario Kleiner <mario.kleiner.de@gmail.com>
Date:   Thu Jan 9 16:20:27 2020 +0100

    drm/amd/display: Reorder detect_edp_sink_caps before link settings read.
    
    [ Upstream commit 3b7c59754cc22760760a84ebddb8e0b1e8dd871b ]
    
    read_current_link_settings_on_detect() on eDP 1.4+ may use the
    edp_supported_link_rates table which is set up by
    detect_edp_sink_caps(), so that function needs to be called first.
    
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Mario Kleiner <mario.kleiner.de@gmail.com>
    Cc: Martin Leung <martin.leung@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ecc610a30ddf02d08be0058fe788c4dd7bec487
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Tue Dec 17 16:23:29 2019 -0800

    block: Fix the type of 'sts' in bsg_queue_rq()
    
    commit c44a4edb20938c85b64a256661443039f5bffdea upstream.
    
    This patch fixes the following sparse warnings:
    
    block/bsg-lib.c:269:19: warning: incorrect type in initializer (different base types)
    block/bsg-lib.c:269:19:    expected int sts
    block/bsg-lib.c:269:19:    got restricted blk_status_t [usertype]
    block/bsg-lib.c:286:16: warning: incorrect type in return expression (different base types)
    block/bsg-lib.c:286:16:    expected restricted blk_status_t
    block/bsg-lib.c:286:16:    got int [assigned] sts
    
    Cc: Martin Wilck <mwilck@suse.com>
    Fixes: d46fe2cb2dce ("block: drop device references in bsg_queue_rq()")
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51ba5ebd8df7c92caba4e3cdc2b65d6f56000d88
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Dec 16 18:52:45 2019 -0800

    net: fix kernel-doc warning in <linux/netdevice.h>
    
    commit 1f26c0d3d24125992ab0026b0dab16c08df947c7 upstream.
    
    Fix missing '*' kernel-doc notation that causes this warning:
    
    ../include/linux/netdevice.h:1779: warning: bad line:                                 spinlock
    
    Fixes: ab92d68fc22f ("net: core: add generic lockdep keys")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e7c55aabfd567e60542f7a2d09419226653ff72
Author: Tuong Lien <tuong.t.lien@dektech.com.au>
Date:   Tue Dec 10 15:21:04 2019 +0700

    tipc: fix retrans failure due to wrong destination
    
    commit abc9b4e0549b93fdaff56e9532bc49a2d7b04955 upstream.
    
    When a user message is sent, TIPC will check if the socket has faced a
    congestion at link layer. If that happens, it will make a sleep to wait
    for the congestion to disappear. This leaves a gap for other users to
    take over the socket (e.g. multi threads) since the socket is released
    as well. Also, in case of connectionless (e.g. SOCK_RDM), user is free
    to send messages to various destinations (e.g. via 'sendto()'), then
    the socket's preformatted header has to be updated correspondingly
    prior to the actual payload message building.
    
    Unfortunately, the latter action is done before the first action which
    causes a condition issue that the destination of a certain message can
    be modified incorrectly in the middle, leading to wrong destination
    when that message is built. Consequently, when the message is sent to
    the link layer, it gets stuck there forever because the peer node will
    simply reject it. After a number of retransmission attempts, the link
    is eventually taken down and the retransmission failure is reported.
    
    This commit fixes the problem by rearranging the order of actions to
    prevent the race condition from occurring, so the message building is
    'atomic' and its header will not be modified by anyone.
    
    Fixes: 365ad353c256 ("tipc: reduce risk of user starvation during link congestion")
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Tuong Lien <tuong.t.lien@dektech.com.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f83b9570297cf92d225fe193f5f2ad68a59dab3b
Author: Tuong Lien <tuong.t.lien@dektech.com.au>
Date:   Tue Dec 10 15:21:03 2019 +0700

    tipc: fix potential hanging after b/rcast changing
    
    commit dca4a17d24ee9d878836ce5eb8dc25be1ffa5729 upstream.
    
    In commit c55c8edafa91 ("tipc: smooth change between replicast and
    broadcast"), we allow instant switching between replicast and broadcast
    by sending a dummy 'SYN' packet on the last used link to synchronize
    packets on the links. The 'SYN' message is an object of link congestion
    also, so if that happens, a 'SOCK_WAKEUP' will be scheduled to be sent
    back to the socket...
    However, in that commit, we simply use the same socket 'cong_link_cnt'
    counter for both the 'SYN' & normal payload message sending. Therefore,
    if both the replicast & broadcast links are congested, the counter will
    be not updated correctly but overwritten by the latter congestion.
    Later on, when the 'SOCK_WAKEUP' messages are processed, the counter is
    reduced one by one and eventually overflowed. Consequently, further
    activities on the socket will only wait for the false congestion signal
    to disappear but never been met.
    
    Because sending the 'SYN' message is vital for the mechanism, it should
    be done anyway. This commit fixes the issue by marking the message with
    an error code e.g. 'TIPC_ERR_NO_PORT', so its sending should not face a
    link congestion, there is no need to touch the socket 'cong_link_cnt'
    either. In addition, in the event of any error (e.g. -ENOBUFS), we will
    purge the entire payload message queue and make a return immediately.
    
    Fixes: c55c8edafa91 ("tipc: smooth change between replicast and broadcast")
    Acked-by: Jon Maloy <jon.maloy@ericsson.com>
    Signed-off-by: Tuong Lien <tuong.t.lien@dektech.com.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ef078e942c483e1577cf31a2c1c76b60f1ac176
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Nov 20 15:26:13 2019 +0100

    reset: Fix {of,devm}_reset_control_array_get kerneldoc return types
    
    commit 723c0011c7f6992f57e2c629fa9c89141acc115f upstream.
    
    of_reset_control_array_get() and devm_reset_control_array_get() return
    struct reset_control pointers, not internal struct reset_control_array
    pointers, just like all other reset control API calls.
    
    Correct the kerneldoc to match the code.
    
    Fixes: 17c82e206d2a3cd8 ("reset: Add APIs to manage array of resets")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b5d1613f34cf5ccc1fbc0ba720ae40455e32f5f
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Wed Dec 18 11:17:42 2019 +0100

    net: stmmac: Enable 16KB buffer size
    
    commit b2f3a481c4cd62f78391b836b64c0a6e72b503d2 upstream.
    
    XGMAC supports maximum MTU that can go to 16KB. Lets add this check in
    the calculation of RX buffer size.
    
    Fixes: 7ac6653a085b ("stmmac: Move the STMicroelectronics driver")
    Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77859b5bff0cea5ea1a329dbc4bad9aa91fb7ea8
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Wed Dec 18 11:17:41 2019 +0100

    net: stmmac: 16KB buffer must be 16 byte aligned
    
    commit 8605131747e7e1fd8f6c9f97a00287aae2b2c640 upstream.
    
    The 16KB RX Buffer must also be 16 byte aligned. Fix it.
    
    Fixes: 7ac6653a085b ("stmmac: Move the STMicroelectronics driver")
    Signed-off-by: Jose Abreu <Jose.Abreu@synopsys.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11675e1fa824e9860c59ac5dd298bf3f52c7a205
Author: Marcel Ziswiler <marcel.ziswiler@toradex.com>
Date:   Wed Jan 8 17:12:31 2020 +0100

    ARM: dts: imx7: Fix Toradex Colibri iMX7S 256MB NAND flash support
    
    commit 4b0b97e651ecf29f20248420b52b6864fbd40bc2 upstream.
    
    Turns out when introducing the eMMC version the gpmi node required for
    NAND flash support got enabled exclusively on Colibri iMX7D 512MB.
    
    Fixes: f928a4a377e4 ("ARM: dts: imx7: add Toradex Colibri iMX7D 1GB (eMMC) support")
    Signed-off-by: Marcel Ziswiler <marcel.ziswiler@toradex.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34218ec83947a467d6c217af4e92f0a413c7dce6
Author: Jagan Teki <jagan@amarulasolutions.com>
Date:   Mon Dec 30 17:30:19 2019 +0530

    ARM: dts: imx6q-icore-mipi: Use 1.5 version of i.Core MX6DL
    
    commit 4a132f60808ae3a751e107a373f8572012352d3c upstream.
    
    The EDIMM STARTER KIT i.Core 1.5 MIPI Evaluation is based on
    the 1.5 version of the i.Core MX6 cpu module. The 1.5 version
    differs from the original one for a few details, including the
    ethernet PHY interface clock provider.
    
    With this commit, the ethernet interface works properly:
    SMSC LAN8710/LAN8720 2188000.ethernet-1:00: attached PHY driver
    
    While before using the 1.5 version, ethernet failed to startup
    do to un-clocked PHY interface:
    fec 2188000.ethernet eth0: could not attach to PHY
    
    Similar fix has merged for i.Core MX6Q but missed to update for DL.
    
    Fixes: a8039f2dd089 ("ARM: dts: imx6dl: Add Engicam i.CoreM6 1.5 Quad/Dual MIPI starter kit support")
    Cc: Jacopo Mondi <jacopo@jmondi.org>
    Signed-off-by: Michael Trimarchi <michael@amarulasolutions.com>
    Signed-off-by: Jagan Teki <jagan@amarulasolutions.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4b47a19a119ab5cfff51c096b2242295ff944d1
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Mon Dec 30 09:41:10 2019 +0800

    ARM: dts: imx6sll-evk: Remove incorrect power supply assignment
    
    commit 3479b2843c78ffb60247f522226ba68f93aee355 upstream.
    
    The vdd3p0 LDO's input should be from external USB VBUS directly, NOT
    PMIC's power supply, the vdd3p0 LDO's target output voltage can be
    controlled by SW, and it requires input voltage to be high enough, with
    incorrect power supply assigned, if the power supply's voltage is lower
    than the LDO target output voltage, it will return fail and skip the LDO
    voltage adjustment, so remove the power supply assignment for vdd3p0 to
    avoid such scenario.
    
    Fixes: 96a9169cf621 ("ARM: dts: imx6sll-evk: Assign corresponding power supply for vdd3p0")
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef5eb0274717429e1f48f3a4d81c3bf91b56fcdb
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Mon Dec 30 09:41:09 2019 +0800

    ARM: dts: imx6sl-evk: Remove incorrect power supply assignment
    
    commit b4eb9ef0e29cd28c6fd684e0ab77bda824acb20e upstream.
    
    The vdd3p0 LDO's input should be from external USB VBUS directly, NOT
    PMIC's power supply, the vdd3p0 LDO's target output voltage can be
    controlled by SW, and it requires input voltage to be high enough, with
    incorrect power supply assigned, if the power supply's voltage is lower
    than the LDO target output voltage, it will return fail and skip the LDO
    voltage adjustment, so remove the power supply assignment for vdd3p0 to
    avoid such scenario.
    
    Fixes: 3feea8805d6f ("ARM: dts: imx6sl-evk: Assign corresponding power supply for LDOs")
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20a7201b9c92aa317d2e3d97235a1a91cc3afdb2
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Mon Dec 30 09:41:08 2019 +0800

    ARM: dts: imx6sx-sdb: Remove incorrect power supply assignment
    
    commit d4918ebb5c256d26696a13e78ac68c146111191a upstream.
    
    The vdd3p0 LDO's input should be from external USB VBUS directly, NOT
    PMIC's power supply, the vdd3p0 LDO's target output voltage can be
    controlled by SW, and it requires input voltage to be high enough, with
    incorrect power supply assigned, if the power supply's voltage is lower
    than the LDO target output voltage, it will return fail and skip the LDO
    voltage adjustment, so remove the power supply assignment for vdd3p0 to
    avoid such scenario.
    
    Fixes: 37a4bdead109 ("ARM: dts: imx6sx-sdb: Assign corresponding power supply for LDOs")
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42f457848d07be1586e0fd10e7cae2be264ee599
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Mon Dec 30 09:41:07 2019 +0800

    ARM: dts: imx6qdl-sabresd: Remove incorrect power supply assignment
    
    commit 4521de30fbb3f5be0db58de93582ebce72c9d44f upstream.
    
    The vdd3p0 LDO's input should be from external USB VBUS directly, NOT
    PMIC's power supply, the vdd3p0 LDO's target output voltage can be
    controlled by SW, and it requires input voltage to be high enough, with
    incorrect power supply assigned, if the power supply's voltage is lower
    than the LDO target output voltage, it will return fail and skip the LDO
    voltage adjustment, so remove the power supply assignment for vdd3p0 to
    avoid such scenario.
    
    Fixes: 93385546ba36 ("ARM: dts: imx6qdl-sabresd: Assign corresponding power supply for LDOs")
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6943bddae1c3a78605419cdb803b2d3716ea633f
Author: Yang Shi <yang.shi@linux.alibaba.com>
Date:   Mon Jan 13 16:29:36 2020 -0800

    mm: khugepaged: add trace status description for SCAN_PAGE_HAS_PRIVATE
    
    commit 554913f600b45d73de12ad58c1ac7baa0f22a703 upstream.
    
    Commit 99cb0dbd47a1 ("mm,thp: add read-only THP support for (non-shmem)
    FS") introduced a new khugepaged scan result: SCAN_PAGE_HAS_PRIVATE, but
    the corresponding description for trace events were not added.
    
    Link: http://lkml.kernel.org/r/1574793844-2914-1-git-send-email-yang.shi@linux.alibaba.com
    Fixes: 99cb0dbd47a1 ("mm,thp: add read-only THP support for (non-shmem) FS")
    Signed-off-by: Yang Shi <yang.shi@linux.alibaba.com>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Anshuman Khandual <anshuman.khandual@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36875206a3c59ab929e854816830cbeed294a76c
Author: Wen Yang <wenyang@linux.alibaba.com>
Date:   Mon Jan 13 16:29:23 2020 -0800

    mm/page-writeback.c: avoid potential division by zero in wb_min_max_ratio()
    
    commit 6d9e8c651dd979aa666bee15f086745f3ea9c4b3 upstream.
    
    Patch series "use div64_ul() instead of div_u64() if the divisor is
    unsigned long".
    
    We were first inspired by commit b0ab99e7736a ("sched: Fix possible divide
    by zero in avg_atom () calculation"), then refer to the recently analyzed
    mm code, we found this suspicious place.
    
     201                 if (min) {
     202                         min *= this_bw;
     203                         do_div(min, tot_bw);
     204                 }
    
    And we also disassembled and confirmed it:
    
      /usr/src/debug/kernel-4.9.168-016.ali3000/linux-4.9.168-016.ali3000.alios7.x86_64/mm/page-writeback.c: 201
      0xffffffff811c37da <__wb_calc_thresh+234>:      xor    %r10d,%r10d
      0xffffffff811c37dd <__wb_calc_thresh+237>:      test   %rax,%rax
      0xffffffff811c37e0 <__wb_calc_thresh+240>:      je 0xffffffff811c3800 <__wb_calc_thresh+272>
      /usr/src/debug/kernel-4.9.168-016.ali3000/linux-4.9.168-016.ali3000.alios7.x86_64/mm/page-writeback.c: 202
      0xffffffff811c37e2 <__wb_calc_thresh+242>:      imul   %r8,%rax
      /usr/src/debug/kernel-4.9.168-016.ali3000/linux-4.9.168-016.ali3000.alios7.x86_64/mm/page-writeback.c: 203
      0xffffffff811c37e6 <__wb_calc_thresh+246>:      mov    %r9d,%r10d    ---> truncates it to 32 bits here
      0xffffffff811c37e9 <__wb_calc_thresh+249>:      xor    %edx,%edx
      0xffffffff811c37eb <__wb_calc_thresh+251>:      div    %r10
      0xffffffff811c37ee <__wb_calc_thresh+254>:      imul   %rbx,%rax
      0xffffffff811c37f2 <__wb_calc_thresh+258>:      shr    $0x2,%rax
      0xffffffff811c37f6 <__wb_calc_thresh+262>:      mul    %rcx
      0xffffffff811c37f9 <__wb_calc_thresh+265>:      shr    $0x2,%rdx
      0xffffffff811c37fd <__wb_calc_thresh+269>:      mov    %rdx,%r10
    
    This series uses div64_ul() instead of div_u64() if the divisor is
    unsigned long, to avoid truncation to 32-bit on 64-bit platforms.
    
    This patch (of 3):
    
    The variables 'min' and 'max' are unsigned long and do_div truncates
    them to 32 bits, which means it can test non-zero and be truncated to
    zero for division.  Fix this issue by using div64_ul() instead.
    
    Link: http://lkml.kernel.org/r/20200102081442.8273-2-wenyang@linux.alibaba.com
    Fixes: 693108a8a667 ("writeback: make bdi->min/max_ratio handling cgroup writeback aware")
    Signed-off-by: Wen Yang <wenyang@linux.alibaba.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Qian Cai <cai@lca.pw>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5147a518f52b9724ed5db7c5a8d62cdc1b9015f7
Author: David Hildenbrand <david@redhat.com>
Date:   Mon Jan 13 16:29:07 2020 -0800

    mm/memory_hotplug: don't free usage map when removing a re-added early section
    
    commit 8068df3b60373c390198f660574ea14c8098de57 upstream.
    
    When we remove an early section, we don't free the usage map, as the
    usage maps of other sections are placed into the same page.  Once the
    section is removed, it is no longer an early section (especially, the
    memmap is freed).  When we re-add that section, the usage map is reused,
    however, it is no longer an early section.  When removing that section
    again, we try to kfree() a usage map that was allocated during early
    boot - bad.
    
    Let's check against PageReserved() to see if we are dealing with an
    usage map that was allocated during boot.  We could also check against
    !(PageSlab(usage_page) || PageCompound(usage_page)), but PageReserved() is
    cleaner.
    
    Can be triggered using memtrace under ppc64/powernv:
    
      $ mount -t debugfs none /sys/kernel/debug/
      $ echo 0x20000000 > /sys/kernel/debug/powerpc/memtrace/enable
      $ echo 0x20000000 > /sys/kernel/debug/powerpc/memtrace/enable
       ------------[ cut here ]------------
       kernel BUG at mm/slub.c:3969!
       Oops: Exception in kernel mode, sig: 5 [#1]
       LE PAGE_SIZE=3D64K MMU=3DHash SMP NR_CPUS=3D2048 NUMA PowerNV
       Modules linked in:
       CPU: 0 PID: 154 Comm: sh Not tainted 5.5.0-rc2-next-20191216-00005-g0be1dba7b7c0 #61
       NIP kfree+0x338/0x3b0
       LR section_deactivate+0x138/0x200
       Call Trace:
         section_deactivate+0x138/0x200
         __remove_pages+0x114/0x150
         arch_remove_memory+0x3c/0x160
         try_remove_memory+0x114/0x1a0
         __remove_memory+0x20/0x40
         memtrace_enable_set+0x254/0x850
         simple_attr_write+0x138/0x160
         full_proxy_write+0x8c/0x110
         __vfs_write+0x38/0x70
         vfs_write+0x11c/0x2a0
         ksys_write+0x84/0x140
         system_call+0x5c/0x68
       ---[ end trace 4b053cbd84e0db62 ]---
    
    The first invocation will offline+remove memory blocks.  The second
    invocation will first add+online them again, in order to offline+remove
    them again (usually we are lucky and the exact same memory blocks will
    get "reallocated").
    
    Tested on powernv with boot memory: The usage map will not get freed.
    Tested on x86-64 with DIMMs: The usage map will get freed.
    
    Using Dynamic Memory under a Power DLAPR can trigger it easily.
    
    Triggering removal (I assume after previously removed+re-added) of
    memory from the HMC GUI can crash the kernel with the same call trace
    and is fixed by this patch.
    
    Link: http://lkml.kernel.org/r/20191217104637.5509-1-david@redhat.com
    Fixes: 326e1b8f83a4 ("mm/sparsemem: introduce a SECTION_IS_EARLY flag")
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Tested-by: Pingfan Liu <piliu@redhat.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Michal Hocko <mhocko@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cef6f2aeda7f00a497e8a60ce78e6eb97a00105c
Author: Filipe Manana <fdmanana@suse.com>
Date:   Thu Jan 16 11:29:20 2020 +0000

    Btrfs: always copy scrub arguments back to user space
    
    commit 5afe6ce748c1ea99e0d648153c05075e1ab93afb upstream.
    
    If scrub returns an error we are not copying back the scrub arguments
    structure to user space. This prevents user space to know how much
    progress scrub has done if an error happened - this includes -ECANCELED
    which is returned when users ask for scrub to stop. A particular use
    case, which is used in btrfs-progs, is to resume scrub after it is
    canceled, in that case it relies on checking the progress from the scrub
    arguments structure and then use that progress in a call to resume
    scrub.
    
    So fix this by always copying the scrub arguments structure to user
    space, overwriting the value returned to user space with -EFAULT only if
    copying the structure failed to let user space know that either that
    copying did not happen, and therefore the structure is stale, or it
    happened partially and the structure is probably not valid and corrupt
    due to the partial copy.
    
    Reported-by: Graham Cobb <g.btrfs@cobb.uk.net>
    Link: https://lore.kernel.org/linux-btrfs/d0a97688-78be-08de-ca7d-bcb4c7fb397e@cobb.uk.net/
    Fixes: 06fe39ab15a6a4 ("Btrfs: do not overwrite scrub error with fault error in scrub ioctl")
    CC: stable@vger.kernel.org # 5.1+
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Tested-by: Graham Cobb <g.btrfs@cobb.uk.net>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f7050c2b279a6aef39f662ded65827a4e608404
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Jan 10 11:11:24 2020 -0500

    btrfs: check rw_devices, not num_devices for balance
    
    commit b35cf1f0bf1f2b0b193093338414b9bd63b29015 upstream.
    
    The fstest btrfs/154 reports
    
      [ 8675.381709] BTRFS: Transaction aborted (error -28)
      [ 8675.383302] WARNING: CPU: 1 PID: 31900 at fs/btrfs/block-group.c:2038 btrfs_create_pending_block_groups+0x1e0/0x1f0 [btrfs]
      [ 8675.390925] CPU: 1 PID: 31900 Comm: btrfs Not tainted 5.5.0-rc6-default+ #935
      [ 8675.392780] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.0-59-gc9ba527-rebuilt.opensuse.org 04/01/2014
      [ 8675.395452] RIP: 0010:btrfs_create_pending_block_groups+0x1e0/0x1f0 [btrfs]
      [ 8675.402672] RSP: 0018:ffffb2090888fb00 EFLAGS: 00010286
      [ 8675.404413] RAX: 0000000000000000 RBX: ffff92026dfa91c8 RCX: 0000000000000001
      [ 8675.406609] RDX: 0000000000000000 RSI: ffffffff8e100899 RDI: ffffffff8e100971
      [ 8675.408775] RBP: ffff920247c61660 R08: 0000000000000000 R09: 0000000000000000
      [ 8675.410978] R10: 0000000000000000 R11: 0000000000000000 R12: 00000000ffffffe4
      [ 8675.412647] R13: ffff92026db74000 R14: ffff920247c616b8 R15: ffff92026dfbc000
      [ 8675.413994] FS:  00007fd5e57248c0(0000) GS:ffff92027d800000(0000) knlGS:0000000000000000
      [ 8675.416146] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      [ 8675.417833] CR2: 0000564aa51682d8 CR3: 000000006dcbc004 CR4: 0000000000160ee0
      [ 8675.419801] Call Trace:
      [ 8675.420742]  btrfs_start_dirty_block_groups+0x355/0x480 [btrfs]
      [ 8675.422600]  btrfs_commit_transaction+0xc8/0xaf0 [btrfs]
      [ 8675.424335]  reset_balance_state+0x14a/0x190 [btrfs]
      [ 8675.425824]  btrfs_balance.cold+0xe7/0x154 [btrfs]
      [ 8675.427313]  ? kmem_cache_alloc_trace+0x235/0x2c0
      [ 8675.428663]  btrfs_ioctl_balance+0x298/0x350 [btrfs]
      [ 8675.430285]  btrfs_ioctl+0x466/0x2550 [btrfs]
      [ 8675.431788]  ? mem_cgroup_charge_statistics+0x51/0xf0
      [ 8675.433487]  ? mem_cgroup_commit_charge+0x56/0x400
      [ 8675.435122]  ? do_raw_spin_unlock+0x4b/0xc0
      [ 8675.436618]  ? _raw_spin_unlock+0x1f/0x30
      [ 8675.438093]  ? __handle_mm_fault+0x499/0x740
      [ 8675.439619]  ? do_vfs_ioctl+0x56e/0x770
      [ 8675.441034]  do_vfs_ioctl+0x56e/0x770
      [ 8675.442411]  ksys_ioctl+0x3a/0x70
      [ 8675.443718]  ? trace_hardirqs_off_thunk+0x1a/0x1c
      [ 8675.445333]  __x64_sys_ioctl+0x16/0x20
      [ 8675.446705]  do_syscall_64+0x50/0x210
      [ 8675.448059]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
      [ 8675.479187] BTRFS: error (device vdb) in btrfs_create_pending_block_groups:2038: errno=-28 No space left
    
    We now use btrfs_can_overcommit() to see if we can flip a block group
    read only.  Before this would fail because we weren't taking into
    account the usable un-allocated space for allocating chunks.  With my
    patches we were allowed to do the balance, which is technically correct.
    
    The test is trying to start balance on degraded mount.  So now we're
    trying to allocate a chunk and cannot because we want to allocate a
    RAID1 chunk, but there's only 1 device that's available for usage.  This
    results in an ENOSPC.
    
    But we shouldn't even be making it this far, we don't have enough
    devices to restripe.  The problem is we're using btrfs_num_devices(),
    that also includes missing devices. That's not actually what we want, we
    need to use rw_devices.
    
    The chunk_mutex is not needed here, rw_devices changes only in device
    add, remove or replace, all are excluded by EXCL_OP mechanism.
    
    Fixes: e4d8ec0f65b9 ("Btrfs: implement online profile changing")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ add stacktrace, update changelog, drop chunk_mutex ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b25e68dd5a683202a34b6ed163a6ff7333d58555
Author: Johannes Thumshirn <johannes.thumshirn@wdc.com>
Date:   Wed Jan 8 21:07:32 2020 +0900

    btrfs: fix memory leak in qgroup accounting
    
    commit 26ef8493e1ab771cb01d27defca2fa1315dc3980 upstream.
    
    When running xfstests on the current btrfs I get the following splat from
    kmemleak:
    
    unreferenced object 0xffff88821b2404e0 (size 32):
      comm "kworker/u4:7", pid 26663, jiffies 4295283698 (age 8.776s)
      hex dump (first 32 bytes):
        01 00 00 00 00 00 00 00 10 ff fd 26 82 88 ff ff  ...........&....
        10 ff fd 26 82 88 ff ff 20 ff fd 26 82 88 ff ff  ...&.... ..&....
      backtrace:
        [<00000000f94fd43f>] ulist_alloc+0x25/0x60 [btrfs]
        [<00000000fd023d99>] btrfs_find_all_roots_safe+0x41/0x100 [btrfs]
        [<000000008f17bd32>] btrfs_find_all_roots+0x52/0x70 [btrfs]
        [<00000000b7660afb>] btrfs_qgroup_rescan_worker+0x343/0x680 [btrfs]
        [<0000000058e66778>] btrfs_work_helper+0xac/0x1e0 [btrfs]
        [<00000000f0188930>] process_one_work+0x1cf/0x350
        [<00000000af5f2f8e>] worker_thread+0x28/0x3c0
        [<00000000b55a1add>] kthread+0x109/0x120
        [<00000000f88cbd17>] ret_from_fork+0x35/0x40
    
    This corresponds to:
    
      (gdb) l *(btrfs_find_all_roots_safe+0x41)
      0x8d7e1 is in btrfs_find_all_roots_safe (fs/btrfs/backref.c:1413).
      1408
      1409            tmp = ulist_alloc(GFP_NOFS);
      1410            if (!tmp)
      1411                    return -ENOMEM;
      1412            *roots = ulist_alloc(GFP_NOFS);
      1413            if (!*roots) {
      1414                    ulist_free(tmp);
      1415                    return -ENOMEM;
      1416            }
      1417
    
    Following the lifetime of the allocated 'roots' ulist, it gets freed
    again in btrfs_qgroup_account_extent().
    
    But this does not happen if the function is called with the
    'BTRFS_FS_QUOTA_ENABLED' flag cleared, then btrfs_qgroup_account_extent()
    does a short leave and directly returns.
    
    Instead of directly returning we should jump to the 'out_free' in order to
    free all resources as expected.
    
    CC: stable@vger.kernel.org # 4.14+
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    [ add comment ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 707de9c0806d14f7e9b40e388592fa7399fcac9a
Author: Qu Wenruo <wqu@suse.com>
Date:   Wed Jan 8 13:12:00 2020 +0800

    btrfs: relocation: fix reloc_root lifespan and access
    
    commit 6282675e6708ec78518cc0e9ad1f1f73d7c5c53d upstream.
    
    [BUG]
    There are several different KASAN reports for balance + snapshot
    workloads.  Involved call paths include:
    
       should_ignore_root+0x54/0xb0 [btrfs]
       build_backref_tree+0x11af/0x2280 [btrfs]
       relocate_tree_blocks+0x391/0xb80 [btrfs]
       relocate_block_group+0x3e5/0xa00 [btrfs]
       btrfs_relocate_block_group+0x240/0x4d0 [btrfs]
       btrfs_relocate_chunk+0x53/0xf0 [btrfs]
       btrfs_balance+0xc91/0x1840 [btrfs]
       btrfs_ioctl_balance+0x416/0x4e0 [btrfs]
       btrfs_ioctl+0x8af/0x3e60 [btrfs]
       do_vfs_ioctl+0x831/0xb10
    
       create_reloc_root+0x9f/0x460 [btrfs]
       btrfs_reloc_post_snapshot+0xff/0x6c0 [btrfs]
       create_pending_snapshot+0xa9b/0x15f0 [btrfs]
       create_pending_snapshots+0x111/0x140 [btrfs]
       btrfs_commit_transaction+0x7a6/0x1360 [btrfs]
       btrfs_mksubvol+0x915/0x960 [btrfs]
       btrfs_ioctl_snap_create_transid+0x1d5/0x1e0 [btrfs]
       btrfs_ioctl_snap_create_v2+0x1d3/0x270 [btrfs]
       btrfs_ioctl+0x241b/0x3e60 [btrfs]
       do_vfs_ioctl+0x831/0xb10
    
       btrfs_reloc_pre_snapshot+0x85/0xc0 [btrfs]
       create_pending_snapshot+0x209/0x15f0 [btrfs]
       create_pending_snapshots+0x111/0x140 [btrfs]
       btrfs_commit_transaction+0x7a6/0x1360 [btrfs]
       btrfs_mksubvol+0x915/0x960 [btrfs]
       btrfs_ioctl_snap_create_transid+0x1d5/0x1e0 [btrfs]
       btrfs_ioctl_snap_create_v2+0x1d3/0x270 [btrfs]
       btrfs_ioctl+0x241b/0x3e60 [btrfs]
       do_vfs_ioctl+0x831/0xb10
    
    [CAUSE]
    All these call sites are only relying on root->reloc_root, which can
    undergo btrfs_drop_snapshot(), and since we don't have real refcount
    based protection to reloc roots, we can reach already dropped reloc
    root, triggering KASAN.
    
    [FIX]
    To avoid such access to unstable root->reloc_root, we should check
    BTRFS_ROOT_DEAD_RELOC_TREE bit first.
    
    This patch introduces wrappers that provide the correct way to check the
    bit with memory barriers protection.
    
    Most callers don't distinguish merged reloc tree and no reloc tree.  The
    only exception is should_ignore_root(), as merged reloc tree can be
    ignored, while no reloc tree shouldn't.
    
    [CRITICAL SECTION ANALYSIS]
    Although test_bit()/set_bit()/clear_bit() doesn't imply a barrier, the
    DEAD_RELOC_TREE bit has extra help from transaction as a higher level
    barrier, the lifespan of root::reloc_root and DEAD_RELOC_TREE bit are:
    
            NULL: reloc_root is NULL        PTR: reloc_root is not NULL
            0: DEAD_RELOC_ROOT bit not set  DEAD: DEAD_RELOC_ROOT bit set
    
            (NULL, 0)    Initial state               __
              |                                      /\ Section A
            btrfs_init_reloc_root()                  \/
              |                                      __
            (PTR, 0)     reloc_root initialized      /\
              |                                      |
            btrfs_update_reloc_root()                |  Section B
              |                                      |
            (PTR, DEAD)  reloc_root has been merged  \/
              |                                      __
            === btrfs_commit_transaction() ====================
              |                                      /\
            clean_dirty_subvols()                    |
              |                                      |  Section C
            (NULL, DEAD) reloc_root cleanup starts   \/
              |                                      __
            btrfs_drop_snapshot()                    /\
              |                                      |  Section D
            (NULL, 0)    Back to initial state       \/
    
    Every have_reloc_root() or test_bit(DEAD_RELOC_ROOT) caller holds
    transaction handle, so none of such caller can cross transaction boundary.
    
    In Section A, every caller just found no DEAD bit, and grab reloc_root.
    
    In the cross section A-B, caller may get no DEAD bit, but since reloc_root
    is still completely valid thus accessing reloc_root is completely safe.
    
    No test_bit() caller can cross the boundary of Section B and Section C.
    
    In Section C, every caller found the DEAD bit, so no one will access
    reloc_root.
    
    In the cross section C-D, either caller gets the DEAD bit set, avoiding
    access reloc_root no matter if it's safe or not.  Or caller get the DEAD
    bit cleared, then access reloc_root, which is already NULL, nothing will
    be wrong.
    
    The memory write barriers are between the reloc_root updates and bit
    set/clear, the pairing read side is before test_bit.
    
    Reported-by: Zygo Blaxell <ce3g8jdj@umail.furryterror.org>
    Fixes: d2311e698578 ("btrfs: relocation: Delay reloc tree deletion after merge_reloc_roots")
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ barriers ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c281ce51c9a23a5eb4fa3054d6d8b0737e26a89
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Wed Dec 18 17:20:29 2019 -0500

    btrfs: do not delete mismatched root refs
    
    commit 423a716cd7be16fb08690760691befe3be97d3fc upstream.
    
    btrfs_del_root_ref() will simply WARN_ON() if the ref doesn't match in
    any way, and then continue to delete the reference.  This shouldn't
    happen, we have these values because there's more to the reference than
    the original root and the sub root.  If any of these checks fail, return
    -ENOENT.
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5e34783c8536fac6e760e687a01abd112a651fa
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Wed Dec 18 17:20:28 2019 -0500

    btrfs: fix invalid removal of root ref
    
    commit d49d3287e74ffe55ae7430d1e795e5f9bf7359ea upstream.
    
    If we have the following sequence of events
    
      btrfs sub create A
      btrfs sub create A/B
      btrfs sub snap A C
      mkdir C/foo
      mv A/B C/foo
      rm -rf *
    
    We will end up with a transaction abort.
    
    The reason for this is because we create a root ref for B pointing to A.
    When we create a snapshot of C we still have B in our tree, but because
    the root ref points to A and not C we will make it appear to be empty.
    
    The problem happens when we move B into C.  This removes the root ref
    for B pointing to A and adds a ref of B pointing to C.  When we rmdir C
    we'll see that we have a ref to our root and remove the root ref,
    despite not actually matching our reference name.
    
    Now btrfs_del_root_ref() allowing this to work is a bug as well, however
    we know that this inode does not actually point to a root ref in the
    first place, so we shouldn't be calling btrfs_del_root_ref() in the
    first place and instead simply look up our dir index for this item and
    do the rest of the removal.
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8ac2da72f4f4bab26ad87d2042197bf3181529f
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Wed Dec 18 17:20:27 2019 -0500

    btrfs: rework arguments of btrfs_unlink_subvol
    
    [ Upstream commit 045d3967b6920b663fc010ad414ade1b24143bd1 ]
    
    btrfs_unlink_subvol takes the name of the dentry and the root objectid
    based on what kind of inode this is, either a real subvolume link or a
    empty one that we inherited as a snapshot.  We need to fix how we unlink
    in the case for BTRFS_EMPTY_SUBVOL_DIR_OBJECTID in the future, so rework
    btrfs_unlink_subvol to just take the dentry and handle getting the right
    objectid given the type of inode this is.  There is no functional change
    here, simply pushing the work into btrfs_unlink_subvol() proper.
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d30dce3510aa93dba4c0ef3b3c58de606aed3c90
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Mon Jan 13 16:29:20 2020 -0800

    mm, debug_pagealloc: don't rely on static keys too early
    
    commit 8e57f8acbbd121ecfb0c9dc13b8b030f86c6bd3b upstream.
    
    Commit 96a2b03f281d ("mm, debug_pagelloc: use static keys to enable
    debugging") has introduced a static key to reduce overhead when
    debug_pagealloc is compiled in but not enabled.  It relied on the
    assumption that jump_label_init() is called before parse_early_param()
    as in start_kernel(), so when the "debug_pagealloc=on" option is parsed,
    it is safe to enable the static key.
    
    However, it turns out multiple architectures call parse_early_param()
    earlier from their setup_arch().  x86 also calls jump_label_init() even
    earlier, so no issue was found while testing the commit, but same is not
    true for e.g.  ppc64 and s390 where the kernel would not boot with
    debug_pagealloc=on as found by our QA.
    
    To fix this without tricky changes to init code of multiple
    architectures, this patch partially reverts the static key conversion
    from 96a2b03f281d.  Init-time and non-fastpath calls (such as in arch
    code) of debug_pagealloc_enabled() will again test a simple bool
    variable.  Fastpath mm code is converted to a new
    debug_pagealloc_enabled_static() variant that relies on the static key,
    which is enabled in a well-defined point in mm_init() where it's
    guaranteed that jump_label_init() has been called, regardless of
    architecture.
    
    [sfr@canb.auug.org.au: export _debug_pagealloc_enabled_early]
      Link: http://lkml.kernel.org/r/20200106164944.063ac07b@canb.auug.org.au
    Link: http://lkml.kernel.org/r/20191219130612.23171-1-vbabka@suse.cz
    Fixes: 96a2b03f281d ("mm, debug_pagelloc: use static keys to enable debugging")
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Qian Cai <cai@lca.pw>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 904c1db4b35a4fbd42fe34224a4b4569e2d2fb1b
Author: Adrian Huang <ahuang12@lenovo.com>
Date:   Mon Jan 13 16:29:32 2020 -0800

    mm: memcg/slab: call flush_memcg_workqueue() only if memcg workqueue is valid
    
    commit 2fe20210fc5f5e62644678b8f927c49f2c6f42a7 upstream.
    
    When booting with amd_iommu=off, the following WARNING message
    appears:
    
      AMD-Vi: AMD IOMMU disabled on kernel command-line
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 0 at kernel/workqueue.c:2772 flush_workqueue+0x42e/0x450
      Modules linked in:
      CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.5.0-rc3-amd-iommu #6
      Hardware name: Lenovo ThinkSystem SR655-2S/7D2WRCZ000, BIOS D8E101L-1.00 12/05/2019
      RIP: 0010:flush_workqueue+0x42e/0x450
      Code: ff 0f 0b e9 7a fd ff ff 4d 89 ef e9 33 fe ff ff 0f 0b e9 7f fd ff ff 0f 0b e9 bc fd ff ff 0f 0b e9 a8 fd ff ff e8 52 2c fe ff <0f> 0b 31 d2 48 c7 c6 e0 88 c5 95 48 c7 c7 d8 ad f0 95 e8 19 f5 04
      Call Trace:
       kmem_cache_destroy+0x69/0x260
       iommu_go_to_state+0x40c/0x5ab
       amd_iommu_prepare+0x16/0x2a
       irq_remapping_prepare+0x36/0x5f
       enable_IR_x2apic+0x21/0x172
       default_setup_apic_routing+0x12/0x6f
       apic_intr_mode_init+0x1a1/0x1f1
       x86_late_time_init+0x17/0x1c
       start_kernel+0x480/0x53f
       secondary_startup_64+0xb6/0xc0
      ---[ end trace 30894107c3749449 ]---
      x2apic: IRQ remapping doesn't support X2APIC mode
      x2apic disabled
    
    The warning is caused by the calling of 'kmem_cache_destroy()'
    in free_iommu_resources(). Here is the call path:
    
      free_iommu_resources
        kmem_cache_destroy
          flush_memcg_workqueue
            flush_workqueue
    
    The root cause is that the IOMMU subsystem runs before the workqueue
    subsystem, which the variable 'wq_online' is still 'false'.  This leads
    to the statement 'if (WARN_ON(!wq_online))' in flush_workqueue() is
    'true'.
    
    Since the variable 'memcg_kmem_cache_wq' is not allocated during the
    time, it is unnecessary to call flush_memcg_workqueue().  This prevents
    the WARNING message triggered by flush_workqueue().
    
    Link: http://lkml.kernel.org/r/20200103085503.1665-1-ahuang12@lenovo.com
    Fixes: 92ee383f6daab ("mm: fix race between kmem_cache destroy, create and deactivate")
    Signed-off-by: Adrian Huang <ahuang12@lenovo.com>
    Reported-by: Xiaochun Lee <lixc17@lenovo.com>
    Reviewed-by: Shakeel Butt <shakeelb@google.com>
    Cc: Joerg Roedel <jroedel@suse.de>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 090892ba70c37ace0befb6ac955bb5ce755e1d4f
Author: Roman Gushchin <guro@fb.com>
Date:   Mon Jan 13 16:29:16 2020 -0800

    mm: memcg/slab: fix percpu slab vmstats flushing
    
    commit 4a87e2a25dc27131c3cce5e94421622193305638 upstream.
    
    Currently slab percpu vmstats are flushed twice: during the memcg
    offlining and just before freeing the memcg structure.  Each time percpu
    counters are summed, added to the atomic counterparts and propagated up
    by the cgroup tree.
    
    The second flushing is required due to how recursive vmstats are
    implemented: counters are batched in percpu variables on a local level,
    and once a percpu value is crossing some predefined threshold, it spills
    over to atomic values on the local and each ascendant levels.  It means
    that without flushing some numbers cached in percpu variables will be
    dropped on floor each time a cgroup is destroyed.  And with uptime the
    error on upper levels might become noticeable.
    
    The first flushing aims to make counters on ancestor levels more
    precise.  Dying cgroups may resume in the dying state for a long time.
    After kmem_cache reparenting which is performed during the offlining
    slab counters of the dying cgroup don't have any chances to be updated,
    because any slab operations will be performed on the parent level.  It
    means that the inaccuracy caused by percpu batching will not decrease up
    to the final destruction of the cgroup.  By the original idea flushing
    slab counters during the offlining should minimize the visible
    inaccuracy of slab counters on the parent level.
    
    The problem is that percpu counters are not zeroed after the first
    flushing.  So every cached percpu value is summed twice.  It creates a
    small error (up to 32 pages per cpu, but usually less) which accumulates
    on parent cgroup level.  After creating and destroying of thousands of
    child cgroups, slab counter on parent level can be way off the real
    value.
    
    For now, let's just stop flushing slab counters on memcg offlining.  It
    can't be done correctly without scheduling a work on each cpu: reading
    and zeroing it during css offlining can race with an asynchronous
    update, which doesn't expect values to be changed underneath.
    
    With this change, slab counters on parent level will become eventually
    consistent.  Once all dying children are gone, values are correct.  And
    if not, the error is capped by 32 * NR_CPUS pages per dying cgroup.
    
    It's not perfect, as slab are reparented, so any updates after the
    reparenting will happen on the parent level.  It means that if a slab
    page was allocated, a counter on child level was bumped, then the page
    was reparented and freed, the annihilation of positive and negative
    counter values will not happen until the child cgroup is released.  It
    makes slab counters different from others, and it might want us to
    implement flushing in a correct form again.  But it's also a question of
    performance: scheduling a work on each cpu isn't free, and it's an open
    question if the benefit of having more accurate counters is worth it.
    
    We might also consider flushing all counters on offlining, not only slab
    counters.
    
    So let's fix the main problem now: make the slab counters eventually
    consistent, so at least the error won't grow with uptime (or more
    precisely the number of created and destroyed cgroups).  And think about
    the accuracy of counters separately.
    
    Link: http://lkml.kernel.org/r/20191220042728.1045881-1-guro@fb.com
    Fixes: bee07b33db78 ("mm: memcontrol: flush percpu slab vmstats on kmem offlining")
    Signed-off-by: Roman Gushchin <guro@fb.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 194e7fcd19036bb69ccdea25f3bf7ef19e3b847c
Author: Kirill A. Shutemov <kirill@shutemov.name>
Date:   Mon Jan 13 16:29:10 2020 -0800

    mm/huge_memory.c: thp: fix conflict of above-47bit hint address and PMD alignment
    
    commit 97d3d0f9a1cf132c63c0b8b8bd497b8a56283dd9 upstream.
    
    Patch series "Fix two above-47bit hint address vs.  THP bugs".
    
    The two get_unmapped_area() implementations have to be fixed to provide
    THP-friendly mappings if above-47bit hint address is specified.
    
    This patch (of 2):
    
    Filesystems use thp_get_unmapped_area() to provide THP-friendly
    mappings.  For DAX in particular.
    
    Normally, the kernel doesn't create userspace mappings above 47-bit,
    even if the machine allows this (such as with 5-level paging on x86-64).
    Not all user space is ready to handle wide addresses.  It's known that
    at least some JIT compilers use higher bits in pointers to encode their
    information.
    
    Userspace can ask for allocation from full address space by specifying
    hint address (with or without MAP_FIXED) above 47-bits.  If the
    application doesn't need a particular address, but wants to allocate
    from whole address space it can specify -1 as a hint address.
    
    Unfortunately, this trick breaks thp_get_unmapped_area(): the function
    would not try to allocate PMD-aligned area if *any* hint address
    specified.
    
    Modify the routine to handle it correctly:
    
     - Try to allocate the space at the specified hint address with length
       padding required for PMD alignment.
     - If failed, retry without length padding (but with the same hint
       address);
     - If the returned address matches the hint address return it.
     - Otherwise, align the address as required for THP and return.
    
    The user specified hint address is passed down to get_unmapped_area() so
    above-47bit hint address will be taken into account without breaking
    alignment requirements.
    
    Link: http://lkml.kernel.org/r/20191220142548.7118-2-kirill.shutemov@linux.intel.com
    Fixes: b569bab78d8d ("x86/mm: Prepare to expose larger address space to userspace")
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Reported-by: Thomas Willhalm <thomas.willhalm@intel.com>
    Tested-by: Dan Williams <dan.j.williams@intel.com>
    Cc: "Aneesh Kumar K . V" <aneesh.kumar@linux.vnet.ibm.com>
    Cc: "Bruggeman, Otto G" <otto.g.bruggeman@intel.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e56519a981a7d441682b4d2ca2b24c0edd7be88
Author: Kirill A. Shutemov <kirill@shutemov.name>
Date:   Mon Jan 13 16:29:13 2020 -0800

    mm/shmem.c: thp, shmem: fix conflict of above-47bit hint address and PMD alignment
    
    commit 991589974d9c9ecb24ee3799ec8c415c730598a2 upstream.
    
    Shmem/tmpfs tries to provide THP-friendly mappings if huge pages are
    enabled.  But it doesn't work well with above-47bit hint address.
    
    Normally, the kernel doesn't create userspace mappings above 47-bit,
    even if the machine allows this (such as with 5-level paging on x86-64).
    Not all user space is ready to handle wide addresses.  It's known that
    at least some JIT compilers use higher bits in pointers to encode their
    information.
    
    Userspace can ask for allocation from full address space by specifying
    hint address (with or without MAP_FIXED) above 47-bits.  If the
    application doesn't need a particular address, but wants to allocate
    from whole address space it can specify -1 as a hint address.
    
    Unfortunately, this trick breaks THP alignment in shmem/tmp:
    shmem_get_unmapped_area() would not try to allocate PMD-aligned area if
    *any* hint address specified.
    
    This can be fixed by requesting the aligned area if the we failed to
    allocated at user-specified hint address.  The request with inflated
    length will also take the user-specified hint address.  This way we will
    not lose an allocation request from the full address space.
    
    [kirill@shutemov.name: fold in a fixup]
      Link: http://lkml.kernel.org/r/20191223231309.t6bh5hkbmokihpfu@box
    Link: http://lkml.kernel.org/r/20191220142548.7118-3-kirill.shutemov@linux.intel.com
    Fixes: b569bab78d8d ("x86/mm: Prepare to expose larger address space to userspace")
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: "Willhalm, Thomas" <thomas.willhalm@intel.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: "Bruggeman, Otto G" <otto.g.bruggeman@intel.com>
    Cc: "Aneesh Kumar K . V" <aneesh.kumar@linux.vnet.ibm.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05a24ec56331ca5caa7eb0653f1480519caa0f79
Author: Jin Yao <yao.jin@linux.intel.com>
Date:   Fri Dec 20 09:37:19 2019 +0800

    perf report: Fix incorrectly added dimensions as switch perf data file
    
    commit 0feba17bd7ee3b7e03d141f119049dcc23efa94e upstream.
    
    We observed an issue that was some extra columns displayed after switching
    perf data file in browser. The steps to reproduce:
    
    1. perf record -a -e cycles,instructions -- sleep 3
    2. perf report --group
    3. In browser, we use hotkey 's' to switch to another perf.data
    4. Now in browser, the extra columns 'Self' and 'Children' are displayed.
    
    The issue is setup_sorting() executed again after repeat path, so dimensions
    are added again.
    
    This patch checks the last key returned from __cmd_report(). If it's
    K_SWITCH_INPUT_DATA, skips the setup_sorting().
    
    Fixes: ad0de0971b7f ("perf report: Enable the runtime switching of perf data file")
    Signed-off-by: Jin Yao <yao.jin@linux.intel.com>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Acked-by: Jiri Olsa <jolsa@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Feng Tang <feng.tang@intel.com>
    Cc: Jin Yao <yao.jin@intel.com>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/20191220013722.20592-1-yao.jin@linux.intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b90976941e5ef688be8c76ca50daea133b58d41c
Author: Waiman Long <longman@redhat.com>
Date:   Fri Dec 20 08:51:28 2019 -0500

    locking/lockdep: Fix buffer overrun problem in stack_trace[]
    
    commit d91f3057263ceb691ef527e71b41a56b17f6c869 upstream.
    
    If the lockdep code is really running out of the stack_trace entries,
    it is likely that buffer overrun can happen and the data immediately
    after stack_trace[] will be corrupted.
    
    If there is less than LOCK_TRACE_SIZE_IN_LONGS entries left before
    the call to save_trace(), the max_entries computation will leave it
    with a very large positive number because of its unsigned nature. The
    subsequent call to stack_trace_save() will then corrupt the data after
    stack_trace[]. Fix that by changing max_entries to a signed integer
    and check for negative value before calling stack_trace_save().
    
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 12593b7467f9 ("locking/lockdep: Reduce space occupied by stack traces")
    Link: https://lkml.kernel.org/r/20191220135128.14876-1-longman@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7dec71eba7c64b41efdb7dc15292de8b9ef4fd4d
Author: Yuya Fujita <fujita.yuya@fujitsu.com>
Date:   Thu Dec 19 08:08:32 2019 +0000

    perf hists: Fix variable name's inconsistency in hists__for_each() macro
    
    commit 55347ec340af401437680fd0e88df6739a967f9f upstream.
    
    Variable names are inconsistent in hists__for_each macro().
    
    Due to this inconsistency, the macro replaces its second argument with
    "fmt" regardless of its original name.
    
    So far it works because only "fmt" is passed to the second argument.
    However, this behavior is not expected and should be fixed.
    
    Fixes: f0786af536bb ("perf hists: Introduce hists__for_each_format macro")
    Fixes: aa6f50af822a ("perf hists: Introduce hists__for_each_sort_list macro")
    Signed-off-by: Yuya Fujita <fujita.yuya@fujitsu.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/OSAPR01MB1588E1C47AC22043175DE1B2E8520@OSAPR01MB1588.jpnprd01.prod.outlook.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0ac15bd2cff0b12ac80f62606d89e36cda3d18f
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Mon Dec 16 14:14:07 2019 +0100

    clk: samsung: exynos5420: Keep top G3D clocks enabled
    
    commit 67f96ff7c8f073648696eab50fd23ded23441067 upstream.
    
    In Exynos542x/5800 SoCs, the G3D leaf clocks are located in the G3D power
    domain. This is similar to the other hardware modules and their power
    domains. However there is one thing specific to G3D clocks hierarchy.
    Unlike other hardware modules, the G3D clocks hierarchy doesn't have any
    gate clock between the TOP part of the hierarchy and the part located in
    the power domain and some SoC internal busses are sourced directly from
    the TOP muxes. The consequence of this design if the fact that the TOP
    part of the hierarchy has to be enabled permanently to ensure proper
    operation of the SoC power related components (G3D power domain and
    Exynos Power Management Unit for system suspend/resume).
    
    This patch adds an explicit call to clk_prepare_enable() on the last MUX
    in the TOP part of G3D clock hierarchy to keep it enabled permanently to
    ensure that the internal busses get their clock regardless of the main
    G3D clock enablement status.
    
    This fixes following imprecise abort issue observed on Odroid XU3/XU4
    after enabling Panfrost driver by commit 1a5a85c56402 "ARM: dts: exynos:
    Add Mali/GPU node on Exynos5420 and enable it on Odroid XU3/4"):
    
    panfrost 11800000.gpu: clock rate = 400000000
    panfrost 11800000.gpu: failed to get regulator: -517
    panfrost 11800000.gpu: regulator init failed -517
    Power domain G3D disable failed
    ...
    panfrost 11800000.gpu: clock rate = 400000000
    8<--- cut here ---
    Unhandled fault: imprecise external abort (0x1406) at 0x00000000
    pgd = (ptrval)
    [00000000] *pgd=00000000
    Internal error: : 1406 [#1] PREEMPT SMP ARM
    Modules linked in:
    CPU: 7 PID: 53 Comm: kworker/7:1 Not tainted 5.4.0-rc8-next-20191119-00032-g56f1001191a6 #6923
    Hardware name: SAMSUNG EXYNOS (Flattened Device Tree)
    Workqueue: events deferred_probe_work_func
    PC is at panfrost_gpu_soft_reset+0x94/0x110
    LR is at ___might_sleep+0x128/0x2dc
    ...
    [<c05c231c>] (panfrost_gpu_soft_reset) from [<c05c2704>] (panfrost_gpu_init+0x10/0x67c)
    [<c05c2704>] (panfrost_gpu_init) from [<c05c15d0>] (panfrost_device_init+0x158/0x2cc)
    [<c05c15d0>] (panfrost_device_init) from [<c05c0cb0>] (panfrost_probe+0x80/0x178)
    [<c05c0cb0>] (panfrost_probe) from [<c05cfaa0>] (platform_drv_probe+0x48/0x9c)
    [<c05cfaa0>] (platform_drv_probe) from [<c05cd20c>] (really_probe+0x1c4/0x474)
    [<c05cd20c>] (really_probe) from [<c05cd694>] (driver_probe_device+0x78/0x1bc)
    [<c05cd694>] (driver_probe_device) from [<c05cb374>] (bus_for_each_drv+0x74/0xb8)
    [<c05cb374>] (bus_for_each_drv) from [<c05ccfa8>] (__device_attach+0xd4/0x16c)
    [<c05ccfa8>] (__device_attach) from [<c05cc110>] (bus_probe_device+0x88/0x90)
    [<c05cc110>] (bus_probe_device) from [<c05cc634>] (deferred_probe_work_func+0x4c/0xd0)
    [<c05cc634>] (deferred_probe_work_func) from [<c0149df0>] (process_one_work+0x300/0x864)
    [<c0149df0>] (process_one_work) from [<c014a3ac>] (worker_thread+0x58/0x5a0)
    [<c014a3ac>] (worker_thread) from [<c0151174>] (kthread+0x12c/0x160)
    [<c0151174>] (kthread) from [<c01010b4>] (ret_from_fork+0x14/0x20)
    Exception stack(0xee03dfb0 to 0xee03dff8)
    ...
    Code: e594300c e5933020 e3130c01 1a00000f (ebefff50).
    ---[ end trace badde2b74a65a540 ]---
    
    In the above case, the Panfrost driver disables G3D clocks after failure
    of getting the needed regulator and return with -EPROVE_DEFER code. This
    causes G3D power domain disable failure and then, during second probe
    an imprecise abort is triggered due to undefined power domain state.
    
    Fixes: 45f10dabb56b ("clk: samsung: exynos5420: Add SET_RATE_PARENT flag to clocks on G3D path")
    Fixes: c9f7567aff31 ("clk: samsung: exynos542x: Move G3D subsystem clocks to its sub-CMU")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Link: https://lkml.kernel.org/r/20191216131407.17225-1-m.szyprowski@samsung.com
    Acked-by: Krzysztof Kozlowski <krzk@kernel.org>
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Acked-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c68777df519635bb1d4053253bc6832ede17f3e6
Author: Philipp Rudo <prudo@linux.ibm.com>
Date:   Wed Dec 18 11:24:43 2019 +0100

    s390/setup: Fix secure ipl message
    
    commit 40260b01d029ba374637838213af500e03305326 upstream.
    
    The new machine loader on z15 always creates an IPL Report block and
    thus sets the IPL_PL_FLAG_IPLSR even when secure boot is disabled. This
    causes the wrong message being printed at boot. Fix this by checking for
    IPL_PL_FLAG_SIPL instead.
    
    Fixes: 9641b8cc733f ("s390/ipl: read IPL report at early boot")
    Signed-off-by: Philipp Rudo <prudo@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c490a4730c46cb6ddbfb0c54e687e0efd9ed7ef
Author: Arvind Sankar <nivedita@alum.mit.edu>
Date:   Tue Dec 24 14:29:07 2019 +0100

    efi/earlycon: Fix write-combine mapping on x86
    
    commit d92b54570d24d017d2630e314b525ed792f5aa6c upstream.
    
    On x86, until PAT is initialized, WC translates into UC-. Since we
    calculate and store pgprot_writecombine(PAGE_KERNEL) when earlycon is
    initialized, this means we actually use UC- mappings instead of WC
    mappings, which makes scrolling very slow.
    
    Instead store a boolean flag to indicate whether we want to use
    writeback or write-combine mappings, and recalculate the actual pgprot_t
    we need on every mapping. Once PAT is initialized, we will start using
    write-combine mappings, which speeds up the scrolling considerably.
    
    Signed-off-by: Arvind Sankar <nivedita@alum.mit.edu>
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Cc: Hans de Goede <hdegoede@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Fixes: 69c1f396f25b ("efi/x86: Convert x86 EFI earlyprintk into generic earlycon implementation")
    Link: https://lkml.kernel.org/r/20191224132909.102540-2-ardb@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1241e815b88e52a92894d170219a36d0942888ff
Author: Shakeel Butt <shakeelb@google.com>
Date:   Thu Jan 2 08:58:44 2020 -0800

    x86/resctrl: Fix potential memory leak
    
    commit ab6a2114433a3b5b555983dcb9b752a85255f04b upstream.
    
    set_cache_qos_cfg() is leaking memory when the given level is not
    RDT_RESOURCE_L3 or RDT_RESOURCE_L2. At the moment, this function is
    called with only valid levels but move the allocation after the valid
    level checks in order to make it more robust and future proof.
    
     [ bp: Massage commit message. ]
    
    Fixes: 99adde9b370de ("x86/intel_rdt: Enable L2 CDP in MSR IA32_L2_QOS_CFG")
    Signed-off-by: Shakeel Butt <shakeelb@google.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Reinette Chatre <reinette.chatre@intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20200102165844.133133-1-shakeelb@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ee1d755edf3e4820b81926d3c86b7da78195f09
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue Jan 7 21:50:14 2020 +0800

    drm/i915: Add missing include file <linux/math64.h>
    
    commit ea38aa2ea5b0969776f0a47f174ce928a22be803 upstream.
    
    Fix build error:
    ./drivers/gpu/drm/i915/selftests/i915_random.h: In function i915_prandom_u32_max_state:
    ./drivers/gpu/drm/i915/selftests/i915_random.h:48:23: error:
     implicit declaration of function mul_u32_u32; did you mean mul_u64_u32_div? [-Werror=implicit-function-declaration]
      return upper_32_bits(mul_u32_u32(prandom_u32_state(state), ep_ro));
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: 7ce5b6850b47 ("drm/i915/selftests: Use mul_u32_u32() for 32b x 32b -> 64b result")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200107135014.36472-1-yuehaibing@huawei.com
    (cherry picked from commit 62bf5465b26d1f502430b9c654be7d16bf2e242d)
    Signed-off-by: Joonas Lahtinen <joonas.lahtinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 144573be2633f6b144adb103080acd20b9eeca4e
Author: Vignesh Raghavendra <vigneshr@ti.com>
Date:   Wed Jan 8 10:43:43 2020 +0530

    mtd: spi-nor: Fix selection of 4-byte addressing opcodes on Spansion
    
    commit 440b6d50254bdbd84c2a665c7f53ec69dd741a4f upstream.
    
    mtd->size is still unassigned when running spansion_post_sfdp_fixups()
    hook, therefore use nor->params.size to determine the size of flash device.
    
    This makes sure that 4-byte addressing opcodes are used on Spansion
    flashes that are larger than 16MiB and don't have SFDP 4BAIT table
    populated.
    
    Fixes: 92094ebc385e ("mtd: spi-nor: Add spansion_post_sfdp_fixups()")
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Reviewed-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6e4244f8b45da63c7a24096f17368f5a531df56
Author: Long Li <longli@microsoft.com>
Date:   Mon Jan 13 16:08:36 2020 -0800

    scsi: storvsc: Correctly set number of hardware queues for IDE disk
    
    commit 7b571c19d4c0b78d27dd3bf1f3c42e4032390af6 upstream.
    
    Commit 0ed881027690 ("scsi: storvsc: setup 1:1 mapping between hardware
    queue and CPU queue") introduced a regression for disks attached to
    IDE. For these disks the host VSP only offers one VMBUS channel. Setting
    multiple queues can overload the VMBUS channel and result in performance
    drop for high queue depth workload on system with large number of CPUs.
    
    Fix it by leaving the number of hardware queues to 1 (default value) for
    IDE disks.
    
    Fixes: 0ed881027690 ("scsi: storvsc: setup 1:1 mapping between hardware queue and CPU queue")
    Link: https://lore.kernel.org/r/1578960516-108228-1-git-send-email-longli@linuxonhyperv.com
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Long Li <longli@microsoft.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f4bf0ea7901a6126cd9705dec52d050c8ac3a90
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Fri Dec 20 09:06:09 2019 +0100

    s390/zcrypt: Fix CCA cipher key gen with clear key value function
    
    commit 94dd3bada53ee77b80d0aeee5571eeb83654d156 upstream.
    
    Regression tests showed that the CCA cipher key function which
    generates an CCA cipher key with given clear key value does not work
    correctly. At parsing the reply CPRB two limits are wrong calculated
    resulting in rejecting the reply as invalid with s390dbf message
    "_ip_cprb_helper reply with invalid or unknown key block".
    
    Fixes: f2bbc96e7cfa ("s390/pkey: add CCA AES cipher key support")
    Cc: Stable <stable@vger.kernel.org>
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce285ef8ef73f7e67133bde6df704ea0fec3dec9
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Dec 24 14:29:09 2019 +0100

    x86/efistub: Disable paging at mixed mode entry
    
    commit 4911ee401b7ceff8f38e0ac597cbf503d71e690c upstream.
    
    The EFI mixed mode entry code goes through the ordinary startup_32()
    routine before jumping into the kernel's EFI boot code in 64-bit
    mode. The 32-bit startup code must be entered with paging disabled,
    but this is not documented as a requirement for the EFI handover
    protocol, and so we should disable paging explicitly when entering
    the kernel from 32-bit EFI firmware.
    
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Cc: <stable@vger.kernel.org>
    Cc: Arvind Sankar <nivedita@alum.mit.edu>
    Cc: Hans de Goede <hdegoede@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Link: https://lkml.kernel.org/r/20191224132909.102540-4-ardb@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 179bed43be590f25ce027050703d1bd7f255602e
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Thu Jan 16 12:02:09 2020 -0800

    perf/x86/intel/uncore: Fix missing marker for snr_uncore_imc_freerunning_events
    
    commit fa694ae532836bd2f4cd659e9b4032abaf9fa9e5 upstream.
    
    An Oops during the boot is found on some SNR machines.  It turns out
    this is because the snr_uncore_imc_freerunning_events[] array was
    missing an end-marker.
    
    Fixes: ee49532b38dd ("perf/x86/intel/uncore: Add IMC uncore support for Snow Ridge")
    Reported-by: Like Xu <like.xu@linux.intel.com>
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Tested-by: Like Xu <like.xu@linux.intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20200116200210.18937-1-kan.liang@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 710d9fd2f48bdd7e9944ea58d2205934951e7336
Author: Waiman Long <longman@redhat.com>
Date:   Wed Jan 15 10:43:36 2020 -0500

    locking/rwsem: Fix kernel crash when spinning on RWSEM_OWNER_UNKNOWN
    
    commit 39e7234f00bc93613c086ae42d852d5f4147120a upstream.
    
    The commit 91d2a812dfb9 ("locking/rwsem: Make handoff writer
    optimistically spin on owner") will allow a recently woken up waiting
    writer to spin on the owner. Unfortunately, if the owner happens to be
    RWSEM_OWNER_UNKNOWN, the code will incorrectly spin on it leading to a
    kernel crash. This is fixed by passing the proper non-spinnable bits
    to rwsem_spin_on_owner() so that RWSEM_OWNER_UNKNOWN will be treated
    as a non-spinnable target.
    
    Fixes: 91d2a812dfb9 ("locking/rwsem: Make handoff writer optimistically spin on owner")
    
    Reported-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Tested-by: Christoph Hellwig <hch@lst.de>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20200115154336.8679-1-longman@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e80eb337cb403bfef3f65b26020dd6a11bda1d8
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Wed Jan 15 16:05:16 2020 -0600

    x86/CPU/AMD: Ensure clearing of SME/SEV features is maintained
    
    commit a006483b2f97af685f0e60f3a547c9ad4c9b9e94 upstream.
    
    If the SME and SEV features are present via CPUID, but memory encryption
    support is not enabled (MSR 0xC001_0010[23]), the feature flags are cleared
    using clear_cpu_cap(). However, if get_cpu_cap() is later called, these
    feature flags will be reset back to present, which is not desired.
    
    Change from using clear_cpu_cap() to setup_clear_cpu_cap() so that the
    clearing of the flags is maintained.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org> # 4.16.x-
    Link: https://lkml.kernel.org/r/226de90a703c3c0be5a49565047905ac4e94e8f3.1579125915.git.thomas.lendacky@amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f163ffa9df918f41f2faf1b0fda19842c84b02ce
Author: Qian Cai <cai@lca.pw>
Date:   Tue Dec 10 22:30:42 2019 -0500

    x86/resctrl: Fix an imbalance in domain_remove_cpu()
    
    commit e278af89f1ba0a9ef20947db6afc2c9afa37e85b upstream.
    
    A system that supports resource monitoring may have multiple resources
    while not all of these resources are capable of monitoring. Monitoring
    related state is initialized only for resources that are capable of
    monitoring and correspondingly this state should subsequently only be
    removed from these resources that are capable of monitoring.
    
    domain_add_cpu() calls domain_setup_mon_state() only when r->mon_capable
    is true where it will initialize d->mbm_over. However,
    domain_remove_cpu() calls cancel_delayed_work(&d->mbm_over) without
    checking r->mon_capable resulting in an attempt to cancel d->mbm_over on
    all resources, even those that never initialized d->mbm_over because
    they are not capable of monitoring. Hence, it triggers a debugobjects
    warning when offlining CPUs because those timer debugobjects are never
    initialized:
    
      ODEBUG: assert_init not available (active state 0) object type:
      timer_list hint: 0x0
      WARNING: CPU: 143 PID: 789 at lib/debugobjects.c:484
      debug_print_object
      Hardware name: HP Synergy 680 Gen9/Synergy 680 Gen9 Compute Module, BIOS I40 05/23/2018
      RIP: 0010:debug_print_object
      Call Trace:
      debug_object_assert_init
      del_timer
      try_to_grab_pending
      cancel_delayed_work
      resctrl_offline_cpu
      cpuhp_invoke_callback
      cpuhp_thread_fun
      smpboot_thread_fn
      kthread
      ret_from_fork
    
    Fixes: e33026831bdb ("x86/intel_rdt/mbm: Handle counter overflow")
    Signed-off-by: Qian Cai <cai@lca.pw>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Reinette Chatre <reinette.chatre@intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: john.stultz@linaro.org
    Cc: sboyd@kernel.org
    Cc: <stable@vger.kernel.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: tj@kernel.org
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Vikas Shivappa <vikas.shivappa@linux.intel.com>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20191211033042.2188-1-cai@lca.pw
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2a0788c52c3d84732d1863e7080d7aea8f8d07f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Dec 10 20:56:04 2019 +0100

    cpu/SMT: Fix x86 link error without CONFIG_SYSFS
    
    commit dc8d37ed304eeeea47e65fb9edc1c6c8b0093386 upstream.
    
    When CONFIG_SYSFS is disabled, but CONFIG_HOTPLUG_SMT is enabled,
    the kernel fails to link:
    
    arch/x86/power/cpu.o: In function `hibernate_resume_nonboot_cpu_disable':
    (.text+0x38d): undefined reference to `cpuhp_smt_enable'
    arch/x86/power/hibernate.o: In function `arch_resume_nosmt':
    hibernate.c:(.text+0x291): undefined reference to `cpuhp_smt_enable'
    hibernate.c:(.text+0x29c): undefined reference to `cpuhp_smt_disable'
    
    Move the exported functions out of the #ifdef section into its
    own with the correct conditions.
    
    The patch that caused this is marked for stable backports, so
    this one may need to be backported as well.
    
    Fixes: ec527c318036 ("x86/power: Fix 'nosmt' vs hibernation triple fault during resume")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Jiri Kosina <jkosina@suse.cz>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20191210195614.786555-1-arnd@arndb.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5b0c0eafeff169a0c3822dbbd1f54443957d58f
Author: Keiya Nobuta <nobuta.keiya@fujitsu.com>
Date:   Thu Jan 9 14:14:48 2020 +0900

    usb: core: hub: Improved device recognition on remote wakeup
    
    commit 9c06ac4c83df6d6fbdbf7488fbad822b4002ba19 upstream.
    
    If hub_activate() is called before D+ has stabilized after remote
    wakeup, the following situation might occur:
    
             __      ___________________
            /  \    /
    D+   __/    \__/
    
    Hub  _______________________________
              |  ^   ^           ^
              |  |   |           |
    Host _____v__|___|___________|______
              |  |   |           |
              |  |   |           \-- Interrupt Transfer (*3)
              |  |    \-- ClearPortFeature (*2)
              |   \-- GetPortStatus (*1)
              \-- Host detects remote wakeup
    
    - D+ goes high, Host starts running by remote wakeup
    - D+ is not stable, goes low
    - Host requests GetPortStatus at (*1) and gets the following hub status:
      - Current Connect Status bit is 0
      - Connect Status Change bit is 1
    - D+ stabilizes, goes high
    - Host requests ClearPortFeature and thus Connect Status Change bit is
      cleared at (*2)
    - After waiting 100 ms, Host starts the Interrupt Transfer at (*3)
    - Since the Connect Status Change bit is 0, Hub returns NAK.
    
    In this case, port_event() is not called in hub_event() and Host cannot
    recognize device. To solve this issue, flag change_bits even if only
    Connect Status Change bit is 1 when got in the first GetPortStatus.
    
    This issue occurs rarely because it only if D+ changes during a very
    short time between GetPortStatus and ClearPortFeature. However, it is
    fatal if it occurs in embedded system.
    
    Signed-off-by: Keiya Nobuta <nobuta.keiya@fujitsu.com>
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20200109051448.28150-1-nobuta.keiya@fujitsu.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc01fedf5ad6ad1b1d4fb4122abc96c3fe377c3c
Author: Esben Haabendal <esben@geanix.com>
Date:   Fri Jan 17 21:05:37 2020 +0100

    mtd: rawnand: gpmi: Restore nfc timing setup after suspend/resume
    
    commit d70486668cdf51b14a50425ab45fc18677a167b2 upstream.
    
    As we reset the GPMI block at resume, the timing parameters setup by a
    previous exec_op is lost.  Rewriting GPMI timing registers on first exec_op
    after resume fixes the problem.
    
    Fixes: ef347c0cfd61 ("mtd: rawnand: gpmi: Implement exec_op")
    Cc: stable@vger.kernel.org
    Signed-off-by: Esben Haabendal <esben@geanix.com>
    Acked-by: Han Xu <han.xu@nxp.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7dd16f419c9bb9c6d4bdeeddb8465fe24e8c24d
Author: Esben Haabendal <esben@geanix.com>
Date:   Fri Jan 17 21:05:36 2020 +0100

    mtd: rawnand: gpmi: Fix suspend/resume problem
    
    commit 5bc6bb603b4d0c8802af75e4932232683ab2d761 upstream.
    
    On system resume, the gpmi clock must be enabled before accessing gpmi
    block.  Without this, resume causes something like
    
    [  661.348790] gpmi_reset_block(5cbb0f7e): module reset timeout
    [  661.348889] gpmi-nand 1806000.gpmi-nand: Error setting GPMI : -110
    [  661.348928] PM: dpm_run_callback(): platform_pm_resume+0x0/0x44 returns -110
    [  661.348961] PM: Device 1806000.gpmi-nand failed to resume: error -110
    
    Fixes: ef347c0cfd61 ("mtd: rawnand: gpmi: Implement exec_op")
    Cc: stable@vger.kernel.org
    Signed-off-by: Esben Haabendal <esben@geanix.com>
    Acked-by: Han Xu <han.xu@nxp.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a26a635887853107efbd7b4f2e1b5d82ba39d4b8
Author: Christian Brauner <christian.brauner@ubuntu.com>
Date:   Wed Jan 15 14:42:34 2020 +0100

    ptrace: reintroduce usage of subjective credentials in ptrace_has_cap()
    
    commit 6b3ad6649a4c75504edeba242d3fd36b3096a57f upstream.
    
    Commit 69f594a38967 ("ptrace: do not audit capability check when outputing /proc/pid/stat")
    introduced the ability to opt out of audit messages for accesses to various
    proc files since they are not violations of policy.  While doing so it
    somehow switched the check from ns_capable() to
    has_ns_capability{_noaudit}(). That means it switched from checking the
    subjective credentials of the task to using the objective credentials. This
    is wrong since. ptrace_has_cap() is currently only used in
    ptrace_may_access() And is used to check whether the calling task (subject)
    has the CAP_SYS_PTRACE capability in the provided user namespace to operate
    on the target task (object). According to the cred.h comments this would
    mean the subjective credentials of the calling task need to be used.
    This switches ptrace_has_cap() to use security_capable(). Because we only
    call ptrace_has_cap() in ptrace_may_access() and in there we already have a
    stable reference to the calling task's creds under rcu_read_lock() there's
    no need to go through another series of dereferences and rcu locking done
    in ns_capable{_noaudit}().
    
    As one example where this might be particularly problematic, Jann pointed
    out that in combination with the upcoming IORING_OP_OPENAT feature, this
    bug might allow unprivileged users to bypass the capability checks while
    asynchronously opening files like /proc/*/mem, because the capability
    checks for this would be performed against kernel credentials.
    
    To illustrate on the former point about this being exploitable: When
    io_uring creates a new context it records the subjective credentials of the
    caller. Later on, when it starts to do work it creates a kernel thread and
    registers a callback. The callback runs with kernel creds for
    ktask->real_cred and ktask->cred. To prevent this from becoming a
    full-blown 0-day io_uring will call override_cred() and override
    ktask->cred with the subjective credentials of the creator of the io_uring
    instance. With ptrace_has_cap() currently looking at ktask->real_cred this
    override will be ineffective and the caller will be able to open arbitray
    proc files as mentioned above.
    Luckily, this is currently not exploitable but will turn into a 0-day once
    IORING_OP_OPENAT{2} land in v5.6. Fix it now!
    
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Eric Paris <eparis@redhat.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Serge Hallyn <serge@hallyn.com>
    Reviewed-by: Jann Horn <jannh@google.com>
    Fixes: 69f594a38967 ("ptrace: do not audit capability check when outputing /proc/pid/stat")
    Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b307a5e97483d72c4a18cc8755d362d88b50c6d1
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jan 14 15:34:14 2020 +0300

    scsi: mptfusion: Fix double fetch bug in ioctl
    
    commit 28d76df18f0ad5bcf5fa48510b225f0ed262a99b upstream.
    
    Tom Hatskevich reported that we look up "iocp" then, in the called
    functions we do a second copy_from_user() and look it up again.
    The problem that could cause is:
    
    drivers/message/fusion/mptctl.c
       674          /* All of these commands require an interrupt or
       675           * are unknown/illegal.
       676           */
       677          if ((ret = mptctl_syscall_down(iocp, nonblock)) != 0)
                                                   ^^^^
    We take this lock.
    
       678                  return ret;
       679
       680          if (cmd == MPTFWDOWNLOAD)
       681                  ret = mptctl_fw_download(arg);
                                                     ^^^
    Then the user memory changes and we look up "iocp" again but a different
    one so now we are holding the incorrect lock and have a race condition.
    
       682          else if (cmd == MPTCOMMAND)
       683                  ret = mptctl_mpt_command(arg);
    
    The security impact of this bug is not as bad as it could have been
    because these operations are all privileged and root already has
    enormous destructive power.  But it's still worth fixing.
    
    This patch passes the "iocp" pointer to the functions to avoid the
    second lookup.  That deletes 100 lines of code from the driver so
    it's a nice clean up as well.
    
    Link: https://lore.kernel.org/r/20200114123414.GA7957@kadam
    Reported-by: Tom Hatskevich <tom2001tom.23@gmail.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86ee2a91cb052790a08432c3b15b28f3352843f8
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Jan 7 21:15:49 2020 +0100

    scsi: fnic: fix invalid stack access
    
    commit 42ec15ceaea74b5f7a621fc6686cbf69ca66c4cf upstream.
    
    gcc -O3 warns that some local variables are not properly initialized:
    
    drivers/scsi/fnic/vnic_dev.c: In function 'fnic_dev_hang_notify':
    drivers/scsi/fnic/vnic_dev.c:511:16: error: 'a0' is used uninitialized in this function [-Werror=uninitialized]
      vdev->args[0] = *a0;
      ~~~~~~~~~~~~~~^~~~~
    drivers/scsi/fnic/vnic_dev.c:691:6: note: 'a0' was declared here
      u64 a0, a1;
          ^~
    drivers/scsi/fnic/vnic_dev.c:512:16: error: 'a1' is used uninitialized in this function [-Werror=uninitialized]
      vdev->args[1] = *a1;
      ~~~~~~~~~~~~~~^~~~~
    drivers/scsi/fnic/vnic_dev.c:691:10: note: 'a1' was declared here
      u64 a0, a1;
              ^~
    drivers/scsi/fnic/vnic_dev.c: In function 'fnic_dev_mac_addr':
    drivers/scsi/fnic/vnic_dev.c:512:16: error: 'a1' is used uninitialized in this function [-Werror=uninitialized]
      vdev->args[1] = *a1;
      ~~~~~~~~~~~~~~^~~~~
    drivers/scsi/fnic/vnic_dev.c:698:10: note: 'a1' was declared here
      u64 a0, a1;
              ^~
    
    Apparently the code relies on the local variables occupying adjacent memory
    locations in the same order, but this is of course not guaranteed.
    
    Use an array of two u64 variables where needed to make it work correctly.
    
    I suspect there is also an endianness bug here, but have not digged in deep
    enough to be sure.
    
    Fixes: 5df6d737dd4b ("[SCSI] fnic: Add new Cisco PCI-Express FCoE HBA")
    Fixes: mmtom ("init/Kconfig: enable -O3 for all arches")
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20200107201602.4096790-1-arnd@arndb.de
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3cc7058d6f50b5a76a836d035c6e7695be45504
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Jan 14 18:25:32 2020 +0000

    staging: comedi: ni_routes: allow partial routing information
    
    commit 9fea3a40f6b07de977a2783270c8c3bc82544d45 upstream.
    
    This patch fixes a regression on setting up asynchronous commands to use
    external trigger sources when board-specific routing information is
    missing.
    
    `ni_find_device_routes()` (called via `ni_assign_device_routes()`) finds
    the table of register values for the device family and the set of valid
    routes for the specific board.  If both are found,
    `tables->route_values` is set to point to the table of register values
    for the device family and `tables->valid_routes` is set to point to the
    list of valid routes for the specific board.  If either is not found,
    both `tables->route_values` and `tables->valid_routes` are left set at
    their initial null values (initialized by `ni_assign_device_routes()`)
    and the function returns `-ENODATA`.
    
    Returning an error results in some routing functionality being disabled.
    Unfortunately, leaving `table->route_values` set to `NULL` also breaks
    the setting up of asynchronous commands that are configured to use
    external trigger sources.  Calls to `ni_check_trigger_arg()` or
    `ni_check_trigger_arg_roffs()` while checking the asynchronous command
    set-up would result in a null pointer dereference if
    `table->route_values` is `NULL`.  The null pointer dereference is fixed
    in another patch, but it now results in failure to set up the
    asynchronous command.  That is a regression from the behavior prior to
    commit 347e244884c3 ("staging: comedi: tio: implement global tio/ctr
    routing") and commit 56d0b826d39f ("staging: comedi: ni_mio_common:
    implement new routing for TRIG_EXT").
    
    Change `ni_find_device_routes()` to set `tables->route_values` and/or
    `tables->valid_routes` to valid information even if the other one can
    only be set to `NULL` due to missing information.  The function will
    still return an error in that case.  This should result in
    `tables->valid_routes` being valid for all currently supported device
    families even if the board-specific routing information is missing.
    That should be enough to fix the regression on setting up asynchronous
    commands to use external triggers for boards with missing routing
    information.
    
    Fixes: 347e244884c3 ("staging: comedi: tio: implement global tio/ctr routing")
    Fixes: 56d0b826d39f ("staging: comedi: ni_mio_common: implement new routing for TRIG_EXT").
    Cc: <stable@vger.kernel.org> # 4.20+
    Cc: Spencer E. Olson <olsonse@umich.edu>
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20200114182532.132058-3-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 829fbd1ddf9682218bfeefcad92ed8e7d99dfe0e
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Tue Jan 14 18:25:31 2020 +0000

    staging: comedi: ni_routes: fix null dereference in ni_find_route_source()
    
    commit 01e20b664f808a4f3048ca3f930911fd257209bd upstream.
    
    In `ni_find_route_source()`, `tables->route_values` gets dereferenced.
    However it is possible that `tables->route_values` is `NULL`, leading to
    a null pointer dereference.  `tables->route_values` will be `NULL` if
    the call to `ni_assign_device_routes()` during board initialization
    returned an error due to missing device family routing information or
    missing board-specific routing information.  For example, there is
    currently no board-specific routing information provided for the
    PCIe-6251 board and several other boards, so those are affected by this
    bug.
    
    The bug is triggered when `ni_find_route_source()` is called via
    `ni_check_trigger_arg()` or `ni_check_trigger_arg_roffs()` when checking
    the arguments for setting up asynchronous commands.  Fix it by returning
    `-EINVAL` if `tables->route_values` is `NULL`.
    
    Even with this fix, setting up asynchronous commands to use external
    trigger sources for boards with missing routing information will still
    fail gracefully.  Since `ni_find_route_source()` only depends on the
    device family routing information, it would be better if that was made
    available even if the board-specific routing information is missing.
    That will be addressed by another patch.
    
    Fixes: 4bb90c87abbe ("staging: comedi: add interface to ni routing table information")
    Cc: <stable@vger.kernel.org> # 4.20+
    Cc: Spencer E. Olson <olsonse@umich.edu>
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20200114182532.132058-2-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f841c570faabbc5f5daaa823777e4625e937928
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Jan 17 15:35:26 2020 +0100

    USB: serial: quatech2: handle unbound ports
    
    commit 9715a43eea77e42678a1002623f2d9a78f5b81a1 upstream.
    
    Check for NULL port data in the modem- and line-status handlers to avoid
    dereferencing a NULL pointer in the unlikely case where a port device
    isn't bound to a driver (e.g. after an allocation failure on port
    probe).
    
    Note that the other (stubbed) event handlers qt2_process_xmit_empty()
    and qt2_process_flush() would need similar sanity checks in case they
    are ever implemented.
    
    Fixes: f7a33e608d9a ("USB: serial: add quatech2 usb to serial driver")
    Cc: stable <stable@vger.kernel.org>     # 3.5
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc35854f2e2b891e44ae78e3c350eb55a8726c2e
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Jan 17 10:50:25 2020 +0100

    USB: serial: keyspan: handle unbound ports
    
    commit 3018dd3fa114b13261e9599ddb5656ef97a1fa17 upstream.
    
    Check for NULL port data in the control URB completion handlers to avoid
    dereferencing a NULL pointer in the unlikely case where a port device
    isn't bound to a driver (e.g. after an allocation failure on port
    probe()).
    
    Fixes: 0ca1268e109a ("USB Serial Keyspan: add support for USA-49WG & USA-28XG")
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04f4a098d21b72dc0782bfc21acde5be244f20ad
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Jan 17 10:50:24 2020 +0100

    USB: serial: io_edgeport: add missing active-port sanity check
    
    commit 1568c58d11a7c851bd09341aeefd6a1c308ac40d upstream.
    
    The driver receives the active port number from the device, but never
    made sure that the port number was valid. This could lead to a
    NULL-pointer dereference or memory corruption in case a device sends
    data for an invalid port.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e8e0296c6f9a939d1214a6878733d0ed187a962
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Jan 17 10:50:23 2020 +0100

    USB: serial: io_edgeport: handle unbound ports on URB completion
    
    commit e37d1aeda737a20b1846a91a3da3f8b0f00cf690 upstream.
    
    Check for NULL port data in the shared interrupt and bulk completion
    callbacks to avoid dereferencing a NULL pointer in case a device sends
    data for a port device which isn't bound to a driver (e.g. due to a
    malicious device having unexpected endpoints or after an allocation
    failure on port probe).
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 554b03f5ff9c6a9fce4aa71582ae54ebea9b816f
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Jan 17 10:50:22 2020 +0100

    USB: serial: ch341: handle unbound port at reset_resume
    
    commit 4d5ef53f75c22d28f490bcc5c771fcc610a9afa4 upstream.
    
    Check for NULL port data in reset_resume() to avoid dereferencing a NULL
    pointer in case the port device isn't bound to a driver (e.g. after a
    failed control request at port probe).
    
    Fixes: 1ded7ea47b88 ("USB: ch341 serial: fix port number changed after resume")
    Cc: stable <stable@vger.kernel.org>     # 2.6.30
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01378bedad879932e8105b2a124c93f048a020f6
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Jan 16 17:07:05 2020 +0100

    USB: serial: suppress driver bind attributes
    
    commit fdb838efa31e1ed9a13ae6ad0b64e30fdbd00570 upstream.
    
    USB-serial drivers must not be unbound from their ports before the
    corresponding USB driver is unbound from the parent interface so
    suppress the bind and unbind attributes.
    
    Unbinding a serial driver while it's port is open is a sure way to
    trigger a crash as any driver state is released on unbind while port
    hangup is handled on the parent USB interface level. Drivers for
    multiport devices where ports share a resource such as an interrupt
    endpoint also generally cannot handle individual ports going away.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84408b141407cfd834191d72f056905916fde8d4
Author: Reinhard Speyerer <rspmn@arcor.de>
Date:   Tue Jan 14 14:29:23 2020 +0100

    USB: serial: option: add support for Quectel RM500Q in QDL mode
    
    commit f3eaabbfd093c93d791eb930cc68d9b15246a65e upstream.
    
    Add support for Quectel RM500Q in QDL mode.
    
    T:  Bus=02 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 24 Spd=480  MxCh= 0
    D:  Ver= 2.10 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=2c7c ProdID=0800 Rev= 0.00
    S:  Manufacturer=Qualcomm CDMA Technologies MSM
    S:  Product=QUSB_BULK_SN:xxxxxxxx
    S:  SerialNumber=xxxxxxxx
    C:* #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr=  2mA
    I:* If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=10 Driver=option
    E:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
    
    It is assumed that the ZLP flag required for other Qualcomm-based
    5G devices also applies to Quectel RM500Q.
    
    Signed-off-by: Reinhard Speyerer <rspmn@arcor.de>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9db0e76263f0d204440bb98bb911ed0ac8610812
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 13 18:22:13 2020 +0100

    USB: serial: opticon: fix control-message timeouts
    
    commit 5e28055f340275a8616eee88ef19186631b4d136 upstream.
    
    The driver was issuing synchronous uninterruptible control requests
    without using a timeout. This could lead to the driver hanging
    on open() or tiocmset() due to a malfunctioning (or malicious) device
    until the device is physically disconnected.
    
    The USB upper limit of five seconds per request should be more than
    enough.
    
    Fixes: 309a057932ab ("USB: opticon: add rts and cts support")
    Cc: stable <stable@vger.kernel.org>     # 2.6.39
    Cc: Martin Jansen <martin.jansen@opticon.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c365404e88e634c77c2da0ff5cbdfeea57b51ed
Author: Kristian Evensen <kristian.evensen@gmail.com>
Date:   Mon Jan 13 15:14:05 2020 +0100

    USB: serial: option: Add support for Quectel RM500Q
    
    commit accf227de4d211b52c830a58b2df00d5739f2389 upstream.
    
    RM500Q is a 5G module from Quectel, supporting both standalone and
    non-standalone modes. Unlike other recent Quectel modems, it is possible
    to identify the diagnostic interface (bInterfaceProtocol is unique).
    Thus, there is no need to check for the number of endpoints or reserve
    interfaces. The interface number is still dynamic though, so matching on
    interface number is not possible and two entries have to be added to the
    table.
    
    Output from usb-devices with all interfaces enabled (order is diag,
    nmea, at_port, modem, rmnet and adb):
    
    Bus 004 Device 007: ID 2c7c:0800 Quectel Wireless Solutions Co., Ltd.
    Device Descriptor:
      bLength                18
      bDescriptorType         1
      bcdUSB               3.20
      bDeviceClass            0 (Defined at Interface level)
      bDeviceSubClass         0
      bDeviceProtocol         0
      bMaxPacketSize0         9
      idVendor           0x2c7c Quectel Wireless Solutions Co., Ltd.
      idProduct          0x0800
      bcdDevice            4.14
      iManufacturer           1 Quectel
      iProduct                2 LTE-A Module
      iSerial                 3 40046d60
      bNumConfigurations      1
      Configuration Descriptor:
        bLength                 9
        bDescriptorType         2
        wTotalLength          328
        bNumInterfaces          6
        bConfigurationValue     1
        iConfiguration          4 DIAG_SER_RMNET
        bmAttributes         0xa0
          (Bus Powered)
          Remote Wakeup
        MaxPower              224mA
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        0
          bAlternateSetting       0
          bNumEndpoints           2
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass    255 Vendor Specific Subclass
          bInterfaceProtocol     48
          iInterface              0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x81  EP 1 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0400  1x 1024 bytes
            bInterval               0
            bMaxBurst               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x01  EP 1 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0400  1x 1024 bytes
            bInterval               0
            bMaxBurst               0
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        1
          bAlternateSetting       0
          bNumEndpoints           3
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass      0
          bInterfaceProtocol      0
          iInterface              0
          ** UNRECOGNIZED:  05 24 00 10 01
          ** UNRECOGNIZED:  05 24 01 00 00
          ** UNRECOGNIZED:  04 24 02 02
          ** UNRECOGNIZED:  05 24 06 00 00
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x83  EP 3 IN
            bmAttributes            3
              Transfer Type            Interrupt
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x000a  1x 10 bytes
            bInterval               9
            bMaxBurst               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x82  EP 2 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0400  1x 1024 bytes
            bInterval               0
            bMaxBurst               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x02  EP 2 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0400  1x 1024 bytes
            bInterval               0
            bMaxBurst               0
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        2
          bAlternateSetting       0
          bNumEndpoints           3
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass      0
          bInterfaceProtocol      0
          iInterface              0
          ** UNRECOGNIZED:  05 24 00 10 01
          ** UNRECOGNIZED:  05 24 01 00 00
          ** UNRECOGNIZED:  04 24 02 02
          ** UNRECOGNIZED:  05 24 06 00 00
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x85  EP 5 IN
            bmAttributes            3
              Transfer Type            Interrupt
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x000a  1x 10 bytes
            bInterval               9
            bMaxBurst               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x84  EP 4 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0400  1x 1024 bytes
            bInterval               0
            bMaxBurst               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x03  EP 3 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0400  1x 1024 bytes
            bInterval               0
            bMaxBurst               0
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        3
          bAlternateSetting       0
          bNumEndpoints           3
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass      0
          bInterfaceProtocol      0
          iInterface              0
          ** UNRECOGNIZED:  05 24 00 10 01
          ** UNRECOGNIZED:  05 24 01 00 00
          ** UNRECOGNIZED:  04 24 02 02
          ** UNRECOGNIZED:  05 24 06 00 00
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x87  EP 7 IN
            bmAttributes            3
              Transfer Type            Interrupt
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x000a  1x 10 bytes
            bInterval               9
            bMaxBurst               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x86  EP 6 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0400  1x 1024 bytes
            bInterval               0
            bMaxBurst               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x04  EP 4 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0400  1x 1024 bytes
            bInterval               0
            bMaxBurst               0
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        4
          bAlternateSetting       0
          bNumEndpoints           3
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass    255 Vendor Specific Subclass
          bInterfaceProtocol    255 Vendor Specific Protocol
          iInterface              5 CDEV Serial
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x88  EP 8 IN
            bmAttributes            3
              Transfer Type            Interrupt
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0008  1x 8 bytes
            bInterval               9
            bMaxBurst               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x8e  EP 14 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0400  1x 1024 bytes
            bInterval               0
            bMaxBurst               6
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x0f  EP 15 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0400  1x 1024 bytes
            bInterval               0
            bMaxBurst               2
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        5
          bAlternateSetting       0
          bNumEndpoints           2
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass     66
          bInterfaceProtocol      1
          iInterface              6 ADB Interface
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x05  EP 5 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0400  1x 1024 bytes
            bInterval               0
            bMaxBurst               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x89  EP 9 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0400  1x 1024 bytes
            bInterval               0
            bMaxBurst               0
    Binary Object Store Descriptor:
      bLength                 5
      bDescriptorType        15
      wTotalLength           42
      bNumDeviceCaps          3
      USB 2.0 Extension Device Capability:
        bLength                 7
        bDescriptorType        16
        bDevCapabilityType      2
        bmAttributes   0x00000006
          Link Power Management (LPM) Supported
      SuperSpeed USB Device Capability:
        bLength                10
        bDescriptorType        16
        bDevCapabilityType      3
        bmAttributes         0x00
        wSpeedsSupported   0x000f
          Device can operate at Low Speed (1Mbps)
          Device can operate at Full Speed (12Mbps)
          Device can operate at High Speed (480Mbps)
          Device can operate at SuperSpeed (5Gbps)
        bFunctionalitySupport   1
          Lowest fully-functional device speed is Full Speed (12Mbps)
        bU1DevExitLat           1 micro seconds
        bU2DevExitLat         500 micro seconds
      ** UNRECOGNIZED:  14 10 0a 00 01 00 00 00 00 11 00 00 30 40 0a 00 b0 40 0a 00
    Device Status:     0x0000
      (Bus Powered)
    
    Signed-off-by: Kristian Evensen <kristian.evensen@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3db8f3d097f32e054bef2093f7f3b231b475e4f
Author: Jerónimo Borque <jeronimo@borque.com.ar>
Date:   Thu Jan 9 12:23:34 2020 -0300

    USB: serial: simple: Add Motorola Solutions TETRA MTP3xxx and MTP85xx
    
    commit 260e41ac4dd3e5acb90be624c03ba7f019615b75 upstream.
    
    Add device-ids for the Motorola Solutions TETRA radios MTP3xxx series
    and MTP85xx series
    
    $ lsusb -vd 0cad:
    
    Bus 001 Device 009: ID 0cad:9015 Motorola CGISS TETRA PEI interface
    Device Descriptor:
      bLength                18
      bDescriptorType         1
      bcdUSB               2.00
      bDeviceClass            0
      bDeviceSubClass         0
      bDeviceProtocol         0
      bMaxPacketSize0        64
      idVendor           0x0cad Motorola CGISS
      idProduct          0x9015
      bcdDevice           24.16
      iManufacturer           1
      iProduct                2
      iSerial                 0
      bNumConfigurations      1
      Configuration Descriptor:
        bLength                 9
        bDescriptorType         2
        wTotalLength       0x0037
        bNumInterfaces          2
        bConfigurationValue     1
        iConfiguration          3
        bmAttributes         0x80
          (Bus Powered)
        MaxPower              500mA
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        0
          bAlternateSetting       0
          bNumEndpoints           2
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass      0
          bInterfaceProtocol      0
          iInterface              0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x81  EP 1 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x01  EP 1 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        1
          bAlternateSetting       0
          bNumEndpoints           2
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass      0
          bInterfaceProtocol      0
          iInterface              0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x82  EP 2 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x02  EP 2 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0040  1x 64 bytes
            bInterval               0
    
    Bus 001 Device 010: ID 0cad:9013 Motorola CGISS TETRA PEI interface
    Device Descriptor:
      bLength                18
      bDescriptorType         1
      bcdUSB               2.00
      bDeviceClass            0
      bDeviceSubClass         0
      bDeviceProtocol         0
      bMaxPacketSize0        64
      idVendor           0x0cad Motorola CGISS
      idProduct          0x9013
      bcdDevice           24.16
      iManufacturer           1
      iProduct                2
      iSerial                 0
      bNumConfigurations      1
      Configuration Descriptor:
        bLength                 9
        bDescriptorType         2
        wTotalLength       0x0037
        bNumInterfaces          2
        bConfigurationValue     1
        iConfiguration          3
        bmAttributes         0x80
          (Bus Powered)
        MaxPower              500mA
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        0
          bAlternateSetting       0
          bNumEndpoints           2
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass      0
          bInterfaceProtocol      0
          iInterface              0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x81  EP 1 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0200  1x 512 bytes
            bInterval               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x01  EP 1 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0200  1x 512 bytes
            bInterval               0
        Interface Descriptor:
          bLength                 9
          bDescriptorType         4
          bInterfaceNumber        1
          bAlternateSetting       0
          bNumEndpoints           2
          bInterfaceClass       255 Vendor Specific Class
          bInterfaceSubClass      0
          bInterfaceProtocol      0
          iInterface              0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x82  EP 2 IN
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0200  1x 512 bytes
            bInterval               0
          Endpoint Descriptor:
            bLength                 7
            bDescriptorType         5
            bEndpointAddress     0x02  EP 2 OUT
            bmAttributes            2
              Transfer Type            Bulk
              Synch Type               None
              Usage Type               Data
            wMaxPacketSize     0x0200  1x 512 bytes
            bInterval               0
    
    Signed-off-by: Jerónimo Borque <jeronimo@borque.com.ar>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d44f11a4cc96599f8a0e3132872364745d07a8e
Author: Lars Möllendorf <lars.moellendorf@plating.de>
Date:   Fri Dec 13 14:50:55 2019 +0100

    iio: buffer: align the size of scan bytes to size of the largest element
    
    commit 883f616530692d81cb70f8a32d85c0d2afc05f69 upstream.
    
    Previous versions of `iio_compute_scan_bytes` only aligned each element
    to its own length (i.e. its own natural alignment). Because multiple
    consecutive sets of scan elements are buffered this does not work in
    case the computed scan bytes do not align with the natural alignment of
    the first scan element in the set.
    
    This commit fixes this by aligning the scan bytes to the natural
    alignment of the largest scan element in the set.
    
    Fixes: 959d2952d124 ("staging:iio: make iio_sw_buffer_preenable much more general.")
    Signed-off-by: Lars Möllendorf <lars.moellendorf@plating.de>
    Reviewed-by: Lars-Peter Clausen <lars@metafoo.de>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6786d6a4f3523fb2bb97b26cb6ce2e9db5ab4568
Author: Tomasz Duszynski <tduszyns@gmail.com>
Date:   Fri Dec 13 22:38:08 2019 +0100

    iio: chemical: pms7003: fix unmet triggered buffer dependency
    
    commit 217afe63ccf445fc220e5ef480683607b05c0aa5 upstream.
    
    IIO triggered buffer depends on IIO buffer which is missing from Kconfig
    file. This should go unnoticed most of the time because there's a
    chance something else has already enabled buffers. In some rare cases
    though one might experience kbuild warnings about unmet direct
    dependencies and build failures due to missing symbols.
    
    Fix this by selecting IIO_BUFFER explicitly.
    
    Signed-off-by: Tomasz Duszynski <tduszyns@gmail.com>
    Fixes: a1d642266c14 ("iio: chemical: add support for Plantower PMS7003 sensor")
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70814a4b2ae70a83dca0a7a034a81a599ac9962b
Author: Guido Günther <agx@sigxcpu.org>
Date:   Fri Dec 27 11:22:54 2019 +0100

    iio: light: vcnl4000: Fix scale for vcnl4040
    
    commit bc80573ea25bb033a58da81b3ce27205b97c088e upstream.
    
    According to the data sheet the ambient sensor's scale is 0.12 lux/step
    (not 0.024 lux/step as used by vcnl4200) when the integration time is
    80ms. The integration time is currently hardcoded in the driver to that
    value.
    
    See p. 8 in https://www.vishay.com/docs/84307/designingvcnl4040.pdf
    
    Fixes: 5a441aade5b3 ("iio: light: vcnl4000 add support for the VCNL4040 proximity and light sensor")
    Signed-off-by: Guido Günther <agx@sigxcpu.org>
    Reviewed-by: Marco Felsch <m.felsch@pengutronix.de>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e5164949ad0e1837f1443ba0d50429de2000feb
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Mon Dec 16 13:41:20 2019 +0100

    iio: imu: st_lsm6dsx: Fix selection of ST_LSM6DS3_ID
    
    commit fb4fbc8904e786537e29329d791147389e1465a2 upstream.
    
    At the moment, attempting to probe a device with ST_LSM6DS3_ID
    (e.g. using the st,lsm6ds3 compatible) fails with:
    
        st_lsm6dsx_i2c 1-006b: unsupported whoami [69]
    
    ... even though 0x69 is the whoami listed for ST_LSM6DS3_ID.
    
    This happens because st_lsm6dsx_check_whoami() also attempts
    to match unspecified (zero-initialized) entries in the "id" array.
    ST_LSM6DS3_ID = 0 will therefore match any entry in
    st_lsm6dsx_sensor_settings (here: the first), because none of them
    actually have all 12 entries listed in the "id" array.
    
    Avoid this by additionally checking if "name" is set,
    which is only set for valid entries in the "id" array.
    
    Note: Although the problem was introduced earlier it did not surface until
    commit 52f4b1f19679 ("iio: imu: st_lsm6dsx: add support for accel/gyro unit of lsm9ds1")
    because ST_LSM6DS3_ID was the first entry in st_lsm6dsx_sensor_settings.
    
    Fixes: d068e4a0f921 ("iio: imu: st_lsm6dsx: add support to multiple devices with the same settings")
    Cc: <stable@vger.kernel.org> # 5.4
    Acked-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5408cbc6337300d6f1a87c797273c535ed96305a
Author: Alexandru Tachici <alexandru.tachici@analog.com>
Date:   Fri Dec 20 12:07:19 2019 +0200

    iio: adc: ad7124: Fix DT channel configuration
    
    commit d7857e4ee1ba69732b16c73b2f2dde83ecd78ee4 upstream.
    
    This patch fixes device tree channel configuration.
    
    ad7124 driver reads channels configuration from the device tree.
    It expects to find channel specifications as child nodes.
    Before this patch ad7124 driver assumed that the child nodes are parsed
    by for_each_available_child_of_node in the order 0,1,2,3...
    
    This is wrong and the real order of the children can be seen by running:
    dtc -I fs /sys/firmware/devicetree/base on the machine.
    
    For example, running this on an rpi 3B+ yields the real
    children order: 4,2,0,7,5,3,1,6
    
    Before this patch the driver assigned the channel configuration
    like this:
            - 0 <- 4
            - 1 <- 2
            - 2 <- 0
            ........
    For example, the symptoms can be observed by connecting the 4th channel
    to a 1V tension and then reading the in_voltage0-voltage19_raw sysfs
    (multiplied of course by the scale) one would see that channel 0
    measures 1V and channel 4 measures only noise.
    
    Now the driver uses the reg property of each child in order to
    correctly identify to which channel the parsed configuration
    belongs to.
    
    Fixes b3af341bbd966: ("iio: adc: Add ad7124 support")
    Signed-off-by: Alexandru Tachici <alexandru.tachici@analog.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d7f2619b02327b1c9f7b574603a993e9a07be66
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Jan 6 12:03:39 2020 +0000

    perf: Correctly handle failed perf_get_aux_event()
    
    commit da9ec3d3dd0f1240a48920be063448a2242dbd90 upstream.
    
    Vince reports a worrying issue:
    
    | so I was tracking down some odd behavior in the perf_fuzzer which turns
    | out to be because perf_even_open() sometimes returns 0 (indicating a file
    | descriptor of 0) even though as far as I can tell stdin is still open.
    
    ... and further the cause:
    
    | error is triggered if aux_sample_size has non-zero value.
    |
    | seems to be this line in kernel/events/core.c:
    |
    | if (perf_need_aux_event(event) && !perf_get_aux_event(event, group_leader))
    |                goto err_locked;
    |
    | (note, err is never set)
    
    This seems to be a thinko in commit:
    
      ab43762ef010967e ("perf: Allow normal events to output AUX data")
    
    ... and we should probably return -EINVAL here, as this should only
    happen when the new event is mis-configured or does not have a
    compatible aux_event group leader.
    
    Fixes: ab43762ef010967e ("perf: Allow normal events to output AUX data")
    Reported-by: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Tested-by: Vince Weaver <vincent.weaver@maine.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0edabb91e6e4ca1674a6dd7a8bff9e6cc63cdf5
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Dec 10 20:51:44 2019 +0100

    ARM: davinci: select CONFIG_RESET_CONTROLLER
    
    commit 7afec66e2bf5683d8bfc812cc295313d1b8473bc upstream.
    
    Selecting RESET_CONTROLLER is actually required, otherwise we
    can get a link failure in the clock driver:
    
    drivers/clk/davinci/psc.o: In function `__davinci_psc_register_clocks':
    psc.c:(.text+0x9a0): undefined reference to `devm_reset_controller_register'
    drivers/clk/davinci/psc-da850.o: In function `da850_psc0_init':
    psc-da850.c:(.text+0x24): undefined reference to `reset_controller_add_lookup'
    
    Link: https://lore.kernel.org/r/20191210195202.622734-1-arnd@arndb.de
    Fixes: f962396ce292 ("ARM: davinci: support multiplatform build for ARM v5")
    Cc: <stable@vger.kernel.org> # v5.4
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Acked-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8ac828dc763145499bfcf84d0784263b5364e5f
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Tue Dec 17 14:21:23 2019 +0530

    ARM: dts: am571x-idk: Fix gpios property to have the correct gpio number
    
    commit 0c4eb2a6b3c6b0facd0a3bccda5db22e7b3b6f96 upstream.
    
    commit d23f3839fe97d8dce03d ("ARM: dts: DRA7: Add pcie1 dt node for
    EP mode") while adding the dt node for EP mode for DRA7 platform,
    added rc node for am571x-idk and populated gpios property with
    "gpio3 23". However the GPIO_PCIE_SWRST line is actually connected
    to "gpio5 18". Fix it here. (The patch adding "gpio3 23" was tested
    with another am57x board in EP mode which doesn't rely on reset from
    host).
    
    Cc: stable <stable@vger.kernel.org> # 4.14+
    Fixes: d23f3839fe97d8dce03d ("ARM: dts: DRA7: Add pcie1 dt node for EP mode")
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55b256b4c7e1c3de8926985bb7c256fe7ef40e14
Author: Ikjoon Jang <ikjn@chromium.org>
Date:   Sat Jan 11 01:47:12 2020 +0800

    cpuidle: teo: Fix intervals[] array indexing bug
    
    commit 57388a2ccb6c2f554fee39772886c69b796dde53 upstream.
    
    Fix a simple bug in rotating array index.
    
    Fixes: b26bf6ab716f ("cpuidle: New timer events oriented governor for tickless systems")
    Signed-off-by: Ikjoon Jang <ikjn@chromium.org>
    Cc: 5.1+ <stable@vger.kernel.org> # 5.1+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af2e7c923dabca32f1224b178198817536318c71
Author: Jens Axboe <axboe@kernel.dk>
Date:   Thu Jan 16 19:00:24 2020 -0700

    io_uring: only allow submit from owning task
    
    commit 44d282796f81eb1debc1d7cb53245b4cb3214cb5 upstream.
    
    If the credentials or the mm doesn't match, don't allow the task to
    submit anything on behalf of this ring. The task that owns the ring can
    pass the file descriptor to another task, but we don't want to allow
    that task to submit an SQE that then assumes the ring mm and creds if
    it needs to go async.
    
    Cc: stable@vger.kernel.org
    Suggested-by: Stefan Metzmacher <metze@samba.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e7f29200f2d73d3f15fd5718706f2b73a5c420d
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Jan 16 11:09:36 2020 +0100

    fuse: fix fuse_send_readpages() in the syncronous read case
    
    commit 7df1e988c723a066754090b22d047c3225342152 upstream.
    
    Buffered read in fuse normally goes via:
    
     -> generic_file_buffered_read()
       -> fuse_readpages()
         -> fuse_send_readpages()
           ->fuse_simple_request() [called since v5.4]
    
    In the case of a read request, fuse_simple_request() will return a
    non-negative bytecount on success or a negative error value.  A positive
    bytecount was taken to be an error and the PG_error flag set on the page.
    This resulted in generic_file_buffered_read() falling back to ->readpage(),
    which would repeat the read request and succeed.  Because of the repeated
    read succeeding the bug was not detected with regression tests or other use
    cases.
    
    The FTP module in GVFS however fails the second read due to the
    non-seekable nature of FTP downloads.
    
    Fix by checking and ignoring positive return value from
    fuse_simple_request().
    
    Reported-by: Ondrej Holy <oholy@redhat.com>
    Link: https://gitlab.gnome.org/GNOME/gvfs/issues/441
    Fixes: 134831e36bbd ("fuse: convert readpages to simple api")
    Cc: <stable@vger.kernel.org> # v5.4
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6eed26e35cfda2fa6e1a6fcaf5115c6eb587b566
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Wed Jan 15 08:35:25 2020 -0500

    block: fix an integer overflow in logical block size
    
    commit ad6bf88a6c19a39fb3b0045d78ea880325dfcf15 upstream.
    
    Logical block size has type unsigned short. That means that it can be at
    most 32768. However, there are architectures that can run with 64k pages
    (for example arm64) and on these architectures, it may be possible to
    create block devices with 64k block size.
    
    For exmaple (run this on an architecture with 64k pages):
    
    Mount will fail with this error because it tries to read the superblock using 2-sector
    access:
      device-mapper: writecache: I/O is not aligned, sector 2, size 1024, block size 65536
      EXT4-fs (dm-0): unable to read superblock
    
    This patch changes the logical block size from unsigned short to unsigned
    int to avoid the overflow.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d904824b87dbe09f5d9ac0c53d2beac6be2f68d4
Author: Chen-Yu Tsai <wens@csie.org>
Date:   Wed Dec 18 11:04:31 2019 +0800

    clk: sunxi-ng: r40: Allow setting parent rate for external clock outputs
    
    commit c7b305267eb77fe47498676e9337324c9653494c upstream.
    
    One of the uses of the external clock outputs is to provide a stable
    32768 Hz clock signal to WiFi and Bluetooth chips. On the R40, the RTC
    has an internal RC oscillator that is muxed with the external crystal.
    
    Allow setting the parent rate for the external clock outputs so that
    requests for 32768 Hz get passed to the RTC's clock driver to mux in
    the external crystal if it isn't already muxed correctly.
    
    Fixes: cd030a78f7aa ("clk: sunxi-ng: support R40 SoC")
    Fixes: 01a7ea763fc4 ("clk: sunxi-ng: r40: Force LOSC parent to RTC LOSC output")
    Cc: <stable@kernel.org>
    Signed-off-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 236f11558ab89f498b7bff1652ece78bc29befea
Author: Jari Ruusu <jari.ruusu@gmail.com>
Date:   Sun Jan 12 15:00:53 2020 +0200

    Fix built-in early-load Intel microcode alignment
    
    commit f5ae2ea6347a308cfe91f53b53682ce635497d0d upstream.
    
    Intel Software Developer's Manual, volume 3, chapter 9.11.6 says:
    
     "Note that the microcode update must be aligned on a 16-byte boundary
      and the size of the microcode update must be 1-KByte granular"
    
    When early-load Intel microcode is loaded from initramfs, userspace tool
    'iucode_tool' has already 16-byte aligned those microcode bits in that
    initramfs image.  Image that was created something like this:
    
     iucode_tool --write-earlyfw=FOO.cpio microcode-files...
    
    However, when early-load Intel microcode is loaded from built-in
    firmware BLOB using CONFIG_EXTRA_FIRMWARE= kernel config option, that
    16-byte alignment is not guaranteed.
    
    Fix this by forcing all built-in firmware BLOBs to 16-byte alignment.
    
    [ If we end up having other firmware with much bigger alignment
      requirements, we might need to introduce some method for the firmware
      to specify it, this is the minimal "just increase the alignment a bit
      to account for this one special case" patch    - Linus ]
    
    Signed-off-by: Jari Ruusu <jari.ruusu@gmail.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Luis Chamberlain <mcgrof@kernel.org>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2979e3ef56fda62fc4d9b42786b00c08db62ecc4
Author: Dinh Nguyen <dinguyen@kernel.org>
Date:   Wed Nov 20 09:15:17 2019 -0600

    arm64: dts: agilex/stratix10: fix pmu interrupt numbers
    
    commit 210de0e996aee8e360ccc9e173fe7f0a7ed2f695 upstream.
    
    Fix up the correct interrupt numbers for the PMU unit on Agilex
    and Stratix10.
    
    Fixes: 78cd6a9d8e15 ("arm64: dts: Add base stratix 10 dtsi")
    Cc: linux-stable <stable@vger.kernel.org>
    Reported-by: Meng Li <Meng.Li@windriver.com>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2559a390b25283ea577299cfe4f8281937e60b1f
Author: Stefan Mavrodiev <stefan@olimex.com>
Date:   Fri Nov 29 13:39:39 2019 +0200

    arm64: dts: allwinner: a64: olinuxino: Fix eMMC supply regulator
    
    commit 8467ebbf708e5c4574b4eb5f663558fc724945ac upstream.
    
    A64-OLinuXino-eMMC uses 1.8V for eMMC supply. This is done via a triple
    jumper, which sets VCC-PL to either 1.8V or 3.3V. This setting is different
    for boards with and without eMMC.
    
    This is not a big issue for DDR52 mode, however the eMMC will not work in
    HS200/HS400, since these modes explicitly requires 1.8V.
    
    Fixes: 94f68f3a4b2a ("arm64: dts: allwinner: a64: Add A64 OlinuXino board (with eMMC)")
    Cc: stable@vger.kernel.org # v5.4
    Signed-off-by: Stefan Mavrodiev <stefan@olimex.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 342a1154f1fbc5ec3a0cafa9273659587c94d43a
Author: Stefan Mavrodiev <stefan@olimex.com>
Date:   Fri Nov 29 13:39:41 2019 +0200

    arm64: dts: allwinner: a64: olinuxino: Fix SDIO supply regulator
    
    commit 3d615c2fc2d111b51d2e20516b920138d4ae29a2 upstream.
    
    A64-OLinuXino uses DCDC1 (VCC-IO) for MMC1 supply. In commit 916b68cfe4b5
    ("arm64: dts: a64-olinuxino: Enable RTL8723BS WiFi") ALDO2 is set, which is
    VCC-PL. Since DCDC1 is always present, the boards are working without a
    problem.
    
    This patch sets the correct regulator.
    
    Fixes: 916b68cfe4b5 ("arm64: dts: a64-olinuxino: Enable RTL8723BS WiFi")
    Cc: stable@vger.kernel.org # v4.16+
    Signed-off-by: Stefan Mavrodiev <stefan@olimex.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 370aadd16d1397a4d089d26a53a02a8117f699e7
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Jan 14 09:39:53 2020 +0100

    ALSA: usb-audio: fix sync-ep altsetting sanity check
    
    commit 5d1b71226dc4d44b4b65766fa9d74492f9d4587b upstream.
    
    The altsetting sanity check in set_sync_ep_implicit_fb_quirk() was
    checking for there to be at least one altsetting but then went on to
    access the second one, which may not exist.
    
    This could lead to random slab data being used to initialise the sync
    endpoint in snd_usb_add_endpoint().
    
    Fixes: c75a8a7ae565 ("ALSA: snd-usb: add support for implicit feedback")
    Fixes: ca10a7ebdff1 ("ALSA: usb-audio: FT C400 sync playback EP to capture EP")
    Fixes: 5e35dc0338d8 ("ALSA: usb-audio: add implicit fb quirk for Behringer UFX1204")
    Fixes: 17f08b0d9aaf ("ALSA: usb-audio: add implicit fb quirk for Axe-Fx II")
    Fixes: 103e9625647a ("ALSA: usb-audio: simplify set_sync_ep_implicit_fb_quirk")
    Cc: stable <stable@vger.kernel.org>     # 3.5
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20200114083953.1106-1-johan@kernel.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b536fe632273697a140fecf7383228dcff2c733
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Jan 13 17:57:19 2020 +0900

    ALSA: firewire-tascam: fix corruption due to spin lock without restoration in SoftIRQ context
    
    commit 747d1f076de5a60770011f6e512de43298ec64cb upstream.
    
    ALSA firewire-tascam driver can bring corruption due to spin lock without
    restoration of IRQ flag in SoftIRQ context. This commit fixes the bug.
    
    Cc: Scott Bahling <sbahling@suse.com>
    Cc: <stable@vger.kernel.org> # v4.21
    Fixes: d7167422433c ("ALSA: firewire-tascam: queue events for change of control surface")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20200113085719.26788-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1990603db10e294e8777ae5c448e6db9c68d7fb5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 15 21:37:33 2020 +0100

    ALSA: seq: Fix racy access for queue timer in proc read
    
    commit 60adcfde92fa40fcb2dbf7cc52f9b096e0cd109a upstream.
    
    snd_seq_info_timer_read() reads the information of the timer assigned
    for each queue, but it's done in a racy way which may lead to UAF as
    spotted by syzkaller.
    
    This patch applies the missing q->timer_mutex lock while accessing the
    timer object as well as a slight code change to adapt the standard
    coding style.
    
    Reported-by: syzbot+2b2ef983f973e5c40943@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200115203733.26530-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4aeac091e28def7c07a2716235ae0f5b215603ac
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Mon Jan 13 17:46:28 2020 +0900

    ALSA: dice: fix fallback from protocol extension into limited functionality
    
    commit 3e2dc6bdb56893bc28257e482e1dbe5d39f313df upstream.
    
    At failure of attempt to detect protocol extension, ALSA dice driver
    should be fallback to limited functionality. However it's not.
    
    This commit fixes it.
    
    Cc: <stable@vger.kernel.org> # v4.18+
    Fixes: 58579c056c1c9 ("ALSA: dice: use extended protocol to detect available stream formats")
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20200113084630.14305-2-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2a04901f3c86edc439549a46d3c02bf65448694
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Jan 6 12:39:03 2020 +0100

    ASoC: Intel: bytcht_es8316: Fix Irbis NB41 netbook quirk
    
    commit 869bced7a055665e3ddb1ba671a441ce6f997bf1 upstream.
    
    When a quirk for the Irbis NB41 netbook was added, to override the defaults
    for this device, I forgot to add/keep the BYT_CHT_ES8316_SSP0 part of the
    defaults, completely breaking audio on this netbook.
    
    This commit adds the BYT_CHT_ES8316_SSP0 flag to the Irbis NB41 netbook
    quirk, making audio work again.
    
    Cc: stable@vger.kernel.org
    Cc: russianneuromancer@ya.ru
    Fixes: aa2ba991c420 ("ASoC: Intel: bytcht_es8316: Add quirk for Irbis NB41 netbook")
    Reported-and-tested-by: russianneuromancer@ya.ru
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20200106113903.279394-1-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fa21beaf7e5f3af57c3006a64a6c46b839f6c3f
Author: Marek Vasut <marex@denx.de>
Date:   Fri Dec 20 10:11:24 2019 +0100

    ARM: dts: imx6q-dhcom: Fix SGTL5000 VDDIO regulator connection
    
    commit fe6a6689d1815b63528796886853890d8ee7f021 upstream.
    
    The SGTL5000 VDDIO is connected to the PMIC SW2 output, not to
    a fixed 3V3 rail. Describe this correctly in the DT.
    
    Fixes: 52c7a088badd ("ARM: dts: imx6q: Add support for the DHCOM iMX6 SoM and PDK2")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: Fabio Estevam <festevam@gmail.com>
    Cc: Ludwig Zenz <lzenz@dh-electronics.com>
    Cc: NXP Linux Team <linux-imx@nxp.com>
    To: linux-arm-kernel@lists.infradead.org
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f0b46c56ff7e57397c03133f735f4b7ce189302
Author: Peng Fan <peng.fan@nxp.com>
Date:   Wed Dec 18 12:22:32 2019 +0000

    ARM: dts: imx7ulp: fix reg of cpu node
    
    commit b8ab62ff7199fac8ce27fa4a149929034fabe7f8 upstream.
    
    According to arm cpus binding doc,
    "
          On 32-bit ARM v7 or later systems this property is
            required and matches the CPU MPIDR[23:0] register
            bits.
    
            Bits [23:0] in the reg cell must be set to
            bits [23:0] in MPIDR.
    
            All other bits in the reg cell must be set to 0.
    "
    
    In i.MX7ULP, the MPIDR[23:0] is 0xf00, not 0, so fix it.
    Otherwise there will be warning:
    "DT missing boot CPU MPIDR[23:0], fall back to default cpu_logical_map"
    
    Fixes: 20434dc92c05 ("ARM: dts: imx: add common imx7ulp dtsi support")
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02f76b65e0609cbc1b3f399c8757caa7331ccb0b
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Dec 16 14:41:53 2019 -0800

    ARM: OMAP2+: Fix ti_sysc_find_one_clockdomain to check for to_clk_hw_omap
    
    commit 90bdfa0b05e3cc809a7c1aa3b1f162b46ea1b330 upstream.
    
    We must bail out early if the clock is not hw_omap. Otherwise we will
    try to access invalid address with hwclk->clkdm_name:
    
    Unable to handle kernel paging request at virtual address ffffffff
    Internal error: Oops: 27 [#1] ARM
    ...
    (strcmp) from [<c011b348>] (clkdm_lookup+0x40/0x60)
    [<c011b348>] (clkdm_lookup) from [<c011cb84>] (ti_sysc_clkdm_init+0x5c/0x64)
    [<c011cb84>] (ti_sysc_clkdm_init) from [<c03680a8>] (sysc_probe+0x948/0x117c)
    [<c03680a8>] (sysc_probe) from [<c03d0af4>] (platform_drv_probe+0x48/0x98)
    ...
    
    Fixes: 2b2f7def058a ("bus: ti-sysc: Add support for missing clockdomain handling")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcd68cdc69847979b2ae233714cf09bcb9b5dcf3
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Sat Jan 11 17:40:04 2020 +0100

    ASoC: msm8916-wcd-analog: Fix MIC BIAS Internal1
    
    commit 057efcf9faea4769cf1020677d93d040db9b23f3 upstream.
    
    MIC BIAS Internal1 is broken at the moment because we always
    enable the internal rbias resistor to the TX2 line (connected to
    the headset microphone), rather than enabling the resistor connected
    to TX1.
    
    Move the RBIAS code to pm8916_wcd_analog_enable_micbias_int1/2()
    to fix this.
    
    Fixes: 585e881e5b9e ("ASoC: codecs: Add msm8916-wcd analog codec")
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Link: https://lore.kernel.org/r/20200111164006.43074-3-stephan@gerhold.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b87225508c886a596bc16e167f14a230bfa584cc
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Sat Jan 11 17:40:03 2020 +0100

    ASoC: msm8916-wcd-analog: Fix selected events for MIC BIAS External1
    
    commit e0beec88397b163c7c4ea6fcfb67e8e07a2671dc upstream.
    
    MIC BIAS External1 sets pm8916_wcd_analog_enable_micbias_ext1()
    as event handler, which ends up in pm8916_wcd_analog_enable_micbias_ext().
    
    But pm8916_wcd_analog_enable_micbias_ext() only handles the POST_PMU
    event, which is not specified in the event flags for MIC BIAS External1.
    This means that the code in the event handler is never actually run.
    
    Set SND_SOC_DAPM_POST_PMU as the only event for the handler to fix this.
    
    Fixes: 585e881e5b9e ("ASoC: codecs: Add msm8916-wcd analog codec")
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Link: https://lore.kernel.org/r/20200111164006.43074-2-stephan@gerhold.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 065f819dfab35278028e7e39f4c3472883588cac
Author: Olivier Moysan <olivier.moysan@st.com>
Date:   Fri Jan 10 14:11:31 2020 +0100

    ASoC: stm32: dfsdm: fix 16 bits record
    
    commit 8e55ea19125b65cffe42747359af99d545e85f2f upstream.
    
    In stm32_afsdm_pcm_cb function, the transfer size is provided in bytes.
    However, samples are copied as 16 bits words from iio buffer.
    Divide by two the transfer size, to copy the right number of samples.
    
    Fixes: 1e7f6e1c69f0 ("ASoC: stm32: dfsdm: add 16 bits audio record support")
    
    Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
    Link: https://lore.kernel.org/r/20200110131131.3191-1-olivier.moysan@st.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24e9094d0673b4ef478561cd9e8bb94ade863b34
Author: Olivier Moysan <olivier.moysan@st.com>
Date:   Thu Jan 9 09:32:54 2020 +0100

    ASoC: stm32: sai: fix possible circular locking
    
    commit a14bf98c045bf119b7e779f186528e38c6428830 upstream.
    
    In current driver, locks can be taken as follows:
    - Register access: take a lock on regmap config and then on clock.
    - Master clock provider: take a lock on clock and then on regmap config.
    This can lead to the circular locking summarized below.
    
    Remove peripheral clock management through regmap framework, and manage
    peripheral clock in driver instead. On register access, lock on clock
    is taken first, which allows to avoid possible locking issue.
    
    [ 6696.561513] ======================================================
    [ 6696.567670] WARNING: possible circular locking dependency detected
    [ 6696.573842] 4.19.49 #866 Not tainted
    [ 6696.577397] ------------------------------------------------------
    [ 6696.583566] pulseaudio/6439 is trying to acquire lock:
    [ 6696.588697] 87b0a25b (enable_lock){..-.}, at: clk_enable_lock+0x64/0x128
    [ 6696.595377]
    [ 6696.595377] but task is already holding lock:
    [ 6696.601197] d858f825 (stm32_sai_sub:1342:(sai->regmap_config)->lock){....}
    ...
    [ 6696.812513]  Possible unsafe locking scenario:
    [ 6696.812513]
    [ 6696.818418]        CPU0                    CPU1
    [ 6696.822935]        ----                    ----
    [ 6696.827451]   lock(stm32_sai_sub:1342:(sai->regmap_config)->lock);
    [ 6696.833618]                                lock(enable_lock);
    [ 6696.839350]                                lock(stm32_sai_sub:1342:
                                                  (sai->regmap_config)->lock);
    [ 6696.848035]   lock(enable_lock);
    
    Fixes: 03e78a242a15 ("ASoC: stm32: sai: add h7 support")
    
    Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
    Link: https://lore.kernel.org/r/20200109083254.478-1-olivier.moysan@st.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80c59b8a8a6a912e38dd620b48ffa4fff135c861
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Sun Jan 5 11:27:53 2020 +0100

    ASoC: msm8916-wcd-digital: Reset RX interpolation path after use
    
    commit 85578bbd642f65065039b1765ebe1a867d5435b0 upstream.
    
    For some reason, attempting to route audio through QDSP6 on MSM8916
    causes the RX interpolation path to get "stuck" after playing audio
    a few times. In this situation, the analog codec part is still working,
    but the RX path in the digital codec stops working, so you only hear
    the analog parts powering up. After a reboot everything works again.
    
    So far I was not able to reproduce the problem when using lpass-cpu.
    
    The downstream kernel driver avoids this by resetting the RX
    interpolation path after use. In mainline we do something similar
    for the TX decimator (LPASS_CDC_CLK_TX_RESET_B1_CTL), but the
    interpolator reset (LPASS_CDC_CLK_RX_RESET_CTL) got lost when the
    msm8916-wcd driver was split into analog and digital.
    
    Fix this problem by adding the reset to
    msm8916_wcd_digital_enable_interpolator().
    
    Fixes: 150db8c5afa1 ("ASoC: codecs: Add msm8916-wcd digital codec")
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Link: https://lore.kernel.org/r/20200105102753.83108-1-stephan@gerhold.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71afd206fb11f1ae355dbe8846b0eca1c6dfd7e0
Author: Angus Ainslie (Purism) <angus@akkea.ca>
Date:   Mon Dec 23 09:12:53 2019 +0100

    arm64: dts: imx8mq-librem5-devkit: use correct interrupt for the magnetometer
    
    commit 106f7b3bf943d267eb657f34616adcaadb2ab07f upstream.
    
    The LSM9DS1 uses a high level interrupt.
    
    Signed-off-by: Angus Ainslie (Purism) <angus@akkea.ca>
    Signed-off-by: Martin Kepplinger <martin.kepplinger@puri.sm>
    Fixes: eb4ea0857c83 ("arm64: dts: fsl: librem5: Add a device tree for the Librem5 devkit")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5345464c07e24adafc03146b98bb0b4281dd5bf6
Author: Kevin Hao <haokexin@gmail.com>
Date:   Tue Jan 14 16:28:18 2020 +0800

    Revert "gpio: thunderx: Switch to GPIOLIB_IRQCHIP"
    
    commit a564ac35d60564dd5b509e32afdc04e7aafee40e upstream.
    
    This reverts commit a7fc89f9d5fcc10a5474cfe555f5a9e5df8b0f1f because
    there are some bugs in this commit, and we don't have a simple way to
    fix these bugs. So revert this commit to make the thunderx gpio work
    on the stable kernel at least. We will switch to GPIOLIB_IRQCHIP
    for thunderx gpio by following patches.
    
    Fixes: a7fc89f9d5fc ("gpio: thunderx: Switch to GPIOLIB_IRQCHIP")
    Signed-off-by: Kevin Hao <haokexin@gmail.com>
    Link: https://lore.kernel.org/r/20200114082821.14015-2-haokexin@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4b9a54d5f4e1b0ce2e456f5815396082ae371ae
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Dec 25 08:34:29 2019 -0800

    clk: Don't try to enable critical clocks if prepare failed
    
    commit 12ead77432f2ce32dea797742316d15c5800cb32 upstream.
    
    The following traceback is seen if a critical clock fails to prepare.
    
    bcm2835-clk 3f101000.cprman: plld: couldn't lock PLL
    ------------[ cut here ]------------
    Enabling unprepared plld_per
    WARNING: CPU: 1 PID: 1 at drivers/clk/clk.c:1014 clk_core_enable+0xcc/0x2c0
    ...
    Call trace:
     clk_core_enable+0xcc/0x2c0
     __clk_register+0x5c4/0x788
     devm_clk_hw_register+0x4c/0xb0
     bcm2835_register_pll_divider+0xc0/0x150
     bcm2835_clk_probe+0x134/0x1e8
     platform_drv_probe+0x50/0xa0
     really_probe+0xd4/0x308
     driver_probe_device+0x54/0xe8
     device_driver_attach+0x6c/0x78
     __driver_attach+0x54/0xd8
    ...
    
    Check return values from clk_core_prepare() and clk_core_enable() and
    bail out if any of those functions returns an error.
    
    Cc: Jerome Brunet <jbrunet@baylibre.com>
    Fixes: 99652a469df1 ("clk: migrate the count of orphaned clocks at init")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lkml.kernel.org/r/20191225163429.29694-1-linux@roeck-us.net
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5aacb4de36dd57546d6df0da18d49dfd27e68a36
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Dec 16 14:41:53 2019 -0800

    bus: ti-sysc: Fix iterating over clocks
    
    commit 2c81f0f6d3f52ac222a5dc07a6e5c06e1543e88b upstream.
    
    Commit d878970f6ce1 ("bus: ti-sysc: Add separate functions for handling
    clocks") separated handling of optional clocks from the main clocks, but
    introduced an issue where we do not necessarily allocate a slot for both
    fck and ick clocks, but still assume fixed slots for enumerating over the
    clocks.
    
    Let's fix the issue by ensuring we always have slots for both fck and ick
    even if we don't use ick, and don't attempt to enumerate optional clocks
    if not allocated.
    
    In the long run we might want to simplify things a bit by only allocating
    space only for the optional clocks as we have only few devices with
    optional clocks.
    
    Fixes: d878970f6ce1 ("bus: ti-sysc: Add separate functions for handling clocks")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 289ecfaadf19f645724408b5b1d117266f6901b3
Author: Adam Ford <aford173@gmail.com>
Date:   Mon Dec 16 05:15:30 2019 -0600

    arm64: dts: imx8mm: Change SDMA1 ahb clock for imx8mm
    
    commit 24a572bf67994223e722cadfe663e15ba221882a upstream.
    
    Using SDMA1 with UART1 is causing a "Timeout waiting for CH0" error.
    This patch changes to ahb clock from SDMA1_ROOT to AHB which
    fixes the timeout error.
    
    Fixes:  a05ea40eb384 ("arm64: dts: imx: Add i.mx8mm dtsi support")
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 125d83905c268c976d58d28ed971ca6ef88f4874
Author: Yinbo Zhu <yinbo.zhu@nxp.com>
Date:   Fri Dec 13 10:18:39 2019 +0800

    arm64: dts: ls1028a: fix endian setting for dcfg
    
    commit 33eae7fb2e593fdbaac15d843e2558379c6d1149 upstream.
    
    DCFG block uses little endian.  Fix it so that register access becomes
    correct.
    
    Signed-off-by: Yinbo Zhu <yinbo.zhu@nxp.com>
    Acked-by: Yangbo Lu <yangbo.lu@nxp.com>
    Fixes: 8897f3255c9c ("arm64: dts: Add support for NXP LS1028A SoC")
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8aa9bbdb2c78b9fe3aec09814dd33f7f84f30db8
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Fri Dec 13 00:08:14 2019 +0100

    ARM: dts: imx6q-dhcom: fix rtc compatible
    
    commit 7d7778b1396bc9e2a3875009af522beb4ea9355a upstream.
    
    The only correct and documented compatible string for the rv3029 is
    microcrystal,rv3029. Fix it up.
    
    Fixes: 52c7a088badd ("ARM: dts: imx6q: Add support for the DHCOM iMX6 SoM and PDK2")
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1498e9e5d2703caac2a8eac5b603c12f326d4ed
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sat Nov 30 19:53:37 2019 +0100

    dt-bindings: reset: meson8b: fix duplicate reset IDs
    
    commit 4881873f4cc1460f63d85fa81363d56be328ccdc upstream.
    
    According to the public S805 datasheet the RESET2 register uses the
    following bits for the PIC_DC, PSC and NAND reset lines:
    - PIC_DC is at bit 3 (meaning: RESET_VD_RMEM + 3)
    - PSC is at bit 4 (meaning: RESET_VD_RMEM + 4)
    - NAND is at bit 5 (meaning: RESET_VD_RMEM + 4)
    
    Update the reset IDs of these three reset lines so they don't conflict
    with PIC_DC and map to the actual hardware reset lines.
    
    Fixes: 79795e20a184eb ("dt-bindings: reset: Add bindings for the Meson SoC Reset Controller")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 796145a38f6550af39b5613a02e624de94c61566
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sat Nov 30 15:58:21 2019 +0100

    soc: amlogic: meson-ee-pwrc: propagate errors from pm_genpd_init()
    
    commit c67aafd60d7e323fe74bf45fab60148f84cf9b95 upstream.
    
    pm_genpd_init() can return an error. Propagate the error code to prevent
    the driver from indicating that it successfully probed while there were
    errors during pm_genpd_init().
    
    Fixes: eef3c2ba0a42a6 ("soc: amlogic: Add support for Everything-Else power domains controller")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72840676ce05e19b08bae197f7afa576d50ee3a2
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sat Nov 30 15:58:20 2019 +0100

    soc: amlogic: meson-ee-pwrc: propagate PD provider registration errors
    
    commit 0766d65e6afaea8b80205a468207de9f18cd7ec8 upstream.
    
    of_genpd_add_provider_onecell() can return an error. Propagate the error
    so the driver registration fails when of_genpd_add_provider_onecell()
    did not work.
    
    Fixes: eef3c2ba0a42a6 ("soc: amlogic: Add support for Everything-Else power domains controller")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff49e8fbbddb232d1b21544aa25a10975edf5b82
Author: Georgi Djakov <georgi.djakov@linaro.org>
Date:   Tue Nov 26 17:34:37 2019 +0200

    clk: qcom: gcc-sdm845: Add missing flag to votable GDSCs
    
    commit 5e82548e26ef62e257dc2ff37c11acb5eb72728e upstream.
    
    On sdm845 devices, during boot we see the following warnings (unless we
    have added 'pd_ignore_unused' to the kernel command line):
            hlos1_vote_mmnoc_mmu_tbu_sf_gdsc status stuck at 'on'
            hlos1_vote_mmnoc_mmu_tbu_hf1_gdsc status stuck at 'on'
            hlos1_vote_mmnoc_mmu_tbu_hf0_gdsc status stuck at 'on'
            hlos1_vote_aggre_noc_mmu_tbu2_gdsc status stuck at 'on'
            hlos1_vote_aggre_noc_mmu_tbu1_gdsc status stuck at 'on'
            hlos1_vote_aggre_noc_mmu_pcie_tbu_gdsc status stuck at 'on'
            hlos1_vote_aggre_noc_mmu_audio_tbu_gdsc status stuck at 'on'
    
    As the name of these GDSCs suggests, they are "votable" and in downstream
    DT, they all have the property "qcom,no-status-check-on-disable", which
    means that we should not poll the status bit when we disable them.
    
    Luckily the VOTABLE flag already exists and it does exactly what we need,
    so let's make use of it to make the warnings disappear.
    
    Fixes: 06391eddb60a ("clk: qcom: Add Global Clock controller (GCC) driver for SDM845")
    Reported-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Georgi Djakov <georgi.djakov@linaro.org>
    Link: https://lkml.kernel.org/r/20191126153437.11808-1-georgi.djakov@linaro.org
    Tested-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48c26bbbeeaf913215ce34d7532b4cf22832f3a7
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sun Nov 17 16:41:54 2019 +0100

    ARM: dts: meson8: fix the size of the PMU registers
    
    commit 46c9585ed4af688ff1be6d4e76d7ed2f04de4fba upstream.
    
    The PMU registers are at least 0x18 bytes wide. Meson8b already uses a
    size of 0x18. The structure of the PMU registers on Meson8 and Meson8b
    is similar but not identical.
    
    Meson8 and Meson8b have the following registers in common (starting at
    AOBUS + 0xe0):
      #define AO_RTI_PWR_A9_CNTL0 0xe0 (0x38 << 2)
      #define AO_RTI_PWR_A9_CNTL1 0xe4 (0x39 << 2)
      #define AO_RTI_GEN_PWR_SLEEP0 0xe8 (0x3a << 2)
      #define AO_RTI_GEN_PWR_ISO0 0x4c (0x3b << 2)
    
    Meson8b additionally has these three registers:
      #define AO_RTI_GEN_PWR_ACK0 0xf0 (0x3c << 2)
      #define AO_RTI_PWR_A9_MEM_PD0 0xf4 (0x3d << 2)
      #define AO_RTI_PWR_A9_MEM_PD1 0xf8 (0x3e << 2)
    
    Thus we can assume that the register size of the PMU IP blocks is
    identical on both SoCs (and Meson8 just contains some reserved registers
    in that area) because the CEC registers start right after the PMU
    (AO_RTI_*) registers at AOBUS + 0x100 (0x40 << 2).
    
    The upcoming power domain driver will need to read and write the
    AO_RTI_GEN_PWR_SLEEP0 and AO_RTI_GEN_PWR_ISO0 registers, so the updated
    size is needed for that driver to work.
    
    Fixes: 4a5a27116b447d ("ARM: dts: meson8: add support for booting the secondary CPU cores")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Kevin Hilman <khilman@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
