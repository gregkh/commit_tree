commit 07e5f23d3fa6ca98457d1a2177a735fcc65923c2
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Sep 22 12:26:46 2021 +0200

    Linux 5.4.148
    
    Link: https://lore.kernel.org/r/20210920163931.123590023@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54ac8339ae99e54139637f8cd409de047a101d7a
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Tue Sep 7 13:41:16 2021 +0200

    s390/bpf: Fix 64-bit subtraction of the -0x80000000 constant
    
    commit 6e61dc9da0b7a0d91d57c2e20b5ea4fd2d4e7e53 upstream.
    
    The JIT uses agfi for subtracting constants, but -(-0x80000000) cannot
    be represented as a 32-bit signed binary integer. Fix by using algfi in
    this particular case.
    
    Reported-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Fixes: 054623105728 ("s390/bpf: Add s390x eBPF JIT compiler backend")
    Reviewed-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5fc48000b0ed5c389d426c341b43f580faa7904
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Mon Sep 6 15:04:14 2021 +0200

    s390/bpf: Fix optimizing out zero-extensions
    
    commit db7bee653859ef7179be933e7d1384644f795f26 upstream.
    
    Currently the JIT completely removes things like `reg32 += 0`,
    however, the BPF_ALU semantics requires the target register to be
    zero-extended in such cases.
    
    Fix by optimizing out only the arithmetic operation, but not the
    subsequent zero-extension.
    
    Reported-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Fixes: 054623105728 ("s390/bpf: Add s390x eBPF JIT compiler backend")
    Reviewed-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7f1bac8983f65dd974079c3cfd5644a87fbf177
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Tue Sep 7 20:29:40 2021 +0900

    net: renesas: sh_eth: Fix freeing wrong tx descriptor
    
    [ Upstream commit 0341d5e3d1ee2a36dd5a49b5bef2ce4ad1cfa6b4 ]
    
    The cur_tx counter must be incremented after TACT bit of
    txdesc->status was set. However, a CPU is possible to reorder
    instructions and/or memory accesses between cur_tx and
    txdesc->status. And then, if TX interrupt happened at such a
    timing, the sh_eth_tx_free() may free the descriptor wrongly.
    So, add wmb() before cur_tx++.
    Otherwise NETDEV WATCHDOG timeout is possible to happen.
    
    Fixes: 86a74ff21a7a ("net: sh_eth: add support for Renesas SuperH Ethernet")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d32ce5472bb2ca720bef84089b85f76a705fd1a
Author: Willem de Bruijn <willemb@google.com>
Date:   Sun Sep 5 11:21:09 2021 -0400

    ip_gre: validate csum_start only on pull
    
    [ Upstream commit 8a0ed250f911da31a2aef52101bc707846a800ff ]
    
    The GRE tunnel device can pull existing outer headers in ipge_xmit.
    This is a rare path, apparently unique to this device. The below
    commit ensured that pulling does not move skb->data beyond csum_start.
    
    But it has a false positive if ip_summed is not CHECKSUM_PARTIAL and
    thus csum_start is irrelevant.
    
    Refine to exclude this. At the same time simplify and strengthen the
    test.
    
    Simplify, by moving the check next to the offending pull, making it
    more self documenting and removing an unnecessary branch from other
    code paths.
    
    Strengthen, by also ensuring that the transport header is correct and
    therefore the inner headers will be after skb_reset_inner_headers.
    The transport header is set to csum_start in skb_partial_csum_set.
    
    Link: https://lore.kernel.org/netdev/YS+h%2FtqCJJiQei+W@shredder/
    Fixes: 1d011c4803c7 ("ip_gre: add validation for csum_start")
    Reported-by: Ido Schimmel <idosch@idosch.org>
    Suggested-by: Alexander Duyck <alexander.duyck@gmail.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Reviewed-by: Alexander Duyck <alexanderduyck@fb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9b308f7302efbb3de087c087ad0d18eda071d92
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Fri Sep 3 15:35:43 2021 +0800

    qlcnic: Remove redundant unlock in qlcnic_pinit_from_rom
    
    [ Upstream commit 9ddbc2a00d7f63fa9748f4278643193dac985f2d ]
    
    Previous commit 68233c583ab4 removes the qlcnic_rom_lock()
    in qlcnic_pinit_from_rom(), but remains its corresponding
    unlock function, which is odd. I'm not very sure whether the
    lock is missing, or the unlock is redundant. This bug is
    suggested by a static analysis tool, please advise.
    
    Fixes: 68233c583ab4 ("qlcnic: updated reset sequence")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93f54354ccc8cffd4daea2837f7b95b6da0966a9
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Sep 3 15:03:43 2021 -0700

    fq_codel: reject silly quantum parameters
    
    [ Upstream commit c7c5e6ff533fe1f9afef7d2fa46678987a1335a7 ]
    
    syzbot found that forcing a big quantum attribute would crash hosts fast,
    essentially using this:
    
    tc qd replace dev eth0 root fq_codel quantum 4294967295
    
    This is because fq_codel_dequeue() would have to loop
    ~2^31 times in :
    
            if (flow->deficit <= 0) {
                    flow->deficit += q->quantum;
                    list_move_tail(&flow->flowchain, &q->old_flows);
                    goto begin;
            }
    
    SFQ max quantum is 2^19 (half a megabyte)
    Lets adopt a max quantum of one megabyte for FQ_CODEL.
    
    Fixes: 4b549a2ef4be ("fq_codel: Fair Queue Codel AQM")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d448b240b17501b2f9a168e9d3689446413ca29a
Author: Benjamin Hesmans <benjamin.hesmans@tessares.net>
Date:   Fri Sep 3 15:23:35 2021 +0200

    netfilter: socket: icmp6: fix use-after-scope
    
    [ Upstream commit 730affed24bffcd1eebd5903171960f5ff9f1f22 ]
    
    Bug reported by KASAN:
    
    BUG: KASAN: use-after-scope in inet6_ehashfn (net/ipv6/inet6_hashtables.c:40)
    Call Trace:
    (...)
    inet6_ehashfn (net/ipv6/inet6_hashtables.c:40)
    (...)
    nf_sk_lookup_slow_v6 (net/ipv6/netfilter/nf_socket_ipv6.c:91
    net/ipv6/netfilter/nf_socket_ipv6.c:146)
    
    It seems that this bug has already been fixed by Eric Dumazet in the
    past in:
    commit 78296c97ca1f ("netfilter: xt_socket: fix a stack corruption bug")
    
    But a variant of the same issue has been introduced in
    commit d64d80a2cde9 ("netfilter: x_tables: don't extract flow keys on early demuxed sks in socket match")
    
    `daddr` and `saddr` potentially hold a reference to ipv6_var that is no
    longer in scope when the call to `nf_socket_get_sock_v6` is made.
    
    Fixes: d64d80a2cde9 ("netfilter: x_tables: don't extract flow keys on early demuxed sks in socket match")
    Acked-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Benjamin Hesmans <benjamin.hesmans@tessares.net>
    Reviewed-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b79204169de5941e645a011b3a45c1c40b0800bd
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Sep 2 10:30:50 2021 +0200

    net: dsa: b53: Fix calculating number of switch ports
    
    [ Upstream commit cdb067d31c0fe4cce98b9d15f1f2ef525acaa094 ]
    
    It isn't true that CPU port is always the last one. Switches BCM5301x
    have 9 ports (port 6 being inactive) and they use port 5 as CPU by
    default (depending on design some other may be CPU ports too).
    
    A more reliable way of determining number of ports is to check for the
    last set bit in the "enabled_ports" bitfield.
    
    This fixes b53 internal state, it will allow providing accurate info to
    the DSA and is required to fix BCM5301x support.
    
    Fixes: 967dd82ffc52 ("net: dsa: b53: Add support for Broadcom RoboSwitch")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5c0f016ae85337f3fe22a533eeec7e261bced02
Author: Li Huafei <lihuafei1@huawei.com>
Date:   Mon Aug 23 21:43:40 2021 +0800

    perf unwind: Do not overwrite FEATURE_CHECK_LDFLAGS-libunwind-{x86,aarch64}
    
    [ Upstream commit cdf32b44678c382a31dc183d9a767306915cda7b ]
    
    When setting LIBUNWIND_DIR, we first set
    
     FEATURE_CHECK_LDFLAGS-libunwind-{aarch64,x86} = -L$(LIBUNWIND_DIR)/lib.
    
    <committer note>
    This happens a bit before, the overwritting, in:
    
      libunwind_arch_set_flags = $(eval $(libunwind_arch_set_flags_code))
      define libunwind_arch_set_flags_code
        FEATURE_CHECK_CFLAGS-libunwind-$(1)  = -I$(LIBUNWIND_DIR)/include
        FEATURE_CHECK_LDFLAGS-libunwind-$(1) = -L$(LIBUNWIND_DIR)/lib
      endef
    
      ifdef LIBUNWIND_DIR
        LIBUNWIND_CFLAGS  = -I$(LIBUNWIND_DIR)/include
        LIBUNWIND_LDFLAGS = -L$(LIBUNWIND_DIR)/lib
        LIBUNWIND_ARCHS = x86 x86_64 arm aarch64 debug-frame-arm debug-frame-aarch64
        $(foreach libunwind_arch,$(LIBUNWIND_ARCHS),$(call libunwind_arch_set_flags,$(libunwind_arch)))
      endif
    
    Look at that 'foreach' on all the LIBUNWIND_ARCHS.
    </>
    
    After commit 5c4d7c82c0dc ("perf unwind: Do not put libunwind-{x86,aarch64}
    in FEATURE_TESTS_BASIC"), FEATURE_CHECK_LDFLAGS-libunwind-{x86,aarch64} is
    overwritten. As a result, the remote libunwind libraries cannot be searched
    from $(LIBUNWIND_DIR)/lib directory during feature check tests. Fix it with
    variable appending.
    
    Before this patch:
    
      perf$ make VF=1 LIBUNWIND_DIR=/opt/libunwind_aarch64
       BUILD:   Doing 'make -j16' parallel build
      <SNIP>
      ...
      ...                    libopencsd: [ OFF ]
      ...                 libunwind-x86: [ OFF ]
      ...              libunwind-x86_64: [ OFF ]
      ...                 libunwind-arm: [ OFF ]
      ...             libunwind-aarch64: [ OFF ]
      ...         libunwind-debug-frame: [ OFF ]
      ...     libunwind-debug-frame-arm: [ OFF ]
      ... libunwind-debug-frame-aarch64: [ OFF ]
      ...                           cxx: [ OFF ]
      <SNIP>
    
      perf$ cat ../build/feature/test-libunwind-aarch64.make.output
      /usr/bin/ld: cannot find -lunwind-aarch64
      /usr/bin/ld: cannot find -lunwind-aarch64
      collect2: error: ld returned 1 exit status
    
    After this patch:
    
      perf$ make VF=1 LIBUNWIND_DIR=/opt/libunwind_aarch64
       BUILD:   Doing 'make -j16' parallel build
      <SNIP>
      ...                    libopencsd: [ OFF ]
      ...                 libunwind-x86: [ OFF ]
      ...              libunwind-x86_64: [ OFF ]
      ...                 libunwind-arm: [ OFF ]
      ...             libunwind-aarch64: [ on  ]
      ...         libunwind-debug-frame: [ OFF ]
      ...     libunwind-debug-frame-arm: [ OFF ]
      ... libunwind-debug-frame-aarch64: [ OFF ]
      ...                           cxx: [ OFF ]
      <SNIP>
    
      perf$ cat ../build/feature/test-libunwind-aarch64.make.output
    
      perf$ ldd ./perf
            linux-vdso.so.1 (0x00007ffdf07da000)
            libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f30953dc000)
            librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f30951d4000)
            libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f3094e36000)
            libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f3094c32000)
            libelf.so.1 => /usr/lib/x86_64-linux-gnu/libelf.so.1 (0x00007f3094a18000)
            libdw.so.1 => /usr/lib/x86_64-linux-gnu/libdw.so.1 (0x00007f30947cc000)
            libunwind-x86_64.so.8 => /usr/lib/x86_64-linux-gnu/libunwind-x86_64.so.8 (0x00007f30945ad000)
            libunwind.so.8 => /usr/lib/x86_64-linux-gnu/libunwind.so.8 (0x00007f3094392000)
            liblzma.so.5 => /lib/x86_64-linux-gnu/liblzma.so.5 (0x00007f309416c000)
            libunwind-aarch64.so.8 => not found
            libslang.so.2 => /lib/x86_64-linux-gnu/libslang.so.2 (0x00007f3093c8a000)
            libpython2.7.so.1.0 => /usr/local/lib/libpython2.7.so.1.0 (0x00007f309386b000)
            libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f309364e000)
            libnuma.so.1 => /usr/lib/x86_64-linux-gnu/libnuma.so.1 (0x00007f3093443000)
            libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f3093052000)
            /lib64/ld-linux-x86-64.so.2 (0x00007f3096097000)
            libbz2.so.1.0 => /lib/x86_64-linux-gnu/libbz2.so.1.0 (0x00007f3092e42000)
            libutil.so.1 => /lib/x86_64-linux-gnu/libutil.so.1 (0x00007f3092c3f000)
    
    Fixes: 5c4d7c82c0dceccf ("perf unwind: Do not put libunwind-{x86,aarch64} in FEATURE_TESTS_BASIC")
    Signed-off-by: Li Huafei <lihuafei1@huawei.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: He Kuang <hekuang@huawei.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Zhang Jinhao <zhangjinhao2@huawei.com>
    Link: http://lore.kernel.org/lkml/20210823134340.60955-1-lihuafei1@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 114bf5776f56142dead29c1ff5ecd64612282bef
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Aug 16 14:05:33 2021 -0700

    ARC: export clear_user_page() for modules
    
    [ Upstream commit 6b5ff0405e4190f23780362ea324b250bc495683 ]
    
    0day bot reports a build error:
      ERROR: modpost: "clear_user_page" [drivers/media/v4l2-core/videobuf-dma-sg.ko] undefined!
    so export it in arch/arc/ to fix the build error.
    
    In most ARCHes, clear_user_page() is a macro. OTOH, in a few
    ARCHes it is a function and needs to be exported.
    PowerPC exported it in 2004. It looks like nds32 and nios2
    still need to have it exported.
    
    Fixes: 4102b53392d63 ("ARC: [mm] Aliasing VIPT dcache support 2/4")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: linux-snps-arc@lists.infradead.org
    Signed-off-by: Vineet Gupta <vgupta@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b63c27d6b70c43dee4599aebf145c6a7743249e
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Aug 21 09:58:45 2021 +0200

    mtd: rawnand: cafe: Fix a resource leak in the error handling path of 'cafe_nand_probe()'
    
    [ Upstream commit 6b430c7595e4eb95fae8fb54adc3c3ce002e75ae ]
    
    A successful 'init_rs_non_canonical()' call should be balanced by a
    corresponding 'free_rs()' call in the error handling path of the probe, as
    already done in the remove function.
    
    Update the error handling path accordingly.
    
    Fixes: 8c61b7a7f4d4 ("[MTD] [NAND] Use rslib for CAFÉ ECC")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/fd313d3fb787458bcc73189e349f481133a2cdc9.1629532640.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14e0fdc43ddfb052580e3ebb6e4806f0cf087fc0
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Aug 13 18:36:19 2021 +0300

    PCI: Sync __pci_register_driver() stub for CONFIG_PCI=n
    
    [ Upstream commit 817f9916a6e96ae43acdd4e75459ef4f92d96eb1 ]
    
    The CONFIG_PCI=y case got a new parameter long time ago.  Sync the stub as
    well.
    
    [bhelgaas: add parameter names]
    Fixes: 725522b5453d ("PCI: add the sysfs driver name to all modules")
    Link: https://lore.kernel.org/r/20210813153619.89574-1-andriy.shevchenko@linux.intel.com
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 810f9b6f0a404bb688048b3e50249c0b6c129257
Author: Oliver Upton <oupton@google.com>
Date:   Wed Aug 18 20:21:31 2021 +0000

    KVM: arm64: Handle PSCI resets before userspace touches vCPU state
    
    [ Upstream commit 6826c6849b46aaa91300201213701eb861af4ba0 ]
    
    The CPU_ON PSCI call takes a payload that KVM uses to configure a
    destination vCPU to run. This payload is non-architectural state and not
    exposed through any existing UAPI. Effectively, we have a race between
    CPU_ON and userspace saving/restoring a guest: if the target vCPU isn't
    ran again before the VMM saves its state, the requested PC and context
    ID are lost. When restored, the target vCPU will be runnable and start
    executing at its old PC.
    
    We can avoid this race by making sure the reset payload is serviced
    before userspace can access a vCPU's state.
    
    Fixes: 358b28f09f0a ("arm/arm64: KVM: Allow a VCPU to fully reset itself")
    Signed-off-by: Oliver Upton <oupton@google.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210818202133.1106786-3-oupton@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f289dcf0b0221878f7fa665071bdddb301b38fe
Author: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
Date:   Fri Jul 16 12:00:48 2021 +0200

    mfd: tqmx86: Clear GPIO IRQ resource when no IRQ is set
    
    [ Upstream commit a946506c48f3bd09363c9d2b0a178e55733bcbb6 ]
    
    The driver was registering IRQ 0 when no IRQ was set. This leads to
    warnings with newer kernels.
    
    Clear the resource flags, so no resource is registered at all in this
    case.
    
    Fixes: 2f17dd34ffed ("mfd: tqmx86: IO controller with I2C, Wachdog and GPIO")
    Signed-off-by: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1746c27c3737fc22dfe6323d67caa85547d98e7
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Aug 12 10:00:04 2021 +0300

    PCI: Fix pci_dev_str_match_path() alloc while atomic bug
    
    [ Upstream commit 7eb6ea4148579b85540a41d57bcec315b8af8ff8 ]
    
    pci_dev_str_match_path() is often called with a spinlock held so the
    allocation has to be atomic.  The call tree is:
    
      pci_specified_resource_alignment() <-- takes spin_lock();
        pci_dev_str_match()
          pci_dev_str_match_path()
    
    Fixes: 45db33709ccc ("PCI: Allow specifying devices using a base bus and path of devfns")
    Link: https://lore.kernel.org/r/20210812070004.GC31863@kili
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit beaf65f0fe0c9c81110d473432680a32b23de80f
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Jun 29 19:12:39 2021 +0200

    mfd: axp20x: Update AXP288 volatile ranges
    
    [ Upstream commit f949a9ebce7a18005266b859a17f10c891bb13d7 ]
    
    On Cherry Trail devices with an AXP288 PMIC the external SD-card slot
    used the AXP's DLDO2 as card-voltage and either DLDO3 or GPIO1LDO
    (GPIO1 pin in low noise LDO mode) as signal-voltage.
    
    These regulators are turned on/off and in case of the signal-voltage
    also have their output-voltage changed by the _PS0 and _PS3 power-
    management ACPI methods on the MMC-controllers ACPI fwnode as well as
    by the _DSM ACPI method for changing the signal voltage.
    
    The AML code implementing these methods is directly accessing the
    PMIC through ACPI I2C OpRegion accesses, instead of using the special
    PMIC OpRegion handled by drivers/acpi/pmic/intel_pmic_xpower.c .
    
    This means that the contents of the involved PMIC registers can change
    without the change being made through the regmap interface, so regmap
    should not cache the contents of these registers.
    
    Mark the regulator power on/off, the regulator voltage control and the
    GPIO1 control registers as volatile, to avoid regmap caching them.
    
    Specifically this fixes an issue on some models where the i915 driver
    toggles another LDO using the same on/off register on/off through
    MIPI sequences (through intel_soc_pmic_exec_mipi_pmic_seq_element())
    which then writes back a cached on/off register-value where the
    card-voltage is off causing the external sdcard slot to stop working
    when the screen goes blank, or comes back on again.
    
    The regulator register-range now marked volatile also includes the
    buck regulator control registers. This is done on purpose these are
    normally not touched by the AML code, but they are updated directly
    by the SoC's PUNIT which means that they may also change without going
    through regmap.
    
    Note the AXP288 PMIC is only used on Bay- and Cherry-Trail platforms,
    so even though this is an ACPI specific problem there is no need to
    make the new volatile ranges conditional since these platforms always
    use ACPI.
    
    Fixes: dc91c3b6fe66 ("mfd: axp20x: Mark AXP20X_VBUS_IPSOUT_MGMT as volatile")
    Fixes: cd53216625a0 ("mfd: axp20x: Fix axp288 volatile ranges")
    Reported-and-tested-by: Clamshell <clamfly@163.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a6c7c818bcb8c18c2fc77b37a2d0b2cfa14d7d9
Author: Yang Li <yang.lee@linux.alibaba.com>
Date:   Mon Jun 7 16:40:36 2021 +0800

    NTB: perf: Fix an error code in perf_setup_inbuf()
    
    [ Upstream commit 0097ae5f7af5684f961a5f803ff7ad3e6f933668 ]
    
    When the function IS_ALIGNED() returns false, the value of ret is 0.
    So, we set ret to -EINVAL to indicate this error.
    
    Clean up smatch warning:
    drivers/ntb/test/ntb_perf.c:602 perf_setup_inbuf() warn: missing error
    code 'ret'.
    
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Yang Li <yang.lee@linux.alibaba.com>
    Reviewed-by: Serge Semin <fancer.lancer@gmail.com>
    Signed-off-by: Jon Mason <jdmason@kudzu.us>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a161419496352e91b30a1915684c1d644ed8a2e
Author: Yang Li <yang.lee@linux.alibaba.com>
Date:   Mon Jun 7 13:56:20 2021 +0800

    NTB: Fix an error code in ntb_msit_probe()
    
    [ Upstream commit 319f83ac98d7afaabab84ce5281a819a358b9895 ]
    
    When the value of nm->isr_ctx is false, the value of ret is 0.
    So, we set ret to -ENOMEM to indicate this error.
    
    Clean up smatch warning:
    drivers/ntb/test/ntb_msi_test.c:373 ntb_msit_probe() warn: missing
    error code 'ret'.
    
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Yang Li <yang.lee@linux.alibaba.com>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Signed-off-by: Jon Mason <jdmason@kudzu.us>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 098069796940383bd87b86d46af16fec66b57396
Author: Yang Li <yang.lee@linux.alibaba.com>
Date:   Fri Sep 3 14:42:33 2021 +0800

    ethtool: Fix an error code in cxgb2.c
    
    [ Upstream commit 7db8263a12155c7ae4ad97e850f1e499c73765fc ]
    
    When adapter->registered_device_map is NULL, the value of err is
    uncertain, we set err to -EINVAL to avoid ambiguity.
    
    Clean up smatch warning:
    drivers/net/ethernet/chelsio/cxgb/cxgb2.c:1114 init_one() warn: missing
    error code 'err'
    
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Yang Li <yang.lee@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f336aa92b4316918a27788007a06f6ace2b2a8d0
Author: Vishal Aslot <os.vaslot@gmail.com>
Date:   Wed Aug 18 11:57:51 2021 -0500

    PCI: ibmphp: Fix double unmap of io_mem
    
    [ Upstream commit faa2e05ad0dccf37f995bcfbb8d1980d66c02c11 ]
    
    ebda_rsrc_controller() calls iounmap(io_mem) on the error path. Its caller,
    ibmphp_access_ebda(), also calls iounmap(io_mem) on good and error paths.
    
    Remove the iounmap(io_mem) invocation from ebda_rsrc_controller().
    
    [bhelgaas: remove item from TODO]
    Link: https://lore.kernel.org/r/20210818165751.591185-1-os.vaslot@gmail.com
    Signed-off-by: Vishal Aslot <os.vaslot@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f9550c4f40d657e40f6d94d4c592b01aad580d5
Author: Paolo Valente <paolo.valente@linaro.org>
Date:   Mon Aug 2 16:13:52 2021 +0200

    block, bfq: honor already-setup queue merges
    
    [ Upstream commit 2d52c58b9c9bdae0ca3df6a1eab5745ab3f7d80b ]
    
    The function bfq_setup_merge prepares the merging between two
    bfq_queues, say bfqq and new_bfqq. To this goal, it assigns
    bfqq->new_bfqq = new_bfqq. Then, each time some I/O for bfqq arrives,
    the process that generated that I/O is disassociated from bfqq and
    associated with new_bfqq (merging is actually a redirection). In this
    respect, bfq_setup_merge increases new_bfqq->ref in advance, adding
    the number of processes that are expected to be associated with
    new_bfqq.
    
    Unfortunately, the stable-merging mechanism interferes with this
    setup. After bfqq->new_bfqq has been set by bfq_setup_merge, and
    before all the expected processes have been associated with
    bfqq->new_bfqq, bfqq may happen to be stably merged with a different
    queue than the current bfqq->new_bfqq. In this case, bfqq->new_bfqq
    gets changed. So, some of the processes that have been already
    accounted for in the ref counter of the previous new_bfqq will not be
    associated with that queue.  This creates an unbalance, because those
    references will never be decremented.
    
    This commit fixes this issue by reestablishing the previous, natural
    behaviour: once bfqq->new_bfqq has been set, it will not be changed
    until all expected redirections have occurred.
    
    Signed-off-by: Davide Zini <davidezini2@gmail.com>
    Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
    Link: https://lore.kernel.org/r/20210802141352.74353-2-paolo.valente@linaro.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b61a99dda392cc25adef6c03e21382a145b7b6bd
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Thu Sep 2 12:51:22 2021 +0200

    net: usb: cdc_mbim: avoid altsetting toggling for Telit LN920
    
    [ Upstream commit aabbdc67f3485b5db27ab4eba01e5fbf1ffea62c ]
    
    Add quirk CDC_MBIM_FLAG_AVOID_ALTSETTING_TOGGLE for Telit LN920
    0x1061 composition in order to avoid bind error.
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79b584d85912e4c51aa9de42853d5b46efaa7498
Author: Ryoga Saito <contact@proelbtn.com>
Date:   Thu Sep 2 05:20:14 2021 +0000

    Set fc_nlinfo in nh_create_ipv4, nh_create_ipv6
    
    [ Upstream commit 9aca491e0dccf8a9d84a5b478e5eee3c6ea7803b ]
    
    This patch fixes kernel NULL pointer dereference when creating nexthop
    which is bound with SRv6 decapsulation. In the creation of nexthop,
    __seg6_end_dt_vrf_build is called. __seg6_end_dt_vrf_build expects
    fc_lninfo in fib6_config is set correctly, but it isn't set in
    nh_create_ipv6, which causes kernel crash.
    
    Here is steps to reproduce kernel crash:
    
    1. modprobe vrf
    2. ip -6 nexthop add encap seg6local action End.DT4 vrftable 1 dev eth0
    
    We got the following message:
    
    [  901.370336] BUG: kernel NULL pointer dereference, address: 0000000000000ba0
    [  901.371658] #PF: supervisor read access in kernel mode
    [  901.372672] #PF: error_code(0x0000) - not-present page
    [  901.373672] PGD 0 P4D 0
    [  901.374248] Oops: 0000 [#1] SMP PTI
    [  901.374944] CPU: 0 PID: 8593 Comm: ip Not tainted 5.14-051400-generic #202108310811-Ubuntu
    [  901.376404] Hardware name: Red Hat KVM, BIOS 1.11.1-4.module_el8.2.0+320+13f867d7 04/01/2014
    [  901.377907] RIP: 0010:vrf_ifindex_lookup_by_table_id+0x19/0x90 [vrf]
    [  901.379182] Code: c1 e9 72 ff ff ff e8 96 49 01 c2 66 0f 1f 44 00 00 0f 1f 44 00 00 55 48 89 e5 41 56 41 55 41 89 f5 41 54 53 8b 05 47 4c 00 00 <48> 8b 97 a0 0b 00 00 48 8b 1c c2 e8 57 27 53 c1 4c 8d a3 88 00 00
    [  901.382652] RSP: 0018:ffffbf2d02043590 EFLAGS: 00010282
    [  901.383746] RAX: 000000000000000b RBX: ffff990808255e70 RCX: ffffbf2d02043aa8
    [  901.385436] RDX: 0000000000000001 RSI: 0000000000000001 RDI: 0000000000000000
    [  901.386924] RBP: ffffbf2d020435b0 R08: 00000000000000c0 R09: ffff990808255e40
    [  901.388537] R10: ffffffff83b08c90 R11: 0000000000000009 R12: 0000000000000000
    [  901.389937] R13: 0000000000000001 R14: 0000000000000000 R15: 000000000000000b
    [  901.391226] FS:  00007fe49381f740(0000) GS:ffff99087dc00000(0000) knlGS:0000000000000000
    [  901.392737] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  901.393803] CR2: 0000000000000ba0 CR3: 000000000e3e8003 CR4: 0000000000770ef0
    [  901.395122] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  901.396496] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  901.397833] PKRU: 55555554
    [  901.398578] Call Trace:
    [  901.399144]  l3mdev_ifindex_lookup_by_table_id+0x3b/0x70
    [  901.400179]  __seg6_end_dt_vrf_build+0x34/0xd0
    [  901.401067]  seg6_end_dt4_build+0x16/0x20
    [  901.401904]  seg6_local_build_state+0x271/0x430
    [  901.402797]  lwtunnel_build_state+0x81/0x130
    [  901.403645]  fib_nh_common_init+0x82/0x100
    [  901.404465]  ? sock_def_readable+0x4b/0x80
    [  901.405285]  fib6_nh_init+0x115/0x7c0
    [  901.406033]  nh_create_ipv6.isra.0+0xe1/0x140
    [  901.406932]  rtm_new_nexthop+0x3b7/0xeb0
    [  901.407828]  rtnetlink_rcv_msg+0x152/0x3a0
    [  901.408663]  ? rtnl_calcit.isra.0+0x130/0x130
    [  901.409535]  netlink_rcv_skb+0x55/0x100
    [  901.410319]  rtnetlink_rcv+0x15/0x20
    [  901.411026]  netlink_unicast+0x1a8/0x250
    [  901.411813]  netlink_sendmsg+0x238/0x470
    [  901.412602]  ? _copy_from_user+0x2b/0x60
    [  901.413394]  sock_sendmsg+0x65/0x70
    [  901.414112]  ____sys_sendmsg+0x218/0x290
    [  901.414929]  ? copy_msghdr_from_user+0x5c/0x90
    [  901.415814]  ___sys_sendmsg+0x81/0xc0
    [  901.416559]  ? fsnotify_destroy_marks+0x27/0xf0
    [  901.417447]  ? call_rcu+0xa4/0x230
    [  901.418153]  ? kmem_cache_free+0x23f/0x410
    [  901.418972]  ? dentry_free+0x37/0x70
    [  901.419705]  ? mntput_no_expire+0x4c/0x260
    [  901.420574]  __sys_sendmsg+0x62/0xb0
    [  901.421297]  __x64_sys_sendmsg+0x1f/0x30
    [  901.422057]  do_syscall_64+0x5c/0xc0
    [  901.422756]  ? syscall_exit_to_user_mode+0x27/0x50
    [  901.423675]  ? __x64_sys_close+0x12/0x40
    [  901.424462]  ? do_syscall_64+0x69/0xc0
    [  901.425219]  ? irqentry_exit_to_user_mode+0x9/0x20
    [  901.426149]  ? irqentry_exit+0x19/0x30
    [  901.426901]  ? exc_page_fault+0x89/0x160
    [  901.427709]  ? asm_exc_page_fault+0x8/0x30
    [  901.428536]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [  901.429514] RIP: 0033:0x7fe493945747
    [  901.430248] Code: 64 89 02 48 c7 c0 ff ff ff ff eb bb 0f 1f 80 00 00 00 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 2e 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 51 c3 48 83 ec 28 89 54 24 1c 48 89 74 24 10
    [  901.433549] RSP: 002b:00007ffe9932cf68 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
    [  901.434981] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fe493945747
    [  901.436303] RDX: 0000000000000000 RSI: 00007ffe9932cfe0 RDI: 0000000000000003
    [  901.437607] RBP: 00000000613053f7 R08: 0000000000000001 R09: 00007ffe9932d07c
    [  901.438990] R10: 000055f4a903a010 R11: 0000000000000246 R12: 0000000000000001
    [  901.440340] R13: 0000000000000001 R14: 000055f4a802b163 R15: 000055f4a8042020
    [  901.441630] Modules linked in: vrf nls_utf8 isofs nls_iso8859_1 dm_multipath scsi_dh_rdac scsi_dh_emc scsi_dh_alua intel_rapl_msr intel_rapl_common isst_if_mbox_msr isst_if_common nfit rapl input_leds joydev serio_raw qemu_fw_cfg mac_hid sch_fq_codel drm virtio_rng ip_tables x_tables autofs4 btrfs blake2b_generic zstd_compress raid10 raid456 async_raid6_recov async_memcpy async_pq async_xor async_tx xor raid6_pq libcrc32c raid1 raid0 multipath linear crct10dif_pclmul crc32_pclmul ghash_clmulni_intel aesni_intel crypto_simd virtio_net net_failover cryptd psmouse virtio_blk failover i2c_piix4 pata_acpi floppy
    [  901.450808] CR2: 0000000000000ba0
    [  901.451514] ---[ end trace c27b934b99ade304 ]---
    [  901.452403] RIP: 0010:vrf_ifindex_lookup_by_table_id+0x19/0x90 [vrf]
    [  901.453626] Code: c1 e9 72 ff ff ff e8 96 49 01 c2 66 0f 1f 44 00 00 0f 1f 44 00 00 55 48 89 e5 41 56 41 55 41 89 f5 41 54 53 8b 05 47 4c 00 00 <48> 8b 97 a0 0b 00 00 48 8b 1c c2 e8 57 27 53 c1 4c 8d a3 88 00 00
    [  901.456910] RSP: 0018:ffffbf2d02043590 EFLAGS: 00010282
    [  901.457912] RAX: 000000000000000b RBX: ffff990808255e70 RCX: ffffbf2d02043aa8
    [  901.459238] RDX: 0000000000000001 RSI: 0000000000000001 RDI: 0000000000000000
    [  901.460552] RBP: ffffbf2d020435b0 R08: 00000000000000c0 R09: ffff990808255e40
    [  901.461882] R10: ffffffff83b08c90 R11: 0000000000000009 R12: 0000000000000000
    [  901.463208] R13: 0000000000000001 R14: 0000000000000000 R15: 000000000000000b
    [  901.464529] FS:  00007fe49381f740(0000) GS:ffff99087dc00000(0000) knlGS:0000000000000000
    [  901.466058] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  901.467189] CR2: 0000000000000ba0 CR3: 000000000e3e8003 CR4: 0000000000770ef0
    [  901.468515] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  901.469858] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  901.471139] PKRU: 55555554
    
    Signed-off-by: Ryoga Saito <contact@proelbtn.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf4168c4e0ec708ede38259bb8bf195f4a6b185a
Author: George Cherian <george.cherian@marvell.com>
Date:   Tue Aug 10 17:54:25 2021 +0530

    PCI: Add ACS quirks for Cavium multi-function devices
    
    [ Upstream commit 32837d8a8f63eb95dcb9cd005524a27f06478832 ]
    
    Some Cavium endpoints are implemented as multi-function devices without ACS
    capability, but they actually don't support peer-to-peer transactions.
    
    Add ACS quirks to declare DMA isolation for the following devices:
    
      - BGX device found on Octeon-TX (8xxx)
      - CGX device found on Octeon-TX2 (9xxx)
      - RPM device found on Octeon-TX3 (10xxx)
    
    Link: https://lore.kernel.org/r/20210810122425.1115156-1-george.cherian@marvell.com
    Signed-off-by: George Cherian <george.cherian@marvell.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3435cd96848da83708b417d68e37453b9c6915a
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu Aug 19 19:26:02 2021 +0900

    tracing/probes: Reject events which have the same name of existing one
    
    [ Upstream commit 8e242060c6a4947e8ae7d29794af6a581db08841 ]
    
    Since kprobe_events and uprobe_events only check whether the
    other same-type probe event has the same name or not, if the
    user gives the same name of the existing tracepoint event (or
    the other type of probe events), it silently fails to create
    the tracefs entry (but registered.) as below.
    
    /sys/kernel/tracing # ls events/task/task_rename
    enable   filter   format   hist     id       trigger
    /sys/kernel/tracing # echo p:task/task_rename vfs_read >> kprobe_events
    [  113.048508] Could not create tracefs 'task_rename' directory
    /sys/kernel/tracing # cat kprobe_events
    p:task/task_rename vfs_read
    
    To fix this issue, check whether the existing events have the
    same name or not in trace_probe_register_event_call(). If exists,
    it rejects to register the new event.
    
    Link: https://lkml.kernel.org/r/162936876189.187130.17558311387542061930.stgit@devnote2
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32280649f044c2f52a9823206ff6ca96313b6ecf
Author: Marc Zyngier <maz@kernel.org>
Date:   Sun Jul 25 19:07:54 2021 +0100

    mfd: Don't use irq_create_mapping() to resolve a mapping
    
    [ Upstream commit 9ff80e2de36d0554e3a6da18a171719fe8663c17 ]
    
    Although irq_create_mapping() is able to deal with duplicate
    mappings, it really isn't supposed to be a substitute for
    irq_find_mapping(), and can result in allocations that take place
    in atomic context if the mapping didn't exist.
    
    Fix the handful of MFD drivers that use irq_create_mapping() in
    interrupt context by using irq_find_mapping() instead.
    
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Cc: Lee Jones <lee.jones@linaro.org>
    Cc: Maxime Coquelin <mcoquelin.stm32@gmail.com>
    Cc: Alexandre Torgue <alexandre.torgue@foss.st.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e904621ae0b7b088abbc9197135c605a61403ee0
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed Aug 4 13:22:58 2021 +0200

    fuse: fix use after free in fuse_read_interrupt()
    
    [ Upstream commit e1e71c168813564be0f6ea3d6740a059ca42d177 ]
    
    There is a potential race between fuse_read_interrupt() and
    fuse_request_end().
    
    TASK1
      in fuse_read_interrupt(): delete req->intr_entry (while holding
      fiq->lock)
    
    TASK2
      in fuse_request_end(): req->intr_entry is empty -> skip fiq->lock
      wake up TASK3
    
    TASK3
      request is freed
    
    TASK1
      in fuse_read_interrupt(): dereference req->in.h.unique ***BAM***
    
    Fix by always grabbing fiq->lock if the request was ever interrupted
    (FR_INTERRUPTED set) thereby serializing with concurrent
    fuse_read_interrupt() calls.
    
    FR_INTERRUPTED is set before the request is queued on fiq->interrupts.
    Dequeing the request is done with list_del_init() but FR_INTERRUPTED is not
    cleared in this case.
    
    Reported-by: lijiazi <lijiazi@xiaomi.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1eaaa6b7d883585c27178f9b1ff1612c92b045e
Author: Wasim Khan <wasim.khan@nxp.com>
Date:   Thu Jul 29 14:17:47 2021 +0200

    PCI: Add ACS quirks for NXP LX2xx0 and LX2xx2 platforms
    
    [ Upstream commit d08c8b855140e9f5240b3ffd1b8b9d435675e281 ]
    
    Root Ports in NXP LX2xx0 and LX2xx2, where each Root Port is a Root Complex
    with unique segment numbers, do provide isolation features to disable peer
    transactions and validate bus numbers in requests, but do not provide an
    actual PCIe ACS capability.
    
    Add ACS quirks for NXP LX2xx0 A/C/E/N and LX2xx2 A/C/E/N platforms.
    
      LX2xx0A : without security features + CAN-FD
        LX2160A (0x8d81) - 16 cores
        LX2120A (0x8da1) - 12 cores
        LX2080A (0x8d83) -  8 cores
    
      LX2xx0C : security features + CAN-FD
        LX2160C (0x8d80) - 16 cores
        LX2120C (0x8da0) - 12 cores
        LX2080C (0x8d82) -  8 cores
    
      LX2xx0E : security features + CAN
        LX2160E (0x8d90) - 16 cores
        LX2120E (0x8db0) - 12 cores
        LX2080E (0x8d92) -  8 cores
    
      LX2xx0N : without security features + CAN
        LX2160N (0x8d91) - 16 cores
        LX2120N (0x8db1) - 12 cores
        LX2080N (0x8d93) -  8 cores
    
      LX2xx2A : without security features + CAN-FD
        LX2162A (0x8d89) - 16 cores
        LX2122A (0x8da9) - 12 cores
        LX2082A (0x8d8b) -  8 cores
    
      LX2xx2C : security features + CAN-FD
        LX2162C (0x8d88) - 16 cores
        LX2122C (0x8da8) - 12 cores
        LX2082C (0x8d8a) -  8 cores
    
      LX2xx2E : security features + CAN
        LX2162E (0x8d98) - 16 cores
        LX2122E (0x8db8) - 12 cores
        LX2082E (0x8d9a) -  8 cores
    
      LX2xx2N : without security features + CAN
        LX2162N (0x8d99) - 16 cores
        LX2122N (0x8db9) - 12 cores
        LX2082N (0x8d9b) -  8 cores
    
    [bhelgaas: put PCI_VENDOR_ID_NXP definition next to PCI_VENDOR_ID_FREESCALE
    as a clue that they share the same Device ID namespace]
    Link: https://lore.kernel.org/r/20210729121747.1823086-1-wasim.khan@oss.nxp.com
    Link: https://lore.kernel.org/r/20210803180021.3252886-1-wasim.khan@oss.nxp.com
    Signed-off-by: Wasim Khan <wasim.khan@nxp.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47c4490617d15d48b1fa7510cd9497c5738e1af6
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Aug 2 01:33:13 2021 +0200

    mfd: db8500-prcmu: Adjust map to reality
    
    [ Upstream commit ec343111c056ec3847800302f6dbc57281f833fa ]
    
    These are the actual frequencies reported by the PLL, so let's
    report these. The roundoffs are inappropriate, we should round
    to the frequency that the clock will later report.
    
    Drop some whitespace at the same time.
    
    Cc: phone-devel@vger.kernel.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88834a62539f5ba5baec46df6f9558bcf6302ee4
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Thu Jun 10 16:39:45 2021 +0200

    dt-bindings: mtd: gpmc: Fix the ECC bytes vs. OOB bytes equation
    
    [ Upstream commit 778cb8e39f6ec252be50fc3850d66f3dcbd5dd5a ]
    
    "PAGESIZE / 512" is the number of ECC chunks.
    "ECC_BYTES" is the number of bytes needed to store a single ECC code.
    "2" is the space reserved by the bad block marker.
    
    "2 + (PAGESIZE / 512) * ECC_BYTES" should of course be lower or equal
    than the total number of OOB bytes, otherwise it won't fit.
    
    Fix the equation by substituting s/>=/<=/.
    
    Suggested-by: Ryan J. Barnett <ryan.barnett@collins.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/linux-mtd/20210610143945.3504781-1-miquel.raynal@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86565668215f4651d352d1cd154b9f3eae93ee5e
Author: David Hildenbrand <david@redhat.com>
Date:   Tue Sep 7 19:54:59 2021 -0700

    mm/memory_hotplug: use "unsigned long" for PFN in zone_for_pfn_range()
    
    commit 7cf209ba8a86410939a24cb1aeb279479a7e0ca6 upstream.
    
    Patch series "mm/memory_hotplug: preparatory patches for new online policy and memory"
    
    These are all cleanups and one fix previously sent as part of [1]:
    [PATCH v1 00/12] mm/memory_hotplug: "auto-movable" online policy and memory
    groups.
    
    These patches make sense even without the other series, therefore I pulled
    them out to make the other series easier to digest.
    
    [1] https://lkml.kernel.org/r/20210607195430.48228-1-david@redhat.com
    
    This patch (of 4):
    
    Checkpatch complained on a follow-up patch that we are using "unsigned"
    here, which defaults to "unsigned int" and checkpatch is correct.
    
    As we will search for a fitting zone using the wrong pfn, we might end
    up onlining memory to one of the special kernel zones, such as ZONE_DMA,
    which can end badly as the onlined memory does not satisfy properties of
    these zones.
    
    Use "unsigned long" instead, just as we do in other places when handling
    PFNs.  This can bite us once we have physical addresses in the range of
    multiple TB.
    
    Link: https://lkml.kernel.org/r/20210712124052.26491-2-david@redhat.com
    Fixes: e5e689302633 ("mm, memory_hotplug: display allowed zones in the preferred ordering")
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Pankaj Gupta <pankaj.gupta@ionos.com>
    Reviewed-by: Muchun Song <songmuchun@bytedance.com>
    Reviewed-by: Oscar Salvador <osalvador@suse.de>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: Vitaly Kuznetsov <vkuznets@redhat.com>
    Cc: "Michael S. Tsirkin" <mst@redhat.com>
    Cc: Jason Wang <jasowang@redhat.com>
    Cc: Pankaj Gupta <pankaj.gupta.linux@gmail.com>
    Cc: Wei Yang <richard.weiyang@linux.alibaba.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Anshuman Khandual <anshuman.khandual@arm.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Mike Rapoport <rppt@kernel.org>
    Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
    Cc: Len Brown <lenb@kernel.org>
    Cc: Pavel Tatashin <pasha.tatashin@soleen.com>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: virtualization@lists.linux-foundation.org
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: "Aneesh Kumar K.V" <aneesh.kumar@linux.ibm.com>
    Cc: Anton Blanchard <anton@ozlabs.org>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: Baoquan He <bhe@redhat.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: Christophe Leroy <christophe.leroy@c-s.fr>
    Cc: Dave Jiang <dave.jiang@intel.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jia He <justin.he@arm.com>
    Cc: Joe Perches <joe@perches.com>
    Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Laurent Dufour <ldufour@linux.ibm.com>
    Cc: Michel Lespinasse <michel@lespinasse.org>
    Cc: Nathan Lynch <nathanl@linux.ibm.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Pierre Morel <pmorel@linux.ibm.com>
    Cc: "Rafael J. Wysocki" <rafael.j.wysocki@intel.com>
    Cc: Rich Felker <dalias@libc.org>
    Cc: Scott Cheloha <cheloha@linux.ibm.com>
    Cc: Sergei Trofimovich <slyfox@gentoo.org>
    Cc: Thiago Jung Bauermann <bauerman@linux.ibm.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Vishal Verma <vishal.l.verma@intel.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d291cca2c4f72b2b8fc2d675fd06d8b3bc719907
Author: Jiaran Zhang <zhangjiaran@huawei.com>
Date:   Mon Sep 13 21:08:25 2021 +0800

    net: hns3: fix the timing issue of VF clearing interrupt sources
    
    commit 427900d27d86b820c559037a984bd403f910860f upstream.
    
    Currently, the VF does not clear the interrupt source immediately after
    receiving the interrupt. As a result, if the second interrupt task is
    triggered when processing the first interrupt task, clearing the
    interrupt source before exiting will clear the interrupt sources of the
    two tasks at the same time. As a result, no interrupt is triggered for
    the second task. The VF detects the missed message only when the next
    interrupt is generated.
    
    Clearing it immediately after executing check_evt_cause ensures that:
    1. Even if two interrupt tasks are triggered at the same time, they can
    be processed.
    2. If the second task is triggered during the processing of the first
    task and the interrupt source is not cleared, the interrupt is reported
    after vector0 is enabled.
    
    Fixes: b90fcc5bd904 ("net: hns3: add reset handling for VF when doing Core/Global/IMP reset")
    Signed-off-by: Jiaran Zhang <zhangjiaran@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65bcb8f73ae39e5eb3183a60bfc8f26f8c393de1
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Mon Sep 13 21:08:23 2021 +0800

    net: hns3: disable mac in flr process
    
    commit b81d8948746520f989e86d66292ff72b5056114a upstream.
    
    The firmware will not disable mac in flr process. Therefore, the driver
    needs to proactively disable mac during flr, which is the same as the
    function reset.
    
    Fixes: 35d93a30040c ("net: hns3: adjust the process of PF reset")
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8fe64c3511e3c9d391d9417a7bf1de829233c0a
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Mon Sep 13 21:08:22 2021 +0800

    net: hns3: change affinity_mask to numa node range
    
    commit 1dc839ec09d3ab2a4156dc98328b8bc3586f2b70 upstream.
    
    Currently, affinity_mask is set to a single cpu. As a result,
    irqbalance becomes invalid in SUBSET or EXACT mode. To solve
    this problem, change affinity_mask to numa node range. In this
    way, irqbalance can be performed on the cpu of the numa node.
    
    Fixes: 0812545487ec ("net: hns3: add interrupt affinity support for misc interrupt")
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dede0381da0b2b99017549bd93836bbee7906e05
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Mon Sep 13 21:08:21 2021 +0800

    net: hns3: pad the short tunnel frame before sending to hardware
    
    commit d18e81183b1cb9c309266cbbce9acd3e0c528d04 upstream.
    
    The hardware cannot handle short tunnel frames below 65 bytes,
    and will cause vlan tag missing problem. So pads packet size to
    65 bytes for tunnel frames to fix this bug.
    
    Fixes: 3db084d28dc0("net: hns3: Fix for vxlan tx checksum bug")
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bf2c9605dff4b856af220f4bc64d1cc431dbae8
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Sep 8 20:17:18 2021 +1000

    KVM: PPC: Book3S HV: Tolerate treclaim. in fake-suspend mode changing registers
    
    commit 267cdfa21385d78c794768233678756e32b39ead upstream.
    
    POWER9 DD2.2 and 2.3 hardware implements a "fake-suspend" mode where
    certain TM instructions executed in HV=0 mode cause softpatch interrupts
    so the hypervisor can emulate them and prevent problematic processor
    conditions. In this fake-suspend mode, the treclaim. instruction does
    not modify registers.
    
    Unfortunately the rfscv instruction executed by the guest do not
    generate softpatch interrupts, which can cause the hypervisor to lose
    track of the fake-suspend mode, and it can execute this treclaim. while
    not in fake-suspend mode. This modifies GPRs and crashes the hypervisor.
    
    It's not trivial to disable scv in the guest with HFSCR now, because
    they assume a POWER9 has scv available. So this fix saves and restores
    checkpointed registers across the treclaim.
    
    Fixes: 7854f7545bff ("KVM: PPC: Book3S: Rework TM save/restore code and make it C-callable")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210908101718.118522-2-npiggin@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 235f782d5e3bb18ffb8726873b2525b9eb9d60a7
Author: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
Date:   Wed Sep 8 09:58:20 2021 -0700

    ibmvnic: check failover_pending in login response
    
    commit 273c29e944bda9a20a30c26cfc34c9a3f363280b upstream.
    
    If a failover occurs before a login response is received, the login
    response buffer maybe undefined. Check that there was no failover
    before accessing the login response buffer.
    
    Fixes: 032c5e82847a ("Driver for IBM System i/p VNIC protocol")
    Signed-off-by: Sukadev Bhattiprolu <sukadev@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3939844ebdc82cdaac3f6664c0f2b25b6ec7df4
Author: David Heidelberg <david@ixit.cz>
Date:   Sun Sep 12 18:51:20 2021 +0200

    dt-bindings: arm: Fix Toradex compatible typo
    
    commit 55c21d57eafb7b379bb7b3e93baf9ca2695895b0 upstream.
    
    Fix board compatible typo reported by dtbs_check.
    
    Fixes: f4d1577e9bc6 ("dt-bindings: arm: Convert Tegra board/soc bindings to json-schema")
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Link: https://lore.kernel.org/r/20210912165120.188490-1-david@ixit.cz
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c642afd17ab5288c978588e1ffda53774bacf2e5
Author: Shai Malin <smalin@marvell.com>
Date:   Fri Sep 10 11:33:56 2021 +0300

    qed: Handle management FW error
    
    commit 20e100f52730cd0db609e559799c1712b5f27582 upstream.
    
    Handle MFW (management FW) error response in order to avoid a crash
    during recovery flows.
    
    Changes from v1:
    - Add "Fixes tag".
    
    Fixes: tag 5e7ba042fd05 ("qed: Fix reading stale configuration information")
    Signed-off-by: Ariel Elior <aelior@marvell.com>
    Signed-off-by: Shai Malin <smalin@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ebbb8b964f5201d901b26741046ea1505320bf3
Author: zhenggy <zhenggy@chinatelecom.cn>
Date:   Tue Sep 14 09:51:15 2021 +0800

    tcp: fix tp->undo_retrans accounting in tcp_sacktag_one()
    
    commit 4f884f3962767877d7aabbc1ec124d2c307a4257 upstream.
    
    Commit 10d3be569243 ("tcp-tso: do not split TSO packets at retransmit
    time") may directly retrans a multiple segments TSO/GSO packet without
    split, Since this commit, we can no longer assume that a retransmitted
    packet is a single segment.
    
    This patch fixes the tp->undo_retrans accounting in tcp_sacktag_one()
    that use the actual segments(pcount) of the retransmitted packet.
    
    Before that commit (10d3be569243), the assumption underlying the
    tp->undo_retrans-- seems correct.
    
    Fixes: 10d3be569243 ("tcp-tso: do not split TSO packets at retransmit time")
    Signed-off-by: zhenggy <zhenggy@chinatelecom.cn>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit baf450477143360570bf6581c226912da2862f54
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Tue Sep 14 16:43:31 2021 +0300

    net: dsa: destroy the phylink instance on any error in dsa_slave_phy_setup
    
    commit 6a52e73368038f47f6618623d75061dc263b26ae upstream.
    
    DSA supports connecting to a phy-handle, and has a fallback to a non-OF
    based method of connecting to an internal PHY on the switch's own MDIO
    bus, if no phy-handle and no fixed-link nodes were present.
    
    The -ENODEV error code from the first attempt (phylink_of_phy_connect)
    is what triggers the second attempt (phylink_connect_phy).
    
    However, when the first attempt returns a different error code than
    -ENODEV, this results in an unbalance of calls to phylink_create and
    phylink_destroy by the time we exit the function. The phylink instance
    has leaked.
    
    There are many other error codes that can be returned by
    phylink_of_phy_connect. For example, phylink_validate returns -EINVAL.
    So this is a practical issue too.
    
    Fixes: aab9c4067d23 ("net: dsa: Plug in PHYLINK support")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Link: https://lore.kernel.org/r/20210914134331.2303380-1-vladimir.oltean@nxp.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 498e765b8595a50b8128109185eaba20142a4395
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Sep 8 17:00:29 2021 -0700

    net/af_unix: fix a data-race in unix_dgram_poll
    
    commit 04f08eb44b5011493d77b602fdec29ff0f5c6cd5 upstream.
    
    syzbot reported another data-race in af_unix [1]
    
    Lets change __skb_insert() to use WRITE_ONCE() when changing
    skb head qlen.
    
    Also, change unix_dgram_poll() to use lockless version
    of unix_recvq_full()
    
    It is verry possible we can switch all/most unix_recvq_full()
    to the lockless version, this will be done in a future kernel version.
    
    [1] HEAD commit: 8596e589b787732c8346f0482919e83cc9362db1
    
    BUG: KCSAN: data-race in skb_queue_tail / unix_dgram_poll
    
    write to 0xffff88814eeb24e0 of 4 bytes by task 25815 on cpu 0:
     __skb_insert include/linux/skbuff.h:1938 [inline]
     __skb_queue_before include/linux/skbuff.h:2043 [inline]
     __skb_queue_tail include/linux/skbuff.h:2076 [inline]
     skb_queue_tail+0x80/0xa0 net/core/skbuff.c:3264
     unix_dgram_sendmsg+0xff2/0x1600 net/unix/af_unix.c:1850
     sock_sendmsg_nosec net/socket.c:703 [inline]
     sock_sendmsg net/socket.c:723 [inline]
     ____sys_sendmsg+0x360/0x4d0 net/socket.c:2392
     ___sys_sendmsg net/socket.c:2446 [inline]
     __sys_sendmmsg+0x315/0x4b0 net/socket.c:2532
     __do_sys_sendmmsg net/socket.c:2561 [inline]
     __se_sys_sendmmsg net/socket.c:2558 [inline]
     __x64_sys_sendmmsg+0x53/0x60 net/socket.c:2558
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0x90 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    read to 0xffff88814eeb24e0 of 4 bytes by task 25834 on cpu 1:
     skb_queue_len include/linux/skbuff.h:1869 [inline]
     unix_recvq_full net/unix/af_unix.c:194 [inline]
     unix_dgram_poll+0x2bc/0x3e0 net/unix/af_unix.c:2777
     sock_poll+0x23e/0x260 net/socket.c:1288
     vfs_poll include/linux/poll.h:90 [inline]
     ep_item_poll fs/eventpoll.c:846 [inline]
     ep_send_events fs/eventpoll.c:1683 [inline]
     ep_poll fs/eventpoll.c:1798 [inline]
     do_epoll_wait+0x6ad/0xf00 fs/eventpoll.c:2226
     __do_sys_epoll_wait fs/eventpoll.c:2238 [inline]
     __se_sys_epoll_wait fs/eventpoll.c:2233 [inline]
     __x64_sys_epoll_wait+0xf6/0x120 fs/eventpoll.c:2233
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0x90 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    value changed: 0x0000001b -> 0x00000001
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 25834 Comm: syz-executor.1 Tainted: G        W         5.14.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 86b18aaa2b5b ("skbuff: fix a data race in skb_queue_len()")
    Cc: Qian Cai <cai@lca.pw>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7332a1ac14e8b21ff6f1dd335ca6cedbd33a977
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Wed Sep 8 13:42:09 2021 +0200

    vhost_net: fix OoB on sendmsg() failure.
    
    commit 3c4cea8fa7f71f00c5279547043a84bc2a4d8b8c upstream.
    
    If the sendmsg() call in vhost_tx_batch() fails, both the 'batched_xdp'
    and 'done_idx' indexes are left unchanged. If such failure happens
    when batched_xdp == VHOST_NET_BATCH, the next call to
    vhost_net_build_xdp() will access and write memory outside the xdp
    buffers area.
    
    Since sendmsg() can only error with EBADFD, this change addresses the
    issue explicitly freeing the XDP buffers batch on error.
    
    Fixes: 0a0be13b8fe2 ("vhost_net: batch submitting XDP buffers to underlayer sockets")
    Suggested-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 172749c879f5302ae4c580f2faec5b948e71cc47
Author: Baptiste Lepers <baptiste.lepers@gmail.com>
Date:   Mon Sep 6 11:53:10 2021 +1000

    events: Reuse value read using READ_ONCE instead of re-reading it
    
    commit b89a05b21f46150ac10a962aa50109250b56b03b upstream.
    
    In perf_event_addr_filters_apply, the task associated with
    the event (event->ctx->task) is read using READ_ONCE at the beginning
    of the function, checked, and then re-read from event->ctx->task,
    voiding all guarantees of the checks. Reuse the value that was read by
    READ_ONCE to ensure the consistency of the task struct throughout the
    function.
    
    Fixes: 375637bc52495 ("perf/core: Introduce address range filtering")
    Signed-off-by: Baptiste Lepers <baptiste.lepers@gmail.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20210906015310.12802-1-baptiste.lepers@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd78d9c9968f5ed8c044794e6a2612332f11cd53
Author: Maor Gottlieb <maorg@nvidia.com>
Date:   Wed Sep 1 11:48:13 2021 +0300

    net/mlx5: Fix potential sleeping in atomic context
    
    commit ee27e330a953595903979ffdb84926843595a9fe upstream.
    
    Fixes the below flow of sleeping in atomic context by releasing
    the RCU lock before calling to free_match_list.
    
    build_match_list() <- disables preempt
    -> free_match_list()
       -> tree_put_node()
          -> down_write_ref_node() <- take write lock
    
    Fixes: 693c6883bbc4 ("net/mlx5: Add hash table for flow groups in flow table")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Maor Gottlieb <maorg@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 48e79555c22ce8aff3bdf2810dea1bd974a717c0
Author: Saeed Mahameed <saeedm@nvidia.com>
Date:   Wed Aug 18 13:09:26 2021 -0700

    net/mlx5: FWTrace, cancel work on alloc pd error flow
    
    commit dfe6fd72b5f1878b16aa2c8603e031bbcd66b96d upstream.
    
    Handle error flow on mlx5_core_alloc_pd() failure,
    read_fw_strings_work must be canceled.
    
    Fixes: c71ad41ccb0c ("net/mlx5: FW tracer, events handling")
    Reported-by: Pavel Machek (CIP) <pavel@denx.de>
    Suggested-by: Pavel Machek (CIP) <pavel@denx.de>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Reviewed-by: Aya Levin <ayal@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4655f8a5afc2520dfa6f699fc0d57e13c4751149
Author: Michael Petlan <mpetlan@redhat.com>
Date:   Mon Jul 19 16:53:32 2021 +0200

    perf machine: Initialize srcline string member in add_location struct
    
    commit 57f0ff059e3daa4e70a811cb1d31a49968262d20 upstream.
    
    It's later supposed to be either a correct address or NULL. Without the
    initialization, it may contain an undefined value which results in the
    following segmentation fault:
    
      # perf top --sort comm -g --ignore-callees=do_idle
    
    terminates with:
    
      #0  0x00007ffff56b7685 in __strlen_avx2 () from /lib64/libc.so.6
      #1  0x00007ffff55e3802 in strdup () from /lib64/libc.so.6
      #2  0x00005555558cb139 in hist_entry__init (callchain_size=<optimized out>, sample_self=true, template=0x7fffde7fb110, he=0x7fffd801c250) at util/hist.c:489
      #3  hist_entry__new (template=template@entry=0x7fffde7fb110, sample_self=sample_self@entry=true) at util/hist.c:564
      #4  0x00005555558cb4ba in hists__findnew_entry (hists=hists@entry=0x5555561d9e38, entry=entry@entry=0x7fffde7fb110, al=al@entry=0x7fffde7fb420,
          sample_self=sample_self@entry=true) at util/hist.c:657
      #5  0x00005555558cba1b in __hists__add_entry (hists=hists@entry=0x5555561d9e38, al=0x7fffde7fb420, sym_parent=<optimized out>, bi=bi@entry=0x0, mi=mi@entry=0x0,
          sample=sample@entry=0x7fffde7fb4b0, sample_self=true, ops=0x0, block_info=0x0) at util/hist.c:288
      #6  0x00005555558cbb70 in hists__add_entry (sample_self=true, sample=0x7fffde7fb4b0, mi=0x0, bi=0x0, sym_parent=<optimized out>, al=<optimized out>, hists=0x5555561d9e38)
          at util/hist.c:1056
      #7  iter_add_single_cumulative_entry (iter=0x7fffde7fb460, al=<optimized out>) at util/hist.c:1056
      #8  0x00005555558cc8a4 in hist_entry_iter__add (iter=iter@entry=0x7fffde7fb460, al=al@entry=0x7fffde7fb420, max_stack_depth=<optimized out>, arg=arg@entry=0x7fffffff7db0)
          at util/hist.c:1231
      #9  0x00005555557cdc9a in perf_event__process_sample (machine=<optimized out>, sample=0x7fffde7fb4b0, evsel=<optimized out>, event=<optimized out>, tool=0x7fffffff7db0)
          at builtin-top.c:842
      #10 deliver_event (qe=<optimized out>, qevent=<optimized out>) at builtin-top.c:1202
      #11 0x00005555558a9318 in do_flush (show_progress=false, oe=0x7fffffff80e0) at util/ordered-events.c:244
      #12 __ordered_events__flush (oe=oe@entry=0x7fffffff80e0, how=how@entry=OE_FLUSH__TOP, timestamp=timestamp@entry=0) at util/ordered-events.c:323
      #13 0x00005555558a9789 in __ordered_events__flush (timestamp=<optimized out>, how=<optimized out>, oe=<optimized out>) at util/ordered-events.c:339
      #14 ordered_events__flush (how=OE_FLUSH__TOP, oe=0x7fffffff80e0) at util/ordered-events.c:341
      #15 ordered_events__flush (oe=oe@entry=0x7fffffff80e0, how=how@entry=OE_FLUSH__TOP) at util/ordered-events.c:339
      #16 0x00005555557cd631 in process_thread (arg=0x7fffffff7db0) at builtin-top.c:1114
      #17 0x00007ffff7bb817a in start_thread () from /lib64/libpthread.so.0
      #18 0x00007ffff5656dc3 in clone () from /lib64/libc.so.6
    
    If you look at the frame #2, the code is:
    
    488      if (he->srcline) {
    489          he->srcline = strdup(he->srcline);
    490          if (he->srcline == NULL)
    491              goto err_rawdata;
    492      }
    
    If he->srcline is not NULL (it is not NULL if it is uninitialized rubbish),
    it gets strdupped and strdupping a rubbish random string causes the problem.
    
    Also, if you look at the commit 1fb7d06a509e, it adds the srcline property
    into the struct, but not initializing it everywhere needed.
    
    Committer notes:
    
    Now I see, when using --ignore-callees=do_idle we end up here at line
    2189 in add_callchain_ip():
    
    2181         if (al.sym != NULL) {
    2182                 if (perf_hpp_list.parent && !*parent &&
    2183                     symbol__match_regex(al.sym, &parent_regex))
    2184                         *parent = al.sym;
    2185                 else if (have_ignore_callees && root_al &&
    2186                   symbol__match_regex(al.sym, &ignore_callees_regex)) {
    2187                         /* Treat this symbol as the root,
    2188                            forgetting its callees. */
    2189                         *root_al = al;
    2190                         callchain_cursor_reset(cursor);
    2191                 }
    2192         }
    
    And the al that doesn't have the ->srcline field initialized will be
    copied to the root_al, so then, back to:
    
    1211 int hist_entry_iter__add(struct hist_entry_iter *iter, struct addr_location *al,
    1212                          int max_stack_depth, void *arg)
    1213 {
    1214         int err, err2;
    1215         struct map *alm = NULL;
    1216
    1217         if (al)
    1218                 alm = map__get(al->map);
    1219
    1220         err = sample__resolve_callchain(iter->sample, &callchain_cursor, &iter->parent,
    1221                                         iter->evsel, al, max_stack_depth);
    1222         if (err) {
    1223                 map__put(alm);
    1224                 return err;
    1225         }
    1226
    1227         err = iter->ops->prepare_entry(iter, al);
    1228         if (err)
    1229                 goto out;
    1230
    1231         err = iter->ops->add_single_entry(iter, al);
    1232         if (err)
    1233                 goto out;
    1234
    
    That al at line 1221 is what hist_entry_iter__add() (called from
    sample__resolve_callchain()) saw as 'root_al', and then:
    
            iter->ops->add_single_entry(iter, al);
    
    will go on with al->srcline with a bogus value, I'll add the above
    sequence to the cset and apply, thanks!
    
    Signed-off-by: Michael Petlan <mpetlan@redhat.com>
    CC: Milian Wolff <milian.wolff@kdab.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Fixes: 1fb7d06a509e ("perf report Use srcline from callchain for hist entries")
    Link: https //lore.kernel.org/r/20210719145332.29747-1-mpetlan@redhat.com
    Reported-by: Juri Lelli <jlelli@redhat.com>
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6808e70a77e9cd4fb564118069a2e573d67d8f74
Author: Hoang Le <hoang.h.le@dektech.com.au>
Date:   Mon Sep 13 16:28:52 2021 +0700

    tipc: increase timeout in tipc_sk_enqueue()
    
    commit f4bb62e64c88c93060c051195d3bbba804e56945 upstream.
    
    In tipc_sk_enqueue() we use hardcoded 2 jiffies to extract
    socket buffer from generic queue to particular socket.
    The 2 jiffies is too short in case there are other high priority
    tasks get CPU cycles for multiple jiffies update. As result, no
    buffer could be enqueued to particular socket.
    
    To solve this, we switch to use constant timeout 20msecs.
    Then, the function will be expired between 2 jiffies (CONFIG_100HZ)
    and 20 jiffies (CONFIG_1000HZ).
    
    Fixes: c637c1035534 ("tipc: resolve race problem at unicast message reception")
    Acked-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: Hoang Le <hoang.h.le@dektech.com.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 678787dcfe9256b70c7f8f42ab7df4d601f2797c
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Sep 9 10:33:28 2021 -0700

    r6040: Restore MDIO clock frequency after MAC reset
    
    commit e3f0cc1a945fcefec0c7c9d9dfd028a51daa1846 upstream.
    
    A number of users have reported that they were not able to get the PHY
    to successfully link up, especially after commit c36757eb9dee ("net:
    phy: consider AN_RESTART status when reading link status") where we
    stopped reading just BMSR, but we also read BMCR to determine the link
    status.
    
    Andrius at NetBSD did a wonderful job at debugging the problem
    and found out that the MDIO bus clock frequency would be incorrectly set
    back to its default value which would prevent the MDIO bus controller
    from reading PHY registers properly. Back when we only read BMSR, if we
    read all 1s, we could falsely indicate a link status, though in general
    there is a cable plugged in, so this went unnoticed. After a second read
    of BMCR was added, a wrong read will lead to the inability to determine
    a link UP condition which is when it started to be visibly broken, even
    if it was long before that.
    
    The fix consists in restoring the value of the MD_CSR register that was
    set prior to the MAC reset.
    
    Link: http://gnats.netbsd.org/cgi-bin/query-pr-single.pl?number=53494
    Fixes: 90f750a81a29 ("r6040: consolidate MAC reset to its own function")
    Reported-by: Andrius V <vezhlys@gmail.com>
    Reported-by: Darek Strugacz <darek.strugacz@op.pl>
    Tested-by: Darek Strugacz <darek.strugacz@op.pl>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efe35db94897613438168b3e9cc3aaa3dcd6bedd
Author: Xiyu Yang <xiyuyang19@fudan.edu.cn>
Date:   Thu Sep 9 12:32:00 2021 +0800

    net/l2tp: Fix reference count leak in l2tp_udp_recv_core
    
    commit 9b6ff7eb666415e1558f1ba8a742f5db6a9954de upstream.
    
    The reference count leak issue may take place in an error handling
    path. If both conditions of tunnel->version == L2TP_HDR_VER_3 and the
    return value of l2tp_v3_ensure_opt_in_linear is nonzero, the function
    would directly jump to label invalid, without decrementing the reference
    count of the l2tp_session object session increased earlier by
    l2tp_tunnel_get_session(). This may result in refcount leaks.
    
    Fix this issue by decrease the reference count before jumping to the
    label invalid.
    
    Fixes: 4522a70db7aa ("l2tp: fix reading optional fields of L2TPv3")
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xin Xiong <xiongx18@fudan.edu.cn>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ab04a4ffed02f66e8e6310ba8261a43d1572343
Author: Lin, Zhenpeng <zplin@psu.edu>
Date:   Wed Sep 8 03:40:59 2021 +0000

    dccp: don't duplicate ccid when cloning dccp sock
    
    commit d9ea761fdd197351890418acd462c51f241014a7 upstream.
    
    Commit 2677d2067731 ("dccp: don't free ccid2_hc_tx_sock ...") fixed
    a UAF but reintroduced CVE-2017-6074.
    
    When the sock is cloned, two dccps_hc_tx_ccid will reference to the
    same ccid. So one can free the ccid object twice from two socks after
    cloning.
    
    This issue was found by "Hadar Manor" as well and assigned with
    CVE-2020-16119, which was fixed in Ubuntu's kernel. So here I port
    the patch from Ubuntu to fix it.
    
    The patch prevents cloned socks from referencing the same ccid.
    
    Fixes: 2677d2067731410 ("dccp: don't free ccid2_hc_tx_sock ...")
    Signed-off-by: Zhenpeng Lin <zplin@psu.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c4b7a87ba79bada2e96a4d28e5d4a930b518ca1
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Sep 13 15:06:05 2021 -0700

    ptp: dp83640: don't define PAGE0
    
    commit 7366c23ff492ad260776a3ee1aaabba9fc773a8b upstream.
    
    Building dp83640.c on arch/parisc/ produces a build warning for
    PAGE0 being redefined. Since the macro is not used in the dp83640
    driver, just make it a comment for documentation purposes.
    
    In file included from ../drivers/net/phy/dp83640.c:23:
    ../drivers/net/phy/dp83640_reg.h:8: warning: "PAGE0" redefined
        8 | #define PAGE0                     0x0000
                     from ../drivers/net/phy/dp83640.c:11:
    ../arch/parisc/include/asm/page.h:187: note: this is the location of the previous definition
      187 | #define PAGE0   ((struct zeropage *)__PAGE_OFFSET)
    
    Fixes: cb646e2b02b2 ("ptp: Added a clock driver for the National Semiconductor PHYTER.")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Richard Cochran <richard.cochran@omicron.at>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Heiner Kallweit <hkallweit1@gmail.com>
    Cc: Russell King <linux@armlinux.org.uk>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/20210913220605.19682-1-rdunlap@infradead.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit faf9d465425b5578a954bd1396048b884ea7d617
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Sep 13 11:08:36 2021 -0700

    net-caif: avoid user-triggerable WARN_ON(1)
    
    commit 550ac9c1aaaaf51fd42e20d461f0b1cdbd55b3d2 upstream.
    
    syszbot triggers this warning, which looks something
    we can easily prevent.
    
    If we initialize priv->list_field in chnl_net_init(),
    then always use list_del_init(), we can remove robust_list_del()
    completely.
    
    WARNING: CPU: 0 PID: 3233 at net/caif/chnl_net.c:67 robust_list_del net/caif/chnl_net.c:67 [inline]
    WARNING: CPU: 0 PID: 3233 at net/caif/chnl_net.c:67 chnl_net_uninit+0xc9/0x2e0 net/caif/chnl_net.c:375
    Modules linked in:
    CPU: 0 PID: 3233 Comm: syz-executor.3 Not tainted 5.14.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:robust_list_del net/caif/chnl_net.c:67 [inline]
    RIP: 0010:chnl_net_uninit+0xc9/0x2e0 net/caif/chnl_net.c:375
    Code: 89 eb e8 3a a3 ba f8 48 89 d8 48 c1 e8 03 42 80 3c 28 00 0f 85 bf 01 00 00 48 81 fb 00 14 4e 8d 48 8b 2b 75 d0 e8 17 a3 ba f8 <0f> 0b 5b 5d 41 5c 41 5d e9 0a a3 ba f8 4c 89 e3 e8 02 a3 ba f8 4c
    RSP: 0018:ffffc90009067248 EFLAGS: 00010202
    RAX: 0000000000008780 RBX: ffffffff8d4e1400 RCX: ffffc9000fd34000
    RDX: 0000000000040000 RSI: ffffffff88bb6e49 RDI: 0000000000000003
    RBP: ffff88802cd9ee08 R08: 0000000000000000 R09: ffffffff8d0e6647
    R10: ffffffff88bb6dc2 R11: 0000000000000000 R12: ffff88803791ae08
    R13: dffffc0000000000 R14: 00000000e600ffce R15: ffff888073ed3480
    FS:  00007fed10fa0700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000001b2c322000 CR3: 00000000164a6000 CR4: 00000000001506e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     register_netdevice+0xadf/0x1500 net/core/dev.c:10347
     ipcaif_newlink+0x4c/0x260 net/caif/chnl_net.c:468
     __rtnl_newlink+0x106d/0x1750 net/core/rtnetlink.c:3458
     rtnl_newlink+0x64/0xa0 net/core/rtnetlink.c:3506
     rtnetlink_rcv_msg+0x413/0xb80 net/core/rtnetlink.c:5572
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2504
     netlink_unicast_kernel net/netlink/af_netlink.c:1314 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1340
     netlink_sendmsg+0x86d/0xdb0 net/netlink/af_netlink.c:1929
     sock_sendmsg_nosec net/socket.c:704 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:724
     __sys_sendto+0x21c/0x320 net/socket.c:2036
     __do_sys_sendto net/socket.c:2048 [inline]
     __se_sys_sendto net/socket.c:2044 [inline]
     __x64_sys_sendto+0xdd/0x1b0 net/socket.c:2044
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fixes: cc36a070b590 ("net-caif: add CAIF netdevice")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79ab38864d5ea49f46c771be0d3f4db3231e37d2
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Jul 23 13:25:36 2021 -0400

    tipc: fix an use-after-free issue in tipc_recvmsg
    
    commit cc19862ffe454a5b632ca202e5a51bfec9f89fd2 upstream.
    
    syzbot reported an use-after-free crash:
    
      BUG: KASAN: use-after-free in tipc_recvmsg+0xf77/0xf90 net/tipc/socket.c:1979
      Call Trace:
       tipc_recvmsg+0xf77/0xf90 net/tipc/socket.c:1979
       sock_recvmsg_nosec net/socket.c:943 [inline]
       sock_recvmsg net/socket.c:961 [inline]
       sock_recvmsg+0xca/0x110 net/socket.c:957
       tipc_conn_rcv_from_sock+0x162/0x2f0 net/tipc/topsrv.c:398
       tipc_conn_recv_work+0xeb/0x190 net/tipc/topsrv.c:421
       process_one_work+0x98d/0x1630 kernel/workqueue.c:2276
       worker_thread+0x658/0x11f0 kernel/workqueue.c:2422
    
    As Hoang pointed out, it was caused by skb_cb->bytes_read still accessed
    after calling tsk_advance_rx_queue() to free the skb in tipc_recvmsg().
    
    This patch is to fix it by accessing skb_cb->bytes_read earlier than
    calling tsk_advance_rx_queue().
    
    Fixes: f4919ff59c28 ("tipc: keep the skb in rcv queue until the whole data is read")
    Reported-by: syzbot+e6741b97d5552f97c24d@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08f33350ed8af77e5b1c92d6502e066e78f23f9a
Author: Mike Rapoport <rppt@kernel.org>
Date:   Thu Aug 19 16:27:17 2021 +0300

    x86/mm: Fix kern_addr_valid() to cope with existing but not present entries
    
    commit 34b1999da935a33be6239226bfa6cd4f704c5c88 upstream.
    
    Jiri Olsa reported a fault when running:
    
      # cat /proc/kallsyms | grep ksys_read
      ffffffff8136d580 T ksys_read
      # objdump -d --start-address=0xffffffff8136d580 --stop-address=0xffffffff8136d590 /proc/kcore
    
      /proc/kcore:     file format elf64-x86-64
    
      Segmentation fault
    
      general protection fault, probably for non-canonical address 0xf887ffcbff000: 0000 [#1] SMP PTI
      CPU: 12 PID: 1079 Comm: objdump Not tainted 5.14.0-rc5qemu+ #508
      Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-4.fc34 04/01/2014
      RIP: 0010:kern_addr_valid
      Call Trace:
       read_kcore
       ? rcu_read_lock_sched_held
       ? rcu_read_lock_sched_held
       ? rcu_read_lock_sched_held
       ? trace_hardirqs_on
       ? rcu_read_lock_sched_held
       ? lock_acquire
       ? lock_acquire
       ? rcu_read_lock_sched_held
       ? lock_acquire
       ? rcu_read_lock_sched_held
       ? rcu_read_lock_sched_held
       ? rcu_read_lock_sched_held
       ? lock_release
       ? _raw_spin_unlock
       ? __handle_mm_fault
       ? rcu_read_lock_sched_held
       ? lock_acquire
       ? rcu_read_lock_sched_held
       ? lock_release
       proc_reg_read
       ? vfs_read
       vfs_read
       ksys_read
       do_syscall_64
       entry_SYSCALL_64_after_hwframe
    
    The fault happens because kern_addr_valid() dereferences existent but not
    present PMD in the high kernel mappings.
    
    Such PMDs are created when free_kernel_image_pages() frees regions larger
    than 2Mb. In this case, a part of the freed memory is mapped with PMDs and
    the set_memory_np_noalias() -> ... -> __change_page_attr() sequence will
    mark the PMD as not present rather than wipe it completely.
    
    Have kern_addr_valid() check whether higher level page table entries are
    present before trying to dereference them to fix this issue and to avoid
    similar issues in the future.
    
    Stable backporting note:
    ------------------------
    
    Note that the stable marking is for all active stable branches because
    there could be cases where pagetable entries exist but are not valid -
    see 9a14aefc1d28 ("x86: cpa, fix lookup_address"), for example. So make
    sure to be on the safe side here and use pXY_present() accessors rather
    than pXY_none() which could #GP when accessing pages in the direct map.
    
    Also see:
    
      c40a56a7818c ("x86/mm/init: Remove freed kernel image areas from alias mapping")
    
    for more info.
    
    Reported-by: Jiri Olsa <jolsa@redhat.com>
    Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Acked-by: Dave Hansen <dave.hansen@intel.com>
    Tested-by: Jiri Olsa <jolsa@redhat.com>
    Cc: <stable@vger.kernel.org>    # 4.4+
    Link: https://lkml.kernel.org/r/20210819132717.19358-1-rppt@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fde4caf6fe4d57cb64927d2583f79d73e3c0a1d7
Author: Alexander Egorenkov <egorenar@linux.ibm.com>
Date:   Thu Sep 9 12:20:56 2021 +0200

    s390/sclp: fix Secure-IPL facility detection
    
    commit d76b14f3971a0638b6cd0da289f8b48acee287d0 upstream.
    
    Prevent out-of-range access if the returned SCLP SCCB response is smaller
    in size than the address of the Secure-IPL flag.
    
    Fixes: c9896acc7851 ("s390/ipl: Provide has_secure sysfs attribute")
    Cc: stable@vger.kernel.org # 5.2+
    Signed-off-by: Alexander Egorenkov <egorenar@linux.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15b674b1e581b44ccefd542eb909cdff054e26f4
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Aug 20 22:18:30 2021 +0200

    drm/etnaviv: add missing MMU context put when reaping MMU mapping
    
    commit f2faea8b64125852fa9acc6771c07fc0311a039b upstream.
    
    When we forcefully evict a mapping from the the address space and thus the
    MMU context, the MMU context is leaked, as the mapping no longer points to
    it, so it doesn't get freed when the GEM object is destroyed. Add the
    mssing context put to fix the leak.
    
    Cc: stable@vger.kernel.org # 5.4
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Tested-by: Michael Walle <michael@walle.cc>
    Tested-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b2ec1e6f1d6f950ac6a567916ba2cf5f5ac4cd28
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Aug 20 22:18:29 2021 +0200

    drm/etnaviv: reference MMU context when setting up hardware state
    
    commit d6408538f091fb22d47f792d4efa58143d56c3fb upstream.
    
    Move the refcount manipulation of the MMU context to the point where the
    hardware state is programmed. At that point it is also known if a previous
    MMU state is still there, or the state needs to be reprogrammed with a
    potentially different context.
    
    Cc: stable@vger.kernel.org # 5.4
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Tested-by: Michael Walle <michael@walle.cc>
    Tested-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5827dbac41c756bf882739b5b78be839a5ca65f6
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Aug 20 22:18:28 2021 +0200

    drm/etnaviv: fix MMU context leak on GPU reset
    
    commit f978a5302f5566480c58ffae64a16d34456801bd upstream.
    
    After a reset the GPU is no longer using the MMU context and may be
    restarted with a different context. While the mmu_state proeprly was
    cleared, the context wasn't unreferenced, leading to a memory leak.
    
    Cc: stable@vger.kernel.org # 5.4
    Reported-by: Michael Walle <michael@walle.cc>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Tested-by: Michael Walle <michael@walle.cc>
    Tested-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e67b38435407d4f0649d6bbdc35ea2fce422606
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Aug 20 22:18:27 2021 +0200

    drm/etnaviv: exec and MMU state is lost when resetting the GPU
    
    commit 725cbc7884c37f3b4f1777bc1aea6432cded8ca5 upstream.
    
    When the GPU is reset both the current exec state, as well as all MMU
    state is lost. Move the driver side state tracking into the reset function
    to keep hardware and software state from diverging.
    
    Cc: stable@vger.kernel.org # 5.4
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Tested-by: Michael Walle <michael@walle.cc>
    Tested-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7068030d5e26acdd8fab6c258d49a807a3b5cf18
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Aug 20 22:18:26 2021 +0200

    drm/etnaviv: keep MMU context across runtime suspend/resume
    
    commit 8f3eea9d01d7b0f95b0fe04187c0059019ada85b upstream.
    
    The MMU state may be kept across a runtime suspend/resume cycle, as we
    avoid a full hardware reset to keep the latency of the runtime PM small.
    
    Don't pretend that the MMU state is lost in driver state. The MMU
    context is pushed out when new HW jobs with a different context are
    coming in. The only exception to this is when the GPU is unbound, in
    which case we need to make sure to also free the last active context.
    
    Cc: stable@vger.kernel.org # 5.4
    Reported-by: Michael Walle <michael@walle.cc>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Tested-by: Michael Walle <michael@walle.cc>
    Tested-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7970d4f0039ba8d8483ab37b98e08112d9d67b5
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Aug 20 22:18:25 2021 +0200

    drm/etnaviv: stop abusing mmu_context as FE running marker
    
    commit 23e0f5a57d0ecec86e1fc82194acd94aede21a46 upstream.
    
    While the DMA frontend can only be active when the MMU context is set, the
    reverse isn't necessarily true, as the frontend can be stopped while the
    MMU state is kept. Stop treating mmu_context being set as a indication that
    the frontend is running and instead add a explicit property.
    
    Cc: stable@vger.kernel.org # 5.4
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Tested-by: Michael Walle <michael@walle.cc>
    Tested-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee52ccecfe2cceec2d7a0a162fbf1aa366d9b5a3
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Aug 20 22:18:24 2021 +0200

    drm/etnaviv: put submit prev MMU context when it exists
    
    commit cda7532916f7bc860b36a1806cb8352e6f63dacb upstream.
    
    The prev context is the MMU context at the time of the job
    queueing in hardware. As a job might be queued multiple times
    due to recovery after a GPU hang, we need to make sure to put
    the stale prev MMU context from a prior queuing, to avoid the
    reference and thus the MMU context leaking.
    
    Cc: stable@vger.kernel.org # 5.4
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Tested-by: Michael Walle <michael@walle.cc>
    Tested-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9bacefda0318e661685a9d3f4137b02d8d090c6
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Aug 20 22:18:23 2021 +0200

    drm/etnaviv: return context from etnaviv_iommu_context_get
    
    commit 78edefc05e41352099ffb8f06f8d9b2d091e29cd upstream.
    
    Being able to have the refcount manipulation in an assignment makes
    it much easier to parse the code.
    
    Cc: stable@vger.kernel.org # 5.4
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Tested-by: Michael Walle <michael@walle.cc>
    Tested-by: Marek Vasut <marex@denx.de>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b56b6c51a919344aab73fefef87f51e318734324
Author: Ernst Sjöstrand <ernstp@gmail.com>
Date:   Thu Sep 2 09:50:27 2021 +0200

    drm/amd/amdgpu: Increase HWIP_MAX_INSTANCE to 10
    
    commit 67a44e659888569a133a8f858c8230e9d7aad1d5 upstream.
    
    Seems like newer cards can have even more instances now.
    Found by UBSAN: array-index-out-of-bounds in
    drivers/gpu/drm/amd/amdgpu/amdgpu_discovery.c:318:29
    index 8 is out of range for type 'uint32_t *[8]'
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1697
    Cc: stable@vger.kernel.org
    Signed-off-by: Ernst Sjöstrand <ernstp@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c221eb008a98f1e0e57064688561435c15347410
Author: Evan Quan <evan.quan@amd.com>
Date:   Fri Sep 3 14:33:11 2021 +0800

    PCI: Add AMD GPU multi-function power dependencies
    
    commit 60b78ed088ebe1a872ee1320b6c5ad6ee2c4bd9a upstream.
    
    Some AMD GPUs have built-in USB xHCI and USB Type-C UCSI controllers with
    power dependencies between the GPU and the other functions as in
    6d2e369f0d4c ("PCI: Add NVIDIA GPU multi-function power dependencies").
    
    Add device link support for the AMD integrated USB xHCI and USB Type-C UCSI
    controllers.
    
    Without this, runtime power management, including GPU resume and temp and
    fan sensors don't work correctly.
    
    Reported-at: https://gitlab.freedesktop.org/drm/amd/-/issues/1704
    Link: https://lore.kernel.org/r/20210903063311.3606226-1-evan.quan@amd.com
    Signed-off-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d180a373a014a4e53f9d286cefbe53b239db91fd
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Sep 3 10:49:36 2021 +0200

    PM: base: power: don't try to use non-existing RTC for storing data
    
    commit 0560204b360a332c321124dbc5cdfd3364533a74 upstream.
    
    If there is no legacy RTC device, don't try to use it for storing trace
    data across suspend/resume.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Rafael J. Wysocki <rafael@kernel.org>
    Link: https://lore.kernel.org/r/20210903084937.19392-2-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 484fbe9cc0d9702aeb0547f60b580a1a320a7232
Author: Mark Brown <broonie@kernel.org>
Date:   Thu Sep 9 17:53:56 2021 +0100

    arm64/sve: Use correct size when reinitialising SVE state
    
    commit e35ac9d0b56e9efefaeeb84b635ea26c2839ea86 upstream.
    
    When we need a buffer for SVE register state we call sve_alloc() to make
    sure that one is there. In order to avoid repeated allocations and frees
    we keep the buffer around unless we change vector length and just memset()
    it to ensure a clean register state. The function that deals with this
    takes the task to operate on as an argument, however in the case where we
    do a memset() we initialise using the SVE state size for the current task
    rather than the task passed as an argument.
    
    This is only an issue in the case where we are setting the register state
    for a task via ptrace and the task being configured has a different vector
    length to the task tracing it. In the case where the buffer is larger in
    the traced process we will leak old state from the traced process to
    itself, in the case where the buffer is smaller in the traced process we
    will overflow the buffer and corrupt memory.
    
    Fixes: bc0ee4760364 ("arm64/sve: Core task context handling")
    Cc: <stable@vger.kernel.org> # 4.15.x
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/r/20210909165356.10675-1-broonie@kernel.org
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f725420339eefe283cc1d8035015e5768e8eee0
Author: Adrian Bunk <bunk@kernel.org>
Date:   Sun Sep 12 22:05:23 2021 +0300

    bnx2x: Fix enabling network interfaces without VFs
    
    commit 52ce14c134a003fee03d8fc57442c05a55b53715 upstream.
    
    This function is called to enable SR-IOV when available,
    not enabling interfaces without VFs was a regression.
    
    Fixes: 65161c35554f ("bnx2x: Fix missing error code in bnx2x_iov_init_one()")
    Signed-off-by: Adrian Bunk <bunk@kernel.org>
    Reported-by: YunQiang Su <wzssyqa@gmail.com>
    Tested-by: YunQiang Su <wzssyqa@gmail.com>
    Cc: stable@vger.kernel.org
    Acked-by: Shai Malin <smalin@marvell.com>
    Link: https://lore.kernel.org/r/20210912190523.27991-1-bunk@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66c88a479357f8914fe4587dd78f4fd0fa49a282
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Sep 3 10:49:37 2021 +0200

    xen: reset legacy rtc flag for PV domU
    
    commit f68aa100d815b5b4467fd1c3abbe3b99d65fd028 upstream.
    
    A Xen PV guest doesn't have a legacy RTC device, so reset the legacy
    RTC flag. Otherwise the following WARN splat will occur at boot:
    
    [    1.333404] WARNING: CPU: 1 PID: 1 at /home/gross/linux/head/drivers/rtc/rtc-mc146818-lib.c:25 mc146818_get_time+0x1be/0x210
    [    1.333404] Modules linked in:
    [    1.333404] CPU: 1 PID: 1 Comm: swapper/0 Tainted: G        W         5.14.0-rc7-default+ #282
    [    1.333404] RIP: e030:mc146818_get_time+0x1be/0x210
    [    1.333404] Code: c0 64 01 c5 83 fd 45 89 6b 14 7f 06 83 c5 64 89 6b 14 41 83 ec 01 b8 02 00 00 00 44 89 63 10 5b 5d 41 5c 41 5d 41 5e 41 5f c3 <0f> 0b 48 c7 c7 30 0e ef 82 4c 89 e6 e8 71 2a 24 00 48 c7 c0 ff ff
    [    1.333404] RSP: e02b:ffffc90040093df8 EFLAGS: 00010002
    [    1.333404] RAX: 00000000000000ff RBX: ffffc90040093e34 RCX: 0000000000000000
    [    1.333404] RDX: 0000000000000001 RSI: 0000000000000000 RDI: 000000000000000d
    [    1.333404] RBP: ffffffff82ef0e30 R08: ffff888005013e60 R09: 0000000000000000
    [    1.333404] R10: ffffffff82373e9b R11: 0000000000033080 R12: 0000000000000200
    [    1.333404] R13: 0000000000000000 R14: 0000000000000002 R15: ffffffff82cdc6d4
    [    1.333404] FS:  0000000000000000(0000) GS:ffff88807d440000(0000) knlGS:0000000000000000
    [    1.333404] CS:  10000e030 DS: 0000 ES: 0000 CR0: 0000000080050033
    [    1.333404] CR2: 0000000000000000 CR3: 000000000260a000 CR4: 0000000000050660
    [    1.333404] Call Trace:
    [    1.333404]  ? wakeup_sources_sysfs_init+0x30/0x30
    [    1.333404]  ? rdinit_setup+0x2b/0x2b
    [    1.333404]  early_resume_init+0x23/0xa4
    [    1.333404]  ? cn_proc_init+0x36/0x36
    [    1.333404]  do_one_initcall+0x3e/0x200
    [    1.333404]  kernel_init_freeable+0x232/0x28e
    [    1.333404]  ? rest_init+0xd0/0xd0
    [    1.333404]  kernel_init+0x16/0x120
    [    1.333404]  ret_from_fork+0x1f/0x30
    
    Cc: <stable@vger.kernel.org>
    Fixes: 8d152e7a5c7537 ("x86/rtc: Replace paravirt rtc check with platform legacy quirk")
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20210903084937.19392-3-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7fab1f53603397bfce0b1e65bbb9dcc3b5824c3
Author: Anand Jain <anand.jain@oracle.com>
Date:   Tue Aug 10 23:23:44 2021 +0800

    btrfs: fix upper limit for max_inline for page size 64K
    
    commit 6f93e834fa7c5faa0372e46828b4b2a966ac61d7 upstream.
    
    The mount option max_inline ranges from 0 to the sectorsize (which is
    now equal to page size). But we parse the mount options too early and
    before the actual sectorsize is read from the superblock. So the upper
    limit of max_inline is unaware of the actual sectorsize and is limited
    by the temporary sectorsize 4096, even on a system where the default
    sectorsize is 64K.
    
    Fix this by reading the superblock sectorsize before the mount option
    parse.
    
    Reported-by: Alexander Tsvetkov <alexander.tsvetkov@oracle.com>
    CC: stable@vger.kernel.org # 5.4+
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9cc70e3dcb40eb16391dd553ed8c45106c8d161
Author: Alyssa Rosenzweig <alyssa.rosenzweig@collabora.com>
Date:   Tue Aug 24 13:30:27 2021 -0400

    drm/panfrost: Clamp lock region to Bifrost minimum
    
    commit bd7ffbc3ca12629aeb66fb9e28cf42b7f37e3e3b upstream.
    
    When locking a region, we currently clamp to a PAGE_SIZE as the minimum
    lock region. While this is valid for Midgard, it is invalid for Bifrost,
    where the minimum locking size is 8x larger than the 4k page size. Add a
    hardware definition for the minimum lock region size (corresponding to
    KBASE_LOCK_REGION_MIN_SIZE_LOG2 in kbase) and respect it.
    
    Signed-off-by: Alyssa Rosenzweig <alyssa.rosenzweig@collabora.com>
    Tested-by: Chris Morgan <macromorgan@hotmail.com>
    Reviewed-by: Steven Price <steven.price@arm.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Steven Price <steven.price@arm.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210824173028.7528-4-alyssa.rosenzweig@collabora.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a6c885489352554a0f7682be4662aec42922896
Author: Alyssa Rosenzweig <alyssa.rosenzweig@collabora.com>
Date:   Tue Aug 24 13:30:26 2021 -0400

    drm/panfrost: Use u64 for size in lock_region
    
    commit a77b58825d7221d4a45c47881c35a47ba003aa73 upstream.
    
    Mali virtual addresses are 48-bit. Use a u64 instead of size_t to ensure
    we can express the "lock everything" condition as ~0ULL without
    overflow. This code was silently broken on any platform where a size_t
    is less than 48-bits; in particular, it was broken on 32-bit armv7
    platforms which remain in use with panfrost. (Mainly RK3288)
    
    Signed-off-by: Alyssa Rosenzweig <alyssa.rosenzweig@collabora.com>
    Suggested-by: Rob Herring <robh@kernel.org>
    Tested-by: Chris Morgan <macromorgan@hotmail.com>
    Reviewed-by: Steven Price <steven.price@arm.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Fixes: f3ba91228e8e ("drm/panfrost: Add initial panfrost driver")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Steven Price <steven.price@arm.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210824173028.7528-3-alyssa.rosenzweig@collabora.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c635129bf49f6d45df44ebc3a1b710cecf36a37
Author: Alyssa Rosenzweig <alyssa.rosenzweig@collabora.com>
Date:   Tue Aug 24 13:30:25 2021 -0400

    drm/panfrost: Simplify lock_region calculation
    
    commit b5fab345654c603c07525100d744498f28786929 upstream.
    
    In lock_region, simplify the calculation of the region_width parameter.
    This field is the size, but encoded as ceil(log2(size)) - 1.
    ceil(log2(size)) may be computed directly as fls(size - 1). However, we
    want to use the 64-bit versions as the amount to lock can exceed
    32-bits.
    
    This avoids undefined (and completely wrong) behaviour when locking all
    memory (size ~0). In this case, the old code would "round up" ~0 to the
    nearest page, overflowing to 0. Since fls(0) == 0, this would calculate
    a region width of 10 + 0 = 10. But then the code would shift by
    (region_width - 11) = -1. As shifting by a negative number is undefined,
    UBSAN flags the bug. Of course, even if it were defined the behaviour is
    wrong, instead of locking all memory almost none would get locked.
    
    The new form of the calculation corrects this special case and avoids
    the undefined behaviour.
    
    Signed-off-by: Alyssa Rosenzweig <alyssa.rosenzweig@collabora.com>
    Reported-and-tested-by: Chris Morgan <macromorgan@hotmail.com>
    Fixes: f3ba91228e8e ("drm/panfrost: Add initial panfrost driver")
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Steven Price <steven.price@arm.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Steven Price <steven.price@arm.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210824173028.7528-2-alyssa.rosenzweig@collabora.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 825ba38dfd6a58e9242e0647f8a4f337bfaa06c7
Author: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
Date:   Tue Jun 22 12:23:38 2021 -0400

    drm/amdgpu: Fix BUG_ON assert
    
    commit ea7acd7c5967542353430947f3faf699e70602e5 upstream.
    
    With added CPU domain to placement you can have
    now 3 placemnts at once.
    
    CC: stable@kernel.org
    Signed-off-by: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210622162339.761651-5-andrey.grodzovsky@amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7a936da6389913449ca3e670d0089230acb6c22
Author: David Heidelberg <david@ixit.cz>
Date:   Wed Aug 11 19:06:31 2021 +0200

    drm/msi/mdp4: populate priv->kms in mdp4_kms_init
    
    commit cb0927ab80d224c9074f53d1a55b087d12ec5a85 upstream.
    
    Without this fix boot throws NULL ptr exception at msm_dsi_manager_setup_encoder
    on devices like Nexus 7 2013 (MDP4 v4.4).
    
    Fixes: 03436e3ec69c ("drm/msm/dsi: Move setup_encoder to modeset_init")
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Link: https://lore.kernel.org/r/20210811170631.39296-1-david@ixit.cz
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90358cb02a6c760648b51aac4728294e993d02cd
Author: Jan Hoffmann <jan@3e8.eu>
Date:   Wed Sep 1 20:49:33 2021 +0200

    net: dsa: lantiq_gswip: fix maximum frame length
    
    commit 552799f8b3b0074d2617f53a63a088f9514a66e3 upstream.
    
    Currently, outgoing packets larger than 1496 bytes are dropped when
    tagged VLAN is used on a switch port.
    
    Add the frame check sequence length to the value of the register
    GSWIP_MAC_FLEN to fix this. This matches the lantiq_ppa vendor driver,
    which uses a value consisting of 1518 bytes for the MAC frame, plus the
    lengths of special tag and VLAN tags.
    
    Fixes: 14fceff4771e ("net: dsa: Add Lantiq / Intel DSA driver for vrx200")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jan Hoffmann <jan@3e8.eu>
    Acked-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1f12f440c0b05317b8df2cc0eb4d5735792373c
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Jul 23 15:19:31 2021 -0700

    lib/test_stackinit: Fix static initializer test
    
    commit f9398f15605a50110bf570aaa361163a85113dd1 upstream.
    
    The static initializer test got accidentally converted to a dynamic
    initializer. Fix this and retain the giant padding hole without using
    an aligned struct member.
    
    Fixes: 50ceaa95ea09 ("lib: Introduce test_stackinit module")
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20210723221933.3431999-2-keescook@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c232895b8352418b3b98469a6af6503d2b0c416
Author: Patryk Duda <pdk@semihalf.com>
Date:   Tue May 18 16:07:58 2021 +0200

    platform/chrome: cros_ec_proto: Send command again when timeout occurs
    
    commit 3abc16af57c9939724df92fcbda296b25cc95168 upstream.
    
    Sometimes kernel is trying to probe Fingerprint MCU (FPMCU) when it
    hasn't initialized SPI yet. This can happen because FPMCU is restarted
    during system boot and kernel can send message in short window
    eg. between sysjump to RW and SPI initialization.
    
    Cc: <stable@vger.kernel.org> # 4.4+
    Signed-off-by: Patryk Duda <pdk@semihalf.com>
    Link: https://lore.kernel.org/r/20210518140758.29318-1-pdk@semihalf.com
    Signed-off-by: Benson Leung <bleung@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0569920e43100154e22b018ffe8325ece147cb23
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Thu Sep 2 14:54:57 2021 -0700

    memcg: enable accounting for pids in nested pid namespaces
    
    commit fab827dbee8c2e06ca4ba000fa6c48bcf9054aba upstream.
    
    Commit 5d097056c9a0 ("kmemcg: account certain kmem allocations to memcg")
    enabled memcg accounting for pids allocated from init_pid_ns.pid_cachep,
    but forgot to adjust the setting for nested pid namespaces.  As a result,
    pid memory is not accounted exactly where it is really needed, inside
    memcg-limited containers with their own pid namespaces.
    
    Pid was one the first kernel objects enabled for memcg accounting.
    init_pid_ns.pid_cachep marked by SLAB_ACCOUNT and we can expect that any
    new pids in the system are memcg-accounted.
    
    Though recently I've noticed that it is wrong.  nested pid namespaces
    creates own slab caches for pid objects, nested pids have increased size
    because contain id both for all parent and for own pid namespaces.  The
    problem is that these slab caches are _NOT_ marked by SLAB_ACCOUNT, as a
    result any pids allocated in nested pid namespaces are not
    memcg-accounted.
    
    Pid struct in nested pid namespace consumes up to 500 bytes memory, 100000
    such objects gives us up to ~50Mb unaccounted memory, this allow container
    to exceed assigned memcg limits.
    
    Link: https://lkml.kernel.org/r/8b6de616-fd1a-02c6-cbdb-976ecdcfa604@virtuozzo.com
    Fixes: 5d097056c9a0 ("kmemcg: account certain kmem allocations to memcg")
    Cc: stable@vger.kernel.org
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Reviewed-by: Michal Koutný <mkoutny@suse.com>
    Reviewed-by: Shakeel Butt <shakeelb@google.com>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Acked-by: Roman Gushchin <guro@fb.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0ddb80bbf107669b4585855d4ebacc0f190ae35
Author: Rik van Riel <riel@surriel.com>
Date:   Wed Sep 8 18:10:08 2021 -0700

    mm,vmscan: fix divide by zero in get_scan_count
    
    commit 32d4f4b782bb8f0ceb78c6b5dc46eb577ae25bf7 upstream.
    
    Commit f56ce412a59d ("mm: memcontrol: fix occasional OOMs due to
    proportional memory.low reclaim") introduced a divide by zero corner
    case when oomd is being used in combination with cgroup memory.low
    protection.
    
    When oomd decides to kill a cgroup, it will force the cgroup memory to
    be reclaimed after killing the tasks, by writing to the memory.max file
    for that cgroup, forcing the remaining page cache and reclaimable slab
    to be reclaimed down to zero.
    
    Previously, on cgroups with some memory.low protection that would result
    in the memory being reclaimed down to the memory.low limit, or likely
    not at all, having the page cache reclaimed asynchronously later.
    
    With f56ce412a59d the oomd write to memory.max tries to reclaim all the
    way down to zero, which may race with another reclaimer, to the point of
    ending up with the divide by zero below.
    
    This patch implements the obvious fix.
    
    Link: https://lkml.kernel.org/r/20210826220149.058089c6@imladris.surriel.com
    Fixes: f56ce412a59d ("mm: memcontrol: fix occasional OOMs due to proportional memory.low reclaim")
    Signed-off-by: Rik van Riel <riel@surriel.com>
    Acked-by: Roman Gushchin <guro@fb.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Chris Down <chris@chrisdown.name>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22b11dbbf94c59b41e99fd2a0c1b543ea18c6ba8
Author: Liu Zixian <liuzixian4@huawei.com>
Date:   Wed Sep 8 18:10:05 2021 -0700

    mm/hugetlb: initialize hugetlb_usage in mm_init
    
    commit 13db8c50477d83ad3e3b9b0ae247e5cd833a7ae4 upstream.
    
    After fork, the child process will get incorrect (2x) hugetlb_usage.  If
    a process uses 5 2MB hugetlb pages in an anonymous mapping,
    
            HugetlbPages:      10240 kB
    
    and then forks, the child will show,
    
            HugetlbPages:      20480 kB
    
    The reason for double the amount is because hugetlb_usage will be copied
    from the parent and then increased when we copy page tables from parent
    to child.  Child will have 2x actual usage.
    
    Fix this by adding hugetlb_count_init in mm_init.
    
    Link: https://lkml.kernel.org/r/20210826071742.877-1-liuzixian4@huawei.com
    Fixes: 5d317b2b6536 ("mm: hugetlb: proc: add HugetlbPages field to /proc/PID/status")
    Signed-off-by: Liu Zixian <liuzixian4@huawei.com>
    Reviewed-by: Naoya Horiguchi <naoya.horiguchi@nec.com>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1dc6df795c9f341935d10520751e83be854d0831
Author: Halil Pasic <pasic@linux.ibm.com>
Date:   Sat Jul 24 01:17:46 2021 +0200

    s390/pv: fix the forcing of the swiotlb
    
    commit 93ebb6828723b8aef114415c4dc3518342f7dcad upstream.
    
    Since commit 903cd0f315fe ("swiotlb: Use is_swiotlb_force_bounce for
    swiotlb data bouncing") if code sets swiotlb_force it needs to do so
    before the swiotlb is initialised. Otherwise
    io_tlb_default_mem->force_bounce will not get set to true, and devices
    that use (the default) swiotlb will not bounce despite switolb_force
    having the value of SWIOTLB_FORCE.
    
    Let us restore swiotlb functionality for PV by fulfilling this new
    requirement.
    
    This change addresses what turned out to be a fragility in
    commit 64e1f0c531d1 ("s390/mm: force swiotlb for protected
    virtualization"), which ain't exactly broken in its original context,
    but could give us some more headache if people backport the broken
    change and forget this fix.
    
    Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
    Tested-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Fixes: 903cd0f315fe ("swiotlb: Use is_swiotlb_force_bounce for swiotlb data bouncing")
    Fixes: 64e1f0c531d1 ("s390/mm: force swiotlb for protected virtualization")
    Cc: stable@vger.kernel.org #5.3+
    Signed-off-by: Konrad Rzeszutek Wilk <konrad@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3b57cf09012bf98e114926f4d4794d3b57c5f57
Author: Pratik R. Sampat <psampat@linux.ibm.com>
Date:   Wed Jul 28 17:35:00 2021 +0530

    cpufreq: powernv: Fix init_chip_info initialization in numa=off
    
    commit f34ee9cb2c5ac5af426fee6fa4591a34d187e696 upstream.
    
    In the numa=off kernel command-line configuration init_chip_info() loops
    around the number of chips and attempts to copy the cpumask of that node
    which is NULL for all iterations after the first chip.
    
    Hence, store the cpu mask for each chip instead of derving cpumask from
    node while populating the "chips" struct array and copy that to the
    chips[i].mask
    
    Fixes: 053819e0bf84 ("cpufreq: powernv: Handle throttling due to Pmax capping at chip level")
    Cc: stable@vger.kernel.org # v4.3+
    Reported-by: Shirisha Ganta <shirisha.ganta1@ibm.com>
    Signed-off-by: Pratik R. Sampat <psampat@linux.ibm.com>
    Reviewed-by: Gautham R. Shenoy <ego@linux.vnet.ibm.com>
    [mpe: Rename goto label to out_free_chip_cpu_mask]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210728120500.87549-2-psampat@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5eb54c4a9037a0f09081d7362d1bf72f66c6c3b
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Mon Aug 9 21:37:19 2021 -0700

    scsi: qla2xxx: Sync queue idx with queue_pair_map idx
    
    commit c8fadf019964d0eb1da410ba8b629494d3339db9 upstream.
    
    The first invocation of function find_first_zero_bit will return 0 and
    queue_id gets set to 0.
    
    An index of queue_pair_map also gets set to 0.
    
            qpair_id = find_first_zero_bit(ha->qpair_qid_map, ha->max_qpairs);
    
            set_bit(qpair_id, ha->qpair_qid_map);
            ha->queue_pair_map[qpair_id] = qpair;
    
    In the alloc_queue callback driver checks the map, if queue is already
    allocated:
    
            ha->queue_pair_map[qidx]
    
    This works fine as long as max_qpairs is greater than nvme_max_hw_queues(8)
    since the size of the queue_pair_map is equal to max_qpair. In case nr_cpus
    is less than 8, max_qpairs is less than 8. This creates wrong value
    returned as qpair.
    
    [ 1572.353669] qla2xxx [0000:24:00.3]-2121:6: Returning existing qpair of 4e00000000000000 for idx=2
    [ 1572.354458] general protection fault: 0000 [#1] SMP PTI
    [ 1572.354461] CPU: 1 PID: 44 Comm: kworker/1:1H Kdump: loaded Tainted: G          IOE    --------- -  - 4.18.0-304.el8.x86_64 #1
    [ 1572.354462] Hardware name: HP ProLiant DL380p Gen8, BIOS P70 03/01/2013
    [ 1572.354467] Workqueue: kblockd blk_mq_run_work_fn
    [ 1572.354485] RIP: 0010:qla_nvme_post_cmd+0x92/0x760 [qla2xxx]
    [ 1572.354486] Code: 84 24 5c 01 00 00 00 00 b8 0a 74 1e 66 83 79 48 00 0f 85 a8 03 00 00 48 8b 44 24 08 48 89 ee 4c 89 e7 8b 50 24 e8 5e 8e 00 00 <f0> 41 ff 47 04 0f ae f0 41 f6 47 24 04 74 19 f0 41 ff 4f 04 b8 f0
    [ 1572.354487] RSP: 0018:ffff9c81c645fc90 EFLAGS: 00010246
    [ 1572.354489] RAX: 0000000000000001 RBX: ffff8ea3e5070138 RCX: 0000000000000001
    [ 1572.354490] RDX: 0000000000000001 RSI: 0000000000000001 RDI: ffff8ea4c866b800
    [ 1572.354491] RBP: ffff8ea4c866b800 R08: 0000000000005010 R09: ffff8ea4c866b800
    [ 1572.354492] R10: 0000000000000001 R11: 000000069d1ca3ff R12: ffff8ea4bc460000
    [ 1572.354493] R13: ffff8ea3e50702b0 R14: ffff8ea4c4c16a58 R15: 4e00000000000000
    [ 1572.354494] FS:  0000000000000000(0000) GS:ffff8ea4dfd00000(0000) knlGS:0000000000000000
    [ 1572.354495] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 1572.354496] CR2: 000055884504fa58 CR3: 00000005a1410001 CR4: 00000000000606e0
    [ 1572.354497] Call Trace:
    [ 1572.354503]  ? check_preempt_curr+0x62/0x90
    [ 1572.354506]  ? dma_direct_map_sg+0x72/0x1f0
    [ 1572.354509]  ? nvme_fc_start_fcp_op.part.32+0x175/0x460 [nvme_fc]
    [ 1572.354511]  ? blk_mq_dispatch_rq_list+0x11c/0x730
    [ 1572.354515]  ? __switch_to_asm+0x35/0x70
    [ 1572.354516]  ? __switch_to_asm+0x41/0x70
    [ 1572.354518]  ? __switch_to_asm+0x35/0x70
    [ 1572.354519]  ? __switch_to_asm+0x41/0x70
    [ 1572.354521]  ? __switch_to_asm+0x35/0x70
    [ 1572.354522]  ? __switch_to_asm+0x41/0x70
    [ 1572.354523]  ? __switch_to_asm+0x35/0x70
    [ 1572.354525]  ? entry_SYSCALL_64_after_hwframe+0xb9/0xca
    [ 1572.354527]  ? __switch_to_asm+0x41/0x70
    [ 1572.354529]  ? __blk_mq_sched_dispatch_requests+0xc6/0x170
    [ 1572.354531]  ? blk_mq_sched_dispatch_requests+0x30/0x60
    [ 1572.354532]  ? __blk_mq_run_hw_queue+0x51/0xd0
    [ 1572.354535]  ? process_one_work+0x1a7/0x360
    [ 1572.354537]  ? create_worker+0x1a0/0x1a0
    [ 1572.354538]  ? worker_thread+0x30/0x390
    [ 1572.354540]  ? create_worker+0x1a0/0x1a0
    [ 1572.354541]  ? kthread+0x116/0x130
    [ 1572.354543]  ? kthread_flush_work_fn+0x10/0x10
    [ 1572.354545]  ? ret_from_fork+0x35/0x40
    
    Fix is to use index 0 for admin and first IO queue.
    
    Link: https://lore.kernel.org/r/20210810043720.1137-14-njavali@marvell.com
    Fixes: e84067d74301 ("scsi: qla2xxx: Add FC-NVMe F/W initialization and transport registration")
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f499a9e9edde844473895726071d03634ebe364a
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Mon Aug 9 21:37:17 2021 -0700

    scsi: qla2xxx: Changes to support kdump kernel
    
    commit 62e0dec59c1e139dab55aff5aa442adc97804271 upstream.
    
    Avoid allocating firmware dump and only allocate a single queue for a kexec
    kernel.
    
    Link: https://lore.kernel.org/r/20210810043720.1137-12-njavali@marvell.com
    Cc: stable@vger.kernel.org
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfa459132875297aa4512d198a2627f2288847de
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Tue Apr 20 20:01:47 2021 +0200

    scsi: BusLogic: Fix missing pr_cont() use
    
    commit 44d01fc86d952f5a8b8b32bdb4841504d5833d95 upstream.
    
    Update BusLogic driver's messaging system to use pr_cont() for continuation
    lines, bringing messy output:
    
    pci 0000:00:13.0: PCI->APIC IRQ transform: INT A -> IRQ 17
    scsi: ***** BusLogic SCSI Driver Version 2.1.17 of 12 September 2013 *****
    scsi: Copyright 1995-1998 by Leonard N. Zubkoff <lnz@dandelion.com>
    scsi0: Configuring BusLogic Model BT-958 PCI Wide Ultra SCSI Host Adapter
    scsi0:   Firmware Version: 5.07B, I/O Address: 0x7000, IRQ Channel: 17/Level
    scsi0:   PCI Bus: 0, Device: 19, Address:
    0xE0012000,
    Host Adapter SCSI ID: 7
    scsi0:   Parity Checking: Enabled, Extended Translation: Enabled
    scsi0:   Synchronous Negotiation: Ultra, Wide Negotiation: Enabled
    scsi0:   Disconnect/Reconnect: Enabled, Tagged Queuing: Enabled
    scsi0:   Scatter/Gather Limit: 128 of 8192 segments, Mailboxes: 211
    scsi0:   Driver Queue Depth: 211, Host Adapter Queue Depth: 192
    scsi0:   Tagged Queue Depth:
    Automatic
    , Untagged Queue Depth: 3
    scsi0:   SCSI Bus Termination: Both Enabled
    , SCAM: Disabled
    
    scsi0: *** BusLogic BT-958 Initialized Successfully ***
    scsi host0: BusLogic BT-958
    
    back to order:
    
    pci 0000:00:13.0: PCI->APIC IRQ transform: INT A -> IRQ 17
    scsi: ***** BusLogic SCSI Driver Version 2.1.17 of 12 September 2013 *****
    scsi: Copyright 1995-1998 by Leonard N. Zubkoff <lnz@dandelion.com>
    scsi0: Configuring BusLogic Model BT-958 PCI Wide Ultra SCSI Host Adapter
    scsi0:   Firmware Version: 5.07B, I/O Address: 0x7000, IRQ Channel: 17/Level
    scsi0:   PCI Bus: 0, Device: 19, Address: 0xE0012000, Host Adapter SCSI ID: 7
    scsi0:   Parity Checking: Enabled, Extended Translation: Enabled
    scsi0:   Synchronous Negotiation: Ultra, Wide Negotiation: Enabled
    scsi0:   Disconnect/Reconnect: Enabled, Tagged Queuing: Enabled
    scsi0:   Scatter/Gather Limit: 128 of 8192 segments, Mailboxes: 211
    scsi0:   Driver Queue Depth: 211, Host Adapter Queue Depth: 192
    scsi0:   Tagged Queue Depth: Automatic, Untagged Queue Depth: 3
    scsi0:   SCSI Bus Termination: Both Enabled, SCAM: Disabled
    scsi0: *** BusLogic BT-958 Initialized Successfully ***
    scsi host0: BusLogic BT-958
    
    Also diagnostic output such as with the BusLogic=TraceConfiguration
    parameter is affected and becomes vertical and therefore hard to read.
    This has now been corrected, e.g.:
    
    pci 0000:00:13.0: PCI->APIC IRQ transform: INT A -> IRQ 17
    blogic_cmd(86) Status = 30:  4 ==>  4: FF 05 93 00
    blogic_cmd(95) Status = 28: (Modify I/O Address)
    blogic_cmd(91) Status = 30:  1 ==>  1: 01
    blogic_cmd(04) Status = 30:  4 ==>  4: 41 41 35 30
    blogic_cmd(8D) Status = 30: 14 ==> 14: 45 DC 00 20 00 00 00 00 00 40 30 37 42 1D
    scsi: ***** BusLogic SCSI Driver Version 2.1.17 of 12 September 2013 *****
    scsi: Copyright 1995-1998 by Leonard N. Zubkoff <lnz@dandelion.com>
    blogic_cmd(04) Status = 30:  4 ==>  4: 41 41 35 30
    blogic_cmd(0B) Status = 30:  3 ==>  3: 00 08 07
    blogic_cmd(0D) Status = 30: 34 ==> 34: 03 01 07 04 00 00 00 00 00 00 00 00 00 00 00 00 FF 42 44 46 FF 00 00 00 00 00 00 00 00 00 FF 00 FF 00
    blogic_cmd(8D) Status = 30: 14 ==> 14: 45 DC 00 20 00 00 00 00 00 40 30 37 42 1D
    blogic_cmd(84) Status = 30:  1 ==>  1: 37
    blogic_cmd(8B) Status = 30:  5 ==>  5: 39 35 38 20 20
    blogic_cmd(85) Status = 30:  1 ==>  1: 42
    blogic_cmd(86) Status = 30:  4 ==>  4: FF 05 93 00
    blogic_cmd(91) Status = 30: 64 ==> 64: 41 46 3E 20 39 35 38 20 20 00 C4 00 04 01 07 2F 07 04 35 FF FF FF FF FF FF FF FF FF FF 01 00 FE FF 08 FF FF 00 00 00 00 00 00 00 01 00 01 00 00 FF FF 00 00 00 00 00 00 00 00 00 00 00 00 00 FC
    scsi0: Configuring BusLogic Model BT-958 PCI Wide Ultra SCSI Host Adapter
    
    etc.
    
    Link: https://lore.kernel.org/r/alpine.DEB.2.21.2104201940430.44318@angie.orcam.me.uk
    Fixes: 4bcc595ccd80 ("printk: reinstate KERN_CONT for printing continuation lines")
    Cc: stable@vger.kernel.org # v4.9+
    Acked-by: Khalid Aziz <khalid@gonehiking.org>
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a701ae9a0dd63748e335a2446cd23fb5ae2dc8c3
Author: chenying <chenying.kernel@bytedance.com>
Date:   Mon Aug 16 18:02:56 2021 +0800

    ovl: fix BUG_ON() in may_delete() when called from ovl_cleanup()
    
    commit 52d5a0c6bd8a89f460243ed937856354f8f253a3 upstream.
    
    If function ovl_instantiate() returns an error, ovl_cleanup will be called
    and try to remove newdentry from wdir, but the newdentry has been moved to
    udir at this time.  This will causes BUG_ON(victim->d_parent->d_inode !=
    dir) in fs/namei.c:may_delete.
    
    Signed-off-by: chenying <chenying.kernel@bytedance.com>
    Fixes: 01b39dcc9568 ("ovl: use inode_insert5() to hash a newly created inode")
    Link: https://lore.kernel.org/linux-unionfs/e6496a94-a161-dc04-c38a-d2544633acb4@bytedance.com/
    Cc: <stable@vger.kernel.org> # v4.18
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a2f728b034a7fa20099532ee5a5509b80ac08a5
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Aug 30 05:42:27 2021 -0400

    parisc: fix crash with signals and alloca
    
    commit 030f653078316a9cc9ca6bd1b0234dcf858be35d upstream.
    
    I was debugging some crashes on parisc and I found out that there is a
    crash possibility if a function using alloca is interrupted by a signal.
    The reason for the crash is that the gcc alloca implementation leaves
    garbage in the upper 32 bits of the sp register. This normally doesn't
    matter (the upper bits are ignored because the PSW W-bit is clear),
    however the signal delivery routine in the kernel uses full 64 bits of sp
    and it fails with -EFAULT if the upper 32 bits are not zero.
    
    I created this program that demonstrates the problem:
    
    #include <stdlib.h>
    #include <unistd.h>
    #include <signal.h>
    #include <alloca.h>
    
    static __attribute__((noinline,noclone)) void aa(int *size)
    {
            void * volatile p = alloca(-*size);
            while (1) ;
    }
    
    static void handler(int sig)
    {
            write(1, "signal delivered\n", 17);
            _exit(0);
    }
    
    int main(void)
    {
            int size = -0x100;
            signal(SIGALRM, handler);
            alarm(1);
            aa(&size);
    }
    
    If you compile it with optimizations, it will crash.
    The "aa" function has this disassembly:
    
    000106a0 <aa>:
       106a0:       08 03 02 41     copy r3,r1
       106a4:       08 1e 02 43     copy sp,r3
       106a8:       6f c1 00 80     stw,ma r1,40(sp)
       106ac:       37 dc 3f c1     ldo -20(sp),ret0
       106b0:       0c 7c 12 90     stw ret0,8(r3)
       106b4:       0f 40 10 9c     ldw 0(r26),ret0         ; ret0 = 0x00000000FFFFFF00
       106b8:       97 9c 00 7e     subi 3f,ret0,ret0       ; ret0 = 0xFFFFFFFF0000013F
       106bc:       d7 80 1c 1a     depwi 0,31,6,ret0       ; ret0 = 0xFFFFFFFF00000100
       106c0:       0b 9e 0a 1e     add,l sp,ret0,sp        ;   sp = 0xFFFFFFFFxxxxxxxx
       106c4:       e8 1f 1f f7     b,l,n 106c4 <aa+0x24>,r0
    
    This patch fixes the bug by truncating the "usp" variable to 32 bits.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76bebc93e1c9415fcdb6f6e7c3fe9b0607cf5843
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Aug 31 16:40:18 2021 +0800

    net: w5100: check return value after calling platform_get_resource()
    
    [ Upstream commit a39ff4a47f3e1da3b036817ef436b1a9be10783a ]
    
    It will cause null-ptr-deref if platform_get_resource() returns NULL,
    we need check the return value.
    
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3179dd79dbcf14f9a1a387f70f65be2b7835d4ed
Author: Haimin Zhang <tcs_kernel@tencent.com>
Date:   Mon Aug 30 11:47:01 2021 +0800

    fix array-index-out-of-bounds in taprio_change
    
    [ Upstream commit efe487fce3061d94222c6501d7be3aa549b3dc78 ]
    
    syzbot report an array-index-out-of-bounds in taprio_change
    index 16 is out of range for type '__u16 [16]'
    that's because mqprio->num_tc is lager than TC_MAX_QUEUE,so we check
    the return value of netdev_set_num_tc.
    
    Reported-by: syzbot+2b3e5fb6c7ef285a94f6@syzkaller.appspotmail.com
    Signed-off-by: Haimin Zhang <tcs_kernel@tencent.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef9a7867b25fb8f7ae12295365b19377ae4a2d22
Author: 王贇 <yun.wang@linux.alibaba.com>
Date:   Mon Aug 30 18:28:01 2021 +0800

    net: fix NULL pointer reference in cipso_v4_doi_free
    
    [ Upstream commit 733c99ee8be9a1410287cdbb943887365e83b2d6 ]
    
    In netlbl_cipsov4_add_std() when 'doi_def->map.std' alloc
    failed, we sometime observe panic:
    
      BUG: kernel NULL pointer dereference, address:
      ...
      RIP: 0010:cipso_v4_doi_free+0x3a/0x80
      ...
      Call Trace:
       netlbl_cipsov4_add_std+0xf4/0x8c0
       netlbl_cipsov4_add+0x13f/0x1b0
       genl_family_rcv_msg_doit.isra.15+0x132/0x170
       genl_rcv_msg+0x125/0x240
    
    This is because in cipso_v4_doi_free() there is no check
    on 'doi_def->map.std' when 'doi_def->type' equal 1, which
    is possibe, since netlbl_cipsov4_add_std() haven't initialize
    it before alloc 'doi_def->map.std'.
    
    This patch just add the check to prevent panic happen for similar
    cases.
    
    Reported-by: Abaci <abaci@linux.alibaba.com>
    Signed-off-by: Michael Wang <yun.wang@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88a4ed85e80ff83d96b3107e6c5e1aef21f8e2f8
Author: Miaoqing Pan <miaoqing@codeaurora.org>
Date:   Mon Aug 9 12:05:16 2021 +0800

    ath9k: fix sleeping in atomic context
    
    [ Upstream commit 7c48662b9d56666219f526a71ace8c15e6e12f1f ]
    
    The problem is that gpio_free() can sleep and the cfg_soc() can be
    called with spinlocks held. One problematic call tree is:
    
    --> ath_reset_internal() takes &sc->sc_pcu_lock spin lock
       --> ath9k_hw_reset()
          --> ath9k_hw_gpio_request_in()
             --> ath9k_hw_gpio_request()
                --> ath9k_hw_gpio_cfg_soc()
    
    Remove gpio_free(), use error message instead, so we should make sure
    there is no GPIO conflict.
    
    Also remove ath9k_hw_gpio_free() from ath9k_hw_apply_gpio_override(),
    as gpio_mask will never be set for SOC chips.
    
    Signed-off-by: Miaoqing Pan <miaoqing@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1628481916-15030-1-git-send-email-miaoqing@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99b950d55e598e192af7e90d09a7d96d06372479
Author: Zekun Shen <bruceshenzk@gmail.com>
Date:   Sat Jun 19 09:29:14 2021 -0400

    ath9k: fix OOB read ar9300_eeprom_restore_internal
    
    [ Upstream commit 23151b9ae79e3bc4f6a0c4cd3a7f355f68dad128 ]
    
    Bad header can have large length field which can cause OOB.
    cptr is the last bytes for read, and the eeprom is parsed
    from high to low address. The OOB, triggered by the condition
    length > cptr could cause memory error with a read on
    negative index.
    
    There are some sanity check around length, but it is not
    compared with cptr (the remaining bytes). Here, the
    corrupted/bad EEPROM can cause panic.
    
    I was able to reproduce the crash, but I cannot find the
    log and the reproducer now. After I applied the patch, the
    bug is no longer reproducible.
    
    Signed-off-by: Zekun Shen <bruceshenzk@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/YM3xKsQJ0Hw2hjrc@Zekuns-MBP-16.fios-router.home
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f70ea4a5c848084ab33b7a9688fc33b097dac38
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Jul 30 11:07:10 2021 +0100

    parport: remove non-zero check on count
    
    [ Upstream commit 0be883a0d795d9146f5325de582584147dd0dcdc ]
    
    The check for count appears to be incorrect since a non-zero count
    check occurs a couple of statements earlier. Currently the check is
    always false and the dev->port->irq != PARPORT_IRQ_NONE part of the
    check is never tested and the if statement is dead-code. Fix this
    by removing the check on count.
    
    Note that this code is pre-git history, so I can't find a sha for
    it.
    
    Acked-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Addresses-Coverity: ("Logically dead code")
    Link: https://lore.kernel.org/r/20210730100710.27405-1-colin.king@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c30ea33b03ffd63576e34c43360bdecab2d26c90
Author: Yevgeny Kliteynik <kliteyn@nvidia.com>
Date:   Thu Sep 24 20:58:50 2020 +0300

    net/mlx5: DR, Enable QP retransmission
    
    [ Upstream commit ec449ed8230cd30769de3cb70ee0fce293047372 ]
    
    Under high stress, SW steering might get stuck on polling for completion
    that never comes.
    For such cases QP needs to have protocol retransmission mechanism enabled.
    Currently the retransmission timeout is defined as 0 (unlimited). Fix this
    by defining a real timeout.
    
    Signed-off-by: Yevgeny Kliteynik <kliteyn@nvidia.com>
    Reviewed-by: Alex Vesker <valex@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9095f788d03b553e3f39ce33999aa6dcc0c3b76
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Aug 5 13:19:31 2021 +0300

    iwlwifi: mvm: fix access to BSS elements
    
    [ Upstream commit 6c608cd6962ebdf84fd3de6d42f88ed64d2f4e1b ]
    
    BSS elements are protected using RCU, so we need to use
    RCU properly to access them, fix that.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20210805130823.fd8b5791ab44.Iba26800a6301078d3782fb249c476dd8ac2bf3c6@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f950996d64dff406ecd1ed7814b18bfff3db3c02
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Aug 2 17:28:27 2021 +0300

    iwlwifi: mvm: avoid static queue number aliasing
    
    [ Upstream commit c6ce1c74ef2923b8ffd85f7f8b486f804f343b39 ]
    
    When TVQM is enabled (iwl_mvm_has_new_tx_api() is true), then
    queue numbers are just sequentially assigned 0, 1, 2, ...
    Prior to TVQM, in DQA, there were some statically allocated
    queue numbers:
     * IWL_MVM_DQA_AUX_QUEUE == 1,
     * both IWL_MVM_DQA_INJECT_MONITOR_QUEUE and
       IWL_MVM_DQA_P2P_DEVICE_QUEUE == 2, and
     * IWL_MVM_DQA_AP_PROBE_RESP_QUEUE == 9.
    
    Now, these values are assigned to the members mvm->aux_queue,
    mvm->snif_queue, mvm->probe_queue and mvm->p2p_dev_queue by
    default. Normally, this doesn't really matter, and if TVQM is
    in fact available we override them to the real values after
    allocating a queue for use there.
    
    However, this allocation doesn't always happen. For example,
    for mvm->p2p_dev_queue (== 2) it only happens when the P2P
    Device interface is started, if any. If it's not started, the
    value in mvm->p2p_dev_queue remains 2. This wouldn't really
    matter all that much if it weren't for iwl_mvm_is_static_queue()
    which checks a queue number against one of those four static
    numbers.
    
    Now, if no P2P Device or monitor interface is added then queue
    2 may be dynamically allocated, yet alias mvm->p2p_dev_queue or
    mvm->snif_queue, and thus iwl_mvm_is_static_queue() erroneously
    returns true for it. If it then gets full, all interface queues
    are stopped, instead of just backpressuring against the one TXQ
    that's really the only affected one.
    
    This clearly can lead to issues, as everything is stopped even
    if just a single TXQ filled its corresponding HW queue, if it
    happens to have an appropriate number (2 or 9, AUX is always
    reassigned.) Due to a mac80211 bug, this also led to a situation
    in which the queues remained stopped across a deauthentication
    and then attempts to connect to a new AP started failing, but
    that's fixed separately.
    
    Fix all of this by simply initializing the queue numbers to
    the invalid value until they're used, if TVQM is enabled, and
    also setting them back to that value when the queues are later
    freed again.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20210802172232.2e47e623f9e2.I9b0830dafbb68ef35b7b8f0f46160abec02ac7d0@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2db5ae5b28e73b4fc25680a18e06a94b20d22a84
Author: Zhang Qilong <zhangqilong3@huawei.com>
Date:   Mon Aug 2 17:28:24 2021 +0300

    iwlwifi: mvm: fix a memory leak in iwl_mvm_mac_ctxt_beacon_changed
    
    [ Upstream commit 0f5d44ac6e55551798dd3da0ff847c8df5990822 ]
    
    If beacon_inject_active is true, we will return without freeing
    beacon.  Fid that by freeing it before returning.
    
    Signed-off-by: Zhang Qilong <zhangqilong3@huawei.com>
    [reworded the commit message]
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20210802172232.d16206ca60fc.I9984a9b442c84814c307cee3213044e24d26f38a@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3da13a1e2a4559ae6e175e62956c124b2d61921e
Author: Sean Keely <Sean.Keely@amd.com>
Date:   Thu Aug 19 21:26:14 2021 -0500

    drm/amdkfd: Account for SH/SE count when setting up cu masks.
    
    [ Upstream commit 1ec06c2dee679e9f089e78ed20cb74ee90155f61 ]
    
    On systems with multiple SH per SE compute_static_thread_mgmt_se#
    is split into independent masks, one for each SH, in the upper and
    lower 16 bits.  We need to detect this and apply cu masking to each
    SH.  The cu mask bits are assigned first to each SE, then to
    alternate SHs, then finally to higher CU id.  This ensures that
    the maximum number of SPIs are engaged as early as possible while
    balancing CU assignment to each SH.
    
    v2: Use max SH/SE rather than max SH in cu_per_sh.
    
    v3: Fix comment blocks, ensure se_mask is initially zero filled,
        and correctly assign se.sh.cu positions to unset bits in cu_mask.
    
    Signed-off-by: Sean Keely <Sean.Keely@amd.com>
    Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2af60889c88ebc3aa35245dd0714303cade10725
Author: Xiaotan Luo <lxt@rock-chips.com>
Date:   Thu Aug 26 12:02:36 2021 +0800

    ASoC: rockchip: i2s: Fixup config for DAIFMT_DSP_A/B
    
    [ Upstream commit 1bf56843e664eef2525bdbfae6a561e98910f676 ]
    
    - DSP_A: PCM delay 1 bit mode, L data MSB after FRM LRC
    - DSP_B: PCM no delay mode, L data MSB during FRM LRC
    
    Signed-off-by: Xiaotan Luo <lxt@rock-chips.com>
    Signed-off-by: Sugar Zhang <sugar.zhang@rock-chips.com>
    Link: https://lore.kernel.org/r/1629950562-14281-3-git-send-email-sugar.zhang@rock-chips.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98381f840f227f908b79785dfe67e22c45347587
Author: Sugar Zhang <sugar.zhang@rock-chips.com>
Date:   Thu Aug 26 12:01:50 2021 +0800

    ASoC: rockchip: i2s: Fix regmap_ops hang
    
    [ Upstream commit 53ca9b9777b95cdd689181d7c547e38dc79adad0 ]
    
    API 'set_fmt' maybe called when PD is off, in the situation,
    any register access will hang the system. so, enable PD
    before r/w register.
    
    Signed-off-by: Sugar Zhang <sugar.zhang@rock-chips.com>
    Link: https://lore.kernel.org/r/1629950520-14190-4-git-send-email-sugar.zhang@rock-chips.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1c7bc02e19216bdf870b866907a1b7714b8c6e3
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Thu Aug 19 16:59:37 2021 -0600

    usbip:vhci_hcd USB port can get stuck in the disabled state
    
    [ Upstream commit 66cce9e73ec61967ed1f97f30cee79bd9a2bb7ee ]
    
    When a remote usb device is attached to the local Virtual USB
    Host Controller Root Hub port, the bound device driver may send
    a port reset command.
    
    vhci_hcd accepts port resets only when the device doesn't have
    port address assigned to it. When reset happens device is in
    assigned/used state and vhci_hcd rejects it leaving the port in
    a stuck state.
    
    This problem was found when a blue-tooth or xbox wireless dongle
    was passed through using usbip.
    
    A few drivers reset the port during probe including mt76 driver
    specific to this bug report. Fix the problem with a change to
    honor reset requests when device is in used state (VDEV_ST_USED).
    
    Reported-and-tested-by: Michael <msbroadf@gmail.com>
    Suggested-by: Michael <msbroadf@gmail.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/20210819225937.41037-1-skhan@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f6095b0c9d5181fa4a9b1eb410701c7f00ce4b6
Author: Anirudh Rayabharam <mail@anirudhrb.com>
Date:   Sat Aug 21 00:31:21 2021 +0530

    usbip: give back URBs for unsent unlink requests during cleanup
    
    [ Upstream commit 258c81b341c8025d79073ce2d6ce19dcdc7d10d2 ]
    
    In vhci_device_unlink_cleanup(), the URBs for unsent unlink requests are
    not given back. This sometimes causes usb_kill_urb to wait indefinitely
    for that urb to be given back. syzbot has reported a hung task issue [1]
    for this.
    
    To fix this, give back the urbs corresponding to unsent unlink requests
    (unlink_tx list) similar to how urbs corresponding to unanswered unlink
    requests (unlink_rx list) are given back.
    
    [1]: https://syzkaller.appspot.com/bug?id=08f12df95ae7da69814e64eb5515d5a85ed06b76
    
    Reported-by: syzbot+74d6ef051d3d2eacf428@syzkaller.appspotmail.com
    Tested-by: syzbot+74d6ef051d3d2eacf428@syzkaller.appspotmail.com
    Reviewed-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Anirudh Rayabharam <mail@anirudhrb.com>
    Link: https://lore.kernel.org/r/20210820190122.16379-2-mail@anirudhrb.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a4a6805294fa7d2653e82972bdaf9e3e1f3d3c9
Author: Nadezda Lutovinova <lutovinova@ispras.ru>
Date:   Thu Aug 19 19:33:23 2021 +0300

    usb: musb: musb_dsps: request_irq() after initializing musb
    
    [ Upstream commit 7c75bde329d7e2a93cf86a5c15c61f96f1446cdc ]
    
    If IRQ occurs between calling  dsps_setup_optional_vbus_irq()
    and  dsps_create_musb_pdev(), then null pointer dereference occurs
    since glue->musb wasn't initialized yet.
    
    The patch puts initializing of neccesery data before registration
    of the interrupt handler.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Nadezda Lutovinova <lutovinova@ispras.ru>
    Link: https://lore.kernel.org/r/20210819163323.17714-1-lutovinova@ispras.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d24381e5a73b84a9c89912ae524b115ccd9b4c67
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Aug 20 15:35:01 2021 +0300

    Revert "USB: xhci: fix U1/U2 handling for hardware with XHCI_INTEL_HOST quirk set"
    
    [ Upstream commit 2847c46c61486fd8bca9136a6e27177212e78c69 ]
    
    This reverts commit 5d5323a6f3625f101dbfa94ba3ef7706cce38760.
    
    That commit effectively disabled Intel host initiated U1/U2 lpm for devices
    with periodic endpoints.
    
    Before that commit we disabled host initiated U1/U2 lpm if the exit latency
    was larger than any periodic endpoint service interval, this is according
    to xhci spec xhci 1.1 specification section 4.23.5.2
    
    After that commit we incorrectly checked that service interval was smaller
    than U1/U2 inactivity timeout. This is not relevant, and can't happen for
    Intel hosts as previously set U1/U2 timeout = 105% * service interval.
    
    Patch claimed it solved cases where devices can't be enumerated because of
    bandwidth issues. This might be true but it's a side effect of accidentally
    turning off lpm.
    
    exit latency calculations have been revised since then
    
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20210820123503.2605901-5-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa40cf19bfa9b1d2b6fd651999f32224570342f6
Author: Ding Hui <dinghui@sangfor.com.cn>
Date:   Tue Aug 17 22:55:10 2021 +0800

    cifs: fix wrong release in sess_alloc_buffer() failed path
    
    [ Upstream commit d72c74197b70bc3c95152f351a568007bffa3e11 ]
    
    smb_buf is allocated by small_smb_init_no_tc(), and buf type is
    CIFS_SMALL_BUFFER, so we should use cifs_small_buf_release() to
    release it in failed path.
    
    Signed-off-by: Ding Hui <dinghui@sangfor.com.cn>
    Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39111cbb7b7c5257697f761b2c220fe20e86f41b
Author: Nishad Kamdar <nishadkamdar@gmail.com>
Date:   Wed Aug 25 00:47:26 2021 +0530

    mmc: core: Return correct emmc response in case of ioctl error
    
    [ Upstream commit e72a55f2e5ddcfb3dce0701caf925ce435b87682 ]
    
    When a read/write command is sent via ioctl to the kernel,
    and the command fails, the actual error response of the emmc
    is not sent to the user.
    
    IOCTL read/write tests are carried out using commands
    17 (Single BLock Read), 24 (Single Block Write),
    18 (Multi Block Read), 25 (Multi Block Write)
    
    The tests are carried out on a 64Gb emmc device. All of these
    tests try to access an "out of range" sector address (0x09B2FFFF).
    
    It is seen that without the patch the response received by the user
    is not OUT_OF_RANGE error (R1 response 31st bit is not set) as per
    JEDEC specification. After applying the patch proper response is seen.
    This is because the function returns without copying the response to
    the user in case of failure. This patch fixes the issue.
    
    Hence, this memcpy is required whether we get an error response or not.
    Therefor it is moved up from the current position up to immediately
    after we have called mmc_wait_for_req().
    
    The test code and the output of only the CMD17 is included in the
    commit to limit the message length.
    
    CMD17 (Test Code Snippet):
    ==========================
            printf("Forming CMD%d\n", opt_idx);
            /*  single block read */
            cmd.blksz = 512;
            cmd.blocks = 1;
            cmd.write_flag = 0;
            cmd.opcode = 17;
            //cmd.arg = atoi(argv[3]);
            cmd.arg = 0x09B2FFFF;
            /* Expecting response R1B */
            cmd.flags = MMC_RSP_SPI_R1 | MMC_RSP_R1 | MMC_CMD_ADTC;
    
            memset(data, 0, sizeof(__u8) * 512);
            mmc_ioc_cmd_set_data(cmd, data);
    
            printf("Sending CMD%d: ARG[0x%08x]\n", opt_idx, cmd.arg);
            if(ioctl(fd, MMC_IOC_CMD, &cmd))
                    perror("Error");
    
            printf("\nResponse: %08x\n", cmd.response[0]);
    
    CMD17 (Output without patch):
    =============================
    test@test-LIVA-Z:~$ sudo ./mmc cmd_test /dev/mmcblk0 17
    Entering the do_mmc_commands:Device: /dev/mmcblk0 nargs:4
    Entering the do_mmc_commands:Device: /dev/mmcblk0 options[17, 0x09B2FFF]
    Forming CMD17
    Sending CMD17: ARG[0x09b2ffff]
    Error: Connection timed out
    
    Response: 00000000
    (Incorrect response)
    
    CMD17 (Output with patch):
    ==========================
    test@test-LIVA-Z:~$ sudo ./mmc cmd_test /dev/mmcblk0 17
    [sudo] password for test:
    Entering the do_mmc_commands:Device: /dev/mmcblk0 nargs:4
    Entering the do_mmc_commands:Device: /dev/mmcblk0 options[17, 09B2FFFF]
    Forming CMD17
    Sending CMD17: ARG[0x09b2ffff]
    Error: Connection timed out
    
    Response: 80000900
    (Correct OUT_OF_ERROR response as per JEDEC specification)
    
    Signed-off-by: Nishad Kamdar <nishadkamdar@gmail.com>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Link: https://lore.kernel.org/r/20210824191726.8296-1-nishadkamdar@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26f55b60f22f49218b40ff0092100bf3b3db94d9
Author: Li Zhijian <lizhijian@cn.fujitsu.com>
Date:   Fri Aug 20 09:55:53 2021 +0800

    selftests/bpf: Enlarge select() timeout for test_maps
    
    [ Upstream commit 2d82d73da35b72b53fe0d96350a2b8d929d07e42 ]
    
    0Day robot observed that it's easily timeout on a heavy load host.
    -------------------
     # selftests: bpf: test_maps
     # Fork 1024 tasks to 'test_update_delete'
     # Fork 1024 tasks to 'test_update_delete'
     # Fork 100 tasks to 'test_hashmap'
     # Fork 100 tasks to 'test_hashmap_percpu'
     # Fork 100 tasks to 'test_hashmap_sizes'
     # Fork 100 tasks to 'test_hashmap_walk'
     # Fork 100 tasks to 'test_arraymap'
     # Fork 100 tasks to 'test_arraymap_percpu'
     # Failed sockmap unexpected timeout
     not ok 3 selftests: bpf: test_maps # exit=1
     # selftests: bpf: test_lru_map
     # nr_cpus:8
    -------------------
    Since this test will be scheduled by 0Day to a random host that could have
    only a few cpus(2-8), enlarge the timeout to avoid a false NG report.
    
    In practice, i tried to pin it to only one cpu by 'taskset 0x01 ./test_maps',
    and knew 10S is likely enough, but i still perfer to a larger value 30.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Li Zhijian <lizhijian@cn.fujitsu.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Song Liu <songliubraving@fb.com>
    Link: https://lore.kernel.org/bpf/20210820015556.23276-2-lizhijian@cn.fujitsu.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48f5a5f0276d529450c2b16810cb09e5767d1a2a
Author: Thomas Hebb <tommyhebb@gmail.com>
Date:   Sun Aug 1 04:46:14 2021 -0700

    mmc: rtsx_pci: Fix long reads when clock is prescaled
    
    [ Upstream commit 3ac5e45291f3f0d699a721357380d4593bc2dcb3 ]
    
    For unexplained reasons, the prescaler register for this device needs to
    be cleared (set to 1) while performing a data read or else the command
    will hang. This does not appear to affect the real clock rate sent out
    on the bus, so I assume it's purely to work around a hardware bug.
    
    During normal operation, the prescaler is already set to 1, so nothing
    needs to be done. However, in "initial mode" (which is used for sub-MHz
    clock speeds, like the core sets while enumerating cards), it's set to
    128 and so we need to reset it during data reads. We currently fail to
    do this for long reads.
    
    This has no functional affect on the driver's operation currently
    written, as the MMC core always sets a clock above 1MHz before
    attempting any long reads. However, the core could conceivably set any
    clock speed at any time and the driver should still work, so I think
    this fix is worthwhile.
    
    I personally encountered this issue while performing data recovery on an
    external chip. My connections had poor signal integrity, so I modified
    the core code to reduce the clock speed. Without this change, I saw the
    card enumerate but was unable to actually read any data.
    
    Writes don't seem to work in the situation described above even with
    this change (and even if the workaround is extended to encompass data
    write commands). I was not able to find a way to get them working.
    
    Signed-off-by: Thomas Hebb <tommyhebb@gmail.com>
    Link: https://lore.kernel.org/r/2fef280d8409ab0100c26c6ac7050227defd098d.1627818365.git.tommyhebb@gmail.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e773c5553b2138206255af2d10034fbe66c35a8
Author: Manish Narani <manish.narani@xilinx.com>
Date:   Tue Jun 15 16:13:54 2021 +0530

    mmc: sdhci-of-arasan: Check return value of non-void funtions
    
    [ Upstream commit 66bad6ed2204fdb78a0a8fb89d824397106a5471 ]
    
    At a couple of places, the return values of the non-void functions were
    not getting checked. This was reported by the coverity tool. Modify the
    code to check the return values of the same.
    
    Addresses-Coverity: ("check_return")
    Signed-off-by: Manish Narani <manish.narani@xilinx.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/1623753837-21035-5-git-send-email-manish.narani@xilinx.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a73bbfabfe6f8cd7e6b734423e63caa01990e5ec
Author: Marc Zyngier <maz@kernel.org>
Date:   Fri Aug 20 15:47:22 2021 +0100

    of: Don't allow __of_attached_node_sysfs() without CONFIG_SYSFS
    
    [ Upstream commit 6211e9cb2f8faf7faae0b6caf844bfe9527cc607 ]
    
    Trying to boot without SYSFS, but with OF_DYNAMIC quickly
    results in a crash:
    
    [    0.088460] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000070
    [...]
    [    0.103927] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.14.0-rc3 #4179
    [    0.105810] Hardware name: linux,dummy-virt (DT)
    [    0.107147] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO BTYPE=--)
    [    0.108876] pc : kernfs_find_and_get_ns+0x3c/0x7c
    [    0.110244] lr : kernfs_find_and_get_ns+0x3c/0x7c
    [...]
    [    0.134087] Call trace:
    [    0.134800]  kernfs_find_and_get_ns+0x3c/0x7c
    [    0.136054]  safe_name+0x4c/0xd0
    [    0.136994]  __of_attach_node_sysfs+0xf8/0x124
    [    0.138287]  of_core_init+0x90/0xfc
    [    0.139296]  driver_init+0x30/0x4c
    [    0.140283]  kernel_init_freeable+0x160/0x1b8
    [    0.141543]  kernel_init+0x30/0x140
    [    0.142561]  ret_from_fork+0x10/0x18
    
    While not having sysfs isn't a very common option these days,
    it is still expected that such configuration would work.
    
    Paper over it by bailing out from __of_attach_node_sysfs() if
    CONFIG_SYSFS isn't enabled.
    
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210820144722.169226-1-maz@kernel.org
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fdf7d38ee86b8330a552df3de15065e5e927682
Author: Gustaw Lewandowski <gustaw.lewandowski@linux.intel.com>
Date:   Wed Aug 18 09:57:37 2021 +0200

    ASoC: Intel: Skylake: Fix passing loadable flag for module
    
    [ Upstream commit c5ed9c547cba1dc1238c6e8a0c290fd62ee6e127 ]
    
    skl_get_module_info() tries to set mconfig->module->loadable before
    mconfig->module has been assigned thus flag was always set to false
    and driver did not try to load module binaries.
    
    Signed-off-by: Gustaw Lewandowski <gustaw.lewandowski@linux.intel.com>
    Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Tested-by: Lukasz Majczak <lma@semihalf.com>
    Link: https://lore.kernel.org/r/20210818075742.1515155-7-cezary.rojewski@intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6ff4d5609cacdfa665e410637da9afdb993432a
Author: Cezary Rojewski <cezary.rojewski@intel.com>
Date:   Wed Aug 18 09:57:36 2021 +0200

    ASoC: Intel: Skylake: Fix module configuration for KPB and MIXER
    
    [ Upstream commit e4e0633bcadc950b4b4af06c7f1bb7f7e3e86321 ]
    
    KeyPhrasebuffer, Mixin and Mixout modules configuration is described by
    firmware's basic module configuration structure. There are no extended
    parameters required. Update functions taking part in building
    INIT_INSTANCE IPC payload to reflect that.
    
    Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Tested-by: Lukasz Majczak <lma@semihalf.com>
    Link: https://lore.kernel.org/r/20210818075742.1515155-6-cezary.rojewski@intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 736f60bd488322d9e0c69467e5ae5065686db72f
Author: Marcos Paulo de Souza <mpdesouza@suse.com>
Date:   Mon Aug 2 09:34:00 2021 -0300

    btrfs: tree-log: check btrfs_lookup_data_extent return value
    
    [ Upstream commit 3736127a3aa805602b7a2ad60ec9cfce68065fbb ]
    
    Function btrfs_lookup_data_extent calls btrfs_search_slot to verify if
    the EXTENT_ITEM exists in the extent tree. btrfs_search_slot can return
    values bellow zero if an error happened.
    
    Function replay_one_extent currently checks if the search found
    something (0 returned) and increments the reference, and if not, it
    seems to evaluate as 'not found'.
    
    Fix the condition by checking if the value was bellow zero and return
    early.
    
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Marcos Paulo de Souza <mpdesouza@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53a72858bcae7eaa7df8d167dbf60682d70f82a6
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Aug 9 18:01:31 2021 +1000

    m68knommu: only set CONFIG_ISA_DMA_API for ColdFire sub-arch
    
    [ Upstream commit db87db65c1059f3be04506d122f8ec9b2fa3b05e ]
    
    > Hi Arnd,
    >
    > First bad commit (maybe != root cause):
    >
    > tree:   https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git master
    > head:   2f73937c9aa561e2082839bc1a8efaac75d6e244
    > commit: 47fd22f2b84765a2f7e3f150282497b902624547 [4771/5318] cs89x0: rework driver configuration
    > config: m68k-randconfig-c003-20210804 (attached as .config)
    > compiler: m68k-linux-gcc (GCC) 10.3.0
    > reproduce (this is a W=1 build):
    >         wget https://raw.githubusercontent.com/intel/lkp-tests/master/sbin/make.cross -O ~/bin/make.cross
    >         chmod +x ~/bin/make.cross
    >         # https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git/commit/?id=47fd22f2b84765a2f7e3f150282497b902624547
    >         git remote add linux-next https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
    >         git fetch --no-tags linux-next master
    >         git checkout 47fd22f2b84765a2f7e3f150282497b902624547
    >         # save the attached .config to linux build tree
    >         COMPILER_INSTALL_PATH=$HOME/0day COMPILER=gcc-10.3.0 make.cross ARCH=m68k
    >
    > If you fix the issue, kindly add following tag as appropriate
    > Reported-by: kernel test robot <lkp@intel.com>
    >
    > All errors (new ones prefixed by >>):
    >
    >    In file included from include/linux/kernel.h:19,
    >                     from include/linux/list.h:9,
    >                     from include/linux/module.h:12,
    >                     from drivers/net/ethernet/cirrus/cs89x0.c:51:
    >    drivers/net/ethernet/cirrus/cs89x0.c: In function 'net_open':
    >    drivers/net/ethernet/cirrus/cs89x0.c:897:20: error: implicit declaration of function 'isa_virt_to_bus'; did you mean 'virt_to_bus'? [-Werror=implicit-function-declaration]
    >      897 |     (unsigned long)isa_virt_to_bus(lp->dma_buff));
    >          |                    ^~~~~~~~~~~~~~~
    >    include/linux/printk.h:141:17: note: in definition of macro 'no_printk'
    >      141 |   printk(fmt, ##__VA_ARGS__);  \
    >          |                 ^~~~~~~~~~~
    >    drivers/net/ethernet/cirrus/cs89x0.c:86:3: note: in expansion of macro 'pr_debug'
    >       86 |   pr_##level(fmt, ##__VA_ARGS__);   \
    >          |   ^~~
    >    drivers/net/ethernet/cirrus/cs89x0.c:894:3: note: in expansion of macro 'cs89_dbg'
    >      894 |   cs89_dbg(1, debug, "%s: dma %lx %lx\n",
    >          |   ^~~~~~~~
    > >> drivers/net/ethernet/cirrus/cs89x0.c:914:3: error: implicit declaration of function 'disable_dma'; did you mean 'disable_irq'? [-Werror=implicit-function-declaration]
    
    As far as I can tell, this is a bug with the m68kmmu architecture, not
    with my driver:
    The CONFIG_ISA_DMA_API option is provided for coldfire, which implements it,
    but dragonball also sets the option as a side-effect, without actually
    implementing
    the interfaces. The patch below should fix it.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Ungerer <gerg@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3710cff57d3c14368896979b3eda4283842057b1
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Jul 27 16:36:56 2021 -0700

    drm/exynos: Always initialize mapping in exynos_drm_register_dma()
    
    [ Upstream commit c626f3864bbbb28bbe06476b0b497c1330aa4463 ]
    
    In certain randconfigs, clang warns:
    
    drivers/gpu/drm/exynos/exynos_drm_dma.c:121:19: warning: variable
    'mapping' is uninitialized when used here [-Wuninitialized]
                    priv->mapping = mapping;
                                    ^~~~~~~
    drivers/gpu/drm/exynos/exynos_drm_dma.c:111:16: note: initialize the
    variable 'mapping' to silence this warning
                    void *mapping;
                                 ^
                                  = NULL
    1 warning generated.
    
    This occurs when CONFIG_EXYNOS_IOMMU is enabled and both
    CONFIG_ARM_DMA_USE_IOMMU and CONFIG_IOMMU_DMA are disabled, which makes
    the code look like
    
      void *mapping;
    
      if (0)
        mapping = arm_iommu_create_mapping()
      else if (0)
        mapping = iommu_get_domain_for_dev()
    
      ...
      priv->mapping = mapping;
    
    Add an else branch that initializes mapping to the -ENODEV error pointer
    so that there is no more warning and the driver does not change during
    runtime.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Inki Dae <inki.dae@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 727c973ffe51cc5249a36ddd854889a71d28f370
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Fri Aug 20 17:01:59 2021 -0400

    lockd: lockd server-side shouldn't set fl_ops
    
    [ Upstream commit 7de875b231edb807387a81cde288aa9e1015ef9e ]
    
    Locks have two sets of op arrays, fl_lmops for the lock manager (lockd
    or nfsd), fl_ops for the filesystem.  The server-side lockd code has
    been setting its own fl_ops, which leads to confusion (and crashes) in
    the reexport case, where the filesystem expects to be the only one
    setting fl_ops.
    
    And there's no reason for it that I can see-the lm_get/put_owner ops do
    the same job.
    
    Reported-by: Daire Byrne <daire@dneg.com>
    Tested-by: Daire Byrne <daire@dneg.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a18cfd715e91d2013da3dac86ce18f34a25d9e64
Author: Li Jun <jun.li@nxp.com>
Date:   Fri Jun 18 16:28:58 2021 +0800

    usb: chipidea: host: fix port index underflow and UBSAN complains
    
    [ Upstream commit e5d6a7c6cfae9e714a0e8ff64facd1ac68a784c6 ]
    
    If wIndex is 0 (and it often is), these calculations underflow and
    UBSAN complains, here resolve this by not decrementing the index when
    it is equal to 0, this copies the solution from commit 85e3990bea49
    ("USB: EHCI: avoid undefined pointer arithmetic and placate UBSAN")
    
    Reported-by: Zhipeng Wang <zhipeng.wang_1@nxp.com>
    Signed-off-by: Li Jun <jun.li@nxp.com>
    Link: https://lore.kernel.org/r/1624004938-2399-1-git-send-email-jun.li@nxp.com
    Signed-off-by: Peter Chen <peter.chen@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8deedce385d220f90e435f534d71d27526273515
Author: Bob Peterson <rpeterso@redhat.com>
Date:   Fri Jul 30 12:41:49 2021 -0500

    gfs2: Don't call dlm after protocol is unmounted
    
    [ Upstream commit d1340f80f0b8066321b499a376780da00560e857 ]
    
    In the gfs2 withdraw sequence, the dlm protocol is unmounted with a call
    to lm_unmount. After a withdraw, users are allowed to unmount the
    withdrawn file system. But at that point we may still have glocks left
    over that we need to free via unmount's call to gfs2_gl_hash_clear.
    These glocks may have never been completed because of whatever problem
    caused the withdraw (IO errors or whatever).
    
    Before this patch, function gdlm_put_lock would still try to call into
    dlm to unlock these leftover glocks, which resulted in dlm returning
    -EINVAL because the lock space was abandoned. These glocks were never
    freed because there was no mechanism after that to free them.
    
    This patch adds a check to gdlm_put_lock to see if the locking protocol
    was inactive (DFL_UNMOUNT flag) and if so, free the glock and not
    make the invalid call into dlm.
    
    I could have combined this "if" with the one that follows, related to
    leftover glock LVBs, but I felt the code was more readable with its own
    if clause.
    
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50cf8f1b6c39a6f4f20558920dc1b44103fed69b
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Aug 17 21:42:52 2021 -0700

    staging: rts5208: Fix get_ms_information() heap buffer size
    
    [ Upstream commit cbe34165cc1b7d1110b268ba8b9f30843c941639 ]
    
    Fix buf allocation size (it needs to be 2 bytes larger). Found when
    __alloc_size() annotations were added to kmalloc() interfaces.
    
    In file included from ./include/linux/string.h:253,
                     from ./include/linux/bitmap.h:10,
                     from ./include/linux/cpumask.h:12,
                     from ./arch/x86/include/asm/paravirt.h:17,
                     from ./arch/x86/include/asm/irqflags.h:63,
                     from ./include/linux/irqflags.h:16,
                     from ./include/linux/rcupdate.h:26,
                     from ./include/linux/rculist.h:11,
                     from ./include/linux/pid.h:5,
                     from ./include/linux/sched.h:14,
                     from ./include/linux/blkdev.h:5,
                     from drivers/staging/rts5208/rtsx_scsi.c:12:
    In function 'get_ms_information',
        inlined from 'ms_sp_cmnd' at drivers/staging/rts5208/rtsx_scsi.c:2877:12,
        inlined from 'rtsx_scsi_handler' at drivers/staging/rts5208/rtsx_scsi.c:3247:12:
    ./include/linux/fortify-string.h:54:29: warning: '__builtin_memcpy' forming offset [106, 107] is out
     of the bounds [0, 106] [-Warray-bounds]
       54 | #define __underlying_memcpy __builtin_memcpy
          |                             ^
    ./include/linux/fortify-string.h:417:2: note: in expansion of macro '__underlying_memcpy'
      417 |  __underlying_##op(p, q, __fortify_size);   \
          |  ^~~~~~~~~~~~~
    ./include/linux/fortify-string.h:463:26: note: in expansion of macro '__fortify_memcpy_chk'
      463 | #define memcpy(p, q, s)  __fortify_memcpy_chk(p, q, s,   \
          |                          ^~~~~~~~~~~~~~~~~~~~
    drivers/staging/rts5208/rtsx_scsi.c:2851:3: note: in expansion of macro 'memcpy'
     2851 |   memcpy(buf + i, ms_card->raw_sys_info, 96);
          |   ^~~~~~
    
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: linux-staging@lists.linux.dev
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20210818044252.1533634-1-keescook@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dfd785ae110dbcb6e9627fbad110eeca3bda641
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Thu Aug 12 16:41:42 2021 -0400

    rpc: fix gss_svc_init cleanup on failure
    
    [ Upstream commit 5a4753446253a427c0ff1e433b9c4933e5af207c ]
    
    The failure case here should be rare, but it's obviously wrong.
    
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bc818e0231a395a82146628a0720f9aabf46d25
Author: Luke Hsiao <lukehsiao@google.com>
Date:   Mon Aug 16 20:51:06 2021 +0000

    tcp: enable data-less, empty-cookie SYN with TFO_SERVER_COOKIE_NOT_REQD
    
    [ Upstream commit e3faa49bcecdfcc80e94dd75709d6acb1a5d89f6 ]
    
    Since the original TFO server code was implemented in commit
    168a8f58059a22feb9e9a2dcc1b8053dbbbc12ef ("tcp: TCP Fast Open Server -
    main code path") the TFO server code has supported the sysctl bit flag
    TFO_SERVER_COOKIE_NOT_REQD. Currently, when the TFO_SERVER_ENABLE and
    TFO_SERVER_COOKIE_NOT_REQD sysctl bit flags are set, a server connection
    will accept a SYN with N bytes of data (N > 0) that has no TFO cookie,
    create a new fast open connection, process the incoming data in the SYN,
    and make the connection ready for accepting. After accepting, the
    connection is ready for read()/recvmsg() to read the N bytes of data in
    the SYN, ready for write()/sendmsg() calls and data transmissions to
    transmit data.
    
    This commit changes an edge case in this feature by changing this
    behavior to apply to (N >= 0) bytes of data in the SYN rather than only
    (N > 0) bytes of data in the SYN. Now, a server will accept a data-less
    SYN without a TFO cookie if TFO_SERVER_COOKIE_NOT_REQD is set.
    
    Caveat! While this enables a new kind of TFO (data-less empty-cookie
    SYN), some firewall rules setup may not work if they assume such packets
    are not legit TFOs and will filter them.
    
    Signed-off-by: Luke Hsiao <lukehsiao@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20210816205105.2533289-1-luke.w.hsiao@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2918eca4970a1434cb3890f8ddfd39758823c97a
Author: Ulrich Hecht <uli+renesas@fpond.eu>
Date:   Mon Aug 16 18:22:01 2021 +0200

    serial: sh-sci: fix break handling for sysrq
    
    [ Upstream commit 87b8061bad9bd4b549b2daf36ffbaa57be2789a2 ]
    
    This fixes two issues that cause the sysrq sequence to be inadvertently
    aborted on SCIF serial consoles:
    
    - a NUL character remains in the RX queue after a break has been detected,
      which is then passed on to uart_handle_sysrq_char()
    - the break interrupt is handled twice on controllers with multiplexed ERI
      and BRI interrupts
    
    Signed-off-by: Ulrich Hecht <uli+renesas@fpond.eu>
    Link: https://lore.kernel.org/r/20210816162201.28801-1-uli+renesas@fpond.eu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d02a1c5fd7d9fff6ec774d89d162a7c072e5038c
Author: Rajendra Nayak <rnayak@codeaurora.org>
Date:   Thu Aug 12 16:57:20 2021 +0530

    opp: Don't print an error if required-opps is missing
    
    [ Upstream commit 020d86fc0df8b865f6dc168d88a7c2dccabd0a9e ]
    
    The 'required-opps' property is considered optional, hence remove
    the pr_err() in of_parse_required_opp() when we find the property is
    missing.
    While at it, also fix the return value of
    of_get_required_opp_performance_state() when of_parse_required_opp()
    fails, return a -ENODEV instead of the -EINVAL.
    
    Signed-off-by: Rajendra Nayak <rnayak@codeaurora.org>
    Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d772d993b0724efae40090a97885401fc45502aa
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Wed Aug 11 16:20:15 2021 -0700

    Bluetooth: Fix handling of LE Enhanced Connection Complete
    
    [ Upstream commit cafae4cd625502f65d1798659c1aa9b62d38cc56 ]
    
    LE Enhanced Connection Complete contains the Local RPA used in the
    connection which must be used when set otherwise there could problems
    when pairing since the address used by the remote stack could be the
    Local RPA:
    
    BLUETOOTH CORE SPECIFICATION Version 5.2 | Vol 4, Part E
    page 2396
    
      'Resolvable Private Address being used by the local device for this
      connection. This is only valid when the Own_Address_Type (from the
      HCI_LE_Create_Connection, HCI_LE_Set_Advertising_Parameters,
      HCI_LE_Set_Extended_Advertising_Parameters, or
      HCI_LE_Extended_Create_Connection commands) is set to 0x02 or
      0x03, and the Controller generated a resolvable private address for the
      local device using a non-zero local IRK. For other Own_Address_Type
      values, the Controller shall return all zeros.'
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb8593e8ed3605b694ccccf1f4ba8c7e02dcda5b
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Wed Jun 16 14:19:35 2021 -0700

    nvme-tcp: don't check blk_mq_tag_to_rq when receiving pdu data
    
    [ Upstream commit 3b01a9d0caa8276d9ce314e09610f7fb70f49a00 ]
    
    We already validate it when receiving the c2hdata pdu header
    and this is not changing so this is a redundant check.
    
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Daniel Wagner <dwagner@suse.de>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 072660f6c6883151f990c8105e8fa9b211b0603a
Author: Raag Jadav <raagjadav@gmail.com>
Date:   Thu Aug 5 00:54:45 2021 +0530

    arm64: dts: ls1046a: fix eeprom entries
    
    [ Upstream commit c1a6018d1839c9cb8f807dc863a50102a1a5c412 ]
    
    ls1046afrwy and ls1046ardb boards have CAT24C04[1] and CAT24C05[2]
    eeproms respectively. Both are 4Kb (512 bytes) in size,
    and compatible with AT24C04[3].
    Remove multi-address entries, as both the boards have a single chip each.
    
    [1] https://www.onsemi.com/pdf/datasheet/cat24c01-d.pdf
    [2] https://www.onsemi.com/pdf/datasheet/cat24c03-d.pdf
    [3] https://ww1.microchip.com/downloads/en/DeviceDoc/doc0180.pdf
    
    Signed-off-by: Raag Jadav <raagjadav@gmail.com>
    Acked-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08825a784e56d92bdbae959762e93da8f9656bfa
Author: Thierry Reding <treding@nvidia.com>
Date:   Tue Jun 22 15:44:22 2021 +0200

    arm64: tegra: Fix compatible string for Tegra132 CPUs
    
    [ Upstream commit f865d0292ff3c0ca09414436510eb4c815815509 ]
    
    The documented compatible string for the CPUs found on Tegra132 is
    "nvidia,tegra132-denver", rather than the previously used compatible
    string "nvidia,denver".
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6b69a76c347c18210c2355ea6e6a3220a24ca49
Author: Andreas Obergschwandtner <andreas.obergschwandtner@gmail.com>
Date:   Thu Jul 29 16:42:26 2021 +0200

    ARM: tegra: tamonten: Fix UART pad setting
    
    [ Upstream commit 2270ad2f4e123336af685ecedd1618701cb4ca1e ]
    
    This patch fixes the tristate and pullup configuration for UART 1 to 3
    on the Tamonten SOM.
    
    Signed-off-by: Andreas Obergschwandtner <andreas.obergschwandtner@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a66049c5ff74e6c2f0f278cfde410e3dcdfd99e2
Author: Johan Almbladh <johan.almbladh@anyfinetworks.com>
Date:   Mon Jun 28 14:32:46 2021 +0200

    mac80211: Fix monitor MTU limit so that A-MSDUs get through
    
    [ Upstream commit 79f5962baea74ce1cd4e5949598944bff854b166 ]
    
    The maximum MTU was set to 2304, which is the maximum MSDU size. While
    this is valid for normal WLAN interfaces, it is too low for monitor
    interfaces. A monitor interface may receive and inject MPDU frames, and
    the maximum MPDU frame size is larger than 2304. The MPDU may also
    contain an A-MSDU frame, in which case the size may be much larger than
    the MTU limit. Since the maximum size of an A-MSDU depends on the PHY
    mode of the transmitting STA, it is not possible to set an exact MTU
    limit for a monitor interface. Now the maximum MTU for a monitor
    interface is unrestricted.
    
    Signed-off-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Link: https://lore.kernel.org/r/20210628123246.2070558-1-johan.almbladh@anyfinetworks.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e2842fb7ed3272d319c4bfd123f5e8c00ecd1cf
Author: Tuo Li <islituo@gmail.com>
Date:   Tue Aug 10 21:07:03 2021 -0700

    drm/display: fix possible null-pointer dereference in dcn10_set_clock()
    
    [ Upstream commit 554594567b1fa3da74f88ec7b2dc83d000c58e98 ]
    
    The variable dc->clk_mgr is checked in:
      if (dc->clk_mgr && dc->clk_mgr->funcs->get_clock)
    
    This indicates dc->clk_mgr can be NULL.
    However, it is dereferenced in:
        if (!dc->clk_mgr->funcs->get_clock)
    
    To fix this null-pointer dereference, check dc->clk_mgr and the function
    pointer dc->clk_mgr->funcs->get_clock earlier, and return if one of them
    is NULL.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Tuo Li <islituo@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf82fe45bef907bfdd67dabb0260de74294c423b
Author: Tuo Li <islituo@gmail.com>
Date:   Wed Aug 11 04:34:58 2021 -0700

    gpu: drm: amd: amdgpu: amdgpu_i2c: fix possible uninitialized-variable access in amdgpu_i2c_router_select_ddc_port()
    
    [ Upstream commit a211260c34cfadc6068fece8c9e99e0fe1e2a2b6 ]
    
    The variable val is declared without initialization, and its address is
    passed to amdgpu_i2c_get_byte(). In this function, the value of val is
    accessed in:
      DRM_DEBUG("i2c 0x%02x 0x%02x read failed\n",
           addr, *val);
    
    Also, when amdgpu_i2c_get_byte() returns, val may remain uninitialized,
    but it is accessed in:
      val &= ~amdgpu_connector->router.ddc_mux_control_pin;
    
    To fix this possible uninitialized-variable access, initialize val to 0 in
    amdgpu_i2c_router_select_ddc_port().
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Tuo Li <islituo@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bbaa21da550d863cf407ae074d93be19a08e948f
Author: Eran Ben Elisha <eranbe@nvidia.com>
Date:   Tue Aug 10 21:15:05 2021 +0300

    net/mlx5: Fix variable type to match 64bit
    
    [ Upstream commit 979aa51967add26b37f9d77e01729d44a2da8e5f ]
    
    Fix the following smatch warning:
    wait_func_handle_exec_timeout() warn: should '1 << ent->idx' be a 64 bit type?
    
    Use 1ULL, to have a 64 bit type variable.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Eran Ben Elisha <eranbe@nvidia.com>
    Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d563020b8a3b835afa5c902610de700808546ec
Author: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
Date:   Tue Aug 10 12:14:06 2021 +0800

    Bluetooth: avoid circular locks in sco_sock_connect
    
    [ Upstream commit 734bc5ff783115aa3164f4e9dd5967ae78e0a8ab ]
    
    In a future patch, calls to bh_lock_sock in sco.c should be replaced
    by lock_sock now that none of the functions are run in IRQ context.
    
    However, doing so results in a circular locking dependency:
    
    ======================================================
    WARNING: possible circular locking dependency detected
    5.14.0-rc4-syzkaller #0 Not tainted
    ------------------------------------------------------
    syz-executor.2/14867 is trying to acquire lock:
    ffff88803e3c1120 (sk_lock-AF_BLUETOOTH-BTPROTO_SCO){+.+.}-{0:0}, at:
    lock_sock include/net/sock.h:1613 [inline]
    ffff88803e3c1120 (sk_lock-AF_BLUETOOTH-BTPROTO_SCO){+.+.}-{0:0}, at:
    sco_conn_del+0x12a/0x2a0 net/bluetooth/sco.c:191
    
    but task is already holding lock:
    ffffffff8d2dc7c8 (hci_cb_list_lock){+.+.}-{3:3}, at:
    hci_disconn_cfm include/net/bluetooth/hci_core.h:1497 [inline]
    ffffffff8d2dc7c8 (hci_cb_list_lock){+.+.}-{3:3}, at:
    hci_conn_hash_flush+0xda/0x260 net/bluetooth/hci_conn.c:1608
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #2 (hci_cb_list_lock){+.+.}-{3:3}:
           __mutex_lock_common kernel/locking/mutex.c:959 [inline]
           __mutex_lock+0x12a/0x10a0 kernel/locking/mutex.c:1104
           hci_connect_cfm include/net/bluetooth/hci_core.h:1482 [inline]
           hci_remote_features_evt net/bluetooth/hci_event.c:3263 [inline]
           hci_event_packet+0x2f4d/0x7c50 net/bluetooth/hci_event.c:6240
           hci_rx_work+0x4f8/0xd30 net/bluetooth/hci_core.c:5122
           process_one_work+0x98d/0x1630 kernel/workqueue.c:2276
           worker_thread+0x658/0x11f0 kernel/workqueue.c:2422
           kthread+0x3e5/0x4d0 kernel/kthread.c:319
           ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:295
    
    -> #1 (&hdev->lock){+.+.}-{3:3}:
           __mutex_lock_common kernel/locking/mutex.c:959 [inline]
           __mutex_lock+0x12a/0x10a0 kernel/locking/mutex.c:1104
           sco_connect net/bluetooth/sco.c:245 [inline]
           sco_sock_connect+0x227/0xa10 net/bluetooth/sco.c:601
           __sys_connect_file+0x155/0x1a0 net/socket.c:1879
           __sys_connect+0x161/0x190 net/socket.c:1896
           __do_sys_connect net/socket.c:1906 [inline]
           __se_sys_connect net/socket.c:1903 [inline]
           __x64_sys_connect+0x6f/0xb0 net/socket.c:1903
           do_syscall_x64 arch/x86/entry/common.c:50 [inline]
           do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
           entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    -> #0 (sk_lock-AF_BLUETOOTH-BTPROTO_SCO){+.+.}-{0:0}:
           check_prev_add kernel/locking/lockdep.c:3051 [inline]
           check_prevs_add kernel/locking/lockdep.c:3174 [inline]
           validate_chain kernel/locking/lockdep.c:3789 [inline]
           __lock_acquire+0x2a07/0x54a0 kernel/locking/lockdep.c:5015
           lock_acquire kernel/locking/lockdep.c:5625 [inline]
           lock_acquire+0x1ab/0x510 kernel/locking/lockdep.c:5590
           lock_sock_nested+0xca/0x120 net/core/sock.c:3170
           lock_sock include/net/sock.h:1613 [inline]
           sco_conn_del+0x12a/0x2a0 net/bluetooth/sco.c:191
           sco_disconn_cfm+0x71/0xb0 net/bluetooth/sco.c:1202
           hci_disconn_cfm include/net/bluetooth/hci_core.h:1500 [inline]
           hci_conn_hash_flush+0x127/0x260 net/bluetooth/hci_conn.c:1608
           hci_dev_do_close+0x528/0x1130 net/bluetooth/hci_core.c:1778
           hci_unregister_dev+0x1c0/0x5a0 net/bluetooth/hci_core.c:4015
           vhci_release+0x70/0xe0 drivers/bluetooth/hci_vhci.c:340
           __fput+0x288/0x920 fs/file_table.c:280
           task_work_run+0xdd/0x1a0 kernel/task_work.c:164
           exit_task_work include/linux/task_work.h:32 [inline]
           do_exit+0xbd4/0x2a60 kernel/exit.c:825
           do_group_exit+0x125/0x310 kernel/exit.c:922
           get_signal+0x47f/0x2160 kernel/signal.c:2808
           arch_do_signal_or_restart+0x2a9/0x1c40 arch/x86/kernel/signal.c:865
           handle_signal_work kernel/entry/common.c:148 [inline]
           exit_to_user_mode_loop kernel/entry/common.c:172 [inline]
           exit_to_user_mode_prepare+0x17d/0x290 kernel/entry/common.c:209
           __syscall_exit_to_user_mode_work kernel/entry/common.c:291 [inline]
           syscall_exit_to_user_mode+0x19/0x60 kernel/entry/common.c:302
           ret_from_fork+0x15/0x30 arch/x86/entry/entry_64.S:288
    
    other info that might help us debug this:
    
    Chain exists of:
      sk_lock-AF_BLUETOOTH-BTPROTO_SCO --> &hdev->lock --> hci_cb_list_lock
    
     Possible unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock(hci_cb_list_lock);
                                   lock(&hdev->lock);
                                   lock(hci_cb_list_lock);
      lock(sk_lock-AF_BLUETOOTH-BTPROTO_SCO);
    
     *** DEADLOCK ***
    
    The issue is that the lock hierarchy should go from &hdev->lock -->
    hci_cb_list_lock --> sk_lock-AF_BLUETOOTH-BTPROTO_SCO. For example,
    one such call trace is:
    
      hci_dev_do_close():
        hci_dev_lock();
        hci_conn_hash_flush():
          hci_disconn_cfm():
            mutex_lock(&hci_cb_list_lock);
            sco_disconn_cfm():
            sco_conn_del():
              lock_sock(sk);
    
    However, in sco_sock_connect, we call lock_sock before calling
    hci_dev_lock inside sco_connect, thus inverting the lock hierarchy.
    
    We fix this by pulling the call to hci_dev_lock out from sco_connect.
    
    Signed-off-by: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37d7ae2b0578f2373674a755402ee722e96edc08
Author: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
Date:   Tue Aug 10 12:14:05 2021 +0800

    Bluetooth: schedule SCO timeouts with delayed_work
    
    [ Upstream commit ba316be1b6a00db7126ed9a39f9bee434a508043 ]
    
    struct sock.sk_timer should be used as a sock cleanup timer. However,
    SCO uses it to implement sock timeouts.
    
    This causes issues because struct sock.sk_timer's callback is run in
    an IRQ context, and the timer callback function sco_sock_timeout takes
    a spin lock on the socket. However, other functions such as
    sco_conn_del and sco_conn_ready take the spin lock with interrupts
    enabled.
    
    This inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} lock usage could
    lead to deadlocks as reported by Syzbot [1]:
           CPU0
           ----
      lock(slock-AF_BLUETOOTH-BTPROTO_SCO);
      <Interrupt>
        lock(slock-AF_BLUETOOTH-BTPROTO_SCO);
    
    To fix this, we use delayed work to implement SCO sock timouts
    instead. This allows us to avoid taking the spin lock on the socket in
    an IRQ context, and corrects the misuse of struct sock.sk_timer.
    
    As a note, cancel_delayed_work is used instead of
    cancel_delayed_work_sync in sco_sock_set_timer and
    sco_sock_clear_timer to avoid a deadlock. In the future, the call to
    bh_lock_sock inside sco_sock_timeout should be changed to lock_sock to
    synchronize with other functions using lock_sock. However, since
    sco_sock_set_timer and sco_sock_clear_timer are sometimes called under
    the locked socket (in sco_connect and __sco_sock_close),
    cancel_delayed_work_sync might cause them to sleep until an
    sco_sock_timeout that has started finishes running. But
    sco_sock_timeout would also sleep until it can grab the lock_sock.
    
    Using cancel_delayed_work is fine because sco_sock_timeout does not
    change from run to run, hence there is no functional difference
    between:
    1. waiting for a timeout to finish running before scheduling another
    timeout
    2. scheduling another timeout while a timeout is running.
    
    Link: https://syzkaller.appspot.com/bug?id=9089d89de0502e120f234ca0fc8a703f7368b31e [1]
    Reported-by: syzbot+2f6d7c28bb4bf7e82060@syzkaller.appspotmail.com
    Tested-by: syzbot+2f6d7c28bb4bf7e82060@syzkaller.appspotmail.com
    Signed-off-by: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c408efcb8ae6d055bd8b458fedf3619f9b6c937e
Author: Jussi Maki <joamaki@gmail.com>
Date:   Sat Jul 31 05:57:37 2021 +0000

    selftests/bpf: Fix xdp_tx.c prog section name
    
    [ Upstream commit 95413846cca37f20000dd095cf6d91f8777129d7 ]
    
    The program type cannot be deduced from 'tx' which causes an invalid
    argument error when trying to load xdp_tx.o using the skeleton.
    Rename the section name to "xdp" so that libbpf can deduce the type.
    
    Signed-off-by: Jussi Maki <joamaki@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20210731055738.16820-7-joamaki@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 350e7501eee8b71e00d2efdd981c6bd7fe18e157
Author: David Heidelberg <david@ixit.cz>
Date:   Thu Jul 15 08:09:25 2021 +0200

    drm/msm: mdp4: drop vblank get/put from prepare/complete_commit
    
    [ Upstream commit 56bd931ae506730c9ab1e4cc4bfefa43fc2d18fa ]
    
    msm_atomic is doing vblank get/put's already,
    currently there no need to duplicate the effort in MDP4
    
    Fix warning:
    ...
    WARNING: CPU: 3 PID: 79 at drivers/gpu/drm/drm_vblank.c:1194 drm_vblank_put+0x1cc/0x1d4
    ...
    and multiple vblank time-outs:
    ...
    msm 5100000.mdp: vblank time out, crtc=1
    ...
    
    Tested on Nexus 7 2013 (deb), LTS 5.10.50.
    
    Introduced by: 119ecb7fd3b5 ("drm/msm/mdp4: request vblank during modeset")
    
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Link: https://lore.kernel.org/r/20210715060925.7880-1-david@ixit.cz
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5450804778ae4f9716e0b31e7cdf41502fbe4c5
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Fri Aug 6 12:13:40 2021 -0700

    net: ethernet: stmmac: Do not use unreachable() in ipq806x_gmac_probe()
    
    [ Upstream commit 4367355dd90942a71641c98c40c74589c9bddf90 ]
    
    When compiling with clang in certain configurations, an objtool warning
    appears:
    
    drivers/net/ethernet/stmicro/stmmac/dwmac-ipq806x.o: warning: objtool:
    ipq806x_gmac_probe() falls through to next function phy_modes()
    
    This happens because the unreachable annotation in the third switch
    statement is not eliminated. The compiler should know that the first
    default case would prevent the second and third from being reached as
    the comment notes but sanitizer options can make it harder for the
    compiler to reason this out.
    
    Help the compiler out by eliminating the unreachable() annotation and
    unifying the default case error handling so that there is no objtool
    warning, the meaning of the code stays the same, and there is less
    duplication.
    
    Reported-by: Sami Tolvanen <samitolvanen@google.com>
    Tested-by: Sami Tolvanen <samitolvanen@google.com>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed3400f22b586497f109331c7c5b892451bb27df
Author: Vinod Koul <vkoul@kernel.org>
Date:   Mon Mar 8 11:38:25 2021 +0530

    arm64: dts: qcom: sdm660: use reg value for memory node
    
    [ Upstream commit c81210e38966cfa1c784364e4035081c3227cf5b ]
    
    memory node like other node should be node@reg, which is missing in this
    case, so fix it up
    
    arch/arm64/boot/dts/qcom/ipq8074-hk01.dt.yaml: /: memory: False schema does not allow {'device_type': ['memory'], 'reg': [[0, 1073741824, 0, 536870912]]}
    
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Link: https://lore.kernel.org/r/20210308060826.3074234-18-vkoul@kernel.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52f8a30730ee08511af012446cfafb6c9b382cbe
Author: Sebastian Reichel <sebastian.reichel@collabora.com>
Date:   Mon Aug 2 19:23:08 2021 +0200

    ARM: dts: imx53-ppd: Fix ACHC entry
    
    [ Upstream commit cd7cd5b716d594e27a933c12f026d4f2426d7bf4 ]
    
    PPD has only one ACHC device, which effectively is a Kinetis
    microcontroller. It has one SPI interface used for normal
    communication. Additionally it's possible to flash the device
    firmware using NXP's EzPort protocol by correctly driving a
    second chip select pin and the device reset pin.
    
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Link: https://lore.kernel.org/r/20210802172309.164365-3-sebastian.reichel@collabora.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e15afa6747fa62502f4a9a01cfa6742c788da989
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Wed Jul 28 16:44:32 2021 +0200

    media: tegra-cec: Handle errors of clk_prepare_enable()
    
    [ Upstream commit 38367073c796a37a61549b1f66a71b3adb03802d ]
    
    tegra_cec_probe() and tegra_cec_resume() ignored possible errors of
    clk_prepare_enable(). The patch fixes this.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53d02b04098ba1c1dca0b05ba92986b9e3b9a3dd
Author: Krzysztof Hałasa <khalasa@piap.pl>
Date:   Mon Jul 26 12:46:28 2021 +0200

    media: TDA1997x: fix tda1997x_query_dv_timings() return value
    
    [ Upstream commit 7dee1030871a48d4f3c5a74227a4b4188463479a ]
    
    Correctly propagate the tda1997x_detect_std error value.
    
    Signed-off-by: Krzysztof Hałasa <khalasa@piap.pl>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71de2779e52a11c0c96f7fd6d135c6709835ec75
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Fri Jul 23 10:22:59 2021 +0200

    media: v4l2-dv-timings.c: fix wrong condition in two for-loops
    
    [ Upstream commit 4108b3e6db31acc4c68133290bbcc87d4db905c9 ]
    
    These for-loops should test against v4l2_dv_timings_presets[i].bt.width,
    not if i < v4l2_dv_timings_presets[i].bt.width. Luckily nothing ever broke,
    since the smallest width is still a lot higher than the total number of
    presets, but it is wrong.
    
    The last item in the presets array is all 0, so the for-loop must stop
    when it reaches that sentinel.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reported-by: Krzysztof Hałasa <khalasa@piap.pl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d785cef384f1e6b54535466cb08200f847b48628
Author: Umang Jain <umang.jain@ideasonboard.com>
Date:   Fri Jul 23 13:22:33 2021 +0200

    media: imx258: Limit the max analogue gain to 480
    
    [ Upstream commit f809665ee75fff3f4ea8907f406a66d380aeb184 ]
    
    The range for analog gain mentioned in the datasheet is [0, 480].
    The real gain formula mentioned in the datasheet is:
    
            Gain = 512 / (512 – X)
    
    Hence, values larger than 511 clearly makes no sense. The gain
    register field is also documented to be of 9-bits in the datasheet.
    
    Certainly, it is enough to infer that, the kernel driver currently
    advertises an arbitrary analog gain max. Fix it by rectifying the
    value as per the data sheet i.e. 480.
    
    Signed-off-by: Umang Jain <umang.jain@ideasonboard.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reviewed-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33bd83fe3ffd3569a1a7954a61dd512353e0269c
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Fri Jul 23 13:22:32 2021 +0200

    media: imx258: Rectify mismatch of VTS value
    
    [ Upstream commit 51f93add3669f1b1f540de1cf397815afbd4c756 ]
    
    The frame_length_lines (0x0340) registers are hard-coded as follows:
    
    - 4208x3118
      frame_length_lines = 0x0c50
    
    - 2104x1560
      frame_length_lines = 0x0638
    
    - 1048x780
      frame_length_lines = 0x034c
    
    The driver exposes the V4L2_CID_VBLANK control in read-only mode and
    sets its value to vts_def - height, where vts_def is a mode-dependent
    value coming from the supported_modes array. It is set using one of
    the following macros defined in the driver:
    
      #define IMX258_VTS_30FPS                0x0c98
      #define IMX258_VTS_30FPS_2K             0x0638
      #define IMX258_VTS_30FPS_VGA            0x034c
    
    There's a clear mismatch in the value for the full resolution mode i.e.
    IMX258_VTS_30FPS. Fix it by rectifying the macro with the value set for
    the frame_length_lines register as stated above.
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Umang Jain <umang.jain@ideasonboard.com>
    Reviewed-by: Bingbu Cao <bingbu.cao@intel.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d179746b3f382545db12f62cbfa827db4d9c1c7
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Aug 2 16:24:56 2021 +0200

    ASoC: Intel: bytcr_rt5640: Move "Platform Clock" routes to the maps for the matching in-/output
    
    [ Upstream commit dccd1dfd0770bfd494b68d1135b4547b2c602c42 ]
    
    Move the "Platform Clock" routes for the "Internal Mic" and "Speaker"
    routes to the intmic_*_map[] / *_spk_map[] arrays.
    
    This ensures that these "Platform Clock" routes do not get added when the
    BYT_RT5640_NO_INTERNAL_MIC_MAP / BYT_RT5640_NO_SPEAKERS quirks are used.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210802142501.991985-2-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37414bd6ec51eed0461300084d1b32e0a9f05c93
Author: Vidya Sagar <vidyas@nvidia.com>
Date:   Wed Jul 28 00:20:55 2021 +0530

    arm64: tegra: Fix Tegra194 PCIe EP compatible string
    
    [ Upstream commit bf2942a8b7c38e8cc2d5157b4f0323d7f4e5ec71 ]
    
    The initialization sequence performed by the generic platform driver
    pcie-designware-plat.c for a DWC based implementation doesn't work for
    Tegra194. Tegra194 has a different initialization sequence requirement
    which can only be satisfied by the Tegra194 specific platform driver
    pcie-tegra194.c. So, remove the generic compatible string "snps,dw-pcie-ep"
    from Tegra194's endpoint controller nodes.
    
    Signed-off-by: Vidya Sagar <vidyas@nvidia.com>
    Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a24034ad87f3a23c039939d233c231189141b23
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Fri Jul 30 10:19:11 2021 +0800

    bonding: 3ad: fix the concurrency between __bond_release_one() and bond_3ad_state_machine_handler()
    
    [ Upstream commit 220ade77452c15ecb1ab94c3f8aaeb6d033c3582 ]
    
    Some time ago, I reported a calltrace issue
    "did not find a suitable aggregator", please see[1].
    After a period of analysis and reproduction, I find
    that this problem is caused by concurrency.
    
    Before the problem occurs, the bond structure is like follows:
    
    bond0 - slaver0(eth0) - agg0.lag_ports -> port0 - port1
                          \
                            port0
          \
            slaver1(eth1) - agg1.lag_ports -> NULL
                          \
                            port1
    
    If we run 'ifenslave bond0 -d eth1', the process is like below:
    
    excuting __bond_release_one()
    |
    bond_upper_dev_unlink()[step1]
    |                       |                       |
    |                       |                       bond_3ad_lacpdu_recv()
    |                       |                       ->bond_3ad_rx_indication()
    |                       |                       spin_lock_bh()
    |                       |                       ->ad_rx_machine()
    |                       |                       ->__record_pdu()[step2]
    |                       |                       spin_unlock_bh()
    |                       |                       |
    |                       bond_3ad_state_machine_handler()
    |                       spin_lock_bh()
    |                       ->ad_port_selection_logic()
    |                       ->try to find free aggregator[step3]
    |                       ->try to find suitable aggregator[step4]
    |                       ->did not find a suitable aggregator[step5]
    |                       spin_unlock_bh()
    |                       |
    |                       |
    bond_3ad_unbind_slave() |
    spin_lock_bh()
    spin_unlock_bh()
    
    step1: already removed slaver1(eth1) from list, but port1 remains
    step2: receive a lacpdu and update port0
    step3: port0 will be removed from agg0.lag_ports. The struct is
           "agg0.lag_ports -> port1" now, and agg0 is not free. At the
               same time, slaver1/agg1 has been removed from the list by step1.
               So we can't find a free aggregator now.
    step4: can't find suitable aggregator because of step2
    step5: cause a calltrace since port->aggregator is NULL
    
    To solve this concurrency problem, put bond_upper_dev_unlink()
    after bond_3ad_unbind_slave(). In this way, we can invalid the port
    first and skip this port in bond_3ad_state_machine_handler(). This
    eliminates the situation that the slaver has been removed from the
    list but the port is still valid.
    
    [1]https://lore.kernel.org/netdev/10374.1611947473@famine/
    
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Acked-by: Jay Vosburgh <jay.vosburgh@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6cee3583930f73e45e88ca565b6ae7d7301f58e
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Thu Jul 22 11:03:52 2021 +0800

    workqueue: Fix possible memory leaks in wq_numa_init()
    
    [ Upstream commit f728c4a9e8405caae69d4bc1232c54ff57b5d20f ]
    
    In error handling branch "if (WARN_ON(node == NUMA_NO_NODE))", the
    previously allocated memories are not released. Doing this before
    allocating memory eliminates memory leaks.
    
    tj: Note that the condition only occurs when the arch code is pretty broken
    and the WARN_ON might as well be BUG_ON().
    
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b4f0170e03d42e5b7ccdb3c2372a09b5036539b
Author: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
Date:   Wed Jul 28 15:51:04 2021 +0800

    Bluetooth: skip invalid hci_sync_conn_complete_evt
    
    [ Upstream commit 92fe24a7db751b80925214ede43f8d2be792ea7b ]
    
    Syzbot reported a corrupted list in kobject_add_internal [1]. This
    happens when multiple HCI_EV_SYNC_CONN_COMPLETE event packets with
    status 0 are sent for the same HCI connection. This causes us to
    register the device more than once which corrupts the kset list.
    
    As this is forbidden behavior, we add a check for whether we're
    trying to process the same HCI_EV_SYNC_CONN_COMPLETE event multiple
    times for one connection. If that's the case, the event is invalid, so
    we report an error that the device is misbehaving, and ignore the
    packet.
    
    Link: https://syzkaller.appspot.com/bug?extid=66264bf2fd0476be7e6c [1]
    Reported-by: syzbot+66264bf2fd0476be7e6c@syzkaller.appspotmail.com
    Tested-by: syzbot+66264bf2fd0476be7e6c@syzkaller.appspotmail.com
    Signed-off-by: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b1718666fb091b86b3879ad0feb23a4dd0eab08
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Jul 27 15:51:30 2021 +0300

    ata: sata_dwc_460ex: No need to call phy_exit() befre phy_init()
    
    [ Upstream commit 3ad4a31620355358316fa08fcfab37b9d6c33347 ]
    
    Last change to device managed APIs cleaned up error path to simple phy_exit()
    call, which in some cases has been executed with NULL parameter. This per se
    is not a problem, but rather logical misconception: no need to free resource
    when it's for sure has not been allocated yet. Fix the driver accordingly.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210727125130.19977-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76cbc142a5465a8849ebaa66a97c65f6b66253e9
Author: Juhee Kang <claudiajkang@gmail.com>
Date:   Tue Jul 27 04:10:55 2021 +0000

    samples: bpf: Fix tracex7 error raised on the missing argument
    
    [ Upstream commit 7d07006f05922b95518be403f08ef8437b67aa32 ]
    
    The current behavior of 'tracex7' doesn't consist with other bpf samples
    tracex{1..6}. Other samples do not require any argument to run with, but
    tracex7 should be run with btrfs device argument. (it should be executed
    with test_override_return.sh)
    
    Currently, tracex7 doesn't have any description about how to run this
    program and raises an unexpected error. And this result might be
    confusing since users might not have a hunch about how to run this
    program.
    
        // Current behavior
        # ./tracex7
        sh: 1: Syntax error: word unexpected (expecting ")")
        // Fixed behavior
        # ./tracex7
        ERROR: Run with the btrfs device argument!
    
    In order to fix this error, this commit adds logic to report a message
    and exit when running this program with a missing argument.
    
    Additionally in test_override_return.sh, there is a problem with
    multiple directory(tmpmnt) creation. So in this commit adds a line with
    removing the directory with every execution.
    
    Signed-off-by: Juhee Kang <claudiajkang@gmail.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20210727041056.23455-1-claudiajkang@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 917eb0bbb8d3ef9012aaefc080130fd6f0dd0adc
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Jul 21 10:45:11 2021 +0200

    staging: ks7010: Fix the initialization of the 'sleep_status' structure
    
    [ Upstream commit 56315e55119c0ea57e142b6efb7c31208628ad86 ]
    
    'sleep_status' has 3 atomic_t members. Initialize the 3 of them instead of
    initializing only 2 of them and setting 0 twice to the same variable.
    
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/d2e52a33a9beab41879551d0ae2fdfc99970adab.1626856991.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44fd61a8bd0dc543a1bdde557f0cb4487ac44ffd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Jul 26 15:07:17 2021 +0200

    serial: 8250_pci: make setup_port() parameters explicitly unsigned
    
    [ Upstream commit 3a96e97ab4e835078e6f27b7e1c0947814df3841 ]
    
    The bar and offset parameters to setup_port() are used in pointer math,
    and while it would be very difficult to get them to wrap as a negative
    number, just be "safe" and make them unsigned so that static checkers do
    not trip over them unintentionally.
    
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Reported-by: Jordy Zomer <jordy@pwning.systems>
    Link: https://lore.kernel.org/r/20210726130717.2052096-1-gregkh@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4beadefea85791e3a0a58f247e9c75810ccfa68d
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Fri Jul 23 09:43:11 2021 +0200

    hvsi: don't panic on tty_register_driver failure
    
    [ Upstream commit 7ccbdcc4d08a6d7041e4849219bbb12ffa45db4c ]
    
    The alloc_tty_driver failure is handled gracefully in hvsi_init. But
    tty_register_driver is not. panic is called if that one fails.
    
    So handle the failure of tty_register_driver gracefully too. This will
    keep at least the console functional as it was enabled earlier by
    console_initcall in hvsi_console_init. Instead of shooting down the
    whole system.
    
    This means, we disable interrupts and restore hvsi_wait back to
    poll_for_state().
    
    Cc: linuxppc-dev@lists.ozlabs.org
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20210723074317.32690-3-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af0bd97b9d717a7f5661081a6b15fb31e7c530f3
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Fri Jul 23 09:43:10 2021 +0200

    xtensa: ISS: don't panic in rs_init
    
    [ Upstream commit 23411c720052ad860b3e579ee4873511e367130a ]
    
    While alloc_tty_driver failure in rs_init would mean we have much bigger
    problem, there is no reason to panic when tty_register_driver fails
    there. It can fail for various reasons.
    
    So handle the failure gracefully. Actually handle them both while at it.
    This will make at least the console functional as it was enabled earlier
    by console_initcall in iss_console_init. Instead of shooting down the
    whole system.
    
    We move tty_port_init() after alloc_tty_driver(), so that we don't need
    to destroy the port in case the latter function fails.
    
    Cc: Chris Zankel <chris@zankel.net>
    Cc: Max Filippov <jcmvbkbc@gmail.com>
    Cc: linux-xtensa@linux-xtensa.org
    Acked-by: Max Filippov <jcmvbkbc@gmail.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20210723074317.32690-2-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5418023f81cd84721a84e9fa8a83ae9abdd0b315
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Sat Jun 26 06:11:51 2021 +0200

    serial: 8250: Define RX trigger levels for OxSemi 950 devices
    
    [ Upstream commit d7aff291d069c4418285f3c8ee27b0ff67ce5998 ]
    
    Oxford Semiconductor 950 serial port devices have a 128-byte FIFO and in
    the enhanced (650) mode, which we select in `autoconfig_has_efr' with
    the ECB bit set in the EFR register, they support the receive interrupt
    trigger level selectable with FCR bits 7:6 from the set of 16, 32, 112,
    120.  This applies to the original OX16C950 discrete UART[1] as well as
    950 cores embedded into more complex devices.
    
    For these devices we set the default to 112, which sets an excessively
    high level of 112 or 7/8 of the FIFO capacity, unlike with other port
    types where we choose at most 1/2 of their respective FIFO capacities.
    Additionally we don't make the trigger level configurable.  Consequently
    frequent input overruns happen with high bit rates where hardware flow
    control cannot be used (e.g. terminal applications) even with otherwise
    highly-performant systems.
    
    Lower the default receive interrupt trigger level to 32 then, and make
    it configurable.  Document the trigger levels along with other port
    types, including the set of 16, 32, 64, 112 for the transmit interrupt
    as well[2].
    
    References:
    
    [1] "OX16C950 rev B High Performance UART with 128 byte FIFOs", Oxford
        Semiconductor, Inc., DS-0031, Sep 05, Table 10: "Receiver Trigger
        Levels", p. 22
    
    [2] same, Table 9: "Transmit Interrupt Trigger Levels", p. 22
    
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Link: https://lore.kernel.org/r/alpine.DEB.2.21.2106260608480.37803@angie.orcam.me.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b050848bba7d7618d3339c3ad256284940b38ab6
Author: Niklas Schnelle <schnelle@linux.ibm.com>
Date:   Thu Jul 8 14:55:42 2021 +0200

    s390: make PCI mio support a machine flag
    
    [ Upstream commit 3322ba0d7bea1e24ae464418626f6a15b69533ab ]
    
    Kernel support for the newer PCI mio instructions can be toggled off
    with the pci=nomio command line option which needs to integrate with
    common code PCI option parsing. However this option then toggles static
    branches which can't be toggled yet in an early_param() call.
    
    Thus commit 9964f396f1d0 ("s390: fix setting of mio addressing control")
    moved toggling the static branches to the PCI init routine.
    
    With this setup however we can't check for mio support outside the PCI
    code during early boot, i.e. before switching the static branches, which
    we need to be able to export this as an ELF HWCAP.
    
    Improve on this by turning mio availability into a machine flag that
    gets initially set based on CONFIG_PCI and the facility bit and gets
    toggled off if pci=nomio is found during PCI option parsing allowing
    simple access to this machine flag after early init.
    
    Reviewed-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0dd8da8ad04b5775576fe46b4d0f87281a735b7f
Author: Heiko Carstens <hca@linux.ibm.com>
Date:   Mon Jul 12 19:26:01 2021 +0200

    s390/jump_label: print real address in a case of a jump label bug
    
    [ Upstream commit 5492886c14744d239e87f1b0b774b5a341e755cc ]
    
    In case of a jump label print the real address of the piece of code
    where a mismatch was detected. This is right before the system panics,
    so there is nothing revealed.
    
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91b4d44c7c4db500e990de8904a3a521a3942fd8
Author: Gustavo A. R. Silva <gustavoars@kernel.org>
Date:   Mon Jul 26 14:25:11 2021 -0500

    flow_dissector: Fix out-of-bounds warnings
    
    [ Upstream commit 323e0cb473e2a8706ff162b6b4f4fa16023c9ba7 ]
    
    Fix the following out-of-bounds warnings:
    
        net/core/flow_dissector.c: In function '__skb_flow_dissect':
    >> net/core/flow_dissector.c:1104:4: warning: 'memcpy' offset [24, 39] from the object at '<unknown>' is out of the bounds of referenced subobject 'saddr' with type 'struct in6_addr' at offset 8 [-Warray-bounds]
         1104 |    memcpy(&key_addrs->v6addrs, &iph->saddr,
              |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         1105 |           sizeof(key_addrs->v6addrs));
              |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
        In file included from include/linux/ipv6.h:5,
                         from net/core/flow_dissector.c:6:
        include/uapi/linux/ipv6.h:133:18: note: subobject 'saddr' declared here
          133 |  struct in6_addr saddr;
              |                  ^~~~~
    >> net/core/flow_dissector.c:1059:4: warning: 'memcpy' offset [16, 19] from the object at '<unknown>' is out of the bounds of referenced subobject 'saddr' with type 'unsigned int' at offset 12 [-Warray-bounds]
         1059 |    memcpy(&key_addrs->v4addrs, &iph->saddr,
              |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         1060 |           sizeof(key_addrs->v4addrs));
              |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
        In file included from include/linux/ip.h:17,
                         from net/core/flow_dissector.c:5:
        include/uapi/linux/ip.h:103:9: note: subobject 'saddr' declared here
          103 |  __be32 saddr;
              |         ^~~~~
    
    The problem is that the original code is trying to copy data into a
    couple of struct members adjacent to each other in a single call to
    memcpy().  So, the compiler legitimately complains about it. As these
    are just a couple of members, fix this by copying each one of them in
    separate calls to memcpy().
    
    This helps with the ongoing efforts to globally enable -Warray-bounds
    and get us closer to being able to tighten the FORTIFY_SOURCE routines
    on memcpy().
    
    Link: https://github.com/KSPP/linux/issues/109
    Reported-by: kernel test robot <lkp@intel.com>
    Link: https://lore.kernel.org/lkml/d5ae2e65-1f18-2577-246f-bada7eee6ccd@intel.com/
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8076709052e1dcb14d6e63d024f21b39dc3ad89c
Author: Gustavo A. R. Silva <gustavoars@kernel.org>
Date:   Mon Jul 26 14:52:51 2021 -0500

    ipv4: ip_output.c: Fix out-of-bounds warning in ip_copy_addrs()
    
    [ Upstream commit 6321c7acb82872ef6576c520b0e178eaad3a25c0 ]
    
    Fix the following out-of-bounds warning:
    
        In function 'ip_copy_addrs',
            inlined from '__ip_queue_xmit' at net/ipv4/ip_output.c:517:2:
    net/ipv4/ip_output.c:449:2: warning: 'memcpy' offset [40, 43] from the object at 'fl' is out of the bounds of referenced subobject 'saddr' with type 'unsigned int' at offset 36 [-Warray-bounds]
          449 |  memcpy(&iph->saddr, &fl4->saddr,
              |  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          450 |         sizeof(fl4->saddr) + sizeof(fl4->daddr));
              |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    The problem is that the original code is trying to copy data into a
    couple of struct members adjacent to each other in a single call to
    memcpy(). This causes a legitimate compiler warning because memcpy()
    overruns the length of &iph->saddr and &fl4->saddr. As these are just
    a couple of struct members, fix this by using direct assignments,
    instead of memcpy().
    
    This helps with the ongoing efforts to globally enable -Warray-bounds
    and get us closer to being able to tighten the FORTIFY_SOURCE routines
    on memcpy().
    
    Link: https://github.com/KSPP/linux/issues/109
    Reported-by: kernel test robot <lkp@intel.com>
    Link: https://lore.kernel.org/lkml/d5ae2e65-1f18-2577-246f-bada7eee6ccd@intel.com/
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit faf0749c9062469631c26bbdc9d1d568d1241224
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Mon Jul 26 10:03:55 2021 +0000

    video: fbdev: riva: Error out if 'pixclock' equals zero
    
    [ Upstream commit f92763cb0feba247e0939ed137b495601fd072a5 ]
    
    The userspace program could pass any values to the driver through
    ioctl() interface. If the driver doesn't check the value of 'pixclock',
    it may cause divide error.
    
    Fix this by checking whether 'pixclock' is zero first.
    
    The following log reveals it:
    
    [   33.396850] divide error: 0000 [#1] PREEMPT SMP KASAN PTI
    [   33.396864] CPU: 5 PID: 11754 Comm: i740 Not tainted 5.14.0-rc2-00513-gac532c9bbcfb-dirty #222
    [   33.396883] RIP: 0010:riva_load_video_mode+0x417/0xf70
    [   33.396969] Call Trace:
    [   33.396973]  ? debug_smp_processor_id+0x1c/0x20
    [   33.396984]  ? tick_nohz_tick_stopped+0x1a/0x90
    [   33.396996]  ? rivafb_copyarea+0x3c0/0x3c0
    [   33.397003]  ? wake_up_klogd.part.0+0x99/0xd0
    [   33.397014]  ? vprintk_emit+0x110/0x4b0
    [   33.397024]  ? vprintk_default+0x26/0x30
    [   33.397033]  ? vprintk+0x9c/0x1f0
    [   33.397041]  ? printk+0xba/0xed
    [   33.397054]  ? record_print_text.cold+0x16/0x16
    [   33.397063]  ? __kasan_check_read+0x11/0x20
    [   33.397074]  ? profile_tick+0xc0/0x100
    [   33.397084]  ? __sanitizer_cov_trace_const_cmp4+0x24/0x80
    [   33.397094]  ? riva_set_rop_solid+0x2a0/0x2a0
    [   33.397102]  rivafb_set_par+0xbe/0x610
    [   33.397111]  ? riva_set_rop_solid+0x2a0/0x2a0
    [   33.397119]  fb_set_var+0x5bf/0xeb0
    [   33.397127]  ? fb_blank+0x1a0/0x1a0
    [   33.397134]  ? lock_acquire+0x1ef/0x530
    [   33.397143]  ? lock_release+0x810/0x810
    [   33.397151]  ? lock_is_held_type+0x100/0x140
    [   33.397159]  ? ___might_sleep+0x1ee/0x2d0
    [   33.397170]  ? __mutex_lock+0x620/0x1190
    [   33.397180]  ? trace_hardirqs_on+0x6a/0x1c0
    [   33.397190]  do_fb_ioctl+0x31e/0x700
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/1627293835-17441-4-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae0d210aa717b480ca9f6337ec079f8c6913a04c
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Mon Jul 26 10:03:54 2021 +0000

    video: fbdev: kyro: Error out if 'pixclock' equals zero
    
    [ Upstream commit 1520b4b7ba964f8eec2e7dd14c571d50de3e5191 ]
    
    The userspace program could pass any values to the driver through
    ioctl() interface. if the driver doesn't check the value of 'pixclock',
    it may cause divide error because the value of 'lineclock' and
    'frameclock' will be zero.
    
    Fix this by checking whether 'pixclock' is zero in kyrofb_check_var().
    
    The following log reveals it:
    
    [  103.073930] divide error: 0000 [#1] PREEMPT SMP KASAN PTI
    [  103.073942] CPU: 4 PID: 12483 Comm: syz-executor Not tainted 5.14.0-rc2-00478-g2734d6c1b1a0-dirty #118
    [  103.073959] RIP: 0010:kyrofb_set_par+0x316/0xc80
    [  103.074045] Call Trace:
    [  103.074048]  ? ___might_sleep+0x1ee/0x2d0
    [  103.074060]  ? kyrofb_ioctl+0x330/0x330
    [  103.074069]  fb_set_var+0x5bf/0xeb0
    [  103.074078]  ? fb_blank+0x1a0/0x1a0
    [  103.074085]  ? lock_acquire+0x3bd/0x530
    [  103.074094]  ? lock_release+0x810/0x810
    [  103.074103]  ? ___might_sleep+0x1ee/0x2d0
    [  103.074114]  ? __mutex_lock+0x620/0x1190
    [  103.074126]  ? trace_hardirqs_on+0x6a/0x1c0
    [  103.074137]  do_fb_ioctl+0x31e/0x700
    [  103.074144]  ? fb_getput_cmap+0x280/0x280
    [  103.074152]  ? rcu_read_lock_sched_held+0x11/0x80
    [  103.074162]  ? rcu_read_lock_sched_held+0x11/0x80
    [  103.074171]  ? __sanitizer_cov_trace_switch+0x67/0xf0
    [  103.074181]  ? __sanitizer_cov_trace_const_cmp2+0x20/0x80
    [  103.074191]  ? do_vfs_ioctl+0x14b/0x16c0
    [  103.074199]  ? vfs_fileattr_set+0xb60/0xb60
    [  103.074207]  ? rcu_read_lock_sched_held+0x11/0x80
    [  103.074216]  ? lock_release+0x483/0x810
    [  103.074224]  ? __fget_files+0x217/0x3d0
    [  103.074234]  ? __fget_files+0x239/0x3d0
    [  103.074243]  ? do_fb_ioctl+0x700/0x700
    [  103.074250]  fb_ioctl+0xe6/0x130
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/1627293835-17441-3-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98551f0a7b57dd22d3349ec0424d566b2cd467c8
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Mon Jul 26 10:03:53 2021 +0000

    video: fbdev: asiliantfb: Error out if 'pixclock' equals zero
    
    [ Upstream commit b36b242d4b8ea178f7fd038965e3cac7f30c3f09 ]
    
    The userspace program could pass any values to the driver through
    ioctl() interface. If the driver doesn't check the value of 'pixclock',
    it may cause divide error.
    
    Fix this by checking whether 'pixclock' is zero first.
    
    The following log reveals it:
    
    [   43.861711] divide error: 0000 [#1] PREEMPT SMP KASAN PTI
    [   43.861737] CPU: 2 PID: 11764 Comm: i740 Not tainted 5.14.0-rc2-00513-gac532c9bbcfb-dirty #224
    [   43.861756] RIP: 0010:asiliantfb_check_var+0x4e/0x730
    [   43.861843] Call Trace:
    [   43.861848]  ? asiliantfb_remove+0x190/0x190
    [   43.861858]  fb_set_var+0x2e4/0xeb0
    [   43.861866]  ? fb_blank+0x1a0/0x1a0
    [   43.861873]  ? lock_acquire+0x1ef/0x530
    [   43.861884]  ? lock_release+0x810/0x810
    [   43.861892]  ? lock_is_held_type+0x100/0x140
    [   43.861903]  ? ___might_sleep+0x1ee/0x2d0
    [   43.861914]  ? __mutex_lock+0x620/0x1190
    [   43.861921]  ? do_fb_ioctl+0x313/0x700
    [   43.861929]  ? mutex_lock_io_nested+0xfa0/0xfa0
    [   43.861936]  ? __this_cpu_preempt_check+0x1d/0x30
    [   43.861944]  ? _raw_spin_unlock_irqrestore+0x46/0x60
    [   43.861952]  ? lockdep_hardirqs_on+0x59/0x100
    [   43.861959]  ? _raw_spin_unlock_irqrestore+0x46/0x60
    [   43.861967]  ? trace_hardirqs_on+0x6a/0x1c0
    [   43.861978]  do_fb_ioctl+0x31e/0x700
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/1627293835-17441-2-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9dff06c505728bd19f57d3cc89cf901a6b0aa162
Author: Johan Almbladh <johan.almbladh@anyfinetworks.com>
Date:   Wed Jul 21 12:38:22 2021 +0200

    bpf/tests: Do not PASS tests without actually testing the result
    
    [ Upstream commit 2b7e9f25e590726cca76700ebdb10e92a7a72ca1 ]
    
    Each test case can have a set of sub-tests, where each sub-test can
    run the cBPF/eBPF test snippet with its own data_size and expected
    result. Before, the end of the sub-test array was indicated by both
    data_size and result being zero. However, most or all of the internal
    eBPF tests has a data_size of zero already. When such a test also had
    an expected value of zero, the test was never run but reported as
    PASS anyway.
    
    Now the test runner always runs the first sub-test, regardless of the
    data_size and result values. The sub-test array zero-termination only
    applies for any additional sub-tests.
    
    There are other ways fix it of course, but this solution at least
    removes the surprise of eBPF tests with a zero result always succeeding.
    
    Signed-off-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20210721103822.3755111-1-johan.almbladh@anyfinetworks.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58831317c9b1823a4c7bb4574aaa54c6d155a42c
Author: Johan Almbladh <johan.almbladh@anyfinetworks.com>
Date:   Wed Jul 21 12:40:58 2021 +0200

    bpf/tests: Fix copy-and-paste error in double word test
    
    [ Upstream commit ae7f47041d928b1a2f28717d095b4153c63cbf6a ]
    
    This test now operates on DW as stated instead of W, which was
    already covered by another test.
    
    Signed-off-by: Johan Almbladh <johan.almbladh@anyfinetworks.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20210721104058.3755254-1-johan.almbladh@anyfinetworks.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a23430e79ef70d98f4f7d29d44084d302ef2552a
Author: Anson Jacob <Anson.Jacob@amd.com>
Date:   Tue Jul 20 11:00:44 2021 -0400

    drm/amd/amdgpu: Update debugfs link_settings output link_rate field in hex
    
    [ Upstream commit 1a394b3c3de2577f200cb623c52a5c2b82805cec ]
    
    link_rate is updated via debugfs using hex values, set it to output
    in hex as well.
    
    eg: Resolution: 1920x1080@144Hz
    cat /sys/kernel/debug/dri/0/DP-1/link_settings
    Current:  4  0x14  0  Verified:  4  0x1e  0  Reported:  4  0x1e  16  Preferred:  0  0x0  0
    
    echo "4 0x1e" > /sys/kernel/debug/dri/0/DP-1/link_settings
    
    cat /sys/kernel/debug/dri/0/DP-1/link_settings
    Current:  4  0x1e  0  Verified:  4  0x1e  0  Reported:  4  0x1e  16  Preferred:  4  0x1e  0
    
    Signed-off-by: Anson Jacob <Anson.Jacob@amd.com>
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9baa552b2f76e6985eb17561d986c019cae49ea5
Author: Oliver Logush <oliver.logush@amd.com>
Date:   Wed Jun 23 15:04:04 2021 -0400

    drm/amd/display: Fix timer_per_pixel unit error
    
    [ Upstream commit 23e55639b87fb16a9f0f66032ecb57060df6c46c ]
    
    [why]
    The units of the time_per_pixel variable were incorrect, this had to be
    changed for the code to properly function.
    
    [how]
    The change was very straightforward, only required one line of code to
    be changed where the calculation was done.
    
    Acked-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Oliver Logush <oliver.logush@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c78ee1aecb927e5e372fb254bd00563e1675ea0
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Wed Jul 14 05:53:23 2021 +0000

    tty: serial: jsm: hold port lock when reporting modem line changes
    
    [ Upstream commit 240e126c28df084222f0b661321e8e3ecb0d232e ]
    
    uart_handle_dcd_change() requires a port lock to be held and will emit a
    warning when lockdep is enabled.
    
    Held corresponding lock to fix the following warnings.
    
    [  132.528648] WARNING: CPU: 5 PID: 11600 at drivers/tty/serial/serial_core.c:3046 uart_handle_dcd_change+0xf4/0x120
    [  132.530482] Modules linked in:
    [  132.531050] CPU: 5 PID: 11600 Comm: jsm Not tainted 5.14.0-rc1-00003-g7fef2edf7cc7-dirty #31
    [  132.535268] RIP: 0010:uart_handle_dcd_change+0xf4/0x120
    [  132.557100] Call Trace:
    [  132.557562]  ? __free_pages+0x83/0xb0
    [  132.558213]  neo_parse_modem+0x156/0x220
    [  132.558897]  neo_param+0x399/0x840
    [  132.559495]  jsm_tty_open+0x12f/0x2d0
    [  132.560131]  uart_startup.part.18+0x153/0x340
    [  132.560888]  ? lock_is_held_type+0xe9/0x140
    [  132.561660]  uart_port_activate+0x7f/0xe0
    [  132.562351]  ? uart_startup.part.18+0x340/0x340
    [  132.563003]  tty_port_open+0x8d/0xf0
    [  132.563523]  ? uart_set_options+0x1e0/0x1e0
    [  132.564125]  uart_open+0x24/0x40
    [  132.564604]  tty_open+0x15c/0x630
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Link: https://lore.kernel.org/r/1626242003-3809-1-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7993ee173378f89c10a9b36c938dfb75339b75e2
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Wed Jul 14 12:13:46 2021 +0200

    staging: board: Fix uninitialized spinlock when attaching genpd
    
    [ Upstream commit df00609821bf17f50a75a446266d19adb8339d84 ]
    
    On Armadillo-800-EVA with CONFIG_DEBUG_SPINLOCK=y:
    
        BUG: spinlock bad magic on CPU#0, swapper/1
         lock: lcdc0_device+0x10c/0x308, .magic: 00000000, .owner: <none>/-1, .owner_cpu: 0
        CPU: 0 PID: 1 Comm: swapper Not tainted 5.11.0-rc5-armadillo-00036-gbbca04be7a80-dirty #287
        Hardware name: Generic R8A7740 (Flattened Device Tree)
        [<c010c3c8>] (unwind_backtrace) from [<c010a49c>] (show_stack+0x10/0x14)
        [<c010a49c>] (show_stack) from [<c0159534>] (do_raw_spin_lock+0x20/0x94)
        [<c0159534>] (do_raw_spin_lock) from [<c040858c>] (dev_pm_get_subsys_data+0x8c/0x11c)
        [<c040858c>] (dev_pm_get_subsys_data) from [<c05fbcac>] (genpd_add_device+0x78/0x2b8)
        [<c05fbcac>] (genpd_add_device) from [<c0412db4>] (of_genpd_add_device+0x34/0x4c)
        [<c0412db4>] (of_genpd_add_device) from [<c0a1ea74>] (board_staging_register_device+0x11c/0x148)
        [<c0a1ea74>] (board_staging_register_device) from [<c0a1eac4>] (board_staging_register_devices+0x24/0x28)
    
    of_genpd_add_device() is called before platform_device_register(), as it
    needs to attach the genpd before the device is probed.  But the spinlock
    is only initialized when the device is registered.
    
    Fix this by open-coding the spinlock initialization, cfr.
    device_pm_init_common() in the internal drivers/base code, and in the
    SuperH early platform code.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/57783ece7ddae55f2bda2f59f452180bff744ea0.1626257398.git.geert+renesas@glider.be
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 995567ded0198773215872bdf235d3320d35217c
Author: Jack Pham <jackp@codeaurora.org>
Date:   Tue Jul 20 01:09:07 2021 -0700

    usb: gadget: composite: Allow bMaxPower=0 if self-powered
    
    [ Upstream commit bcacbf06c891374e7fdd7b72d11cda03b0269b43 ]
    
    Currently the composite driver encodes the MaxPower field of
    the configuration descriptor by reading the c->MaxPower of the
    usb_configuration only if it is non-zero, otherwise it falls back
    to using the value hard-coded in CONFIG_USB_GADGET_VBUS_DRAW.
    However, there are cases when a configuration must explicitly set
    bMaxPower to 0, particularly if its bmAttributes also has the
    Self-Powered bit set, which is a valid combination.
    
    This is specifically called out in the USB PD specification section
    9.1, in which a PDUSB device "shall report zero in the bMaxPower
    field after negotiating a mutually agreeable Contract", and also
    verified by the USB Type-C Functional Test TD.4.10.2 Sink Power
    Precedence Test.
    
    The fix allows the c->MaxPower to be used for encoding the bMaxPower
    even if it is 0, if the self-powered bit is also set.  An example
    usage of this would be for a ConfigFS gadget to be dynamically
    updated by userspace when the Type-C connection is determined to be
    operating in Power Delivery mode.
    
    Co-developed-by: Ronak Vijay Raheja <rraheja@codeaurora.org>
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Ronak Vijay Raheja <rraheja@codeaurora.org>
    Signed-off-by: Jack Pham <jackp@codeaurora.org>
    Link: https://lore.kernel.org/r/20210720080907.30292-1-jackp@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44bbd4e6366f01ef8d5dc5c608b4669b8f36b79f
Author: Evgeny Novikov <novikov@ispras.ru>
Date:   Thu Jul 8 11:30:56 2021 +0300

    USB: EHCI: ehci-mv: improve error handling in mv_ehci_enable()
    
    [ Upstream commit 61136a12cbed234374ec6f588af57c580b20b772 ]
    
    mv_ehci_enable() did not disable and unprepare clocks in case of
    failures of phy_init(). Besides, it did not take into account failures
    of ehci_clock_enable() (in effect, failures of clk_prepare_enable()).
    The patch fixes both issues and gets rid of redundant wrappers around
    clk_prepare_enable() and clk_disable_unprepare() to simplify this a bit.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Evgeny Novikov <novikov@ispras.ru>
    Link: https://lore.kernel.org/r/20210708083056.21543-1-novikov@ispras.ru
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b96de5c3042f66a3064701d532ad6b9ec028496
Author: Maciej Żenczykowski <maze@google.com>
Date:   Thu Jul 1 04:48:34 2021 -0700

    usb: gadget: u_ether: fix a potential null pointer dereference
    
    [ Upstream commit 8ae01239609b29ec2eff55967c8e0fe3650cfa09 ]
    
    f_ncm tx timeout can call us with null skb to flush
    a pending frame.  In this case skb is NULL to begin
    with but ceases to be null after dev->wrap() completes.
    
    In such a case in->maxpacket will be read, even though
    we've failed to check that 'in' is not NULL.
    
    Though I've never observed this fail in practice,
    however the 'flush operation' simply does not make sense with
    a null usb IN endpoint - there's nowhere to flush to...
    (note that we're the gadget/device, and IN is from the point
     of view of the host, so here IN actually means outbound...)
    
    Cc: Brooke Basile <brookebasile@gmail.com>
    Cc: "Bryan O'Donoghue" <bryan.odonoghue@linaro.org>
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Lorenzo Colitti <lorenzo@google.com>
    Signed-off-by: Maciej Żenczykowski <maze@google.com>
    Link: https://lore.kernel.org/r/20210701114834.884597-6-zenczykowski@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1480bcb407e31f243f4e65e034c23fcf4b13ed5
Author: Kelly Devilliv <kelly.devilliv@gmail.com>
Date:   Sun Jun 27 20:57:47 2021 +0800

    usb: host: fotg210: fix the actual_length of an iso packet
    
    [ Upstream commit 091cb2f782f32ab68c6f5f326d7868683d3d4875 ]
    
    We should acquire the actual_length of an iso packet
    from the iTD directly using FOTG210_ITD_LENGTH() macro.
    
    Signed-off-by: Kelly Devilliv <kelly.devilliv@gmail.com>
    Link: https://lore.kernel.org/r/20210627125747.127646-4-kelly.devilliv@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33109bdf2c41315cbd1afc8c20dca9a4fdf1951d
Author: Kelly Devilliv <kelly.devilliv@gmail.com>
Date:   Sun Jun 27 20:57:46 2021 +0800

    usb: host: fotg210: fix the endpoint's transactional opportunities calculation
    
    [ Upstream commit c2e898764245c852bc8ee4857613ba4f3a6d761d ]
    
    Now that usb_endpoint_maxp() only returns the lowest
    11 bits from wMaxPacketSize, we should make use of the
    usb_endpoint_* helpers instead and remove the unnecessary
    max_packet()/hb_mult() macro.
    
    Signed-off-by: Kelly Devilliv <kelly.devilliv@gmail.com>
    Link: https://lore.kernel.org/r/20210627125747.127646-3-kelly.devilliv@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b190fdb93a9f79ebd6ad3ad0c6f7e41b80cc3bee
Author: Sasha Neftin <sasha.neftin@intel.com>
Date:   Mon Jun 14 15:19:39 2021 +0300

    igc: Check if num of q_vectors is smaller than max before array access
    
    [ Upstream commit 373e2829e7c2e1e606503cdb5c97749f512a4be9 ]
    
    Ensure that the adapter->q_vector[MAX_Q_VECTORS] array isn't accessed
    beyond its size. It was fixed by using a local variable num_q_vectors
    as a limit for loop index, and ensure that num_q_vectors is not bigger
    than MAX_Q_VECTORS.
    
    Suggested-by: Aleksandr Loktionov <aleksandr.loktionov@intel.com>
    Signed-off-by: Sasha Neftin <sasha.neftin@intel.com>
    Tested-by: Dvora Fuxbrumer <dvorax.fuxbrumer@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4bf2fdfe37ba0414f3917a0bac5aec8bb773776
Author: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
Date:   Mon Jul 12 12:35:05 2021 +0800

    drm: avoid blocking in drm_clients_info's rcu section
    
    [ Upstream commit 5eff9585de220cdd131237f5665db5e6c6bdf590 ]
    
    Inside drm_clients_info, the rcu_read_lock is held to lock
    pid_task()->comm. However, within this protected section, a call to
    drm_is_current_master is made, which involves a mutex lock in a future
    patch. However, this is illegal because the mutex lock might block
    while in the RCU read-side critical section.
    
    Since drm_is_current_master isn't protected by rcu_read_lock, we avoid
    this by moving it out of the RCU critical section.
    
    The following report came from intel-gfx ci's
    igt@debugfs_test@read_all_entries testcase:
    
    =============================
    [ BUG: Invalid wait context ]
    5.13.0-CI-Patchwork_20515+ #1 Tainted: G        W
    -----------------------------
    debugfs_test/1101 is trying to lock:
    ffff888132d901a8 (&dev->master_mutex){+.+.}-{3:3}, at:
    drm_is_current_master+0x1e/0x50
    other info that might help us debug this:
    context-{4:4}
    3 locks held by debugfs_test/1101:
     #0: ffff88810fdffc90 (&p->lock){+.+.}-{3:3}, at:
     seq_read_iter+0x53/0x3b0
     #1: ffff888132d90240 (&dev->filelist_mutex){+.+.}-{3:3}, at:
     drm_clients_info+0x63/0x2a0
     #2: ffffffff82734220 (rcu_read_lock){....}-{1:2}, at:
     drm_clients_info+0x1b1/0x2a0
    stack backtrace:
    CPU: 8 PID: 1101 Comm: debugfs_test Tainted: G        W
    5.13.0-CI-Patchwork_20515+ #1
    Hardware name: Intel Corporation CometLake Client Platform/CometLake S
    UDIMM (ERB/CRB), BIOS CMLSFWR1.R00.1263.D00.1906260926 06/26/2019
    Call Trace:
     dump_stack+0x7f/0xad
     __lock_acquire.cold.78+0x2af/0x2ca
     lock_acquire+0xd3/0x300
     ? drm_is_current_master+0x1e/0x50
     ? __mutex_lock+0x76/0x970
     ? lockdep_hardirqs_on+0xbf/0x130
     __mutex_lock+0xab/0x970
     ? drm_is_current_master+0x1e/0x50
     ? drm_is_current_master+0x1e/0x50
     ? drm_is_current_master+0x1e/0x50
     drm_is_current_master+0x1e/0x50
     drm_clients_info+0x107/0x2a0
     seq_read_iter+0x178/0x3b0
     seq_read+0x104/0x150
     full_proxy_read+0x4e/0x80
     vfs_read+0xa5/0x1b0
     ksys_read+0x5a/0xd0
     do_syscall_64+0x39/0xb0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Signed-off-by: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210712043508.11584-3-desmondcheongzx@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1d12196c375b3ffe1e2e46cfff6ab41abd032b4
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Thu Jul 15 17:17:24 2021 +0800

    Smack: Fix wrong semantics in smk_access_entry()
    
    [ Upstream commit 6d14f5c7028eea70760df284057fe198ce7778dd ]
    
    In the smk_access_entry() function, if no matching rule is found
    in the rust_list, a negative error code will be used to perform bit
    operations with the MAY_ enumeration value. This is semantically
    wrong. This patch fixes this issue.
    
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Casey Schaufler <casey@schaufler-ca.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c454b1a2155cf6a64af2d21fc102686c8ff51698
Author: Yajun Deng <yajun.deng@linux.dev>
Date:   Mon Jul 19 13:18:16 2021 +0800

    netlink: Deal with ESRCH error in nlmsg_notify()
    
    [ Upstream commit fef773fc8110d8124c73a5e6610f89e52814637d ]
    
    Yonghong Song report:
    The bpf selftest tc_bpf failed with latest bpf-next.
    The following is the command to run and the result:
    $ ./test_progs -n 132
    [   40.947571] bpf_testmod: loading out-of-tree module taints kernel.
    test_tc_bpf:PASS:test_tc_bpf__open_and_load 0 nsec
    test_tc_bpf:PASS:bpf_tc_hook_create(BPF_TC_INGRESS) 0 nsec
    test_tc_bpf:PASS:bpf_tc_hook_create invalid hook.attach_point 0 nsec
    test_tc_bpf_basic:PASS:bpf_obj_get_info_by_fd 0 nsec
    test_tc_bpf_basic:PASS:bpf_tc_attach 0 nsec
    test_tc_bpf_basic:PASS:handle set 0 nsec
    test_tc_bpf_basic:PASS:priority set 0 nsec
    test_tc_bpf_basic:PASS:prog_id set 0 nsec
    test_tc_bpf_basic:PASS:bpf_tc_attach replace mode 0 nsec
    test_tc_bpf_basic:PASS:bpf_tc_query 0 nsec
    test_tc_bpf_basic:PASS:handle set 0 nsec
    test_tc_bpf_basic:PASS:priority set 0 nsec
    test_tc_bpf_basic:PASS:prog_id set 0 nsec
    libbpf: Kernel error message: Failed to send filter delete notification
    test_tc_bpf_basic:FAIL:bpf_tc_detach unexpected error: -3 (errno 3)
    test_tc_bpf:FAIL:test_tc_internal ingress unexpected error: -3 (errno 3)
    
    The failure seems due to the commit
        cfdf0d9ae75b ("rtnetlink: use nlmsg_notify() in rtnetlink_send()")
    
    Deal with ESRCH error in nlmsg_notify() even the report variable is zero.
    
    Reported-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Yajun Deng <yajun.deng@linux.dev>
    Link: https://lore.kernel.org/r/20210719051816.11762-1-yajun.deng@linux.dev
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5adbbb27bb7ce6ad28d8f31232961630e4143811
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Wed Jul 14 04:09:22 2021 +0000

    video: fbdev: kyro: fix a DoS bug by restricting user input
    
    [ Upstream commit 98a65439172dc69cb16834e62e852afc2adb83ed ]
    
    The user can pass in any value to the driver through the 'ioctl'
    interface. The driver dost not check, which may cause DoS bugs.
    
    The following log reveals it:
    
    divide error: 0000 [#1] PREEMPT SMP KASAN PTI
    RIP: 0010:SetOverlayViewPort+0x133/0x5f0 drivers/video/fbdev/kyro/STG4000OverlayDevice.c:476
    Call Trace:
     kyro_dev_overlay_viewport_set drivers/video/fbdev/kyro/fbdev.c:378 [inline]
     kyrofb_ioctl+0x2eb/0x330 drivers/video/fbdev/kyro/fbdev.c:603
     do_fb_ioctl+0x1f3/0x700 drivers/video/fbdev/core/fbmem.c:1171
     fb_ioctl+0xeb/0x130 drivers/video/fbdev/core/fbmem.c:1185
     vfs_ioctl fs/ioctl.c:48 [inline]
     __do_sys_ioctl fs/ioctl.c:753 [inline]
     __se_sys_ioctl fs/ioctl.c:739 [inline]
     __x64_sys_ioctl+0x19b/0x220 fs/ioctl.c:739
     do_syscall_64+0x32/0x80 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/1626235762-2590-1-git-send-email-zheyuma97@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ee6cc0f52db33c74f3c5344455401db6ea0128c
Author: David Heidelberg <david@ixit.cz>
Date:   Wed Jul 7 15:14:53 2021 +0200

    ARM: dts: qcom: apq8064: correct clock names
    
    [ Upstream commit 0dc6c59892ead17a9febd11202c9f6794aac1895 ]
    
    Since new code doesn't take old clk names in account, it does fixes
    error:
    
    msm_dsi 4700000.mdss_dsi: dev_pm_opp_set_clkname: Couldn't find clock: -2
    
    and following kernel oops introduced by
    b0530eb1191 ("drm/msm/dpu: Use OPP API to set clk/perf state").
    
    Also removes warning about deprecated clock names.
    
    Tested against linux-5.10.y LTS on Nexus 7 2013.
    
    Reviewed-by: Brian Masney <masneyb@onstation.org>
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Link: https://lore.kernel.org/r/20210707131453.24041-1-david@ixit.cz
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9707a95049294b560d678c53568d85cd9a74f96
Author: Stefan Assmann <sassmann@kpanic.de>
Date:   Tue Mar 16 11:01:41 2021 +0100

    iavf: fix locking of critical sections
    
    [ Upstream commit 226d528512cfac890a1619aea4301f3dd314fe60 ]
    
    To avoid races between iavf_init_task(), iavf_reset_task(),
    iavf_watchdog_task(), iavf_adminq_task() as well as the shutdown and
    remove functions more locking is required.
    The current protection by __IAVF_IN_CRITICAL_TASK is needed in
    additional places.
    
    - The reset task performs state transitions, therefore needs locking.
    - The adminq task acts on replies from the PF in
      iavf_virtchnl_completion() which may alter the states.
    - The init task is not only run during probe but also if a VF gets stuck
      to reinitialize it.
    - The shutdown function performs a state transition.
    - The remove function performs a state transition and also free's
      resources.
    
    iavf_lock_timeout() is introduced to avoid waiting infinitely
    and cause a deadlock. Rather unlock and print a warning.
    
    Signed-off-by: Stefan Assmann <sassmann@kpanic.de>
    Tested-by: Konrad Jankowski <konrad0.jankowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35429d3aa3873b6a583c70275eefc5aa73869f3f
Author: Stefan Assmann <sassmann@kpanic.de>
Date:   Fri Mar 5 13:38:56 2021 +0100

    iavf: do not override the adapter state in the watchdog task
    
    [ Upstream commit 22c8fd71d3a5e6fe584ccc2c1e8760e5baefd5aa ]
    
    The iavf watchdog task overrides adapter->state to __IAVF_RESETTING
    when it detects a pending reset. Then schedules iavf_reset_task() which
    takes care of the reset.
    
    The reset task is capable of handling the reset without changing
    adapter->state. In fact we lose the state information when the watchdog
    task prematurely changes the adapter state. This may lead to a crash if
    instead of the reset task the iavf_remove() function gets called before
    the reset task.
    In that case (if we were in state __IAVF_RUNNING previously) the
    iavf_remove() function triggers iavf_close() which fails to close the
    device because of the incorrect state information.
    
    This may result in a crash due to pending interrupts.
    kernel BUG at drivers/pci/msi.c:357!
    [...]
    Call Trace:
     [<ffffffffbddf24dd>] pci_disable_msix+0x3d/0x50
     [<ffffffffc08d2a63>] iavf_reset_interrupt_capability+0x23/0x40 [iavf]
     [<ffffffffc08d312a>] iavf_remove+0x10a/0x350 [iavf]
     [<ffffffffbddd3359>] pci_device_remove+0x39/0xc0
     [<ffffffffbdeb492f>] __device_release_driver+0x7f/0xf0
     [<ffffffffbdeb49c3>] device_release_driver+0x23/0x30
     [<ffffffffbddcabb4>] pci_stop_bus_device+0x84/0xa0
     [<ffffffffbddcacc2>] pci_stop_and_remove_bus_device+0x12/0x20
     [<ffffffffbddf361f>] pci_iov_remove_virtfn+0xaf/0x160
     [<ffffffffbddf3bcc>] sriov_disable+0x3c/0xf0
     [<ffffffffbddf3ca3>] pci_disable_sriov+0x23/0x30
     [<ffffffffc0667365>] i40e_free_vfs+0x265/0x2d0 [i40e]
     [<ffffffffc0667624>] i40e_pci_sriov_configure+0x144/0x1f0 [i40e]
     [<ffffffffbddd5307>] sriov_numvfs_store+0x177/0x1d0
    Code: 00 00 e8 3c 25 e3 ff 49 c7 86 88 08 00 00 00 00 00 00 5b 41 5c 41 5d 41 5e 41 5f 5d c3 48 8b 7b 28 e8 0d 44
    RIP  [<ffffffffbbbf1068>] free_msi_irqs+0x188/0x190
    
    The solution is to not touch the adapter->state in iavf_watchdog_task()
    and let the reset task handle the state transition.
    
    Signed-off-by: Stefan Assmann <sassmann@kpanic.de>
    Tested-by: Konrad Jankowski <konrad0.jankowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab03f15c1db435fae8810c14cea5c3e341438e8c
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Jun 27 17:32:37 2021 +0100

    iio: dac: ad5624r: Fix incorrect handling of an optional regulator.
    
    [ Upstream commit 97683c851f9cdbd3ea55697cbe2dcb6af4287bbd ]
    
    The naming of the regulator is problematic.  VCC is usually a supply
    voltage whereas these devices have a separate VREF pin.
    
    Secondly, the regulator core might have provided a stub regulator if
    a real regulator wasn't provided. That would in turn have failed to
    provide a voltage when queried. So reality was that there was no way
    to use the internal reference.
    
    In order to avoid breaking any dts out in the wild, make sure to fallback
    to the original vcc naming if vref is not available.
    
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Acked-by: Nuno Sá <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20210627163244.1090296-9-jic23@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0de0c167392785d25f31a7a3666bd1abbf1fd46c
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Jul 16 17:44:07 2021 -0400

    tipc: keep the skb in rcv queue until the whole data is read
    
    [ Upstream commit f4919ff59c2828064b4156e3c3600a169909bcf4 ]
    
    Currently, when userspace reads a datagram with a buffer that is
    smaller than this datagram, the data will be truncated and only
    part of it can be received by users. It doesn't seem right that
    users don't know the datagram size and have to use a huge buffer
    to read it to avoid the truncation.
    
    This patch to fix it by keeping the skb in rcv queue until the
    whole data is read by users. Only the last msg of the datagram
    will be marked with MSG_EOR, just as TCP/SCTP does.
    
    Note that this will work as above only when MSG_EOR is set in the
    flags parameter of recvmsg(), so that it won't break any old user
    applications.
    
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe14f10c07c81ca6cabe5fa1fe08e101463ae926
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Jul 8 15:25:06 2021 +0200

    PCI: Use pci_update_current_state() in pci_enable_device_flags()
    
    [ Upstream commit 14858dcc3b3587f4bb5c48e130ee7d68fc2b0a29 ]
    
    Updating the current_state field of struct pci_dev the way it is done
    in pci_enable_device_flags() before calling do_pci_enable_device() may
    not work.  For example, if the given PCI device depends on an ACPI
    power resource whose _STA method initially returns 0 ("off"), but the
    config space of the PCI device is accessible and the power state
    retrieved from the PCI_PM_CTRL register is D0, the current_state
    field in the struct pci_dev representing that device will get out of
    sync with the power.state of its ACPI companion object and that will
    lead to power management issues going forward.
    
    To avoid such issues, make pci_enable_device_flags() call
    pci_update_current_state() which takes ACPI device power management
    into account, if present, to retrieve the current power state of the
    device.
    
    Link: https://lore.kernel.org/lkml/20210314000439.3138941-1-luzmaximilian@gmail.com/
    Reported-by: Maximilian Luz <luzmaximilian@gmail.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Maximilian Luz <luzmaximilian@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d356909744ff30a0282bb3cdc58c39ce37d91a8
Author: Sean Anderson <sean.anderson@seco.com>
Date:   Thu Jul 1 14:56:38 2021 -0400

    crypto: mxs-dcp - Use sg_mapping_iter to copy data
    
    [ Upstream commit 2e6d793e1bf07fe5e20cfbbdcec9e1af7e5097eb ]
    
    This uses the sg_pcopy_from_buffer to copy data, instead of doing it
    ourselves.
    
    In addition to reducing code size, this fixes the following oops
    resulting from failing to kmap the page:
    
    [   68.896381] Unable to handle kernel NULL pointer dereference at virtual address 00000ab8
    [   68.904539] pgd = 3561adb3
    [   68.907475] [00000ab8] *pgd=00000000
    [   68.911153] Internal error: Oops: 805 [#1] ARM
    [   68.915618] Modules linked in: cfg80211 rfkill des_generic libdes arc4 libarc4 cbc ecb algif_skcipher sha256_generic libsha256 sha1_generic hmac aes_generic libaes cmac sha512_generic md5 md4 algif_hash af_alg i2c_imx i2c_core ci_hdrc_imx ci_hdrc mxs_dcp ulpi roles udc_core imx_sdma usbmisc_imx usb_common firmware_class virt_dma phy_mxs_usb nf_tables nfnetlink ip_tables x_tables ipv6 autofs4
    [   68.950741] CPU: 0 PID: 139 Comm: mxs_dcp_chan/ae Not tainted 5.10.34 #296
    [   68.958501] Hardware name: Freescale i.MX6 Ultralite (Device Tree)
    [   68.964710] PC is at memcpy+0xa8/0x330
    [   68.968479] LR is at 0xd7b2bc9d
    [   68.971638] pc : [<c053e7c8>]    lr : [<d7b2bc9d>]    psr: 000f0013
    [   68.977920] sp : c2cbbee4  ip : 00000010  fp : 00000010
    [   68.983159] r10: 00000000  r9 : c3283a40  r8 : 1a5a6f08
    [   68.988402] r7 : 4bfe0ecc  r6 : 76d8a220  r5 : c32f9050  r4 : 00000001
    [   68.994945] r3 : 00000ab8  r2 : fffffff0  r1 : c32f9050  r0 : 00000ab8
    [   69.001492] Flags: nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    [   69.008646] Control: 10c53c7d  Table: 83664059  DAC: 00000051
    [   69.014414] Process mxs_dcp_chan/ae (pid: 139, stack limit = 0x667b57ab)
    [   69.021133] Stack: (0xc2cbbee4 to 0xc2cbc000)
    [   69.025519] bee0:          c32f9050 c3235408 00000010 00000010 00000ab8 00000001 bf10406c
    [   69.033720] bf00: 00000000 00000000 00000010 00000000 c32355d0 832fb080 00000000 c13de2fc
    [   69.041921] bf20: c3628010 00000010 c33d5780 00000ab8 bf1067e8 00000002 c21e5010 c2cba000
    [   69.050125] bf40: c32f8040 00000000 bf106a40 c32f9040 c3283a80 00000001 bf105240 c3234040
    [   69.058327] bf60: ffffe000 c3204100 c2c69800 c2cba000 00000000 bf103b84 00000000 c2eddc54
    [   69.066530] bf80: c3204144 c0140d1c c2cba000 c2c69800 c0140be8 00000000 00000000 00000000
    [   69.074730] bfa0: 00000000 00000000 00000000 c0100114 00000000 00000000 00000000 00000000
    [   69.082932] bfc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [   69.091131] bfe0: 00000000 00000000 00000000 00000000 00000013 00000000 00000000 00000000
    [   69.099364] [<c053e7c8>] (memcpy) from [<bf10406c>] (dcp_chan_thread_aes+0x4e8/0x840 [mxs_dcp])
    [   69.108117] [<bf10406c>] (dcp_chan_thread_aes [mxs_dcp]) from [<c0140d1c>] (kthread+0x134/0x160)
    [   69.116941] [<c0140d1c>] (kthread) from [<c0100114>] (ret_from_fork+0x14/0x20)
    [   69.124178] Exception stack(0xc2cbbfb0 to 0xc2cbbff8)
    [   69.129250] bfa0:                                     00000000 00000000 00000000 00000000
    [   69.137450] bfc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [   69.145648] bfe0: 00000000 00000000 00000000 00000000 00000013 00000000
    [   69.152289] Code: e320f000 e4803004 e4804004 e4805004 (e4806004)
    
    Signed-off-by: Sean Anderson <sean.anderson@seco.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80bec14b4e0941d1c9eed2830ce364a3ed5694f9
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Date:   Thu Jun 17 13:28:57 2021 +0200

    media: dib8000: rewrite the init prbs logic
    
    [ Upstream commit 8db11aebdb8f93f46a8513c22c9bd52fa23263aa ]
    
    The logic at dib8000_get_init_prbs() has a few issues:
    
    1. the tables used there has an extra unused value at the beginning;
    2. the dprintk() message doesn't write the right value when
       transmission mode is not 8K;
    3. the array overflow validation is done by the callers.
    
    Rewrite the code to fix such issues.
    
    This should also shut up those smatch warnings:
    
            drivers/media/dvb-frontends/dib8000.c:2125 dib8000_get_init_prbs() error: buffer overflow 'lut_prbs_8k' 14 <= 14
            drivers/media/dvb-frontends/dib8000.c:2129 dib8000_get_init_prbs() error: buffer overflow 'lut_prbs_2k' 14 <= 14
            drivers/media/dvb-frontends/dib8000.c:2131 dib8000_get_init_prbs() error: buffer overflow 'lut_prbs_4k' 14 <= 14
            drivers/media/dvb-frontends/dib8000.c:2134 dib8000_get_init_prbs() error: buffer overflow 'lut_prbs_8k' 14 <= 14
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4cab14bcff2585ec636e6e325210e8118b517859
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Jul 7 14:47:52 2021 -0700

    ASoC: atmel: ATMEL drivers don't need HAS_DMA
    
    [ Upstream commit 6c5c659dfe3f02e08054a6c20019e3886618b512 ]
    
    On a config (such as arch/sh/) which does not set HAS_DMA when MMU
    is not set, several ATMEL ASoC drivers select symbols that cause
    kconfig warnings. There is one "depends on HAS_DMA" which is no longer
    needed. Dropping it eliminates the kconfig warnings and still builds
    with no problems reported.
    
    Fix the following kconfig warnings:
    
    WARNING: unmet direct dependencies detected for SND_ATMEL_SOC_PDC
      Depends on [n]: SOUND [=m] && !UML && SND [=m] && SND_SOC [=m] && SND_ATMEL_SOC [=m] && HAS_DMA [=n]
      Selected by [m]:
      - SND_ATMEL_SOC_SSC [=m] && SOUND [=m] && !UML && SND [=m] && SND_SOC [=m] && SND_ATMEL_SOC [=m]
      - SND_ATMEL_SOC_SSC_PDC [=m] && SOUND [=m] && !UML && SND [=m] && SND_SOC [=m] && SND_ATMEL_SOC [=m] && ATMEL_SSC [=m]
    
    WARNING: unmet direct dependencies detected for SND_ATMEL_SOC_SSC_PDC
      Depends on [n]: SOUND [=m] && !UML && SND [=m] && SND_SOC [=m] && SND_ATMEL_SOC [=m] && ATMEL_SSC [=m] && HAS_DMA [=n]
      Selected by [m]:
      - SND_AT91_SOC_SAM9G20_WM8731 [=m] && SOUND [=m] && !UML && SND [=m] && SND_SOC [=m] && SND_ATMEL_SOC [=m] && (ARCH_AT91 || COMPILE_TEST [=y]) && ATMEL_SSC [=m] && SND_SOC_I2C_AND_SPI [=m]
    
    WARNING: unmet direct dependencies detected for SND_ATMEL_SOC_SSC
      Depends on [n]: SOUND [=m] && !UML && SND [=m] && SND_SOC [=m] && SND_ATMEL_SOC [=m] && HAS_DMA [=n]
      Selected by [m]:
      - SND_ATMEL_SOC_SSC_DMA [=m] && SOUND [=m] && !UML && SND [=m] && SND_SOC [=m] && SND_ATMEL_SOC [=m] && ATMEL_SSC [=m]
    
    WARNING: unmet direct dependencies detected for SND_ATMEL_SOC_SSC_DMA
      Depends on [n]: SOUND [=m] && !UML && SND [=m] && SND_SOC [=m] && SND_ATMEL_SOC [=m] && ATMEL_SSC [=m] && HAS_DMA [=n]
      Selected by [m]:
      - SND_ATMEL_SOC_WM8904 [=m] && SOUND [=m] && !UML && SND [=m] && SND_SOC [=m] && SND_ATMEL_SOC [=m] && (ARCH_AT91 || COMPILE_TEST [=y]) && ATMEL_SSC [=m] && I2C [=m]
      - SND_AT91_SOC_SAM9X5_WM8731 [=m] && SOUND [=m] && !UML && SND [=m] && SND_SOC [=m] && SND_ATMEL_SOC [=m] && (ARCH_AT91 || COMPILE_TEST [=y]) && ATMEL_SSC [=m] && SND_SOC_I2C_AND_SPI [=m]
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
    Acked-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20210707214752.3831-1-rdunlap@infradead.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a7c6e9159bea85623af92a67a39cf1bb9b85499
Author: Luben Tuikov <luben.tuikov@amd.com>
Date:   Fri Mar 26 16:40:22 2021 -0400

    drm/amdgpu: Fix amdgpu_ras_eeprom_init()
    
    [ Upstream commit dce4400e6516d18313d23de45b5be8a18980b00e ]
    
    No need to account for the 2 bytes of EEPROM
    address--this is now well abstracted away by
    the fixes the the lower layers.
    
    Cc: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
    Cc: Alexander Deucher <Alexander.Deucher@amd.com>
    Signed-off-by: Luben Tuikov <luben.tuikov@amd.com>
    Acked-by: Alexander Deucher <Alexander.Deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d766826eeec493fbbadcddc869338ae1c43bc5ae
Author: Nadav Amit <namit@vmware.com>
Date:   Thu Sep 2 14:58:59 2021 -0700

    userfaultfd: prevent concurrent API initialization
    
    [ Upstream commit 22e5fe2a2a279d9a6fcbdfb4dffe73821bef1c90 ]
    
    userfaultfd assumes that the enabled features are set once and never
    changed after UFFDIO_API ioctl succeeded.
    
    However, currently, UFFDIO_API can be called concurrently from two
    different threads, succeed on both threads and leave userfaultfd's
    features in non-deterministic state.  Theoretically, other uffd operations
    (ioctl's and page-faults) can be dispatched while adversely affected by
    such changes of features.
    
    Moreover, the writes to ctx->state and ctx->features are not ordered,
    which can - theoretically, again - let userfaultfd_ioctl() think that
    userfaultfd API completed, while the features are still not initialized.
    
    To avoid races, it is arguably best to get rid of ctx->state.  Since there
    are only 2 states, record the API initialization in ctx->features as the
    uppermost bit and remove ctx->state.
    
    Link: https://lkml.kernel.org/r/20210808020724.1022515-3-namit@vmware.com
    Fixes: 9cd75c3cd4c3d ("userfaultfd: non-cooperative: add ability to report non-PF events from uffd descriptor")
    Signed-off-by: Nadav Amit <namit@vmware.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Axel Rasmussen <axelrasmussen@google.com>
    Cc: Jens Axboe <axboe@kernel.dk>
    Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Cc: Peter Xu <peterx@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7bf2913a5bca278702c1b0f736ef0aa1a3e877b2
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Thu Aug 19 09:01:14 2021 +0900

    kbuild: Fix 'no symbols' warning when CONFIG_TRIM_UNUSD_KSYMS=y
    
    [ Upstream commit 52d83df682c82055961531853c066f4f16e234ea ]
    
    When CONFIG_TRIM_UNUSED_KSYMS is enabled, I see some warnings like this:
    
      nm: arch/x86/entry/vdso/vdso32/note.o: no symbols
    
    $NM (both GNU nm and llvm-nm) warns when no symbol is found in the
    object. Suppress the stderr.
    
    Fangrui Song mentioned binutils>=2.37 `nm -q` can be used to suppress
    "no symbols" [1], and llvm-nm>=13.0.0 supports -q as well.
    
    We cannot use it for now, but note it as a TODO.
    
    [1]: https://sourceware.org/bugzilla/show_bug.cgi?id=27408
    
    Fixes: bbda5ec671d3 ("kbuild: simplify dependency generation for CONFIG_TRIM_UNUSED_KSYMS")
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ac2ecb915e8012145f8ed8a9d769ee5ff8e21be
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Thu Sep 2 09:19:51 2021 +0200

    MIPS: Malta: fix alignment of the devicetree buffer
    
    [ Upstream commit bea6a94a279bcbe6b2cde348782b28baf12255a5 ]
    
    Starting with following patch MIPS Malta is not able to boot:
    | commit 79edff12060fe7772af08607eff50c0e2486c5ba
    | Author: Rob Herring <robh@kernel.org>
    | scripts/dtc: Update to upstream version v1.6.0-51-g183df9e9c2b9
    
    The reason is the alignment test added to the fdt_ro_probe_(). To fix
    this issue, we need to make sure that fdt_buf is aligned.
    
    Since the dtc patch was designed to uncover potential issue, I handle
    initial MIPS Malta patch as initial bug.
    
    Fixes: e81a8c7dabac ("MIPS: Malta: Setup RAM regions via DT")
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit debdff960034ae3edffff690a7e95f0bef39e73f
Author: Chao Yu <chao@kernel.org>
Date:   Wed Aug 25 19:34:19 2021 +0800

    f2fs: fix to unmap pages from userspace process in punch_hole()
    
    [ Upstream commit c8dc3047c48540183744f959412d44b08c5435e1 ]
    
    We need to unmap pages from userspace process before removing pagecache
    in punch_hole() like we did in f2fs_setattr().
    
    Similar change:
    commit 5e44f8c374dc ("ext4: hole-punch use truncate_pagecache_range")
    
    Fixes: fbfa2cc58d53 ("f2fs: add file operations")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c28c23dc82e7514b20b316b6e8bc73fa5d073e5
Author: Chao Yu <chao@kernel.org>
Date:   Thu Aug 26 10:03:15 2021 +0800

    f2fs: fix unexpected ENOENT comes from f2fs_map_blocks()
    
    [ Upstream commit adf9ea89c719c1d23794e363f631e376b3ff8cbc ]
    
    In below path, it will return ENOENT if filesystem is shutdown:
    
    - f2fs_map_blocks
     - f2fs_get_dnode_of_data
      - f2fs_get_node_page
       - __get_node_page
        - read_node_page
         - is_sbi_flag_set(sbi, SBI_IS_SHUTDOWN)
           return -ENOENT
     - force return value from ENOENT to 0
    
    It should be fine for read case, since it indicates a hole condition,
    and caller could use .m_next_pgofs to skip the hole and continue the
    lookup.
    
    However it may cause confusing for write case, since leaving a hole
    there, and said nothing was wrong doesn't help.
    
    There is at least one case from dax_iomap_actor() will complain that,
    so fix this in prior to supporting dax in f2fs.
    
    xfstest generic/388 reports below warning:
    
    ubuntu godown: xfstests-induced forced shutdown of /mnt/scratch_f2fs:
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 485833 at fs/dax.c:1127 dax_iomap_actor+0x339/0x370
    Call Trace:
     iomap_apply+0x1c4/0x7b0
     ? dax_iomap_rw+0x1c0/0x1c0
     dax_iomap_rw+0xad/0x1c0
     ? dax_iomap_rw+0x1c0/0x1c0
     f2fs_file_write_iter+0x5ab/0x970 [f2fs]
     do_iter_readv_writev+0x273/0x2e0
     do_iter_write+0xab/0x1f0
     vfs_iter_write+0x21/0x40
     iter_file_splice_write+0x287/0x540
     do_splice+0x37c/0xa60
     __x64_sys_splice+0x15f/0x3a0
     do_syscall_64+0x3b/0x90
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    ubuntu godown: xfstests-induced forced shutdown of /mnt/scratch_f2fs:
    ------------[ cut here ]------------
    RIP: 0010:dax_iomap_pte_fault.isra.0+0x72e/0x14a0
    Call Trace:
     dax_iomap_fault+0x44/0x70
     f2fs_dax_huge_fault+0x155/0x400 [f2fs]
     f2fs_dax_fault+0x18/0x30 [f2fs]
     __do_fault+0x4e/0x120
     do_fault+0x3cf/0x7a0
     __handle_mm_fault+0xa8c/0xf20
     ? find_held_lock+0x39/0xd0
     handle_mm_fault+0x1b6/0x480
     do_user_addr_fault+0x320/0xcd0
     ? rcu_read_lock_sched_held+0x67/0xc0
     exc_page_fault+0x77/0x3f0
     ? asm_exc_page_fault+0x8/0x30
     asm_exc_page_fault+0x1e/0x30
    
    Fixes: 83a3bfdb5a8a ("f2fs: indicate shutdown f2fs to allow unmount successfully")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ca5b00782df897481d1c4580b8d0ba0e3ad68aa
Author: Chao Yu <chao@kernel.org>
Date:   Tue Aug 24 08:12:08 2021 +0800

    f2fs: fix to account missing .skipped_gc_rwsem
    
    [ Upstream commit ad126ebddecbf696e0cf214ff56c7b170fa9f0f7 ]
    
    There is a missing place we forgot to account .skipped_gc_rwsem, fix it.
    
    Fixes: 6f8d4455060d ("f2fs: avoid fi->i_gc_rwsem[WRITE] lock in f2fs_gc")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec5cab3798328c6aacbbe6e97621db91db93ffac
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Fri Aug 27 14:07:06 2021 +1000

    KVM: PPC: Fix clearing never mapped TCEs in realmode
    
    [ Upstream commit 1d78dfde33a02da1d816279c2e3452978b7abd39 ]
    
    Since commit e1a1ef84cd07 ("KVM: PPC: Book3S: Allocate guest TCEs on
    demand too"), pages for TCE tables for KVM guests are allocated only
    when needed. This allows skipping any update when clearing TCEs. This
    works mostly fine as TCE updates are handled when the MMU is enabled.
    The realmode handlers fail with H_TOO_HARD when pages are not yet
    allocated, except when clearing a TCE in which case KVM prints a warning
    and proceeds to dereference a NULL pointer, which crashes the host OS.
    
    This has not been caught so far as the change in commit e1a1ef84cd07 is
    reasonably new, and POWER9 runs mostly radix which does not use realmode
    handlers. With hash, the default TCE table is memset() by QEMU when the
    machine is reset which triggers page faults and the KVM TCE device's
    kvm_spapr_tce_fault() handles those with MMU on. And the huge DMA
    windows are not cleared by VMs which instead successfully create a DMA
    window big enough to map the VM memory 1:1 and then VMs just map
    everything without clearing.
    
    This started crashing now as commit 381ceda88c4c ("powerpc/pseries/iommu:
    Make use of DDW for indirect mapping") added a mode when a dymanic DMA
    window not big enough to map the VM memory 1:1 but it is used anyway,
    and the VM now is the first (i.e. not QEMU) to clear a just created
    table. Note that upstream QEMU needs to be modified to trigger the VM to
    trigger the host OS crash.
    
    This replaces WARN_ON_ONCE_RM() with a check and return, and adds
    another warning if TCE is not being cleared.
    
    Fixes: e1a1ef84cd07 ("KVM: PPC: Book3S: Allocate guest TCEs on demand too")
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210827040706.517652-1-aik@ozlabs.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e46ce5a8aba5e14e71934ceebefa958027eda77c
Author: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
Date:   Wed Jul 7 16:12:13 2021 +0300

    clk: at91: clk-generated: Limit the requested rate to our range
    
    [ Upstream commit af7651e67b9d5f7e63ea23b118e3672ac662244a ]
    
    On clk_generated_determine_rate(), the requested rate could be outside
    of clk's range. Limit the rate to the clock's range to not return an
    error.
    
    Fixes: df70aeef6083 ("clk: at91: add generated clock driver")
    Signed-off-by: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
    Link: https://lore.kernel.org/r/20210707131213.3283509-1-codrin.ciubotariu@microchip.com
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 557f6445e37fc13840d0360c2ef4cd6748f6f0b3
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Wed Jul 22 10:38:18 2020 +0300

    clk: at91: clk-generated: pass the id of changeable parent at registration
    
    [ Upstream commit 64c9247b9e87e96e41cea545eb64727cee10c55c ]
    
    Pass the ID of changeable parent at registration. This will allow
    the scalability of this clock driver with regards to the changeable
    parent ID for versions of this IP where changeable parent is not the
    last one in the parents list (e.g. SAMA7G5). With this the clock flags
    are set to zero in case we have no changeable parent. Also in
    clk_generated_best_diff() the *best_diff variable is check against
    tmp_diff variable using ">=" operator instead of ">" so that in case
    the requested frequency could be obtained using fix parents + gck
    dividers but the clock also supports changeable parent to be able
    to force the usage of the changeable parent.
    
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Link: https://lore.kernel.org/r/1595403506-8209-11-git-send-email-claudiu.beznea@microchip.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d93a37889e3a3920dc69ba3036a870cd9396a53c
Author: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
Date:   Fri Jan 31 13:58:16 2020 +0200

    clk: at91: sam9x60: Don't use audio PLL
    
    [ Upstream commit 5bf7f4a249387a6062b9a14c8a77e7ba2fd6a53b ]
    
    On sam9x60, there is not audio PLL and so I2S and classD have to use one
    of the best matching parents for their generated clock.
    
    Fixes: 01e2113de9a5 ("clk: at91: add sam9x60 pmc driver")
    Signed-off-by: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
    Link: https://lkml.kernel.org/r/20200131115816.12483-1-codrin.ciubotariu@microchip.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57188e2cac47cc5ec04de484d648b514852c6809
Author: David Howells <dhowells@redhat.com>
Date:   Thu Jun 17 14:21:00 2021 +0100

    fscache: Fix cookie key hashing
    
    [ Upstream commit 35b72573e977ed6b18b094136a4fa3e0ffb13603 ]
    
    The current hash algorithm used for hashing cookie keys is really bad,
    producing almost no dispersion (after a test kernel build, ~30000 files
    were split over just 18 out of the 32768 hash buckets).
    
    Borrow the full_name_hash() hash function into fscache to do the hashing
    for cookie keys and, in the future, volume keys.
    
    I don't want to use full_name_hash() as-is because I want the hash value to
    be consistent across arches and over time as the hash value produced may
    get used on disk.
    
    I can also optimise parts of it away as the key will always be a padded
    array of aligned 32-bit words.
    
    Fixes: ec0328e46d6e ("fscache: Maintain a catalogue of allocated cookies")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    cc: linux-cachefs@redhat.com
    Link: https://lore.kernel.org/r/162431201844.2908479.8293647220901514696.stgit@warthog.procyon.org.uk/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2e3758a2cf90b19f550ab460487d2310d3df43d
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Aug 26 16:08:22 2021 +0200

    platform/x86: dell-smbios-wmi: Add missing kfree in error-exit from run_smbios_call
    
    [ Upstream commit 0487d4fc42d7f31a56cfd9e2237f9ebd889e6112 ]
    
    As pointed out be Kees Cook if we return -EIO because the
    obj->type != ACPI_TYPE_BUFFER, then we must kfree the
    output buffer before the return.
    
    Fixes: 1a258e670434 ("platform/x86: dell-smbios-wmi: Add new WMI dispatcher driver")
    Reported-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210826140822.71198-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba5d4dc003b40e7c2cbe3cbcaff4c117bdff4f2a
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Thu Aug 12 02:00:43 2021 +1000

    KVM: PPC: Book3S HV Nested: Reflect guest PMU in-use to L0 when guest SPRs are live
    
    [ Upstream commit 1782663897945a5cf28e564ba5eed730098e9aa4 ]
    
    After the L1 saves its PMU SPRs but before loading the L2's PMU SPRs,
    switch the pmcregs_in_use field in the L1 lppaca to the value advertised
    by the L2 in its VPA. On the way out of the L2, set it back after saving
    the L2 PMU registers (if they were in-use).
    
    This transfers the PMU liveness indication between the L1 and L2 at the
    points where the registers are not live.
    
    This fixes the nested HV bug for which a workaround was added to the L0
    HV by commit 63279eeb7f93a ("KVM: PPC: Book3S HV: Always save guest pmu
    for guest capable of nesting"), which explains the problem in detail.
    That workaround is no longer required for guests that include this bug
    fix.
    
    Fixes: 360cae313702 ("KVM: PPC: Book3S HV: Nested guest entry via hypercall")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Fabiano Rosas <farosas@linux.ibm.com>
    Link: https://lore.kernel.org/r/20210811160134.904987-10-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a02309beb2b84dc63702a64ee3b7f9e02455f829
Author: Jim Broadus <jbroadus@gmail.com>
Date:   Sun Aug 8 23:55:05 2021 -0700

    HID: i2c-hid: Fix Elan touchpad regression
    
    [ Upstream commit 786537063bbfb3a7ebc6fc21b2baf37fb91df401 ]
    
    A quirk was recently added for Elan devices that has same device match
    as an entry earlier in the list. The i2c_hid_lookup_quirk function will
    always return the last match in the list, so the new entry shadows the
    old entry. The quirk in the previous entry, I2C_HID_QUIRK_BOGUS_IRQ,
    silenced a flood of messages which have reappeared in the 5.13 kernel.
    
    This change moves the two quirk flags into the same entry.
    
    Fixes: ca66a6770bd9 (HID: i2c-hid: Skip ELAN power-on command after reset)
    Signed-off-by: Jim Broadus <jbroadus@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f934961bf4e2eef06599bdc61f50ba789ab8b0d4
Author: David Disseldorp <ddiss@suse.de>
Date:   Fri Mar 27 15:19:52 2020 +0100

    scsi: target: avoid per-loop XCOPY buffer allocations
    
    [ Upstream commit 0ad08996da05b6b735d4963dceab7d2a4043607c ]
    
    The main target_xcopy_do_work() loop unnecessarily allocates an I/O buffer
    with each synchronous READ / WRITE pair. This commit significantly reduces
    allocations by reusing the XCOPY I/O buffer when possible.
    
    Link: https://lore.kernel.org/r/20200327141954.955-4-ddiss@suse.de
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: David Disseldorp <ddiss@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 389946024f0e1655018d89d3f160645e8728ee11
Author: Joel Stanley <joel@jms.id.au>
Date:   Tue Aug 17 14:24:06 2021 +0930

    powerpc/config: Renable MTD_PHYSMAP_OF
    
    [ Upstream commit d0e28a6145c3455b69991245e7f6147eb914b34a ]
    
    CONFIG_MTD_PHYSMAP_OF is not longer enabled as it depends on
    MTD_PHYSMAP which is not enabled.
    
    This is a regression from commit 642b1e8dbed7 ("mtd: maps: Merge
    physmap_of.c into physmap-core.c"), which added the extra dependency.
    Add CONFIG_MTD_PHYSMAP=y so this stays in the config, as Christophe said
    it is useful for build coverage.
    
    Fixes: 642b1e8dbed7 ("mtd: maps: Merge physmap_of.c into physmap-core.c")
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Acked-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210817045407.2445664-3-joel@jms.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db16408d52a89e38487575557b80a881aaa7dc23
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Aug 10 11:51:49 2021 +0300

    scsi: qedf: Fix error codes in qedf_alloc_global_queues()
    
    [ Upstream commit ccc89737aa6b9f248cf1623014038beb6c2b7f56 ]
    
    This driver has some left over "return 1" on failure style code mixed with
    "return negative error codes" style code.  The caller doesn't care so we
    should just convert everything to return negative error codes.
    
    Then there was a problem that there were two variables used to store error
    codes which just resulted in confusion.  If qedf_alloc_bdq() returned a
    negative error code, we accidentally returned success instead of
    propagating the error code.  So get rid of the "rc" variable and use
    "status" every where.
    
    Also remove the "status = 0" initialization so that these sorts of bugs
    will be detected by the compiler in the future.
    
    Link: https://lore.kernel.org/r/20210810085023.GA23998@kili
    Fixes: 61d8658b4a43 ("scsi: qedf: Add QLogic FastLinQ offload FCoE driver framework.")
    Acked-by: Manish Rangankar <mrangankar@marvell.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e56c8d843fa14d8a6b53bfb7ceaa8823089a73c
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Aug 10 11:47:53 2021 +0300

    scsi: qedi: Fix error codes in qedi_alloc_global_queues()
    
    [ Upstream commit 4dbe57d46d54a847875fa33e7d05877bb341585e ]
    
    This function had some left over code that returned 1 on error instead
    negative error codes.  Convert everything to use negative error codes.  The
    caller treats all non-zero returns the same so this does not affect run
    time.
    
    A couple places set "rc" instead of "status" so those error paths ended up
    returning success by mistake.  Get rid of the "rc" variable and use
    "status" everywhere.
    
    Remove the bogus "status = 0" initialization, as a future proofing measure
    so the compiler will warn about uninitialized error codes.
    
    Link: https://lore.kernel.org/r/20210810084753.GD23810@kili
    Fixes: ace7f46ba5fd ("scsi: qedi: Add QLogic FastLinQ offload iSCSI driver framework.")
    Acked-by: Manish Rangankar <mrangankar@marvell.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a90ef02f012a23e2ad38feae051920ecbf7593c3
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Aug 10 11:46:13 2021 +0300

    scsi: smartpqi: Fix an error code in pqi_get_raid_map()
    
    [ Upstream commit d1f6581a6796c4e9fd8a4a24e8b77463d18f0df1 ]
    
    Return -EINVAL on failure instead of success.
    
    Link: https://lore.kernel.org/r/20210810084613.GB23810@kili
    Fixes: a91aaae0243b ("scsi: smartpqi: allow for larger raid maps")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3365d41c04853e937801e5318aca77eb2c0d16e0
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Thu Jul 22 11:39:29 2021 +0800

    pinctrl: single: Fix error return code in pcs_parse_bits_in_pinctrl_entry()
    
    [ Upstream commit d789a490d32fdf0465275e3607f8a3bc87d3f3ba ]
    
    Fix to return -ENOTSUPP instead of 0 when PCS_HAS_PINCONF is true, which
    is the same as that returned in pcs_parse_pinconf().
    
    Fixes: 4e7e8017a80e ("pinctrl: pinctrl-single: enhance to configure multiple pins of different modules")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Link: https://lore.kernel.org/r/20210722033930.4034-2-thunder.leizhen@huawei.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef476b8d5a9c60b1b880fdbf4d4b2395685fdfa5
Author: Wei Li <liwei391@huawei.com>
Date:   Thu Jul 15 11:26:25 2021 +0800

    scsi: fdomain: Fix error return code in fdomain_probe()
    
    [ Upstream commit 632c4ae6da1d629eddf9da1e692d7617c568c256 ]
    
    If request_region() fails the return value is not set. Return -EBUSY on
    error.
    
    Link: https://lore.kernel.org/r/20210715032625.1395495-1-liwei391@huawei.com
    Fixes: 8674a8aa2c39 ("scsi: fdomain: Add PCMCIA support")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Li <liwei391@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ee7b45eddc41e743408bcbc047561f38e11e963
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Jul 26 07:59:23 2021 -0400

    SUNRPC: Fix potential memory corruption
    
    [ Upstream commit c2dc3e5fad13aca5d7bdf4bcb52b1a1d707c8555 ]
    
    We really should not call rpc_wake_up_queued_task_set_status() with
    xprt->snd_task as an argument unless we are certain that is actually an
    rpc_task.
    
    Fixes: 0445f92c5d53 ("SUNRPC: Fix disconnection races")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be09cbd6a35fda58cf3a781a41ffd8fd76586da1
Author: Anthony Iliopoulos <ailiop@suse.com>
Date:   Thu Jul 22 16:10:55 2021 +0200

    dma-debug: fix debugfs initialization order
    
    [ Upstream commit 173735c346c412d9f084825ecb04f24ada0e2986 ]
    
    Due to link order, dma_debug_init is called before debugfs has a chance
    to initialize (via debugfs_init which also happens in the core initcall
    stage), so the directories for dma-debug are never created.
    
    Decouple dma_debug_fs_init from dma_debug_init and defer its init until
    core_initcall_sync (after debugfs has been initialized) while letting
    dma-debug initialization occur as soon as possible to catch any early
    mappings, as suggested in [1].
    
    [1] https://lore.kernel.org/linux-iommu/YIgGa6yF%2Fadg8OSN@kroah.com/
    
    Fixes: 15b28bbcd567 ("dma-debug: move initialization to common code")
    Signed-off-by: Anthony Iliopoulos <ailiop@suse.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9315497b1750e7c316fddfbf46dff8e886c3671c
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Jul 18 19:33:09 2021 -0700

    openrisc: don't printk() unconditionally
    
    [ Upstream commit 946e1052cdcc7e585ee5d1e72528ca49fb295243 ]
    
    Don't call printk() when CONFIG_PRINTK is not set.
    Fixes the following build errors:
    
    or1k-linux-ld: arch/openrisc/kernel/entry.o: in function `_external_irq_handler':
    (.text+0x804): undefined reference to `printk'
    (.text+0x804): relocation truncated to fit: R_OR1K_INSN_REL_26 against undefined symbol `printk'
    
    Fixes: 9d02a4283e9c ("OpenRISC: Boot code")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Jonas Bonn <jonas@southpole.se>
    Cc: Stefan Kristiansson <stefan.kristiansson@saunalahti.fi>
    Cc: Stafford Horne <shorne@gmail.com>
    Cc: openrisc@lists.librecores.org
    Signed-off-by: Stafford Horne <shorne@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f56ee9af23cc60a33b82a83411d34aceca7abfff
Author: Yangtao Li <frank.li@vivo.com>
Date:   Wed Aug 4 11:29:46 2021 +0800

    f2fs: reduce the scope of setting fsck tag when de->name_len is zero
    
    [ Upstream commit d4bf15a7ce172d186d400d606adf4f34a59130d6 ]
    
    I recently found a case where de->name_len is 0 in f2fs_fill_dentries()
    easily reproduced, and finally set the fsck flag.
    
    Thread A                        Thread B
    - f2fs_readdir
     - f2fs_read_inline_dir
      - ctx->pos = d.max
                                    - f2fs_add_dentry
                                     - f2fs_add_inline_entry
                                      - do_convert_inline_dir
                                     - f2fs_add_regular_entry
    - f2fs_readdir
     - f2fs_fill_dentries
      - set_sbi_flag(sbi, SBI_NEED_FSCK)
    
    Process A opens the folder, and has been reading without closing it.
    During this period, Process B created a file under the folder (occupying
    multiple f2fs_dir_entry, exceeding the d.max of the inline dir). After
    creation, process A uses the d.max of inline dir to read it again, and
    it will read that de->name_len is 0.
    
    And Chao pointed out that w/o inline conversion, the race condition still
    can happen as below:
    
    dir_entry1: A
    dir_entry2: B
    dir_entry3: C
    free slot: _
    ctx->pos: ^
    
    Thread A is traversing directory,
    ctx-pos moves to below position after readdir() by thread A:
    AAAABBBB___
            ^
    
    Then thread B delete dir_entry2, and create dir_entry3.
    
    Thread A calls readdir() to lookup dirents starting from middle
    of new dirent slots as below:
    AAAACCCCCC_
            ^
    In these scenarios, the file system is not damaged, and it's hard to
    avoid it. But we can bypass tagging FSCK flag if:
    a) bit_pos (:= ctx->pos % d->max) is non-zero and
    b) before bit_pos moves to first valid dir_entry.
    
    Fixes: ddf06b753a85 ("f2fs: fix to trigger fsck if dirent.name_len is zero")
    Signed-off-by: Yangtao Li <frank.li@vivo.com>
    [Chao: clean up description]
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a2afb6d26c65b1fa38e19613cf4c6c5de81a214
Author: Chao Yu <chao@kernel.org>
Date:   Fri Nov 1 17:53:23 2019 +0800

    f2fs: show f2fs instance in printk_ratelimited
    
    [ Upstream commit c45d6002ff7a322022560e9b19ad867b01fec77f ]
    
    As Eric mentioned, bare printk{,_ratelimited} won't show which
    filesystem instance these message is coming from, this patch tries
    to show fs instance with sb->s_id field in all places we missed
    before.
    
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25ed0498915a02d2a7f14dbb19ba4197c5f58cf7
Author: Leon Romanovsky <leon@kernel.org>
Date:   Fri Jul 23 14:39:45 2021 +0300

    RDMA/efa: Remove double QP type assignment
    
    [ Upstream commit f9193d266347fe9bed5c173e7a1bf96268142a79 ]
    
    The QP type is set by the IB/core and shouldn't be set in the driver.
    
    Fixes: 40909f664d27 ("RDMA/efa: Add EFA verbs implementation")
    Link: https://lore.kernel.org/r/838c40134c1590167b888ca06ad51071139ff2ae.1627040189.git.leonro@nvidia.com
    Acked-by: Gal Pressman <galpress@amazon.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8bb4b28394af67789dfad616c24d5af214d62c6
Author: Michal Suchanek <msuchanek@suse.de>
Date:   Thu Jul 29 20:01:03 2021 +0200

    powerpc/stacktrace: Include linux/delay.h
    
    [ Upstream commit a6cae77f1bc89368a4e2822afcddc45c3062d499 ]
    
    commit 7c6986ade69e ("powerpc/stacktrace: Fix spurious "stale" traces in raise_backtrace_ipi()")
    introduces udelay() call without including the linux/delay.h header.
    This may happen to work on master but the header that declares the
    functionshould be included nonetheless.
    
    Fixes: 7c6986ade69e ("powerpc/stacktrace: Fix spurious "stale" traces in raise_backtrace_ipi()")
    Signed-off-by: Michal Suchanek <msuchanek@suse.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210729180103.15578-1-msuchanek@suse.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02889ac588bd05bacf52625bad30197ebebf0ffd
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Fri Jul 16 15:39:12 2021 -0300

    vfio: Use config not menuconfig for VFIO_NOIOMMU
    
    [ Upstream commit 26c22cfde5dd6e63f25c48458b0185dcb0fbb2fd ]
    
    VFIO_NOIOMMU is supposed to be an element in the VFIO menu, not start
    a new menu. Correct this copy-paste mistake.
    
    Fixes: 03a76b60f8ba ("vfio: Include No-IOMMU mode")
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Link: https://lore.kernel.org/r/0-v1-3f0b685c3679+478-vfio_menuconfig_jgg@nvidia.com
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b900cc48161887eef8e95e1682009e8190adcf4a
Author: Jaehyoung Choi <jkkkkk.choi@samsung.com>
Date:   Fri Jul 30 22:29:05 2021 +0300

    pinctrl: samsung: Fix pinctrl bank pin count
    
    [ Upstream commit 70115558ab02fe8d28a6634350b3491a542aaa02 ]
    
    Commit 1abd18d1a51a ("pinctrl: samsung: Register pinctrl before GPIO")
    changes the order of GPIO and pinctrl registration: now pinctrl is
    registered before GPIO. That means gpio_chip->ngpio is not set when
    samsung_pinctrl_register() called, and one cannot rely on that value
    anymore. Use `pin_bank->nr_pins' instead of `pin_bank->gpio_chip.ngpio'
    to fix mentioned inconsistency.
    
    Fixes: 1abd18d1a51a ("pinctrl: samsung: Register pinctrl before GPIO")
    Signed-off-by: Jaehyoung Choi <jkkkkk.choi@samsung.com>
    Signed-off-by: Sam Protsenko <semen.protsenko@linaro.org>
    Link: https://lore.kernel.org/r/20210730192905.7173-1-semen.protsenko@linaro.org
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e69c28362116c0319faff84147aa98dc3be67dec
Author: Leon Romanovsky <leon@kernel.org>
Date:   Wed Jul 28 16:04:12 2021 +0300

    docs: Fix infiniband uverbs minor number
    
    [ Upstream commit 8d7e415d55610d503fdb8815344846b72d194a40 ]
    
    Starting from the beginning of infiniband subsystem, the uverbs char
    devices start from 192 as a minor number, see
    commit bc38a6abdd5a ("[PATCH] IB uverbs: core implementation").
    
    This patch updates the admin guide documentation to reflect it.
    
    Fixes: 9d85025b0418 ("docs-rst: create an user's manual book")
    Link: https://lore.kernel.org/r/bad03e6bcde45550c01e12908a6fe7dfa4770703.1627477347.git.leonro@nvidia.com
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb42b9801e0ad772d1e19608ed86c754d0ba722f
Author: Leon Romanovsky <leon@kernel.org>
Date:   Fri Jul 23 17:08:55 2021 +0300

    RDMA/iwcm: Release resources if iw_cm module initialization fails
    
    [ Upstream commit e677b72a0647249370f2635862bf0241c86f66ad ]
    
    The failure during iw_cm module initialization partially left the system
    with unreleased memory and other resources. Rewrite the module init/exit
    routines in such way that netlink commands will be opened only after
    successful initialization.
    
    Fixes: b493d91d333e ("iwcm: common code for port mapper")
    Link: https://lore.kernel.org/r/b01239f99cb1a3e6d2b0694c242d89e6410bcd93.1627048781.git.leonro@nvidia.com
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7930b1f98dd884cfa54d2749e2c194fe8d2abe9b
Author: Mike Marciniszyn <mike.marciniszyn@cornelisnetworks.com>
Date:   Thu Jul 15 12:04:45 2021 -0400

    IB/hfi1: Adjust pkey entry in index 0
    
    [ Upstream commit 62004871e1fa7f9a60797595c03477af5b5ec36f ]
    
    It is possible for the primary IPoIB network device associated with any
    RDMA device to fail to join certain multicast groups preventing IPv6
    neighbor discovery and possibly other network ULPs from working
    correctly. The IPv4 broadcast group is not affected as the IPoIB network
    device handles joining that multicast group directly.
    
    This is because the primary IPoIB network device uses the pkey at ndex 0
    in the associated RDMA device's pkey table. Anytime the pkey value of
    index 0 changes, the primary IPoIB network device automatically modifies
    it's broadcast address (i.e. /sys/class/net/[ib0]/broadcast), since the
    broadcast address includes the pkey value, and then bounces carrier. This
    includes initial pkey assignment, such as when the pkey at index 0
    transitions from the opa default of invalid (0x0000) to some value such as
    the OPA default pkey for Virtual Fabric 0: 0x8001 or when the fabric
    manager is restarted with a configuration change causing the pkey at index
    0 to change. Many network ULPs are not sensitive to the carrier bounce and
    are not expecting the broadcast address to change including the linux IPv6
    stack.  This problem does not affect IPoIB child network devices as their
    pkey value is constant for all time.
    
    To mitigate this issue, change the default pkey in at index 0 to 0x8001 to
    cover the predominant case and avoid issues as ipoib comes up and the FM
    sweeps.
    
    At some point, ipoib multicast support should automatically fix
    non-broadcast addresses as it does with the primary broadcast address.
    
    Fixes: 7724105686e7 ("IB/hfi1: add driver files")
    Link: https://lore.kernel.org/r/20210715160445.142451.47651.stgit@awfm-01.cornelisnetworks.com
    Suggested-by: Josh Collier <josh.d.collier@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@cornelisnetworks.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b1addd585a49c80e2ba7428c32cca9c9952b090
Author: Christoph Hellwig <hch@lst.de>
Date:   Sat Jul 24 09:20:10 2021 +0200

    scsi: bsg: Remove support for SCSI_IOCTL_SEND_COMMAND
    
    [ Upstream commit beec64d0c9749afedf51c3c10cf52de1d9a89cc0 ]
    
    SCSI_IOCTL_SEND_COMMAND has been deprecated longer than bsg exists and has
    been warning for just as long.  More importantly it harcodes SCSI CDBs and
    thus will do the wrong thing on non-SCSI bsg nodes.
    
    Link: https://lore.kernel.org/r/20210724072033.1284840-2-hch@lst.de
    Fixes: aa387cc89567 ("block: add bsg helper library")
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Acked-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a02982545e61020c23f411b073ba5171381138e4
Author: Chao Yu <chao@kernel.org>
Date:   Mon Jul 19 16:46:47 2021 +0800

    f2fs: quota: fix potential deadlock
    
    [ Upstream commit 9de71ede81e6d1a111fdd868b2d78d459fa77f80 ]
    
    xfstest generic/587 reports a deadlock issue as below:
    
    ======================================================
    WARNING: possible circular locking dependency detected
    5.14.0-rc1 #69 Not tainted
    ------------------------------------------------------
    repquota/8606 is trying to acquire lock:
    ffff888022ac9320 (&sb->s_type->i_mutex_key#18){+.+.}-{3:3}, at: f2fs_quota_sync+0x207/0x300 [f2fs]
    
    but task is already holding lock:
    ffff8880084bcde8 (&sbi->quota_sem){.+.+}-{3:3}, at: f2fs_quota_sync+0x59/0x300 [f2fs]
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #2 (&sbi->quota_sem){.+.+}-{3:3}:
           __lock_acquire+0x648/0x10b0
           lock_acquire+0x128/0x470
           down_read+0x3b/0x2a0
           f2fs_quota_sync+0x59/0x300 [f2fs]
           f2fs_quota_on+0x48/0x100 [f2fs]
           do_quotactl+0x5e3/0xb30
           __x64_sys_quotactl+0x23a/0x4e0
           do_syscall_64+0x3b/0x90
           entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    -> #1 (&sbi->cp_rwsem){++++}-{3:3}:
           __lock_acquire+0x648/0x10b0
           lock_acquire+0x128/0x470
           down_read+0x3b/0x2a0
           f2fs_unlink+0x353/0x670 [f2fs]
           vfs_unlink+0x1c7/0x380
           do_unlinkat+0x413/0x4b0
           __x64_sys_unlinkat+0x50/0xb0
           do_syscall_64+0x3b/0x90
           entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    -> #0 (&sb->s_type->i_mutex_key#18){+.+.}-{3:3}:
           check_prev_add+0xdc/0xb30
           validate_chain+0xa67/0xb20
           __lock_acquire+0x648/0x10b0
           lock_acquire+0x128/0x470
           down_write+0x39/0xc0
           f2fs_quota_sync+0x207/0x300 [f2fs]
           do_quotactl+0xaff/0xb30
           __x64_sys_quotactl+0x23a/0x4e0
           do_syscall_64+0x3b/0x90
           entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    other info that might help us debug this:
    
    Chain exists of:
      &sb->s_type->i_mutex_key#18 --> &sbi->cp_rwsem --> &sbi->quota_sem
    
     Possible unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock(&sbi->quota_sem);
                                   lock(&sbi->cp_rwsem);
                                   lock(&sbi->quota_sem);
      lock(&sb->s_type->i_mutex_key#18);
    
     *** DEADLOCK ***
    
    3 locks held by repquota/8606:
     #0: ffff88801efac0e0 (&type->s_umount_key#53){++++}-{3:3}, at: user_get_super+0xd9/0x190
     #1: ffff8880084bc380 (&sbi->cp_rwsem){++++}-{3:3}, at: f2fs_quota_sync+0x3e/0x300 [f2fs]
     #2: ffff8880084bcde8 (&sbi->quota_sem){.+.+}-{3:3}, at: f2fs_quota_sync+0x59/0x300 [f2fs]
    
    stack backtrace:
    CPU: 6 PID: 8606 Comm: repquota Not tainted 5.14.0-rc1 #69
    Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006
    Call Trace:
     dump_stack_lvl+0xce/0x134
     dump_stack+0x17/0x20
     print_circular_bug.isra.0.cold+0x239/0x253
     check_noncircular+0x1be/0x1f0
     check_prev_add+0xdc/0xb30
     validate_chain+0xa67/0xb20
     __lock_acquire+0x648/0x10b0
     lock_acquire+0x128/0x470
     down_write+0x39/0xc0
     f2fs_quota_sync+0x207/0x300 [f2fs]
     do_quotactl+0xaff/0xb30
     __x64_sys_quotactl+0x23a/0x4e0
     do_syscall_64+0x3b/0x90
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x7f883b0b4efe
    
    The root cause is ABBA deadlock of inode lock and cp_rwsem,
    reorder locks in f2fs_quota_sync() as below to fix this issue:
    - lock inode
    - lock cp_rwsem
    - lock quota_sem
    
    Fixes: db6ec53b7e03 ("f2fs: add a rw_sem to cover quota flag changes")
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd74d6de0b9e5bef0fab141dfa4a56f18e448a1a
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Tue Jun 29 11:25:50 2021 -0700

    HID: input: do not report stylus battery state as "full"
    
    [ Upstream commit f4abaa9eebde334045ed6ac4e564d050f1df3013 ]
    
    The power supply states of discharging, charging, full, etc, represent
    state of charging, not the capacity level of the battery (for which
    we have a separate property). Current HID usage tables to not allow
    for expressing charging state of the batteries found in generic
    styli, so we should simply assume that the battery is discharging
    even if current capacity is at 100% when battery strength reporting
    is done via HID interface. In fact, we were doing just that before
    commit 581c4484769e.
    
    This change helps UIs to not mis-represent fully charged batteries in
    styli as being charging/topping-off.
    
    Fixes: 581c4484769e ("HID: input: map digitizer battery usage")
    Reported-by: Kenneth Albanowski <kenalba@google.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0656eb5e7ed8d6c48ca0231044531f5060e9b155
Author: Pali Rohár <pali@kernel.org>
Date:   Fri Aug 20 17:50:20 2021 +0200

    PCI: aardvark: Fix masking and unmasking legacy INTx interrupts
    
    commit d212dcee27c1f89517181047e5485fcbba4a25c2 upstream.
    
    irq_mask and irq_unmask callbacks need to be properly guarded by raw spin
    locks as masking/unmasking procedure needs atomic read-modify-write
    operation on hardware register.
    
    Link: https://lore.kernel.org/r/20210820155020.3000-1-pali@kernel.org
    Reported-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Acked-by: Marc Zyngier <maz@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b58db229eb617d97d5746113b77045f1f884bcb
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Jul 22 16:40:39 2021 +0200

    PCI: aardvark: Increase polling delay to 1.5s while waiting for PIO response
    
    commit 02bcec3ea5591720114f586960490b04b093a09e upstream.
    
    Measurements in different conditions showed that aardvark hardware PIO
    response can take up to 1.44s. Increase wait timeout from 1ms to 1.5s to
    ensure that we do not miss responses from hardware. After 1.44s hardware
    returns errors (e.g. Completer abort).
    
    The previous two patches fixed checking for PIO status, so now we can use
    it to also catch errors which are reported by hardware after 1.44s.
    
    After applying this patch, kernel can detect and print PIO errors to dmesg:
    
        [    6.879999] advk-pcie d0070000.pcie: Non-posted PIO Response Status: CA, 0xe00 @ 0x100004
        [    6.896436] advk-pcie d0070000.pcie: Posted PIO Response Status: COMP_ERR, 0x804 @ 0x100004
        [    6.913049] advk-pcie d0070000.pcie: Posted PIO Response Status: COMP_ERR, 0x804 @ 0x100010
        [    6.929663] advk-pcie d0070000.pcie: Non-posted PIO Response Status: CA, 0xe00 @ 0x100010
        [    6.953558] advk-pcie d0070000.pcie: Posted PIO Response Status: COMP_ERR, 0x804 @ 0x100014
        [    6.970170] advk-pcie d0070000.pcie: Non-posted PIO Response Status: CA, 0xe00 @ 0x100014
        [    6.994328] advk-pcie d0070000.pcie: Posted PIO Response Status: COMP_ERR, 0x804 @ 0x100004
    
    Without this patch kernel prints only a generic error to dmesg:
    
        [    5.246847] advk-pcie d0070000.pcie: config read/write timed out
    
    Link: https://lore.kernel.org/r/20210722144041.12661-3-pali@kernel.org
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Cc: stable@vger.kernel.org # 7fbcb5da811b ("PCI: aardvark: Don't rely on jiffies while holding spinlock")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f39f8429c82152650ab679b4f9c238ff2db54ee
Author: Evan Wang <xswang@marvell.com>
Date:   Thu Jul 22 16:40:38 2021 +0200

    PCI: aardvark: Fix checking for PIO status
    
    commit fcb461e2bc8b83b7eaca20cb2221e8b940f2189c upstream.
    
    There is an issue that when PCIe switch is connected to an Armada 3700
    board, there will be lots of warnings about PIO errors when reading the
    config space. According to Aardvark PIO read and write sequence in HW
    specification, the current way to check PIO status has the following
    issues:
    
    1) For PIO read operation, it reports the error message, which should be
       avoided according to HW specification.
    
    2) For PIO read and write operations, it only checks PIO operation complete
       status, which is not enough, and error status should also be checked.
    
    This patch aligns the code with Aardvark PIO read and write sequence in HW
    specification on PIO status check and fix the warnings when reading config
    space.
    
    [pali: Fix CRS handling when CRSSVE is not enabled]
    
    Link: https://lore.kernel.org/r/20210722144041.12661-2-pali@kernel.org
    Tested-by: Victor Gu <xigu@marvell.com>
    Signed-off-by: Evan Wang <xswang@marvell.com>
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Victor Gu <xigu@marvell.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Cc: stable@vger.kernel.org # b1bd5714472c ("PCI: aardvark: Indicate error in 'val' when config read fails")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d810fa6f5f0f59ea4ed6c7109dd09e6885b17923
Author: Hyun Kwon <hyun.kwon@xilinx.com>
Date:   Fri Jun 25 12:48:23 2021 +0200

    PCI: xilinx-nwl: Enable the clock through CCF
    
    commit de0a01f5296651d3a539f2d23d0db8f359483696 upstream.
    
    Enable PCIe reference clock. There is no remove function that's why
    this should be enough for simple operation.
    Normally this clock is enabled by default by firmware but there are
    usecases where this clock should be enabled by driver itself.
    It is also good that PCIe clock is recorded in a clock framework.
    
    Link: https://lore.kernel.org/r/ee6997a08fab582b1c6de05f8be184f3fe8d5357.1624618100.git.michal.simek@xilinx.com
    Fixes: ab597d35ef11 ("PCI: xilinx-nwl: Add support for Xilinx NWL PCIe Host Controller")
    Signed-off-by: Hyun Kwon <hyun.kwon@xilinx.com>
    Signed-off-by: Bharat Kumar Gogada <bharat.kumar.gogada@xilinx.com>
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d43ad02ad3a88c7ad48969f8458cb0559ac4e75a
Author: Krzysztof Wilczyński <kw@linux.com>
Date:   Thu Jul 29 23:37:54 2021 +0000

    PCI: Return ~0 data on pciconfig_read() CAP_SYS_ADMIN failure
    
    commit a8bd29bd49c4156ea0ec5a97812333e2aeef44e7 upstream.
    
    The pciconfig_read() syscall reads PCI configuration space using
    hardware-dependent config accessors.
    
    If the read fails on PCI, most accessors don't return an error; they
    pretend the read was successful and got ~0 data from the device, so the
    syscall returns success with ~0 data in the buffer.
    
    When the accessor does return an error, pciconfig_read() normally fills the
    user's buffer with ~0 and returns an error in errno.  But after
    e4585da22ad0 ("pci syscall.c: Switch to refcounting API"), we don't fill
    the buffer with ~0 for the EPERM "user lacks CAP_SYS_ADMIN" error.
    
    Userspace may rely on the ~0 data to detect errors, but after e4585da22ad0,
    that would not detect CAP_SYS_ADMIN errors.
    
    Restore the original behaviour of filling the buffer with ~0 when the
    CAP_SYS_ADMIN check fails.
    
    [bhelgaas: commit log, fold in Nathan's fix
    https://lore.kernel.org/r/20210803200836.500658-1-nathan@kernel.org]
    Fixes: e4585da22ad0 ("pci syscall.c: Switch to refcounting API")
    Link: https://lore.kernel.org/r/20210729233755.1509616-1-kw@linux.com
    Signed-off-by: Krzysztof Wilczyński <kw@linux.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3aa6d023c6d63cfad5a6dded7510b710abd8fca5
Author: Marek Behún <kabel@kernel.org>
Date:   Thu Jun 24 19:14:18 2021 +0200

    PCI: Restrict ASMedia ASM1062 SATA Max Payload Size Supported
    
    commit b12d93e9958e028856cbcb061b6e64728ca07755 upstream.
    
    The ASMedia ASM1062 SATA controller advertises Max_Payload_Size_Supported
    of 512, but in fact it cannot handle incoming TLPs with payload size of
    512.
    
    We discovered this issue on PCIe controllers capable of MPS = 512 (Aardvark
    and DesignWare), where the issue presents itself as an External Abort.
    Bjorn Helgaas says:
    
      Probably ASM1062 reports a Malformed TLP error when it receives a data
      payload of 512 bytes, and Aardvark, DesignWare, etc convert this to an
      arm64 External Abort. [1]
    
    To avoid this problem, limit the ASM1062 Max Payload Size Supported to 256
    bytes, so we set the Max Payload Size of devices that may send TLPs to the
    ASM1062 to 256 or less.
    
    [1] https://lore.kernel.org/linux-pci/20210601170907.GA1949035@bjorn-Precision-5520/
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=212695
    Link: https://lore.kernel.org/r/20210624171418.27194-2-kabel@kernel.org
    Reported-by: Rötti <espressobinboardarmbiantempmailaddress@posteo.de>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Krzysztof Wilczyński <kw@linux.com>
    Reviewed-by: Pali Rohár <pali@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d2bc69df9fac125e2c3cc9726b1b4609c4d16c2
Author: Stuart Hayes <stuart.w.hayes@gmail.com>
Date:   Thu May 13 03:03:14 2021 +0530

    PCI/portdrv: Enable Bandwidth Notification only if port supports it
    
    commit 00823dcbdd415c868390feaca16f0265101efab4 upstream.
    
    Previously we assumed that all Root Ports and Switch Downstream Ports
    supported Link Bandwidth Notification.  Per spec, this is only required
    for Ports supporting Links wider than x1 and/or multiple Link speeds
    (PCIe r5.0, sec 7.5.3.6).
    
    Because we assumed all Ports supported it, we tried to set up a Bandwidth
    Notification IRQ, which failed for devices that don't support IRQs at all,
    which meant pcieport didn't attach to the Port at all.
    
    Check the Link Bandwidth Notification Capability bit and enable the service
    only when the Port supports it.
    
    [bhelgaas: commit log]
    Fixes: e8303bb7a75c ("PCI/LINK: Report degraded links via link bandwidth notification")
    Link: https://lore.kernel.org/r/20210512213314.7778-1-stuart.w.hayes@gmail.com
    Signed-off-by: Stuart Hayes <stuart.w.hayes@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Lukas Wunner <lukas@wunner.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0445da50b727138acf5f483d39a53bd1537ae1ff
Author: David Heidelberg <david@ixit.cz>
Date:   Mon Aug 9 19:07:30 2021 +0100

    ARM: 9105/1: atags_to_fdt: don't warn about stack size
    
    commit b30d0289de72c62516df03fdad8d53f552c69839 upstream.
    
    The merge_fdt_bootargs() function by definition consumes more than 1024
    bytes of stack because it has a 1024 byte command line on the stack,
    meaning that we always get a warning when building this file:
    
    arch/arm/boot/compressed/atags_to_fdt.c: In function 'merge_fdt_bootargs':
    arch/arm/boot/compressed/atags_to_fdt.c:98:1: warning: the frame size of 1032 bytes is larger than 1024 bytes [-Wframe-larger-than=]
    
    However, as this is the decompressor and we know that it has a very shallow
    call chain, and we do not actually risk overflowing the kernel stack
    at runtime here.
    
    This just shuts up the warning by disabling the warning flag for this
    file.
    
    Tested on Nexus 7 2012 builds.
    
    Acked-by: Nicolas Pitre <nico@fluxnic.net>
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ec08f1431ce32951832205380054568cb6a592f
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Aug 23 11:52:20 2021 +0200

    libata: add ATA_HORKAGE_NO_NCQ_TRIM for Samsung 860 and 870 SSDs
    
    commit 8a6430ab9c9c87cb64c512e505e8690bbaee190b upstream.
    
    Commit ca6bfcb2f6d9 ("libata: Enable queued TRIM for Samsung SSD 860")
    limited the existing ATA_HORKAGE_NO_NCQ_TRIM quirk from "Samsung SSD 8*",
    covering all Samsung 800 series SSDs, to only apply to "Samsung SSD 840*"
    and "Samsung SSD 850*" series based on information from Samsung.
    
    But there is a large number of users which is still reporting issues
    with the Samsung 860 and 870 SSDs combined with Intel, ASmedia or
    Marvell SATA controllers and all reporters also report these problems
    going away when disabling queued trims.
    
    Note that with AMD SATA controllers users are reporting even worse
    issues and only completely disabling NCQ helps there, this will be
    addressed in a separate patch.
    
    Fixes: ca6bfcb2f6d9 ("libata: Enable queued TRIM for Samsung SSD 860")
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=203475
    Cc: stable@vger.kernel.org
    Cc: Kate Hsuan <hpa@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
    Link: https://lore.kernel.org/r/20210823095220.30157-1-hdegoede@redhat.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cfbf391e87087eb92abeb5561a1eb86eb967bbf
Author: Robin Gong <yibin.gong@nxp.com>
Date:   Wed Jul 14 18:20:44 2021 +0800

    dmaengine: imx-sdma: remove duplicated sdma_load_context
    
    commit e555a03b112838883fdd8185d613c35d043732f2 upstream.
    
    Since sdma_transfer_init() will do sdma_load_context before any
    sdma transfer, no need once more in sdma_config_channel().
    
    Fixes: ad0d92d7ba6a ("dmaengine: imx-sdma: refine to load context only once")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Robin Gong <yibin.gong@nxp.com>
    Acked-by: Vinod Koul <vkoul@kernel.org>
    Tested-by: Richard Leitner <richard.leitner@skidata.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 788122c99d858aba215090f9d98fa9504faee1cd
Author: Robin Gong <yibin.gong@nxp.com>
Date:   Wed Jul 14 18:20:43 2021 +0800

    Revert "dmaengine: imx-sdma: refine to load context only once"
    
    commit 8592f02464d52776c5cfae4627c6413b0ae7602d upstream.
    
    This reverts commit ad0d92d7ba6aecbe2705907c38ff8d8be4da1e9c, because
    in spi-imx case, burst length may be changed dynamically.
    
    Fixes: ad0d92d7ba6a ("dmaengine: imx-sdma: refine to load context only once")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Robin Gong <yibin.gong@nxp.com>
    Acked-by: Sascha Hauer <s.hauer@pengutronix.de>
    Tested-by: Richard Leitner <richard.leitner@skidata.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86e1abcd143f3e2cfea4515444c1a0971e39a004
Author: Sean Young <sean@mess.org>
Date:   Sat Jul 3 15:37:17 2021 +0200

    media: rc-loopback: return number of emitters rather than error
    
    commit 6b7f554be8c92319d7e6df92fd247ebb9beb4a45 upstream.
    
    The LIRC_SET_TRANSMITTER_MASK ioctl should return the number of emitters
    if an invalid list was set.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d91046f6b4eaa6264e15ec1476c1f4d339d52b2
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Date:   Thu Jun 17 14:33:29 2021 +0200

    media: uvc: don't do DMA on stack
    
    commit 1a10d7fdb6d0e235e9d230916244cc2769d3f170 upstream.
    
    As warned by smatch:
            drivers/media/usb/uvc/uvc_v4l2.c:911 uvc_ioctl_g_input() error: doing dma on the stack (&i)
            drivers/media/usb/uvc/uvc_v4l2.c:943 uvc_ioctl_s_input() error: doing dma on the stack (&i)
    
    those two functions call uvc_query_ctrl passing a pointer to
    a data at the DMA stack. those are used to send URBs via
    usb_control_msg(). Using DMA stack is not supported and should
    not work anymore on modern Linux versions.
    
    So, use a kmalloc'ed buffer.
    
    Cc: stable@vger.kernel.org      # Kernel 4.9 and upper
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ccb1fa41f4c5f4972c83aa0dfbc70f0b9a38bd6
Author: Wang Hai <wanghai38@huawei.com>
Date:   Wed Aug 18 20:48:45 2021 +0800

    VMCI: fix NULL pointer dereference when unmapping queue pair
    
    commit a30dc6cf0dc51419021550152e435736aaef8799 upstream.
    
    I got a NULL pointer dereference report when doing fuzz test:
    
    Call Trace:
      qp_release_pages+0xae/0x130
      qp_host_unregister_user_memory.isra.25+0x2d/0x80
      vmci_qp_broker_unmap+0x191/0x320
      ? vmci_host_do_alloc_queuepair.isra.9+0x1c0/0x1c0
      vmci_host_unlocked_ioctl+0x59f/0xd50
      ? do_vfs_ioctl+0x14b/0xa10
      ? tomoyo_file_ioctl+0x28/0x30
      ? vmci_host_do_alloc_queuepair.isra.9+0x1c0/0x1c0
      __x64_sys_ioctl+0xea/0x120
      do_syscall_64+0x34/0xb0
      entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    When a queue pair is created by the following call, it will not
    register the user memory if the page_store is NULL, and the
    entry->state will be set to VMCIQPB_CREATED_NO_MEM.
    
    vmci_host_unlocked_ioctl
      vmci_host_do_alloc_queuepair
        vmci_qp_broker_alloc
          qp_broker_alloc
            qp_broker_create // set entry->state = VMCIQPB_CREATED_NO_MEM;
    
    When unmapping this queue pair, qp_host_unregister_user_memory() will
    be called to unregister the non-existent user memory, which will
    result in a null pointer reference. It will also change
    VMCIQPB_CREATED_NO_MEM to VMCIQPB_CREATED_MEM, which should not be
    present in this operation.
    
    Only when the qp broker has mem, it can unregister the user
    memory when unmapping the qp broker.
    
    Only when the qp broker has no mem, it can register the user
    memory when mapping the qp broker.
    
    Fixes: 06164d2b72aa ("VMCI: queue pairs implementation.")
    Cc: stable <stable@vger.kernel.org>
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Reviewed-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Link: https://lore.kernel.org/r/20210818124845.488312-1-wanghai38@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80d167590330a2d95b2d358e2a26e22ecfcf2530
Author: Arne Welzel <arne.welzel@corelight.com>
Date:   Sat Aug 14 00:40:38 2021 +0200

    dm crypt: Avoid percpu_counter spinlock contention in crypt_page_alloc()
    
    commit 528b16bfc3ae5f11638e71b3b63a81f9999df727 upstream.
    
    On systems with many cores using dm-crypt, heavy spinlock contention in
    percpu_counter_compare() can be observed when the page allocation limit
    for a given device is reached or close to be reached. This is due
    to percpu_counter_compare() taking a spinlock to compute an exact
    result on potentially many CPUs at the same time.
    
    Switch to non-exact comparison of allocated and allowed pages by using
    the value returned by percpu_counter_read_positive() to avoid taking
    the percpu_counter spinlock.
    
    This may over/under estimate the actual number of allocated pages by at
    most (batch-1) * num_online_cpus().
    
    Currently, batch is bounded by 32. The system on which this issue was
    first observed has 256 CPUs and 512GB of RAM. With a 4k page size, this
    change may over/under estimate by 31MB. With ~10G (2%) allowed dm-crypt
    allocations, this seems an acceptable error. Certainly preferred over
    running into the spinlock contention.
    
    This behavior was reproduced on an EC2 c5.24xlarge instance with 96 CPUs
    and 192GB RAM as follows, but can be provoked on systems with less CPUs
    as well.
    
     * Disable swap
     * Tune vm settings to promote regular writeback
         $ echo 50 > /proc/sys/vm/dirty_expire_centisecs
         $ echo 25 > /proc/sys/vm/dirty_writeback_centisecs
         $ echo $((128 * 1024 * 1024)) > /proc/sys/vm/dirty_background_bytes
    
     * Create 8 dmcrypt devices based on files on a tmpfs
     * Create and mount an ext4 filesystem on each crypt devices
     * Run stress-ng --hdd 8 within one of above filesystems
    
    Total %system usage collected from sysstat goes to ~35%. Write throughput
    on the underlying loop device is ~2GB/s. perf profiling an individual
    kworker kcryptd thread shows the following profile, indicating spinlock
    contention in percpu_counter_compare():
    
        99.98%     0.00%  kworker/u193:46  [kernel.kallsyms]  [k] ret_from_fork
          |
          --ret_from_fork
            kthread
            worker_thread
            |
             --99.92%--process_one_work
                |
                |--80.52%--kcryptd_crypt
                |    |
                |    |--62.58%--mempool_alloc
                |    |  |
                |    |   --62.24%--crypt_page_alloc
                |    |     |
                |    |      --61.51%--__percpu_counter_compare
                |    |        |
                |    |         --61.34%--__percpu_counter_sum
                |    |           |
                |    |           |--58.68%--_raw_spin_lock_irqsave
                |    |           |  |
                |    |           |   --58.30%--native_queued_spin_lock_slowpath
                |    |           |
                |    |            --0.69%--cpumask_next
                |    |                |
                |    |                 --0.51%--_find_next_bit
                |    |
                |    |--10.61%--crypt_convert
                |    |          |
                |    |          |--6.05%--xts_crypt
                ...
    
    After applying this patch and running the same test, %system usage is
    lowered to ~7% and write throughput on the loop device increases
    to ~2.7GB/s. perf report shows mempool_alloc() as ~8% rather than ~62%
    in the profile and not hitting the percpu_counter() spinlock anymore.
    
        |--8.15%--mempool_alloc
        |    |
        |    |--3.93%--crypt_page_alloc
        |    |    |
        |    |     --3.75%--__alloc_pages
        |    |         |
        |    |          --3.62%--get_page_from_freelist
        |    |              |
        |    |               --3.22%--rmqueue_bulk
        |    |                   |
        |    |                    --2.59%--_raw_spin_lock
        |    |                      |
        |    |                       --2.57%--native_queued_spin_lock_slowpath
        |    |
        |     --3.05%--_raw_spin_lock_irqsave
        |               |
        |                --2.49%--native_queued_spin_lock_slowpath
    
    Suggested-by: DJ Gregor <dj@corelight.com>
    Reviewed-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Arne Welzel <arne.welzel@corelight.com>
    Fixes: 5059353df86e ("dm crypt: limit the number of allocated pages")
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6d4ac3f861b9318e43cddca30e0e5c1b02da332
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Mon Aug 16 10:27:14 2021 +0200

    power: supply: max17042: handle fails of reading status register
    
    commit 54784ffa5b267f57161eb8fbb811499f22a0a0bf upstream.
    
    Reading status register can fail in the interrupt handler.  In such
    case, the regmap_read() will not store anything useful under passed
    'val' variable and random stack value will be used to determine type of
    interrupt.
    
    Handle the regmap_read() failure to avoid handling interrupt type and
    triggering changed power supply event based on random stack value.
    
    Fixes: 39e7213edc4f ("max17042_battery: Support regmap to access device's registers")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 668370dd4c904350070b43734b16d4d118acc4a4
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Wed Aug 11 12:36:57 2021 +0900

    block: bfq: fix bfq_set_next_ioprio_data()
    
    commit a680dd72ec336b81511e3bff48efac6dbfa563e7 upstream.
    
    For a request that has a priority level equal to or larger than
    IOPRIO_BE_NR, bfq_set_next_ioprio_data() prints a critical warning but
    defaults to setting the request new_ioprio field to IOPRIO_BE_NR. This
    is not consistent with the warning and the allowed values for priority
    levels. Fix this by setting the request new_ioprio field to
    IOPRIO_BE_NR - 1, the lowest priority level allowed.
    
    Cc: <stable@vger.kernel.org>
    Fixes: aee69d78dec0 ("block, bfq: introduce the BFQ-v0 I/O scheduler as an extra scheduler")
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Link: https://lore.kernel.org/r/20210811033702.368488-2-damien.lemoal@wdc.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfdd25cd426dd4247d13087fb7f0ac5d8c6a4d4e
Author: zhenwei pi <pizhenwei@bytedance.com>
Date:   Thu Aug 19 20:37:10 2021 +0800

    crypto: public_key: fix overflow during implicit conversion
    
    commit f985911b7bc75d5c98ed24d8aaa8b94c590f7c6a upstream.
    
    Hit kernel warning like this, it can be reproduced by verifying 256
    bytes datafile by keyctl command, run script:
    RAWDATA=rawdata
    SIGDATA=sigdata
    
    modprobe pkcs8_key_parser
    
    rm -rf *.der *.pem *.pfx
    rm -rf $RAWDATA
    dd if=/dev/random of=$RAWDATA bs=256 count=1
    
    openssl req -nodes -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem \
      -subj "/C=CN/ST=GD/L=SZ/O=vihoo/OU=dev/CN=xx.com/emailAddress=yy@xx.com"
    
    KEY_ID=`openssl pkcs8 -in key.pem -topk8 -nocrypt -outform DER | keyctl \
      padd asymmetric 123 @s`
    
    keyctl pkey_sign $KEY_ID 0 $RAWDATA enc=pkcs1 hash=sha1 > $SIGDATA
    keyctl pkey_verify $KEY_ID 0 $RAWDATA $SIGDATA enc=pkcs1 hash=sha1
    
    Then the kernel reports:
     WARNING: CPU: 5 PID: 344556 at crypto/rsa-pkcs1pad.c:540
       pkcs1pad_verify+0x160/0x190
     ...
     Call Trace:
      public_key_verify_signature+0x282/0x380
      ? software_key_query+0x12d/0x180
      ? keyctl_pkey_params_get+0xd6/0x130
      asymmetric_key_verify_signature+0x66/0x80
      keyctl_pkey_verify+0xa5/0x100
      do_syscall_64+0x35/0xb0
      entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    The reason of this issue, in function 'asymmetric_key_verify_signature':
    '.digest_size(u8) = params->in_len(u32)' leads overflow of an u8 value,
    so use u32 instead of u8 for digest_size field. And reorder struct
    public_key_signature, it saves 8 bytes on a 64-bit machine.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: zhenwei pi <pizhenwei@bytedance.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3411b481ed24bda8dd6c71bca1771d8e5135f171
Author: Mark Rutland <mark.rutland@arm.com>
Date:   Mon Aug 23 11:12:53 2021 +0100

    arm64: head: avoid over-mapping in map_memory
    
    commit 90268574a3e8a6b883bd802d702a2738577e1006 upstream.
    
    The `compute_indices` and `populate_entries` macros operate on inclusive
    bounds, and thus the `map_memory` macro which uses them also operates
    on inclusive bounds.
    
    We pass `_end` and `_idmap_text_end` to `map_memory`, but these are
    exclusive bounds, and if one of these is sufficiently aligned (as a
    result of kernel configuration, physical placement, and KASLR), then:
    
    * In `compute_indices`, the computed `iend` will be in the page/block *after*
      the final byte of the intended mapping.
    
    * In `populate_entries`, an unnecessary entry will be created at the end
      of each level of table. At the leaf level, this entry will map up to
      SWAPPER_BLOCK_SIZE bytes of physical addresses that we did not intend
      to map.
    
    As we may map up to SWAPPER_BLOCK_SIZE bytes more than intended, we may
    violate the boot protocol and map physical address past the 2MiB-aligned
    end address we are permitted to map. As we map these with Normal memory
    attributes, this may result in further problems depending on what these
    physical addresses correspond to.
    
    The final entry at each level may require an additional table at that
    level. As EARLY_ENTRIES() calculates an inclusive bound, we allocate
    enough memory for this.
    
    Avoid the extraneous mapping by having map_memory convert the exclusive
    end address to an inclusive end address by subtracting one, and do
    likewise in EARLY_ENTRIES() when calculating the number of required
    tables. For clarity, comments are updated to more clearly document which
    boundaries the macros operate on.  For consistency with the other
    macros, the comments in map_memory are also updated to describe `vstart`
    and `vend` as virtual addresses.
    
    Fixes: 0370b31e4845 ("arm64: Extend early page table code to allow for larger kernels")
    Cc: <stable@vger.kernel.org> # 4.16.x
    Signed-off-by: Mark Rutland <mark.rutland@arm.com>
    Cc: Anshuman Khandual <anshuman.khandual@arm.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Steve Capper <steve.capper@arm.com>
    Cc: Will Deacon <will@kernel.org>
    Acked-by: Will Deacon <will@kernel.org>
    Link: https://lore.kernel.org/r/20210823101253.55567-1-mark.rutland@arm.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 991b64b89b661c1d567c5737f37fd7a423ea12ba
Author: Iwona Winiarska <iwona.winiarska@intel.com>
Date:   Wed Aug 4 01:48:19 2021 +0200

    soc: aspeed: p2a-ctrl: Fix boundary check for mmap
    
    commit 8b07e990fb254fcbaa919616ac77f981cb48c73d upstream.
    
    The check mixes pages (vm_pgoff) with bytes (vm_start, vm_end) on one
    side of the comparison, and uses resource address (rather than just the
    resource size) on the other side of the comparison.
    This can allow malicious userspace to easily bypass the boundary check and
    map pages that are located outside memory-region reserved by the driver.
    
    Fixes: 01c60dcea9f7 ("drivers/misc: Add Aspeed P2A control driver")
    Cc: stable@vger.kernel.org
    Signed-off-by: Iwona Winiarska <iwona.winiarska@intel.com>
    Reviewed-by: Andrew Jeffery <andrew@aj.id.au>
    Tested-by: Andrew Jeffery <andrew@aj.id.au>
    Reviewed-by: Joel Stanley <joel@aj.id.au>
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2712f29c44f18db826c7e093915a727b6f3a20e4
Author: Iwona Winiarska <iwona.winiarska@intel.com>
Date:   Wed Aug 4 01:48:18 2021 +0200

    soc: aspeed: lpc-ctrl: Fix boundary check for mmap
    
    commit b49a0e69a7b1a68c8d3f64097d06dabb770fec96 upstream.
    
    The check mixes pages (vm_pgoff) with bytes (vm_start, vm_end) on one
    side of the comparison, and uses resource address (rather than just the
    resource size) on the other side of the comparison.
    This can allow malicious userspace to easily bypass the boundary check and
    map pages that are located outside memory-region reserved by the driver.
    
    Fixes: 6c4e97678501 ("drivers/misc: Add Aspeed LPC control driver")
    Cc: stable@vger.kernel.org
    Signed-off-by: Iwona Winiarska <iwona.winiarska@intel.com>
    Reviewed-by: Andrew Jeffery <andrew@aj.id.au>
    Tested-by: Andrew Jeffery <andrew@aj.id.au>
    Reviewed-by: Joel Stanley <joel@aj.id.au>
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24c245de17ea1c7c507cce48864074c95f97f035
Author: Manivannan Sadhasivam <mani@kernel.org>
Date:   Tue Jun 29 21:02:49 2021 +0530

    soc: qcom: aoss: Fix the out of bound usage of cooling_devs
    
    commit a89f355e469dcda129c2522be4fdba00c1c74c83 upstream.
    
    In "qmp_cooling_devices_register", the count value is initially
    QMP_NUM_COOLING_RESOURCES, which is 2. Based on the initial count value,
    the memory for cooling_devs is allocated. Then while calling the
    "qmp_cooling_device_add" function, count value is post-incremented for
    each child node.
    
    This makes the out of bound access to the cooling_dev array. Fix it by
    passing the QMP_NUM_COOLING_RESOURCES definition to devm_kzalloc() and
    initializing the count to 0.
    
    While at it, let's also free the memory allocated to cooling_dev if no
    cooling device is found in DT and during unroll phase.
    
    Cc: stable@vger.kernel.org # 5.4
    Fixes: 05589b30b21a ("soc: qcom: Extend AOSS QMP driver to support resources that are used to wake up the SoC.")
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Link: https://lore.kernel.org/r/20210629153249.73428-1-manivannan.sadhasivam@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 603dbb1fa2726bbdee84e512755ee55e2f51087a
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Sat Jul 17 18:48:34 2021 +0100

    pinctrl: ingenic: Fix incorrect pull up/down info
    
    commit d5e931403942b3af39212960c2592b5ba741b2bf upstream.
    
    Fix the pull up/down info for both the JZ4760 and JZ4770 SoCs, as the
    previous values sometimes contradicted what's written in the programming
    manual.
    
    Fixes: b5c23aa46537 ("pinctrl: add a pinctrl driver for the Ingenic jz47xx SoCs")
    Cc: <stable@vger.kernel.org> # v4.12
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Tested-by: 周琰杰 (Zhou Yanjie)<zhouyanjie@wanyeetech.com>
    Link: https://lore.kernel.org/r/20210717174836.14776-1-paul@crapouillou.net
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eda59ca42fde7d7791c85ce7d1d2ab3ab54b3f43
Author: Marc Zyngier <maz@kernel.org>
Date:   Sun Jul 25 19:08:30 2021 +0100

    pinctrl: stmfx: Fix hazardous u8[] to unsigned long cast
    
    commit 1b73e588f47397dee6e4bdfd953e0306c60b5fe5 upstream.
    
    Casting a small array of u8 to an unsigned long is *never* OK:
    
    - it does funny thing when the array size is less than that of a long,
      as it accesses random places in the stack
    - it makes everything even more fun with a BE kernel
    
    Fix this by building the unsigned long used as a bitmap byte by byte,
    in a way that works across endianess and has no undefined behaviours.
    
    An extra BUILD_BUG_ON() catches the unlikely case where the array
    would be larger than a single unsigned long.
    
    Fixes: 1490d9f841b1 ("pinctrl: Add STMFX GPIO expander Pinctrl/GPIO driver")
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Cc: stable@vger.kernel.org
    Cc: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Cc: Maxime Coquelin <mcoquelin.stm32@gmail.com>
    Cc: Alexandre Torgue <alexandre.torgue@foss.st.com>
    Link: https://lore.kernel.org/r/20210725180830.250218-1-maz@kernel.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4acec5e945496dc6f4aadb363a01f5339fdd2c0
Author: Rolf Eike Beer <eb@emlix.com>
Date:   Fri Jul 30 13:51:54 2021 +0200

    tools/thermal/tmon: Add cross compiling support
    
    commit b5f7912bb604b47a0fe024560488a7556dce8ee7 upstream.
    
    Default to prefixed pkg-config when crosscompiling, this matches what
    other parts of the tools/ directory already do.
    
    [dlezcano] : Reworked description
    
    Signed-off-by: Rolf Eike Beer <eb@emlix.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/31302992.qZodDJZGDc@devpool47
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a964aa6ed433886ead29b828db3170e5772da07
Author: Harshvardhan Jha <harshvardhan.jha@oracle.com>
Date:   Tue Jul 27 05:37:10 2021 +0530

    9p/xen: Fix end of loop tests for list_for_each_entry
    
    commit 732b33d0dbf17e9483f0b50385bf606f724f50a2 upstream.
    
    This patch addresses the following problems:
     - priv can never be NULL, so this part of the check is useless
     - if the loop ran through the whole list, priv->client is invalid and
    it is more appropriate and sufficient to check for the end of
    list_for_each_entry loop condition.
    
    Link: http://lkml.kernel.org/r/20210727000709.225032-1-harshvardhan.jha@oracle.com
    Signed-off-by: Harshvardhan Jha <harshvardhan.jha@oracle.com>
    Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>
    Tested-by: Stefano Stabellini <sstabellini@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d81fcc203160e7caeb8de2f10ec24b223252e9e
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Thu Oct 15 20:11:31 2020 -0700

    include/linux/list.h: add a macro to test if entry is pointing to the head
    
    commit e130816164e244b692921de49771eeb28205152d upstream.
    
    Add a macro to test if entry is pointing to the head of the list which is
    useful in cases like:
    
      list_for_each_entry(pos, &head, member) {
        if (cond)
          break;
      }
      if (list_entry_is_head(pos, &head, member))
        return -ERRNO;
    
    that allows to avoid additional variable to be added to track if loop has
    not been stopped in the middle.
    
    While here, convert list_for_each_entry*() family of macros to use a new one.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lkml.kernel.org/r/20200929134342.51489-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bc0d1b535da9ed8dd646245053e7f378b39de92
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Jul 30 11:26:21 2021 +0200

    xen: fix setting of max_pfn in shared_info
    
    commit 4b511d5bfa74b1926daefd1694205c7f1bcf677f upstream.
    
    Xen PV guests are specifying the highest used PFN via the max_pfn
    field in shared_info. This value is used by the Xen tools when saving
    or migrating the guest.
    
    Unfortunately this field is misnamed, as in reality it is specifying
    the number of pages (including any memory holes) of the guest, so it
    is the highest used PFN + 1. Renaming isn't possible, as this is a
    public Xen hypervisor interface which needs to be kept stable.
    
    The kernel will set the value correctly initially at boot time, but
    when adding more pages (e.g. due to memory hotplug or ballooning) a
    real PFN number is stored in max_pfn. This is done when expanding the
    p2m array, and the PFN stored there is even possibly wrong, as it
    should be the last possible PFN of the just added P2M frame, and not
    one which led to the P2M expansion.
    
    Fix that by setting shared_info->max_pfn to the last possible PFN + 1.
    
    Fixes: 98dd166ea3a3c3 ("x86/xen/p2m: hint at the last populated P2M entry")
    Cc: stable@vger.kernel.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Jan Beulich <jbeulich@suse.com>
    Link: https://lore.kernel.org/r/20210730092622.9973-2-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27f3b7f5c6e0355dc8925d9ada9f1e8285bbf0f9
Author: Kajol Jain <kjain@linux.ibm.com>
Date:   Fri Aug 13 13:51:58 2021 +0530

    powerpc/perf/hv-gpci: Fix counter value parsing
    
    commit f9addd85fbfacf0d155e83dbee8696d6df5ed0c7 upstream.
    
    H_GetPerformanceCounterInfo (0xF080) hcall returns the counter data in
    the result buffer. Result buffer has specific format defined in the PAPR
    specification. One of the fields is counter offset and width of the
    counter data returned.
    
    Counter data are returned in a unsigned char array in big endian byte
    order. To get the final counter data, the values must be left shifted
    byte at a time. But commit 220a0c609ad17 ("powerpc/perf: Add support for
    the hv gpci (get performance counter info) interface") made the shifting
    bitwise and also assumed little endian order. Because of that, hcall
    counters values are reported incorrectly.
    
    In particular this can lead to counters go backwards which messes up the
    counter prev vs now calculation and leads to huge counter value
    reporting:
    
      #: perf stat -e hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
               -C 0 -I 1000
            time             counts unit events
         1.000078854 18,446,744,073,709,535,232      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
         2.000213293                  0      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
         3.000320107                  0      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
         4.000428392                  0      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
         5.000537864                  0      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
         6.000649087                  0      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
         7.000760312                  0      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
         8.000865218             16,448      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
         9.000978985 18,446,744,073,709,535,232      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
        10.001088891             16,384      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
        11.001201435                  0      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
        12.001307937 18,446,744,073,709,535,232      hv_gpci/system_tlbie_count_and_time_tlbie_instructions_issued/
    
    Fix the shifting logic to correct match the format, ie. read bytes in
    big endian order.
    
    Fixes: e4f226b1580b ("powerpc/perf/hv-gpci: Increase request buffer size")
    Cc: stable@vger.kernel.org # v4.6+
    Reported-by: Nageswara R Sastry<rnsastry@linux.ibm.com>
    Signed-off-by: Kajol Jain <kjain@linux.ibm.com>
    Tested-by: Nageswara R Sastry<rnsastry@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210813082158.429023-1-kjain@linux.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e9e6d0e07ec8dd5690ce3f81f5c7f2826b1be7d
Author: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
Date:   Thu Aug 26 19:03:42 2021 +0200

    PCI/MSI: Skip masking MSI-X on Xen PV
    
    commit 1a519dc7a73c977547d8b5108d98c6e769c89f4b upstream.
    
    When running as Xen PV guest, masking MSI-X is a responsibility of the
    hypervisor. The guest has no write access to the relevant BAR at all - when
    it tries to, it results in a crash like this:
    
        BUG: unable to handle page fault for address: ffffc9004069100c
        #PF: supervisor write access in kernel mode
        #PF: error_code(0x0003) - permissions violation
        RIP: e030:__pci_enable_msix_range.part.0+0x26b/0x5f0
         e1000e_set_interrupt_capability+0xbf/0xd0 [e1000e]
         e1000_probe+0x41f/0xdb0 [e1000e]
         local_pci_probe+0x42/0x80
        (...)
    
    The recently introduced function msix_mask_all() does not check the global
    variable pci_msi_ignore_mask which is set by XEN PV to bypass the masking
    of MSI[-X] interrupts.
    
    Add the check to make this function XEN PV compatible.
    
    Fixes: 7d5ec3d36123 ("PCI/MSI: Mask all unused MSI-X entries")
    Signed-off-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210826170342.135172-1-marmarek@invisiblethingslab.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2edc06fa381a0117a6965c0a46912943f5278e05
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Wed Aug 11 11:05:19 2021 +0000

    blk-zoned: allow BLKREPORTZONE without CAP_SYS_ADMIN
    
    commit 4d643b66089591b4769bcdb6fd1bfeff2fe301b8 upstream.
    
    A user space process should not need the CAP_SYS_ADMIN capability set
    in order to perform a BLKREPORTZONE ioctl.
    
    Getting the zone report is required in order to get the write pointer.
    Neither read() nor write() requires CAP_SYS_ADMIN, so it is reasonable
    that a user space process that can read/write from/to the device, also
    can get the write pointer. (Since e.g. writes have to be at the write
    pointer.)
    
    Fixes: 3ed05a987e0f ("blk-zoned: implement ioctls")
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Aravind Ramesh <aravind.ramesh@wdc.com>
    Reviewed-by: Adam Manzanares <a.manzanares@samsung.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Cc: stable@vger.kernel.org # v4.10+
    Link: https://lore.kernel.org/r/20210811110505.29649-3-Niklas.Cassel@wdc.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8da22cc41ada5f2d6ebf4f7af3549ac7b067dce6
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Wed Aug 11 11:05:18 2021 +0000

    blk-zoned: allow zone management send operations without CAP_SYS_ADMIN
    
    commit ead3b768bb51259e3a5f2287ff5fc9041eb6f450 upstream.
    
    Zone management send operations (BLKRESETZONE, BLKOPENZONE, BLKCLOSEZONE
    and BLKFINISHZONE) should be allowed under the same permissions as write().
    (write() does not require CAP_SYS_ADMIN).
    
    Additionally, other ioctls like BLKSECDISCARD and BLKZEROOUT only check if
    the fd was successfully opened with FMODE_WRITE.
    (They do not require CAP_SYS_ADMIN).
    
    Currently, zone management send operations require both CAP_SYS_ADMIN
    and that the fd was successfully opened with FMODE_WRITE.
    
    Remove the CAP_SYS_ADMIN requirement, so that zone management send
    operations match the access control requirement of write(), BLKSECDISCARD
    and BLKZEROOUT.
    
    Fixes: 3ed05a987e0f ("blk-zoned: implement ioctls")
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Aravind Ramesh <aravind.ramesh@wdc.com>
    Reviewed-by: Adam Manzanares <a.manzanares@samsung.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Cc: stable@vger.kernel.org # v4.10+
    Link: https://lore.kernel.org/r/20210811110505.29649-2-Niklas.Cassel@wdc.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd7b39e7c4754e33f277476b105efcb6ae82884f
Author: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
Date:   Sat Aug 21 01:50:40 2021 +0800

    btrfs: reset replace target device to allocation state on close
    
    commit 0d977e0eba234e01a60bdde27314dc21374201b3 upstream.
    
    This crash was observed with a failed assertion on device close:
    
      BTRFS: Transaction aborted (error -28)
      WARNING: CPU: 1 PID: 3902 at fs/btrfs/extent-tree.c:2150 btrfs_run_delayed_refs+0x1d2/0x1e0 [btrfs]
      Modules linked in: btrfs blake2b_generic libcrc32c crc32c_intel xor zstd_decompress zstd_compress xxhash lzo_compress lzo_decompress raid6_pq loop
      CPU: 1 PID: 3902 Comm: kworker/u8:4 Not tainted 5.14.0-rc5-default+ #1532
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.0-59-gc9ba527-rebuilt.opensuse.org 04/01/2014
      Workqueue: events_unbound btrfs_async_reclaim_metadata_space [btrfs]
      RIP: 0010:btrfs_run_delayed_refs+0x1d2/0x1e0 [btrfs]
      RSP: 0018:ffffb7a5452d7d80 EFLAGS: 00010282
      RAX: 0000000000000000 RBX: 0000000000000003 RCX: 0000000000000000
      RDX: 0000000000000001 RSI: ffffffffabee13c4 RDI: 00000000ffffffff
      RBP: ffff97834176a378 R08: 0000000000000001 R09: 0000000000000001
      R10: 0000000000000000 R11: 0000000000000001 R12: ffff97835195d388
      R13: 0000000005b08000 R14: ffff978385484000 R15: 000000000000016c
      FS:  0000000000000000(0000) GS:ffff9783bd800000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 000056190d003fe8 CR3: 000000002a81e005 CR4: 0000000000170ea0
      Call Trace:
       flush_space+0x197/0x2f0 [btrfs]
       btrfs_async_reclaim_metadata_space+0x139/0x300 [btrfs]
       process_one_work+0x262/0x5e0
       worker_thread+0x4c/0x320
       ? process_one_work+0x5e0/0x5e0
       kthread+0x144/0x170
       ? set_kthread_struct+0x40/0x40
       ret_from_fork+0x1f/0x30
      irq event stamp: 19334989
      hardirqs last  enabled at (19334997): [<ffffffffab0e0c87>] console_unlock+0x2b7/0x400
      hardirqs last disabled at (19335006): [<ffffffffab0e0d0d>] console_unlock+0x33d/0x400
      softirqs last  enabled at (19334900): [<ffffffffaba0030d>] __do_softirq+0x30d/0x574
      softirqs last disabled at (19334893): [<ffffffffab0721ec>] irq_exit_rcu+0x12c/0x140
      ---[ end trace 45939e308e0dd3c7 ]---
      BTRFS: error (device vdd) in btrfs_run_delayed_refs:2150: errno=-28 No space left
      BTRFS info (device vdd): forced readonly
      BTRFS warning (device vdd): failed setting block group ro: -30
      BTRFS info (device vdd): suspending dev_replace for unmount
      assertion failed: !test_bit(BTRFS_DEV_STATE_REPLACE_TGT, &device->dev_state), in fs/btrfs/volumes.c:1150
      ------------[ cut here ]------------
      kernel BUG at fs/btrfs/ctree.h:3431!
      invalid opcode: 0000 [#1] PREEMPT SMP
      CPU: 1 PID: 3982 Comm: umount Tainted: G        W         5.14.0-rc5-default+ #1532
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.12.0-59-gc9ba527-rebuilt.opensuse.org 04/01/2014
      RIP: 0010:assertfail.constprop.0+0x18/0x1a [btrfs]
      RSP: 0018:ffffb7a5454c7db8 EFLAGS: 00010246
      RAX: 0000000000000068 RBX: ffff978364b91c00 RCX: 0000000000000000
      RDX: 0000000000000000 RSI: ffffffffabee13c4 RDI: 00000000ffffffff
      RBP: ffff9783523a4c00 R08: 0000000000000001 R09: 0000000000000001
      R10: 0000000000000000 R11: 0000000000000001 R12: ffff9783523a4d18
      R13: 0000000000000000 R14: 0000000000000004 R15: 0000000000000003
      FS:  00007f61c8f42800(0000) GS:ffff9783bd800000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 000056190cffa810 CR3: 0000000030b96002 CR4: 0000000000170ea0
      Call Trace:
       btrfs_close_one_device.cold+0x11/0x55 [btrfs]
       close_fs_devices+0x44/0xb0 [btrfs]
       btrfs_close_devices+0x48/0x160 [btrfs]
       generic_shutdown_super+0x69/0x100
       kill_anon_super+0x14/0x30
       btrfs_kill_super+0x12/0x20 [btrfs]
       deactivate_locked_super+0x2c/0xa0
       cleanup_mnt+0x144/0x1b0
       task_work_run+0x59/0xa0
       exit_to_user_mode_loop+0xe7/0xf0
       exit_to_user_mode_prepare+0xaf/0xf0
       syscall_exit_to_user_mode+0x19/0x50
       do_syscall_64+0x4a/0x90
       entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    This happens when close_ctree is called while a dev_replace hasn't
    completed. In close_ctree, we suspend the dev_replace, but keep the
    replace target around so that we can resume the dev_replace procedure
    when we mount the root again. This is the call trace:
    
      close_ctree():
        btrfs_dev_replace_suspend_for_unmount();
        btrfs_close_devices():
          btrfs_close_fs_devices():
            btrfs_close_one_device():
              ASSERT(!test_bit(BTRFS_DEV_STATE_REPLACE_TGT,
                     &device->dev_state));
    
    However, since the replace target sticks around, there is a device
    with BTRFS_DEV_STATE_REPLACE_TGT set on close, and we fail the
    assertion in btrfs_close_one_device.
    
    To fix this, if we come across the replace target device when
    closing, we should properly reset it back to allocation state. This
    fix also ensures that if a non-target device has a corrupted state and
    has the BTRFS_DEV_STATE_REPLACE_TGT bit set, the assertion will still
    catch the error.
    
    Reported-by: David Sterba <dsterba@suse.com>
    Fixes: b2a616676839 ("btrfs: fix rw device counting in __btrfs_free_extra_devids")
    CC: stable@vger.kernel.org # 4.19+
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Desmond Cheong Zhi Xi <desmondcheongzx@gmail.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8554095328ac6b00aaa02e5d95fb475d5fbb2694
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Wed Jul 14 14:47:17 2021 -0400

    btrfs: wake up async_delalloc_pages waiters after submit
    
    commit ac98141d140444fe93e26471d3074c603b70e2ca upstream.
    
    We use the async_delalloc_pages mechanism to make sure that we've
    completed our async work before trying to continue our delalloc
    flushing.  The reason for this is we need to see any ordered extents
    that were created by our delalloc flushing.  However we're waking up
    before we do the submit work, which is before we create the ordered
    extents.  This is a pretty wide race window where we could potentially
    think there are no ordered extents and thus exit shrink_delalloc
    prematurely.  Fix this by waking us up after we've done the work to
    create ordered extents.
    
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d609c63a7165fa6aab0a87f173025652d731e7c9
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Sun Aug 8 19:00:30 2021 +0300

    rtc: tps65910: Correct driver module alias
    
    commit 8d448fa0a8bb1c8d94eef7647edffe9ac81a281e upstream.
    
    The TPS65910 RTC driver module doesn't auto-load because of the wrong
    module alias that doesn't match the device name, fix it.
    
    Cc: stable@vger.kernel.org
    Reported-by: Anton Bambura <jenneron@protonmail.com>
    Tested-by: Anton Bambura <jenneron@protonmail.com>
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20210808160030.8556-1-digetx@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
