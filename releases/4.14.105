commit 99403097be0cbe12042775d9ca3a66f2018adc3e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Mar 5 17:58:03 2019 +0100

    Linux 4.14.105

commit 24e988f6fcae54009891c1bfdd4112fa5656af70
Author: Andy Lutomirski <luto@kernel.org>
Date:   Fri Feb 22 17:17:04 2019 -0800

    x86/uaccess: Don't leak the AC flag into __put_user() value evaluation
    
    commit 2a418cf3f5f1caf911af288e978d61c9844b0695 upstream.
    
    When calling __put_user(foo(), ptr), the __put_user() macro would call
    foo() in between __uaccess_begin() and __uaccess_end().  If that code
    were buggy, then those bugs would be run without SMAP protection.
    
    Fortunately, there seem to be few instances of the problem in the
    kernel. Nevertheless, __put_user() should be fixed to avoid doing this.
    Therefore, evaluate __put_user()'s argument before setting AC.
    
    This issue was noticed when an objtool hack by Peter Zijlstra complained
    about genregs_get() and I compared the assembly output to the C source.
    
     [ bp: Massage commit message and fixed up whitespace. ]
    
    Fixes: 11f1a4b9755f ("x86: reorganize SMAP handling in user space accesses")
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20190225125231.845656645@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e01f09149d2dc540c0ef1c0bec48c45cd592ec14
Author: Paul Burton <paulburton@kernel.org>
Date:   Fri Mar 1 22:58:09 2019 +0000

    MIPS: eBPF: Fix icache flush end address
    
    commit d1a2930d8a992fb6ac2529449f81a0056e1b98d1 upstream.
    
    The MIPS eBPF JIT calls flush_icache_range() in order to ensure the
    icache observes the code that we just wrote. Unfortunately it gets the
    end address calculation wrong due to some bad pointer arithmetic.
    
    The struct jit_ctx target field is of type pointer to u32, and as such
    adding one to it will increment the address being pointed to by 4 bytes.
    Therefore in order to find the address of the end of the code we simply
    need to add the number of 4 byte instructions emitted, but we mistakenly
    add the number of instructions multiplied by 4. This results in the call
    to flush_icache_range() operating on a memory region 4x larger than
    intended, which is always wasteful and can cause crashes if we overrun
    into an unmapped page.
    
    Fix this by correcting the pointer arithmetic to remove the bogus
    multiplication, and use braces to remove the need for a set of brackets
    whilst also making it obvious that the target field is a pointer.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Fixes: b6bd53f9c4e8 ("MIPS: Add missing file for eBPF JIT.")
    Cc: Alexei Starovoitov <ast@kernel.org>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Martin KaFai Lau <kafai@fb.com>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Yonghong Song <yhs@fb.com>
    Cc: netdev@vger.kernel.org
    Cc: bpf@vger.kernel.org
    Cc: linux-mips@vger.kernel.org
    Cc: stable@vger.kernel.org # v4.13+
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b1852c5d2c0e406792b898c5ee1f39762c22c9d
Author: Michael Clark <michaeljclark@mac.com>
Date:   Mon Feb 11 17:38:29 2019 +1300

    MIPS: fix truncation in __cmpxchg_small for short values
    
    commit 94ee12b507db8b5876e31c9d6c9d84f556a4b49f upstream.
    
    __cmpxchg_small erroneously uses u8 for load comparison which can
    be either char or short. This patch changes the local variable to
    u32 which is sufficiently sized, as the loaded value is already
    masked and shifted appropriately. Using an integer size avoids
    any unnecessary canonicalization from use of non native widths.
    
    This patch is part of a series that adapts the MIPS small word
    atomics code for xchg and cmpxchg on short and char to RISC-V.
    
    Cc: RISC-V Patches <patches@groups.riscv.org>
    Cc: Linux RISC-V <linux-riscv@lists.infradead.org>
    Cc: Linux MIPS <linux-mips@linux-mips.org>
    Signed-off-by: Michael Clark <michaeljclark@mac.com>
    [paul.burton@mips.com:
      - Fix varialble typo per Jonas Gorski.
      - Consolidate load variable with other declarations.]
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Fixes: 3ba7f44d2b19 ("MIPS: cmpxchg: Implement 1 byte & 2 byte cmpxchg()")
    Cc: stable@vger.kernel.org # v4.13+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5817069248630b3b7b17ebfcdee0b679c52be33
Author: Jann Horn <jannh@google.com>
Date:   Wed Feb 27 21:29:52 2019 +0100

    mm: enforce min addr even if capable() in expand_downwards()
    
    commit 0a1d52994d440e21def1c2174932410b4f2a98a1 upstream.
    
    security_mmap_addr() does a capability check with current_cred(), but
    we can reach this code from contexts like a VFS write handler where
    current_cred() must not be used.
    
    This can be abused on systems without SMAP to make NULL pointer
    dereferences exploitable again.
    
    Fixes: 8869477a49c3 ("security: protect from stack expansion into low vm addresses")
    Cc: stable@kernel.org
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fa9848e2f7bfb8d7d7ed1927dea1b0dc1c6454d
Author: BOUGH CHEN <haibo.chen@nxp.com>
Date:   Thu Feb 28 10:15:42 2019 +0000

    mmc: sdhci-esdhc-imx: correct the fix of ERR004536
    
    commit e30be063d6dbcc0f18b1eb25fa709fdef89201fb upstream.
    
    Commit 18094430d6b5 ("mmc: sdhci-esdhc-imx: add ADMA Length
    Mismatch errata fix") involve the fix of ERR004536, but the
    fix is incorrect. Double confirm with IC, need to clear the
    bit 7 of register 0x6c rather than set this bit 7.
    Here is the definition of bit 7 of 0x6c:
        0: enable the new IC fix for ERR004536
        1: do not use the IC fix, keep the same as before
    
    Find this issue on i.MX845s-evk board when enable CMDQ, and
    let system in heavy loading.
    
    root@imx8mmevk:~# dd if=/dev/mmcblk2 of=/dev/null bs=1M &
    root@imx8mmevk:~# memtester 1000M > /dev/zero &
    root@imx8mmevk:~# [  139.897220] mmc2: cqhci: timeout for tag 16
    [  139.901417] mmc2: cqhci: ============ CQHCI REGISTER DUMP ===========
    [  139.907862] mmc2: cqhci: Caps:      0x0000310a | Version:  0x00000510
    [  139.914311] mmc2: cqhci: Config:    0x00001001 | Control:  0x00000000
    [  139.920753] mmc2: cqhci: Int stat:  0x00000000 | Int enab: 0x00000006
    [  139.927193] mmc2: cqhci: Int sig:   0x00000006 | Int Coal: 0x00000000
    [  139.933634] mmc2: cqhci: TDL base:  0x7809c000 | TDL up32: 0x00000000
    [  139.940073] mmc2: cqhci: Doorbell:  0x00030000 | TCN:      0x00000000
    [  139.946518] mmc2: cqhci: Dev queue: 0x00010000 | Dev Pend: 0x00010000
    [  139.952967] mmc2: cqhci: Task clr:  0x00000000 | SSC1:     0x00011000
    [  139.959411] mmc2: cqhci: SSC2:      0x00000001 | DCMD rsp: 0x00000000
    [  139.965857] mmc2: cqhci: RED mask:  0xfdf9a080 | TERRI:    0x00000000
    [  139.972308] mmc2: cqhci: Resp idx:  0x0000002e | Resp arg: 0x00000900
    [  139.978761] mmc2: sdhci: ============ SDHCI REGISTER DUMP ===========
    [  139.985214] mmc2: sdhci: Sys addr:  0xb2c19000 | Version:  0x00000002
    [  139.991669] mmc2: sdhci: Blk size:  0x00000200 | Blk cnt:  0x00000400
    [  139.998127] mmc2: sdhci: Argument:  0x40110400 | Trn mode: 0x00000033
    [  140.004618] mmc2: sdhci: Present:   0x01088a8f | Host ctl: 0x00000030
    [  140.011113] mmc2: sdhci: Power:     0x00000002 | Blk gap:  0x00000080
    [  140.017583] mmc2: sdhci: Wake-up:   0x00000008 | Clock:    0x0000000f
    [  140.024039] mmc2: sdhci: Timeout:   0x0000008f | Int stat: 0x00000000
    [  140.030497] mmc2: sdhci: Int enab:  0x107f4000 | Sig enab: 0x107f4000
    [  140.036972] mmc2: sdhci: AC12 err:  0x00000000 | Slot int: 0x00000502
    [  140.043426] mmc2: sdhci: Caps:      0x07eb0000 | Caps_1:   0x8000b407
    [  140.049867] mmc2: sdhci: Cmd:       0x00002c1a | Max curr: 0x00ffffff
    [  140.056314] mmc2: sdhci: Resp[0]:   0x00000900 | Resp[1]:  0xffffffff
    [  140.062755] mmc2: sdhci: Resp[2]:   0x328f5903 | Resp[3]:  0x00d00f00
    [  140.069195] mmc2: sdhci: Host ctl2: 0x00000008
    [  140.073640] mmc2: sdhci: ADMA Err:  0x00000007 | ADMA Ptr: 0x7809c108
    [  140.080079] mmc2: sdhci: ============================================
    [  140.086662] mmc2: running CQE recovery
    
    Fixes: 18094430d6b5 ("mmc: sdhci-esdhc-imx: add ADMA Length Mismatch errata fix")
    Signed-off-by: Haibo Chen <haibo.chen@nxp.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3094b3f769089729ffbd80356bab1b2d25bd405e
Author: Takeshi Saito <takeshi.saito.xv@renesas.com>
Date:   Thu Feb 21 20:38:05 2019 +0100

    mmc: tmio: fix access width of Block Count Register
    
    commit 5603731a15ef9ca317c122cc8c959f1dee1798b4 upstream.
    
    In R-Car Gen2 or later, the maximum number of transfer blocks are
    changed from 0xFFFF to 0xFFFFFFFF. Therefore, Block Count Register
    should use iowrite32().
    
    If another system (U-boot, Hypervisor OS, etc) uses bit[31:16], this
    value will not be cleared. So, SD/MMC card initialization fails.
    
    So, check for the bigger register and use apropriate write. Also, mark
    the register as extended on Gen2.
    
    Signed-off-by: Takeshi Saito <takeshi.saito.xv@renesas.com>
    [wsa: use max_blk_count in if(), add Gen2, update commit message]
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Cc: stable@kernel.org
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    [Ulf: Fixed build error]
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4a2a74704d557228d215b0e9065de0baa2a8dc8
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Mon Feb 18 20:45:40 2019 +0300

    mmc: tmio_mmc_core: don't claim spurious interrupts
    
    commit 5c27ff5db1491a947264d6d4e4cbe43ae6535bae upstream.
    
    I have encountered an interrupt storm during the eMMC chip probing (and
    the chip finally didn't get detected).  It turned out that U-Boot left
    the DMAC interrupts enabled while the Linux driver  didn't use those.
    The SDHI driver's interrupt handler somehow assumes that, even if an
    SDIO interrupt didn't happen, it should return IRQ_HANDLED.  I think
    that if none of the enabled interrupts happened and got handled, we
    should return IRQ_NONE -- that way the kernel IRQ code recoginizes
    a spurious interrupt and masks it off pretty quickly...
    
    Fixes: 7729c7a232a9 ("mmc: tmio: Provide separate interrupt handlers")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Tested-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Simon Horman <horms+renesas@verge.net.au>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a8ccb27436212ff454f25f1a7b49b6f498eef35
Author: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
Date:   Sun Feb 10 18:31:07 2019 +0100

    mmc: spi: Fix card detection during probe
    
    commit c9bd505dbd9d3dc80c496f88eafe70affdcf1ba6 upstream.
    
    When using the mmc_spi driver with a card-detect pin, I noticed that the
    card was not detected immediately after probe, but only after it was
    unplugged and plugged back in (and the CD IRQ fired).
    
    The call tree looks something like this:
    
    mmc_spi_probe
      mmc_add_host
        mmc_start_host
          _mmc_detect_change
            mmc_schedule_delayed_work(&host->detect, 0)
              mmc_rescan
                host->bus_ops->detect(host)
                  mmc_detect
                    _mmc_detect_card_removed
                      host->ops->get_cd(host)
                        mmc_gpio_get_cd -> -ENOSYS (ctx->cd_gpio not set)
      mmc_gpiod_request_cd
        ctx->cd_gpio = desc
    
    To fix this issue, call mmc_detect_change after the card-detect GPIO/IRQ
    is registered.
    
    Signed-off-by: Jonathan Neuschäfer <j.neuschaefer@gmx.net>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 32f31fa571083841f07bed67e46d0c5c5369b549
Author: Seth Forshee <seth.forshee@canonical.com>
Date:   Thu Sep 28 09:33:39 2017 -0400

    powerpc: Always initialize input array when calling epapr_hypercall()
    
    commit 186b8f1587c79c2fa04bfa392fdf084443e398c1 upstream.
    
    Several callers to epapr_hypercall() pass an uninitialized stack
    allocated array for the input arguments, presumably because they
    have no input arguments. However this can produce errors like
    this one
    
     arch/powerpc/include/asm/epapr_hcalls.h:470:42: error: 'in' may be used uninitialized in this function [-Werror=maybe-uninitialized]
      unsigned long register r3 asm("r3") = in[0];
                                            ~~^~~
    
    Fix callers to this function to always zero-initialize the input
    arguments array to prevent this.
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Cc: "A. Wilcox" <awilfox@adelielinux.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ce9d889aa00d88dacf9a88a293cea555a148a7f
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Mon Jan 7 19:44:51 2019 +0100

    KVM: nSVM: clear events pending from svm_complete_interrupts() when exiting to L1
    
    [ Upstream commit 619ad846fc3452adaf71ca246c5aa711e2055398 ]
    
    kvm-unit-tests' eventinj "NMI failing on IDT" test results in NMI being
    delivered to the host (L1) when it's running nested. The problem seems to
    be: svm_complete_interrupts() raises 'nmi_injected' flag but later we
    decide to reflect EXIT_NPF to L1. The flag remains pending and we do NMI
    injection upon entry so it got delivered to L1 instead of L2.
    
    It seems that VMX code solves the same issue in prepare_vmcs12(), this was
    introduced with code refactoring in commit 5f3d5799974b ("KVM: nVMX: Rework
    event injection and recovery").
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f20cf376cc63d887a989cd4521bcccd669ebd3eb
Author: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Date:   Tue Jan 22 10:25:13 2019 +0000

    svm: Fix AVIC incomplete IPI emulation
    
    [ Upstream commit bb218fbcfaaa3b115d4cd7a43c0ca164f3a96e57 ]
    
    In case of incomplete IPI with invalid interrupt type, the current
    SVM driver does not properly emulate the IPI, and fails to boot
    FreeBSD guests with multiple vcpus when enabling AVIC.
    
    Fix this by update APIC ICR high/low registers, which also
    emulate sending the IPI.
    
    Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b26d66aaece0efc8eccaf351c4efe9c5219dd63
Author: Chaitanya Tata <chaitanya.tata@bluwirelesstechnology.com>
Date:   Sat Jan 19 03:17:47 2019 +0530

    cfg80211: extend range deviation for DMG
    
    [ Upstream commit 93183bdbe73bbdd03e9566c8dc37c9d06b0d0db6 ]
    
    Recently, DMG frequency bands have been extended till 71GHz, so extend
    the range check till 20GHz (45-71GHZ), else some channels will be marked
    as disabled.
    
    Signed-off-by: Chaitanya Tata <Chaitanya.Tata@bluwireless.co.uk>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3804637933575ff9774d3bd0398b8d6bd4aed383
Author: Mathieu Malaterre <malat@debian.org>
Date:   Thu Jan 24 19:19:57 2019 +0100

    mac80211: Add attribute aligned(2) to struct 'action'
    
    [ Upstream commit 7c53eb5d87bc21464da4268c3c0c47457b6d9c9b ]
    
    During refactor in commit 9e478066eae4 ("mac80211: fix MU-MIMO
    follow-MAC mode") a new struct 'action' was declared with packed
    attribute as:
    
      struct {
              struct ieee80211_hdr_3addr hdr;
              u8 category;
              u8 action_code;
      } __packed action;
    
    But since struct 'ieee80211_hdr_3addr' is declared with an aligned
    keyword as:
    
      struct ieee80211_hdr {
            __le16 frame_control;
            __le16 duration_id;
            u8 addr1[ETH_ALEN];
            u8 addr2[ETH_ALEN];
            u8 addr3[ETH_ALEN];
            __le16 seq_ctrl;
            u8 addr4[ETH_ALEN];
      } __packed __aligned(2);
    
    Solve the ambiguity of placing aligned structure in a packed one by
    adding the aligned(2) attribute to struct 'action'.
    
    This removes the following warning (W=1):
    
      net/mac80211/rx.c:234:2: warning: alignment 1 of 'struct <anonymous>' is less than 2 [-Wpacked-not-aligned]
    
    Cc: Johannes Berg <johannes.berg@intel.com>
    Suggested-by: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: Mathieu Malaterre <malat@debian.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9509697fd674da70401511d4b1042630d3dfaae
Author: Balaji Pothunoori <bpothuno@codeaurora.org>
Date:   Mon Jan 21 12:30:43 2019 +0530

    mac80211: don't initiate TDLS connection if station is not associated to AP
    
    [ Upstream commit 7ed5285396c257fd4070b1e29e7b2341aae2a1ce ]
    
    Following call trace is observed while adding TDLS peer entry in driver
    during TDLS setup.
    
    Call Trace:
    [<c1301476>] dump_stack+0x47/0x61
    [<c10537d2>] __warn+0xe2/0x100
    [<fa22415f>] ? sta_apply_parameters+0x49f/0x550 [mac80211]
    [<c1053895>] warn_slowpath_null+0x25/0x30
    [<fa22415f>] sta_apply_parameters+0x49f/0x550 [mac80211]
    [<fa20ad42>] ? sta_info_alloc+0x1c2/0x450 [mac80211]
    [<fa224623>] ieee80211_add_station+0xe3/0x160 [mac80211]
    [<c1876fe3>] nl80211_new_station+0x273/0x420
    [<c170f6d9>] genl_rcv_msg+0x219/0x3c0
    [<c170f4c0>] ? genl_rcv+0x30/0x30
    [<c170ee7e>] netlink_rcv_skb+0x8e/0xb0
    [<c170f4ac>] genl_rcv+0x1c/0x30
    [<c170e8aa>] netlink_unicast+0x13a/0x1d0
    [<c170ec18>] netlink_sendmsg+0x2d8/0x390
    [<c16c5acd>] sock_sendmsg+0x2d/0x40
    [<c16c6369>] ___sys_sendmsg+0x1d9/0x1e0
    
    Fixing this by allowing TDLS setup request only when we have completed
    association.
    
    Signed-off-by: Balaji Pothunoori <bpothuno@codeaurora.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29bfe05143694acf96b0737203113277b2aa7bfb
Author: Thomas Falcon <tlfalcon@linux.ibm.com>
Date:   Thu Jan 24 11:17:01 2019 -0600

    ibmveth: Do not process frames after calling napi_reschedule
    
    [ Upstream commit e95d22c69b2c130ccce257b84daf283fd82d611e ]
    
    The IBM virtual ethernet driver's polling function continues
    to process frames after rescheduling NAPI, resulting in a warning
    if it exhausted its budget. Do not restart polling after calling
    napi_reschedule. Instead let frames be processed in the following
    instance.
    
    Signed-off-by: Thomas Falcon <tlfalcon@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a1e11f6ab05cf04f625bf48212dd00ee1f5ed58
Author: Maciej Żenczykowski <maze@google.com>
Date:   Thu Jan 24 03:07:02 2019 -0800

    net: dev_is_mac_header_xmit() true for ARPHRD_RAWIP
    
    [ Upstream commit 3b707c3008cad04604c1f50e39f456621821c414 ]
    
    __bpf_redirect() and act_mirred checks this boolean
    to determine whether to prefix an ethernet header.
    
    Signed-off-by: Maciej Żenczykowski <maze@google.com>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 279412b3c0d27ac48042b793279400a71214c5b5
Author: Zhang Run <zhang.run@zte.com.cn>
Date:   Thu Jan 24 13:48:49 2019 +0800

    net: usb: asix: ax88772_bind return error when hw_reset fail
    
    [ Upstream commit 6eea3527e68acc22483f4763c8682f223eb90029 ]
    
    The ax88772_bind() should return error code immediately when the PHY
    was not reset properly through ax88772a_hw_reset().
    Otherwise, The asix_get_phyid() will block when get the PHY
    Identifier from the PHYSID1 MII registers through asix_mdio_read()
    due to the PHY isn't ready. Furthermore, it will produce a lot of
    error message cause system crash.As follows:
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to write
     reg index 0x0000: -71
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to send
     software reset: ffffffb9
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to write
     reg index 0x0000: -71
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to enable
     software MII access
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to read
     reg index 0x0000: -71
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to write
     reg index 0x0000: -71
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to enable
     software MII access
    asix 1-1:1.0 (unnamed net_device) (uninitialized): Failed to read
     reg index 0x0000: -71
    ...
    
    Signed-off-by: Zhang Run <zhang.run@zte.com.cn>
    Reviewed-by: Yang Wei <yang.wei9@zte.com.cn>
    Tested-by: Marcel Ziswiler <marcel.ziswiler@toradex.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 903162bc17938fd003313ff9607983041f486a8e
Author: Haiyang Zhang <haiyangz@microsoft.com>
Date:   Tue Jan 15 00:51:42 2019 +0000

    hv_netvsc: Fix ethtool change hash key error
    
    [ Upstream commit b4a10c750424e01b5e37372fef0a574ebf7b56c3 ]
    
    Hyper-V hosts require us to disable RSS before changing RSS key,
    otherwise the changing request will fail. This patch fixes the
    coding error.
    
    Fixes: ff4a44199012 ("netvsc: allow get/set of RSS indirection table")
    Reported-by: Wei Hu <weh@microsoft.com>
    Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    [sl: fix up subject line]
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa83556a6f0f79ef44c49aa1998962ac8c5792d5
Author: Atsushi Nemoto <atsushi.nemoto@sord.co.jp>
Date:   Mon Jan 21 17:26:41 2019 +0900

    net: altera_tse: fix connect_local_phy error path
    
    [ Upstream commit 17b42a20d7ca59377788c6a2409e77569570cc10 ]
    
    The connect_local_phy should return NULL (not negative errno) on
    error, since its caller expects it.
    
    Signed-off-by: Atsushi Nemoto <atsushi.nemoto@sord.co.jp>
    Acked-by: Thor Thayer <thor.thayer@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 111b62c6b61e2bf5777147deb2e973b46a2ae3ed
Author: Varun Prakash <varun@chelsio.com>
Date:   Sat Jan 12 22:14:30 2019 +0530

    scsi: csiostor: fix NULL pointer dereference in csio_vport_set_state()
    
    [ Upstream commit fe35a40e675473eb65f2f5462b82770f324b5689 ]
    
    Assign fc_vport to ln->fc_vport before calling csio_fcoe_alloc_vnp() to
    avoid a NULL pointer dereference in csio_vport_set_state().
    
    ln->fc_vport is dereferenced in csio_vport_set_state().
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 494c4399ef3bbc1efa4bd7f2f36454a5f4ef9e64
Author: Tejun Heo <tj@kernel.org>
Date:   Tue Dec 12 08:38:30 2017 -0800

    writeback: synchronize sync(2) against cgroup writeback membership switches
    
    [ Upstream commit 7fc5854f8c6efae9e7624970ab49a1eac2faefb1 ]
    
    sync_inodes_sb() can race against cgwb (cgroup writeback) membership
    switches and fail to writeback some inodes.  For example, if an inode
    switches to another wb while sync_inodes_sb() is in progress, the new
    wb might not be visible to bdi_split_work_to_wbs() at all or the inode
    might jump from a wb which hasn't issued writebacks yet to one which
    already has.
    
    This patch adds backing_dev_info->wb_switch_rwsem to synchronize cgwb
    switch path against sync_inodes_sb() so that sync_inodes_sb() is
    guaranteed to see all the target wbs and inodes can't jump wbs to
    escape syncing.
    
    v2: Fixed misplaced rwsem init.  Spotted by Jiufei.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-by: Jiufei Xue <xuejiufei@gmail.com>
    Link: http://lkml.kernel.org/r/dc694ae2-f07f-61e1-7097-7c8411cee12d@gmail.com
    Acked-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f13744bc3e00ea7f0332253a11378b67e2b4ddb
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Mon Oct 8 20:58:23 2018 -0300

    direct-io: allow direct writes to empty inodes
    
    [ Upstream commit 8b9433eb4de3c26a9226c981c283f9f4896ae030 ]
    
    On a DIO_SKIP_HOLES filesystem, the ->get_block() method is currently
    not allowed to create blocks for an empty inode.  This confusion comes
    from trying to bit shift a negative number, so check the size of the
    inode first.
    
    The problem is most visible for hfsplus, because the fallback to
    buffered I/O doesn't happen and the write fails with EIO.  This is in
    part the fault of the module, because it gives a wrong return value on
    ->get_block(); that will be fixed in a separate patch.
    
    Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0fe1581a2963e5de0a7389498c5a8d046d4d0f5
Author: Liam Mark <lmark@codeaurora.org>
Date:   Fri Jan 18 10:37:44 2019 -0800

    staging: android: ion: Support cpu access during dma_buf_detach
    
    [ Upstream commit 31eb79db420a3f94c4c45a8c0a05cd30e333f981 ]
    
    Often userspace doesn't know when the kernel will be calling dma_buf_detach
    on the buffer.
    If userpace starts its CPU access at the same time as the sg list is being
    freed it could end up accessing the sg list after it has been freed.
    
    Thread A                                Thread B
    - DMA_BUF_IOCTL_SYNC IOCT
     - ion_dma_buf_begin_cpu_access
      - list_for_each_entry
                                            - ion_dma_buf_detatch
                                             - free_duped_table
       - dma_sync_sg_for_cpu
    
    Fix this by getting the ion_buffer lock before freeing the sg table memory.
    
    Fixes: 2a55e7b5e544 ("staging: android: ion: Call dma_map_sg for syncing and mapping")
    Signed-off-by: Liam Mark <lmark@codeaurora.org>
    Acked-by: Laura Abbott <labbott@redhat.com>
    Acked-by: Andrew F. Davis <afd@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0baaa08d1e3a68f3ef92ab71aac18c56b51c6430
Author: Tomonori Sakita <tomonori.sakita@sord.co.jp>
Date:   Mon Jan 21 17:34:16 2019 +0900

    serial: fsl_lpuart: fix maximum acceptable baud rate with over-sampling
    
    [ Upstream commit 815d835b7ba46685c316b000013367dacb2b461b ]
    
    Using over-sampling ratio, lpuart can accept baud rate upto uartclk / 4.
    
    Signed-off-by: Tomonori Sakita <tomonori.sakita@sord.co.jp>
    Signed-off-by: Atsushi Nemoto <atsushi.nemoto@sord.co.jp>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3aeb1d42b3194d66ee432a5daac82569b19436a0
Author: Kenneth Feng <kenneth.feng@amd.com>
Date:   Fri Jan 18 18:08:19 2019 +0800

    drm/amd/powerplay: OD setting fix on Vega10
    
    [ Upstream commit 6d87dc97eb3341de3f7b1efa3156cb0e014f4a96 ]
    
    gfxclk for OD setting is limited to 1980M for non-acg
    ASICs of Vega10
    
    Signed-off-by: Kenneth Feng <kenneth.feng@amd.com>
    Reviewed-by: Evan Quan <evan.quan@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 726152d423685a4ae266f360e8bb32567c19f522
Author: Xie Yongji <xieyongji@baidu.com>
Date:   Thu Nov 29 20:50:30 2018 +0800

    locking/rwsem: Fix (possible) missed wakeup
    
    [ Upstream commit e158488be27b157802753a59b336142dc0eb0380 ]
    
    Because wake_q_add() can imply an immediate wakeup (cmpxchg failure
    case), we must not rely on the wakeup being delayed. However, commit:
    
      e38513905eea ("locking/rwsem: Rework zeroing reader waiter->task")
    
    relies on exactly that behaviour in that the wakeup must not happen
    until after we clear waiter->task.
    
    [ peterz: Added changelog. ]
    
    Signed-off-by: Xie Yongji <xieyongji@baidu.com>
    Signed-off-by: Zhang Yu <zhangyu31@baidu.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: e38513905eea ("locking/rwsem: Rework zeroing reader waiter->task")
    Link: https://lkml.kernel.org/r/1543495830-2644-1-git-send-email-xieyongji@baidu.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f618b90b11fc45efd13a159f628f27f06ebb8184
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Nov 29 14:44:49 2018 +0100

    futex: Fix (possible) missed wakeup
    
    [ Upstream commit b061c38bef43406df8e73c5be06cbfacad5ee6ad ]
    
    We must not rely on wake_q_add() to delay the wakeup; in particular
    commit:
    
      1d0dcb3ad9d3 ("futex: Implement lockless wakeups")
    
    moved wake_q_add() before smp_store_release(&q->lock_ptr, NULL), which
    could result in futex_wait() waking before observing ->lock_ptr ==
    NULL and going back to sleep again.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 1d0dcb3ad9d3 ("futex: Implement lockless wakeups")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 635d29f488a9941ca29e02b0bc8aab938cd1d6cc
Author: Prateek Sood <prsood@codeaurora.org>
Date:   Fri Nov 30 20:40:56 2018 +0530

    sched/wait: Fix rcuwait_wake_up() ordering
    
    [ Upstream commit 6dc080eeb2ba01973bfff0d79844d7a59e12542e ]
    
    For some peculiar reason rcuwait_wake_up() has the right barrier in
    the comment, but not in the code.
    
    This mistake has been observed to cause a deadlock in the following
    situation:
    
        P1                                  P2
    
        percpu_up_read()                    percpu_down_write()
          rcu_sync_is_idle() // false
                                              rcu_sync_enter()
                                              ...
          __percpu_up_read()
    
    [S] ,-  __this_cpu_dec(*sem->read_count)
        |   smp_rmb();
    [L] |   task = rcu_dereference(w->task) // NULL
        |
        |                               [S]     w->task = current
        |                                       smp_mb();
        |                               [L]     readers_active_check() // fail
        `-> <store happens here>
    
    Where the smp_rmb() (obviously) fails to constrain the store.
    
    [ peterz: Added changelog. ]
    
    Signed-off-by: Prateek Sood <prsood@codeaurora.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Andrea Parri <andrea.parri@amarulasolutions.com>
    Acked-by: Davidlohr Bueso <dbueso@suse.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 8f95c90ceb54 ("sched/wait, RCU: Introduce rcuwait machinery")
    Link: https://lkml.kernel.org/r/1543590656-7157-1-git-send-email-prsood@codeaurora.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 158e41a942b6c59dd73913e9b7a11ae00f853ece
Author: Bob Copeland <me@bobcopeland.com>
Date:   Thu Jan 17 16:32:42 2019 -0500

    mac80211: fix miscounting of ttl-dropped frames
    
    [ Upstream commit a0dc02039a2ee54fb4ae400e0b755ed30e73e58c ]
    
    In ieee80211_rx_h_mesh_fwding, we increment the 'dropped_frames_ttl'
    counter when we decrement the ttl to zero.  For unicast frames
    destined for other hosts, we stop processing the frame at that point.
    
    For multicast frames, we do not rebroadcast it in this case, but we
    do pass the frame up the stack to process it on this STA.  That
    doesn't match the usual definition of "dropped," so don't count
    those as such.
    
    With this change, something like `ping6 -i0.2 ff02::1%mesh0` from a
    peer in a ttl=1 network no longer increments the counter rapidly.
    
    Signed-off-by: Bob Copeland <bobcopeland@fb.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 779f4513ec9eea8b377ee4e7c0be3fd5aabdcd88
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Jan 16 06:20:11 2019 -0700

    staging: rtl8723bs: Fix build error with Clang when inlining is disabled
    
    [ Upstream commit 97715058b70da1262fd07798c8b2e3e894f759dd ]
    
    When CONFIG_NO_AUTO_INLINE was present in linux-next (which added
    '-fno-inline-functions' to KBUILD_CFLAGS), an allyesconfig build with
    Clang failed at the modpost stage:
    
    ERROR: "is_broadcast_mac_addr" [drivers/staging/rtl8723bs/r8723bs.ko] undefined!
    ERROR: "is_zero_mac_addr" [drivers/staging/rtl8723bs/r8723bs.ko] undefined!
    ERROR: "is_multicast_mac_addr" [drivers/staging/rtl8723bs/r8723bs.ko] undefined!
    
    These functions were marked as extern inline, meaning that if inlining
    doesn't happen, the function will be undefined, as it is above.
    
    This happens to work with GCC because the '-fno-inline-functions' option
    respects the __inline attribute so all instances of these functions are
    inlined as expected and the definition doesn't actually matter. However,
    with Clang and '-fno-inline-functions', a function has to be marked with
    the __always_inline attribute to be considered for inlining, which none
    of these functions are. Clang tries to find the symbol definition
    elsewhere as it was told and fails, which trickles down to modpost.
    
    To make sure that this code compiles regardless of compiler and make the
    intention of the code clearer, use 'static' to ensure these functions
    are always defined, regardless of inlining. Additionally, silence a
    checkpatch warning by switching from '__inline' to 'inline'.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d7a522437beb95f3a55fe3c4a6cb5013399c2ec
Author: Aaron Hill <aa1ronham@gmail.com>
Date:   Mon Dec 24 14:23:36 2018 -0500

    drivers: thermal: int340x_thermal: Fix sysfs race condition
    
    [ Upstream commit 129699bb8c7572106b5bbb2407c2daee4727ccad ]
    
    Changes since V1:
    * Use dev_info instead of printk
    * Use dev_warn instead of BUG_ON
    
    Previously, sysfs_create_group was called before all initialization had
    fully run - specifically, before pci_set_drvdata was called. Since the
    sysctl group is visible to userspace as soon as sysfs_create_group
    returns, a small window of time existed during which a process could read
    from an uninitialized/partially-initialized device.
    
    This commit moves the creation of the sysctl group to after all
    initialized is completed. This ensures that it's impossible for
    userspace to read from a sysctl file before initialization has fully
    completed.
    
    To catch any future regressions, I've added a check to ensure
    that proc_thermal_emum_mode is never PROC_THERMAL_NONE when a process
    tries to read from a sysctl file. Previously, the aforementioned race
    condition could result in the 'else' branch
    running while PROC_THERMAL_NONE was set,
    leading to a null pointer deference.
    
    Signed-off-by: Aaron Hill <aa1ronham@gmail.com>
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87142f7638ad16047b6c377ff87a23390e31406f
Author: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
Date:   Thu Dec 13 18:42:57 2018 +0300

    ARC: fix __ffs return value to avoid build warnings
    
    [ Upstream commit 4e868f8419cb4cb558c5d428e7ab5629cef864c7 ]
    
    |  CC      mm/nobootmem.o
    |In file included from ./include/asm-generic/bug.h:18:0,
    |                 from ./arch/arc/include/asm/bug.h:32,
    |                 from ./include/linux/bug.h:5,
    |                 from ./include/linux/mmdebug.h:5,
    |                 from ./include/linux/gfp.h:5,
    |                 from ./include/linux/slab.h:15,
    |                 from mm/nobootmem.c:14:
    |mm/nobootmem.c: In function '__free_pages_memory':
    |./include/linux/kernel.h:845:29: warning: comparison of distinct pointer types lacks a cast
    |   (!!(sizeof((typeof(x) *)1 == (typeof(y) *)1)))
    |                             ^
    |./include/linux/kernel.h:859:4: note: in expansion of macro '__typecheck'
    |   (__typecheck(x, y) && __no_side_effects(x, y))
    |    ^~~~~~~~~~~
    |./include/linux/kernel.h:869:24: note: in expansion of macro '__safe_cmp'
    |  __builtin_choose_expr(__safe_cmp(x, y), \
    |                        ^~~~~~~~~~
    |./include/linux/kernel.h:878:19: note: in expansion of macro '__careful_cmp'
    | #define min(x, y) __careful_cmp(x, y, <)
    |                   ^~~~~~~~~~~~~
    |mm/nobootmem.c:104:11: note: in expansion of macro 'min'
    |   order = min(MAX_ORDER - 1UL, __ffs(start));
    
    Change __ffs return value from 'int' to 'unsigned long' as it
    is done in other implementations (like asm-generic, x86, etc...)
    to avoid build-time warnings in places where type is strictly
    checked.
    
    As __ffs may return values in [0-31] interval changing return
    type to unsigned is valid.
    
    Signed-off-by: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51f08abcd74233d4a5dcc1d20e74e786a67bd52f
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Jan 14 14:51:33 2019 +0100

    selftests: gpio-mockup-chardev: Check asprintf() for error
    
    [ Upstream commit 508cacd7da6659ae7b7bdd0a335f675422277758 ]
    
    With gcc 7.3.0:
    
        gpio-mockup-chardev.c: In function ‘get_debugfs’:
        gpio-mockup-chardev.c:62:3: warning: ignoring return value of ‘asprintf’, declared with attribute warn_unused_result [-Wunused-result]
           asprintf(path, "%s/gpio", mnt_fs_get_target(fs));
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    Handle asprintf() failures to fix this.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Shuah Khan <shuah@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 289ee4095263372eb9ccbb4f2e2028ed37e5f9f7
Author: Fathi Boudra <fathi.boudra@linaro.org>
Date:   Wed Jan 16 11:43:19 2019 -0600

    selftests: seccomp: use LDLIBS instead of LDFLAGS
    
    [ Upstream commit 5bbc73a841d7f0bbe025a342146dde462a796a5a ]
    
    seccomp_bpf fails to build due to undefined reference errors:
    
     aarch64-linaro-linux-gcc --sysroot=/build/tmp-rpb-glibc/sysroots/hikey
     -O2 -pipe -g -feliminate-unused-debug-types -Wl,-no-as-needed -Wall
     -Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed -lpthread seccomp_bpf.c -o
     /build/tmp-rpb-glibc/work/hikey-linaro-linux/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf
     /tmp/ccrlR3MW.o: In function `tsync_sibling':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1920: undefined reference to `sem_post'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1920: undefined reference to `sem_post'
     /tmp/ccrlR3MW.o: In function `TSYNC_setup':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1863: undefined reference to `sem_init'
     /tmp/ccrlR3MW.o: In function `TSYNC_teardown':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1904: undefined reference to `sem_destroy'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1897: undefined reference to `pthread_kill'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1898: undefined reference to `pthread_cancel'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1899: undefined reference to `pthread_join'
     /tmp/ccrlR3MW.o: In function `tsync_start_sibling':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
     /tmp/ccrlR3MW.o: In function `TSYNC_siblings_fail_prctl':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1978: undefined reference to `sem_wait'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1990: undefined reference to `pthread_join'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1992: undefined reference to `pthread_join'
     /tmp/ccrlR3MW.o: In function `tsync_start_sibling':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
     /tmp/ccrlR3MW.o: In function `TSYNC_two_siblings_with_ancestor':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2016: undefined reference to `sem_wait'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2032: undefined reference to `pthread_join'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2034: undefined reference to `pthread_join'
     /tmp/ccrlR3MW.o: In function `tsync_start_sibling':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
     /tmp/ccrlR3MW.o: In function `TSYNC_two_sibling_want_nnp':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2046: undefined reference to `sem_wait'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2058: undefined reference to `pthread_join'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2060: undefined reference to `pthread_join'
     /tmp/ccrlR3MW.o: In function `tsync_start_sibling':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
     /tmp/ccrlR3MW.o: In function `TSYNC_two_siblings_with_no_filter':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2073: undefined reference to `sem_wait'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2098: undefined reference to `pthread_join'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2100: undefined reference to `pthread_join'
     /tmp/ccrlR3MW.o: In function `tsync_start_sibling':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
     /tmp/ccrlR3MW.o: In function `TSYNC_two_siblings_with_one_divergence':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2125: undefined reference to `sem_wait'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2143: undefined reference to `pthread_join'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2145: undefined reference to `pthread_join'
     /tmp/ccrlR3MW.o: In function `tsync_start_sibling':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
     /tmp/ccrlR3MW.o: In function `TSYNC_two_siblings_not_under_filter':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2169: undefined reference to `sem_wait'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2202: undefined reference to `pthread_join'
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:2227: undefined reference to `pthread_join'
     /tmp/ccrlR3MW.o: In function `tsync_start_sibling':
     /usr/src/debug/kselftests/4.12-r0/linux-4.12-rc7/tools/testing/selftests/seccomp/seccomp_bpf.c:1941: undefined reference to `pthread_create'
    
    It's GNU Make and linker specific.
    
    The default Makefile rule looks like:
    
    $(CC) $(CFLAGS) $(LDFLAGS) $@ $^ $(LDLIBS)
    
    When linking is done by gcc itself, no issue, but when it needs to be passed
    to proper ld, only LDLIBS follows and then ld cannot know what libs to link
    with.
    
    More detail:
    https://www.gnu.org/software/make/manual/html_node/Implicit-Variables.html
    
    LDFLAGS
    Extra flags to give to compilers when they are supposed to invoke the linker,
    ‘ld’, such as -L. Libraries (-lfoo) should be added to the LDLIBS variable
    instead.
    
    LDLIBS
    Library flags or names given to compilers when they are supposed to invoke the
    linker, ‘ld’. LOADLIBES is a deprecated (but still supported) alternative to
    LDLIBS. Non-library linker flags, such as -L, should go in the LDFLAGS
    variable.
    
    https://lkml.org/lkml/2010/2/10/362
    
    tools/perf: libraries must come after objects
    
    Link order matters, use LDLIBS instead of LDFLAGS to properly link against
    libpthread.
    
    Signed-off-by: Fathi Boudra <fathi.boudra@linaro.org>
    Acked-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Shuah Khan <shuah@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 009d7727747e8bf416302c57947e24bb04699996
Author: Silvio Cesare <silvio.cesare@gmail.com>
Date:   Tue Jan 15 04:27:27 2019 +0100

    ASoC: imx-audmux: change snprintf to scnprintf for possible overflow
    
    [ Upstream commit c407cd008fd039320d147088b52d0fa34ed3ddcb ]
    
    Change snprintf to scnprintf. There are generally two cases where using
    snprintf causes problems.
    
    1) Uses of size += snprintf(buf, SIZE - size, fmt, ...)
    In this case, if snprintf would have written more characters than what the
    buffer size (SIZE) is, then size will end up larger than SIZE. In later
    uses of snprintf, SIZE - size will result in a negative number, leading
    to problems. Note that size might already be too large by using
    size = snprintf before the code reaches a case of size += snprintf.
    
    2) If size is ultimately used as a length parameter for a copy back to user
    space, then it will potentially allow for a buffer overflow and information
    disclosure when size is greater than SIZE. When the size is used to index
    the buffer directly, we can have memory corruption. This also means when
    size = snprintf... is used, it may also cause problems since size may become
    large.  Copying to userspace is mitigated by the HARDENED_USERCOPY kernel
    configuration.
    
    The solution to these issues is to use scnprintf which returns the number of
    characters actually written to the buffer, so the size variable will never
    exceed SIZE.
    
    Signed-off-by: Silvio Cesare <silvio.cesare@gmail.com>
    Cc: Timur Tabi <timur@kernel.org>
    Cc: Nicolin Chen <nicoleotsuka@gmail.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Xiubo Li <Xiubo.Lee@gmail.com>
    Cc: Fabio Estevam <fabio.estevam@nxp.com>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Greg KH <greg@kroah.com>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Acked-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d1e86985239edc297b22cc9a61efd217b1d865a
Author: Silvio Cesare <silvio.cesare@gmail.com>
Date:   Sat Jan 12 16:28:43 2019 +0100

    ASoC: dapm: change snprintf to scnprintf for possible overflow
    
    [ Upstream commit e581e151e965bf1f2815dd94620b638fec4d0a7e ]
    
    Change snprintf to scnprintf. There are generally two cases where using
    snprintf causes problems.
    
    1) Uses of size += snprintf(buf, SIZE - size, fmt, ...)
    In this case, if snprintf would have written more characters than what the
    buffer size (SIZE) is, then size will end up larger than SIZE. In later
    uses of snprintf, SIZE - size will result in a negative number, leading
    to problems. Note that size might already be too large by using
    size = snprintf before the code reaches a case of size += snprintf.
    
    2) If size is ultimately used as a length parameter for a copy back to user
    space, then it will potentially allow for a buffer overflow and information
    disclosure when size is greater than SIZE. When the size is used to index
    the buffer directly, we can have memory corruption. This also means when
    size = snprintf... is used, it may also cause problems since size may become
    large.  Copying to userspace is mitigated by the HARDENED_USERCOPY kernel
    configuration.
    
    The solution to these issues is to use scnprintf which returns the number of
    characters actually written to the buffer, so the size variable will never
    exceed SIZE.
    
    Signed-off-by: Silvio Cesare <silvio.cesare@gmail.com>
    Cc: Liam Girdwood <lgirdwood@gmail.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Greg KH <greg@kroah.com>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 10a1f3195914fe650b326364ccbb942080ce72dd
Author: Srinivas Ramana <sramana@codeaurora.org>
Date:   Thu Dec 20 19:05:57 2018 +0530

    genirq: Make sure the initial affinity is not empty
    
    [ Upstream commit bddda606ec76550dd63592e32a6e87e7d32583f7 ]
    
    If all CPUs in the irq_default_affinity mask are offline when an interrupt
    is initialized then irq_setup_affinity() can set an empty affinity mask for
    a newly allocated interrupt.
    
    Fix this by falling back to cpu_online_mask in case the resulting affinity
    mask is zero.
    
    Signed-off-by: Srinivas Ramana <sramana@codeaurora.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arm-msm@vger.kernel.org
    Link: https://lkml.kernel.org/r/1545312957-8504-1-git-send-email-sramana@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6733e3433ad463a6d64cabbf3d0a320f453bced
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Dec 21 23:42:52 2018 +0300

    usb: gadget: Potential NULL dereference on allocation error
    
    [ Upstream commit df28169e1538e4a8bcd8b779b043e5aa6524545c ]
    
    The source_sink_alloc_func() function is supposed to return error
    pointers on error.  The function is called from usb_get_function() which
    doesn't check for NULL returns so it would result in an Oops.
    
    Of course, in the current kernel, small allocations always succeed so
    this doesn't affect runtime.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11617a275ef92158abe02e11ba79fd8eb312dca6
Author: Zeng Tao <prime.zeng@hisilicon.com>
Date:   Wed Dec 26 19:22:00 2018 +0800

    usb: dwc3: gadget: Fix the uninitialized link_state when udc starts
    
    [ Upstream commit 88b1bb1f3b88e0bf20b05d543a53a5b99bd7ceb6 ]
    
    Currently the link_state is uninitialized and the default value is 0(U0)
    before the first time we start the udc, and after we start the udc then
     stop the udc, the link_state will be undefined.
    We may have the following warnings if we start the udc again with
    an undefined link_state:
    
    WARNING: CPU: 0 PID: 327 at drivers/usb/dwc3/gadget.c:294 dwc3_send_gadget_ep_cmd+0x304/0x308
    dwc3 100e0000.hidwc3_0: wakeup failed --> -22
    [...]
    Call Trace:
    [<c010f270>] (unwind_backtrace) from [<c010b3d8>] (show_stack+0x10/0x14)
    [<c010b3d8>] (show_stack) from [<c034a4dc>] (dump_stack+0x84/0x98)
    [<c034a4dc>] (dump_stack) from [<c0118000>] (__warn+0xe8/0x100)
    [<c0118000>] (__warn) from [<c0118050>](warn_slowpath_fmt+0x38/0x48)
    [<c0118050>] (warn_slowpath_fmt) from [<c0442ec0>](dwc3_send_gadget_ep_cmd+0x304/0x308)
    [<c0442ec0>] (dwc3_send_gadget_ep_cmd) from [<c0445e68>](dwc3_ep0_start_trans+0x48/0xf4)
    [<c0445e68>] (dwc3_ep0_start_trans) from [<c0446750>](dwc3_ep0_out_start+0x64/0x80)
    [<c0446750>] (dwc3_ep0_out_start) from [<c04451c0>](__dwc3_gadget_start+0x1e0/0x278)
    [<c04451c0>] (__dwc3_gadget_start) from [<c04452e0>](dwc3_gadget_start+0x88/0x10c)
    [<c04452e0>] (dwc3_gadget_start) from [<c045ee54>](udc_bind_to_driver+0x88/0xbc)
    [<c045ee54>] (udc_bind_to_driver) from [<c045f29c>](usb_gadget_probe_driver+0xf8/0x140)
    [<c045f29c>] (usb_gadget_probe_driver) from [<bf005424>](gadget_dev_desc_UDC_store+0xac/0xc4 [libcomposite])
    [<bf005424>] (gadget_dev_desc_UDC_store [libcomposite]) from[<c023d8e0>] (configfs_write_file+0xd4/0x160)
    [<c023d8e0>] (configfs_write_file) from [<c01d51e8>] (__vfs_write+0x1c/0x114)
    [<c01d51e8>] (__vfs_write) from [<c01d5ff4>] (vfs_write+0xa4/0x168)
    [<c01d5ff4>] (vfs_write) from [<c01d6d40>] (SyS_write+0x3c/0x90)
    [<c01d6d40>] (SyS_write) from [<c0107400>] (ret_fast_syscall+0x0/0x3c)
    
    Signed-off-by: Zeng Tao <prime.zeng@hisilicon.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 887a873e0ce2e5464a5d62f701900a07651e7a47
Author: Bo He <bo.he@intel.com>
Date:   Mon Jan 14 09:48:32 2019 +0200

    usb: dwc3: gadget: synchronize_irq dwc irq in suspend
    
    [ Upstream commit 01c10880d24291a96a4ab0da773e3c5ce4d12da8 ]
    
    We see dwc3 endpoint stopped by unwanted irq during
    suspend resume test, which is caused dwc3 ep can't be started
    with error "No Resource".
    
    Here, add synchronize_irq before suspend to sync the
    pending IRQ handlers complete.
    
    Signed-off-by: Bo He <bo.he@intel.com>
    Signed-off-by: Yu Wang <yu.y.wang@intel.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7330b4d0088a726876cb855810260e6ed785f123
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Dec 17 10:02:42 2018 +0300

    thermal: int340x_thermal: Fix a NULL vs IS_ERR() check
    
    [ Upstream commit 3fe931b31a4078395c1967f0495dcc9e5ec6b5e3 ]
    
    The intel_soc_dts_iosf_init() function doesn't return NULL, it returns
    error pointers.
    
    Fixes: 4d0dd6c1576b ("Thermal/int340x/processor_thermal: Enable auxiliary DTS for Braswell")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ffc6b61f38a7165e488de0dba1ffd46f676cc0f7
Author: Marek Vasut <marek.vasut@gmail.com>
Date:   Sat Dec 15 01:55:19 2018 +0100

    clk: vc5: Abort clock configuration without upstream clock
    
    [ Upstream commit 2137a109a5e39c2bdccfffe65230ed3fadbaac0e ]
    
    In case the upstream clock are not set, which can happen in case the
    VC5 has no valid upstream clock, the $src variable is used uninited
    by regmap_update_bits(). Check for this condition and return -EINVAL
    in such case.
    
    Note that in case the VC5 has no valid upstream clock, the VC5 can
    not operate correctly. That is a hardware property of the VC5. The
    internal oscilator present in some VC5 models is also considered
    upstream clock.
    
    Signed-off-by: Marek Vasut <marek.vasut+renesas@gmail.com>
    Cc: Alexey Firago <alexey_firago@mentor.com>
    Cc: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Cc: Stephen Boyd <sboyd@kernel.org>
    Cc: linux-renesas-soc@vger.kernel.org
    [sboyd@kernel.org: Added comment about probe preventing this from
    happening in the first place]
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c70c6e7f3a41a416a82faddf4f3cfd6c19d48fce
Author: Yizhuo <yzhai003@ucr.edu>
Date:   Thu Jan 3 13:59:12 2019 -0800

    ASoC: Variable "val" in function rt274_i2c_probe() could be uninitialized
    
    [ Upstream commit 8c3590de0a378c2449fc1aec127cc693632458e4 ]
    
    Inside function rt274_i2c_probe(), if regmap_read() function
    returns -EINVAL, then local variable "val" leaves uninitialized
    but used in if statement. This is potentially unsafe.
    
    Signed-off-by: Yizhuo <yzhai003@ucr.edu>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34f6404b2b1974845b3d24766c4bfe1739365d1b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Dec 21 12:06:58 2018 +0300

    ALSA: compress: prevent potential divide by zero bugs
    
    [ Upstream commit 678e2b44c8e3fec3afc7202f1996a4500a50be93 ]
    
    The problem is seen in the q6asm_dai_compr_set_params() function:
    
            ret = q6asm_map_memory_regions(dir, prtd->audio_client, prtd->phys,
                                           (prtd->pcm_size / prtd->periods),
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                           prtd->periods);
    
    In this code prtd->pcm_size is the buffer_size and prtd->periods comes
    from params->buffer.fragments.  If we allow the number of fragments to
    be zero then it results in a divide by zero bug.  One possible fix would
    be to use prtd->pcm_count directly instead of using the division to
    re-calculate it.  But I decided that it doesn't really make sense to
    allow zero fragments.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 39d926f4c18531af71831fe36100da90d1f1ce10
Author: Rander Wang <rander.wang@linux.intel.com>
Date:   Tue Dec 18 16:24:54 2018 +0800

    ASoC: Intel: Haswell/Broadwell: fix setting for .dynamic field
    
    [ Upstream commit 906a9abc5de73c383af518f5a806f4be2993a0c7 ]
    
    For some reason this field was set to zero when all other drivers use
    .dynamic = 1 for front-ends. This change was tested on Dell XPS13 and
    has no impact with the existing legacy driver. The SOF driver also works
    with this change which enables it to override the fixed topology.
    
    Signed-off-by: Rander Wang <rander.wang@linux.intel.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7796c2a06e1f0236edb5e43af8d995e1b2a8d64d
Author: Kristian H. Kristensen <hoegsberg@gmail.com>
Date:   Wed Dec 19 08:57:41 2018 -0800

    drm/msm: Unblock writer if reader closes file
    
    [ Upstream commit 99c66bc051e7407fe0bf0607b142ec0be1a1d1dd ]
    
    Prevents deadlock when fifo is full and reader closes file.
    
    Signed-off-by: Kristian H. Kristensen <hoegsberg@chromium.org>
    Signed-off-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe1c7cf1a24e22b88eaa007a7c3f25b18ae7e1de
Author: John Garry <john.garry@huawei.com>
Date:   Fri Feb 15 00:37:57 2019 +0800

    scsi: libsas: Fix rphy phy_identifier for PHYs with end devices attached
    
    commit ffeafdd2bf0b280d67ec1a47ea6287910d271f3f upstream.
    
    The sysfs phy_identifier attribute for a sas_end_device comes from the rphy
    phy_identifier value.
    
    Currently this is not being set for rphys with an end device attached, so
    we see incorrect symlinks from systemd disk/by-path:
    
    root@localhost:~# ls -l /dev/disk/by-path/
    total 0
    lrwxrwxrwx 1 root root  9 Feb 13 12:26 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy0-lun-0 -> ../../sdb
    lrwxrwxrwx 1 root root 10 Feb 13 12:26 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy0-lun-0-part1 -> ../../sdb1
    lrwxrwxrwx 1 root root 10 Feb 13 12:26 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy0-lun-0-part2 -> ../../sdb2
    lrwxrwxrwx 1 root root 10 Feb 13 12:26 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy0-lun-0-part3 -> ../../sdc3
    
    Indeed, each sas_end_device phy_identifier value is 0:
    
    root@localhost:/# more sys/class/sas_device/end_device-0\:0\:2/phy_identifier
    0
    root@localhost:/# more sys/class/sas_device/end_device-0\:0\:10/phy_identifier
    0
    
    This patch fixes the discovery code to set the phy_identifier.  With this,
    we now get proper symlinks:
    
    root@localhost:~# ls -l /dev/disk/by-path/
    total 0
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy10-lun-0 -> ../../sdg
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy11-lun-0 -> ../../sdh
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy2-lun-0 -> ../../sda
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy2-lun-0-part1 -> ../../sda1
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy3-lun-0 -> ../../sdb
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy3-lun-0-part1 -> ../../sdb1
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy3-lun-0-part2 -> ../../sdb2
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy4-lun-0 -> ../../sdc
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy4-lun-0-part1 -> ../../sdc1
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy4-lun-0-part2 -> ../../sdc2
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy4-lun-0-part3 -> ../../sdc3
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy5-lun-0 -> ../../sdd
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy7-lun-0 -> ../../sde
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy7-lun-0-part1 -> ../../sde1
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy7-lun-0-part2 -> ../../sde2
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy7-lun-0-part3 -> ../../sde3
    lrwxrwxrwx 1 root root  9 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy8-lun-0 -> ../../sdf
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy8-lun-0-part1 -> ../../sdf1
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy8-lun-0-part2 -> ../../sdf2
    lrwxrwxrwx 1 root root 10 Feb 13 11:53 platform-HISI0162:01-sas-exp0x500e004aaaaaaa1f-phy8-lun-0-part3 -> ../../sdf3
    
    Fixes: 2908d778ab3e ("[SCSI] aic94xx: new driver")
    Reported-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Jason Yan <yanaijie@huawei.com>
    Tested-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7389f857c239795a464b25573bc6e4b5d51571d6
Author: Jose Abreu <Jose.Abreu@synopsys.com>
Date:   Wed Apr 18 10:57:55 2018 +0100

    net: stmmac: Disable ACS Feature for GMAC >= 4
    
    commit 565020aaeebfa7c8b3ec077bee38f4c15acc9905 upstream.
    
    ACS Feature is currently enabled for GMAC >= 4 but the llc_snap status
    is never checked in descriptor rx_status callback. This will cause
    stmmac to always strip packets even that ACS feature is already
    stripping them.
    
    Lets be safe and disable the ACS feature for GMAC >= 4 and always strip
    the packets for this GMAC version.
    
    Fixes: 477286b53f55 ("stmmac: add GMAC4 core support")
    Signed-off-by: Jose Abreu <joabreu@synopsys.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Joao Pinto <jpinto@synopsys.com>
    Cc: Giuseppe Cavallaro <peppe.cavallaro@st.com>
    Cc: Alexandre Torgue <alexandre.torgue@st.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb8a3c4ec19663e3bf6ef5aecd6e1ebe3b932347
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Jan 18 15:12:21 2018 -0800

    net: stmmac: Fix reception of Broadcom switches tags
    
    commit 8cad443eacf661796a740903a75cb8944c675b4e upstream.
    
    Broadcom tags inserted by Broadcom switches put a 4 byte header after
    the MAC SA and before the EtherType, which may look like some sort of 0
    length LLC/SNAP packet (tcpdump and wireshark do think that way). With
    ACS enabled in stmmac the packets were truncated to 8 bytes on
    reception, whereas clearing this bit allowed normal reception to occur.
    
    In order to make that possible, we need to pass a net_device argument to
    the different core_init() functions and we are dependent on the Broadcom
    tagger padding packets correctly (which it now does). To be as little
    invasive as possible, this is only done for gmac1000 when the network
    device is DSA-enabled (netdev_uses_dsa() returns true).
    
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Acked-by: Giuseppe Cavallaro <peppe.cavallaro@st.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Niklas Cassel <niklas.cassel@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2db889605d46a33810e64c3ccf3acaf1e79d9b1
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 27 15:09:22 2019 +0100

    Revert "loop: Fold __loop_release into loop_release"
    
    This reverts commit f1e81ba8a3fa56dcc48828869b392b29559a0ac3 which is
    commit 967d1dc144b50ad005e5eecdfadfbcfb399ffff6 upstream.
    
    It does not work properly in the 4.14.y tree and causes more problems
    than it fixes, so revert it.
    
    Reported-by: Thomas Lindroth <thomas.lindroth@gmail.com>
    Reported-by: Jan Kara <jack@suse.cz>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bc55f93f299d0396d6797c44af34cb2fddad929
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 27 15:08:29 2019 +0100

    Revert "loop: Get rid of loop_index_mutex"
    
    This reverts commit c1e63df4f30c3918476ac9bc594355b0e9629893 which is
    commit 0a42e99b58a208839626465af194cfe640ef9493 upstream.
    
    It does not work properly in the 4.14.y tree and causes more problems
    than it fixes, so revert it.
    
    Reported-by: Thomas Lindroth <thomas.lindroth@gmail.com>
    Reported-by: Jan Kara <jack@suse.cz>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7f9553680b36ca8a0a0bee6695e91634be4f0f2
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 27 14:58:58 2019 +0100

    Revert "loop: Fix double mutex_unlock(&loop_ctl_mutex) in loop_control_ioctl()"
    
    This reverts commit d2762edcb6af99fc9322bab0b1d4e71a427760e8 which is
    commit 628bd85947091830a8c4872adfd5ed1d515a9cf2 upstream.
    
    It does not work properly in the 4.14.y tree and causes more problems
    than it fixes, so revert it.
    
    Reported-by: Thomas Lindroth <thomas.lindroth@gmail.com>
    Reported-by: Jan Kara <jack@suse.cz>
    Cc: syzbot <syzbot+c0138741c2290fc5e63f@syzkaller.appspotmail.com>
    Cc: Ming Lei <ming.lei@redhat.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
