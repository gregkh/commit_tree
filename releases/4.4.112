commit 42375c1120d5c90d7469ba264fb124f728b1a4f7
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jan 17 09:35:33 2018 +0100

    Linux 4.4.112

commit 125d76412866d65d459388a0399b1f4a8db0bb8f
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Jan 11 17:16:51 2018 -0800

    selftests/x86: Add test_vsyscall
    
    commit 352909b49ba0d74929b96af6dfbefc854ab6ebb5 upstream.
    
    This tests that the vsyscall entries do what they're expected to do.
    It also confirms that attempts to read the vsyscall page behave as
    expected.
    
    If changes are made to the vsyscall code or its memory map handling,
    running this test in all three of vsyscall=none, vsyscall=emulate,
    and vsyscall=native are helpful.
    
    (Because it's easy, this also compares the vsyscall results to their
     vDSO equivalents.)
    
    Note to KAISER backporters: please test this under all three
    vsyscall modes.  Also, in the emulate and native modes, make sure
    that test_vsyscall_64 agrees with the command line or config
    option as to which mode you're in.  It's quite easy to mess up
    the kernel such that native mode accidentally emulates
    or vice versa.
    
    Greg, etc: please backport this to all your Meltdown-patched
    kernels.  It'll help make sure the patches didn't regress
    vsyscalls.
    
    CSigned-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/2b9c5a174c1d60fd7774461d518aa75598b1d8fd.1515719552.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 999d4f1961fa002bda138ddfe9119965421f85da
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Thu Jan 4 14:37:05 2018 +0000

    x86/alternatives: Add missing '\n' at end of ALTERNATIVE inline asm
    
    commit b9e705ef7cfaf22db0daab91ad3cd33b0fa32eb9 upstream.
    
    Where an ALTERNATIVE is used in the middle of an inline asm block, this
    would otherwise lead to the following instruction being appended directly
    to the trailing ".popsection", and a failed compile.
    
    Fixes: 9cebed423c84 ("x86, alternative: Use .pushsection/.popsection")
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: ak@linux.intel.com
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Paul Turner <pjt@google.com>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180104143710.8961-8-dwmw@amazon.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e997d991ab2b1dc9f9cdad999a891626c2aecf21
Author: Borislav Petkov <bp@suse.de>
Date:   Wed Jan 10 12:28:16 2018 +0100

    x86/alternatives: Fix optimize_nops() checking
    
    commit 612e8e9350fd19cae6900cf36ea0c6892d1a0dca upstream.
    
    The alternatives code checks only the first byte whether it is a NOP, but
    with NOPs in front of the payload and having actual instructions after it
    breaks the "optimized' test.
    
    Make sure to scan all bytes before deciding to optimize the NOPs in there.
    
    Reported-by: David Woodhouse <dwmw2@infradead.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Andrew Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/20180110112815.mgciyf5acwacphkq@pd.tnic
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 433d7851e5ca9ce7b9a46d95c23f2b6927fd5d2c
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Tue Jan 9 15:02:51 2018 +0000

    sysfs/cpu: Fix typos in vulnerability documentation
    
    commit 9ecccfaa7cb5249bd31bdceb93fcf5bedb8a24d8 upstream.
    
    Fixes: 87590ce6e ("sysfs/cpu: Add vulnerability folder")
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 72cf81e43ba4d2c43877ad85afd0417577d610e7
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Jan 7 22:48:01 2018 +0100

    x86/cpu: Implement CPU vulnerabilites sysfs functions
    
    commit 61dc0f555b5c761cdafb0ba5bd41ecf22d68a4c4 upstream.
    
    Implement the CPU vulnerabilty show functions for meltdown, spectre_v1 and
    spectre_v2.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linuxfoundation.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Link: https://lkml.kernel.org/r/20180107214913.177414879@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73492b6860129bc3b87b1730486940d0850bfb23
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Jan 7 22:48:00 2018 +0100

    sysfs/cpu: Add vulnerability folder
    
    commit 87590ce6e373d1a5401f6539f0c59ef92dd924a9 upstream.
    
    As the meltdown/spectre problem affects several CPU architectures, it makes
    sense to have common way to express whether a system is affected by a
    particular vulnerability or not. If affected the way to express the
    mitigation should be common as well.
    
    Create /sys/devices/system/cpu/vulnerabilities folder and files for
    meltdown, spectre_v1 and spectre_v2.
    
    Allow architectures to override the show function.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Linus Torvalds <torvalds@linuxfoundation.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Link: https://lkml.kernel.org/r/20180107214913.096657732@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9718bf5f4ebbf7f0abab4c22a6d45a9dda8da098
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Oct 24 19:38:43 2016 +0200

    x86/cpu: Merge bugs.c and bugs_64.c
    
    commit 62a67e123e058a67db58bc6a14354dd037bafd0a upstream.
    
    Should be easier when following boot paths. It probably is a left over
    from the x86 unification eons ago.
    
    No functionality change.
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20161024173844.23038-3-bp@alien8.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Razvan Ghitulete <rga@amazon.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit caae411b6ee026c7f43d67932e9b5008cf623293
Author: David Woodhouse <dwmw@amazon.co.uk>
Date:   Sat Jan 6 11:49:23 2018 +0000

    x86/cpufeatures: Add X86_BUG_SPECTRE_V[12]
    
    commit 99c6fa2511d8a683e61468be91b83f85452115fa upstream.
    
    Add the bug bits for spectre v1/2 and force them unconditionally for all
    cpus.
    
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: gnomes@lxorguk.ukuu.org.uk
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: Paul Turner <pjt@google.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1515239374-23361-2-git-send-email-dwmw@amazon.co.uk
    Signed-off-by: Razvan Ghitulete <rga@amazon.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6349cab425ce91ba71676fba5aa6089cae0e6474
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Jan 5 15:27:34 2018 +0100

    x86/pti: Rename BUG_CPU_INSECURE to BUG_CPU_MELTDOWN
    
    commit de791821c295cc61419a06fe5562288417d1bc58 upstream.
    
    Use the name associated with the particular attack which needs page table
    isolation for mitigation.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Alan Cox <gnomes@lxorguk.ukuu.org.uk>
    Cc: Jiri Koshina <jikos@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Andi Lutomirski  <luto@amacapital.net>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Paul Turner <pjt@google.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Greg KH <gregkh@linux-foundation.org>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Kees Cook <keescook@google.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801051525300.1724@nanos
    Signed-off-by: Razvan Ghitulete <rga@amazon.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07c7aa5e7e8ac83768246822b61ebffbdea61ff7
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:07:33 2017 +0100

    x86/cpufeatures: Add X86_BUG_CPU_INSECURE
    
    commit a89f040fa34ec9cd682aed98b8f04e3c47d998bd upstream.
    
    Many x86 CPUs leak information to user space due to missing isolation of
    user space and kernel space page tables. There are many well documented
    ways to exploit that.
    
    The upcoming software migitation of isolating the user and kernel space
    page tables needs a misfeature flag so code can be made runtime
    conditional.
    
    Add the BUG bits which indicates that the CPU is affected and add a feature
    bit which indicates that the software migitation is enabled.
    
    Assume for now that _ALL_ x86 CPUs are affected by this. Exceptions can be
    made later.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65b28590de24afafcdc737b9fe86af0a9d2fbbdb
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 4 15:07:32 2017 +0100

    x86/cpufeatures: Make CPU bugs sticky
    
    commit 6cbd2171e89b13377261d15e64384df60ecb530e upstream.
    
    There is currently no way to force CPU bug bits like CPU feature bits. That
    makes it impossible to set a bug bit once at boot and have it stick for all
    upcoming CPUs.
    
    Extend the force set/clear arrays to handle bug bits as well.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Laight <David.Laight@aculab.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Eduardo Valentin <eduval@amazon.com>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: aliguori@amazon.com
    Cc: daniel.gruss@iaik.tugraz.at
    Cc: hughd@google.com
    Cc: keescook@google.com
    Link: https://lkml.kernel.org/r/20171204150606.992156574@linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18b849b18d1c6dd385e88a0fadfeabc08faeba9c
Author: Andy Lutomirski <luto@kernel.org>
Date:   Wed Jan 18 11:15:38 2017 -0800

    x86/cpu: Factor out application of forced CPU caps
    
    commit 8bf1ebca215c262e48c15a4a15f175991776f57f upstream.
    
    There are multiple call sites that apply forced CPU caps.  Factor
    them into a helper.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matthew Whitehead <tedheadster@gmail.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: One Thousand Gnomes <gnomes@lxorguk.ukuu.org.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Yu-cheng Yu <yu-cheng.yu@intel.com>
    Link: http://lkml.kernel.org/r/623ff7555488122143e4417de09b18be2085ad06.1484705016.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d013f41d0cc509513beb61bea7e5aebfef8521f7
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Fri Jan 5 09:44:36 2018 -0800

    x86/Documentation: Add PTI description
    
    commit 01c9b17bf673b05bb401b76ec763e9730ccf1376 upstream.
    
    Add some details about how PTI works, what some of the downsides
    are, and how to debug it when things go wrong.
    
    Also document the kernel parameter: 'pti/nopti'.
    
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Cc: Moritz Lipp <moritz.lipp@iaik.tugraz.at>
    Cc: Daniel Gruss <daniel.gruss@iaik.tugraz.at>
    Cc: Michael Schwarz <michael.schwarz@iaik.tugraz.at>
    Cc: Richard Fellner <richard.fellner@student.tugraz.at>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Andi Lutomirsky <luto@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180105174436.1BC6FA2B@viggo.jf.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf9f240627b4b732c9aedfcdcf54ffcdcda911ad
Author: Benjamin Poirier <bpoirier@suse.com>
Date:   Mon Dec 11 16:26:40 2017 +0900

    e1000e: Fix e1000_check_for_copper_link_ich8lan return value.
    
    commit 4110e02eb45ea447ec6f5459c9934de0a273fb91 upstream.
    
    e1000e_check_for_copper_link() and e1000_check_for_copper_link_ich8lan()
    are the two functions that may be assigned to mac.ops.check_for_link when
    phy.media_type == e1000_media_type_copper. Commit 19110cfbb34d ("e1000e:
    Separate signaling for link check/link up") changed the meaning of the
    return value of check_for_link for copper media but only adjusted the first
    function. This patch adjusts the second function likewise.
    
    Reported-by: Christian Hesse <list@eworm.de>
    Reported-by: Gabriel C <nix.or.die@gmail.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=198047
    Fixes: 19110cfbb34d ("e1000e: Separate signaling for link check/link up")
    Signed-off-by: Benjamin Poirier <bpoirier@suse.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Tested-by: Christian Hesse <list@eworm.de>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10a4324500ff64a7263618fa84d7dc46c9ab0883
Author: Icenowy Zheng <icenowy@aosc.io>
Date:   Sat Jan 6 00:56:44 2018 +0800

    uas: ignore UAS for Norelsys NS1068(X) chips
    
    commit 928afc85270753657b5543e052cc270c279a3fe9 upstream.
    
    The UAS mode of Norelsys NS1068(X) is reported to fail to work on
    several platforms with the following error message:
    
    xhci-hcd xhci-hcd.0.auto: ERROR Transfer event for unknown stream ring slot 1 ep 8
    xhci-hcd xhci-hcd.0.auto: @00000000bf04a400 00000000 00000000 1b000000 01098001
    
    And when trying to mount a partition on the disk the disk will
    disconnect from the USB controller, then after re-connecting the device
    will be offlined and not working at all.
    
    Falling back to USB mass storage can solve this problem, so ignore UAS
    function of this chip.
    
    Signed-off-by: Icenowy Zheng <icenowy@aosc.io>
    Acked-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ae86454c435e554d01c51535c3cd4312577cc74
Author: Ben Seri <ben@armis.com>
Date:   Fri Dec 8 15:14:47 2017 +0100

    Bluetooth: Prevent stack info leak from the EFS element.
    
    commit 06e7e776ca4d36547e503279aeff996cbb292c16 upstream.
    
    In the function l2cap_parse_conf_rsp and in the function
    l2cap_parse_conf_req the following variable is declared without
    initialization:
    
    struct l2cap_conf_efs efs;
    
    In addition, when parsing input configuration parameters in both of
    these functions, the switch case for handling EFS elements may skip the
    memcpy call that will write to the efs variable:
    
    ...
    case L2CAP_CONF_EFS:
    if (olen == sizeof(efs))
    memcpy(&efs, (void *)val, olen);
    ...
    
    The olen in the above if is attacker controlled, and regardless of that
    if, in both of these functions the efs variable would eventually be
    added to the outgoing configuration request that is being built:
    
    l2cap_add_conf_opt(&ptr, L2CAP_CONF_EFS, sizeof(efs), (unsigned long) &efs);
    
    So by sending a configuration request, or response, that contains an
    L2CAP_CONF_EFS element, but with an element length that is not
    sizeof(efs) - the memcpy to the uninitialized efs variable can be
    avoided, and the uninitialized variable would be returned to the
    attacker (16 bytes).
    
    This issue has been assigned CVE-2017-1000410
    
    Cc: Marcel Holtmann <marcel@holtmann.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Cc: Johan Hedberg <johan.hedberg@gmail.com>
    Signed-off-by: Ben Seri <ben@armis.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4106c55b574fe37900b02ddf89cbe4b9d971392
Author: Viktor Slavkovic <viktors@google.com>
Date:   Mon Jan 8 10:43:03 2018 -0800

    staging: android: ashmem: fix a race condition in ASHMEM_SET_SIZE ioctl
    
    commit 443064cb0b1fb4569fe0a71209da7625129fb760 upstream.
    
    A lock-unlock is missing in ASHMEM_SET_SIZE ioctl which can result in a
    race condition when mmap is called. After the !asma->file check, before
    setting asma->size, asma->file can be set in mmap. That would result in
    having different asma->size than the mapped memory size. Combined with
    ASHMEM_UNPIN ioctl and shrinker invocation, this can result in memory
    corruption.
    
    Signed-off-by: Viktor Slavkovic <viktors@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27a194bc8d218ed7e1aa9e10b67f5af6388c69b3
Author: Shuah Khan <shuah@kernel.org>
Date:   Fri Dec 22 17:00:06 2017 -0700

    usbip: remove kernel addresses from usb device and urb debug msgs
    
    commit e1346fd87c71a1f61de1fe476ec8df1425ac931c upstream.
    
    usbip_dump_usb_device() and usbip_dump_urb() print kernel addresses.
    Remove kernel addresses from usb device and urb debug msgs and improve
    the message content.
    
    Instead of printing parent device and bus addresses, print parent device
    and bus names.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f577093c5111454d015395daa789b1eab072876
Author: Pete Zaitcev <zaitcev@redhat.com>
Date:   Mon Jan 8 15:46:41 2018 -0600

    USB: fix usbmon BUG trigger
    
    commit 46eb14a6e1585d99c1b9f58d0e7389082a5f466b upstream.
    
    Automated tests triggered this by opening usbmon and accessing the
    mmap while simultaneously resizing the buffers. This bug was with
    us since 2006, because typically applications only size the buffers
    once and thus avoid racing. Reported by Kirill A. Shutemov.
    
    Reported-by: <syzbot+f9831b881b3e849829fc@syzkaller.appspotmail.com>
    Signed-off-by: Pete Zaitcev <zaitcev@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92e8ba1ea050f06bc1c95b1f6bab2b988b5f82d6
Author: Stefan Agner <stefan@agner.ch>
Date:   Thu Jan 11 14:47:40 2018 +0100

    usb: misc: usb3503: make sure reset is low for at least 100us
    
    commit b8626f1dc29d3eee444bfaa92146ec7b291ef41c upstream.
    
    When using a GPIO which is high by default, and initialize the
    driver in USB Hub mode, initialization fails with:
      [  111.757794] usb3503 0-0008: SP_ILOCK failed (-5)
    
    The reason seems to be that the chip is not properly reset.
    Probe does initialize reset low, however some lines later the
    code already set it back high, which is not long enouth.
    
    Make sure reset is asserted for at least 100us by inserting a
    delay after initializing the reset pin during probe.
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4c9428d035b6b0f16301e227a7c78e05cc9a4ea
Author: Christian Holl <cyborgx1@gmail.com>
Date:   Wed Jan 3 19:53:02 2018 +0100

    USB: serial: cp210x: add new device ID ELV ALC 8xxx
    
    commit d14ac576d10f865970bb1324d337e5e24d79aaf4 upstream.
    
    This adds the ELV ALC 8xxx Battery Charging device
    to the list of USB IDs of drivers/usb/serial/cp210x.c
    
    Signed-off-by: Christian Holl <cyborgx1@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a962c95895a7f5b0ac46458e750a5d8865641b59
Author: Diego Elio Pettenò <flameeyes@flameeyes.eu>
Date:   Fri Dec 29 09:54:25 2017 +0000

    USB: serial: cp210x: add IDs for LifeScan OneTouch Verio IQ
    
    commit 4307413256ac1e09b8f53e8715af3df9e49beec3 upstream.
    
    Add IDs for the OneTouch Verio IQ that comes with an embedded
    USB-to-serial converter.
    
    Signed-off-by: Diego Elio Pettenò <flameeyes@flameeyes.eu>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 531a2595ce1a457815c14aaf0310a54a8addb96c
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Oct 27 22:19:26 2017 -0800

    target: Avoid early CMD_T_PRE_EXECUTE failures during ABORT_TASK
    
    commit 1c21a48055a67ceb693e9c2587824a8de60a217c upstream.
    
    This patch fixes bug where early se_cmd exceptions that occur
    before backend execution can result in use-after-free if/when
    a subsequent ABORT_TASK occurs for the same tag.
    
    Since an early se_cmd exception will have had se_cmd added to
    se_session->sess_cmd_list via target_get_sess_cmd(), it will
    not have CMD_T_COMPLETE set by the usual target_complete_cmd()
    backend completion path.
    
    This causes a subsequent ABORT_TASK + __target_check_io_state()
    to signal ABORT_TASK should proceed.  As core_tmr_abort_task()
    executes, it will bring the outstanding se_cmd->cmd_kref count
    down to zero releasing se_cmd, after se_cmd has already been
    queued with error status into fabric driver response path code.
    
    To address this bug, introduce a CMD_T_PRE_EXECUTE bit that is
    set at target_get_sess_cmd() time, and cleared immediately before
    backend driver dispatch in target_execute_cmd() once CMD_T_ACTIVE
    is set.
    
    Then, check CMD_T_PRE_EXECUTE within __target_check_io_state() to
    determine when an early exception has occured, and avoid aborting
    this se_cmd since it will have already been queued into fabric
    driver response path code.
    
    Reported-by: Donald White <dew@datera.io>
    Cc: Donald White <dew@datera.io>
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 694c1ed559c879274e050b9c14a7975547a8f0ac
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Oct 27 12:32:59 2017 -0700

    iscsi-target: Make TASK_REASSIGN use proper se_cmd->cmd_kref
    
    commit ae072726f6109bb1c94841d6fb3a82dde298ea85 upstream.
    
    Since commit 59b6986dbf fixed a potential NULL pointer dereference
    by allocating a se_tmr_req for ISCSI_TM_FUNC_TASK_REASSIGN, the
    se_tmr_req is currently leaked by iscsit_free_cmd() because no
    iscsi_cmd->se_cmd.se_tfo was associated.
    
    To address this, treat ISCSI_TM_FUNC_TASK_REASSIGN like any other
    TMR and call transport_init_se_cmd() + target_get_sess_cmd() to
    setup iscsi_cmd->se_cmd.se_tfo with se_cmd->cmd_kref of 2.
    
    This will ensure normal release operation once se_cmd->cmd_kref
    reaches zero and target_release_cmd_kref() is invoked, se_tmr_req
    will be released via existing target_free_cmd_mem() and
    core_tmr_release_req() code.
    
    Reported-by: Donald White <dew@datera.io>
    Cc: Donald White <dew@datera.io>
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 095b0ba360ff9a86c592c1293602d42a9297e047
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Jan 12 17:58:05 2018 +0100

    bpf, array: fix overflow in max_entries and undefined behavior in index_mask
    
    commit bbeb6e4323dad9b5e0ee9f60c223dd532e2403b1 upstream.
    
    syzkaller tried to alloc a map with 0xfffffffd entries out of a userns,
    and thus unprivileged. With the recently added logic in b2157399cc98
    ("bpf: prevent out-of-bounds speculation") we round this up to the next
    power of two value for max_entries for unprivileged such that we can
    apply proper masking into potentially zeroed out map slots.
    
    However, this will generate an index_mask of 0xffffffff, and therefore
    a + 1 will let this overflow into new max_entries of 0. This will pass
    allocation, etc, and later on map access we still enforce on the original
    attr->max_entries value which was 0xfffffffd, therefore triggering GPF
    all over the place. Thus bail out on overflow in such case.
    
    Moreover, on 32 bit archs roundup_pow_of_two() can also not be used,
    since fls_long(max_entries - 1) can result in 32 and 1UL << 32 in 32 bit
    space is undefined. Therefore, do this by hand in a 64 bit variable.
    
    This fixes all the issues triggered by syzkaller's reproducers.
    
    Fixes: b2157399cc98 ("bpf: prevent out-of-bounds speculation")
    Reported-by: syzbot+b0efb8e572d01bce1ae0@syzkaller.appspotmail.com
    Reported-by: syzbot+6c15e9744f75f2364773@syzkaller.appspotmail.com
    Reported-by: syzbot+d2f5524fb46fd3b312ee@syzkaller.appspotmail.com
    Reported-by: syzbot+61d23c95395cc90dbc2b@syzkaller.appspotmail.com
    Reported-by: syzbot+0d363c942452cca68c01@syzkaller.appspotmail.com
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a7fad4c0e215fb1c256fee27c45f9f8bc4364c5
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Sun Jan 7 17:33:02 2018 -0800

    bpf: prevent out-of-bounds speculation
    
    commit b2157399cc9898260d6031c5bfe45fe137c1fbe7 upstream.
    
    Under speculation, CPUs may mis-predict branches in bounds checks. Thus,
    memory accesses under a bounds check may be speculated even if the
    bounds check fails, providing a primitive for building a side channel.
    
    To avoid leaking kernel data round up array-based maps and mask the index
    after bounds check, so speculated load with out of bounds index will load
    either valid value from the array or zero from the padded area.
    
    Unconditionally mask index for all array types even when max_entries
    are not rounded to power of 2 for root user.
    When map is created by unpriv user generate a sequence of bpf insns
    that includes AND operation to make sure that JITed code includes
    the same 'index & index_mask' operation.
    
    If prog_array map is created by unpriv user replace
      bpf_tail_call(ctx, map, index);
    with
      if (index >= max_entries) {
        index &= map->index_mask;
        bpf_tail_call(ctx, map, index);
      }
    (along with roundup to power 2) to prevent out-of-bounds speculation.
    There is secondary redundant 'if (index >= max_entries)' in the interpreter
    and in all JITs, but they can be optimized later if necessary.
    
    Other array-like maps (cpumap, devmap, sockmap, perf_event_array, cgroup_array)
    cannot be used by unpriv, so no changes there.
    
    That fixes bpf side of "Variant 1: bounds check bypass (CVE-2017-5753)" on
    all architectures with and without JIT.
    
    v2->v3:
    Daniel noticed that attack potentially can be crafted via syscall commands
    without loading the program, so add masking to those paths as well.
    
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 648064515d0d91d10d255ab1e3afa3ecffc2943a
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Wed Mar 15 18:26:41 2017 -0700

    bpf: adjust insn_aux_data when patching insns
    
    commit 8041902dae5299c1f194ba42d14383f734631009 upstream.
    
    convert_ctx_accesses() replaces single bpf instruction with a set of
    instructions. Adjust corresponding insn_aux_data while patching.
    It's needed to make sure subsequent 'for(all insn)' loops
    have matching insn and insn_aux_data.
    
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19614eee0644a59a8ea2509a6fbc0e771644a4f2
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Wed Mar 15 18:26:40 2017 -0700

    bpf: refactor fixup_bpf_calls()
    
    commit 79741b3bdec01a8628368fbcfccc7d189ed606cb upstream.
    
    reduce indent and make it iterate over instructions similar to
    convert_ctx_accesses(). Also convert hard BUG_ON into soft verifier error.
    
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14c7c55f452740549d561e583714b700cd88883e
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Wed Mar 15 18:26:39 2017 -0700

    bpf: move fixup_bpf_calls() function
    
    commit e245c5c6a5656e4d61aa7bb08e9694fd6e5b2b9d upstream.
    
    no functional change.
    move fixup_bpf_calls() to verifier.c
    it's being refactored in the next patch
    
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0748b80e432584502d1559b1a51b7df58f5e2fce
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Sep 21 11:43:56 2016 +0100

    bpf: don't (ab)use instructions to store state
    
    commit 3df126f35f88dc76eea33769f85a3c3bb8ce6c6b upstream.
    
    Storing state in reserved fields of instructions makes
    it impossible to run verifier on programs already
    marked as read-only. Allocate and use an array of
    per-instruction state instead.
    
    While touching the error path rename and move existing
    jump target.
    
    Suggested-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 087a92287dbae61b4ee1e76d7c20c81710109422
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri May 13 19:08:30 2016 +0200

    bpf: add bpf_patch_insn_single helper
    
    commit c237ee5eb33bf19fe0591c04ff8db19da7323a83 upstream.
    
    Move the functionality to patch instructions out of the verifier
    code and into the core as the new bpf_patch_insn_single() helper
    will be needed later on for blinding as well. No changes in
    functionality.
    
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c18b1bda49334cbef67d5b9fedbbe20e28566088
Author: Lepton Wu <ytht.net@gmail.com>
Date:   Fri Jan 12 13:42:56 2018 -0800

    kaiser: Set _PAGE_NX only if supported
    
    This finally resolve crash if loaded under qemu + haxm. Haitao Shan pointed
    out that the reason of that crash is that NX bit get set for page tables.
    It seems we missed checking if _PAGE_NX is supported in kaiser_add_user_map
    
    Link: https://www.spinics.net/lists/kernel/msg2689835.html
    
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Signed-off-by: Lepton Wu <ytht.net@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b6231faa21228fe486539dc33e39e865a1b0379
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jan 10 12:40:04 2018 +0300

    drm/vmwgfx: Potential off by one in vmw_view_add()
    
    commit 0d9cac0ca0429830c40fe1a4e50e60f6221fd7b6 upstream.
    
    The vmw_view_cmd_to_type() function returns vmw_view_max (3) on error.
    It's one element beyond the end of the vmw_view_cotables[] table.
    
    My read on this is that it's possible to hit this failure.  header->id
    comes from vmw_cmd_check() and it's a user controlled number between
    1040 and 1225 so we can hit that error.  But I don't have the hardware
    to test this code.
    
    Fixes: d80efd5cb3de ("drm/vmwgfx: Initial DX support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6785f955bcb615de068079943a8382c600f74c45
Author: Andrew Honig <ahonig@google.com>
Date:   Wed Jan 10 10:12:03 2018 -0800

    KVM: x86: Add memory barrier on vmcs field lookup
    
    commit 75f139aaf896d6fdeec2e468ddfa4b2fe469bf40 upstream.
    
    This adds a memory barrier when performing a lookup into
    the vmcs_field_to_offset_table.  This is related to
    CVE-2017-5753.
    
    Signed-off-by: Andrew Honig <ahonig@google.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d1bef0f6037f4cb3380cc41596ec1b6ecfb19a7
Author: Jia Zhang <qianyue.zj@alibaba-inc.com>
Date:   Mon Jan 1 10:04:47 2018 +0800

    x86/microcode/intel: Extend BDW late-loading with a revision check
    
    commit b94b7373317164402ff7728d10f7023127a02b60 upstream.
    
    Instead of blacklisting all model 79 CPUs when attempting a late
    microcode loading, limit that only to CPUs with microcode revisions <
    0x0b000021 because only on those late loading may cause a system hang.
    
    For such processors either:
    
    a) a BIOS update which might contain a newer microcode revision
    
    or
    
    b) the early microcode loading method
    
    should be considered.
    
    Processors with revisions 0x0b000021 or higher will not experience such
    hangs.
    
    For more details, see erratum BDF90 in document #334165 (Intel Xeon
    Processor E7-8800/4800 v4 Product Family Specification Update) from
    September 2017.
    
    [ bp: Heavily massage commit message and pr_* statements. ]
    
    Fixes: 723f2828a98c ("x86/microcode/intel: Disable late loading on model 79")
    Signed-off-by: Jia Zhang <qianyue.zj@alibaba-inc.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Tony Luck <tony.luck@intel.com>
    Cc: x86-ml <x86@kernel.org>
    Link: http://lkml.kernel.org/r/1514772287-92959-1-git-send-email-qianyue.zj@alibaba-inc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c77dd7b425cdb1a038862b7b092495115e90e6d4
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Thu Dec 21 15:35:11 2017 +0100

    rbd: set max_segments to USHRT_MAX
    
    commit 21acdf45f4958135940f0b4767185cf911d4b010 upstream.
    
    Commit d3834fefcfe5 ("rbd: bump queue_max_segments") bumped
    max_segments (unsigned short) to max_hw_sectors (unsigned int).
    max_hw_sectors is set to the number of 512-byte sectors in an object
    and overflows unsigned short for 32M (largest possible) objects, making
    the block layer resort to handing us single segment (i.e. single page
    or even smaller) bios in that case.
    
    Fixes: d3834fefcfe5 ("rbd: bump queue_max_segments")
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Alex Elder <elder@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68829e75666e85aa2191dfbea6d52e91b7acaa89
Author: Eric Biggers <ebiggers@google.com>
Date:   Fri Dec 29 14:30:19 2017 -0600

    crypto: algapi - fix NULL dereference in crypto_remove_spawns()
    
    commit 9a00674213a3f00394f4e3221b88f2d21fc05789 upstream.
    
    syzkaller triggered a NULL pointer dereference in crypto_remove_spawns()
    via a program that repeatedly and concurrently requests AEADs
    "authenc(cmac(des3_ede-asm),pcbc-aes-aesni)" and hashes "cmac(des3_ede)"
    through AF_ALG, where the hashes are requested as "untested"
    (CRYPTO_ALG_TESTED is set in ->salg_mask but clear in ->salg_feat; this
    causes the template to be instantiated for every request).
    
    Although AF_ALG users really shouldn't be able to request an "untested"
    algorithm, the NULL pointer dereference is actually caused by a
    longstanding race condition where crypto_remove_spawns() can encounter
    an instance which has had spawn(s) "grabbed" but hasn't yet been
    registered, resulting in ->cra_users still being NULL.
    
    We probably should properly initialize ->cra_users earlier, but that
    would require updating many templates individually.  For now just fix
    the bug in a simple way that can easily be backported: make
    crypto_remove_spawns() treat a NULL ->cra_users list as empty.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 608644ac89aa2e4795880bca1651a29118d63c44
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jan 10 03:45:49 2018 -0800

    ipv6: fix possible mem leaks in ipv6_make_skb()
    
    
    [ Upstream commit 862c03ee1deb7e19e0f9931682e0294ecd1fcaf9 ]
    
    ip6_setup_cork() might return an error, while memory allocations have
    been done and must be rolled back.
    
    Fixes: 6422398c2ab0 ("ipv6: introduce ipv6_make_skb")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Vlad Yasevich <vyasevich@gmail.com>
    Reported-by: Mike Maloney <maloney@google.com>
    Acked-by:  Mike Maloney <maloney@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b188ce30cc1bc89381476977509ebffabfb16323
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Wed Jan 3 16:46:29 2018 +0100

    net: stmmac: enable EEE in MII, GMII or RGMII only
    
    
    [ Upstream commit 879626e3a52630316d817cbda7cec9a5446d1d82 ]
    
    Note in the databook - Section 4.4 - EEE :
    " The EEE feature is not supported when the MAC is configured to use the
    TBI, RTBI, SMII, RMII or SGMII single PHY interface. Even if the MAC
    supports multiple PHY interfaces, you should activate the EEE mode only
    when the MAC is operating with GMII, MII, or RGMII interface."
    
    Applying this restriction solves a stability issue observed on Amlogic
    gxl platforms operating with RMII interface and the internal PHY.
    
    Fixes: 83bf79b6bb64 ("stmmac: disable at run-time the EEE if not supported")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Tested-by: Arnaud Patard <arnaud.patard@rtp-net.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f574e2e8c6cf01b4fb57ac38d89ee63be3c1dacd
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Thu Jan 4 21:06:49 2018 +0300

    sh_eth: fix SH7757 GEther initialization
    
    
    [ Upstream commit 5133550296d43236439494aa955bfb765a89f615 ]
    
    Renesas  SH7757 has 2 Fast and 2 Gigabit Ether controllers, while the
    'sh_eth' driver can only reset and initialize TSU of the first controller
    pair. Shimoda-san tried to solve that adding the 'needs_init' member to the
    'struct sh_eth_plat_data', however the platform code still never sets this
    flag. I think  that we can infer this information from the 'devno' variable
    (set  to 'platform_device::id') and reset/init the Ether controller pair
    only for an even 'devno'; therefore 'sh_eth_plat_data::needs_init' can be
    removed...
    
    Fixes: 150647fb2c31 ("net: sh_eth: change the condition of initialization")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29ca856bb76adb263d2dd3ed8c2cd193b08c3411
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Wed Jan 3 20:09:49 2018 +0300

    sh_eth: fix TSU resource handling
    
    
    [ Upstream commit dfe8266b8dd10e12a731c985b725fcf7f0e537f0 ]
    
    When switching  the driver to the managed device API,  I managed to break
    the  case of a  dual Ether devices sharing a single TSU: the 2nd Ether port
    wouldn't probe. Iwamatsu-san has tried to fix this but his patch was buggy
    and he then dropped the ball...
    
    The solution is to  limit calling devm_request_mem_region() to the first
    of  the two  ports  sharing the same TSU, so devm_ioremap_resource() can't
    be used anymore for the TSU resource...
    
    Fixes: d5e07e69218f ("sh_eth: use managed device API")
    Reported-by: Nobuhiro Iwamatsu <nobuhiro.iwamatsu.yj@renesas.com>
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 44496521c6bd65a3c525b490c762875a075cf73b
Author: Mohamed Ghannam <simo.ghannam@gmail.com>
Date:   Wed Jan 3 21:06:06 2018 +0000

    RDS: null pointer dereference in rds_atomic_free_op
    
    
    [ Upstream commit 7d11f77f84b27cef452cee332f4e469503084737 ]
    
    set rm->atomic.op_active to 0 when rds_pin_pages() fails
    or the user supplied address is invalid,
    this prevents a NULL pointer usage in rds_atomic_free_op()
    
    Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10d06ed9a1899fcc1ecb7a1573f0f95b92dc470c
Author: Mohamed Ghannam <simo.ghannam@gmail.com>
Date:   Tue Jan 2 19:44:34 2018 +0000

    RDS: Heap OOB write in rds_message_alloc_sgs()
    
    
    [ Upstream commit c095508770aebf1b9218e77026e48345d719b17c ]
    
    When args->nr_local is 0, nr_pages gets also 0 due some size
    calculation via rds_rm_size(), which is later used to allocate
    pages for DMA, this bug produces a heap Out-Of-Bound write access
    to a specific memory region.
    
    Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d19b5ed46cce475fa8cae56aba8eadf794a1f090
Author: Andrii Vladyka <tulup@mail.ru>
Date:   Thu Jan 4 13:09:17 2018 +0200

    net: core: fix module type in sock_diag_bind
    
    
    [ Upstream commit b8fd0823e0770c2d5fdbd865bccf0d5e058e5287 ]
    
    Use AF_INET6 instead of AF_INET in IPv6-related code path
    
    Signed-off-by: Andrii Vladyka <tulup@mail.ru>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9f16497eec26d8009791493e6f2dda03348819d
Author: Eli Cooper <elicooper@gmx.com>
Date:   Mon Dec 25 10:43:49 2017 +0800

    ip6_tunnel: disable dst caching if tunnel is dual-stack
    
    
    [ Upstream commit 23263ec86a5f44312d2899323872468752324107 ]
    
    When an ip6_tunnel is in mode 'any', where the transport layer
    protocol can be either 4 or 41, dst_cache must be disabled.
    
    This is because xfrm policies might apply to only one of the two
    protocols. Caching dst would cause xfrm policies for one protocol
    incorrectly used for the other.
    
    Signed-off-by: Eli Cooper <elicooper@gmx.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e1cadec4187426e9e1f46936865d2fb2da9860c
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Tue Jan 9 13:40:41 2018 -0800

    8021q: fix a memory leak for VLAN 0 device
    
    
    [ Upstream commit 78bbb15f2239bc8e663aa20bbe1987c91a0b75f6 ]
    
    A vlan device with vid 0 is allow to creat by not able to be fully
    cleaned up by unregister_vlan_dev() which checks for vlan_id!=0.
    
    Also, VLAN 0 is probably not a valid number and it is kinda
    "reserved" for HW accelerating devices, but it is probably too
    late to reject it from creation even if makes sense. Instead,
    just remove the check in unregister_vlan_dev().
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Fixes: ad1afb003939 ("vlan_dev: VLAN 0 should be treated as "no vlan tag" (802.1p packet)")
    Cc: Vlad Yasevich <vyasevich@gmail.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ec5d87df34a90758cf2aaf6824bb748454a8f35
Author: Pavel Tatashin <pasha.tatashin@oracle.com>
Date:   Fri Jan 12 15:00:02 2018 -0500

    x86/pti/efi: broken conversion from efi to kernel page table
    
    In entry_64.S we have code like this:
    
        /* Unconditionally use kernel CR3 for do_nmi() */
        /* %rax is saved above, so OK to clobber here */
        ALTERNATIVE "jmp 2f", "movq %cr3, %rax", X86_FEATURE_KAISER
        /* If PCID enabled, NOFLUSH now and NOFLUSH on return */
        ALTERNATIVE "", "bts $63, %rax", X86_FEATURE_PCID
        pushq   %rax
        /* mask off "user" bit of pgd address and 12 PCID bits: */
        andq    $(~(X86_CR3_PCID_ASID_MASK | KAISER_SHADOW_PGD_OFFSET)), %rax
        movq    %rax, %cr3
    2:
    
        /* paranoidentry do_nmi, 0; without TRACE_IRQS_OFF */
        call    do_nmi
    
    With this instruction:
        andq    $(~(X86_CR3_PCID_ASID_MASK | KAISER_SHADOW_PGD_OFFSET)), %rax
    
    We unconditionally switch from whatever our CR3 was to kernel page table.
    But, in arch/x86/platform/efi/efi_64.c We temporarily set a different page
    table, that does not have the kernel page table with 0x1000 offset from it.
    
    Look in efi_thunk() and efi_thunk_set_virtual_address_map().
    
    So, while CR3 points to the other page table, we get an NMI interrupt,
    and clear 0x1000 from CR3, resulting in a bogus CR3 if the 0x1000 bit was
    set.
    
    The efi page table comes from realmode/rm/trampoline_64.S:
    
    arch/x86/realmode/rm/trampoline_64.S
    
    141 .bss
    142 .balign PAGE_SIZE
    143 GLOBAL(trampoline_pgd) .space PAGE_SIZE
    
    Notice: alignment is PAGE_SIZE, so after applying KAISER_SHADOW_PGD_OFFSET
    which equal to PAGE_SIZE, we can get a different page table.
    
    But, even if we fix alignment, here the trampoline binary is later copied
    into dynamically allocated memory in reserve_real_mode(), so we need to
    fix that place as well.
    
    Fixes: 8a43ddfb93a0 ("KAISER: Kernel Address Isolation")
    
    Signed-off-by: Pavel Tatashin <pasha.tatashin@oracle.com>
    Reviewed-by: Steven Sistare <steven.sistare@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc0e36105661cfc94dad685b1075432f7b94e2e2
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Jan 13 11:19:07 2018 +0100

    Revert "userfaultfd: selftest: vm: allow to build in vm/ directory"
    
    This reverts commit b5213e1e9f25ccde958aa6364815ee87fef91100 which was
    commit 46aa6a302b53f543f8e8b8e1714dc5e449ad36a6 upstream.
    
    This is being reverted because the affected commit this was trying to
    fix, a8ba798bc8ec ("selftests: enable O and KBUILD_OUTPUT"), was never
    backported to the 4.4-stable tree.
    
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Cc: "Dr. David Alan Gilbert" <dgilbert@redhat.com>
    Cc: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Pavel Emelyanov <xemul@parallels.com>
    Cc: Hillf Danton <hillf.zj@alibaba-inc.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ae43090f13b7f6b6a8d4f4889727d2db4e81dd8
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Thu Jan 11 17:01:36 2018 +0000

    xhci: Fix ring leak in failure path of xhci_alloc_virt_device()
    
    This is a stable-only fix for the backport of commit 5d9b70f7d52e
    ("xhci: Don't add a virt_dev to the devs array before it's fully
    allocated").
    
    In branches that predate commit c5628a2af83a ("xhci: remove endpoint
    ring cache") there is an additional failure path in
    xhci_alloc_virt_device() where ring cache allocation fails, in
    which case we need to free the ring allocated for endpoint 0.
    
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: Mathias Nyman <mathias.nyman@intel.com>

commit 6321e175356326f16d5d7d066c067f48483f5317
Author: Ani Sinha <ani@arista.com>
Date:   Thu Dec 17 17:15:10 2015 -0800

    sysrq: Fix warning in sysrq generated crash.
    
    commit 984cf355aeaa8f2eda3861b50d0e8d3e3f77e83b upstream.
    
    Commit 984d74a72076a1 ("sysrq: rcu-ify __handle_sysrq") replaced
    spin_lock_irqsave() calls with rcu_read_lock() calls in sysrq. Since
    rcu_read_lock() does not disable preemption, faulthandler_disabled() in
    __do_page_fault() in x86/fault.c returns false. When the code later calls
    might_sleep() in the pagefault handler, we get the following warning:
    
    BUG: sleeping function called from invalid context at ../arch/x86/mm/fault.c:1187
    in_atomic(): 0, irqs_disabled(): 0, pid: 4706, name: bash
    Preemption disabled at:[<ffffffff81484339>] printk+0x48/0x4a
    
    To fix this, we release the RCU read lock before we crash.
    
    Tested this patch on linux 3.18 by booting off one of our boards.
    
    Fixes: 984d74a72076a1 ("sysrq: rcu-ify __handle_sysrq")
    
    Signed-off-by: Ani Sinha <ani@arista.com>
    Reviewed-by: Rik van Riel <riel@redhat.com>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f61bd5c4ff5c2b6a63113bff6c4a4bace2b9a3a
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Fri Nov 27 16:50:43 2015 +0100

    hwrng: core - sleep interruptible in read
    
    commit 1ab87298cb59b649d8d648d25dc15b36ab865f5a upstream.
    
    hwrng kthread can be waiting via hwrng_fillfn for some data from a rng
    like virtio-rng:
    hwrng           D ffff880093e17798     0   382      2 0x00000000
    ...
    Call Trace:
     [<ffffffff817339c6>] wait_for_completion_killable+0x96/0x210
     [<ffffffffa00aa1b7>] virtio_read+0x57/0xf0 [virtio_rng]
     [<ffffffff814f4a35>] hwrng_fillfn+0x75/0x130
     [<ffffffff810aa243>] kthread+0xf3/0x110
    
    And when some user program tries to read the /dev node in this state,
    we get:
    rngd            D ffff880093e17798     0   762      1 0x00000004
    ...
    Call Trace:
     [<ffffffff817351ac>] mutex_lock_nested+0x15c/0x3e0
     [<ffffffff814f478e>] rng_dev_read+0x6e/0x240
     [<ffffffff81231958>] __vfs_read+0x28/0xe0
     [<ffffffff81232393>] vfs_read+0x83/0x130
    
    And this is indeed unkillable. So use mutex_lock_interruptible
    instead of mutex_lock in rng_dev_read and exit immediatelly when
    interrupted. And possibly return already read data, if any (as POSIX
    allows).
    
    v2: use ERESTARTSYS instead of EINTR
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: Matt Mackall <mpm@selenic.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: <linux-crypto@vger.kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f065b5f78d17fe835ad6f51f1a4f8e3e2e0efec3
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Fri Jul 8 11:38:28 2016 +0200

    x86/mm/pat, /dev/mem: Remove superfluous error message
    
    commit 39380b80d72723282f0ea1d1bbf2294eae45013e upstream.
    
    Currently it's possible for broken (or malicious) userspace to flood a
    kernel log indefinitely with messages a-la
    
            Program dmidecode tried to access /dev/mem between f0000->100000
    
    because range_is_allowed() is case of CONFIG_STRICT_DEVMEM being turned on
    dumps this information each and every time devmem_is_allowed() fails.
    
    Reportedly userspace that is able to trigger contignuous flow of these
    messages exists.
    
    It would be possible to rate limit this message, but that'd have a
    questionable value; the administrator wouldn't get information about all
    the failing accessess, so then the information would be both superfluous
    and incomplete at the same time :)
    
    Returning EPERM (which is what is actually happening) is enough indication
    for userspace what has happened; no need to log this particular error as
    some sort of special condition.
    
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Luis R. Rodriguez <mcgrof@suse.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Toshi Kani <toshi.kani@hp.com>
    Link: http://lkml.kernel.org/r/alpine.LNX.2.00.1607081137020.24757@cbobk.fhfr.pm
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 146001aeb9af927567173f1ec15eee4de6568dbe
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Apr 19 09:59:22 2017 -0700

    cx82310_eth: use skb_cow_head() to deal with cloned skbs
    
    commit a9e840a2081ed28c2b7caa6a9a0041c950b3c37d upstream.
    
    We need to ensure there is enough headroom to push extra header,
    but we also need to check if we are allowed to change headers.
    
    skb_cow_head() is the proper helper to deal with this.
    
    Fixes: cc28a20e77b2 ("introduce cx82310_eth: Conexant CX82310-based ADSL router USB ethernet driver")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: James Hughes <james.hughes@raspberrypi.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be48b6ee6d07beb68e115936855786f9d99dbe54
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Apr 19 09:59:21 2017 -0700

    smsc75xx: use skb_cow_head() to deal with cloned skbs
    
    commit b7c6d2675899cfff0180412c63fc9cbd5bacdb4d upstream.
    
    We need to ensure there is enough headroom to push extra header,
    but we also need to check if we are allowed to change headers.
    
    skb_cow_head() is the proper helper to deal with this.
    
    Fixes: d0cad871703b ("smsc75xx: SMSC LAN75xx USB gigabit ethernet adapter driver")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: James Hughes <james.hughes@raspberrypi.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36a1c87f57f6e92673403324144271ca4d74ffad
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Apr 19 09:59:23 2017 -0700

    sr9700: use skb_cow_head() to deal with cloned skbs
    
    commit d532c1082f68176363ed766d09bf187616e282fe upstream.
    
    We need to ensure there is enough headroom to push extra header,
    but we also need to check if we are allowed to change headers.
    
    skb_cow_head() is the proper helper to deal with this.
    
    Fixes: c9b37458e956 ("USB2NET : SR9700 : One chip USB 1.1 USB2NET SR9700Device Driver Support")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: James Hughes <james.hughes@raspberrypi.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efca4f469475f5d0ab0573311b091a2086246834
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Apr 19 09:59:24 2017 -0700

    lan78xx: use skb_cow_head() to deal with cloned skbs
    
    commit d4ca73591916b760478d2b04334d5dcadc028e9c upstream.
    
    We need to ensure there is enough headroom to push extra header,
    but we also need to check if we are allowed to change headers.
    
    skb_cow_head() is the proper helper to deal with this.
    
    Fixes: 55d7de9de6c3 ("Microchip's LAN7800 family USB 2/3 to 10/100/1000 Ethernet device driver")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: James Hughes <james.hughes@raspberrypi.org>
    Cc: Woojung Huh <woojung.huh@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad196359a6d11a0a83e8d9e8b58a33357d9e8aa9
Author: hayeswang <hayeswang@realtek.com>
Date:   Thu Jan 7 17:51:12 2016 +0800

    r8152: adjust ALDPS function
    
    commit cda9fb01dc3cafd718b2865b447e869bf6624ddd upstream.
    
    Replace disable_aldps() and enable_aldps() with aldps_en().
    
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a37ff616d720dbfe445e9791e1417c09b7c68165
Author: hayeswang <hayeswang@realtek.com>
Date:   Thu Jan 7 17:51:11 2016 +0800

    r8152: use test_and_clear_bit
    
    commit 216a8349d3a0dd1bc2afbcc821e374c8f929bd62 upstream.
    
    Replace test_bit() followed by clear_bit() with test_and_clear_bit().
    
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d614746ea0bd0e51a2ba8611e80bdc972759180
Author: hayeswang <hayeswang@realtek.com>
Date:   Thu Jan 7 17:12:17 2016 +0800

    r8152: fix the wake event
    
    commit 5ee3c60c8d3b88cab6496c9b7d49a01576dd9cf9 upstream.
    
    When the autosuspend is enabled and occurs before system suspend, we should
    wake the device before running system syspend. Then, we could change the wake
    event for system suspend. Otherwise, the device would resume the system when
    receiving any packet.
    
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea6f411117e16f01c363042c4f2fb25655e52483
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Mon Jan 25 13:01:29 2016 +0100

    usb: musb: ux500: Fix NULL pointer dereference at system PM
    
    commit 79c5623f1cb85f33403eb9f1e45124e9f56181f8 upstream.
    
    The commit 7d32cdef5356 ("usb: musb: fail with error when no DMA
    controller set"), caused the core platform driver to correctly return an
    error code when fail probing.
    
    Unfurtante it also caused bug for a NULL pointer dereference, during
    system suspend for the ux500 driver. The reason is a lacking validation
    of the corresponding ->driver_data pointer, which won't be set when the
    musb core driver fails to probe (or haven't yet been probed).
    
    Fixes: 7d32cdef5356 ("usb: musb: fail with error when no DMA...")
    Acked-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 829b82508c55d58f585ae8dbf692351fc2dee775
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue Oct 27 09:51:34 2015 -0200

    usbvision fix overflow of interfaces array
    
    commit 588afcc1c0e45358159090d95bf7b246fb67565f upstream.
    
    This fixes the crash reported in:
    http://seclists.org/bugtraq/2015/Oct/35
    The interface number needs a sanity check.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: Vladis Dronov <vdronov@redhat.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd44e3f19d14e196fdd2635698ff5612e971dfa5
Author: Davidlohr Bueso <dave@stgolabs.net>
Date:   Sun Jan 24 18:23:43 2016 -0800

    locking/mutex: Allow next waiter lockless wakeup
    
    commit 1329ce6fbbe4536592dfcfc8d64d61bfeb598fe6 upstream.
    
    Make use of wake-queues and enable the wakeup to occur after releasing the
    wait_lock. This is similar to what we do with rtmutex top waiter,
    slightly shortening the critical region and allow other waiters to
    acquire the wait_lock sooner. In low contention cases it can also help
    the recently woken waiter to find the wait_lock available (fastpath)
    when it continues execution.
    
    Reviewed-by: Waiman Long <Waiman.Long@hpe.com>
    Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Ding Tianhong <dingtianhong@huawei.com>
    Cc: Jason Low <jason.low2@hp.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Paul E. McKenney <paulmck@us.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Waiman Long <waiman.long@hpe.com>
    Cc: Will Deacon <Will.Deacon@arm.com>
    Link: http://lkml.kernel.org/r/20160125022343.GA3322@linux-uzut.site
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1920b8a6a6ed80d3a595ff718c0a99c7d4d895c4
Author: Jianyu Zhan <nasa4836@gmail.com>
Date:   Mon Mar 7 09:32:24 2016 +0800

    futex: Replace barrier() in unqueue_me() with READ_ONCE()
    
    commit 29b75eb2d56a714190a93d7be4525e617591077a upstream.
    
    Commit e91467ecd1ef ("bug in futex unqueue_me") introduced a barrier() in
    unqueue_me() to prevent the compiler from rereading the lock pointer which
    might change after a check for NULL.
    
    Replace the barrier() with a READ_ONCE() for the following reasons:
    
    1) READ_ONCE() is a weaker form of barrier() that affects only the specific
       load operation, while barrier() is a general compiler level memory barrier.
       READ_ONCE() was not available at the time when the barrier was added.
    
    2) Aside of that READ_ONCE() is descriptive and self explainatory while a
       barrier without comment is not clear to the casual reader.
    
    No functional change.
    
    [ tglx: Massaged changelog ]
    
    Signed-off-by: Jianyu Zhan <nasa4836@gmail.com>
    Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Acked-by: Darren Hart <dvhart@linux.intel.com>
    Cc: dave@stgolabs.net
    Cc: peterz@infradead.org
    Cc: linux@rasmusvillemoes.dk
    Cc: akpm@linux-foundation.org
    Cc: fengguang.wu@intel.com
    Cc: bigeasy@linutronix.de
    Link: http://lkml.kernel.org/r/1457314344-5685-1-git-send-email-nasa4836@gmail.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e143f5d262580021b2452398f92692e76ae8cf73
Author: Jeff Layton <jeff.layton@primarydata.com>
Date:   Fri Jan 8 07:30:43 2016 -0500

    locks: don't check for race with close when setting OFD lock
    
    commit 0752ba807b04ccd69cb4bc8bbf829a80ee208a3c upstream.
    
    We don't clean out OFD locks on close(), so there's no need to check
    for a race with them here. They'll get cleaned out at the same time
    that flock locks are.
    
    Signed-off-by: Jeff Layton <jeff.layton@primarydata.com>
    Acked-by: "J. Bruce Fields" <bfields@fieldses.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Mel Gorman <mgorman@suse.de>

commit c4eafbc2ba115bf6a4dbbc12874e16aa7f0c7283
Author: Dan Streetman <ddstreet@ieee.org>
Date:   Mon Feb 27 14:26:53 2017 -0800

    zswap: don't param_set_charp while holding spinlock
    
    commit fd5bb66cd934987e49557455b6497fc006521940 upstream.
    
    Change the zpool/compressor param callback function to release the
    zswap_pools_lock spinlock before calling param_set_charp, since that
    function may sleep when it calls kmalloc with GFP_KERNEL.
    
    While this problem has existed for a while, I wasn't able to trigger it
    using a tight loop changing either/both the zpool and compressor params; I
    think it's very unlikely to be an issue on the stable kernels, especially
    since most zswap users will change the compressor and/or zpool from sysfs
    only one time each boot - or zero times, if they add the params to the
    kernel boot.
    
    Fixes: c99b42c3529e ("zswap: use charp for zswap param strings")
    Link: http://lkml.kernel.org/r/20170126155821.4545-1-ddstreet@ieee.org
    Signed-off-by: Dan Streetman <dan.streetman@canonical.com>
    Reported-by: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Minchan Kim <minchan@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eeca23f21cfb78bf537e1575874862cee91f7688
Author: Dan Streetman <ddstreet@ieee.org>
Date:   Fri May 20 16:59:54 2016 -0700

    mm/zswap: use workqueue to destroy pool
    
    commit 200867af4dedfe7cb707f96773684de1d1fd21e6 upstream.
    
    Add a work_struct to struct zswap_pool, and change __zswap_pool_empty to
    use the workqueue instead of using call_rcu().
    
    When zswap destroys a pool no longer in use, it uses call_rcu() to
    perform the destruction/freeing.  Since that executes in softirq
    context, it must not sleep.  However, actually destroying the pool
    involves freeing the per-cpu compressors (which requires locking the
    cpu_add_remove_lock mutex) and freeing the zpool, for which the
    implementation may sleep (e.g.  zsmalloc calls kmem_cache_destroy, which
    locks the slab_mutex).  So if either mutex is currently taken, or any
    other part of the compressor or zpool implementation sleeps, it will
    result in a BUG().
    
    It's not easy to reproduce this when changing zswap's params normally.
    In testing with a loaded system, this does not fail:
    
      $ cd /sys/module/zswap/parameters
      $ echo lz4 > compressor ; echo zsmalloc > zpool
    
    nor does this:
    
      $ while true ; do
      > echo lzo > compressor ; echo zbud > zpool
      > sleep 1
      > echo lz4 > compressor ; echo zsmalloc > zpool
      > sleep 1
      > done
    
    although it's still possible either of those might fail, depending on
    whether anything else besides zswap has locked the mutexes.
    
    However, changing a parameter with no delay immediately causes the
    schedule while atomic BUG:
    
      $ while true ; do
      > echo lzo > compressor ; echo lz4 > compressor
      > done
    
    This is essentially the same as Yu Zhao's proposed patch to zsmalloc,
    but moved to zswap, to cover compressor and zpool freeing.
    
    Fixes: f1c54846ee45 ("zswap: dynamic pool creation")
    Signed-off-by: Dan Streetman <ddstreet@ieee.org>
    Reported-by: Yu Zhao <yuzhao@google.com>
    Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Dan Streetman <dan.streetman@canonical.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45c26b0736efad011b829d587fadf7085f948294
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Tue Mar 15 14:55:27 2016 -0700

    mm/page-writeback: fix dirty_ratelimit calculation
    
    commit d59b1087a98e402ed9a7cc577f4da435f9a555f5 upstream.
    
    Calculation of dirty_ratelimit sometimes is not correct.  E.g.  initial
    values of dirty_ratelimit == INIT_BW and step == 0, lead to the
    following result:
    
       UBSAN: Undefined behaviour in ../mm/page-writeback.c:1286:7
       shift exponent 25600 is too large for 64-bit type 'long unsigned int'
    
    The fix is straightforward - make step 0 if the shift exponent is too
    big.
    
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Wu Fengguang <fengguang.wu@intel.com>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9780795fc1e5e3d6a98374df01d1f10372203fdf
Author: Joonsoo Kim <iamjoonsoo.kim@lge.com>
Date:   Tue Mar 15 14:57:48 2016 -0700

    mm/compaction: pass only pageblock aligned range to pageblock_pfn_to_page
    
    commit e1409c325fdc1fef7b3d8025c51892355f065d15 upstream.
    
    pageblock_pfn_to_page() is used to check there is valid pfn and all
    pages in the pageblock is in a single zone.  If there is a hole in the
    pageblock, passing arbitrary position to pageblock_pfn_to_page() could
    cause to skip whole pageblock scanning, instead of just skipping the
    hole page.  For deterministic behaviour, it's better to always pass
    pageblock aligned range to pageblock_pfn_to_page().  It will also help
    further optimization on pageblock_pfn_to_page() in the following patch.
    
    Signed-off-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Aaron Lu <aaron.lu@intel.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Rik van Riel <riel@redhat.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 756000bec7c1ef7677027d0d8060ee402b83b5d1
Author: Joonsoo Kim <iamjoonsoo.kim@lge.com>
Date:   Tue Mar 15 14:57:45 2016 -0700

    mm/compaction: fix invalid free_pfn and compact_cached_free_pfn
    
    commit 623446e4dc45b37740268165107cc63abb3022f0 upstream.
    
    free_pfn and compact_cached_free_pfn are the pointer that remember
    restart position of freepage scanner.  When they are reset or invalid,
    we set them to zone_end_pfn because freepage scanner works in reverse
    direction.  But, because zone range is defined as [zone_start_pfn,
    zone_end_pfn), zone_end_pfn is invalid to access.  Therefore, we should
    not store it to free_pfn and compact_cached_free_pfn.  Instead, we need
    to store zone_end_pfn - 1 to them.  There is one more thing we should
    consider.  Freepage scanner scan reversely by pageblock unit.  If
    free_pfn and compact_cached_free_pfn are set to middle of pageblock, it
    regards that sitiation as that it already scans front part of pageblock
    so we lose opportunity to scan there.  To fix-up, this patch do
    round_down() to guarantee that reset position will be pageblock aligned.
    
    Note that thanks to the current pageblock_pfn_to_page() implementation,
    actual access to zone_end_pfn doesn't happen until now.  But, following
    patch will change pageblock_pfn_to_page() so this patch is needed from
    now on.
    
    Signed-off-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Aaron Lu <aaron.lu@intel.com>
    Cc: Mel Gorman <mgorman@suse.de>
    Cc: Rik van Riel <riel@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Mel Gorman <mgorman@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e82bbca5896839fa87c4ef2e6cd4d342ef762a7
Author: Vikas C Sajjan <vikas.cha.sajjan@hpe.com>
Date:   Thu Nov 16 21:43:45 2017 +0530

    x86/acpi: Reduce code duplication in mp_override_legacy_irq()
    
    commit 4ee2ec1b122599f7b10c849fa7915cebb37b7edb upstream.
    
    The new function mp_register_ioapic_irq() is a subset of the code in
    mp_override_legacy_irq().
    
    Replace the code duplication by invoking mp_register_ioapic_irq() from
    mp_override_legacy_irq().
    
    Signed-off-by: Vikas C Sajjan <vikas.cha.sajjan@hpe.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: linux-pm@vger.kernel.org
    Cc: kkamagui@gmail.com
    Cc: linux-acpi@vger.kernel.org
    Link: https://lkml.kernel.org/r/1510848825-21965-3-git-send-email-vikas.cha.sajjan@hpe.com
    Cc: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d091a2bb8c2e9801875531b6cb14e1df1729045c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 4 17:38:54 2018 +0100

    ALSA: aloop: Fix racy hw constraints adjustment
    
    commit 898dfe4687f460ba337a01c11549f87269a13fa2 upstream.
    
    The aloop driver tries to update the hw constraints of the connected
    target on the cable of the opened PCM substream.  This is done by
    adding the extra hw constraints rules referring to the substream
    runtime->hw fields, while the other substream may update the runtime
    hw of another side on the fly.
    
    This is, however, racy and may result in the inconsistent values when
    both PCM streams perform the prepare concurrently.  One of the reason
    is that it overwrites the other's runtime->hw field; which is not only
    racy but also broken when it's called before the open of another side
    finishes.  And, since the reference to runtime->hw isn't protected,
    the concurrent write may give the partial value update and become
    inconsistent.
    
    This patch is an attempt to fix and clean up:
    - The prepare doesn't change the runtime->hw of other side any longer,
      but only update the cable->hw that is referred commonly.
    - The extra rules refer to the loopback_pcm object instead of the
      runtime->hw.  The actual hw is deduced from cable->hw.
    - The extra rules take the cable_lock to protect against the race.
    
    Fixes: b1c73fc8e697 ("ALSA: snd-aloop: Fix hw_params restrictions and checking")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9cad56436f43c781239a58c4904dc2c34fe0921
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 5 16:15:33 2018 +0100

    ALSA: aloop: Fix inconsistent format due to incomplete rule
    
    commit b088b53e20c7d09b5ab84c5688e609f478e5c417 upstream.
    
    The extra hw constraint rule for the formats the aloop driver
    introduced has a slight flaw, where it doesn't return a positive value
    when the mask got changed.  It came from the fact that it's basically
    a copy&paste from snd_hw_constraint_mask64().  The original code is
    supposed to be a single-shot and it modifies the mask bits only once
    and never after, while what we need for aloop is the dynamic hw rule
    that limits the mask bits.
    
    This difference results in the inconsistent state, as the hw_refine
    doesn't apply the dependencies fully.  The worse and surprisingly
    result is that it causes a crash in OSS emulation when multiple
    full-duplex reads/writes are performed concurrently (I leave why it
    triggers Oops to readers as a homework).
    
    For fixing this, replace a few open-codes with the standard
    snd_mask_*() macros.
    
    Reported-by: syzbot+3902b5220e8ca27889ca@syzkaller.appspotmail.com
    Fixes: b1c73fc8e697 ("ALSA: snd-aloop: Fix hw_params restrictions and checking")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d3b2c61e1bea49bdbf42169e9f28ca889f4d707
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 5 16:09:47 2018 +0100

    ALSA: aloop: Release cable upon open error path
    
    commit 9685347aa0a5c2869058ca6ab79fd8e93084a67f upstream.
    
    The aloop runtime object and its assignment in the cable are left even
    when opening a substream fails.  This doesn't mean any memory leak,
    but it still keeps the invalid pointer that may be referred by the
    another side of the cable spontaneously, which is a potential Oops
    cause.
    
    Clean up the cable assignment and the empty cable upon the error path
    properly.
    
    Fixes: 597603d615d2 ("ALSA: introduce the snd-aloop module for the PCM loopback")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa6c1876ecf724f4bb77842770941db41d35c3f9
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 8 14:03:53 2018 +0100

    ALSA: pcm: Allow aborting mutex lock at OSS read/write loops
    
    commit 900498a34a3ac9c611e9b425094c8106bdd7dc1c upstream.
    
    PCM OSS read/write loops keep taking the mutex lock for the whole
    read/write, and this might take very long when the exceptionally high
    amount of data is given.  Also, since it invokes with mutex_lock(),
    the concurrent read/write becomes unbreakable.
    
    This patch tries to address these issues by replacing mutex_lock()
    with mutex_lock_interruptible(), and also splits / re-takes the lock
    at each read/write period chunk, so that it can switch the context
    more finely if requested.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bb4bb18ccffc4dc4a1f1038a5dc0fb3a4020c05
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 8 13:58:31 2018 +0100

    ALSA: pcm: Abort properly at pending signal in OSS read/write loops
    
    commit 29159a4ed7044c52e3e2cf1a9fb55cec4745c60b upstream.
    
    The loops for read and write in PCM OSS emulation have no proper check
    of pending signals, and they keep processing even after user tries to
    break.  This results in a very long delay, often seen as RCU stall
    when a huge unprocessed bytes remain queued.  The bug could be easily
    triggered by syzkaller.
    
    As a simple workaround, this patch adds the proper check of pending
    signals and aborts the loop appropriately.
    
    Reported-by: syzbot+993cb4cfcbbff3947c21@syzkaller.appspotmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ee7bc5526d8056b23dfd65948f4c7b57c883fa5
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jan 4 16:39:27 2018 +0100

    ALSA: pcm: Add missing error checks in OSS emulation plugin builder
    
    commit 6708913750344a900f2e73bfe4a4d6dbbce4fe8d upstream.
    
    In the OSS emulation plugin builder where the frame size is parsed in
    the plugin chain, some places miss the possible errors returned from
    the plugin src_ or dst_frames callback.
    
    This patch papers over such places.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3074fe070a89bd1c14f8d70e5a5db7f78b84496e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 1 09:50:50 2018 +0100

    ALSA: pcm: Remove incorrect snd_BUG_ON() usages
    
    commit fe08f34d066f4404934a509b6806db1a4f700c86 upstream.
    
    syzkaller triggered kernel warnings through PCM OSS emulation at
    closing a stream:
      WARNING: CPU: 0 PID: 3502 at sound/core/pcm_lib.c:1635
      snd_pcm_hw_param_first+0x289/0x690 sound/core/pcm_lib.c:1635
      Call Trace:
      ....
       snd_pcm_hw_param_near.constprop.27+0x78d/0x9a0 sound/core/oss/pcm_oss.c:457
       snd_pcm_oss_change_params+0x17d3/0x3720 sound/core/oss/pcm_oss.c:969
       snd_pcm_oss_make_ready+0xaa/0x130 sound/core/oss/pcm_oss.c:1128
       snd_pcm_oss_sync+0x257/0x830 sound/core/oss/pcm_oss.c:1638
       snd_pcm_oss_release+0x20b/0x280 sound/core/oss/pcm_oss.c:2431
       __fput+0x327/0x7e0 fs/file_table.c:210
       ....
    
    This happens while it tries to open and set up the aloop device
    concurrently.  The warning above (invoked from snd_BUG_ON() macro) is
    to detect the unexpected logical error where snd_pcm_hw_refine() call
    shouldn't fail.  The theory is true for the case where the hw_params
    config rules are static.  But for an aloop device, the hw_params rule
    condition does vary dynamically depending on the connected target;
    when another device is opened and changes the parameters, the device
    connected in another side is also affected, and it caused the error
    from snd_pcm_hw_refine().
    
    That is, the simplest "solution" for this is to remove the incorrect
    assumption of static rules, and treat such an error as a normal error
    path.  As there are a couple of other places using snd_BUG_ON()
    incorrectly, this patch removes these spurious snd_BUG_ON() calls.
    
    Reported-by: syzbot+6f11c7e2a1b91d466432@syzkaller.appspotmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f511ba8a5084687a354d18ac1ed8f04c197de63e
Author: Jean-Philippe Brucker <jean-philippe@linaro.org>
Date:   Thu Dec 14 11:03:01 2017 +0000

    iommu/arm-smmu-v3: Don't free page table ops twice
    
    commit 57d72e159b60456c8bb281736c02ddd3164037aa upstream.
    
    Kasan reports a double free when finalise_stage_fn fails: the io_pgtable
    ops are freed by arm_smmu_domain_finalise and then again by
    arm_smmu_domain_free. Prevent this by leaving pgtbl_ops empty on failure.
    
    Fixes: 48ec83bcbcf5 ("iommu/arm-smmu: Add initial driver support for ARM SMMUv3 devices")
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Jean-Philippe Brucker <jean-philippe.brucker@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 745a0d9c1a8e6533f9707ffc2809e1c6198c29a7
Author: Vikas C Sajjan <vikas.cha.sajjan@hpe.com>
Date:   Thu Nov 16 21:43:44 2017 +0530

    x86/acpi: Handle SCI interrupts above legacy space gracefully
    
    commit 252714155f04c5d16989cb3aadb85fd1b5772f99 upstream.
    
    Platforms which support only IOAPIC mode, pass the SCI information above
    the legacy space (0-15) via the FADT mechanism and not via MADT.
    
    In such cases mp_override_legacy_irq() which is invoked from
    acpi_sci_ioapic_setup() to register SCI interrupts fails for interrupts
    greater equal 16, since it is meant to handle only the legacy space and
    emits error "Invalid bus_irq %u for legacy override".
    
    Add a new function to handle SCI interrupts >= 16 and invoke it
    conditionally in acpi_sci_ioapic_setup().
    
    The code duplication due to this new function will be cleaned up in a
    separate patch.
    
    Co-developed-by: Sunil V L <sunil.vl@hpe.com>
    Signed-off-by: Vikas C Sajjan <vikas.cha.sajjan@hpe.com>
    Signed-off-by: Sunil V L <sunil.vl@hpe.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Abdul Lateef Attar <abdul-lateef.attar@hpe.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: linux-pm@vger.kernel.org
    Cc: kkamagui@gmail.com
    Cc: linux-acpi@vger.kernel.org
    Link: https://lkml.kernel.org/r/1510848825-21965-2-git-send-email-vikas.cha.sajjan@hpe.com
    Cc: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a699374533b23ec4deff885db121a5e4c42aa27
Author: Andy Lutomirski <luto@kernel.org>
Date:   Tue Dec 29 20:12:18 2015 -0800

    x86/vsdo: Fix build on PARAVIRT_CLOCK=y, KVM_GUEST=n
    
    commit 8705d603edd49f1cff165cd3b7998f4c7f098d27 upstream.
    
    arch/x86/built-in.o: In function `arch_setup_additional_pages':
     (.text+0x587): undefined reference to `pvclock_pvti_cpu0_va'
    
    KVM_GUEST selects PARAVIRT_CLOCK, so we can make pvclock_pvti_cpu0_va depend
    on KVM_GUEST.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Tested-by: Borislav Petkov <bp@alien8.de>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Link: http://lkml.kernel.org/r/444d38a9bcba832685740ea1401b569861d09a72.1451446564.git.luto@kernel.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: James Dingwall <james@dingwall.me.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d383ff7deaa3c3b5e2c2b604b20f5844c1f74e0
Author: Jim Mattson <jmattson@google.com>
Date:   Wed Jan 3 14:31:38 2018 -0800

    kvm: vmx: Scrub hardware GPRs at VM-exit
    
    commit 0cb5b30698fdc8f6b4646012e3acb4ddce430788 upstream.
    
    Guest GPR values are live in the hardware GPRs at VM-exit.  Do not
    leave any guest values in hardware GPRs after the guest GPR values are
    saved to the vcpu_vmx structure.
    
    This is a partial mitigation for CVE 2017-5715 and CVE 2017-5753.
    Specifically, it defeats the Project Zero PoC for CVE 2017-5715.
    
    Suggested-by: Eric Northup <digitaleric@google.com>
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Reviewed-by: Eric Northup <digitaleric@google.com>
    Reviewed-by: Benjamin Serebrin <serebrin@google.com>
    Reviewed-by: Andrew Honig <ahonig@google.com>
    [Paolo: Add AMD bits, Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>]
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0753661d5b17251a0a02a7b6b1ae596f3e9cd784
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Wed Jan 20 15:00:51 2016 -0800

    net/mac80211/debugfs.c: prevent build failure with CONFIG_UBSAN=y
    
    commit 68920c973254c5b71a684645c5f6f82d6732c5d6 upstream.
    
    With upcoming CONFIG_UBSAN the following BUILD_BUG_ON in
    net/mac80211/debugfs.c starts to trigger:
    
      BUILD_BUG_ON(hw_flag_names[NUM_IEEE80211_HW_FLAGS] != (void *)0x1);
    
    It seems, that compiler instrumentation causes some code
    deoptimizations.  Because of that GCC is not being able to resolve
    condition in BUILD_BUG_ON() at compile time.
    
    We could make size of hw_flag_names array unspecified and replace the
    condition in BUILD_BUG_ON() with following:
    
      ARRAY_SIZE(hw_flag_names) != NUM_IEEE80211_HW_FLAGS
    
    That will have the same effect as before (adding new flag without
    updating array will trigger build failure) except it doesn't fail with
    CONFIG_UBSAN.  As a bonus this patch slightly decreases size of
    hw_flag_names array.
    
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Johannes Berg <johannes@sipsolutions.net>
    Cc: "David S. Miller" <davem@davemloft.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    [Daniel: backport to 4.4.]
    Signed-off-by: Daniel Wagner <daniel.wagner@siemens.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2c131d05d86ea7fefd0f866ccd6b3565ef28f78
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:56:54 2017 +0000

    MIPS: Disallow outsized PTRACE_SETREGSET NT_PRFPREG regset accesses
    
    commit c8c5a3a24d395b14447a9a89d61586a913840a3b upstream.
    
    Complement commit c23b3d1a5311 ("MIPS: ptrace: Change GP regset to use
    correct core dump register layout") and also reject outsized
    PTRACE_SETREGSET requests to the NT_PRFPREG regset, like with the
    NT_PRSTATUS regset.
    
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: c23b3d1a5311 ("MIPS: ptrace: Change GP regset to use correct core dump register layout")
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17930/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 725679dc78a9a6d1441dedda8816a5b1c02f7174
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:55:40 2017 +0000

    MIPS: Also verify sizeof `elf_fpreg_t' with PTRACE_SETREGSET
    
    commit 006501e039eec411842bb3150c41358867d320c2 upstream.
    
    Complement commit d614fd58a283 ("mips/ptrace: Preserve previous
    registers for short regset write") and like with the PTRACE_GETREGSET
    ptrace(2) request also apply a BUILD_BUG_ON check for the size of the
    `elf_fpreg_t' type in the PTRACE_SETREGSET request handler.
    
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: d614fd58a283 ("mips/ptrace: Preserve previous registers for short regset write")
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17929/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9584ae52bd7e39e112c56b47e8341c043ca87fd7
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:54:33 2017 +0000

    MIPS: Fix an FCSR access API regression with NT_PRFPREG and MSA
    
    commit be07a6a1188372b6d19a3307ec33211fc9c9439d upstream.
    
    Fix a commit 72b22bbad1e7 ("MIPS: Don't assume 64-bit FP registers for
    FP regset") public API regression, then activated by commit 1db1af84d6df
    ("MIPS: Basic MSA context switching support"), that caused the FCSR
    register not to be read or written for CONFIG_CPU_HAS_MSA kernel
    configurations (regardless of actual presence or absence of the MSA
    feature in a given processor) with ptrace(2) PTRACE_GETREGSET and
    PTRACE_SETREGSET requests nor recorded in core dumps.
    
    This is because with !CONFIG_CPU_HAS_MSA configurations the whole of
    `elf_fpregset_t' array is bulk-copied as it is, which includes the FCSR
    in one half of the last, 33rd slot, whereas with CONFIG_CPU_HAS_MSA
    configurations array elements are copied individually, and then only the
    leading 32 FGR slots while the remaining slot is ignored.
    
    Correct the code then such that only FGR slots are copied in the
    respective !MSA and MSA helpers an then the FCSR slot is handled
    separately in common code.  Use `ptrace_setfcr31' to update the FCSR
    too, so that the read-only mask is respected.
    
    Retrieving a correct value of FCSR is important in debugging not only
    for the human to be able to get the right interpretation of the
    situation, but for correct operation of GDB as well.  This is because
    the condition code bits in FSCR are used by GDB to determine the
    location to place a breakpoint at when single-stepping through an FPU
    branch instruction.  If such a breakpoint is placed incorrectly (i.e.
    with the condition reversed), then it will be missed, likely causing the
    debuggee to run away from the control of GDB and consequently breaking
    the process of investigation.
    
    Fortunately GDB continues using the older PTRACE_GETFPREGS ptrace(2)
    request which is unaffected, so the regression only really hits with
    post-mortem debug sessions using a core dump file, in which case
    execution, and consequently single-stepping through branches is not
    possible.  Of course core files created by buggy kernels out there will
    have the value of FCSR recorded clobbered, but such core files cannot be
    corrected and the person using them simply will have to be aware that
    the value of FCSR retrieved is not reliable.
    
    Which also means we can likely get away without defining a replacement
    API which would ensure a correct value of FSCR to be retrieved, or none
    at all.
    
    This is based on previous work by Alex Smith, extensively rewritten.
    
    Signed-off-by: Alex Smith <alex@alex-smith.me.uk>
    Signed-off-by: James Hogan <james.hogan@mips.com>
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: 72b22bbad1e7 ("MIPS: Don't assume 64-bit FP registers for FP regset")
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17928/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6972f8bd2b6af5af070c76b8178f8fa87d44cb9
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:53:14 2017 +0000

    MIPS: Consistently handle buffer counter with PTRACE_SETREGSET
    
    commit 80b3ffce0196ea50068885d085ff981e4b8396f4 upstream.
    
    Update commit d614fd58a283 ("mips/ptrace: Preserve previous registers
    for short regset write") bug and consistently consume all data supplied
    to `fpr_set_msa' with the ptrace(2) PTRACE_SETREGSET request, such that
    a zero data buffer counter is returned where insufficient data has been
    given to fill a whole number of FP general registers.
    
    In reality this is not going to happen, as the caller is supposed to
    only supply data covering a whole number of registers and it is verified
    in `ptrace_regset' and again asserted in `fpr_set', however structuring
    code such that the presence of trailing partial FP general register data
    causes `fpr_set_msa' to return with a non-zero data buffer counter makes
    it appear that this trailing data will be used if there are subsequent
    writes made to FP registers, which is going to be the case with the FCSR
    once the missing write to that register has been fixed.
    
    Fixes: d614fd58a283 ("mips/ptrace: Preserve previous registers for short regset write")
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17927/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e68049f6a9e854eace5f4d45986a198989c55d54
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:52:15 2017 +0000

    MIPS: Guard against any partial write attempt with PTRACE_SETREGSET
    
    commit dc24d0edf33c3e15099688b6bbdf7bdc24bf6e91 upstream.
    
    Complement commit d614fd58a283 ("mips/ptrace: Preserve previous
    registers for short regset write") and ensure that no partial register
    write attempt is made with PTRACE_SETREGSET, as we do not preinitialize
    any temporaries used to hold incoming register data and consequently
    random data could be written.
    
    It is the responsibility of the caller, such as `ptrace_regset', to
    arrange for writes to span whole registers only, so here we only assert
    that it has indeed happened.
    
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: 72b22bbad1e7 ("MIPS: Don't assume 64-bit FP registers for FP regset")
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17926/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1e808b9de5c6c328c3ed660eed8382d04102116
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:51:35 2017 +0000

    MIPS: Factor out NT_PRFPREG regset access helpers
    
    commit a03fe72572c12e98f4173f8a535f32468e48b6ec upstream.
    
    In preparation to fix a commit 72b22bbad1e7 ("MIPS: Don't assume 64-bit
    FP registers for FP regset") FCSR access regression factor out
    NT_PRFPREG regset access helpers for the non-MSA and the MSA variants
    respectively, to avoid having to deal with excessive indentation in the
    actual fix.
    
    No functional change, however use `target->thread.fpu.fpr[0]' rather
    than `target->thread.fpu.fpr[i]' for FGR holding type size determination
    as there's no `i' variable to refer to anymore, and for the factored out
    `i' variable declaration use `unsigned int' rather than `unsigned' as
    its type, following the common style.
    
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: 72b22bbad1e7 ("MIPS: Don't assume 64-bit FP registers for FP regset")
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17925/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e918a43cbf059da23717120e6cddd24b3e6aeb4
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Nov 27 09:33:03 2017 +0000

    MIPS: Validate PR_SET_FP_MODE prctl(2) requests against the ABI of the task
    
    commit b67336eee3fcb8ecedc6c13e2bf88aacfa3151e2 upstream.
    
    Fix an API loophole introduced with commit 9791554b45a2 ("MIPS,prctl:
    add PR_[GS]ET_FP_MODE prctl options for MIPS"), where the caller of
    prctl(2) is incorrectly allowed to make a change to CP0.Status.FR or
    CP0.Config5.FRE register bits even if CONFIG_MIPS_O32_FP64_SUPPORT has
    not been enabled, despite that an executable requesting the mode
    requested via ELF file annotation would not be allowed to run in the
    first place, or for n64 and n64 ABI tasks which do not have non-default
    modes defined at all.  Add suitable checks to `mips_set_process_fp_mode'
    and bail out if an invalid mode change has been requested for the ABI in
    effect, even if the FPU hardware or emulation would otherwise allow it.
    
    Always succeed however without taking any further action if the mode
    requested is the same as one already in effect, regardless of whether
    any mode change, should it be requested, would actually be allowed for
    the task concerned.
    
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: 9791554b45a2 ("MIPS,prctl: add PR_[GS]ET_FP_MODE prctl options for MIPS")
    Reviewed-by: Paul Burton <paul.burton@mips.com>
    Cc: James Hogan <james.hogan@mips.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17800/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c2c83eb1b0df078d5234f5ff43c7123610bda77
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Jan 3 13:39:15 2018 -0800

    IB/srpt: Disable RDMA access by the initiator
    
    commit bec40c26041de61162f7be9d2ce548c756ce0f65 upstream.
    
    With the SRP protocol all RDMA operations are initiated by the target.
    Since no RDMA operations are initiated by the initiator, do not grant
    the initiator permission to submit RDMA reads or writes to the target.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a71d6de9718e5fd283038f44fe3ba5fe546bc920
Author: Wolfgang Grandegger <wg@grandegger.com>
Date:   Wed Dec 13 19:52:23 2017 +0100

    can: gs_usb: fix return value of the "set_bittiming" callback
    
    commit d5b42e6607661b198d8b26a0c30969605b1bf5c7 upstream.
    
    The "set_bittiming" callback treats a positive return value as error!
    For that reason "can_changelink()" will quit silently after setting
    the bittiming values without processing ctrlmode, restart-ms, etc.
    
    Signed-off-by: Wolfgang Grandegger <wg@grandegger.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb91461daa77eb0ddb4c24aa427051f3669ba1f3
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Thu Dec 14 17:40:50 2017 -0800

    KVM: Fix stack-out-of-bounds read in write_mmio
    
    commit e39d200fa5bf5b94a0948db0dae44c1b73b84a56 upstream.
    
    Reported by syzkaller:
    
      BUG: KASAN: stack-out-of-bounds in write_mmio+0x11e/0x270 [kvm]
      Read of size 8 at addr ffff8803259df7f8 by task syz-executor/32298
    
      CPU: 6 PID: 32298 Comm: syz-executor Tainted: G           OE    4.15.0-rc2+ #18
      Hardware name: LENOVO ThinkCentre M8500t-N000/SHARKBAY, BIOS FBKTC1AUS 02/16/2016
      Call Trace:
       dump_stack+0xab/0xe1
       print_address_description+0x6b/0x290
       kasan_report+0x28a/0x370
       write_mmio+0x11e/0x270 [kvm]
       emulator_read_write_onepage+0x311/0x600 [kvm]
       emulator_read_write+0xef/0x240 [kvm]
       emulator_fix_hypercall+0x105/0x150 [kvm]
       em_hypercall+0x2b/0x80 [kvm]
       x86_emulate_insn+0x2b1/0x1640 [kvm]
       x86_emulate_instruction+0x39a/0xb90 [kvm]
       handle_exception+0x1b4/0x4d0 [kvm_intel]
       vcpu_enter_guest+0x15a0/0x2640 [kvm]
       kvm_arch_vcpu_ioctl_run+0x549/0x7d0 [kvm]
       kvm_vcpu_ioctl+0x479/0x880 [kvm]
       do_vfs_ioctl+0x142/0x9a0
       SyS_ioctl+0x74/0x80
       entry_SYSCALL_64_fastpath+0x23/0x9a
    
    The path of patched vmmcall will patch 3 bytes opcode 0F 01 C1(vmcall)
    to the guest memory, however, write_mmio tracepoint always prints 8 bytes
    through *(u64 *)val since kvm splits the mmio access into 8 bytes. This
    leaks 5 bytes from the kernel stack (CVE-2017-17741).  This patch fixes
    it by just accessing the bytes which we operate on.
    
    Before patch:
    
    syz-executor-5567  [007] .... 51370.561696: kvm_mmio: mmio write len 3 gpa 0x10 val 0x1ffff10077c1010f
    
    After patch:
    
    syz-executor-13416 [002] .... 51302.299573: kvm_mmio: mmio write len 3 gpa 0x10 val 0xc1010f
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Reviewed-by: Darren Kenny <darren.kenny@oracle.com>
    Reviewed-by: Marc Zyngier <marc.zyngier@arm.com>
    Tested-by: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Marc Zyngier <marc.zyngier@arm.com>
    Cc: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbb1cc722aaa9f55b6fa3f8f9be7635652ddc2ae
Author: Suren Baghdasaryan <surenb@google.com>
Date:   Wed Dec 6 09:27:30 2017 -0800

    dm bufio: fix shrinker scans when (nr_to_scan < retain_target)
    
    commit fbc7c07ec23c040179384a1f16b62b6030eb6bdd upstream.
    
    When system is under memory pressure it is observed that dm bufio
    shrinker often reclaims only one buffer per scan. This change fixes
    the following two issues in dm bufio shrinker that cause this behavior:
    
    1. ((nr_to_scan - freed) <= retain_target) condition is used to
    terminate slab scan process. This assumes that nr_to_scan is equal
    to the LRU size, which might not be correct because do_shrink_slab()
    in vmscan.c calculates nr_to_scan using multiple inputs.
    As a result when nr_to_scan is less than retain_target (64) the scan
    will terminate after the first iteration, effectively reclaiming one
    buffer per scan and making scans very inefficient. This hurts vmscan
    performance especially because mutex is acquired/released every time
    dm_bufio_shrink_scan() is called.
    New implementation uses ((LRU size - freed) <= retain_target)
    condition for scan termination. LRU size can be safely determined
    inside __scan() because this function is called after dm_bufio_lock().
    
    2. do_shrink_slab() uses value returned by dm_bufio_shrink_count() to
    determine number of freeable objects in the slab. However dm_bufio
    always retains retain_target buffers in its LRU and will terminate
    a scan when this mark is reached. Therefore returning the entire LRU size
    from dm_bufio_shrink_count() is misleading because that does not
    represent the number of freeable objects that slab will reclaim during
    a scan. Returning (LRU size - retain_target) better represents the
    number of freeable objects in the slab. This way do_shrink_slab()
    returns 0 when (LRU size < retain_target) and vmscan will not try to
    scan this shrinker avoiding scans that will not reclaim any memory.
    
    Test: tested using Android device running
    <AOSP>/system/extras/alloc-stress that generates memory pressure
    and causes intensive shrinker scans
    
    Signed-off-by: Suren Baghdasaryan <surenb@google.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
