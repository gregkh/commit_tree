commit 7261684765e4411dff5ec5ffbad52f5009a2941b
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue May 13 13:33:14 2014 +0200

    Linux 3.14.4

commit dec190e5b9428821cfffe7462fce43a234564711
Author: George Spelvin <linux@horizon.com>
Date:   Wed May 7 17:05:52 2014 -0400

    x86-64, build: Fix stack protector Makefile breakage with 32-bit userland
    
    commit 14262d67fe348018af368a07430fbc06eadeabb1 upstream.
    
    If you are using a 64-bit kernel with 32-bit userland, then
    scripts/gcc-x86_64-has-stack-protector.sh invokes 32-bit gcc
    with -mcmodel=kernel, which produces:
    
    <stdin>:1:0: error: code model 'kernel' not supported in the 32 bit mode
    
    and trips the "broken compiler" test at arch/x86/Makefile:120.
    
    There are several places a fix is possible, but the following seems
    cleanest.  (But it's minimal; it would also be possible to factor
    out a bunch of stuff from the two branches of the if.)
    
    Signed-off-by: George Spelvin <linux@horizon.com>
    Link: http://lkml.kernel.org/r/20140507210552.7581.qmail@ns.horizon.com
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79f69c3a5f4ff4e9432086eab9f2af958f9eafb2
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Mon Apr 14 11:34:49 2014 +0200

    drm: bochs: add power management support
    
    commit b8ccd70f1363f7d4e49219dbc46ec973a14f49cd upstream.
    
    bochs kms driver lacks power management support, thus
    the vga display doesn't work any more after S3 resume.
    
    Fix this by adding suspend and resume functions.
    
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bf8e2973f5c92510f8a6724a07d8713853ecb43
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Mon Apr 14 11:34:48 2014 +0200

    drm: cirrus: add power management support
    
    commit 2f1e800799bf478494cec3573cd63eb34ca89c9d upstream.
    
    cirrus kms driver lacks power management support, thus
    the vga display doesn't work any more after S3 resume.
    
    Fix this by adding suspend and resume functions.
    Also make the mode_set function unblank the screen.
    
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ffc607aaacad8456aae7a76842a8c9c1a1a851a
Author: Chen Gang <gang.chen.5i5j@gmail.com>
Date:   Mon Apr 7 20:04:21 2014 +0800

    cpufreq: unicore32: fix typo issue for 'clk'
    
    commit b4ddad95020e65cfbbf9aee63d3bcdf682794ade upstream.
    
    Need use 'clk' instead of 'mclk', which is the original removed local
    variable.
    
    The related original commit:
    
      "652ed95 cpufreq: introduce cpufreq_generic_get() routine"
    
    The related error with allmodconfig for unicore32:
    
        CC      drivers/cpufreq/unicore2-cpufreq.o
      drivers/cpufreq/unicore2-cpufreq.c: In function ‘ucv2_target’:
      drivers/cpufreq/unicore2-cpufreq.c:48: error: ‘struct cpufreq_policy’ has no member named ‘mclk’
      make[2]: *** [drivers/cpufreq/unicore2-cpufreq.o] Error 1
      make[1]: *** [drivers/cpufreq] Error 2
      make: *** [drivers] Error 2
    
    Fixes: 652ed95d5fa6 (cpufreq: introduce cpufreq_generic_get() routine)
    Signed-off-by: Chen Gang <gang.chen.5i5j@gmail.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d79e8d496977266cbae7d14457e2a1e7aeeab78f
Author: Lan Tianyu <tianyu.lan@intel.com>
Date:   Wed Apr 30 15:46:33 2014 +0800

    ACPI / processor: Fix failure of loading acpi-cpufreq driver
    
    commit 4985c32ee4241d1aba1beeac72294faa46aaff10 upstream.
    
    According commit d640113fe (ACPI: processor: fix acpi_get_cpuid for UP
    processor),  BIOS may not provide _MAT or MADT tables and acpi_get_apicid()
    always returns -1. For these cases, original code will pass apic_id with
    vaule of -1 to acpi_map_cpuid() and it will check the acpi_id. If acpi_id
    is equal to zero, ignores apic_id and return zero for CPU0.
    
    Commit b981513 (ACPI / scan: bail out early if failed to parse APIC
    ID for CPU) changed the behavior. Return ENODEV when find apic_id is
    less than zero after calling acpi_get_apicid(). This causes acpi-cpufreq
    driver fails to be loaded on some machines. This patch is to fix it.
    
    Fixes: b981513f806d (ACPI / scan: bail out early if failed to parse APIC ID for CPU)
    References: https://bugzilla.kernel.org/show_bug.cgi?id=73781
    Reported-and-tested-by: KATO Hiroshi <katoh@mikage.ne.jp>
    Reported-and-tested-by: Stuart Foster <smf.linux@ntlworld.com>
    Signed-off-by: Lan Tianyu <tianyu.lan@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41cc996c022af590ff59971b37572d5a82c95955
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Thu Apr 3 20:20:36 2014 +0530

    cpufreq: at32ap: don't declare local variable as static
    
    commit 0ca97886fece9e1acd71ade4ca3a250945c8fc8b upstream.
    
    Earlier commit:
            commit 652ed95d5fa6074b3c4ea245deb0691f1acb6656
            Author: Viresh Kumar <viresh.kumar@linaro.org>
            Date:   Thu Jan 9 20:38:43 2014 +0530
    
                cpufreq: introduce cpufreq_generic_get() routine
    
    did some changes to driver and by mistake made cpuclk as a 'static' local
    variable, which wasn't actually required. Fix it.
    
    Fixes: 652ed95d5fa6 (cpufreq: introduce cpufreq_generic_get() routine)
    Reported-by: Alexandre Oliva <lxoliva@fsfla.org>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Acked-by: Hans-Christian Egtvedt <egtvedt@samfundet.no>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f93f23c9adf0a65002db897d32dcb00c50ad963c
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Wed Apr 2 10:14:24 2014 +0530

    cpufreq: loongson2_cpufreq: don't declare local variable as static
    
    commit 05ed672292dc9d37db4fafdd49baa782158cd795 upstream.
    
    Earlier commit:
            commit 652ed95d5fa6074b3c4ea245deb0691f1acb6656
            Author: Viresh Kumar <viresh.kumar@linaro.org>
            Date:   Thu Jan 9 20:38:43 2014 +0530
    
                cpufreq: introduce cpufreq_generic_get() routine
    
    did some changes to driver and by mistake made cpuclk as a 'static' local
    variable, which wasn't actually required. Fix it.
    
    Fixes: 652ed95d5fa6 (cpufreq: introduce cpufreq_generic_get() routine)
    Reported-by: Alexandre Oliva <lxoliva@fsfla.org>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4a6fe45200a4d9c05355ab97d537a8348e48272
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Apr 23 13:02:35 2014 -0700

    Input: synaptics - add min/max quirk for ThinkPad Edge E431
    
    commit 27a38856a948c3e8de30dc71647ff9e1778c99fc upstream.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a973cbe5bca2caaa0f1049583d4d3badc6d8aa6c
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Apr 19 22:31:18 2014 -0700

    Input: synaptics - add min/max quirk for ThinkPad T431s, L440, L540, S1 Yoga and X1
    
    commit 46a2986ebbe18757c2d8c352f8fb6e0f4f0754e3 upstream.
    
    We expect that all the Haswell series will need such quirks, sigh.
    
    The T431s seems to be T430 hardware in a T440s case, using the T440s touchpad,
    with the same min/max issue.
    
    The X1 Carbon 3rd generation name says 2nd while it is a 3rd generation.
    
    The X1 and T431s share a PnPID with the T540p, but the reported ranges are
    closer to those of the T440s.
    
    HdG: Squashed 5 quirk patches into one. T431s + L440 + L540 are written by me,
    S1 Yoga and X1 are written by Benjamin Tissoires.
    
    Hdg: Standardized S1 Yoga and X1 values, Yoga uses the same touchpad as the
    X240, X1 uses the same touchpad as the T440.
    
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8df2d9dd26fce11a557dd4b772bb87982c66f59a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Feb 12 16:32:45 2014 +0100

    thinkpad_acpi: Fix inconsistent mute LED after resume
    
    commit 119f449866ad18785b0445adaf0d2859c6dbdaa3 upstream.
    
    The mute LED states have to be restored after resume.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=70351
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Matthew Garrett <matthew.garrett@nebula.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 871262107293e31c4d9ef5265c93eb9072d51e7a
Author: Russell King <rmk+kernel@arm.linux.org.uk>
Date:   Tue Mar 4 16:25:51 2014 -0500

    mmc: sdhci-bcm-kona: fix build errors when built-in
    
    commit 4025ce24f326830135341814307c072f6c2a7738 upstream.
    
    `sdhci_bcm_kona_remove' referenced in section `.data' of drivers/built-in.o: defined in discarded section `.exit.text' of drivers/built-in.o
    
    Fixes: 058feb53666f ("mmc: sdhci-bcm-kona: make linker-section warning go away")
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
    Tested-by: Markus Mayer <markus.mayer@linaro.org>
    Acked-by: Matt Porter <mporter@linaro.org>
    Signed-off-by: Chris Ball <chris@printf.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08362f5864a8d13b62f2ff0e9a1d7a60f2a58d96
Author: Jens Axboe <axboe@fb.com>
Date:   Tue Apr 8 16:04:12 2014 -0700

    lib/percpu_counter.c: fix bad percpu counter state during suspend
    
    commit e39435ce68bb4685288f78b1a7e24311f7ef939f upstream.
    
    I got a bug report yesterday from Laszlo Ersek in which he states that
    his kvm instance fails to suspend.  Laszlo bisected it down to this
    commit 1cf7e9c68fe8 ("virtio_blk: blk-mq support") where virtio-blk is
    converted to use the blk-mq infrastructure.
    
    After digging a bit, it became clear that the issue was with the queue
    drain.  blk-mq tracks queue usage in a percpu counter, which is
    incremented on request alloc and decremented when the request is freed.
    The initial hunt was for an inconsistency in blk-mq, but everything
    seemed fine.  In fact, the counter only returned crazy values when
    suspend was in progress.
    
    When a CPU is unplugged, the percpu counters merges that CPU state with
    the general state.  blk-mq takes care to register a hotcpu notifier with
    the appropriate priority, so we know it runs after the percpu counter
    notifier.  However, the percpu counter notifier only merges the state
    when the CPU is fully gone.  This leaves a state transition where the
    CPU going away is no longer in the online mask, yet it still holds
    private values.  This means that in this state, percpu_counter_sum()
    returns invalid results, and the suspend then hangs waiting for
    abs(dead-cpu-value) requests to complete which of course will never
    happen.
    
    Fix this by clearing the state earlier, so we never have a case where
    the CPU isn't in online mask but still holds private state.  This bug
    has been there since forever, I guess we don't have a lot of users where
    percpu counters needs to be reliable during the suspend cycle.
    
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Reported-by: Laszlo Ersek <lersek@redhat.com>
    Tested-by: Laszlo Ersek <lersek@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22d768263ba5d6ba64aa18710b82c57f497b2734
Author: Jeff Layton <jlayton@kernel.org>
Date:   Tue Mar 25 11:55:26 2014 -0700

    lockd: ensure we tear down any live sockets when socket creation fails during lockd_up
    
    commit 679b033df48422191c4cac52b610d9980e019f9b upstream.
    
    We had a Fedora ABRT report with a stack trace like this:
    
    kernel BUG at net/sunrpc/svc.c:550!
    invalid opcode: 0000 [#1] SMP
    [...]
    CPU: 2 PID: 913 Comm: rpc.nfsd Not tainted 3.13.6-200.fc20.x86_64 #1
    Hardware name: Hewlett-Packard HP ProBook 4740s/1846, BIOS 68IRR Ver. F.40 01/29/2013
    task: ffff880146b00000 ti: ffff88003f9b8000 task.ti: ffff88003f9b8000
    RIP: 0010:[<ffffffffa0305fa8>]  [<ffffffffa0305fa8>] svc_destroy+0x128/0x130 [sunrpc]
    RSP: 0018:ffff88003f9b9de0  EFLAGS: 00010206
    RAX: ffff88003f829628 RBX: ffff88003f829600 RCX: 00000000000041ee
    RDX: 0000000000000000 RSI: 0000000000000286 RDI: 0000000000000286
    RBP: ffff88003f9b9de8 R08: 0000000000017360 R09: ffff88014fa97360
    R10: ffffffff8114ce57 R11: ffffea00051c9c00 R12: ffff88003f829600
    R13: 00000000ffffff9e R14: ffffffff81cc7cc0 R15: 0000000000000000
    FS:  00007f4fde284840(0000) GS:ffff88014fa80000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f4fdf5192f8 CR3: 00000000a569a000 CR4: 00000000001407e0
    Stack:
     ffff88003f792300 ffff88003f9b9e18 ffffffffa02de02a 0000000000000000
     ffffffff81cc7cc0 ffff88003f9cb000 0000000000000008 ffff88003f9b9e60
     ffffffffa033bb35 ffffffff8131c86c ffff88003f9cb000 ffff8800a5715008
    Call Trace:
     [<ffffffffa02de02a>] lockd_up+0xaa/0x330 [lockd]
     [<ffffffffa033bb35>] nfsd_svc+0x1b5/0x2f0 [nfsd]
     [<ffffffff8131c86c>] ? simple_strtoull+0x2c/0x50
     [<ffffffffa033c630>] ? write_pool_threads+0x280/0x280 [nfsd]
     [<ffffffffa033c6bb>] write_threads+0x8b/0xf0 [nfsd]
     [<ffffffff8114efa4>] ? __get_free_pages+0x14/0x50
     [<ffffffff8114eff6>] ? get_zeroed_page+0x16/0x20
     [<ffffffff811dec51>] ? simple_transaction_get+0xb1/0xd0
     [<ffffffffa033c098>] nfsctl_transaction_write+0x48/0x80 [nfsd]
     [<ffffffff811b8b34>] vfs_write+0xb4/0x1f0
     [<ffffffff811c3f99>] ? putname+0x29/0x40
     [<ffffffff811b9569>] SyS_write+0x49/0xa0
     [<ffffffff810fc2a6>] ? __audit_syscall_exit+0x1f6/0x2a0
     [<ffffffff816962e9>] system_call_fastpath+0x16/0x1b
    Code: 31 c0 e8 82 db 37 e1 e9 2a ff ff ff 48 8b 07 8b 57 14 48 c7 c7 d5 c6 31 a0 48 8b 70 20 31 c0 e8 65 db 37 e1 e9 f4 fe ff ff 0f 0b <0f> 0b 66 0f 1f 44 00 00 0f 1f 44 00 00 55 48 89 e5 41 56 41 55
    RIP  [<ffffffffa0305fa8>] svc_destroy+0x128/0x130 [sunrpc]
     RSP <ffff88003f9b9de0>
    
    Evidently, we created some lockd sockets and then failed to create
    others. make_socks then returned an error and we tried to tear down the
    svc, but svc->sv_permsocks was not empty so we ended up tripping over
    the BUG() in svc_destroy().
    
    Fix this by ensuring that we tear down any live sockets we created when
    socket creation is going to return an error.
    
    Fixes: 786185b5f8abefa (SUNRPC: move per-net operations from...)
    Reported-by: Raphos <raphoszap@laposte.net>
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Reviewed-by: Stanislav Kinsbursky <skinsbursky@parallels.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b729b32b5f62a15059208731ac3d6b5a7712e20
Author: Benjamin LaHaise <bcrl@kvack.org>
Date:   Fri Mar 28 10:14:45 2014 -0400

    aio: v4 ensure access to ctx->ring_pages is correctly serialised for migration
    
    commit fa8a53c39f3fdde98c9eace6a9b412143f0f6ed6 upstream.
    
    As reported by Tang Chen, Gu Zheng and Yasuaki Isimatsu, the following issues
    exist in the aio ring page migration support.
    
    As a result, for example, we have the following problem:
    
                thread 1                      |              thread 2
                                              |
    aio_migratepage()                         |
     |-> take ctx->completion_lock            |
     |-> migrate_page_copy(new, old)          |
     |   *NOW*, ctx->ring_pages[idx] == old   |
                                              |
                                              |    *NOW*, ctx->ring_pages[idx] == old
                                              |    aio_read_events_ring()
                                              |     |-> ring = kmap_atomic(ctx->ring_pages[0])
                                              |     |-> ring->head = head;          *HERE, write to the old ring page*
                                              |     |-> kunmap_atomic(ring);
                                              |
     |-> ctx->ring_pages[idx] = new           |
     |   *BUT NOW*, the content of            |
     |    ring_pages[idx] is old.             |
     |-> release ctx->completion_lock         |
    
    As above, the new ring page will not be updated.
    
    Fix this issue, as well as prevent races in aio_ring_setup() by holding
    the ring_lock mutex during kioctx setup and page migration.  This avoids
    the overhead of taking another spinlock in aio_read_events_ring() as Tang's
    and Gu's original fix did, pushing the overhead into the migration code.
    
    Note that to handle the nesting of ring_lock inside of mmap_sem, the
    migratepage operation uses mutex_trylock().  Page migration is not a 100%
    critical operation in this case, so the ocassional failure can be
    tolerated.  This issue was reported by Sasha Levin.
    
    Based on feedback from Linus, avoid the extra taking of ctx->completion_lock.
    Instead, make page migration fully serialised by mapping->private_lock, and
    have aio_free_ring() simply disconnect the kioctx from the mapping by calling
    put_aio_ring_file() before touching ctx->ring_pages[].  This simplifies the
    error handling logic in aio_migratepage(), and should improve robustness.
    
    v4: always do mutex_unlock() in cases when kioctx setup fails.
    
    Reported-by: Yasuaki Ishimatsu <isimatu.yasuaki@jp.fujitsu.com>
    Reported-by: Sasha Levin <sasha.levin@oracle.com>
    Signed-off-by: Benjamin LaHaise <bcrl@kvack.org>
    Cc: Tang Chen <tangchen@cn.fujitsu.com>
    Cc: Gu Zheng <guz.fnst@cn.fujitsu.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0451fd9938dd008f59256190611a3a91c2308775
Author: Sekhar Nori <nsekhar@ti.com>
Date:   Wed Mar 19 11:25:50 2014 +0530

    dma: edma: fix incorrect SG list handling
    
    commit 5fc68a6cad658e45dca3e0a6607df3a8e5df4ef9 upstream.
    
    The code to handle any length SG lists calls edma_resume()
    even before edma_start() is called. This is incorrect
    because edma_resume() enables edma events on the channel
    after which CPU (in edma_start) cannot clear posted
    events by writing to ECR (per the EDMA user's guide).
    
    Because of this EDMA transfers fail to start if due
    to some reason there is a pending EDMA event registered
    even before EDMA transfers are started. This can happen if
    an EDMA event is a byproduct of device initialization.
    
    Fix this by calling edma_resume() only if it is not the
    first batch of MAX_NR_SG elements.
    
    Without this patch, MMC/SD fails to function on DA850 EVM
    with DMA. The behaviour is triggered by specific IP and
    this can explain why the issue was not reported before
    (example with MMC/SD on AM335x).
    
    Tested on DA850 EVM and AM335x EVM-SK using MMC/SD card.
    
    Cc: Joel Fernandes <joelf@ti.com>
    Acked-by: Joel Fernandes <joelf@ti.com>
    Tested-by: Jon Ringle <jringle@gridpoint.com>
    Tested-by: Alexander Holler <holler@ahsoftware.de>
    Reported-by: Jon Ringle <jringle@gridpoint.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 834c39f49d48a4ffb1d03d7348ae77e538db00a3
Author: Joe Thornber <ejt@redhat.com>
Date:   Thu Apr 3 16:16:44 2014 +0100

    dm cache: fix a lock-inversion
    
    commit 0596661f0a16d9d69bf1033320e70b6ff52b5e81 upstream.
    
    When suspending a cache the policy is walked and the individual policy
    hints written to the metadata via sync_metadata().  This led to this
    lock order:
    
          policy->lock
            cache_metadata->root_lock
    
    When loading the cache target the policy is populated while the metadata
    lock is held:
    
          cache_metadata->root_lock
             policy->lock
    
    Fix this potential lock-inversion (ABBA) deadlock in sync_metadata() by
    ensuring the cache_metadata root_lock is held whilst all the hints are
    written, rather than being repeatedly locked while policy->lock is held
    (as was the case with each callout that policy_walk_mappings() made to
    the old save_hint() method).
    
    Found by turning on the CONFIG_PROVE_LOCKING ("Lock debugging: prove
    locking correctness") build option.  However, it is not clear how the
    LOCKDEP reported paths can lead to a deadlock since the two paths,
    suspending a target and loading a target, never occur at the same time.
    But that doesn't mean the same lock-inversion couldn't have occurred
    elsewhere.
    
    Reported-by: Marian Csontos <mcsontos@redhat.com>
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd702549e01ac3eb04e9f5a6ec74050c5ada7087
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Fri Mar 28 02:15:02 2014 -0400

    dm thin: fix dangling bio in process_deferred_bios error path
    
    commit fe76cd88e654124d1431bb662a0fc6e99ca811a5 upstream.
    
    If unable to ensure_next_mapping() we must add the current bio, which
    was removed from the @bios list via bio_list_pop, back to the
    deferred_bios list before all the remaining @bios.
    
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Acked-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84fb0b3cbf66f2956cf03682601da9f650d54b4f
Author: Joe Thornber <ejt@redhat.com>
Date:   Thu Mar 27 14:13:23 2014 +0000

    dm: take care to copy the space map roots before locking the superblock
    
    commit 5a32083d03fb543f63489b2946c4948398579ba0 upstream.
    
    In theory copying the space map root can fail, but in practice it never
    does because we're careful to check what size buffer is needed.
    
    But make certain we're able to copy the space map roots before
    locking the superblock.
    
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be8e19196cbc229cd40f34545bf3dbb7dbb83df2
Author: Joe Thornber <ejt@redhat.com>
Date:   Thu Mar 27 14:13:20 2014 +0000

    dm transaction manager: fix corruption due to non-atomic transaction commit
    
    commit a9d45396f5956d0b615c7ae3b936afd888351a47 upstream.
    
    The persistent-data library used by dm-thin, dm-cache, etc is
    transactional.  If anything goes wrong, such as an io error when writing
    new metadata or a power failure, then we roll back to the last
    transaction.
    
    Atomicity when committing a transaction is achieved by:
    
    a) Never overwriting data from the previous transaction.
    b) Writing the superblock last, after all other metadata has hit the
       disk.
    
    This commit and the following commit ("dm: take care to copy the space
    map roots before locking the superblock") fix a bug associated with (b).
    When committing it was possible for the superblock to still be written
    in spite of an io error occurring during the preceeding metadata flush.
    With these commits we're careful not to take the write lock out on the
    superblock until after the metadata flush has completed.
    
    Change the transaction manager's semantics for dm_tm_commit() to assume
    all data has been flushed _before_ the single superblock that is passed
    in.
    
    As a prerequisite, split the block manager's block unlocking and
    flushing by simplifying dm_bm_flush_and_unlock() to dm_bm_flush().  Now
    the unlocking must be done separately.
    
    This issue was discovered by forcing io errors at the crucial time
    using dm-flakey.
    
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e0bb904dfd1e98743b8b62301b5d903405cb123
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Thu Mar 20 10:11:15 2014 -0400

    dm cache: prevent corruption caused by discard_block_size > cache_block_size
    
    commit d132cc6d9e92424bb9d4fd35f5bd0e55d583f4be upstream.
    
    If the discard block size is larger than the cache block size we will
    not properly quiesce IO to a region that is about to be discarded.  This
    results in a race between a cache migration where no copy is needed, and
    a write to an adjacent cache block that's within the same large discard
    block.
    
    Workaround this by limiting the discard_block_size to cache_block_size.
    Also limit the max_discard_sectors to cache_block_size.
    
    A more comprehensive fix that introduces range locking support in the
    bio_prison and proper quiescing of a discard range that spans multiple
    cache blocks is already in development.
    
    Reported-by: Morgan Mears <Morgan.Mears@netapp.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Acked-by: Joe Thornber <ejt@redhat.com>
    Acked-by: Heinz Mauelshagen <heinzm@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e07b5528f1f4adf101968d8c730201fe38b9b514
Author: Giacomo Comes <comes@naic.edu>
Date:   Thu Apr 3 14:13:55 2014 -0400

    Skip intel_crt_init for Dell XPS 8700
    
    commit 10b6ee4a87811a110cb01eaca01eb04da6801baf upstream.
    
    The Dell XPS 8700 has a onboard Display port and HDMI port and no VGA port.
    The call intel_crt_init freeze the machine, so skip such call.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=73559
    Signed-off-by: Giacomo Comes <comes at naic.edu>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93dd8b49c22623eb72a10beb44926dbd948c3618
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Dec 5 17:53:50 2013 +0300

    mtd: sm_ftl: heap corruption in sm_create_sysfs_attributes()
    
    commit b4c233057771581698a13694ab6f33b48ce837dc upstream.
    
    We always put a NUL terminator one space past the end of the "vendor"
    buffer.  Walter Harms also pointed out that this should just use
    kstrndup().
    
    Fixes: 7d17c02a01a1 ('mtd: Add new SmartMedia/xD FTL')
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Brian Norris <computersforpeace@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ef4bb8b24c83617043c6804fb547dbe1c4d9052
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Feb 17 23:03:08 2014 +0300

    mtd: nuc900_nand: NULL dereference in nuc900_nand_enable()
    
    commit c69dbbf3335a21aae74376d7e5db50a486d52439 upstream.
    
    Instead of writing to "nand->reg + REG_FMICSR" we write to "REG_FMICSR"
    which is NULL and not a valid register.
    
    Fixes: 8bff82cbc308 ('mtd: add nand support for w90p910 (v2)')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Brian Norris <computersforpeace@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81cb54ac10383b6d8c19674c9498a4f0e880250d
Author: Sasha Levin <sasha.levin@oracle.com>
Date:   Wed Mar 19 18:24:37 2014 -0400

    mtd: diskonchip: mem resource name is not optional
    
    commit 86e4bbc766b9456f583f2fc3c4f6c623b422af88 upstream.
    
    Passing a name to request_mem_region() isn't optional and can't just
    be NULL. Passing NULL causes a NULL ptr deref later in the boot
    process.
    
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>
    Tested-by: Alexander Shiyan <shc_work@mail.ru>
    Signed-off-by: Brian Norris <computersforpeace@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4893808f711ae288cfd36c86e4a1ad694dad3d9e
Author: Herve Codina <Herve.CODINA@celad.com>
Date:   Mon Mar 3 12:15:29 2014 +0100

    mtd: atmel_nand: Disable subpage NAND write when using Atmel PMECC
    
    commit 90445ff6241e2a13445310803e2efa606c61f276 upstream.
    
    Crash detected on sam5d35 and its pmecc nand ecc controller.
    
    The problem was a call to chip->ecc.hwctl from nand_write_subpage_hwecc
    (nand_base.c) when we write a sub page.
    chip->ecc.hwctl function is not set when we are using PMECC controller.
    As a workaround, set NAND_NO_SUBPAGE_WRITE for PMECC controller in
    order to disable sub page access in nand_write_page.
    
    Signed-off-by: Herve Codina <Herve.CODINA@celad.com>
    Acked-by: Josh Wu <josh.wu@atmel.com>
    Signed-off-by: Brian Norris <computersforpeace@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 667cd32538a7908aef4a38ba6ae32c728296317d
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jan 23 14:43:10 2014 -0500

    tgafb: fix data copying
    
    commit 6b0df6827bb6fcacb158dff29ad0a62d6418b534 upstream.
    
    The functions for data copying copyarea_foreward_8bpp and
    copyarea_backward_8bpp are buggy, they produce screen corruption.
    
    This patch fixes the functions and moves the logic to one function
    "copyarea_8bpp". For simplicity, the function only handles copying that
    is aligned on 8 pixes. If we copy an unaligned area, generic function
    cfb_copyarea is used.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3ecfe998c4b6274c9a155484990d374cb2fde685
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jan 23 14:42:43 2014 -0500

    tgafb: fix mode setting with fbset
    
    commit 624966589041deb32a2626ee2e176e8274581101 upstream.
    
    Mode setting in the TGA driver is broken for these reasons:
    
    - info->fix.line_length is set just once in tgafb_init_fix function. If
      we change videomode, info->fix.line_length is not recalculated - so
      the video mode is changed but the screen is corrupted because of wrong
      info->fix.line_length.
    
    - info->fix.smem_len is set in tgafb_init_fix to the size of the default
      video mode (640x480). If we set a higher resolution,
      info->fix.smem_len is smaller than the current screen size, preventing
      the userspace program from mapping the framebuffer.
    
    This patch fixes it:
    
    - info->fix.line_length initialization is moved to tgafb_set_par so that
      it is recalculated with each mode change.
    
    - info->fix.smem_len is set to a fixed value representing the real
      amount of video ram (the values are taken from xfree86 driver).
    
    - add a check to tgafb_check_var to prevent us from setting a videomode
      that doesn't fit into videoram.
    
    - in tgafb_register, tgafb_init_fix is moved upwards, to be called
      before fb_find_mode (because fb_find_mode already needs the videoram
      size set in tgafb_init_fix).
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa0e5094d6c6117d2c3ba65378c61a36984acb53
Author: Andrew Bresticker <abrestic@chromium.org>
Date:   Wed Apr 16 13:40:17 2014 -0700

    pinctrl: as3722: fix handling of GPIO invert bit
    
    commit a73d2e30b46787d478275db36c19222020e29dc5 upstream.
    
    The AS3722_GPIO_INV bit will always be blindly overwritten by
    as3722_pinctrl_gpio_set_direction() and will be ignored when
    setting the value of the GPIO in as3722_gpio_set() since the
    enable_gpio_invert flag is never set.  This will cause an
    initially inverted GPIO to toggle when requested as an output,
    which could be problematic if, for example, the GPIO controls
    a critical regulator.
    
    Instead of setting up the enable_gpio_invert flag, just leave
    the invert bit alone and check it before setting the GPIO value.
    
    Signed-off-by: Andrew Bresticker <abrestic@chromium.org>
    Reviewed-by: Stephen Warren <swarren@nvidia.com>
    Tested-by: Stephen Warren <swarren@nvidia.com>
    Acked-by: Laxman Dewangan <ldewangan@nvidia.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02188246b631f3efa7ec3ec00276af358f1e91c7
Author: Marek Vasut <marex@denx.de>
Date:   Mon Mar 24 03:38:10 2014 +0100

    gpio: mxs: Allow for recursive enable_irq_wake() call
    
    commit a585f87c863e4e1d496459d382b802bf5ebe3717 upstream.
    
    The scenario here is that someone calls enable_irq_wake() from somewhere
    in the code. This will result in the lockdep producing a backtrace as can
    be seen below. In my case, this problem is triggered when using the wl1271
    (TI WlCore) driver found in drivers/net/wireless/ti/ .
    
    The problem cause is rather obvious from the backtrace, but let's outline
    the dependency. enable_irq_wake() grabs the IRQ buslock in irq_set_irq_wake(),
    which in turns calls mxs_gpio_set_wake_irq() . But mxs_gpio_set_wake_irq()
    calls enable_irq_wake() again on the one-level-higher IRQ , thus it tries to
    grab the IRQ buslock again in irq_set_irq_wake() . Because the spinlock in
    irq_set_irq_wake()->irq_get_desc_buslock()->__irq_get_desc_lock() is not
    marked as recursive, lockdep will spew the stuff below.
    
    We know we can safely re-enter the lock, so use IRQ_GC_INIT_NESTED_LOCK to
    fix the spew.
    
     =============================================
     [ INFO: possible recursive locking detected ]
     3.10.33-00012-gf06b763-dirty #61 Not tainted
     ---------------------------------------------
     kworker/0:1/18 is trying to acquire lock:
      (&irq_desc_lock_class){-.-...}, at: [<c00685f0>] __irq_get_desc_lock+0x48/0x88
    
     but task is already holding lock:
      (&irq_desc_lock_class){-.-...}, at: [<c00685f0>] __irq_get_desc_lock+0x48/0x88
    
     other info that might help us debug this:
      Possible unsafe locking scenario:
    
            CPU0
            ----
       lock(&irq_desc_lock_class);
       lock(&irq_desc_lock_class);
    
      *** DEADLOCK ***
    
      May be due to missing lock nesting notation
    
     3 locks held by kworker/0:1/18:
      #0:  (events){.+.+.+}, at: [<c0036308>] process_one_work+0x134/0x4a4
      #1:  ((&fw_work->work)){+.+.+.}, at: [<c0036308>] process_one_work+0x134/0x4a4
      #2:  (&irq_desc_lock_class){-.-...}, at: [<c00685f0>] __irq_get_desc_lock+0x48/0x88
    
     stack backtrace:
     CPU: 0 PID: 18 Comm: kworker/0:1 Not tainted 3.10.33-00012-gf06b763-dirty #61
     Workqueue: events request_firmware_work_func
     [<c0013eb4>] (unwind_backtrace+0x0/0xf0) from [<c0011c74>] (show_stack+0x10/0x14)
     [<c0011c74>] (show_stack+0x10/0x14) from [<c005bb08>] (__lock_acquire+0x140c/0x1a64)
     [<c005bb08>] (__lock_acquire+0x140c/0x1a64) from [<c005c6a8>] (lock_acquire+0x9c/0x104)
     [<c005c6a8>] (lock_acquire+0x9c/0x104) from [<c051d5a4>] (_raw_spin_lock_irqsave+0x44/0x58)
     [<c051d5a4>] (_raw_spin_lock_irqsave+0x44/0x58) from [<c00685f0>] (__irq_get_desc_lock+0x48/0x88)
     [<c00685f0>] (__irq_get_desc_lock+0x48/0x88) from [<c0068e78>] (irq_set_irq_wake+0x20/0xf4)
     [<c0068e78>] (irq_set_irq_wake+0x20/0xf4) from [<c027260c>] (mxs_gpio_set_wake_irq+0x1c/0x24)
     [<c027260c>] (mxs_gpio_set_wake_irq+0x1c/0x24) from [<c0068cf4>] (set_irq_wake_real+0x30/0x44)
     [<c0068cf4>] (set_irq_wake_real+0x30/0x44) from [<c0068ee4>] (irq_set_irq_wake+0x8c/0xf4)
     [<c0068ee4>] (irq_set_irq_wake+0x8c/0xf4) from [<c0310748>] (wlcore_nvs_cb+0x10c/0x97c)
     [<c0310748>] (wlcore_nvs_cb+0x10c/0x97c) from [<c02be5e8>] (request_firmware_work_func+0x38/0x58)
     [<c02be5e8>] (request_firmware_work_func+0x38/0x58) from [<c0036394>] (process_one_work+0x1c0/0x4a4)
     [<c0036394>] (process_one_work+0x1c0/0x4a4) from [<c0036a4c>] (worker_thread+0x138/0x394)
     [<c0036a4c>] (worker_thread+0x138/0x394) from [<c003cb74>] (kthread+0xa4/0xb0)
     [<c003cb74>] (kthread+0xa4/0xb0) from [<c000ee00>] (ret_from_fork+0x14/0x34)
     wlcore: loaded
    
    Signed-off-by: Marek Vasut <marex@denx.de>
    Acked-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f11a9bdfe9ff8cf2302d9a60679c9374ee0b7827
Author: Colin Ian King <colin.king@canonical.com>
Date:   Mon Apr 21 17:38:44 2014 +0100

    rtlwifi: rtl8188ee: initialize packet_beacon
    
    commit 328e203fc35f0b4f6df1c4943f74cf553bcc04f8 upstream.
    
    static code analysis from cppcheck reports:
    
    [drivers/net/wireless/rtlwifi/rtl8188ee/trx.c:322]:
      (error) Uninitialized variable: packet_beacon
    
    packet_beacon is not initialized and hence packet_beacon
    contains garbage from the stack, so set it to false.
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e68795a7a06bab610630779655af1923702d941
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Fri Apr 25 10:05:43 2014 -0500

    rtlwifi: rtl8192se: Fix regression due to commit 1bf4bbb
    
    commit 5f9186990ec4579ee5b7a99b3254c29eda479f36 upstream.
    
    Beginning with kernel 3.13, this driver fails on some systems. The problem
    was bisected to:
    
    Commit 1bf4bbb4024dcdab5e57634dd8ae1072d42a53ac
    Author: Felix Fietkau <nbd@openwrt.org>
    Title: mac80211: send control port protocol frames to the VO queue
    
    There is noting wrong with the above commit. The regression occurs because
    V0 queue on RTL8192SE cards uses priority 6, not the usual 7. The fix is to
    modify the rtl8192se routine that sets the correct transmit queue.
    
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=74541
    
    Reported-by: Alex Miller <almiller_1@yahoo.co.uk>
    Tested-by: Alex Miller <almiller_1@yahoo.co.uk>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b8bd236a84a885cb7d9f2e86b94be98ffbdb7ef
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Tue Mar 4 16:53:51 2014 -0600

    rtlwifi: rtl8192se: Fix too long disable of IRQs
    
    commit 2610decdd0b3808ba20471a999835cfee5275f98 upstream.
    
    In commit f78bccd79ba3cd9d9664981b501d57bdb81ab8a4 entitled "rtlwifi:
    rtl8192ce: Fix too long disable of IRQs", Olivier Langlois
    <olivier@trillion01.com> fixed a problem caused by an extra long disabling
    of interrupts. This patch makes the same fix for rtl8192se.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3cf777ba7f28b59250ff434f51bce5636ea863c
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Tue Mar 4 16:53:50 2014 -0600

    rtlwifi: rtl8192cu: Fix too long disable of IRQs
    
    commit a53268be0cb9763f11da4f6fe3fb924cbe3a7d4a upstream.
    
    In commit f78bccd79ba3cd9d9664981b501d57bdb81ab8a4 entitled "rtlwifi:
    rtl8192ce: Fix too long disable of IRQs", Olivier Langlois
    <olivier@trillion01.com> fixed a problem caused by an extra long disabling
    of interrupts. This patch makes the same fix for rtl8192cu.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84f45dd5edd599710b983723f8f76fbc1d93c21b
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Tue Mar 4 16:53:52 2014 -0600

    rtlwifi: rtl8188ee: Fix too long disable of IRQs
    
    commit 6b6392715856d563719991e9ce95e773491a8983 upstream.
    
    In commit f78bccd79ba3cd9d9664981b501d57bdb81ab8a4 entitled "rtlwifi:
    rtl8192ce: Fix too long disable of IRQs", Olivier Langlois
    <olivier@trillion01.com> fixed a problem caused by an extra long disabling
    of interrupts. This patch makes the same fix for rtl8188ee.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 793971561990181b8979c3b07ba5d18437916d39
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Tue Mar 4 16:53:53 2014 -0600

    rtlwifi: rtl8723ae: Fix too long disable of IRQs
    
    commit bfc1010c418a22cbebd8b1bd1e75dad6a527a609 upstream.
    
    In commit f78bccd79ba3cd9d9664981b501d57bdb81ab8a4 entitled "rtlwifi:
    rtl8192ce: Fix too long disable of IRQs", Olivier Langlois
    <olivier@trillion01.com> fixed a problem caused by an extra long disabling
    of interrupts. This patch makes the same fix for rtl8723ae.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f7fa5886c6c94d459fa0a2113055f81c6f88413
Author: Jeff Layton <jlayton@kernel.org>
Date:   Tue Apr 15 08:44:12 2014 -0400

    locks: allow __break_lease to sleep even when break_time is 0
    
    commit 4991a628a789dc5954e98e79476d9808812292ec upstream.
    
    A fl->fl_break_time of 0 has a special meaning to the lease break code
    that basically means "never break the lease". knfsd uses this to ensure
    that leases don't disappear out from under it.
    
    Unfortunately, the code in __break_lease can end up passing this value
    to wait_event_interruptible as a timeout, which prevents it from going
    to sleep at all. This causes __break_lease to spin in a tight loop and
    causes soft lockups.
    
    Fix this by ensuring that we pass a minimum value of 1 as a timeout
    instead.
    
    Cc: J. Bruce Fields <bfields@fieldses.org>
    Reported-by: Terry Barnaby <terry1@beam.ltd.uk>
    Signed-off-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0da23286e385c0385cf057884319d30f73205767
Author: Felix Fietkau <nbd@openwrt.org>
Date:   Sun Mar 9 11:02:54 2014 +0100

    ath9k: fix ready time of the multicast buffer queue
    
    commit 3b3e0efb5c72c4fc940af50b33626b8a78a907dc upstream.
    
    qi->tqi_readyTime is written directly to registers that expect
    microseconds as unit instead of TU.
    When setting the CABQ ready time, cur_conf->beacon_interval is in TU, so
    convert it to microseconds before passing it to ath9k_hw.
    
    This should hopefully fix some Tx DMA issues with buffered multicast
    frames in AP mode.
    
    Signed-off-by: Felix Fietkau <nbd@openwrt.org>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6acde7cd22620cfdddc9b06103479ec03686f1f6
Author: Felix Fietkau <nbd@openwrt.org>
Date:   Thu Apr 10 15:06:48 2014 +0200

    mac80211: exclude AP_VLAN interfaces from tx power calculation
    
    commit 764152ff66f4a8be1f9d7981e542ffdaa5bd7aff upstream.
    
    Their power value is initialized to zero. This patch fixes an issue
    where the configured power drops to the minimum value when AP_VLAN
    interfaces are created/removed.
    
    Signed-off-by: Felix Fietkau <nbd@openwrt.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87000b382512cbe9d16a1eba739be9506a0c26f0
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Mar 27 15:39:20 2014 +0100

    mac80211: fix software remain-on-channel implementation
    
    commit 115b943a6ea12656088fa1ff6634c0d30815e55b upstream.
    
    Jouni reported that when doing off-channel transmissions mixed
    with on-channel transmissions, the on-channel ones ended up on
    the off-channel in some cases.
    
    The reason for that is that during the refactoring of the off-
    channel code, I lost the part that stopped all activity and as
    a consequence the on-channel frames (including data frames)
    were no longer queued but would be transmitted on the temporary
    channel.
    
    Fix this by simply restoring the lost activity stop call.
    
    Fixes: 2eb278e083549 ("mac80211: unify SW/offload remain-on-channel")
    Reported-by: Jouni Malinen <j@w1.fi>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f8f0eee917d299f2248d696ba90ddba2b0955c7
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Mar 19 09:55:55 2014 +0100

    mac80211: fix suspend vs. authentication race
    
    commit 1a1cb744de160ee70086a77afff605bbc275d291 upstream.
    
    Since Stanislaw's patch removing the quiescing code, mac80211 had
    a race regarding suspend vs. authentication: as cfg80211 doesn't
    track authentication attempts, it can't abort them. Therefore the
    attempts may be kept running while suspending, which can lead to
    all kinds of issues, in at least some cases causing an error in
    iwlmvm firmware.
    
    Fix this by aborting the authentication attempt when suspending.
    
    Fixes: 12e7f517029d ("mac80211: cleanup generic suspend/resume procedures")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f869c32792acd11d4d82150f7ebba5398a80737d
Author: Michael Braun <michael-dev@fami-braun.de>
Date:   Thu Mar 6 15:08:43 2014 +0100

    mac80211: fix WPA with VLAN on AP side with ps-sta again
    
    commit 112c44b2df0984121a52fbda89425843b8e1a457 upstream.
    
    commit de74a1d9032f4d37ea453ad2a647e1aff4cd2591
      "mac80211: fix WPA with VLAN on AP side with ps-sta"
    fixed an issue where queued multicast packets would
    be sent out encrypted with the key of an other bss.
    
    commit "7cbf9d017dbb5e3276de7d527925d42d4c11e732"
      "mac80211: fix oops on mesh PS broadcast forwarding"
    essentially reverted it, because vif.type cannot be AP_VLAN
    due to the check to vif.type in ieee80211_get_buffered_bc before.
    
    As the later commit intended to fix the MESH case, fix it
    by checking for IFTYPE_AP instead of IFTYPE_AP_VLAN.
    
    Fixes: 7cbf9d017dbb ("mac80211: fix oops on mesh PS broadcast forwarding")
    Signed-off-by: Michael Braun <michael-dev@fami-braun.de>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c6d6302d8adb46db2157673b9ee1b7497d2968c
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Mar 4 11:43:28 2014 +0100

    mac80211: fix potential use-after-free
    
    commit d2722f8b87fb172ff2f31d3a2816b31d58678d40 upstream.
    
    The bss struct might be freed in ieee80211_rx_bss_put(),
    so we shouldn't use it afterwards.
    
    Fixes: 817cee7675237 ("mac80211: track AP's beacon rate and give it to the driver")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e24b7822c7fea8d23d30baea8aabf96ec8522936
Author: Ilya Dryomov <ilya.dryomov@inktank.com>
Date:   Wed Mar 19 16:58:36 2014 +0200

    crush: fix off-by-one errors in total_tries refactor
    
    commit 48a163dbb517eba13643bf404a0d695c1ab0a60d upstream.
    
    Back in 27f4d1f6bc32c2ed7b2c5080cbd58b14df622607 we refactored the CRUSH
    code to allow adjustment of the retry counts on a per-pool basis.  That
    commit had an off-by-one bug: the previous "tries" counter was a *retry*
    count, not a *try* count, but the new code was passing in 1 meaning
    there should be no retries.
    
    Fix the ftotal vs tries comparison to use < instead of <= to fix the
    problem.  Note that the original code used <= here, which means the
    global "choose_total_tries" tunable is actually counting retries.
    Compensate for that by adding 1 in crush_do_rule when we pull the tunable
    into the local variable.
    
    This was noticed looking at output from a user provided osdmap.
    Unfortunately the map doesn't illustrate the change in mapping behavior
    and I haven't managed to construct one yet that does.  Inspection of the
    crush debug output now aligns with prior versions, though.
    
    Reflects ceph.git commit 795704fd615f0b008dcc81aa088a859b2d075138.
    
    Signed-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>
    Reviewed-by: Josh Durgin <josh.durgin@inktank.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d1871289ce4af1bdee5eb46992f0ad3e005a508
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Tue Mar 18 16:32:45 2014 +0200

    iwlwifi: mvm: disable uAPSD due to bugs in the firmware
    
    commit a82dda6cd492b8c88952be6f6527f3656f7ac585 upstream.
    
    The current firmware advertises support for uAPSD, but
    critical bugs force us to disable the feature.
    When a fixed firmware will be available, we will be able to
    re-enable uAPSD.
    
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7319b51324e28288818722e4e808edbdc0b764ea
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Mon Mar 10 15:22:03 2014 +0200

    iwlwifi: dvm: take mutex when sending SYNC BT config command
    
    commit 82e5a649453a3cf23516277abb84273768a1592b upstream.
    
    There is a flow in which we send the host command in SYNC
    mode, but we don't take priv->mutex.
    
    Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1046495
    
    Reviewed-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3a35e0d3fd38e66fb66ebf04f5de89d70da26c6
Author: Martin K. Petersen <martin.petersen@oracle.com>
Date:   Tue Apr 1 20:42:37 2014 -0400

    libata: Update queued trim blacklist for M5x0 drives
    
    commit d121f7d0cbb875abce249dbf7eb191f9bafe80b7 upstream.
    
    Crucial/Micron M500 drives properly support queued DSM TRIM starting
    with firmware MU05. Update the blacklist so we only disable queued trim
    for older firmware releases.
    
    Early M550 series drives suffer from the same issue as M500. A bugfix
    firmware is in the pipeline but not ready yet. Until then, blacklist
    queued trim for M550.
    
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Chris Samuel <chris@csamuel.org>
    Cc: Marc MERLIN <marc@merlins.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d529d6947b41b7575144901d6e681ae0f2296ae4
Author: Alexander Gordeev <agordeev@redhat.com>
Date:   Thu Apr 17 18:06:15 2014 +0200

    ahci: Do not receive interrupts sent by dummy ports
    
    commit 2cf532f5e67c0cfe38c8c100e49280cdadacd2be upstream.
    
    In multiple MSI mode all AHCI ports (including dummy) get assigned
    separate MSI vectors and (as result of execution
    pci_enable_msi_exact() function) separate IRQ numbers, (mapped to the
    MSI vectors).
    
    Therefore, although interrupts from dummy ports are not desired they
    are still enabled. We do not request IRQs for dummy ports, but that
    only means we do not assign AHCI-specific ISRs to corresponding IRQ
    numbers.
    
    As result, dummy port interrupts still could come and traverse all the
    way from the PCI device to the kernel, causing unnecessary overhead.
    
    This update disables IRQs for dummy ports and prevents the described
    issue.
    
    Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Tested-by: David Milburn <dmilburn@redhat.com>
    Cc: linux-ide@vger.kernel.org
    Fixes: 5ca72c4f7c41 ("AHCI: Support multiple MSIs")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0db2ae62e61221dd834d00d1e86f34eabbeac73f
Author: Alexander Gordeev <agordeev@redhat.com>
Date:   Thu Apr 17 14:13:49 2014 +0200

    ahci: Ensure "MSI Revert to Single Message" mode is not enforced
    
    commit ab0f9e78b97f5193dd38b3757b42b6fbded05fb7 upstream.
    
    The AHCI specification allows hardware to choose to revert to
    single MSI mode when fewer messages are allocated than requested.
    Yet, at least ICH10 chipset reverts to single MSI mode even when
    enough messages are allocated in some cases (see below).
    
    This update forces the driver to not rely on initialization of
    multiple MSIs mode alone and always check if "MSI Revert to
    Single Message" (MRSM) mode was enforced by the controller and
    fallback to the single MSI mode in case it did.
    
    That prevents a situation when the driver configured multiple
    per-port IRQ handlers, but the controller sends all port's
    interrupts to a single IRQ, which could easily screw up the
    interrupt handling and lead to delays and possibly crashes.
    
    The fix was tested on a 6-port controller that successfully
    reverted to the single MSI mode:
    
    00:1f.2 SATA controller: Intel Corporation 82801JI (ICH10 Family) SATA
    AHCI Controller (prog-if 01 [AHCI 1.0])
            Subsystem: Super Micro Computer Inc Device 10a7
            Flags: bus master, 66MHz, medium devsel, latency 0, IRQ 101
            I/O ports at f110 [size=8]
            I/O ports at f100 [size=4]
            I/O ports at f0f0 [size=8]
            I/O ports at f0e0 [size=4]
            I/O ports at f020 [size=32]
            Memory at fbf00000 (32-bit, non-prefetchable) [size=2K]
            Capabilities: [80] MSI: Enable+ Count=1/16 Maskable- 64bit-
            Capabilities: [70] Power Management version 3
            Capabilities: [a8] SATA HBA v1.0
            Capabilities: [b0] PCI Advanced Features
            Kernel driver in use: ahci
    
    With 6 ports just 8 MSI vectors should be enough, but the adapter
    enforces the MRSM mode when less than 16 vectors are written to
    the Multiple Messages Enable PCI register. I instigated MRSM mode
    by forcing @nvec to 8 in ahci_init_interrupts().
    
    Signed-off-by: Alexander Gordeev <agordeev@redhat.com>
    Cc: linux-ide@vger.kernel.org
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c295064496bf06df2475f1046e47a5fedf7c3ea
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Apr 17 11:48:21 2014 -0700

    libata/ahci: accommodate tag ordered controllers
    
    commit 8a4aeec8d2d6a3edeffbdfae451cdf05cbf0fefd upstream.
    
    The AHCI spec allows implementations to issue commands in tag order
    rather than FIFO order:
    
            5.3.2.12 P:SelectCmd
            HBA sets pSlotLoc = (pSlotLoc + 1) mod (CAP.NCS + 1)
            or HBA selects the command to issue that has had the
            PxCI bit set to '1' longer than any other command
            pending to be issued.
    
    The result is that commands posted sequentially (time-wise) may play out
    of sequence when issued by hardware.
    
    This behavior has likely been hidden by drives that arrange for commands
    to complete in issue order.  However, it appears recent drives (two from
    different vendors that we have found so far) inflict out-of-order
    completions as a matter of course.  So, we need to take care to maintain
    ordered submission, otherwise we risk triggering a drive to fall out of
    sequential-io automation and back to random-io processing, which incurs
    large latency and degrades throughput.
    
    This issue was found in simple benchmarks where QD=2 seq-write
    performance was 30-50% *greater* than QD=32 seq-write performance.
    
    Tagging for -stable and making the change globally since it has a low
    risk-to-reward ratio.  Also, word is that recent versions of an unnamed
    OS also does it this way now.  So, drives in the field are already
    experienced with this tag ordering scheme.
    
    Cc: Dave Jiang <dave.jiang@intel.com>
    Cc: Ed Ciechanowski <ed.ciechanowski@intel.com>
    Reviewed-by: Matthew Wilcox <matthew.r.wilcox@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 225d1fcc34f195b01346ea1cf2f3f1a9836ff876
Author: David Milburn <dmilburn@redhat.com>
Date:   Wed Apr 16 11:43:46 2014 -0500

    ahci: do not request irq for dummy port
    
    commit 9ae794ac5e407d3bc3fec785db481d5a2c0fa275 upstream.
    
    System may crash in ahci_hw_interrupt() or ahci_thread_fn() when
    accessing the interrupt status in a port's private_data if the port is
    actually a DUMMY port.
    
    00:1f.2 SATA controller: Intel Corporation 82801JI (ICH10 Family) SATA AHCI Controller
    
    <snip console output for linux-3.15-rc1>
    [    9.352080] ahci 0000:00:1f.2: AHCI 0001.0200 32 slots 6 ports 3 Gbps 0x1 impl SATA mode
    [    9.352084] ahci 0000:00:1f.2: flags: 64bit ncq sntf pm led clo pio slum part ccc
    [    9.368155] Console: switching to colour frame buffer device 128x48
    [    9.439759] mgag200 0000:11:00.0: fb0: mgadrmfb frame buffer device
    [    9.446765] mgag200 0000:11:00.0: registered panic notifier
    [    9.470166] scsi1 : ahci
    [    9.479166] scsi2 : ahci
    [    9.488172] scsi3 : ahci
    [    9.497174] scsi4 : ahci
    [    9.506175] scsi5 : ahci
    [    9.515174] scsi6 : ahci
    [    9.518181] ata1: SATA max UDMA/133 abar m2048@0x95c00000 port 0x95c00100 irq 91
    [    9.526448] ata2: DUMMY
    [    9.529182] ata3: DUMMY
    [    9.531916] ata4: DUMMY
    [    9.534650] ata5: DUMMY
    [    9.537382] ata6: DUMMY
    [    9.576196] [drm] Initialized mgag200 1.0.0 20110418 for 0000:11:00.0 on minor 0
    [    9.845257] ata1: SATA link up 1.5 Gbps (SStatus 113 SControl 300)
    [    9.865161] ata1.00: ATAPI: Optiarc DVD RW AD-7580S, FX04, max UDMA/100
    [    9.891407] ata1.00: configured for UDMA/100
    [    9.900525] scsi 1:0:0:0: CD-ROM            Optiarc  DVD RW AD-7580S  FX04 PQ: 0 ANSI: 5
    [   10.247399] iTCO_vendor_support: vendor-support=0
    [   10.261572] iTCO_wdt: Intel TCO WatchDog Timer Driver v1.11
    [   10.269764] iTCO_wdt: unable to reset NO_REBOOT flag, device disabled by hardware/BIOS
    [   10.301932] sd 0:2:0:0: [sda] 570310656 512-byte logical blocks: (291 GB/271 GiB)
    [   10.317085] sd 0:2:0:0: [sda] Write Protect is off
    [   10.328326] sd 0:2:0:0: [sda] Write cache: disabled, read cache: disabled, supports DPO and FUA
    [   10.375452] BUG: unable to handle kernel NULL pointer dereference at 000000000000003c
    [   10.384217] IP: [<ffffffffa0133df0>] ahci_hw_interrupt+0x100/0x130 [libahci]
    [   10.392101] PGD 0
    [   10.394353] Oops: 0000 [#1] SMP
    [   10.397978] Modules linked in: sr_mod(+) cdrom sd_mod iTCO_wdt crc_t10dif iTCO_vendor_support crct10dif_common ahci libahci libata lpc_ich mfd_core mgag200 syscopyarea sysfillrect sysimgblt i2c_algo_bit drm_kms_helper ttm drm i2c_core megaraid_sas dm_mirror dm_region_hash
    dm_log dm_mod
    [   10.426499] CPU: 0 PID: 0 Comm: swapper/0 Not tainted 3.15.0-rc1 #1
    [   10.433495] Hardware name: QCI QSSC-S4R/QSSC-S4R, BIOS QSSC-S4R.QCI.01.00.S013.032920111005 03/29/2011
    [   10.443886] task: ffffffff81906460 ti: ffffffff818f0000 task.ti: ffffffff818f0000
    [   10.452239] RIP: 0010:[<ffffffffa0133df0>]  [<ffffffffa0133df0>] ahci_hw_interrupt+0x100/0x130 [libahci]
    [   10.462838] RSP: 0018:ffff880033c03d98  EFLAGS: 00010046
    [   10.468767] RAX: 0000000000a400a4 RBX: ffff880029a6bc18 RCX: 00000000fffffffa
    [   10.476731] RDX: 00000000000000a4 RSI: ffff880029bb0000 RDI: ffff880029a6bc18
    [   10.484696] RBP: ffff880033c03dc8 R08: 0000000000000000 R09: ffff88002f800490
    [   10.492661] R10: 0000000000000000 R11: 0000000000000005 R12: 0000000000000000
    [   10.500625] R13: ffff880029a6bd98 R14: 0000000000000000 R15: ffffc90000194000
    [   10.508590] FS:  0000000000000000(0000) GS:ffff880033c00000(0000) knlGS:0000000000000000
    [   10.517623] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [   10.524035] CR2: 000000000000003c CR3: 00000000328ff000 CR4: 00000000000007b0
    [   10.531999] Stack:
    [   10.534241]  0000000000000017 ffff880031ba7d00 000000000000005c ffff880031ba7d00
    [   10.542535]  0000000000000000 000000000000005c ffff880033c03e10 ffffffff810c2a1e
    [   10.550827]  ffff880031ae2900 000000008108fb4f ffff880031ae2900 ffff880031ae2984
    [   10.559121] Call Trace:
    [   10.561849]  <IRQ>
    [   10.563994]  [<ffffffff810c2a1e>] handle_irq_event_percpu+0x3e/0x1a0
    [   10.571309]  [<ffffffff810c2bbd>] handle_irq_event+0x3d/0x60
    [   10.577631]  [<ffffffff810c4fdd>] try_one_irq.isra.6+0x8d/0xf0
    [   10.584142]  [<ffffffff810c5313>] note_interrupt+0x173/0x1f0
    [   10.590460]  [<ffffffff810c2a8e>] handle_irq_event_percpu+0xae/0x1a0
    [   10.597554]  [<ffffffff810c2bbd>] handle_irq_event+0x3d/0x60
    [   10.603872]  [<ffffffff810c5727>] handle_edge_irq+0x77/0x130
    [   10.610199]  [<ffffffff81014b8f>] handle_irq+0xbf/0x150
    [   10.616040]  [<ffffffff8109ff4e>] ? vtime_account_idle+0xe/0x50
    [   10.622654]  [<ffffffff815fca1a>] ? atomic_notifier_call_chain+0x1a/0x20
    [   10.630140]  [<ffffffff816038cf>] do_IRQ+0x4f/0xf0
    [   10.635490]  [<ffffffff815f8aed>] common_interrupt+0x6d/0x6d
    [   10.641805]  <EOI>
    [   10.643950]  [<ffffffff8149ca9f>] ? cpuidle_enter_state+0x4f/0xc0
    [   10.650972]  [<ffffffff8149ca98>] ? cpuidle_enter_state+0x48/0xc0
    [   10.657775]  [<ffffffff8149cb47>] cpuidle_enter+0x17/0x20
    [   10.663807]  [<ffffffff810b0070>] cpu_startup_entry+0x2c0/0x3d0
    [   10.670423]  [<ffffffff815dfcc7>] rest_init+0x77/0x80
    [   10.676065]  [<ffffffff81a60f47>] start_kernel+0x40f/0x41a
    [   10.682190]  [<ffffffff81a60941>] ? repair_env_string+0x5c/0x5c
    [   10.688799]  [<ffffffff81a60120>] ? early_idt_handlers+0x120/0x120
    [   10.695699]  [<ffffffff81a605ee>] x86_64_start_reservations+0x2a/0x2c
    [   10.702889]  [<ffffffff81a60733>] x86_64_start_kernel+0x143/0x152
    [   10.709689] Code: a0 fc ff 85 c0 8b 4d d4 74 c3 48 8b 7b 08 89 ca 48 c7 c6 60 66 13 a0 31 c0 e8 9d 70 28 e1 8b 4d d4 eb aa 0f 1f 84 00 00 00 00 00 <45> 8b 64 24 3c 48 89 df e8 23 47 4c e1 41 83 fc 01 19 c0 48 83
    [   10.731470] RIP  [<ffffffffa0133df0>] ahci_hw_interrupt+0x100/0x130 [libahci]
    [   10.739441]  RSP <ffff880033c03d98>
    [   10.743333] CR2: 000000000000003c
    [   10.747032] ---[ end trace b6e82636970e2690 ]---
    [   10.760190] Kernel panic - not syncing: Fatal exception in interrupt
    [   10.767291] Kernel Offset: 0x0 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffff9fffffff)
    
    Cc: Alexander Gordeev <agordeev@redhat.com>
    Cc: Tejun Heo <tj@kernel.org>
    Signed-of-by: David Milburn <dmilburn@redhat.com>
    Fixes: 5ca72c4f7c41 ("AHCI: Support multiple MSIs")

commit cd71e246c16b30e3f396a85943d5f596202737ba
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Sun Apr 13 11:15:33 2014 +0200

    Revert "net: mvneta: fix usage as a module on RGMII configurations"
    
    commit cc6ca3023f2c2bbcd062e9d4cf6afc2ba2821ada upstream.
    
    This reverts commit e3a8786c10e75903f1269474e21fe8cb49c3a670. While
    this commit allows to use the mvneta driver as a module on some
    configurations, it breaks other configurations even if mvneta is used
    built-in.
    
    This breakage is due to the fact that on some RGMII platforms, the PCS
    bit has to be set, and on some other platforms, it has to be
    cleared. At the moment, we lack informations to know exactly the
    significance of this bit (the datasheet only says "enables PCS"), and
    so we can't produce a patch that will work on all platforms at this
    point. And since this change is breaking the network completely for
    many users, it's much better to revert it for now. We'll come back
    later with a proper fix that takes into account all platforms.
    
    Basically:
    
     * Armada XP GP is configured as RGMII-ID, and needs the PCS bit to be
       set.
     * Armada 370 Mirabox is configured as RGMII-ID, and needs the PCS bit
       to be cleared.
    
    And at the moment, we don't know how to make the distinction between
    those two cases. One hint is that the Armada XP GP appears in fact to
    be using a QSGMII connection with the PHY (Quad-SGMII), but
    configuring it as SGMII doesn't work, while RGMII-ID works. This needs
    more investigation, but in the mean time, let's unbreak the network
    for all those users.
    
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Reported-by: Arnaud Ebalard <arno@natisbad.org>
    Reported-by: Alexander Reuter <Alexander.Reuter@gmx.net>
    Fixes: https://bugzilla.kernel.org/show_bug.cgi?id=73401
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1492bf644c704b2f70477062fe5a8867826ca094
Author: Rafał Miłecki <zajec5@gmail.com>
Date:   Sat Apr 5 18:08:25 2014 +0200

    b43: Fix machine check error due to improper access of B43_MMIO_PSM_PHY_HDR
    
    commit 12cd43c6ed6da7bf7c5afbd74da6959cda6d056b upstream.
    
    Register B43_MMIO_PSM_PHY_HDR is 16 bit one, so accessing it with 32b
    functions isn't safe. On my machine it causes delayed (!) CPU exception:
    
    Disabling lock debugging due to kernel taint
    mce: [Hardware Error]: CPU 0: Machine Check Exception: 4 Bank 4: b200000000070f0f
    mce: [Hardware Error]: TSC 164083803dc
    mce: [Hardware Error]: PROCESSOR 2:20fc2 TIME 1396650505 SOCKET 0 APIC 0 microcode 0
    mce: [Hardware Error]: Run the above through 'mcelog --ascii'
    mce: [Hardware Error]: Machine check: Processor context corrupt
    Kernel panic - not syncing: Fatal machine check on current CPU
    Kernel Offset: 0x0 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffff9fffffff)
    
    Signed-off-by: Rafał Miłecki <zajec5@gmail.com>
    Acked-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 746161e9673e904bcae0f541bcb2d87e52957553
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jan 23 14:41:59 2014 -0500

    mach64: fix cursor when character width is not a multiple of 8 pixels
    
    commit 43751a1b8ee2e70ce392bf31ef3133da324e68b3 upstream.
    
    This patch fixes the hardware cursor on mach64 when font width is not a
    multiple of 8 pixels.
    
    If you load such a font, the cursor is expanded to the next 8-byte
    boundary and a part of the next character after the cursor is not
    visible.
    For example, when you load a font with 12-pixel width, the cursor width
    is 16 pixels and when the cursor is displayed, 4 pixels of the next
    character are not visible.
    
    The reason is this: atyfb_cursor is called with proper parameters to
    load an image that is 12-pixel wide. However, the number is aligned on
    the next 8-pixel boundary on the line
    "unsigned int width = (cursor->image.width + 7) >> 3;" and the whole
    function acts as it is was loading a 16-pixel image.
    
    This patch fixes it so that the value written to the framebuffer is
    padded with 0xaaaa (the transparent pattern) when the image size it not
    a multiple of 8 pixels. The transparent pattern causes that the cursor
    will not interfere with the next character.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cdab63457f721655224d066ef8b91c3420401cd6
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jan 23 14:41:09 2014 -0500

    mach64: use unaligned access
    
    commit c29dd8696dc5dbd50b3ac441b8a26751277ba520 upstream.
    
    This patch fixes mach64 to use unaligned access to the font bitmap.
    
    This fixes unaligned access warning on sparc64 when 14x8 font is loaded.
    
    On x86(64), unaligned access is handled in hardware, so both functions
    le32_to_cpup and get_unaligned_le32 perform the same operation.
    
    On RISC machines, unaligned access is not handled in hardware, so we
    better use get_unaligned_le32 to avoid the unaligned trap and warning.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9cbf85d5109b992c931b1b4ef16bf4a0b3aeca7
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jan 23 14:39:04 2014 -0500

    matroxfb: restore the registers M_ACCESS and M_PITCH
    
    commit a772d4736641ec1b421ad965e13457c17379fc86 upstream.
    
    When X11 is running and the user switches back to console, the card
    modifies the content of registers M_MACCESS and M_PITCH in periodic
    intervals.
    
    This patch fixes it by restoring the content of these registers before
    issuing any accelerator command.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d432a0e90380aac5c7d703dc2829e3db73acb35
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Thu Jan 23 14:39:29 2014 -0500

    framebuffer: fix cfb_copyarea
    
    commit 00a9d699bc85052d2d3ed56251cd928024ce06a3 upstream.
    
    The function cfb_copyarea is buggy when the copy operation is not aligned on
    long boundary (4 bytes on 32-bit machines, 8 bytes on 64-bit machines).
    
    How to reproduce:
    - use x86-64 machine
    - use a framebuffer driver without acceleration (for example uvesafb)
    - set the framebuffer to 8-bit depth
            (for example fbset -a 1024x768-60 -depth 8)
    - load a font with character width that is not a multiple of 8 pixels
            note: the console-tools package cannot load a font that has
            width different from 8 pixels. You need to install the packages
            "kbd" and "console-terminus" and use the program "setfont" to
            set font width (for example: setfont Uni2-Terminus20x10)
    - move some text left and right on the bash command line and you get a
            screen corruption
    
    To expose more bugs, put this line to the end of uvesafb_init_info:
    info->flags |= FBINFO_HWACCEL_COPYAREA | FBINFO_READS_FAST;
    - Now framebuffer console will use cfb_copyarea for console scrolling.
    You get a screen corruption when console is scrolled.
    
    This patch is a rewrite of cfb_copyarea. It fixes the bugs, with this
    patch, console scrolling in 8-bit depth with a font width that is not a
    multiple of 8 pixels works fine.
    
    The cfb_copyarea code was very buggy and it looks like it was written
    and never tried with non-8-pixel font.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13d90455089e51da4372e963196b1e77de87e5a0
Author: Vineet Gupta <Vineet.Gupta1@synopsys.com>
Date:   Wed Apr 30 15:26:45 2014 +0530

    ARC: !PREEMPT: Ensure Return to kernel mode is IRQ safe
    
    commit 8aa9e85adac609588eeec356e5a85059b3b819ba upstream.
    
    There was a very small race window where resume to kernel mode from a
    Exception Path (or pure kernel mode which is true for most of ARC
    exceptions anyways), was not disabling interrupts in restore_regs,
    clobbering the exception regs
    
    Anton found the culprit call flow (after many sleepless nights)
    
    | 1. we got a Trap from user land
    | 2. started to service it.
    | 3. While doing some stuff on user-land memory (I think it is padzero()),
    |     we got a DataTlbMiss
    | 4. On return from it we are taking "resume_kernel_mode" path
    | 5. NEED_RESHED is not set, so we go to "return from exception" path in
    |     restore regs.
    | 6. there seems to be IRQ happening
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Cc: Anton Kolesov <Anton.Kolesov@synopsys.com>
    Cc: Francois Bedard <Francois.Bedard@synopsys.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1804e7cae02dab74baa07aff4faf10b6db123fd
Author: Steve Dickson <steved@redhat.com>
Date:   Thu Mar 20 11:23:03 2014 -0400

    SUNRPC: Ensure call_connect_status() deals correctly with SOFTCONN tasks
    
    commit 1fa3e2eb9db07f30a605c66d1a2fdde4b24e74d5 upstream.
    
    Don't schedule an rpc_delay before checking to see if the task
    is a SOFTCONN because the tk_callback from the delay (__rpc_atrun)
    clears the task status before the rpc_exit_task can be run.
    
    Signed-off-by: Steve Dickson <steved@redhat.com>
    Fixes: 561ec1603171c (SUNRPC: call_connect_status should recheck...)
    Link: http://lkml.kernel.org/r/5329CF7C.7090308@RedHat.com
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1c6070174b2cd7fd218dd4cb24ae60d46c7e22b
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Mon Mar 17 12:51:44 2014 -0400

    SUNRPC: Ensure that call_connect times out correctly
    
    commit 485f2251782f7c44299c491d4676a8a01428d191 upstream.
    
    When the server is unavailable due to a networking error, etc, we want
    the RPC client to respect the timeout delays when attempting to reconnect.
    
    Reported-by: Neil Brown <neilb@suse.de>
    Fixes: 561ec1603171 (SUNRPC: call_connect_status should recheck bind..)
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e1692fb5f19f504813f0e461cd656c204d8fe37
Author: Richard Weinberger <richard@nod.at>
Date:   Sun Feb 9 19:48:05 2014 +0100

    ARC: Remove ARC_HAS_COH_RTSC
    
    commit d345ea2892ae7a2b70f84cf881c20731e43e4993 upstream.
    
    The symbol is an orphan, get rid of it.
    
    Fixes: 7d0857a54aed ("ARC: [SMP] Disallow RTSC")
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Acked-by: Paul Bolle <pebolle@tiscali.nl>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b56f12b3abb91f9ea8c393c3e356ee78f5cb37f6
Author: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date:   Tue Apr 15 16:58:09 2014 +0300

    ASoC: dapm: Fix widget double free with auto-disable DAPM kcontrol
    
    commit 2697e4fb9209dfe1d1b24c92d254158f63d4bc8e upstream.
    
    Commit 9e1fda4ae158 ("ASoC: dapm: Implement mixer input auto-disable")
    is trying to free the widget it allocated by snd_soc_dapm_new_control()
    call in dapm_kcontrol_data_alloc() by adding kfree(data->widget) to
    dapm_kcontrol_free().
    
    This is causing a widget double free with auto-disabled DAPM kcontrols
    in sound card unregistration because widgets are already freed before
    dapm_kcontrol_free() is called.
    
    Reason for that is all widgets are added into dapm->card->widgets list
    in snd_soc_dapm_new_control() and freed in dapm_free_widgets() during
    execution of snd_soc_dapm_free().
    
    Now snd_soc_dapm_free() calls for different DAPM contexts happens before
    snd_card_free() call from where the call chain to dapm_kcontrol_free()
    begins:
    
    soc_cleanup_card_resources()
      soc_remove_dai_links()
        soc_remove_link_dais()
          snd_soc_dapm_free(&cpu_dai->dapm)
        soc_remove_link_components()
          soc_remove_platform()
            snd_soc_dapm_free(&platform->dapm)
          soc_remove_codec()
            snd_soc_dapm_free(&codec->dapm)
      snd_soc_dapm_free(&card->dapm)
      snd_card_free()
        snd_card_do_free()
          snd_device_free_all()
            snd_device_free()
              snd_ctl_dev_free()
                snd_ctl_remove()
                  snd_ctl_free_one()
                    dapm_kcontrol_free()
    
    This wasn't making harm with ordinary DAPM kcontrols since data->widget is NULL for
    them.
    
    Fixes: 9e1fda4ae158 (ASoC: dapm: Implement mixer input auto-disable)
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Acked-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Mark Brown <broonie@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c180afb403eaabbd3a233832abcc7e50e988de8e
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Fri Apr 25 10:53:44 2014 +0200

    s390/bpf,jit: initialize A register if 1st insn is BPF_S_LDX_B_MSH
    
    commit 6e0de817594c61f3b392a9245deeb09609ec707d upstream.
    
    The A register needs to be initialized to zero in the prolog if the
    first instruction of the BPF program is BPF_S_LDX_B_MSH to prevent
    leaking the content of %r5 to user space.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ba2a0e0643ffcc64f3e9f986e6934ba228d433d
Author: Sebastian Ott <sebott@linux.vnet.ibm.com>
Date:   Tue Apr 15 20:08:01 2014 +0200

    s390/chsc: fix SEI usage on old FW levels
    
    commit 06cd7a874ec6e09d151aeb1fa8600e14f1ff89f6 upstream.
    
    Using a notification type mask for the store event information chsc
    is unsupported on some firmware levels. Retry SEI with that mask set
    to zero (which is the old way of requesting only channel subsystem
    related events).
    
    Reported-and-tested-by: Stefan Haberland <stefan.haberland@de.ibm.com>
    Reviewed-by: Peter Oberparleiter <oberpar@linux.vnet.ibm.com>
    Signed-off-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ae6e5072bc4ffcf51d8d78a55c11c6cbb076ae2
Author: Li Zhong <zhong@linux.vnet.ibm.com>
Date:   Mon Apr 28 08:29:51 2014 +0800

    powerpc: Fix Oops in rtas_stop_self()
    
    commit 4fb8d027dca0236c811272d342cf185569d91311 upstream.
    
    commit 41dd03a9 may cause Oops in rtas_stop_self().
    
    The reason is that the rtas_args was moved into stack space. For a box
    with more that 4GB RAM, the stack could easily be outside 32bit range,
    but RTAS is 32bit.
    
    So the patch moves rtas_args away from stack by adding static before
    it.
    
    Signed-off-by: Li Zhong <zhong@linux.vnet.ibm.com>
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd0b55d10fc74e0fab137481fe23c04851f71735
Author: Michael Neuling <mikey@neuling.org>
Date:   Fri Apr 4 20:19:48 2014 +1100

    powerpc/tm: Disable IRQ in tm_recheckpoint
    
    commit e6b8fd028b584ffca7a7255b8971f254932c9fce upstream.
    
    We can't take an IRQ when we're about to do a trechkpt as our GPR state is set
    to user GPR values.
    
    We've hit this when running some IBM Java stress tests in the lab resulting in
    the following dump:
    
      cpu 0x3f: Vector: 700 (Program Check) at [c000000007eb3d40]
          pc: c000000000050074: restore_gprs+0xc0/0x148
          lr: 00000000b52a8184
          sp: ac57d360
         msr: 8000000100201030
        current = 0xc00000002c500000
        paca    = 0xc000000007dbfc00     softe: 0     irq_happened: 0x00
          pid   = 34535, comm = Pooled Thread #
      R00 = 00000000b52a8184   R16 = 00000000b3e48fda
      R01 = 00000000ac57d360   R17 = 00000000ade79bd8
      R02 = 00000000ac586930   R18 = 000000000fac9bcc
      R03 = 00000000ade60000   R19 = 00000000ac57f930
      R04 = 00000000f6624918   R20 = 00000000ade79be8
      R05 = 00000000f663f238   R21 = 00000000ac218a54
      R06 = 0000000000000002   R22 = 000000000f956280
      R07 = 0000000000000008   R23 = 000000000000007e
      R08 = 000000000000000a   R24 = 000000000000000c
      R09 = 00000000b6e69160   R25 = 00000000b424cf00
      R10 = 0000000000000181   R26 = 00000000f66256d4
      R11 = 000000000f365ec0   R27 = 00000000b6fdcdd0
      R12 = 00000000f66400f0   R28 = 0000000000000001
      R13 = 00000000ada71900   R29 = 00000000ade5a300
      R14 = 00000000ac2185a8   R30 = 00000000f663f238
      R15 = 0000000000000004   R31 = 00000000f6624918
      pc  = c000000000050074 restore_gprs+0xc0/0x148
      cfar= c00000000004fe28 dont_restore_vec+0x1c/0x1a4
      lr  = 00000000b52a8184
      msr = 8000000100201030   cr  = 24804888
      ctr = 0000000000000000   xer = 0000000000000000   trap =  700
    
    This moves tm_recheckpoint to a C function and moves the tm_restore_sprs into
    that function.  It then adds IRQ disabling over the trechkpt critical section.
    It also sets the TEXASR FS in the signals code to ensure this is never set now
    that we explictly write the TM sprs in tm_recheckpoint.
    
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df33265351de2405be44880269c2dbb59dc7df9a
Author: Anton Blanchard <anton@samba.org>
Date:   Thu Mar 6 16:10:11 2014 +1100

    powerpc/compat: 32-bit little endian machine name is ppcle, not ppc
    
    commit 422b9b9684db3c511e65c91842275c43f5910ae9 upstream.
    
    I noticed this when testing setarch. No, we don't magically
    support a big endian userspace on a little endian kernel.
    
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6f694696b0e50fc5a3ea99f42f02fe090cb00da
Author: Tyler Stachecki <tstache1@binghamton.edu>
Date:   Fri Apr 25 16:41:04 2014 -0400

    mpt2sas: Don't disable device twice at suspend.
    
    commit af61e27c3f77c7623b5335590ae24b6a5c323e22 upstream.
    
    On suspend, _scsih_suspend calls mpt2sas_base_free_resources, which
    in turn calls pci_disable_device if the device is enabled prior to
    suspending. However, _scsih_suspend also calls pci_disable_device
    itself.
    
    Thus, in the event that the device is enabled prior to suspending,
    pci_disable_device will be called twice. This patch removes the
    duplicate call to pci_disable_device in _scsi_suspend as it is both
    unnecessary and results in a kernel oops.
    
    Signed-off-by: Tyler Stachecki <tstache1@binghamton.edu>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1849c68ea7b66667820473898f6a8056fb2eb176
Author: Fam Zheng <famz@redhat.com>
Date:   Mon Apr 14 10:16:09 2014 +0800

    virtio-scsi: Skip setting affinity on uninitialized vq
    
    commit 0c8482ac92db5ac15792caf23b7f7df9e4f48ae1 upstream.
    
    virtscsi_init calls virtscsi_remove_vqs on err, even before initializing
    the vqs. The latter calls virtscsi_set_affinity, so let's check the
    pointer there before setting affinity on it.
    
    This fixes a panic when setting device's num_queues=2 on RHEL 6.5:
    
    qemu-system-x86_64 ... \
    -device virtio-scsi-pci,id=scsi0,addr=0x13,...,num_queues=2 \
    -drive file=/stor/vm/dummy.raw,id=drive-scsi-disk,... \
    -device scsi-hd,drive=drive-scsi-disk,...
    
    [    0.354734] scsi0 : Virtio SCSI HBA
    [    0.379504] BUG: unable to handle kernel NULL pointer dereference at 0000000000000020
    [    0.380141] IP: [<ffffffff814741ef>] __virtscsi_set_affinity+0x4f/0x120
    [    0.380141] PGD 0
    [    0.380141] Oops: 0000 [#1] SMP
    [    0.380141] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.14.0+ #5
    [    0.380141] Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2007
    [    0.380141] task: ffff88003c9f0000 ti: ffff88003c9f8000 task.ti: ffff88003c9f8000
    [    0.380141] RIP: 0010:[<ffffffff814741ef>]  [<ffffffff814741ef>] __virtscsi_set_affinity+0x4f/0x120
    [    0.380141] RSP: 0000:ffff88003c9f9c08  EFLAGS: 00010256
    [    0.380141] RAX: 0000000000000000 RBX: ffff88003c3a9d40 RCX: 0000000000001070
    [    0.380141] RDX: 0000000000000002 RSI: 0000000000000000 RDI: 0000000000000000
    [    0.380141] RBP: ffff88003c9f9c28 R08: 00000000000136c0 R09: ffff88003c801c00
    [    0.380141] R10: ffffffff81475229 R11: 0000000000000008 R12: 0000000000000000
    [    0.380141] R13: ffffffff81cc7ca8 R14: ffff88003cac3d40 R15: ffff88003cac37a0
    [    0.380141] FS:  0000000000000000(0000) GS:ffff88003e400000(0000) knlGS:0000000000000000
    [    0.380141] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    [    0.380141] CR2: 0000000000000020 CR3: 0000000001c0e000 CR4: 00000000000006f0
    [    0.380141] Stack:
    [    0.380141]  ffff88003c3a9d40 0000000000000000 ffff88003cac3d80 ffff88003cac3d40
    [    0.380141]  ffff88003c9f9c48 ffffffff814742e8 ffff88003c26d000 ffff88003c26d000
    [    0.380141]  ffff88003c9f9c68 ffffffff81474321 ffff88003c26d000 ffff88003c3a9d40
    [    0.380141] Call Trace:
    [    0.380141]  [<ffffffff814742e8>] virtscsi_set_affinity+0x28/0x40
    [    0.380141]  [<ffffffff81474321>] virtscsi_remove_vqs+0x21/0x50
    [    0.380141]  [<ffffffff81475231>] virtscsi_init+0x91/0x240
    [    0.380141]  [<ffffffff81365290>] ? vp_get+0x50/0x70
    [    0.380141]  [<ffffffff81475544>] virtscsi_probe+0xf4/0x280
    [    0.380141]  [<ffffffff81363ea5>] virtio_dev_probe+0xe5/0x140
    [    0.380141]  [<ffffffff8144c669>] driver_probe_device+0x89/0x230
    [    0.380141]  [<ffffffff8144c8ab>] __driver_attach+0x9b/0xa0
    [    0.380141]  [<ffffffff8144c810>] ? driver_probe_device+0x230/0x230
    [    0.380141]  [<ffffffff8144c810>] ? driver_probe_device+0x230/0x230
    [    0.380141]  [<ffffffff8144ac1c>] bus_for_each_dev+0x8c/0xb0
    [    0.380141]  [<ffffffff8144c499>] driver_attach+0x19/0x20
    [    0.380141]  [<ffffffff8144bf28>] bus_add_driver+0x198/0x220
    [    0.380141]  [<ffffffff8144ce9f>] driver_register+0x5f/0xf0
    [    0.380141]  [<ffffffff81d27c91>] ? spi_transport_init+0x79/0x79
    [    0.380141]  [<ffffffff8136403b>] register_virtio_driver+0x1b/0x30
    [    0.380141]  [<ffffffff81d27d19>] init+0x88/0xd6
    [    0.380141]  [<ffffffff81d27c18>] ? scsi_init_procfs+0x5b/0x5b
    [    0.380141]  [<ffffffff81ce88a7>] do_one_initcall+0x7f/0x10a
    [    0.380141]  [<ffffffff81ce8aa7>] kernel_init_freeable+0x14a/0x1de
    [    0.380141]  [<ffffffff81ce8b3b>] ? kernel_init_freeable+0x1de/0x1de
    [    0.380141]  [<ffffffff817dec20>] ? rest_init+0x80/0x80
    [    0.380141]  [<ffffffff817dec29>] kernel_init+0x9/0xf0
    [    0.380141]  [<ffffffff817e68fc>] ret_from_fork+0x7c/0xb0
    [    0.380141]  [<ffffffff817dec20>] ? rest_init+0x80/0x80
    [    0.380141] RIP  [<ffffffff814741ef>] __virtscsi_set_affinity+0x4f/0x120
    [    0.380141]  RSP <ffff88003c9f9c08>
    [    0.380141] CR2: 0000000000000020
    [    0.380141] ---[ end trace 8074b70c3d5e1d73 ]---
    [    0.475018] Kernel panic - not syncing: Attempted to kill init! exitcode=0x00000009
    [    0.475018]
    [    0.475068] Kernel Offset: 0x0 from 0xffffffff81000000 (relocation range: 0xffffffff80000000-0xffffffff9fffffff)
    [    0.475068] ---[ end Kernel panic - not syncing: Attempted to kill init! exitcode=0x00000009
    
    [jejb: checkpatch fixes]
    Signed-off-by: Fam Zheng <famz@redhat.com>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: James Bottomley <JBottomley@Parallels.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d362d505daaa92c011d7dbd3e51c59fb3196ea87
Author: Joel Stanley <joel@jms.id.au>
Date:   Thu Feb 13 15:08:53 2014 +1030

    tools/virtio: add a missing )
    
    commit be40d5ccab34d579512d932fc1c6cfaffe9d1551 upstream.
    
    Fixes the following build failure:
    
     cc -g -O2 -Wall -I. -I ../../usr/include/ -Wno-pointer-sign
       -fno-strict-overflow -fno-strict-aliasing -fno-common -MMD
       -U_FORTIFY_SOURCE   -c -o virtio_test.o virtio_test.c
     virtio_test.c: In function ‘run_test’:
     virtio_test.c:176:7: error: expected ‘)’ before ‘r’
             r = -1;
             ^
    
    Fixes: 53c18c9906441 (virtio_test: verify if virtqueue_kick() succeeded)
    Cc: Heinz Graalfs <graalfs@linux.vnet.ibm.com>
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f52e31dc5f5f61db5bd08576b8189ada2a8c9b82
Author: Rusty Russell <rusty@rustcorp.com.au>
Date:   Thu Mar 13 11:23:38 2014 +1030

    virtio_balloon: don't softlockup on huge balloon changes.
    
    commit 1f74ef0f2d7d692fcd615621e0e734c3e7771413 upstream.
    
    When adding or removing 100G from a balloon:
    
        BUG: soft lockup - CPU#0 stuck for 22s! [vballoon:367]
    
    We have a wait_event_interruptible(), but the condition is always true
    (more ballooning to do) so we don't ever sleep.  We also have a
    wait_event() for the host to ack, but that is also always true as QEMU
    is synchronous for balloon operations.
    
    Reported-by: Gopesh Kumar Chaudhary <gopchaud@in.ibm.com>
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 771004298d9a73ff1bca0b4ff5168c74d3ff7af0
Author: Huacai Chen <chenhc@lemote.com>
Date:   Sat Mar 22 17:21:44 2014 +0800

    MIPS: Hibernate: Flush TLB entries in swsusp_arch_resume()
    
    commit c14af233fbe279d0e561ecf84f1208b1bae087ef upstream.
    
    The original MIPS hibernate code flushes cache and TLB entries in
    swsusp_arch_resume(). But they are removed in Commit 44eeab67416711
    (MIPS: Hibernation: Remove SMP TLB and cacheflushing code.). A cross-
    CPU flush is surely unnecessary because all but the local CPU have
    already been disabled. But a local flush (at least the TLB flush) is
    needed. When we do hibernation on Loongson-3 with an E1000E NIC, it is
    very easy to produce a kernel panic (kernel page fault, or unaligned
    access). The root cause is E1000E driver use vzalloc_node() to allocate
    pages, the stale TLB entries of the booting kernel will be misused by
    the resumed target kernel.
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Cc: John Crispin <john@phrozen.org>
    Cc: Steven J. Hill <Steven.Hill@imgtec.com>
    Cc: Aurelien Jarno <aurelien@aurel32.net>
    Cc: linux-mips@linux-mips.org
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Patchwork: https://patchwork.linux-mips.org/patch/6643/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b12b053e0e4123df93f4b9a408d7afc64c1485f
Author: Anton Blanchard <anton@samba.org>
Date:   Tue Mar 25 10:47:01 2014 +1100

    KVM: PPC: Book3S HV: Fix KVM hang with CONFIG_KVM_XICS=n
    
    commit 7505258c5fcb0a1cc3c76a47b4cf9506d21d10e6 upstream.
    
    I noticed KVM is broken when KVM in-kernel XICS emulation
    (CONFIG_KVM_XICS) is disabled.
    
    The problem was introduced in 48eaef05 (KVM: PPC: Book3S HV: use
    xics_wake_cpu only when defined). It used CONFIG_KVM_XICS to wrap
    xics_wake_cpu, where CONFIG_PPC_ICP_NATIVE should have been
    used.
    
    Signed-off-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Acked-by: Scott Wood <scottwood@freescale.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2981534733f5deaa4ed86bc7f91f3bd18152abe0
Author: James Hogan <jhogan@kernel.org>
Date:   Fri Mar 14 13:06:07 2014 +0000

    MIPS: KVM: Pass reserved instruction exceptions to guest
    
    commit 15505679362270d02c449626385cb74af8905514 upstream.
    
    Previously a reserved instruction exception while in guest code would
    cause a KVM internal error if kvm_mips_handle_ri() didn't recognise the
    instruction (including a RDHWR from an unrecognised hardware register).
    
    However the guest OS should really have the opportunity to catch the
    exception so that it can take the appropriate actions such as sending a
    SIGILL to the guest user process or emulating the instruction itself.
    
    Therefore in these cases emulate a guest RI exception and only return
    EMULATE_FAIL if that fails, being careful to revert the PC first in case
    the exception occurred in a branch delay slot in which case the PC will
    already point to the branch target.
    
    Also turn the printk messages relating to these cases into kvm_debug
    messages so that they aren't usually visible.
    
    This allows crashme to run in the guest without killing the entire VM.
    
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Gleb Natapov <gleb@kernel.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Sanjay Lal <sanjayl@kymasys.com>
    Cc: linux-mips@linux-mips.org
    Cc: kvm@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8944acc97ceebf902e5b26b900aefef987ab4be
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Mar 28 20:41:50 2014 +0100

    KVM: ioapic: fix assignment of ioapic->rtc_status.pending_eoi (CVE-2014-0155)
    
    commit 5678de3f15010b9022ee45673f33bcfc71d47b60 upstream.
    
    QE reported that they got the BUG_ON in ioapic_service to trigger.
    I cannot reproduce it, but there are two reasons why this could happen.
    
    The less likely but also easiest one, is when kvm_irq_delivery_to_apic
    does not deliver to any APIC and returns -1.
    
    Because irqe.shorthand == 0, the kvm_for_each_vcpu loop in that
    function is never reached.  However, you can target the similar loop in
    kvm_irq_delivery_to_apic_fast; just program a zero logical destination
    address into the IOAPIC, or an out-of-range physical destination address.
    
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e66614b8c36b8d96bf7b271a3eacada1e4c589d
Author: Oleg Nesterov <oleg@redhat.com>
Date:   Mon Apr 21 15:26:01 2014 +0200

    KVM: async_pf: mm->mm_users can not pin apf->mm
    
    commit 41c22f626254b9dc0376928cae009e73d1b6a49a upstream.
    
    get_user_pages(mm) is simply wrong if mm->mm_users == 0 and exit_mmap/etc
    was already called (or is in progress), mm->mm_count can only pin mm->pgd
    and mm_struct itself.
    
    Change kvm_setup_async_pf/async_pf_execute to inc/dec mm->mm_users.
    
    kvm_create_vm/kvm_destroy_vm play with ->mm_count too but this case looks
    fine at first glance, it seems that this ->mm is only used to verify that
    current->mm == kvm->mm.
    
    Signed-off-by: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8c827bae71da914b094756f93d3b6d30ce85a89
Author: Mark Salter <msalter@redhat.com>
Date:   Fri Mar 28 14:25:19 2014 +0000

    arm: KVM: fix possible misalignment of PGDs and bounce page
    
    commit 5d4e08c45a6cf8f1ab3c7fa375007635ac569165 upstream.
    
    The kvm/mmu code shared by arm and arm64 uses kalloc() to allocate
    a bounce page (if hypervisor init code crosses page boundary) and
    hypervisor PGDs. The problem is that kalloc() does not guarantee
    the proper alignment. In the case of the bounce page, the page sized
    buffer allocated may also cross a page boundary negating the purpose
    and leading to a hang during kvm initialization. Likewise the PGDs
    allocated may not meet the minimum alignment requirements of the
    underlying MMU. This patch uses __get_free_page() to guarantee the
    worst case alignment needs of the bounce page and PGDs on both arm
    and arm64.
    
    Signed-off-by: Mark Salter <msalter@redhat.com>
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2264ca6c71682e1c0d72a9f21e178204b1e621e4
Author: Haibin Wang <wanghaibin.wang@huawei.com>
Date:   Thu Apr 10 13:14:32 2014 +0100

    KVM: ARM: vgic: Fix sgi dispatch problem
    
    commit 91021a6c8ffdc55804dab5acdfc7de4f278b9ac3 upstream.
    
    When dispatch SGI(mode == 0), that is the vcpu of VM should send
    sgi to the cpu which the target_cpus list.
    So, there must add the "break" to branch of case 0.
    
    Signed-off-by: Haibin Wang <wanghaibin.wang@huawei.com>
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b487c62505afbd87654773562fbf2e89bcd52147
Author: Matthew Daley <mattd@bugfuzz.com>
Date:   Mon Apr 28 19:05:21 2014 +1200

    floppy: don't write kernel-only members to FDRAWCMD ioctl output
    
    commit 2145e15e0557a01b9195d1c7199a1b92cb9be81f upstream.
    
    Do not leak kernel-only floppy_raw_cmd structure members to userspace.
    This includes the linked-list pointer and the pointer to the allocated
    DMA space.
    
    Signed-off-by: Matthew Daley <mattd@bugfuzz.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb9a2011887416ffdc576d10711dc196343aab69
Author: Matthew Daley <mattd@bugfuzz.com>
Date:   Mon Apr 28 19:05:20 2014 +1200

    floppy: ignore kernel-only members in FDRAWCMD ioctl input
    
    commit ef87dbe7614341c2e7bfe8d32fcb7028cc97442c upstream.
    
    Always clear out these floppy_raw_cmd struct members after copying the
    entire structure from userspace so that the in-kernel version is always
    valid and never left in an interdeterminate state.
    
    Signed-off-by: Matthew Daley <mattd@bugfuzz.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d194d6e0d832e622d87b8dab4e2122c555a82e9
Author: Peter Hurley <peter@hurleysoftware.com>
Date:   Sat May 3 14:04:59 2014 +0200

    n_tty: Fix n_tty_write crash when echoing in raw mode
    
    commit 4291086b1f081b869c6d79e5b7441633dc3ace00 upstream.
    
    The tty atomic_write_lock does not provide an exclusion guarantee for
    the tty driver if the termios settings are LECHO & !OPOST.  And since
    it is unexpected and not allowed to call TTY buffer helpers like
    tty_insert_flip_string concurrently, this may lead to crashes when
    concurrect writers call pty_write. In that case the following two
    writers:
    * the ECHOing from a workqueue and
    * pty_write from the process
    race and can overflow the corresponding TTY buffer like follows.
    
    If we look into tty_insert_flip_string_fixed_flag, there is:
      int space = __tty_buffer_request_room(port, goal, flags);
      struct tty_buffer *tb = port->buf.tail;
      ...
      memcpy(char_buf_ptr(tb, tb->used), chars, space);
      ...
      tb->used += space;
    
    so the race of the two can result in something like this:
                  A                                B
    __tty_buffer_request_room
                                      __tty_buffer_request_room
    memcpy(buf(tb->used), ...)
    tb->used += space;
                                      memcpy(buf(tb->used), ...) ->BOOM
    
    B's memcpy is past the tty_buffer due to the previous A's tb->used
    increment.
    
    Since the N_TTY line discipline input processing can output
    concurrently with a tty write, obtain the N_TTY ldisc output_lock to
    serialize echo output with normal tty writes.  This ensures the tty
    buffer helper tty_insert_flip_string is not called concurrently and
    everything is fine.
    
    Note that this is nicely reproducible by an ordinary user using
    forkpty and some setup around that (raw termios + ECHO). And it is
    present in kernels at least after commit
    d945cb9cce20ac7143c2de8d88b187f62db99bdc (pty: Rework the pty layer to
    use the normal buffering logic) in 2.6.31-rc3.
    
    js: add more info to the commit log
    js: switch to bool
    js: lock unconditionally
    js: lock only the tty->ops->write call
    
    References: CVE-2014-0196
    Reported-and-tested-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Peter Hurley <peter@hurleysoftware.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Alan Cox <alan@lxorguk.ukuu.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61f9174a01323ba12793e969d48105da8da41a94
Author: Peter Hurley <peter@hurleysoftware.com>
Date:   Fri May 2 10:56:12 2014 -0400

    tty: Fix lockless tty buffer race
    
    commit 62a0d8d7c2b29f92850e4ee3c38e5dfd936e92b2 upstream.
    
    Commit 6a20dbd6caa2358716136144bf524331d70b1e03,
    "tty: Fix race condition between __tty_buffer_request_room and flush_to_ldisc"
    correctly identifies an unsafe race condition between
    __tty_buffer_request_room() and flush_to_ldisc(), where the consumer
    flush_to_ldisc() prematurely advances the head before consuming the
    last of the data committed. For example:
    
               CPU 0                     |            CPU 1
    __tty_buffer_request_room            | flush_to_ldisc
      ...                                |   ...
                                         |   count = head->commit - head->read
      n = tty_buffer_alloc()             |
      b->commit = b->used                |
      b->next = n                        |
                                         |   if (!count)                /* T */
                                         |     if (head->next == NULL)  /* F */
                                         |     buf->head = head->next
    
    In this case, buf->head has been advanced but head->commit may have
    been updated with a new value.
    
    Instead of reintroducing an unnecessary lock, fix the race locklessly.
    Read the commit-next pair in the reverse order of writing, which guarantees
    the commit value read is the latest value written if the head is
    advancing.
    
    Reported-by: Manfred Schlaegl <manfred.schlaegl@gmx.at>
    Signed-off-by: Peter Hurley <peter@hurleysoftware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a68d0fc73ae4e8829224c52af31f182ba57657e
Author: Michael Welling <mwelling@ieee.org>
Date:   Fri Apr 25 19:27:48 2014 -0500

    tty: serial: 8250_core.c Bug fix for Exar chips.
    
    commit b790f210fe8423eff881b2a8a93ba5dbc45534d0 upstream.
    
    The sleep function was updated to put the serial port to sleep only when necessary.
    This appears to resolve the errant behavior of the driver as described in
    Kernel Bug 61961 – "My Exar Corp. XR17C/D152 Dual PCI UART modem does not
    work with 3.8.0".
    
    Signed-off-by: Michael Welling <mwelling@ieee.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7f46ff2cf7ef0b710166d43738859d1d3cedf22
Author: Tomoki Sekiyama <tomoki.sekiyama@hds.com>
Date:   Fri May 2 18:58:24 2014 -0400

    drivers/tty/hvc: don't free hvc_console_setup after init
    
    commit 501fed45b7e8836ee9373f4d31e2d85e3db6103a upstream.
    
    When 'console=hvc0' is specified to the kernel parameter in x86 KVM guest,
    hvc console is setup within a kthread. However, that will cause SEGV
    and the boot will fail when the driver is builtin to the kernel,
    because currently hvc_console_setup() is annotated with '__init'. This
    patch removes '__init' to boot the guest successfully with 'console=hvc0'.
    
    Signed-off-by: Tomoki Sekiyama <tomoki.sekiyama@hds.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
