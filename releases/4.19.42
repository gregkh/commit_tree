commit 9c2556f428cfdbf9a18f4452c510aba93d224c8b
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri May 10 17:54:12 2019 +0200

    Linux 4.19.42

commit 9ccdbde1850c8b9e19ebf3b28c63d4902f90e470
Author: Will Deacon <will@kernel.org>
Date:   Mon Apr 8 14:23:17 2019 +0100

    arm64: futex: Bound number of LDXR/STXR loops in FUTEX_WAKE_OP
    
    commit 03110a5cb2161690ae5ac04994d47ed0cd6cef75 upstream.
    
    Our futex implementation makes use of LDXR/STXR loops to perform atomic
    updates to user memory from atomic context. This can lead to latency
    problems if we end up spinning around the LL/SC sequence at the expense
    of doing something useful.
    
    Rework our futex atomic operations so that we return -EAGAIN if we fail
    to update the futex word after 128 attempts. The core futex code will
    reschedule if necessary and we'll try again later.
    
    Cc: <stable@kernel.org>
    Fixes: 6170a97460db ("arm64: Atomic operations")
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f4ef8fb1dae3cf2c1017fb46b9d14b1de2e501a
Author: Will Deacon <will@kernel.org>
Date:   Thu Feb 28 11:58:08 2019 +0000

    locking/futex: Allow low-level atomic operations to return -EAGAIN
    
    commit 6b4f4bc9cb22875f97023984a625386f0c7cc1c0 upstream.
    
    Some futex() operations, including FUTEX_WAKE_OP, require the kernel to
    perform an atomic read-modify-write of the futex word via the userspace
    mapping. These operations are implemented by each architecture in
    arch_futex_atomic_op_inuser() and futex_atomic_cmpxchg_inatomic(), which
    are called in atomic context with the relevant hash bucket locks held.
    
    Although these routines may return -EFAULT in response to a page fault
    generated when accessing userspace, they are expected to succeed (i.e.
    return 0) in all other cases. This poses a problem for architectures
    that do not provide bounded forward progress guarantees or fairness of
    contended atomic operations and can lead to starvation in some cases.
    
    In these problematic scenarios, we must return back to the core futex
    code so that we can drop the hash bucket locks and reschedule if
    necessary, much like we do in the case of a page fault.
    
    Allow architectures to return -EAGAIN from their implementations of
    arch_futex_atomic_op_inuser() and futex_atomic_cmpxchg_inatomic(), which
    will cause the core futex code to reschedule if necessary and return
    back to the architecture code later on.
    
    Cc: <stable@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fee39874d1ff57a280c420f69195969594aabf5
Author: Ross Zwisler <zwisler@chromium.org>
Date:   Mon Apr 29 12:25:17 2019 -0600

    ASoC: Intel: avoid Oops if DMA setup fails
    
    commit 0efa3334d65b7f421ba12382dfa58f6ff5bf83c4 upstream.
    
    Currently in sst_dsp_new() if we get an error return from sst_dma_new()
    we just print an error message and then still complete the function
    successfully.  This means that we are trying to run without sst->dma
    properly set up, which will result in NULL pointer dereference when
    sst->dma is later used.  This was happening for me in
    sst_dsp_dma_get_channel():
    
            struct sst_dma *dma = dsp->dma;
            ...
            dma->ch = dma_request_channel(mask, dma_chan_filter, dsp);
    
    This resulted in:
    
       BUG: unable to handle kernel NULL pointer dereference at 0000000000000018
       IP: sst_dsp_dma_get_channel+0x4f/0x125 [snd_soc_sst_firmware]
    
    Fix this by adding proper error handling for the case where we fail to
    set up DMA.
    
    This change only affects Haswell and Broadwell systems.  Baytrail
    systems explicilty opt-out of DMA via sst->pdata->resindex_dma_base
    being set to -1.
    
    Signed-off-by: Ross Zwisler <zwisler@google.com>
    Cc: stable@vger.kernel.org
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3b3955f02506bd9b2fb9b135b7c82fa07d9a5de
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue Apr 30 12:21:45 2019 +0200

    UAS: fix alignment of scatter/gather segments
    
    commit 3ae62a42090f1ed48e2313ed256a1182a85fb575 upstream.
    
    This is the UAS version of
    
    747668dbc061b3e62bc1982767a3a1f9815fcf0e
    usb-storage: Set virt_boundary_mask to avoid SG overflows
    
    We are not as likely to be vulnerable as storage, as it is unlikelier
    that UAS is run over a controller without native support for SG,
    but the issue exists.
    The issue has been existing since the inception of the driver.
    
    Fixes: 115bb1ffa54c ("USB: Add UAS driver")
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38f092c41cebaff589e88cc22686b289a6840559
Author: Marcel Holtmann <marcel@holtmann.org>
Date:   Wed Apr 24 22:19:17 2019 +0200

    Bluetooth: Align minimum encryption key size for LE and BR/EDR connections
    
    commit d5bb334a8e171b262e48f378bd2096c0ea458265 upstream.
    
    The minimum encryption key size for LE connections is 56 bits and to
    align LE with BR/EDR, enforce 56 bits of minimum encryption key size for
    BR/EDR connections as well.
    
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Johan Hedberg <johan.hedberg@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6d1f9b4b2cb768e29f5d44af143f25ad89062b1
Author: Young Xiao <YangX92@hotmail.com>
Date:   Fri Apr 12 15:24:30 2019 +0800

    Bluetooth: hidp: fix buffer overflow
    
    commit a1616a5ac99ede5d605047a9012481ce7ff18b16 upstream.
    
    Struct ca is copied from userspace. It is not checked whether the "name"
    field is NULL terminated, which allows local users to obtain potentially
    sensitive information from kernel stack memory, via a HIDPCONNADD command.
    
    This vulnerability is similar to CVE-2011-1079.
    
    Signed-off-by: Young Xiao <YangX92@hotmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de7fe08b92dcb0f23bf48f1e287fc7840e5d0992
Author: Quinn Tran <qtran@marvell.com>
Date:   Tue Apr 23 14:52:35 2019 -0700

    scsi: qla2xxx: Fix device staying in blocked state
    
    commit 2137490f2147a8d0799b72b9a1023efb012d40c7 upstream.
    
    This patch fixes issue reported by some of the customers, who discovered
    that after cable pull scenario the devices disappear and path seems to
    remain in blocked state. Once the device reappears, driver does not seem to
    update path to online. This issue appears because of the defer flag
    creating race condition where the same session reappears.  This patch fixes
    this issue by indicating SCSI-ML of device lost when
    qlt_free_session_done() is called from qlt_unreg_sess().
    
    Fixes: 41dc529a4602a ("qla2xxx: Improve RSCN handling in driver")
    Signed-off-by: Quinn Tran <qtran@marvell.com>
    Cc: stable@vger.kernel.org #4.19
    Signed-off-by: Himanshu Madhani <hmadhani@marvell.com>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef7014d76361783d9de9194694f377f38112fbb3
Author: Andrew Vasquez <andrewv@marvell.com>
Date:   Tue Apr 2 14:24:25 2019 -0700

    scsi: qla2xxx: Fix incorrect region-size setting in optrom SYSFS routines
    
    commit 5cbdae10bf11f96e30b4d14de7b08c8b490e903c upstream.
    
    Commit e6f77540c067 ("scsi: qla2xxx: Fix an integer overflow in sysfs
    code") incorrectly set 'optrom_region_size' to 'start+size', which can
    overflow option-rom boundaries when 'start' is non-zero.  Continue setting
    optrom_region_size to the proper adjusted value of 'size'.
    
    Fixes: e6f77540c067 ("scsi: qla2xxx: Fix an integer overflow in sysfs code")
    Cc: stable@vger.kernel.org
    Signed-off-by: Andrew Vasquez <andrewv@marvell.com>
    Signed-off-by: Himanshu Madhani <hmadhani@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a793ca173571355cebb0a5467ae410dba2fdf48
Author: Silvio Cesare <silvio.cesare@gmail.com>
Date:   Thu Mar 21 09:44:32 2019 -0700

    scsi: lpfc: change snprintf to scnprintf for possible overflow
    
    commit e7f7b6f38a44697428f5a2e7c606de028df2b0e3 upstream.
    
    Change snprintf to scnprintf. There are generally two cases where using
    snprintf causes problems.
    
    1) Uses of size += snprintf(buf, SIZE - size, fmt, ...)
    In this case, if snprintf would have written more characters than what the
    buffer size (SIZE) is, then size will end up larger than SIZE. In later
    uses of snprintf, SIZE - size will result in a negative number, leading
    to problems. Note that size might already be too large by using
    size = snprintf before the code reaches a case of size += snprintf.
    
    2) If size is ultimately used as a length parameter for a copy back to user
    space, then it will potentially allow for a buffer overflow and information
    disclosure when size is greater than SIZE. When the size is used to index
    the buffer directly, we can have memory corruption. This also means when
    size = snprintf... is used, it may also cause problems since size may become
    large.  Copying to userspace is mitigated by the HARDENED_USERCOPY kernel
    configuration.
    
    The solution to these issues is to use scnprintf which returns the number of
    characters actually written to the buffer, so the size variable will never
    exceed SIZE.
    
    Signed-off-by: Silvio Cesare <silvio.cesare@gmail.com>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Cc: Dick Kennedy <dick.kennedy@broadcom.com>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Greg KH <greg@kroah.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b330b3efa916d5a47519706108c6e94bf7fb7f9
Author: Samuel Holland <samuel@sholland.org>
Date:   Tue Apr 30 09:59:37 2019 -0500

    soc: sunxi: Fix missing dependency on REGMAP_MMIO
    
    commit a84014e1db35d8e7af09878d0b4bf30804fb17d5 upstream.
    
    When enabling ARCH_SUNXI from allnoconfig, SUNXI_SRAM is enabled, but
    not REGMAP_MMIO, so the kernel fails to link with an undefined reference
    to __devm_regmap_init_mmio_clk. Select REGMAP_MMIO, as suggested in
    drivers/base/regmap/Kconfig.
    
    This creates the following dependency loop:
    
      drivers/of/Kconfig:68:                symbol OF_IRQ depends on IRQ_DOMAIN
      kernel/irq/Kconfig:63:                symbol IRQ_DOMAIN is selected by REGMAP
      drivers/base/regmap/Kconfig:7:        symbol REGMAP default is visible depending on REGMAP_MMIO
      drivers/base/regmap/Kconfig:39:       symbol REGMAP_MMIO is selected by SUNXI_SRAM
      drivers/soc/sunxi/Kconfig:4:          symbol SUNXI_SRAM is selected by USB_MUSB_SUNXI
      drivers/usb/musb/Kconfig:63:          symbol USB_MUSB_SUNXI depends on GENERIC_PHY
      drivers/phy/Kconfig:7:                symbol GENERIC_PHY is selected by PHY_BCM_NS_USB3
      drivers/phy/broadcom/Kconfig:29:      symbol PHY_BCM_NS_USB3 depends on MDIO_BUS
      drivers/net/phy/Kconfig:12:           symbol MDIO_BUS default is visible depending on PHYLIB
      drivers/net/phy/Kconfig:181:          symbol PHYLIB is selected by ARC_EMAC_CORE
      drivers/net/ethernet/arc/Kconfig:18:  symbol ARC_EMAC_CORE is selected by ARC_EMAC
      drivers/net/ethernet/arc/Kconfig:24:  symbol ARC_EMAC depends on OF_IRQ
    
    To fix the circular dependency, make USB_MUSB_SUNXI select GENERIC_PHY
    instead of depending on it. This matches the use of GENERIC_PHY by all
    but two other drivers.
    
    Cc: <stable@vger.kernel.org> # 4.19
    Fixes: 5828729bebbb ("soc: sunxi: export a regmap for EMAC clock reg on A64")
    Signed-off-by: Samuel Holland <samuel@sholland.org>
    Acked-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Signed-off-by: Bin Liu <b-liu@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 557be5771563b6ea35b8553b236d72866edfa3ee
Author: Gregory CLEMENT <gregory.clement@bootlin.com>
Date:   Fri Mar 8 17:47:10 2019 +0100

    cpufreq: armada-37xx: fix frequency calculation for opp
    
    commit 8db82563451f976597ab7b282ec655e4390a4088 upstream.
    
    The frequency calculation was based on the current(max) frequency of the
    CPU. However for low frequency, the value used was already the parent
    frequency divided by a factor of 2.
    
    Instead of using this frequency, this fix directly get the frequency from
    the parent clock.
    
    Fixes: 92ce45fb875d ("cpufreq: Add DVFS support for Armada 37xx")
    Cc: <stable@vger.kernel.org>
    Reported-by: Christian Neubert <christian.neubert.86@gmail.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b7daf1ff8bf91d65cae1e4764b5500cae2f31ad
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Wed Apr 17 10:35:36 2019 +0300

    intel_th: pci: Add Comet Lake support
    
    commit e60e9a4b231a20a199d7a61caadc48693c30d695 upstream.
    
    This adds support for Intel TH on Comet Lake.
    
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b2ba94386eb43f10871a2ee50eb76358bdaa0bf
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Mon Apr 15 13:19:25 2019 -0400

    usb-storage: Set virt_boundary_mask to avoid SG overflows
    
    commit 747668dbc061b3e62bc1982767a3a1f9815fcf0e upstream.
    
    The USB subsystem has always had an unusual requirement for its
    scatter-gather transfers: Each element in the scatterlist (except the
    last one) must have a length divisible by the bulk maxpacket size.
    This is a particular issue for USB mass storage, which uses SG lists
    created by the block layer rather than setting up its own.
    
    So far we have scraped by okay because most devices have a logical
    block size of 512 bytes or larger, and the bulk maxpacket sizes for
    USB 2 and below are all <= 512.  However, USB 3 has a bulk maxpacket
    size of 1024.  Since the xhci-hcd driver includes native SG support,
    this hasn't mattered much.  But now people are trying to use USB-3
    mass storage devices with USBIP, and the vhci-hcd driver currently
    does not have full SG support.
    
    The result is an overflow error, when the driver attempts to implement
    an SG transfer of 63 512-byte blocks as a single
    3584-byte (7 blocks) transfer followed by seven 4096-byte (8 blocks)
    transfers.  The device instead sends 31 1024-byte packets followed by
    a 512-byte packet, and this overruns the first SG buffer.
    
    Ideally this would be fixed by adding better SG support to vhci-hcd.
    But for now it appears we can work around the problem by
    asking the block layer to respect the maxpacket limitation, through
    the use of the virt_boundary_mask.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Reported-by: Seth Bollinger <Seth.Bollinger@digi.com>
    Tested-by: Seth Bollinger <Seth.Bollinger@digi.com>
    CC: Ming Lei <tom.leiming@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18e6f3027642fc6a33aa5af212c72c519745687c
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Apr 25 18:05:39 2019 +0200

    USB: cdc-acm: fix unthrottle races
    
    commit 764478f41130f1b8d8057575b89e69980a0f600d upstream.
    
    Fix two long-standing bugs which could potentially lead to memory
    corruption or leave the port throttled until it is reopened (on weakly
    ordered systems), respectively, when read-URB completion races with
    unthrottle().
    
    First, the URB must not be marked as free before processing is complete
    to prevent it from being submitted by unthrottle() on another CPU.
    
            CPU 1                           CPU 2
            ================                ================
            complete()                      unthrottle()
              process_urb();
              smp_mb__before_atomic();
              set_bit(i, free);               if (test_and_clear_bit(i, free))
                                                      submit_urb();
    
    Second, the URB must be marked as free before checking the throttled
    flag to prevent unthrottle() on another CPU from failing to observe that
    the URB needs to be submitted if complete() sees that the throttled flag
    is set.
    
            CPU 1                           CPU 2
            ================                ================
            complete()                      unthrottle()
              set_bit(i, free);               throttled = 0;
              smp_mb__after_atomic();         smp_mb();
              if (throttled)                  if (test_and_clear_bit(i, free))
                      return;                         submit_urb();
    
    Note that test_and_clear_bit() only implies barriers when the test is
    successful. To handle the case where the URB is still in use an explicit
    barrier needs to be added to unthrottle() for the second race condition.
    
    Also note that the first race was fixed by 36e59e0d70d6 ("cdc-acm: fix
    race between callback and unthrottle") back in 2015, but the bug was
    reintroduced a year later.
    
    Fixes: 1aba579f3cf5 ("cdc-acm: handle read pipe errors")
    Fixes: 088c64f81284 ("USB: cdc-acm: re-write read processing")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bce2b9d63786acb560adb6d1938d3164c1e4ea64
Author: Ji-Ze Hong (Peter Hong) <hpeter@gmail.com>
Date:   Tue Apr 30 09:22:29 2019 +0800

    USB: serial: f81232: fix interrupt worker not stop
    
    commit 804dbee1e49774918339c1e5a87400988c0819e8 upstream.
    
    The F81232 will use interrupt worker to handle MSR change.
    This patch will fix the issue that interrupt work should stop
    in close() and suspend().
    
    This also fixes line-status events being disabled after a suspend cycle
    until the port is re-opened.
    
    Signed-off-by: Ji-Ze Hong (Peter Hong) <hpeter+linux_kernel@gmail.com>
    [ johan: amend commit message ]
    Fixes: 87fe5adcd8de ("USB: f81232: implement read IIR/MSR with endpoint")
    Cc: stable <stable@vger.kernel.org>     # 4.1
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit caa5680dc05a20c6e4419c6d4c2f863ec85f43aa
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Thu Apr 25 13:55:23 2019 -0700

    usb: dwc3: Fix default lpm_nyet_threshold value
    
    commit 8d791929b2fbdf7734c1596d808e55cb457f4562 upstream.
    
    The max possible value for DCTL.LPM_NYET_THRES is 15 and not 255. Change
    the default value to 15.
    
    Cc: stable@vger.kernel.org
    Fixes: 80caf7d21adc ("usb: dwc3: add lpm erratum support")
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33f2aa87c294cdc704fa7fc578ebbca7868d393c
Author: Prasad Sodagudi <psodagud@codeaurora.org>
Date:   Sun Mar 24 07:57:04 2019 -0700

    genirq: Prevent use-after-free and work list corruption
    
    [ Upstream commit 59c39840f5abf4a71e1810a8da71aaccd6c17d26 ]
    
    When irq_set_affinity_notifier() replaces the notifier, then the
    reference count on the old notifier is dropped which causes it to be
    freed. But nothing ensures that the old notifier is not longer queued
    in the work list. If it is queued this results in a use after free and
    possibly in work list corruption.
    
    Ensure that the work is canceled before the reference is dropped.
    
    Signed-off-by: Prasad Sodagudi <psodagud@codeaurora.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: marc.zyngier@arm.com
    Link: https://lkml.kernel.org/r/1553439424-6529-1-git-send-email-psodagud@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29184cbaaec0f3fe37bfab07a9d141935f98ec8d
Author: Joerg Roedel <jroedel@suse.de>
Date:   Fri Apr 12 12:50:31 2019 +0200

    iommu/amd: Set exclusion range correctly
    
    [ Upstream commit 3c677d206210f53a4be972211066c0f1cd47fe12 ]
    
    The exlcusion range limit register needs to contain the
    base-address of the last page that is part of the range, as
    bits 0-11 of this register are treated as 0xfff by the
    hardware for comparisons.
    
    So correctly set the exclusion range in the hardware to the
    last page which is _in_ the range.
    
    Fixes: b2026aa2dce44 ('x86, AMD IOMMU: add functions for programming IOMMU MMIO space')
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42638d6aae0624684ebefe85d55eca0fc4e3c5c0
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Apr 4 15:03:00 2019 +0200

    perf/core: Fix perf_event_disable_inatomic() race
    
    [ Upstream commit 1d54ad944074010609562da5c89e4f5df2f4e5db ]
    
    Thomas-Mich Richter reported he triggered a WARN()ing from event_function_local()
    on his s390. The problem boils down to:
    
            CPU-A                           CPU-B
    
            perf_event_overflow()
              perf_event_disable_inatomic()
                @pending_disable = 1
                irq_work_queue();
    
            sched-out
              event_sched_out()
                @pending_disable = 0
    
                                            sched-in
                                            perf_event_overflow()
                                              perf_event_disable_inatomic()
                                                @pending_disable = 1;
                                                irq_work_queue(); // FAILS
    
            irq_work_run()
              perf_pending_event()
                if (@pending_disable)
                  perf_event_disable_local(); // WHOOPS
    
    The problem exists in generic, but s390 is particularly sensitive
    because it doesn't implement arch_irq_work_raise(), nor does it call
    irq_work_run() from it's PMU interrupt handler (nor would that be
    sufficient in this case, because s390 also generates
    perf_event_overflow() from pmu::stop). Add to that the fact that s390
    is a virtual architecture and (virtual) CPU-A can stall long enough
    for the above race to happen, even if it would self-IPI.
    
    Adding a irq_work_sync() to event_sched_in() would work for all hardare
    PMUs that properly use irq_work_run() but fails for software PMUs.
    
    Instead encode the CPU number in @pending_disable, such that we can
    tell which CPU requested the disable. This then allows us to detect
    the above scenario and even redirect the IPI to make up for the failed
    queue.
    
    Reported-by: Thomas-Mich Richter <tmricht@linux.ibm.com>
    Tested-by: Thomas Richter <tmricht@linux.ibm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Hendrik Brueckner <brueckner@linux.ibm.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1189d68be7dececdcf8310cc037b60f7a28d2cd
Author: Stephen Boyd <sboyd@kernel.org>
Date:   Thu Apr 11 10:22:43 2019 -0700

    platform/x86: pmc_atom: Drop __initconst on dmi table
    
    [ Upstream commit b995dcca7cf12f208cfd95fd9d5768dca7cccec7 ]
    
    It's used by probe and that isn't an init function. Drop this so that we
    don't get a section mismatch.
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Cc: David Müller <dave.mueller@gmx.ch>
    Cc: Hans de Goede <hdegoede@redhat.com>
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Fixes: 7c2e07130090 ("clk: x86: Add system specific quirk to mark clocks as critical")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 777943cd6c5f0b2c438e932a218d7c9fbeacd7a9
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Apr 8 11:15:19 2019 -0700

    nvme-fc: correct csn initialization and increments on error
    
    [ Upstream commit 67f471b6ed3b09033c4ac77ea03f92afdb1989fe ]
    
    This patch fixes a long-standing bug that initialized the FC-NVME
    cmnd iu CSN value to 1. Early FC-NVME specs had the connection starting
    with CSN=1. By the time the spec reached approval, the language had
    changed to state a connection should start with CSN=0.  This patch
    corrects the initialization value for FC-NVME connections.
    
    Additionally, in reviewing the transport, the CSN value is assigned to
    the new IU early in the start routine. It's possible that a later dma
    map request may fail, causing the command to never be sent to the
    controller.  Change the location of the assignment so that it is
    immediately prior to calling the lldd. Add a comment block to explain
    the impacts if the lldd were to additionally fail sending the command.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e8e67b8147fbcdd2d858c5f4c82297e12565e3d
Author: Dongli Zhang <dongli.zhang@oracle.com>
Date:   Wed Mar 27 18:36:34 2019 +0800

    virtio-blk: limit number of hw queues by nr_cpu_ids
    
    [ Upstream commit bf348f9b78d413e75bb079462751a1d86b6de36c ]
    
    When tag_set->nr_maps is 1, the block layer limits the number of hw queues
    by nr_cpu_ids. No matter how many hw queues are used by virtio-blk, as it
    has (tag_set->nr_maps == 1), it can use at most nr_cpu_ids hw queues.
    
    In addition, specifically for pci scenario, when the 'num-queues' specified
    by qemu is more than maxcpus, virtio-blk would not be able to allocate more
    than maxcpus vectors in order to have a vector for each queue. As a result,
    it falls back into MSI-X with one vector for config and one shared for
    queues.
    
    Considering above reasons, this patch limits the number of hw queues used
    by virtio-blk by nr_cpu_ids.
    
    Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>
    Signed-off-by: Dongli Zhang <dongli.zhang@oracle.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d955bb0b3189e4f6101ae71ae92a839886c3d355
Author: Tzung-Bi Shih <tzungbi@google.com>
Date:   Mon Apr 8 17:08:58 2019 +0800

    ASoC: Intel: kbl: fix wrong number of channels
    
    [ Upstream commit d6ba3f815bc5f3c4249d15c8bc5fbb012651b4a4 ]
    
    Fix wrong setting on number of channels.  The context wants to set
    constraint to 2 channels instead of 4.
    
    Signed-off-by: Tzung-Bi Shih <tzungbi@google.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e5c749ad6d7f1ad5ddfb6f1a12f476bbb4f9edcd
Author: Wen Yang <wen.yang99@zte.com.cn>
Date:   Thu Apr 4 00:04:09 2019 +0800

    drm/mediatek: fix possible object reference leak
    
    [ Upstream commit 2ae2c3316fb77dcf64275d011596b60104c45426 ]
    
    The call to of_parse_phandle returns a node pointer with refcount
    incremented thus it must be explicitly decremented after the last
    usage.
    
    Detected by coccinelle with the following warnings:
    drivers/gpu/drm/mediatek/mtk_hdmi.c:1521:2-8: ERROR: missing of_node_put; acquired a node pointer with refcount incremented on line 1509, but without a corresponding object release within this function.
    drivers/gpu/drm/mediatek/mtk_hdmi.c:1524:1-7: ERROR: missing of_node_put; acquired a node pointer with refcount incremented on line 1509, but without a corresponding object release within this function.
    
    Signed-off-by: Wen Yang <wen.yang99@zte.com.cn>
    Cc: CK Hu <ck.hu@mediatek.com>
    Cc: Philipp Zabel <p.zabel@pengutronix.de>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Matthias Brugger <matthias.bgg@gmail.com>
    Cc: dri-devel@lists.freedesktop.org
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-mediatek@lists.infradead.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: CK Hu <ck.hu@mediatek.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f4dbd17777f19a7f23d1022c5fb7c5793d19977
Author: Varun Prakash <varun@chelsio.com>
Date:   Fri Apr 5 20:39:13 2019 +0530

    scsi: csiostor: fix missing data copy in csio_scsi_err_handler()
    
    [ Upstream commit 5c2442fd78998af60e13aba506d103f7f43f8701 ]
    
    If scsi cmd sglist is not suitable for DDP then csiostor driver uses
    preallocated buffers for DDP, because of this data copy is required from
    DDP buffer to scsi cmd sglist before calling ->scsi_done().
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb357b9eb47dc1e5ca6e01d13ecbd01c5a025832
Author: Lijun Ou <oulijun@huawei.com>
Date:   Sun Apr 7 13:23:38 2019 +0800

    RDMA/hns: Fix bug that caused srq creation to fail
    
    [ Upstream commit 4772e03d239484f3461e33c79d721c8ea03f7416 ]
    
    Due to the incorrect use of the seg and obj information, the position of
    the mtt is calculated incorrectly, and the free space of the page is not
    enough to store the entire mtt, resulting in access to the next page. This
    patch fixes this problem.
    
     Unable to handle kernel paging request at virtual address ffff00006e3cd000
     ...
     Call trace:
      hns_roce_write_mtt+0x154/0x2f0 [hns_roce]
      hns_roce_buf_write_mtt+0xa8/0xd8 [hns_roce]
      hns_roce_create_srq+0x74c/0x808 [hns_roce]
      ib_create_srq+0x28/0xc8
    
    Fixes: 0203b14c4f32 ("RDMA/hns: Unify the calculation for hem index in hip08")
    Signed-off-by: chenglang <chenglang@huawei.com>
    Signed-off-by: Lijun Ou <oulijun@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8dfb2896d8c7b632e3a0dc282dee66f13460d03a
Author: Kamal Heib <kamalheib1@gmail.com>
Date:   Wed Apr 3 16:52:54 2019 +0300

    RDMA/vmw_pvrdma: Fix memory leak on pvrdma_pci_remove
    
    [ Upstream commit ea7a5c706fa49273cf6d1d9def053ecb50db2076 ]
    
    Make sure to free the DSR on pvrdma_pci_remove() to avoid the memory leak.
    
    Fixes: 29c8d9eba550 ("IB: Add vmw_pvrdma driver")
    Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
    Acked-by: Adit Ranadive <aditr@vmware.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5984fd68760025971db2f03df97231d2965b11a8
Author: Longpeng <longpeng2@huawei.com>
Date:   Sat Mar 9 15:17:40 2019 +0800

    virtio_pci: fix a NULL pointer reference in vp_del_vqs
    
    [ Upstream commit 6a8aae68c87349dbbcd46eac380bc43cdb98a13b ]
    
    If the msix_affinity_masks is alloced failed, then we'll
    try to free some resources in vp_free_vectors() that may
    access it directly.
    
    We met the following stack in our production:
    [   29.296767] BUG: unable to handle kernel NULL pointer dereference at  (null)
    [   29.311151] IP: [<ffffffffc04fe35a>] vp_free_vectors+0x6a/0x150 [virtio_pci]
    [   29.324787] PGD 0
    [   29.333224] Oops: 0000 [#1] SMP
    [...]
    [   29.425175] RIP: 0010:[<ffffffffc04fe35a>]  [<ffffffffc04fe35a>] vp_free_vectors+0x6a/0x150 [virtio_pci]
    [   29.441405] RSP: 0018:ffff9a55c2dcfa10  EFLAGS: 00010206
    [   29.453491] RAX: 0000000000000000 RBX: ffff9a55c322c400 RCX: 0000000000000000
    [   29.467488] RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff9a55c322c400
    [   29.481461] RBP: ffff9a55c2dcfa20 R08: 0000000000000000 R09: ffffc1b6806ff020
    [   29.495427] R10: 0000000000000e95 R11: 0000000000aaaaaa R12: 0000000000000000
    [   29.509414] R13: 0000000000010000 R14: ffff9a55bd2d9e98 R15: ffff9a55c322c400
    [   29.523407] FS:  00007fdcba69f8c0(0000) GS:ffff9a55c2840000(0000) knlGS:0000000000000000
    [   29.538472] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   29.551621] CR2: 0000000000000000 CR3: 000000003ce52000 CR4: 00000000003607a0
    [   29.565886] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   29.580055] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   29.594122] Call Trace:
    [   29.603446]  [<ffffffffc04fe8a2>] vp_request_msix_vectors+0xe2/0x260 [virtio_pci]
    [   29.618017]  [<ffffffffc04fedc5>] vp_try_to_find_vqs+0x95/0x3b0 [virtio_pci]
    [   29.632152]  [<ffffffffc04ff117>] vp_find_vqs+0x37/0xb0 [virtio_pci]
    [   29.645582]  [<ffffffffc057bf63>] init_vq+0x153/0x260 [virtio_blk]
    [   29.658831]  [<ffffffffc057c1e8>] virtblk_probe+0xe8/0x87f [virtio_blk]
    [...]
    
    Cc: Gonglei <arei.gonglei@huawei.com>
    Signed-off-by: Longpeng <longpeng2@huawei.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Gonglei <arei.gonglei@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8f5c1bceb25dcfca71684dd29ce38dbcfae5324
Author: Ondrej Jirman <megous@megous.com>
Date:   Sat Apr 6 01:30:48 2019 +0200

    drm/sun4i: tcon top: Fix NULL/invalid pointer dereference in sun8i_tcon_top_un/bind
    
    [ Upstream commit 1a07a94b47b1f528f39c3e6187b5eaf02efe44ea ]
    
    There are two problems here:
    
    1. Not all clk_data->hws[] need to be initialized, depending on various
       configured quirks. This leads to NULL ptr deref in
       clk_hw_unregister_gate() in sun8i_tcon_top_unbind()
    2. If there is error when registering the clk_data->hws[],
       err_unregister_gates error path will try to unregister
       IS_ERR()=true (invalid) pointer.
    
    For problem (1) I have this stack trace:
    
    Unable to handle kernel NULL pointer dereference at virtual
      address 0000000000000008
    Call trace:
     clk_hw_unregister+0x8/0x18
     clk_hw_unregister_gate+0x14/0x28
     sun8i_tcon_top_unbind+0x2c/0x60
     component_unbind.isra.4+0x2c/0x50
     component_bind_all+0x1d4/0x230
     sun4i_drv_bind+0xc4/0x1a0
     try_to_bring_up_master+0x164/0x1c0
     __component_add+0xa0/0x168
     component_add+0x10/0x18
     sun8i_dw_hdmi_probe+0x18/0x20
     platform_drv_probe+0x3c/0x70
     really_probe+0xcc/0x278
     driver_probe_device+0x34/0xa8
    
    Problem (2) was identified by head scratching.
    
    Signed-off-by: Ondrej Jirman <megous@megous.com>
    Signed-off-by: Maxime Ripard <maxime.ripard@bootlin.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190405233048.3823-1-megous@megous.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78bc98235e843dd904aa8d0ea0111a5511cf41b9
Author: Qian Cai <cai@lca.pw>
Date:   Sat Apr 6 18:59:01 2019 -0400

    slab: fix a crash by reading /proc/slab_allocators
    
    [ Upstream commit fcf88917dd435c6a4cb2830cb086ee58605a1d85 ]
    
    The commit 510ded33e075 ("slab: implement slab_root_caches list")
    changes the name of the list node within "struct kmem_cache" from "list"
    to "root_caches_node", but leaks_show() still use the "list" which
    causes a crash when reading /proc/slab_allocators.
    
    You need to have CONFIG_SLAB=y and CONFIG_MEMCG=y to see the problem,
    because without MEMCG all slab caches are root caches, and the "list"
    node happens to be the right one.
    
    Fixes: 510ded33e075 ("slab: implement slab_root_caches list")
    Signed-off-by: Qian Cai <cai@lca.pw>
    Reviewed-by: Tobin C. Harding <tobin@kernel.org>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf6cb79d57b049fbf2385bf79a34c651101615f0
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Thu Apr 4 12:17:35 2019 -0500

    objtool: Add rewind_stack_do_exit() to the noreturn list
    
    [ Upstream commit 4fa5ecda2bf96be7464eb406df8aba9d89260227 ]
    
    This fixes the following warning seen on GCC 7.3:
    
      arch/x86/kernel/dumpstack.o: warning: objtool: oops_end() falls through to next function show_regs()
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/3418ebf5a5a9f6ed7e80954c741c0b904b67b5dc.1554398240.git.jpoimboe@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e66e72710962c7cb6a5d5843b8395380ef64fac3
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Thu Apr 4 17:27:20 2019 +0100

    ASoC: cs35l35: Disable regulators on driver removal
    
    [ Upstream commit 47c4cc08cb5b34e93ab337b924c5ede77ca3c936 ]
    
    The chips main power supplies VA and VP are enabled during probe but
    then never disabled, this will cause warnings from the regulator
    framework on driver removal. Fix this by adding a remove callback and
    disabling the supplies, whilst doing so follow best practice and put the
    chip back into reset as well.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd015a3b072aff9057dd1cccd7029cc775ab1357
Author: tiancyin <tianci.yin@amd.com>
Date:   Mon Apr 1 10:15:31 2019 +0800

    drm/amd/display: fix cursor black issue
    
    [ Upstream commit c1cefe115d1cdc460014483319d440b2f0d07c68 ]
    
    [Why]
    the member sdr_white_level of struct dc_cursor_attributes was not
    initialized, then the random value result that
    dcn10_set_cursor_sdr_white_level() set error hw_scale value 0x20D9(normal
    value is 0x3c00), this cause the black cursor issue.
    
    [how]
    just initilize the obj of struct dc_cursor_attributes to zero to avoid
    the random value.
    
    Reviewed-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Signed-off-by: Tianci Yin <tianci.yin@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88294658ddbe0e35fa48e1679252e86b3b5ba1d2
Author: Sugar Zhang <sugar.zhang@rock-chips.com>
Date:   Wed Apr 3 21:40:45 2019 +0800

    ASoC: rockchip: pdm: fix regmap_ops hang issue
    
    [ Upstream commit c85064435fe7a216ec0f0238ef2b8f7cd850a450 ]
    
    This is because set_fmt ops maybe called when PD is off,
    and in such case, regmap_ops will lead system hang.
    enale PD before doing regmap_ops.
    
    Signed-off-by: Sugar Zhang <sugar.zhang@rock-chips.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95587274e9d5336b6dce39737869c4e9c7d4a22d
Author: Jann Horn <jannh@google.com>
Date:   Fri Mar 29 22:46:49 2019 +0100

    linux/kernel.h: Use parentheses around argument in u64_to_user_ptr()
    
    [ Upstream commit a0fe2c6479aab5723239b315ef1b552673f434a3 ]
    
    Use parentheses around uses of the argument in u64_to_user_ptr() to
    ensure that the cast doesn't apply to part of the argument.
    
    There are existing uses of the macro of the form
    
      u64_to_user_ptr(A + B)
    
    which expands to
    
      (void __user *)(uintptr_t)A + B
    
    (the cast applies to the first operand of the addition, the addition
    is a pointer addition). This happens to still work as intended, the
    semantic difference doesn't cause a difference in behavior.
    
    But I want to use u64_to_user_ptr() with a ternary operator in the
    argument, like so:
    
      u64_to_user_ptr(A ? B : C)
    
    This currently doesn't work as intended.
    
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Mukesh Ojha <mojha@codeaurora.org>
    Cc: Andrei Vagin <avagin@openvz.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: NeilBrown <neilb@suse.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Qiaowei Ren <qiaowei.ren@intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20190329214652.258477-1-jannh@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d10436ca5695661c26d2b914fab28481b800796
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Mar 21 13:38:49 2019 +0100

    perf/x86/intel: Initialize TFA MSR
    
    [ Upstream commit d7262457e35dbe239659e62654e56f8ddb814bed ]
    
    Stephane reported that the TFA MSR is not initialized by the kernel,
    but the TFA bit could set by firmware or as a leftover from a kexec,
    which makes the state inconsistent.
    
    Reported-by: Stephane Eranian <eranian@google.com>
    Tested-by: Nelson DSouza <nelson.dsouza@intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Cc: tonyj@suse.com
    Link: https://lkml.kernel.org/r/20190321123849.GN6521@hirez.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b791e8ee7b2705e1c0cb0874e554b04f30cf083
Author: Stephane Eranian <eranian@google.com>
Date:   Wed Mar 6 11:50:48 2019 -0800

    perf/x86/intel: Fix handling of wakeup_events for multi-entry PEBS
    
    [ Upstream commit 583feb08e7f7ac9d533b446882eb3a54737a6dbb ]
    
    When an event is programmed with attr.wakeup_events=N (N>0), it means
    the caller is interested in getting a user level notification after
    N samples have been recorded in the kernel sampling buffer.
    
    With precise events on Intel processors, the kernel uses PEBS.
    The kernel tries minimize sampling overhead by verifying
    if the event configuration is compatible with multi-entry PEBS mode.
    If so, the kernel is notified only when the buffer has reached its threshold.
    Other PEBS operates in single-entry mode, the kenrel is notified for each
    PEBS sample.
    
    The problem is that the current implementation look at frequency
    mode and event sample_type but ignores the wakeup_events field. Thus,
    it may not be possible to receive a notification after each precise event.
    
    This patch fixes this problem by disabling multi-entry PEBS if wakeup_events
    is non-zero.
    
    Signed-off-by: Stephane Eranian <eranian@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Andi Kleen <ak@linux.intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Cc: kan.liang@intel.com
    Link: https://lkml.kernel.org/r/20190306195048.189514-1-eranian@google.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 929d019d6d445855103cef86ab6331ef96b6e081
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Mar 28 17:31:30 2019 +0300

    drm/mediatek: Fix an error code in mtk_hdmi_dt_parse_pdata()
    
    [ Upstream commit 2d85978341e6a32e7443d9f28639da254d53f400 ]
    
    We don't want to overwrite "ret", it already holds the correct error
    code.  The "regmap" variable might be a valid pointer as this point.
    
    Fixes: 8f83f26891e1 ("drm/mediatek: Add HDMI support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: CK Hu <ck.hu@mediatek.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0fb785e28833216e6211a303cbfc0829942dc3c1
Author: Annaliese McDermond <nh6z@nh6z.net>
Date:   Sat Mar 30 09:02:02 2019 -0700

    ASoC: tlv320aic32x4: Fix Common Pins
    
    [ Upstream commit c63adb28f6d913310430f14c69f0a2ea55eed0cc ]
    
    The common pins were mistakenly not added to the DAPM graph.
    Adding these pins will allow valid graphs to be created.
    
    Signed-off-by: Annaliese McDermond <nh6z@nh6z.net>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6efcbf3cbceadfd24c97a45efb1c2a91faf5978
Author: Chong Qiao <qiaochong@loongson.cn>
Date:   Thu Mar 28 07:08:01 2019 +0800

    MIPS: KGDB: fix kgdb support for SMP platforms.
    
    [ Upstream commit ab8a6d821179ab9bea1a9179f535ccba6330c1ed ]
    
    KGDB_call_nmi_hook is called by other cpu through smp call.
    MIPS smp call is processed in ipi irq handler and regs is saved in
     handle_int.
    So kgdb_call_nmi_hook get regs by get_irq_regs and regs will be passed
     to kgdb_cpu_enter.
    
    Signed-off-by: Chong Qiao <qiaochong@loongson.cn>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Acked-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Christophe Leroy <christophe.leroy@c-s.fr>
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Cc: QiaoChong <qiaochong@loongson.cn>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09c6954e83e8b34eb7f2c18783b31818c8fd1628
Author: Kaike Wan <kaike.wan@intel.com>
Date:   Mon Mar 18 09:55:49 2019 -0700

    IB/hfi1: Fix the allocation of RSM table
    
    [ Upstream commit d0294344470e6b52d097aa7369173f32d11f2f52 ]
    
    The receive side mapping (RSM) on hfi1 hardware is a special
    matching mechanism to direct an incoming packet to a given
    hardware receive context. It has 4 instances of matching capabilities
    (RSM0 - RSM3) that share the same RSM table (RMT). The RMT has a total of
    256 entries, each of which points to a receive context.
    
    Currently, three instances of RSM have been used:
    1. RSM0 by QOS;
    2. RSM1 by PSM FECN;
    3. RSM2 by VNIC.
    
    Each RSM instance should reserve enough entries in RMT to function
    properly. Since both PSM and VNIC could allocate any receive context
    between dd->first_dyn_alloc_ctxt and dd->num_rcv_contexts, PSM FECN must
    reserve enough RMT entries to cover the entire receive context index
    range (dd->num_rcv_contexts - dd->first_dyn_alloc_ctxt) instead of only
    the user receive contexts allocated for PSM
    (dd->num_user_contexts). Consequently, the sizing of
    dd->num_user_contexts in set_up_context_variables is incorrect.
    
    Fixes: 2280740f01ae ("IB/hfi1: Virtual Network Interface Controller (VNIC) HW support")
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Reviewed-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Kaike Wan <kaike.wan@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3abd4aef917f1b763d5bf4a8f747af52a1bf11f9
Author: Kaike Wan <kaike.wan@intel.com>
Date:   Mon Mar 18 09:55:39 2019 -0700

    IB/hfi1: Eliminate opcode tests on mr deref
    
    [ Upstream commit a8639a79e85c18c16c10089edd589c7948f19bbd ]
    
    When an old ack_queue entry is used to store an incoming request, it may
    need to clean up the old entry if it is still referencing the
    MR. Originally only RDMA READ request needed to reference MR on the
    responder side and therefore the opcode was tested when cleaning up the
    old entry. The introduction of tid rdma specific operations in the
    ack_queue makes the specific opcode tests wrong.  Multiple opcodes (RDMA
    READ, TID RDMA READ, and TID RDMA WRITE) may need MR ref cleanup.
    
    Remove the opcode specific tests associated with the ack_queue.
    
    Fixes: f48ad614c100 ("IB/hfi1: Move driver out of staging")
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Kaike Wan <kaike.wan@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ed91af83a45b46214ac09f579be3b935e6e7e43
Author: Tony Lindgren <tony@atomide.com>
Date:   Tue Mar 26 08:14:37 2019 -0700

    drm/omap: hdmi4_cec: Fix CEC clock handling for PM
    
    [ Upstream commit 36a1da15b5df493241b0011d2185fdd724ac1ed1 ]
    
    If CONFIG_OMAP4_DSS_HDMI_CEC is enabled in .config, deeper SoC idle
    states are blocked because the CEC clock gets always enabled on init.
    
    Let's fix the issue by moving the CEC clock handling to happen later in
    hdmi_cec_adap_enable() as suggested by Hans Verkuil <hverkuil@xs4all.nl>.
    This way the CEC clock gets only enabled when needed. This can be tested
    by doing cec-ctl --playback to enable the CEC, and doing cec-ctl --clear
    to disable it.
    
    Let's also fix the typo for "divider" in the comments while at it.
    
    Fixes: 8d7f934df8d8 ("omapdrm: hdmi4_cec: add OMAP4 HDMI CEC support")
    Suggested-by: Hans Verkuil <hverkuil@xs4all.nl>
    Cc: Hans Verkuil <hverkuil@xs4all.nl>
    Cc: Jyri Sarha <jsarha@ti.com>
    Cc: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Reviewed-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190326151438.32414-1-tony@atomide.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d356db088333d1e3f317316b65e267bfa19ce7a2
Author: Pankaj Bharadiya <pankaj.laxminarayan.bharadiya@intel.com>
Date:   Fri Mar 22 18:00:09 2019 +0530

    ASoC: dapm: Fix NULL pointer dereference in snd_soc_dapm_free_kcontrol
    
    [ Upstream commit cacea3a90e211f0c111975535508d446a4a928d2 ]
    
    w_text_param can be NULL and it is being dereferenced without checking.
    Add the missing sanity check to prevent  NULL pointer dereference.
    
    Signed-off-by: Pankaj Bharadiya <pankaj.laxminarayan.bharadiya@intel.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f69661f6ebe44dbe5e5dee67278266199bcbd32
Author: Daniel Mack <daniel@zonque.org>
Date:   Wed Mar 20 22:41:56 2019 +0100

    ASoC: cs4270: Set auto-increment bit for register writes
    
    [ Upstream commit f0f2338a9cfaf71db895fa989ea7234e8a9b471d ]
    
    The CS4270 does not by default increment the register address on
    consecutive writes. During normal operation it doesn't matter as all
    register accesses are done individually. At resume time after suspend,
    however, the regcache code gathers the biggest possible block of
    registers to sync and sends them one on one go.
    
    To fix this, set the INCR bit in all cases.
    
    Signed-off-by: Daniel Mack <daniel@zonque.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f5077ceee5fa8879766292352047e3bb5231161
Author: Olivier Moysan <olivier.moysan@st.com>
Date:   Mon Mar 4 15:52:44 2019 +0100

    ASoC: stm32: dfsdm: fix debugfs warnings on entry creation
    
    [ Upstream commit c47255b61129857b74b0d86eaf59335348be05e0 ]
    
    Register platform component with a prefix, to avoid warnings
    on debugfs entries creation, due to component name
    redundancy.
    
    Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33ffe0807d52e97d2cecf551b5aec43cd9c1534c
Author: Olivier Moysan <olivier.moysan@st.com>
Date:   Mon Mar 4 15:52:43 2019 +0100

    ASoC: stm32: dfsdm: manage multiple prepare
    
    [ Upstream commit 19441e35a43b616ea6afad91ed0d9e77268d8f6a ]
    
    The DFSDM must be stopped when a new setting is applied.
    restart systematically DFSDM on multiple prepare calls,
    to apply changes.
    
    Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74f5898f660d971cd8f0899fe57e209ccd650931
Author: Maxime Jourdan <mjourdan@baylibre.com>
Date:   Tue Mar 19 11:25:37 2019 +0100

    clk: meson-gxbb: round the vdec dividers to closest
    
    [ Upstream commit 9b70c697e87286ade406e6a02091757307dd4b7c ]
    
    We want the video decoder clocks to always round to closest. While the
    muxes are already using CLK_MUX_ROUND_CLOSEST, the corresponding
    CLK_DIVIDER_ROUND_CLOSEST was forgotten for the dividers.
    
    Fix this by adding the flag to the two vdec dividers.
    
    Fixes: a565242eb9fc ("clk: meson: gxbb: add the video decoder clocks")
    Signed-off-by: Maxime Jourdan <mjourdan@baylibre.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lkml.kernel.org/r/20190319102537.2043-1-mjourdan@baylibre.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8aa62dc731e52b989dad6ab676156d6eaa2a4c9e
Author: Charles Keepax <ckeepax@opensource.cirrus.com>
Date:   Tue Mar 19 11:52:06 2019 +0000

    ASoC: wm_adsp: Add locking to wm_adsp2_bus_error
    
    [ Upstream commit a2225a6d155fcb247fe4c6d87f7c91807462966d ]
    
    Best to lock across handling the bus error to ensure the DSP doesn't
    change power state as we are reading the status registers.
    
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ece73fe079b7acce2d4b323b1960cbff4821d61
Author: Shuming Fan <shumingf@realtek.com>
Date:   Mon Mar 18 15:17:42 2019 +0800

    ASoC: rt5682: recording has no sound after booting
    
    [ Upstream commit 1c5b6a27e432e4fe170a924c8b41012271496a4c ]
    
    If ASRC turns on, HW will use clk_dac as the reference clock
    whether recording or playback.
    Both of clk_dac and clk_adc should set proper clock while using ASRC.
    
    Signed-off-by: Shuming Fan <shumingf@realtek.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit afcbb3c755c92cc2c106ec9e301e0d440dceb185
Author: Sylwester Nawrocki <s.nawrocki@samsung.com>
Date:   Tue Mar 12 18:40:06 2019 +0100

    ASoC: samsung: odroid: Fix clock configuration for 44100 sample rate
    
    [ Upstream commit 2b13bee3884926cba22061efa75bd315e871de24 ]
    
    After commit fbeec965b8d1c ("ASoC: samsung: odroid: Fix 32000 sample rate
    handling") the audio root clock frequency is configured improperly for
    44100 sample rate. Due to clock rate rounding it's 20070401 Hz instead
    of 22579000 Hz. This results in a too low value of the PSR clock divider
    in the CPU DAI driver and too fast actual sample rate for fs=44100. E.g.
    1 kHz tone has actual 1780 Hz frequency (1 kHz * 20070401/22579000 * 2).
    
    Fix this by increasing the correction passed to clk_set_rate() to take
    into account inaccuracy of the EPLL frequency properly.
    
    Fixes: fbeec965b8d1c ("ASoC: samsung: odroid: Fix 32000 sample rate handling")
    Reported-by: JaeChul Lee <jcsing.lee@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7525d6104ca41c3165083f966704b38b34dcc95a
Author: John Hsu <KCHSU0@nuvoton.com>
Date:   Wed Mar 13 16:23:44 2019 +0800

    ASoC: nau8810: fix the issue of widget with prefixed name
    
    [ Upstream commit 54d1cf78b0f4ba348a7c7fb8b7d0708d71b6cc8a ]
    
    The driver changes the stream name of DAC and ADC to avoid the issue of
    widget with prefixed name. When the machine adds prefixed name for codec,
    the stream name of DAI may not find the widgets.
    
    Signed-off-by: John Hsu <KCHSU0@nuvoton.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2119de4ed41b51c791b44d85af1c513b4655c08
Author: John Hsu <KCHSU0@nuvoton.com>
Date:   Mon Mar 11 09:36:45 2019 +0800

    ASoC: nau8824: fix the issue of the widget with prefix name
    
    [ Upstream commit 844a4a362dbec166b44d6b9b3dd45b08cb273703 ]
    
    The driver has two issues when machine add prefix name for codec.
    (1)The stream name of DAI can't find the AIF widgets.
    (2)The drivr can enable/disalbe the MICBIAS and SAR widgets.
    
    The patch will fix these issues caused by prefixed name added.
    
    Signed-off-by: John Hsu <KCHSU0@nuvoton.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29f1b976152044e0e7fa0743b8a9cd73f10b573d
Author: Rander Wang <rander.wang@linux.intel.com>
Date:   Fri Mar 8 16:38:59 2019 +0800

    ASoC:intel:skl:fix a simultaneous playback & capture issue on hda platform
    
    [ Upstream commit c899df3e9b0bf7b76e642aed1a214582ea7012d5 ]
    
    If playback and capture are enabled concurrently, when the capture stops
    the output becomes inaudile. The playback application will become stuck
    and underrun after a timeout.
    
    This is caused by mistaken use of the stream_id, which should only be
    set for playback and not for capture
    
    Tested on Apollolake and Kabylake with SST driver.
    
    Signed-off-by: Rander Wang <rander.wang@linux.intel.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 581a8bd9fa8b7265f858c7f35d658354c9fe028f
Author: Rander Wang <rander.wang@linux.intel.com>
Date:   Fri Mar 8 16:38:57 2019 +0800

    ASoC:soc-pcm:fix a codec fixup issue in TDM case
    
    [ Upstream commit 570f18b6a8d1f0e60e8caf30e66161b6438dcc91 ]
    
    On HDaudio platforms, if playback is started when capture is working,
    there is no audible output.
    
    This can be root-caused to the use of the rx|tx_mask to store an HDaudio
    stream tag.
    
    If capture is stared before playback, rx_mask would be non-zero on HDaudio
    platform, then the channel number of playback, which is in the same codec
    dai with the capture, would be changed by soc_pcm_codec_params_fixup based
    on the tx_mask at first, then overwritten by this function based on rx_mask
    at last.
    
    According to the author of tx|rx_mask, tx_mask is for playback and rx_mask
    is for capture. And stream direction is checked at all other references of
    tx|rx_mask in ASoC, so here should be an error. This patch checks stream
    direction for tx|rx_mask for fixup function.
    
    This issue would affect not only HDaudio+ASoC, but also I2S codecs if the
    channel number based on rx_mask is not equal to the one for tx_mask. It could
    be rarely reproduecd because most drivers in kernel set the same channel number
    to tx|rx_mask or rx_mask is zero.
    
    Tested on all platforms using stream_tag & HDaudio and intel I2S platforms.
    
    Signed-off-by: Rander Wang <rander.wang@linux.intel.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c37f7344075a424fd4c70f0710a4feeed7ac1fb1
Author: Olivier Moysan <olivier.moysan@st.com>
Date:   Thu Feb 28 14:19:22 2019 +0100

    ASoC: stm32: sai: fix exposed capabilities in spdif mode
    
    [ Upstream commit b8468192971807c43a80d6e2c41f83141cb7b211 ]
    
    Change capabilities exposed in SAI S/PDIF mode, to match
    actually supported formats.
    In S/PDIF mode only 32 bits stereo is supported.
    
    Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2aeceaaff09b2fb329976ba67889d9a5c5bcc750
Author: Olivier Moysan <olivier.moysan@st.com>
Date:   Thu Feb 28 14:19:21 2019 +0100

    ASoC: stm32: sai: fix iec958 controls indexation
    
    [ Upstream commit 5f8a1000c3e630c3ac06f1d664eeaa755bce8823 ]
    
    Allow indexation of sai iec958 controls according
    to device id.
    
    Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6544b49661938b2fed436109c15700caa9b5e06d
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Thu Feb 28 15:30:34 2019 +0000

    ASoC: hdmi-codec: fix S/PDIF DAI
    
    [ Upstream commit 2e95f984aae4cf0608d0ba2189c756f2bd50b44a ]
    
    When using the S/PDIF DAI, there is no requirement to call
    snd_soc_dai_set_fmt() as there is no DAI format definition that defines
    S/PDIF.  In any case, S/PDIF does not have separate clocks, this is
    embedded into the data stream.
    
    Consequently, when attempting to use TDA998x in S/PDIF mode, the attempt
    to configure TDA998x via the hw_params callback fails as the
    hdmi_codec_daifmt is left initialised to zero.
    
    Since the S/PDIF DAI will only be used by S/PDIF, prepare the
    hdmi_codec_daifmt structure for this format.
    
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Jyri Sarha <jsarha@ti.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98a80393b82a3be7bf72a9246196c722851fd74a
Author: Philipp Puschmann <philipp.puschmann@emlix.com>
Date:   Wed Feb 27 16:17:33 2019 +0100

    ASoC: tlv320aic3x: fix reset gpio reference counting
    
    [ Upstream commit 82ad759143ed77673db0d93d53c1cde7b99917ee ]
    
    This patch fixes a bug that prevents freeing the reset gpio on unloading
    the module.
    
    aic3x_i2c_probe is called when loading the module and it calls list_add
    with a probably uninitialized list entry aic3x->list (next = prev = NULL)).
    So even if list_del is called it does nothing and in the end the gpio_reset
    is not freed. Then a repeated module probing fails silently because
    gpio_request fails.
    
    When moving INIT_LIST_HEAD to aic3x_i2c_probe we also have to move
    list_del to aic3x_i2c_remove because aic3x_remove may be called
    multiple times without aic3x_i2c_remove being called which leads to
    a NULL pointer dereference.
    
    Signed-off-by: Philipp Puschmann <philipp.puschmann@emlix.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34ae4c6a3609960d4fc4010df7a4b2b877649d00
Author: Suresh Udipi <sudipi@jp.adit-jv.com>
Date:   Wed Apr 24 21:23:43 2019 +0200

    staging: most: cdev: fix chrdev_region leak in mod_exit
    
    commit af708900e9a48c0aa46070c8a8cdf0608a1d2025 upstream.
    
    It looks like v4.18-rc1 commit [0] which upstreams mld-1.8.0
    commit [1] missed to fix the memory leak in mod_exit function.
    
    Do it now.
    
    [0] aba258b7310167 ("staging: most: cdev: fix chrdev_region leak")
    [1] https://github.com/microchip-ais/linux/commit/a2d8f7ae7ea381
        ("staging: most: cdev: fix leak for chrdev_region")
    
    Signed-off-by: Suresh Udipi <sudipi@jp.adit-jv.com>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Acked-by: Christian Gromm <christian.gromm@microchip.com>
    Fixes: aba258b73101 ("staging: most: cdev: fix chrdev_region leak")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2197e11bb62452a22ae9f4bbc50b895a431cfebb
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Apr 4 08:53:30 2019 +0200

    staging: greybus: power_supply: fix prop-descriptor request size
    
    commit 47830c1127ef166af787caf2f871f23089610a7f upstream.
    
    Since moving the message buffers off the stack, the dynamically
    allocated get-prop-descriptor request buffer is incorrectly sized due to
    using the pointer rather than request-struct size when creating the
    operation.
    
    Fortunately, the pointer size is always larger than this one-byte
    request, but this could still cause trouble on the remote end due to the
    unexpected message size.
    
    Fixes: 9d15134d067e ("greybus: power_supply: rework get descriptors")
    Cc: stable <stable@vger.kernel.org>     # 4.9
    Cc: Rui Miguel Silva <rui.silva@linaro.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Rui Miguel Silva <rmfrfs@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35d2c86db2d4a87854152aac595a7324b3546511
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Mon May 6 13:45:26 2019 +0300

    ubsan: Fix nasty -Wbuiltin-declaration-mismatch GCC-9 warnings
    
    commit f0996bc2978e02d2ea898101462b960f6119b18f upstream.
    
    Building lib/ubsan.c with gcc-9 results in a ton of nasty warnings like
    this one:
    
        lib/ubsan.c warning: conflicting types for built-in function
             ‘__ubsan_handle_negate_overflow’; expected ‘void(void *, void *)’ [-Wbuiltin-declaration-mismatch]
    
    The kernel's declarations of __ubsan_handle_*() often uses 'unsigned
    long' types in parameters while GCC these parameters as 'void *' types,
    hence the mismatch.
    
    Fix this by using 'void *' to match GCC's declarations.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Fixes: c6d308534aef ("UBSAN: run-time undefined behavior sanity checker")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb7b8d1afb92e646f440f7f930d245970d1062b6
Author: Dexuan Cui <decui@microsoft.com>
Date:   Fri Apr 12 23:34:45 2019 +0000

    Drivers: hv: vmbus: Remove the undesired put_cpu_ptr() in hv_synic_cleanup()
    
    commit a0033bd1eae4650b69be07c17cb87393da584563 upstream.
    
    With CONFIG_DEBUG_PREEMPT=y, the put_cpu_ptr() triggers an underflow
    warning in preempt_count_sub().
    
    Fixes: 37cdd991fac8 ("vmbus: put related per-cpu variable together")
    Cc: stable@vger.kernel.org
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Reviewed-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Sasha Levin (Microsoft) <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f18e433b97bf74bb62e0caa95c61e8631967fb9
Author: Jason Yan <yanaijie@huawei.com>
Date:   Tue Sep 25 10:56:54 2018 +0800

    scsi: libsas: fix a race condition when smp task timeout
    
    commit b90cd6f2b905905fb42671009dc0e27c310a16ae upstream.
    
    When the lldd is processing the complete sas task in interrupt and set the
    task stat as SAS_TASK_STATE_DONE, the smp timeout timer is able to be
    triggered at the same time. And smp_task_timedout() will complete the task
    wheter the SAS_TASK_STATE_DONE is set or not. Then the sas task may freed
    before lldd end the interrupt process. Thus a use-after-free will happen.
    
    Fix this by calling the complete() only when SAS_TASK_STATE_DONE is not
    set. And remove the check of the return value of the del_timer(). Once the
    LLDD sets DONE, it must call task->done(), which will call
    smp_task_done()->complete() and the task will be completed and freed
    correctly.
    
    Reported-by: chenxiang <chenxiang66@hisilicon.com>
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: Johannes Thumshirn <jthumshirn@suse.de>
    CC: Ewan Milne <emilne@redhat.com>
    CC: Christoph Hellwig <hch@lst.de>
    CC: Tomas Henzl <thenzl@redhat.com>
    CC: Dan Williams <dan.j.williams@intel.com>
    CC: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Guenter Roeck <linux@roeck-us.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e629cabe34ed1a262d0411b51467539f0ffd250a
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Wed Apr 17 09:49:39 2019 +0800

    net: stmmac: Use bfsize1 in ndesc_init_rx_desc
    
    commit f87db4dbd52f2f8a170a2b51cb0926221ca7c9e2 upstream.
    
    gcc warn this:
    
    drivers/net/ethernet/stmicro/stmmac/norm_desc.c: In function ndesc_init_rx_desc:
    drivers/net/ethernet/stmicro/stmmac/norm_desc.c:138:6: warning: variable 'bfsize1' set but not used [-Wunused-but-set-variable]
    
    Like enh_desc_init_rx_desc, we should use bfsize1
    in ndesc_init_rx_desc to calculate 'p->des1'
    
    Fixes: 583e63614149 ("net: stmmac: use correct DMA buffer size in the RX descriptor")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Aaro Koskinen <aaro.koskinen@nokia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Nobuhiro Iwamatsu <nobuhiro1.iwamatsu@toshiba.co.jp>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
