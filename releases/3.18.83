commit c35c375efa4e2c832946a04e83155f928135e8f6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Nov 21 09:01:08 2017 +0100

    Linux 3.18.83

commit 6d7a134fe3c25f806a413cd38a11ab1f5bec0c28
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Oct 11 14:02:58 2017 +0200

    USB: serial: garmin_gps: fix memory leak on probe errors
    
    commit 74d471b598444b7f2d964930f7234779c80960a0 upstream.
    
    Make sure to free the port private data before returning after a failed
    probe attempt.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50cc5314001862bd08e025f54c71ecd5f8b211ce
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Oct 11 14:02:57 2017 +0200

    USB: serial: garmin_gps: fix I/O after failed probe and remove
    
    commit 19a565d9af6e0d828bd0d521d3bafd5017f4ce52 upstream.
    
    Make sure to stop any submitted interrupt and bulk-out URBs before
    returning after failed probe and when the port is being unbound to avoid
    later NULL-pointer dereferences in the completion callbacks.
    
    Also fix up the related and broken I/O cancellation on failed open and
    on close. (Note that port->write_urb was never submitted.)
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0d6a6f83281a73ef8d60ab0e3ebdd134217c295
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Jan 3 16:39:41 2017 +0100

    USB: serial: garmin_gps: fix memory leak on failed URB submit
    
    commit c4ac4496e835b78a45dfbf74f6173932217e4116 upstream.
    
    Make sure to free the URB transfer buffer in case submission fails (e.g.
    due to a disconnect).
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a23a605121c28917fdb85abd6f863f6ab50dc885
Author: Douglas Fischer <douglas.fischer@outlook.com>
Date:   Sun Oct 29 23:29:55 2017 +0000

    USB: serial: qcserial: add pid/vid for Sierra Wireless EM7355 fw update
    
    commit 771394a54148f18926ca86414e51c69eda27d0cd upstream.
    
    Add USB PID/VID for Sierra Wireless EM7355 LTE modem QDL firmware update
    mode.
    
    Signed-off-by: Douglas Fischer <douglas.fischer@outlook.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbe3cdcf641b056bd31dda9a9618a08824d23635
Author: Bernhard Rosenkraenzer <bernhard.rosenkranzer@linaro.org>
Date:   Fri Nov 3 16:46:02 2017 +0100

    USB: Add delay-init quirk for Corsair K70 LUX keyboards
    
    commit a0fea6027f19c62727315aba1a7fae75a9caa842 upstream.
    
    Without this patch, K70 LUX keyboards don't work, saying
    usb 3-3: unable to read config index 0 descriptor/all
    usb 3-3: can't read configurations, error -110
    usb usb3-port3: unable to enumerate USB device
    
    Signed-off-by: Bernhard Rosenkraenzer <Bernhard.Rosenkranzer@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a5d144279755576826148b94b28f652bdf0cca3
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Wed Nov 8 12:23:17 2017 -0500

    USB: usbfs: compute urb->actual_length for isochronous
    
    commit 2ef47001b3ee3ded579b7532ebdcf8680e4d8c54 upstream.
    
    The USB kerneldoc says that the actual_length field "is read in
    non-iso completion functions", but the usbfs driver uses it for all
    URB types in processcompl().  Since not all of the host controller
    drivers set actual_length for isochronous URBs, programs using usbfs
    with some host controllers don't work properly.  For example, Minas
    reports that a USB camera controlled by libusb doesn't work properly
    with a dwc2 controller.
    
    It doesn't seem worthwhile to change the HCDs and the documentation,
    since the in-kernel USB class drivers evidently don't rely on
    actual_length for isochronous transfers.  The easiest solution is for
    usbfs to calculate the actual_length value for itself, by adding up
    the lengths of the individual packets in an isochronous transfer.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Reported-and-tested-by: wlf <wulf@rock-chips.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8cf8ebdce459c57c9ca75448e29feced04dcfd79
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Thu Feb 16 18:05:13 2017 +0300

    uapi: fix linux/rds.h userspace compilation errors
    
    
    [ Upstream commit feb0869d90e51ce8b6fd8a46588465b1b5a26d09 ]
    
    Consistently use types from linux/types.h to fix the following
    linux/rds.h userspace compilation errors:
    
    /usr/include/linux/rds.h:106:2: error: unknown type name 'uint8_t'
      uint8_t name[32];
    /usr/include/linux/rds.h:107:2: error: unknown type name 'uint64_t'
      uint64_t value;
    /usr/include/linux/rds.h:117:2: error: unknown type name 'uint64_t'
      uint64_t next_tx_seq;
    /usr/include/linux/rds.h:118:2: error: unknown type name 'uint64_t'
      uint64_t next_rx_seq;
    /usr/include/linux/rds.h:121:2: error: unknown type name 'uint8_t'
      uint8_t transport[TRANSNAMSIZ];  /* null term ascii */
    /usr/include/linux/rds.h:122:2: error: unknown type name 'uint8_t'
      uint8_t flags;
    /usr/include/linux/rds.h:129:2: error: unknown type name 'uint64_t'
      uint64_t seq;
    /usr/include/linux/rds.h:130:2: error: unknown type name 'uint32_t'
      uint32_t len;
    /usr/include/linux/rds.h:135:2: error: unknown type name 'uint8_t'
      uint8_t flags;
    /usr/include/linux/rds.h:139:2: error: unknown type name 'uint32_t'
      uint32_t sndbuf;
    /usr/include/linux/rds.h:144:2: error: unknown type name 'uint32_t'
      uint32_t rcvbuf;
    /usr/include/linux/rds.h:145:2: error: unknown type name 'uint64_t'
      uint64_t inum;
    /usr/include/linux/rds.h:153:2: error: unknown type name 'uint64_t'
      uint64_t       hdr_rem;
    /usr/include/linux/rds.h:154:2: error: unknown type name 'uint64_t'
      uint64_t       data_rem;
    /usr/include/linux/rds.h:155:2: error: unknown type name 'uint32_t'
      uint32_t       last_sent_nxt;
    /usr/include/linux/rds.h:156:2: error: unknown type name 'uint32_t'
      uint32_t       last_expected_una;
    /usr/include/linux/rds.h:157:2: error: unknown type name 'uint32_t'
      uint32_t       last_seen_una;
    /usr/include/linux/rds.h:164:2: error: unknown type name 'uint8_t'
      uint8_t  src_gid[RDS_IB_GID_LEN];
    /usr/include/linux/rds.h:165:2: error: unknown type name 'uint8_t'
      uint8_t  dst_gid[RDS_IB_GID_LEN];
    /usr/include/linux/rds.h:167:2: error: unknown type name 'uint32_t'
      uint32_t max_send_wr;
    /usr/include/linux/rds.h:168:2: error: unknown type name 'uint32_t'
      uint32_t max_recv_wr;
    /usr/include/linux/rds.h:169:2: error: unknown type name 'uint32_t'
      uint32_t max_send_sge;
    /usr/include/linux/rds.h:170:2: error: unknown type name 'uint32_t'
      uint32_t rdma_mr_max;
    /usr/include/linux/rds.h:171:2: error: unknown type name 'uint32_t'
      uint32_t rdma_mr_size;
    /usr/include/linux/rds.h:212:9: error: unknown type name 'uint64_t'
     typedef uint64_t rds_rdma_cookie_t;
    /usr/include/linux/rds.h:215:2: error: unknown type name 'uint64_t'
      uint64_t addr;
    /usr/include/linux/rds.h:216:2: error: unknown type name 'uint64_t'
      uint64_t bytes;
    /usr/include/linux/rds.h:221:2: error: unknown type name 'uint64_t'
      uint64_t cookie_addr;
    /usr/include/linux/rds.h:222:2: error: unknown type name 'uint64_t'
      uint64_t flags;
    /usr/include/linux/rds.h:228:2: error: unknown type name 'uint64_t'
      uint64_t  cookie_addr;
    /usr/include/linux/rds.h:229:2: error: unknown type name 'uint64_t'
      uint64_t  flags;
    /usr/include/linux/rds.h:234:2: error: unknown type name 'uint64_t'
      uint64_t flags;
    /usr/include/linux/rds.h:240:2: error: unknown type name 'uint64_t'
      uint64_t local_vec_addr;
    /usr/include/linux/rds.h:241:2: error: unknown type name 'uint64_t'
      uint64_t nr_local;
    /usr/include/linux/rds.h:242:2: error: unknown type name 'uint64_t'
      uint64_t flags;
    /usr/include/linux/rds.h:243:2: error: unknown type name 'uint64_t'
      uint64_t user_token;
    /usr/include/linux/rds.h:248:2: error: unknown type name 'uint64_t'
      uint64_t  local_addr;
    /usr/include/linux/rds.h:249:2: error: unknown type name 'uint64_t'
      uint64_t  remote_addr;
    /usr/include/linux/rds.h:252:4: error: unknown type name 'uint64_t'
        uint64_t compare;
    /usr/include/linux/rds.h:253:4: error: unknown type name 'uint64_t'
        uint64_t swap;
    /usr/include/linux/rds.h:256:4: error: unknown type name 'uint64_t'
        uint64_t add;
    /usr/include/linux/rds.h:259:4: error: unknown type name 'uint64_t'
        uint64_t compare;
    /usr/include/linux/rds.h:260:4: error: unknown type name 'uint64_t'
        uint64_t swap;
    /usr/include/linux/rds.h:261:4: error: unknown type name 'uint64_t'
        uint64_t compare_mask;
    /usr/include/linux/rds.h:262:4: error: unknown type name 'uint64_t'
        uint64_t swap_mask;
    /usr/include/linux/rds.h:265:4: error: unknown type name 'uint64_t'
        uint64_t add;
    /usr/include/linux/rds.h:266:4: error: unknown type name 'uint64_t'
        uint64_t nocarry_mask;
    /usr/include/linux/rds.h:269:2: error: unknown type name 'uint64_t'
      uint64_t flags;
    /usr/include/linux/rds.h:270:2: error: unknown type name 'uint64_t'
      uint64_t user_token;
    /usr/include/linux/rds.h:274:2: error: unknown type name 'uint64_t'
      uint64_t user_token;
    /usr/include/linux/rds.h:275:2: error: unknown type name 'int32_t'
      int32_t  status;
    
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12c50a1f5746e803d5e661ab8bfe0f870e8ce2e2
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Thu Feb 16 18:05:45 2017 +0300

    uapi: fix linux/rds.h userspace compilation error
    
    
    [ Upstream commit 1786dbf3702e33ce3afd2d3dbe630bd04b1d2e58 ]
    
    On the kernel side, sockaddr_storage is #define'd to
    __kernel_sockaddr_storage.  Replacing struct sockaddr_storage with
    struct __kernel_sockaddr_storage defined by <linux/socket.h> fixes
    the following linux/rds.h userspace compilation error:
    
    /usr/include/linux/rds.h:226:26: error: field 'dest_addr' has incomplete type
      struct sockaddr_storage dest_addr;
    
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fb75ce8dc5811d5c19919f94079118997838d8d3
Author: Sasha Levin <alexander.levin@verizon.com>
Date:   Mon Nov 13 18:03:32 2017 -0500

    Revert "uapi: fix linux/rds.h userspace compilation errors"
    
    
    This reverts commit ad50561ba7a664bc581826c9d57d137fcf17bfa5.
    
    There was a mixup with the commit message for two upstream commit
    that have the same subject line.
    
    This revert will be followed by the two commits with proper commit
    messages.
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83c47200d062b1bc679d4c82d439d9db8c8089f3
Author: Sasha Levin <alexander.levin@verizon.com>
Date:   Mon Nov 13 17:55:20 2017 -0500

    Revert "crypto: xts - Add ECB dependency"
    
    
    This reverts commit 6145171a6bc0abdc3eca7a4b795ede467d2ba569.
    
    The commit fixes a bug that was only introduced in 4.10, thus is
    irrelevant for <=4.9.
    
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a8eca870ee7f9900596116b7b3aff2f48f3ce42
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Nov 7 11:30:41 2016 +0000

    MIPS: Netlogic: Exclude netlogic,xlp-pic code from XLR builds
    
    
    [ Upstream commit 9799270affc53414da96e77e454a5616b39cdab0 ]
    
    Code in arch/mips/netlogic/common/irq.c which handles the XLP PIC fails
    to build in XLR configurations due to cpu_is_xlp9xx not being defined,
    leading to the following build failure:
    
        arch/mips/netlogic/common/irq.c: In function ‘xlp_of_pic_init’:
        arch/mips/netlogic/common/irq.c:298:2: error: implicit declaration
        of function ‘cpu_is_xlp9xx’ [-Werror=implicit-function-declaration]
          if (cpu_is_xlp9xx()) {
          ^
    
    Although the code was conditional upon CONFIG_OF which is indirectly
    selected by CONFIG_NLM_XLP_BOARD but not CONFIG_NLM_XLR_BOARD, the
    failing XLR with CONFIG_OF configuration can be configured manually or
    by randconfig.
    
    Fix the build failure by making the affected XLP PIC code conditional
    upon CONFIG_CPU_XLP which is used to guard the inclusion of
    asm/netlogic/xlp-hal/xlp.h that provides the required cpu_is_xlp9xx
    function.
    
    [ralf@linux-mips.org: Fixed up as per Jayachandran's suggestion.]
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Cc: Jayachandran C <jchandra@broadcom.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14524/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7cad58e010f2bd758638cc0d293e4342ed80921
Author: Marcin Nowakowski <marcin.nowakowski@mips.com>
Date:   Wed Nov 23 14:43:44 2016 +0100

    MIPS: init: Ensure reserved memory regions are not added to bootmem
    
    
    [ Upstream commit e89ef66d7682f031f026eee6bba03c8c2248d2a9 ]
    
    Memories managed through boot_mem_map are generally expected to define
    non-crossing areas. However, if part of a larger memory block is marked
    as reserved, it would still be added to bootmem allocator as an
    available block and could end up being overwritten by the allocator.
    
    Prevent this by explicitly marking the memory as reserved it if exists
    in the range used by bootmem allocator.
    
    Signed-off-by: Marcin Nowakowski <marcin.nowakowski@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14608/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 623c6108c80d9919df98158eb52ee55b795beb4d
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Nov 7 11:14:09 2016 +0000

    MIPS: End asm function prologue macros with .insn
    
    
    [ Upstream commit 08889582b8aa0bbc01a1e5a0033b9f98d2e11caa ]
    
    When building a kernel targeting a microMIPS ISA, recent GNU linkers
    will fail the link if they cannot determine that the target of a branch
    or jump is microMIPS code, with errors such as the following:
    
        mips-img-linux-gnu-ld: arch/mips/built-in.o: .text+0x542c:
        Unsupported jump between ISA modes; consider recompiling with
        interlinking enabled.
        mips-img-linux-gnu-ld: final link failed: Bad value
    
    or:
    
        ./arch/mips/include/asm/uaccess.h:1017: warning: JALX to a
        non-word-aligned address
    
    Placing anything other than an instruction at the start of a function
    written in assembly appears to trigger such errors. In order to prepare
    for allowing us to follow function prologue macros with an EXPORT_SYMBOL
    invocation, end the prologue macros (LEAD, NESTED & FEXPORT) with a
    .insn directive. This ensures that the start of the function is marked
    as code, which always makes sense for functions & safely prevents us
    from hitting the link errors described above.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Reviewed-by: Maciej W. Rozycki <macro@imgtec.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/14508/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96f99bb96d9d3690dd099e4a9ee723377eea9f87
Author: Emil Tantilov <emil.s.tantilov@intel.com>
Date:   Fri Nov 11 10:07:47 2016 -0800

    ixgbe: handle close/suspend race with netif_device_detach/present
    
    
    [ Upstream commit f7f37e7ff2b9b7eff7fbd035569cab35896869a3 ]
    
    When an interface is part of a namespace it is possible that
    ixgbe_close() may be called while __ixgbe_shutdown() is running
    which ends up in a double free WARN and/or a BUG in free_msi_irqs().
    
    To handle this situation we extend the rtnl_lock() to protect the
    call to netif_device_detach() and ixgbe_clear_interrupt_scheme()
    in __ixgbe_shutdown() and check for netif_device_present()
    to avoid clearing the interrupts second time in ixgbe_close();
    
    Also extend the rtnl lock in ixgbe_resume() to netif_device_attach().
    
    Signed-off-by: Emil Tantilov <emil.s.tantilov@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0c60f54183970ee0f79e4fa595f9ea25fb2841d
Author: Emil Tantilov <emil.s.tantilov@intel.com>
Date:   Wed Nov 16 09:48:02 2016 -0800

    ixgbe: fix AER error handling
    
    
    [ Upstream commit 126db13fa0e6d05c9f94e0125f61e773bd5ab079 ]
    
    Make sure that we free the IRQs in ixgbe_io_error_detected() when
    responding to an PCIe AER error and also restore them when the
    interface recovers from it.
    
    Previously it was possible to trigger BUG_ON() check in free_msix_irqs()
    in the case where we call ixgbe_remove() after a failed recovery from
    AER error because the interrupts were not freed.
    
    Signed-off-by: Emil Tantilov <emil.s.tantilov@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31308442a25c9980259f0b7c795116e8353c1a3b
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Tue Jan 3 17:00:27 2017 +0530

    gpu: drm: mgag200: mgag200_main:- Handle error from pci_iomap
    
    
    [ Upstream commit 4b0ea93f250afc6c1128e201b0a8a115ae613e47 ]
    
    Here, pci_iomap can fail, handle this case and return -ENOMEM.
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/1483443027-13444-1-git-send-email-arvind.yadav.cs@gmail.com
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c141816f72880d3bf2b0b2f86935986348da39d2
Author: Alexey Khoroshilov <khoroshilov@ispras.ru>
Date:   Sat Jul 9 01:19:51 2016 +0300

    backlight: adp5520: Fix error handling in adp5520_bl_probe()
    
    
    [ Upstream commit 0eb3fba8c68275f0122f65f7316efaaf86448016 ]
    
    If adp5520_bl_setup() fails, sysfs group left unremoved.
    
    By the way, fix overcomplicated assignement of error code.
    
    Found by Linux Driver Verification project (linuxtesting.org).
    
    Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>
    Acked-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f213c377aaf7f36f0d523446a985462291cc474
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 6 19:33:05 2016 +0200

    backlight: lcd: Fix race condition during register
    
    
    [ Upstream commit cc21942bce652d1a92dae85b785378256e1df1f7 ]
    
    Once device_register is called for a device its attributes might be
    accessed. As the callbacks of a lcd device's attributes make use of the
    lcd_ops, the respective member must be setup before calling
    device_register.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 637661fadb01d7f33c549fa1506848a250a4b1d6
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 4 12:19:15 2017 +0100

    ALSA: vx: Fix possible transfer overflow
    
    
    [ Upstream commit 874e1f6fad9a5184b67f4cee37c1335cd2cc5677 ]
    
    The pseudo DMA transfer codes in VX222 and VX-pocket driver have a
    slight bug where they check the buffer boundary wrongly, and may
    overflow.  Also, the zero sample count might be handled badly for the
    playback (although it shouldn't happen in theory).  This patch
    addresses these issues.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=141541
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad550021c29227e60d8433fde31493bba100b3b1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jan 4 12:34:14 2017 +0100

    ALSA: vx: Don't try to update capture stream before running
    
    
    [ Upstream commit ed3c177d960bb5881b945ca6f784868126bb90db ]
    
    The update of stream costs significantly, and we should avoid it
    unless the stream really has started.  Check pipe->running flag
    instead of pipe->prepared.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7fc5d22fae5904b7ce7915456360e824fafefab
Author: James Smart <james.smart@broadcom.com>
Date:   Mon Dec 19 15:07:23 2016 -0800

    scsi: lpfc: Correct issue leading to oops during link reset
    
    
    [ Upstream commit e6c6acc0e0223ddaf867628d420ee196349c6fae ]
    
    Correct issue leading to oops during link reset. Missing vport pointer.
    
    [mkp: fixed typo]
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0e8131e652c48f44090e0d3df592b2cee04b4e4
Author: James Smart <james.smart@broadcom.com>
Date:   Mon Dec 19 15:07:24 2016 -0800

    scsi: lpfc: Correct host name in symbolic_name field
    
    
    [ Upstream commit 6c9231f604c2575be24c96d38deb70f145172f92 ]
    
    Correct host name in symbolic_name field of nameserver registrations
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee4961b9093fcb8061461224e0bf70e020a6a4e2
Author: James Smart <james.smart@broadcom.com>
Date:   Mon Dec 19 15:07:25 2016 -0800

    scsi: lpfc: FCoE VPort enable-disable does not bring up the VPort
    
    
    [ Upstream commit 104450eb08ca662e6b1d02da11aca9598e978f3e ]
    
    FCoE VPort enable-disable does not bring up the VPort.
    VPI structure needed to be initialized before being re-registered.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70e2afb4c9d98955bff8b9ed266872e7accde459
Author: James Smart <james.smart@broadcom.com>
Date:   Mon Dec 19 15:07:30 2016 -0800

    scsi: lpfc: Add missing memory barrier
    
    
    [ Upstream commit 6b3b3bdb83b4ad51252d21bb13596db879e51850 ]
    
    On loosely ordered memory systems (PPC for example), the WQE elements
    were being updated in memory, but not necessarily flushed before the
    separate doorbell was written to hw which would cause hw to dma the
    WQE element. Thus, the hardware occasionally received partially
    updated WQE data.
    
    Add the memory barrier after updating the WQE memory.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <james.smart@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3750dd19128e35e01678f7cc94f3298e63e5dbe
Author: Galo Navarro <anglorvaroa@gmail.com>
Date:   Tue Jan 3 23:12:09 2017 +0100

    staging: rtl8188eu: fix incorrect ERROR tags from logs
    
    
    [ Upstream commit 401579c22ccbcb54244494069973e64b1fe980d2 ]
    
    Several lifecycle events in the rtl8188eu driver are logged using the
    DBG_88E_LEVEL macro from rtw_debug.h, which is tagged as ERROR
    regardless of the actual level.  Below are dmesg excerpts after loading
    and unloading the module, the messages are misleading as there was no
    error.
    
        [517434.916239] usbcore: registered new interface driver r8188eu
        [517435.680653] R8188EU: ERROR indicate disassoc
        [517437.122606] R8188EU: ERROR assoc success
        [517797.735611] usbcore: deregistering interface driver r8188eu
        [517797.736069] R8188EU: ERROR indicate disassoc
    
    Remove the ERROR prefix from the logs.  After the patch, logs are:
    
        [517949.873976] usbcore: registered new interface driver r8188eu
        [517950.592845] R8188EU: indicate disassoc
        [517951.993973] R8188EU: assoc success
        [521778.784448] usbcore: deregistering interface driver r8188eu
        [521778.784838] R8188EU: indicate disassoc
    
    Signed-off-by: Galo Navarro <anglorvaroa@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 170c8c366ad4b23e285f37311ff106c3a6f737b1
Author: Hannu Lounento <hannu.lounento@ge.com>
Date:   Mon Jan 2 18:26:06 2017 +0100

    igb: Fix hw_dbg logging in igb_update_flash_i210
    
    
    [ Upstream commit 76ed5a8f47476e4984cc8c0c1bc4cee62650f7fd ]
    
    Fix an if statement with hw_dbg lines where the logic was inverted with
    regards to the corresponding return value used in the if statement.
    
    Signed-off-by: Hannu Lounento <hannu.lounento@ge.com>
    Signed-off-by: Peter Senna Tschudin <peter.senna@collabora.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d208b5adcf3199bb84b13c2b83d39886c0a4fb2
Author: Todd Fujinaka <todd.fujinaka@intel.com>
Date:   Tue Nov 15 08:54:26 2016 -0800

    igb: close/suspend race in netif_device_detach
    
    
    [ Upstream commit 9474933caf21a4cb5147223dca1551f527aaac36 ]
    
    Similar to ixgbe, when an interface is part of a namespace it is
    possible that igb_close() may be called while __igb_shutdown() is
    running which ends up in a double free WARN and/or a BUG in
    free_msi_irqs().
    
    Extend the rtnl_lock() to protect the call to netif_device_detach() and
    igb_clear_interrupt_scheme() in __igb_shutdown() and check for
    netif_device_present() to avoid calling igb_clear_interrupt_scheme() a
    second time in igb_close().
    
    Also extend the rtnl lock in igb_resume() to netif_device_attach().
    
    Signed-off-by: Todd Fujinaka <todd.fujinaka@intel.com>
    Acked-by: Alexander Duyck <alexander.h.duyck@intel.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5536a15a696a354f6839d1ab250a0b8fab7cb3b
Author: Aaron Sierra <asierra@xes-inc.com>
Date:   Tue Nov 29 10:03:56 2016 -0600

    igb: reset the PHY before reading the PHY ID
    
    
    [ Upstream commit 182785335447957409282ca745aa5bc3968facee ]
    
    Several people have reported firmware leaving the I210/I211 PHY's page
    select register set to something other than the default of zero. This
    causes the first accesses, PHY_IDx register reads, to access something
    else, resulting in device probe failure:
    
        igb: Intel(R) Gigabit Ethernet Network Driver - version 5.4.0-k
        igb: Copyright (c) 2007-2014 Intel Corporation.
        igb: probe of 0000:01:00.0 failed with error -2
    
    This problem began for them after a previous patch I submitted was
    applied:
    
        commit 2a3cdead8b408351fa1e3079b220fa331480ffbc
        Author: Aaron Sierra <asierra@xes-inc.com>
        Date:   Tue Nov 3 12:37:09 2015 -0600
    
            igb: Remove GS40G specific defines/functions
    
    I personally experienced this problem after attempting to PXE boot from
    I210 devices using this firmware:
    
        Intel(R) Boot Agent GE v1.5.78
        Copyright (C) 1997-2014, Intel Corporation
    
    Resetting the PHY before reading from it, ensures the page select
    register is in its default state and doesn't make assumptions about
    the PHY's register set before the PHY has been probed.
    
    Cc: Matwey V. Kornilov <matwey@sai.msu.ru>
    Cc: Chris Arges <carges@vectranetworks.com>
    Cc: Jochen Henneberg <jh@henneberg-systemdesign.com>
    Signed-off-by: Aaron Sierra <asierra@xes-inc.com>
    Tested-by: Matwey V. Kornilov <matwey@sai.msu.ru>
    Tested-by: Chris J Arges <christopherarges@gmail.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d881e89d38cdd4de8d9d5e55082a11650cd9a10
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Wed Dec 21 11:00:12 2016 +0530

    drm/sti: sti_vtg: Handle return NULL error from devm_ioremap_nocache
    
    
    [ Upstream commit 1ae0d5af347df224a6e76334683f13a96d915a44 ]
    
    Here, If devm_ioremap_nocache will fail. It will return NULL.
    Kernel can run into a NULL-pointer dereference. This error check
    will avoid NULL pointer dereference.
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Acked-by: Vincent Abriou <vincent.abriou@st.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45dce99ab8167986a98bb15ae8fdce73ff41b612
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Tue Jan 3 19:09:44 2017 +0100

    ata: SATA_MV should depend on HAS_DMA
    
    
    [ Upstream commit 62989cebd367a1aae1e009e1a5b1ec046a4c8fdc ]
    
    If NO_DMA=y:
    
        ERROR: "dma_pool_alloc" [drivers/ata/sata_mv.ko] undefined!
        ERROR: "dmam_pool_create" [drivers/ata/sata_mv.ko] undefined!
        ERROR: "dma_pool_free" [drivers/ata/sata_mv.ko] undefined!
    
    Add a dependency on HAS_DMA to fix this.
    
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 88b9e58302cffc88e91f77551538ef97f62b4cd0
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Tue Jan 3 19:09:45 2017 +0100

    ata: SATA_HIGHBANK should depend on HAS_DMA
    
    
    [ Upstream commit 2a736e0585e585c2566b5119af8381910a170e44 ]
    
    If NO_DMA=y:
    
        ERROR: "bad_dma_ops" [drivers/ata/sata_highbank.ko] undefined!
    
    Add a dependency on HAS_DMA to fix this.
    
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 674c5db9b8fc392942d7d3fbdaaaf0af55576022
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Tue Jan 3 19:09:46 2017 +0100

    ata: ATA_BMDMA should depend on HAS_DMA
    
    
    [ Upstream commit 7bc7ab1e63dfe004931502f90ce7020e375623da ]
    
    If NO_DMA=y:
    
        ERROR: "dmam_alloc_coherent" [drivers/ata/libata.ko] undefined!
    
    Add a dependency on HAS_DMA to fix this.
    
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fde1741984553fd9099aa9c936ed483652a88d0
Author: Tony Lindgren <tony@atomide.com>
Date:   Thu Jan 5 11:07:18 2017 -0800

    ARM: dts: Fix omap3 off mode pull defines
    
    
    [ Upstream commit d97556c8012015901a3ce77f46960078139cd79d ]
    
    We need to also have OFFPULLUDENABLE bit set to use the off mode pull values.
    Otherwise the line is pulled down internally if no external pull exists.
    
    This is has some documentation at:
    
    http://processors.wiki.ti.com/index.php/Optimizing_OMAP35x_and_AM/DM37x_OFF_mode_PAD_configuration
    
    Note that the value is still glitchy during off mode transitions as documented
    in spz319f.pdf "Advisory 1.45". It's best to use external pulls instead of
    relying on the internal ones for off mode and even then anything pulled up
    will get driven down momentarily on off mode restore for GPIO banks other
    than bank1.
    
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit daa36dd42767665901d126d1586a517c003ba528
Author: Tony Lindgren <tony@atomide.com>
Date:   Thu Jan 5 11:08:20 2017 -0800

    ARM: OMAP2+: Fix init for multiple quirks for the same SoC
    
    
    [ Upstream commit 6e613ebf4405fc09e2a8c16ed193b47f80a3cbed ]
    
    It's possible that there are multiple quirks that need to be initialized
    for the same SoC. Fix the issue by not returning on the first match.
    
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d487af849accc63ae2157d2edd95c0bcd688b55c
Author: Roger Quadros <rogerq@ti.com>
Date:   Thu Dec 8 10:45:31 2016 +0200

    extcon: palmas: Check the parent instance to prevent the NULL
    
    
    [ Upstream commit 9fe172b9be532acc23e35ba693700383ab775e66 ]
    
    extcon-palmas must be child of palmas and expects parent's
    drvdata to be valid. Check for non NULL parent drvdata and
    fail if it is NULL. Not doing so will result in a NULL
    pointer dereference later in the probe() parent drvdata
    is NULL (e.g. misplaced extcon-palmas node in device tree).
    
    Signed-off-by: Roger Quadros <rogerq@ti.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4273d07525354daf17258f4b8d7d11576e67375d
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Fri Aug 4 23:59:31 2017 -0700

    iscsi-target: Fix iscsi_np reset hung task during parallel delete
    
    commit 978d13d60c34818a41fc35962602bdfa5c03f214 upstream.
    
    This patch fixes a bug associated with iscsit_reset_np_thread()
    that can occur during parallel configfs rmdir of a single iscsi_np
    used across multiple iscsi-target instances, that would result in
    hung task(s) similar to below where configfs rmdir process context
    was blocked indefinately waiting for iscsi_np->np_restart_comp
    to finish:
    
    [ 6726.112076] INFO: task dcp_proxy_node_:15550 blocked for more than 120 seconds.
    [ 6726.119440]       Tainted: G        W  O     4.1.26-3321 #2
    [ 6726.125045] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [ 6726.132927] dcp_proxy_node_ D ffff8803f202bc88     0 15550      1 0x00000000
    [ 6726.140058]  ffff8803f202bc88 ffff88085c64d960 ffff88083b3b1ad0 ffff88087fffeb08
    [ 6726.147593]  ffff8803f202c000 7fffffffffffffff ffff88083f459c28 ffff88083b3b1ad0
    [ 6726.155132]  ffff88035373c100 ffff8803f202bca8 ffffffff8168ced2 ffff8803f202bcb8
    [ 6726.162667] Call Trace:
    [ 6726.165150]  [<ffffffff8168ced2>] schedule+0x32/0x80
    [ 6726.170156]  [<ffffffff8168f5b4>] schedule_timeout+0x214/0x290
    [ 6726.176030]  [<ffffffff810caef2>] ? __send_signal+0x52/0x4a0
    [ 6726.181728]  [<ffffffff8168d7d6>] wait_for_completion+0x96/0x100
    [ 6726.187774]  [<ffffffff810e7c80>] ? wake_up_state+0x10/0x10
    [ 6726.193395]  [<ffffffffa035d6e2>] iscsit_reset_np_thread+0x62/0xe0 [iscsi_target_mod]
    [ 6726.201278]  [<ffffffffa0355d86>] iscsit_tpg_disable_portal_group+0x96/0x190 [iscsi_target_mod]
    [ 6726.210033]  [<ffffffffa0363f7f>] lio_target_tpg_store_enable+0x4f/0xc0 [iscsi_target_mod]
    [ 6726.218351]  [<ffffffff81260c5a>] configfs_write_file+0xaa/0x110
    [ 6726.224392]  [<ffffffff811ea364>] vfs_write+0xa4/0x1b0
    [ 6726.229576]  [<ffffffff811eb111>] SyS_write+0x41/0xb0
    [ 6726.234659]  [<ffffffff8169042e>] system_call_fastpath+0x12/0x71
    
    It would happen because each iscsit_reset_np_thread() sets state
    to ISCSI_NP_THREAD_RESET, sends SIGINT, and then blocks waiting
    for completion on iscsi_np->np_restart_comp.
    
    However, if iscsi_np was active processing a login request and
    more than a single iscsit_reset_np_thread() caller to the same
    iscsi_np was blocked on iscsi_np->np_restart_comp, iscsi_np
    kthread process context in __iscsi_target_login_thread() would
    flush pending signals and only perform a single completion of
    np->np_restart_comp before going back to sleep within transport
    specific iscsit_transport->iscsi_accept_np code.
    
    To address this bug, add a iscsi_np->np_reset_count and update
    __iscsi_target_login_thread() to keep completing np->np_restart_comp
    until ->np_reset_count has reached zero.
    
    Reported-by: Gary Guo <ghg@datera.io>
    Tested-by: Gary Guo <ghg@datera.io>
    Cc: Mike Christie <mchristi@redhat.com>
    Cc: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49fc34138b882bb1c6f2ba20df5339bca8a9167e
Author: Andrey Konovalov <andreyknvl@google.com>
Date:   Thu Nov 2 10:38:21 2017 -0400

    media: dib0700: fix invalid dvb_detach argument
    
    commit eb0c19942288569e0ae492476534d5a485fb8ab4 upstream.
    
    dvb_detach(arg) calls symbol_put_addr(arg), where arg should be a pointer
    to a function. Right now a pointer to state->dib7000p_ops is passed to
    dvb_detach(), which causes a BUG() in symbol_put_addr() as discovered by
    syzkaller. Pass state->dib7000p_ops.set_wbd_ref instead.
    
    ------------[ cut here ]------------
    kernel BUG at kernel/module.c:1081!
    invalid opcode: 0000 [#1] PREEMPT SMP KASAN
    Modules linked in:
    CPU: 1 PID: 1151 Comm: kworker/1:1 Tainted: G        W
    4.14.0-rc1-42251-gebb2c2437d80 #224
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    Workqueue: usb_hub_wq hub_event
    task: ffff88006a336300 task.stack: ffff88006a7c8000
    RIP: 0010:symbol_put_addr+0x54/0x60 kernel/module.c:1083
    RSP: 0018:ffff88006a7ce210 EFLAGS: 00010246
    RAX: 0000000000000000 RBX: ffff880062a8d190 RCX: 0000000000000000
    RDX: dffffc0000000020 RSI: ffffffff85876d60 RDI: ffff880062a8d190
    RBP: ffff88006a7ce218 R08: 1ffff1000d4f9c12 R09: 1ffff1000d4f9ae4
    R10: 1ffff1000d4f9bed R11: 0000000000000000 R12: ffff880062a8d180
    R13: 00000000ffffffed R14: ffff880062a8d190 R15: ffff88006947c000
    FS:  0000000000000000(0000) GS:ffff88006c900000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f6416532000 CR3: 00000000632f5000 CR4: 00000000000006e0
    Call Trace:
     stk7070p_frontend_attach+0x515/0x610
    drivers/media/usb/dvb-usb/dib0700_devices.c:1013
     dvb_usb_adapter_frontend_init+0x32b/0x660
    drivers/media/usb/dvb-usb/dvb-usb-dvb.c:286
     dvb_usb_adapter_init drivers/media/usb/dvb-usb/dvb-usb-init.c:86
     dvb_usb_init drivers/media/usb/dvb-usb/dvb-usb-init.c:162
     dvb_usb_device_init+0xf70/0x17f0 drivers/media/usb/dvb-usb/dvb-usb-init.c:277
     dib0700_probe+0x171/0x5a0 drivers/media/usb/dvb-usb/dib0700_core.c:886
     usb_probe_interface+0x35d/0x8e0 drivers/usb/core/driver.c:361
     really_probe drivers/base/dd.c:413
     driver_probe_device+0x610/0xa00 drivers/base/dd.c:557
     __device_attach_driver+0x230/0x290 drivers/base/dd.c:653
     bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463
     __device_attach+0x26e/0x3d0 drivers/base/dd.c:710
     device_initial_probe+0x1f/0x30 drivers/base/dd.c:757
     bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523
     device_add+0xd0b/0x1660 drivers/base/core.c:1835
     usb_set_configuration+0x104e/0x1870 drivers/usb/core/message.c:1932
     generic_probe+0x73/0xe0 drivers/usb/core/generic.c:174
     usb_probe_device+0xaf/0xe0 drivers/usb/core/driver.c:266
     really_probe drivers/base/dd.c:413
     driver_probe_device+0x610/0xa00 drivers/base/dd.c:557
     __device_attach_driver+0x230/0x290 drivers/base/dd.c:653
     bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463
     __device_attach+0x26e/0x3d0 drivers/base/dd.c:710
     device_initial_probe+0x1f/0x30 drivers/base/dd.c:757
     bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523
     device_add+0xd0b/0x1660 drivers/base/core.c:1835
     usb_new_device+0x7b8/0x1020 drivers/usb/core/hub.c:2457
     hub_port_connect drivers/usb/core/hub.c:4903
     hub_port_connect_change drivers/usb/core/hub.c:5009
     port_event drivers/usb/core/hub.c:5115
     hub_event+0x194d/0x3740 drivers/usb/core/hub.c:5195
     process_one_work+0xc7f/0x1db0 kernel/workqueue.c:2119
     worker_thread+0x221/0x1850 kernel/workqueue.c:2253
     kthread+0x3a1/0x470 kernel/kthread.c:231
     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431
    Code: ff ff 48 85 c0 74 24 48 89 c7 e8 48 ea ff ff bf 01 00 00 00 e8
    de 20 e3 ff 65 8b 05 b7 2f c2 7e 85 c0 75 c9 e8 f9 0b c1 ff eb c2 <0f>
    0b 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 48 b8 00 00
    RIP: symbol_put_addr+0x54/0x60 RSP: ffff88006a7ce210
    ---[ end trace b75b357739e7e116 ]---
    
    Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b02dac504efc353e1e8507c10f835f09757b0068
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Mon Oct 9 20:14:48 2017 +0200

    media: imon: Fix null-ptr-deref in imon_probe
    
    commit 58fd55e838276a0c13d1dc7c387f90f25063cbf3 upstream.
    
    It seems that the return value of usb_ifnum_to_if() can be NULL and
    needs to be checked.
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
