commit c525532e4f872078206789f5bcd12bba7f689780
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 27 10:54:36 2022 +0100

    Linux 5.10.94
    
    Link: https://lore.kernel.org/r/20220124184024.407936072@linuxfoundation.org
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Link: https://lore.kernel.org/r/20220125155348.141138434@linuxfoundation.org
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Allen Pais <apais@linux.microsoft.com>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c76c132444df46992f112553e45a64015bfc1269
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Thu Jan 6 01:41:02 2022 +0100

    scripts: sphinx-pre-install: Fix ctex support on Debian
    
    commit 87d6576ddf8ac25f36597bc93ca17f6628289c16 upstream.
    
    The name of the package with ctexhook.sty is different on
    Debian/Ubuntu.
    
    Reported-by: Akira Yokosawa <akiyks@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Tested-by: Akira Yokosawa <akiyks@gmail.com>
    Link: https://lore.kernel.org/r/63882425609a2820fac78f5e94620abeb7ed5f6f.1641429634.git.mchehab@kernel.org
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 133cef0b6154cf71202462bb2738dbadd62b8198
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Mon Jan 3 22:01:57 2022 +0100

    scripts: sphinx-pre-install: add required ctex dependency
    
    commit 7baab965896eaeea60a54b8fe742feea2f79060f upstream.
    
    After a change meant to fix support for oriental characters
    (Chinese, Japanese, Korean), ctex stylesheet is now a requirement
    for PDF output.
    
    Reported-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Link: https://lore.kernel.org/r/165aa6167f21e3892a6e308688c93c756e94f4e0.1641243581.git.mchehab@kernel.org
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15ce9329a532e7d01d711fee0baeea2bba0abd40
Author: Fabio Estevam <festevam@denx.de>
Date:   Wed Nov 24 10:10:47 2021 -0300

    ath10k: Fix the MTU size on QCA9377 SDIO
    
    commit 09b8cd69edcf2be04a781e1781e98e52a775c9ad upstream.
    
    On an imx6dl-pico-pi board with a QCA9377 SDIO chip, simply trying to
    connect via ssh to another machine causes:
    
    [   55.824159] ath10k_sdio mmc1:0001:1: failed to transmit packet, dropping: -12
    [   55.832169] ath10k_sdio mmc1:0001:1: failed to submit frame: -12
    [   55.838529] ath10k_sdio mmc1:0001:1: failed to push frame: -12
    [   55.905863] ath10k_sdio mmc1:0001:1: failed to transmit packet, dropping: -12
    [   55.913650] ath10k_sdio mmc1:0001:1: failed to submit frame: -12
    [   55.919887] ath10k_sdio mmc1:0001:1: failed to push frame: -12
    
    , leading to an ssh connection failure.
    
    One user inspected the size of frames on Wireshark and reported
    the followig:
    
    "I was able to narrow the issue down to the mtu. If I set the mtu for
    the wlan0 device to 1486 instead of 1500, the issue does not happen.
    
    The size of frames that I see on Wireshark is exactly 1500 after
    setting it to 1486."
    
    Clearing the HI_ACS_FLAGS_ALT_DATA_CREDIT_SIZE avoids the problem and
    the ssh command works successfully after that.
    
    Introduce a 'credit_size_workaround' field to ath10k_hw_params for
    the QCA9377 SDIO, so that the HI_ACS_FLAGS_ALT_DATA_CREDIT_SIZE
    is not set in this case.
    
    Tested with QCA9377 SDIO with firmware WLAN.TF.1.1.1-00061-QCATFSWPZ-1.
    
    Fixes: 2f918ea98606 ("ath10k: enable alt data of TX path for sdio")
    Signed-off-by: Fabio Estevam <festevam@denx.de>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20211124131047.713756-1-festevam@denx.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25b1a6d330399e9d5f814b70523c55aebd3cb4a1
Author: Doyle, Patrick <pdoyle@irobot.com>
Date:   Tue Apr 6 10:47:08 2021 +0900

    mtd: nand: bbt: Fix corner case in bad block table handling
    
    commit fd0d8d85f7230052e638a56d1bfea170c488e6bc upstream.
    
    In the unlikely event that both blocks 10 and 11 are marked as bad (on a
    32 bit machine), then the process of marking block 10 as bad stomps on
    cached entry for block 11.  There are (of course) other examples.
    
    Signed-off-by: Patrick Doyle <pdoyle@irobot.com>
    Reviewed-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Yoshio Furuyama <ytc-mb-yfuruyama7@kioxia.com>
    [<miquel.raynal@bootlin.com>: Fixed the title]
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Cc: Frieder Schrempf <frieder.schrempf@kontron.de>
    Link: https://lore.kernel.org/linux-mtd/774a92693f311e7de01e5935e720a179fb1b2468.1616635406.git.ytc-mb-yfuruyama7@kioxia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8104e589fa4aeb2f472ca02a8702070a00f14854
Author: Andrey Konovalov <andreyknvl@gmail.com>
Date:   Wed Jan 19 18:09:28 2022 -0800

    lib/test_meminit: destroy cache in kmem_cache_alloc_bulk() test
    
    commit e073e5ef90298d2d6e5e7f04b545a0815e92110c upstream.
    
    Make do_kmem_cache_size_bulk() destroy the cache it creates.
    
    Link: https://lkml.kernel.org/r/aced20a94bf04159a139f0846e41d38a1537debb.1640018297.git.andreyknvl@google.com
    Fixes: 03a9349ac0e0 ("lib/test_meminit: add a kmem_cache_alloc_bulk() test")
    Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
    Reviewed-by: Marco Elver <elver@google.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62925037005243c57067a5b81764a0c0ca93d580
Author: Alistair Popple <apopple@nvidia.com>
Date:   Fri Jan 14 14:09:31 2022 -0800

    mm/hmm.c: allow VM_MIXEDMAP to work with hmm_range_fault
    
    commit 87c01d57fa23de82fff593a7d070933d08755801 upstream.
    
    hmm_range_fault() can be used instead of get_user_pages() for devices
    which allow faulting however unlike get_user_pages() it will return an
    error when used on a VM_MIXEDMAP range.
    
    To make hmm_range_fault() more closely match get_user_pages() remove
    this restriction.  This requires dealing with the !ARCH_HAS_PTE_SPECIAL
    case in hmm_vma_handle_pte().  Rather than replicating the logic of
    vm_normal_page() call it directly and do a check for the zero pfn
    similar to what get_user_pages() currently does.
    
    Also add a test to hmm selftest to verify functionality.
    
    Link: https://lkml.kernel.org/r/20211104012001.2555676-1-apopple@nvidia.com
    Fixes: da4c3c735ea4 ("mm/hmm/mirror: helper to snapshot CPU page table")
    Signed-off-by: Alistair Popple <apopple@nvidia.com>
    Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
    Cc: Jerome Glisse <jglisse@redhat.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Cc: Ralph Campbell <rcampbell@nvidia.com>
    Cc: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 33bb7f027b069530110ec533829e65f22db8c8ff
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jan 14 06:57:24 2022 +0000

    lib82596: Fix IRQ check in sni_82596_probe
    
    commit 99218cbf81bf21355a3de61cd46a706d36e900e6 upstream.
    
    platform_get_irq() returns negative error number instead 0 on failure.
    And the doc of platform_get_irq() provides a usage example:
    
        int irq = platform_get_irq(pdev, 0);
        if (irq < 0)
            return irq;
    
    Fix the check of return value to catch errors correctly.
    
    Fixes: 115978859272 ("i825xx: Move the Intel 82586/82593/82596 based drivers")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 078b5a4498e066fdc9869366d8ffc4d01b1db1c8
Author: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
Date:   Thu Jan 13 09:19:18 2022 +0100

    scripts/dtc: dtx_diff: remove broken example from help text
    
    commit d8adf5b92a9d2205620874d498c39923ecea8749 upstream.
    
    dtx_diff suggests to use <(...) syntax to pipe two inputs into it, but
    this has never worked: The /proc/self/fds/... paths passed by the shell
    will fail the `[ -f "${dtx}" ] && [ -r "${dtx}" ]` check in compile_to_dts,
    but even with this check removed, the function cannot work: hexdump will
    eat up the DTB magic, making the subsequent dtc call fail, as a pipe
    cannot be rewound.
    
    Simply remove this broken example, as there is already an alternative one
    that works fine.
    
    Fixes: 10eadc253ddf ("dtc: create tool to diff device trees")
    Signed-off-by: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
    Reviewed-by: Frank Rowand <frank.rowand@sony.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/r/20220113081918.10387-1-matthias.schiffer@ew.tq-group.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21513c4615575c0b1640ddeb2114242de4ddf58c
Author: Sam Protsenko <semen.protsenko@linaro.org>
Date:   Sun Nov 21 18:56:36 2021 +0200

    dt-bindings: watchdog: Require samsung,syscon-phandle for Exynos7
    
    commit 33950f9a36aca55c2b1e6062d9b29f3e97f91c40 upstream.
    
    Exynos7 watchdog driver is clearly indicating that its dts node must
    define syscon phandle property. That was probably forgotten, so add it.
    
    Signed-off-by: Sam Protsenko <semen.protsenko@linaro.org>
    Fixes: 2b9366b66967 ("watchdog: s3c2410_wdt: Add support for Watchdog device on Exynos7")
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20211107202943.8859-2-semen.protsenko@linaro.org
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 23bcf3615be7fe43026848a5a437767bac6a4c1e
Author: Alexander Stein <alexander.stein@mailbox.org>
Date:   Sun Dec 19 10:41:55 2021 +0100

    dt-bindings: display: meson-vpu: Add missing amlogic,canvas property
    
    commit 640f35b871d29cd685ce0ea0762636381beeb98a upstream.
    
    This property was already mentioned in the old textual bindings
    amlogic,meson-vpu.txt, but got dropped during conversion.
    Adding it back similar to amlogic,gx-vdec.yaml.
    
    Fixes: 6b9ebf1e0e67 ("dt-bindings: display: amlogic, meson-vpu: convert to yaml")
    Signed-off-by: Alexander Stein <alexander.stein@mailbox.org>
    Acked-by: Rob Herring <robh@kernel.org>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211219094155.177206-1-alexander.stein@mailbox.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66467cc87a353e4883af35b2d64ce0f6ac6e4bbb
Author: Alexander Stein <alexander.stein@mailbox.org>
Date:   Thu Dec 23 13:24:32 2021 +0100

    dt-bindings: display: meson-dw-hdmi: add missing sound-name-prefix property
    
    commit 22bf4047d26980807611b7e2030803db375afd87 upstream.
    
    This is used in meson-gx and meson-g12. Add the property to the binding.
    This fixes the dtschema warning:
    hdmi-tx@c883a000: 'sound-name-prefix' does not match any of the
    regexes: 'pinctrl-[0-9]+'
    
    Signed-off-by: Alexander Stein <alexander.stein@mailbox.org>
    Fixes: 376bf52deef5 ("dt-bindings: display: amlogic, meson-dw-hdmi: convert to yaml")
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211223122434.39378-2-alexander.stein@mailbox.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4496e4a427a03a73de818926946b4bf52579b95f
Author: Tom Rix <trix@redhat.com>
Date:   Tue Jan 18 05:41:10 2022 -0800

    net: mscc: ocelot: fix using match before it is set
    
    commit baa59504c1cd0cca7d41954a45ee0b3dc78e41a0 upstream.
    
    Clang static analysis reports this issue
    ocelot_flower.c:563:8: warning: 1st function call argument
      is an uninitialized value
        !is_zero_ether_addr(match.mask->dst)) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    The variable match is used before it is set.  So move the
    block.
    
    Fixes: 75944fda1dfe ("net: mscc: ocelot: offload ingress skbedit and vlan actions to VCAP IS1")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee64479c9ce62eedd1a2d5ab26d93aff58d68c19
Author: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
Date:   Mon Jan 17 14:52:33 2022 +0000

    net: sfp: fix high power modules without diagnostic monitoring
    
    commit 5765cee119bf5a36c94d20eceb37c445508934be upstream.
    
    Commit 7cfa9c92d0a3 ("net: sfp: avoid power switch on address-change
    modules") unintetionally changed the semantics for high power modules
    without the digital diagnostics monitoring. We repeatedly attempt to
    read the power status from the non-existing 0xa2 address in a futile
    hope this failure is temporary:
    
    [    8.856051] sfp sfp-eth3: module NTT              0000000000000000 rev 0000  sn 0000000000000000 dc 160408
    [    8.865843] mvpp2 f4000000.ethernet eth3: switched to inband/1000base-x link mode
    [    8.873469] sfp sfp-eth3: Failed to read EEPROM: -5
    [    8.983251] sfp sfp-eth3: Failed to read EEPROM: -5
    [    9.103250] sfp sfp-eth3: Failed to read EEPROM: -5
    
    We previosuly assumed such modules were powered up in the correct mode,
    continuing without further configuration as long as the required power
    class was supported by the host.
    
    Restore this behaviour, while preserving the intent of subsequent
    patches to avoid the "Address Change Sequence not supported" warning
    if we are not going to be accessing the DDM address.
    
    Fixes: 7cfa9c92d0a3 ("net: sfp: avoid power switch on address-change modules")
    Reported-by: 照山周一郎 <teruyama@springboard-inc.jp>
    Tested-by: 照山周一郎 <teruyama@springboard-inc.jp>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 819e76bc572e373db88956ddc219e9976b16a10f
Author: Tom Rix <trix@redhat.com>
Date:   Sat Jan 15 09:49:18 2022 -0800

    net: ethernet: mtk_eth_soc: fix error checking in mtk_mac_config()
    
    commit 214b3369ab9b0a6f28d6c970220c209417edbc65 upstream.
    
    Clang static analysis reports this problem
    mtk_eth_soc.c:394:7: warning: Branch condition evaluates
      to a garbage value
                    if (err)
                        ^~~
    
    err is not initialized and only conditionally set.
    So intitialize err.
    
    Fixes: 7e538372694b ("net: ethernet: mediatek: Re-add support SGMII")
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4691c9f047a809693ac4efbc441e29b7dbb0cdca
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Thu Jan 13 22:46:07 2022 +0300

    bcmgenet: add WOL IRQ check
    
    commit 9deb48b53e7f4056c2eaa2dc2ee3338df619e4f6 upstream.
    
    The driver neglects to check the result of platform_get_irq_optional()'s
    call and blithely passes the negative error codes to devm_request_irq()
    (which takes *unsigned* IRQ #), causing it to fail with -EINVAL.
    Stop calling devm_request_irq() with the invalid IRQ #s.
    
    Fixes: 8562056f267d ("net: bcmgenet: request Wake-on-LAN interrupt")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6973b38b9dbacda311c7663a9c297fa95033687a
Author: Kevin Bracey <kevin@bracey.fi>
Date:   Wed Jan 12 19:02:10 2022 +0200

    net_sched: restore "mpu xxx" handling
    
    commit fb80445c438c78b40b547d12b8d56596ce4ccfeb upstream.
    
    commit 56b765b79e9a ("htb: improved accuracy at high rates") broke
    "overhead X", "linklayer atm" and "mpu X" attributes.
    
    "overhead X" and "linklayer atm" have already been fixed. This restores
    the "mpu X" handling, as might be used by DOCSIS or Ethernet shaping:
    
        tc class add ... htb rate X overhead 4 mpu 64
    
    The code being fixed is used by htb, tbf and act_police. Cake has its
    own mpu handling. qdisc_calculate_pkt_len still uses the size table
    containing values adjusted for mpu by user space.
    
    iproute2 tc has always passed mpu into the kernel via a tc_ratespec
    structure, but the kernel never directly acted on it, merely stored it
    so that it could be read back by `tc class show`.
    
    Rather, tc would generate length-to-time tables that included the mpu
    (and linklayer) in their construction, and the kernel used those tables.
    
    Since v3.7, the tables were no longer used. Along with "mpu", this also
    broke "overhead" and "linklayer" which were fixed in 01cb71d2d47b
    ("net_sched: restore "overhead xxx" handling", v3.10) and 8a8e3d84b171
    ("net_sched: restore "linklayer atm" handling", v3.11).
    
    "overhead" was fixed by simply restoring use of tc_ratespec::overhead -
    this had originally been used by the kernel but was initially omitted
    from the new non-table-based calculations.
    
    "linklayer" had been handled in the table like "mpu", but the mode was
    not originally passed in tc_ratespec. The new implementation was made to
    handle it by getting new versions of tc to pass the mode in an extended
    tc_ratespec, and for older versions of tc the table contents were analysed
    at load time to deduce linklayer.
    
    As "mpu" has always been given to the kernel in tc_ratespec,
    accompanying the mpu-based table, we can restore system functionality
    with no userspace change by making the kernel act on the tc_ratespec
    value.
    
    Fixes: 56b765b79e9a ("htb: improved accuracy at high rates")
    Signed-off-by: Kevin Bracey <kevin@bracey.fi>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Jiri Pirko <jiri@resnulli.us>
    Cc: Vimalkumar <j.vimal@gmail.com>
    Link: https://lore.kernel.org/r/20220112170210.1014351-1-kevin@bracey.fi
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20949c3816463e97c6f8fe84c0280c7e5ae83a8d
Author: Jie Wang <wangjie125@huawei.com>
Date:   Wed Jan 12 20:54:18 2022 +0800

    net: bonding: fix bond_xmit_broadcast return value error bug
    
    commit 4e5bd03ae34652cd932ab4c91c71c511793df75c upstream.
    
    In Linux bonding scenario, one packet is copied to several copies and sent
    by all slave device of bond0 in mode 3(broadcast mode). The mode 3 xmit
    function bond_xmit_broadcast() only ueses the last slave device's tx result
    as the final result. In this case, if the last slave device is down, then
    it always return NET_XMIT_DROP, even though the other slave devices xmit
    success. It may cause the tx statistics error, and cause the application
    (e.g. scp) consider the network is unreachable.
    
    For example, use the following command to configure server A.
    
    echo 3 > /sys/class/net/bond0/bonding/mode
    ifconfig bond0 up
    ifenslave bond0 eth0 eth1
    ifconfig bond0 192.168.1.125
    ifconfig eth0 up
    ifconfig eth1 down
    The slave device eth0 and eth1 are connected to server B(192.168.1.107).
    Run the ping 192.168.1.107 -c 3 -i 0.2 command, the following information
    is displayed.
    
    PING 192.168.1.107 (192.168.1.107) 56(84) bytes of data.
    64 bytes from 192.168.1.107: icmp_seq=1 ttl=64 time=0.077 ms
    64 bytes from 192.168.1.107: icmp_seq=2 ttl=64 time=0.056 ms
    64 bytes from 192.168.1.107: icmp_seq=3 ttl=64 time=0.051 ms
    
     192.168.1.107 ping statistics
    0 packets transmitted, 3 received
    
    Actually, the slave device eth0 of the bond successfully sends three
    ICMP packets, but the result shows that 0 packets are transmitted.
    
    Also if we use scp command to get remote files, the command end with the
    following printings.
    
    ssh_exchange_identification: read: Connection timed out
    
    So this patch modifies the bond_xmit_broadcast to return NET_XMIT_SUCCESS
    if one slave device in the bond sends packets successfully. If all slave
    devices send packets fail, the discarded packets stats is increased. The
    skb is released when there is no slave device in the bond or the last slave
    device is down.
    
    Fixes: ae46f184bc1f ("bonding: propagate transmit status")
    Signed-off-by: Jie Wang <wangjie125@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 799730d182d1bc76216e45350b96eb09eeabcf94
Author: David Heidelberg <david@ixit.cz>
Date:   Sat Oct 30 12:04:12 2021 +0200

    arm64: dts: qcom: msm8996: drop not documented adreno properties
    
    commit c41910f257a22dc406c60d8826b4a3b5398003a3 upstream.
    
    These properties aren't documented nor implemented in the driver.
    Drop them.
    
    Fixes warnings as:
    $ make dtbs_check DT_SCHEMA_FILES=Documentation/devicetree/bindings/display/msm/gpu.yaml
    ...
    arch/arm64/boot/dts/qcom/msm8996-mtp.dt.yaml: gpu@b00000: 'qcom,gpu-quirk-fault-detect-mask', 'qcom,gpu-quirk-two-pass-use-wfi' do not match any of the regexes: 'pinctrl-[0-9]+'
            From schema: Documentation/devicetree/bindings/display/msm/gpu.yaml
    ...
    
    Fixes: 69cc3114ab0f ("arm64: dts: Add Adreno GPU definitions")
    Signed-off-by: David Heidelberg <david@ixit.cz>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20211030100413.28370-1-david@ixit.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6d4c0e017ec34f6f356d34d93776575dc174b82
Author: Leon Romanovsky <leon@kernel.org>
Date:   Sun Nov 28 14:14:46 2021 +0200

    devlink: Remove misleading internal_flags from health reporter dump
    
    commit e9538f8270db24d272659e15841854c7ea11119e upstream.
    
    DEVLINK_CMD_HEALTH_REPORTER_DUMP_GET command doesn't have .doit callback
    and has no use in internal_flags at all. Remove this misleading assignment.
    
    Fixes: e44ef4e4516c ("devlink: Hang reporter's dump method on a dumpit cb")
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e51a761b7ab71458b50441f1357bb3dd60927c8
Author: Zechuan Chen <chenzechuan1@huawei.com>
Date:   Tue Dec 28 19:13:38 2021 +0800

    perf probe: Fix ppc64 'perf probe add events failed' case
    
    commit 4624f199327a704dd1069aca1c3cadb8f2a28c6f upstream.
    
    Because of commit bf794bf52a80c627 ("powerpc/kprobes: Fix kallsyms
    lookup across powerpc ABIv1 and ABIv2"), in ppc64 ABIv1, our perf
    command eliminates the need to use the prefix "." at the symbol name.
    
    But when the command "perf probe -a schedule" is executed on ppc64
    ABIv1, it obtains two symbol address information through /proc/kallsyms,
    for example:
    
      cat /proc/kallsyms | grep -w schedule
      c000000000657020 T .schedule
      c000000000d4fdb8 D schedule
    
    The symbol "D schedule" is not a function symbol, and perf will print:
    "p:probe/schedule _text+13958584"Failed to write event: Invalid argument
    
    Therefore, when searching symbols from map and adding probe point for
    them, a symbol type check is added. If the type of symbol is not a
    function, skip it.
    
    Fixes: bf794bf52a80c627 ("powerpc/kprobes: Fix kallsyms lookup across powerpc ABIv1 and ABIv2")
    Signed-off-by: Zechuan Chen <chenzechuan1@huawei.com>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jianlin Lv <Jianlin.Lv@arm.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Cc: Yang Jihong <yangjihong1@huawei.com>
    Link: https://lore.kernel.org/r/20211228111338.218602-1-chenzechuan1@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59b44f77601db14829214443930aef970f3d6fb6
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Wed Dec 15 13:01:13 2021 +0200

    dmaengine: at_xdmac: Fix at_xdmac_lld struct definition
    
    commit 912f7c6f7fac273f40e621447cf17d14b50d6e5b upstream.
    
    The hardware channel next descriptor view structure contains just
    fields of 32 bits, while dma_addr_t can be of type u64 or u32
    depending on CONFIG_ARCH_DMA_ADDR_T_64BIT. Force u32 to comply with
    what the hardware expects.
    
    Fixes: e1f7c9eee707 ("dmaengine: at_xdmac: creation of the atmel eXtended DMA Controller driver")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Link: https://lore.kernel.org/r/20211215110115.191749-11-tudor.ambarus@microchip.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0078f053714da624ac2d088c0f37bf81ed3ecf27
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Wed Dec 15 13:01:12 2021 +0200

    dmaengine: at_xdmac: Fix lld view setting
    
    commit 1385eb4d14d447cc5d744bc2ac34f43be66c9963 upstream.
    
    AT_XDMAC_CNDC_NDVIEW_NDV3 was set even for AT_XDMAC_MBR_UBC_NDV2,
    because of the wrong bit handling. Fix it.
    
    Fixes: ee0fe35c8dcd ("dmaengine: xdmac: Handle descriptor's view 3 registers")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Link: https://lore.kernel.org/r/20211215110115.191749-10-tudor.ambarus@microchip.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ab120636d4ef854d468d8025006ef3fe2750db9
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Wed Dec 15 13:01:10 2021 +0200

    dmaengine: at_xdmac: Fix concurrency over xfers_list
    
    commit 18deddea9184b62941395889ff7659529c877326 upstream.
    
    Since tx_submit can be called from a hard IRQ, xfers_list must be
    protected with a lock to avoid concurency on the list's elements.
    Since at_xdmac_handle_cyclic() is called from a tasklet, spin_lock_irq
    is enough to protect from a hard IRQ.
    
    Fixes: e1f7c9eee707 ("dmaengine: at_xdmac: creation of the atmel eXtended DMA Controller driver")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Link: https://lore.kernel.org/r/20211215110115.191749-8-tudor.ambarus@microchip.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5b27c5e3315998991fb59fc62feaf97f577b189
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Wed Dec 15 13:01:06 2021 +0200

    dmaengine: at_xdmac: Print debug message after realeasing the lock
    
    commit 5edc24ac876a928f36f407a0fcdb33b94a3a210f upstream.
    
    It is desirable to do the prints without the lock held if possible, so
    move the print after the lock is released.
    
    Fixes: e1f7c9eee707 ("dmaengine: at_xdmac: creation of the atmel eXtended DMA Controller driver")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Link: https://lore.kernel.org/r/20211215110115.191749-4-tudor.ambarus@microchip.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c536b351a75fb84220e1686a82a495972077229a
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Wed Dec 15 13:01:05 2021 +0200

    dmaengine: at_xdmac: Start transfer for cyclic channels in issue_pending
    
    commit e6af9b05bec63cd4d1de2a33968cd0be2a91282a upstream.
    
    Cyclic channels must too call issue_pending in order to start a transfer.
    Start the transfer in issue_pending regardless of the type of channel.
    This wrongly worked before, because in the past the transfer was started
    at tx_submit level when only a desc in the transfer list.
    
    Fixes: e1f7c9eee707 ("dmaengine: at_xdmac: creation of the atmel eXtended DMA Controller driver")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Link: https://lore.kernel.org/r/20211215110115.191749-3-tudor.ambarus@microchip.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd22e22e8eac2db210d7040757963fab6e1d8aa0
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Wed Dec 15 13:01:04 2021 +0200

    dmaengine: at_xdmac: Don't start transactions at tx_submit level
    
    commit bccfb96b59179d4f96cbbd1ddff8fac6d335eae4 upstream.
    
    tx_submit is supposed to push the current transaction descriptor to a
    pending queue, waiting for issue_pending() to be called. issue_pending()
    must start the transfer, not tx_submit(), thus remove
    at_xdmac_start_xfer() from at_xdmac_tx_submit(). Clients of at_xdmac that
    assume that tx_submit() starts the transfer must be updated and call
    dma_async_issue_pending() if they miss to call it (one example is
    atmel_serial).
    
    As the at_xdmac_start_xfer() is now called only from
    at_xdmac_advance_work() when !at_xdmac_chan_is_enabled(), the
    at_xdmac_chan_is_enabled() check is no longer needed in
    at_xdmac_start_xfer(), thus remove it.
    
    Fixes: e1f7c9eee707 ("dmaengine: at_xdmac: creation of the atmel eXtended DMA Controller driver")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Link: https://lore.kernel.org/r/20211215110115.191749-2-tudor.ambarus@microchip.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68a83051c8b1dbc87221a7cf429e8b8e23cdcffb
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Wed Jan 12 10:50:57 2022 +0200

    perf script: Fix hex dump character output
    
    commit 62942e9fda9fd1def10ffcbd5e1c025b3c9eec17 upstream.
    
    Using grep -C with perf script -D can give erroneous results as grep loses
    lines due to non-printable characters, for example, below the 0020, 0060
    and 0070 lines are missing:
    
     $ perf script -D | grep -C10 AUX | head
     .  0010:  08 00 00 00 00 00 00 00 1f 00 00 00 00 00 00 00  ................
     .  0030:  01 00 00 00 00 00 00 00 00 04 00 00 00 00 00 00  ................
     .  0040:  00 08 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
     .  0050:  00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
     .  0080:  02 00 00 00 00 00 00 00 1b 00 00 00 00 00 00 00  ................
     .  0090:  00 00 00 00 00 00 00 00                          ........
    
     0 0 0x450 [0x98]: PERF_RECORD_AUXTRACE_INFO type: 1
       PMU Type            8
       Time Shift          31
    
    perf's isprint() is a custom implementation from the kernel, but the
    kernel's _ctype appears to include characters from Latin-1 Supplement which
    is not compatible with, for example, UTF-8. Fix by checking also isascii().
    
    After:
    
     $ tools/perf/perf script -D | grep -C10 AUX | head
     .  0010:  08 00 00 00 00 00 00 00 1f 00 00 00 00 00 00 00  ................
     .  0020:  03 84 32 2f 00 00 00 00 63 7c 4f d2 fa ff ff ff  ..2/....c|O.....
     .  0030:  01 00 00 00 00 00 00 00 00 04 00 00 00 00 00 00  ................
     .  0040:  00 08 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
     .  0050:  00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
     .  0060:  00 02 00 00 00 00 00 00 00 c0 03 00 00 00 00 00  ................
     .  0070:  e2 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
     .  0080:  02 00 00 00 00 00 00 00 1b 00 00 00 00 00 00 00  ................
     .  0090:  00 00 00 00 00 00 00 00                          ........
    
    Fixes: 3052ba56bcb58904 ("tools perf: Move from sane_ctype.h obtained from git to the Linux's original")
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Link: http://lore.kernel.org/lkml/20220112085057.277205-1-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b9d40e9f60d3fdc2a130b943223308c338fc49d
Author: Guillaume Nault <gnault@redhat.com>
Date:   Mon Jan 10 14:43:11 2022 +0100

    libcxgb: Don't accidentally set RTO_ONLINK in cxgb_find_route()
    
    commit a915deaa9abe4fb3a440312c954253a6a733608e upstream.
    
    Mask the ECN bits before calling ip_route_output_ports(). The tos
    variable might be passed directly from an IPv4 header, so it may have
    the last ECN bit set. This interferes with the route lookup process as
    ip_route_output_key_hash() interpretes this bit specially (to restrict
    the route scope).
    
    Found by code inspection, compile tested only.
    
    Fixes: 804c2f3e36ef ("libcxgb,iw_cxgb4,cxgbit: add cxgb_find_route()")
    Signed-off-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd5c24d2230f418159d46766b2705a6058cf8650
Author: Guillaume Nault <gnault@redhat.com>
Date:   Mon Jan 10 14:43:09 2022 +0100

    gre: Don't accidentally set RTO_ONLINK in gre_fill_metadata_dst()
    
    commit f7716b318568b22fbf0e3be99279a979e217cf71 upstream.
    
    Mask the ECN bits before initialising ->flowi4_tos. The tunnel key may
    have the last ECN bit set, which will interfere with the route lookup
    process as ip_route_output_key_hash() interpretes this bit specially
    (to restrict the route scope).
    
    Found by code inspection, compile tested only.
    
    Fixes: 962924fa2b7a ("ip_gre: Refactor collect metatdata mode tunnel xmit to ip_md_tunnel_xmit")
    Signed-off-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f2ca96bd26644517ab03357bcf2982cf79c2ff7
Author: Guillaume Nault <gnault@redhat.com>
Date:   Mon Jan 10 14:43:06 2022 +0100

    xfrm: Don't accidentally set RTO_ONLINK in decode_session4()
    
    commit 23e7b1bfed61e301853b5e35472820d919498278 upstream.
    
    Similar to commit 94e2238969e8 ("xfrm4: strip ECN bits from tos field"),
    clear the ECN bits from iph->tos when setting ->flowi4_tos.
    This ensures that the last bit of ->flowi4_tos is cleared, so
    ip_route_output_key_hash() isn't going to restrict the scope of the
    route lookup.
    
    Use ~INET_ECN_MASK instead of IPTOS_RT_MASK, because we have no reason
    to clear the high order bits.
    
    Found by code inspection, compile tested only.
    
    Fixes: 4da3089f2b58 ("[IPSEC]: Use TOS when doing tunnel lookups")
    Signed-off-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b1415c60b2e4aff93f790a7ae374dd6ef20d3a5
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Jan 18 03:43:40 2022 -0800

    netns: add schedule point in ops_exit_list()
    
    commit 2836615aa22de55b8fca5e32fe1b27a67cda625e upstream.
    
    When under stress, cleanup_net() can have to dismantle
    netns in big numbers. ops_exit_list() currently calls
    many helpers [1] that have no schedule point, and we can
    end up with soft lockups, particularly on hosts
    with many cpus.
    
    Even for moderate amount of netns processed by cleanup_net()
    this patch avoids latency spikes.
    
    [1] Some of these helpers like fib_sync_up() and fib_sync_down_dev()
    are very slow because net/ipv4/fib_semantics.c uses host-wide hash tables,
    and ifindex is used as the only input of two hash functions.
        ifindexes tend to be the same for all netns (lo.ifindex==1 per instance)
        This will be fixed in a separate patch.
    
    Fixes: 72ad937abd0a ("net: Add support for batching network namespace cleanups")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edc09548ffc52433ed25ef4a829e664e353f615d
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Jan 13 01:22:29 2022 -0800

    inet: frags: annotate races around fqdir->dead and fqdir->high_thresh
    
    commit 91341fa0003befd097e190ec2a4bf63ad957c49a upstream.
    
    Both fields can be read/written without synchronization,
    add proper accessors and documentation.
    
    Fixes: d5dd88794a13 ("inet: fix various use-after-free in defrags units")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 69e7e979ed668656551ca141dc235a756da32eb0
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Jan 3 11:32:36 2022 -0600

    taskstats: Cleanup the use of task->exit_code
    
    commit 1b5a42d9c85f0e731f01c8d1129001fd8531a8a0 upstream.
    
    In the function bacct_add_task the code reading task->exit_code was
    introduced in commit f3cef7a99469 ("[PATCH] csa: basic accounting over
    taskstats"), and it is not entirely clear what the taskstats interface
    is trying to return as only returning the exit_code of the first task
    in a process doesn't make a lot of sense.
    
    As best as I can figure the intent is to return task->exit_code after
    a task exits.  The field is returned with per task fields, so the
    exit_code of the entire process is not wanted.  Only the value of the
    first task is returned so this is not a useful way to get the per task
    ptrace stop code.  The ordinary case of returning this value is
    returning after a task exits, which also precludes use for getting
    a ptrace value.
    
    It is common to for the first task of a process to also be the last
    task of a process so this field may have done something reasonable by
    accident in testing.
    
    Make ac_exitcode a reliable per task value by always returning it for
    every exited task.
    
    Setting ac_exitcode in a sensible mannter makes it possible to continue
    to provide this value going forward.
    
    Cc: Balbir Singh <bsingharora@gmail.com>
    Fixes: f3cef7a99469 ("[PATCH] csa: basic accounting over taskstats")
    Link: https://lkml.kernel.org/r/20220103213312.9144-5-ebiederm@xmission.com
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56daa21414e9cf66131de3458ba389a1f3a9c690
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Thu Jan 6 07:57:46 2022 -0500

    virtio_ring: mark ring unused on error
    
    commit 1861ba626ae9b98136f3e504208cdef6b29cd3ec upstream.
    
    A recently added error path does not mark ring unused when exiting on
    OOM, which will lead to BUG on the next entry in debug builds.
    
    TODO: refactor code so we have START_USE and END_USE in the same function.
    
    Fixes: fc6d70f40b3d ("virtio_ring: check desc == NULL when using indirect with packed")
    Cc: "Xuan Zhuo" <xuanzhuo@linux.alibaba.com>
    Cc: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c4ebcb00d8871ed4b9916072d1d177c33bd43e3
Author: Eli Cohen <elic@nvidia.com>
Date:   Thu Dec 30 16:20:24 2021 +0200

    vdpa/mlx5: Fix wrong configuration of virtio_version_1_0
    
    commit 97143b70aa847f2b0a1f959dde126b76ff7b5376 upstream.
    
    Remove overriding of virtio_version_1_0 which forced the virtqueue
    object to version 1.
    
    Fixes: 1a86b377aa21 ("vdpa/mlx5: Add VDPA driver for supported mlx5 devices")
    Signed-off-by: Eli Cohen <elic@nvidia.com>
    Link: https://lore.kernel.org/r/20211230142024.142979-1-elic@nvidia.com
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Parav Pandit <parav@nvidia.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Reviewed-by: Si-Wei Liu <si-wei.liu@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c736ec01a2fc2f751c52ac6025a14a0e1308460b
Author: Laurence de Bruxelles <lfdebrux@gmail.com>
Date:   Sat Jan 1 15:41:49 2022 +0000

    rtc: pxa: fix null pointer dereference
    
    commit 34127b3632b21e5c391756e724b1198eb9917981 upstream.
    
    With the latest stable kernel versions the rtc on the PXA based
    Zaurus does not work, when booting I see the following kernel messages:
    
    pxa-rtc pxa-rtc: failed to find rtc clock source
    pxa-rtc pxa-rtc: Unable to init SA1100 RTC sub-device
    pxa-rtc: probe of pxa-rtc failed with error -2
    hctosys: unable to open rtc device (rtc0)
    
    I think this is because commit f2997775b111 ("rtc: sa1100: fix possible
    race condition") moved the allocation of the rtc_device struct out of
    sa1100_rtc_init and into sa1100_rtc_probe. This means that pxa_rtc_probe
    also needs to do allocation for the rtc_device struct, otherwise
    sa1100_rtc_init will try to dereference a null pointer. This patch adds
    that allocation by copying how sa1100_rtc_probe in
    drivers/rtc/rtc-sa1100.c does it; after the IRQs are set up a managed
    rtc_device is allocated.
    
    I've tested this patch with `qemu-system-arm -machine akita` and with a
    real Zaurus SL-C1000 applied to 4.19, 5.4, and 5.10.
    
    Signed-off-by: Laurence de Bruxelles <lfdebrux@gmail.com>
    Fixes: f2997775b111 ("rtc: sa1100: fix possible race condition")
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20220101154149.12026-1-lfdebrux@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b8ff4c793ee3d412569033c8ef0bc5d98a87262
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Jan 7 12:09:36 2022 -0800

    HID: vivaldi: fix handling devices not using numbered reports
    
    commit 3fe6acd4dc922237b30e55473c9349c6ce0690f3 upstream.
    
    Unfortunately details of USB HID transport bled into HID core and
    handling of numbered/unnumbered reports is quite a mess, with
    hid_report_len() calculating the length according to USB rules,
    and hid_hw_raw_request() adding report ID to the buffer for both
    numbered and unnumbered reports.
    
    Untangling it all requres a lot of changes in HID, so for now let's
    handle this in the driver.
    
    [jkosina@suse.cz: microoptimize field->report->id to report->id]
    Fixes: 14c9c014babe ("HID: add vivaldi HID driver")
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Tested-by: Stephen Boyd <swboyd@chromium.org> # CoachZ
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7544cf6939c1f978933992db483be4a6351494b
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Tue Jan 18 15:41:32 2022 -0600

    net: axienet: increase default TX ring size to 128
    
    commit 2d19c3fd80178160dd505ccd7fed1643831227a5 upstream.
    
    With previous changes to make the driver handle the TX ring size more
    correctly, the default TX ring size of 64 appears to significantly
    bottleneck TX performance to around 600 Mbps on a 1 Gbps link on ZynqMP.
    Increasing this to 128 seems to bring performance up to near line rate and
    shouldn't cause excess bufferbloat (this driver doesn't yet support modern
    byte-based queue management).
    
    Fixes: 8a3b7a252dca9 ("drivers/net/ethernet/xilinx: added Xilinx AXI Ethernet driver")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 557829d42d1f5cf77e743b0b8286940d0b1e4428
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Tue Jan 18 15:41:31 2022 -0600

    net: axienet: fix for TX busy handling
    
    commit bb193e3db8b86a63f26889c99e14fd30c9ebd72a upstream.
    
    Network driver documentation indicates we should be avoiding returning
    NETDEV_TX_BUSY from ndo_start_xmit in normal cases, since it requires
    the packets to be requeued. Instead the queue should be stopped after
    a packet is added to the TX ring when there may not be enough room for an
    additional one. Also, when TX ring entries are completed, we should only
    wake the queue if we know there is room for another full maximally
    fragmented packet.
    
    Print a warning if there is insufficient space at the start of start_xmit,
    since this should no longer happen.
    
    Combined with increasing the default TX ring size (in a subsequent
    patch), this appears to recover the TX performance lost by previous changes
    to actually manage the TX ring state properly.
    
    Fixes: 8a3b7a252dca9 ("drivers/net/ethernet/xilinx: added Xilinx AXI Ethernet driver")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41831d496772ce095735af9cbff3a17c5d082258
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Tue Jan 18 15:41:30 2022 -0600

    net: axienet: fix number of TX ring slots for available check
    
    commit aba57a823d2985a2cc8c74a2535f3a88e68d9424 upstream.
    
    The check for the number of available TX ring slots was off by 1 since a
    slot is required for the skb header as well as each fragment. This could
    result in overwriting a TX ring slot that was still in use.
    
    Fixes: 8a3b7a252dca9 ("drivers/net/ethernet/xilinx: added Xilinx AXI Ethernet driver")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6301f3566aef4e8e8ad6019e43ddb95ad6f65fc6
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Tue Jan 18 15:41:29 2022 -0600

    net: axienet: Fix TX ring slot available check
    
    commit 996defd7f8b5dafc1d480b7585c7c62437f80c3c upstream.
    
    The check for whether a TX ring slot was available was incorrect,
    since a slot which had been loaded with transmit data but the device had
    not started transmitting would be treated as available, potentially
    causing non-transmitted slots to be overwritten. The control field in
    the descriptor should be checked, rather than the status field (which may
    only be updated when the device completes the entry).
    
    Fixes: 8a3b7a252dca9 ("drivers/net/ethernet/xilinx: added Xilinx AXI Ethernet driver")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7a3d3d7f6d7b3db6cabeb9d43ef207c3eda1b8a5
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Tue Jan 18 15:41:28 2022 -0600

    net: axienet: limit minimum TX ring size
    
    commit 70f5817deddbc6ef3faa35841cab83c280cc653a upstream.
    
    The driver will not work properly if the TX ring size is set to below
    MAX_SKB_FRAGS + 1 since it needs to hold at least one full maximally
    fragmented packet in the TX ring. Limit setting the ring size to below
    this value.
    
    Fixes: 8b09ca823ffb4 ("net: axienet: Make RX/TX ring sizes configurable")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f548489d64debf093f2299e38a8d0fc655f87b9
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Tue Jan 18 15:41:27 2022 -0600

    net: axienet: add missing memory barriers
    
    commit 95978df6fa328df619c15312e65ece469c2be2d2 upstream.
    
    This driver was missing some required memory barriers:
    
    Use dma_rmb to ensure we see all updates to the descriptor after we see
    that an entry has been completed.
    
    Use wmb and rmb to avoid stale descriptor status between the TX path and
    TX complete IRQ path.
    
    Fixes: 8a3b7a252dca9 ("drivers/net/ethernet/xilinx: added Xilinx AXI Ethernet driver")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcc5d57e6091ef2346eabcd6e2169353a8770ec8
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Tue Jan 18 15:41:26 2022 -0600

    net: axienet: reset core on initialization prior to MDIO access
    
    commit 04cc2da39698efd7eb2e30c112538922d26f848e upstream.
    
    In some cases where the Xilinx Ethernet core was used in 1000Base-X or
    SGMII modes, which use the internal PCS/PMA PHY, and the MGT
    transceiver clock source for the PCS was not running at the time the
    FPGA logic was loaded, the core would come up in a state where the
    PCS could not be found on the MDIO bus. To fix this, the Ethernet core
    (including the PCS) should be reset after enabling the clocks, prior to
    attempting to access the PCS using of_mdio_find_device.
    
    Fixes: 1a02556086fc (net: axienet: Properly handle PCS/PMA PHY for 1000BaseX mode)
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 46c0ccaff28516ccedc2afaa3ce1d0c4284022e0
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Tue Jan 18 15:41:25 2022 -0600

    net: axienet: Wait for PhyRstCmplt after core reset
    
    commit b400c2f4f4c53c86594dd57098970d97d488bfde upstream.
    
    When resetting the device, wait for the PhyRstCmplt bit to be set
    in the interrupt status register before continuing initialization, to
    ensure that the core is actually ready. When using an external PHY, this
    also ensures we do not start trying to access the PHY while it is still
    in reset. The PHY reset is initiated by the core reset which is
    triggered just above, but remains asserted for 5ms after the core is
    reset according to the documentation.
    
    The MgtRdy bit could also be waited for, but unfortunately when using
    7-series devices, the bit does not appear to work as documented (it
    seems to behave as some sort of link state indication and not just an
    indication the transceiver is ready) so it can't really be relied on for
    this purpose.
    
    Fixes: 8a3b7a252dca9 ("drivers/net/ethernet/xilinx: added Xilinx AXI Ethernet driver")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34942a228aec23ce65fbf4969f091f0f31803880
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Tue Jan 18 15:41:24 2022 -0600

    net: axienet: increase reset timeout
    
    commit 2e5644b1bab2ccea9cfc7a9520af95b94eb0dbf1 upstream.
    
    The previous timeout of 1ms was too short to handle some cases where the
    core is reset just after the input clocks were started, which will
    be introduced in an upcoming patch. Increase the timeout to 50ms. Also
    simplify the reset timeout checking to use read_poll_timeout.
    
    Fixes: 8a3b7a252dca9 ("drivers/net/ethernet/xilinx: added Xilinx AXI Ethernet driver")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a66b9bccf73259345f5e9bbc21531abf38f76f3c
Author: Wen Gu <guwen@linux.alibaba.com>
Date:   Sun Jan 16 15:43:42 2022 +0800

    net/smc: Fix hung_task when removing SMC-R devices
    
    commit 56d99e81ecbc997a5f984684d0eeb583992b2072 upstream.
    
    A hung_task is observed when removing SMC-R devices. Suppose that
    a link group has two active links(lnk_A, lnk_B) associated with two
    different SMC-R devices(dev_A, dev_B). When dev_A is removed, the
    link group will be removed from smc_lgr_list and added into
    lgr_linkdown_list. lnk_A will be cleared and smcibdev(A)->lnk_cnt
    will reach to zero. However, when dev_B is removed then, the link
    group can't be found in smc_lgr_list and lnk_B won't be cleared,
    making smcibdev->lnk_cnt never reaches zero, which causes a hung_task.
    
    This patch fixes this issue by restoring the implementation of
    smc_smcr_terminate_all() to what it was before commit 349d43127dac
    ("net/smc: fix kernel panic caused by race of smc_sock"). The original
    implementation also satisfies the intention that make sure QP destroy
    earlier than CQ destroy because we will always wait for smcibdev->lnk_cnt
    reaches zero, which guarantees QP has been destroyed.
    
    Fixes: 349d43127dac ("net/smc: fix kernel panic caused by race of smc_sock")
    Signed-off-by: Wen Gu <guwen@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 51b52cf354850e7560758740d072815485932139
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Wed Jan 12 14:38:16 2022 -0600

    clk: si5341: Fix clock HW provider cleanup
    
    commit 49a8f2bc8d88702783c7e163ec84374e9a022f71 upstream.
    
    The call to of_clk_add_hw_provider was not undone on remove or on probe
    failure, which could cause an oops on a subsequent attempt to retrieve
    clocks for the removed device. Switch to the devm version of the
    function to avoid this issue.
    
    Fixes: 3044a860fd09 ("clk: Add Si5341/Si5340 driver")
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Link: https://lore.kernel.org/r/20220112203816.1784610-1-robert.hancock@calian.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe40f7aef387c90021bc415d258f22dee19f4909
Author: Stephen Boyd <sboyd@kernel.org>
Date:   Thu Dec 9 17:34:05 2021 -0800

    clk: Emit a stern warning with writable debugfs enabled
    
    commit 489a71964f9d74e697a12cd0ace20ed829eb1f93 upstream.
    
    We don't want vendors to be enabling this part of the clk code and
    shipping it to customers. Exposing the ability to change clk frequencies
    and parents via debugfs is potentially damaging to the system if folks
    don't know what they're doing. Emit a strong warning so that the message
    is clear: don't enable this outside of development systems.
    
    Fixes: 37215da5553e ("clk: Add support for setting clk_rate via debugfs")
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20211210014237.2130300-1-sboyd@kernel.org
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38221afa03af6d40d19f69607b21e3ccf9118d3a
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Jan 14 08:43:28 2022 -0800

    af_unix: annote lockless accesses to unix_tot_inflight & gc_in_progress
    
    commit 9d6d7f1cb67cdee15f1a0e85aacfb924e0e02435 upstream.
    
    wait_for_unix_gc() reads unix_tot_inflight & gc_in_progress
    without synchronization.
    
    Adds READ_ONCE()/WRITE_ONCE() and their associated comments
    to better document the intent.
    
    BUG: KCSAN: data-race in unix_inflight / wait_for_unix_gc
    
    write to 0xffffffff86e2b7c0 of 4 bytes by task 9380 on cpu 0:
     unix_inflight+0x1e8/0x260 net/unix/scm.c:63
     unix_attach_fds+0x10c/0x1e0 net/unix/scm.c:121
     unix_scm_to_skb net/unix/af_unix.c:1674 [inline]
     unix_dgram_sendmsg+0x679/0x16b0 net/unix/af_unix.c:1817
     unix_seqpacket_sendmsg+0xcc/0x110 net/unix/af_unix.c:2258
     sock_sendmsg_nosec net/socket.c:704 [inline]
     sock_sendmsg net/socket.c:724 [inline]
     ____sys_sendmsg+0x39a/0x510 net/socket.c:2409
     ___sys_sendmsg net/socket.c:2463 [inline]
     __sys_sendmmsg+0x267/0x4c0 net/socket.c:2549
     __do_sys_sendmmsg net/socket.c:2578 [inline]
     __se_sys_sendmmsg net/socket.c:2575 [inline]
     __x64_sys_sendmmsg+0x53/0x60 net/socket.c:2575
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    read to 0xffffffff86e2b7c0 of 4 bytes by task 9375 on cpu 1:
     wait_for_unix_gc+0x24/0x160 net/unix/garbage.c:196
     unix_dgram_sendmsg+0x8e/0x16b0 net/unix/af_unix.c:1772
     unix_seqpacket_sendmsg+0xcc/0x110 net/unix/af_unix.c:2258
     sock_sendmsg_nosec net/socket.c:704 [inline]
     sock_sendmsg net/socket.c:724 [inline]
     ____sys_sendmsg+0x39a/0x510 net/socket.c:2409
     ___sys_sendmsg net/socket.c:2463 [inline]
     __sys_sendmmsg+0x267/0x4c0 net/socket.c:2549
     __do_sys_sendmmsg net/socket.c:2578 [inline]
     __se_sys_sendmmsg net/socket.c:2575 [inline]
     __x64_sys_sendmmsg+0x53/0x60 net/socket.c:2575
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    value changed: 0x00000002 -> 0x00000004
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 9375 Comm: syz-executor.1 Not tainted 5.16.0-rc7-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 9915672d4127 ("af_unix: limit unix_tot_inflight")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Link: https://lore.kernel.org/r/20220114164328.2038499-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a49e402f23096d21362b25d7224206a45288072a
Author: Chao Yu <chao@kernel.org>
Date:   Sat Dec 11 21:27:36 2021 +0800

    f2fs: fix to reserve space for IO align feature
    
    commit 300a842937fbcfb5a189cea9ba15374fdb0b5c6b upstream.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=204137
    
    With below script, we will hit panic during new segment allocation:
    
    DISK=bingo.img
    MOUNT_DIR=/mnt/f2fs
    
    dd if=/dev/zero of=$DISK bs=1M count=105
    mkfs.f2fe -a 1 -o 19 -t 1 -z 1 -f -q $DISK
    
    mount -t f2fs $DISK $MOUNT_DIR -o "noinline_dentry,flush_merge,noextent_cache,mode=lfs,io_bits=7,fsync_mode=strict"
    
    for (( i = 0; i < 4096; i++ )); do
            name=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 10`
            mkdir $MOUNT_DIR/$name
    done
    
    umount $MOUNT_DIR
    rm $DISK

commit 39ad0581176dd62d4dbb0ec528d2d2fb54f11069
Author: Hyeong-Jun Kim <hj514.kim@samsung.com>
Date:   Fri Dec 10 13:30:12 2021 +0900

    f2fs: compress: fix potential deadlock of compress file
    
    commit 7377e853967ba45bf409e3b5536624d2cbc99f21 upstream.
    
    There is a potential deadlock between writeback process and a process
    performing write_begin() or write_cache_pages() while trying to write
    same compress file, but not compressable, as below:
    
    [Process A] - doing checkpoint
    [Process B]                     [Process C]
    f2fs_write_cache_pages()
    - lock_page() [all pages in cluster, 0-31]
    - f2fs_write_multi_pages()
     - f2fs_write_raw_pages()
      - f2fs_write_single_data_page()
       - f2fs_do_write_data_page()
         - return -EAGAIN [f2fs_trylock_op() failed]
       - unlock_page(page) [e.g., page 0]
                                    - generic_perform_write()
                                     - f2fs_write_begin()
                                      - f2fs_prepare_compress_overwrite()
                                       - prepare_compress_overwrite()
                                        - lock_page() [e.g., page 0]
                                        - lock_page() [e.g., page 1]
       - lock_page(page) [e.g., page 0]
    
    Since there is no compress process, it is no longer necessary to hold
    locks on every pages in cluster within f2fs_write_raw_pages().
    
    This patch changes f2fs_write_raw_pages() to release all locks first
    and then perform write same as the non-compress file in
    f2fs_write_cache_pages().
    
    Fixes: 4c8ff7095bef ("f2fs: support data compression")
    Signed-off-by: Hyeong-Jun Kim <hj514.kim@samsung.com>
    Signed-off-by: Sungjong Seo <sj1557.seo@samsung.com>
    Signed-off-by: Youngjin Gil <youngjin.gil@samsung.com>
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1840365ed4f831f51dfd7b3af5e39045f3d62b7
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Thu Jan 20 12:18:12 2022 +0000

    parisc: pdc_stable: Fix memory leak in pdcs_register_pathentries
    
    commit d24846a4246b6e61ecbd036880a4adf61681d241 upstream.
    
    kobject_init_and_add() takes reference even when it fails.
    According to the doc of kobject_init_and_add()：
    
       If this function returns an error, kobject_put() must be called to
       properly clean up the memory associated with the object.
    
    Fix memory leak by calling kobject_put().
    
    Fixes: 73f368cf679b ("Kobject: change drivers/parisc/pdc_stable.c to use kobject_init_and_add")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d806eb5f4e231c7c470b7e9d13277d9e69c80a67
Author: Tobias Waldekranz <tobias@waldekranz.com>
Date:   Tue Jan 18 22:50:53 2022 +0100

    net/fsl: xgmac_mdio: Fix incorrect iounmap when removing module
    
    commit 3f7c239c7844d2044ed399399d97a5f1c6008e1b upstream.
    
    As reported by sparse: In the remove path, the driver would attempt to
    unmap its own priv pointer - instead of the io memory that it mapped
    in probe.
    
    Fixes: 9f35a7342cff ("net/fsl: introduce Freescale 10G MDIO driver")
    Signed-off-by: Tobias Waldekranz <tobias@waldekranz.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38c798384b903e0c38f7978c1fbf942e36213b8d
Author: Tobias Waldekranz <tobias@waldekranz.com>
Date:   Tue Jan 18 22:50:50 2022 +0100

    net/fsl: xgmac_mdio: Add workaround for erratum A-009885
    
    commit 6198c722019774d38018457a8bfb9ba3ed8c931e upstream.
    
    Once an MDIO read transaction is initiated, we must read back the data
    register within 16 MDC cycles after the transaction completes. Outside
    of this window, reads may return corrupt data.
    
    Therefore, disable local interrupts in the critical section, to
    maximize the probability that we can satisfy this requirement.
    
    Fixes: d55ad2967d89 ("powerpc/mpc85xx: Create dts components for the FSL QorIQ DPAA FMan")
    Signed-off-by: Tobias Waldekranz <tobias@waldekranz.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 734f4b0f831e6d5fdad819a8832fb562b6cb8291
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jan 19 02:04:12 2022 -0800

    ipv4: avoid quadratic behavior in netns dismantle
    
    commit d07418afea8f1d9896aaf9dc5ae47ac4f45b220c upstream.
    
    net/ipv4/fib_semantics.c uses an hash table of 256 slots,
    keyed by device ifindexes: fib_info_devhash[DEVINDEX_HASHSIZE]
    
    Problem is that with network namespaces, devices tend
    to use the same ifindex.
    
    lo device for instance has a fixed ifindex of one,
    for all network namespaces.
    
    This means that hosts with thousands of netns spend
    a lot of time looking at some hash buckets with thousands
    of elements, notably at netns dismantle.
    
    Simply add a per netns perturbation (net_hash_mix())
    to spread elements more uniformely.
    
    Also change fib_devindex_hashfn() to use more entropy.
    
    Fixes: aa79e66eee5d ("net: Make ifindex generation per-net namespace")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86f0587f74320412e19db0bc341ef418b2d1d114
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Jan 16 01:02:20 2022 -0800

    ipv4: update fib_info_cnt under spinlock protection
    
    commit 0a6e6b3c7db6c34e3d149f09cd714972f8753e3f upstream.
    
    In the past, free_fib_info() was supposed to be called
    under RTNL protection.
    
    This eventually was no longer the case.
    
    Instead of enforcing RTNL it seems we simply can
    move fib_info_cnt changes to occur when fib_info_lock
    is held.
    
    v2: David Laight suggested to update fib_info_cnt
    only when an entry is added/deleted to/from the hash table,
    as fib_info_cnt is used to make sure hash table size
    is optimal.
    
    BUG: KCSAN: data-race in fib_create_info / free_fib_info
    
    write to 0xffffffff86e243a0 of 4 bytes by task 26429 on cpu 0:
     fib_create_info+0xe78/0x3440 net/ipv4/fib_semantics.c:1428
     fib_table_insert+0x148/0x10c0 net/ipv4/fib_trie.c:1224
     fib_magic+0x195/0x1e0 net/ipv4/fib_frontend.c:1087
     fib_add_ifaddr+0xd0/0x2e0 net/ipv4/fib_frontend.c:1109
     fib_netdev_event+0x178/0x510 net/ipv4/fib_frontend.c:1466
     notifier_call_chain kernel/notifier.c:83 [inline]
     raw_notifier_call_chain+0x53/0xb0 kernel/notifier.c:391
     __dev_notify_flags+0x1d3/0x3b0
     dev_change_flags+0xa2/0xc0 net/core/dev.c:8872
     do_setlink+0x810/0x2410 net/core/rtnetlink.c:2719
     rtnl_group_changelink net/core/rtnetlink.c:3242 [inline]
     __rtnl_newlink net/core/rtnetlink.c:3396 [inline]
     rtnl_newlink+0xb10/0x13b0 net/core/rtnetlink.c:3506
     rtnetlink_rcv_msg+0x745/0x7e0 net/core/rtnetlink.c:5571
     netlink_rcv_skb+0x14e/0x250 net/netlink/af_netlink.c:2496
     rtnetlink_rcv+0x18/0x20 net/core/rtnetlink.c:5589
     netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline]
     netlink_unicast+0x5fc/0x6c0 net/netlink/af_netlink.c:1345
     netlink_sendmsg+0x726/0x840 net/netlink/af_netlink.c:1921
     sock_sendmsg_nosec net/socket.c:704 [inline]
     sock_sendmsg net/socket.c:724 [inline]
     ____sys_sendmsg+0x39a/0x510 net/socket.c:2409
     ___sys_sendmsg net/socket.c:2463 [inline]
     __sys_sendmsg+0x195/0x230 net/socket.c:2492
     __do_sys_sendmsg net/socket.c:2501 [inline]
     __se_sys_sendmsg net/socket.c:2499 [inline]
     __x64_sys_sendmsg+0x42/0x50 net/socket.c:2499
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    read to 0xffffffff86e243a0 of 4 bytes by task 31505 on cpu 1:
     free_fib_info+0x35/0x80 net/ipv4/fib_semantics.c:252
     fib_info_put include/net/ip_fib.h:575 [inline]
     nsim_fib4_rt_destroy drivers/net/netdevsim/fib.c:294 [inline]
     nsim_fib4_rt_replace drivers/net/netdevsim/fib.c:403 [inline]
     nsim_fib4_rt_insert drivers/net/netdevsim/fib.c:431 [inline]
     nsim_fib4_event drivers/net/netdevsim/fib.c:461 [inline]
     nsim_fib_event drivers/net/netdevsim/fib.c:881 [inline]
     nsim_fib_event_work+0x15ca/0x2cf0 drivers/net/netdevsim/fib.c:1477
     process_one_work+0x3fc/0x980 kernel/workqueue.c:2298
     process_scheduled_works kernel/workqueue.c:2361 [inline]
     worker_thread+0x7df/0xa70 kernel/workqueue.c:2447
     kthread+0x2c7/0x2e0 kernel/kthread.c:327
     ret_from_fork+0x1f/0x30
    
    value changed: 0x00000d2d -> 0x00000d2e
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 31505 Comm: kworker/1:21 Not tainted 5.16.0-rc6-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Workqueue: events nsim_fib_event_work
    
    Fixes: 48bb9eb47b27 ("netdevsim: fib: Add dummy implementation for FIB offload")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: David Laight <David.Laight@ACULAB.COM>
    Cc: Ido Schimmel <idosch@mellanox.com>
    Cc: Jiri Pirko <jiri@mellanox.com>
    Reviewed-by: Ido Schimmel <idosch@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10e99ae9b5da7e6a5304db3a926f6a460ee850d2
Author: German Gomez <german.gomez@arm.com>
Date:   Tue Jan 18 14:40:54 2022 +0000

    perf evsel: Override attr->sample_period for non-libpfm4 events
    
    commit 3606c0e1a1050d397ad759a62607e419fd8b0ccb upstream.
    
    A previous patch preventing "attr->sample_period" values from being
    overridden in pfm events changed a related behaviour in arm-spe.
    
    Before said patch:
    
      perf record -c 10000 -e arm_spe_0// -- sleep 1
    
    Would yield an SPE event with period=10000. After the patch, the period
    in "-c 10000" was being ignored because the arm-spe code initializes
    sample_period to a non-zero value.
    
    This patch restores the previous behaviour for non-libpfm4 events.
    
    Fixes: ae5dcc8abe31 (“perf record: Prevent override of attr->sample_period for libpfm4 events”)
    Reported-by: Chase Conklin <chase.conklin@arm.com>
    Signed-off-by: German Gomez <german.gomez@arm.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: John Fastabend <john.fastabend@gmail.com>
    Cc: KP Singh <kpsingh@kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Martin KaFai Lau <kafai@fb.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Yonghong Song <yhs@fb.com>
    Cc: bpf@vger.kernel.org
    Cc: netdev@vger.kernel.org
    Link: http://lore.kernel.org/lkml/20220118144054.2541-1-german.gomez@arm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58fa3e900255d61684ea5dfce0302b4b59d39c24
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Fri Jan 7 23:11:13 2022 +0100

    xdp: check prog type before updating BPF link
    
    commit 382778edc8262b7535f00523e9eb22edba1b9816 upstream.
    
    The bpf_xdp_link_update() function didn't check the program type before
    updating the program, which made it possible to install any program type as
    an XDP program, which is obviously not good. Syzbot managed to trigger this
    by swapping in an LWT program on the XDP hook which would crash in a helper
    call.
    
    Fix this by adding a check and bailing out if the types don't match.
    
    Fixes: 026a4c28e1db ("bpf, xdp: Implement LINK_UPDATE for BPF XDP link")
    Reported-by: syzbot+983941aa85af6ded1fd9@syzkaller.appspotmail.com
    Acked-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Link: https://lore.kernel.org/r/20220107221115.326171-1-toke@redhat.com
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38ee417f59c893e770a6118072f5d52fe9082901
Author: Quentin Monnet <quentin@isovalent.com>
Date:   Wed Nov 10 11:46:28 2021 +0000

    bpftool: Remove inclusion of utilities.mak from Makefiles
    
    commit 48f5aef4c458c19ab337eed8c95a6486cc014aa3 upstream.
    
    Bpftool's Makefile, and the Makefile for its documentation, both include
    scripts/utilities.mak, but they use none of the items defined in this
    file. Remove the includes.
    
    Fixes: 71bb428fe2c1 ("tools: bpf: add bpftool")
    Signed-off-by: Quentin Monnet <quentin@isovalent.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20211110114632.24537-3-quentin@isovalent.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2bcab471a26fce0410c3d30d28af642db373ef8c
Author: Ye Bin <yebin10@huawei.com>
Date:   Mon Nov 29 09:26:59 2021 +0800

    block: Fix fsync always failed if once failed
    
    commit 8a7518931baa8ea023700987f3db31cb0a80610b upstream.
    
    We do test with inject error fault base on v4.19, after test some time we found
    sync /dev/sda always failed.
    [root@localhost] sync /dev/sda
    sync: error syncing '/dev/sda': Input/output error
    
    scsi log as follows:
    [19069.812296] sd 0:0:0:0: [sda] tag#64 Send: scmd 0x00000000d03a0b6b
    [19069.812302] sd 0:0:0:0: [sda] tag#64 CDB: Synchronize Cache(10) 35 00 00 00 00 00 00 00 00 00
    [19069.812533] sd 0:0:0:0: [sda] tag#64 Done: SUCCESS Result: hostbyte=DID_OK driverbyte=DRIVER_OK
    [19069.812536] sd 0:0:0:0: [sda] tag#64 CDB: Synchronize Cache(10) 35 00 00 00 00 00 00 00 00 00
    [19069.812539] sd 0:0:0:0: [sda] tag#64 scsi host busy 1 failed 0
    [19069.812542] sd 0:0:0:0: Notifying upper driver of completion (result 0)
    [19069.812546] sd 0:0:0:0: [sda] tag#64 sd_done: completed 0 of 0 bytes
    [19069.812549] sd 0:0:0:0: [sda] tag#64 0 sectors total, 0 bytes done.
    [19069.812564] print_req_error: I/O error, dev sda, sector 0
    
    ftrace log as follows:
     rep-306069 [007] .... 19654.923315: block_bio_queue: 8,0 FWS 0 + 0 [rep]
     rep-306069 [007] .... 19654.923333: block_getrq: 8,0 FWS 0 + 0 [rep]
     kworker/7:1H-250   [007] .... 19654.923352: block_rq_issue: 8,0 FF 0 () 0 + 0 [kworker/7:1H]
     <idle>-0     [007] ..s. 19654.923562: block_rq_complete: 8,0 FF () 18446744073709551615 + 0 [0]
     <idle>-0     [007] d.s. 19654.923576: block_rq_complete: 8,0 WS () 0 + 0 [-5]
    
    As 8d6996630c03 introduce 'fq->rq_status', this data only update when 'flush_rq'
    reference count isn't zero. If flush request once failed and record error code
    in 'fq->rq_status'. If there is no chance to update 'fq->rq_status',then do fsync
    will always failed.
    To address this issue reset 'fq->rq_status' after return error code to upper layer.
    
    Fixes: 8d6996630c03("block: fix null pointer dereference in blk_mq_rq_timed_out()")
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Link: https://lore.kernel.org/r/20211129012659.1553733-1-yebin10@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e59f885353e3b65dbb26c3bbb08cd8e4fa59043
Author: Tobias Waldekranz <tobias@waldekranz.com>
Date:   Tue Jan 18 22:50:52 2022 +0100

    powerpc/fsl/dts: Enable WA for erratum A-009885 on fman3l MDIO buses
    
    commit 0d375d610fa96524e2ee2b46830a46a7bfa92a9f upstream.
    
    This block is used in (at least) T1024 and T1040, including their
    variants like T1023 etc.
    
    Fixes: d55ad2967d89 ("powerpc/mpc85xx: Create dts components for the FSL QorIQ DPAA FMan")
    Signed-off-by: Tobias Waldekranz <tobias@waldekranz.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19aaef65194854e8e880084f52645fb77b54188d
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Tue Dec 7 12:02:28 2021 +0100

    powerpc/cell: Fix clang -Wimplicit-fallthrough warning
    
    commit e89257e28e844f5d1d39081bb901d9f1183a7705 upstream.
    
    Clang warns:
    
    arch/powerpc/platforms/cell/pervasive.c:81:2: error: unannotated fall-through between switch labels
            case SRR1_WAKEEE:
            ^
    arch/powerpc/platforms/cell/pervasive.c:81:2: note: insert 'break;' to avoid fall-through
            case SRR1_WAKEEE:
            ^
            break;
    1 error generated.
    
    Clang is more pedantic than GCC, which does not warn when failing
    through to a case that is just break or return. Clang's version is more
    in line with the kernel's own stance in deprecated.rst. Add athe missing
    break to silence the warning.
    
    Fixes: 6e83985b0f6e ("powerpc/cbe: Do not process external or decremeter interrupts from sreset")
    Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211207110228.698956-1-anders.roxell@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4cb7aba1e0868585289c4ebf9151ec5c7e7606c8
Author: Moshe Shemesh <moshe@nvidia.com>
Date:   Sun Dec 5 11:20:59 2021 +0200

    Revert "net/mlx5: Add retry mechanism to the command entry index allocation"
    
    commit 4f6626b0e140867fd6d5a2e9d4ceaef97f10f46a upstream.
    
    This reverts commit 410bd754cd73c4a2ac3856d9a03d7b08f9c906bf.
    
    The reverted commit had added a retry mechanism to the command entry
    index allocation. The previous patch ensures that there is a free
    command entry index once the command work handler holds the command
    semaphore. Thus the retry mechanism is not needed.
    
    Fixes: 410bd754cd73 ("net/mlx5: Add retry mechanism to the command entry index allocation")
    Signed-off-by: Moshe Shemesh <moshe@nvidia.com>
    Reviewed-by: Eran Ben Elisha <eranbe@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78cf5f63a3a98151ad7fa645103de0fa17c7317c
Author: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date:   Mon Dec 20 17:58:27 2021 +0100

    dmaengine: stm32-mdma: fix STM32_MDMA_CTBR_TSEL_MASK
    
    commit e7f110889a87307fb0fed408a5dee1707796ca04 upstream.
    
    This patch fixes STM32_MDMA_CTBR_TSEL_MASK, which is [5:0], not [7:0].
    
    Fixes: a4ffb13c8946 ("dmaengine: Add STM32 MDMA driver")
    Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Link: https://lore.kernel.org/r/20211220165827.1238097-1-amelie.delaunay@foss.st.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16ad0aa917c905982a6bdddd5f67a824f153501e
Author: Chengguang Xu <cgxu519@mykernel.net>
Date:   Sat Dec 18 19:23:20 2021 +0800

    RDMA/rxe: Fix a typo in opcode name
    
    commit 8d1cfb884e881efd69a3be4ef10772c71cb22216 upstream.
    
    There is a redundant ']' in the name of opcode IB_OPCODE_RC_SEND_MIDDLE,
    so just fix it.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Link: https://lore.kernel.org/r/20211218112320.3558770-1-cgxu519@mykernel.net
    Signed-off-by: Chengguang Xu <cgxu519@mykernel.net>
    Acked-by: Zhu Yanjun <zyjzyj2000@gmail.com>
    Reviewed-by: Bob Pearson <rpearsonhpe@gmail.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 885860717c29decb32bc8d2074bd7be066eaab87
Author: Yixing Liu <liuyixing1@huawei.com>
Date:   Mon Dec 6 21:36:52 2021 +0800

    RDMA/hns: Modify the mapping attribute of doorbell to device
    
    commit 39d5534b1302189c809e90641ffae8cbdc42a8fc upstream.
    
    It is more general for ARM device drivers to use the device attribute to
    map PCI BAR spaces.
    
    Fixes: 9a4435375cd1 ("IB/hns: Add driver files for hns RoCE driver")
    Link: https://lore.kernel.org/r/20211206133652.27476-1-liangwenpeng@huawei.com
    Signed-off-by: Yixing Liu <liuyixing1@huawei.com>
    Signed-off-by: Wenpeng Liang <liangwenpeng@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57cd8597c3ef8ba8d00aa9f39f506f45d949d29b
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Tue Dec 14 13:42:43 2021 +0900

    dmaengine: uniphier-xdmac: Fix type of address variables
    
    commit 105a8c525675bb7d4d64871f9b2edf39460de881 upstream.
    
    The variables src_addr and dst_addr handle DMA addresses, so these should
    be declared as dma_addr_t.
    
    Fixes: 667b9251440b ("dmaengine: uniphier-xdmac: Add UniPhier external DMA controller driver")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Link: https://lore.kernel.org/r/1639456963-10232-1-git-send-email-hayashi.kunihiko@socionext.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fe77b7cd27229486b67c83df71019fe89d3951e
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Nov 29 11:46:00 2021 -0800

    scsi: core: Show SCMD_LAST in text form
    
    commit 3369046e54ca8f82e0cb17740643da2d80d3cfa8 upstream.
    
    The SCSI debugfs code supports showing information about pending commands,
    including translating SCSI command flags from numeric into text format.
    Also convert the SCMD_LAST flag from numeric into text form.
    
    Link: https://lore.kernel.org/r/20211129194609.3466071-4-bvanassche@acm.org
    Fixes: 8930a6c20791 ("scsi: core: add support for request batching")
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b30240911da4a19560daa51c1e1d328f9903dde7
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Mon Nov 1 15:14:41 2021 -0700

    Bluetooth: hci_sync: Fix not setting adv set duration
    
    commit f16a491c65d9eb19398b25aefc10c2d3313d17b3 upstream.
    
    10bbffa3e88e attempted to fix the use of rotation duration as
    advertising duration but it didn't change the if condition which still
    uses the duration instead of the timeout.
    
    Fixes: 10bbffa3e88e ("Bluetooth: Fix using advertising instance duration as timeout")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55698d11c8dacbfc9750803cf8fa398fb9a12af5
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Jan 18 19:39:05 2022 -0800

    Documentation: fix firewire.rst ABI file path error
    
    commit b0ac702f3329cdc8a06dcaac73183d4b5a2b942d upstream.
    
    Adjust the path of the ABI files for firewire.rst to prevent a
    documentation build error. Prevents this problem:
    
    Sphinx parallel build error:
    docutils.utils.SystemMessage: Documentation/driver-api/firewire.rst:22: (SEVERE/4) Problems with "include" directive path:
    InputError: [Errno 2] No such file or directory: '../Documentation/driver-api/ABI/stable/firewire-cdev'.
    
    Fixes: 2f4830ef96d2 ("FireWire: add driver-api Introduction section")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Tested-by: Akira Yokosawa <akiyks@gmail.com>
    Link: https://lore.kernel.org/r/20220119033905.4779-1-rdunlap@infradead.org
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d38cbf66dd7df04f06be86d812c7e5861cd3a69
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Thu Dec 30 18:19:40 2021 +0100

    Documentation: refer to config RANDOMIZE_BASE for kernel address-space randomization
    
    commit 82ca67321f55a8d1da6ac3ed611da3c32818bb37 upstream.
    
    The config RANDOMIZE_SLAB does not exist, the authors probably intended to
    refer to the config RANDOMIZE_BASE, which provides kernel address-space
    randomization. They probably just confused SLAB with BASE (these two
    four-letter words coincidentally share three common letters), as they also
    point out the config SLAB_FREELIST_RANDOM as further randomization within
    the same sentence.
    
    Fix the reference of the config for kernel address-space randomization to
    the config that provides that.
    
    Fixes: 6e88559470f5 ("Documentation: Add section about CPU vulnerabilities for Spectre")
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Link: https://lore.kernel.org/r/20211230171940.27558-1-lukas.bulwahn@gmail.com
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abecf9d748369d5d1f53ae868f96cae88f9875ef
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Wed Dec 1 14:59:31 2021 +0200

    Documentation: ACPI: Fix data node reference documentation
    
    commit a11174952205d082f1658fab4314f0caf706e0a8 upstream.
    
    The data node reference documentation was missing a package that must
    contain the property values, instead property name and multiple values
    being present in a single package. This is not aligned with the _DSD
    spec.
    
    Fix it by adding the package for the values.
    
    Also add the missing "reg" properties to two numbered nodes.
    
    Fixes: b10134a3643d ("ACPI: property: Document hierarchical data extension references")
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1e85fcd73b5c94dc5032a63ecb3df4cbceda82d
Author: Daniel Thompson <daniel.thompson@linaro.org>
Date:   Thu Nov 18 10:09:52 2021 +0000

    Documentation: dmaengine: Correctly describe dmatest with channel unset
    
    commit c61d7b2ef141abf81140756b45860a2306f395a2 upstream.
    
    Currently the documentation states that channels must be configured before
    running the dmatest. This has not been true since commit 6b41030fdc79
    ("dmaengine: dmatest: Restore default for channel"). Fix accordingly.
    
    Fixes: 6b41030fdc79 ("dmaengine: dmatest: Restore default for channel")
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Link: https://lore.kernel.org/r/20211118100952.27268-3-daniel.thompson@linaro.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6736bd81db48abd9455e007f1f3ba7ec593fd48
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Nov 7 18:19:23 2021 +0000

    media: correct MEDIA_TEST_SUPPORT help text
    
    commit 09f4d1513267d0ab712f5d29e7bd136535748709 upstream.
    
    Fix grammar/wording in the help text for MEDIA_TEST_SUPPORT.
    
    Fixes: 4b32216adb01 ("media: split test drivers from platform directory")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55b10b88ac8654fc2f31518aa349a2e643b37f18
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Thu Aug 19 15:59:30 2021 +0200

    drm/vc4: hdmi: Make sure the device is powered with CEC
    
    commit 20b0dfa86bef0e80b41b0e5ac38b92f23b6f27f9 upstream.
    
    Similarly to what we encountered with the detect hook with DRM, nothing
    actually prevents any of the CEC callback from being run while the HDMI
    output is disabled.
    
    However, this is an issue since any register access to the controller
    when it's powered down will result in a silent hang.
    
    Let's make sure we run the runtime_pm hooks when the CEC adapter is
    opened and closed by the userspace to avoid that issue.
    
    Fixes: 15b4511a4af6 ("drm/vc4: add HDMI CEC support")
    Reviewed-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210819135931.895976-6-maxime@cerno.tech
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81ac08a800b010d40c4bc8112089473c1b950cbd
Author: Suresh Udipi <sudipi@jp.adit-jv.com>
Date:   Fri Aug 13 17:07:56 2021 +0200

    media: rcar-csi2: Optimize the selection PHTW register
    
    commit 549cc89cd09a85aaa16dc07ef3db811d5cf9bcb1 upstream.
    
    PHTW register is selected based on default bit rate from Table[1].
    for the bit rates less than or equal to 250. Currently first
    value of default bit rate which is greater than or equal to
    the caculated mbps is selected. This selection can be further
    improved by selecting the default bit rate which is nearest to
    the calculated value.
    
    [1] specs r19uh0105ej0200-r-car-3rd-generation.pdf [Table 25.12]
    
    Fixes: 769afd212b16 ("media: rcar-csi2: add Renesas R-Car MIPI CSI-2 receiver driver")
    Signed-off-by: Suresh Udipi <sudipi@jp.adit-jv.com>
    Signed-off-by: Michael Rodin <mrodin@de.adit-jv.com>
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0baa3729d2eb20ae159a863e473fcfca6390aba9
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Fri Apr 23 11:26:56 2021 +0200

    can: mcp251xfd: mcp251xfd_tef_obj_read(): fix typo in error message
    
    commit 99e7cc3b3f85d9a583ab83f386315c59443509ae upstream.
    
    This patch fixes a typo in the error message in
    mcp251xfd_tef_obj_read(), if trying to read too many objects.
    
    Link: https://lore.kernel.org/all/20220105154300.1258636-3-mkl@pengutronix.de
    Fixes: 55e5b97f003e ("can: mcp25xxfd: add driver for Microchip MCP25xxFD SPI CAN")
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f62bf6ee4fa3198385e0658a9f070f98335a8408
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Mon Jun 18 23:55:40 2018 +0100

    firmware: Update Kconfig help text for Google firmware
    
    commit d185a3466f0cd5af8f1c5c782c53bc0e6f2e7136 upstream.
    
    The help text for GOOGLE_FIRMWARE states that it should only be
    enabled when building a kernel for Google's own servers.  However,
    many of the drivers dependent on it are also useful on Chromebooks or
    on any platform using coreboot.
    
    Update the help text to reflect this double duty.
    
    Fixes: d384d6f43d1e ("firmware: google memconsole: Add coreboot support")
    Reviewed-by: Julius Werner <jwerner@chromium.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Link: https://lore.kernel.org/r/20180618225540.GD14131@decadent.org.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12224c0d19f34edaca246b99fd79b076b0abadaa
Author: Baruch Siach <baruch@tkos.co.il>
Date:   Thu Dec 30 18:31:53 2021 +0200

    of: base: Improve argument length mismatch error
    
    commit 5d05b811b5acb92fc581a7b328b36646c86f5ab9 upstream.
    
    The cells_name field of of_phandle_iterator might be NULL. Use the
    phandle name instead. With this change instead of:
    
      OF: /soc/pinctrl@1000000: (null) = 3 found 2
    
    We get:
    
      OF: /soc/pinctrl@1000000: phandle pinctrl@1000000 needs 3, found 2
    
    Which is a more helpful messages making DT debugging easier.
    
    In this particular example the phandle name looks like duplicate of the
    same node name. But note that the first node is the parent node
    (it->parent), while the second is the phandle target (it->node). They
    happen to be the same in the case that triggered this improvement. See
    commit 72cb4c48a46a ("arm64: dts: qcom: ipq6018: Fix gpio-ranges
    property").
    
    Signed-off-by: Baruch Siach <baruch@tkos.co.il>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/r/f6a68e0088a552ea9dfd4d8e3b5b586d92594738.1640881913.git.baruch@tkos.co.il
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bb99c7e13f8417f81247b2acea8ceaae0c5afb3
Author: Christian König <christian.koenig@amd.com>
Date:   Mon Jan 17 10:31:26 2022 +0100

    drm/radeon: fix error handling in radeon_driver_open_kms
    
    commit 4722f463896cc0ef1a6f1c3cb2e171e949831249 upstream.
    
    The return value was never initialized so the cleanup code executed when
    it isn't even necessary.
    
    Just add proper error handling.
    
    Fixes: ab50cb9df889 ("drm/radeon/radeon_kms: Fix a NULL pointer dereference in radeon_driver_open_kms()")
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Tested-by: Jan Stancek <jstancek@redhat.com>
    Tested-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ca7ec6db20c66b91277c231780e9f05b42a8163
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Jan 5 23:59:56 2022 -0500

    ext4: don't use the orphan list when migrating an inode
    
    commit 6eeaf88fd586f05aaf1d48cb3a139d2a5c6eb055 upstream.
    
    We probably want to remove the indirect block to extents migration
    feature after a deprecation window, but until then, let's fix a
    potential data loss problem caused by the fact that we put the
    tmp_inode on the orphan list.  In the unlikely case where we crash and
    do a journal recovery, the data blocks belonging to the inode being
    migrated are also represented in the tmp_inode on the orphan list ---
    and so its data blocks will get marked unallocated, and available for
    reuse.
    
    Instead, stop putting the tmp_inode on the oprhan list.  So in the
    case where we crash while migrating the inode, we'll leak an inode,
    which is not a disaster.  It will be easily fixed the next time we run
    fsck, and it's better than potentially having blocks getting claimed
    by two different files, and losing data as a result.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 679fb065326be0bff3d7463cfc975cddeeae9d68
Author: Ye Bin <yebin10@huawei.com>
Date:   Fri Dec 24 18:03:41 2021 +0800

    ext4: fix null-ptr-deref in '__ext4_journal_ensure_credits'
    
    commit 298b5c521746d69c07beb2757292fb5ccc1b0f85 upstream.
    
    We got issue as follows when run syzkaller test:
    [ 1901.130043] EXT4-fs error (device vda): ext4_remount:5624: comm syz-executor.5: Abort forced by user
    [ 1901.130901] Aborting journal on device vda-8.
    [ 1901.131437] EXT4-fs error (device vda): ext4_journal_check_start:61: comm syz-executor.16: Detected aborted journal
    [ 1901.131566] EXT4-fs error (device vda): ext4_journal_check_start:61: comm syz-executor.11: Detected aborted journal
    [ 1901.132586] EXT4-fs error (device vda): ext4_journal_check_start:61: comm syz-executor.18: Detected aborted journal
    [ 1901.132751] EXT4-fs error (device vda): ext4_journal_check_start:61: comm syz-executor.9: Detected aborted journal
    [ 1901.136149] EXT4-fs error (device vda) in ext4_reserve_inode_write:6035: Journal has aborted
    [ 1901.136837] EXT4-fs error (device vda): ext4_journal_check_start:61: comm syz-fuzzer: Detected aborted journal
    [ 1901.136915] ==================================================================
    [ 1901.138175] BUG: KASAN: null-ptr-deref in __ext4_journal_ensure_credits+0x74/0x140 [ext4]
    [ 1901.138343] EXT4-fs error (device vda): ext4_journal_check_start:61: comm syz-executor.13: Detected aborted journal
    [ 1901.138398] EXT4-fs error (device vda): ext4_journal_check_start:61: comm syz-executor.1: Detected aborted journal
    [ 1901.138808] Read of size 8 at addr 0000000000000000 by task syz-executor.17/968
    [ 1901.138817]
    [ 1901.138852] EXT4-fs error (device vda): ext4_journal_check_start:61: comm syz-executor.30: Detected aborted journal
    [ 1901.144779] CPU: 1 PID: 968 Comm: syz-executor.17 Not tainted 4.19.90-vhulk2111.1.0.h893.eulerosv2r10.aarch64+ #1
    [ 1901.146479] Hardware name: linux,dummy-virt (DT)
    [ 1901.147317] Call trace:
    [ 1901.147552]  dump_backtrace+0x0/0x2d8
    [ 1901.147898]  show_stack+0x28/0x38
    [ 1901.148215]  dump_stack+0xec/0x15c
    [ 1901.148746]  kasan_report+0x108/0x338
    [ 1901.149207]  __asan_load8+0x58/0xb0
    [ 1901.149753]  __ext4_journal_ensure_credits+0x74/0x140 [ext4]
    [ 1901.150579]  ext4_xattr_delete_inode+0xe4/0x700 [ext4]
    [ 1901.151316]  ext4_evict_inode+0x524/0xba8 [ext4]
    [ 1901.151985]  evict+0x1a4/0x378
    [ 1901.152353]  iput+0x310/0x428
    [ 1901.152733]  do_unlinkat+0x260/0x428
    [ 1901.153056]  __arm64_sys_unlinkat+0x6c/0xc0
    [ 1901.153455]  el0_svc_common+0xc8/0x320
    [ 1901.153799]  el0_svc_handler+0xf8/0x160
    [ 1901.154265]  el0_svc+0x10/0x218
    [ 1901.154682] ==================================================================
    
    This issue may happens like this:
            Process1                               Process2
    ext4_evict_inode
      ext4_journal_start
       ext4_truncate
         ext4_ind_truncate
           ext4_free_branches
             ext4_ind_truncate_ensure_credits
               ext4_journal_ensure_credits_fn
                 ext4_journal_restart
                   handle->h_transaction = NULL;
                                               mount -o remount,abort  /mnt
                                               -> trigger JBD abort
                   start_this_handle -> will return failed
      ext4_xattr_delete_inode
        ext4_journal_ensure_credits
          ext4_journal_ensure_credits_fn
            __ext4_journal_ensure_credits
              jbd2_handle_buffer_credits
                journal = handle->h_transaction->t_journal; ->null-ptr-deref
    
    Now, indirect truncate process didn't handle error. To solve this issue
    maybe simply add check handle is abort in '__ext4_journal_ensure_credits'
    is enough, and i also think this is necessary.
    
    Cc: stable@kernel.org
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Link: https://lore.kernel.org/r/20211224100341.3299128-1-yebin10@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d60e9daba29e44e0f277333e46fff90c74509398
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Thu Dec 23 17:44:36 2021 +0100

    ext4: destroy ext4_fc_dentry_cachep kmemcache on module removal
    
    commit ab047d516dea72f011c15c04a929851e4d053109 upstream.
    
    The kmemcache for ext4_fc_dentry_cachep remains registered after module
    removal.
    
    Destroy ext4_fc_dentry_cachep kmemcache on module removal.
    
    Fixes: aa75f4d3daaeb ("ext4: main fast-commit commit path")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Reviewed-by: Lukas Czerner <lczerner@redhat.com>
    Reviewed-by: Harshad Shirwadkar <harshadshirwadkar@gmail.com>
    Link: https://lore.kernel.org/r/20211110134640.lyku5vklvdndw6uk@linutronix.de
    Link: https://lore.kernel.org/r/YbiK3JetFFl08bd7@linutronix.de
    Link: https://lore.kernel.org/r/20211223164436.2628390-1-bigeasy@linutronix.de
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f26b24b4c115f9c8fe8defd2c158420d30b7af0f
Author: Xin Yin <yinxin.x@bytedance.com>
Date:   Thu Dec 23 11:23:37 2021 +0800

    ext4: fast commit may miss tracking unwritten range during ftruncate
    
    commit 9725958bb75cdfa10f2ec11526fdb23e7485e8e4 upstream.
    
    If use FALLOC_FL_KEEP_SIZE to alloc unwritten range at bottom, the
    inode->i_size will not include the unwritten range. When call
    ftruncate with fast commit enabled, it will miss to track the
    unwritten range.
    
    Change to trace the full range during ftruncate.
    
    Signed-off-by: Xin Yin <yinxin.x@bytedance.com>
    Reviewed-by: Harshad Shirwadkar <harshadshirwadkar@gmail.com>
    Link: https://lore.kernel.org/r/20211223032337.5198-3-yinxin.x@bytedance.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04b562730677630d905a9e47c5e4826888745ebc
Author: Xin Yin <yinxin.x@bytedance.com>
Date:   Thu Dec 23 11:23:36 2021 +0800

    ext4: use ext4_ext_remove_space() for fast commit replay delete range
    
    commit 0b5b5a62b945a141e64011b2f90ee7e46f14be98 upstream.
    
    For now ,we use ext4_punch_hole() during fast commit replay delete range
    procedure. But it will be affected by inode->i_size, which may not
    correct during fast commit replay procedure. The following test will
    failed.
    
    -create & write foo (len 1000K)
    -falloc FALLOC_FL_ZERO_RANGE foo (range 400K - 600K)
    -create & fsync bar
    -falloc FALLOC_FL_PUNCH_HOLE foo (range 300K-500K)
    -fsync foo
    -crash before a full commit
    
    After the fast_commit reply procedure, the range 400K-500K will not be
    removed. Because in this case, when calling ext4_punch_hole() the
    inode->i_size is 0, and it just retruns with doing nothing.
    
    Change to use ext4_ext_remove_space() instead of ext4_punch_hole()
    to remove blocks of inode directly.
    
    Signed-off-by: Xin Yin <yinxin.x@bytedance.com>
    Reviewed-by: Harshad Shirwadkar <harshadshirwadkar@gmail.com>
    Link: https://lore.kernel.org/r/20211223032337.5198-2-yinxin.x@bytedance.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53998b3f6dcde1d6553e27db1957ac0545a6e19f
Author: Ye Bin <yebin10@huawei.com>
Date:   Thu Dec 23 09:55:06 2021 +0800

    ext4: Fix BUG_ON in ext4_bread when write quota data
    
    commit 380a0091cab482489e9b19e07f2a166ad2b76d5c upstream.
    
    We got issue as follows when run syzkaller:
    [  167.936972] EXT4-fs error (device loop0): __ext4_remount:6314: comm rep: Abort forced by user
    [  167.938306] EXT4-fs (loop0): Remounting filesystem read-only
    [  167.981637] Assertion failure in ext4_getblk() at fs/ext4/inode.c:847: '(EXT4_SB(inode->i_sb)->s_mount_state & EXT4_FC_REPLAY) || handle != NULL || create == 0'
    [  167.983601] ------------[ cut here ]------------
    [  167.984245] kernel BUG at fs/ext4/inode.c:847!
    [  167.984882] invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI
    [  167.985624] CPU: 7 PID: 2290 Comm: rep Tainted: G    B             5.16.0-rc5-next-20211217+ #123
    [  167.986823] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20190727_073836-buildvm-ppc64le-16.ppc.fedoraproject.org-3.fc31 04/01/2014
    [  167.988590] RIP: 0010:ext4_getblk+0x17e/0x504
    [  167.989189] Code: c6 01 74 28 49 c7 c0 a0 a3 5c 9b b9 4f 03 00 00 48 c7 c2 80 9c 5c 9b 48 c7 c6 40 b6 5c 9b 48 c7 c7 20 a4 5c 9b e8 77 e3 fd ff <0f> 0b 8b 04 244
    [  167.991679] RSP: 0018:ffff8881736f7398 EFLAGS: 00010282
    [  167.992385] RAX: 0000000000000094 RBX: 1ffff1102e6dee75 RCX: 0000000000000000
    [  167.993337] RDX: 0000000000000001 RSI: ffffffff9b6e29e0 RDI: ffffed102e6dee66
    [  167.994292] RBP: ffff88816a076210 R08: 0000000000000094 R09: ffffed107363fa09
    [  167.995252] R10: ffff88839b1fd047 R11: ffffed107363fa08 R12: ffff88816a0761e8
    [  167.996205] R13: 0000000000000000 R14: 0000000000000021 R15: 0000000000000001
    [  167.997158] FS:  00007f6a1428c740(0000) GS:ffff88839b000000(0000) knlGS:0000000000000000
    [  167.998238] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  167.999025] CR2: 00007f6a140716c8 CR3: 0000000133216000 CR4: 00000000000006e0
    [  167.999987] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  168.000944] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  168.001899] Call Trace:
    [  168.002235]  <TASK>
    [  168.007167]  ext4_bread+0xd/0x53
    [  168.007612]  ext4_quota_write+0x20c/0x5c0
    [  168.010457]  write_blk+0x100/0x220
    [  168.010944]  remove_free_dqentry+0x1c6/0x440
    [  168.011525]  free_dqentry.isra.0+0x565/0x830
    [  168.012133]  remove_tree+0x318/0x6d0
    [  168.014744]  remove_tree+0x1eb/0x6d0
    [  168.017346]  remove_tree+0x1eb/0x6d0
    [  168.019969]  remove_tree+0x1eb/0x6d0
    [  168.022128]  qtree_release_dquot+0x291/0x340
    [  168.023297]  v2_release_dquot+0xce/0x120
    [  168.023847]  dquot_release+0x197/0x3e0
    [  168.024358]  ext4_release_dquot+0x22a/0x2d0
    [  168.024932]  dqput.part.0+0x1c9/0x900
    [  168.025430]  __dquot_drop+0x120/0x190
    [  168.025942]  ext4_clear_inode+0x86/0x220
    [  168.026472]  ext4_evict_inode+0x9e8/0xa22
    [  168.028200]  evict+0x29e/0x4f0
    [  168.028625]  dispose_list+0x102/0x1f0
    [  168.029148]  evict_inodes+0x2c1/0x3e0
    [  168.030188]  generic_shutdown_super+0xa4/0x3b0
    [  168.030817]  kill_block_super+0x95/0xd0
    [  168.031360]  deactivate_locked_super+0x85/0xd0
    [  168.031977]  cleanup_mnt+0x2bc/0x480
    [  168.033062]  task_work_run+0xd1/0x170
    [  168.033565]  do_exit+0xa4f/0x2b50
    [  168.037155]  do_group_exit+0xef/0x2d0
    [  168.037666]  __x64_sys_exit_group+0x3a/0x50
    [  168.038237]  do_syscall_64+0x3b/0x90
    [  168.038751]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    In order to reproduce this problem, the following conditions need to be met:
    1. Ext4 filesystem with no journal;
    2. Filesystem image with incorrect quota data;
    3. Abort filesystem forced by user;
    4. umount filesystem;
    
    As in ext4_quota_write:
    ...
             if (EXT4_SB(sb)->s_journal && !handle) {
                     ext4_msg(sb, KERN_WARNING, "Quota write (off=%llu, len=%llu)"
                             " cancelled because transaction is not started",
                             (unsigned long long)off, (unsigned long long)len);
                     return -EIO;
             }
    ...
    We only check handle if NULL when filesystem has journal. There is need
    check handle if NULL even when filesystem has no journal.
    
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20211223015506.297766-1-yebin10@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da364ab35892f69785266a93bd174f647db1f670
Author: Luís Henriques <lhenriques@suse.de>
Date:   Tue Dec 14 17:50:58 2021 +0000

    ext4: set csum seed in tmp inode while migrating to extents
    
    commit e81c9302a6c3c008f5c30beb73b38adb0170ff2d upstream.
    
    When migrating to extents, the temporary inode will have it's own checksum
    seed.  This means that, when swapping the inodes data, the inode checksums
    will be incorrect.
    
    This can be fixed by recalculating the extents checksums again.  Or simply
    by copying the seed into the temporary inode.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=213357
    Reported-by: Jeroen van Wolffelaar <jeroen@wolffelaar.nl>
    Signed-off-by: Luís Henriques <lhenriques@suse.de>
    Link: https://lore.kernel.org/r/20211214175058.19511-1-lhenriques@suse.de
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4221629d5e1479db400d8a4cbf865c65a457630
Author: Xin Yin <yinxin.x@bytedance.com>
Date:   Tue Dec 21 10:28:39 2021 +0800

    ext4: fix fast commit may miss tracking range for FALLOC_FL_ZERO_RANGE
    
    commit 5e4d0eba1ccaf19f93222abdeda5a368be141785 upstream.
    
    when call falloc with FALLOC_FL_ZERO_RANGE, to set an range to unwritten,
    which has been already initialized. If the range is align to blocksize,
    fast commit will not track range for this change.
    
    Also track range for unwritten range in ext4_map_blocks().
    
    Signed-off-by: Xin Yin <yinxin.x@bytedance.com>
    Reviewed-by: Harshad Shirwadkar <harshadshirwadkar@gmail.com>
    Link: https://lore.kernel.org/r/20211221022839.374606-1-yinxin.x@bytedance.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 720508dd118d04035875823f44bcd27388ff39b2
Author: Harshad Shirwadkar <harshadshirwadkar@gmail.com>
Date:   Wed Dec 1 08:34:21 2021 -0800

    ext4: initialize err_blk before calling __ext4_get_inode_loc
    
    commit c27c29c6af4f3f4ce925a2111c256733c5a5b430 upstream.
    
    It is not guaranteed that __ext4_get_inode_loc will definitely set
    err_blk pointer when it returns EIO. To avoid using uninitialized
    variables, let's first set err_blk to 0.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Harshad Shirwadkar <harshadshirwadkar@gmail.com>
    Link: https://lore.kernel.org/r/20211201163421.2631661-1-harshads@google.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9ed0ea0a9fc59de71b230ff02f59a51fd174ca7
Author: Chunguang Xu <brookxu@tencent.com>
Date:   Tue Nov 23 09:17:57 2021 +0800

    ext4: fix a possible ABBA deadlock due to busy PA
    
    commit 8c80fb312d7abf8bcd66cca1d843a80318a2c522 upstream.
    
    We found on older kernel (3.10) that in the scenario of insufficient
    disk space, system may trigger an ABBA deadlock problem, it seems that
    this problem still exists in latest kernel, try to fix it here. The
    main process triggered by this problem is that task A occupies the PA
    and waits for the jbd2 transaction finish, the jbd2 transaction waits
    for the completion of task B's IO (plug_list), but task B waits for
    the release of PA by task A to finish discard, which indirectly forms
    an ABBA deadlock. The related calltrace is as follows:
    
        Task A
        vfs_write
        ext4_mb_new_blocks()
        ext4_mb_mark_diskspace_used()       JBD2
        jbd2_journal_get_write_access()  -> jbd2_journal_commit_transaction()
      ->schedule()                          filemap_fdatawait()
     |                                              |
     | Task B                                       |
     | do_unlinkat()                                |
     | ext4_evict_inode()                           |
     | jbd2_journal_begin_ordered_truncate()        |
     | filemap_fdatawrite_range()                   |
     | ext4_mb_new_blocks()                         |
      -ext4_mb_discard_group_preallocations() <-----
    
    Here, try to cancel ext4_mb_discard_group_preallocations() internal
    retry due to PA busy, and do a limited number of retries inside
    ext4_mb_discard_preallocations(), which can circumvent the above
    problems, but also has some advantages:
    
    1. Since the PA is in a busy state, if other groups have free PAs,
       keeping the current PA may help to reduce fragmentation.
    2. Continue to traverse forward instead of waiting for the current
       group PA to be released. In most scenarios, the PA discard time
       can be reduced.
    
    However, in the case of smaller free space, if only a few groups have
    space, then due to multiple traversals of the group, it may increase
    CPU overhead. But in contrast, I feel that the overall benefit is
    better than the cost.
    
    Signed-off-by: Chunguang Xu <brookxu@tencent.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/1637630277-23496-1-git-send-email-brookxu.cn@gmail.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 115b762b48ab83de2898b8c1a38e3799446a97af
Author: Jan Kara <jack@suse.cz>
Date:   Thu Oct 7 17:53:35 2021 +0200

    ext4: make sure quota gets properly shutdown on error
    
    commit 15fc69bbbbbc8c72e5f6cc4e1be0f51283c5448e upstream.
    
    When we hit an error when enabling quotas and setting inode flags, we do
    not properly shutdown quota subsystem despite returning error from
    Q_QUOTAON quotactl. This can lead to some odd situations like kernel
    using quota file while it is still writeable for userspace. Make sure we
    properly cleanup the quota subsystem in case of error.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Cc: stable@kernel.org
    Link: https://lore.kernel.org/r/20211007155336.12493-2-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 762e4c33e9e5ecdcfedb1752e38c2aac2921df2e
Author: Jan Kara <jack@suse.cz>
Date:   Thu Oct 7 17:53:36 2021 +0200

    ext4: make sure to reset inode lockdep class when quota enabling fails
    
    commit 4013d47a5307fdb5c13370b5392498b00fedd274 upstream.
    
    When we succeed in enabling some quota type but fail to enable another
    one with quota feature, we correctly disable all enabled quota types.
    However we forget to reset i_data_sem lockdep class. When the inode gets
    freed and reused, it will inherit this lockdep class (i_data_sem is
    initialized only when a slab is created) and thus eventually lockdep
    barfs about possible deadlocks.
    
    Reported-and-tested-by: syzbot+3b6f9218b1301ddda3e2@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Cc: stable@kernel.org
    Link: https://lore.kernel.org/r/20211007155336.12493-3-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8c3ec2e21b9cd9dbb7b91de982d6016010c5605
Author: Filipe Manana <fdmanana@suse.com>
Date:   Thu Dec 16 15:00:32 2021 +0000

    btrfs: respect the max size in the header when activating swap file
    
    commit c2f822635df873c510bda6fb7fd1b10b7c31be2d upstream.
    
    If we extended the size of a swapfile after its header was created (by the
    mkswap utility) and then try to activate it, we will map the entire file
    when activating the swap file, instead of limiting to the max size defined
    in the swap file's header.
    
    Currently test case generic/643 from fstests fails because we do not
    respect that size limit defined in the swap file's header.
    
    So fix this by not mapping file ranges beyond the max size defined in the
    swap header.
    
    This is the same type of bug that iomap used to have, and was fixed in
    commit 36ca7943ac18ae ("mm/swap: consider max pages in
    iomap_swapfile_add_extent").
    
    Fixes: ed46ff3d423780 ("Btrfs: support swap files")
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-and-tested-by: Josef Bacik <josef@toxicpanda.com
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7764bccae77d3620113576ed18abd5233ba07a6
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Wed Nov 24 14:14:24 2021 -0500

    btrfs: check the root node for uptodate before returning it
    
    commit 120de408e4b97504a2d9b5ca534b383de2c73d49 upstream.
    
    Now that we clear the extent buffer uptodate if we fail to write it out
    we need to check to see if our root node is uptodate before we search
    down it.  Otherwise we could return stale data (or potentially corrupt
    data that was caught by the write verification step) and think that the
    path is OK to search down.
    
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09e0ef287e93c65b6a78d2dca34ad5a6c78ef93b
Author: Filipe Manana <fdmanana@suse.com>
Date:   Wed Oct 27 18:30:25 2021 +0100

    btrfs: fix deadlock between quota enable and other quota operations
    
    commit 232796df8c1437c41d308d161007f0715bac0a54 upstream.
    
    When enabling quotas, we attempt to commit a transaction while holding the
    mutex fs_info->qgroup_ioctl_lock. This can result on a deadlock with other
    quota operations such as:
    
    - qgroup creation and deletion, ioctl BTRFS_IOC_QGROUP_CREATE;
    
    - adding and removing qgroup relations, ioctl BTRFS_IOC_QGROUP_ASSIGN.
    
    This is because these operations join a transaction and after that they
    attempt to lock the mutex fs_info->qgroup_ioctl_lock. Acquiring that mutex
    after joining or starting a transaction is a pattern followed everywhere
    in qgroups, so the quota enablement operation is the one at fault here,
    and should not commit a transaction while holding that mutex.
    
    Fix this by making the transaction commit while not holding the mutex.
    We are safe from two concurrent tasks trying to enable quotas because
    we are serialized by the rw semaphore fs_info->subvol_sem at
    btrfs_ioctl_quota_ctl(), which is the only call site for enabling
    quotas.
    
    When this deadlock happens, it produces a trace like the following:
    
      INFO: task syz-executor:25604 blocked for more than 143 seconds.
      Not tainted 5.15.0-rc6 #4
      "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
      task:syz-executor state:D stack:24800 pid:25604 ppid: 24873 flags:0x00004004
      Call Trace:
      context_switch kernel/sched/core.c:4940 [inline]
      __schedule+0xcd9/0x2530 kernel/sched/core.c:6287
      schedule+0xd3/0x270 kernel/sched/core.c:6366
      btrfs_commit_transaction+0x994/0x2e90 fs/btrfs/transaction.c:2201
      btrfs_quota_enable+0x95c/0x1790 fs/btrfs/qgroup.c:1120
      btrfs_ioctl_quota_ctl fs/btrfs/ioctl.c:4229 [inline]
      btrfs_ioctl+0x637e/0x7b70 fs/btrfs/ioctl.c:5010
      vfs_ioctl fs/ioctl.c:51 [inline]
      __do_sys_ioctl fs/ioctl.c:874 [inline]
      __se_sys_ioctl fs/ioctl.c:860 [inline]
      __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:860
      do_syscall_x64 arch/x86/entry/common.c:50 [inline]
      do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
      entry_SYSCALL_64_after_hwframe+0x44/0xae
      RIP: 0033:0x7f86920b2c4d
      RSP: 002b:00007f868f61ac58 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
      RAX: ffffffffffffffda RBX: 00007f86921d90a0 RCX: 00007f86920b2c4d
      RDX: 0000000020005e40 RSI: 00000000c0109428 RDI: 0000000000000008
      RBP: 00007f869212bd80 R08: 0000000000000000 R09: 0000000000000000
      R10: 0000000000000000 R11: 0000000000000246 R12: 00007f86921d90a0
      R13: 00007fff6d233e4f R14: 00007fff6d233ff0 R15: 00007f868f61adc0
      INFO: task syz-executor:25628 blocked for more than 143 seconds.
      Not tainted 5.15.0-rc6 #4
      "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
      task:syz-executor state:D stack:29080 pid:25628 ppid: 24873 flags:0x00004004
      Call Trace:
      context_switch kernel/sched/core.c:4940 [inline]
      __schedule+0xcd9/0x2530 kernel/sched/core.c:6287
      schedule+0xd3/0x270 kernel/sched/core.c:6366
      schedule_preempt_disabled+0xf/0x20 kernel/sched/core.c:6425
      __mutex_lock_common kernel/locking/mutex.c:669 [inline]
      __mutex_lock+0xc96/0x1680 kernel/locking/mutex.c:729
      btrfs_remove_qgroup+0xb7/0x7d0 fs/btrfs/qgroup.c:1548
      btrfs_ioctl_qgroup_create fs/btrfs/ioctl.c:4333 [inline]
      btrfs_ioctl+0x683c/0x7b70 fs/btrfs/ioctl.c:5014
      vfs_ioctl fs/ioctl.c:51 [inline]
      __do_sys_ioctl fs/ioctl.c:874 [inline]
      __se_sys_ioctl fs/ioctl.c:860 [inline]
      __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:860
      do_syscall_x64 arch/x86/entry/common.c:50 [inline]
      do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
      entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Reported-by: Hao Sun <sunhao.th@gmail.com>
    Link: https://lore.kernel.org/linux-btrfs/CACkBjsZQF19bQ1C6=yetF3BvL10OSORpFUcWXTP6HErshDB4dQ@mail.gmail.com/
    Fixes: 340f1aa27f36 ("btrfs: qgroups: Move transaction management inside btrfs_quota_enable/disable")
    CC: stable@vger.kernel.org # 4.19
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56f974d583fcf7c8bb8b62d5164315de25268079
Author: Ghalem Boudour <ghalem.boudour@6wind.com>
Date:   Fri Nov 19 18:20:16 2021 +0100

    xfrm: fix policy lookup for ipv6 gre packets
    
    commit bcf141b2eb551b3477b24997ebc09c65f117a803 upstream.
    
    On egress side, xfrm lookup is called from __gre6_xmit() with the
    fl6_gre_key field not initialized leading to policies selectors check
    failure. Consequently, gre packets are sent without encryption.
    
    On ingress side, INET6_PROTO_NOPOLICY was set, thus packets were not
    checked against xfrm policies. Like for egress side, fl6_gre_key should be
    correctly set, this is now done in decode_session6().
    
    Fixes: c12b395a4664 ("gre: Support GRE over IPv6")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ghalem Boudour <ghalem.boudour@6wind.com>
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84166c1177f39b852f92dde675d290e697a04b8b
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Nov 24 16:59:44 2021 +0100

    PCI: pci-bridge-emul: Set PCI_STATUS_CAP_LIST for PCIe device
    
    commit 3be9d243b21724d49b65043d4520d688b6040b36 upstream.
    
    Since all PCI Express device Functions are required to implement the PCI
    Express Capability structure, Capabilities List bit in PCI Status Register
    must be hardwired to 1b. Capabilities Pointer register (which is already
    set by pci-bride-emul.c driver) is valid only when Capabilities List is set
    to 1b.
    
    Link: https://lore.kernel.org/r/20211124155944.1290-7-pali@kernel.org
    Fixes: 23a5fba4d941 ("PCI: Introduce PCI bridge emulated config space common logic")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7aeeb9fe9ca0b9e084c3ac4c1361b188c31fa9f6
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Nov 24 16:59:43 2021 +0100

    PCI: pci-bridge-emul: Correctly set PCIe capabilities
    
    commit 1f1050c5e1fefb34ac90a506b43e9da803b5f8f7 upstream.
    
    Older mvebu hardware provides PCIe Capability structure only in version 1.
    New mvebu and aardvark hardware provides it in version 2. So do not force
    version to 2 in pci_bridge_emul_init() and rather allow drivers to set
    correct version. Drivers need to set version in pcie_conf.cap field without
    overwriting PCI_CAP_LIST_ID register. Both drivers (mvebu and aardvark) do
    not provide slot support yet, so do not set PCI_EXP_FLAGS_SLOT flag.
    
    Link: https://lore.kernel.org/r/20211124155944.1290-6-pali@kernel.org
    Fixes: 23a5fba4d941 ("PCI: Introduce PCI bridge emulated config space common logic")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af1d0acdaca70c62861964288dcf1dc1b9108b5c
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Nov 24 16:59:42 2021 +0100

    PCI: pci-bridge-emul: Fix definitions of reserved bits
    
    commit 12998087d9f48b66965b97412069c7826502cd7e upstream.
    
    Some bits in PCI_EXP registers are reserved for non-root ports. Driver
    pci-bridge-emul.c implements PCIe Root Port device therefore it should not
    allow setting reserved bits of registers.
    
    Properly define non-reserved bits for all PCI_EXP registers.
    
    Link: https://lore.kernel.org/r/20211124155944.1290-5-pali@kernel.org
    Fixes: 23a5fba4d941 ("PCI: Introduce PCI bridge emulated config space common logic")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f2ae6691e73c25798a38aa6204b2763d5bb982f
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Nov 24 16:59:40 2021 +0100

    PCI: pci-bridge-emul: Properly mark reserved PCIe bits in PCI config space
    
    commit 7b067ac63a5730d2fae18399fed7e45f23d36912 upstream.
    
    Some bits in PCI config space are reserved when device is PCIe. Properly
    define behavior of PCI registers for PCIe emulated bridge and ensure that
    it would not be possible change these reserved bits.
    
    Link: https://lore.kernel.org/r/20211124155944.1290-3-pali@kernel.org
    Fixes: 23a5fba4d941 ("PCI: Introduce PCI bridge emulated config space common logic")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a0d437d8a76474452cb91d2fc729020c2371ad3
Author: Pali Rohár <pali@kernel.org>
Date:   Wed Nov 24 16:59:39 2021 +0100

    PCI: pci-bridge-emul: Make expansion ROM Base Address register read-only
    
    commit 1c1a3b4d3e86b997a313ffb297c1129540882859 upstream.
    
    If expansion ROM is unsupported (which is the case of pci-bridge-emul.c
    driver) then ROM Base Address register must be implemented as read-only
    register that return 0 when read, same as for unused Base Address
    registers.
    
    Link: https://lore.kernel.org/r/20211124155944.1290-2-pali@kernel.org
    Fixes: 23a5fba4d941 ("PCI: Introduce PCI bridge emulated config space common logic")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit def2825b09ece8c8b6e2514c8f785073bf3a864e
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Dec 17 15:17:09 2021 +0100

    PCI: pciehp: Use down_read/write_nested(reset_lock) to fix lockdep errors
    
    commit 085a9f43433f30cbe8a1ade62d9d7827c3217f4d upstream.
    
    Use down_read_nested() and down_write_nested() when taking the
    ctrl->reset_lock rw-sem, passing the number of PCIe hotplug controllers in
    the path to the PCI root bus as lock subclass parameter.
    
    This fixes the following false-positive lockdep report when unplugging a
    Lenovo X1C8 from a Lenovo 2nd gen TB3 dock:
    
      pcieport 0000:06:01.0: pciehp: Slot(1): Link Down
      pcieport 0000:06:01.0: pciehp: Slot(1): Card not present
      ============================================
      WARNING: possible recursive locking detected
      5.16.0-rc2+ #621 Not tainted
      --------------------------------------------
      irq/124-pciehp/86 is trying to acquire lock:
      ffff8e5ac4299ef8 (&ctrl->reset_lock){.+.+}-{3:3}, at: pciehp_check_presence+0x23/0x80
    
      but task is already holding lock:
      ffff8e5ac4298af8 (&ctrl->reset_lock){.+.+}-{3:3}, at: pciehp_ist+0xf3/0x180
    
       other info that might help us debug this:
       Possible unsafe locking scenario:
    
             CPU0
             ----
        lock(&ctrl->reset_lock);
        lock(&ctrl->reset_lock);
    
       *** DEADLOCK ***
    
       May be due to missing lock nesting notation
    
      3 locks held by irq/124-pciehp/86:
       #0: ffff8e5ac4298af8 (&ctrl->reset_lock){.+.+}-{3:3}, at: pciehp_ist+0xf3/0x180
       #1: ffffffffa3b024e8 (pci_rescan_remove_lock){+.+.}-{3:3}, at: pciehp_unconfigure_device+0x31/0x110
       #2: ffff8e5ac1ee2248 (&dev->mutex){....}-{3:3}, at: device_release_driver+0x1c/0x40
    
      stack backtrace:
      CPU: 4 PID: 86 Comm: irq/124-pciehp Not tainted 5.16.0-rc2+ #621
      Hardware name: LENOVO 20U90SIT19/20U90SIT19, BIOS N2WET30W (1.20 ) 08/26/2021
      Call Trace:
       <TASK>
       dump_stack_lvl+0x59/0x73
       __lock_acquire.cold+0xc5/0x2c6
       lock_acquire+0xb5/0x2b0
       down_read+0x3e/0x50
       pciehp_check_presence+0x23/0x80
       pciehp_runtime_resume+0x5c/0xa0
       device_for_each_child+0x45/0x70
       pcie_port_device_runtime_resume+0x20/0x30
       pci_pm_runtime_resume+0xa7/0xc0
       __rpm_callback+0x41/0x110
       rpm_callback+0x59/0x70
       rpm_resume+0x512/0x7b0
       __pm_runtime_resume+0x4a/0x90
       __device_release_driver+0x28/0x240
       device_release_driver+0x26/0x40
       pci_stop_bus_device+0x68/0x90
       pci_stop_bus_device+0x2c/0x90
       pci_stop_and_remove_bus_device+0xe/0x20
       pciehp_unconfigure_device+0x6c/0x110
       pciehp_disable_slot+0x5b/0xe0
       pciehp_handle_presence_or_link_change+0xc3/0x2f0
       pciehp_ist+0x179/0x180
    
    This lockdep warning is triggered because with Thunderbolt, hotplug ports
    are nested. When removing multiple devices in a daisy-chain, each hotplug
    port's reset_lock may be acquired recursively. It's never the same lock, so
    the lockdep splat is a false positive.
    
    Because locks at the same hierarchy level are never acquired recursively, a
    per-level lockdep class is sufficient to fix the lockdep warning.
    
    The choice to use one lockdep subclass per pcie-hotplug controller in the
    path to the root-bus was made to conserve class keys because their number
    is limited and the complexity grows quadratically with number of keys
    according to Documentation/locking/lockdep-design.rst.
    
    Link: https://lore.kernel.org/linux-pci/20190402021933.GA2966@mit.edu/
    Link: https://lore.kernel.org/linux-pci/de684a28-9038-8fc6-27ca-3f6f2f6400d7@redhat.com/
    Link: https://lore.kernel.org/r/20211217141709.379663-1-hdegoede@redhat.com
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=208855
    Reported-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Lukas Wunner <lukas@wunner.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cbe8f8deb6286a33937b9b95204c6f77b232796
Author: Rob Herring <robh@kernel.org>
Date:   Mon Nov 29 11:36:37 2021 -0600

    PCI: xgene: Fix IB window setup
    
    commit c7a75d07827a1f33d566e18e6098379cc2a0c2b2 upstream.
    
    Commit 6dce5aa59e0b ("PCI: xgene: Use inbound resources for setup")
    broke PCI support on XGene. The cause is the IB resources are now sorted
    in address order instead of being in DT dma-ranges order. The result is
    which inbound registers are used for each region are swapped. I don't
    know the details about this h/w, but it appears that IB region 0
    registers can't handle a size greater than 4GB. In any case, limiting
    the size for region 0 is enough to get back to the original assignment
    of dma-ranges to regions.
    
    Link: https://lore.kernel.org/all/CA+enf=v9rY_xnZML01oEgKLmvY1NGBUUhnSJaETmXtDtXfaczA@mail.gmail.com/
    Link: https://lore.kernel.org/r/20211129173637.303201-1-robh@kernel.org
    Fixes: 6dce5aa59e0b ("PCI: xgene: Use inbound resources for setup")
    Reported-by: Stéphane Graber <stgraber@ubuntu.com>
    Tested-by: Stéphane Graber <stgraber@ubuntu.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Krzysztof Wilczyński <kw@linux.com>
    Cc: stable@vger.kernel.org # v5.5+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e09f47e77b6e3148c02d88ef91e9ab16a005cc95
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Thu Dec 16 20:33:42 2021 +1000

    powerpc/64s/radix: Fix huge vmap false positive
    
    commit 467ba14e1660b52a2f9338b484704c461bd23019 upstream.
    
    pmd_huge() is defined to false when HUGETLB_PAGE is not configured, but
    the vmap code still installs huge PMDs. This leads to false bad PMD
    errors when vunmapping because it is not seen as a huge PTE, and the bad
    PMD check catches it. The end result may not be much more serious than
    some bad pmd warning messages, because the pmd_none_or_clear_bad() does
    what we wanted and clears the huge PTE anyway.
    
    Fix this by checking pmd_is_leaf(), which checks for a PTE regardless of
    config options. The whole huge/large/leaf stuff is a tangled mess but
    that's kernel-wide and not something we can improve much in arch/powerpc
    code.
    
    pmd_page(), pud_page(), etc., called by vmalloc_to_page() on huge vmaps
    can similarly trigger a false VM_BUG_ON when CONFIG_HUGETLB_PAGE=n, so
    those checks are adjusted. The checks were added by commit d6eacedd1f0e
    ("powerpc/book3s: Use config independent helpers for page table walk"),
    while implementing a similar fix for other page table walking functions.
    
    Fixes: d909f9109c30 ("powerpc/64s/radix: Enable HAVE_ARCH_HUGE_VMAP")
    Cc: stable@vger.kernel.org # v5.3+
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211216103342.609192-1-npiggin@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb44b1386af5751e0faec3a06e65078f146f81a7
Author: John David Anglin <dave.anglin@bell.net>
Date:   Wed Dec 22 16:01:31 2021 +0000

    parisc: Fix lpa and lpa_user defines
    
    commit db19c6f1a2a353cc8dec35b4789733a3cf6e2838 upstream.
    
    While working on the rewrite to the light-weight syscall and futex code, I
    experimented with using a hash index based on the user physical address of
    atomic variable. This exposed two problems with the lpa and lpa_user defines.
    
    Because of the copy instruction, the pa argument needs to be an early clobber
    argument. This prevents gcc from allocating the va and pa arguments to the same
    register.
    
    Secondly, the lpa instruction can cause a page fault so we need to catch
    exceptions.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Fixes: 116d753308cf ("parisc: Use lpa instruction to load physical addresses in driver code")
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: stable@vger.kernel.org # v5.2+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b78ee2341d4496688a157ae3fc901cc6c3c4385
Author: Brian Norris <briannorris@chromium.org>
Date:   Wed Nov 3 13:52:00 2021 -0700

    drm/bridge: analogix_dp: Make PSR-exit block less
    
    commit c4c6ef229593366ab593d4d424addc7025b54a76 upstream.
    
    Prior to commit 6c836d965bad ("drm/rockchip: Use the helpers for PSR"),
    "PSR exit" used non-blocking analogix_dp_send_psr_spd(). The refactor
    started using the blocking variant, for a variety of reasons -- quoting
    Sean Paul's potentially-faulty memory:
    
    """
     - To avoid racing a subsequent PSR entry (if exit takes a long time)
     - To avoid racing disable/modeset
     - We're not displaying new content while exiting PSR anyways, so there
       is minimal utility in allowing frames to be submitted
     - We're lying to userspace telling them frames are on the screen when
       we're just dropping them on the floor
    """
    
    However, I'm finding that this blocking transition is causing upwards of
    60+ ms of unneeded latency on PSR-exit, to the point that initial cursor
    movements when leaving PSR are unbearably jumpy.
    
    It turns out that we need to meet in the middle somewhere: Sean is right
    that we were "lying to userspace" with a non-blocking PSR-exit, but the
    new blocking behavior is also waiting too long:
    
    According to the eDP specification, the sink device must support PSR
    entry transitions from both state 4 (ACTIVE_RESYNC) and state 0
    (INACTIVE). It also states that in ACTIVE_RESYNC, "the Sink device must
    display the incoming active frames from the Source device with no
    visible glitches and/or artifacts."
    
    Thus, for our purposes, we only need to wait for ACTIVE_RESYNC before
    moving on; we are ready to display video, and subsequent PSR-entry is
    safe.
    
    Tested on a Samsung Chromebook Plus (i.e., Rockchip RK3399 Gru Kevin),
    where this saves about 60ms of latency, for PSR-exit that used to
    take about 80ms.
    
    Fixes: 6c836d965bad ("drm/rockchip: Use the helpers for PSR")
    Cc: <stable@vger.kernel.org>
    Cc: Zain Wang <wzz@rock-chips.com>
    Cc: Tomasz Figa <tfiga@chromium.org>
    Cc: Heiko Stuebner <heiko@sntech.de>
    Cc: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Reviewed-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211103135112.v3.1.I67612ea073c3306c71b46a87be894f79707082df@changeid
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8cbbf4a6f1acdf0f392694ebc719b584a40400f6
Author: Ilia Mirkin <imirkin@alum.mit.edu>
Date:   Sun Mar 7 12:48:53 2021 -0500

    drm/nouveau/kms/nv04: use vzalloc for nv04_display
    
    commit bd6e07e72f37f34535bec7eebc807e5fcfe37b43 upstream.
    
    The struct is giant, and triggers an order-7 allocation (512K). There is
    no reason for this to be kmalloc-type memory, so switch to vmalloc. This
    should help loading nouveau on low-memory and/or long-running systems.
    
    Reported-by: Nathan E. Egge <unlord@xiph.org>
    Signed-off-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Reviewed-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Link: https://gitlab.freedesktop.org/drm/nouveau/-/merge_requests/10
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 605583fcccb51c73362f5c2b326693da692e4492
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Fri Dec 17 11:59:28 2021 +0100

    drm/etnaviv: limit submit sizes
    
    commit 6dfa2fab8ddd46faa771a102672176bee7a065de upstream.
    
    Currently we allow rediculous amounts of kernel memory being allocated
    via the etnaviv GEM_SUBMIT ioctl, which is a pretty easy DoS vector. Put
    some reasonable limits in to fix this.
    
    The commandstream size is limited to 64KB, which was already a soft limit
    on older kernels after which the kernel only took submits on a best effort
    base, so there is no userspace that tries to submit commandstreams larger
    than this. Even if the whole commandstream is a single incrementing address
    load, the size limit also limits the number of potential relocs and
    referenced buffers to slightly under 64K, so use the same limit for those
    arguments. The performance monitoring infrastructure currently supports
    less than 50 performance counter signals, so limiting them to 128 on a
    single submit seems like a reasonably future-proof number for now. This
    number can be bumped if needed without breaking the interface.
    
    Cc: stable@vger.kernel.org
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c1e3d8b1bff4c861c9ebe2d37a5b296fc7ee207
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Wed Dec 1 14:59:29 2021 +0200

    device property: Fix fwnode_graph_devcon_match() fwnode leak
    
    commit 4a7f4110f79163fd53ea65438041994ed615e3af upstream.
    
    For each endpoint it encounters, fwnode_graph_devcon_match() checks
    whether the endpoint's remote port parent device is available. If it is
    not, it ignores the endpoint but does not put the reference to the remote
    endpoint port parent fwnode. For available devices the fwnode handle
    reference is put as expected.
    
    Put the reference for unavailable devices now.
    
    Fixes: 637e9e52b185 ("device connection: Find device connections also from device graphs")
    Cc: 5.1+ <stable@vger.kernel.org> # 5.1+
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecb71f7bd584cd56713b139b6429a8ddaef30f7b
Author: Alexander Gordeev <agordeev@linux.ibm.com>
Date:   Thu Nov 4 07:14:44 2021 +0100

    s390/mm: fix 2KB pgtable release race
    
    commit c2c224932fd0ee6854d6ebfc8d059c2bcad86606 upstream.
    
    There is a race on concurrent 2KB-pgtables release paths when
    both upper and lower halves of the containing parent page are
    freed, one via page_table_free_rcu() + __tlb_remove_table(),
    and the other via page_table_free(). The race might lead to a
    corruption as result of remove of list item in page_table_free()
    concurrently with __free_page() in __tlb_remove_table().
    
    Let's assume first the lower and next the upper 2KB-pgtables are
    freed from a page. Since both halves of the page are allocated
    the tracking byte (bits 24-31 of the page _refcount) has value
    of 0x03 initially:
    
    CPU0                            CPU1
    ----                            ----
    
    page_table_free_rcu() // lower half
    {
            // _refcount[31..24] == 0x03
            ...
            atomic_xor_bits(&page->_refcount,
                            0x11U << (0 + 24));
            // _refcount[31..24] <= 0x12
            ...
            table = table | (1U << 0);
            tlb_remove_table(tlb, table);
    }
    ...
    __tlb_remove_table()
    {
            // _refcount[31..24] == 0x12
            mask = _table & 3;
            // mask <= 0x01
            ...
    
                                    page_table_free() // upper half
                                    {
                                            // _refcount[31..24] == 0x12
                                            ...
                                            atomic_xor_bits(
                                                    &page->_refcount,
                                                    1U << (1 + 24));
                                            // _refcount[31..24] <= 0x10
                                            // mask <= 0x10
                                            ...
            atomic_xor_bits(&page->_refcount,
                            mask << (4 + 24));
            // _refcount[31..24] <= 0x00
            // mask <= 0x00
            ...
            if (mask != 0) // == false
                    break;
            fallthrough;
            ...
                                            if (mask & 3) // == false
                                                    ...
                                            else
            __free_page(page);                      list_del(&page->lru);
            ^^^^^^^^^^^^^^^^^^      RACE!           ^^^^^^^^^^^^^^^^^^^^^
    }                                       ...
                                    }
    
    The problem is page_table_free() releases the page as result of
    lower nibble unset and __tlb_remove_table() observing zero too
    early. With this update page_table_free() will use the similar
    logic as page_table_free_rcu() + __tlb_remove_table(), and mark
    the fragment as pending for removal in the upper nibble until
    after the list_del().
    
    In other words, the parent page is considered as unreferenced and
    safe to release only when the lower nibble is cleared already and
    unsetting a bit in upper nibble results in that nibble turned zero.
    
    Cc: stable@vger.kernel.org
    Suggested-by: Vlastimil Babka <vbabka@suse.com>
    Reviewed-by: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
    Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 798754ba48b7a8f6dc42883b0122859a281c9644
Author: Ilan Peer <ilan.peer@intel.com>
Date:   Fri Dec 10 09:06:21 2021 +0200

    iwlwifi: mvm: Increase the scan timeout guard to 30 seconds
    
    commit ced50f1133af12f7521bb777fcf4046ca908fb77 upstream.
    
    With the introduction of 6GHz channels the scan guard timeout should
    be adjusted to account for the following extreme case:
    
    - All 6GHz channels are scanned passively: 58 channels.
    - The scan is fragmented with the following parameters: 3 fragments,
      95 TUs suspend time, 44 TUs maximal out of channel time.
    
    The above would result with scan time of more than 24 seconds. Thus,
    set the timeout to 30 seconds.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Ilan Peer <ilan.peer@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20211210090244.3c851b93aef5.I346fa2e1d79220a6770496e773c6f87a2ad9e6c4@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c524f4cfb3e59d412dc6b532481bbe4190f9e5a6
Author: Xiangyang Zhang <xyz.sun.ok@gmail.com>
Date:   Fri Jan 7 23:02:42 2022 +0800

    tracing/kprobes: 'nmissed' not showed correctly for kretprobe
    
    commit dfea08a2116fe327f79d8f4d4b2cf6e0c88be11f upstream.
    
    The 'nmissed' column of the 'kprobe_profile' file for kretprobe is
    not showed correctly, kretprobe can be skipped by two reasons,
    shortage of kretprobe_instance which is counted by tk->rp.nmissed,
    and kprobe itself is missed by some reason, so to show the sum.
    
    Link: https://lkml.kernel.org/r/20220107150242.5019-1-xyz.sun.ok@gmail.com
    
    Cc: stable@vger.kernel.org
    Fixes: 4a846b443b4e ("tracing/kprobes: Cleanup kprobe tracer code")
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Xiangyang Zhang <xyz.sun.ok@gmail.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b72075e395b33761c574c4afbf6bb62fcab3ce6a
Author: Andrey Ryabinin <arbn@yandex-team.com>
Date:   Mon Nov 15 19:46:04 2021 +0300

    cputime, cpuacct: Include guest time in user time in cpuacct.stat
    
    commit 9731698ecb9c851f353ce2496292ff9fcea39dff upstream.
    
    cpuacct.stat in no-root cgroups shows user time without guest time
    included int it. This doesn't match with user time shown in root
    cpuacct.stat and /proc/<pid>/stat. This also affects cgroup2's cpu.stat
    in the same way.
    
    Make account_guest_time() to add user time to cgroup's cpustat to
    fix this.
    
    Fixes: ef12fefabf94 ("cpuacct: add per-cgroup utime/stime statistics")
    Signed-off-by: Andrey Ryabinin <arbn@yandex-team.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Daniel Jordan <daniel.m.jordan@oracle.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211115164607.23784-1-arbn@yandex-team.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13518f058fdee42d7b624e22add590fa1e5badbf
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sat Dec 18 10:58:56 2021 +0100

    serial: Fix incorrect rs485 polarity on uart open
    
    commit d3b3404df318504ec084213ab1065b73f49b0f1d upstream.
    
    Commit a6845e1e1b78 ("serial: core: Consider rs485 settings to drive
    RTS") sought to deassert RTS when opening an rs485-enabled uart port.
    That way, the transceiver does not occupy the bus until it transmits
    data.
    
    Unfortunately, the commit mixed up the logic and *asserted* RTS instead
    of *deasserting* it:
    
    The commit amended uart_port_dtr_rts(), which raises DTR and RTS when
    opening an rs232 port.  "Raising" actually means lowering the signal
    that's coming out of the uart, because an rs232 transceiver not only
    changes a signal's voltage level, it also *inverts* the signal.  See
    the simplified schematic in the MAX232 datasheet for an example:
    https://www.ti.com/lit/ds/symlink/max232.pdf
    
    So, to raise RTS on an rs232 port, TIOCM_RTS is *set* in port->mctrl
    and that results in the signal being driven low.
    
    In contrast to rs232, the signal level for rs485 Transmit Enable is the
    identity, not the inversion:  If the transceiver expects a "high" RTS
    signal for Transmit Enable, the signal coming out of the uart must also
    be high, so TIOCM_RTS must be *cleared* in port->mctrl.
    
    The commit did the exact opposite, but it's easy to see why given the
    confusing semantics of rs232 and rs485.  Fix it.
    
    Fixes: a6845e1e1b78 ("serial: core: Consider rs485 settings to drive RTS")
    Cc: stable@vger.kernel.org # v4.14+
    Cc: Rafael Gago Castano <rgc@hms.se>
    Cc: Jan Kiszka <jan.kiszka@siemens.com>
    Cc: Su Bao Cheng <baocheng.su@siemens.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://lore.kernel.org/r/9395767847833f2f3193c49cde38501eeb3b5669.1639821059.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9668cf9e4af0a0989c5f8f975213a58e74568a17
Author: Xie Yongji <xieyongji@bytedance.com>
Date:   Mon Nov 22 17:05:31 2021 +0800

    fuse: Pass correct lend value to filemap_write_and_wait_range()
    
    commit e388164ea385f04666c4633f5dc4f951fca71890 upstream.
    
    The acceptable maximum value of lend parameter in
    filemap_write_and_wait_range() is LLONG_MAX rather than -1. And there is
    also some logic depending on LLONG_MAX check in write_cache_pages(). So
    let's pass LLONG_MAX to filemap_write_and_wait_range() in
    fuse_writeback_range() instead.
    
    Fixes: 59bda8ecee2f ("fuse: flush extending writes")
    Signed-off-by: Xie Yongji <xieyongji@bytedance.com>
    Cc: <stable@vger.kernel.org> # v5.15
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fbaddd783fdc7c074ac9af5aef9baa45596b8b3
Author: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date:   Fri Dec 10 11:28:17 2021 +0200

    xen/gntdev: fix unmap notification order
    
    commit ce2f46f3531a03781181b7f4bd1ff9f8c5086e7e upstream.
    
    While working with Xen's libxenvchan library I have faced an issue with
    unmap notifications sent in wrong order if both UNMAP_NOTIFY_SEND_EVENT
    and UNMAP_NOTIFY_CLEAR_BYTE were requested: first we send an event channel
    notification and then clear the notification byte which renders in the below
    inconsistency (cli_live is the byte which was requested to be cleared on unmap):
    
    [  444.514243] gntdev_put_map UNMAP_NOTIFY_SEND_EVENT map->notify.event 6
    libxenvchan_is_open cli_live 1
    [  444.515239] __unmap_grant_pages UNMAP_NOTIFY_CLEAR_BYTE at 14
    
    Thus it is not possible to reliably implement the checks like
    - wait for the notification (UNMAP_NOTIFY_SEND_EVENT)
    - check the variable (UNMAP_NOTIFY_CLEAR_BYTE)
    because it is possible that the variable gets checked before it is cleared
    by the kernel.
    
    To fix that we need to re-order the notifications, so the variable is first
    gets cleared and then the event channel notification is sent.
    With this fix I can see the correct order of execution:
    
    [   54.522611] __unmap_grant_pages UNMAP_NOTIFY_CLEAR_BYTE at 14
    [   54.537966] gntdev_put_map UNMAP_NOTIFY_SEND_EVENT map->notify.event 6
    libxenvchan_is_open cli_live 0
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20211210092817.580718-1-andr2000@gmail.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67b078d996f723fe835edc2997a6fc4f31a16d02
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Wed Dec 22 13:48:12 2021 +0900

    spi: uniphier: Fix a bug that doesn't point to private data correctly
    
    commit 80bb73a9fbcde4ecc55e12f10c73fabbe68a24d1 upstream.
    
    In uniphier_spi_remove(), there is a wrong code to get private data from
    the platform device, so the driver can't be removed properly.
    
    The driver should get spi_master from the platform device and retrieve
    the private data from it.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 5ba155a4d4cc ("spi: add SPI controller driver for UniPhier SoC")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Link: https://lore.kernel.org/r/1640148492-32178-1-git-send-email-hayashi.kunihiko@socionext.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05026c4e94c9bc723013ea0f7a93fbae2bb0b257
Author: Patrick Williams <patrick@stwcx.xyz>
Date:   Thu Dec 23 09:49:31 2021 -0600

    tpm: fix NPE on probe for missing device
    
    commit 84cc69589700b90a4c8d27b481a51fce8cca6051 upstream.
    
    When using the tpm_tis-spi driver on a system missing the physical TPM,
    a null pointer exception was observed.
    
        [    0.938677] Unable to handle kernel NULL pointer dereference at virtual address 00000004
        [    0.939020] pgd = 10c753cb
        [    0.939237] [00000004] *pgd=00000000
        [    0.939808] Internal error: Oops: 5 [#1] SMP ARM
        [    0.940157] CPU: 0 PID: 48 Comm: kworker/u4:1 Not tainted 5.15.10-dd1e40c #1
        [    0.940364] Hardware name: Generic DT based system
        [    0.940601] Workqueue: events_unbound async_run_entry_fn
        [    0.941048] PC is at tpm_tis_remove+0x28/0xb4
        [    0.941196] LR is at tpm_tis_core_init+0x170/0x6ac
    
    This is due to an attempt in 'tpm_tis_remove' to use the drvdata, which
    was not initialized in 'tpm_tis_core_init' prior to the first error.
    
    Move the initialization of drvdata earlier so 'tpm_tis_remove' has
    access to it.
    
    Signed-off-by: Patrick Williams <patrick@stwcx.xyz>
    Fixes: 79ca6f74dae0 ("tpm: fix Atmel TPM crash caused by too frequent queries")
    Cc: stable@vger.kernel.org
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76006d33f1c8cabe28e5f3adfad0f38f273195ad
Author: Petr Cvachoucek <cvachoucek@gmail.com>
Date:   Mon Aug 30 21:20:37 2021 +0200

    ubifs: Error path in ubifs_remount_rw() seems to wrongly free write buffers
    
    commit 3fea4d9d160186617ff40490ae01f4f4f36b28ff upstream.
    
    it seems freeing the write buffers in the error path of the
    ubifs_remount_rw() is wrong. It leads later to a kernel oops like this:
    
    [10016.431274] UBIFS (ubi0:0): start fixing up free space
    [10090.810042] UBIFS (ubi0:0): free space fixup complete
    [10090.814623] UBIFS error (ubi0:0 pid 512): ubifs_remount_fs: cannot
    spawn "ubifs_bgt0_0", error -4
    [10101.915108] UBIFS (ubi0:0): background thread "ubifs_bgt0_0" started,
    PID 517
    [10105.275498] Unable to handle kernel NULL pointer dereference at
    virtual address 0000000000000030
    [10105.284352] Mem abort info:
    [10105.287160]   ESR = 0x96000006
    [10105.290252]   EC = 0x25: DABT (current EL), IL = 32 bits
    [10105.295592]   SET = 0, FnV = 0
    [10105.298652]   EA = 0, S1PTW = 0
    [10105.301848] Data abort info:
    [10105.304723]   ISV = 0, ISS = 0x00000006
    [10105.308573]   CM = 0, WnR = 0
    [10105.311564] user pgtable: 4k pages, 48-bit VAs, pgdp=00000000f03d1000
    [10105.318034] [0000000000000030] pgd=00000000f6cee003,
    pud=00000000f4884003, pmd=0000000000000000
    [10105.326783] Internal error: Oops: 96000006 [#1] PREEMPT SMP
    [10105.332355] Modules linked in: ath10k_pci ath10k_core ath mac80211
    libarc4 cfg80211 nvme nvme_core cryptodev(O)
    [10105.342468] CPU: 3 PID: 518 Comm: touch Tainted: G           O
    5.4.3 #1
    [10105.349517] Hardware name: HYPEX CPU (DT)
    [10105.353525] pstate: 40000005 (nZcv daif -PAN -UAO)
    [10105.358324] pc : atomic64_try_cmpxchg_acquire.constprop.22+0x8/0x34
    [10105.364596] lr : mutex_lock+0x1c/0x34
    [10105.368253] sp : ffff000075633aa0
    [10105.371563] x29: ffff000075633aa0 x28: 0000000000000001
    [10105.376874] x27: ffff000076fa80c8 x26: 0000000000000004
    [10105.382185] x25: 0000000000000030 x24: 0000000000000000
    [10105.387495] x23: 0000000000000000 x22: 0000000000000038
    [10105.392807] x21: 000000000000000c x20: ffff000076fa80c8
    [10105.398119] x19: ffff000076fa8000 x18: 0000000000000000
    [10105.403429] x17: 0000000000000000 x16: 0000000000000000
    [10105.408741] x15: 0000000000000000 x14: fefefefefefefeff
    [10105.414052] x13: 0000000000000000 x12: 0000000000000fe0
    [10105.419364] x11: 0000000000000fe0 x10: ffff000076709020
    [10105.424675] x9 : 0000000000000000 x8 : 00000000000000a0
    [10105.429986] x7 : ffff000076fa80f4 x6 : 0000000000000030
    [10105.435297] x5 : 0000000000000000 x4 : 0000000000000000
    [10105.440609] x3 : 0000000000000000 x2 : ffff00006f276040
    [10105.445920] x1 : ffff000075633ab8 x0 : 0000000000000030
    [10105.451232] Call trace:
    [10105.453676]  atomic64_try_cmpxchg_acquire.constprop.22+0x8/0x34
    [10105.459600]  ubifs_garbage_collect+0xb4/0x334
    [10105.463956]  ubifs_budget_space+0x398/0x458
    [10105.468139]  ubifs_create+0x50/0x180
    [10105.471712]  path_openat+0x6a0/0x9b0
    [10105.475284]  do_filp_open+0x34/0x7c
    [10105.478771]  do_sys_open+0x78/0xe4
    [10105.482170]  __arm64_sys_openat+0x1c/0x24
    [10105.486180]  el0_svc_handler+0x84/0xc8
    [10105.489928]  el0_svc+0x8/0xc
    [10105.492808] Code: 52800013 17fffffb d2800003 f9800011 (c85ffc05)
    [10105.498903] ---[ end trace 46b721d93267a586 ]---
    
    To reproduce the problem:
    
    1. Filesystem initially mounted read-only, free space fixup flag set.
    
    2. mount -o remount,rw <mountpoint>
    
    3. it takes some time (free space fixup running)
        ... try to terminate running mount by CTRL-C
        ... does not respond, only after free space fixup is complete
        ... then "ubifs_remount_fs: cannot spawn "ubifs_bgt0_0", error -4"
    
    4. mount -o remount,rw <mountpoint>
        ... now finished instantly (fixup already done).
    
    5. Create file or just unmount the filesystem and we get the oops.
    
    Cc: <stable@vger.kernel.org>
    Fixes: b50b9f408502 ("UBIFS: do not free write-buffers when in R/O mode")
    Signed-off-by: Petr Cvachoucek <cvachoucek@gmail.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f0762ac32b57bc52fc8357641962b669c42269b
Author: Meng Li <Meng.Li@windriver.com>
Date:   Mon Nov 1 11:13:53 2021 +0800

    crypto: caam - replace this_cpu_ptr with raw_cpu_ptr
    
    commit efd21e10fc3bf4c6da122470a5ae89ec4ed8d180 upstream.
    
    When enable the kernel debug config, there is below calltrace detected:
    BUG: using smp_processor_id() in preemptible [00000000] code: cryptomgr_test/339
    caller is debug_smp_processor_id+0x20/0x30
    CPU: 9 PID: 339 Comm: cryptomgr_test Not tainted 5.10.63-yocto-standard #1
    Hardware name: NXP Layerscape LX2160ARDB (DT)
    Call trace:
     dump_backtrace+0x0/0x1a0
     show_stack+0x24/0x30
     dump_stack+0xf0/0x13c
     check_preemption_disabled+0x100/0x110
     debug_smp_processor_id+0x20/0x30
     dpaa2_caam_enqueue+0x10c/0x25c
     ......
     cryptomgr_test+0x38/0x60
     kthread+0x158/0x164
     ret_from_fork+0x10/0x38
    According to the comment in commit ac5d15b4519f("crypto: caam/qi2
     - use affine DPIOs "), because preemption is no longer disabled
    while trying to enqueue an FQID, it might be possible to run the
    enqueue on a different CPU(due to migration, when in process context),
    however this wouldn't be a functionality issue. But there will be
    above calltrace when enable kernel debug config. So, replace this_cpu_ptr
    with raw_cpu_ptr to avoid above call trace.
    
    Fixes: ac5d15b4519f ("crypto: caam/qi2 - use affine DPIOs")
    Cc: stable@vger.kernel.org
    Signed-off-by: Meng Li <Meng.Li@windriver.com>
    Reviewed-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e6ff2d5725b70b6f9430597a072cbbc0b36223f
Author: Marek Vasut <marex@denx.de>
Date:   Mon Dec 20 20:50:22 2021 +0100

    crypto: stm32/crc32 - Fix kernel BUG triggered in probe()
    
    commit 29009604ad4e3ef784fd9b9fef6f23610ddf633d upstream.
    
    The include/linux/crypto.h struct crypto_alg field cra_driver_name description
    states "Unique name of the transformation provider. " ... " this contains the
    name of the chip or provider and the name of the transformation algorithm."
    
    In case of the stm32-crc driver, field cra_driver_name is identical for all
    registered transformation providers and set to the name of the driver itself,
    which is incorrect. This patch fixes it by assigning a unique cra_driver_name
    to each registered transformation provider.
    
    The kernel crash is triggered when the driver calls crypto_register_shashes()
    which calls crypto_register_shash(), which calls crypto_register_alg(), which
    calls __crypto_register_alg(), which returns -EEXIST, which is propagated
    back through this call chain. Upon -EEXIST from crypto_register_shash(), the
    crypto_register_shashes() starts unregistering the providers back, and calls
    crypto_unregister_shash(), which calls crypto_unregister_alg(), and this is
    where the BUG() triggers due to incorrect cra_refcnt.
    
    Fixes: b51dbe90912a ("crypto: stm32 - Support for STM32 CRC32 crypto module")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Cc: <stable@vger.kernel.org> # 4.12+
    Cc: Alexandre Torgue <alexandre.torgue@foss.st.com>
    Cc: Fabien Dessenne <fabien.dessenne@st.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: Lionel Debieve <lionel.debieve@st.com>
    Cc: Nicolas Toromanoff <nicolas.toromanoff@st.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-stm32@st-md-mailman.stormreply.com
    To: linux-crypto@vger.kernel.org
    Acked-by: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2031e0246e459cea7a01b342b5e4b87de8fc090c
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Fri Dec 17 10:03:30 2021 +0100

    crypto: omap-aes - Fix broken pm_runtime_and_get() usage
    
    commit c2aec59be093bd44627bc4f6bc67e4614a93a7b6 upstream.
    
    This fix is basically the same as 3d6b661330a7 ("crypto: stm32 -
    Revert broken pm_runtime_resume_and_get changes"), just for the omap
    driver. If the return value isn't used, then pm_runtime_get_sync()
    has to be used for ensuring that the usage count is balanced.
    
    Fixes: 1f34cc4a8da3 ("crypto: omap-aes - Fix PM reference leak on omap-aes.c")
    Cc: stable@vger.kernel.org
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43e94431c313ca2270584a106da36b02d65978c8
Author: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
Date:   Mon Dec 6 20:07:58 2021 +0100

    rpmsg: core: Clean up resources on announce_create failure.
    
    commit 8066c615cb69b7da8a94f59379847b037b3a5e46 upstream.
    
    During the rpmsg_dev_probe, if rpdev->ops->announce_create returns an
    error, the rpmsg device and default endpoint should be freed before
    exiting the function.
    
    Fixes: 5e619b48677c ("rpmsg: Split rpmsg core and virtio backend")
    Suggested-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20211206190758.10004-1-arnaud.pouliquen@foss.st.com
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 082ff9e12b4a1c40142a1710f0534e65c48f1d51
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Dec 24 08:21:03 2021 +0000

    phy: mediatek: Fix missing check in mtk_mipi_tx_probe
    
    [ Upstream commit 399c91c3f30531593e5ff6ca7b53f47092128669 ]
    
    The of_device_get_match_data() function may return NULL.
    Add check to prevent potential null dereference.
    
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
    Link: https://lore.kernel.org/r/20211224082103.7658-1-linmq006@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff08cf1e34a17c1205630a9682640b784932970b
Author: Tzung-Bi Shih <tzungbi@google.com>
Date:   Fri Dec 24 14:47:17 2021 +0800

    ASoC: mediatek: mt8183: fix device_node leak
    
    [ Upstream commit cb006006fe6221f092fadaffd3f219288304c9ad ]
    
    Fixes the device_node leak.
    
    Signed-off-by: Tzung-Bi Shih <tzungbi@google.com>
    Link: https://lore.kernel.org/r/20211224064719.2031210-3-tzungbi@google.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f28672eef4a9f401b617ddd9d394aaa35d634c61
Author: Tzung-Bi Shih <tzungbi@google.com>
Date:   Fri Dec 24 14:47:16 2021 +0800

    ASoC: mediatek: mt8173: fix device_node leak
    
    [ Upstream commit 493433785df0075afc0c106ab65f10a605d0b35d ]
    
    Fixes the device_node leak.
    
    Signed-off-by: Tzung-Bi Shih <tzungbi@google.com>
    Link: https://lore.kernel.org/r/20211224064719.2031210-2-tzungbi@google.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0df51040089dd5a9dfd9e3f902becbf9740c582a
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Dec 22 10:08:42 2021 +0100

    scsi: sr: Don't use GFP_DMA
    
    [ Upstream commit d94d94969a4ba07a43d62429c60372320519c391 ]
    
    The allocated buffers are used as a command payload, for which the block
    layer and/or DMA API do the proper bounce buffering if needed.
    
    Link: https://lore.kernel.org/r/20211222090842.920724-1-hch@lst.de
    Reported-by: Baoquan He <bhe@redhat.com>
    Reviewed-by: Baoquan He <bhe@redhat.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de9a936b04c541a52bed00a5d3e5b975c508e724
Author: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
Date:   Thu Dec 16 17:50:14 2021 +0800

    MIPS: Octeon: Fix build errors using clang
    
    [ Upstream commit 95339b70677dc6f9a2d669c4716058e71b8dc1c7 ]
    
    A large number of the following errors is reported when compiling
    with clang:
    
      cvmx-bootinfo.h:326:3: error: adding 'int' to a string does not append to the string [-Werror,-Wstring-plus-int]
                      ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_NULL)
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      cvmx-bootinfo.h:321:20: note: expanded from macro 'ENUM_BRD_TYPE_CASE'
              case x: return(#x + 16);        /* Skip CVMX_BOARD_TYPE_ */
                             ~~~^~~~
      cvmx-bootinfo.h:326:3: note: use array indexing to silence this warning
      cvmx-bootinfo.h:321:20: note: expanded from macro 'ENUM_BRD_TYPE_CASE'
              case x: return(#x + 16);        /* Skip CVMX_BOARD_TYPE_ */
                              ^
    
    Follow the prompts to use the address operator '&' to fix this error.
    
    Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Philippe Mathieu-Daudé <f4bug@amsat.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da7df943e25482d602f6e9a897b20c0eed277f5c
Author: Lakshmi Sowjanya D <lakshmi.sowjanya.d@intel.com>
Date:   Wed Dec 15 17:12:01 2021 +0200

    i2c: designware-pci: Fix to change data types of hcnt and lcnt parameters
    
    [ Upstream commit d52097010078c1844348dc0e467305e5f90fd317 ]
    
    The data type of hcnt and lcnt in the struct dw_i2c_dev is of type u16.
    It's better to have same data type in struct dw_scl_sda_cfg as well.
    
    Reported-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Lakshmi Sowjanya D <lakshmi.sowjanya.d@intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f09f7ccb28bbe2aaf343faff890e204b2c16f1f7
Author: Marc Zyngier <maz@kernel.org>
Date:   Thu Dec 16 14:32:27 2021 +0000

    irqchip/gic-v4: Disable redistributors' view of the VPE table at boot time
    
    [ Upstream commit 79a7f77b9b154d572bd9d2f1eecf58c4d018d8e2 ]
    
    Jay Chen reported that using a kdump kernel on a GICv4.1 system
    results in a RAS error being delivered when the secondary kernel
    configures the ITS's view of the new VPE table.
    
    As it turns out, that's because each RD still has a pointer to
    the previous instance of the VPE table, and that particular
    implementation is very upset by seeing two bits of the HW that
    should point to the same table with different values.
    
    To solve this, let's invalidate any reference that any RD has to
    the VPE table when discovering the RDs. The ITS can then be
    programmed as expected.
    
    Reported-by: Jay Chen <jkchen@linux.alibaba.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Link: https://lore.kernel.org/r/20211214064716.21407-1-jkchen@linux.alibaba.com
    Link: https://lore.kernel.org/r/20211216144804.1578566-1-maz@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc2d961d821b824bc74df724892d5c7f57c72dc2
Author: Ye Guojin <ye.guojin@zte.com.cn>
Date:   Tue Nov 16 08:10:51 2021 +0000

    MIPS: OCTEON: add put_device() after of_find_device_by_node()
    
    [ Upstream commit 858779df1c0787d3fec827fb705708df9ebdb15b ]
    
    This was found by coccicheck:
    ./arch/mips/cavium-octeon/octeon-platform.c, 332, 1-7, ERROR missing
    put_device; call of_find_device_by_node on line 324, but without a
    corresponding object release within this function.
    ./arch/mips/cavium-octeon/octeon-platform.c, 395, 1-7, ERROR missing
    put_device; call of_find_device_by_node on line 387, but without a
    corresponding object release within this function.
    ./arch/mips/cavium-octeon/octeon-usb.c, 512, 3-9, ERROR missing
    put_device; call of_find_device_by_node on line 515, but without a
    corresponding object release within this function.
    ./arch/mips/cavium-octeon/octeon-usb.c, 543, 1-7, ERROR missing
    put_device; call of_find_device_by_node on line 515, but without a
    corresponding object release within this function.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Ye Guojin <ye.guojin@zte.com.cn>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce34b03a71b62b273e9fb7eb314ac417efb1a427
Author: Jan Kara <jack@suse.cz>
Date:   Tue Dec 14 11:04:29 2021 +0100

    udf: Fix error handling in udf_new_inode()
    
    [ Upstream commit f05f2429eec60851b98bdde213de31dab697c01b ]
    
    When memory allocation of iinfo or block allocation fails, already
    allocated struct udf_inode_info gets freed with iput() and
    udf_evict_inode() may look at inode fields which are not properly
    initialized. Fix it by marking inode bad before dropping reference to it
    in udf_new_inode().
    
    Reported-by: syzbot+9ca499bb57a2b9e4c652@syzkaller.appspotmail.com
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15be042e7fd9295d32c6104088fb4351519097c6
Author: Hari Bathini <hbathini@linux.ibm.com>
Date:   Tue Dec 7 16:07:19 2021 +0530

    powerpc/fadump: Fix inaccurate CPU state info in vmcore generated with panic
    
    [ Upstream commit 06e629c25daa519be620a8c17359ae8fc7a2e903 ]
    
    In panic path, fadump is triggered via a panic notifier function.
    Before calling panic notifier functions, smp_send_stop() gets called,
    which stops all CPUs except the panic'ing CPU. Commit 8389b37dffdc
    ("powerpc: stop_this_cpu: remove the cpu from the online map.") and
    again commit bab26238bbd4 ("powerpc: Offline CPU in stop_this_cpu()")
    started marking CPUs as offline while stopping them. So, if a kernel
    has either of the above commits, vmcore captured with fadump via panic
    path would not process register data for all CPUs except the panic'ing
    CPU. Sample output of crash-utility with such vmcore:
    
      # crash vmlinux vmcore
      ...
            KERNEL: vmlinux
          DUMPFILE: vmcore  [PARTIAL DUMP]
              CPUS: 1
              DATE: Wed Nov 10 09:56:34 EST 2021
            UPTIME: 00:00:42
      LOAD AVERAGE: 2.27, 0.69, 0.24
             TASKS: 183
          NODENAME: XXXXXXXXX
           RELEASE: 5.15.0+
           VERSION: #974 SMP Wed Nov 10 04:18:19 CST 2021
           MACHINE: ppc64le  (2500 Mhz)
            MEMORY: 8 GB
             PANIC: "Kernel panic - not syncing: sysrq triggered crash"
               PID: 3394
           COMMAND: "bash"
              TASK: c0000000150a5f80  [THREAD_INFO: c0000000150a5f80]
               CPU: 1
             STATE: TASK_RUNNING (PANIC)
    
      crash> p -x __cpu_online_mask
      __cpu_online_mask = $1 = {
        bits = {0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
      }
      crash>
      crash>
      crash> p -x __cpu_active_mask
      __cpu_active_mask = $2 = {
        bits = {0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
      }
      crash>
    
    While this has been the case since fadump was introduced, the issue
    was not identified for two probable reasons:
    
      - In general, the bulk of the vmcores analyzed were from crash
        due to exception.
    
      - The above did change since commit 8341f2f222d7 ("sysrq: Use
        panic() to force a crash") started using panic() instead of
        deferencing NULL pointer to force a kernel crash. But then
        commit de6e5d38417e ("powerpc: smp_send_stop do not offline
        stopped CPUs") stopped marking CPUs as offline till kernel
        commit bab26238bbd4 ("powerpc: Offline CPU in stop_this_cpu()")
        reverted that change.
    
    To ensure post processing register data of all other CPUs happens
    as intended, let panic() function take the crash friendly path (read
    crash_smp_send_stop()) with the help of crash_kexec_post_notifiers
    option. Also, as register data for all CPUs is captured by f/w, skip
    IPI callbacks here for fadump, to avoid any complications in finding
    the right backtraces.
    
    Signed-off-by: Hari Bathini <hbathini@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211207103719.91117-2-hbathini@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2e658d9bda2ad5f8ace6f46494d1cf04e0c5b51
Author: Hari Bathini <hbathini@linux.ibm.com>
Date:   Tue Dec 7 16:07:18 2021 +0530

    powerpc: handle kdump appropriately with crash_kexec_post_notifiers option
    
    [ Upstream commit 219572d2fc4135b5ce65c735d881787d48b10e71 ]
    
    Kdump can be triggered after panic_notifers since commit f06e5153f4ae2
    ("kernel/panic.c: add "crash_kexec_post_notifiers" option for kdump
    after panic_notifers") introduced crash_kexec_post_notifiers option.
    But using this option would mean smp_send_stop(), that marks all other
    CPUs as offline, gets called before kdump is triggered. As a result,
    kdump routines fail to save other CPUs' registers. To fix this, kdump
    friendly crash_smp_send_stop() function was introduced with kernel
    commit 0ee59413c967 ("x86/panic: replace smp_send_stop() with kdump
    friendly version in panic path"). Override this kdump friendly weak
    function to handle crash_kexec_post_notifiers option appropriately
    on powerpc.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Hari Bathini <hbathini@linux.ibm.com>
    [Fixed signature of crash_stop_this_cpu() - reported by lkp@intel.com]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211207103719.91117-1-hbathini@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 044164b4198ea0bcb219f1dba876a622faff7a23
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Tue Dec 7 10:05:57 2021 -0300

    selftests/powerpc/spectre_v2: Return skip code when miss_percent is high
    
    [ Upstream commit 3c42e9542050d49610077e083c7c3f5fd5e26820 ]
    
    A mis-match between reported and actual mitigation is not restricted to the
    Vulnerable case. The guest might also report the mitigation as "Software
    count cache flush" and the host will still mitigate with branch cache
    disabled.
    
    So, instead of skipping depending on the detected mitigation, simply skip
    whenever the detected miss_percent is the expected one for a fully
    mitigated system, that is, above 95%.
    
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211207130557.40566-1-cascardo@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21125e011620b8f77786c8a231100b6395fdf494
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Mon Sep 27 17:12:39 2021 +0200

    powerpc/40x: Map 32Mbytes of memory at startup
    
    [ Upstream commit 06e7cbc29e97b4713b4ea6def04ae8501a7d1a59 ]
    
    As reported by Carlo, 16Mbytes is not enough with modern kernels
    that tend to be a bit big, so map another 16M page at boot.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/89b5f974a7fa5011206682cd092e2c905530ff46.1632755552.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c330442f46ea77db0be8ba37d3b5b67a8b45bed9
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Dec 8 09:56:17 2021 -0700

    MIPS: Loongson64: Use three arguments for slti
    
    [ Upstream commit f2c6c22fa83ab2577619009057b3ebcb5305bb03 ]
    
    LLVM's integrated assembler does not support 'slti <reg>, <imm>':
    
    <instantiation>:16:12: error: invalid operand for instruction
     slti $12, (0x6300 | 0x0008)
               ^
    arch/mips/kernel/head.S:86:2: note: while in macro instantiation
     kernel_entry_setup # cpu specific setup
     ^
    <instantiation>:16:12: error: invalid operand for instruction
     slti $12, (0x6300 | 0x0008)
               ^
    arch/mips/kernel/head.S:150:2: note: while in macro instantiation
     smp_slave_setup
     ^
    
    To increase compatibility with LLVM's integrated assembler, use the full
    form of 'slti <reg>, <reg>, <imm>', which matches the rest of
    arch/mips/. This does not result in any change for GNU as.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/1526
    Reported-by: Ryutaroh Matsumoto <ryutaroh@ict.e.titech.ac.jp>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af8d07735083276004d71cafc4f7a4710cf108fa
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Dec 7 17:51:46 2021 +0100

    ALSA: seq: Set upper limit of processed events
    
    [ Upstream commit 6fadb494a638d8b8a55864ecc6ac58194f03f327 ]
    
    Currently ALSA sequencer core tries to process the queued events as
    much as possible when they become dispatchable.  If applications try
    to queue too massive events to be processed at the very same timing,
    the sequencer core would still try to process such all events, either
    in the interrupt context or via some notifier; in either away, it
    might be a cause of RCU stall or such problems.
    
    As a potential workaround for those problems, this patch adds the
    upper limit of the amount of events to be processed.  The remaining
    events are processed in the next batch, so they won't be lost.
    
    For the time being, it's limited up to 1000 events per queue, which
    should be high enough for any normal usages.
    
    Reported-by: Zqiang <qiang.zhang1211@gmail.com>
    Reported-by: syzbot+bb950e68b400ab4f65f8@syzkaller.appspotmail.com
    Link: https://lore.kernel.org/r/20211102033222.3849-1-qiang.zhang1211@gmail.com
    Link: https://lore.kernel.org/r/20211207165146.2888-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 297210783a7a328c971b4f1ec9d380df7598d106
Author: James Smart <jsmart2021@gmail.com>
Date:   Fri Dec 3 16:26:40 2021 -0800

    scsi: lpfc: Trigger SLI4 firmware dump before doing driver cleanup
    
    [ Upstream commit 7dd2e2a923173d637c272e483966be8e96a72b64 ]
    
    Extraneous teardown routines are present in the firmware dump path causing
    altered states in firmware captures.
    
    When a firmware dump is requested via sysfs, trigger the dump immediately
    without tearing down structures and changing adapter state.
    
    The driver shall rely on pre-existing firmware error state clean up
    handlers to restore the adapter.
    
    Link: https://lore.kernel.org/r/20211204002644.116455-6-jsmart2021@gmail.com
    Co-developed-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: Justin Tee <justin.tee@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dfde7afed7116374074e531dfad9919348bef5ac
Author: Christoph Hellwig <hch@lst.de>
Date:   Mon Nov 29 11:21:35 2021 +0100

    dm: fix alloc_dax error handling in alloc_dev
    
    [ Upstream commit d751939235b9b7bc4af15f90a3e99288a8b844a7 ]
    
    Make sure ->dax_dev is NULL on error so that the cleanup path doesn't
    trip over an ERR_PTR.
    
    Reported-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Link: https://lore.kernel.org/r/20211129102203.2243509-2-hch@lst.de
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e2086f49e08b73dbd47b5ef953083397f06209f
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Tue Nov 30 13:39:09 2021 +0000

    nvmem: core: set size for sysfs bin file
    
    [ Upstream commit 86192251033308bb42f1e9813c962989d8ed07ec ]
    
    For some reason we never set the size for nvmem sysfs binary file.
    Set this.
    
    Reported-by: Gilles BULOZ <gilles.buloz@kontron.com>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20211130133909.6154-1-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a273a94bda87265909aeee5e4771ed49cf583ef
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Fri Nov 26 18:06:46 2021 +0100

    w1: Misuse of get_user()/put_user() reported by sparse
    
    [ Upstream commit 33dc3e3e99e626ce51f462d883b05856c6c30b1d ]
    
    sparse warnings: (new ones prefixed by >>)
    >> drivers/w1/slaves/w1_ds28e04.c:342:13: sparse: sparse: incorrect type in initializer (different address spaces) @@     expected char [noderef] __user *_pu_addr @@     got char *buf @@
       drivers/w1/slaves/w1_ds28e04.c:342:13: sparse:     expected char [noderef] __user *_pu_addr
       drivers/w1/slaves/w1_ds28e04.c:342:13: sparse:     got char *buf
    >> drivers/w1/slaves/w1_ds28e04.c:356:13: sparse: sparse: incorrect type in initializer (different address spaces) @@     expected char const [noderef] __user *_gu_addr @@     got char const *buf @@
       drivers/w1/slaves/w1_ds28e04.c:356:13: sparse:     expected char const [noderef] __user *_gu_addr
       drivers/w1/slaves/w1_ds28e04.c:356:13: sparse:     got char const *buf
    
    The buffer buf is a failsafe buffer in kernel space, it's not user
    memory hence doesn't deserve the use of get_user() or put_user().
    
    Access 'buf' content directly.
    
    Link: https://lore.kernel.org/lkml/202111190526.K5vb7NWC-lkp@intel.com/T/
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Link: https://lore.kernel.org/r/d14ed8d71ad4372e6839ae427f91441d3ba0e94d.1637946316.git.christophe.leroy@csgroup.eu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87e91d6c6a5eaa55b62f51f98b906b35cbee8f19
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Wed Sep 1 18:45:50 2021 +1000

    KVM: PPC: Book3S: Suppress failed alloc warning in H_COPY_TOFROM_GUEST
    
    [ Upstream commit 792020907b11c6f9246c21977cab3bad985ae4b6 ]
    
    H_COPY_TOFROM_GUEST is an hcall for an upper level VM to access its nested
    VMs memory. The userspace can trigger WARN_ON_ONCE(!(gfp & __GFP_NOWARN))
    in __alloc_pages() by constructing a tiny VM which only does
    H_COPY_TOFROM_GUEST with a too big GPR9 (number of bytes to copy).
    
    This silences the warning by adding __GFP_NOWARN.
    
    Spotted by syzkaller.
    
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Reviewed-by: Fabiano Rosas <farosas@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210901084550.1658699-1-aik@ozlabs.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23bb3f01ceb56500ef3f70c5e3a76e55febb39cd
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Wed Sep 1 18:45:12 2021 +1000

    KVM: PPC: Book3S: Suppress warnings when allocating too big memory slots
    
    [ Upstream commit 511d25d6b789fffcb20a3eb71899cf974a31bd9d ]
    
    The userspace can trigger "vmalloc size %lu allocation failure: exceeds
    total pages" via the KVM_SET_USER_MEMORY_REGION ioctl.
    
    This silences the warning by checking the limit before calling vzalloc()
    and returns ENOMEM if failed.
    
    This does not call underlying valloc helpers as __vmalloc_node() is only
    exported when CONFIG_TEST_VMALLOC_MODULE and __vmalloc_node_range() is
    not exported at all.
    
    Spotted by syzkaller.
    
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    [mpe: Use 'size' for the variable rather than 'cb']
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210901084512.1658628-1-aik@ozlabs.ru
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 03c1595a181c6ffccb78e1608bc8dbf6c3686f20
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Tue Nov 30 10:32:42 2021 +0100

    powerpc/powermac: Add missing lockdep_register_key()
    
    [ Upstream commit df1f679d19edb9eeb67cc2f96b29375f21991945 ]
    
    KeyWest i2c @0xf8001003 irq 42 /uni-n@f8000000/i2c@f8001000
    BUG: key c2d00cbc has not been registered!
    ------------[ cut here ]------------
    DEBUG_LOCKS_WARN_ON(1)
    WARNING: CPU: 0 PID: 1 at kernel/locking/lockdep.c:4801 lockdep_init_map_type+0x4c0/0xb4c
    Modules linked in:
    CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.15.5-gentoo-PowerMacG4 #9
    NIP:  c01a9428 LR: c01a9428 CTR: 00000000
    REGS: e1033cf0 TRAP: 0700   Not tainted  (5.15.5-gentoo-PowerMacG4)
    MSR:  00029032 <EE,ME,IR,DR,RI>  CR: 24002002  XER: 00000000
    
    GPR00: c01a9428 e1033db0 c2d1cf20 00000016 00000004 00000001 c01c0630 e1033a73
    GPR08: 00000000 00000000 00000000 e1033db0 24002004 00000000 f8729377 00000003
    GPR16: c1829a9c 00000000 18305357 c1416fc0 c1416f80 c006ac60 c2d00ca8 c1416f00
    GPR24: 00000000 c21586f0 c2160000 00000000 c2d00cbc c2170000 c216e1a0 c2160000
    NIP [c01a9428] lockdep_init_map_type+0x4c0/0xb4c
    LR [c01a9428] lockdep_init_map_type+0x4c0/0xb4c
    Call Trace:
    [e1033db0] [c01a9428] lockdep_init_map_type+0x4c0/0xb4c (unreliable)
    [e1033df0] [c1c177b8] kw_i2c_add+0x334/0x424
    [e1033e20] [c1c18294] pmac_i2c_init+0x9ec/0xa9c
    [e1033e80] [c1c1a790] smp_core99_probe+0xbc/0x35c
    [e1033eb0] [c1c03cb0] kernel_init_freeable+0x190/0x5a4
    [e1033f10] [c000946c] kernel_init+0x28/0x154
    [e1033f30] [c0035148] ret_from_kernel_thread+0x14/0x1c
    
    Add missing lockdep_register_key()
    
    Reported-by: Erhard Furtner <erhard_f@mailbox.org>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/69e4f55565bb45ebb0843977801b245af0c666fe.1638264741.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df29c01b9fbe2ea898e78fb7751441f378fbd691
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sun Oct 31 14:50:06 2021 +0100

    clk: meson: gxbb: Fix the SDM_EN bit for MPLL0 on GXBB
    
    [ Upstream commit ff54938dd190d85f740b9bf9dde59b550936b621 ]
    
    There are reports that 48kHz audio does not work on the WeTek Play 2
    (which uses a GXBB SoC), while 44.1kHz audio works fine on the same
    board. There are also reports of 48kHz audio working fine on GXL and
    GXM SoCs, which are using an (almost) identical AIU (audio controller).
    
    Experimenting has shown that MPLL0 is causing this problem. In the .dts
    we have by default:
            assigned-clocks = <&clkc CLKID_MPLL0>,
                              <&clkc CLKID_MPLL1>,
                              <&clkc CLKID_MPLL2>;
            assigned-clock-rates = <294912000>,
                                   <270950400>,
                                   <393216000>;
    The MPLL0 rate is divisible by 48kHz without remainder and the MPLL1
    rate is divisible by 44.1kHz without remainder. Swapping these two clock
    rates "fixes" 48kHz audio but breaks 44.1kHz audio.
    
    Everything looks normal when looking at the info provided by the common
    clock framework while playing 48kHz audio (via I2S with mclk-fs = 256):
            mpll_prediv                 1        1        0  2000000000
               mpll0_div                1        1        0   294909641
                  mpll0                 1        1        0   294909641
                     cts_amclk_sel       1        1        0   294909641
                        cts_amclk_div       1        1        0    12287902
                           cts_amclk       1        1        0    12287902
    
    meson-clk-msr however shows that the actual MPLL0 clock is off by more
    than 38MHz:
            mp0_out               333322917    +/-10416Hz
    
    The rate seen by meson-clk-msr is very close to what we would get when
    SDM (the fractional part) was ignored:
      (2000000000Hz * 16384) / ((16384 * 6) = 333.33MHz
    If SDM was considered the we should get close to:
      (2000000000Hz * 16384) / ((16384 * 6) + 12808) = 294.9MHz
    
    Further experimenting shows that HHI_MPLL_CNTL7[15] does not have any
    effect on the rate of MPLL0 as seen my meson-clk-msr (regardless of
    whether that bit is zero or one the rate is always the same according to
    meson-clk-msr). Using HHI_MPLL_CNTL[25] on the other hand as SDM_EN
    results in SDM being considered for the rate output by the hardware. The
    rate - as seen by meson-clk-msr - matches with what we expect when
    SDM_EN is enabled (fractional part is being considered, resulting in a
    294.9MHz output) or disable (fractional part being ignored, resulting in
    a 333.33MHz output).
    
    Reported-by: Christian Hewitt <christianshewitt@gmail.com>
    Tested-by: Christian Hewitt <christianshewitt@gmail.com>
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20211031135006.1508796-1-martin.blumenstingl@googlemail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30d35a1abd9edc1f771bdc8118940c5db0c7cb58
Author: Joakim Tjernlund <joakim.tjernlund@infinera.com>
Date:   Thu May 11 14:20:33 2017 +0200

    i2c: mpc: Correct I2C reset procedure
    
    [ Upstream commit ebe82cf92cd4825c3029434cabfcd2f1780e64be ]
    
    Current I2C reset procedure is broken in two ways:
    1) It only generate 1 START instead of 9 STARTs and STOP.
    2) It leaves the bus Busy so every I2C xfer after the first
       fixup calls the reset routine again, for every xfer there after.
    
    This fixes both errors.
    
    Signed-off-by: Joakim Tjernlund <joakim.tjernlund@infinera.com>
    Acked-by: Scott Wood <oss@buserror.net>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b25aad655c92d4d99aaf733f7e128852e05069c
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Nov 24 20:32:53 2021 +1100

    powerpc/smp: Move setup_profiling_timer() under CONFIG_PROFILING
    
    [ Upstream commit a4ac0d249a5db80e79d573db9e4ad29354b643a8 ]
    
    setup_profiling_timer() is only needed when CONFIG_PROFILING is enabled.
    
    Fixes the following W=1 warning when CONFIG_PROFILING=n:
      linux/arch/powerpc/kernel/smp.c:1638:5: error: no previous prototype for ‘setup_profiling_timer’
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211124093254.1054750-5-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 25714ad6bf5e98025579fa4c08ff2041a663910c
Author: Heiner Kallweit <hkallweit1@gmail.com>
Date:   Sun Nov 7 22:57:00 2021 +0100

    i2c: i801: Don't silently correct invalid transfer size
    
    [ Upstream commit effa453168a7eeb8a562ff4edc1dbf9067360a61 ]
    
    If an invalid block size is provided, reject it instead of silently
    changing it to a supported value. Especially critical I see the case of
    a write transfer with block length 0. In this case we have no guarantee
    that the byte we would write is valid. When silently reducing a read to
    32 bytes then we don't return an error and the caller may falsely
    assume that we returned the full requested data.
    
    If this change should break any (broken) caller, then I think we should
    fix the caller.
    
    Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75e2cfa5fae9474f84a2437b62a73a2ba0d2509f
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Wed Nov 10 12:50:53 2021 +1000

    powerpc/watchdog: Fix missed watchdog reset due to memory ordering race
    
    [ Upstream commit 5dad4ba68a2483fc80d70b9dc90bbe16e1f27263 ]
    
    It is possible for all CPUs to miss the pending cpumask becoming clear,
    and then nobody resetting it, which will cause the lockup detector to
    stop working. It will eventually expire, but watchdog_smp_panic will
    avoid doing anything if the pending mask is clear and it will never be
    reset.
    
    Order the cpumask clear vs the subsequent test to close this race.
    
    Add an extra check for an empty pending mask when the watchdog fires and
    finds its bit still clear, to try to catch any other possible races or
    bugs here and keep the watchdog working. The extra test in
    arch_touch_nmi_watchdog is required to prevent the new warning from
    firing off.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Reviewed-by: Laurent Dufour <ldufour@linux.ibm.com>
    Debugged-by: Laurent Dufour <ldufour@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211110025056.2084347-2-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a83639521a4f4a32da6a77155afead54a0325f4e
Author: Julia Lawall <Julia.Lawall@lip6.fr>
Date:   Fri Nov 20 20:33:23 2015 +0000

    powerpc/btext: add missing of_node_put
    
    [ Upstream commit a1d2b210ffa52d60acabbf7b6af3ef7e1e69cda0 ]
    
    for_each_node_by_type performs an of_node_get on each iteration, so
    a break out of the loop requires an of_node_put.
    
    A simplified version of the semantic patch that fixes this problem is as
    follows (http://coccinelle.lip6.fr):
    
    // <smpl>
    @@
    local idexpression n;
    expression e;
    @@
    
     for_each_node_by_type(n,...) {
       ...
    (
       of_node_put(n);
    |
       e = n
    |
    +  of_node_put(n);
    ?  break;
    )
       ...
     }
    ... when != n
    // </smpl>
    
    Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1448051604-25256-6-git-send-email-Julia.Lawall@lip6.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc10d8f00a89717a5d7fd837e6b6a188e4279d48
Author: Julia Lawall <Julia.Lawall@lip6.fr>
Date:   Fri Nov 20 21:33:24 2015 +0100

    powerpc/cell: add missing of_node_put
    
    [ Upstream commit a841fd009e51c8c0a8f07c942e9ab6bb48da8858 ]
    
    for_each_node_by_name performs an of_node_get on each iteration, so
    a break out of the loop requires an of_node_put.
    
    A simplified version of the semantic patch that fixes this problem is as
    follows (http://coccinelle.lip6.fr):
    
    // <smpl>
    @@
    expression e,e1;
    local idexpression n;
    @@
    
     for_each_node_by_name(n, e1) {
       ... when != of_node_put(n)
           when != e = n
    (
       return n;
    |
    +  of_node_put(n);
    ?  return ...;
    )
       ...
     }
    // </smpl>
    
    Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1448051604-25256-7-git-send-email-Julia.Lawall@lip6.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 297ff7d5f157afa47de1f9e4890d272d31e2379f
Author: Julia Lawall <Julia.Lawall@lip6.fr>
Date:   Fri Nov 20 20:33:21 2015 +0000

    powerpc/powernv: add missing of_node_put
    
    [ Upstream commit 7d405a939ca960162eb30c1475759cb2fdf38f8c ]
    
    for_each_compatible_node performs an of_node_get on each iteration, so
    a break out of the loop requires an of_node_put.
    
    A simplified version of the semantic patch that fixes this problem is as
    follows (http://coccinelle.lip6.fr):
    
    // <smpl>
    @@
    local idexpression n;
    expression e;
    @@
    
     for_each_compatible_node(n,...) {
       ...
    (
       of_node_put(n);
    |
       e = n
    |
    +  of_node_put(n);
    ?  break;
    )
       ...
     }
    ... when != n
    // </smpl>
    
    Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1448051604-25256-4-git-send-email-Julia.Lawall@lip6.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c83ba875d7be12d84842c50044ee5567296f0221
Author: Julia Lawall <Julia.Lawall@lip6.fr>
Date:   Fri Nov 20 20:33:19 2015 +0000

    powerpc/6xx: add missing of_node_put
    
    [ Upstream commit f6e82647ff71d427d4148964b71f239fba9d7937 ]
    
    for_each_compatible_node performs an of_node_get on each iteration, so
    a break out of the loop requires an of_node_put.
    
    A simplified version of the semantic patch that fixes this problem is as
    follows (http://coccinelle.lip6.fr):
    
    // <smpl>
    @@
    expression e;
    local idexpression n;
    @@
    
    @@
    local idexpression n;
    expression e;
    @@
    
     for_each_compatible_node(n,...) {
       ...
    (
       of_node_put(n);
    |
       e = n
    |
    +  of_node_put(n);
    ?  break;
    )
       ...
     }
    ... when != n
    // </smpl>
    
    Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1448051604-25256-2-git-send-email-Julia.Lawall@lip6.fr
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d240b08d8ac4e85909f2d90e573688131e8f9284
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Jan 5 01:35:58 2022 +0100

    x86/kbuild: Enable CONFIG_KALLSYMS_ALL=y in the defconfigs
    
    [ Upstream commit b6aa86cff44cf099299d3a5e66348cb709cd7964 ]
    
    Most distro kernels have this option enabled, to improve debug output.
    
    Lockdep also selects it.
    
    Enable this in the defconfig kernel as well, to make it more
    representative of what people are using on x86.
    
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/YdTn7gssoMVDMgMw@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3681e9f3f0f7df9a3821b02fadf17a669681ea43
Author: John David Anglin <dave.anglin@bell.net>
Date:   Wed Dec 22 16:52:26 2021 +0000

    parisc: Avoid calling faulthandler_disabled() twice
    
    [ Upstream commit 9e9d4b460f23bab61672eae397417d03917d116c ]
    
    In handle_interruption(), we call faulthandler_disabled() to check whether the
    fault handler is not disabled. If the fault handler is disabled, we immediately
    call do_page_fault(). It then calls faulthandler_disabled(). If disabled,
    do_page_fault() attempts to fixup the exception by jumping to no_context:
    
    no_context:
    
            if (!user_mode(regs) && fixup_exception(regs)) {
                    return;
            }
    
            parisc_terminate("Bad Address (null pointer deref?)", regs, code, address);
    
    Apart from the error messages, the two blocks of code perform the same
    function.
    
    We can avoid two calls to faulthandler_disabled() by a simple revision
    to the code in handle_interruption().
    
    Note: I didn't try to fix the formatting of this code block.
    
    Signed-off-by: John David Anglin <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2a27dd7a2de3a574d9a6da2266166d58743b562
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Wed Dec 29 22:10:05 2021 +0100

    random: do not throw away excess input to crng_fast_load
    
    [ Upstream commit 73c7733f122e8d0107f88655a12011f68f69e74b ]
    
    When crng_fast_load() is called by add_hwgenerator_randomness(), we
    currently will advance to crng_init==1 once we've acquired 64 bytes, and
    then throw away the rest of the buffer. Usually, that is not a problem:
    When add_hwgenerator_randomness() gets called via EFI or DT during
    setup_arch(), there won't be any IRQ randomness. Therefore, the 64 bytes
    passed by EFI exactly matches what is needed to advance to crng_init==1.
    Usually, DT seems to pass 64 bytes as well -- with one notable exception
    being kexec, which hands over 128 bytes of entropy to the kexec'd kernel.
    In that case, we'll advance to crng_init==1 once 64 of those bytes are
    consumed by crng_fast_load(), but won't continue onward feeding in bytes
    to progress to crng_init==2. This commit fixes the issue by feeding
    any leftover bytes into the next phase in add_hwgenerator_randomness().
    
    [linux@dominikbrodowski.net: rewrite commit message]
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8fdebfb4b37019ef7ff84187208159385a95032
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Jan 2 18:52:44 2022 +0100

    serial: core: Keep mctrl register state and cached copy in sync
    
    [ Upstream commit 93a770b7e16772530196674ffc79bb13fa927dc6 ]
    
    struct uart_port contains a cached copy of the Modem Control signals.
    It is used to skip register writes in uart_update_mctrl() if the new
    signal state equals the old signal state.  It also avoids a register
    read to obtain the current state of output signals.
    
    When a uart_port is registered, uart_configure_port() changes signal
    state but neglects to keep the cached copy in sync.  That may cause
    a subsequent register write to be incorrectly skipped.  Fix it before
    it trips somebody up.
    
    This behavior has been present ever since the serial core was introduced
    in 2002:
    https://git.kernel.org/history/history/c/33c0d1b0c3eb
    
    So far it was never an issue because the cached copy is initialized to 0
    by kzalloc() and when uart_configure_port() is executed, at most DTR has
    been set by uart_set_options() or sunsu_console_setup().  Therefore,
    a stable designation seems unnecessary.
    
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://lore.kernel.org/r/bceeaba030b028ed810272d55d5fc6f3656ddddb.1641129752.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a03fd1b198918d7afac4eb3f2a32fb79182aa29b
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sun Jan 2 18:42:44 2022 +0100

    serial: pl010: Drop CR register reset on set_termios
    
    [ Upstream commit 08a0c6dff91c965e39905cf200d22db989203ccb ]
    
    pl010_set_termios() briefly resets the CR register to zero.
    
    Where does this register write come from?
    
    The PL010 driver's IRQ handler ambauart_int() originally modified the CR
    register without holding the port spinlock.  ambauart_set_termios() also
    modified that register.  To prevent concurrent read-modify-writes by the
    IRQ handler and to prevent transmission while changing baudrate,
    ambauart_set_termios() had to disable interrupts.  That is achieved by
    writing zero to the CR register.
    
    However in 2004 the PL010 driver was amended to acquire the port
    spinlock in the IRQ handler, obviating the need to disable interrupts in
    ->set_termios():
    https://git.kernel.org/history/history/c/157c0342e591
    
    That rendered the CR register write obsolete.  Drop it.
    
    Cc: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Link: https://lore.kernel.org/r/fcaff16e5b1abb4cc3da5a2879ac13f278b99ed0.1641128728.git.lukas@wunner.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40ac3389263088ff18d43027da8a6c8b9ef8a96d
Author: Konrad Dybcio <konrad.dybcio@somainline.org>
Date:   Thu Dec 30 03:34:42 2021 +0100

    regulator: qcom_smd: Align probe function with rpmh-regulator
    
    [ Upstream commit 14e2976fbabdacb01335d7f91eeebbc89c67ddb1 ]
    
    The RPMh regulator driver is much newer and gets more attention, which in
    consequence makes it do a few things better. Update qcom_smd-regulator's
    probe function to mimic what rpmh-regulator does to address a couple of
    issues:
    
    - Probe defer now works correctly, before it used to, well,
      kinda just die.. This fixes reliable probing on (at least) PM8994,
      because Linux apparently cannot deal with supply map dependencies yet..
    
    - Regulator data is now matched more sanely: regulator data is matched
      against each individual regulator node name and throwing an -EINVAL if
      data is missing, instead of just assuming everything is fine and
      iterating over all subsequent array members.
    
    - status = "disabled" will now work for disabling individual regulators in
      DT. Previously it didn't seem to do much if anything at all.
    
    Signed-off-by: Konrad Dybcio <konrad.dybcio@somainline.org>
    Link: https://lore.kernel.org/r/20211230023442.1123424-1-konrad.dybcio@somainline.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3dc751213fe979874e6d7b286925745cb90edacb
Author: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
Date:   Tue Jan 4 16:38:31 2022 +0000

    net: gemini: allow any RGMII interface mode
    
    [ Upstream commit 4e4f325a0a55907b14f579e6b1a38c53755e3de2 ]
    
    The four RGMII interface modes take care of the required RGMII delay
    configuration at the PHY and should not be limited by the network MAC
    driver. Sadly, gemini was only permitting RGMII mode with no delays,
    which would require the required delay to be inserted via PCB tracking
    or by the MAC.
    
    However, there are designs that require the PHY to add the delay, which
    is impossible without Gemini permitting the other three PHY interface
    modes. Fix the driver to allow these.
    
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Link: https://lore.kernel.org/r/E1n4mpT-002PLd-Ha@rmk-PC.armlinux.org.uk
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1063de897563c9214998f08ab3fa00ba193cc093
Author: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
Date:   Tue Jan 4 16:38:19 2022 +0000

    net: phy: marvell: configure RGMII delays for 88E1118
    
    [ Upstream commit f22725c95ececb703c3f741e8f946d23705630b7 ]
    
    Corentin Labbe reports that the SSI 1328 does not work when allowing
    the PHY to operate at gigabit speeds, but does work with the generic
    PHY driver.
    
    This appears to be because m88e1118_config_init() writes a fixed value
    to the MSCR register, claiming that this is to enable 1G speeds.
    However, this always sets bits 4 and 5, enabling RGMII transmit and
    receive delays. The suspicion is that the original board this was
    added for required the delays to make 1G speeds work.
    
    Add the necessary configuration for RGMII delays for the 88E1118 to
    bring this into line with the requirements for RGMII support, and thus
    make the SSI 1328 work.
    
    Corentin Labbe has tested this on gemini-ssi1328 and gemini-ns2502.
    
    Reported-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00580670b98b06f4f68ae4d2233cb0a2c8c42f58
Author: Danielle Ratson <danieller@nvidia.com>
Date:   Wed Jan 5 12:22:27 2022 +0200

    mlxsw: pci: Avoid flow control for EMAD packets
    
    [ Upstream commit d43e4271747ace01a27a49a97a397cb4219f6487 ]
    
    Locally generated packets ingress the device through its CPU port. When
    the CPU port is congested and there are not enough credits in its
    headroom buffer, packets can be dropped.
    
    While this might be acceptable for data packets that traverse the
    network, configuration packets exchanged between the host and the device
    (EMADs) should not be subjected to this flow control.
    
    The "sdq_lp" bit in the SDQ (Send Descriptor Queue) context allows the
    host to instruct the device to treat packets sent on this queue as
    "local processing" and always process them, regardless of the state of
    the CPU port's headroom.
    
    Add the definition of this bit and set it for the dedicated SDQ reserved
    for the transmission of EMAD packets. This makes the "local processing"
    bit in the WQE (Work Queue Element) redundant, so clear it.
    
    Signed-off-by: Danielle Ratson <danieller@nvidia.com>
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eaf8cffcf5d555f739d34cb09b7b4862e7bcb5ff
Author: Joe Thornber <ejt@redhat.com>
Date:   Fri Dec 10 13:49:53 2021 +0000

    dm space map common: add bounds check to sm_ll_lookup_bitmap()
    
    [ Upstream commit cba23ac158db7f3cd48a923d6861bee2eb7a2978 ]
    
    Corrupted metadata could warrant returning error from sm_ll_lookup_bitmap().
    
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5850bef8e955a0c4ce4653f858c8e37c585269eb
Author: Joe Thornber <ejt@redhat.com>
Date:   Fri Dec 10 13:44:13 2021 +0000

    dm btree: add a defensive bounds check to insert_at()
    
    [ Upstream commit 85bca3c05b6cca31625437eedf2060e846c4bbad ]
    
    Corrupt metadata could trigger an out of bounds write.
    
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 754b663ea9167d03604898b3a2253ff58ad06a71
Author: Ping-Ke Shih <pkshih@realtek.com>
Date:   Mon Jan 3 09:36:21 2022 +0800

    mac80211: allow non-standard VHT MCS-10/11
    
    [ Upstream commit 04be6d337d37400ad5b3d5f27ca87645ee5a18a3 ]
    
    Some AP can possibly try non-standard VHT rate and mac80211 warns and drops
    packets, and leads low TCP throughput.
    
        Rate marked as a VHT rate but data is invalid: MCS: 10, NSS: 2
        WARNING: CPU: 1 PID: 7817 at net/mac80211/rx.c:4856 ieee80211_rx_list+0x223/0x2f0 [mac8021
    
    Since commit c27aa56a72b8 ("cfg80211: add VHT rate entries for MCS-10 and MCS-11")
    has added, mac80211 adds this support as well.
    
    After this patch, throughput is good and iw can get the bitrate:
        rx bitrate: 975.1 MBit/s VHT-MCS 10 80MHz short GI VHT-NSS 2
    or
        rx bitrate: 1083.3 MBit/s VHT-MCS 11 80MHz short GI VHT-NSS 2
    
    Buglink: https://bugzilla.suse.com/show_bug.cgi?id=1192891
    Reported-by: Goldwyn Rodrigues <rgoldwyn@suse.com>
    Signed-off-by: Ping-Ke Shih <pkshih@realtek.com>
    Link: https://lore.kernel.org/r/20220103013623.17052-1-pkshih@realtek.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8da60b3a62978d7e9eb08e15ebd2e99d89debe2
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Mon Jan 3 11:40:24 2022 -0800

    net: mdio: Demote probed message to debug print
    
    [ Upstream commit 7590fc6f80ac2cbf23e6b42b668bbeded070850b ]
    
    On systems with large numbers of MDIO bus/muxes the message indicating
    that a given MDIO bus has been successfully probed is repeated for as
    many buses we have, which can eat up substantial boot time for no
    reason, demote to a debug print.
    
    Reported-by: Maxime Bizon <mbizon@freebox.fr>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Link: https://lore.kernel.org/r/20220103194024.2620-1-f.fainelli@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b22c9824ddb65d9b32a0a68e3e8e03694f989d7
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Nov 5 16:45:35 2021 -0400

    btrfs: remove BUG_ON(!eie) in find_parent_nodes
    
    [ Upstream commit 9f05c09d6baef789726346397438cca4ec43c3ee ]
    
    If we're looking for leafs that point to a data extent we want to record
    the extent items that point at our bytenr.  At this point we have the
    reference and we know for a fact that this leaf should have a reference
    to our bytenr.  However if there's some sort of corruption we may not
    find any references to our leaf, and thus could end up with eie == NULL.
    Replace this BUG_ON() with an ASSERT() and then return -EUCLEAN for the
    mortals.
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 623c65bc733683baf5dd7c66fa0593d59965e84f
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Fri Nov 5 16:45:34 2021 -0400

    btrfs: remove BUG_ON() in find_parent_nodes()
    
    [ Upstream commit fcba0120edf88328524a4878d1d6f4ad39f2ec81 ]
    
    We search for an extent entry with .offset = -1, which shouldn't be a
    thing, but corruption happens.  Add an ASSERT() for the developers,
    return -EUCLEAN for mortals.
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 44cbd2a16a07cbc02a4921853d9f17f1ffaaa97a
Author: Thomas Weißschuh <linux@weissschuh.net>
Date:   Wed Dec 22 22:20:14 2021 +0100

    ACPI: battery: Add the ThinkPad "Not Charging" quirk
    
    [ Upstream commit e96c1197aca628f7d2480a1cc3214912b40b3414 ]
    
    The EC/ACPI firmware on Lenovo ThinkPads used to report a status
    of "Unknown" when the battery is between the charge start and
    charge stop thresholds. On Windows, it reports "Not Charging"
    so the quirk has been added to also report correctly.
    
    Now the "status" attribute returns "Not Charging" when the
    battery on ThinkPads is not physicaly charging.
    
    Signed-off-by: Thomas Weißschuh <linux@weissschuh.net>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b6dc07c6e690e55a3ddce9588e2da9dd9085fb4
Author: Marina Nikolic <Marina.Nikolic@amd.com>
Date:   Tue Dec 14 20:57:53 2021 +0800

    amdgpu/pm: Make sysfs pm attributes as read-only for VFs
    
    [ Upstream commit 11c9cc95f818f0f187e9b579a7f136f532b42445 ]
    
    == Description ==
    Setting values of pm attributes through sysfs
    should not be allowed in SRIOV mode.
    These calls will not be processed by FW anyway,
    but error handling on sysfs level should be improved.
    
    == Changes ==
    This patch prohibits performing of all set commands
    in SRIOV mode on sysfs level.
    It offers better error handling as calls that are
    not allowed will not be propagated further.
    
    == Test ==
    Writing to any sysfs file in passthrough mode will succeed.
    Writing to any sysfs file in ONEVF mode will yield error:
    "calling process does not have sufficient permission to execute a command".
    
    Signed-off-by: Marina Nikolic <Marina.Nikolic@amd.com>
    Acked-by: Evan Quan <evan.quan@amd.com>
    Reviewed-by: Lijo Lazar <lijo.lazar@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 516e332d6fcebf7d69ba895acc974cd80e638458
Author: Zongmin Zhou <zhouzongmin@kylinos.cn>
Date:   Wed Dec 15 17:23:37 2021 +0800

    drm/amdgpu: fixup bad vram size on gmc v8
    
    [ Upstream commit 11544d77e3974924c5a9c8a8320b996a3e9b2f8b ]
    
    Some boards(like RX550) seem to have garbage in the upper
    16 bits of the vram size register.  Check for
    this and clamp the size properly.  Fixes
    boards reporting bogus amounts of vram.
    
    after add this patch,the maximum GPU VRAM size is 64GB,
    otherwise only 64GB vram size will be used.
    
    Signed-off-by: Zongmin Zhou<zhouzongmin@kylinos.cn>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee88ff140de2b16543547aa40db32537bd29bae9
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Wed Dec 22 17:33:51 2021 +0100

    ACPICA: Hardware: Do not flush CPU cache when entering S4 and S5
    
    [ Upstream commit 1d4e0b3abb168b2ee1eca99c527cffa1b80b6161 ]
    
    ACPICA commit 3dd7e1f3996456ef81bfe14cba29860e8d42949e
    
    According to ACPI 6.4, Section 16.2, the CPU cache flushing is
    required on entering to S1, S2, and S3, but the ACPICA code
    flushes the CPU cache regardless of the sleep state.
    
    Blind cache flush on entering S5 causes problems for TDX.
    
    Flushing happens with WBINVD that is not supported in the TDX
    environment.
    
    TDX only supports S5 and adjusting ACPICA code to conform to the
    spec more strictly fixes the issue.
    
    Link: https://github.com/acpica/acpica/commit/3dd7e1f3
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    [ rjw: Subject and changelog edits ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8544074762e2675f068617df5fcdeb1a1923f740
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Wed Dec 22 17:31:54 2021 +0100

    ACPICA: Fix wrong interpretation of PCC address
    
    [ Upstream commit 9a3b8655db1ada31c82189ae13f40eb25da48c35 ]
    
    ACPICA commit 41be6afacfdaec2dba3a5ed368736babc2a7aa5c
    
    With the PCC Opregion in the firmware and we are hitting below kernel crash:
    
    -->8
    Unable to handle kernel NULL pointer dereference at virtual address 0000000000000010
     Workqueue: pm pm_runtime_work
     pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
     pc : __memcpy+0x54/0x260
     lr : acpi_ex_write_data_to_field+0xb8/0x194
     Call trace:
      __memcpy+0x54/0x260
      acpi_ex_store_object_to_node+0xa4/0x1d4
      acpi_ex_store+0x44/0x164
      acpi_ex_opcode_1A_1T_1R+0x25c/0x508
      acpi_ds_exec_end_op+0x1b4/0x44c
      acpi_ps_parse_loop+0x3a8/0x614
      acpi_ps_parse_aml+0x90/0x2f4
      acpi_ps_execute_method+0x11c/0x19c
      acpi_ns_evaluate+0x1ec/0x2b0
      acpi_evaluate_object+0x170/0x2b0
      acpi_device_set_power+0x118/0x310
      acpi_dev_suspend+0xd4/0x180
      acpi_subsys_runtime_suspend+0x28/0x38
      __rpm_callback+0x74/0x328
      rpm_suspend+0x2d8/0x624
      pm_runtime_work+0xa4/0xb8
      process_one_work+0x194/0x25c
      worker_thread+0x260/0x49c
      kthread+0x14c/0x30c
      ret_from_fork+0x10/0x20
     Code: f9000006 f81f80a7 d65f03c0 361000c2 (b9400026)
     ---[ end trace 24d8a032fa77b68a ]---
    
    The reason for the crash is that the PCC channel index passed via region.address
    in acpi_ex_store_object_to_node is interpreted as the channel subtype
    incorrectly.
    
    Assuming the PCC op_region support is not used by any other type, let us
    remove the subtype check as the AML has no access to the subtype information.
    Once we remove it, the kernel crash disappears and correctly complains about
    missing PCC Opregion handler.
    
    ACPI Error: No handler for Region [PFRM] ((____ptrval____)) [PCC] (20210730/evregion-130)
    ACPI Error: Region PCC (ID=10) has no handler (20210730/exfldio-261)
    ACPI Error: Aborting method \_SB.ETH0._PS3 due to previous error (AE_NOT_EXIST) (20210730/psparse-531)
    
    Link: https://github.com/acpica/acpica/commit/41be6afa
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e70be176961daaa06c0c3a7531c5f69add3675a1
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Dec 22 17:31:05 2021 +0100

    ACPICA: Executer: Fix the REFCLASS_REFOF case in acpi_ex_opcode_1A_0T_1R()
    
    [ Upstream commit 24ea5f90ec9548044a6209685c5010edd66ffe8f ]
    
    ACPICA commit d984f12041392fa4156b52e2f7e5c5e7bc38ad9e
    
    If Operand[0] is a reference of the ACPI_REFCLASS_REFOF class,
    acpi_ex_opcode_1A_0T_1R () calls acpi_ns_get_attached_object () to
    obtain return_desc which may require additional resolution with
    the help of acpi_ex_read_data_from_field (). If the latter fails,
    the reference counter of the original return_desc is decremented
    which is incorrect, because acpi_ns_get_attached_object () does not
    increment the reference counter of the object returned by it.
    
    This issue may lead to premature deletion of the attached object
    while it is still attached and a use-after-free and crash in the
    host OS.  For example, this may happen when on evaluation of ref_of()
    a local region field where there is no registered handler for the
    given Operation Region.
    
    Fix it by making acpi_ex_opcode_1A_0T_1R () return Status right away
    after a acpi_ex_read_data_from_field () failure.
    
    Link: https://github.com/acpica/acpica/commit/d984f120
    Link: https://github.com/acpica/acpica/pull/685
    Reported-by: Lenny Szubowicz <lszubowi@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ea9216d20b78b0993ee3e25c5f9d6807657967e
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Wed Dec 22 17:29:45 2021 +0100

    ACPICA: Utilities: Avoid deleting the same object twice in a row
    
    [ Upstream commit 1cdfe9e346b4c5509ffe19ccde880fd259d9f7a3 ]
    
    ACPICA commit c11af67d8f7e3d381068ce7771322f2b5324d687
    
    If original_count is 0 in acpi_ut_update_ref_count (),
    acpi_ut_delete_internal_obj () is invoked for the target object, which is
    incorrect, because that object has been deleted once already and the
    memory allocated to store it may have been reclaimed and allocated
    for a different purpose by the host OS.  Moreover, a confusing debug
    message following the "Reference Count is already zero, cannot
    decrement" warning is printed in that case.
    
    To fix this issue, make acpi_ut_update_ref_count () return after finding
    that original_count is 0 and printing the above warning.
    
    Link: https://github.com/acpica/acpica/commit/c11af67d
    Link: https://github.com/acpica/acpica/pull/652
    Reported-by: Mark Asselstine <mark.asselstine@windriver.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcfd8282c5d2fa335455a33c18d4426c58b80f72
Author: Mark Langsdorf <mlangsdo@redhat.com>
Date:   Wed Dec 22 16:57:34 2021 +0100

    ACPICA: actypes.h: Expand the ACPI_ACCESS_ definitions
    
    [ Upstream commit f81bdeaf816142e0729eea0cc84c395ec9673151 ]
    
    ACPICA commit bc02c76d518135531483dfc276ed28b7ee632ce1
    
    The current ACPI_ACCESS_*_WIDTH defines do not provide a way to
    test that size is small enough to not cause an overflow when
    applied to a 32-bit integer.
    
    Rather than adding more magic numbers, add ACPI_ACCESS_*_SHIFT,
    ACPI_ACCESS_*_MAX, and ACPI_ACCESS_*_DEFAULT #defines and
    redefine ACPI_ACCESS_*_WIDTH in terms of the new #defines.
    
    This was inititally reported on Linux where a size of 102 in
    ACPI_ACCESS_BIT_WIDTH caused an overflow error in the SPCR
    initialization code.
    
    Link: https://github.com/acpica/acpica/commit/bc02c76d
    Signed-off-by: Mark Langsdorf <mlangsdo@redhat.com>
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3a51d6c90a8f909009342b0bb3a98f316c003b1
Author: Kyeong Yoo <kyeong.yoo@alliedtelesis.co.nz>
Date:   Tue Jul 4 16:22:38 2017 +1200

    jffs2: GC deadlock reading a page that is used in jffs2_write_begin()
    
    [ Upstream commit aa39cc675799bc92da153af9a13d6f969c348e82 ]
    
    GC task can deadlock in read_cache_page() because it may attempt
    to release a page that is actually allocated by another task in
    jffs2_write_begin().
    The reason is that in jffs2_write_begin() there is a small window
    a cache page is allocated for use but not set Uptodate yet.
    
    This ends up with a deadlock between two tasks:
    1) A task (e.g. file copy)
       - jffs2_write_begin() locks a cache page
       - jffs2_write_end() tries to lock "alloc_sem" from
             jffs2_reserve_space() <-- STUCK
    2) GC task (jffs2_gcd_mtd3)
       - jffs2_garbage_collect_pass() locks "alloc_sem"
       - try to lock the same cache page in read_cache_page() <-- STUCK
    
    So to avoid this deadlock, hold "alloc_sem" in jffs2_write_begin()
    while reading data in a cache page.
    
    Signed-off-by: Kyeong Yoo <kyeong.yoo@alliedtelesis.co.nz>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e35cb5b122fcdce50690916a241e2ef4cef736a7
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Wed Dec 22 01:17:28 2021 +0100

    drm/etnaviv: consider completed fence seqno in hang check
    
    [ Upstream commit cdd156955f946beaa5f3a00d8ccf90e5a197becc ]
    
    Some GPU heavy test programs manage to trigger the hangcheck quite often.
    If there are no other GPU users in the system and the test program
    exhibits a very regular structure in the commandstreams that are being
    submitted, we can end up with two distinct submits managing to trigger
    the hangcheck with the FE in a very similar address range. This leads
    the hangcheck to believe that the GPU is stuck, while in reality the GPU
    is already busy working on a different job. To avoid those spurious
    GPU resets, also remember and consider the last completed fence seqno
    in the hang check.
    
    Reported-by: Joerg Albert <joerg.albert@iav.de>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Reviewed-by: Christian Gmeiner <christian.gmeiner@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0b13335a342c9083640ba0ea6fe7c8d8076cae7
Author: Antony Antony <antony.antony@secunet.com>
Date:   Wed Dec 22 14:11:18 2021 +0100

    xfrm: rate limit SA mapping change message to user space
    
    [ Upstream commit 4e484b3e969b52effd95c17f7a86f39208b2ccf4 ]
    
    Kernel generates mapping change message, XFRM_MSG_MAPPING,
    when a source port chage is detected on a input state with UDP
    encapsulation set.  Kernel generates a message for each IPsec packet
    with new source port.  For a high speed flow per packet mapping change
    message can be excessive, and can overload the user space listener.
    
    Introduce rate limiting for XFRM_MSG_MAPPING message to the user space.
    
    The rate limiting is configurable via netlink, when adding a new SA or
    updating it. Use the new attribute XFRMA_MTIMER_THRESH in seconds.
    
    v1->v2 change:
            update xfrm_sa_len()
    
    v2->v3 changes:
            use u32 insted unsigned long to reduce size of struct xfrm_state
            fix xfrm_ompat size Reported-by: kernel test robot <lkp@intel.com>
            accept XFRM_MSG_MAPPING only when XFRMA_ENCAP is present
    
    Co-developed-by: Thomas Egerer <thomas.egerer@secunet.com>
    Signed-off-by: Thomas Egerer <thomas.egerer@secunet.com>
    Signed-off-by: Antony Antony <antony.antony@secunet.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b7beb2fea8f16f59f818336f162014e7be6e835
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Wed Dec 22 12:22:01 2021 -0800

    Bluetooth: vhci: Set HCI_QUIRK_VALID_LE_STATES
    
    [ Upstream commit cfb4c313be670fd4bd09650216620fa4514cdb93 ]
    
    This set HCI_QUIRK_VALID_LE_STATES quirk which is required for the likes
    of experimental LE simultaneous roles.
    
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ac117edac18b21d9104a8480838c9d6783e59ba
Author: Ben Greear <greearb@candelatech.com>
Date:   Thu Sep 3 12:52:54 2020 -0700

    ath11k: Fix napi related hang
    
    [ Upstream commit d943fdad7589653065be0e20aadc6dff37725ed4 ]
    
    Similar to the same bug in ath10k, a napi disable w/out it being enabled
    will hang forever.  I believe I saw this while trying rmmod after driver
    had some failure on startup.  Fix it by keeping state on whether napi is
    enabled or not.
    
    And, remove un-used napi pointer in ath11k driver base struct.
    
    Signed-off-by: Ben Greear <greearb@candelatech.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20200903195254.29379-1-greearb@candelatech.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 756a7188b277f10b807e6e7321ccf8b929cc6e4a
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Sep 12 23:12:52 2021 -0700

    um: registers: Rename function names to avoid conflicts and build problems
    
    [ Upstream commit 077b7320942b64b0da182aefd83c374462a65535 ]
    
    The function names init_registers() and restore_registers() are used
    in several net/ethernet/ and gpu/drm/ drivers for other purposes (not
    calls to UML functions), so rename them.
    
    This fixes multiple build errors.
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Jeff Dike <jdike@addtoit.com>
    Cc: Richard Weinberger <richard@nod.at>
    Cc: Anton Ivanov <anton.ivanov@cambridgegreys.com>
    Cc: linux-um@lists.infradead.org
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d817d10f7a002cd797ec460881a229768140451d
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Sun Dec 19 13:28:34 2021 +0200

    iwlwifi: pcie: make sure prph_info is set when treating wakeup IRQ
    
    [ Upstream commit 459fc0f2c6b0f6e280bfa0f230c100c9dfe3a199 ]
    
    In some rare cases when the HW is in a bad state, we may get this
    interrupt when prph_info is not set yet.  Then we will try to
    dereference it to check the sleep_notif element, which will cause an
    oops.
    
    Fix that by ignoring the interrupt if prph_info is not set yet.
    
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20211219132536.0537aa562313.I183bb336345b9b3da196ba9e596a6f189fbcbd09@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f266e1c5bf88610cb20d281a5e14749b23478f1b
Author: Ilan Peer <ilan.peer@intel.com>
Date:   Sun Dec 19 12:18:16 2021 +0200

    iwlwifi: mvm: Fix calculation of frame length
    
    [ Upstream commit 40a0b38d7a7f91a6027287e0df54f5f547e8d27e ]
    
    The RADA might include in the Rx frame the MIC and CRC bytes.
    These bytes should be removed for non monitor interfaces and
    should not be passed to mac80211.
    
    Fix the Rx processing to remove the extra bytes on non monitor
    cases.
    
    Signed-off-by: Ilan Peer <ilan.peer@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20211219121514.098be12c801e.I1d81733d8a75b84c3b20eb6e0d14ab3405ca6a86@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e44b600543c70f9368d5da90f2e1c97eeb0fdf8
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Dec 10 11:12:45 2021 +0200

    iwlwifi: remove module loading failure message
    
    [ Upstream commit 6518f83ffa51131daaf439b66094f684da3fb0ae ]
    
    When CONFIG_DEBUG_TEST_DRIVER_REMOVE is set, iwlwifi crashes
    when the opmode module cannot be loaded, due to completing
    the completion before using drv->dev, which can then already
    be freed.
    
    Fix this by removing the (fairly useless) message. Moving the
    completion later causes a deadlock instead, so that's not an
    option.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/20211210091245.289008-2-luca@coelho.fi
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit febab6b60d61d13cd9f30a2991deea56df39567d
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Dec 10 11:12:42 2021 +0200

    iwlwifi: fix leaks/bad data after failed firmware load
    
    [ Upstream commit ab07506b0454bea606095951e19e72c282bfbb42 ]
    
    If firmware load fails after having loaded some parts of the
    firmware, e.g. the IML image, then this would leak. For the
    host command list we'd end up running into a WARN on the next
    attempt to load another firmware image.
    
    Fix this by calling iwl_dealloc_ucode() on failures, and make
    that also clear the data so we start fresh on the next round.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20211210110539.1f742f0eb58a.I1315f22f6aa632d94ae2069f85e1bca5e734dce0@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81d2e96ababb7147206f6960e9aac66e6afb87f1
Author: Changcheng Deng <deng.changcheng@zte.com.cn>
Date:   Thu Nov 25 01:43:11 2021 +0000

    PM: AVS: qcom-cpr: Use div64_ul instead of do_div
    
    [ Upstream commit 92c550f9ffd2884bb5def52b5c0485a35e452784 ]
    
    do_div() does a 64-by-32 division. Here the divisor is an unsigned long
    which on some platforms is 64 bit wide. So use div64_ul instead of do_div
    to avoid a possible truncation.
    
    Reported-by: Zeal Robot <zealci@zte.com.cn>
    Signed-off-by: Changcheng Deng <deng.changcheng@zte.com.cn>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20211125014311.45942-1-deng.changcheng@zte.com.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0a1d844e3e7cd65aa0d884b4d4bbf0351c6df33
Author: Po-Hao Huang <phhuang@realtek.com>
Date:   Fri Dec 17 09:27:08 2021 +0800

    rtw88: 8822c: update rx settings to prevent potential hw deadlock
    
    [ Upstream commit c1afb26727d9e507d3e17a9890e7aaf7fc85cd55 ]
    
    These settings enables mac to detect and recover when rx fifo
    circuit deadlock occurs. Previous version missed this, so we fix it.
    
    Signed-off-by: Po-Hao Huang <phhuang@realtek.com>
    Signed-off-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/20211217012708.8623-1-pkshih@realtek.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ef25f3122c07d143732e27235edb4eaecabb3da
Author: Zekun Shen <bruceshenzk@gmail.com>
Date:   Thu Oct 28 18:21:42 2021 -0400

    ath9k: Fix out-of-bound memcpy in ath9k_hif_usb_rx_stream
    
    [ Upstream commit 6ce708f54cc8d73beca213cec66ede5ce100a781 ]
    
    Large pkt_len can lead to out-out-bound memcpy. Current
    ath9k_hif_usb_rx_stream allows combining the content of two urb
    inputs to one pkt. The first input can indicate the size of the
    pkt. Any remaining size is saved in hif_dev->rx_remain_len.
    While processing the next input, memcpy is used with rx_remain_len.
    
    4-byte pkt_len can go up to 0xffff, while a single input is 0x4000
    maximum in size (MAX_RX_BUF_SIZE). Thus, the patch adds a check for
    pkt_len which must not exceed 2 * MAX_RX_BUG_SIZE.
    
    BUG: KASAN: slab-out-of-bounds in ath9k_hif_usb_rx_cb+0x490/0xed7 [ath9k_htc]
    Read of size 46393 at addr ffff888018798000 by task kworker/0:1/23
    
    CPU: 0 PID: 23 Comm: kworker/0:1 Not tainted 5.6.0 #63
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996),
    BIOS rel-1.10.2-0-g5f4c7b1-prebuilt.qemu-project.org 04/01/2014
    Workqueue: events request_firmware_work_func
    Call Trace:
     <IRQ>
     dump_stack+0x76/0xa0
     print_address_description.constprop.0+0x16/0x200
     ? ath9k_hif_usb_rx_cb+0x490/0xed7 [ath9k_htc]
     ? ath9k_hif_usb_rx_cb+0x490/0xed7 [ath9k_htc]
     __kasan_report.cold+0x37/0x7c
     ? ath9k_hif_usb_rx_cb+0x490/0xed7 [ath9k_htc]
     kasan_report+0xe/0x20
     check_memory_region+0x15a/0x1d0
     memcpy+0x20/0x50
     ath9k_hif_usb_rx_cb+0x490/0xed7 [ath9k_htc]
     ? hif_usb_mgmt_cb+0x2d9/0x2d9 [ath9k_htc]
     ? _raw_spin_lock_irqsave+0x7b/0xd0
     ? _raw_spin_trylock_bh+0x120/0x120
     ? __usb_unanchor_urb+0x12f/0x210
     __usb_hcd_giveback_urb+0x1e4/0x380
     usb_giveback_urb_bh+0x241/0x4f0
     ? __hrtimer_run_queues+0x316/0x740
     ? __usb_hcd_giveback_urb+0x380/0x380
     tasklet_action_common.isra.0+0x135/0x330
     __do_softirq+0x18c/0x634
     irq_exit+0x114/0x140
     smp_apic_timer_interrupt+0xde/0x380
     apic_timer_interrupt+0xf/0x20
    
    I found the bug using a custome USBFuzz port. It's a research work
    to fuzz USB stack/drivers. I modified it to fuzz ath9k driver only,
    providing hand-crafted usb descriptors to QEMU.
    
    After fixing the value of pkt_tag to ATH_USB_RX_STREAM_MODE_TAG in QEMU
    emulation, I found the KASAN report. The bug is triggerable whenever
    pkt_len is above two MAX_RX_BUG_SIZE. I used the same input that crashes
    to test the driver works when applying the patch.
    
    Signed-off-by: Zekun Shen <bruceshenzk@gmail.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/YXsidrRuK6zBJicZ@10-18-43-117.dynapool.wireless.nyu.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e10de31055479e81819645ac00434f695d357d0a
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Dec 15 20:01:06 2021 +0800

    usb: hub: Add delay for SuperSpeed hub resume to let links transit to U0
    
    [ Upstream commit 00558586382891540c59c9febc671062425a6e47 ]
    
    When a new USB device gets plugged to nested hubs, the affected hub,
    which connects to usb 2-1.4-port2, doesn't report there's any change,
    hence the nested hubs go back to runtime suspend like nothing happened:
    [  281.032951] usb usb2: usb wakeup-resume
    [  281.032959] usb usb2: usb auto-resume
    [  281.032974] hub 2-0:1.0: hub_resume
    [  281.033011] usb usb2-port1: status 0263 change 0000
    [  281.033077] hub 2-0:1.0: state 7 ports 4 chg 0000 evt 0000
    [  281.049797] usb 2-1: usb wakeup-resume
    [  281.069800] usb 2-1: Waited 0ms for CONNECT
    [  281.069810] usb 2-1: finish resume
    [  281.070026] hub 2-1:1.0: hub_resume
    [  281.070250] usb 2-1-port4: status 0203 change 0000
    [  281.070272] usb usb2-port1: resume, status 0
    [  281.070282] hub 2-1:1.0: state 7 ports 4 chg 0010 evt 0000
    [  281.089813] usb 2-1.4: usb wakeup-resume
    [  281.109792] usb 2-1.4: Waited 0ms for CONNECT
    [  281.109801] usb 2-1.4: finish resume
    [  281.109991] hub 2-1.4:1.0: hub_resume
    [  281.110147] usb 2-1.4-port2: status 0263 change 0000
    [  281.110234] usb 2-1-port4: resume, status 0
    [  281.110239] usb 2-1-port4: status 0203, change 0000, 10.0 Gb/s
    [  281.110266] hub 2-1.4:1.0: state 7 ports 4 chg 0000 evt 0000
    [  281.110426] hub 2-1.4:1.0: hub_suspend
    [  281.110565] usb 2-1.4: usb auto-suspend, wakeup 1
    [  281.130998] hub 2-1:1.0: hub_suspend
    [  281.137788] usb 2-1: usb auto-suspend, wakeup 1
    [  281.142935] hub 2-0:1.0: state 7 ports 4 chg 0000 evt 0000
    [  281.177828] usb 2-1: usb wakeup-resume
    [  281.197839] usb 2-1: Waited 0ms for CONNECT
    [  281.197850] usb 2-1: finish resume
    [  281.197984] hub 2-1:1.0: hub_resume
    [  281.198203] usb 2-1-port4: status 0203 change 0000
    [  281.198228] usb usb2-port1: resume, status 0
    [  281.198237] hub 2-1:1.0: state 7 ports 4 chg 0010 evt 0000
    [  281.217835] usb 2-1.4: usb wakeup-resume
    [  281.237834] usb 2-1.4: Waited 0ms for CONNECT
    [  281.237845] usb 2-1.4: finish resume
    [  281.237990] hub 2-1.4:1.0: hub_resume
    [  281.238067] usb 2-1.4-port2: status 0263 change 0000
    [  281.238148] usb 2-1-port4: resume, status 0
    [  281.238152] usb 2-1-port4: status 0203, change 0000, 10.0 Gb/s
    [  281.238166] hub 2-1.4:1.0: state 7 ports 4 chg 0000 evt 0000
    [  281.238385] hub 2-1.4:1.0: hub_suspend
    [  281.238523] usb 2-1.4: usb auto-suspend, wakeup 1
    [  281.258076] hub 2-1:1.0: hub_suspend
    [  281.265744] usb 2-1: usb auto-suspend, wakeup 1
    [  281.285976] hub 2-0:1.0: hub_suspend
    [  281.285988] usb usb2: bus auto-suspend, wakeup 1
    
    USB 3.2 spec, 9.2.5.4 "Changing Function Suspend State" says that "If
    the link is in a non-U0 state, then the device must transition the link
    to U0 prior to sending the remote wake message", but the hub only
    transits the link to U0 after signaling remote wakeup.
    
    So be more forgiving and use a 20ms delay to let the link transit to U0
    for remote wakeup.
    
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Link: https://lore.kernel.org/r/20211215120108.336597-1-kai.heng.feng@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 282286c632a2ae8def0f781e643c099317df4252
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Dec 16 20:32:15 2021 +0100

    cpufreq: Fix initialization of min and max frequency QoS requests
    
    [ Upstream commit 521223d8b3ec078f670c7c35a1a04b1b2af07966 ]
    
    The min and max frequency QoS requests in the cpufreq core are
    initialized to whatever the current min and max frequency values are
    at the init time, but if any of these values change later (for
    example, cpuinfo.max_freq is updated by the driver), these initial
    request values will be limiting the CPU frequency unnecessarily
    unless they are changed by user space via sysfs.
    
    To address this, initialize min_freq_req and max_freq_req to
    FREQ_QOS_MIN_DEFAULT_VALUE and FREQ_QOS_MAX_DEFAULT_VALUE,
    respectively, so they don't really limit anything until user
    space updates them.
    
    Reported-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Tested-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37b25de3af10a3082f9ef5888de0f8602c5dcadf
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Dec 10 17:10:13 2021 +0100

    PM: runtime: Add safety net to supplier device release
    
    [ Upstream commit d1579e61192e0e686faa4208500ef4c3b529b16c ]
    
    Because refcount_dec_not_one() returns true if the target refcount
    becomes saturated, it is generally unsafe to use its return value as
    a loop termination condition, but that is what happens when a device
    link's supplier device is released during runtime PM suspend
    operations and on device link removal.
    
    To address this, introduce pm_runtime_release_supplier() to be used
    in the above cases which will check the supplier device's runtime
    PM usage counter in addition to the refcount_dec_not_one() return
    value, so the loop can be terminated in case the rpm_active refcount
    value becomes invalid, and update the code in question to use it as
    appropriate.
    
    This change is not expected to have any visible functional impact.
    
    Reported-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5dfc6fa0b8c2f8a336a2e559a79d5a98ac28a81d
Author: Thierry Reding <treding@nvidia.com>
Date:   Tue Dec 7 14:28:29 2021 +0100

    arm64: tegra: Adjust length of CCPLEX cluster MMIO region
    
    [ Upstream commit 2b14cbd643feea5fc17c6e8bead4e71088c69acd ]
    
    The Tegra186 CCPLEX cluster register region is 4 MiB is length, not 4
    MiB - 1. This was likely presumed to be the "limit" rather than length.
    Fix it up.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b68c56a149e41995c67d15d19170f822d5dbcc8b
Author: Biwen Li <biwen.li@nxp.com>
Date:   Tue Dec 14 03:32:38 2021 -0600

    arm64: dts: ls1028a-qds: move rtc node to the correct i2c bus
    
    [ Upstream commit cbe9d948eadfe352ad45495a7cc5bf20a1b29d90 ]
    
    The i2c rtc is on i2c2 bus not i2c1 bus, so fix it in dts.
    
    Signed-off-by: Biwen Li <biwen.li@nxp.com>
    Signed-off-by: Li Yang <leoyang.lil@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6f7f0ad5af5fa049dcb703db186423af9226e25
Author: Paul Moore <paul@paul-moore.com>
Date:   Mon Dec 13 15:45:20 2021 -0500

    audit: ensure userspace is penalized the same as the kernel when under pressure
    
    [ Upstream commit 8f110f530635af44fff1f4ee100ecef0bac62510 ]
    
    Due to the audit control mutex necessary for serializing audit
    userspace messages we haven't been able to block/penalize userspace
    processes that attempt to send audit records while the system is
    under audit pressure.  The result is that privileged userspace
    applications have a priority boost with respect to audit as they are
    not bound by the same audit queue throttling as the other tasks on
    the system.
    
    This patch attempts to restore some balance to the system when under
    audit pressure by blocking these privileged userspace tasks after
    they have finished their audit processing, and dropped the audit
    control mutex, but before they return to userspace.
    
    Reported-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Tested-by: Gaosheng Cui <cuigaosheng1@huawei.com>
    Reviewed-by: Richard Guy Briggs <rgb@redhat.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d54ed155031a4b13cd92b3deb404673d82d7504
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Wed Nov 10 18:17:09 2021 +0100

    mmc: core: Fixup storing of OCR for MMC_QUIRK_NONSTD_SDIO
    
    [ Upstream commit 8c3e5b74b9e2146f564905e50ca716591c76d4f1 ]
    
    The mmc core takes a specific path to support initializing of a
    non-standard SDIO card. This is triggered by looking for the card-quirk,
    MMC_QUIRK_NONSTD_SDIO.
    
    In mmc_sdio_init_card() this gets rather messy, as it causes the code to
    bail out earlier, compared to the usual path. This leads to that the OCR
    doesn't get saved properly in card->ocr. Fortunately, only omap_hsmmc has
    been using the MMC_QUIRK_NONSTD_SDIO and is dealing with the issue, by
    assigning a hardcoded value (0x80) to card->ocr from an ->init_card() ops.
    
    To make the behaviour consistent, let's instead rely on the core to save
    the OCR in card->ocr during initialization.
    
    Reported-by: H. Nikolaus Schaller <hns@goldelico.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Link: https://lore.kernel.org/r/e7936cff7fc24d187ef2680d3b4edb0ade58f293.1636564631.git.hns@goldelico.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51a5156bb779aa6ef9e208c1719ddfa12ce0d6d1
Author: Zhou Qingyang <zhou1615@umn.edu>
Date:   Fri Dec 3 16:40:30 2021 +0100

    media: saa7146: hexium_gemini: Fix a NULL pointer dereference in hexium_attach()
    
    [ Upstream commit 3af86b046933ba513d08399dba0d4d8b50d607d0 ]
    
    In hexium_attach(dev, info), saa7146_vv_init() is called to allocate
    a new memory for dev->vv_data. saa7146_vv_release() will be called on
    failure of saa7146_register_device(). There is a dereference of
    dev->vv_data in saa7146_vv_release(), which could lead to a NULL
    pointer dereference on failure of saa7146_vv_init().
    
    Fix this bug by adding a check of saa7146_vv_init().
    
    This bug was found by a static analyzer. The analysis employs
    differential checking to identify inconsistent security operations
    (e.g., checks or kfrees) between two code paths and confirms that the
    inconsistent operations are not recovered in the current function or
    the callers, so they constitute bugs.
    
    Note that, as a bug found by static analysis, it can be a false
    positive or hard to trigger. Multiple researchers have cross-reviewed
    the bug.
    
    Builds with CONFIG_VIDEO_HEXIUM_GEMINI=m show no new warnings,
    and our static analyzer no longer warns about this code.
    
    Link: https://lore.kernel.org/linux-media/20211203154030.111210-1-zhou1615@umn.edu
    Signed-off-by: Zhou Qingyang <zhou1615@umn.edu>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6bc6b178ce1dc6e2545f5830fe79e2c6b14724f
Author: Sean Young <sean@mess.org>
Date:   Tue Nov 30 23:58:19 2021 +0100

    media: igorplugusb: receiver overflow should be reported
    
    [ Upstream commit 8fede658e7ddb605bbd68ed38067ddb0af033db4 ]
    
    Without this, some IR will be missing mid-stream and we might decode
    something which never really occurred.
    
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d698e024be2ea5bb4f441e0b07f82def42d6a168
Author: Alistair Francis <alistair@alistair23.me>
Date:   Wed Dec 8 22:40:43 2021 +1000

    HID: quirks: Allow inverting the absolute X/Y values
    
    [ Upstream commit fd8d135b2c5e88662f2729e034913f183455a667 ]
    
    Add a HID_QUIRK_X_INVERT/HID_QUIRK_Y_INVERT quirk that can be used
    to invert the X/Y values.
    
    Signed-off-by: Alistair Francis <alistair@alistair23.me>
    [bentiss: silence checkpatch warning]
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Link: https://lore.kernel.org/r/20211208124045.61815-2-alistair@alistair23.me
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59f03633463fba869cab90cad0540fb48312102f
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Nov 30 11:08:06 2021 +0100

    bpf: Do not WARN in bpf_warn_invalid_xdp_action()
    
    [ Upstream commit 2cbad989033bff0256675c38f96f5faab852af4b ]
    
    The WARN_ONCE() in bpf_warn_invalid_xdp_action() can be triggered by
    any bugged program, and even attaching a correct program to a NIC
    not supporting the given action.
    
    The resulting splat, beyond polluting the logs, fouls automated tools:
    e.g. a syzkaller reproducers using an XDP program returning an
    unsupported action will never pass validation.
    
    Replace the WARN_ONCE with a less intrusive pr_warn_once().
    
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Link: https://lore.kernel.org/bpf/016ceec56e4817ebb2a9e35ce794d5c917df572c.1638189075.git.pabeni@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e8805f73b69f15afdd10e703a7551eae8915e7b
Author: Suresh Kumar <surkumar@redhat.com>
Date:   Mon Dec 13 11:17:09 2021 +0530

    net: bonding: debug: avoid printing debug logs when bond is not notifying peers
    
    [ Upstream commit fee32de284ac277ba434a2d59f8ce46528ff3946 ]
    
    Currently "bond_should_notify_peers: slave ..." messages are printed whenever
    "bond_should_notify_peers" function is called.
    
    +++
    Dec 12 12:33:26 node1 kernel: bond0: bond_should_notify_peers: slave enp0s25
    Dec 12 12:33:26 node1 kernel: bond0: bond_should_notify_peers: slave enp0s25
    Dec 12 12:33:26 node1 kernel: bond0: bond_should_notify_peers: slave enp0s25
    Dec 12 12:33:26 node1 kernel: bond0: (slave enp0s25): Received LACPDU on port 1
    Dec 12 12:33:26 node1 kernel: bond0: (slave enp0s25): Rx Machine: Port=1, Last State=6, Curr State=6
    Dec 12 12:33:26 node1 kernel: bond0: (slave enp0s25): partner sync=1
    Dec 12 12:33:26 node1 kernel: bond0: bond_should_notify_peers: slave enp0s25
    Dec 12 12:33:26 node1 kernel: bond0: bond_should_notify_peers: slave enp0s25
    Dec 12 12:33:26 node1 kernel: bond0: bond_should_notify_peers: slave enp0s25
    ...
    Dec 12 12:33:30 node1 kernel: bond0: bond_should_notify_peers: slave enp0s25
    Dec 12 12:33:30 node1 kernel: bond0: bond_should_notify_peers: slave enp0s25
    Dec 12 12:33:30 node1 kernel: bond0: (slave enp4s3): Received LACPDU on port 2
    Dec 12 12:33:30 node1 kernel: bond0: (slave enp4s3): Rx Machine: Port=2, Last State=6, Curr State=6
    Dec 12 12:33:30 node1 kernel: bond0: (slave enp4s3): partner sync=1
    Dec 12 12:33:30 node1 kernel: bond0: bond_should_notify_peers: slave enp0s25
    Dec 12 12:33:30 node1 kernel: bond0: bond_should_notify_peers: slave enp0s25
    Dec 12 12:33:30 node1 kernel: bond0: bond_should_notify_peers: slave enp0s25
    +++
    
    This is confusing and can also clutter up debug logs.
    Print logs only when the peer notification happens.
    
    Signed-off-by: Suresh Kumar <suresh2514@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c72de32ff134f48115591b9ea2bb03c1bbd3804
Author: Borislav Petkov <bp@suse.de>
Date:   Tue Nov 2 11:14:48 2021 +0100

    x86/mce: Mark mce_read_aux() noinstr
    
    [ Upstream commit db6c996d6ce45dfb44891f0824a65ecec216f47a ]
    
    Fixes
    
      vmlinux.o: warning: objtool: do_machine_check()+0x681: call to mce_read_aux() leaves .noinstr.text section
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lore.kernel.org/r/20211208111343.8130-10-bp@alien8.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ad3e60f1fec185d11196028136e60e8e3009b37
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Nov 1 16:43:33 2021 +0100

    x86/mce: Mark mce_end() noinstr
    
    [ Upstream commit b4813539d37fa31fed62cdfab7bd2dd8929c5b2e ]
    
    It is called by the #MC handler which is noinstr.
    
    Fixes
    
      vmlinux.o: warning: objtool: do_machine_check()+0xbd6: call to memset() leaves .noinstr.text section
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lore.kernel.org/r/20211208111343.8130-9-bp@alien8.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f21ca973b43fb23416bd89dc267aa51249c20afb
Author: Borislav Petkov <bp@suse.de>
Date:   Mon Nov 1 13:39:35 2021 +0100

    x86/mce: Mark mce_panic() noinstr
    
    [ Upstream commit 3c7ce80a818fa7950be123cac80cd078e5ac1013 ]
    
    And allow instrumentation inside it because it does calls to other
    facilities which will not be tagged noinstr.
    
    Fixes
    
      vmlinux.o: warning: objtool: do_machine_check()+0xc73: call to mce_panic() leaves .noinstr.text section
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lore.kernel.org/r/20211208111343.8130-8-bp@alien8.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de360d94438688fd29e548a79abb9ee6ecd4de0f
Author: Borislav Petkov <bp@suse.de>
Date:   Wed Oct 13 09:07:19 2021 +0200

    x86/mce: Allow instrumentation during task work queueing
    
    [ Upstream commit 4fbce464db81a42f9a57ee242d6150ec7f996415 ]
    
    Fixes
    
      vmlinux.o: warning: objtool: do_machine_check()+0xdb1: call to queue_task_work() leaves .noinstr.text section
    
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lore.kernel.org/r/20211208111343.8130-6-bp@alien8.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af371e0abb6c42af9a4e26fa4e24b9917e8edcf9
Author: Baochen Qiang <quic_bqiang@quicinc.com>
Date:   Thu Dec 9 09:19:49 2021 +0800

    ath11k: Avoid false DEADLOCK warning reported by lockdep
    
    [ Upstream commit 767c94caf0efad136157110787fe221b74cb5c8a ]
    
    With CONFIG_LOCKDEP=y and CONFIG_DEBUG_SPINLOCK=y, lockdep reports
    below warning:
    
    [  166.059415] ============================================
    [  166.059416] WARNING: possible recursive locking detected
    [  166.059418] 5.15.0-wt-ath+ #10 Tainted: G        W  O
    [  166.059420] --------------------------------------------
    [  166.059421] kworker/0:2/116 is trying to acquire lock:
    [  166.059423] ffff9905f2083160 (&srng->lock){+.-.}-{2:2}, at: ath11k_hal_reo_cmd_send+0x20/0x490 [ath11k]
    [  166.059440]
                   but task is already holding lock:
    [  166.059442] ffff9905f2083230 (&srng->lock){+.-.}-{2:2}, at: ath11k_dp_process_reo_status+0x95/0x2d0 [ath11k]
    [  166.059491]
                   other info that might help us debug this:
    [  166.059492]  Possible unsafe locking scenario:
    
    [  166.059493]        CPU0
    [  166.059494]        ----
    [  166.059495]   lock(&srng->lock);
    [  166.059498]   lock(&srng->lock);
    [  166.059500]
                    *** DEADLOCK ***
    
    [  166.059501]  May be due to missing lock nesting notation
    
    [  166.059502] 3 locks held by kworker/0:2/116:
    [  166.059504]  #0: ffff9905c0081548 ((wq_completion)events){+.+.}-{0:0}, at: process_one_work+0x1f6/0x660
    [  166.059511]  #1: ffff9d2400a5fe68 ((debug_obj_work).work){+.+.}-{0:0}, at: process_one_work+0x1f6/0x660
    [  166.059517]  #2: ffff9905f2083230 (&srng->lock){+.-.}-{2:2}, at: ath11k_dp_process_reo_status+0x95/0x2d0 [ath11k]
    [  166.059532]
                   stack backtrace:
    [  166.059534] CPU: 0 PID: 116 Comm: kworker/0:2 Kdump: loaded Tainted: G        W  O      5.15.0-wt-ath+ #10
    [  166.059537] Hardware name: Intel(R) Client Systems NUC8i7HVK/NUC8i7HVB, BIOS HNKBLi70.86A.0059.2019.1112.1124 11/12/2019
    [  166.059539] Workqueue: events free_obj_work
    [  166.059543] Call Trace:
    [  166.059545]  <IRQ>
    [  166.059547]  dump_stack_lvl+0x56/0x7b
    [  166.059552]  __lock_acquire+0xb9a/0x1a50
    [  166.059556]  lock_acquire+0x1e2/0x330
    [  166.059560]  ? ath11k_hal_reo_cmd_send+0x20/0x490 [ath11k]
    [  166.059571]  _raw_spin_lock_bh+0x33/0x70
    [  166.059574]  ? ath11k_hal_reo_cmd_send+0x20/0x490 [ath11k]
    [  166.059584]  ath11k_hal_reo_cmd_send+0x20/0x490 [ath11k]
    [  166.059594]  ath11k_dp_tx_send_reo_cmd+0x3f/0x130 [ath11k]
    [  166.059605]  ath11k_dp_rx_tid_del_func+0x221/0x370 [ath11k]
    [  166.059618]  ath11k_dp_process_reo_status+0x22f/0x2d0 [ath11k]
    [  166.059632]  ? ath11k_dp_service_srng+0x2ea/0x2f0 [ath11k]
    [  166.059643]  ath11k_dp_service_srng+0x2ea/0x2f0 [ath11k]
    [  166.059655]  ath11k_pci_ext_grp_napi_poll+0x1c/0x70 [ath11k_pci]
    [  166.059659]  __napi_poll+0x28/0x230
    [  166.059664]  net_rx_action+0x285/0x310
    [  166.059668]  __do_softirq+0xe6/0x4d2
    [  166.059672]  irq_exit_rcu+0xd2/0xf0
    [  166.059675]  common_interrupt+0xa5/0xc0
    [  166.059678]  </IRQ>
    [  166.059679]  <TASK>
    [  166.059680]  asm_common_interrupt+0x1e/0x40
    [  166.059683] RIP: 0010:_raw_spin_unlock_irqrestore+0x38/0x70
    [  166.059686] Code: 83 c7 18 e8 2a 95 43 ff 48 89 ef e8 22 d2 43 ff 81 e3 00 02 00 00 75 25 9c 58 f6 c4 02 75 2d 48 85 db 74 01 fb bf 01 00 00 00 <e8> 63 2e 40 ff 65 8b 05 8c 59 97 5c 85 c0 74 0a 5b 5d c3 e8 00 6a
    [  166.059689] RSP: 0018:ffff9d2400a5fca0 EFLAGS: 00000206
    [  166.059692] RAX: 0000000000000002 RBX: 0000000000000200 RCX: 0000000000000006
    [  166.059694] RDX: 0000000000000000 RSI: ffffffffa404879b RDI: 0000000000000001
    [  166.059696] RBP: ffff9905c0053000 R08: 0000000000000001 R09: 0000000000000001
    [  166.059698] R10: ffff9d2400a5fc50 R11: 0000000000000001 R12: ffffe186c41e2840
    [  166.059700] R13: 0000000000000001 R14: ffff9905c78a1c68 R15: 0000000000000001
    [  166.059704]  free_debug_processing+0x257/0x3d0
    [  166.059708]  ? free_obj_work+0x1f5/0x250
    [  166.059712]  __slab_free+0x374/0x5a0
    [  166.059718]  ? kmem_cache_free+0x2e1/0x370
    [  166.059721]  ? free_obj_work+0x1f5/0x250
    [  166.059724]  kmem_cache_free+0x2e1/0x370
    [  166.059727]  free_obj_work+0x1f5/0x250
    [  166.059731]  process_one_work+0x28b/0x660
    [  166.059735]  ? process_one_work+0x660/0x660
    [  166.059738]  worker_thread+0x37/0x390
    [  166.059741]  ? process_one_work+0x660/0x660
    [  166.059743]  kthread+0x176/0x1a0
    [  166.059746]  ? set_kthread_struct+0x40/0x40
    [  166.059749]  ret_from_fork+0x22/0x30
    [  166.059754]  </TASK>
    
    Since these two lockes are both initialized in ath11k_hal_srng_setup,
    they are assigned with the same key. As a result lockdep suspects that
    the task is trying to acquire the same lock (due to same key) while
    already holding it, and thus reports the DEADLOCK warning. However as
    they are different spinlock instances, the warning is false positive.
    
    On the other hand, even no dead lock indeed, this is a major issue for
    upstream regression testing as it disables lockdep functionality.
    
    Fix it by assigning separate lock class key for each srng->lock.
    
    Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-01720.1-QCAHSPSWPL_V1_V2_SILICONZ_LITE-1
    Signed-off-by: Baochen Qiang <quic_bqiang@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20211209011949.151472-1-quic_bqiang@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aec69e2f33b4d9861c560867659848d0ac336478
Author: Heiko Carstens <hca@linux.ibm.com>
Date:   Tue Nov 30 13:25:46 2021 +0100

    selftests/ftrace: make kprobe profile testcase description unique
    
    [ Upstream commit e5992f373c6eed6d09e5858e9623df1259b3ce30 ]
    
    Commit 32f6e5da83c7 ("selftests/ftrace: Add kprobe profile testcase")
    added a new kprobes testcase, but has a description which does not
    describe what the test case is doing and is duplicating the description
    of another test case.
    
    Therefore change the test case description, so it is unique and then
    allows easily to tell which test case actually passed or failed.
    
    Reported-by: Alexander Egorenkov <egorenar@linux.ibm.com>
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07ecabf15ad3bfcaaa7e3ee6d660cfce8018dc2a
Author: Iwona Winiarska <iwona.winiarska@intel.com>
Date:   Sat Dec 4 18:10:26 2021 +0100

    gpio: aspeed: Convert aspeed_gpio.lock to raw_spinlock
    
    [ Upstream commit 61a7904b6ace99b1bde0d0e867fa3097f5c8cee2 ]
    
    The gpio-aspeed driver implements an irq_chip which need to be invoked
    from hardirq context. Since spin_lock() can sleep with PREEMPT_RT, it is
    no longer legal to invoke it while interrupts are disabled.
    This also causes lockdep to complain about:
    [    0.649797] [ BUG: Invalid wait context ]
    because aspeed_gpio.lock (spin_lock_t) is taken under irq_desc.lock
    (raw_spinlock_t).
    Let's use of raw_spinlock_t instead of spinlock_t.
    
    Signed-off-by: Iwona Winiarska <iwona.winiarska@intel.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e09f9d15e430fd4d3189fc9b243abc5fe42e215
Author: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
Date:   Wed Dec 8 11:36:30 2021 +0000

    net: phy: prefer 1000baseT over 1000baseKX
    
    [ Upstream commit f20f94f7f52c4685c81754f489ffcc72186e8bdb ]
    
    The PHY settings table is supposed to be sorted by descending match
    priority - in other words, earlier entries are preferred over later
    entries.
    
    The order of 1000baseKX/Full and 1000baseT/Full is such that we
    prefer 1000baseKX/Full over 1000baseT/Full, but 1000baseKX/Full is
    a lot rarer than 1000baseT/Full, and thus is much less likely to
    be preferred.
    
    This causes phylink problems - it means a fixed link specifying a
    speed of 1G and full duplex gets an ethtool linkmode of 1000baseKX/Full
    rather than 1000baseT/Full as would be expected - and since we offer
    userspace a software emulation of a conventional copper PHY, we want
    to offer copper modes in preference to anything else. However, we do
    still want to allow the rarer modes as well.
    
    Hence, let's reorder these two modes to prefer copper.
    
    Tested-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reported-by: Florian Fainelli <f.fainelli@gmail.com>
    Link: https://lore.kernel.org/r/E1muvFO-00F6jY-1K@rmk-PC.armlinux.org.uk
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 443133330a5d4a3fd429179d460cc297724fefe8
Author: Antoine Tenart <atenart@kernel.org>
Date:   Tue Dec 7 15:57:24 2021 +0100

    net-sysfs: update the queue counts in the unregistration path
    
    [ Upstream commit d7dac083414eb5bb99a6d2ed53dc2c1b405224e5 ]
    
    When updating Rx and Tx queue kobjects, the queue count should always be
    updated to match the queue kobjects count. This was not done in the net
    device unregistration path, fix it. Tracking all queue count updates
    will allow in a following up patch to detect illegal updates.
    
    Signed-off-by: Antoine Tenart <atenart@kernel.org>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58b4c1ce8328b61b2675c2a966f7e8f5f4748289
Author: Sebastian Gottschall <s.gottschall@dd-wrt.com>
Date:   Wed May 5 15:58:06 2021 +0700

    ath10k: Fix tx hanging
    
    [ Upstream commit e8a91863eba3966a447d2daa1526082d52b5db2a ]
    
    While running stress tests in roaming scenarios (switching ap's every 5
    seconds, we discovered a issue which leads to tx hangings of exactly 5
    seconds while or after scanning for new accesspoints. We found out that
    this hanging is triggered by ath10k_mac_wait_tx_complete since the
    empty_tx_wq was not wake when the num_tx_pending counter reaches zero.
    To fix this, we simply move the wake_up call to htt_tx_dec_pending,
    since this call was missed on several locations within the ath10k code.
    
    Signed-off-by: Sebastian Gottschall <s.gottschall@dd-wrt.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20210505085806.11474-1-s.gottschall@dd-wrt.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcba0bce3357114c583b959d4eccf97654569612
Author: Wen Gong <quic_wgong@quicinc.com>
Date:   Tue Dec 7 17:23:36 2021 +0200

    ath11k: avoid deadlock by change ieee80211_queue_work for regd_update_work
    
    [ Upstream commit ed05c7cf1286d7e31e7623bce55ff135723591bf ]
    
    When enable debug config, it print below warning while shut down wlan
    interface shuh as run "ifconfig wlan0 down".
    
    The reason is because ar->regd_update_work is ran once, and it is will
    call wiphy_lock(ar->hw->wiphy) in function ath11k_regd_update() which
    is running in workqueue of ieee80211_local queued by ieee80211_queue_work().
    Another thread from "ifconfig wlan0 down" will also accuqire the lock
    by wiphy_lock(sdata->local->hw.wiphy) in function ieee80211_stop(), and
    then it call ieee80211_stop_device() to flush_workqueue(local->workqueue),
    this will wait the workqueue of ieee80211_local finished. Then deadlock
    will happen easily if the two thread run meanwhile.
    
    Below warning disappeared after this change.
    
    [  914.088798] ath11k_pci 0000:05:00.0: mac remove interface (vdev 0)
    [  914.088806] ath11k_pci 0000:05:00.0: mac stop 11d scan
    [  914.088810] ath11k_pci 0000:05:00.0: mac stop 11d vdev id 0
    [  914.088827] ath11k_pci 0000:05:00.0: htc ep 2 consumed 1 credits (total 0)
    [  914.088841] ath11k_pci 0000:05:00.0: send 11d scan stop vdev id 0
    [  914.088849] ath11k_pci 0000:05:00.0: htc insufficient credits ep 2 required 1 available 0
    [  914.088856] ath11k_pci 0000:05:00.0: htc insufficient credits ep 2 required 1 available 0
    [  914.096434] ath11k_pci 0000:05:00.0: rx ce pipe 2 len 16
    [  914.096442] ath11k_pci 0000:05:00.0: htc ep 2 got 1 credits (total 1)
    [  914.096481] ath11k_pci 0000:05:00.0: htc ep 2 consumed 1 credits (total 0)
    [  914.096491] ath11k_pci 0000:05:00.0: WMI vdev delete id 0
    [  914.111598] ath11k_pci 0000:05:00.0: rx ce pipe 2 len 16
    [  914.111628] ath11k_pci 0000:05:00.0: htc ep 2 got 1 credits (total 1)
    [  914.114659] ath11k_pci 0000:05:00.0: rx ce pipe 2 len 20
    [  914.114742] ath11k_pci 0000:05:00.0: htc rx completion ep 2 skb         pK-error
    [  914.115977] ath11k_pci 0000:05:00.0: vdev delete resp for vdev id 0
    [  914.116685] ath11k_pci 0000:05:00.0: vdev 00:03:7f:29:61:11 deleted, vdev_id 0
    
    [  914.117583] ======================================================
    [  914.117592] WARNING: possible circular locking dependency detected
    [  914.117600] 5.16.0-rc1-wt-ath+ #1 Tainted: G           OE
    [  914.117611] ------------------------------------------------------
    [  914.117618] ifconfig/2805 is trying to acquire lock:
    [  914.117628] ffff9c00a62bb548 ((wq_completion)phy0){+.+.}-{0:0}, at: flush_workqueue+0x87/0x470
    [  914.117674]
                   but task is already holding lock:
    [  914.117682] ffff9c00baea07d0 (&rdev->wiphy.mtx){+.+.}-{4:4}, at: ieee80211_stop+0x38/0x180 [mac80211]
    [  914.117872]
                   which lock already depends on the new lock.
    
    [  914.117880]
                   the existing dependency chain (in reverse order) is:
    [  914.117888]
                   -> #3 (&rdev->wiphy.mtx){+.+.}-{4:4}:
    [  914.117910]        __mutex_lock+0xa0/0x9c0
    [  914.117930]        mutex_lock_nested+0x1b/0x20
    [  914.117944]        reg_process_self_managed_hints+0x3a/0xb0 [cfg80211]
    [  914.118093]        wiphy_regulatory_register+0x47/0x80 [cfg80211]
    [  914.118229]        wiphy_register+0x84f/0x9c0 [cfg80211]
    [  914.118353]        ieee80211_register_hw+0x6b1/0xd90 [mac80211]
    [  914.118486]        ath11k_mac_register+0x6af/0xb60 [ath11k]
    [  914.118550]        ath11k_core_qmi_firmware_ready+0x383/0x4a0 [ath11k]
    [  914.118598]        ath11k_qmi_driver_event_work+0x347/0x4a0 [ath11k]
    [  914.118656]        process_one_work+0x228/0x670
    [  914.118669]        worker_thread+0x4d/0x440
    [  914.118680]        kthread+0x16d/0x1b0
    [  914.118697]        ret_from_fork+0x22/0x30
    [  914.118714]
                   -> #2 (rtnl_mutex){+.+.}-{4:4}:
    [  914.118736]        __mutex_lock+0xa0/0x9c0
    [  914.118751]        mutex_lock_nested+0x1b/0x20
    [  914.118767]        rtnl_lock+0x17/0x20
    [  914.118783]        ath11k_regd_update+0x15a/0x260 [ath11k]
    [  914.118841]        ath11k_regd_update_work+0x15/0x20 [ath11k]
    [  914.118897]        process_one_work+0x228/0x670
    [  914.118909]        worker_thread+0x4d/0x440
    [  914.118920]        kthread+0x16d/0x1b0
    [  914.118934]        ret_from_fork+0x22/0x30
    [  914.118948]
                   -> #1 ((work_completion)(&ar->regd_update_work)){+.+.}-{0:0}:
    [  914.118972]        process_one_work+0x1fa/0x670
    [  914.118984]        worker_thread+0x4d/0x440
    [  914.118996]        kthread+0x16d/0x1b0
    [  914.119010]        ret_from_fork+0x22/0x30
    [  914.119023]
                   -> #0 ((wq_completion)phy0){+.+.}-{0:0}:
    [  914.119045]        __lock_acquire+0x146d/0x1cf0
    [  914.119057]        lock_acquire+0x19b/0x360
    [  914.119067]        flush_workqueue+0xae/0x470
    [  914.119084]        ieee80211_stop_device+0x3b/0x50 [mac80211]
    [  914.119260]        ieee80211_do_stop+0x5d7/0x830 [mac80211]
    [  914.119409]        ieee80211_stop+0x45/0x180 [mac80211]
    [  914.119557]        __dev_close_many+0xb3/0x120
    [  914.119573]        __dev_change_flags+0xc3/0x1d0
    [  914.119590]        dev_change_flags+0x29/0x70
    [  914.119605]        devinet_ioctl+0x653/0x810
    [  914.119620]        inet_ioctl+0x193/0x1e0
    [  914.119631]        sock_do_ioctl+0x4d/0xf0
    [  914.119649]        sock_ioctl+0x262/0x340
    [  914.119665]        __x64_sys_ioctl+0x96/0xd0
    [  914.119678]        do_syscall_64+0x3d/0xd0
    [  914.119694]        entry_SYSCALL_64_after_hwframe+0x44/0xae
    [  914.119709]
                   other info that might help us debug this:
    
    [  914.119717] Chain exists of:
                     (wq_completion)phy0 --> rtnl_mutex --> &rdev->wiphy.mtx
    
    [  914.119745]  Possible unsafe locking scenario:
    
    [  914.119752]        CPU0                    CPU1
    [  914.119758]        ----                    ----
    [  914.119765]   lock(&rdev->wiphy.mtx);
    [  914.119778]                                lock(rtnl_mutex);
    [  914.119792]                                lock(&rdev->wiphy.mtx);
    [  914.119807]   lock((wq_completion)phy0);
    [  914.119819]
                    *** DEADLOCK ***
    
    [  914.119827] 2 locks held by ifconfig/2805:
    [  914.119837]  #0: ffffffffba3dc010 (rtnl_mutex){+.+.}-{4:4}, at: rtnl_lock+0x17/0x20
    [  914.119872]  #1: ffff9c00baea07d0 (&rdev->wiphy.mtx){+.+.}-{4:4}, at: ieee80211_stop+0x38/0x180 [mac80211]
    [  914.120039]
                   stack backtrace:
    [  914.120048] CPU: 0 PID: 2805 Comm: ifconfig Tainted: G           OE     5.16.0-rc1-wt-ath+ #1
    [  914.120064] Hardware name: LENOVO 418065C/418065C, BIOS 83ET63WW (1.33 ) 07/29/2011
    [  914.120074] Call Trace:
    [  914.120084]  <TASK>
    [  914.120094]  dump_stack_lvl+0x73/0xa4
    [  914.120119]  dump_stack+0x10/0x12
    [  914.120135]  print_circular_bug.isra.44+0x221/0x2e0
    [  914.120165]  check_noncircular+0x106/0x150
    [  914.120203]  __lock_acquire+0x146d/0x1cf0
    [  914.120215]  ? __lock_acquire+0x146d/0x1cf0
    [  914.120245]  lock_acquire+0x19b/0x360
    [  914.120259]  ? flush_workqueue+0x87/0x470
    [  914.120286]  ? lockdep_init_map_type+0x6b/0x250
    [  914.120310]  flush_workqueue+0xae/0x470
    [  914.120327]  ? flush_workqueue+0x87/0x470
    [  914.120344]  ? lockdep_hardirqs_on+0xd7/0x150
    [  914.120391]  ieee80211_stop_device+0x3b/0x50 [mac80211]
    [  914.120565]  ? ieee80211_stop_device+0x3b/0x50 [mac80211]
    [  914.120736]  ieee80211_do_stop+0x5d7/0x830 [mac80211]
    [  914.120906]  ieee80211_stop+0x45/0x180 [mac80211]
    [  914.121060]  __dev_close_many+0xb3/0x120
    [  914.121081]  __dev_change_flags+0xc3/0x1d0
    [  914.121109]  dev_change_flags+0x29/0x70
    [  914.121131]  devinet_ioctl+0x653/0x810
    [  914.121149]  ? __might_fault+0x77/0x80
    [  914.121179]  inet_ioctl+0x193/0x1e0
    [  914.121194]  ? inet_ioctl+0x193/0x1e0
    [  914.121218]  ? __might_fault+0x77/0x80
    [  914.121238]  ? _copy_to_user+0x68/0x80
    [  914.121266]  sock_do_ioctl+0x4d/0xf0
    [  914.121283]  ? inet_stream_connect+0x60/0x60
    [  914.121297]  ? sock_do_ioctl+0x4d/0xf0
    [  914.121329]  sock_ioctl+0x262/0x340
    [  914.121347]  ? sock_ioctl+0x262/0x340
    [  914.121362]  ? exit_to_user_mode_prepare+0x13b/0x280
    [  914.121388]  ? syscall_enter_from_user_mode+0x20/0x50
    [  914.121416]  __x64_sys_ioctl+0x96/0xd0
    [  914.121430]  ? br_ioctl_call+0x90/0x90
    [  914.121445]  ? __x64_sys_ioctl+0x96/0xd0
    [  914.121465]  do_syscall_64+0x3d/0xd0
    [  914.121482]  entry_SYSCALL_64_after_hwframe+0x44/0xae
    [  914.121497] RIP: 0033:0x7f0ed051737b
    [  914.121513] Code: 0f 1e fa 48 8b 05 15 3b 0d 00 64 c7 00 26 00 00 00 48 c7 c0 ff ff ff ff c3 66 0f 1f 44 00 00 f3 0f 1e fa b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d e5 3a 0d 00 f7 d8 64 89 01 48
    [  914.121527] RSP: 002b:00007fff7be38b98 EFLAGS: 00000202 ORIG_RAX: 0000000000000010
    [  914.121544] RAX: ffffffffffffffda RBX: 00007fff7be38ba0 RCX: 00007f0ed051737b
    [  914.121555] RDX: 00007fff7be38ba0 RSI: 0000000000008914 RDI: 0000000000000004
    [  914.121566] RBP: 00007fff7be38c60 R08: 000000000000000a R09: 0000000000000001
    [  914.121576] R10: 0000000000000000 R11: 0000000000000202 R12: 00000000fffffffe
    [  914.121586] R13: 0000000000000004 R14: 0000000000000000 R15: 0000000000000000
    [  914.121620]  </TASK>
    
    Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-01720.1-QCAHSPSWPL_V1_V2_SILICONZ_LITE-1
    
    Signed-off-by: Wen Gong <quic_wgong@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20211201071745.17746-2-quic_wgong@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93a108d466f87056d85780b9e2a9a7c457c6ffe3
Author: Shaul Triebitz <shaul.triebitz@intel.com>
Date:   Sat Dec 4 13:10:47 2021 +0200

    iwlwifi: mvm: avoid clearing a just saved session protection id
    
    [ Upstream commit 8e967c137df3b236d2075f9538cb888129425d1a ]
    
    When scheduling a session protection the id is saved but
    then it may be cleared when calling iwl_mvm_te_clear_data
    (if a previous session protection is currently active).
    Fix it by saving the id after calling iwl_mvm_te_clear_data.
    
    Signed-off-by: Shaul Triebitz <shaul.triebitz@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20211204130722.b0743a588d14.I098fef6677d0dab3ef1b6183ed206a10bab01eb2@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec01e0fe21848b094f758c48a673e659681135f3
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sat Dec 4 08:35:45 2021 +0200

    iwlwifi: mvm: synchronize with FW after multicast commands
    
    [ Upstream commit db66abeea3aefed481391ecc564fb7b7fb31d742 ]
    
    If userspace installs a lot of multicast groups very quickly, then
    we may run out of command queue space as we send the updates in an
    asynchronous fashion (due to locking concerns), and the CPU can
    create them faster than the firmware can process them. This is true
    even when mac80211 has a work struct that gets scheduled.
    
    Fix this by synchronizing with the firmware after sending all those
    commands - outside of the iteration we can send a synchronous echo
    command that just has the effect of the CPU waiting for the prior
    asynchronous commands to finish. This also will cause fewer of the
    commands to be sent to the firmware overall, because the work will
    only run once when rescheduled multiple times while it's running.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=213649
    Suggested-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Reported-by: Maximilian Ernestus <maximilian@ernestus.de>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20211204083238.51aea5b79ea4.I88a44798efda16e9fe480fb3e94224931d311b29@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1976a42480708052739ee56bd8384df0f86c846
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Sun Nov 14 16:07:11 2021 +0200

    thunderbolt: Runtime PM activate both ends of the device link
    
    [ Upstream commit f3380cac0c0b3a6f49ab161e2a057c363962f48d ]
    
    If protocol tunnels are already up when the driver is loaded, for
    instance if the boot firmware implements connection manager of its own,
    runtime PM reference count of the consumer devices behind the tunnel
    might have been increased already before the device link is created but
    the supplier device runtime PM reference count is not. This leads to a
    situation where the supplier (the Thunderbolt driver) can runtime
    suspend even if it should not because the corresponding protocol tunnel
    needs to be up causing the devices to be removed from the corresponding
    native bus.
    
    Prevent this from happening by making both sides of the link runtime PM
    active briefly. The pm_runtime_put() for the consumer (PCIe
    root/downstream port, xHCI) then allows it to runtime suspend again but
    keeps the supplier runtime resumed the whole time it is runtime active.
    
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 830e5d1b4344c2575020ee4bdf63fb48e2b56ce3
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Date:   Mon Dec 6 15:34:19 2021 +0100

    media: m920x: don't use stack on USB reads
    
    [ Upstream commit a2ab06d7c4d6bfd0b545a768247a70463e977e27 ]
    
    Using stack-allocated pointers for USB message data don't work.
    This driver is almost OK with that, except for the I2C read
    logic.
    
    Fix it by using a temporary read buffer, just like on all other
    calls to m920x_read().
    
    Link: https://lore.kernel.org/all/ccc99e48-de4f-045e-0fe4-61e3118e3f74@mida.se/
    Reported-by: rkardell@mida.se
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c33f0f22bfea375bf96d0b43a3242fa8a31f10c6
Author: Zhou Qingyang <zhou1615@umn.edu>
Date:   Tue Nov 30 17:25:49 2021 +0100

    media: saa7146: hexium_orion: Fix a NULL pointer dereference in hexium_attach()
    
    [ Upstream commit 348df8035301dd212e3cc2860efe4c86cb0d3303 ]
    
    In hexium_attach(dev, info), saa7146_vv_init() is called to allocate
    a new memory for dev->vv_data. In hexium_detach(), saa7146_vv_release()
    will be called and there is a dereference of dev->vv_data in
    saa7146_vv_release(), which could lead to a NULL pointer dereference
    on failure of saa7146_vv_init() according to the following logic.
    
    Both hexium_attach() and hexium_detach() are callback functions of
    the variable 'extension', so there exists a possible call chain directly
    from hexium_attach() to hexium_detach():
    
    hexium_attach(dev, info) -- fail to alloc memory to dev->vv_data
            |                               in saa7146_vv_init().
            |
            |
    hexium_detach() -- a dereference of dev->vv_data in saa7146_vv_release()
    
    Fix this bug by adding a check of saa7146_vv_init().
    
    This bug was found by a static analyzer. The analysis employs
    differential checking to identify inconsistent security operations
    (e.g., checks or kfrees) between two code paths and confirms that the
    inconsistent operations are not recovered in the current function or
    the callers, so they constitute bugs.
    
    Note that, as a bug found by static analysis, it can be a false
    positive or hard to trigger. Multiple researchers have cross-reviewed
    the bug.
    
    Builds with CONFIG_VIDEO_HEXIUM_ORION=m show no new warnings,
    and our static analyzer no longer warns about this code.
    
    Signed-off-by: Zhou Qingyang <zhou1615@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 526b6c9b4521910d7af797a6badaceabcff8d21b
Author: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
Date:   Fri Nov 26 00:02:57 2021 +0100

    media: rcar-vin: Update format alignment constraints
    
    [ Upstream commit da6911f330d40cfe115a37249e47643eff555e82 ]
    
    This change fixes two issues with the size constraints for buffers.
    
    - There is no width alignment constraint for RGB formats. Prior to this
      change they were treated as YUV and as a result were more restricted
      than needed. Add a new check to differentiate between the two.
    
    - The minimum width and height supported is 5x2, not 2x4, this is an
      artifact from the driver's soc-camera days. Fix this incorrect
      assumption.
    
    Signed-off-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74e60c1dce0664cfc8fcb8ed0f453745721dc247
Author: James Hilliard <james.hilliard1@gmail.com>
Date:   Sun Nov 14 09:52:36 2021 +0100

    media: uvcvideo: Increase UVC_CTRL_CONTROL_TIMEOUT to 5 seconds.
    
    [ Upstream commit c8ed7d2f614cd8b315981d116c7a2fb01829500d ]
    
    Some uvc devices appear to require the maximum allowed USB timeout
    for GET_CUR/SET_CUR requests.
    
    So lets just bump the UVC control timeout to 5 seconds which is the
    same as the usb ctrl get/set defaults:
    USB_CTRL_GET_TIMEOUT 5000
    USB_CTRL_SET_TIMEOUT 5000
    
    It fixes the following runtime warnings:
       Failed to query (GET_CUR) UVC control 11 on unit 2: -110 (exp. 1).
       Failed to query (SET_CUR) UVC control 3 on unit 2: -110 (exp. 2).
    
    Signed-off-by: James Hilliard <james.hilliard1@gmail.com>
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0e3ab637de1e8940a8940432c9de11e0fcc7b0a
Author: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
Date:   Mon Nov 29 03:10:46 2021 +0200

    drm: rcar-du: Fix CRTC timings when CMM is used
    
    [ Upstream commit f0ce591dc9a97067c6e783a2eaccd22c5476144d ]
    
    When the CMM is enabled, an offset of 25 pixels must be subtracted from
    the HDS (horizontal display start) and HDE (horizontal display end)
    registers. Fix the timings calculation, and take this into account in
    the mode validation.
    
    This fixes a visible horizontal offset in the image with VGA monitors.
    HDMI monitors seem to be generally more tolerant to incorrect timings,
    but may be affected too.
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e61aa46d0f27bd460080ccd244296d1944b9813e
Author: Joerg Roedel <jroedel@suse.de>
Date:   Thu Dec 2 16:32:25 2021 +0100

    x86/mm: Flush global TLB when switching to trampoline page-table
    
    [ Upstream commit 71d5049b053876afbde6c3273250b76935494ab2 ]
    
    Move the switching code into a function so that it can be re-used and
    add a global TLB flush. This makes sure that usage of memory which is
    not mapped in the trampoline page-table is reliably caught.
    
    Also move the clearing of CR4.PCIDE before the CR3 switch because the
    cr4_clear_bits() function will access data not mapped into the
    trampoline page-table.
    
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lore.kernel.org/r/20211202153226.22946-4-joro@8bytes.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0946fdd9290ac05256d9884773335167cd20abf0
Author: Xiongwei Song <sxwjean@gmail.com>
Date:   Tue Nov 16 21:10:33 2021 +0800

    floppy: Add max size check for user space request
    
    [ Upstream commit 545a32498c536ee152331cd2e7d2416aa0f20e01 ]
    
    We need to check the max request size that is from user space before
    allocating pages. If the request size exceeds the limit, return -EINVAL.
    This check can avoid the warning below from page allocator.
    
    WARNING: CPU: 3 PID: 16525 at mm/page_alloc.c:5344 current_gfp_context include/linux/sched/mm.h:195 [inline]
    WARNING: CPU: 3 PID: 16525 at mm/page_alloc.c:5344 __alloc_pages+0x45d/0x500 mm/page_alloc.c:5356
    Modules linked in:
    CPU: 3 PID: 16525 Comm: syz-executor.3 Not tainted 5.15.0-syzkaller #0
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.14.0-2 04/01/2014
    RIP: 0010:__alloc_pages+0x45d/0x500 mm/page_alloc.c:5344
    Code: be c9 00 00 00 48 c7 c7 20 4a 97 89 c6 05 62 32 a7 0b 01 e8 74 9a 42 07 e9 6a ff ff ff 0f 0b e9 a0 fd ff ff 40 80 e5 3f eb 88 <0f> 0b e9 18 ff ff ff 4c 89 ef 44 89 e6 45 31 ed e8 1e 76 ff ff e9
    RSP: 0018:ffffc90023b87850 EFLAGS: 00010246
    RAX: 0000000000000000 RBX: 1ffff92004770f0b RCX: dffffc0000000000
    RDX: 0000000000000000 RSI: 0000000000000033 RDI: 0000000000010cc1
    RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000001
    R10: ffffffff81bb4686 R11: 0000000000000001 R12: ffffffff902c1960
    R13: 0000000000000033 R14: 0000000000000000 R15: ffff88804cf64a30
    FS:  0000000000000000(0000) GS:ffff88802cd00000(0063) knlGS:00000000f44b4b40
    CS:  0010 DS: 002b ES: 002b CR0: 0000000080050033
    CR2: 000000002c921000 CR3: 000000004f507000 CR4: 0000000000150ee0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <TASK>
     alloc_pages+0x1a7/0x300 mm/mempolicy.c:2191
     __get_free_pages+0x8/0x40 mm/page_alloc.c:5418
     raw_cmd_copyin drivers/block/floppy.c:3113 [inline]
     raw_cmd_ioctl drivers/block/floppy.c:3160 [inline]
     fd_locked_ioctl+0x12e5/0x2820 drivers/block/floppy.c:3528
     fd_ioctl drivers/block/floppy.c:3555 [inline]
     fd_compat_ioctl+0x891/0x1b60 drivers/block/floppy.c:3869
     compat_blkdev_ioctl+0x3b8/0x810 block/ioctl.c:662
     __do_compat_sys_ioctl+0x1c7/0x290 fs/ioctl.c:972
     do_syscall_32_irqs_on arch/x86/entry/common.c:112 [inline]
     __do_fast_syscall_32+0x65/0xf0 arch/x86/entry/common.c:178
     do_fast_syscall_32+0x2f/0x70 arch/x86/entry/common.c:203
     entry_SYSENTER_compat_after_hwframe+0x4d/0x5c
    
    Reported-by: syzbot+23a02c7df2cf2bc93fa2@syzkaller.appspotmail.com
    Link: https://lore.kernel.org/r/20211116131033.27685-1-sxwjean@me.com
    Signed-off-by: Xiongwei Song <sxwjean@gmail.com>
    Signed-off-by: Denis Efremov <efremov@linux.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 409d45bcd3812a2da1ea2e57a1e4f68501d11d64
Author: Neal Liu <neal_liu@aspeedtech.com>
Date:   Fri Nov 26 18:00:21 2021 +0800

    usb: uhci: add aspeed ast2600 uhci support
    
    [ Upstream commit 554abfe2eadec97d12c71d4a69da1518478f69eb ]
    
    Enable ast2600 uhci quirks.
    
    Signed-off-by: Neal Liu <neal_liu@aspeedtech.com>
    Link: https://lore.kernel.org/r/20211126100021.2331024-1-neal_liu@aspeedtech.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0aec428c07224b126a63ecd0734a9a8ebc9e9e7
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Fri Nov 26 14:15:54 2021 +0530

    arm64: dts: ti: j7200-main: Fix 'dtbs_check' serdes_ln_ctrl node
    
    [ Upstream commit 4d3984906397581dc0ccb6a02bf16b6ff82c9192 ]
    
    Fix 'dtbs_check' in serdes_ln_ctrl (serdes-ln-ctrl@4080) node by
    changing the node name to mux-controller@4080.
    
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Reviewed-by: Aswath Govindraju <a-govindraju@ti.com>
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Link: https://lore.kernel.org/r/20211126084555.17797-2-kishon@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcb45ac39f908c1246a014d9a693806ae9dfc3aa
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 22 18:05:33 2021 +0100

    ACPI / x86: Add not-present quirk for the PCI0.SDHB.BRC1 device on the GPD win
    
    [ Upstream commit 57d2dbf710d832841872fb15ebb79429cab90fae ]
    
    The GPD win and its sibling the GPD pocket (99% the same electronics in a
    different case) use a PCI wifi card. But the ACPI tables on both variants
    contain a bug where the SDIO MMC controller for SDIO wifi cards is enabled
    despite this. This SDIO MMC controller has a PCI0.SDHB.BRC1 child-device
    which _PS3 method sets a GPIO causing the PCI wifi card to turn off.
    
    At the moment there is a pretty ugly kludge in the sdhci-acpi.c code,
    just to work around the bug in the DSDT of this single design. This can
    be solved cleaner/simply with a quirk overriding the _STA return of the
    broken PCI0.SDHB.BRC1 PCI0.SDHB.BRC1 child with a status value of 0,
    so that its power_manageable flag gets cleared, avoiding this problem.
    
    Note that even though it is not used, the _STA method for the MMC
    controller is deliberately not overridden. If the status of the MMC
    controller were forced to 0 it would never get suspended, which would
    cause these mini-laptops to not reach S0i3 level when suspended.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8b2e74a8751c79c39722bd9aba4ca8159381d98
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 22 18:05:32 2021 +0100

    ACPI / x86: Allow specifying acpi_device_override_status() quirks by path
    
    [ Upstream commit ba46e42e925b5d09b4e441f8de3db119cc7df58f ]
    
    Not all ACPI-devices have a HID + UID, allow specifying quirks for
    acpi_device_override_status() by path too.
    
    Note this moves the path/HID+UID check to after the CPU + DMI checks
    since the path lookup is somewhat costly.
    
    This way this lookup is only done on devices where the other checks
    match.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cda755506df4c73b23c2f37943350a435bf52f44
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 22 18:05:31 2021 +0100

    ACPI: Change acpi_device_always_present() into acpi_device_override_status()
    
    [ Upstream commit 1a68b346a2c9969c05e80a3b99a9ab160b5655c0 ]
    
    Currently, acpi_bus_get_status() calls acpi_device_always_present() to
    allow platform quirks to override the _STA return to report that a
    device is present (status = ACPI_STA_DEFAULT) independent of the _STA
    return.
    
    In some cases it might also be useful to have the opposite functionality
    and have a platform quirk which marks a device as not present (status = 0)
    to work around ACPI table bugs.
    
    Change acpi_device_always_present() into a more generic
    acpi_device_override_status() function to allow this.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b029625063c16d468c35fa69f59e898f81741aa3
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Nov 22 18:05:30 2021 +0100

    ACPI / x86: Drop PWM2 device on Lenovo Yoga Book from always present table
    
    [ Upstream commit d431dfb764b145369be820fcdfd50f2159b9bbc2 ]
    
    It turns out that there is a WMI object which controls the PWM2 device
    used for the keyboard backlight and that WMI object also provides some
    other useful functionality.
    
    The upcoming lenovo-yogabook-wmi driver will offer both backlight
    control and the other functionality, so there no longer is a need
    to have the lpss-pwm driver binding to PWM2 for backlight control;
    and this is now actually undesirable because this will cause both
    the WMI code and the lpss-pwm driver to poke at the same PWM
    controller.
    
    Drop the always-present quirk for the PWM2 ACPI-device, so that the
     lpss-pwm controller will no longer bind to it.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf3b1a160dc2bc8bb3cb4b61dd5a6538c7eb19f9
Author: Mansur Alisha Shaik <mansur@codeaurora.org>
Date:   Mon Nov 8 06:48:51 2021 +0100

    media: venus: avoid calling core_clk_setrate() concurrently during concurrent video sessions
    
    [ Upstream commit 91f2b7d269e5c885c38c7ffa261f5276bd42f907 ]
    
    In existing implementation, core_clk_setrate() is getting called
    concurrently in concurrent video sessions. Before the previous call to
    core_clk_setrate returns, new call to core_clk_setrate is invoked from
    another video session running concurrently. This results in latest
    calculated frequency being set (higher/lower) instead of actual frequency
    required for that video session. It also results in stability crashes
    mention below. These resources are specific to video core, hence keeping
    under core lock would ensure that they are estimated for all running video
    sessions and called once for the video core.
    
    Crash logs:
    
    [    1.900089] WARNING: CPU: 4 PID: 1 at drivers/opp/debugfs.c:33 opp_debug_remove_one+0x2c/0x48
    [    1.908493] Modules linked in:
    [    1.911524] CPU: 4 PID: 1 Comm: swapper/0 Not tainted 5.10.67 #35 f8edb8c30cf2dd6838495dd9ef9be47af7f5f60c
    [    1.921036] Hardware name: Qualcomm Technologies, Inc. sc7280 IDP SKU2 platform (DT)
    [    1.928673] pstate: 60800009 (nZCv daif -PAN +UAO -TCO BTYPE=--)
    [    1.934608] pc : opp_debug_remove_one+0x2c/0x48
    [    1.939080] lr : opp_debug_remove_one+0x2c/0x48
    [    1.943560] sp : ffffffc011d7b7f0
    [    1.946836] pmr_save: 000000e0
    [    1.949854] x29: ffffffc011d7b7f0 x28: ffffffc010733bbc
    [    1.955104] x27: ffffffc010733ba8 x26: ffffff8083cedd00
    [    1.960355] x25: 0000000000000001 x24: 0000000000000000
    [    1.965603] x23: ffffff8083cc2878 x22: ffffff8083ceb900
    [    1.970852] x21: ffffff8083ceb910 x20: ffffff8083cc2800
    [    1.976101] x19: ffffff8083ceb900 x18: 00000000ffff0a10
    [    1.981352] x17: ffffff80837a5620 x16: 00000000000000ec
    [    1.986601] x15: ffffffc010519ad4 x14: 0000000000000003
    [    1.991849] x13: 0000000000000004 x12: 0000000000000001
    [    1.997100] x11: c0000000ffffdfff x10: 00000000ffffffff
    [    2.002348] x9 : d2627c580300dc00 x8 : d2627c580300dc00
    [    2.007596] x7 : 0720072007200720 x6 : ffffff80802ecf00
    [    2.012845] x5 : 0000000000190004 x4 : 0000000000000000
    [    2.018094] x3 : ffffffc011d7b478 x2 : ffffffc011d7b480
    [    2.023343] x1 : 00000000ffffdfff x0 : 0000000000000017
    [    2.028594] Call trace:
    [    2.031022]  opp_debug_remove_one+0x2c/0x48
    [    2.035160]  dev_pm_opp_put+0x94/0xb0
    [    2.038780]  _opp_remove_all+0x7c/0xc8
    [    2.042486]  _opp_remove_all_static+0x54/0x7c
    [    2.046796]  dev_pm_opp_remove_table+0x74/0x98
    [    2.051183]  devm_pm_opp_of_table_release+0x18/0x24
    [    2.056001]  devm_action_release+0x1c/0x28
    [    2.060053]  release_nodes+0x23c/0x2b8
    [    2.063760]  devres_release_group+0xcc/0xd0
    [    2.067900]  component_bind+0xac/0x168
    [    2.071608]  component_bind_all+0x98/0x124
    [    2.075664]  msm_drm_bind+0x1e8/0x678
    [    2.079287]  try_to_bring_up_master+0x60/0x134
    [    2.083674]  component_master_add_with_match+0xd8/0x120
    [    2.088834]  msm_pdev_probe+0x20c/0x2a0
    [    2.092629]  platform_drv_probe+0x9c/0xbc
    [    2.096598]  really_probe+0x11c/0x46c
    [    2.100217]  driver_probe_device+0x8c/0xf0
    [    2.104270]  device_driver_attach+0x54/0x78
    [    2.108407]  __driver_attach+0x48/0x148
    [    2.112201]  bus_for_each_dev+0x88/0xd4
    [    2.115998]  driver_attach+0x2c/0x38
    [    2.119534]  bus_add_driver+0x10c/0x200
    [    2.123330]  driver_register+0x6c/0x104
    [    2.127122]  __platform_driver_register+0x4c/0x58
    [    2.131767]  msm_drm_register+0x6c/0x70
    [    2.135560]  do_one_initcall+0x64/0x23c
    [    2.139357]  do_initcall_level+0xac/0x15c
    [    2.143321]  do_initcalls+0x5c/0x9c
    [    2.146778]  do_basic_setup+0x2c/0x38
    [    2.150401]  kernel_init_freeable+0xf8/0x15c
    [    2.154622]  kernel_init+0x1c/0x11c
    [    2.158079]  ret_from_fork+0x10/0x30
    [    2.161615] ---[ end trace a2cc45a0f784b212 ]---
    
    [    2.166272] Removing OPP: 300000000
    
    Signed-off-by: Mansur Alisha Shaik <mansur@codeaurora.org>
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adbe148672779c2164aaaf934df7b65769a09ed6
Author: Sriram R <quic_srirrama@quicinc.com>
Date:   Thu Nov 25 15:00:14 2021 +0530

    ath11k: Avoid NULL ptr access during mgmt tx cleanup
    
    [ Upstream commit a93789ae541c7d5c1c2a4942013adb6bcc5e2848 ]
    
    Currently 'ar' reference is not added in skb_cb during
    WMI mgmt tx. Though this is generally not used during tx completion
    callbacks, on interface removal the remaining idr cleanup callback
    uses the ar ptr from skb_cb from mgmt txmgmt_idr. Hence
    fill them during tx call for proper usage.
    
    Also free the skb which is missing currently in these
    callbacks.
    
    Crash_info:
    
    [19282.489476] Unable to handle kernel NULL pointer dereference at virtual address 00000000
    [19282.489515] pgd = 91eb8000
    [19282.496702] [00000000] *pgd=00000000
    [19282.502524] Internal error: Oops: 5 [#1] PREEMPT SMP ARM
    [19282.783728] PC is at ath11k_mac_vif_txmgmt_idr_remove+0x28/0xd8 [ath11k]
    [19282.789170] LR is at idr_for_each+0xa0/0xc8
    
    Tested-on: IPQ8074 hw2.0 AHB WLAN.HK.2.5.0.1-00729-QCAHKSWPL_SILICONZ-3 v2
    Signed-off-by: Sriram R <quic_srirrama@quicinc.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1637832614-13831-1-git-send-email-quic_srirrama@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab523ea096ef289da0f4431a4395f0ceb1e4ede9
Author: Zekun Shen <bruceshenzk@gmail.com>
Date:   Fri Oct 29 16:19:23 2021 -0400

    rsi: Fix out-of-bounds read in rsi_read_pkt()
    
    [ Upstream commit f1cb3476e48b60c450ec3a1d7da0805bffc6e43a ]
    
    rsi_get_* functions rely on an offset variable from usb
    input. The size of usb input is RSI_MAX_RX_USB_PKT_SIZE(3000),
    while 2-byte offset can be up to 0xFFFF. Thus a large offset
    can cause out-of-bounds read.
    
    The patch adds a bound checking condition when rcv_pkt_len is 0,
    indicating it's USB. It's unclear whether this is triggerable
    from other type of bus. The following check might help in that case.
    offset > rcv_pkt_len - FRAME_DESC_SZ
    
    The bug is trigerrable with conpromised/malfunctioning USB devices.
    I tested the patch with the crashing input and got no more bug report.
    
    Attached is the KASAN report from fuzzing.
    
    BUG: KASAN: slab-out-of-bounds in rsi_read_pkt+0x42e/0x500 [rsi_91x]
    Read of size 2 at addr ffff888019439fdb by task RX-Thread/227
    
    CPU: 0 PID: 227 Comm: RX-Thread Not tainted 5.6.0 #66
    Call Trace:
     dump_stack+0x76/0xa0
     print_address_description.constprop.0+0x16/0x200
     ? rsi_read_pkt+0x42e/0x500 [rsi_91x]
     ? rsi_read_pkt+0x42e/0x500 [rsi_91x]
     __kasan_report.cold+0x37/0x7c
     ? rsi_read_pkt+0x42e/0x500 [rsi_91x]
     kasan_report+0xe/0x20
     rsi_read_pkt+0x42e/0x500 [rsi_91x]
     rsi_usb_rx_thread+0x1b1/0x2fc [rsi_usb]
     ? rsi_probe+0x16a0/0x16a0 [rsi_usb]
     ? _raw_spin_lock_irqsave+0x7b/0xd0
     ? _raw_spin_trylock_bh+0x120/0x120
     ? __wake_up_common+0x10b/0x520
     ? rsi_probe+0x16a0/0x16a0 [rsi_usb]
     kthread+0x2b5/0x3b0
     ? kthread_create_on_node+0xd0/0xd0
     ret_from_fork+0x22/0x40
    
    Reported-by: Brendan Dolan-Gavitt <brendandg@nyu.edu>
    Signed-off-by: Zekun Shen <bruceshenzk@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/YXxXS4wgu2OsmlVv@10-18-43-117.dynapool.wireless.nyu.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75258767506829420ec00f7eec98239c4f9f5360
Author: Zekun Shen <bruceshenzk@gmail.com>
Date:   Fri Oct 29 15:49:03 2021 -0400

    rsi: Fix use-after-free in rsi_rx_done_handler()
    
    [ Upstream commit b07e3c6ebc0c20c772c0f54042e430acec2945c3 ]
    
    When freeing rx_cb->rx_skb, the pointer is not set to NULL,
    a later rsi_rx_done_handler call will try to read the freed
    address.
    This bug will very likley lead to double free, although
    detected early as use-after-free bug.
    
    The bug is triggerable with a compromised/malfunctional usb
    device. After applying the patch, the same input no longer
    triggers the use-after-free.
    
    Attached is the kasan report from fuzzing.
    
    BUG: KASAN: use-after-free in rsi_rx_done_handler+0x354/0x430 [rsi_usb]
    Read of size 4 at addr ffff8880188e5930 by task modprobe/231
    Call Trace:
     <IRQ>
     dump_stack+0x76/0xa0
     print_address_description.constprop.0+0x16/0x200
     ? rsi_rx_done_handler+0x354/0x430 [rsi_usb]
     ? rsi_rx_done_handler+0x354/0x430 [rsi_usb]
     __kasan_report.cold+0x37/0x7c
     ? dma_direct_unmap_page+0x90/0x110
     ? rsi_rx_done_handler+0x354/0x430 [rsi_usb]
     kasan_report+0xe/0x20
     rsi_rx_done_handler+0x354/0x430 [rsi_usb]
     __usb_hcd_giveback_urb+0x1e4/0x380
     usb_giveback_urb_bh+0x241/0x4f0
     ? __usb_hcd_giveback_urb+0x380/0x380
     ? apic_timer_interrupt+0xa/0x20
     tasklet_action_common.isra.0+0x135/0x330
     __do_softirq+0x18c/0x634
     ? handle_irq_event+0xcd/0x157
     ? handle_edge_irq+0x1eb/0x7b0
     irq_exit+0x114/0x140
     do_IRQ+0x91/0x1e0
     common_interrupt+0xf/0xf
     </IRQ>
    
    Reported-by: Brendan Dolan-Gavitt <brendandg@nyu.edu>
    Signed-off-by: Zekun Shen <bruceshenzk@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/YXxQL/vIiYcZUu/j@10-18-43-117.dynapool.wireless.nyu.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6036500fdf77caaca9333003f78d25a3d61c4e40
Author: Zekun Shen <bruceshenzk@gmail.com>
Date:   Sat Oct 30 22:42:50 2021 -0400

    mwifiex: Fix skb_over_panic in mwifiex_usb_recv()
    
    [ Upstream commit 04d80663f67ccef893061b49ec8a42ff7045ae84 ]
    
    Currently, with an unknown recv_type, mwifiex_usb_recv
    just return -1 without restoring the skb. Next time
    mwifiex_usb_rx_complete is invoked with the same skb,
    calling skb_put causes skb_over_panic.
    
    The bug is triggerable with a compromised/malfunctioning
    usb device. After applying the patch, skb_over_panic
    no longer shows up with the same input.
    
    Attached is the panic report from fuzzing.
    skbuff: skb_over_panic: text:000000003bf1b5fa
     len:2048 put:4 head:00000000dd6a115b data:000000000a9445d8
     tail:0x844 end:0x840 dev:<NULL>
    kernel BUG at net/core/skbuff.c:109!
    invalid opcode: 0000 [#1] SMP KASAN NOPTI
    CPU: 0 PID: 198 Comm: in:imklog Not tainted 5.6.0 #60
    RIP: 0010:skb_panic+0x15f/0x161
    Call Trace:
     <IRQ>
     ? mwifiex_usb_rx_complete+0x26b/0xfcd [mwifiex_usb]
     skb_put.cold+0x24/0x24
     mwifiex_usb_rx_complete+0x26b/0xfcd [mwifiex_usb]
     __usb_hcd_giveback_urb+0x1e4/0x380
     usb_giveback_urb_bh+0x241/0x4f0
     ? __hrtimer_run_queues+0x316/0x740
     ? __usb_hcd_giveback_urb+0x380/0x380
     tasklet_action_common.isra.0+0x135/0x330
     __do_softirq+0x18c/0x634
     irq_exit+0x114/0x140
     smp_apic_timer_interrupt+0xde/0x380
     apic_timer_interrupt+0xf/0x20
     </IRQ>
    
    Reported-by: Brendan Dolan-Gavitt <brendandg@nyu.edu>
    Signed-off-by: Zekun Shen <bruceshenzk@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/YX4CqjfRcTa6bVL+@Zekuns-MBP-16.fios-router.home
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a6371d84c5f80218ae35f31f26a5fb230ef4dba
Author: Stephan Müller <smueller@chronox.de>
Date:   Sun Nov 21 15:14:20 2021 +0100

    crypto: jitter - consider 32 LSB for APT
    
    [ Upstream commit 552d03a223eda3df84526ab2c1f4d82e15eaee7a ]
    
    The APT compares the current time stamp with a pre-set value. The
    current code only considered the 4 LSB only. Yet, after reviews by
    mathematicians of the user space Jitter RNG version >= 3.1.0, it was
    concluded that the APT can be calculated on the 32 LSB of the time
    delta. Thi change is applied to the kernel.
    
    This fixes a bug where an AMD EPYC fails this test as its RDTSC value
    contains zeros in the LSB. The most appropriate fix would have been to
    apply a GCD calculation and divide the time stamp by the GCD. Yet, this
    is a significant code change that will be considered for a future
    update. Note, tests showed that constantly the GCD always was 32 on
    these systems, i.e. the 5 LSB were always zero (thus failing the APT
    since it only considered the 4 LSB for its calculation).
    
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 240cf5d3cb5e4d3eb1b7abc83b54563fe992d306
Author: Chengfeng Ye <cyeaa@connect.ust.hk>
Date:   Fri Nov 5 06:45:07 2021 -0700

    HSI: core: Fix return freed object in hsi_new_client
    
    [ Upstream commit a1ee1c08fcd5af03187dcd41dcab12fd5b379555 ]
    
    cl is freed on error of calling device_register, but this
    object is return later, which will cause uaf issue. Fix it
    by return NULL on error.
    
    Signed-off-by: Chengfeng Ye <cyeaa@connect.ust.hk>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4295b7dca8751a4d150eadb95d33671818e37b4
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Nov 25 21:30:10 2021 +0100

    gpiolib: acpi: Do not set the IRQ type if the IRQ is already in use
    
    [ Upstream commit bdfd6ab8fdccd8b138837efff66f4a1911496378 ]
    
    If the IRQ is already in use, then acpi_dev_gpio_irq_get_by() really
    should not change the type underneath the current owner.
    
    I specifically hit an issue with this an a Chuwi Hi8 Super (CWI509) Bay
    Trail tablet, when the Boot OS selection in the BIOS is set to Android.
    In this case _STA for a MAX17047 ACPI I2C device wrongly returns 0xf and
    the _CRS resources for this device include a GpioInt pointing to a GPIO
    already in use by an _AEI handler, with a different type then specified
    in the _CRS for the MAX17047 device. Leading to the acpi_dev_gpio_irq_get()
    call done by the i2c-core-acpi.c code changing the type breaking the
    _AEI handler.
    
    Now this clearly is a bug in the DSDT of this tablet (in Android mode),
    but in general calling irq_set_irq_type() on an IRQ which already is
    in use seems like a bad idea.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0653cd4da669cbcddd81f8edd9f542805252691
Author: Fugang Duan <fugang.duan@nxp.com>
Date:   Thu Nov 25 10:03:49 2021 +0800

    tty: serial: imx: disable UCR4_OREN in .stop_rx() instead of .shutdown()
    
    [ Upstream commit 028e083832b06fdeeb290e1e57dc1f6702c4c215 ]
    
    The UCR4_OREN should be disabled before disabling the uart receiver in
    .stop_rx() instead of in the .shutdown().
    
    Otherwise, if we have the overrun error during the receiver disable
    process, the overrun interrupt will keep trigging until we disable the
    OREN interrupt in the .shutdown(), because the ORE status can only be
    cleared when read the rx FIFO or reset the controller.  Although the
    called time between the receiver disable and OREN disable in .shutdown()
    is very short, there is still the risk of endless interrupt during this
    short period of time. So here change to disable OREN before the receiver
    been disabled in .stop_rx().
    
    Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: Sherry Sun <sherry.sun@nxp.com>
    Link: https://lore.kernel.org/r/20211125020349.4980-1-sherry.sun@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b8d10f601f226f055df8b5368d7ea7f369136cd5
Author: Martyn Welch <martyn.welch@collabora.com>
Date:   Thu Nov 25 10:53:02 2021 +0000

    drm/bridge: megachips: Ensure both bridges are probed before registration
    
    [ Upstream commit 11632d4aa2b3f126790e81a4415d6c23103cf8bb ]
    
    In the configuration used by the b850v3, the STDP2690 is used to read EDID
    data whilst it's the STDP4028 which can detect when monitors are connected.
    
    This can result in problems at boot with monitors connected when the
    STDP4028 is probed first, a monitor is detected and an attempt is made to
    read the EDID data before the STDP2690 has probed:
    
    [    3.795721] Unable to handle kernel NULL pointer dereference at virtual address 00000018
    [    3.803845] pgd = (ptrval)
    [    3.806581] [00000018] *pgd=00000000
    [    3.810180] Internal error: Oops: 5 [#1] SMP ARM
    [    3.814813] Modules linked in:
    [    3.817879] CPU: 0 PID: 64 Comm: kworker/u4:1 Not tainted 5.15.0 #1
    [    3.824161] Hardware name: Freescale i.MX6 Quad/DualLite (Device Tree)
    [    3.830705] Workqueue: events_unbound deferred_probe_work_func
    [    3.836565] PC is at stdp2690_get_edid+0x44/0x19c
    [    3.841286] LR is at ge_b850v3_lvds_get_modes+0x2c/0x5c
    [    3.846526] pc : [<805eae10>]    lr : [<805eb138>]    psr: 80000013
    [    3.852802] sp : 81c359d0  ip : 7dbb550b  fp : 81c35a1c
    [    3.858037] r10: 81c73840  r9 : 81c73894  r8 : 816d9800
    [    3.863270] r7 : 00000000  r6 : 81c34000  r5 : 00000000  r4 : 810c35f0
    [    3.869808] r3 : 80e3e294  r2 : 00000080  r1 : 00000cc0  r0 : 81401180
    [    3.876349] Flags: Nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    [    3.883499] Control: 10c5387d  Table: 1000404a  DAC: 00000051
    [    3.889254] Register r0 information: slab kmem_cache start 81401180 pointer offset 0
    [    3.897034] Register r1 information: non-paged memory
    [    3.902097] Register r2 information: non-paged memory
    [    3.907160] Register r3 information: non-slab/vmalloc memory
    [    3.912832] Register r4 information: non-slab/vmalloc memory
    [    3.918503] Register r5 information: NULL pointer
    [    3.923217] Register r6 information: non-slab/vmalloc memory
    [    3.928887] Register r7 information: NULL pointer
    [    3.933601] Register r8 information: slab kmalloc-1k start 816d9800 pointer offset 0 size 1024
    [    3.942244] Register r9 information: slab kmalloc-2k start 81c73800 pointer offset 148 size 2048
    [    3.951058] Register r10 information: slab kmalloc-2k start 81c73800 pointer offset 64 size 2048
    [    3.959873] Register r11 information: non-slab/vmalloc memory
    [    3.965632] Register r12 information: non-paged memory
    [    3.970781] Process kworker/u4:1 (pid: 64, stack limit = 0x(ptrval))
    [    3.977148] Stack: (0x81c359d0 to 0x81c36000)
    [    3.981517] 59c0:                                     80b2b668 80b2b5bc 000002e2 0000034e
    [    3.989712] 59e0: 81c35a8c 816d98e8 81c35a14 7dbb550b 805bfcd0 810c35f0 81c73840 824addc0
    [    3.997906] 5a00: 00001000 816d9800 81c73894 81c73840 81c35a34 81c35a20 805eb138 805eadd8
    [    4.006099] 5a20: 810c35f0 00000045 81c35adc 81c35a38 80594188 805eb118 80d7c788 80dd1848
    [    4.014292] 5a40: 00000000 81c35a50 80dca950 811194d3 80dca7c4 80dca944 80dca91c 816d9800
    [    4.022485] 5a60: 81c34000 81c760a8 816d9800 80c58c98 810c35f0 816d98e8 00001000 00001000
    [    4.030678] 5a80: 00000000 00000000 8017712c 81c60000 00000002 00000001 00000000 00000000
    [    4.038870] 5aa0: 816d9900 816d9900 00000000 7dbb550b 805c700c 00000008 826282c8 826282c8
    [    4.047062] 5ac0: 00001000 81e1ce40 00001000 00000002 81c35bf4 81c35ae0 805d9694 80593fc0
    [    4.055255] 5ae0: 8017a970 80179ad8 00000179 00000000 81c35bcc 81c35b00 80177108 8017a950
    [    4.063447] 5b00: 00000000 81c35b10 81c34000 00000000 81004fd8 81010a38 00000000 00000059
    [    4.071639] 5b20: 816d98d4 81fbb718 00000013 826282c8 8017a940 81c35b40 81134448 00000400
    [    4.079831] 5b40: 00000178 00000000 e063b9c1 00000000 c2000049 00000040 00000000 00000008
    [    4.088024] 5b60: 82628300 82628380 00000000 00000000 81c34000 00000000 81fbb700 82628340
    [    4.096216] 5b80: 826283c0 00001000 00000000 00000010 816d9800 826282c0 801766f8 00000000
    [    4.104408] 5ba0: 00000000 81004fd8 00000049 00000000 00000000 00000001 80dcf940 80178de4
    [    4.112601] 5bc0: 81c35c0c 7dbb550b 80178de4 81fbb700 00000010 00000010 810c35f4 81e1ce40
    [    4.120793] 5be0: 81c40908 0000000c 81c35c64 81c35bf8 805a7f18 805d94a0 81c35c3c 816d9800
    [    4.128985] 5c00: 00000010 81c34000 81c35c2c 81c35c18 8012fce0 805be90c 81c35c3c 81c35c28
    [    4.137178] 5c20: 805be90c 80173210 81fbb600 81fbb6b4 81c35c5c 7dbb550b 81c35c64 81fbb700
    [    4.145370] 5c40: 816d9800 00000010 810c35f4 81e1ce40 81c40908 0000000c 81c35c84 81c35c68
    [    4.153565] 5c60: 805a8c78 805a7ed0 816d9800 81fbb700 00000010 00000000 81c35cac 81c35c88
    [    4.161758] 5c80: 805a8dc4 805a8b68 816d9800 00000000 816d9800 00000000 8179f810 810c42d0
    [    4.169950] 5ca0: 81c35ccc 81c35cb0 805e47b0 805a8d18 824aa240 81e1ea80 81c40908 81126b60
    [    4.178144] 5cc0: 81c35d14 81c35cd0 8060db1c 805e46cc 81c35d14 81c35ce0 80dd90f8 810c4d58
    [    4.186338] 5ce0: 80dd90dc 81fe9740 fffffffe 81fe9740 81e1ea80 00000000 810c4d6c 80c4b95c
    [    4.194531] 5d00: 80dd9a3c 815c6810 81c35d34 81c35d18 8060dc9c 8060d8fc 8246b440 815c6800
    [    4.202724] 5d20: 815c6810 eefd8e00 81c35d44 81c35d38 8060dd80 8060dbec 81c35d6c 81c35d48
    [    4.210918] 5d40: 805e98a4 8060dd70 00000000 815c6810 810c45b0 81126e90 81126e90 80dd9a3c
    [    4.219112] 5d60: 81c35d8c 81c35d70 80619574 805e9808 815c6810 00000000 810c45b0 81126e90
    [    4.227305] 5d80: 81c35db4 81c35d90 806168dc 80619514 80625df0 80623c80 815c6810 810c45b0
    [    4.235498] 5da0: 81c35e6c 815c6810 81c35dec 81c35db8 80616d04 80616800 81c35de4 81c35dc8
    [    4.243691] 5dc0: 808382b0 80b2f444 8116e310 8116e314 81c35e6c 815c6810 00000003 80dd9a3c
    [    4.251884] 5de0: 81c35e14 81c35df0 80616ec8 80616c60 00000001 810c45b0 81c35e6c 815c6810
    [    4.260076] 5e00: 00000001 80dd9a3c 81c35e34 81c35e18 80617338 80616e90 00000000 81c35e6c
    [    4.268269] 5e20: 80617284 81c34000 81c35e64 81c35e38 80614730 80617290 81c35e64 8171a06c
    [    4.276461] 5e40: 81e220b8 7dbb550b 815c6810 81c34000 815c6854 81126e90 81c35e9c 81c35e68
    [    4.284654] 5e60: 8061673c 806146a8 8060f5e0 815c6810 00000001 7dbb550b 00000000 810c5080
    [    4.292847] 5e80: 810c5320 815c6810 81126e90 00000000 81c35eac 81c35ea0 80617554 80616650
    [    4.301040] 5ea0: 81c35ecc 81c35eb0 80615694 80617544 810c5080 810c5080 810c5094 81126e90
    [    4.309233] 5ec0: 81c35efc 81c35ed0 80615c6c 8061560c 80615bc0 810c50c0 817eeb00 81412800
    [    4.317425] 5ee0: 814c3000 00000000 814c300d 81119a60 81c35f3c 81c35f00 80141488 80615bcc
    [    4.325618] 5f00: 81c60000 81c34000 81c35f24 81c35f18 80143078 817eeb00 81412800 817eeb18
    [    4.333811] 5f20: 81412818 81003d00 00000088 81412800 81c35f74 81c35f40 80141a48 80141298
    [    4.342005] 5f40: 81c35f74 81c34000 801481ac 817efa40 817efc00 801417d8 817eeb00 00000000
    [    4.350199] 5f60: 815a7e7c 81c34000 81c35fac 81c35f78 80149b1c 801417e4 817efc20 817efc20
    [    4.358391] 5f80: ffffe000 817efa40 801499a8 00000000 00000000 00000000 00000000 00000000
    [    4.366583] 5fa0: 00000000 81c35fb0 80100130 801499b4 00000000 00000000 00000000 00000000
    [    4.374774] 5fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [    4.382966] 5fe0: 00000000 00000000 00000000 00000000 00000013 00000000 00000000 00000000
    [    4.391155] Backtrace:
    [    4.393613] [<805eadcc>] (stdp2690_get_edid) from [<805eb138>] (ge_b850v3_lvds_get_modes+0x2c/0x5c)
    [    4.402691]  r10:81c73840 r9:81c73894 r8:816d9800 r7:00001000 r6:824addc0 r5:81c73840
    [    4.410534]  r4:810c35f0
    [    4.413073] [<805eb10c>] (ge_b850v3_lvds_get_modes) from [<80594188>] (drm_helper_probe_single_connector_modes+0x1d4/0x84c)
    [    4.424240]  r5:00000045 r4:810c35f0
    [    4.427822] [<80593fb4>] (drm_helper_probe_single_connector_modes) from [<805d9694>] (drm_client_modeset_probe+0x200/0x1384)
    [    4.439074]  r10:00000002 r9:00001000 r8:81e1ce40 r7:00001000 r6:826282c8 r5:826282c8
    [    4.446917]  r4:00000008
    [    4.449455] [<805d9494>] (drm_client_modeset_probe) from [<805a7f18>] (__drm_fb_helper_initial_config_and_unlock+0x54/0x5b4)
    [    4.460713]  r10:0000000c r9:81c40908 r8:81e1ce40 r7:810c35f4 r6:00000010 r5:00000010
    [    4.468556]  r4:81fbb700
    [    4.471095] [<805a7ec4>] (__drm_fb_helper_initial_config_and_unlock) from [<805a8c78>] (drm_fbdev_client_hotplug+0x11c/0x1b0)
    [    4.482434]  r10:0000000c r9:81c40908 r8:81e1ce40 r7:810c35f4 r6:00000010 r5:816d9800
    [    4.490276]  r4:81fbb700
    [    4.492814] [<805a8b5c>] (drm_fbdev_client_hotplug) from [<805a8dc4>] (drm_fbdev_generic_setup+0xb8/0x1a4)
    [    4.502494]  r7:00000000 r6:00000010 r5:81fbb700 r4:816d9800
    [    4.508160] [<805a8d0c>] (drm_fbdev_generic_setup) from [<805e47b0>] (imx_drm_bind+0xf0/0x130)
    [    4.516805]  r7:810c42d0 r6:8179f810 r5:00000000 r4:816d9800
    [    4.522474] [<805e46c0>] (imx_drm_bind) from [<8060db1c>] (try_to_bring_up_master+0x22c/0x2f0)
    [    4.531116]  r7:81126b60 r6:81c40908 r5:81e1ea80 r4:824aa240
    [    4.536783] [<8060d8f0>] (try_to_bring_up_master) from [<8060dc9c>] (__component_add+0xbc/0x184)
    [    4.545597]  r10:815c6810 r9:80dd9a3c r8:80c4b95c r7:810c4d6c r6:00000000 r5:81e1ea80
    [    4.553440]  r4:81fe9740
    [    4.555980] [<8060dbe0>] (__component_add) from [<8060dd80>] (component_add+0x1c/0x20)
    [    4.563921]  r7:eefd8e00 r6:815c6810 r5:815c6800 r4:8246b440
    [    4.569589] [<8060dd64>] (component_add) from [<805e98a4>] (dw_hdmi_imx_probe+0xa8/0xe8)
    [    4.577702] [<805e97fc>] (dw_hdmi_imx_probe) from [<80619574>] (platform_probe+0x6c/0xc8)
    [    4.585908]  r9:80dd9a3c r8:81126e90 r7:81126e90 r6:810c45b0 r5:815c6810 r4:00000000
    [    4.593662] [<80619508>] (platform_probe) from [<806168dc>] (really_probe+0xe8/0x460)
    [    4.601524]  r7:81126e90 r6:810c45b0 r5:00000000 r4:815c6810
    [    4.607191] [<806167f4>] (really_probe) from [<80616d04>] (__driver_probe_device+0xb0/0x230)
    [    4.615658]  r7:815c6810 r6:81c35e6c r5:810c45b0 r4:815c6810
    [    4.621326] [<80616c54>] (__driver_probe_device) from [<80616ec8>] (driver_probe_device+0x44/0xe0)
    [    4.630313]  r9:80dd9a3c r8:00000003 r7:815c6810 r6:81c35e6c r5:8116e314 r4:8116e310
    [    4.638068] [<80616e84>] (driver_probe_device) from [<80617338>] (__device_attach_driver+0xb4/0x12c)
    [    4.647227]  r9:80dd9a3c r8:00000001 r7:815c6810 r6:81c35e6c r5:810c45b0 r4:00000001
    [    4.654981] [<80617284>] (__device_attach_driver) from [<80614730>] (bus_for_each_drv+0x94/0xd8)
    [    4.663794]  r7:81c34000 r6:80617284 r5:81c35e6c r4:00000000
    [    4.669461] [<8061469c>] (bus_for_each_drv) from [<8061673c>] (__device_attach+0xf8/0x190)
    [    4.677753]  r7:81126e90 r6:815c6854 r5:81c34000 r4:815c6810
    [    4.683419] [<80616644>] (__device_attach) from [<80617554>] (device_initial_probe+0x1c/0x20)
    [    4.691971]  r8:00000000 r7:81126e90 r6:815c6810 r5:810c5320 r4:810c5080
    [    4.698681] [<80617538>] (device_initial_probe) from [<80615694>] (bus_probe_device+0x94/0x9c)
    [    4.707318] [<80615600>] (bus_probe_device) from [<80615c6c>] (deferred_probe_work_func+0xac/0xf0)
    [    4.716305]  r7:81126e90 r6:810c5094 r5:810c5080 r4:810c5080
    [    4.721973] [<80615bc0>] (deferred_probe_work_func) from [<80141488>] (process_one_work+0x1fc/0x54c)
    [    4.731139]  r10:81119a60 r9:814c300d r8:00000000 r7:814c3000 r6:81412800 r5:817eeb00
    [    4.738981]  r4:810c50c0 r3:80615bc0
    [    4.742563] [<8014128c>] (process_one_work) from [<80141a48>] (worker_thread+0x270/0x570)
    [    4.750765]  r10:81412800 r9:00000088 r8:81003d00 r7:81412818 r6:817eeb18 r5:81412800
    [    4.758608]  r4:817eeb00
    [    4.761147] [<801417d8>] (worker_thread) from [<80149b1c>] (kthread+0x174/0x190)
    [    4.768574]  r10:81c34000 r9:815a7e7c r8:00000000 r7:817eeb00 r6:801417d8 r5:817efc00
    [    4.776417]  r4:817efa40
    [    4.778955] [<801499a8>] (kthread) from [<80100130>] (ret_from_fork+0x14/0x24)
    [    4.786201] Exception stack(0x81c35fb0 to 0x81c35ff8)
    [    4.791266] 5fa0:                                     00000000 00000000 00000000 00000000
    [    4.799459] 5fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [    4.807651] 5fe0: 00000000 00000000 00000000 00000000 00000013 00000000
    [    4.814279]  r10:00000000 r9:00000000 r8:00000000 r7:00000000 r6:00000000 r5:801499a8
    [    4.822120]  r4:817efa40
    [    4.824664] Code: e3a02080 e593001c e3a01d33 e3a05000 (e5979018)
    
    Split the registration from the STDP4028 probe routine and only perform
    registration once both the STDP4028 and STDP2690 have probed.
    
    Signed-off-by: Martyn Welch <martyn.welch@collabora.com>
    CC: Peter Senna Tschudin <peter.senna@gmail.com>
    CC: Martyn Welch <martyn.welch@collabora.co.uk>
    CC: Neil Armstrong <narmstrong@baylibre.com>
    CC: Robert Foss <robert.foss@linaro.org>
    CC: Laurent Pinchart <Laurent.pinchart@ideasonboard.com>
    CC: Jonas Karlman <jonas@kwiboo.se>
    CC: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/43552c3404e8fdf92d8bc5658fac24e9f03c2c57.1637836606.git.martyn.welch@collabora.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43fc9e267e2e5b87558a9bf74ced9a3a7e905072
Author: Danielle Ratson <danieller@nvidia.com>
Date:   Tue Nov 23 09:54:47 2021 +0200

    mlxsw: pci: Add shutdown method in PCI driver
    
    [ Upstream commit c1020d3cf4752f61a6a413f632ea2ce2370e150d ]
    
    On an arm64 platform with the Spectrum ASIC, after loading and executing
    a new kernel via kexec, the following trace [1] is observed. This seems
    to be caused by the fact that the device is not properly shutdown before
    executing the new kernel.
    
    Fix this by implementing a shutdown method which mirrors the remove
    method, as recommended by the kexec maintainer [2][3].
    
    [1]
    BUG: Bad page state in process devlink pfn:22f73d
    page:fffffe00089dcf40 refcount:-1 mapcount:0 mapping:0000000000000000 index:0x0
    flags: 0x2ffff00000000000()
    raw: 2ffff00000000000 0000000000000000 ffffffff089d0201 0000000000000000
    raw: 0000000000000000 0000000000000000 ffffffffffffffff 0000000000000000
    page dumped because: nonzero _refcount
    Modules linked in:
    CPU: 1 PID: 16346 Comm: devlink Tainted: G B 5.8.0-rc6-custom-273020-gac6b365b1bf5 #44
    Hardware name: Marvell Armada 7040 TX4810M (DT)
    Call trace:
     dump_backtrace+0x0/0x1d0
     show_stack+0x1c/0x28
     dump_stack+0xbc/0x118
     bad_page+0xcc/0xf8
     check_free_page_bad+0x80/0x88
     __free_pages_ok+0x3f8/0x418
     __free_pages+0x38/0x60
     kmem_freepages+0x200/0x2a8
     slab_destroy+0x28/0x68
     slabs_destroy+0x60/0x90
     ___cache_free+0x1b4/0x358
     kfree+0xc0/0x1d0
     skb_free_head+0x2c/0x38
     skb_release_data+0x110/0x1a0
     skb_release_all+0x2c/0x38
     consume_skb+0x38/0x130
     __dev_kfree_skb_any+0x44/0x50
     mlxsw_pci_rdq_fini+0x8c/0xb0
     mlxsw_pci_queue_fini.isra.0+0x28/0x58
     mlxsw_pci_queue_group_fini+0x58/0x88
     mlxsw_pci_aqs_fini+0x2c/0x60
     mlxsw_pci_fini+0x34/0x50
     mlxsw_core_bus_device_unregister+0x104/0x1d0
     mlxsw_devlink_core_bus_device_reload_down+0x2c/0x48
     devlink_reload+0x44/0x158
     devlink_nl_cmd_reload+0x270/0x290
     genl_rcv_msg+0x188/0x2f0
     netlink_rcv_skb+0x5c/0x118
     genl_rcv+0x3c/0x50
     netlink_unicast+0x1bc/0x278
     netlink_sendmsg+0x194/0x390
     __sys_sendto+0xe0/0x158
     __arm64_sys_sendto+0x2c/0x38
     el0_svc_common.constprop.0+0x70/0x168
     do_el0_svc+0x28/0x88
     el0_sync_handler+0x88/0x190
     el0_sync+0x140/0x180
    
    [2]
    https://www.mail-archive.com/linux-kernel@vger.kernel.org/msg1195432.html
    
    [3]
    https://patchwork.kernel.org/project/linux-scsi/patch/20170212214920.28866-1-anton@ozlabs.org/#20116693
    
    Cc: Eric Biederman <ebiederm@xmission.com>
    Signed-off-by: Danielle Ratson <danieller@nvidia.com>
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2e921fa9219a703bbb7cc5f1849d7c5b4a5478f
Author: Jan Kiszka <jan.kiszka@siemens.com>
Date:   Mon Jun 21 20:08:28 2021 +0200

    soc: ti: pruss: fix referenced node in error message
    
    [ Upstream commit 8aa35e0bb5eaa42bac415ad0847985daa7b4890c ]
    
    So far, "(null)" is reported for the node that is missing clocks.
    
    Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
    Acked-by: Suman Anna <s-anna@ti.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Link: https://lore.kernel.org/r/d6e24953-ea89-fd1c-6e16-7a0142118054@siemens.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07fbbc4dc79d70ad2215ff34ebade8419a638a64
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Wed Nov 10 10:23:25 2021 -0500

    drm/amdgpu/display: set vblank_disable_immediate for DC
    
    [ Upstream commit 92020e81ddbeac351ea4a19bcf01743f32b9c800 ]
    
    Disable vblanks immediately to save power.  I think this was
    missed when we merged DC support.
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1781
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 019fe9723a83cef67e772baae6065f5d4bc0bb31
Author: Yang Li <yang.lee@linux.alibaba.com>
Date:   Mon Nov 15 16:10:19 2021 +0800

    drm/amd/display: check top_pipe_to_program pointer
    
    [ Upstream commit a689e8d1f80012f90384ebac9dcfac4201f9f77e ]
    
    Clang static analysis reports this error
    
    drivers/gpu/drm/amd/amdgpu/../display/dc/core/dc.c:2870:7: warning:
    Dereference of null pointer [clang-analyzer-core.NullDereference]
                    if
    (top_pipe_to_program->stream_res.tg->funcs->lock_doublebuffer_enable) {
                        ^
    
    top_pipe_to_program being NULL is caught as an error
    But then it is used to report the error.
    
    So add a check before using it.
    
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Yang Li <yang.lee@linux.alibaba.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c3c0b6c4ae9be80face4625f976042dd0d01d16
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Thu Oct 28 16:19:33 2021 +0200

    ARM: imx: rename DEBUG_IMX21_IMX27_UART to DEBUG_IMX27_UART
    
    [ Upstream commit b0100bce4ff82ec1ccd3c1f3d339fd2df6a81784 ]
    
    Since commit 4b563a066611 ("ARM: imx: Remove imx21 support"), the config
    DEBUG_IMX21_IMX27_UART is really only debug support for IMX27.
    
    So, rename this option to DEBUG_IMX27_UART and adjust dependencies in
    Kconfig and rename the definitions to IMX27 as further clean-up.
    
    This issue was discovered with ./scripts/checkkconfigsymbols.py, which
    reported that DEBUG_IMX21_IMX27_UART depends on the non-existing config
    SOC_IMX21.
    
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f54d8cd831be8b9f7a82052c1759dd28ad6221cb
Author: Dinh Nguyen <dinguyen@kernel.org>
Date:   Tue Oct 12 14:07:06 2021 -0500

    EDAC/synopsys: Use the quirk for version instead of ddr version
    
    [ Upstream commit bd1d6da17c296bd005bfa656952710d256e77dd3 ]
    
    Version 2.40a supports DDR_ECC_INTR_SUPPORT for a quirk, so use that
    quirk to determine a call to setup_address_map().
    
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Michal Simek <michal.simek@xilinx.com>
    Link: https://lkml.kernel.org/r/20211012190709.1504152-1-dinguyen@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b85d73fdbc8da0a339d6c2a7ed913075f9065f0
Author: Zheyu Ma <zheyuma97@gmail.com>
Date:   Tue May 11 10:00:03 2021 +0100

    media: b2c2: Add missing check in flexcop_pci_isr:
    
    [ Upstream commit b13203032e679674c7c518f52a7ec0801ca3a829 ]
    
    A out-of-bounds bug can be triggered by an interrupt, the reason for
    this bug is the lack of checking of register values.
    
    In flexcop_pci_isr, the driver reads value from a register and uses it as
    a dma address. Finally, this address will be passed to the count parameter
    of find_next_packet. If this value is larger than the size of dma, the
    index of buffer will be out-of-bounds.
    
    Fix this by adding a check after reading the value of the register.
    
    The following KASAN report reveals it:
    
    BUG: KASAN: slab-out-of-bounds in find_next_packet
    drivers/media/dvb-core/dvb_demux.c:528 [inline]
    BUG: KASAN: slab-out-of-bounds in _dvb_dmx_swfilter
    drivers/media/dvb-core/dvb_demux.c:572 [inline]
    BUG: KASAN: slab-out-of-bounds in dvb_dmx_swfilter+0x3fa/0x420
    drivers/media/dvb-core/dvb_demux.c:603
    Read of size 1 at addr ffff8880608c00a0 by task swapper/2/0
    
    CPU: 2 PID: 0 Comm: swapper/2 Not tainted 4.19.177-gdba4159c14ef #25
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.12.0-59-gc9ba5276e321-prebuilt.qemu.org 04/01/2014
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0xec/0x156 lib/dump_stack.c:118
     print_address_description+0x78/0x290 mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report+0x25b/0x380 mm/kasan/report.c:412
     __asan_report_load1_noabort+0x19/0x20 mm/kasan/report.c:430
     find_next_packet drivers/media/dvb-core/dvb_demux.c:528 [inline]
     _dvb_dmx_swfilter drivers/media/dvb-core/dvb_demux.c:572 [inline]
     dvb_dmx_swfilter+0x3fa/0x420 drivers/media/dvb-core/dvb_demux.c:603
     flexcop_pass_dmx_data+0x2e/0x40 drivers/media/common/b2c2/flexcop.c:167
     flexcop_pci_isr+0x3d1/0x5d0 drivers/media/pci/b2c2/flexcop-pci.c:212
     __handle_irq_event_percpu+0xfb/0x770 kernel/irq/handle.c:149
     handle_irq_event_percpu+0x79/0x150 kernel/irq/handle.c:189
     handle_irq_event+0xac/0x140 kernel/irq/handle.c:206
     handle_fasteoi_irq+0x232/0x5c0 kernel/irq/chip.c:725
     generic_handle_irq_desc include/linux/irqdesc.h:155 [inline]
     handle_irq+0x230/0x3a0 arch/x86/kernel/irq_64.c:87
     do_IRQ+0xa7/0x1e0 arch/x86/kernel/irq.c:247
     common_interrupt+0xf/0xf arch/x86/entry/entry_64.S:670
     </IRQ>
    RIP: 0010:native_safe_halt+0x28/0x30 arch/x86/include/asm/irqflags.h:61
    Code: 00 00 55 be 04 00 00 00 48 c7 c7 00 62 2f 8c 48 89 e5 e8 fb 31
    e8 f8 8b 05 75 4f 8e 03 85 c0 7e 07 0f 00 2d 8a 61 66 00 fb f4 <5d> c3
    90 90 90 90 90 90 0f 1f 44 00 00 55 48 89 e5 41 57 41 56 41
    RSP: 0018:ffff88806b71fcc8 EFLAGS: 00000246 ORIG_RAX: ffffffffffffffde
    RAX: 0000000000000000 RBX: ffffffff8bde44c8 RCX: ffffffff88a11285
    RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffffffff8c2f6200
    RBP: ffff88806b71fcc8 R08: fffffbfff185ec40 R09: fffffbfff185ec40
    R10: 0000000000000001 R11: fffffbfff185ec40 R12: 0000000000000002
    R13: ffffffff8be9d6e0 R14: 0000000000000000 R15: 0000000000000000
     arch_safe_halt arch/x86/include/asm/paravirt.h:94 [inline]
     default_idle+0x6f/0x360 arch/x86/kernel/process.c:557
     arch_cpu_idle+0xf/0x20 arch/x86/kernel/process.c:548
     default_idle_call+0x3b/0x60 kernel/sched/idle.c:93
     cpuidle_idle_call kernel/sched/idle.c:153 [inline]
     do_idle+0x2ab/0x3c0 kernel/sched/idle.c:263
     cpu_startup_entry+0xcb/0xe0 kernel/sched/idle.c:369
     start_secondary+0x3b8/0x4e0 arch/x86/kernel/smpboot.c:271
     secondary_startup_64+0xa4/0xb0 arch/x86/kernel/head_64.S:243
    
    Allocated by task 1:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:553
     kasan_slab_alloc+0x11/0x20 mm/kasan/kasan.c:490
     slab_post_alloc_hook mm/slab.h:445 [inline]
     slab_alloc_node mm/slub.c:2741 [inline]
     slab_alloc mm/slub.c:2749 [inline]
     kmem_cache_alloc+0xeb/0x280 mm/slub.c:2754
     kmem_cache_zalloc include/linux/slab.h:699 [inline]
     __kernfs_new_node+0xe2/0x6f0 fs/kernfs/dir.c:633
     kernfs_new_node+0x9a/0x120 fs/kernfs/dir.c:693
     __kernfs_create_file+0x5f/0x340 fs/kernfs/file.c:992
     sysfs_add_file_mode_ns+0x22a/0x4e0 fs/sysfs/file.c:306
     create_files fs/sysfs/group.c:63 [inline]
     internal_create_group+0x34e/0xc30 fs/sysfs/group.c:147
     sysfs_create_group fs/sysfs/group.c:173 [inline]
     sysfs_create_groups+0x9c/0x140 fs/sysfs/group.c:200
     driver_add_groups+0x3e/0x50 drivers/base/driver.c:129
     bus_add_driver+0x3a5/0x790 drivers/base/bus.c:684
     driver_register+0x1cd/0x410 drivers/base/driver.c:170
     __pci_register_driver+0x197/0x200 drivers/pci/pci-driver.c:1411
     cx88_audio_pci_driver_init+0x23/0x25 drivers/media/pci/cx88/cx88-alsa.c:
     1017
     do_one_initcall+0xe0/0x610 init/main.c:884
     do_initcall_level init/main.c:952 [inline]
     do_initcalls init/main.c:960 [inline]
     do_basic_setup init/main.c:978 [inline]
     kernel_init_freeable+0x4d0/0x592 init/main.c:1145
     kernel_init+0x18/0x190 init/main.c:1062
     ret_from_fork+0x24/0x30 arch/x86/entry/entry_64.S:415
    
    Freed by task 0:
    (stack is not available)
    
    The buggy address belongs to the object at ffff8880608c0000
     which belongs to the cache kernfs_node_cache of size 160
    The buggy address is located 0 bytes to the right of
     160-byte region [ffff8880608c0000, ffff8880608c00a0)
    The buggy address belongs to the page:
    page:ffffea0001823000 count:1 mapcount:0 mapping:ffff88806bed1e00
    index:0x0 compound_mapcount: 0
    flags: 0x100000000008100(slab|head)
    raw: 0100000000008100 dead000000000100 dead000000000200 ffff88806bed1e00
    raw: 0000000000000000 0000000000240024 00000001ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff8880608bff80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     ffff8880608c0000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    >ffff8880608c0080: 00 00 00 00 fc fc fc fc fc fc fc fc 00 00 00 00
                                   ^
     ffff8880608c0100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     ffff8880608c0180: fc fc fc fc fc fc fc fc 00 00 00 00 00 00 00 00
    ==================================================================
    
    Link: https://lore.kernel.org/linux-media/1620723603-30912-1-git-send-email-zheyuma97@gmail.com
    Reported-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Zheyu Ma <zheyuma97@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c978d39a8b142a5028eed159d7cd9a14a43ff81e
Author: José Expósito <jose.exposito89@gmail.com>
Date:   Thu Nov 18 08:29:53 2021 +0100

    HID: apple: Do not reset quirks when the Fn key is not found
    
    [ Upstream commit a5fe7864d8ada170f19cc47d176bf8260ffb4263 ]
    
    When a keyboard without a function key is detected, instead of removing
    all quirks, remove only the APPLE_HAS_FN quirk.
    
    Signed-off-by: José Expósito <jose.exposito89@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2df002e3276b1f9364013be56d3e819df095f118
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Nov 6 14:02:27 2021 +0100

    drm: panel-orientation-quirks: Add quirk for the Lenovo Yoga Book X91F/L
    
    [ Upstream commit bc30c3b0c8a1904d83d5f0d60fb8650a334b207b ]
    
    The Lenovo Yoga Book X91F/L uses a panel which has been mounted
    90 degrees rotated. Add a quirk for this.
    
    Cc: Yauhen Kharuzhy <jekhor@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Simon Ser <contact@emersion.fr>
    Tested-by: Yauhen Kharuzhy <jekhor@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211106130227.11927-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5aa57672c66cca8aae148c722b6de2fa9ef65138
Author: Pavankumar Kondeti <quic_pkondeti@quicinc.com>
Date:   Fri Nov 12 15:54:40 2021 +0530

    usb: gadget: f_fs: Use stream_open() for endpoint files
    
    [ Upstream commit c76ef96fc00eb398c8fc836b0eb2f82bcc619dc7 ]
    
    Function fs endpoint file operations are synchronized via an interruptible
    mutex wait. However we see threads that do ep file operations concurrently
    are getting blocked for the mutex lock in __fdget_pos(). This is an
    uninterruptible wait and we see hung task warnings and kernel panic
    if hung_task_panic systcl is enabled if host does not send/receive
    the data for long time.
    
    The reason for threads getting blocked in __fdget_pos() is due to
    the file position protection introduced by the commit 9c225f2655e3
    ("vfs: atomic f_pos accesses as per POSIX"). Since function fs
    endpoint files does not have the notion of the file position, switch
    to the stream mode. This will bypass the file position mutex and
    threads will be blocked in interruptible state for the function fs
    mutex.
    
    It should not affects user space as we are only changing the task state
    changes the task state from UNINTERRUPTIBLE to INTERRUPTIBLE while waiting
    for the USB transfers to be finished. However there is a slight change to
    the O_NONBLOCK behavior. Earlier threads that are using O_NONBLOCK are also
    getting blocked inside fdget_pos(). Now they reach to function fs and error
    code is returned. The non blocking behavior is actually honoured now.
    
    Reviewed-by: John Keeping <john@metanate.com>
    Signed-off-by: Pavankumar Kondeti <quic_pkondeti@quicinc.com>
    Link: https://lore.kernel.org/r/1636712682-1226-1-git-send-email-quic_pkondeti@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 129e8faaee973f5400fac644b30a7551df98d5f9
Author: Baochen Qiang <bqiang@codeaurora.org>
Date:   Tue Oct 26 09:16:05 2021 +0800

    ath11k: Fix crash caused by uninitialized TX ring
    
    [ Upstream commit 273703ebdb01b6c5f1aaf4b98fb57b177609055c ]
    
    Commit 31582373a4a8 ("ath11k: Change number of TCL rings to one for
    QCA6390") avoids initializing the other entries of dp->tx_ring cause
    the corresponding TX rings on QCA6390/WCN6855 are not used, but leaves
    those ring masks in ath11k_hw_ring_mask_qca6390.tx unchanged. Normally
    this is OK because we will only get interrupts from the first TX ring
    on these chips and thus only the first entry of dp->tx_ring is involved.
    
    In case of one MSI vector, all DP rings share the same IRQ. For each
    interrupt, all rings have to be checked, which means the other entries
    of dp->tx_ring are involved. However since they are not initialized,
    system crashes.
    
    Fix this issue by simply removing those ring masks.
    
    crash stack:
    [  102.907438] BUG: kernel NULL pointer dereference, address: 0000000000000028
    [  102.907447] #PF: supervisor read access in kernel mode
    [  102.907451] #PF: error_code(0x0000) - not-present page
    [  102.907453] PGD 1081f0067 P4D 1081f0067 PUD 1081f1067 PMD 0
    [  102.907460] Oops: 0000 [#1] SMP DEBUG_PAGEALLOC NOPTI
    [  102.907465] CPU: 0 PID: 3511 Comm: apt-check Kdump: loaded Tainted: G            E     5.15.0-rc4-wt-ath+ #20
    [  102.907470] Hardware name: AMD Celadon-RN/Celadon-RN, BIOS RCD1005E 10/08/2020
    [  102.907472] RIP: 0010:ath11k_dp_tx_completion_handler+0x201/0x830 [ath11k]
    [  102.907497] Code: 3c 24 4e 8d ac 37 10 04 00 00 4a 8d bc 37 68 04 00 00 48 89 3c 24 48 63 c8 89 83 84 18 00 00 48 c1 e1 05 48 03 8b 78 18 00 00 <8b> 51 08 89 d6 83 e6 07 89 74 24 24 83 fe 03 74 04 85 f6 75 63 41
    [  102.907501] RSP: 0000:ffff9b7340003e08 EFLAGS: 00010202
    [  102.907505] RAX: 0000000000000001 RBX: ffff8e21530c0100 RCX: 0000000000000020
    [  102.907508] RDX: 0000000000000000 RSI: 00000000fffffe00 RDI: ffff8e21530c1938
    [  102.907511] RBP: ffff8e21530c0000 R08: 0000000000000001 R09: 0000000000000000
    [  102.907513] R10: ffff8e2145534c10 R11: 0000000000000001 R12: ffff8e21530c2938
    [  102.907515] R13: ffff8e21530c18e0 R14: 0000000000000100 R15: ffff8e21530c2978
    [  102.907518] FS:  00007f5d4297e740(0000) GS:ffff8e243d600000(0000) knlGS:0000000000000000
    [  102.907521] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  102.907524] CR2: 0000000000000028 CR3: 00000001034ea000 CR4: 0000000000350ef0
    [  102.907527] Call Trace:
    [  102.907531]  <IRQ>
    [  102.907537]  ath11k_dp_service_srng+0x5c/0x2f0 [ath11k]
    [  102.907556]  ath11k_pci_ext_grp_napi_poll+0x21/0x70 [ath11k_pci]
    [  102.907562]  __napi_poll+0x2c/0x160
    [  102.907570]  net_rx_action+0x251/0x310
    [  102.907576]  __do_softirq+0x107/0x2fc
    [  102.907585]  irq_exit_rcu+0x74/0x90
    [  102.907593]  common_interrupt+0x83/0xa0
    [  102.907600]  </IRQ>
    [  102.907601]  asm_common_interrupt+0x1e/0x40
    
    Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-01720.1-QCAHSPSWPL_V1_V2_SILICONZ_LITE-1
    
    Signed-off-by: Baochen Qiang <bqiang@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211026011605.58615-1-quic_bqiang@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8b271f2aaddf284745d2caf0845d3f6c0dd8a18
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Date:   Thu Nov 11 23:04:09 2021 +0000

    media: atomisp: handle errors at sh_css_create_isp_params()
    
    [ Upstream commit 58043dbf6d1ae9deab4f5aa1e039c70112017682 ]
    
    The succ var tracks memory allocation erros on this function.
    
    Fix it, in order to stop this W=1 Werror in clang:
    
    drivers/staging/media/atomisp/pci/sh_css_params.c:2430:7: error: variable 'succ' set but not used [-Werror,-Wunused-but-set-variable]
            bool succ = true;
                 ^
    
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebe9c978d9e777f6e9090834e2b90451e5bdb3ba
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Sun Oct 31 22:30:12 2021 +0100

    batman-adv: allow netlink usage in unprivileged containers
    
    [ Upstream commit 9057d6c23e7388ee9d037fccc9a7bc8557ce277b ]
    
    Currently, creating a batman-adv interface in an unprivileged LXD
    container and attaching secondary interfaces to it with "ip" or "batctl"
    works fine. However all batctl debug and configuration commands
    fail:
    
      root@container:~# batctl originators
      Error received: Operation not permitted
      root@container:~# batctl orig_interval
      1000
      root@container:~# batctl orig_interval 2000
      root@container:~# batctl orig_interval
      1000
    
    To fix this change the generic netlink permissions from GENL_ADMIN_PERM
    to GENL_UNS_ADMIN_PERM. This way a batman-adv interface is fully
    maintainable as root from within a user namespace, from an unprivileged
    container.
    
    All except one batman-adv netlink setting are per interface and do not
    leak information or change settings from the host system and are
    therefore save to retrieve or modify as root from within an unprivileged
    container.
    
    "batctl routing_algo" / BATADV_CMD_GET_ROUTING_ALGOS is the only
    exception: It provides the batman-adv kernel module wide default routing
    algorithm. However it is read-only from netlink and an unprivileged
    container is still not allowed to modify
    /sys/module/batman_adv/parameters/routing_algo. Instead it is advised to
    use the newly introduced "batctl if create routing_algo RA_NAME" /
    IFLA_BATADV_ALGO_NAME to set the routing algorithm on interface
    creation, which already works fine in an unprivileged container.
    
    Cc: Tycho Andersen <tycho@tycho.pizza>
    Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff452db96163ce8961c4878065ae763e942e7904
Author: Wan Jiabing <wanjiabing@vivo.com>
Date:   Sun Oct 17 21:45:03 2021 -0400

    ARM: shmobile: rcar-gen2: Add missing of_node_put()
    
    [ Upstream commit 85744f2d938c5f3cfc44cb6533c157469634da93 ]
    
    Fix following coccicheck warning:
    ./arch/arm/mach-shmobile/regulator-quirk-rcar-gen2.c:156:1-33: Function
    for_each_matching_node_and_match should have of_node_put() before break
    and goto.
    
    Early exits from for_each_matching_node_and_match() should decrement the
    node reference counter.
    
    Signed-off-by: Wan Jiabing <wanjiabing@vivo.com>
    Link: https://lore.kernel.org/r/20211018014503.7598-1-wanjiabing@vivo.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff2138d6c2a3a57347de902ecbda873e5c1725b6
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Nov 7 17:15:48 2021 +0000

    media: atomisp-ov2680: Fix ov2680_set_fmt() clobbering the exposure
    
    [ Upstream commit 4492289c31364d28c2680b43b18883385a5d216c ]
    
    Now that we restore the default or last user set exposure setting on
    power_up() there is no need for the registers written by ov2680_set_fmt()
    to write to the exposure register.
    
    Not doing so fixes the exposure always being reset to the value from
    the res->regs array after a set_fmt().
    
    Link: https://lore.kernel.org/linux-media/20211107171549.267583-11-hdegoede@redhat.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51ef6582a2189677fc8d46d3892b4e6a4ae1908a
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Date:   Fri Oct 29 08:09:39 2021 +0100

    media: atomisp: set per-device's default mode
    
    [ Upstream commit 2c45e343c581091835c9047ed5298518aa133163 ]
    
    The atomisp driver originally used the s_parm command to
    initialize the run_mode type to the driver. So, before start
    setting up the streaming, s_parm should be called.
    
    So, even having 5 "normal" video devices, one meant to be used
    for each type, the run_mode was actually selected when
    s_parm is called.
    
    Without setting the run mode, applications that don't call
    VIDIOC_SET_PARM with a custom atomisp parameters won't work, as
    the pipeline won't be set:
    
            atomisp-isp2 0000:00:03.0: can't create streams
            atomisp-isp2 0000:00:03.0: __get_frame_info 1600x1200 (padded to 0) returned -22
    
    However, commit 8a7c5594c020 ("media: v4l2-ioctl: clear fields in s_parm")
    broke support for it, with a good reason, as drivers shoudn't be
    extending the API for their own purposes.
    
    So, as an step to allow generic apps to use this driver, put
    the device's run_mode in preview after open.
    
    After this patch, using v4l2grab starts to work on preview
    mode (/dev/video2):
    
            $ v4l2grab -f YUYV -x 1600 -y 1200 -d /dev/video2 -n 1 -u
            $ feh out000.pnm
    
    So, let's just setup the default run_mode that each video devnode
    should assume, setting it at open() time.
    
    Reported-by: Tsuchiya Yuto <kitakar@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac08140677c0b4e9d1670030eb60ea277d1fdde9
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Date:   Thu Nov 4 11:45:27 2021 +0000

    media: atomisp: fix try_fmt logic
    
    [ Upstream commit c9e9094c4e42124af909b2f5f6ded0498e0854ac ]
    
    The internal try_fmt logic is not meant to provide everything
    that the V4L2 API should provide. Also, it doesn't decrement
    the pads that are used only internally by the driver, but aren't
    part of the device's output.
    
    Fix it.
    
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 518e059789f6d114bc304edeea913da0bfc5e937
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Feb 24 19:29:52 2021 +1000

    drm/nouveau/pmu/gm200-: avoid touching PMU outside of DEVINIT/PREOS/ACR
    
    [ Upstream commit 1d2271d2fb85e54bfc9630a6c30ac0feb9ffb983 ]
    
    There have been reports of the WFI timing out on some boards, and a
    patch was proposed to just remove it.  This stuff is rather fragile,
    and I believe the WFI might be needed with our FW prior to GM200.
    
    However, we probably should not be touching PMU during init on GPUs
    where we depend on NVIDIA FW, outside of limited circumstances, so
    this should be a somewhat safer change that achieves the desired
    result.
    
    Reported-by: Diego Viola <diego.viola@gmail.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Reviewed-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Link: https://gitlab.freedesktop.org/drm/nouveau/-/merge_requests/10
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3ba02b043f2fc8cd55f7f64d258b2efd70cdd4c
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Fri Oct 29 15:59:47 2021 +0200

    drm/bridge: dw-hdmi: handle ELD when DRM_BRIDGE_ATTACH_NO_CONNECTOR
    
    [ Upstream commit 3f2532d65a571ca02258b547b5b68ab2e9406fdb ]
    
    The current ELD handling takes the internal connector ELD buffer and
    shares it to the I2S and AHB sub-driver.
    
    But with DRM_BRIDGE_ATTACH_NO_CONNECTOR, the connector is created
    elsewhere (or not), and an eventual connector is known only
    if the bridge chain up to a connector is enabled.
    
    The current dw-hdmi code gets the current connector from
    atomic_enable() so use the already stored connector pointer and
    replace the buffer pointer with a callback returning the current
    connector ELD buffer.
    
    Since a connector is not always available, either pass an empty
    ELD to the alsa HDMI driver or don't call snd_pcm_hw_constraint_eld()
    in AHB driver.
    
    Reported-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    [narmstrong: fixed typo in commit log]
    Acked-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211029135947.3022875-1-narmstrong@baylibre.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f13f10fddf4689fbc06204fe75ad595dbe93091
Author: Zekun Shen <bruceshenzk@gmail.com>
Date:   Thu Oct 28 18:37:49 2021 -0400

    ar5523: Fix null-ptr-deref with unexpected WDCMSG_TARGET_START reply
    
    [ Upstream commit ae80b6033834342601e99f74f6a62ff5092b1cee ]
    
    Unexpected WDCMSG_TARGET_START replay can lead to null-ptr-deref
    when ar->tx_cmd->odata is NULL. The patch adds a null check to
    prevent such case.
    
    KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
     ar5523_cmd+0x46a/0x581 [ar5523]
     ar5523_probe.cold+0x1b7/0x18da [ar5523]
     ? ar5523_cmd_rx_cb+0x7a0/0x7a0 [ar5523]
     ? __pm_runtime_set_status+0x54a/0x8f0
     ? _raw_spin_trylock_bh+0x120/0x120
     ? pm_runtime_barrier+0x220/0x220
     ? __pm_runtime_resume+0xb1/0xf0
     usb_probe_interface+0x25b/0x710
     really_probe+0x209/0x5d0
     driver_probe_device+0xc6/0x1b0
     device_driver_attach+0xe2/0x120
    
    I found the bug using a custome USBFuzz port. It's a research work
    to fuzz USB stack/drivers. I modified it to fuzz ath9k driver only,
    providing hand-crafted usb descriptors to QEMU.
    
    After fixing the code (fourth byte in usb packet) to WDCMSG_TARGET_START,
    I got the null-ptr-deref bug. I believe the bug is triggerable whenever
    cmd->odata is NULL. After patching, I tested with the same input and no
    longer see the KASAN report.
    
    This was NOT tested on a real device.
    
    Signed-off-by: Zekun Shen <bruceshenzk@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/YXsmPQ3awHFLuAj2@10-18-43-117.dynapool.wireless.nyu.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9d2ccfc7d2caa3bf2443dc0cf4cbfc56c3c9518
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Sun Nov 7 08:55:21 2021 -0800

    selftests/bpf: Fix bpf_object leak in skb_ctx selftest
    
    [ Upstream commit 8c7a95520184b6677ca6075e12df9c208d57d088 ]
    
    skb_ctx selftest didn't close bpf_object implicitly allocated by
    bpf_prog_test_load() helper. Fix the problem by explicitly calling
    bpf_object__close() at the end of the test.
    
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Reviewed-by: Hengqi Chen <hengqi.chen@gmail.com>
    Link: https://lore.kernel.org/bpf/20211107165521.9240-10-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b207356933f4593071bbd95da2bb12eaa762a66f
Author: Qiang Yu <yuq825@gmail.com>
Date:   Sun Oct 31 12:16:04 2021 +0800

    drm/lima: fix warning when CONFIG_DEBUG_SG=y & CONFIG_DMA_API_DEBUG=y
    
    [ Upstream commit 89636a06fa2ee7826a19c39c19a9bc99ab9340a9 ]
    
    Otherwise get following warning:
    
    DMA-API: lima 1c40000.gpu: mapping sg segment longer than device claims to support [len=4149248] [max=65536]
    
    See: https://gitlab.freedesktop.org/mesa/mesa/-/issues/5496
    
    Reviewed-by: Vasily Khoruzhick <anarsoul@gmail.com>
    Reported-by: Roman Stratiienko <r.stratiienko@gmail.com>
    Signed-off-by: Qiang Yu <yuq825@gmail.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211031041604.187216-1-yuq825@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db1e878373bfa86b83b862d1dbae55c3497c815d
Author: Alexander Aring <aahringo@redhat.com>
Date:   Tue Nov 2 15:17:24 2021 -0400

    fs: dlm: filter user dlm messages for kernel locks
    
    [ Upstream commit 6c2e3bf68f3e5e5a647aa52be246d5f552d7496d ]
    
    This patch fixes the following crash by receiving a invalid message:
    
    [  160.672220] ==================================================================
    [  160.676206] BUG: KASAN: user-memory-access in dlm_user_add_ast+0xc3/0x370
    [  160.679659] Read of size 8 at addr 00000000deadbeef by task kworker/u32:13/319
    [  160.681447]
    [  160.681824] CPU: 10 PID: 319 Comm: kworker/u32:13 Not tainted 5.14.0-rc2+ #399
    [  160.683472] Hardware name: Red Hat KVM/RHEL-AV, BIOS 1.14.0-1.module+el8.6.0+12648+6ede71a5 04/01/2014
    [  160.685574] Workqueue: dlm_recv process_recv_sockets
    [  160.686721] Call Trace:
    [  160.687310]  dump_stack_lvl+0x56/0x6f
    [  160.688169]  ? dlm_user_add_ast+0xc3/0x370
    [  160.689116]  kasan_report.cold.14+0x116/0x11b
    [  160.690138]  ? dlm_user_add_ast+0xc3/0x370
    [  160.690832]  dlm_user_add_ast+0xc3/0x370
    [  160.691502]  _receive_unlock_reply+0x103/0x170
    [  160.692241]  _receive_message+0x11df/0x1ec0
    [  160.692926]  ? rcu_read_lock_sched_held+0xa1/0xd0
    [  160.693700]  ? rcu_read_lock_bh_held+0xb0/0xb0
    [  160.694427]  ? lock_acquire+0x175/0x400
    [  160.695058]  ? do_purge.isra.51+0x200/0x200
    [  160.695744]  ? lock_acquired+0x360/0x5d0
    [  160.696400]  ? lock_contended+0x6a0/0x6a0
    [  160.697055]  ? lock_release+0x21d/0x5e0
    [  160.697686]  ? lock_is_held_type+0xe0/0x110
    [  160.698352]  ? lock_is_held_type+0xe0/0x110
    [  160.699026]  ? ___might_sleep+0x1cc/0x1e0
    [  160.699698]  ? dlm_wait_requestqueue+0x94/0x140
    [  160.700451]  ? dlm_process_requestqueue+0x240/0x240
    [  160.701249]  ? down_write_killable+0x2b0/0x2b0
    [  160.701988]  ? do_raw_spin_unlock+0xa2/0x130
    [  160.702690]  dlm_receive_buffer+0x1a5/0x210
    [  160.703385]  dlm_process_incoming_buffer+0x726/0x9f0
    [  160.704210]  receive_from_sock+0x1c0/0x3b0
    [  160.704886]  ? dlm_tcp_shutdown+0x30/0x30
    [  160.705561]  ? lock_acquire+0x175/0x400
    [  160.706197]  ? rcu_read_lock_sched_held+0xa1/0xd0
    [  160.706941]  ? rcu_read_lock_bh_held+0xb0/0xb0
    [  160.707681]  process_recv_sockets+0x32/0x40
    [  160.708366]  process_one_work+0x55e/0xad0
    [  160.709045]  ? pwq_dec_nr_in_flight+0x110/0x110
    [  160.709820]  worker_thread+0x65/0x5e0
    [  160.710423]  ? process_one_work+0xad0/0xad0
    [  160.711087]  kthread+0x1ed/0x220
    [  160.711628]  ? set_kthread_struct+0x80/0x80
    [  160.712314]  ret_from_fork+0x22/0x30
    
    The issue is that we received a DLM message for a user lock but the
    destination lock is a kernel lock. Note that the address which is trying
    to derefence is 00000000deadbeef, which is in a kernel lock
    lkb->lkb_astparam, this field should never be derefenced by the DLM
    kernel stack. In case of a user lock lkb->lkb_astparam is lkb->lkb_ua
    (memory is shared by a union field). The struct lkb_ua will be handled
    by the DLM kernel stack but on a kernel lock it will contain invalid
    data and ends in most likely crashing the kernel.
    
    It can be reproduced with two cluster nodes.
    
    node 2:
    dlm_tool join test
    echo "862 fooobaar 1 2 1" > /sys/kernel/debug/dlm/test_locks
    echo "862 3 1" > /sys/kernel/debug/dlm/test_waiters
    
    node 1:
    dlm_tool join test
    
    python:
    foo = DLM(h_cmd=3, o_nextcmd=1, h_nodeid=1, h_lockspace=0x77222027, \
              m_type=7, m_flags=0x1, m_remid=0x862, m_result=0xFFFEFFFE)
    newFile = open("/sys/kernel/debug/dlm/comms/2/rawmsg", "wb")
    newFile.write(bytes(foo))
    
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9c9a46efd94f2909e0da313577a07ebf1ddf829
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Wed Oct 13 16:55:46 2021 +0800

    Bluetooth: Fix debugfs entry leak in hci_register_dev()
    
    [ Upstream commit 5a4bb6a8e981d3d0d492aa38412ee80b21033177 ]
    
    Fault injection test report debugfs entry leak as follows:
    
    debugfs: Directory 'hci0' with parent 'bluetooth' already present!
    
    When register_pm_notifier() failed in hci_register_dev(), the debugfs
    create by debugfs_create_dir() do not removed in the error handing path.
    
    Add the remove debugfs code to fix it.
    
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 852d7d436fd19be043b33fd31133fb159b91a03b
Author: Sicelo A. Mhlongo <absicsz@gmail.com>
Date:   Sun Dec 12 23:40:06 2021 +0100

    ARM: dts: omap3-n900: Fix lp5523 for multi color
    
    [ Upstream commit e9af026a3b24f59d7af4609f73e0ef60a4d6d516 ]
    
    Since the LED multicolor framework support was added in commit
    92a81562e695 ("leds: lp55xx: Add multicolor framework support to lp55xx")
    LEDs on this platform stopped working.
    
    Fixes: 92a81562e695 ("leds: lp55xx: Add multicolor framework support to lp55xx")
    Fixes: ac219bf3c9bd ("leds: lp55xx: Convert to use GPIO descriptors")
    Signed-off-by: Merlijn Wajer <merlijn@wizzup.org>
    Signed-off-by: Sicelo A. Mhlongo <absicsz@gmail.com>
    Signed-off-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5793aff11d7693df7e64261bc466d4869db9117
Author: Baruch Siach <baruch@tkos.co.il>
Date:   Thu Dec 30 18:31:52 2021 +0200

    of: base: Fix phandle argument length mismatch error message
    
    [ Upstream commit 94a4950a4acff39b5847cc1fee4f65e160813493 ]
    
    The cell_count field of of_phandle_iterator is the number of cells we
    expect in the phandle arguments list when cells_name is missing. The
    error message should show the number of cells we actually see.
    
    Fixes: af3be70a3211 ("of: Improve of_phandle_iterator_next() error message")
    Cc: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Baruch Siach <baruch@tkos.co.il>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/r/96519ac55be90a63fa44afe01480c30d08535465.1640881913.git.baruch@tkos.co.il
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e16e836d510c5b5373fde821fe19dd1aa560825c
Author: Conor Dooley <conor.dooley@microchip.com>
Date:   Thu Dec 23 15:42:44 2021 +0000

    clk: bm1880: remove kfrees on static allocations
    
    [ Upstream commit c861c1be3897845313a0df47804b1db37c7052e1 ]
    
    bm1880_clk_unregister_pll & bm1880_clk_unregister_div both try to
    free statically allocated variables, so remove those kfrees.
    
    For example, if we take L703 kfree(div_hw):
    - div_hw is a bm1880_div_hw_clock pointer
    - in bm1880_clk_register_plls this is pointed to an element of arg1:
      struct bm1880_div_hw_clock *clks
    - in the probe, where bm1880_clk_register_plls is called arg1 is
      bm1880_div_clks, defined on L371:
      static struct bm1880_div_hw_clock bm1880_div_clks[]
    
    Signed-off-by: Conor Dooley <conor.dooley@microchip.com>
    Fixes: 1ab4601da55b ("clk: Add common clock driver for BM1880 SoC")
    Link: https://lore.kernel.org/r/20211223154244.1024062-1-conor.dooley@microchip.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36d46e21c9c4d363f84b6b970971729144da2461
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Wed Jan 5 19:08:03 2022 +0800

    ASoC: fsl_asrc: refine the check of available clock divider
    
    [ Upstream commit 320386343451ab6a3577e0ee200dac56a6182944 ]
    
    According to RM, the clock divider range is from 1 to 8, clock
    prescaling ratio may be any power of 2 from 1 to 128.
    So the supported divider is not all the value between
    1 and 1024, just limited value in that range.
    
    Create table for the supported divder and add function to
    check the clock divider is available by comparing with
    the table.
    
    Fixes: d0250cf4f2ab ("ASoC: fsl_asrc: Add an option to select internal ratio mode")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Link: https://lore.kernel.org/r/1641380883-20709-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a6864e2e6ab7ce101d1ff105fe8f87f591746bd
Author: Kamal Heib <kamalheib1@gmail.com>
Date:   Mon Dec 20 17:25:30 2021 +0200

    RDMA/cxgb4: Set queue pair state when being queried
    
    [ Upstream commit e375b9c92985e409c4bb95dd43d34915ea7f5e28 ]
    
    The API for ib_query_qp requires the driver to set cur_qp_state on return,
    add the missing set.
    
    Fixes: 67bbc05512d8 ("RDMA/cxgb4: Add query_qp support")
    Link: https://lore.kernel.org/r/20211220152530.60399-1-kamalheib1@gmail.com
    Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80524c8cdf2959b424f4e8fd735598f5e112b375
Author: Alyssa Ross <hi@alyssa.is>
Date:   Tue Jan 4 13:22:16 2022 +0000

    ASoC: fsl_mqs: fix MODULE_ALIAS
    
    [ Upstream commit 9f3d45318dd9e739ed62e4218839a7a824d3cced ]
    
    modprobe can't handle spaces in aliases.
    
    Fixes: 9e28f6532c61 ("ASoC: fsl_mqs: Add MQS component driver")
    Signed-off-by: Alyssa Ross <hi@alyssa.is>
    Link: https://lore.kernel.org/r/20220104132218.1690103-1-hi@alyssa.is
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74988d017dd19fef5f808a4f0162d2e21bd27001
Author: Ammar Faizi <ammarfaizi2@gmail.com>
Date:   Sun Dec 26 20:54:02 2021 +0700

    powerpc/xive: Add missing null check after calling kmalloc
    
    [ Upstream commit 18dbfcdedc802f9500b2c29794f22a31d27639c0 ]
    
    Commit 930914b7d528fc ("powerpc/xive: Add a debugfs file to dump
    internal XIVE state") forgot to add a null check.
    
    Add it.
    
    Fixes: 930914b7d528fc6b0249bffc00564100bcf6ef75 ("powerpc/xive: Add a debugfs file to dump internal XIVE state")
    Signed-off-by: Ammar Faizi <ammarfaizi2@gmail.com>
    Reviewed-by: Cédric Le Goater <clg@kaod.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20211226135314.251221-1-ammar.faizi@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 588e0b81ce38b2806774f840d7528697bc971000
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Dec 28 16:05:53 2021 -0800

    mips: bcm63xx: add support for clk_set_parent()
    
    [ Upstream commit 6f03055d508ff4feb8db02ba3df9303a1db8d381 ]
    
    The MIPS BMC63XX subarch does not provide/support clk_set_parent().
    This causes build errors in a few drivers, so add a simple implementation
    of that function so that callers of it will build without errors.
    
    Fixes these build errors:
    
    ERROR: modpost: "clk_set_parent" [sound/soc/jz4740/snd-soc-jz4740-i2s.ko] undefined!
    ERROR: modpost: "clk_set_parent" [sound/soc/atmel/snd-soc-atmel-i2s.ko] undefined!
    
    Fixes: e7300d04bd08 ("MIPS: BCM63xx: Add support for the Broadcom BCM63xx family of SOCs." )
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3de89d010c04cc1bc583481ce8f7f03ba625c3b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Tue Dec 28 16:03:45 2021 -0800

    mips: lantiq: add support for clk_set_parent()
    
    [ Upstream commit 76f66dfd60dc5d2f9dec22d99091fea1035c5d03 ]
    
    Provide a simple implementation of clk_set_parent() in the lantiq
    subarch so that callers of it will build without errors.
    
    Fixes these build errors:
    
    ERROR: modpost: "clk_set_parent" [sound/soc/jz4740/snd-soc-jz4740-i2s.ko] undefined!
    ERROR: modpost: "clk_set_parent" [sound/soc/atmel/snd-soc-atmel-i2s.ko] undefined!
    
    Fixes: 171bb2f19ed6 ("MIPS: Lantiq: Add initial support for Lantiq SoCs")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    --to=linux-mips@vger.kernel.org --cc="John Crispin <john@phrozen.org>" --cc="Jonathan Cameron <jic23@kernel.org>" --cc="Russell King <linux@armlinux.org.uk>" --cc="Andy Shevchenko <andy.shevchenko@gmail.com>" --cc=alsa-devel@alsa-project.org --to="Thomas Bogendoerfer <tsbogend@alpha.franken.de>"
    Reviewed-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f8468a089b0615f92d025418a8f4d4c257c6954
Author: Sameer Pujar <spujar@nvidia.com>
Date:   Thu Dec 23 17:23:51 2021 +0530

    arm64: tegra: Remove non existent Tegra194 reset
    
    [ Upstream commit 146b3a77af8091cabbd1decc51d67799e69682d2 ]
    
    Tegra194 does not really have "hda2codec_2x" related reset. Hence drop
    this entry to reflect actual HW.
    
    Fixes: 4878cc0c9fab ("arm64: tegra: Add HDA controller on Tegra194")
    Signed-off-by: Sameer Pujar <spujar@nvidia.com>
    Link: https://lore.kernel.org/r/1640260431-11613-4-git-send-email-spujar@nvidia.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 702902fc7fb09902e6fa6e330644ea8c28f2fce5
Author: Sameer Pujar <spujar@nvidia.com>
Date:   Wed Nov 18 13:36:20 2020 +0530

    arm64: tegra: Fix Tegra194 HDA {clock,reset}-names ordering
    
    [ Upstream commit 48f6e195039486bc303118948f49a9873acc888f ]
    
    As per the HDA binding doc reorder {clock,reset}-names entries for
    Tegra194. This also serves as a preparation for converting existing
    binding doc to json-schema.
    
    Signed-off-by: Sameer Pujar <spujar@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24b047d72c77fdb73821f3dfcf43352663a02546
Author: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
Date:   Fri Jan 29 14:22:22 2021 +0100

    counter: stm32-lptimer-cnt: remove iio counter abi
    
    [ Upstream commit 01f68f067dc39df9c9d95d759ee61517eb4b0fcf ]
    
    Currently, the STM32 LP Timer counter driver registers into both IIO and
    counter subsystems, which is redundant.
    
    Remove the IIO counter ABI and IIO registration from the STM32 LP Timer
    counter driver since it's been superseded by the Counter subsystem
    as discussed in [1].
    
    Keep only the counter subsystem related part.
    Move a part of the ABI documentation into a driver comment.
    
    This also removes a duplicate ABI warning
    $ scripts/get_abi.pl validate
    ...
    /sys/bus/iio/devices/iio:deviceX/in_count0_preset is defined 2 times:
      ./Documentation/ABI/testing/sysfs-bus-iio-timer-stm32:100
      ./Documentation/ABI/testing/sysfs-bus-iio-lptimer-stm32:0
    
    [1] https://lkml.org/lkml/2021/1/19/347
    
    Acked-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Link: https://lore.kernel.org/r/1611926542-2490-1-git-send-email-fabrice.gasnier@foss.st.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a39460610452f4ba285e1dfb1a94ddfec19096a4
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Tue Dec 28 12:55:22 2021 +0000

    misc: lattice-ecp3-config: Fix task hung when firmware load failed
    
    [ Upstream commit fcee5ce50bdb21116711e38635e3865594af907e ]
    
    When firmware load failed, kernel report task hung as follows:
    
    INFO: task xrun:5191 blocked for more than 147 seconds.
          Tainted: G        W         5.16.0-rc5-next-20211220+ #11
    "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    task:xrun            state:D stack:    0 pid: 5191 ppid:   270 flags:0x00000004
    Call Trace:
     __schedule+0xc12/0x4b50 kernel/sched/core.c:4986
     schedule+0xd7/0x260 kernel/sched/core.c:6369 (discriminator 1)
     schedule_timeout+0x7aa/0xa80 kernel/time/timer.c:1857
     wait_for_completion+0x181/0x290 kernel/sched/completion.c:85
     lattice_ecp3_remove+0x32/0x40 drivers/misc/lattice-ecp3-config.c:221
     spi_remove+0x72/0xb0 drivers/spi/spi.c:409
    
    lattice_ecp3_remove() wait for signals from firmware loading, but when
    load failed, firmware_load() does not send this signal. This cause
    device remove hung. Fix it by sending signal even if load failed.
    
    Fixes: 781551df57c7 ("misc: Add Lattice ECP3 FPGA configuration via SPI")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Link: https://lore.kernel.org/r/20211228125522.3122284-1-weiyongjun1@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 696a50abbc7c26e4ccad33955befa0bc4943d42e
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Dec 28 11:40:26 2021 +0800

    ASoC: samsung: idma: Check of ioremap return value
    
    [ Upstream commit 3ecb46755eb85456b459a1a9f952c52986bce8ec ]
    
    Because of the potential failure of the ioremap(), the buf->area could
    be NULL.
    Therefore, we need to check it and return -ENOMEM in order to transfer
    the error.
    
    Fixes: f09aecd50f39 ("ASoC: SAMSUNG: Add I2S0 internal dma driver")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Link: https://lore.kernel.org/r/20211228034026.1659385-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d491a2c2cf96f9f3d855cf0bcd807d48ccb98e81
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Dec 22 09:51:57 2021 +0800

    ASoC: mediatek: Check for error clk pointer
    
    [ Upstream commit 9de2b9286a6dd16966959b3cb34fc2ddfd39213e ]
    
    Yes, you are right and now the return code depending on the
    init_clks().
    
    Fixes: 6078c651947a ("soc: mediatek: Refine scpsys to support multiple platform")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20211222015157.1025853-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c73ccdd62d2162d397c474f70625521f4646bcb6
Author: Ryuta NAKANISHI <nakanishi.ryuta@socionext.com>
Date:   Wed Dec 22 14:19:29 2021 +0900

    phy: uniphier-usb3ss: fix unintended writing zeros to PHY register
    
    [ Upstream commit 898c7a9ec81620125f2463714a0f4dea18ad6e54 ]
    
    Similar to commit 4a90bbb478db ("phy: uniphier-pcie: Fix updating phy
    parameters"), in function uniphier_u3ssphy_set_param(), unintentionally
    write zeros to other fields when writing PHY registers.
    
    Fixes: 5ab43d0f8697 ("phy: socionext: add USB3 PHY driver for UniPhier SoC")
    Signed-off-by: Ryuta NAKANISHI <nakanishi.ryuta@socionext.com>
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Link: https://lore.kernel.org/r/1640150369-4134-1-git-send-email-hayashi.kunihiko@socionext.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d781f4cd8c71fe2b42cf5784860fc1c68644b44d
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Mon Dec 20 19:21:26 2021 +0800

    scsi: block: pm: Always set request queue runtime active in blk_post_runtime_resume()
    
    [ Upstream commit 6e1fcab00a23f7fe9f4fe9704905a790efa1eeab ]
    
    John Garry reported a deadlock that occurs when trying to access a
    runtime-suspended SATA device.  For obscure reasons, the rescan procedure
    causes the link to be hard-reset, which disconnects the device.
    
    The rescan tries to carry out a runtime resume when accessing the device.
    scsi_rescan_device() holds the SCSI device lock and won't release it until
    it can put commands onto the device's block queue.  This can't happen until
    the queue is successfully runtime-resumed or the device is unregistered.
    But the runtime resume fails because the device is disconnected, and
    __scsi_remove_device() can't do the unregistration because it can't get the
    device lock.
    
    The best way to resolve this deadlock appears to be to allow the block
    queue to start running again even after an unsuccessful runtime resume.
    The idea is that the driver or the SCSI error handler will need to be able
    to use the queue to resolve the runtime resume failure.
    
    This patch removes the err argument to blk_post_runtime_resume() and makes
    the routine act as though the resume was successful always.  This fixes the
    deadlock.
    
    Link: https://lore.kernel.org/r/1639999298-244569-4-git-send-email-chenxiang66@hisilicon.com
    Fixes: e27829dc92e5 ("scsi: serialize ->rescan against ->remove")
    Reported-and-tested-by: John Garry <john.garry@huawei.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Xiang Chen <chenxiang66@hisilicon.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e2a16954459e823bd4dcba7e82c380afea9696c
Author: Xiongfeng Wang <wangxiongfeng2@huawei.com>
Date:   Fri Dec 17 15:30:55 2021 +0000

    iommu/iova: Fix race between FQ timeout and teardown
    
    [ Upstream commit d7061627d701c90e1cac1e1e60c45292f64f3470 ]
    
    It turns out to be possible for hotplugging out a device to reach the
    stage of tearing down the device's group and default domain before the
    domain's flush queue has drained naturally. At this point, it is then
    possible for the timeout to expire just before the del_timer() call
    in free_iova_flush_queue(), such that we then proceed to free the FQ
    resources while fq_flush_timeout() is still accessing them on another
    CPU. Crashes due to this have been observed in the wild while removing
    NVMe devices.
    
    Close the race window by using del_timer_sync() to safely wait for any
    active timeout handler to finish before we start to free things. We
    already avoid any locking in free_iova_flush_queue() since the FQ is
    supposed to be inactive anyway, so the potential deadlock scenario does
    not apply.
    
    Fixes: 9a005a800ae8 ("iommu/iova: Add flush timer")
    Reviewed-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Xiongfeng Wang <wangxiongfeng2@huawei.com>
    [ rm: rewrite commit message ]
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Link: https://lore.kernel.org/r/0a365e5b07f14b7344677ad6a9a734966a8422ce.1639753638.git.robin.murphy@arm.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57bc8985753ca65d6a5ecae46cdd5d7e38ff447e
Author: Cezary Rojewski <cezary.rojewski@intel.com>
Date:   Thu Dec 16 12:57:39 2021 +0100

    ASoC: Intel: catpt: Test dmaengine_submit() result before moving on
    
    [ Upstream commit 2a9a72e290d4a4741e673f86b9fba9bfb319786d ]
    
    After calling dmaengine_submit(), the submitted transfer descriptor
    belongs to the DMA engine. Pointer to that descriptor may no longer be
    valid after the call and should be tested before awaiting transfer
    completion.
    
    Reported-by: Kevin Tian <kevin.tian@intel.com>
    Suggested-by: Dave Jiang <dave.jiang@intel.com>
    Fixes: 4fac9b31d0b9 ("ASoC: Intel: Add catpt base members")
    Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lore.kernel.org/r/20211216115743.2130622-2-cezary.rojewski@intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 676049a3d2c6ae7156ec123755b9b99574b7ac4d
Author: Maxim Levitsky <mlevitsk@redhat.com>
Date:   Tue Nov 23 18:10:34 2021 +0200

    iommu/amd: Restore GA log/tail pointer on host resume
    
    [ Upstream commit a8d4a37d1bb93608501d0d0545f902061152669a ]
    
    This will give IOMMU GA log a chance to work after resume
    from s3/s4.
    
    Fixes: 8bda0cfbdc1a6 ("iommu/amd: Detect and initialize guest vAPIC log")
    
    Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
    Link: https://lore.kernel.org/r/20211123161038.48009-2-mlevitsk@redhat.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2bd7c31de1a5f3bb5f9a30327c58501d08e2ad0
Author: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Date:   Fri Aug 20 15:29:57 2021 -0500

    iommu/amd: Remove iommu_init_ga()
    
    [ Upstream commit eb03f2d2f6a4da25d286613717d10add9ce9f175 ]
    
    Since the function has been simplified and only call iommu_init_ga_log(),
    remove the function and replace with iommu_init_ga_log() instead.
    
    Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Link: https://lore.kernel.org/r/20210820202957.187572-4-suravee.suthikulpanit@amd.com
    Fixes: 8bda0cfbdc1a ("iommu/amd: Detect and initialize guest vAPIC log")
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62ea255f2bde86a75314bcb3f6bc3160932e140a
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Nov 22 23:21:58 2021 +0100

    dmaengine: pxa/mmp: stop referencing config->slave_id
    
    [ Upstream commit 134c37fa250a87a7e77c80a7c59ae16c462e46e0 ]
    
    The last driver referencing the slave_id on Marvell PXA and MMP platforms
    was the SPI driver, but this stopped doing so a long time ago, so the
    TODO from the earlier patch can no be removed.
    
    Fixes: b729bf34535e ("spi/pxa2xx: Don't use slave_id of dma_slave_config")
    Fixes: 13b3006b8ebd ("dma: mmp_pdma: add filter function")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/r/20211122222203.4103644-7-arnd@kernel.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0be9ae1e532ecebacc32454c86b8f157796c63a1
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Mon Dec 13 12:16:42 2021 +0100

    mips: fix Kconfig reference to PHYS_ADDR_T_64BIT
    
    [ Upstream commit a670c82d9ca4f1e7385d9d6f26ff41a50fbdd944 ]
    
    Commit d4a451d5fc84 ("arch: remove the ARCH_PHYS_ADDR_T_64BIT config
    symbol") removes config ARCH_PHYS_ADDR_T_64BIT with all instances of that
    config refactored appropriately. Since then, it is recommended to use the
    config PHYS_ADDR_T_64BIT instead.
    
    Commit 171543e75272 ("MIPS: Disallow CPU_SUPPORTS_HUGEPAGES for XPA,EVA")
    introduces the expression "!(32BIT && (ARCH_PHYS_ADDR_T_64BIT || EVA))"
    for config CPU_SUPPORTS_HUGEPAGES, which unintentionally refers to the
    non-existing symbol ARCH_PHYS_ADDR_T_64BIT instead of the intended
    PHYS_ADDR_T_64BIT.
    
    Fix this Kconfig reference to the intended PHYS_ADDR_T_64BIT.
    
    This issue was identified with the script ./scripts/checkkconfigsymbols.py.
    I then reported it on the mailing list and Paul confirmed the mistake in
    the linked email thread.
    
    Link: https://lore.kernel.org/lkml/H8IU3R.H5QVNRA077PT@crapouillou.net/
    Suggested-by: Paul Cercueil <paul@crapouillou.net>
    Fixes: 171543e75272 ("MIPS: Disallow CPU_SUPPORTS_HUGEPAGES for XPA,EVA")
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88d78b25db1f540179c7a17495acd130d7b446b8
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Mon Dec 13 12:16:35 2021 +0100

    mips: add SYS_HAS_CPU_MIPS64_R5 config for MIPS Release 5 support
    
    [ Upstream commit fd4eb90b164442cb1e9909f7845e12a0835ac699 ]
    
    Commit ab7c01fdc3cf ("mips: Add MIPS Release 5 support") adds the two
    configs CPU_MIPS32_R5 and CPU_MIPS64_R5, which depend on the corresponding
    SYS_HAS_CPU_MIPS32_R5 and SYS_HAS_CPU_MIPS64_R5, respectively.
    
    The config SYS_HAS_CPU_MIPS32_R5 was already introduced with commit
    c5b367835cfc ("MIPS: Add support for XPA."); the config
    SYS_HAS_CPU_MIPS64_R5, however, was never introduced.
    
    Hence, ./scripts/checkkconfigsymbols.py warns:
    
      SYS_HAS_CPU_MIPS64_R5
      Referencing files: arch/mips/Kconfig, arch/mips/include/asm/cpu-type.h
    
    Add the definition for config SYS_HAS_CPU_MIPS64_R5 under the assumption
    that SYS_HAS_CPU_MIPS64_R5 follows the same pattern as the existing
    SYS_HAS_CPU_MIPS32_R5 and SYS_HAS_CPU_MIPS64_R6.
    
    Fixes: ab7c01fdc3cf ("mips: Add MIPS Release 5 support")
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51b8e814bcef7cea74560b4bd94e9b5777f591ab
Author: Dillon Min <dillon.minfei@gmail.com>
Date:   Tue Oct 26 15:11:21 2021 +0800

    clk: stm32: Fix ltdc's clock turn off by clk_disable_unused() after system enter shell
    
    [ Upstream commit 6fc058a72f3b7b07fc4de6d66ad1f68951b00f6e ]
    
    stm32's clk driver register two ltdc gate clk to clk core by
    clk_hw_register_gate() and clk_hw_register_composite()
    
    first: 'stm32f429_gates[]', clk name is 'ltdc', which no user to use.
    second: 'stm32f429_aux_clk[]', clk name is 'lcd-tft', used by ltdc driver
    
    both of them point to the same offset of stm32's RCC register. after
    kernel enter console, clk core turn off ltdc's clk as 'stm32f429_gates[]'
    is no one to use. but, actually 'stm32f429_aux_clk[]' is in use.
    
    stm32f469/746/769 have the same issue, fix it.
    
    Fixes: daf2d117cbca ("clk: stm32f4: Add lcd-tft clock")
    Link: https://lore.kernel.org/linux-arm-kernel/1590564453-24499-7-git-send-email-dillon.minfei@gmail.com/
    Link: https://lore.kernel.org/lkml/CAPTRvHkf0cK_4ZidM17rPo99gWDmxgqFt4CDUjqFFwkOeQeFDg@mail.gmail.com/
    Signed-off-by: Dillon Min <dillon.minfei@gmail.com>
    Reviewed-by: Patrice Chotard <patrice.chotard@foss.st.com>
    Acked-by: Gabriel Fernandez <gabriel.fernandez@foss.st.com>
    Acked-by: Stephen Boyd <sboyd@kernel.org>
    Link: https://lore.kernel.org/r/1635232282-3992-10-git-send-email-dillon.minfei@gmail.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dff359e04260110ac328c2bbdde3c1415f62b22f
Author: Frank Rowand <frank.rowand@sony.com>
Date:   Sun Dec 12 16:18:52 2021 -0600

    of: unittest: 64 bit dma address test requires arch support
    
    [ Upstream commit 9fd4cf5d3571b27d746b8ead494a3f051485b679 ]
    
    If an architecture does not support 64 bit dma addresses then testing
    for an expected dma address >= 0x100000000 will fail.
    
    Fixes: e0d072782c73 ("dma-mapping: introduce DMA range map, supplanting dma_pfn_offset")
    Signed-off-by: Frank Rowand <frank.rowand@sony.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/r/20211212221852.233295-1-frowand.list@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 918105df78b7b1306a62fa61d091f4e538b13bc9
Author: Jim Quinlan <jim2101024@gmail.com>
Date:   Fri Dec 10 13:46:35 2021 -0500

    of: unittest: fix warning on PowerPC frame size warning
    
    [ Upstream commit a8d61a9112ad0c9216ab45d050991e07bc4f3408 ]
    
    The struct device variable "dev_bogus" was triggering this warning
    on a PowerPC build:
    
        drivers/of/unittest.c: In function 'of_unittest_dma_ranges_one.constprop':
        [...] >> The frame size of 1424 bytes is larger than 1024 bytes
                 [-Wframe-larger-than=]
    
    This variable is now dynamically allocated.
    
    Fixes: e0d072782c734 ("dma-mapping: introduce DMA range map, supplanting dma_pfn_offset")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Jim Quinlan <jim2101024@gmail.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Frank Rowand <frank.rowand@sony.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/r/20211210184636.7273-2-jim2101024@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e04518b1dd96d36571d5fafad4190890da9c503
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Dec 15 11:15:50 2021 +0800

    ASoC: rt5663: Handle device_property_read_u32_array error codes
    
    [ Upstream commit 2167c0b205960607fb136b4bb3c556a62be1569a ]
    
    The return value of device_property_read_u32_array() is not always 0.
    To catch the exception in case that devm_kzalloc failed and the
    rt5663->imp_table was NULL, which caused the failure of
    device_property_read_u32_array.
    
    Fixes: 450f0f6a8fb4 ("ASoC: rt5663: Add the manual offset field to compensate the DC offset")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20211215031550.70702-1-jiasheng@iscas.ac.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c0d9c815ce87257e2eba1a346c27211e0867b81
Author: Avihai Horon <avihaih@nvidia.com>
Date:   Thu Dec 9 15:16:07 2021 +0200

    RDMA/cma: Let cma_resolve_ib_dev() continue search even after empty entry
    
    [ Upstream commit 20679094a0161c94faf77e373fa3f7428a8e14bd ]
    
    Currently, when cma_resolve_ib_dev() searches for a matching GID it will
    stop searching after encountering the first empty GID table entry. This
    behavior is wrong since neither IB nor RoCE spec enforce tightly packed
    GID tables.
    
    For example, when the matching valid GID entry exists at index N, and if a
    GID entry is empty at index N-1, cma_resolve_ib_dev() will fail to find
    the matching valid entry.
    
    Fix it by making cma_resolve_ib_dev() continue searching even after
    encountering missing entries.
    
    Fixes: f17df3b0dede ("RDMA/cma: Add support for AF_IB to rdma_resolve_addr()")
    Link: https://lore.kernel.org/r/b7346307e3bb396c43d67d924348c6c496493991.1639055490.git.leonro@nvidia.com
    Signed-off-by: Avihai Horon <avihaih@nvidia.com>
    Reviewed-by: Mark Zhang <markzhang@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2432d325f9466101a1c91e4350ea96cda8c46ecc
Author: Avihai Horon <avihaih@nvidia.com>
Date:   Thu Dec 9 15:16:06 2021 +0200

    RDMA/core: Let ib_find_gid() continue search even after empty entry
    
    [ Upstream commit 483d805191a23191f8294bbf9b4e94836f5d92e4 ]
    
    Currently, ib_find_gid() will stop searching after encountering the first
    empty GID table entry. This behavior is wrong since neither IB nor RoCE
    spec enforce tightly packed GID tables.
    
    For example, when a valid GID entry exists at index N, and if a GID entry
    is empty at index N-1, ib_find_gid() will fail to find the valid entry.
    
    Fix it by making ib_find_gid() continue searching even after encountering
    missing entries.
    
    Fixes: 5eb620c81ce3 ("IB/core: Add helpers for uncached GID and P_Key searches")
    Link: https://lore.kernel.org/r/e55d331b96cecfc2cf19803d16e7109ea966882d.1639055490.git.leonro@nvidia.com
    Signed-off-by: Avihai Horon <avihaih@nvidia.com>
    Reviewed-by: Mark Zhang <markzhang@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d77916df161b9eb857ab600a2cc35c0168b490c2
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Wed Dec 8 17:36:52 2021 +0000

    powerpc/powermac: Add additional missing lockdep_register_key()
    
    [ Upstream commit b149d5d45ac9171ed699a256f026c8ebef901112 ]
    
    Commit df1f679d19ed ("powerpc/powermac: Add missing
    lockdep_register_key()") fixed a problem that was causing a WARNING.
    
    There are two other places in the same file with the same problem
    originating from commit 9e607f72748d ("i2c_powermac: shut up lockdep
    warning").
    
    Add missing lockdep_register_key()
    
    Fixes: 9e607f72748d ("i2c_powermac: shut up lockdep warning")
    Reported-by: Erhard Furtner <erhard_f@mailbox.org>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Depends-on: df1f679d19ed ("powerpc/powermac: Add missing lockdep_register_key()")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=200055
    Link: https://lore.kernel.org/r/2c7e421874e21b2fb87813d768cf662f630c2ad4.1638984999.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b3783e517f63443c3f2c1413c71866eab66ae74
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 6 23:27:26 2021 +0100

    PCI/MSI: Fix pci_irq_vector()/pci_irq_get_affinity()
    
    [ Upstream commit 29bbc35e29d9b6347780dcacde2deb4b39344167 ]
    
    pci_irq_vector() and pci_irq_get_affinity() use the list position to find the
    MSI-X descriptor at a given index. That's correct for the normal case where
    the entry number is the same as the list position.
    
    But it's wrong for cases where MSI-X was allocated with an entries array
    describing sparse entry numbers into the hardware message descriptor
    table. That's inconsistent at best.
    
    Make it always check the entry number because that's what the zero base
    index really means. This change won't break existing users which use a
    sparse entries array for allocation because these users retrieve the Linux
    interrupt number from the entries array after allocation and none of them
    uses pci_irq_vector() or pci_irq_get_affinity().
    
    Fixes: aff171641d18 ("PCI: Provide sensible IRQ vector alloc/free routines")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
    Acked-by: Bjorn Helgaas <bhelgaas@google.com>
    Link: https://lore.kernel.org/r/20211206210223.929792157@linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7be2a0bcaf8e83f9a5eb47f98ad954d665c82dfd
Author: Kamal Heib <kamalheib1@gmail.com>
Date:   Mon Dec 6 22:13:14 2021 +0200

    RDMA/qedr: Fix reporting max_{send/recv}_wr attrs
    
    [ Upstream commit b1a4da64bfc189510e08df1ccb1c589e667dc7a3 ]
    
    Fix the wrongly reported max_send_wr and max_recv_wr attributes for user
    QP by making sure to save their valuse on QP creation, so when query QP is
    called the attributes will be reported correctly.
    
    Fixes: cecbcddf6461 ("qedr: Add support for QP verbs")
    Link: https://lore.kernel.org/r/20211206201314.124947-1-kamalheib1@gmail.com
    Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
    Acked-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e19469468b7bebe3c5c3e1da348fb66adcdf510c
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Dec 3 15:19:39 2021 -0800

    scsi: ufs: Fix race conditions related to driver data
    
    [ Upstream commit 21ad0e49085deb22c094f91f9da57319a97188e4 ]
    
    The driver data pointer must be set before any callbacks are registered
    that use that pointer. Hence move the initialization of that pointer from
    after the ufshcd_init() call to inside ufshcd_init().
    
    Link: https://lore.kernel.org/r/20211203231950.193369-7-bvanassche@acm.org
    Fixes: 3b1d05807a9a ("[SCSI] ufs: Segregate PCI Specific Code")
    Reported-by: Alexey Dobriyan <adobriyan@gmail.com>
    Tested-by: Bean Huo <beanhuo@micron.com>
    Reviewed-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed43b2e048fec0d206734d46e294cdcf84f6b339
Author: Hector Martin <marcan@marcan.st>
Date:   Sat Nov 20 12:13:43 2021 +0900

    iommu/io-pgtable-arm: Fix table descriptor paddr formatting
    
    [ Upstream commit 9abe2ac834851a7d0b0756e295cf7a292c45ca53 ]
    
    Table descriptors were being installed without properly formatting the
    address using paddr_to_iopte, which does not match up with the
    iopte_deref in __arm_lpae_map. This is incorrect for the LPAE pte
    format, as it does not handle the high bits properly.
    
    This was found on Apple T6000 DARTs, which require a new pte format
    (different shift); adding support for that to
    paddr_to_iopte/iopte_to_paddr caused it to break badly, as even <48-bit
    addresses would end up incorrect in that case.
    
    Fixes: 6c89928ff7a0 ("iommu/io-pgtable-arm: Support 52-bit physical address")
    Acked-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Hector Martin <marcan@marcan.st>
    Link: https://lore.kernel.org/r/20211120031343.88034-1-marcan@marcan.st
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9e4d1fb4590956add5cc4cd01b6d471f4475489
Author: Stafford Horne <shorne@gmail.com>
Date:   Sat Dec 4 07:10:18 2021 +0900

    openrisc: Add clone3 ABI wrapper
    
    [ Upstream commit 433fe39f674d58bc7a3e8254a5d2ffc290b7e04e ]
    
    Like fork and clone the clone3 syscall needs a wrapper to save callee
    saved registers, which is required by the OpenRISC ABI.  This came up
    after auditing code following a discussion with Rob Landley and Arnd
    Bergmann [0].
    
    Tested with the clone3 kselftests and there were no issues.
    
    [0] https://lore.kernel.org/all/41206fc7-f8ce-98aa-3718-ba3e1431e320@landley.net/T/#m9c0cdb2703813b9df4da04cf6b30de1f1aa89944
    
    Fixes: 07e83dfbe16c ("openrisc: Enable the clone3 syscall")
    Cc: Rob Landley <rob@landley.net>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Stafford Horne <shorne@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 551a785c26f6ff41cccd527e7bd9f032f91332c2
Author: Todd Kjos <tkjos@google.com>
Date:   Tue Nov 30 10:51:49 2021 -0800

    binder: fix handling of error during copy
    
    [ Upstream commit fe6b1869243f23a485a106c214bcfdc7aa0ed593 ]
    
    If a memory copy function fails to copy the whole buffer,
    a positive integar with the remaining bytes is returned.
    In binder_translate_fd_array() this can result in an fd being
    skipped due to the failed copy, but the loop continues
    processing fds since the early return condition expects a
    negative integer on error.
    
    Fix by returning "ret > 0 ? -EINVAL : ret" to handle this case.
    
    Fixes: bb4a2e48d510 ("binder: return errors from buffer copy functions")
    Suggested-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Link: https://lore.kernel.org/r/20211130185152.437403-2-tkjos@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88ddf033a5e480de17a914eaf26262e73aa5b5d0
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Dec 3 00:42:06 2021 -0800

    char/mwave: Adjust io port register size
    
    [ Upstream commit f5912cc19acd7c24b2dbf65a6340bf194244f085 ]
    
    Using MKWORD() on a byte-sized variable results in OOB read. Expand the
    size of the reserved area so both MKWORD and MKBYTE continue to work
    without overflow. Silences this warning on a -Warray-bounds build:
    
    drivers/char/mwave/3780i.h:346:22: error: array subscript 'short unsigned int[0]' is partly outside array bounds of 'DSP_ISA_SLAVE_CONTROL[1]' [-Werror=array-bounds]
      346 | #define MKWORD(var) (*((unsigned short *)(&var)))
          |                     ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/char/mwave/3780i.h:356:40: note: in definition of macro 'OutWordDsp'
      356 | #define OutWordDsp(index,value)   outw(value,usDspBaseIO+index)
          |                                        ^~~~~
    drivers/char/mwave/3780i.c:373:41: note: in expansion of macro 'MKWORD'
      373 |         OutWordDsp(DSP_IsaSlaveControl, MKWORD(rSlaveControl));
          |                                         ^~~~~~
    drivers/char/mwave/3780i.c:358:31: note: while referencing 'rSlaveControl'
      358 |         DSP_ISA_SLAVE_CONTROL rSlaveControl;
          |                               ^~~~~~~~~~~~~
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20211203084206.3104326-1-keescook@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8937aee4c0fa9f57e0afe7d0b4ca5bf1cd4c5cd9
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Dec 2 09:38:33 2021 +0100

    ALSA: usb-audio: Drop superfluous '0' in Presonus Studio 1810c's ID
    
    [ Upstream commit 1e583aef12aa74afd37c1418255cc4b74e023236 ]
    
    The vendor ID of Presonus Studio 1810c had a superfluous '0' in its
    USB ID.  Drop it.
    
    Fixes: 8dc5efe3d17c ("ALSA: usb-audio: Add support for Presonus Studio 1810c")
    Link: https://lore.kernel.org/r/20211202083833.17784-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcd533417fd0f80041cb9866946bfec76b784ffc
Author: Bixuan Cui <cuibixuan@linux.alibaba.com>
Date:   Wed Dec 1 16:58:54 2021 +0800

    ALSA: oss: fix compile error when OSS_DEBUG is enabled
    
    [ Upstream commit 8e7daf318d97f25e18b2fc7eb5909e34cd903575 ]
    
    Fix compile error when OSS_DEBUG is enabled:
        sound/core/oss/pcm_oss.c: In function 'snd_pcm_oss_set_trigger':
        sound/core/oss/pcm_oss.c:2055:10: error: 'substream' undeclared (first
        use in this function); did you mean 'csubstream'?
          pcm_dbg(substream->pcm, "pcm_oss: trigger = 0x%x\n", trigger);
                  ^
    
    Fixes: 61efcee8608c ("ALSA: oss: Use standard printk helpers")
    Signed-off-by: Bixuan Cui <cuibixuan@linux.alibaba.com>
    Link: https://lore.kernel.org/r/1638349134-110369-1-git-send-email-cuibixuan@linux.alibaba.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd99aeb978451eee9e623be496cd6f9bbbc95e37
Author: Waiman Long <longman@redhat.com>
Date:   Thu Nov 18 14:14:36 2021 -0500

    clocksource: Avoid accidental unstable marking of clocksources
    
    [ Upstream commit c86ff8c55b8ae68837b2fa59dc0c203907e9a15f ]
    
    Since commit db3a34e17433 ("clocksource: Retry clock read if long delays
    detected") and commit 2e27e793e280 ("clocksource: Reduce clocksource-skew
    threshold"), it is found that tsc clocksource fallback to hpet can
    sometimes happen on both Intel and AMD systems especially when they are
    running stressful benchmarking workloads. Of the 23 systems tested with
    a v5.14 kernel, 10 of them have switched to hpet clock source during
    the test run.
    
    The result of falling back to hpet is a drastic reduction of performance
    when running benchmarks. For example, the fio performance tests can
    drop up to 70% whereas the iperf3 performance can drop up to 80%.
    
    4 hpet fallbacks happened during bootup. They were:
    
      [    8.749399] clocksource: timekeeping watchdog on CPU13: hpet read-back delay of 263750ns, attempt 4, marking unstable
      [   12.044610] clocksource: timekeeping watchdog on CPU19: hpet read-back delay of 186166ns, attempt 4, marking unstable
      [   17.336941] clocksource: timekeeping watchdog on CPU28: hpet read-back delay of 182291ns, attempt 4, marking unstable
      [   17.518565] clocksource: timekeeping watchdog on CPU34: hpet read-back delay of 252196ns, attempt 4, marking unstable
    
    Other fallbacks happen when the systems were running stressful
    benchmarks. For example:
    
      [ 2685.867873] clocksource: timekeeping watchdog on CPU117: hpet read-back delay of 57269ns, attempt 4, marking unstable
      [46215.471228] clocksource: timekeeping watchdog on CPU8: hpet read-back delay of 61460ns, attempt 4, marking unstable
    
    Commit 2e27e793e280 ("clocksource: Reduce clocksource-skew threshold"),
    changed the skew margin from 100us to 50us. I think this is too small
    and can easily be exceeded when running some stressful workloads on a
    thermally stressed system.  So it is switched back to 100us.
    
    Even a maximum skew margin of 100us may be too small in for some systems
    when booting up especially if those systems are under thermal stress. To
    eliminate the case that the large skew is due to the system being too
    busy slowing down the reading of both the watchdog and the clocksource,
    an extra consecutive read of watchdog clock is being done to check this.
    
    The consecutive watchdog read delay is compared against
    WATCHDOG_MAX_SKEW/2. If the delay exceeds the limit, we assume that
    the system is just too busy. A warning will be printed to the console
    and the clock skew check is skipped for this round.
    
    Fixes: db3a34e17433 ("clocksource: Retry clock read if long delays detected")
    Fixes: 2e27e793e280 ("clocksource: Reduce clocksource-skew threshold")
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cacc6c30e3eb7c452132ee5b273e248d2f263323
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Thu May 27 12:01:22 2021 -0700

    clocksource: Reduce clocksource-skew threshold
    
    [ Upstream commit 2e27e793e280ff12cb5c202a1214c08b0d3a0f26 ]
    
    Currently, WATCHDOG_THRESHOLD is set to detect a 62.5-millisecond skew in
    a 500-millisecond WATCHDOG_INTERVAL.  This requires that clocks be skewed
    by more than 12.5% in order to be marked unstable.  Except that a clock
    that is skewed by that much is probably destroying unsuspecting software
    right and left.  And given that there are now checks for false-positive
    skews due to delays between reading the two clocks, it should be possible
    to greatly decrease WATCHDOG_THRESHOLD, at least for fine-grained clocks
    such as TSC.
    
    Therefore, add a new uncertainty_margin field to the clocksource structure
    that contains the maximum uncertainty in nanoseconds for the corresponding
    clock.  This field may be initialized manually, as it is for
    clocksource_tsc_early and clocksource_jiffies, which is copied to
    refined_jiffies.  If the field is not initialized manually, it will be
    computed at clock-registry time as the period of the clock in question
    based on the scale and freq parameters to __clocksource_update_freq_scale()
    function.  If either of those two parameters are zero, the
    tens-of-milliseconds WATCHDOG_THRESHOLD is used as a cowardly alternative
    to dividing by zero.  No matter how the uncertainty_margin field is
    calculated, it is bounded below by twice WATCHDOG_MAX_SKEW, that is, by 100
    microseconds.
    
    Note that manually initialized uncertainty_margin fields are not adjusted,
    but there is a WARN_ON_ONCE() that triggers if any such field is less than
    twice WATCHDOG_MAX_SKEW.  This WARN_ON_ONCE() is intended to discourage
    production use of the one-nanosecond uncertainty_margin values that are
    used to test the clock-skew code itself.
    
    The actual clock-skew check uses the sum of the uncertainty_margin fields
    of the two clocksource structures being compared.  Integer overflow is
    avoided because the largest computed value of the uncertainty_margin
    fields is one billion (10^9), and double that value fits into an
    unsigned int.  However, if someone manually specifies (say) UINT_MAX,
    they will get what they deserve.
    
    Note that the refined_jiffies uncertainty_margin field is initialized to
    TICK_NSEC, which means that skew checks involving this clocksource will
    be sufficently forgiving.  In a similar vein, the clocksource_tsc_early
    uncertainty_margin field is initialized to 32*NSEC_PER_MSEC, which
    replicates the current behavior and allows custom setting if needed
    in order to address the rare skews detected for this clocksource in
    current mainline.
    
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Feng Tang <feng.tang@intel.com>
    Link: https://lore.kernel.org/r/20210527190124.440372-4-paulmck@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86ad478c99d2fc33f5c936b37c79bf17821136e0
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Tue Nov 30 09:42:37 2021 +0100

    powerpc/32s: Fix shift-out-of-bounds in KASAN init
    
    [ Upstream commit af11dee4361b3519981fa04d014873f9d9edd6ac ]
    
    ================================================================================
    UBSAN: shift-out-of-bounds in arch/powerpc/mm/kasan/book3s_32.c:22:23
    shift exponent -1 is negative
    CPU: 0 PID: 0 Comm: swapper Not tainted 5.15.5-gentoo-PowerMacG4 #9
    Call Trace:
    [c214be60] [c0ba0048] dump_stack_lvl+0x80/0xb0 (unreliable)
    [c214be80] [c0b99288] ubsan_epilogue+0x10/0x5c
    [c214be90] [c0b98fe0] __ubsan_handle_shift_out_of_bounds+0x94/0x138
    [c214bf00] [c1c0f010] kasan_init_region+0xd8/0x26c
    [c214bf30] [c1c0ed84] kasan_init+0xc0/0x198
    [c214bf70] [c1c08024] setup_arch+0x18/0x54c
    [c214bfc0] [c1c037f0] start_kernel+0x90/0x33c
    [c214bff0] [00003610] 0x3610
    ================================================================================
    
    This happens when the directly mapped memory is a power of 2.
    
    Fix it by checking the shift and set the result to 0 when shift is -1
    
    Fixes: 7974c4732642 ("powerpc/32s: Implement dedicated kasan_init_region()")
    Reported-by: Erhard Furtner <erhard_f@mailbox.org>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=215169
    Link: https://lore.kernel.org/r/15cbc3439d4ad988b225e2119ec99502a5cc6ad3.1638261744.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef798cd035f316a537fee8ed170c127f12407085
Author: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
Date:   Wed Jul 21 01:48:29 2021 -0400

    powerpc/perf: Fix PMU callbacks to clear pending PMI before resetting an overflown PMC
    
    [ Upstream commit 2c9ac51b850d84ee496b0a5d832ce66d411ae552 ]
    
    Running perf fuzzer showed below in dmesg logs:
      "Can't find PMC that caused IRQ"
    
    This means a PMU exception happened, but none of the PMC's (Performance
    Monitor Counter) were found to be overflown. There are some corner cases
    that clears the PMCs after PMI gets masked. In such cases, the perf
    interrupt handler will not find the active PMC values that had caused
    the overflow and thus leads to this message while replaying.
    
    Case 1: PMU Interrupt happens during replay of other interrupts and
    counter values gets cleared by PMU callbacks before replay:
    
    During replay of interrupts like timer, __do_irq() and doorbell
    exception, we conditionally enable interrupts via may_hard_irq_enable().
    This could potentially create a window to generate a PMI. Since irq soft
    mask is set to ALL_DISABLED, the PMI will get masked here. We could get
    IPIs run before perf interrupt is replayed and the PMU events could
    be deleted or stopped. This will change the PMU SPR values and resets
    the counters. Snippet of ftrace log showing PMU callbacks invoked in
    __do_irq():
    
      <idle>-0 [051] dns. 132025441306354: __do_irq <-call_do_irq
      <idle>-0 [051] dns. 132025441306430: irq_enter <-__do_irq
      <idle>-0 [051] dns. 132025441306503: irq_enter_rcu <-__do_irq
      <idle>-0 [051] dnH. 132025441306599: xive_get_irq <-__do_irq
      <<>>
      <idle>-0 [051] dnH. 132025441307770: generic_smp_call_function_single_interrupt <-smp_ipi_demux_relaxed
      <idle>-0 [051] dnH. 132025441307839: flush_smp_call_function_queue <-smp_ipi_demux_relaxed
      <idle>-0 [051] dnH. 132025441308057: _raw_spin_lock <-event_function
      <idle>-0 [051] dnH. 132025441308206: power_pmu_disable <-perf_pmu_disable
      <idle>-0 [051] dnH. 132025441308337: power_pmu_del <-event_sched_out
      <idle>-0 [051] dnH. 132025441308407: power_pmu_read <-power_pmu_del
      <idle>-0 [051] dnH. 132025441308477: read_pmc <-power_pmu_read
      <idle>-0 [051] dnH. 132025441308590: isa207_disable_pmc <-power_pmu_del
      <idle>-0 [051] dnH. 132025441308663: write_pmc <-power_pmu_del
      <idle>-0 [051] dnH. 132025441308787: power_pmu_event_idx <-perf_event_update_userpage
      <idle>-0 [051] dnH. 132025441308859: rcu_read_unlock_strict <-perf_event_update_userpage
      <idle>-0 [051] dnH. 132025441308975: power_pmu_enable <-perf_pmu_enable
      <<>>
      <idle>-0 [051] dnH. 132025441311108: irq_exit <-__do_irq
      <idle>-0 [051] dns. 132025441311319: performance_monitor_exception <-replay_soft_interrupts
    
    Case 2: PMI's masked during local_* operations, example local_add(). If
    the local_add() operation happens within a local_irq_save(), replay of
    PMI will be during local_irq_restore(). Similar to case 1, this could
    also create a window before replay where PMU events gets deleted or
    stopped.
    
    Fix it by updating the PMU callback function power_pmu_disable() to
    check for pending perf interrupt. If there is an overflown PMC and
    pending perf interrupt indicated in paca, clear the PMI bit in paca to
    drop that sample. Clearing of PMI bit is done in power_pmu_disable()
    since disable is invoked before any event gets deleted/stopped. With
    this fix, if there are more than one event running in the PMU, there is
    a chance that we clear the PMI bit for the event which is not getting
    deleted/stopped. The other events may still remain active. Hence to make
    sure we don't drop valid sample in such cases, another check is added in
    power_pmu_enable. This checks if there is an overflown PMC found among
    the active events and if so enable back the PMI bit. Two new helper
    functions are introduced to clear/set the PMI, ie
    clear_pmi_irq_pending() and set_pmi_irq_pending(). Helper function
    pmi_irq_pending() is introduced to give a warning if there is pending
    PMI bit in paca, but no PMC is overflown.
    
    Also there are corner cases which result in performance monitor
    interrupts being triggered during power_pmu_disable(). This happens
    since PMXE bit is not cleared along with disabling of other MMCR0 bits
    in the pmu_disable. Such PMI's could leave the PMU running and could
    trigger PMI again which will set MMCR0 PMAO bit. This could lead to
    spurious interrupts in some corner cases. Example, a timer after
    power_pmu_del() which will re-enable interrupts and triggers a PMI again
    since PMAO bit is still set. But fails to find valid overflow since PMC
    was cleared in power_pmu_del(). Fix that by disabling PMXE along with
    disabling of other MMCR0 bits in power_pmu_disable().
    
    We can't just replay PMI any time. Hence this approach is preferred
    rather than replaying PMI before resetting overflown PMC. Patch also
    documents core-book3s on a race condition which can trigger these PMC
    messages during idle path in PowerNV.
    
    Fixes: f442d004806e ("powerpc/64s: Add support to mask perf interrupts and replay them")
    Reported-by: Nageswara R Sastry <nasastry@in.ibm.com>
    Suggested-by: Nicholas Piggin <npiggin@gmail.com>
    Suggested-by: Madhavan Srinivasan <maddy@linux.ibm.com>
    Signed-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
    Tested-by: Nageswara R Sastry <rnsastry@linux.ibm.com>
    Reviewed-by: Nicholas Piggin <npiggin@gmail.com>
    [mpe: Make pmi_irq_pending() return bool, reflow/reword some comments]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1626846509-1350-2-git-send-email-atrajeev@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58014442a9e8e92f99a634ed8fd5282768d09e41
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Mon Feb 8 15:10:24 2021 +0000

    powerpc/irq: Add helper to set regs->softe
    
    [ Upstream commit fb5608fd117a8b48752d2b5a7e70847c1ed33d33 ]
    
    regs->softe doesn't exist on PPC32.
    
    Add irq_soft_mask_regs_set_state() helper to set regs->softe.
    This helper will void on PPC32.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/5f37d1177a751fdbca79df461d283850ca3a34a2.1612796617.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9ffa84a3bd1e7afc1fd2a5836bf0c87ff4feb96
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Sat Jan 30 23:08:29 2021 +1000

    powerpc/perf: move perf irq/nmi handling details into traps.c
    
    [ Upstream commit 156b5371a9c2482a9ad23ec82d1a4f89a3ab430d ]
    
    This is required in order to allow more significant differences between
    NMI type interrupt handlers and regular asynchronous handlers.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210130130852.2952424-20-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0758b3be46d9d3fcc54f4a7613143311b062eef
Author: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
Date:   Thu Nov 26 11:54:44 2020 -0500

    powerpc/perf: MMCR0 control for PMU registers under PMCC=00
    
    [ Upstream commit 91668ab7db4bcfae332e561df1de2401f3f18553 ]
    
    PowerISA v3.1 introduces new control bit (PMCCEXT) for restricting
    access to group B PMU registers in problem state when
    MMCR0 PMCC=0b00. In problem state and when MMCR0 PMCC=0b00,
    setting the Monitor Mode Control Register bit 54 (MMCR0 PMCCEXT),
    will restrict read permission on Group B Performance Monitor
    Registers (SIER, SIAR, SDAR and MMCR1). When this bit is set to zero,
    group B registers will be readable. In other platforms (like power9),
    the older behaviour is retained where group B PMU SPRs are readable.
    
    Patch adds support for MMCR0 PMCCEXT bit in power10 by enabling
    this bit during boot and during the PMU event enable/disable callback
    functions.
    
    Signed-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1606409684-1589-8-git-send-email-atrajeev@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4df6db5b0b8a5d43a7f451385f162df8a45b7ed
Author: Jordan Niethe <jniethe5@gmail.com>
Date:   Wed Oct 14 18:28:37 2020 +1100

    powerpc/64s: Convert some cpu_setup() and cpu_restore() functions to C
    
    [ Upstream commit 344fbab991a568dc33ad90711b489d870e18d26d ]
    
    The only thing keeping the cpu_setup() and cpu_restore() functions
    used in the cputable entries for Power7, Power8, Power9 and Power10 in
    assembly was cpu_restore() being called before there was a stack in
    generic_secondary_smp_init(). Commit ("powerpc/64: Set up a kernel
    stack for secondaries before cpu_restore()") means that it is now
    possible to use C.
    
    Rewrite the functions in C so they are a little bit easier to read.
    This is not changing their functionality.
    
    Signed-off-by: Jordan Niethe <jniethe5@gmail.com>
    [mpe: Tweak copyright and authorship notes]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20201014072837.24539-2-jniethe5@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9c9d2ff642365b2740cd159f0fdc42165290af1
Author: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
Date:   Tue Nov 9 11:30:45 2021 +0100

    dt-bindings: thermal: Fix definition of cooling-maps contribution property
    
    [ Upstream commit 49bcb1506f2e095262c01bda7fd1c0db524c91e2 ]
    
    When converting the thermal-zones bindings to yaml the definition of the
    contribution property changed. The intention is the same, an integer
    value expressing a ratio of a sum on how much cooling is provided by the
    device to the zone. But after the conversion the integer value is
    limited to the range 0 to 100 and expressed as a percentage.
    
    This is problematic for two reasons.
    
    - This do not match how the binding is used. Out of the 18 files that
      make use of the property only two (ste-dbx5x0.dtsi and
      ste-hrefv60plus.dtsi) sets it at a value that satisfy the binding,
      100. The remaining 16 files set the value higher and fail to validate.
    
    - Expressing the value as a percentage instead of a ratio of the sum is
      confusing as there is nothing to enforce the sum in the zone is not
      greater then 100.
    
    This patch restore the pre yaml conversion description and removes the
    value limitation allowing the usage of the bindings to validate.
    
    Fixes: 1202a442a31fd2e5 ("dt-bindings: thermal: Add yaml bindings for thermal zones")
    Reported-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Signed-off-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Link: https://lore.kernel.org/r/20211109103045.1403686-1-niklas.soderlund+renesas@ragnatech.se
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2bd8d937957f663e2473c977ec0be83cd9e86c88
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Thu Nov 25 10:51:57 2021 +0100

    ASoC: uniphier: drop selecting non-existing SND_SOC_UNIPHIER_AIO_DMA
    
    [ Upstream commit 49f893253ab43566e34332a969324531fea463f6 ]
    
    Commit f37fe2f9987b ("ASoC: uniphier: add support for UniPhier AIO common
    driver") adds configs SND_SOC_UNIPHIER_{LD11,PXS2}, which select the
    non-existing config SND_SOC_UNIPHIER_AIO_DMA.
    
    Hence, ./scripts/checkkconfigsymbols.py warns:
    
      SND_SOC_UNIPHIER_AIO_DMA
      Referencing files: sound/soc/uniphier/Kconfig
    
    Probably, there is actually no further config intended to be selected
    here. So, just drop selecting the non-existing config.
    
    Fixes: f37fe2f9987b ("ASoC: uniphier: add support for UniPhier AIO common driver")
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Link: https://lore.kernel.org/r/20211125095158.8394-2-lukas.bulwahn@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a821af769bbf3c8c9e813af767a9bd4330d5be3
Author: Peiwei Hu <jlu.hpw@foxmail.com>
Date:   Fri Nov 19 17:12:18 2021 +0800

    powerpc/prom_init: Fix improper check of prom_getprop()
    
    [ Upstream commit 869fb7e5aecbc163003f93f36dcc26d0554319f6 ]
    
    prom_getprop() can return PROM_ERROR. Binary operator can not identify
    it.
    
    Fixes: 94d2dde738a5 ("[POWERPC] Efika: prune fixups and make them more carefull")
    Signed-off-by: Peiwei Hu <jlu.hpw@foxmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/tencent_BA28CC6897B7C95A92EB8C580B5D18589105@qq.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ca761ef946dadbc01965963c3a63d001ab35bfa
Author: Adam Ford <aford173@gmail.com>
Date:   Wed Nov 17 07:32:02 2021 -0600

    clk: imx8mn: Fix imx8mn_clko1_sels
    
    [ Upstream commit 570727e9acfac1c2330a01dd5e1272e9c3acec08 ]
    
    When attempting to use sys_pll1_80m as the parent for clko1, the
    system hangs.  This is due to the fact that the source select
    for sys_pll1_80m was incorrectly pointing to m7_alt_pll_clk, which
    doesn't yet exist.
    
    According to Rev 3 of the TRM, The imx8mn_clko1_sels also incorrectly
    references an osc_27m which does not exist, nor does an entry for
    source select bits 010b.  Fix both by inserting a dummy clock into
    the missing space in the table and renaming the incorrectly name clock
    with dummy.
    
    Fixes: 96d6392b54db ("clk: imx: Add support for i.MX8MN clock driver")
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Reviewed-by: Fabio Estevam <festevam@gmail.com>
    Link: https://lore.kernel.org/r/20211117133202.775633-1-aford173@gmail.com
    Signed-off-by: Abel Vesa <abel.vesa@nxp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 999528d8a7495ae4ee42159620742cb0f536a003
Author: Igor Pylypiv <ipylypiv@google.com>
Date:   Mon Nov 1 16:28:24 2021 -0700

    scsi: pm80xx: Update WARN_ON check in pm8001_mpi_build_cmd()
    
    [ Upstream commit 606c54ae975ad3af540b505b46b55a687501711f ]
    
    Starting from commit 05c6c029a44d ("scsi: pm80xx: Increase number of
    supported queues") driver initializes only max_q_num queues.  Do not use an
    invalid queue if the WARN_ON condition is true.
    
    Link: https://lore.kernel.org/r/20211101232825.2350233-4-ipylypiv@google.com
    Fixes: 7640e1eb8c5d ("scsi: pm80xx: Make mpi_build_cmd locking consistent")
    Reviewed-by: Vishakha Channapattan <vishakhavc@google.com>
    Acked-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Igor Pylypiv <ipylypiv@google.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5f414d69ac9fd80adac1dd1df9776eba305d076
Author: Kamal Heib <kamalheib1@gmail.com>
Date:   Wed Nov 17 16:59:54 2021 +0200

    RDMA/hns: Validate the pkey index
    
    [ Upstream commit 2a67fcfa0db6b4075515bd23497750849b88850f ]
    
    Before query pkey, make sure that the queried index is valid.
    
    Fixes: 9a4435375cd1 ("IB/hns: Add driver files for hns RoCE driver")
    Link: https://lore.kernel.org/r/20211117145954.123893-1-kamalheib1@gmail.com
    Signed-off-by: Kamal Heib <kamalheib1@gmail.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04a032ea2498cf93cfd85d68a3004c6ef4691d81
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri Nov 12 09:59:04 2021 +0100

    RDMA/bnxt_re: Scan the whole bitmap when checking if "disabling RCFW with pending cmd-bit"
    
    [ Upstream commit a917dfb66c0a1fa1caacf3d71edcafcab48e6ff0 ]
    
    The 'cmdq->cmdq_bitmap' bitmap is 'rcfw->cmdq_depth' bits long.  The size
    stored in 'cmdq->bmap_size' is the size of the bitmap in bytes.
    
    Remove this erroneous 'bmap_size' and use 'rcfw->cmdq_depth' directly in
    'bnxt_qplib_disable_rcfw_channel()'. Otherwise some error messages may be
    missing.
    
    Other uses of 'cmdq_bitmap' already take into account 'rcfw->cmdq_depth'
    directly.
    
    Fixes: 1ac5a4047975 ("RDMA/bnxt_re: Add bnxt_re RoCE driver")
    Link: https://lore.kernel.org/r/47ed717c3070a1d0f53e7b4c768a4fd11caf365d.1636707421.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Selvin Xavier <selvin.xavier@broadcom.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84cd5c029d4846864fee0aeb71309b034f71cc78
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 16 08:13:14 2021 +0100

    ALSA: hda: Add missing rwsem around snd_ctl_remove() calls
    
    [ Upstream commit 80bd64af75b4bb11c0329bc66c35da2ddfb66d88 ]
    
    snd_ctl_remove() has to be called with card->controls_rwsem held (when
    called after the card instantiation).  This patch add the missing
    rwsem calls around it.
    
    Fixes: d13bd412dce2 ("ALSA: hda - Manage kcontrol lists")
    Link: https://lore.kernel.org/r/20211116071314.15065-3-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 180e9d7384c6ba2467452d2dc9e83263c97ab13b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 16 08:13:13 2021 +0100

    ALSA: PCM: Add missing rwsem around snd_ctl_remove() calls
    
    [ Upstream commit 5471e9762e1af4b7df057a96bfd46cc250979b88 ]
    
    snd_ctl_remove() has to be called with card->controls_rwsem held (when
    called after the card instantiation).  This patch add the missing
    rwsem calls around it.
    
    Fixes: a8ff48cb7083 ("ALSA: pcm: Free chmap at PCM free callback, too")
    Link: https://lore.kernel.org/r/20211116071314.15065-2-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49d76154ba8d8f6c327979b8d3bca0cb14ceec68
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Nov 16 08:13:12 2021 +0100

    ALSA: jack: Add missing rwsem around snd_ctl_remove() calls
    
    [ Upstream commit 06764dc931848c3a9bc01a63bbf76a605408bb54 ]
    
    snd_ctl_remove() has to be called with card->controls_rwsem held (when
    called after the card instantiation).  This patch add the missing
    rwsem calls around it.
    
    Fixes: 9058cbe1eed2 ("ALSA: jack: implement kctl creating for jack devices")
    Link: https://lore.kernel.org/r/20211116071314.15065-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f871cd8ee0f02ad7b00f9c6f326b3d6d2c386535
Author: Jan Kara <jack@suse.cz>
Date:   Fri Nov 12 16:22:02 2021 +0100

    ext4: avoid trim error on fs with small groups
    
    [ Upstream commit 173b6e383d2a204c9921ffc1eca3b87aa2106c33 ]
    
    A user reported FITRIM ioctl failing for him on ext4 on some devices
    without apparent reason.  After some debugging we've found out that
    these devices (being LVM volumes) report rather large discard
    granularity of 42MB and the filesystem had 1k blocksize and thus group
    size of 8MB. Because ext4 FITRIM implementation puts discard
    granularity into minlen, ext4_trim_fs() declared the trim request as
    invalid. However just silently doing nothing seems to be a more
    appropriate reaction to such combination of parameters since user did
    not specify anything wrong.
    
    CC: Lukas Czerner <lczerner@redhat.com>
    Fixes: 5c2ed62fd447 ("ext4: Adjust minlen with discard_granularity in the FITRIM ioctl")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20211112152202.26614-1-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99590e820feba4525bd5dc02bab9cd085d0627aa
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Fri Jan 7 01:57:16 2022 +0300

    net: mcs7830: handle usb read errors properly
    
    [ Upstream commit d668769eb9c52b150753f1653f7f5a0aeb8239d2 ]
    
    Syzbot reported uninit value in mcs7830_bind(). The problem was in
    missing validation check for bytes read via usbnet_read_cmd().
    
    usbnet_read_cmd() internally calls usb_control_msg(), that returns
    number of bytes read. Code should validate that requested number of bytes
    was actually read.
    
    So, this patch adds missing size validation check inside
    mcs7830_get_reg() to prevent uninit value bugs
    
    Reported-and-tested-by: syzbot+003c0a286b9af5412510@syzkaller.appspotmail.com
    Fixes: 2a36d7083438 ("USB: driver for mcs7830 (aka DeLOCK) USB ethernet adapter")
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20220106225716.7425-1-paskripkin@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b948524ae650d58a158d46c52cb99a04100c9db
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Mon Dec 27 12:17:57 2021 -0700

    iwlwifi: mvm: Use div_s64 instead of do_div in iwl_mvm_ftm_rtt_smoothing()
    
    [ Upstream commit 4ccdcc8ffd955490feec05380223db6a48961eb5 ]
    
    When building ARCH=arm allmodconfig:
    
    drivers/net/wireless/intel/iwlwifi/mvm/ftm-initiator.c: In function ‘iwl_mvm_ftm_rtt_smoothing’:
    ./include/asm-generic/div64.h:222:35: error: comparison of distinct pointer types lacks a cast [-Werror]
      222 |         (void)(((typeof((n)) *)0) == ((uint64_t *)0));  \
          |                                   ^~
    drivers/net/wireless/intel/iwlwifi/mvm/ftm-initiator.c:1070:9: note: in expansion of macro ‘do_div’
     1070 |         do_div(rtt_avg, 100);
          |         ^~~~~~
    
    do_div() has to be used with an unsigned 64-bit integer dividend but
    rtt_avg is a signed 64-bit integer.
    
    div_s64() expects a signed 64-bit integer dividend and signed 32-bit
    divisor, which fits this scenario, so use that function here to fix the
    warning.
    
    Fixes: 8b0f92549f2c ("iwlwifi: mvm: fix 32-bit build in FTM")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Link: https://lore.kernel.org/r/20211227191757.2354329-1-nathan@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04ce9e2aeda7d6d09c4185592afe229b9e8e600e
Author: Dominik Brodowski <linux@dominikbrodowski.net>
Date:   Sun Jan 9 10:02:51 2022 +0100

    pcmcia: fix setting of kthread task states
    
    [ Upstream commit fbb3485f1f931102d8ba606f1c28123f5b48afa3 ]
    
    We need to set TASK_INTERRUPTIBLE before calling kthread_should_stop().
    Otherwise, kthread_stop() might see that the pccardd thread is still
    in TASK_RUNNING state and fail to wake it up.
    
    Additionally, we only need to set the state back to TASK_RUNNING if
    kthread_should_stop() breaks the loop.
    
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reported-by: Al Viro <viro@ZenIV.linux.org.uk>
    Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Fixes: d3046ba809ce ("pcmcia: fix a boot time warning in pcmcia cs code")
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5064bfe046b0a604649501cc13ce74512a4ad541
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Dec 24 10:13:24 2021 +0800

    can: xilinx_can: xcan_probe(): check for error irq
    
    [ Upstream commit c6564c13dae25cd7f8e1de5127b4da4500ee5844 ]
    
    For the possible failure of the platform_get_irq(), the returned irq
    could be error number and will finally cause the failure of the
    request_irq().
    
    Consider that platform_get_irq() can now in certain cases return
    -EPROBE_DEFER, and the consequences of letting request_irq()
    effectively convert that into -EINVAL, even at probe time rather than
    later on. So it might be better to check just now.
    
    Fixes: b1201e44f50b ("can: xilinx CAN controller support")
    Link: https://lore.kernel.org/all/20211224021324.1447494-1-jiasheng@iscas.ac.cn
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6dd1577bc929f78e6bcb44079d6b0cb52bb3baa
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Sat Jan 8 21:57:51 2022 +0100

    can: softing: softing_startstop(): fix set but not used variable warning
    
    [ Upstream commit 370d988cc529598ebaec6487d4f84c2115dc696b ]
    
    In the function softing_startstop() the variable error_reporting is
    assigned but not used. The code that uses this variable is commented
    out. Its stated that the functionality is not finally verified.
    
    To fix the warning:
    
    | drivers/net/can/softing/softing_fw.c:424:9: error: variable 'error_reporting' set but not used [-Werror,-Wunused-but-set-variable]
    
    remove the comment, activate the code, but add a "0 &&" to the if
    expression and rely on the optimizer rather than the preprocessor to
    remove the code.
    
    Link: https://lore.kernel.org/all/20220109103126.1872833-1-mkl@pengutronix.de
    Fixes: 03fd3cf5a179 ("can: add driver for Softing card")
    Cc: Kurt Van Dijck <dev.kurt@vandijck-laurijssen.be>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9ac866c23bb898c4650c19afe82aa51d6ea794f
Author: Christophe Jaillet <christophe.jaillet@wanadoo.fr>
Date:   Sat Nov 6 17:42:04 2021 +0100

    tpm_tis: Fix an error handling path in 'tpm_tis_core_init()'
    
    [ Upstream commit e96d52822f5ac0a25de78f95cd23421bcbc93584 ]
    
    Commit 79ca6f74dae0 ("tpm: fix Atmel TPM crash caused by too frequent
    queries") has moved some code around without updating the error handling
    path.
    
    This is now pointless to 'goto out_err' when neither 'clk_enable()' nor
    'ioremap()' have been called yet.
    
    Make a direct return instead to avoid undoing things that have not been
    done.
    
    Fixes: 79ca6f74dae0 ("tpm: fix Atmel TPM crash caused by too frequent queries")
    Signed-off-by: Christophe Jaillet <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb46223c9f940c7b27f6df455e3f4bc9dd11c772
Author: Chen Jun <chenjun102@huawei.com>
Date:   Wed Oct 13 06:25:56 2021 +0000

    tpm: add request_locality before write TPM_INT_ENABLE
    
    [ Upstream commit 0ef333f5ba7f24f5d8478425c163d3097f1c7afd ]
    
    Locality is not appropriately requested before writing the int mask.
    Add the missing boilerplate.
    
    Fixes: e6aef069b6e9 ("tpm_tis: convert to using locality callbacks")
    Signed-off-by: Chen Jun <chenjun102@huawei.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20edf903a3a570a4406d1d30a554cbf05e6c379f
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Tue Oct 19 17:05:25 2021 +0200

    can: mcp251xfd: add missing newline to printed strings
    
    [ Upstream commit 3bd9d8ce6f8c5c43ee2f1106021db0f98882cc75 ]
    
    This patch adds the missing newline to printed strings.
    
    Fixes: 55e5b97f003e ("can: mcp25xxfd: add driver for Microchip MCP25xxFD SPI CAN")
    Link: https://lore.kernel.org/all/20220105154300.1258636-4-mkl@pengutronix.de
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d71fca5d0167f250a351f2fe9f9f0659aaa41a69
Author: Fabio Estevam <festevam@denx.de>
Date:   Fri Jan 7 13:33:07 2022 -0300

    regmap: Call regmap_debugfs_exit() prior to _init()
    
    [ Upstream commit 530792efa6cb86f5612ff093333fec735793b582 ]
    
    Since commit cffa4b2122f5 ("regmap: debugfs: Fix a memory leak when
    calling regmap_attach_dev"), the following debugfs error is seen
    on i.MX boards:
    
    debugfs: Directory 'dummy-iomuxc-gpr@20e0000' with parent 'regmap' already present!
    
    In the attempt to fix the memory leak, the above commit added a NULL check
    for map->debugfs_name. For the first debufs entry, map->debugfs_name is NULL
    and then the new name is allocated via kasprintf().
    
    For the second debugfs entry, map->debugfs_name() is no longer NULL, so
    it will keep using the old entry name and the duplicate name error is seen.
    
    Quoting Mark Brown:
    
    "That means that if the device gets freed we'll end up with the old debugfs
    file hanging around pointing at nothing.
    ...
    To be more explicit this means we need a call to regmap_debugfs_exit()
    which will clean up all the existing debugfs stuff before we loose
    references to it."
    
    Call regmap_debugfs_exit() prior to regmap_debugfs_init() to fix
    the problem.
    
    Tested on i.MX6Q and i.MX6SX boards.
    
    Fixes: cffa4b2122f5 ("regmap: debugfs: Fix a memory leak when calling regmap_attach_dev")
    Suggested-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Fabio Estevam <festevam@denx.de>
    Link: https://lore.kernel.org/r/20220107163307.335404-1-festevam@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 838acddcdf75574d1bd0409ecbe4b69c498328eb
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jan 7 10:12:10 2022 +0300

    netrom: fix api breakage in nr_setsockopt()
    
    [ Upstream commit dc35616e6c2907b0c0c391a205802d8880f7fd85 ]
    
    This needs to copy an unsigned int from user space instead of a long to
    avoid breaking user space with an API change.
    
    I have updated all the integer overflow checks from ULONG to UINT as
    well.  This is a slight API change but I do not expect it to affect
    anything in real life.
    
    Fixes: 3087a6f36ee0 ("netrom: fix copying in user data in nr_setsockopt")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d04479857bc36de267a183d4889dd713cef18dd
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jan 7 10:13:12 2022 +0300

    ax25: uninitialized variable in ax25_setsockopt()
    
    [ Upstream commit 9371937092d5fd502032c1bb4475b36b39b1f1b3 ]
    
    The "opt" variable is unsigned long but we only copy 4 bytes from
    the user so the lower 4 bytes are uninitialized.
    
    I have changed the integer overflow checks from ULONG to UINT as well.
    This is a slight API change but I don't expect it to break anything.
    
    Fixes: a7b75c5a8c41 ("net: pass a sockptr_t into ->setsockopt")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27e9910c4516c829a12286be3501e0e80d8028ee
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Jan 7 07:54:24 2022 +0000

    spi: spi-meson-spifc: Add missing pm_runtime_disable() in meson_spifc_probe
    
    [ Upstream commit 69c1b87516e327a60b39f96b778fe683259408bf ]
    
    If the probe fails, we should use pm_runtime_disable() to balance
    pm_runtime_enable().
    Add missing pm_runtime_disable() for meson_spifc_probe.
    
    Fixes: c3e4bc5434d2 ("spi: meson: Add support for Amlogic Meson SPIFC")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20220107075424.7774-1-linmq006@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d6350cf8e5aa6acf1a7c72f7a9ca000e5fa447d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jan 7 10:16:44 2022 +0300

    Bluetooth: L2CAP: uninitialized variables in l2cap_sock_setsockopt()
    
    [ Upstream commit 2b70d4f9b20635ac328836e50d183632e1930f94 ]
    
    The "opt" variable is a u32, but on some paths only the top bytes
    were initialized and the others contained random stack data.
    
    Fixes: a7b75c5a8c41 ("net: pass a sockptr_t into ->setsockopt")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9defd7d4c084091f8186361574fe6415cb13bbed
Author: Zizhuang Deng <sunsetdzz@gmail.com>
Date:   Thu Dec 30 15:03:31 2021 +0800

    lib/mpi: Add the return value check of kcalloc()
    
    [ Upstream commit dd827abe296fe4249b2f8c9b95f72f814ea8348c ]
    
    Add the return value check of kcalloc() to avoid potential
    NULL ptr dereference.
    
    Fixes: a8ea8bdd9df9 ("lib/mpi: Extend the MPI library")
    Signed-off-by: Zizhuang Deng <sunsetdzz@gmail.com>
    Reviewed-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e801f81cee3c8901f52ee48c6329802b28fbb49c
Author: Moshe Shemesh <moshe@nvidia.com>
Date:   Sun Dec 5 12:07:49 2021 +0200

    net/mlx5: Set command entry semaphore up once got index free
    
    [ Upstream commit 8e715cd613a1e872b9d918e912d90b399785761a ]
    
    Avoid a race where command work handler may fail to allocate command
    entry index, by holding the command semaphore down till command entry
    index is being freed.
    
    Fixes: 410bd754cd73 ("net/mlx5: Add retry mechanism to the command entry index allocation")
    Signed-off-by: Moshe Shemesh <moshe@nvidia.com>
    Reviewed-by: Eran Ben Elisha <eranbe@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2b9ce705d793c2ce942a42ee8b7483d799080e3
Author: Aya Levin <ayal@nvidia.com>
Date:   Sun Oct 24 11:47:41 2021 +0300

    Revert "net/mlx5e: Block offload of outer header csum for UDP tunnels"
    
    [ Upstream commit 64050cdad0983ad8060e33c3f4b5aee2366bcebd ]
    
    This reverts commit 6d6727dddc7f93fcc155cb8d0c49c29ae0e71122.
    
    Although the NIC doesn't support offload of outer header CSUM, using
    gso_partial_features allows offloading the tunnel's segmentation. The
    driver relies on the stack CSUM calculation of the outer header. For
    this, NETIF_F_GSO_UDP_TUNNEL_CSUM must be a member of the device's
    features.
    
    Fixes: 6d6727dddc7f ("net/mlx5e: Block offload of outer header csum for UDP tunnels")
    Signed-off-by: Aya Levin <ayal@nvidia.com>
    Reviewed-by: Gal Pressman <gal@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67e1a449a165cb395fb4f67f2b2de6a11ab30912
Author: Maor Dickman <maord@nvidia.com>
Date:   Thu Dec 30 11:20:10 2021 +0200

    net/mlx5e: Don't block routes with nexthop objects in SW
    
    [ Upstream commit 9e72a55a3c9d54b38a704bb7292d984574a81d9d ]
    
    Routes with nexthop objects is currently not supported by multipath offload
    and any attempts to use it is blocked, however this also block adding SW
    routes with nexthop.
    
    Resolve this by returning NOTIFY_DONE instead of an error which will allow such
    a route to be created in SW but not offloaded.
    
    This fix also solve an issue which block adding such routes on different devices
    due to missing check if the route FIB device is one of multipath devices.
    
    Fixes: 6a87afc072c3 ("mlx5: Fail attempts to use routes with nexthop objects")
    Signed-off-by: Maor Dickman <maord@nvidia.com>
    Reviewed-by: Roi Dayan <roid@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc40fa05c0a6e1c2b7afde82c2676c7294ffca3c
Author: Aya Levin <ayal@nvidia.com>
Date:   Thu Dec 23 14:38:28 2021 +0200

    net/mlx5e: Fix page DMA map/unmap attributes
    
    [ Upstream commit 0b7cfa4082fbf550595bc0e40f05614bd83bf0cd ]
    
    Driver initiates DMA sync, hence it may skip CPU sync. Add
    DMA_ATTR_SKIP_CPU_SYNC as input attribute both to dma_map_page and
    dma_unmap_page to avoid redundant sync with the CPU.
    When forcing the device to work with SWIOTLB, the extra sync might cause
    data corruption. The driver unmaps the whole page while the hardware
    used just a part of the bounce buffer. So syncing overrides the entire
    page with bounce buffer that only partially contains real data.
    
    Fixes: bc77b240b3c5 ("net/mlx5e: Add fragmented memory support for RX multi packet WQE")
    Fixes: db05815b36cb ("net/mlx5e: Add XSK zero-copy support")
    Signed-off-by: Aya Levin <ayal@nvidia.com>
    Reviewed-by: Gal Pressman <gal@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3dda01d1d4705cf2be57c5469a2e6964168f688
Author: Michal Suchanek <msuchanek@suse.de>
Date:   Tue Jan 4 18:05:05 2022 +0100

    debugfs: lockdown: Allow reading debugfs files that are not world readable
    
    [ Upstream commit 358fcf5ddbec4e6706405847d6a666f5933a6c25 ]
    
    When the kernel is locked down the kernel allows reading only debugfs
    files with mode 444. Mode 400 is also valid but is not allowed.
    
    Make the 444 into a mask.
    
    Fixes: 5496197f9b08 ("debugfs: Restrict debugfs when the kernel is locked down")
    Signed-off-by: Michal Suchanek <msuchanek@suse.de>
    Link: https://lore.kernel.org/r/20220104170505.10248-1-msuchanek@suse.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9b5da3e187edc62f735b86f6223b222c37d46e4
Author: José Expósito <jose.exposito89@gmail.com>
Date:   Wed Jan 5 18:29:15 2022 +0100

    HID: hid-uclogic-params: Invalid parameter check in uclogic_params_frame_init_v1_buttonpad
    
    [ Upstream commit aa320fdbbbb482c19100f51461bd0069753ce3d7 ]
    
    The function performs a check on the hdev input parameters, however, it
    is used before the check.
    
    Initialize the udev variable after the sanity check to avoid a
    possible NULL pointer dereference.
    
    Fixes: 9614219e9310e ("HID: uclogic: Extract tablet parameter discovery into a module")
    Addresses-Coverity-ID: 1443763 ("Null pointer dereference")
    Signed-off-by: José Expósito <jose.exposito89@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 541c3a044b46574a2cb26a395a0e4115281613d9
Author: José Expósito <jose.exposito89@gmail.com>
Date:   Wed Jan 5 18:29:14 2022 +0100

    HID: hid-uclogic-params: Invalid parameter check in uclogic_params_huion_init
    
    [ Upstream commit ff6b548afe4d9d1ff3a0f6ef79e8cbca25d8f905 ]
    
    The function performs a check on its input parameters, however, the
    hdev parameter is used before the check.
    
    Initialize the stack variables after checking the input parameters to
    avoid a possible NULL pointer dereference.
    
    Fixes: 9614219e9310e ("HID: uclogic: Extract tablet parameter discovery into a module")
    Addresses-Coverity-ID: 1443804 ("Null pointer dereference")
    Signed-off-by: José Expósito <jose.exposito89@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c47f842e0c3c105073fa5a9edd6ae9c6ca8383ce
Author: José Expósito <jose.exposito89@gmail.com>
Date:   Wed Jan 5 18:29:13 2022 +0100

    HID: hid-uclogic-params: Invalid parameter check in uclogic_params_get_str_desc
    
    [ Upstream commit 0a94131d6920916ccb6a357037c535533af08819 ]
    
    The function performs a check on the hdev input parameters, however, it
    is used before the check.
    
    Initialize the udev variable after the sanity check to avoid a
    possible NULL pointer dereference.
    
    Fixes: 9614219e9310e ("HID: uclogic: Extract tablet parameter discovery into a module")
    Addresses-Coverity-ID: 1443827 ("Null pointer dereference")
    Signed-off-by: José Expósito <jose.exposito89@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf5ad827ee696a134b8f2d65162989be8cf7188d
Author: José Expósito <jose.exposito89@gmail.com>
Date:   Wed Jan 5 18:29:12 2022 +0100

    HID: hid-uclogic-params: Invalid parameter check in uclogic_params_init
    
    [ Upstream commit f364c571a5c77e96de2d32062ff019d6b8d2e2bc ]
    
    The function performs a check on its input parameters, however, the
    hdev parameter is used before the check.
    
    Initialize the stack variables after checking the input parameters to
    avoid a possible NULL pointer dereference.
    
    Fixes: 9614219e9310e ("HID: uclogic: Extract tablet parameter discovery into a module")
    Addresses-Coverity-ID: 1443831 ("Null pointer dereference")
    Signed-off-by: José Expósito <jose.exposito89@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94177fcecc35e9e9d3aecaa5813556c6b5aed7b6
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Wed Dec 22 11:18:23 2021 +0000

    usb: dwc3: qcom: Fix NULL vs IS_ERR checking in dwc3_qcom_probe
    
    [ Upstream commit b52fe2dbb3e655eb1483000adfab68a219549e13 ]
    
    Since the acpi_create_platform_device() function may return error
    pointers, dwc3_qcom_create_urs_usb_platdev() function may return error
    pointers too. Using IS_ERR_OR_NULL() to check the return value to fix this.
    
    Fixes: c25c210f590e ("usb: dwc3: qcom: add URS Host support for sdm845 ACPI boot")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Link: https://lore.kernel.org/r/20211222111823.22887-1-linmq006@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4579954bf4cc0bdfc4a42c88b16fe596f1e7f82d
Author: Miaoqian Lin <linmq006@gmail.com>
Date:   Fri Dec 24 08:02:49 2021 +0000

    Bluetooth: hci_qca: Fix NULL vs IS_ERR_OR_NULL check in qca_serdev_probe
    
    [ Upstream commit 6845667146a28c09b5dfc401c1ad112374087944 ]
    
    The function devm_gpiod_get_index() return error pointers on error.
    Thus devm_gpiod_get_index_optional() could return NULL and error pointers.
    The same as devm_gpiod_get_optional() function. Using IS_ERR_OR_NULL()
    check to catch error pointers.
    
    Fixes: 77131dfe ("Bluetooth: hci_qca: Replace devm_gpiod_get() with devm_gpiod_get_optional()")
    Signed-off-by: Miaoqian Lin <linmq006@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6bf3d66393be7dcbe80205eaa2e414e0af9a9a3
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Fri Dec 24 10:53:18 2021 +0800

    Bluetooth: hci_bcm: Check for error irq
    
    [ Upstream commit b38cd3b42fba66cc538edb9cf77e07881f43f8e2 ]
    
    For the possible failure of the platform_get_irq(), the returned irq
    could be error number and will finally cause the failure of the
    request_irq().
    Consider that platform_get_irq() can now in certain cases return
    -EPROBE_DEFER, and the consequences of letting request_irq() effectively
    convert that into -EINVAL, even at probe time rather than later on.
    So it might be better to check just now.
    
    Fixes: 0395ffc1ee05 ("Bluetooth: hci_bcm: Add PM for BCM devices")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5e4f68d57d64e4739a4485e5f35cf370c41a857
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Thu Jan 6 18:04:10 2022 +0800

    fsl/fman: Check for null pointer after calling devm_ioremap
    
    [ Upstream commit d5a73ec96cc57cf67e51b12820fc2354e7ca46f8 ]
    
    As the possible failure of the allocation, the devm_ioremap() may return
    NULL pointer.
    Take tgec_initialization() as an example.
    If allocation fails, the params->base_addr will be NULL pointer and will
    be assigned to tgec->regs in tgec_config().
    Then it will cause the dereference of NULL pointer in set_mac_address(),
    which is called by tgec_init().
    Therefore, it should be better to add the sanity check after the calling
    of the devm_ioremap().
    
    Fixes: 3933961682a3 ("fsl/fman: Add FMan MAC driver")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60aca6fdc167652cc354b288b78adeb1e59f7d08
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Tue Jan 4 23:06:28 2022 +0800

    staging: greybus: audio: Check null pointer
    
    [ Upstream commit 2e81948177d769106754085c3e03534e6cc1f623 ]
    
    As the possible alloc failure of devm_kcalloc(), it could return null
    pointer.
    Therefore, 'strings' should be checked and return NULL if alloc fails to
    prevent the dereference of the NULL pointer.
    Also, the caller should also deal with the return value of the
    gb_generate_enum_strings() and return -ENOMEM if returns NULL.
    Moreover, because the memory allocated with devm_kzalloc() will be
    freed automatically when the last reference to the device is dropped,
    the 'gbe' in gbaudio_tplg_create_enum_kctl() and
    gbaudio_tplg_create_enum_ctl() do not need to free manually.
    But the 'control' in gbaudio_tplg_create_widget() and
    gbaudio_tplg_process_kcontrols() has a specially error handle to
    cleanup.
    So it should be better to cleanup 'control' when fails.
    
    Fixes: e65579e335da ("greybus: audio: topology: Enable enumerated control support")
    Reviewed-by: Alex Elder <elder@linaro.org>
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Link: https://lore.kernel.org/r/20220104150628.1987906-1-jiasheng@iscas.ac.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1068bfee47aaef6fcf58610df6c35c032412baf
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jan 6 14:57:54 2022 +0300

    rocker: fix a sleeping in atomic bug
    
    [ Upstream commit 43d012123122cc69feacab55b71369f386c19566 ]
    
    This code is holding the &ofdpa->flow_tbl_lock spinlock so it is not
    allowed to sleep.  That means we have to pass the OFDPA_OP_FLAG_NOWAIT
    flag to ofdpa_flow_tbl_del().
    
    Fixes: 936bd486564a ("rocker: use FIB notifications instead of switchdev calls")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2db344725e173ad908ec060f95240b6fb679d0d1
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jan 5 03:48:42 2022 -0800

    ppp: ensure minimum packet size in ppp_write()
    
    [ Upstream commit 44073187990d5629804ce0627525f6ea5cfef171 ]
    
    It seems pretty clear ppp layer assumed user space
    would always be kind to provide enough data
    in their write() to a ppp device.
    
    This patch makes sure user provides at least
    2 bytes.
    
    It adds PPP_PROTO_LEN macro that could replace
    in net-next many occurrences of hard-coded 2 value.
    
    I replaced only one occurrence to ease backports
    to stable kernels.
    
    The bug manifests in the following report:
    
    BUG: KMSAN: uninit-value in ppp_send_frame+0x28d/0x27c0 drivers/net/ppp/ppp_generic.c:1740
     ppp_send_frame+0x28d/0x27c0 drivers/net/ppp/ppp_generic.c:1740
     __ppp_xmit_process+0x23e/0x4b0 drivers/net/ppp/ppp_generic.c:1640
     ppp_xmit_process+0x1fe/0x480 drivers/net/ppp/ppp_generic.c:1661
     ppp_write+0x5cb/0x5e0 drivers/net/ppp/ppp_generic.c:513
     do_iter_write+0xb0c/0x1500 fs/read_write.c:853
     vfs_writev fs/read_write.c:924 [inline]
     do_writev+0x645/0xe00 fs/read_write.c:967
     __do_sys_writev fs/read_write.c:1040 [inline]
     __se_sys_writev fs/read_write.c:1037 [inline]
     __x64_sys_writev+0xe5/0x120 fs/read_write.c:1037
     do_syscall_x64 arch/x86/entry/common.c:51 [inline]
     do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Uninit was created at:
     slab_post_alloc_hook mm/slab.h:524 [inline]
     slab_alloc_node mm/slub.c:3251 [inline]
     __kmalloc_node_track_caller+0xe0c/0x1510 mm/slub.c:4974
     kmalloc_reserve net/core/skbuff.c:354 [inline]
     __alloc_skb+0x545/0xf90 net/core/skbuff.c:426
     alloc_skb include/linux/skbuff.h:1126 [inline]
     ppp_write+0x11d/0x5e0 drivers/net/ppp/ppp_generic.c:501
     do_iter_write+0xb0c/0x1500 fs/read_write.c:853
     vfs_writev fs/read_write.c:924 [inline]
     do_writev+0x645/0xe00 fs/read_write.c:967
     __do_sys_writev fs/read_write.c:1040 [inline]
     __se_sys_writev fs/read_write.c:1037 [inline]
     __x64_sys_writev+0xe5/0x120 fs/read_write.c:1037
     do_syscall_x64 arch/x86/entry/common.c:51 [inline]
     do_syscall_64+0x54/0xd0 arch/x86/entry/common.c:82
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: linux-ppp@vger.kernel.org
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45643b1b6ce1ec47f2d4fd696b3d2aae4d6f7dc3
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Jan 5 14:19:54 2022 +0100

    netfilter: nft_set_pipapo: allocate pcpu scratch maps on clone
    
    [ Upstream commit 23c54263efd7cb605e2f7af72717a2a951999217 ]
    
    This is needed in case a new transaction is made that doesn't insert any
    new elements into an already existing set.
    
    Else, after second 'nft -f ruleset.txt', lookups in such a set will fail
    because ->lookup() encounters raw_cpu_ptr(m->scratch) == NULL.
    
    For the initial rule load, insertion of elements takes care of the
    allocation, but for rule reloads this isn't guaranteed: we might not
    have additions to the set.
    
    Fixes: 3c4287f62044a90e ("nf_tables: Add set type for arbitrary concatenation of ranges")
    Reported-by: etkaar <lists.netfilter.org@prvy.eu>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8772700a9f1e8c8f33599a8614fe6a4af28193b5
Author: Kuniyuki Iwashima <kuniyu@amazon.co.jp>
Date:   Tue Jan 4 10:31:48 2022 +0900

    bpf: Fix SO_RCVBUF/SO_SNDBUF handling in _bpf_setsockopt().
    
    [ Upstream commit 04c350b1ae6bdb12b84009a4d0bf5ab4e621c47b ]
    
    The commit 4057765f2dee ("sock: consistent handling of extreme
    SO_SNDBUF/SO_RCVBUF values") added a change to prevent underflow
    in setsockopt() around SO_SNDBUF/SO_RCVBUF.
    
    This patch adds the same change to _bpf_setsockopt().
    
    Fixes: 4057765f2dee ("sock: consistent handling of extreme SO_SNDBUF/SO_RCVBUF values")
    Signed-off-by: Kuniyuki Iwashima <kuniyu@amazon.co.jp>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20220104013153.97906-2-kuniyu@amazon.co.jp
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 342332fb0be64a28fd5f13809b73bd1d620638c5
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Wed Jan 5 11:35:13 2022 -0800

    bpf: Don't promote bogus looking registers after null check.
    
    [ Upstream commit e60b0d12a95dcf16a63225cead4541567f5cb517 ]
    
    If we ever get to a point again where we convert a bogus looking <ptr>_or_null
    typed register containing a non-zero fixed or variable offset, then lets not
    reset these bounds to zero since they are not and also don't promote the register
    to a <ptr> type, but instead leave it as <ptr>_or_null. Converting to a unknown
    register could be an avenue as well, but then if we run into this case it would
    allow to leak a kernel pointer this way.
    
    Fixes: f1174f77b50c ("bpf/verifier: rework value tracking")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0036c78c492a3175bef6178899a0f438289723e2
Author: Xin Xiong <xiongx18@fudan.edu.cn>
Date:   Thu Dec 23 10:48:12 2021 +0800

    netfilter: ipt_CLUSTERIP: fix refcount leak in clusterip_tg_check()
    
    [ Upstream commit d94a69cb2cfa77294921aae9afcfb866e723a2da ]
    
    The issue takes place in one error path of clusterip_tg_check(). When
    memcmp() returns nonzero, the function simply returns the error code,
    forgetting to decrease the reference count of a clusterip_config
    object, which is bumped earlier by clusterip_config_find_get(). This
    may incur reference count leak.
    
    Fix this issue by decrementing the refcount of the object in specific
    error path.
    
    Fixes: 06aa151ad1fc74 ("netfilter: ipt_CLUSTERIP: check MAC address when duplicate config is set")
    Signed-off-by: Xin Xiong <xiongx18@fudan.edu.cn>
    Signed-off-by: Xiyu Yang <xiyuyang19@fudan.edu.cn>
    Signed-off-by: Xin Tan <tanxin.ctf@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e718389b986b2a79ab1f3282b5a5ed35373aa0f
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Mon Dec 20 16:38:11 2021 +0800

    power: reset: mt6397: Check for null res pointer
    
    [ Upstream commit 1c1348bf056dee665760a3bd1cd30b0be7554fc2 ]
    
    The return value of platform_get_resource() needs to be checked.
    To avoid use of error pointer in case that there is no suitable
    resource.
    
    Fixes: d28c74c10751 ("power: reset: add driver for mt6323 poweroff")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4210c35fe81bcce80580cdcf8fde34ba289e95d4
Author: Zhou Qingyang <zhou1615@umn.edu>
Date:   Wed Dec 1 02:11:40 2021 +0800

    pcmcia: rsrc_nonstatic: Fix a NULL pointer dereference in nonstatic_find_mem_region()
    
    [ Upstream commit 977d2e7c63c3d04d07ba340b39987742e3241554 ]
    
    In nonstatic_find_mem_region(), pcmcia_make_resource() is assigned to
    res and used in pci_bus_alloc_resource(). There a dereference of res
    in pci_bus_alloc_resource(), which could lead to a NULL pointer
    dereference on failure of pcmcia_make_resource().
    
    Fix this bug by adding a check of res.
    
    This bug was found by a static analyzer. The analysis employs
    differential checking to identify inconsistent security operations
    (e.g., checks or kfrees) between two code paths and confirms that the
    inconsistent operations are not recovered in the current function or
    the callers, so they constitute bugs.
    
    Note that, as a bug found by static analysis, it can be a false
    positive or hard to trigger. Multiple researchers have cross-reviewed
    the bug.
    
    Builds with CONFIG_PCCARD_NONSTATIC=y show no new warnings,
    and our static analyzer no longer warns about this code.
    
    Fixes: 49b1153adfe1 ("pcmcia: move all pcmcia_resource_ops providers into one module")
    Signed-off-by: Zhou Qingyang <zhou1615@umn.edu>
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2dee347f356dc1040113b22106285d72ebd24a9f
Author: Zhou Qingyang <zhou1615@umn.edu>
Date:   Wed Dec 1 00:59:23 2021 +0800

    pcmcia: rsrc_nonstatic: Fix a NULL pointer dereference in __nonstatic_find_io_region()
    
    [ Upstream commit ca0fe0d7c35c97528bdf621fdca75f13157c27af ]
    
    In __nonstatic_find_io_region(), pcmcia_make_resource() is assigned to
    res and used in pci_bus_alloc_resource(). There is a dereference of res
    in pci_bus_alloc_resource(), which could lead to a NULL pointer
    dereference on failure of pcmcia_make_resource().
    
    Fix this bug by adding a check of res.
    
    This bug was found by a static analyzer. The analysis employs
    differential checking to identify inconsistent security operations
    (e.g., checks or kfrees) between two code paths and confirms that the
    inconsistent operations are not recovered in the current function or
    the callers, so they constitute bugs.
    
    Note that, as a bug found by static analysis, it can be a false
    positive or hard to trigger. Multiple researchers have cross-reviewed
    the bug.
    
    Builds with CONFIG_PCCARD_NONSTATIC=y show no new warnings,
    and our static analyzer no longer warns about this code.
    
    Fixes: 49b1153adfe1 ("pcmcia: move all pcmcia_resource_ops providers into one module")
    Signed-off-by: Zhou Qingyang <zhou1615@umn.edu>
    [linux@dominikbrodowski.net: Fix typo in commit message]
    Signed-off-by: Dominik Brodowski <linux@dominikbrodowski.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f03132191badb322140110319e71f17265bc719
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Dec 30 12:57:47 2021 +0100

    ACPI: scan: Create platform device for BCM4752 and LNV4752 ACPI nodes
    
    [ Upstream commit f85196bdd5a50da74670250564740fc852b3c239 ]
    
    BCM4752 and LNV4752 ACPI nodes describe a Broadcom 4752 GPS module
    attached to an UART of the system.
    
    The GPS modules talk a custom protocol which only works with a closed-
    source Android gpsd daemon which knows this protocol.
    
    The ACPI nodes also describe GPIOs to turn the GPS on/off these are
    handled by the net/rfkill/rfkill-gpio.c code. This handling predates the
    addition of enumeration of ACPI instantiated serdevs to the kernel and
    was broken by that addition, because the ACPI scan code now no longer
    instantiates platform_device-s for these nodes.
    
    Rename the i2c_multi_instantiate_ids HID list to ignore_serial_bus_ids
    and add the BCM4752 and LNV4752 HIDs, so that rfkill-gpio gets
    a platform_device to bind to again; and so that a tty cdev for gpsd
    gets created for these.
    
    Fixes: e361d1f85855 ("ACPI / scan: Fix enumeration for special UART devices")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 595e1ec55b307d232f8672ccbe6c84089b277b43
Author: Zhang Zixun <zhang133010@icloud.com>
Date:   Mon Dec 27 22:02:49 2021 +0100

    x86/mce/inject: Avoid out-of-bounds write when setting flags
    
    [ Upstream commit de768416b203ac84e02a757b782a32efb388476f ]
    
    A contrived zero-length write, for example, by using write(2):
    
      ...
      ret = write(fd, str, 0);
      ...
    
    to the "flags" file causes:
    
      BUG: KASAN: stack-out-of-bounds in flags_write
      Write of size 1 at addr ffff888019be7ddf by task writefile/3787
    
      CPU: 4 PID: 3787 Comm: writefile Not tainted 5.16.0-rc7+ #12
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014
    
    due to accessing buf one char before its start.
    
    Prevent such out-of-bounds access.
    
      [ bp: Productize into a proper patch. Link below is the next best
        thing because the original mail didn't get archived on lore. ]
    
    Fixes: 0451d14d0561 ("EDAC, mce_amd_inj: Modify flags attribute to use string arguments")
    Signed-off-by: Zhang Zixun <zhang133010@icloud.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lore.kernel.org/linux-edac/YcnePfF1OOqoQwrX@zn.tnic/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df126818192814cd8981c42bd15f79d3e312a073
Author: Arseny Demidov <arsdemal@gmail.com>
Date:   Sun Dec 19 13:22:39 2021 +0300

    hwmon: (mr75203) fix wrong power-up delay value
    
    [ Upstream commit a8d6d4992ad9d92356619ac372906bd29687bb46 ]
    
    In the file mr75203.c we have a macro named POWER_DELAY_CYCLE_256,
    the correct value should be 0x100. The register ip_tmr is expressed
    in units of IP clk cycles, in accordance with the datasheet.
    Typical power-up delays for Temperature Sensor are 256 cycles i.e. 0x100.
    
    Fixes: 9d823351a337 ("hwmon: Add hardware monitoring driver for Moortec MR75203 PVT controller")
    Signed-off-by: Arseny Demidov <a.demidov@yadro.com>
    Link: https://lore.kernel.org/r/20211219102239.1112-1-a.demidov@yadro.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aea5302d9ddc8c9f637393c63d824f45026e906e
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Dec 22 09:30:41 2021 -0700

    x86/boot/compressed: Move CLANG_FLAGS to beginning of KBUILD_CFLAGS
    
    [ Upstream commit 5fe392ff9d1f7254a1fbb3f72d9893088e4d23eb ]
    
    When cross compiling i386_defconfig on an arm64 host with clang, there
    are a few instances of '-Waddress-of-packed-member' and
    '-Wgnu-variable-sized-type-not-at-end' in arch/x86/boot/compressed/,
    which should both be disabled with the cc-disable-warning calls in that
    directory's Makefile, which indicates that cc-disable-warning is failing
    at the point of testing these flags.
    
    The cc-disable-warning calls fail because at the point that the flags
    are tested, KBUILD_CFLAGS has '-march=i386' without $(CLANG_FLAGS),
    which has the '--target=' flag to tell clang what architecture it is
    targeting. Without the '--target=' flag, the host architecture (arm64)
    is used and i386 is not a valid value for '-march=' in that case. This
    error can be seen by adding some logging to try-run:
    
      clang-14: error: the clang compiler does not support '-march=i386'
    
    Invoking the compiler has to succeed prior to calling cc-option or
    cc-disable-warning in order to accurately test whether or not the flag
    is supported; if it doesn't, the requested flag can never be added to
    the compiler flags. Move $(CLANG_FLAGS) to the beginning of KBUILD_FLAGS
    so that any new flags that might be added in the future can be
    accurately tested.
    
    Fixes: d5cbd80e302d ("x86/boot: Add $(CLANG_FLAGS) to compressed KBUILD_CFLAGS")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lore.kernel.org/r/20211222163040.1961481-1-nathan@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70eec71f32eb5a9d1654b01bb142d5fa9a5df7fe
Author: Panicker Harish <quic_pharish@quicinc.com>
Date:   Wed Dec 22 12:59:05 2021 +0530

    Bluetooth: hci_qca: Stop IBS timer during BT OFF
    
    [ Upstream commit df1e5c51492fd93ffc293acdcc6f00698d19fedc ]
    
    The IBS timers are not stopped properly once BT OFF is triggered.
    we could see IBS commands being sent along with version command,
    so stopped IBS timers while Bluetooth is off.
    
    Fixes: 3e4be65eb82c ("Bluetooth: hci_qca: Add poweroff support during hci down for wcn3990")
    Signed-off-by: Panicker Harish <quic_pharish@quicinc.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d4e722b62d2b6ca1ba0a83687230b47c41a16da
Author: Clément Léger <clement.leger@bootlin.com>
Date:   Mon Dec 20 22:05:33 2021 +0100

    software node: fix wrong node passed to find nargs_prop
    
    [ Upstream commit c5fc5ba8b6b7bebc05e45036a33405b4c5036c2f ]
    
    nargs_prop refers to a property located in the reference that is found
    within the nargs property. Use the correct reference node in call to
    property_entry_read_int_array() to retrieve the correct nargs value.
    
    Fixes: b06184acf751 ("software node: Add software_node_get_reference_args()")
    Signed-off-by: Clément Léger <clement.leger@bootlin.com>
    Reviewed-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Reviewed-by: Daniel Scally <djrscally@gmail.com>
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8f3c1720d77ae677b171ac0c006d3a0eef47baf
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Mon Nov 15 21:34:59 2021 +0100

    backlight: qcom-wled: Respect enabled-strings in set_brightness
    
    [ Upstream commit ec961cf3241153e0f27d850f1bf0f172e7d27a21 ]
    
    The hardware is capable of controlling any non-contiguous sequence of
    LEDs specified in the DT using qcom,enabled-strings as u32
    array, and this also follows from the DT-bindings documentation.  The
    numbers specified in this array represent indices of the LED strings
    that are to be enabled and disabled.
    
    Its value is appropriately used to setup and enable string modules, but
    completely disregarded in the set_brightness paths which only iterate
    over the number of strings linearly.
    Take an example where only string 2 is enabled with
    qcom,enabled_strings=<2>: this string is appropriately enabled but
    subsequent brightness changes would have only touched the zero'th
    brightness register because num_strings is 1 here.  This is simply
    addressed by looking up the string for this index in the enabled_strings
    array just like the other codepaths that iterate over num_strings.
    
    Likewise enabled_strings is now also used in the autodetection path for
    consistent behaviour: when a list of strings is specified in DT only
    those strings will be probed for autodetection, analogous to how the
    number of strings that need to be probed is already bound by
    qcom,num-strings.  After all autodetection uses the set_brightness
    helpers to set an initial value, which could otherwise end up changing
    brightness on a different set of strings.
    
    Fixes: 775d2ffb4af6 ("backlight: qcom-wled: Restructure the driver for WLED3")
    Fixes: 03b2b5e86986 ("backlight: qcom-wled: Add support for WLED4 peripheral")
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20211115203459.1634079-10-marijn.suijten@somainline.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de79bcbfaf4df4861d2ee298e600ad1271b86e20
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Mon Nov 15 21:34:53 2021 +0100

    backlight: qcom-wled: Use cpu_to_le16 macro to perform conversion
    
    [ Upstream commit 0a139358548968b2ff308257b4fbeec7badcc3e1 ]
    
    The kernel already provides appropriate primitives to perform endianness
    conversion which should be used in favour of manual bit-wrangling.
    
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20211115203459.1634079-4-marijn.suijten@somainline.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c79f9b8d8e2622954cc66a3ce0018b74d5fdba9d
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Mon Nov 15 21:34:55 2021 +0100

    backlight: qcom-wled: Override default length with qcom,enabled-strings
    
    [ Upstream commit 2b4b49602f9feca7b7a84eaa33ad9e666c8aa695 ]
    
    The length of qcom,enabled-strings as property array is enough to
    determine the number of strings to be enabled, without needing to set
    qcom,num-strings to override the default number of strings when less
    than the default (which is also the maximum) is provided in DT.
    
    This also introduces an extra warning when qcom,num-strings is set,
    denoting that it is not necessary to set both anymore.  It is usually
    more concise to set just qcom,num-length when a zero-based, contiguous
    range of strings is needed (the majority of the cases), or to only set
    qcom,enabled-strings when a specific set of indices is desired.
    
    Fixes: 775d2ffb4af6 ("backlight: qcom-wled: Restructure the driver for WLED3")
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20211115203459.1634079-6-marijn.suijten@somainline.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf4daf6153c9dac5e6aaaf9a8b794670412bb91c
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Mon Nov 15 21:34:54 2021 +0100

    backlight: qcom-wled: Fix off-by-one maximum with default num_strings
    
    [ Upstream commit 5ada78b26f935f8751852dffa24f6b545b1d2517 ]
    
    When not specifying num-strings in the DT the default is used, but +1 is
    added to it which turns WLED3 into 4 and WLED4/5 into 5 strings instead
    of 3 and 4 respectively, causing out-of-bounds reads and register
    read/writes.  This +1 exists for a deficiency in the DT parsing code,
    and is simply omitted entirely - solving this oob issue - by parsing the
    property separately much like qcom,enabled-strings.
    
    This also enables more stringent checks on the maximum value when
    qcom,enabled-strings is provided in the DT, by parsing num-strings after
    enabled-strings to allow it to check against (and in a subsequent patch
    override) the length of enabled-strings: it is invalid to set
    num-strings higher than that.
    The DT currently utilizes it to get around an incorrect fixed read of
    four elements from that array (has been addressed in a prior patch) by
    setting a lower num-strings where desired.
    
    Fixes: 93c64f1ea1e8 ("leds: add Qualcomm PM8941 WLED driver")
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Reviewed-By: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20211115203459.1634079-5-marijn.suijten@somainline.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09aed85e8c983b0e6bfaafb7fdccdc90d4b058ea
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Mon Nov 15 21:34:52 2021 +0100

    backlight: qcom-wled: Pass number of elements to read to read_u32_array
    
    [ Upstream commit e29e24bdabfeddbf8b1a4ecac1af439a85150438 ]
    
    of_property_read_u32_array takes the number of elements to read as last
    argument. This does not always need to be 4 (sizeof(u32)) but should
    instead be the size of the array in DT as read just above with
    of_property_count_elems_of_size.
    
    To not make such an error go unnoticed again the driver now bails
    accordingly when of_property_read_u32_array returns an error.
    Surprisingly the indentation of newlined arguments is lining up again
    after prepending `rc = `.
    
    Fixes: 775d2ffb4af6 ("backlight: qcom-wled: Restructure the driver for WLED3")
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20211115203459.1634079-3-marijn.suijten@somainline.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4ed4fc504fda6fd001b053d1e369ad632293158
Author: Marijn Suijten <marijn.suijten@somainline.org>
Date:   Mon Nov 15 21:34:51 2021 +0100

    backlight: qcom-wled: Validate enabled string indices in DT
    
    [ Upstream commit c05b21ebc5bce3ecc78c2c71afd76d92c790a2ac ]
    
    The strings passed in DT may possibly cause out-of-bounds register
    accesses and should be validated before use.
    
    Fixes: 775d2ffb4af6 ("backlight: qcom-wled: Restructure the driver for WLED3")
    Signed-off-by: Marijn Suijten <marijn.suijten@somainline.org>
    Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@somainline.org>
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20211115203459.1634079-2-marijn.suijten@somainline.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e668ac6506d3f45bf36b1f8463f62ce5e2776732
Author: Paul Chaignon <paul@isovalent.com>
Date:   Mon Dec 20 22:45:28 2021 +0100

    bpftool: Enable line buffering for stdout
    
    [ Upstream commit 1a1a0b0364ad291bd8e509da104ac8b5b1afec5d ]
    
    The output of bpftool prog tracelog is currently buffered, which is
    inconvenient when piping the output into other commands. A simple
    tracelog | grep will typically not display anything. This patch fixes it
    by enabling line buffering on stdout for the whole bpftool binary.
    
    Fixes: 30da46b5dc3a ("tools: bpftool: add a command to dump the trace pipe")
    Signed-off-by: Quentin Monnet <quentin@isovalent.com>
    Signed-off-by: Paul Chaignon <paul@isovalent.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20211220214528.GA11706@Mem
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 009bb7ee15779b70726c12ecdac6450bc1a4b47b
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Wed Dec 8 15:35:48 2021 -0800

    Bluetooth: L2CAP: Fix using wrong mode
    
    [ Upstream commit 30d57722732d9736554f85f75f9d7ad5402d192e ]
    
    If user has a set to use SOCK_STREAM the socket would default to
    L2CAP_MODE_ERTM which later needs to be adjusted if the destination
    address is LE which doesn't support such mode.
    
    Fixes: 15f02b9105625 ("Bluetooth: L2CAP: Add initial code for Enhanced Credit Based Mode")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a2241ad400b8d7b8f1a1adef5c5b67829a63934
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Sep 16 13:09:22 2021 +0200

    um: virtio_uml: Fix time-travel external time propagation
    
    [ Upstream commit 85e73968a040c642fd38f6cba5b73b61f5d0f052 ]
    
    When creating an external event, the current time needs to
    be propagated to other participants of a simulation. This
    is done in the places here where we kick a virtq etc.
    
    However, it must be done for _all_ external events, and
    that includes making the initial socket connection and
    later closing it. Call time_travel_propagate_time() to do
    this before making or closing the socket connection.
    
    Apparently, at least for the initial connection creation,
    due to the remote side in my use cases using microseconds
    (rather than nanoseconds), this wasn't a problem yet; only
    started failing between 5.14-rc1 and 5.15-rc1 (didn't test
    others much), or possibly depending on the configuration,
    where more delays happen before the virtio devices are
    initialized.
    
    Fixes: 88ce64249233 ("um: Implement time-travel=ext")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8411722e5652c37b36cfa56640c7e67c0d0306ff
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Tue Aug 31 09:27:53 2021 +0200

    um: fix ndelay/udelay defines
    
    [ Upstream commit 5f8539e2ff962e25b57742ca7106456403abbc94 ]
    
    Many places in the kernel use 'udelay' as an identifier, and
    are broken with the current "#define udelay um_udelay". Fix
    this by adding an argument to the macro, and do the same to
    'ndelay' as well, just in case.
    
    Fixes: 0bc8fb4dda2b ("um: Implement ndelay/udelay in time-travel mode")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2b1b490bd2983c84566c94b4bf3b0e4279f3ea7
Author: Bernard Zhao <bernard@vivo.com>
Date:   Fri Dec 10 04:03:58 2021 -0800

    selinux: fix potential memleak in selinux_add_opt()
    
    [ Upstream commit 2e08df3c7c4e4e74e3dd5104c100f0bf6288aaa8 ]
    
    This patch try to fix potential memleak in error branch.
    
    Fixes: ba6418623385 ("selinux: new helper - selinux_add_opt()")
    Signed-off-by: Bernard Zhao <bernard@vivo.com>
    [PM: tweak the subject line, add Fixes tag]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3253cf09146420bda0991eecc6fa9ab2268228e2
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Fri Dec 17 23:27:17 2021 +0300

    mmc: meson-mx-sdio: add IRQ check
    
    [ Upstream commit 8fc9a77bc64e1f23d07953439817d8402ac9706f ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to devm_request_threaded_irq()
    (which takes *unsigned* IRQ #), causing it to fail with -EINVAL, overriding
    an original error code. Stop calling devm_request_threaded_irq() with the
    invalid IRQ #s.
    
    Fixes: ed80a13bb4c4 ("mmc: meson-mx-sdio: Add a driver for the Amlogic Meson8 and Meson8b SoC")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Link: https://lore.kernel.org/r/20211217202717.10041-3-s.shtylyov@omp.ru
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit decb2099549d9618fb3483306843f0f3d74686d0
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Fri Dec 17 23:27:16 2021 +0300

    mmc: meson-mx-sdhc: add IRQ check
    
    [ Upstream commit 77bed755e0f06135faccdd3948863703f9a6e640 ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to devm_request_threaded_irq()
    (which takes *unsigned* IRQ #), causing it to fail with -EINVAL, overriding
    an original error code. Stop calling devm_request_threaded_irq() with the
    invalid IRQ #s.
    
    Fixes: e4bf1b0970ef ("mmc: host: meson-mx-sdhc: new driver for the Amlogic Meson SDHC host")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Reviewed-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Link: https://lore.kernel.org/r/20211217202717.10041-2-s.shtylyov@omp.ru
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdc6c9fc5f78abbbf329139e4decb104ddd96e47
Author: Nathan Errera <nathan.errera@intel.com>
Date:   Sun Dec 19 12:18:15 2021 +0200

    iwlwifi: mvm: test roc running status bits before removing the sta
    
    [ Upstream commit 998e1aba6e5eb35370eaf30ccc1823426ec11f90 ]
    
    In some cases the sta is being removed twice since we do not test the
    roc aux running before removing it. Start looking at the bit before
    removing the sta.
    
    Signed-off-by: Nathan Errera <nathan.errera@intel.com>
    Fixes: 2c2c3647cde4 ("iwlwifi: mvm: support ADD_STA_CMD_API_S ver 12")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20211219121514.d5376ac6bcb0.Ic5f8470ea60c072bde9d1503e5f528b65e301e20@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a750fcd604a66098d28788e7d8624d8cb1c957de
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sun Dec 19 11:14:18 2021 +0200

    iwlwifi: mvm: fix 32-bit build in FTM
    
    [ Upstream commit 8b0f92549f2c2458200935c12a2e2a6e80234cf5 ]
    
    On a 32-bit build, the division here needs to be done
    using do_div(), otherwise the compiler will try to call
    a function that doesn't exist, thus failing to build.
    
    Fixes: b68bd2e3143a ("iwlwifi: mvm: Add FTM initiator RTT smoothing logic")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20211219111352.e56cbf614a4d.Ib98004ccd2c7a55fd883a8ea7eebd810f406dec6@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 86b0122d2682ab3af934a8648110e251f62ce6c9
Author: Marek Behún <kabel@kernel.org>
Date:   Tue Nov 9 17:46:04 2021 +0100

    ARM: dts: armada-38x: Add generic compatible to UART nodes
    
    [ Upstream commit 62480772263ab6b52e758f2346c70a526abd1d28 ]
    
    Add generic compatible string "ns16550a" to serial port nodes of Armada
    38x.
    
    This makes it possible to use earlycon.
    
    Fixes: 0d3d96ab0059 ("ARM: mvebu: add Device Tree description of the Armada 380/385 SoCs")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f5428e43806ea0eb12dfa573815715da6347cdb
Author: Robert Marko <robert.marko@sartura.hr>
Date:   Fri Nov 12 14:44:03 2021 +0100

    arm64: dts: marvell: cn9130: enable CP0 GPIO controllers
    
    [ Upstream commit 0734f8311ce72c9041e5142769eff2083889c172 ]
    
    CN9130 has a built-in CP115 which has 2 GPIO controllers, but unlike in
    Armada 7k and 8k both are left disabled by the SoC DTSI.
    
    This first of all makes no sense as they are always present due to being
    SoC built-in and its an issue as boards like CN9130-CRB use the CPO GPIO2
    pins for regulators and SD card support without enabling them first.
    
    So, enable both of them like Armada 7k and 8k do.
    
    Fixes: 6b8970bd8d7a ("arm64: dts: marvell: Add support for Marvell CN9130 SoC support")
    
    Signed-off-by: Robert Marko <robert.marko@sartura.hr>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 874b97e86278e7325e88131f5c4cb7441b21ae5d
Author: Robert Marko <robert.marko@sartura.hr>
Date:   Fri Nov 12 14:44:02 2021 +0100

    arm64: dts: marvell: cn9130: add GPIO and SPI aliases
    
    [ Upstream commit effd42600b987c1e95f946b14fefc1c7639e7439 ]
    
    CN9130 has one CP115 built in, which like the CP110 has 2 GPIO and 2 SPI
    controllers built-in.
    
    However, unlike the Armada 7k and 8k the SoC DTSI doesn't add the required
    aliases as both the Orion SPI driver and MVEBU GPIO drivers require the
    aliases to be present.
    
    So add the required aliases for GPIO and SPI controllers.
    
    Fixes: 6b8970bd8d7a ("arm64: dts: marvell: Add support for Marvell CN9130 SoC support")
    
    Signed-off-by: Robert Marko <robert.marko@sartura.hr>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 407ef1db40363b7861a102ec8fcf7170cbd05d18
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Fri Dec 17 16:34:28 2021 +0800

    usb: ftdi-elan: fix memory leak on device disconnect
    
    [ Upstream commit 1646566b5e0c556f779180a8514e521ac735de1e ]
    
    'ftdi' is alloced when probe device, but not free on device disconnect,
    this cause a memory leak as follows:
    
    unreferenced object 0xffff88800d584000 (size 8400):
      comm "kworker/0:2", pid 3809, jiffies 4295453055 (age 13.784s)
      hex dump (first 32 bytes):
        00 40 58 0d 80 88 ff ff 00 40 58 0d 80 88 ff ff  .@X......@X.....
        00 00 00 00 00 00 00 00 00 00 00 00 ad 4e ad de  .............N..
      backtrace:
        [<000000000d47f947>] kmalloc_order_trace+0x19/0x110 mm/slab_common.c:960
        [<000000008548ac68>] ftdi_elan_probe+0x8c/0x880 drivers/usb/misc/ftdi-elan.c:2647
        [<000000007f73e422>] usb_probe_interface+0x31b/0x800 drivers/usb/core/driver.c:396
        [<00000000fe8d07fc>] really_probe+0x299/0xc30 drivers/base/dd.c:517
        [<0000000005da7d32>] __driver_probe_device+0x357/0x500 drivers/base/dd.c:751
        [<000000003c2c9579>] driver_probe_device+0x4e/0x140 drivers/base/dd.c:781
    
    Fix it by freeing 'ftdi' after nobody use it.
    
    Fixes: a5c66e4b2418 ("USB: ftdi-elan: client driver for ELAN Uxxx adapters")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Link: https://lore.kernel.org/r/20211217083428.2441-1-weiyongjun1@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a65da5a1ea3a379d5f4e6eaa8647058a70ded3d
Author: Andre Przywara <andre.przywara@arm.com>
Date:   Mon Nov 22 16:28:43 2021 +0100

    ARM: 9159/1: decompressor: Avoid UNPREDICTABLE NOP encoding
    
    [ Upstream commit a92882a4d270fbcc021ee6848de5e48b7f0d27f3 ]
    
    In the decompressor's head.S we need to start with an instruction that
    is some kind of NOP, but also mimics as the PE/COFF header, when the
    kernel is linked as an UEFI application. The clever solution here is
    "tstne r0, #0x4d000", which in the worst case just clobbers the
    condition flags, and bears the magic "MZ" signature in the lowest 16 bits.
    
    However the encoding used (0x13105a4d) is actually not valid, since bits
    [15:12] are supposed to be 0 (written as "(0)" in the ARM ARM).
    Violating this is UNPREDICTABLE, and *can* trigger an UNDEFINED
    exception. Common Cortex cores seem to ignore those bits, but QEMU
    chooses to trap, so the code goes fishing because of a missing exception
    handler at this point. We are just saved by the fact that commonly (with
    -kernel or when running from U-Boot) the "Z" bit is set, so the
    instruction is never executed. See [0] for more details.
    
    To make things more robust and avoid UNPREDICTABLE behaviour in the
    kernel code, lets replace this with a "two-instruction NOP":
    The first instruction is an exclusive OR, the effect of which the second
    instruction reverts. This does not leave any trace, neither in a
    register nor in the condition flags. Also it's a perfectly valid
    encoding. Kudos to Peter Maydell for coming up with this gem.
    
    [0] https://lore.kernel.org/qemu-devel/YTPIdbUCmwagL5%2FD@os.inf.tu-dresden.de/T/
    
    Link: https://lore.kernel.org/linux-arm-kernel/20210908162617.104962-1-andre.przywara@arm.com/T/
    
    Fixes: 81a0bc39ea19 ("ARM: add UEFI stub support")
    Signed-off-by: Andre Przywara <andre.przywara@arm.com>
    Reported-by: Adam Lackorzynski <adam@l4re.org>
    Suggested-by: Peter Maydell <peter.maydell@linaro.org>
    Reviewed-by: Ard Biesheuvel <ardb@kernel.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47dd693c94bf48c7fef470f845f9a1cb41d8328a
Author: Antony Antony <antony.antony@secunet.com>
Date:   Sun Dec 12 11:35:00 2021 +0100

    xfrm: state and policy should fail if XFRMA_IF_ID 0
    
    [ Upstream commit 68ac0f3810e76a853b5f7b90601a05c3048b8b54 ]
    
    xfrm ineterface does not allow xfrm if_id = 0
    fail to create or update xfrm state and policy.
    
    With this commit:
     ip xfrm policy add src 192.0.2.1 dst 192.0.2.2 dir out if_id 0
     RTNETLINK answers: Invalid argument
    
     ip xfrm state add src 192.0.2.1 dst 192.0.2.2 proto esp spi 1 \
                reqid 1 mode tunnel aead 'rfc4106(gcm(aes))' \
                0x1111111111111111111111111111111111111111 96 if_id 0
     RTNETLINK answers: Invalid argument
    
    v1->v2 change:
     - add Fixes: tag
    
    Fixes: 9f8550e4bd9d ("xfrm: fix disable_xfrm sysctl when used on xfrm interfaces")
    Signed-off-by: Antony Antony <antony.antony@secunet.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db369047e3b3b597319550d6cd029dabfe0a6e7a
Author: Antony Antony <antony.antony@secunet.com>
Date:   Sun Dec 12 11:34:30 2021 +0100

    xfrm: interface with if_id 0 should return error
    
    [ Upstream commit 8dce43919566f06e865f7e8949f5c10d8c2493f5 ]
    
    xfrm interface if_id = 0 would cause xfrm policy lookup errors since
    Commit 9f8550e4bd9d.
    
    Now explicitly fail to create an xfrm interface when if_id = 0
    
    With this commit:
     ip link add ipsec0  type xfrm dev lo  if_id 0
     Error: if_id must be non zero.
    
    v1->v2 change:
     - add Fixes: tag
    
    Fixes: 9f8550e4bd9d ("xfrm: fix disable_xfrm sysctl when used on xfrm interfaces")
    Signed-off-by: Antony Antony <antony.antony@secunet.com>
    Reviewed-by: Eyal Birger <eyal.birger@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37441ddadc1e02a33c866ff836d5229ed600e78a
Author: Jernej Skrabec <jernej.skrabec@gmail.com>
Date:   Mon Nov 29 19:26:25 2021 +0100

    media: hantro: Fix probe func error path
    
    [ Upstream commit 37af43b250fda6162005d47bf7c959c70d52b107 ]
    
    If clocks for some reason couldn't be enabled, probe function returns
    immediately, without disabling PM. This obviously leaves PM ref counters
    unbalanced.
    
    Fix that by jumping to appropriate error path, so effects of PM functions
    are reversed.
    
    Fixes: 775fec69008d ("media: add Rockchip VPU JPEG encoder driver")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Acked-by: Andrzej Pietrasiewicz <andrzej.p@collabora.com>
    Reviewed-by: Ezequiel Garcia <ezequiel@vanguardiasur.com.ar>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3849ec830bf714d57d08a0efd1e1125b023ee4e7
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Fri Dec 10 17:54:44 2021 +0000

    drm/tegra: vic: Fix DMA API misuse
    
    [ Upstream commit 5566174cb10a5167d59b0793871cab7990b149b8 ]
    
    Upon failure, dma_alloc_coherent() returns NULL. If that does happen,
    passing some uninitialised stack contents to dma_mapping_error() - which
    belongs to a different API in the first place - has precious little
    chance of detecting it.
    
    Also include the correct header, because the fragile transitive
    inclusion currently providing it is going to break soon.
    
    Fixes: 20e7dce255e9 ("drm/tegra: Remove memory allocation from Falcon library")
    CC: Thierry Reding <thierry.reding@gmail.com>
    CC: Mikko Perttunen <mperttunen@nvidia.com>
    CC: dri-devel@lists.freedesktop.org
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b230114bc57a3a0c9da11a18954e747b5bb92c5d
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Tue Dec 14 16:25:29 2021 -0800

    drm/bridge: ti-sn65dsi86: Set max register for regmap
    
    [ Upstream commit 0b665d4af35837f0a0ae63135b84a3c187c1db3b ]
    
    Set the maximum register to 0xff so we can dump the registers for this
    device in debugfs.
    
    Fixes: a095f15c00e2 ("drm/bridge: add support for sn65dsi86 bridge driver")
    Cc: Rob Clark <robdclark@chromium.org>
    Cc: Douglas Anderson <dianders@chromium.org>
    Cc: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211215002529.382383-1-swboyd@chromium.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db97fc2c4425969d48abc0865564af587fd92c9f
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Thu Dec 2 01:26:27 2021 +0300

    drm/msm/dpu: fix safe status debugfs file
    
    [ Upstream commit f31b0e24d31e18b4503eeaf0032baeacc0beaff6 ]
    
    Make safe_status debugfs fs file actually return safe status rather than
    danger status data.
    
    Fixes: 25fdd5933e4c ("drm/msm: Add SDM845 DPU support")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Abhinav Kumar <quic_abhinavk@quicinc.com>
    Link: https://lore.kernel.org/r/20211201222633.2476780-3-dmitry.baryshkov@linaro.org
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3580055d1fca178be359bef6831d6741b5a23921
Author: Baruch Siach <baruch@tkos.co.il>
Date:   Tue Dec 7 09:27:10 2021 +0200

    arm64: dts: qcom: ipq6018: Fix gpio-ranges property
    
    [ Upstream commit 72cb4c48a46a7cfa58eb5842c0d3672ddd5bd9ad ]
    
    There must be three parameters in gpio-ranges property. Fixes this not
    very helpful error message:
    
      OF: /soc/pinctrl@1000000: (null) = 3 found 3
    
    Fixes: 1e8277854b49 ("arm64: dts: Add ipq6018 SoC and CP01 board support")
    Cc: Sricharan R <sricharan@codeaurora.org>
    Signed-off-by: Baruch Siach <baruch@tkos.co.il>
    Tested-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/8a744cfd96aff5754bfdcf7298d208ddca5b319a.1638862030.git.baruch@tkos.co.il
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f20a5a98a906796572b14ea5c56373ef8a5384f
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Thu Dec 9 17:53:41 2021 +0000

    arm64: dts: qcom: c630: Fix soundcard setup
    
    [ Upstream commit c02b360ca67ebeb9de07b47b2fe53f964c2561d1 ]
    
    Currently Soundcard has 1 rx device for headset and SoundWire Speaker Playback.
    
    This setup has issues, ex if we try to play on headset the audio stream is
    also sent to SoundWire Speakers and we will hear sound in both headsets and speakers.
    
    Make a separate device for Speakers and Headset so that the streams are
    different and handled properly.
    
    Fixes: 45021d35fcb2 ("arm64: dts: qcom: c630: Enable audio support")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Tested-by: Steev Klimaszewski <steev@kali.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20211209175342.20386-2-srinivas.kandagatla@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 394ee480aa3e3397fbccd946ed124f876ff4ca68
Author: Zhou Qingyang <zhou1615@umn.edu>
Date:   Mon Dec 13 11:53:07 2021 +0200

    ath11k: Fix a NULL pointer dereference in ath11k_mac_op_hw_scan()
    
    [ Upstream commit eccd25136386a04ebf46a64f3a34e8e0fab6d9e1 ]
    
    In ath11k_mac_op_hw_scan(), the return value of kzalloc() is directly
    used in memcpy(), which may lead to a NULL pointer dereference on
    failure of kzalloc().
    
    Fix this bug by adding a check of arg.extraie.ptr.
    
    This bug was found by a static analyzer. The analysis employs
    differential checking to identify inconsistent security operations
    (e.g., checks or kfrees) between two code paths and confirms that the
    inconsistent operations are not recovered in the current function or
    the callers, so they constitute bugs.
    
    Note that, as a bug found by static analysis, it can be a false
    positive or hard to trigger. Multiple researchers have cross-reviewed
    the bug.
    
    Builds with CONFIG_ATH11K=m show no new warnings, and our static
    analyzer no longer warns about this code.
    
    Fixes: d5c65159f289 ("ath11k: driver for Qualcomm IEEE 802.11ax devices")
    Signed-off-by: Zhou Qingyang <zhou1615@umn.edu>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/20211202155348.71315-1-zhou1615@umn.edu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6e4a6cbdb6fa32d204356da1b6d102b663df78b
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Mon Dec 6 03:22:01 2021 +0100

    media: coda/imx-vdoa: Handle dma_set_coherent_mask error codes
    
    [ Upstream commit 43f0633f89947df57fe0b5025bdd741768007708 ]
    
    The return value of dma_set_coherent_mask() is not always 0.
    To catch the exception in case that dma is not support the mask.
    
    Link: https://lore.kernel.org/linux-media/20211206022201.1639460-1-jiasheng@iscas.ac.cn
    Fixes: b0444f18e0b1 ("[media] coda: add i.MX6 VDOA driver")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a8869de328a51949505ec0acfbb8168c54ec48f
Author: Wang Hai <wanghai38@huawei.com>
Date:   Tue Oct 26 13:23:48 2021 +0200

    media: msi001: fix possible null-ptr-deref in msi001_probe()
    
    [ Upstream commit 3d5831a40d3464eea158180eb12cbd81c5edfb6a ]
    
    I got a null-ptr-deref report:
    
    BUG: kernel NULL pointer dereference, address: 0000000000000060
    ...
    RIP: 0010:v4l2_ctrl_auto_cluster+0x57/0x270
    ...
    Call Trace:
     msi001_probe+0x13b/0x24b [msi001]
     spi_probe+0xeb/0x130
    ...
     do_syscall_64+0x35/0xb0
    
    In msi001_probe(), if the creation of control for bandwidth_auto
    fails, there will be a null-ptr-deref issue when it is used in
    v4l2_ctrl_auto_cluster().
    
    Check dev->hdl.error before v4l2_ctrl_auto_cluster() to fix this bug.
    
    Link: https://lore.kernel.org/linux-media/20211026112348.2878040-1-wanghai38@huawei.com
    Fixes: 93203dd6c7c4 ("[media] msi001: Mirics MSi001 silicon tuner driver")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a79327bb019131a0d0571257b3f3925b00a98637
Author: Anton Vasilyev <vasilyev@ispras.ru>
Date:   Thu Aug 22 12:41:47 2019 +0200

    media: dw2102: Fix use after free
    
    [ Upstream commit 589a9f0eb799f77de2c09583bf5bad221fa5d685 ]
    
    dvb_usb_device_init stores parts of properties at d->props
    and d->desc and uses it on dvb_usb_device_exit.
    Free of properties on module probe leads to use after free.
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=204597
    
    The patch makes properties static instead of allocated on heap to prevent
    memleak and use after free.
    Also fixes s421_properties.devices initialization to have 2 element
    instead of 6 copied from p7500_properties.
    
    [mchehab: fix function call alignments]
    Link: https://lore.kernel.org/linux-media/20190822104147.4420-1-vasilyev@ispras.ru
    Signed-off-by: Anton Vasilyev <vasilyev@ispras.ru>
    Fixes: 299c7007e936 ("media: dw2102: Fix memleak on sequence of probes")
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 958a8819d41420d7a74ed922a09cacc0ba3a4218
Author: Christian Lamparter <chunkeey@gmail.com>
Date:   Mon Dec 6 01:43:34 2021 +0100

    ARM: dts: gemini: NAS4220-B: fis-index-block with 128 KiB sectors
    
    [ Upstream commit 4754eab7e5a78bdefe7a960c5c260c95ebbb5fa6 ]
    
    Steven Maddox reported in the OpenWrt bugzilla, that his
    RaidSonic IB-NAS4220-B was no longer booting with the new
    OpenWrt 21.02 (uses linux 5.10's device-tree). However, it was
    working with the previous OpenWrt 19.07 series (uses 4.14).
    
    |[    5.548038] No RedBoot partition table detected in 30000000.flash
    |[    5.618553] Searching for RedBoot partition table in 30000000.flash at offset 0x0
    |[    5.739093] No RedBoot partition table detected in 30000000.flash
    |...
    |[    7.039504] Waiting for root device /dev/mtdblock3...
    
    The provided bootlog shows that the RedBoot partition parser was
    looking for the partition table "at offset 0x0". Which is strange
    since the comment in the device-tree says it should be at 0xfe0000.
    
    Further digging on the internet led to a review site that took
    some useful PCB pictures of their review unit back in February 2009.
    Their picture shows a Spansion S29GL128N11TFI01 flash chip.
    
    >From Spansion's Datasheet:
    "S29GL128N: One hundred twenty-eight 64 Kword (128 Kbyte) sectors"
    Steven also provided a "cat /sys/class/mtd/mtd0/erasesize" from his
    unit: "131072".
    
    With the 128 KiB Sector/Erasesize in mind. This patch changes the
    fis-index-block property to (0xfe0000 / 0x20000) = 0x7f.
    
    Fixes: b5a923f8c739 ("ARM: dts: gemini: Switch to redboot partition parsing")
    Reported-by: Steven Maddox <s.maddox@lantizia.me.uk>
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Tested-by: Steven Maddox <s.maddox@lantizia.me.uk>
    Link: https://lore.kernel.org/r/20211206004334.4169408-1-linus.walleij@linaro.org'
    Bugzilla: https://bugs.openwrt.org/index.php?do=details&task_id=4137
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e51460638a67f602e27b30c7e2f66255a797d74
Author: Rameshkumar Sundaram <quic_ramess@quicinc.com>
Date:   Thu Dec 9 23:07:01 2021 +0530

    ath11k: Fix deleting uninitialized kernel timer during fragment cache flush
    
    [ Upstream commit ba53ee7f7f38cf0592b8be1dcdabaf8f7535f8c1 ]
    
    frag_timer will be created & initialized for stations when
    they associate and will be deleted during every key installation
    while flushing old fragments.
    
    For AP interface self peer will be created and Group keys
    will be installed for this peer, but there will be no real
    Station entry & hence frag_timer won't be created and
    initialized, deleting such uninitialized kernel timers causes below
    warnings and backtraces printed with CONFIG_DEBUG_OBJECTS_TIMERS
    enabled.
    
    [ 177.828008] ODEBUG: assert_init not available (active state 0) object type: timer_list hint: 0x0
    [ 177.836833] WARNING: CPU: 3 PID: 188 at lib/debugobjects.c:508 debug_print_object+0xb0/0xf0
    [ 177.845185] Modules linked in: ath11k_pci ath11k qmi_helpers qrtr_mhi qrtr ns mhi
    [ 177.852679] CPU: 3 PID: 188 Comm: hostapd Not tainted 5.14.0-rc3-32919-g4034139e1838-dirty #14
    [ 177.865805] pstate: 60000005 (nZCv daif -PAN -UAO -TCO BTYPE=--)
    [ 177.871804] pc : debug_print_object+0xb0/0xf0
    [ 177.876155] lr : debug_print_object+0xb0/0xf0
    [ 177.880505] sp : ffffffc01169b5a0
    [ 177.883810] x29: ffffffc01169b5a0 x28: ffffff80081c2320 x27: ffffff80081c4078
    [ 177.890942] x26: ffffff8003fe8f28 x25: ffffff8003de9890 x24: ffffffc01134d738
    [ 177.898075] x23: ffffffc010948f20 x22: ffffffc010b2d2e0 x21: ffffffc01169b628
    [ 177.905206] x20: ffffffc01134d700 x19: ffffffc010c80d98 x18: 00000000000003f6
    [ 177.912339] x17: 203a657079742074 x16: 63656a626f202930 x15: 0000000000000152
    [ 177.919471] x14: 0000000000000152 x13: 00000000ffffffea x12: ffffffc010d732e0
    [ 177.926603] x11: 0000000000000003 x10: ffffffc010d432a0 x9 : ffffffc010d432f8
    [ 177.933735] x8 : 000000000002ffe8 x7 : c0000000ffffdfff x6 : 0000000000000001
    [ 177.940866] x5 : 0000000000000000 x4 : 0000000000000000 x3 : 00000000ffffffff
    [ 177.947997] x2 : ffffffc010c93240 x1 : ffffff80023624c0 x0 : 0000000000000054
    [ 177.955130] Call trace:
    [ 177.957567] debug_print_object+0xb0/0xf0
    [ 177.961570] debug_object_assert_init+0x124/0x178
    [ 177.966269] try_to_del_timer_sync+0x1c/0x70
    [ 177.970536] del_timer_sync+0x30/0x50
    [ 177.974192] ath11k_peer_frags_flush+0x34/0x68 [ath11k]
    [ 177.979439] ath11k_mac_op_set_key+0x1e4/0x338 [ath11k]
    [ 177.984673] ieee80211_key_enable_hw_accel+0xc8/0x3d0
    [ 177.989722] ieee80211_key_replace+0x360/0x740
    [ 177.994160] ieee80211_key_link+0x16c/0x210
    [ 177.998337] ieee80211_add_key+0x138/0x338
    [ 178.002426] nl80211_new_key+0xfc/0x258
    [ 178.006257] genl_family_rcv_msg_doit.isra.17+0xd8/0x120
    [ 178.011565] genl_rcv_msg+0xd8/0x1c8
    [ 178.015134] netlink_rcv_skb+0x38/0xf8
    [ 178.018877] genl_rcv+0x34/0x48
    [ 178.022012] netlink_unicast+0x174/0x230
    [ 178.025928] netlink_sendmsg+0x188/0x388
    [ 178.029845] ____sys_sendmsg+0x218/0x250
    [ 178.033763] ___sys_sendmsg+0x68/0x90
    [ 178.037418] __sys_sendmsg+0x44/0x88
    [ 178.040988] __arm64_sys_sendmsg+0x20/0x28
    [ 178.045077] invoke_syscall.constprop.5+0x54/0xe0
    [ 178.049776] do_el0_svc+0x74/0xc0
    [ 178.053084] el0_svc+0x10/0x18
    [ 178.056133] el0t_64_sync_handler+0x88/0xb0
    [ 178.060310] el0t_64_sync+0x148/0x14c
    [ 178.063966] ---[ end trace 8a5cf0bf9d34a058 ]---
    
    Add changes to not to delete frag timer for peers during
    group key installation.
    
    Tested on: IPQ8074 hw2.0 AHB WLAN.HK.2.5.0.1-01092-QCAHKSWPL_SILICONZ-1
    
    Fixes: c3944a562102 ("ath11k: Clear the fragment cache during key install")
    Signed-off-by: Rameshkumar Sundaram <quic_ramess@quicinc.com>
    Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
    Link: https://lore.kernel.org/r/1639071421-25078-1-git-send-email-quic_ramess@quicinc.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b35263f000a5a4686bfc6431e5347b307f5aff64
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Wed Dec 1 17:30:41 2021 +1100

    crypto: stm32 - Revert broken pm_runtime_resume_and_get changes
    
    [ Upstream commit 3d6b661330a7954d8136df98160d525eb04dcd6a ]
    
    We should not call pm_runtime_resume_and_get where the reference
    count is expected to be incremented unconditionally.  This patch
    reverts these calls to the original unconditional get_sync call.
    
    Reported-by: Heiner Kallweit <hkallweit1@gmail.com>
    Fixes: 747bf30fd944 ("crypto: stm32/cryp - Fix PM reference leak...")
    Fixes: 1cb3ad701970 ("crypto: stm32/hash - Fix PM reference leak...")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f5b81874f2722bf2bb23ca0268f9c70728fb759
Author: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
Date:   Tue Nov 30 08:55:00 2021 +0100

    crypto: stm32/cryp - fix bugs and crash in tests
    
    [ Upstream commit 4b898d5cfa4d9a0ad5bc82cb5eafdc092394c6a9 ]
    
    Extra crypto manager auto test were crashing or failling due
    to 2 reasons:
    - block in a dead loop (dues to issues in cipher end process management)
    - crash due to read/write unmapped memory (this crash was also reported
    when using openssl afalg engine)
    
    Rework interrupt management, interrupts are masked as soon as they are
    no more used: if input buffer is fully consumed, "Input FIFO not full"
    interrupt is masked and if output buffer is full, "Output FIFO not
    empty" interrupt is masked.
    And crypto request finish when input *and* outpout buffer are fully
    read/write.
    
    About the crash due to unmapped memory, using scatterwalk_copychunks()
    that will map and copy each block fix the issue.
    Using this api and copying full block will also fix unaligned data
    access, avoid early copy of in/out buffer, and make useless the extra
    alignment constraint.
    
    Fixes: 9e054ec21ef8 ("crypto: stm32 - Support for STM32 CRYP crypto module")
    
    Reported-by: Marek Vasut <marex@denx.de>
    Signed-off-by: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f6151b0774be73a747c8ed95d482d20d2d13daf
Author: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
Date:   Tue Nov 30 08:54:59 2021 +0100

    crypto: stm32/cryp - fix lrw chaining mode
    
    [ Upstream commit fa97dc2d48b476ea98199d808d3248d285987e99 ]
    
    This fixes the lrw autotest if lrw uses the CRYP as the AES block cipher
    provider (as ecb(aes)). At end of request, CRYP should not update the IV
    in case of ECB chaining mode. Indeed the ECB chaining mode never uses
    the IV, but the software LRW chaining mode uses the IV field as
    a counter and due to the (unexpected) update done by CRYP while the AES
    block process, the counter get a wrong value when the IV overflow.
    
    Fixes: 5f49f18d27cd ("crypto: stm32/cryp - update to return iv_out")
    
    Signed-off-by: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2bd40e3a3aa2e58d9ec0e4fec3a511c7e053649d
Author: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
Date:   Tue Nov 30 08:54:58 2021 +0100

    crypto: stm32/cryp - fix double pm exit
    
    [ Upstream commit 6c12e742785bf9333faf60bfb96575bdd763448e ]
    
    Delete extraneous lines in probe error handling code: pm was
    disabled twice.
    
    Fixes: 65f9aa36ee47 ("crypto: stm32/cryp - Add power management support")
    
    Reported-by: Marek Vasut <marex@denx.de>
    Signed-off-by: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 533af1621d1c8f89b61593f88b7e0b30592e3013
Author: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
Date:   Tue Nov 30 08:54:57 2021 +0100

    crypto: stm32/cryp - check early input data
    
    [ Upstream commit 39e6e699c7fb92bdb2617b596ca4a4ea35c5d2a7 ]
    
    Some auto tests failed because driver wasn't returning the expected
    error with some input size/iv value/tag size.
    Now:
     Return 0 early for empty buffer. (We don't need to start the engine for
     an empty input buffer).
     Accept any valid authsize for gcm(aes).
     Return -EINVAL if iv for ccm(aes) is invalid.
     Return -EINVAL if buffer size is a not a multiple of algorithm block size.
    
    Fixes: 9e054ec21ef8 ("crypto: stm32 - Support for STM32 CRYP crypto module")
    
    Signed-off-by: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5deb24e50372357cf975e85067f09a57ad33dc99
Author: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
Date:   Tue Nov 30 08:54:56 2021 +0100

    crypto: stm32/cryp - fix xts and race condition in crypto_engine requests
    
    [ Upstream commit d703c7a994ee34b7fa89baf21631fca0aa9f17fc ]
    
    Don't erase key:
    If key is erased before the crypto_finalize_.*_request() call, some
    pending process will run with a key={ 0 }.
    Moreover if the key is reset at end of request, it breaks xts chaining
    mode, as for last xts block (in case input len is not a multiple of
    block) a new AES request is started without calling again set_key().
    
    Fixes: 9e054ec21ef8 ("crypto: stm32 - Support for STM32 CRYP crypto module")
    
    Signed-off-by: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9e0dd5da8ca4623e30ab1abd67882ddcda05050
Author: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
Date:   Tue Nov 30 08:54:55 2021 +0100

    crypto: stm32/cryp - fix CTR counter carry
    
    [ Upstream commit 41c76690b0990efacd15d35cfb4e77318cd80ebb ]
    
    STM32 CRYP hardware doesn't manage CTR counter bigger than max U32, as
    a workaround, at each block the current IV is saved, if the saved IV
    lower u32 is 0xFFFFFFFF, the full IV is manually incremented, and set
    in hardware.
    Fixes: bbb2832620ac ("crypto: stm32 - Fix sparse warnings")
    
    Signed-off-by: Nicolas Toromanoff <nicolas.toromanoff@foss.st.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c40b1bc851e0816f45520f31b44e8461de13fc5c
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Jan 4 17:15:45 2021 +1100

    crypto: stm32 - Fix last sparse warning in stm32_cryp_check_ctr_counter
    
    [ Upstream commit 81064c96d88180ad6995d52419e94a78968308a2 ]
    
    This patch changes the cast in stm32_cryp_check_ctr_counter from
    u32 to __be32 to match the prototype of stm32_cryp_hw_write_iv
    correctly.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93033bbbdc25c2168261846a84b5ba2b2475c995
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Nov 24 14:39:16 2021 -0800

    selftests: harness: avoid false negatives if test has no ASSERTs
    
    [ Upstream commit 3abedf4646fdc0036fcb8ebbc3b600667167fafe ]
    
    Test can fail either immediately when ASSERT() failed or at the
    end if one or more EXPECT() was not met. The exact return code
    is decided based on the number of successful ASSERT()s.
    
    If test has no ASSERT()s, however, the return code will be 0,
    as if the test did not fail. Start counting ASSERT()s from 1.
    
    Fixes: 369130b63178 ("selftests: Enhance kselftest_harness.h to print which assert failed")
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f568fd97d7515f1f3c3efeb604927a3526bff7ba
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Wed Nov 3 21:13:50 2021 +0100

    selftests: clone3: clone3: add case CLONE3_ARGS_NO_TEST
    
    [ Upstream commit a531b0c23c0fc68ad758cc31a74cf612a4dafeb0 ]
    
    Building selftests/clone3 with clang warns about enumeration not handled
    in switch case:
    
    clone3.c:54:10: warning: enumeration value 'CLONE3_ARGS_NO_TEST' not handled in switch [-Wswitch]
            switch (test_mode) {
                    ^
    
    Add the missing switch case with a comment.
    
    Fixes: 17a810699c18 ("selftests: add tests for clone3()")
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d21b47c607379c50924f961ea45cdb7702bf8007
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Dec 8 20:34:56 2021 -0800

    x86/uaccess: Move variable into switch case statement
    
    [ Upstream commit 61646ca83d3889696f2772edaff122dd96a2935e ]
    
    When building with automatic stack variable initialization, GCC 12
    complains about variables defined outside of switch case statements.
    Move the variable into the case that uses it, which silences the warning:
    
    ./arch/x86/include/asm/uaccess.h:317:23: warning: statement will never be executed [-Wswitch-unreachable]
      317 |         unsigned char x_u8__; \
          |                       ^~~~~~
    
    Fixes: 865c50e1d279 ("x86/uaccess: utilize CONFIG_CC_HAS_ASM_GOTO_OUTPUT")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20211209043456.1377875-1-keescook@chromium.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e801ea43c4b81a32e2a72cd102ad60783b5f07e
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Dec 8 12:20:19 2021 -0800

    xfrm: fix a small bug in xfrm_sa_len()
    
    [ Upstream commit 7770a39d7c63faec6c4f33666d49a8cb664d0482 ]
    
    copy_user_offload() will actually push a struct struct xfrm_user_offload,
    which is different than (struct xfrm_state *)->xso
    (struct xfrm_state_offload)
    
    Fixes: d77e38e612a01 ("xfrm: Add an IPsec hardware offloading API")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b87034d7a2a85267d13d1306841feacca0e4d8b0
Author: Brian Norris <briannorris@chromium.org>
Date:   Mon Nov 29 16:47:34 2021 -0800

    mwifiex: Fix possible ABBA deadlock
    
    [ Upstream commit 1b8bb8919ef81bfc8873d223b9361f1685f2106d ]
    
    Quoting Jia-Ju Bai <baijiaju1990@gmail.com>:
    
      mwifiex_dequeue_tx_packet()
         spin_lock_bh(&priv->wmm.ra_list_spinlock); --> Line 1432 (Lock A)
         mwifiex_send_addba()
           spin_lock_bh(&priv->sta_list_spinlock); --> Line 608 (Lock B)
    
      mwifiex_process_sta_tx_pause()
         spin_lock_bh(&priv->sta_list_spinlock); --> Line 398 (Lock B)
         mwifiex_update_ralist_tx_pause()
           spin_lock_bh(&priv->wmm.ra_list_spinlock); --> Line 941 (Lock A)
    
    Similar report for mwifiex_process_uap_tx_pause().
    
    While the locking expectations in this driver are a bit unclear, the
    Fixed commit only intended to protect the sta_ptr, so we can drop the
    lock as soon as we're done with it.
    
    IIUC, this deadlock cannot actually happen, because command event
    processing (which calls mwifiex_process_sta_tx_pause()) is
    sequentialized with TX packet processing (e.g.,
    mwifiex_dequeue_tx_packet()) via the main loop (mwifiex_main_process()).
    But it's good not to leave this potential issue lurking.
    
    Fixes: f0f7c2275fb9 ("mwifiex: minor cleanups w/ sta_list_spinlock in cfg80211.c")
    Cc: Douglas Anderson <dianders@chromium.org>
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Link: https://lore.kernel.org/linux-wireless/0e495b14-efbb-e0da-37bd-af6bd677ee2c@gmail.com/
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@kernel.org>
    Link: https://lore.kernel.org/r/YaV0pllJ5p/EuUat@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0836f9404017ef06bdb725818045b960c8f40ca0
Author: Frederic Weisbecker <frederic@kernel.org>
Date:   Tue Nov 30 17:21:08 2021 +0100

    rcu/exp: Mark current CPU as exp-QS in IPI loop second pass
    
    [ Upstream commit 81f6d49cce2d2fe507e3fddcc4a6db021d9c2e7b ]
    
    Expedited RCU grace periods invoke sync_rcu_exp_select_node_cpus(), which
    takes two passes over the leaf rcu_node structure's CPUs.  The first
    pass gathers up the current CPU and CPUs that are in dynticks idle mode.
    The workqueue will report a quiescent state on their behalf later.
    The second pass sends IPIs to the rest of the CPUs, but excludes the
    current CPU, incorrectly assuming it has been included in the first
    pass's list of CPUs.
    
    Unfortunately the current CPU may have changed between the first and
    second pass, due to the fact that the various rcu_node structures'
    ->lock fields have been dropped, thus momentarily enabling preemption.
    This means that if the second pass's CPU was not on the first pass's
    list, it will be ignored completely.  There will be no IPI sent to
    it, and there will be no reporting of quiescent states on its behalf.
    Unfortunately, the expedited grace period will nevertheless be waiting
    for that CPU to report a quiescent state, but with that CPU having no
    reason to believe that such a report is needed.
    
    The result will be an expedited grace period stall.
    
    Fix this by no longer excluding the current CPU from consideration during
    the second pass.
    
    Fixes: b9ad4d6ed18e ("rcu: Avoid self-IPI in sync_rcu_exp_select_node_cpus()")
    Reviewed-by: Neeraj Upadhyay <quic_neeraju@quicinc.com>
    Signed-off-by: Frederic Weisbecker <frederic@kernel.org>
    Cc: Uladzislau Rezki <urezki@gmail.com>
    Cc: Neeraj Upadhyay <quic_neeraju@quicinc.com>
    Cc: Boqun Feng <boqun.feng@gmail.com>
    Cc: Josh Triplett <josh@joshtriplett.org>
    Cc: Joel Fernandes <joel@joelfernandes.org>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 027165c491e49109c75bbb7bc877a2f83583754d
Author: Jackie Liu <liuyun01@kylinos.cn>
Date:   Wed Nov 10 15:09:49 2021 +0800

    drm/msm/dp: displayPort driver need algorithm rational
    
    [ Upstream commit 53d22794711ad630f40d59dd726bd260d77d585f ]
    
    Let's select RATIONAL with dp driver. avoid like:
    
    [...]
    x86_64-linux-gnu-ld: drivers/gpu/drm/msm/dp/dp_catalog.o: in function `dp_catalog_ctrl_config_msa':
    dp_catalog.c:(.text+0x57e): undefined reference to `rational_best_approximation'
    
    Fixes: c943b4948b58 ("drm/msm/dp: add displayPort driver support")
    Reported-by: kernelbot <kernel-bot@kylinos.cn>
    Signed-off-by: Jackie Liu <liuyun01@kylinos.cn>
    Link: https://lore.kernel.org/r/20211110070950.3355597-2-liu.yun@linux.dev
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 268f35245650b7135be7b3016ee1b2bf297e883d
Author: Li Hua <hucool.lihua@huawei.com>
Date:   Fri Dec 3 03:36:18 2021 +0000

    sched/rt: Try to restart rt period timer when rt runtime exceeded
    
    [ Upstream commit 9b58e976b3b391c0cf02e038d53dd0478ed3013c ]
    
    When rt_runtime is modified from -1 to a valid control value, it may
    cause the task to be throttled all the time. Operations like the following
    will trigger the bug. E.g:
    
      1. echo -1 > /proc/sys/kernel/sched_rt_runtime_us
      2. Run a FIFO task named A that executes while(1)
      3. echo 950000 > /proc/sys/kernel/sched_rt_runtime_us
    
    When rt_runtime is -1, The rt period timer will not be activated when task
    A enqueued. And then the task will be throttled after setting rt_runtime to
    950,000. The task will always be throttled because the rt period timer is
    not activated.
    
    Fixes: d0b27fa77854 ("sched: rt-group: synchonised bandwidth period")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Li Hua <hucool.lihua@huawei.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20211203033618.11895-1-hucool.lihua@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb0579ab507707fdcb8ea8afeccaee5b1b71be36
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Fri Apr 2 22:47:55 2021 -0700

    wireless: iwlwifi: Fix a double free in iwl_txq_dyn_alloc_dma
    
    [ Upstream commit f973795a8d19cbf3d03807704eb7c6ff65788d5a ]
    
    In iwl_txq_dyn_alloc_dma, txq->tfds is freed at first time by:
    iwl_txq_alloc()->goto err_free_tfds->dma_free_coherent(). But
    it forgot to set txq->tfds to NULL.
    
    Then the txq->tfds is freed again in iwl_txq_dyn_alloc_dma by:
    goto error->iwl_txq_gen2_free_memory()->dma_free_coherent().
    
    My patch sets txq->tfds to NULL after the first free to avoid the
    double free.
    
    Fixes: 0cd1ad2d7fd41 ("iwlwifi: move all bus-independent TX functions to common code")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Link: https://lore.kernel.org/r/20210403054755.4781-1-lyl2019@mail.ustc.edu.cn
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4b911b1648cb8c4871c92d9e9b3c90d3e5ae7ae
Author: Robert Schlabbach <robert_s@gmx.net>
Date:   Wed Dec 1 22:08:43 2021 +0100

    media: si2157: Fix "warm" tuner state detection
    
    [ Upstream commit a6441ea29cb2c9314654e093a1cd8020b9b851c8 ]
    
    Commit e955f959ac52 ("media: si2157: Better check for running tuner in
    init") completely broke the "warm" tuner detection of the si2157 driver
    due to a simple endian error: The Si2157 CRYSTAL_TRIM property code is
    0x0402 and needs to be transmitted LSB first. However, it was inserted
    MSB first, causing the warm detection to always fail and spam the kernel
    log with tuner initialization messages each time the DVB frontend
    device was closed and reopened:
    
    [  312.215682] si2157 16-0060: found a 'Silicon Labs Si2157-A30'
    [  312.264334] si2157 16-0060: firmware version: 3.0.5
    [  342.248593] si2157 16-0060: found a 'Silicon Labs Si2157-A30'
    [  342.295743] si2157 16-0060: firmware version: 3.0.5
    [  372.328574] si2157 16-0060: found a 'Silicon Labs Si2157-A30'
    [  372.385035] si2157 16-0060: firmware version: 3.0.5
    
    Also, the reinitializations were observed disturb _other_ tuners on
    multi-tuner cards such as the Hauppauge WinTV-QuadHD, leading to missed
    or errored packets when one of the other DVB frontend devices on that
    card was opened.
    
    Fix the order of the property code bytes to make the warm detection work
    again, also reducing the tuner initialization message in the kernel log
    to once per power-on, as well as fixing the interference with other
    tuners.
    
    Link: https://lore.kernel.org/linux-media/trinity-2a86eb9d-6264-4387-95e1-ba7b79a4050f-1638392923493@3c-app-gmx-bap03
    
    Fixes: e955f959ac52 ("media: si2157: Better check for running tuner in init")
    Reported-by: Robert Schlabbach <robert_s@gmx.net>
    Signed-off-by: Robert Schlabbach <robert_s@gmx.net>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7009a5fbc589484c1b6e6e5ed1c47b64b62c5769
Author: Zhou Qingyang <zhou1615@umn.edu>
Date:   Tue Nov 30 17:34:44 2021 +0100

    media: saa7146: mxb: Fix a NULL pointer dereference in mxb_attach()
    
    [ Upstream commit 0407c49ebe330333478440157c640fffd986f41b ]
    
    In mxb_attach(dev, info), saa7146_vv_init() is called to allocate a
    new memory for dev->vv_data. saa7146_vv_release() will be called on
    failure of mxb_probe(dev). There is a dereference of dev->vv_data
    in saa7146_vv_release(), which could lead to a NULL pointer dereference
    on failure of saa7146_vv_init().
    
    Fix this bug by adding a check of saa7146_vv_init().
    
    This bug was found by a static analyzer. The analysis employs
    differential checking to identify inconsistent security operations
    (e.g., checks or kfrees) between two code paths and confirms that the
    inconsistent operations are not recovered in the current function or
    the callers, so they constitute bugs.
    
    Note that, as a bug found by static analysis, it can be a false
    positive or hard to trigger. Multiple researchers have cross-reviewed
    the bug.
    
    Builds with CONFIG_VIDEO_MXB=m show no new warnings,
    and our static analyzer no longer warns about this code.
    
    Fixes: 03b1930efd3c ("V4L/DVB: saa7146: fix regression of the av7110/budget-av driver")
    Signed-off-by: Zhou Qingyang <zhou1615@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df79d2bf95e0b490ad72f46d4b58581bd8f6fc7b
Author: Zhou Qingyang <zhou1615@umn.edu>
Date:   Tue Nov 30 16:38:05 2021 +0100

    media: dib8000: Fix a memleak in dib8000_init()
    
    [ Upstream commit 8dbdcc7269a83305ee9d677b75064d3530a48ee2 ]
    
    In dib8000_init(), the variable fe is not freed or passed out on the
    failure of dib8000_identify(&state->i2c), which could lead to a memleak.
    
    Fix this bug by adding a kfree of fe in the error path.
    
    This bug was found by a static analyzer. The analysis employs
    differential checking to identify inconsistent security operations
    (e.g., checks or kfrees) between two code paths and confirms that the
    inconsistent operations are not recovered in the current function or
    the callers, so they constitute bugs.
    
    Note that, as a bug found by static analysis, it can be a false
    positive or hard to trigger. Multiple researchers have cross-reviewed
    the bug.
    
    Builds with CONFIG_DVB_DIB8000=m show no new warnings,
    and our static analyzer no longer warns about this code.
    
    Fixes: 77e2c0f5d471 ("V4L/DVB (12900): DiB8000: added support for DiBcom ISDB-T/ISDB-Tsb demodulator DiB8000")
    Signed-off-by: Zhou Qingyang <zhou1615@umn.edu>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0cb43a2c674a0b44418489deaa7ca2ca330283f
Author: Reiji Watanabe <reijiw@google.com>
Date:   Sun Dec 5 16:47:35 2021 -0800

    arm64: clear_page() shouldn't use DC ZVA when DCZID_EL0.DZP == 1
    
    [ Upstream commit f0616abd4e67143b45b04b565839148458857347 ]
    
    Currently, clear_page() uses DC ZVA instruction unconditionally.  But it
    should make sure that DCZID_EL0.DZP, which indicates whether or not use
    of DC ZVA instruction is prohibited, is zero when using the instruction.
    Use STNP instead when DCZID_EL0.DZP == 1.
    
    Fixes: f27bb139c387 ("arm64: Miscellaneous library functions")
    Signed-off-by: Reiji Watanabe <reijiw@google.com>
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Link: https://lore.kernel.org/r/20211206004736.1520989-2-reijiw@google.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88ed31aab481e0451184924672afcbf484c5c3eb
Author: Will Deacon <will@kernel.org>
Date:   Fri Mar 19 10:01:09 2021 +0000

    arm64: lib: Annotate {clear, copy}_page() as position-independent
    
    [ Upstream commit 8d9902055c57548bb342dc3ca78caa21e9643024 ]
    
    clear_page() and copy_page() are suitable for use outside of the kernel
    address space, so annotate them as position-independent code.
    
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Quentin Perret <qperret@google.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210319100146.1149909-2-qperret@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69e402a985418d5fc609730f5f8a81ca514bb823
Author: Kajol Jain <kjain@linux.ibm.com>
Date:   Mon Dec 6 13:03:15 2021 +0530

    bpf: Remove config check to enable bpf support for branch records
    
    [ Upstream commit db52f57211b4e45f0ebb274e2c877b211dc18591 ]
    
    Branch data available to BPF programs can be very useful to get stack traces
    out of userspace application.
    
    Commit fff7b64355ea ("bpf: Add bpf_read_branch_records() helper") added BPF
    support to capture branch records in x86. Enable this feature also for other
    architectures as well by removing checks specific to x86.
    
    If an architecture doesn't support branch records, bpf_read_branch_records()
    still has appropriate checks and it will return an -EINVAL in that scenario.
    Based on UAPI helper doc in include/uapi/linux/bpf.h, unsupported architectures
    should return -ENOENT in such case. Hence, update the appropriate check to
    return -ENOENT instead.
    
    Selftest 'perf_branches' result on power9 machine which has the branch stacks
    support:
    
     - Before this patch:
    
      [command]# ./test_progs -t perf_branches
       #88/1 perf_branches/perf_branches_hw:FAIL
       #88/2 perf_branches/perf_branches_no_hw:OK
       #88 perf_branches:FAIL
      Summary: 0/1 PASSED, 0 SKIPPED, 1 FAILED
    
     - After this patch:
    
      [command]# ./test_progs -t perf_branches
       #88/1 perf_branches/perf_branches_hw:OK
       #88/2 perf_branches/perf_branches_no_hw:OK
       #88 perf_branches:OK
      Summary: 1/2 PASSED, 0 SKIPPED, 0 FAILED
    
    Selftest 'perf_branches' result on power9 machine which doesn't have branch
    stack report:
    
     - After this patch:
    
      [command]# ./test_progs -t perf_branches
       #88/1 perf_branches/perf_branches_hw:SKIP
       #88/2 perf_branches/perf_branches_no_hw:OK
       #88 perf_branches:OK
      Summary: 1/1 PASSED, 1 SKIPPED, 0 FAILED
    
    Fixes: fff7b64355eac ("bpf: Add bpf_read_branch_records() helper")
    Suggested-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Kajol Jain <kjain@linux.ibm.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20211206073315.77432-1-kjain@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 924886fa2246d24d0f0f80096300f607f1b7a829
Author: Hou Tao <houtao1@huawei.com>
Date:   Fri Dec 3 13:30:01 2021 +0800

    bpf: Disallow BPF_LOG_KERNEL log level for bpf(BPF_BTF_LOAD)
    
    [ Upstream commit 866de407444398bc8140ea70de1dba5f91cc34ac ]
    
    BPF_LOG_KERNEL is only used internally, so disallow bpf_btf_load()
    to set log level as BPF_LOG_KERNEL. The same checking has already
    been done in bpf_check(), so factor out a helper to check the
    validity of log attributes and use it in both places.
    
    Fixes: 8580ac9404f6 ("bpf: Process in-kernel BTF")
    Signed-off-by: Hou Tao <houtao1@huawei.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Yonghong Song <yhs@fb.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Link: https://lore.kernel.org/bpf/20211203053001.740945-1-houtao1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 218d952160f71bfc85cbad4a4834e0de306e4b77
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Wed Dec 1 10:10:29 2021 -0800

    bpf: Adjust BTF log size limit.
    
    [ Upstream commit c5a2d43e998a821701029f23e25b62f9188e93ff ]
    
    Make BTF log size limit to be the same as the verifier log size limit.
    Otherwise tools that progressively increase log size and use the same log
    for BTF loading and program loading will be hitting hard to debug EINVAL.
    
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20211201181040.23337-7-alexei.starovoitov@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b77ef5b4ead6a17baa1728d98c1f6a4ba1dd44c8
Author: Vincent Donnefort <vincent.donnefort@arm.com>
Date:   Mon Nov 29 17:31:15 2021 +0000

    sched/fair: Fix per-CPU kthread and wakee stacking for asym CPU capacity
    
    [ Upstream commit 014ba44e8184e1acf93e0cbb7089ee847802f8f0 ]
    
    select_idle_sibling() has a special case for tasks woken up by a per-CPU
    kthread where the selected CPU is the previous one. For asymmetric CPU
    capacity systems, the assumption was that the wakee couldn't have a
    bigger utilization during task placement than it used to have during the
    last activation. That was not considering uclamp.min which can completely
    change between two task activations and as a consequence mandates the
    fitness criterion asym_fits_capacity(), even for the exit path described
    above.
    
    Fixes: b4c9c9f15649 ("sched/fair: Prefer prev cpu in asymmetric wakeup path")
    Signed-off-by: Vincent Donnefort <vincent.donnefort@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Reviewed-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Link: https://lkml.kernel.org/r/20211129173115.4006346-1-vincent.donnefort@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7d5b3bc5263cb82c5673e5972aba543f96199fa
Author: Vincent Donnefort <vincent.donnefort@arm.com>
Date:   Wed Dec 1 14:34:50 2021 +0000

    sched/fair: Fix detection of per-CPU kthreads waking a task
    
    [ Upstream commit 8b4e74ccb582797f6f0b0a50372ebd9fd2372a27 ]
    
    select_idle_sibling() has a special case for tasks woken up by a per-CPU
    kthread, where the selected CPU is the previous one. However, the current
    condition for this exit path is incomplete. A task can wake up from an
    interrupt context (e.g. hrtimer), while a per-CPU kthread is running. A
    such scenario would spuriously trigger the special case described above.
    Also, a recent change made the idle task like a regular per-CPU kthread,
    hence making that situation more likely to happen
    (is_per_cpu_kthread(swapper) being true now).
    
    Checking for task context makes sure select_idle_sibling() will not
    interpret a wake up from any other context as a wake up by a per-CPU
    kthread.
    
    Fixes: 52262ee567ad ("sched/fair: Allow a per-CPU kthread waking a task to stack on the same CPU, to fix XFS performance regression")
    Signed-off-by: Vincent Donnefort <vincent.donnefort@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Vincent Guittot <vincent.guittot@linaro.org>
    Reviewed-by: Valentin Schneider <valentin.schneider@arm.com>
    Link: https://lore.kernel.org/r/20211201143450.479472-1-vincent.donnefort@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec121517ac8d95a67a1b6ee6dc3102d64a4aa87b
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Thu Dec 2 02:02:47 2021 +0800

    Bluetooth: btmtksdio: fix resume failure
    
    [ Upstream commit 561ae1d46a8ddcbc13162d5771f5ed6c8249e730 ]
    
    btmtksdio have to rely on MMC_PM_KEEP_POWER in pm_flags to avoid that
    SDIO power is being shut off during the device is in suspend. That fixes
    the SDIO command fails to access the bus after the device is resumed.
    
    Fixes: 7f3c563c575e7 ("Bluetooth: btmtksdio: Add runtime PM support to SDIO based Bluetooth")
    Co-developed-by: Mark-yw Chen <mark-yw.chen@mediatek.com>
    Signed-off-by: Mark-yw Chen <mark-yw.chen@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a7edcb3ef72ec5fc9bb3e22e01dd9553becd7ac
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 2 11:07:03 2021 +0800

    staging: rtl8192e: rtllib_module: fix error handle case in alloc_rtllib()
    
    [ Upstream commit e730cd57ac2dfe94bca0f14a3be8e1b21de41a9c ]
    
    Some variables are leaked in the error handling in alloc_rtllib(), free
    the variables in the error path.
    
    Fixes: 94a799425eee ("From: wlanfae <wlanfae@realtek.com>")
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20211202030704.2425621-3-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49f5cd2b7c417a1dc71d45a866ea14b17ef72c4f
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Dec 2 11:07:02 2021 +0800

    staging: rtl8192e: return error code from rtllib_softmac_init()
    
    [ Upstream commit 68bf78ff59a0891eb1239948e94ce10f73a9dd30 ]
    
    If it fails to allocate 'dot11d_info', rtllib_softmac_init()
    should return error code. And remove unneccessary error message.
    
    Fixes: 94a799425eee ("From: wlanfae <wlanfae@realtek.com>")
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20211202030704.2425621-2-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04fdd426cef2acfec33c703c700bb1d8862c7804
Author: Tasos Sahanidis <tasos@tasossah.com>
Date:   Fri Sep 3 09:47:58 2021 +0300

    floppy: Fix hang in watchdog when disk is ejected
    
    [ Upstream commit fb48febce7e30baed94dd791e19521abd2c3fd83 ]
    
    When the watchdog detects a disk change, it calls cancel_activity(),
    which in turn tries to cancel the fd_timer delayed work.
    
    In the above scenario, fd_timer_fn is set to fd_watchdog(), meaning
    it is trying to cancel its own work.
    This results in a hang as cancel_delayed_work_sync() is waiting for the
    watchdog (itself) to return, which never happens.
    
    This can be reproduced relatively consistently by attempting to read a
    broken floppy, and ejecting it while IO is being attempted and retried.
    
    To resolve this, this patch calls cancel_delayed_work() instead, which
    cancels the work without waiting for the watchdog to return and finish.
    
    Before this regression was introduced, the code in this section used
    del_timer(), and not del_timer_sync() to delete the watchdog timer.
    
    Link: https://lore.kernel.org/r/399e486c-6540-db27-76aa-7a271b061f76@tasossah.com
    Fixes: 070ad7e793dc ("floppy: convert to delayed work and single-thread wq")
    Signed-off-by: Tasos Sahanidis <tasos@tasossah.com>
    Signed-off-by: Denis Efremov <efremov@linux.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45bbe008013fb93b16f28d0eacbc8810c949e2b3
Author: Lino Sanfilippo <LinoSanfilippo@gmx.de>
Date:   Mon Nov 29 18:42:38 2021 +0100

    serial: amba-pl011: do not request memory region twice
    
    [ Upstream commit d1180405c7b5c7a1c6bde79d5fc24fe931430737 ]
    
    With commit 3873e2d7f63a ("drivers: PL011: refactor pl011_probe()") the
    function devm_ioremap() called from pl011_setup_port() was replaced with
    devm_ioremap_resource(). Since this function not only remaps but also
    requests the ports io memory region it now collides with the .config_port()
    callback which requests the same region at uart port registration.
    
    Since devm_ioremap_resource() already claims the memory successfully, the
    request in .config_port() fails.
    
    Later at uart port deregistration the attempt to release the unclaimed
    memory also fails. The failure results in a “Trying to free nonexistent
    resource" warning.
    
    Fix these issues by removing the callbacks that implement the redundant
    memory allocation/release. Also make sure that changing the drivers io
    memory base address via TIOCSSERIAL is not allowed any more.
    
    Fixes: 3873e2d7f63a ("drivers: PL011: refactor pl011_probe()")
    Signed-off-by: Lino Sanfilippo <LinoSanfilippo@gmx.de>
    Link: https://lore.kernel.org/r/20211129174238.8333-1-LinoSanfilippo@gmx.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8409d2394cca3cef7f625d8a74702f1d600eee3e
Author: Lizhi Hou <lizhi.hou@xilinx.com>
Date:   Mon Nov 29 12:23:02 2021 -0800

    tty: serial: uartlite: allow 64 bit address
    
    [ Upstream commit 3672fb65155530b5eea6225685c75329b6debec3 ]
    
    The base address of uartlite registers could be 64 bit address which is from
    device resource. When ulite_probe() calls ulite_assign(), this 64 bit
    address is casted to 32-bit. The fix is to replace "u32" type with
    "phys_addr_t" type for the base address in ulite_assign() argument list.
    
    Fixes: 8fa7b6100693 ("[POWERPC] Uartlite: Separate the bus binding from the driver proper")
    Signed-off-by: Lizhi Hou <lizhi.hou@xilinx.com>
    Link: https://lore.kernel.org/r/20211129202302.1319033-1-lizhi.hou@xilinx.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a001a15ab3748deaf984076f0c4d96810258e182
Author: Nishanth Menon <nm@ti.com>
Date:   Fri Nov 12 22:26:40 2021 -0600

    arm64: dts: ti: k3-j7200: Correct the d-cache-sets info
    
    [ Upstream commit a172c86931709d6663318609d71a811333bdf4b0 ]
    
    A72 Cluster (chapter 1.3.1 [1]) has 48KB Icache, 32KB Dcache and 1MB L2 Cache
     - ICache is 3-way set-associative
     - Dcache is 2-way set-associative
     - Line size are 64bytes
    
    32KB (Dcache)/64 (fixed line length of 64 bytes) = 512 ways
    512 ways / 2 (Dcache is 2-way per set) = 256 sets.
    
    So, correct the d-cache-sets info.
    
    [1] https://www.ti.com/lit/pdf/spruiu1
    
    Fixes: d361ed88455f ("arm64: dts: ti: Add support for J7200 SoC")
    Reported-by: Peng Fan <peng.fan@nxp.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Reviewed-by: Pratyush Yadav <p.yadav@ti.com>
    Reviewed-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Link: https://lore.kernel.org/r/20211113042640.30955-1-nm@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75919207c16a9164712cd3e31356216f4f8ef9ab
Author: Nishanth Menon <nm@ti.com>
Date:   Fri Nov 12 22:36:39 2021 -0600

    arm64: dts: ti: k3-j721e: Fix the L2 cache sets
    
    [ Upstream commit e9ba3a5bc6fdc2c796c69fdaf5ed6c9957cf9f9d ]
    
    A72's L2 cache[1] on J721e[2] is 1MB. A72's L2 is fixed line length of
    64 bytes and 16-way set-associative cache structure.
    
    1MB of L2 / 64 (line length) = 16384 ways
    16384 ways / 16 = 1024 sets
    
    Fix the l2 cache-sets.
    
    [1] https://developer.arm.com/documentation/100095/0003/Level-2-Memory-System/About-the-L2-memory-system
    [2] http://www.ti.com/lit/pdf/spruil1
    
    Fixes: 2d87061e70de ("arm64: dts: ti: Add Support for J721E SoC")
    Reported-by: Peng Fan <peng.fan@nxp.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Reviewed-by: Pratyush Yadav <p.yadav@ti.com>
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Link: https://lore.kernel.org/r/20211113043639.4413-1-nm@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2dcfa3c76596cdf4c3911bc11762f1ce80716e53
Author: Nishanth Menon <nm@ti.com>
Date:   Fri Nov 12 22:36:38 2021 -0600

    arm64: dts: ti: k3-j7200: Fix the L2 cache sets
    
    [ Upstream commit d0c826106f3fc11ff97285102b576b65576654ae ]
    
    A72's L2 cache[1] on J7200[2] is 1MB. A72's L2 is fixed line length of
    64 bytes and 16-way set-associative cache structure.
    
    1MB of L2 / 64 (line length) = 16384 ways
    16384 ways / 16 = 1024 sets
    
    Fix the l2 cache-sets.
    
    [1] https://developer.arm.com/documentation/100095/0003/Level-2-Memory-System/About-the-L2-memory-system
    [2] https://www.ti.com/lit/pdf/spruiu1
    
    Fixes: d361ed88455f ("arm64: dts: ti: Add support for J7200 SoC")
    Reported-by: Peng Fan <peng.fan@nxp.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Reviewed-by: Pratyush Yadav <p.yadav@ti.com>
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Link: https://lore.kernel.org/r/20211113043638.4358-1-nm@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f277978d6c463942e1bd0137053f74ae4d6892af
Author: Zhou Qingyang <zhou1615@umn.edu>
Date:   Wed Dec 1 23:13:10 2021 +0800

    drm/radeon/radeon_kms: Fix a NULL pointer dereference in radeon_driver_open_kms()
    
    [ Upstream commit ab50cb9df8896b39aae65c537a30de2c79c19735 ]
    
    In radeon_driver_open_kms(), radeon_vm_bo_add() is assigned to
    vm->ib_bo_va and passes and used in radeon_vm_bo_set_addr(). In
    radeon_vm_bo_set_addr(), there is a dereference of vm->ib_bo_va,
    which could lead to a NULL pointer dereference on failure of
    radeon_vm_bo_add().
    
    Fix this bug by adding a check of vm->ib_bo_va.
    
    This bug was found by a static analyzer. The analysis employs
    differential checking to identify inconsistent security operations
    (e.g., checks or kfrees) between two code paths and confirms that the
    inconsistent operations are not recovered in the current function or
    the callers, so they constitute bugs.
    
    Note that, as a bug found by static analysis, it can be a false
    positive or hard to trigger. Multiple researchers have cross-reviewed
    the bug.
    
    Builds with CONFIG_DRM_RADEON=m show no new warnings,
    and our static analyzer no longer warns about this code.
    
    Fixes: cc9e67e3d700 ("drm/radeon: fix VM IB handling")
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Zhou Qingyang <zhou1615@umn.edu>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ca1b3b82fe71a6c52ee5f9737e90a50873a37e9
Author: Zhou Qingyang <zhou1615@umn.edu>
Date:   Fri Dec 3 00:17:36 2021 +0800

    drm/amdgpu: Fix a NULL pointer dereference in amdgpu_connector_lcd_native_mode()
    
    [ Upstream commit b220110e4cd442156f36e1d9b4914bb9e87b0d00 ]
    
    In amdgpu_connector_lcd_native_mode(), the return value of
    drm_mode_duplicate() is assigned to mode, and there is a dereference
    of it in amdgpu_connector_lcd_native_mode(), which will lead to a NULL
    pointer dereference on failure of drm_mode_duplicate().
    
    Fix this bug add a check of mode.
    
    This bug was found by a static analyzer. The analysis employs
    differential checking to identify inconsistent security operations
    (e.g., checks or kfrees) between two code paths and confirms that the
    inconsistent operations are not recovered in the current function or
    the callers, so they constitute bugs.
    
    Note that, as a bug found by static analysis, it can be a false
    positive or hard to trigger. Multiple researchers have cross-reviewed
    the bug.
    
    Builds with CONFIG_DRM_AMDGPU=m show no new warnings, and
    our static analyzer no longer warns about this code.
    
    Fixes: d38ceaf99ed0 ("drm/amdgpu: add core driver (v4)")
    Signed-off-by: Zhou Qingyang <zhou1615@umn.edu>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96e05d2d9370557a0456096907cc6c0fcfbf892f
Author: Paul Gerber <Paul.Gerber@tq-group.com>
Date:   Mon Nov 22 12:42:25 2021 +0100

    thermal/drivers/imx8mm: Enable ADC when enabling monitor
    
    [ Upstream commit 3de89d8842a2b5d3dd22ebf97dd561ae0a330948 ]
    
    The i.MX 8MP has a ADC_PD bit in the TMU_TER register that controls the
    operating mode of the ADC:
    * 0 means normal operating mode
    * 1 means power down mode
    
    When enabling/disabling the TMU, the ADC operating mode must be set
    accordingly.
    
    i.MX 8M Mini & Nano are lacking this bit.
    
    Signed-off-by: Paul Gerber <Paul.Gerber@tq-group.com>
    Signed-off-by: Alexander Stein <alexander.stein@ew.tq-group.com>
    Fixes: 2b8f1f0337c5 ("thermal: imx8mm: Add i.MX8MP support")
    Link: https://lore.kernel.org/r/20211122114225.196280-1-alexander.stein@ew.tq-group.com
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef72449e2d794f8cbca0535fdf3a77a5cd9a84a7
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Nov 23 19:36:51 2021 +0100

    ACPI: EC: Rework flushing of EC work while suspended to idle
    
    [ Upstream commit 4a9af6cac050dce2e895ec3205c4615383ad9112 ]
    
    The flushing of pending work in the EC driver uses drain_workqueue()
    to flush the event handling work that can requeue itself via
    advance_transaction(), but this is problematic, because that
    work may also be requeued from the query workqueue.
    
    Namely, if an EC transaction is carried out during the execution of
    a query handler, it involves calling advance_transaction() which
    may queue up the event handling work again.  This causes the kernel
    to complain about attempts to add a work item to the EC event
    workqueue while it is being drained and worst-case it may cause a
    valid event to be skipped.
    
    To avoid this problem, introduce two new counters, events_in_progress
    and queries_in_progress, incremented when a work item is queued on
    the event workqueue or the query workqueue, respectively, and
    decremented at the end of the corresponding work function, and make
    acpi_ec_dispatch_gpe() the workqueues in a loop until the both of
    these counters are zero (or system wakeup is pending) instead of
    calling acpi_ec_flush_work().
    
    At the same time, change __acpi_ec_flush_work() to call
    flush_workqueue() instead of drain_workqueue() to flush the event
    workqueue.
    
    While at it, use the observation that the work item queued in
    acpi_ec_query() cannot be pending at that time, because it is used
    only once, to simplify the code in there.
    
    Additionally, clean up a comment in acpi_ec_query() and adjust white
    space in acpi_ec_event_processor().
    
    Fixes: f0ac20c3f613 ("ACPI: EC: Fix flushing of pending work")
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0acd5a09796c3c4b919d329c6d9db3a44884c80
Author: William Kucharski <william.kucharski@oracle.com>
Date:   Wed Dec 1 09:56:58 2021 -0700

    cgroup: Trace event cgroup id fields should be u64
    
    [ Upstream commit e14da77113bb890d7bf9e5d17031bdd476a7ce5e ]
    
    Various trace event fields that store cgroup IDs were declared as
    ints, but cgroup_id(() returns a u64 and the structures and associated
    TP_printk() calls were not updated to reflect this.
    
    Fixes: 743210386c03 ("cgroup: use cgrp->kn->id as the cgroup ID")
    Signed-off-by: William Kucharski <william.kucharski@oracle.com>
    Reviewed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7e178e264183efa6ca70ba1b6440b2ca3bb0e6c
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Dec 1 05:05:59 2021 +0300

    arm64: dts: qcom: msm8916: fix MMC controller aliases
    
    [ Upstream commit b0293c19d42f6d6951c2fab9a47fed50baf2c14d ]
    
    Change sdhcN aliases to mmcN to make them actually work. Currently the
    board uses non-standard aliases sdhcN, which do not work, resulting in
    mmc0 and mmc1 hosts randomly changing indices between boots.
    
    Fixes: c4da5a561627 ("arm64: dts: qcom: Add msm8916 sdhci configuration nodes")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20211201020559.1611890-1-dmitry.baryshkov@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 894d91c6334b8778750be4dc7c8cd0d3114864ca
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Nov 23 12:50:31 2021 +0100

    netfilter: bridge: add support for pppoe filtering
    
    [ Upstream commit 28b78ecffea8078d81466b2e01bb5a154509f1ba ]
    
    This makes 'bridge-nf-filter-pppoe-tagged' sysctl work for
    bridged traffic.
    
    Looking at the original commit it doesn't appear this ever worked:
    
     static unsigned int br_nf_post_routing(unsigned int hook, struct sk_buff **pskb,
    [..]
            if (skb->protocol == htons(ETH_P_8021Q)) {
                    skb_pull(skb, VLAN_HLEN);
                    skb->network_header += VLAN_HLEN;
    +       } else if (skb->protocol == htons(ETH_P_PPP_SES)) {
    +               skb_pull(skb, PPPOE_SES_HLEN);
    +               skb->network_header += PPPOE_SES_HLEN;
            }
     [..]
            NF_HOOK(... POST_ROUTING, ...)
    
    ... but the adjusted offsets are never restored.
    
    The alternative would be to rip this code out for good,
    but otoh we'd have to keep this anyway for the vlan handling
    (which works because vlan tag info is in the skb, not the packet
     payload).
    
    Reported-and-tested-by: Amish Chana <amish@3g.co.za>
    Fixes: 516299d2f5b6f97 ("[NETFILTER]: bridge-nf: filter bridged IPv4/IPv6 encapsulated in pppoe traffic")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 13f64bbe425524ed7b8eecad046150dae7265b29
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Wed Nov 17 11:34:26 2021 +0100

    thermal/drivers/imx: Implement runtime PM support
    
    [ Upstream commit 4cf2ddf16e175ee18c5c29865c32da7d6269cf44 ]
    
    Starting with commit d92ed2c9d3ff ("thermal: imx: Use driver's local
    data to decide whether to run a measurement") this driver stared using
    irq_enabled flag to make decision to power on/off the thermal
    core. This triggered a regression, where after reaching critical
    temperature, alarm IRQ handler set irq_enabled to false, disabled
    thermal core and was not able read temperature and disable cooling
    sequence.
    
    In case the cooling device is "CPU/GPU freq", the system will run with
    reduce performance until next reboot.
    
    To solve this issue, we need to move all parts implementing hand made
    runtime power management and let it handle actual runtime PM framework.
    
    Fixes: d92ed2c9d3ff ("thermal: imx: Use driver's local data to decide whether to run a measurement")
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Tested-by: Petr Beneš <petr.benes@ysoft.com>
    Link: https://lore.kernel.org/r/20211117103426.81813-1-o.rempel@pengutronix.de
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3a59f34e87c5317bdf9513ef31207ba70e3de61
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Aug 19 22:05:28 2021 +0200

    media: venus: core: Fix a resource leak in the error handling path of 'venus_probe()'
    
    [ Upstream commit 8cc7a1b2aca067397a016cdb971a5e6ad9b640c7 ]
    
    A successful 'of_platform_populate()' call should be balanced by a
    corresponding 'of_platform_depopulate()' call in the error handling path
    of the probe, as already done in the remove function.
    
    A successful 'venus_firmware_init()' call should be balanced by a
    corresponding 'venus_firmware_deinit()' call in the error handling path
    of the probe, as already done in the remove function.
    
    Update the error handling path accordingly.
    
    Fixes: f9799fcce4bb ("media: venus: firmware: register separate platform_device for firmware loader")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50c4244906d654605639f9b6aecf8bd95050304b
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Aug 12 07:14:22 2021 +0200

    media: venus: core: Fix a potential NULL pointer dereference in an error handling path
    
    [ Upstream commit e4debea9be7d5db52bc6a565a4c02c3c6560d093 ]
    
    The normal path of the function makes the assumption that
    'pm_ops->core_power' may be NULL.
    We should make the same assumption in the error handling path or a NULL
    pointer dereference may occur.
    
    Add the missing test before calling 'pm_ops->core_power'
    
    Fixes: 9e8efdb57879 ("media: venus: core: vote for video-mem path")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eeefa2eae8fc82ad757a2241b9f82ac33e99e6b4
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Fri Feb 5 19:11:49 2021 +0100

    media: venus: core, venc, vdec: Fix probe dependency error
    
    [ Upstream commit 08b1cf474b7f72750adebe0f0a35f8e9a3eb75f6 ]
    
    Commit aaaa93eda64b ("media] media: venus: venc: add video encoder files")
    is the last in a series of three commits to add core.c vdec.c and venc.c
    adding core, encoder and decoder.
    
    The encoder and decoder check for core drvdata as set and return -EPROBE_DEFER
    if it has not been set, however both the encoder and decoder rely on
    core.v4l2_dev as valid.
    
    core.v4l2_dev will not be valid until v4l2_device_register() has completed
    in core.c's probe().
    
    Normally this is never seen however, Dmitry reported the following
    backtrace when compiling drivers and firmware directly into a kernel image.
    
    [    5.259968] Hardware name: Qualcomm Technologies, Inc. Robotics RB5 (DT)
    [    5.269850] sd 0:0:0:3: [sdd] Optimal transfer size 524288 bytes
    [    5.275505] Workqueue: events deferred_probe_work_func
    [    5.275513] pstate: 60400005 (nZCv daif +PAN -UAO -TCO BTYPE=--)
    [    5.441211] usb 2-1: new SuperSpeedPlus Gen 2 USB device number 2 using xhci-hcd
    [    5.442486] pc : refcount_warn_saturate+0x140/0x148
    [    5.493756] hub 2-1:1.0: USB hub found
    [    5.496266] lr : refcount_warn_saturate+0x140/0x148
    [    5.500982] hub 2-1:1.0: 4 ports detected
    [    5.503440] sp : ffff80001067b730
    [    5.503442] x29: ffff80001067b730
    [    5.592660] usb 1-1: new high-speed USB device number 2 using xhci-hcd
    [    5.598478] x28: ffff6c6bc1c379b8
    [    5.598480] x27: ffffa5c673852960 x26: ffffa5c673852000
    [    5.598484] x25: ffff6c6bc1c37800 x24: 0000000000000001
    [    5.810652] x23: 0000000000000000 x22: ffffa5c673bc7118
    [    5.813777] hub 1-1:1.0: USB hub found
    [    5.816108] x21: ffffa5c674440000 x20: 0000000000000001
    [    5.820846] hub 1-1:1.0: 4 ports detected
    [    5.825415] x19: ffffa5c6744f4000 x18: ffffffffffffffff
    [    5.825418] x17: 0000000000000000 x16: 0000000000000000
    [    5.825421] x15: 00000a4810c193ba x14: 0000000000000000
    [    5.825424] x13: 00000000000002b8 x12: 000000000000f20a
    [    5.825427] x11: 000000000000f20a x10: 0000000000000038
    [    5.845447] usb 2-1.1: new SuperSpeed Gen 1 USB device number 3 using xhci-hcd
    [    5.845904]
    [    5.845905] x9 : 0000000000000000 x8 : ffff6c6d36fae780
    [    5.871208] x7 : ffff6c6d36faf240 x6 : 0000000000000000
    [    5.876664] x5 : 0000000000000004 x4 : 0000000000000085
    [    5.882121] x3 : 0000000000000119 x2 : ffffa5c6741ef478
    [    5.887578] x1 : 3acbb3926faf5f00 x0 : 0000000000000000
    [    5.893036] Call trace:
    [    5.895551]  refcount_warn_saturate+0x140/0x148
    [    5.900202]  __video_register_device+0x64c/0xd10
    [    5.904944]  venc_probe+0xc4/0x148
    [    5.908444]  platform_probe+0x68/0xe0
    [    5.912210]  really_probe+0x118/0x3e0
    [    5.915977]  driver_probe_device+0x5c/0xc0
    [    5.920187]  __device_attach_driver+0x98/0xb8
    [    5.924661]  bus_for_each_drv+0x68/0xd0
    [    5.928604]  __device_attach+0xec/0x148
    [    5.932547]  device_initial_probe+0x14/0x20
    [    5.936845]  bus_probe_device+0x9c/0xa8
    [    5.940788]  device_add+0x3e8/0x7c8
    [    5.944376]  of_device_add+0x4c/0x60
    [    5.948056]  of_platform_device_create_pdata+0xbc/0x140
    [    5.953425]  of_platform_bus_create+0x17c/0x3c0
    [    5.958078]  of_platform_populate+0x80/0x110
    [    5.962463]  venus_probe+0x2ec/0x4d8
    [    5.966143]  platform_probe+0x68/0xe0
    [    5.969907]  really_probe+0x118/0x3e0
    [    5.973674]  driver_probe_device+0x5c/0xc0
    [    5.977882]  __device_attach_driver+0x98/0xb8
    [    5.982356]  bus_for_each_drv+0x68/0xd0
    [    5.986298]  __device_attach+0xec/0x148
    [    5.990242]  device_initial_probe+0x14/0x20
    [    5.994539]  bus_probe_device+0x9c/0xa8
    [    5.998481]  deferred_probe_work_func+0x74/0xb0
    [    6.003132]  process_one_work+0x1e8/0x360
    [    6.007254]  worker_thread+0x208/0x478
    [    6.011106]  kthread+0x150/0x158
    [    6.014431]  ret_from_fork+0x10/0x30
    [    6.018111] ---[ end trace f074246b1ecdb466 ]---
    
    This patch fixes by
    
    - Only setting drvdata after v4l2_device_register() completes
    - Moving v4l2_device_register() so that suspend/reume in core::probe()
      stays as-is
    - Changes pm_ops->core_function() to take struct venus_core not struct
      device
    - Minimal rework of v4l2_device_*register in probe/remove
    
    Reported-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53f65afc260f962cb05bb1d1c29be6edabc2e939
Author: Stanimir Varbanov <stanimir.varbanov@linaro.org>
Date:   Sat Jan 9 08:21:30 2021 +0100

    media: venus: pm_helpers: Control core power domain manually
    
    [ Upstream commit a76f43a490542ecb8c57176730b6eb665d716139 ]
    
    Presently we use device_link to control core power domain. But this
    leads to issues because the genpd doesn't guarantee synchronous on/off
    for supplier devices. Switch to manually control by pmruntime calls.
    
    Tested-by: Fritz Koenig <frkoenig@chromium.org>
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89f518b153d196d28788272e56d88db2a8e1a683
Author: Philipp Zabel <p.zabel@pengutronix.de>
Date:   Fri Nov 19 11:41:20 2021 +0100

    media: coda: fix CODA960 JPEG encoder buffer overflow
    
    [ Upstream commit 1a59cd88f55068710f6549bee548846661673780 ]
    
    Stop the CODA960 JPEG encoder from overflowing capture buffers.
    The bitstream buffer overflow interrupt doesn't seem to be connected,
    so this has to be handled via timeout instead.
    
    Reported-by: Martin Weber <martin.weber@br-automation.com>
    Fixes: 96f6f62c4656 ("media: coda: jpeg: add CODA960 JPEG encoder support")
    Tested-by: Martin Weber <martin.weber@br-automation.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1da628d351a9fd9269ce543af0ecac464c8c3c4b
Author: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
Date:   Wed Nov 17 14:06:30 2021 +0100

    media: mtk-vcodec: call v4l2_m2m_ctx_release first when file is released
    
    [ Upstream commit 9f89c881bffbdffe4060ffaef3489a2830a6dd9c ]
    
    The func v4l2_m2m_ctx_release waits for currently running jobs
    to finish and then stop streaming both queues and frees the buffers.
    All this should be done before the call to mtk_vcodec_enc_release
    which frees the encoder handler. This fixes null-pointer dereference bug:
    
    [  638.028076] Mem abort info:
    [  638.030932]   ESR = 0x96000004
    [  638.033978]   EC = 0x25: DABT (current EL), IL = 32 bits
    [  638.039293]   SET = 0, FnV = 0
    [  638.042338]   EA = 0, S1PTW = 0
    [  638.045474]   FSC = 0x04: level 0 translation fault
    [  638.050349] Data abort info:
    [  638.053224]   ISV = 0, ISS = 0x00000004
    [  638.057055]   CM = 0, WnR = 0
    [  638.060018] user pgtable: 4k pages, 48-bit VAs, pgdp=000000012b6db000
    [  638.066485] [00000000000001a0] pgd=0000000000000000, p4d=0000000000000000
    [  638.073277] Internal error: Oops: 96000004 [#1] SMP
    [  638.078145] Modules linked in: rfkill mtk_vcodec_dec mtk_vcodec_enc uvcvideo mtk_mdp mtk_vcodec_common videobuf2_dma_contig v4l2_h264 cdc_ether v4l2_mem2mem videobuf2_vmalloc usbnet videobuf2_memops videobuf2_v4l2 r8152 videobuf2_common videodev cros_ec_sensors cros_ec_sensors_core industrialio_triggered_buffer kfifo_buf elan_i2c elants_i2c sbs_battery mc cros_usbpd_charger cros_ec_chardev cros_usbpd_logger crct10dif_ce mtk_vpu fuse ip_tables x_tables ipv6
    [  638.118583] CPU: 0 PID: 212 Comm: kworker/u8:5 Not tainted 5.15.0-06427-g58a1d4dcfc74-dirty #109
    [  638.127357] Hardware name: Google Elm (DT)
    [  638.131444] Workqueue: mtk-vcodec-enc mtk_venc_worker [mtk_vcodec_enc]
    [  638.137974] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
    [  638.144925] pc : vp8_enc_encode+0x34/0x2b0 [mtk_vcodec_enc]
    [  638.150493] lr : venc_if_encode+0xac/0x1b0 [mtk_vcodec_enc]
    [  638.156060] sp : ffff8000124d3c40
    [  638.159364] x29: ffff8000124d3c40 x28: 0000000000000000 x27: 0000000000000000
    [  638.166493] x26: 0000000000000000 x25: ffff0000e7f252d0 x24: ffff8000124d3d58
    [  638.173621] x23: ffff8000124d3d58 x22: ffff8000124d3d60 x21: 0000000000000001
    [  638.180750] x20: ffff80001137e000 x19: 0000000000000000 x18: 0000000000000001
    [  638.187878] x17: 000000040044ffff x16: 00400032b5503510 x15: 0000000000000000
    [  638.195006] x14: ffff8000118536c0 x13: ffff8000ee1da000 x12: 0000000030d4d91d
    [  638.202134] x11: 0000000000000000 x10: 0000000000000980 x9 : ffff8000124d3b20
    [  638.209262] x8 : ffff0000c18d4ea0 x7 : ffff0000c18d44c0 x6 : ffff0000c18d44c0
    [  638.216391] x5 : ffff80000904a3b0 x4 : ffff8000124d3d58 x3 : ffff8000124d3d60
    [  638.223519] x2 : ffff8000124d3d78 x1 : 0000000000000001 x0 : ffff80001137efb8
    [  638.230648] Call trace:
    [  638.233084]  vp8_enc_encode+0x34/0x2b0 [mtk_vcodec_enc]
    [  638.238304]  venc_if_encode+0xac/0x1b0 [mtk_vcodec_enc]
    [  638.243525]  mtk_venc_worker+0x110/0x250 [mtk_vcodec_enc]
    [  638.248918]  process_one_work+0x1f8/0x498
    [  638.252923]  worker_thread+0x140/0x538
    [  638.256664]  kthread+0x148/0x158
    [  638.259884]  ret_from_fork+0x10/0x20
    [  638.263455] Code: f90023f9 2a0103f5 aa0303f6 aa0403f8 (f940d277)
    [  638.269538] ---[ end trace e374fc10f8e181f5 ]---
    
    [gst-master] root@debian:~/gst-build# [  638.019193] Unable to handle kernel NULL pointer dereference at virtual address 00000000000001a0
    Fixes: 4e855a6efa547 ("[media] vcodec: mediatek: Add Mediatek V4L2 Video Encoder Driver")
    Signed-off-by: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2028fb832da623e66ec78af9fc366088f6177bb9
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Fri Oct 15 11:58:55 2021 +0200

    media: si470x-i2c: fix possible memory leak in si470x_i2c_probe()
    
    [ Upstream commit ef054e345ed8c79ce1121a3599b5a2dfd78e57a0 ]
    
    n the 'radio->hdl.error' error handling, ctrl handler allocated by
    v4l2_ctrl_new_std() does not released, and caused memory leak as
    follows:
    
    unreferenced object 0xffff888033d54200 (size 256):
      comm "i2c-si470x-19", pid 909, jiffies 4294914203 (age 8.072s)
      hex dump (first 32 bytes):
        e8 69 11 03 80 88 ff ff 00 46 d5 33 80 88 ff ff  .i.......F.3....
        10 42 d5 33 80 88 ff ff 10 42 d5 33 80 88 ff ff  .B.3.....B.3....
      backtrace:
        [<00000000086bd4ed>] __kmalloc_node+0x1eb/0x360
        [<00000000bdb68871>] kvmalloc_node+0x66/0x120
        [<00000000fac74e4c>] v4l2_ctrl_new+0x7b9/0x1c60 [videodev]
        [<00000000693bf940>] v4l2_ctrl_new_std+0x19b/0x270 [videodev]
        [<00000000c0cb91bc>] si470x_i2c_probe+0x2d3/0x9a0 [radio_si470x_i2c]
        [<0000000056a6f01f>] i2c_device_probe+0x4d8/0xbe0
    
    Fix the error handling path to avoid memory leak.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: 8c081b6f9a9b ("media: radio: Critical v4l2 registration...")
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e8d78f924f028a32e53e96cb3010ebd03e49e895
Author: Fabio Estevam <festevam@denx.de>
Date:   Fri Oct 8 15:10:14 2021 +0200

    media: imx-pxp: Initialize the spinlock prior to using it
    
    [ Upstream commit ed2f97ad4b21072f849cf4ae6645d1f2b1d3f550 ]
    
    After devm_request_threaded_irq() is called there is a chance that an
    interrupt may occur before the spinlock is initialized, which will trigger
    a kernel oops.
    
    To prevent that, move the initialization of the spinlock prior to
    requesting the interrupts.
    
    Fixes: 51abcf7fdb70 ("media: imx-pxp: add i.MX Pixel Pipeline driver")
    Signed-off-by: Fabio Estevam <festevam@denx.de>
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 621e8ce75d668f12cb76977dcd8666a2ba53079b
Author: Suresh Udipi <sudipi@jp.adit-jv.com>
Date:   Fri Aug 13 17:07:54 2021 +0200

    media: rcar-csi2: Correct the selection of hsfreqrange
    
    [ Upstream commit cee44d4fbacbbdfe62697ec94e76c6e4f726c5df ]
    
    hsfreqrange should be chosen based on the calculated mbps which
    is closer to the default bit rate  and within the range as per
    table[1]. But current calculation always selects first value which
    is greater than or equal to the calculated mbps which may lead
    to chosing a wrong range in some cases.
    
    For example for 360 mbps for H3/M3N
    Existing logic selects
    Calculated value 360Mbps : Default 400Mbps Range [368.125 -433.125 mbps]
    
    This hsfreqrange is out of range.
    
    The logic is changed to get the default value which is closest to the
    calculated value [1]
    
    Calculated value 360Mbps : Default 350Mbps  Range [320.625 -380.625 mpbs]
    
    [1] specs r19uh0105ej0200-r-car-3rd-generation.pdf [Table 25.9]
    
    Please note that According to Renesas in Table 25.9 the range for
    220 default value is corrected as below
    
     |Range (Mbps)     |  Default  Bit rate (Mbps) |
     -----------------------------------------------
     | 197.125-244.125 |     220                   |
     -----------------------------------------------
    
    Fixes: 769afd212b16 ("media: rcar-csi2: add Renesas R-Car MIPI CSI-2 receiver driver")
    Signed-off-by: Suresh Udipi <sudipi@jp.adit-jv.com>
    Signed-off-by: Kazuyoshi Akiyama <akiyama@nds-osk.co.jp>
    Signed-off-by: Michael Rodin <mrodin@de.adit-jv.com>
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad52b9890b83ffa7602a23949c2cb0c0d94681e9
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Thu Oct 28 16:51:38 2021 +0300

    mfd: atmel-flexcom: Use .resume_noirq
    
    [ Upstream commit 5d051cf94fd5834a1513aa77e542c49fd973988a ]
    
    Flexcom IP embeds 3 other IPs: usart, i2c, spi and selects the operation
    mode (usart, i2c, spi) via mode register (FLEX_MR). On i2c bus there might
    be connected critical devices (like PMIC) which on suspend/resume should
    be suspended/resumed at the end/beginning. i2c uses
    .suspend_noirq/.resume_noirq for this kind of purposes. Align flexcom
    to use .resume_noirq as it should be resumed before the embedded IPs.
    Otherwise the embedded devices might behave badly.
    
    Fixes: 7fdec11015c3 ("atmel_flexcom: Support resuming after a chip reset")
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Tested-by: Codrin Ciubotariu <codrin.ciubotariu@microchip.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20211028135138.3481166-3-claudiu.beznea@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46d6a2311409d03c0679b125d9b8aadc3f54e763
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Thu Oct 28 16:51:37 2021 +0300

    mfd: atmel-flexcom: Remove #ifdef CONFIG_PM_SLEEP
    
    [ Upstream commit 8c0fad75dcaa650e3f3145a2c35847bc6a65cb7f ]
    
    Remove compilation flag and use __maybe_unused and pm_ptr instead.
    
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Link: https://lore.kernel.org/r/20211028135138.3481166-2-claudiu.beznea@microchip.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f93c9aa1d36f594b065c93d8bd17151d21fe02d8
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Thu Nov 25 11:00:18 2021 +0200

    tty: serial: atmel: Call dma_async_issue_pending()
    
    [ Upstream commit 4f4b9b5895614eb2e2b5f4cab7858f44bd113e1b ]
    
    The driver wrongly assummed that tx_submit() will start the transfer,
    which is not the case, now that the at_xdmac driver is fixed. tx_submit
    is supposed to push the current transaction descriptor to a pending queue,
    waiting for issue_pending to be called. issue_pending must start the
    transfer, not tx_submit.
    
    Fixes: 34df42f59a60 ("serial: at91: add rx dma support")
    Fixes: 08f738be88bb ("serial: at91: add tx dma support")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Link: https://lore.kernel.org/r/20211125090028.786832-4-tudor.ambarus@microchip.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 755a6c873b9c2e092ab6055cd116b1d8228ac34b
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Thu Nov 25 11:00:17 2021 +0200

    tty: serial: atmel: Check return code of dmaengine_submit()
    
    [ Upstream commit 1e67bd2b8cb90b66e89562598e9c2046246832d3 ]
    
    The tx_submit() method of struct dma_async_tx_descriptor is entitled
    to do sanity checks and return errors if encountered. It's not the
    case for the DMA controller drivers that this client is using
    (at_h/xdmac), because they currently don't do sanity checks and always
    return a positive cookie at tx_submit() method. In case the controller
    drivers will implement sanity checks and return errors, print a message
    so that the client will be informed that something went wrong at
    tx_submit() level.
    
    Fixes: 08f738be88bb ("serial: at91: add tx dma support")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Acked-by: Richard Genoud <richard.genoud@gmail.com>
    Link: https://lore.kernel.org/r/20211125090028.786832-3-tudor.ambarus@microchip.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd85b2e77aa9c0e51ecdb31511793196d35020cb
Author: Peng Fan <peng.fan@nxp.com>
Date:   Fri Nov 12 14:31:55 2021 +0800

    arm64: dts: ti: k3-j721e: correct cache-sets info
    
    [ Upstream commit 7a0df1f969c14939f60a7f9a6af72adcc314675f ]
    
    A72 Cluster has 48KB Icache, 32KB Dcache and 1MB L2 Cache
     - ICache is 3-way set-associative
     - Dcache is 2-way set-associative
     - Line size are 64bytes
    
    So correct the cache-sets info.
    
    Fixes: 2d87061e70dea ("arm64: dts: ti: Add Support for J721E SoC")
    Signed-off-by: Peng Fan <peng.fan@nxp.com>
    Reviewed-by: Nishanth Menon <nm@ti.com>
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Link: https://lore.kernel.org/r/20211112063155.3485777-1-peng.fan@oss.nxp.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32e9947e6639cfabc0cea8ba3ed8ca57432bfa0c
Author: Anilkumar Kolli <akolli@codeaurora.org>
Date:   Wed Nov 24 19:11:31 2021 +0200

    ath11k: Use host CE parameters for CE interrupts configuration
    
    [ Upstream commit b689f091aafd1a874b2f88137934276ab0fca480 ]
    
    CE interrupt configuration uses host ce parameters to assign/free
    interrupts. Use host ce parameters to enable/disable interrupts.
    This patch fixes below BUG,
    
    BUG: KASAN: global-out-of-bounds in 0xffffffbffdfb035c at addr
    ffffffbffde6eeac
     Read of size 4 by task kworker/u8:2/132
     Address belongs to variable ath11k_core_qmi_firmware_ready+0x1b0/0x5bc [ath11k]
    
    OOB is due to ath11k_ahb_ce_irqs_enable() iterates ce_count(which is 12)
    times and accessing 12th element in target_ce_config
    (which has only 11 elements) from ath11k_ahb_ce_irq_enable().
    
    With this change host ce configs are used to enable/disable interrupts.
    
    Tested-on: IPQ8074 hw2.0 AHB WLAN.HK.2.5.0.1-00471-QCAHKSWPL_SILICONZ-1
    
    Fixes: 967c1d1131fa ("ath11k: move target ce configs to hw_params")
    Signed-off-by: Anilkumar Kolli <akolli@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/1637249558-12793-1-git-send-email-akolli@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a49acfacab5695108ff886a0411190ef5786a97
Author: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
Date:   Wed Nov 17 14:30:35 2021 +0000

    crypto: qat - fix undetected PFVF timeout in ACK loop
    
    [ Upstream commit 5002200b4fedd7e90e4fbc2e5c42a4b3351df814 ]
    
    If the remote function did not ACK the reception of a message, the
    function __adf_iov_putmsg() could detect it as a collision.
    
    This was due to the fact that the collision and the timeout checks after
    the ACK loop were in the wrong order. The timeout must be checked at the
    end of the loop, so fix by swapping the order of the two checks.
    
    Fixes: 9b768e8a3909 ("crypto: qat - detect PFVF collision after ACK")
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Co-developed-by: Marco Chiappero <marco.chiappero@intel.com>
    Signed-off-by: Marco Chiappero <marco.chiappero@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 475ac5c5653f5b810fec8abd6bb2d659d0c35c79
Author: Marco Chiappero <marco.chiappero@intel.com>
Date:   Tue Sep 28 12:44:35 2021 +0100

    crypto: qat - make pfvf send message direction agnostic
    
    [ Upstream commit 6e680f94bc31d0fd0ff01123c964d895ea8040fa ]
    
    The functions adf_iov_putmsg() and __adf_iov_putmsg() are shared by both
    PF and VF. Any logging or documentation should not refer to any specific
    direction.
    
    Make comments and log messages direction agnostic by replacing PF2VF
    with PFVF. Also fix the wording for some related comments.
    
    Signed-off-by: Marco Chiappero <marco.chiappero@intel.com>
    Co-developed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee1c74c3c9c27fd64f4dc8f8e26f6aa5c2132c5e
Author: Marco Chiappero <marco.chiappero@intel.com>
Date:   Tue Sep 28 12:44:31 2021 +0100

    crypto: qat - remove unnecessary collision prevention step in PFVF
    
    [ Upstream commit e17f49bb244a281fe39bfdad0306a38b3a02e7bf ]
    
    The initial version of the PFVF protocol included an initial "carrier
    sensing" to get ownership of the channel.
    
    Collisions can happen anyway, the extra wait and test does not prevent
    collisions, it instead slows the communication down, so remove it.
    
    Signed-off-by: Marco Chiappero <marco.chiappero@intel.com>
    Reviewed-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 472f76835200e72ebfc820a1a98023e6da03ab0e
Author: Bhaskar Chowdhury <unixbhaskar@gmail.com>
Date:   Tue Feb 9 10:28:55 2021 +0000

    crypto: qat - fix spelling mistake: "messge" -> "message"
    
    [ Upstream commit f17a25cb1776c5712e950aaf326528ae652a086c ]
    
    Trivial fix to spelling mistake in adf_pf2vf_msg.c and adf_vf2pf_msg.c.
    s/messge/message/
    
    Signed-off-by: Bhaskar Chowdhury <unixbhaskar@gmail.com>
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae766527e6b7cf9f92f4d65cf89fa705e57078c8
Author: Dillon Min <dillon.minfei@gmail.com>
Date:   Sat Jul 24 11:44:02 2021 +0800

    ARM: dts: stm32: fix dtbs_check warning on ili9341 dts binding on stm32f429 disco
    
    [ Upstream commit b046049e59dca5e5830dc75ed16acf7657a95161 ]
    
    Since the compatible string defined from ilitek,ili9341.yaml is
    "st,sf-tc240t-9370-t", "ilitek,ili9341"
    
    so, append "ilitek,ili9341" to avoid the below dtbs_check warning.
    
    arch/arm/boot/dts/stm32f429-disco.dt.yaml: display@1: compatible:
    ['st,sf-tc240t-9370-t'] is too short
    
    Fixes: a726e2f000ec ("ARM: dts: stm32: enable ltdc binding with ili9341, gyro l3gd20 on stm32429-disco board")
    Signed-off-by: Dillon Min <dillon.minfei@gmail.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Alexandre Torgue <alexandre.torgue@foss.st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eab4204588a03537dd2bf510f61d0eb133254ed4
Author: George G. Davis <davis.george@siemens.com>
Date:   Fri Jul 16 16:49:35 2021 -0400

    mtd: hyperbus: rpc-if: fix bug in rpcif_hb_remove
    
    [ Upstream commit baaf965f94308301d2dc554d72a87d7432cd5ce6 ]
    
    The following KASAN BUG is observed when testing the rpc-if driver on
    rcar-gen3:
    
    root@rcar-gen3:~# modprobe -r rpc-if
    [  101.930146] ==================================================================
    [  101.937408] BUG: KASAN: slab-out-of-bounds in __lock_acquire+0x518/0x25d0
    [  101.944240] Read of size 8 at addr ffff0004c5be2750 by task modprobe/664
    [  101.950959]
    [  101.952466] CPU: 2 PID: 664 Comm: modprobe Not tainted 5.14.0-rc1-00342-g1a1464d7aa31 #1
    [  101.960578] Hardware name: Renesas H3ULCB board based on r8a77951 (DT)
    [  101.967120] Call trace:
    [  101.969580]  dump_backtrace+0x0/0x2c0
    [  101.973275]  show_stack+0x1c/0x30
    [  101.976616]  dump_stack_lvl+0x9c/0xd8
    [  101.980301]  print_address_description.constprop.0+0x74/0x2b8
    [  101.986071]  kasan_report+0x1f4/0x26c
    [  101.989757]  __asan_load8+0x98/0xd4
    [  101.993266]  __lock_acquire+0x518/0x25d0
    [  101.997215]  lock_acquire.part.0+0x18c/0x360
    [  102.001506]  lock_acquire+0x74/0x90
    [  102.005013]  _raw_spin_lock_irq+0x98/0x130
    [  102.009131]  __pm_runtime_disable+0x30/0x210
    [  102.013427]  rpcif_hb_remove+0x5c/0x70 [rpc_if]
    [  102.018001]  platform_remove+0x40/0x80
    [  102.021771]  __device_release_driver+0x234/0x350
    [  102.026412]  driver_detach+0x158/0x20c
    [  102.030179]  bus_remove_driver+0xa0/0x140
    [  102.034212]  driver_unregister+0x48/0x80
    [  102.038153]  platform_driver_unregister+0x18/0x24
    [  102.042879]  rpcif_platform_driver_exit+0x1c/0x34 [rpc_if]
    [  102.048400]  __arm64_sys_delete_module+0x210/0x310
    [  102.053212]  invoke_syscall+0x60/0x190
    [  102.056986]  el0_svc_common+0x12c/0x144
    [  102.060844]  do_el0_svc+0x88/0xac
    [  102.064181]  el0_svc+0x24/0x3c
    [  102.067257]  el0t_64_sync_handler+0x1a8/0x1b0
    [  102.071634]  el0t_64_sync+0x198/0x19c
    [  102.075315]
    [  102.076815] Allocated by task 628:
    [  102.080781]
    [  102.082280] Last potentially related work creation:
    [  102.087524]
    [  102.089022] The buggy address belongs to the object at ffff0004c5be2000
    [  102.089022]  which belongs to the cache kmalloc-2k of size 2048
    [  102.101555] The buggy address is located 1872 bytes inside of
    [  102.101555]  2048-byte region [ffff0004c5be2000, ffff0004c5be2800)
    [  102.113486] The buggy address belongs to the page:
    [  102.118409]
    [  102.119908] Memory state around the buggy address:
    [  102.124711]  ffff0004c5be2600: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [  102.131947]  ffff0004c5be2680: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [  102.139181] >ffff0004c5be2700: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [  102.146412]                                                  ^
    [  102.152257]  ffff0004c5be2780: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [  102.159491]  ffff0004c5be2800: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [  102.166723] ==================================================================
    
    The above bug is caused by use of the wrong pointer in the
    rpcif_disable_rpm() call. Fix the bug by using the correct pointer.
    
    Fixes: 5de15b610f78 ("mtd: hyperbus: add Renesas RPC-IF driver")
    Signed-off-by: George G. Davis <davis.george@siemens.com>
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Link: https://lore.kernel.org/r/20210716204935.25859-1-george_davis@mentor.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 867d4ace48da2c117bed8599efa23456378bf8f5
Author: Chengfeng Ye <cyeaa@connect.ust.hk>
Date:   Thu Nov 4 06:46:42 2021 -0700

    crypto: qce - fix uaf on qce_skcipher_register_one
    
    [ Upstream commit e9c195aaeed1b45c9012adbe29dedb6031e85aa8 ]
    
    Pointer alg points to sub field of tmpl, it
    is dereferenced after tmpl is freed. Fix
    this by accessing alg before free tmpl.
    
    Fixes: ec8f5d8f ("crypto: qce - Qualcomm crypto engine driver")
    Signed-off-by: Chengfeng Ye <cyeaa@connect.ust.hk>
    Acked-by: Thara Gopinath <thara.gopinath@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e19b3c1b5768f0e2eccc7c9eb7ccaf938be2af11
Author: Chengfeng Ye <cyeaa@connect.ust.hk>
Date:   Thu Nov 4 06:38:31 2021 -0700

    crypto: qce - fix uaf on qce_ahash_register_one
    
    [ Upstream commit b4cb4d31631912842eb7dce02b4350cbb7562d5e ]
    
    Pointer base points to sub field of tmpl, it
    is dereferenced after tmpl is freed. Fix
    this by accessing base before free tmpl.
    
    Fixes: ec8f5d8f ("crypto: qce - Qualcomm crypto engine driver")
    Signed-off-by: Chengfeng Ye <cyeaa@connect.ust.hk>
    Acked-by: Thara Gopinath <thara.gopinath@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5de640f59f992c06f8b785f81b975cfd16e58716
Author: Wang Hai <wanghai38@huawei.com>
Date:   Fri Oct 15 16:57:41 2021 +0800

    media: dmxdev: fix UAF when dvb_register_device() fails
    
    [ Upstream commit ab599eb11882f834951c436cc080c3455ba32b9b ]
    
    I got a use-after-free report:
    
    dvbdev: dvb_register_device: failed to create device dvb1.dvr0 (-12)
    ...
    ==================================================================
    BUG: KASAN: use-after-free in dvb_dmxdev_release+0xce/0x2f0
    ...
    Call Trace:
     dump_stack_lvl+0x6c/0x8b
     print_address_description.constprop.0+0x48/0x70
     kasan_report.cold+0x82/0xdb
     __asan_load4+0x6b/0x90
     dvb_dmxdev_release+0xce/0x2f0
    ...
    Allocated by task 7666:
     kasan_save_stack+0x23/0x50
     __kasan_kmalloc+0x83/0xa0
     kmem_cache_alloc_trace+0x22e/0x470
     dvb_register_device+0x12f/0x980
     dvb_dmxdev_init+0x1f3/0x230
    ...
    Freed by task 7666:
     kasan_save_stack+0x23/0x50
     kasan_set_track+0x20/0x30
     kasan_set_free_info+0x24/0x40
     __kasan_slab_free+0xf2/0x130
     kfree+0xd1/0x5c0
     dvb_register_device.cold+0x1ac/0x1fa
     dvb_dmxdev_init+0x1f3/0x230
    ...
    
    When dvb_register_device() in dvb_dmxdev_init() fails, dvb_dmxdev_init()
    does not return a failure, and the memory pointed to by dvbdev or
    dvr_dvbdev is invalid at this point. If they are used subsequently, it
    will result in UFA or null-ptr-deref.
    
    If dvb_register_device() in dvb_dmxdev_init() fails, fix the bug by making
    dvb_dmxdev_init() return an error as well.
    
    Link: https://lore.kernel.org/linux-media/20211015085741.1203283-1-wanghai38@huawei.com
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d64e2bd22223abbe7af60f708b5c73db312cae1
Author: Biju Das <biju.das.jz@bp.renesas.com>
Date:   Mon Nov 15 14:28:30 2021 +0000

    arm64: dts: renesas: cat875: Add rx/tx delays
    
    [ Upstream commit e1a9faddffe7e555304dc2e3284c84fbee0679ee ]
    
    The CAT875 sub board from Silicon Linux uses a Realtek PHY.
    
    The phy driver commit bbc4d71d63549bcd003 ("net: phy: realtek: fix
    rtl8211e rx/tx delay config") introduced NFS mount failures.  Now it
    needs both rx/tx delays for the NFS mount to work.
    
    This patch fixes the NFS mount failure issue by adding "rgmii-id" mode
    to the avb device node.
    
    Signed-off-by: Biju Das <biju.das.jz@bp.renesas.com>
    Fixes: bbc4d71d63549bcd ("net: phy: realtek: fix rtl8211e rx/tx delay config")
    Link: https://lore.kernel.org/r/20211115142830.12651-1-biju.das.jz@bp.renesas.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a33eef23a658d1120b2b7b724c80b0cad3da9b78
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Nov 18 14:12:33 2021 +0300

    drm/vboxvideo: fix a NULL vs IS_ERR() check
    
    [ Upstream commit cebbb5c46d0cb0615fd0c62dea9b44273d0a9780 ]
    
    The devm_gen_pool_create() function never returns NULL, it returns
    error pointers.
    
    Fixes: 4cc9b565454b ("drm/vboxvideo: Use devm_gen_pool_create")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211118111233.GA1147@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43220a61e7b8de21bf7e6742f12ec480552d9d84
Author: Alexander Aring <aahringo@redhat.com>
Date:   Wed Nov 17 09:20:43 2021 -0500

    fs: dlm: fix build with CONFIG_IPV6 disabled
    
    [ Upstream commit 1b9beda83e27a0c2cd75d1cb743c297c7b36c844 ]
    
    This patch will surround the AF_INET6 case in sk_error_report() of dlm
    with a #if IS_ENABLED(CONFIG_IPV6). The field sk->sk_v6_daddr is not
    defined when CONFIG_IPV6 is disabled. If CONFIG_IPV6 is disabled, the
    socket creation with AF_INET6 should already fail because a runtime
    check if AF_INET6 is registered. However if there is the possibility
    that AF_INET6 is set as sk_family the sk_error_report() callback will
    print then an invalid family type error.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: 4c3d90570bcc ("fs: dlm: don't call kernel_getpeername() in error_report()")
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d7c5d10e7db1cc9dd2d5cdcfefd40dcf60c039f
Author: Jens Wiklander <jens.wiklander@linaro.org>
Date:   Tue Jun 15 22:23:50 2021 +0200

    tee: fix put order in teedev_close_context()
    
    [ Upstream commit f18397ab3ae23e8e43bba9986e66af6d4497f2ad ]
    
    Prior to this patch was teedev_close_context() calling tee_device_put()
    before teedev_ctx_put() leading to teedev_ctx_release() accessing
    ctx->teedev just after the reference counter was decreased on the
    teedev. Fix this by calling teedev_ctx_put() before tee_device_put().
    
    Fixes: 217e0250cccb ("tee: use reference counting for tee_context")
    Reviewed-by: Sumit Garg <sumit.garg@linaro.org>
    Signed-off-by: Jens Wiklander <jens.wiklander@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 097e601eb88728742a93a1b1c2b23e93190ac5e8
Author: Karthikeyan Kathirvel <kathirve@codeaurora.org>
Date:   Mon Nov 15 11:04:41 2021 +0100

    ath11k: reset RSN/WPA present state for open BSS
    
    [ Upstream commit 64bc3aa02ae78b1fcb1b850e0eb1f0622002bfaa ]
    
    The ath11k driver is caching the information about RSN/WPA IE in the
    configured beacon template. The cached information is used during
    associations to figure out whether 4-way PKT/2-way GTK peer flags need to
    be set or not.
    
    But the code never cleared the state when no such IE was found. This can
    for example happen when moving from an WPA/RSN to an open setup. The
    (seemingly connected) peer was then not able to communicate over the
    link because the firmware assumed a different (encryption enabled) state
    for the peer.
    
    Tested-on: IPQ6018 hw1.0 AHB WLAN.HK.2.5.0.1-01100-QCAHKSWPL_SILICONZ-1
    
    Fixes: 01e34233c645 ("ath11k: fix wmi peer flags in peer assoc command")
    Cc: Venkateswara Naralasetty <vnaralas@codeaurora.org>
    Reported-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Karthikeyan Kathirvel <kathirve@codeaurora.org>
    [sven@narfation.org: split into separate patches, clean up commit message]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211115100441.33771-2-sven@narfation.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa51addd391d9ce9950437e6e1cafd05bcc2f114
Author: Karthikeyan Kathirvel <kathirve@codeaurora.org>
Date:   Mon Nov 15 11:04:40 2021 +0100

    ath11k: clear the keys properly via DISABLE_KEY
    
    [ Upstream commit 436a4e88659842a7cf634d7cc088c8f2cc94ebf5 ]
    
    DISABLE_KEY sets the key_len to 0, firmware will not delete the keys if
    key_len is 0. Changing from security mode to open mode will cause mcast
    to be still encrypted without vdev restart.
    
    Set the proper key_len for DISABLE_KEY cmd to clear the keys in
    firmware.
    
    Tested-on: IPQ6018 hw1.0 AHB WLAN.HK.2.5.0.1-01100-QCAHKSWPL_SILICONZ-1
    
    Fixes: d5c65159f289 ("ath11k: driver for Qualcomm IEEE 802.11ax devices")
    Reported-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Karthikeyan Kathirvel <kathirve@codeaurora.org>
    [sven@narfation.org: split into separate patches, clean up commit message]
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211115100441.33771-1-sven@narfation.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df94b37e902b4ac0f3e9b350a0bcda1a994fdef2
Author: Sven Eckelmann <sven@narfation.org>
Date:   Mon Nov 15 11:29:55 2021 +0200

    ath11k: Fix ETSI regd with weather radar overlap
    
    [ Upstream commit 086c921a354089f209318501038d43c98d3f409f ]
    
    Some ETSI countries have a small overlap in the wireless-regdb with an ETSI
    channel (5590-5650). A good example is Australia:
    
      country AU: DFS-ETSI
            (2400 - 2483.5 @ 40), (36)
            (5150 - 5250 @ 80), (23), NO-OUTDOOR, AUTO-BW
            (5250 - 5350 @ 80), (20), NO-OUTDOOR, AUTO-BW, DFS
            (5470 - 5600 @ 80), (27), DFS
            (5650 - 5730 @ 80), (27), DFS
            (5730 - 5850 @ 80), (36)
            (57000 - 66000 @ 2160), (43), NO-OUTDOOR
    
    If the firmware (or the BDF) is shipped with these rules then there is only
    a 10 MHz overlap with the weather radar:
    
    * below: 5470 - 5590
    * weather radar: 5590 - 5600
    * above: (none for the rule "5470 - 5600 @ 80")
    
    There are several wrong assumption in the ath11k code:
    
    * there is always a valid range below the weather radar
      (actually: there could be no range below the weather radar range OR range
       could be smaller than 20 MHz)
    * intersected range in the weather radar range is valid
      (actually: the range could be smaller than 20 MHz)
    * range above weather radar is either empty or valid
      (actually: the range could be smaller than 20 MHz)
    
    These wrong assumption will lead in this example to a rule
    
      (5590 - 5600 @ 20), (N/A, 27), (600000 ms), DFS, AUTO-BW
    
    which is invalid according to is_valid_reg_rule() because the freq_diff is
    only 10 MHz but the max_bandwidth is set to 20 MHz. Which results in a
    rejection like:
    
      WARNING: at backports-20210222_001-4.4.60-b157d2276/net/wireless/reg.c:3984
      [...]
      Call trace:
      [<ffffffbffc3d2e50>] reg_get_max_bandwidth+0x300/0x3a8 [cfg80211]
      [<ffffffbffc3d3d0c>] regulatory_set_wiphy_regd_sync+0x3c/0x98 [cfg80211]
      [<ffffffbffc651598>] ath11k_regd_update+0x1a8/0x210 [ath11k]
      [<ffffffbffc652108>] ath11k_regd_update_work+0x18/0x20 [ath11k]
      [<ffffffc0000a93e0>] process_one_work+0x1f8/0x340
      [<ffffffc0000a9784>] worker_thread+0x25c/0x448
      [<ffffffc0000aedc8>] kthread+0xd0/0xd8
      [<ffffffc000085550>] ret_from_fork+0x10/0x40
      ath11k c000000.wifi: failed to perform regd update : -22
      Invalid regulatory domain detected
    
    To avoid this, the algorithm has to be changed slightly. Instead of
    splitting a rule which overlaps with the weather radar range into 3 pieces
    and accepting the first two parts blindly, it must actually be checked for
    each piece whether it is a valid range. And only if it is valid, add it to
    the output array.
    
    When these checks are in place, the processed rules for AU would end up as
    
      country AU: DFS-ETSI
              (2400 - 2483 @ 40), (N/A, 36), (N/A)
              (5150 - 5250 @ 80), (6, 23), (N/A), NO-OUTDOOR, AUTO-BW
              (5250 - 5350 @ 80), (6, 20), (0 ms), NO-OUTDOOR, DFS, AUTO-BW
              (5470 - 5590 @ 80), (6, 27), (0 ms), DFS, AUTO-BW
              (5650 - 5730 @ 80), (6, 27), (0 ms), DFS, AUTO-BW
              (5730 - 5850 @ 80), (6, 36), (N/A), AUTO-BW
    
    and will be accepted by the wireless regulatory code.
    
    Fixes: d5c65159f289 ("ath11k: driver for Qualcomm IEEE 802.11ax devices")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211112153116.1214421-1-sven@narfation.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ffc9019bd991707701273c2e5d8aed472229fc4d
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Mon Nov 1 10:12:12 2021 +0300

    Bluetooth: stop proccessing malicious adv data
    
    [ Upstream commit 3a56ef719f0b9682afb8a86d64b2399e36faa4e6 ]
    
    Syzbot reported slab-out-of-bounds read in hci_le_adv_report_evt(). The
    problem was in missing validaion check.
    
    We should check if data is not malicious and we can read next data block.
    If we won't check ptr validness, code can read a way beyond skb->end and
    it can cause problems, of course.
    
    Fixes: e95beb414168 ("Bluetooth: hci_le_adv_report_evt code refactoring")
    Reported-and-tested-by: syzbot+e3fcb9c4f3c2a931dc40@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3273541fed60f2c0191b5923758fcda6992b189b
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Mon Oct 25 21:56:29 2021 +0100

    memory: renesas-rpc-if: Return error in case devm_ioremap_resource() fails
    
    [ Upstream commit 818fdfa89baac77a8df5a2c30f4fb798cc937aa0 ]
    
    Make sure we return error in case devm_ioremap_resource() fails for dirmap
    resource.
    
    Fixes: ca7d8b980b67 ("memory: add Renesas RPC-IF driver")
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Biju Das <biju.das.jz@bp.renesas.com>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20211025205631.21151-6-prabhakar.mahadev-lad.rj@bp.renesas.com
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55917db359763244fd76a4e4b0073ede949b2697
Author: Alexander Aring <aahringo@redhat.com>
Date:   Mon Nov 15 08:57:05 2021 -0500

    fs: dlm: don't call kernel_getpeername() in error_report()
    
    [ Upstream commit 4c3d90570bcc2b338f70f61f01110268e281ca3c ]
    
    In some cases kernel_getpeername() will held the socket lock which is
    already held when the socket layer calls error_report() callback. Since
    commit 9dfc685e0262 ("inet: remove races in inet{6}_getname()") this
    problem becomes more likely because the socket lock will be held always.
    You will see something like:
    
    bob9-u5 login: [  562.316860] BUG: spinlock recursion on CPU#7, swapper/7/0
    [  562.318562]  lock: 0xffff8f2284720088, .magic: dead4ead, .owner: swapper/7/0, .owner_cpu: 7
    [  562.319522] CPU: 7 PID: 0 Comm: swapper/7 Not tainted 5.15.0+ #135
    [  562.320346] Hardware name: Red Hat KVM/RHEL-AV, BIOS 1.13.0-2.module+el8.3.0+7353+9de0a3cc 04/01/2014
    [  562.321277] Call Trace:
    [  562.321529]  <IRQ>
    [  562.321734]  dump_stack_lvl+0x33/0x42
    [  562.322282]  do_raw_spin_lock+0x8b/0xc0
    [  562.322674]  lock_sock_nested+0x1e/0x50
    [  562.323057]  inet_getname+0x39/0x110
    [  562.323425]  ? sock_def_readable+0x80/0x80
    [  562.323838]  lowcomms_error_report+0x63/0x260 [dlm]
    [  562.324338]  ? wait_for_completion_interruptible_timeout+0xd2/0x120
    [  562.324949]  ? lock_timer_base+0x67/0x80
    [  562.325330]  ? do_raw_spin_unlock+0x49/0xc0
    [  562.325735]  ? _raw_spin_unlock_irqrestore+0x1e/0x40
    [  562.326218]  ? del_timer+0x54/0x80
    [  562.326549]  sk_error_report+0x12/0x70
    [  562.326919]  tcp_validate_incoming+0x3c8/0x530
    [  562.327347]  ? kvm_clock_read+0x14/0x30
    [  562.327718]  ? ktime_get+0x3b/0xa0
    [  562.328055]  tcp_rcv_established+0x121/0x660
    [  562.328466]  tcp_v4_do_rcv+0x132/0x260
    [  562.328835]  tcp_v4_rcv+0xcea/0xe20
    [  562.329173]  ip_protocol_deliver_rcu+0x35/0x1f0
    [  562.329615]  ip_local_deliver_finish+0x54/0x60
    [  562.330050]  ip_local_deliver+0xf7/0x110
    [  562.330431]  ? inet_rtm_getroute+0x211/0x840
    [  562.330848]  ? ip_protocol_deliver_rcu+0x1f0/0x1f0
    [  562.331310]  ip_rcv+0xe1/0xf0
    [  562.331603]  ? ip_local_deliver+0x110/0x110
    [  562.332011]  __netif_receive_skb_core+0x46a/0x1040
    [  562.332476]  ? inet_gro_receive+0x263/0x2e0
    [  562.332885]  __netif_receive_skb_list_core+0x13b/0x2c0
    [  562.333383]  netif_receive_skb_list_internal+0x1c8/0x2f0
    [  562.333896]  ? update_load_avg+0x7e/0x5e0
    [  562.334285]  gro_normal_list.part.149+0x19/0x40
    [  562.334722]  napi_complete_done+0x67/0x160
    [  562.335134]  virtnet_poll+0x2ad/0x408 [virtio_net]
    [  562.335644]  __napi_poll+0x28/0x140
    [  562.336012]  net_rx_action+0x23d/0x300
    [  562.336414]  __do_softirq+0xf2/0x2ea
    [  562.336803]  irq_exit_rcu+0xc1/0xf0
    [  562.337173]  common_interrupt+0xb9/0xd0
    
    It is and was always forbidden to call kernel_getpeername() in context
    of error_report(). To get rid of the problem we access the destination
    address for the peer over the socket structure. While on it we fix to
    print out the destination port of the inet socket.
    
    Fixes: 1a31833d085a ("DLM: Replace nodeid_to_addr with kernel_getpeername")
    Reported-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 98923ebb034b8c405c5e9e216834021fe72d7875
Author: Alexander Aring <aahringo@redhat.com>
Date:   Fri Jul 16 16:22:34 2021 -0400

    fs: dlm: use sk->sk_socket instead of con->sock
    
    [ Upstream commit feb704bd17786c8ff52a49d7759b8ee4f3a5aaac ]
    
    Instead of dereference "con->sock" we can get the socket structure over
    "sk->sk_socket" as well. This patch will switch to this behaviour.
    
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6edd1bd8e3d81d55d2cd00ffb44d55bdfb5a1d6f
Author: Christian Hewitt <christianshewitt@gmail.com>
Date:   Tue Oct 12 05:25:21 2021 +0000

    arm64: dts: meson-gxbb-wetek: fix missing GPIO binding
    
    [ Upstream commit c019abb2feba3cbbd7cf7178f8e6499c4fa6fced ]
    
    The absence of this binding appears to be harmless in Linux but it breaks
    Ethernet support in mainline u-boot. So add the binding (which is present
    in all other u-boot supported GXBB device-trees).
    
    Fixes: fb72c03e0e32 ("ARM64: dts: meson-gxbb-wetek: add a wetek specific dtsi to cleanup hub and play2")
    
    Signed-off-by: Christian Hewitt <christianshewitt@gmail.com>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20211012052522.30873-3-christianshewitt@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb1f75fa2458efa6a882300c792106c5af7551de
Author: Christian Hewitt <christianshewitt@gmail.com>
Date:   Tue Oct 12 05:25:20 2021 +0000

    arm64: dts: meson-gxbb-wetek: fix HDMI in early boot
    
    [ Upstream commit 8182a35868db5f053111d5d9d4da8fcb3f99259d ]
    
    Mark the VDDIO_AO18 regulator always-on and set hdmi-supply for the hdmi_tx
    node to ensure HDMI is powered in the early stages of boot.
    
    Fixes: fb72c03e0e32 ("ARM64: dts: meson-gxbb-wetek: add a wetek specific dtsi to cleanup hub and play2")
    
    Signed-off-by: Christian Hewitt <christianshewitt@gmail.com>
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20211012052522.30873-2-christianshewitt@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f012f2c445b28ee8c230f141bc7e55a29efbf27
Author: Alexander Stein <alexander.stein@mailbox.org>
Date:   Tue Oct 26 20:28:13 2021 +0200

    arm64: dts: amlogic: Fix SPI NOR flash node name for ODROID N2/N2+
    
    [ Upstream commit 95d35256b564aca33fb661eac77dc94bfcffc8df ]
    
    Fix the schema warning: "spi-flash@0: $nodename:0: 'spi-flash@0' does
     not match '^flash(@.*)?$'" from jedec,spi-nor.yaml
    
    Fixes: a084eaf3096c ("arm64: dts: meson-g12b-odroid-n2: add SPIFC controller node")
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Alexander Stein <alexander.stein@mailbox.org>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20211026182813.900775-3-alexander.stein@mailbox.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96d710b1c6ff0f297f0780c3b3568e80e3774c7c
Author: Alexander Stein <alexander.stein@mailbox.org>
Date:   Tue Oct 26 20:28:12 2021 +0200

    arm64: dts: amlogic: meson-g12: Fix GPU operating point table node name
    
    [ Upstream commit bb98a6fd0b0e227cefb2ba91cea2b55455f203b7 ]
    
    Starting with commit 94274f20f6bf ("dt-bindings: opp: Convert to DT
    schema") the opp node name has a mandatory pattern. This change
    fixes the dtbs_check warning:
    gpu-opp-table: $nodename:0: 'gpu-opp-table' does not match
    '^opp-table(-[a-z0-9]+)?$'
    Put the 'gpu' part at the end to match the pattern.
    
    Fixes: 916a0edc43f0 ("arm64: dts: amlogic: meson-g12: add the Mali OPP table and use DVFS")
    Reviewed-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Alexander Stein <alexander.stein@mailbox.org>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20211026182813.900775-2-alexander.stein@mailbox.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b57480ed51a9b234591980c61b5f34e9f1bd207
Author: Jammy Huang <jammy_huang@aspeedtech.com>
Date:   Tue Nov 9 03:12:27 2021 +0000

    media: aspeed: Update signal status immediately to ensure sane hw state
    
    [ Upstream commit af6d1bde395cac174ee71adcd3fa43f6435c7206 ]
    
    If res-chg, VE_INTERRUPT_MODE_DETECT_WD irq will be raised. But
    v4l2_input_status won't be updated to no-signal immediately until
    aspeed_video_get_resolution() in aspeed_video_resolution_work().
    
    During the period of time, aspeed_video_start_frame() could be called
    because it doesn't know signal becomes unstable now. If it goes with
    aspeed_video_init_regs() of aspeed_video_irq_res_change()
    simultaneously, it will mess up hw state.
    
    To fix this problem, v4l2_input_status is updated to no-signal
    immediately for VE_INTERRUPT_MODE_DETECT_WD irq.
    
    Fixes: d2b4387f3bdf ("media: platform: Add Aspeed Video Engine driver")
    Signed-off-by: Jammy Huang <jammy_huang@aspeedtech.com>
    Acked-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ff0ae69d27cfeb463b4452b74cebc52bdbd71e6
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Mon Nov 1 09:55:39 2021 +0000

    media: em28xx: fix memory leak in em28xx_init_dev
    
    [ Upstream commit 22be5a10d0b24eec9e45decd15d7e6112b25f080 ]
    
    In the em28xx_init_rev, if em28xx_audio_setup fails, this function fails
    to deallocate the media_dev allocated in the em28xx_media_device_init.
    
    Fix this by adding em28xx_unregister_media_device to free media_dev.
    
    BTW, this patch is tested in my local syzkaller instance, and it can
    prevent the memory leak from occurring again.
    
    CC: Pavel Skripkin <paskripkin@gmail.com>
    Fixes: 37ecc7b1278f ("[media] em28xx: add media controller support")
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Reported-by: syzkaller <syzkaller@googlegroups.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b441d94287359c1aa5f67e3d2977f0a1713ae2fc
Author: Jammy Huang <jammy_huang@aspeedtech.com>
Date:   Wed Nov 3 08:23:54 2021 +0000

    media: aspeed: fix mode-detect always time out at 2nd run
    
    [ Upstream commit 62cea52ad4bead0ae4be2cfe1142eb0aae0e9fbd ]
    
    aspeed_video_get_resolution() will try to do res-detect again if the
    timing got in last try is invalid. But it will always time out because
    VE_SEQ_CTRL_TRIG_MODE_DET is only cleared after 1st mode-detect.
    
    To fix the problem, just clear VE_SEQ_CTRL_TRIG_MODE_DET before setting
    it in aspeed_video_enable_mode_detect().
    
    Fixes: d2b4387f3bdf ("media: platform: Add Aspeed Video Engine driver")
    Signed-off-by: Jammy Huang <jammy_huang@aspeedtech.com>
    Acked-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d132d9dd8bae9f2d5ff153b3fe6eb31a000fe39
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Oct 12 09:21:50 2021 +0100

    media: atomisp: fix uninitialized bug in gmin_get_pmic_id_and_addr()
    
    [ Upstream commit cb4d67a998e97365afdf34965b069601da1dae60 ]
    
    The "power" pointer is not initialized on the else path and that would
    lead to an Oops.
    
    Link: https://lore.kernel.org/linux-media/20211012082150.GA31086@kili
    Fixes: c30f4cb2d4c7 ("media: atomisp: Refactor PMIC detection to a separate function")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc2b95e7aeae0acc90f700e67d51f89cc988ea63
Author: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
Date:   Mon Oct 25 09:06:52 2021 +0100

    media: atomisp: fix enum formats logic
    
    [ Upstream commit fae46cb0531b45c789e39128f676f2bafa3a7b47 ]
    
    Changeset 374d62e7aa50 ("media: v4l2-subdev: Verify v4l2_subdev_call() pad config argument")
    added an extra verification for a pads parameter for enum mbus
    format code.
    
    Such change broke atomisp, because now the V4L2 core
    refuses to enum MBUS formats if the state is empty.
    
    So, add .which field in order to select the active formats,
    in order to make it work again.
    
    While here, improve error messages.
    
    Fixes: 374d62e7aa50 ("media: v4l2-subdev: Verify v4l2_subdev_call() pad config argument")
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e5353238c550de6a4d66826ae5c6cf54c783d25
Author: Tsuchiya Yuto <kitakar@gmail.com>
Date:   Mon Oct 18 01:23:34 2021 +0900

    media: atomisp: add NULL check for asd obtained from atomisp_video_pipe
    
    [ Upstream commit c10bcb13462e9cf43111d17f1e08b4bb4d4401b0 ]
    
    This is almost a BUG report with RFC patch that just avoids kernel
    oopses. Thus, prefixed with [BUG][RFC].
    
    Here is the kernel log after running `v4l2-compliance -d /dev/video4`
    with this patch applied:
    
            kern  :err   : [25507.580392] atomisp-isp2 0000:00:03.0: can't change power state from D3cold to D0 (config space inaccessible)
            kern  :warn  : [25507.592343] isys dma store at addr(0xcd408) val(0)
            kern  :err   : [25507.592995] atomisp-isp2 0000:00:03.0: atomisp_queryctl(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.593685] atomisp-isp2 0000:00:03.0: atomisp_g_input(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.593719] atomisp-isp2 0000:00:03.0: atomisp_g_parm(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.593727] atomisp-isp2 0000:00:03.0: atomisp_queryctl(): asd is NULL, device is ATOMISP ISP ACC
            [omitting 42 same messages]
            kern  :err   : [25507.593976] atomisp-isp2 0000:00:03.0: atomisp_queryctl(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.594191] atomisp-isp2 0000:00:03.0: atomisp_g_input(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.594449] atomisp-isp2 0000:00:03.0: atomisp_queryctl(): asd is NULL, device is ATOMISP ISP ACC
            [omitting 43 same messages]
            kern  :err   : [25507.594756] atomisp-isp2 0000:00:03.0: atomisp_queryctl(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.594779] atomisp-isp2 0000:00:03.0: atomisp_g_ctrl(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.594787] atomisp-isp2 0000:00:03.0: atomisp_s_ctrl(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.594803] atomisp-isp2 0000:00:03.0: atomisp_camera_g_ext_ctrls(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.594880] atomisp-isp2 0000:00:03.0: atomisp_enum_fmt_cap(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.594915] atomisp-isp2 0000:00:03.0: atomisp_g_parm(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.595058] atomisp-isp2 0000:00:03.0: atomisp_try_fmt(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.595089] atomisp-isp2 0000:00:03.0: atomisp_set_fmt(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.595124] atomisp-isp2 0000:00:03.0: atomisp_set_fmt(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.595221] atomisp-isp2 0000:00:03.0: atomisp_set_fmt(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.595241] atomisp-isp2 0000:00:03.0: atomisp_set_fmt(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.601571] atomisp-isp2 0000:00:03.0: can't change power state from D3cold to D0 (config space inaccessible)
            kern  :warn  : [25507.607496] isys dma store at addr(0xcd408) val(0)
            kern  :err   : [25507.608604] atomisp-isp2 0000:00:03.0: atomisp_queryctl(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.611988] atomisp-isp2 0000:00:03.0: can't change power state from D3cold to D0 (config space inaccessible)
            kern  :warn  : [25507.617420] isys dma store at addr(0xcd408) val(0)
            kern  :err   : [25507.618429] atomisp-isp2 0000:00:03.0: atomisp_queryctl(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.618811] atomisp-isp2 0000:00:03.0: atomisp_g_parm(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.622193] atomisp-isp2 0000:00:03.0: can't change power state from D3cold to D0 (config space inaccessible)
            kern  :warn  : [25507.627355] isys dma store at addr(0xcd408) val(0)
            kern  :err   : [25507.628391] atomisp-isp2 0000:00:03.0: atomisp_queryctl(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.631143] atomisp-isp2 0000:00:03.0: can't change power state from D3cold to D0 (config space inaccessible)
            kern  :warn  : [25507.635813] isys dma store at addr(0xcd408) val(0)
            kern  :err   : [25507.636489] atomisp-isp2 0000:00:03.0: atomisp_queryctl(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.636504] atomisp-isp2 0000:00:03.0: atomisp_s_input(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.636516] atomisp-isp2 0000:00:03.0: atomisp_set_fmt(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.639111] atomisp-isp2 0000:00:03.0: can't change power state from D3cold to D0 (config space inaccessible)
            kern  :warn  : [25507.646152] isys dma store at addr(0xcd408) val(0)
            kern  :err   : [25507.646831] atomisp-isp2 0000:00:03.0: atomisp_queryctl(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.646847] atomisp-isp2 0000:00:03.0: atomisp_s_input(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.650079] atomisp-isp2 0000:00:03.0: can't change power state from D3cold to D0 (config space inaccessible)
            kern  :warn  : [25507.657476] isys dma store at addr(0xcd408) val(0)
            kern  :err   : [25507.658741] atomisp-isp2 0000:00:03.0: atomisp_queryctl(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.658759] atomisp-isp2 0000:00:03.0: atomisp_s_input(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.658771] atomisp-isp2 0000:00:03.0: atomisp_set_fmt(): asd is NULL, device is ATOMISP ISP ACC
            kern  :err   : [25507.660959] atomisp-isp2 0000:00:03.0: can't change power state from D3cold to D0 (config space inaccessible)
            kern  :warn  : [25507.666665] isys dma store at addr(0xcd408) val(0)
            kern  :err   : [25507.667397] atomisp-isp2 0000:00:03.0: atomisp_queryctl(): asd is NULL, device is ATOMISP ISP ACC
    
    [mchehab: fix coding style]
    Signed-off-by: Tsuchiya Yuto <kitakar@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6cbabad304c4e197487d73131a2f2559eb79f547
Author: Aline Santana Cordeiro <alinesantanacordeiro@gmail.com>
Date:   Thu Apr 15 18:54:23 2021 +0200

    media: staging: media: atomisp: pci: Balance braces around conditional statements in file atomisp_cmd.c
    
    [ Upstream commit 0a016c35a326c6b2f558ede58ff08da7ef1da1a8 ]
    
    Balance braces around conditional statements.
    Issue detected by checkpatch.pl.
    It happens in if-else statements where one of the commands
    uses braces around a block of code and the other command
    does not since it has just a single line of code.
    
    Signed-off-by: Aline Santana Cordeiro <alinesantanacordeiro@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22b0b68f7d9f1dc9acdb96f2d3bb43e8184f6f3a
Author: Tsuchiya Yuto <kitakar@gmail.com>
Date:   Mon Oct 18 01:19:47 2021 +0900

    media: atomisp: fix ifdefs in sh_css.c
    
    [ Upstream commit 5a1b2725558f8a3b4cbf0504f53cffae8e163034 ]
    
     ## `if (pipe->stream->config.mode == IA_CSS_INPUT_MODE_TPG) {` case
    
    The intel-aero atomisp has `#if defined(IS_ISP_2400_SYSTEM)` [1]. It is
    to be defined in the following two places [2]:
    
      - css/hive_isp_css_common/system_global.h
      - css/css_2401_csi2p_system/system_global.h
    
    and the former file is to be included on ISP2400 devices, too. So, it
    is to be defined for both ISP2400 and ISP2401 devices.
    
    Because the upstreamed atomisp driver now supports only ISP2400 and
    ISP2401, just remove the ISP version test again. This matches the other
    upstream commits like 3c0538fbad9f ("media: atomisp: get rid of most
    checks for ISP2401 version").
    
    While here, moved the comment for define GP_ISEL_TPG_MODE to the
    appropriate place.
    
    [1] https://github.com/intel-aero/linux-kernel/blob/a1b673258feb915268377275130c5c5df0eafc82/drivers/media/pci/atomisp/css/sh_css.c#L552-L558
    [2] https://github.com/intel-aero/linux-kernel/search?q=IS_ISP_2400_SYSTEM
    
      ## `isys_stream_descr->polling_mode` case
    
    This does not exist on the intel-aero atomisp. This is because it is
    based on css version irci_stable_candrpv_0415_20150521_0458.
    
    On the other hand, the upstreamed atomisp is based on the following css
    version depending on the ISP version using ifdefs:
    
      - ISP2400: irci_stable_candrpv_0415_20150521_0458
      - ISP2401: irci_master_20150911_0724
    
    The `isys_stream_descr->polling_mode` usage was added on updating css
    version to irci_master_20150701_0213 [3].
    
    So, it is not a ISP version specific thing, but css version specific
    thing. Because the upstreamed atomisp driver uses irci_master_20150911_0724
    for ISP2401, re-add the ISP version check for now.
    
    I say "for now" because ISP2401 should eventually use the same css
    version with ISP2400 (i.e., irci_stable_candrpv_0415_20150521_0458)
    
    [3] https://raw.githubusercontent.com/intel/ProductionKernelQuilts/cht-m1stable-2016_ww31/uefi/cht-m1stable/patches/cam-0439-atomisp2-css2401-and-2401_legacy-irci_master_2015070.patch
        ("atomisp2: css2401 and 2401_legacy-irci_master_20150701_0213")
        Link to Intel's Android kernel patch.
    
     ## `coord = &me->config.internal_frame_origin_bqs_on_sctbl;` case
    
    it was added on commit 4f744a573db3 ("media: atomisp: make
    sh_css_sp_init_pipeline() ISP version independent") for ISP2401. Because
    the upstreamed atomisp for the ISP2401 part is based on
    irci_master_20150911_0724, hence the difference.
    
    Because the upstreamed atomisp driver uses irci_master_20150911_0724
    for ISP2401, revert the test back to `if (IS_ISP2401)`.
    
    Fixes: 27333dadef57 ("media: atomisp: adjust some code at sh_css that could be broken")
    Signed-off-by: Tsuchiya Yuto <kitakar@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bf5e8af6eb6cff903cbe612692cee7979126ab7
Author: Tsuchiya Yuto <kitakar@gmail.com>
Date:   Mon Oct 18 01:19:45 2021 +0900

    media: atomisp: fix inverted error check for ia_css_mipi_is_source_port_valid()
    
    [ Upstream commit d21ce8c2f7bf6d737b60c09f86db141b9e8e47f0 ]
    
    The function ia_css_mipi_is_source_port_valid() returns true if the port
    is valid. So, we can't use the existing err variable as is.
    
    To fix this issue while reusing that variable, invert the return value
    when assigning it to the variable.
    
    Fixes: 3c0538fbad9f ("media: atomisp: get rid of most checks for ISP2401 version")
    Signed-off-by: Tsuchiya Yuto <kitakar@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3cb3e66f583c64a11ac507b40a9a312fbc45652b
Author: Tsuchiya Yuto <kitakar@gmail.com>
Date:   Mon Oct 18 01:19:44 2021 +0900

    media: atomisp: do not use err var when checking port validity for ISP2400
    
    [ Upstream commit 9f6b4fa2d2dfbff4b8a57eeb39b1128a6094ee20 ]
    
    Currently, the `port >= N_CSI_PORTS || err` checks for ISP2400 are always
    evaluated as true because the err variable is set to `-EINVAL` on
    declaration but the variable is never used until the evaluation.
    
    Looking at the diff of commit 3c0538fbad9f ("media: atomisp: get rid of
    most checks for ISP2401 version"), the `port >= N_CSI_PORTS` check is
    for ISP2400 and the err variable check is for ISP2401. Fix this issue
    by adding ISP version test there accordingly.
    
    Fixes: 3c0538fbad9f ("media: atomisp: get rid of most checks for ISP2401 version")
    Signed-off-by: Tsuchiya Yuto <kitakar@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08e43223fb4ec05baec6d07fb55f7e979bb289c9
Author: Tsuchiya Yuto <kitakar@gmail.com>
Date:   Mon Oct 18 01:19:43 2021 +0900

    media: atomisp: fix inverted logic in buffers_needed()
    
    [ Upstream commit e1921cd14640f0f4d1fad5eb8e448c58a536415d ]
    
    When config.mode is IA_CSS_INPUT_MODE_BUFFERED_SENSOR, it rather needs
    buffers. Fix it by inverting the return value.
    
    Fixes: 3c0538fbad9f ("media: atomisp: get rid of most checks for ISP2401 version")
    Signed-off-by: Tsuchiya Yuto <kitakar@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb370f6dc7d5dcc9a01456ae11be8811cbd47675
Author: Tsuchiya Yuto <kitakar@gmail.com>
Date:   Mon Oct 18 01:19:42 2021 +0900

    media: atomisp: fix punit_ddr_dvfs_enable() argument for mrfld_power up case
    
    [ Upstream commit 5bfbf65fcca7325e4d89d289b3c286e11220e386 ]
    
    When comparing with intel-aero atomisp [1], it looks like
    punit_ddr_dvfs_enable() should take `false` as an argument on mrfld_power
    up case.
    
    Code from the intel-aero kernel [1]:
    
            int atomisp_mrfld_power_down(struct atomisp_device *isp)
            {
            [...]
                    /*WA:Enable DVFS*/
                    if (IS_CHT)
                            punit_ddr_dvfs_enable(true);
    
            int atomisp_mrfld_power_up(struct atomisp_device *isp)
            {
            [...]
                    /*WA for PUNIT, if DVFS enabled, ISP timeout observed*/
                    if (IS_CHT)
                            punit_ddr_dvfs_enable(false);
    
    This patch fixes the inverted argument as per the intel-aero code, as
    well as its comment. While here, fix space issues for comments in
    atomisp_mrfld_power().
    
    Note that it does not seem to be possible to unify the up/down cases for
    punit_ddr_dvfs_enable(), i.e., we can't do something like the following:
    
            if (IS_CHT)
                    punit_ddr_dvfs_enable(!enable);
    
    because according to the intel-aero code [1], the DVFS is disabled
    before "writing 0x0 to ISPSSPM0 bit[1:0]" and the DVFS is enabled after
    "writing 0x3 to ISPSSPM0 bit[1:0]".
    
    [1] https://github.com/intel-aero/linux-kernel/blob/a1b673258feb915268377275130c5c5df0eafc82/drivers/media/pci/atomisp/atomisp_driver/atomisp_v4l2.c#L431-L514
    
    Fixes: 0f441fd70b1e ("media: atomisp: simplify the power down/up code")
    Signed-off-by: Tsuchiya Yuto <kitakar@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1daacf9bb69a69c044037814c544fc504acad90c
Author: Tsuchiya Yuto <kitakar@gmail.com>
Date:   Mon Oct 18 01:19:41 2021 +0900

    media: atomisp: add missing media_device_cleanup() in atomisp_unregister_entities()
    
    [ Upstream commit ce3015b7212e96db426d0c36f80fd159c91155d1 ]
    
    After the commit 9832e155f1ed ("[media] media-device: split media
    initialization and registration"), calling media_device_cleanup()
    is needed it seems. However, currently it is missing for the module
    unload path.
    
    Note that for the probe failure path, it is already added in
    atomisp_register_entities().
    
    This patch adds the missing call of media_device_cleanup() in
    atomisp_unregister_entities().
    
    Fixes: a49d25364dfb ("staging/atomisp: Add support for the Intel IPU v2")
    Signed-off-by: Tsuchiya Yuto <kitakar@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1da9301cf54f51b7d78faeb99495b285fe5decd
Author: Dillon Min <dillon.minfei@gmail.com>
Date:   Tue Oct 19 09:43:19 2021 +0100

    media: videobuf2: Fix the size printk format
    
    [ Upstream commit c9ee220d76775e42f35d634479c978d9350077d3 ]
    
    Since the type of parameter size is unsigned long,
    it should printk by %lu, instead of %ld, fix it.
    
    Fixes: 7952be9b6ece ("media: drivers/media/common/videobuf2: rename from videobuf")
    Signed-off-by: Dillon Min <dillon.minfei@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 90807ab437e8222968f9455f7d5d67b98c0e264e
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Mon Oct 25 21:56:28 2021 +0100

    mtd: hyperbus: rpc-if: Check return value of rpcif_sw_init()
    
    [ Upstream commit 981387ed06b96908223a607f5fba6efa42728fc2 ]
    
    rpcif_sw_init() can fail so make sure we check the return value
    of it and on error exit rpcif_hb_probe() callback with error code.
    
    Fixes: 5de15b610f78 ("mtd: hyperbus: add Renesas RPC-IF driver")
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Signed-off-by: Vignesh Raghavendra <vigneshr@ti.com>
    Reviewed-by: Biju Das <biju.das.jz@bp.renesas.com>
    Reviewed-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20211025205631.21151-5-prabhakar.mahadev-lad.rj@bp.renesas.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9bfed11dcf592220593cd70407f2693b37ee6059
Author: Rameshkumar Sundaram <ramess@codeaurora.org>
Date:   Wed Nov 10 17:10:48 2021 +0200

    ath11k: Send PPDU_STATS_CFG with proper pdev mask to firmware
    
    [ Upstream commit 16a2c3d5406f95ef6139de52669c60a39443f5f7 ]
    
    HTT_PPDU_STATS_CFG_PDEV_ID bit mask for target FW PPDU stats request message
    was set as bit 8 to 15. Bit 8 is reserved for soc stats and pdev id starts from
    bit 9. Hence change the bitmask as bit 9 to 15 and fill the proper pdev id in
    the request message.
    
    In commit 701e48a43e15 ("ath11k: add packet log support for QCA6390"), both
    HTT_PPDU_STATS_CFG_PDEV_ID and pdev_mask were changed, but this pdev_mask
    calculation is not valid for platforms which has multiple pdevs with 1 rxdma
    per pdev, as this is writing same value(i.e. 2) for all pdevs.  Hence fixed it
    to consider pdev_idx as well, to make it compatible for both single and multi
    pd cases.
    
    Tested on: IPQ8074 hw2.0 AHB WLAN.HK.2.5.0.1-01092-QCAHKSWPL_SILICONZ-1
    Tested on: IPQ6018 hw1.0 WLAN.HK.2.5.0.1-01067-QCAHKSWPL_SILICONZ-1
    
    Fixes: 701e48a43e15 ("ath11k: add packet log support for QCA6390")
    
    Co-developed-by: Sathishkumar Muruganandam <murugana@codeaurora.org>
    Signed-off-by: Sathishkumar Muruganandam <murugana@codeaurora.org>
    Signed-off-by: Rameshkumar Sundaram <ramess@codeaurora.org>
    Signed-off-by: Jouni Malinen <jouni@codeaurora.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210721212029.142388-10-jouni@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2fe056d9791a2eba23d9a9a31842483bcc7f7bc1
Author: Benjamin Li <benl@squareup.com>
Date:   Wed Nov 3 18:05:48 2021 -0700

    wcn36xx: fix RX BD rate mapping for 5GHz legacy rates
    
    [ Upstream commit cfdf6b19e750f7de8ae71a26932f63b52e3bf74c ]
    
    The linear mapping between the BD rate field and the driver's 5GHz
    legacy rates table (wcn_5ghz_rates) does not only apply for the latter
    four rates -- it applies to all eight rates.
    
    Fixes: 6ea131acea98 ("wcn36xx: Fix warning due to bad rate_idx")
    Signed-off-by: Benjamin Li <benl@squareup.com>
    Tested-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211104010548.1107405-3-benl@squareup.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 22406ed4e389b261cbe4353f3f6dfcecadd37e06
Author: Benjamin Li <benl@squareup.com>
Date:   Wed Nov 3 18:05:47 2021 -0700

    wcn36xx: populate band before determining rate on RX
    
    [ Upstream commit c9c5608fafe4dae975c9644c7d14c51ad3b0ed73 ]
    
    status.band is used in determination of status.rate -- for 5GHz on legacy
    rates there is a linear shift between the BD descriptor's rate field and
    the wcn36xx driver's rate table (wcn_5ghz_rates).
    
    We have a special clause to populate status.band for hardware scan offload
    frames. However, this block occurs after status.rate is already populated.
    Correctly handle this dependency by moving the band block before the rate
    block.
    
    This patch addresses kernel warnings & missing scan results for 5GHz APs
    that send their beacons/probe responses at the higher four legacy rates
    (24-54 Mbps), when using hardware scan offload:
    
      ------------[ cut here ]------------
      WARNING: CPU: 0 PID: 0 at net/mac80211/rx.c:4532 ieee80211_rx_napi+0x744/0x8d8
      Modules linked in: wcn36xx [...]
      CPU: 0 PID: 0 Comm: swapper/0 Tainted: G        W         4.19.107-g73909fa #1
      Hardware name: Square, Inc. T2 (all variants) (DT)
      Call trace:
      dump_backtrace+0x0/0x148
      show_stack+0x14/0x1c
      dump_stack+0xb8/0xf0
      __warn+0x2ac/0x2d8
      warn_slowpath_null+0x44/0x54
      ieee80211_rx_napi+0x744/0x8d8
      ieee80211_tasklet_handler+0xa4/0xe0
      tasklet_action_common+0xe0/0x118
      tasklet_action+0x20/0x28
      __do_softirq+0x108/0x1ec
      irq_exit+0xd4/0xd8
      __handle_domain_irq+0x84/0xbc
      gic_handle_irq+0x4c/0xb8
      el1_irq+0xe8/0x190
      lpm_cpuidle_enter+0x220/0x260
      cpuidle_enter_state+0x114/0x1c0
      cpuidle_enter+0x34/0x48
      do_idle+0x150/0x268
      cpu_startup_entry+0x20/0x24
      rest_init+0xd4/0xe0
      start_kernel+0x398/0x430
      ---[ end trace ae28cb759352b403 ]---
    
    Fixes: 8a27ca394782 ("wcn36xx: Correct band/freq reporting on RX")
    Signed-off-by: Benjamin Li <benl@squareup.com>
    Tested-by: Loic Poulain <loic.poulain@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211104010548.1107405-2-benl@squareup.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92fea7bd5af3b163316c40672cd31db143536774
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Fri Nov 5 12:21:52 2021 +0000

    wcn36xx: Put DXE block into reset before freeing memory
    
    [ Upstream commit ed04ea76e69e7194f7489cebe23a32a68f39218d ]
    
    When deiniting the DXE hardware we should reset the block to ensure there
    is no spurious DMA write transaction from the downstream WCNSS to upstream
    MSM at a skbuff address we will have released.
    
    Fixes: 8e84c2582169 ("wcn36xx: mac80211 driver for Qualcomm WCN3660/WCN3680 hardware")
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211105122152.1580542-4-bryan.odonoghue@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d53c47f6ab5164d8b020063c16b5a7c6e4aef77
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Fri Nov 5 12:21:51 2021 +0000

    wcn36xx: Release DMA channel descriptor allocations
    
    [ Upstream commit 3652096e5263ad67604b0323f71d133485f410e5 ]
    
    When unloading the driver we are not releasing the DMA descriptors which we
    previously allocated.
    
    Fixes: 8e84c2582169 ("wcn36xx: mac80211 driver for Qualcomm WCN3660/WCN3680 hardware")
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211105122152.1580542-3-bryan.odonoghue@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1850195a852d3d56e7d17fcc30973b8a88e8df46
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Fri Nov 5 12:21:50 2021 +0000

    wcn36xx: Fix DMA channel enable/disable cycle
    
    [ Upstream commit 89dcb1da611d9b3ff0728502d58372fdaae9ebff ]
    
    Right now we have a broken sequence where we enable DMA channel interrupts
    which can be left enabled and never disabled if we hit an error path.
    
    Worse still when we unload the driver, the DMA channel interrupt bits are
    left intact. About the only saving grace here is that we do remember to
    disable the wcnss interrupt when unload the driver.
    
    Fixes: 8e84c2582169 ("wcn36xx: mac80211 driver for Qualcomm WCN3660/WCN3680 hardware")
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211105122152.1580542-2-bryan.odonoghue@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38a7842889f51fcaf5a948212542d57aaa29acdc
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Thu Oct 28 00:25:29 2021 +0100

    wcn36xx: Indicate beacon not connection loss on MISSED_BEACON_IND
    
    [ Upstream commit 588b45c88ae130fe373a8c50edaf54735c3f4fe3 ]
    
    Firmware can trigger a missed beacon indication, this is not the same as a
    lost signal.
    
    Flag to Linux the missed beacon and let the WiFi stack decide for itself if
    the link is up or down by sending its own probe to determine this.
    
    We should only be signalling the link is lost when the firmware indicates
    
    Fixes: 8e84c2582169 ("wcn36xx: mac80211 driver for Qualcomm WCN3660/WCN3680 hardware")
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211027232529.657764-1-bryan.odonoghue@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fcb267bb957752e4535efd38ea20d82fa8f45b76
Author: Benjamin Li <benl@squareup.com>
Date:   Wed Oct 27 10:03:05 2021 -0700

    wcn36xx: ensure pairing of init_scan/finish_scan and start_scan/end_scan
    
    [ Upstream commit 8f1ba8b0ee2679f0b3d22d2a5c1bc70c436fd872 ]
    
    An SMD capture from the downstream prima driver on WCN3680B shows the
    following command sequence for connected scans:
    
    - init_scan_req
        - start_scan_req, channel 1
        - end_scan_req, channel 1
        - start_scan_req, channel 2
        - ...
        - end_scan_req, channel 3
    - finish_scan_req
    - init_scan_req
        - start_scan_req, channel 4
        - ...
        - end_scan_req, channel 6
    - finish_scan_req
    - ...
        - end_scan_req, channel 165
    - finish_scan_req
    
    Upstream currently never calls wcn36xx_smd_end_scan, and in some cases[1]
    still sends finish_scan_req twice in a row or before init_scan_req. A
    typical connected scan looks like this:
    
    - init_scan_req
        - start_scan_req, channel 1
    - finish_scan_req
    - init_scan_req
        - start_scan_req, channel 2
    - ...
        - start_scan_req, channel 165
    - finish_scan_req
    - finish_scan_req
    
    This patch cleans up scanning so that init/finish and start/end are always
    paired together and correctly nested.
    
    - init_scan_req
        - start_scan_req, channel 1
        - end_scan_req, channel 1
    - finish_scan_req
    - init_scan_req
        - start_scan_req, channel 2
        - end_scan_req, channel 2
    - ...
        - start_scan_req, channel 165
        - end_scan_req, channel 165
    - finish_scan_req
    
    Note that upstream will not do batching of 3 active-probe scans before
    returning to the operating channel, and this patch does not change that.
    To match downstream in this aspect, adjust IEEE80211_PROBE_DELAY and/or
    the 125ms max off-channel time in ieee80211_scan_state_decision.
    
    [1]: commit d195d7aac09b ("wcn36xx: Ensure finish scan is not requested
    before start scan") addressed one case of finish_scan_req being sent
    without a preceding init_scan_req (the case of the operating channel
    coinciding with the first scan channel); two other cases are:
    1) if SW scan is started and aborted immediately, without scanning any
       channels, we send a finish_scan_req without ever sending init_scan_req,
       and
    2) as SW scan logic always returns us to the operating channel before
       calling wcn36xx_sw_scan_complete, finish_scan_req is always sent twice
       at the end of a SW scan
    
    Fixes: 8e84c2582169 ("wcn36xx: mac80211 driver for Qualcomm WCN3660/WCN3680 hardware")
    Signed-off-by: Benjamin Li <benl@squareup.com>
    Tested-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211027170306.555535-4-benl@squareup.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e53ff4dd70959405926eb7e39f3c158cd8041bfe
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Wed Sep 22 14:54:17 2021 +0200

    drm/vc4: hdmi: Set a default HSM rate
    
    [ Upstream commit 3e85b81591609bb794bb00cd619b20965b5b38cd ]
    
    When the firmware doesn't setup the HSM rate (such as when booting
    without an HDMI cable plugged in), its rate is 0 and thus any register
    access results in a CPU stall, even though HSM is enabled.
    
    Let's enforce a minimum rate at boot to avoid this issue.
    
    Fixes: 4f6e3d66ac52 ("drm/vc4: Add runtime PM support to the HDMI encoder driver")
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Reviewed-by: Nicolas Saenz Julienne <nsaenz@kernel.org>
    Tested-by: Nicolas Saenz Julienne <nsaenz@kernel.org>
    Tested-by: Michael Stapelberg <michael@stapelberg.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210922125419.4125779-4-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9c2343373f6bf19358db4e50197f5b3a17831db
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Wed Sep 22 14:54:16 2021 +0200

    clk: bcm-2835: Remove rounding up the dividers
    
    [ Upstream commit 8ca011ef4af48a7af7b15afd8a4a44039dd04cea ]
    
    The driver, once it found a divider, tries to round it up by increasing
    the least significant bit of the fractional part by one when the
    round_up argument is set and there's a remainder.
    
    However, since it increases the divider it will actually reduce the
    clock rate below what we were asking for, leading to issues with
    clk_set_min_rate() that will complain that our rounded clock rate is
    below the minimum of the rate.
    
    Since the dividers are fairly precise already, let's remove that part so
    that we can have clk_set_min_rate() working.
    
    This is effectively a revert of 9c95b32ca093 ("clk: bcm2835: add a round
    up ability to the clock divisor").
    
    Fixes: 9c95b32ca093 ("clk: bcm2835: add a round up ability to the clock divisor")
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Acked-by: Stephen Boyd <sboyd@kernel.org>
    Reviewed-by: Nicolas Saenz Julienne <nsaenz@kernel.org>
    Tested-by: Nicolas Saenz Julienne <nsaenz@kernel.org> # boot and basic functionality
    Tested-by: Michael Stapelberg <michael@stapelberg.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210922125419.4125779-3-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 836dd37fe2bb0931e86fef788cdf44c3de4ff46d
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Wed Sep 22 14:54:15 2021 +0200

    clk: bcm-2835: Pick the closest clock rate
    
    [ Upstream commit 5517357a4733d7cf7c17fc79d0530cfa47add372 ]
    
    The driver currently tries to pick the closest rate that is lower than
    the rate being requested.
    
    This causes an issue with clk_set_min_rate() since it actively checks
    for the rounded rate to be above the minimum that was just set.
    
    Let's change the logic a bit to pick the closest rate to the requested
    rate, no matter if it's actually higher or lower.
    
    Fixes: 6d18b8adbe67 ("clk: bcm2835: Support for clock parent selection")
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Acked-by: Stephen Boyd <sboyd@kernel.org>
    Reviewed-by: Nicolas Saenz Julienne <nsaenz@kernel.org>
    Tested-by: Nicolas Saenz Julienne <nsaenz@kernel.org> # boot and basic functionality
    Tested-by: Michael Stapelberg <michael@stapelberg.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210922125419.4125779-2-maxime@cerno.tech
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88f1b613c37fbd3c4171f5a9decdcd12ae704637
Author: Wang Hai <wanghai38@huawei.com>
Date:   Mon Oct 25 21:10:12 2021 +0800

    Bluetooth: cmtp: fix possible panic when cmtp_init_sockets() fails
    
    [ Upstream commit 2a7ca7459d905febf519163bd9e3eed894de6bb7 ]
    
    I got a kernel BUG report when doing fault injection test:
    
    ------------[ cut here ]------------
    kernel BUG at lib/list_debug.c:45!
    ...
    RIP: 0010:__list_del_entry_valid.cold+0x12/0x4d
    ...
    Call Trace:
     proto_unregister+0x83/0x220
     cmtp_cleanup_sockets+0x37/0x40 [cmtp]
     cmtp_exit+0xe/0x1f [cmtp]
     do_syscall_64+0x35/0xb0
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    If cmtp_init_sockets() in cmtp_init() fails, cmtp_init() still returns
    success. This will cause a kernel bug when accessing uncreated ctmp
    related data when the module exits.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ddfa1c19191671a8aafcc5cf9181c3d0351be43
Author: Brian Norris <briannorris@chromium.org>
Date:   Tue Sep 28 14:35:50 2021 -0700

    drm/rockchip: dsi: Reconfigure hardware on resume()
    
    commit e584cdc1549932f87a2707b56bc588cfac5d89e0 upstream.
    
    Since commit 43c2de1002d2 ("drm/rockchip: dsi: move all lane config except
    LCDC mux to bind()"), we perform most HW configuration in the bind()
    function. This configuration may be lost on suspend/resume, so we
    need to call it again. That may lead to errors like this after system
    suspend/resume:
    
      dw-mipi-dsi-rockchip ff968000.mipi: failed to write command FIFO
      panel-kingdisplay-kd097d04 ff960000.mipi.0: failed write init cmds: -110
    
    Tested on Acer Chromebook Tab 10 (RK3399 Gru-Scarlet).
    
    Note that early mailing list versions of this driver borrowed Rockchip's
    downstream/BSP solution, to do HW configuration in mode_set() (which
    *is* called at the appropriate pre-enable() times), but that was
    discarded along the way. I've avoided that still, because mode_set()
    documentation doesn't suggest this kind of purpose as far as I can tell.
    
    Fixes: 43c2de1002d2 ("drm/rockchip: dsi: move all lane config except LCDC mux to bind()")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Reviewed-by: Chen-Yu Tsai <wenst@chromium.org>
    Tested-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210928143413.v3.2.I4e9d93aadb00b1ffc7d506e3186a25492bf0b732@changeid
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58904ed1862831fdbc54f361d197e328fef00e26
Author: Brian Norris <briannorris@chromium.org>
Date:   Tue Sep 28 14:35:52 2021 -0700

    drm/rockchip: dsi: Disable PLL clock on bind error
    
    [ Upstream commit 5a614570172e1c9f59035d259dd735acd4f1c01b ]
    
    Fix some error handling here noticed in review of other changes.
    
    Fixes: 2d4f7bdafd70 ("drm/rockchip: dsi: migrate to use dw-mipi-dsi bridge driver")
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Reported-by: Chen-Yu Tsai <wenst@chromium.org>
    Reviewed-by: Chen-Yu Tsai <wenst@chromium.org>
    Tested-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210928143413.v3.4.I8bb7a91ecc411d56bc155763faa15f289d7fc074@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6215cde02085daf42d5b56fcd0a7b1cbe77766b5
Author: Brian Norris <briannorris@chromium.org>
Date:   Tue Sep 28 14:35:49 2021 -0700

    drm/rockchip: dsi: Hold pm-runtime across bind/unbind
    
    commit 514db871922f103886ad4d221cf406b4fcc5e74a upstream.
    
    In commit 43c2de1002d2 ("drm/rockchip: dsi: move all lane config except
    LCDC mux to bind()"), we moved most HW configuration to bind(), but we
    didn't move the runtime PM management. Therefore, depending on initial
    boot state, runtime-PM workqueue delays, and other timing factors, we
    may disable our power domain in between the hardware configuration
    (bind()) and when we enable the display. This can cause us to lose
    hardware state and fail to configure our display. For example:
    
      dw-mipi-dsi-rockchip ff968000.mipi: failed to write command FIFO
      panel-innolux-p079zca ff960000.mipi.0: failed to write command 0
    
    or:
    
      dw-mipi-dsi-rockchip ff968000.mipi: failed to write command FIFO
      panel-kingdisplay-kd097d04 ff960000.mipi.0: failed write init cmds: -110
    
    We should match the runtime PM to the lifetime of the bind()/unbind()
    cycle.
    
    Tested on Acer Chrometab 10 (RK3399 Gru-Scarlet), with panel drivers
    built either as modules or built-in.
    
    Side notes: it seems one is more likely to see this problem when the
    panel driver is built into the kernel. I've also seen this problem
    bisect down to commits that simply changed Kconfig dependencies, because
    it changed the order in which driver init functions were compiled into
    the kernel, and therefore the ordering and timing of built-in device
    probe.
    
    Fixes: 43c2de1002d2 ("drm/rockchip: dsi: move all lane config except LCDC mux to bind()")
    Link: https://lore.kernel.org/linux-rockchip/9aedfb528600ecf871885f7293ca4207c84d16c1.camel@gmail.com/
    Reported-by: <aleksandr.o.makarov@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Tested-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Reviewed-by: Chen-Yu Tsai <wenst@chromium.org>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210928143413.v3.1.Ic2904d37f30013a7f3d8476203ad3733c186827e@changeid
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ccaafa1caf0702194c77e71a853ac5c4c0b429b
Author: Brian Norris <briannorris@chromium.org>
Date:   Tue Sep 28 14:35:51 2021 -0700

    drm/rockchip: dsi: Fix unbalanced clock on probe error
    
    [ Upstream commit 251888398753924059f3bb247a44153a2853137f ]
    
    Our probe() function never enabled this clock, so we shouldn't disable
    it if we fail to probe the bridge.
    
    Noted by inspection.
    
    Fixes: 2d4f7bdafd70 ("drm/rockchip: dsi: migrate to use dw-mipi-dsi bridge driver")
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Reviewed-by: Chen-Yu Tsai <wenst@chromium.org>
    Tested-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210928143413.v3.3.Ie8ceefb51ab6065a1151869b6fcda41a467d4d2c@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9bc19022aa08a1c0f30780df0275c4ee77a1ca2c
Author: Brian Norris <briannorris@chromium.org>
Date:   Thu Sep 23 17:33:54 2021 -0700

    drm/panel: innolux-p079zca: Delete panel on attach() failure
    
    [ Upstream commit 32a267e9c057e1636e7afdd20599aa5741a73079 ]
    
    If we fail to attach (e.g., because 1 of 2 dual-DSI controllers aren't
    ready), we leave a dangling drm_panel reference to freed memory. Clean
    that up on failure.
    
    This problem exists since the driver's introduction, but is especially
    relevant after refactored for dual-DSI variants.
    
    Fixes: 14c8f2e9f8ea ("drm/panel: add Innolux P079ZCA panel driver")
    Fixes: 7ad4e4636c54 ("drm/panel: p079zca: Refactor panel driver to support multiple panels")
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210923173336.2.I9023cf8811a3abf4964ed84eb681721d8bb489d6@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b01b7b868479f00e4f9b570cdb222d0a021ab719
Author: Brian Norris <briannorris@chromium.org>
Date:   Thu Sep 23 17:33:53 2021 -0700

    drm/panel: kingdisplay-kd097d04: Delete panel on attach() failure
    
    [ Upstream commit 5f31dbeae8a88f31c3eb4eb526ab4807c40da241 ]
    
    If we fail to attach (e.g., because 1 of 2 dual-DSI controllers aren't
    ready), we leave a dangling drm_panel reference to freed memory. Clean
    that up on failure.
    
    Fixes: 2a994cbed6b2 ("drm/panel: Add Kingdisplay KD097D04 panel driver")
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210923173336.1.Icb4d9dbc1817f4e826361a4f1cea7461541668f0@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0499c863a8dbe22f1450e2cb3c14131956d91dd1
Author: Wang Hai <wanghai38@huawei.com>
Date:   Wed Oct 13 19:41:39 2021 +0800

    drm: fix null-ptr-deref in drm_dev_init_release()
    
    [ Upstream commit acf20ed020ffa4d6cc8347e8d356509b95df3cbe ]
    
    I got a null-ptr-deref report:
    
    [drm:drm_dev_init [drm]] *ERROR* Cannot allocate anonymous inode: -12
    ==================================================================
    BUG: KASAN: null-ptr-deref in iput+0x3c/0x4a0
    ...
    Call Trace:
     dump_stack_lvl+0x6c/0x8b
     kasan_report.cold+0x64/0xdb
     __asan_load8+0x69/0x90
     iput+0x3c/0x4a0
     drm_dev_init_release+0x39/0xb0 [drm]
     drm_managed_release+0x158/0x2d0 [drm]
     drm_dev_init+0x3a7/0x4c0 [drm]
     __devm_drm_dev_alloc+0x55/0xd0 [drm]
     mi0283qt_probe+0x8a/0x2b5 [mi0283qt]
     spi_probe+0xeb/0x130
    ...
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    If drm_fs_inode_new() fails in drm_dev_init(), dev->anon_inode will point
    to PTR_ERR(...) instead of NULL. This will result in null-ptr-deref when
    drm_fs_inode_free(dev->anon_inode) is called.
    
    drm_dev_init()
            drm_fs_inode_new() // fail, dev->anon_inode = PTR_ERR(...)
            drm_managed_release()
                    drm_dev_init_release()
                            drm_fs_inode_free() // access non-existent anon_inode
    
    Define a temp variable and assign it to dev->anon_inode if the temp
    variable is not PTR_ERR.
    
    Fixes: 2cbf7fc6718b ("drm: Use drmm_ for drm_dev_init cleanup")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai38@huawei.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211013114139.4042207-1-wanghai38@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7798757013ec45e65656bafdb444eb4e675578d9
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 13 11:08:25 2021 +0300

    drm/bridge: display-connector: fix an uninitialized pointer in probe()
    
    [ Upstream commit 189723fbe9aca18d6f7d638c59a40288030932b5 ]
    
    The "label" pointer is used for debug output.  The code assumes that it
    is either NULL or valid, but it is never set to NULL.  It is either
    valid or uninitialized.
    
    Fixes: 0c275c30176b ("drm/bridge: Add bridge driver for display connectors")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211013080825.GE6010@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb5813b0e5918b4ea5a863f2b66458c6aaa0a654
Author: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
Date:   Thu Oct 7 13:26:25 2021 -0700

    Bluetooth: L2CAP: Fix not initializing sk_peer_pid
    
    [ Upstream commit f5ff291098f70a70b344df1e388596755c3c8315 ]
    
    In order to group sockets being connected using L2CAP_MODE_EXT_FLOWCTL
    the pid is used but sk_peer_pid was not being initialized as it is
    currently only done for af_unix.
    
    Fixes: b48596d1dc25 ("Bluetooth: L2CAP: Add get_peer_pid callback")
    Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed0b1fd3ec6e4a033c07b023153248ca1837ec79
Author: xinhui pan <xinhui.pan@amd.com>
Date:   Wed Nov 10 12:31:48 2021 +0800

    drm/ttm: Put BO in its memory manager's lru list
    
    commit 781050b0a3164934857c300bb0bc291e38c26b6f upstream.
    
    After we move BO to a new memory region, we should put it to
    the new memory manager's lru list regardless we unlock the resv or not.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: xinhui pan <xinhui.pan@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211110043149.57554-1-xinhui.pan@amd.com
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b9fa915a58d441437f13724fabb51c605a49fbd
Author: Gang Li <ligang.bdlg@bytedance.com>
Date:   Fri Jan 14 14:05:23 2022 -0800

    shmem: fix a race between shmem_unused_huge_shrink and shmem_evict_inode
    
    commit 62c9827cbb996c2c04f615ecd783ce28bcea894b upstream.
    
    Fix a data race in commit 779750d20b93 ("shmem: split huge pages beyond
    i_size under memory pressure").
    
    Here are call traces causing race:
    
       Call Trace 1:
         shmem_unused_huge_shrink+0x3ae/0x410
         ? __list_lru_walk_one.isra.5+0x33/0x160
         super_cache_scan+0x17c/0x190
         shrink_slab.part.55+0x1ef/0x3f0
         shrink_node+0x10e/0x330
         kswapd+0x380/0x740
         kthread+0xfc/0x130
         ? mem_cgroup_shrink_node+0x170/0x170
         ? kthread_create_on_node+0x70/0x70
         ret_from_fork+0x1f/0x30
    
       Call Trace 2:
         shmem_evict_inode+0xd8/0x190
         evict+0xbe/0x1c0
         do_unlinkat+0x137/0x330
         do_syscall_64+0x76/0x120
         entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    
    A simple explanation:
    
    Image there are 3 items in the local list (@list).  In the first
    traversal, A is not deleted from @list.
    
      1)    A->B->C
            ^
            |
            pos (leave)
    
    In the second traversal, B is deleted from @list.  Concurrently, A is
    deleted from @list through shmem_evict_inode() since last reference
    counter of inode is dropped by other thread.  Then the @list is corrupted.
    
      2)    A->B->C
            ^  ^
            |  |
         evict pos (drop)
    
    We should make sure the inode is either on the global list or deleted from
    any local list before iput().
    
    Fixed by moving inodes back to global list before we put them.
    
    [akpm@linux-foundation.org: coding style fixes]
    
    Link: https://lkml.kernel.org/r/20211125064502.99983-1-ligang.bdlg@bytedance.com
    Fixes: 779750d20b93 ("shmem: split huge pages beyond i_size under memory pressure")
    Signed-off-by: Gang Li <ligang.bdlg@bytedance.com>
    Reviewed-by: Muchun Song <songmuchun@bytedance.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c6f86bb618b73007dc2bc8d4b4003f80ba1efeb
Author: Baoquan He <bhe@redhat.com>
Date:   Fri Jan 14 14:07:44 2022 -0800

    mm/page_alloc.c: do not warn allocation failure on zone DMA if no managed pages
    
    commit c4dc63f0032c77464fbd4e7a6afc22fa6913c4a7 upstream.
    
    In kdump kernel of x86_64, page allocation failure is observed:
    
     kworker/u2:2: page allocation failure: order:0, mode:0xcc1(GFP_KERNEL|GFP_DMA), nodemask=(null),cpuset=/,mems_allowed=0
     CPU: 0 PID: 55 Comm: kworker/u2:2 Not tainted 5.16.0-rc4+ #5
     Hardware name: AMD Dinar/Dinar, BIOS RDN1505B 06/05/2013
     Workqueue: events_unbound async_run_entry_fn
     Call Trace:
      <TASK>
      dump_stack_lvl+0x48/0x5e
      warn_alloc.cold+0x72/0xd6
      __alloc_pages_slowpath.constprop.0+0xc69/0xcd0
      __alloc_pages+0x1df/0x210
      new_slab+0x389/0x4d0
      ___slab_alloc+0x58f/0x770
      __slab_alloc.constprop.0+0x4a/0x80
      kmem_cache_alloc_trace+0x24b/0x2c0
      sr_probe+0x1db/0x620
      ......
      device_add+0x405/0x920
      ......
      __scsi_add_device+0xe5/0x100
      ata_scsi_scan_host+0x97/0x1d0
      async_run_entry_fn+0x30/0x130
      process_one_work+0x1e8/0x3c0
      worker_thread+0x50/0x3b0
      ? rescuer_thread+0x350/0x350
      kthread+0x16b/0x190
      ? set_kthread_struct+0x40/0x40
      ret_from_fork+0x22/0x30
      </TASK>
     Mem-Info:
     ......
    
    The above failure happened when calling kmalloc() to allocate buffer with
    GFP_DMA.  It requests to allocate slab page from DMA zone while no managed
    pages at all in there.
    
     sr_probe()
     --> get_capabilities()
         --> buffer = kmalloc(512, GFP_KERNEL | GFP_DMA);
    
    Because in the current kernel, dma-kmalloc will be created as long as
    CONFIG_ZONE_DMA is enabled.  However, kdump kernel of x86_64 doesn't have
    managed pages on DMA zone since commit 6f599d84231f ("x86/kdump: Always
    reserve the low 1M when the crashkernel option is specified").  The
    failure can be always reproduced.
    
    For now, let's mute the warning of allocation failure if requesting pages
    from DMA zone while no managed pages.
    
    [akpm@linux-foundation.org: fix warning]
    
    Link: https://lkml.kernel.org/r/20211223094435.248523-4-bhe@redhat.com
    Fixes: 6f599d84231f ("x86/kdump: Always reserve the low 1M when the crashkernel option is specified")
    Signed-off-by: Baoquan He <bhe@redhat.com>
    Acked-by: John Donnelly  <john.p.donnelly@oracle.com>
    Reviewed-by: Hyeonggon Yoo <42.hyeyoo@gmail.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: David Hildenbrand <david@redhat.com>
    Cc: David Laight <David.Laight@ACULAB.COM>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Robin Murphy <robin.murphy@arm.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e04b1dfe15cefe465060e3ab1eb4328ce255e051
Author: Baoquan He <bhe@redhat.com>
Date:   Fri Jan 14 14:07:41 2022 -0800

    dma/pool: create dma atomic pool only if dma zone has managed pages
    
    commit a674e48c5443d12a8a43c3ac42367aa39505d506 upstream.
    
    Currently three dma atomic pools are initialized as long as the relevant
    kernel codes are built in.  While in kdump kernel of x86_64, this is not
    right when trying to create atomic_pool_dma, because there's no managed
    pages in DMA zone.  In the case, DMA zone only has low 1M memory
    presented and locked down by memblock allocator.  So no pages are added
    into buddy of DMA zone.  Please check commit f1d4d47c5851 ("x86/setup:
    Always reserve the first 1M of RAM").
    
    Then in kdump kernel of x86_64, it always prints below failure message:
    
     DMA: preallocated 128 KiB GFP_KERNEL pool for atomic allocations
     swapper/0: page allocation failure: order:5, mode:0xcc1(GFP_KERNEL|GFP_DMA), nodemask=(null),cpuset=/,mems_allowed=0
     CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.13.0-0.rc5.20210611git929d931f2b40.42.fc35.x86_64 #1
     Hardware name: Dell Inc. PowerEdge R910/0P658H, BIOS 2.12.0 06/04/2018
     Call Trace:
      dump_stack+0x7f/0xa1
      warn_alloc.cold+0x72/0xd6
      __alloc_pages_slowpath.constprop.0+0xf29/0xf50
      __alloc_pages+0x24d/0x2c0
      alloc_page_interleave+0x13/0xb0
      atomic_pool_expand+0x118/0x210
      __dma_atomic_pool_init+0x45/0x93
      dma_atomic_pool_init+0xdb/0x176
      do_one_initcall+0x67/0x320
      kernel_init_freeable+0x290/0x2dc
      kernel_init+0xa/0x111
      ret_from_fork+0x22/0x30
     Mem-Info:
     ......
     DMA: failed to allocate 128 KiB GFP_KERNEL|GFP_DMA pool for atomic allocation
     DMA: preallocated 128 KiB GFP_KERNEL|GFP_DMA32 pool for atomic allocations
    
    Here, let's check if DMA zone has managed pages, then create
    atomic_pool_dma if yes.  Otherwise just skip it.
    
    Link: https://lkml.kernel.org/r/20211223094435.248523-3-bhe@redhat.com
    Fixes: 6f599d84231f ("x86/kdump: Always reserve the low 1M when the crashkernel option is specified")
    Signed-off-by: Baoquan He <bhe@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Acked-by: John Donnelly  <john.p.donnelly@oracle.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Robin Murphy <robin.murphy@arm.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: David Laight <David.Laight@ACULAB.COM>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Hyeonggon Yoo <42.hyeyoo@gmail.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2e572411738a5aad67901caef8e083fb9df29fd
Author: Baoquan He <bhe@redhat.com>
Date:   Fri Jan 14 14:07:37 2022 -0800

    mm_zone: add function to check if managed dma zone exists
    
    commit 62b3107073646e0946bd97ff926832bafb846d17 upstream.
    
    Patch series "Handle warning of allocation failure on DMA zone w/o
    managed pages", v4.
    
    **Problem observed:
    On x86_64, when crash is triggered and entering into kdump kernel, page
    allocation failure can always be seen.
    
     ---------------------------------
     DMA: preallocated 128 KiB GFP_KERNEL pool for atomic allocations
     swapper/0: page allocation failure: order:5, mode:0xcc1(GFP_KERNEL|GFP_DMA), nodemask=(null),cpuset=/,mems_allowed=0
     CPU: 0 PID: 1 Comm: swapper/0
     Call Trace:
      dump_stack+0x7f/0xa1
      warn_alloc.cold+0x72/0xd6
      ......
      __alloc_pages+0x24d/0x2c0
      ......
      dma_atomic_pool_init+0xdb/0x176
      do_one_initcall+0x67/0x320
      ? rcu_read_lock_sched_held+0x3f/0x80
      kernel_init_freeable+0x290/0x2dc
      ? rest_init+0x24f/0x24f
      kernel_init+0xa/0x111
      ret_from_fork+0x22/0x30
     Mem-Info:
     ------------------------------------
    
    ***Root cause:
    In the current kernel, it assumes that DMA zone must have managed pages
    and try to request pages if CONFIG_ZONE_DMA is enabled. While this is not
    always true. E.g in kdump kernel of x86_64, only low 1M is presented and
    locked down at very early stage of boot, so that this low 1M won't be
    added into buddy allocator to become managed pages of DMA zone. This
    exception will always cause page allocation failure if page is requested
    from DMA zone.
    
    ***Investigation:
    This failure happens since below commit merged into linus's tree.
      1a6a9044b967 x86/setup: Remove CONFIG_X86_RESERVE_LOW and reservelow= options
      23721c8e92f7 x86/crash: Remove crash_reserve_low_1M()
      f1d4d47c5851 x86/setup: Always reserve the first 1M of RAM
      7c321eb2b843 x86/kdump: Remove the backup region handling
      6f599d84231f x86/kdump: Always reserve the low 1M when the crashkernel option is specified
    
    Before them, on x86_64, the low 640K area will be reused by kdump kernel.
    So in kdump kernel, the content of low 640K area is copied into a backup
    region for dumping before jumping into kdump. Then except of those firmware
    reserved region in [0, 640K], the left area will be added into buddy
    allocator to become available managed pages of DMA zone.
    
    However, after above commits applied, in kdump kernel of x86_64, the low
    1M is reserved by memblock, but not released to buddy allocator. So any
    later page allocation requested from DMA zone will fail.
    
    At the beginning, if crashkernel is reserved, the low 1M need be locked
    down because AMD SME encrypts memory making the old backup region
    mechanims impossible when switching into kdump kernel.
    
    Later, it was also observed that there are BIOSes corrupting memory
    under 1M. To solve this, in commit f1d4d47c5851, the entire region of
    low 1M is always reserved after the real mode trampoline is allocated.
    
    Besides, recently, Intel engineer mentioned their TDX (Trusted domain
    extensions) which is under development in kernel also needs to lock down
    the low 1M. So we can't simply revert above commits to fix the page allocation
    failure from DMA zone as someone suggested.
    
    ***Solution:
    Currently, only DMA atomic pool and dma-kmalloc will initialize and
    request page allocation with GFP_DMA during bootup.
    
    So only initializ DMA atomic pool when DMA zone has available managed
    pages, otherwise just skip the initialization.
    
    For dma-kmalloc(), for the time being, let's mute the warning of
    allocation failure if requesting pages from DMA zone while no manged
    pages.  Meanwhile, change code to use dma_alloc_xx/dma_map_xx API to
    replace kmalloc(GFP_DMA), or do not use GFP_DMA when calling kmalloc() if
    not necessary.  Christoph is posting patches to fix those under
    drivers/scsi/.  Finally, we can remove the need of dma-kmalloc() as people
    suggested.
    
    This patch (of 3):
    
    In some places of the current kernel, it assumes that dma zone must have
    managed pages if CONFIG_ZONE_DMA is enabled.  While this is not always
    true.  E.g in kdump kernel of x86_64, only low 1M is presented and locked
    down at very early stage of boot, so that there's no managed pages at all
    in DMA zone.  This exception will always cause page allocation failure if
    page is requested from DMA zone.
    
    Here add function has_managed_dma() and the relevant helper functions to
    check if there's DMA zone with managed pages.  It will be used in later
    patches.
    
    Link: https://lkml.kernel.org/r/20211223094435.248523-1-bhe@redhat.com
    Link: https://lkml.kernel.org/r/20211223094435.248523-2-bhe@redhat.com
    Fixes: 6f599d84231f ("x86/kdump: Always reserve the low 1M when the crashkernel option is specified")
    Signed-off-by: Baoquan He <bhe@redhat.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Acked-by: John Donnelly  <john.p.donnelly@oracle.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Hyeonggon Yoo <42.hyeyoo@gmail.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: David Laight <David.Laight@ACULAB.COM>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Cc: Robin Murphy <robin.murphy@arm.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2142a7e9bd1f4c051fd74ee15ba01528e54eb390
Author: Yifeng Li <tomli@tomli.me>
Date:   Thu Dec 2 06:35:21 2021 +0000

    PCI: Add function 1 DMA alias quirk for Marvell 88SE9125 SATA controller
    
    commit e445375882883f69018aa669b67cbb37ec873406 upstream.
    
    Like other SATA controller chips in the Marvell 88SE91xx series, the
    Marvell 88SE9125 has the same DMA requester ID hardware bug that prevents
    it from working under IOMMU.  Add it to the list of devices that need the
    quirk.
    
    Without this patch, device initialization fails with DMA errors:
    
      ata8: softreset failed (1st FIS failed)
      DMAR: DRHD: handling fault status reg 2
      DMAR: [DMA Write NO_PASID] Request device [03:00.1] fault addr 0xfffc0000 [fault reason 0x02] Present bit in context entry is clear
      DMAR: DRHD: handling fault status reg 2
      DMAR: [DMA Read NO_PASID] Request device [03:00.1] fault addr 0xfffc0000 [fault reason 0x02] Present bit in context entry is clear
    
    After applying the patch, the controller can be successfully initialized:
    
      ata8: SATA link up 1.5 Gbps (SStatus 113 SControl 330)
      ata8.00: ATAPI: PIONEER BD-RW   BDR-207M, 1.21, max UDMA/100
      ata8.00: configured for UDMA/100
      scsi 7:0:0:0: CD-ROM            PIONEER  BD-RW   BDR-207M 1.21 PQ: 0 ANSI: 5
    
    Link: https://lore.kernel.org/r/YahpKVR+McJVDdkD@work
    Reported-by: Sam Bingner <sam@bingner.com>
    Tested-by: Sam Bingner <sam@bingner.com>
    Tested-by: Yifeng Li <tomli@tomli.me>
    Signed-off-by: Yifeng Li <tomli@tomli.me>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Krzysztof Wilczyński <kw@linux.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45c74f4f54db9fa87d921225dc5f31776b854254
Author: Thomas Hellström <thomas.hellstrom@linux.intel.com>
Date:   Mon Nov 29 16:27:27 2021 +0100

    dma_fence_array: Fix PENDING_ERROR leak in dma_fence_array_signaled()
    
    commit 95d35838880fb040ccb9fe4a48816bd0c8b62df5 upstream.
    
    If a dma_fence_array is reported signaled by a call to
    dma_fence_is_signaled(), it may leak the PENDING_ERROR status.
    
    Fix this by clearing the PENDING_ERROR status if we return true in
    dma_fence_array_signaled().
    
    v2:
    - Update Cc list, and add R-b.
    
    Fixes: 1f70b8b812f3 ("dma-fence: Propagate errors to dma-fence-array container")
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Cc: Gustavo Padovan <gustavo@padovan.org>
    Cc: Christian König <christian.koenig@amd.com>
    Cc: "Christian König" <christian.koenig@amd.com>
    Cc: linux-media@vger.kernel.org
    Cc: dri-devel@lists.freedesktop.org
    Cc: linaro-mm-sig@lists.linaro.org
    Cc: <stable@vger.kernel.org> # v5.4+
    Signed-off-by: Thomas Hellström <thomas.hellstrom@linux.intel.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20211129152727.448908-1-thomas.hellstrom@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 191a24ceae750cd25c82b1dcf05b32df8d8d95b7
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Sat Dec 4 17:58:48 2021 +0300

    gpu: host1x: Add back arm_iommu_detach_device()
    
    commit d5185965c3b59073c4520bad7dd2adf725b9abba upstream.
    
    Host1x DMA buffer isn't mapped properly when CONFIG_ARM_DMA_USE_IOMMU=y.
    The memory management code of Host1x driver has a longstanding overhaul
    overdue and it's not obvious where the problem is in this case. Hence
    let's add back the old workaround which we already had sometime before.
    It explicitly detaches Host1x device from the offending implicit IOMMU
    domain. This fixes a completely broken Host1x DMA in case of ARM32
    multiplatform kernel config.
    
    Cc: stable@vger.kernel.org
    Fixes: af1cbfb9bf0f ("gpu: host1x: Support DMA mapping of buffers")
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0680674536904bfb4e4e64905a18ab300b9372f3
Author: Yunfei Wang <yf.wang@mediatek.com>
Date:   Tue Dec 7 19:33:15 2021 +0800

    iommu/io-pgtable-arm-v7s: Add error handle for page table allocation failure
    
    commit a556cfe4cabc6d79cbb7733f118bbb420b376fe6 upstream.
    
    In __arm_v7s_alloc_table function:
    iommu call kmem_cache_alloc to allocate page table, this function
    allocate memory may fail, when kmem_cache_alloc fails to allocate
    table, call virt_to_phys will be abnomal and return unexpected phys
    and goto out_free, then call kmem_cache_free to release table will
    trigger KE, __get_free_pages and free_pages have similar problem,
    so add error handle for page table allocation failure.
    
    Fixes: 29859aeb8a6e ("iommu/io-pgtable-arm-v7s: Abort allocation when table address overflows the PTE")
    Signed-off-by: Yunfei Wang <yf.wang@mediatek.com>
    Cc: <stable@vger.kernel.org> # 5.10.*
    Acked-by: Robin Murphy <robin.murphy@arm.com>
    Link: https://lore.kernel.org/r/20211207113315.29109-1-yf.wang@mediatek.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3dae11f8e381d3a3461a3accce1120edbe43f5fd
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Fri Oct 8 18:58:40 2021 +0200

    lkdtm: Fix content of section containing lkdtm_rodata_do_nothing()
    
    commit bc93a22a19eb2b68a16ecf04cdf4b2ed65aaf398 upstream.
    
    On a kernel without CONFIG_STRICT_KERNEL_RWX, running EXEC_RODATA
    test leads to "Illegal instruction" failure.
    
    Looking at the content of rodata_objcopy.o, we see that the
    function content zeroes only:
    
            Disassembly of section .rodata:
    
            0000000000000000 <.lkdtm_rodata_do_nothing>:
               0:   00 00 00 00     .long 0x0
    
    Add the contents flag in order to keep the content of the section
    while renaming it.
    
            Disassembly of section .rodata:
    
            0000000000000000 <.lkdtm_rodata_do_nothing>:
               0:   4e 80 00 20     blr
    
    Fixes: e9e08a07385e ("lkdtm: support llvm-objcopy")
    Cc: stable@vger.kernel.org
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/8900731fbc05fb8b0de18af7133a8fc07c3c53a1.1633712176.git.christophe.leroy@csgroup.eu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4a2c924a17ebbafcd8421c3920410ebc3b15095
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Dec 5 17:27:28 2021 +0000

    iio: adc: ti-adc081c: Partial revert of removal of ACPI IDs
    
    commit c9791a94384af07592d29504004d2255dbaf8663 upstream.
    
    Unfortuanately a non standards compliant ACPI ID is known to be
    in the wild on some AAEON boards.
    
    Partly revert the removal of these IDs so that ADC081C will again
    work + add a comment to that affect for future reference.
    
    Whilst here use generic firmware properties rather than the ACPI
    specific handling previously found in this driver.
    
    Reported-by: Kunyang Fan <Kunyang_Fan@aaeon.com.tw>
    Fixes: c458b7ca3fd0 ("iio:adc:ti-adc081c: Drop ACPI ids that seem very unlikely to be official.")
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Cc: Andy Shevchenko <andy.shevchenko@gmail.com>
    Tested-by: Kunyang Fan <Kunyang_Fan@aaeon.com.tw> #UP-extremei11
    Link: https://lore.kernel.org/r/20211205172728.2826512-1-jic23@kernel.org
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 256302cb2f860c07ca7aead179fbd102631848b7
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Dec 22 11:48:43 2021 +0100

    can: softing_cs: softingcs_probe(): fix memleak on registration failure
    
    commit ced4913efb0acc844ed65cc01d091a85d83a2082 upstream.
    
    In case device registration fails during probe, the driver state and
    the embedded platform device structure needs to be freed using
    platform_device_put() to properly free all resources (e.g. the device
    name).
    
    Fixes: 0a0b7a5f7a04 ("can: add driver for Softing card")
    Link: https://lore.kernel.org/all/20211222104843.6105-1-johan@kernel.org
    Cc: stable@vger.kernel.org # 2.6.38
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa57725e2d2a8e67dd6d5d2d7786d83910a1c8a6
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Wed Dec 1 13:41:25 2021 +0100

    media: cec-pin: fix interrupt en/disable handling
    
    commit 713bdfa10b5957053811470d298def9537d9ff13 upstream.
    
    The en/disable_irq() functions keep track of the 'depth': i.e. if
    interrupts are disabled twice, then it needs to enable_irq() calls to
    enable them again. The cec-pin framework didn't take this into accound
    and could disable irqs multiple times, and it expected that a single
    enable_irq() would enable them again.
    
    Move all calls to en/disable_irq() to the kthread where it is easy
    to keep track of the current irq state and ensure that multiple
    en/disable_irq calls never happen.
    
    If interrupts where disabled twice, then they would never turn on
    again, leaving the CEC adapter in a dead state.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Fixes: 865463fc03ed (media: cec-pin: add error injection support)
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e566cacc321ce83baa0bbed45e5e651aea13527
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 13:16:41 2021 +0100

    media: stk1160: fix control-message timeouts
    
    commit 6aa6e70cdb5b863a57bad61310bf89b6617a5d2d upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Fixes: 9cb2173e6ea8 ("[media] media: Add stk1160 new driver (easycap replacement)")
    Cc: stable@vger.kernel.org      # 3.7
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a0ca711dff6029eea79664bf9d1762fe7c88b85
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 13:16:39 2021 +0100

    media: pvrusb2: fix control-message timeouts
    
    commit b82bf9b9dc305d7d3d93eab106d70dbf2171b43e upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Fixes: d855497edbfb ("V4L/DVB (4228a): pvrusb2 to kernel 2.6.18")
    Cc: stable@vger.kernel.org      # 2.6.18
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dbf430ead59f6a05a890497c13a002b94acebc6
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 13:16:35 2021 +0100

    media: redrat3: fix control-message timeouts
    
    commit 2adc965c8bfa224e11ecccf9c92fd458c4236428 upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Fixes: 2154be651b90 ("[media] redrat3: new rc-core IR transceiver device driver")
    Cc: stable@vger.kernel.org      # 3.0
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e9c120bf9566e8212c4b8c2e4a89cbbc17a0541
Author: Michael Kuron <michael.kuron@gmail.com>
Date:   Sun Sep 26 21:51:26 2021 +0100

    media: dib0700: fix undefined behavior in tuner shutdown
    
    commit f7b77ebe6d2f49c7747b2d619586d1aa33f9ea91 upstream.
    
    This fixes a problem where closing the tuner would leave it in a state
    where it would not tune to any channel when reopened. This problem was
    discovered as part of https://github.com/hselasky/webcamd/issues/16.
    
    Since adap->id is 0 or 1, this bit-shift overflows, which is undefined
    behavior. The driver still worked in practice as the overflow would in
    most environments result in 0, which rendered the line a no-op. When
    running the driver as part of webcamd however, the overflow could lead
    to 0xff due to optimizations by the compiler, which would, in the end,
    improperly shut down the tuner.
    
    The bug is a regression introduced in the commit referenced below. The
    present patch causes identical behavior to before that commit for
    adap->id equal to 0 or 1. The driver does not contain support for
    dib0700 devices with more adapters, assuming such even exist.
    
    Tests have been performed with the Xbox One Digital TV Tuner on amd64.
    Not all dib0700 devices are expected to be affected by the regression;
    this code path is only taken by those with incorrect endpoint numbers.
    
    Link: https://lore.kernel.org/linux-media/1d2fc36d94ced6f67c7cc21dcc469d5e5bdd8201.1632689033.git.mchehab+huawei@kernel.org
    
    Cc: stable@vger.kernel.org
    Fixes: 7757ddda6f4f ("[media] DiB0700: add function to change I2C-speed")
    Signed-off-by: Michael Kuron <michael.kuron@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e98ac260de6fc3e3d6aa3758142742233ca4524
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 13:16:40 2021 +0100

    media: s2255: fix control-message timeouts
    
    commit f71d272ad4e354097020a4e6b1dc6e4b59feb50f upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Use the common control-message timeout define for the five-second
    timeouts.
    
    Fixes: 38f993ad8b1f ("V4L/DVB (8125): This driver adds support for the Sensoray 2255 devices.")
    Cc: stable@vger.kernel.org      # 2.6.27
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09b0b918a69b5c2a6cee72b6a76310572661e95b
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 13:16:37 2021 +0100

    media: cpia2: fix control-message timeouts
    
    commit 10729be03327f53258cb196362015ad5c6eabe02 upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Fixes: ab33d5071de7 ("V4L/DVB (3376): Add cpia2 camera support")
    Cc: stable@vger.kernel.org      # 2.6.17
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d90833106c097ce4db5e036a66750a43d92983b4
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 13:16:38 2021 +0100

    media: em28xx: fix control-message timeouts
    
    commit d9b7e8df3aa9b8c10708aab60e72e79ac08237e4 upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Fixes: a6c2ba283565 ("[PATCH] v4l: 716: support for em28xx board family")
    Cc: stable@vger.kernel.org      # 2.6.16
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2182575c83f94daa35b7b3fd52d8c71b6227843e
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 13:16:34 2021 +0100

    media: mceusb: fix control-message timeouts
    
    commit 16394e998cbb050730536bdf7e89f5a70efbd974 upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Fixes: 66e89522aff7 ("V4L/DVB: IR: add mceusb IR receiver driver")
    Cc: stable@vger.kernel.org      # 2.6.36
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 460525acc953a6fa27bc9eb9524c0ce757e2938a
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Oct 25 13:16:36 2021 +0100

    media: flexcop-usb: fix control-message timeouts
    
    commit cd1798a387825cc4a51282f5a611ad05bb1ad75f upstream.
    
    USB control-message timeouts are specified in milliseconds and should
    specifically not vary with CONFIG_HZ.
    
    Note that the driver was multiplying some of the timeout values with HZ
    twice resulting in 3000-second timeouts with HZ=1000.
    
    Also note that two of the timeout defines are currently unused.
    
    Fixes: 2154be651b90 ("[media] redrat3: new rc-core IR transceiver device driver")
    Cc: stable@vger.kernel.org      # 3.0
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cac8a56242779d8438f10723601e721c46cf41e
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Wed Nov 3 12:28:31 2021 +0000

    media: v4l2-ioctl.c: readbuffers depends on V4L2_CAP_READWRITE
    
    commit cd9d9377ed235b294a492a094e1666178a5e78fd upstream.
    
    If V4L2_CAP_READWRITE is not set, then readbuffers must be set to 0,
    otherwise v4l2-compliance will complain.
    
    A note on the Fixes tag below: this patch does not really fix that commit,
    but it can be applied from that commit onwards. For older code there is no
    guarantee that device_caps is set, so even though this patch would apply,
    it will not work reliably.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Fixes: 049e684f2de9 (media: v4l2-dev: fix WARN_ON(!vdev->device_caps))
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1da0b1cd4212acaeeed70a39a5a622a015bbab74
Author: Mateusz Jończyk <mat.jonczyk@o2.pl>
Date:   Fri Dec 10 21:01:23 2021 +0100

    rtc: cmos: take rtc_lock while reading from CMOS
    
    commit 454f47ff464325223129b9b5b8d0b61946ec704d upstream.
    
    Reading from the CMOS involves writing to the index register and then
    reading from the data register. Therefore access to the CMOS has to be
    serialized with rtc_lock. This invocation of CMOS_READ was not
    serialized, which could cause trouble when other code is accessing CMOS
    at the same time.
    
    Use spin_lock_irq() like the rest of the function.
    
    Nothing in kernel modifies the RTC_DM_BINARY bit, so there could be a
    separate pair of spin_lock_irq() / spin_unlock_irq() before doing the
    math.
    
    Signed-off-by: Mateusz Jończyk <mat.jonczyk@o2.pl>
    Reviewed-by: Nobuhiro Iwamatsu <iwamatsu@nigauri.org>
    Cc: Alessandro Zummo <a.zummo@towertech.it>
    Cc: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20211210200131.153887-2-mat.jonczyk@o2.pl
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14f6cfe0d790cb3249f049f58761a9e787a5565c
Author: Willy Tarreau <w@1wt.eu>
Date:   Sun Oct 24 19:28:16 2021 +0200

    tools/nolibc: fix incorrect truncation of exit code
    
    commit de0244ae40ae91145faaf164a4252347607c3711 upstream.
    
    Ammar Faizi reported that our exit code handling is wrong. We truncate
    it to the lowest 8 bits but the syscall itself is expected to take a
    regular 32-bit signed integer, not an unsigned char. It's the kernel
    that later truncates it to the lowest 8 bits. The difference is visible
    in strace, where the program below used to show exit(255) instead of
    exit(-1):
    
      int main(void)
      {
            return -1;
      }
    
    This patch applies the fix to all archs. x86_64, i386, arm64, armv7 and
    mips were all tested and confirmed to work fine now. Risc-v was not
    tested but the change is trivial and exactly the same as for other archs.
    
    Reported-by: Ammar Faizi <ammar.faizi@students.amikom.ac.id>
    Cc: stable@vger.kernel.org
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e258640ba549a3a2d053a917b353889beab09f4
Author: Willy Tarreau <w@1wt.eu>
Date:   Sun Oct 24 19:28:15 2021 +0200

    tools/nolibc: i386: fix initial stack alignment
    
    commit ebbe0d8a449d183fa43b42d84fcb248e25303985 upstream.
    
    After re-checking in the spec and comparing stack offsets with glibc,
    The last pushed argument must be 16-byte aligned (i.e. aligned before the
    call) so that in the callee esp+4 is multiple of 16, so the principle is
    the 32-bit equivalent to what Ammar fixed for x86_64. It's possible that
    32-bit code using SSE2 or MMX could have been affected. In addition the
    frame pointer ought to be zero at the deepest level.
    
    Link: https://gitlab.com/x86-psABIs/i386-ABI/-/wikis/Intel386-psABI
    Cc: Ammar Faizi <ammar.faizi@students.amikom.ac.id>
    Cc: stable@vger.kernel.org
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06f7528d641bf685dd9bc55e85afbf7c3843b8de
Author: Ammar Faizi <ammar.faizi@students.amikom.ac.id>
Date:   Sun Oct 24 19:28:14 2021 +0200

    tools/nolibc: x86-64: Fix startup code bug
    
    commit 937ed91c712273131de6d2a02caafd3ee84e0c72 upstream.
    
    Before this patch, the `_start` function looks like this:
    ```
    0000000000001170 <_start>:
        1170:       pop    %rdi
        1171:       mov    %rsp,%rsi
        1174:       lea    0x8(%rsi,%rdi,8),%rdx
        1179:       and    $0xfffffffffffffff0,%rsp
        117d:       sub    $0x8,%rsp
        1181:       call   1000 <main>
        1186:       movzbq %al,%rdi
        118a:       mov    $0x3c,%rax
        1191:       syscall
        1193:       hlt
        1194:       data16 cs nopw 0x0(%rax,%rax,1)
        119f:       nop
    ```
    Note the "and" to %rsp with $-16, it makes the %rsp be 16-byte aligned,
    but then there is a "sub" with $0x8 which makes the %rsp no longer
    16-byte aligned, then it calls main. That's the bug!
    
    What actually the x86-64 System V ABI mandates is that right before the
    "call", the %rsp must be 16-byte aligned, not after the "call". So the
    "sub" with $0x8 here breaks the alignment. Remove it.
    
    An example where this rule matters is when the callee needs to align
    its stack at 16-byte for aligned move instruction, like `movdqa` and
    `movaps`. If the callee can't align its stack properly, it will result
    in segmentation fault.
    
    x86-64 System V ABI also mandates the deepest stack frame should be
    zero. Just to be safe, let's zero the %rbp on startup as the content
    of %rbp may be unspecified when the program starts. Now it looks like
    this:
    ```
    0000000000001170 <_start>:
        1170:       pop    %rdi
        1171:       mov    %rsp,%rsi
        1174:       lea    0x8(%rsi,%rdi,8),%rdx
        1179:       xor    %ebp,%ebp                # zero the %rbp
        117b:       and    $0xfffffffffffffff0,%rsp # align the %rsp
        117f:       call   1000 <main>
        1184:       movzbq %al,%rdi
        1188:       mov    $0x3c,%rax
        118f:       syscall
        1191:       hlt
        1192:       data16 cs nopw 0x0(%rax,%rax,1)
        119d:       nopl   (%rax)
    ```
    
    Cc: Bedirhan KURT <windowz414@gnuweeb.org>
    Cc: Louvian Lyndal <louvianlyndal@gmail.com>
    Reported-by: Peter Cordes <peter@cordes.ca>
    Signed-off-by: Ammar Faizi <ammar.faizi@students.amikom.ac.id>
    [wt: I did this on purpose due to a misunderstanding of the spec, other
         archs will thus have to be rechecked, particularly i386]
    Cc: stable@vger.kernel.org
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98259dd54e8e0b22400bfe858569423ee4f031f3
Author: Lucas De Marchi <lucas.demarchi@intel.com>
Date:   Thu Jan 13 16:28:39 2022 -0800

    x86/gpu: Reserve stolen memory for first integrated Intel GPU
    
    commit 9c494ca4d3a535f9ca11ad6af1813983c1c6cbdd upstream.
    
    "Stolen memory" is memory set aside for use by an Intel integrated GPU.
    The intel_graphics_quirks() early quirk reserves this memory when it is
    called for a GPU that appears in the intel_early_ids[] table of integrated
    GPUs.
    
    Previously intel_graphics_quirks() was marked as QFLAG_APPLY_ONCE, so it
    was called only for the first Intel GPU found.  If a discrete GPU happened
    to be enumerated first, intel_graphics_quirks() was called for it but not
    for any integrated GPU found later.  Therefore, stolen memory for such an
    integrated GPU was never reserved.
    
    For example, this problem occurs in this Alderlake-P (integrated) + DG2
    (discrete) topology where the DG2 is found first, but stolen memory is
    associated with the integrated GPU:
    
      - 00:01.0 Bridge
        `- 03:00.0 DG2 discrete GPU
      - 00:02.0 Integrated GPU (with stolen memory)
    
    Remove the QFLAG_APPLY_ONCE flag and call intel_graphics_quirks() for every
    Intel GPU.  Reserve stolen memory for the first GPU that appears in
    intel_early_ids[].
    
    [bhelgaas: commit log, add code comment, squash in
    https://lore.kernel.org/r/20220118190558.2ququ4vdfjuahicm@ldmartin-desk2]
    Link: https://lore.kernel.org/r/20220114002843.2083382-1-lucas.demarchi@intel.com
    Signed-off-by: Lucas De Marchi <lucas.demarchi@intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2a17dcad56e0252520eaa4eedb8572df9784c85
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Sat Oct 16 14:22:26 2021 +0100

    mtd: rawnand: davinci: Rewrite function description
    
    commit 0697f8441faad552fbeb02d74454b5e7bcc956a2 upstream.
    
    The original comment that describes the function
    nand_davinci_read_page_hwecc_oob_first() is very obscure and it is hard
    to understand what it is for.
    
    Cc: <stable@vger.kernel.org> # v5.2
    Fixes: a0ac778eb82c ("mtd: rawnand: ingenic: Add support for the JZ4740")
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20211016132228.40254-3-paul@crapouillou.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8933138a6660388ccb915b4094dbd1caf2743345
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Sat Oct 16 14:22:25 2021 +0100

    mtd: rawnand: davinci: Avoid duplicated page read
    
    commit 9c9d709965385de5a99f84b14bd5860e1541729e upstream.
    
    The function nand_davinci_read_page_hwecc_oob_first() first reads the
    OOB data, extracts the ECC information, programs the ECC hardware before
    reading the actual data in a loop.
    
    Right after the OOB data was read, it called nand_read_page_op() to
    reset the read cursor to the beginning of the page. This caused the
    first page to be read twice: in that call, and later in the loop.
    
    Address that issue by changing the call to nand_read_page_op() to
    nand_change_read_column_op(), which will only reset the read cursor.
    
    Cc: <stable@vger.kernel.org> # v5.2
    Fixes: a0ac778eb82c ("mtd: rawnand: ingenic: Add support for the JZ4740")
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20211016132228.40254-2-paul@crapouillou.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 677764634b42cf1d25ea3318480acadbd429ec73
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Sat Oct 16 14:22:24 2021 +0100

    mtd: rawnand: davinci: Don't calculate ECC when reading page
    
    commit 71e89591502d737c10db2bd4d8fcfaa352552afb upstream.
    
    The function nand_davinci_read_page_hwecc_oob_first() does read the ECC
    data from the OOB area. Therefore it does not need to calculate the ECC
    as it is already available.
    
    Cc: <stable@vger.kernel.org> # v5.2
    Fixes: a0ac778eb82c ("mtd: rawnand: ingenic: Add support for the JZ4740")
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20211016132228.40254-1-paul@crapouillou.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8a607b0049d8e5dc0c6b52e9c2b0490e0fc8716
Author: Andreas Oetken <ennoerlangen@gmail.com>
Date:   Tue Nov 2 18:26:04 2021 +0100

    mtd: Fixed breaking list in __mtd_del_partition.
    
    commit 2966daf7d253d9904b337b040dd7a43472858b8a upstream.
    
    Not the child partition should be removed from the partition list
    but the partition itself. Otherwise the partition list gets broken
    and any subsequent remove operations leads to a kernel panic.
    
    Fixes: 46b5889cc2c5 ("mtd: implement proper partition handling")
    Signed-off-by: Andreas Oetken <andreas.oetken@siemens-energy.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20211102172604.2921065-1-andreas.oetken@siemens-energy.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff10cd7bb295bfa9e497f83529479a04f356949f
Author: Stefan Riedmueller <s.riedmueller@phytec.de>
Date:   Tue Nov 2 21:20:21 2021 +0100

    mtd: rawnand: gpmi: Remove explicit default gpmi clock setting for i.MX6
    
    commit aa1baa0e6c1aa4872e481dce4fc7fd6f3dd8496b upstream.
    
    There is no need to explicitly set the default gpmi clock rate during
    boot for the i.MX 6 since this is done during nand_detect anyway.
    
    Signed-off-by: Stefan Riedmueller <s.riedmueller@phytec.de>
    Cc: stable@vger.kernel.org
    Acked-by: Han Xu <han.xu@nxp.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20211102202022.15551-1-ceggers@arri.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 538a5e208e7d29e8b3cb1d79bbb757e8c763b680
Author: Christian Eggers <ceggers@arri.de>
Date:   Tue Nov 2 21:20:22 2021 +0100

    mtd: rawnand: gpmi: Add ERR007117 protection for nfc_apply_timings
    
    commit f53d4c109a666bf1a4883b45d546fba079258717 upstream.
    
    gpmi_io clock needs to be gated off when changing the parent/dividers of
    enfc_clk_root (i.MX6Q/i.MX6UL) respectively qspi2_clk_root (i.MX6SX).
    Otherwise this rate change can lead to an unresponsive GPMI core which
    results in DMA timeouts and failed driver probe:
    
    [    4.072318] gpmi-nand 112000.gpmi-nand: DMA timeout, last DMA
    ...
    [    4.370355] gpmi-nand 112000.gpmi-nand: Chip: 0, Error -110
    ...
    [    4.375988] gpmi-nand 112000.gpmi-nand: Chip: 0, Error -22
    [    4.381524] gpmi-nand 112000.gpmi-nand: Error in ECC-based read: -22
    [    4.387988] gpmi-nand 112000.gpmi-nand: Chip: 0, Error -22
    [    4.393535] gpmi-nand 112000.gpmi-nand: Chip: 0, Error -22
    ...
    
    Other than stated in i.MX 6 erratum ERR007117, it should be sufficient
    to gate only gpmi_io because all other bch/nand clocks are derived from
    different clock roots.
    
    The i.MX6 reference manuals state that changing clock muxers can cause
    glitches but are silent about changing dividers. But tests showed that
    these glitches can definitely happen on i.MX6ULL. For i.MX7D/8MM in turn,
    the manual guarantees that no glitches can happen when changing
    dividers.
    
    Co-developed-by: Stefan Riedmueller <s.riedmueller@phytec.de>
    Signed-off-by: Stefan Riedmueller <s.riedmueller@phytec.de>
    Signed-off-by: Christian Eggers <ceggers@arri.de>
    Cc: stable@vger.kernel.org
    Acked-by: Han Xu <han.xu@nxp.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20211102202022.15551-2-ceggers@arri.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 777a700ccfa615075f564187c743577c8f009f7e
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Wed Jan 19 08:48:16 2022 +0100

    nfc: llcp: fix NULL error pointer dereference on sendmsg() after failed bind()
    
    commit dded08927ca3c31a5c37f8e7f95fe98770475dd4 upstream.
    
    Syzbot detected a NULL pointer dereference of nfc_llcp_sock->dev pointer
    (which is a 'struct nfc_dev *') with calls to llcp_sock_sendmsg() after
    a failed llcp_sock_bind(). The message being sent is a SOCK_DGRAM.
    
    KASAN report:
    
      BUG: KASAN: null-ptr-deref in nfc_alloc_send_skb+0x2d/0xc0
      Read of size 4 at addr 00000000000005c8 by task llcp_sock_nfc_a/899
    
      CPU: 5 PID: 899 Comm: llcp_sock_nfc_a Not tainted 5.16.0-rc6-next-20211224-00001-gc6437fbf18b0 #125
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014
      Call Trace:
       <TASK>
       dump_stack_lvl+0x45/0x59
       ? nfc_alloc_send_skb+0x2d/0xc0
       __kasan_report.cold+0x117/0x11c
       ? mark_lock+0x480/0x4f0
       ? nfc_alloc_send_skb+0x2d/0xc0
       kasan_report+0x38/0x50
       nfc_alloc_send_skb+0x2d/0xc0
       nfc_llcp_send_ui_frame+0x18c/0x2a0
       ? nfc_llcp_send_i_frame+0x230/0x230
       ? __local_bh_enable_ip+0x86/0xe0
       ? llcp_sock_connect+0x470/0x470
       ? llcp_sock_connect+0x470/0x470
       sock_sendmsg+0x8e/0xa0
       ____sys_sendmsg+0x253/0x3f0
       ...
    
    The issue was visible only with multiple simultaneous calls to bind() and
    sendmsg(), which resulted in most of the bind() calls to fail.  The
    bind() was failing on checking if there is available WKS/SDP/SAP
    (respective bit in 'struct nfc_llcp_local' fields).  When there was no
    available WKS/SDP/SAP, the bind returned error but the sendmsg() to such
    socket was able to trigger mentioned NULL pointer dereference of
    nfc_llcp_sock->dev.
    
    The code looks simply racy and currently it protects several paths
    against race with checks for (!nfc_llcp_sock->local) which is NULL-ified
    in error paths of bind().  The llcp_sock_sendmsg() did not have such
    check but called function nfc_llcp_send_ui_frame() had, although not
    protected with lock_sock().
    
    Therefore the race could look like (same socket is used all the time):
      CPU0                                     CPU1
      ====                                     ====
      llcp_sock_bind()
      - lock_sock()
        - success
      - release_sock()
      - return 0
                                               llcp_sock_sendmsg()
                                               - lock_sock()
                                               - release_sock()
      llcp_sock_bind(), same socket
      - lock_sock()
        - error
                                               - nfc_llcp_send_ui_frame()
                                                 - if (!llcp_sock->local)
        - llcp_sock->local = NULL
        - nfc_put_device(dev)
                                                 - dereference llcp_sock->dev
      - release_sock()
      - return -ERRNO
    
    The nfc_llcp_send_ui_frame() checked llcp_sock->local outside of the
    lock, which is racy and ineffective check.  Instead, its caller
    llcp_sock_sendmsg(), should perform the check inside lock_sock().
    
    Reported-and-tested-by: syzbot+7f23bcddf626e0593a39@syzkaller.appspotmail.com
    Fixes: b874dec21d1c ("NFC: Implement LLCP connection less Tx path")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08283b076f4e889df3e46849bcdf3d388c2d6257
Author: Chao Yu <chao@kernel.org>
Date:   Mon Dec 6 22:44:21 2021 +0800

    f2fs: fix to do sanity check in is_alive()
    
    commit 77900c45ee5cd5da63bd4d818a41dbdf367e81cd upstream.
    
    In fuzzed image, SSA table may indicate that a data block belongs to
    invalid node, which node ID is out-of-range (0, 1, 2 or max_nid), in
    order to avoid migrating inconsistent data in such corrupted image,
    let's do sanity check anyway before data block migration.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57cfc965e3754868b0686d2700d9ea869dee48ea
Author: Jason Gerecke <killertofu@gmail.com>
Date:   Tue Jan 18 14:38:41 2022 -0800

    HID: wacom: Avoid using stale array indicies to read contact count
    
    commit 20f3cf5f860f9f267a6a6e5642d3d0525edb1814 upstream.
    
    If we ever see a touch report with contact count data we initialize
    several variables used to read the contact count in the pre-report
    phase. These variables are never reset if we process a report which
    doesn't contain a contact count, however. This can cause the pre-
    report function to trigger a read of arbitrary memory (e.g. NULL
    if we're lucky) and potentially crash the driver.
    
    This commit restores resetting of the variables back to default
    "none" values that were used prior to the commit mentioned
    below.
    
    Link: https://github.com/linuxwacom/input-wacom/issues/276
    Fixes: 003f50ab673c (HID: wacom: Update last_slot_field during pre_report phase)
    CC: stable@vger.kernel.org
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Reviewed-by: Ping Cheng <ping.cheng@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7fd22c99bbed1889fd9f95adf26cddad5705e16e
Author: Jason Gerecke <killertofu@gmail.com>
Date:   Tue Jan 18 14:37:56 2022 -0800

    HID: wacom: Ignore the confidence flag when a touch is removed
    
    commit df03e9bd6d4806619b4cdc91a3d7695818a8e2b7 upstream.
    
    AES hardware may internally re-classify a contact that it thought was
    intentional as a palm. Intentional contacts are reported as "down" with
    the confidence bit set. When this re-classification occurs, however, the
    state transitions to "up" with the confidence bit cleared. This kind of
    transition appears to be legal according to Microsoft docs, but we do
    not handle it correctly. Because the confidence bit is clear, we don't
    call `wacom_wac_finger_slot` and update userspace. This causes hung
    touches that confuse userspace and interfere with pen arbitration.
    
    This commit adds a special case to ignore the confidence flag if a contact
    is reported as removed. This ensures we do not leave a hung touch if one
    of these re-classification events occured. Ideally we'd have some way to
    also let userspace know that the touch has been re-classified as a palm
    and needs to be canceled, but that's not possible right now :)
    
    Link: https://github.com/linuxwacom/input-wacom/issues/288
    Fixes: 7fb0413baa7f (HID: wacom: Use "Confidence" flag to prevent reporting invalid contacts)
    CC: stable@vger.kernel.org
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Reviewed-by: Ping Cheng <ping.cheng@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a4800e0f6a5ccdbe785ff4a377190e71de21126
Author: Jason Gerecke <killertofu@gmail.com>
Date:   Tue Jan 18 14:37:55 2022 -0800

    HID: wacom: Reset expected and received contact counts at the same time
    
    commit 546e41ac994cc185ef3de610ca849a294b5df3ba upstream.
    
    These two values go hand-in-hand and must be valid for the driver to
    behave correctly. We are currently lazy about updating the values and
    rely on the "expected" code flow to take care of making sure they're
    valid at the point they're needed. The "expected" flow changed somewhat
    with commit f8b6a74719b5 ("HID: wacom: generic: Support multiple tools
    per report"), however. This led to problems with the DTH-2452 due (in
    part) to *all* contacts being fully processed -- even those past the
    expected contact count. Specifically, the received count gets reset to
    0 once all expected fingers are processed, but not the expected count.
    The rest of the contacts in the report are then *also* processed since
    now the driver thinks we've only processed 0 of N expected contacts.
    
    Later commits such as 7fb0413baa7f (HID: wacom: Use "Confidence" flag to
    prevent reporting invalid contacts) worked around the DTH-2452 issue by
    skipping the invalid contacts at the end of the report, but this is not
    a complete fix. The confidence flag cannot be relied on when a contact
    is removed (see the following patch), and dealing with that condition
    re-introduces the DTH-2452 issue unless we also address this contact
    count laziness. By resetting expected and received counts at the same
    time we ensure the driver understands that there are 0 more contacts
    expected in the report. Similarly, we also make sure to reset the
    received count if for some reason we're out of sync in the pre-report
    phase.
    
    Link: https://github.com/linuxwacom/input-wacom/issues/288
    Fixes: f8b6a74719b5 ("HID: wacom: generic: Support multiple tools per report")
    CC: stable@vger.kernel.org
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Reviewed-by: Ping Cheng <ping.cheng@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2e39d5df028a3cbb61b2e1f6045c4f99a9cf70b
Author: Jann Horn <jannh@google.com>
Date:   Fri Jan 14 14:33:30 2022 +0100

    HID: uhid: Fix worker destroying device without any protection
    
    commit 4ea5763fb79ed89b3bdad455ebf3f33416a81624 upstream.
    
    uhid has to run hid_add_device() from workqueue context while allowing
    parallel use of the userspace API (which is protected with ->devlock).
    But hid_add_device() can fail. Currently, that is handled by immediately
    destroying the associated HID device, without using ->devlock - but if
    there are concurrent requests from userspace, that's wrong and leads to
    NULL dereferences and/or memory corruption (via use-after-free).
    
    Fix it by leaving the HID device as-is in the worker. We can clean it up
    later, either in the UHID_DESTROY command handler or in the ->release()
    handler.
    
    Cc: stable@vger.kernel.org
    Fixes: 67f8ecc550b5 ("HID: uhid: fix timeout when probe races with IO")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa1346113c752783f585d1d08627cfa38aa14e47
Author: Marcelo Tosatti <mtosatti@redhat.com>
Date:   Tue Jan 18 04:34:43 2022 -0500

    KVM: VMX: switch blocked_vcpu_on_cpu_lock to raw spinlock
    
    commit 5f02ef741a785678930f3ff0a8b6b2b0ef1bb402 upstream.
    
    blocked_vcpu_on_cpu_lock is taken from hard interrupt context
    (pi_wakeup_handler), therefore it cannot sleep.
    
    Switch it to a raw spinlock.
    
    Fixes:
    
    [41297.066254] BUG: scheduling while atomic: CPU 0/KVM/635218/0x00010001
    [41297.066323] Preemption disabled at:
    [41297.066324] [<ffffffff902ee47f>] irq_enter_rcu+0xf/0x60
    [41297.066339] Call Trace:
    [41297.066342]  <IRQ>
    [41297.066346]  dump_stack_lvl+0x34/0x44
    [41297.066353]  ? irq_enter_rcu+0xf/0x60
    [41297.066356]  __schedule_bug.cold+0x7d/0x8b
    [41297.066361]  __schedule+0x439/0x5b0
    [41297.066365]  ? task_blocks_on_rt_mutex.constprop.0.isra.0+0x1b0/0x440
    [41297.066369]  schedule_rtlock+0x1e/0x40
    [41297.066371]  rtlock_slowlock_locked+0xf1/0x260
    [41297.066374]  rt_spin_lock+0x3b/0x60
    [41297.066378]  pi_wakeup_handler+0x31/0x90 [kvm_intel]
    [41297.066388]  sysvec_kvm_posted_intr_wakeup_ipi+0x9d/0xd0
    [41297.066392]  </IRQ>
    [41297.066392]  asm_sysvec_kvm_posted_intr_wakeup_ipi+0x12/0x20
    ...
    
    Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
