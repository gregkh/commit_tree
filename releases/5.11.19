commit 44a3370d47be9adf7532431a6d69583bb350ee57
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri May 7 11:11:25 2021 +0200

    Linux 5.11.19
    
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Link: https://lore.kernel.org/r/20210505112326.672439569@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6ce63431491c33bccb92f06de691d5b41df6135
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Thu Mar 4 21:30:03 2021 -0400

    vfio: Depend on MMU
    
    commit b2b12db53507bc97d96f6b7cb279e831e5eafb00 upstream.
    
    VFIO_IOMMU_TYPE1 does not compile with !MMU:
    
    ../drivers/vfio/vfio_iommu_type1.c: In function 'follow_fault_pfn':
    ../drivers/vfio/vfio_iommu_type1.c:536:22: error: implicit declaration of function 'pte_write'; did you mean 'vfs_write'? [-Werror=implicit-function-declaration]
    
    So require it.
    
    Suggested-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Message-Id: <0-v1-02cb5500df6e+78-vfio_no_mmu_jgg@nvidia.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5809ca4c311b71bfaba6d13f4e39eab0557895e
Author: Ondrej Mosnacek <omosnace@redhat.com>
Date:   Wed Feb 24 22:56:28 2021 +0100

    perf/core: Fix unconditional security_locked_down() call
    
    commit 08ef1af4de5fe7de9c6d69f1e22e51b66e385d9b upstream.
    
    Currently, the lockdown state is queried unconditionally, even though
    its result is used only if the PERF_SAMPLE_REGS_INTR bit is set in
    attr.sample_type. While that doesn't matter in case of the Lockdown LSM,
    it causes trouble with the SELinux's lockdown hook implementation.
    
    SELinux implements the locked_down hook with a check whether the current
    task's type has the corresponding "lockdown" class permission
    ("integrity" or "confidentiality") allowed in the policy. This means
    that calling the hook when the access control decision would be ignored
    generates a bogus permission check and audit record.
    
    Fix this by checking sample_type first and only calling the hook when
    its result would be honored.
    
    Fixes: b0c8fdc7fdb7 ("lockdown: Lock down perf when in confidentiality mode")
    Signed-off-by: Ondrej Mosnacek <omosnace@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Paul Moore <paul@paul-moore.com>
    Link: https://lkml.kernel.org/r/20210224215628.192519-1-omosnace@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 495827b0edba82274b668f2e594d7d2e808270b9
Author: Mark Pearson <markpearson@lenovo.com>
Date:   Wed Apr 7 17:20:15 2021 -0400

    platform/x86: thinkpad_acpi: Correct thermal sensor allocation
    
    commit 6759e18e5cd8745a5dfc5726e4a3db5281ec1639 upstream.
    
    On recent Thinkpad platforms it was reported that temp sensor 11 was
    always incorrectly displaying 66C. It turns out the reason for this is
    that this location in EC RAM is not a temperature sensor but is the
    power supply ID (offset 0xC2).
    
    Based on feedback from the Lenovo firmware team the EC RAM version can
    be determined and for the current version (3) only the 0x78 to 0x7F
    range is used for temp sensors. I don't have any details for earlier
    versions so I have left the implementation unaltered there.
    
    Note - in this block only 0x78 and 0x79 are officially designated (CPU &
    GPU sensors). The use of the other locations in the block will vary from
    platform to platform; but the existing logic to detect a sensor presence
    holds.
    
    Signed-off-by: Mark Pearson <markpearson@lenovo.com>
    Link: https://lore.kernel.org/r/20210407212015.298222-1-markpearson@lenovo.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bf0f6df2e73f5ad7ff804ed79ff93dbec949515
Author: Chris Chiu <chris.chiu@canonical.com>
Date:   Wed Apr 21 01:46:51 2021 +0800

    USB: Add reset-resume quirk for WD19's Realtek Hub
    
    commit ca91fd8c7643d93bfc18a6fec1a0d3972a46a18a upstream.
    
    Realtek Hub (0bda:5487) in Dell Dock WD19 sometimes fails to work
    after the system resumes from suspend with remote wakeup enabled
    device connected:
    [ 1947.640907] hub 5-2.3:1.0: hub_ext_port_status failed (err = -71)
    [ 1947.641208] usb 5-2.3-port5: cannot disable (err = -71)
    [ 1947.641401] hub 5-2.3:1.0: hub_ext_port_status failed (err = -71)
    [ 1947.641450] usb 5-2.3-port4: cannot reset (err = -71)
    
    Information of this hub:
    T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 10 Spd=480  MxCh= 5
    D:  Ver= 2.10 Cls=09(hub  ) Sub=00 Prot=02 MxPS=64 #Cfgs=  1
    P:  Vendor=0bda ProdID=5487 Rev= 1.47
    S:  Manufacturer=Dell Inc.
    S:  Product=Dell dock
    C:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA
    I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=01 Driver=hub
    E:  Ad=81(I) Atr=03(Int.) MxPS=   1 Ivl=256ms
    I:* If#= 0 Alt= 1 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=02 Driver=hub
    E:  Ad=81(I) Atr=03(Int.) MxPS=   1 Ivl=256ms
    
    The failure results from the ETIMEDOUT by chance when turning on
    the suspend feature for the specified port of the hub. The port
    seems to be in an unknown state so the hub_activate during resume
    fails the hub_port_status, then the hub will fail to work.
    
    The quirky hub needs the reset-resume quirk to function correctly.
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Chris Chiu <chris.chiu@canonical.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210420174651.6202-1-chris.chiu@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e84d44206f8bd5064a6588ec62a35760c01dc60
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Mon Apr 12 21:54:53 2021 +0800

    USB: Add LPM quirk for Lenovo ThinkPad USB-C Dock Gen2 Ethernet
    
    commit 8f23fe35ff1e5491b4d279323a8209a31f03ae65 upstream.
    
    This is another branded 8153 device that doesn't work well with LPM
    enabled:
    [ 400.597506] r8152 5-1.1:1.0 enx482ae3a2a6f0: Tx status -71
    
    So disable LPM to resolve the issue.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    BugLink: https://bugs.launchpad.net/bugs/1922651
    Link: https://lore.kernel.org/r/20210412135455.791971-1-kai.heng.feng@canonical.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79c42099a9bcbccb26e1135b7bd7aa88e84eeaf3
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Apr 26 08:33:49 2021 +0200

    ALSA: usb-audio: Fix implicit sync clearance at stopping stream
    
    commit 988cc17552606be67a956cf8cd6ff504cfc5d643 upstream.
    
    The recent endpoint management change for implicit feedback mode added
    a clearance of ep->sync_sink (formerly ep->sync_slave) pointer at
    snd_usb_endpoint_stop() to assure no leftover for the feedback from
    the already stopped capture stream.  This turned out to cause a
    regression, however, when full-duplex streams were running and only a
    capture was stopped.  Because of the above clearance of ep->sync_sink
    pointer, no more feedback is done, hence the playback will stall.
    
    This patch fixes the ep->sync_sink clearance to be done only after all
    endpoints are released, for addressing the regression.
    
    Reported-and-tested-by: Lucas Endres <jaffa225man@gmail.com>
    Fixes: bf6313a0ff76 ("ALSA: usb-audio: Refactor endpoint management")
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210426063349.18601-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60f3ce18f39741cf4c95491bdc7281be346ac5ac
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 7 16:45:49 2021 +0200

    ALSA: usb-audio: Add MIDI quirk for Vox ToneLab EX
    
    commit 64f40f9be14106e7df0098c427cb60be645bddb7 upstream.
    
    ToneLab EX guitar pedal device requires the same quirk like ToneLab ST
    for supporting the MIDI.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=212593
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210407144549.1530-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0071f9c05e1de561a776d56aea0971bc7fbe645a
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Mon Apr 12 12:00:37 2021 +0200

    ovl: allow upperdir inside lowerdir
    
    commit 708fa01597fa002599756bf56a96d0de1677375c upstream.
    
    Commit 146d62e5a586 ("ovl: detect overlapping layers") made sure we don't
    have overlapping layers, but it also broke the arguably valid use case of
    
     mount -olowerdir=/,upperdir=/subdir,..
    
    where upperdir overlaps lowerdir on the same filesystem.  This has been
    causing regressions.
    
    Revert the check, but only for the specific case where upperdir and/or
    workdir are subdirectories of lowerdir.  Any other overlap (e.g. lowerdir
    is subdirectory of upperdir, etc) case is crazy, so leave the check in
    place for those.
    
    Overlaps are detected at lookup time too, so reverting the mount time check
    should be safe.
    
    Fixes: 146d62e5a586 ("ovl: detect overlapping layers")
    Cc: <stable@vger.kernel.org> # v5.2
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf3e3330bc5719fa9d658e3e2f596bde89344a94
Author: Mickaël Salaün <mic@linux.microsoft.com>
Date:   Mon Mar 29 18:49:07 2021 +0200

    ovl: fix leaked dentry
    
    commit eaab1d45cdb4bb0c846bd23c3d666d5b90af7b41 upstream.
    
    Since commit 6815f479ca90 ("ovl: use only uppermetacopy state in
    ovl_lookup()"), overlayfs doesn't put temporary dentry when there is a
    metacopy error, which leads to dentry leaks when shutting down the related
    superblock:
    
      overlayfs: refusing to follow metacopy origin for (/file0)
      ...
      BUG: Dentry (____ptrval____){i=3f33,n=file3}  still in use (1) [unmount of overlay overlay]
      ...
      WARNING: CPU: 1 PID: 432 at umount_check.cold+0x107/0x14d
      CPU: 1 PID: 432 Comm: unmount-overlay Not tainted 5.12.0-rc5 #1
      ...
      RIP: 0010:umount_check.cold+0x107/0x14d
      ...
      Call Trace:
       d_walk+0x28c/0x950
       ? dentry_lru_isolate+0x2b0/0x2b0
       ? __kasan_slab_free+0x12/0x20
       do_one_tree+0x33/0x60
       shrink_dcache_for_umount+0x78/0x1d0
       generic_shutdown_super+0x70/0x440
       kill_anon_super+0x3e/0x70
       deactivate_locked_super+0xc4/0x160
       deactivate_super+0xfa/0x140
       cleanup_mnt+0x22e/0x370
       __cleanup_mnt+0x1a/0x30
       task_work_run+0x139/0x210
       do_exit+0xb0c/0x2820
       ? __kasan_check_read+0x1d/0x30
       ? find_held_lock+0x35/0x160
       ? lock_release+0x1b6/0x660
       ? mm_update_next_owner+0xa20/0xa20
       ? reacquire_held_locks+0x3f0/0x3f0
       ? __sanitizer_cov_trace_const_cmp4+0x22/0x30
       do_group_exit+0x135/0x380
       __do_sys_exit_group.isra.0+0x20/0x20
       __x64_sys_exit_group+0x3c/0x50
       do_syscall_64+0x45/0x70
       entry_SYSCALL_64_after_hwframe+0x44/0xae
      ...
      VFS: Busy inodes after unmount of overlay. Self-destruct in 5 seconds.  Have a nice day...
    
    This fix has been tested with a syzkaller reproducer.
    
    Cc: Amir Goldstein <amir73il@gmail.com>
    Cc: <stable@vger.kernel.org> # v5.8+
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Fixes: 6815f479ca90 ("ovl: use only uppermetacopy state in ovl_lookup()")
    Signed-off-by: Mickaël Salaün <mic@linux.microsoft.com>
    Link: https://lore.kernel.org/r/20210329164907.2133175-1-mic@digikod.net
    Reviewed-by: Vivek Goyal <vgoyal@redhat.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 035d408d136852ef6faeb7c17ade5b6b7d8115a4
Author: Jianxiong Gao <jxgao@google.com>
Date:   Thu Apr 29 17:33:15 2021 +0000

    nvme-pci: set min_align_mask
    
    commit: 3d2d861eb03e8ee96dc430a54361c900cbe28afd
    
    The PRP addressing scheme requires all PRP entries except for the
    first one to have a zero offset into the NVMe controller pages (which
    can be different from the Linux PAGE_SIZE).  Use the min_align_mask
    device parameter to ensure that swiotlb does not change the address
    of the buffer modulo the device page size to ensure that the PRPs
    won't be malformed.
    
    Signed-off-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Tested-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd1feb280dfa47f9d141cbe32af5d3d9e99dcf5a
Author: Jianxiong Gao <jxgao@google.com>
Date:   Thu Apr 29 17:33:14 2021 +0000

    swiotlb: respect min_align_mask
    
    commit: 1f221a0d0dbf0e48ef3a9c62871281d6a7819f05
    
    swiotlb: respect min_align_mask
    
    Respect the min_align_mask in struct device_dma_parameters in swiotlb.
    
    There are two parts to it:
     1) for the lower bits of the alignment inside the io tlb slot, just
        extent the size of the allocation and leave the start of the slot
         empty
     2) for the high bits ensure we find a slot that matches the high bits
        of the alignment to avoid wasting too much memory
    
    Based on an earlier patch from Jianxiong Gao <jxgao@google.com>.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Jianxiong Gao <jxgao@google.com>
    Tested-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 825b7efe7129844876d2a3ca89489f7013d1f89e
Author: Jianxiong Gao <jxgao@google.com>
Date:   Thu Apr 29 17:33:13 2021 +0000

    swiotlb: don't modify orig_addr in swiotlb_tbl_sync_single
    
    commit: 16fc3cef33a04632ab6b31758abdd77563a20759
    
    swiotlb_tbl_map_single currently nevers sets a tlb_addr that is not
    aligned to the tlb bucket size.  But we're going to add such a case
    soon, for which this adjustment would be bogus.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Jianxiong Gao <jxgao@google.com>
    Tested-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e32c3dbe009f52f1530557450261d2d94a372de5
Author: Jianxiong Gao <jxgao@google.com>
Date:   Thu Apr 29 17:33:12 2021 +0000

    swiotlb: refactor swiotlb_tbl_map_single
    
    commit: 26a7e094783d482f3e125f09945a5bb1d867b2e6
    
    Split out a bunch of a self-contained helpers to make the function easier
    to follow.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Jianxiong Gao <jxgao@google.com>
    Tested-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0990eac80ba59e26c41e3d3c8acec18b93b41af8
Author: Jianxiong Gao <jxgao@google.com>
Date:   Thu Apr 29 17:33:11 2021 +0000

    swiotlb: clean up swiotlb_tbl_unmap_single
    
    commit: ca10d0f8e530600ec63c603dbace2c30927d70b7
    
    swiotlb: clean up swiotlb_tbl_unmap_single
    
    Remove a layer of pointless indentation, replace a hard to follow
    ternary expression with a plain if/else.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Jianxiong Gao <jxgao@google.com>
    Tested-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 768cb8a9fcd78f6fe1267bb16584d9997455ed6f
Author: Jianxiong Gao <jxgao@google.com>
Date:   Thu Apr 29 17:33:10 2021 +0000

    swiotlb: factor out a nr_slots helper
    
    commit: c32a77fd18780a5192dfb6eec69f239faebf28fd
    
    Factor out a helper to find the number of slots for a given size.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Jianxiong Gao <jxgao@google.com>
    Tested-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d6158db1ecf12dd574c0560891b1573e7e2fda5
Author: Jianxiong Gao <jxgao@google.com>
Date:   Thu Apr 29 17:33:09 2021 +0000

    swiotlb: factor out an io_tlb_offset helper
    
    commit: c7fbeca757fe74135d8b6a4c8ddaef76f5775d68
    
    Replace the very genericly named OFFSET macro with a little inline
    helper that hardcodes the alignment to the only value ever passed.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Jianxiong Gao <jxgao@google.com>
    Tested-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a612f79954e06f7872b77cbe7c30f111af755c6
Author: Jianxiong Gao <jxgao@google.com>
Date:   Thu Apr 29 17:33:08 2021 +0000

    swiotlb: add a IO_TLB_SIZE define
    
    commit: b5d7ccb7aac3895c2138fe0980a109116ce15eff
    
    Add a new IO_TLB_SIZE define instead open coding it using
    IO_TLB_SHIFT all over.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Jianxiong Gao <jxgao@google.com>
    Tested-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5bf55778da03d627000d4a1f21fba3943fdeb0c
Author: Jianxiong Gao <jxgao@google.com>
Date:   Thu Apr 29 17:33:07 2021 +0000

    driver core: add a min_align_mask field to struct device_dma_parameters
    
    commit: 36950f2da1ea4cb683be174f6f581e25b2d33e71
    
    Some devices rely on the address offset in a page to function
    correctly (NVMe driver as an example). These devices may use
    a different page size than the Linux kernel. The address offset
    has to be preserved upon mapping, and in order to do so, we
    need to record the page_offset_mask first.
    
    Signed-off-by: Jianxiong Gao <jxgao@google.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c734a2e2829c586ecd1d6916a0ac5629770d7c6
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Fri Apr 23 14:29:03 2021 -0700

    tools/cgroup/slabinfo.py: updated to work on current kernel
    
    [ Upstream commit 1974c45dd7745e999b9387be3d8fdcb27a5b1721 ]
    
    slabinfo.py script does not work with actual kernel version.
    
    First, it was unable to recognise SLUB susbsytem, and when I specified
    it manually it failed again with
    
      AttributeError: 'struct page' has no member 'obj_cgroups'
    
    .. and then again with
    
      File "tools/cgroup/memcg_slabinfo.py", line 221, in main
        memcg.kmem_caches.address_of_(),
      AttributeError: 'struct mem_cgroup' has no member 'kmem_caches'
    
    Link: https://lkml.kernel.org/r/cec1a75e-43b4-3d64-2084-d9f98fda037f@virtuozzo.com
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Tested-by: Roman Gushchin <guro@fb.com>
    Acked-by: Roman Gushchin <guro@fb.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6c687a18d84ff2ec5a2d3ab3c9b3d334fc5a3e8
Author: Thomas Richter <tmricht@linux.ibm.com>
Date:   Wed Apr 21 14:04:00 2021 +0200

    perf ftrace: Fix access to pid in array when setting a pid filter
    
    [ Upstream commit 671b60cb6a897a5b3832fe57657152f2c3995e25 ]
    
    Command 'perf ftrace -v -- ls' fails in s390 (at least 5.12.0rc6).
    
    The root cause is a missing pointer dereference which causes an
    array element address to be used as PID.
    
    Fix this by extracting the PID.
    
    Output before:
      # ./perf ftrace -v -- ls
      function_graph tracer is used
      write '-263732416' to tracing/set_ftrace_pid failed: Invalid argument
      failed to set ftrace pid
      #
    
    Output after:
       ./perf ftrace -v -- ls
       function_graph tracer is used
       # tracer: function_graph
       #
       # CPU  DURATION                  FUNCTION CALLS
       # |     |   |                     |   |   |   |
       4)               |  rcu_read_lock_sched_held() {
       4)   0.552 us    |    rcu_lockdep_current_cpu_online();
       4)   6.124 us    |  }
    
    Reported-by: Alexander Schmidt <alexschm@de.ibm.com>
    Signed-off-by: Thomas Richter <tmricht@linux.ibm.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Cc: Heiko Carstens <hca@linux.ibm.com>
    Cc: Sumanth Korikkar <sumanthk@linux.ibm.com>
    Cc: Sven Schnelle <svens@linux.ibm.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Link: http://lore.kernel.org/lkml/20210421120400.2126433-1-tmricht@linux.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ba5888c523f8854a164bc6dfebe2c308badcf01
Author: Serge E. Hallyn <serge@hallyn.com>
Date:   Tue Apr 20 08:43:34 2021 -0500

    capabilities: require CAP_SETFCAP to map uid 0
    
    [ Upstream commit db2e718a47984b9d71ed890eb2ea36ecf150de18 ]
    
    cap_setfcap is required to create file capabilities.
    
    Since commit 8db6c34f1dbc ("Introduce v3 namespaced file capabilities"),
    a process running as uid 0 but without cap_setfcap is able to work
    around this as follows: unshare a new user namespace which maps parent
    uid 0 into the child namespace.
    
    While this task will not have new capabilities against the parent
    namespace, there is a loophole due to the way namespaced file
    capabilities are represented as xattrs.  File capabilities valid in
    userns 1 are distinguished from file capabilities valid in userns 2 by
    the kuid which underlies uid 0.  Therefore the restricted root process
    can unshare a new self-mapping namespace, add a namespaced file
    capability onto a file, then use that file capability in the parent
    namespace.
    
    To prevent that, do not allow mapping parent uid 0 if the process which
    opened the uid_map file does not have CAP_SETFCAP, which is the
    capability for setting file capabilities.
    
    As a further wrinkle: a task can unshare its user namespace, then open
    its uid_map file itself, and map (only) its own uid.  In this case we do
    not have the credential from before unshare, which was potentially more
    restricted.  So, when creating a user namespace, we record whether the
    creator had CAP_SETFCAP.  Then we can use that during map_write().
    
    With this patch:
    
    1. Unprivileged user can still unshare -Ur
    
       ubuntu@caps:~$ unshare -Ur
       root@caps:~# logout
    
    2. Root user can still unshare -Ur
    
       ubuntu@caps:~$ sudo bash
       root@caps:/home/ubuntu# unshare -Ur
       root@caps:/home/ubuntu# logout
    
    3. Root user without CAP_SETFCAP cannot unshare -Ur:
    
       root@caps:/home/ubuntu# /sbin/capsh --drop=cap_setfcap --
       root@caps:/home/ubuntu# /sbin/setcap cap_setfcap=p /sbin/setcap
       unable to set CAP_SETFCAP effective capability: Operation not permitted
       root@caps:/home/ubuntu# unshare -Ur
       unshare: write failed /proc/self/uid_map: Operation not permitted
    
    Note: an alternative solution would be to allow uid 0 mappings by
    processes without CAP_SETFCAP, but to prevent such a namespace from
    writing any file capabilities.  This approach can be seen at [1].
    
    Background history: commit 95ebabde382 ("capabilities: Don't allow
    writing ambiguous v3 file capabilities") tried to fix the issue by
    preventing v3 fscaps to be written to disk when the root uid would map
    to the same uid in nested user namespaces.  This led to regressions for
    various workloads.  For example, see [2].  Ultimately this is a valid
    use-case we have to support meaning we had to revert this change in
    3b0c2d3eaa83 ("Revert 95ebabde382c ("capabilities: Don't allow writing
    ambiguous v3 file capabilities")").
    
    Link: https://git.kernel.org/pub/scm/linux/kernel/git/sergeh/linux.git/log/?h=2021-04-15/setfcap-nsfscaps-v4 [1]
    Link: https://github.com/containers/buildah/issues/3071 [2]
    Signed-off-by: Serge Hallyn <serge@hallyn.com>
    Reviewed-by: Andrew G. Morgan <morgan@kernel.org>
    Tested-by: Christian Brauner <christian.brauner@ubuntu.com>
    Reviewed-by: Christian Brauner <christian.brauner@ubuntu.com>
    Tested-by: Giuseppe Scrivano <gscrivan@redhat.com>
    Cc: Eric Biederman <ebiederm@xmission.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9dc9b25276cda703889e30f7e5d86ba93f729d4
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Thu Apr 15 16:34:16 2021 +0800

    perf data: Fix error return code in perf_data__create_dir()
    
    [ Upstream commit f2211881e737cade55e0ee07cf6a26d91a35a6fe ]
    
    Although 'ret' has been initialized to -1, but it will be reassigned by
    the "ret = open(...)" statement in the for loop. So that, the value of
    'ret' is unknown when asprintf() failed.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/20210415083417.3740-1-thunder.leizhen@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea474054c2cc6e1284604b21361f475c7cc8c0a0
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Wed Apr 21 10:40:07 2021 -0700

    net: qrtr: Avoid potential use after free in MHI send
    
    commit 47a017f33943278570c072bc71681809b2567b3a upstream.
    
    It is possible that the MHI ul_callback will be invoked immediately
    following the queueing of the skb for transmission, leading to the
    callback decrementing the refcount of the associated sk and freeing the
    skb.
    
    As such the dereference of skb and the increment of the sk refcount must
    happen before the skb is queued, to avoid the skb to be used after free
    and potentially the sk to drop its last refcount..
    
    Fixes: 6e728f321393 ("net: qrtr: Add MHI transport layer")
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b50fb1b08d6cb3b3b4661d254792794ecdfebab4
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Thu Apr 29 15:19:37 2021 +0000

    bpf: Fix leakage of uninitialized bpf stack under speculation
    
    commit 801c6058d14a82179a7ee17a4b532cac6fad067f upstream.
    
    The current implemented mechanisms to mitigate data disclosure under
    speculation mainly address stack and map value oob access from the
    speculative domain. However, Piotr discovered that uninitialized BPF
    stack is not protected yet, and thus old data from the kernel stack,
    potentially including addresses of kernel structures, could still be
    extracted from that 512 bytes large window. The BPF stack is special
    compared to map values since it's not zero initialized for every
    program invocation, whereas map values /are/ zero initialized upon
    their initial allocation and thus cannot leak any prior data in either
    domain. In the non-speculative domain, the verifier ensures that every
    stack slot read must have a prior stack slot write by the BPF program
    to avoid such data leaking issue.
    
    However, this is not enough: for example, when the pointer arithmetic
    operation moves the stack pointer from the last valid stack offset to
    the first valid offset, the sanitation logic allows for any intermediate
    offsets during speculative execution, which could then be used to
    extract any restricted stack content via side-channel.
    
    Given for unprivileged stack pointer arithmetic the use of unknown
    but bounded scalars is generally forbidden, we can simply turn the
    register-based arithmetic operation into an immediate-based arithmetic
    operation without the need for masking. This also gives the benefit
    of reducing the needed instructions for the operation. Given after
    the work in 7fedb63a8307 ("bpf: Tighten speculative pointer arithmetic
    mask"), the aux->alu_limit already holds the final immediate value for
    the offset register with the known scalar. Thus, a simple mov of the
    immediate to AX register with using AX as the source for the original
    instruction is sufficient and possible now in this case.
    
    Reported-by: Piotr Krysiuk <piotras@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Tested-by: Piotr Krysiuk <piotras@gmail.com>
    Reviewed-by: Piotr Krysiuk <piotras@gmail.com>
    Reviewed-by: John Fastabend <john.fastabend@gmail.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6eba92a4d4be8feb4dc33976abac544fa99d6ecc
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Apr 30 16:21:46 2021 +0200

    bpf: Fix masking negation logic upon negative dst register
    
    commit b9b34ddbe2076ade359cd5ce7537d5ed019e9807 upstream.
    
    The negation logic for the case where the off_reg is sitting in the
    dst register is not correct given then we cannot just invert the add
    to a sub or vice versa. As a fix, perform the final bitwise and-op
    unconditionally into AX from the off_reg, then move the pointer from
    the src to dst and finally use AX as the source for the original
    pointer arithmetic operation such that the inversion yields a correct
    result. The single non-AX mov in between is possible given constant
    blinding is retaining it as it's not an immediate based operation.
    
    Fixes: 979d63d50c0c ("bpf: prevent out of bounds speculation on pointer arithmetic")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Tested-by: Piotr Krysiuk <piotras@gmail.com>
    Reviewed-by: Piotr Krysiuk <piotras@gmail.com>
    Reviewed-by: John Fastabend <john.fastabend@gmail.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d848918b584a15b6f720cb75ee5300af27425ba8
Author: Nick Lowe <nick.lowe@gmail.com>
Date:   Mon Dec 21 22:25:02 2020 +0000

    igb: Enable RSS for Intel I211 Ethernet Controller
    
    commit 6e6026f2dd2005844fb35c3911e8083c09952c6c upstream.
    
    The Intel I211 Ethernet Controller supports 2 Receive Side Scaling (RSS)
    queues. It should not be excluded from having this feature enabled.
    
    Via commit c883de9fd787 ("igb: rename igb define to be more generic")
    E1000_MRQC_ENABLE_RSS_4Q was renamed to E1000_MRQC_ENABLE_RSS_MQ to
    indicate that this is a generic bit flag to enable queues and not
    a flag that is specific to devices that support 4 queues
    
    The bit flag enables 2, 4 or 8 queues appropriately depending on the part.
    
    Tested with a multicore CPU and frames were then distributed as expected.
    
    This issue appears to have been introduced because of confusion caused
    by the prior name.
    
    Signed-off-by: Nick Lowe <nick.lowe@gmail.com>
    Tested-by: David Switzer <david.switzer@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7c5727923b5edd8d6f14dd67dba457c2551f645
Author: Imre Deak <imre.deak@intel.com>
Date:   Wed Jan 27 20:19:09 2021 +0200

    drm/i915: Disable runtime power management during shutdown
    
    commit 7962893ecb853aa7c8925ce237ab6c4274cfc1c7 upstream.
    
    At least on some TGL platforms PUNIT wants to access some display HW
    registers, but it doesn't handle display power management (disabling DC
    states as required) and so this register access will lead to a hang. To
    prevent this disable runtime power management for poweroff and reboot.
    
    v2:
    - Add code comment clarifying the requirement of display power states.
      (Ville)
    
    Reported-and-tested-by: Khaled Almahallawy <khaled.almahallawy@intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Khaled Almahallawy <khaled.almahallawy@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210127181909.128094-1-imre.deak@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c09e09e6da47c74deb5d07b184b2c55bd69370f
Author: Phillip Potter <phil@philpotter.co.uk>
Date:   Thu Apr 1 23:36:07 2021 +0100

    net: usb: ax88179_178a: initialize local variables before use
    
    commit bd78980be1a68d14524c51c4b4170782fada622b upstream.
    
    Use memset to initialize local array in drivers/net/usb/ax88179_178a.c, and
    also set a local u16 and u32 variable to 0. Fixes a KMSAN found uninit-value bug
    reported by syzbot at:
    https://syzkaller.appspot.com/bug?id=00371c73c72f72487c1d0bfe0cc9d00de339d5aa
    
    Reported-by: syzbot+4993e4a0e237f1b53747@syzkaller.appspotmail.com
    Signed-off-by: Phillip Potter <phil@philpotter.co.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbf85a34ce17c4cf0a37ee253f4c582bbfb8231b
Author: Jonathon Reinhart <jonathon.reinhart@gmail.com>
Date:   Mon Apr 12 00:24:53 2021 -0400

    netfilter: conntrack: Make global sysctls readonly in non-init netns
    
    commit 2671fa4dc0109d3fb581bc3078fdf17b5d9080f6 upstream.
    
    These sysctls point to global variables:
    - NF_SYSCTL_CT_MAX (&nf_conntrack_max)
    - NF_SYSCTL_CT_EXPECT_MAX (&nf_ct_expect_max)
    - NF_SYSCTL_CT_BUCKETS (&nf_conntrack_htable_size_user)
    
    Because their data pointers are not updated to point to per-netns
    structures, they must be marked read-only in a non-init_net ns.
    Otherwise, changes in any net namespace are reflected in (leaked into)
    all other net namespaces. This problem has existed since the
    introduction of net namespaces.
    
    The current logic marks them read-only only if the net namespace is
    owned by an unprivileged user (other than init_user_ns).
    
    Commit d0febd81ae77 ("netfilter: conntrack: re-visit sysctls in
    unprivileged namespaces") "exposes all sysctls even if the namespace is
    unpriviliged." Since we need to mark them readonly in any case, we can
    forego the unprivileged user check altogether.
    
    Fixes: d0febd81ae77 ("netfilter: conntrack: re-visit sysctls in unprivileged namespaces")
    Signed-off-by: Jonathon Reinhart <Jonathon.Reinhart@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e370213feea79476f36cf9a1a17ca711cc773aac
Author: Romain Naour <romain.naour@gmail.com>
Date:   Tue Apr 20 22:12:10 2021 +0100

    mips: Do not include hi and lo in clobber list for R6
    
    commit 1d7ba0165d8206ac073f7ac3b14fc0836b66eae7 upstream.
    
    From [1]
    "GCC 10 (PR 91233) won't silently allow registers that are not
    architecturally available to be present in the clobber list anymore,
    resulting in build failure for mips*r6 targets in form of:
    ...
    .../sysdep.h:146:2: error: the register ‘lo’ cannot be clobbered in ‘asm’ for the current target
      146 |  __asm__ volatile (      \
          |  ^~~~~~~
    
    This is because base R6 ISA doesn't define hi and lo registers w/o DSP
    extension. This patch provides the alternative clobber list for r6 targets
    that won't include those registers."
    
    Since kernel 5.4 and mips support for generic vDSO [2], the kernel fail to
    build for mips r6 cpus with gcc 10 for the same reason as glibc.
    
    [1] https://sourceware.org/git/?p=glibc.git;a=commit;h=020b2a97bb15f807c0482f0faee2184ed05bcad8
    [2] '24640f233b46 ("mips: Add support for generic vDSO")'
    
    Signed-off-by: Romain Naour <romain.naour@gmail.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
