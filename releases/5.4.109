commit 4e85f8a712cddf2ceeaac50a26b239fbbcb7091f
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Mar 30 14:35:30 2021 +0200

    Linux 5.4.109
    
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20210329075615.186199980@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 057dd3e6986b260f0bec68bd1f2cd23a5d9dbda3
Author: Jan Beulich <jbeulich@suse.com>
Date:   Fri Mar 26 16:28:57 2021 +0100

    xen-blkback: don't leak persistent grants from xen_blkbk_map()
    
    commit a846738f8c3788d846ed1f587270d2f2e3d32432 upstream.
    
    The fix for XSA-365 zapped too many of the ->persistent_gnt[] entries.
    Ones successfully obtained should not be overwritten, but instead left
    for xen_blkbk_unmap_prepare() to pick up and put.
    
    This is XSA-371.
    
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Wei Liu <wl@xen.org>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce934540ff09321dcfb6366ae2ab4f4f44decaf4
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Sat Mar 20 20:21:54 2021 +0100

    can: peak_usb: Revert "can: peak_usb: add forgotten supported devices"
    
    commit 5d7047ed6b7214fbabc16d8712a822e256b1aa44 upstream.
    
    In commit 6417f03132a6 ("module: remove never implemented
    MODULE_SUPPORTED_DEVICE") the MODULE_SUPPORTED_DEVICE macro was
    removed from the kerne entirely. Shortly before this patch was applied
    mainline the commit 59ec7b89ed3e ("can: peak_usb: add forgotten
    supported devices") was added to net/master. As this would result in a
    merge conflict, let's revert this patch.
    
    Fixes: 59ec7b89ed3e ("can: peak_usb: add forgotten supported devices")
    Link: https://lore.kernel.org/r/20210320192649.341832-1-mkl@pengutronix.de
    Suggested-by: Leon Romanovsky <leon@kernel.org>
    Cc: Stephane Grosjean <s.grosjean@peak-system.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2638770e793b74aedfadb94c78bb449e132a69b2
Author: Jan Kara <jack@suse.cz>
Date:   Mon Feb 22 18:16:26 2021 +0100

    ext4: add reclaim checks to xattr code
    
    commit 163f0ec1df33cf468509ff38cbcbb5eb0d7fac60 upstream.
    
    Syzbot is reporting that ext4 can enter fs reclaim from kvmalloc() while
    the transaction is started like:
    
      fs_reclaim_acquire+0x117/0x150 mm/page_alloc.c:4340
      might_alloc include/linux/sched/mm.h:193 [inline]
      slab_pre_alloc_hook mm/slab.h:493 [inline]
      slab_alloc_node mm/slub.c:2817 [inline]
      __kmalloc_node+0x5f/0x430 mm/slub.c:4015
      kmalloc_node include/linux/slab.h:575 [inline]
      kvmalloc_node+0x61/0xf0 mm/util.c:587
      kvmalloc include/linux/mm.h:781 [inline]
      ext4_xattr_inode_cache_find fs/ext4/xattr.c:1465 [inline]
      ext4_xattr_inode_lookup_create fs/ext4/xattr.c:1508 [inline]
      ext4_xattr_set_entry+0x1ce6/0x3780 fs/ext4/xattr.c:1649
      ext4_xattr_ibody_set+0x78/0x2b0 fs/ext4/xattr.c:2224
      ext4_xattr_set_handle+0x8f4/0x13e0 fs/ext4/xattr.c:2380
      ext4_xattr_set+0x13a/0x340 fs/ext4/xattr.c:2493
    
    This should be impossible since transaction start sets PF_MEMALLOC_NOFS.
    Add some assertions to the code to catch if something isn't working as
    expected early.
    
    Link: https://lore.kernel.org/linux-ext4/000000000000563a0205bafb7970@google.com/
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20210222171626.21884-1-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92b9e3deffb66b0d4d555dd9ea9a1766e00a7288
Author: Markus Theil <markus.theil@tu-ilmenau.de>
Date:   Sat Feb 13 14:36:53 2021 +0100

    mac80211: fix double free in ibss_leave
    
    commit 3bd801b14e0c5d29eeddc7336558beb3344efaa3 upstream.
    
    Clear beacon ie pointer and ie length after free
    in order to prevent double free.
    
    ==================================================================
    BUG: KASAN: double-free or invalid-free \
    in ieee80211_ibss_leave+0x83/0xe0 net/mac80211/ibss.c:1876
    
    CPU: 0 PID: 8472 Comm: syz-executor100 Not tainted 5.11.0-rc6-syzkaller #0
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x107/0x163 lib/dump_stack.c:120
     print_address_description.constprop.0.cold+0x5b/0x2c6 mm/kasan/report.c:230
     kasan_report_invalid_free+0x51/0x80 mm/kasan/report.c:355
     ____kasan_slab_free+0xcc/0xe0 mm/kasan/common.c:341
     kasan_slab_free include/linux/kasan.h:192 [inline]
     __cache_free mm/slab.c:3424 [inline]
     kfree+0xed/0x270 mm/slab.c:3760
     ieee80211_ibss_leave+0x83/0xe0 net/mac80211/ibss.c:1876
     rdev_leave_ibss net/wireless/rdev-ops.h:545 [inline]
     __cfg80211_leave_ibss+0x19a/0x4c0 net/wireless/ibss.c:212
     __cfg80211_leave+0x327/0x430 net/wireless/core.c:1172
     cfg80211_leave net/wireless/core.c:1221 [inline]
     cfg80211_netdev_notifier_call+0x9e8/0x12c0 net/wireless/core.c:1335
     notifier_call_chain+0xb5/0x200 kernel/notifier.c:83
     call_netdevice_notifiers_info+0xb5/0x130 net/core/dev.c:2040
     call_netdevice_notifiers_extack net/core/dev.c:2052 [inline]
     call_netdevice_notifiers net/core/dev.c:2066 [inline]
     __dev_close_many+0xee/0x2e0 net/core/dev.c:1586
     __dev_close net/core/dev.c:1624 [inline]
     __dev_change_flags+0x2cb/0x730 net/core/dev.c:8476
     dev_change_flags+0x8a/0x160 net/core/dev.c:8549
     dev_ifsioc+0x210/0xa70 net/core/dev_ioctl.c:265
     dev_ioctl+0x1b1/0xc40 net/core/dev_ioctl.c:511
     sock_do_ioctl+0x148/0x2d0 net/socket.c:1060
     sock_ioctl+0x477/0x6a0 net/socket.c:1177
     vfs_ioctl fs/ioctl.c:48 [inline]
     __do_sys_ioctl fs/ioctl.c:753 [inline]
     __se_sys_ioctl fs/ioctl.c:739 [inline]
     __x64_sys_ioctl+0x193/0x200 fs/ioctl.c:739
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Reported-by: syzbot+93976391bf299d425f44@syzkaller.appspotmail.com
    Signed-off-by: Markus Theil <markus.theil@tu-ilmenau.de>
    Link: https://lore.kernel.org/r/20210213133653.367130-1-markus.theil@tu-ilmenau.de
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae23957bd1fb3184a9935bd99c5ad2351a59d7c8
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Mar 12 08:59:48 2021 -0800

    net: qrtr: fix a kernel-infoleak in qrtr_recvmsg()
    
    commit 50535249f624d0072cd885bcdce4e4b6fb770160 upstream.
    
    struct sockaddr_qrtr has a 2-byte hole, and qrtr_recvmsg() currently
    does not clear it before copying kernel data to user space.
    
    It might be too late to name the hole since sockaddr_qrtr structure is uapi.
    
    BUG: KMSAN: kernel-infoleak in kmsan_copy_to_user+0x9c/0xb0 mm/kmsan/kmsan_hooks.c:249
    CPU: 0 PID: 29705 Comm: syz-executor.3 Not tainted 5.11.0-rc7-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x21c/0x280 lib/dump_stack.c:120
     kmsan_report+0xfb/0x1e0 mm/kmsan/kmsan_report.c:118
     kmsan_internal_check_memory+0x202/0x520 mm/kmsan/kmsan.c:402
     kmsan_copy_to_user+0x9c/0xb0 mm/kmsan/kmsan_hooks.c:249
     instrument_copy_to_user include/linux/instrumented.h:121 [inline]
     _copy_to_user+0x1ac/0x270 lib/usercopy.c:33
     copy_to_user include/linux/uaccess.h:209 [inline]
     move_addr_to_user+0x3a2/0x640 net/socket.c:237
     ____sys_recvmsg+0x696/0xd50 net/socket.c:2575
     ___sys_recvmsg net/socket.c:2610 [inline]
     do_recvmmsg+0xa97/0x22d0 net/socket.c:2710
     __sys_recvmmsg net/socket.c:2789 [inline]
     __do_sys_recvmmsg net/socket.c:2812 [inline]
     __se_sys_recvmmsg+0x24a/0x410 net/socket.c:2805
     __x64_sys_recvmmsg+0x62/0x80 net/socket.c:2805
     do_syscall_64+0x9f/0x140 arch/x86/entry/common.c:48
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x465f69
    Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007f43659d6188 EFLAGS: 00000246 ORIG_RAX: 000000000000012b
    RAX: ffffffffffffffda RBX: 000000000056bf60 RCX: 0000000000465f69
    RDX: 0000000000000008 RSI: 0000000020003e40 RDI: 0000000000000003
    RBP: 00000000004bfa8f R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000010060 R11: 0000000000000246 R12: 000000000056bf60
    R13: 0000000000a9fb1f R14: 00007f43659d6300 R15: 0000000000022000
    
    Local variable ----addr@____sys_recvmsg created at:
     ____sys_recvmsg+0x168/0xd50 net/socket.c:2550
     ____sys_recvmsg+0x168/0xd50 net/socket.c:2550
    
    Bytes 2-3 of 12 are uninitialized
    Memory access of size 12 starts at ffff88817c627b40
    Data copied to user address 0000000020000140
    
    Fixes: bdabad3e363d ("net: Add Qualcomm IPC router")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Courtney Cavin <courtney.cavin@sonymobile.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7a9629700017d56c36e9a3bb6df8a3ace7f5e18
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed Mar 10 10:46:10 2021 -0800

    net: dsa: b53: VLAN filtering is global to all users
    
    commit d45c36bafb94e72fdb6dee437279b61b6d97e706 upstream.
    
    The bcm_sf2 driver uses the b53 driver as a library but does not make
    usre of the b53_setup() function, this made it fail to inherit the
    vlan_filtering_is_global attribute. Fix this by moving the assignment to
    b53_switch_alloc() which is used by bcm_sf2.
    
    Fixes: 7228b23e68f7 ("net: dsa: b53: Let DSA handle mismatched VLAN filtering settings")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f866d1fa48e40af651d9c78b7f3c5a9a6ccf1815
Author: Martin Willi <martin@strongswan.org>
Date:   Tue Mar 2 13:24:23 2021 +0100

    can: dev: Move device back to init netns on owning netns delete
    
    commit 3a5ca857079ea022e0b1b17fc154f7ad7dbc150f upstream.
    
    When a non-initial netns is destroyed, the usual policy is to delete
    all virtual network interfaces contained, but move physical interfaces
    back to the initial netns. This keeps the physical interface visible
    on the system.
    
    CAN devices are somewhat special, as they define rtnl_link_ops even
    if they are physical devices. If a CAN interface is moved into a
    non-initial netns, destroying that netns lets the interface vanish
    instead of moving it back to the initial netns. default_device_exit()
    skips CAN interfaces due to having rtnl_link_ops set. Reproducer:
    
      ip netns add foo
      ip link set can0 netns foo
      ip netns delete foo
    
    WARNING: CPU: 1 PID: 84 at net/core/dev.c:11030 ops_exit_list+0x38/0x60
    CPU: 1 PID: 84 Comm: kworker/u4:2 Not tainted 5.10.19 #1
    Workqueue: netns cleanup_net
    [<c010e700>] (unwind_backtrace) from [<c010a1d8>] (show_stack+0x10/0x14)
    [<c010a1d8>] (show_stack) from [<c086dc10>] (dump_stack+0x94/0xa8)
    [<c086dc10>] (dump_stack) from [<c086b938>] (__warn+0xb8/0x114)
    [<c086b938>] (__warn) from [<c086ba10>] (warn_slowpath_fmt+0x7c/0xac)
    [<c086ba10>] (warn_slowpath_fmt) from [<c0629f20>] (ops_exit_list+0x38/0x60)
    [<c0629f20>] (ops_exit_list) from [<c062a5c4>] (cleanup_net+0x230/0x380)
    [<c062a5c4>] (cleanup_net) from [<c0142c20>] (process_one_work+0x1d8/0x438)
    [<c0142c20>] (process_one_work) from [<c0142ee4>] (worker_thread+0x64/0x5a8)
    [<c0142ee4>] (worker_thread) from [<c0148a98>] (kthread+0x148/0x14c)
    [<c0148a98>] (kthread) from [<c0100148>] (ret_from_fork+0x14/0x2c)
    
    To properly restore physical CAN devices to the initial netns on owning
    netns exit, introduce a flag on rtnl_link_ops that can be set by drivers.
    For CAN devices setting this flag, default_device_exit() considers them
    non-virtual, applying the usual namespace move.
    
    The issue was introduced in the commit mentioned below, as at that time
    CAN devices did not have a dellink() operation.
    
    Fixes: e008b5fc8dc7 ("net: Simplfy default_device_exit and improve batching.")
    Link: https://lore.kernel.org/r/20210302122423.872326-1-martin@strongswan.org
    Signed-off-by: Martin Willi <martin@strongswan.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfd6627c83dd4e67247165c842df674b343795c7
Author: Isaku Yamahata <isaku.yamahata@intel.com>
Date:   Thu Mar 18 13:26:57 2021 -0700

    x86/mem_encrypt: Correct physical address calculation in __set_clr_pte_enc()
    
    commit 8249d17d3194eac064a8ca5bc5ca0abc86feecde upstream.
    
    The pfn variable contains the page frame number as returned by the
    pXX_pfn() functions, shifted to the right by PAGE_SHIFT to remove the
    page bits. After page protection computations are done to it, it gets
    shifted back to the physical address using page_level_shift().
    
    That is wrong, of course, because that function determines the shift
    length based on the level of the page in the page table but in all the
    cases, it was shifted by PAGE_SHIFT before.
    
    Therefore, shift it back using PAGE_SHIFT to get the correct physical
    address.
    
     [ bp: Rewrite commit message. ]
    
    Fixes: dfaaec9033b8 ("x86: Add support for changing memory encryption attribute in early boot")
    Signed-off-by: Isaku Yamahata <isaku.yamahata@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Reviewed-by: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/81abbae1657053eccc535c16151f63cd049dcb97.1616098294.git.isaku.yamahata@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f989059cd22ab14577b567c862818d6c9bbed6e3
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Mar 22 09:46:13 2021 +0100

    locking/mutex: Fix non debug version of mutex_lock_io_nested()
    
    commit 291da9d4a9eb3a1cb0610b7f4480f5b52b1825e7 upstream.
    
    If CONFIG_DEBUG_LOCK_ALLOC=n then mutex_lock_io_nested() maps to
    mutex_lock() which is clearly wrong because mutex_lock() lacks the
    io_schedule_prepare()/finish() invocations.
    
    Map it to mutex_lock_io().
    
    Fixes: f21860bac05b ("locking/mutex, sched/wait: Fix the mutex_lock_io_nested() define")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/878s6fshii.fsf@nanos.tec.linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1260d8dc2d6640cfbdc35b149fd7eb54be2bfa8c
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sun Mar 7 19:52:41 2021 -0800

    scsi: mpt3sas: Fix error return code of mpt3sas_base_attach()
    
    [ Upstream commit 3401ecf7fc1b9458a19d42c0e26a228f18ac7dda ]
    
    When kzalloc() returns NULL, no error return code of mpt3sas_base_attach()
    is assigned. To fix this bug, r is assigned with -ENOMEM in this case.
    
    Link: https://lore.kernel.org/r/20210308035241.3288-1-baijiaju1990@gmail.com
    Fixes: c696f7b83ede ("scsi: mpt3sas: Implement device_remove_in_progress check in IOCTL path")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d31747705762db1e7747333a9afffc91fbd0e8ec
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sun Mar 7 19:30:24 2021 -0800

    scsi: qedi: Fix error return code of qedi_alloc_global_queues()
    
    [ Upstream commit f69953837ca5d98aa983a138dc0b90a411e9c763 ]
    
    When kzalloc() returns NULL to qedi->global_queues[i], no error return code
    of qedi_alloc_global_queues() is assigned.  To fix this bug, status is
    assigned with -ENOMEM in this case.
    
    Link: https://lore.kernel.org/r/20210308033024.27147-1-baijiaju1990@gmail.com
    Fixes: ace7f46ba5fd ("scsi: qedi: Add QLogic FastLinQ offload iSCSI driver framework.")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Acked-by: Manish Rangankar <mrangankar@marvell.com>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 063c3cfb264b014cad804dd7efda817cbfacdd2f
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Sat Mar 20 16:23:53 2021 -0700

    scsi: Revert "qla2xxx: Make sure that aborted commands are freed"
    
    [ Upstream commit 39c0c8553bfb5a3d108aa47f1256076d507605e3 ]
    
    Calling vha->hw->tgt.tgt_ops->free_cmd() from qlt_xmit_response() is wrong
    since the command for which a response is sent must remain valid until the
    SCSI target core calls .release_cmd(). It has been observed that the
    following scenario triggers a kernel crash:
    
     - qlt_xmit_response() calls qlt_check_reserve_free_req()
    
     - qlt_check_reserve_free_req() returns -EAGAIN
    
     - qlt_xmit_response() calls vha->hw->tgt.tgt_ops->free_cmd(cmd)
    
     - transport_handle_queue_full() tries to retransmit the response
    
    Fix this crash by reverting the patch that introduced it.
    
    Link: https://lore.kernel.org/r/20210320232359.941-2-bvanassche@acm.org
    Fixes: 0dcec41acb85 ("scsi: qla2xxx: Make sure that aborted commands are freed")
    Cc: Quinn Tran <qutran@marvell.com>
    Cc: Mike Christie <michael.christie@oracle.com>
    Reviewed-by: Daniel Wagner <dwagner@suse.de>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fdc61af371db7d4d263516aa80d9d83260dc3996
Author: David Jeffery <djeffery@redhat.com>
Date:   Thu Feb 11 09:38:07 2021 -0500

    block: recalculate segment count for multi-segment discards correctly
    
    [ Upstream commit a958937ff166fc60d1c3a721036f6ff41bfa2821 ]
    
    When a stacked block device inserts a request into another block device
    using blk_insert_cloned_request, the request's nr_phys_segments field gets
    recalculated by a call to blk_recalc_rq_segments in
    blk_cloned_rq_check_limits. But blk_recalc_rq_segments does not know how to
    handle multi-segment discards. For disk types which can handle
    multi-segment discards like nvme, this results in discard requests which
    claim a single segment when it should report several, triggering a warning
    in nvme and causing nvme to fail the discard from the invalid state.
    
     WARNING: CPU: 5 PID: 191 at drivers/nvme/host/core.c:700 nvme_setup_discard+0x170/0x1e0 [nvme_core]
     ...
     nvme_setup_cmd+0x217/0x270 [nvme_core]
     nvme_loop_queue_rq+0x51/0x1b0 [nvme_loop]
     __blk_mq_try_issue_directly+0xe7/0x1b0
     blk_mq_request_issue_directly+0x41/0x70
     ? blk_account_io_start+0x40/0x50
     dm_mq_queue_rq+0x200/0x3e0
     blk_mq_dispatch_rq_list+0x10a/0x7d0
     ? __sbitmap_queue_get+0x25/0x90
     ? elv_rb_del+0x1f/0x30
     ? deadline_remove_request+0x55/0xb0
     ? dd_dispatch_request+0x181/0x210
     __blk_mq_do_dispatch_sched+0x144/0x290
     ? bio_attempt_discard_merge+0x134/0x1f0
     __blk_mq_sched_dispatch_requests+0x129/0x180
     blk_mq_sched_dispatch_requests+0x30/0x60
     __blk_mq_run_hw_queue+0x47/0xe0
     __blk_mq_delay_run_hw_queue+0x15b/0x170
     blk_mq_sched_insert_requests+0x68/0xe0
     blk_mq_flush_plug_list+0xf0/0x170
     blk_finish_plug+0x36/0x50
     xlog_cil_committed+0x19f/0x290 [xfs]
     xlog_cil_process_committed+0x57/0x80 [xfs]
     xlog_state_do_callback+0x1e0/0x2a0 [xfs]
     xlog_ioend_work+0x2f/0x80 [xfs]
     process_one_work+0x1b6/0x350
     worker_thread+0x53/0x3e0
     ? process_one_work+0x350/0x350
     kthread+0x11b/0x140
     ? __kthread_bind_mask+0x60/0x60
     ret_from_fork+0x22/0x30
    
    This patch fixes blk_recalc_rq_segments to be aware of devices which can
    have multi-segment discards. It calculates the correct discard segment
    count by counting the number of bio as each discard bio is considered its
    own segment.
    
    Fixes: 1e739730c5b9 ("block: optionally merge discontiguous discard bios into a single request")
    Signed-off-by: David Jeffery <djeffery@redhat.com>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Reviewed-by: Laurence Oberman <loberman@redhat.com>
    Link: https://lore.kernel.org/r/20210211143807.GA115624@redhat
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ce9f6efa655b56c0b70249e7712b18632110b43
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Mon Mar 8 17:11:43 2021 +0200

    perf auxtrace: Fix auxtrace queue conflict
    
    [ Upstream commit b410ed2a8572d41c68bd9208555610e4b07d0703 ]
    
    The only requirement of an auxtrace queue is that the buffers are in
    time order.  That is achieved by making separate queues for separate
    perf buffer or AUX area buffer mmaps.
    
    That generally means a separate queue per cpu for per-cpu contexts, and
    a separate queue per thread for per-task contexts.
    
    When buffers are added to a queue, perf checks that the buffer cpu and
    thread id (tid) match the queue cpu and thread id.
    
    However, generally, that need not be true, and perf will queue buffers
    correctly anyway, so the check is not needed.
    
    In addition, the check gets erroneously hit when using sample mode to
    trace multiple threads.
    
    Consequently, fix that case by removing the check.
    
    Fixes: e502789302a6 ("perf auxtrace: Add helpers for queuing AUX area tracing data")
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Reviewed-by: Andi Kleen <ak@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Link: http://lore.kernel.org/lkml/20210308151143.18338-1-adrian.hunter@intel.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc0b1a2036dd8072106ec81a8685ecb901f72ed6
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Mar 22 18:31:00 2021 +0200

    ACPI: scan: Use unique number for instance_no
    
    [ Upstream commit eb50aaf960e3bedfef79063411ffd670da94b84b ]
    
    The decrementation of acpi_device_bus_id->instance_no
    in acpi_device_del() is incorrect, because it may cause
    a duplicate instance number to be allocated next time
    a device with the same acpi_device_bus_id is added.
    
    Replace above mentioned approach by using IDA framework.
    
    While at it, define the instance range to be [0, 4096).
    
    Fixes: e49bd2dd5a50 ("ACPI: use PNPID:instance_no as bus_id of ACPI device")
    Fixes: ca9dc8d42b30 ("ACPI / scan: Fix acpi_bus_id_list bookkeeping")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: 4.10+ <stable@vger.kernel.org> # 4.10+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b382f9d616090d3d8cfe19b9568a2c1c6f4bce55
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Thu Jan 14 19:46:47 2021 +0100

    ACPI: scan: Rearrange memory allocation in acpi_device_add()
    
    [ Upstream commit c1013ff7a5472db637c56bb6237f8343398c03a7 ]
    
    The upfront allocation of new_bus_id is done to avoid allocating
    memory under acpi_device_lock, but it doesn't really help,
    because (1) it leads to many unnecessary memory allocations for
    _ADR devices, (2) kstrdup_const() is run under that lock anyway and
    (3) it complicates the code.
    
    Rearrange acpi_device_add() to allocate memory for a new struct
    acpi_device_bus_id instance only when necessary, eliminate a redundant
    local variable from it and reduce the number of labels in there.
    
    No intentional functional impact.
    
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cc578c3e612bd4790b5fb78124088c07cf059b33
Author: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
Date:   Mon Mar 8 14:24:11 2021 +1300

    Revert "netfilter: x_tables: Update remaining dereference to RCU"
    
    [ Upstream commit abe7034b9a8d57737e80cc16d60ed3666990bdbf ]
    
    This reverts commit 443d6e86f821a165fae3fc3fc13086d27ac140b1.
    
    This (and the following) patch basically re-implemented the RCU
    mechanisms of patch 784544739a25. That patch was replaced because of the
    performance problems that it created when replacing tables. Now, we have
    the same issue: the call to synchronize_rcu() makes replacing tables
    slower by as much as an order of magnitude.
    
    Revert these patches and fix the issue in a different way.
    
    Signed-off-by: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19a5fb4ceada903e692de96b8aa8494179abbf0b
Author: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
Date:   Mon Mar 8 14:24:13 2021 +1300

    netfilter: x_tables: Use correct memory barriers.
    
    [ Upstream commit 175e476b8cdf2a4de7432583b49c871345e4f8a1 ]
    
    When a new table value was assigned, it was followed by a write memory
    barrier. This ensured that all writes before this point would complete
    before any writes after this point. However, to determine whether the
    rules are unused, the sequence counter is read. To ensure that all
    writes have been done before these reads, a full memory barrier is
    needed, not just a write memory barrier. The same argument applies when
    incrementing the counter, before the rules are read.
    
    Changing to using smp_mb() instead of smp_wmb() fixes the kernel panic
    reported in cc00bcaa5899 (which is still present), while still
    maintaining the same speed of replacing tables.
    
    The smb_mb() barriers potentially slow the packet path, however testing
    has shown no measurable change in performance on a 4-core MIPS64
    platform.
    
    Fixes: 7f5c6d4f665b ("netfilter: get rid of atomic ops in fast path")
    Signed-off-by: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c46cd29b89daf35f276faf62c69e8f90cfffecd0
Author: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
Date:   Mon Mar 8 14:24:12 2021 +1300

    Revert "netfilter: x_tables: Switch synchronization to RCU"
    
    [ Upstream commit d3d40f237480abf3268956daf18cdc56edd32834 ]
    
    This reverts commit cc00bcaa589914096edef7fb87ca5cee4a166b5c.
    
    This (and the preceding) patch basically re-implemented the RCU
    mechanisms of patch 784544739a25. That patch was replaced because of the
    performance problems that it created when replacing tables. Now, we have
    the same issue: the call to synchronize_rcu() makes replacing tables
    slower by as much as an order of magnitude.
    
    Prior to using RCU a script calling "iptables" approx. 200 times was
    taking 1.16s. With RCU this increased to 11.59s.
    
    Revert these patches and fix the issue in a different way.
    
    Signed-off-by: Mark Tomlinson <mark.tomlinson@alliedtelesis.co.nz>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e74d46e69a45ae30674fd7284fd0abc313fe1ef5
Author: Sasha Levin <sashal@kernel.org>
Date:   Sat Mar 27 18:27:53 2021 -0400

    bpf: Don't do bpf_cgroup_storage_set() for kuprobe/tp programs
    
    [ Upstream commit 05a68ce5fa51a83c360381630f823545c5757aa2 ]
    
    For kuprobe and tracepoint bpf programs, kernel calls
    trace_call_bpf() which calls BPF_PROG_RUN_ARRAY_CHECK()
    to run the program array. Currently, BPF_PROG_RUN_ARRAY_CHECK()
    also calls bpf_cgroup_storage_set() to set percpu
    cgroup local storage with NULL value. This is
    due to Commit 394e40a29788 ("bpf: extend bpf_prog_array to store
    pointers to the cgroup storage") which modified
    __BPF_PROG_RUN_ARRAY() to call bpf_cgroup_storage_set()
    and this macro is also used by BPF_PROG_RUN_ARRAY_CHECK().
    
    kuprobe and tracepoint programs are not allowed to call
    bpf_get_local_storage() helper hence does not
    access percpu cgroup local storage. Let us
    change BPF_PROG_RUN_ARRAY_CHECK() not to
    modify percpu cgroup local storage.
    
    The issue is observed when I tried to debug [1] where
    percpu data is overwritten due to
      preempt_disable -> migration_disable
    change. This patch does not completely fix the above issue,
    which will be addressed separately, e.g., multiple cgroup
    prog runs may preempt each other. But it does fix
    any potential issue caused by tracing program
    overwriting percpu cgroup storage:
     - in a busy system, a tracing program is to run between
       bpf_cgroup_storage_set() and the cgroup prog run.
     - a kprobe program is triggered by a helper in cgroup prog
       before bpf_get_local_storage() is called.
    
     [1] https://lore.kernel.org/bpf/CAKH8qBuXCfUz=w8L+Fj74OaUpbosO29niYwTki7e3Ag044_aww@mail.gmail.com/T
    
    Fixes: 394e40a29788 ("bpf: extend bpf_prog_array to store pointers to the cgroup storage")
    Signed-off-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Roman Gushchin <guro@fb.com>
    Link: https://lore.kernel.org/bpf/20210309185028.3763817-1-yhs@fb.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01398e024ba60d7110ac8f82acdcdb13454017c9
Author: Potnuri Bharat Teja <bharat@chelsio.com>
Date:   Thu Mar 25 00:34:53 2021 +0530

    RDMA/cxgb4: Fix adapter LE hash errors while destroying ipv6 listening server
    
    [ Upstream commit 3408be145a5d6418ff955fe5badde652be90e700 ]
    
    Not setting the ipv6 bit while destroying ipv6 listening servers may
    result in potential fatal adapter errors due to lookup engine memory hash
    errors. Therefore always set ipv6 field while destroying ipv6 listening
    servers.
    
    Fixes: 830662f6f032 ("RDMA/cxgb4: Add support for active and passive open connection with IPv6 address")
    Link: https://lore.kernel.org/r/20210324190453.8171-1-bharat@chelsio.com
    Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 78aafa0240bc465564dadd57cb77f48e0b7c48b7
Author: Lukasz Luba <lukasz.luba@arm.com>
Date:   Tue Mar 23 14:56:08 2021 +0000

    PM: EM: postpone creating the debugfs dir till fs_initcall
    
    [ Upstream commit fb9d62b27ab1e07d625591549c314b7d406d21df ]
    
    The debugfs directory '/sys/kernel/debug/energy_model' is needed before
    the Energy Model registration can happen. With the recent change in
    debugfs subsystem it's not allowed to create this directory at early
    stage (core_initcall). Thus creating this directory would fail.
    
    Postpone the creation of the EM debug dir to later stage: fs_initcall.
    
    It should be safe since all clients: CPUFreq drivers, Devfreq drivers
    will be initialized in later stages.
    
    The custom debug log below prints the time of creation the EM debug dir
    at fs_initcall and successful registration of EMs at later stages.
    
    [    1.505717] energy_model: creating rootdir
    [    3.698307] cpu cpu0: EM: created perf domain
    [    3.709022] cpu cpu1: EM: created perf domain
    
    Fixes: 56348560d495 ("debugfs: do not attempt to create a new file before the filesystem is initalized")
    Reported-by: Ionela Voinescu <ionela.voinescu@arm.com>
    Signed-off-by: Lukasz Luba <lukasz.luba@arm.com>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f54b10114d63dfa95e9a35872eca3043c10b7301
Author: Aya Levin <ayal@nvidia.com>
Date:   Thu Mar 11 17:46:35 2021 +0200

    net/mlx5e: Fix error path for ethtool set-priv-flag
    
    [ Upstream commit 4eacfe72e3e037e3fc019113df32c39a705148c2 ]
    
    Expose error value when failing to comply to command:
    $ ethtool --set-priv-flags eth2 rx_cqe_compress [on/off]
    
    Fixes: be7e87f92b58 ("net/mlx5e: Fail safe cqe compressing/moderation mode setting")
    Signed-off-by: Aya Levin <ayal@nvidia.com>
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa4addf30c2cd8de776bc38a31580613aed7cdf9
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Mar 19 15:47:31 2021 +0100

    PM: runtime: Defer suspending suppliers
    
    [ Upstream commit 5244f5e2d801259af877ee759e8c22364c607072 ]
    
    Because the PM-runtime status of the device is not updated in
    __rpm_callback(), attempts to suspend the suppliers of the given
    device triggered by the rpm_put_suppliers() call in there may
    cause a supplier to be suspended completely before the status of
    the consumer is updated to RPM_SUSPENDED, which is confusing.
    
    To avoid that (1) modify __rpm_callback() to only decrease the
    PM-runtime usage counter of each supplier and (2) make rpm_suspend()
    try to suspend the suppliers after changing the consumer's status to
    RPM_SUSPENDED, in analogy with the device's parent.
    
    Link: https://lore.kernel.org/linux-pm/CAPDyKFqm06KDw_p8WXsM4dijDbho4bb6T4k50UqqvR1_COsp8g@mail.gmail.com/
    Fixes: 21d5c57b3726 ("PM / runtime: Use device links")
    Reported-by: elaine.zhang <zhangqing@rock-chips.com>
    Diagnosed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c82d289fe958c986b587e6d0189ae5ce1b0e84f1
Author: Pavel Tatashin <pasha.tatashin@soleen.com>
Date:   Fri Mar 19 16:50:54 2021 -0400

    arm64: kdump: update ppos when reading elfcorehdr
    
    [ Upstream commit 141f8202cfa4192c3af79b6cbd68e7760bb01b5a ]
    
    The ppos points to a position in the old kernel memory (and in case of
    arm64 in the crash kernel since elfcorehdr is passed as a segment). The
    function should update the ppos by the amount that was read. This bug is
    not exposed by accident, but other platforms update this value properly.
    So, fix it in ARM64 version of elfcorehdr_read() as well.
    
    Signed-off-by: Pavel Tatashin <pasha.tatashin@soleen.com>
    Fixes: e62aaeac426a ("arm64: kdump: provide /proc/vmcore file")
    Reviewed-by: Tyler Hicks <tyhicks@linux.microsoft.com>
    Link: https://lore.kernel.org/r/20210319205054.743368-1-pasha.tatashin@soleen.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bf90e000c1034d8e68d9316fa844ed8e451bd90
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sat Mar 20 08:56:02 2021 -0300

    drm/msm: fix shutdown hook in case GPU components failed to bind
    
    [ Upstream commit 623f279c77811475ac8fd5635cc4e4451aa71291 ]
    
    If GPU components have failed to bind, shutdown callback would fail with
    the following backtrace. Add safeguard check to stop that oops from
    happening and allow the board to reboot.
    
    [   66.617046] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
    [   66.626066] Mem abort info:
    [   66.628939]   ESR = 0x96000006
    [   66.632088]   EC = 0x25: DABT (current EL), IL = 32 bits
    [   66.637542]   SET = 0, FnV = 0
    [   66.640688]   EA = 0, S1PTW = 0
    [   66.643924] Data abort info:
    [   66.646889]   ISV = 0, ISS = 0x00000006
    [   66.650832]   CM = 0, WnR = 0
    [   66.653890] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000107f81000
    [   66.660505] [0000000000000000] pgd=0000000100bb2003, p4d=0000000100bb2003, pud=0000000100897003, pmd=0000000000000000
    [   66.671398] Internal error: Oops: 96000006 [#1] PREEMPT SMP
    [   66.677115] Modules linked in:
    [   66.680261] CPU: 6 PID: 352 Comm: reboot Not tainted 5.11.0-rc2-00309-g79e3faa756b2 #38
    [   66.688473] Hardware name: Qualcomm Technologies, Inc. Robotics RB5 (DT)
    [   66.695347] pstate: 60400005 (nZCv daif +PAN -UAO -TCO BTYPE=--)
    [   66.701507] pc : msm_atomic_commit_tail+0x78/0x4e0
    [   66.706437] lr : commit_tail+0xa4/0x184
    [   66.710381] sp : ffff8000108f3af0
    [   66.713791] x29: ffff8000108f3af0 x28: ffff418c44337000
    [   66.719242] x27: 0000000000000000 x26: ffff418c40a24490
    [   66.724693] x25: ffffd3a842a4f1a0 x24: 0000000000000008
    [   66.730146] x23: ffffd3a84313f030 x22: ffff418c444ce000
    [   66.735598] x21: ffff418c408a4980 x20: 0000000000000000
    [   66.741049] x19: 0000000000000000 x18: ffff800010710fbc
    [   66.746500] x17: 000000000000000c x16: 0000000000000001
    [   66.751954] x15: 0000000000010008 x14: 0000000000000068
    [   66.757405] x13: 0000000000000001 x12: 0000000000000000
    [   66.762855] x11: 0000000000000001 x10: 00000000000009b0
    [   66.768306] x9 : ffffd3a843192000 x8 : ffff418c44337000
    [   66.773757] x7 : 0000000000000000 x6 : 00000000a401b34e
    [   66.779210] x5 : 00ffffffffffffff x4 : 0000000000000000
    [   66.784660] x3 : 0000000000000000 x2 : ffff418c444ce000
    [   66.790111] x1 : ffffd3a841dce530 x0 : ffff418c444cf000
    [   66.795563] Call trace:
    [   66.798075]  msm_atomic_commit_tail+0x78/0x4e0
    [   66.802633]  commit_tail+0xa4/0x184
    [   66.806217]  drm_atomic_helper_commit+0x160/0x390
    [   66.811051]  drm_atomic_commit+0x4c/0x60
    [   66.815082]  drm_atomic_helper_disable_all+0x1f4/0x210
    [   66.820355]  drm_atomic_helper_shutdown+0x80/0x130
    [   66.825276]  msm_pdev_shutdown+0x14/0x20
    [   66.829303]  platform_shutdown+0x28/0x40
    [   66.833330]  device_shutdown+0x158/0x330
    [   66.837357]  kernel_restart+0x40/0xa0
    [   66.841122]  __do_sys_reboot+0x228/0x250
    [   66.845148]  __arm64_sys_reboot+0x28/0x34
    [   66.849264]  el0_svc_common.constprop.0+0x74/0x190
    [   66.854187]  do_el0_svc+0x24/0x90
    [   66.857595]  el0_svc+0x14/0x20
    [   66.860739]  el0_sync_handler+0x1a4/0x1b0
    [   66.864858]  el0_sync+0x174/0x180
    [   66.868269] Code: 1ac020a0 2a000273 eb02007f 54ffff01 (f9400285)
    [   66.874525] ---[ end trace 20dedb2a3229fec8 ]---
    
    Fixes: 9d5cbf5fe46e ("drm/msm: add shutdown support for display platform_driver")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fda26d2f7e165a7cfab92fb7e3145973037ff02
Author: Jean-Philippe Brucker <jean-philippe@linaro.org>
Date:   Fri Mar 19 12:25:54 2021 +0100

    libbpf: Fix BTF dump of pointer-to-array-of-struct
    
    [ Upstream commit 901ee1d750f29a335423eeb9463c3ca461ca18c2 ]
    
    The vmlinux.h generated from BTF is invalid when building
    drivers/phy/ti/phy-gmii-sel.c with clang:
    
    vmlinux.h:61702:27: error: array type has incomplete element type ‘struct reg_field’
    61702 |  const struct reg_field (*regfields)[3];
          |                           ^~~~~~~~~
    
    bpftool generates a forward declaration for this struct regfield, which
    compilers aren't happy about. Here's a simplified reproducer:
    
            struct inner {
                    int val;
            };
            struct outer {
                    struct inner (*ptr_to_array)[2];
            } A;
    
    After build with clang -> bpftool btf dump c -> clang/gcc:
    ./def-clang.h:11:23: error: array has incomplete element type 'struct inner'
            struct inner (*ptr_to_array)[2];
    
    Member ptr_to_array of struct outer is a pointer to an array of struct
    inner. In the DWARF generated by clang, struct outer appears before
    struct inner, so when converting BTF of struct outer into C, bpftool
    issues a forward declaration to struct inner. With GCC the DWARF info is
    reversed so struct inner gets fully defined.
    
    That forward declaration is not sufficient when compilers handle an
    array of the struct, even when it's only used through a pointer. Note
    that we can trigger the same issue with an intermediate typedef:
    
            struct inner {
                    int val;
            };
            typedef struct inner inner2_t[2];
            struct outer {
                    inner2_t *ptr_to_array;
            } A;
    
    Becomes:
    
            struct inner;
            typedef struct inner inner2_t[2];
    
    And causes:
    
    ./def-clang.h:10:30: error: array has incomplete element type 'struct inner'
            typedef struct inner inner2_t[2];
    
    To fix this, clear through_ptr whenever we encounter an intermediate
    array, to make the inner struct part of a strong link and force full
    declaration.
    
    Fixes: 351131b51c7a ("libbpf: add btf_dump API for BTF-to-C conversion")
    Signed-off-by: Jean-Philippe Brucker <jean-philippe@linaro.org>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20210319112554.794552-2-jean-philippe@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f71aacd6c9202a89e9dafcb910fce439b276590
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Fri Mar 19 22:33:14 2021 +0800

    selftests: forwarding: vxlan_bridge_1d: Fix vxlan ecn decapsulate value
    
    [ Upstream commit 5aa3c334a449bab24519c4967f5ac2b3304c8dcf ]
    
    The ECN bit defines ECT(1) = 1, ECT(0) = 2. So inner 0x02 + outer 0x01
    should be inner ECT(0) + outer ECT(1). Based on the description of
    __INET_ECN_decapsulate, the final decapsulate value should be
    ECT(1). So fix the test expect value to 0x01.
    
    Before the fix:
    TEST: VXLAN: ECN decap: 01/02->0x02                                 [FAIL]
            Expected to capture 10 packets, got 0.
    
    After the fix:
    TEST: VXLAN: ECN decap: 01/02->0x01                                 [ OK ]
    
    Fixes: a0b61f3d8ebf ("selftests: forwarding: vxlan_bridge_1d: Add an ECN decap test")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ecf6d486e4517cebd7403f9dc5d05cf9bcf4022
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Fri Mar 19 13:44:22 2021 +0000

    net: stmmac: dwmac-sun8i: Provide TX and RX fifo sizes
    
    [ Upstream commit 014dfa26ce1c647af09bf506285ef67e0e3f0a6b ]
    
    MTU cannot be changed on dwmac-sun8i. (ip link set eth0 mtu xxx returning EINVAL)
    This is due to tx_fifo_size being 0, since this value is used to compute valid
    MTU range.
    Like dwmac-sunxi (with commit 806fd188ce2a ("net: stmmac: dwmac-sunxi: Provide TX and RX fifo sizes"))
    dwmac-sun8i need to have tx and rx fifo sizes set.
    I have used values from datasheets.
    After this patch, setting a non-default MTU (like 1000) value works and network is still useable.
    
    Tested-on: sun8i-h3-orangepi-pc
    Tested-on: sun8i-r40-bananapi-m2-ultra
    Tested-on: sun50i-a64-bananapi-m64
    Tested-on: sun50i-h5-nanopi-neo-plus2
    Tested-on: sun50i-h6-pine-h64
    Fixes: 9f93ac8d408 ("net-next: stmmac: Add dwmac-sun8i")
    Reported-by: Belisko Marek <marek.belisko@gmail.com>
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1f103ca31c51366a39e215b5bf1c2fd17a0c2601
Author: Hayes Wang <hayeswang@realtek.com>
Date:   Fri Mar 19 15:37:21 2021 +0800

    r8152: limit the RX buffer size of RTL8153A for USB 2.0
    
    [ Upstream commit f91a50d8b51b5c8ef1cfb08115a005bba4250507 ]
    
    If the USB host controller is EHCI, the throughput is reduced from
    300Mb/s to 60Mb/s, when the rx buffer size is modified from 16K to
    32K.
    
    According to the EHCI spec, the maximum size of the qTD is 20K.
    Therefore, when the driver uses more than 20K buffer, the latency
    time of EHCI would be increased. And, it let the RTL8153A get worse
    throughput.
    
    However, the driver uses alloc_pages() for rx buffer, so I limit
    the rx buffer to 16K rather than 20K.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=205923
    Fixes: ec5791c202ac ("r8152: separate the rx buffer size")
    Reported-by: Robert Davies <robdavies1977@gmail.com>
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 048d0bf8ad19c8e690484085a8233ccdf05d31e8
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Mar 18 16:57:49 2021 +0100

    net: cdc-phonet: fix data-interface release on probe failure
    
    [ Upstream commit c79a707072fe3fea0e3c92edee6ca85c1e53c29f ]
    
    Set the disconnected flag before releasing the data interface in case
    netdev registration fails to avoid having the disconnect callback try to
    deregister the never registered netdev (and trigger a WARN_ON()).
    
    Fixes: 87cf65601e17 ("USB host CDC Phonet network interface driver")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecc62c3b1b57da016a461a401fc037607aa1f86d
Author: Hariprasad Kelam <hkelam@marvell.com>
Date:   Thu Mar 18 19:45:48 2021 +0530

    octeontx2-af: fix infinite loop in unmapping NPC counter
    
    [ Upstream commit 64451b98306bf1334a62bcd020ec92bdb4cb68db ]
    
    unmapping npc counter works in a way by traversing all mcam
    entries to find which mcam rule is associated with counter.
    But loop cursor variable 'entry' is not incremented before
    checking next mcam entry which resulting in infinite loop.
    
    This in turn hogs the kworker thread forever and no other
    mbox message is processed by AF driver after that.
    Fix this by updating entry value before checking next
    mcam entry.
    
    Fixes: a958dd59f9ce ("octeontx2-af: Map or unmap NPC MCAM entry and counter")
    Signed-off-by: Hariprasad Kelam <hkelam@marvell.com>
    Signed-off-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e9a48ceccae740108fcdd12a4a73b9267c41249
Author: Geetha sowjanya <gakula@marvell.com>
Date:   Thu Mar 18 19:45:46 2021 +0530

    octeontx2-af: Fix irq free in rvu teardown
    
    [ Upstream commit ae2619dd4fccdad9876aa5f900bd85484179c50f ]
    
    Current devlink code try to free already freed irqs as the
    irq_allocate flag is not cleared after free leading to kernel
    crash while removing rvu driver. The patch fixes the irq free
    sequence and clears the irq_allocate flag on free.
    
    Fixes: 7304ac4567bc ("octeontx2-af: Add mailbox IRQ and msg handlers")
    Signed-off-by: Geetha sowjanya <gakula@marvell.com>
    Signed-off-by: Hariprasad Kelam <hkelam@marvell.com>
    Signed-off-by: Sunil Kovvuri Goutham <sgoutham@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e158238012297bfa601f417ac4d2b55118ccaeac
Author: Kumar Kartikeya Dwivedi <memxor@gmail.com>
Date:   Wed Mar 17 17:28:58 2021 +0530

    libbpf: Use SOCK_CLOEXEC when opening the netlink socket
    
    [ Upstream commit 58bfd95b554f1a23d01228672f86bb489bdbf4ba ]
    
    Otherwise, there exists a small window between the opening and closing
    of the socket fd where it may leak into processes launched by some other
    thread.
    
    Fixes: 949abbe88436 ("libbpf: add function to setup XDP")
    Signed-off-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Link: https://lore.kernel.org/bpf/20210317115857.6536-1-memxor@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7722378c4a0abf67f962b4b7811107782d9e7645
Author: Louis Peens <louis.peens@corigine.com>
Date:   Tue Mar 16 19:13:10 2021 +0100

    nfp: flower: fix pre_tun mask id allocation
    
    [ Upstream commit d8ce0275e45ec809a33f98fc080fe7921b720dfb ]
    
    pre_tun_rule flows does not follow the usual add-flow path, instead
    they are used to update the pre_tun table on the firmware. This means
    that if the mask-id gets allocated here the firmware will never see the
    "NFP_FL_META_FLAG_MANAGE_MASK" flag for the specific mask id, which
    triggers the allocation on the firmware side. This leads to the firmware
    mask being corrupted and causing all sorts of strange behaviour.
    
    Fixes: f12725d98cbe ("nfp: flower: offload pre-tunnel rules")
    Signed-off-by: Louis Peens <louis.peens@corigine.com>
    Signed-off-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 060deac22f8761cba568157c9af3c4ef0308e3fc
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Feb 12 11:22:14 2021 +0100

    mac80211: fix rate mask reset
    
    [ Upstream commit 1944015fe9c1d9fa5e9eb7ffbbb5ef8954d6753b ]
    
    Coverity reported the strange "if (~...)" condition that's
    always true. It suggested that ! was intended instead of ~,
    but upon further analysis I'm convinced that what really was
    intended was a comparison to 0xff/0xffff (in HT/VHT cases
    respectively), since this indicates that all of the rates
    are enabled.
    
    Change the comparison accordingly.
    
    I'm guessing this never really mattered because a reset to
    not having a rate mask is basically equivalent to having a
    mask that enables all rates.
    
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Fixes: 2ffbe6d33366 ("mac80211: fix and optimize MCS mask handling")
    Fixes: b119ad6e726c ("mac80211: add rate mask logic for vht rates")
    Reviewed-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20210212112213.36b38078f569.I8546a20c80bc1669058eb453e213630b846e107b@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52cc7bad12755a922ecc7b256cb56930392ae170
Author: Torin Cooper-Bennun <torin@maxiluxsystems.com>
Date:   Wed Mar 3 14:43:51 2021 +0000

    can: m_can: m_can_rx_peripheral(): fix RX being blocked by errors
    
    [ Upstream commit e98d9ee64ee2cc9b1d1a8e26610ec4d0392ebe50 ]
    
    For M_CAN peripherals, m_can_rx_handler() was called with quota = 1,
    which caused any error handling to block RX from taking place until
    the next time the IRQ handler is called. This had been observed to
    cause RX to be blocked indefinitely in some cases.
    
    This is fixed by calling m_can_rx_handler with a sensibly high quota.
    
    Fixes: f524f829b75a ("can: m_can: Create a m_can platform framework")
    Link: https://lore.kernel.org/r/20210303144350.4093750-1-torin@maxiluxsystems.com
    Suggested-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Torin Cooper-Bennun <torin@maxiluxsystems.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 059c1996017df7a8af791f8855b148d23b9460c2
Author: Torin Cooper-Bennun <torin@maxiluxsystems.com>
Date:   Wed Mar 3 10:31:52 2021 +0000

    can: m_can: m_can_do_rx_poll(): fix extraneous msg loss warning
    
    [ Upstream commit c0e399f3baf42279f48991554240af8c457535d1 ]
    
    Message loss from RX FIFO 0 is already handled in
    m_can_handle_lost_msg(), with netdev output included.
    
    Removing this warning also improves driver performance under heavy
    load, where m_can_do_rx_poll() may be called many times before this
    interrupt is cleared, causing this message to be output many
    times (thanks Mariusz Madej for this report).
    
    Fixes: e0d1f4816f2a ("can: m_can: add Bosch M_CAN controller support")
    Link: https://lore.kernel.org/r/20210303103151.3760532-1-torin@maxiluxsystems.com
    Reported-by: Mariusz Madej <mariusz.madej@xtrack.com>
    Signed-off-by: Torin Cooper-Bennun <torin@maxiluxsystems.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e484616a9600e27d61b7cb316c3b0c300ebce606
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Mon Mar 1 21:55:40 2021 -0500

    can: c_can: move runtime PM enable/disable to c_can_platform
    
    [ Upstream commit 6e2fe01dd6f98da6cae8b07cd5cfa67abc70d97d ]
    
    Currently doing modprobe c_can_pci will make the kernel complain:
    
        Unbalanced pm_runtime_enable!
    
    this is caused by pm_runtime_enable() called before pm is initialized.
    
    This fix is similar to 227619c3ff7c, move those pm_enable/disable code
    to c_can_platform.
    
    Fixes: 4cdd34b26826 ("can: c_can: Add runtime PM support to Bosch C_CAN/D_CAN controller")
    Link: http://lore.kernel.org/r/20210302025542.987600-1-ztong0001@gmail.com
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Tested-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f71965ee897d2841dbb499133fca81f26330c58
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sun Feb 28 21:45:11 2021 -0500

    can: c_can_pci: c_can_pci_remove(): fix use-after-free
    
    [ Upstream commit 0429d6d89f97ebff4f17f13f5b5069c66bde8138 ]
    
    There is a UAF in c_can_pci_remove(). dev is released by
    free_c_can_dev() and is used by pci_iounmap(pdev, priv->base) later.
    To fix this issue, save the mmio address before releasing dev.
    
    Fixes: 5b92da0443c2 ("c_can_pci: generic module for C_CAN/D_CAN on PCI")
    Link: https://lore.kernel.org/r/20210301024512.539039-1-ztong0001@gmail.com
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42e49b3aa536d2274a39d12b81d6ca55ad4109b6
Author: Jimmy Assarsson <extja@kvaser.com>
Date:   Tue Mar 9 10:17:23 2021 +0100

    can: kvaser_pciefd: Always disable bus load reporting
    
    [ Upstream commit 7c6e6bce08f918b64459415f58061d4d6df44994 ]
    
    Under certain circumstances, when switching from Kvaser's linuxcan driver
    (kvpciefd) to the SocketCAN driver (kvaser_pciefd), the bus load reporting
    is not disabled.
    This is flooding the kernel log with prints like:
    [3485.574677] kvaser_pciefd 0000:02:00.0: Received unexpected packet type 0x00000009
    
    Always put the controller in the expected state, instead of assuming that
    bus load reporting is inactive.
    
    Note: If bus load reporting is enabled when the driver is loaded, you will
          still get a number of bus load packages (and printouts), before it is
          disabled.
    
    Fixes: 26ad340e582d ("can: kvaser_pciefd: Add driver for Kvaser PCIEcan devices")
    Link: https://lore.kernel.org/r/20210309091724.31262-1-jimmyassarsson@gmail.com
    Signed-off-by: Jimmy Assarsson <extja@kvaser.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3ca9fbfcdf5343eba57596eb15c60299b152a35
Author: Angelo Dureghello <angelo@kernel-space.org>
Date:   Tue Mar 16 00:15:10 2021 +0100

    can: flexcan: flexcan_chip_freeze(): fix chip freeze for missing bitrate
    
    [ Upstream commit 47c5e474bc1e1061fb037d13b5000b38967eb070 ]
    
    For cases when flexcan is built-in, bitrate is still not set at
    registering. So flexcan_chip_freeze() generates:
    
    [    1.860000] *** ZERO DIVIDE ***   FORMAT=4
    [    1.860000] Current process id is 1
    [    1.860000] BAD KERNEL TRAP: 00000000
    [    1.860000] PC: [<402e70c8>] flexcan_chip_freeze+0x1a/0xa8
    
    To allow chip freeze, using an hardcoded timeout when bitrate is still
    not set.
    
    Fixes: ec15e27cc890 ("can: flexcan: enable RX FIFO after FRZ/HALT valid")
    Link: https://lore.kernel.org/r/20210315231510.650593-1-angelo@kernel-space.org
    Signed-off-by: Angelo Dureghello <angelo@kernel-space.org>
    [mkl: use if instead of ? operator]
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb4a6ac4851ac773eb702d4cbbeec9f28e482669
Author: Stephane Grosjean <s.grosjean@peak-system.com>
Date:   Tue Mar 9 09:21:27 2021 +0100

    can: peak_usb: add forgotten supported devices
    
    [ Upstream commit 59ec7b89ed3e921cd0625a8c83f31a30d485fdf8 ]
    
    Since the peak_usb driver also supports the CAN-USB interfaces
    "PCAN-USB X6" and "PCAN-Chip USB" from PEAK-System GmbH, this patch adds
    their names to the list of explicitly supported devices.
    
    Fixes: ea8b65b596d7 ("can: usb: Add support of PCAN-Chip USB stamp module")
    Fixes: f00b534ded60 ("can: peak: Add support for PCAN-USB X6 USB interface")
    Link: https://lore.kernel.org/r/20210309082128.23125-3-s.grosjean@peak-system.com
    Signed-off-by: Stephane Grosjean <s.grosjean@peak-system.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a8046daba17190997e598cf6055fef7dd1b6041
Author: Alexander Ovechkin <ovov@yandex-team.ru>
Date:   Mon Mar 15 14:05:45 2021 +0300

    tcp: relookup sock for RST+ACK packets handled by obsolete req sock
    
    [ Upstream commit 7233da86697efef41288f8b713c10c2499cffe85 ]
    
    Currently tcp_check_req can be called with obsolete req socket for which big
    socket have been already created (because of CPU race or early demux
    assigning req socket to multiple packets in gro batch).
    
    Commit e0f9759f530bf789e984 ("tcp: try to keep packet if SYN_RCV race
    is lost") added retry in case when tcp_check_req is called for PSH|ACK packet.
    But if client sends RST+ACK immediatly after connection being
    established (it is performing healthcheck, for example) retry does not
    occur. In that case tcp_check_req tries to close req socket,
    leaving big socket active.
    
    Fixes: e0f9759f530 ("tcp: try to keep packet if SYN_RCV race is lost")
    Signed-off-by: Alexander Ovechkin <ovov@yandex-team.ru>
    Reported-by: Oleg Senin <olegsenin@yandex-team.ru>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67319a8df5d37359a1d002a3b37193fc10ba61e7
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Mar 15 11:31:09 2021 +0100

    netfilter: ctnetlink: fix dump of the expect mask attribute
    
    [ Upstream commit b58f33d49e426dc66e98ed73afb5d97b15a25f2d ]
    
    Before this change, the mask is never included in the netlink message, so
    "conntrack -E expect" always prints 0.0.0.0.
    
    In older kernels the l3num callback struct was passed as argument, based
    on tuple->src.l3num. After the l3num indirection got removed, the call
    chain is based on m.src.l3num, but this value is 0xffff.
    
    Init l3num to the correct value.
    
    Fixes: f957be9d349a3 ("netfilter: conntrack: remove ctnetlink callbacks from l3 protocol trackers")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4dd0b36cce4cdfe7d75ba935e74d68c2aac91b4
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Tue Mar 9 11:22:14 2021 +0800

    selftests/bpf: Set gopt opt_class to 0 if get tunnel opt failed
    
    [ Upstream commit 31254dc9566221429d2cfb45fd5737985d70f2b6 ]
    
    When fixing the bpf test_tunnel.sh geneve failure. I only fixed the IPv4
    part but forgot the IPv6 issue. Similar with the IPv4 fixes 557c223b643a
    ("selftests/bpf: No need to drop the packet when there is no geneve opt"),
    when there is no tunnel option and bpf_skb_get_tunnel_opt() returns error,
    there is no need to drop the packets and break all geneve rx traffic.
    Just set opt_class to 0 and keep returning TC_ACT_OK at the end.
    
    Fixes: 557c223b643a ("selftests/bpf: No need to drop the packet when there is no geneve opt")
    Fixes: 933a741e3b82 ("selftests/bpf: bpf tunnel test.")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: William Tu <u9012063@gmail.com>
    Link: https://lore.kernel.org/bpf/20210309032214.2112438-1-liuhangbin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d06cabe3bf454278f48f0670b31d8a5c6c72114
Author: Dylan Hung <dylan_hung@aspeedtech.com>
Date:   Fri Mar 12 11:04:05 2021 +1030

    ftgmac100: Restart MAC HW once
    
    [ Upstream commit 6897087323a2fde46df32917462750c069668b2f ]
    
    The interrupt handler may set the flag to reset the mac in the future,
    but that flag is not cleared once the reset has occurred.
    
    Fixes: 10cbd6407609 ("ftgmac100: Rework NAPI & interrupts handling")
    Signed-off-by: Dylan Hung <dylan_hung@aspeedtech.com>
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81c591299da3d122adba3c8d9644fbcc479963aa
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Wed Mar 10 20:01:40 2021 -0800

    net/qlcnic: Fix a use after free in qlcnic_83xx_get_minidump_template
    
    [ Upstream commit db74623a3850db99cb9692fda9e836a56b74198d ]
    
    In qlcnic_83xx_get_minidump_template, fw_dump->tmpl_hdr was freed by
    vfree(). But unfortunately, it is used when extended is true.
    
    Fixes: 7061b2bdd620e ("qlogic: Deletion of unnecessary checks before two function calls")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d00db63edd0ac756683f08a258ae13aabfdf0440
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Sun Feb 28 17:44:23 2021 +0800

    e1000e: Fix error handling in e1000_set_d0_lplu_state_82571
    
    [ Upstream commit b52912b8293f2c496f42583e65599aee606a0c18 ]
    
    There is one e1e_wphy() call in e1000_set_d0_lplu_state_82571
    that we have caught its return value but lack further handling.
    Check and terminate the execution flow just like other e1e_wphy()
    in this function.
    
    Fixes: bc7f75fa9788 ("[E1000E]: New pci-express e1000 driver (currently for ICH9 devices only)")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Acked-by: Sasha Neftin <sasha.neftin@intel.com>
    Tested-by: Dvora Fuxbrumer <dvorax.fuxbrumer@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f02a56584133deb421fc507f7bfec03e9ae22a7
Author: Vitaly Lifshits <vitaly.lifshits@intel.com>
Date:   Wed Oct 21 14:59:37 2020 +0300

    e1000e: add rtnl_lock() to e1000_reset_task
    
    [ Upstream commit 21f857f0321d0d0ea9b1a758bd55dc63d1cb2437 ]
    
    A possible race condition was found in e1000_reset_task,
    after discovering a similar issue in igb driver via
    commit 024a8168b749 ("igb: reinit_locked() should be called
    with rtnl_lock").
    
    Added rtnl_lock() and rtnl_unlock() to avoid this.
    
    Fixes: bc7f75fa9788 ("[E1000E]: New pci-express e1000 driver (currently for ICH9 devices only)")
    Suggested-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Vitaly Lifshits <vitaly.lifshits@intel.com>
    Tested-by: Dvora Fuxbrumer <dvorax.fuxbrumer@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71fa8051f2f478a01d483c6d778d78e3cd0b0269
Author: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
Date:   Sat Feb 20 00:36:48 2021 +0800

    igc: Fix Supported Pause Frame Link Setting
    
    [ Upstream commit 9a4a1cdc5ab52118c1f2b216f4240830b6528d32 ]
    
    The Supported Pause Frame always display "No" even though the Advertised
    pause frame showing the correct setting based on the pause parameters via
    ethtool. Set bit in link_ksettings to "Supported" for Pause Frame.
    
    Before output:
    Supported pause frame use: No
    
    Expected output:
    Supported pause frame use: Symmetric
    
    Fixes: 8c5ad0dae93c ("igc: Add ethtool support")
    Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
    Reviewed-by: Malli C <mallikarjuna.chilakala@intel.com>
    Tested-by: Dvora Fuxbrumer <dvorax.fuxbrumer@linux.intel.com>
    Acked-by: Sasha Neftin <sasha.neftin@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35d8a780fa2ba181ad41924ccd9cb348126e094c
Author: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
Date:   Sat Feb 20 00:36:47 2021 +0800

    igc: Fix Pause Frame Advertising
    
    [ Upstream commit 8876529465c368beafd51a70f79d7a738f2aadf4 ]
    
    Fix Pause Frame Advertising when getting the advertisement via ethtool.
    Remove setting the "advertising" bit in link_ksettings during default
    case when Tx and Rx are in off state with Auto Negotiate off.
    
    Below is the original output of advertisement link during Tx and Rx off:
    Advertised pause frame use: Symmetric Receive-only
    
    Expected output:
    Advertised pause frame use: No
    
    Fixes: 8c5ad0dae93c ("igc: Add ethtool support")
    Signed-off-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
    Reviewed-by: Malli C <mallikarjuna.chilakala@intel.com>
    Acked-by: Sasha Neftin <sasha.neftin@intel.com>
    Tested-by: Dvora Fuxbrumer <dvorax.fuxbrumer@linux.intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da8af444b32566696de125895af2bc88bde0faac
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed Mar 10 14:17:58 2021 -0800

    net: dsa: bcm_sf2: Qualify phydev->dev_flags based on port
    
    [ Upstream commit 47142ed6c34d544ae9f0463e58d482289cbe0d46 ]
    
    Similar to commit 92696286f3bb37ba50e4bd8d1beb24afb759a799 ("net:
    bcmgenet: Set phydev->dev_flags only for internal PHYs") we need to
    qualify the phydev->dev_flags based on whether the port is connected to
    an internal or external PHY otherwise we risk having a flags collision
    with a completely different interpretation depending on the driver.
    
    Fixes: aa9aef77c761 ("net: dsa: bcm_sf2: communicate integrated PHY revision to PHY driver")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 267b79a11046110590ccc360c851fb57ffd34b6c
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Mar 10 08:26:41 2021 -0800

    net: sched: validate stab values
    
    [ Upstream commit e323d865b36134e8c5c82c834df89109a5c60dab ]
    
    iproute2 package is well behaved, but malicious user space can
    provide illegal shift values and trigger UBSAN reports.
    
    Add stab parameter to red_check_params() to validate user input.
    
    syzbot reported:
    
    UBSAN: shift-out-of-bounds in ./include/net/red.h:312:18
    shift exponent 111 is too large for 64-bit type 'long unsigned int'
    CPU: 1 PID: 14662 Comm: syz-executor.3 Not tainted 5.12.0-rc2-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x141/0x1d7 lib/dump_stack.c:120
     ubsan_epilogue+0xb/0x5a lib/ubsan.c:148
     __ubsan_handle_shift_out_of_bounds.cold+0xb1/0x181 lib/ubsan.c:327
     red_calc_qavg_from_idle_time include/net/red.h:312 [inline]
     red_calc_qavg include/net/red.h:353 [inline]
     choke_enqueue.cold+0x18/0x3dd net/sched/sch_choke.c:221
     __dev_xmit_skb net/core/dev.c:3837 [inline]
     __dev_queue_xmit+0x1943/0x2e00 net/core/dev.c:4150
     neigh_hh_output include/net/neighbour.h:499 [inline]
     neigh_output include/net/neighbour.h:508 [inline]
     ip6_finish_output2+0x911/0x1700 net/ipv6/ip6_output.c:117
     __ip6_finish_output net/ipv6/ip6_output.c:182 [inline]
     __ip6_finish_output+0x4c1/0xe10 net/ipv6/ip6_output.c:161
     ip6_finish_output+0x35/0x200 net/ipv6/ip6_output.c:192
     NF_HOOK_COND include/linux/netfilter.h:290 [inline]
     ip6_output+0x1e4/0x530 net/ipv6/ip6_output.c:215
     dst_output include/net/dst.h:448 [inline]
     NF_HOOK include/linux/netfilter.h:301 [inline]
     NF_HOOK include/linux/netfilter.h:295 [inline]
     ip6_xmit+0x127e/0x1eb0 net/ipv6/ip6_output.c:320
     inet6_csk_xmit+0x358/0x630 net/ipv6/inet6_connection_sock.c:135
     dccp_transmit_skb+0x973/0x12c0 net/dccp/output.c:138
     dccp_send_reset+0x21b/0x2b0 net/dccp/output.c:535
     dccp_finish_passive_close net/dccp/proto.c:123 [inline]
     dccp_finish_passive_close+0xed/0x140 net/dccp/proto.c:118
     dccp_terminate_connection net/dccp/proto.c:958 [inline]
     dccp_close+0xb3c/0xe60 net/dccp/proto.c:1028
     inet_release+0x12e/0x280 net/ipv4/af_inet.c:431
     inet6_release+0x4c/0x70 net/ipv6/af_inet6.c:478
     __sock_release+0xcd/0x280 net/socket.c:599
     sock_close+0x18/0x20 net/socket.c:1258
     __fput+0x288/0x920 fs/file_table.c:280
     task_work_run+0xdd/0x1a0 kernel/task_work.c:140
     tracehook_notify_resume include/linux/tracehook.h:189 [inline]
    
    Fixes: 8afa10cbe281 ("net_sched: red: Avoid illegal values")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76909a298ebb6bbc5b1fdbcf4656e0999df55590
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Mar 10 01:56:36 2021 -0800

    macvlan: macvlan_count_rx() needs to be aware of preemption
    
    [ Upstream commit dd4fa1dae9f4847cc1fd78ca468ad69e16e5db3e ]
    
    macvlan_count_rx() can be called from process context, it is thus
    necessary to disable preemption before calling u64_stats_update_begin()
    
    syzbot was able to spot this on 32bit arch:
    
    WARNING: CPU: 1 PID: 4632 at include/linux/seqlock.h:271 __seqprop_assert include/linux/seqlock.h:271 [inline]
    WARNING: CPU: 1 PID: 4632 at include/linux/seqlock.h:271 __seqprop_assert.constprop.0+0xf0/0x11c include/linux/seqlock.h:269
    Modules linked in:
    Kernel panic - not syncing: panic_on_warn set ...
    CPU: 1 PID: 4632 Comm: kworker/1:3 Not tainted 5.12.0-rc2-syzkaller #0
    Hardware name: ARM-Versatile Express
    Workqueue: events macvlan_process_broadcast
    Backtrace:
    [<82740468>] (dump_backtrace) from [<827406dc>] (show_stack+0x18/0x1c arch/arm/kernel/traps.c:252)
     r7:00000080 r6:60000093 r5:00000000 r4:8422a3c4
    [<827406c4>] (show_stack) from [<82751b58>] (__dump_stack lib/dump_stack.c:79 [inline])
    [<827406c4>] (show_stack) from [<82751b58>] (dump_stack+0xb8/0xe8 lib/dump_stack.c:120)
    [<82751aa0>] (dump_stack) from [<82741270>] (panic+0x130/0x378 kernel/panic.c:231)
     r7:830209b4 r6:84069ea4 r5:00000000 r4:844350d0
    [<82741140>] (panic) from [<80244924>] (__warn+0xb0/0x164 kernel/panic.c:605)
     r3:8404ec8c r2:00000000 r1:00000000 r0:830209b4
     r7:0000010f
    [<80244874>] (__warn) from [<82741520>] (warn_slowpath_fmt+0x68/0xd4 kernel/panic.c:628)
     r7:81363f70 r6:0000010f r5:83018e50 r4:00000000
    [<827414bc>] (warn_slowpath_fmt) from [<81363f70>] (__seqprop_assert include/linux/seqlock.h:271 [inline])
    [<827414bc>] (warn_slowpath_fmt) from [<81363f70>] (__seqprop_assert.constprop.0+0xf0/0x11c include/linux/seqlock.h:269)
     r8:5a109000 r7:0000000f r6:a568dac0 r5:89802300 r4:00000001
    [<81363e80>] (__seqprop_assert.constprop.0) from [<81364af0>] (u64_stats_update_begin include/linux/u64_stats_sync.h:128 [inline])
    [<81363e80>] (__seqprop_assert.constprop.0) from [<81364af0>] (macvlan_count_rx include/linux/if_macvlan.h:47 [inline])
    [<81363e80>] (__seqprop_assert.constprop.0) from [<81364af0>] (macvlan_broadcast+0x154/0x26c drivers/net/macvlan.c:291)
     r5:89802300 r4:8a927740
    [<8136499c>] (macvlan_broadcast) from [<81365020>] (macvlan_process_broadcast+0x258/0x2d0 drivers/net/macvlan.c:317)
     r10:81364f78 r9:8a86d000 r8:8a9c7e7c r7:8413aa5c r6:00000000 r5:00000000
     r4:89802840
    [<81364dc8>] (macvlan_process_broadcast) from [<802696a4>] (process_one_work+0x2d4/0x998 kernel/workqueue.c:2275)
     r10:00000008 r9:8404ec98 r8:84367a02 r7:ddfe6400 r6:ddfe2d40 r5:898dac80
     r4:8a86d43c
    [<802693d0>] (process_one_work) from [<80269dcc>] (worker_thread+0x64/0x54c kernel/workqueue.c:2421)
     r10:00000008 r9:8a9c6000 r8:84006d00 r7:ddfe2d78 r6:898dac94 r5:ddfe2d40
     r4:898dac80
    [<80269d68>] (worker_thread) from [<80271f40>] (kthread+0x184/0x1a4 kernel/kthread.c:292)
     r10:85247e64 r9:898dac80 r8:80269d68 r7:00000000 r6:8a9c6000 r5:89a2ee40
     r4:8a97bd00
    [<80271dbc>] (kthread) from [<80200114>] (ret_from_fork+0x14/0x20 arch/arm/kernel/entry-common.S:158)
    Exception stack(0x8a9c7fb0 to 0x8a9c7ff8)
    
    Fixes: 412ca1550cbe ("macvlan: Move broadcasts into a work queue")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6b6c7a92fe594b107ab9ec26efa0585d1dbcee6
Author: Wei Wang <weiwan@google.com>
Date:   Tue Mar 9 18:20:35 2021 -0800

    ipv6: fix suspecious RCU usage warning
    
    [ Upstream commit 28259bac7f1dde06d8ba324e222bbec9d4e92f2b ]
    
    Syzbot reported the suspecious RCU usage in nexthop_fib6_nh() when
    called from ipv6_route_seq_show(). The reason is ipv6_route_seq_start()
    calls rcu_read_lock_bh(), while nexthop_fib6_nh() calls
    rcu_dereference_rtnl().
    The fix proposed is to add a variant of nexthop_fib6_nh() to use
    rcu_dereference_bh_rtnl() for ipv6_route_seq_show().
    
    The reported trace is as follows:
    ./include/net/nexthop.h:416 suspicious rcu_dereference_check() usage!
    
    other info that might help us debug this:
    
    rcu_scheduler_active = 2, debug_locks = 1
    2 locks held by syz-executor.0/17895:
         at: seq_read+0x71/0x12a0 fs/seq_file.c:169
         at: seq_file_net include/linux/seq_file_net.h:19 [inline]
         at: ipv6_route_seq_start+0xaf/0x300 net/ipv6/ip6_fib.c:2616
    
    stack backtrace:
    CPU: 1 PID: 17895 Comm: syz-executor.0 Not tainted 4.15.0-syzkaller #0
    Call Trace:
     [<ffffffff849edf9e>] __dump_stack lib/dump_stack.c:17 [inline]
     [<ffffffff849edf9e>] dump_stack+0xd8/0x147 lib/dump_stack.c:53
     [<ffffffff8480b7fa>] lockdep_rcu_suspicious+0x153/0x15d kernel/locking/lockdep.c:5745
     [<ffffffff8459ada6>] nexthop_fib6_nh include/net/nexthop.h:416 [inline]
     [<ffffffff8459ada6>] ipv6_route_native_seq_show net/ipv6/ip6_fib.c:2488 [inline]
     [<ffffffff8459ada6>] ipv6_route_seq_show+0x436/0x7a0 net/ipv6/ip6_fib.c:2673
     [<ffffffff81c556df>] seq_read+0xccf/0x12a0 fs/seq_file.c:276
     [<ffffffff81dbc62c>] proc_reg_read+0x10c/0x1d0 fs/proc/inode.c:231
     [<ffffffff81bc28ae>] do_loop_readv_writev fs/read_write.c:714 [inline]
     [<ffffffff81bc28ae>] do_loop_readv_writev fs/read_write.c:701 [inline]
     [<ffffffff81bc28ae>] do_iter_read+0x49e/0x660 fs/read_write.c:935
     [<ffffffff81bc81ab>] vfs_readv+0xfb/0x170 fs/read_write.c:997
     [<ffffffff81c88847>] kernel_readv fs/splice.c:361 [inline]
     [<ffffffff81c88847>] default_file_splice_read+0x487/0x9c0 fs/splice.c:416
     [<ffffffff81c86189>] do_splice_to+0x129/0x190 fs/splice.c:879
     [<ffffffff81c86f66>] splice_direct_to_actor+0x256/0x890 fs/splice.c:951
     [<ffffffff81c8777d>] do_splice_direct+0x1dd/0x2b0 fs/splice.c:1060
     [<ffffffff81bc4747>] do_sendfile+0x597/0xce0 fs/read_write.c:1459
     [<ffffffff81bca205>] SYSC_sendfile64 fs/read_write.c:1520 [inline]
     [<ffffffff81bca205>] SyS_sendfile64+0x155/0x170 fs/read_write.c:1506
     [<ffffffff81015fcf>] do_syscall_64+0x1ff/0x310 arch/x86/entry/common.c:305
     [<ffffffff84a00076>] entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    Fixes: f88d8ea67fbdb ("ipv6: Plumb support for nexthop object in a fib6_info")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Wei Wang <weiwan@google.com>
    Cc: David Ahern <dsahern@kernel.org>
    Cc: Ido Schimmel <idosch@idosch.org>
    Cc: Petr Machata <petrm@nvidia.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Reviewed-by: Ido Schimmel <idosch@nvidia.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40fa14bbe3fec86b351e94943185c2269fb5a5ee
Author: Maor Dickman <maord@nvidia.com>
Date:   Tue Feb 16 13:39:18 2021 +0200

    net/mlx5e: Don't match on Geneve options in case option masks are all zero
    
    [ Upstream commit 385d40b042e60aa0b677d7b400a0fefb44bcbaf4 ]
    
    The cited change added offload support for Geneve options without verifying
    the validity of the options masks, this caused offload of rules with match
    on Geneve options with class,type and data masks which are zero to fail.
    
    Fix by ignoring the match on Geneve options in case option masks are
    all zero.
    
    Fixes: 9272e3df3023 ("net/mlx5e: Geneve, Add support for encap/decap flows offload")
    Signed-off-by: Maor Dickman <maord@nvidia.com>
    Reviewed-by: Roi Dayan <roid@nvidia.com>
    Reviewed-by: Oz Shlomo <ozsh@nvidia.com>
    Reviewed-by: Yevgeny Kliteynik <kliteyn@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e64e327c7fab1c8ff80a5714932ec75a4ecf2a14
Author: Georgi Valkov <gvalkov@abv.bg>
Date:   Mon Mar 8 10:30:38 2021 -0800

    libbpf: Fix INSTALL flag order
    
    [ Upstream commit e7fb6465d4c8e767e39cbee72464e0060ab3d20c ]
    
    It was reported ([0]) that having optional -m flag between source and
    destination arguments in install command breaks bpftools cross-build
    on MacOS. Move -m to the front to fix this issue.
    
      [0] https://github.com/openwrt/openwrt/pull/3959
    
    Fixes: 7110d80d53f4 ("libbpf: Makefile set specified permission mode")
    Signed-off-by: Georgi Valkov <gvalkov@abv.bg>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/20210308183038.613432-1-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53f1483984bf36ebd27c5aefac19fa38b48a633d
Author: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
Date:   Wed Mar 3 16:29:03 2021 +0100

    veth: Store queue_mapping independently of XDP prog presence
    
    [ Upstream commit edbea922025169c0e5cdca5ebf7bf5374cc5566c ]
    
    Currently, veth_xmit() would call the skb_record_rx_queue() only when
    there is XDP program loaded on peer interface in native mode.
    
    If peer has XDP prog in generic mode, then netif_receive_generic_xdp()
    has a call to netif_get_rxqueue(skb), so for multi-queue veth it will
    not be possible to grab a correct rxq.
    
    To fix that, store queue_mapping independently of XDP prog presence on
    peer interface.
    
    Fixes: 638264dc9022 ("veth: Support per queue XDP ring")
    Signed-off-by: Maciej Fijalkowski <maciej.fijalkowski@intel.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Toshiaki Makita <toshiaki.makita1@gmail.com>
    Link: https://lore.kernel.org/bpf/20210303152903.11172-1-maciej.fijalkowski@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f259a7fdeb1241bafac7596c707fd2decff0f614
Author: Grygorii Strashko <grygorii.strashko@ti.com>
Date:   Thu Jan 28 21:15:48 2021 +0200

    bus: omap_l3_noc: mark l3 irqs as IRQF_NO_THREAD
    
    [ Upstream commit 7d7275b3e866cf8092bd12553ec53ba26864f7bb ]
    
    The main purpose of l3 IRQs is to catch OCP bus access errors and identify
    corresponding code places by showing call stack, so it's important to
    handle L3 interconnect errors as fast as possible. On RT these IRQs will
    became threaded and will be scheduled much more late from the moment actual
    error occurred so showing completely useless information.
    
    Hence, mark l3 IRQs as IRQF_NO_THREAD so they will not be forced threaded
    on RT or if force_irqthreads = true.
    
    Fixes: 0ee7261c9212 ("drivers: bus: Move the OMAP interconnect driver to drivers/bus/")
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6587d142d0214eb466f9978e25f0575c19b1ea0
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Fri Mar 26 14:32:32 2021 -0400

    dm ioctl: fix out of bounds array access when no devices
    
    commit 4edbe1d7bcffcd6269f3b5eb63f710393ff2ec7a upstream.
    
    If there are not any dm devices, we need to zero the "dev" argument in
    the first structure dm_name_list. However, this can cause out of
    bounds write, because the "needed" variable is zero and len may be
    less than eight.
    
    Fix this bug by reporting DM_BUFFER_FULL_FLAG if the result buffer is
    too small to hold the "nl->dev" value.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b6944f18cec19a1d9767160e973f5754177ba9b
Author: JeongHyeon Lee <jhs2.lee@samsung.com>
Date:   Thu Mar 11 21:10:50 2021 +0900

    dm verity: fix DM_VERITY_OPTS_MAX value
    
    commit 160f99db943224e55906dd83880da1a704c6e6b9 upstream.
    
    Three optional parameters must be accepted at once in a DM verity table, e.g.:
      (verity_error_handling_mode) (ignore_zero_block) (check_at_most_once)
    Fix this to be possible by incrementing DM_VERITY_OPTS_MAX.
    
    Signed-off-by: JeongHyeon Lee <jhs2.lee@samsung.com>
    Fixes: 843f38d382b1 ("dm verity: add 'check_at_most_once' option to only validate hashes once")
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 752589cd4ea8a0d7fa0884cafde52267bbc95cb6
Author: Mimi Zohar <zohar@linux.ibm.com>
Date:   Fri Mar 19 11:17:23 2021 -0400

    integrity: double check iint_cache was initialized
    
    commit 92063f3ca73aab794bd5408d3361fd5b5ea33079 upstream.
    
    The kernel may be built with multiple LSMs, but only a subset may be
    enabled on the boot command line by specifying "lsm=".  Not including
    "integrity" on the ordered LSM list may result in a NULL deref.
    
    As reported by Dmitry Vyukov:
    in qemu:
    qemu-system-x86_64       -enable-kvm     -machine q35,nvdimm -cpu
    max,migratable=off -smp 4       -m 4G,slots=4,maxmem=16G        -hda
    wheezy.img      -kernel arch/x86/boot/bzImage   -nographic -vga std
     -soundhw all     -usb -usbdevice tablet  -bt hci -bt device:keyboard
       -net user,host=10.0.2.10,hostfwd=tcp::10022-:22 -net
    nic,model=virtio-net-pci   -object
    memory-backend-file,id=pmem1,share=off,mem-path=/dev/zero,size=64M
      -device nvdimm,id=nvdimm1,memdev=pmem1  -append "console=ttyS0
    root=/dev/sda earlyprintk=serial rodata=n oops=panic panic_on_warn=1
    panic=86400 lsm=smack numa=fake=2 nopcid dummy_hcd.num=8"   -pidfile
    vm_pid -m 2G -cpu host
    
    But it crashes on NULL deref in integrity_inode_get during boot:
    
    Run /sbin/init as init process
    BUG: kernel NULL pointer dereference, address: 000000000000001c
    PGD 0 P4D 0
    Oops: 0000 [#1] PREEMPT SMP KASAN
    CPU: 3 PID: 1 Comm: swapper/0 Not tainted 5.12.0-rc2+ #97
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS
    rel-1.13.0-44-g88ab0c15525c-prebuilt.qemu.org 04/01/2014
    RIP: 0010:kmem_cache_alloc+0x2b/0x370 mm/slub.c:2920
    Code: 57 41 56 41 55 41 54 41 89 f4 55 48 89 fd 53 48 83 ec 10 44 8b
    3d d9 1f 90 0b 65 48 8b 04 25 28 00 00 00 48 89 44 24 08 31 c0 <8b> 5f
    1c 4cf
    RSP: 0000:ffffc9000032f9d8 EFLAGS: 00010246
    RAX: 0000000000000000 RBX: ffff888017fc4f00 RCX: 0000000000000000
    RDX: ffff888040220000 RSI: 0000000000000c40 RDI: 0000000000000000
    RBP: 0000000000000000 R08: 0000000000000000 R09: ffff888019263627
    R10: ffffffff83937cd1 R11: 0000000000000000 R12: 0000000000000c40
    R13: ffff888019263538 R14: 0000000000000000 R15: 0000000000ffffff
    FS:  0000000000000000(0000) GS:ffff88802d180000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000000000001c CR3: 000000000b48e000 CR4: 0000000000750ee0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    PKRU: 55555554
    Call Trace:
     integrity_inode_get+0x47/0x260 security/integrity/iint.c:105
     process_measurement+0x33d/0x17e0 security/integrity/ima/ima_main.c:237
     ima_bprm_check+0xde/0x210 security/integrity/ima/ima_main.c:474
     security_bprm_check+0x7d/0xa0 security/security.c:845
     search_binary_handler fs/exec.c:1708 [inline]
     exec_binprm fs/exec.c:1761 [inline]
     bprm_execve fs/exec.c:1830 [inline]
     bprm_execve+0x764/0x19a0 fs/exec.c:1792
     kernel_execve+0x370/0x460 fs/exec.c:1973
     try_to_run_init_process+0x14/0x4e init/main.c:1366
     kernel_init+0x11d/0x1b8 init/main.c:1477
     ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:294
    Modules linked in:
    CR2: 000000000000001c
    ---[ end trace 22d601a500de7d79 ]---
    
    Since LSMs and IMA may be configured at build time, but not enabled at
    run time, panic the system if "integrity" was not initialized before use.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Fixes: 79f7865d844c ("LSM: Introduce "lsm=" for boottime LSM selection")
    Cc: stable@vger.kernel.org
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3404a6777700b81d2681b3140cb8ebfdc0329d2
Author: Claudiu Beznea <claudiu.beznea@microchip.com>
Date:   Wed Apr 11 19:05:03 2018 +0300

    ARM: dts: at91-sama5d27_som1: fix phy address to 7
    
    commit 221c3a09ddf70a0a51715e6c2878d8305e95c558 upstream.
    
    Fix the phy address to 7 for Ethernet PHY on SAMA5D27 SOM1. No
    connection established if phy address 0 is used.
    
    The board uses the 24 pins version of the KSZ8081RNA part, KSZ8081RNA
    pin 16 REFCLK as PHYAD bit [2] has weak internal pull-down.  But at
    reset, connected to PD09 of the MPU it's connected with an internal
    pull-up forming PHYAD[2:0] = 7.
    
    Signed-off-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Fixes: 2f61929eb10a ("ARM: dts: at91: at91-sama5d27_som1: fix PHY ID")
    Cc: Ludovic Desroches <ludovic.desroches@microchip.com>
    Signed-off-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Cc: <stable@vger.kernel.org> # 4.14+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1815a24b9483a0a146e5a9bcf6c0bb93f62ab5ef
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Sun Mar 7 22:47:36 2021 +0200

    arm64: dts: ls1043a: mark crypto engine dma coherent
    
    commit 4fb3a074755b7737c4081cffe0ccfa08c2f2d29d upstream.
    
    Crypto engine (CAAM) on LS1043A platform is configured HW-coherent,
    mark accordingly the DT node.
    
    Lack of "dma-coherent" property for an IP that is configured HW-coherent
    can lead to problems, similar to what has been reported for LS1046A.
    
    Cc: <stable@vger.kernel.org> # v4.8+
    Fixes: 63dac35b58f4 ("arm64: dts: ls1043a: add crypto node")
    Link: https://lore.kernel.org/linux-crypto/fe6faa24-d8f7-d18f-adfa-44fa0caa1598@arm.com
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Acked-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7447c05e06c4890a4c26c223c7f952a9d4199fd6
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Sun Mar 7 22:47:37 2021 +0200

    arm64: dts: ls1012a: mark crypto engine dma coherent
    
    commit ba8da03fa7dff59d9400250aebd38f94cde3cb0f upstream.
    
    Crypto engine (CAAM) on LS1012A platform is configured HW-coherent,
    mark accordingly the DT node.
    
    Lack of "dma-coherent" property for an IP that is configured HW-coherent
    can lead to problems, similar to what has been reported for LS1046A.
    
    Cc: <stable@vger.kernel.org> # v4.12+
    Fixes: 85b85c569507 ("arm64: dts: ls1012a: add crypto node")
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Acked-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6f866bbf7ca8aaa37d3cd4c9e63ab30a51a4ebe
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Sun Mar 7 22:47:35 2021 +0200

    arm64: dts: ls1046a: mark crypto engine dma coherent
    
    commit 9c3a16f88385e671b63a0de7b82b85e604a80f42 upstream.
    
    Crypto engine (CAAM) on LS1046A platform is configured HW-coherent,
    mark accordingly the DT node.
    
    As reported by Greg and Sascha, and explained by Robin, lack of
    "dma-coherent" property for an IP that is configured HW-coherent
    can lead to problems, e.g. on v5.11:
    
    > kernel BUG at drivers/crypto/caam/jr.c:247!
    > Internal error: Oops - BUG: 0 [#1] PREEMPT SMP
    > Modules linked in:
    > CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.11.0-20210225-3-00039-g434215968816-dirty #12
    > Hardware name: TQ TQMLS1046A SoM on Arkona AT1130 (C300) board (DT)
    > pstate: 60000005 (nZCv daif -PAN -UAO -TCO BTYPE=--)
    > pc : caam_jr_dequeue+0x98/0x57c
    > lr : caam_jr_dequeue+0x98/0x57c
    > sp : ffff800010003d50
    > x29: ffff800010003d50 x28: ffff8000118d4000
    > x27: ffff8000118d4328 x26: 00000000000001f0
    > x25: ffff0008022be480 x24: ffff0008022c6410
    > x23: 00000000000001f1 x22: ffff8000118d4329
    > x21: 0000000000004d80 x20: 00000000000001f1
    > x19: 0000000000000001 x18: 0000000000000020
    > x17: 0000000000000000 x16: 0000000000000015
    > x15: ffff800011690230 x14: 2e2e2e2e2e2e2e2e
    > x13: 2e2e2e2e2e2e2020 x12: 3030303030303030
    > x11: ffff800011700a38 x10: 00000000fffff000
    > x9 : ffff8000100ada30 x8 : ffff8000116a8a38
    > x7 : 0000000000000001 x6 : 0000000000000000
    > x5 : 0000000000000000 x4 : 0000000000000000
    > x3 : 00000000ffffffff x2 : 0000000000000000
    > x1 : 0000000000000000 x0 : 0000000000001800
    > Call trace:
    >  caam_jr_dequeue+0x98/0x57c
    >  tasklet_action_common.constprop.0+0x164/0x18c
    >  tasklet_action+0x44/0x54
    >  __do_softirq+0x160/0x454
    >  __irq_exit_rcu+0x164/0x16c
    >  irq_exit+0x1c/0x30
    >  __handle_domain_irq+0xc0/0x13c
    >  gic_handle_irq+0x5c/0xf0
    >  el1_irq+0xb4/0x180
    >  arch_cpu_idle+0x18/0x30
    >  default_idle_call+0x3c/0x1c0
    >  do_idle+0x23c/0x274
    >  cpu_startup_entry+0x34/0x70
    >  rest_init+0xdc/0xec
    >  arch_call_rest_init+0x1c/0x28
    >  start_kernel+0x4ac/0x4e4
    > Code: 91392021 912c2000 d377d8c6 97f24d96 (d4210000)
    
    Cc: <stable@vger.kernel.org> # v4.10+
    Fixes: 8126d88162a5 ("arm64: dts: add QorIQ LS1046A SoC support")
    Link: https://lore.kernel.org/linux-crypto/fe6faa24-d8f7-d18f-adfa-44fa0caa1598@arm.com
    Reported-by: Greg Ungerer <gerg@kernel.org>
    Reported-by: Sascha Hauer <s.hauer@pengutronix.de>
    Tested-by: Sascha Hauer <s.hauer@pengutronix.de>
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Acked-by: Greg Ungerer <gerg@kernel.org>
    Acked-by: Li Yang <leoyang.li@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e980bd1f7f60019d85f98c4e2e782f337ee7559b
Author: Chris Chiu <chris.chiu@canonical.com>
Date:   Fri Mar 12 11:24:30 2021 +0800

    ACPI: video: Add missing callback back for Sony VPCEH3U1E
    
    commit c1d1e25a8c542816ae8dee41b81a18d30c7519a0 upstream.
    
    The .callback of the quirk for Sony VPCEH3U1E was unintetionally
    removed by the commit 25417185e9b5 ("ACPI: video: Add DMI quirk
    for GIGABYTE GB-BXBT-2807"). Add it back to make sure the quirk
    for Sony VPCEH3U1E works as expected.
    
    Fixes: 25417185e9b5 ("ACPI: video: Add DMI quirk for GIGABYTE GB-BXBT-2807")
    Signed-off-by: Chris Chiu <chris.chiu@canonical.com>
    Reported-by: Pavel Machek <pavel@ucw.cz>
    Reviewed-by: Pavel Machek (CIP) <pavel@denx.de>
    Cc: 5.11+ <stable@vger.kernel.org> # 5.11+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 431aaecd24ac7841fa40d70b1e75547306d53671
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Wed Mar 24 21:37:44 2021 -0700

    gcov: fix clang-11+ support
    
    commit 60bcf728ee7c60ac2a1f9a0eaceb3a7b3954cd2b upstream.
    
    LLVM changed the expected function signatures for llvm_gcda_start_file()
    and llvm_gcda_emit_function() in the clang-11 release.  Users of
    clang-11 or newer may have noticed their kernels failing to boot due to
    a panic when enabling CONFIG_GCOV_KERNEL=y +CONFIG_GCOV_PROFILE_ALL=y.
    Fix up the function signatures so calling these functions doesn't panic
    the kernel.
    
    Link: https://reviews.llvm.org/rGcdd683b516d147925212724b09ec6fb792a40041
    Link: https://reviews.llvm.org/rG13a633b438b6500ecad9e4f936ebadf3411d0f44
    Link: https://lkml.kernel.org/r/20210312224132.3413602-2-ndesaulniers@google.com
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Reported-by: Prasad Sodagudi <psodagud@quicinc.com>
    Suggested-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Fangrui Song <maskray@google.com>
    Tested-by: Nathan Chancellor <nathan@kernel.org>
    Acked-by: Peter Oberparleiter <oberpar@linux.ibm.com>
    Reviewed-by: Nathan Chancellor <nathan@kernel.org>
    Cc: <stable@vger.kernel.org>    [5.4+]
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4748b6d56efeab0f3347c698af40cd50db50e937
Author: Andrey Konovalov <andreyknvl@gmail.com>
Date:   Wed Mar 24 21:37:20 2021 -0700

    kasan: fix per-page tags for non-page_alloc pages
    
    commit cf10bd4c4aff8dd64d1aa7f2a529d0c672bc16af upstream.
    
    To allow performing tag checks on page_alloc addresses obtained via
    page_address(), tag-based KASAN modes store tags for page_alloc
    allocations in page->flags.
    
    Currently, the default tag value stored in page->flags is 0x00.
    Therefore, page_address() returns a 0x00ffff...  address for pages that
    were not allocated via page_alloc.
    
    This might cause problems.  A particular case we encountered is a
    conflict with KFENCE.  If a KFENCE-allocated slab object is being freed
    via kfree(page_address(page) + offset), the address passed to kfree()
    will get tagged with 0x00 (as slab pages keep the default per-page
    tags).  This leads to is_kfence_address() check failing, and a KFENCE
    object ending up in normal slab freelist, which causes memory
    corruptions.
    
    This patch changes the way KASAN stores tag in page-flags: they are now
    stored xor'ed with 0xff.  This way, KASAN doesn't need to initialize
    per-page flags for every created page, which might be slow.
    
    With this change, page_address() returns natively-tagged (with 0xff)
    pointers for pages that didn't have tags set explicitly.
    
    This patch fixes the encountered conflict with KFENCE and prevents more
    similar issues that can occur in the future.
    
    Link: https://lkml.kernel.org/r/1a41abb11c51b264511d9e71c303bb16d5cb367b.1615475452.git.andreyknvl@google.com
    Fixes: 2813b9c02962 ("kasan, mm, arm64: tag non slab memory allocated via pagealloc")
    Signed-off-by: Andrey Konovalov <andreyknvl@google.com>
    Reviewed-by: Marco Elver <elver@google.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Vincenzo Frascino <vincenzo.frascino@arm.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Peter Collingbourne <pcc@google.com>
    Cc: Evgenii Stepanov <eugenis@google.com>
    Cc: Branislav Rankov <Branislav.Rankov@arm.com>
    Cc: Kevin Brodsky <kevin.brodsky@arm.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 037ecab65eb6d8c9f68d7c54df92e0fba490b819
Author: Phillip Lougher <phillip@squashfs.org.uk>
Date:   Wed Mar 24 21:37:35 2021 -0700

    squashfs: fix xattr id and id lookup sanity checks
    
    commit 8b44ca2b634527151af07447a8090a5f3a043321 upstream.
    
    The checks for maximum metadata block size is missing
    SQUASHFS_BLOCK_OFFSET (the two byte length count).
    
    Link: https://lkml.kernel.org/r/2069685113.2081245.1614583677427@webmail.123-reg.co.uk
    Fixes: f37aa4c7366e23f ("squashfs: add more sanity checks in id lookup")
    Signed-off-by: Phillip Lougher <phillip@squashfs.org.uk>
    Cc: Sean Nyekjaer <sean@geanix.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79b8814d6765c1ea946e7ceaa5c1f1752c40b16c
Author: Sean Nyekjaer <sean@geanix.com>
Date:   Wed Mar 24 21:37:32 2021 -0700

    squashfs: fix inode lookup sanity checks
    
    commit c1b2028315c6b15e8d6725e0d5884b15887d3daa upstream.
    
    When mouting a squashfs image created without inode compression it fails
    with: "unable to read inode lookup table"
    
    It turns out that the BLOCK_OFFSET is missing when checking the
    SQUASHFS_METADATA_SIZE agaist the actual size.
    
    Link: https://lkml.kernel.org/r/20210226092903.1473545-1-sean@geanix.com
    Fixes: eabac19e40c0 ("squashfs: add more sanity checks in inode lookup")
    Signed-off-by: Sean Nyekjaer <sean@geanix.com>
    Acked-by: Phillip Lougher <phillip@squashfs.org.uk>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b1abfe7d6205440670ad4dc2fa8990181a74c09
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Mar 21 17:35:13 2021 +0100

    platform/x86: intel-vbtn: Stop reporting SW_DOCK events
    
    commit 538d2dd0b9920334e6596977a664e9e7bac73703 upstream.
    
    Stop reporting SW_DOCK events because this breaks suspend-on-lid-close.
    
    SW_DOCK should only be reported for docking stations, but all the DSDTs in
    my DSDT collection which use the intel-vbtn code, always seem to use this
    for 2-in-1s / convertibles and set SW_DOCK=1 when in laptop-mode (in tandem
    with setting SW_TABLET_MODE=0).
    
    This causes userspace to think the laptop is docked to a port-replicator
    and to disable suspend-on-lid-close, which is undesirable.
    
    Map the dock events to KEY_IGNORE to avoid this broken SW_DOCK reporting.
    
    Note this may theoretically cause us to stop reporting SW_DOCK on some
    device where the 0xCA and 0xCB intel-vbtn events are actually used for
    reporting docking to a classic docking-station / port-replicator but
    I'm not aware of any such devices.
    
    Also the most important thing is that we only report SW_DOCK when it
    reliably reports being docked to a classic docking-station without any
    false positives, which clearly is not the case here. If there is a
    chance of reporting false positives then it is better to not report
    SW_DOCK at all.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210321163513.72328-1-hdegoede@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 599cbcda68ee26128686fd578df26c82f6430065
Author: Mian Yousaf Kaukab <ykaukab@suse.de>
Date:   Thu Mar 18 09:50:26 2021 +0100

    netsec: restore phy power state after controller reset
    
    commit 804741ac7b9f2fdebe3740cb0579cb8d94d49e60 upstream.
    
    Since commit 8e850f25b581 ("net: socionext: Stop PHY before resetting
    netsec") netsec_netdev_init() power downs phy before resetting the
    controller. However, the state is not restored once the reset is
    complete. As a result it is not possible to bring up network on a
    platform with Broadcom BCM5482 phy.
    
    Fix the issue by restoring phy power state after controller reset is
    complete.
    
    Fixes: 8e850f25b581 ("net: socionext: Stop PHY before resetting netsec")
    Cc: stable@vger.kernel.org
    Signed-off-by: Mian Yousaf Kaukab <ykaukab@suse.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8aa97ae0f5d9c1514a2325b95ab3d57574e68c88
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Fri Mar 12 21:08:27 2021 -0800

    ia64: fix ptrace(PTRACE_SYSCALL_INFO_EXIT) sign
    
    [ Upstream commit 61bf318eac2c13356f7bd1c6a05421ef504ccc8a ]
    
    In https://bugs.gentoo.org/769614 Dmitry noticed that
    `ptrace(PTRACE_GET_SYSCALL_INFO)` does not return error sign properly.
    
    The bug is in mismatch between get/set errors:
    
    static inline long syscall_get_error(struct task_struct *task,
                                         struct pt_regs *regs)
    {
            return regs->r10 == -1 ? regs->r8:0;
    }
    
    static inline long syscall_get_return_value(struct task_struct *task,
                                                struct pt_regs *regs)
    {
            return regs->r8;
    }
    
    static inline void syscall_set_return_value(struct task_struct *task,
                                                struct pt_regs *regs,
                                                int error, long val)
    {
            if (error) {
                    /* error < 0, but ia64 uses > 0 return value */
                    regs->r8 = -error;
                    regs->r10 = -1;
            } else {
                    regs->r8 = val;
                    regs->r10 = 0;
            }
    }
    
    Tested on v5.10 on rx3600 machine (ia64 9040 CPU).
    
    Link: https://lkml.kernel.org/r/20210221002554.333076-2-slyfox@gentoo.org
    Link: https://bugs.gentoo.org/769614
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Reported-by: Dmitry V. Levin <ldv@altlinux.org>
    Reviewed-by: Dmitry V. Levin <ldv@altlinux.org>
    Cc: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb1504b30b6fc99852414c44fb04ad2e9d4a3cbc
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Fri Mar 12 21:08:23 2021 -0800

    ia64: fix ia64_syscall_get_set_arguments() for break-based syscalls
    
    [ Upstream commit 0ceb1ace4a2778e34a5414e5349712ae4dc41d85 ]
    
    In https://bugs.gentoo.org/769614 Dmitry noticed that
    `ptrace(PTRACE_GET_SYSCALL_INFO)` does not work for syscalls called via
    glibc's syscall() wrapper.
    
    ia64 has two ways to call syscalls from userspace: via `break` and via
    `eps` instructions.
    
    The difference is in stack layout:
    
    1. `eps` creates simple stack frame: no locals, in{0..7} == out{0..8}
    2. `break` uses userspace stack frame: may be locals (glibc provides
       one), in{0..7} == out{0..8}.
    
    Both work fine in syscall handling cde itself.
    
    But `ptrace(PTRACE_GET_SYSCALL_INFO)` uses unwind mechanism to
    re-extract syscall arguments but it does not account for locals.
    
    The change always skips locals registers. It should not change `eps`
    path as kernel's handler already enforces locals=0 and fixes `break`.
    
    Tested on v5.10 on rx3600 machine (ia64 9040 CPU).
    
    Link: https://lkml.kernel.org/r/20210221002554.333076-1-slyfox@gentoo.org
    Link: https://bugs.gentoo.org/769614
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Reported-by: Dmitry V. Levin <ldv@altlinux.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37732ea82e0921657b54b71aa8856675305e1b91
Author: Daniel Wagner <dwagner@suse.de>
Date:   Thu Mar 11 16:19:17 2021 +0100

    block: Suppress uevent for hidden device when removed
    
    [ Upstream commit 9ec491447b90ad6a4056a9656b13f0b3a1e83043 ]
    
    register_disk() suppress uevents for devices with the GENHD_FL_HIDDEN
    but enables uevents at the end again in order to announce disk after
    possible partitions are created.
    
    When the device is removed the uevents are still on and user land sees
    'remove' messages for devices which were never 'add'ed to the system.
    
      KERNEL[95481.571887] remove   /devices/virtual/nvme-fabrics/ctl/nvme5/nvme0c5n1 (block)
    
    Let's suppress the uevents for GENHD_FL_HIDDEN by not enabling the
    uevents at all.
    
    Signed-off-by: Daniel Wagner <dwagner@suse.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Martin Wilck <mwilck@suse.com>
    Link: https://lore.kernel.org/r/20210311151917.136091-1-dwagner@suse.de
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2d07d077eb372f912b3226cc8cd94cbd9493a16
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Thu Jan 28 17:36:38 2021 -0500

    nfs: we don't support removing system.nfs4_acl
    
    [ Upstream commit 4f8be1f53bf615102d103c0509ffa9596f65b718 ]
    
    The NFSv4 protocol doesn't have any notion of reomoving an attribute, so
    removexattr(path,"system.nfs4_acl") doesn't make sense.
    
    There's no documented return value.  Arguably it could be EOPNOTSUPP but
    I'm a little worried an application might take that to mean that we
    don't support ACLs or xattrs.  How about EINVAL?
    
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eed4e1abc9979282354d9f523db79e113bd4bb85
Author: Dmitry Monakhov <dmtrmonakhov@yandex-team.ru>
Date:   Wed Mar 10 12:06:41 2021 +0000

    nvme-pci: add the DISABLE_WRITE_ZEROES quirk for a Samsung PM1725a
    
    [ Upstream commit abbb5f5929ec6c52574c430c5475c158a65c2a8c ]
    
    This adds a quirk for Samsung PM1725a drive which fixes timeouts and
    I/O errors due to the fact that the controller does not properly
    handle the Write Zeroes command, dmesg log:
    
    nvme nvme0: I/O 528 QID 10 timeout, aborting
    nvme nvme0: I/O 529 QID 10 timeout, aborting
    nvme nvme0: I/O 530 QID 10 timeout, aborting
    nvme nvme0: I/O 531 QID 10 timeout, aborting
    nvme nvme0: I/O 532 QID 10 timeout, aborting
    nvme nvme0: I/O 533 QID 10 timeout, aborting
    nvme nvme0: I/O 534 QID 10 timeout, aborting
    nvme nvme0: I/O 535 QID 10 timeout, aborting
    nvme nvme0: Abort status: 0x0
    nvme nvme0: Abort status: 0x0
    nvme nvme0: Abort status: 0x0
    nvme nvme0: Abort status: 0x0
    nvme nvme0: Abort status: 0x0
    nvme nvme0: Abort status: 0x0
    nvme nvme0: Abort status: 0x0
    nvme nvme0: Abort status: 0x0
    nvme nvme0: I/O 528 QID 10 timeout, reset controller
    nvme nvme0: controller is down; will reset: CSTS=0x3, PCI_STATUS=0x10
    nvme nvme0: Device not ready; aborting reset, CSTS=0x3
    nvme nvme0: Device not ready; aborting reset, CSTS=0x3
    nvme nvme0: Removing after probe failure status: -19
    nvme0n1: detected capacity change from 6251233968 to 0
    blk_update_request: I/O error, dev nvme0n1, sector 32776 op 0x1:(WRITE) flags 0x3000 phys_seg 6 prio class 0
    blk_update_request: I/O error, dev nvme0n1, sector 113319936 op 0x9:(WRITE_ZEROES) flags 0x800 phys_seg 0 prio class 0
    Buffer I/O error on dev nvme0n1p2, logical block 1, lost async page write
    blk_update_request: I/O error, dev nvme0n1, sector 113319680 op 0x9:(WRITE_ZEROES) flags 0x0 phys_seg 0 prio class 0
    Buffer I/O error on dev nvme0n1p2, logical block 2, lost async page write
    blk_update_request: I/O error, dev nvme0n1, sector 113319424 op 0x9:(WRITE_ZEROES) flags 0x0 phys_seg 0 prio class 0
    Buffer I/O error on dev nvme0n1p2, logical block 3, lost async page write
    blk_update_request: I/O error, dev nvme0n1, sector 113319168 op 0x9:(WRITE_ZEROES) flags 0x0 phys_seg 0 prio class 0
    Buffer I/O error on dev nvme0n1p2, logical block 4, lost async page write
    blk_update_request: I/O error, dev nvme0n1, sector 113318912 op 0x9:(WRITE_ZEROES) flags 0x0 phys_seg 0 prio class 0
    Buffer I/O error on dev nvme0n1p2, logical block 5, lost async page write
    blk_update_request: I/O error, dev nvme0n1, sector 113318656 op 0x9:(WRITE_ZEROES) flags 0x0 phys_seg 0 prio class 0
    Buffer I/O error on dev nvme0n1p2, logical block 6, lost async page write
    blk_update_request: I/O error, dev nvme0n1, sector 113318400 op 0x9:(WRITE_ZEROES) flags 0x0 phys_seg 0 prio class 0
    blk_update_request: I/O error, dev nvme0n1, sector 113318144 op 0x9:(WRITE_ZEROES) flags 0x0 phys_seg 0 prio class 0
    blk_update_request: I/O error, dev nvme0n1, sector 113317888 op 0x9:(WRITE_ZEROES) flags 0x0 phys_seg 0 prio class 0
    
    Signed-off-by: Dmitry Monakhov <dmtrmonakhov@yandex-team.ru>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5fc284999c4a82b44ddbce1c62e5c3c45db5e78c
Author: Hannes Reinecke <hare@suse.de>
Date:   Fri Feb 26 08:17:28 2021 +0100

    nvme-fc: return NVME_SC_HOST_ABORTED_CMD when a command has been aborted
    
    [ Upstream commit ae3afe6308b43bbf49953101d4ba2c1c481133a8 ]
    
    When a command has been aborted we should return NVME_SC_HOST_ABORTED_CMD
    to be consistent with the other transports.
    
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: James Smart <jsmart2021@gmail.com>
    Reviewed-by: Daniel Wagner <dwagner@suse.de>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 526abcb05c612874f4cc7b36abbdd5c807faa8b3
Author: Hannes Reinecke <hare@suse.de>
Date:   Fri Feb 26 08:17:26 2021 +0100

    nvme: add NVME_REQ_CANCELLED flag in nvme_cancel_request()
    
    [ Upstream commit d3589381987ec879b03f8ce3039df57e87f05901 ]
    
    NVME_REQ_CANCELLED is translated into -EINTR in nvme_submit_sync_cmd(),
    so we should be setting this flags during nvme_cancel_request() to
    ensure that the callers to nvme_submit_sync_cmd() will get the correct
    error code when the controller is reset.
    
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Chao Leng <lengchao@huawei.com>
    Reviewed-by: Daniel Wagner <dwagner@suse.de>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8cdbee05b83fb579e3dfbbd54dc1dcd3d0c4d014
Author: Christian König <christian.koenig@amd.com>
Date:   Mon Mar 8 19:22:13 2021 +0100

    drm/radeon: fix AGP dependency
    
    [ Upstream commit cba2afb65cb05c3d197d17323fee4e3c9edef9cd ]
    
    When AGP is compiled as module radeon must be compiled as module as
    well.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a0e3fcbeb5a392856a864aad729ee2d01069595
Author: Nirmoy Das <nirmoy.das@amd.com>
Date:   Mon Mar 8 15:22:22 2021 +0100

    drm/amdgpu: fb BO should be ttm_bo_type_device
    
    [ Upstream commit 521f04f9e3ffc73ef96c776035f8a0a31b4cdd81 ]
    
    FB BO should not be ttm_bo_type_kernel type and
    amdgpufb_create_pinned_object() pins the FB BO anyway.
    
    Signed-off-by: Nirmoy Das <nirmoy.das@amd.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc8e4af4c3ef16633884f77952b36d544a12bc85
Author: Sung Lee <sung.lee@amd.com>
Date:   Fri Feb 26 13:20:43 2021 -0500

    drm/amd/display: Revert dram_clock_change_latency for DCN2.1
    
    [ Upstream commit b0075d114c33580f5c9fa9cee8e13d06db41471b ]
    
    [WHY & HOW]
    Using values provided by DF for latency may cause hangs in
    multi display configurations. Revert change to previous value.
    
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Sung Lee <sung.lee@amd.com>
    Reviewed-by: Haonan Wang <Haonan.Wang2@amd.com>
    Acked-by: Eryk Brol <eryk.brol@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6292d84c8af44fcdfdc2a3497d377f2cc0c89013
Author: satya priya <skakit@codeaurora.org>
Date:   Wed Feb 24 14:03:08 2021 +0530

    regulator: qcom-rpmh: Correct the pmic5_hfsmps515 buck
    
    [ Upstream commit e610e072c87a30658479a7b4c51e1801cb3f450c ]
    
    Correct the REGULATOR_LINEAR_RANGE and n_voltges for
    pmic5_hfsmps515 buck.
    
    Signed-off-by: satya priya <skakit@codeaurora.org>
    Link: https://lore.kernel.org/r/1614155592-14060-4-git-send-email-skakit@codeaurora.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c45182707277d9c90efb1762b0de16a50d099864
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Mar 8 09:38:12 2021 +0100

    u64_stats,lockdep: Fix u64_stats_init() vs lockdep
    
    [ Upstream commit d5b0e0677bfd5efd17c5bbb00156931f0d41cb85 ]
    
    Jakub reported that:
    
        static struct net_device *rtl8139_init_board(struct pci_dev *pdev)
        {
                ...
                u64_stats_init(&tp->rx_stats.syncp);
                u64_stats_init(&tp->tx_stats.syncp);
                ...
        }
    
    results in lockdep getting confused between the RX and TX stats lock.
    This is because u64_stats_init() is an inline calling seqcount_init(),
    which is a macro using a static variable to generate a lockdep class.
    
    By wrapping that in an inline, we negate the effect of the macro and
    fold the static key variable, hence the confusion.
    
    Fix by also making u64_stats_init() a macro for the case where it
    matters, leaving the other case an inline for argument validation
    etc.
    
    Reported-by: Jakub Kicinski <kuba@kernel.org>
    Debugged-by: "Ahmed S. Darwish" <a.darwish@linutronix.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Tested-by: "Erhard F." <erhard_f@mailbox.org>
    Link: https://lkml.kernel.org/r/YEXicy6+9MksdLZh@hirez.programming.kicks-ass.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f59604786a48c3bda3a4cda27a172b681c6da69f
Author: Tomer Tayar <ttayar@habana.ai>
Date:   Fri Feb 19 14:05:33 2021 +0200

    habanalabs: Call put_pid() when releasing control device
    
    [ Upstream commit 27ac5aada024e0821c86540ad18f37edadd77d5e ]
    
    The refcount of the "hl_fpriv" structure is not used for the control
    device, and thus hl_hpriv_put() is not called when releasing this
    device.
    This results with no call to put_pid(), so add it explicitly in
    hl_device_release_ctrl().
    
    Signed-off-by: Tomer Tayar <ttayar@habana.ai>
    Reviewed-by: Oded Gabbay <ogabbay@kernel.org>
    Signed-off-by: Oded Gabbay <ogabbay@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 694761bfdd763261dce83a497b37b6c5bc7708df
Author: Rob Gardner <rob.gardner@oracle.com>
Date:   Sun Feb 28 22:48:16 2021 -0700

    sparc64: Fix opcode filtering in handling of no fault loads
    
    [ Upstream commit e5e8b80d352ec999d2bba3ea584f541c83f4ca3f ]
    
    is_no_fault_exception() has two bugs which were discovered via random
    opcode testing with stress-ng. Both are caused by improper filtering
    of opcodes.
    
    The first bug can be triggered by a floating point store with a no-fault
    ASI, for instance "sta %f0, [%g0] #ASI_PNF", opcode C1A01040.
    
    The code first tests op3[5] (0x1000000), which denotes a floating
    point instruction, and then tests op3[2] (0x200000), which denotes a
    store instruction. But these bits are not mutually exclusive, and the
    above mentioned opcode has both bits set. The intent is to filter out
    stores, so the test for stores must be done first in order to have
    any effect.
    
    The second bug can be triggered by a floating point load with one of
    the invalid ASI values 0x8e or 0x8f, which pass this check in
    is_no_fault_exception():
         if ((asi & 0xf2) == ASI_PNF)
    
    An example instruction is "ldqa [%l7 + %o7] #ASI 0x8f, %f38",
    opcode CF95D1EF. Asi values greater than 0x8b (ASI_SNFL) are fatal
    in handle_ldf_stq(), and is_no_fault_exception() must not allow these
    invalid asi values to make it that far.
    
    In both of these cases, handle_ldf_stq() reacts by calling
    sun4v_data_access_exception() or spitfire_data_access_exception(),
    which call is_no_fault_exception() and results in an infinite
    recursion.
    
    Signed-off-by: Rob Gardner <rob.gardner@oracle.com>
    Tested-by: Anatoly Pugachev <matorola@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11efb0cda6559d29a07e0ad6c50e2f92a8cb6e33
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Sun Mar 7 17:20:14 2021 +0000

    irqchip/ingenic: Add support for the JZ4760
    
    [ Upstream commit 5fbecd2389f48e1415799c63130d0cdce1cf3f60 ]
    
    Add support for the interrupt controller found in the JZ4760 SoC, which
    works exactly like the one in the JZ4770.
    
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210307172014.73481-2-paul@crapouillou.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69423418c5eb2951b35906946cd77219b4523f0e
Author: Paulo Alcantara <pc@cjr.nz>
Date:   Mon Mar 8 12:00:48 2021 -0300

    cifs: change noisy error message to FYI
    
    [ Upstream commit e3d100eae44b42f309c1366efb8397368f1cf8ed ]
    
    A customer has reported that their dmesg were being flooded by
    
      CIFS: VFS: \\server Cancelling wait for mid xxx cmd: a
      CIFS: VFS: \\server Cancelling wait for mid yyy cmd: b
      CIFS: VFS: \\server Cancelling wait for mid zzz cmd: c
    
    because some processes that were performing statfs(2) on the share had
    been interrupted due to their automount setup when certain users
    logged in and out.
    
    Change it to FYI as they should be mostly informative rather than
    error messages.
    
    Signed-off-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 981ba9c9a5297b945ff088a4dbe524d16cf6ffa3
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sun Mar 7 22:25:30 2021 -0500

    atm: idt77252: fix null-ptr-dereference
    
    [ Upstream commit 4416e98594dc04590ebc498fc4e530009535c511 ]
    
    this one is similar to the phy_data allocation fix in uPD98402, the
    driver allocate the idt77105_priv and store to dev_data but later
    dereference using dev->dev_data, which will cause null-ptr-dereference.
    
    fix this issue by changing dev_data to phy_data so that PRIV(dev) can
    work correctly.
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b2844ad7b17f008cceca201baf59e72012148a1
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sun Mar 7 22:25:29 2021 -0500

    atm: uPD98402: fix incorrect allocation
    
    [ Upstream commit 3153724fc084d8ef640c611f269ddfb576d1dcb1 ]
    
    dev->dev_data is set in zatm.c, calling zatm_start() will overwrite this
    dev->dev_data in uPD98402_start() and a subsequent PRIV(dev)->lock
    (i.e dev->phy_data->lock) will result in a null-ptr-dereference.
    
    I believe this is a typo and what it actually want to do is to allocate
    phy_data instead of dev_data.
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40d0a9297f83ed774c3a5b5ea5d79ab4aeeeff1a
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Sun Mar 7 13:17:49 2021 +0000

    net: davicom: Use platform_get_irq_optional()
    
    [ Upstream commit 2e2696223676d56db1a93acfca722c1b96cd552d ]
    
    The second IRQ line really is optional, so use
    platform_get_irq_optional() to obtain it.
    
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b90de232a806cb57c739e759eb9eceec168c85a1
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sun Mar 7 01:12:56 2021 -0800

    net: wan: fix error return code of uhdlc_init()
    
    [ Upstream commit 62765d39553cfd1ad340124fe1e280450e8c89e2 ]
    
    When priv->rx_skbuff or priv->tx_skbuff is NULL, no error return code of
    uhdlc_init() is assigned.
    To fix this bug, ret is assigned with -ENOMEM in these cases.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0da0f199e7671ce4ff83a4fa52e32e097d74bda7
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sun Mar 7 00:40:12 2021 -0800

    net: hisilicon: hns: fix error return code of hns_nic_clear_all_rx_fetch()
    
    [ Upstream commit 143c253f42bad20357e7e4432087aca747c43384 ]
    
    When hns_assemble_skb() returns NULL to skb, no error return code of
    hns_nic_clear_all_rx_fetch() is assigned.
    To fix this bug, ret is assigned with -ENOMEM in this case.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab60e4f5eb3ad31cc11e369d145cf221159cc33f
Author: Frank Sorenson <sorenson@redhat.com>
Date:   Mon Mar 8 12:12:13 2021 -0600

    NFS: Correct size calculation for create reply length
    
    [ Upstream commit ad3dbe35c833c2d4d0bbf3f04c785d32f931e7c9 ]
    
    CREATE requests return a post_op_fh3, rather than nfs_fh3. The
    post_op_fh3 includes an extra word to indicate 'handle_follows'.
    
    Without that additional word, create fails when full 64-byte
    filehandles are in use.
    
    Add NFS3_post_op_fh_sz, and correct the size calculation for
    NFS3_createres_sz.
    
    Signed-off-by: Frank Sorenson <sorenson@redhat.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 785be28d360f85cc85fcceb9c11ed1f0425804d7
Author: Timo Rothenpieler <timo@rothenpieler.org>
Date:   Tue Feb 23 15:19:01 2021 +0100

    nfs: fix PNFS_FLEXFILE_LAYOUT Kconfig default
    
    [ Upstream commit a0590473c5e6c4ef17c3132ad08fbad170f72d55 ]
    
    This follows what was done in 8c2fabc6542d9d0f8b16bd1045c2eda59bdcde13.
    With the default being m, it's impossible to build the module into the
    kernel.
    
    Signed-off-by: Timo Rothenpieler <timo@rothenpieler.org>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d605afb11945e74fee7a9fd1b552ef7e1af7423b
Author: Yang Li <yang.lee@linux.alibaba.com>
Date:   Tue Feb 23 16:35:58 2021 +0800

    gpiolib: acpi: Add missing IRQF_ONESHOT
    
    [ Upstream commit 6e5d5791730b55a1f987e1db84b078b91eb49e99 ]
    
    fixed the following coccicheck:
    ./drivers/gpio/gpiolib-acpi.c:176:7-27: ERROR: Threaded IRQ with no
    primary handler requested without IRQF_ONESHOT
    
    Make sure threaded IRQs without a primary handler are always request
    with IRQF_ONESHOT
    
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Yang Li <yang.lee@linux.alibaba.com>
    Acked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6c1da94ddb30010abcc72923215eb6f064d410c
Author: Sudeep Holla <sudeep.holla@arm.com>
Date:   Thu Feb 18 22:23:26 2021 +0000

    cpufreq: blacklist Arm Vexpress platforms in cpufreq-dt-platdev
    
    [ Upstream commit fbb31cb805fd3574d3be7defc06a7fd2fd9af7d2 ]
    
    Add "arm,vexpress" to cpufreq-dt-platdev blacklist since the actual
    scaling is handled by the firmware cpufreq drivers(scpi, scmi and
    vexpress-spc).
    
    Signed-off-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d2c9669135f7443df092e9fa274474c5259b9da
Author: Aurelien Aptel <aaptel@suse.com>
Date:   Thu Mar 4 17:51:48 2021 +0000

    cifs: ask for more credit on async read/write code paths
    
    [ Upstream commit 88fd98a2306755b965e4f4567f84e73db3b6738c ]
    
    When doing a large read or write workload we only
    very gradually increase the number of credits
    which can cause problems with parallelizing large i/o
    (I/O ramps up more slowly than it should for large
    read/write workloads) especially with multichannel
    when the number of credits on the secondary channels
    starts out low (e.g. less than about 130) or when
    recovering after server throttled back the number
    of credit.
    
    Signed-off-by: Aurelien Aptel <aaptel@suse.com>
    Reviewed-by: Shyam Prasad N <sprasad@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec7ce1e337ec2b5641dcc639396e04a28454f21a
Author: Michael Braun <michael-dev@fami-braun.de>
Date:   Thu Mar 4 20:52:52 2021 +0100

    gianfar: fix jumbo packets+napi+rx overrun crash
    
    [ Upstream commit d8861bab48b6c1fc3cdbcab8ff9d1eaea43afe7f ]
    
    When using jumbo packets and overrunning rx queue with napi enabled,
    the following sequence is observed in gfar_add_rx_frag:
    
       | lstatus                              |       | skb                   |
    t  | lstatus,  size, flags                | first | len, data_len, *ptr   |
    ---+--------------------------------------+-------+-----------------------+
    13 | 18002348, 9032, INTERRUPT LAST       | 0     | 9600, 8000,  f554c12e |
    12 | 10000640, 1600, INTERRUPT            | 0     | 8000, 6400,  f554c12e |
    11 | 10000640, 1600, INTERRUPT            | 0     | 6400, 4800,  f554c12e |
    10 | 10000640, 1600, INTERRUPT            | 0     | 4800, 3200,  f554c12e |
    09 | 10000640, 1600, INTERRUPT            | 0     | 3200, 1600,  f554c12e |
    08 | 14000640, 1600, INTERRUPT FIRST      | 0     | 1600, 0,     f554c12e |
    07 | 14000640, 1600, INTERRUPT FIRST      | 1     | 0,    0,     f554c12e |
    06 | 1c000080, 128,  INTERRUPT LAST FIRST | 1     | 0,    0,     abf3bd6e |
    05 | 18002348, 9032, INTERRUPT LAST       | 0     | 8000, 6400,  c5a57780 |
    04 | 10000640, 1600, INTERRUPT            | 0     | 6400, 4800,  c5a57780 |
    03 | 10000640, 1600, INTERRUPT            | 0     | 4800, 3200,  c5a57780 |
    02 | 10000640, 1600, INTERRUPT            | 0     | 3200, 1600,  c5a57780 |
    01 | 10000640, 1600, INTERRUPT            | 0     | 1600, 0,     c5a57780 |
    00 | 14000640, 1600, INTERRUPT FIRST      | 1     | 0,    0,     c5a57780 |
    
    So at t=7 a new packets is started but not finished, probably due to rx
    overrun - but rx overrun is not indicated in the flags. Instead a new
    packets starts at t=8. This results in skb->len to exceed size for the LAST
    fragment at t=13 and thus a negative fragment size added to the skb.
    
    This then crashes:
    
    kernel BUG at include/linux/skbuff.h:2277!
    Oops: Exception in kernel mode, sig: 5 [#1]
    ...
    NIP [c04689f4] skb_pull+0x2c/0x48
    LR [c03f62ac] gfar_clean_rx_ring+0x2e4/0x844
    Call Trace:
    [ec4bfd38] [c06a84c4] _raw_spin_unlock_irqrestore+0x60/0x7c (unreliable)
    [ec4bfda8] [c03f6a44] gfar_poll_rx_sq+0x48/0xe4
    [ec4bfdc8] [c048d504] __napi_poll+0x54/0x26c
    [ec4bfdf8] [c048d908] net_rx_action+0x138/0x2c0
    [ec4bfe68] [c06a8f34] __do_softirq+0x3a4/0x4fc
    [ec4bfed8] [c0040150] run_ksoftirqd+0x58/0x70
    [ec4bfee8] [c0066ecc] smpboot_thread_fn+0x184/0x1cc
    [ec4bff08] [c0062718] kthread+0x140/0x144
    [ec4bff38] [c0012350] ret_from_kernel_thread+0x14/0x1c
    
    This patch fixes this by checking for computed LAST fragment size, so a
    negative sized fragment is never added.
    In order to prevent the newer rx frame from getting corrupted, the FIRST
    flag is checked to discard the incomplete older frame.
    
    Signed-off-by: Michael Braun <michael-dev@fami-braun.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ef7d296b154b53e0761a361d214e24dfafa7997
Author: Denis Efremov <efremov@linux.com>
Date:   Fri Mar 5 20:02:12 2021 +0300

    sun/niu: fix wrong RXMAC_BC_FRM_CNT_COUNT count
    
    [ Upstream commit 155b23e6e53475ca3b8c2a946299b4d4dd6a5a1e ]
    
    RXMAC_BC_FRM_CNT_COUNT added to mp->rx_bcasts twice in a row
    in niu_xmac_interrupt(). Remove the second addition.
    
    Signed-off-by: Denis Efremov <efremov@linux.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d25f579ec557a6ee3f3ac00308e9042daa689a44
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Thu Mar 4 19:10:10 2021 -0800

    net: intel: iavf: fix error return code of iavf_init_get_resources()
    
    [ Upstream commit 6650d31f21b8a0043613ae0a4a2e42e49dc20b2d ]
    
    When iavf_process_config() fails, no error return code of
    iavf_init_get_resources() is assigned.
    To fix this bug, err is assigned with the return value of
    iavf_process_config(), and then err is checked.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4dd6de6fc90423708bb9b516f90865156d51b88
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Thu Mar 4 18:06:48 2021 -0800

    net: tehuti: fix error return code in bdx_probe()
    
    [ Upstream commit 38c26ff3048af50eee3fcd591921357ee5bfd9ee ]
    
    When bdx_read_mac() fails, no error return code of bdx_probe()
    is assigned.
    To fix this bug, err is assigned with -EFAULT as error return code.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e224a789d4a64fe18142845b17887f3a966903a3
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Sun Jan 3 16:08:42 2021 +0800

    ixgbe: Fix memleak in ixgbe_configure_clsu32
    
    [ Upstream commit 7a766381634da19fc837619b0a34590498d9d29a ]
    
    When ixgbe_fdir_write_perfect_filter_82599() fails,
    input allocated by kzalloc() has not been freed,
    which leads to memleak.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Tested-by: Tony Brelinski <tonyx.brelinski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 537653a0698b3651ccb12e2e7ba4797e65bf0a7a
Author: Mark Pearson <markpearson@lenovo.com>
Date:   Tue Mar 2 09:10:03 2021 -0500

    ALSA: hda: ignore invalid NHLT table
    
    [ Upstream commit a14a6219996ee6f6e858d83b11affc7907633687 ]
    
    On some Lenovo systems if the microphone is disabled in the BIOS
    only the NHLT table header is created, with no data. This means
    the endpoints field is not correctly set to zero - leading to an
    unintialised variable and hence invalid descriptors are parsed
    leading to page faults.
    
    The Lenovo firmware team is addressing this, but adding a check
    preventing invalid tables being parsed is worthwhile.
    
    Tested on a Lenovo T14.
    
    Tested-by: Philipp Leskovitz <philipp.leskovitz@secunet.com>
    Reported-by: Philipp Leskovitz <philipp.leskovitz@secunet.com>
    Signed-off-by: Mark Pearson <markpearson@lenovo.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210302141003.7342-1-markpearson@lenovo.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd272f11a9d4c885af174411cc8256d2e7cbd838
Author: Hayes Wang <hayeswang@realtek.com>
Date:   Wed Mar 3 16:39:47 2021 +0800

    Revert "r8152: adjust the settings about MAC clock speed down for RTL8153"
    
    [ Upstream commit 4b5dc1a94d4f92b5845e98bd9ae344b26d933aad ]
    
    This reverts commit 134f98bcf1b898fb9d6f2b91bc85dd2e5478b4b8.
    
    The r8153_mac_clk_spd() is used for RTL8153A only, because the register
    table of RTL8153B is different from RTL8153A. However, this function would
    be called when RTL8153B calls r8153_first_init() and r8153_enter_oob().
    That causes RTL8153B becomes unstable when suspending and resuming. The
    worst case may let the device stop working.
    
    Besides, revert this commit to disable MAC clock speed down for RTL8153A.
    It would avoid the known issue when enabling U1. The data of the first
    control transfer may be wrong when exiting U1.
    
    Signed-off-by: Hayes Wang <hayeswang@realtek.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a12167636bfa44e5d2869fe0540251cfacc9bb2
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sat Feb 27 22:55:50 2021 -0500

    atm: lanai: dont run lanai_dev_close if not open
    
    [ Upstream commit a2bd45834e83d6c5a04d397bde13d744a4812dfc ]
    
    lanai_dev_open() can fail. When it fail, lanai->base is unmapped and the
    pci device is disabled. The caller, lanai_init_one(), then tries to run
    atm_dev_deregister(). This will subsequently call lanai_dev_close() and
    use the already released MMIO area.
    
    To fix this issue, set the lanai->base to NULL if open fail,
    and test the flag in lanai_dev_close().
    
    [    8.324153] lanai: lanai_start() failed, err=19
    [    8.324819] lanai(itf 0): shutting down interface
    [    8.325211] BUG: unable to handle page fault for address: ffffc90000180024
    [    8.325781] #PF: supervisor write access in kernel mode
    [    8.326215] #PF: error_code(0x0002) - not-present page
    [    8.326641] PGD 100000067 P4D 100000067 PUD 100139067 PMD 10013a067 PTE 0
    [    8.327206] Oops: 0002 [#1] SMP KASAN NOPTI
    [    8.327557] CPU: 0 PID: 95 Comm: modprobe Not tainted 5.11.0-rc7-00090-gdcc0b49040c7 #12
    [    8.328229] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-48-gd9c812dda519-4
    [    8.329145] RIP: 0010:lanai_dev_close+0x4f/0xe5 [lanai]
    [    8.329587] Code: 00 48 c7 c7 00 d3 01 c0 e8 49 4e 0a c2 48 8d bd 08 02 00 00 e8 6e 52 14 c1 48 80
    [    8.330917] RSP: 0018:ffff8881029ef680 EFLAGS: 00010246
    [    8.331196] RAX: 000000000003fffe RBX: ffff888102fb4800 RCX: ffffffffc001a98a
    [    8.331572] RDX: ffffc90000180000 RSI: 0000000000000246 RDI: ffff888102fb4000
    [    8.331948] RBP: ffff888102fb4000 R08: ffffffff8115da8a R09: ffffed102053deaa
    [    8.332326] R10: 0000000000000003 R11: ffffed102053dea9 R12: ffff888102fb48a4
    [    8.332701] R13: ffffffffc00123c0 R14: ffff888102fb4b90 R15: ffff888102fb4b88
    [    8.333077] FS:  00007f08eb9056a0(0000) GS:ffff88815b400000(0000) knlGS:0000000000000000
    [    8.333502] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [    8.333806] CR2: ffffc90000180024 CR3: 0000000102a28000 CR4: 00000000000006f0
    [    8.334182] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [    8.334557] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [    8.334932] Call Trace:
    [    8.335066]  atm_dev_deregister+0x161/0x1a0 [atm]
    [    8.335324]  lanai_init_one.cold+0x20c/0x96d [lanai]
    [    8.335594]  ? lanai_send+0x2a0/0x2a0 [lanai]
    [    8.335831]  local_pci_probe+0x6f/0xb0
    [    8.336039]  pci_device_probe+0x171/0x240
    [    8.336255]  ? pci_device_remove+0xe0/0xe0
    [    8.336475]  ? kernfs_create_link+0xb6/0x110
    [    8.336704]  ? sysfs_do_create_link_sd.isra.0+0x76/0xe0
    [    8.336983]  really_probe+0x161/0x420
    [    8.337181]  driver_probe_device+0x6d/0xd0
    [    8.337401]  device_driver_attach+0x82/0x90
    [    8.337626]  ? device_driver_attach+0x90/0x90
    [    8.337859]  __driver_attach+0x60/0x100
    [    8.338065]  ? device_driver_attach+0x90/0x90
    [    8.338298]  bus_for_each_dev+0xe1/0x140
    [    8.338511]  ? subsys_dev_iter_exit+0x10/0x10
    [    8.338745]  ? klist_node_init+0x61/0x80
    [    8.338956]  bus_add_driver+0x254/0x2a0
    [    8.339164]  driver_register+0xd3/0x150
    [    8.339370]  ? 0xffffffffc0028000
    [    8.339550]  do_one_initcall+0x84/0x250
    [    8.339755]  ? trace_event_raw_event_initcall_finish+0x150/0x150
    [    8.340076]  ? free_vmap_area_noflush+0x1a5/0x5c0
    [    8.340329]  ? unpoison_range+0xf/0x30
    [    8.340532]  ? ____kasan_kmalloc.constprop.0+0x84/0xa0
    [    8.340806]  ? unpoison_range+0xf/0x30
    [    8.341014]  ? unpoison_range+0xf/0x30
    [    8.341217]  do_init_module+0xf8/0x350
    [    8.341419]  load_module+0x3fe6/0x4340
    [    8.341621]  ? vm_unmap_ram+0x1d0/0x1d0
    [    8.341826]  ? ____kasan_kmalloc.constprop.0+0x84/0xa0
    [    8.342101]  ? module_frob_arch_sections+0x20/0x20
    [    8.342358]  ? __do_sys_finit_module+0x108/0x170
    [    8.342604]  __do_sys_finit_module+0x108/0x170
    [    8.342841]  ? __ia32_sys_init_module+0x40/0x40
    [    8.343083]  ? file_open_root+0x200/0x200
    [    8.343298]  ? do_sys_open+0x85/0xe0
    [    8.343491]  ? filp_open+0x50/0x50
    [    8.343675]  ? exit_to_user_mode_prepare+0xfc/0x130
    [    8.343935]  do_syscall_64+0x33/0x40
    [    8.344132]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [    8.344401] RIP: 0033:0x7f08eb887cf7
    [    8.344594] Code: 48 89 57 30 48 8b 04 24 48 89 47 38 e9 1d a0 02 00 48 89 f8 48 89 f7 48 89 d6 41
    [    8.345565] RSP: 002b:00007ffcd5c98ad8 EFLAGS: 00000246 ORIG_RAX: 0000000000000139
    [    8.345962] RAX: ffffffffffffffda RBX: 00000000008fea70 RCX: 00007f08eb887cf7
    [    8.346336] RDX: 0000000000000000 RSI: 00000000008fd9e0 RDI: 0000000000000003
    [    8.346711] RBP: 0000000000000003 R08: 0000000000000000 R09: 0000000000000001
    [    8.347085] R10: 00007f08eb8eb300 R11: 0000000000000246 R12: 00000000008fd9e0
    [    8.347460] R13: 0000000000000000 R14: 00000000008fddd0 R15: 0000000000000001
    [    8.347836] Modules linked in: lanai(+) atm
    [    8.348065] CR2: ffffc90000180024
    [    8.348244] ---[ end trace 7fdc1c668f2003e5 ]---
    [    8.348490] RIP: 0010:lanai_dev_close+0x4f/0xe5 [lanai]
    [    8.348772] Code: 00 48 c7 c7 00 d3 01 c0 e8 49 4e 0a c2 48 8d bd 08 02 00 00 e8 6e 52 14 c1 48 80
    [    8.349745] RSP: 0018:ffff8881029ef680 EFLAGS: 00010246
    [    8.350022] RAX: 000000000003fffe RBX: ffff888102fb4800 RCX: ffffffffc001a98a
    [    8.350397] RDX: ffffc90000180000 RSI: 0000000000000246 RDI: ffff888102fb4000
    [    8.350772] RBP: ffff888102fb4000 R08: ffffffff8115da8a R09: ffffed102053deaa
    [    8.351151] R10: 0000000000000003 R11: ffffed102053dea9 R12: ffff888102fb48a4
    [    8.351525] R13: ffffffffc00123c0 R14: ffff888102fb4b90 R15: ffff888102fb4b88
    [    8.351918] FS:  00007f08eb9056a0(0000) GS:ffff88815b400000(0000) knlGS:0000000000000000
    [    8.352343] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [    8.352647] CR2: ffffc90000180024 CR3: 0000000102a28000 CR4: 00000000000006f0
    [    8.353022] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [    8.353397] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [    8.353958] modprobe (95) used greatest stack depth: 26216 bytes left
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb0067fcda6adb7d330ec19f8d902392d8e9cc49
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sat Feb 27 16:15:06 2021 -0500

    atm: eni: dont release is never initialized
    
    [ Upstream commit 4deb550bc3b698a1f03d0332cde3df154d1b6c1e ]
    
    label err_eni_release is reachable when eni_start() fail.
    In eni_start() it calls dev->phy->start() in the last step, if start()
    fail we don't need to call phy->stop(), if start() is never called, we
    neither need to call phy->stop(), otherwise null-ptr-deref will happen.
    
    In order to fix this issue, don't call phy->stop() in label err_eni_release
    
    [    4.875714] ==================================================================
    [    4.876091] BUG: KASAN: null-ptr-deref in suni_stop+0x47/0x100 [suni]
    [    4.876433] Read of size 8 at addr 0000000000000030 by task modprobe/95
    [    4.876778]
    [    4.876862] CPU: 0 PID: 95 Comm: modprobe Not tainted 5.11.0-rc7-00090-gdcc0b49040c7 #2
    [    4.877290] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-48-gd94
    [    4.877876] Call Trace:
    [    4.878009]  dump_stack+0x7d/0xa3
    [    4.878191]  kasan_report.cold+0x10c/0x10e
    [    4.878410]  ? __slab_free+0x2f0/0x340
    [    4.878612]  ? suni_stop+0x47/0x100 [suni]
    [    4.878832]  suni_stop+0x47/0x100 [suni]
    [    4.879043]  eni_do_release+0x3b/0x70 [eni]
    [    4.879269]  eni_init_one.cold+0x1152/0x1747 [eni]
    [    4.879528]  ? _raw_spin_lock_irqsave+0x7b/0xd0
    [    4.879768]  ? eni_ioctl+0x270/0x270 [eni]
    [    4.879990]  ? __mutex_lock_slowpath+0x10/0x10
    [    4.880226]  ? eni_ioctl+0x270/0x270 [eni]
    [    4.880448]  local_pci_probe+0x6f/0xb0
    [    4.880650]  pci_device_probe+0x171/0x240
    [    4.880864]  ? pci_device_remove+0xe0/0xe0
    [    4.881086]  ? kernfs_create_link+0xb6/0x110
    [    4.881315]  ? sysfs_do_create_link_sd.isra.0+0x76/0xe0
    [    4.881594]  really_probe+0x161/0x420
    [    4.881791]  driver_probe_device+0x6d/0xd0
    [    4.882010]  device_driver_attach+0x82/0x90
    [    4.882233]  ? device_driver_attach+0x90/0x90
    [    4.882465]  __driver_attach+0x60/0x100
    [    4.882671]  ? device_driver_attach+0x90/0x90
    [    4.882903]  bus_for_each_dev+0xe1/0x140
    [    4.883114]  ? subsys_dev_iter_exit+0x10/0x10
    [    4.883346]  ? klist_node_init+0x61/0x80
    [    4.883557]  bus_add_driver+0x254/0x2a0
    [    4.883764]  driver_register+0xd3/0x150
    [    4.883971]  ? 0xffffffffc0038000
    [    4.884149]  do_one_initcall+0x84/0x250
    [    4.884355]  ? trace_event_raw_event_initcall_finish+0x150/0x150
    [    4.884674]  ? unpoison_range+0xf/0x30
    [    4.884875]  ? ____kasan_kmalloc.constprop.0+0x84/0xa0
    [    4.885150]  ? unpoison_range+0xf/0x30
    [    4.885352]  ? unpoison_range+0xf/0x30
    [    4.885557]  do_init_module+0xf8/0x350
    [    4.885760]  load_module+0x3fe6/0x4340
    [    4.885960]  ? vm_unmap_ram+0x1d0/0x1d0
    [    4.886166]  ? ____kasan_kmalloc.constprop.0+0x84/0xa0
    [    4.886441]  ? module_frob_arch_sections+0x20/0x20
    [    4.886697]  ? __do_sys_finit_module+0x108/0x170
    [    4.886941]  __do_sys_finit_module+0x108/0x170
    [    4.887178]  ? __ia32_sys_init_module+0x40/0x40
    [    4.887419]  ? file_open_root+0x200/0x200
    [    4.887634]  ? do_sys_open+0x85/0xe0
    [    4.887826]  ? filp_open+0x50/0x50
    [    4.888009]  ? fpregs_assert_state_consistent+0x4d/0x60
    [    4.888287]  ? exit_to_user_mode_prepare+0x2f/0x130
    [    4.888547]  do_syscall_64+0x33/0x40
    [    4.888739]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [    4.889010] RIP: 0033:0x7ff62fcf1cf7
    [    4.889202] Code: 48 89 57 30 48 8b 04 24 48 89 47 38 e9 1d a0 02 00 48 89 f8 48 89 f71
    [    4.890172] RSP: 002b:00007ffe6644ade8 EFLAGS: 00000246 ORIG_RAX: 0000000000000139
    [    4.890570] RAX: ffffffffffffffda RBX: 0000000000f2ca70 RCX: 00007ff62fcf1cf7
    [    4.890944] RDX: 0000000000000000 RSI: 0000000000f2b9e0 RDI: 0000000000000003
    [    4.891318] RBP: 0000000000000003 R08: 0000000000000000 R09: 0000000000000001
    [    4.891691] R10: 00007ff62fd55300 R11: 0000000000000246 R12: 0000000000f2b9e0
    [    4.892064] R13: 0000000000000000 R14: 0000000000f2bdd0 R15: 0000000000000001
    [    4.892439] ==================================================================
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 614a4ba66854ecc442b1c1c12318a717e4515623
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Feb 18 23:30:58 2021 +1100

    powerpc/4xx: Fix build errors from mfdcr()
    
    [ Upstream commit eead089311f4d935ab5d1d8fbb0c42ad44699ada ]
    
    lkp reported a build error in fsp2.o:
    
      CC      arch/powerpc/platforms/44x/fsp2.o
      {standard input}:577: Error: unsupported relocation against base
    
    Which comes from:
    
      pr_err("GESR0: 0x%08x\n", mfdcr(base + PLB4OPB_GESR0));
    
    Where our mfdcr() macro is stringifying "base + PLB4OPB_GESR0", and
    passing that to the assembler, which obviously doesn't work.
    
    The mfdcr() macro already checks that the argument is constant using
    __builtin_constant_p(), and if not calls the out-of-line version of
    mfdcr(). But in this case GCC is smart enough to notice that "base +
    PLB4OPB_GESR0" will be constant, even though it's not something we can
    immediately stringify into a register number.
    
    Segher pointed out that passing the register number to the inline asm
    as a constant would be better, and in fact it fixes the build error,
    presumably because it gives GCC a chance to resolve the value.
    
    While we're at it, change mtdcr() similarly.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Suggested-by: Segher Boessenkool <segher@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Feng Tang <feng.tang@intel.com>
    Link: https://lore.kernel.org/r/20210218123058.748882-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45c1ca3e5784f58382e61690b6f39efc63b825f6
Author: Heiko Thiery <heiko.thiery@gmail.com>
Date:   Thu Feb 25 22:15:16 2021 +0100

    net: fec: ptp: avoid register access when ipg clock is disabled
    
    [ Upstream commit 6a4d7234ae9a3bb31181f348ade9bbdb55aeb5c5 ]
    
    When accessing the timecounter register on an i.MX8MQ the kernel hangs.
    This is only the case when the interface is down. This can be reproduced
    by reading with 'phc_ctrl eth0 get'.
    
    Like described in the change in 91c0d987a9788dcc5fe26baafd73bf9242b68900
    the igp clock is disabled when the interface is down and leads to a
    system hang.
    
    So we check if the ptp clock status before reading the timecounter
    register.
    
    Signed-off-by: Heiko Thiery <heiko.thiery@gmail.com>
    Acked-by: Richard Cochran <richardcochran@gmail.com>
    Link: https://lore.kernel.org/r/20210225211514.9115-1-heiko.thiery@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0f5726ab1df4475f2ea9f32bce08f44bc64cd27
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Sat Nov 30 17:56:30 2019 -0800

    hugetlbfs: hugetlb_fault_mutex_hash() cleanup
    
    commit 552546366a30d88bd1d6f5efe848b2ab50fd57e5 upstream.
    
    A new clang diagnostic (-Wsizeof-array-div) warns about the calculation
    to determine the number of u32's in an array of unsigned longs.
    Suppress warning by adding parentheses.
    
    While looking at the above issue, noticed that the 'address' parameter
    to hugetlb_fault_mutex_hash is no longer used.  So, remove it from the
    definition and all callers.
    
    No functional change.
    
    Link: http://lkml.kernel.org/r/20190919011847.18400-1-mike.kravetz@oracle.com
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Reported-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Davidlohr Bueso <dbueso@suse.de>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Cc: Ilie Halip <ilie.halip@gmail.com>
    Cc: David Bolvansky <david.bolvansky@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
