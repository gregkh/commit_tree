commit ee13f7edca5838436feefde90ed1b2ebb07c4184
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Sep 5 09:26:42 2018 +0200

    Linux 4.14.68

commit 77d1658e5dd111dc01972d57ce1984654cca1131
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Feb 5 17:27:46 2018 -0800

    gcc-plugins: Use dynamic initializers
    
    commit b86729109c5fd0a480300f40608aac68764b5adf upstream.
    
    GCC 8 changed the order of some fields and is very picky about ordering
    in static initializers, so instead just move to dynamic initializers,
    and drop the redundant already-zero field assignments.
    
    Suggested-by: Valdis Kletnieks <valdis.kletnieks@vt.edu>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Lance Albertson <lance@osuosl.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 616d41d1b4087a85ec1091f6a7f4460911083f44
Author: Valdis Kletnieks <valdis.kletnieks@vt.edu>
Date:   Sun Feb 4 12:01:43 2018 -0500

    gcc-plugins: Add include required by GCC release 8
    
    commit 80d172431696482d9acd8d2c4ea78fed8956e2a1 upstream.
    
    GCC requires another #include to get the gcc-plugins to build cleanly.
    
    Signed-off-by: Valdis Kletnieks <valdis.kletnieks@vt.edu>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Lance Albertson <lance@osuosl.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73b2e7073b51de0b03ebd15c97dd3ad0c3470810
Author: Scott Bauer <scott.bauer@intel.com>
Date:   Thu Apr 26 11:51:08 2018 -0600

    cdrom: Fix info leak/OOB read in cdrom_ioctl_drive_status
    
    commit 8f3fafc9c2f0ece10832c25f7ffcb07c97a32ad4 upstream.
    
    Like d88b6d04: "cdrom: information leak in cdrom_ioctl_media_changed()"
    
    There is another cast from unsigned long to int which causes
    a bounds check to fail with specially crafted input. The value is
    then used as an index in the slot array in cdrom_slot_status().
    
    Signed-off-by: Scott Bauer <scott.bauer@intel.com>
    Signed-off-by: Scott Bauer <sbauer@plzdonthack.me>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63a0f9de021aac2491be8466e44f35b07e3127b1
Author: Vincent Whitchurch <vincent.whitchurch@axis.com>
Date:   Tue Aug 21 17:25:07 2018 +0200

    watchdog: Mark watchdog touch functions as notrace
    
    commit cb9d7fd51d9fbb329d182423bd7b92d0f8cb0e01 upstream.
    
    Some architectures need to use stop_machine() to patch functions for
    ftrace, and the assumption is that the stopped CPUs do not make function
    calls to traceable functions when they are in the stopped state.
    
    Commit ce4f06dcbb5d ("stop_machine: Touch_nmi_watchdog() after
    MULTI_STOP_PREPARE") added calls to the watchdog touch functions from
    the stopped CPUs and those functions lack notrace annotations.  This
    leads to crashes when enabling/disabling ftrace on ARM kernels built
    with the Thumb-2 instruction set.
    
    Fix it by adding the necessary notrace annotations.
    
    Fixes: ce4f06dcbb5d ("stop_machine: Touch_nmi_watchdog() after MULTI_STOP_PREPARE")
    Signed-off-by: Vincent Whitchurch <vincent.whitchurch@axis.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: oleg@redhat.com
    Cc: tj@kernel.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180821152507.18313-1-vincent.whitchurch@axis.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9f67667e0aeeafa65b4542c3d67173871baedfd
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Tue Jun 26 15:28:30 2018 +0200

    power: generic-adc-battery: check for duplicate properties copied from iio channels
    
    commit a427503edaaed9b75ed9746a654cece7e93e60a8 upstream.
    
    If an iio channel defines a basic property, there are duplicate entries
    in /sys/class/power/*/uevent.
    
    So add a check to avoid duplicates. Since all channels may be duplicates,
    we have to modify the related error check.
    
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: stable@vger.kernel.org
    Fixes: e60fea794e6e ("power: battery: Generic battery driver using IIO")
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54cecb7440bc280d54ce3e843818f2f9c3b1f98c
Author: H. Nikolaus Schaller <hns@goldelico.com>
Date:   Tue Jun 26 15:28:29 2018 +0200

    power: generic-adc-battery: fix out-of-bounds write when copying channel properties
    
    commit 932d47448c3caa0fa99e84d7f5bc302aa286efd8 upstream.
    
    We did have sporadic problems in the pinctrl framework during boot
    where a pin group name unexpectedly became NULL leading to a NULL
    dereference in strcmp.
    
    Detailled analysis of the failing cases did reveal that there were
    two devm allocated objects close to each other. The second one was
    the affected group_desc in pinmux and the first one was the
    psy_desc->properties buffer of the gab driver.
    
    Review of the gab code showed that the address calculation for
    one memcpy() is wrong. It does
    
            properties + sizeof(type) * index
    
    but C is defined to do the index multiplication already for
    pointer + integer additions. Hence the factor was applied twice
    and the memcpy() does write outside of the properties buffer.
    Sometimes it happened to be the pinctrl and triggered the strcmp(NULL).
    
    Anyways, it is overkill to use a memcpy() here instead of a simple
    assignment, which is easier to read and has less risk for wrong
    address calculations. So we change code to a simple assignment.
    
    If we initialize the index to the first free location, we can even
    remove the local variable 'properties'.
    
    This bug seems to exist right from the beginning in 3.7-rc1 in
    
    commit e60fea794e6e ("power: battery: Generic battery driver using IIO")
    
    Signed-off-by: H. Nikolaus Schaller <hns@goldelico.com>
    Cc: stable@vger.kernel.org
    Fixes: e60fea794e6e ("power: battery: Generic battery driver using IIO")
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2a97eba0c4ee31435a4174ffa3818e26d8ee9ac
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Aug 23 16:59:25 2018 +0300

    PM / clk: signedness bug in of_pm_clk_add_clks()
    
    commit 5e2e2f9f76e157063a656351728703cb02b068f1 upstream.
    
    "count" needs to be signed for the error handling to work.  I made "i"
    signed as well so they match.
    
    Fixes: 02113ba93ea4 (PM / clk: Add support for obtaining clocks from device-tree)
    Cc: 4.6+ <stable@vger.kernel.org> # 4.6+
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2adc2541a5c4fc431350192a32198f5f90c2fe17
Author: Alberto Panizzo <alberto@amarulasolutions.com>
Date:   Fri Jul 6 15:18:51 2018 +0200

    clk: rockchip: fix clk_i2sout parent selection bits on rk3399
    
    commit a64ad008980c65d38e6cf6858429c78e6b740c41 upstream.
    
    Register, shift and mask were wrong according to datasheet.
    
    Fixes: 115510053e5e ("clk: rockchip: add clock controller for the RK3399")
    Cc: stable@vger.kernel.org
    Signed-off-by: Alberto Panizzo <alberto@amarulasolutions.com>
    Signed-off-by: Anthony Brandon <anthony@amarulasolutions.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae302d685162f13ba3ab9e1403dc1bdbccb8cec5
Author: Mike Christie <mchristi@redhat.com>
Date:   Thu Jul 26 12:13:49 2018 -0500

    iscsi target: fix session creation failure handling
    
    commit 26abc916a898d34c5ad159315a2f683def3c5555 upstream.
    
    The problem is that iscsi_login_zero_tsih_s1 sets conn->sess early in
    iscsi_login_set_conn_values. If the function fails later like when we
    alloc the idr it does kfree(sess) and leaves the conn->sess pointer set.
    iscsi_login_zero_tsih_s1 then returns -Exyz and we then call
    iscsi_target_login_sess_out and access the freed memory.
    
    This patch has iscsi_login_zero_tsih_s1 either completely setup the
    session or completely tear it down, so later in
    iscsi_target_login_sess_out we can just check for it being set to the
    connection.
    
    Cc: stable@vger.kernel.org
    Fixes: 0957627a9960 ("iscsi-target: Fix sess allocation leak in...")
    Signed-off-by: Mike Christie <mchristi@redhat.com>
    Acked-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Matthew Wilcox <willy@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b55b24cec4ce55da8412cb9768e3d5165f72bd7
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Aug 2 10:51:41 2018 -0700

    scsi: core: Avoid that SCSI device removal through sysfs triggers a deadlock
    
    commit 0ee223b2e1f67cb2de9c0e3247c510d846e74d63 upstream.
    
    A long time ago the unfortunate decision was taken to add a self-deletion
    attribute to the sysfs SCSI device directory. That decision was unfortunate
    because self-deletion is really tricky. We can't drop that attribute
    because widely used user space software depends on it, namely the
    rescan-scsi-bus.sh script. Hence this patch that avoids that writing into
    that attribute triggers a deadlock. See also commit 7973cbd9fbd9 ("[PATCH]
    add sysfs attributes to scan and delete scsi_devices").
    
    This patch avoids that self-removal triggers the following deadlock:
    
    ======================================================
    WARNING: possible circular locking dependency detected
    4.18.0-rc2-dbg+ #5 Not tainted
    ------------------------------------------------------
    modprobe/6539 is trying to acquire lock:
    000000008323c4cd (kn->count#202){++++}, at: kernfs_remove_by_name_ns+0x45/0x90
    
    but task is already holding lock:
    00000000a6ec2c69 (&shost->scan_mutex){+.+.}, at: scsi_remove_host+0x21/0x150 [scsi_mod]
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #1 (&shost->scan_mutex){+.+.}:
           __mutex_lock+0xfe/0xc70
           mutex_lock_nested+0x1b/0x20
           scsi_remove_device+0x26/0x40 [scsi_mod]
           sdev_store_delete+0x27/0x30 [scsi_mod]
           dev_attr_store+0x3e/0x50
           sysfs_kf_write+0x87/0xa0
           kernfs_fop_write+0x190/0x230
           __vfs_write+0xd2/0x3b0
           vfs_write+0x101/0x270
           ksys_write+0xab/0x120
           __x64_sys_write+0x43/0x50
           do_syscall_64+0x77/0x230
           entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    -> #0 (kn->count#202){++++}:
           lock_acquire+0xd2/0x260
           __kernfs_remove+0x424/0x4a0
           kernfs_remove_by_name_ns+0x45/0x90
           remove_files.isra.1+0x3a/0x90
           sysfs_remove_group+0x5c/0xc0
           sysfs_remove_groups+0x39/0x60
           device_remove_attrs+0x82/0xb0
           device_del+0x251/0x580
           __scsi_remove_device+0x19f/0x1d0 [scsi_mod]
           scsi_forget_host+0x37/0xb0 [scsi_mod]
           scsi_remove_host+0x9b/0x150 [scsi_mod]
           sdebug_driver_remove+0x4b/0x150 [scsi_debug]
           device_release_driver_internal+0x241/0x360
           device_release_driver+0x12/0x20
           bus_remove_device+0x1bc/0x290
           device_del+0x259/0x580
           device_unregister+0x1a/0x70
           sdebug_remove_adapter+0x8b/0xf0 [scsi_debug]
           scsi_debug_exit+0x76/0xe8 [scsi_debug]
           __x64_sys_delete_module+0x1c1/0x280
           do_syscall_64+0x77/0x230
           entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    other info that might help us debug this:
    
     Possible unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock(&shost->scan_mutex);
                                   lock(kn->count#202);
                                   lock(&shost->scan_mutex);
      lock(kn->count#202);
    
     *** DEADLOCK ***
    
    2 locks held by modprobe/6539:
     #0: 00000000efaf9298 (&dev->mutex){....}, at: device_release_driver_internal+0x68/0x360
     #1: 00000000a6ec2c69 (&shost->scan_mutex){+.+.}, at: scsi_remove_host+0x21/0x150 [scsi_mod]
    
    stack backtrace:
    CPU: 10 PID: 6539 Comm: modprobe Not tainted 4.18.0-rc2-dbg+ #5
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.0.0-prebuilt.qemu-project.org 04/01/2014
    Call Trace:
     dump_stack+0xa4/0xf5
     print_circular_bug.isra.34+0x213/0x221
     __lock_acquire+0x1a7e/0x1b50
     lock_acquire+0xd2/0x260
     __kernfs_remove+0x424/0x4a0
     kernfs_remove_by_name_ns+0x45/0x90
     remove_files.isra.1+0x3a/0x90
     sysfs_remove_group+0x5c/0xc0
     sysfs_remove_groups+0x39/0x60
     device_remove_attrs+0x82/0xb0
     device_del+0x251/0x580
     __scsi_remove_device+0x19f/0x1d0 [scsi_mod]
     scsi_forget_host+0x37/0xb0 [scsi_mod]
     scsi_remove_host+0x9b/0x150 [scsi_mod]
     sdebug_driver_remove+0x4b/0x150 [scsi_debug]
     device_release_driver_internal+0x241/0x360
     device_release_driver+0x12/0x20
     bus_remove_device+0x1bc/0x290
     device_del+0x259/0x580
     device_unregister+0x1a/0x70
     sdebug_remove_adapter+0x8b/0xf0 [scsi_debug]
     scsi_debug_exit+0x76/0xe8 [scsi_debug]
     __x64_sys_delete_module+0x1c1/0x280
     do_syscall_64+0x77/0x230
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    See also https://www.mail-archive.com/linux-scsi@vger.kernel.org/msg54525.html.
    
    Fixes: ac0ece9174ac ("scsi: use device_remove_file_self() instead of device_schedule_callback()")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: Tejun Heo <tj@kernel.org>
    Cc: Johannes Thumshirn <jthumshirn@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

commit c984f4d1d40a2f349503b3faf946502ccbf02f9f
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Aug 2 10:51:40 2018 -0700

    scsi: sysfs: Introduce sysfs_{un,}break_active_protection()
    
    commit 2afc9166f79b8f6da5f347f48515215ceee4ae37 upstream.
    
    Introduce these two functions and export them such that the next patch
    can add calls to these functions from the SCSI core.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d071004e0249a2ecc5d856dd680835ad46fde062
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Jun 15 14:41:58 2018 -0700

    scsi: mpt3sas: Fix _transport_smp_handler() error path
    
    commit 91b7bdb2c0089cbbb817df6888ab1458c645184e upstream.
    
    This patch avoids that smatch complains about a double unlock on
    ioc->transport_cmds.mutex.
    
    Fixes: 651a01364994 ("scsi: scsi_transport_sas: switch to bsg-lib for SMP passthrough")
    Signed-off-by: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Sathya Prakash <sathya.prakash@broadcom.com>
    Cc: Chaitra P B <chaitra.basappa@broadcom.com>
    Cc: Suganath Prabu Subramani <suganath-prabu.subramani@broadcom.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61ec14f42c844b7d011e0a939e522d577b2ed672
Author: Ricardo Schwarzmeier <Ricardo.Schwarzmeier@infineon.com>
Date:   Tue Jun 26 17:31:45 2018 +0200

    tpm: Return the actual size when receiving an unsupported command
    
    commit 36a11029b07ee30bdc4553274d0efea645ed9d91 upstream.
    
    The userpace expects to read the number of bytes stated in the header.
    Returning the size of the buffer instead would be unexpected.
    
    Cc: stable@vger.kernel.org
    Fixes: 095531f891e6 ("tpm: return a TPM_RC_COMMAND_CODE response if command is not implemented")
    Signed-off-by: Ricardo Schwarzmeier <Ricardo.Schwarzmeier@infineon.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba0797a8016c303e3ab72276e60fb2858c5b4b1a
Author: Paul Burton <paulburton@kernel.org>
Date:   Tue Aug 21 12:12:59 2018 -0700

    MIPS: lib: Provide MIPS64r6 __multi3() for GCC < 7
    
    commit 690d9163bf4b8563a2682e619f938e6a0443947f upstream.
    
    Some versions of GCC suboptimally generate calls to the __multi3()
    intrinsic for MIPS64r6 builds, resulting in link failures due to the
    missing function:
    
        LD      vmlinux.o
        MODPOST vmlinux.o
      kernel/bpf/verifier.o: In function `kmalloc_array':
      include/linux/slab.h:631: undefined reference to `__multi3'
      fs/select.o: In function `kmalloc_array':
      include/linux/slab.h:631: undefined reference to `__multi3'
      ...
    
    We already have a workaround for this in which we provide the
    instrinsic, but we do so selectively for GCC 7 only. Unfortunately the
    issue occurs with older GCC versions too - it has been observed with
    both GCC 5.4.0 & GCC 6.4.0.
    
    MIPSr6 support was introduced in GCC 5, so all major GCC versions prior
    to GCC 8 are affected and we extend our workaround accordingly to all
    MIPS64r6 builds using GCC versions older than GCC 8.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Reported-by: Vladimir Kondratiev <vladimir.kondratiev@intel.com>
    Fixes: ebabcf17bcd7 ("MIPS: Implement __multi3 for GCC7 MIPS64r6 builds")
    Patchwork: https://patchwork.linux-mips.org/patch/20297/
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: stable@vger.kernel.org # 4.15+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c40cd97ffe335101dfb738f7af138d49fb8b44f
Author: Huacai Chen <chenhc@lemote.com>
Date:   Fri Jul 13 15:37:57 2018 +0800

    MIPS: Change definition of cpu_relax() for Loongson-3
    
    commit a30718868915fbb991a9ae9e45594b059f28e9ae upstream.
    
    Linux expects that if a CPU modifies a memory location, then that
    modification will eventually become visible to other CPUs in the system.
    
    Loongson 3 CPUs include a Store Fill Buffer (SFB) which sits between a
    core & its L1 data cache, queueing memory accesses & allowing for faster
    forwarding of data from pending stores to younger loads from the core.
    Unfortunately the SFB prioritizes loads such that a continuous stream of
    loads may cause a pending write to be buffered indefinitely. This is
    problematic if we end up with 2 CPUs which each perform a store that the
    other polls for - one or both CPUs may end up with their stores buffered
    in the SFB, never reaching cache due to the continuous reads from the
    poll loop. Such a deadlock condition has been observed whilst running
    qspinlock code.
    
    This patch changes the definition of cpu_relax() to smp_mb() for
    Loongson-3, forcing a flush of the SFB on SMP systems which will cause
    any pending writes to make it as far as the L1 caches where they will
    become visible to other CPUs. If the kernel is not compiled for SMP
    support, this will expand to a barrier() as before.
    
    This workaround matches that currently implemented for ARM when
    CONFIG_ARM_ERRATA_754327=y, which was introduced by commit 534be1d5a2da
    ("ARM: 6194/1: change definition of cpu_relax() for ARM11MPCore").
    
    Although the workaround is only required when the Loongson 3 SFB
    functionality is enabled, and we only began explicitly enabling that
    functionality in v4.7 with commit 1e820da3c9af ("MIPS: Loongson-3:
    Introduce CONFIG_LOONGSON3_ENHANCEMENT"), existing or future firmware
    may enable the SFB which means we may need the workaround backported to
    earlier kernels too.
    
    [paul.burton@mips.com:
      - Reword commit message & comment.
      - Limit stable backport to v3.15+ where we support Loongson 3 CPUs.]
    
    Signed-off-by: Huacai Chen <chenhc@lemote.com>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    References: 534be1d5a2da ("ARM: 6194/1: change definition of cpu_relax() for ARM11MPCore")
    References: 1e820da3c9af ("MIPS: Loongson-3: Introduce CONFIG_LOONGSON3_ENHANCEMENT")
    Patchwork: https://patchwork.linux-mips.org/patch/19830/
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: linux-mips@linux-mips.org
    Cc: Fuxin Zhang <zhangfx@lemote.com>
    Cc: Zhangjin Wu <wuzhangjin@gmail.com>
    Cc: Huacai Chen <chenhuacai@gmail.com>
    Cc: stable@vger.kernel.org # v3.15+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 156b5e33ab1214dd3301acb8c7e3ff67fa827532
Author: Paul Burton <paulburton@kernel.org>
Date:   Mon Jun 18 17:37:59 2018 -0700

    MIPS: Always use -march=<arch>, not -<arch> shortcuts
    
    commit 344ebf09949c31bcb8818d8458b65add29f1d67b upstream.
    
    The VDSO Makefile filters CFLAGS to select a subset which it uses whilst
    building the VDSO ELF. One of the flags it allows through is the -march=
    flag that selects the architecture/ISA to target.
    
    Unfortunately in cases where CONFIG_CPU_MIPS32_R{1,2}=y and the
    toolchain defaults to building for MIPS64, the main MIPS Makefile ends
    up using the short-form -<arch> flags in cflags-y. This is because the
    calls to cc-option always fail to use the long-form -march=<arch> flag
    due to the lack of an -mabi=<abi> flag in KBUILD_CFLAGS at the point
    where the cc-option function is executed. The resulting GCC invocation
    is something like:
    
      $ mips64-linux-gcc -Werror -march=mips32r2 -c -x c /dev/null -o tmp
      cc1: error: '-march=mips32r2' is not compatible with the selected ABI
    
    These short-form -<arch> flags are dropped by the VDSO Makefile's
    filtering, and so we attempt to build the VDSO without specifying any
    architecture. This results in an attempt to build the VDSO using
    whatever the compiler's default architecture is, regardless of whether
    that is suitable for the kernel configuration.
    
    One encountered build failure resulting from this mismatch is a
    rejection of the sync instruction if the kernel is configured for a
    MIPS32 or MIPS64 r1 or r2 target but the toolchain defaults to an older
    architecture revision such as MIPS1 which did not include the sync
    instruction:
    
        CC      arch/mips/vdso/gettimeofday.o
      /tmp/ccGQKoOj.s: Assembler messages:
      /tmp/ccGQKoOj.s:273: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:329: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:520: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:714: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:1009: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:1066: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:1114: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:1279: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:1334: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:1374: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:1459: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:1514: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:1814: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:2002: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      /tmp/ccGQKoOj.s:2066: Error: opcode not supported on this processor: mips1 (mips1) `sync'
      make[2]: *** [scripts/Makefile.build:318: arch/mips/vdso/gettimeofday.o] Error 1
      make[1]: *** [scripts/Makefile.build:558: arch/mips/vdso] Error 2
      make[1]: *** Waiting for unfinished jobs....
    
    This can be reproduced for example by attempting to build
    pistachio_defconfig using Arnd's GCC 8.1.0 mips64 toolchain from
    kernel.org:
    
      https://mirrors.edge.kernel.org/pub/tools/crosstool/files/bin/x86_64/8.1.0/x86_64-gcc-8.1.0-nolibc-mips64-linux.tar.xz
    
    Resolve this problem by using the long-form -march=<arch> in all cases,
    which makes it through the arch/mips/vdso/Makefile's filtering & is thus
    consistently used to build both the kernel proper & the VDSO.
    
    The use of cc-option to prefer the long-form & fall back to the
    short-form flags makes no sense since the short-form is just an
    abbreviation for the also-supported long-form in all GCC versions that
    we support building with. This means there is no case in which we have
    to use the short-form -<arch> flags, so we can simply remove them.
    
    The manual redefinition of _MIPS_ISA is removed naturally along with the
    use of the short-form flags that it accompanied, and whilst here we
    remove the separate assembler ISA selection. I suspect that both of
    these were only required due to the mips32 vs mips2 mismatch that was
    introduced by commit 59b3e8e9aac6 ("[MIPS] Makefile crapectomy.") and
    fixed but not cleaned up by commit 9200c0b2a07c ("[MIPS] Fix Makefile
    bugs for MIPS32/MIPS64 R1 and R2.").
    
    I've marked this for backport as far as v4.4 where the MIPS VDSO was
    introduced. In earlier kernels there should be no ill effect to using
    the short-form flags.
    
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: stable@vger.kernel.org # v4.4+
    Reviewed-by: James Hogan <jhogan@kernel.org>
    Patchwork: https://patchwork.linux-mips.org/patch/19579/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62c59b1ddbdc62ca9cf775ecc0d77ebb380105cf
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Tue May 15 23:33:26 2018 +0100

    MIPS: Correct the 64-bit DSP accumulator register size
    
    commit f5958b4cf4fc38ed4583ab83fb7c4cd1ab05f47b upstream.
    
    Use the `unsigned long' rather than `__u32' type for DSP accumulator
    registers, like with the regular MIPS multiply/divide accumulator and
    general-purpose registers, as all are 64-bit in 64-bit implementations
    and using a 32-bit data type leads to contents truncation on context
    saving.
    
    Update `arch_ptrace' and `compat_arch_ptrace' accordingly, removing
    casts that are similarly not used with multiply/divide accumulator or
    general-purpose register accesses.
    
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Fixes: e50c0a8fa60d ("Support the MIPS32 / MIPS64 DSP ASE.")
    Patchwork: https://patchwork.linux-mips.org/patch/19329/
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-fsdevel@vger.kernel.org
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Cc: stable@vger.kernel.org # 2.6.15+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bdf9c17598014d0f10c7500edeefc25e0f501c7
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sat Apr 28 21:35:01 2018 +0900

    kprobes: Make list and blacklist root user read only
    
    commit f2a3ab36077222437b4826fc76111caa14562b7c upstream.
    
    Since the blacklist and list files on debugfs indicates
    a sensitive address information to reader, it should be
    restricted to the root user.
    
    Suggested-by: Thomas Richter <tmricht@linux.ibm.com>
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
    Cc: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: David Howells <dhowells@redhat.com>
    Cc: David S . Miller <davem@davemloft.net>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Jon Medhurst <tixy@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tobin C . Harding <me@tobin.cc>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: acme@kernel.org
    Cc: akpm@linux-foundation.org
    Cc: brueckner@linux.vnet.ibm.com
    Cc: linux-arch@vger.kernel.org
    Cc: rostedt@goodmis.org
    Cc: schwidefsky@de.ibm.com
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/lkml/152491890171.9916.5183693615601334087.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ba27d3e2b4acfa9c0d16132564393d646ea2a4d
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sat Apr 28 21:37:33 2018 +0900

    kprobes/arm: Fix %p uses in error messages
    
    commit 75b2f5f5911fe7a2fc82969b2b24dde34e8f820d upstream.
    
    Fix %p uses in error messages by removing it and
    using general dumper.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
    Cc: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: David Howells <dhowells@redhat.com>
    Cc: David S . Miller <davem@davemloft.net>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Jon Medhurst <tixy@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Thomas Richter <tmricht@linux.ibm.com>
    Cc: Tobin C . Harding <me@tobin.cc>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: acme@kernel.org
    Cc: akpm@linux-foundation.org
    Cc: brueckner@linux.vnet.ibm.com
    Cc: linux-arch@vger.kernel.org
    Cc: rostedt@goodmis.org
    Cc: schwidefsky@de.ibm.com
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/lkml/152491905361.9916.15300852365956231645.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0536c9e41f3f8299e67f9f4de3aa064351cb23af
Author: Sebastian Ott <sebott@linux.ibm.com>
Date:   Mon Aug 13 11:26:46 2018 +0200

    s390/pci: fix out of bounds access during irq setup
    
    commit 866f3576a72b2233a76dffb80290f8086dc49e17 upstream.
    
    During interrupt setup we allocate interrupt vectors, walk the list of msi
    descriptors, and fill in the message data. Requesting more interrupts than
    supported on s390 can lead to an out of bounds access.
    
    When we restrict the number of interrupts we should also stop walking the
    msi list after all supported interrupts are handled.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Sebastian Ott <sebott@linux.ibm.com>
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ac8fbd174d76e23e29faf6020911cb69c8a154a
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Tue Jul 31 16:14:18 2018 +0200

    s390/numa: move initial setup of node_to_cpumask_map
    
    commit fb7d7518b0d65955f91c7b875c36eae7694c69bd upstream.
    
    The numa_init_early initcall sets the node_to_cpumask_map[0] to the
    full cpu_possible_mask. Unfortunately this early_initcall is too late,
    the NUMA setup for numa=emu is done even earlier. The order of calls
    is numa_setup() -> emu_update_cpu_topology(), then the early_initcalls(),
    followed by sched_init_domains().
    
    Starting with git commit 051f3ca02e46432c0965e8948f00c07d8a2f09c0
    "sched/topology: Introduce NUMA identity node sched domain"
    the incorrect node_to_cpumask_map[0] really screws up the domain
    setup and the kernel panics with the follow oops:
    
    Cc: <stable@vger.kernel.org> # v4.15+
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97e3dcc08e4ee3b2edd93514479f98b7e79ac056
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Wed May 16 09:37:25 2018 +0200

    s390/qdio: reset old sbal_state flags
    
    commit 64e03ff72623b8c2ea89ca3cb660094e019ed4ae upstream.
    
    When allocating a new AOB fails, handle_outbound() is still capable of
    transmitting the selected buffer (just without async completion).
    
    But if a previous transfer on this queue slot used async completion, its
    sbal_state flags field is still set to QDIO_OUTBUF_STATE_FLAG_PENDING.
    So when the upper layer driver sees this stale flag, it expects an async
    completion that never happens.
    
    Fix this by unconditionally clearing the flags field.
    
    Fixes: 104ea556ee7f ("qdio: support asynchronous delivery of storage blocks")
    Cc: <stable@vger.kernel.org> #v3.2+
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcd169a2726a789699d487cc35a606cdf94c7d85
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Mon Aug 6 14:26:39 2018 +0200

    s390: fix br_r1_trampoline for machines without exrl
    
    commit 26f843848bae973817b3587780ce6b7b0200d3e4 upstream.
    
    For machines without the exrl instruction the BFP jit generates
    code that uses an "br %r1" instruction located in the lowcore page.
    Unfortunately there is a cut & paste error that puts an additional
    "larl %r1,.+14" instruction in the code that clobbers the branch
    target address in %r1. Remove the larl instruction.
    
    Cc: <stable@vger.kernel.org> # v4.17+
    Fixes: de5cb6eb51 ("s390: use expoline thunks in the BPF JIT")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fae74e9a44141e8061965505ee8c66881bd6c57
Author: Gerald Schaefer <gerald.schaefer@de.ibm.com>
Date:   Tue Aug 7 18:57:11 2018 +0200

    s390/mm: fix addressing exception after suspend/resume
    
    commit 37a366face294facb9c9d9fdd9f5b64a27456cbd upstream.
    
    Commit c9b5ad546e7d "s390/mm: tag normal pages vs pages used in page tables"
    accidentally changed the logic in arch_set_page_states(), which is used by
    the suspend/resume code. set_page_stable(page, order) was changed to
    set_page_stable_dat(page, 0). After this, only the first page of higher order
    pages will be set to stable, and a write to one of the unstable pages will
    result in an addressing exception.
    
    Fix this by using "order" again, instead of "0".
    
    Fixes: c9b5ad546e7d ("s390/mm: tag normal pages vs pages used in page tables")
    Cc: stable@vger.kernel.org # 4.14+
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbcbaf56ff4b677974d8bb3dd67a134f61055dd1
Author: Jann Horn <jannh@google.com>
Date:   Tue Aug 28 20:40:33 2018 +0200

    x86/entry/64: Wipe KASAN stack shadow before rewind_stack_do_exit()
    
    commit f12d11c5c184626b4befdee3d573ec8237405a33 upstream.
    
    Reset the KASAN shadow state of the task stack before rewinding RSP.
    Without this, a kernel oops will leave parts of the stack poisoned, and
    code running under do_exit() can trip over such poisoned regions and cause
    nonsensical false-positive KASAN reports about stack-out-of-bounds bugs.
    
    This does not wipe the exception stacks; if an oops happens on an exception
    stack, it might result in random KASAN false-positives from other tasks
    afterwards. This is probably relatively uninteresting, since if the kernel
    oopses on an exception stack, there are most likely bigger things to worry
    about. It'd be more interesting if vmapped stacks and KASAN were
    compatible, since then handle_stack_overflow() would oops from exception
    stack context.
    
    Fixes: 2deb4be28077 ("x86/dumpstack: When OOPSing, rewind the stack before do_exit()")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Alexander Potapenko <glider@google.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: kasan-dev@googlegroups.com
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180828184033.93712-1-jannh@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf9fcdd6c2a258b817361967b66b5aba5b7376f2
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Wed Aug 15 08:14:37 2018 -0500

    hwmon: (nct6775) Fix potential Spectre v1
    
    commit d49dbfade96d5b0863ca8a90122a805edd5ef50a upstream.
    
    val can be indirectly controlled by user-space, hence leading to
    a potential exploitation of the Spectre variant 1 vulnerability.
    
    This issue was detected with the help of Smatch:
    
    vers/hwmon/nct6775.c:2698 store_pwm_weight_temp_sel() warn: potential
    spectre issue 'data->temp_src' [r]
    
    Fix this by sanitizing val before using it to index data->temp_src
    
    Notice that given that speculation windows are large, the policy is
    to kill the speculation on the first load and not worry if it can be
    completed with a dependent load/store [1].
    
    [1] https://marc.info/?l=linux-kernel&m=152449131114778&w=2
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec4034835eaf9aba4399e3c6770c3e6d6cc09504
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Aug 24 10:03:50 2018 -0700

    x86/speculation/l1tf: Increase l1tf memory limit for Nehalem+
    
    commit cc51e5428ea54f575d49cfcede1d4cb3a72b4ec4 upstream.
    
    On Nehalem and newer core CPUs the CPU cache internally uses 44 bits
    physical address space. The L1TF workaround is limited by this internal
    cache address width, and needs to have one bit free there for the
    mitigation to work.
    
    Older client systems report only 36bit physical address space so the range
    check decides that L1TF is not mitigated for a 36bit phys/32GB system with
    some memory holes.
    
    But since these actually have the larger internal cache width this warning
    is bogus because it would only really be needed if the system had more than
    43bits of memory.
    
    Add a new internal x86_cache_bits field. Normally it is the same as the
    physical bits field reported by CPUID, but for Nehalem and newerforce it to
    be at least 44bits.
    
    Change the L1TF memory size warning to use the new cache_bits field to
    avoid bogus warnings and remove the bogus comment about memory size.
    
    Fixes: 17dbca119312 ("x86/speculation/l1tf: Add sysfs reporting for l1tf")
    Reported-by: George Anchev <studio@anchev.net>
    Reported-by: Christopher Snowhill <kode54@gmail.com>
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86@kernel.org
    Cc: linux-kernel@vger.kernel.org
    Cc: Michael Hocko <mhocko@suse.com>
    Cc: vbabka@suse.cz
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180824170351.34874-1-andi@firstfloor.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f64979512c5e2c4015ed4b2bdf2291b4f294d451
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Aug 24 10:03:51 2018 -0700

    x86/spectre: Add missing family 6 check to microcode check
    
    commit 1ab534e85c93945f7862378d8c8adcf408205b19 upstream.
    
    The check for Spectre microcodes does not check for family 6, only the
    model numbers.
    
    Add a family 6 check to avoid ambiguity with other families.
    
    Fixes: a5b296636453 ("x86/cpufeature: Blacklist SPEC_CTRL/PRED_CMD on early Spectre v2 microcodes")
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86@kernel.org
    Cc: linux-kernel@vger.kernel.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180824170351.34874-2-andi@firstfloor.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f822ceb826080784fa3db2e63a28655befddf6fc
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Mon Aug 27 14:40:09 2018 -0700

    x86/irqflags: Mark native_restore_fl extern inline
    
    commit 1f59a4581b5ecfe9b4f049a7a2cf904d8352842d upstream.
    
    This should have been marked extern inline in order to pick up the out
    of line definition in arch/x86/kernel/irqflags.S.
    
    Fixes: 208cbb325589 ("x86/irqflags: Provide a declaration for native_save_fl")
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180827214011.55428-1-ndesaulniers@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53f01e2004ae862f76240c7d92a59fa00a7bfa96
Author: Andy Lutomirski <luto@kernel.org>
Date:   Wed Aug 29 08:47:18 2018 -0700

    x86/nmi: Fix NMI uaccess race against CR3 switching
    
    commit 4012e77a903d114f915fc607d6d2ed54a3d6c9b1 upstream.
    
    A NMI can hit in the middle of context switching or in the middle of
    switch_mm_irqs_off().  In either case, CR3 might not match current->mm,
    which could cause copy_from_user_nmi() and friends to read the wrong
    memory.
    
    Fix it by adding a new nmi_uaccess_okay() helper and checking it in
    copy_from_user_nmi() and in __copy_from_user_nmi()'s callers.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Rik van Riel <riel@surriel.com>
    Cc: Nadav Amit <nadav.amit@gmail.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Jann Horn <jannh@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/dd956eba16646fd0b15c3c0741269dfd84452dac.1535557289.git.luto@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbd5b82d30d2884344f324e3e5709e189fa819c4
Author: Samuel Neves <sneves@dei.uc.pt>
Date:   Sat Sep 1 21:14:52 2018 +0100

    x86/vdso: Fix lsl operand order
    
    commit e78e5a91456fcecaa2efbb3706572fe043766f4d upstream.
    
    In the __getcpu function, lsl is using the wrong target and destination
    registers. Luckily, the compiler tends to choose %eax for both variables,
    so it has been working so far.
    
    Fixes: a582c540ac1b ("x86/vdso: Use RDPID in preference to LSL when available")
    Signed-off-by: Samuel Neves <sneves@dei.uc.pt>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Andy Lutomirski <luto@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180901201452.27828-1-sneves@dei.uc.pt
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42228037aa5fd789fbde006b1ff74c8ae5c4f93f
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jul 13 17:55:15 2018 +0300

    pinctrl: freescale: off by one in imx1_pinconf_group_dbg_show()
    
    commit 19da44cd33a3a6ff7c97fff0189999ff15b241e4 upstream.
    
    The info->groups[] array is allocated in imx1_pinctrl_parse_dt().  It
    has info->ngroups elements.  Thus the > here should be >= to prevent
    reading one element beyond the end of the array.
    
    Cc: stable@vger.kernel.org
    Fixes: 30612cd90005 ("pinctrl: imx1 core driver")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Uwe Kleine-König <u.kleine-könig@pengutronix.de>
    Acked-by: Dong Aisheng <Aisheng.dong@nxp.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7806d2ef49042e5941869363042089768552211f
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Thu Jul 26 15:49:10 2018 -0500

    ASoC: sirf: Fix potential NULL pointer dereference
    
    commit ae1c696a480c67c45fb23b35162183f72c6be0e1 upstream.
    
    There is a potential execution path in which function
    platform_get_resource() returns NULL. If this happens,
    we will end up having a NULL pointer dereference.
    
    Fix this by replacing devm_ioremap with devm_ioremap_resource,
    which has the NULL check and the memory region request.
    
    This code was detected with the help of Coccinelle.
    
    Cc: stable@vger.kernel.org
    Fixes: 2bd8d1d5cf89 ("ASoC: sirf: Add audio usp interface driver")
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ef691428ee3f8cec8e4374cf4cf4a6eae9c0bf0
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Jul 25 22:40:49 2018 +0200

    ASoC: zte: Fix incorrect PCM format bit usages
    
    commit c889a45d229938a94b50aadb819def8bb11a6a54 upstream.
    
    zx-tdm driver sets the DAI driver definitions with the format bits
    wrongly set with SNDRV_PCM_FORMAT_*, instead of SNDRV_PCM_FMTBIT_*.
    
    This patch corrects the definitions.
    
    Spotted by a sparse warning:
      sound/soc/zte/zx-tdm.c:363:35: warning: restricted snd_pcm_format_t degrades to integer
    
    Fixes: 870e0ddc4345 ("ASoC: zx-tdm: add zte's tdm controller driver")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1913b9e07e7044dc8d98a8998669cfa1b7461fe
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Wed Jun 27 17:36:38 2018 +0200

    ASoC: dpcm: don't merge format from invalid codec dai
    
    commit 4febced15ac8ddb9cf3e603edb111842e4863d9a upstream.
    
    When merging codec formats, dpcm_runtime_base_format() should skip
    the codecs which are not supporting the current stream direction.
    
    At the moment, if a BE link has more than one codec, and only one
    of these codecs has no capture DAI, it becomes impossible to start
    a capture stream because the merged format would be 0.
    
    Skipping invalid codec DAI solves the problem.
    
    Fixes: b073ed4e2126 ("ASoC: soc-pcm: DPCM cares BE format")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e16bbdeccdd7fa073f35c98f2c1d69188984731e
Author: Michael Buesch <m@bues.ch>
Date:   Tue Jul 31 21:14:04 2018 +0200

    b43/leds: Ensure NUL-termination of LED name string
    
    commit 2aa650d1950fce94f696ebd7db30b8830c2c946f upstream.
    
    strncpy might not NUL-terminate the string, if the name equals the buffer size.
    Use strlcpy instead.
    
    Signed-off-by: Michael Buesch <m@bues.ch>
    Cc: stable@vger.kernel.org
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0f3784ee3e944bc0044da45ad1e56580fd137d9
Author: Michael Buesch <m@bues.ch>
Date:   Tue Jul 31 21:14:16 2018 +0200

    b43legacy/leds: Ensure NUL-termination of LED name string
    
    commit 4d77a89e3924b12f4a5628b21237e57ab4703866 upstream.
    
    strncpy might not NUL-terminate the string, if the name equals the buffer size.
    Use strlcpy instead.
    
    Signed-off-by: Michael Buesch <m@bues.ch>
    Cc: stable@vger.kernel.org
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f337a54878e2c0d662ee7bd04b6daabfdaad176f
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sun Jun 3 16:41:00 2018 +0200

    udl-kms: avoid division
    
    commit 91ba11fb7d7ca0a3bbe8a512e65e666e2ec1e889 upstream.
    
    Division is slow, so it shouldn't be done by the pixel generating code.
    The driver supports only 2 or 4 bytes per pixel, so we can replace
    division with a shift.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0357c1895aedbcbbd9a2eefbff9504f904161f7
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sun Jun 3 16:40:57 2018 +0200

    udl-kms: fix crash due to uninitialized memory
    
    commit 09a00abe3a9941c2715ca83eb88172cd2f54d8fd upstream.
    
    We must use kzalloc when allocating the fb_deferred_io structure.
    Otherwise, the field first_io is undefined and it causes a crash.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86c18c5a4bc5dbd86ddd74da2735188c4b09692a
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sun Jun 3 16:40:56 2018 +0200

    udl-kms: handle allocation failure
    
    commit 542bb9788a1f485eb1a2229178f665d8ea166156 upstream.
    
    Allocations larger than PAGE_ALLOC_COSTLY_ORDER are unreliable and they
    may fail anytime. This patch fixes the udl kms driver so that when a large
    alloactions fails, it tries to do multiple smaller allocations.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29e641a3693a14bfcf144dc245ded989e00025e6
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sun Jun 3 16:40:55 2018 +0200

    udl-kms: change down_interruptible to down
    
    commit 8456b99c16d193c4c3b7df305cf431e027f0189c upstream.
    
    If we leave urbs around, it causes not only leak, but also memory
    corruption. This patch fixes the function udl_free_urb_list, so that it
    always waits for all urbs that are in progress.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8a3f3a03655a3b4fb2c40972034a40c77b2842e
Author: Kirill Tkhai <ktkhai@virtuozzo.com>
Date:   Thu Jul 19 15:49:39 2018 +0300

    fuse: Add missed unlock_page() to fuse_readpages_fill()
    
    commit 109728ccc5933151c68d1106e4065478a487a323 upstream.
    
    The above error path returns with page unlocked, so this place seems also
    to behave the same.
    
    Fixes: f8dbdf81821b ("fuse: rework fuse_readpages()")
    Signed-off-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff4a71855d0a4538f705894679ae0754374549e1
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Jul 26 16:13:11 2018 +0200

    fuse: Fix oops at process_init_reply()
    
    commit e8f3bd773d22f488724dffb886a1618da85c2966 upstream.
    
    syzbot is hitting NULL pointer dereference at process_init_reply().
    This is because deactivate_locked_super() is called before response for
    initial request is processed.
    
    Fix this by aborting and waiting for all requests (including FUSE_INIT)
    before resetting fc->sb.
    
    Original patch by Tetsuo Handa <penguin-kernel@I-love.SKAURA.ne.jp>.
    
    Reported-by: syzbot <syzbot+b62f08f4d5857755e3bc@syzkaller.appspotmail.com>
    Fixes: e27c9d3877a0 ("fuse: fuse: add time_gran to INIT_OUT")
    Cc: <stable@vger.kernel.org> # v3.19
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9732069238128212a2c2b9b449a88482e627157b
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Jul 26 16:13:11 2018 +0200

    fuse: umount should wait for all requests
    
    commit b8f95e5d13f5f0191dcb4b9113113d241636e7cb upstream.
    
    fuse_abort_conn() does not guarantee that all async requests have actually
    finished aborting (i.e. their ->end() function is called).  This could
    actually result in still used inodes after umount.
    
    Add a helper to wait until all requests are fully done.  This is done by
    looking at the "num_waiting" counter.  When this counter drops to zero, we
    can be sure that no more requests are outstanding.
    
    Fixes: 0d8e84b0432b ("fuse: simplify request abort")
    Cc: <stable@vger.kernel.org> # v4.2
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc17d7519e8e692ad270a7b73cdd6e6740c54493
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Jul 26 16:13:11 2018 +0200

    fuse: fix unlocked access to processing queue
    
    commit 45ff350bbd9d0f0977ff270a0d427c71520c0c37 upstream.
    
    fuse_dev_release() assumes that it's the only one referencing the
    fpq->processing list, but that's not true, since fuse_abort_conn() can be
    doing the same without any serialization between the two.
    
    Fixes: c3696046beb3 ("fuse: separate pqueue for clones")
    Cc: <stable@vger.kernel.org> # v4.2
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfb6eca6e4bbacf92630d551a108645163a8f80d
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Jul 26 16:13:11 2018 +0200

    fuse: fix double request_end()
    
    commit 87114373ea507895a62afb10d2910bd9adac35a8 upstream.
    
    Refcounting of request is broken when fuse_abort_conn() is called and
    request is on the fpq->io list:
    
     - ref is taken too late
     - then it is not dropped
    
    Fixes: 0d8e84b0432b ("fuse: simplify request abort")
    Cc: <stable@vger.kernel.org> # v4.2
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d392674443cb561b2b9161d47198d3428b49d7c
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Thu Jul 26 16:13:11 2018 +0200

    fuse: fix initial parallel dirops
    
    commit 63576c13bd17848376c8ba4a98f5d5151140c4ac upstream.
    
    If parallel dirops are enabled in FUSE_INIT reply, then first operation may
    leave fi->mutex held.
    
    Reported-by: syzbot <syzbot+3f7b29af1baa9d0a55be@syzkaller.appspotmail.com>
    Fixes: 5c672ab3f0ee ("fuse: serialize dirops by default")
    Cc: <stable@vger.kernel.org> # v4.7
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaebcf902ae0260b9f9b5bacdc4530c164ca114f
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Tue Jul 17 19:00:33 2018 +0300

    fuse: Don't access pipe->buffers without pipe_lock()
    
    commit a2477b0e67c52f4364a47c3ad70902bc2a61bd4c upstream.
    
    fuse_dev_splice_write() reads pipe->buffers to determine the size of
    'bufs' array before taking the pipe_lock(). This is not safe as
    another thread might change the 'pipe->buffers' between the allocation
    and taking the pipe_lock(). So we end up with too small 'bufs' array.
    
    Move the bufs allocations inside pipe_lock()/pipe_unlock() to fix this.
    
    Fixes: dd3bb14f44a6 ("fuse: support splice() writing to fuse device")
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: <stable@vger.kernel.org> # v2.6.35
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c49505f6efb191287c3b3d8fa6e8eb43ec4b20df
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Tue Aug 14 12:32:19 2018 -0500

    x86/kvm/vmx: Remove duplicate l1d flush definitions
    
    commit 94d7a86c21a3d6046bf4616272313cb7d525075a upstream.
    
    These are already defined higher up in the file.
    
    Fixes: 7db92e165ac8 ("x86/kvm: Move l1tf setup function")
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/d7ca03ae210d07173452aeed85ffe344301219a5.1534253536.git.jpoimboe@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 933e1ab12051d00b6502732438c796a95f7db0d3
Author: Thomas Gleixner <tglx@xxxxxxxxxxxxx>
Date:   Sun Aug 12 20:41:45 2018 +0200

    KVM: x86: SVM: Call x86_spec_ctrl_set_guest/host() with interrupts disabled
    
    commit 024d83cadc6b2af027e473720f3c3da97496c318 upstream.
    
    Mikhail reported the following lockdep splat:
    
    WARNING: possible irq lock inversion dependency detected
    CPU 0/KVM/10284 just changed the state of lock:
      000000000d538a88 (&st->lock){+...}, at:
      speculative_store_bypass_update+0x10b/0x170
    
    but this lock was taken by another, HARDIRQ-safe lock
    in the past:
    
    (&(&sighand->siglock)->rlock){-.-.}
    
       and interrupts could create inverse lock ordering between them.
    
    Possible interrupt unsafe locking scenario:
    
        CPU0                    CPU1
        ----                    ----
       lock(&st->lock);
                               local_irq_disable();
                               lock(&(&sighand->siglock)->rlock);
                               lock(&st->lock);
        <Interrupt>
         lock(&(&sighand->siglock)->rlock);
         *** DEADLOCK ***
    
    The code path which connects those locks is:
    
       speculative_store_bypass_update()
       ssb_prctl_set()
       do_seccomp()
       do_syscall_64()
    
    In svm_vcpu_run() speculative_store_bypass_update() is called with
    interupts enabled via x86_virt_spec_ctrl_set_guest/host().
    
    This is actually a false positive, because GIF=0 so interrupts are
    disabled even if IF=1; however, we can easily move the invocations of
    x86_virt_spec_ctrl_set_guest/host() into the interrupt disabled region to
    cure it, and it's a good idea to keep the GIF=0/IF=1 area as small
    and self-contained as possible.
    
    Fixes: 1f50ddb4f418 ("x86/speculation: Handle HT correctly on AMD")
    Reported-by: Mikhail Gavrilov <mikhail.v.gavrilov@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Mikhail Gavrilov <mikhail.v.gavrilov@gmail.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: kvm@vger.kernel.org
    Cc: x86@kernel.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cedb8037f0697a8c1b206ca7b02150182adb049b
Author: Rian Hunter <rian@alum.mit.edu>
Date:   Sun Aug 19 16:08:53 2018 -0700

    x86/process: Re-export start_thread()
    
    commit dc76803e57cc86589c4efcb5362918f9b0c0436f upstream.
    
    The consolidation of the start_thread() functions removed the export
    unintentionally. This breaks binfmt handlers built as a module.
    
    Add it back.
    
    Fixes: e634d8fc792c ("x86-64: merge the standard and compat start_thread() functions")
    Signed-off-by: Rian Hunter <rian@alum.mit.edu>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Vitaly Kuznetsov <vkuznets@redhat.com>
    Cc: Joerg Roedel <jroedel@suse.de>
    Cc: Dmitry Safonov <dima@arista.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180819230854.7275-1-rian@alum.mit.edu
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4587db4c2a95db842d05313d37a332ce210f5bb7
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Aug 16 12:41:15 2018 -0700

    x86/vdso: Fix vDSO build if a retpoline is emitted
    
    commit 2e549b2ee0e358bc758480e716b881f9cabedb6a upstream.
    
    Currently, if the vDSO ends up containing an indirect branch or
    call, GCC will emit the "external thunk" style of retpoline, and it
    will fail to link.
    
    Fix it by building the vDSO with inline retpoline thunks.
    
    I haven't seen any reports of this triggering on an unpatched
    kernel.
    
    Fixes: commit 76b043848fd2 ("x86/retpoline: Add initial retpoline support")
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Matt Rickard <matt@softrans.com.au>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Jason Vas Dias <jason.vas.dias@gmail.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/c76538cd3afbe19c6246c2d1715bc6a60bd63985.1534448381.git.luto@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 310f2a6e3ad39a9349c82d575e92d906fbad37c1
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Thu Aug 23 16:21:29 2018 +0200

    x86/speculation/l1tf: Suggest what to do on systems with too much RAM
    
    commit 6a012288d6906fee1dbc244050ade1dafe4a9c8d upstream.
    
    Two users have reported [1] that they have an "extremely unlikely" system
    with more than MAX_PA/2 memory and L1TF mitigation is not effective.
    
    Make the warning more helpful by suggesting the proper mem=X kernel boot
    parameter to make it effective and a link to the L1TF document to help
    decide if the mitigation is worth the unusable RAM.
    
    [1] https://bugzilla.suse.com/show_bug.cgi?id=1105536
    
    Suggested-by: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: "H . Peter Anvin" <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/966571f0-9d7f-43dc-92c6-a10eec7a1254@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59463ec29cacd63844e27fbefd34847fbfead956
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Thu Aug 23 15:44:18 2018 +0200

    x86/speculation/l1tf: Fix off-by-one error when warning that system has too much RAM
    
    commit b0a182f875689647b014bc01d36b340217792852 upstream.
    
    Two users have reported [1] that they have an "extremely unlikely" system
    with more than MAX_PA/2 memory and L1TF mitigation is not effective. In
    fact it's a CPU with 36bits phys limit (64GB) and 32GB memory, but due to
    holes in the e820 map, the main region is almost 500MB over the 32GB limit:
    
    [    0.000000] BIOS-e820: [mem 0x0000000100000000-0x000000081effffff] usable
    
    Suggestions to use 'mem=32G' to enable the L1TF mitigation while losing the
    500MB revealed, that there's an off-by-one error in the check in
    l1tf_select_mitigation().
    
    l1tf_pfn_limit() returns the last usable pfn (inclusive) and the range
    check in the mitigation path does not take this into account.
    
    Instead of amending the range check, make l1tf_pfn_limit() return the first
    PFN which is over the limit which is less error prone. Adjust the other
    users accordingly.
    
    [1] https://bugzilla.suse.com/show_bug.cgi?id=1105536
    
    Fixes: 17dbca119312 ("x86/speculation/l1tf: Add sysfs reporting for l1tf")
    Reported-by: George Anchev <studio@anchev.net>
    Reported-by: Christopher Snowhill <kode54@gmail.com>
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: "H . Peter Anvin" <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180823134418.17008-1-vbabka@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7418d70862178363f4ad39ee645e3530c8ff9a8b
Author: Vlastimil Babka <vbabka@suse.cz>
Date:   Mon Aug 20 11:58:35 2018 +0200

    x86/speculation/l1tf: Fix overflow in l1tf_pfn_limit() on 32bit
    
    commit 9df9516940a61d29aedf4d91b483ca6597e7d480 upstream.
    
    On 32bit PAE kernels on 64bit hardware with enough physical bits,
    l1tf_pfn_limit() will overflow unsigned long. This in turn affects
    max_swapfile_size() and can lead to swapon returning -EINVAL. This has been
    observed in a 32bit guest with 42 bits physical address size, where
    max_swapfile_size() overflows exactly to 1 << 32, thus zero, and produces
    the following warning to dmesg:
    
    [    6.396845] Truncating oversized swap area, only using 0k out of 2047996k
    
    Fix this by using unsigned long long instead.
    
    Fixes: 17dbca119312 ("x86/speculation/l1tf: Add sysfs reporting for l1tf")
    Fixes: 377eeaa8e11f ("x86/speculation/l1tf: Limit swap file size to MAX_PA/2")
    Reported-by: Dominique Leuenberger <dimstar@suse.de>
    Reported-by: Adrian Schroeter <adrian@suse.de>
    Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Andi Kleen <ak@linux.intel.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: "H . Peter Anvin" <hpa@zytor.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180820095835.5298-1-vbabka@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9afa7c1ef17708e9dd6714c151aab81be4a5f68
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Aug 22 17:30:15 2018 +0200

    mm/tlb, x86/mm: Support invalidating TLB caches for RCU_TABLE_FREE
    
    commit d86564a2f085b79ec046a5cba90188e612352806 upstream.
    
    Jann reported that x86 was missing required TLB invalidates when he
    hit the !*batch slow path in tlb_remove_table().
    
    This is indeed the case; RCU_TABLE_FREE does not provide TLB (cache)
    invalidates, the PowerPC-hash where this code originated and the
    Sparc-hash where this was subsequently used did not need that. ARM
    which later used this put an explicit TLB invalidate in their
    __p*_free_tlb() functions, and PowerPC-radix followed that example.
    
    But when we hooked up x86 we failed to consider this. Fix this by
    (optionally) hooking tlb_remove_table() into the TLB invalidate code.
    
    NOTE: s390 was also needing something like this and might now
          be able to use the generic code again.
    
    [ Modified to be on top of Nick's cleanups, which simplified this patch
      now that tlb_flush_mmu_tlbonly() really only flushes the TLB - Linus ]
    
    Fixes: 9e52fc2b50de ("x86/mm: Enable RCU based page table freeing (CONFIG_HAVE_RCU_TABLE_FREE=y)")
    Reported-by: Jann Horn <jannh@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Rik van Riel <riel@surriel.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: David Miller <davem@davemloft.net>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e0994616d4ab790efd574c7f969cdc27491da88
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Thu Aug 23 18:47:08 2018 +1000

    mm: move tlb_table_flush to tlb_flush_mmu_free
    
    commit db7ddef301128dad394f1c0f77027f86ee9a4edb upstream.
    
    There is no need to call this from tlb_flush_mmu_tlbonly, it logically
    belongs with tlb_flush_mmu_free.  This makes future fixes simpler.
    
    [ This was originally done to allow code consolidation for the
      mmu_notifier fix, but it also ends up helping simplify the
      HAVE_RCU_TABLE_INVALIDATE fix.    - Linus ]
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d91aa5717dbf852ef9d36a2c85f2900696fdd13
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jun 22 10:59:17 2018 +0200

    platform/x86: ideapad-laptop: Apply no_hw_rfkill to Y20-15IKBM, too
    
    commit 58e73aa177850babb947555257fd4f79e5275cf1 upstream.
    
    The commit 5d9f40b56630 ("platform/x86: ideapad-laptop: Add
    Y520-15IKBN to no_hw_rfkill") added the entry for Y20-15IKBN, and it
    turned out that another variant, Y20-15IKBM, also requires the
    no_hw_rfkill.
    
    Trim the last letter from the string so that it matches to both
    Y20-15IKBN and Y20-15IKBM models.
    
    Bugzilla: https://bugzilla.opensuse.org/show_bug.cgi?id=1098626
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Darren Hart (VMware) <dvhart@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c9bed3698891c256b8a83d0c5001286bb87699b
Author: Michal Wnukowski <wnukowski@google.com>
Date:   Wed Aug 15 15:51:57 2018 -0700

    nvme-pci: add a memory barrier to nvme_dbbuf_update_and_check_event
    
    commit f1ed3df20d2d223e0852cc4ac1f19bba869a7e3c upstream.
    
    In many architectures loads may be reordered with older stores to
    different locations.  In the nvme driver the following two operations
    could be reordered:
    
     - Write shadow doorbell (dbbuf_db) into memory.
     - Read EventIdx (dbbuf_ei) from memory.
    
    This can result in a potential race condition between driver and VM host
    processing requests (if given virtual NVMe controller has a support for
    shadow doorbell).  If that occurs, then the NVMe controller may decide to
    wait for MMIO doorbell from guest operating system, and guest driver may
    decide not to issue MMIO doorbell on any of subsequent commands.
    
    This issue is purely timing-dependent one, so there is no easy way to
    reproduce it. Currently the easiest known approach is to run "Oracle IO
    Numbers" (orion) that is shipped with Oracle DB:
    
    orion -run advanced -num_large 0 -size_small 8 -type rand -simulate \
            concat -write 40 -duration 120 -matrix row -testname nvme_test
    
    Where nvme_test is a .lun file that contains a list of NVMe block
    devices to run test against. Limiting number of vCPUs assigned to given
    VM instance seems to increase chances for this bug to occur. On test
    environment with VM that got 4 NVMe drives and 1 vCPU assigned the
    virtual NVMe controller hang could be observed within 10-20 minutes.
    That correspond to about 400-500k IO operations processed (or about
    100GB of IO read/writes).
    
    Orion tool was used as a validation and set to run in a loop for 36
    hours (equivalent of pushing 550M IO operations). No issues were
    observed. That suggest that the patch fixes the issue.
    
    Fixes: f9f38e33389c ("nvme: improve performance for virtual NVMe devices")
    Signed-off-by: Michal Wnukowski <wnukowski@google.com>
    Reviewed-by: Keith Busch <keith.busch@intel.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    [hch: updated changelog and comment a bit]
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 509c0cdfb438e5cc887e75ba42477b499d177164
Author: Eric Sandeen <sandeen@redhat.com>
Date:   Sun Jul 29 17:13:42 2018 -0400

    ext4: reset error code in ext4_find_entry in fallback
    
    commit f39b3f45dbcb0343822cce31ea7636ad66e60bc2 upstream.
    
    When ext4_find_entry() falls back to "searching the old fashioned
    way" due to a corrupt dx dir, it needs to reset the error code
    to NULL so that the nonstandard ERR_BAD_DX_DIR code isn't returned
    to userspace.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=199947
    
    Reported-by: Anatoly Trosinenko <anatoly.trosinenko@yandex.com>
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>
    Signed-off-by: Eric Sandeen <sandeen@redhat.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5043e05dd571ebdc22ff39724ff1da7de2945d49
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Sun Jul 29 15:48:00 2018 -0400

    ext4: sysfs: print ext4_super_block fields as little-endian
    
    commit a4d2aadca184ece182418950d45ba4ffc7b652d2 upstream.
    
    While working on extended rand for last_error/first_error timestamps,
    I noticed that the endianess is wrong; we access the little-endian
    fields in struct ext4_super_block as native-endian when we print them.
    
    This adds a special case in ext4_attr_show() and ext4_attr_store()
    to byteswap the superblock fields if needed.
    
    In older kernels, this code was part of super.c, it got moved to
    sysfs.c in linux-4.4.
    
    Cc: stable@vger.kernel.org
    Fixes: 52c198c6820f ("ext4: add sysfs entry showing whether the fs contains errors")
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7773a6d94896d168f3430e541f31f85ce0e9a8f4
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Aug 1 12:36:52 2018 -0400

    ext4: check for NUL characters in extended attribute's name
    
    commit 7d95178c77014dbd8dce36ee40bbbc5e6c121ff5 upstream.
    
    Extended attribute names are defined to be NUL-terminated, so the name
    must not contain a NUL character.  This is important because there are
    places when remove extended attribute, the code uses strlen to
    determine the length of the entry.  That should probably be fixed at
    some point, but code is currently really messy, so the simplest fix
    for now is to simply validate that the extended attributes are sane.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=200401
    
    Reported-by: Wen Xu <wen.xu@gatech.edu>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd0f93a630ff3f47daf7e6258ac08d731ebb6393
Author: Prasad Sodagudi <psodagud@codeaurora.org>
Date:   Fri Aug 3 13:56:06 2018 -0700

    stop_machine: Atomically queue and wake stopper threads
    
    commit cfd355145c32bb7ccb65fccbe2d67280dc2119e1 upstream.
    
    When cpu_stop_queue_work() releases the lock for the stopper
    thread that was queued into its wake queue, preemption is
    enabled, which leads to the following deadlock:
    
    CPU0                              CPU1
    sched_setaffinity(0, ...)
    __set_cpus_allowed_ptr()
    stop_one_cpu(0, ...)              stop_two_cpus(0, 1, ...)
    cpu_stop_queue_work(0, ...)       cpu_stop_queue_two_works(0, ..., 1, ...)
    
    -grabs lock for migration/0-
                                      -spins with preemption disabled,
                                       waiting for migration/0's lock to be
                                       released-
    
    -adds work items for migration/0
    and queues migration/0 to its
    wake_q-
    
    -releases lock for migration/0
     and preemption is enabled-
    
    -current thread is preempted,
    and __set_cpus_allowed_ptr
    has changed the thread's
    cpu allowed mask to CPU1 only-
    
                                      -acquires migration/0 and migration/1's
                                       locks-
    
                                      -adds work for migration/0 but does not
                                       add migration/0 to wake_q, since it is
                                       already in a wake_q-
    
                                      -adds work for migration/1 and adds
                                       migration/1 to its wake_q-
    
                                      -releases migration/0 and migration/1's
                                       locks, wakes migration/1, and enables
                                       preemption-
    
                                      -since migration/1 is requested to run,
                                       migration/1 begins to run and waits on
                                       migration/0, but migration/0 will never
                                       be able to run, since the thread that
                                       can wake it is affine to CPU1-
    
    Disable preemption in cpu_stop_queue_work() before queueing works for
    stopper threads, and queueing the stopper thread in the wake queue, to
    ensure that the operation of queueing the works and waking the stopper
    threads is atomic.
    
    Fixes: 0b26351b910f ("stop_machine, sched: Fix migrate_swap() vs. active_balance() deadlock")
    Signed-off-by: Prasad Sodagudi <psodagud@codeaurora.org>
    Signed-off-by: Isaac J. Manjarres <isaacm@codeaurora.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: peterz@infradead.org
    Cc: matt@codeblueprint.co.uk
    Cc: bigeasy@linutronix.de
    Cc: gregkh@linuxfoundation.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1533329766-4856-1-git-send-email-isaacm@codeaurora.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    
    Co-Developed-by: Isaac J. Manjarres <isaacm@codeaurora.org>

commit e72107b2d995022a1fc95a33050410cf315df0fe
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Jul 30 13:21:40 2018 +0200

    stop_machine: Reflow cpu_stop_queue_two_works()
    
    commit b80a2bfce85e1051056d98d04ecb2d0b55cbbc1c upstream.
    
    The code flow in cpu_stop_queue_two_works() is a little arcane; fix this by
    lifting the preempt_disable() to the top to create more natural nesting wrt
    the spinlocks and make the wake_up_q() and preempt_enable() unconditional
    at the end.
    
    Furthermore, enable preemption in the -EDEADLK case, such that we spin-wait
    with preemption enabled.
    
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Cc: isaacm@codeaurora.org
    Cc: matt@codeblueprint.co.uk
    Cc: psodagud@codeaurora.org
    Cc: gregkh@linuxfoundation.org
    Cc: pkondeti@codeaurora.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180730112140.GH2494@hirez.programming.kicks-ass.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97f76f3bc4062aebeae14607daff015643d0ac4a
Author: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>
Date:   Mon Jul 16 10:38:57 2018 +0200

    s390/kvm: fix deadlock when killed by oom
    
    commit 306d6c49ac9ded11114cb53b0925da52f2c2ada1 upstream.
    
    When the oom killer kills a userspace process in the page fault handler
    while in guest context, the fault handler fails to release the mm_sem
    if the FAULT_FLAG_RETRY_NOWAIT option is set. This leads to a deadlock
    when tearing down the mm when the process terminates. This bug can only
    happen when pfault is enabled, so only KVM clients are affected.
    
    The problem arises in the rare cases in which handle_mm_fault does not
    release the mm_sem. This patch fixes the issue by manually releasing
    the mm_sem when needed.
    
    Fixes: 24eb3a824c4f3 ("KVM: s390: Add FAULT_FLAG_RETRY_NOWAIT for guest fault")
    Cc: <stable@vger.kernel.org> # 3.15+
    Signed-off-by: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a06fdf2c490666e7e8d2a3c17adfff3f0354441
Author: Punit Agrawal <punitagrawal@gmail.com>
Date:   Mon Aug 13 11:43:51 2018 +0100

    KVM: arm/arm64: Skip updating PTE entry if no change
    
    commit 976d34e2dab10ece5ea8fe7090b7692913f89084 upstream.
    
    When there is contention on faulting in a particular page table entry
    at stage 2, the break-before-make requirement of the architecture can
    lead to additional refaulting due to TLB invalidation.
    
    Avoid this by skipping a page table update if the new value of the PTE
    matches the previous value.
    
    Cc: stable@vger.kernel.org
    Fixes: d5d8184d35c9 ("KVM: ARM: Memory virtualization setup")
    Reviewed-by: Suzuki Poulose <suzuki.poulose@arm.com>
    Acked-by: Christoffer Dall <christoffer.dall@arm.com>
    Signed-off-by: Punit Agrawal <punit.agrawal@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 792a039415dc4562918abff4740ed04c2034f55b
Author: Punit Agrawal <punitagrawal@gmail.com>
Date:   Mon Aug 13 11:43:50 2018 +0100

    KVM: arm/arm64: Skip updating PMD entry if no change
    
    commit 86658b819cd0a9aa584cd84453ed268a6f013770 upstream.
    
    Contention on updating a PMD entry by a large number of vcpus can lead
    to duplicate work when handling stage 2 page faults. As the page table
    update follows the break-before-make requirement of the architecture,
    it can lead to repeated refaults due to clearing the entry and
    flushing the tlbs.
    
    This problem is more likely when -
    
    * there are large number of vcpus
    * the mapping is large block mapping
    
    such as when using PMD hugepages (512MB) with 64k pages.
    
    Fix this by skipping the page table update if there is no change in
    the entry being updated.
    
    Cc: stable@vger.kernel.org
    Fixes: ad361f093c1e ("KVM: ARM: Support hugetlbfs backed huge pages")
    Reviewed-by: Suzuki Poulose <suzuki.poulose@arm.com>
    Acked-by: Christoffer Dall <christoffer.dall@arm.com>
    Signed-off-by: Punit Agrawal <punit.agrawal@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75677d72be74c35d1a2d67e283c3b3d2eb0c49eb
Author: Huibin Hong <huibin.hong@rock-chips.com>
Date:   Fri Jul 6 16:03:57 2018 +0800

    arm64: dts: rockchip: corrected uart1 clock-names for rk3328
    
    commit d0414fdd58eb51ffd6528280fd66705123663964 upstream.
    
    Corrected the uart clock-names or the uart driver might fail.
    
    Fixes: 52e02d377a72 ("arm64: dts: rockchip: add core dtsi file for RK3328 SoCs")
    Cc: stable@vger.kernel.org
    Signed-off-by: Huibin Hong <huibin.hong@rock-chips.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a56b307992e94e520afaf5637afe9f597412b1e
Author: Greg Hackmann <ghackmann@android.com>
Date:   Wed Aug 15 12:51:21 2018 -0700

    arm64: mm: check for upper PAGE_SHIFT bits in pfn_valid()
    
    commit 5ad356eabc47d26a92140a0c4b20eba471c10de3 upstream.
    
    ARM64's pfn_valid() shifts away the upper PAGE_SHIFT bits of the input
    before seeing if the PFN is valid.  This leads to false positives when
    some of the upper bits are set, but the lower bits match a valid PFN.
    
    For example, the following userspace code looks up a bogus entry in
    /proc/kpageflags:
    
        int pagemap = open("/proc/self/pagemap", O_RDONLY);
        int pageflags = open("/proc/kpageflags", O_RDONLY);
        uint64_t pfn, val;
    
        lseek64(pagemap, [...], SEEK_SET);
        read(pagemap, &pfn, sizeof(pfn));
        if (pfn & (1UL << 63)) {        /* valid PFN */
            pfn &= ((1UL << 55) - 1);   /* clear flag bits */
            pfn |= (1UL << 55);
            lseek64(pageflags, pfn * sizeof(uint64_t), SEEK_SET);
            read(pageflags, &val, sizeof(val));
        }
    
    On ARM64 this causes the userspace process to crash with SIGSEGV rather
    than reading (1 << KPF_NOPAGE).  kpageflags_read() treats the offset as
    valid, and stable_page_flags() will try to access an address between the
    user and kernel address ranges.
    
    Fixes: c1cc1552616d ("arm64: MMU initialisation")
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8affa695373b4f39c49fe329bb24369281734d3
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sat Apr 28 21:38:04 2018 +0900

    kprobes/arm64: Fix %p uses in error messages
    
    commit 0722867dcbc28cc9b269b57acd847c7c1aa638d6 upstream.
    
    Fix %p uses in error messages by removing it because
    those are redundant or meaningless.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Acked-by: Will Deacon <will.deacon@arm.com>
    Cc: Ananth N Mavinakayanahalli <ananth@in.ibm.com>
    Cc: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: David Howells <dhowells@redhat.com>
    Cc: David S . Miller <davem@davemloft.net>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Jon Medhurst <tixy@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Thomas Richter <tmricht@linux.ibm.com>
    Cc: Tobin C . Harding <me@tobin.cc>
    Cc: acme@kernel.org
    Cc: akpm@linux-foundation.org
    Cc: brueckner@linux.vnet.ibm.com
    Cc: linux-arch@vger.kernel.org
    Cc: rostedt@goodmis.org
    Cc: schwidefsky@de.ibm.com
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/lkml/152491908405.9916.12425053035317241111.stgit@devbox
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd71265a8cd6a41c54dcfd594b0e653740cf1282
Author: Petr Mladek <pmladek@suse.com>
Date:   Wed Jun 27 16:20:28 2018 +0200

    printk/nmi: Prevent deadlock when accessing the main log buffer in NMI
    
    commit 03fc7f9c99c1e7ae2925d459e8487f1a6f199f79 upstream.
    
    The commit 719f6a7040f1bdaf96 ("printk: Use the main logbuf in NMI
    when logbuf_lock is available") brought back the possible deadlocks
    in printk() and NMI.
    
    The check of logbuf_lock is done only in printk_nmi_enter() to prevent
    mixed output. But another CPU might take the lock later, enter NMI, and:
    
          + Both NMIs might be serialized by yet another lock, for example,
            the one in nmi_cpu_backtrace().
    
          + The other CPU might get stopped in NMI, see smp_send_stop()
            in panic().
    
    The only safe solution is to use trylock when storing the message
    into the main log-buffer. It might cause reordering when some lines
    go to the main lock buffer directly and others are delayed via
    the per-CPU buffer. It means that it is not useful in general.
    
    This patch replaces the problematic NMI deferred context with NMI
    direct context. It can be used to mark a code that might produce
    many messages in NMI and the risk of losing them is more critical
    than problems with eventual reordering.
    
    The context is then used when dumping trace buffers on oops. It was
    the primary motivation for the original fix. Also the reordering is
    even smaller issue there because some traces have their own time stamps.
    
    Finally, nmi_cpu_backtrace() need not longer be serialized because
    it will always us the per-CPU buffers again.
    
    Fixes: 719f6a7040f1bdaf96 ("printk: Use the main logbuf in NMI when logbuf_lock is available")
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20180627142028.11259-1-pmladek@suse.com
    To: Steven Rostedt <rostedt@goodmis.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
    Cc: linux-kernel@vger.kernel.org
    Cc: stable@vger.kernel.org
    Acked-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 943276ef14c7041449ad46e6abf9a0afb4b77122
Author: Petr Mladek <pmladek@suse.com>
Date:   Wed Jun 27 16:08:16 2018 +0200

    printk: Create helper function to queue deferred console handling
    
    commit a338f84dc196f44b63ba0863d2f34fd9b1613572 upstream.
    
    It is just a preparation step. The patch does not change
    the existing behavior.
    
    Link: http://lkml.kernel.org/r/20180627140817.27764-3-pmladek@suse.com
    To: Steven Rostedt <rostedt@goodmis.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
    Cc: linux-kernel@vger.kernel.org
    Cc: stable@vger.kernel.org
    Acked-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 646e7c04803fb98fee2b465480caf78a1fb0173f
Author: Petr Mladek <pmladek@suse.com>
Date:   Wed Jun 27 16:08:15 2018 +0200

    printk: Split the code for storing a message into the log buffer
    
    commit ba552399954dde1b388f7749fecad5c349216981 upstream.
    
    It is just a preparation step. The patch does not change
    the existing behavior.
    
    Link: http://lkml.kernel.org/r/20180627140817.27764-2-pmladek@suse.com
    To: Steven Rostedt <rostedt@goodmis.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
    Cc: linux-kernel@vger.kernel.org
    Cc: stable@vger.kernel.org
    Acked-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b48522b7887a2a0fc387e6f6b2dd84c9741d4fbd
Author: Vivek Gautam <vivek.gautam@codeaurora.org>
Date:   Thu Jul 19 23:23:56 2018 +0530

    iommu/arm-smmu: Error out only if not enough context interrupts
    
    commit d1e20222d5372e951bbb2fd3f6489ec4a6ea9b11 upstream.
    
    Currently we check if the number of context banks is not equal to
    num_context_interrupts. However, there are booloaders such as, one
    on sdm845 that reserves few context banks and thus kernel views
    less than the total available context banks.
    So, although the hardware definition in device tree would mention
    the correct number of context interrupts, this number can be
    greater than the number of context banks visible to smmu in kernel.
    We should therefore error out only when the number of context banks
    is greater than the available number of context interrupts.
    
    Signed-off-by: Vivek Gautam <vivek.gautam@codeaurora.org>
    Suggested-by: Tomasz Figa <tfiga@chromium.org>
    Cc: Robin Murphy <robin.murphy@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    [will: drop useless printk]
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Cc: Jitendra Bhivare <jitendra.bhivare@broadcom.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f91ca31f5379a6979d0a83aaac215def130ccb15
Author: Josef Bacik <jbacik@fb.com>
Date:   Fri Jul 20 11:46:10 2018 -0700

    Btrfs: fix btrfs_write_inode vs delayed iput deadlock
    
    commit 3c4276936f6fbe52884b4ea4e6cc120b890a0f9f upstream.
    
    We recently ran into the following deadlock involving
    btrfs_write_inode():
    
    [  +0.005066]  __schedule+0x38e/0x8c0
    [  +0.007144]  schedule+0x36/0x80
    [  +0.006447]  bit_wait+0x11/0x60
    [  +0.006446]  __wait_on_bit+0xbe/0x110
    [  +0.007487]  ? bit_wait_io+0x60/0x60
    [  +0.007319]  __inode_wait_for_writeback+0x96/0xc0
    [  +0.009568]  ? autoremove_wake_function+0x40/0x40
    [  +0.009565]  inode_wait_for_writeback+0x21/0x30
    [  +0.009224]  evict+0xb0/0x190
    [  +0.006099]  iput+0x1a8/0x210
    [  +0.006103]  btrfs_run_delayed_iputs+0x73/0xc0
    [  +0.009047]  btrfs_commit_transaction+0x799/0x8c0
    [  +0.009567]  btrfs_write_inode+0x81/0xb0
    [  +0.008008]  __writeback_single_inode+0x267/0x320
    [  +0.009569]  writeback_sb_inodes+0x25b/0x4e0
    [  +0.008702]  wb_writeback+0x102/0x2d0
    [  +0.007487]  wb_workfn+0xa4/0x310
    [  +0.006794]  ? wb_workfn+0xa4/0x310
    [  +0.007143]  process_one_work+0x150/0x410
    [  +0.008179]  worker_thread+0x6d/0x520
    [  +0.007490]  kthread+0x12c/0x160
    [  +0.006620]  ? put_pwq_unlocked+0x80/0x80
    [  +0.008185]  ? kthread_park+0xa0/0xa0
    [  +0.007484]  ? do_syscall_64+0x53/0x150
    [  +0.007837]  ret_from_fork+0x29/0x40
    
    Writeback calls:
    
    btrfs_write_inode
      btrfs_commit_transaction
        btrfs_run_delayed_iputs
    
    If iput() is called on that same inode, evict() will wait for writeback
    forever.
    
    btrfs_write_inode() was originally added way back in 4730a4bc5bf3
    ("btrfs_dirty_inode") to support O_SYNC writes. However, ->write_inode()
    hasn't been used for O_SYNC since 148f948ba877 ("vfs: Introduce new
    helpers for syncing after writing to O_SYNC file or IS_SYNC inode"), so
    btrfs_write_inode() is actually unnecessary (and leads to a bunch of
    unnecessary commits). Get rid of it, which also gets rid of the
    deadlock.
    
    CC: stable@vger.kernel.org # 3.2+
    Signed-off-by: Josef Bacik <jbacik@fb.com>
    [Omar: new commit message]
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7457f97d2af26bfdda028b691bc11363296b3a9
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Thu Jul 19 10:49:51 2018 -0400

    btrfs: don't leak ret from do_chunk_alloc
    
    commit 4559b0a71749c442d34f7cfb9e72c9e58db83948 upstream.
    
    If we're trying to make a data reservation and we have to allocate a
    data chunk we could leak ret == 1, as do_chunk_alloc() will return 1 if
    it allocated a chunk.  Since the end of the function is the success path
    just return 0.
    
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 770025cc4b6918f6ef2591146920d693a13be168
Author: Ethan Lien <ethanlien@synology.com>
Date:   Mon Jul 2 15:44:58 2018 +0800

    btrfs: use correct compare function of dirty_metadata_bytes
    
    commit d814a49198eafa6163698bdd93961302f3a877a4 upstream.
    
    We use customized, nodesize batch value to update dirty_metadata_bytes.
    We should also use batch version of compare function or we will easily
    goto fast path and get false result from percpu_counter_compare().
    
    Fixes: e2d845211eda ("Btrfs: use percpu counter for dirty metadata count")
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Ethan Lien <ethanlien@synology.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 758f55f918333f22d84f2f73e279f58bb5b81515
Author: Steve French <stfrench@microsoft.com>
Date:   Sun Jun 24 23:18:52 2018 -0500

    smb3: fill in statfs fsid and correct namelen
    
    commit 21ba3845b59c733a79ed4fe1c4f3732e7ece9df7 upstream.
    
    Fil in the correct namelen (typically 255 not 4096) in the
    statfs response and also fill in a reasonably unique fsid
    (in this case taken from the volume id, and the creation time
    of the volume).
    
    In the case of the POSIX statfs all fields are now filled in,
    and in the case of non-POSIX mounts, all fields are filled
    in which can be.
    
    Signed-off-by: Steve French <stfrench@gmail.com>
    CC: Stable <stable@vger.kernel.org>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66913d23eeda437ffb8651e5d68e612a80e5b152
Author: Steve French <stfrench@microsoft.com>
Date:   Fri Jul 27 22:01:49 2018 -0500

    smb3: don't request leases in symlink creation and query
    
    commit 22783155f4bf956c346a81624ec9258930a6fe06 upstream.
    
    Fixes problem pointed out by Pavel in discussions about commit
    729c0c9dd55204f0c9a823ac8a7bfa83d36c7e78
    
    Signed-off-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    CC: Stable <stable@vger.kernel.org> # 3.18.x+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be1210c7758cb0aba9c4323fb2fe79e64568db77
Author: Steve French <stfrench@microsoft.com>
Date:   Thu Aug 2 20:28:18 2018 -0500

    smb3: Do not send SMB3 SET_INFO if nothing changed
    
    commit fd09b7d3b352105f08b8e02f7afecf7e816380ef upstream.
    
    An earlier commit had a typo which prevented the
    optimization from working:
    
    commit 18dd8e1a65dd ("Do not send SMB3 SET_INFO request if nothing is changing")
    
    Thank you to Metze for noticing this.  Also clear a
    reserved field in the FILE_BASIC_INFO struct we send
    that should be zero (all the other fields in that
    struct were set or cleared explicitly already in
    cifs_set_file_info).
    
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    CC: Stable <stable@vger.kernel.org> # 4.9.x+
    Reported-by: Stefan Metzmacher <metze@samba.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82a856f527334ffd69aae26e7dd9e03b19c4a520
Author: Steve French <stfrench@microsoft.com>
Date:   Thu Aug 9 14:33:12 2018 -0500

    smb3: enumerating snapshots was leaving part of the data off end
    
    commit e02789a53d71334b067ad72eee5d4e88a0158083 upstream.
    
    When enumerating snapshots, the last few bytes of the final
    snapshot could be left off since we were miscalculating the
    length returned (leaving off the sizeof struct SRV_SNAPSHOT_ARRAY)
    See MS-SMB2 section 2.2.32.2. In addition fixup the length used
    to allow smaller buffer to be passed in, in order to allow
    returning the size of the whole snapshot array more easily.
    
    Sample userspace output with a kernel patched with this
    (mounted to a Windows volume with two snapshots).
    Before this patch, the second snapshot would be missing a
    few bytes at the end.
    
    ~/cifs-2.6# ~/enum-snapshots /mnt/file
    press enter to issue the ioctl to retrieve snapshot information ...
    
    size of snapshot array = 102
    Num snapshots: 2 Num returned: 2 Array Size: 102
    
    Snapshot 0:@GMT-2018.06.30-19.34.17
    Snapshot 1:@GMT-2018.06.30-19.33.37
    
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5f2790a7a1ec89f237ff6e8a261927a51d09128
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Thu Aug 23 12:24:02 2018 +0200

    cifs: check kmalloc before use
    
    commit 126c97f4d0d1b5b956e8b0740c81a2b2a2ae548c upstream.
    
    The kmalloc was not being checked - if it fails issue a warning
    and return -ENOMEM to the caller.
    
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Fixes: b8da344b74c8 ("cifs: dynamic allocation of ntlmssp blob")
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    cc: Stable <stable@vger.kernel.org>`
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cba34b94077304d5a632286aad14ccbab68a5f98
Author: Steve French <stfrench@microsoft.com>
Date:   Thu Jun 28 18:46:40 2018 -0500

    cifs: add missing debug entries for kconfig options
    
    commit 950132afd59385caf6e2b84e5235d069fa10681d upstream.
    
    /proc/fs/cifs/DebugData displays the features (Kconfig options)
    used to build cifs.ko but it was missing some, and needed comma
    separator.  These can be useful in debugging certain problems
    so we know which optional features were enabled in the user's build.
    Also clarify them, by making them more closely match the
    corresponding CONFIG_CIFS_* parm.
    
    Old format:
    Features: dfs fscache posix spnego xattr acl
    
    New format:
    Features: DFS,FSCACHE,SMB_DIRECT,STATS,DEBUG2,ALLOW_INSECURE_LEGACY,CIFS_POSIX,UPCALL(SPNEGO),XATTR,ACL
    
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Reviewed-by: Paulo Alcantara <palcantara@suse.de>
    CC: Stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfcfbe08d2986ecd5621e98a027e54dd1d549459
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Mon Jul 9 12:21:44 2018 +0300

    mei: don't update offset in write
    
    commit a103af1b64d74853a5e08ca6c86aeb0e5c6ca4f1 upstream.
    
    MEI enables writes of complete messages only
    while read can be performed in parts, hence
    write should not update the file offset to
    not break interleaving partial reads with writes.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf7ab2abc524ec8499fabfa064d9c1f754092908
Author: jie@chenjie6@huwei.com <jie@chenjie6@huwei.com>
Date:   Fri Aug 10 17:23:06 2018 -0700

    mm/memory.c: check return value of ioremap_prot
    
    [ Upstream commit 24eee1e4c47977bdfb71d6f15f6011e7b6188d04 ]
    
    ioremap_prot() can return NULL which could lead to an oops.
    
    Link: http://lkml.kernel.org/r/1533195441-58594-1-git-send-email-chenjie6@huawei.com
    Signed-off-by: chen jie <chenjie6@huawei.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Li Zefan <lizefan@huawei.com>
    Cc: chenjie <chenjie6@huawei.com>
    Cc: Yang Shi <shy828301@gmail.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bb880a11650bcc761806dbd1484c887c2617f73
Author: Jim Gill <jgill@vmware.com>
Date:   Thu Aug 2 14:13:30 2018 -0700

    scsi: vmw_pvscsi: Return DID_RESET for status SAM_STAT_COMMAND_TERMINATED
    
    [ Upstream commit e95153b64d03c2b6e8d62e51bdcc33fcad6e0856 ]
    
    Commands that are reset are returned with status
    SAM_STAT_COMMAND_TERMINATED. PVSCSI currently returns DID_OK |
    SAM_STAT_COMMAND_TERMINATED which fails the command. Instead, set hostbyte
    to DID_RESET to allow upper layers to retry.
    
    Tested by copying a large file between two pvscsi disks on same adapter
    while performing a bus reset at 1-second intervals. Before fix, commands
    sometimes fail with DID_OK. After fix, commands observed to fail with
    DID_RESET.
    
    Signed-off-by: Jim Gill <jgill@vmware.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ce46fff750dbee21034080be293dde19f1697ff
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Tue Jul 31 15:46:03 2018 +0200

    scsi: fcoe: clear FC_RP_STARTED flags when receiving a LOGO
    
    [ Upstream commit 1550ec458e0cf1a40a170ab1f4c46e3f52860f65 ]
    
    When receiving a LOGO request we forget to clear the FC_RP_STARTED flag
    before starting the rport delete routine.
    
    As the started flag was not cleared, we're not deleting the rport but
    waiting for a restart and thus are keeping the reference count of the rdata
    object at 1.
    
    This leads to the following kmemleak report:
    unreferenced object 0xffff88006542aa00 (size 512):
      comm "kworker/0:2", pid 24, jiffies 4294899222 (age 226.880s)
      hex dump (first 32 bytes):
        68 96 fe 65 00 88 ff ff 00 00 00 00 00 00 00 00  h..e............
        01 00 00 00 08 00 00 00 02 c5 45 24 ac b8 00 10  ..........E$....
      backtrace:
        [<(____ptrval____)>] fcoe_ctlr_vn_add.isra.5+0x7f/0x770 [libfcoe]
        [<(____ptrval____)>] fcoe_ctlr_vn_recv+0x12af/0x27f0 [libfcoe]
        [<(____ptrval____)>] fcoe_ctlr_recv_work+0xd01/0x32f0 [libfcoe]
        [<(____ptrval____)>] process_one_work+0x7ff/0x1420
        [<(____ptrval____)>] worker_thread+0x87/0xef0
        [<(____ptrval____)>] kthread+0x2db/0x390
        [<(____ptrval____)>] ret_from_fork+0x35/0x40
        [<(____ptrval____)>] 0xffffffffffffffff
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reported-by: ard <ard@kwaak.net>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a67aef68ef24aaa11317662768733c2390e78d07
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Tue Jul 31 15:46:02 2018 +0200

    scsi: fcoe: drop frames in ELS LOGO error path
    
    [ Upstream commit 63d0e3dffda311e77b9a8c500d59084e960a824a ]
    
    Drop the frames in the ELS LOGO error path instead of just returning an
    error.
    
    This fixes the following kmemleak report:
    unreferenced object 0xffff880064cb1000 (size 424):
      comm "kworker/0:2", pid 24, jiffies 4294904293 (age 68.504s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
        00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
      backtrace:
        [<(____ptrval____)>] _fc_frame_alloc+0x2c/0x180 [libfc]
        [<(____ptrval____)>] fc_lport_enter_logo+0x106/0x360 [libfc]
        [<(____ptrval____)>] fc_fabric_logoff+0x8c/0xc0 [libfc]
        [<(____ptrval____)>] fcoe_if_destroy+0x79/0x3b0 [fcoe]
        [<(____ptrval____)>] fcoe_destroy_work+0xd2/0x170 [fcoe]
        [<(____ptrval____)>] process_one_work+0x7ff/0x1420
        [<(____ptrval____)>] worker_thread+0x87/0xef0
        [<(____ptrval____)>] kthread+0x2db/0x390
        [<(____ptrval____)>] ret_from_fork+0x35/0x40
        [<(____ptrval____)>] 0xffffffffffffffff
    
    which can be triggered by issuing
    echo eth0 > /sys/bus/fcoe/ctlr_destroy
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95239b2db50f301b19da9f15df724e129e9b8ff5
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Tue Jul 31 15:46:01 2018 +0200

    scsi: fcoe: fix use-after-free in fcoe_ctlr_els_send
    
    [ Upstream commit 2d7d4fd35e6e15b47c13c70368da83add19f01e7 ]
    
    KASAN reports a use-after-free in fcoe_ctlr_els_send() when we're sending a
    LOGO and have FIP debugging enabled. This is because we're first freeing
    the skb and then printing the frame's DID. But the DID is a member of the
    FC frame header which in turn is the skb's payload.
    
    Exchange the debug print and kfree_skb() calls so we're not touching the
    freed data.
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbb37b72489dba442b3bd55a4508a12893ae9c9d
Author: Benjamin Tissoires <benjamin.tissoires@redhat.com>
Date:   Thu Jul 12 17:25:06 2018 +0200

    gpiolib-acpi: make sure we trigger edge events at least once on boot
    
    [ Upstream commit ca876c7483b697b498868b1f575997191b077885 ]
    
    On some systems using edge triggered ACPI Event Interrupts, the initial
    state at boot is not setup by the firmware, instead relying on the edge
    irq event handler running at least once to setup the initial state.
    
    2 known examples of this are:
    
    1) The Surface 3 has its _LID state controlled by an ACPI operation region
     triggered by a GPIO event:
    
     OperationRegion (GPOR, GeneralPurposeIo, Zero, One)
     Field (GPOR, ByteAcc, NoLock, Preserve)
     {
         Connection (
             GpioIo (Shared, PullNone, 0x0000, 0x0000, IoRestrictionNone,
                 "\\_SB.GPO0", 0x00, ResourceConsumer, ,
                 )
                 {   // Pin list
                     0x004C
                 }
         ),
         HELD,   1
     }
    
     Method (_E4C, 0, Serialized)  // _Exx: Edge-Triggered GPE
     {
         If ((HELD == One))
         {
             ^^LID.LIDB = One
         }
         Else
         {
             ^^LID.LIDB = Zero
             Notify (LID, 0x80) // Status Change
         }
    
         Notify (^^PCI0.SPI1.NTRG, One) // Device Check
     }
    
     Currently, the state of LIDB is wrong until the user actually closes or
     open the cover. We need to trigger the GPIO event once to update the
     internal ACPI state.
    
     Coincidentally, this also enables the Surface 2 integrated HID sensor hub
     which also requires an ACPI gpio operation region to start initialization.
    
    2) Various Bay Trail based tablets come with an external USB mux and
     TI T1210B USB phy to enable USB gadget mode. The mux is controlled by a
     GPIO which is controlled by an edge triggered ACPI Event Interrupt which
     monitors the micro-USB ID pin.
    
     When the tablet is connected to a PC (or no cable is plugged in), the ID
     pin is high and the tablet should be in gadget mode. But the GPIO
     controlling the mux is initialized by the firmware so that the USB data
     lines are muxed to the host controller.
    
     This means that if the user wants to use gadget mode, the user needs to
     first plug in a host-cable to force the ID pin low and then unplug it
     and connect the tablet to a PC, to get the ACPI event handler to run and
     switch the mux to device mode,
    
    This commit fixes both by running the event-handler once on boot.
    
    Note that the running of the event-handler is done from a late_initcall,
    this is done because the handler AML code may rely on OperationRegions
    registered by other builtin drivers. This avoids errors like these:
    
    [    0.133026] ACPI Error: No handler for Region [XSCG] ((____ptrval____)) [GenericSerialBus] (20180531/evregion-132)
    [    0.133036] ACPI Error: Region GenericSerialBus (ID=9) has no handler (20180531/exfldio-265)
    [    0.133046] ACPI Error: Method parse/execution failed \_SB.GPO2._E12, AE_NOT_EXIST (20180531/psparse-516)
    
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    [hdegoede: Document BYT USB mux reliance on initial trigger]
    [hdegoede: Run event handler from a late_initcall, rather then immediately]
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d7bf02d716d353924b963e3f24508416701a382
Author: Kirill Tkhai <ktkhai@virtuozzo.com>
Date:   Thu Aug 2 15:36:01 2018 -0700

    memcg: remove memcg_cgroup::id from IDR on mem_cgroup_css_alloc() failure
    
    [ Upstream commit 7e97de0b033bcac4fa9a35cef72e0c06e6a22c67 ]
    
    In case of memcg_online_kmem() failure, memcg_cgroup::id remains hashed
    in mem_cgroup_idr even after memcg memory is freed.  This leads to leak
    of ID in mem_cgroup_idr.
    
    This patch adds removal into mem_cgroup_css_alloc(), which fixes the
    problem.  For better readability, it adds a generic helper which is used
    in mem_cgroup_alloc() and mem_cgroup_id_put_many() as well.
    
    Link: http://lkml.kernel.org/r/152354470916.22460.14397070748001974638.stgit@localhost.localdomain
    Fixes 73f576c04b94 ("mm: memcontrol: fix cgroup creation failure after many small jobs")
    Signed-off-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Acked-by: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Michal Hocko <mhocko@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47041cf42a47492ac013f72aba2145711f7f3fc5
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Aug 1 18:22:41 2018 +0100

    drivers: net: lmc: fix case value for target abort error
    
    [ Upstream commit afb41bb039656f0cecb54eeb8b2e2088201295f5 ]
    
    Current value for a target abort error is 0x010, however, this value
    should in fact be 0x002.  As it stands, the range of error is 0..7 so
    it is currently never being detected.  This bug has been in the driver
    since the early 2.6.12 days (or before).
    
    Detected by CoverityScan, CID#744290 ("Logically dead code")
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28013eecf6a0f04c121912f57aed03db55493dfe
Author: Phillip Lougher <phillip@squashfs.org.uk>
Date:   Thu Aug 2 16:45:15 2018 +0100

    Squashfs: Compute expected length from inode size rather than block length
    
    [ Upstream commit a3f94cb99a854fa381fe7fadd97c4f61633717a5 ]
    
    Previously in squashfs_readpage() when copying data into the page
    cache, it used the length of the datablock read from the filesystem
    (after decompression).  However, if the filesystem has been corrupted
    this data block may be short, which will leave pages unfilled.
    
    The fix for this is to compute the expected number of bytes to copy
    from the inode size, and use this to detect if the block is short.
    
    Signed-off-by: Phillip Lougher <phillip@squashfs.org.uk>
    Tested-by: Willy Tarreau <w@1wt.eu>
    Cc: Анатолий Тросиненко <anatoly.trosinenko@gmail.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 249778d9459a4ed9f8dada4ca8ccc2ff09407482
Author: Hugh Dickins <hughd@google.com>
Date:   Wed Aug 1 11:31:52 2018 -0700

    mm: delete historical BUG from zap_pmd_range()
    
    [ Upstream commit 53406ed1bcfdabe4b5bc35e6d17946c6f9f563e2 ]
    
    Delete the old VM_BUG_ON_VMA() from zap_pmd_range(), which asserted
    that mmap_sem must be held when splitting an "anonymous" vma there.
    Whether that's still strictly true nowadays is not entirely clear,
    but the danger of sometimes crashing on the BUG is now fairly clear.
    
    Even with the new stricter rules for anonymous vma marking, the
    condition it checks for can possible trigger. Commit 44960f2a7b63
    ("staging: ashmem: Fix SIGBUS crash when traversing mmaped ashmem
    pages") is good, and originally I thought it was safe from that
    VM_BUG_ON_VMA(), because the /dev/ashmem fd exposed to the user is
    disconnected from the vm_file in the vma, and madvise(,,MADV_REMOVE)
    insists on VM_SHARED.
    
    But after I read John's earlier mail, drawing attention to the
    vfs_fallocate() in there: I may be wrong, and I don't know if Android
    has THP in the config anyway, but it looks to me like an
    unmap_mapping_range() from ashmem's vfs_fallocate() could hit precisely
    the VM_BUG_ON_VMA(), once it's vma_is_anonymous().
    
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Kirill Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8babbc02f893cf8b38c0f5b8a5ba32a274fc5a0b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Aug 1 10:38:43 2018 -0700

    squashfs metadata 2: electric boogaloo
    
    [ Upstream commit cdbb65c4c7ead680ebe54f4f0d486e2847a500ea ]
    
    Anatoly continues to find issues with fuzzed squashfs images.
    
    This time, corrupt, missing, or undersized data for the page filling
    wasn't checked for, because the squashfs_{copy,read}_cache() functions
    did the squashfs_copy_data() call without checking the resulting data
    size.
    
    Which could result in the page cache pages being incompletely filled in,
    and no error indication to the user space reading garbage data.
    
    So make a helper function for the "fill in pages" case, because the
    exact same incomplete sequence existed in two places.
    
    [ I should have made a squashfs branch for these things, but I didn't
      intend to start doing them in the first place.
    
      My historical connection through cramfs is why I got into looking at
      these issues at all, and every time I (continue to) think it's a
      one-off.
    
      Because _this_ time is always the last time. Right?   - Linus ]
    
    Reported-by: Anatoly Trosinenko <anatoly.trosinenko@gmail.com>
    Tested-by: Willy Tarreau <w@1wt.eu>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Phillip Lougher <phillip@squashfs.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dfa5c4bf8c94ea4ba95f933f36eed4ccb49b0a18
Author: Govindarajulu Varadarajan <gvaradar@cisco.com>
Date:   Mon Jul 30 09:56:54 2018 -0700

    enic: do not call enic_change_mtu in enic_probe
    
    [ Upstream commit cb5c6568867325f9905e80c96531d963bec8e5ea ]
    
    In commit ab123fe071c9 ("enic: handle mtu change for vf properly")
    ASSERT_RTNL() is added to _enic_change_mtu() to prevent it from being
    called without rtnl held. enic_probe() calls enic_change_mtu()
    without rtnl held. At this point netdev is not registered yet.
    Remove call to enic_change_mtu and assign the mtu to netdev->mtu.
    
    Fixes: ab123fe071c9 ("enic: handle mtu change for vf properly")
    Signed-off-by: Govindarajulu Varadarajan <gvaradar@cisco.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 574a4f3e6173f65c8167e60f4c18041d1053dde3
Author: Thomas Petazzoni <thomas.petazzoni@bootlin.com>
Date:   Tue Jul 24 13:53:05 2018 +0200

    sparc: use asm-generic version of msi.h
    
    [ Upstream commit 12be1036c536f849ad6f9bba73cffa708aa965c3 ]
    
    This is necessary to be able to include <linux/msi.h> when
    CONFIG_GENERIC_MSI_IRQ_DOMAIN is enabled. Without this, a build with
    CONFIG_GENERIC_MSI_IRQ_DOMAIN fails with:
    
       In file included from drivers//ata/ahci.c:45:0:
    >> include/linux/msi.h:226:10: error: unknown type name 'msi_alloc_info_t'; did you mean 'sg_alloc_fn'?
                 msi_alloc_info_t *arg);
                 ^~~~~~~~~~~~~~~~
                 sg_alloc_fn
       include/linux/msi.h:230:9: error: unknown type name 'msi_alloc_info_t'; did you mean 'sg_alloc_fn'?
                msi_alloc_info_t *arg);
                ^~~~~~~~~~~~~~~~
                sg_alloc_fn
       include/linux/msi.h:239:12: error: unknown type name 'msi_alloc_info_t'; did you mean 'sg_alloc_fn'?
                   msi_alloc_info_t *arg);
                   ^~~~~~~~~~~~~~~~
                   sg_alloc_fn
       include/linux/msi.h:240:22: error: unknown type name 'msi_alloc_info_t'; did you mean 'sg_alloc_fn'?
         void  (*msi_finish)(msi_alloc_info_t *arg, int retval);
                             ^~~~~~~~~~~~~~~~
                             sg_alloc_fn
       include/linux/msi.h:241:20: error: unknown type name 'msi_alloc_info_t'; did you mean 'sg_alloc_fn'?
         void  (*set_desc)(msi_alloc_info_t *arg,
                           ^~~~~~~~~~~~~~~~
                           sg_alloc_fn
       include/linux/msi.h:316:18: error: unknown type name 'msi_alloc_info_t'; did you mean 'sg_alloc_fn'?
               int nvec, msi_alloc_info_t *args);
                         ^~~~~~~~~~~~~~~~
                         sg_alloc_fn
       include/linux/msi.h:318:29: error: unknown type name 'msi_alloc_info_t'; did you mean 'sg_alloc_fn'?
                int virq, int nvec, msi_alloc_info_t *args);
                                    ^~~~~~~~~~~~~~~~
                                    sg_alloc_fn
    
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@bootlin.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c841ea7f8f153f77c63989ceda2355ad0f3e43b
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Wed Jun 6 10:11:10 2018 -0400

    sparc/time: Add missing __init to init_tick_ops()
    
    [ Upstream commit 6f57ed681ed817a4ec444e83f3aa2ad695d5ef34 ]
    
    Code that was added to force gcc not to inline any function that isn't
    explicitly declared as inline uncovered that init_tick_ops() isn't
    marked as "__init". It is only called by __init functions and more
    importantly it too calls an __init function which would require it to be
    __init as well.
    
    Link: http://lkml.kernel.org/r/201806060444.hdHcKOBy%fengguang.wu@intel.com
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24fab572ae7d09bef6939de602d546be554d2d43
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Thu Jul 26 20:16:35 2018 -0700

    arc: fix type warnings in arc/mm/cache.c
    
    [ Upstream commit ec837d620c750c0d4996a907c8c4f7febe1bbeee ]
    
    Fix type warnings in arch/arc/mm/cache.c.
    
    ../arch/arc/mm/cache.c: In function 'flush_anon_page':
    ../arch/arc/mm/cache.c:1062:55: warning: passing argument 2 of '__flush_dcache_page' makes integer from pointer without a cast [-Wint-conversion]
      __flush_dcache_page((phys_addr_t)page_address(page), page_address(page));
                                                           ^~~~~~~~~~~~~~~~~~
    ../arch/arc/mm/cache.c:1013:59: note: expected 'long unsigned int' but argument is of type 'void *'
     void __flush_dcache_page(phys_addr_t paddr, unsigned long vaddr)
                                                 ~~~~~~~~~~~~~~^~~~~
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: linux-snps-arc@lists.infradead.org
    Cc: Elad Kanfi <eladkan@mellanox.com>
    Cc: Leon Romanovsky <leonro@mellanox.com>
    Cc: Ofer Levi <oferle@mellanox.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 391e3007e44741900eaf2893b7b6d62eaba3ee4b
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Thu Jul 26 20:16:35 2018 -0700

    arc: fix build errors in arc/include/asm/delay.h
    
    [ Upstream commit 2423665ec53f2a29191b35382075e9834288a975 ]
    
    Fix build errors in arch/arc/'s delay.h:
    - add "extern unsigned long loops_per_jiffy;"
    - add <asm-generic/types.h> for "u64"
    
    In file included from ../drivers/infiniband/hw/cxgb3/cxio_hal.c:32:
    ../arch/arc/include/asm/delay.h: In function '__udelay':
    ../arch/arc/include/asm/delay.h:61:12: error: 'u64' undeclared (first use in this function)
      loops = ((u64) usecs * 4295 * HZ * loops_per_jiffy) >> 32;
                ^~~
    
    In file included from ../drivers/infiniband/hw/cxgb3/cxio_hal.c:32:
    ../arch/arc/include/asm/delay.h: In function '__udelay':
    ../arch/arc/include/asm/delay.h:63:37: error: 'loops_per_jiffy' undeclared (first use in this function)
      loops = ((u64) usecs * 4295 * HZ * loops_per_jiffy) >> 32;
                                         ^~~~~~~~~~~~~~~
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: linux-snps-arc@lists.infradead.org
    Cc: Elad Kanfi <eladkan@mellanox.com>
    Cc: Leon Romanovsky <leonro@mellanox.com>
    Cc: Ofer Levi <oferle@mellanox.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aca05b1741d31b7528be3821c93bdc3296125b70
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Thu Jul 26 20:16:35 2018 -0700

    arc: [plat-eznps] fix printk warning in arc/plat-eznps/mtm.c
    
    [ Upstream commit 9e2ea405543d9ddfe05b351f1679e53bd9c11f80 ]
    
    Fix printk format warning in arch/arc/plat-eznps/mtm.c:
    
    In file included from ../include/linux/printk.h:7,
                     from ../include/linux/kernel.h:14,
                     from ../include/linux/list.h:9,
                     from ../include/linux/smp.h:12,
                     from ../arch/arc/plat-eznps/mtm.c:17:
    ../arch/arc/plat-eznps/mtm.c: In function 'set_mtm_hs_ctr':
    ../include/linux/kern_levels.h:5:18: warning: format '%d' expects argument of type 'int', but argument 2 has type 'long int' [-Wformat=]
     #define KERN_SOH "\001"  /* ASCII Start Of Header */
                      ^~~~~~
    ../include/linux/kern_levels.h:11:18: note: in expansion of macro 'KERN_SOH'
     #define KERN_ERR KERN_SOH "3" /* error conditions */
                      ^~~~~~~~
    ../include/linux/printk.h:308:9: note: in expansion of macro 'KERN_ERR'
      printk(KERN_ERR pr_fmt(fmt), ##__VA_ARGS__)
             ^~~~~~~~
    ../arch/arc/plat-eznps/mtm.c:166:3: note: in expansion of macro 'pr_err'
       pr_err("** Invalid @nps_mtm_hs_ctr [%d] needs to be [%d:%d] (incl)\n",
       ^~~~~~
    ../arch/arc/plat-eznps/mtm.c:166:40: note: format string is defined here
       pr_err("** Invalid @nps_mtm_hs_ctr [%d] needs to be [%d:%d] (incl)\n",
                                           ~^
                                           %ld
    The hs_ctr variable can just be int instead of long, so also change
    kstrtol() to kstrtoint() and leave the format string as %d.
    
    Also add 2 header files since they are used in mtm.c and we prefer
    not to depend on accidental/indirect #includes.
    
    Cc: linux-snps-arc@lists.infradead.org
    Cc: Ofer Levi <oferle@mellanox.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79f9c523ca43ecbce364f0f3b08f48c800c0f367
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Jul 29 11:10:51 2018 -0700

    arc: [plat-eznps] fix data type errors in platform headers
    
    [ Upstream commit b1f32ce1c3d2c11959b7e6a2c58dc5197c581966 ]
    
    Add <linux/types.h> to fix build errors.
    Both ctop.h and <soc/nps/common.h> use u32 types and cause many
    errors.
    
    Examples:
    ../include/soc/nps/common.h:71:4: error: unknown type name 'u32'
        u32 __reserved:20, cluster:4, core:4, thread:4;
    ../include/soc/nps/common.h:76:3: error: unknown type name 'u32'
       u32 value;
    ../include/soc/nps/common.h:124:4: error: unknown type name 'u32'
        u32 base:8, cl_x:4, cl_y:4,
    ../include/soc/nps/common.h:127:3: error: unknown type name 'u32'
       u32 value;
    
    ../arch/arc/plat-eznps/include/plat/ctop.h:83:4: error: unknown type name 'u32'
        u32 gen:1, gdis:1, clk_gate_dis:1, asb:1,
    ../arch/arc/plat-eznps/include/plat/ctop.h:86:3: error: unknown type name 'u32'
       u32 value;
    ../arch/arc/plat-eznps/include/plat/ctop.h:93:4: error: unknown type name 'u32'
        u32 csa:22, dmsid:6, __reserved:3, cs:1;
    ../arch/arc/plat-eznps/include/plat/ctop.h:95:3: error: unknown type name 'u32'
       u32 value;
    
    Cc: linux-snps-arc@lists.infradead.org
    Cc: Ofer Levi <oferle@mellanox.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d267258ee192f86d176af910eb7bb4acc3796542
Author: Ofer Levi <oferle@mellanox.com>
Date:   Sat Jul 28 10:54:41 2018 +0300

    ARC: [plat-eznps] Add missing struct nps_host_reg_aux_dpc
    
    [ Upstream commit 05b466bf846d2e8d2f0baf8dfd81a42cc933e237 ]
    
    Fixing compilation issue caused by missing struct nps_host_reg_aux_dpc
    definition.
    
    Fixes: 3f9cd874dcc87 ("ARC: [plat-eznps] avoid toggling of DPC register")
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Ofer Levi <oferle@mellanox.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2312e6a802b3a5636c487fe7222757f7a573995d
Author: Govindarajulu Varadarajan <gvaradar@cisco.com>
Date:   Fri Jul 27 11:19:29 2018 -0700

    enic: handle mtu change for vf properly
    
    [ Upstream commit ab123fe071c9aa9680ecd62eb080eb26cff4892c ]
    
    When driver gets notification for mtu change, driver does not handle it for
    all RQs. It handles only RQ[0].
    
    Fix is to use enic_change_mtu() interface to change mtu for vf.
    
    Signed-off-by: Govindarajulu Varadarajan <gvaradar@cisco.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4f96c0515fc7f448d9f9a559f76f4364d2d3fd3
Author: John Hurley <john.hurley@netronome.com>
Date:   Fri Jul 27 20:56:52 2018 -0700

    nfp: flower: fix port metadata conversion bug
    
    [ Upstream commit ee614c871014045b45fae149b7245fc22a0bbdd8 ]
    
    Function nfp_flower_repr_get_type_and_port expects an enum nfp_repr_type
    return value but, if the repr type is unknown, returns a value of type
    enum nfp_flower_cmsg_port_type.  This means that if FW encodes the port
    ID in a way the driver does not understand instead of dropping the frame
    driver may attribute it to a physical port (uplink) provided the port
    number is less than physical port count.
    
    Fix this and ensure a net_device of NULL is returned if the repr can not
    be determined.
    
    Fixes: 1025351a88a4 ("nfp: add flower app")
    Signed-off-by: John Hurley <john.hurley@netronome.com>
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc928fdf5d1ebfd19feec4ee90baf4b965d26de8
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Sun Jul 29 00:28:31 2018 +0900

    bpf: use GFP_ATOMIC instead of GFP_KERNEL in bpf_parse_prog()
    
    [ Upstream commit 71eb5255f55bdb484d35ff7c9a1803f453dfbf82 ]
    
    bpf_parse_prog() is protected by rcu_read_lock().
    so that GFP_KERNEL is not allowed in the bpf_parse_prog().
    
    [51015.579396] =============================
    [51015.579418] WARNING: suspicious RCU usage
    [51015.579444] 4.18.0-rc6+ #208 Not tainted
    [51015.579464] -----------------------------
    [51015.579488] ./include/linux/rcupdate.h:303 Illegal context switch in RCU read-side critical section!
    [51015.579510] other info that might help us debug this:
    [51015.579532] rcu_scheduler_active = 2, debug_locks = 1
    [51015.579556] 2 locks held by ip/1861:
    [51015.579577]  #0: 00000000a8c12fd1 (rtnl_mutex){+.+.}, at: rtnetlink_rcv_msg+0x2e0/0x910
    [51015.579711]  #1: 00000000bf815f8e (rcu_read_lock){....}, at: lwtunnel_build_state+0x96/0x390
    [51015.579842] stack backtrace:
    [51015.579869] CPU: 0 PID: 1861 Comm: ip Not tainted 4.18.0-rc6+ #208
    [51015.579891] Hardware name: To be filled by O.E.M. To be filled by O.E.M./Aptio CRB, BIOS 5.6.5 07/08/2015
    [51015.579911] Call Trace:
    [51015.579950]  dump_stack+0x74/0xbb
    [51015.580000]  ___might_sleep+0x16b/0x3a0
    [51015.580047]  __kmalloc_track_caller+0x220/0x380
    [51015.580077]  kmemdup+0x1c/0x40
    [51015.580077]  bpf_parse_prog+0x10e/0x230
    [51015.580164]  ? kasan_kmalloc+0xa0/0xd0
    [51015.580164]  ? bpf_destroy_state+0x30/0x30
    [51015.580164]  ? bpf_build_state+0xe2/0x3e0
    [51015.580164]  bpf_build_state+0x1bb/0x3e0
    [51015.580164]  ? bpf_parse_prog+0x230/0x230
    [51015.580164]  ? lock_is_held_type+0x123/0x1a0
    [51015.580164]  lwtunnel_build_state+0x1aa/0x390
    [51015.580164]  fib_create_info+0x1579/0x33d0
    [51015.580164]  ? sched_clock_local+0xe2/0x150
    [51015.580164]  ? fib_info_update_nh_saddr+0x1f0/0x1f0
    [51015.580164]  ? sched_clock_local+0xe2/0x150
    [51015.580164]  fib_table_insert+0x201/0x1990
    [51015.580164]  ? lock_downgrade+0x610/0x610
    [51015.580164]  ? fib_table_lookup+0x1920/0x1920
    [51015.580164]  ? lwtunnel_valid_encap_type.part.6+0xcb/0x3a0
    [51015.580164]  ? rtm_to_fib_config+0x637/0xbd0
    [51015.580164]  inet_rtm_newroute+0xed/0x1b0
    [51015.580164]  ? rtm_to_fib_config+0xbd0/0xbd0
    [51015.580164]  rtnetlink_rcv_msg+0x331/0x910
    [ ... ]
    
    Fixes: 3a0af8fd61f9 ("bpf: BPF for lightweight tunnel infrastructure")
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 331c36cd01d8c11dbde3abc8e31b7ec8c67d1c02
Author: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
Date:   Thu Jul 26 16:15:43 2018 +0300

    ARC: dma [non-IOC] setup SMP_CACHE_BYTES and cache_line_size
    
    [ Upstream commit eb2777397fd83a4a7eaa26984d09d3babb845d2a ]
    
    As for today we don't setup SMP_CACHE_BYTES and cache_line_size for
    ARC, so they are set to L1_CACHE_BYTES by default. L1 line length
    (L1_CACHE_BYTES) might be easily smaller than L2 line (which is
    usually the case BTW). This breaks code.
    
    For example this breaks ethernet infrastructure on HSDK/AXS103 boards
    with IOC disabled, involving manual cache flushes
    Functions which alloc and manage sk_buff packet data area rely on
    SMP_CACHE_BYTES define. In the result we can share last L2 cache
    line in sk_buff linear packet data area between DMA buffer and
    some useful data in other structure. So we can lose this data when
    we invalidate DMA buffer.
    
       sk_buff linear packet data area
                    |
                    |
                    |         skb->end        skb->tail
                    V            |                |
                                 V                V
    ----------------------------------------------.
          packet data            | <tail padding> |  <useful data in other struct>
    ----------------------------------------------.
    
    ---------------------.--------------------------------------------------.
         SLC line        |             SLC (L2 cache) line (128B)           |
    ---------------------.--------------------------------------------------.
            ^                                     ^
            |                                     |
         These cache lines will be invalidated when we invalidate skb
         linear packet data area before DMA transaction starting.
    
    This leads to issues painful to debug as it reproduces only if
    (sk_buff->end - sk_buff->tail) < SLC_LINE_SIZE and
    if we have some useful data right after sk_buff->end.
    
    Fix that by hardcode SMP_CACHE_BYTES to max line length we may have.
    
    Signed-off-by: Eugeniy Paltsev <Eugeniy.Paltsev@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49c1fba34589c96624c738f11c8278a590c9ef99
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Fri Jul 27 13:13:39 2018 +0200

    Revert "MIPS: BCM47XX: Enable 74K Core ExternalSync for PCIe erratum"
    
    [ Upstream commit d5ea019f8a381f88545bb26993b62ec24a2796b7 ]
    
    This reverts commit 2a027b47dba6 ("MIPS: BCM47XX: Enable 74K Core
    ExternalSync for PCIe erratum").
    
    Enabling ExternalSync caused a regression for BCM4718A1 (used e.g. in
    Netgear E3000 and ASUS RT-N16): it simply hangs during PCIe
    initialization. It's likely that BCM4717A1 is also affected.
    
    I didn't notice that earlier as the only BCM47XX devices with PCIe I
    own are:
    1) BCM4706 with 2 x 14e4:4331
    2) BCM4706 with 14e4:4360 and 14e4:4331
    it appears that BCM4706 is unaffected.
    
    While BCM5300X-ES300-RDS.pdf seems to document that erratum and its
    workarounds (according to quotes provided by Tokunori) it seems not even
    Broadcom follows them.
    
    According to the provided info Broadcom should define CONF7_ES in their
    SDK's mipsinc.h and implement workaround in the si_mips_init(). Checking
    both didn't reveal such code. It *could* mean Broadcom also had some
    problems with the given workaround.
    
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Reported-by: Michael Marley <michael@michaelmarley.com>
    Patchwork: https://patchwork.linux-mips.org/patch/20032/
    URL: https://bugs.openwrt.org/index.php?do=details&task_id=1688
    Cc: Tokunori Ikegami <ikegami@allied-telesis.co.jp>
    Cc: Hauke Mehrtens <hauke@hauke-m.de>
    Cc: Chris Packham <chris.packham@alliedtelesis.co.nz>
    Cc: James Hogan <jhogan@kernel.org>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9339ea7c92fc47cc6389375ca8e1e064d316fb64
Author: Calvin Walton <calvin.walton@kepstin.ca>
Date:   Fri Jul 27 07:50:53 2018 -0400

    tools/power turbostat: Read extended processor family from CPUID
    
    [ Upstream commit 5aa3d1a20a233d4a5f1ec3d62da3f19d9afea682 ]
    
    This fixes the reported family on modern AMD processors (e.g. Ryzen,
    which is family 0x17). Previously these processors all showed up as
    family 0xf.
    
    See the document
    https://support.amd.com/TechDocs/56255_OSRR.pdf
    section CPUID_Fn00000001_EAX for how to calculate the family
    from the BaseFamily and ExtFamily values.
    
    This matches the code in arch/x86/lib/cpu.c
    
    Signed-off-by: Calvin Walton <calvin.walton@kepstin.ca>
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a73b6c4c2601dbe1cef92d7adeaf267fc50dcd4e
Author: Li Wang <liwang@redhat.com>
Date:   Thu Jul 26 16:37:42 2018 -0700

    zswap: re-check zswap_is_full() after do zswap_shrink()
    
    [ Upstream commit 16e536ef47f567289a5699abee9ff7bb304bc12d ]
    
    /sys/../zswap/stored_pages keeps rising in a zswap test with
    "zswap.max_pool_percent=0" parameter.  But it should not compress or
    store pages any more since there is no space in the compressed pool.
    
    Reproduce steps:
      1. Boot kernel with "zswap.enabled=1"
      2. Set the max_pool_percent to 0
          # echo 0 > /sys/module/zswap/parameters/max_pool_percent
      3. Do memory stress test to see if some pages have been compressed
          # stress --vm 1 --vm-bytes $mem_available"M" --timeout 60s
      4. Watching the 'stored_pages' number increasing or not
    
    The root cause is:
    
      When zswap_max_pool_percent is set to 0 via kernel parameter,
      zswap_is_full() will always return true due to zswap_shrink().  But if
      the shinking is able to reclain a page successfully the code then
      proceeds to compressing/storing another page, so the value of
      stored_pages will keep changing.
    
    To solve the issue, this patch adds a zswap_is_full() check again after
      zswap_shrink() to make sure it's now under the max_pool_percent, and to
      not compress/store if we reached the limit.
    
    Link: http://lkml.kernel.org/r/20180530103936.17812-1-liwang@redhat.com
    Signed-off-by: Li Wang <liwang@redhat.com>
    Acked-by: Dan Streetman <ddstreet@ieee.org>
    Cc: Seth Jennings <sjenning@redhat.com>
    Cc: Huang Ying <huang.ying.caritas@gmail.com>
    Cc: Yu Zhao <yuzhao@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 92c159863d8afefa9ca25a180feba6bff11c2be5
Author: Davidlohr Bueso <dave@stgolabs.net>
Date:   Thu Jul 26 16:37:19 2018 -0700

    ipc/sem.c: prevent queue.status tearing in semop
    
    [ Upstream commit f075faa300acc4f6301e348acde0a4580ed5f77c ]
    
    In order for load/store tearing prevention to work, _all_ accesses to
    the variable in question need to be done around READ and WRITE_ONCE()
    macros.  Ensure everyone does so for q->status variable for
    semtimedop().
    
    Link: http://lkml.kernel.org/r/20180717052654.676-1-dave@stgolabs.net
    Signed-off-by: Davidlohr Bueso <dbueso@suse.de>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2dd2f772257054867543c8051a174b3e1d879c2f
Author: dann frazier <dann.frazier@canonical.com>
Date:   Mon Jul 23 16:55:40 2018 -0600

    hinic: Link the logical network device to the pci device in sysfs
    
    [ Upstream commit 7856e8616273098dc6c09a6e084afd98a283ff0d ]
    
    Otherwise interfaces get exposed under /sys/devices/virtual, which
    doesn't give udev the context it needs for PCI-based predictable
    interface names.
    
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d00c34f8e20516f553a6920921bff239cd479c03
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sat Jul 14 01:28:44 2018 +0900

    selftests/ftrace: Add snapshot and tracing_on test case
    
    [ Upstream commit 82f4f3e69c5c29bce940dd87a2c0f16c51d48d17 ]
    
    Add a testcase for checking snapshot and tracing_on
    relationship. This ensures that the snapshotting doesn't
    affect current tracing on/off settings.
    
    Link: http://lkml.kernel.org/r/153149932412.11274.15289227592627901488.stgit@devbox
    
    Cc: Tom Zanussi <tom.zanussi@linux.intel.com>
    Cc: Hiraku Toyooka <hiraku.toyooka@cybertrust.co.jp>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Shuah Khan <shuah@kernel.org>
    Cc: linux-kselftest@vger.kernel.org
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c69b0300458f6b7b614c64607f8a2df8e652d22
Author: Kiran Kumar Modukuri <kiran.modukuri@gmail.com>
Date:   Thu Jun 21 13:25:53 2018 -0700

    cachefiles: Wait rather than BUG'ing on "Unexpected object collision"
    
    [ Upstream commit c2412ac45a8f8f1cd582723c1a139608694d410d ]
    
    If we meet a conflicting object that is marked FSCACHE_OBJECT_IS_LIVE in
    the active object tree, we have been emitting a BUG after logging
    information about it and the new object.
    
    Instead, we should wait for the CACHEFILES_OBJECT_ACTIVE flag to be cleared
    on the old object (or return an error).  The ACTIVE flag should be cleared
    after it has been removed from the active object tree.  A timeout of 60s is
    used in the wait, so we shouldn't be able to get stuck there.
    
    Fixes: 9ae326a69004 ("CacheFiles: A cache that backs onto a mounted filesystem")
    Signed-off-by: Kiran Kumar Modukuri <kiran.modukuri@gmail.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4029dd9fc48b7bb3f9a490474321fb7e20890863
Author: Kiran Kumar Modukuri <kiran.modukuri@gmail.com>
Date:   Tue Jul 18 16:25:49 2017 -0700

    cachefiles: Fix refcounting bug in backing-file read monitoring
    
    [ Upstream commit 934140ab028713a61de8bca58c05332416d037d1 ]
    
    cachefiles_read_waiter() has the right to access a 'monitor' object by
    virtue of being called under the waitqueue lock for one of the pages in its
    purview.  However, it has no ref on that monitor object or on the
    associated operation.
    
    What it is allowed to do is to move the monitor object to the operation's
    to_do list, but once it drops the work_lock, it's actually no longer
    permitted to access that object.  However, it is trying to enqueue the
    retrieval operation for processing - but it can only do this via a pointer
    in the monitor object, something it shouldn't be doing.
    
    If it doesn't enqueue the operation, the operation may not get processed.
    If the order is flipped so that the enqueue is first, then it's possible
    for the work processor to look at the to_do list before the monitor is
    enqueued upon it.
    
    Fix this by getting a ref on the operation so that we can trust that it
    will still be there once we've added the monitor to the to_do list and
    dropped the work_lock.  The op can then be enqueued after the lock is
    dropped.
    
    The bug can manifest in one of a couple of ways.  The first manifestation
    looks like:
    
     FS-Cache:
     FS-Cache: Assertion failed
     FS-Cache: 6 == 5 is false
     ------------[ cut here ]------------
     kernel BUG at fs/fscache/operation.c:494!
     RIP: 0010:fscache_put_operation+0x1e3/0x1f0
     ...
     fscache_op_work_func+0x26/0x50
     process_one_work+0x131/0x290
     worker_thread+0x45/0x360
     kthread+0xf8/0x130
     ? create_worker+0x190/0x190
     ? kthread_cancel_work_sync+0x10/0x10
     ret_from_fork+0x1f/0x30
    
    This is due to the operation being in the DEAD state (6) rather than
    INITIALISED, COMPLETE or CANCELLED (5) because it's already passed through
    fscache_put_operation().
    
    The bug can also manifest like the following:
    
     kernel BUG at fs/fscache/operation.c:69!
     ...
        [exception RIP: fscache_enqueue_operation+246]
     ...
     #7 [ffff883fff083c10] fscache_enqueue_operation at ffffffffa0b793c6
     #8 [ffff883fff083c28] cachefiles_read_waiter at ffffffffa0b15a48
     #9 [ffff883fff083c48] __wake_up_common at ffffffff810af028
    
    I'm not entirely certain as to which is line 69 in Lei's kernel, so I'm not
    entirely clear which assertion failed.
    
    Fixes: 9ae326a69004 ("CacheFiles: A cache that backs onto a mounted filesystem")
    Reported-by: Lei Xue <carmark.dlut@gmail.com>
    Reported-by: Vegard Nossum <vegard.nossum@gmail.com>
    Reported-by: Anthony DeRobertis <aderobertis@metrics.net>
    Reported-by: NeilBrown <neilb@suse.com>
    Reported-by: Daniel Axtens <dja@axtens.net>
    Reported-by: Kiran Kumar Modukuri <kiran.modukuri@gmail.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Daniel Axtens <dja@axtens.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 819b476c21386dc2a771b19dab6451cabec628e7
Author: Kiran Kumar Modukuri <kiran.modukuri@gmail.com>
Date:   Wed Jul 25 14:31:20 2018 +0100

    fscache: Allow cancelled operations to be enqueued
    
    [ Upstream commit d0eb06afe712b7b103b6361f40a9a0c638524669 ]
    
    Alter the state-check assertion in fscache_enqueue_operation() to allow
    cancelled operations to be given processing time so they can be cleaned up.
    
    Also fix a debugging statement that was requiring such operations to have
    an object assigned.
    
    Fixes: 9ae326a69004 ("CacheFiles: A cache that backs onto a mounted filesystem")
    Reported-by: Kiran Kumar Modukuri <kiran.modukuri@gmail.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 165335d4f18e0f730009452f52086c362c250dd2
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Jul 24 16:08:27 2018 -0700

    x86/boot: Fix if_changed build flip/flop bug
    
    [ Upstream commit 92a4728608a8fd228c572bc8ff50dd98aa0ddf2a ]
    
    Dirk Gouders reported that two consecutive "make" invocations on an
    already compiled tree will show alternating behaviors:
    
    $ make
      CALL    scripts/checksyscalls.sh
      DESCEND  objtool
      CHK     include/generated/compile.h
      DATAREL arch/x86/boot/compressed/vmlinux
    Kernel: arch/x86/boot/bzImage is ready  (#48)
      Building modules, stage 2.
      MODPOST 165 modules
    
    $ make
      CALL    scripts/checksyscalls.sh
      DESCEND  objtool
      CHK     include/generated/compile.h
      LD      arch/x86/boot/compressed/vmlinux
      ZOFFSET arch/x86/boot/zoffset.h
      AS      arch/x86/boot/header.o
      LD      arch/x86/boot/setup.elf
      OBJCOPY arch/x86/boot/setup.bin
      OBJCOPY arch/x86/boot/vmlinux.bin
      BUILD   arch/x86/boot/bzImage
    Setup is 15644 bytes (padded to 15872 bytes).
    System is 6663 kB
    CRC 3eb90f40
    Kernel: arch/x86/boot/bzImage is ready  (#48)
      Building modules, stage 2.
      MODPOST 165 modules
    
    He bisected it back to:
    
        commit 98f78525371b ("x86/boot: Refuse to build with data relocations")
    
    The root cause was the use of the "if_changed" kbuild function multiple
    times for the same target. It was designed to only be used once per
    target, otherwise it will effectively always trigger, flipping back and
    forth between the two commands getting recorded by "if_changed". Instead,
    this patch merges the two commands into a single function to get stable
    build artifacts (i.e. .vmlinux.cmd), and a single build behavior.
    
    Bisected-and-Reported-by: Dirk Gouders <dirk@gouders.net>
    Fix-Suggested-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20180724230827.GA37823@beast
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d35aab9df15a514b3efc69f92011625cd934df95
Author: Hailong Liu <liu.hailong6@zte.com.cn>
Date:   Wed Jul 18 08:46:55 2018 +0800

    sched/rt: Restore rt_runtime after disabling RT_RUNTIME_SHARE
    
    [ Upstream commit f3d133ee0a17d5694c6f21873eec9863e11fa423 ]
    
    NO_RT_RUNTIME_SHARE feature is used to prevent a CPU borrow enough
    runtime with a spin-rt-task.
    
    However, if RT_RUNTIME_SHARE feature is enabled and rt_rq has borrowd
    enough rt_runtime at the beginning, rt_runtime can't be restored to
    its initial bandwidth rt_runtime after we disable RT_RUNTIME_SHARE.
    
    E.g. on my PC with 4 cores, procedure to reproduce:
    1) Make sure  RT_RUNTIME_SHARE is enabled
     cat /sys/kernel/debug/sched_features
      GENTLE_FAIR_SLEEPERS START_DEBIT NO_NEXT_BUDDY LAST_BUDDY
      CACHE_HOT_BUDDY WAKEUP_PREEMPTION NO_HRTICK NO_DOUBLE_TICK
      LB_BIAS NONTASK_CAPACITY TTWU_QUEUE NO_SIS_AVG_CPU SIS_PROP
      NO_WARN_DOUBLE_CLOCK RT_PUSH_IPI RT_RUNTIME_SHARE NO_LB_MIN
      ATTACH_AGE_LOAD WA_IDLE WA_WEIGHT WA_BIAS
    2) Start a spin-rt-task
     ./loop_rr &
    3) set affinity to the last cpu
     taskset -p 8 $pid_of_loop_rr
    4) Observe that last cpu have borrowed enough runtime.
     cat /proc/sched_debug | grep rt_runtime
      .rt_runtime                    : 950.000000
      .rt_runtime                    : 900.000000
      .rt_runtime                    : 950.000000
      .rt_runtime                    : 1000.000000
    5) Disable RT_RUNTIME_SHARE
     echo NO_RT_RUNTIME_SHARE > /sys/kernel/debug/sched_features
    6) Observe that rt_runtime can not been restored
     cat /proc/sched_debug | grep rt_runtime
      .rt_runtime                    : 950.000000
      .rt_runtime                    : 900.000000
      .rt_runtime                    : 950.000000
      .rt_runtime                    : 1000.000000
    
    This patch help to restore rt_runtime after we disable
    RT_RUNTIME_SHARE.
    
    Signed-off-by: Hailong Liu <liu.hailong6@zte.com.cn>
    Signed-off-by: Jiang Biao <jiang.biao2@zte.com.cn>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: zhong.weidong@zte.com.cn
    Link: http://lkml.kernel.org/r/1531874815-39357-1-git-send-email-liu.hailong6@zte.com.cn
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ba83f87c3f1a16dab4a55ca52c57e59486c9917
Author: Peter Rosin <peda@axentia.se>
Date:   Fri Jul 20 10:39:14 2018 +0200

    i2c/mux, locking/core: Annotate the nested rt_mutex usage
    
    [ Upstream commit 7b94ea50514d1a0dc94f02723b603c27bc0ea597 ]
    
    If an i2c topology has instances of nested muxes, then a lockdep splat
    is produced when when i2c_parent_lock_bus() is called.  Here is an
    example:
    
      ============================================
      WARNING: possible recursive locking detected
      --------------------------------------------
      insmod/68159 is trying to acquire lock:
        (i2c_register_adapter#2){+.+.}, at: i2c_parent_lock_bus+0x32/0x50 [i2c_mux]
    
      but task is already holding lock:
        (i2c_register_adapter#2){+.+.}, at: i2c_parent_lock_bus+0x32/0x50 [i2c_mux]
    
      other info that might help us debug this:
        Possible unsafe locking scenario:
    
              CPU0
              ----
         lock(i2c_register_adapter#2);
         lock(i2c_register_adapter#2);
    
        *** DEADLOCK ***
    
        May be due to missing lock nesting notation
    
      1 lock held by insmod/68159:
        #0:  (i2c_register_adapter#2){+.+.}, at: i2c_parent_lock_bus+0x32/0x50 [i2c_mux]
    
      stack backtrace:
      CPU: 13 PID: 68159 Comm: insmod Tainted: G           O
      Call Trace:
        dump_stack+0x67/0x98
        __lock_acquire+0x162e/0x1780
        lock_acquire+0xba/0x200
        rt_mutex_lock+0x44/0x60
        i2c_parent_lock_bus+0x32/0x50 [i2c_mux]
        i2c_parent_lock_bus+0x3e/0x50 [i2c_mux]
        i2c_smbus_xfer+0xf0/0x700
        i2c_smbus_read_byte+0x42/0x70
        my2c_init+0xa2/0x1000 [my2c]
        do_one_initcall+0x51/0x192
        do_init_module+0x62/0x216
        load_module+0x20f9/0x2b50
        SYSC_init_module+0x19a/0x1c0
        SyS_init_module+0xe/0x10
        do_syscall_64+0x6c/0x1a0
        entry_SYSCALL_64_after_hwframe+0x42/0xb7
    
    Reported-by: John Sperbeck <jsperbeck@google.com>
    Tested-by: John Sperbeck <jsperbeck@google.com>
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Deepa Dinamani <deepadinamani@google.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Chang <dpf@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Wolfram Sang <wsa@the-dreams.de>
    Link: http://lkml.kernel.org/r/20180720083914.1950-3-peda@axentia.se
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3da5df23900dd092895e8d2b897d4ddc641cc8b
Author: Peter Rosin <peda@axentia.se>
Date:   Fri Jul 20 10:39:13 2018 +0200

    locking/rtmutex: Allow specifying a subclass for nested locking
    
    [ Upstream commit 62cedf3e60af03e47849fe2bd6a03ec179422a8a ]
    
    Needed for annotating rt_mutex locks.
    
    Tested-by: John Sperbeck <jsperbeck@google.com>
    Signed-off-by: Peter Rosin <peda@axentia.se>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Deepa Dinamani <deepadinamani@google.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Chang <dpf@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Wolfram Sang <wsa@the-dreams.de>
    Link: http://lkml.kernel.org/r/20180720083914.1950-2-peda@axentia.se
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 354e35beb0c582af5cb093e8d1d94e534a48eb4e
Author: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
Date:   Tue Jul 24 10:09:53 2018 +0530

    net: axienet: Fix double deregister of mdio
    
    [ Upstream commit 03bc7cab7d7218088412a75e141696a89059ab00 ]
    
    If the registration fails then mdio_unregister is called.
    However at unbind the unregister ia attempted again resulting
    in the below crash
    
    [   73.544038] kernel BUG at drivers/net/phy/mdio_bus.c:415!
    [   73.549362] Internal error: Oops - BUG: 0 [#1] SMP
    [   73.554127] Modules linked in:
    [   73.557168] CPU: 0 PID: 2249 Comm: sh Not tainted 4.14.0 #183
    [   73.562895] Hardware name: xlnx,zynqmp (DT)
    [   73.567062] task: ffffffc879e41180 task.stack: ffffff800cbe0000
    [   73.572973] PC is at mdiobus_unregister+0x84/0x88
    [   73.577656] LR is at axienet_mdio_teardown+0x18/0x30
    [   73.582601] pc : [<ffffff80085fa4cc>] lr : [<ffffff8008616858>]
    pstate: 20000145
    [   73.589981] sp : ffffff800cbe3c30
    [   73.593277] x29: ffffff800cbe3c30 x28: ffffffc879e41180
    [   73.598573] x27: ffffff8008a21000 x26: 0000000000000040
    [   73.603868] x25: 0000000000000124 x24: ffffffc879efe920
    [   73.609164] x23: 0000000000000060 x22: ffffffc879e02000
    [   73.614459] x21: ffffffc879e02800 x20: ffffffc87b0b8870
    [   73.619754] x19: ffffffc879e02800 x18: 000000000000025d
    [   73.625050] x17: 0000007f9a719ad0 x16: ffffff8008195bd8
    [   73.630345] x15: 0000007f9a6b3d00 x14: 0000000000000010
    [   73.635640] x13: 74656e7265687465 x12: 0000000000000030
    [   73.640935] x11: 0000000000000030 x10: 0101010101010101
    [   73.646231] x9 : 241f394f42533300 x8 : ffffffc8799f6e98
    [   73.651526] x7 : ffffffc8799f6f18 x6 : ffffffc87b0ba318
    [   73.656822] x5 : ffffffc87b0ba498 x4 : 0000000000000000
    [   73.662117] x3 : 0000000000000000 x2 : 0000000000000008
    [   73.667412] x1 : 0000000000000004 x0 : ffffffc8799f4000
    [   73.672708] Process sh (pid: 2249, stack limit = 0xffffff800cbe0000)
    
    Fix the same by making the bus NULL on unregister.
    
    Signed-off-by: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f63868841a310d29f722015ff6bfef79ec61a3cc
Author: Aleksander Morgado <aleksander@aleksander.es>
Date:   Tue Jul 24 01:31:07 2018 +0200

    qmi_wwan: fix interface number for DW5821e production firmware
    
    [ Upstream commit f25e1392fdb556290957142ac2da33a02cbff403 ]
    
    The original mapping for the DW5821e was done using a development
    version of the firmware. Confirmed with the vendor that the final
    USB layout ends up exposing the QMI control/data ports in USB
    config #1, interface #0, not in interface #1 (which is now a HID
    interface).
    
    T:  Bus=01 Lev=03 Prnt=04 Port=00 Cnt=01 Dev#= 16 Spd=480 MxCh= 0
    D:  Ver= 2.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  2
    P:  Vendor=413c ProdID=81d7 Rev=03.18
    S:  Manufacturer=DELL
    S:  Product=DW5821e Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#= 0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#= 1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
    I:  If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    
    Fixes: e7e197edd09c25 ("qmi_wwan: add support for the Dell Wireless 5821e module")
    Signed-off-by: Aleksander Morgado <aleksander@aleksander.es>
    Acked-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 637de2c016786aa00697202aefc1d3e69dd05c55
Author: Sudarsana Reddy Kalluru <sudarsana.kalluru@cavium.com>
Date:   Tue Jul 24 02:43:52 2018 -0700

    bnx2x: Fix invalid memory access in rss hash config path.
    
    [ Upstream commit ae2dcb28c24794a87e424a726a1cf1a61980f52d ]
    
    Rx hash/filter table configuration uses rss_conf_obj to configure filters
    in the hardware. This object is initialized only when the interface is
    brought up.
    This patch adds driver changes to configure rss params only when the device
    is in opened state. In port disabled case, the config will be cached in the
    driver structure which will be applied in the successive load path.
    
    Please consider applying it to 'net' branch.
    
    Signed-off-by: Sudarsana Reddy Kalluru <Sudarsana.Kalluru@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1875957f2ec4587b87e0a0c32efe47958a88abe6
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Mon Jul 23 14:39:33 2018 -0700

    media: staging: omap4iss: Include asm/cacheflush.h after generic includes
    
    [ Upstream commit 0894da849f145af51bde88a6b84f95b9c9e0bc66 ]
    
    Including asm/cacheflush.h first results in the following build error
    when trying to build sparc32:allmodconfig, because 'struct page' has not
    been declared, and the function declaration ends up creating a separate
    (private) declaration of struct page (as a result of function arguments
    being in the scope of the function declaration and definition, not in
    global scope).
    
    The C scoping rules do not just affect variable visibility, they also
    affect type declaration visibility.
    
    The end result is that when the actual call site is seen in
    <linux/highmem.h>, the 'struct page' type in the caller is not the same
    'struct page' that the function was declared with, resulting in:
    
      In file included from arch/sparc/include/asm/page.h:10:0,
                       ...
                       from drivers/staging/media/omap4iss/iss_video.c:15:
      include/linux/highmem.h: In function 'clear_user_highpage':
      include/linux/highmem.h:137:31: error:
            passing argument 1 of 'sparc_flush_page_to_ram' from incompatible
            pointer type
    
    Include generic includes files first to fix the problem.
    
    Fixes: fc96d58c10162 ("[media] v4l: omap4iss: Add support for OMAP4 camera interface - Video devices")
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Acked-by: David S. Miller <davem@davemloft.net>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    [ Added explanation of C scope rules - Linus ]
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00f795e12b8bfbc385ba167446098c227c300183
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Jul 20 10:39:07 2018 +0200

    perf/x86/amd/ibs: Don't access non-started event
    
    [ Upstream commit d2753e6b4882a637a0e8fb3b9c2e15f33265300e ]
    
    Paul Menzel reported the following bug:
    
    > Enabling the undefined behavior sanitizer and building GNU/Linux 4.18-rc5+
    > (with some unrelated commits) with GCC 8.1.0 from Debian Sid/unstable, the
    > warning below is shown.
    >
    > > [    2.111913]
    > > ================================================================================
    > > [    2.111917] UBSAN: Undefined behaviour in arch/x86/events/amd/ibs.c:582:24
    > > [    2.111919] member access within null pointer of type 'struct perf_event'
    > > [    2.111926] CPU: 0 PID: 144 Comm: udevadm Not tainted 4.18.0-rc5-00316-g4864b68cedf2 #104
    > > [    2.111928] Hardware name: ASROCK E350M1/E350M1, BIOS TIMELESS 01/01/1970
    > > [    2.111930] Call Trace:
    > > [    2.111943]  dump_stack+0x55/0x89
    > > [    2.111949]  ubsan_epilogue+0xb/0x33
    > > [    2.111953]  handle_null_ptr_deref+0x7f/0x90
    > > [    2.111958]  __ubsan_handle_type_mismatch_v1+0x55/0x60
    > > [    2.111964]  perf_ibs_handle_irq+0x596/0x620
    
    The code dereferences event before checking the STARTED bit. Patch
    below should cure the issue.
    
    The warning should not trigger, if I analyzed the thing correctly.
    (And Paul's testing confirms this.)
    
    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Tested-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul Menzel <pmenzel+linux-x86@molgen.mpg.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Link: http://lkml.kernel.org/r/alpine.DEB.2.21.1807200958390.1580@nanos.tec.linutronix.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 385b40b4fc1b54ade551c4fa56ece51364ab323e
Author: Alexander Sverdlin <alexander.sverdlin@nokia.com>
Date:   Fri Jul 13 17:20:17 2018 +0200

    i2c: davinci: Avoid zero value of CLKH
    
    [ Upstream commit cc8de9a68599b261244ea453b38678229f06ada7 ]
    
    If CLKH is set to 0 I2C clock is not generated at all, so avoid this value
    and stretch the clock in this case.
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Acked-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 562d7bc6c966ad7f66a85f63843a548ffd1eb8ce
Author: Faiz Abbas <faiz_abbas@ti.com>
Date:   Tue Jul 3 16:47:10 2018 +0530

    can: m_can: Move accessing of message ram to after clocks are enabled
    
    [ Upstream commit 54e4a0c486041dc1c20593d997fafd67089e8408 ]
    
    MCAN message ram should only be accessed once clocks are enabled.
    Therefore, move the call to parse/init the message ram to after
    clocks are enabled.
    
    Signed-off-by: Faiz Abbas <faiz_abbas@ti.com>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0b14a856f918fdfb70b234900fb9ecf92311b368
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Mon Jul 9 21:16:40 2018 +0200

    can: mpc5xxx_can: check of_iomap return before use
    
    [ Upstream commit b5c1a23b17e563b656cc9bb76ce5323b997d90e8 ]
    
    of_iomap() can return NULL so that return needs to be checked and NULL
    treated as failure. While at it also take care of the missing
    of_node_put() in the error path.
    
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Fixes: commit afa17a500a36 ("net/can: add driver for mscan family & mpc52xx_mscan")
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06ab427345295831dc446df01f971d9235d0dac0
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Jul 21 12:59:25 2018 -0700

    net: prevent ISA drivers from building on PPC32
    
    [ Upstream commit c9ce1fa1c24b08e13c2a3b5b1f94a19c9eaa982c ]
    
    Prevent drivers from building on PPC32 if they use isa_bus_to_virt(),
    isa_virt_to_bus(), or isa_page_to_bus(), which are not available and
    thus cause build errors.
    
    ../drivers/net/ethernet/3com/3c515.c: In function 'corkscrew_open':
    ../drivers/net/ethernet/3com/3c515.c:824:9: error: implicit declaration of function 'isa_virt_to_bus'; did you mean 'virt_to_bus'? [-Werror=implicit-function-declaration]
    
    ../drivers/net/ethernet/amd/lance.c: In function 'lance_rx':
    ../drivers/net/ethernet/amd/lance.c:1203:23: error: implicit declaration of function 'isa_bus_to_virt'; did you mean 'bus_to_virt'? [-Werror=implicit-function-declaration]
    
    ../drivers/net/ethernet/amd/ni65.c: In function 'ni65_init_lance':
    ../drivers/net/ethernet/amd/ni65.c:585:20: error: implicit declaration of function 'isa_virt_to_bus'; did you mean 'virt_to_bus'? [-Werror=implicit-function-declaration]
    
    ../drivers/net/ethernet/cirrus/cs89x0.c: In function 'net_open':
    ../drivers/net/ethernet/cirrus/cs89x0.c:897:20: error: implicit declaration of function 'isa_virt_to_bus'; did you mean 'virt_to_bus'? [-Werror=implicit-function-declaration]
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Suggested-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5803ce5effc933f0bc142cbb78c8b02931bd801c
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Jul 20 19:30:57 2018 +0200

    atl1c: reserve min skb headroom
    
    [ Upstream commit 6e56830776828d8ca9897fc4429eeab47c3bb432 ]
    
    Got crash report with following backtrace:
    BUG: unable to handle kernel paging request at ffff8801869daffe
    RIP: 0010:[<ffffffff816429c4>]  [<ffffffff816429c4>] ip6_finish_output2+0x394/0x4c0
    RSP: 0018:ffff880186c83a98  EFLAGS: 00010283
    RAX: ffff8801869db00e ...
      [<ffffffff81644cdc>] ip6_finish_output+0x8c/0xf0
      [<ffffffff81644d97>] ip6_output+0x57/0x100
      [<ffffffff81643dc9>] ip6_forward+0x4b9/0x840
      [<ffffffff81645566>] ip6_rcv_finish+0x66/0xc0
      [<ffffffff81645db9>] ipv6_rcv+0x319/0x530
      [<ffffffff815892ac>] netif_receive_skb+0x1c/0x70
      [<ffffffffc0060bec>] atl1c_clean+0x1ec/0x310 [atl1c]
      ...
    
    The bad access is in neigh_hh_output(), at skb->data - 16 (HH_DATA_MOD).
    atl1c driver provided skb with no headroom, so 14 bytes (ethernet
    header) got pulled, but then 16 are copied.
    
    Reserve NET_SKB_PAD bytes headroom, like netdev_alloc_skb().
    
    Compile tested only; I lack hardware.
    
    Fixes: 7b7017642199 ("atl1c: Fix misuse of netdev_alloc_skb in refilling rx ring")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffb34418ca94f78feb84bf87317c679fcd7ed86b
Author: Sudarsana Reddy Kalluru <sudarsana.kalluru@cavium.com>
Date:   Wed Jul 18 22:50:04 2018 -0700

    qed: Correct Multicast API to reflect existence of 256 approximate buckets.
    
    [ Upstream commit 25c020a90919632b3425c19dc09188d56b9ed59a ]
    
    FW hsi contains 256 approximation buckets which are split in ramrod into
    eight u32 values, but driver is using eight 'unsigned long' variables.
    
    This patch fixes the mcast logic by making the API utilize u32.
    
    Fixes: 83aeb933 ("qed*: Trivial modifications")
    Signed-off-by: Sudarsana Reddy Kalluru <Sudarsana.Kalluru@cavium.com>
    Signed-off-by: Ariel Elior <ariel.elior@cavium.com>
    Signed-off-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4e284f1db9e62e2506c08ef59a4f0810b99b2f2
Author: Sudarsana Reddy Kalluru <sudarsana.kalluru@cavium.com>
Date:   Wed Jul 18 22:50:03 2018 -0700

    qed: Fix possible race for the link state value.
    
    [ Upstream commit 58874c7b246109d8efb2b0099d1aa296d6bfc3fa ]
    
    There's a possible race where driver can read link status in mid-transition
    and see that virtual-link is up yet speed is 0. Since in this
    mid-transition we're guaranteed to see a mailbox from MFW soon, we can
    afford to treat this as link down.
    
    Fixes: cc875c2e ("qed: Add link support")
    Signed-off-by: Sudarsana Reddy Kalluru <Sudarsana.Kalluru@cavium.com>
    Signed-off-by: Ariel Elior <ariel.elior@cavium.com>
    Signed-off-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77c65d5f40c6979244eee3d4f51fa2a213c73307
Author: Sudarsana Reddy Kalluru <sudarsana.kalluru@cavium.com>
Date:   Wed Jul 18 22:50:02 2018 -0700

    qed: Fix link flap issue due to mismatching EEE capabilities.
    
    [ Upstream commit 4ad95a93a702ec4f4fb5159b822797ba67b8cbbe ]
    
    Apparently, MFW publishes EEE capabilities even for Fiber-boards that don't
    support them, and later since qed internally sets adv_caps it would cause
    link-flap avoidance (LFA) to fail when driver would initiate the link.
    This in turn delays the link, causing traffic to fail.
    
    Driver has been modified to not to ask MFW for any EEE config if EEE isn't
    to be enabled.
    
    Fixes: 645874e5 ("qed: Add support for Energy efficient ethernet.")
    Signed-off-by: Sudarsana Reddy Kalluru <Sudarsana.Kalluru@cavium.com>
    Signed-off-by: Ariel Elior <ariel.elior@cavium.com>
    Signed-off-by: Michal Kalderon <Michal.Kalderon@cavium.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b970d8a1c213d8f030feddb3cbf934df4302eb47
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Jul 19 10:27:13 2018 +0800

    net: caif: Add a missing rcu_read_unlock() in caif_flow_cb
    
    [ Upstream commit 64119e05f7b31e83e2555f6782e6cdc8f81c63f4 ]
    
    Add a missing rcu_read_unlock in the error path
    
    Fixes: c95567c80352 ("caif: added check for potential null return")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a10170d94ed4954f62e2cf73ce7cf5c531790163
Author: Len Brown <len.brown@intel.com>
Date:   Fri Jul 20 14:47:03 2018 -0400

    tools/power turbostat: fix -S on UP systems
    
    [ Upstream commit 9d83601a9cc1884d1b5706ee2acc661d558c6838 ]
    
    The -S (system summary) option failed to print any data on a 1-processor system.
    
    Reported-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 10ca6b3f92d3907a4b25ab198c7b5c84aefa3bc7
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Thu Jul 19 10:31:00 2018 -0700

    KVM: vmx: use local variable for current_vmptr when emulating VMPTRST
    
    [ Upstream commit 0a06d4256674c4e041945b52044941995fee237d ]
    
    Do not expose the address of vmx->nested.current_vmptr to
    kvm_write_guest_virt_system() as the resulting __copy_to_user()
    call will trigger a WARN when CONFIG_HARDENED_USERCOPY is
    enabled.
    
    Opportunistically clean up variable names in handle_vmptrst()
    to improve readability, e.g. vmcs_gva is misleading as the
    memory operand of VMPTRST is plain memory, not a VMCS.
    
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Tested-by: Peter Shier <pshier@google.com>
    Reviewed-by: Peter Shier <pshier@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 123534dbd49094b9f68e53fffd8cbd8a9f9f976e
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Jul 17 07:17:56 2018 +0200

    netfilter: nf_tables: don't allow to rename to already-pending name
    
    [ Upstream commit c6cc94df65c3174be92afbee638f11cbb5e606a7 ]
    
    Its possible to rename two chains to the same name in one
    transaction:
    
    nft add chain t c1
    nft add chain t c2
    nft 'rename chain t c1 c3;rename chain t c2 c3'
    
    This creates two chains named 'c3'.
    
    Appears to be harmless, both chains can still be deleted both
    by name or handle, but, nevertheless, its a bug.
    
    Walk transaction log and also compare vs. the pending renames.
    
    Both chains can still be deleted, but nevertheless it is a bug as
    we don't allow to create chains with identical names, so we should
    prevent this from happening-by-rename too.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a0144a43c526e6d8d274fce2e4241854ef8712c
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Jul 17 07:17:55 2018 +0200

    netfilter: nf_tables: fix memory leaks on chain rename
    
    [ Upstream commit 9f8aac0be21ed5f99bd5ba0ff315d710737d1794 ]
    
    The new name is stored in the transaction metadata, on commit,
    the pointers to the old and new names are swapped.
    
    Therefore in abort and commit case we have to free the
    pointer in the chain_trans container.
    
    In commit case, the pointer can be used by another cpu that
    is currently dumping the renamed chain, thus kfree needs to
    happen after waiting for rcu readers to complete.
    
    Fixes: b7263e071a ("netfilter: nf_tables: Allow chain name of up to 255 chars")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3476a6da5d87215ca6e1c9629fec6b5e73c785d
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Thu Jul 19 18:18:35 2018 +0200

    bpf, ppc64: fix unexpected r0=0 exit path inside bpf_xadd
    
    [ Upstream commit b9c1e60e7bf4e64ac1b4f4d6d593f0bb57886973 ]
    
    None of the JITs is allowed to implement exit paths from the BPF
    insn mappings other than BPF_JMP | BPF_EXIT. In the BPF core code
    we have a couple of rewrites in eBPF (e.g. LD_ABS / LD_IND) and
    in eBPF to cBPF translation to retain old existing behavior where
    exceptions may occur; they are also tightly controlled by the
    verifier where it disallows some of the features such as BPF to
    BPF calls when legacy LD_ABS / LD_IND ops are present in the BPF
    program. During recent review of all BPF_XADD JIT implementations
    I noticed that the ppc64 one is buggy in that it contains two
    jumps to exit paths. This is problematic as this can bypass verifier
    expectations e.g. pointed out in commit f6b1b3bf0d5f ("bpf: fix
    subprog verifier bypass by div/mod by 0 exception"). The first
    exit path is obsoleted by the fix in ca36960211eb ("bpf: allow xadd
    only on aligned memory") anyway, and for the second one we need to
    do a fetch, add and store loop if the reservation from lwarx/ldarx
    was lost in the meantime.
    
    Fixes: 156d0e290e96 ("powerpc/ebpf/jit: Implement JIT compiler for extended BPF")
    Reviewed-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Reviewed-by: Sandipan Das <sandipan@linux.vnet.ibm.com>
    Tested-by: Sandipan Das <sandipan@linux.vnet.ibm.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a685c4c4d6e8bd6c3e4b39330e5d09f2446de8b9
Author: Taehee Yoo <ap420073@gmail.com>
Date:   Tue Jul 10 23:21:08 2018 +0900

    netfilter: nft_set_hash: add rcu_barrier() in the nft_rhash_destroy()
    
    [ Upstream commit 9970a8e40d4c39e23d62d32540366d1d7d2cce9b ]
    
    GC of set uses call_rcu() to destroy elements.
    So that elements would be destroyed after destroying sets and chains.
    But, elements should be destroyed before destroying sets and chains.
    In order to wait calling call_rcu(), a rcu_barrier() is added.
    
    In order to test correctly, below patch should be applied.
    https://patchwork.ozlabs.org/patch/940883/
    
    test scripts:
       %cat test.nft
       table ip aa {
               map map1 {
                       type ipv4_addr : verdict; flags timeout;
                       elements = {
                               0 : jump a0,
                               1 : jump a0,
                               2 : jump a0,
                               3 : jump a0,
                               4 : jump a0,
                               5 : jump a0,
                               6 : jump a0,
                               7 : jump a0,
                               8 : jump a0,
                               9 : jump a0,
                       }
                       timeout 1s;
               }
               chain a0 {
               }
       }
       flush ruleset
    
       [ ... ]
    
       table ip aa {
               map map1 {
                       type ipv4_addr : verdict; flags timeout;
                       elements = {
                               0 : jump a0,
                               1 : jump a0,
                               2 : jump a0,
                               3 : jump a0,
                               4 : jump a0,
                               5 : jump a0,
                               6 : jump a0,
                               7 : jump a0,
                               8 : jump a0,
                               9 : jump a0,
                       }
                       timeout 1s;
               }
               chain a0 {
               }
       }
       flush ruleset
    
    Splat looks like:
    [  200.795603] kernel BUG at net/netfilter/nf_tables_api.c:1363!
    [  200.806944] invalid opcode: 0000 [#1] SMP DEBUG_PAGEALLOC KASAN PTI
    [  200.812253] CPU: 1 PID: 1582 Comm: nft Not tainted 4.17.0+ #24
    [  200.820297] Hardware name: To be filled by O.E.M. To be filled by O.E.M./Aptio CRB, BIOS 5.6.5 07/08/2015
    [  200.830309] RIP: 0010:nf_tables_chain_destroy.isra.34+0x62/0x240 [nf_tables]
    [  200.838317] Code: 43 50 85 c0 74 26 48 8b 45 00 48 8b 4d 08 ba 54 05 00 00 48 c7 c6 60 6d 29 c0 48 c7 c7 c0 65 29 c0
    4c 8b 40 08 e8 58 e5 fd f8 <0f> 0b 48 89 da 48 b8 00 00 00 00 00 fc ff
    [  200.860366] RSP: 0000:ffff880118dbf4d0 EFLAGS: 00010282
    [  200.866354] RAX: 0000000000000061 RBX: ffff88010cdeaf08 RCX: 0000000000000000
    [  200.874355] RDX: 0000000000000061 RSI: 0000000000000008 RDI: ffffed00231b7e90
    [  200.882361] RBP: ffff880118dbf4e8 R08: ffffed002373bcfb R09: ffffed002373bcfa
    [  200.890354] R10: 0000000000000000 R11: ffffed002373bcfb R12: dead000000000200
    [  200.898356] R13: dead000000000100 R14: ffffffffbb62af38 R15: dffffc0000000000
    [  200.906354] FS:  00007fefc31fd700(0000) GS:ffff88011b800000(0000) knlGS:0000000000000000
    [  200.915533] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  200.922355] CR2: 0000557f1c8e9128 CR3: 0000000106880000 CR4: 00000000001006e0
    [  200.930353] Call Trace:
    [  200.932351]  ? nf_tables_commit+0x26f6/0x2c60 [nf_tables]
    [  200.939525]  ? nf_tables_setelem_notify.constprop.49+0x1a0/0x1a0 [nf_tables]
    [  200.947525]  ? nf_tables_delchain+0x6e0/0x6e0 [nf_tables]
    [  200.952383]  ? nft_add_set_elem+0x1700/0x1700 [nf_tables]
    [  200.959532]  ? nla_parse+0xab/0x230
    [  200.963529]  ? nfnetlink_rcv_batch+0xd06/0x10d0 [nfnetlink]
    [  200.968384]  ? nfnetlink_net_init+0x130/0x130 [nfnetlink]
    [  200.975525]  ? debug_show_all_locks+0x290/0x290
    [  200.980363]  ? debug_show_all_locks+0x290/0x290
    [  200.986356]  ? sched_clock_cpu+0x132/0x170
    [  200.990352]  ? find_held_lock+0x39/0x1b0
    [  200.994355]  ? sched_clock_local+0x10d/0x130
    [  200.999531]  ? memset+0x1f/0x40
    
    Fixes: 9d0982927e79 ("netfilter: nft_hash: add support for timeouts")
    Signed-off-by: Taehee Yoo <ap420073@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70e88fef36ec16b25ba2f88258e4bd38990cbd61
Author: Eugeniu Rosca <roscaeugeniu@gmail.com>
Date:   Mon Jul 2 23:46:47 2018 +0200

    usb: gadget: f_uac2: fix endianness of 'struct cntrl_*_lay3'
    
    [ Upstream commit eec24f2a0d4dc3b1d95a3ccd2feb523ede3ba775 ]
    
    The list [1] of commits doing endianness fixes in USB subsystem is long
    due to below quote from USB spec Revision 2.0 from April 27, 2000:
    
    ------------
    8.1 Byte/Bit Ordering
    
    Multiple byte fields in standard descriptors, requests, and responses
    are interpreted as and moved over the bus in little-endian order, i.e.
    LSB to MSB.
    ------------
    
    This commit belongs to the same family.
    
    [1] Example of endianness fixes in USB subsystem:
    commit 14e1d56cbea6 ("usb: gadget: f_uac2: endianness fixes.")
    commit 42370b821168 ("usb: gadget: f_uac1: endianness fixes.")
    commit 63afd5cc7877 ("USB: chaoskey: fix Alea quirk on big-endian hosts")
    commit 74098c4ac782 ("usb: gadget: acm: fix endianness in notifications")
    commit cdd7928df0d2 ("ACM gadget: fix endianness in notifications")
    commit 323ece54e076 ("cdc-wdm: fix endianness bug in debug statements")
    commit e102609f1072 ("usb: gadget: uvc: Fix endianness mismatches")
           list goes on
    
    Fixes: 132fcb460839 ("usb: gadget: Add Audio Class 2.0 Driver")
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Reviewed-by: Ruslan Bilovol <ruslan.bilovol@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cd80fc138f289aa25fba5dffc1542e4111f34d1
Author: Peter Senna Tschudin <peter.senna@gmail.com>
Date:   Tue Jul 10 16:01:45 2018 +0200

    tools: usb: ffs-test: Fix build on big endian systems
    
    [ Upstream commit a2b22dddc7bb6110ac3b5ed1a60aa9279836fadb ]
    
    The tools/usb/ffs-test.c file defines cpu_to_le16/32 by using the C
    library htole16/32 function calls. However, cpu_to_le16/32 are used when
    initializing structures, i.e in a context where a function call is not
    allowed.
    
    It works fine on little endian systems because htole16/32 are defined by
    the C library as no-ops. But on big-endian systems, they are actually
    doing something, which might involve calling a function, causing build
    failures, such as:
    
       ffs-test.c:48:25: error: initializer element is not constant
        #define cpu_to_le32(x)  htole32(x)
                                ^~~~~~~
       ffs-test.c:128:12: note: in expansion of macro ‘cpu_to_le32’
          .magic = cpu_to_le32(FUNCTIONFS_DESCRIPTORS_MAGIC_V2),
                   ^~~~~~~~~~~
    
    To solve this, we code cpu_to_le16/32 in a way that allows them to be
    used when initializing structures. This fix was imported from
    meta-openembedded/android-tools/fix-big-endian-build.patch written by
    Thomas Petazzoni <thomas.petazzoni@free-electrons.com>.
    
    CC: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: Peter Senna Tschudin <peter.senna@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 645fef5e8ddeac591556d9e13d0cf0ea50c6fca6
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Jul 15 10:37:37 2018 -0700

    usb/phy: fix PPC64 build errors in phy-fsl-usb.c
    
    [ Upstream commit a39ba90a1cc7010edb0a7132e1b67f3d80b994e9 ]
    
    Fix build errors when built for PPC64:
    These variables are only used on PPC32 so they don't need to be
    initialized for PPC64.
    
    ../drivers/usb/phy/phy-fsl-usb.c: In function 'usb_otg_start':
    ../drivers/usb/phy/phy-fsl-usb.c:865:3: error: '_fsl_readl' undeclared (first use in this function); did you mean 'fsl_readl'?
       _fsl_readl = _fsl_readl_be;
    ../drivers/usb/phy/phy-fsl-usb.c:865:16: error: '_fsl_readl_be' undeclared (first use in this function); did you mean 'fsl_readl'?
       _fsl_readl = _fsl_readl_be;
    ../drivers/usb/phy/phy-fsl-usb.c:866:3: error: '_fsl_writel' undeclared (first use in this function); did you mean 'fsl_writel'?
       _fsl_writel = _fsl_writel_be;
    ../drivers/usb/phy/phy-fsl-usb.c:866:17: error: '_fsl_writel_be' undeclared (first use in this function); did you mean 'fsl_writel'?
       _fsl_writel = _fsl_writel_be;
    ../drivers/usb/phy/phy-fsl-usb.c:868:16: error: '_fsl_readl_le' undeclared (first use in this function); did you mean 'fsl_readl'?
       _fsl_readl = _fsl_readl_le;
    ../drivers/usb/phy/phy-fsl-usb.c:869:17: error: '_fsl_writel_le' undeclared (first use in this function); did you mean 'fsl_writel'?
       _fsl_writel = _fsl_writel_le;
    
    and the sysfs "show" function return type should be ssize_t, not int:
    
    ../drivers/usb/phy/phy-fsl-usb.c:1042:49: error: initialization of 'ssize_t (*)(struct device *, struct device_attribute *, char *)' {aka 'long int (*)(struct device *, struct device_attribute *, char *)'} from incompatible pointer type 'int (*)(struct device *, struct device_attribute *, char *)' [-Werror=incompatible-pointer-types]
     static DEVICE_ATTR(fsl_usb2_otg_state, S_IRUGO, show_fsl_usb2_otg_state, NULL);
    
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: linux-usb@vger.kernel.org
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: linuxppc-dev@lists.ozlabs.org
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a362655deb0e15a55dafda8e875e0a1f1b97c92d
Author: Vladimir Zapolskiy <vladimir_zapolskiy@mentor.com>
Date:   Thu Jun 21 17:22:52 2018 +0200

    usb: gadget: u_audio: protect stream runtime fields with stream spinlock
    
    [ Upstream commit 56bc61587daadef67712068f251c4ef2e3932d94 ]
    
    The change protects almost the whole body of u_audio_iso_complete()
    function by PCM stream lock, this is mainly sufficient to avoid a race
    between USB request completion and stream termination, the change
    prevents a possibility of invalid memory access in interrupt context
    by memcpy():
    
        Unable to handle kernel paging request at virtual address 00004e80
        pgd = c0004000
        [00004e80] *pgd=00000000
        Internal error: Oops: 817 [#1] PREEMPT SMP ARM
        CPU: 0 PID: 3 Comm: ksoftirqd/0 Tainted: G         C   3.14.54+ #117
        task: da180b80 ti: da192000 task.ti: da192000
        PC is at memcpy+0x50/0x330
        LR is at 0xcdd92b0e
        pc : [<c029ef30>]    lr : [<cdd92b0e>]    psr: 20000193
        sp : da193ce4  ip : dd86ae26  fp : 0000b180
        r10: daf81680  r9 : 00000000  r8 : d58a01ea
        r7 : 2c0b43e4  r6 : acdfb08b  r5 : 01a271cf  r4 : 87389377
        r3 : 69469782  r2 : 00000020  r1 : daf82fe0  r0 : 00004e80
        Flags: nzCv  IRQs off  FIQs on  Mode SVC_32  ISA ARM  Segment kernel
        Control: 10c5387d  Table: 2b70804a  DAC: 00000015
        Process ksoftirqd/0 (pid: 3, stack limit = 0xda192238)
    
    Also added a check for potential !runtime condition, commonly it is
    done by PCM_RUNTIME_CHECK(substream) in the beginning, however this
    does not completely prevent from oopses in u_audio_iso_complete(),
    because the proper protection scheme must be implemented in PCM
    library functions.
    
    An example of *not fixed* oops due to substream->runtime->*
    dereference by snd_pcm_running(substream) from
    snd_pcm_period_elapsed(), where substream->runtime is gone while
    waiting the substream lock:
    
        Unable to handle kernel paging request at virtual address 6b6b6b6b
        pgd = db7e4000
        [6b6b6b6b] *pgd=00000000
        CPU: 0 PID: 193 Comm: klogd Tainted: G         C   3.14.54+ #118
        task: db5ac500 ti: db60c000 task.ti: db60c000
        PC is at snd_pcm_period_elapsed+0x48/0xd8 [snd_pcm]
        LR is at snd_pcm_period_elapsed+0x40/0xd8 [snd_pcm]
        pc : [<>]    lr : [<>]    psr: 60000193
        Flags: nZCv  IRQs off  FIQs on  Mode SVC_32  ISA ARM  Segment user
        Control: 10c5387d  Table: 2b7e404a  DAC: 00000015
        Process klogd (pid: 193, stack limit = 0xdb60c238)
        [<>] (snd_pcm_period_elapsed [snd_pcm]) from [<>] (udc_irq+0x500/0xbbc)
        [<>] (udc_irq) from [<>] (ci_irq+0x280/0x304)
        [<>] (ci_irq) from [<>] (handle_irq_event_percpu+0xa4/0x40c)
        [<>] (handle_irq_event_percpu) from [<>] (handle_irq_event+0x3c/0x5c)
        [<>] (handle_irq_event) from [<>] (handle_fasteoi_irq+0xc4/0x110)
        [<>] (handle_fasteoi_irq) from [<>] (generic_handle_irq+0x20/0x30)
        [<>] (generic_handle_irq) from [<>] (handle_IRQ+0x80/0xc0)
        [<>] (handle_IRQ) from [<>] (gic_handle_irq+0x3c/0x60)
        [<>] (gic_handle_irq) from [<>] (__irq_svc+0x44/0x78)
    
    Signed-off-by: Vladimir Zapolskiy <vladimir_zapolskiy@mentor.com>
    [erosca: W/o this patch, with minimal instrumentation [1], I can
             consistently reproduce BUG: KASAN: use-after-free [2]]
    
    [1] Instrumentation to reproduce issue [2]:
    #  diff --git a/drivers/usb/gadget/function/u_audio.c b/drivers/usb/gadget/function/u_audio.c
    #  index a72295c953bb..bd0b308024fe 100644
    #  --- a/drivers/usb/gadget/function/u_audio.c
    #  +++ b/drivers/usb/gadget/function/u_audio.c
    #  @@ -16,6 +16,7 @@
    #   #include <sound/core.h>
    #   #include <sound/pcm.h>
    #   #include <sound/pcm_params.h>
    #  +#include <linux/delay.h>
    #
    #   #include "u_audio.h"
    #
    #  @@ -147,6 +148,8 @@ static void u_audio_iso_complete(struct usb_ep *ep, struct usb_request *req)
    #
    #       spin_unlock_irqrestore(&prm->lock, flags);
    #
    #  +    udelay(500); //delay here to increase probability of parallel activities
    #  +
    #       /* Pack USB load in ALSA ring buffer */
    #       pending = prm->dma_bytes - hw_ptr;
    
    [2] After applying [1], below BUG occurs on Rcar-H3-Salvator-X board:
    ==================================================================
    BUG: KASAN: use-after-free in u_audio_iso_complete+0x24c/0x520 [u_audio]
    Read of size 8 at addr ffff8006cafcc248 by task swapper/0/0
    
    CPU: 0 PID: 0 Comm: swapper/0 Tainted: G        WC      4.14.47+ #160
    Hardware name: Renesas Salvator-X board based on r8a7795 ES2.0+ (DT)
    Call trace:
    [<ffff2000080925ac>] dump_backtrace+0x0/0x364
    [<ffff200008092924>] show_stack+0x14/0x1c
    [<ffff200008f8dbcc>] dump_stack+0x108/0x174
    [<ffff2000083c71b8>] print_address_description+0x7c/0x32c
    [<ffff2000083c78e8>] kasan_report+0x324/0x354
    [<ffff2000083c6114>] __asan_load8+0x24/0x94
    [<ffff2000021d1b34>] u_audio_iso_complete+0x24c/0x520 [u_audio]
    [<ffff20000152fe50>] usb_gadget_giveback_request+0x480/0x4d0 [udc_core]
    [<ffff200001860ab8>] usbhsg_queue_done+0x100/0x130 [renesas_usbhs]
    [<ffff20000185f814>] usbhsf_pkt_handler+0x1a4/0x298 [renesas_usbhs]
    [<ffff20000185fb38>] usbhsf_irq_ready+0x128/0x178 [renesas_usbhs]
    [<ffff200001859cc8>] usbhs_interrupt+0x440/0x490 [renesas_usbhs]
    [<ffff2000081a0288>] __handle_irq_event_percpu+0x594/0xa58
    [<ffff2000081a07d0>] handle_irq_event_percpu+0x84/0x12c
    [<ffff2000081a0928>] handle_irq_event+0xb0/0x10c
    [<ffff2000081a8384>] handle_fasteoi_irq+0x1e0/0x2ec
    [<ffff20000819e5f8>] generic_handle_irq+0x2c/0x44
    [<ffff20000819f0d0>] __handle_domain_irq+0x190/0x194
    [<ffff20000808177c>] gic_handle_irq+0x80/0xac
    Exception stack(0xffff200009e97c80 to 0xffff200009e97dc0)
    7c80: 0000000000000000 0000000000000000 0000000000000003 ffff200008179298
    7ca0: ffff20000ae1c180 dfff200000000000 0000000000000000 ffff2000081f9a88
    7cc0: ffff200009eb5960 ffff200009e97cf0 0000000000001600 ffff0400041b064b
    7ce0: 0000000000000000 0000000000000002 0000000200000001 0000000000000001
    7d00: ffff20000842197c 0000ffff958c4970 0000000000000000 ffff8006da0d5b80
    7d20: ffff8006d4678498 0000000000000000 000000126bde0a8b ffff8006d4678480
    7d40: 0000000000000000 000000126bdbea64 ffff200008fd0000 ffff8006fffff980
    7d60: 00000000495f0018 ffff200009e97dc0 ffff200008b6c4ec ffff200009e97dc0
    7d80: ffff200008b6c4f0 0000000020000145 ffff8006da0d5b80 ffff8006d4678498
    7da0: ffffffffffffffff ffff8006d4678498 ffff200009e97dc0 ffff200008b6c4f0
    [<ffff200008084034>] el1_irq+0xb4/0x12c
    [<ffff200008b6c4f0>] cpuidle_enter_state+0x818/0x844
    [<ffff200008b6c59c>] cpuidle_enter+0x18/0x20
    [<ffff20000815f2e4>] call_cpuidle+0x98/0x9c
    [<ffff20000815f674>] do_idle+0x214/0x264
    [<ffff20000815facc>] cpu_startup_entry+0x20/0x24
    [<ffff200008fb09d8>] rest_init+0x30c/0x320
    [<ffff2000095f1338>] start_kernel+0x570/0x5b0
    ---<-snip->---
    
    Fixes: 132fcb460839 ("usb: gadget: Add Audio Class 2.0 Driver")
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7d18686e87a62167fa04472c4b0ca16e77acdc7
Author: Vladimir Zapolskiy <vladimir_zapolskiy@mentor.com>
Date:   Thu Jun 21 17:22:50 2018 +0200

    usb: gadget: u_audio: remove cached period bytes value
    
    [ Upstream commit 773e53d50e227b0c03d0bb434c1636f6c49c75b2 ]
    
    Substream period size potentially can be changed in runtime, however
    this is not accounted in the data copying routine, the change replaces
    the cached value with an actual value from substream runtime.
    
    As a side effect the change also removes a potential division by zero
    in u_audio_iso_complete() function, if there is a race with
    uac_pcm_hw_free(), which sets prm->period_size to 0.
    
    Fixes: 132fcb460839 ("usb: gadget: Add Audio Class 2.0 Driver")
    Signed-off-by: Vladimir Zapolskiy <vladimir_zapolskiy@mentor.com>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42b09bece176fdbf3b8ebc459b5046901ac49be4
Author: Vladimir Zapolskiy <vladimir_zapolskiy@mentor.com>
Date:   Thu Jun 21 17:22:49 2018 +0200

    usb: gadget: u_audio: remove caching of stream buffer parameters
    
    [ Upstream commit 96afb54ece0ee903d23a7ac04ddc461413b972c4 ]
    
    There is no necessity to copy PCM stream ring buffer area and size
    properties to UAC private data structure, these values can be got
    from substream itself.
    
    The change gives more control on substream and avoid stale caching.
    
    Fixes: 132fcb460839 ("usb: gadget: Add Audio Class 2.0 Driver")
    Signed-off-by: Vladimir Zapolskiy <vladimir_zapolskiy@mentor.com>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 224c0d0894ff7c3e85add1ce02a523d7f49cfdda
Author: Joshua Frkuska <joshua_frkuska@mentor.com>
Date:   Thu Jun 21 17:22:48 2018 +0200

    usb: gadget: u_audio: update hw_ptr in iso_complete after data copied
    
    [ Upstream commit 6b37bd78d30c890e575a1bda22978d1d2a233362 ]
    
    In u_audio_iso_complete, the runtime hw_ptr is updated before the
    data is actually copied over to/from the buffer/dma area. When
    ALSA uses this hw_ptr, the data may not actually be available to
    be used. This causes trash/stale audio to play/record. This
    patch updates the hw_ptr after the data has been copied to avoid
    this.
    
    Fixes: 132fcb460839 ("usb: gadget: Add Audio Class 2.0 Driver")
    Signed-off-by: Joshua Frkuska <joshua_frkuska@mentor.com>
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc126a1e5fb832f1f5094b4d3faf297d08314dfb
Author: Eugeniu Rosca <erosca@de.adit-jv.com>
Date:   Thu Jun 21 17:22:47 2018 +0200

    usb: gadget: u_audio: fix pcm/card naming in g_audio_setup()
    
    [ Upstream commit dfa042fa310caa475667b8c38d852f14439e0b01 ]
    
    Fix below smatch (v0.5.0-4443-g69e9094e11c1) warnings:
    drivers/usb/gadget/function/u_audio.c:607 g_audio_setup() warn: strcpy() 'pcm_name' of unknown size might be too large for 'pcm->name'
    drivers/usb/gadget/function/u_audio.c:614 g_audio_setup() warn: strcpy() 'card_name' of unknown size might be too large for 'card->driver'
    drivers/usb/gadget/function/u_audio.c:615 g_audio_setup() warn: strcpy() 'card_name' of unknown size might be too large for 'card->shortname'
    
    Below commits performed a similar 's/strcpy/strlcpy/' rework:
    * v2.6.31 commit 8372d4980fbc ("ALSA: ctxfi - Fix PCM device naming")
    * v4.14 commit 003d3e70dbeb ("ALSA: ad1848: fix format string overflow warning")
    * v4.14 commit 6d8b04de87e1 ("ALSA: cs423x: fix format string overflow warning")
    
    Fixes: eb9fecb9e69b ("usb: gadget: f_uac2: split out audio core")
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa18ff7edb88d9e84390305759fdd4d2a0f81d6d
Author: Eugeniu Rosca <erosca@de.adit-jv.com>
Date:   Thu Jun 21 17:22:46 2018 +0200

    usb: gadget: f_uac2: fix error handling in afunc_bind (again)
    
    [ Upstream commit e87581fe0509020f77ebf0b7c4c1c338c6a4bcf6 ]
    
    If usb_ep_autoconfig() fails (i.e. returns a null endpoint descriptor),
    we expect afunc_bind() to fail (i.e. return a negative error code).
    
    However, due to v4.10-rc1 commit f1d3861d63a5 ("usb: gadget: f_uac2: fix
    error handling at afunc_bind"), afunc_bind() returns zero, telling the
    caller that it succeeded. This then generates NULL pointer dereference
    in below scenario on Rcar H3-ES20-Salvator-X target:
    
    rcar-gen3:/home/root# modprobe g_audio
    [  626.521155] g_audio gadget: afunc_bind:565 Error!
    [  626.526319] g_audio gadget: Linux USB Audio Gadget, version: Feb 2, 2012
    [  626.533405] g_audio gadget: g_audio ready
    rcar-gen3:/home/root#
    rcar-gen3:/home/root# modprobe -r g_audio
    [  728.256707] ==================================================================
    [  728.264293] BUG: KASAN: null-ptr-deref in u_audio_stop_capture+0x70/0x268 [u_audio]
    [  728.272244] Read of size 8 at addr 00000000000000a0 by task modprobe/2545
    [  728.279309]
    [  728.280849] CPU: 0 PID: 2545 Comm: modprobe Tainted: G        WC      4.14.47+ #152
    [  728.288778] Hardware name: Renesas Salvator-X board based on r8a7795 ES2.0+ (DT)
    [  728.296454] Call trace:
    [  728.299151] [<ffff2000080925ac>] dump_backtrace+0x0/0x364
    [  728.304808] [<ffff200008092924>] show_stack+0x14/0x1c
    [  728.310081] [<ffff200008f8d5cc>] dump_stack+0x108/0x174
    [  728.315522] [<ffff2000083c77c8>] kasan_report+0x1fc/0x354
    [  728.321134] [<ffff2000083c611c>] __asan_load8+0x24/0x94
    [  728.326600] [<ffff2000021e1618>] u_audio_stop_capture+0x70/0x268 [u_audio]
    [  728.333735] [<ffff2000021f8b7c>] afunc_disable+0x44/0x60 [usb_f_uac2]
    [  728.340503] [<ffff20000218177c>] usb_remove_function+0x9c/0x210 [libcomposite]
    [  728.348060] [<ffff200002183320>] remove_config.isra.2+0x1d8/0x218 [libcomposite]
    [  728.355788] [<ffff200002186c54>] __composite_unbind+0x104/0x1f8 [libcomposite]
    [  728.363339] [<ffff200002186d58>] composite_unbind+0x10/0x18 [libcomposite]
    [  728.370536] [<ffff20000152f158>] usb_gadget_remove_driver+0xc0/0x170 [udc_core]
    [  728.378172] [<ffff20000153154c>] usb_gadget_unregister_driver+0x1cc/0x258 [udc_core]
    [  728.386274] [<ffff200002180de8>] usb_composite_unregister+0x10/0x18 [libcomposite]
    [  728.394116] [<ffff2000021d035c>] audio_driver_exit+0x14/0x28 [g_audio]
    [  728.400878] [<ffff200008213ed4>] SyS_delete_module+0x288/0x32c
    [  728.406935] Exception stack(0xffff8006cf6c7ec0 to 0xffff8006cf6c8000)
    [  728.413624] 7ec0: 0000000006136428 0000000000000800 0000000000000000 0000ffffd706efe8
    [  728.421718] 7ee0: 0000ffffd706efe9 000000000000000a 1999999999999999 0000000000000000
    [  728.429792] 7f00: 000000000000006a 000000000042c078 0000000000000000 0000000000000005
    [  728.437870] 7f20: 0000000000000000 0000000000000000 0000000000000004 0000000000000000
    [  728.445952] 7f40: 000000000042bfc8 0000ffffbc7c8f40 0000000000000000 00000000061363c0
    [  728.454035] 7f60: 0000000006136428 0000000000000000 0000000000000000 0000000006136428
    [  728.462114] 7f80: 000000000042c000 0000ffffd7071448 000000000042c000 0000000000000000
    [  728.470190] 7fa0: 00000000061350c0 0000ffffd7070010 000000000041129c 0000ffffd7070010
    [  728.478281] 7fc0: 0000ffffbc7c8f48 0000000060000000 0000000006136428 000000000000006a
    [  728.486351] 7fe0: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
    [  728.494434] [<ffff200008084780>] el0_svc_naked+0x34/0x38
    [  728.499957] ==================================================================
    [  728.507801] Unable to handle kernel NULL pointer dereference at virtual address 000000a0
    [  728.517742] Mem abort info:
    [  728.520993]   Exception class = DABT (current EL), IL = 32 bits
    [  728.527375]   SET = 0, FnV = 0
    [  728.530731]   EA = 0, S1PTW = 0
    [  728.534361] Data abort info:
    [  728.537650]   ISV = 0, ISS = 0x00000006
    [  728.541863]   CM = 0, WnR = 0
    [  728.545167] user pgtable: 4k pages, 48-bit VAs, pgd = ffff8006c6100000
    [  728.552156] [00000000000000a0] *pgd=0000000716a8d003
    [  728.557519] , *pud=00000007116fc003
    [  728.561259] , *pmd=0000000000000000
    [  728.564985] Internal error: Oops: 96000006 [#1] PREEMPT SMP
    [  728.570815] Modules linked in:
    [  728.574023]  usb_f_uac2
    [  728.576560]  u_audio
    [  728.578827]  g_audio(-)
    [  728.581361]  libcomposite
    [  728.584071]  configfs
    [  728.586428]  aes_ce_blk
    [  728.588960]  sata_rcar
    [  728.591421]  crypto_simd
    [  728.594039]  cryptd
    [  728.596217]  libata
    [  728.598396]  aes_ce_cipher
    [  728.601188]  crc32_ce
    [  728.603542]  ghash_ce
    [  728.605896]  gf128mul
    [  728.608250]  aes_arm64
    [  728.610692]  scsi_mod
    [  728.613046]  sha2_ce
    [  728.615313]  xhci_plat_hcd
    [  728.618106]  sha256_arm64
    [  728.620811]  sha1_ce
    [  728.623077]  renesas_usbhs
    [  728.625869]  xhci_hcd
    [  728.628243]  renesas_usb3
    [  728.630948]  sha1_generic
    [  728.633670]  ravb_streaming(C)
    [  728.636814]  udc_core
    [  728.639168]  cpufreq_dt
    [  728.641697]  rcar_gen3_thermal
    [  728.644840]  usb_dmac
    [  728.647194]  pwm_rcar
    [  728.649548]  thermal_sys
    [  728.652165]  virt_dma
    [  728.654519]  mch_core(C)
    [  728.657137]  pwm_bl
    [  728.659315]  snd_soc_rcar
    [  728.662020]  snd_aloop
    [  728.664462]  snd_soc_generic_card
    [  728.667869]  snd_soc_ak4613
    [  728.670749]  ipv6
    [  728.672768]  autofs4
    [  728.675052] CPU: 0 PID: 2545 Comm: modprobe Tainted: G    B   WC      4.14.47+ #152
    [  728.682973] Hardware name: Renesas Salvator-X board based on r8a7795 ES2.0+ (DT)
    [  728.690637] task: ffff8006ced38000 task.stack: ffff8006cf6c0000
    [  728.696814] PC is at u_audio_stop_capture+0x70/0x268 [u_audio]
    [  728.702896] LR is at u_audio_stop_capture+0x70/0x268 [u_audio]
    [  728.708964] pc : [<ffff2000021e1618>] lr : [<ffff2000021e1618>] pstate: 60000145
    [  728.716620] sp : ffff8006cf6c7a50
    [  728.720154] x29: ffff8006cf6c7a50
    [  728.723760] x28: ffff8006ced38000
    [  728.727272] x27: ffff200008fd7000
    [  728.730857] x26: ffff2000021d2340
    [  728.734361] x25: 0000000000000000
    [  728.737948] x24: ffff200009e94b08
    [  728.741452] x23: 00000000000000a0
    [  728.745052] x22: 00000000000000a8
    [  728.748558] x21: 1ffff000d9ed8f7c
    [  728.752142] x20: ffff8006d671a800
    [  728.755646] x19: 0000000000000000
    [  728.759231] x18: 0000000000000000
    [  728.762736] x17: 0000ffffbc7c8f40
    [  728.766320] x16: ffff200008213c4c
    [  728.769823] x15: 0000000000000000
    [  728.773408] x14: 0720072007200720
    [  728.776912] x13: 0720072007200720
    [  728.780497] x12: ffffffffffffffff
    [  728.784001] x11: 0000000000000040
    [  728.787598] x10: 0000000000001600
    [  728.791103] x9 : ffff8006cf6c77a0
    [  728.794689] x8 : ffff8006ced39660
    [  728.798193] x7 : ffff20000811c738
    [  728.801794] x6 : 0000000000000000
    [  728.805299] x5 : dfff200000000000
    [  728.808885] x4 : ffff8006ced38000
    [  728.812390] x3 : ffff200008fb46e8
    [  728.815976] x2 : 0000000000000007
    [  728.819480] x1 : 3ba68643e7431500
    [  728.823066] x0 : 0000000000000000
    [  728.826574] Process modprobe (pid: 2545, stack limit = 0xffff8006cf6c0000)
    [  728.833704] Call trace:
    [  728.836292] Exception stack(0xffff8006cf6c7910 to 0xffff8006cf6c7a50)
    [  728.842987] 7900:                                   0000000000000000 3ba68643e7431500
    [  728.851084] 7920: 0000000000000007 ffff200008fb46e8 ffff8006ced38000 dfff200000000000
    [  728.859173] 7940: 0000000000000000 ffff20000811c738 ffff8006ced39660 ffff8006cf6c77a0
    [  728.867248] 7960: 0000000000001600 0000000000000040 ffffffffffffffff 0720072007200720
    [  728.875323] 7980: 0720072007200720 0000000000000000 ffff200008213c4c 0000ffffbc7c8f40
    [  728.883412] 79a0: 0000000000000000 0000000000000000 ffff8006d671a800 1ffff000d9ed8f7c
    [  728.891485] 79c0: 00000000000000a8 00000000000000a0 ffff200009e94b08 0000000000000000
    [  728.899561] 79e0: ffff2000021d2340 ffff200008fd7000 ffff8006ced38000 ffff8006cf6c7a50
    [  728.907636] 7a00: ffff2000021e1618 ffff8006cf6c7a50 ffff2000021e1618 0000000060000145
    [  728.915710] 7a20: 0000000000000008 0000000000000000 0000ffffffffffff 3ba68643e7431500
    [  728.923780] 7a40: ffff8006cf6c7a50 ffff2000021e1618
    [  728.928880] [<ffff2000021e1618>] u_audio_stop_capture+0x70/0x268 [u_audio]
    [  728.936032] [<ffff2000021f8b7c>] afunc_disable+0x44/0x60 [usb_f_uac2]
    [  728.942822] [<ffff20000218177c>] usb_remove_function+0x9c/0x210 [libcomposite]
    [  728.950385] [<ffff200002183320>] remove_config.isra.2+0x1d8/0x218 [libcomposite]
    [  728.958134] [<ffff200002186c54>] __composite_unbind+0x104/0x1f8 [libcomposite]
    [  728.965689] [<ffff200002186d58>] composite_unbind+0x10/0x18 [libcomposite]
    [  728.972882] [<ffff20000152f158>] usb_gadget_remove_driver+0xc0/0x170 [udc_core]
    [  728.980522] [<ffff20000153154c>] usb_gadget_unregister_driver+0x1cc/0x258 [udc_core]
    [  728.988638] [<ffff200002180de8>] usb_composite_unregister+0x10/0x18 [libcomposite]
    [  728.996472] [<ffff2000021d035c>] audio_driver_exit+0x14/0x28 [g_audio]
    [  729.003231] [<ffff200008213ed4>] SyS_delete_module+0x288/0x32c
    [  729.009278] Exception stack(0xffff8006cf6c7ec0 to 0xffff8006cf6c8000)
    [  729.015946] 7ec0: 0000000006136428 0000000000000800 0000000000000000 0000ffffd706efe8
    [  729.024022] 7ee0: 0000ffffd706efe9 000000000000000a 1999999999999999 0000000000000000
    [  729.032099] 7f00: 000000000000006a 000000000042c078 0000000000000000 0000000000000005
    [  729.040172] 7f20: 0000000000000000 0000000000000000 0000000000000004 0000000000000000
    [  729.048263] 7f40: 000000000042bfc8 0000ffffbc7c8f40 0000000000000000 00000000061363c0
    [  729.056337] 7f60: 0000000006136428 0000000000000000 0000000000000000 0000000006136428
    [  729.064411] 7f80: 000000000042c000 0000ffffd7071448 000000000042c000 0000000000000000
    [  729.072484] 7fa0: 00000000061350c0 0000ffffd7070010 000000000041129c 0000ffffd7070010
    [  729.080563] 7fc0: 0000ffffbc7c8f48 0000000060000000 0000000006136428 000000000000006a
    [  729.088636] 7fe0: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
    [  729.096733] [<ffff200008084780>] el0_svc_naked+0x34/0x38
    [  729.102259] Code: 9597d1b3 aa1703e0 9102a276 958792b9 (f9405275)
    [  729.108617] ---[ end trace 7560c5fa3d100243 ]---
    
    After this patch is applied, the issue is fixed:
    rcar-gen3:/home/root# modprobe g_audio
    [   59.217127] g_audio gadget: afunc_bind:565 Error!
    [   59.222329] g_audio ee020000.usb: failed to start g_audio: -19
    modprobe: ERROR: could not insert 'g_audio': No such device
    rcar-gen3:/home/root# modprobe -r g_audio
    rcar-gen3:/home/root#
    
    Fixes: f1d3861d63a5 ("usb: gadget: f_uac2: fix error handling at afunc_bind")
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43b058dc21cdb8908d01e526a5bb1875ec00bd81
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Wed Jun 20 11:55:08 2018 +0800

    usb: gadget: r8a66597: Fix a possible sleep-in-atomic-context bugs in r8a66597_queue()
    
    [ Upstream commit f36b507c14c4b6e634463a610294e9cb0065c8ea ]
    
    The driver may sleep in an interrupt handler.
    The function call path (from bottom to top) in Linux-4.16.7 is:
    
    [FUNC] r8a66597_queue(GFP_KERNEL)
    drivers/usb/gadget/udc/r8a66597-udc.c, 1193:
                    r8a66597_queue in get_status
    drivers/usb/gadget/udc/r8a66597-udc.c, 1301:
                    get_status in setup_packet
    drivers/usb/gadget/udc/r8a66597-udc.c, 1381:
                    setup_packet in irq_control_stage
    drivers/usb/gadget/udc/r8a66597-udc.c, 1508:
                    irq_control_stage in r8a66597_irq (interrupt handler)
    
    To fix this bug, GFP_KERNEL is replaced with GFP_ATOMIC.
    
    This bug is found by my static analysis tool (DSAC-2) and checked by
    my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f41c2d0e61859cef7a9bd91d3f2ca81c7955fda
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Wed Jun 20 11:54:53 2018 +0800

    usb: gadget: r8a66597: Fix two possible sleep-in-atomic-context bugs in init_controller()
    
    [ Upstream commit 0602088b10a7c0b4e044a810678ef93d7cc5bf48 ]
    
    The driver may sleep with holding a spinlock.
    The function call paths (from bottom to top) in Linux-4.16.7 are:
    
    [FUNC] msleep
    drivers/usb/gadget/udc/r8a66597-udc.c, 839:
                    msleep in init_controller
    drivers/usb/gadget/udc/r8a66597-udc.c, 96:
                    init_controller in r8a66597_usb_disconnect
    drivers/usb/gadget/udc/r8a66597-udc.c, 93:
                    spin_lock in r8a66597_usb_disconnect
    
    [FUNC] msleep
    drivers/usb/gadget/udc/r8a66597-udc.c, 835:
                    msleep in init_controller
    drivers/usb/gadget/udc/r8a66597-udc.c, 96:
                    init_controller in r8a66597_usb_disconnect
    drivers/usb/gadget/udc/r8a66597-udc.c, 93:
                    spin_lock in r8a66597_usb_disconnect
    
    To fix these bugs, msleep() is replaced with mdelay().
    
    This bug is found by my static analysis tool (DSAC-2) and checked by
    my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05ee6166d702e8bea50322b31886a91fc8301672
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Jul 16 12:11:35 2018 -0400

    nbd: handle unexpected replies better
    
    [ Upstream commit 8f3ea35929a0806ad1397db99a89ffee0140822a ]
    
    If the server or network is misbehaving and we get an unexpected reply
    we can sometimes miss the request not being started and wait on a
    request and never get a response, or even double complete the same
    request.  Fix this by replacing the send_complete completion with just a
    per command lock.  Add a per command cookie as well so that we can know
    if we're getting a double completion for a previous event.  Also check
    to make sure we dont have REQUEUED set as that means we raced with the
    timeout handler and need to just let the retry occur.
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ced413c5ef85cf2da775043a9480a86139eb6de7
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Jul 16 12:11:34 2018 -0400

    nbd: don't requeue the same request twice.
    
    [ Upstream commit d7d94d48a272fd7583dc3c83acb8f5ed4ef456a4 ]
    
    We can race with the snd timeout and the per-request timeout and end up
    requeuing the same request twice.  We can't use the send_complete
    completion to tell if everything is ok because we hold the tx_lock
    during send, so the timeout stuff will block waiting to mark the socket
    dead, and we could be marked complete and still requeue.  Instead add a
    flag to the socket so we know whether we've been requeued yet.
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 962ff36dac014618c60acae78db9a872abde7480
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Wed Apr 11 17:31:36 2018 +0200

    drm/imx: imx-ldb: check if channel is enabled before printing warning
    
    [ Upstream commit c80d673b91a6c81d765864e10f2b15110ee900ad ]
    
    If the second LVDS channel has been disabled in the DT when using dual-channel
    mode we should not print a warning.
    
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a43eac2d855be9f441b0c6e277bdaf878b07a370
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Wed Apr 11 17:31:35 2018 +0200

    drm/imx: imx-ldb: disable LDB on driver bind
    
    [ Upstream commit b58262396fabd43dc869b576e3defdd23b32fe94 ]
    
    The LVDS signal integrity is only guaranteed when the correct enable
    sequence (first IPU DI, then LDB) is used. If the LDB display output was
    active before the imx-drm driver is loaded (like when a bootsplash was
    active) the DI will be disabled by the full IPU reset we do when loading
    the driver. The LDB control registers are not part of the IPU range and
    thus will remain unchanged.
    
    This leads to the LDB still being active when the DI is getting enabled,
    effectively reversing the required enable sequence. Fix this by also
    disabling the LDB on driver bind.
    
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ac1a4644bb8ff4343f9424ab6b3ab6db0f86c4a
Author: Varun Prakash <varun@chelsio.com>
Date:   Wed Jul 11 22:09:52 2018 +0530

    scsi: libiscsi: fix possible NULL pointer dereference in case of TMF
    
    [ Upstream commit a17037e7d59075053b522048742a08ac9500bde8 ]
    
    In iscsi_check_tmf_restrictions() task->hdr is dereferenced to print the
    opcode, it is possible that task->hdr is NULL.
    
    There are two cases based on opcode argument:
    
    1. ISCSI_OP_SCSI_CMD - In this case alloc_pdu() is called
    after iscsi_check_tmf_restrictions()
    
    iscsi_prep_scsi_cmd_pdu() -> iscsi_check_tmf_restrictions() -> alloc_pdu().
    
    Transport drivers allocate memory for iSCSI hdr in alloc_pdu() and assign
    it to task->hdr. In case of TMF task->hdr will be NULL resulting in NULL
    pointer dereference.
    
    2. ISCSI_OP_SCSI_DATA_OUT - In this case transport driver can free the
    memory for iSCSI hdr after transmitting the pdu so task->hdr can be NULL or
    invalid.
    
    This patch fixes this issue by removing task->hdr->opcode from the printk
    statement.
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca5fc53ad40104b110c659cbf20c9aa23881264f
Author: Varun Prakash <varun@chelsio.com>
Date:   Wed Jul 11 22:03:43 2018 +0530

    scsi: target: iscsi: cxgbit: fix max iso npdu calculation
    
    [ Upstream commit 1b350ea0c2f4df9aa30426614c8eb755a8c32814 ]
    
    - rounddown CXGBIT_MAX_ISO_PAYLOAD by csk->emss before calculating
      max_iso_npdu to get max TCP payload in multiple of mss.
    
    - call cxgbit_set_digest() before cxgbit_set_iso_npdu() to set
      csk->submode, it is used in calculating number of iso pdus.
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Reviewed-by: Mike Christie <mchristi@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 384f0d9fe4ad699251ff2f2686533a9b9356132d
Author: Sean Paul <seanpaul@chromium.org>
Date:   Tue Jul 3 12:56:03 2018 -0400

    drm/bridge: adv7511: Reset registers on hotplug
    
    [ Upstream commit 5f3417569165a8ee57654217f73e0160312f409c ]
    
    The bridge loses its hw state when the cable is unplugged. If we detect
    this case in the hpd handler, reset its state.
    
    Reported-by: Rob Clark <robdclark@gmail.com>
    Tested-by: Rob Clark <robdclark@gmail.com>
    Reviewed-by: Archit Taneja <architt@codeaurora.org>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180703165648.120401-1-seanpaul@chromium.org
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cb625dd9ed6f3386dd017d088f4ebe335b5638a
Author: Bernd Edlinger <bernd.edlinger@hotmail.de>
Date:   Sun Jul 8 09:57:22 2018 +0000

    nl80211: Add a missing break in parse_station_flags
    
    [ Upstream commit 5cf3006cc81d9aa09a10aa781fc065546b12919d ]
    
    I was looking at usually suppressed gcc warnings,
    [-Wimplicit-fallthrough=] in this case:
    
    The code definitely looks like a break is missing here.
    However I am not able to test the NL80211_IFTYPE_MESH_POINT,
    nor do I actually know what might be :)
    So please use this patch with caution and only if you are
    able to do some testing.
    
    Signed-off-by: Bernd Edlinger <bernd.edlinger@hotmail.de>
    [johannes: looks obvious enough to apply as is, interesting
     though that it never seems to have been a problem]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 147b89c421d0c57781ec57888f379e1ca7026cbb
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Sun Jul 8 19:36:02 2018 -0400

    ext4: clear mmp sequence number when remounting read-only
    
    [ Upstream commit 2dca60d98e241bea686004168f85208f215fc697 ]
    
    Previously, when an MMP-protected file system is remounted read-only,
    the kmmpd thread would exit the next time it woke up (a few seconds
    later), without resetting the MMP sequence number back to
    EXT4_MMP_SEQ_CLEAN.
    
    Fix this by explicitly killing the MMP thread when the file system is
    remounted read-only.
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: Andreas Dilger <adilger@dilger.ca>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de044d4ecc65c00d683f62923bddc2a55e2b9d1a
Author: mpubbise@codeaurora.org <mpubbise@codeaurora.org>
Date:   Mon Jul 2 15:40:14 2018 +0530

    mac80211: add stations tied to AP_VLANs during hw reconfig
    
    [ Upstream commit 19103a4bfb42f320395daa5616ece3e89e759d63 ]
    
    As part of hw reconfig, only stations linked to AP interfaces are added
    back to the driver ignoring those which are tied to AP_VLAN interfaces.
    
    It is true that there could be stations tied to the AP_VLAN interface while
    serving 4addr clients or when using AP_VLAN for VLAN operations; we should
    be adding these stations back to the driver as part of hw reconfig, failing
    to do so can cause functional issues.
    
    In the case of ath10k driver, the following errors were observed.
    
    ath10k_pci : failed to install key for non-existent peer XX:XX:XX:XX:XX:XX
    Workqueue: events_freezable ieee80211_restart_work [mac80211]
    (unwind_backtrace) from (show_stack+0x10/0x14)
    (show_stack) (dump_stack+0x80/0xa0)
    (dump_stack) (warn_slowpath_common+0x68/0x8c)
    (warn_slowpath_common) (warn_slowpath_null+0x18/0x20)
    (warn_slowpath_null) (ieee80211_enable_keys+0x88/0x154 [mac80211])
    (ieee80211_enable_keys) (ieee80211_reconfig+0xc90/0x19c8 [mac80211])
    (ieee80211_reconfig]) (ieee80211_restart_work+0x8c/0xa0 [mac80211])
    (ieee80211_restart_work) (process_one_work+0x284/0x488)
    (process_one_work) (worker_thread+0x228/0x360)
    (worker_thread) (kthread+0xd8/0xec)
    (kthread) (ret_from_fork+0x14/0x24)
    
    Also while bringing down the AP VAP, WARN_ONs and errors related to peer
    removal were observed.
    
    ath10k_pci : failed to clear all peer wep keys for vdev 0: -2
    ath10k_pci : failed to disassociate station: 8c:fd:f0:0a:8c:f5 vdev 0: -2
    (unwind_backtrace) (show_stack+0x10/0x14)
    (show_stack) (dump_stack+0x80/0xa0)
    (dump_stack) (warn_slowpath_common+0x68/0x8c)
    (warn_slowpath_common) (warn_slowpath_null+0x18/0x20)
    (warn_slowpath_null) (sta_set_sinfo+0xb98/0xc9c [mac80211])
    (sta_set_sinfo [mac80211]) (__sta_info_flush+0xf0/0x134 [mac80211])
    (__sta_info_flush [mac80211]) (ieee80211_stop_ap+0xe8/0x390 [mac80211])
    (ieee80211_stop_ap [mac80211]) (__cfg80211_stop_ap+0xe0/0x3dc [cfg80211])
    (__cfg80211_stop_ap [cfg80211]) (cfg80211_stop_ap+0x30/0x44 [cfg80211])
    (cfg80211_stop_ap [cfg80211]) (genl_rcv_msg+0x274/0x30c)
    (genl_rcv_msg) (netlink_rcv_skb+0x58/0xac)
    (netlink_rcv_skb) (genl_rcv+0x20/0x34)
    (genl_rcv) (netlink_unicast+0x11c/0x204)
    (netlink_unicast) (netlink_sendmsg+0x30c/0x370)
    (netlink_sendmsg) (sock_sendmsg+0x70/0x84)
    (sock_sendmsg) (___sys_sendmsg.part.3+0x188/0x228)
    (___sys_sendmsg.part.3) (__sys_sendmsg+0x4c/0x70)
    (__sys_sendmsg) (ret_fast_syscall+0x0/0x44)
    
    These issues got fixed by adding the stations which are
    tied to AP_VLANs back to the driver.
    
    Signed-off-by: Manikanta Pubbisetty <mpubbise@codeaurora.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6f147a2d90765e68effe04c42f79875b33cd2af
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Wed Jun 27 11:49:28 2018 +0800

    esp6: fix memleak on error path in esp6_input
    
    [ Upstream commit 7284fdf39a912322ce97de2d30def3c6068a418c ]
    
    This ought to be an omission in e6194923237 ("esp: Fix memleaks on error
    paths."). The memleak on error path in esp6_input is similar to esp_input
    of esp4.
    
    Fixes: e6194923237 ("esp: Fix memleaks on error paths.")
    Fixes: 3f29770723f ("ipsec: check return value of skb_to_sgvec always")
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0118f86d21f1fdc83e5b560d761b5db0fded25ad
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Jun 25 14:00:07 2018 +0200

    xfrm: free skb if nlsk pointer is NULL
    
    [ Upstream commit 86126b77dcd551ce223e7293bb55854e3df05646 ]
    
    nlmsg_multicast() always frees the skb, so in case we cannot call
    it we must do that ourselves.
    
    Fixes: 21ee543edc0dea ("xfrm: fix race between netns cleanup and state expire notification")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d35cc7ed2cfe509520ed4ed93f91121c41f478a6
Author: Tommi Rantala <tommi.t.rantala@nokia.com>
Date:   Thu Jun 21 09:30:47 2018 +0300

    xfrm: fix missing dst_release() after policy blocking lbcast and multicast
    
    [ Upstream commit 8cc88773855f988d6a3bbf102bbd9dd9c828eb81 ]
    
    Fix missing dst_release() when local broadcast or multicast traffic is
    xfrm policy blocked.
    
    For IPv4 this results to dst leak: ip_route_output_flow() allocates
    dst_entry via __ip_route_output_key() and passes it to
    xfrm_lookup_route(). xfrm_lookup returns ERR_PTR(-EPERM) that is
    propagated. The dst that was allocated is never released.
    
    IPv4 local broadcast testcase:
     ping -b 192.168.1.255 &
     sleep 1
     ip xfrm policy add src 0.0.0.0/0 dst 192.168.1.255/32 dir out action block
    
    IPv4 multicast testcase:
     ping 224.0.0.1 &
     sleep 1
     ip xfrm policy add src 0.0.0.0/0 dst 224.0.0.1/32 dir out action block
    
    For IPv6 the missing dst_release() causes trouble e.g. when used in netns:
     ip netns add TEST
     ip netns exec TEST ip link set lo up
     ip link add dummy0 type dummy
     ip link set dev dummy0 netns TEST
     ip netns exec TEST ip addr add fd00::1111 dev dummy0
     ip netns exec TEST ip link set dummy0 up
     ip netns exec TEST ping -6 -c 5 ff02::1%dummy0 &
     sleep 1
     ip netns exec TEST ip xfrm policy add src ::/0 dst ff02::1 dir out action block
     wait
     ip netns del TEST
    
    After netns deletion we see:
    [  258.239097] unregister_netdevice: waiting for lo to become free. Usage count = 2
    [  268.279061] unregister_netdevice: waiting for lo to become free. Usage count = 2
    [  278.367018] unregister_netdevice: waiting for lo to become free. Usage count = 2
    [  288.375259] unregister_netdevice: waiting for lo to become free. Usage count = 2
    
    Fixes: ac37e2515c1a ("xfrm: release dst_orig in case of error in xfrm_lookup()")
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2adc199957f29eb92df308812396098046089dd
Author: Eyal Birger <eyal.birger@gmail.com>
Date:   Thu Jun 7 10:11:02 2018 +0300

    vti6: fix PMTU caching and reporting on xmit
    
    [ Upstream commit d6990976af7c5d8f55903bfb4289b6fb030bf754 ]
    
    When setting the skb->dst before doing the MTU check, the route PMTU
    caching and reporting is done on the new dst which is about to be
    released.
    
    Instead, PMTU handling should be done using the original dst.
    
    This is aligned with IPv4 VTI.
    
    Fixes: ccd740cbc6 ("vti6: Add pmtu handling to vti6_xmit.")
    Signed-off-by: Eyal Birger <eyal.birger@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ff4bf211f3e6b45ea4b0a61ecadda8d6ecb43c6
Author: Paulo Flabiano Smorigo <pfsmorigo@linux.vnet.ibm.com>
Date:   Mon Oct 16 20:54:19 2017 -0200

    crypto: vmx - Use skcipher for ctr fallback
    
    commit e666d4e9ceec94c0a88c94b7db31d56474da43b3 upstream.
    
    Signed-off-by: Paulo Flabiano Smorigo <pfsmorigo@linux.vnet.ibm.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
