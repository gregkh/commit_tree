commit 544ec5b08d007f184ab97abdbed87e613c8c0b83
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed May 18 17:08:36 2016 -0700

    Linux 4.4.11

commit 6ff8315a4df67bfad96cffc406f91ceb6df70cde
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 14 11:11:44 2016 -0700

    nf_conntrack: avoid kernel pointer value leak in slab name
    
    commit 31b0b385f69d8d5491a4bca288e25e63f1d945d0 upstream.
    
    The slab name ends up being visible in the directory structure under
    /sys, and even if you don't have access rights to the file you can see
    the filenames.
    
    Just use a 64-bit counter instead of the pointer to the 'net' structure
    to generate a unique name.
    
    This code will go away in 4.7 when the conntrack code moves to a single
    kmemcache, but this is the backportable simple solution to avoiding
    leaking kernel pointers to user space.
    
    Fixes: 5b3501faa874 ("netfilter: nf_conntrack: per netns nf_conntrack_cachep")
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Acked-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62b68367b74b2456ee68deafab047067a6acae67
Author: Arindam Nath <arindam.nath@amd.com>
Date:   Wed May 4 23:39:59 2016 +0530

    drm/radeon: fix DP link training issue with second 4K monitor
    
    commit 1a738347df2ee4977459a8776fe2c62196bdcb1b upstream.
    
    There is an issue observed when we hotplug a second DP
    4K monitor to the system. Sometimes, the link training
    fails for the second monitor after HPD interrupt
    generation.
    
    The issue happens when some queued or deferred transactions
    are already present on the AUX channel when we initiate
    a new transcation to (say) get DPCD or during link training.
    
    We set AUX_IGNORE_HPD_DISCON bit in the AUX_CONTROL
    register so that we can ignore any such deferred
    transactions when a new AUX transaction is initiated.
    
    Signed-off-by: Arindam Nath <arindam.nath@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bafa4fbc2b4ac51045fe7fb3de94bcd5560a56c7
Author: Imre Deak <imre.deak@intel.com>
Date:   Tue May 3 15:54:19 2016 +0300

    drm/i915/bdw: Add missing delay during L3 SQC credit programming
    
    commit d6a862fe8c48229ba342648bcd535b2404724603 upstream.
    
    BSpec requires us to wait ~100 clocks before re-enabling clock gating,
    so make sure we do this.
    
    CC: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1462280061-1457-2-git-send-email-imre.deak@intel.com
    (cherry picked from commit 48e5d68d28f00c0cadac5a830980ff3222781abb)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf12e894e6b4ae0181af83ce5f6bb5e05c744660
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Tue May 3 10:33:01 2016 +0200

    drm/i915: Bail out of pipe config compute loop on LPT
    
    commit 2700818ac9f935d8590715eecd7e8cadbca552b6 upstream.
    
    LPT is pch, so might run into the fdi bandwidth constraint (especially
    since it has only 2 lanes). But right now we just force pipe_bpp back
    to 24, resulting in a nice loop (which we bail out with a loud
    WARN_ON). Fix this.
    
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    References: https://bugs.freedesktop.org/show_bug.cgi?id=93477
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Tested-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/1462264381-7573-1-git-send-email-daniel.vetter@ffwll.ch
    (cherry picked from commit f58a1acc7e4a1f37d26124ce4c875c647fbcc61f)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 472f52f5639238f569696082e0effbfb2171ad1a
Author: Lucas Stach <dev@lynxeye.de>
Date:   Thu May 5 10:16:44 2016 -0400

    drm/radeon: fix PLL sharing on DCE6.1 (v2)
    
    commit e3c00d87845ab375f90fa6e10a5e72a3a5778cd3 upstream.
    
    On DCE6.1 PPLL2 is exclusively available to UNIPHYA, so it should not
    be taken into consideration when looking for an already enabled PLL
    to be shared with other outputs.
    
    This fixes the broken VGA port (TRAVIS DP->VGA bridge) on my Richland
    based laptop, where the internal display is connected to UNIPHYA through
    a TRAVIS DP->LVDS bridge.
    
    Bug:
    https://bugs.freedesktop.org/show_bug.cgi?id=78987
    
    v2: agd: add check in radeon_get_shared_nondp_ppll as well, drop
        extra parameter.
    
    Signed-off-by: Lucas Stach <dev@lynxeye.de>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9df2dc6cf4adb711545f48001b34f35fd3bb79ef
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Wed May 11 13:09:34 2016 -0300

    Revert "[media] videobuf2-v4l2: Verify planes array in buffer dequeueing"
    
    commit 93f0750dcdaed083d6209b01e952e98ca730db66 upstream.
    
    This patch causes a Kernel panic when called on a DVB driver.
    
    This was also reported by David R <david@unsolicited.net>:
    
    May  7 14:47:35 server kernel: [  501.247123] BUG: unable to handle kernel NULL pointer dereference at 0000000000000004
    May  7 14:47:35 server kernel: [  501.247239] IP: [<ffffffffa0222c71>] __verify_planes_array.isra.3+0x1/0x80 [videobuf2_v4l2]
    May  7 14:47:35 server kernel: [  501.247354] PGD cae6f067 PUD ca99c067 PMD 0
    May  7 14:47:35 server kernel: [  501.247426] Oops: 0000 [#1] SMP
    May  7 14:47:35 server kernel: [  501.247482] Modules linked in: xfs tun xt_connmark xt_TCPMSS xt_tcpmss xt_owner xt_REDIRECT nf_nat_redirect xt_nat ipt_MASQUERADE nf_nat_masquerade_ipv4 ts_kmp ts_bm xt_string ipt_REJECT nf_reject_ipv4 xt_recent xt_conntrack xt_multiport xt_pkttype xt_tcpudp xt_mark nf_log_ipv4 nf_log_common xt_LOG xt_limit iptable_mangle iptable_nat nf_conntrack_ipv4 nf_defrag_ipv4 nf_nat_ipv4 nf_nat nf_conntrack iptable_filter ip_tables ip6table_filter ip6_tables x_tables pppoe pppox dm_crypt ts2020 regmap_i2c ds3000 cx88_dvb dvb_pll cx88_vp3054_i2c mt352 videobuf2_dvb cx8800 cx8802 cx88xx pl2303 tveeprom videobuf2_dma_sg ppdev videobuf2_memops videobuf2_v4l2 videobuf2_core dvb_usb_digitv snd_hda_codec_via snd_hda_codec_hdmi snd_hda_codec_generic radeon dvb_usb snd_hda_intel amd64_edac_mod serio_raw snd_hda_codec edac_core fbcon k10temp bitblit softcursor snd_hda_core font snd_pcm_oss i2c_piix4 snd_mixer_oss tileblit drm_kms_helper syscopyarea snd_pcm snd_seq_dummy sysfillrect snd_seq_oss sysimgblt fb_sys_fops ttm snd_seq_midi r8169 snd_rawmidi drm snd_seq_midi_event e1000e snd_seq snd_seq_device snd_timer snd ptp pps_core i2c_algo_bit soundcore parport_pc ohci_pci shpchp tpm_tis tpm nfsd auth_rpcgss oid_registry hwmon_vid exportfs nfs_acl mii nfs bonding lockd grace lp sunrpc parport
    May  7 14:47:35 server kernel: [  501.249564] CPU: 1 PID: 6889 Comm: vb2-cx88[0] Not tainted 4.5.3 #3
    May  7 14:47:35 server kernel: [  501.249644] Hardware name: System manufacturer System Product Name/M4A785TD-V EVO, BIOS 0211    07/08/2009
    May  7 14:47:35 server kernel: [  501.249767] task: ffff8800aebf3600 ti: ffff8801e07a0000 task.ti: ffff8801e07a0000
    May  7 14:47:35 server kernel: [  501.249861] RIP: 0010:[<ffffffffa0222c71>]  [<ffffffffa0222c71>] __verify_planes_array.isra.3+0x1/0x80 [videobuf2_v4l2]
    May  7 14:47:35 server kernel: [  501.250002] RSP: 0018:ffff8801e07a3de8  EFLAGS: 00010086
    May  7 14:47:35 server kernel: [  501.250071] RAX: 0000000000000283 RBX: ffff880210dc5000 RCX: 0000000000000283
    May  7 14:47:35 server kernel: [  501.250161] RDX: ffffffffa0222cf0 RSI: 0000000000000000 RDI: ffff880210dc5014
    May  7 14:47:35 server kernel: [  501.250251] RBP: ffff8801e07a3df8 R08: ffff8801e07a0000 R09: 0000000000000000
    May  7 14:47:35 server kernel: [  501.250348] R10: 0000000000000000 R11: 0000000000000001 R12: ffff8800cda2a9d8
    May  7 14:47:35 server kernel: [  501.250438] R13: ffff880210dc51b8 R14: 0000000000000000 R15: ffff8800cda2a828
    May  7 14:47:35 server kernel: [  501.250528] FS:  00007f5b77fff700(0000) GS:ffff88021fc40000(0000) knlGS:00000000adaffb40
    May  7 14:47:35 server kernel: [  501.250631] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
    May  7 14:47:35 server kernel: [  501.250704] CR2: 0000000000000004 CR3: 00000000ca19d000 CR4: 00000000000006e0
    May  7 14:47:35 server kernel: [  501.250794] Stack:
    May  7 14:47:35 server kernel: [  501.250822]  ffff8801e07a3df8 ffffffffa0222cfd ffff8801e07a3e70 ffffffffa0236beb
    May  7 14:47:35 server kernel: [  501.250937]  0000000000000283 ffff8801e07a3e94 0000000000000000 0000000000000000
    May  7 14:47:35 server kernel: [  501.251051]  ffff8800aebf3600 ffffffff8108d8e0 ffff8801e07a3e38 ffff8801e07a3e38
    May  7 14:47:35 server kernel: [  501.251165] Call Trace:
    May  7 14:47:35 server kernel: [  501.251200]  [<ffffffffa0222cfd>] ? __verify_planes_array_core+0xd/0x10 [videobuf2_v4l2]
    May  7 14:47:35 server kernel: [  501.251306]  [<ffffffffa0236beb>] vb2_core_dqbuf+0x2eb/0x4c0 [videobuf2_core]
    May  7 14:47:35 server kernel: [  501.251398]  [<ffffffff8108d8e0>] ? prepare_to_wait_event+0x100/0x100
    May  7 14:47:35 server kernel: [  501.251482]  [<ffffffffa023855b>] vb2_thread+0x1cb/0x220 [videobuf2_core]
    May  7 14:47:35 server kernel: [  501.251569]  [<ffffffffa0238390>] ? vb2_core_qbuf+0x230/0x230 [videobuf2_core]
    May  7 14:47:35 server kernel: [  501.251662]  [<ffffffffa0238390>] ? vb2_core_qbuf+0x230/0x230 [videobuf2_core]
    May  7 14:47:35 server kernel: [  501.255982]  [<ffffffff8106f984>] kthread+0xc4/0xe0
    May  7 14:47:35 server kernel: [  501.260292]  [<ffffffff8106f8c0>] ? kthread_park+0x50/0x50
    May  7 14:47:35 server kernel: [  501.264615]  [<ffffffff81697a5f>] ret_from_fork+0x3f/0x70
    May  7 14:47:35 server kernel: [  501.268962]  [<ffffffff8106f8c0>] ? kthread_park+0x50/0x50
    May  7 14:47:35 server kernel: [  501.273216] Code: 0d 01 74 16 48 8b 46 28 48 8b 56 30 48 89 87 d0 01 00 00 48 89 97 d8 01 00 00 5d c3 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 55 <8b> 46 04 48 89 e5 8d 50 f7 31 c0 83 fa 01 76 02 5d c3 48 83 7e
    May  7 14:47:35 server kernel: [  501.282146] RIP  [<ffffffffa0222c71>] __verify_planes_array.isra.3+0x1/0x80 [videobuf2_v4l2]
    May  7 14:47:35 server kernel: [  501.286391]  RSP <ffff8801e07a3de8>
    May  7 14:47:35 server kernel: [  501.290619] CR2: 0000000000000004
    May  7 14:47:35 server kernel: [  501.294786] ---[ end trace b2b354153ccad110 ]---
    
    This reverts commit 2c1f6951a8a82e6de0d82b1158b5e493fc6c54ab.
    
    Cc: Sakari Ailus <sakari.ailus@linux.intel.com>
    Cc: Hans Verkuil <hans.verkuil@cisco.com>
    Fixes: 2c1f6951a8a8 ("[media] videobuf2-v4l2: Verify planes array in buffer dequeueing")
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1abbf8044aa09aaa2c0810942a853bbf404f4198
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Mon May 9 09:31:47 2016 -0700

    Input: max8997-haptic - fix NULL pointer dereference
    
    commit 6ae645d5fa385f3787bf1723639cd907fe5865e7 upstream.
    
    NULL pointer derefence happens when booting with DTB because the
    platform data for haptic device is not set in supplied data from parent
    MFD device.
    
    The MFD device creates only platform data (from Device Tree) for itself,
    not for haptic child.
    
    Unable to handle kernel NULL pointer dereference at virtual address 0000009c
    pgd = c0004000
            [0000009c] *pgd=00000000
            Internal error: Oops: 5 [#1] PREEMPT SMP ARM
            (max8997_haptic_probe) from [<c03f9cec>] (platform_drv_probe+0x4c/0xb0)
            (platform_drv_probe) from [<c03f8440>] (driver_probe_device+0x214/0x2c0)
            (driver_probe_device) from [<c03f8598>] (__driver_attach+0xac/0xb0)
            (__driver_attach) from [<c03f67ac>] (bus_for_each_dev+0x68/0x9c)
            (bus_for_each_dev) from [<c03f7a38>] (bus_add_driver+0x1a0/0x218)
            (bus_add_driver) from [<c03f8db0>] (driver_register+0x78/0xf8)
            (driver_register) from [<c0101774>] (do_one_initcall+0x90/0x1d8)
            (do_one_initcall) from [<c0a00dbc>] (kernel_init_freeable+0x15c/0x1fc)
            (kernel_init_freeable) from [<c06bb5b4>] (kernel_init+0x8/0x114)
            (kernel_init) from [<c0107938>] (ret_from_fork+0x14/0x3c)
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Fixes: 104594b01ce7 ("Input: add driver support for MAX8997-haptic")
    [k.kozlowski: Write commit message, add CC-stable]
    Signed-off-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 007796c01f0b293c68585397211af2b390bf126d
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu May 5 16:25:35 2016 -0400

    get_rock_ridge_filename(): handle malformed NM entries
    
    commit 99d825822eade8d827a1817357cbf3f889a552d6 upstream.
    
    Payloads of NM entries are not supposed to contain NUL.  When we run
    into such, only the part prior to the first NUL goes into the
    concatenation (i.e. the directory entry name being encoded by a bunch
    of NM entries).  We do stop when the amount collected so far + the
    claimed amount in the current NM entry exceed 254.  So far, so good,
    but what we return as the total length is the sum of *claimed*
    sizes, not the actual amount collected.  And that can grow pretty
    large - not unlimited, since you'd need to put CE entries in
    between to be able to get more than the maximum that could be
    contained in one isofs directory entry / continuation chunk and
    we are stop once we'd encountered 32 CEs, but you can get about 8Kb
    easily.  And that's what will be passed to readdir callback as the
    name length.  8Kb __copy_to_user() from a buffer allocated by
    __get_free_page()
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35eb30c213ab718d1c66d44bcfda524184356250
Author: Steven Rostedt <rostedt@goodmis.org>
Date:   Wed May 11 15:09:36 2016 -0400

    tools lib traceevent: Do not reassign parg after collapse_tree()
    
    commit 106b816cb46ebd87408b4ed99a2e16203114daa6 upstream.
    
    At the end of process_filter(), collapse_tree() was changed to update
    the parg parameter, but the reassignment after the call wasn't removed.
    
    What happens is that the "current_op" gets modified and freed and parg
    is assigned to the new allocated argument. But after the call to
    collapse_tree(), parg is assigned again to the just freed "current_op",
    and this causes the tool to crash.
    
    The current_op variable must also be assigned to NULL in case of error,
    otherwise it will cause it to be free()ed twice.
    
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Fixes: 42d6194d133c ("tools lib traceevent: Refactor process_filter()")
    Link: http://lkml.kernel.org/r/20160511150936.678c18a1@gandalf.local.home
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c127a3e21daa77e437828728d40084aa428415c
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Wed Apr 27 10:48:52 2016 +0200

    qla1280: Don't allocate 512kb of host tags
    
    commit 2bcbc81421c511ef117cadcf0bee9c4340e68db0 upstream.
    
    The qla1280 driver sets the scsi_host_template's can_queue field to 0xfffff
    which results in an allocation failure when allocating the block layer tags
    for the driver's queues. This was introduced with the change for host wide
    tags in commit 64d513ac31b - "scsi: use host wide tags by default".
    
    Reduce can_queue to MAX_OUTSTANDING_COMMANDS (512) to solve the allocation
    error.
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Fixes: 64d513ac31b - "scsi: use host wide tags by default"
    Cc: Laura Abbott <labbott@redhat.com>
    Cc: Michael Reed <mdr@sgi.com>
    Reviewed-by: Laurence Oberman <loberman@redhat.com>
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: James Bottomley <jejb@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4549fc712830400a3af34292ffdaa025f7e0c36e
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Wed Apr 27 01:11:55 2016 -0400

    atomic_open(): fix the handling of create_error
    
    commit 10c64cea04d3c75c306b3f990586ffb343b63287 upstream.
    
    * if we have a hashed negative dentry and either CREAT|EXCL on
    r/o filesystem, or CREAT|TRUNC on r/o filesystem, or CREAT|EXCL
    with failing may_o_create(), we should fail with EROFS or the
    error may_o_create() has returned, but not ENOENT.  Which is what
    the current code ends up returning.
    
    * if we have CREAT|TRUNC hitting a regular file on a read-only
    filesystem, we can't fail with EROFS here.  At the very least,
    not until we'd done follow_managed() - we might have a writable
    file (or a device, for that matter) bound on top of that one.
    Moreover, the code downstream will see that O_TRUNC and attempt
    to grab the write access (*after* following possible mount), so
    if we really should fail with EROFS, it will happen.  No need
    to do that inside atomic_open().
    
    The real logics is much simpler than what the current code is
    trying to do - if we decided to go for simple lookup, ended
    up with a negative dentry *and* had create_error set, fail with
    create_error.  No matter whether we'd got that negative dentry
    from lookup_real() or had found it in dcache.
    
    Acked-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b657027854182f708d74424998fe95624f7c69c4
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Apr 27 15:59:27 2016 +0200

    regulator: axp20x: Fix axp22x ldo_io voltage ranges
    
    commit a2262e5a12e05389ab4c7fc5cf60016b041dd8dc upstream.
    
    The minium voltage of 1800mV is a copy and paste error from the axp20x
    regulator info. The correct minimum voltage for the ldo_io regulators
    on the axp22x is 700mV.
    
    Fixes: 1b82b4e4f954 ("regulator: axp20x: Add support for AXP22X regulators")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc2d8c98f754993f0c66d373672418a503e6e299
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Mon Mar 28 13:09:56 2016 +0900

    regulator: s2mps11: Fix invalid selector mask and voltages for buck9
    
    commit 3b672623079bb3e5685b8549e514f2dfaa564406 upstream.
    
    The buck9 regulator of S2MPS11 PMIC had incorrect vsel_mask (0xff
    instead of 0x1f) thus reading entire register as buck9's voltage. This
    effectively caused regulator core to interpret values as higher voltages
    than they were and then to set real voltage much lower than intended.
    
    The buck9 provides power to other regulators, including LDO13
    and LDO19 which supply the MMC2 (SD card). On Odroid XU3/XU4 the lower
    voltage caused SD card detection errors on Odroid XU3/XU4:
            mmc1: card never left busy state
            mmc1: error -110 whilst initialising SD card
    
    During driver probe the regulator core was checking whether initial
    voltage matches the constraints. With incorrect vsel_mask of 0xff and
    default value of 0x50, the core interpreted this as 5 V which is outside
    of constraints (3-3.775 V). Then the regulator core was adjusting the
    voltage to match the constraints. With incorrect vsel_mask this new
    voltage mapped to a vere low voltage in the driver.
    
    Signed-off-by: Krzysztof Kozlowski <k.kozlowski@samsung.com>
    Reviewed-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Tested-by: Javier Martinez Canillas <javier@osg.samsung.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf73d8ad76e4555a45ee399887b7c0361354d10f
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Wed May 11 17:55:18 2016 +0800

    workqueue: fix rebind bound workers warning
    
    commit f7c17d26f43d5cc1b7a6b896cd2fa24a079739b9 upstream.
    
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 16 at kernel/workqueue.c:4559 rebind_workers+0x1c0/0x1d0
    Modules linked in:
    CPU: 0 PID: 16 Comm: cpuhp/0 Not tainted 4.6.0-rc4+ #31
    Hardware name: IBM IBM System x3550 M4 Server -[7914IUW]-/00Y8603, BIOS -[D7E128FUS-1.40]- 07/23/2013
     0000000000000000 ffff881037babb58 ffffffff8139d885 0000000000000010
     0000000000000000 0000000000000000 0000000000000000 ffff881037babba8
     ffffffff8108505d ffff881037ba0000 000011cf3e7d6e60 0000000000000046
    Call Trace:
     dump_stack+0x89/0xd4
     __warn+0xfd/0x120
     warn_slowpath_null+0x1d/0x20
     rebind_workers+0x1c0/0x1d0
     workqueue_cpu_up_callback+0xf5/0x1d0
     notifier_call_chain+0x64/0x90
     ? trace_hardirqs_on_caller+0xf2/0x220
     ? notify_prepare+0x80/0x80
     __raw_notifier_call_chain+0xe/0x10
     __cpu_notify+0x35/0x50
     notify_down_prepare+0x5e/0x80
     ? notify_prepare+0x80/0x80
     cpuhp_invoke_callback+0x73/0x330
     ? __schedule+0x33e/0x8a0
     cpuhp_down_callbacks+0x51/0xc0
     cpuhp_thread_fun+0xc1/0xf0
     smpboot_thread_fn+0x159/0x2a0
     ? smpboot_create_threads+0x80/0x80
     kthread+0xef/0x110
     ? wait_for_completion+0xf0/0x120
     ? schedule_tail+0x35/0xf0
     ret_from_fork+0x22/0x50
     ? __init_kthread_worker+0x70/0x70
    ---[ end trace eb12ae47d2382d8f ]---
    notify_down_prepare: attempt to take down CPU 0 failed
    
    This bug can be reproduced by below config w/ nohz_full= all cpus:
    
    CONFIG_BOOTPARAM_HOTPLUG_CPU0=y
    CONFIG_DEBUG_HOTPLUG_CPU0=y
    CONFIG_NO_HZ_FULL=y
    
    As Thomas pointed out:
    
    | If a down prepare callback fails, then DOWN_FAILED is invoked for all
    | callbacks which have successfully executed DOWN_PREPARE.
    |
    | But, workqueue has actually two notifiers. One which handles
    | UP/DOWN_FAILED/ONLINE and one which handles DOWN_PREPARE.
    |
    | Now look at the priorities of those callbacks:
    |
    | CPU_PRI_WORKQUEUE_UP        = 5
    | CPU_PRI_WORKQUEUE_DOWN      = -5
    |
    | So the call order on DOWN_PREPARE is:
    |
    | CB 1
    | CB ...
    | CB workqueue_up() -> Ignores DOWN_PREPARE
    | CB ...
    | CB X ---> Fails
    |
    | So we call up to CB X with DOWN_FAILED
    |
    | CB 1
    | CB ...
    | CB workqueue_up() -> Handles DOWN_FAILED
    | CB ...
    | CB X-1
    |
    | So the problem is that the workqueue stuff handles DOWN_FAILED in the up
    | callback, while it should do it in the down callback. Which is not a good idea
    | either because it wants to be called early on rollback...
    |
    | Brilliant stuff, isn't it? The hotplug rework will solve this problem because
    | the callbacks become symetric, but for the existing mess, we need some
    | workaround in the workqueue code.
    
    The boot CPU handles housekeeping duty(unbound timers, workqueues,
    timekeeping, ...) on behalf of full dynticks CPUs. It must remain
    online when nohz full is enabled. There is a priority set to every
    notifier_blocks:
    
    workqueue_cpu_up > tick_nohz_cpu_down > workqueue_cpu_down
    
    So tick_nohz_cpu_down callback failed when down prepare cpu 0, and
    notifier_blocks behind tick_nohz_cpu_down will not be called any
    more, which leads to workers are actually not unbound. Then hotplug
    state machine will fallback to undo and online cpu 0 again. Workers
    will be rebound unconditionally even if they are not unbound and
    trigger the warning in this progress.
    
    This patch fix it by catching !DISASSOCIATED to avoid rebind bound
    workers.
    
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Lai Jiangshan <jiangshanlai@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Frédéric Weisbecker <fweisbec@gmail.com>
    Suggested-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b66cb8c5137da3dda2f32b2bcc69d3937f6d4899
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Wed May 11 11:00:02 2016 +0200

    ARM: dts: at91: sam9x5: Fix the memory range assigned to the PMC
    
    commit aab0a4c83ceb344d2327194bf354820e50607af6 upstream.
    
    The memory range assigned to the PMC (Power Management Controller) was
    not including the PMC_PCR register which are used to control peripheral
    clocks.
    
    This was working fine thanks to the page granularity of ioremap(), but
    started to fail when we switched to syscon/regmap, because regmap is
    making sure that all accesses are falling into the reserved range.
    
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Reported-by: Richard Genoud <richard.genoud@gmail.com>
    Tested-by: Richard Genoud <richard.genoud@gmail.com>
    Fixes: 863a81c3be1d ("clk: at91: make use of syscon to share PMC registers in several drivers")
    Signed-off-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e5bb3c5417fd98c8966807dc07cc1b687da97c4
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed May 11 01:16:37 2016 +0200

    vfs: rename: check backing inode being equal
    
    commit 9409e22acdfc9153f88d9b1ed2bd2a5b34d2d3ca upstream.
    
    If a file is renamed to a hardlink of itself POSIX specifies that rename(2)
    should do nothing and return success.
    
    This condition is checked in vfs_rename().  However it won't detect hard
    links on overlayfs where these are given separate inodes on the overlayfs
    layer.
    
    Overlayfs itself detects this condition and returns success without doing
    anything, but then vfs_rename() will proceed as if this was a successful
    rename (detach_mounts(), d_move()).
    
    The correct thing to do is to detect this condition before even calling
    into overlayfs.  This patch does this by calling vfs_select_inode() to get
    the underlying inodes.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0dac61d2454b392dbdb4ad565f9dc3dc76fce96
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Wed May 11 01:16:37 2016 +0200

    vfs: add vfs_select_inode() helper
    
    commit 54d5ca871e72f2bb172ec9323497f01cd5091ec7 upstream.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e54c41be42cd77cf11817bc50f91933cda3903d9
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Tue May 10 16:18:33 2016 +0300

    perf/core: Disable the event on a truncated AUX record
    
    commit 9f448cd3cbcec8995935e60b27802ae56aac8cc0 upstream.
    
    When the PMU driver reports a truncated AUX record, it effectively means
    that there is no more usable room in the event's AUX buffer (even though
    there may still be some room, so that perf_aux_output_begin() doesn't take
    action). At this point the consumer still has to be woken up and the event
    has to be disabled, otherwise the event will just keep spinning between
    perf_aux_output_begin() and perf_aux_output_end() until its context gets
    unscheduled.
    
    Again, for cpu-wide events this means never, so once in this condition,
    they will be forever losing data.
    
    Fix this by disabling the event and waking up the consumer in case of a
    truncated AUX record.
    
    Reported-by: Markus Metzger <markus.t.metzger@intel.com>
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Arnaldo Carvalho de Melo <acme@infradead.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Cc: vince@deater.net
    Link: http://lkml.kernel.org/r/1462886313-13660-3-git-send-email-alexander.shishkin@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e7e3f54cae7a6ea567c09d18c35bcc468b564c3
Author: Jack Pham <jackp@codeaurora.org>
Date:   Thu Apr 14 23:37:26 2016 -0700

    regmap: spmi: Fix regmap_spmi_ext_read in multi-byte case
    
    commit dec8e8f6e6504aa3496c0f7cc10c756bb0e10f44 upstream.
    
    Specifically for the case of reads that use the Extended Register
    Read Long command, a multi-byte read operation is broken up into
    8-byte chunks.  However the call to spmi_ext_register_readl() is
    incorrectly passing 'val_size', which if greater than 8 will
    always fail.  The argument should instead be 'len'.
    
    Fixes: c9afbb05a9ff ("regmap: spmi: support base and extended register spaces")
    Signed-off-by: Jack Pham <jackp@codeaurora.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fba064f789e053be80f1ee38c70abde71f584e2
Author: Ludovic Desroches <ludovic.desroches@atmel.com>
Date:   Tue Apr 19 16:03:45 2016 +0200

    pinctrl: at91-pio4: fix pull-up/down logic
    
    commit 5305a7b7e860bb40ab226bc7d58019416073948a upstream.
    
    The default configuration of a pin is often with a value in the
    pull-up/down field at chip reset. So, even if the internal logic of the
    controller prevents writing a configuration with pull-up and pull-down at
    the same time, we must ensure explicitly this condition before writing the
    register.
    
    This was leading to a pull-down condition not taken into account for
    instance.
    
    Signed-off-by: Ludovic Desroches <ludovic.desroches@atmel.com>
    Fixes: 776180848b57 ("pinctrl: introduce driver for Atmel PIO4 controller")
    Acked-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@atmel.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1441dcbdcbe529fd7f0db6fd95b4bc9d867e04bb
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Tue Apr 12 12:58:14 2016 +0100

    spi: spi-ti-qspi: Handle truncated frames properly
    
    commit 1ff7760ff66b98ef244bf0e5e2bd5310651205ad upstream.
    
    We clamp frame_len_words to a maximum of 4096, but do not actually
    limit the number of words written or read through the DATA registers
    or the length added to spi_message::actual_length.  This results in
    silent data corruption for commands longer than this maximum.
    
    Recalculate the length of each transfer, taking frame_len_words into
    account.  Use this length in qspi_{read,write}_msg(), and to increment
    spi_message::actual_length.
    
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 444189274bd802692e3e9334e23c1d9348ea87f6
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Tue Apr 12 12:56:25 2016 +0100

    spi: spi-ti-qspi: Fix FLEN and WLEN settings if bits_per_word is overridden
    
    commit ea1b60fb085839a9544cb3a0069992991beabb7f upstream.
    
    Each transfer can specify 8, 16 or 32 bits per word independently of
    the default for the device being addressed.  However, currently we
    calculate the number of words in the frame assuming that the word size
    is the device default.
    
    If multiple transfers in the same message have differing
    bits_per_word, we bitwise-or the different values in the WLEN register
    field.
    
    Fix both of these.  Also rename 'frame_length' to 'frame_len_words' to
    make clear that it's not a byte count like spi_message::frame_length.
    
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca100af95931ebf2610b47ff2c311fe2c5e43495
Author: Jarkko Nikula <jarkko.nikula@linux.intel.com>
Date:   Tue Apr 26 10:08:26 2016 +0300

    spi: pxa2xx: Do not detect number of enabled chip selects on Intel SPT
    
    commit 66ec246eb9982e7eb8e15e1fc55f543230310dd0 upstream.
    
    Certain Intel Sunrisepoint PCH variants report zero chip selects in SPI
    capabilities register even they have one per port. Detection in
    pxa2xx_spi_probe() sets master->num_chipselect to 0 leading to -EINVAL
    from spi_register_master() where chip select count is validated.
    
    Fix this by not using SPI capabilities register on Sunrisepoint. They don't
    have more than one chip select so use the default value 1 instead of
    detection.
    
    Fixes: 8b136baa5892 ("spi: pxa2xx: Detect number of enabled Intel LPSS SPI chip select signals")
    Signed-off-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90204cbb4890422facac52ed197b169eb1f26c9f
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue May 10 10:24:02 2016 +0200

    ALSA: hda - Fix broken reconfig
    
    commit addacd801e1638f41d659cb53b9b73fc14322cb1 upstream.
    
    The HD-audio reconfig function got broken in the recent kernels,
    typically resulting in a failure like:
      snd_hda_intel 0000:00:1b.0: control 3:0:0:Playback Channel Map:0 is already present
    
    This is because of the code restructuring to move the PCM and control
    instantiation into the codec drive probe, by the commit [bcd96557bd0a:
    ALSA: hda - Build PCMs and controls at codec driver probe].  Although
    the commit above removed the calls of snd_hda_codec_build_pcms() and
    *_build_controls() at the controller driver probe, the similar calls
    in the reconfig were still left forgotten.  This caused the
    conflicting and duplicated PCMs and controls.
    
    The fix is trivial: just remove these superfluous calls from
    reconfig_codec().
    
    Fixes: bcd96557bd0a ('ALSA: hda - Build PCMs and controls at codec driver probe')
    Reported-by: Jochen Henneberg <jh@henneberg-systemdesign.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28ff35e454b4e2688eb0456b0981d6003a19d122
Author: Kaho Ng <ngkaho1234@gmail.com>
Date:   Mon May 9 00:27:49 2016 +0800

    ALSA: hda - Fix white noise on Asus UX501VW headset
    
    commit 2da2dc9ead232f25601404335cca13c0f722d41b upstream.
    
    For reducing the noise from the headset output on ASUS UX501VW,
    call the existing fixup, alc_fixup_headset_mode_alc668(), additionally.
    
    Thread: https://bbs.archlinux.org/viewtopic.php?id=209554
    
    Signed-off-by: Kaho Ng <ngkaho1234@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28c56446f563af16707e7945ce88f143f8fd6285
Author: Yura Pakhuchiy <pakhuchiy@gmail.com>
Date:   Sat May 7 23:53:36 2016 +0700

    ALSA: hda - Fix subwoofer pin on ASUS N751 and N551
    
    commit 3231e2053eaeee70bdfb216a78a30f11e88e2243 upstream.
    
    Subwoofer does not work out of the box on ASUS N751/N551 laptops. This
    patch fixes it. Patch tested on N751 laptop. N551 part is not tested,
    but according to [1] and [2] this laptop requires similar changes, so I
    included them in the patch.
    
    1. https://github.com/honsiorovskyi/asus-n551-hda-fix
    2. https://bugs.launchpad.net/ubuntu/+source/alsa-tools/+bug/1405691
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=117781
    Signed-off-by: Yura Pakhuchiy <pakhuchiy@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e8b58b0fa1c7f2da95307ab3fdf5704ca3f11db
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed May 11 17:48:00 2016 +0200

    ALSA: usb-audio: Yet another Phoneix Audio device quirk
    
    commit 84add303ef950b8d85f54bc2248c2bc73467c329 upstream.
    
    Phoenix Audio has yet another device with another id (even a different
    vendor id, 0556:0014) that requires the same quirk for the sample
    rate.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=110221
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a5db188f3151be7d10c01c29deb6867b8bb2925
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Apr 29 11:20:15 2016 +0200

    ALSA: usb-audio: Quirk for yet another Phoenix Audio devices (v2)
    
    commit 2d2c038a9999f423e820d89db2b5d7774b67ba49 upstream.
    
    Phoenix Audio MT202pcs (1de7:0114) and MT202exe (1de7:0013) need the
    same workaround as TMX320 for avoiding the firmware bug.  It fixes the
    frequent error about the sample rate inquiries and the slow device
    probe as consequence.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=117321
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c712000ba78d26f46d16fcc8ac3a9d827ddb242
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Thu May 5 16:42:49 2016 +0800

    crypto: testmgr - Use kmalloc memory for RSA input
    
    commit df27b26f04ed388ff4cc2b5d8cfdb5d97678816f upstream.
    
    As akcipher uses an SG interface, you must not use vmalloc memory
    as input for it.  This patch fixes testmgr to copy the vmalloc
    test vectors to kmalloc memory before running the test.
    
    This patch also removes a superfluous sg_virt call in do_test_rsa.
    
    Reported-by: Anatoly Pugachev <matorola@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cbc5f6ed2722a65b75de22fe2206471f093b6c3
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Wed May 4 17:52:56 2016 +0800

    crypto: hash - Fix page length clamping in hash walk
    
    commit 13f4bb78cf6a312bbdec367ba3da044b09bf0e29 upstream.
    
    The crypto hash walk code is broken when supplied with an offset
    greater than or equal to PAGE_SIZE.  This patch fixes it by adjusting
    walk->pg and walk->offset when this happens.
    
    Reported-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6f1519425705094323912e55d8d6e174775b9caf
Author: Tadeusz Struk <tadeusz.struk@intel.com>
Date:   Mon Apr 25 07:32:19 2016 -0700

    crypto: qat - fix invalid pf2vf_resp_wq logic
    
    commit 9e209fcfb804da262e38e5cd2e680c47a41f0f95 upstream.
    
    The pf2vf_resp_wq is a global so it has to be created at init
    and destroyed at exit, instead of per device.
    
    Tested-by: Suresh Marikkannu <sureshx.marikkannu@intel.com>
    Signed-off-by: Tadeusz Struk <tadeusz.struk@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce1bc448bac01edfccdc26d8318cfd39aa09e6e0
Author: Gerald Schaefer <gerald.schaefer@de.ibm.com>
Date:   Fri Apr 15 16:38:40 2016 +0200

    s390/mm: fix asce_bits handling with dynamic pagetable levels
    
    commit 723cacbd9dc79582e562c123a0bacf8bfc69e72a upstream.
    
    There is a race with multi-threaded applications between context switch and
    pagetable upgrade. In switch_mm() a new user_asce is built from mm->pgd and
    mm->context.asce_bits, w/o holding any locks. A concurrent mmap with a
    pagetable upgrade on another thread in crst_table_upgrade() could already
    have set new asce_bits, but not yet the new mm->pgd. This would result in a
    corrupt user_asce in switch_mm(), and eventually in a kernel panic from a
    translation exception.
    
    Fix this by storing the complete asce instead of just the asce_bits, which
    can then be read atomically from switch_mm(), so that it either sees the
    old value or the new value, but no mixture. Both cases are OK. Having the
    old value would result in a page fault on access to the higher level memory,
    but the fault handler would see the new mm->pgd, if it was a valid access
    after the mmap on the other thread has completed. So as worst-case scenario
    we would have a page fault loop for the racing thread until the next time
    slice.
    
    Also remove dead code and simplify the upgrade/downgrade path, there are no
    upgrades from 2 levels, and only downgrades from 3 levels for compat tasks.
    There are also no concurrent upgrades, because the mmap_sem is held with
    down_write() in do_mmap, so the flush and table checks during upgrade can
    be removed.
    
    Reported-by: Michael Munday <munday@ca.ibm.com>
    Reviewed-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d77f0a51cb6517d72146c6cb81a997b060b68b2
Author: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
Date:   Mon May 9 16:28:49 2016 -0700

    zsmalloc: fix zs_can_compact() integer overflow
    
    commit 44f43e99fe70833058482d183e99fdfd11220996 upstream.
    
    zs_can_compact() has two race conditions in its core calculation:
    
    unsigned long obj_wasted = zs_stat_get(class, OBJ_ALLOCATED) -
                                    zs_stat_get(class, OBJ_USED);
    
    1) classes are not locked, so the numbers of allocated and used
       objects can change by the concurrent ops happening on other CPUs
    2) shrinker invokes it from preemptible context
    
    Depending on the circumstances, thus, OBJ_ALLOCATED can become
    less than OBJ_USED, which can result in either very high or
    negative `total_scan' value calculated later in do_shrink_slab().
    
    do_shrink_slab() has some logic to prevent those cases:
    
     vmscan: shrink_slab: zs_shrinker_scan+0x0/0x28 [zsmalloc] negative objects to delete nr=-62
     vmscan: shrink_slab: zs_shrinker_scan+0x0/0x28 [zsmalloc] negative objects to delete nr=-62
     vmscan: shrink_slab: zs_shrinker_scan+0x0/0x28 [zsmalloc] negative objects to delete nr=-64
     vmscan: shrink_slab: zs_shrinker_scan+0x0/0x28 [zsmalloc] negative objects to delete nr=-62
     vmscan: shrink_slab: zs_shrinker_scan+0x0/0x28 [zsmalloc] negative objects to delete nr=-62
     vmscan: shrink_slab: zs_shrinker_scan+0x0/0x28 [zsmalloc] negative objects to delete nr=-62
    
    However, due to the way `total_scan' is calculated, not every
    shrinker->count_objects() overflow can be spotted and handled.
    To demonstrate the latter, I added some debugging code to do_shrink_slab()
    (x86_64) and the results were:
    
     vmscan: OVERFLOW: shrinker->count_objects() == -1 [18446744073709551615]
     vmscan: but total_scan > 0: 92679974445502
     vmscan: resulting total_scan: 92679974445502
    [..]
     vmscan: OVERFLOW: shrinker->count_objects() == -1 [18446744073709551615]
     vmscan: but total_scan > 0: 22634041808232578
     vmscan: resulting total_scan: 22634041808232578
    
    Even though shrinker->count_objects() has returned an overflowed value,
    the resulting `total_scan' is positive, and, what is more worrisome, it
    is insanely huge. This value is getting used later on in
    shrinker->scan_objects() loop:
    
            while (total_scan >= batch_size ||
                   total_scan >= freeable) {
                    unsigned long ret;
                    unsigned long nr_to_scan = min(batch_size, total_scan);
    
                    shrinkctl->nr_to_scan = nr_to_scan;
                    ret = shrinker->scan_objects(shrinker, shrinkctl);
                    if (ret == SHRINK_STOP)
                            break;
                    freed += ret;
    
                    count_vm_events(SLABS_SCANNED, nr_to_scan);
                    total_scan -= nr_to_scan;
    
                    cond_resched();
            }
    
    `total_scan >= batch_size' is true for a very-very long time and
    'total_scan >= freeable' is also true for quite some time, because
    `freeable < 0' and `total_scan' is large enough, for example,
    22634041808232578. The only break condition, in the given scheme of
    things, is shrinker->scan_objects() == SHRINK_STOP test, which is a
    bit too weak to rely on, especially in heavy zsmalloc-usage scenarios.
    
    To fix the issue, take a pool stat snapshot and use it instead of
    racy zs_stat_get() calls.
    
    Link: http://lkml.kernel.org/r/20160509140052.3389-1-sergey.senozhatsky@gmail.com
    Signed-off-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc3e6de00b00bb7b716d2653650fdd112e981578
Author: Junxiao Bi <junxiao.bi@oracle.com>
Date:   Thu May 12 15:42:18 2016 -0700

    ocfs2: fix posix_acl_create deadlock
    
    commit c25a1e0671fbca7b2c0d0757d533bd2650d6dc0c upstream.
    
    Commit 702e5bc68ad2 ("ocfs2: use generic posix ACL infrastructure")
    refactored code to use posix_acl_create.  The problem with this function
    is that it is not mindful of the cluster wide inode lock making it
    unsuitable for use with ocfs2 inode creation with ACLs.  For example,
    when used in ocfs2_mknod, this function can cause deadlock as follows.
    The parent dir inode lock is taken when calling posix_acl_create ->
    get_acl -> ocfs2_iop_get_acl which takes the inode lock again.  This can
    cause deadlock if there is a blocked remote lock request waiting for the
    lock to be downconverted.  And same deadlock happened in ocfs2_reflink.
    This fix is to revert back using ocfs2_init_acl.
    
    Fixes: 702e5bc68ad2 ("ocfs2: use generic posix ACL infrastructure")
    Signed-off-by: Tariq Saeed <tariq.x.saeed@oracle.com>
    Signed-off-by: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Mark Fasheh <mfasheh@suse.de>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Joseph Qi <joseph.qi@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cbabd4e83f63d5271c8ff74c059f7cbe85c4c1d
Author: Junxiao Bi <junxiao.bi@oracle.com>
Date:   Thu May 12 15:42:15 2016 -0700

    ocfs2: revert using ocfs2_acl_chmod to avoid inode cluster lock hang
    
    commit 5ee0fbd50fdf1c1329de8bee35ea9d7c6a81a2e0 upstream.
    
    Commit 743b5f1434f5 ("ocfs2: take inode lock in ocfs2_iop_set/get_acl()")
    introduced this issue.  ocfs2_setattr called by chmod command holds
    cluster wide inode lock when calling posix_acl_chmod.  This latter
    function in turn calls ocfs2_iop_get_acl and ocfs2_iop_set_acl.  These
    two are also called directly from vfs layer for getfacl/setfacl commands
    and therefore acquire the cluster wide inode lock.  If a remote
    conversion request comes after the first inode lock in ocfs2_setattr,
    OCFS2_LOCK_BLOCKED will be set.  And this will cause the second call to
    inode lock from the ocfs2_iop_get_acl() to block indefinetly.
    
    The deleted version of ocfs2_acl_chmod() calls __posix_acl_chmod() which
    does not call back into the filesystem.  Therefore, we restore
    ocfs2_acl_chmod(), modify it slightly for locking as needed, and use that
    instead.
    
    Fixes: 743b5f1434f5 ("ocfs2: take inode lock in ocfs2_iop_set/get_acl()")
    Signed-off-by: Tariq Saeed <tariq.x.saeed@oracle.com>
    Signed-off-by: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Mark Fasheh <mfasheh@suse.de>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Joseph Qi <joseph.qi@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c76c5d5ffbbaed1cb1829c1eb9b97648b4979fd
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Fri May 13 18:33:41 2016 +0200

    net/route: enforce hoplimit max value
    
    [ Upstream commit 626abd59e51d4d8c6367e03aae252a8aa759ac78 ]
    
    Currently, when creating or updating a route, no check is performed
    in both ipv4 and ipv6 code to the hoplimit value.
    
    The caller can i.e. set hoplimit to 256, and when such route will
     be used, packets will be sent with hoplimit/ttl equal to 0.
    
    This commit adds checks for the RTAX_HOPLIMIT value, in both ipv4
    ipv6 route code, substituting any value greater than 255 with 255.
    
    This is consistent with what is currently done for ADVMSS and MTU
    in the ipv4 code.
    
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cddc95adf3b1be879e6540187bb5aae24dd2689
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon May 9 20:55:16 2016 -0700

    tcp: refresh skb timestamp at retransmit time
    
    [ Upstream commit 10a81980fc47e64ffac26a073139813d3f697b64 ]
    
    In the very unlikely case __tcp_retransmit_skb() can not use the cloning
    done in tcp_transmit_skb(), we need to refresh skb_mstamp before doing
    the copy and transmit, otherwise TCP TS val will be an exact copy of
    original transmit.
    
    Fixes: 7faee5c0d514 ("tcp: remove TCP_SKB_CB(skb)->when")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Yuchung Cheng <ycheng@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7ddb047796d072a3f19c55aac1d9bfe8cb4b15c
Author: xypron.glpk@gmx.de <xypron.glpk@gmx.de>
Date:   Mon May 9 00:46:18 2016 +0200

    net: thunderx: avoid exposing kernel stack
    
    [ Upstream commit 161de2caf68c549c266e571ffba8e2163886fb10 ]
    
    Reserved fields should be set to zero to avoid exposing
    bits from the kernel stack.
    
    Signed-off-by: Heinrich Schuchardt <xypron.glpk@gmx.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83857201758ead21e19e36d9ab5b2f87be03dfe2
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Sun May 8 12:10:14 2016 -0400

    net: fix a kernel infoleak in x25 module
    
    [ Upstream commit 79e48650320e6fba48369fccf13fd045315b19b8 ]
    
    Stack object "dte_facilities" is allocated in x25_rx_call_request(),
    which is supposed to be initialized in x25_negotiate_facilities.
    However, 5 fields (8 bytes in total) are not initialized. This
    object is then copied to userland via copy_to_user, thus infoleak
    occurs.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1575c095e444c927f0ebcdeb179c460c8c3b7f1f
Author: Mikko Rapeli <mikko.rapeli@iki.fi>
Date:   Sun Apr 24 17:45:00 2016 +0200

    uapi glibc compat: fix compile errors when glibc net/if.h included before linux/if.h MIME-Version: 1.0
    
    [ Upstream commit 4a91cb61bb995e5571098188092e296192309c77 ]
    
    glibc's net/if.h contains copies of definitions from linux/if.h and these
    conflict and cause build failures if both files are included by application
    source code. Changes in uapi headers, which fixed header file dependencies to
    include linux/if.h when it was needed, e.g. commit 1ffad83d, made the
    net/if.h and linux/if.h incompatibilities visible as build failures for
    userspace applications like iproute2 and xtables-addons.
    
    This patch fixes compile errors when glibc net/if.h is included before
    linux/if.h:
    
    ./linux/if.h:99:21: error: redeclaration of enumerator ‘IFF_NOARP’
    ./linux/if.h:98:23: error: redeclaration of enumerator ‘IFF_RUNNING’
    ./linux/if.h:97:26: error: redeclaration of enumerator ‘IFF_NOTRAILERS’
    ./linux/if.h:96:27: error: redeclaration of enumerator ‘IFF_POINTOPOINT’
    ./linux/if.h:95:24: error: redeclaration of enumerator ‘IFF_LOOPBACK’
    ./linux/if.h:94:21: error: redeclaration of enumerator ‘IFF_DEBUG’
    ./linux/if.h:93:25: error: redeclaration of enumerator ‘IFF_BROADCAST’
    ./linux/if.h:92:19: error: redeclaration of enumerator ‘IFF_UP’
    ./linux/if.h:252:8: error: redefinition of ‘struct ifconf’
    ./linux/if.h:203:8: error: redefinition of ‘struct ifreq’
    ./linux/if.h:169:8: error: redefinition of ‘struct ifmap’
    ./linux/if.h:107:23: error: redeclaration of enumerator ‘IFF_DYNAMIC’
    ./linux/if.h:106:25: error: redeclaration of enumerator ‘IFF_AUTOMEDIA’
    ./linux/if.h:105:23: error: redeclaration of enumerator ‘IFF_PORTSEL’
    ./linux/if.h:104:25: error: redeclaration of enumerator ‘IFF_MULTICAST’
    ./linux/if.h:103:21: error: redeclaration of enumerator ‘IFF_SLAVE’
    ./linux/if.h:102:22: error: redeclaration of enumerator ‘IFF_MASTER’
    ./linux/if.h:101:24: error: redeclaration of enumerator ‘IFF_ALLMULTI’
    ./linux/if.h:100:23: error: redeclaration of enumerator ‘IFF_PROMISC’
    
    The cases where linux/if.h is included before net/if.h need a similar fix in
    the glibc side, or the order of include files can be changed userspace
    code as a workaround.
    
    This change was tested in x86 userspace on Debian unstable with
    scripts/headers_compile_test.sh:
    
    $ make headers_install && \
      cd usr/include && ../../scripts/headers_compile_test.sh -l -k
    ...
    cc -Wall -c -nostdinc -I /usr/lib/gcc/i586-linux-gnu/5/include -I /usr/lib/gcc/i586-linux-gnu/5/include-fixed -I . -I /home/mcfrisk/src/linux-2.6/usr/headers_compile_test_include.2uX2zH -I /home/mcfrisk/src/linux-2.6/usr/headers_compile_test_include.2uX2zH/i586-linux-gnu -o /dev/null ./linux/if.h_libc_before_kernel.h
    PASSED libc before kernel test: ./linux/if.h
    
    Reported-by: Jan Engelhardt <jengelh@inai.de>
    Reported-by: Josh Boyer <jwboyer@fedoraproject.org>
    Reported-by: Stephen Hemminger <shemming@brocade.com>
    Reported-by: Waldemar Brodkorb <mail@waldemar-brodkorb.de>
    Cc: Gabriel Laskar <gabriel@lse.epita.fr>
    Signed-off-by: Mikko Rapeli <mikko.rapeli@iki.fi>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5895701216ef9e4f89734433dcf64c85fc3d64a8
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Wed May 4 17:25:02 2016 +0200

    bridge: fix igmp / mld query parsing
    
    [ Upstream commit 856ce5d083e14571d051301fe3c65b32b8cbe321 ]
    
    With the newly introduced helper functions the skb pulling is hidden
    in the checksumming function - and undone before returning to the
    caller.
    
    The IGMP and MLD query parsing functions in the bridge still
    assumed that the skb is pointing to the beginning of the IGMP/MLD
    message while it is now kept at the beginning of the IPv4/6 header.
    
    If there is a querier somewhere else, then this either causes
    the multicast snooping to stay disabled even though it could be
    enabled. Or, if we have the querier enabled too, then this can
    create unnecessary IGMP / MLD query messages on the link.
    
    Fixing this by taking the offset between IP and IGMP/MLD header into
    account, too.
    
    Fixes: 9afd85c9e455 ("net: Export IGMP/MLD message validation code")
    Reported-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97c2160da468f71ba998f2c6c82ed33cdfbc7245
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Wed May 4 16:18:45 2016 +0200

    net: bridge: fix old ioctl unlocked net device walk
    
    [ Upstream commit 31ca0458a61a502adb7ed192bf9716c6d05791a5 ]
    
    get_bridge_ifindices() is used from the old "deviceless" bridge ioctl
    calls which aren't called with rtnl held. The comment above says that it is
    called with rtnl but that is not really the case.
    Here's a sample output from a test ASSERT_RTNL() which I put in
    get_bridge_ifindices and executed "brctl show":
    [  957.422726] RTNL: assertion failed at net/bridge//br_ioctl.c (30)
    [  957.422925] CPU: 0 PID: 1862 Comm: brctl Tainted: G        W  O
    4.6.0-rc4+ #157
    [  957.423009] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996),
    BIOS 1.8.1-20150318_183358- 04/01/2014
    [  957.423009]  0000000000000000 ffff880058adfdf0 ffffffff8138dec5
    0000000000000400
    [  957.423009]  ffffffff81ce8380 ffff880058adfe58 ffffffffa05ead32
    0000000000000001
    [  957.423009]  00007ffec1a444b0 0000000000000400 ffff880053c19130
    0000000000008940
    [  957.423009] Call Trace:
    [  957.423009]  [<ffffffff8138dec5>] dump_stack+0x85/0xc0
    [  957.423009]  [<ffffffffa05ead32>]
    br_ioctl_deviceless_stub+0x212/0x2e0 [bridge]
    [  957.423009]  [<ffffffff81515beb>] sock_ioctl+0x22b/0x290
    [  957.423009]  [<ffffffff8126ba75>] do_vfs_ioctl+0x95/0x700
    [  957.423009]  [<ffffffff8126c159>] SyS_ioctl+0x79/0x90
    [  957.423009]  [<ffffffff8163a4c0>] entry_SYSCALL_64_fastpath+0x23/0xc1
    
    Since it only reads bridge ifindices, we can use rcu to safely walk the net
    device list. Also remove the wrong rtnl comment above.
    
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67779d20fb540b719ca0781200b79831d3498fa4
Author: Ian Campbell <ian.campbell@docker.com>
Date:   Wed May 4 14:21:53 2016 +0100

    VSOCK: do not disconnect socket when peer has shutdown SEND only
    
    [ Upstream commit dedc58e067d8c379a15a8a183c5db318201295bb ]
    
    The peer may be expecting a reply having sent a request and then done a
    shutdown(SHUT_WR), so tearing down the whole socket at this point seems
    wrong and breaks for me with a client which does a SHUT_WR.
    
    Looking at other socket family's stream_recvmsg callbacks doing a shutdown
    here does not seem to be the norm and removing it does not seem to have
    had any adverse effects that I can see.
    
    I'm using Stefan's RFC virtio transport patches, I'm unsure of the impact
    on the vmci transport.
    
    Signed-off-by: Ian Campbell <ian.campbell@docker.com>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Stefan Hajnoczi <stefanha@redhat.com>
    Cc: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>
    Cc: Andy King <acking@vmware.com>
    Cc: Dmitry Torokhov <dtor@vmware.com>
    Cc: Jorgen Hansen <jhansen@vmware.com>
    Cc: Adit Ranadive <aditr@vmware.com>
    Cc: netdev@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcf3e33e962d83837a03ccc489d834e0e9d95d58
Author: Daniel Jurgens <danielj@mellanox.com>
Date:   Wed May 4 15:00:33 2016 +0300

    net/mlx4_en: Fix endianness bug in IPV6 csum calculation
    
    [ Upstream commit 82d69203df634b4dfa765c94f60ce9482bcc44d6 ]
    
    Use htons instead of unconditionally byte swapping nexthdr.  On a little
    endian systems shifting the byte is correct behavior, but it results in
    incorrect csums on big endian architectures.
    
    Fixes: f8c6455bb04b ('net/mlx4_en: Extend checksum offloading by CHECKSUM COMPLETE')
    Signed-off-by: Daniel Jurgens <danielj@mellanox.com>
    Reviewed-by: Carol Soto <clsoto@us.ibm.com>
    Tested-by: Carol Soto <clsoto@us.ibm.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0c0313681aaa0c4514c6794635aba82691d2154
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Tue May 3 16:46:24 2016 -0400

    net: fix infoleak in rtnetlink
    
    [ Upstream commit 5f8e44741f9f216e33736ea4ec65ca9ac03036e6 ]
    
    The stack object “map” has a total size of 32 bytes. Its last 4
    bytes are padding generated by compiler. These padding bytes are
    not initialized and sent out via “nla_put”.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52f307b18b1f070f0442fc98515575616b21fa20
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Tue May 3 16:35:05 2016 -0400

    net: fix infoleak in llc
    
    [ Upstream commit b8670c09f37bdf2847cc44f36511a53afc6161fd ]
    
    The stack object “info” has a total size of 12 bytes. Its last byte
    is padding which is not initialized and leaked via “put_cmsg”.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f27e1ed8d971a6649c0da8e8a8517fea56ad71f9
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Tue May 3 16:38:53 2016 +0200

    net: fec: only clear a queue's work bit if the queue was emptied
    
    [ Upstream commit 1c021bb717a70aaeaa4b25c91f43c2aeddd922de ]
    
    In the receive path a queue's work bit was cleared unconditionally even
    if fec_enet_rx_queue only read out a part of the available packets from
    the hardware. This resulted in not reading any packets in the next napi
    turn and so packets were delayed or lost.
    
    The obvious fix is to only clear a queue's bit when the queue was
    emptied.
    
    Fixes: 4d494cdc92b3 ("net: fec: change data structure to support multiqueue")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Reviewed-by: Lucas Stach <l.stach@pengutronix.de>
    Tested-by: Fugang Duan <fugang.duan@nxp.com>
    Acked-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71a783bce6dd0a39937322de683cf4bda2f3a1be
Author: Neil Horman <nhorman@tuxdriver.com>
Date:   Mon May 2 12:20:15 2016 -0400

    netem: Segment GSO packets on enqueue
    
    [ Upstream commit 6071bd1aa13ed9e41824bafad845b7b7f4df5cfd ]
    
    This was recently reported to me, and reproduced on the latest net kernel,
    when attempting to run netperf from a host that had a netem qdisc attached
    to the egress interface:
    
    [  788.073771] ---------------------[ cut here ]---------------------------
    [  788.096716] WARNING: at net/core/dev.c:2253 skb_warn_bad_offload+0xcd/0xda()
    [  788.129521] bnx2: caps=(0x00000001801949b3, 0x0000000000000000) len=2962
    data_len=0 gso_size=1448 gso_type=1 ip_summed=3
    [  788.182150] Modules linked in: sch_netem kvm_amd kvm crc32_pclmul ipmi_ssif
    ghash_clmulni_intel sp5100_tco amd64_edac_mod aesni_intel lrw gf128mul
    glue_helper ablk_helper edac_mce_amd cryptd pcspkr sg edac_core hpilo ipmi_si
    i2c_piix4 k10temp fam15h_power hpwdt ipmi_msghandler shpchp acpi_power_meter
    pcc_cpufreq nfsd auth_rpcgss nfs_acl lockd grace sunrpc ip_tables xfs libcrc32c
    sd_mod crc_t10dif crct10dif_generic mgag200 syscopyarea sysfillrect sysimgblt
    i2c_algo_bit drm_kms_helper ahci ata_generic pata_acpi ttm libahci
    crct10dif_pclmul pata_atiixp tg3 libata crct10dif_common drm crc32c_intel ptp
    serio_raw bnx2 r8169 hpsa pps_core i2c_core mii dm_mirror dm_region_hash dm_log
    dm_mod
    [  788.465294] CPU: 16 PID: 0 Comm: swapper/16 Tainted: G        W
    ------------   3.10.0-327.el7.x86_64 #1
    [  788.511521] Hardware name: HP ProLiant DL385p Gen8, BIOS A28 12/17/2012
    [  788.542260]  ffff880437c036b8 f7afc56532a53db9 ffff880437c03670
    ffffffff816351f1
    [  788.576332]  ffff880437c036a8 ffffffff8107b200 ffff880633e74200
    ffff880231674000
    [  788.611943]  0000000000000001 0000000000000003 0000000000000000
    ffff880437c03710
    [  788.647241] Call Trace:
    [  788.658817]  <IRQ>  [<ffffffff816351f1>] dump_stack+0x19/0x1b
    [  788.686193]  [<ffffffff8107b200>] warn_slowpath_common+0x70/0xb0
    [  788.713803]  [<ffffffff8107b29c>] warn_slowpath_fmt+0x5c/0x80
    [  788.741314]  [<ffffffff812f92f3>] ? ___ratelimit+0x93/0x100
    [  788.767018]  [<ffffffff81637f49>] skb_warn_bad_offload+0xcd/0xda
    [  788.796117]  [<ffffffff8152950c>] skb_checksum_help+0x17c/0x190
    [  788.823392]  [<ffffffffa01463a1>] netem_enqueue+0x741/0x7c0 [sch_netem]
    [  788.854487]  [<ffffffff8152cb58>] dev_queue_xmit+0x2a8/0x570
    [  788.880870]  [<ffffffff8156ae1d>] ip_finish_output+0x53d/0x7d0
    ...
    
    The problem occurs because netem is not prepared to handle GSO packets (as it
    uses skb_checksum_help in its enqueue path, which cannot manipulate these
    frames).
    
    The solution I think is to simply segment the skb in a simmilar fashion to the
    way we do in __dev_queue_xmit (via validate_xmit_skb), with some minor changes.
    When we decide to corrupt an skb, if the frame is GSO, we segment it, corrupt
    the first segment, and enqueue the remaining ones.
    
    tested successfully by myself on the latest net kernel, to which this applies
    
    Signed-off-by: Neil Horman <nhorman@tuxdriver.com>
    CC: Jamal Hadi Salim <jhs@mojatatu.com>
    CC: "David S. Miller" <davem@davemloft.net>
    CC: netem@lists.linux-foundation.org
    CC: eric.dumazet@gmail.com
    CC: stephen@networkplumber.org
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ecc98e1b8de36e2ac351d174a5f5d92b5085d15
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Thu Feb 25 14:55:03 2016 -0800

    sch_dsmark: update backlog as well
    
    [ Upstream commit bdf17661f63a79c3cb4209b970b1cc39e34f7543 ]
    
    Similarly, we need to update backlog too when we update qlen.
    
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67b014f957cfb29f02a71834facf9f3d7ef4b3fd
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Thu Feb 25 14:55:02 2016 -0800

    sch_htb: update backlog as well
    
    [ Upstream commit 431e3a8e36a05a37126f34b41aa3a5a6456af04e ]
    
    We saw qlen!=0 but backlog==0 on our production machine:
    
    qdisc htb 1: dev eth0 root refcnt 2 r2q 10 default 1 direct_packets_stat 0 ver 3.17
     Sent 172680457356 bytes 222469449 pkt (dropped 0, overlimits 123575834 requeues 0)
     backlog 0b 72p requeues 0
    
    The problem is we only count qlen for HTB qdisc but not backlog.
    We need to update backlog too when we update qlen, so that we
    can at least know the average packet length.
    
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca375cf34a7186f5b8817082d2b594dcd8cedc8b
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Thu Feb 25 14:55:01 2016 -0800

    net_sched: update hierarchical backlog too
    
    [ Upstream commit 2ccccf5fb43ff62b2b96cc58d95fc0b3596516e4 ]
    
    When the bottom qdisc decides to, for example, drop some packet,
    it calls qdisc_tree_decrease_qlen() to update the queue length
    for all its ancestors, we need to update the backlog too to
    keep the stats on root qdisc accurate.
    
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1188e1403a772d9698c06bcc53c44783536ff09e
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Thu Feb 25 14:55:00 2016 -0800

    net_sched: introduce qdisc_replace() helper
    
    [ Upstream commit 86a7996cc8a078793670d82ed97d5a99bb4e8496 ]
    
    Remove nearly duplicated code and prepare for the following patch.
    
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c985780791efec375865c0fbd21794d631c68fce
Author: Jiri Benc <jbenc@redhat.com>
Date:   Fri Apr 29 23:31:32 2016 +0200

    gre: do not pull header in ICMP error processing
    
    [ Upstream commit b7f8fe251e4609e2a437bd2c2dea01e61db6849c ]
    
    iptunnel_pull_header expects that IP header was already pulled; with this
    expectation, it pulls the tunnel header. This is not true in gre_err.
    Furthermore, ipv4_update_pmtu and ipv4_redirect expect that skb->data points
    to the IP header.
    
    We cannot pull the tunnel header in this path. It's just a matter of not
    calling iptunnel_pull_header - we don't need any of its effects.
    
    Fixes: bda7bb463436 ("gre: Allow multiple protocol listener for gre protocol.")
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 390d4b3e0d0f1f57ec5d8a0cf3e0d93444563e9c
Author: Tim Bingham <tbingham@akamai.com>
Date:   Fri Apr 29 13:30:23 2016 -0400

    net: Implement net_dbg_ratelimited() for CONFIG_DYNAMIC_DEBUG case
    
    [ Upstream commit 2c94b53738549d81dc7464a32117d1f5112c64d3 ]
    
    Prior to commit d92cff89a0c8 ("net_dbg_ratelimited: turn into no-op
    when !DEBUG") the implementation of net_dbg_ratelimited() was buggy
    for both the DEBUG and CONFIG_DYNAMIC_DEBUG cases.
    
    The bug was that net_ratelimit() was being called and, despite
    returning true, nothing was being printed to the console. This
    resulted in messages like the following -
    
    "net_ratelimit: %d callbacks suppressed"
    
    with no other output nearby.
    
    After commit d92cff89a0c8 ("net_dbg_ratelimited: turn into no-op when
    !DEBUG") the bug is fixed for the DEBUG case. However, there's no
    output at all for CONFIG_DYNAMIC_DEBUG case.
    
    This patch restores debug output (if enabled) for the
    CONFIG_DYNAMIC_DEBUG case.
    
    Add a definition of net_dbg_ratelimited() for the CONFIG_DYNAMIC_DEBUG
    case. The implementation takes care to check that dynamic debugging is
    enabled before calling net_ratelimit().
    
    Fixes: d92cff89a0c8 ("net_dbg_ratelimited: turn into no-op when !DEBUG")
    Signed-off-by: Tim Bingham <tbingham@akamai.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85256f78bff1c4a24ad8edac63726e8ca5ccedc1
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Wed Apr 27 18:56:22 2016 -0700

    samples/bpf: fix trace_output example
    
    [ Upstream commit 569cc39d39385a74b23145496bca2df5ac8b2fb8 ]
    
    llvm cannot always recognize memset as builtin function and optimize
    it away, so just delete it. It was a leftover from testing
    of bpf_perf_event_output() with large data structures.
    
    Fixes: 39111695b1b8 ("samples: bpf: add bpf_perf_event_output example")
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb10156f572f06f3b6cadd378e5a0ab3ed8da991
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Wed Apr 27 18:56:21 2016 -0700

    bpf: fix check_map_func_compatibility logic
    
    [ Upstream commit 6aff67c85c9e5a4bc99e5211c1bac547936626ca ]
    
    The commit 35578d798400 ("bpf: Implement function bpf_perf_event_read() that get the selected hardware PMU conuter")
    introduced clever way to check bpf_helper<->map_type compatibility.
    Later on commit a43eec304259 ("bpf: introduce bpf_perf_event_output() helper") adjusted
    the logic and inadvertently broke it.
    Get rid of the clever bool compare and go back to two-way check
    from map and from helper perspective.
    
    Fixes: a43eec304259 ("bpf: introduce bpf_perf_event_output() helper")
    Reported-by: Jann Horn <jannh@google.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3899251bdb9c2b31fc73d4cc132f52d3710101de
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Wed Apr 27 18:56:20 2016 -0700

    bpf: fix refcnt overflow
    
    [ Upstream commit 92117d8443bc5afacc8d5ba82e541946310f106e ]
    
    On a system with >32Gbyte of phyiscal memory and infinite RLIMIT_MEMLOCK,
    the malicious application may overflow 32-bit bpf program refcnt.
    It's also possible to overflow map refcnt on 1Tb system.
    Impose 32k hard limit which means that the same bpf program or
    map cannot be shared by more than 32k processes.
    
    Fixes: 1be7f75d1668 ("bpf: enable non-root eBPF programs")
    Reported-by: Jann Horn <jannh@google.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 608d2c3c7a046c222cae2e857cf648a9f89e772b
Author: Jann Horn <jannh@google.com>
Date:   Tue Apr 26 22:26:26 2016 +0200

    bpf: fix double-fdput in replace_map_fd_with_map_ptr()
    
    [ Upstream commit 8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7 ]
    
    When bpf(BPF_PROG_LOAD, ...) was invoked with a BPF program whose bytecode
    references a non-map file descriptor as a map file descriptor, the error
    handling code called fdput() twice instead of once (in __bpf_map_get() and
    in replace_map_fd_with_map_ptr()). If the file descriptor table of the
    current task is shared, this causes f_count to be decremented too much,
    allowing the struct file to be freed while it is still in use
    (use-after-free). This can be exploited to gain root privileges by an
    unprivileged user.
    
    This bug was introduced in
    commit 0246e64d9a5f ("bpf: handle pseudo BPF_LD_IMM64 insn"), but is only
    exploitable since
    commit 1be7f75d1668 ("bpf: enable non-root eBPF programs") because
    previously, CAP_SYS_ADMIN was required to reach the vulnerable code.
    
    (posted publicly according to request by maintainer)
    
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 828255b591768b4e5a762df21a0133065ddcb44b
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Apr 23 11:35:46 2016 -0700

    net/mlx4_en: fix spurious timestamping callbacks
    
    [ Upstream commit fc96256c906362e845d848d0f6a6354450059e81 ]
    
    When multiple skb are TX-completed in a row, we might incorrectly keep
    a timestamp of a prior skb and cause extra work.
    
    Fixes: ec693d47010e8 ("net/mlx4_en: Add HW timestamping (TS) support")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0633185047d91174ee2cbc8f1bd59e75e3c45ccd
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Thu Apr 21 22:23:31 2016 +0200

    ipv4/fib: don't warn when primary address is missing if in_dev is dead
    
    [ Upstream commit 391a20333b8393ef2e13014e6e59d192c5594471 ]
    
    After commit fbd40ea0180a ("ipv4: Don't do expensive useless work
    during inetdev destroy.") when deleting an interface,
    fib_del_ifaddr() can be executed without any primary address
    present on the dead interface.
    
    The above is safe, but triggers some "bug: prim == NULL" warnings.
    
    This commit avoids warning if the in_dev is dead
    
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da465bd9391efca3649ab34c3575a2b27ac384e3
Author: Saeed Mahameed <saeedm@mellanox.com>
Date:   Fri Apr 22 00:33:04 2016 +0300

    net/mlx5e: Fix minimum MTU
    
    [ Upstream commit d8edd2469ace550db707798180d1c84d81f93bca ]
    
    Minimum MTU that can be set in Connectx4 device is 68.
    
    This fixes the case where a user wants to set invalid MTU,
    the driver will fail to satisfy this request and the interface
    will stay down.
    
    It is better to report an error and continue working with old
    mtu.
    
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3032b09874a4709f8529d620dd270e14a56eb61d
Author: Saeed Mahameed <saeedm@mellanox.com>
Date:   Fri Apr 22 00:33:03 2016 +0300

    net/mlx5e: Device's mtu field is u16 and not int
    
    [ Upstream commit 046339eaab26804f52f6604877f5674f70815b26 ]
    
    For set/query MTU port firmware commands the MTU field
    is 16 bits, here I changed all the "int mtu" parameters
    of the functions wrapping those firmware commands to be u16.
    
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a33f756ae1986a67d145f050bf4350e5ee17746
Author: Simon Horman <simon.horman@netronome.com>
Date:   Thu Apr 21 11:49:15 2016 +1000

    openvswitch: use flow protocol when recalculating ipv6 checksums
    
    [ Upstream commit b4f70527f052b0c00be4d7cac562baa75b212df5 ]
    
    When using masked actions the ipv6_proto field of an action
    to set IPv6 fields may be zero rather than the prevailing protocol
    which will result in skipping checksum recalculation.
    
    This patch resolves the problem by relying on the protocol
    in the flow key rather than that in the set field action.
    
    Fixes: 83d2b9ba1abc ("net: openvswitch: Support masked set actions.")
    Cc: Jarno Rajahalme <jrajahalme@nicira.com>
    Signed-off-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5c9a73c501e8aed86dd578309813c7818ca248c
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed Apr 20 23:23:08 2016 +0100

    atl2: Disable unimplemented scatter/gather feature
    
    [ Upstream commit f43bfaeddc79effbf3d0fcb53ca477cca66f3db8 ]
    
    atl2 includes NETIF_F_SG in hw_features even though it has no support
    for non-linear skbs.  This bug was originally harmless since the
    driver does not claim to implement checksum offload and that used to
    be a requirement for SG.
    
    Now that SG and checksum offload are independent features, if you
    explicitly enable SG *and* use one of the rare protocols that can use
    SG without checkusm offload, this potentially leaks sensitive
    information (before you notice that it just isn't working).  Therefore
    this obscure bug has been designated CVE-2016-2117.
    
    Reported-by: Justin Yackoski <jyackoski@crypto-nite.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Fixes: ec5f06156423 ("net: Kill link between CSUM and SG features.")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a66ce519a3e9aca63739da0d716555588df5cc48
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Sat Apr 16 02:27:58 2016 +0200

    vlan: pull on __vlan_insert_tag error path and fix csum correction
    
    [ Upstream commit 9241e2df4fbc648a92ea0752918e05c26255649e ]
    
    When __vlan_insert_tag() fails from skb_vlan_push() path due to the
    skb_cow_head(), we need to undo the __skb_push() in the error path
    as well that was done earlier to move skb->data pointer to mac header.
    
    Moreover, I noticed that when in the non-error path the __skb_pull()
    is done and the original offset to mac header was non-zero, we fixup
    from a wrong skb->data offset in the checksum complete processing.
    
    So the skb_postpush_rcsum() really needs to be done before __skb_pull()
    where skb->data still points to the mac header start and thus operates
    under the same conditions as in __vlan_insert_tag().
    
    Fixes: 93515d53b133 ("net: move vlan pop/push functions into common code")
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: Jiri Pirko <jiri@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79fdabe8706bd240c083a848f64081a4bc46d7af
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Sat Feb 20 00:29:30 2016 +0100

    net: use skb_postpush_rcsum instead of own implementations
    
    [ Upstream commit 6b83d28a55a891a9d70fc61ccb1c138e47dcbe74 ]
    
    Replace individual implementations with the recently introduced
    skb_postpush_rcsum() helper.
    
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Tom Herbert <tom@herbertland.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d794379798b33797d9afe4a477bfd89ce399184
Author: Bjørn Mork <bjorn@mork.no>
Date:   Tue Apr 12 16:11:12 2016 +0200

    cdc_mbim: apply "NDP to end" quirk to all Huawei devices
    
    [ Upstream commit c5b5343cfbc9f46af65033fa4f407d7b7d98371d ]
    
    We now have a positive report of another Huawei device needing
    this quirk: The ME906s-158 (12d1:15c1).  This is an m.2 form
    factor modem with no obvious relationship to the E3372 (12d1:157d)
    we already have a quirk entry for.  This is reason enough to
    believe the quirk might be necessary for any number of current
    and future Huawei devices.
    
    Applying the quirk to all Huawei devices, since it is crucial
    to any device affected by the firmware bug, while the impact
    on non-affected devices is negligible.
    
    The quirk can if necessary be disabled per-device by writing
    N to /sys/class/net/<iface>/cdc_ncm/ndp_to_end
    
    Reported-by: Andreas Fett <andreas.fett@secunet.com>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8427d5547d0b63beb70d3858127942f828400ad2
Author: Alexei Starovoitov <ast@kernel.org>
Date:   Tue Apr 12 10:26:19 2016 -0700

    bpf/verifier: reject invalid LD_ABS | BPF_DW instruction
    
    [ Upstream commit d82bccc69041a51f7b7b9b4a36db0772f4cdba21 ]
    
    verifier must check for reserved size bits in instruction opcode and
    reject BPF_LD | BPF_ABS | BPF_DW and BPF_LD | BPF_IND | BPF_DW instructions,
    otherwise interpreter will WARN_RATELIMIT on them during execution.
    
    Fixes: ddd872bc3098 ("bpf: verifier: add checks for BPF_ABS | BPF_IND instructions")
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c136901ef17cd42d56b5c02135a0c67fb58424f
Author: Lars Persson <lars.persson@axis.com>
Date:   Tue Apr 12 08:45:52 2016 +0200

    net: sched: do not requeue a NULL skb
    
    [ Upstream commit 3dcd493fbebfd631913df6e2773cc295d3bf7d22 ]
    
    A failure in validate_xmit_skb_list() triggered an unconditional call
    to dev_requeue_skb with skb=NULL. This slowly grows the queue
    discipline's qlen count until all traffic through the queue stops.
    
    We take the optimistic approach and continue running the queue after a
    failure since it is unknown if later packets also will fail in the
    validate path.
    
    Fixes: 55a93b3ea780 ("qdisc: validate skb without holding lock")
    Signed-off-by: Lars Persson <larper@axis.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a416c9483c719cc9160b4b9af09085dfe461383f
Author: Mathias Krause <minipli@googlemail.com>
Date:   Sun Apr 10 12:52:28 2016 +0200

    packet: fix heap info leak in PACKET_DIAG_MCLIST sock_diag interface
    
    [ Upstream commit 309cf37fe2a781279b7675d4bb7173198e532867 ]
    
    Because we miss to wipe the remainder of i->addr[] in packet_mc_add(),
    pdiag_put_mclist() leaks uninitialized heap bytes via the
    PACKET_DIAG_MCLIST netlink attribute.
    
    Fix this by explicitly memset(0)ing the remaining bytes in i->addr[].
    
    Fixes: eea68e2f1a00 ("packet: Report socket mclist info via diag module")
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Pavel Emelyanov <xemul@parallels.com>
    Acked-by: Pavel Emelyanov <xemul@virtuozzo.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0bfda58b414487f06ac0911674a9808f71d3ab1
Author: Chris Friesen <chris.friesen@windriver.com>
Date:   Fri Apr 8 15:21:30 2016 -0600

    route: do not cache fib route info on local routes with oif
    
    [ Upstream commit d6d5e999e5df67f8ec20b6be45e2229455ee3699 ]
    
    For local routes that require a particular output interface we do not want
    to cache the result.  Caching the result causes incorrect behaviour when
    there are multiple source addresses on the interface.  The end result
    being that if the intended recipient is waiting on that interface for the
    packet he won't receive it because it will be delivered on the loopback
    interface and the IP_PKTINFO ipi_ifindex will be set to the loopback
    interface as well.
    
    This can be tested by running a program such as "dhcp_release" which
    attempts to inject a packet on a particular interface so that it is
    received by another program on the same board.  The receiving process
    should see an IP_PKTINFO ipi_ifndex value of the source interface
    (e.g., eth1) instead of the loopback interface (e.g., lo).  The packet
    will still appear on the loopback interface in tcpdump but the important
    aspect is that the CMSG info is correct.
    
    Sample dhcp_release command line:
    
       dhcp_release eth1 192.168.204.222 02:11:33:22:44:66
    
    Signed-off-by: Allain Legacy <allain.legacy@windriver.com>
    Signed off-by: Chris Friesen <chris.friesen@windriver.com>
    Reviewed-by: Julian Anastasov <ja@ssi.bg>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c21fec188ab43661e5bf08d9d377ecafc7a8abf9
Author: David S. Miller <davem@davemloft.net>
Date:   Sun Apr 10 23:01:30 2016 -0400

    decnet: Do not build routes to devices without decnet private data.
    
    [ Upstream commit a36a0d4008488fa545c74445d69eaf56377d5d4e ]
    
    In particular, make sure we check for decnet private presence
    for loopback devices.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
