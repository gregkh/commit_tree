commit 140839fe4e71d4db6a7b342d54cd7165490fd1cc
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Sep 6 10:23:52 2019 +0200

    Linux 5.2.12

commit 5566d1c61b2fd9a8710e19a18e5e77557c3c21fe
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Sep 5 20:48:46 2019 +0200

    Revert "ASoC: Fail card instantiation if DAI format setup fails"
    
    This reverts commit ab4f4d331a982f52a964f7f4d1ec452280f122e7 which is
    commit 40aa5383e393d72f6aa3943a4e7b1aae25a1e43b upstream.
    
    Mark Brown writes:
            I nacked this patch when Sasha posted it - it only improves
            diagnostics and might make systems that worked by accident break
            since it turns things into a hard failure, it won't make
            anything that didn't work previously work.
    
    Reported-by: Mark Brown <broonie@kernel.org>
    Cc: Ricard Wanderlof <ricardw@axis.com>
    Cc: Sasha Levin <sashal@kernel.org>
    Link: https://lore.kernel.org/lkml/20190904181027.GG4348@sirena.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d8966020827bb83197f995af58ec7e976113d62
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Tue Jul 9 23:24:54 2019 -0700

    hsr: switch ->dellink() to ->ndo_uninit()
    
    [ Upstream commit 311633b604063a8a5d3fbc74d0565b42df721f68 ]
    
    Switching from ->priv_destructor to dellink() has an unexpected
    consequence: existing RCU readers, that is, hsr_port_get_hsr()
    callers, may still be able to read the port list.
    
    Instead of checking the return value of each hsr_port_get_hsr(),
    we can just move it to ->ndo_uninit() which is called after
    device unregister and synchronize_net(), and we still have RTNL
    lock there.
    
    Fixes: b9a1e627405d ("hsr: implement dellink to clean up resources")
    Fixes: edf070a0fb45 ("hsr: fix a NULL pointer deref in hsr_dev_xmit()")
    Reported-by: syzbot+097ef84cdc95843fbaa8@syzkaller.appspotmail.com
    Cc: Arvid Brodin <arvid.brodin@alten.se>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 072c9337f3a0685f6319fe42fa075c2e3957cf83
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Jul 3 17:21:14 2019 -0700

    hsr: fix a NULL pointer deref in hsr_dev_xmit()
    
    [ Upstream commit edf070a0fb45ac845f534baf172fbadbeb5048c6 ]
    
    hsr_port_get_hsr() could return NULL and kernel
    could crash:
    
     BUG: kernel NULL pointer dereference, address: 0000000000000010
     #PF: supervisor read access in kernel mode
     #PF: error_code(0x0000) - not-present page
     PGD 8000000074b84067 P4D 8000000074b84067 PUD 7057d067 PMD 0
     Oops: 0000 [#1] SMP PTI
     CPU: 0 PID: 754 Comm: a.out Not tainted 5.2.0-rc6+ #718
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.12.0-2.fc30 04/01/2014
     RIP: 0010:hsr_dev_xmit+0x20/0x31
     Code: 48 8b 1b eb e0 5b 5d 41 5c c3 66 66 66 66 90 55 48 89 fd 48 8d be 40 0b 00 00 be 04 00 00 00 e8 ee f2 ff ff 48 89 ef 48 89 c6 <48> 8b 40 10 48 89 45 10 e8 6c 1b 00 00 31 c0 5d c3 66 66 66 66 90
     RSP: 0018:ffffb5b400003c48 EFLAGS: 00010246
     RAX: 0000000000000000 RBX: ffff9821b4509a88 RCX: 0000000000000000
     RDX: ffff9821b4509a88 RSI: 0000000000000000 RDI: ffff9821bc3fc7c0
     RBP: ffff9821bc3fc7c0 R08: 0000000000000000 R09: 00000000000c2019
     R10: 0000000000000000 R11: 0000000000000002 R12: ffff9821bc3fc7c0
     R13: ffff9821b4509a88 R14: 0000000000000000 R15: 000000000000006e
     FS:  00007fee112a1800(0000) GS:ffff9821bd800000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 0000000000000010 CR3: 000000006e9ce000 CR4: 00000000000406f0
     Call Trace:
      <IRQ>
      netdev_start_xmit+0x1b/0x38
      dev_hard_start_xmit+0x121/0x21e
      ? validate_xmit_skb.isra.0+0x19/0x1e3
      __dev_queue_xmit+0x74c/0x823
      ? lockdep_hardirqs_on+0x12b/0x17d
      ip6_finish_output2+0x3d3/0x42c
      ? ip6_mtu+0x55/0x5c
      ? mld_sendpack+0x191/0x229
      mld_sendpack+0x191/0x229
      mld_ifc_timer_expire+0x1f7/0x230
      ? mld_dad_timer_expire+0x58/0x58
      call_timer_fn+0x12e/0x273
      __run_timers.part.0+0x174/0x1b5
      ? mld_dad_timer_expire+0x58/0x58
      ? sched_clock_cpu+0x10/0xad
      ? mark_lock+0x26/0x1f2
      ? __lock_is_held+0x40/0x71
      run_timer_softirq+0x26/0x48
      __do_softirq+0x1af/0x392
      irq_exit+0x53/0xa2
      smp_apic_timer_interrupt+0x1c4/0x1d9
      apic_timer_interrupt+0xf/0x20
      </IRQ>
    
    Cc: Arvid Brodin <arvid.brodin@alten.se>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08523d5a2f4a9e4202e00d282c164d453cabe2d2
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Wed Jul 3 17:21:13 2019 -0700

    hsr: implement dellink to clean up resources
    
    commit b9a1e627405d68d475a3c1f35e685ccfb5bbe668 upstream.
    
    hsr_link_ops implements ->newlink() but not ->dellink(),
    which leads that resources not released after removing the device,
    particularly the entries in self_node_db and node_db.
    
    So add ->dellink() implementation to replace the priv_destructor.
    This also makes the code slightly easier to understand.
    
    Reported-by: syzbot+c6167ec3de7def23d1e8@syzkaller.appspotmail.com
    Cc: Arvid Brodin <arvid.brodin@alten.se>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a282179be74711a8fceab4f8dcf592959a15bb7f
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Aug 23 22:14:23 2019 +0200

    bpf: fix use after free in prog symbol exposure
    
    commit c751798aa224fadc5124b49eeb38fb468c0fa039 upstream.
    
    syzkaller managed to trigger the warning in bpf_jit_free() which checks via
    bpf_prog_kallsyms_verify_off() for potentially unlinked JITed BPF progs
    in kallsyms, and subsequently trips over GPF when walking kallsyms entries:
    
      [...]
      8021q: adding VLAN 0 to HW filter on device batadv0
      8021q: adding VLAN 0 to HW filter on device batadv0
      WARNING: CPU: 0 PID: 9869 at kernel/bpf/core.c:810 bpf_jit_free+0x1e8/0x2a0
      Kernel panic - not syncing: panic_on_warn set ...
      CPU: 0 PID: 9869 Comm: kworker/0:7 Not tainted 5.0.0-rc8+ #1
      Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
      Workqueue: events bpf_prog_free_deferred
      Call Trace:
       __dump_stack lib/dump_stack.c:77 [inline]
       dump_stack+0x113/0x167 lib/dump_stack.c:113
       panic+0x212/0x40b kernel/panic.c:214
       __warn.cold.8+0x1b/0x38 kernel/panic.c:571
       report_bug+0x1a4/0x200 lib/bug.c:186
       fixup_bug arch/x86/kernel/traps.c:178 [inline]
       do_error_trap+0x11b/0x200 arch/x86/kernel/traps.c:271
       do_invalid_op+0x36/0x40 arch/x86/kernel/traps.c:290
       invalid_op+0x14/0x20 arch/x86/entry/entry_64.S:973
      RIP: 0010:bpf_jit_free+0x1e8/0x2a0
      Code: 02 4c 89 e2 83 e2 07 38 d0 7f 08 84 c0 0f 85 86 00 00 00 48 ba 00 02 00 00 00 00 ad de 0f b6 43 02 49 39 d6 0f 84 5f fe ff ff <0f> 0b e9 58 fe ff ff 48 b8 00 00 00 00 00 fc ff df 4c 89 e2 48 c1
      RSP: 0018:ffff888092f67cd8 EFLAGS: 00010202
      RAX: 0000000000000007 RBX: ffffc90001947000 RCX: ffffffff816e9d88
      RDX: dead000000000200 RSI: 0000000000000008 RDI: ffff88808769f7f0
      RBP: ffff888092f67d00 R08: fffffbfff1394059 R09: fffffbfff1394058
      R10: fffffbfff1394058 R11: ffffffff89ca02c7 R12: ffffc90001947002
      R13: ffffc90001947020 R14: ffffffff881eca80 R15: ffff88808769f7e8
      BUG: unable to handle kernel paging request at fffffbfff400d000
      #PF error: [normal kernel read fault]
      PGD 21ffee067 P4D 21ffee067 PUD 21ffed067 PMD 9f942067 PTE 0
      Oops: 0000 [#1] PREEMPT SMP KASAN
      CPU: 0 PID: 9869 Comm: kworker/0:7 Not tainted 5.0.0-rc8+ #1
      Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
      Workqueue: events bpf_prog_free_deferred
      RIP: 0010:bpf_get_prog_addr_region kernel/bpf/core.c:495 [inline]
      RIP: 0010:bpf_tree_comp kernel/bpf/core.c:558 [inline]
      RIP: 0010:__lt_find include/linux/rbtree_latch.h:115 [inline]
      RIP: 0010:latch_tree_find include/linux/rbtree_latch.h:208 [inline]
      RIP: 0010:bpf_prog_kallsyms_find+0x107/0x2e0 kernel/bpf/core.c:632
      Code: 00 f0 ff ff 44 38 c8 7f 08 84 c0 0f 85 fa 00 00 00 41 f6 45 02 01 75 02 0f 0b 48 39 da 0f 82 92 00 00 00 48 89 d8 48 c1 e8 03 <42> 0f b6 04 30 84 c0 74 08 3c 03 0f 8e 45 01 00 00 8b 03 48 c1 e0
      [...]
    
    Upon further debugging, it turns out that whenever we trigger this
    issue, the kallsyms removal in bpf_prog_ksym_node_del() was /skipped/
    but yet bpf_jit_free() reported that the entry is /in use/.
    
    Problem is that symbol exposure via bpf_prog_kallsyms_add() but also
    perf_event_bpf_event() were done /after/ bpf_prog_new_fd(). Once the
    fd is exposed to the public, a parallel close request came in right
    before we attempted to do the bpf_prog_kallsyms_add().
    
    Given at this time the prog reference count is one, we start to rip
    everything underneath us via bpf_prog_release() -> bpf_prog_put().
    The memory is eventually released via deferred free, so we're seeing
    that bpf_jit_free() has a kallsym entry because we added it from
    bpf_prog_load() but /after/ bpf_prog_put() from the remote CPU.
    
    Therefore, move both notifications /before/ we install the fd. The
    issue was never seen between bpf_prog_alloc_id() and bpf_prog_new_fd()
    because upon bpf_prog_get_fd_by_id() we'll take another reference to
    the BPF prog, so we're still holding the original reference from the
    bpf_prog_load().
    
    Fixes: 6ee52e2a3fe4 ("perf, bpf: Introduce PERF_RECORD_BPF_EVENT")
    Fixes: 74451e66d516 ("bpf: make jited programs visible in traces")
    Reported-by: syzbot+bd3bba6ff3fcea7a6ec6@syzkaller.appspotmail.com
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Song Liu <songliubraving@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d5014b80e5c2dcf720b2b21fab298e04bbf3301
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Sep 4 12:27:18 2019 +0200

    x86/ptrace: fix up botched merge of spectrev1 fix
    
    I incorrectly merged commit 31a2fbb390fe ("x86/ptrace: Fix possible
    spectre-v1 in ptrace_get_debugreg()") when backporting it, as was
    graciously pointed out at
    https://grsecurity.net/teardown_of_a_failed_linux_lts_spectre_fix.php
    
    Resolve the upstream difference with the stable kernel merge to properly
    protect things.
    
    Reported-by: Brad Spengler <spender@grsecurity.net>
    Cc: Dianzhang Chen <dianzhangchen0@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: <bp@alien8.de>
    Cc: <hpa@zytor.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3af8db6a99f64f410210e22ebc2c66b9d4857efe
Author: Manasi Navare <manasi.d.navare@intel.com>
Date:   Wed Aug 21 14:59:50 2019 -0700

    drm/i915/dp: Fix DSC enable code to use cpu_transcoder instead of encoder->type
    
    [ Upstream commit d4c61c4a16decd8ace8660f22c81609a539fccba ]
    
    This patch fixes the intel_configure_pps_for_dsc_encoder() function to use
    cpu_transcoder instead of encoder->type to select the correct DSC registers
    that was wrongly used in the original patch for one DSC register isntance.
    
    Fixes: 7182414e2530 ("drm/i915/dp: Configure i915 Picture parameter Set registers during DSC enabling")
    Cc: Ville Syrjala <ville.syrjala@linux.intel.com>
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Cc: Ville Syrjala <ville.syrjala@linux.intel.com>
    Cc: <stable@vger.kernel.org> # v5.0+
    Signed-off-by: Manasi Navare <manasi.d.navare@intel.com>
    Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190821215950.24223-1-manasi.d.navare@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6980646c9ab60e87ad4056e0f9c38dfacda1160
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Tue Aug 20 19:16:57 2019 +0300

    drm/i915: Do not create a new max_bpc prop for MST connectors
    
    [ Upstream commit 1b9bd09630d4db4827cc04d358a41a16a6bc2cb0 ]
    
    We're not allowed to create new properties after device registration
    so for MST connectors we need to either create the max_bpc property
    earlier, or we reuse one we already have. Let's do the latter apporach
    since the corresponding SST connector already has the prop and its
    min/max are correct also for the MST connector.
    
    The problem was highlighted by commit 4f5368b5541a ("drm/kms:
    Catch mode_object lifetime errors") which results in the following
    spew:
    [ 1330.878941] WARNING: CPU: 2 PID: 1554 at drivers/gpu/drm/drm_mode_object.c:45 __drm_mode_object_add+0xa0/0xb0 [drm]
    ...
    [ 1330.879008] Call Trace:
    [ 1330.879023]  drm_property_create+0xba/0x180 [drm]
    [ 1330.879036]  drm_property_create_range+0x15/0x30 [drm]
    [ 1330.879048]  drm_connector_attach_max_bpc_property+0x62/0x80 [drm]
    [ 1330.879086]  intel_dp_add_mst_connector+0x11f/0x140 [i915]
    [ 1330.879094]  drm_dp_add_port.isra.20+0x20b/0x440 [drm_kms_helper]
    ...
    
    Cc: stable@vger.kernel.org
    Cc: Lyude Paul <lyude@redhat.com>
    Cc: sunpeng.li@amd.com
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: Sean Paul <sean@poorly.run>
    Fixes: 5ca0ef8a56b8 ("drm/i915: Add max_bpc property for DP MST")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190820161657.9658-1-ville.syrjala@linux.intel.com
    Reviewed-by: José Roberto de Souza <jose.souza@intel.com>
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79d5d7317ce33e0be347126360847c3e687d983b
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Wed Aug 21 20:17:32 2019 +0300

    iwlwifi: pcie: handle switching killer Qu B0 NICs to C0
    
    [ Upstream commit b9500577d361522a3d9f14da8cf41dc1d824904e ]
    
    We need to use a different firmware for C0 versions of killer Qu NICs.
    Add structures for them and handle them in the if block that detects
    C0 revisions.
    
    Additionally, instead of having an inclusive check for QnJ devices,
    make the selection exclusive, so that switching to QnJ is the
    exception, not the default.  This prevents us from having to add all
    the non-QnJ cards to an exclusion list.  To do so, only go into the
    QnJ block if the device has an RF ID type HR and HW revision QnJ.
    
    Cc: stable@vger.kernel.org # 5.2
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/20190821171732.2266-1-luca@coelho.fi
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3146a6de3d58b6851583a8c4daa9ddd796fe4bd4
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Fri Aug 16 15:55:53 2019 +0300

    iwlwifi: pcie: don't switch FW to qnj when ax201 is detected
    
    [ Upstream commit 17e40e6979aaf60f356331bac129df20e1fd74a0 ]
    
    We have a too generic condition that switches from Qu configurations
    to QnJ configurations.  We need to exclude some configurations so that
    they are not erroneously switched.  Add the ax201 configuration to the
    list of exclusions.
    
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e7e685012f2491fd73a545f4777868f87900548
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Mon Jul 8 18:55:34 2019 +0300

    iwlwifi: pcie: add support for qu c-step devices
    
    [ Upstream commit a7d544d63120061f89459585f06ca44d30842a22 ]
    
    Add support for C-step devices.  Currently we don't have a nice way of
    matching the step and choosing the proper configuration, so we need to
    switch the config structs one by one.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c013312ef7a8be403343ffab1c30c306e15ebe8f
Author: Ihab Zhaika <ihab.zhaika@intel.com>
Date:   Fri Jun 14 11:48:51 2019 +0300

    iwlwifi: change 0x02F0 fw from qu to quz
    
    [ Upstream commit 658521fc1bf1457a944d8408b8a792b31ed9cc20 ]
    
    change the fw of 0x02F0 platform from qu to quz
    
    Signed-off-by: Ihab Zhaika <ihab.zhaika@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit feee62efa7adeef8e97701b6ceba4b4e9079f98c
Author: Ihab Zhaika <ihab.zhaika@intel.com>
Date:   Mon Jul 8 18:55:33 2019 +0300

    iwlwifi: add new cards for 9000 and 20000 series
    
    [ Upstream commit ffcb60a54f245528e1d49f957ca2d20d6079577c ]
    
    add two new PCI ID's for 9000 and 20000 series
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Ihab Zhaika <ihab.zhaika@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0fdbd727e12a2654841429cc493ef9f08aaaf975
Author: Ihab Zhaika <ihab.zhaika@intel.com>
Date:   Wed Jun 19 20:59:02 2019 +0300

    iwlwifi: add new cards for 22000 and change wrong structs
    
    [ Upstream commit a976bfb44bdbc1b69365dc31f7c1339fff436c95 ]
    
    add few PCI ID'S for 22000 and chainge few cards structs names
    
    Signed-off-by: Ihab Zhaika <ihab.zhaika@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 805363e2dfa5354c64994da623ed692d6abdb2b8
Author: Ihab Zhaika <ihab.zhaika@intel.com>
Date:   Fri Jun 14 11:48:49 2019 +0300

    iwlwifi: add new cards for 22000 and fix struct name
    
    [ Upstream commit d151b0a2efa128cb4f643b11baf54b1e4de2c528 ]
    
    add few PCI ID'S for 22000 and fix the wrong name for one
    of the structs
    
    Signed-off-by: Ihab Zhaika <ihab.zhaika@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e27fc344575113db956cb9c0ae0b13312a7e1dcc
Author: Chunyan Zhang <chunyan.zhang@unisoc.com>
Date:   Wed Aug 28 10:17:33 2019 +0800

    mmc: sdhci-sprd: add get_ro hook function
    
    [ Upstream commit 4eae8cbdff942a423926486be4e781a77d619966 ]
    
    sprd's sd host controller doesn't support write protect to sd card.
    
    Fixes: fb8bd90f83c4 ("mmc: sdhci-sprd: Add Spreadtrum's initial host controller")
    Signed-off-by: Chunyan Zhang <chunyan.zhang@unisoc.com>
    Signed-off-by: Chunyan Zhang <zhang.lyra@gmail.com>
    Reviewed-by: Baolin Wang <baolin.wang@linaro.org>
    Tested-by: Baolin Wang <baolin.wang@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ad0348f708d7b2ceead282f558a6a16a213d9b9
Author: Baolin Wang <baolin.wang@linaro.org>
Date:   Tue Jun 4 16:14:24 2019 +0800

    mmc: sdhci-sprd: Implement the get_max_timeout_count() interface
    
    [ Upstream commit 7486831d7d6aebcf851f9a4bbe65080351d5c9fb ]
    
    Implement the get_max_timeout_count() interface to set the Spredtrum SD
    host controller actual maximum timeout count.
    
    Signed-off-by: Baolin Wang <baolin.wang@linaro.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d100666e3cfc93956a357b18941e493f265f85ec
Author: Chunyan Zhang <chunyan.zhang@unisoc.com>
Date:   Wed Aug 28 10:17:36 2019 +0800

    mmc: sdhci-sprd: clear the UHS-I modes read from registers
    
    [ Upstream commit 2f765c175e1d1acae911f889e71e5933c6488929 ]
    
    sprd's sd host controller supports SDR50/SDR104/DDR50 though, the UHS-I
    mode used by the specific card can be selected via devicetree only.
    
    Fixes: fb8bd90f83c4 ("mmc: sdhci-sprd: Add Spreadtrum's initial host controller")
    Signed-off-by: Chunyan Zhang <chunyan.zhang@unisoc.com>
    Signed-off-by: Chunyan Zhang <zhang.lyra@gmail.com>
    Reviewed-by: Baolin Wang <baolin.wang@linaro.org>
    Tested-by: Baolin Wang <baolin.wang@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b018fcb922507e878f4fee3fd1c479e02e7deee8
Author: Denis Kenzior <denkenz@gmail.com>
Date:   Tue Aug 27 17:41:20 2019 -0500

    mac80211: Correctly set noencrypt for PAE frames
    
    commit f8b43c5cf4b62a19f2210a0f5367b84e1eff1ab9 upstream.
    
    The noencrypt flag was intended to be set if the "frame was received
    unencrypted" according to include/uapi/linux/nl80211.h.  However, the
    current behavior is opposite of this.
    
    Cc: stable@vger.kernel.org
    Fixes: 018f6fbf540d ("mac80211: Send control port frames over nl80211")
    Signed-off-by: Denis Kenzior <denkenz@gmail.com>
    Link: https://lore.kernel.org/r/20190827224120.14545-3-denkenz@gmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08392de0ccc790c6892b1c42a6325eb3fc7b9fa9
Author: Denis Kenzior <denkenz@gmail.com>
Date:   Tue Aug 27 17:41:19 2019 -0500

    mac80211: Don't memset RXCB prior to PAE intercept
    
    commit c8a41c6afa27b8c3f61622dfd882b912da9d6721 upstream.
    
    In ieee80211_deliver_skb_to_local_stack intercepts EAPoL frames if
    mac80211 is configured to do so and forwards the contents over nl80211.
    During this process some additional data is also forwarded, including
    whether the frame was received encrypted or not.  Unfortunately just
    prior to the call to ieee80211_deliver_skb_to_local_stack, skb->cb is
    cleared, resulting in incorrect data being exposed over nl80211.
    
    Fixes: 018f6fbf540d ("mac80211: Send control port frames over nl80211")
    Cc: stable@vger.kernel.org
    Signed-off-by: Denis Kenzior <denkenz@gmail.com>
    Link: https://lore.kernel.org/r/20190827224120.14545-2-denkenz@gmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e118994cea848c5b38cccab69a70357ad610fee
Author: Alexander Wetzel <alexander@wetzel-home.de>
Date:   Mon Aug 5 14:34:00 2019 +0200

    cfg80211: Fix Extended Key ID key install checks
    
    commit b67fd72e84a88cae64cea8ab47ccdaab3bb3094d upstream.
    
    Fix two shortcomings in the Extended Key ID API:
    
     1) Allow the userspace to install pairwise keys using keyid 1 without
        NL80211_KEY_NO_TX set. This allows the userspace to install and
        activate pairwise keys with keyid 1 in the same way as for keyid 0,
        simplifying the API usage for e.g. FILS and FT key installs.
    
     2) IEEE 802.11 - 2016 restricts Extended Key ID usage to CCMP/GCMP
        ciphers in IEEE 802.11 - 2016 "9.4.2.25.4 RSN capabilities".
        Enforce that when installing a key.
    
    Cc: stable@vger.kernel.org # 5.2
    Fixes: 6cdd3979a2bd ("nl80211/cfg80211: Extended Key ID support")
    Signed-off-by: Alexander Wetzel <alexander@wetzel-home.de>
    Link: https://lore.kernel.org/r/20190805123400.51567-1-alexander@wetzel-home.de
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b14f5ba7490e2b5edb80621745e60d3122c4297d
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Aug 1 09:30:33 2019 +0200

    mac80211: fix possible sta leak
    
    commit 5fd2f91ad483baffdbe798f8a08f1b41442d1e24 upstream.
    
    If TDLS station addition is rejected, the sta memory is leaked.
    Avoid this by moving the check before the allocation.
    
    Cc: stable@vger.kernel.org
    Fixes: 7ed5285396c2 ("mac80211: don't initiate TDLS connection if station is not associated to AP")
    Link: https://lore.kernel.org/r/20190801073033.7892-1-johannes@sipsolutions.net
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cd42050aac65a135a94be3527a5ed489ed0a776
Author: Hodaszi, Robert <Robert.Hodaszi@digi.com>
Date:   Fri Jun 14 13:16:01 2019 +0000

    Revert "cfg80211: fix processing world regdomain when non modular"
    
    commit 0d31d4dbf38412f5b8b11b4511d07b840eebe8cb upstream.
    
    This reverts commit 96cce12ff6e0 ("cfg80211: fix processing world
    regdomain when non modular").
    
    Re-triggering a reg_process_hint with the last request on all events,
    can make the regulatory domain fail in case of multiple WiFi modules. On
    slower boards (espacially with mdev), enumeration of the WiFi modules
    can end up in an intersected regulatory domain, and user cannot set it
    with 'iw reg set' anymore.
    
    This is happening, because:
    - 1st module enumerates, queues up a regulatory request
    - request gets processed by __reg_process_hint_driver():
      - checks if previous was set by CORE -> yes
        - checks if regulator domain changed -> yes, from '00' to e.g. 'US'
          -> sends request to the 'crda'
    - 2nd module enumerates, queues up a regulator request (which triggers
      the reg_todo() work)
    - reg_todo() -> reg_process_pending_hints() sees, that the last request
      is not processed yet, so it tries to process it again.
      __reg_process_hint driver() will run again, and:
      - checks if the last request's initiator was the core -> no, it was
        the driver (1st WiFi module)
      - checks, if the previous initiator was the driver -> yes
        - checks if the regulator domain changed -> yes, it was '00' (set by
          core, and crda call did not return yet), and should be changed to 'US'
    
    ------> __reg_process_hint_driver calls an intersect
    
    Besides, the reg_process_hint call with the last request is meaningless
    since the crda call has a timeout work. If that timeout expires, the
    first module's request will lost.
    
    Cc: stable@vger.kernel.org
    Fixes: 96cce12ff6e0 ("cfg80211: fix processing world regdomain when non modular")
    Signed-off-by: Robert Hodaszi <robert.hodaszi@digi.com>
    Link: https://lore.kernel.org/r/20190614131600.GA13897@a1-hr
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6a0d1f9bf08923bb53bbd4b72f0ff6ce2b2718a
Author: Shakeel Butt <shakeelb@google.com>
Date:   Fri Aug 30 16:04:53 2019 -0700

    mm: memcontrol: fix percpu vmstats and vmevents flush
    
    commit 6c1c280805ded72eceb2afc1a0d431b256608554 upstream.
    
    Instead of using raw_cpu_read() use per_cpu() to read the actual data of
    the corresponding cpu otherwise we will be reading the data of the
    current cpu for the number of online CPUs.
    
    Link: http://lkml.kernel.org/r/20190829203110.129263-1-shakeelb@google.com
    Fixes: bb65f89b7d3d ("mm: memcontrol: flush percpu vmevents before releasing memcg")
    Fixes: c350a99ea2b1 ("mm: memcontrol: flush percpu vmstats before releasing memcg")
    Signed-off-by: Shakeel Butt <shakeelb@google.com>
    Acked-by: Roman Gushchin <guro@fb.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bba5bcb0cc0ea3d493e5c4a9b72d8b77dff0fbd6
Author: Roman Gushchin <guro@fb.com>
Date:   Fri Aug 30 16:04:39 2019 -0700

    mm, memcg: partially revert "mm/memcontrol.c: keep local VM counters in sync with the hierarchical ones"
    
    commit b4c46484dc3fa3721d68fdfae85c1d7b1f6b5472 upstream.
    
    Commit 766a4c19d880 ("mm/memcontrol.c: keep local VM counters in sync
    with the hierarchical ones") effectively decreased the precision of
    per-memcg vmstats_local and per-memcg-per-node lruvec percpu counters.
    
    That's good for displaying in memory.stat, but brings a serious
    regression into the reclaim process.
    
    One issue I've discovered and debugged is the following:
    lruvec_lru_size() can return 0 instead of the actual number of pages in
    the lru list, preventing the kernel to reclaim last remaining pages.
    Result is yet another dying memory cgroups flooding.  The opposite is
    also happening: scanning an empty lru list is the waste of cpu time.
    
    Also, inactive_list_is_low() can return incorrect values, preventing the
    active lru from being scanned and freed.  It can fail both because the
    size of active and inactive lists are inaccurate, and because the number
    of workingset refaults isn't precise.  In other words, the result is
    pretty random.
    
    I'm not sure, if using the approximate number of slab pages in
    count_shadow_number() is acceptable, but issues described above are
    enough to partially revert the patch.
    
    Let's keep per-memcg vmstat_local batched (they are only used for
    displaying stats to the userspace), but keep lruvec stats precise.  This
    change fixes the dead memcg flooding on my setup.
    
    Link: http://lkml.kernel.org/r/20190817004726.2530670-1-guro@fb.com
    Fixes: 766a4c19d880 ("mm/memcontrol.c: keep local VM counters in sync with the hierarchical ones")
    Signed-off-by: Roman Gushchin <guro@fb.com>
    Acked-by: Yafang Shao <laoar.shao@gmail.com>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8706ffe20444c7056a740d53b3093295522f447e
Author: Chunyan Zhang <chunyan.zhang@unisoc.com>
Date:   Wed Aug 28 10:17:35 2019 +0800

    mms: sdhci-sprd: add SDHCI_QUIRK_BROKEN_CARD_DETECTION
    
    commit 4324e54bbea0107b054336f20075a26939b2bd51 upstream.
    
    sprd's sd host controller doesn't support detection to
    card insert or remove.
    
    Fixes: fb8bd90f83c4 ("mmc: sdhci-sprd: Add Spreadtrum's initial host controller")
    Signed-off-by: Chunyan Zhang <chunyan.zhang@unisoc.com>
    Signed-off-by: Chunyan Zhang <zhang.lyra@gmail.com>
    Reviewed-by: Baolin Wang <baolin.wang@linaro.org>
    Tested-by: Baolin Wang <baolin.wang@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7c7531ac9a330f74b0c4162a1796e5508e73170
Author: Stanislaw Gruszka <sgruszka@redhat.com>
Date:   Thu Jul 18 12:38:10 2019 +0200

    mt76: mt76x0u: do not reset radio on resume
    
    commit 8f2d163cb26da87e7d8e1677368b8ba1ba4d30b3 upstream.
    
    On some machines mt76x0u firmware can hung during resume,
    what result on messages like below:
    
    [  475.480062] mt76x0 1-8:1.0: Error: MCU response pre-completed!
    [  475.990066] mt76x0 1-8:1.0: Error: send MCU cmd failed:-110
    [  475.990075] mt76x0 1-8:1.0: Error: MCU response pre-completed!
    [  476.500003] mt76x0 1-8:1.0: Error: send MCU cmd failed:-110
    [  476.500012] mt76x0 1-8:1.0: Error: MCU response pre-completed!
    [  477.010046] mt76x0 1-8:1.0: Error: send MCU cmd failed:-110
    [  477.010055] mt76x0 1-8:1.0: Error: MCU response pre-completed!
    [  477.529997] mt76x0 1-8:1.0: Error: send MCU cmd failed:-110
    [  477.530006] mt76x0 1-8:1.0: Error: MCU response pre-completed!
    [  477.824907] mt76x0 1-8:1.0: Error: send MCU cmd failed:-71
    [  477.824916] mt76x0 1-8:1.0: Error: MCU response pre-completed!
    [  477.825029] usb 1-8: USB disconnect, device number 6
    
    and possible whole system freeze.
    
    This can be avoided, if we do not perform mt76x0_chip_onoff() reset.
    
    Cc: stable@vger.kernel.org
    Fixes: 134b2d0d1fcf ("mt76x0: init files")
    Signed-off-by: Stanislaw Gruszka <sgruszka@redhat.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 839e96131567369c509d4c8955686ed6558b88f7
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Aug 15 17:26:17 2019 -0400

    SUNRPC: Don't handle errors if the bind/connect succeeded
    
    commit bd736ed3e2d1088d9b4050f727342e1e619c3841 upstream.
    
    Don't handle errors in call_bind_status()/call_connect_status()
    if it turns out that a previous call caused it to succeed.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Cc: stable@vger.kernel.org # v5.1+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90ff6dd4ced610dac6c32dbeaa3899aead7b2908
Author: Gary R Hook <gary.hook@amd.com>
Date:   Mon Aug 19 22:23:27 2019 +0000

    crypto: ccp - Ignore unconfigured CCP device on suspend/resume
    
    commit 5871cd93692c8071fb9358daccb715b5081316ac upstream.
    
    If a CCP is unconfigured (e.g. there are no available queues) then
    there will be no data structures allocated for the device. Thus, we
    must check for validity of a pointer before trying to access structure
    members.
    
    Fixes: 720419f01832f ("crypto: ccp - Introduce the AMD Secure Processor device")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Gary R Hook <gary.hook@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3c3c233738df7baf8d0dc7a0ef8d4c0e724ca5a0
Author: Nadav Amit <namit@vmware.com>
Date:   Tue Aug 20 13:26:38 2019 -0700

    VMCI: Release resource if the work is already queued
    
    commit ba03a9bbd17b149c373c0ea44017f35fc2cd0f28 upstream.
    
    Francois reported that VMware balloon gets stuck after a balloon reset,
    when the VMCI doorbell is removed. A similar error can occur when the
    balloon driver is removed with the following splat:
    
    [ 1088.622000] INFO: task modprobe:3565 blocked for more than 120 seconds.
    [ 1088.622035]       Tainted: G        W         5.2.0 #4
    [ 1088.622087] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [ 1088.622205] modprobe        D    0  3565   1450 0x00000000
    [ 1088.622210] Call Trace:
    [ 1088.622246]  __schedule+0x2a8/0x690
    [ 1088.622248]  schedule+0x2d/0x90
    [ 1088.622250]  schedule_timeout+0x1d3/0x2f0
    [ 1088.622252]  wait_for_completion+0xba/0x140
    [ 1088.622320]  ? wake_up_q+0x80/0x80
    [ 1088.622370]  vmci_resource_remove+0xb9/0xc0 [vmw_vmci]
    [ 1088.622373]  vmci_doorbell_destroy+0x9e/0xd0 [vmw_vmci]
    [ 1088.622379]  vmballoon_vmci_cleanup+0x6e/0xf0 [vmw_balloon]
    [ 1088.622381]  vmballoon_exit+0x18/0xcc8 [vmw_balloon]
    [ 1088.622394]  __x64_sys_delete_module+0x146/0x280
    [ 1088.622408]  do_syscall_64+0x5a/0x130
    [ 1088.622410]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [ 1088.622415] RIP: 0033:0x7f54f62791b7
    [ 1088.622421] Code: Bad RIP value.
    [ 1088.622421] RSP: 002b:00007fff2a949008 EFLAGS: 00000206 ORIG_RAX: 00000000000000b0
    [ 1088.622426] RAX: ffffffffffffffda RBX: 000055dff8b55d00 RCX: 00007f54f62791b7
    [ 1088.622426] RDX: 0000000000000000 RSI: 0000000000000800 RDI: 000055dff8b55d68
    [ 1088.622427] RBP: 000055dff8b55d00 R08: 00007fff2a947fb1 R09: 0000000000000000
    [ 1088.622427] R10: 00007f54f62f5cc0 R11: 0000000000000206 R12: 000055dff8b55d68
    [ 1088.622428] R13: 0000000000000001 R14: 000055dff8b55d68 R15: 00007fff2a94a3f0
    
    The cause for the bug is that when the "delayed" doorbell is invoked, it
    takes a reference on the doorbell entry and schedules work that is
    supposed to run the appropriate code and drop the doorbell entry
    reference. The code ignores the fact that if the work is already queued,
    it will not be scheduled to run one more time. As a result one of the
    references would not be dropped. When the code waits for the reference
    to get to zero, during balloon reset or module removal, it gets stuck.
    
    Fix it. Drop the reference if schedule_work() indicates that the work is
    already queued.
    
    Note that this bug got more apparent (or apparent at all) due to
    commit ce664331b248 ("vmw_balloon: VMCI_DOORBELL_SET does not check status").
    
    Fixes: 83e2ec765be03 ("VMCI: doorbell implementation.")
    Reported-by: Francois Rigault <rigault.francois@gmail.com>
    Cc: Jorgen Hansen <jhansen@vmware.com>
    Cc: Adit Ranadive <aditr@vmware.com>
    Cc: Alexios Zavras <alexios.zavras@intel.com>
    Cc: Vishnu DASA <vdasa@vmware.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Nadav Amit <namit@vmware.com>
    Reviewed-by: Vishnu Dasa <vdasa@vmware.com>
    Link: https://lore.kernel.org/r/20190820202638.49003-1-namit@vmware.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6992ae83866a4f277191d013eb205197050020e1
Author: John Garry <john.garry@huawei.com>
Date:   Tue Jul 30 21:29:56 2019 +0800

    bus: hisi_lpc: Add .remove method to avoid driver unbind crash
    
    commit 10e62b47973b0b0ceda076255bcb147b83e20517 upstream.
    
    The original driver author seemed to be under the impression that a driver
    cannot be removed if it does not have a .remove method. Or maybe if it is
    a built-in platform driver.
    
    This is not true. This crash can be created:
    
    root@ubuntu:/sys/bus/platform/drivers/hisi-lpc# echo HISI0191\:00 > unbind
    root@ubuntu:/sys/bus/platform/drivers/hisi-lpc# ipmitool raw 6 1
     Unable to handle kernel paging request at virtual address ffff000010035010
     Mem abort info:
       ESR = 0x96000047
       Exception class = DABT (current EL), IL = 32 bits
       SET = 0, FnV = 0
       EA = 0, S1PTW = 0
     Data abort info:
       ISV = 0, ISS = 0x00000047
       CM = 0, WnR = 1
     swapper pgtable: 4k pages, 48-bit VAs, pgdp=000000000118b000
     [ffff000010035010] pgd=0000041ffbfff003, pud=0000041ffbffe003, pmd=0000041ffbffd003, pte=0000000000000000
     Internal error: Oops: 96000047 [#1] PREEMPT SMP
     Modules linked in:
     CPU: 17 PID: 1473 Comm: ipmitool Not tainted 5.2.0-rc5-00003-gf68c53b414a3-dirty #198
     Hardware name: Huawei Taishan 2280 /D05, BIOS Hisilicon D05 IT21 Nemo 2.0 RC0 04/18/2018
     pstate: 20000085 (nzCv daIf -PAN -UAO)
     pc : hisi_lpc_target_in+0x7c/0x120
     lr : hisi_lpc_target_in+0x70/0x120
     sp : ffff00001efe3930
     x29: ffff00001efe3930 x28: ffff841f9f599200
     x27: 0000000000000002 x26: 0000000000000000
     x25: 0000000000000080 x24: 00000000000000e4
     x23: 0000000000000000 x22: 0000000000000064
     x21: ffff801fb667d280 x20: 0000000000000001
     x19: ffff00001efe39ac x18: 0000000000000000
     x17: 0000000000000000 x16: 0000000000000000
     x15: 0000000000000000 x14: 0000000000000000
     x13: 0000000000000000 x12: 0000000000000000
     x11: 0000000000000000 x10: 0000000000000000
     x9 : 0000000000000000 x8 : ffff841febe60340
     x7 : ffff801fb55c52e8 x6 : 0000000000000000
     x5 : 0000000000ffc0e3 x4 : 0000000000000001
     x3 : ffff801fb667d280 x2 : 0000000000000001
     x1 : ffff000010035010 x0 : ffff000010035000
     Call trace:
      hisi_lpc_target_in+0x7c/0x120
      hisi_lpc_comm_in+0x88/0x98
      logic_inb+0x5c/0xb8
      port_inb+0x18/0x20
      bt_event+0x38/0x808
      smi_event_handler+0x4c/0x5a0
      check_start_timer_thread.part.4+0x40/0x58
      sender+0x78/0x88
      smi_send.isra.6+0x94/0x108
      i_ipmi_request+0x2c4/0x8f8
      ipmi_request_settime+0x124/0x160
      handle_send_req+0x19c/0x208
      ipmi_ioctl+0x2c0/0x990
      do_vfs_ioctl+0xb8/0x8f8
      ksys_ioctl+0x80/0xb8
      __arm64_sys_ioctl+0x1c/0x28
      el0_svc_common.constprop.0+0x64/0x160
      el0_svc_handler+0x28/0x78
      el0_svc+0x8/0xc
     Code: 941d1511 aa0003f9 f94006a0 91004001 (b9000034)
     ---[ end trace aa842b86af7069e4 ]---
    
    The problem here is that the host goes away but the associated logical PIO
    region remains registered, as do the children devices.
    
    Fix by adding a .remove method to tidy-up by removing the child devices
    and unregistering the logical PIO region.
    
    Cc: stable@vger.kernel.org
    Fixes: adf38bb0b595 ("HISI LPC: Support the LPC host on Hip06/Hip07 with DT bindings")
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Wei Xu <xuwei5@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a6caa4e3f21032cc98812db307386f462698269
Author: John Garry <john.garry@huawei.com>
Date:   Tue Jul 30 21:29:55 2019 +0800

    bus: hisi_lpc: Unregister logical PIO range to avoid potential use-after-free
    
    commit 1b15a5632a809ab57d403fd972ca68785363b654 upstream.
    
    If, after registering a logical PIO range, the driver probe later fails,
    the logical PIO range memory will be released automatically.
    
    This causes an issue, in that the logical PIO range is not unregistered
    and the released range memory may be later referenced.
    
    Fix by unregistering the logical PIO range.
    
    And since we now unregister the logical PIO range for probe failure, avoid
    the special ordering of setting logical PIO range ops, which was the
    previous (poor) attempt at a safeguard against this.
    
    Cc: stable@vger.kernel.org
    Fixes: adf38bb0b595 ("HISI LPC: Support the LPC host on Hip06/Hip07 with DT bindings")
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Wei Xu <xuwei5@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e3bf9dfdaf4e3c5c00faa77bf5feac64ca4a860
Author: Andrew Cooks <andrew.cooks@opengear.com>
Date:   Fri Aug 2 14:52:46 2019 +0200

    i2c: piix4: Fix port selection for AMD Family 16h Model 30h
    
    commit c7c06a1532f3fe106687ac82a13492c6a619ff1c upstream.
    
    Family 16h Model 30h SMBus controller needs the same port selection fix
    as described and fixed in commit 0fe16195f891 ("i2c: piix4: Fix SMBus port
    selection for AMD Family 17h chips")
    
    commit 6befa3fde65f ("i2c: piix4: Support alternative port selection
    register") also fixed the port selection for Hudson2, but unfortunately
    this is not the exact same device and the AMD naming and PCI Device IDs
    aren't particularly helpful here.
    
    The SMBus port selection register is common to the following Families
    and models, as documented in AMD's publicly available BIOS and Kernel
    Developer Guides:
    
     50742 - Family 15h Model 60h-6Fh (PCI_DEVICE_ID_AMD_KERNCZ_SMBUS)
     55072 - Family 15h Model 70h-7Fh (PCI_DEVICE_ID_AMD_KERNCZ_SMBUS)
     52740 - Family 16h Model 30h-3Fh (PCI_DEVICE_ID_AMD_HUDSON2_SMBUS)
    
    The Hudson2 PCI Device ID (PCI_DEVICE_ID_AMD_HUDSON2_SMBUS) is shared
    between Bolton FCH and Family 16h Model 30h, but the location of the
    SmBus0Sel port selection bits are different:
    
     51192 - Bolton Register Reference Guide
    
    We distinguish between Bolton and Family 16h Model 30h using the PCI
    Revision ID:
    
      Bolton is device 0x780b, revision 0x15
      Family 16h Model 30h is device 0x780b, revision 0x1F
      Family 15h Model 60h and 70h are both device 0x790b, revision 0x4A.
    
    The following additional public AMD BKDG documents were checked and do
    not share the same port selection register:
    
     42301 - Family 15h Model 00h-0Fh doesn't mention any
     42300 - Family 15h Model 10h-1Fh doesn't mention any
     49125 - Family 15h Model 30h-3Fh doesn't mention any
    
     48751 - Family 16h Model 00h-0Fh uses the previously supported
             index register SB800_PIIX4_PORT_IDX_ALT at 0x2e
    
    Signed-off-by: Andrew Cooks <andrew.cooks@opengear.com>
    Signed-off-by: Jean Delvare <jdelvare@suse.de>
    Cc: stable@vger.kernel.org [v4.6+]
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 712029329a58bad66fa95e105bbce22c657e5c5a
Author: Lyude Paul <lyude@redhat.com>
Date:   Fri Aug 23 16:52:51 2019 -0400

    drm/i915: Call dma_set_max_seg_size() in i915_driver_hw_probe()
    
    commit 32f0a982650b123bdab36865617d3e03ebcacf3b upstream.
    
    Currently, we don't call dma_set_max_seg_size() for i915 because we
    intentionally do not limit the segment length that the device supports.
    However, this results in a warning being emitted if we try to map
    anything larger than SZ_64K on a kernel with CONFIG_DMA_API_DEBUG_SG
    enabled:
    
    [    7.751926] DMA-API: i915 0000:00:02.0: mapping sg segment longer
    than device claims to support [len=98304] [max=65536]
    [    7.751934] WARNING: CPU: 5 PID: 474 at kernel/dma/debug.c:1220
    debug_dma_map_sg+0x20f/0x340
    
    This was originally brought up on
    https://bugs.freedesktop.org/show_bug.cgi?id=108517 , and the consensus
    there was it wasn't really useful to set a limit (and that dma-debug
    isn't really all that useful for i915 in the first place). Unfortunately
    though, CONFIG_DMA_API_DEBUG_SG is enabled in the debug configs for
    various distro kernels. Since a WARN_ON() will disable automatic problem
    reporting (and cause any CI with said option enabled to start
    complaining), we really should just fix the problem.
    
    Note that as me and Chris Wilson discussed, the other solution for this
    would be to make DMA-API not make such assumptions when a driver hasn't
    explicitly set a maximum segment size. But, taking a look at the commit
    which originally introduced this behavior, commit 78c47830a5cb
    ("dma-debug: check scatterlist segments"), there is an explicit mention
    of this assumption and how it applies to devices with no segment size:
    
            Conversely, devices which are less limited than the rather
            conservative defaults, or indeed have no limitations at all
            (e.g. GPUs with their own internal MMU), should be encouraged to
            set appropriate dma_parms, as they may get more efficient DMA
            mapping performance out of it.
    
    So unless there's any concerns (I'm open to discussion!), let's just
    follow suite and call dma_set_max_seg_size() with UINT_MAX as our limit
    to silence any warnings.
    
    Changes since v3:
    * Drop patch for enabling CONFIG_DMA_API_DEBUG_SG in CI. It looks like
      just turning it on causes the kernel to spit out bogus WARN_ONs()
      during some igt tests which would otherwise require teaching igt to
      disable the various DMA-API debugging options causing this. This is
      too much work to be worth it, since DMA-API debugging is useless for
      us. So, we'll just settle with this single patch to squelch WARN_ONs()
      during driver load for users that have CONFIG_DMA_API_DEBUG_SG turned
      on for some reason.
    * Move dma_set_max_seg_size() call into i915_driver_hw_probe() - Chris
      Wilson
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: <stable@vger.kernel.org> # v4.18+
    Link: https://patchwork.freedesktop.org/patch/msgid/20190823205251.14298-1-lyude@redhat.com
    (cherry picked from commit acd674af95d3f627062007429b9c195c6b32361d)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0573f44d42b15825402e6900d216b685244978e9
Author: Xiong Zhang <xiong.y.zhang@intel.com>
Date:   Tue Aug 20 13:46:17 2019 +0800

    drm/i915: Don't deballoon unused ggtt drm_mm_node in linux guest
    
    commit 0a3dfbb5cd9033752639ef33e319c2f2863c713a upstream.
    
    The following call trace may exist in linux guest dmesg when guest i915
    driver is unloaded.
    [   90.776610] [drm:vgt_deballoon_space.isra.0 [i915]] deballoon space: range [0x0 - 0x0] 0 KiB.
    [   90.776621] BUG: unable to handle kernel NULL pointer dereference at 00000000000000c0
    [   90.776691] IP: drm_mm_remove_node+0x4d/0x320 [drm]
    [   90.776718] PGD 800000012c7d0067 P4D 800000012c7d0067 PUD 138e4c067 PMD 0
    [   90.777091] task: ffff9adab60f2f00 task.stack: ffffaf39c0fe0000
    [   90.777142] RIP: 0010:drm_mm_remove_node+0x4d/0x320 [drm]
    [   90.777573] Call Trace:
    [   90.777653]  intel_vgt_deballoon+0x4c/0x60 [i915]
    [   90.777729]  i915_ggtt_cleanup_hw+0x121/0x190 [i915]
    [   90.777792]  i915_driver_unload+0x145/0x180 [i915]
    [   90.777856]  i915_pci_remove+0x15/0x20 [i915]
    [   90.777890]  pci_device_remove+0x3b/0xc0
    [   90.777916]  device_release_driver_internal+0x157/0x220
    [   90.777945]  driver_detach+0x39/0x70
    [   90.777967]  bus_remove_driver+0x51/0xd0
    [   90.777990]  pci_unregister_driver+0x23/0x90
    [   90.778019]  SyS_delete_module+0x1da/0x240
    [   90.778045]  entry_SYSCALL_64_fastpath+0x24/0x87
    [   90.778072] RIP: 0033:0x7f34312af067
    [   90.778092] RSP: 002b:00007ffdea3da0d8 EFLAGS: 00000206
    [   90.778297] RIP: drm_mm_remove_node+0x4d/0x320 [drm] RSP: ffffaf39c0fe3dc0
    [   90.778344] ---[ end trace f4b1bc8305fc59dd ]---
    
    Four drm_mm_node are used to reserve guest ggtt space, but some of them
    may be skipped and not initialised due to space constraints in
    intel_vgt_balloon(). If drm_mm_remove_node() is called with
    uninitialized drm_mm_node, the above call trace occurs.
    
    This patch check drm_mm_node's validity before calling
    drm_mm_remove_node().
    
    Fixes: ff8f797557c7("drm/i915: return the correct usable aperture size under gvt environment")
    Cc: stable@vger.kernel.org
    Signed-off-by: Xiong Zhang <xiong.y.zhang@intel.com>
    Acked-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Link: https://patchwork.freedesktop.org/patch/msgid/1566279978-9659-1-git-send-email-xiong.y.zhang@intel.com
    (cherry picked from commit 4776f3529d6b1e47f02904ad1d264d25ea22b27b)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f78e0d8172f35ae96b7d0728142d46eccbe38283
Author: Aaron Liu <aaron.liu@amd.com>
Date:   Tue Aug 27 22:59:45 2019 +0800

    drm/amdgpu: fix GFXOFF on Picasso and Raven2
    
    commit 41940ff50f6c347f3541163702566cd526200d98 upstream.
    
    For picasso(adev->pdev->device == 0x15d8)&raven2(adev->rev_id >= 0x8),
    firmware is sufficient to support gfxoff.
    In commit 98f58ada2d37e, for picasso&raven2,
    return directly and cause gfxoff disabled.
    
    Fixes: 98f58ada2d37 ("drm/amdgpu/gfx9: update pg_flags after determining if gfx off is possible")
    Reviewed-by: Huang Rui <ray.huang@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Aaron Liu <aaron.liu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c7ee7bd4f7e230f7672dd4986ed0db565686b97
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Tue Aug 27 17:33:32 2019 +0800

    drm/amdgpu: Add APTX quirk for Dell Latitude 5495
    
    commit 317a3aaef94d73ba6be88aea11b41bb631b2d581 upstream.
    
    Needs ATPX rather than _PR3 to really turn off the dGPU. This can save
    ~5W when dGPU is runtime-suspended.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71817079db2f4a8c0676b7b02af45ba4b585ffe1
Author: John Garry <john.garry@huawei.com>
Date:   Tue Jul 30 21:29:54 2019 +0800

    lib: logic_pio: Add logic_pio_unregister_range()
    
    commit b884e2de2afc68ce30f7093747378ef972dde253 upstream.
    
    Add a function to unregister a logical PIO range.
    
    Logical PIO space can still be leaked when unregistering certain
    LOGIC_PIO_CPU_MMIO regions, but this acceptable for now since there are no
    callers to unregister LOGIC_PIO_CPU_MMIO regions, and the logical PIO
    region allocation scheme would need significant work to improve this.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Wei Xu <xuwei5@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a6e7568654317183106fcd8e4641c41d5bdf6e4
Author: John Garry <john.garry@huawei.com>
Date:   Tue Jul 30 21:29:53 2019 +0800

    lib: logic_pio: Avoid possible overlap for unregistering regions
    
    commit 0a27142bd1ee259e24a0be2b0133e5ca5df8da91 upstream.
    
    The code was originally written to not support unregistering logical PIO
    regions.
    
    To accommodate supporting unregistering logical PIO regions, subtly modify
    LOGIC_PIO_CPU_MMIO region registration code, such that the "end" of the
    registered regions is the "end" of the last region, and not the sum of
    the sizes of all the registered regions.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Wei Xu <xuwei5@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94cfb33438e03f4c9abcc41f10dcd13b32c9d349
Author: John Garry <john.garry@huawei.com>
Date:   Tue Jul 30 21:29:52 2019 +0800

    lib: logic_pio: Fix RCU usage
    
    commit 06709e81c668f5f56c65b806895b278517bd44e0 upstream.
    
    The traversing of io_range_list with list_for_each_entry_rcu()
    is not properly protected by rcu_read_lock() and rcu_read_unlock(),
    so add them.
    
    These functions mark the critical section scope where the list is
    protected for the reader, it cannot be  "reclaimed". Any updater - in
    this case, the logical PIO registration functions - cannot update the
    list until the reader exits this critical section.
    
    In addition, the list traversing used in logic_pio_register_range()
    does not need to use the rcu variant.
    
    This is because we are already using io_range_mutex to guarantee mutual
    exclusion from mutating the list.
    
    Cc: stable@vger.kernel.org
    Fixes: 031e3601869c ("lib: Add generic PIO mapping method")
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Wei Xu <xuwei5@hisilicon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0e3650991cd69492258e1fcfb9731d86b4e38e9
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Fri Aug 16 08:37:26 2019 -0400

    Revert "NFSv4/flexfiles: Abort I/O early if the layout segment was invalidated"
    
    commit d5711920ec6e578f51db95caa6f185f5090b865e upstream.
    
    This reverts commit a79f194aa4879e9baad118c3f8bb2ca24dbef765.
    The mechanism for aborting I/O is racy, since we are not guaranteed that
    the request is asleep while we're changing both task->tk_status and
    task->tk_action.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Cc: stable@vger.kernel.org # v5.1
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 666a848c6797090c8bafdc1a14876b020f4dfac9
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Aug 12 18:04:36 2019 -0400

    NFS: Ensure O_DIRECT reports an error if the bytes read/written is 0
    
    commit eb2c50da9e256dbbb3ff27694440e4c1900cfef8 upstream.
    
    If the attempt to resend the I/O results in no bytes being read/written,
    we must ensure that we report the error.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Fixes: 0a00b77b331a ("nfs: mirroring support for direct io")
    Cc: stable@vger.kernel.org # v3.20+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fd824dc16de2f1aa4607fcc7d17f833ea513cf8
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Aug 12 15:19:54 2019 -0400

    NFSv4/pnfs: Fix a page lock leak in nfs_pageio_resend()
    
    commit f4340e9314dbfadc48758945f85fc3b16612d06f upstream.
    
    If the attempt to resend the pages fails, we need to ensure that we
    clean up those pages that were not transmitted.
    
    Fixes: d600ad1f2bdb ("NFS41: pop some layoutget errors to application")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Cc: stable@vger.kernel.org # v4.5+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3a2180a5720e984e731f6572747a9a373c0c84d
Author: Raul E Rangel <rrangel@chromium.org>
Date:   Tue Aug 27 11:36:19 2019 -0600

    lkdtm/bugs: fix build error in lkdtm_EXHAUST_STACK
    
    commit b9bc7b8b1e9e815b231c1ca0b566ee723f480987 upstream.
    
    lkdtm/bugs.c:94:2: error: format '%d' expects argument of type 'int', but argument 2 has type 'long unsigned int' [-Werror=format=]
      pr_info("Calling function with %d frame size to depth %d ...\n",
      ^
    THREAD_SIZE is defined as a unsigned long, cast CONFIG_FRAME_WARN to
    unsigned long as well.
    
    Fixes: 24cccab42c419 ("lkdtm/bugs: Adjust recursion test to avoid elision")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Raul E Rangel <rrangel@chromium.org>
    Acked-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/20190827173619.170065-1-rrangel@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 61c6f2b0000afaaa11ab86db35c8c33328859626
Author: Eddie James <eajames@linux.ibm.com>
Date:   Tue Aug 27 12:12:49 2019 +0800

    fsi: scom: Don't abort operations for minor errors
    
    commit 8919dfcb31161fae7d607bbef5247e5e82fd6457 upstream.
    
    The scom driver currently fails out of operations if certain system
    errors are flagged in the status register; system checkstop, special
    attention, or recoverable error. These errors won't impact the ability
    of the scom engine to perform operations, so the driver should continue
    under these conditions.
    Also, don't do a PIB reset for these conditions, since it won't help.
    
    Fixes: 6b293258cded ("fsi: scom: Major overhaul")
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Jeremy Kerr <jk@ozlabs.org>
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Link: https://lore.kernel.org/r/20190827041249.13381-1-jk@ozlabs.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d886915cd91b4393ab7649af6021a74fe4441270
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Aug 22 14:52:12 2019 +0100

    typec: tcpm: fix a typo in the comparison of pdo_max_voltage
    
    commit a684d8fd87182090ee96e34519ecdf009cef093a upstream.
    
    There appears to be a typo in the comparison of pdo_max_voltage[i]
    with the previous value, currently it is checking against the
    array pdo_min_voltage rather than pdo_max_voltage. I believe this
    is a typo. Fix this.
    
    Addresses-Coverity: ("Copy-paste error")
    Fixes: 5007e1b5db73 ("typec: tcpm: Validate source and sink caps")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20190822135212.10195-1-colin.king@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 82b520267b49123db76188edd1f3aa0975f86fed
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Wed Aug 21 10:49:55 2019 +0300

    intel_th: pci: Add Tiger Lake support
    
    commit 9c78255fdde45c6b9a1ee30f652f7b34c727f5c7 upstream.
    
    This adds support for the Trace Hub in Tiger Lake PCH.
    
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: stable@vger.kernel.org # v4.14+
    Link: https://lore.kernel.org/r/20190821074955.3925-5-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c01033684f32089f685c283020ce4a7e093ca2b
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Wed Aug 21 10:49:54 2019 +0300

    intel_th: pci: Add support for another Lewisburg PCH
    
    commit 164eb56e3b64f3a816238d410c9efec7567a82ef upstream.
    
    Add support for the Trace Hub in another Lewisburg PCH.
    
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: stable@vger.kernel.org # v4.14+
    Link: https://lore.kernel.org/r/20190821074955.3925-4-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d36c706f854ce1c58bd0da838121bb920ff402ec
Author: Ding Xiang <dingxiang@cmss.chinamobile.com>
Date:   Wed Aug 21 10:49:52 2019 +0300

    stm class: Fix a double free of stm_source_device
    
    commit 961b6ffe0e2c403b09a8efe4a2e986b3c415391a upstream.
    
    In the error path of stm_source_register_device(), the kfree is
    unnecessary, as the put_device() before it ends up calling
    stm_source_device_release() to free stm_source_device, leading to
    a double free at the outer kfree() call. Remove it.
    
    Signed-off-by: Ding Xiang <dingxiang@cmss.chinamobile.com>
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Fixes: 7bd1d4093c2fa ("stm class: Introduce an abstraction for System Trace Module devices")
    Link: https://lore.kernel.org/linux-arm-kernel/1563354988-23826-1-git-send-email-dingxiang@cmss.chinamobile.com/
    Cc: stable@vger.kernel.org # v4.4+
    Link: https://lore.kernel.org/r/20190821074955.3925-2-alexander.shishkin@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba3e88a664c8fa0168fc58a891c9e9af62dd782a
Author: Chunyan Zhang <chunyan.zhang@unisoc.com>
Date:   Wed Aug 28 10:17:34 2019 +0800

    mmc: sdhci-sprd: add SDHCI_QUIRK2_PRESET_VALUE_BROKEN
    
    commit 6a526f66ab1494b63c71cd6639d9d96fd7216add upstream.
    
    The bit of PRESET_VAL_ENABLE in HOST_CONTROL2 register is reserved on
    sprd's sd host controller, set quirk2 to disable configuring this.
    
    Fixes: fb8bd90f83c4 ("mmc: sdhci-sprd: Add Spreadtrum's initial host controller")
    Signed-off-by: Chunyan Zhang <chunyan.zhang@unisoc.com>
    Signed-off-by: Chunyan Zhang <zhang.lyra@gmail.com>
    Reviewed-by: Baolin Wang <baolin.wang@linaro.org>
    Tested-by: Baolin Wang <baolin.wang@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77162751167c6873d06889af9835dd6b061a8d4d
Author: Chunyan Zhang <chunyan.zhang@unisoc.com>
Date:   Wed Aug 28 10:17:32 2019 +0800

    mmc: sdhci-sprd: fixed incorrect clock divider
    
    commit efdaf27517a892238e0dfa046cd91184b039d681 upstream.
    
    The register SDHCI_CLOCK_CONTROL should be cleared before config clock
    divider, otherwise the frequency configured maybe lower than we
    expected.
    
    Fixes: fb8bd90f83c4 ("mmc: sdhci-sprd: Add Spreadtrum's initial host controller")
    Signed-off-by: Chunyan Zhang <chunyan.zhang@unisoc.com>
    Signed-off-by: Chunyan Zhang <zhang.lyra@gmail.com>
    Reviewed-by: Baolin Wang <baolin.wang@linaro.org>
    Tested-by: Baolin Wang <baolin.wang@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a94076eed72e2c97e9ee1e9c753d5dd6a6835b4c
Author: Ulf Hansson <ulf.hansson@linaro.org>
Date:   Tue Aug 27 10:10:43 2019 +0200

    mmc: core: Fix init of SD cards reporting an invalid VDD range
    
    commit 72741084d903e65e121c27bd29494d941729d4a1 upstream.
    
    The OCR register defines the supported range of VDD voltages for SD cards.
    However, it has turned out that some SD cards reports an invalid voltage
    range, for example having bit7 set.
    
    When a host supports MMC_CAP2_FULL_PWR_CYCLE and some of the voltages from
    the invalid VDD range, this triggers the core to run a power cycle of the
    card to try to initialize it at the lowest common supported voltage.
    Obviously this fails, since the card can't support it.
    
    Let's fix this problem, by clearing invalid bits from the read OCR register
    for SD cards, before proceeding with the VDD voltage negotiation.
    
    Cc: stable@vger.kernel.org
    Reported-by: Philip Langdale <philipl@overt.org>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Reviewed-by: Philip Langdale <philipl@overt.org>
    Tested-by: Philip Langdale <philipl@overt.org>
    Tested-by: Manuel Presnitz <mail@mpy.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8dd05ea2e74de3483d7725493ec76ced513f467
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Thu Aug 29 19:49:26 2019 +0900

    mmc: sdhci-cadence: enable v4_mode to fix ADMA 64-bit addressing
    
    commit e73a3896eaca95ea5fc895720502a3f040eb4b39 upstream.
    
    The IP datasheet says this controller is compatible with SD Host
    Specification Version v4.00.
    
    As it turned out, the ADMA of this IP does not work with 64-bit mode
    when it is in the Version 3.00 compatible mode; it understands the
    old 64-bit descriptor table (as defined in SDHCI v2), but the ADMA
    System Address Register (SDHCI_ADMA_ADDRESS) cannot point to the
    64-bit address.
    
    I noticed this issue only after commit bd2e75633c80 ("dma-contiguous:
    use fallback alloc_pages for single pages"). Prior to that commit,
    dma_set_mask_and_coherent() returned the dma address that fits in
    32-bit range, at least for the default arm64 configuration
    (arch/arm64/configs/defconfig). Now the host->adma_addr exceeds the
    32-bit limit, causing the real problem for the Socionext SoCs.
    (As a side-note, I was also able to reproduce the issue for older
    kernels by turning off CONFIG_DMA_CMA.)
    
    Call sdhci_enable_v4_mode() to fix this.
    
    Cc: <stable@vger.kernel.org> # v4.20+
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 096179da39b60858c858fa2c01f3f8af010268f1
Author: Eugen Hristev <eugen.hristev@microchip.com>
Date:   Thu Aug 8 08:35:40 2019 +0000

    mmc: sdhci-of-at91: add quirk for broken HS200
    
    commit 7871aa60ae0086fe4626abdf5ed13eeddf306c61 upstream.
    
    HS200 is not implemented in the driver, but the controller claims it
    through caps. Remove it via a quirk, to make sure the mmc core do not try
    to enable HS200, as it causes the eMMC initialization to fail.
    
    Signed-off-by: Eugen Hristev <eugen.hristev@microchip.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Fixes: bb5f8ea4d514 ("mmc: sdhci-of-at91: introduce driver for the Atmel SDMMC")
    Cc: stable@vger.kernel.org # v4.4+
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb82fa2d124aa1581428e89150dfe9d077ac5a60
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Fri Aug 9 01:24:30 2019 +0300

    Revert "mmc: sdhci-tegra: drop ->get_ro() implementation"
    
    commit 0f686ca933597cfcc0636253fc1740423c062ec7 upstream.
    
    The WRITE_PROTECT bit is always in a "protected mode" on Tegra and
    WP-GPIO state need to be used instead. In a case of the GPIO absence,
    write-enable should be assumed. External SD is writable once again as
    a result of this patch because the offending commit changed behaviour for
    the case of a missing WP-GPIO to fall back to WRITE_PROTECT bit-checking,
    which is incorrect for Tegra.
    
    Cc: stable@vger.kernel.org # v5.1+
    Fixes: e8391453e27f ("mmc: sdhci-tegra: drop ->get_ro() implementation")
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Acked-by: Thierry Reding <treding@nvidia.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31f4eb72692c5c9b0242ef17c16f5ed910a99768
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Mon Aug 19 13:32:10 2019 +0300

    mei: me: add Tiger Lake point LP device ID
    
    commit 587f17407741a5be07f8a2d1809ec946c8120962 upstream.
    
    Add Tiger Lake Point device ID for TGP LP.
    
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190819103210.32748-1-tomas.winkler@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 871c867ac423c755910558440d5f43db462156d0
Author: Marc Zyngier <maz@kernel.org>
Date:   Wed Aug 28 11:10:16 2019 +0100

    KVM: arm/arm64: vgic-v2: Handle SGI bits in GICD_I{S,C}PENDR0 as WI
    
    commit 82e40f558de566fdee214bec68096bbd5e64a6a4 upstream.
    
    A guest is not allowed to inject a SGI (or clear its pending state)
    by writing to GICD_ISPENDR0 (resp. GICD_ICPENDR0), as these bits are
    defined as WI (as per ARM IHI 0048B 4.3.7 and 4.3.8).
    
    Make sure we correctly emulate the architecture.
    
    Fixes: 96b298000db4 ("KVM: arm/arm64: vgic-new: Add PENDING registers handlers")
    Cc: stable@vger.kernel.org # 4.7+
    Reported-by: Andre Przywara <andre.przywara@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea93e118ef2eb04b348f2c65149665533ea9b1e6
Author: Heyi Guo <guoheyi@huawei.com>
Date:   Tue Aug 27 12:26:50 2019 +0100

    KVM: arm/arm64: vgic: Fix potential deadlock when ap_list is long
    
    commit d4a8061a7c5f7c27a2dc002ee4cb89b3e6637e44 upstream.
    
    If the ap_list is longer than 256 entries, merge_final() in list_sort()
    will call the comparison callback with the same element twice, causing
    a deadlock in vgic_irq_cmp().
    
    Fix it by returning early when irqa == irqb.
    
    Cc: stable@vger.kernel.org # 4.7+
    Fixes: 8e4447457965 ("KVM: arm/arm64: vgic-new: Add IRQ sorting")
    Signed-off-by: Zenghui Yu <yuzenghui@huawei.com>
    Signed-off-by: Heyi Guo <guoheyi@huawei.com>
    [maz: massaged commit log and patch, added Fixes and Cc-stable]
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d69ebe85e16908698844c40f08d3d1dba417405c
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Mon Aug 26 14:55:20 2019 +1000

    KVM: PPC: Book3S: Fix incorrect guest-to-user-translation error handling
    
    commit ddfd151f3def9258397fcde7a372205a2d661903 upstream.
    
    H_PUT_TCE_INDIRECT handlers receive a page with up to 512 TCEs from
    a guest. Although we verify correctness of TCEs before we do anything
    with the existing tables, there is a small window when a check in
    kvmppc_tce_validate might pass and right after that the guest alters
    the page of TCEs, causing an early exit from the handler and leaving
    srcu_read_lock(&vcpu->kvm->srcu) (virtual mode) or lock_rmap(rmap)
    (real mode) locked.
    
    This fixes the bug by jumping to the common exit code with an appropriate
    unlock.
    
    Cc: stable@vger.kernel.org # v4.11+
    Fixes: 121f80ba68f1 ("KVM: PPC: VFIO: Add in-kernel acceleration for VFIO")
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3698cd854f436b02ca2db6cf1a8d5a0221dcb03d
Author: Pu Wen <puwen@hygon.cn>
Date:   Sat Aug 31 10:19:58 2019 +0800

    tools/power turbostat: Fix caller parameter of get_tdp_amd()
    
    commit 9cfa8e042f7cbb1994cc5923e46c78b36f6054f4 upstream.
    
    Commit 9392bd98bba760be96ee ("tools/power turbostat: Add support for AMD
    Fam 17h (Zen) RAPL") add a function get_tdp_amd(), the parameter is CPU
    family. But the rapl_probe_amd() function use wrong model parameter.
    Fix the wrong caller parameter of get_tdp_amd() to use family.
    
    Cc: <stable@vger.kernel.org> # v5.1+
    Signed-off-by: Pu Wen <puwen@hygon.cn>
    Reviewed-by: Calvin Walton <calvin.walton@kepstin.ca>
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d26f7f401e736ab886f73acb48ff47e95e1f7af
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Aug 28 01:34:50 2019 +0800

    USB: storage: ums-realtek: Whitelist auto-delink support
    
    commit 1902a01e2bcc3abd7c9a18dc05e78c7ab4a53c54 upstream.
    
    Auto-delink requires writing special registers to ums-realtek devices.
    Unconditionally enable auto-delink may break newer devices.
    
    So only enable auto-delink by default for the original three IDs,
    0x0138, 0x0158 and 0x0159.
    
    Realtek is working on a patch to properly support auto-delink for other
    IDs.
    
    BugLink: https://bugs.launchpad.net/bugs/1838886
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190827173450.13572-2-kai.heng.feng@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35f1b0a62c367dd8cb9f951c6dbccfa248352fb9
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Wed Aug 28 01:34:49 2019 +0800

    USB: storage: ums-realtek: Update module parameter description for auto_delink_en
    
    commit f6445b6b2f2bb1745080af4a0926049e8bca2617 upstream.
    
    The option named "auto_delink_en" is a bit misleading, as setting it to
    false doesn't really disable auto-delink but let auto-delink be firmware
    controlled.
    
    Update the description to reflect the real usage of this parameter.
    
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190827173450.13572-1-kai.heng.feng@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 960ff077477ee9999456e156790481eef2c563f1
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Tue Aug 27 14:51:12 2019 +0200

    usb: host: xhci: rcar: Fix typo in compatible string matching
    
    commit 636bd02a7ba9025ff851d0cfb92768c8fa865859 upstream.
    
    It's spelled "renesas", not "renensas".
    
    Due to this typo, RZ/G1M and RZ/G1N were not covered by the check.
    
    Fixes: 2dc240a3308b ("usb: host: xhci: rcar: retire use of xhci_plat_type_is()")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/20190827125112.12192-1-geert+renesas@glider.be
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ca46f45c2084f4e760fbf2c617bae20029ae073
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Tue Aug 27 12:51:50 2019 +0900

    usb: host: ohci: fix a race condition between shutdown and irq
    
    commit a349b95d7ca0cea71be4a7dac29830703de7eb62 upstream.
    
    This patch fixes an issue that the following error is
    possible to happen when ohci hardware causes an interruption
    and the system is shutting down at the same time.
    
    [   34.851754] usb 2-1: USB disconnect, device number 2
    [   35.166658] irq 156: nobody cared (try booting with the "irqpoll" option)
    [   35.173445] CPU: 0 PID: 22 Comm: kworker/0:1 Not tainted 5.3.0-rc5 #85
    [   35.179964] Hardware name: Renesas Salvator-X 2nd version board based on r8a77965 (DT)
    [   35.187886] Workqueue: usb_hub_wq hub_event
    [   35.192063] Call trace:
    [   35.194509]  dump_backtrace+0x0/0x150
    [   35.198165]  show_stack+0x14/0x20
    [   35.201475]  dump_stack+0xa0/0xc4
    [   35.204785]  __report_bad_irq+0x34/0xe8
    [   35.208614]  note_interrupt+0x2cc/0x318
    [   35.212446]  handle_irq_event_percpu+0x5c/0x88
    [   35.216883]  handle_irq_event+0x48/0x78
    [   35.220712]  handle_fasteoi_irq+0xb4/0x188
    [   35.224802]  generic_handle_irq+0x24/0x38
    [   35.228804]  __handle_domain_irq+0x5c/0xb0
    [   35.232893]  gic_handle_irq+0x58/0xa8
    [   35.236548]  el1_irq+0xb8/0x180
    [   35.239681]  __do_softirq+0x94/0x23c
    [   35.243253]  irq_exit+0xd0/0xd8
    [   35.246387]  __handle_domain_irq+0x60/0xb0
    [   35.250475]  gic_handle_irq+0x58/0xa8
    [   35.254130]  el1_irq+0xb8/0x180
    [   35.257268]  kernfs_find_ns+0x5c/0x120
    [   35.261010]  kernfs_find_and_get_ns+0x3c/0x60
    [   35.265361]  sysfs_unmerge_group+0x20/0x68
    [   35.269454]  dpm_sysfs_remove+0x2c/0x68
    [   35.273284]  device_del+0x80/0x370
    [   35.276683]  hid_destroy_device+0x28/0x60
    [   35.280686]  usbhid_disconnect+0x4c/0x80
    [   35.284602]  usb_unbind_interface+0x6c/0x268
    [   35.288867]  device_release_driver_internal+0xe4/0x1b0
    [   35.293998]  device_release_driver+0x14/0x20
    [   35.298261]  bus_remove_device+0x110/0x128
    [   35.302350]  device_del+0x148/0x370
    [   35.305832]  usb_disable_device+0x8c/0x1d0
    [   35.309921]  usb_disconnect+0xc8/0x2d0
    [   35.313663]  hub_event+0x6e0/0x1128
    [   35.317146]  process_one_work+0x1e0/0x320
    [   35.321148]  worker_thread+0x40/0x450
    [   35.324805]  kthread+0x124/0x128
    [   35.328027]  ret_from_fork+0x10/0x18
    [   35.331594] handlers:
    [   35.333862] [<0000000079300c1d>] usb_hcd_irq
    [   35.338126] [<0000000079300c1d>] usb_hcd_irq
    [   35.342389] Disabling IRQ #156
    
    ohci_shutdown() disables all the interrupt and rh_state is set to
    OHCI_RH_HALTED. In other hand, ohci_irq() is possible to enable
    OHCI_INTR_SF and OHCI_INTR_MIE on ohci_irq(). Note that OHCI_INTR_SF
    is possible to be set by start_ed_unlink() which is called:
     ohci_irq()
      -> process_done_list()
       -> takeback_td()
        -> start_ed_unlink()
    
    So, ohci_irq() has the following condition, the issue happens by
    &ohci->regs->intrenable = OHCI_INTR_MIE | OHCI_INTR_SF and
    ohci->rh_state = OHCI_RH_HALTED:
    
            /* interrupt for some other device? */
            if (ints == 0 || unlikely(ohci->rh_state == OHCI_RH_HALTED))
                    return IRQ_NOTMINE;
    
    To fix the issue, ohci_shutdown() holds the spin lock while disabling
    the interruption and changing the rh_state flag to prevent reenable
    the OHCI_INTR_MIE unexpectedly. Note that io_watchdog_func() also
    calls the ohci_shutdown() and it already held the spin lock, so that
    the patch makes a new function as _ohci_shutdown().
    
    This patch is inspired by a Renesas R-Car Gen3 BSP patch
    from Tho Vu.
    
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/1566877910-6020-1-git-send-email-yoshihiro.shimoda.uh@renesas.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 73830b83ece98461f80d84bc79857b7e72bf490a
Author: Peter Chen <peter.chen@nxp.com>
Date:   Tue Aug 20 02:07:58 2019 +0000

    usb: chipidea: udc: don't do hardware access if gadget has stopped
    
    commit cbe85c88ce80fb92956a0793518d415864dcead8 upstream.
    
    After _gadget_stop_activity is executed, we can consider the hardware
    operation for gadget has finished, and the udc can be stopped and enter
    low power mode. So, any later hardware operations (from usb_ep_ops APIs
    or usb_gadget_ops APIs) should be considered invalid, any deinitializatons
    has been covered at _gadget_stop_activity.
    
    I meet this problem when I plug out usb cable from PC using mass_storage
    gadget, my callstack like: vbus interrupt->.vbus_session->
    composite_disconnect ->pm_runtime_put_sync(&_gadget->dev),
    the composite_disconnect will call fsg_disable, but fsg_disable calls
    usb_ep_disable using async way, there are register accesses for
    usb_ep_disable. So sometimes, I get system hang due to visit register
    without clock, sometimes not.
    
    The Linux Kernel USB maintainer Alan Stern suggests this kinds of solution.
    See: http://marc.info/?l=linux-usb&m=138541769810983&w=2.
    
    Cc: <stable@vger.kernel.org> #v4.9+
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Link: https://lore.kernel.org/r/20190820020503.27080-2-peter.chen@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0aa1e87affcefd81184d633d9b52f3c126d0dd5c
Author: Schmid, Carsten <Carsten_Schmid@mentor.com>
Date:   Fri Aug 23 14:11:28 2019 +0000

    usb: hcd: use managed device resources
    
    commit 76da906ad727048a74bb8067031ee99fc070c7da upstream.
    
    Using managed device resources in usb_hcd_pci_probe() allows devm usage for
    resource subranges, such as the mmio resource for the platform device
    created to control host/device mode mux, which is a xhci extended
    capability, and sits inside the xhci mmio region.
    
    If managed device resources are not used then "parent" resource
    is released before subrange at driver removal as .remove callback is
    called before the devres list of resources for this device is walked
    and released.
    
    This has been observed with the xhci extended capability driver causing a
    use-after-free which is now fixed.
    
    An additional nice benefit is that error handling on driver initialisation
    is simplified much.
    
    Signed-off-by: Carsten Schmid <carsten_schmid@mentor.com>
    Tested-by: Carsten Schmid <carsten_schmid@mentor.com>
    Reviewed-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Fixes: fa31b3cb2ae1 ("xhci: Add Intel extended cap / otg phy mux handling")
    Cc: <stable@vger.kernel.org> # v4.19+
    Link: https://lore.kernel.org/r/1566569488679.31808@mentor.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c07f658df19feb6025da515300ed729afed77f03
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue Aug 27 12:34:36 2019 +0200

    USB: cdc-wdm: fix race between write and disconnect due to flag abuse
    
    commit 1426bd2c9f7e3126e2678e7469dca9fd9fc6dd3e upstream.
    
    In case of a disconnect an ongoing flush() has to be made fail.
    Nevertheless we cannot be sure that any pending URB has already
    finished, so although they will never succeed, they still must
    not be touched.
    The clean solution for this is to check for WDM_IN_USE
    and WDM_DISCONNECTED in flush(). There is no point in ever
    clearing WDM_IN_USE, as no further writes make sense.
    
    The issue is as old as the driver.
    
    Fixes: afba937e540c9 ("USB: CDC WDM driver")
    Reported-by: syzbot+d232cca6ec42c2edb3fc@syzkaller.appspotmail.com
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190827103436.21143-1-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43d94dafbcdd3aff2ec75ad363d4501241f3a25f
Author: Henk van der Laan <opensource@henkvdlaan.com>
Date:   Fri Aug 16 22:08:47 2019 +0200

    usb-storage: Add new JMS567 revision to unusual_devs
    
    commit 08d676d1685c2a29e4d0e1b0242324e564d4589e upstream.
    
    Revision 0x0117 suffers from an identical issue to earlier revisions,
    therefore it should be added to the quirks list.
    
    Signed-off-by: Henk van der Laan <opensource@henkvdlaan.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190816200847.21366-1-opensource@henkvdlaan.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7300afed03340a3ecc787142c861c10d4353bf9c
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue Aug 20 11:28:25 2019 +0200

    usbtmc: more sanity checking for packet size
    
    commit de7b9aa633b693e77942e12f1769506efae6917b upstream.
    
    A malicious device can make the driver divide ny zero
    with a nonsense maximum packet size.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190820092826.17694-1-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e56b7b3b92561a4284f4f93a4648890f477aeac8
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Fri Aug 30 16:30:01 2019 -0400

    ftrace: Check for empty hash and comment the race with registering probes
    
    commit 372e0d01da71c84dcecf7028598a33813b0d5256 upstream.
    
    The race between adding a function probe and reading the probes that exist
    is very subtle. It needs a comment. Also, the issue can also happen if the
    probe has has the EMPTY_HASH as its func_hash.
    
    Cc: stable@vger.kernel.org
    Fixes: 7b60f3d876156 ("ftrace: Dynamically create the probe ftrace_ops for the trace_array")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d784aa1a0f136740cbd3b94163b66022336342ca
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Jul 4 20:04:42 2019 +0530

    ftrace: Check for successful allocation of hash
    
    commit 5b0022dd32b7c2e15edf1827ba80aa1407edf9ff upstream.
    
    In register_ftrace_function_probe(), we are not checking the return
    value of alloc_and_copy_ftrace_hash(). The subsequent call to
    ftrace_match_records() may end up dereferencing the same. Add a check to
    ensure this doesn't happen.
    
    Link: http://lkml.kernel.org/r/26e92574f25ad23e7cafa3cf5f7a819de1832cbe.1562249521.git.naveen.n.rao@linux.vnet.ibm.com
    
    Cc: stable@vger.kernel.org
    Fixes: 1ec3a81a0cf42 ("ftrace: Have each function probe use its own ftrace_ops")
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd419e7c03e9abe6a1ecd3a8f18a8a417b8ee231
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Jul 4 20:04:41 2019 +0530

    ftrace: Fix NULL pointer dereference in t_probe_next()
    
    commit 7bd46644ea0f6021dc396a39a8bfd3a58f6f1f9f upstream.
    
    LTP testsuite on powerpc results in the below crash:
    
      Unable to handle kernel paging request for data at address 0x00000000
      Faulting instruction address: 0xc00000000029d800
      Oops: Kernel access of bad area, sig: 11 [#1]
      LE SMP NR_CPUS=2048 NUMA PowerNV
      ...
      CPU: 68 PID: 96584 Comm: cat Kdump: loaded Tainted: G        W
      NIP:  c00000000029d800 LR: c00000000029dac4 CTR: c0000000001e6ad0
      REGS: c0002017fae8ba10 TRAP: 0300   Tainted: G        W
      MSR:  9000000000009033 <SF,HV,EE,ME,IR,DR,RI,LE>  CR: 28022422  XER: 20040000
      CFAR: c00000000029d90c DAR: 0000000000000000 DSISR: 40000000 IRQMASK: 0
      ...
      NIP [c00000000029d800] t_probe_next+0x60/0x180
      LR [c00000000029dac4] t_mod_start+0x1a4/0x1f0
      Call Trace:
      [c0002017fae8bc90] [c000000000cdbc40] _cond_resched+0x10/0xb0 (unreliable)
      [c0002017fae8bce0] [c0000000002a15b0] t_start+0xf0/0x1c0
      [c0002017fae8bd30] [c0000000004ec2b4] seq_read+0x184/0x640
      [c0002017fae8bdd0] [c0000000004a57bc] sys_read+0x10c/0x300
      [c0002017fae8be30] [c00000000000b388] system_call+0x5c/0x70
    
    The test (ftrace_set_ftrace_filter.sh) is part of ftrace stress tests
    and the crash happens when the test does 'cat
    $TRACING_PATH/set_ftrace_filter'.
    
    The address points to the second line below, in t_probe_next(), where
    filter_hash is dereferenced:
      hash = iter->probe->ops.func_hash->filter_hash;
      size = 1 << hash->size_bits;
    
    This happens due to a race with register_ftrace_function_probe(). A new
    ftrace_func_probe is created and added into the func_probes list in
    trace_array under ftrace_lock. However, before initializing the filter,
    we drop ftrace_lock, and re-acquire it after acquiring regex_lock. If
    another process is trying to read set_ftrace_filter, it will be able to
    acquire ftrace_lock during this window and it will end up seeing a NULL
    filter_hash.
    
    Fix this by just checking for a NULL filter_hash in t_probe_next(). If
    the filter_hash is NULL, then this probe is just being added and we can
    simply return from here.
    
    Link: http://lkml.kernel.org/r/05e021f757625cbbb006fad41380323dbe4e3b43.1562249521.git.naveen.n.rao@linux.vnet.ibm.com
    
    Cc: stable@vger.kernel.org
    Fixes: 7b60f3d876156 ("ftrace: Dynamically create the probe ftrace_ops for the trace_array")
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c781717c5ccd12940ddced9ab732af60837ec27
Author: Benjamin Tissoires <benjamin.tissoires@redhat.com>
Date:   Tue Aug 13 15:38:07 2019 +0200

    HID: logitech-hidpp: remove support for the G700 over USB
    
    [ Upstream commit a3384b8d9f63cc042711293bb97bdc92dca0391d ]
    
    The G700 suffers from the same issue than the G502:
    when plugging it in, the driver tries to contact it but it fails.
    
    This timeout is problematic as it introduce a delay in the boot,
    and having only the mouse event node means that the hardware
    macros keys can not be relayed to the userspace.
    
    Link: https://github.com/libratbag/libratbag/issues/797
    Fixes: 91cf9a98ae41 ("HID: logitech-hidpp: make .probe usbhid capable")
    Cc: stable@vger.kernel.org # v5.2
    Reviewed-by: Filipe Laíns <lains@archlinux.org>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60203848774877fb865f3c04ca2b12cc4ccfb143
Author: Bandan Das <bsd@redhat.com>
Date:   Mon Aug 26 06:15:13 2019 -0400

    x86/apic: Include the LDR when clearing out APIC registers
    
    commit 558682b5291937a70748d36fd9ba757fb25b99ae upstream.
    
    Although APIC initialization will typically clear out the LDR before
    setting it, the APIC cleanup code should reset the LDR.
    
    This was discovered with a 32-bit KVM guest jumping into a kdump
    kernel. The stale bits in the LDR triggered a bug in the KVM APIC
    implementation which caused the destination mapping for VCPUs to be
    corrupted.
    
    Note that this isn't intended to paper over the KVM APIC bug. The kernel
    has to clear the LDR when resetting the APIC registers except when X2APIC
    is enabled.
    
    This lacks a Fixes tag because missing to clear LDR goes way back into pre
    git history.
    
    [ tglx: Made x2apic_enabled a function call as required ]
    
    Signed-off-by: Bandan Das <bsd@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190826101513.5080-3-bsd@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit edacccb3468085a77642342b28687a9d39e0ce10
Author: Bandan Das <bsd@redhat.com>
Date:   Mon Aug 26 06:15:12 2019 -0400

    x86/apic: Do not initialize LDR and DFR for bigsmp
    
    commit bae3a8d3308ee69a7dbdf145911b18dfda8ade0d upstream.
    
    Legacy apic init uses bigsmp for smp systems with 8 and more CPUs. The
    bigsmp APIC implementation uses physical destination mode, but it
    nevertheless initializes LDR and DFR. The LDR even ends up incorrectly with
    multiple bit being set.
    
    This does not cause a functional problem because LDR and DFR are ignored
    when physical destination mode is active, but it triggered a problem on a
    32-bit KVM guest which jumps into a kdump kernel.
    
    The multiple bits set unearthed a bug in the KVM APIC implementation. The
    code which creates the logical destination map for VCPUs ignores the
    disabled state of the APIC and ends up overwriting an existing valid entry
    and as a result, APIC calibration hangs in the guest during kdump
    initialization.
    
    Remove the bogus LDR/DFR initialization.
    
    This is not intended to work around the KVM APIC bug. The LDR/DFR
    ininitalization is wrong on its own.
    
    The issue goes back into the pre git history. The fixes tag is the commit
    in the bitkeeper import which introduced bigsmp support in 2003.
    
      git://git.kernel.org/pub/scm/linux/kernel/git/tglx/history.git
    
    Fixes: db7b9e9f26b8 ("[PATCH] Clustered APIC setup for >8 CPU systems")
    Suggested-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Bandan Das <bsd@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190826101513.5080-2-bsd@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af65ce08ec913007f194ab1530b96904b414d0c7
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Aug 29 00:31:34 2019 +0200

    x86/mm/cpa: Prevent large page split when ftrace flips RW on kernel text
    
    commit 7af0145067bc429a09ac4047b167c0971c9f0dc7 upstream.
    
    ftrace does not use text_poke() for enabling trace functionality. It uses
    its own mechanism and flips the whole kernel text to RW and back to RO.
    
    The CPA rework removed a loop based check of 4k pages which tried to
    preserve a large page by checking each 4k page whether the change would
    actually cover all pages in the large page.
    
    This resulted in endless loops for nothing as in testing it turned out that
    it actually never preserved anything. Of course testing missed to include
    ftrace, which is the one and only case which benefitted from the 4k loop.
    
    As a consequence enabling function tracing or ftrace based kprobes results
    in a full 4k split of the kernel text, which affects iTLB performance.
    
    The kernel RO protection is the only valid case where this can actually
    preserve large pages.
    
    All other static protections (RO data, data NX, PCI, BIOS) are truly
    static.  So a conflict with those protections which results in a split
    should only ever happen when a change of memory next to a protected region
    is attempted. But these conflicts are rightfully splitting the large page
    to preserve the protected regions. In fact a change to the protected
    regions itself is a bug and is warned about.
    
    Add an exception for the static protection check for kernel text RO when
    the to be changed region spawns a full large page which allows to preserve
    the large mappings. This also prevents the syslog to be spammed about CPA
    violations when ftrace is used.
    
    The exception needs to be removed once ftrace switched over to text_poke()
    which avoids the whole issue.
    
    Fixes: 585948f4f695 ("x86/mm/cpa: Avoid the 4k pages check completely")
    Reported-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Song Liu <songliubraving@fb.com>
    Reviewed-by: Song Liu <songliubraving@fb.com>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/alpine.DEB.2.21.1908282355340.1938@nanos.tec.linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 861e386d11b5b90bd75326c0db957937da2dd38b
Author: Sebastian Mayr <me@sam.st>
Date:   Sun Jul 28 17:26:17 2019 +0200

    uprobes/x86: Fix detection of 32-bit user mode
    
    commit 9212ec7d8357ea630031e89d0d399c761421c83b upstream.
    
    32-bit processes running on a 64-bit kernel are not always detected
    correctly, causing the process to crash when uretprobes are installed.
    
    The reason for the crash is that in_ia32_syscall() is used to determine the
    process's mode, which only works correctly when called from a syscall.
    
    In the case of uretprobes, however, the function is called from a exception
    and always returns 'false' on a 64-bit kernel. In consequence this leads to
    corruption of the process's return address.
    
    Fix this by using user_64bit_mode() instead of in_ia32_syscall(), which
    is correct in any situation.
    
    [ tglx: Add a comment and the following historical info ]
    
    This should have been detected by the rename which happened in commit
    
      abfb9498ee13 ("x86/entry: Rename is_{ia32,x32}_task() to in_{ia32,x32}_syscall()")
    
    which states in the changelog:
    
        The is_ia32_task()/is_x32_task() function names are a big misnomer: they
        suggests that the compat-ness of a system call is a task property, which
        is not true, the compatness of a system call purely depends on how it
        was invoked through the system call layer.
        .....
    
    and then it went and blindly renamed every call site.
    
    Sadly enough this was already mentioned here:
    
       8faaed1b9f50 ("uprobes/x86: Introduce sizeof_long(), cleanup adjust_ret_addr() and
    arch_uretprobe_hijack_return_addr()")
    
    where the changelog says:
    
        TODO: is_ia32_task() is not what we actually want, TS_COMPAT does
        not necessarily mean 32bit. Fortunately syscall-like insns can't be
        probed so it actually works, but it would be better to rename and
        use is_ia32_frame().
    
    and goes all the way back to:
    
        0326f5a94dde ("uprobes/core: Handle breakpoint and singlestep exceptions")
    
    Oh well. 7+ years until someone actually tried a uretprobe on a 32bit
    process on a 64bit kernel....
    
    Fixes: 0326f5a94dde ("uprobes/core: Handle breakpoint and singlestep exceptions")
    Signed-off-by: Sebastian Mayr <me@sam.st>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Dmitry Safonov <dsafonov@virtuozzo.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190728152617.7308-1-me@sam.st
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4479763b84366e3ec53e73ca2d021baed335365c
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Fri Aug 23 13:55:44 2019 -0700

    KVM: x86: Don't update RIP or do single-step on faulting emulation
    
    commit 75ee23b30dc712d80d2421a9a547e7ab6e379b44 upstream.
    
    Don't advance RIP or inject a single-step #DB if emulation signals a
    fault.  This logic applies to all state updates that are conditional on
    clean retirement of the emulation instruction, e.g. updating RFLAGS was
    previously handled by commit 38827dbd3fb85 ("KVM: x86: Do not update
    EFLAGS on faulting emulation").
    
    Not advancing RIP is likely a nop, i.e. ctxt->eip isn't updated with
    ctxt->_eip until emulation "retires" anyways.  Skipping #DB injection
    fixes a bug reported by Andy Lutomirski where a #UD on SYSCALL due to
    invalid state with EFLAGS.TF=1 would loop indefinitely due to emulation
    overwriting the #UD with #DB and thus restarting the bad SYSCALL over
    and over.
    
    Cc: Nadav Amit <nadav.amit@gmail.com>
    Cc: stable@vger.kernel.org
    Reported-by: Andy Lutomirski <luto@kernel.org>
    Fixes: 663f4c61b803 ("KVM: x86: handle singlestep during emulation")
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4344cb8cf72d3335890ca51295467e220de92fd8
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Tue Aug 27 18:04:02 2019 +0200

    KVM: x86: hyper-v: don't crash on KVM_GET_SUPPORTED_HV_CPUID when kvm_intel.nested is disabled
    
    commit ea1529873ab18c204688cf31746df851c098cbea upstream.
    
    If kvm_intel is loaded with nested=0 parameter an attempt to perform
    KVM_GET_SUPPORTED_HV_CPUID results in OOPS as nested_get_evmcs_version hook
    in kvm_x86_ops is NULL (we assign it in nested_vmx_hardware_setup() and
    this only happens in case nested is enabled).
    
    Check that kvm_x86_ops->nested_get_evmcs_version is not NULL before
    calling it. With this, we can remove the stub from svm as it is no
    longer needed.
    
    Cc: <stable@vger.kernel.org>
    Fixes: e2e871ab2f02 ("x86/kvm/hyper-v: Introduce nested_get_evmcs_version() helper")
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Reviewed-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d01c081e86142a39ea89588a9cf154816262e52
Author: Radim Krcmar <rkrcmar@redhat.com>
Date:   Tue Aug 13 23:37:37 2019 -0400

    kvm: x86: skip populating logical dest map if apic is not sw enabled
    
    commit b14c876b994f208b6b95c222056e1deb0a45de0e upstream.
    
    recalculate_apic_map does not santize ldr and it's possible that
    multiple bits are set. In that case, a previous valid entry
    can potentially be overwritten by an invalid one.
    
    This condition is hit when booting a 32 bit, >8 CPU, RHEL6 guest and then
    triggering a crash to boot a kdump kernel. This is the sequence of
    events:
    1. Linux boots in bigsmp mode and enables PhysFlat, however, it still
    writes to the LDR which probably will never be used.
    2. However, when booting into kdump, the stale LDR values remain as
    they are not cleared by the guest and there isn't a apic reset.
    3. kdump boots with 1 cpu, and uses Logical Destination Mode but the
    logical map has been overwritten and points to an inactive vcpu.
    
    Signed-off-by: Radim Krcmar <rkrcmar@redhat.com>
    Signed-off-by: Bandan Das <bsd@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e824fe6a6750521ebcf8b71c574e081a09dbdd9d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Aug 20 08:58:12 2019 +0200

    ALSA: usb-audio: Add implicit fb quirk for Behringer UFX1604
    
    commit 1a15718b41df026cffd0e42cfdc38a1384ce19f9 upstream.
    
    Behringer UFX1604 requires the similar quirk to apply implicit fb like
    another Behringer model UFX1204 in order to fix the noisy playback.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=204631
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f3c293ccffe122d53f12c23e9116e8bd0361e62
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Aug 15 11:41:06 2019 +0200

    ALSA: usb-audio: Fix invalid NULL check in snd_emuusb_set_samplerate()
    
    commit 6de3c9e3f6b3eaf66859e1379b3f35dda781416b upstream.
    
    The quirk function snd_emuusb_set_samplerate() has a NULL check for
    the mixer element, but this is useless in the current code.  It used
    to be a check against mixer->id_elems[unitid] but it was changed later
    to the value after mixer_eleme_list_to_info() which is always non-NULL
    due to the container_of() usage.
    
    This patch fixes the check before the conversion.
    
    While we're at it, correct a typo in the comment in the function,
    too.
    
    Fixes: 8c558076c740 ("ALSA: usb-audio: Clean up mixer element list traverse")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee26f3722d2b0a14bd88c19ffafa6975d1cdf4de
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sun Aug 25 09:21:44 2019 +0200

    ALSA: seq: Fix potential concurrent access to the deleted pool
    
    commit 75545304eba6a3d282f923b96a466dc25a81e359 upstream.
    
    The input pool of a client might be deleted via the resize ioctl, the
    the access to it should be covered by the proper locks.  Currently the
    only missing place is the call in snd_seq_ioctl_get_client_pool(), and
    this patch papers over it.
    
    Reported-by: syzbot+4a75454b9ca2777f35c7@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 853ccdea876bfb2d537d01f2bc93557618e37131
Author: Jeronimo Borque <jeronimo@borque.com.ar>
Date:   Sun Aug 18 22:35:38 2019 -0300

    ALSA: hda - Fixes inverted Conexant GPIO mic mute led
    
    commit f9ef724d4896763479f3921afd1ee61552fc9836 upstream.
    
    "enabled" parameter historically referred to the device input or
    output, not to the led indicator. After the changes added with the led
    helper functions the mic mute led logic refers to the led and not to
    the mic input which caused led indicator to be negated.
    Fixing logic in cxt_update_gpio_led and updated
    cxt_fixup_gpio_mute_hook
    Also updated debug messages to ease further debugging if necessary.
    
    Fixes: 184e302b46c9 ("ALSA: hda/conexant - Use the mic-mute LED helper")
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Jeronimo Borque <jeronimo@borque.com.ar>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 441f5ecc1e24afa38ec2a1538a9470efb51c3dc1
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Aug 21 20:00:02 2019 +0200

    ALSA: line6: Fix memory leak at line6_init_pcm() error path
    
    commit 1bc8d18c75fef3b478dbdfef722aae09e2a9fde7 upstream.
    
    I forgot to release the allocated object at the early error path in
    line6_init_pcm().  For addressing it, slightly shuffle the code so
    that the PCM destructor (pcm->private_free) is assigned properly
    before all error paths.
    
    Fixes: 3450121997ce ("ALSA: line6: Fix write on zero-sized buffer")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ff7b2c68d2276f26ebfa8edc7dc9c0591b66b1a
Author: Paweł Rekowski <p.rekowski@gmail.com>
Date:   Mon Aug 19 22:40:07 2019 +0200

    ALSA: hda/ca0132 - Add new SBZ quirk
    
    commit 2ca371d847511f97ef991ef612a2ce805489840e upstream.
    
    This patch adds a new PCI subsys ID for the SBZ, as found and tested by
    me and some reddit users.
    
    Link: https://lore.kernel.org/lkml/20190819204008.14426-1-p.rekowski@gmail.com
    Signed-off-by: Paweł Rekowski <p.rekowski@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 701ff405be9fa5a3a7ad8a7020d343d3bf3206fd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Aug 20 21:43:42 2019 +0200

    ALSA: usb-audio: Check mixer unit bitmap yet more strictly
    
    commit f9f0e9ed350e15d51ad07364b4cf910de50c472a upstream.
    
    The bmControls (for UAC1) or bmMixerControls (for UAC2/3) bitmap has a
    variable size depending on both input and output pins.  Its size is to
    fit with input * output bits.  The problem is that the input size
    can't be determined simply from the unit descriptor itself but it
    needs to parse the whole connected sources.  Although the
    uac_mixer_unit_get_channels() tries to check some possible overflow of
    this bitmap, it's incomplete due to the lack of the  evaluation of
    input pins.
    
    For covering possible overflows, this patch adds the bitmap overflow
    check in the loop of input pins in parse_audio_mixer_unit().
    
    Fixes: 0bfe5e434e66 ("ALSA: usb-audio: Check mixer unit descriptors more strictly")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4b92e95d9e5ad3e4711be1bd8b01c121d38b43a
Author: Andrew Morton <akpm@linux-foundation.org>
Date:   Fri Aug 30 16:04:35 2019 -0700

    mm/zsmalloc.c: fix build when CONFIG_COMPACTION=n
    
    commit 441e254cd40dc03beec3c650ce6ce6074bc6517f upstream.
    
    Fixes: 701d678599d0c1 ("mm/zsmalloc.c: fix race condition in zs_destroy_pool")
    Link: http://lkml.kernel.org/r/201908251039.5oSbEEUT%25lkp@intel.com
    Reported-by: kbuild test robot <lkp@intel.com>
    Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: Henry Burns <henrywolfeburns@gmail.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Jonathan Adams <jwadams@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2905d7847cd59c4e4aba72a1b6f249f62156efb8
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu Aug 22 22:19:49 2019 +0800

    xfrm/xfrm_policy: fix dst dev null pointer dereference in collect_md mode
    
    [ Upstream commit c3b4c3a47e05d5fecf7354d75824a9d1b37f3e84 ]
    
    In decode_session{4,6} there is a possibility that the skb dst dev is NULL,
    e,g, with tunnel collect_md mode, which will cause kernel crash.
    Here is what the code path looks like, for GRE:
    
    - ip6gre_tunnel_xmit
      - ip6gre_xmit_ipv6
        - __gre6_xmit
          - ip6_tnl_xmit
            - if skb->len - t->tun_hlen - eth_hlen > mtu; return -EMSGSIZE
        - icmpv6_send
          - icmpv6_route_lookup
            - xfrm_decode_session_reverse
              - decode_session4
                - oif = skb_dst(skb)->dev->ifindex; <-- here
              - decode_session6
                - oif = skb_dst(skb)->dev->ifindex; <-- here
    
    The reason is __metadata_dst_init() init dst->dev to NULL by default.
    We could not fix it in __metadata_dst_init() as there is no dev supplied.
    On the other hand, the skb_dst(skb)->dev is actually not needed as we
    called decode_session{4,6} via xfrm_decode_session_reverse(), so oif is not
    used by: fl4->flowi4_oif = reverse ? skb->skb_iif : oif;
    
    So make a dst dev check here should be clean and safe.
    
    v4: No changes.
    
    v3: No changes.
    
    v2: fix the issue in decode_session{4,6} instead of updating shared dst dev
    in {ip_md, ip6}_tunnel_xmit.
    
    Fixes: 8d79266bc48c ("ip6_tunnel: add collect_md mode to IPv6 tunnels")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Tested-by: Jonathan Lemon <jonathan.lemon@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c7fbbc0fc3fe00812bc642b4378a700a1837bd9
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Thu Aug 22 22:19:48 2019 +0800

    ipv4/icmp: fix rt dst dev null pointer dereference
    
    [ Upstream commit e2c693934194fd3b4e795635934883354c06ebc9 ]
    
    In __icmp_send() there is a possibility that the rt->dst.dev is NULL,
    e,g, with tunnel collect_md mode, which will cause kernel crash.
    Here is what the code path looks like, for GRE:
    
    - ip6gre_tunnel_xmit
      - ip6gre_xmit_ipv4
        - __gre6_xmit
          - ip6_tnl_xmit
            - if skb->len - t->tun_hlen - eth_hlen > mtu; return -EMSGSIZE
        - icmp_send
          - net = dev_net(rt->dst.dev); <-- here
    
    The reason is __metadata_dst_init() init dst->dev to NULL by default.
    We could not fix it in __metadata_dst_init() as there is no dev supplied.
    On the other hand, the reason we need rt->dst.dev is to get the net.
    So we can just try get it from skb->dev when rt->dst.dev is NULL.
    
    v4: Julian Anastasov remind skb->dev also could be NULL. We'd better
    still use dst.dev and do a check to avoid crash.
    
    v3: No changes.
    
    v2: fix the issue in __icmp_send() instead of updating shared dst dev
    in {ip_md, ip6}_tunnel_xmit.
    
    Fixes: c8b34e680a09 ("ip_tunnel: Add tnl_update_pmtu in ip_md_tunnel_xmit")
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Reviewed-by: Julian Anastasov <ja@ssi.bg>
    Acked-by: Jonathan Lemon <jonathan.lemon@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc90789e580b8adbec953992bac02622bbb38d91
Author: Yi-Hung Wei <yihung.wei@gmail.com>
Date:   Thu Aug 22 13:17:50 2019 -0700

    openvswitch: Fix conntrack cache with timeout
    
    [ Upstream commit 7177895154e6a35179d332f4a584d396c50d0612 ]
    
    This patch addresses a conntrack cache issue with timeout policy.
    Currently, we do not check if the timeout extension is set properly in the
    cached conntrack entry.  Thus, after packet recirculate from conntrack
    action, the timeout policy is not applied properly.  This patch fixes the
    aforementioned issue.
    
    Fixes: 06bd2bdf19d2 ("openvswitch: Add timeout support to ct action")
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Yi-Hung Wei <yihung.wei@gmail.com>
    Acked-by: Pravin B Shelar <pshelar@ovn.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1c3307a832acf6ea64afcd170d5dafcc219b462
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Fri Aug 23 20:51:43 2019 +0300

    ipv4: mpls: fix mpls_xmit for iptunnel
    
    [ Upstream commit 803f3e22ae10003a83c781498c0ac34cfe3463ff ]
    
    When using mpls over gre/gre6 setup, rt->rt_gw4 address is not set, the
    same for rt->rt_gw_family.  Therefore, when rt->rt_gw_family is checked
    in mpls_xmit(), neigh_xmit() call is skipped. As a result, such setup
    doesn't work anymore.
    
    This issue was found with LTP mpls03 tests.
    
    Fixes: 1550c171935d ("ipv4: Prepare rtable for IPv6 gateway")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae154dcba8f4fc51d0ab4a7e81ac10003128f663
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Aug 16 21:26:22 2019 -0700

    tcp: make sure EPOLLOUT wont be missed
    
    [ Upstream commit ef8d8ccdc216f797e66cb4a1372f5c4c285ce1e4 ]
    
    As Jason Baron explained in commit 790ba4566c1a ("tcp: set SOCK_NOSPACE
    under memory pressure"), it is crucial we properly set SOCK_NOSPACE
    when needed.
    
    However, Jason patch had a bug, because the 'nonblocking' status
    as far as sk_stream_wait_memory() is concerned is governed
    by MSG_DONTWAIT flag passed at sendmsg() time :
    
        long timeo = sock_sndtimeo(sk, flags & MSG_DONTWAIT);
    
    So it is very possible that tcp sendmsg() calls sk_stream_wait_memory(),
    and that sk_stream_wait_memory() returns -EAGAIN with SOCK_NOSPACE
    cleared, if sk->sk_sndtimeo has been set to a small (but not zero)
    value.
    
    This patch removes the 'noblock' variable since we must always
    set SOCK_NOSPACE if -EAGAIN is returned.
    
    It also renames the do_nonblock label since we might reach this
    code path even if we were in blocking mode.
    
    Fixes: 790ba4566c1a ("tcp: set SOCK_NOSPACE under memory pressure")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Jason Baron <jbaron@akamai.com>
    Reported-by: Vladimir Rutsky  <rutsky@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Acked-by: Jason Baron <jbaron@akamai.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cbc9336afc74c1da2572d8db4e2cbfd0cb4eff54
Author: Jason Baron <jbaron@akamai.com>
Date:   Mon Aug 19 14:36:01 2019 -0400

    net/smc: make sure EPOLLOUT is raised
    
    [ Upstream commit 4651d1802f7063e4d8c0bcad957f46ece0c04024 ]
    
    Currently, we are only explicitly setting SOCK_NOSPACE on a write timeout
    for non-blocking sockets. Epoll() edge-trigger mode relies on SOCK_NOSPACE
    being set when -EAGAIN is returned to ensure that EPOLLOUT is raised.
    Expand the setting of SOCK_NOSPACE to non-blocking sockets as well that can
    use SO_SNDTIMEO to adjust their write timeout. This mirrors the behavior
    that Eric Dumazet introduced for tcp sockets.
    
    Signed-off-by: Jason Baron <jbaron@akamai.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Ursula Braun <ubraun@linux.ibm.com>
    Cc: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b71ce93d7b116d065a670221089310ac0fb70c9
Author: Li RongQing <lirongqing@baidu.com>
Date:   Tue Aug 20 13:52:47 2019 +0800

    net: fix __ip_mc_inc_group usage
    
    [ Upstream commit a1c4cd67840ef80f6ca5f73326fa9a6719303a95 ]
    
    in ip_mc_inc_group, memory allocation flag, not mcast mode, is expected
    by __ip_mc_inc_group
    
    similar issue in __ip_mc_join_group, both mcase mode and gfp_t are needed
    here, so use ____ip_mc_inc_group(...)
    
    Fixes: 9fb20801dab4 ("net: Fix ip_mc_{dec,inc}_group allocation context")
    Signed-off-by: Li RongQing <lirongqing@baidu.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Zhang Yu <zhangyu31@baidu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6058b22e17e7445592c8ac3ca58d1242eca3223
Author: Antoine Tenart <antoine.tenart@bootlin.com>
Date:   Wed Aug 21 16:41:23 2019 +0200

    net: cpsw: fix NULL pointer exception in the probe error path
    
    [ Upstream commit 2d683eaaeeb9d33d23674ae635e0ef1448523d18 ]
    
    In certain cases when the probe function fails the error path calls
    cpsw_remove_dt() before calling platform_set_drvdata(). This is an
    issue as cpsw_remove_dt() uses platform_get_drvdata() to retrieve the
    cpsw_common data and leds to a NULL pointer exception. This patches
    fixes it by calling platform_set_drvdata() earlier in the probe.
    
    Fixes: 83a8471ba255 ("net: ethernet: ti: cpsw: refactor probe to group common hw initialization")
    Reported-by: Maxime Chevallier <maxime.chevallier@bootlin.com>
    Signed-off-by: Antoine Tenart <antoine.tenart@bootlin.com>
    Reviewed-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5df65fd6f0650dfb4d878e35348e3a77ec992ea
Author: Stefano Brivio <sbrivio@redhat.com>
Date:   Tue Aug 13 00:46:01 2019 +0200

    ipv6: Fix return value of ipv6_mc_may_pull() for malformed packets
    
    Commit ba5ea614622d ("bridge: simplify ip_mc_check_igmp() and
    ipv6_mc_check_mld() calls") replaces direct calls to pskb_may_pull()
    in br_ipv6_multicast_mld2_report() with calls to ipv6_mc_may_pull(),
    that returns -EINVAL on buffers too short to be valid IPv6 packets,
    while maintaining the previous handling of the return code.
    
    This leads to the direct opposite of the intended effect: if the
    packet is malformed, -EINVAL evaluates as true, and we'll happily
    proceed with the processing.
    
    Return 0 if the packet is too short, in the same way as this was
    fixed for IPv4 by commit 083b78a9ed64 ("ip: fix ip_mc_may_pull()
    return value").
    
    I don't have a reproducer for this, unlike the one referred to by
    the IPv4 commit, but this is clearly broken.
    
    Fixes: ba5ea614622d ("bridge: simplify ip_mc_check_igmp() and ipv6_mc_check_mld() calls")
    Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
    Acked-by: Guillaume Nault <gnault@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc428ae89cd48b9a8b8b3bad6715bcc66653efe8
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Tue Aug 20 10:19:47 2019 +0800

    ipv6/addrconf: allow adding multicast addr if IFA_F_MCAUTOJOIN is set
    
    [ Upstream commit f17f7648a49aa6728649ddf79bdbcac4f1970ce4 ]
    
    In commit 93a714d6b53d ("multicast: Extend ip address command to enable
    multicast group join/leave on") we added a new flag IFA_F_MCAUTOJOIN
    to make user able to add multicast address on ethernet interface.
    
    This works for IPv4, but not for IPv6. See the inet6_addr_add code.
    
    static int inet6_addr_add()
    {
            ...
            if (cfg->ifa_flags & IFA_F_MCAUTOJOIN) {
                    ipv6_mc_config(net->ipv6.mc_autojoin_sk, true...)
            }
    
            ifp = ipv6_add_addr(idev, cfg, true, extack); <- always fail with maddr
            if (!IS_ERR(ifp)) {
                    ...
            } else if (cfg->ifa_flags & IFA_F_MCAUTOJOIN) {
                    ipv6_mc_config(net->ipv6.mc_autojoin_sk, false...)
            }
    }
    
    But in ipv6_add_addr() it will check the address type and reject multicast
    address directly. So this feature is never worked for IPv6.
    
    We should not remove the multicast address check totally in ipv6_add_addr(),
    but could accept multicast address only when IFA_F_MCAUTOJOIN flag supplied.
    
    v2: update commit description
    
    Fixes: 93a714d6b53d ("multicast: Extend ip address command to enable multicast group join/leave on")
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8903c1ed2c148023c0ff2d03c2a9fa9f763ba401
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Sat Jun 15 16:03:32 2019 +0200

    mt76: usb: fix rx A-MSDU support
    
    [ Upstream commit 2a92b08b18553c101115423bd34963b1a59a45a3 ]
    
    Commit f8f527b16db5 ("mt76: usb: use EP max packet aligned buffer sizes
    for rx") breaks A-MSDU support. When A-MSDU is enable the device can
    receive frames up to q->buf_size but they will be discarded in
    mt76u_process_rx_entry since there is no enough room for
    skb_shared_info. Fix the issue reallocating the skb and copying in the
    linear area the first 128B of the received frames and in the frag_list
    the remaining part
    
    Fixes: f8f527b16db5 ("mt76: usb: use EP max packet aligned buffer sizes for rx")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 962d7207f53be320ef7d48cfa167aef4fdceaf46
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Mon Jun 10 16:57:38 2019 +0300

    drm/bridge: tfp410: fix memleak in get_modes()
    
    [ Upstream commit c08f99c39083ab55a9c93b3e93cef48711294dad ]
    
    We don't free the edid blob allocated by the call to drm_get_edid(),
    causing a memleak. Fix this by calling kfree(edid) at the end of the
    get_modes().
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190610135739.6077-1-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d4ccc1744b558fbc4a09cec2ce00cc1c414c9d3c
Author: Anders Roxell <anders.roxell@linaro.org>
Date:   Tue Aug 20 15:41:21 2019 +0200

    selftests/bpf: install files test_xdp_vlan.sh
    
    [ Upstream commit 3035bb72ee47d494c041465b4add9c6407c832ed ]
    
    When ./test_xdp_vlan_mode_generic.sh runs it complains that it can't
    find file test_xdp_vlan.sh.
    
     # selftests: bpf: test_xdp_vlan_mode_generic.sh
     # ./test_xdp_vlan_mode_generic.sh: line 9: ./test_xdp_vlan.sh: No such
     file or directory
    
    Rework so that test_xdp_vlan.sh gets installed, added to the variable
    TEST_PROGS_EXTENDED.
    
    Fixes: d35661fcf95d ("selftests/bpf: add wrapper scripts for test_xdp_vlan.sh")
    Signed-off-by: Anders Roxell <anders.roxell@linaro.org>
    Acked-by: Jesper Dangaard Brouer <jbrouer@redhat.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d857dcf1c807ab1bbe2262b03394a522abff96d4
Author: Stefan Wahren <wahrenst@gmx.net>
Date:   Wed May 15 19:14:18 2019 +0200

    watchdog: bcm2835_wdt: Fix module autoload
    
    [ Upstream commit 215e06f0d18d5d653d6ea269e4dfc684854d48bf ]
    
    The commit 5e6acc3e678e ("bcm2835-pm: Move bcm2835-watchdog's DT probe
    to an MFD.") broke module autoloading on Raspberry Pi. So add a
    module alias this fix this.
    
    Signed-off-by: Stefan Wahren <wahrenst@gmx.net>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@linux-watchdog.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eeb6b4a09695ee4ddc7147918d2e2cccef556ca9
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Aug 26 10:31:14 2019 -0400

    lcoking/rwsem: Add missing ACQUIRE to read_slowpath sleep loop
    
    [ Upstream commit 99143f82a255e7f054bead8443462fae76dd829e ]
    
    While reviewing another read_slowpath patch, both Will and I noticed
    another missing ACQUIRE, namely:
    
      X = 0;
    
      CPU0                  CPU1
    
      rwsem_down_read()
        for (;;) {
          set_current_state(TASK_UNINTERRUPTIBLE);
    
                            X = 1;
                            rwsem_up_write();
                              rwsem_mark_wake()
                                atomic_long_add(adjustment, &sem->count);
                                smp_store_release(&waiter->task, NULL);
    
          if (!waiter.task)
            break;
    
          ...
        }
    
      r = X;
    
    Allows 'r == 0'.
    
    Reported-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reported-by: Will Deacon <will@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Will Deacon <will@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Jan Stancek <jstancek@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 931424d0781ea980d81c8d848a3a78dd9ed8885b
Author: Jan Stancek <jstancek@redhat.com>
Date:   Mon Aug 26 10:31:13 2019 -0400

    locking/rwsem: Add missing ACQUIRE to read_slowpath exit when queue is empty
    
    [ Upstream commit e1b98fa316648420d0434d9ff5b92ad6609ba6c3 ]
    
    LTP mtest06 has been observed to occasionally hit "still mapped when
    deleted" and following BUG_ON on arm64.
    
    The extra mapcount originated from pagefault handler, which handled
    pagefault for vma that has already been detached. vma is detached
    under mmap_sem write lock by detach_vmas_to_be_unmapped(), which
    also invalidates vmacache.
    
    When the pagefault handler (under mmap_sem read lock) calls
    find_vma(), vmacache_valid() wrongly reports vmacache as valid.
    
    After rwsem down_read() returns via 'queue empty' path (as of v5.2),
    it does so without an ACQUIRE on sem->count:
    
      down_read()
        __down_read()
          rwsem_down_read_failed()
            __rwsem_down_read_failed_common()
              raw_spin_lock_irq(&sem->wait_lock);
              if (list_empty(&sem->wait_list)) {
                if (atomic_long_read(&sem->count) >= 0) {
                  raw_spin_unlock_irq(&sem->wait_lock);
                  return sem;
    
    The problem can be reproduced by running LTP mtest06 in a loop and
    building the kernel (-j $NCPUS) in parallel. It does reproduces since
    v4.20 on arm64 HPE Apollo 70 (224 CPUs, 256GB RAM, 2 nodes). It
    triggers reliably in about an hour.
    
    The patched kernel ran fine for 10+ hours.
    
    Signed-off-by: Jan Stancek <jstancek@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Will Deacon <will@kernel.org>
    Acked-by: Waiman Long <longman@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: dbueso@suse.de
    Fixes: 4b486b535c33 ("locking/rwsem: Exit read lock slowpath if queue empty & no writer")
    Link: https://lkml.kernel.org/r/50b8914e20d1d62bb2dee42d342836c2c16ebee7.1563438048.git.jstancek@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: Jan Stancek <jstancek@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5faa01cc2b1fc55ced2103d31fd68a20ce0427ec
Author: Adrian Vladu <avladu@cloudbasesolutions.com>
Date:   Mon May 6 16:50:58 2019 +0000

    tools: hv: fix KVP and VSS daemons exit code
    
    [ Upstream commit b0995156071b0ff29a5902964a9dc8cfad6f81c0 ]
    
    HyperV KVP and VSS daemons should exit with 0 when the '--help'
    or '-h' flags are used.
    
    Signed-off-by: Adrian Vladu <avladu@cloudbasesolutions.com>
    
    Cc: "K. Y. Srinivasan" <kys@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Alessandro Pilotti <apilotti@cloudbasesolutions.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6018c3a79e5e41685927d19ea025e931dd7377d
Author: Adrian Vladu <avladu@cloudbasesolutions.com>
Date:   Mon May 6 17:27:37 2019 +0000

    tools: hv: fixed Python pep8/flake8 warnings for lsvmbus
    
    [ Upstream commit 5912e791f3018de0a007c8cfa9cb38c97d3e5f5c ]
    
    Fixed pep8/flake8 python style code for lsvmbus tool.
    
    The TAB indentation was on purpose ignored (pep8 rule W191) to make
    sure the code is complying with the Linux code guideline.
    The following command doe not show any warnings now:
    pep8 --ignore=W191 lsvmbus
    flake8 --ignore=W191 lsvmbus
    
    Signed-off-by: Adrian Vladu <avladu@cloudbasesolutions.com>
    
    Cc: "K. Y. Srinivasan" <kys@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Dexuan Cui <decui@microsoft.com>
    Cc: Alessandro Pilotti <apilotti@cloudbasesolutions.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c983df11ed197bdf2fd640e83ac161748501d274
Author: Hans Ulli Kroll <ulli.kroll@googlemail.com>
Date:   Sat Aug 10 17:04:58 2019 +0200

    usb: host: fotg2: restart hcd after port reset
    
    [ Upstream commit 777758888ffe59ef754cc39ab2f275dc277732f4 ]
    
    On the Gemini SoC the FOTG2 stalls after port reset
    so restart the HCD after each port reset.
    
    Signed-off-by: Hans Ulli Kroll <ulli.kroll@googlemail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20190810150458.817-1-linus.walleij@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a3db3021b1727b2f037dda53a9a3a6ae353a955
Author: Y.C. Chen <yc_chen@aspeedtech.com>
Date:   Wed Apr 11 09:27:39 2018 +0800

    drm/ast: Fixed reboot test may cause system hanged
    
    [ Upstream commit 05b439711f6ff8700e8660f97a1179650778b9cb ]
    
    There is another thread still access standard VGA I/O while loading drm driver.
    Disable standard VGA I/O decode to avoid this issue.
    
    Signed-off-by: Y.C. Chen <yc_chen@aspeedtech.com>
    Reviewed-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1523410059-18415-1-git-send-email-yc_chen@aspeedtech.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 68fc8f1e9103021ab489dce3732fe3beb814b736
Author: Christian König <christian.koenig@amd.com>
Date:   Fri Aug 9 17:27:21 2019 +0200

    drm/scheduler: use job count instead of peek
    
    [ Upstream commit e1b4ce25dbc93ab0cb8ed0f236a3b9ff7b03802c ]
    
    The spsc_queue_peek function is accessing queue->head which belongs to
    the consumer thread and shouldn't be accessed by the producer
    
    This is fixing a rare race condition when destroying entities.
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Acked-by: Andrey Grodzovsky <andrey.grodzovsky@amd.com>
    Reviewed-by: Monk.liu@amd.com
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7046212603e0689f9155f70923a5b9e6608eaaeb
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Thu Aug 8 21:54:17 2019 +0200

    i2c: emev2: avoid race when unregistering slave client
    
    [ Upstream commit d7437fc0d8291181debe032671a289b6bd93f46f ]
    
    After we disabled interrupts, there might still be an active one
    running. Sync before clearing the pointer to the slave device.
    
    Fixes: c31d0a00021d ("i2c: emev2: add slave support")
    Reported-by: Krzysztof Adamski <krzysztof.adamski@nokia.com>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Krzysztof Adamski <krzysztof.adamski@nokia.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38869e74c3ac8bcc0300c02b39d4fdc4277353ca
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Thu Aug 8 21:39:10 2019 +0200

    i2c: rcar: avoid race when unregistering slave client
    
    [ Upstream commit 7b814d852af6944657c2961039f404c4490771c0 ]
    
    After we disabled interrupts, there might still be an active one
    running. Sync before clearing the pointer to the slave device.
    
    Fixes: de20d1857dd6 ("i2c: rcar: add slave support")
    Reported-by: Krzysztof Adamski <krzysztof.adamski@nokia.com>
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Krzysztof Adamski <krzysztof.adamski@nokia.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ad482444c981f6dc456ed5e8d856e253049f3fd
Author: Paul Walmsley <paul.walmsley@sifive.com>
Date:   Wed Aug 7 19:07:34 2019 -0700

    riscv: fix flush_tlb_range() end address for flush_tlb_page()
    
    [ Upstream commit eb93685847a9055283d05951c1b205e737f38533 ]
    
    The RISC-V kernel implementation of flush_tlb_page() when CONFIG_SMP
    is set is wrong.  It passes zero to flush_tlb_range() as the final
    address to flush, but it should be at least 'addr'.
    
    Some other Linux architecture ports use the beginning address to
    flush, plus PAGE_SIZE, as the final address to flush.  This might
    flush slightly more than what's needed, but it seems unlikely that
    being more clever would improve anything.  So let's just take that
    implementation for now.
    
    While here, convert the macro into a static inline function, primarily
    to avoid unintentional multiple evaluations of 'addr'.
    
    This second version of the patch fixes a coding style issue found by
    Christoph Hellwig <hch@lst.de>.
    
    Reported-by: Andreas Schwab <schwab@suse.de>
    Signed-off-by: Paul Walmsley <paul.walmsley@sifive.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 325fd0056cc0f6c9d8f5eaa75e64f2d761847764
Author: Will Deacon <will@kernel.org>
Date:   Mon Aug 12 16:02:25 2019 +0100

    arm64: cpufeature: Don't treat granule sizes as strict
    
    [ Upstream commit 5717fe5ab38f9ccb32718bcb03bea68409c9cce4 ]
    
    If a CPU doesn't support the page size for which the kernel is
    configured, then we will complain and refuse to bring it online. For
    secondary CPUs (and the boot CPU on a system booting with EFI), we will
    also print an error identifying the mismatch.
    
    Consequently, the only time that the cpufeature code can detect a
    granule size mismatch is for a granule other than the one that is
    currently being used. Although we would rather such systems didn't
    exist, we've unfortunately lost that battle and Kevin reports that
    on his amlogic S922X (odroid-n2 board) we end up warning and taining
    with defconfig because 16k pages are not supported by all of the CPUs.
    
    In such a situation, we don't actually care about the feature mismatch,
    particularly now that KVM only exposes the sanitised view of the CPU
    registers (commit 93390c0a1b20 - "arm64: KVM: Hide unsupported AArch64
    CPU features from guests"). Treat the granule fields as non-strict and
    let Kevin run without a tainted kernel.
    
    Cc: Marc Zyngier <maz@kernel.org>
    Reported-by: Kevin Hilman <khilman@baylibre.com>
    Tested-by: Kevin Hilman <khilman@baylibre.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will@kernel.org>
    [catalin.marinas@arm.com: changelog updated with KVM sanitised regs commit]
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a7a7ff625cd4121c6d73356243837cb384ff212
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Sun Aug 11 12:23:22 2019 -0500

    xen/blkback: fix memory leaks
    
    [ Upstream commit ae78ca3cf3d9e9f914bfcd0bc5c389ff18b9c2e0 ]
    
    In read_per_ring_refs(), after 'req' and related memory regions are
    allocated, xen_blkif_map() is invoked to map the shared frame, irq, and
    etc. However, if this mapping process fails, no cleanup is performed,
    leading to memory leaks. To fix this issue, invoke the cleanup before
    returning the error.
    
    Acked-by: Roger Pau Monné <roger.pau@citrix.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82fcf8a5d8f721b4cb8a04c48f7e45a0e3a49345
Author: Ben Segal <bpsegal20@gmail.com>
Date:   Wed Aug 7 13:54:54 2019 +0000

    habanalabs: fix device IRQ unmasking for BE host
    
    [ Upstream commit b421d83a3947369fd5718824aecfaebe1efbf7ed ]
    
    When unmasking IRQs inside the ASIC, the driver passes an array of all the
    IRQ to unmask. The ASIC's CPU is working in LE so when running in a BE
    host, the driver needs to do the proper endianness swapping when preparing
    this array.
    
    In addition, this patch also fixes the endianness of a couple of kernel log
    debug messages that print values of packets
    
    Signed-off-by: Ben Segal <bpsegal20@gmail.com>
    Reviewed-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1a6c6b4f8d8e74fe62287bc314716b726fde32c
Author: Oded Gabbay <oded.gabbay@gmail.com>
Date:   Thu Aug 8 15:45:58 2019 +0300

    habanalabs: fix endianness handling for internal QMAN submission
    
    [ Upstream commit b9040c99414ba5b85090595a61abc686a5dbb388 ]
    
    The PQs of internal H/W queues (QMANs) can be located in different memory
    areas for different ASICs. Therefore, when writing PQEs, we need to use
    the correct function according to the location of the PQ. e.g. if the PQ
    is located in the device's memory (SRAM or DRAM), we need to use
    memcpy_toio() so it would work in architectures that have separate
    address ranges for IO memory.
    
    This patch makes the code that writes the PQE to be ASIC-specific so we
    can handle this properly per ASIC.
    
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Tested-by: Ben Segal <bpsegal20@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1900d706b9c4aff70d9d599d327f283e1b5e0f15
Author: Ben Segal <bpsegal20@gmail.com>
Date:   Thu Aug 1 23:22:20 2019 +0000

    habanalabs: fix completion queue handling when host is BE
    
    [ Upstream commit 4e87334a0ef43663019dbaf3638ad10fd8c3320c ]
    
    This patch fix the CQ irq handler to work in hosts with BE architecture.
    It adds the correct endian-swapping macros around the relevant memory
    accesses.
    
    Signed-off-by: Ben Segal <bpsegal20@gmail.com>
    Reviewed-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79e338d70c868cf8074e54f292214f9b812af0b2
Author: Ben Segal <bpsegal20@gmail.com>
Date:   Thu Aug 1 23:20:32 2019 +0000

    habanalabs: fix endianness handling for packets from user
    
    [ Upstream commit 213ad5ad016a0da975b35f54e8cd236c3b04724b ]
    
    Packets that arrive from the user and need to be parsed by the driver are
    assumed to be in LE format.
    
    This patch fix all the places where the code handles these packets and use
    the correct endianness macros to handle them, as the driver handles the
    packets in CPU format (LE or BE depending on the arch).
    
    Signed-off-by: Ben Segal <bpsegal20@gmail.com>
    Reviewed-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a18515cc03f5425f70dfe2f1de91674541b276f
Author: Tomer Tayar <ttayar@habana.ai>
Date:   Sun Aug 4 07:03:41 2019 +0000

    habanalabs: fix DRAM usage accounting on context tear down
    
    [ Upstream commit c8113756ba27298d6e95403c087dc5881b419a99 ]
    
    The patch fix the DRAM usage accounting by adding a missing update of
    the DRAM memory consumption, when a context is being torn down without an
    organized release of the allocated memory.
    
    Signed-off-by: Tomer Tayar <ttayar@habana.ai>
    Reviewed-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c041ddb7569821131954e63e2c5ced0ab297d78a
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri Jul 26 14:59:04 2019 +1000

    usb: gadget: mass_storage: Fix races between fsg_disable and fsg_set_alt
    
    [ Upstream commit 4a56a478a525d6427be90753451c40e1327caa1a ]
    
    If fsg_disable() and fsg_set_alt() are called too closely to each
    other (for example due to a quick reset/reconnect), what can happen
    is that fsg_set_alt sets common->new_fsg from an interrupt while
    handle_exception is trying to process the config change caused by
    fsg_disable():
    
            fsg_disable()
            ...
            handle_exception()
                    sets state back to FSG_STATE_NORMAL
                    hasn't yet called do_set_interface()
                    or is inside it.
    
     ---> interrupt
            fsg_set_alt
                    sets common->new_fsg
                    queues a new FSG_STATE_CONFIG_CHANGE
     <---
    
    Now, the first handle_exception can "see" the updated
    new_fsg, treats it as if it was a fsg_set_alt() response,
    call usb_composite_setup_continue() etc...
    
    But then, the thread sees the second FSG_STATE_CONFIG_CHANGE,
    and goes back down the same path, wipes and reattaches a now
    active fsg, and .. calls usb_composite_setup_continue() which
    at this point is wrong.
    
    Not only we get a backtrace, but I suspect the second set_interface
    wrecks some state causing the host to get upset in my case.
    
    This fixes it by replacing "new_fsg" by a "state argument" (same
    principle) which is set in the same lock section as the state
    update, and retrieved similarly.
    
    That way, there is never any discrepancy between the dequeued
    state and the observed value of it. We keep the ability to have
    the latest reconfig operation take precedence, but we guarantee
    that once "dequeued" the argument (new_fsg) will not be clobbered
    by any new event.
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f1b93b5a45cb6b6757f88f0029b6e59a1c72a4f
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri Jul 26 14:59:03 2019 +1000

    usb: gadget: composite: Clear "suspended" on reset/disconnect
    
    [ Upstream commit 602fda17c7356bb7ae98467d93549057481d11dd ]
    
    In some cases, one can get out of suspend with a reset or
    a disconnect followed by a reconnect. Previously we would
    leave a stale suspended flag set.
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ab6b15a00ca56ecc1ce372478916a611d369151
Author: Lucas Stach <l.stach@pengutronix.de>
Date:   Mon Aug 5 17:51:53 2019 +0200

    dma-direct: don't truncate dma_required_mask to bus addressing capabilities
    
    [ Upstream commit d8ad55538abe443919e20e0bb996561bca9cad84 ]
    
    The dma required_mask needs to reflect the actual addressing capabilities
    needed to handle the whole system RAM. When truncated down to the bus
    addressing capabilities dma_addressing_limited() will incorrectly signal
    no limitations for devices which are restricted by the bus_dma_mask.
    
    Fixes: b4ebe6063204 (dma-direct: implement complete bus_dma_mask handling)
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Tested-by: Atish Patra <atish.patra@wdc.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 583c8d3118e00e32b1fe64dc6c442e8f241f9198
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Mon Jul 29 17:46:00 2019 +0100

    iommu/dma: Handle SG length overflow better
    
    [ Upstream commit ab2cbeb0ed301a9f0460078e91b09f39958212ef ]
    
    Since scatterlist dimensions are all unsigned ints, in the relatively
    rare cases where a device's max_segment_size is set to UINT_MAX, then
    the "cur_len + s_length <= max_len" check in __finalise_sg() will always
    return true. As a result, the corner case of such a device mapping an
    excessively large scatterlist which is mergeable to or beyond a total
    length of 4GB can lead to overflow and a bogus truncated dma_length in
    the resulting segment.
    
    As we already assume that any single segment must be no longer than
    max_len to begin with, this can easily be addressed by reshuffling the
    comparison.
    
    Fixes: 809eac54cdd6 ("iommu/dma: Implement scatterlist segment merging")
    Reported-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Tested-by: Nicolin Chen <nicoleotsuka@gmail.com>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4aab45c37962958fd5263278b26d9861ca2bdc63
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Fri Aug 9 10:32:40 2019 +0200

    omap-dma/omap_vout_vrfb: fix off-by-one fi value
    
    [ Upstream commit d555c34338cae844b207564c482e5a3fb089d25e ]
    
    The OMAP 4 TRM specifies that when using double-index addressing
    the address increases by the ES plus the EI value minus 1 within
    a frame. When a full frame is transferred, the address increases
    by the ES plus the frame index (FI) value minus 1.
    
    The omap-dma code didn't account for the 'minus 1' in the FI register.
    To get correct addressing, add 1 to the src_icg value.
    
    This was found when testing a hacked version of the media m2m-deinterlace.c
    driver on a Pandaboard.
    
    The only other source that uses this feature is omap_vout_vrfb.c,
    and that adds a + 1 when setting the dst_icg. This is a workaround
    for the broken omap-dma.c behavior. So remove the workaround at the
    same time that we fix omap-dma.c.
    
    I tested the omap_vout driver with a Beagle XM board to check that
    the '+ 1' in omap_vout_vrfb.c was indeed a workaround for the omap-dma
    bug.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Acked-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Link: https://lore.kernel.org/r/952e7f51-f208-9333-6f58-b7ed20d2ea0b@xs4all.nl
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ceddea2da13abbd22e5d6956d6edcfb334b1159
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Mon Jul 29 10:08:49 2019 +0800

    dmaengine: stm32-mdma: Fix a possible null-pointer dereference in stm32_mdma_irq_handler()
    
    [ Upstream commit 39c71a5b8212f4b502d9a630c6706ac723abd422 ]
    
    In stm32_mdma_irq_handler(), chan is checked on line 1368.
    When chan is NULL, it is still used on line 1369:
        dev_err(chan2dev(chan), "MDMA channel not initialized\n");
    
    Thus, a possible null-pointer dereference may occur.
    
    To fix this bug, "dev_dbg(mdma2dev(dmadev), ...)" is used instead.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Fixes: a4ffb13c8946 ("dmaengine: Add STM32 MDMA driver")
    Link: https://lore.kernel.org/r/20190729020849.17971-1-baijiaju1990@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4a200842e83d125e20122f35742d98b31bb9106
Author: Yishai Hadas <yishaih@mellanox.com>
Date:   Mon Aug 5 11:30:10 2019 +0300

    IB/mlx5: Fix implicit MR release flow
    
    [ Upstream commit f591822c3cf314442819486f45ff7dc1f690e0c0 ]
    
    Once implicit MR is being called to be released by
    ib_umem_notifier_release() its leaves were marked as "dying".
    
    However, when dereg_mr()->mlx5_ib_free_implicit_mr()->mr_leaf_free() is
    called, it skips running the mr_leaf_free_action (i.e. umem_odp->work)
    when those leaves were marked as "dying".
    
    As such ib_umem_release() for the leaves won't be called and their MRs
    will be leaked as well.
    
    When an application exits/killed without calling dereg_mr we might hit the
    above flow.
    
    This fatal scenario is reported by WARN_ON() upon
    mlx5_ib_dealloc_ucontext() as ibcontext->per_mm_list is not empty, the
    call trace can be seen below.
    
    Originally the "dying" mark as part of ib_umem_notifier_release() was
    introduced to prevent pagefault_mr() from returning a success response
    once this happened. However, we already have today the completion
    mechanism so no need for that in those flows any more.  Even in case a
    success response will be returned the firmware will not find the pages and
    an error will be returned in the following call as a released mm will
    cause ib_umem_odp_map_dma_pages() to permanently fail mmget_not_zero().
    
    Fix the above issue by dropping the "dying" from the above flows.  The
    other flows that are using "dying" are still needed it for their
    synchronization purposes.
    
       WARNING: CPU: 1 PID: 7218 at
       drivers/infiniband/hw/mlx5/main.c:2004
                      mlx5_ib_dealloc_ucontext+0x84/0x90 [mlx5_ib]
       CPU: 1 PID: 7218 Comm: ibv_rc_pingpong Tainted: G     E
                   5.2.0-rc6+ #13
       Call Trace:
       uverbs_destroy_ufile_hw+0xb5/0x120 [ib_uverbs]
       ib_uverbs_close+0x1f/0x80 [ib_uverbs]
       __fput+0xbe/0x250
       task_work_run+0x88/0xa0
       do_exit+0x2cb/0xc30
       ? __fput+0x14b/0x250
       do_group_exit+0x39/0xb0
       get_signal+0x191/0x920
       ? _raw_spin_unlock_bh+0xa/0x20
       ? inet_csk_accept+0x229/0x2f0
       do_signal+0x36/0x5e0
       ? put_unused_fd+0x5b/0x70
       ? __sys_accept4+0x1a6/0x1e0
       ? inet_hash+0x35/0x40
       ? release_sock+0x43/0x90
       ? _raw_spin_unlock_bh+0xa/0x20
       ? inet_listen+0x9f/0x120
       exit_to_usermode_loop+0x5c/0xc6
       do_syscall_64+0x182/0x1b0
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: 81713d3788d2 ("IB/mlx5: Add implicit MR support")
    Link: https://lore.kernel.org/r/20190805083010.21777-1-leon@kernel.org
    Signed-off-by: Yishai Hadas <yishaih@mellanox.com>
    Reviewed-by: Artemy Kovalyov <artemyko@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8bd4c018836bb3ecff3afe7faa642f26494aaea
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue May 28 16:21:54 2019 +0800

    btrfs: trim: Check the range passed into to prevent overflow
    
    [ Upstream commit 07301df7d2fc220d3de5f7ad804dcb941400cb00 ]
    
    Normally the range->len is set to default value (U64_MAX), but when it's
    not default value, we should check if the range overflows.
    
    And if it overflows, return -EINVAL before doing anything.
    
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1b16e1427f41c3588a97154a27cf4d34b6f0ece
Author: zhengbin <zhengbin13@huawei.com>
Date:   Mon Jul 8 20:42:18 2019 +0800

    auxdisplay: panel: need to delete scan_timer when misc_register fails in panel_attach
    
    [ Upstream commit b33d567560c1aadf3033290d74d4fd67af47aa61 ]
    
    In panel_attach, if misc_register fails, we need to delete scan_timer,
    which was setup in keypad_init->init_scan_timer.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: zhengbin <zhengbin13@huawei.com>
    Signed-off-by: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ceac72e0a8cc98fbfcba3ed58b9539a6be541e5e
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Thu Jul 25 18:40:06 2019 -0500

    soundwire: cadence_master: fix definitions for INTSTAT0/1
    
    [ Upstream commit 664b16589f882202b8fa8149d0074f3159bade76 ]
    
    Two off-by-one errors: INTSTAT0 missed BIT(31) and INTSTAT1 is only
    defined on first 16 bits.
    
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20190725234032.21152-15-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50b59bb1043bfd877b688cb3617f05b10ac0b177
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Thu Jul 25 18:40:05 2019 -0500

    soundwire: cadence_master: fix register definition for SLAVE_STATE
    
    [ Upstream commit b07dd9b400981f487940a4d84292d3a0e7cd9362 ]
    
    wrong prefix and wrong macro.
    
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20190725234032.21152-14-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c88a50ced6de8188725681ed70abe7f0b0133c94
Author: Keith Busch <kbusch@kernel.org>
Date:   Mon Jul 29 16:34:52 2019 -0600

    nvme-pci: Fix async probe remove race
    
    [ Upstream commit bd46a90634302bfe791e93ad5496f98f165f7ae0 ]
    
    Ensure the controller is not in the NEW state when nvme_probe() exits.
    This will always allow a subsequent nvme_remove() to set the state to
    DELETING, fixing a potential race between the initial asynchronous probe
    and device removal.
    
    Reported-by: Li Zhong <lizhongfs@gmail.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9dd8dc3d8a798188a2274de8fe24876ab15e28c8
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Thu Jul 25 11:56:57 2019 -0700

    nvme: fix controller removal race with scan work
    
    [ Upstream commit 0157ec8dad3c8fc9bc9790f76e0831ffdaf2e7f0 ]
    
    With multipath enabled, nvme_scan_work() can read from the device
    (through nvme_mpath_add_disk()) and hang [1]. However, with fabrics,
    once ctrl->state is set to NVME_CTRL_DELETING, the reads will hang
    (see nvmf_check_ready()) and the mpath stack device make_request
    will block if head->list is not empty. However, when the head->list
    consistst of only DELETING/DEAD controllers, we should actually not
    block, but rather fail immediately.
    
    In addition, before we go ahead and remove the namespaces, make sure
    to clear the current path and kick the requeue list so that the
    request will fast fail upon requeuing.
    
    [1]:
    --
      INFO: task kworker/u4:3:166 blocked for more than 120 seconds.
            Not tainted 5.2.0-rc6-vmlocalyes-00005-g808c8c2dc0cf #316
      "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
      kworker/u4:3    D    0   166      2 0x80004000
      Workqueue: nvme-wq nvme_scan_work
      Call Trace:
       __schedule+0x851/0x1400
       schedule+0x99/0x210
       io_schedule+0x21/0x70
       do_read_cache_page+0xa57/0x1330
       read_cache_page+0x4a/0x70
       read_dev_sector+0xbf/0x380
       amiga_partition+0xc4/0x1230
       check_partition+0x30f/0x630
       rescan_partitions+0x19a/0x980
       __blkdev_get+0x85a/0x12f0
       blkdev_get+0x2a5/0x790
       __device_add_disk+0xe25/0x1250
       device_add_disk+0x13/0x20
       nvme_mpath_set_live+0x172/0x2b0
       nvme_update_ns_ana_state+0x130/0x180
       nvme_set_ns_ana_state+0x9a/0xb0
       nvme_parse_ana_log+0x1c3/0x4a0
       nvme_mpath_add_disk+0x157/0x290
       nvme_validate_ns+0x1017/0x1bd0
       nvme_scan_work+0x44d/0x6a0
       process_one_work+0x7d7/0x1240
       worker_thread+0x8e/0xff0
       kthread+0x2c3/0x3b0
       ret_from_fork+0x35/0x40
    
       INFO: task kworker/u4:1:1034 blocked for more than 120 seconds.
            Not tainted 5.2.0-rc6-vmlocalyes-00005-g808c8c2dc0cf #316
      "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
      kworker/u4:1    D    0  1034      2 0x80004000
      Workqueue: nvme-delete-wq nvme_delete_ctrl_work
      Call Trace:
       __schedule+0x851/0x1400
       schedule+0x99/0x210
       schedule_timeout+0x390/0x830
       wait_for_completion+0x1a7/0x310
       __flush_work+0x241/0x5d0
       flush_work+0x10/0x20
       nvme_remove_namespaces+0x85/0x3d0
       nvme_do_delete_ctrl+0xb4/0x1e0
       nvme_delete_ctrl_work+0x15/0x20
       process_one_work+0x7d7/0x1240
       worker_thread+0x8e/0xff0
       kthread+0x2c3/0x3b0
       ret_from_fork+0x35/0x40
    --
    
    Reported-by: Logan Gunthorpe <logang@deltatee.com>
    Tested-by: Logan Gunthorpe <logang@deltatee.com>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be2e81d1d8d4311101318edf31483b6a198b4bd0
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Fri Jul 26 10:29:49 2019 -0700

    nvme-rdma: fix possible use-after-free in connect error flow
    
    [ Upstream commit d94211b8bad3787e0655a67284105f57db728cb1 ]
    
    When start_queue fails, we need to make sure to drain the
    queue cq before freeing the rdma resources because we might
    still race with the completion path. Have start_queue() error
    path safely stop the queue.
    
    --
    [30371.808111] nvme nvme1: Failed reconnect attempt 11
    [30371.808113] nvme nvme1: Reconnecting in 10 seconds...
    [...]
    [30382.069315] nvme nvme1: creating 4 I/O queues.
    [30382.257058] nvme nvme1: Connect Invalid SQE Parameter, qid 4
    [30382.257061] nvme nvme1: failed to connect queue: 4 ret=386
    [30382.305001] BUG: unable to handle kernel NULL pointer dereference at 0000000000000018
    [30382.305022] IP: qedr_poll_cq+0x8a3/0x1170 [qedr]
    [30382.305028] PGD 0 P4D 0
    [30382.305037] Oops: 0000 [#1] SMP PTI
    [...]
    [30382.305153] Call Trace:
    [30382.305166]  ? __switch_to_asm+0x34/0x70
    [30382.305187]  __ib_process_cq+0x56/0xd0 [ib_core]
    [30382.305201]  ib_poll_handler+0x26/0x70 [ib_core]
    [30382.305213]  irq_poll_softirq+0x88/0x110
    [30382.305223]  ? sort_range+0x20/0x20
    [30382.305232]  __do_softirq+0xde/0x2c6
    [30382.305241]  ? sort_range+0x20/0x20
    [30382.305249]  run_ksoftirqd+0x1c/0x60
    [30382.305258]  smpboot_thread_fn+0xef/0x160
    [30382.305265]  kthread+0x113/0x130
    [30382.305273]  ? kthread_create_worker_on_cpu+0x50/0x50
    [30382.305281]  ret_from_fork+0x35/0x40
    --
    
    Reported-by: Nicolas Morey-Chaisemartin <NMoreyChaisemartin@suse.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3b4b4440a0c53ac0b478463609a46e3fa2e2e56
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Wed Jul 31 11:00:26 2019 -0700

    nvme: fix a possible deadlock when passthru commands sent to a multipath device
    
    [ Upstream commit b9156daeb1601d69007b7e50efcf89d69d72ec1d ]
    
    When the user issues a command with side effects, we will end up freezing
    the namespace request queue when updating disk info (and the same for
    the corresponding mpath disk node).
    
    However, we are not freezing the mpath node request queue,
    which means that mpath I/O can still come in and block on blk_queue_enter
    (called from nvme_ns_head_make_request -> direct_make_request).
    
    This is a deadlock, because blk_queue_enter will block until the inner
    namespace request queue is unfroze, but that process is blocked because
    the namespace revalidation is trying to update the mpath disk info
    and freeze its request queue (which will never complete because
    of the I/O that is blocked on blk_queue_enter).
    
    Fix this by freezing all the subsystem nsheads request queues before
    executing the passthru command. Given that these commands are infrequent
    we should not worry about this temporary I/O freeze to keep things sane.
    
    Here is the matching hang traces:
    --
    [ 374.465002] INFO: task systemd-udevd:17994 blocked for more than 122 seconds.
    [ 374.472975] Not tainted 5.2.0-rc3-mpdebug+ #42
    [ 374.478522] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [ 374.487274] systemd-udevd D 0 17994 1 0x00000000
    [ 374.493407] Call Trace:
    [ 374.496145] __schedule+0x2ef/0x620
    [ 374.500047] schedule+0x38/0xa0
    [ 374.503569] blk_queue_enter+0x139/0x220
    [ 374.507959] ? remove_wait_queue+0x60/0x60
    [ 374.512540] direct_make_request+0x60/0x130
    [ 374.517219] nvme_ns_head_make_request+0x11d/0x420 [nvme_core]
    [ 374.523740] ? generic_make_request_checks+0x307/0x6f0
    [ 374.529484] generic_make_request+0x10d/0x2e0
    [ 374.534356] submit_bio+0x75/0x140
    [ 374.538163] ? guard_bio_eod+0x32/0xe0
    [ 374.542361] submit_bh_wbc+0x171/0x1b0
    [ 374.546553] block_read_full_page+0x1ed/0x330
    [ 374.551426] ? check_disk_change+0x70/0x70
    [ 374.556008] ? scan_shadow_nodes+0x30/0x30
    [ 374.560588] blkdev_readpage+0x18/0x20
    [ 374.564783] do_read_cache_page+0x301/0x860
    [ 374.569463] ? blkdev_writepages+0x10/0x10
    [ 374.574037] ? prep_new_page+0x88/0x130
    [ 374.578329] ? get_page_from_freelist+0xa2f/0x1280
    [ 374.583688] ? __alloc_pages_nodemask+0x179/0x320
    [ 374.588947] read_cache_page+0x12/0x20
    [ 374.593142] read_dev_sector+0x2d/0xd0
    [ 374.597337] read_lba+0x104/0x1f0
    [ 374.601046] find_valid_gpt+0xfa/0x720
    [ 374.605243] ? string_nocheck+0x58/0x70
    [ 374.609534] ? find_valid_gpt+0x720/0x720
    [ 374.614016] efi_partition+0x89/0x430
    [ 374.618113] ? string+0x48/0x60
    [ 374.621632] ? snprintf+0x49/0x70
    [ 374.625339] ? find_valid_gpt+0x720/0x720
    [ 374.629828] check_partition+0x116/0x210
    [ 374.634214] rescan_partitions+0xb6/0x360
    [ 374.638699] __blkdev_reread_part+0x64/0x70
    [ 374.643377] blkdev_reread_part+0x23/0x40
    [ 374.647860] blkdev_ioctl+0x48c/0x990
    [ 374.651956] block_ioctl+0x41/0x50
    [ 374.655766] do_vfs_ioctl+0xa7/0x600
    [ 374.659766] ? locks_lock_inode_wait+0xb1/0x150
    [ 374.664832] ksys_ioctl+0x67/0x90
    [ 374.668539] __x64_sys_ioctl+0x1a/0x20
    [ 374.672732] do_syscall_64+0x5a/0x1c0
    [ 374.676828] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    [ 374.738474] INFO: task nvmeadm:49141 blocked for more than 123 seconds.
    [ 374.745871] Not tainted 5.2.0-rc3-mpdebug+ #42
    [ 374.751419] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [ 374.760170] nvmeadm D 0 49141 36333 0x00004080
    [ 374.766301] Call Trace:
    [ 374.769038] __schedule+0x2ef/0x620
    [ 374.772939] schedule+0x38/0xa0
    [ 374.776452] blk_mq_freeze_queue_wait+0x59/0x100
    [ 374.781614] ? remove_wait_queue+0x60/0x60
    [ 374.786192] blk_mq_freeze_queue+0x1a/0x20
    [ 374.790773] nvme_update_disk_info.isra.57+0x5f/0x350 [nvme_core]
    [ 374.797582] ? nvme_identify_ns.isra.50+0x71/0xc0 [nvme_core]
    [ 374.804006] __nvme_revalidate_disk+0xe5/0x110 [nvme_core]
    [ 374.810139] nvme_revalidate_disk+0xa6/0x120 [nvme_core]
    [ 374.816078] ? nvme_submit_user_cmd+0x11e/0x320 [nvme_core]
    [ 374.822299] nvme_user_cmd+0x264/0x370 [nvme_core]
    [ 374.827661] nvme_dev_ioctl+0x112/0x1d0 [nvme_core]
    [ 374.833114] do_vfs_ioctl+0xa7/0x600
    [ 374.837117] ? __audit_syscall_entry+0xdd/0x130
    [ 374.842184] ksys_ioctl+0x67/0x90
    [ 374.845891] __x64_sys_ioctl+0x1a/0x20
    [ 374.850082] do_syscall_64+0x5a/0x1c0
    [ 374.854178] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    --
    
    Reported-by: James Puthukattukaran <james.puthukattukaran@oracle.com>
    Tested-by: James Puthukattukaran <james.puthukattukaran@oracle.com>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d067f76d200912f484d5694ce2005bfb63649a08
Author: Logan Gunthorpe <logang@deltatee.com>
Date:   Wed Jul 31 17:35:34 2019 -0600

    nvme-core: Fix extra device_put() call on error path
    
    [ Upstream commit 8c36e66fb407ce076535a7db98ab9f6d720b866a ]
    
    In the error path for nvme_init_subsystem(), nvme_put_subsystem()
    will call device_put(), but it will get called again after the
    mutex_unlock().
    
    The device_put() only needs to be called if device_add() fails.
    
    This bug caused a KASAN use-after-free error when adding and
    removing subsytems in a loop:
    
      BUG: KASAN: use-after-free in device_del+0x8d9/0x9a0
      Read of size 8 at addr ffff8883cdaf7120 by task multipathd/329
    
      CPU: 0 PID: 329 Comm: multipathd Not tainted 5.2.0-rc6-vmlocalyes-00019-g70a2b39005fd-dirty #314
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1 04/01/2014
      Call Trace:
       dump_stack+0x7b/0xb5
       print_address_description+0x6f/0x280
       ? device_del+0x8d9/0x9a0
       __kasan_report+0x148/0x199
       ? device_del+0x8d9/0x9a0
       ? class_release+0x100/0x130
       ? device_del+0x8d9/0x9a0
       kasan_report+0x12/0x20
       __asan_report_load8_noabort+0x14/0x20
       device_del+0x8d9/0x9a0
       ? device_platform_notify+0x70/0x70
       nvme_destroy_subsystem+0xf9/0x150
       nvme_free_ctrl+0x280/0x3a0
       device_release+0x72/0x1d0
       kobject_put+0x144/0x410
       put_device+0x13/0x20
       nvme_free_ns+0xc4/0x100
       nvme_release+0xb3/0xe0
       __blkdev_put+0x549/0x6e0
       ? kasan_check_write+0x14/0x20
       ? bd_set_size+0xb0/0xb0
       ? kasan_check_write+0x14/0x20
       ? mutex_lock+0x8f/0xe0
       ? __mutex_lock_slowpath+0x20/0x20
       ? locks_remove_file+0x239/0x370
       blkdev_put+0x72/0x2c0
       blkdev_close+0x8d/0xd0
       __fput+0x256/0x770
       ? _raw_read_lock_irq+0x40/0x40
       ____fput+0xe/0x10
       task_work_run+0x10c/0x180
       ? filp_close+0xf7/0x140
       exit_to_usermode_loop+0x151/0x170
       do_syscall_64+0x240/0x2e0
       ? prepare_exit_to_usermode+0xd5/0x190
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
      RIP: 0033:0x7f5a79af05d7
      Code: 00 00 0f 05 48 3d 00 f0 ff ff 77 3f c3 66 0f 1f 44 00 00 53 89 fb 48 83 ec 10 e8 c4 fb ff ff 89 df 89 c2 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 2b 89 d7 89 44 24 0c e8 06 fc ff ff 8b 44 24
      RSP: 002b:00007f5a7799c810 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
      RAX: 0000000000000000 RBX: 0000000000000008 RCX: 00007f5a79af05d7
      RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000008
      RBP: 00007f5a58000f98 R08: 0000000000000002 R09: 00007f5a7935ee80
      R10: 0000000000000000 R11: 0000000000000293 R12: 000055e432447240
      R13: 0000000000000000 R14: 0000000000000001 R15: 000055e4324a9cf0
    
      Allocated by task 1236:
       save_stack+0x21/0x80
       __kasan_kmalloc.constprop.6+0xab/0xe0
       kasan_kmalloc+0x9/0x10
       kmem_cache_alloc_trace+0x102/0x210
       nvme_init_identify+0x13c3/0x3820
       nvme_loop_configure_admin_queue+0x4fa/0x5e0
       nvme_loop_create_ctrl+0x469/0xf40
       nvmf_dev_write+0x19a3/0x21ab
       __vfs_write+0x66/0x120
       vfs_write+0x154/0x490
       ksys_write+0x104/0x240
       __x64_sys_write+0x73/0xb0
       do_syscall_64+0xa5/0x2e0
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      Freed by task 329:
       save_stack+0x21/0x80
       __kasan_slab_free+0x129/0x190
       kasan_slab_free+0xe/0x10
       kfree+0xa7/0x200
       nvme_release_subsystem+0x49/0x60
       device_release+0x72/0x1d0
       kobject_put+0x144/0x410
       put_device+0x13/0x20
       klist_class_dev_put+0x31/0x40
       klist_put+0x8f/0xf0
       klist_del+0xe/0x10
       device_del+0x3a7/0x9a0
       nvme_destroy_subsystem+0xf9/0x150
       nvme_free_ctrl+0x280/0x3a0
       device_release+0x72/0x1d0
       kobject_put+0x144/0x410
       put_device+0x13/0x20
       nvme_free_ns+0xc4/0x100
       nvme_release+0xb3/0xe0
       __blkdev_put+0x549/0x6e0
       blkdev_put+0x72/0x2c0
       blkdev_close+0x8d/0xd0
       __fput+0x256/0x770
       ____fput+0xe/0x10
       task_work_run+0x10c/0x180
       exit_to_usermode_loop+0x151/0x170
       do_syscall_64+0x240/0x2e0
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: 32fd90c40768 ("nvme: change locking for the per-subsystem controller list")
    Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by : Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7b13f9b376d37198c42cc0c67add071a7c0e91a
Author: Logan Gunthorpe <logang@deltatee.com>
Date:   Wed Jul 31 17:35:33 2019 -0600

    nvmet-file: fix nvmet_file_flush() always returning an error
    
    [ Upstream commit cfc1a1af56200362d1508b82b9a3cc3acb2eae0c ]
    
    Presently, nvmet_file_flush() always returns a call to
    errno_to_nvme_status() but that helper doesn't take into account the
    case when errno=0. So nvmet_file_flush() always returns an error code.
    
    All other callers of errno_to_nvme_status() check for success before
    calling it.
    
    To fix this, ensure errno_to_nvme_status() returns success if the
    errno is zero. This should prevent future mistakes like this from
    happening.
    
    Fixes: c6aa3542e010 ("nvmet: add error log support for file backend")
    Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 938f8292e9ef1ed1ba46965d0e75f160a91b76b5
Author: Logan Gunthorpe <logang@deltatee.com>
Date:   Wed Jul 31 17:35:32 2019 -0600

    nvmet-loop: Flush nvme_delete_wq when removing the port
    
    [ Upstream commit 86b9a63e595ff03f9d0a7b92b6acc231fecefc29 ]
    
    After calling nvme_loop_delete_ctrl(), the controllers will not
    yet be deleted because nvme_delete_ctrl() only schedules work
    to do the delete.
    
    This means a race can occur if a port is removed but there
    are still active controllers trying to access that memory.
    
    To fix this, flush the nvme_delete_wq before returning from
    nvme_loop_remove_port() so that any controllers that might
    be in the process of being deleted won't access a freed port.
    
    Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by : Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19620ce482fccce4426459dd12ff22c1227b6097
Author: Logan Gunthorpe <logang@deltatee.com>
Date:   Wed Jul 31 17:35:31 2019 -0600

    nvmet: Fix use-after-free bug when a port is removed
    
    [ Upstream commit 3aed86731ee2b23e4dc4d2c6d943d33992cd551b ]
    
    When a port is removed through configfs, any connected controllers
    are still active and can still send commands. This causes a
    use-after-free bug which is detected by KASAN for any admin command
    that dereferences req->port (like in nvmet_execute_identify_ctrl).
    
    To fix this, disconnect all active controllers when a subsystem is
    removed from a port. This ensures there are no active controllers
    when the port is eventually removed.
    
    Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by : Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a40201a850a833a22cce87c398db35e32dde4a59
Author: David Howells <dhowells@redhat.com>
Date:   Tue Jul 30 14:38:52 2019 +0100

    afs: Fix missing dentry data version updating
    
    [ Upstream commit 9dd0b82ef530cdfe805c9f7079c99e104be59a14 ]
    
    In the in-kernel afs filesystem, the d_fsdata dentry field is used to hold
    the data version of the parent directory when it was created or when
    d_revalidate() last caused it to be updated.  This is compared to the
    ->invalid_before field in the directory inode, rather than the actual data
    version number, thereby allowing changes due to local edits to be ignored.
    Only if the server data version gets bumped unexpectedly (eg. by a
    competing client), do we need to revalidate stuff.
    
    However, the d_fsdata field should also be updated if an rpc op is
    performed that modifies that particular dentry.  Such ops return the
    revised data version of the directory(ies) involved, so we should use that.
    
    This is particularly problematic for rename, since a dentry from one
    directory may be moved directly into another directory (ie. mv a/x b/x).
    It would then be sporting the wrong data version - and if this is in the
    future, for the destination directory, revalidations would be missed,
    leading to foreign renames and hard-link deletion being missed.
    
    Fix this by the following means:
    
     (1) Return the data version number from operations that read the directory
         contents - if they issue the read.  This starts in afs_dir_iterate()
         and is used, ignored or passed back by its callers.
    
     (2) In afs_lookup*(), set the dentry version to the version returned by
         (1) before d_splice_alias() is called and the dentry published.
    
     (3) In afs_d_revalidate(), set the dentry version to that returned from
         (1) if an rpc call was issued.  This means that if a parallel
         procedure, such as mkdir(), modifies the directory, we won't
         accidentally use the data version from that.
    
     (4) In afs_{mkdir,create,link,symlink}(), set the new dentry's version to
         the directory data version before d_instantiate() is called.
    
     (5) In afs_{rmdir,unlink}, update the target dentry's version to the
         directory data version as soon as we've updated the directory inode.
    
     (6) In afs_rename(), we need to unhash the old dentry before we start so
         that we don't get afs_d_revalidate() reverting the version change in
         cross-directory renames.
    
         We then need to set both the old and the new dentry versions the data
         version of the new directory before we call d_move() as d_move() will
         rehash them.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb64ee1826567d08e443757314f8e63da7c15f96
Author: David Howells <dhowells@redhat.com>
Date:   Tue Jul 30 14:38:51 2019 +0100

    afs: Only update d_fsdata if different in afs_d_revalidate()
    
    [ Upstream commit 5dc84855b0fc7e1db182b55c5564fd539d6eff92 ]
    
    In the in-kernel afs filesystem, d_fsdata is set with the data version of
    the parent directory.  afs_d_revalidate() will update this to the current
    directory version, but it shouldn't do this if it the value it read from
    d_fsdata is the same as no lock is held and cmpxchg() is not used.
    
    Fix the code to only change the value if it is different from the current
    directory version.
    
    Fixes: 260a980317da ("[AFS]: Add "directory write" support.")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4988bb9011472ccc117102d2a95a3af9d6ef444
Author: David Howells <dhowells@redhat.com>
Date:   Tue Jul 30 14:38:51 2019 +0100

    afs: Fix off-by-one in afs_rename() expected data version calculation
    
    [ Upstream commit 37c0bbb3326674940e657118306ac52364314523 ]
    
    When afs_rename() calculates the expected data version of the target
    directory in a cross-directory rename, it doesn't increment it as it
    should, so it always thinks that the target inode is unexpectedly modified
    on the server.
    
    Fixes: a58823ac4589 ("afs: Fix application of status and callback to be under same lock")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 768edf3604b64af3f3aca283cdb90dfe1385ee79
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Tue Jul 30 14:38:51 2019 +0100

    fs: afs: Fix a possible null-pointer dereference in afs_put_read()
    
    [ Upstream commit a6eed4ab5dd4bfb696c1a3f49742b8d1846a66a0 ]
    
    In afs_read_dir(), there is an if statement on line 255 to check whether
    req->pages is NULL:
            if (!req->pages)
                    goto error;
    
    If req->pages is NULL, afs_put_read() on line 337 is executed.
    In afs_put_read(), req->pages[i] is used on line 195.
    Thus, a possible null-pointer dereference may occur in this case.
    
    To fix this possible bug, an if statement is added in afs_put_read() to
    check req->pages.
    
    This bug is found by a static analysis tool STCheck written by us.
    
    Fixes: f3ddee8dc4e2 ("afs: Fix directory handling")
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3bde518dd5f132a71c07691af7c3f08a318b4d8d
Author: Marc Dionne <marc.dionne@auristor.com>
Date:   Tue Jul 30 14:38:51 2019 +0100

    afs: Fix loop index mixup in afs_deliver_vl_get_entry_by_name_u()
    
    [ Upstream commit 4a46fdba449a5cd890271df5a9e23927d519ed00 ]
    
    afs_deliver_vl_get_entry_by_name_u() scans through the vl entry
    received from the volume location server and builds a return list
    containing the sites that are currently valid.  When assigning
    values for the return list, the index into the vl entry (i) is used
    rather than the one for the new list (entry->nr_server).  If all
    sites are usable, this works out fine as the indices will match.
    If some sites are not valid, for example if AFS_VLSF_DONTUSE is
    set, fs_mask and the uuid will be set for the wrong return site.
    
    Fix this by using entry->nr_server as the index into the arrays
    being filled in rather than i.
    
    This can lead to EDESTADDRREQ errors if none of the returned sites
    have a valid fs_mask.
    
    Fixes: d2ddc776a458 ("afs: Overhaul volume and server record caching and fileserver rotation")
    Signed-off-by: Marc Dionne <marc.dionne@auristor.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Jeffrey Altman <jaltman@auristor.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e5fa7f20b765a310b8571f43168e52aa7b9ff0d
Author: David Howells <dhowells@redhat.com>
Date:   Tue Jul 30 14:38:51 2019 +0100

    afs: Fix the CB.ProbeUuid service handler to reply correctly
    
    [ Upstream commit 2067b2b3f4846402a040286135f98f46f8919939 ]
    
    Fix the service handler function for the CB.ProbeUuid RPC call so that it
    replies in the correct manner - that is an empty reply for success and an
    abort of 1 for failure.
    
    Putting 0 or 1 in an integer in the body of the reply should result in the
    fileserver throwing an RX_PROTOCOL_ERROR abort and discarding its record of
    the client; older servers, however, don't necessarily check that all the
    data got consumed, and so might incorrectly think that they got a positive
    response and associate the client with the wrong host record.
    
    If the client is incorrectly associated, this will result in callbacks
    intended for a different client being delivered to this one and then, when
    the other client connects and responds positively, all of the callback
    promises meant for the client that issued the improper response will be
    lost and it won't receive any further change notifications.
    
    Fixes: 9396d496d745 ("afs: support the CB.ProbeUuid RPC op")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Jeffrey Altman <jaltman@auristor.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f902c873cb0f56e07b59b731a891dc61d462a626
Author: Anthony Iliopoulos <ailiopoulos@suse.com>
Date:   Mon Jul 29 14:40:40 2019 +0200

    nvme-multipath: revalidate nvme_ns_head gendisk in nvme_validate_ns
    
    [ Upstream commit fab7772bfbcfe8fb8e3e352a6a8fcaf044cded17 ]
    
    When CONFIG_NVME_MULTIPATH is set, only the hidden gendisk associated
    with the per-controller ns is run through revalidate_disk when a
    rescan is triggered, while the visible blockdev never gets its size
    (bdev->bd_inode->i_size) updated to reflect any capacity changes that
    may have occurred.
    
    This prevents online resizing of nvme block devices and in extension of
    any filesystems atop that will are unable to expand while mounted, as
    userspace relies on the blockdev size for obtaining the disk capacity
    (via BLKGETSIZE/64 ioctls).
    
    Fix this by explicitly revalidating the actual namespace gendisk in
    addition to the per-controller gendisk, when multipath is enabled.
    
    Signed-off-by: Anthony Iliopoulos <ailiopoulos@suse.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76c2a562a19378a68239d3bf9c1c433e201a5d65
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Jul 12 11:13:30 2019 +0200

    dmaengine: ste_dma40: fix unneeded variable warning
    
    [ Upstream commit 5d6fb560729a5d5554e23db8d00eb57cd0021083 ]
    
    clang-9 points out that there are two variables that depending on the
    configuration may only be used in an ARRAY_SIZE() expression but not
    referenced:
    
    drivers/dma/ste_dma40.c:145:12: error: variable 'd40_backup_regs' is not needed and will not be emitted [-Werror,-Wunneeded-internal-declaration]
    static u32 d40_backup_regs[] = {
               ^
    drivers/dma/ste_dma40.c:214:12: error: variable 'd40_backup_regs_chan' is not needed and will not be emitted [-Werror,-Wunneeded-internal-declaration]
    static u32 d40_backup_regs_chan[] = {
    
    Mark these __maybe_unused to shut up the warning.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20190712091357.744515-1-arnd@arndb.de
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
