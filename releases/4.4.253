commit 4f907dff9d3629fc87f9608770168b68958a9f46
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Jan 23 15:36:57 2021 +0100

    Linux 4.4.253
    
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20210122160822.198606273@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22be6fa087395d9191c49f8442d454961b7b3212
Author: Michael Hennerich <michael.hennerich@analog.com>
Date:   Thu Jan 14 17:42:17 2021 +0200

    spi: cadence: cache reference clock rate during probe
    
    commit 4d163ad79b155c71bf30366dc38f8d2502f78844 upstream.
    
    The issue is that using SPI from a callback under the CCF lock will
    deadlock, since this code uses clk_get_rate().
    
    Fixes: c474b38665463 ("spi: Add driver for Cadence SPI controller")
    Signed-off-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Link: https://lore.kernel.org/r/20210114154217.51996-1-alexandru.ardelean@analog.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f0fca0e17b174a00580ae0411fbb64b81d1e967
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jan 13 08:18:19 2021 -0800

    net: avoid 32 x truesize under-estimation for tiny skbs
    
    [ Upstream commit 3226b158e67cfaa677fd180152bfb28989cb2fac ]
    
    Both virtio net and napi_get_frags() allocate skbs
    with a very small skb->head
    
    While using page fragments instead of a kmalloc backed skb->head might give
    a small performance improvement in some cases, there is a huge risk of
    under estimating memory usage.
    
    For both GOOD_COPY_LEN and GRO_MAX_HEAD, we can fit at least 32 allocations
    per page (order-3 page in x86), or even 64 on PowerPC
    
    We have been tracking OOM issues on GKE hosts hitting tcp_mem limits
    but consuming far more memory for TCP buffers than instructed in tcp_mem[2]
    
    Even if we force napi_alloc_skb() to only use order-0 pages, the issue
    would still be there on arches with PAGE_SIZE >= 32768
    
    This patch makes sure that small skb head are kmalloc backed, so that
    other objects in the slab page can be reused instead of being held as long
    as skbs are sitting in socket queues.
    
    Note that we might in the future use the sk_buff napi cache,
    instead of going through a more expensive __alloc_skb()
    
    Another idea would be to use separate page sizes depending
    on the allocated length (to never have more than 4 frags per page)
    
    I would like to thank Greg Thelen for his precious help on this matter,
    analysing crash dumps is always a time consuming task.
    
    Fixes: fd11a83dd363 ("net: Pull out core bits of __netdev_alloc_skb and add __napi_alloc_skb")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Paolo Abeni <pabeni@redhat.com>
    Cc: Greg Thelen <gthelen@google.com>
    Reviewed-by: Alexander Duyck <alexanderduyck@fb.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Link: https://lore.kernel.org/r/20210113161819.1155526-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85862eafc968ca22ed4b99c6064a54098554e462
Author: David Howells <dhowells@redhat.com>
Date:   Tue Jan 12 15:23:51 2021 +0000

    rxrpc: Fix handling of an unsupported token type in rxrpc_read()
    
    [ Upstream commit d52e419ac8b50c8bef41b398ed13528e75d7ad48 ]
    
    Clang static analysis reports the following:
    
    net/rxrpc/key.c:657:11: warning: Assigned value is garbage or undefined
                    toksize = toksizes[tok++];
                            ^ ~~~~~~~~~~~~~~~
    
    rxrpc_read() contains two consecutive loops.  The first loop calculates the
    token sizes and stores the results in toksizes[] and the second one uses
    the array.  When there is an error in identifying the token in the first
    loop, the token is skipped, no change is made to the toksizes[] array.
    When the same error happens in the second loop, the token is not skipped.
    This will cause the toksizes[] array to be out of step and will overrun
    past the calculated sizes.
    
    Fix this by making both loops log a message and return an error in this
    case.  This should only happen if a new token type is incompletely
    implemented, so it should normally be impossible to trigger this.
    
    Fixes: 9a059cd5ca7d ("rxrpc: Downgrade the BUG() for unsupported token type in rxrpc_read()")
    Reported-by: Tom Rix <trix@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Tom Rix <trix@redhat.com>
    Link: https://lore.kernel.org/r/161046503122.2445787.16714129930607546635.stgit@warthog.procyon.org.uk
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e188afc5b45446706dff3b64b0b7d09f6cf177d
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Jan 13 17:29:47 2021 -0800

    net: sit: unregister_netdevice on newlink's error path
    
    [ Upstream commit 47e4bb147a96f1c9b4e7691e7e994e53838bfff8 ]
    
    We need to unregister the netdevice if config failed.
    .ndo_uninit takes care of most of the heavy lifting.
    
    This was uncovered by recent commit c269a24ce057 ("net: make
    free_netdev() more lenient with unregistering devices").
    Previously the partially-initialized device would be left
    in the system.
    
    Reported-and-tested-by: syzbot+2393580080a2da190f04@syzkaller.appspotmail.com
    Fixes: e2f1f072db8d ("sit: allow to configure 6rd tunnels via netlink")
    Acked-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Link: https://lore.kernel.org/r/20210114012947.2515313-1-kuba@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5909e67598f19bffa9f9360063485639b6e189d9
Author: Petr Machata <petrm@nvidia.com>
Date:   Mon Jan 11 18:07:07 2021 +0100

    net: dcb: Accept RTM_GETDCB messages carrying set-like DCB commands
    
    [ Upstream commit df85bc140a4d6cbaa78d8e9c35154e1a2f0622c7 ]
    
    In commit 826f328e2b7e ("net: dcb: Validate netlink message in DCB
    handler"), Linux started rejecting RTM_GETDCB netlink messages if they
    contained a set-like DCB_CMD_ command.
    
    The reason was that privileges were only verified for RTM_SETDCB messages,
    but the value that determined the action to be taken is the command, not
    the message type. And validation of message type against the DCB command
    was the obvious missing piece.
    
    Unfortunately it turns out that mlnx_qos, a somewhat widely deployed tool
    for configuration of DCB, accesses the DCB set-like APIs through
    RTM_GETDCB.
    
    Therefore do not bounce the discrepancy between message type and command.
    Instead, in addition to validating privileges based on the actual message
    type, validate them also based on the expected message type. This closes
    the loophole of allowing DCB configuration on non-admin accounts, while
    maintaining backward compatibility.
    
    Fixes: 2f90b8657ec9 ("ixgbe: this patch adds support for DCB to the kernel and ixgbe driver")
    Fixes: 826f328e2b7e ("net: dcb: Validate netlink message in DCB handler")
    Signed-off-by: Petr Machata <petrm@nvidia.com>
    Link: https://lore.kernel.org/r/a3edcfda0825f2aa2591801c5232f2bbf2d8a554.1610384801.git.me@pmachata.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8063f88d942df6138cc28506e9229ffc0192a42
Author: Petr Machata <me@pmachata.org>
Date:   Tue Dec 22 22:49:44 2020 +0100

    net: dcb: Validate netlink message in DCB handler
    
    [ Upstream commit 826f328e2b7e8854dd42ea44e6519cd75018e7b1 ]
    
    DCB uses the same handler function for both RTM_GETDCB and RTM_SETDCB
    messages. dcb_doit() bounces RTM_SETDCB mesasges if the user does not have
    the CAP_NET_ADMIN capability.
    
    However, the operation to be performed is not decided from the DCB message
    type, but from the DCB command. Thus DCB_CMD_*_GET commands are used for
    reading DCB objects, the corresponding SET and DEL commands are used for
    manipulation.
    
    The assumption is that set-like commands will be sent via an RTM_SETDCB
    message, and get-like ones via RTM_GETDCB. However, this assumption is not
    enforced.
    
    It is therefore possible to manipulate DCB objects without CAP_NET_ADMIN
    capability by sending the corresponding command in an RTM_GETDCB message.
    That is a bug. Fix it by validating the type of the request message against
    the type used for the response.
    
    Fixes: 2f90b8657ec9 ("ixgbe: this patch adds support for DCB to the kernel and ixgbe driver")
    Signed-off-by: Petr Machata <me@pmachata.org>
    Link: https://lore.kernel.org/r/a2a9b88418f3a58ef211b718f2970128ef9e3793.1608673640.git.me@pmachata.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d6829545febb24bb35d708ef06287db9da3fe8a
Author: Andrey Zhizhikin <andrey.zhizhikin@leica-geosystems.com>
Date:   Fri Jan 8 09:58:39 2021 +0000

    rndis_host: set proper input size for OID_GEN_PHYSICAL_MEDIUM request
    
    [ Upstream commit e56b3d94d939f52d46209b9e1b6700c5bfff3123 ]
    
    MSFT ActiveSync implementation requires that the size of the response for
    incoming query is to be provided in the request input length. Failure to
    set the input size proper results in failed request transfer, where the
    ActiveSync counterpart reports the NDIS_STATUS_INVALID_LENGTH (0xC0010014L)
    error.
    
    Set the input size for OID_GEN_PHYSICAL_MEDIUM query to the expected size
    of the response in order for the ActiveSync to properly respond to the
    request.
    
    Fixes: 039ee17d1baa ("rndis_host: Add RNDIS physical medium checking into generic_rndis_bind()")
    Signed-off-by: Andrey Zhizhikin <andrey.zhizhikin@leica-geosystems.com>
    Link: https://lore.kernel.org/r/20210108095839.3335-1-andrey.zhizhikin@leica-geosystems.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9cd805cf597c71d5c68786fa7710f6aa64a9289
Author: Manish Chopra <manishc@marvell.com>
Date:   Thu Jan 7 02:15:20 2021 -0800

    netxen_nic: fix MSI/MSI-x interrupts
    
    [ Upstream commit a2bc221b972db91e4be1970e776e98f16aa87904 ]
    
    For all PCI functions on the netxen_nic adapter, interrupt
    mode (INTx or MSI) configuration is dependent on what has
    been configured by the PCI function zero in the shared
    interrupt register, as these adapters do not support mixed
    mode interrupts among the functions of a given adapter.
    
    Logic for setting MSI/MSI-x interrupt mode in the shared interrupt
    register based on PCI function id zero check is not appropriate for
    all family of netxen adapters, as for some of the netxen family
    adapters PCI function zero is not really meant to be probed/loaded
    in the host but rather just act as a management function on the device,
    which caused all the other PCI functions on the adapter to always use
    legacy interrupt (INTx) mode instead of choosing MSI/MSI-x interrupt mode.
    
    This patch replaces that check with port number so that for all
    type of adapters driver attempts for MSI/MSI-x interrupt modes.
    
    Fixes: b37eb210c076 ("netxen_nic: Avoid mixed mode interrupts")
    Signed-off-by: Manish Chopra <manishc@marvell.com>
    Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
    Link: https://lore.kernel.org/r/20210107101520.6735-1-manishc@marvell.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9318ecb1a8c8a32de6b0e72b156cf76e0b5c3ba3
Author: Jouni K. Seppänen <jks@iki.fi>
Date:   Tue Jan 5 06:52:49 2021 +0200

    net: cdc_ncm: correct overhead in delayed_ndp_size
    
    commit 7a68d725e4ea384977445e0bcaed3d7de83ab5b3 upstream.
    
    Aligning to tx_ndp_modulus is not sufficient because the next align
    call can be cdc_ncm_align_tail, which can add up to ctx->tx_modulus +
    ctx->tx_remainder - 1 bytes. This used to lead to occasional crashes
    on a Huawei 909s-120 LTE module as follows:
    
    - the condition marked /* if there is a remaining skb [...] */ is true
      so the swaps happen
    - skb_out is set from ctx->tx_curr_skb
    - skb_out->len is exactly 0x3f52
    - ctx->tx_curr_size is 0x4000 and delayed_ndp_size is 0xac
      (note that the sum of skb_out->len and delayed_ndp_size is 0x3ffe)
    - the for loop over n is executed once
    - the cdc_ncm_align_tail call marked /* align beginning of next frame */
      increases skb_out->len to 0x3f56 (the sum is now 0x4002)
    - the condition marked /* check if we had enough room left [...] */ is
      false so we break out of the loop
    - the condition marked /* If requested, put NDP at end of frame. */ is
      true so the NDP is written into skb_out
    - now skb_out->len is 0x4002, so padding_count is minus two interpreted
      as an unsigned number, which is used as the length argument to memset,
      leading to a crash with various symptoms but usually including
    
    > Call Trace:
    >  <IRQ>
    >  cdc_ncm_fill_tx_frame+0x83a/0x970 [cdc_ncm]
    >  cdc_mbim_tx_fixup+0x1d9/0x240 [cdc_mbim]
    >  usbnet_start_xmit+0x5d/0x720 [usbnet]
    
    The cdc_ncm_align_tail call first aligns on a ctx->tx_modulus
    boundary (adding at most ctx->tx_modulus-1 bytes), then adds
    ctx->tx_remainder bytes. Alternatively, the next alignment call can
    occur in cdc_ncm_ndp16 or cdc_ncm_ndp32, in which case at most
    ctx->tx_ndp_modulus-1 bytes are added.
    
    A similar problem has occurred before, and the code is nontrivial to
    reason about, so add a guard before the crashing call. By that time it
    is too late to prevent any memory corruption (we'll have written past
    the end of the buffer already) but we can at least try to get a warning
    written into an on-disk log by avoiding the hard crash caused by padding
    past the buffer with a huge number of zeros.
    
    Signed-off-by: Jouni K. Seppänen <jks@iki.fi>
    Fixes: 4a0e3e989d66 ("cdc_ncm: Add support for moving NDP to end of NCM frame")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=209407
    Reported-by: kernel test robot <lkp@intel.com>
    Reviewed-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [jks@iki.fi: backport to 4.4.y, 4.9.y]
    Signed-off-by: Jouni K. Seppänen <jks@iki.fi>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c89b2b56fc536d4fd41745bcbf394aa21162e277
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Mon Jan 11 16:01:29 2021 -0500

    nfsd4: readdirplus shouldn't return parent of export
    
    commit 51b2ee7d006a736a9126e8111d1f24e4fd0afaa6 upstream.
    
    If you export a subdirectory of a filesystem, a READDIRPLUS on the root
    of that export will return the filehandle of the parent with the ".."
    entry.
    
    The filehandle is optional, so let's just not return the filehandle for
    ".." if we're at the root of an export.
    
    Note that once the client learns one filehandle outside of the export,
    they can trivially access the rest of the export using further lookups.
    
    However, it is also not very difficult to guess filehandles outside of
    the export.  So exporting a subdirectory of a filesystem should
    considered equivalent to providing access to the entire filesystem.  To
    avoid confusion, we recommend only exporting entire filesystems.
    
    Reported-by: Youjipeng <wangzhibei1999@gmail.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42a9f0387905f1aa583563d4b36b46bac542dd81
Author: Nuno Sá <nuno.sa@analog.com>
Date:   Thu Nov 12 15:43:22 2020 +0100

    iio: buffer: Fix demux update
    
    commit 19ef7b70ca9487773c29b449adf0c70f540a0aab upstream
    
    When updating the buffer demux, we will skip a scan element from the
    device in the case `in_ind != out_ind` and we enter the while loop.
    in_ind should only be refreshed with `find_next_bit()` in the end of the
    loop.
    
    Note, to cause problems we need a situation where we are skippig over
    an element (channel not enabled) that happens to not have the same size
    as the next element.   Whilst this is a possible situation we haven't
    actually identified any cases in mainline where it happens as most drivers
    have consistent channel storage sizes with the exception of the timestamp
    which is the last element and hence never skipped over.
    
    Fixes: 5ada4ea9be16 ("staging:iio: add demux optionally to path from device to buffer")
    Signed-off-by: Nuno Sá <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20201112144323.28887-1-nuno.sa@analog.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a92ca140debef6d8c1bcd8d24d33abff3accf3f6
Author: Hamish Martin <hamish.martin@alliedtelesis.co.nz>
Date:   Fri Sep 11 09:25:12 2020 +1200

    usb: ohci: Make distrust_firmware param default to false
    
    commit c4005a8f65edc55fb1700dfc5c1c3dc58be80209 upstream.
    
    The 'distrust_firmware' module parameter dates from 2004 and the USB
    subsystem is a lot more mature and reliable now than it was then.
    Alter the default to false now.
    
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Hamish Martin <hamish.martin@alliedtelesis.co.nz>
    Link: https://lore.kernel.org/r/20200910212512.16670-2-hamish.martin@alliedtelesis.co.nz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fccc3ccd4678d3ce41c6854fdb6f487f1f46dd7
Author: j.nixdorf@avm.de <j.nixdorf@avm.de>
Date:   Tue Jan 5 15:17:01 2021 +0100

    net: sunrpc: interpret the return value of kstrtou32 correctly
    
    commit 86b53fbf08f48d353a86a06aef537e78e82ba721 upstream.
    
    A return value of 0 means success. This is documented in lib/kstrtox.c.
    
    This was found by trying to mount an NFS share from a link-local IPv6
    address with the interface specified by its index:
    
      mount("[fe80::1%1]:/srv/nfs", "/mnt", "nfs", 0, "nolock,addr=fe80::1%1")
    
    Before this commit this failed with EINVAL and also caused the following
    message in dmesg:
    
      [...] NFS: bad IP address specified: addr=fe80::1%1
    
    The syscall using the same address based on the interface name instead
    of its index succeeds.
    
    Credits for this patch go to my colleague Christian Speich, who traced
    the origin of this bug to this line of code.
    
    Signed-off-by: Johannes Nixdorf <j.nixdorf@avm.de>
    Fixes: 00cfaa943ec3 ("replace strict_strto calls")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc85630a6b829b41b9c2cc338dee19eed41229d3
Author: Jann Horn <jannh@google.com>
Date:   Tue Jan 12 15:49:04 2021 -0800

    mm, slub: consider rest of partial list if acquire_slab() fails
    
    commit 8ff60eb052eeba95cfb3efe16b08c9199f8121cf upstream.
    
    acquire_slab() fails if there is contention on the freelist of the page
    (probably because some other CPU is concurrently freeing an object from
    the page).  In that case, it might make sense to look for a different page
    (since there might be more remote frees to the page from other CPUs, and
    we don't want contention on struct page).
    
    However, the current code accidentally stops looking at the partial list
    completely in that case.  Especially on kernels without CONFIG_NUMA set,
    this means that get_partial() fails and new_slab_objects() falls back to
    new_slab(), allocating new pages.  This could lead to an unnecessary
    increase in memory fragmentation.
    
    Link: https://lkml.kernel.org/r/20201228130853.1871516-1-jannh@google.com
    Fixes: 7ced37197196 ("slub: Acquire_slab() avoid loop")
    Signed-off-by: Jann Horn <jannh@google.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Acked-by: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0f5aea441f1f609baaaee4d5f8bee7853683c54
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Sat Dec 26 15:42:48 2020 +0800

    RDMA/usnic: Fix memleak in find_free_vf_and_create_qp_grp
    
    commit a306aba9c8d869b1fdfc8ad9237f1ed718ea55e6 upstream.
    
    If usnic_ib_qp_grp_create() fails at the first call, dev_list
    will not be freed on error, which leads to memleak.
    
    Fixes: e3cf00d0a87f ("IB/usnic: Add Cisco VIC low-level hardware driver")
    Link: https://lore.kernel.org/r/20201226074248.2893-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89a95fc53eb3105eede3944644e7cb9515d19cfc
Author: Jan Kara <jack@suse.cz>
Date:   Wed Dec 16 11:18:43 2020 +0100

    ext4: fix superblock checksum failure when setting password salt
    
    commit dfd56c2c0c0dbb11be939b804ddc8d5395ab3432 upstream.
    
    When setting password salt in the superblock, we forget to recompute the
    superblock checksum so it will not match until the next superblock
    modification which recomputes the checksum. Fix it.
    
    CC: Michael Halcrow <mhalcrow@google.com>
    Reported-by: Andreas Dilger <adilger@dilger.ca>
    Fixes: 9bd8212f981e ("ext4 crypto: add encryption policy and password salt support")
    Signed-off-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20201216101844.22917-8-jack@suse.cz
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd756f3238499558d48b919112f74496b4f6a286
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Sun Jan 10 15:58:08 2021 -0500

    NFS: nfs_igrab_and_active must first reference the superblock
    
    commit 896567ee7f17a8a736cda8a28cc987228410a2ac upstream.
    
    Before referencing the inode, we must ensure that the superblock can be
    referenced. Otherwise, we can end up with iput() calling superblock
    operations that are no longer valid or accessible.
    
    Fixes: ea7c38fef0b7 ("NFSv4: Ensure we reference the inode for return-on-close in delegreturn")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1de083b11f86b2e77ca8d28580730c7974c059b
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Tue Jan 5 14:43:46 2021 -0500

    dump_common_audit_data(): fix racy accesses to ->d_name
    
    commit d36a1dd9f77ae1e72da48f4123ed35627848507d upstream.
    
    We are not guaranteed the locking environment that would prevent
    dentry getting renamed right under us.  And it's possible for
    old long name to be freed after rename, leading to UAF here.
    
    Cc: stable@kernel.org # v2.6.2+
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0cd7ca78a35976956292daf32bf7831e6c18753d
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Fri Sep 1 17:13:43 2017 -0700

    Input: uinput - avoid FF flush when destroying device
    
    commit e8b95728f724797f958912fd9b765a695595d3a6 upstream.
    
    Normally, when input device supporting force feedback effects is being
    destroyed, we try to "flush" currently playing effects, so that the
    physical device does not continue vibrating (or executing other effects).
    Unfortunately this does not work well for uinput as flushing of the effects
    deadlocks with the destroy action:
    
    - if device is being destroyed because the file descriptor is being closed,
      then there is noone to even service FF requests;
    
    - if device is being destroyed because userspace sent UI_DEV_DESTROY,
      while theoretically it could be possible to service FF requests,
      userspace is unlikely to do so (they'd need to make sure FF handling
      happens on a separate thread) even if kernel solves the issue with FF
      ioctls deadlocking with UI_DEV_DESTROY ioctl on udev->mutex.
    
    To avoid lockups like the one below, let's install a custom input device
    flush handler, and avoid trying to flush force feedback effects when we
    destroying the device, and instead rely on uinput to shut off the device
    properly.
    
    NMI watchdog: Watchdog detected hard LOCKUP on cpu 3
    ...
     <<EOE>>  [<ffffffff817a0307>] _raw_spin_lock_irqsave+0x37/0x40
     [<ffffffff810e633d>] complete+0x1d/0x50
     [<ffffffffa00ba08c>] uinput_request_done+0x3c/0x40 [uinput]
     [<ffffffffa00ba587>] uinput_request_submit.part.7+0x47/0xb0 [uinput]
     [<ffffffffa00bb62b>] uinput_dev_erase_effect+0x5b/0x76 [uinput]
     [<ffffffff815d91ad>] erase_effect+0xad/0xf0
     [<ffffffff815d929d>] flush_effects+0x4d/0x90
     [<ffffffff815d4cc0>] input_flush_device+0x40/0x60
     [<ffffffff815daf1c>] evdev_cleanup+0xac/0xc0
     [<ffffffff815daf5b>] evdev_disconnect+0x2b/0x60
     [<ffffffff815d74ac>] __input_unregister_device+0xac/0x150
     [<ffffffff815d75f7>] input_unregister_device+0x47/0x70
     [<ffffffffa00bac45>] uinput_destroy_device+0xb5/0xc0 [uinput]
     [<ffffffffa00bb2de>] uinput_ioctl_handler.isra.9+0x65e/0x740 [uinput]
     [<ffffffff811231ab>] ? do_futex+0x12b/0xad0
     [<ffffffffa00bb3f8>] uinput_ioctl+0x18/0x20 [uinput]
     [<ffffffff81241248>] do_vfs_ioctl+0x298/0x480
     [<ffffffff81337553>] ? security_file_ioctl+0x43/0x60
     [<ffffffff812414a9>] SyS_ioctl+0x79/0x90
     [<ffffffff817a04ee>] entry_SYSCALL_64_fastpath+0x12/0x71
    
    Reported-by: Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>
    Reported-by: Clément VUCHENER <clement.vuchener@gmail.com>
    Fixes: https://bugzilla.kernel.org/show_bug.cgi?id=193741
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9a6c45ee7d826dbfdf199462be6620638b03aabf
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Dec 30 16:20:05 2020 +0100

    ARM: picoxcell: fix missing interrupt-parent properties
    
    [ Upstream commit bac717171971176b78c72d15a8b6961764ab197f ]
    
    dtc points out that the interrupts for some devices are not parsable:
    
    picoxcell-pc3x2.dtsi:45.19-49.5: Warning (interrupts_property): /paxi/gem@30000: Missing interrupt-parent
    picoxcell-pc3x2.dtsi:51.21-55.5: Warning (interrupts_property): /paxi/dmac@40000: Missing interrupt-parent
    picoxcell-pc3x2.dtsi:57.21-61.5: Warning (interrupts_property): /paxi/dmac@50000: Missing interrupt-parent
    picoxcell-pc3x2.dtsi:233.21-237.5: Warning (interrupts_property): /rwid-axi/axi2pico@c0000000: Missing interrupt-parent
    
    There are two VIC instances, so it's not clear which one needs to be
    used. I found the BSP sources that reference VIC0, so use that:
    
    https://github.com/r1mikey/meta-picoxcell/blob/master/recipes-kernel/linux/linux-picochip-3.0/0001-picoxcell-support-for-Picochip-picoXcell-SoC.patch
    
    Acked-by: Jamie Iles <jamie@jamieiles.com>
    Link: https://lore.kernel.org/r/20201230152010.3914962-1-arnd@kernel.org'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a620db0b08e0aebd1d0d60c7aea9e30f3a22825a
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Thu Dec 31 19:35:25 2020 +0800

    ACPI: scan: add stub acpi_create_platform_device() for !CONFIG_ACPI
    
    [ Upstream commit ee61cfd955a64a58ed35cbcfc54068fcbd486945 ]
    
    It adds a stub acpi_create_platform_device() for !CONFIG_ACPI build, so
    that caller doesn't have to deal with !CONFIG_ACPI build issue.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9106e1a11180e89fe1e0469d5d7db471005cd300
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Jan 5 20:15:15 2021 +1100

    net: ethernet: fs_enet: Add missing MODULE_LICENSE
    
    [ Upstream commit 445c6198fe7be03b7d38e66fe8d4b3187bc251d4 ]
    
    Since commit 1d6cd3929360 ("modpost: turn missing MODULE_LICENSE()
    into error") the ppc32_allmodconfig build fails with:
    
      ERROR: modpost: missing MODULE_LICENSE() in drivers/net/ethernet/freescale/fs_enet/mii-fec.o
      ERROR: modpost: missing MODULE_LICENSE() in drivers/net/ethernet/freescale/fs_enet/mii-bitbang.o
    
    Add the missing MODULE_LICENSEs to fix the build. Both files include a
    copyright header indicating they are GPL v2.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8ebb9a2b052192731b63cddea16871085060720
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Sun Jan 3 22:36:22 2021 +0100

    misdn: dsp: select CONFIG_BITREVERSE
    
    [ Upstream commit 51049bd903a81307f751babe15a1df8d197884e8 ]
    
    Without this, we run into a link error
    
    arm-linux-gnueabi-ld: drivers/isdn/mISDN/dsp_audio.o: in function `dsp_audio_generate_law_tables':
    (.text+0x30c): undefined reference to `byte_rev_table'
    arm-linux-gnueabi-ld: drivers/isdn/mISDN/dsp_audio.o:(.text+0x5e4): more undefined references to `byte_rev_table' follow
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6da7cf40760e280b341b9ca08af1dd07db0d05a9
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Mon Jan 4 19:44:53 2021 -0800

    arch/arc: add copy_user_page() to <asm/page.h> to fix build error on ARC
    
    [ Upstream commit 8a48c0a3360bf2bf4f40c980d0ec216e770e58ee ]
    
    fs/dax.c uses copy_user_page() but ARC does not provide that interface,
    resulting in a build error.
    
    Provide copy_user_page() in <asm/page.h>.
    
    ../fs/dax.c: In function 'copy_cow_page_dax':
    ../fs/dax.c:702:2: error: implicit declaration of function 'copy_user_page'; did you mean 'copy_to_user_page'? [-Werror=implicit-function-declaration]
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Vineet Gupta <vgupta@synopsys.com>
    Cc: linux-snps-arc@lists.infradead.org
    Cc: Dan Williams <dan.j.williams@intel.com>
    #Acked-by: Vineet Gupta <vgupta@synopsys.com> # v1
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Jan Kara <jack@suse.cz>
    Cc: linux-fsdevel@vger.kernel.org
    Cc: linux-nvdimm@lists.01.org
    #Reviewed-by: Ira Weiny <ira.weiny@intel.com> # v2
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04d0e84170eb31a5f777f1241400456f69750430
Author: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
Date:   Fri Dec 18 11:55:37 2020 +0100

    ethernet: ucc_geth: fix definition and size of ucc_geth_tx_global_pram
    
    [ Upstream commit 887078de2a23689e29d6fa1b75d7cbc544c280be ]
    
    Table 8-53 in the QUICC Engine Reference manual shows definitions of
    fields up to a size of 192 bytes, not just 128. But in table 8-111,
    one does find the text
    
      Base Address of the Global Transmitter Parameter RAM Page. [...]
      The user needs to allocate 128 bytes for this page. The address must
      be aligned to the page size.
    
    I've checked both rev. 7 (11/2015) and rev. 9 (05/2018) of the manual;
    they both have this inconsistency (and the table numbers are the
    same).
    
    Adding a bit of debug printing, on my board the struct
    ucc_geth_tx_global_pram is allocated at offset 0x880, while
    the (opaque) ucc_geth_thread_data_tx gets allocated immediately
    afterwards, at 0x900. So whatever the engine writes into the thread
    data overlaps with the tail of the global tx pram (and devmem says
    that something does get written during a simple ping).
    
    I haven't observed any failure that could be attributed to this, but
    it seems to be the kind of thing that would be extremely hard to
    debug. So extend the struct definition so that we do allocate 192
    bytes.
    
    Signed-off-by: Rasmus Villemoes <rasmus.villemoes@prevas.dk>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7028baed7ebabf298f08866d9d3b7b5c3b47e641
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Sun Nov 22 04:36:54 2020 +0900

    ARC: build: add boot_targets to PHONY
    
    [ Upstream commit 0cfccb3c04934cdef42ae26042139f16e805b5f7 ]
    
    The top-level boot_targets (uImage and uImage.*) should be phony
    targets. They just let Kbuild descend into arch/arc/boot/ and create
    files there.
    
    If a file exists in the top directory with the same name, the boot
    image will not be created.
    
    You can confirm it by the following steps:
    
      $ export CROSS_COMPILE=<your-arc-compiler-prefix>
      $ make -s ARCH=arc defconfig all   # vmlinux will be built
      $ touch uImage.gz
      $ make ARCH=arc uImage.gz
      CALL    scripts/atomic/check-atomics.sh
      CALL    scripts/checksyscalls.sh
      CHK     include/generated/compile.h
      # arch/arc/boot/uImage.gz is not created
    
    Specify the targets as PHONY to fix this.
    
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5fa4f6f83e9e9142becfdcf8691a7e06504785a7
Author: yangerkun <yangerkun@huawei.com>
Date:   Tue Jan 5 14:28:57 2021 +0800

    ext4: fix bug for rename with RENAME_WHITEOUT
    
    [ Upstream commit 6b4b8e6b4ad8553660421d6360678b3811d5deb9 ]
    
    We got a "deleted inode referenced" warning cross our fsstress test. The
    bug can be reproduced easily with following steps:
    
      cd /dev/shm
      mkdir test/
      fallocate -l 128M img
      mkfs.ext4 -b 1024 img
      mount img test/
      dd if=/dev/zero of=test/foo bs=1M count=128
      mkdir test/dir/ && cd test/dir/
      for ((i=0;i<1000;i++)); do touch file$i; done # consume all block
      cd ~ && renameat2(AT_FDCWD, /dev/shm/test/dir/file1, AT_FDCWD,
        /dev/shm/test/dir/dst_file, RENAME_WHITEOUT) # ext4_add_entry in
        ext4_rename will return ENOSPC!!
      cd /dev/shm/ && umount test/ && mount img test/ && ls -li test/dir/file1
      We will get the output:
      "ls: cannot access 'test/dir/file1': Structure needs cleaning"
      and the dmesg show:
      "EXT4-fs error (device loop0): ext4_lookup:1626: inode #2049: comm ls:
      deleted inode referenced: 139"
    
    ext4_rename will create a special inode for whiteout and use this 'ino'
    to replace the source file's dir entry 'ino'. Once error happens
    latter(the error above was the ENOSPC return from ext4_add_entry in
    ext4_rename since all space has been consumed), the cleanup do drop the
    nlink for whiteout, but forget to restore 'ino' with source file. This
    will trigger the bug describle as above.
    
    Signed-off-by: yangerkun <yangerkun@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Cc: stable@vger.kernel.org
    Fixes: cd808deced43 ("ext4: support RENAME_WHITEOUT")
    Link: https://lore.kernel.org/r/20210105062857.3566-1-yangerkun@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf3ca4612190d330ecc8970db71d20920dc2d736
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Tue Jan 12 15:49:24 2021 -0800

    mm/hugetlb: fix potential missing huge page size info
    
    commit 0eb98f1588c2cc7a79816d84ab18a55d254f481c upstream.
    
    The huge page size is encoded for VM_FAULT_HWPOISON errors only.  So if
    we return VM_FAULT_HWPOISON, huge page size would just be ignored.
    
    Link: https://lkml.kernel.org/r/20210107123449.38481-1-linmiaohe@huawei.com
    Fixes: aa50d3a7aa81 ("Encode huge page size for VM_FAULT_HWPOISON errors")
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9969eb11d5cd909628a6ecf89aef909c121ac0d0
Author: Thomas Hebb <tommyhebb@gmail.com>
Date:   Sat Dec 12 17:20:12 2020 -0800

    ASoC: dapm: remove widget from dirty list on free
    
    commit 5c6679b5cb120f07652418524ab186ac47680b49 upstream.
    
    A widget's "dirty" list_head, much like its "list" list_head, eventually
    chains back to a list_head on the snd_soc_card itself. This means that
    the list can stick around even after the widget (or all widgets) have
    been freed. Currently, however, widgets that are in the dirty list when
    freed remain there, corrupting the entire list and leading to memory
    errors and undefined behavior when the list is next accessed or
    modified.
    
    I encountered this issue when a component failed to probe relatively
    late in snd_soc_bind_card(), causing it to bail out and call
    soc_cleanup_card_resources(), which eventually called
    snd_soc_dapm_free() with widgets that were still dirty from when they'd
    been added.
    
    Fixes: db432b414e20 ("ASoC: Do DAPM power checks only for widgets changed since last run")
    Cc: stable@vger.kernel.org
    Signed-off-by: Thomas Hebb <tommyhebb@gmail.com>
    Reviewed-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/f8b5f031d50122bf1a9bfc9cae046badf4a7a31a.1607822410.git.tommyhebb@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
