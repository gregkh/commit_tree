commit e853993d29aa42ac4b3c2912db975a0a66d7a5b0
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Mar 2 11:34:01 2022 +0100

    Linux 4.14.269
    
    Link: https://lore.kernel.org/r/20220228172159.515152296@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Slade Watkins <slade@sladewatkins.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53f252281666d4f917444c96fce35ab7621638ff
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Feb 26 14:32:56 2022 +0800

    fget: clarify and improve __fget_files() implementation
    
    commit e386dfc56f837da66d00a078e5314bc8382fab83 upstream.
    
    Commit 054aa8d439b9 ("fget: check that the fd still exists after getting
    a ref to it") fixed a race with getting a reference to a file just as it
    was being closed.  It was a fairly minimal patch, and I didn't think
    re-checking the file pointer lookup would be a measurable overhead,
    since it was all right there and cached.
    
    But I was wrong, as pointed out by the kernel test robot.
    
    The 'poll2' case of the will-it-scale.per_thread_ops benchmark regressed
    quite noticeably.  Admittedly it seems to be a very artificial test:
    doing "poll()" system calls on regular files in a very tight loop in
    multiple threads.
    
    That means that basically all the time is spent just looking up file
    descriptors without ever doing anything useful with them (not that doing
    'poll()' on a regular file is useful to begin with).  And as a result it
    shows the extra "re-check fd" cost as a sore thumb.
    
    Happily, the regression is fixable by just writing the code to loook up
    the fd to be better and clearer.  There's still a cost to verify the
    file pointer, but now it's basically in the noise even for that
    benchmark that does nothing else - and the code is more understandable
    and has better comments too.
    
    [ Side note: this patch is also a classic case of one that looks very
      messy with the default greedy Myers diff - it's much more legible with
      either the patience of histogram diff algorithm ]
    
    Link: https://lore.kernel.org/lkml/20211210053743.GA36420@xsang-OptiPlex-9020/
    Link: https://lore.kernel.org/lkml/20211213083154.GA20853@linux.intel.com/
    Reported-by: kernel test robot <oliver.sang@intel.com>
    Tested-by: Carel Si <beibei.si@intel.com>
    Cc: Jann Horn <jannh@google.com>
    Cc: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f701f2a037778546984e5cf3c09fbd95522490a2
Author: Miaohe Lin <linmiaohe@huawei.com>
Date:   Thu Feb 17 22:53:27 2022 +0800

    memblock: use kfree() to release kmalloced memblock regions
    
    commit c94afc46cae7ad41b2ad6a99368147879f4b0e56 upstream.
    
    memblock.{reserved,memory}.regions may be allocated using kmalloc() in
    memblock_double_array(). Use kfree() to release these kmalloced regions
    indicated by memblock_{reserved,memory}_in_slab.
    
    Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
    Fixes: 3010f876500f ("mm: discard memblock data later")
    Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a89dcfb91af2432cdcd29f6649650073b0419bc
Author: Karol Herbst <kherbst@redhat.com>
Date:   Mon Feb 28 10:12:59 2022 +0100

    Revert "drm/nouveau/pmu/gm200-: avoid touching PMU outside of DEVINIT/PREOS/ACR"
    
    This reverts commit c9ec3d85c0eef7c71cdc68db758e0f0e378132c0.
    
    This commit causes a regression if 4cdd2450bf739bada353e82d27b00db9af8c3001
    is not applied as well. This was fixed for 5.16, 5.15 and 5.10.
    
    On older stable branches backporting this commit is complicated as relevant
    code changed quite a bit. Furthermore most of the affected hardware barely
    works on those and users would want to use the newer kernels anyway.
    
    Cc: stable@vger.kernel.org # 5.4 4.19 and 4.14
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: Lyude Paul <lyude@redhat.com>
    Link: https://gitlab.freedesktop.org/drm/nouveau/-/issues/149
    Signed-off-by: Karol Herbst <kherbst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29deb5dfd66993aed8de49364db7cf7061f13ab1
Author: daniel.starke@siemens.com <daniel.starke@siemens.com>
Date:   Thu Feb 17 23:31:19 2022 -0800

    tty: n_gsm: fix proper link termination after failed open
    
    commit e3b7468f082d106459e86e8dc6fb9bdd65553433 upstream.
    
    Trying to open a DLCI by sending a SABM frame may fail with a timeout.
    The link is closed on the initiator side without informing the responder
    about this event. The responder assumes the link is open after sending a
    UA frame to answer the SABM frame. The link gets stuck in a half open
    state.
    
    This patch fixes this by initiating the proper link termination procedure
    after link setup timeout instead of silently closing it down.
    
    Fixes: e1eaea46bb40 ("tty: n_gsm line discipline")
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220218073123.2121-3-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 477f58ecfc759e43d6fcd584ca6a4ea6329546fe
Author: daniel.starke@siemens.com <daniel.starke@siemens.com>
Date:   Thu Feb 17 23:31:17 2022 -0800

    tty: n_gsm: fix encoding of control signal octet bit DV
    
    commit 737b0ef3be6b319d6c1fd64193d1603311969326 upstream.
    
    n_gsm is based on the 3GPP 07.010 and its newer version is the 3GPP 27.010.
    See https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=1516
    The changes from 07.010 to 27.010 are non-functional. Therefore, I refer to
    the newer 27.010 here. Chapter 5.4.6.3.7 describes the encoding of the
    control signal octet used by the MSC (modem status command). The same
    encoding is also used in convergence layer type 2 as described in chapter
    5.5.2. Table 7 and 24 both require the DV (data valid) bit to be set 1 for
    outgoing control signal octets sent by the DTE (data terminal equipment),
    i.e. for the initiator side.
    Currently, the DV bit is only set if CD (carrier detect) is on, regardless
    of the side.
    
    This patch fixes this behavior by setting the DV bit on the initiator side
    unconditionally.
    
    Fixes: e1eaea46bb40 ("tty: n_gsm line discipline")
    Cc: stable@vger.kernel.org
    Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
    Link: https://lore.kernel.org/r/20220218073123.2121-1-daniel.starke@siemens.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd65dbb0b9adcf1a094886c4b8148da0380c1dcf
Author: Hongyu Xie <xiehongyu1@kylinos.cn>
Date:   Tue Feb 15 14:33:20 2022 +0200

    xhci: Prevent futile URB re-submissions due to incorrect return value.
    
    commit 243a1dd7ba48c120986dd9e66fee74bcb7751034 upstream.
    
    The -ENODEV return value from xhci_check_args() is incorrectly changed
    to -EINVAL in a couple places before propagated further.
    
    xhci_check_args() returns 4 types of value, -ENODEV, -EINVAL, 1 and 0.
    xhci_urb_enqueue and xhci_check_streams_endpoint return -EINVAL if
    the return value of xhci_check_args <= 0.
    This causes problems for example r8152_submit_rx, calling usb_submit_urb
    in drivers/net/usb/r8152.c.
    r8152_submit_rx will never get -ENODEV after submiting an urb when xHC
    is halted because xhci_urb_enqueue returns -EINVAL in the very beginning.
    
    [commit message and header edit -Mathias]
    
    Fixes: 203a86613fb3 ("xhci: Avoid NULL pointer deref when host dies.")
    Cc: stable@vger.kernel.org
    Signed-off-by: Hongyu Xie <xiehongyu1@kylinos.cn>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220215123320.1253947-3-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06bbba3bc5df4e0fe9e89e8fa0ca8e51241a2937
Author: Puma Hsu <pumahsu@google.com>
Date:   Tue Feb 15 14:33:19 2022 +0200

    xhci: re-initialize the HC during resume if HCE was set
    
    commit 8b328f8002bcf29ef517ee4bf234e09aabec4d2e upstream.
    
    When HCE(Host Controller Error) is set, it means an internal
    error condition has been detected. Software needs to re-initialize
    the HC, so add this check in xhci resume.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Puma Hsu <pumahsu@google.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Link: https://lore.kernel.org/r/20220215123320.1253947-2-mathias.nyman@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3594650c3ec1dbf4fbea5860aa5822150ca60d9d
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Fri Feb 18 18:32:45 2022 +0100

    usb: dwc3: gadget: Let the interrupt handler disable bottom halves.
    
    commit 84918a89d6efaff075de570b55642b6f4ceeac6d upstream.
    
    The interrupt service routine registered for the gadget is a primary
    handler which mask the interrupt source and a threaded handler which
    handles the source of the interrupt. Since the threaded handler is
    voluntary threaded, the IRQ-core does not disable bottom halves before
    invoke the handler like it does for the forced-threaded handler.
    
    Due to changes in networking it became visible that a network gadget's
    completions handler may schedule a softirq which remains unprocessed.
    The gadget's completion handler is usually invoked either in hard-IRQ or
    soft-IRQ context. In this context it is enough to just raise the softirq
    because the softirq itself will be handled once that context is left.
    In the case of the voluntary threaded handler, there is nothing that
    will process pending softirqs. Which means it remain queued until
    another random interrupt (on this CPU) fires and handles it on its exit
    path or another thread locks and unlocks a lock with the bh suffix.
    Worst case is that the CPU goes idle and the NOHZ complains about
    unhandled softirqs.
    
    Disable bottom halves before acquiring the lock (and disabling
    interrupts) and enable them after dropping the lock. This ensures that
    any pending softirqs will handled right away.
    
    Link: https://lkml.kernel.org/r/c2a64979-73d1-2c22-e048-c275c9f81558@samsung.com
    Fixes: e5f68b4a3e7b0 ("Revert "usb: dwc3: gadget: remove unnecessary _irqsave()"")
    Cc: stable <stable@kernel.org>
    Reported-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Link: https://lore.kernel.org/r/Yg/YPejVQH3KkRVd@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f628bf33a152c0bd24f28d8d319533cd55bda59
Author: Daniele Palmas <dnlplm@gmail.com>
Date:   Fri Feb 18 14:45:52 2022 +0100

    USB: serial: option: add Telit LE910R1 compositions
    
    commit cfc4442c642d568014474b6718ccf65dc7ca6099 upstream.
    
    Add support for the following Telit LE910R1 compositions:
    
    0x701a: rndis, tty, tty, tty
    0x701b: ecm, tty, tty, tty
    0x9201: tty
    
    Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
    Link: https://lore.kernel.org/r/20220218134552.4051-1-dnlplm@gmail.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1d6cec664a2abacb9ae36907c70590061b217923
Author: Slark Xiao <slark_xiao@163.com>
Date:   Mon Feb 14 10:14:01 2022 +0800

    USB: serial: option: add support for DW5829e
    
    commit 6ecb3f0b18b320320460a42e40d6fb603f6ded96 upstream.
    
    Dell DW5829e same as DW5821e except CAT level.
    DW5821e supports CAT16 but DW5829e supports CAT9.
    There are 2 types product of DW5829e: normal and eSIM.
    So we will add 2 PID for DW5829e.
    And for each PID, it support MBIM or RMNET.
    Let's see test evidence as below:
    
    DW5829e MBIM mode:
    T:  Bus=04 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  4 Spd=5000 MxCh= 0
    D:  Ver= 3.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  2
    P:  Vendor=413c ProdID=81e6 Rev=03.18
    S:  Manufacturer=Dell Inc.
    S:  Product=DW5829e Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 7 Cfg#= 2 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=0e Prot=00 Driver=cdc_mbim
    I:  If#=0x1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    I:  If#=0x6 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    
    DW5829e RMNET mode:
    T:  Bus=04 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  5 Spd=5000 MxCh= 0
    D:  Ver= 3.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  1
    P:  Vendor=413c ProdID=81e6 Rev=03.18
    S:  Manufacturer=Dell Inc.
    S:  Product=DW5829e Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#=0x1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    
    DW5829e-eSIM MBIM mode:
    T:  Bus=04 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  6 Spd=5000 MxCh= 0
    D:  Ver= 3.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  2
    P:  Vendor=413c ProdID=81e4 Rev=03.18
    S:  Manufacturer=Dell Inc.
    S:  Product=DW5829e-eSIM Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 7 Cfg#= 2 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=0e Prot=00 Driver=cdc_mbim
    I:  If#=0x1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    I:  If#=0x6 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    
    DW5829e-eSIM RMNET mode:
    T:  Bus=04 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  7 Spd=5000 MxCh= 0
    D:  Ver= 3.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  1
    P:  Vendor=413c ProdID=81e4 Rev=03.18
    S:  Manufacturer=Dell Inc.
    S:  Product=DW5829e-eSIM Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#=0x1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    
    BTW, the interface 0x6 of MBIM mode is GNSS port, which not same as NMEA
    port. So it's banned from serial option driver.
    The remaining interfaces 0x2-0x5 are: MODEM, MODEM, NMEA, DIAG.
    
    Signed-off-by: Slark Xiao <slark_xiao@163.com>
    Link: https://lore.kernel.org/r/20220214021401.6264-1-slark_xiao@163.com
    [ johan: drop unnecessary reservation of interface 1 ]
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8157b6ec86ace8f9393588f9228659fc3516455a
Author: Steven Rostedt (Google) <rostedt@goodmis.org>
Date:   Fri Feb 25 15:34:26 2022 -0500

    tracefs: Set the group ownership in apply_options() not parse_options()
    
    commit 851e99ebeec3f4a672bb5010cf1ece095acee447 upstream.
    
    Al Viro brought it to my attention that the dentries may not be filled
    when the parse_options() is called, causing the call to set_gid() to
    possibly crash. It should only be called if parse_options() succeeds
    totally anyway.
    
    He suggested the logical place to do the update is in apply_options().
    
    Link: https://lore.kernel.org/all/20220225165219.737025658@goodmis.org/
    Link: https://lkml.kernel.org/r/20220225153426.1c4cab6b@gandalf.local.home
    
    Cc: stable@vger.kernel.org
    Acked-by: Al Viro <viro@zeniv.linux.org.uk>
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Fixes: 48b27b6b5191 ("tracefs: Set all files to the same group ownership as the mount option")
    Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdc22192d49fa577d8397b39f8ef8141cb1d62aa
Author: Szymon Heidrich <szymon.heidrich@gmail.com>
Date:   Mon Feb 21 13:24:56 2022 +0100

    USB: gadget: validate endpoint index for xilinx udc
    
    commit 7f14c7227f342d9932f9b918893c8814f86d2a0d upstream.
    
    Assure that host may not manipulate the index to point
    past endpoint array.
    
    Signed-off-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Cc: stable <stable@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 669c2b178956718407af5631ccbc61c24413f038
Author: Daehwan Jung <dh10.jung@samsung.com>
Date:   Tue Feb 22 14:29:28 2022 +0900

    usb: gadget: rndis: add spinlock for rndis response list
    
    commit aaaba1c86d04dac8e49bf508b492f81506257da3 upstream.
    
    There's no lock for rndis response list. It could cause list corruption
    if there're two different list_add at the same time like below.
    It's better to add in rndis_add_response / rndis_free_response
    / rndis_get_next_response to prevent any race condition on response list.
    
    [  361.894299] [1:   irq/191-dwc3:16979] list_add corruption.
    next->prev should be prev (ffffff80651764d0),
    but was ffffff883dc36f80. (next=ffffff80651764d0).
    
    [  361.904380] [1:   irq/191-dwc3:16979] Call trace:
    [  361.904391] [1:   irq/191-dwc3:16979]  __list_add_valid+0x74/0x90
    [  361.904401] [1:   irq/191-dwc3:16979]  rndis_msg_parser+0x168/0x8c0
    [  361.904409] [1:   irq/191-dwc3:16979]  rndis_command_complete+0x24/0x84
    [  361.904417] [1:   irq/191-dwc3:16979]  usb_gadget_giveback_request+0x20/0xe4
    [  361.904426] [1:   irq/191-dwc3:16979]  dwc3_gadget_giveback+0x44/0x60
    [  361.904434] [1:   irq/191-dwc3:16979]  dwc3_ep0_complete_data+0x1e8/0x3a0
    [  361.904442] [1:   irq/191-dwc3:16979]  dwc3_ep0_interrupt+0x29c/0x3dc
    [  361.904450] [1:   irq/191-dwc3:16979]  dwc3_process_event_entry+0x78/0x6cc
    [  361.904457] [1:   irq/191-dwc3:16979]  dwc3_process_event_buf+0xa0/0x1ec
    [  361.904465] [1:   irq/191-dwc3:16979]  dwc3_thread_interrupt+0x34/0x5c
    
    Fixes: f6281af9d62e ("usb: gadget: rndis: use list_for_each_entry_safe")
    Cc: stable <stable@kernel.org>
    Signed-off-by: Daehwan Jung <dh10.jung@samsung.com>
    Link: https://lore.kernel.org/r/1645507768-77687-1-git-send-email-dh10.jung@samsung.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85c4e9761fc093921f146c349fbe7b21d47f1713
Author: Dmytro Bagrii <dimich.dmb@gmail.com>
Date:   Thu Feb 10 18:41:37 2022 +0200

    Revert "USB: serial: ch341: add new Product ID for CH341A"
    
    commit 198a7ebd5fa17b4d0be8cb70240ee1be885175c0 upstream.
    
    This reverts commit 46ee4abb10a07bd8f8ce910ee6b4ae6a947d7f63.
    
    CH341 has Product ID 0x5512 in EPP/MEM mode which is used for
    I2C/SPI/GPIO interfaces. In asynchronous serial interface mode
    CH341 has PID 0x5523 which is already in the table.
    
    Mode is selected by corresponding jumper setting.
    
    Signed-off-by: Dmytro Bagrii <dimich.dmb@gmail.com>
    Link: https://lore.kernel.org/r/20220210164137.4376-1-dimich.dmb@gmail.com
    Link: https://lore.kernel.org/r/YJ0OCS/sh+1ifD/q@hovoldconsulting.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01940c71d5c92408dad589b8f1b0b70100052a7d
Author: Sergey Shtylyov <s.shtylyov@omp.ru>
Date:   Sat Feb 19 20:44:43 2022 +0300

    ata: pata_hpt37x: disable primary channel on HPT371
    
    commit 8d093e02e898b24c58788b0289e3202317a96d2a upstream.
    
    The HPT371 chip physically has only one channel, the secondary one,
    however the primary channel registers do exist! Thus we have to
    manually disable the non-existing channel if the BIOS hasn't done this
    already. Similarly to the pata_hpt3x2n driver, always disable the
    primary channel.
    
    Fixes: 669a5db411d8 ("[libata] Add a bunch of PATA drivers.")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omp.ru>
    Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5723b422f564af15f2e3bc0592fd6376a0a6c45
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Jan 29 09:32:47 2022 +0100

    iio: adc: men_z188_adc: Fix a resource leak in an error handling path
    
    commit e0a2e37f303828d030a83f33ffe14b36cb88d563 upstream.
    
    If iio_device_register() fails, a previous ioremap() is left unbalanced.
    
    Update the error handling path and add the missing iounmap() call, as
    already done in the remove function.
    
    Fixes: 74aeac4da66f ("iio: adc: Add MEN 16z188 ADC driver")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/320fc777863880247c2aff4a9d1a54ba69abf080.1643445149.git.christophe.jaillet@wanadoo.fr
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4752fafb461821f8c8581090c923ababba68c5bd
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Tue Feb 15 13:05:11 2022 -0800

    RDMA/ib_srp: Fix a deadlock
    
    [ Upstream commit 081bdc9fe05bb23248f5effb6f811da3da4b8252 ]
    
    Remove the flush_workqueue(system_long_wq) call since flushing
    system_long_wq is deadlock-prone and since that call is redundant with a
    preceding cancel_work_sync()
    
    Link: https://lore.kernel.org/r/20220215210511.28303-3-bvanassche@acm.org
    Fixes: ef6c49d87c34 ("IB/srp: Eliminate state SRP_TARGET_DEAD")
    Reported-by: syzbot+831661966588c802aae9@syzkaller.appspotmail.com
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1654de19d42f513b6cfe955cc77e7f427e05a77
Author: ChenXiaoSong <chenxiaosong2@huawei.com>
Date:   Tue Feb 15 15:10:30 2022 +0800

    configfs: fix a race in configfs_{,un}register_subsystem()
    
    [ Upstream commit 84ec758fb2daa236026506868c8796b0500c047d ]
    
    When configfs_register_subsystem() or configfs_unregister_subsystem()
    is executing link_group() or unlink_group(),
    it is possible that two processes add or delete list concurrently.
    Some unfortunate interleavings of them can cause kernel panic.
    
    One of cases is:
    A --> B --> C --> D
    A <-- B <-- C <-- D
    
         delete list_head *B        |      delete list_head *C
    --------------------------------|-----------------------------------
    configfs_unregister_subsystem   |   configfs_unregister_subsystem
      unlink_group                  |     unlink_group
        unlink_obj                  |       unlink_obj
          list_del_init             |         list_del_init
            __list_del_entry        |           __list_del_entry
              __list_del            |             __list_del
                // next == C        |
                next->prev = prev   |
                                    |               next->prev = prev
                prev->next = next   |
                                    |                 // prev == B
                                    |                 prev->next = next
    
    Fix this by adding mutex when calling link_group() or unlink_group(),
    but parent configfs_subsystem is NULL when config_item is root.
    So I create a mutex configfs_subsystem_mutex.
    
    Fixes: 7063fbf22611 ("[PATCH] configfs: User-driven configuration filesystem")
    Signed-off-by: ChenXiaoSong <chenxiaosong2@huawei.com>
    Signed-off-by: Laibin Qiu <qiulaibin@huawei.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed91016e60859fc7f0b1d488e44a5587f73ab1a5
Author: Gal Pressman <gal@nvidia.com>
Date:   Wed Feb 2 16:07:21 2022 +0200

    net/mlx5e: Fix wrong return value on ioctl EEPROM query failure
    
    commit 0b89429722353d112f8b8b29ca397e95fa994d27 upstream.
    
    The ioctl EEPROM query wrongly returns success on read failures, fix
    that by returning the appropriate error code.
    
    Fixes: bb64143eee8c ("net/mlx5e: Add ethtool support for dump module EEPROM")
    Signed-off-by: Gal Pressman <gal@nvidia.com>
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe423ed550dfcadf1ba6b683d0d1aa117e687f75
Author: Maxime Ripard <maxime@cerno.tech>
Date:   Thu Feb 3 12:54:16 2022 +0100

    drm/edid: Always set RGB444
    
    commit ecbd4912a693b862e25cba0a6990a8c95b00721e upstream.
    
    In order to fill the drm_display_info structure each time an EDID is
    read, the code currently will call drm_add_display_info with the parsed
    EDID.
    
    drm_add_display_info will then call drm_reset_display_info to reset all
    the fields to 0, and then set them to the proper value depending on the
    EDID.
    
    In the color_formats case, we will thus report that we don't support any
    color format, and then fill it back with RGB444 plus the additional
    formats described in the EDID Feature Support byte.
    
    However, since that byte only contains format-related bits since the 1.4
    specification, this doesn't happen if the EDID is following an earlier
    specification. In turn, it means that for one of these EDID, we end up
    with color_formats set to 0.
    
    The EDID 1.3 specification never really specifies what it means by RGB
    exactly, but since both HDMI and DVI will use RGB444, it's fairly safe
    to assume it's supposed to be RGB444.
    
    Let's move the addition of RGB444 to color_formats earlier in
    drm_add_display_info() so that it's always set for a digital display.
    
    Fixes: da05a5a71ad8 ("drm: parse color format support for digital displays")
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reported-by: Matthias Reichl <hias@horus.com>
    Signed-off-by: Maxime Ripard <maxime@cerno.tech>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220203115416.1137308-1-maxime@cerno.tech
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2158b384c60f13bc1cf38d703f835c4e33896714
Author: Paul Blakey <paulb@nvidia.com>
Date:   Wed Feb 23 18:34:16 2022 +0200

    openvswitch: Fix setting ipv6 fields causing hw csum failure
    
    commit d9b5ae5c1b241b91480aa30408be12fe91af834a upstream.
    
    Ipv6 ttl, label and tos fields are modified without first
    pulling/pushing the ipv6 header, which would have updated
    the hw csum (if available). This might cause csum validation
    when sending the packet to the stack, as can be seen in
    the trace below.
    
    Fix this by updating skb->csum if available.
    
    Trace resulted by ipv6 ttl dec and then sending packet
    to conntrack [actions: set(ipv6(hlimit=63)),ct(zone=99)]:
    [295241.900063] s_pf0vf2: hw csum failure
    [295241.923191] Call Trace:
    [295241.925728]  <IRQ>
    [295241.927836]  dump_stack+0x5c/0x80
    [295241.931240]  __skb_checksum_complete+0xac/0xc0
    [295241.935778]  nf_conntrack_tcp_packet+0x398/0xba0 [nf_conntrack]
    [295241.953030]  nf_conntrack_in+0x498/0x5e0 [nf_conntrack]
    [295241.958344]  __ovs_ct_lookup+0xac/0x860 [openvswitch]
    [295241.968532]  ovs_ct_execute+0x4a7/0x7c0 [openvswitch]
    [295241.979167]  do_execute_actions+0x54a/0xaa0 [openvswitch]
    [295242.001482]  ovs_execute_actions+0x48/0x100 [openvswitch]
    [295242.006966]  ovs_dp_process_packet+0x96/0x1d0 [openvswitch]
    [295242.012626]  ovs_vport_receive+0x6c/0xc0 [openvswitch]
    [295242.028763]  netdev_frame_hook+0xc0/0x180 [openvswitch]
    [295242.034074]  __netif_receive_skb_core+0x2ca/0xcb0
    [295242.047498]  netif_receive_skb_internal+0x3e/0xc0
    [295242.052291]  napi_gro_receive+0xba/0xe0
    [295242.056231]  mlx5e_handle_rx_cqe_mpwrq_rep+0x12b/0x250 [mlx5_core]
    [295242.062513]  mlx5e_poll_rx_cq+0xa0f/0xa30 [mlx5_core]
    [295242.067669]  mlx5e_napi_poll+0xe1/0x6b0 [mlx5_core]
    [295242.077958]  net_rx_action+0x149/0x3b0
    [295242.086762]  __do_softirq+0xd7/0x2d6
    [295242.090427]  irq_exit+0xf7/0x100
    [295242.093748]  do_IRQ+0x7f/0xd0
    [295242.096806]  common_interrupt+0xf/0xf
    [295242.100559]  </IRQ>
    [295242.102750] RIP: 0033:0x7f9022e88cbd
    [295242.125246] RSP: 002b:00007f9022282b20 EFLAGS: 00000246 ORIG_RAX: ffffffffffffffda
    [295242.132900] RAX: 0000000000000005 RBX: 0000000000000010 RCX: 0000000000000000
    [295242.140120] RDX: 00007f9022282ba8 RSI: 00007f9022282a30 RDI: 00007f9014005c30
    [295242.147337] RBP: 00007f9014014d60 R08: 0000000000000020 R09: 00007f90254a8340
    [295242.154557] R10: 00007f9022282a28 R11: 0000000000000246 R12: 0000000000000000
    [295242.161775] R13: 00007f902308c000 R14: 000000000000002b R15: 00007f9022b71f40
    
    Fixes: 3fdbd1ce11e5 ("openvswitch: add ipv6 'set' action")
    Signed-off-by: Paul Blakey <paulb@nvidia.com>
    Link: https://lore.kernel.org/r/20220223163416.24096-1-paulb@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7840e559799a08a8588ee6de27516a991cb2e5e7
Author: Tao Liu <thomas.liu@ucloud.cn>
Date:   Fri Feb 18 22:35:24 2022 +0800

    gso: do not skip outer ip header in case of ipip and net_failover
    
    commit cc20cced0598d9a5ff91ae4ab147b3b5e99ee819 upstream.
    
    We encounter a tcp drop issue in our cloud environment. Packet GROed in
    host forwards to a VM virtio_net nic with net_failover enabled. VM acts
    as a IPVS LB with ipip encapsulation. The full path like:
    host gro -> vm virtio_net rx -> net_failover rx -> ipvs fullnat
     -> ipip encap -> net_failover tx -> virtio_net tx
    
    When net_failover transmits a ipip pkt (gso_type = 0x0103, which means
    SKB_GSO_TCPV4, SKB_GSO_DODGY and SKB_GSO_IPXIP4), there is no gso
    did because it supports TSO and GSO_IPXIP4. But network_header points to
    inner ip header.
    
    Call Trace:
     tcp4_gso_segment        ------> return NULL
     inet_gso_segment        ------> inner iph, network_header points to
     ipip_gso_segment
     inet_gso_segment        ------> outer iph
     skb_mac_gso_segment
    
    Afterwards virtio_net transmits the pkt, only inner ip header is modified.
    And the outer one just keeps unchanged. The pkt will be dropped in remote
    host.
    
    Call Trace:
     inet_gso_segment        ------> inner iph, outer iph is skipped
     skb_mac_gso_segment
     __skb_gso_segment
     validate_xmit_skb
     validate_xmit_skb_list
     sch_direct_xmit
     __qdisc_run
     __dev_queue_xmit        ------> virtio_net
     dev_hard_start_xmit
     __dev_queue_xmit        ------> net_failover
     ip_finish_output2
     ip_output
     iptunnel_xmit
     ip_tunnel_xmit
     ipip_tunnel_xmit        ------> ipip
     dev_hard_start_xmit
     __dev_queue_xmit
     ip_finish_output2
     ip_output
     ip_forward
     ip_rcv
     __netif_receive_skb_one_core
     netif_receive_skb_internal
     napi_gro_receive
     receive_buf
     virtnet_poll
     net_rx_action
    
    The root cause of this issue is specific with the rare combination of
    SKB_GSO_DODGY and a tunnel device that adds an SKB_GSO_ tunnel option.
    SKB_GSO_DODGY is set from external virtio_net. We need to reset network
    header when callbacks.gso_segment() returns NULL.
    
    This patch also includes ipv6_gso_segment(), considering SIT, etc.
    
    Fixes: cb32f511a70b ("ipip: add GSO/TSO support")
    Signed-off-by: Tao Liu <thomas.liu@ucloud.cn>
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8af34e3dbca09fbdf01e8fb896ffe540dfadbb9c
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Feb 20 07:40:52 2022 -0800

    net: __pskb_pull_tail() & pskb_carve_frag_list() drop_monitor friends
    
    commit ef527f968ae05c6717c39f49c8709a7e2c19183a upstream.
    
    Whenever one of these functions pull all data from an skb in a frag_list,
    use consume_skb() instead of kfree_skb() to avoid polluting drop
    monitoring.
    
    Fixes: 6fa01ccd8830 ("skbuff: Add pskb_extract() helper function")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Link: https://lore.kernel.org/r/20220220154052.1308469-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5fde9970f798f797e6e4c8eb60c4268406783e8
Author: Xin Long <lucien.xin@gmail.com>
Date:   Wed Feb 23 22:41:08 2022 -0500

    ping: remove pr_err from ping_lookup
    
    commit cd33bdcbead882c2e58fdb4a54a7bd75b610a452 upstream.
    
    As Jakub noticed, prints should be avoided on the datapath.
    Also, as packets would never come to the else branch in
    ping_lookup(), remove pr_err() from ping_lookup().
    
    Fixes: 35a79e64de29 ("ping: fix the dif and sdif check in ping_lookup")
    Reported-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Link: https://lore.kernel.org/r/1ef3f2fcd31bd681a193b1fcf235eee1603819bd.1645674068.git.lucien.xin@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a866600efd2be96fc4f73e96e254595933f02673
Author: Robert Hancock <robert.hancock@calian.com>
Date:   Wed Jan 12 13:42:14 2022 -0600

    serial: 8250: of: Fix mapped region size when using reg-offset property
    
    commit d06b1cf28297e27127d3da54753a3a01a2fa2f28 upstream.
    
    8250_of supports a reg-offset property which is intended to handle
    cases where the device registers start at an offset inside the region
    of memory allocated to the device. The Xilinx 16550 UART, for which this
    support was initially added, requires this. However, the code did not
    adjust the overall size of the mapped region accordingly, causing the
    driver to request an area of memory past the end of the device's
    allocation. For example, if the UART was allocated an address of
    0xb0130000, size of 0x10000 and reg-offset of 0x1000 in the device
    tree, the region of memory reserved was b0131000-b0140fff, which caused
    the driver for the region starting at b0140000 to fail to probe.
    
    Fix this by subtracting reg-offset from the mapped region size.
    
    Fixes: b912b5e2cfb3 ([POWERPC] Xilinx: of_serial support for Xilinx uart 16550.)
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Robert Hancock <robert.hancock@calian.com>
    Link: https://lore.kernel.org/r/20220112194214.881844-1-robert.hancock@calian.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db2b76325925f8e549c3e0029c7109a18d00904e
Author: Oliver Neukum <oneukum@suse.com>
Date:   Mon Feb 14 15:08:18 2022 +0100

    USB: zaurus: support another broken Zaurus
    
    commit 6605cc67ca18b9d583eb96e18a20f5f4e726103c upstream.
    
    This SL-6000 says Direct Line, not Ethernet
    
    v2: added Reporter and Link
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Reported-by: Ross Maynard <bids.7405@bigpond.com>
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=215361
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbc3c962b6eb42b1483d00d8ea28b61b9f2fff26
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Feb 17 14:10:44 2022 +0100

    sr9700: sanity check for packet length
    
    commit e9da0b56fe27206b49f39805f7dcda8a89379062 upstream.
    
    A malicious device can leak heap data to user space
    providing bogus frame lengths. Introduce a sanity check.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Reviewed-by: Grant Grundler <grundler@chromium.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f3bd25d1f021494ec3fcc7eebc400e5d89ab43a
Author: Helge Deller <deller@gmx.de>
Date:   Fri Feb 18 23:40:14 2022 +0100

    parisc/unaligned: Fix ldw() and stw() unalignment handlers
    
    commit a97279836867b1cb50a3d4f0b1bf60e0abe6d46c upstream.
    
    Fix 3 bugs:
    
    a) emulate_stw() doesn't return the error code value, so faulting
    instructions are not reported and aborted.
    
    b) Tell emulate_ldw() to handle fldw_l as floating point instruction
    
    c) Tell emulate_ldw() to handle ldw_m as integer instruction
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fd1358b6dec0c609ca97d2b4a545e1bd19786bb
Author: Helge Deller <deller@gmx.de>
Date:   Fri Feb 18 09:25:20 2022 +0100

    parisc/unaligned: Fix fldd and fstd unaligned handlers on 32-bit kernel
    
    commit dd2288f4a020d693360e3e8d72f8b9d9c25f5ef6 upstream.
    
    Usually the kernel provides fixup routines to emulate the fldd and fstd
    floating-point instructions if they load or store 8-byte from/to a not
    natuarally aligned memory location.
    
    On a 32-bit kernel I noticed that those unaligned handlers didn't worked and
    instead the application got a SEGV.
    While checking the code I found two problems:
    
    First, the OPCODE_FLDD_L and OPCODE_FSTD_L cases were ifdef'ed out by the
    CONFIG_PA20 option, and as such those weren't built on a pure 32-bit kernel.
    This is now fixed by moving the CONFIG_PA20 #ifdef to prevent the compilation
    of OPCODE_LDD_L and OPCODE_FSTD_L only, and handling the fldd and fstd
    instructions.
    
    The second problem are two bugs in the 32-bit inline assembly code, where the
    wrong registers where used. The calculation of the natural alignment used %2
    (vall) instead of %3 (ior), and the first word was stored back to address %1
    (valh) instead of %3 (ior).
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ac6ca7907d7e6057a0aa4e9af48cbd2a8b2afaa
Author: Stefano Garzarella <sgarzare@redhat.com>
Date:   Tue Feb 22 10:47:42 2022 +0100

    vhost/vsock: don't check owner in vhost_vsock_stop() while releasing
    
    commit a58da53ffd70294ebea8ecd0eb45fd0d74add9f9 upstream.
    
    vhost_vsock_stop() calls vhost_dev_check_owner() to check the device
    ownership. It expects current->mm to be valid.
    
    vhost_vsock_stop() is also called by vhost_vsock_dev_release() when
    the user has not done close(), so when we are in do_exit(). In this
    case current->mm is invalid and we're releasing the device, so we
    should clean it anyway.
    
    Let's check the owner only when vhost_vsock_stop() is called
    by an ioctl.
    
    When invoked from release we can not fail so we don't check return
    code of vhost_vsock_stop(). We need to stop vsock even if it's not
    the owner.
    
    Fixes: 433fc58e6bf2 ("VSOCK: Introduce vhost_vsock.ko")
    Cc: stable@vger.kernel.org
    Reported-by: syzbot+1e3ea63db39f2b4440e0@syzkaller.appspotmail.com
    Reported-and-tested-by: syzbot+3140b17cb44a7b174008@syzkaller.appspotmail.com
    Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
    Acked-by: Jason Wang <jasowang@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40b4ac82dafe62e231445cb735466aec15f54aa1
Author: Zhang Qiao <zhangqiao22@huawei.com>
Date:   Fri Jan 21 18:12:10 2022 +0800

    cgroup/cpuset: Fix a race between cpuset_attach() and cpu hotplug
    
    commit 05c7b7a92cc87ff8d7fde189d0fade250697573c upstream.
    
    As previously discussed(https://lkml.org/lkml/2022/1/20/51),
    cpuset_attach() is affected with similar cpu hotplug race,
    as follow scenario:
    
         cpuset_attach()                            cpu hotplug
        ---------------------------            ----------------------
        down_write(cpuset_rwsem)
        guarantee_online_cpus() // (load cpus_attach)
                                            sched_cpu_deactivate
                                              set_cpu_active()
                                              // will change cpu_active_mask
        set_cpus_allowed_ptr(cpus_attach)
          __set_cpus_allowed_ptr_locked()
           // (if the intersection of cpus_attach and
             cpu_active_mask is empty, will return -EINVAL)
        up_write(cpuset_rwsem)
    
    To avoid races such as described above, protect cpuset_attach() call
    with cpu_hotplug_lock.
    
    Fixes: be367d099270 ("cgroups: let ss->can_attach and ss->attach do whole threadgroups at a time")
    Cc: stable@vger.kernel.org # v2.6.32+
    Reported-by: Zhao Gongyi <zhaogongyi@huawei.com>
    Signed-off-by: Zhang Qiao <zhangqiao22@huawei.com>
    Acked-by: Waiman Long <longman@redhat.com>
    Reviewed-by: Michal Koutný <mkoutny@suse.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
