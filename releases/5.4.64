commit 6ffabce36fc83a88878cef43e8b29b0103e24709
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Sep 9 19:12:37 2020 +0200

    Linux 5.4.64
    
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit beaf13ed8e973df7717f0656202d32401652b1fc
Author: Himadri Pandya <himadrispandya@gmail.com>
Date:   Thu Aug 27 12:23:55 2020 +0530

    net: usb: Fix uninit-was-stored issue in asix_read_phy_addr()
    
    commit a092b7233f0e000cc6f2c71a49e2ecc6f917a5fc upstream.
    
    The buffer size is 2 Bytes and we expect to receive the same amount of
    data. But sometimes we receive less data and run into uninit-was-stored
    issue upon read. Hence modify the error check on the return value to match
    with the buffer size as a prevention.
    
    Reported-and-tested by: syzbot+a7e220df5a81d1ab400e@syzkaller.appspotmail.com
    Signed-off-by: Himadri Pandya <himadrispandya@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58c3e86d42d207e60015773d7cc699f5130c5dfa
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Wed Aug 19 10:46:48 2020 +0200

    cfg80211: regulatory: reject invalid hints
    
    commit 47caf685a6854593348f216e0b489b71c10cbe03 upstream.
    
    Reject invalid hints early in order to not cause a kernel
    WARN later if they're restored to or similar.
    
    Reported-by: syzbot+d451401ffd00a60677ee@syzkaller.appspotmail.com
    Link: https://syzkaller.appspot.com/bug?extid=d451401ffd00a60677ee
    Link: https://lore.kernel.org/r/20200819084648.13956-1-johannes@sipsolutions.net
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08eeec4452975ae1dee517512efb5f2538f22203
Author: David Howells <dhowells@redhat.com>
Date:   Fri Sep 4 16:36:16 2020 -0700

    mm/khugepaged.c: fix khugepaged's request size in collapse_file
    
    commit e5a59d308f52bb0052af5790c22173651b187465 upstream.
    
    collapse_file() in khugepaged passes PAGE_SIZE as the number of pages to
    be read to page_cache_sync_readahead().  The intent was probably to read
    a single page.  Fix it to use the number of pages to the end of the
    window instead.
    
    Fixes: 99cb0dbd47a1 ("mm,thp: add read-only THP support for (non-shmem) FS")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Acked-by: Song Liu <songliubraving@fb.com>
    Acked-by: Yang Shi <shy828301@gmail.com>
    Acked-by: Pankaj Gupta <pankaj.gupta.linux@gmail.com>
    Cc: Eric Biggers <ebiggers@google.com>
    Link: https://lkml.kernel.org/r/20200903140844.14194-2-willy@infradead.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af7786b20c717ff13d9148161dad4b8e286bfd39
Author: Muchun Song <songmuchun@bytedance.com>
Date:   Fri Sep 4 16:36:13 2020 -0700

    mm/hugetlb: fix a race between hugetlb sysctl handlers
    
    commit 17743798d81238ab13050e8e2833699b54e15467 upstream.
    
    There is a race between the assignment of `table->data` and write value
    to the pointer of `table->data` in the __do_proc_doulongvec_minmax() on
    the other thread.
    
      CPU0:                                 CPU1:
                                            proc_sys_write
      hugetlb_sysctl_handler                  proc_sys_call_handler
      hugetlb_sysctl_handler_common             hugetlb_sysctl_handler
        table->data = &tmp;                       hugetlb_sysctl_handler_common
                                                    table->data = &tmp;
          proc_doulongvec_minmax
            do_proc_doulongvec_minmax           sysctl_head_finish
              __do_proc_doulongvec_minmax         unuse_table
                i = table->data;
                *i = val;  // corrupt CPU1's stack
    
    Fix this by duplicating the `table`, and only update the duplicate of
    it.  And introduce a helper of proc_hugetlb_doulongvec_minmax() to
    simplify the code.
    
    The following oops was seen:
    
        BUG: kernel NULL pointer dereference, address: 0000000000000000
        #PF: supervisor instruction fetch in kernel mode
        #PF: error_code(0x0010) - not-present page
        Code: Bad RIP value.
        ...
        Call Trace:
         ? set_max_huge_pages+0x3da/0x4f0
         ? alloc_pool_huge_page+0x150/0x150
         ? proc_doulongvec_minmax+0x46/0x60
         ? hugetlb_sysctl_handler_common+0x1c7/0x200
         ? nr_hugepages_store+0x20/0x20
         ? copy_fd_bitmaps+0x170/0x170
         ? hugetlb_sysctl_handler+0x1e/0x20
         ? proc_sys_call_handler+0x2f1/0x300
         ? unregister_sysctl_table+0xb0/0xb0
         ? __fd_install+0x78/0x100
         ? proc_sys_write+0x14/0x20
         ? __vfs_write+0x4d/0x90
         ? vfs_write+0xef/0x240
         ? ksys_write+0xc0/0x160
         ? __ia32_sys_read+0x50/0x50
         ? __close_fd+0x129/0x150
         ? __x64_sys_write+0x43/0x50
         ? do_syscall_64+0x6c/0x200
         ? entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Fixes: e5ff215941d5 ("hugetlb: multiple hstates for multiple page sizes")
    Signed-off-by: Muchun Song <songmuchun@bytedance.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Link: http://lkml.kernel.org/r/20200828031146.43035-1-songmuchun@bytedance.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2cd86225c89a51e5a5633833d107a46e1affad6
Author: Mrinal Pandey <mrinalmni@gmail.com>
Date:   Fri Sep 4 16:35:52 2020 -0700

    checkpatch: fix the usage of capture group ( ... )
    
    commit 13e45417cedbfc44b1926124b1846f5ee8c6ba4a upstream.
    
    The usage of "capture group (...)" in the immediate condition after `&&`
    results in `$1` being uninitialized.  This issues a warning "Use of
    uninitialized value $1 in regexp compilation at ./scripts/checkpatch.pl
    line 2638".
    
    I noticed this bug while running checkpatch on the set of commits from
    v5.7 to v5.8-rc1 of the kernel on the commits with a diff content in
    their commit message.
    
    This bug was introduced in the script by commit e518e9a59ec3
    ("checkpatch: emit an error when there's a diff in a changelog").  It
    has been in the script since then.
    
    The author intended to store the match made by capture group in variable
    `$1`.  This should have contained the name of the file as `[\w/]+`
    matched.  However, this couldn't be accomplished due to usage of capture
    group and `$1` in the same regular expression.
    
    Fix this by placing the capture group in the condition before `&&`.
    Thus, `$1` can be initialized to the text that capture group matches
    thereby setting it to the desired and required value.
    
    Fixes: e518e9a59ec3 ("checkpatch: emit an error when there's a diff in a changelog")
    Signed-off-by: Mrinal Pandey <mrinalmni@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Tested-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Reviewed-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Cc: Joe Perches <joe@perches.com>
    Link: https://lkml.kernel.org/r/20200714032352.f476hanaj2dlmiot@mrinalpandey
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59ac5bfa82bcb1c52ded814dd1fff0ffec3c6385
Author: Sowjanya Komatineni <skomatineni@nvidia.com>
Date:   Thu Aug 27 10:21:01 2020 -0700

    sdhci: tegra: Add missing TMCLK for data timeout
    
    commit 8048822bac01936fda2c7b924a52131da81e6198 upstream.
    
    commit b5a84ecf025a ("mmc: tegra: Add Tegra210 support")
    
    Tegra210 and later has a separate sdmmc_legacy_tm (TMCLK) used by Tegra
    SDMMC hawdware for data timeout to achive better timeout than using
    SDCLK and using TMCLK is recommended.
    
    USE_TMCLK_FOR_DATA_TIMEOUT bit in Tegra SDMMC register
    SDHCI_TEGRA_VENDOR_SYS_SW_CTRL can be used to choose either TMCLK or
    SDCLK for data timeout.
    
    Default USE_TMCLK_FOR_DATA_TIMEOUT bit is set to 1 and TMCLK is used
    for data timeout by Tegra SDMMC hardware and having TMCLK not enabled
    is not recommended.
    
    So, this patch adds quirk NVQUIRK_HAS_TMCLK for SoC having separate
    timeout clock and keeps TMCLK enabled all the time.
    
    Fixes: b5a84ecf025a ("mmc: tegra: Add Tegra210 support")
    Cc: stable <stable@vger.kernel.org> # 5.4
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Reviewed-by: Jon Hunter <jonathanh@nvidia.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Sowjanya Komatineni <skomatineni@nvidia.com>
    Link: https://lore.kernel.org/r/1598548861-32373-8-git-send-email-skomatineni@nvidia.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e915b3b63dfd35ca8d0d2464f7ee2636d13db6e1
Author: Wei Li <liwei391@huawei.com>
Date:   Wed Aug 19 11:19:47 2020 +0800

    perf record: Correct the help info of option "--no-bpf-event"
    
    commit a060c1f12b525ba828f871eff3127dabf8daa1e6 upstream.
    
    The help info of option "--no-bpf-event" is wrongly described as "record
    bpf events", correct it.
    
    Committer testing:
    
      $ perf record -h bpf
    
       Usage: perf record [<options>] [<command>]
          or: perf record [<options>] -- <command> [<options>]
    
              --clang-opt <clang options>
                                options passed to clang when compiling BPF scriptlets
              --clang-path <clang path>
                                clang binary to use for compiling BPF scriptlets
              --no-bpf-event    do not record bpf events
    
      $
    
    Fixes: 71184c6ab7e6 ("perf record: Replace option --bpf-event with --no-bpf-event")
    Signed-off-by: Wei Li <liwei391@huawei.com>
    Acked-by: Song Liu <songliubraving@fb.com>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Hanjun Guo <guohanjun@huawei.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Li Bin <huawei.libin@huawei.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Link: http://lore.kernel.org/lkml/20200819031947.12115-1-liwei391@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 894a6f0be372df98f394b316202a7d1d56b745ce
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Thu Jun 25 11:04:23 2020 -0600

    vfio/pci: Fix SR-IOV VF handling with MMIO blocking
    
    commit ebfa440ce38b7e2e04c3124aa89c8a9f4094cf21 upstream.
    
    SR-IOV VFs do not implement the memory enable bit of the command
    register, therefore this bit is not set in config space after
    pci_enable_device().  This leads to an unintended difference
    between PF and VF in hand-off state to the user.  We can correct
    this by setting the initial value of the memory enable bit in our
    virtualized config space.  There's really no need however to
    ever fault a user on a VF though as this would only indicate an
    error in the user's management of the enable bit, versus a PF
    where the same access could trigger hardware faults.
    
    Fixes: abafbc551fdd ("vfio-pci: Invalidate mmaps and block MMIO access on disabled memory")
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f4fa8d937edf7cf6acd394957e5c58fb09024ac3
Author: Yang Shi <shy828301@gmail.com>
Date:   Fri Sep 4 16:35:55 2020 -0700

    mm: madvise: fix vma user-after-free
    
    commit 7867fd7cc44e63c6673cd0f8fea155456d34d0de upstream.
    
    The syzbot reported the below use-after-free:
    
      BUG: KASAN: use-after-free in madvise_willneed mm/madvise.c:293 [inline]
      BUG: KASAN: use-after-free in madvise_vma mm/madvise.c:942 [inline]
      BUG: KASAN: use-after-free in do_madvise.part.0+0x1c8b/0x1cf0 mm/madvise.c:1145
      Read of size 8 at addr ffff8880a6163eb0 by task syz-executor.0/9996
    
      CPU: 0 PID: 9996 Comm: syz-executor.0 Not tainted 5.9.0-rc1-syzkaller #0
      Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
      Call Trace:
        __dump_stack lib/dump_stack.c:77 [inline]
        dump_stack+0x18f/0x20d lib/dump_stack.c:118
        print_address_description.constprop.0.cold+0xae/0x497 mm/kasan/report.c:383
        __kasan_report mm/kasan/report.c:513 [inline]
        kasan_report.cold+0x1f/0x37 mm/kasan/report.c:530
        madvise_willneed mm/madvise.c:293 [inline]
        madvise_vma mm/madvise.c:942 [inline]
        do_madvise.part.0+0x1c8b/0x1cf0 mm/madvise.c:1145
        do_madvise mm/madvise.c:1169 [inline]
        __do_sys_madvise mm/madvise.c:1171 [inline]
        __se_sys_madvise mm/madvise.c:1169 [inline]
        __x64_sys_madvise+0xd9/0x110 mm/madvise.c:1169
        do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      Allocated by task 9992:
        kmem_cache_alloc+0x138/0x3a0 mm/slab.c:3482
        vm_area_alloc+0x1c/0x110 kernel/fork.c:347
        mmap_region+0x8e5/0x1780 mm/mmap.c:1743
        do_mmap+0xcf9/0x11d0 mm/mmap.c:1545
        vm_mmap_pgoff+0x195/0x200 mm/util.c:506
        ksys_mmap_pgoff+0x43a/0x560 mm/mmap.c:1596
        do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      Freed by task 9992:
        kmem_cache_free.part.0+0x67/0x1f0 mm/slab.c:3693
        remove_vma+0x132/0x170 mm/mmap.c:184
        remove_vma_list mm/mmap.c:2613 [inline]
        __do_munmap+0x743/0x1170 mm/mmap.c:2869
        do_munmap mm/mmap.c:2877 [inline]
        mmap_region+0x257/0x1780 mm/mmap.c:1716
        do_mmap+0xcf9/0x11d0 mm/mmap.c:1545
        vm_mmap_pgoff+0x195/0x200 mm/util.c:506
        ksys_mmap_pgoff+0x43a/0x560 mm/mmap.c:1596
        do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
        entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    It is because vma is accessed after releasing mmap_lock, but someone
    else acquired the mmap_lock and the vma is gone.
    
    Releasing mmap_lock after accessing vma should fix the problem.
    
    Fixes: 692fe62433d4c ("mm: Handle MADV_WILLNEED through vfs_fadvise()")
    Reported-by: syzbot+b90df26038d1d5d85c97@syzkaller.appspotmail.com
    Signed-off-by: Yang Shi <shy828301@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Cc: <stable@vger.kernel.org>    [5.4+]
    Link: https://lkml.kernel.org/r/20200816141204.162624-1-shy828301@gmail.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87fb7b0c5266edb53ca23c14c25d28811fffff5e
Author: Eugeniu Rosca <erosca@de.adit-jv.com>
Date:   Fri Sep 4 16:35:30 2020 -0700

    mm: slub: fix conversion of freelist_corrupted()
    
    commit dc07a728d49cf025f5da2c31add438d839d076c0 upstream.
    
    Commit 52f23478081ae0 ("mm/slub.c: fix corrupted freechain in
    deactivate_slab()") suffered an update when picked up from LKML [1].
    
    Specifically, relocating 'freelist = NULL' into 'freelist_corrupted()'
    created a no-op statement.  Fix it by sticking to the behavior intended
    in the original patch [1].  In addition, make freelist_corrupted()
    immune to passing NULL instead of &freelist.
    
    The issue has been spotted via static analysis and code review.
    
    [1] https://lore.kernel.org/linux-mm/20200331031450.12182-1-dongli.zhang@oracle.com/
    
    Fixes: 52f23478081ae0 ("mm/slub.c: fix corrupted freechain in deactivate_slab()")
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Dongli Zhang <dongli.zhang@oracle.com>
    Cc: Joe Jin <joe.jin@oracle.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20200824130643.10291-1-erosca@de.adit-jv.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 291144f1114dbac7727a393ed65c1378bfc2213f
Author: Ye Bin <yebin10@huawei.com>
Date:   Tue Sep 1 14:25:44 2020 +0800

    dm thin metadata: Fix use-after-free in dm_bm_set_read_only
    
    commit 3a653b205f29b3f9827a01a0c88bfbcb0d169494 upstream.
    
    The following error ocurred when testing disk online/offline:
    
    [  301.798344] device-mapper: thin: 253:5: aborting current metadata transaction
    [  301.848441] device-mapper: thin: 253:5: failed to abort metadata transaction
    [  301.849206] Aborting journal on device dm-26-8.
    [  301.850489] EXT4-fs error (device dm-26) in __ext4_new_inode:943: Journal has aborted
    [  301.851095] EXT4-fs (dm-26): Delayed block allocation failed for inode 398742 at logical offset 181 with max blocks 19 with error 30
    [  301.854476] BUG: KASAN: use-after-free in dm_bm_set_read_only+0x3a/0x40 [dm_persistent_data]
    
    Reason is:
    
     metadata_operation_failed
        abort_transaction
            dm_pool_abort_metadata
                __create_persistent_data_objects
                    r = __open_or_format_metadata
                    if (r) --> If failed will free pmd->bm but pmd->bm not set NULL
                        dm_block_manager_destroy(pmd->bm);
        set_pool_mode
            dm_pool_metadata_read_only(pool->pmd);
            dm_bm_set_read_only(pmd->bm);  --> use-after-free
    
    Add checks to see if pmd->bm is NULL in dm_bm_set_read_only and
    dm_bm_set_read_write functions.  If bm is NULL it means creating the
    bm failed and so dm_bm_is_read_only must return true.
    
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfe85a4a8552663fe85ef0e6d6abef6128c5c29b
Author: Ye Bin <yebin10@huawei.com>
Date:   Tue Sep 1 14:25:43 2020 +0800

    dm thin metadata: Avoid returning cmd->bm wild pointer on error
    
    commit 219403d7e56f9b716ad80ab87db85d29547ee73e upstream.
    
    Maybe __create_persistent_data_objects() caller will use PTR_ERR as a
    pointer, it will lead to some strange things.
    
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 392a6afcbf19ba71eb23f39df4cac066abbd013a
Author: Ye Bin <yebin10@huawei.com>
Date:   Tue Sep 1 14:25:42 2020 +0800

    dm cache metadata: Avoid returning cmd->bm wild pointer on error
    
    commit d16ff19e69ab57e08bf908faaacbceaf660249de upstream.
    
    Maybe __create_persistent_data_objects() caller will use PTR_ERR as a
    pointer, it will lead to some strange things.
    
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9dd74db0bfd1cbce37543508547b722161b5e537
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Mon Aug 31 14:55:55 2020 +0900

    dm crypt: Initialize crypto wait structures
    
    commit 7785a9e4c228db6d01086a52d5685cd7336a08b7 upstream.
    
    Use the DECLARE_CRYPTO_WAIT() macro to properly initialize the crypto
    wait structures declared on stack before their use with
    crypto_wait_req().
    
    Fixes: 39d13a1ac41d ("dm crypt: reuse eboiv skcipher for IV generation")
    Fixes: bbb1658461ac ("dm crypt: Implement Elephant diffuser for Bitlocker compatibility")
    Cc: stable@vger.kernel.org
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6ddb1d45c5193e9af916d3b47036a5ad9c5b546
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Aug 31 09:25:41 2020 -0400

    dm integrity: fix error reporting in bitmap mode after creation
    
    commit e27fec66f0a94e35a35548bd0b29ae616e62ec62 upstream.
    
    The dm-integrity target did not report errors in bitmap mode just after
    creation. The reason is that the function integrity_recalc didn't clean up
    ic->recalc_bitmap as it proceeded with recalculation.
    
    Fix this by updating the bitmap accordingly -- the double shift serves
    to rounddown.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Fixes: 468dfca38b1a ("dm integrity: add a bitmap mode")
    Cc: stable@vger.kernel.org # v5.2+
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b30f628beec92e9f30ab5a466c58fc14216f7738
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Mon Aug 24 14:19:55 2020 -0400

    dm mpath: fix racey management of PG initialization
    
    commit c322ee9320eaa4013ca3620b1130992916b19b31 upstream.
    
    Commit 935fcc56abc3 ("dm mpath: only flush workqueue when needed")
    changed flush_multipath_work() to avoid needless workqueue
    flushing (of a multipath global workqueue). But that change didn't
    realize the surrounding flush_multipath_work() code should also only
    run if 'pg_init_in_progress' is set.
    
    Fix this by only doing all of flush_multipath_work()'s PG init related
    work if 'pg_init_in_progress' is set.
    
    Otherwise multipath_wait_for_pg_init_completion() will run
    unconditionally but the preceeding flush_workqueue(kmpath_handlerd)
    may not. This could lead to deadlock (though only if kmpath_handlerd
    never runs a corresponding work to decrement 'pg_init_in_progress').
    
    It could also be, though highly unlikely, that the kmpath_handlerd
    work that does PG init completes before 'pg_init_in_progress' is set,
    and then an intervening DM table reload's multipath_postsuspend()
    triggers flush_multipath_work().
    
    Fixes: 935fcc56abc3 ("dm mpath: only flush workqueue when needed")
    Cc: stable@vger.kernel.org
    Reported-by: Ben Marzinski <bmarzins@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 226fb99eb59d699f27d9738be8085c80e1c98b88
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Mon Aug 24 11:09:47 2020 -0400

    dm writecache: handle DAX to partitions on persistent memory correctly
    
    commit f9e040efcc28309e5c592f7e79085a9a52e31f58 upstream.
    
    The function dax_direct_access doesn't take partitions into account,
    it always maps pages from the beginning of the device. Therefore,
    persistent_memory_claim() must get the partition offset using
    get_start_sect() and add it to the page offsets passed to
    dax_direct_access().
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Fixes: 48debafe4f2f ("dm: add writecache target")
    Cc: stable@vger.kernel.org # 4.18+
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fb192c06a14d56be32bea576b278fbd2e5f24ec
Author: Evan Quan <evan.quan@amd.com>
Date:   Tue Aug 25 13:51:29 2020 +0800

    drm/amd/pm: avoid false alarm due to confusing softwareshutdowntemp setting
    
    commit 971df65cbf32da9bc9af52c1196ca504dd316086 upstream.
    
    Normally softwareshutdowntemp should be greater than Thotspotlimit.
    However, on some VEGA10 ASIC, the softwareshutdowntemp is 91C while
    Thotspotlimit is 105C. This seems not right and may trigger some
    false alarms.
    
    Signed-off-by: Evan Quan <evan.quan@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f84804af09c7219336a1f472a049755add2d45ce
Author: Gustavo Pimentel <Gustavo.Pimentel@synopsys.com>
Date:   Thu Aug 13 16:14:04 2020 +0200

    dmaengine: dw-edma: Fix scatter-gather address calculation
    
    commit 05655541c9503bfd01af4e6cbd7f5a29ac748e6c upstream.
    
    Fix the source and destination physical address calculation of a
    peripheral device on scatter-gather implementation.
    
    This issue manifested during tests using a 64 bits architecture system.
    The abnormal behavior wasn't visible before due to all previous tests
    were done using 32 bits architecture system, that masked his effect.
    
    Fixes: e63d79d1ffcd ("dmaengine: Add Synopsys eDMA IP core driver")
    Cc: stable@vger.kernel.org
    Signed-off-by: Gustavo Pimentel <gustavo.pimentel@synopsys.com>
    Link: https://lore.kernel.org/r/8d3ab7e2ba96563fe3495b32f60077fffb85307d.1597327623.git.gustavo.pimentel@synopsys.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f4ab0172e6c0842c46dcc099b613bc20fe30d05
Author: Tejun Heo <tj@kernel.org>
Date:   Tue Sep 1 14:52:31 2020 -0400

    blk-iocost: ioc_pd_free() shouldn't assume irq disabled
    
    commit 5aeac7c4b16069aae49005f0a8d4526baa83341b upstream.
    
    ioc_pd_free() grabs irq-safe ioc->lock without ensuring that irq is disabled
    when it can be called with irq disabled or enabled. This has a small chance
    of causing A-A deadlocks and triggers lockdep splats. Use irqsave operations
    instead.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Fixes: 7caa47151ab2 ("blkcg: implement blk-iocost")
    Cc: stable@vger.kernel.org # v5.4+
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7880745e91b77633da7f4428edf0ea3e50c4f4b
Author: Tejun Heo <tj@kernel.org>
Date:   Wed Sep 2 12:32:45 2020 -0400

    libata: implement ATA_HORKAGE_MAX_TRIM_128M and apply to Sandisks
    
    commit 3b5455636fe26ea21b4189d135a424a6da016418 upstream.
    
    All three generations of Sandisk SSDs lock up hard intermittently.
    Experiments showed that disabling NCQ lowered the failure rate significantly
    and the kernel has been disabling NCQ for some models of SD7's and 8's,
    which is obviously undesirable.
    
    Karthik worked with Sandisk to root cause the hard lockups to trim commands
    larger than 128M. This patch implements ATA_HORKAGE_MAX_TRIM_128M which
    limits max trim size to 128M and applies it to all three generations of
    Sandisk SSDs.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Karthik Shivaram <karthikgs@fb.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f5f27228195758643af9899dbce288c0227daf5
Author: Jens Axboe <axboe@kernel.dk>
Date:   Mon Aug 31 11:20:02 2020 -0600

    block: ensure bdi->io_pages is always initialized
    
    commit de1b0ee490eafdf65fac9eef9925391a8369f2dc upstream.
    
    If a driver leaves the limit settings as the defaults, then we don't
    initialize bdi->io_pages. This means that file systems may need to
    work around bdi->io_pages == 0, which is somewhat messy.
    
    Initialize the default value just like we do for ->ra_pages.
    
    Cc: stable@vger.kernel.org
    Fixes: 9491ae4aade6 ("mm: don't cap request size based on read-ahead setting")
    Reported-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84c041c12442d233c9b3c593cbe9eb8a77875578
Author: Ming Lei <ming.lei@redhat.com>
Date:   Mon Aug 17 18:00:55 2020 +0800

    block: allow for_each_bvec to support zero len bvec
    
    commit 7e24969022cbd61ddc586f14824fc205661bb124 upstream.
    
    Block layer usually doesn't support or allow zero-length bvec. Since
    commit 1bdc76aea115 ("iov_iter: use bvec iterator to implement
    iterate_bvec()"), iterate_bvec() switches to bvec iterator. However,
    Al mentioned that 'Zero-length segments are not disallowed' in iov_iter.
    
    Fixes for_each_bvec() so that it can move on after seeing one zero
    length bvec.
    
    Fixes: 1bdc76aea115 ("iov_iter: use bvec iterator to implement iterate_bvec()")
    Reported-by: syzbot <syzbot+61acc40a49a3e46e25ea@syzkaller.appspotmail.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Tested-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: <stable@vger.kernel.org>
    Link: https://www.mail-archive.com/linux-kernel@vger.kernel.org/msg2262077.html
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6e4827c04b029fefc8a6401589938aa95a7c0cb
Author: Max Staudt <max@enpas.org>
Date:   Thu Aug 27 17:49:00 2020 +0200

    affs: fix basic permission bits to actually work
    
    commit d3a84a8d0dde4e26bc084b36ffcbdc5932ac85e2 upstream.
    
    The basic permission bits (protection bits in AmigaOS) have been broken
    in Linux' AFFS - it would only set bits, but never delete them.
    Also, contrary to the documentation, the Archived bit was not handled.
    
    Let's fix this for good, and set the bits such that Linux and classic
    AmigaOS can coexist in the most peaceful manner.
    
    Also, update the documentation to represent the current state of things.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable@vger.kernel.org
    Signed-off-by: Max Staudt <max@enpas.org>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d89e44dc932525784e1f7132f4523d54c1da007
Author: Sean Young <sean@mess.org>
Date:   Sat Aug 8 13:19:12 2020 +0200

    media: rc: uevent sysfs file races with rc_unregister_device()
    
    commit 4f0835d6677dc69263f90f976524cb92b257d9f4 upstream.
    
    Only report uevent file contents if device still registered, else we
    might read freed memory.
    
    Reported-by: syzbot+ceef16277388d6f24898@syzkaller.appspotmail.com
    Cc: Hillf Danton <hdanton@sina.com>
    Cc: <stable@vger.kernel.org> # 4.16+
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5925179bbc64b3393bbea032cf8de080ac51736d
Author: Sean Young <sean@mess.org>
Date:   Sat Aug 8 13:38:02 2020 +0200

    media: rc: do not access device via sysfs after rc_unregister_device()
    
    commit a2e2d73fa28136598e84db9d021091f1b98cbb1a upstream.
    
    Device drivers do not expect to have change_protocol or wakeup
    re-programming to be accesed after rc_unregister_device(). This can
    cause the device driver to access deallocated resources.
    
    Cc: <stable@vger.kernel.org> # 4.16+
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d77c12f3040c87ae849fb84164a4b8754cde06e
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Wed Aug 19 15:18:48 2020 +0300

    mmc: sdhci-pci: Fix SDHCI_RESET_ALL for CQHCI for Intel GLK-based controllers
    
    commit df57d73276b863af1debc48546b0e59e44998a55 upstream.
    
    For Intel controllers, SDHCI_RESET_ALL resets also CQHCI registers.
    Normally, SDHCI_RESET_ALL is not used while CQHCI is enabled, but that can
    happen on the error path. e.g. if mmc_cqe_recovery() fails, mmc_blk_reset()
    is called which, for a eMMC that does not support HW Reset, will cycle the
    bus power and the driver will perform SDHCI_RESET_ALL.
    
    So whenever performing SDHCI_RESET_ALL ensure CQHCI is deactivated.
    That will force the driver to reinitialize CQHCI when it is next used.
    
    A similar change was done already for sdhci-msm, and other drivers using
    CQHCI might benefit from a similar change, if they also have CQHCI reset
    by SDHCI_RESET_ALL.
    
    Fixes: 8ee82bda230fc9 ("mmc: sdhci-pci: Add CQHCI support for Intel GLK")
    Cc: stable@vger.kernel.org # 5.4.x: 0ffa6cfbd949: mmc: cqhci: Add cqhci_deactivate()
    Cc: stable@vger.kernel.org # 5.4+
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/20200819121848.16967-1-adrian.hunter@intel.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed48704c36a845de4accb50eac833cf2965146f7
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Fri Mar 6 19:38:42 2020 +0530

    mmc: cqhci: Add cqhci_deactivate()
    
    commit 0ffa6cfbd94982e6c028a8924b06a96c1b91bed8 upstream.
    
    Host controllers can reset CQHCI either directly or as a consequence of
    host controller reset. Add cqhci_deactivate() which puts the CQHCI
    driver into a state that is consistent with that.
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Veerabhadrarao Badiganti <vbadigan@codeaurora.org>
    Link: https://lore.kernel.org/r/1583503724-13943-2-git-send-email-vbadigan@codeaurora.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a69047c01eb4eb5308ca1101b387ca990f0fce17
Author: Wenbin Mei <wenbin.mei@mediatek.com>
Date:   Fri Aug 14 09:43:44 2020 +0800

    mmc: dt-bindings: Add resets/reset-names for Mediatek MMC bindings
    
    commit 65557383191de46611dd3d6b639cbcfbade43c4a upstream.
    
    Add description for resets/reset-names.
    
    Cc: <stable@vger.kernel.org> # v5.4+
    Fixes: 966580ad236e ("mmc: mediatek: add support for MT7622 SoC")
    Signed-off-by: Wenbin Mei <wenbin.mei@mediatek.com>
    Tested-by: Frank Wunderlich <frank-w@public-files.de>
    Link: https://lore.kernel.org/r/20200814014346.6496-2-wenbin.mei@mediatek.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5876ee035ba68c46bac91ca73d917f8b0eb2be4c
Author: Wenbin Mei <wenbin.mei@mediatek.com>
Date:   Fri Aug 14 09:43:46 2020 +0800

    mmc: mediatek: add optional module reset property
    
    commit 855d388df217989fbf1f18c781ae6490dbb48e86 upstream.
    
    This patch fixs eMMC-Access on mt7622/Bpi-64.
    Before we got these Errors on mounting eMMC ion R64:
    [   48.664925] blk_update_request: I/O error, dev mmcblk0, sector 204800 op 0x1:(WRITE)
    flags 0x800 phys_seg 1 prio class 0
    [   48.676019] Buffer I/O error on dev mmcblk0p1, logical block 0, lost sync page write
    
    This patch adds a optional reset management for msdc.
    Sometimes the bootloader does not bring msdc register
    to default state, so need reset the msdc controller.
    
    Cc: <stable@vger.kernel.org> # v5.4+
    Fixes: 966580ad236e ("mmc: mediatek: add support for MT7622 SoC")
    Signed-off-by: Wenbin Mei <wenbin.mei@mediatek.com>
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Tested-by: Frank Wunderlich <frank-w@public-files.de>
    Link: https://lore.kernel.org/r/20200814014346.6496-4-wenbin.mei@mediatek.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2816ccd07145e495e82210bfd9d446dad3feb087
Author: Wenbin Mei <wenbin.mei@mediatek.com>
Date:   Fri Aug 14 09:43:45 2020 +0800

    arm64: dts: mt7622: add reset node for mmc device
    
    commit d6f6cbeee4e5ee6976792851e0461c19f1ede864 upstream.
    
    This commit adds reset node for mmc device.
    
    Cc: <stable@vger.kernel.org> # v5.4+
    Fixes: 966580ad236e ("mmc: mediatek: add support for MT7622 SoC")
    Signed-off-by: Wenbin Mei <wenbin.mei@mediatek.com>
    Tested-by: Frank Wunderlich <frank-w@public-files.de>
    Acked-by: Matthias Brugger <matthias.bgg@gmail.com>
    Link: https://lore.kernel.org/r/20200814014346.6496-3-wenbin.mei@mediatek.com
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d074d9d52fe058e3abc827cc768bae18f5551d9a
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Sep 3 10:33:00 2020 +0200

    ALSA: hda/realtek - Improved routing for Thinkpad X1 7th/8th Gen
    
    commit 6a6660d049f88b89fd9a4b9db3581b245f7782fa upstream.
    
    There've been quite a few regression reports about the lowered volume
    (reduced to ca 65% from the previous level) on Lenovo Thinkpad X1
    after the commit d2cd795c4ece ("ALSA: hda - fixup for the bass speaker
    on Lenovo Carbon X1 7th gen").  Although the commit itself does the
    right thing from HD-audio POV in order to have a volume control for
    bass speakers, it seems that the machine has some secret recipe under
    the hood.
    
    Through experiments, Benjamin Poirier found out that the following
    routing gives the best result:
    * DAC1 (NID 0x02) -> Speaker pin (NID 0x14)
    * DAC2 (NID 0x03) -> Shared by both Bass Speaker pin (NID 0x17) &
                         Headphone pin (0x21)
    * DAC3 (NID 0x06) -> Unused
    
    DAC1 seems to have some equalizer internally applied, and you'd get
    again the output in a bad quality if you connect this to the
    headphone pin.  Hence the headphone is connected to DAC2, which is now
    shared with the bass speaker pin.  DAC3 has no volume amp, hence it's
    not connected at all.
    
    For achieving the routing above, this patch introduced a couple of
    workarounds:
    
    * The connection list of bass speaker pin (NID 0x17) is reduced not to
      include DAC3 (NID 0x06)
    * Pass preferred_pairs array to specify the fixed connection
    
    Here, both workarounds are needed because the generic parser prefers
    the individual DAC assignment over others.
    
    When the routing above is applied, the generic parser creates the two
    volume controls "Front" and "Bass Speaker".  Since we have only two
    DACs for three output pins, those are not fully controlling each
    output individually, and it would confuse PulseAudio.  For avoiding
    the pitfall, in this patch, we rename those volume controls to some
    unique ones ("DAC1" and "DAC2").  Then PulseAudio ignore them and
    concentrate only on the still good-working "Master" volume control.
    If a user still wants to control each DAC volume, they can still
    change manually via "DAC1" and "DAC2" volume controls.
    
    Fixes: d2cd795c4ece ("ALSA: hda - fixup for the bass speaker on Lenovo Carbon X1 7th gen")
    Reported-by: Benjamin Poirier <benjamin.poirier@gmail.com>
    Reviewed-by: Jaroslav Kysela <perex@perex.cz>
    Tested-by: Benjamin Poirier <benjamin.poirier@gmail.com>
    Cc: <stable@vger.kernel.org>
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=207407#c10
    BugLink: https://gist.github.com/hamidzr/dd81e429dc86f4327ded7a2030e7d7d9#gistcomment-3214171
    BugLink: https://gist.github.com/hamidzr/dd81e429dc86f4327ded7a2030e7d7d9#gistcomment-3276276
    Link: https://lore/kernel.org/r/20200829112746.3118-1-benjamin.poirier@gmail.com
    Link: https://lore.kernel.org/r/20200903083300.6333-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7de2f56ef51aad17d0f6ee8af8c6ec013c8034f2
Author: Adrien Crivelli <adrien.crivelli@gmail.com>
Date:   Wed Aug 26 17:40:14 2020 +0900

    ALSA: hda/realtek: Add quirk for Samsung Galaxy Book Ion NT950XCJ-X716A
    
    commit 8bcea6cb2cbc1f749e574954569323dec5e2920e upstream.
    
    The Galaxy Book Ion NT950XCJ-X716A (15 inches) uses the same ALC298
    codec as other Samsung laptops which have the no headphone sound bug. I
    confirmed on my own hardware that this fixes the bug.
    
    This also correct the model name for the 13 inches version. It was
    incorrectly referenced as NT950XCJ-X716A in commit e17f02d05. But it
    should have been NP930XCJ-K01US.
    
    Fixes: e17f02d0559c ("ALSA: hda/realtek: Add quirk for Samsung Galaxy Book Ion")
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=207423
    Signed-off-by: Adrien Crivelli <adrien.crivelli@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200826084014.211217-1-adrien.crivelli@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a253fe35666d62624014a9f5a70797760a0c9482
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Aug 23 16:55:37 2020 +0900

    ALSA; firewire-tascam: exclude Tascam FE-8 from detection
    
    commit 0bd8bce897b6697bbc286b8ba473aa0705fe394b upstream.
    
    Tascam FE-8 is known to support communication by asynchronous transaction
    only. The support can be implemented in userspace application and
    snd-firewire-ctl-services project has the support. However, ALSA
    firewire-tascam driver is bound to the model.
    
    This commit changes device entries so that the model is excluded. In a
    commit 53b3ffee7885 ("ALSA: firewire-tascam: change device probing
    processing"), I addressed to the concern that version field in
    configuration differs depending on installed firmware. However, as long
    as I checked, the version number is fixed. It's safe to return version
    number back to modalias.
    
    Fixes: 53b3ffee7885 ("ALSA: firewire-tascam: change device probing processing")
    Cc: <stable@vger.kernel.org> # 4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20200823075537.56255-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 982505615063873a896efce767c996792c3db00c
Author: Dan Crawford <dnlcrwfrd@gmail.com>
Date:   Sat Aug 29 12:49:46 2020 +1000

    ALSA: hda - Fix silent audio output and corrupted input on MSI X570-A PRO
    
    commit 15cbff3fbbc631952c346744f862fb294504b5e2 upstream.
    
    Following Christian Lachner's patch for Gigabyte X570-based motherboards,
    also patch the MSI X570-A PRO motherboard; the ALC1220 codec requires the
    same workaround for Clevo laptops to enforce the DAC/mixer connection
    path. Set up a quirk entry for that.
    
    I suspect most if all X570 motherboards will require similar patches.
    
    [ The entries reordered in the SSID order -- tiwai ]
    
    Related buglink: https://bugzilla.kernel.org/show_bug.cgi?id=205275
    Signed-off-by: Dan Crawford <dnlcrwfrd@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200829024946.5691-1-dnlcrwfrd@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cebaed03303747867a009866542a3213150e0cd7
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Sun Aug 23 16:55:45 2020 +0900

    ALSA: firewire-digi00x: exclude Avid Adrenaline from detection
    
    commit acd46a6b6de88569654567810acad2b0a0a25cea upstream.
    
    Avid Adrenaline is reported that ALSA firewire-digi00x driver is bound to.
    However, as long as he investigated, the design of this model is hardly
    similar to the one of Digi 00x family. It's better to exclude the model
    from modalias of ALSA firewire-digi00x driver.
    
    This commit changes device entries so that the model is excluded.
    
    $ python3 crpp < ~/git/am-config-rom/misc/avid-adrenaline.img
                   ROM header and bus information block
                   -----------------------------------------------------------------
    400  04203a9c  bus_info_length 4, crc_length 32, crc 15004
    404  31333934  bus_name "1394"
    408  e064a002  irmc 1, cmc 1, isc 1, bmc 0, cyc_clk_acc 100, max_rec 10 (2048)
    40c  00a07e01  company_id 00a07e     |
    410  00085257  device_id 0100085257  | EUI-64 00a07e0100085257
    
                   root directory
                   -----------------------------------------------------------------
    414  0005d08c  directory_length 5, crc 53388
    418  0300a07e  vendor
    41c  8100000c  --> descriptor leaf at 44c
    420  0c008380  node capabilities
    424  8d000002  --> eui-64 leaf at 42c
    428  d1000004  --> unit directory at 438
    
                   eui-64 leaf at 42c
                   -----------------------------------------------------------------
    42c  0002410f  leaf_length 2, crc 16655
    430  00a07e01  company_id 00a07e     |
    434  00085257  device_id 0100085257  | EUI-64 00a07e0100085257
    
                   unit directory at 438
                   -----------------------------------------------------------------
    438  0004d6c9  directory_length 4, crc 54985
    43c  1200a02d  specifier id: 1394 TA
    440  13014001  version: Vender Unique and AV/C
    444  17000001  model
    448  81000009  --> descriptor leaf at 46c
    
                   descriptor leaf at 44c
                   -----------------------------------------------------------------
    44c  00077205  leaf_length 7, crc 29189
    450  00000000  textual descriptor
    454  00000000  minimal ASCII
    458  41766964  "Avid"
    45c  20546563  " Tec"
    460  686e6f6c  "hnol"
    464  6f677900  "ogy"
    468  00000000
    
                   descriptor leaf at 46c
                   -----------------------------------------------------------------
    46c  000599a5  leaf_length 5, crc 39333
    470  00000000  textual descriptor
    474  00000000  minimal ASCII
    478  41647265  "Adre"
    47c  6e616c69  "nali"
    480  6e650000  "ne"
    
    Reported-by: Simon Wood <simon@mungewell.org>
    Fixes: 9edf723fd858 ("ALSA: firewire-digi00x: add skeleton for Digi 002/003 family")
    Cc: <stable@vger.kernel.org> # 4.4+
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Link: https://lore.kernel.org/r/20200823075545.56305-1-o-takashi@sakamocchi.jp
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fa06a43bf9f546314e44bbc27a096d792ca6be0
Author: Kai Vehmanen <kai.vehmanen@linux.intel.com>
Date:   Wed Aug 26 20:03:06 2020 +0300

    ALSA: hda/hdmi: always check pin power status in i915 pin fixup
    
    commit 858e0ad9301d1270c02b5aca97537d2d6ee9dd68 upstream.
    
    When system is suspended with active audio playback to HDMI/DP, two
    alternative sequences can happen at resume:
      a) monitor is detected first and ALSA prepare follows normal
         stream setup sequence, or
      b) ALSA prepare is called first, but monitor is not yet detected,
         so PCM is restarted without a pin,
    
    In case of (b), on i915 systems, haswell_verify_D0() is not called at
    resume and the pin power state may be incorrect. Result is lack of audio
    after resume with no error reported back to user-space.
    
    Fix the problem by always verifying converter and pin state in the
    i915_pin_cvt_fixup().
    
    BugLink: https://github.com/thesofproject/linux/issues/2388
    Signed-off-by: Kai Vehmanen <kai.vehmanen@linux.intel.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200826170306.701566-1-kai.vehmanen@linux.intel.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ebb83a259a83962396d9788c6e846865ae90c31
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Sep 1 15:18:02 2020 +0200

    ALSA: pcm: oss: Remove superfluous WARN_ON() for mulaw sanity check
    
    commit 949a1ebe8cea7b342085cb6a4946b498306b9493 upstream.
    
    The PCM OSS mulaw plugin has a check of the format of the counter part
    whether it's a linear format.  The check is with snd_BUG_ON() that
    emits WARN_ON() when the debug config is set, and it confuses
    syzkaller as if it were a serious issue.  Let's drop snd_BUG_ON() for
    avoiding that.
    
    While we're at it, correct the error code to a more suitable, EINVAL.
    
    Reported-by: syzbot+23b22dc2e0b81cbfcc95@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200901131802.18157-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79124b1b912c9034ce8465ccf2b70fa37cf67019
Author: Joshua Sivec <sivec@posteo.net>
Date:   Tue Aug 25 18:55:18 2020 +0200

    ALSA: usb-audio: Add implicit feedback quirk for UR22C
    
    commit 7c5b892e0871655fea3294ffac6fa3cc3400b60d upstream.
    
    This uses the same quirk as the Motu and SSL2 devices.
    Tested on the UR22C.
    
    Fixes bug 208851.
    
    Signed-off-by: Joshua Sivec <sivec@posteo.net>
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=208851
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200825165515.8239-1-sivec@posteo.net
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3b94af5117bbbb2628be6d7df14cea805c5bf9b
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Mon Aug 24 18:45:41 2020 -0400

    ALSA: ca0106: fix error code handling
    
    commit ee0761d1d8222bcc5c86bf10849dc86cf008557c upstream.
    
    snd_ca0106_spi_write() returns 1 on error, snd_ca0106_pcm_power_dac()
    is returning the error code directly, and the caller is expecting an
    negative error code
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20200824224541.1260307-1-ztong0001@gmail.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 156dd7c73a9b0b16ced888a0c6abd6255a14ca8f
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Tue Aug 25 17:39:48 2020 +0800

    Revert "ALSA: hda: Add support for Loongson 7A1000 controller"
    
    commit eed8f88b109aa927fbf0d0c80ff9f8d00444ca7f upstream.
    
    This reverts commit 61eee4a7fc40 ("ALSA: hda: Add support for Loongson
    7A1000 controller") to fix the following error on the Loongson LS7A
    platform:
    
    rcu: INFO: rcu_preempt self-detected stall on CPU
    <SNIP>
    NMI backtrace for cpu 0
    CPU: 0 PID: 68 Comm: kworker/0:2 Not tainted 5.8.0+ #3
    Hardware name:  , BIOS
    Workqueue: events azx_probe_work [snd_hda_intel]
    <SNIP>
    Call Trace:
    [<ffffffff80211a64>] show_stack+0x9c/0x130
    [<ffffffff8065a740>] dump_stack+0xb0/0xf0
    [<ffffffff80665774>] nmi_cpu_backtrace+0x134/0x140
    [<ffffffff80665910>] nmi_trigger_cpumask_backtrace+0x190/0x200
    [<ffffffff802b1abc>] rcu_dump_cpu_stacks+0x12c/0x190
    [<ffffffff802b08cc>] rcu_sched_clock_irq+0xa2c/0xfc8
    [<ffffffff802b91d4>] update_process_times+0x2c/0xb8
    [<ffffffff802cad80>] tick_sched_timer+0x40/0xb8
    [<ffffffff802ba5f0>] __hrtimer_run_queues+0x118/0x1d0
    [<ffffffff802bab74>] hrtimer_interrupt+0x12c/0x2d8
    [<ffffffff8021547c>] c0_compare_interrupt+0x74/0xa0
    [<ffffffff80296bd0>] __handle_irq_event_percpu+0xa8/0x198
    [<ffffffff80296cf0>] handle_irq_event_percpu+0x30/0x90
    [<ffffffff8029d958>] handle_percpu_irq+0x88/0xb8
    [<ffffffff80296124>] generic_handle_irq+0x44/0x60
    [<ffffffff80b3cfd0>] do_IRQ+0x18/0x28
    [<ffffffff8067ace4>] plat_irq_dispatch+0x64/0x100
    [<ffffffff80209a20>] handle_int+0x140/0x14c
    [<ffffffff802402e8>] irq_exit+0xf8/0x100
    
    Because AZX_DRIVER_GENERIC can not work well for Loongson LS7A HDA
    controller, it needs some workarounds which are not merged into the
    upstream kernel at this time, so it should revert this patch now.
    
    Fixes: 61eee4a7fc40 ("ALSA: hda: Add support for Loongson 7A1000 controller")
    Cc: <stable@vger.kernel.org> # 5.9-rc1+
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Link: https://lore.kernel.org/r/1598348388-2518-1-git-send-email-yangtiezhu@loongson.cn
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62db427bf8ca6b77c74f5f554496762606552754
Author: Sasha Levin <sashal@kernel.org>
Date:   Mon Sep 7 14:28:39 2020 -0400

    Revert "net: dsa: microchip: set the correct number of ports"
    
    This reverts commit d55dad8b1d893fae0c4e778abf2ace048bcbad86.
    
    Upstream commit af199a1a9cb0 ("net: dsa: microchip: set the correct
    number of ports") seems to have been applied twice on top of the 5.4
    branch. This revert the second instance of said commit.
    
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4254a4f7988c5b0f2158c16764ed308ef2cc5f7a
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Aug 10 11:42:27 2020 -0400

    btrfs: fix potential deadlock in the search ioctl
    
    [ Upstream commit a48b73eca4ceb9b8a4b97f290a065335dbcd8a04 ]
    
    With the conversion of the tree locks to rwsem I got the following
    lockdep splat:
    
      ======================================================
      WARNING: possible circular locking dependency detected
      5.8.0-rc7-00165-g04ec4da5f45f-dirty #922 Not tainted
      ------------------------------------------------------
      compsize/11122 is trying to acquire lock:
      ffff889fabca8768 (&mm->mmap_lock#2){++++}-{3:3}, at: __might_fault+0x3e/0x90
    
      but task is already holding lock:
      ffff889fe720fe40 (btrfs-fs-00){++++}-{3:3}, at: __btrfs_tree_read_lock+0x39/0x180
    
      which lock already depends on the new lock.
    
      the existing dependency chain (in reverse order) is:
    
      -> #2 (btrfs-fs-00){++++}-{3:3}:
             down_write_nested+0x3b/0x70
             __btrfs_tree_lock+0x24/0x120
             btrfs_search_slot+0x756/0x990
             btrfs_lookup_inode+0x3a/0xb4
             __btrfs_update_delayed_inode+0x93/0x270
             btrfs_async_run_delayed_root+0x168/0x230
             btrfs_work_helper+0xd4/0x570
             process_one_work+0x2ad/0x5f0
             worker_thread+0x3a/0x3d0
             kthread+0x133/0x150
             ret_from_fork+0x1f/0x30
    
      -> #1 (&delayed_node->mutex){+.+.}-{3:3}:
             __mutex_lock+0x9f/0x930
             btrfs_delayed_update_inode+0x50/0x440
             btrfs_update_inode+0x8a/0xf0
             btrfs_dirty_inode+0x5b/0xd0
             touch_atime+0xa1/0xd0
             btrfs_file_mmap+0x3f/0x60
             mmap_region+0x3a4/0x640
             do_mmap+0x376/0x580
             vm_mmap_pgoff+0xd5/0x120
             ksys_mmap_pgoff+0x193/0x230
             do_syscall_64+0x50/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #0 (&mm->mmap_lock#2){++++}-{3:3}:
             __lock_acquire+0x1272/0x2310
             lock_acquire+0x9e/0x360
             __might_fault+0x68/0x90
             _copy_to_user+0x1e/0x80
             copy_to_sk.isra.32+0x121/0x300
             search_ioctl+0x106/0x200
             btrfs_ioctl_tree_search_v2+0x7b/0xf0
             btrfs_ioctl+0x106f/0x30a0
             ksys_ioctl+0x83/0xc0
             __x64_sys_ioctl+0x16/0x20
             do_syscall_64+0x50/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      other info that might help us debug this:
    
      Chain exists of:
        &mm->mmap_lock#2 --> &delayed_node->mutex --> btrfs-fs-00
    
       Possible unsafe locking scenario:
    
             CPU0                    CPU1
             ----                    ----
        lock(btrfs-fs-00);
                                     lock(&delayed_node->mutex);
                                     lock(btrfs-fs-00);
        lock(&mm->mmap_lock#2);
    
       *** DEADLOCK ***
    
      1 lock held by compsize/11122:
       #0: ffff889fe720fe40 (btrfs-fs-00){++++}-{3:3}, at: __btrfs_tree_read_lock+0x39/0x180
    
      stack backtrace:
      CPU: 17 PID: 11122 Comm: compsize Kdump: loaded Not tainted 5.8.0-rc7-00165-g04ec4da5f45f-dirty #922
      Hardware name: Quanta Tioga Pass Single Side 01-0030993006/Tioga Pass Single Side, BIOS F08_3A18 12/20/2018
      Call Trace:
       dump_stack+0x78/0xa0
       check_noncircular+0x165/0x180
       __lock_acquire+0x1272/0x2310
       lock_acquire+0x9e/0x360
       ? __might_fault+0x3e/0x90
       ? find_held_lock+0x72/0x90
       __might_fault+0x68/0x90
       ? __might_fault+0x3e/0x90
       _copy_to_user+0x1e/0x80
       copy_to_sk.isra.32+0x121/0x300
       ? btrfs_search_forward+0x2a6/0x360
       search_ioctl+0x106/0x200
       btrfs_ioctl_tree_search_v2+0x7b/0xf0
       btrfs_ioctl+0x106f/0x30a0
       ? __do_sys_newfstat+0x5a/0x70
       ? ksys_ioctl+0x83/0xc0
       ksys_ioctl+0x83/0xc0
       __x64_sys_ioctl+0x16/0x20
       do_syscall_64+0x50/0x90
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    The problem is we're doing a copy_to_user() while holding tree locks,
    which can deadlock if we have to do a page fault for the copy_to_user().
    This exists even without my locking changes, so it needs to be fixed.
    Rework the search ioctl to do the pre-fault and then
    copy_to_user_nofault for the copying.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de53545e8d4c145773da033b331581b7cbcc15da
Author: Alexander Lobakin <alobakin@dlink.ru>
Date:   Mon Oct 14 11:00:33 2019 +0300

    net: core: use listified Rx for GRO_NORMAL in napi_gro_receive()
    
    commit 6570bc79c0dfff0f228b7afd2de720fb4e84d61d upstream.
    
    Commit 323ebb61e32b4 ("net: use listified RX for handling GRO_NORMAL
    skbs") made use of listified skb processing for the users of
    napi_gro_frags().
    The same technique can be used in a way more common napi_gro_receive()
    to speed up non-merged (GRO_NORMAL) skbs for a wide range of drivers
    including gro_cells and mac80211 users.
    This slightly changes the return value in cases where skb is being
    dropped by the core stack, but it seems to have no impact on related
    drivers' functionality.
    gro_normal_batch is left untouched as it's very individual for every
    single system configuration and might be tuned in manual order to
    achieve an optimal performance.
    
    Signed-off-by: Alexander Lobakin <alobakin@dlink.ru>
    Acked-by: Edward Cree <ecree@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Hyunsoon Kim <h10.kim@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit df0c47585cead12664815214eb1473d42de89f64
Author: Qu Wenruo <wqu@suse.com>
Date:   Tue Aug 25 21:42:51 2020 +0800

    btrfs: tree-checker: fix the error message for transid error
    
    commit f96d6960abbc52e26ad124e69e6815283d3e1674 upstream.
    
    The error message for inode transid is the same as for inode generation,
    which makes us unable to detect the real problem.
    
    Reported-by: Tyler Richmond <t.d.richmond@gmail.com>
    Fixes: 496245cac57e ("btrfs: tree-checker: Verify inode item")
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Marcos Paulo de Souza <mpdesouza@suse.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 650275310f3b46bac81f7bf1591ee3c5718128ed
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Aug 10 11:42:31 2020 -0400

    btrfs: set the lockdep class for log tree extent buffers
    
    commit d3beaa253fd6fa40b8b18a216398e6e5376a9d21 upstream.
    
    These are special extent buffers that get rewound in order to lookup
    the state of the tree at a specific point in time.  As such they do not
    go through the normal initialization paths that set their lockdep class,
    so handle them appropriately when they are created and before they are
    locked.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e0ffb0d9d9f8dd7e6fbf52780695094c566b545
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Aug 10 11:42:30 2020 -0400

    btrfs: set the correct lockdep class for new nodes
    
    commit ad24466588ab7d7c879053c5afd919b0c555fec0 upstream.
    
    When flipping over to the rw_semaphore I noticed I'd get a lockdep splat
    in replace_path(), which is weird because we're swapping the reloc root
    with the actual target root.  Turns out this is because we're using the
    root->root_key.objectid as the root id for the newly allocated tree
    block when setting the lockdep class, however we need to be using the
    actual owner of this new block, which is saved in owner.
    
    The affected path is through btrfs_copy_root as all other callers of
    btrfs_alloc_tree_block (which calls init_new_buffer) have root_objectid
    == root->root_key.objectid .
    
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c37cc199da2b48c1e5f0c7ea65a651c4e5b50b33
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Aug 10 11:42:29 2020 -0400

    btrfs: allocate scrub workqueues outside of locks
    
    commit e89c4a9c8e6ce3a84cab4f342687d3fbbb1234eb upstream.
    
    I got the following lockdep splat while testing:
    
      ======================================================
      WARNING: possible circular locking dependency detected
      5.8.0-rc7-00172-g021118712e59 #932 Not tainted
      ------------------------------------------------------
      btrfs/229626 is trying to acquire lock:
      ffffffff828513f0 (cpu_hotplug_lock){++++}-{0:0}, at: alloc_workqueue+0x378/0x450
    
      but task is already holding lock:
      ffff889dd3889518 (&fs_info->scrub_lock){+.+.}-{3:3}, at: btrfs_scrub_dev+0x11c/0x630
    
      which lock already depends on the new lock.
    
      the existing dependency chain (in reverse order) is:
    
      -> #7 (&fs_info->scrub_lock){+.+.}-{3:3}:
             __mutex_lock+0x9f/0x930
             btrfs_scrub_dev+0x11c/0x630
             btrfs_dev_replace_by_ioctl.cold.21+0x10a/0x1d4
             btrfs_ioctl+0x2799/0x30a0
             ksys_ioctl+0x83/0xc0
             __x64_sys_ioctl+0x16/0x20
             do_syscall_64+0x50/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #6 (&fs_devs->device_list_mutex){+.+.}-{3:3}:
             __mutex_lock+0x9f/0x930
             btrfs_run_dev_stats+0x49/0x480
             commit_cowonly_roots+0xb5/0x2a0
             btrfs_commit_transaction+0x516/0xa60
             sync_filesystem+0x6b/0x90
             generic_shutdown_super+0x22/0x100
             kill_anon_super+0xe/0x30
             btrfs_kill_super+0x12/0x20
             deactivate_locked_super+0x29/0x60
             cleanup_mnt+0xb8/0x140
             task_work_run+0x6d/0xb0
             __prepare_exit_to_usermode+0x1cc/0x1e0
             do_syscall_64+0x5c/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #5 (&fs_info->tree_log_mutex){+.+.}-{3:3}:
             __mutex_lock+0x9f/0x930
             btrfs_commit_transaction+0x4bb/0xa60
             sync_filesystem+0x6b/0x90
             generic_shutdown_super+0x22/0x100
             kill_anon_super+0xe/0x30
             btrfs_kill_super+0x12/0x20
             deactivate_locked_super+0x29/0x60
             cleanup_mnt+0xb8/0x140
             task_work_run+0x6d/0xb0
             __prepare_exit_to_usermode+0x1cc/0x1e0
             do_syscall_64+0x5c/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #4 (&fs_info->reloc_mutex){+.+.}-{3:3}:
             __mutex_lock+0x9f/0x930
             btrfs_record_root_in_trans+0x43/0x70
             start_transaction+0xd1/0x5d0
             btrfs_dirty_inode+0x42/0xd0
             touch_atime+0xa1/0xd0
             btrfs_file_mmap+0x3f/0x60
             mmap_region+0x3a4/0x640
             do_mmap+0x376/0x580
             vm_mmap_pgoff+0xd5/0x120
             ksys_mmap_pgoff+0x193/0x230
             do_syscall_64+0x50/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #3 (&mm->mmap_lock#2){++++}-{3:3}:
             __might_fault+0x68/0x90
             _copy_to_user+0x1e/0x80
             perf_read+0x141/0x2c0
             vfs_read+0xad/0x1b0
             ksys_read+0x5f/0xe0
             do_syscall_64+0x50/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      -> #2 (&cpuctx_mutex){+.+.}-{3:3}:
             __mutex_lock+0x9f/0x930
             perf_event_init_cpu+0x88/0x150
             perf_event_init+0x1db/0x20b
             start_kernel+0x3ae/0x53c
             secondary_startup_64+0xa4/0xb0
    
      -> #1 (pmus_lock){+.+.}-{3:3}:
             __mutex_lock+0x9f/0x930
             perf_event_init_cpu+0x4f/0x150
             cpuhp_invoke_callback+0xb1/0x900
             _cpu_up.constprop.26+0x9f/0x130
             cpu_up+0x7b/0xc0
             bringup_nonboot_cpus+0x4f/0x60
             smp_init+0x26/0x71
             kernel_init_freeable+0x110/0x258
             kernel_init+0xa/0x103
             ret_from_fork+0x1f/0x30
    
      -> #0 (cpu_hotplug_lock){++++}-{0:0}:
             __lock_acquire+0x1272/0x2310
             lock_acquire+0x9e/0x360
             cpus_read_lock+0x39/0xb0
             alloc_workqueue+0x378/0x450
             __btrfs_alloc_workqueue+0x15d/0x200
             btrfs_alloc_workqueue+0x51/0x160
             scrub_workers_get+0x5a/0x170
             btrfs_scrub_dev+0x18c/0x630
             btrfs_dev_replace_by_ioctl.cold.21+0x10a/0x1d4
             btrfs_ioctl+0x2799/0x30a0
             ksys_ioctl+0x83/0xc0
             __x64_sys_ioctl+0x16/0x20
             do_syscall_64+0x50/0x90
             entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      other info that might help us debug this:
    
      Chain exists of:
        cpu_hotplug_lock --> &fs_devs->device_list_mutex --> &fs_info->scrub_lock
    
       Possible unsafe locking scenario:
    
             CPU0                    CPU1
             ----                    ----
        lock(&fs_info->scrub_lock);
                                     lock(&fs_devs->device_list_mutex);
                                     lock(&fs_info->scrub_lock);
        lock(cpu_hotplug_lock);
    
       *** DEADLOCK ***
    
      2 locks held by btrfs/229626:
       #0: ffff88bfe8bb86e0 (&fs_devs->device_list_mutex){+.+.}-{3:3}, at: btrfs_scrub_dev+0xbd/0x630
       #1: ffff889dd3889518 (&fs_info->scrub_lock){+.+.}-{3:3}, at: btrfs_scrub_dev+0x11c/0x630
    
      stack backtrace:
      CPU: 15 PID: 229626 Comm: btrfs Kdump: loaded Not tainted 5.8.0-rc7-00172-g021118712e59 #932
      Hardware name: Quanta Tioga Pass Single Side 01-0030993006/Tioga Pass Single Side, BIOS F08_3A18 12/20/2018
      Call Trace:
       dump_stack+0x78/0xa0
       check_noncircular+0x165/0x180
       __lock_acquire+0x1272/0x2310
       lock_acquire+0x9e/0x360
       ? alloc_workqueue+0x378/0x450
       cpus_read_lock+0x39/0xb0
       ? alloc_workqueue+0x378/0x450
       alloc_workqueue+0x378/0x450
       ? rcu_read_lock_sched_held+0x52/0x80
       __btrfs_alloc_workqueue+0x15d/0x200
       btrfs_alloc_workqueue+0x51/0x160
       scrub_workers_get+0x5a/0x170
       btrfs_scrub_dev+0x18c/0x630
       ? start_transaction+0xd1/0x5d0
       btrfs_dev_replace_by_ioctl.cold.21+0x10a/0x1d4
       btrfs_ioctl+0x2799/0x30a0
       ? do_sigaction+0x102/0x250
       ? lockdep_hardirqs_on_prepare+0xca/0x160
       ? _raw_spin_unlock_irq+0x24/0x30
       ? trace_hardirqs_on+0x1c/0xe0
       ? _raw_spin_unlock_irq+0x24/0x30
       ? do_sigaction+0x102/0x250
       ? ksys_ioctl+0x83/0xc0
       ksys_ioctl+0x83/0xc0
       __x64_sys_ioctl+0x16/0x20
       do_syscall_64+0x50/0x90
       entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    This happens because we're allocating the scrub workqueues under the
    scrub and device list mutex, which brings in a whole host of other
    dependencies.
    
    Because the work queue allocation is done with GFP_KERNEL, it can
    trigger reclaim, which can lead to a transaction commit, which in turns
    needs the device_list_mutex, it can lead to a deadlock. A different
    problem for which this fix is a solution.
    
    Fix this by moving the actual allocation outside of the
    scrub lock, and then only take the lock once we're ready to actually
    assign them to the fs_info.  We'll now have to cleanup the workqueues in
    a few more places, so I've added a helper to do the refcount dance to
    safely free the workqueues.
    
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb29635ba68a14c7125935248f4aa9d05e5198c3
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Aug 10 11:42:26 2020 -0400

    btrfs: drop path before adding new uuid tree entry
    
    commit 9771a5cf937129307d9f58922d60484d58ababe7 upstream.
    
    With the conversion of the tree locks to rwsem I got the following
    lockdep splat:
    
      ======================================================
      WARNING: possible circular locking dependency detected
      5.8.0-rc7-00167-g0d7ba0c5b375-dirty #925 Not tainted
      ------------------------------------------------------
      btrfs-uuid/7955 is trying to acquire lock:
      ffff88bfbafec0f8 (btrfs-root-00){++++}-{3:3}, at: __btrfs_tree_read_lock+0x39/0x180
    
      but task is already holding lock:
      ffff88bfbafef2a8 (btrfs-uuid-00){++++}-{3:3}, at: __btrfs_tree_read_lock+0x39/0x180
    
      which lock already depends on the new lock.
    
      the existing dependency chain (in reverse order) is:
    
      -> #1 (btrfs-uuid-00){++++}-{3:3}:
             down_read_nested+0x3e/0x140
             __btrfs_tree_read_lock+0x39/0x180
             __btrfs_read_lock_root_node+0x3a/0x50
             btrfs_search_slot+0x4bd/0x990
             btrfs_uuid_tree_add+0x89/0x2d0
             btrfs_uuid_scan_kthread+0x330/0x390
             kthread+0x133/0x150
             ret_from_fork+0x1f/0x30
    
      -> #0 (btrfs-root-00){++++}-{3:3}:
             __lock_acquire+0x1272/0x2310
             lock_acquire+0x9e/0x360
             down_read_nested+0x3e/0x140
             __btrfs_tree_read_lock+0x39/0x180
             __btrfs_read_lock_root_node+0x3a/0x50
             btrfs_search_slot+0x4bd/0x990
             btrfs_find_root+0x45/0x1b0
             btrfs_read_tree_root+0x61/0x100
             btrfs_get_root_ref.part.50+0x143/0x630
             btrfs_uuid_tree_iterate+0x207/0x314
             btrfs_uuid_rescan_kthread+0x12/0x50
             kthread+0x133/0x150
             ret_from_fork+0x1f/0x30
    
      other info that might help us debug this:
    
       Possible unsafe locking scenario:
    
             CPU0                    CPU1
             ----                    ----
        lock(btrfs-uuid-00);
                                     lock(btrfs-root-00);
                                     lock(btrfs-uuid-00);
        lock(btrfs-root-00);
    
       *** DEADLOCK ***
    
      1 lock held by btrfs-uuid/7955:
       #0: ffff88bfbafef2a8 (btrfs-uuid-00){++++}-{3:3}, at: __btrfs_tree_read_lock+0x39/0x180
    
      stack backtrace:
      CPU: 73 PID: 7955 Comm: btrfs-uuid Kdump: loaded Not tainted 5.8.0-rc7-00167-g0d7ba0c5b375-dirty #925
      Hardware name: Quanta Tioga Pass Single Side 01-0030993006/Tioga Pass Single Side, BIOS F08_3A18 12/20/2018
      Call Trace:
       dump_stack+0x78/0xa0
       check_noncircular+0x165/0x180
       __lock_acquire+0x1272/0x2310
       lock_acquire+0x9e/0x360
       ? __btrfs_tree_read_lock+0x39/0x180
       ? btrfs_root_node+0x1c/0x1d0
       down_read_nested+0x3e/0x140
       ? __btrfs_tree_read_lock+0x39/0x180
       __btrfs_tree_read_lock+0x39/0x180
       __btrfs_read_lock_root_node+0x3a/0x50
       btrfs_search_slot+0x4bd/0x990
       btrfs_find_root+0x45/0x1b0
       btrfs_read_tree_root+0x61/0x100
       btrfs_get_root_ref.part.50+0x143/0x630
       btrfs_uuid_tree_iterate+0x207/0x314
       ? btree_readpage+0x20/0x20
       btrfs_uuid_rescan_kthread+0x12/0x50
       kthread+0x133/0x150
       ? kthread_create_on_node+0x60/0x60
       ret_from_fork+0x1f/0x30
    
    This problem exists because we have two different rescan threads,
    btrfs_uuid_scan_kthread which creates the uuid tree, and
    btrfs_uuid_tree_iterate that goes through and updates or deletes any out
    of date roots.  The problem is they both do things in different order.
    btrfs_uuid_scan_kthread() reads the tree_root, and then inserts entries
    into the uuid_root.  btrfs_uuid_tree_iterate() scans the uuid_root, but
    then does a btrfs_get_fs_root() which can read from the tree_root.
    
    It's actually easy enough to not be holding the path in
    btrfs_uuid_scan_kthread() when we add a uuid entry, as we already drop
    it further down and re-start the search when we loop.  So simply move
    the path release before we add our entry to the uuid tree.
    
    This also fixes a problem where we're holding a path open after we do
    btrfs_end_transaction(), which has it's own problems.
    
    CC: stable@vger.kernel.org # 4.4+
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20b591fd00c0cc94bb0cb2faefce997c42cbbe78
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Sun Jul 26 21:51:59 2020 -0700

    ARC: perf: don't bail setup if pct irq missing in device-tree
    
    commit feb92d7d3813456c11dce215b3421801a78a8986 upstream.
    
    Current code inadventely bails if hardware supports sampling/overflow
    interrupts, but the irq is missing from device tree.
    
    |
    | # perf stat -e cycles,instructions,major-faults,minor-faults ../hackbench
    | Running with 10 groups 400 process
    | Time: 0.921
    |
    | Performance counter stats for '../hackbench':
    |
    |   <not supported>      cycles
    |   <not supported>      instructions
    |                 0      major-faults
    |              8679      minor-faults
    
    This need not be as we can still do simple counting based perf stat.
    This unborks perf on HSDK-4xD
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce690fa1d5d059e494c63423247ee21f62afbbc6
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sat Sep 5 08:13:02 2020 -0400

    xfs: don't update mtime on COW faults
    
    commit b17164e258e3888d376a7434415013175d637377 upstream.
    
    When running in a dax mode, if the user maps a page with MAP_PRIVATE and
    PROT_WRITE, the xfs filesystem would incorrectly update ctime and mtime
    when the user hits a COW fault.
    
    This breaks building of the Linux kernel.  How to reproduce:
    
     1. extract the Linux kernel tree on dax-mounted xfs filesystem
     2. run make clean
     3. run make -j12
     4. run make -j12
    
    at step 4, make would incorrectly rebuild the whole kernel (although it
    was already built in step 3).
    
    The reason for the breakage is that almost all object files depend on
    objtool.  When we run objtool, it takes COW page fault on its .data
    section, and these faults will incorrectly update the timestamp of the
    objtool binary.  The updated timestamp causes make to rebuild the whole
    tree.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12cd8fccc9ed9eb3c1fb699733d38e743e2be256
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Sat Sep 5 08:12:01 2020 -0400

    ext2: don't update mtime on COW faults
    
    commit 1ef6ea0efe8e68d0299dad44c39dc6ad9e5d1f39 upstream.
    
    When running in a dax mode, if the user maps a page with MAP_PRIVATE and
    PROT_WRITE, the ext2 filesystem would incorrectly update ctime and mtime
    when the user hits a COW fault.
    
    This breaks building of the Linux kernel.  How to reproduce:
    
     1. extract the Linux kernel tree on dax-mounted ext2 filesystem
     2. run make clean
     3. run make -j12
     4. run make -j12
    
    at step 4, make would incorrectly rebuild the whole kernel (although it
    was already built in step 3).
    
    The reason for the breakage is that almost all object files depend on
    objtool.  When we run objtool, it takes COW page fault on its .data
    section, and these faults will incorrectly update the timestamp of the
    objtool binary.  The updated timestamp causes make to rebuild the whole
    tree.
    
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc6c4d81d6ad007ef66c07f35b0ba8f50f3a235a
Author: Vamshi K Sthambamkadi <vamshi.k.sthambamkadi@gmail.com>
Date:   Fri Aug 28 17:02:46 2020 +0530

    tracing/kprobes, x86/ptrace: Fix regs argument order for i386
    
    commit 2356bb4b8221d7dc8c7beb810418122ed90254c9 upstream.
    
    On i386, the order of parameters passed on regs is eax,edx,and ecx
    (as per regparm(3) calling conventions).
    
    Change the mapping in regs_get_kernel_argument(), so that arg1=ax
    arg2=dx, and arg3=cx.
    
    Running the selftests testcase kprobes_args_use.tc shows the result
    as passed.
    
    Fixes: 3c88ee194c28 ("x86: ptrace: Add function argument access API")
    Signed-off-by: Vamshi K Sthambamkadi <vamshi.k.sthambamkadi@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20200828113242.GA1424@cosmos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 036a857bb57dfc5b6866e924799aef820e842b53
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Sat Aug 22 17:02:09 2020 +0100

    iommu/vt-d: Handle 36bit addressing for x86-32
    
    commit 29aaebbca4abc4cceb38738483051abefafb6950 upstream.
    
    Beware that the address size for x86-32 may exceed unsigned long.
    
    [    0.368971] UBSAN: shift-out-of-bounds in drivers/iommu/intel/iommu.c:128:14
    [    0.369055] shift exponent 36 is too large for 32-bit type 'long unsigned int'
    
    If we don't handle the wide addresses, the pages are mismapped and the
    device read/writes go astray, detected as DMAR faults and leading to
    device failure. The behaviour changed (from working to broken) in commit
    fa954e683178 ("iommu/vt-d: Delegate the dma domain to upper layer"), but
    the error looks older.
    
    Fixes: fa954e683178 ("iommu/vt-d: Delegate the dma domain to upper layer")
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    Acked-by: Lu Baolu <baolu.lu@linux.intel.com>
    Cc: James Sewart <jamessewart@arista.com>
    Cc: Lu Baolu <baolu.lu@linux.intel.com>
    Cc: Joerg Roedel <jroedel@suse.de>
    Cc: <stable@vger.kernel.org> # v5.3+
    Link: https://lore.kernel.org/r/20200822160209.28512-1-chris@chris-wilson.co.uk
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f747b0149c5a0c72626a87eb0dd2a5ec91f1a7d
Author: Ajay Kaher <akaher@vmware.com>
Date:   Sun Sep 6 19:37:56 2020 +0530

    vfio-pci: Invalidate mmaps and block MMIO access on disabled memory
    
    commit abafbc551fddede3e0a08dee1dcde08fc0eb8476 upstream.
    
    Accessing the disabled memory space of a PCI device would typically
    result in a master abort response on conventional PCI, or an
    unsupported request on PCI express.  The user would generally see
    these as a -1 response for the read return data and the write would be
    silently discarded, possibly with an uncorrected, non-fatal AER error
    triggered on the host.  Some systems however take it upon themselves
    to bring down the entire system when they see something that might
    indicate a loss of data, such as this discarded write to a disabled
    memory space.
    
    To avoid this, we want to try to block the user from accessing memory
    spaces while they're disabled.  We start with a semaphore around the
    memory enable bit, where writers modify the memory enable state and
    must be serialized, while readers make use of the memory region and
    can access in parallel.  Writers include both direct manipulation via
    the command register, as well as any reset path where the internal
    mechanics of the reset may both explicitly and implicitly disable
    memory access, and manipulation of the MSI-X configuration, where the
    MSI-X vector table resides in MMIO space of the device.  Readers
    include the read and write file ops to access the vfio device fd
    offsets as well as memory mapped access.  In the latter case, we make
    use of our new vma list support to zap, or invalidate, those memory
    mappings in order to force them to be faulted back in on access.
    
    Our semaphore usage will stall user access to MMIO spaces across
    internal operations like reset, but the user might experience new
    behavior when trying to access the MMIO space while disabled via the
    PCI command register.  Access via read or write while disabled will
    return -EIO and access via memory maps will result in a SIGBUS.  This
    is expected to be compatible with known use cases and potentially
    provides better error handling capabilities than present in the
    hardware, while avoiding the more readily accessible and severe
    platform error responses that might otherwise occur.
    
    Fixes: CVE-2020-12888
    Reviewed-by: Peter Xu <peterx@redhat.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Ajay Kaher <akaher@vmware.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0f5096b281a51b7452bbbdf28e3e35c4fd5cb89
Author: Ajay Kaher <akaher@vmware.com>
Date:   Sun Sep 6 19:37:55 2020 +0530

    vfio-pci: Fault mmaps to enable vma tracking
    
    commit 11c4cd07ba111a09f49625f9e4c851d83daf0a22 upstream.
    
    Rather than calling remap_pfn_range() when a region is mmap'd, setup
    a vm_ops handler to support dynamic faulting of the range on access.
    This allows us to manage a list of vmas actively mapping the area that
    we can later use to invalidate those mappings.  The open callback
    invalidates the vma range so that all tracking is inserted in the
    fault handler and removed in the close handler.
    
    Reviewed-by: Peter Xu <peterx@redhat.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Ajay Kaher <akaher@vmware.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 270c35d0723a2fd40b2ab90c2c30255873f02f03
Author: Ajay Kaher <akaher@vmware.com>
Date:   Sun Sep 6 19:37:54 2020 +0530

    vfio/type1: Support faulting PFNMAP vmas
    
    commit 41311242221e3482b20bfed10fa4d9db98d87016 upstream.
    
    With conversion to follow_pfn(), DMA mapping a PFNMAP range depends on
    the range being faulted into the vma.  Add support to manually provide
    that, in the same way as done on KVM with hva_to_pfn_remapped().
    
    Reviewed-by: Peter Xu <peterx@redhat.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Ajay Kaher <akaher@vmware.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5629bb21ce202e8aa0151a28b1dc2e794753b708
Author: Jason Gunthorpe <jgg@nvidia.com>
Date:   Fri Sep 4 16:36:19 2020 -0700

    include/linux/log2.h: add missing () around n in roundup_pow_of_two()
    
    [ Upstream commit 428fc0aff4e59399ec719ffcc1f7a5d29a4ee476 ]
    
    Otherwise gcc generates warnings if the expression is complicated.
    
    Fixes: 312a0c170945 ("[PATCH] LOG2: Alter roundup_pow_of_two() so that it can use a ilog2() on a constant")
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Link: https://lkml.kernel.org/r/0-v1-8a2697e3c003+41165-log_brackets_jgg@nvidia.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc846b58fe5cecaa2632d566355e607954779d45
Author: Or Cohen <orcohen@paloaltonetworks.com>
Date:   Thu Sep 3 21:05:28 2020 -0700

    net/packet: fix overflow in tpacket_rcv
    
    [ Upstream commit acf69c946233259ab4d64f8869d4037a198c7f06 ]
    
    Using tp_reserve to calculate netoff can overflow as
    tp_reserve is unsigned int and netoff is unsigned short.
    
    This may lead to macoff receving a smaller value then
    sizeof(struct virtio_net_hdr), and if po->has_vnet_hdr
    is set, an out-of-bounds write will occur when
    calling virtio_net_hdr_from_skb.
    
    The bug is fixed by converting netoff to unsigned int
    and checking if it exceeds USHRT_MAX.
    
    This addresses CVE-2020-14386
    
    Fixes: 8913336a7e8d ("packet: add PACKET_RESERVE sockopt")
    Signed-off-by: Or Cohen <orcohen@paloaltonetworks.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3d109c3484e2efe5de60df3935b6a2246391cd9
Author: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Date:   Thu Sep 3 09:38:21 2020 +0000

    iommu/amd: Restore IRTE.RemapEn bit after programming IRTE
    
    [ Upstream commit 26e495f341075c09023ba16dee9a7f37a021e745 ]
    
    Currently, the RemapEn (valid) bit is accidentally cleared when
    programming IRTE w/ guestMode=0. It should be restored to
    the prior state.
    
    Fixes: b9fc6b56f478 ("iommu/amd: Implements irq_set_vcpu_affinity() hook to setup vapic mode for pass-through devices")
    Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Reviewed-by: Joao Martins <joao.m.martins@oracle.com>
    Link: https://lore.kernel.org/r/20200903093822.52012-2-suravee.suthikulpanit@amd.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ce6bc1b549e157f72a260204ee78cfe8b144a69
Author: Veera Vegivada <vvegivad@codeaurora.org>
Date:   Wed Jul 29 09:52:51 2020 -0700

    thermal: qcom-spmi-temp-alarm: Don't suppress negative temp
    
    [ Upstream commit 0ffdab6f2dea9e23ec33230de24e492ff0b186d9 ]
    
    Currently driver is suppressing the negative temperature
    readings from the vadc. Consumers of the thermal zones need
    to read the negative temperature too. Don't suppress the
    readings.
    
    Fixes: c610afaa21d3c6e ("thermal: Add QPNP PMIC temperature alarm driver")
    Signed-off-by: Veera Vegivada <vvegivad@codeaurora.org>
    Signed-off-by: Guru Das Srinagesh <gurus@codeaurora.org>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/944856eb819081268fab783236a916257de120e4.1596040416.git.gurus@codeaurora.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5b3bd38ae91ddb51f6ae13f95ef80316a264f13
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Jul 6 11:33:38 2020 -0700

    thermal: ti-soc-thermal: Fix bogus thermal shutdowns for omap4430
    
    [ Upstream commit 30d24faba0532d6972df79a1bf060601994b5873 ]
    
    We can sometimes get bogus thermal shutdowns on omap4430 at least with
    droid4 running idle with a battery charger connected:
    
    thermal thermal_zone0: critical temperature reached (143 C), shutting down
    
    Dumping out the register values shows we can occasionally get a 0x7f value
    that is outside the TRM listed values in the ADC conversion table. And then
    we get a normal value when reading again after that. Reading the register
    multiple times does not seem help avoiding the bogus values as they stay
    until the next sample is ready.
    
    Looking at the TRM chapter "18.4.10.2.3 ADC Codes Versus Temperature", we
    should have values from 13 to 107 listed with a total of 95 values. But
    looking at the omap4430_adc_to_temp array, the values are off, and the
    end values are missing. And it seems that the 4430 ADC table is similar
    to omap3630 rather than omap4460.
    
    Let's fix the issue by using values based on the omap3630 table and just
    ignoring invalid values. Compared to the 4430 TRM, the omap3630 table has
    the missing values added while the TRM table only shows every second
    value.
    
    Note that sometimes the ADC register values within the valid table can
    also be way off for about 1 out of 10 values. But it seems that those
    just show about 25 C too low values rather than too high values. So those
    do not cause a bogus thermal shutdown.
    
    Fixes: 1a31270e54d7 ("staging: omap-thermal: add OMAP4 data structures")
    Cc: Merlijn Wajer <merlijn@wizzup.org>
    Cc: Pavel Machek <pavel@ucw.cz>
    Cc: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20200706183338.25622-1-tony@atomide.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c21f1bcafc18471c570c2ceec1e299d4eaac119
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Fri Aug 28 08:06:15 2020 +0800

    iommu/vt-d: Serialize IOMMU GCMD register modifications
    
    [ Upstream commit 6e4e9ec65078093165463c13d4eb92b3e8d7b2e8 ]
    
    The VT-d spec requires (10.4.4 Global Command Register, GCMD_REG General
    Description) that:
    
    If multiple control fields in this register need to be modified, software
    must serialize the modifications through multiple writes to this register.
    
    However, in irq_remapping.c, modifications of IRE and CFI are done in one
    write. We need to do two separate writes with STS checking after each. It
    also checks the status register before writing command register to avoid
    unnecessary register write.
    
    Fixes: af8d102f999a4 ("x86/intel/irq_remapping: Clean up x2apic opt-out security warning mess")
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Cc: Kevin Tian <kevin.tian@intel.com>
    Cc: Ashok Raj <ashok.raj@intel.com>
    Link: https://lore.kernel.org/r/20200828000615.8281-1-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 920d9ffcd4816ed1cfbfd595068c8e5e55c10179
Author: Huang Ying <ying.huang@intel.com>
Date:   Fri Sep 4 14:10:47 2020 +0800

    x86, fakenuma: Fix invalid starting node ID
    
    [ Upstream commit ccae0f36d500aef727f98acd8d0601e6b262a513 ]
    
    Commit:
    
      cc9aec03e58f ("x86/numa_emulation: Introduce uniform split capability")
    
    uses "-1" as the starting node ID, which causes the strange kernel log as
    follows, when "numa=fake=32G" is added to the kernel command line:
    
        Faking node -1 at [mem 0x0000000000000000-0x0000000893ffffff] (35136MB)
        Faking node 0 at [mem 0x0000001840000000-0x000000203fffffff] (32768MB)
        Faking node 1 at [mem 0x0000000894000000-0x000000183fffffff] (64192MB)
        Faking node 2 at [mem 0x0000002040000000-0x000000283fffffff] (32768MB)
        Faking node 3 at [mem 0x0000002840000000-0x000000303fffffff] (32768MB)
    
    And finally the kernel crashes:
    
        BUG: Bad page state in process swapper  pfn:00011
        page:(____ptrval____) refcount:0 mapcount:1 mapping:(____ptrval____) index:0x55cd7e44b270 pfn:0x11
        failed to read mapping contents, not a valid kernel address?
        flags: 0x5(locked|uptodate)
        raw: 0000000000000005 000055cd7e44af30 000055cd7e44af50 0000000100000006
        raw: 000055cd7e44b270 000055cd7e44b290 0000000000000000 000055cd7e44b510
        page dumped because: page still charged to cgroup
        page->mem_cgroup:000055cd7e44b510
        Modules linked in:
        CPU: 0 PID: 0 Comm: swapper Not tainted 5.9.0-rc2 #1
        Hardware name: Intel Corporation S2600WFT/S2600WFT, BIOS SE5C620.86B.02.01.0008.031920191559 03/19/2019
        Call Trace:
         dump_stack+0x57/0x80
         bad_page.cold+0x63/0x94
         __free_pages_ok+0x33f/0x360
         memblock_free_all+0x127/0x195
         mem_init+0x23/0x1f5
         start_kernel+0x219/0x4f5
         secondary_startup_64+0xb6/0xc0
    
    Fix this bug via using 0 as the starting node ID.  This restores the
    original behavior before cc9aec03e58f.
    
    [ mingo: Massaged the changelog. ]
    
    Fixes: cc9aec03e58f ("x86/numa_emulation: Introduce uniform split capability")
    Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/20200904061047.612950-1-ying.huang@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a7e03867a371b1e4506252c469ed427621e5a84
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Thu Sep 3 14:28:54 2020 -0400

    tg3: Fix soft lockup when tg3_reset_task() fails.
    
    [ Upstream commit 556699341efa98243e08e34401b3f601da91f5a3 ]
    
    If tg3_reset_task() fails, the device state is left in an inconsistent
    state with IFF_RUNNING still set but NAPI state not enabled.  A
    subsequent operation, such as ifdown or AER error can cause it to
    soft lock up when it tries to disable NAPI state.
    
    Fix it by bringing down the device to !IFF_RUNNING state when
    tg3_reset_task() fails.  tg3_reset_task() running from workqueue
    will now call tg3_close() when the reset fails.  We need to
    modify tg3_reset_task_cancel() slightly to avoid tg3_close()
    calling cancel_work_sync() to cancel tg3_reset_task().  Otherwise
    cancel_work_sync() will wait forever for tg3_reset_task() to
    finish.
    
    Reported-by: David Christensen <drc@linux.vnet.ibm.com>
    Reported-by: Baptiste Covolato <baptiste@arista.com>
    Fixes: db2199737990 ("tg3: Schedule at most one tg3_reset_task run")
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0c40f8a7a0e92c62178c552238ea2ba3754808d
Author: Namhyung Kim <namhyung@kernel.org>
Date:   Fri Sep 4 00:25:10 2020 +0900

    perf jevents: Fix suspicious code in fixregex()
    
    [ Upstream commit e62458e3940eb3dfb009481850e140fbee183b04 ]
    
    The new string should have enough space for the original string and the
    back slashes IMHO.
    
    Fixes: fbc2844e84038ce3 ("perf vendor events: Use more flexible pattern matching for CPU identification for mapfile.csv")
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Reviewed-by: Ian Rogers <irogers@google.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: John Garry <john.garry@huawei.com>
    Cc: Kajol Jain <kjain@linux.ibm.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: William Cohen <wcohen@redhat.com>
    Link: http://lore.kernel.org/lkml/20200903152510.489233-1-namhyung@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c4ad5444a269616c98348c919ea43ad928a53c6
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Wed Sep 2 10:47:02 2020 -0700

    xfs: fix xfs_bmap_validate_extent_raw when checking attr fork of rt files
    
    [ Upstream commit d0c20d38af135b2b4b90aa59df7878ef0c8fbef4 ]
    
    The realtime flag only applies to the data fork, so don't use the
    realtime block number checks on the attr fork of a realtime file.
    
    Fixes: 30b0984d9117 ("xfs: refactor bmap record validation")
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Eric Sandeen <sandeen@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58591dd6afdad551b404507a422b3c0b210e74f8
Author: Huang Pei <huangpei@loongson.cn>
Date:   Tue Sep 1 14:53:09 2020 +0800

    MIPS: add missing MSACSR and upper MSA initialization
    
    [ Upstream commit bb06748207cfb1502d11b90325eba7f8c44c9f02 ]
    
    In cc97ab235f3f ("MIPS: Simplify FP context initialization), init_fp_ctx
    just initialize the fp/msa context, and own_fp_inatomic just restore
    FCSR and 64bit FP regs from it, but miss MSACSR and upper MSA regs for
    MSA, so MSACSR and MSA upper regs's value from previous task on current
    cpu can leak into current task and cause unpredictable behavior when MSA
    context not initialized.
    
    Fixes: cc97ab235f3f ("MIPS: Simplify FP context initialization")
    Signed-off-by: Huang Pei <huangpei@loongson.cn>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 612e2b7ec962506d0350a9ef1af3c06d8c8e1a49
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Sep 2 14:56:31 2020 +0300

    net: gemini: Fix another missing clk_disable_unprepare() in probe
    
    [ Upstream commit eb0f3bc463d59d86402f19c59aa44e82dc3fab6d ]
    
    We recently added some calls to clk_disable_unprepare() but we missed
    the last error path if register_netdev() fails.
    
    I made a couple cleanups so we avoid mistakes like this in the future.
    First I reversed the "if (!ret)" condition and pulled the code in one
    indent level.  Also, the "port->netdev = NULL;" is not required because
    "port" isn't used again outside this function so I deleted that line.
    
    Fixes: 4d5ae32f5e1e ("net: ethernet: Add a driver for Gemini gigabit ethernet")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88405cf0f2bd771670b76c42b169527ff86048da
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Wed Sep 2 11:30:48 2020 -0400

    fix regression in "epoll: Keep a reference on files added to the check list"
    
    [ Upstream commit 77f4689de17c0887775bb77896f4cc11a39bf848 ]
    
    epoll_loop_check_proc() can run into a file already committed to destruction;
    we can't grab a reference on those and don't need to add them to the set for
    reverse path check anyway.
    
    Tested-by: Marc Zyngier <maz@kernel.org>
    Fixes: a9ed4a6560b8 ("epoll: Keep a reference on files added to the check list")
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 901d22c6b6dc42e45cdc2ae99bf326f155460661
Author: Shung-Hsi Yu <shung-hsi.yu@suse.com>
Date:   Mon Aug 31 22:37:09 2020 +0800

    net: ethernet: mlx4: Fix memory allocation in mlx4_buddy_init()
    
    [ Upstream commit cbedcb044e9cc4e14bbe6658111224bb923094f4 ]
    
    On machines with much memory (> 2 TByte) and log_mtts_per_seg == 0, a
    max_order of 31 will be passed to mlx_buddy_init(), which results in
    s = BITS_TO_LONGS(1 << 31) becoming a negative value, leading to
    kvmalloc_array() failure when it is converted to size_t.
    
      mlx4_core 0000:b1:00.0: Failed to initialize memory region table, aborting
      mlx4_core: probe of 0000:b1:00.0 failed with error -12
    
    Fix this issue by changing the left shifting operand from a signed literal to
    an unsigned one.
    
    Fixes: 225c7b1feef1 ("IB/mlx4: Add a driver Mellanox ConnectX InfiniBand adapters")
    Signed-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e2660c834e3253327685328022dcf58511fa72d
Author: Al Grant <al.grant@foss.arm.com>
Date:   Tue Sep 1 12:10:14 2020 -0300

    perf tools: Correct SNOOPX field offset
    
    [ Upstream commit 39c0a53b114d0317e5c4e76b631f41d133af5cb0 ]
    
    perf_event.h has macros that define the field offsets in the data_src
    bitmask in perf records. The SNOOPX and REMOTE offsets were both 37.
    
    These are distinct fields, and the bitfield layout in perf_mem_data_src
    confirms that SNOOPX should be at offset 38.
    
    Committer notes:
    
    This was extracted from a larger patch that also contained kernel
    changes.
    
    Fixes: 52839e653b5629bd ("perf tools: Add support for printing new mem_info encodings")
    Signed-off-by: Al Grant <al.grant@arm.com>
    Reviewed-by: Andi Kleen <ak@linux.intel.com>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Jiri Olsa <jolsa@kernel.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/9974f2d0-bf7f-518e-d9f7-4520e5ff1bb0@foss.arm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37f0a08a3a836b48143b951720bf08167d310c0a
Author: Potnuri Bharat Teja <bharat@chelsio.com>
Date:   Fri Aug 28 21:14:40 2020 +0530

    cxgb4: fix thermal zone device registration
    
    [ Upstream commit 6b6382a857d824c0866056d5736bbcb597a922ed ]
    
    When multiple adapters are present in the system, pci hot-removing second
    adapter leads to the following warning as both the adapters registered
    thermal zone device with same thermal zone name/type.
    Therefore, use unique thermal zone name during thermal zone device
    initialization. Also mark thermal zone dev NULL once unregistered.
    
    [  414.370143] ------------[ cut here ]------------
    [  414.370944] sysfs group 'power' not found for kobject 'hwmon0'
    [  414.371747] WARNING: CPU: 9 PID: 2661 at fs/sysfs/group.c:281
     sysfs_remove_group+0x76/0x80
    [  414.382550] CPU: 9 PID: 2661 Comm: bash Not tainted 5.8.0-rc6+ #33
    [  414.383593] Hardware name: Supermicro X10SRA-F/X10SRA-F, BIOS 2.0a 06/23/2016
    [  414.384669] RIP: 0010:sysfs_remove_group+0x76/0x80
    [  414.385738] Code: 48 89 df 5b 5d 41 5c e9 d8 b5 ff ff 48 89 df e8 60 b0 ff ff
     eb cb 49 8b 14 24 48 8b 75 00 48 c7 c7 90 ae 13 bb e8 6a 27 d0 ff <0f> 0b 5b 5d
     41 5c c3 0f 1f 00 0f 1f 44 00 00 48 85 f6 74 31 41 54
    [  414.388404] RSP: 0018:ffffa22bc080fcb0 EFLAGS: 00010286
    [  414.389638] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    [  414.390829] RDX: 0000000000000001 RSI: ffff8ee2de3e9510 RDI: ffff8ee2de3e9510
    [  414.392064] RBP: ffffffffbaef2ee0 R08: 0000000000000000 R09: 0000000000000000
    [  414.393224] R10: 0000000000000000 R11: 000000002b30006c R12: ffff8ee260720008
    [  414.394388] R13: ffff8ee25e0a40e8 R14: ffffa22bc080ff08 R15: ffff8ee2c3be5020
    [  414.395661] FS:  00007fd2a7171740(0000) GS:ffff8ee2de200000(0000)
     knlGS:0000000000000000
    [  414.396825] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  414.398011] CR2: 00007f178ffe5020 CR3: 000000084c5cc003 CR4: 00000000003606e0
    [  414.399172] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [  414.400352] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [  414.401473] Call Trace:
    [  414.402685]  device_del+0x89/0x400
    [  414.403819]  device_unregister+0x16/0x60
    [  414.405024]  hwmon_device_unregister+0x44/0xa0
    [  414.406112]  thermal_remove_hwmon_sysfs+0x196/0x200
    [  414.407256]  thermal_zone_device_unregister+0x1b5/0x1f0
    [  414.408415]  cxgb4_thermal_remove+0x3c/0x4f [cxgb4]
    [  414.409668]  remove_one+0x212/0x290 [cxgb4]
    [  414.410875]  pci_device_remove+0x36/0xb0
    [  414.412004]  device_release_driver_internal+0xe2/0x1c0
    [  414.413276]  pci_stop_bus_device+0x64/0x90
    [  414.414433]  pci_stop_and_remove_bus_device_locked+0x16/0x30
    [  414.415609]  remove_store+0x75/0x90
    [  414.416790]  kernfs_fop_write+0x114/0x1b0
    [  414.417930]  vfs_write+0xcf/0x210
    [  414.419059]  ksys_write+0xa7/0xe0
    [  414.420120]  do_syscall_64+0x4c/0xa0
    [  414.421278]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [  414.422335] RIP: 0033:0x7fd2a686afd0
    [  414.423396] Code: Bad RIP value.
    [  414.424549] RSP: 002b:00007fffc1446148 EFLAGS: 00000246 ORIG_RAX:
     0000000000000001
    [  414.425638] RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00007fd2a686afd0
    [  414.426830] RDX: 0000000000000002 RSI: 00007fd2a7196000 RDI: 0000000000000001
    [  414.427927] RBP: 00007fd2a7196000 R08: 000000000000000a R09: 00007fd2a7171740
    [  414.428923] R10: 00007fd2a7171740 R11: 0000000000000246 R12: 00007fd2a6b43400
    [  414.430082] R13: 0000000000000002 R14: 0000000000000001 R15: 0000000000000000
    [  414.431027] irq event stamp: 76300
    [  414.435678] ---[ end trace 13865acb4d5ab00f ]---
    
    Fixes: b18719157762 ("cxgb4: Add thermal zone support")
    Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50d2847784273591829ad2094d08c28effd69554
Author: Keith Busch <kbusch@kernel.org>
Date:   Wed Aug 26 10:53:04 2020 -0700

    nvme: fix controller instance leak
    
    [ Upstream commit 192f6c29bb28bfd0a17e6ad331d09f1ec84143d0 ]
    
    If the driver has to unbind from the controller for an early failure
    before the subsystem has been set up, there won't be a subsystem holding
    the controller's instance, so the controller needs to free its own
    instance in this case.
    
    Fixes: 733e4b69d508d ("nvme: Assign subsys instance from first ctrl")
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4b830c61b5b54c278e17eb19c696db0d6e68373
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Fri Aug 21 09:58:19 2020 +0200

    nvmet-fc: Fix a missed _irqsave version of spin_lock in 'nvmet_fc_fod_op_done()'
    
    [ Upstream commit 70e37988db94aba607d5491a94f80ba08e399b6b ]
    
    The way 'spin_lock()' and 'spin_lock_irqsave()' are used is not consistent
    in this function.
    
    Use 'spin_lock_irqsave()' also here, as there is no guarantee that
    interruptions are disabled at that point, according to surrounding code.
    
    Fixes: a97ec51b37ef ("nvmet_fc: Rework target side abort handling")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ff9f74ed4621e1aa28606fc625646cb0ddde545
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Sun Aug 23 13:55:36 2020 +0200

    netfilter: nfnetlink: nfnetlink_unicast() reports EAGAIN instead of ENOBUFS
    
    [ Upstream commit ee921183557af39c1a0475f982d43b0fcac25e2e ]
    
    Frontend callback reports EAGAIN to nfnetlink to retry a command, this
    is used to signal that module autoloading is required. Unfortunately,
    nlmsg_unicast() reports EAGAIN in case the receiver socket buffer gets
    full, so it enters a busy-loop.
    
    This patch updates nfnetlink_unicast() to turn EAGAIN into ENOBUFS and
    to use nlmsg_unicast(). Remove the flags field in nfnetlink_unicast()
    since this is always MSG_DONTWAIT in the existing code which is exactly
    what nlmsg_unicast() passes to netlink_unicast() as parameter.
    
    Fixes: 96518518cc41 ("netfilter: add nftables")
    Reported-by: Phil Sutter <phil@nwl.cc>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 498575898ec447faaf4479d5d45e19a962509c0d
Author: Landen Chao <landen.chao@mediatek.com>
Date:   Thu Aug 27 17:15:47 2020 +0800

    net: dsa: mt7530: fix advertising unsupported 1000baseT_Half
    
    [ Upstream commit f272285f6abb9178d029375599626baf3d5f4e8a ]
    
    Remove 1000baseT_Half to advertise correct hardware capability in
    phylink_validate() callback function.
    
    Fixes: 38f790a80560 ("net: dsa: mt7530: Add support for port 5")
    Signed-off-by: Landen Chao <landen.chao@mediatek.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4a427b71cd7ffb9c0167d10e8fa306fd32174cd
Author: Jesper Dangaard Brouer <brouer@redhat.com>
Date:   Wed Aug 26 10:17:36 2020 +0200

    selftests/bpf: Fix massive output from test_maps
    
    [ Upstream commit fa4505675e093e895b7ec49a76d44f6b5ad9602e ]
    
    When stdout output from the selftests tool 'test_maps' gets redirected
    into e.g file or pipe, then the output lines increase a lot (from 21
    to 33949 lines).  This is caused by the printf that happens before the
    fork() call, and there are user-space buffered printf data that seems
    to be duplicated into the forked process.
    
    To fix this fflush() stdout before the fork loop in __run_parallel().
    
    Fixes: 1a97cf1fe503 ("selftests/bpf: speedup test_maps")
    Signed-off-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Link: https://lore.kernel.org/bpf/159842985651.1050885.2154399297503372406.stgit@firesoul
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0a1bebc332de50bcdf60d8008c0b525a92f629c
Author: Ezequiel Garcia <ezequiel@collabora.com>
Date:   Thu Aug 13 21:18:33 2020 +0200

    media: cedrus: Add missing v4l2_ctrl_request_hdl_put()
    
    [ Upstream commit b30063976f29fc221a99d18d37d22ca035068aa9 ]
    
    The check for a required control in the request was missing a call to
    v4l2_ctrl_request_hdl_put() in the error path. Fix it.
    
    Fixes: 50e761516f2b8c ("media: platform: Add Cedrus VPU decoder driver")
    Signed-off-by: Ezequiel Garcia <ezequiel@collabora.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fe12f4be0018d4cde3b6eecb507ee17768ed857
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Wed Aug 12 12:30:33 2020 +0200

    media: vicodec: add missing v4l2_ctrl_request_hdl_put()
    
    [ Upstream commit 2e7c8fb8942773f412fe12f3b63e8bb92c18ab3f ]
    
    The check for a required control in the request was missing a call to
    v4l2_ctrl_request_hdl_put(), so the control request object was never
    released.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Fixes: 997deb811bf5 ("media: vicodec: Add support for stateless decoder.")
    Reviewed-by: Ezequiel Garcia <ezequiel@collabora.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f28f3cffff275e76e9ebe903b78adc0dfcc8352e
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Aug 26 12:40:07 2020 -0700

    bnxt: don't enable NAPI until rings are ready
    
    [ Upstream commit 96ecdcc992eb7f468b2cf829b0f5408a1fad4668 ]
    
    Netpoll can try to poll napi as soon as napi_enable() is called.
    It crashes trying to access a doorbell which is still NULL:
    
     BUG: kernel NULL pointer dereference, address: 0000000000000000
     CPU: 59 PID: 6039 Comm: ethtool Kdump: loaded Tainted: G S                5.9.0-rc1-00469-g5fd99b5d9950-dirty #26
     RIP: 0010:bnxt_poll+0x121/0x1c0
     Code: c4 20 44 89 e0 5b 5d 41 5c 41 5d 41 5e 41 5f c3 41 8b 86 a0 01 00 00 41 23 85 18 01 00 00 49 8b 96 a8 01 00 00 0d 00 00 00 24 <89> 02
    41 f6 45 77 02 74 cb 49 8b ae d8 01 00 00 31 c0 c7 44 24 1a
      netpoll_poll_dev+0xbd/0x1a0
      __netpoll_send_skb+0x1b2/0x210
      netpoll_send_udp+0x2c9/0x406
      write_ext_msg+0x1d7/0x1f0
      console_unlock+0x23c/0x520
      vprintk_emit+0xe0/0x1d0
      printk+0x58/0x6f
      x86_vector_activate.cold+0xf/0x46
      __irq_domain_activate_irq+0x50/0x80
      __irq_domain_activate_irq+0x32/0x80
      __irq_domain_activate_irq+0x32/0x80
      irq_domain_activate_irq+0x25/0x40
      __setup_irq+0x2d2/0x700
      request_threaded_irq+0xfb/0x160
      __bnxt_open_nic+0x3b1/0x750
      bnxt_open_nic+0x19/0x30
      ethtool_set_channels+0x1ac/0x220
      dev_ethtool+0x11ba/0x2240
      dev_ioctl+0x1cf/0x390
      sock_do_ioctl+0x95/0x130
    
    Reported-by: Rob Sherwood <rsher@fb.com>
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Reviewed-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da7a1676d6c19971758976a84e87f5b1009409e7
Author: Eric Sandeen <sandeen@redhat.com>
Date:   Wed Aug 26 14:11:58 2020 -0700

    xfs: fix boundary test in xfs_attr_shortform_verify
    
    [ Upstream commit f4020438fab05364018c91f7e02ebdd192085933 ]
    
    The boundary test for the fixed-offset parts of xfs_attr_sf_entry in
    xfs_attr_shortform_verify is off by one, because the variable array
    at the end is defined as nameval[1] not nameval[].
    Hence we need to subtract 1 from the calculation.
    
    This can be shown by:
    
    # touch file
    # setfattr -n root.a file
    
    and verifications will fail when it's written to disk.
    
    This only matters for a last attribute which has a single-byte name
    and no value, otherwise the combination of namelen & valuelen will
    push endp further out and this test won't fail.
    
    Fixes: 1e1bbd8e7ee06 ("xfs: create structure verifier function for shortform xattrs")
    Signed-off-by: Eric Sandeen <sandeen@redhat.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8227199ceafd747ca7714a961b60a13ee58f6eb4
Author: Edwin Peer <edwin.peer@broadcom.com>
Date:   Wed Aug 26 01:08:37 2020 -0400

    bnxt_en: fix HWRM error when querying VF temperature
    
    [ Upstream commit 12cce90b934bf2b0ed9c339b4d5503e69954351a ]
    
    Firmware returns RESOURCE_ACCESS_DENIED for HWRM_TEMP_MONITORY_QUERY for
    VFs. This produces unpleasing error messages in the log when temp1_input
    is queried via the hwmon sysfs interface from a VF.
    
    The error is harmless and expected, so silence it and return unknown as
    the value. Since the device temperature is not particularly sensitive
    information, provide flexibility to change this policy in future by
    silencing the error rather than avoiding the HWRM call entirely for VFs.
    
    Fixes: cde49a42a9bb ("bnxt_en: Add hwmon sysfs support to read temperature")
    Cc: Marc Smith <msmith626@gmail.com>
    Reported-by: Marc Smith <msmith626@gmail.com>
    Signed-off-by: Edwin Peer <edwin.peer@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 927a7629bedd94bb8cae55c30f3899fa09191dd7
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Wed Aug 26 01:08:36 2020 -0400

    bnxt_en: Fix possible crash in bnxt_fw_reset_task().
    
    [ Upstream commit b148bb238c02f0c7797efed026e9bba5892d2172 ]
    
    bnxt_fw_reset_task() is run from a delayed workqueue.  The current
    code is not cancelling the workqueue in the driver's .remove()
    method and it can potentially crash if the device is removed with
    the workqueue still pending.
    
    The fix is to clear the BNXT_STATE_IN_FW_RESET flag and then cancel
    the delayed workqueue in bnxt_remove_one().  bnxt_queue_fw_reset_work()
    also needs to check that this flag is set before scheduling.  This
    will guarantee that no rescheduling will be done after it is cancelled.
    
    Fixes: 230d1f0de754 ("bnxt_en: Handle firmware reset.")
    Reviewed-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 70699d3cc77c0eb2a425e05bafac645c3737e974
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Wed Aug 26 01:08:35 2020 -0400

    bnxt_en: Fix PCI AER error recovery flow
    
    [ Upstream commit df3875ec550396974b1d8a518bd120d034738236 ]
    
    When a PCI error is detected the PCI state could be corrupt, save
    the PCI state after initialization and restore it after the slot
    reset.
    
    Fixes: 6316ea6db93d ("bnxt_en: Enable AER support.")
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 87547923b6c6cdc8667cf118aa0e6e719cf68153
Author: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
Date:   Wed Aug 26 01:08:33 2020 -0400

    bnxt_en: Check for zero dir entries in NVRAM.
    
    [ Upstream commit dbbfa96ad920c50d58bcaefa57f5f33ceef9d00e ]
    
    If firmware goes into unstable state, HWRM_NVM_GET_DIR_INFO firmware
    command may return zero dir entries. Return error in such case to
    avoid zero length dma buffer request.
    
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Signed-off-by: Vasundhara Volam <vasundhara-v.volam@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7cbba4db7da74b083b17668bd5d1c579236444a
Author: Pavan Chebbi <pavan.chebbi@broadcom.com>
Date:   Wed Aug 26 01:08:32 2020 -0400

    bnxt_en: Don't query FW when netif_running() is false.
    
    [ Upstream commit c1c2d77408022a398a1a7c51cf20488c922629de ]
    
    In rare conditions like two stage OS installation, the
    ethtool's get_channels function may be called when the
    device is in D3 state, leading to uncorrectable PCI error.
    Check netif_running() first before making any query to FW
    which involves writing to BAR.
    
    Fixes: db4723b3cd2d ("bnxt_en: Check max_tx_scheduler_inputs value from firmware.")
    Signed-off-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c11510bb88989040c5acdce79e67805f425df575
Author: Murali Karicheri <m-karicheri2@ti.com>
Date:   Mon Aug 24 11:10:52 2020 -0400

    net: ethernet: ti: cpsw: fix clean up of vlan mc entries for host port
    
    [ Upstream commit 99d469fc64d06f0c81c0fe2a1c01645a67e0cbf0 ]
    
    To flush the vid + mc entries from ALE, which is required when a VLAN
    interface is removed, driver needs to call cpsw_ale_flush_multicast()
    with ALE_PORT_HOST for port mask as these entries are added only for
    host port. Without this, these entries remain in the ALE table even
    after removing the VLAN interface. cpsw_ale_flush_multicast() calls
    cpsw_ale_flush_mcast which expects a port mask to do the job.
    
    Fixes: 15180eca569b ("net: ethernet: ti: cpsw: fix vlan mcast")
    Signed-off-by: Murali Karicheri <m-karicheri2@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bd92cdc04e642ddee262d85f334fb97ff520c62
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Tue Aug 25 14:59:40 2020 +0200

    gtp: add GTPA_LINK info to msg sent to userspace
    
    [ Upstream commit b274e47d9e3f4dcd4ad4028a316ec22dc4533ac7 ]
    
    During a dump, this attribute is essential, it enables the userspace to
    know on which interface the context is linked to.
    
    Fixes: 459aa660eb1d ("gtp: add initial driver for datapath of GPRS Tunneling Protocol (GTP-U)")
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Tested-by: Gabriel Ganne <gabriel.ganne@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24249fab08c618d3af8cd42ee10695866989bbe0
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Tue Aug 25 08:46:17 2020 +0200

    dmaengine: pl330: Fix burst length if burst size is smaller than bus width
    
    [ Upstream commit 0661cef675d37e2c4b66a996389ebeae8568e49e ]
    
    Move the burst len fixup after setting the generic value for it. This
    finally enables the fixup introduced by commit 137bd11090d8 ("dmaengine:
    pl330: Align DMA memcpy operations to MFIFO width"), which otherwise was
    overwritten by the generic value.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Fixes: 137bd11090d8 ("dmaengine: pl330: Align DMA memcpy operations to MFIFO width")
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Link: https://lore.kernel.org/r/20200825064617.16193-1-m.szyprowski@samsung.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 719f92de3ffff613f7ba66e4f9edd58116a46f62
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Sun Aug 23 16:56:47 2020 +0800

    net: arc_emac: Fix memleak in arc_mdio_probe
    
    [ Upstream commit e2d79cd8875fa8c3cc7defa98a8cc99a1ed0c62f ]
    
    When devm_gpiod_get_optional() fails, bus should be
    freed just like when of_mdiobus_register() fails.
    
    Fixes: 1bddd96cba03d ("net: arc_emac: support the phy reset for emac driver")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 268fe5a4c040a2cd0e04b70601e96b406a2c4736
Author: Yuusuke Ashizuka <ashiduka@fujitsu.com>
Date:   Thu Aug 20 18:43:07 2020 +0900

    ravb: Fixed to be able to unload modules
    
    [ Upstream commit 1838d6c62f57836639bd3d83e7855e0ee4f6defc ]
    
    When this driver is built as a module, I cannot rmmod it after insmoding
    it.
    This is because that this driver calls ravb_mdio_init() at the time of
    probe, and module->refcnt is incremented by alloc_mdio_bitbang() called
    after that.
    Therefore, even if ifup is not performed, the driver is in use and rmmod
    cannot be performed.
    
    $ lsmod
    Module                  Size  Used by
    ravb                   40960  1
    $ rmmod ravb
    rmmod: ERROR: Module ravb is in use
    
    Call ravb_mdio_init() at open and free_mdio_bitbang() at close, thereby
    rmmod is possible in the ifdown state.
    
    Fixes: c156633f1353 ("Renesas Ethernet AVB driver proper")
    Signed-off-by: Yuusuke Ashizuka <ashiduka@fujitsu.com>
    Reviewed-by: Sergei Shtylyov <sergei.shtylyov@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8123fa897e651de7857551cbb0a3a3fee1396ac5
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Mon Aug 24 13:58:31 2020 +0800

    net: systemport: Fix memleak in bcm_sysport_probe
    
    [ Upstream commit 7ef1fc57301f3cef7201497aa27e89ccb91737fe ]
    
    When devm_kcalloc() fails, dev should be freed just
    like what we've done in the subsequent error paths.
    
    Fixes: 7b78be48a8eb6 ("net: systemport: Dynamically allocate number of TX rings")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a49c0aebf9c449c27658b544510313345eb8b2cb
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Mon Aug 24 13:44:42 2020 +0800

    net: hns: Fix memleak in hns_nic_dev_probe
    
    [ Upstream commit 100e3345c6e719d2291e1efd5de311cc24bb9c0b ]
    
    hns_nic_dev_probe allocates ndev, but not free it on
    two error handling paths, which may lead to memleak.
    
    Fixes: 63434888aaf1b ("net: hns: net: hns: enet adds support of acpi")
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 210b889fd8efa4a1478d6c346c7fd6bb3e5f98ea
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Aug 20 21:05:50 2020 +0200

    netfilter: nf_tables: fix destination register zeroing
    
    [ Upstream commit 1e105e6afa6c3d32bfb52c00ffa393894a525c27 ]
    
    Following bug was reported via irc:
    nft list ruleset
       set knock_candidates_ipv4 {
          type ipv4_addr . inet_service
          size 65535
          elements = { 127.0.0.1 . 123,
                       127.0.0.1 . 123 }
          }
     ..
       udp dport 123 add @knock_candidates_ipv4 { ip saddr . 123 }
       udp dport 123 add @knock_candidates_ipv4 { ip saddr . udp dport }
    
    It should not have been possible to add a duplicate set entry.
    
    After some debugging it turned out that the problem is the immediate
    value (123) in the second-to-last rule.
    
    Concatenations use 32bit registers, i.e. the elements are 8 bytes each,
    not 6 and it turns out the kernel inserted
    
    inet firewall @knock_candidates_ipv4
            element 0100007f ffff7b00  : 0 [end]
            element 0100007f 00007b00  : 0 [end]
    
    Note the non-zero upper bits of the first element.  It turns out that
    nft_immediate doesn't zero the destination register, but this is needed
    when the length isn't a multiple of 4.
    
    Furthermore, the zeroing in nft_payload is broken.  We can't use
    [len / 4] = 0 -- if len is a multiple of 4, index is off by one.
    
    Skip zeroing in this case and use a conditional instead of (len -1) / 4.
    
    Fixes: 49499c3e6e18 ("netfilter: nf_tables: switch registers to 32 bit addressing")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 576fbd4902fba29f34830978a67fe8053c6306f6
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Thu Aug 20 14:12:55 2020 +0200

    netfilter: nf_tables: incorrect enum nft_list_attributes definition
    
    [ Upstream commit da9125df854ea48a6240c66e8a67be06e2c12c03 ]
    
    This should be NFTA_LIST_UNSPEC instead of NFTA_LIST_UNPEC, all other
    similar attribute definitions are postfixed with _UNSPEC.
    
    Fixes: 96518518cc41 ("netfilter: add nftables")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 929d07feb94f27d3fc8d09c94b9f99937aeec551
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Thu Aug 20 14:12:54 2020 +0200

    netfilter: nf_tables: add NFTA_SET_USERDATA if not null
    
    [ Upstream commit 6f03bf43ee05b31d3822def2a80f11b3591c55b3 ]
    
    Kernel sends an empty NFTA_SET_USERDATA attribute with no value if
    userspace adds a set with no NFTA_SET_USERDATA attribute.
    
    Fixes: e6d8ecac9e68 ("netfilter: nf_tables: Add new attributes into nft_set to store user data.")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb1e97674aa85503287751bdb7a51882b7839ee7
Author: Raul E Rangel <rrangel@chromium.org>
Date:   Wed Aug 19 13:00:19 2020 -0600

    mmc: sdhci-acpi: Fix HS400 tuning for AMDI0040
    
    [ Upstream commit 61d7437ed13906984c44697970ee792ac6271a31 ]
    
    The AMD eMMC Controller can only use the tuned clock while in HS200 and
    HS400 mode. If we switch to a different mode, we need to disable the
    tuned clock. If we have previously performed tuning and switch back to
    HS200 or HS400, we can re-enable the tuned clock.
    
    Previously the tuned clock was not getting disabled when switching to
    DDR52 which is part of the HS400 tuning sequence.
    
    Fixes: 34597a3f60b1 ("mmc: sdhci-acpi: Add support for ACPI HID of AMD Controller with HS400")
    Signed-off-by: Raul E Rangel <rrangel@chromium.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Link: https://lore.kernel.org/r/20200819125832.v2.1.Ie8f0689ec9f449203328b37409d1cf06b565f331@changeid
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da8e3e507d2f8a0a6932c7e9b6ded45b6464dd4c
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed Aug 19 11:26:45 2020 -0700

    MIPS: BMIPS: Also call bmips_cpu_setup() for secondary cores
    
    [ Upstream commit e14f633b66902615cf7faa5d032b45ab8b6fb158 ]
    
    The initialization done by bmips_cpu_setup() typically affects both
    threads of a given core, on 7435 which supports 2 cores and 2 threads,
    logical CPU number 2 and 3 would not run this initialization.
    
    Fixes: 738a3f79027b ("MIPS: BMIPS: Add early CPU initialization code")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5e9e36fc2f8e6ba557dc5b392f15a3d982d0904
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed Aug 19 11:26:44 2020 -0700

    MIPS: mm: BMIPS5000 has inclusive physical caches
    
    [ Upstream commit dbfc95f98f0158958d1f1e6bf06d74be38dbd821 ]
    
    When the BMIPS generic cpu-feature-overrides.h file was introduced,
    cpu_has_inclusive_caches/MIPS_CPU_INCLUSIVE_CACHES was not set for
    BMIPS5000 CPUs. Correct this when we have initialized the MIPS secondary
    cache successfully.
    
    Fixes: f337967d6d87 ("MIPS: BMIPS: Add cpu-feature-overrides.h")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f7798f05311cf60b24485f1386064d7051d1d69
Author: David Howells <dhowells@redhat.com>
Date:   Thu Aug 20 15:13:00 2020 +0100

    rxrpc: Make rxrpc_kernel_get_srtt() indicate validity
    
    [ Upstream commit 1d4adfaf65746203861c72d9d78de349eb97d528 ]
    
    Fix rxrpc_kernel_get_srtt() to indicate the validity of the returned
    smoothed RTT.  If we haven't had any valid samples yet, the SRTT isn't
    useful.
    
    Fixes: c410bf01933e ("rxrpc: Fix the excessive initial retransmission timeout")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43cf7e7dfa7b1e998c0b2f98e2186a6cbc67b84d
Author: David Howells <dhowells@redhat.com>
Date:   Thu Aug 20 14:12:33 2020 +0100

    rxrpc: Keep the ACK serial in a var in rxrpc_input_ack()
    
    [ Upstream commit 68528d937dcd675e79973061c1a314db598162d1 ]
    
    Keep the ACK serial number in a variable in rxrpc_input_ack() as it's used
    frequently.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 242a7ab0ac5296b11211f3851632502e269f2d69
Author: Yu Kuai <yukuai3@huawei.com>
Date:   Mon Aug 17 19:57:26 2020 +0800

    dmaengine: at_hdmac: check return value of of_find_device_by_node() in at_dma_xlate()
    
    [ Upstream commit 0cef8e2c5a07d482ec907249dbd6687e8697677f ]
    
    The reurn value of of_find_device_by_node() is not checked, thus null
    pointer dereference will be triggered if of_find_device_by_node()
    failed.
    
    Fixes: bbe89c8e3d59 ("at_hdmac: move to generic DMA binding")
    Signed-off-by: Yu Kuai <yukuai3@huawei.com>
    Link: https://lore.kernel.org/r/20200817115728.1706719-2-yukuai3@huawei.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f2786bb9d40ad6ff2c83eee2952ccf6fa1a54fa
Author: Jussi Kivilinna <jussi.kivilinna@haltian.com>
Date:   Tue Aug 18 17:46:10 2020 +0300

    batman-adv: bla: use netif_rx_ni when not in interrupt context
    
    [ Upstream commit 279e89b2281af3b1a9f04906e157992c19c9f163 ]
    
    batadv_bla_send_claim() gets called from worker thread context through
    batadv_bla_periodic_work(), thus netif_rx_ni needs to be used in that
    case. This fixes "NOHZ: local_softirq_pending 08" log messages seen
    when batman-adv is enabled.
    
    Fixes: 23721387c409 ("batman-adv: add basic bridge loop avoidance code")
    Signed-off-by: Jussi Kivilinna <jussi.kivilinna@haltian.com>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd8b3ef644a45eb6a658897e06e4a60c3964f2af
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Thu Jul 23 14:28:08 2020 +0200

    batman-adv: Fix own OGM check in aggregated OGMs
    
    [ Upstream commit d8bf0c01642275c7dca1e5d02c34e4199c200b1f ]
    
    The own OGM check is currently misplaced and can lead to the following
    issues:
    
    For one thing we might receive an aggregated OGM from a neighbor node
    which has our own OGM in the first place. We would then not only skip
    our own OGM but erroneously also any other, following OGM in the
    aggregate.
    
    For another, we might receive an OGM aggregate which has our own OGM in
    a place other then the first one. Then we would wrongly not skip this
    OGM, leading to populating the orginator and gateway table with ourself.
    
    Fixes: 9323158ef9f4 ("batman-adv: OGMv2 - implement originators logic")
    Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2344f2f186fd712b856facb9804488b8feb0be15
Author: Sven Eckelmann <sven@narfation.org>
Date:   Wed Jul 22 20:36:43 2020 +0200

    batman-adv: Avoid uninitialized chaddr when handling DHCP
    
    [ Upstream commit 303216e76dcab6049c9d42390b1032f0649a8206 ]
    
    The gateway client code can try to optimize the delivery of DHCP packets to
    avoid broadcasting them through the whole mesh. But also transmissions to
    the client can be optimized by looking up the destination via the chaddr of
    the DHCP packet.
    
    But the chaddr is currently only done when chaddr is fully inside the
    non-paged area of the skbuff. Otherwise it will not be initialized and the
    unoptimized path should have been taken.
    
    But the implementation didn't handle this correctly. It didn't retrieve the
    correct chaddr but still tried to perform the TT lookup with this
    uninitialized memory.
    
    Reported-by: syzbot+ab16e463b903f5a37036@syzkaller.appspotmail.com
    Fixes: 6c413b1c22a2 ("batman-adv: send every DHCP packet as bat-unicast")
    Signed-off-by: Sven Eckelmann <sven@narfation.org>
    Acked-by: Antonio Quartulli <a@unstable.cc>
    Signed-off-by: Simon Wunderlich <sw@simonwunderlich.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89cb604c422694afb3ffdc39d51705e6091eb57b
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Thu Aug 6 13:49:28 2020 +0300

    dmaengine: of-dma: Fix of_dma_router_xlate's of_dma_xlate handling
    
    [ Upstream commit 5b2aa9f918f6837ae943557f8cec02c34fcf80e7 ]
    
    of_dma_xlate callback can return ERR_PTR as well NULL in case of failure.
    
    If error code is returned (not NULL) then the route should be released and
    the router should not be registered for the channel.
    
    Fixes: 56f13c0d9524c ("dmaengine: of_dma: Support for DMA routers")
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Link: https://lore.kernel.org/r/20200806104928.25975-1-peter.ujfalusi@ti.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a89606baf3118a3afd970f9e250d619e91a2459
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Aug 29 13:50:56 2020 -0700

    fsldma: fix very broken 32-bit ppc ioread64 functionality
    
    [ Upstream commit 0a4c56c80f90797e9b9f8426c6aae4c0cf1c9785 ]
    
    Commit ef91bb196b0d ("kernel.h: Silence sparse warning in
    lower_32_bits") caused new warnings to show in the fsldma driver, but
    that commit was not to blame: it only exposed some very incorrect code
    that tried to take the low 32 bits of an address.
    
    That made no sense for multiple reasons, the most notable one being that
    that code was intentionally limited to only 32-bit ppc builds, so "only
    low 32 bits of an address" was completely nonsensical.  There were no
    high bits to mask off to begin with.
    
    But even more importantly fropm a correctness standpoint, turning the
    address into an integer then caused the subsequent address arithmetic to
    be completely wrong too, and the "+1" actually incremented the address
    by one, rather than by four.
    
    Which again was incorrect, since the code was reading two 32-bit values
    and trying to make a 64-bit end result of it all.  Surprisingly, the
    iowrite64() did not suffer from the same odd and incorrect model.
    
    This code has never worked, but it's questionable whether anybody cared:
    of the two users that actually read the 64-bit value (by way of some C
    preprocessor hackery and eventually the 'get_cdar()' inline function),
    one of them explicitly ignored the value, and the other one might just
    happen to work despite the incorrect value being read.
    
    This patch at least makes it not fail the build any more, and makes the
    logic superficially sane.  Whether it makes any difference to the code
    _working_ or not shall remain a mystery.
    
    Compile-tested-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6eb88c42dcc92aa0c16879aa1423ac107c0e90e0
Author: Simon Leiner <simon@leiner.me>
Date:   Tue Aug 25 11:31:52 2020 +0200

    xen/xenbus: Fix granting of vmalloc'd memory
    
    [ Upstream commit d742db70033c745e410523e00522ee0cfe2aa416 ]
    
    On some architectures (like ARM), virt_to_gfn cannot be used for
    vmalloc'd memory because of its reliance on virt_to_phys. This patch
    introduces a check for vmalloc'd addresses and obtains the PFN using
    vmalloc_to_pfn in that case.
    
    Signed-off-by: Simon Leiner <simon@leiner.me>
    Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>
    Link: https://lore.kernel.org/r/20200825093153.35500-1-simon@leiner.me
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0878655a98801c963e0d2a5ca356e553f1ac4674
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Wed Aug 26 21:24:58 2020 +0800

    drm/amd/display: Fix memleak in amdgpu_dm_mode_config_init
    
    [ Upstream commit b67a468a4ccef593cd8df6a02ba3d167b77f0c81 ]
    
    When amdgpu_display_modeset_create_props() fails, state and
    state->context should be freed to prevent memleak. It's the
    same when amdgpu_dm_audio_init() fails.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b014f2846e6f2ebfbc6a49ce7cc92dd9f257bbe5
Author: Wayne Lin <Wayne.Lin@amd.com>
Date:   Tue Aug 18 11:19:42 2020 +0800

    drm/amd/display: Retry AUX write when fail occurs
    
    [ Upstream commit ef67d792a2fc578319399f605fbec2f99ecc06ea ]
    
    [Why]
    In dm_dp_aux_transfer() now, we forget to handle AUX_WR fail cases. We
    suppose every write wil get done successfully and hence some AUX
    commands might not sent out indeed.
    
    [How]
    Check if AUX_WR success. If not, retry it.
    
    Signed-off-by: Wayne Lin <Wayne.Lin@amd.com>
    Reviewed-by: Hersen Wu <hersenxs.wu@amd.com>
    Acked-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9947928e619a2229ca98d1b17474c21a9099503f
Author: Furquan Shaikh <furquan@google.com>
Date:   Thu Aug 20 00:52:41 2020 -0700

    drivers: gpu: amd: Initialize amdgpu_dm_backlight_caps object to 0 in amdgpu_dm_update_backlight_caps
    
    [ Upstream commit 5896585512e5156482335e902f7c7393b940da51 ]
    
    In `amdgpu_dm_update_backlight_caps()`, there is a local
    `amdgpu_dm_backlight_caps` object that is filled in by
    `amdgpu_acpi_get_backlight_caps()`. However, this object is
    uninitialized before the call and hence the subsequent check for
    aux_support can fail since it is not initialized by
    `amdgpu_acpi_get_backlight_caps()` as well. This change initializes
    this local `amdgpu_dm_backlight_caps` object to 0.
    
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Furquan Shaikh <furquan@google.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79d31527dfc3d7075579efc0e5d705cfc0a548e6
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Wed Aug 19 13:37:54 2020 -0400

    drm/amd/display: Reject overlay plane configurations in multi-display scenarios
    
    [ Upstream commit 168f09cdadbd547c2b202246ef9a8183da725f13 ]
    
    [Why]
    These aren't stable on some platform configurations when driving
    multiple displays, especially on higher resolution.
    
    In particular the delay in asserting p-state and validating from
    x86 outweights any power or performance benefit from the hardware
    composition.
    
    Under some configurations this will manifest itself as extreme stutter
    or unresponsiveness especially when combined with cursor movement.
    
    [How]
    Disable these for now. Exposing overlays to userspace doesn't guarantee
    that they'll be able to use them in any and all configurations and it's
    part of the DRM contract to have userspace gracefully handle validation
    failures when they occur.
    
    Valdiation occurs as part of DC and this in particular affects RV, so
    disable this in dcn10_global_validation.
    
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Reviewed-by: Hersen Wu <hersenxs.wu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29bade8e2fc9b0604ced6287d123b376ca12d61c
Author: Sven Schnelle <svens@linux.ibm.com>
Date:   Thu Aug 20 09:48:23 2020 +0200

    s390: don't trace preemption in percpu macros
    
    [ Upstream commit 1196f12a2c960951d02262af25af0bb1775ebcc2 ]
    
    Since commit a21ee6055c30 ("lockdep: Change hardirq{s_enabled,_context}
    to per-cpu variables") the lockdep code itself uses percpu variables. This
    leads to recursions because the percpu macros are calling preempt_enable()
    which might call trace_preempt_on().
    
    Signed-off-by: Sven Schnelle <svens@linux.ibm.com>
    Reviewed-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c756635246e9da7b6c6dcbc08b4519bdcb0d3475
Author: Hou Pu <houpu@bytedance.com>
Date:   Mon Aug 10 08:00:44 2020 -0400

    nbd: restore default timeout when setting it to zero
    
    [ Upstream commit acb19e17c5134dd78668c429ecba5b481f038e6a ]
    
    If we configured io timeout of nbd0 to 100s. Later after we
    finished using it, we configured nbd0 again and set the io
    timeout to 0. We expect it would timeout after 30 seconds
    and keep retry. But in fact we could not change the timeout
    when we set it to 0. the timeout is still the original 100s.
    
    So change the timeout to default 30s when we set it to zero.
    It also behaves same as commit 2da22da57348 ("nbd: fix zero
    cmd timeout handling v2").
    
    It becomes more important if we were reconfigure a nbd device
    and the io timeout it set to zero. Because it could take 30s
    to detect the new socket and thus io could be completed more
    quickly compared to 100s.
    
    Signed-off-by: Hou Pu <houpu@bytedance.com>
    Reviewed-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1e333e7b8daf2ff0df2fed638938e79909de0a4
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Aug 20 16:47:24 2020 +0200

    cpuidle: Fixup IRQ state
    
    [ Upstream commit 49d9c5936314e44d314c605c39cce0fd947f9c3a ]
    
    Match the pattern elsewhere in this file.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Tested-by: Marco Elver <elver@google.com>
    Link: https://lkml.kernel.org/r/20200821085348.251340558@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad3a4efc8c56946b8d3ddfc5baa5705ae26c2ede
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Wed Aug 19 13:30:21 2020 +0300

    drm/omap: fix incorrect lock state
    
    [ Upstream commit 7fd5b25499bcec157dd4de9a713425efcf4571cd ]
    
    After commit 92cc68e35863c1c61c449efa2b2daef6e9926048 ("drm/vblank: Use
    spin_(un)lock_irq() in drm_crtc_vblank_on()") omapdrm locking is broken:
    
    WARNING: inconsistent lock state
    5.8.0-rc2-00483-g92cc68e35863 #13 Tainted: G        W
    --------------------------------
    inconsistent {HARDIRQ-ON-W} -> {IN-HARDIRQ-W} usage.
    swapper/0/0 [HC1[1]:SC0[0]:HE0:SE1] takes:
    ea98222c (&dev->event_lock#2){?.+.}-{2:2}, at: drm_handle_vblank+0x4c/0x520 [drm]
    {HARDIRQ-ON-W} state was registered at:
      trace_hardirqs_on+0x9c/0x1ec
      _raw_spin_unlock_irq+0x20/0x58
      omap_crtc_atomic_enable+0x54/0xa0 [omapdrm]
      drm_atomic_helper_commit_modeset_enables+0x218/0x270 [drm_kms_helper]
      omap_atomic_commit_tail+0x48/0xc4 [omapdrm]
      commit_tail+0x9c/0x190 [drm_kms_helper]
      drm_atomic_helper_commit+0x154/0x188 [drm_kms_helper]
      drm_client_modeset_commit_atomic+0x228/0x268 [drm]
      drm_client_modeset_commit_locked+0x60/0x1d0 [drm]
      drm_client_modeset_commit+0x24/0x40 [drm]
      drm_fb_helper_restore_fbdev_mode_unlocked+0x54/0xa8 [drm_kms_helper]
      drm_fb_helper_set_par+0x2c/0x5c [drm_kms_helper]
      drm_fb_helper_hotplug_event.part.0+0xa0/0xbc [drm_kms_helper]
      drm_kms_helper_hotplug_event+0x24/0x30 [drm_kms_helper]
      output_poll_execute+0x1a8/0x1c0 [drm_kms_helper]
      process_one_work+0x268/0x800
      worker_thread+0x30/0x4e0
      kthread+0x164/0x190
      ret_from_fork+0x14/0x20
    
    The reason for this is that omapdrm calls drm_crtc_vblank_on() while
    holding event_lock taken with spin_lock_irq().
    
    It is not clear why drm_crtc_vblank_on() and drm_crtc_vblank_get() are
    called while holding event_lock. I don't see any problem with moving
    those calls outside the lock, which is what this patch does.
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200819103021.440288-1-tomi.valkeinen@ti.com
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a8dcad24424933df7caaaee8dd0f7d2f8ed5e3a
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Aug 20 11:00:26 2020 -0400

    ceph: don't allow setlease on cephfs
    
    [ Upstream commit 496ceaf12432b3d136dcdec48424312e71359ea7 ]
    
    Leases don't currently work correctly on kcephfs, as they are not broken
    when caps are revoked. They could eventually be implemented similarly to
    how we did them in libcephfs, but for now don't allow them.
    
    [ idryomov: no need for simple_nosetlease() in ceph_dir_fops and
      ceph_snapdir_fops ]
    
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 755fd63ae1636dabfa7a9bbe3290ca0368212a8b
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Thu Aug 20 12:36:22 2020 +0300

    drm/msm/a6xx: fix gmu start on newer firmware
    
    [ Upstream commit f5749d6181fa7df5ae741788e5d96f593d3a60b6 ]
    
    New Qualcomm firmware has changed a way it reports back the 'started'
    event. Support new register values.
    
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7a55cf8a20c7c0bbeb68a6e7d6b2247936a5dfe4
Author: Ofir Bitton <obitton@habana.ai>
Date:   Tue Aug 11 08:57:45 2020 +0300

    habanalabs: check correct vmalloc return code
    
    [ Upstream commit 0839152f8c1efc1cc2d515d1ff1e253ca9402ad3 ]
    
    vmalloc can return different return code than NULL and a valid
    pointer. We must validate it in order to dereference a non valid
    pointer.
    
    Signed-off-by: Ofir Bitton <obitton@habana.ai>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9436de020a4166c5b69b886d1cace048d252a01
Author: Ofir Bitton <obitton@habana.ai>
Date:   Tue Aug 11 09:19:53 2020 +0300

    habanalabs: validate FW file size
    
    [ Upstream commit bce382a8bb080ed5f2f3a06754526dc58b91cca2 ]
    
    We must validate FW size in order not to corrupt memory in case
    a malicious FW file will be present in system.
    
    Signed-off-by: Ofir Bitton <obitton@habana.ai>
    Signed-off-by: Oded Gabbay <oded.gabbay@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dddd5003c70788f68f93bb3a978d61ce11c584e3
Author: Rob Clark <robdclark@chromium.org>
Date:   Tue Aug 18 09:31:19 2020 -0700

    drm/msm: enable vblank during atomic commits
    
    [ Upstream commit 43906812eaab06423f56af5cca9a9fcdbb4ac454 ]
    
    This has roughly the same effect as drm_atomic_helper_wait_for_vblanks(),
    basically just ensuring that vblank accounting is enabled so that we get
    valid timestamp/seqn on pageflip events.
    
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Tested-by: Stephen Boyd <swboyd@chromium.org>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c9bc7d9600c9eee934301b4f9ecf99f36a19085
Author: Amit Engel <amit.engel@dell.com>
Date:   Wed Aug 19 11:31:11 2020 +0300

    nvmet: Disable keep-alive timer when kato is cleared to 0h
    
    [ Upstream commit 0d3b6a8d213a30387b5104b2fb25376d18636f23 ]
    
    Based on nvme spec, when keep alive timeout is set to zero
    the keep-alive timer should be disabled.
    
    Signed-off-by: Amit Engel <amit.engel@dell.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e94a3d76305be949a7cd2d8d908663e08632ad7a
Author: Tom Rix <trix@redhat.com>
Date:   Thu Aug 20 06:19:32 2020 -0700

    hwmon: (applesmc) check status earlier.
    
    [ Upstream commit cecf7560f00a8419396a2ed0f6e5d245ccb4feac ]
    
    clang static analysis reports this representative problem
    
    applesmc.c:758:10: warning: 1st function call argument is an
      uninitialized value
            left = be16_to_cpu(*(__be16 *)(buffer + 6)) >> 2;
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    buffer is filled by the earlier call
    
            ret = applesmc_read_key(LIGHT_SENSOR_LEFT_KEY, ...
    
    This problem is reported because a goto skips the status check.
    Other similar problems use data from applesmc_read_key before checking
    the status.  So move the checks to before the use.
    
    Signed-off-by: Tom Rix <trix@redhat.com>
    Reviewed-by: Henrik Rydberg <rydberg@bitmath.org>
    Link: https://lore.kernel.org/r/20200820131932.10590-1-trix@redhat.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19583b280801b6ba4a36172113db42413860d1c4
Author: Krishna Manikandan <mkrishn@codeaurora.org>
Date:   Mon Jun 1 16:33:22 2020 +0530

    drm/msm: add shutdown support for display platform_driver
    
    [ Upstream commit 9d5cbf5fe46e350715389d89d0c350d83289a102 ]
    
    Define shutdown callback for display drm driver,
    so as to disable all the CRTCS when shutdown
    notification is received by the driver.
    
    This change will turn off the timing engine so
    that no display transactions are requested
    while mmu translations are getting disabled
    during reboot sequence.
    
    Signed-off-by: Krishna Manikandan <mkrishn@codeaurora.org>
    
    Changes in v2:
            - Remove NULL check from msm_pdev_shutdown (Stephen Boyd)
            - Change commit text to reflect when this issue
              was uncovered (Sai Prakash Ranjan)
    
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bc25dea70fe372be80b51dd4e8d0ec42e8f749c
Author: John Stultz <john.stultz@linaro.org>
Date:   Tue Aug 11 02:50:44 2020 +0000

    tty: serial: qcom_geni_serial: Drop __init from qcom_geni_console_setup
    
    [ Upstream commit 975efc66d4e654207c17f939eb737ac591ac38fe ]
    
    When booting with heavily modularized config, the serial console
    may not be able to load until after init when modules that
    satisfy needed dependencies have time to load.
    
    Unfortunately, as qcom_geni_console_setup is marked as __init,
    the function may have been freed before we get to run it,
    causing boot time crashes such as:
    
    [    6.469057] Unable to handle kernel paging request at virtual address ffffffe645d4e6cc
    [    6.481623] Mem abort info:
    [    6.484466]   ESR = 0x86000007
    [    6.487557]   EC = 0x21: IABT (current EL), IL = 32 bits
    [    6.492929]   SET = 0, FnV = 0g
    [    6.496016]   EA = 0, S1PTW = 0
    [    6.499202] swapper pgtable: 4k pages, 39-bit VAs, pgdp=000000008151e000
    [    6.501286] ufshcd-qcom 1d84000.ufshc: ufshcd_print_pwr_info:[RX, TX]: gear=[3, 3], lane[2, 2], pwr[FAST MODE, FAST MODE], rate = 2
    [    6.505977] [ffffffe645d4e6cc] pgd=000000017df9f003, p4d=000000017df9f003, pud=000000017df9f003, pmd=000000017df9c003, pte=0000000000000000
    [    6.505990] Internal error: Oops: 86000007 [#1] PREEMPT SMP
    [    6.505995] Modules linked in: zl10353 zl10039 zl10036 zd1301_demod xc5000 xc4000 ves1x93 ves1820 tuner_xc2028 tuner_simple tuner_types tua9001 tua6100 1
    [    6.506152]  isl6405
    [    6.518104] ufshcd-qcom 1d84000.ufshc: ufshcd_find_max_sup_active_icc_level: Regulator capability was not set, actvIccLevel=0
    [    6.530549]  horus3a helene fc2580 fc0013 fc0012 fc0011 ec100 e4000 dvb_pll ds3000 drxk drxd drx39xyj dib9000 dib8000 dib7000p dib7000m dib3000mc dibx003
    [    6.624271] CPU: 7 PID: 148 Comm: kworker/7:2 Tainted: G        W       5.8.0-mainline-12021-g6defd37ba1cd #3455
    [    6.624273] Hardware name: Thundercomm Dragonboard 845c (DT)
    [    6.624290] Workqueue: events deferred_probe_work_func
    [    6.624296] pstate: 40c00005 (nZcv daif +PAN +UAO BTYPE=--)
    [    6.624307] pc : qcom_geni_console_setup+0x0/0x110
    [    6.624316] lr : try_enable_new_console+0xa0/0x140
    [    6.624318] sp : ffffffc010843a30
    [    6.624320] x29: ffffffc010843a30 x28: ffffffe645c3e7d0
    [    6.624325] x27: ffffff80f8022180 x26: ffffffc010843b28
    [    6.637937] x25: 0000000000000000 x24: ffffffe6462a2000
    [    6.637941] x23: ffffffe646398000 x22: 0000000000000000
    [    6.637945] x21: 0000000000000000 x20: ffffffe6462a5ce8
    [    6.637952] x19: ffffffe646398e38 x18: ffffffffffffffff
    [    6.680296] x17: 0000000000000000 x16: ffffffe64492b900
    [    6.680300] x15: ffffffe6461e9d08 x14: 69202930203d2064
    [    6.680305] x13: 7561625f65736162 x12: 202c363331203d20
    [    6.696434] x11: 0000000000000030 x10: 0101010101010101
    [    6.696438] x9 : 4d4d20746120304d x8 : 7f7f7f7f7f7f7f7f
    [    6.707249] x7 : feff4c524c787373 x6 : 0000000000008080
    [    6.707253] x5 : 0000000000000000 x4 : 8080000000000000
    [    6.707257] x3 : 0000000000000000 x2 : ffffffe645d4e6cc
    [    6.744223] qcom_geni_serial 898000.serial: dev_pm_opp_set_rate: failed to find OPP for freq 102400000 (-34)
    [    6.744966] x1 : fffffffefe74e174 x0 : ffffffe6462a5ce8
    [    6.753580] qcom_geni_serial 898000.serial: dev_pm_opp_set_rate: failed to find OPP for freq 102400000 (-34)
    [    6.761634] Call trace:
    [    6.761639]  qcom_geni_console_setup+0x0/0x110
    [    6.761645]  register_console+0x29c/0x2f8
    [    6.767981] Bluetooth: hci0: Frame reassembly failed (-84)
    [    6.775252]  uart_add_one_port+0x438/0x500
    [    6.775258]  qcom_geni_serial_probe+0x2c4/0x4a8
    [    6.775266]  platform_drv_probe+0x58/0xa8
    [    6.855359]  really_probe+0xec/0x398
    [    6.855362]  driver_probe_device+0x5c/0xb8
    [    6.855367]  __device_attach_driver+0x98/0xb8
    [    7.184945]  bus_for_each_drv+0x74/0xd8
    [    7.188825]  __device_attach+0xec/0x148
    [    7.192705]  device_initial_probe+0x24/0x30
    [    7.196937]  bus_probe_device+0x9c/0xa8
    [    7.200816]  deferred_probe_work_func+0x7c/0xb8
    [    7.205398]  process_one_work+0x20c/0x4b0
    [    7.209456]  worker_thread+0x48/0x460
    [    7.213157]  kthread+0x14c/0x158
    [    7.216432]  ret_from_fork+0x10/0x18
    [    7.220049] Code: bad PC value
    [    7.223139] ---[ end trace 73f3b21e251d5a70 ]---
    
    Thus this patch removes the __init avoiding crash in such
    configs.
    
    Cc: Andy Gross <agross@kernel.org>
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Cc: Saravana Kannan <saravanak@google.com>
    Cc: Todd Kjos <tkjos@google.com>
    Cc: Amit Pundir <amit.pundir@linaro.org>
    Cc: linux-arm-msm@vger.kernel.org
    Cc: linux-serial@vger.kernel.org
    Suggested-by: Saravana Kannan <saravanak@google.com>
    Signed-off-by: John Stultz <john.stultz@linaro.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20200811025044.70626-1-john.stultz@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28ffe70a2e3307b81f7be13bcbc2922b275d442d
Author: Kalyan Thota <kalyan_t@codeaurora.org>
Date:   Thu Jul 30 19:08:56 2020 +0530

    drm/msm/dpu: Fix scale params in plane validation
    
    [ Upstream commit 4c978caf08aa155bdeadd9e2d4b026d4ce97ebd0 ]
    
    Plane validation uses an API drm_calc_scale which will
    return src/dst value as a scale ratio.
    
    when viewing the range on a scale the values should fall in as
    
    Upscale ratio < Unity scale < Downscale ratio for src/dst formula
    
    Fix the min and max scale ratios to suit the API accordingly.
    
    Signed-off-by: Kalyan Thota <kalyan_t@codeaurora.org>
    Tested-by: Kristian H. Kristensen <hoegsberg@google.com>
    Reviewed-by: Kristian H. Kristensen <hoegsberg@google.com>
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2fc347e2126bb4198391cf7fdbb9d9eb9874bf9
Author: Sebastian Parschauer <s.parschauer@gmx.de>
Date:   Mon Aug 17 10:36:28 2020 +0200

    HID: quirks: Always poll three more Lenovo PixArt mice
    
    [ Upstream commit 627a49975bdc3220f360a8237603a6344ee6a588 ]
    
    The PixArt OEM mice are known for disconnecting every minute in
    runlevel 1 or 3 if they are not always polled. One Lenovo PixArt
    mouse is already fixed. Got two references for 17ef:602e and three
    references for 17ef:6019 misbehaving like this. Got one direct bug
    report for 17ef:6093 from Wyatt Ward (wyatt8740). So add
    HID_QUIRK_ALWAYS_POLL for all of them.
    
    Link: https://github.com/sriemer/fix-linux-mouse issue 22
    Signed-off-by: Sebastian Parschauer <s.parschauer@gmx.de>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
