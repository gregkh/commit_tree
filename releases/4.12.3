commit 8f883aa5b6617e77841e2d2e6fe9c5e096d3ad55
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Jul 21 06:59:24 2017 +0200

    Linux 4.12.3

commit ec0056527bf07836ad5f3d145a61fb40798eb71e
Author: Haozhong Zhang <haozhong.zhang@intel.com>
Date:   Tue Jul 4 10:27:41 2017 +0800

    kvm: vmx: allow host to access guest MSR_IA32_BNDCFGS
    
    commit 691bd4340bef49cf7e5855d06cf24444b5bf2d85 upstream.
    
    It's easier for host applications, such as QEMU, if they can always
    access guest MSR_IA32_BNDCFGS in VMCS, even though MPX is disabled in
    guest cpuid.
    
    Signed-off-by: Haozhong Zhang <haozhong.zhang@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57dfd497215781188495aee2fe51cb4510efb15f
Author: Jim Mattson <jmattson@google.com>
Date:   Tue May 23 11:52:54 2017 -0700

    kvm: vmx: Check value written to IA32_BNDCFGS
    
    commit 4531662d1abf6c1f0e5c2b86ddb60e61509786c8 upstream.
    
    Bits 11:2 must be zero and the linear addess in bits 63:12 must be
    canonical. Otherwise, WRMSR(BNDCFGS) should raise #GP.
    
    Fixes: 0dd376e709975779 ("KVM: x86: add MSR_IA32_BNDCFGS to msrs_to_save")
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2fcf9884f004cf3c994ab112b473fe520689cfd3
Author: Jim Mattson <jmattson@google.com>
Date:   Wed May 24 10:49:25 2017 -0700

    kvm: x86: Guest BNDCFGS requires guest MPX support
    
    commit 4439af9f911ae0243ffe4e2dfc12bace49605d8b upstream.
    
    The BNDCFGS MSR should only be exposed to the guest if the guest
    supports MPX. (cf. the TSC_AUX MSR and RDTSCP.)
    
    Fixes: 0dd376e709975779 ("KVM: x86: add MSR_IA32_BNDCFGS to msrs_to_save")
    Change-Id: I3ad7c01bda616715137ceac878f3fa7e66b6b387
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09ae0c8639447300c5875edf5a304dd829650897
Author: Jim Mattson <jmattson@google.com>
Date:   Tue May 23 11:52:52 2017 -0700

    kvm: vmx: Do not disable intercepts for BNDCFGS
    
    commit a8b6fda38f80e75afa3b125c9e7f2550b579454b upstream.
    
    The MSR permission bitmaps are shared by all VMs. However, some VMs
    may not be configured to support MPX, even when the host does. If the
    host supports VMX and the guest does not, we should intercept accesses
    to the BNDCFGS MSR, so that we can synthesize a #GP
    fault. Furthermore, if the host does not support MPX and the
    "ignore_msrs" kvm kernel parameter is set, then we should intercept
    accesses to the BNDCFGS MSR, so that we can skip over the rdmsr/wrmsr
    without raising a #GP fault.
    
    Fixes: da8999d31818fdc8 ("KVM: x86: Intel MPX vmx and msr handle")
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b62226beb332defcf963de1b418d4b7612419d38
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Jul 10 10:21:40 2017 +0300

    PM / QoS: return -EINVAL for bogus strings
    
    commit 2ca30331c156ca9e97643ad05dd8930b8fe78b01 upstream.
    
    In the current code, if the user accidentally writes a bogus command to
    this sysfs file, then we set the latency tolerance to an uninitialized
    variable.
    
    Fixes: 2d984ad132a8 (PM / QoS: Introcuce latency tolerance device PM QoS type)
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0541514eb9d1661214c8b28de8b43143c299607
Author: Hui Wang <hui.wang@canonical.com>
Date:   Fri Jul 7 12:08:29 2017 +0800

    ALSA: hda/realtek - change the location for one of two front microphones
    
    commit f33f79f3d0e5caf04dd889cd7cf636261970f009 upstream.
    
    On this Lenovo machine, there are two front mics, and both of them are
    assigned the same name "Mic", but pulseaudio can't support two mics
    with the same name, as a workaround, we change the location for one of
    them, then the driver will assign "Front Mic" and "Mic" for them.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b2309de4cafacaaa46f9beb97dabace4bc64caf
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Thu Apr 27 19:02:21 2017 +0300

    ALSA: x86: Clear the pdata.notify_lpe_audio pointer before teardown
    
    commit 8d5c30308d7c5a17db96fa5452c0232f633377c2 upstream.
    
    Clear the notify function pointer in the platform data before we tear
    down the driver. Otherwise i915 would end up calling a stale function
    pointer and possibly explode.
    
    Cc: Takashi Iwai <tiwai@suse.de>
    Cc: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170427160231.13337-3-ville.syrjala@linux.intel.com
    Reviewed-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14f34e9e4c8f4e79f11020a6ca7a62e5902513bc
Author: Douglas Anderson <dianders@chromium.org>
Date:   Tue May 30 15:50:38 2017 -0700

    pstore: Fix leaked pstore_record in pstore_get_backend_records()
    
    commit f6525b96dd9f68efe374e5aef864975e628de991 upstream.
    
    When the "if (record->size <= 0)" test is true in
    pstore_get_backend_records() it's pretty clear that nobody holds a
    reference to the allocated pstore_record, yet we don't free it.
    
    Let's free it.
    
    Fixes: 2a2b0acf768c ("pstore: Allocate records on heap instead of stack")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8f82d6ea54cd2a21c2bcd8fb5cc076393140a2c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Jun 25 19:31:13 2017 +0200

    PM / wakeirq: Convert to SRCU
    
    commit ea0212f40c6bc0594c8eff79266759e3ecd4bacc upstream.
    
    The wakeirq infrastructure uses RCU to protect the list of wakeirqs. That
    breaks the irq bus locking infrastructure, which is allows sleeping
    functions to be called so interrupt controllers behind slow busses,
    e.g. i2c, can be handled.
    
    The wakeirq functions hold rcu_read_lock and call into irq functions, which
    in case of interrupts using the irq bus locking will trigger a
    might_sleep() splat.
    
    Convert the wakeirq infrastructure to Sleepable RCU and unbreak it.
    
    Fixes: 4990d4fe327b (PM / Wakeirq: Add automated device wake IRQ handling)
    Reported-by: Brian Norris <briannorris@chromium.org>
    Suggested-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Tested-by: Tony Lindgren <tony@atomide.com>
    Tested-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5ba2df79bc6ae02927d5465e93eb635809e6db5
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Apr 25 14:00:49 2017 +0200

    sched/topology: Fix overlapping sched_group_mask
    
    commit 73bb059f9b8a00c5e1bf2f7ca83138c05d05e600 upstream.
    
    The point of sched_group_mask is to select those CPUs from
    sched_group_cpus that can actually arrive at this balance domain.
    
    The current code gets it wrong, as can be readily demonstrated with a
    topology like:
    
      node   0   1   2   3
        0:  10  20  30  20
        1:  20  10  20  30
        2:  30  20  10  20
        3:  20  30  20  10
    
    Where (for example) domain 1 on CPU1 ends up with a mask that includes
    CPU0:
    
      [] CPU1 attaching sched-domain:
      []  domain 0: span 0-2 level NUMA
      []   groups: 1 (mask: 1), 2, 0
      []   domain 1: span 0-3 level NUMA
      []    groups: 0-2 (mask: 0-2) (cpu_capacity: 3072), 0,2-3 (cpu_capacity: 3072)
    
    This causes sched_balance_cpu() to compute the wrong CPU and
    consequently should_we_balance() will terminate early resulting in
    missed load-balance opportunities.
    
    The fixed topology looks like:
    
      [] CPU1 attaching sched-domain:
      []  domain 0: span 0-2 level NUMA
      []   groups: 1 (mask: 1), 2, 0
      []   domain 1: span 0-3 level NUMA
      []    groups: 0-2 (mask: 1) (cpu_capacity: 3072), 0,2-3 (cpu_capacity: 3072)
    
    (note: this relies on OVERLAP domains to always have children, this is
     true because the regular topology domains are still here -- this is
     before degenerate trimming)
    
    Debugged-by: Lauro Ramos Venancio <lvenanci@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Fixes: e3589f6c81e4 ("sched: Allow for overlapping sched_domain spans")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3397c1f0371a49f52635c9e60e552ef3c91fa10f
Author: Lauro Ramos Venancio <lvenanci@redhat.com>
Date:   Thu Apr 20 16:51:40 2017 -0300

    sched/topology: Optimize build_group_mask()
    
    commit f32d782e31bf079f600dcec126ed117b0577e85c upstream.
    
    The group mask is always used in intersection with the group CPUs. So,
    when building the group mask, we don't have to care about CPUs that are
    not part of the group.
    
    Signed-off-by: Lauro Ramos Venancio <lvenanci@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: lwang@redhat.com
    Cc: riel@redhat.com
    Link: http://lkml.kernel.org/r/1492717903-5195-2-git-send-email-lvenanci@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e64918b4b7c3bac472198d7b59b6092a78092169
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Apr 14 17:24:02 2017 +0200

    sched/topology: Fix building of overlapping sched-groups
    
    commit 0372dd2736e02672ac6e189c31f7d8c02ad543cd upstream.
    
    When building the overlapping groups, we very obviously should start
    with the previous domain of _this_ @cpu, not CPU-0.
    
    This can be readily demonstrated with a topology like:
    
      node   0   1   2   3
        0:  10  20  30  20
        1:  20  10  20  30
        2:  30  20  10  20
        3:  20  30  20  10
    
    Where (for example) CPU1 ends up generating the following nonsensical groups:
    
      [] CPU1 attaching sched-domain:
      []  domain 0: span 0-2 level NUMA
      []   groups: 1 2 0
      []   domain 1: span 0-3 level NUMA
      []    groups: 1-3 (cpu_capacity = 3072) 0-1,3 (cpu_capacity = 3072)
    
    Where the fact that domain 1 doesn't include a group with span 0-2 is
    the obvious fail.
    
    With patch this looks like:
    
      [] CPU1 attaching sched-domain:
      []  domain 0: span 0-2 level NUMA
      []   groups: 1 0 2
      []   domain 1: span 0-3 level NUMA
      []    groups: 0-2 (cpu_capacity = 3072) 0,2-3 (cpu_capacity = 3072)
    
    Debugged-by: Lauro Ramos Venancio <lvenanci@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Fixes: e3589f6c81e4 ("sched: Allow for overlapping sched_domain spans")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d37f1dea51054bf274c72b161166683c3c2caa08
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Wed Jul 5 19:23:28 2017 +0300

    sched/headers/uapi: Fix linux/sched/types.h userspace compilation errors
    
    commit 242fc35290bd8cf0effc6e3474e3a417985de2f3 upstream.
    
    Consistently use types provided by <linux/types.h> to fix the following
    linux/sched/types.h userspace compilation errors:
    
      /usr/include/linux/sched/types.h:57:2: error: unknown type name 'u32'
        u32 size;
      ...
      u64 sched_period;
    
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: e2d1e2aec572 ("sched/headers: Move various ABI definitions to <uapi/linux/sched/types.h>")
    Link: http://lkml.kernel.org/r/20170705162328.GA11026@altlinux.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24f4007514ad4bf78bda93200de6d2fd5c8d62d3
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Jul 13 13:16:56 2017 +0100

    KEYS: DH: validate __spare field
    
    commit 4f9dabfaf8df971f8a3b6aa324f8f817be38d538 upstream.
    
    Syscalls must validate that their reserved arguments are zero and return
    EINVAL otherwise.  Otherwise, it will be impossible to actually use them
    for anything in the future because existing programs may be passing
    garbage in.  This is standard practice when adding new APIs.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: James Morris <james.l.morris@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e724aa62501379bc0dde4811565e92e2c6a4686
Author: Horia Geantă <horia.geanta@nxp.com>
Date:   Fri Jul 7 16:57:06 2017 +0300

    crypto: caam - fix signals handling
    
    commit 7459e1d25ffefa2b1be799477fcc1f6c62f6cec7 upstream.
    
    Driver does not properly handle the case when signals interrupt
    wait_for_completion_interruptible():
    -it does not check for return value
    -completion structure is allocated on stack; in case a signal interrupts
    the sleep, it will go out of scope, causing the worker thread
    (caam_jr_dequeue) to fail when it accesses it
    
    wait_for_completion_interruptible() is replaced with uninterruptable
    wait_for_completion().
    We choose to block all signals while waiting for I/O (device executing
    the split key generation job descriptor) since the alternative - in
    order to have a deterministic device state - would be to flush the job
    ring (aborting *all* in-progress jobs).
    
    Fixes: 045e36780f115 ("crypto: caam - ahash hmac support")
    Fixes: 4c1ec1f930154 ("crypto: caam - refactor key_gen, sg")
    Signed-off-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b417497d293e2871c12557eef27422e59e0c531
Author: David Gstir <david@sigma-star.at>
Date:   Wed Jun 28 15:27:10 2017 +0200

    crypto: caam - properly set IV after {en,de}crypt
    
    commit 854b06f768794cd664886ec3ba3a5b1c58d42167 upstream.
    
    Certain cipher modes like CTS expect the IV (req->info) of
    ablkcipher_request (or equivalently req->iv of skcipher_request) to
    contain the last ciphertext block when the {en,de}crypt operation is done.
    This is currently not the case for the CAAM driver which in turn breaks
    e.g. cts(cbc(aes)) when the CAAM driver is enabled.
    
    This patch fixes the CAAM driver to properly set the IV after the
    {en,de}crypt operation of ablkcipher finishes.
    
    This issue was revealed by the changes in the SW CTS mode in commit
    0605c41cc53ca ("crypto: cts - Convert to skcipher")
    
    Signed-off-by: David Gstir <david@sigma-star.at>
    Reviewed-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cdd0a929031fc3aca9ec09c56ee729065cbc758
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Tue Jul 4 12:21:12 2017 +0800

    crypto: sha1-ssse3 - Disable avx2
    
    commit b82ce24426a4071da9529d726057e4e642948667 upstream.
    
    It has been reported that sha1-avx2 can cause page faults by reading
    beyond the end of the input.  This patch disables it until it can be
    fixed.
    
    Fixes: 7c1da8d0d046 ("crypto: sha - SHA1 transform x86_64 AVX2")
    Reported-by: Jan Stancek <jstancek@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c3e01eb64088447e95a6faaa272fef0dc93fda9
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Wed Jun 28 10:22:03 2017 +0300

    crypto: atmel - only treat EBUSY as transient if backlog
    
    commit 1606043f214f912a52195293614935811a6e3e53 upstream.
    
    The Atmel SHA driver was treating -EBUSY as indication of queueing
    to backlog without checking that backlog is enabled for the request.
    
    Fix it by checking request flags.
    
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ee2263b051ada227646317f1ddb1a5c66602c0c0
Author: Martin Hicks <mort@bork.org>
Date:   Tue May 2 09:38:35 2017 -0400

    crypto: talitos - Extend max key length for SHA384/512-HMAC and AEAD
    
    commit 03d2c5114c95797c0aa7d9f463348b171a274fd4 upstream.
    
    An updated patch that also handles the additional key length requirements
    for the AEAD algorithms.
    
    The max keysize is not 96.  For SHA384/512 it's 128, and for the AEAD
    algorithms it's longer still.  Extend the max keysize for the
    AEAD size for AES256 + HMAC(SHA512).
    
    Fixes: 357fb60502ede ("crypto: talitos - add sha224, sha384 and sha512 to existing AEAD algorithms")
    Signed-off-by: Martin Hicks <mort@bork.org>
    Acked-by: Horia Geantă <horia.geanta@nxp.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3210f0c30f27607a27e17d0e975d8d9252fd78e8
Author: Helge Deller <deller@gmx.de>
Date:   Fri Jul 14 14:49:38 2017 -0700

    mm: fix overflow check in expand_upwards()
    
    commit 37511fb5c91db93d8bd6e3f52f86e5a7ff7cfcdf upstream.
    
    JÃ¶rn Engel noticed that the expand_upwards() function might not return
    -ENOMEM in case the requested address is (unsigned long)-PAGE_SIZE and
    if the architecture didn't defined TASK_SIZE as multiple of PAGE_SIZE.
    
    Affected architectures are arm, frv, m68k, blackfin, h8300 and xtensa
    which all define TASK_SIZE as 0xffffffff, but since none of those have
    an upwards-growing stack we currently have no actual issue.
    
    Nevertheless let's fix this just in case any of the architectures with
    an upward-growing stack (currently parisc, metag and partly ia64) define
    TASK_SIZE similar.
    
    Link: http://lkml.kernel.org/r/20170702192452.GA11868@p100.box
    Fixes: bd726c90b6b8 ("Allow stack to grow up to address space limit")
    Signed-off-by: Helge Deller <deller@gmx.de>
    Reported-by: Jörn Engel <joern@purestorage.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f868013078e0d5a5dc0c0baf27e8f1f6043fbf4
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Jun 29 08:46:12 2017 -0700

    selftests/capabilities: Fix the test_execve test
    
    commit 796a3bae2fba6810427efdb314a1c126c9490fb3 upstream.
    
    test_execve does rather odd mount manipulations to safely create
    temporary setuid and setgid executables that aren't visible to the
    rest of the system.  Those executables end up in the test's cwd, but
    that cwd is MNT_DETACHed.
    
    The core namespace code considers MNT_DETACHed trees to belong to no
    mount namespace at all and, in general, MNT_DETACHed trees are only
    barely function.  This interacted with commit 380cf5ba6b0a ("fs:
    Treat foreign mounts as nosuid") to cause all MNT_DETACHed trees to
    act as though they're nosuid, breaking the test.
    
    Fix it by just not detaching the tree.  It's still in a private
    mount namespace and is therefore still invisible to the rest of the
    system (except via /proc, and the same nosuid logic will protect all
    other programs on the system from believing in test_execve's setuid
    bits).
    
    While we're at it, fix some blatant whitespace problems.
    
    Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
    Fixes: 380cf5ba6b0a ("fs: Treat foreign mounts as nosuid")
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Shuah Khan <shuahkh@osg.samsung.com>
    Cc: Greg KH <greg@kroah.com>
    Cc: linux-kselftest@vger.kernel.org
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 325824028e846f3875d3af8bba800a1b91a8d87d
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Oct 24 17:25:19 2016 -0500

    mnt: Make propagate_umount less slow for overlapping mount propagation trees
    
    commit 296990deb389c7da21c78030376ba244dc1badf5 upstream.
    
    Andrei Vagin pointed out that time to executue propagate_umount can go
    non-linear (and take a ludicrious amount of time) when the mount
    propogation trees of the mounts to be unmunted by a lazy unmount
    overlap.
    
    Make the walk of the mount propagation trees nearly linear by
    remembering which mounts have already been visited, allowing
    subsequent walks to detect when walking a mount propgation tree or a
    subtree of a mount propgation tree would be duplicate work and to skip
    them entirely.
    
    Walk the list of mounts whose propgatation trees need to be traversed
    from the mount highest in the mount tree to mounts lower in the mount
    tree so that odds are higher that the code will walk the largest trees
    first, allowing later tree walks to be skipped entirely.
    
    Add cleanup_umount_visitation to remover the code's memory of which
    mounts have been visited.
    
    Add the functions last_slave and skip_propagation_subtree to allow
    skipping appropriate parts of the mount propagation tree without
    needing to change the logic of the rest of the code.
    
    A script to generate overlapping mount propagation trees:
    
    $ cat runs.h
    set -e
    mount -t tmpfs zdtm /mnt
    mkdir -p /mnt/1 /mnt/2
    mount -t tmpfs zdtm /mnt/1
    mount --make-shared /mnt/1
    mkdir /mnt/1/1
    
    iteration=10
    if [ -n "$1" ] ; then
            iteration=$1
    fi
    
    for i in $(seq $iteration); do
            mount --bind /mnt/1/1 /mnt/1/1
    done
    
    mount --rbind /mnt/1 /mnt/2
    
    TIMEFORMAT='%Rs'
    nr=$(( ( 2 ** ( $iteration + 1 ) ) + 1 ))
    echo -n "umount -l /mnt/1 -> $nr        "
    time umount -l /mnt/1
    
    nr=$(cat /proc/self/mountinfo | grep zdtm | wc -l )
    time umount -l /mnt/2
    
    $ for i in $(seq 9 19); do echo $i; unshare -Urm bash ./run.sh $i; done
    
    Here are the performance numbers with and without the patch:
    
         mhash |  8192   |  8192  | 1048576 | 1048576
        mounts | before  | after  |  before | after
        ------------------------------------------------
          1025 |  0.040s | 0.016s |  0.038s | 0.019s
          2049 |  0.094s | 0.017s |  0.080s | 0.018s
          4097 |  0.243s | 0.019s |  0.206s | 0.023s
          8193 |  1.202s | 0.028s |  1.562s | 0.032s
         16385 |  9.635s | 0.036s |  9.952s | 0.041s
         32769 | 60.928s | 0.063s | 44.321s | 0.064s
         65537 |         | 0.097s |         | 0.097s
        131073 |         | 0.233s |         | 0.176s
        262145 |         | 0.653s |         | 0.344s
        524289 |         | 2.305s |         | 0.735s
       1048577 |         | 7.107s |         | 2.603s
    
    Andrei Vagin reports fixing the performance problem is part of the
    work to fix CVE-2016-6213.
    
    Fixes: a05964f3917c ("[PATCH] shared mounts handling: umount")
    Reported-by: Andrei Vagin <avagin@openvz.org>
    Reviewed-by: Andrei Vagin <avagin@virtuozzo.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81311d1698c0c87c972ba71d3ce44a617b52ea21
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Oct 24 16:16:13 2016 -0500

    mnt: In propgate_umount handle visiting mounts in any order
    
    commit 99b19d16471e9c3faa85cad38abc9cbbe04c6d55 upstream.
    
    While investigating some poor umount performance I realized that in
    the case of overlapping mount trees where some of the mounts are locked
    the code has been failing to unmount all of the mounts it should
    have been unmounting.
    
    This failure to unmount all of the necessary
    mounts can be reproduced with:
    
    $ cat locked_mounts_test.sh
    
    mount -t tmpfs test-base /mnt
    mount --make-shared /mnt
    mkdir -p /mnt/b
    
    mount -t tmpfs test1 /mnt/b
    mount --make-shared /mnt/b
    mkdir -p /mnt/b/10
    
    mount -t tmpfs test2 /mnt/b/10
    mount --make-shared /mnt/b/10
    mkdir -p /mnt/b/10/20
    
    mount --rbind /mnt/b /mnt/b/10/20
    
    unshare -Urm --propagation unchaged /bin/sh -c 'sleep 5; if [ $(grep test /proc/self/mountinfo | wc -l) -eq 1 ] ; then echo SUCCESS ; else echo FAILURE ; fi'
    sleep 1
    umount -l /mnt/b
    wait %%
    
    $ unshare -Urm ./locked_mounts_test.sh
    
    This failure is corrected by removing the prepass that marks mounts
    that may be umounted.
    
    A first pass is added that umounts mounts if possible and if not sets
    mount mark if they could be unmounted if they weren't locked and adds
    them to a list to umount possibilities.  This first pass reconsiders
    the mounts parent if it is on the list of umount possibilities, ensuring
    that information of umoutability will pass from child to mount parent.
    
    A second pass then walks through all mounts that are umounted and processes
    their children unmounting them or marking them for reparenting.
    
    A last pass cleans up the state on the mounts that could not be umounted
    and if applicable reparents them to their first parent that remained
    mounted.
    
    While a bit longer than the old code this code is much more robust
    as it allows information to flow up from the leaves and down
    from the trunk making the order in which mounts are encountered
    in the umount propgation tree irrelevant.
    
    Fixes: 0c56fe31420c ("mnt: Don't propagate unmounts to locked mounts")
    Reviewed-by: Andrei Vagin <avagin@virtuozzo.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26502fb8cee0f716ee5f3fbd143d879605edc4f5
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon May 15 14:42:07 2017 -0500

    mnt: In umount propagation reparent in a separate pass
    
    commit 570487d3faf2a1d8a220e6ee10f472163123d7da upstream.
    
    It was observed that in some pathlogical cases that the current code
    does not unmount everything it should.  After investigation it
    was determined that the issue is that mnt_change_mntpoint can
    can change which mounts are available to be unmounted during mount
    propagation which is wrong.
    
    The trivial reproducer is:
    $ cat ./pathological.sh
    
    mount -t tmpfs test-base /mnt
    cd /mnt
    mkdir 1 2 1/1
    mount --bind 1 1
    mount --make-shared 1
    mount --bind 1 2
    mount --bind 1/1 1/1
    mount --bind 1/1 1/1
    echo
    grep test-base /proc/self/mountinfo
    umount 1/1
    echo
    grep test-base /proc/self/mountinfo
    
    $ unshare -Urm ./pathological.sh
    
    The expected output looks like:
    46 31 0:25 / /mnt rw,relatime - tmpfs test-base rw,uid=1000,gid=1000
    47 46 0:25 /1 /mnt/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    48 46 0:25 /1 /mnt/2 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    49 54 0:25 /1/1 /mnt/1/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    50 53 0:25 /1/1 /mnt/2/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    51 49 0:25 /1/1 /mnt/1/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    54 47 0:25 /1/1 /mnt/1/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    53 48 0:25 /1/1 /mnt/2/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    52 50 0:25 /1/1 /mnt/2/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    
    46 31 0:25 / /mnt rw,relatime - tmpfs test-base rw,uid=1000,gid=1000
    47 46 0:25 /1 /mnt/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    48 46 0:25 /1 /mnt/2 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    
    The output without the fix looks like:
    46 31 0:25 / /mnt rw,relatime - tmpfs test-base rw,uid=1000,gid=1000
    47 46 0:25 /1 /mnt/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    48 46 0:25 /1 /mnt/2 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    49 54 0:25 /1/1 /mnt/1/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    50 53 0:25 /1/1 /mnt/2/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    51 49 0:25 /1/1 /mnt/1/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    54 47 0:25 /1/1 /mnt/1/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    53 48 0:25 /1/1 /mnt/2/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    52 50 0:25 /1/1 /mnt/2/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    
    46 31 0:25 / /mnt rw,relatime - tmpfs test-base rw,uid=1000,gid=1000
    47 46 0:25 /1 /mnt/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    48 46 0:25 /1 /mnt/2 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    52 48 0:25 /1/1 /mnt/2/1 rw,relatime shared:1 - tmpfs test-base rw,uid=1000,gid=1000
    
    That last mount in the output was in the propgation tree to be unmounted but
    was missed because the mnt_change_mountpoint changed it's parent before the walk
    through the mount propagation tree observed it.
    
    Fixes: 1064f874abc0 ("mnt: Tuck mounts under others instead of creating shadow/side mounts.")
    Acked-by: Andrei Vagin <avagin@virtuozzo.com>
    Reviewed-by: Ram Pai <linuxram@us.ibm.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2b71d2930920aba427c0814e61ddb8126a4dcf0e
Author: Michael Kelley <mikelley@microsoft.com>
Date:   Thu May 18 10:46:07 2017 -0700

    Drivers: hv: vmbus: Close timing hole that can corrupt per-cpu page
    
    commit 13b9abfc92be7c4454bff912021b9f835dea6e15 upstream.
    
    Extend the disabling of preemption to include the hypercall so that
    another thread can't get the CPU and corrupt the per-cpu page used
    for hypercall arguments.
    
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e559d0973a2218e13519caaf67c003529321610
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Jun 9 10:59:07 2017 +0100

    nvmem: core: fix leaks on registration errors
    
    commit 3360acdf839170b612f5b212539694c20e3f16d0 upstream.
    
    Make sure to deregister and release the nvmem device and underlying
    memory on registration errors.
    
    Note that the private data must be freed using put_device() once the
    struct device has been initialised.
    
    Also note that there's a related reference leak in the deregistration
    function as reported by Mika Westerberg which is being fixed separately.
    
    Fixes: b6c217ab9be6 ("nvmem: Add backwards compatibility support for older EEPROM drivers.")
    Fixes: eace75cfdcf7 ("nvmem: Add a simple NVMEM framework for nvmem providers")
    Cc: Andrew Lunn <andrew@lunn.ch>
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Acked-by: Andrey Smirnov <andrew.smirnov@gmail.com>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5e9bfe6db68afd6fc477acbc827a07e9204fc7d
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Fri Apr 28 20:11:09 2017 -0700

    rcu: Add memory barriers for NOCB leader wakeup
    
    commit 6b5fc3a1331810db407c9e0e673dc1837afdc9d0 upstream.
    
    Wait/wakeup operations do not guarantee ordering on their own.  Instead,
    either locking or memory barriers are required.  This commit therefore
    adds memory barriers to wake_nocb_leader() and nocb_leader_wait().
    
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Tested-by: Krister Johansen <kjlx@templeofstupid.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 101cbdea05f786852e37cf88ff0c03ac45883d60
Author: Adam Borowski <kilobyte@angband.pl>
Date:   Sat Jun 3 09:35:06 2017 +0200

    vt: fix unchecked __put_user() in tioclinux ioctls
    
    commit 6987dc8a70976561d22450b5858fc9767788cc1c upstream.
    
    Only read access is checked before this call.
    
    Actually, at the moment this is not an issue, as every in-tree arch does
    the same manual checks for VERIFY_READ vs VERIFY_WRITE, relying on the MMU
    to tell them apart, but this wasn't the case in the past and may happen
    again on some odd arch in the future.
    
    If anyone cares about 3.7 and earlier, this is a security hole (untested)
    on real 80386 CPUs.
    
    Signed-off-by: Adam Borowski <kilobyte@angband.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6eed40fe279b097dd3220c062e003a533699de0
Author: Dong Bo <dongbo4@huawei.com>
Date:   Tue Apr 25 14:11:29 2017 +0800

    arm64: Preventing READ_IMPLIES_EXEC propagation
    
    commit 48f99c8ec0b25756d0283ab058826ae07d14fad7 upstream.
    
    Like arch/arm/, we inherit the READ_IMPLIES_EXEC personality flag across
    fork(). This is undesirable for a number of reasons:
    
      * ELF files that don't require executable stack can end up with it
        anyway
    
      * We end up performing un-necessary I-cache maintenance when mapping
        what should be non-executable pages
    
      * Restricting what is executable is generally desirable when defending
        against overflow attacks
    
    This patch clears the personality flag when setting up the personality for
    newly spwaned native tasks. Given that semi-recent AArch64 toolchains emit
    a non-executable PT_GNU_STACK header, userspace applications can already
    not rely on READ_IMPLIES_EXEC so shouldn't be adversely affected by this
    change.
    
    Reported-by: Peter Maydell <peter.maydell@linaro.org>
    Signed-off-by: Dong Bo <dongbo4@huawei.com>
    [will: added comment to compat code, rewrote commit message]
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc1974ee44f99f317774188fe2d33ed52015d843
Author: Marc Zyngier <maz@kernel.org>
Date:   Wed Jun 21 22:45:08 2017 +0100

    ARM64: dts: marvell: armada37xx: Fix timer interrupt specifiers
    
    commit 88cda00733f0731711c76e535d4972c296ac512e upstream.
    
    Contrary to popular belief, PPIs connected to a GICv3 to not have
    an affinity field similar to that of GICv2. That is consistent
    with the fact that GICv3 is designed to accomodate thousands of
    CPUs, and fitting them as a bitmap in a byte is... difficult.
    
    Fixes: adbc3695d9e4 ("arm64: dts: add the Marvell Armada 3700 family and a development board")
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f43bc7125e53302421a0683e12a17c94ccbb374
Author: Balbir Singh <bsingharora@gmail.com>
Date:   Thu Jun 29 21:57:26 2017 +1000

    powerpc/kexec: Fix radix to hash kexec due to IAMR/AMOR
    
    commit 1e2a516e89fc412a754327522ab271b42f99c6b4 upstream.
    
    This patch fixes a crash seen while doing a kexec from radix mode to
    hash mode. Key 0 is special in hash and used in the RPN by default, we
    set the key values to 0 today. In radix mode key 0 is used to control
    supervisor<->user access. In hash key 0 is used by default, so the
    first instruction after the switch causes a crash on kexec.
    
    Commit 3b10d0095a1e ("powerpc/mm/radix: Prevent kernel execution of
    user space") introduced the setting of IAMR and AMOR values to prevent
    execution of user mode instructions from supervisor mode. We need to
    clean up these SPR's on kexec.
    
    Fixes: 3b10d0095a1e ("powerpc/mm/radix: Prevent kernel execution of user space")
    Reported-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Balbir Singh <bsingharora@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c1152f1638c53af9ec782d77f3f2e6f6c8fb9b0a
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Jul 7 11:57:29 2017 -0700

    exec: Limit arg stack to at most 75% of _STK_LIM
    
    commit da029c11e6b12f321f36dac8771e833b65cec962 upstream.
    
    To avoid pathological stack usage or the need to special-case setuid
    execs, just limit all arg stack usage to at most 75% of _STK_LIM (6MB).
    
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2ea4661b8d8057c116ca8773d24ba55523e0f2e
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Jul 10 15:52:51 2017 -0700

    s390: reduce ELF_ET_DYN_BASE
    
    commit a73dc5370e153ac63718d850bddf0c9aa9d871e6 upstream.
    
    Now that explicitly executed loaders are loaded in the mmap region, we
    have more freedom to decide where we position PIE binaries in the
    address space to avoid possible collisions with mmap or stack regions.
    
    For 64-bit, align to 4GB to allow runtimes to use the entire 32-bit
    address space for 32-bit pointers.  On 32-bit use 4MB, which is the
    traditional x86 minimum load location, likely to avoid historically
    requiring a 4MB page table entry when only a portion of the first 4MB
    would be used (since the NULL address is avoided).  For s390 the
    position could be 0x10000, but that is needlessly close to the NULL
    address.
    
    Link: http://lkml.kernel.org/r/1498154792-49952-5-git-send-email-keescook@chromium.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Pratyush Anand <panand@redhat.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2aac396b47221e6b097a995bb0ccacf16614bfc0
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Jul 10 15:52:47 2017 -0700

    powerpc: move ELF_ET_DYN_BASE to 4GB / 4MB
    
    commit 47ebb09d54856500c5a5e14824781902b3bb738e upstream.
    
    Now that explicitly executed loaders are loaded in the mmap region, we
    have more freedom to decide where we position PIE binaries in the
    address space to avoid possible collisions with mmap or stack regions.
    
    For 64-bit, align to 4GB to allow runtimes to use the entire 32-bit
    address space for 32-bit pointers.  On 32-bit use 4MB, which is the
    traditional x86 minimum load location, likely to avoid historically
    requiring a 4MB page table entry when only a portion of the first 4MB
    would be used (since the NULL address is avoided).
    
    Link: http://lkml.kernel.org/r/1498154792-49952-4-git-send-email-keescook@chromium.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Tested-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Pratyush Anand <panand@redhat.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 465104c13c45fc51ef62d25a49af14aa9bdd6891
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Jul 10 15:52:44 2017 -0700

    arm64: move ELF_ET_DYN_BASE to 4GB / 4MB
    
    commit 02445990a96e60a67526510d8b00f7e3d14101c3 upstream.
    
    Now that explicitly executed loaders are loaded in the mmap region, we
    have more freedom to decide where we position PIE binaries in the
    address space to avoid possible collisions with mmap or stack regions.
    
    For 64-bit, align to 4GB to allow runtimes to use the entire 32-bit
    address space for 32-bit pointers.  On 32-bit use 4MB, to match ARM.
    This could be 0x8000, the standard ET_EXEC load address, but that is
    needlessly close to the NULL address, and anyone running arm compat PIE
    will have an MMU, so the tight mapping is not needed.
    
    Link: http://lkml.kernel.org/r/1498251600-132458-4-git-send-email-keescook@chromium.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83f266e8d4b3ab766e70092d1f143a94f04c8560
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Jul 10 15:52:40 2017 -0700

    arm: move ELF_ET_DYN_BASE to 4MB
    
    commit 6a9af90a3bcde217a1c053e135f5f43e5d5fafbd upstream.
    
    Now that explicitly executed loaders are loaded in the mmap region, we
    have more freedom to decide where we position PIE binaries in the
    address space to avoid possible collisions with mmap or stack regions.
    
    4MB is chosen here mainly to have parity with x86, where this is the
    traditional minimum load location, likely to avoid historically
    requiring a 4MB page table entry when only a portion of the first 4MB
    would be used (since the NULL address is avoided).
    
    For ARM the position could be 0x8000, the standard ET_EXEC load address,
    but that is needlessly close to the NULL address, and anyone running PIE
    on 32-bit ARM will have an MMU, so the tight mapping is not needed.
    
    Link: http://lkml.kernel.org/r/1498154792-49952-2-git-send-email-keescook@chromium.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Pratyush Anand <panand@redhat.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Daniel Micay <danielmicay@gmail.com>
    Cc: Dmitry Safonov <dsafonov@virtuozzo.com>
    Cc: Grzegorz Andrejczuk <grzegorz.andrejczuk@intel.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Qualys Security Advisory <qsa@qualys.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c9fd20c4ca8fb97f40ea66a2db39f1f9c85797d
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Jul 10 15:52:37 2017 -0700

    binfmt_elf: use ELF_ET_DYN_BASE only for PIE
    
    commit eab09532d40090698b05a07c1c87f39fdbc5fab5 upstream.
    
    The ELF_ET_DYN_BASE position was originally intended to keep loaders
    away from ET_EXEC binaries.  (For example, running "/lib/ld-linux.so.2
    /bin/cat" might cause the subsequent load of /bin/cat into where the
    loader had been loaded.)
    
    With the advent of PIE (ET_DYN binaries with an INTERP Program Header),
    ELF_ET_DYN_BASE continued to be used since the kernel was only looking
    at ET_DYN.  However, since ELF_ET_DYN_BASE is traditionally set at the
    top 1/3rd of the TASK_SIZE, a substantial portion of the address space
    is unused.
    
    For 32-bit tasks when RLIMIT_STACK is set to RLIM_INFINITY, programs are
    loaded above the mmap region.  This means they can be made to collide
    (CVE-2017-1000370) or nearly collide (CVE-2017-1000371) with
    pathological stack regions.
    
    Lowering ELF_ET_DYN_BASE solves both by moving programs below the mmap
    region in all cases, and will now additionally avoid programs falling
    back to the mmap region by enforcing MAP_FIXED for program loads (i.e.
    if it would have collided with the stack, now it will fail to load
    instead of falling back to the mmap region).
    
    To allow for a lower ELF_ET_DYN_BASE, loaders (ET_DYN without INTERP)
    are loaded into the mmap region, leaving space available for either an
    ET_EXEC binary with a fixed location or PIE being loaded into mmap by
    the loader.  Only PIE programs are loaded offset from ELF_ET_DYN_BASE,
    which means architectures can now safely lower their values without risk
    of loaders colliding with their subsequently loaded programs.
    
    For 64-bit, ELF_ET_DYN_BASE is best set to 4GB to allow runtimes to use
    the entire 32-bit address space for 32-bit pointers.
    
    Thanks to PaX Team, Daniel Micay, and Rik van Riel for inspiration and
    suggestions on how to implement this solution.
    
    Fixes: d1fd836dcf00 ("mm: split ET_DYN ASLR from mmap ASLR")
    Link: http://lkml.kernel.org/r/20170621173201.GA114489@beast
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Acked-by: Rik van Riel <riel@redhat.com>
    Cc: Daniel Micay <danielmicay@gmail.com>
    Cc: Qualys Security Advisory <qsa@qualys.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Alexander Viro <viro@zeniv.linux.org.uk>
    Cc: Dmitry Safonov <dsafonov@virtuozzo.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Grzegorz Andrejczuk <grzegorz.andrejczuk@intel.com>
    Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: James Hogan <james.hogan@imgtec.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Pratyush Anand <panand@redhat.com>
    Cc: Russell King <linux@armlinux.org.uk>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93b3ced9691894de7989bac350b40ea0361e4fdd
Author: Cyril Bur <cyrilbur@gmail.com>
Date:   Mon Jul 10 15:52:21 2017 -0700

    checkpatch: silence perl 5.26.0 unescaped left brace warnings
    
    commit 8d81ae05d0176da1c54aeaed697fa34be5c5575e upstream.
    
    As of perl 5, version 26, subversion 0 (v5.26.0) some new warnings have
    occurred when running checkpatch.
    
    Unescaped left brace in regex is deprecated here (and will be fatal in
    Perl 5.30), passed through in regex; marked by <-- HERE in m/^(.\s*){
    <-- HERE \s*/ at scripts/checkpatch.pl line 3544.
    
    Unescaped left brace in regex is deprecated here (and will be fatal in
    Perl 5.30), passed through in regex; marked by <-- HERE in m/^(.\s*){
    <-- HERE \s*/ at scripts/checkpatch.pl line 3885.
    
    Unescaped left brace in regex is deprecated here (and will be fatal in
    Perl 5.30), passed through in regex; marked by <-- HERE in
    m/^(\+.*(?:do|\))){ <-- HERE / at scripts/checkpatch.pl line 4374.
    
    It seems perfectly reasonable to do as the warning suggests and simply
    escape the left brace in these three locations.
    
    Link: http://lkml.kernel.org/r/20170607060135.17384-1-cyrilbur@gmail.com
    Signed-off-by: Cyril Bur <cyrilbur@gmail.com>
    Acked-by: Joe Perches <joe@perches.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ac2a118b4dc04edcef7049a493a97e0e4bc6c1f
Author: Sahitya Tummala <stummala@codeaurora.org>
Date:   Mon Jul 10 15:50:00 2017 -0700

    fs/dcache.c: fix spin lockup issue on nlru->lock
    
    commit b17c070fb624cf10162cf92ea5e1ec25cd8ac176 upstream.
    
    __list_lru_walk_one() acquires nlru spin lock (nlru->lock) for longer
    duration if there are more number of items in the lru list.  As per the
    current code, it can hold the spin lock for upto maximum UINT_MAX
    entries at a time.  So if there are more number of items in the lru
    list, then "BUG: spinlock lockup suspected" is observed in the below
    path:
    
      spin_bug+0x90
      do_raw_spin_lock+0xfc
      _raw_spin_lock+0x28
      list_lru_add+0x28
      dput+0x1c8
      path_put+0x20
      terminate_walk+0x3c
      path_lookupat+0x100
      filename_lookup+0x6c
      user_path_at_empty+0x54
      SyS_faccessat+0xd0
      el0_svc_naked+0x24
    
    This nlru->lock is acquired by another CPU in this path -
    
      d_lru_shrink_move+0x34
      dentry_lru_isolate_shrink+0x48
      __list_lru_walk_one.isra.10+0x94
      list_lru_walk_node+0x40
      shrink_dcache_sb+0x60
      do_remount_sb+0xbc
      do_emergency_remount+0xb0
      process_one_work+0x228
      worker_thread+0x2e0
      kthread+0xf4
      ret_from_fork+0x10
    
    Fix this lockup by reducing the number of entries to be shrinked from
    the lru list to 1024 at once.  Also, add cond_resched() before
    processing the lru list again.
    
    Link: http://marc.info/?t=149722864900001&r=1&w=2
    Link: http://lkml.kernel.org/r/1498707575-2472-1-git-send-email-stummala@codeaurora.org
    Signed-off-by: Sahitya Tummala <stummala@codeaurora.org>
    Suggested-by: Jan Kara <jack@suse.cz>
    Suggested-by: Vladimir Davydov <vdavydov.dev@gmail.com>
    Acked-by: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Alexander Polakov <apolyakov@beget.ru>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fa881d9e31c40f8d64f0b933a097ffd976647fd
Author: Sahitya Tummala <stummala@codeaurora.org>
Date:   Mon Jul 10 15:49:57 2017 -0700

    mm/list_lru.c: fix list_lru_count_node() to be race free
    
    commit 2c80cd57c74339889a8752b20862a16c28929c3a upstream.
    
    list_lru_count_node() iterates over all memcgs to get the total number of
    entries on the node but it can race with memcg_drain_all_list_lrus(),
    which migrates the entries from a dead cgroup to another.  This can return
    incorrect number of entries from list_lru_count_node().
    
    Fix this by keeping track of entries per node and simply return it in
    list_lru_count_node().
    
    Link: http://lkml.kernel.org/r/1498707555-30525-1-git-send-email-stummala@codeaurora.org
    Signed-off-by: Sahitya Tummala <stummala@codeaurora.org>
    Acked-by: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Jan Kara <jack@suse.cz>
    Cc: Alexander Polakov <apolyakov@beget.ru>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1a6709a1877f78d1bc1c69cd7e37cf8f96a851e
Author: Marcin Nowakowski <marcin.nowakowski@mips.com>
Date:   Thu Jul 6 15:35:31 2017 -0700

    kernel/extable.c: mark core_kernel_text notrace
    
    commit c0d80ddab89916273cb97114889d3f337bc370ae upstream.
    
    core_kernel_text is used by MIPS in its function graph trace processing,
    so having this method traced leads to an infinite set of recursive calls
    such as:
    
      Call Trace:
         ftrace_return_to_handler+0x50/0x128
         core_kernel_text+0x10/0x1b8
         prepare_ftrace_return+0x6c/0x114
         ftrace_graph_caller+0x20/0x44
         return_to_handler+0x10/0x30
         return_to_handler+0x0/0x30
         return_to_handler+0x0/0x30
         ftrace_ops_no_ops+0x114/0x1bc
         core_kernel_text+0x10/0x1b8
         core_kernel_text+0x10/0x1b8
         core_kernel_text+0x10/0x1b8
         ftrace_ops_no_ops+0x114/0x1bc
         core_kernel_text+0x10/0x1b8
         prepare_ftrace_return+0x6c/0x114
         ftrace_graph_caller+0x20/0x44
         (...)
    
    Mark the function notrace to avoid it being traced.
    
    Link: http://lkml.kernel.org/r/1498028607-6765-1-git-send-email-marcin.nowakowski@imgtec.com
    Signed-off-by: Marcin Nowakowski <marcin.nowakowski@imgtec.com>
    Reviewed-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Meyer <thomas@m3y3r.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a6fcf5fa98ef7567ba5e170b8d0dbc21e78206d
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Jul 6 15:35:28 2017 -0700

    thp, mm: fix crash due race in MADV_FREE handling
    
    commit bbf29ffc7f963bb894f84f0580c70cfea01c3892 upstream.
    
    Reinette reported the following crash:
    
      BUG: Bad page state in process log2exe  pfn:57600
      page:ffffea00015d8000 count:0 mapcount:0 mapping:          (null) index:0x20200
      flags: 0x4000000000040019(locked|uptodate|dirty|swapbacked)
      raw: 4000000000040019 0000000000000000 0000000000020200 00000000ffffffff
      raw: ffffea00015d8020 ffffea00015d8020 0000000000000000 0000000000000000
      page dumped because: PAGE_FLAGS_CHECK_AT_FREE flag(s) set
      bad because of flags: 0x1(locked)
      Modules linked in: rfcomm 8021q bnep intel_rapl x86_pkg_temp_thermal coretemp efivars btusb btrtl btbcm pwm_lpss_pci snd_hda_codec_hdmi btintel pwm_lpss snd_hda_codec_realtek snd_soc_skl snd_hda_codec_generic snd_soc_skl_ipc spi_pxa2xx_platform snd_soc_sst_ipc snd_soc_sst_dsp i2c_designware_platform i2c_designware_core snd_hda_ext_core snd_soc_sst_match snd_hda_intel snd_hda_codec mei_me snd_hda_core mei snd_soc_rt286 snd_soc_rl6347a snd_soc_core efivarfs
      CPU: 1 PID: 354 Comm: log2exe Not tainted 4.12.0-rc7-test-test #19
      Hardware name: Intel corporation NUC6CAYS/NUC6CAYB, BIOS AYAPLCEL.86A.0027.2016.1108.1529 11/08/2016
      Call Trace:
       bad_page+0x16a/0x1f0
       free_pages_check_bad+0x117/0x190
       free_hot_cold_page+0x7b1/0xad0
       __put_page+0x70/0xa0
       madvise_free_huge_pmd+0x627/0x7b0
       madvise_free_pte_range+0x6f8/0x1150
       __walk_page_range+0x6b5/0xe30
       walk_page_range+0x13b/0x310
       madvise_free_page_range.isra.16+0xad/0xd0
       madvise_free_single_vma+0x2e4/0x470
       SyS_madvise+0x8ce/0x1450
    
    If somebody frees the page under us and we hold the last reference to
    it, put_page() would attempt to free the page before unlocking it.
    
    The fix is trivial reorder of operations.
    
    Dave said:
     "I came up with the exact same patch.  For posterity, here's the test
      case, generated by syzkaller and trimmed down by Reinette:
    
            https://www.sr71.net/~dave/intel/log2.c
    
      And the config that helps detect this:
    
            https://www.sr71.net/~dave/intel/config-log2"
    
    Fixes: b8d3c4c3009d ("mm/huge_memory.c: don't split THP page when MADV_FREE syscall is called")
    Link: http://lkml.kernel.org/r/20170628101249.17879-1-kirill.shutemov@linux.intel.com
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Reported-by: Reinette Chatre <reinette.chatre@intel.com>
    Acked-by: Dave Hansen <dave.hansen@intel.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Cc: Huang Ying <ying.huang@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c53c2a4d372fcb3cac1dc0079c6ac2604c079f18
Author: David Rientjes <rientjes@google.com>
Date:   Thu Jul 6 15:35:24 2017 -0700

    compiler, clang: always inline when CONFIG_OPTIMIZE_INLINING is disabled
    
    commit 9a04dbcfb33b4012d0ce8c0282f1e3ca694675b1 upstream.
    
    The motivation for commit abb2ea7dfd82 ("compiler, clang: suppress
    warning for unused static inline functions") was to suppress clang's
    warnings about unused static inline functions.
    
    For configs without CONFIG_OPTIMIZE_INLINING enabled, such as any non-x86
    architecture, `inline' in the kernel implies that
    __attribute__((always_inline)) is used.
    
    Some code depends on that behavior, see
      https://lkml.org/lkml/2017/6/13/918:
    
      net/built-in.o: In function `__xchg_mb':
      arch/arm64/include/asm/cmpxchg.h:99: undefined reference to `__compiletime_assert_99'
      arch/arm64/include/asm/cmpxchg.h:99: undefined reference to `__compiletime_assert_99
    
    The full fix would be to identify these breakages and annotate the
    functions with __always_inline instead of `inline'.  But since we are
    late in the 4.12-rc cycle, simply carry forward the forced inlining
    behavior and work toward moving arm64, and other architectures, toward
    CONFIG_OPTIMIZE_INLINING behavior.
    
    Link: http://lkml.kernel.org/r/alpine.DEB.2.10.1706261552200.1075@chino.kir.corp.google.com
    Signed-off-by: David Rientjes <rientjes@google.com>
    Reported-by: Sodagudi Prasad <psodagud@codeaurora.org>
    Tested-by: Sodagudi Prasad <psodagud@codeaurora.org>
    Tested-by: Matthias Kaehlcke <mka@chromium.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 921f4e22a415e50ce27707e0d618c5bc40b74ef0
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Thu May 25 12:58:33 2017 +0000

    tools/lib/lockdep: Reduce MAX_LOCK_DEPTH to avoid overflowing lock_chain/: Depth
    
    commit 98dcea0cfd04e083ac74137ceb9a632604740e2d upstream.
    
    liblockdep has been broken since commit 75dd602a5198 ("lockdep: Fix
    lock_chain::base size"), as that adds a check that MAX_LOCK_DEPTH is
    within the range of lock_chain::depth and in liblockdep it is much
    too large.
    
    That should have resulted in a compiler error, but didn't because:
    
    - the check uses ARRAY_SIZE(), which isn't yet defined in liblockdep
      so is assumed to be an (undeclared) function
    - putting a function call inside a BUILD_BUG_ON() expression quietly
      turns it into some nonsense involving a variable-length array
    
    It did produce a compiler warning, but I didn't notice because
    liblockdep already produces too many warnings if -Wall is enabled
    (which I'll fix shortly).
    
    Even before that commit, which reduced lock_chain::depth from 8 bits
    to 6, MAX_LOCK_DEPTH was too large.
    
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: a.p.zijlstra@chello.nl
    Link: http://lkml.kernel.org/r/20170525130005.5947-3-alexander.levin@verizon.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 56a13c4df1c905220041e1e126ca877587ecbe13
Author: Helge Deller <deller@gmx.de>
Date:   Mon May 29 17:14:16 2017 +0200

    parisc/mm: Ensure IRQs are off in switch_mm()
    
    commit 649aa24254e85bf6bd7807dd372d083707852b1f upstream.
    
    This is because of commit f98db6013c55 ("sched/core: Add switch_mm_irqs_off()
    and use it in the scheduler") in which switch_mm_irqs_off() is called by the
    scheduler, vs switch_mm() which is used by use_mm().
    
    This patch lets the parisc code mirror the x86 and powerpc code, ie. it
    disables interrupts in switch_mm(), and optimises the scheduler case by
    defining switch_mm_irqs_off().
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57b605a68208f5543ea7b455d28b942ce740060b
Author: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
Date:   Mon Jul 3 10:38:05 2017 +0200

    parisc: DMA API: return error instead of BUG_ON for dma ops on non dma devs
    
    commit 33f9e02495d15a061f0c94ef46f5103a2d0c20f3 upstream.
    
    Enabling parport pc driver on a B2600 (and probably other 64bit PARISC
    systems) produced following BUG:
    
    CPU: 0 PID: 1 Comm: swapper Not tainted 4.12.0-rc5-30198-g1132d5e #156
    task: 000000009e050000 task.stack: 000000009e04c000
    
         YZrvWESTHLNXBCVMcbcbcbcbOGFRQPDI
    PSW: 00001000000001101111111100001111 Not tainted
    r00-03  000000ff0806ff0f 000000009e04c990 0000000040871b78 000000009e04cac0
    r04-07  0000000040c14de0 ffffffffffffffff 000000009e07f098 000000009d82d200
    r08-11  000000009d82d210 0000000000000378 0000000000000000 0000000040c345e0
    r12-15  0000000000000005 0000000040c345e0 0000000000000000 0000000040c9d5e0
    r16-19  0000000040c345e0 00000000f00001c4 00000000f00001bc 0000000000000061
    r20-23  000000009e04ce28 0000000000000010 0000000000000010 0000000040b89e40
    r24-27  0000000000000003 0000000000ffffff 000000009d82d210 0000000040c14de0
    r28-31  0000000000000000 000000009e04ca90 000000009e04cb40 0000000000000000
    sr00-03  0000000000000000 0000000000000000 0000000000000000 0000000000000000
    sr04-07  0000000000000000 0000000000000000 0000000000000000 0000000000000000
    
    IASQ: 0000000000000000 0000000000000000 IAOQ: 00000000404aece0 00000000404aece4
     IIR: 03ffe01f    ISR: 0000000010340000  IOR: 000001781304cac8
     CPU:        0   CR30: 000000009e04c000 CR31: 00000000e2976de2
     ORIG_R28: 0000000000000200
     IAOQ[0]: sba_dma_supported+0x80/0xd0
     IAOQ[1]: sba_dma_supported+0x84/0xd0
     RP(r2): parport_pc_probe_port+0x178/0x1200
    
    Cause is a call to dma_coerce_mask_and_coherenet in parport_pc_probe_port,
    which PARISC DMA API doesn't handle very nicely. This commit gives back
    DMA_ERROR_CODE for DMA API calls, if device isn't capable of DMA
    transaction.
    
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbc8f9a7f1fb1993b668767f3ff5daceeeff657d
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon Jun 12 23:18:30 2017 -0700

    parisc: use compat_sys_keyctl()
    
    commit b0f94efd5aa8daa8a07d7601714c2573266cd4c9 upstream.
    
    Architectures with a compat syscall table must put compat_sys_keyctl()
    in it, not sys_keyctl().  The parisc architecture was not doing this;
    fix it.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3bc7424556f5955c378abef9e19d3618fc34a261
Author: Helge Deller <deller@gmx.de>
Date:   Sun Jul 2 22:00:41 2017 +0200

    parisc: Report SIGSEGV instead of SIGBUS when running out of stack
    
    commit 247462316f85a9e0479445c1a4223950b68ffac1 upstream.
    
    When a process runs out of stack the parisc kernel wrongly faults with SIGBUS
    instead of the expected SIGSEGV signal.
    
    This example shows how the kernel faults:
    do_page_fault() command='a.out' type=15 address=0xfaac2000 in libc-2.24.so[f8308000+16c000]
    trap #15: Data TLB miss fault, vm_start = 0xfa2c2000, vm_end = 0xfaac2000
    
    The vma->vm_end value is the first address which does not belong to the vma, so
    adjust the check to include vma->vm_end to the range for which to send the
    SIGSEGV signal.
    
    This patch unbreaks building the debian libsigsegv package.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b2c6af568b01dcb7e23957a71d969325ba8c72b
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Fri Jun 30 10:58:28 2017 +0100

    irqchip/gic-v3: Fix out-of-bound access in gic_set_affinity
    
    commit 866d7c1b0a3c70387646c4e455e727a58c5d465a upstream.
    
    The GICv3 driver doesn't check if the target CPU for gic_set_affinity
    is valid before going ahead and making the changes. This triggers the
    following splat with KASAN:
    
    [  141.189434] BUG: KASAN: global-out-of-bounds in gic_set_affinity+0x8c/0x140
    [  141.189704] Read of size 8 at addr ffff200009741d20 by task swapper/1/0
    [  141.189958]
    [  141.190158] CPU: 1 PID: 0 Comm: swapper/1 Not tainted 4.12.0-rc7
    [  141.190458] Hardware name: Foundation-v8A (DT)
    [  141.190658] Call trace:
    [  141.190908] [<ffff200008089d70>] dump_backtrace+0x0/0x328
    [  141.191224] [<ffff20000808a1b4>] show_stack+0x14/0x20
    [  141.191507] [<ffff200008504c3c>] dump_stack+0xa4/0xc8
    [  141.191858] [<ffff20000826c19c>] print_address_description+0x13c/0x250
    [  141.192219] [<ffff20000826c5c8>] kasan_report+0x210/0x300
    [  141.192547] [<ffff20000826ad54>] __asan_load8+0x84/0x98
    [  141.192874] [<ffff20000854eeec>] gic_set_affinity+0x8c/0x140
    [  141.193158] [<ffff200008148b14>] irq_do_set_affinity+0x54/0xb8
    [  141.193473] [<ffff200008148d2c>] irq_set_affinity_locked+0x64/0xf0
    [  141.193828] [<ffff200008148e00>] __irq_set_affinity+0x48/0x78
    [  141.194158] [<ffff200008bc48a4>] arm_perf_starting_cpu+0x104/0x150
    [  141.194513] [<ffff2000080d73bc>] cpuhp_invoke_callback+0x17c/0x1f8
    [  141.194783] [<ffff2000080d94ec>] notify_cpu_starting+0x8c/0xb8
    [  141.195130] [<ffff2000080911ec>] secondary_start_kernel+0x15c/0x200
    [  141.195390] [<0000000080db81b4>] 0x80db81b4
    [  141.195603]
    [  141.195685] The buggy address belongs to the variable:
    [  141.196012]  __cpu_logical_map+0x200/0x220
    [  141.196176]
    [  141.196315] Memory state around the buggy address:
    [  141.196586]  ffff200009741c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [  141.196913]  ffff200009741c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [  141.197158] >ffff200009741d00: 00 00 00 00 fa fa fa fa 00 00 00 00 00 00 00 00
    [  141.197487]                                ^
    [  141.197758]  ffff200009741d80: 00 00 00 00 00 00 00 00 fa fa fa fa 00 00 00 00
    [  141.198060]  ffff200009741e00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [  141.198358] ==================================================================
    [  141.198609] Disabling lock debugging due to kernel taint
    [  141.198961] CPU1: Booted secondary processor [410fd051]
    
    This patch adds the check to make sure the cpu is valid.
    
    Fixes: commit 021f653791ad17e03f98 ("irqchip: gic-v3: Initial support for GICv3")
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0aed5da5d2c42b6c57689a61ba9938e5ed607464
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Wed Jun 28 13:49:52 2017 -0600

    kvm-vfio: Decouple only when we match a group
    
    commit e323369b2e204da4dc771bbddceef986f4bf85d5 upstream.
    
    Unset-KVM and decrement-assignment only when we find the group in our
    list.  Otherwise we can get out of sync if the user triggers this for
    groups that aren't currently on our list.
    
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Reviewed-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Tested-by: Eric Auger <eric.auger@redhat.com>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e840db5535fbbcde36f3c010e699a04f72f4260b
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Fri Jun 30 16:39:55 2017 +1000

    KVM: PPC: Book3S: Fix typo in XICS-on-XIVE state saving code
    
    commit 00c14757f6abacd78cad9b2690a0e1f42e4b76c8 upstream.
    
    This fixes a typo where the wrong loop index was used to index
    the kvmppc_xive_vcpu.queues[] array in xive_pre_save_scan().
    The variable i contains the vcpu number; we need to index queues[]
    using j, which iterates from 0 to KVMPPC_XIVE_Q_COUNT-1.
    
    The effect of this bug is that things that save the interrupt
    controller state, such as "virsh dump", on a VM with more than
    8 vCPUs, result in xive_pre_save_queue() getting called on a
    bogus queue structure, usually resulting in a crash like this:
    
    [  501.821107] Unable to handle kernel paging request for data at address 0x00000084
    [  501.821212] Faulting instruction address: 0xc008000004c7c6f8
    [  501.821234] Oops: Kernel access of bad area, sig: 11 [#1]
    [  501.821305] SMP NR_CPUS=1024
    [  501.821307] NUMA
    [  501.821376] PowerNV
    [  501.821470] Modules linked in: vhost_net vhost tap xt_CHECKSUM ipt_MASQUERADE nf_nat_masquerade_ipv4 ip6t_rpfilter ip6t_REJECT nf_reject_ipv6 nf_conntrack_ipv6 nf_defrag_ipv6 xt_conntrack ip_set nfnetlink ebtable_nat ebtable_broute bridge stp llc ip6table_mangle ip6table_security ip6table_raw iptable_nat nf_conntrack_ipv4 nf_defrag_ipv4 nf_nat_ipv4 nf_nat nf_conntrack libcrc32c iptable_mangle iptable_security iptable_raw ebtable_filter ebtables ip6table_filter ip6_tables ses enclosure scsi_transport_sas ipmi_powernv ipmi_devintf ipmi_msghandler powernv_op_panel kvm_hv nfsd auth_rpcgss oid_registry nfs_acl lockd grace sunrpc kvm tg3 ptp pps_core
    [  501.822477] CPU: 3 PID: 3934 Comm: live_migration Not tainted 4.11.0-4.git8caa70f.el7.centos.ppc64le #1
    [  501.822633] task: c0000003f9e3ae80 task.stack: c0000003f9ed4000
    [  501.822745] NIP: c008000004c7c6f8 LR: c008000004c7c628 CTR: 0000000030058018
    [  501.822877] REGS: c0000003f9ed7980 TRAP: 0300   Not tainted  (4.11.0-4.git8caa70f.el7.centos.ppc64le)
    [  501.823030] MSR: 9000000000009033 <SF,HV,EE,ME,IR,DR,RI,LE>
    [  501.823047]   CR: 28022244  XER: 00000000
    [  501.823203] CFAR: c008000004c7c77c DAR: 0000000000000084 DSISR: 40000000 SOFTE: 1
    [  501.823203] GPR00: c008000004c7c628 c0000003f9ed7c00 c008000004c91450 00000000000000ff
    [  501.823203] GPR04: c0000003f5580000 c0000003f559bf98 9000000000009033 0000000000000000
    [  501.823203] GPR08: 0000000000000084 0000000000000000 00000000000001e0 9000000000001003
    [  501.823203] GPR12: c00000000008a7d0 c00000000fdc1b00 000000000a9a0000 0000000000000000
    [  501.823203] GPR16: 00000000402954e8 000000000a9a0000 0000000000000004 0000000000000000
    [  501.823203] GPR20: 0000000000000008 c000000002e8f180 c000000002e8f1e0 0000000000000001
    [  501.823203] GPR24: 0000000000000008 c0000003f5580008 c0000003f4564018 c000000002e8f1e8
    [  501.823203] GPR28: 00003ff6e58bdc28 c0000003f4564000 0000000000000000 0000000000000000
    [  501.825441] NIP [c008000004c7c6f8] xive_get_attr+0x3b8/0x5b0 [kvm]
    [  501.825671] LR [c008000004c7c628] xive_get_attr+0x2e8/0x5b0 [kvm]
    [  501.825887] Call Trace:
    [  501.825991] [c0000003f9ed7c00] [c008000004c7c628] xive_get_attr+0x2e8/0x5b0 [kvm] (unreliable)
    [  501.826312] [c0000003f9ed7cd0] [c008000004c62ec4] kvm_device_ioctl_attr+0x64/0xa0 [kvm]
    [  501.826581] [c0000003f9ed7d20] [c008000004c62fcc] kvm_device_ioctl+0xcc/0xf0 [kvm]
    [  501.826843] [c0000003f9ed7d40] [c000000000350c70] do_vfs_ioctl+0xd0/0x8c0
    [  501.827060] [c0000003f9ed7de0] [c000000000351534] SyS_ioctl+0xd4/0xf0
    [  501.827282] [c0000003f9ed7e30] [c00000000000b8e0] system_call+0x38/0xfc
    [  501.827496] Instruction dump:
    [  501.827632] 419e0078 3b760008 e9160008 83fb000c 83db0010 80fb0008 2f280000 60000000
    [  501.827901] 60000000 60420000 419a0050 7be91764 <7d284c2c> 552a0ffe 7f8af040 419e003c
    [  501.828176] ---[ end trace 2d0529a5bbbbafed ]---
    
    Fixes: 5af50993850a ("KVM: PPC: Book3S HV: Native usage of the XIVE interrupt controller")
    Acked-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 233b62de810ef0c360ed530e100eebd3c50042e4
Author: Hu Huajun <huhuajun@huawei.com>
Date:   Mon Jun 12 22:37:48 2017 +0800

    KVM: ARM64: fix phy counter access failure in guest.
    
    commit 02d50cdaff36c135d222015cffdca3ff11d168ea upstream.
    
    When reading the cntpct_el0 in guest with VHE (Virtual Host Extension)
    enabled in host, the "Unsupported guest sys_reg access" error reported.
    The reason is cnthctl_el2.EL1PCTEN is not enabled, which is expected
    to be done in kvm_timer_init_vhe(). The problem is kvm_timer_init_vhe
    is called by cpu_init_hyp_mode, and which is called when VHE is disabled.
    This patch remove the incorrect call to kvm_timer_init_vhe() from
    cpu_init_hyp_mode(), and calls kvm_timer_init_vhe() to enable
    cnthctl_el2.EL1PCTEN in cpu_hyp_reinit().
    
    Fixes: 488f94d7212b ("KVM: arm64: Access CNTHCTL_EL2 bit fields correctly on VHE systems")
    Signed-off-by: Hu Huajun <huhuajun@huawei.com>
    Reviewed-by: Christoffer Dall <cdall@linaro.org>
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Christoffer Dall <cdall@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20df36575fd2f51fc0465ebd1f5bc97da05a62e9
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Jun 2 16:30:46 2017 -0400

    drm/amdgpu/gfx6: properly cache mc_arb_ramcfg
    
    commit 6653ebd48f493efe3f3598ff3fe7b3d5451665df upstream.
    
    This was missing for gfx6.
    
    Acked-by: Huang Rui <ray.huang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 227ea2fde82f24bd8ff2c38949daae4663735983
Author: Srinivas Dasari <dasaris@qti.qualcomm.com>
Date:   Fri Jul 7 01:43:40 2017 +0300

    cfg80211: Check if NAN service ID is of expected size
    
    commit 0a27844ce86d039d74221dd56cd8c0349b146b63 upstream.
    
    nla policy checks for only maximum length of the attribute data when the
    attribute type is NLA_BINARY. If userspace sends less data than
    specified, cfg80211 may access illegal memory. When type is NLA_UNSPEC,
    nla policy check ensures that userspace sends minimum specified length
    number of bytes.
    
    Remove type assignment to NLA_BINARY from nla_policy of
    NL80211_NAN_FUNC_SERVICE_ID to make these NLA_UNSPEC and to make sure
    minimum NL80211_NAN_FUNC_SERVICE_ID_LEN bytes are received from
    userspace with NL80211_NAN_FUNC_SERVICE_ID.
    
    Fixes: a442b761b24 ("cfg80211: add add_nan_func / del_nan_func")
    Signed-off-by: Srinivas Dasari <dasaris@qti.qualcomm.com>
    Signed-off-by: Jouni Malinen <jouni@qca.qualcomm.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3853bb15fd9c6ff665eb18311d5bac122ad4879e
Author: Srinivas Dasari <dasaris@qti.qualcomm.com>
Date:   Fri Jul 7 01:43:39 2017 +0300

    cfg80211: Check if PMKID attribute is of expected size
    
    commit 9361df14d1cbf966409d5d6f48bb334384fbe138 upstream.
    
    nla policy checks for only maximum length of the attribute data
    when the attribute type is NLA_BINARY. If userspace sends less
    data than specified, the wireless drivers may access illegal
    memory. When type is NLA_UNSPEC, nla policy check ensures that
    userspace sends minimum specified length number of bytes.
    
    Remove type assignment to NLA_BINARY from nla_policy of
    NL80211_ATTR_PMKID to make this NLA_UNSPEC and to make sure minimum
    WLAN_PMKID_LEN bytes are received from userspace with
    NL80211_ATTR_PMKID.
    
    Fixes: 67fbb16be69d ("nl80211: PMKSA caching support")
    Signed-off-by: Srinivas Dasari <dasaris@qti.qualcomm.com>
    Signed-off-by: Jouni Malinen <jouni@qca.qualcomm.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be35aac0ef38cd9651a2a98d0307f6456ecaf104
Author: Srinivas Dasari <dasaris@qti.qualcomm.com>
Date:   Fri Jul 7 01:43:42 2017 +0300

    cfg80211: Validate frequencies nested in NL80211_ATTR_SCAN_FREQUENCIES
    
    commit d7f13f7450369281a5d0ea463cc69890a15923ae upstream.
    
    validate_scan_freqs() retrieves frequencies from attributes
    nested in the attribute NL80211_ATTR_SCAN_FREQUENCIES with
    nla_get_u32(), which reads 4 bytes from each attribute
    without validating the size of data received. Attributes
    nested in NL80211_ATTR_SCAN_FREQUENCIES don't have an nla policy.
    
    Validate size of each attribute before parsing to avoid potential buffer
    overread.
    
    Fixes: 2a519311926 ("cfg80211/nl80211: scanning (and mac80211 update to use it)")
    Signed-off-by: Srinivas Dasari <dasaris@qti.qualcomm.com>
    Signed-off-by: Jouni Malinen <jouni@qca.qualcomm.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9582dbe58ebcbd9b415d3d10ef5d990ddba720c
Author: Srinivas Dasari <dasaris@qti.qualcomm.com>
Date:   Fri Jul 7 01:43:41 2017 +0300

    cfg80211: Define nla_policy for NL80211_ATTR_LOCAL_MESH_POWER_MODE
    
    commit 8feb69c7bd89513be80eb19198d48f154b254021 upstream.
    
    Buffer overread may happen as nl80211_set_station() reads 4 bytes
    from the attribute NL80211_ATTR_LOCAL_MESH_POWER_MODE without
    validating the size of data received when userspace sends less
    than 4 bytes of data with NL80211_ATTR_LOCAL_MESH_POWER_MODE.
    Define nla_policy for NL80211_ATTR_LOCAL_MESH_POWER_MODE to avoid
    the buffer overread.
    
    Fixes: 3b1c5a5307f ("{cfg,nl}80211: mesh power mode primitives and userspace access")
    Signed-off-by: Srinivas Dasari <dasaris@qti.qualcomm.com>
    Signed-off-by: Jouni Malinen <jouni@qca.qualcomm.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c43499cd0c0f8cbf8aa1b76dc1dd7232d57f211b
Author: Daniel Kiper <daniel.kiper@oracle.com>
Date:   Thu Jun 22 12:51:36 2017 +0200

    efi: Process the MEMATTR table only if EFI_MEMMAP is enabled
    
    commit 457ea3f7e97881f937136ce0ba1f29f82b9abdb0 upstream.
    
    Otherwise e.g. Xen dom0 on x86_64 EFI platforms crashes.
    
    In theory we can check EFI_PARAVIRT too, however,
    EFI_MEMMAP looks more targeted and covers more cases.
    
    Signed-off-by: Daniel Kiper <daniel.kiper@oracle.com>
    Reviewed-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: andrew.cooper3@citrix.com
    Cc: boris.ostrovsky@oracle.com
    Cc: jgross@suse.com
    Cc: linux-efi@vger.kernel.org
    Cc: matt@codeblueprint.co.uk
    Cc: xen-devel@lists.xenproject.org
    Link: http://lkml.kernel.org/r/1498128697-12943-2-git-send-email-daniel.kiper@oracle.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9e07e2f52830311db2cee9d581105cf5a2b733e
Author: Peter S. Housel <housel@acm.org>
Date:   Mon Jun 12 11:46:22 2017 +0100

    brcmfmac: Fix glom_skb leak in brcmf_sdiod_recv_chain
    
    commit 5ea59db8a375216e6c915c5586f556766673b5a7 upstream.
    
    An earlier change to this function (3bdae810721b) fixed a leak in the
    case of an unsuccessful call to brcmf_sdiod_buffrw(). However, the
    glom_skb buffer, used for emulating a scattering read, is never used
    or referenced after its contents are copied into the destination
    buffers, and therefore always needs to be freed by the end of the
    function.
    
    Fixes: 3bdae810721b ("brcmfmac: Fix glob_skb leak in brcmf_sdiod_recv_chain")
    Fixes: a413e39a38573 ("brcmfmac: fix brcmf_sdcard_recv_chain() for host without sg support")
    Signed-off-by: Peter S. Housel <housel@acm.org>
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c34395857a7b3a3828983dc751cd464f4d04b5c6
Author: Christophe Jaillet <christophe.jaillet@wanadoo.fr>
Date:   Wed Jun 21 07:45:53 2017 +0200

    brcmfmac: Fix a memory leak in error handling path in 'brcmf_cfg80211_attach'
    
    commit 57c00f2fac512837f8de73474ec1f54020015bae upstream.
    
    If 'wiphy_new()' fails, we leak 'ops'. Add a new label in the error
    handling path to free it in such a case.
    
    Fixes: 5c22fb85102a7 ("brcmfmac: add wowl gtk rekeying offload support")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14a86f75d4370618bf3ad0f0fed01703e0962434
Author: Nitin Gupta <nitin.m.gupta@oracle.com>
Date:   Thu Jun 22 17:15:08 2017 -0700

    sparc64: Fix gup_huge_pmd
    
    
    [ Upstream commit dbd2667a4fb9ce4f547982b07cd69dda127c47ea ]
    
    The function assumes that each PMD points to head of a
    huge page. This is not correct as a PMD can point to
    start of any 8M region with a, say 256M, hugepage. The
    fix ensures that it points to the correct head of any PMD
    huge page.
    
    Cc: Julian Calaby <julian.calaby@gmail.com>
    Signed-off-by: Nitin Gupta <nitin.m.gupta@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b3b294b4d050c608a96fca19c169fb048363947
Author: Nagarathnam Muthusamy <nagarathnam.muthusamy@oracle.com>
Date:   Mon Jun 19 13:08:50 2017 -0400

    Adding the type of exported symbols
    
    
    [ Upstream commit f5a651f1d5e524cab345250a783702fb6a3f14d6 ]
    
    Missing symbol type for few functions prevents genksyms from generating
    symbol versions for those functions. This patch fixes them.
    
    Signed-off-by: Nagarathnam Muthusamy <nagarathnam.muthusamy@oracle.com>
    Reviewed-by: Babu Moger <babu.moger@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bf934b871b94ccd576d82e9bb0396e45c6e421f
Author: Nagarathnam Muthusamy <nagarathnam.muthusamy@oracle.com>
Date:   Mon Jun 19 13:08:49 2017 -0400

    sed regex in Makefile.build requires line break between exported symbols
    
    
    [ Upstream commit d16c0649feb4fe4e814f44803df5a617769c3233 ]
    
    The following regex in Makefile.build matches only one ___EXPORT_SYMBOL per line.
    
    sed
    's/.*___EXPORT_SYMBOL[[:space:]]*\([a-zA-Z0-9_]*\)[[:space:]]*,.*/EXPORT_SYMBOL(\1);/'
    
    ATOMIC_OPS macro in atomic_64.S expands multiple symbols in same line hence
    version generation is done only for the last matched symbol. This patch adds
    new line between the symbol expansions.
    
    Signed-off-by: Nagarathnam Muthusamy <nagarathnam.muthusamy@oracle.com>
    Reviewed-by: Babu Moger <babu.moger@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca2c0e7ee242ecf6b970a441ed5e8ab33b0d9d9a
Author: Nagarathnam Muthusamy <nagarathnam.muthusamy@oracle.com>
Date:   Mon Jun 19 13:08:48 2017 -0400

    Adding asm-prototypes.h for genksyms to generate crc
    
    
    [ Upstream commit bdca8cc096203b17ad0ac4e19f50578207e054d2 ]
    
    This patch adds the prototypes of assembly defined functions to asm-prototypes.h.
    Some prototypes are directly added as they are not present in any existing header
    files.
    
    Signed-off-by: Nagarathnam Muthusamy <nagarathnam.muthusamy@oracle.com>
    Reviewed-by: Babu Moger <babu.moger@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28cc60e93cdd7978ac79736f2cee2cc43ac5223d
Author: Bert Kenward <bkenward@solarflare.com>
Date:   Wed Jul 12 17:19:41 2017 +0100

    sfc: don't read beyond unicast address list
    
    
    [ Upstream commit c70d68150f71b84cea6997a53493e17bf18a54db ]
    
    If we have more than 32 unicast MAC addresses assigned to an interface
    we will read beyond the end of the address table in the driver when
    adding filters. The next 256 entries store multicast addresses, so we
    will end up attempting to insert duplicate filters, which is mostly
    harmless. If we add more than 288 unicast addresses we will then read
    past the multicast address table, which is likely to be more exciting.
    
    Fixes: 12fb0da45c9a ("sfc: clean fallbacks between promisc/normal in efx_ef10_filter_sync_rx_mode")
    Signed-off-by: Bert Kenward <bkenward@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f888b9ad79954af0c11d3a646129f1d70b951eec
Author: Arend van Spriel <arend.vanspriel@broadcom.com>
Date:   Fri Jul 7 21:09:06 2017 +0100

    brcmfmac: fix possible buffer overflow in brcmf_cfg80211_mgmt_tx()
    
    
    [ Upstream commit 8f44c9a41386729fea410e688959ddaa9d51be7c ]
    
    The lower level nl80211 code in cfg80211 ensures that "len" is between
    25 and NL80211_ATTR_FRAME (2304).  We subtract DOT11_MGMT_HDR_LEN (24) from
    "len" so thats's max of 2280.  However, the action_frame->data[] buffer is
    only BRCMF_FIL_ACTION_FRAME_SIZE (1800) bytes long so this memcpy() can
    overflow.
    
            memcpy(action_frame->data, &buf[DOT11_MGMT_HDR_LEN],
                   le16_to_cpu(action_frame->len));
    
    Cc: stable@vger.kernel.org # 3.9.x
    Fixes: 18e2f61db3b70 ("brcmfmac: P2P action frame tx.")
    Reported-by: "freenerguo(郭大兴)" <freenerguo@tencent.com>
    Signed-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fdb5c3268b2f14a30749b71fb73e4e27436c86d7
Author: Eduardo Valentin <eduval@amazon.com>
Date:   Tue Jul 11 14:55:12 2017 -0700

    bridge: mdb: fix leak on complete_info ptr on fail path
    
    
    [ Upstream commit 1bfb159673957644951ab0a8d2aec44b93ddb1ae ]
    
    We currently get the following kmemleak report:
    unreferenced object 0xffff8800039d9820 (size 32):
      comm "softirq", pid 0, jiffies 4295212383 (age 792.416s)
      hex dump (first 32 bytes):
        00 0c e0 03 00 88 ff ff ff 02 00 00 00 00 00 00  ................
        00 00 00 01 ff 11 00 02 86 dd 00 00 ff ff ff ff  ................
      backtrace:
        [<ffffffff8152b4aa>] kmemleak_alloc+0x4a/0xa0
        [<ffffffff811d8ec8>] kmem_cache_alloc_trace+0xb8/0x1c0
        [<ffffffffa0389683>] __br_mdb_notify+0x2a3/0x300 [bridge]
        [<ffffffffa038a0ce>] br_mdb_notify+0x6e/0x70 [bridge]
        [<ffffffffa0386479>] br_multicast_add_group+0x109/0x150 [bridge]
        [<ffffffffa0386518>] br_ip6_multicast_add_group+0x58/0x60 [bridge]
        [<ffffffffa0387fb5>] br_multicast_rcv+0x1d5/0xdb0 [bridge]
        [<ffffffffa037d7cf>] br_handle_frame_finish+0xcf/0x510 [bridge]
        [<ffffffffa03a236b>] br_nf_hook_thresh.part.27+0xb/0x10 [br_netfilter]
        [<ffffffffa03a3738>] br_nf_hook_thresh+0x48/0xb0 [br_netfilter]
        [<ffffffffa03a3fb9>] br_nf_pre_routing_finish_ipv6+0x109/0x1d0 [br_netfilter]
        [<ffffffffa03a4400>] br_nf_pre_routing_ipv6+0xd0/0x14c [br_netfilter]
        [<ffffffffa03a3c27>] br_nf_pre_routing+0x197/0x3d0 [br_netfilter]
        [<ffffffff814a2952>] nf_iterate+0x52/0x60
        [<ffffffff814a29bc>] nf_hook_slow+0x5c/0xb0
        [<ffffffffa037ddf4>] br_handle_frame+0x1a4/0x2c0 [bridge]
    
    This happens when switchdev_port_obj_add() fails. This patch
    frees complete_info object in the fail path.
    
    Reviewed-by: Vallish Vaidyeshwara <vallish@amazon.com>
    Signed-off-by: Eduardo Valentin <eduval@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09a279f3ee743407b4347a3e8e8199808c343f43
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Mon Jul 10 10:05:50 2017 -0700

    tap: convert a mutex to a spinlock
    
    
    [ Upstream commit ffa423fb3251f8737303ffc3b0659e86e501808e ]
    
    We are not allowed to block on the RCU reader side, so can't
    just hold the mutex as before. As a quick fix, convert it to
    a spinlock.
    
    Fixes: d9f1f61c0801 ("tap: Extending tap device create/destroy APIs")
    Reported-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Tested-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: Sainath Grandhi <sainath.grandhi@intel.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c92947f94ae72ac323605c50b98ac710356bf7e7
Author: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
Date:   Mon Jul 10 10:55:46 2017 -0300

    cxgb4: fix BUG() on interrupt deallocating path of ULD
    
    
    [ Upstream commit 6a146f3a5894b751cef16feb3d7903e45e3c445c ]
    
    Since the introduction of ULD (Upper-Layer Drivers), the MSI-X
    deallocating path changed in cxgb4: the driver frees the interrupts
    of ULD when unregistering it or on shutdown PCI handler.
    
    Problem is that if a MSI-X is not freed before deallocated in the PCI
    layer, it will trigger a BUG() due to still "alive" interrupt being
    tentatively quiesced.
    
    The below trace was observed when doing a simple unbind of Chelsio's
    adapter PCI function, like:
      "echo 001e:80:00.4 > /sys/bus/pci/drivers/cxgb4/unbind"
    
    Trace:
    
      kernel BUG at drivers/pci/msi.c:352!
      Oops: Exception in kernel mode, sig: 5 [#1]
      ...
      NIP [c0000000005a5e60] free_msi_irqs+0xa0/0x250
      LR [c0000000005a5e50] free_msi_irqs+0x90/0x250
      Call Trace:
      [c0000000005a5e50] free_msi_irqs+0x90/0x250 (unreliable)
      [c0000000005a72c4] pci_disable_msix+0x124/0x180
      [d000000011e06708] disable_msi+0x88/0xb0 [cxgb4]
      [d000000011e06948] free_some_resources+0xa8/0x160 [cxgb4]
      [d000000011e06d60] remove_one+0x170/0x3c0 [cxgb4]
      [c00000000058a910] pci_device_remove+0x70/0x110
      [c00000000064ef04] device_release_driver_internal+0x1f4/0x2c0
      ...
    
    This patch fixes the issue by refactoring the shutdown path of ULD on
    cxgb4 driver, by properly freeing and disabling interrupts on PCI
    remove handler too.
    
    Fixes: 0fbc81b3ad51 ("Allocate resources dynamically for all cxgb4 ULD's")
    Reported-by: Harsha Thyagaraja <hathyaga@in.ibm.com>
    Signed-off-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3399c4c4788c3e9da7c80cb483fbb82feb75f1ed
Author: Huy Nguyen <huyn@mellanox.com>
Date:   Thu Jun 29 16:50:01 2017 -0500

    net/mlx5e: Initialize CEE's getpermhwaddr address buffer to 0xff
    
    
    [ Upstream commit d968f0f2e4404152f37ed2384b4a2269dd2dae5a ]
    
    Latest change in open-lldp code uses bytes 6-11 of perm_addr buffer
    as the Ethernet source address for the host TLV packet.
    Since our driver does not fill these bytes, they stay at zero and
    the open-lldp code ends up sending the TLV packet with zero source
    address and the switch drops this packet.
    
    The fix is to initialize these bytes to 0xff. The open-lldp code
    considers 0xff:ff:ff:ff:ff:ff as the invalid address and falls back to
    use the host's mac address as the Ethernet source address.
    
    Fixes: 3a6a931dfb8e ("net/mlx5e: Support DCBX CEE API")
    Signed-off-by: Huy Nguyen <huyn@mellanox.com>
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8c11223242dae19b84f914e5829a26c38bde74c
Author: Sowmini Varadhan <sowmini.varadhan@oracle.com>
Date:   Thu Jul 6 08:15:06 2017 -0700

    rds: tcp: use sock_create_lite() to create the accept socket
    
    
    [ Upstream commit 0933a578cd55b02dc80f219dc8f2efb17ec61c9a ]
    
    There are two problems with calling sock_create_kern() from
    rds_tcp_accept_one()
    1. it sets up a new_sock->sk that is wasteful, because this ->sk
       is going to get replaced by inet_accept() in the subsequent ->accept()
    2. The new_sock->sk is a leaked reference in sock_graft() which
       expects to find a null parent->sk
    
    Avoid these problems by calling sock_create_lite().
    
    Signed-off-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 354934e1536aaefc00e47ce196e93383885041ac
Author: Jason Wang <jasowang@redhat.com>
Date:   Fri Jul 7 19:56:09 2017 +0800

    virtio-net: fix leaking of ctx array
    
    
    [ Upstream commit 55281621b6047d2ffb934a0b984ab0cdb1ad1d76 ]
    
    Fixes: commit d45b897b11ea ("virtio_net: allow specifying context for rx")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34e7c49824f06cc33c8d6cdab0e56b0ae1841d3e
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Thu Jul 6 15:24:40 2017 +0300

    vrf: fix bug_on triggered by rx when destroying a vrf
    
    
    [ Upstream commit f630c38ef0d785101363a8992bbd4f302180f86f ]
    
    When destroying a VRF device we cleanup the slaves in its ndo_uninit()
    function, but that causes packets to be switched (skb->dev == vrf being
    destroyed) even though we're pass the point where the VRF should be
    receiving any packets while it is being dismantled. This causes a BUG_ON
    to trigger if we have raw sockets (trace below).
    The reason is that the inetdev of the VRF has been destroyed but we're
    still sending packets up the stack with it, so let's free the slaves in
    the dellink callback as David Ahern suggested.
    
    Note that this fix doesn't prevent packets from going up when the VRF
    device is admin down.
    
    [   35.631371] ------------[ cut here ]------------
    [   35.631603] kernel BUG at net/ipv4/fib_frontend.c:285!
    [   35.631854] invalid opcode: 0000 [#1] SMP
    [   35.631977] Modules linked in:
    [   35.632081] CPU: 2 PID: 22 Comm: ksoftirqd/2 Not tainted 4.12.0-rc7+ #45
    [   35.632247] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.7.5-20140531_083030-gandalf 04/01/2014
    [   35.632477] task: ffff88005ad68000 task.stack: ffff88005ad64000
    [   35.632632] RIP: 0010:fib_compute_spec_dst+0xfc/0x1ee
    [   35.632769] RSP: 0018:ffff88005ad67978 EFLAGS: 00010202
    [   35.632910] RAX: 0000000000000001 RBX: ffff880059a7f200 RCX: 0000000000000000
    [   35.633084] RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffffffff82274af0
    [   35.633256] RBP: ffff88005ad679f8 R08: 000000000001ef70 R09: 0000000000000046
    [   35.633430] R10: ffff88005ad679f8 R11: ffff880037731cb0 R12: 0000000000000001
    [   35.633603] R13: ffff8800599e3000 R14: 0000000000000000 R15: ffff8800599cb852
    [   35.634114] FS:  0000000000000000(0000) GS:ffff88005d900000(0000) knlGS:0000000000000000
    [   35.634306] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   35.634456] CR2: 00007f3563227095 CR3: 000000000201d000 CR4: 00000000000406e0
    [   35.634632] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [   35.634865] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [   35.635055] Call Trace:
    [   35.635271]  ? __lock_acquire+0xf0d/0x1117
    [   35.635522]  ipv4_pktinfo_prepare+0x82/0x151
    [   35.635831]  raw_rcv_skb+0x17/0x3c
    [   35.636062]  raw_rcv+0xe5/0xf7
    [   35.636287]  raw_local_deliver+0x169/0x1d9
    [   35.636534]  ip_local_deliver_finish+0x87/0x1c4
    [   35.636820]  ip_local_deliver+0x63/0x7f
    [   35.637058]  ip_rcv_finish+0x340/0x3a1
    [   35.637295]  ip_rcv+0x314/0x34a
    [   35.637525]  __netif_receive_skb_core+0x49f/0x7c5
    [   35.637780]  ? lock_acquire+0x13f/0x1d7
    [   35.638018]  ? lock_acquire+0x15e/0x1d7
    [   35.638259]  __netif_receive_skb+0x1e/0x94
    [   35.638502]  ? __netif_receive_skb+0x1e/0x94
    [   35.638748]  netif_receive_skb_internal+0x74/0x300
    [   35.639002]  ? dev_gro_receive+0x2ed/0x411
    [   35.639246]  ? lock_is_held_type+0xc4/0xd2
    [   35.639491]  napi_gro_receive+0x105/0x1a0
    [   35.639736]  receive_buf+0xc32/0xc74
    [   35.639965]  ? detach_buf+0x67/0x153
    [   35.640201]  ? virtqueue_get_buf_ctx+0x120/0x176
    [   35.640453]  virtnet_poll+0x128/0x1c5
    [   35.640690]  net_rx_action+0x103/0x343
    [   35.640932]  __do_softirq+0x1c7/0x4b7
    [   35.641171]  run_ksoftirqd+0x23/0x5c
    [   35.641403]  smpboot_thread_fn+0x24f/0x26d
    [   35.641646]  ? sort_range+0x22/0x22
    [   35.641878]  kthread+0x129/0x131
    [   35.642104]  ? __list_add+0x31/0x31
    [   35.642335]  ? __list_add+0x31/0x31
    [   35.642568]  ret_from_fork+0x2a/0x40
    [   35.642804] Code: 05 bd 87 a3 00 01 e8 1f ef 98 ff 4d 85 f6 48 c7 c7 f0 4a 27 82 41 0f 94 c4 31 c9 31 d2 41 0f b6 f4 e8 04 71 a1 ff 45 84 e4 74 02 <0f> 0b 0f b7 93 c4 00 00 00 4d 8b a5 80 05 00 00 48 03 93 d0 00
    [   35.644342] RIP: fib_compute_spec_dst+0xfc/0x1ee RSP: ffff88005ad67978
    
    Fixes: 193125dbd8eb ("net: Introduce VRF device driver")
    Reported-by: Chris Cormier <chriscormier@cumulusnetworks.com>
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Acked-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3ef3b80a6e86645cdda0a87c02da610b028de77
Author: David Ahern <dsahern@gmail.com>
Date:   Wed Jul 5 14:41:46 2017 -0600

    net: ipv6: Compare lwstate in detecting duplicate nexthops
    
    
    [ Upstream commit f06b7549b79e29a672336d4e134524373fb7a232 ]
    
    Lennert reported a failure to add different mpls encaps in a multipath
    route:
    
      $ ip -6 route add 1234::/16 \
            nexthop encap mpls 10 via fe80::1 dev ens3 \
            nexthop encap mpls 20 via fe80::1 dev ens3
      RTNETLINK answers: File exists
    
    The problem is that the duplicate nexthop detection does not compare
    lwtunnel configuration. Add it.
    
    Fixes: 19e42e451506 ("ipv6: support for fib route lwtunnel encap attributes")
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Reported-by: João Taveira Araújo <joao.taveira@gmail.com>
    Reported-by: Lennert Buytenhek <buytenh@wantstofly.org>
    Acked-by: Roopa Prabhu <roopa@cumulusnetworks.com>
    Tested-by: Lennert Buytenhek <buytenh@wantstofly.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e28d50cd04fe78bd3fe4e9390b7502d144a569c
Author: Derek Chickles <derek.chickles@cavium.com>
Date:   Wed Jul 5 11:59:27 2017 -0700

    liquidio: fix bug in soft reset failure detection
    
    
    [ Upstream commit 05a6b4cae8c0cc1680c9dd33a97a49a13c0f01bc ]
    
    The code that detects a failed soft reset of Octeon is comparing the wrong
    value against the reset value of the Octeon SLI_SCRATCH_1 register,
    resulting in an inability to detect a soft reset failure.  Fix it by using
    the correct value in the comparison, which is any non-zero value.
    
    Fixes: f21fb3ed364b ("Add support of Cavium Liquidio ethernet adapters")
    Fixes: c0eab5b3580a ("liquidio: CN23XX firmware download")
    Signed-off-by: Derek Chickles <derek.chickles@cavium.com>
    Signed-off-by: Satanand Burla <satananda.burla@cavium.com>
    Signed-off-by: Raghu Vatsavayi <raghu.vatsavayi@cavium.com>
    Signed-off-by: Felix Manlunas <felix.manlunas@cavium.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fe829df6a9a158627f4009f1108ebfbdc5ad8ba
Author: Alban Browaeys <alban.browaeys@gmail.com>
Date:   Mon Jul 3 03:20:13 2017 +0200

    net: core: Fix slab-out-of-bounds in netdev_stats_to_stats64
    
    
    [ Upstream commit 9af9959e142c274f4a30fefb71d97d2b028b337f ]
    
    commit 9256645af098 ("net/core: relax BUILD_BUG_ON in
    netdev_stats_to_stats64") made an attempt to read beyond
    the size of the source a possibility.
    
    Fix to only copy src size to dest. As dest might be bigger than src.
    
     ==================================================================
     BUG: KASAN: slab-out-of-bounds in netdev_stats_to_stats64+0xe/0x30 at addr ffff8801be248b20
     Read of size 192 by task VBoxNetAdpCtl/6734
     CPU: 1 PID: 6734 Comm: VBoxNetAdpCtl Tainted: G           O    4.11.4prahal+intel+ #118
     Hardware name: LENOVO 20CDCTO1WW/20CDCTO1WW, BIOS GQET52WW (1.32 ) 05/04/2017
     Call Trace:
      dump_stack+0x63/0x86
      kasan_object_err+0x1c/0x70
      kasan_report+0x270/0x520
      ? netdev_stats_to_stats64+0xe/0x30
      ? sched_clock_cpu+0x1b/0x190
      ? __module_address+0x3e/0x3b0
      ? unwind_next_frame+0x1ea/0xb00
      check_memory_region+0x13c/0x1a0
      memcpy+0x23/0x50
      netdev_stats_to_stats64+0xe/0x30
      dev_get_stats+0x1b9/0x230
      rtnl_fill_stats+0x44/0xc00
      ? nla_put+0xc6/0x130
      rtnl_fill_ifinfo+0xe9e/0x3700
      ? rtnl_fill_vfinfo+0xde0/0xde0
      ? sched_clock+0x9/0x10
      ? sched_clock+0x9/0x10
      ? sched_clock_local+0x120/0x130
      ? __module_address+0x3e/0x3b0
      ? unwind_next_frame+0x1ea/0xb00
      ? sched_clock+0x9/0x10
      ? sched_clock+0x9/0x10
      ? sched_clock_cpu+0x1b/0x190
      ? VBoxNetAdpLinuxIOCtlUnlocked+0x14b/0x280 [vboxnetadp]
      ? depot_save_stack+0x1d8/0x4a0
      ? depot_save_stack+0x34f/0x4a0
      ? depot_save_stack+0x34f/0x4a0
      ? save_stack+0xb1/0xd0
      ? save_stack_trace+0x16/0x20
      ? save_stack+0x46/0xd0
      ? kasan_slab_alloc+0x12/0x20
      ? __kmalloc_node_track_caller+0x10d/0x350
      ? __kmalloc_reserve.isra.36+0x2c/0xc0
      ? __alloc_skb+0xd0/0x560
      ? rtmsg_ifinfo_build_skb+0x61/0x120
      ? rtmsg_ifinfo.part.25+0x16/0xb0
      ? rtmsg_ifinfo+0x47/0x70
      ? register_netdev+0x15/0x30
      ? vboxNetAdpOsCreate+0xc0/0x1c0 [vboxnetadp]
      ? vboxNetAdpCreate+0x210/0x400 [vboxnetadp]
      ? VBoxNetAdpLinuxIOCtlUnlocked+0x14b/0x280 [vboxnetadp]
      ? do_vfs_ioctl+0x17f/0xff0
      ? SyS_ioctl+0x74/0x80
      ? do_syscall_64+0x182/0x390
      ? __alloc_skb+0xd0/0x560
      ? __alloc_skb+0xd0/0x560
      ? save_stack_trace+0x16/0x20
      ? init_object+0x64/0xa0
      ? ___slab_alloc+0x1ae/0x5c0
      ? ___slab_alloc+0x1ae/0x5c0
      ? __alloc_skb+0xd0/0x560
      ? sched_clock+0x9/0x10
      ? kasan_unpoison_shadow+0x35/0x50
      ? kasan_kmalloc+0xad/0xe0
      ? __kmalloc_node_track_caller+0x246/0x350
      ? __alloc_skb+0xd0/0x560
      ? kasan_unpoison_shadow+0x35/0x50
      ? memset+0x31/0x40
      ? __alloc_skb+0x31f/0x560
      ? napi_consume_skb+0x320/0x320
      ? br_get_link_af_size_filtered+0xb7/0x120 [bridge]
      ? if_nlmsg_size+0x440/0x630
      rtmsg_ifinfo_build_skb+0x83/0x120
      rtmsg_ifinfo.part.25+0x16/0xb0
      rtmsg_ifinfo+0x47/0x70
      register_netdevice+0xa2b/0xe50
      ? __kmalloc+0x171/0x2d0
      ? netdev_change_features+0x80/0x80
      register_netdev+0x15/0x30
      vboxNetAdpOsCreate+0xc0/0x1c0 [vboxnetadp]
      vboxNetAdpCreate+0x210/0x400 [vboxnetadp]
      ? vboxNetAdpComposeMACAddress+0x1d0/0x1d0 [vboxnetadp]
      ? kasan_check_write+0x14/0x20
      VBoxNetAdpLinuxIOCtlUnlocked+0x14b/0x280 [vboxnetadp]
      ? VBoxNetAdpLinuxOpen+0x20/0x20 [vboxnetadp]
      ? lock_acquire+0x11c/0x270
      ? __audit_syscall_entry+0x2fb/0x660
      do_vfs_ioctl+0x17f/0xff0
      ? __audit_syscall_entry+0x2fb/0x660
      ? ioctl_preallocate+0x1d0/0x1d0
      ? __audit_syscall_entry+0x2fb/0x660
      ? kmem_cache_free+0xb2/0x250
      ? syscall_trace_enter+0x537/0xd00
      ? exit_to_usermode_loop+0x100/0x100
      SyS_ioctl+0x74/0x80
      ? do_sys_open+0x350/0x350
      ? do_vfs_ioctl+0xff0/0xff0
      do_syscall_64+0x182/0x390
      entry_SYSCALL64_slow_path+0x25/0x25
     RIP: 0033:0x7f7e39a1ae07
     RSP: 002b:00007ffc6f04c6d8 EFLAGS: 00000206 ORIG_RAX: 0000000000000010
     RAX: ffffffffffffffda RBX: 00007ffc6f04c730 RCX: 00007f7e39a1ae07
     RDX: 00007ffc6f04c730 RSI: 00000000c0207601 RDI: 0000000000000007
     RBP: 00007ffc6f04c700 R08: 00007ffc6f04c780 R09: 0000000000000008
     R10: 0000000000000541 R11: 0000000000000206 R12: 0000000000000007
     R13: 00000000c0207601 R14: 00007ffc6f04c730 R15: 0000000000000012
     Object at ffff8801be248008, in cache kmalloc-4096 size: 4096
     Allocated:
     PID = 6734
      save_stack_trace+0x16/0x20
      save_stack+0x46/0xd0
      kasan_kmalloc+0xad/0xe0
      __kmalloc+0x171/0x2d0
      alloc_netdev_mqs+0x8a7/0xbe0
      vboxNetAdpOsCreate+0x65/0x1c0 [vboxnetadp]
      vboxNetAdpCreate+0x210/0x400 [vboxnetadp]
      VBoxNetAdpLinuxIOCtlUnlocked+0x14b/0x280 [vboxnetadp]
      do_vfs_ioctl+0x17f/0xff0
      SyS_ioctl+0x74/0x80
      do_syscall_64+0x182/0x390
      return_from_SYSCALL_64+0x0/0x6a
     Freed:
     PID = 5600
      save_stack_trace+0x16/0x20
      save_stack+0x46/0xd0
      kasan_slab_free+0x73/0xc0
      kfree+0xe4/0x220
      kvfree+0x25/0x30
      single_release+0x74/0xb0
      __fput+0x265/0x6b0
      ____fput+0x9/0x10
      task_work_run+0xd5/0x150
      exit_to_usermode_loop+0xe2/0x100
      do_syscall_64+0x26c/0x390
      return_from_SYSCALL_64+0x0/0x6a
     Memory state around the buggy address:
      ffff8801be248a80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
      ffff8801be248b00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
     >ffff8801be248b80: 00 00 00 00 00 00 00 00 00 00 00 07 fc fc fc fc
                                                         ^
      ffff8801be248c00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
      ffff8801be248c80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
     ==================================================================
    
    Signed-off-by: Alban Browaeys <alban.browaeys@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40d16256c844add4b9b40ab93c232eabb54e5a7e
Author: Jiri Benc <jbenc@redhat.com>
Date:   Sun Jul 2 19:00:58 2017 +0200

    geneve: fix hlist corruption
    
    
    [ Upstream commit 4b4c21fad6ae6bd58ff1566f23b0f4f70fdc9a30 ]
    
    It's not a good idea to add the same hlist_node to two different hash lists.
    This leads to various hard to debug memory corruptions.
    
    Fixes: 8ed66f0e8235 ("geneve: implement support for IPv6-based tunnels")
    Cc: John W. Linville <linville@tuxdriver.com>
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b7b3a67ebd764c0008e304660a2fd3e5f20f2b86
Author: Jiri Benc <jbenc@redhat.com>
Date:   Sun Jul 2 19:00:57 2017 +0200

    vxlan: fix hlist corruption
    
    
    [ Upstream commit 69e766612c4bcb79e19cebed9eed61d4222c1d47 ]
    
    It's not a good idea to add the same hlist_node to two different hash lists.
    This leads to various hard to debug memory corruptions.
    
    Fixes: b1be00a6c39f ("vxlan: support both IPv4 and IPv6 sockets in a single vxlan device")
    Signed-off-by: Jiri Benc <jbenc@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 55db4f9f0106009f9f890df5eea4caef0cb7ae2f
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Thu Jun 29 16:56:54 2017 +0200

    ipv6: dad: don't remove dynamic addresses if link is down
    
    
    [ Upstream commit ec8add2a4c9df723c94a863b8fcd6d93c472deed ]
    
    Currently, when the link for $DEV is down, this command succeeds but the
    address is removed immediately by DAD (1):
    
        ip addr add 1111::12/64 dev $DEV valid_lft 3600 preferred_lft 1800
    
    In the same situation, this will succeed and not remove the address (2):
    
        ip addr add 1111::12/64 dev $DEV
        ip addr change 1111::12/64 dev $DEV valid_lft 3600 preferred_lft 1800
    
    The comment in addrconf_dad_begin() when !IF_READY makes it look like
    this is the intended behavior, but doesn't explain why:
    
         * If the device is not ready:
         * - keep it tentative if it is a permanent address.
         * - otherwise, kill it.
    
    We clearly cannot prevent userspace from doing (2), but we can make (1)
    work consistently with (2).
    
    addrconf_dad_stop() is only called in two cases: if DAD failed, or to
    skip DAD when the link is down. In that second case, the fix is to avoid
    deleting the address, like we already do for permanent addresses.
    
    Fixes: 3c21edbd1137 ("[IPV6]: Defer IPv6 device initialization until the link becomes ready.")
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 419c4e868915b16e88fc5eccd41010e2e600498b
Author: Gal Pressman <galp@mellanox.com>
Date:   Sun Jun 25 16:46:25 2017 +0300

    net/mlx5e: Fix TX carrier errors report in get stats ndo
    
    
    [ Upstream commit 8ff93de7668bd81bc8efa819d1184ebd48fae72d ]
    
    Symbol error during carrier counter from PPCNT was mistakenly reported as
    TX carrier errors in get_stats ndo, although it's an RX counter.
    
    Fixes: 269e6b3af3bf ("net/mlx5e: Report additional error statistics in get stats ndo")
    Signed-off-by: Gal Pressman <galp@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c66a467ee2d9a94a84ef4ddc4a446a459ce25d0
Author: Mohamad Haj Yahia <mohamad@mellanox.com>
Date:   Thu Mar 30 17:09:00 2017 +0300

    net/mlx5: Cancel delayed recovery work when unloading the driver
    
    
    [ Upstream commit 2a0165a034ac024b60cca49c61e46f4afa2e4d98 ]
    
    Draining the health workqueue will ignore future health works including
    the one that report hardware failure and thus we can't enter error state
    Instead cancel the recovery flow and make sure only recovery flow won't
    be scheduled.
    
    Fixes: 5e44fca50470 ('net/mlx5: Only cancel recovery work when cleaning up device')
    Signed-off-by: Mohamad Haj Yahia <mohamad@mellanox.com>
    Signed-off-by: Moshe Shemesh <moshe@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 053ef953f8a9975d6895e90f27a61150d0f0cca8
Author: Gal Pressman <galp@mellanox.com>
Date:   Mon Jun 19 18:25:59 2017 +0300

    net/mlx5: Fix driver load error flow when firmware is stuck
    
    
    [ Upstream commit 8ce59b16b4b6eacedaec1f7b652b4781cdbfe15f ]
    
    When wait for firmware init fails, previous code would mistakenly
    return success and cause inconsistency in the driver state.
    
    Fixes: 6c780a0267b8 ("net/mlx5: Wait for FW readiness before initializing command interface")
    Signed-off-by: Gal Pressman <galp@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0f102d56f7e82347d1245d630f8b848d3557014
Author: Gleb Fotengauer-Malinovskiy <glebfm@altlinux.org>
Date:   Tue May 30 17:11:35 2017 +0300

    staging: android: uapi: drop definitions of removed ION_IOC_{FREE,SHARE} ioctls
    
    commit f7a320ffebe2bdce3a189ecb531a401c653f754f upstream.
    
    This problem was found by strace ioctl list generator.
    
    Fixes: 15c6098cfec5 ("staging: android: ion: Remove ion_handle and ion_client")
    Signed-off-by: Gleb Fotengauer-Malinovskiy <glebfm@altlinux.org>
    Acked-by: Laura Abbott <labbott@redhat.com>
    Cc: "Dmitry V. Levin" <ldv@altlinux.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
