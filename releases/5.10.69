commit 5f4196eaa90c139ac470111b8e2deabf5f283baa
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Sep 26 14:09:02 2021 +0200

    Linux 5.10.69
    
    Link: https://lore.kernel.org/r/20210924124334.228235870@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Link: https://lore.kernel.org/r/20210925120750.056868347@linuxfoundation.org
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c09505e9e6b1461cddf7c85fdb4f4ff1cc3fd23
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 8 12:08:17 2021 -0700

    drm/nouveau/nvkm: Replace -ENOSYS with -ENODEV
    
    commit e8f71f89236ef82d449991bfbc237e3cb6ea584f upstream.
    
    nvkm test builds fail with the following error.
    
      drivers/gpu/drm/nouveau/nvkm/engine/device/ctrl.c: In function 'nvkm_control_mthd_pstate_info':
      drivers/gpu/drm/nouveau/nvkm/engine/device/ctrl.c:60:35: error: overflow in conversion from 'int' to '__s8' {aka 'signed char'} changes value from '-251' to '5'
    
    The code builds on most architectures, but fails on parisc where ENOSYS
    is defined as 251.
    
    Replace the error code with -ENODEV (-19).  The actual error code does
    not really matter and is not passed to userspace - it just has to be
    negative.
    
    Fixes: 7238eca4cf18 ("drm/nouveau: expose pstate selection per-power source in sysfs")
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Cc: Ben Skeggs <bskeggs@redhat.com>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83a3cb200effb8f61d51516bd64fd94dea4c7805
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Mon Sep 6 13:30:34 2021 +0200

    sched/idle: Make the idle timer expire in hard interrupt context
    
    [ Upstream commit 9848417926353daa59d2b05eb26e185063dbac6e ]
    
    The intel powerclamp driver will setup a per-CPU worker with RT
    priority. The worker will then invoke play_idle() in which it remains in
    the idle poll loop until it is stopped by the timer it started earlier.
    
    That timer needs to expire in hard interrupt context on PREEMPT_RT.
    Otherwise the timer will expire in ksoftirqd as a SOFT timer but that task
    won't be scheduled on the CPU because its priority is lower than the
    priority of the worker which is in the idle loop.
    
    Always expire the idle timer in hard interrupt context.
    
    Reported-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Link: https://lore.kernel.org/r/20210906113034.jgfxrjdvxnjqgtmc@linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 647c19bc61023b305389f5b027b2f7edab0feca2
Author: Yu-Tung Chang <mtwget@gmail.com>
Date:   Mon Aug 30 13:25:32 2021 +0800

    rtc: rx8010: select REGMAP_I2C
    
    [ Upstream commit 0c45d3e24ef3d3d87c5e0077b8f38d1372af7176 ]
    
    The rtc-rx8010 uses the I2C regmap but doesn't select it in Kconfig so
    depending on the configuration the build may fail. Fix it.
    
    Signed-off-by: Yu-Tung Chang <mtwget@gmail.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20210830052532.40356-1-mtwget@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a14014df72d00d87a199e1f77896f7ea62cc126
Author: Song Liu <songliubraving@fb.com>
Date:   Tue Sep 7 16:03:38 2021 -0700

    blk-mq: allow 4x BLK_MAX_REQUEST_COUNT at blk_plug for multiple_queues
    
    [ Upstream commit 7f2a6a69f7ced6db8220298e0497cf60482a9d4b ]
    
    Limiting number of request to BLK_MAX_REQUEST_COUNT at blk_plug hurts
    performance for large md arrays. [1] shows resync speed of md array drops
    for md array with more than 16 HDDs.
    
    Fix this by allowing more request at plug queue. The multiple_queue flag
    is used to only apply higher limit to multiple queue cases.
    
    [1] https://lore.kernel.org/linux-raid/CAFDAVznS71BXW8Jxv6k9dXc2iR3ysX3iZRBww_rzA8WifBFxGg@mail.gmail.com/
    Tested-by: Marcin Wanat <marcin.wanat@gmail.com>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23dfb959c6cbb8346a5143f44a970373fcb4ce8f
Author: Li Jinlin <lijinlin3@huawei.com>
Date:   Tue Sep 7 20:12:42 2021 +0800

    blk-throttle: fix UAF by deleteing timer in blk_throtl_exit()
    
    [ Upstream commit 884f0e84f1e3195b801319c8ec3d5774e9bf2710 ]
    
    The pending timer has been set up in blk_throtl_init(). However, the
    timer is not deleted in blk_throtl_exit(). This means that the timer
    handler may still be running after freeing the timer, which would
    result in a use-after-free.
    
    Fix by calling del_timer_sync() to delete the timer in blk_throtl_exit().
    
    Signed-off-by: Li Jinlin <lijinlin3@huawei.com>
    Link: https://lore.kernel.org/r/20210907121242.2885564-1-lijinlin3@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2551d0a29e937515a9711b604d88cd1a31c386f
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 7 18:27:53 2021 +0200

    pwm: stm32-lp: Don't modify HW state in .remove() callback
    
    [ Upstream commit d44084c93427bb0a9261432db1a8ca76a42d805e ]
    
    A consumer is expected to disable a PWM before calling pwm_put(). And if
    they didn't there is hopefully a good reason (or the consumer needs
    fixing). Also if disabling an enabled PWM was the right thing to do,
    this should better be done in the framework instead of in each low level
    driver.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6a2b36a8cc45bf9063cdc4bde7434e8eac66ecd
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 7 18:27:52 2021 +0200

    pwm: rockchip: Don't modify HW state in .remove() callback
    
    [ Upstream commit 9d768cd7fd42bb0be16f36aec48548fca5260759 ]
    
    A consumer is expected to disable a PWM before calling pwm_put(). And if
    they didn't there is hopefully a good reason (or the consumer needs
    fixing). Also if disabling an enabled PWM was the right thing to do,
    this should better be done in the framework instead of in each low level
    driver.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a2ea5c0e5d1076fc189f695f18f6341f58f469d
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 7 18:27:51 2021 +0200

    pwm: img: Don't modify HW state in .remove() callback
    
    [ Upstream commit c68eb29c8e9067c08175dd0414f6984f236f719d ]
    
    A consumer is expected to disable a PWM before calling pwm_put(). And if
    they didn't there is hopefully a good reason (or the consumer needs
    fixing). Also if disabling an enabled PWM was the right thing to do,
    this should better be done in the framework instead of in each low level
    driver.
    
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db8838e48a0a7f30bc6d4d6f0f9cd4e2f06c289f
Author: Ofir Bitton <obitton@habana.ai>
Date:   Tue Jul 20 09:16:05 2021 +0300

    habanalabs: add validity check for event ID received from F/W
    
    [ Upstream commit a6c849012b0f51c674f52384bd9a4f3dc0a33c31 ]
    
    Currently there is no validity check for event ID received from F/W,
    Thus exposing driver to memory overrun.
    
    Signed-off-by: Ofir Bitton <obitton@habana.ai>
    Reviewed-by: Oded Gabbay <ogabbay@kernel.org>
    Signed-off-by: Oded Gabbay <ogabbay@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7736e2faa13b0c0b677b901044d1e21879bd314
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:23 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_delete_snapshot_group
    
    [ Upstream commit 17243e1c3072b8417a5ebfc53065d0a87af7ca77 ]
    
    kobject_put() should be used to cleanup the memory associated with the
    kobject instead of kobject_del().  See the section "Kobject removal" of
    "Documentation/core-api/kobject.rst".
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-7-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-7-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0f36028d01339976c0d3dd67f11dd99f374f2e49
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:21 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_create_snapshot_group
    
    [ Upstream commit b2fe39c248f3fa4bbb2a20759b4fdd83504190f7 ]
    
    If kobject_init_and_add returns with error, kobject_put() is needed here
    to avoid memory leak, because kobject_init_and_add may return error
    without freeing the memory associated with the kobject it allocated.
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-6-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-6-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5770b54b112e3ea252fc0547dd1fbc5af5c7e7c3
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:18 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_delete_##name##_group
    
    [ Upstream commit a3e181259ddd61fd378390977a1e4e2316853afa ]
    
    The kobject_put() should be used to cleanup the memory associated with the
    kobject instead of kobject_del.  See the section "Kobject removal" of
    "Documentation/core-api/kobject.rst".
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-5-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-5-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5acb21e30d85f90b658bae7fb3f53b5e42952292
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:15 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_create_##name##_group
    
    [ Upstream commit 24f8cb1ed057c840728167dab33b32e44147c86f ]
    
    If kobject_init_and_add return with error, kobject_put() is needed here to
    avoid memory leak, because kobject_init_and_add may return error without
    freeing the memory associated with the kobject it allocated.
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-4-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-4-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0480f7a480bccdd5e747e64365b703105ccae350
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:12 2021 -0700

    nilfs2: fix NULL pointer in nilfs_##name##_attr_release
    
    [ Upstream commit dbc6e7d44a514f231a64d9d5676e001b660b6448 ]
    
    In nilfs_##name##_attr_release, kobj->parent should not be referenced
    because it is a NULL pointer.  The release() method of kobject is always
    called in kobject_put(kobj), in the implementation of kobject_put(), the
    kobj->parent will be assigned as NULL before call the release() method.
    So just use kobj to get the subgroups, which is more efficient and can fix
    a NULL pointer reference problem.
    
    Link: https://lkml.kernel.org/r/20210629022556.3985106-3-sunnanyong@huawei.com
    Link: https://lkml.kernel.org/r/1625651306-10829-3-git-send-email-konishi.ryusuke@gmail.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d95b50ff07b831495a87eb47dd3a7f23eaec2a40
Author: Nanyong Sun <sunnanyong@huawei.com>
Date:   Tue Sep 7 20:00:09 2021 -0700

    nilfs2: fix memory leak in nilfs_sysfs_create_device_group
    
    [ Upstream commit 5f5dec07aca7067216ed4c1342e464e7307a9197 ]
    
    Patch series "nilfs2: fix incorrect usage of kobject".
    
    This patchset from Nanyong Sun fixes memory leak issues and a NULL
    pointer dereference issue caused by incorrect usage of kboject in nilfs2
    sysfs implementation.
    
    This patch (of 6):
    
    Reported by syzkaller:
    
      BUG: memory leak
      unreferenced object 0xffff888100ca8988 (size 8):
      comm "syz-executor.1", pid 1930, jiffies 4294745569 (age 18.052s)
      hex dump (first 8 bytes):
      6c 6f 6f 70 31 00 ff ff loop1...
      backtrace:
        kstrdup+0x36/0x70 mm/util.c:60
        kstrdup_const+0x35/0x60 mm/util.c:83
        kvasprintf_const+0xf1/0x180 lib/kasprintf.c:48
        kobject_set_name_vargs+0x56/0x150 lib/kobject.c:289
        kobject_add_varg lib/kobject.c:384 [inline]
        kobject_init_and_add+0xc9/0x150 lib/kobject.c:473
        nilfs_sysfs_create_device_group+0x150/0x7d0 fs/nilfs2/sysfs.c:986
        init_nilfs+0xa21/0xea0 fs/nilfs2/the_nilfs.c:637
        nilfs_fill_super fs/nilfs2/super.c:1046 [inline]
        nilfs_mount+0x7b4/0xe80 fs/nilfs2/super.c:1316
        legacy_get_tree+0x105/0x210 fs/fs_context.c:592
        vfs_get_tree+0x8e/0x2d0 fs/super.c:1498
        do_new_mount fs/namespace.c:2905 [inline]
        path_mount+0xf9b/0x1990 fs/namespace.c:3235
        do_mount+0xea/0x100 fs/namespace.c:3248
        __do_sys_mount fs/namespace.c:3456 [inline]
        __se_sys_mount fs/namespace.c:3433 [inline]
        __x64_sys_mount+0x14b/0x1f0 fs/namespace.c:3433
        do_syscall_x64 arch/x86/entry/common.c:50 [inline]
        do_syscall_64+0x3b/0x90 arch/x86/entry/common.c:80
        entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    If kobject_init_and_add return with error, then the cleanup of kobject
    is needed because memory may be allocated in kobject_init_and_add
    without freeing.
    
    And the place of cleanup_dev_kobject should use kobject_put to free the
    memory associated with the kobject.  As the section "Kobject removal" of
    "Documentation/core-api/kobject.rst" says, kobject_del() just makes the
    kobject "invisible", but it is not cleaned up.  And no more cleanup will
    do after cleanup_dev_kobject, so kobject_put is needed here.
    
    Link: https://lkml.kernel.org/r/1625651306-10829-1-git-send-email-konishi.ryusuke@gmail.com
    Link: https://lkml.kernel.org/r/1625651306-10829-2-git-send-email-konishi.ryusuke@gmail.com
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Link: https://lkml.kernel.org/r/20210629022556.3985106-2-sunnanyong@huawei.com
    Signed-off-by: Nanyong Sun <sunnanyong@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aa1af89a6697ed8f1f0d3d62029036158a4486d9
Author: Anand Jain <anand.jain@oracle.com>
Date:   Tue Aug 31 09:21:28 2021 +0800

    btrfs: fix lockdep warning while mounting sprout fs
    
    [ Upstream commit c124706900c20dee70f921bb3a90492431561a0a ]
    
    Following test case reproduces lockdep warning.
    
      Test case:
    
      $ mkfs.btrfs -f <dev1>
      $ btrfstune -S 1 <dev1>
      $ mount <dev1> <mnt>
      $ btrfs device add <dev2> <mnt> -f
      $ umount <mnt>
      $ mount <dev2> <mnt>
      $ umount <mnt>
    
    The warning claims a possible ABBA deadlock between the threads
    initiated by [#1] btrfs device add and [#0] the mount.
    
      [ 540.743122] WARNING: possible circular locking dependency detected
      [ 540.743129] 5.11.0-rc7+ #5 Not tainted
      [ 540.743135] ------------------------------------------------------
      [ 540.743142] mount/2515 is trying to acquire lock:
      [ 540.743149] ffffa0c5544c2ce0 (&fs_devs->device_list_mutex){+.+.}-{4:4}, at: clone_fs_devices+0x6d/0x210 [btrfs]
      [ 540.743458] but task is already holding lock:
      [ 540.743461] ffffa0c54a7932b8 (btrfs-chunk-00){++++}-{4:4}, at: __btrfs_tree_read_lock+0x32/0x200 [btrfs]
      [ 540.743541] which lock already depends on the new lock.
      [ 540.743543] the existing dependency chain (in reverse order) is:
    
      [ 540.743546] -> #1 (btrfs-chunk-00){++++}-{4:4}:
      [ 540.743566] down_read_nested+0x48/0x2b0
      [ 540.743585] __btrfs_tree_read_lock+0x32/0x200 [btrfs]
      [ 540.743650] btrfs_read_lock_root_node+0x70/0x200 [btrfs]
      [ 540.743733] btrfs_search_slot+0x6c6/0xe00 [btrfs]
      [ 540.743785] btrfs_update_device+0x83/0x260 [btrfs]
      [ 540.743849] btrfs_finish_chunk_alloc+0x13f/0x660 [btrfs] <--- device_list_mutex
      [ 540.743911] btrfs_create_pending_block_groups+0x18d/0x3f0 [btrfs]
      [ 540.743982] btrfs_commit_transaction+0x86/0x1260 [btrfs]
      [ 540.744037] btrfs_init_new_device+0x1600/0x1dd0 [btrfs]
      [ 540.744101] btrfs_ioctl+0x1c77/0x24c0 [btrfs]
      [ 540.744166] __x64_sys_ioctl+0xe4/0x140
      [ 540.744170] do_syscall_64+0x4b/0x80
      [ 540.744174] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      [ 540.744180] -> #0 (&fs_devs->device_list_mutex){+.+.}-{4:4}:
      [ 540.744184] __lock_acquire+0x155f/0x2360
      [ 540.744188] lock_acquire+0x10b/0x5c0
      [ 540.744190] __mutex_lock+0xb1/0xf80
      [ 540.744193] mutex_lock_nested+0x27/0x30
      [ 540.744196] clone_fs_devices+0x6d/0x210 [btrfs]
      [ 540.744270] btrfs_read_chunk_tree+0x3c7/0xbb0 [btrfs]
      [ 540.744336] open_ctree+0xf6e/0x2074 [btrfs]
      [ 540.744406] btrfs_mount_root.cold.72+0x16/0x127 [btrfs]
      [ 540.744472] legacy_get_tree+0x38/0x90
      [ 540.744475] vfs_get_tree+0x30/0x140
      [ 540.744478] fc_mount+0x16/0x60
      [ 540.744482] vfs_kern_mount+0x91/0x100
      [ 540.744484] btrfs_mount+0x1e6/0x670 [btrfs]
      [ 540.744536] legacy_get_tree+0x38/0x90
      [ 540.744537] vfs_get_tree+0x30/0x140
      [ 540.744539] path_mount+0x8d8/0x1070
      [ 540.744541] do_mount+0x8d/0xc0
      [ 540.744543] __x64_sys_mount+0x125/0x160
      [ 540.744545] do_syscall_64+0x4b/0x80
      [ 540.744547] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
      [ 540.744551] other info that might help us debug this:
      [ 540.744552] Possible unsafe locking scenario:
    
      [ 540.744553] CPU0                            CPU1
      [ 540.744554] ----                            ----
      [ 540.744555] lock(btrfs-chunk-00);
      [ 540.744557]                                         lock(&fs_devs->device_list_mutex);
      [ 540.744560]                                         lock(btrfs-chunk-00);
      [ 540.744562] lock(&fs_devs->device_list_mutex);
      [ 540.744564]
       *** DEADLOCK ***
    
      [ 540.744565] 3 locks held by mount/2515:
      [ 540.744567] #0: ffffa0c56bf7a0e0 (&type->s_umount_key#42/1){+.+.}-{4:4}, at: alloc_super.isra.16+0xdf/0x450
      [ 540.744574] #1: ffffffffc05a9628 (uuid_mutex){+.+.}-{4:4}, at: btrfs_read_chunk_tree+0x63/0xbb0 [btrfs]
      [ 540.744640] #2: ffffa0c54a7932b8 (btrfs-chunk-00){++++}-{4:4}, at: __btrfs_tree_read_lock+0x32/0x200 [btrfs]
      [ 540.744708]
       stack backtrace:
      [ 540.744712] CPU: 2 PID: 2515 Comm: mount Not tainted 5.11.0-rc7+ #5
    
    But the device_list_mutex in clone_fs_devices() is redundant, as
    explained below.  Two threads [1]  and [2] (below) could lead to
    clone_fs_device().
    
      [1]
      open_ctree <== mount sprout fs
       btrfs_read_chunk_tree()
        mutex_lock(&uuid_mutex) <== global lock
        read_one_dev()
         open_seed_devices()
          clone_fs_devices() <== seed fs_devices
           mutex_lock(&orig->device_list_mutex) <== seed fs_devices
    
      [2]
      btrfs_init_new_device() <== sprouting
       mutex_lock(&uuid_mutex); <== global lock
       btrfs_prepare_sprout()
         lockdep_assert_held(&uuid_mutex)
         clone_fs_devices(seed_fs_device) <== seed fs_devices
    
    Both of these threads hold uuid_mutex which is sufficient to protect
    getting the seed device(s) freed while we are trying to clone it for
    sprouting [2] or mounting a sprout [1] (as above). A mounted seed device
    can not free/write/replace because it is read-only. An unmounted seed
    device can be freed by btrfs_free_stale_devices(), but it needs
    uuid_mutex.  So this patch removes the unnecessary device_list_mutex in
    clone_fs_devices().  And adds a lockdep_assert_held(&uuid_mutex) in
    clone_fs_devices().
    
    Reported-by: Su Yue <l@damenly.su>
    Tested-by: Su Yue <l@damenly.su>
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c43803c1aa76f2cc15ee641564412741a18028ff
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Tue Jul 27 17:01:16 2021 -0400

    btrfs: update the bdev time directly when closing
    
    [ Upstream commit 8f96a5bfa1503e0a5f3c78d51e993a1794d4aff1 ]
    
    We update the ctime/mtime of a block device when we remove it so that
    blkid knows the device changed.  However we do this by re-opening the
    block device and calling filp_update_time.  This is more correct because
    it'll call the inode->i_op->update_time if it exists, but the block dev
    inodes do not do this.  Instead call generic_update_time() on the
    bd_inode in order to avoid the blkdev_open path and get rid of the
    following lockdep splat:
    
    ======================================================
    WARNING: possible circular locking dependency detected
    5.14.0-rc2+ #406 Not tainted
    ------------------------------------------------------
    losetup/11596 is trying to acquire lock:
    ffff939640d2f538 ((wq_completion)loop0){+.+.}-{0:0}, at: flush_workqueue+0x67/0x5e0
    
    but task is already holding lock:
    ffff939655510c68 (&lo->lo_mutex){+.+.}-{3:3}, at: __loop_clr_fd+0x41/0x660 [loop]
    
    which lock already depends on the new lock.
    
    the existing dependency chain (in reverse order) is:
    
    -> #4 (&lo->lo_mutex){+.+.}-{3:3}:
           __mutex_lock+0x7d/0x750
           lo_open+0x28/0x60 [loop]
           blkdev_get_whole+0x25/0xf0
           blkdev_get_by_dev.part.0+0x168/0x3c0
           blkdev_open+0xd2/0xe0
           do_dentry_open+0x161/0x390
           path_openat+0x3cc/0xa20
           do_filp_open+0x96/0x120
           do_sys_openat2+0x7b/0x130
           __x64_sys_openat+0x46/0x70
           do_syscall_64+0x38/0x90
           entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    -> #3 (&disk->open_mutex){+.+.}-{3:3}:
           __mutex_lock+0x7d/0x750
           blkdev_get_by_dev.part.0+0x56/0x3c0
           blkdev_open+0xd2/0xe0
           do_dentry_open+0x161/0x390
           path_openat+0x3cc/0xa20
           do_filp_open+0x96/0x120
           file_open_name+0xc7/0x170
           filp_open+0x2c/0x50
           btrfs_scratch_superblocks.part.0+0x10f/0x170
           btrfs_rm_device.cold+0xe8/0xed
           btrfs_ioctl+0x2a31/0x2e70
           __x64_sys_ioctl+0x80/0xb0
           do_syscall_64+0x38/0x90
           entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    -> #2 (sb_writers#12){.+.+}-{0:0}:
           lo_write_bvec+0xc2/0x240 [loop]
           loop_process_work+0x238/0xd00 [loop]
           process_one_work+0x26b/0x560
           worker_thread+0x55/0x3c0
           kthread+0x140/0x160
           ret_from_fork+0x1f/0x30
    
    -> #1 ((work_completion)(&lo->rootcg_work)){+.+.}-{0:0}:
           process_one_work+0x245/0x560
           worker_thread+0x55/0x3c0
           kthread+0x140/0x160
           ret_from_fork+0x1f/0x30
    
    -> #0 ((wq_completion)loop0){+.+.}-{0:0}:
           __lock_acquire+0x10ea/0x1d90
           lock_acquire+0xb5/0x2b0
           flush_workqueue+0x91/0x5e0
           drain_workqueue+0xa0/0x110
           destroy_workqueue+0x36/0x250
           __loop_clr_fd+0x9a/0x660 [loop]
           block_ioctl+0x3f/0x50
           __x64_sys_ioctl+0x80/0xb0
           do_syscall_64+0x38/0x90
           entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    other info that might help us debug this:
    
    Chain exists of:
      (wq_completion)loop0 --> &disk->open_mutex --> &lo->lo_mutex
    
     Possible unsafe locking scenario:
    
           CPU0                    CPU1
           ----                    ----
      lock(&lo->lo_mutex);
                                   lock(&disk->open_mutex);
                                   lock(&lo->lo_mutex);
      lock((wq_completion)loop0);
    
     *** DEADLOCK ***
    
    1 lock held by losetup/11596:
     #0: ffff939655510c68 (&lo->lo_mutex){+.+.}-{3:3}, at: __loop_clr_fd+0x41/0x660 [loop]
    
    stack backtrace:
    CPU: 1 PID: 11596 Comm: losetup Not tainted 5.14.0-rc2+ #406
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-2.fc32 04/01/2014
    Call Trace:
     dump_stack_lvl+0x57/0x72
     check_noncircular+0xcf/0xf0
     ? stack_trace_save+0x3b/0x50
     __lock_acquire+0x10ea/0x1d90
     lock_acquire+0xb5/0x2b0
     ? flush_workqueue+0x67/0x5e0
     ? lockdep_init_map_type+0x47/0x220
     flush_workqueue+0x91/0x5e0
     ? flush_workqueue+0x67/0x5e0
     ? verify_cpu+0xf0/0x100
     drain_workqueue+0xa0/0x110
     destroy_workqueue+0x36/0x250
     __loop_clr_fd+0x9a/0x660 [loop]
     ? blkdev_ioctl+0x8d/0x2a0
     block_ioctl+0x3f/0x50
     __x64_sys_ioctl+0x80/0xb0
     do_syscall_64+0x38/0x90
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 921ef7cfef15a7e25511089c9941ee37c3dc9fec
Author: Jeff Layton <jlayton@kernel.org>
Date:   Thu Sep 2 08:31:03 2021 -0400

    ceph: lockdep annotations for try_nonblocking_invalidate
    
    [ Upstream commit 3eaf5aa1cfa8c97c72f5824e2e9263d6cc977b03 ]
    
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 487ead34a208c1da9da7fc9f776b517680255ca1
Author: Xiubo Li <xiubli@redhat.com>
Date:   Wed Aug 25 21:45:43 2021 +0800

    ceph: remove the capsnaps when removing caps
    
    [ Upstream commit a6d37ccdd240e80f26aaea0e62cda310e0e184d7 ]
    
    capsnaps will take inode references via ihold when queueing to flush.
    When force unmounting, the client will just close the sessions and
    may never get a flush reply, causing a leak and inode ref leak.
    
    Fix this by removing the capsnaps for an inode when removing the caps.
    
    URL: https://tracker.ceph.com/issues/52295
    Signed-off-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 386fd6fd01bd1ee92640f97c0d0e06e204641c9f
Author: Jeff Layton <jlayton@kernel.org>
Date:   Wed Aug 11 06:40:42 2021 -0400

    ceph: request Fw caps before updating the mtime in ceph_write_iter
    
    [ Upstream commit b11ed50346683a749632ea664959b28d524d7395 ]
    
    The current code will update the mtime and then try to get caps to
    handle the write. If we end up having to request caps from the MDS, then
    the mtime in the cap grant will clobber the updated mtime and it'll be
    lost.
    
    This is most noticable when two clients are alternately writing to the
    same file. Fw caps are continually being granted and revoked, and the
    mtime ends up stuck because the updated mtimes are always being
    overwritten with the old one.
    
    Fix this by changing the order of operations in ceph_write_iter to get
    the caps before updating the times. Also, make sure we check the pool
    full conditions before even getting any caps or uninlining.
    
    URL: https://tracker.ceph.com/issues/46574
    Reported-by: Jozef Kováč <kovac@firma.zoznam.sk>
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Xiubo Li <xiubli@redhat.com>
    Reviewed-by: Luis Henriques <lhenriques@suse.de>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b26ced26251cc26cc6c8327535687b77af0c55db
Author: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
Date:   Thu Aug 19 14:28:48 2021 +0530

    dmaengine: xilinx_dma: Set DMA mask for coherent APIs
    
    [ Upstream commit aac6c0f90799d66b8989be1e056408f33fd99fe6 ]
    
    The xilinx dma driver uses the consistent allocations, so for correct
    operation also set the DMA mask for coherent APIs. It fixes the below
    kernel crash with dmatest client when DMA IP is configured with 64-bit
    address width and linux is booted from high (>4GB) memory.
    
    Call trace:
    [  489.531257]  dma_alloc_from_pool+0x8c/0x1c0
    [  489.535431]  dma_direct_alloc+0x284/0x330
    [  489.539432]  dma_alloc_attrs+0x80/0xf0
    [  489.543174]  dma_pool_alloc+0x160/0x2c0
    [  489.547003]  xilinx_cdma_prep_memcpy+0xa4/0x180
    [  489.551524]  dmatest_func+0x3cc/0x114c
    [  489.555266]  kthread+0x124/0x130
    [  489.558486]  ret_from_fork+0x10/0x3c
    [  489.562051] ---[ end trace 248625b2d596a90a ]---
    
    Signed-off-by: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
    Reviewed-by: Harini Katakam <harini.katakam@xilinx.com>
    Link: https://lore.kernel.org/r/1629363528-30347-1-git-send-email-radhey.shyam.pandey@xilinx.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c1ea8537730790ee183fa32379932f777c95d17
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Aug 9 11:24:09 2021 +0200

    dmaengine: ioat: depends on !UML
    
    [ Upstream commit bbac7a92a46f0876e588722ebe552ddfe6fd790f ]
    
    Now that UML has PCI support, this driver must depend also on
    !UML since it pokes at X86_64 architecture internals that don't
    exist on ARCH=um.
    
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Acked-by: Dave Jiang <dave.jiang@intel.com>
    Link: https://lore.kernel.org/r/20210809112409.a3a0974874d2.I2ffe3d11ed37f735da2f39884a74c953b258b995@changeid
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 35492619e010b312d0d3fe94bbe182bce0bae5ee
Author: Zou Wei <zou_wei@huawei.com>
Date:   Tue May 4 10:22:57 2021 +0800

    dmaengine: sprd: Add missing MODULE_DEVICE_TABLE
    
    [ Upstream commit 4faee8b65ec32346f8096e64c5fa1d5a73121742 ]
    
    This patch adds missing MODULE_DEVICE_TABLE definition which generates
    correct modalias for automatic loading of this driver when it is built
    as an external module.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zou Wei <zou_wei@huawei.com>
    Reviewed-by: Baolin Wang <baolin.wang7@gmail.com>
    Link: https://lore.kernel.org/r/1620094977-70146-1-git-send-email-zou_wei@huawei.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c12cf7f9afe23eef40cb5cff5fd28a0f39745232
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Jun 25 10:38:10 2021 +0200

    dmaengine: idxd: depends on !UML
    
    [ Upstream commit b2296eeac91555bd13f774efa7ab7d4b12fb71ef ]
    
    Now that UML has PCI support, this driver must depend also on
    !UML since it pokes at X86_64 architecture internals that don't
    exist on ARCH=um.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Acked-by: Dave Jiang <dave.jiang@intel.com>
    Acked-By: Anton Ivanov <anton.ivanov@cambridgegreys.com>
    Link: https://lore.kernel.org/r/20210625103810.fe877ae0aef4.If240438e3f50ae226f3f755fc46ea498c6858393@changeid
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4bb0b171b6ef63474bbbcfcb0b90660c27f8fcc
Author: Wei Huang <wei.huang2@amd.com>
Date:   Fri Aug 20 15:29:55 2021 -0500

    iommu/amd: Relocate GAMSup check to early_enable_iommus
    
    [ Upstream commit c3811a50addd23b9bb5a36278609ee1638debcf6 ]
    
    Currently, iommu_init_ga() checks and disables IOMMU VAPIC support
    (i.e. AMD AVIC support in IOMMU) when GAMSup feature bit is not set.
    However it forgets to clear IRQ_POSTING_CAP from the previously set
    amd_iommu_irq_ops.capability.
    
    This triggers an invalid page fault bug during guest VM warm reboot
    if AVIC is enabled since the irq_remapping_cap(IRQ_POSTING_CAP) is
    incorrectly set, and crash the system with the following kernel trace.
    
        BUG: unable to handle page fault for address: 0000000000400dd8
        RIP: 0010:amd_iommu_deactivate_guest_mode+0x19/0xbc
        Call Trace:
         svm_set_pi_irte_mode+0x8a/0xc0 [kvm_amd]
         ? kvm_make_all_cpus_request_except+0x50/0x70 [kvm]
         kvm_request_apicv_update+0x10c/0x150 [kvm]
         svm_toggle_avic_for_irq_window+0x52/0x90 [kvm_amd]
         svm_enable_irq_window+0x26/0xa0 [kvm_amd]
         vcpu_enter_guest+0xbbe/0x1560 [kvm]
         ? avic_vcpu_load+0xd5/0x120 [kvm_amd]
         ? kvm_arch_vcpu_load+0x76/0x240 [kvm]
         ? svm_get_segment_base+0xa/0x10 [kvm_amd]
         kvm_arch_vcpu_ioctl_run+0x103/0x590 [kvm]
         kvm_vcpu_ioctl+0x22a/0x5d0 [kvm]
         __x64_sys_ioctl+0x84/0xc0
         do_syscall_64+0x33/0x40
         entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fixes by moving the initializing of AMD IOMMU interrupt remapping mode
    (amd_iommu_guest_ir) earlier before setting up the
    amd_iommu_irq_ops.capability with appropriate IRQ_POSTING_CAP flag.
    
    [joro:  Squashed the two patches and limited
            check_features_on_all_iommus() to CONFIG_IRQ_REMAP
            to fix a compile warning.]
    
    Signed-off-by: Wei Huang <wei.huang2@amd.com>
    Co-developed-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Link: https://lore.kernel.org/r/20210820202957.187572-2-suravee.suthikulpanit@amd.com
    Link: https://lore.kernel.org/r/20210820202957.187572-3-suravee.suthikulpanit@amd.com
    Fixes: 8bda0cfbdc1a ("iommu/amd: Detect and initialize guest vAPIC log")
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a07348e9821d7014b27ba3cd7a27318cbc5f4c9
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 8 08:30:41 2021 -0700

    parisc: Move pci_dev_is_behind_card_dino to where it is used
    
    [ Upstream commit 907872baa9f1538eed02ec737b8e89eba6c6e4b9 ]
    
    parisc build test images fail to compile with the following error.
    
    drivers/parisc/dino.c:160:12: error:
            'pci_dev_is_behind_card_dino' defined but not used
    
    Move the function just ahead of its only caller to avoid the error.
    
    Fixes: 5fa1659105fa ("parisc: Disable HP HSC-PCI Cards to prevent kernel crash")
    Cc: Helge Deller <deller@gmx.de>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca907291e11619843ea8b555ca30cf322a8d2514
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Thu Sep 2 14:49:11 2021 +0200

    dma-buf: DMABUF_MOVE_NOTIFY should depend on DMA_SHARED_BUFFER
    
    [ Upstream commit c4f3a3460a5daebc772d9263500e4099b11e7300 ]
    
    Move notify between drivers is an option of DMA-BUF.  Enabling
    DMABUF_MOVE_NOTIFY without DMA_SHARED_BUFFER does not have any impact,
    as drivers/dma-buf/ is not entered during the build when
    DMA_SHARED_BUFFER is disabled.
    
    Fixes: bb42df4662a44765 ("dma-buf: add dynamic DMA-buf handling v15")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210902124913.2698760-2-geert@linux-m68k.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9a1526d51744075a6245d3f3a5544b10a5405c9
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Aug 31 13:48:34 2021 +0200

    drivers: base: cacheinfo: Get rid of DEFINE_SMP_CALL_CACHE_FUNCTION()
    
    [ Upstream commit 4b92d4add5f6dcf21275185c997d6ecb800054cd ]
    
    DEFINE_SMP_CALL_CACHE_FUNCTION() was usefel before the CPU hotplug rework
    to ensure that the cache related functions are called on the upcoming CPU
    because the notifier itself could run on any online CPU.
    
    The hotplug state machine guarantees that the callbacks are invoked on the
    upcoming CPU. So there is no need to have this SMP function call
    obfuscation. That indirection was missed when the hotplug notifiers were
    converted.
    
    This also solves the problem of ARM64 init_cache_level() invoking ACPI
    functions which take a semaphore in that context. That's invalid as SMP
    function calls run with interrupts disabled. Running it just from the
    callback in context of the CPU hotplug thread solves this.
    
    Fixes: 8571890e1513 ("arm64: Add support for ACPI based firmware tables")
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Will Deacon <will@kernel.org>
    Acked-by: Peter Zijlstra <peterz@infradead.org>
    Link: https://lore.kernel.org/r/871r69ersb.ffs@tglx
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45bd9dd1bee8aedc4cbd409b1ba7f9b4f941eea6
Author: Koba Ko <koba.ko@canonical.com>
Date:   Mon Aug 30 10:02:00 2021 +0800

    drm/amdgpu: Disable PCIE_DPM on Intel RKL Platform
    
    [ Upstream commit b3dc549986eb7b38eba4a144e979dc93f386751f ]
    
    Due to high latency in PCIE clock switching on RKL platforms,
    switching the PCIE clock dynamically at runtime can lead to HDMI/DP
    audio problems. On newer asics this is handled in the SMU firmware.
    For SMU7-based asics, disable PCIE clock switching to avoid the issue.
    
    AMD provide a parameter to disable PICE_DPM.
    
    modprobe amdgpu ppfeaturemask=0xfff7bffb
    
    It's better to contorl PCIE_DPM in amd gpu driver,
    switch PCI_DPM by determining intel RKL platform for SMU7-based asics.
    
    Fixes: 1a31474cdb48 ("drm/amd/pm: workaround for audio noise issue")
    Ref: https://lists.freedesktop.org/archives/amd-gfx/2021-August/067413.html
    Signed-off-by: Koba Ko <koba.ko@canonical.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9538018cb2d61c269c4c622131545763f24a9ee
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Jul 22 11:06:44 2021 +0200

    thermal/core: Fix thermal_cooling_device_register() prototype
    
    [ Upstream commit fb83610762dd5927212aa62a468dd3b756b57a88 ]
    
    There are two pairs of declarations for thermal_cooling_device_register()
    and thermal_of_cooling_device_register(), and only one set was changed
    in a recent patch, so the other one now causes a compile-time warning:
    
    drivers/net/wireless/mediatek/mt76/mt7915/init.c: In function 'mt7915_thermal_init':
    drivers/net/wireless/mediatek/mt76/mt7915/init.c:134:48: error: passing argument 1 of 'thermal_cooling_device_register' discards 'const' qualifier from pointer target type [-Werror=discarded-qualifiers]
      134 |         cdev = thermal_cooling_device_register(wiphy_name(wiphy), phy,
          |                                                ^~~~~~~~~~~~~~~~~
    In file included from drivers/net/wireless/mediatek/mt76/mt7915/init.c:7:
    include/linux/thermal.h:407:39: note: expected 'char *' but argument is of type 'const char *'
      407 | thermal_cooling_device_register(char *type, void *devdata,
          |                                 ~~~~~~^~~~
    
    Change the dummy helper functions to have the same arguments as the
    normal version.
    
    Fixes: f991de53a8ab ("thermal: make device_register's type argument const")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Jean-Francois Dagenais <jeff.dagenais@gmail.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210722090717.1116748-1-arnd@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1f9ecc00da1bb6af558251d3eb88ea33aa0c307
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Sun Sep 5 00:54:31 2021 +0900

    tools/bootconfig: Fix tracing_on option checking in ftrace2bconf.sh
    
    [ Upstream commit 32ba9f0fb027cc43074e3ea26fcf831adeee8e03 ]
    
    Since tracing_on indicates only "1" (default) or "0", ftrace2bconf.sh
    only need to check the value is "0".
    
    Link: https://lkml.kernel.org/r/163077087144.222577.6888011847727968737.stgit@devnote2
    
    Fixes: 55ed4560774d ("tools/bootconfig: Add tracing_on support to helper scripts")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 912afe602eacf4c9cf75a74d3cdb5c9f9c7c4698
Author: Lukas Bulwahn <lukas.bulwahn@gmail.com>
Date:   Tue Sep 7 20:00:47 2021 -0700

    Kconfig.debug: drop selecting non-existing HARDLOCKUP_DETECTOR_ARCH
    
    [ Upstream commit 6fe26259b4884b657cbc233fb9cdade9d704976e ]
    
    Commit 05a4a9527931 ("kernel/watchdog: split up config options") adds a
    new config HARDLOCKUP_DETECTOR, which selects the non-existing config
    HARDLOCKUP_DETECTOR_ARCH.
    
    Hence, ./scripts/checkkconfigsymbols.py warns:
    
    HARDLOCKUP_DETECTOR_ARCH Referencing files: lib/Kconfig.debug
    
    Simply drop selecting the non-existing HARDLOCKUP_DETECTOR_ARCH.
    
    Link: https://lkml.kernel.org/r/20210806115618.22088-1-lukas.bulwahn@gmail.com
    Fixes: 05a4a9527931 ("kernel/watchdog: split up config options")
    Signed-off-by: Lukas Bulwahn <lukas.bulwahn@gmail.com>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Masahiro Yamada <masahiroy@kernel.org>
    Cc: Babu Moger <babu.moger@oracle.com>
    Cc: Don Zickus <dzickus@redhat.com>
    Cc: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e418ce8b8dfd47c3555b6e53757382d1fb609b54
Author: Jeff Layton <jlayton@kernel.org>
Date:   Tue Jul 27 15:47:12 2021 -0400

    ceph: cancel delayed work instead of flushing on mdsc teardown
    
    [ Upstream commit b4002173b7989588b6feaefc42edaf011b596782 ]
    
    The first thing metric_delayed_work does is check mdsc->stopping,
    and then return immediately if it's set. That's good since we would
    have already torn down the metric structures at this point, otherwise,
    but there is no locking around mdsc->stopping.
    
    It's possible that the ceph_metric_destroy call could race with the
    delayed_work, in which case we could end up with the delayed_work
    accessing destroyed percpu variables.
    
    At this point in the mdsc teardown, the "stopping" flag has already been
    set, so there's no benefit to flushing the work. Move the work
    cancellation in ceph_metric_destroy ahead of the percpu variable
    destruction, and eliminate the flush_delayed_work call in
    ceph_mdsc_destroy.
    
    Fixes: 18f473b384a6 ("ceph: periodically send perf metrics to MDSes")
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Xiubo Li <xiubli@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8193ad306ea0005bbe1f2f8fc600ab270d27c8dd
Author: Jeff Layton <jlayton@kernel.org>
Date:   Wed Jun 9 14:09:52 2021 -0400

    ceph: allow ceph_put_mds_session to take NULL or ERR_PTR
    
    [ Upstream commit 7e65624d32b6e0429b1d3559e5585657f34f74a1 ]
    
    ...to simplify some error paths.
    
    Signed-off-by: Jeff Layton <jlayton@kernel.org>
    Reviewed-by: Luis Henriques <lhenriques@suse.de>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 41aa215734868ba7cb195e2cc5f00cdba5bd1578
Author: Gwendal Grignou <gwendal@chromium.org>
Date:   Mon Aug 30 11:00:50 2021 -0700

    platform/chrome: cros_ec_trace: Fix format warnings
    
    [ Upstream commit 4665584888ad2175831c972c004115741ec799e9 ]
    
    Fix printf format issues in new tracing events.
    
    Fixes: 814318242687 ("platform/chrome: cros_ec_trace: Add fields to command traces")
    
    Signed-off-by: Gwendal Grignou <gwendal@chromium.org>
    Link: https://lore.kernel.org/r/20210830180050.2077261-1-gwendal@chromium.org
    Signed-off-by: Benson Leung <bleung@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 113a69460de5e82ae3be12b01ec1daee81fd9929
Author: Gwendal Grignou <gwendal@chromium.org>
Date:   Thu May 13 17:57:33 2021 -0700

    platform/chrome: sensorhub: Add trace events for sample
    
    [ Upstream commit d453ceb6549af8798913de6a20444cb7200fdb69 ]
    
    Add trace event to report samples and their timestamp coming from the
    EC. It allows to check if the timestamps are correct and the filter is
    working correctly without introducing too much latency.
    
    To enable these events:
    
    cd /sys/kernel/debug/tracing/
    echo 1 > events/cros_ec/enable
    echo 0 > events/cros_ec/cros_ec_request_start/enable
    echo 0 > events/cros_ec/cros_ec_request_done/enable
    echo 1 > tracing_on
    cat trace_pipe
    Observe event flowing:
    irq/105-chromeo-95      [000] ....   613.659758: cros_ec_sensorhub_timestamp: ...
    irq/105-chromeo-95      [000] ....   613.665219: cros_ec_sensorhub_filter: dx: ...
    
    Signed-off-by: Gwendal Grignou <gwendal@chromium.org>
    Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48271d10bf4cbdd4693ad4f94fb14c2aa7fcc4c5
Author: Dave Jiang <dave.jiang@intel.com>
Date:   Thu Jul 22 10:54:10 2021 -0700

    dmaengine: idxd: fix wq slot allocation index check
    
    [ Upstream commit 673d812d30be67942762bb9e8548abb26a3ba4a7 ]
    
    The sbitmap wait and allocate routine checks the index that is returned
    from sbitmap_queue_get(). It should be idxd >= 0 as 0 is also a valid
    index. This fixes issue where submission path hangs when WQ size is 1.
    
    Fixes: 0705107fcc80 ("dmaengine: idxd: move submission to sbitmap_queue")
    Signed-off-by: Dave Jiang <dave.jiang@intel.com>
    Link: https://lore.kernel.org/r/162697645067.3478714.506720687816951762.stgit@djiang5-desk3.ch.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 777344da345a374eb74f2a743b5399e6e60d566b
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 7 18:27:50 2021 +0200

    pwm: mxs: Don't modify HW state in .probe() after the PWM chip was registered
    
    commit 020162d6f49f2963062229814a56a89c86cbeaa8 upstream.
    
    This fixes a race condition: After pwmchip_add() is called there might
    already be a consumer and then modifying the hardware behind the
    consumer's back is bad. So reset before calling pwmchip_add().
    
    Note that reseting the hardware isn't the right thing to do if the PWM
    is already running as it might e.g. disable (or even enable) a backlight
    that is supposed to be on (or off).
    
    Fixes: 4dce82c1e840 ("pwm: add pwm-mxs support")
    Cc: Sascha Hauer <s.hauer@pengutronix.de>
    Cc: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 322b70b522abe03cd59712bb47a72eddd835d19d
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed Jul 7 18:27:49 2021 +0200

    pwm: lpc32xx: Don't modify HW state in .probe() after the PWM chip was registered
    
    commit 3d2813fb17e5fd0d73c1d1442ca0192bde4af10e upstream.
    
    This fixes a race condition: After pwmchip_add() is called there might
    already be a consumer and then modifying the hardware behind the
    consumer's back is bad. So set the default before.
    
    (Side-note: I don't know what this register setting actually does, if
    this modifies the polarity there is an inconsistency because the
    inversed polarity isn't considered if the PWM is already running during
    .probe().)
    
    Fixes: acfd92fdfb93 ("pwm: lpc32xx: Set PWM_PIN_LEVEL bit to default value")
    Cc: Sylvain Lemieux <slemieux@tycoint.com>
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c63df77c40ca40979ed8bb02b4a07500eef6cd28
Author: Prasad Sodagudi <psodagud@codeaurora.org>
Date:   Tue Sep 7 04:24:23 2021 -0700

    PM: sleep: core: Avoid setting power.must_resume to false
    
    commit 4a9344cd0aa4499beb3772bbecb40bb78888c0e1 upstream.
    
    There are variables(power.may_skip_resume and dev->power.must_resume)
    and DPM_FLAG_MAY_SKIP_RESUME flags to control the resume of devices after
    a system wide suspend transition.
    
    Setting the DPM_FLAG_MAY_SKIP_RESUME flag means that the driver allows
    its "noirq" and "early" resume callbacks to be skipped if the device
    can be left in suspend after a system-wide transition into the working
    state. PM core determines that the driver's "noirq" and "early" resume
    callbacks should be skipped or not with dev_pm_skip_resume() function by
    checking power.may_skip_resume variable.
    
    power.must_resume variable is getting set to false in __device_suspend()
    function without checking device's DPM_FLAG_MAY_SKIP_RESUME settings.
    In problematic scenario, where all the devices in the suspend_late
    stage are successful and some device can fail to suspend in
    suspend_noirq phase. So some devices successfully suspended in suspend_late
    stage are not getting chance to execute __device_suspend_noirq()
    to set dev->power.must_resume variable to true and not getting
    resumed in early_resume phase.
    
    Add a check for device's DPM_FLAG_MAY_SKIP_RESUME flag before
    setting power.must_resume variable in __device_suspend function.
    
    Fixes: 6e176bf8d461 ("PM: sleep: core: Do not skip callbacks in the resume phase")
    Signed-off-by: Prasad Sodagudi <psodagud@codeaurora.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74190973ab01fb88e8b685f417651e30112ed4a1
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Tue Sep 7 19:58:21 2021 -0700

    profiling: fix shift-out-of-bounds bugs
    
    commit 2d186afd04d669fe9c48b994c41a7405a3c9f16d upstream.
    
    Syzbot reported shift-out-of-bounds bug in profile_init().
    The problem was in incorrect prof_shift. Since prof_shift value comes from
    userspace we need to clamp this value into [0, BITS_PER_LONG -1]
    boundaries.
    
    Second possible shiht-out-of-bounds was found by Tetsuo:
    sample_step local variable in read_profile() had "unsigned int" type,
    but prof_shift allows to make a BITS_PER_LONG shift. So, to prevent
    possible shiht-out-of-bounds sample_step type was changed to
    "unsigned long".
    
    Also, "unsigned short int" will be sufficient for storing
    [0, BITS_PER_LONG] value, that's why there is no need for
    "unsigned long" prof_shift.
    
    Link: https://lkml.kernel.org/r/20210813140022.5011-1-paskripkin@gmail.com
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-and-tested-by: syzbot+e68c89a9510c159d9684@syzkaller.appspotmail.com
    Suggested-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0796d99c1b16f03fd34024a26da2e81ec1c728c1
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Tue Sep 7 20:00:26 2021 -0700

    nilfs2: use refcount_dec_and_lock() to fix potential UAF
    
    commit 98e2e409e76ef7781d8511f997359e9c504a95c1 upstream.
    
    When the refcount is decreased to 0, the resource reclamation branch is
    entered.  Before CPU0 reaches the race point (1), CPU1 may obtain the
    spinlock and traverse the rbtree to find 'root', see
    nilfs_lookup_root().
    
    Although CPU1 will call refcount_inc() to increase the refcount, it is
    obviously too late.  CPU0 will release 'root' directly, CPU1 then
    accesses 'root' and triggers UAF.
    
    Use refcount_dec_and_lock() to ensure that both the operations of
    decrease refcount to 0 and link deletion are lock protected eliminates
    this risk.
    
                 CPU0                      CPU1
            nilfs_put_root():
                        <-------- (1)
                                    spin_lock(&nilfs->ns_cptree_lock);
                                    rb_erase(&root->rb_node, &nilfs->ns_cptree);
                                    spin_unlock(&nilfs->ns_cptree_lock);
    
            kfree(root);
                        <-------- use-after-free
    
      refcount_t: underflow; use-after-free.
      WARNING: CPU: 2 PID: 9476 at lib/refcount.c:28 \
      refcount_warn_saturate+0x1cf/0x210 lib/refcount.c:28
      Modules linked in:
      CPU: 2 PID: 9476 Comm: syz-executor.0 Not tainted 5.10.45-rc1+ #3
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), ...
      RIP: 0010:refcount_warn_saturate+0x1cf/0x210 lib/refcount.c:28
      ... ...
      Call Trace:
         __refcount_sub_and_test include/linux/refcount.h:283 [inline]
         __refcount_dec_and_test include/linux/refcount.h:315 [inline]
         refcount_dec_and_test include/linux/refcount.h:333 [inline]
         nilfs_put_root+0xc1/0xd0 fs/nilfs2/the_nilfs.c:795
         nilfs_segctor_destroy fs/nilfs2/segment.c:2749 [inline]
         nilfs_detach_log_writer+0x3fa/0x570 fs/nilfs2/segment.c:2812
         nilfs_put_super+0x2f/0xf0 fs/nilfs2/super.c:467
         generic_shutdown_super+0xcd/0x1f0 fs/super.c:464
         kill_block_super+0x4a/0x90 fs/super.c:1446
         deactivate_locked_super+0x6a/0xb0 fs/super.c:335
         deactivate_super+0x85/0x90 fs/super.c:366
         cleanup_mnt+0x277/0x2e0 fs/namespace.c:1118
         __cleanup_mnt+0x15/0x20 fs/namespace.c:1125
         task_work_run+0x8e/0x110 kernel/task_work.c:151
         tracehook_notify_resume include/linux/tracehook.h:188 [inline]
         exit_to_user_mode_loop kernel/entry/common.c:164 [inline]
         exit_to_user_mode_prepare+0x13c/0x170 kernel/entry/common.c:191
         syscall_exit_to_user_mode+0x16/0x30 kernel/entry/common.c:266
         do_syscall_64+0x45/0x80 arch/x86/entry/common.c:56
         entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    There is no reproduction program, and the above is only theoretical
    analysis.
    
    Link: https://lkml.kernel.org/r/1629859428-5906-1-git-send-email-konishi.ryusuke@gmail.com
    Fixes: ba65ae4729bf ("nilfs2: add checkpoint tree to nilfs object")
    Link: https://lkml.kernel.org/r/20210723012317.4146-1-thunder.leizhen@huawei.com
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Signed-off-by: Ryusuke Konishi <konishi.ryusuke@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30417cbeccffeaaf5d7fa5a9e9feffe246a1430f
Author: Cyrill Gorcunov <gorcunov@gmail.com>
Date:   Tue Sep 7 20:00:41 2021 -0700

    prctl: allow to setup brk for et_dyn executables
    
    commit e1fbbd073137a9d63279f6bf363151a938347640 upstream.
    
    Keno Fischer reported that when a binray loaded via ld-linux-x the
    prctl(PR_SET_MM_MAP) doesn't allow to setup brk value because it lays
    before mm:end_data.
    
    For example a test program shows
    
     | # ~/t
     |
     | start_code      401000
     | end_code        401a15
     | start_stack     7ffce4577dd0
     | start_data      403e10
     | end_data        40408c
     | start_brk       b5b000
     | sbrk(0)         b5b000
    
    and when executed via ld-linux
    
     | # /lib64/ld-linux-x86-64.so.2 ~/t
     |
     | start_code      7fc25b0a4000
     | end_code        7fc25b0c4524
     | start_stack     7fffcc6b2400
     | start_data      7fc25b0ce4c0
     | end_data        7fc25b0cff98
     | start_brk       55555710c000
     | sbrk(0)         55555710c000
    
    This of course prevent criu from restoring such programs.  Looking into
    how kernel operates with brk/start_brk inside brk() syscall I don't see
    any problem if we allow to setup brk/start_brk without checking for
    end_data.  Even if someone pass some weird address here on a purpose then
    the worst possible result will be an unexpected unmapping of existing vma
    (own vma, since prctl works with the callers memory) but test for
    RLIMIT_DATA is still valid and a user won't be able to gain more memory in
    case of expanding VMAs via new values shipped with prctl call.
    
    Link: https://lkml.kernel.org/r/20210121221207.GB2174@grain
    Fixes: bbdc6076d2e5 ("binfmt_elf: move brk out of mmap when doing direct loader exec")
    Signed-off-by: Cyrill Gorcunov <gorcunov@gmail.com>
    Reported-by: Keno Fischer <keno@juliacomputing.com>
    Acked-by: Andrey Vagin <avagin@gmail.com>
    Tested-by: Andrey Vagin <avagin@gmail.com>
    Cc: Dmitry Safonov <0x7f454c46@gmail.com>
    Cc: Kirill Tkhai <ktkhai@virtuozzo.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    Cc: Alexander Mikhalitsyn <alexander.mikhalitsyn@virtuozzo.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e464b3876b022c0c4e0eb21518c491c6eb38130c
Author: Xie Yongji <xieyongji@bytedance.com>
Date:   Mon May 17 16:35:57 2021 +0800

    9p/trans_virtio: Remove sysfs file on probe failure
    
    commit f997ea3b7afc108eb9761f321b57de2d089c7c48 upstream.
    
    This ensures we don't leak the sysfs file if we failed to
    allocate chan->vc_wq during probe.
    
    Link: http://lkml.kernel.org/r/20210517083557.172-1-xieyongji@bytedance.com
    Fixes: 86c8437383ac ("net/9p: Add sysfs mount_tag file for virtio 9P device")
    Signed-off-by: Xie Yongji <xieyongji@bytedance.com>
    Signed-off-by: Dominique Martinet <asmadeus@codewreck.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 375e779ec32a87edeb6bb26582c1c9a1f59876f9
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Aug 10 11:44:13 2021 +0300

    thermal/drivers/exynos: Fix an error code in exynos_tmu_probe()
    
    commit 02d438f62c05f0d055ceeedf12a2f8796b258c08 upstream.
    
    This error path return success but it should propagate the negative
    error code from devm_clk_get().
    
    Fixes: 6c247393cfdd ("thermal: exynos: Add TMU support for Exynos7 SoC")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210810084413.GA23810@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38ab04186fb3f3b50f33e5cfde38066c5227e89d
Author: Namhyung Kim <namhyung@kernel.org>
Date:   Fri Sep 10 15:46:30 2021 -0700

    perf tools: Allow build-id with trailing zeros
    
    commit 4a86d41404005a3c7e7b6065e8169ac6202887a9 upstream.
    
    Currently perf saves a build-id with size but old versions assumes the
    size of 20.  In case the build-id is less than 20 (like for MD5), it'd
    fill the rest with 0s.
    
    I saw a problem when old version of perf record saved a binary in the
    build-id cache and new version of perf reads the data.  The symbols
    should be read from the build-id cache (as the path no longer has the
    same binary) but it failed due to mismatch in the build-id.
    
      symsrc__init: build id mismatch for /home/namhyung/.debug/.build-id/53/e4c2f42a4c61a2d632d92a72afa08f00000000/elf.
    
    The build-id event in the data has 20 byte build-ids, but it saw a
    different size (16) when it reads the build-id of the elf file in the
    build-id cache.
    
      $ readelf -n ~/.debug/.build-id/53/e4c2f42a4c61a2d632d92a72afa08f00000000/elf
    
      Displaying notes found in: .note.gnu.build-id
        Owner                Data size      Description
        GNU                  0x00000010     NT_GNU_BUILD_ID (unique build ID bitstring)
          Build ID: 53e4c2f42a4c61a2d632d92a72afa08f
    
    Let's fix this by allowing trailing zeros if the size is different.
    
    Fixes: 39be8d0115b321ed ("perf tools: Pass build_id object to dso__build_id_equal()")
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Acked-by: Jiri Olsa <jolsa@redhat.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/20210910224630.1084877-1-namhyung@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87c4144450e6f09afeb2adc336f35b5f5274205c
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Thu Nov 26 18:00:06 2020 +0100

    tools lib: Adopt memchr_inv() from kernel
    
    commit b3e453272d436aab8adbe810c6d7043670281487 upstream.
    
    We'll use it to check for undefined/zero data.
    
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Suggested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Michael Petlan <mpetlan@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Stephane Eranian <eranian@google.com>
    Link: http://lore.kernel.org/lkml/20201126170026.2619053-6-jolsa@kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebcd3fd9207c98f0c01c317ef3aca7f2df41b72d
Author: Michael Petlan <mpetlan@redhat.com>
Date:   Thu Aug 5 18:06:11 2021 +0200

    perf test: Fix bpf test sample mismatch reporting
    
    commit 3e11300cdfd5f1bc13a05dfc6dccf69aca5dd1dc upstream.
    
    When the expected sample count in the condition changed, the message
    needs to be changed too, otherwise we'll get:
    
      0x1001f2091d8: mmap mask[0]:
      BPF filter result incorrect, expected 56, got 56 samples
    
    Fixes: 4b04e0decd2518e5 ("perf test: Fix basic bpf filtering test")
    Signed-off-by: Michael Petlan <mpetlan@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Sumanth Korikkar <sumanthk@linux.ibm.com>
    Link: https //lore.kernel.org/r/20210805160611.5542-1-mpetlan@redhat.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa64b08931ee27bec3513aed8f7936e99b8d1212
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jul 30 23:27:15 2021 +0300

    dmaengine: acpi: Avoid comparison GSI with Linux vIRQ
    
    commit 67db87dc8284070adb15b3c02c1c31d5cf51c5d6 upstream.
    
    Currently the CRST parsing relies on the fact that on most of x86 devices
    the IRQ mapping is 1:1 with Linux vIRQ. However, it may be not true for
    some. Fix this by converting GSI to Linux vIRQ before checking it.
    
    Fixes: ee8209fd026b ("dma: acpi-dma: parse CSRT to extract additional resources")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210730202715.24375-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d49973b08488f59dd0ada269d9dca210d1fd365
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Jun 25 10:34:37 2021 +0200

    um: virtio_uml: fix memory leak on init failures
    
    commit 7ad28e0df7ee9dbcb793bb88dd81d4d22bb9a10e upstream.
    
    If initialization fails, e.g. because the connection failed,
    we leak the 'vu_dev'. Fix that. Reported by smatch.
    
    Fixes: 5d38f324993f ("um: drivers: Add virtio vhost-user driver")
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Acked-By: Anton Ivanov <anton.ivanov@cambridgegreys.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d0e6a5e44416cdfd8b391fa46c69f7d08f9dd0d
Author: QiuXi <qiuxi1@huawei.com>
Date:   Tue Sep 7 20:00:32 2021 -0700

    coredump: fix memleak in dump_vma_snapshot()
    
    commit 6fcac87e1f9e5b27805a2a404f4849194bb51de8 upstream.
    
    dump_vma_snapshot() allocs memory for *vma_meta, when dump_vma_snapshot()
    returns -EFAULT, the memory will be leaked, so we free it correctly.
    
    Link: https://lkml.kernel.org/r/20210810020441.62806-1-qiuxi1@huawei.com
    Fixes: a07279c9a8cd7 ("binfmt_elf, binfmt_elf_fdpic: use a VMA list snapshot")
    Signed-off-by: QiuXi <qiuxi1@huawei.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Jann Horn <jannh@google.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b24588708fe7cb680d433a0492abb651bb1d5b0
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Sat Aug 14 16:56:26 2021 -0700

    staging: rtl8192u: Fix bitwise vs logical operator in TranslateRxSignalStuff819xUsb()
    
    commit 099ec97ac92911abfb102bb5c68ed270fc12e0dd upstream.
    
    clang warns:
    
    drivers/staging/rtl8192u/r8192U_core.c:4268:20: warning: bitwise and of
    boolean expressions; did you mean logical and? [-Wbool-operation-and]
            bpacket_toself =  bpacket_match_bssid &
                              ^~~~~~~~~~~~~~~~~~~~~
                                                  &&
    1 warning generated.
    
    Replace the bitwise AND with a logical one to clear up the warning, as
    that is clearly what was intended.
    
    Fixes: 8fc8598e61f6 ("Staging: Added Realtek rtl8192u driver to staging")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Link: https://lore.kernel.org/r/20210814235625.1780033-1-nathan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccb79116c37242c07c34c991868acded87509e4c
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Jun 28 16:13:44 2021 -0300

    sctp: add param size validation for SCTP_PARAM_SET_PRIMARY
    
    commit ef6c8d6ccf0c1dccdda092ebe8782777cd7803c9 upstream.
    
    When SCTP handles an INIT chunk, it calls for example:
    sctp_sf_do_5_1B_init
      sctp_verify_init
        sctp_verify_param
      sctp_process_init
        sctp_process_param
          handling of SCTP_PARAM_SET_PRIMARY
    
    sctp_verify_init() wasn't doing proper size validation and neither the
    later handling, allowing it to work over the chunk itself, possibly being
    uninitialized memory.
    
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffca46766850d4b96a26ad511a7997f74da2df8c
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Jun 28 16:13:43 2021 -0300

    sctp: validate chunk size in __rcv_asconf_lookup
    
    commit b6ffe7671b24689c09faa5675dd58f93758a97ae upstream.
    
    In one of the fallbacks that SCTP has for identifying an association for an
    incoming packet, it looks for AddIp chunk (from ASCONF) and take a peek.
    Thing is, at this stage nothing was validating that the chunk actually had
    enough content for that, allowing the peek to happen over uninitialized
    memory.
    
    Similar check already exists in actual asconf handling in
    sctp_verify_asconf().
    
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 473cea4983b582fedb10f84b43e8924716ebc4fc
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Sep 23 13:01:44 2021 +0200

    Revert "net/mlx5: Register to devlink ingress VLAN filter trap"
    
    This reverts commit fe6322774ca28669868a7e231e173e09f7422118 which was
    commit 82e6c96f04e13c72d91777455836ffd012853caa upstream.
    
    It has been reported to cause regressions so should be dropped.
    
    Reported-by: <Patrick.Mclean@sony.com>
    Link: https://lore.kernel.org/r/BY5PR13MB3604D3031E984CA34A57B7C9EEA09@BY5PR13MB3604.namprd13.prod.outlook.com
    Cc: Aya Levin <ayal@nvidia.com>
    Cc: Tariq Toukan <tariqt@nvidia.com>
    Cc: Tariq Toukan <tariqt@nvidia.com>
    Cc: Saeed Mahameed <saeedm@nvidia.com>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: Sasha Levin <sashal@kernel.org>
    Cc: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ce134e65f3b8034220c416ab8cecd8652fdeb2d
Author: Alex Sverdlin <alexander.sverdlin@nokia.com>
Date:   Wed Sep 22 09:59:58 2021 -0700

    ARM: 9098/1: ftrace: MODULE_PLT: Fix build problem without DYNAMIC_FTRACE
    
    commit 6fa630bf473827aee48cbf0efbbdf6f03134e890 upstream
    
    FTRACE_ADDR is only defined when CONFIG_DYNAMIC_FTRACE is defined, the
    latter is even stronger requirement than CONFIG_FUNCTION_TRACER (which is
    enough for MCOUNT_ADDR).
    
    Link: https://lists.01.org/hyperkitty/list/kbuild-all@lists.01.org/thread/ZUVCQBHDMFVR7CCB7JPESLJEWERZDJ3T/
    
    Fixes: 1f12fb25c5c5d22f ("ARM: 9079/1: ftrace: Add MODULE_PLTS support")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f91d25a7c89e2f246a541603430ce2420bab58c5
Author: Alex Sverdlin <alexander.sverdlin@nokia.com>
Date:   Wed Sep 22 09:59:57 2021 -0700

    ARM: 9079/1: ftrace: Add MODULE_PLTS support
    
    commit 79f32b221b18c15a98507b101ef4beb52444cc6f upstream
    
    Teach ftrace_make_call() and ftrace_make_nop() about PLTs.
    Teach PLT code about FTRACE and all its callbacks.
    Otherwise the following might happen:
    
    ------------[ cut here ]------------
    WARNING: CPU: 14 PID: 2265 at .../arch/arm/kernel/insn.c:14 __arm_gen_branch+0x83/0x8c()
    ...
    Hardware name: LSI Axxia AXM55XX
    [<c0314a49>] (unwind_backtrace) from [<c03115e9>] (show_stack+0x11/0x14)
    [<c03115e9>] (show_stack) from [<c0519f51>] (dump_stack+0x81/0xa8)
    [<c0519f51>] (dump_stack) from [<c032185d>] (warn_slowpath_common+0x69/0x90)
    [<c032185d>] (warn_slowpath_common) from [<c03218f3>] (warn_slowpath_null+0x17/0x1c)
    [<c03218f3>] (warn_slowpath_null) from [<c03143cf>] (__arm_gen_branch+0x83/0x8c)
    [<c03143cf>] (__arm_gen_branch) from [<c0314337>] (ftrace_make_nop+0xf/0x24)
    [<c0314337>] (ftrace_make_nop) from [<c038ebcb>] (ftrace_process_locs+0x27b/0x3e8)
    [<c038ebcb>] (ftrace_process_locs) from [<c0378d79>] (load_module+0x11e9/0x1a44)
    [<c0378d79>] (load_module) from [<c037974d>] (SyS_finit_module+0x59/0x84)
    [<c037974d>] (SyS_finit_module) from [<c030e981>] (ret_fast_syscall+0x1/0x18)
    ---[ end trace e1b64ced7a89adcc ]---
    ------------[ cut here ]------------
    WARNING: CPU: 14 PID: 2265 at .../kernel/trace/ftrace.c:1979 ftrace_bug+0x1b1/0x234()
    ...
    Hardware name: LSI Axxia AXM55XX
    [<c0314a49>] (unwind_backtrace) from [<c03115e9>] (show_stack+0x11/0x14)
    [<c03115e9>] (show_stack) from [<c0519f51>] (dump_stack+0x81/0xa8)
    [<c0519f51>] (dump_stack) from [<c032185d>] (warn_slowpath_common+0x69/0x90)
    [<c032185d>] (warn_slowpath_common) from [<c03218f3>] (warn_slowpath_null+0x17/0x1c)
    [<c03218f3>] (warn_slowpath_null) from [<c038e87d>] (ftrace_bug+0x1b1/0x234)
    [<c038e87d>] (ftrace_bug) from [<c038ebd5>] (ftrace_process_locs+0x285/0x3e8)
    [<c038ebd5>] (ftrace_process_locs) from [<c0378d79>] (load_module+0x11e9/0x1a44)
    [<c0378d79>] (load_module) from [<c037974d>] (SyS_finit_module+0x59/0x84)
    [<c037974d>] (SyS_finit_module) from [<c030e981>] (ret_fast_syscall+0x1/0x18)
    ---[ end trace e1b64ced7a89adcd ]---
    ftrace failed to modify [<e9ef7006>] 0xe9ef7006
    actual: 02:f0:3b:fa
    ftrace record flags: 0
    (0) expected tramp: c0314265
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad00533858f7b1436f7dc9c555ccac85c0e28c9a
Author: Alex Sverdlin <alexander.sverdlin@nokia.com>
Date:   Wed Sep 22 09:59:56 2021 -0700

    ARM: 9078/1: Add warn suppress parameter to arm_gen_branch_link()
    
    commit 890cb057a46d323fd8c77ebecb6485476614cd21 upstream
    
    Will be used in the following patch. No functional change.
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce90c6706d5a95ddda8d3cea01768bd0b4445851
Author: Alex Sverdlin <alexander.sverdlin@nokia.com>
Date:   Wed Sep 22 09:59:55 2021 -0700

    ARM: 9077/1: PLT: Move struct plt_entries definition to header
    
    commit 4e271701c17dee70c6e1351c4d7d42e70405c6a9 upstream upstream
    
    No functional change, later it will be re-used in several files.
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb46d7c8ae838b37ad4acee44fa3828af3062ce7
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Mar 18 21:03:33 2021 -0700

    ARM: Qualify enabling of swiotlb_init()
    
    commit fcf044891c84e38fc90eb736b818781bccf94e38 upstream.
    
    We do not need a SWIOTLB unless we have DRAM that is addressable beyond
    the arm_dma_limit. Compare max_pfn with arm_dma_pfn_limit to determine
    whether we do need a SWIOTLB to be initialized.
    
    Fixes: ad3c7b18c5b3 ("arm: use swiotlb for bounce buffering on LPAE configs")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79286ea830b3922b38bcefbd150b2010f91a55ce
Author: David Hildenbrand <david@redhat.com>
Date:   Thu Sep 9 16:59:42 2021 +0200

    s390/pci_mmio: fully validate the VMA before calling follow_pte()
    
    commit a8b92b8c1eac8d655a97b1e90f4d83c25d9b9a18 upstream.
    
    We should not walk/touch page tables outside of VMA boundaries when
    holding only the mmap sem in read mode. Evil user space can modify the
    VMA layout just before this function runs and e.g., trigger races with
    page table removal code since commit dd2283f2605e ("mm: mmap: zap pages
    with read mmap_sem in munmap").
    
    find_vma() does not check if the address is >= the VMA start address;
    use vma_lookup() instead.
    
    Reviewed-by: Niklas Schnelle <schnelle@linux.ibm.com>
    Reviewed-by: Liam R. Howlett <Liam.Howlett@oracle.com>
    Fixes: dd2283f2605e ("mm: mmap: zap pages with read mmap_sem in munmap")
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74d54e5ceba3f50b9b695e4740172d876327815a
Author: nick black <dankamongmen@gmail.com>
Date:   Mon Aug 30 04:56:15 2021 -0400

    console: consume APC, DM, DCS
    
    commit 3a2b2eb55681158d3e3ef464fbf47574cf0c517c upstream.
    
    The Linux console's VT102 implementation already consumes OSC
    ("Operating System Command") sequences, probably because that's how
    palette changes are transmitted.
    
    In addition to OSC, there are three other major clases of ANSI control
    strings: APC ("Application Program Command"), PM ("Privacy Message"),
    and DCS ("Device Control String").  They are handled similarly to OSC in
    terms of termination.
    
    Source: vt100.net
    
    Add three new enumerated states, one for each of these types.  All three
    are handled the same way right now--they simply consume input until
    terminated.  I hope to expand upon this firmament in the future.  Add
    new predicate ansi_control_string(), returning true for any of these
    states.  Replace explicit checks against ESosc with calls to this
    function.  Transition to these states appropriately from the escape
    initiation (ESesc) state.
    
    This was motivated by the following Notcurses bugs:
    
     https://github.com/dankamongmen/notcurses/issues/2050
     https://github.com/dankamongmen/notcurses/issues/1828
     https://github.com/dankamongmen/notcurses/issues/2069
    
    where standard VT sequences are not consumed by the Linux console.  It's
    not necessary that the Linux console *support* these sequences, but it
    ought *consume* these well-specified classes of sequences.
    
    Tested by sending a variety of escape sequences to the console, and
    verifying that they still worked, or were now properly consumed.
    Verified that the escapes were properly terminated at a generic level.
    Verified that the Notcurses tools continued to show expected output on
    the Linux console, except now without escape bleedthrough.
    
    Link: https://lore.kernel.org/lkml/YSydL0q8iaUfkphg@schwarzgerat.orthanc/
    Signed-off-by: nick black <dankamongmen@gmail.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Cc: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9493e92a395330787def2b1980e930f5082de2f4
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Jul 22 16:40:41 2021 +0200

    PCI: aardvark: Fix reporting CRS value
    
    commit 43f5c77bcbd27cce70bf33c2b86d6726ce95dd66 upstream.
    
    Set CRSVIS flag in emulated root PCI bridge to indicate support for
    Completion Retry Status.
    
    Add check for CRSSVE flag from root PCI brige when issuing Configuration
    Read Request via PIO to correctly returns fabricated CRS value as it is
    required by PCIe spec.
    
    Link: https://lore.kernel.org/r/20210722144041.12661-5-pali@kernel.org
    Fixes: 8a3ebd8de328 ("PCI: aardvark: Implement emulated root PCI bridge config space")
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org # e0d9d30b7354 ("PCI: pci-bridge-emul: Fix big-endian support")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e766b86a9ef653a8ca48a9f70d3dbb580284594
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Jul 22 16:40:40 2021 +0200

    PCI: pci-bridge-emul: Add PCIe Root Capabilities Register
    
    commit e902bb7c24a7099d0eb0eb4cba06f2d91e9299f3 upstream.
    
    The 16-bit Root Capabilities register is at offset 0x1e in the PCIe
    Capability. Rename current 'rsvd' struct member to 'rootcap'.
    
    Link: https://lore.kernel.org/r/20210722144041.12661-4-pali@kernel.org
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
