commit b43e96dcd58b454757a1af4180c9ed3b8ae4071d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 16 11:59:12 2021 +0200

    Linux 4.9.267
    
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20210415144413.487943796@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78471f5a3ba65ae39dece1b956e551beaaa3164a
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Apr 12 08:28:45 2021 +0200

    xen/events: fix setting irq affinity
    
    The backport of upstream patch 25da4618af240fbec61 ("xen/events: don't
    unmask an event channel when an eoi is pending") introduced a
    regression for stable kernels 5.10 and older: setting IRQ affinity for
    IRQs related to interdomain events would no longer work, as moving the
    IRQ to its new cpu was not included in the irq_ack callback for those
    events.
    
    Fix that by adding the needed call.
    
    Note that kernels 5.11 and later don't need the explicit moving of the
    IRQ to the target cpu in the irq_ack callback, due to a rework of the
    affinity setting in kernel 5.11.
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c423f186b6d712ab720c7535ba89de43aeffacd0
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Fri Mar 5 10:02:09 2021 -0300

    perf map: Tighten snprintf() string precision to pass gcc check on some 32-bit arches
    
    commit 77d02bd00cea9f1a87afe58113fa75b983d6c23a upstream.
    
    Noticed on a debian:experimental mips and mipsel cross build build
    environment:
    
      perfbuilder@ec265a086e9b:~$ mips-linux-gnu-gcc --version | head -1
      mips-linux-gnu-gcc (Debian 10.2.1-3) 10.2.1 20201224
      perfbuilder@ec265a086e9b:~$
    
        CC       /tmp/build/perf/util/map.o
      util/map.c: In function 'map__new':
      util/map.c:109:5: error: '%s' directive output may be truncated writing between 1 and 2147483645 bytes into a region of size 4096 [-Werror=format-truncation=]
        109 |    "%s/platforms/%s/arch-%s/usr/lib/%s",
            |     ^~
      In file included from /usr/mips-linux-gnu/include/stdio.h:867,
                       from util/symbol.h:11,
                       from util/map.c:2:
      /usr/mips-linux-gnu/include/bits/stdio2.h:67:10: note: '__builtin___snprintf_chk' output 32 or more bytes (assuming 4294967321) into a destination of size 4096
         67 |   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
            |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         68 |        __bos (__s), __fmt, __va_arg_pack ());
            |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      cc1: all warnings being treated as errors
    
    Since we have the lenghts for what lands in that place, use it to give
    the compiler more info and make it happy.
    
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Anders Roxell <anders.roxell@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c58c9f9c5c5326320bbe0429a0f45fc1b92024b
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Apr 7 21:38:57 2021 +0200

    netfilter: x_tables: fix compat match/target pad out-of-bound write
    
    commit b29c457a6511435960115c0f548c4360d5f4801d upstream.
    
    xt_compat_match/target_from_user doesn't check that zeroing the area
    to start of next rule won't write past end of allocated ruleset blob.
    
    Remove this code and zero the entire blob beforehand.
    
    Reported-by: syzbot+cfc0247ac173f597aaaa@syzkaller.appspotmail.com
    Reported-by: Andy Nguyen <theflow@google.com>
    Fixes: 9fa492cdc160c ("[NETFILTER]: x_tables: simplify compat API")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9217411e2c40a9e08721937753140849107d921d
Author: Bob Peterson <rpeterso@redhat.com>
Date:   Thu Mar 25 08:51:13 2021 -0400

    gfs2: report "already frozen/thawed" errors
    
    [ Upstream commit ff132c5f93c06bd4432bbab5c369e468653bdec4 ]
    
    Before this patch, gfs2's freeze function failed to report an error
    when the target file system was already frozen as it should (and as
    generic vfs function freeze_super does. Similarly, gfs2's thaw function
    failed to report an error when trying to thaw a file system that is not
    frozen, as vfs function thaw_super does. The errors were checked, but
    it always returned a 0 return code.
    
    This patch adds the missing error return codes to gfs2 freeze and thaw.
    
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 290b4b93c1940b999d03fef13b4ed8ca51356de1
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Mar 24 17:47:41 2021 +0100

    drm/imx: imx-ldb: fix out of bounds array access warning
    
    [ Upstream commit 33ce7f2f95cabb5834cf0906308a5cb6103976da ]
    
    When CONFIG_OF is disabled, building with 'make W=1' produces warnings
    about out of bounds array access:
    
    drivers/gpu/drm/imx/imx-ldb.c: In function 'imx_ldb_set_clock.constprop':
    drivers/gpu/drm/imx/imx-ldb.c:186:8: error: array subscript -22 is below array bounds of 'struct clk *[4]' [-Werror=array-bounds]
    
    Add an error check before the index is used, which helps with the
    warning, as well as any possible other error condition that may be
    triggered at runtime.
    
    The warning could be fixed by adding a Kconfig depedency on CONFIG_OF,
    but Liu Ying points out that the driver may hit the out-of-bounds
    problem at runtime anyway.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Liu Ying <victor.liu@nxp.com>
    Signed-off-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 264550d52b0dc9ce52dd065ebe34549e8b470507
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Apr 12 09:56:57 2021 +0200

    Revert "cifs: Set CIFS_MOUNT_USE_PREFIX_PATH flag on setting cifs_sb->prepath."
    
    This reverts commit 742300e32db00f008e944acafaeba9a12730eff0 which is
    commit a738c93fb1c17e386a09304b517b1c6b2a6a5a8b upstream.
    
    It is reported to cause problems in older kernels, so revert it for now
    until we can figure it out...
    
    Reported-by: Salvatore Bonaccorso <carnil@debian.org>
    Link: https://lore.kernel.org/r/YG7r0UaivWZL762N@eldamar.lan
    Cc: Shyam Prasad N <sprasad@microsoft.com>
    Cc: Aurelien Aptel <aaptel@suse.com>
    Cc: Steve French <stfrench@microsoft.com>
    Cc: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 444aef040977e3b78234e79caeb4a78f65d978d7
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:54 2021 -0400

    net: ieee802154: stop dump llsec params for monitors
    
    commit 1534efc7bbc1121e92c86c2dabebaf2c9dcece19 upstream.
    
    This patch stops dumping llsec params for monitors which we don't support
    yet. Otherwise we will access llsec mib which isn't initialized for
    monitors.
    
    Reported-by: syzbot+cde43a581a8e5f317bc2@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-16-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f1696d0f979131a314d0b6b8822c4a466ea122d
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:53 2021 -0400

    net: ieee802154: forbid monitor for del llsec seclevel
    
    commit 9dde130937e95b72adfae64ab21d6e7e707e2dac upstream.
    
    This patch forbids to del llsec seclevel for monitor interfaces which we
    don't support yet. Otherwise we will access llsec mib which isn't
    initialized for monitors.
    
    Reported-by: syzbot+fbf4fc11a819824e027b@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-15-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c86de71fddc294cea39ec9dc7d1dc02ebb0b10e9
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Apr 4 20:30:41 2021 -0400

    net: ieee802154: forbid monitor for set llsec params
    
    commit 88c17855ac4291fb462e13a86b7516773b6c932e upstream.
    
    This patch forbids to set llsec params for monitor interfaces which we
    don't support yet.
    
    Reported-by: syzbot+8b6719da8a04beeafcc3@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210405003054.256017-3-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfe89ed8d39120c90457125106b49a18293ae347
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:21 2021 -0500

    net: ieee802154: fix nl802154 del llsec devkey
    
    commit 27c746869e1a135dffc2f2a80715bb7aa00445b4 upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_DEVKEY is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+368672e0da240db53b5f@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-4-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 979ef41655a6aa1284646f52c0a162efb3c1a469
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:20 2021 -0500

    net: ieee802154: fix nl802154 add llsec key
    
    commit 20d5fe2d7103f5c43ad11a3d6d259e9d61165c35 upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_KEY is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+ce4e062c2d51977ddc50@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-3-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc62054ad774ce6c8b66761998e9267110492c50
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:19 2021 -0500

    net: ieee802154: fix nl802154 del llsec dev
    
    commit 3d1eac2f45585690d942cf47fd7fbd04093ebd1b upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_DEVICE is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+d946223c2e751d136c94@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-2-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2caa7c2b225fde3b8e2f0d6d8134d4367028680a
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 21 12:43:18 2021 -0500

    net: ieee802154: fix nl802154 del llsec key
    
    commit 37feaaf5ceb2245e474369312bb7b922ce7bce69 upstream.
    
    This patch fixes a nullpointer dereference if NL802154_ATTR_SEC_KEY is
    not set by the user. If this is the case nl802154 will return -EINVAL.
    
    Reported-by: syzbot+ac5c11d2959a8b3c4806@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210221174321.14210-1-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8beeebc48f8499a4cde4de4ac541dcc1cd0ab862
Author: Alexander Aring <aahringo@redhat.com>
Date:   Sun Feb 28 10:18:03 2021 -0500

    net: ieee802154: nl-mac: fix check on panid
    
    commit 6f7f657f24405f426212c09260bf7fe8a52cef33 upstream.
    
    This patch fixes a null pointer derefence for panid handle by move the
    check for the netlink variable directly before accessing them.
    
    Reported-by: syzbot+d4c07de0144f6f63be3a@syzkaller.appspotmail.com
    Signed-off-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210228151817.95700-4-aahringo@redhat.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3883480ce4ebe5b13dbfdc9f2c6503bc9e8ab69
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Mar 4 18:21:25 2021 +0300

    net: mac802154: Fix general protection fault
    
    commit 1165affd484889d4986cf3b724318935a0b120d8 upstream.
    
    syzbot found general protection fault in crypto_destroy_tfm()[1].
    It was caused by wrong clean up loop in llsec_key_alloc().
    If one of the tfm array members is in IS_ERR() range it will
    cause general protection fault in clean up function [1].
    
    Call Trace:
     crypto_free_aead include/crypto/aead.h:191 [inline] [1]
     llsec_key_alloc net/mac802154/llsec.c:156 [inline]
     mac802154_llsec_key_add+0x9e0/0xcc0 net/mac802154/llsec.c:249
     ieee802154_add_llsec_key+0x56/0x80 net/mac802154/cfg.c:338
     rdev_add_llsec_key net/ieee802154/rdev-ops.h:260 [inline]
     nl802154_add_llsec_key+0x3d3/0x560 net/ieee802154/nl802154.c:1584
     genl_family_rcv_msg_doit+0x228/0x320 net/netlink/genetlink.c:739
     genl_family_rcv_msg net/netlink/genetlink.c:783 [inline]
     genl_rcv_msg+0x328/0x580 net/netlink/genetlink.c:800
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2502
     genl_rcv+0x24/0x40 net/netlink/genetlink.c:811
     netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
     netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Reported-by: syzbot+9ec037722d2603a9f52e@syzkaller.appspotmail.com
    Acked-by: Alexander Aring <aahringo@redhat.com>
    Link: https://lore.kernel.org/r/20210304152125.1052825-1-paskripkin@gmail.com
    Signed-off-by: Stefan Schmidt <stefan@datenfreihafen.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bebc204fdf356d3444750682e906faf8f19a3a99
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Apr 1 16:27:52 2021 +0300

    drivers: net: fix memory leak in peak_usb_create_dev
    
    commit a0b96b4a62745397aee662670cfc2157bac03f55 upstream.
    
    syzbot reported memory leak in peak_usb.
    The problem was in case of failure after calling
    ->dev_init()[2] in peak_usb_create_dev()[1]. The data
    allocated int dev_init() wasn't freed, so simple
    ->dev_free() call fix this problem.
    
    backtrace:
        [<0000000079d6542a>] kmalloc include/linux/slab.h:552 [inline]
        [<0000000079d6542a>] kzalloc include/linux/slab.h:682 [inline]
        [<0000000079d6542a>] pcan_usb_fd_init+0x156/0x210 drivers/net/can/usb/peak_usb/pcan_usb_fd.c:868   [2]
        [<00000000c09f9057>] peak_usb_create_dev drivers/net/can/usb/peak_usb/pcan_usb_core.c:851 [inline] [1]
        [<00000000c09f9057>] peak_usb_probe+0x389/0x490 drivers/net/can/usb/peak_usb/pcan_usb_core.c:949
    
    Reported-by: syzbot+91adee8d9ebb9193d22d@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 395bf1f6bd8c8cae7b585b6ba18e8b368ab3d122
Author: Pavel Skripkin <paskripkin@gmail.com>
Date:   Thu Apr 1 07:46:24 2021 +0300

    drivers: net: fix memory leak in atusb_probe
    
    commit 6b9fbe16955152626557ec6f439f3407b7769941 upstream.
    
    syzbot reported memory leak in atusb_probe()[1].
    The problem was in atusb_alloc_urbs().
    Since urb is anchored, we need to release the reference
    to correctly free the urb
    
    backtrace:
        [<ffffffff82ba0466>] kmalloc include/linux/slab.h:559 [inline]
        [<ffffffff82ba0466>] usb_alloc_urb+0x66/0xe0 drivers/usb/core/urb.c:74
        [<ffffffff82ad3888>] atusb_alloc_urbs drivers/net/ieee802154/atusb.c:362 [inline][2]
        [<ffffffff82ad3888>] atusb_probe+0x158/0x820 drivers/net/ieee802154/atusb.c:1038 [1]
    
    Reported-by: syzbot+28a246747e0a465127f3@syzkaller.appspotmail.com
    Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 361c17d12ce538106f1e27eeecb50dbb725ba4a3
Author: Phillip Potter <phil@philpotter.co.uk>
Date:   Tue Apr 6 18:45:54 2021 +0100

    net: tun: set tun->dev->addr_len during TUNSETLINK processing
    
    commit cca8ea3b05c972ffb5295367e6c544369b45fbdd upstream.
    
    When changing type with TUNSETLINK ioctl command, set tun->dev->addr_len
    to match the appropriate type, using new tun_get_addr_len utility function
    which returns appropriate address length for given type. Fixes a
    KMSAN-found uninit-value bug reported by syzbot at:
    https://syzkaller.appspot.com/bug?id=0766d38c656abeace60621896d705743aeefed51
    
    Reported-by: syzbot+001516d86dbe88862cec@syzkaller.appspotmail.com
    Diagnosed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Phillip Potter <phil@philpotter.co.uk>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b334cdb7c4e6017d58bc9d015b69ab80bddfcc9
Author: Du Cheng <ducheng2@gmail.com>
Date:   Thu Apr 8 00:27:56 2021 +0800

    cfg80211: remove WARN_ON() in cfg80211_sme_connect
    
    commit 1b5ab825d9acc0f27d2f25c6252f3526832a9626 upstream.
    
    A WARN_ON(wdev->conn) would trigger in cfg80211_sme_connect(), if multiple
    send_msg(NL80211_CMD_CONNECT) system calls are made from the userland, which
    should be anticipated and handled by the wireless driver. Remove this WARN_ON()
    to prevent kernel panic if kernel is configured to "panic_on_warn".
    
    Bug reported by syzbot.
    
    Reported-by: syzbot+5f9392825de654244975@syzkaller.appspotmail.com
    Signed-off-by: Du Cheng <ducheng2@gmail.com>
    Link: https://lore.kernel.org/r/20210407162756.6101-1-ducheng2@gmail.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe9e15a30be666ec8071f325a39fe13e2251b51d
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Sun Mar 7 20:53:31 2021 -0700

    usbip: fix vudc usbip_sockfd_store races leading to gpf
    
    commit 46613c9dfa964c0c60b5385dbdf5aaa18be52a9c upstream.
    
    usbip_sockfd_store() is invoked when user requests attach (import)
    detach (unimport) usb gadget device from usbip host. vhci_hcd sends
    import request and usbip_sockfd_store() exports the device if it is
    free for export.
    
    Export and unexport are governed by local state and shared state
    - Shared state (usbip device status, sockfd) - sockfd and Device
      status are used to determine if stub should be brought up or shut
      down. Device status is shared between host and client.
    - Local state (tcp_socket, rx and tx thread task_struct ptrs)
      A valid tcp_socket controls rx and tx thread operations while the
      device is in exported state.
    - While the device is exported, device status is marked used and socket,
      sockfd, and thread pointers are valid.
    
    Export sequence (stub-up) includes validating the socket and creating
    receive (rx) and transmit (tx) threads to talk to the client to provide
    access to the exported device. rx and tx threads depends on local and
    shared state to be correct and in sync.
    
    Unexport (stub-down) sequence shuts the socket down and stops the rx and
    tx threads. Stub-down sequence relies on local and shared states to be
    in sync.
    
    There are races in updating the local and shared status in the current
    stub-up sequence resulting in crashes. These stem from starting rx and
    tx threads before local and global state is updated correctly to be in
    sync.
    
    1. Doesn't handle kthread_create() error and saves invalid ptr in local
       state that drives rx and tx threads.
    2. Updates tcp_socket and sockfd,  starts stub_rx and stub_tx threads
       before updating usbip_device status to SDEV_ST_USED. This opens up a
       race condition between the threads and usbip_sockfd_store() stub up
       and down handling.
    
    Fix the above problems:
    - Stop using kthread_get_run() macro to create/start threads.
    - Create threads and get task struct reference.
    - Add kthread_create() failure handling and bail out.
    - Hold usbip_device lock to update local and shared states after
      creating rx and tx threads.
    - Update usbip_device status to SDEV_ST_USED.
    - Update usbip_device tcp_socket, sockfd, tcp_rx, and tcp_tx
    - Start threads after usbip_device (tcp_socket, sockfd, tcp_rx, tcp_tx,
      and status) is complete.
    
    Credit goes to syzbot and Tetsuo Handa for finding and root-causing the
    kthread_get_run() improper error handling problem and others. This is a
    hard problem to find and debug since the races aren't seen in a normal
    case. Fuzzing forces the race window to be small enough for the
    kthread_get_run() error path bug and starting threads before updating the
    local and shared state bug in the stub-up sequence.
    
    Fixes: 9720b4bc76a83807 ("staging/usbip: convert to kthread")
    Cc: stable@vger.kernel.org
    Reported-by: syzbot <syzbot+a93fba6d384346a761e3@syzkaller.appspotmail.com>
    Reported-by: syzbot <syzbot+bf1a360e305ee719e364@syzkaller.appspotmail.com>
    Reported-by: syzbot <syzbot+95ce4b142579611ef0a9@syzkaller.appspotmail.com>
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Link: https://lore.kernel.org/r/b1c08b983ffa185449c9f0f7d1021dc8c8454b60.1615171203.git.skhan@linuxfoundation.org
    Signed-off-by: Tom Seewald <tseewald@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 700344f145069ea7535c57d8ad2cef881d7bb7da
Author: Hugh Dickins <hughd@google.com>
Date:   Mon Dec 12 16:44:47 2016 -0800

    mm: add cond_resched() in gather_pte_stats()
    
    commit a66c0410b97c07a5708881198528ce724f7a3226 upstream.
    
    The other pagetable walks in task_mmu.c have a cond_resched() after
    walking their ptes: add a cond_resched() in gather_pte_stats() too, for
    reading /proc/<id>/numa_maps.  Only pagemap_pmd_range() has a
    cond_resched() in its (unusually expensive) pmd_trans_huge case: more
    should probably be added, but leave them unchanged for now.
    
    Link: http://lkml.kernel.org/r/alpine.LSU.2.11.1612052157400.13021@eggly.anvils
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Reported-by: Chen si <cici.cs@alibaba-inc.com>
    Signed-off-by: Baoyou Xie <baoyou.xie@aliyun.com>
    Signed-off-by: Wen Yang <wenyang@linux.alibaba.com>
    Signed-off-by: Zijiang Huang <zijiang.hzj@alibaba-inc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd875c16654051bcbfbbdeba116b0477f785a6a0
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Sun Mar 14 12:07:09 2021 +0100

    clk: socfpga: fix iomem pointer cast on 64-bit
    
    commit 2867b9746cef78745c594894aece6f8ef826e0b4 upstream.
    
    Pointers should be cast with uintptr_t instead of integer.  This fixes
    warning when compile testing on ARM64:
    
      drivers/clk/socfpga/clk-gate.c: In function ‘socfpga_clk_recalc_rate’:
      drivers/clk/socfpga/clk-gate.c:102:7: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
    
    Fixes: b7cec13f082f ("clk: socfpga: Look for the GPIO_DB_CLK by its offset")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Acked-by: Dinh Nguyen <dinguyen@kernel.org>
    Link: https://lore.kernel.org/r/20210314110709.32599-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0db5a93b046c33ff5c85a650e7014418bc471609
Author: Potnuri Bharat Teja <bharat@chelsio.com>
Date:   Wed Mar 31 19:27:15 2021 +0530

    RDMA/cxgb4: check for ipv6 address properly while destroying listener
    
    [ Upstream commit 603c4690b01aaffe3a6c3605a429f6dac39852ae ]
    
    ipv6 bit is wrongly set by the below which causes fatal adapter lookup
    engine errors for ipv4 connections while destroying a listener.  Fix it to
    properly check the local address for ipv6.
    
    Fixes: 3408be145a5d ("RDMA/cxgb4: Fix adapter LE hash errors while destroying ipv6 listening server")
    Link: https://lore.kernel.org/r/20210331135715.30072-1-bharat@chelsio.com
    Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf886e59e29a9e44cbcc12f23bdc61cc05fe3688
Author: Alexander Gordeev <agordeev@linux.ibm.com>
Date:   Mon Mar 29 18:35:07 2021 +0200

    s390/cpcmd: fix inline assembly register clobbering
    
    [ Upstream commit 7a2f91441b2c1d81b77c1cd816a4659f4abc9cbe ]
    
    Register variables initialized using arithmetic. That leads to
    kasan instrumentaton code corrupting the registers contents.
    Follow GCC guidlines and use temporary variables for assigning
    init values to register variables.
    
    Fixes: 94c12cc7d196 ("[S390] Inline assembly cleanup.")
    Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
    Acked-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Link: https://gcc.gnu.org/onlinedocs/gcc-10.2.0/gcc/Local-Register-Variables.html
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b737254f71f2979adf25d514a153bbaa269edf0e
Author: Zqiang <qiang.zhang@windriver.com>
Date:   Thu Feb 18 11:16:49 2021 +0800

    workqueue: Move the position of debug_work_activate() in __queue_work()
    
    [ Upstream commit 0687c66b5f666b5ad433f4e94251590d9bc9d10e ]
    
    The debug_work_activate() is called on the premise that
    the work can be inserted, because if wq be in WQ_DRAINING
    status, insert work may be failed.
    
    Fixes: e41e704bc4f4 ("workqueue: improve destroy_workqueue() debuggability")
    Signed-off-by: Zqiang <qiang.zhang@windriver.com>
    Reviewed-by: Lai Jiangshan <jiangshanlai@gmail.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea96fc0c35cd8e1430988f4114a105b610993449
Author: Lukasz Bartosik <lb@semihalf.com>
Date:   Fri Apr 2 00:51:49 2021 +0200

    clk: fix invalid usage of list cursor in unregister
    
    [ Upstream commit 7045465500e465b09f09d6e5bdc260a9f1aab97b ]
    
    Fix invalid usage of a list_for_each_entry cursor in
    clk_notifier_unregister(). When list is empty or if the list
    is completely traversed (without breaking from the loop on one
    of the entries) then the list cursor does not point to a valid
    entry and therefore should not be used. The patch fixes a logical
    bug that hasn't been seen in pratice however it is analogus
    to the bug fixed in clk_notifier_register().
    
    The issue was dicovered when running 5.12-rc1 kernel on x86_64
    with KASAN enabled:
    BUG: KASAN: global-out-of-bounds in clk_notifier_register+0xab/0x230
    Read of size 8 at addr ffffffffa0d10588 by task swapper/0/1
    
    CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.12.0-rc1 #1
    Hardware name: Google Caroline/Caroline,
    BIOS Google_Caroline.7820.430.0 07/20/2018
    Call Trace:
     dump_stack+0xee/0x15c
     print_address_description+0x1e/0x2dc
     kasan_report+0x188/0x1ce
     ? clk_notifier_register+0xab/0x230
     ? clk_prepare_lock+0x15/0x7b
     ? clk_notifier_register+0xab/0x230
     clk_notifier_register+0xab/0x230
     dw8250_probe+0xc01/0x10d4
     ...
     Memory state around the buggy address:
      ffffffffa0d10480: 00 00 00 00 00 03 f9 f9 f9 f9 f9 f9 00 00 00 00
      ffffffffa0d10500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f9 f9
     >ffffffffa0d10580: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00
                              ^
      ffffffffa0d10600: 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00
      ffffffffa0d10680: 00 00 00 00 00 00 00 00 f9 f9 f9 f9 00 00 00 00
      ==================================================================
    
    Fixes: b2476490ef11 ("clk: introduce the common clock framework")
    Reported-by: Lukasz Majczak <lma@semihalf.com>
    Signed-off-by: Lukasz Bartosik <lb@semihalf.com>
    Link: https://lore.kernel.org/r/20210401225149.18826-2-lb@semihalf.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d20e26f50456e7db1fe5bb40b484cec24f34f410
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 23 14:15:23 2021 +0100

    soc/fsl: qbman: fix conflicting alignment attributes
    
    [ Upstream commit 040f31196e8b2609613f399793b9225271b79471 ]
    
    When building with W=1, gcc points out that the __packed attribute
    on struct qm_eqcr_entry conflicts with the 8-byte alignment
    attribute on struct qm_fd inside it:
    
    drivers/soc/fsl/qbman/qman.c:189:1: error: alignment 1 of 'struct qm_eqcr_entry' is less than 8 [-Werror=packed-not-aligned]
    
    I assume that the alignment attribute is the correct one, and
    that qm_eqcr_entry cannot actually be unaligned in memory,
    so add the same alignment on the outer struct.
    
    Fixes: c535e923bb97 ("soc/fsl: Introduce DPAA 1.x QMan device driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20210323131530.2619900-1-arnd@kernel.org'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0d49f2c1b904a1d3134f55fcc73abe1ce573be0
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Sun Mar 28 00:30:29 2021 -0700

    net:tipc: Fix a double free in tipc_sk_mcast_rcv
    
    [ Upstream commit 6bf24dc0cc0cc43b29ba344b66d78590e687e046 ]
    
    In the if(skb_peek(arrvq) == skb) branch, it calls __skb_dequeue(arrvq) to get
    the skb by skb = skb_peek(arrvq). Then __skb_dequeue() unlinks the skb from arrvq
    and returns the skb which equals to skb_peek(arrvq). After __skb_dequeue(arrvq)
    finished, the skb is freed by kfree_skb(__skb_dequeue(arrvq)) in the first time.
    
    Unfortunately, the same skb is freed in the second time by kfree_skb(skb) after
    the branch completed.
    
    My patch removes kfree_skb() in the if(skb_peek(arrvq) == skb) branch, because
    this skb will be freed by kfree_skb(skb) finally.
    
    Fixes: cb1b728096f54 ("tipc: eliminate race condition at multicast reception")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6157a79cdc089e9b4a0d819cd3070bef9b5cf1e2
Author: Claudiu Manoil <claudiu.manoil@nxp.com>
Date:   Mon Mar 29 17:08:47 2021 +0300

    gianfar: Handle error code at MAC address change
    
    [ Upstream commit bff5b62585123823842833ab20b1c0a7fa437f8c ]
    
    Handle return error code of eth_mac_addr();
    
    Fixes: 3d23a05c75c7 ("gianfar: Enable changing mac addr when if up")
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3210f911ec4e2392a855d394e3bab0bb6e2e0f1
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Mar 25 11:14:53 2021 -0700

    sch_red: fix off-by-one checks in red_check_params()
    
    [ Upstream commit 3a87571f0ffc51ba3bf3ecdb6032861d0154b164 ]
    
    This fixes following syzbot report:
    
    UBSAN: shift-out-of-bounds in ./include/net/red.h:237:23
    shift exponent 32 is too large for 32-bit type 'unsigned int'
    CPU: 1 PID: 8418 Comm: syz-executor170 Not tainted 5.12.0-rc4-next-20210324-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:79 [inline]
     dump_stack+0x141/0x1d7 lib/dump_stack.c:120
     ubsan_epilogue+0xb/0x5a lib/ubsan.c:148
     __ubsan_handle_shift_out_of_bounds.cold+0xb1/0x181 lib/ubsan.c:327
     red_set_parms include/net/red.h:237 [inline]
     choke_change.cold+0x3c/0xc8 net/sched/sch_choke.c:414
     qdisc_create+0x475/0x12f0 net/sched/sch_api.c:1247
     tc_modify_qdisc+0x4c8/0x1a50 net/sched/sch_api.c:1663
     rtnetlink_rcv_msg+0x44e/0xad0 net/core/rtnetlink.c:5553
     netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2502
     netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]
     netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1338
     netlink_sendmsg+0x856/0xd90 net/netlink/af_netlink.c:1927
     sock_sendmsg_nosec net/socket.c:654 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:674
     ____sys_sendmsg+0x6e8/0x810 net/socket.c:2350
     ___sys_sendmsg+0xf3/0x170 net/socket.c:2404
     __sys_sendmsg+0xe5/0x1b0 net/socket.c:2433
     do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x43f039
    Code: 28 c3 e8 2a 14 00 00 66 2e 0f 1f 84 00 00 00 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 c0 ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007ffdfa725168 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
    RAX: ffffffffffffffda RBX: 0000000000400488 RCX: 000000000043f039
    RDX: 0000000000000000 RSI: 0000000020000040 RDI: 0000000000000004
    RBP: 0000000000403020 R08: 0000000000400488 R09: 0000000000400488
    R10: 0000000000400488 R11: 0000000000000246 R12: 00000000004030b0
    R13: 0000000000000000 R14: 00000000004ac018 R15: 0000000000400488
    
    Fixes: 8afa10cbe281 ("net_sched: red: Avoid illegal values")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e356ee3766217b88a5f0ef67c09346faebad2fe
Author: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
Date:   Thu Apr 8 18:14:31 2021 +0300

    net: sched: sch_teql: fix null-pointer dereference
    
    commit 1ffbc7ea91606e4abd10eb60de5367f1c86daf5e upstream.
    
    Reproduce:
    
      modprobe sch_teql
      tc qdisc add dev teql0 root teql0
    
    This leads to (for instance in Centos 7 VM) OOPS:
    
    [  532.366633] BUG: unable to handle kernel NULL pointer dereference at 00000000000000a8
    [  532.366733] IP: [<ffffffffc06124a8>] teql_destroy+0x18/0x100 [sch_teql]
    [  532.366825] PGD 80000001376d5067 PUD 137e37067 PMD 0
    [  532.366906] Oops: 0000 [#1] SMP
    [  532.366987] Modules linked in: sch_teql ...
    [  532.367945] CPU: 1 PID: 3026 Comm: tc Kdump: loaded Tainted: G               ------------ T 3.10.0-1062.7.1.el7.x86_64 #1
    [  532.368041] Hardware name: Virtuozzo KVM, BIOS 1.11.0-2.vz7.2 04/01/2014
    [  532.368125] task: ffff8b7d37d31070 ti: ffff8b7c9fdbc000 task.ti: ffff8b7c9fdbc000
    [  532.368224] RIP: 0010:[<ffffffffc06124a8>]  [<ffffffffc06124a8>] teql_destroy+0x18/0x100 [sch_teql]
    [  532.368320] RSP: 0018:ffff8b7c9fdbf8e0  EFLAGS: 00010286
    [  532.368394] RAX: ffffffffc0612490 RBX: ffff8b7cb1565e00 RCX: ffff8b7d35ba2000
    [  532.368476] RDX: ffff8b7d35ba2000 RSI: 0000000000000000 RDI: ffff8b7cb1565e00
    [  532.368557] RBP: ffff8b7c9fdbf8f8 R08: ffff8b7d3fd1f140 R09: ffff8b7d3b001600
    [  532.368638] R10: ffff8b7d3b001600 R11: ffffffff84c7d65b R12: 00000000ffffffd8
    [  532.368719] R13: 0000000000008000 R14: ffff8b7d35ba2000 R15: ffff8b7c9fdbf9a8
    [  532.368800] FS:  00007f6a4e872740(0000) GS:ffff8b7d3fd00000(0000) knlGS:0000000000000000
    [  532.368885] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  532.368961] CR2: 00000000000000a8 CR3: 00000001396ee000 CR4: 00000000000206e0
    [  532.369046] Call Trace:
    [  532.369159]  [<ffffffff84c8192e>] qdisc_create+0x36e/0x450
    [  532.369268]  [<ffffffff846a9b49>] ? ns_capable+0x29/0x50
    [  532.369366]  [<ffffffff849afde2>] ? nla_parse+0x32/0x120
    [  532.369442]  [<ffffffff84c81b4c>] tc_modify_qdisc+0x13c/0x610
    [  532.371508]  [<ffffffff84c693e7>] rtnetlink_rcv_msg+0xa7/0x260
    [  532.372668]  [<ffffffff84907b65>] ? sock_has_perm+0x75/0x90
    [  532.373790]  [<ffffffff84c69340>] ? rtnl_newlink+0x890/0x890
    [  532.374914]  [<ffffffff84c8da7b>] netlink_rcv_skb+0xab/0xc0
    [  532.376055]  [<ffffffff84c63708>] rtnetlink_rcv+0x28/0x30
    [  532.377204]  [<ffffffff84c8d400>] netlink_unicast+0x170/0x210
    [  532.378333]  [<ffffffff84c8d7a8>] netlink_sendmsg+0x308/0x420
    [  532.379465]  [<ffffffff84c2f3a6>] sock_sendmsg+0xb6/0xf0
    [  532.380710]  [<ffffffffc034a56e>] ? __xfs_filemap_fault+0x8e/0x1d0 [xfs]
    [  532.381868]  [<ffffffffc034a75c>] ? xfs_filemap_fault+0x2c/0x30 [xfs]
    [  532.383037]  [<ffffffff847ec23a>] ? __do_fault.isra.61+0x8a/0x100
    [  532.384144]  [<ffffffff84c30269>] ___sys_sendmsg+0x3e9/0x400
    [  532.385268]  [<ffffffff847f3fad>] ? handle_mm_fault+0x39d/0x9b0
    [  532.386387]  [<ffffffff84d88678>] ? __do_page_fault+0x238/0x500
    [  532.387472]  [<ffffffff84c31921>] __sys_sendmsg+0x51/0x90
    [  532.388560]  [<ffffffff84c31972>] SyS_sendmsg+0x12/0x20
    [  532.389636]  [<ffffffff84d8dede>] system_call_fastpath+0x25/0x2a
    [  532.390704]  [<ffffffff84d8de21>] ? system_call_after_swapgs+0xae/0x146
    [  532.391753] Code: 00 00 00 00 00 00 5b 5d c3 66 2e 0f 1f 84 00 00 00 00 00 66 66 66 66 90 55 48 89 e5 41 55 41 54 53 48 8b b7 48 01 00 00 48 89 fb <48> 8b 8e a8 00 00 00 48 85 c9 74 43 48 89 ca eb 0f 0f 1f 80 00
    [  532.394036] RIP  [<ffffffffc06124a8>] teql_destroy+0x18/0x100 [sch_teql]
    [  532.395127]  RSP <ffff8b7c9fdbf8e0>
    [  532.396179] CR2: 00000000000000a8
    
    Null pointer dereference happens on master->slaves dereference in
    teql_destroy() as master is null-pointer.
    
    When qdisc_create() calls teql_qdisc_init() it imediately fails after
    check "if (m->dev == dev)" because both devices are teql0, and it does
    not set qdisc_priv(sch)->m leaving it zero on error path, then
    qdisc_create() imediately calls teql_destroy() which does not expect
    zero master pointer and we get OOPS.
    
    Fixes: 87b60cfacf9f ("net_sched: fix error recovery at qdisc creation")
    Signed-off-by: Pavel Tikhomirov <ptikhomirov@virtuozzo.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1168e0d37d31b5c6993655d93feb92a53985ba9
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Mon Apr 5 19:16:50 2021 +0900

    batman-adv: initialize "struct batadv_tvlv_tt_vlan_data"->reserved field
    
    commit 08c27f3322fec11950b8f1384aa0f3b11d028528 upstream.
    
    KMSAN found uninitialized value at batadv_tt_prepare_tvlv_local_data()
    [1], for commit ced72933a5e8ab52 ("batman-adv: use CRC32C instead of CRC16
    in TT code") inserted 'reserved' field into "struct batadv_tvlv_tt_data"
    and commit 7ea7b4a142758dea ("batman-adv: make the TT CRC logic VLAN
    specific") moved that field to "struct batadv_tvlv_tt_vlan_data" but left
    that field uninitialized.
    
    [1] https://syzkaller.appspot.com/bug?id=07f3e6dba96f0eb3cabab986adcd8a58b9bdbe9d
    
    Reported-by: syzbot <syzbot+50ee810676e6a089487b@syzkaller.appspotmail.com>
    Tested-by: syzbot <syzbot+50ee810676e6a089487b@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Fixes: ced72933a5e8ab52 ("batman-adv: use CRC32C instead of CRC16 in TT code")
    Fixes: 7ea7b4a142758dea ("batman-adv: make the TT CRC logic VLAN specific")
    Acked-by: Sven Eckelmann <sven@narfation.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f061244385823b97f97b58b77f6131e6721c6b51
Author: Gao Xiang <hsiangkao@redhat.com>
Date:   Tue Apr 6 12:59:29 2021 +0800

    parisc: avoid a warning on u8 cast for cmpxchg on u8 pointers
    
    commit 4d752e5af63753ab5140fc282929b98eaa4bd12e upstream.
    
    commit b344d6a83d01 ("parisc: add support for cmpxchg on u8 pointers")
    can generate a sparse warning ("cast truncates bits from constant
    value"), which has been reported several times [1] [2] [3].
    
    The original code worked as expected, but anyway, let silence such
    sparse warning as what others did [4].
    
    [1] https://lore.kernel.org/r/202104061220.nRMBwCXw-lkp@intel.com
    [2] https://lore.kernel.org/r/202012291914.T5Agcn99-lkp@intel.com
    [3] https://lore.kernel.org/r/202008210829.KVwn7Xeh%25lkp@intel.com
    [4] https://lore.kernel.org/r/20210315131512.133720-2-jacopo+renesas@jmondi.org
    Cc: Liam Beguin <liambeguin@gmail.com>
    Cc: Helge Deller <deller@gmx.de>
    Cc: stable@vger.kernel.org # v5.8+
    Signed-off-by: Gao Xiang <hsiangkao@redhat.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7e4b113f2abcaf2830aeddb88e0cde7bf4ab7f3
Author: Helge Deller <deller@gmx.de>
Date:   Tue Apr 6 11:32:52 2021 +0200

    parisc: parisc-agp requires SBA IOMMU driver
    
    commit 9054284e8846b0105aad43a4e7174ca29fffbc44 upstream.
    
    Add a dependency to the SBA IOMMU driver to avoid:
    ERROR: modpost: "sba_list" [drivers/char/agp/parisc-agp.ko] undefined!
    
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16c15e1403a0637abccd8ccaf0519409d98d42e6
Author: Jack Qiu <jack.qiu@huawei.com>
Date:   Fri Apr 9 13:27:35 2021 -0700

    fs: direct-io: fix missing sdio->boundary
    
    commit df41872b68601059dd4a84858952dcae58acd331 upstream.
    
    I encountered a hung task issue, but not a performance one.  I run DIO
    on a device (need lba continuous, for example open channel ssd), maybe
    hungtask in below case:
    
      DIO:                                          Checkpoint:
      get addr A(at boundary), merge into BIO,
      no submit because boundary missing
                                                    flush dirty data(get addr A+1), wait IO(A+1)
                                                    writeback timeout, because DIO(A) didn't submit
      get addr A+2 fail, because checkpoint is doing
    
    dio_send_cur_page() may clear sdio->boundary, so prevent it from missing
    a boundary.
    
    Link: https://lkml.kernel.org/r/20210322042253.38312-1-jack.qiu@huawei.com
    Fixes: b1058b981272 ("direct-io: submit bio after boundary buffer is added to it")
    Signed-off-by: Jack Qiu <jack.qiu@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 466d0421e4f71a73f4292c73d376034162039f79
Author: Wengang Wang <wen.gang.wang@oracle.com>
Date:   Fri Apr 9 13:27:29 2021 -0700

    ocfs2: fix deadlock between setattr and dio_end_io_write
    
    commit 90bd070aae6c4fb5d302f9c4b9c88be60c8197ec upstream.
    
    The following deadlock is detected:
    
      truncate -> setattr path is waiting for pending direct IO to be done (inode->i_dio_count become zero) with inode->i_rwsem held (down_write).
    
      PID: 14827  TASK: ffff881686a9af80  CPU: 20  COMMAND: "ora_p005_hrltd9"
       #0  __schedule at ffffffff818667cc
       #1  schedule at ffffffff81866de6
       #2  inode_dio_wait at ffffffff812a2d04
       #3  ocfs2_setattr at ffffffffc05f322e [ocfs2]
       #4  notify_change at ffffffff812a5a09
       #5  do_truncate at ffffffff812808f5
       #6  do_sys_ftruncate.constprop.18 at ffffffff81280cf2
       #7  sys_ftruncate at ffffffff81280d8e
       #8  do_syscall_64 at ffffffff81003949
       #9  entry_SYSCALL_64_after_hwframe at ffffffff81a001ad
    
    dio completion path is going to complete one direct IO (decrement
    inode->i_dio_count), but before that it hung at locking inode->i_rwsem:
    
       #0  __schedule+700 at ffffffff818667cc
       #1  schedule+54 at ffffffff81866de6
       #2  rwsem_down_write_failed+536 at ffffffff8186aa28
       #3  call_rwsem_down_write_failed+23 at ffffffff8185a1b7
       #4  down_write+45 at ffffffff81869c9d
       #5  ocfs2_dio_end_io_write+180 at ffffffffc05d5444 [ocfs2]
       #6  ocfs2_dio_end_io+85 at ffffffffc05d5a85 [ocfs2]
       #7  dio_complete+140 at ffffffff812c873c
       #8  dio_aio_complete_work+25 at ffffffff812c89f9
       #9  process_one_work+361 at ffffffff810b1889
      #10  worker_thread+77 at ffffffff810b233d
      #11  kthread+261 at ffffffff810b7fd5
      #12  ret_from_fork+62 at ffffffff81a0035e
    
    Thus above forms ABBA deadlock.  The same deadlock was mentioned in
    upstream commit 28f5a8a7c033 ("ocfs2: should wait dio before inode lock
    in ocfs2_setattr()").  It seems that that commit only removed the
    cluster lock (the victim of above dead lock) from the ABBA deadlock
    party.
    
    End-user visible effects: Process hang in truncate -> ocfs2_setattr path
    and other processes hang at ocfs2_dio_end_io_write path.
    
    This is to fix the deadlock itself.  It removes inode_lock() call from
    dio completion path to remove the deadlock and add ip_alloc_sem lock in
    setattr path to synchronize the inode modifications.
    
    [wen.gang.wang@oracle.com: remove the "had_alloc_lock" as suggested]
      Link: https://lkml.kernel.org/r/20210402171344.1605-1-wen.gang.wang@oracle.com
    
    Link: https://lkml.kernel.org/r/20210331203654.3911-1-wen.gang.wang@oracle.com
    Signed-off-by: Wengang Wang <wen.gang.wang@oracle.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 84427f06fd760754d318cfc0ccc8c4bb3546d1de
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Fri Apr 9 13:27:32 2021 -0700

    ia64: fix user_stack_pointer() for ptrace()
    
    commit 7ad1e366167837daeb93d0bacb57dee820b0b898 upstream.
    
    ia64 has two stacks:
    
     - memory stack (or stack), pointed at by by r12
    
     - register backing store (register stack), pointed at by
       ar.bsp/ar.bspstore with complications around dirty
       register frame on CPU.
    
    In [1] Dmitry noticed that PTRACE_GET_SYSCALL_INFO returns the register
    stack instead memory stack.
    
    The bug comes from the fact that user_stack_pointer() and
    current_user_stack_pointer() don't return the same register:
    
      ulong user_stack_pointer(struct pt_regs *regs) { return regs->ar_bspstore; }
      #define current_user_stack_pointer() (current_pt_regs()->r12)
    
    The change gets both back in sync.
    
    I think ptrace(PTRACE_GET_SYSCALL_INFO) is the only affected user by
    this bug on ia64.
    
    The change fixes 'rt_sigreturn.gen.test' strace test where it was
    observed initially.
    
    Link: https://bugs.gentoo.org/769614 [1]
    Link: https://lkml.kernel.org/r/20210331084447.2561532-1-slyfox@gentoo.org
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Reported-by: Dmitry V. Levin <ldv@altlinux.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff5eb74b7be8cfe152c571d5de3f4bbb81c10c7a
Author: Muhammad Usama Anjum <musamaanjum@gmail.com>
Date:   Fri Apr 9 03:01:29 2021 +0500

    net: ipv6: check for validity before dereferencing cfg->fc_nlinfo.nlh
    
    commit 864db232dc7036aa2de19749c3d5be0143b24f8f upstream.
    
    nlh is being checked for validtity two times when it is dereferenced in
    this function. Check for validity again when updating the flags through
    nlh pointer to make the dereferencing safe.
    
    CC: <stable@vger.kernel.org>
    Addresses-Coverity: ("NULL pointer dereference")
    Signed-off-by: Muhammad Usama Anjum <musamaanjum@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af48f1856d655a3abe9704f9e13532a21dd28ce3
Author: Luca Fancellu <luca.fancellu@arm.com>
Date:   Tue Apr 6 11:51:04 2021 +0100

    xen/evtchn: Change irq_info lock to raw_spinlock_t
    
    commit d120198bd5ff1d41808b6914e1eb89aff937415c upstream.
    
    Unmask operation must be called with interrupt disabled,
    on preempt_rt spin_lock_irqsave/spin_unlock_irqrestore
    don't disable/enable interrupts, so use raw_* implementation
    and change lock variable in struct irq_info from spinlock_t
    to raw_spinlock_t
    
    Cc: stable@vger.kernel.org
    Fixes: 25da4618af24 ("xen/events: don't unmask an event channel when an eoi is pending")
    Signed-off-by: Luca Fancellu <luca.fancellu@arm.com>
    Reviewed-by: Julien Grall <jgrall@amazon.com>
    Reviewed-by: Wei Liu <wei.liu@kernel.org>
    Link: https://lore.kernel.org/r/20210406105105.10141-1-luca.fancellu@arm.com
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 79fc2e475789067b3bf3100a00f37fd9d75cbc8d
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:13 2021 +0800

    nfc: Avoid endless loops caused by repeated llcp_sock_connect()
    
    commit 4b5db93e7f2afbdfe3b78e37879a85290187e6f1 upstream.
    
    When sock_wait_state() returns -EINPROGRESS, "sk->sk_state" is
     LLCP_CONNECTING. In this case, llcp_sock_connect() is repeatedly invoked,
     nfc_llcp_sock_link() will add sk to local->connecting_sockets twice.
     sk->sk_node->next will point to itself, that will make an endless loop
     and hang-up the system.
    To fix it, check whether sk->sk_state is LLCP_CONNECTING in
     llcp_sock_connect() to avoid repeated invoking.
    
    Fixes: b4011239a08e ("NFC: llcp: Fix non blocking sockets connections")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.11
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 83a09c10719661d8b51f1aa475ec52c13f3546d1
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:12 2021 +0800

    nfc: fix memory leak in llcp_sock_connect()
    
    commit 7574fcdbdcb335763b6b322f6928dc0fd5730451 upstream.
    
    In llcp_sock_connect(), use kmemdup to allocate memory for
     "llcp_sock->service_name". The memory is not released in the sock_unlink
    label of the subsequent failure branch.
    As a result, memory leakage occurs.
    
    fix CVE-2020-25672
    
    Fixes: d646960f7986 ("NFC: Initial LLCP support")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.3
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 013b8099064f2dc51e789e54a93edb65e2539792
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:11 2021 +0800

    nfc: fix refcount leak in llcp_sock_connect()
    
    commit 8a4cd82d62b5ec7e5482333a72b58a4eea4979f0 upstream.
    
    nfc_llcp_local_get() is invoked in llcp_sock_connect(),
    but nfc_llcp_local_put() is not invoked in subsequent failure branches.
    As a result, refcount leakage occurs.
    To fix it, add calling nfc_llcp_local_put().
    
    fix CVE-2020-25671
    Fixes: c7aa12252f51 ("NFC: Take a reference on the LLCP local pointer when creating a socket")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.6
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18013007b596771bf5f5e7feee9586fb0386ad14
Author: Xiaoming Ni <nixiaoming@huawei.com>
Date:   Thu Mar 25 11:51:10 2021 +0800

    nfc: fix refcount leak in llcp_sock_bind()
    
    commit c33b1cc62ac05c1dbb1cdafe2eb66da01c76ca8d upstream.
    
    nfc_llcp_local_get() is invoked in llcp_sock_bind(),
    but nfc_llcp_local_put() is not invoked in subsequent failure branches.
    As a result, refcount leakage occurs.
    To fix it, add calling nfc_llcp_local_put().
    
    fix CVE-2020-25670
    Fixes: c7aa12252f51 ("NFC: Take a reference on the LLCP local pointer when creating a socket")
    Reported-by: "kiyin(尹亮)" <kiyin@tencent.com>
    Link: https://www.openwall.com/lists/oss-security/2020/11/01/1
    Cc: <stable@vger.kernel.org> #v3.6
    Signed-off-by: Xiaoming Ni <nixiaoming@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4a69c09852222eb291cd63b43d9856bf7536d9a
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Mar 24 14:27:10 2021 +0100

    ASoC: intel: atom: Stop advertising non working S24LE support
    
    commit aa65bacdb70e549a81de03ec72338e1047842883 upstream.
    
    The SST firmware's media and deep-buffer inputs are hardcoded to
    S16LE, the corresponding DAIs don't have a hw_params callback and
    their prepare callback also does not take the format into account.
    
    So far the advertising of non working S24LE support has not caused
    issues because pulseaudio defaults to S16LE, but changing pulse-audio's
    config to use S24LE will result in broken sound.
    
    Pipewire is replacing pulse now and pipewire prefers S24LE over S16LE
    when available, causing the problem of the broken S24LE support to
    come to the surface now.
    
    Cc: stable@vger.kernel.org
    BugLink: https://gitlab.freedesktop.org/pipewire/pipewire/-/issues/866
    Fixes: 098c2cd281409 ("ASoC: Intel: Atom: add 24-bit support for media playback and capture")
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210324132711.216152-2-hdegoede@redhat.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f5e3544a830a4a2757e9e28bcce69dbed850b7c
Author: Jonas Holmberg <jonashg@axis.com>
Date:   Wed Apr 7 09:54:28 2021 +0200

    ALSA: aloop: Fix initialization of controls
    
    commit 168632a495f49f33a18c2d502fc249d7610375e9 upstream.
    
    Add a control to the card before copying the id so that the numid field
    is initialized in the copy. Otherwise the numid field of active_id,
    format_id, rate_id and channels_id will be the same (0) and
    snd_ctl_notify() will not queue the events properly.
    
    Signed-off-by: Jonas Holmberg <jonashg@axis.com>
    Reviewed-by: Jaroslav Kysela <perex@perex.cz>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210407075428.2666787-1-jonashg@axis.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75a4fdb12969758f7c88da1010d8b1f85d625795
Author: Ye Xiang <xiang.ye@intel.com>
Date:   Sat Jan 30 18:25:30 2021 +0800

    iio: hid-sensor-prox: Fix scale not correct issue
    
    commit d68c592e02f6f49a88e705f13dfc1883432cf300 upstream
    
    Currently, the proxy sensor scale is zero because it just return the
    exponent directly. To fix this issue, this patch use
    hid_sensor_format_scale to process the scale first then return the
    output.
    
    Fixes: 39a3a0138f61 ("iio: hid-sensors: Added Proximity Sensor Driver")
    Signed-off-by: Ye Xiang <xiang.ye@intel.com>
    Link: https://lore.kernel.org/r/20210130102530.31064-1-xiang.ye@intel.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa0ef53e0f439af6f916a78fd2757bf5225c36eb
Author: Nicolas Pitre <nico@fluxnic.net>
Date:   Wed Nov 29 07:52:52 2017 +0100

    ARM: 8723/2: always assume the "unified" syntax for assembly code
    
    commit 75fea300d73ae5b18957949a53ec770daaeb6fc2 upstream.
    
    The GNU assembler has implemented the "unified syntax" parsing since
    2005. This "unified" syntax is required when the kernel is built in
    Thumb2 mode. However the "unified" syntax is a mixed bag of features,
    including not requiring a `#' prefix with immediate operands. This leads
    to situations where some code builds just fine in Thumb2 mode and fails
    to build in ARM mode if that prefix is missing. This behavior
    discrepancy makes build tests less valuable, forcing both ARM and Thumb2
    builds for proper coverage.
    
    Let's "fix" this issue by always using the "unified" syntax for both ARM
    and Thumb2 mode. Given that the documented minimum binutils version that
    properly builds the kernel is version 2.20 released in 2010, we can
    assume that any toolchain capable of building the latest kernel is also
    "unified syntax" capable.
    
    Whith this, a bunch of macros used to mask some differences between both
    syntaxes can be removed, with the side effect of making LTO easier.
    
    Suggested-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Nicolas Pitre <nico@linaro.org>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    [nathan: Resolve small conflict on 4.9 due to a lack of 494609701e06a]
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
