commit 95e55e41e655bff0de5abed850a951ff0631ea01
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Nov 28 18:29:06 2019 +0100

    Linux 4.9.204

commit e2c87b1ba04bd5042f6db0780ed55abaf4836378
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Nov 13 21:05:44 2019 +1100

    KVM: PPC: Book3S HV: Flush link stack on guest exit to host kernel
    
    commit af2e8c68b9c5403f77096969c516f742f5bb29e0 upstream.
    
    On some systems that are vulnerable to Spectre v2, it is up to
    software to flush the link stack (return address stack), in order to
    protect against Spectre-RSB.
    
    When exiting from a guest we do some house keeping and then
    potentially exit to C code which is several stack frames deep in the
    host kernel. We will then execute a series of returns without
    preceeding calls, opening up the possiblity that the guest could have
    poisoned the link stack, and direct speculative execution of the host
    to a gadget of some sort.
    
    To prevent this we add a flush of the link stack on exit from a guest.
    
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    [dja: straightforward backport to v4.14]
    Signed-off-by: Daniel Axtens <dja@axtens.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 113408cdaec11a6e34d4edabb134a335dd4896b3
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Nov 13 21:05:41 2019 +1100

    powerpc/book3s64: Fix link stack flush on context switch
    
    commit 39e72bf96f5847ba87cc5bd7a3ce0fed813dc9ad upstream.
    
    In commit ee13cb249fab ("powerpc/64s: Add support for software count
    cache flush"), I added support for software to flush the count
    cache (indirect branch cache) on context switch if firmware told us
    that was the required mitigation for Spectre v2.
    
    As part of that code we also added a software flush of the link
    stack (return address stack), which protects against Spectre-RSB
    between user processes.
    
    That is all correct for CPUs that activate that mitigation, which is
    currently Power9 Nimbus DD2.3.
    
    What I got wrong is that on older CPUs, where firmware has disabled
    the count cache, we also need to flush the link stack on context
    switch.
    
    To fix it we create a new feature bit which is not set by firmware,
    which tells us we need to flush the link stack. We set that when
    firmware tells us that either of the existing Spectre v2 mitigations
    are enabled.
    
    Then we adjust the patching code so that if we see that feature bit we
    enable the link stack flush. If we're also told to flush the count
    cache in software then we fall through and do that also.
    
    On the older CPUs we don't need to do do the software count cache
    flush, firmware has disabled it, so in that case we patch in an early
    return after the link stack flush.
    
    The naming of some of the functions is awkward after this patch,
    because they're called "count cache" but they also do link stack. But
    we'll fix that up in a later commit to ease backporting.
    
    This is the fix for CVE-2019-18660.
    
    Reported-by: Anthony Steinhauser <asteinhauser@google.com>
    Fixes: ee13cb249fab ("powerpc/64s: Add support for software count cache flush")
    Cc: stable@vger.kernel.org # v4.4+
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    [dja: straightforward backport to v4.14]
    Signed-off-by: Daniel Axtens <dja@axtens.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e59fed3e9e91da24434aa63c85c32432ce0ef9c3
Author: Christopher M. Riedl <cmr@informatik.wtf>
Date:   Thu May 23 21:46:48 2019 -0500

    powerpc/64s: support nospectre_v2 cmdline option
    
    commit d8f0e0b073e1ec52a05f0c2a56318b47387d2f10 upstream.
    
    Add support for disabling the kernel implemented spectre v2 mitigation
    (count cache flush on context switch) via the nospectre_v2 and
    mitigations=off cmdline options.
    
    Suggested-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Christopher M. Riedl <cmr@informatik.wtf>
    Reviewed-by: Andrew Donnellan <ajd@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190524024647.381-1-cmr@informatik.wtf
    Signed-off-by: Daniel Axtens <dja@axtens.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86f35864adcacf7babef1fd10700cd766ef07480
Author: Bernd Porr <mail@berndporr.me.uk>
Date:   Mon Nov 18 23:07:59 2019 +0000

    staging: comedi: usbduxfast: usbduxfast_ai_cmdtest rounding error
    
    commit 5618332e5b955b4bff06d0b88146b971c8dd7b32 upstream.
    
    The userspace comedilib function 'get_cmd_generic_timed' fills
    the cmd structure with an informed guess and then calls the
    function 'usbduxfast_ai_cmdtest' in this driver repeatedly while
    'usbduxfast_ai_cmdtest' is modifying the cmd struct until it
    no longer changes. However, because of rounding errors this never
    converged because 'steps = (cmd->convert_arg * 30) / 1000' and then
    back to 'cmd->convert_arg = (steps * 1000) / 30' won't be the same
    because of rounding errors. 'Steps' should only be converted back to
    the 'convert_arg' if 'steps' has actually been modified. In addition
    the case of steps being 0 wasn't checked which is also now done.
    
    Signed-off-by: Bernd Porr <mail@berndporr.me.uk>
    Cc: <stable@vger.kernel.org> # 4.4+
    Reviewed-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20191118230759.1727-1-mail@berndporr.me.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 604b4b886ef730294debae1cfae451ece697b701
Author: Aleksander Morgado <aleksander@aleksander.es>
Date:   Wed Nov 13 11:14:05 2019 +0100

    USB: serial: option: add support for Foxconn T77W968 LTE modules
    
    commit f0797095423e6ea3b4be61134ee353c7f504d440 upstream.
    
    These are the Foxconn-branded variants of the Dell DW5821e modules,
    same USB layout as those. The device exposes AT, NMEA and DIAG ports
    in both USB configurations.
    
    P:  Vendor=0489 ProdID=e0b4 Rev=03.18
    S:  Manufacturer=FII
    S:  Product=T77W968 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#=0x1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    
    P:  Vendor=0489 ProdID=e0b4 Rev=03.18
    S:  Manufacturer=FII
    S:  Product=T77W968 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 7 Cfg#= 2 Atr=a0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=0e Prot=00 Driver=cdc_mbim
    I:  If#=0x1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    I:  If#=0x6 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    
    Signed-off-by: Aleksander Morgado <aleksander@aleksander.es>
    [ johan: drop id defines ]
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3eea01bb7ed7a4cc293a0a919c83732c77d2ee72
Author: Aleksander Morgado <aleksander@aleksander.es>
Date:   Thu Nov 7 11:55:08 2019 +0100

    USB: serial: option: add support for DW5821e with eSIM support
    
    commit 957c31ea082e3fe5196f46d5b04018b10de47400 upstream.
    
    The device exposes AT, NMEA and DIAG ports in both USB configurations.
    Exactly same layout as the default DW5821e module, just a different
    vid/pid.
    
    P:  Vendor=413c ProdID=81e0 Rev=03.18
    S:  Manufacturer=Dell Inc.
    S:  Product=DW5821e-eSIM Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#=0x1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    
    P:  Vendor=413c ProdID=81e0 Rev=03.18
    S:  Manufacturer=Dell Inc.
    S:  Product=DW5821e-eSIM Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 7 Cfg#= 2 Atr=a0 MxPwr=500mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=0e Prot=00 Driver=cdc_mbim
    I:  If#=0x1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#=0x5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    I:  If#=0x6 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    
    Signed-off-by: Aleksander Morgado <aleksander@aleksander.es>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8fdc88f4cfaa67d32153543b7581446e6bb8ebf1
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Nov 7 14:21:19 2019 +0100

    USB: serial: mos7840: fix remote wakeup
    
    commit 92fe35fb9c70a00d8fbbf5bd6172c921dd9c7815 upstream.
    
    The driver was setting the device remote-wakeup feature during probe in
    violation of the USB specification (which says it should only be set
    just prior to suspending the device). This could potentially waste
    power during suspend as well as lead to spurious wakeups.
    
    Note that USB core would clear the remote-wakeup feature at first
    resume.
    
    Fixes: 3f5429746d91 ("USB: Moschip 7840 USB-Serial Driver")
    Cc: stable <stable@vger.kernel.org>     # 2.6.19
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b5c3841527da31210da81a45a7a95f592010dc95
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Nov 7 14:21:18 2019 +0100

    USB: serial: mos7720: fix remote wakeup
    
    commit ea422312a462696093b5db59d294439796cba4ad upstream.
    
    The driver was setting the device remote-wakeup feature during probe in
    violation of the USB specification (which says it should only be set
    just prior to suspending the device). This could potentially waste
    power during suspend as well as lead to spurious wakeups.
    
    Note that USB core would clear the remote-wakeup feature at first
    resume.
    
    Fixes: 0f64478cbc7a ("USB: add USB serial mos7720 driver")
    Cc: stable <stable@vger.kernel.org>     # 2.6.19
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a270442dd6b86c06da3fa8ac353b59094a795e27
Author: Pavel Löbl <pavel@loebl.cz>
Date:   Fri Nov 1 08:01:50 2019 +0100

    USB: serial: mos7840: add USB ID to support Moxa UPort 2210
    
    commit e696d00e65e81d46e911f24b12e441037bf11b38 upstream.
    
    Add USB ID for MOXA UPort 2210. This device contains mos7820 but
    it passes GPIO0 check implemented by driver and it's detected as
    mos7840. Hence product id check is added to force mos7820 mode.
    
    Signed-off-by: Pavel Löbl <pavel@loebl.cz>
    Cc: stable <stable@vger.kernel.org>
    [ johan: rename id defines and add vendor-id check ]
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 28b06dc3e53970fe82ee1e5b8bbc74cb73f08909
Author: Oliver Neukum <oneukum@suse.com>
Date:   Wed Nov 6 13:49:01 2019 +0100

    appledisplay: fix error handling in the scheduled work
    
    commit 91feb01596e5efc0cc922cc73f5583114dccf4d2 upstream.
    
    The work item can operate on
    
    1. stale memory left over from the last transfer
    the actual length of the data transfered needs to be checked
    2. memory already freed
    the error handling in appledisplay_probe() needs
    to cancel the work in that case
    
    Reported-and-tested-by: syzbot+495dab1f175edc9c2f13@syzkaller.appspotmail.com
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191106124902.7765-1-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8836f9ccf3c93c1e41a4d6e7d1dc16e933abc837
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Nov 7 15:28:55 2019 +0100

    USB: chaoskey: fix error case of a timeout
    
    commit 92aa5986f4f7b5a8bf282ca0f50967f4326559f5 upstream.
    
    In case of a timeout or if a signal aborts a read
    communication with the device needs to be ended
    lest we overwrite an active URB the next time we
    do IO to the device, as the URB may still be active.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.de>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191107142856.16774-1-oneukum@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6c27699aeb90130d052a2b961073e7208d9c59f5
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Nov 18 10:21:19 2019 +0100

    usb-serial: cp201x: support Mark-10 digital force gauge
    
    commit 347bc8cb26388791c5881a3775cb14a3f765a674 upstream.
    
    Add support for the Mark-10 digital force gauge device to the cp201x
    driver.
    
    Based on a report and a larger patch from Joel Jennings
    
    Reported-by: Joel Jennings <joel.jennings@makeitlabs.com>
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20191118092119.GA153852@kroah.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da80ba7f9902fcb3067f6c1e774afdeea09ce4b9
Author: Hewenliang <hewenliang4@huawei.com>
Date:   Fri Oct 25 00:35:15 2019 -0400

    usbip: tools: fix fd leakage in the function of read_attr_usbip_status
    
    commit 26a4d4c00f85cb844dd11dd35e848b079c2f5e8f upstream.
    
    We should close the fd before the return of read_attr_usbip_status.
    
    Fixes: 3391ba0e2792 ("usbip: tools: Extract generic code to be shared with vudc backend")
    Signed-off-by: Hewenliang <hewenliang4@huawei.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20191025043515.20053-1-hewenliang4@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f79198530d65175c01b828d8613297686df23f2c
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Fri Apr 20 20:51:18 2018 +0300

    virtio_console: move removal code
    
    [ Upstream commit aa44ec867030a72e8aa127977e37dec551d8df19 ]
    
    Will make it reusable for error handling.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 083aae5aecf5c60f9d2be12d9d60fec86d214b39
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Fri Apr 20 20:49:04 2018 +0300

    virtio_console: drop custom control queue cleanup
    
    [ Upstream commit 61a8950c5c5708cf2068b29ffde94e454e528208 ]
    
    We now cleanup all VQs on device removal - no need
    to handle the control VQ specially.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 20e9c1101260dfbe3e169a259591408ccab61c22
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Wed Mar 29 23:22:04 2017 +0300

    virtio_console: fix uninitialized variable use
    
    [ Upstream commit 2055997f983c6db7b5c3940ce5f8f822657d5bc3 ]
    
    We try to disable callbacks on c_ivq even without multiport
    even though that vq is not initialized in this configuration.
    
    Fixes: c743d09dbd01 ("virtio: console: Disable callbacks for virtqueues at start of S4 freeze")
    Suggested-by: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 535b31d0e596394b05ab75dda00816bd1a109c11
Author: Halil Pasic <pasic@linux.ibm.com>
Date:   Thu Nov 14 13:46:46 2019 +0100

    virtio_ring: fix return code on DMA mapping fails
    
    [ Upstream commit f7728002c1c7bfa787b276a31c3ef458739b8e7c ]
    
    Commit 780bc7903a32 ("virtio_ring: Support DMA APIs")  makes
    virtqueue_add() return -EIO when we fail to map our I/O buffers. This is
    a very realistic scenario for guests with encrypted memory, as swiotlb
    may run out of space, depending on it's size and the I/O load.
    
    The virtio-blk driver interprets -EIO form virtqueue_add() as an IO
    error, despite the fact that swiotlb full is in absence of bugs a
    recoverable condition.
    
    Let us change the return code to -ENOMEM, and make the block layer
    recover form these failures when virtio-blk encounters the condition
    described above.
    
    Cc: stable@vger.kernel.org
    Fixes: 780bc7903a32 ("virtio_ring: Support DMA APIs")
    Signed-off-by: Halil Pasic <pasic@linux.ibm.com>
    Tested-by: Michael Mueller <mimu@linux.ibm.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55b15b9aac90bbe6dafbd732a813ba9afc85cfcc
Author: Laurent Vivier <lvivier@redhat.com>
Date:   Thu Nov 14 13:25:48 2019 +0100

    virtio_console: allocate inbufs in add_port() only if it is needed
    
    [ Upstream commit d791cfcbf98191122af70b053a21075cb450d119 ]
    
    When we hot unplug a virtserialport and then try to hot plug again,
    it fails:
    
    (qemu) chardev-add socket,id=serial0,path=/tmp/serial0,server,nowait
    (qemu) device_add virtserialport,bus=virtio-serial0.0,nr=2,\
                      chardev=serial0,id=serial0,name=serial0
    (qemu) device_del serial0
    (qemu) device_add virtserialport,bus=virtio-serial0.0,nr=2,\
                      chardev=serial0,id=serial0,name=serial0
    kernel error:
      virtio-ports vport2p2: Error allocating inbufs
    qemu error:
      virtio-serial-bus: Guest failure in adding port 2 for device \
                         virtio-serial0.0
    
    This happens because buffers for the in_vq are allocated when the port is
    added but are not released when the port is unplugged.
    
    They are only released when virtconsole is removed (see a7a69ec0d8e4)
    
    To avoid the problem and to be symmetric, we could allocate all the buffers
    in init_vqs() as they are released in remove_vqs(), but it sounds like
    a waste of memory.
    
    Rather than that, this patch changes add_port() logic to ignore ENOSPC
    error in fill_queue(), which means queue has already been filled.
    
    Fixes: a7a69ec0d8e4 ("virtio_console: free buffers after reset")
    Cc: mst@redhat.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Laurent Vivier <lvivier@redhat.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d811bffe7e5358712de7c40d1a712a62dd5451f3
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Fri Apr 20 19:54:23 2018 +0300

    virtio_console: don't tie bufs to a vq
    
    [ Upstream commit 2855b33514d290c51d52d94e25d3ef942cd4d578 ]
    
    an allocated buffer doesn't need to be tied to a vq -
    only vq->vdev is ever used. Pass the function the
    just what it needs - the vdev.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8688e0d2018a4b1161c1c679a4fd4ce83a3265e0
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Fri Apr 20 21:00:13 2018 +0300

    virtio_console: reset on out of memory
    
    [ Upstream commit 5c60300d68da32ca77f7f978039dc72bfc78b06b ]
    
    When out of memory and we can't add ctrl vq buffers,
    probe fails. Unfortunately the error handling is
    out of spec: it calls del_vqs without bothering
    to reset the device first.
    
    To fix, call the full cleanup function in this case.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c99399fe8b3985ac2660fba7f22d6d859ed1658
Author: Sean Young <sean@mess.org>
Date:   Wed Oct 16 14:19:15 2019 -0300

    media: imon: invalid dereference in imon_touch_event
    
    commit f3f5ba42c58d56d50f539854d8cc188944e96087 upstream.
    
    The touch timer is set up in intf1. If the second interface does not exist,
    the timer and touch input device are not setup and we get the following
    error, when touch events are reported via intf0.
    
    kernel BUG at kernel/time/timer.c:956!
    invalid opcode: 0000 [#1] SMP KASAN
    CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.4.0-rc1+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:__mod_timer kernel/time/timer.c:956 [inline]
    RIP: 0010:__mod_timer kernel/time/timer.c:949 [inline]
    RIP: 0010:mod_timer+0x5a2/0xb50 kernel/time/timer.c:1100
    Code: 45 10 c7 44 24 14 ff ff ff ff 48 89 44 24 08 48 8d 45 20 48 c7 44 24 18 00 00 00 00 48 89 04 24 e9 5a fc ff ff e8 ae ce 0e 00 <0f> 0b e8 a7 ce 0e 00 4c 89 74 24 20 e9 37 fe ff ff e8 98 ce 0e 00
    RSP: 0018:ffff8881db209930 EFLAGS: 00010006
    RAX: ffffffff86c2b200 RBX: 00000000ffffa688 RCX: ffffffff83efc583
    RDX: 0000000000000100 RSI: ffffffff812f4d82 RDI: ffff8881d2356200
    RBP: ffff8881d23561e8 R08: ffffffff86c2b200 R09: ffffed103a46abeb
    R10: ffffed103a46abea R11: ffff8881d2355f53 R12: dffffc0000000000
    R13: 1ffff1103b64132d R14: ffff8881d2355f50 R15: 0000000000000006
    FS:  0000000000000000(0000) GS:ffff8881db200000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f75e2799000 CR3: 00000001d3b07000 CR4: 00000000001406f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <IRQ>
     imon_touch_event drivers/media/rc/imon.c:1348 [inline]
     imon_incoming_packet.isra.0+0x2546/0x2f10 drivers/media/rc/imon.c:1603
     usb_rx_callback_intf0+0x151/0x1e0 drivers/media/rc/imon.c:1734
     __usb_hcd_giveback_urb+0x1f2/0x470 drivers/usb/core/hcd.c:1654
     usb_hcd_giveback_urb+0x368/0x420 drivers/usb/core/hcd.c:1719
     dummy_timer+0x120f/0x2fa2 drivers/usb/gadget/udc/dummy_hcd.c:1965
     call_timer_fn+0x179/0x650 kernel/time/timer.c:1404
     expire_timers kernel/time/timer.c:1449 [inline]
     __run_timers kernel/time/timer.c:1773 [inline]
     __run_timers kernel/time/timer.c:1740 [inline]
     run_timer_softirq+0x5e3/0x1490 kernel/time/timer.c:1786
     __do_softirq+0x221/0x912 kernel/softirq.c:292
     invoke_softirq kernel/softirq.c:373 [inline]
     irq_exit+0x178/0x1a0 kernel/softirq.c:413
     exiting_irq arch/x86/include/asm/apic.h:536 [inline]
     smp_apic_timer_interrupt+0x12f/0x500 arch/x86/kernel/apic/apic.c:1137
     apic_timer_interrupt+0xf/0x20 arch/x86/entry/entry_64.S:830
     </IRQ>
    RIP: 0010:default_idle+0x28/0x2e0 arch/x86/kernel/process.c:581
    Code: 90 90 41 56 41 55 65 44 8b 2d 44 3a 8f 7a 41 54 55 53 0f 1f 44 00 00 e8 36 ee d0 fb e9 07 00 00 00 0f 00 2d fa dd 4f 00 fb f4 <65> 44 8b 2d 20 3a 8f 7a 0f 1f 44 00 00 5b 5d 41 5c 41 5d 41 5e c3
    RSP: 0018:ffffffff86c07da8 EFLAGS: 00000246 ORIG_RAX: ffffffffffffff13
    RAX: 0000000000000007 RBX: ffffffff86c2b200 RCX: 0000000000000000
    RDX: 0000000000000000 RSI: 0000000000000006 RDI: ffffffff86c2ba4c
    RBP: fffffbfff0d85640 R08: ffffffff86c2b200 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
    R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
     cpuidle_idle_call kernel/sched/idle.c:154 [inline]
     do_idle+0x3b6/0x500 kernel/sched/idle.c:263
     cpu_startup_entry+0x14/0x20 kernel/sched/idle.c:355
     start_kernel+0x82a/0x864 init/main.c:784
     secondary_startup_64+0xa4/0xb0 arch/x86/kernel/head_64.S:241
    Modules linked in:
    
    Reported-by: syzbot+f49d12d34f2321cf4df2@syzkaller.appspotmail.com
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b76ae4242b6ff9f53fa29e616bcc064a6fa813c3
Author: Vito Caputo <vcaputo@pengaru.com>
Date:   Sun Oct 13 23:08:45 2019 -0300

    media: cxusb: detect cxusb_ctrl_msg error in query
    
    commit ca8f245f284eeffa56f3b7a5eb6fc503159ee028 upstream.
    
    Don't use uninitialized ircode[] in cxusb_rc_query() when
    cxusb_ctrl_msg() fails to populate its contents.
    
    syzbot reported:
    
    dvb-usb: bulk message failed: -22 (1/-30591)
    =====================================================
    BUG: KMSAN: uninit-value in ir_lookup_by_scancode drivers/media/rc/rc-main.c:494 [inline]
    BUG: KMSAN: uninit-value in rc_g_keycode_from_table drivers/media/rc/rc-main.c:582 [inline]
    BUG: KMSAN: uninit-value in rc_keydown+0x1a6/0x6f0 drivers/media/rc/rc-main.c:816
    CPU: 1 PID: 11436 Comm: kworker/1:2 Not tainted 5.3.0-rc7+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Workqueue: events dvb_usb_read_remote_control
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x191/0x1f0 lib/dump_stack.c:113
     kmsan_report+0x13a/0x2b0 mm/kmsan/kmsan_report.c:108
     __msan_warning+0x73/0xe0 mm/kmsan/kmsan_instr.c:250
     bsearch+0x1dd/0x250 lib/bsearch.c:41
     ir_lookup_by_scancode drivers/media/rc/rc-main.c:494 [inline]
     rc_g_keycode_from_table drivers/media/rc/rc-main.c:582 [inline]
     rc_keydown+0x1a6/0x6f0 drivers/media/rc/rc-main.c:816
     cxusb_rc_query+0x2e1/0x360 drivers/media/usb/dvb-usb/cxusb.c:548
     dvb_usb_read_remote_control+0xf9/0x290 drivers/media/usb/dvb-usb/dvb-usb-remote.c:261
     process_one_work+0x1572/0x1ef0 kernel/workqueue.c:2269
     worker_thread+0x111b/0x2460 kernel/workqueue.c:2415
     kthread+0x4b5/0x4f0 kernel/kthread.c:256
     ret_from_fork+0x35/0x40 arch/x86/entry/entry_64.S:355
    
    Uninit was stored to memory at:
     kmsan_save_stack_with_flags mm/kmsan/kmsan.c:150 [inline]
     kmsan_internal_chain_origin+0xd2/0x170 mm/kmsan/kmsan.c:314
     __msan_chain_origin+0x6b/0xe0 mm/kmsan/kmsan_instr.c:184
     rc_g_keycode_from_table drivers/media/rc/rc-main.c:583 [inline]
     rc_keydown+0x2c4/0x6f0 drivers/media/rc/rc-main.c:816
     cxusb_rc_query+0x2e1/0x360 drivers/media/usb/dvb-usb/cxusb.c:548
     dvb_usb_read_remote_control+0xf9/0x290 drivers/media/usb/dvb-usb/dvb-usb-remote.c:261
     process_one_work+0x1572/0x1ef0 kernel/workqueue.c:2269
     worker_thread+0x111b/0x2460 kernel/workqueue.c:2415
     kthread+0x4b5/0x4f0 kernel/kthread.c:256
     ret_from_fork+0x35/0x40 arch/x86/entry/entry_64.S:355
    
    Local variable description: ----ircode@cxusb_rc_query
    Variable was created at:
     cxusb_rc_query+0x4d/0x360 drivers/media/usb/dvb-usb/cxusb.c:543
     dvb_usb_read_remote_control+0xf9/0x290 drivers/media/usb/dvb-usb/dvb-usb-remote.c:261
    
    Signed-off-by: Vito Caputo <vcaputo@pengaru.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ab1da610f23d72ab53c3951876fa44ed85e1f99
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue Jul 30 09:48:27 2019 +0200

    media: b2c2-flexcop-usb: add sanity checking
    
    commit 1b976fc6d684e3282914cdbe7a8d68fdce19095c upstream.
    
    The driver needs an isochronous endpoint to be present. It will
    oops in its absence. Add checking for it.
    
    Reported-by: syzbot+d93dff37e6a89431c158@syzkaller.appspotmail.com
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Sean Young <sean@mess.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fa5c50f17f49802df087ec5d9b4410e7e3a7242
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Mon Jul 29 23:14:55 2019 -0300

    media: uvcvideo: Fix error path in control parsing failure
    
    commit 8c279e9394cade640ed86ec6c6645a0e7df5e0b6 upstream.
    
    When parsing the UVC control descriptors fails, the error path tries to
    cleanup a media device that hasn't been initialised, potentially
    resulting in a crash. Fix this by initialising the media device before
    the error handling path can be reached.
    
    Fixes: 5a254d751e52 ("[media] uvcvideo: Register a v4l2_device")
    Reported-by: syzbot+c86454eb3af9e8a4da20@syzkaller.appspotmail.com
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42b4bc3655b7876234fcefc5d69c4d8798d83007
Author: Kai Shen <shenkai8@huawei.com>
Date:   Thu Nov 7 05:08:17 2019 +0000

    cpufreq: Add NULL checks to show() and store() methods of cpufreq
    
    commit e6e8df07268c1f75dd9215536e2ce4587b70f977 upstream.
    
    Add NULL checks to show() and store() in cpufreq.c to avoid attempts
    to invoke a NULL callback.
    
    Though some interfaces of cpufreq are set as read-only, users can
    still get write permission using chmod which can lead to a kernel
    crash, as follows:
    
    chmod +w /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq
    echo 1 >  /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq
    
    This bug was found in linux 4.19.
    
    Signed-off-by: Kai Shen <shenkai8@huawei.com>
    Reported-by: Feilong Lin <linfeilong@huawei.com>
    Reviewed-by: Feilong Lin <linfeilong@huawei.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    [ rjw: Subject & changelog ]
    Cc: All applicable <stable@vger.kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae86561c9854e83f44deaec958baf30b0ec1620e
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Mon Oct 7 12:09:53 2019 -0300

    media: usbvision: Fix races among open, close, and disconnect
    
    commit 9e08117c9d4efc1e1bc6fce83dab856d9fd284b6 upstream.
    
    Visual inspection of the usbvision driver shows that it suffers from
    three races between its open, close, and disconnect handlers.  In
    particular, the driver is careful to update its usbvision->user and
    usbvision->remove_pending flags while holding the private mutex, but:
    
            usbvision_v4l2_close() and usbvision_radio_close() don't hold
            the mutex while they check the value of
            usbvision->remove_pending;
    
            usbvision_disconnect() doesn't hold the mutex while checking
            the value of usbvision->user; and
    
            also, usbvision_v4l2_open() and usbvision_radio_open() don't
            check whether the device has been unplugged before allowing
            the user to open the device files.
    
    Each of these can potentially lead to usbvision_release() being called
    twice and use-after-free errors.
    
    This patch fixes the races by reading the flags while the mutex is
    still held and checking for pending removes before allowing an open to
    succeed.
    
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    CC: <stable@vger.kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 012a42dbc770d3e815cae536917245d74621c552
Author: Alexander Popov <alex.popov@linux.com>
Date:   Sun Nov 3 23:17:19 2019 +0100

    media: vivid: Fix wrong locking that causes race conditions on streaming stop
    
    commit 6dcd5d7a7a29c1e4b8016a06aed78cd650cd8c27 upstream.
    
    There is the same incorrect approach to locking implemented in
    vivid_stop_generating_vid_cap(), vivid_stop_generating_vid_out() and
    sdr_cap_stop_streaming().
    
    These functions are called during streaming stopping with vivid_dev.mutex
    locked. And they all do the same mistake while stopping their kthreads,
    which need to lock this mutex as well. See the example from
    vivid_stop_generating_vid_cap():
      /* shutdown control thread */
      vivid_grab_controls(dev, false);
      mutex_unlock(&dev->mutex);
      kthread_stop(dev->kthread_vid_cap);
      dev->kthread_vid_cap = NULL;
      mutex_lock(&dev->mutex);
    
    But when this mutex is unlocked, another vb2_fop_read() can lock it
    instead of vivid_thread_vid_cap() and manipulate the buffer queue.
    That causes a use-after-free access later.
    
    To fix those issues let's:
      1. avoid unlocking the mutex in vivid_stop_generating_vid_cap(),
    vivid_stop_generating_vid_out() and sdr_cap_stop_streaming();
      2. use mutex_trylock() with schedule_timeout_uninterruptible() in
    the loops of the vivid kthread handlers.
    
    Signed-off-by: Alexander Popov <alex.popov@linux.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Tested-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Cc: <stable@vger.kernel.org>      # for v3.18 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ac519b0e001b1fe00ca617b248bf7b2b4f69231
Author: Vandana BN <bnvandana@gmail.com>
Date:   Mon Sep 9 06:43:31 2019 -0300

    media: vivid: Set vid_cap_streaming and vid_out_streaming to true
    
    commit b4add02d2236fd5f568db141cfd8eb4290972eb3 upstream.
    
    When vbi stream is started, followed by video streaming,
    the vid_cap_streaming and vid_out_streaming were not being set to true,
    which would cause the video stream to stop when vbi stream is stopped.
    This patch allows to set vid_cap_streaming and vid_out_streaming to true.
    According to Hans Verkuil it appears that these 'if (dev->kthread_vid_cap)'
    checks are a left-over from the original vivid development and should never
    have been there.
    
    Signed-off-by: Vandana BN <bnvandana@gmail.com>
    Cc: <stable@vger.kernel.org>      # for v3.18 and up
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2c7c3f7c6f15bedd922e0d8b3767188735c5144
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Fri Nov 3 16:49:00 2017 +0100

    l2tp: don't use l2tp_tunnel_find() in l2tp_ip and l2tp_ip6
    
    commit 8f7dc9ae4a7aece9fbc3e6637bdfa38b36bcdf09 upstream.
    
    Using l2tp_tunnel_find() in l2tp_ip_recv() is wrong for two reasons:
    
      * It doesn't take a reference on the returned tunnel, which makes the
        call racy wrt. concurrent tunnel deletion.
    
      * The lookup is only based on the tunnel identifier, so it can return
        a tunnel that doesn't match the packet's addresses or protocol.
    
    For example, a packet sent to an L2TPv3 over IPv6 tunnel can be
    delivered to an L2TPv2 over UDPv4 tunnel. This is worse than a simple
    cross-talk: when delivering the packet to an L2TP over UDP tunnel, the
    corresponding socket is UDP, where ->sk_backlog_rcv() is NULL. Calling
    sk_receive_skb() will then crash the kernel by trying to execute this
    callback.
    
    And l2tp_tunnel_find() isn't even needed here. __l2tp_ip_bind_lookup()
    properly checks the socket binding and connection settings. It was used
    as a fallback mechanism for finding tunnels that didn't have their data
    path registered yet. But it's not limited to this case and can be used
    to replace l2tp_tunnel_find() in the general case.
    
    Fix l2tp_ip6 in the same way.
    
    Fixes: 0d76751fad77 ("l2tp: Add L2TPv3 IP encapsulation (no UDP) support")
    Fixes: a32e0eec7042 ("l2tp: introduce L2TPv3 IP encapsulation support for IPv6")
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Nicolas Schier <n.schier@avm.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81f48ce6d83cdae18e04fcaaf623b38f478d8e77
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Nov 21 11:37:10 2019 +0100

    nfc: port100: handle command failure cleanly
    
    commit 5f9f0b11f0816b35867f2cf71e54d95f53f03902 upstream.
    
    If starting the transfer of a command suceeds but the transfer for the reply
    fails, it is not enough to initiate killing the transfer for the
    command may still be running. You need to wait for the killing to finish
    before you can reuse URB and buffer.
    
    Reported-and-tested-by: syzbot+711468aa5c3a1eabf863@syzkaller.appspotmail.com
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit deb7719f059980f4fc2e44c9866e4f02f48200ba
Author: Waiman Long <longman@redhat.com>
Date:   Fri Nov 15 11:14:45 2019 -0500

    x86/speculation: Fix redundant MDS mitigation message
    
    commit cd5a2aa89e847bdda7b62029d94e95488d73f6b2 upstream.
    
    Since MDS and TAA mitigations are inter-related for processors that are
    affected by both vulnerabilities, the followiing confusing messages can
    be printed in the kernel log:
    
      MDS: Vulnerable
      MDS: Mitigation: Clear CPU buffers
    
    To avoid the first incorrect message, defer the printing of MDS
    mitigation after the TAA mitigation selection has been done. However,
    that has the side effect of printing TAA mitigation first before MDS
    mitigation.
    
     [ bp: Check box is affected/mitigations are disabled first before
       printing and massage. ]
    
    Suggested-by: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Mark Gross <mgross@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Tyler Hicks <tyhicks@canonical.com>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20191115161445.30809-3-longman@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5aba0ad64efe5b30b587ad597dee840198aac256
Author: Waiman Long <longman@redhat.com>
Date:   Fri Nov 15 11:14:44 2019 -0500

    x86/speculation: Fix incorrect MDS/TAA mitigation status
    
    commit 64870ed1b12e235cfca3f6c6da75b542c973ff78 upstream.
    
    For MDS vulnerable processors with TSX support, enabling either MDS or
    TAA mitigations will enable the use of VERW to flush internal processor
    buffers at the right code path. IOW, they are either both mitigated
    or both not. However, if the command line options are inconsistent,
    the vulnerabilites sysfs files may not report the mitigation status
    correctly.
    
    For example, with only the "mds=off" option:
    
      vulnerabilities/mds:Vulnerable; SMT vulnerable
      vulnerabilities/tsx_async_abort:Mitigation: Clear CPU buffers; SMT vulnerable
    
    The mds vulnerabilities file has wrong status in this case. Similarly,
    the taa vulnerability file will be wrong with mds mitigation on, but
    taa off.
    
    Change taa_select_mitigation() to sync up the two mitigation status
    and have them turned off if both "mds=off" and "tsx_async_abort=off"
    are present.
    
    Update documentation to emphasize the fact that both "mds=off" and
    "tsx_async_abort=off" have to be specified together for processors that
    are affected by both TAA and MDS to be effective.
    
     [ bp: Massage and add kernel-parameters.txt change too. ]
    
    Fixes: 1b42f017415b ("x86/speculation/taa: Add mitigation for TSX Async Abort")
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jiri Kosina <jkosina@suse.cz>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: linux-doc@vger.kernel.org
    Cc: Mark Gross <mgross@linux.intel.com>
    Cc: <stable@vger.kernel.org>
    Cc: Pawan Gupta <pawan.kumar.gupta@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Tyler Hicks <tyhicks@canonical.com>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20191115161445.30809-2-longman@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24efb9def978585c5347501a8dff421e0d52ff1c
Author: Alexander Kapshuk <alexander.kapshuk@gmail.com>
Date:   Tue Sep 24 07:46:59 2019 +0300

    x86/insn: Fix awk regexp warnings
    
    commit 700c1018b86d0d4b3f1f2d459708c0cdf42b521d upstream.
    
    gawk 5.0.1 generates the following regexp warnings:
    
      GEN      /home/sasha/torvalds/tools/objtool/arch/x86/lib/inat-tables.c
      awk: ../arch/x86/tools/gen-insn-attr-x86.awk:260: warning: regexp escape sequence `\:' is not a known regexp operator
      awk: ../arch/x86/tools/gen-insn-attr-x86.awk:350: (FILENAME=../arch/x86/lib/x86-opcode-map.txt FNR=41) warning: regexp escape sequence `\&' is  not a known regexp operator
    
    Ealier versions of gawk are not known to generate these warnings. The
    gawk manual referenced below does not list characters ':' and '&' as
    needing escaping, so 'unescape' them. See
    
      https://www.gnu.org/software/gawk/manual/html_node/Escape-Sequences.html
    
    for more info.
    
    Running diff on the output generated by the script before and after
    applying the patch reported no differences.
    
     [ bp: Massage commit message. ]
    
    [ Caught the respective tools header discrepancy. ]
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Alexander Kapshuk <alexander.kapshuk@gmail.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20190924044659.3785-1-alexander.kapshuk@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21c1c5f146f77d2efc62917bf3cc95d955637410
Author: Alexey Brodkin <Alexey.Brodkin@synopsys.com>
Date:   Tue Oct 22 17:04:11 2019 +0300

    ARC: perf: Accommodate big-endian CPU
    
    commit 5effc09c4907901f0e71e68e5f2e14211d9a203f upstream.
    
    8-letter strings representing ARC perf events are stores in two
    32-bit registers as ASCII characters like that: "IJMP", "IALL", "IJMPTAK" etc.
    
    And the same order of bytes in the word is used regardless CPU endianness.
    
    Which means in case of big-endian CPU core we need to swap bytes to get
    the same order as if it was on little-endian CPU.
    
    Otherwise we're seeing the following error message on boot:
    ------------------------->8----------------------
    ARC perf        : 8 counters (32 bits), 40 conditions, [overflow IRQ support]
    sysfs: cannot create duplicate filename '/devices/arc_pct/events/pmji'
    CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.2.18 #3
    Stack Trace:
      arc_unwind_core+0xd4/0xfc
      dump_stack+0x64/0x80
      sysfs_warn_dup+0x46/0x58
      sysfs_add_file_mode_ns+0xb2/0x168
      create_files+0x70/0x2a0
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 1 at kernel/events/core.c:12144 perf_event_sysfs_init+0x70/0xa0
    Failed to register pmu: arc_pct, reason -17
    Modules linked in:
    CPU: 0 PID: 1 Comm: swapper/0 Not tainted 5.2.18 #3
    Stack Trace:
      arc_unwind_core+0xd4/0xfc
      dump_stack+0x64/0x80
      __warn+0x9c/0xd4
      warn_slowpath_fmt+0x22/0x2c
      perf_event_sysfs_init+0x70/0xa0
    ---[ end trace a75fb9a9837bd1ec ]---
    ------------------------->8----------------------
    
    What happens here we're trying to register more than one raw perf event
    with the same name "PMJI". Why? Because ARC perf events are 4 to 8 letters
    and encoded into two 32-bit words. In this particular case we deal with 2
    events:
     * "IJMP____" which counts all jump & branch instructions
     * "IJMPC___" which counts only conditional jumps & branches
    
    Those strings are split in two 32-bit words this way "IJMP" + "____" &
    "IJMP" + "C___" correspondingly. Now if we read them swapped due to CPU core
    being big-endian then we read "PMJI" + "____" & "PMJI" + "___C".
    
    And since we interpret read array of ASCII letters as a null-terminated string
    on big-endian CPU we end up with 2 events of the same name "PMJI".
    
    Signed-off-by: Alexey Brodkin <abrodkin@synopsys.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cc1ac2f0bce50a37b1f85ad89e968f49ee3494a
Author: Chester Lin <clin@suse.com>
Date:   Fri Aug 30 14:30:07 2019 +0100

    ARM: 8904/1: skip nomap memblocks while finding the lowmem/highmem boundary
    
    commit 1d31999cf04c21709f72ceb17e65b54a401330da upstream.
    
    adjust_lowmem_bounds() checks every memblocks in order to find the boundary
    between lowmem and highmem. However some memblocks could be marked as NOMAP
    so they are not used by kernel, which should be skipped while calculating
    the boundary.
    
    Signed-off-by: Chester Lin <clin@suse.com>
    Reviewed-by: Mike Rapoport <rppt@linux.ibm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16af69a88f22e29055877848b0bbbaddecf6b0a6
Author: Gang He <ghe@suse.com>
Date:   Fri Nov 2 15:48:03 2018 -0700

    ocfs2: remove ocfs2_is_o2cb_active()
    
    commit a634644751c46238df58bbfe992e30c1668388db upstream.
    
    Remove ocfs2_is_o2cb_active().  We have similar functions to identify
    which cluster stack is being used via osb->osb_cluster_stack.
    
    Secondly, the current implementation of ocfs2_is_o2cb_active() is not
    totally safe.  Based on the design of stackglue, we need to get
    ocfs2_stack_lock before using ocfs2_stack related data structures, and
    that active_stack pointer can be NULL in the case of mount failure.
    
    Link: http://lkml.kernel.org/r/1495441079-11708-1-git-send-email-ghe@suse.com
    Signed-off-by: Gang He <ghe@suse.com>
    Reviewed-by: Joseph Qi <jiangqi903@gmail.com>
    Reviewed-by: Eric Ren <zren@suse.com>
    Acked-by: Changwei Ge <ge.changwei@h3c.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ca04acf4f6ce4036b3eec029dd6a1888ab78216
Author: Bo Yan <byan@nvidia.com>
Date:   Tue Jan 23 13:57:55 2018 -0800

    cpufreq: Skip cpufreq resume if it's not suspended
    
    commit 703cbaa601ff3fb554d1246c336ba727cc083ea0 upstream.
    
    cpufreq_resume can be called even without preceding cpufreq_suspend.
    This can happen in following scenario:
    
        suspend_devices_and_enter
           --> dpm_suspend_start
              --> dpm_prepare
                  --> device_prepare : this function errors out
              --> dpm_suspend: this is skipped due to dpm_prepare failure
                               this means cpufreq_suspend is skipped over
           --> goto Recover_platform, due to previous error
           --> goto Resume_devices
           --> dpm_resume_end
               --> dpm_resume
                   --> cpufreq_resume
    
    In case schedutil is used as frequency governor, cpufreq_resume will
    eventually call sugov_start, which does following:
    
        memset(sg_cpu, 0, sizeof(*sg_cpu));
        ....
    
    This effectively erases function pointer for frequency update, causing
    crash later on. The function pointer would have been set correctly if
    subsequent cpufreq_add_update_util_hook runs successfully, but that
    function returns earlier because cpufreq_suspend was not called:
    
        if (WARN_ON(per_cpu(cpufreq_update_util_data, cpu)))
                    return;
    
    The fix is to check cpufreq_suspended first, if it's false, that means
    cpufreq_suspend was not called in the first place, so do not resume
    cpufreq.
    
    Signed-off-by: Bo Yan <byan@nvidia.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    [ rjw: Dropped printing a message ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 80ade6178da2033c9c939c94636e2d466d3e957c
Author: Hari Vyas <hari.vyas@broadcom.com>
Date:   Tue Aug 7 16:33:48 2018 +0530

    arm64: fix for bad_mode() handler to always result in panic
    
    commit e4ba15debcfd27f60d43da940a58108783bff2a6 upstream.
    
    The bad_mode() handler is called if we encounter an uunknown exception,
    with the expectation that the subsequent call to panic() will halt the
    system. Unfortunately, if the exception calling bad_mode() is taken from
    EL0, then the call to die() can end up killing the current user task and
    calling schedule() instead of falling through to panic().
    
    Remove the die() call altogether, since we really want to bring down the
    machine in this "impossible" case.
    
    Signed-off-by: Hari Vyas <hari.vyas@broadcom.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5de1a7fc74309edceed5faaf18fe0f4ffd0eac89
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Nov 18 14:26:47 2016 -0800

    dm: use blk_set_queue_dying() in __dm_destroy()
    
    commit 2e91c3694181dc500faffec16c5aaa0ac5e15449 upstream.
    
    After QUEUE_FLAG_DYING has been set any code that is waiting in
    get_request() should be woken up.  But to get this behaviour
    blk_set_queue_dying() must be used instead of only setting
    QUEUE_FLAG_DYING.
    
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ae0f1781b56af4d40fca9ecc29fde571e123be7
Author: Denis Efremov <efremov@linux.com>
Date:   Fri Sep 27 01:56:04 2019 +0300

    ath9k_hw: fix uninitialized variable data
    
    commit 80e84f36412e0c5172447b6947068dca0d04ee82 upstream.
    
    Currently, data variable in ar9003_hw_thermo_cal_apply() could be
    uninitialized if ar9300_otp_read_word() will fail to read the value.
    Initialize data variable with 0 to prevent an undefined behavior. This
    will be enough to handle error case when ar9300_otp_read_word() fails.
    
    Fixes: 80fe43f2bbd5 ("ath9k_hw: Read and configure thermocal for AR9462")
    Cc: Rajkumar Manoharan <rmanohar@qca.qualcomm.com>
    Cc: John W. Linville <linville@tuxdriver.com>
    Cc: Kalle Valo <kvalo@codeaurora.org>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: stable@vger.kernel.org
    Signed-off-by: Denis Efremov <efremov@linux.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e528acd31a13f4115ab5a0bf804fd2356a8d3c32
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Mon Nov 11 14:12:27 2019 -0800

    KVM: MMU: Do not treat ZONE_DEVICE pages as being reserved
    
    commit a78986aae9b2988f8493f9f65a587ee433e83bc3 upstream.
    
    Explicitly exempt ZONE_DEVICE pages from kvm_is_reserved_pfn() and
    instead manually handle ZONE_DEVICE on a case-by-case basis.  For things
    like page refcounts, KVM needs to treat ZONE_DEVICE pages like normal
    pages, e.g. put pages grabbed via gup().  But for flows such as setting
    A/D bits or shifting refcounts for transparent huge pages, KVM needs to
    to avoid processing ZONE_DEVICE pages as the flows in question lack the
    underlying machinery for proper handling of ZONE_DEVICE pages.
    
    This fixes a hang reported by Adam Borowski[*] in dev_pagemap_cleanup()
    when running a KVM guest backed with /dev/dax memory, as KVM straight up
    doesn't put any references to ZONE_DEVICE pages acquired by gup().
    
    Note, Dan Williams proposed an alternative solution of doing put_page()
    on ZONE_DEVICE pages immediately after gup() in order to simplify the
    auditing needed to ensure is_zone_device_page() is called if and only if
    the backing device is pinned (via gup()).  But that approach would break
    kvm_vcpu_{un}map() as KVM requires the page to be pinned from map() 'til
    unmap() when accessing guest memory, unlike KVM's secondary MMU, which
    coordinates with mmu_notifier invalidations to avoid creating stale
    page references, i.e. doesn't rely on pages being pinned.
    
    [*] http://lkml.kernel.org/r/20190919115547.GA17963@angband.pl
    
    Reported-by: Adam Borowski <kilobyte@angband.pl>
    Analyzed-by: David Hildenbrand <david@redhat.com>
    Acked-by: Dan Williams <dan.j.williams@intel.com>
    Cc: stable@vger.kernel.org
    Fixes: 3565fce3a659 ("mm, x86: get_user_pages() for dax mappings")
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [sean: backport to 4.x; resolve conflict in mmu.c]
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>

commit 368bc43ff0e9b166403029e5500ac1cc703c7c74
Author: Tomas Bortoli <tomasbortoli@gmail.com>
Date:   Fri Nov 1 21:42:44 2019 +0100

    Bluetooth: Fix invalid-free in bcsp_close()
    
    commit cf94da6f502d8caecabd56b194541c873c8a7a3c upstream.
    
    Syzbot reported an invalid-free that I introduced fixing a memleak.
    
    bcsp_recv() also frees bcsp->rx_skb but never nullifies its value.
    Nullify bcsp->rx_skb every time it is freed.
    
    Signed-off-by: Tomas Bortoli <tomasbortoli@gmail.com>
    Reported-by: syzbot+a0d209a4676664613e76@syzkaller.appspotmail.com
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Cc: Alexander Potapenko <glider@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a34dcf258afd8854a4d4c2741fdad01e4e784f2
Author: zhong jiang <zhongjiang@huawei.com>
Date:   Mon Apr 8 12:07:17 2019 +0800

    mm/memory_hotplug: Do not unlock when fails to take the device_hotplug_lock
    
    [ Upstream commit d2ab99403ee00d8014e651728a4702ea1ae5e52c ]
    
    When adding the memory by probing memory block in sysfs interface, there is an
    obvious issue that we will unlock the device_hotplug_lock when fails to takes it.
    
    That issue was introduced in Commit 8df1d0e4a265
    ("mm/memory_hotplug: make add_memory() take the device_hotplug_lock")
    
    We should drop out in time when fails to take the device_hotplug_lock.
    
    Fixes: 8df1d0e4a265 ("mm/memory_hotplug: make add_memory() take the device_hotplug_lock")
    Reported-by: Yang yingliang <yangyingliang@huawei.com>
    Signed-off-by: zhong jiang <zhongjiang@huawei.com>
    Reviewed-by: Oscar Salvador <osalvador@suse.de>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cb92a5c2cd39cad6992c9741dcb7908bb3d2e074
Author: Vignesh R <vigneshr@ti.com>
Date:   Tue Jan 15 12:28:32 2019 +0530

    spi: omap2-mcspi: Fix DMA and FIFO event trigger size mismatch
    
    [ Upstream commit baf8b9f8d260c55a86405f70a384c29cda888476 ]
    
    Commit b682cffa3ac6 ("spi: omap2-mcspi: Set FIFO DMA trigger level to word length")
    broke SPI transfers where bits_per_word != 8. This is because of
    mimsatch between McSPI FIFO level event trigger size (SPI word length) and
    DMA request size(word length * maxburst). This leads to data
    corruption, lockup and errors like:
    
            spi1.0: EOW timed out
    
    Fix this by setting DMA maxburst size to 1 so that
    McSPI FIFO level event trigger size matches DMA request size.
    
    Fixes: b682cffa3ac6 ("spi: omap2-mcspi: Set FIFO DMA trigger level to word length")
    Cc: stable@vger.kernel.org
    Reported-by: David Lechner <david@lechnology.com>
    Tested-by: David Lechner <david@lechnology.com>
    Signed-off-by: Vignesh R <vigneshr@ti.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61022359b32f21654c9d53216a5c5f0723fbf6e7
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Wed Oct 17 13:10:54 2018 +0530

    PCI: keystone: Use quirk to limit MRRS for K2G
    
    [ Upstream commit 148e340c0696369fadbbddc8f4bef801ed247d71 ]
    
    PCI controller in K2G also has a limitation that memory read request
    size (MRRS) must not exceed 256 bytes. Use the quirk to limit MRRS
    (added for K2HK, K2L and K2E) for K2G as well.
    
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b6fa999b0c1036573a023a9a0105b7e7d63d845
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Nov 7 01:56:40 2018 -0700

    pinctrl: zynq: Use define directive for PIN_CONFIG_IO_STANDARD
    
    [ Upstream commit cd8a145a066a1a3beb0ae615c7cb2ee4217418d7 ]
    
    Clang warns when one enumerated type is implicitly converted to another:
    
    drivers/pinctrl/pinctrl-zynq.c:985:18: warning: implicit conversion from
    enumeration type 'enum zynq_pin_config_param' to different enumeration
    type 'enum pin_config_param' [-Wenum-conversion]
            {"io-standard", PIN_CONFIG_IOSTANDARD, zynq_iostd_lvcmos18},
            ~               ^~~~~~~~~~~~~~~~~~~~~
    drivers/pinctrl/pinctrl-zynq.c:990:16: warning: implicit conversion from
    enumeration type 'enum zynq_pin_config_param' to different enumeration
    type 'enum pin_config_param' [-Wenum-conversion]
            = { PCONFDUMP(PIN_CONFIG_IOSTANDARD, "IO-standard", NULL, true),
                ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ./include/linux/pinctrl/pinconf-generic.h:163:11: note: expanded from
    macro 'PCONFDUMP'
            .param = a, .display = b, .format = c, .has_arg = d     \
                     ^
    2 warnings generated.
    
    It is expected that pinctrl drivers can extend pin_config_param because
    of the gap between PIN_CONFIG_END and PIN_CONFIG_MAX so this conversion
    isn't an issue. Most drivers that take advantage of this define the
    PIN_CONFIG variables as constants, rather than enumerated values. Do the
    same thing here so that Clang no longer warns.
    
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Acked-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01bd9422afb96fbd50c343eba1bf726c147eec68
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Thu Nov 1 08:00:08 2018 -0700

    pinctrl: lpc18xx: Use define directive for PIN_CONFIG_GPIO_PIN_INT
    
    [ Upstream commit f24bfb39975c241374cadebbd037c17960cf1412 ]
    
    Clang warns when one enumerated type is implicitly converted to another:
    
    drivers/pinctrl/pinctrl-lpc18xx.c:643:29: warning: implicit conversion
    from enumeration type 'enum lpc18xx_pin_config_param' to different
    enumeration type 'enum pin_config_param' [-Wenum-conversion]
            {"nxp,gpio-pin-interrupt", PIN_CONFIG_GPIO_PIN_INT, 0},
            ~                          ^~~~~~~~~~~~~~~~~~~~~~~
    drivers/pinctrl/pinctrl-lpc18xx.c:648:12: warning: implicit conversion
    from enumeration type 'enum lpc18xx_pin_config_param' to different
    enumeration type 'enum pin_config_param' [-Wenum-conversion]
            PCONFDUMP(PIN_CONFIG_GPIO_PIN_INT, "gpio pin int", NULL, true),
            ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ./include/linux/pinctrl/pinconf-generic.h:163:11: note: expanded from
    macro 'PCONFDUMP'
            .param = a, .display = b, .format = c, .has_arg = d     \
                     ^
    2 warnings generated.
    
    It is expected that pinctrl drivers can extend pin_config_param because
    of the gap between PIN_CONFIG_END and PIN_CONFIG_MAX so this conversion
    isn't an issue. Most drivers that take advantage of this define the
    PIN_CONFIG variables as constants, rather than enumerated values. Do the
    same thing here so that Clang no longer warns.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/140
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 265c470602c742b70ff17490a6026453b7931f91
Author: Brian Masney <masneyb@onstation.org>
Date:   Wed Oct 31 20:11:47 2018 -0400

    pinctrl: qcom: spmi-gpio: fix gpio-hog related boot issues
    
    [ Upstream commit 149a96047237574b756d872007c006acd0cc6687 ]
    
    When attempting to setup up a gpio hog, device probing would repeatedly
    fail with -EPROBE_DEFERED errors. It was caused by a circular dependency
    between the gpio and pinctrl frameworks. If the gpio-ranges property is
    present in device tree, then the gpio framework will handle the gpio pin
    registration and eliminate the circular dependency.
    
    See Christian Lamparter's commit a86caa9ba5d7 ("pinctrl: msm: fix
    gpio-hog related boot issues") for a detailed commit message that
    explains the issue in much more detail. The code comment in this commit
    came from Christian's commit.
    
    Signed-off-by: Brian Masney <masneyb@onstation.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 597b389bd8d496c050b7a02058702d27bf0ae3fa
Author: David Barmann <david.barmann@stackpath.com>
Date:   Thu Nov 8 08:13:35 2018 -0600

    sock: Reset dst when changing sk_mark via setsockopt
    
    [ Upstream commit 50254256f382c56bde87d970f3d0d02fdb76ec70 ]
    
    When setting the SO_MARK socket option, if the mark changes, the dst
    needs to be reset so that a new route lookup is performed.
    
    This fixes the case where an application wants to change routing by
    setting a new sk_mark.  If this is done after some packets have already
    been sent, the dst is cached and has no effect.
    
    Signed-off-by: David Barmann <david.barmann@stackpath.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23fd22e304fe26c3ea0ebc47f7a8bf19b1eb858d
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Thu Nov 8 02:08:43 2018 +0000

    net: bcmgenet: return correct value 'ret' from bcmgenet_power_down
    
    [ Upstream commit 0db55093b56618088b9a1d445eb6e43b311bea33 ]
    
    Fixes gcc '-Wunused-but-set-variable' warning:
    
    drivers/net/ethernet/broadcom/genet/bcmgenet.c: In function 'bcmgenet_power_down':
    drivers/net/ethernet/broadcom/genet/bcmgenet.c:1136:6: warning:
     variable 'ret' set but not used [-Wunused-but-set-variable]
    
    bcmgenet_power_down should return 'ret' instead of 0.
    
    Fixes: ca8cf341903f ("net: bcmgenet: propagate errors from bcmgenet_power_down")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1f9cb4f6bc219fb572c2debc029f7d4600deb63
Author: Colin Ian King <colin.king@canonical.com>
Date:   Mon Nov 5 09:43:52 2018 -0800

    ACPICA: Use %d for signed int print formatting instead of %u
    
    [ Upstream commit f8ddf49b420112e28bdd23d7ad52d7991a0ccbe3 ]
    
    Fix warnings found using static analysis with cppcheck, use %d printf
    format specifier for signed ints rather than %u
    
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Erik Schmauss <erik.schmauss@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4b754975cd9b3c3a93898ce64fad4df6ea1d3c1
Author: Tycho Andersen <tycho@tycho.ws>
Date:   Fri Nov 2 14:18:22 2018 -0600

    dlm: don't leak kernel pointer to userspace
    
    [ Upstream commit 9de30f3f7f4d31037cfbb7c787e1089c1944b3a7 ]
    
    In copy_result_to_user(), we first create a struct dlm_lock_result, which
    contains a struct dlm_lksb, the last member of which is a pointer to the
    lvb. Unfortunately, we copy the entire struct dlm_lksb to the result
    struct, which is then copied to userspace at the end of the function,
    leaking the contents of sb_lvbptr, which is a valid kernel pointer in some
    cases (indeed, later in the same function the data it points to is copied
    to userspace).
    
    It is an error to leak kernel pointers to userspace, as it undermines KASLR
    protections (see e.g. 65eea8edc31 ("floppy: Do not copy a kernel pointer to
    user memory in FDGETPRM ioctl") for another example of this).
    
    Signed-off-by: Tycho Andersen <tycho@tycho.ws>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81a30f89c7fceb8917d968dee62bd2d3ec632618
Author: Tycho Andersen <tycho@tycho.ws>
Date:   Fri Nov 2 14:18:20 2018 -0600

    dlm: fix invalid free
    
    [ Upstream commit d968b4e240cfe39d39d80483bac8bca8716fd93c ]
    
    dlm_config_nodes() does not allocate nodes on failure, so we should not
    free() nodes when it fails.
    
    Signed-off-by: Tycho Andersen <tycho@tycho.ws>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bbb2151c9d43abba7847a8be91b3162b797c706
Author: James Smart <jsmart2021@gmail.com>
Date:   Tue Oct 23 13:41:06 2018 -0700

    scsi: lpfc: fcoe: Fix link down issue after 1000+ link bounces
    
    [ Upstream commit 036cad1f1ac9ce03e2db94b8460f98eaf1e1ee4c ]
    
    On FCoE adapters, when running link bounce test in a loop, initiator
    failed to login with switch switch and required driver reload to
    recover. Switch reached a point where all subsequent FLOGIs would be
    LS_RJT'd. Further testing showed the condition to be related to not
    performing FCF discovery between FLOGI's.
    
    Fix by monitoring FLOGI failures and once a repeated error is seen
    repeat FCF discovery.
    
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d13ad591bd238f121f48d19768a6c70773b5b490
Author: Shivasharan S <shivasharan.srikanteshwara@broadcom.com>
Date:   Tue Oct 16 23:37:41 2018 -0700

    scsi: megaraid_sas: Fix msleep granularity
    
    [ Upstream commit 9155cf30a3c4ef97e225d6daddf9bd4b173267e8 ]
    
    In megasas_transition_to_ready() driver waits 180seconds for controller to
    change FW state. Here we are calling msleep(1) in a loop for this.  As
    explained in timers-howto.txt, msleep(1) will actually sleep longer than
    1ms. If a faulty controller is connected, we will end up waiting for much
    more than 180 seconds causing unnecessary delays during load.
    
    Change the granularity of msleep() call from 1ms to 1000ms.
    
    Signed-off-by: Shivasharan S <shivasharan.srikanteshwara@broadcom.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c05a29f73e59aa77905daca49ed718cce34bbe3d
Author: Suganath Prabu <suganath-prabu.subramani@broadcom.com>
Date:   Wed Oct 31 18:53:38 2018 +0530

    scsi: mpt3sas: Fix driver modifying persistent data in Manufacturing page11
    
    [ Upstream commit 97f35194093362a63b33caba2485521ddabe2c95 ]
    
    Currently driver is modifying both current & NVRAM/persistent data in
    Manufacturing page11. Driver should change only current copy of
    Manufacturing page11. It should not modify the persistent data.
    
    So removed the section of code where driver is modifying the persistent
    data of Manufacturing page11.
    
    Signed-off-by: Suganath Prabu <suganath-prabu.subramani@broadcom.com>
    Reviewed-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8c80f6279c81a8c26c1ca312a46c903c6e30b7b
Author: Suganath Prabu <suganath-prabu.subramani@broadcom.com>
Date:   Wed Oct 31 18:53:36 2018 +0530

    scsi: mpt3sas: Fix Sync cache command failure during driver unload
    
    [ Upstream commit 9029a72500b95578a35877a43473b82cb0386c53 ]
    
    This is to fix SYNC CACHE and START STOP command failures with
    DID_NO_CONNECT during driver unload.
    
    In driver's IO submission patch (i.e. in driver's .queuecommand()) driver
    won't allow any SCSI commands to the IOC when ioc->remove_host flag is set
    and hence SYNC CACHE commands which are issued to the target drives (where
    write cache is enabled) during driver unload time is failed with
    DID_NO_CONNECT status.
    
    Now modified the driver to allow SYNC CACHE and START STOP commands to IOC,
    even when remove_host flag is set.
    
    Signed-off-by: Suganath Prabu <suganath-prabu.subramani@broadcom.com>
    Reviewed-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d307d4b18324bfc77b9d8da3d4e9cfe094e37c58
Author: Shaokun Zhang <zhangshaokun@hisilicon.com>
Date:   Mon Nov 5 19:25:30 2018 +0800

    rtlwifi: rtl8192de: Fix misleading REG_MCUFWDL information
    
    [ Upstream commit 7d129adff3afbd3a449bc3593f2064ac546d58d3 ]
    
    RT_TRACE shows REG_MCUFWDL value as a decimal value with a '0x'
    prefix, which is somewhat misleading.
    
    Fix it to print hexadecimal, as was intended.
    
    Cc: Ping-Ke Shih <pkshih@realtek.com>
    Cc: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Shaokun Zhang <zhangshaokun@hisilicon.com>
    Acked-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7253cb7c57fe7ca56e4afbea9aa6c8505260ebd
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Oct 24 11:33:34 2018 +0300

    wireless: airo: potential buffer overflow in sprintf()
    
    [ Upstream commit 3d39e1bb1c88f32820c5f9271f2c8c2fb9a52bac ]
    
    It looks like we wanted to print a maximum of BSSList_rid.ssidLen bytes
    of the ssid, but we accidentally use "%*s" (width) instead of "%.*s"
    (precision) so if the ssid doesn't have a NUL terminator this could lead
    to an overflow.
    
    Static analysis.  Not tested.
    
    Fixes: e174961ca1a0 ("net: convert print_mac to %pM")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b3a1f75e29da548d0c52e3322b51f21e2a1d3c1
Author: Ali MJ Al-Nasrawy <alimjalnasrawy@gmail.com>
Date:   Tue Oct 23 19:12:35 2018 +0300

    brcmsmac: never log "tid x is not agg'able" by default
    
    [ Upstream commit 96fca788e5788b7ea3b0050eb35a343637e0a465 ]
    
    This message greatly spams the log under heavy Tx of frames with BK access
    class which is especially true when operating as AP. It is also not informative
    as the "agg'ablity" of TIDs are set once and never change.
    Fix this by logging only in debug mode.
    
    Signed-off-by: Ali MJ Al-Nasrawy <alimjalnasrawy@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d0d7b75019b764939c36f2b163b7a43c4b0f4f9
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Mon Oct 22 13:51:03 2018 +0200

    rtl8xxxu: Fix missing break in switch
    
    [ Upstream commit 307b00c5e695857ca92fc6a4b8ab6c48f988a1b1 ]
    
    Add missing break statement in order to prevent the code from falling
    through to the default case.
    
    Fixes: 26f1fad29ad9 ("New driver: rtl8xxxu (mac80211)")
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae79ea8c87762476a685e25d3fb0befa16f0b1f1
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Tue Oct 16 09:39:40 2018 +0200

    wlcore: Fix the return value in case of error in 'wlcore_vendor_cmd_smart_config_start()'
    
    [ Upstream commit 3419348a97bcc256238101129d69b600ceb5cc70 ]
    
    We return 0 unconditionally at the end of
    'wlcore_vendor_cmd_smart_config_start()'.
    However, 'ret' is set to some error codes in several error handling paths
    and we already return some error codes at the beginning of the function.
    
    Return 'ret' instead to propagate the error code.
    
    Fixes: 80ff8063e87c ("wlcore: handle smart config vendor commands")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2b5d224abdc36a7037f066c4ff31e990ab6a9a0
Author: Richard Guy Briggs <rgb@redhat.com>
Date:   Wed Oct 10 16:22:57 2018 -0400

    audit: print empty EXECVE args
    
    [ Upstream commit ea956d8be91edc702a98b7fe1f9463e7ca8c42ab ]
    
    Empty executable arguments were being skipped when printing out the list
    of arguments in an EXECVE record, making it appear they were somehow
    lost.  Include empty arguments as an itemized empty string.
    
    Reproducer:
            autrace /bin/ls "" "/etc"
            ausearch --start recent -m execve -i | grep EXECVE
            type=EXECVE msg=audit(10/03/2018 13:04:03.208:1391) : argc=3 a0=/bin/ls a2=/etc
    
    With fix:
            type=EXECVE msg=audit(10/03/2018 21:51:38.290:194) : argc=3 a0=/bin/ls a1= a2=/etc
            type=EXECVE msg=audit(1538617898.290:194): argc=3 a0="/bin/ls" a1="" a2="/etc"
    
    Passes audit-testsuite.  GH issue tracker at
    https://github.com/linux-audit/audit-kernel/issues/99
    
    Signed-off-by: Richard Guy Briggs <rgb@redhat.com>
    [PM: cleaned up the commit metadata]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1f78c15ae83f0f1ee8b779f4c28aef3ae918c08
Author: Valentin Schneider <valentin.schneider@arm.com>
Date:   Wed Sep 26 16:12:07 2018 +0100

    sched/fair: Don't increase sd->balance_interval on newidle balance
    
    [ Upstream commit 3f130a37c442d5c4d66531b240ebe9abfef426b5 ]
    
    When load_balance() fails to move some load because of task affinity,
    we end up increasing sd->balance_interval to delay the next periodic
    balance in the hopes that next time we look, that annoying pinned
    task(s) will be gone.
    
    However, idle_balance() pays no attention to sd->balance_interval, yet
    it will still lead to an increase in balance_interval in case of
    pinned tasks.
    
    If we're going through several newidle balances (e.g. we have a
    periodic task), this can lead to a huge increase of the
    balance_interval in a very small amount of time.
    
    To prevent that, don't increase the balance interval when going
    through a newidle balance.
    
    This is a similar approach to what is done in commit 58b26c4c0257
    ("sched: Increment cache_nice_tries only on periodic lb"), where we
    disregard newidle balance and rely on periodic balance for more stable
    results.
    
    Signed-off-by: Valentin Schneider <valentin.schneider@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Dietmar.Eggemann@arm.com
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: patrick.bellasi@arm.com
    Cc: vincent.guittot@linaro.org
    Link: http://lkml.kernel.org/r/1537974727-30788-2-git-send-email-valentin.schneider@arm.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f4e7ca091d480c10a4eaaa72b500c1eee7948c02
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Oct 31 08:39:13 2018 -0700

    net: do not abort bulk send on BQL status
    
    [ Upstream commit fe60faa5063822f2d555f4f326c7dd72a60929bf ]
    
    Before calling dev_hard_start_xmit(), upper layers tried
    to cook optimal skb list based on BQL budget.
    
    Problem is that GSO packets can end up comsuming more than
    the BQL budget.
    
    Breaking the loop is not useful, since requeued packets
    are ahead of any packets still in the qdisc.
    
    It is also more expensive, since next TX completion will
    push these packets later, while skbs are not in cpu caches.
    
    It is also a behavior difference with TSO packets, that can
    break the BQL limit by a large amount.
    
    Note that drivers should use __netdev_tx_sent_queue()
    in order to have optimal xmit_more support, and avoid
    useless atomic operations as shown in the following patch.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcb7267a915d800954e2412f44224a0b458329a8
Author: Larry Chen <lchen@suse.com>
Date:   Fri Nov 2 15:48:27 2018 -0700

    ocfs2: fix clusters leak in ocfs2_defrag_extent()
    
    [ Upstream commit 6194ae4242dec0c9d604bc05df83aa9260a899e4 ]
    
    ocfs2_defrag_extent() might leak allocated clusters.  When the file
    system has insufficient space, the number of claimed clusters might be
    less than the caller wants.  If that happens, the original code might
    directly commit the transaction without returning clusters.
    
    This patch is based on code in ocfs2_add_clusters_in_btree().
    
    [akpm@linux-foundation.org: include localalloc.h, reduce scope of data_ac]
    Link: http://lkml.kernel.org/r/20180904041621.16874-3-lchen@suse.com
    Signed-off-by: Larry Chen <lchen@suse.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Joseph Qi <jiangqi903@gmail.com>
    Cc: Changwei Ge <ge.changwei@h3c.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65cbd1279f4b999d56a838344a30642db24cd215
Author: Changwei Ge <ge.changwei@h3c.com>
Date:   Fri Nov 2 15:48:19 2018 -0700

    ocfs2: don't put and assigning null to bh allocated outside
    
    [ Upstream commit cf76c78595ca87548ca5e45c862ac9e0949c4687 ]
    
    ocfs2_read_blocks() and ocfs2_read_blocks_sync() are both used to read
    several blocks from disk.  Currently, the input argument *bhs* can be
    NULL or NOT.  It depends on the caller's behavior.  If the function
    fails in reading blocks from disk, the corresponding bh will be assigned
    to NULL and put.
    
    Obviously, above process for non-NULL input bh is not appropriate.
    Because the caller doesn't even know its bhs are put and re-assigned.
    
    If buffer head is managed by caller, ocfs2_read_blocks and
    ocfs2_read_blocks_sync() should not evaluate it to NULL.  It will cause
    caller accessing illegal memory, thus crash.
    
    Link: http://lkml.kernel.org/r/HK2PR06MB045285E0F4FBB561F9F2F9B3D5680@HK2PR06MB0452.apcprd06.prod.outlook.com
    Signed-off-by: Changwei Ge <ge.changwei@h3c.com>
    Reviewed-by: Guozhonghua <guozhonghua@h3c.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Joseph Qi <jiangqi903@gmail.com>
    Cc: Changwei Ge <ge.changwei@h3c.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2c50f6fcb26d35cdbe48d42a216101df448c49e
Author: Victor Kamensky <kamensky@cisco.com>
Date:   Tue Oct 30 16:37:10 2018 -0700

    arm64: makefile fix build of .i file in external module case
    
    [ Upstream commit 98356eb0ae499c63e78073ccedd9a5fc5c563288 ]
    
    After 'a66649dab350 arm64: fix vdso-offsets.h dependency' if
    one will try to build .i file in case of external kernel module,
    build fails complaining that prepare0 target is missing. This
    issue came up with SystemTap when it tries to build variety
    of .i files for its own generated kernel modules trying to
    figure given kernel features/capabilities.
    
    The issue is that prepare0 is defined in top level Makefile
    only if KBUILD_EXTMOD is not defined. .i file rule depends
    on prepare and in case KBUILD_EXTMOD defined top level Makefile
    contains empty rule for prepare. But after mentioned commit
    arch/arm64/Makefile would introduce dependency on prepare0
    through its own prepare target.
    
    Fix it to put proper ifdef KBUILD_EXTMOD around code introduced
    by mentioned commit. It matches what top level Makefile does.
    
    Acked-by: Kevin Brodsky <kevin.brodsky@arm.com>
    Signed-off-by: Victor Kamensky <kamensky@cisco.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23c7064d5c2d6b7a7c268b6f4d545ac4e8b4e08e
Author: Dave Jiang <dave.jiang@intel.com>
Date:   Tue Aug 28 17:13:59 2018 -0700

    ntb: intel: fix return value for ndev_vec_mask()
    
    [ Upstream commit 7756e2b5d68c36e170a111dceea22f7365f83256 ]
    
    ndev_vec_mask() should be returning u64 mask value instead of int.
    Otherwise the mask value returned can be incorrect for larger
    vectors.
    
    Fixes: e26a5843f7f5 ("NTB: Split ntb_hw_intel and ntb_transport drivers")
    
    Signed-off-by: Dave Jiang <dave.jiang@intel.com>
    Tested-by: Lucas Van <lucas.van@intel.com>
    Signed-off-by: Jon Mason <jdmason@kudzu.us>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb51638760b1ae06c398385f6fa0015e33d5848b
Author: Jon Mason <jdmason@kudzu.us>
Date:   Mon Jun 11 16:13:12 2018 -0400

    ntb_netdev: fix sleep time mismatch
    
    [ Upstream commit a861594b1b7ffd630f335b351c4e9f938feadb8e ]
    
    The tx_time should be in usecs (according to the comment above the
    variable), but the setting of the timer during the rearming is done in
    msecs.  Change it to match the expected units.
    
    Fixes: e74bfeedad08 ("NTB: Add flow control to the ntb_netdev")
    Suggested-by: Gerd W. Haeussler <gerd.haeussler@cesys-it.com>
    Signed-off-by: Jon Mason <jdmason@kudzu.us>
    Acked-by: Dave Jiang <dave.jiang@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f74ac645ab07f2c728c8b147a891febad01e270
Author: Miroslav Lichvar <mlichvar@redhat.com>
Date:   Fri Oct 12 13:13:39 2018 +0200

    igb: shorten maximum PHC timecounter update interval
    
    [ Upstream commit 094bf4d0e9657f6ea1ee3d7e07ce3970796949ce ]
    
    The timecounter needs to be updated at least once per ~550 seconds in
    order to avoid a 40-bit SYSTIM timestamp to be misinterpreted as an old
    timestamp.
    
    Since commit 500462a9d ("timers: Switch to a non-cascading wheel"),
    scheduling of delayed work seems to be less accurate and a requested
    delay of 540 seconds may actually be longer than 550 seconds. Shorten
    the delay to 480 seconds to be sure the timecounter is updated in time.
    
    This fixes an issue with HW timestamps on 82580/I350/I354 being off by
    ~1100 seconds for few seconds every ~9 minutes.
    
    Cc: Jacob Keller <jacob.e.keller@intel.com>
    Cc: Richard Cochran <richardcochran@gmail.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Miroslav Lichvar <mlichvar@redhat.com>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2e7b55178b11f18ebedc2060cee72c4b3742c41
Author: David Hildenbrand <david@redhat.com>
Date:   Tue Oct 30 15:10:24 2018 -0700

    mm/memory_hotplug: make add_memory() take the device_hotplug_lock
    
    [ Upstream commit 8df1d0e4a265f25dc1e7e7624ccdbcb4a6630c89 ]
    
    add_memory() currently does not take the device_hotplug_lock, however
    is aleady called under the lock from
            arch/powerpc/platforms/pseries/hotplug-memory.c
            drivers/acpi/acpi_memhotplug.c
    to synchronize against CPU hot-remove and similar.
    
    In general, we should hold the device_hotplug_lock when adding memory to
    synchronize against online/offline request (e.g.  from user space) - which
    already resulted in lock inversions due to device_lock() and
    mem_hotplug_lock - see 30467e0b3be ("mm, hotplug: fix concurrent memory
    hot-add deadlock").  add_memory()/add_memory_resource() will create memory
    block devices, so this really feels like the right thing to do.
    
    Holding the device_hotplug_lock makes sure that a memory block device
    can really only be accessed (e.g. via .online/.state) from user space,
    once the memory has been fully added to the system.
    
    The lock is not held yet in
            drivers/xen/balloon.c
            arch/powerpc/platforms/powernv/memtrace.c
            drivers/s390/char/sclp_cmd.c
            drivers/hv/hv_balloon.c
    So, let's either use the locked variants or take the lock.
    
    Don't export add_memory_resource(), as it once was exported to be used by
    XEN, which is never built as a module.  If somebody requires it, we also
    have to export a locked variant (as device_hotplug_lock is never
    exported).
    
    Link: http://lkml.kernel.org/r/20180925091457.28651-3-david@redhat.com
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Pavel Tatashin <pavel.tatashin@microsoft.com>
    Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Rashmica Gupta <rashmica.g@gmail.com>
    Reviewed-by: Oscar Salvador <osalvador@suse.de>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
    Cc: Len Brown <lenb@kernel.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Nathan Fontenot <nfont@linux.vnet.ibm.com>
    Cc: John Allen <jallen@linux.vnet.ibm.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Cc: Mathieu Malaterre <malat@debian.org>
    Cc: Pavel Tatashin <pavel.tatashin@microsoft.com>
    Cc: YASUAKI ISHIMATSU <yasu.isimatu@gmail.com>
    Cc: Balbir Singh <bsingharora@gmail.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: "K. Y. Srinivasan" <kys@microsoft.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Michael Neuling <mikey@neuling.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 218e302c82c130b0860cdca87d74632d9a390511
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Oct 30 15:06:35 2018 -0700

    fs/hfs/extent.c: fix array out of bounds read of array extent
    
    [ Upstream commit 6c9a3f843a29d6894dfc40df338b91dbd78f0ae3 ]
    
    Currently extent and index i are both being incremented causing an array
    out of bounds read on extent[i].  Fix this by removing the extraneous
    increment of extent.
    
    Ernesto said:
    
    : This is only triggered when deleting a file with a resource fork.  I
    : may be wrong because the documentation isn't clear, but I don't think
    : you can create those under linux.  So I guess nobody was testing them.
    :
    : > A disk space leak, perhaps?
    :
    : That's what it looks like in general.  hfs_free_extents() won't do
    : anything if the block count doesn't add up, and the error will be
    : ignored.  Now, if the block count randomly does add up, we could see
    : some corruption.
    
    Detected by CoverityScan, CID#711541 ("Out of bounds read")
    
    Link: http://lkml.kernel.org/r/20180831140538.31566-1-colin.king@canonical.com
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Ernesto A. Fernndez <ernesto.mnd.fernandez@gmail.com>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Hin-Tak Leung <htl10@users.sourceforge.net>
    Cc: Vyacheslav Dubeyko <slava@dubeyko.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79fb2b86db4551097e4a004d623b04cc1aaac1cf
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Tue Oct 30 15:06:31 2018 -0700

    hfs: update timestamp on truncate()
    
    [ Upstream commit 8cd3cb5061730af085a3f9890a3352f162b4e20c ]
    
    The vfs takes care of updating mtime on ftruncate(), but on truncate() it
    must be done by the module.
    
    Link: http://lkml.kernel.org/r/e1611eda2985b672ed2d8677350b4ad8c2d07e8a.1539316825.git.ernesto.mnd.fernandez@gmail.com
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Reviewed-by: Vyacheslav Dubeyko <slava@dubeyko.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 304d969f63ef401c46699d7d0851c4e5441676ba
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Tue Oct 30 15:06:27 2018 -0700

    hfsplus: update timestamps on truncate()
    
    [ Upstream commit dc8844aada735890a6de109bef327f5df36a982e ]
    
    The vfs takes care of updating ctime and mtime on ftruncate(), but on
    truncate() it must be done by the module.
    
    This patch can be tested with xfstests generic/313.
    
    Link: http://lkml.kernel.org/r/9beb0913eea37288599e8e1b7cec8768fb52d1b8.1539316825.git.ernesto.mnd.fernandez@gmail.com
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Reviewed-by: Vyacheslav Dubeyko <slava@dubeyko.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d78a7b5150f357653012f866caaf8dcb585f5a3b
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Tue Oct 30 15:06:24 2018 -0700

    hfs: fix return value of hfs_get_block()
    
    [ Upstream commit 1267a07be5ebbff2d2739290f3d043ae137c15b4 ]
    
    Direct writes to empty inodes fail with EIO.  The generic direct-io code
    is in part to blame (a patch has been submitted as "direct-io: allow
    direct writes to empty inodes"), but hfs is worse affected than the other
    filesystems because the fallback to buffered I/O doesn't happen.
    
    The problem is the return value of hfs_get_block() when called with
    !create.  Change it to be more consistent with the other modules.
    
    Link: http://lkml.kernel.org/r/4538ab8c35ea37338490525f0f24cbc37227528c.1539195310.git.ernesto.mnd.fernandez@gmail.com
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Reviewed-by: Vyacheslav Dubeyko <slava@dubeyko.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit face88eea3290256448679ce7de4e268ae6c7336
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Tue Oct 30 15:06:21 2018 -0700

    hfsplus: fix return value of hfsplus_get_block()
    
    [ Upstream commit 839c3a6a5e1fbc8542d581911b35b2cb5cd29304 ]
    
    Direct writes to empty inodes fail with EIO.  The generic direct-io code
    is in part to blame (a patch has been submitted as "direct-io: allow
    direct writes to empty inodes"), but hfsplus is worse affected than the
    other filesystems because the fallback to buffered I/O doesn't happen.
    
    The problem is the return value of hfsplus_get_block() when called with
    !create.  Change it to be more consistent with the other modules.
    
    Link: http://lkml.kernel.org/r/2cd1301404ec7cf1e39c8f11a01a4302f1460ad6.1539195310.git.ernesto.mnd.fernandez@gmail.com
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Reviewed-by: Vyacheslav Dubeyko <slava@dubeyko.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bae19f949b7536719114db76abe916e2cf0da368
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Tue Oct 30 15:06:17 2018 -0700

    hfs: prevent btree data loss on ENOSPC
    
    [ Upstream commit 54640c7502e5ed41fbf4eedd499e85f9acc9698f ]
    
    Inserting a new record in a btree may require splitting several of its
    nodes.  If we hit ENOSPC halfway through, the new nodes will be left
    orphaned and their records will be lost.  This could mean lost inodes or
    extents.
    
    Henceforth, check the available disk space before making any changes.
    This still leaves the potential problem of corruption on ENOMEM.
    
    There is no need to reserve space before deleting a catalog record, as we
    do for hfsplus.  This difference is because hfs index nodes have fixed
    length keys.
    
    Link: http://lkml.kernel.org/r/ab5fc8a7d5ffccfd5f27b1cf2cb4ceb6c110da74.1536269131.git.ernesto.mnd.fernandez@gmail.com
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 376270e9ba9c6fbe51a8c9fb6f40ff97aeca3694
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Tue Oct 30 15:06:14 2018 -0700

    hfsplus: prevent btree data loss on ENOSPC
    
    [ Upstream commit d92915c35bfaf763d78bf1d5ac7f183420e3bd99 ]
    
    Inserting or deleting a record in a btree may require splitting several of
    its nodes.  If we hit ENOSPC halfway through, the new nodes will be left
    orphaned and their records will be lost.  This could mean lost inodes,
    extents or xattrs.
    
    Henceforth, check the available disk space before making any changes.
    This still leaves the potential problem of corruption on ENOMEM.
    
    The patch can be tested with xfstests generic/027.
    
    Link: http://lkml.kernel.org/r/4596eef22fbda137b4ffa0272d92f0da15364421.1536269129.git.ernesto.mnd.fernandez@gmail.com
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09bb00088823c1faf2dc33c076052dd53321f5ff
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Tue Oct 30 15:06:11 2018 -0700

    hfs: fix BUG on bnode parent update
    
    [ Upstream commit ef75bcc5763d130451a99825f247d301088b790b ]
    
    hfs_brec_update_parent() may hit BUG_ON() if the first record of both a
    leaf node and its parent are changed, and if this forces the parent to
    be split.  It is not possible for this to happen on a valid hfs
    filesystem because the index nodes have fixed length keys.
    
    For reasons I ignore, the hfs module does have support for a number of
    hfsplus features.  A corrupt btree header may report variable length
    keys and trigger this BUG, so it's better to fix it.
    
    Link: http://lkml.kernel.org/r/cf9b02d57f806217a2b1bf5db8c3e39730d8f603.1535682463.git.ernesto.mnd.fernandez@gmail.com
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Christoph Hellwig <hch@infradead.org>
    Cc: Viacheslav Dubeyko <slava@dubeyko.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c7ff86f2604996df5d5a42fb2dc481e8de3f05a
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Tue Oct 30 15:06:04 2018 -0700

    hfsplus: fix BUG on bnode parent update
    
    [ Upstream commit 19a9d0f1acf75e8be8cfba19c1a34e941846fa2b ]
    
    Creating, renaming or deleting a file may hit BUG_ON() if the first
    record of both a leaf node and its parent are changed, and if this
    forces the parent to be split.  This bug is triggered by xfstests
    generic/027, somewhat rarely; here is a more reliable reproducer:
    
      truncate -s 50M fs.iso
      mkfs.hfsplus fs.iso
      mount fs.iso /mnt
      i=1000
      while [ $i -le 2400 ]; do
        touch /mnt/$i &>/dev/null
        ((++i))
      done
      i=2400
      while [ $i -ge 1000 ]; do
        mv /mnt/$i /mnt/$(perl -e "print $i x61") &>/dev/null
        ((--i))
      done
    
    The issue is that a newly created bnode is being put twice.  Reset
    new_node to NULL in hfs_brec_update_parent() before reaching goto again.
    
    Link: http://lkml.kernel.org/r/5ee1db09b60373a15890f6a7c835d00e76bf601d.1535682461.git.ernesto.mnd.fernandez@gmail.com
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Cc: Christoph Hellwig <hch@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b74d722d60354bf8a34bef72d8aa2eef40a75ddf
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Tue Oct 30 15:05:07 2018 -0700

    linux/bitmap.h: fix type of nbits in bitmap_shift_right()
    
    [ Upstream commit d9873969fa8725dc6a5a21ab788c057fd8719751 ]
    
    Most other bitmap API, including the OOL version __bitmap_shift_right,
    take unsigned nbits.  This was accidentally left out from 2fbad29917c98.
    
    Link: http://lkml.kernel.org/r/20180818131623.8755-5-linux@rasmusvillemoes.dk
    Fixes: 2fbad29917c98 ("lib: bitmap: change bitmap_shift_right to take unsigned parameters")
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Reported-by: Yury Norov <ynorov@caviumnetworks.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 835c18375a16d0cb8bc56576821d23f8e66dab73
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Tue Oct 30 15:04:59 2018 -0700

    linux/bitmap.h: handle constant zero-size bitmaps correctly
    
    [ Upstream commit 7275b097851a5e2e0dd4da039c7e96b59ac5314e ]
    
    The static inlines in bitmap.h do not handle a compile-time constant
    nbits==0 correctly (they dereference the passed src or dst pointers,
    despite only 0 words being valid to access).  I had the 0-day buildbot
    chew on a patch [1] that would cause build failures for such cases without
    complaining, suggesting that we don't have any such users currently, at
    least for the 70 .config/arch combinations that was built.  Should any
    turn up, make sure they use the out-of-line versions, which do handle
    nbits==0 correctly.
    
    This is of course not the most efficient, but it's much less churn than
    teaching all the static inlines an "if (zero_const_nbits())", and since we
    don't have any current instances, this doesn't affect existing code at
    all.
    
    [1] lkml.kernel.org/r/20180815085539.27485-1-linux@rasmusvillemoes.dk
    
    Link: http://lkml.kernel.org/r/20180818131623.8755-3-linux@rasmusvillemoes.dk
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Cc: Yury Norov <ynorov@caviumnetworks.com>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7b08f9aa88676b92ef7620be5f42fff0bbc612d
Author: Anton Ivanov <anton.ivanov@cambridgegreys.com>
Date:   Tue Sep 25 08:47:13 2018 +0100

    um: Make line/tty semantics use true write IRQ
    
    [ Upstream commit 917e2fd2c53eb3c4162f5397555cbd394390d4bc ]
    
    This fixes a long standing bug where large amounts of output
    could freeze the tty (most commonly seen on stdio console).
    While the bug has always been there it became more pronounced
    after moving to the new interrupt controller.
    
    The line semantics are now changed to have true IRQ write
    semantics which should further improve the tty/line subsystem
    stability and performance
    
    Signed-off-by: Anton Ivanov <anton.ivanov@cambridgegreys.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ea2b783ced19f284f74a6cbe7b858125be6f9875
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Sun Oct 28 09:33:10 2018 +0100

    macsec: let the administrator set UP state even if lowerdev is down
    
    [ Upstream commit 07bddef9839378bd6f95b393cf24c420529b4ef1 ]
    
    Currently, the kernel doesn't let the administrator set a macsec device
    up unless its lower device is currently up. This is inconsistent, as a
    macsec device that is up won't automatically go down when its lower
    device goes down.
    
    Now that linkstate propagation works, there's really no reason for this
    limitation, so let's remove it.
    
    Fixes: c09440f7dcb3 ("macsec: introduce IEEE 802.1AE driver")
    Reported-by: Radu Rendec <radu.rendec@gmail.com>
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8f70a4d8adc93c1b15a8116caf3efaf5205d5446
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Sun Oct 28 09:33:09 2018 +0100

    macsec: update operstate when lower device changes
    
    [ Upstream commit e6ac075882b2afcdf2d5ab328ce4ab42a1eb9593 ]
    
    Like all other virtual devices (macvlan, vlan), the operstate of a
    macsec device should match the state of its lower device. This is done
    by calling netif_stacked_transfer_operstate from its netdevice notifier.
    
    We also need to call netif_stacked_transfer_operstate when a new macsec
    device is created, so that its operstate is set properly. This is only
    relevant when we try to bring the device up directly when we create it.
    
    Radu Rendec proposed a similar patch, inspired from the 802.1q driver,
    that included changing the administrative state of the macsec device,
    instead of just the operstate. This version is similar to what the
    macvlan driver does, and updates only the operstate.
    
    Fixes: c09440f7dcb3 ("macsec: introduce IEEE 802.1AE driver")
    Reported-by: Radu Rendec <radu.rendec@gmail.com>
    Reported-by: Patrick Talbert <ptalbert@redhat.com>
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a7b0a5833c6a9d3d0beeeed57e3acf478e1ed63
Author: Dave Chinner <dchinner@redhat.com>
Date:   Fri Oct 26 15:09:45 2018 -0700

    mm/page-writeback.c: fix range_cyclic writeback vs writepages deadlock
    
    [ Upstream commit 64081362e8ff4587b4554087f3cfc73d3e0a4cd7 ]
    
    We've recently seen a workload on XFS filesystems with a repeatable
    deadlock between background writeback and a multi-process application
    doing concurrent writes and fsyncs to a small range of a file.
    
    range_cyclic
    writeback               Process 1               Process 2
    
    xfs_vm_writepages
      write_cache_pages
        writeback_index = 2
        cycled = 0
        ....
        find page 2 dirty
        lock Page 2
        ->writepage
          page 2 writeback
          page 2 clean
          page 2 added to bio
        no more pages
                            write()
                            locks page 1
                            dirties page 1
                            locks page 2
                            dirties page 1
                            fsync()
                            ....
                            xfs_vm_writepages
                            write_cache_pages
                              start index 0
                              find page 1 towrite
                              lock Page 1
                              ->writepage
                                page 1 writeback
                                page 1 clean
                                page 1 added to bio
                              find page 2 towrite
                              lock Page 2
                              page 2 is writeback
                              <blocks>
                                                    write()
                                                    locks page 1
                                                    dirties page 1
                                                    fsync()
                                                    ....
                                                    xfs_vm_writepages
                                                    write_cache_pages
                                                      start index 0
    
        !done && !cycled
          sets index to 0, restarts lookup
        find page 1 dirty
                                                      find page 1 towrite
                                                      lock Page 1
                                                      page 1 is writeback
                                                      <blocks>
    
        lock Page 1
        <blocks>
    
    DEADLOCK because:
    
            - process 1 needs page 2 writeback to complete to make
              enough progress to issue IO pending for page 1
            - writeback needs page 1 writeback to complete so process 2
              can progress and unlock the page it is blocked on, then it
              can issue the IO pending for page 2
            - process 2 can't make progress until process 1 issues IO
              for page 1
    
    The underlying cause of the problem here is that range_cyclic writeback is
    processing pages in descending index order as we hold higher index pages
    in a structure controlled from above write_cache_pages().  The
    write_cache_pages() caller needs to be able to submit these pages for IO
    before write_cache_pages restarts writeback at mapping index 0 to avoid
    wcp inverting the page lock/writeback wait order.
    
    generic_writepages() is not susceptible to this bug as it has no private
    context held across write_cache_pages() - filesystems using this
    infrastructure always submit pages in ->writepage immediately and so there
    is no problem with range_cyclic going back to mapping index 0.
    
    However:
            mpage_writepages() has a private bio context,
            exofs_writepages() has page_collect
            fuse_writepages() has fuse_fill_wb_data
            nfs_writepages() has nfs_pageio_descriptor
            xfs_vm_writepages() has xfs_writepage_ctx
    
    All of these ->writepages implementations can hold pages under writeback
    in their private structures until write_cache_pages() returns, and hence
    they are all susceptible to this deadlock.
    
    Also worth noting is that ext4 has it's own bastardised version of
    write_cache_pages() and so it /may/ have an equivalent deadlock.  I looked
    at the code long enough to understand that it has a similar retry loop for
    range_cyclic writeback reaching the end of the file and then promptly ran
    away before my eyes bled too much.  I'll leave it for the ext4 developers
    to determine if their code is actually has this deadlock and how to fix it
    if it has.
    
    There's a few ways I can see avoid this deadlock.  There's probably more,
    but these are the first I've though of:
    
    1. get rid of range_cyclic altogether
    
    2. range_cyclic always stops at EOF, and we start again from
    writeback index 0 on the next call into write_cache_pages()
    
    2a. wcp also returns EAGAIN to ->writepages implementations to
    indicate range cyclic has hit EOF. writepages implementations can
    then flush the current context and call wpc again to continue. i.e.
    lift the retry into the ->writepages implementation
    
    3. range_cyclic uses trylock_page() rather than lock_page(), and it
    skips pages it can't lock without blocking. It will already do this
    for pages under writeback, so this seems like a no-brainer
    
    3a. all non-WB_SYNC_ALL writeback uses trylock_page() to avoid
    blocking as per pages under writeback.
    
    I don't think #1 is an option - range_cyclic prevents frequently
    dirtied lower file offset from starving background writeback of
    rarely touched higher file offsets.
    
    #2 is simple, and I don't think it will have any impact on
    performance as going back to the start of the file implies an
    immediate seek. We'll have exactly the same number of seeks if we
    switch writeback to another inode, and then come back to this one
    later and restart from index 0.
    
    #2a is pretty much "status quo without the deadlock". Moving the
    retry loop up into the wcp caller means we can issue IO on the
    pending pages before calling wcp again, and so avoid locking or
    waiting on pages in the wrong order. I'm not convinced we need to do
    this given that we get the same thing from #2 on the next writeback
    call from the writeback infrastructure.
    
    #3 is really just a band-aid - it doesn't fix the access/wait
    inversion problem, just prevents it from becoming a deadlock
    situation. I'd prefer we fix the inversion, not sweep it under the
    carpet like this.
    
    #3a is really an optimisation that just so happens to include the
    band-aid fix of #3.
    
    So it seems that the simplest way to fix this issue is to implement
    solution #2
    
    Link: http://lkml.kernel.org/r/20181005054526.21507-1-david@fromorbit.com
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Jan Kara <jack@suse.de>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 345e0e270234d6eda34837bd6a93b95b8d8846cc
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Fri Oct 26 15:02:52 2018 -0700

    fs/ocfs2/dlm/dlmdebug.c: fix a sleep-in-atomic-context bug in dlm_print_one_mle()
    
    [ Upstream commit 999865764f5f128896402572b439269acb471022 ]
    
    The kernel module may sleep with holding a spinlock.
    
    The function call paths (from bottom to top) in Linux-4.16 are:
    
    [FUNC] get_zeroed_page(GFP_NOFS)
    fs/ocfs2/dlm/dlmdebug.c, 332: get_zeroed_page in dlm_print_one_mle
    fs/ocfs2/dlm/dlmmaster.c, 240: dlm_print_one_mle in __dlm_put_mle
    fs/ocfs2/dlm/dlmmaster.c, 255: __dlm_put_mle in dlm_put_mle
    fs/ocfs2/dlm/dlmmaster.c, 254: spin_lock in dlm_put_ml
    
    [FUNC] get_zeroed_page(GFP_NOFS)
    fs/ocfs2/dlm/dlmdebug.c, 332: get_zeroed_page in dlm_print_one_mle
    fs/ocfs2/dlm/dlmmaster.c, 240: dlm_print_one_mle in __dlm_put_mle
    fs/ocfs2/dlm/dlmmaster.c, 222: __dlm_put_mle in dlm_put_mle_inuse
    fs/ocfs2/dlm/dlmmaster.c, 219: spin_lock in dlm_put_mle_inuse
    
    To fix this bug, GFP_NOFS is replaced with GFP_ATOMIC.
    
    This bug is found by my static analysis tool DSAC.
    
    Link: http://lkml.kernel.org/r/20180901112528.27025-1-baijiaju1990@gmail.com
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Joseph Qi <jiangqi903@gmail.com>
    Cc: Changwei Ge <ge.changwei@h3c.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c7552dee56013e3b1bb2827d730b415607716da
Author: David S. Miller <davem@davemloft.net>
Date:   Fri Oct 26 15:39:49 2018 -0700

    sparc64: Rework xchg() definition to avoid warnings.
    
    [ Upstream commit 6c2fc9cddc1ffdef8ada1dc8404e5affae849953 ]
    
    Such as:
    
    fs/ocfs2/file.c: In function ‘ocfs2_file_write_iter’:
    ./arch/sparc/include/asm/cmpxchg_64.h:55:22: warning: value computed is not used [-Wunused-value]
     #define xchg(ptr,x) ((__typeof__(*(ptr)))__xchg((unsigned long)(x),(ptr),sizeof(*(ptr))))
    
    and
    
    drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c: In function ‘ixgbevf_xdp_setup’:
    ./arch/sparc/include/asm/cmpxchg_64.h:55:22: warning: value computed is not used [-Wunused-value]
     #define xchg(ptr,x) ((__typeof__(*(ptr)))__xchg((unsigned long)(x),(ptr),sizeof(*(ptr))))
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6cb971b83d6e6b48c150b5063e251664b23e6f9e
Author: Felipe Rechia <felipe.rechia@datacom.com.br>
Date:   Wed Oct 24 10:57:22 2018 -0300

    powerpc/process: Fix flush_all_to_thread for SPE
    
    [ Upstream commit e901378578c62202594cba0f6c076f3df365ec91 ]
    
    Fix a bug introduced by the creation of flush_all_to_thread() for
    processors that have SPE (Signal Processing Engine) and use it to
    compute floating-point operations.
    
    >From userspace perspective, the problem was seen in attempts of
    computing floating-point operations which should generate exceptions.
    For example:
    
      fork();
      float x = 0.0 / 0.0;
      isnan(x);           // forked process returns False (should be True)
    
    The operation above also should always cause the SPEFSCR FINV bit to
    be set. However, the SPE floating-point exceptions were turned off
    after a fork().
    
    Kernel versions prior to the bug used flush_spe_to_thread(), which
    first saves SPEFSCR register values in tsk->thread and then calls
    giveup_spe(tsk).
    
    After commit 579e633e764e, the save_all() function was called first
    to giveup_spe(), and then the SPEFSCR register values were saved in
    tsk->thread. This would save the SPEFSCR register values after
    disabling SPE for that thread, causing the bug described above.
    
    Fixes 579e633e764e ("powerpc: create flush_all_to_thread()")
    Signed-off-by: Felipe Rechia <felipe.rechia@datacom.com.br>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 00192e5ead67e3a350a1eca10dfedf7c1bcc6b16
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Fri Oct 12 09:20:15 2018 +0200

    thermal: rcar_thermal: Prevent hardware access during system suspend
    
    [ Upstream commit 3a31386217628ffe2491695be2db933c25dde785 ]
    
    On r8a7791/koelsch, sometimes the following message is printed during
    system suspend:
    
        rcar_thermal e61f0000.thermal: thermal sensor was broken
    
    This happens if the workqueue runs while the device is already
    suspended.  Fix this by using the freezable system workqueue instead,
    cfr. commit 51e20d0e3a60cf46 ("thermal: Prevent polling from happening
    during system suspend").
    
    Fixes: e0a5172e9eec7f0d ("thermal: rcar: add interrupt support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: Eduardo Valentin <edubezval@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28d4020576ee457394550ce20c61c6fe42c9c170
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu Aug 30 23:16:13 2018 +0900

    selftests/ftrace: Fix to test kprobe $comm arg only if available
    
    [ Upstream commit 2452c96e617a0ff6fb2692e55217a3fa57a7322c ]
    
    Test $comm in kprobe-event argument syntax testcase
    only if it is supported on the kernel because
    $comm has been introduced 4.8 kernel.
    So on older stable kernel, it should be skipped.
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9499c51f7ab1bffdb8e309d69484f3fe8caf0e0b
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Wed Sep 5 13:54:07 2018 +0200

    mfd: max8997: Enale irq-wakeup unconditionally
    
    [ Upstream commit efddff27c886e729a7f84a7205bd84d7d4af7336 ]
    
    IRQ wake up support for MAX8997 driver was initially configured by
    respective property in pdata. However, after the driver conversion to
    device-tree, setting it was left as 'todo'. Nowadays most of other PMIC MFD
    drivers initialized from device-tree assume that they can be an irq wakeup
    source, so enable it also for MAX8997. This fixes support for wakeup from
    MAX8997 RTC alarm.
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Reviewed-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37dcea4d102f323d40dc81ee915f2c017565d217
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Tue Aug 28 17:02:40 2018 -0300

    mfd: mc13xxx-core: Fix PMIC shutdown when reading ADC values
    
    [ Upstream commit 55143439b7b501882bea9d95a54adfe00ffc79a3 ]
    
    When trying to read any MC13892 ADC channel on a imx51-babbage board:
    
    The MC13892 PMIC shutdowns completely.
    
    After debugging this issue and comparing the MC13892 and MC13783
    initializations done in the vendor kernel, it was noticed that the
    CHRGRAWDIV bit of the ADC0 register was not being set.
    
    This bit is set by default after power on, but the driver was
    clearing it.
    
    After setting this bit it is possible to read the ADC values correctly.
    
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Tested-by: Chris Healy <cphealy@gmail.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0a45a2ef6121adcc5624b034898c518e7f813f2
Author: Sapthagiri Baratam <sapthagiri.baratam@cirrus.com>
Date:   Tue Aug 21 19:52:44 2018 +0530

    mfd: arizona: Correct calling of runtime_put_sync
    
    [ Upstream commit 6b269a41a4520f7eb639e61a45ebbb9c9267d5e0 ]
    
    Don't call runtime_put_sync when clk32k_ref is ARIZONA_32KZ_MCLK2
    as there is no corresponding runtime_get_sync call.
    
    MCLK1 is not in the AoD power domain so if it is used as 32kHz clock
    source we need to hold a runtime PM reference to keep the device from
    going into low power mode.
    
    Fixes: cdd8da8cc66b ("mfd: arizona: Add gating of external MCLKn clocks")
    Signed-off-by: Sapthagiri Baratam <sapthagiri.baratam@cirrus.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5678fcf43f097f2f1735b327cca9c5d7f557076c
Author: Ivan Khoronzhuk <ivan.khoronzhuk@linaro.org>
Date:   Mon Oct 22 21:51:36 2018 +0300

    net: ethernet: ti: cpsw: unsync mcast entries while switch promisc mode
    
    [ Upstream commit 9737cc99dd14b5b8b9d267618a6061feade8ea68 ]
    
    After flushing all mcast entries from the table, the ones contained in
    mc list of ndev are not restored when promisc mode is toggled off,
    because they are considered as synched with ALE, thus, in order to
    restore them after promisc mode - reset syncing info. This fix
    touches only switch mode devices, including single port boards
    like Beagle Bone.
    
    Fixes: commit 5da1948969bc
    ("net: ethernet: ti: cpsw: fix lost of mcast packets while rx_mode update")
    
    Signed-off-by: Ivan Khoronzhuk <ivan.khoronzhuk@linaro.org>
    Reviewed-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5817a818d24ccaaf56d52594c74543c268beabfb
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Oct 19 23:11:11 2018 +0300

    qlcnic: fix a return in qlcnic_dcb_get_capability()
    
    [ Upstream commit c94f026fb742b2d3199422751dbc4f6fc0e753d8 ]
    
    These functions are supposed to return one on failure and zero on
    success.  Returning a zero here could cause uninitialized variable
    bugs in several of the callers.  For example:
    
        drivers/scsi/cxgbi/cxgb4i/cxgb4i.c:1660 get_iscsi_dcb_priority()
        error: uninitialized symbol 'caps'.
    
    Fixes: 48365e485275 ("qlcnic: dcb: Add support for CEE Netlink interface.")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 31e532651dd36958c48e62c728403df4c61380aa
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Fri Oct 19 11:00:30 2018 -0700

    mISDN: Fix type of switch control variable in ctrl_teimanager
    
    [ Upstream commit aeb5e02aca91522733eb1db595ac607d30c87767 ]
    
    Clang warns (trimmed for brevity):
    
    drivers/isdn/mISDN/tei.c:1193:7: warning: overflow converting case value
    to switch condition type (2147764552 to 18446744071562348872) [-Wswitch]
            case IMHOLD_L1:
                 ^
    drivers/isdn/mISDN/tei.c:1187:7: warning: overflow converting case value
    to switch condition type (2147764550 to 18446744071562348870) [-Wswitch]
            case IMCLEAR_L2:
                 ^
    2 warnings generated.
    
    The root cause is that the _IOC macro can generate really large numbers,
    which don't find into type int. My research into how GCC and Clang are
    handling this at a low level didn't prove fruitful and surveying the
    kernel tree shows that aside from here and a few places in the scsi
    subsystem, everything that uses _IOC is at least of type 'unsigned int'.
    Make that change here because as nothing in this function cares about
    the signedness of the variable and it removes ambiguity, which is never
    good when dealing with compilers.
    
    While we're here, remove the unnecessary local variable ret (just return
    -EINVAL and 0 directly).
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/67
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02fe0b21739cf99c0b4fa0b71618bf7fa02a6bf4
Author: Chao Yu <chao@kernel.org>
Date:   Fri Jul 27 18:15:16 2018 +0800

    f2fs: fix to spread clear_cold_data()
    
    [ Upstream commit 2baf07818549c8bb8d7b3437e889b86eab56d38e ]
    
    We need to drop PG_checked flag on page as well when we clear PG_uptodate
    flag, in order to avoid treating the page as GCing one later.
    
    Signed-off-by: Weichao Guo <guoweichao@huawei.com>
    Signed-off-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da8d6eac99ca3934efe1711dd445102cf057f12d
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Fri Oct 19 13:43:45 2018 -0700

    rtc: s35390a: Change buf's type to u8 in s35390a_init
    
    [ Upstream commit ef0f02fd69a02b50e468a4ddbe33e3d81671e248 ]
    
    Clang warns:
    
    drivers/rtc/rtc-s35390a.c:124:27: warning: implicit conversion from
    'int' to 'char' changes value from 192 to -64 [-Wconstant-conversion]
            buf = S35390A_FLAG_RESET | S35390A_FLAG_24H;
                ~ ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
    1 warning generated.
    
    Update buf to be an unsigned 8-bit integer, which matches the buf member
    in struct i2c_msg.
    
    https://github.com/ClangBuiltLinux/linux/issues/145
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf53e726173e9ff3f44057f684a427f1d3c100ac
Author: Yan, Zheng <zyan@redhat.com>
Date:   Fri Sep 28 09:10:29 2018 +0800

    ceph: fix dentry leak in ceph_readdir_prepopulate
    
    [ Upstream commit c58f450bd61511d897efc2ea472c69630635b557 ]
    
    Signed-off-by: "Yan, Zheng" <zyan@redhat.com>
    Reviewed-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7bcd7dbc811a9292e83a6ef1f238c31b6105fd5
Author: David S. Miller <davem@davemloft.net>
Date:   Fri Oct 19 10:52:52 2018 -0700

    sparc: Fix parport build warnings.
    
    [ Upstream commit 46b8306480fb424abd525acc1763da1c63a27d8a ]
    
    If PARPORT_PC_FIFO is not enabled, do not provide the dma lock
    macros and lock definition.  Otherwise:
    
    ./arch/sparc/include/asm/parport.h:24:24: warning: ‘dma_spin_lock’ defined but not used [-Wunused-variable]
     static DEFINE_SPINLOCK(dma_spin_lock);
                            ^~~~~~~~~~~~~
    ./include/linux/spinlock_types.h:81:39: note: in definition of macro ‘DEFINE_SPINLOCK’
     #define DEFINE_SPINLOCK(x) spinlock_t x = __SPIN_LOCK_UNLOCKED(x)
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 930d531e7caa875158096c9a9847f7865b17c513
Author: Vignesh R <vigneshr@ti.com>
Date:   Mon Oct 15 12:08:28 2018 +0530

    spi: omap2-mcspi: Set FIFO DMA trigger level to word length
    
    [ Upstream commit b682cffa3ac6d9d9e16e9b413c45caee3b391fab ]
    
    McSPI has 32 byte FIFO in Transmit-Receive mode. Current code tries to
    configuration FIFO watermark level for DMA trigger to be GCD of transfer
    length and max FIFO size which would mean trigger level may be set to 32
    for transmit-receive mode if length is aligned. This does not work in
    case of SPI slave mode where FIFO always needs to have data ready
    whenever master starts the clock. With DMA trigger size of 32 there will
    be a small window during slave TX where DMA is still putting data into
    FIFO but master would have started clock for next byte, resulting in
    shifting out of stale data. Similarly, on Slave RX side there may be RX
    FIFO overflow
    Fix this by setting FIFO watermark for DMA trigger to word
    length. This means DMA is triggered as soon as FIFO has space for word
    length bytes and DMA would make sure FIFO is almost always full
    therefore improving FIFO occupancy in both master and slave mode.
    
    Signed-off-by: Vignesh R <vigneshr@ti.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 014787bb261f41f83d3111124a0d55883e60095f
Author: Thomas Richter <tmricht@linux.ibm.com>
Date:   Mon Oct 15 14:39:29 2018 +0100

    s390/perf: Return error when debug_register fails
    
    [ Upstream commit ec0c0bb489727de0d4dca6a00be6970ab8a3b30a ]
    
    Return an error when the function debug_register() fails allocating
    the debug handle.
    Also remove the registered debug handle when the initialization fails
    later on.
    
    Signed-off-by: Thomas Richter <tmricht@linux.ibm.com>
    Reviewed-by: Hendrik Brueckner <brueckner@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d10957150d6c852af547ab46ce85e25e6c0f2f3
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Oct 17 11:04:19 2018 -0700

    atm: zatm: Fix empty body Clang warnings
    
    [ Upstream commit 64b9d16e2d02ca6e5dc8fcd30cfd52b0ecaaa8f4 ]
    
    Clang warns:
    
    drivers/atm/zatm.c:513:7: error: while loop has empty body
    [-Werror,-Wempty-body]
            zwait;
                 ^
    drivers/atm/zatm.c:513:7: note: put the semicolon on a separate line to
    silence this warning
    
    Get rid of this warning by using an empty do-while loop. While we're at
    it, add parentheses to make it clear that this is a function-like macro.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/42
    Suggested-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7fc96a3f4366db9b12ee67e7d951352073835382
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Thu Oct 18 15:27:02 2018 -0400

    sunrpc: safely reallow resvport min/max inversion
    
    [ Upstream commit 826799e66e8683e5698e140bb9ef69afc8c0014e ]
    
    Commits ffb6ca33b04b and e08ea3a96fc7 prevent setting xprt_min_resvport
    greater than xprt_max_resvport, but may also break simple code that sets
    one parameter then the other, if the new range does not overlap the old.
    
    Also it looks racy to me, unless there's some serialization I'm not
    seeing.  Granted it would probably require malicious privileged processes
    (unless there's a chance these might eventually be settable in unprivileged
    containers), but still it seems better not to let userspace panic the
    kernel.
    
    Simpler seems to be to allow setting the parameters to whatever you want
    but interpret xprt_min_resvport > xprt_max_resvport as the empty range.
    
    Fixes: ffb6ca33b04b "sunrpc: Prevent resvport min/max inversion..."
    Fixes: e08ea3a96fc7 "sunrpc: Prevent rexvport min/max inversion..."
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79f22dda605dcc371437c9163708fc5d3432c37d
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Thu Oct 18 17:03:56 2018 -0400

    SUNRPC: Fix a compile warning for cmpxchg64()
    
    [ Upstream commit e732f4485a150492b286f3efc06f9b34dd6b9995 ]
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c993c260178e59ddd11fc7f6cb09525b002879ef
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Oct 16 19:03:43 2018 +0100

    usbip: tools: fix atoi() on non-null terminated string
    
    [ Upstream commit e325808c0051b16729ffd472ff887c6cae5c6317 ]
    
    Currently the call to atoi is being passed a single char string
    that is not null terminated, so there is a potential read overrun
    along the stack when parsing for an integer value.  Fix this by
    instead using a 2 char string that is initialized to all zeros
    to ensure that a 1 char read into the string is always terminated
    with a \0.
    
    Detected by cppcheck:
    "Invalid atoi() argument nr 1. A nul-terminated string is required."
    
    Fixes: 3391ba0e2792 ("usbip: tools: Extract generic code to be shared with vudc backend")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a2784901a5bb8211221e3079bb37a94f330591c7
Author: Mattias Jacobsson <2pi@mok.nu>
Date:   Tue Oct 16 14:20:08 2018 +0200

    USB: misc: appledisplay: fix backlight update_status return code
    
    [ Upstream commit 090158555ff8d194a98616034100b16697dd80d0 ]
    
    Upon success the update_status handler returns a positive number
    corresponding to the number of bytes transferred by usb_control_msg.
    However the return code of the update_status handler should indicate if
    an error occurred(negative) or how many bytes of the user's input to sysfs
    that was consumed. Return code zero indicates all bytes were consumed.
    
    The bug can for example result in the update_status handler being called
    twice, the second time with only the "unconsumed" part of the user's input
    to sysfs. Effectively setting an incorrect brightness.
    
    Change the update_status handler to return zero for all successful
    transactions and forward usb_control_msg's error code upon failure.
    
    Signed-off-by: Mattias Jacobsson <2pi@mok.nu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit efb9d52ac7b8d24eb77d940b4ee3ad63e84619cf
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Mon Oct 15 11:18:49 2018 +1100

    macintosh/windfarm_smu_sat: Fix debug output
    
    [ Upstream commit fc0c8b36d379a046525eacb9c3323ca635283757 ]
    
    There's some antiquated debug output that's trying
    to do a hand-made hexdump and turning into horrible
    1-byte-per-line output these days.
    
    Use print_hex_dump() instead
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dfd1e70b0322df10a350d91a56e98d4dc351751f
Author: Philipp Klocke <philipp97kl@gmail.com>
Date:   Thu Oct 18 12:33:02 2018 +0200

    ALSA: i2c/cs8427: Fix int to char conversion
    
    [ Upstream commit eb7ebfa3c1989aa8e59d5e68ab3cddd7df1bfb27 ]
    
    Compiling with clang yields the following warning:
    
    sound/i2c/cs8427.c:140:31: warning: implicit conversion from 'int'
    to 'char' changes value from 160 to -96 [-Wconstant-conversion]
        data[0] = CS8427_REG_AUTOINC | CS8427_REG_CORU_DATABUF;
                ~ ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
    
    Because CS8427_REG_AUTOINC is defined as 128, it is too big for a
    char field.
    So change data from char to unsigned char, that it can hold the value.
    
    This patch does not change the generated code.
    
    Signed-off-by: Philipp Klocke <philipp97kl@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6058799c7043577b2324e25f50fed1e26f822198
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Wed Oct 17 16:59:51 2018 -0400

    kprobes, x86/ptrace.h: Make regs_get_kernel_stack_nth() not fault on bad stack
    
    [ Upstream commit c2712b858187f5bcd7b042fe4daa3ba3a12635c0 ]
    
    Andy had some concerns about using regs_get_kernel_stack_nth() in a new
    function regs_get_kernel_argument() as if there's any error in the stack
    code, it could cause a bad memory access. To be on the safe side, call
    probe_kernel_read() on the stack address to be extra careful in accessing
    the memory. A helper function, regs_get_kernel_stack_nth_addr(), was added
    to just return the stack address (or NULL if not on the stack), that will be
    used to find the address (and could be used by other functions) and read the
    address with kernel_probe_read().
    
    Requested-by: Andy Lutomirski <luto@amacapital.net>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Reviewed-by: Joel Fernandes (Google) <joel@joelfernandes.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Link: http://lkml.kernel.org/r/20181017165951.09119177@gandalf.local.home
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9c89716d1aa6146be6e28faec26004e360694ff
Author: Dave Chinner <dchinner@redhat.com>
Date:   Thu Oct 18 17:21:29 2018 +1100

    xfs: fix use-after-free race in xfs_buf_rele
    
    [ Upstream commit 37fd1678245f7a5898c1b05128bc481fb403c290 ]
    
    When looking at a 4.18 based KASAN use after free report, I noticed
    that racing xfs_buf_rele() may race on dropping the last reference
    to the buffer and taking the buffer lock. This was the symptom
    displayed by the KASAN report, but the actual issue that was
    reported had already been fixed in 4.19-rc1 by commit e339dd8d8b04
    ("xfs: use sync buffer I/O for sync delwri queue submission").
    
    Despite this, I think there is still an issue with xfs_buf_rele()
    in this code:
    
            release = atomic_dec_and_lock(&bp->b_hold, &pag->pag_buf_lock);
            spin_lock(&bp->b_lock);
            if (!release) {
    .....
    
    If two threads race on the b_lock after both dropping a reference
    and one getting dropping the last reference so release = true, we
    end up with:
    
    CPU 0                           CPU 1
    atomic_dec_and_lock()
                                    atomic_dec_and_lock()
                                    spin_lock(&bp->b_lock)
    spin_lock(&bp->b_lock)
    <spins>
                                    <release = true bp->b_lru_ref = 0>
                                    <remove from lists>
                                    freebuf = true
                                    spin_unlock(&bp->b_lock)
                                    xfs_buf_free(bp)
    <gets lock, reading and writing freed memory>
    <accesses freed memory>
    spin_unlock(&bp->b_lock) <reads/writes freed memory>
    
    IOWs, we can't safely take bp->b_lock after dropping the hold
    reference because the buffer may go away at any time after we
    drop that reference. However, this can be fixed simply by taking the
    bp->b_lock before we drop the reference.
    
    It is safe to nest the pag_buf_lock inside bp->b_lock as the
    pag_buf_lock is only used to serialise against lookup in
    xfs_buf_find() and no other locks are held over or under the
    pag_buf_lock there. Make this clear by documenting the buffer lock
    orders at the top of the file.
    
    Signed-off-by: Dave Chinner <dchinner@redhat.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Carlos Maiolino <cmaiolino@redhat.com
    Signed-off-by: Dave Chinner <david@fromorbit.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5708168fd67b16a7dd0da74e49f24d2f93b8e9dc
Author: Netanel Belgazal <netanel@amazon.com>
Date:   Wed Oct 17 10:04:21 2018 +0000

    net: ena: Fix Kconfig dependency on X86
    
    [ Upstream commit 8c590f9776386b8f697fd0b7ed6142ae6e3de79e ]
    
    The Kconfig limitation of X86 is to too wide.
    The ENA driver only requires a little endian dependency.
    
    Change the dependency to be on little endian CPU.
    
    Signed-off-by: Netanel Belgazal <netanel@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 03a94d7c923801a5c4d0bf5e3e50a88d69f373e4
Author: Kyeongdon Kim <kyeongdon.kim@lge.com>
Date:   Tue Oct 16 14:57:26 2018 +0900

    net: fix warning in af_unix
    
    [ Upstream commit 33c4368ee2589c165aebd8d388cbd91e9adb9688 ]
    
    This fixes the "'hash' may be used uninitialized in this function"
    
    net/unix/af_unix.c:1041:20: warning: 'hash' may be used uninitialized in this function [-Wmaybe-uninitialized]
      addr->hash = hash ^ sk->sk_type;
    
    Signed-off-by: Kyeongdon Kim <kyeongdon.kim@lge.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d54fb73783825b7738fa79362777fb169ee22974
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Oct 11 16:17:15 2018 +0200

    scsi: dc395x: fix DMA API usage in sg_update_list
    
    [ Upstream commit 6c404a68bf83b4135a8a9aa1c388ebdf98e8ba7f ]
    
    We need to transfer device ownership to the CPU before we can manipulate
    the mapped data.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38befbd860de07b13ec10582f6b826fc0e6c1d12
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Oct 11 16:17:14 2018 +0200

    scsi: dc395x: fix dma API usage in srb_done
    
    [ Upstream commit 3a5bd7021184dec2946f2a4d7a8943f8a5713e52 ]
    
    We can't just transfer ownership to the CPU and then unmap, as this will
    break with swiotlb.
    
    Instead unmap the command and sense buffer a little earlier in the I/O
    completion handler and get rid of the pci_dma_sync_sg_for_cpu call
    entirely.
    
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 277d087b345ac04bed13a54ab85aa166d8f1583c
Author: Marcel Ziswiler <marcel.ziswiler@toradex.com>
Date:   Tue Oct 16 12:47:29 2018 +0200

    ASoC: tegra_sgtl5000: fix device_node refcounting
    
    [ Upstream commit a85227da2dcc291b762c8482a505bc7d0d2d4b07 ]
    
    Similar to the following:
    
    commit 4321723648b0 ("ASoC: tegra_alc5632: fix device_node refcounting")
    
    commit 7c5dfd549617 ("ASoC: tegra: fix device_node refcounting")
    
    Signed-off-by: Marcel Ziswiler <marcel.ziswiler@toradex.com>
    Acked-by: Jon Hunter <jonathanh@nvidia.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d719fa374ec7d488a700e87806a2212199af78d
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Mon Sep 10 14:01:44 2018 +0200

    clk: mmp2: fix the clock id for sdh2_clk and sdh3_clk
    
    [ Upstream commit 4917fb90eec7c26dac1497ada3bd4a325f670fcc ]
    
    A typo that makes it impossible to get the correct clocks for
    MMP2_CLK_SDH2 and MMP2_CLK_SDH3.
    
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Fixes: 1ec770d92a62 ("clk: mmp: add mmp2 DT support for clock driver")
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb92e4ad9c967e6fb549daff8da7bf829a7f2b72
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Oct 3 18:06:15 2018 -0700

    scsi: iscsi_tcp: Explicitly cast param in iscsi_sw_tcp_host_get_param
    
    [ Upstream commit 20054597f169090109fc3f0dfa1a48583f4178a4 ]
    
    Clang warns when one enumerated type is implicitly converted to another.
    
    drivers/scsi/iscsi_tcp.c:803:15: warning: implicit conversion from
    enumeration type 'enum iscsi_host_param' to different enumeration type
    'enum iscsi_param' [-Wenum-conversion]
                                                     &addr, param, buf);
                                                            ^~~~~
    1 warning generated.
    
    iscsi_conn_get_addr_param handles ISCSI_HOST_PARAM_IPADDRESS just fine
    so add an explicit cast to iscsi_param to make it clear to Clang that
    this is expected behavior.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/153
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 154088e52f0b84719a5eaa221c74a3abf494ce97
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Sep 26 17:12:00 2018 -0700

    scsi: isci: Change sci_controller_start_task's return type to sci_status
    
    [ Upstream commit 362b5da3dfceada6e74ecdd7af3991bbe42c0c0f ]
    
    Clang warns when an enumerated type is implicitly converted to another.
    
    drivers/scsi/isci/request.c:3476:13: warning: implicit conversion from
    enumeration type 'enum sci_task_status' to different enumeration type
    'enum sci_status' [-Wenum-conversion]
                            status = sci_controller_start_task(ihost,
                                   ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/scsi/isci/host.c:2744:10: warning: implicit conversion from
    enumeration type 'enum sci_status' to different enumeration type 'enum
    sci_task_status' [-Wenum-conversion]
                    return SCI_SUCCESS;
                    ~~~~~~ ^~~~~~~~~~~
    drivers/scsi/isci/host.c:2753:9: warning: implicit conversion from
    enumeration type 'enum sci_status' to different enumeration type 'enum
    sci_task_status' [-Wenum-conversion]
            return status;
            ~~~~~~ ^~~~~~
    
    Avoid all of these implicit conversion by just making
    sci_controller_start_task use sci_status. This silences
    Clang and has no functional change since sci_task_status
    has all of its values mapped to something in sci_status.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/153
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ecd06d168ad295b0bb1a15efaeb2dd6d9f5d5a2c
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Sep 26 17:11:50 2018 -0700

    scsi: isci: Use proper enumerated type in atapi_d2h_reg_frame_handler
    
    [ Upstream commit e9e9a103528c7e199ead6e5374c9c52cf16b5802 ]
    
    Clang warns when one enumerated type is implicitly converted to another.
    
    drivers/scsi/isci/request.c:1629:13: warning: implicit conversion from
    enumeration type 'enum sci_io_status' to different enumeration type
    'enum sci_status' [-Wenum-conversion]
                            status = SCI_IO_FAILURE_RESPONSE_VALID;
                                   ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/scsi/isci/request.c:1631:12: warning: implicit conversion from
    enumeration type 'enum sci_io_status' to different enumeration type
    'enum sci_status' [-Wenum-conversion]
                    status = SCI_IO_FAILURE_RESPONSE_VALID;
                           ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    status is of type sci_status but SCI_IO_FAILURE_RESPONSE_VALID is of
    type sci_io_status. Use SCI_FAILURE_IO_RESPONSE_VALID, which is from
    sci_status and has SCI_IO_FAILURE_RESPONSE_VALID's exact value since
    that is what SCI_IO_FAILURE_RESPONSE_VALID is mapped to in the isci.h
    file.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/153
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3489f08cd8bd60eecb2d3b9df13ae2062c7bf08c
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Oct 11 19:40:43 2018 +0200

    KVM/x86: Fix invvpid and invept register operand size in 64-bit mode
    
    [ Upstream commit 5ebb272b2ea7e02911a03a893f8d922d49f9bb4a ]
    
    Register operand size of invvpid and invept instruction in 64-bit mode
    has always 64 bits. Adjust inline function argument type to reflect
    correct size.
    
    Signed-off-by: Uros Bizjak <ubizjak@gmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 975926c7eab498abb4cf2d4ea10a01007af5622f
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Tue Oct 16 11:12:23 2018 +0200

    scsi: ips: fix missing break in switch
    
    [ Upstream commit 5d25ff7a544889bc4b749fda31778d6a18dddbcb ]
    
    Add missing break statement in order to prevent the code from falling
    through to case TEST_UNIT_READY.
    
    Addresses-Coverity-ID: 1357338 ("Missing break in switch")
    Suggested-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 345df99aa4a897e6da5af6cf9cc40e6b485ff222
Author: Omar Sandoval <osandov@fb.com>
Date:   Thu Oct 11 12:20:46 2018 -0700

    amiflop: clean up on errors during setup
    
    [ Upstream commit 53d0f8dbde89cf6c862c7a62e00c6123e02cba41 ]
    
    The error handling in fd_probe_drives() doesn't clean up at all. Fix it
    up in preparation for converting to blk-mq. While we're here, get rid of
    the commented out amiga_floppy_remove().
    
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 818e60fce7e007526c912a6b0f22cab9de8aa342
Author: Angelo Dureghello <angelo@sysam.it>
Date:   Fri Sep 7 14:44:25 2018 +0200

    m68k: fix command-line parsing when passed from u-boot
    
    [ Upstream commit 381fdd62c38344a771aed06adaf14aae65c47454 ]
    
    This patch fixes command_line array zero-terminated
    one byte over the end of the array, causing boot to hang.
    
    Signed-off-by: Angelo Dureghello <angelo@sysam.it>
    Signed-off-by: Greg Ungerer <gerg@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6fd2efed5bbb2e234505a57ae5559f38e3d10590
Author: Wenwen Wang <wang6495@umn.edu>
Date:   Wed Oct 10 18:38:28 2018 -0500

    misc: mic: fix a DMA pool free failure
    
    [ Upstream commit 6b995f4eec34745f6cb20d66d5277611f0b3c3fa ]
    
    In _scif_prog_signal(), the boolean variable 'x100' is used to indicate
    whether the MIC Coprocessor is X100. If 'x100' is true, the status
    descriptor will be used to write the value to the destination. Otherwise, a
    DMA pool will be allocated for this purpose. Specifically, if the DMA pool
    is allocated successfully, two memory addresses will be returned. One is
    for the CPU and the other is for the device to access the DMA pool. The
    former is stored to the variable 'status' and the latter is stored to the
    variable 'src'. After the allocation, the address in 'src' is saved to
    'status->src_dma_addr', which is actually in the DMA pool, and 'src' is
    then modified.
    
    Later on, if an error occurs, the execution flow will transfer to the label
    'dma_fail', which will check 'x100' and free up the allocated DMA pool if
    'x100' is false. The point here is that 'status->src_dma_addr' is used for
    freeing up the DMA pool. As mentioned before, 'status->src_dma_addr' is in
    the DMA pool. And thus, the device is able to modify this data. This can
    potentially cause failures when freeing up the DMA pool because of the
    modified device address.
    
    This patch avoids the above issue by using the variable 'src' (with
    necessary calculation) to free up the DMA pool.
    
    Signed-off-by: Wenwen Wang <wang6495@umn.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb83018527ecb9a636ad5faf75d6a46cd7c9a4cc
Author: Duncan Laurie <dlaurie@chromium.org>
Date:   Fri Oct 12 10:04:45 2018 -0600

    gsmi: Fix bug in append_to_eventlog sysfs handler
    
    [ Upstream commit 655603de68469adaff16842ac17a5aec9c9ce89b ]
    
    The sysfs handler should return the number of bytes consumed, which in the
    case of a successful write is the entire buffer.  Also fix a bug where
    param.data_len was being set to (count - (2 * sizeof(u32))) instead of just
    (count - sizeof(u32)).  The latter is correct because we skip over the
    leading u32 which is our param.type, but we were also incorrectly
    subtracting sizeof(u32) on the line where we were actually setting
    param.data_len:
    
            param.data_len = count - sizeof(u32);
    
    This meant that for our example event.kernel_software_watchdog with total
    length 10 bytes, param.data_len was just 2 prior to this change.
    
    To test, successfully append an event to the log with gsmi sysfs.
    This sample event is for a "Kernel Software Watchdog"
    
    > xxd -g 1 event.kernel_software_watchdog
    0000000: 01 00 00 00 ad de 06 00 00 00
    
    > cat event.kernel_software_watchdog > /sys/firmware/gsmi/append_to_eventlog
    
    > mosys eventlog list | tail -1
    14 | 2012-06-25 10:14:14 | Kernl Event | Software Watchdog
    
    Signed-off-by: Duncan Laurie <dlaurie@chromium.org>
    Reviewed-by: Vadim Bendebury <vbendeb@chromium.org>
    Reviewed-by: Stefan Reinauer <reinauer@chromium.org>
    Signed-off-by: Furquan Shaikh <furquan@google.com>
    Tested-by: Furquan Shaikh <furquan@chromium.org>
    Reviewed-by: Aaron Durbin <adurbin@chromium.org>
    Reviewed-by: Justin TerAvest <teravest@chromium.org>
    [zwisler: updated changelog for 2nd bug fix and upstream]
    Signed-off-by: Ross Zwisler <zwisler@google.com>
    Reviewed-by: Guenter Roeck <groeck@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 56af2416cbe59428beb0e9a010021362f856ada5
Author: Nikolay Borisov <nborisov@suse.com>
Date:   Thu Sep 13 11:35:10 2018 +0300

    btrfs: handle error of get_old_root
    
    [ Upstream commit 315bed43fea532650933e7bba316a7601d439edf ]
    
    In btrfs_search_old_slot get_old_root is always used with the assumption
    it cannot fail. However, this is not true in rare circumstance it can
    fail and return null. This will lead to null point dereference when the
    header is read. Fix this by checking the return value and properly
    handling NULL by setting ret to -EIO and returning gracefully.
    
    Coverity-id: 1087503
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Lu Fengqi <lufq.fnst@cn.fujitsu.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fe3143ff59c6cd59f380fc59e2f691c02422e27
Author: Chaotian Jing <chaotian.jing@mediatek.com>
Date:   Sat Oct 13 15:20:47 2018 +0800

    mmc: mediatek: fix cannot receive new request when msdc_cmd_is_ready fail
    
    [ Upstream commit f38a9774ddde9d79b3487dd888edd8b8623552af ]
    
    when msdc_cmd_is_ready return fail, the req_timeout work has not been
    inited and cancel_delayed_work() will return false, then, the request
    return directly and never call mmc_request_done().
    
    so need call mod_delayed_work() before msdc_cmd_is_ready()
    
    Signed-off-by: Chaotian Jing <chaotian.jing@mediatek.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 374de00321ce9a2966f76bc3462fd59e1ef50cc8
Author: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
Date:   Fri Oct 12 22:48:22 2018 +0300

    spi: sh-msiof: fix deferred probing
    
    [ Upstream commit f34c6e6257aa477cdfe7e9bbbecd3c5648ecda69 ]
    
    Since commit 9ec36cafe43b ("of/irq: do irq resolution in platform_get_irq")
    platform_get_irq() can return -EPROBE_DEFER. However, the driver overrides
    an error returned by that function with -ENOENT which breaks the deferred
    probing. Propagate upstream an error code returned by platform_get_irq()
    and remove the bogus "platform" from the error message, while at it...
    
    Fixes: 9ec36cafe43b ("of/irq: do irq resolution in platform_get_irq")
    Signed-off-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 677273c9a28b4cb2e1fb3613ef49c153e519002b
Author: Carl Huang <cjhuang@codeaurora.org>
Date:   Thu Oct 11 15:55:26 2018 +0800

    ath10k: allocate small size dma memory in ath10k_pci_diag_write_mem
    
    [ Upstream commit 0738b4998c6d1caf9ca2447b946709a7278c70f1 ]
    
    ath10k_pci_diag_write_mem may allocate big size of the dma memory
    based on the parameter nbytes. Take firmware diag download as
    example, the biggest size is about 500K. In some systems, the
    allocation is likely to fail because it can't acquire such a large
    contiguous dma memory.
    
    The fix is to allocate a small size dma memory. In the loop,
    driver copies the data to the allocated dma memory and writes to
    the destination until all the data is written.
    
    Tested with QCA6174 PCI with
    firmware-6.bin_WLAN.RM.4.4.1-00119-QCARMSWP-1, this also affects
    QCA9377 PCI.
    
    Signed-off-by: Carl Huang <cjhuang@codeaurora.org>
    Reviewed-by: Brian Norris <briannorris@chomium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7d6d2d93fa0af180eaa99eaeb9557efcc4ae94f4
Author: Ali MJ Al-Nasrawy <alimjalnasrawy@gmail.com>
Date:   Wed Oct 3 19:21:39 2018 +0300

    brcmsmac: AP mode: update beacon when TIM changes
    
    [ Upstream commit 2258ee58baa554609a3cc3996276e4276f537b6d ]
    
    Beacons are not updated to reflect TIM changes. This is not compliant with
    power-saving client stations as the beacons do not have valid TIM and can
    cause the network to stall at random occasions and to have highly variable
    latencies.
    Fix it by updating beacon templates on mac80211 set_tim callback.
    
    Addresses an issue described in:
    https://marc.info/?i=20180911163534.21312d08%20()%20manjaro
    
    Signed-off-by: Ali MJ Al-Nasrawy <alimjalnasrawy@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 761df65f00ae8671268185a8a6baef36fa28d1d4
Author: Sam Bobroff <sbobroff@linux.ibm.com>
Date:   Wed Sep 12 11:23:22 2018 +1000

    powerpc/eeh: Fix use of EEH_PE_KEEP on wrong field
    
    [ Upstream commit 473af09b56dc4be68e4af33220ceca6be67aa60d ]
    
    eeh_add_to_parent_pe() sometimes removes the EEH_PE_KEEP flag, but it
    incorrectly removes it from pe->type, instead of pe->state.
    
    However, rather than clearing it from the correct field, remove it.
    Inspection of the code shows that it can't ever have had any effect
    (even if it had been cleared from the correct field), because the
    field is never tested after it is cleared by the statement in
    question.
    
    The clear statement was added by commit 807a827d4e74 ("powerpc/eeh:
    Keep PE during hotplug"), but it didn't explain why it was necessary.
    
    Signed-off-by: Sam Bobroff <sbobroff@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit baaee24fc278effc60369cd6b8132ae4a7acd1ef
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Oct 1 19:44:58 2018 +0300

    powerpc: Fix signedness bug in update_flash_db()
    
    [ Upstream commit 014704e6f54189a203cc14c7c0bb411b940241bc ]
    
    The "count < sizeof(struct os_area_db)" comparison is type promoted to
    size_t so negative values of "count" are treated as very high values
    and we accidentally return success instead of a negative error code.
    
    This doesn't really change runtime much but it fixes a static checker
    warning.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Geoff Levand <geoff@infradead.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6aee8c399397c22ba0d235094e08818b257d2afb
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Wed Sep 12 20:57:18 2018 -0400

    synclink_gt(): fix compat_ioctl()
    
    [ Upstream commit 27230e51349fde075598c1b59d15e1ff802f3f6e ]
    
    compat_ptr() for pointer-taking ones...
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3ed025b2a02ac76d05996fef3b72921482d96d0f
Author: Andreas Gruenbacher <agruenba@redhat.com>
Date:   Thu Sep 27 15:30:25 2018 +0100

    gfs2: Fix marking bitmaps non-full
    
    [ Upstream commit ec23df2b0cf3e1620f5db77972b7fb735f267eff ]
    
    Reservations in gfs can span multiple gfs2_bitmaps (but they won't span
    multiple resource groups).  When removing a reservation, we want to
    clear the GBF_FULL flags of all involved gfs2_bitmaps, not just that of
    the first bitmap.
    
    Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Reviewed-by: Steven Whitehouse <swhiteho@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 63b9c6ec2aa1e436f80f8325074476a9c21af8fd
Author: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
Date:   Wed Oct 10 20:33:08 2018 +0900

    printk: fix integer overflow in setup_log_buf()
    
    [ Upstream commit d2130e82e9454304e9b91ba9da551b5989af8c27 ]
    
    The way we calculate logbuf free space percentage overflows signed
    integer:
    
            int free;
    
            free = __LOG_BUF_LEN - log_next_idx;
            pr_info("early log buf free: %u(%u%%)\n",
                    free, (free * 100) / __LOG_BUF_LEN);
    
    We support LOG_BUF_LEN of up to 1<<25 bytes. Since setup_log_buf() is
    called during early init, logbuf is mostly empty, so
    
            __LOG_BUF_LEN - log_next_idx
    
    is close to 1<<25. Thus when we multiply it by 100, we overflow signed
    integer value range: 100 is 2^6 + 2^5 + 2^2.
    
    Example, booting with LOG_BUF_LEN 1<<25 and log_buf_len=2G
    boot param:
    
    [    0.075317] log_buf_len: -2147483648 bytes
    [    0.075319] early log buf free: 33549896(-28%)
    
    Make "free" unsigned integer and use appropriate printk() specifier.
    
    Link: http://lkml.kernel.org/r/20181010113308.9337-1-sergey.senozhatsky@gmail.com
    To: Steven Rostedt <rostedt@goodmis.org>
    Cc: linux-kernel@vger.kernel.org
    Cc: Sergey Senozhatsky <sergey.senozhatsky.work@gmail.com>
    Signed-off-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1f08bccf9506463a9e68b0d21cb654feea841a9
Author: Takashi Sakamoto <o-takashi@sakamocchi.jp>
Date:   Fri Oct 12 14:25:22 2018 +0900

    ALSA: isight: fix leak of reference to firewire unit in error path of .probe callback
    
    [ Upstream commit 51e68fb0929c29e47e9074ca3e99ffd6021a1c5a ]
    
    In some error paths, reference count of firewire unit is not decreased.
    This commit fixes the bug.
    
    Fixes: 5b14ec25a79b('ALSA: firewire: release reference count of firewire unit in .remove callback of bus driver')
    Signed-off-by: Takashi Sakamoto <o-takashi@sakamocchi.jp>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9c8e98a0b3261801f0f1bd23d7dc32c5429f6764
Author: Adrian Bunk <bunk@kernel.org>
Date:   Wed Feb 13 15:59:38 2019 +0200

    mwifiex: Fix NL80211_TX_POWER_LIMITED
    
    [ Upstream commit 65a576e27309120e0621f54d5c81eb9128bd56be ]
    
    NL80211_TX_POWER_LIMITED was treated as NL80211_TX_POWER_AUTOMATIC,
    which is the opposite of what should happen and can cause nasty
    regulatory problems.
    
    if/else converted to a switch without default to make gcc warn
    on unhandled enum values.
    
    Signed-off-by: Adrian Bunk <bunk@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0533daaab64d8d52ffdeecc64ebb9f44569dd921
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Jun 12 09:02:02 2019 +0200

    platform/x86: asus-wmi: Only Tell EC the OS will handle display hotkeys from asus_nb_wmi
    
    [ Upstream commit 401fee8195d401b2b94dee57383f627050724d5b ]
    
    Commit 78f3ac76d9e5 ("platform/x86: asus-wmi: Tell the EC the OS will
    handle the display off hotkey") causes the backlight to be permanently off
    on various EeePC laptop models using the eeepc-wmi driver (Asus EeePC
    1015BX, Asus EeePC 1025C).
    
    The asus_wmi_set_devstate(ASUS_WMI_DEVID_BACKLIGHT, 2, NULL) call added
    by that commit is made conditional in this commit and only enabled in
    the quirk_entry structs in the asus-nb-wmi driver fixing the broken
    display / backlight on various EeePC laptop models.
    
    Cc: João Paulo Rechi Vita <jprvita@endlessm.com>
    Fixes: 78f3ac76d9e5 ("platform/x86: asus-wmi: Tell the EC the OS will handle the display off hotkey")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9d6e4e4f97764674511b1d2248c3695ef30b7b0
Author: Kiernan Hager <kah.listaddress@gmail.com>
Date:   Mon Nov 20 14:18:44 2017 -0700

    platform/x86: asus-nb-wmi: Support ALS on the Zenbook UX430UQ
    
    [ Upstream commit db2582afa7444a0ce6bb1ebf1431715969a10b06 ]
    
    This patch adds support for ALS on the Zenbook UX430UQ to the asus_nb_wmi
    driver. It also renames "quirk_asus_ux330uak" to "quirk_asus_forceals"
    because it is now used for more than one model of computer, and should
    thus have a more general name.
    
    Signed-off-by: Kiernan Hager <kah.listaddress@gmail.com>
    [andy: massaged commit message, fixed indentation and commas in the code]
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f39a7c7f3c533f8111bd0c021cd2f935a0b87b60
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Thu Nov 21 17:54:01 2019 -0800

    mm/ksm.c: don't WARN if page is still mapped in remove_stable_node()
    
    commit 9a63236f1ad82d71a98aa80320b6cb618fb32f44 upstream.
    
    It's possible to hit the WARN_ON_ONCE(page_mapped(page)) in
    remove_stable_node() when it races with __mmput() and squeezes in
    between ksm_exit() and exit_mmap().
    
      WARNING: CPU: 0 PID: 3295 at mm/ksm.c:888 remove_stable_node+0x10c/0x150
    
      Call Trace:
       remove_all_stable_nodes+0x12b/0x330
       run_store+0x4ef/0x7b0
       kernfs_fop_write+0x200/0x420
       vfs_write+0x154/0x450
       ksys_write+0xf9/0x1d0
       do_syscall_64+0x99/0x510
       entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Remove the warning as there is nothing scary going on.
    
    Link: http://lkml.kernel.org/r/20191119131850.5675-1-aryabinin@virtuozzo.com
    Fixes: cbf86cfe04a6 ("ksm: remove old stable nodes more thoroughly")
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Acked-by: Hugh Dickins <hughd@google.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cef09a10a2de365571c031a0802b8060c39ebd44
Author: Joseph Qi <joseph.qi@linux.alibaba.com>
Date:   Thu Nov 21 17:53:52 2019 -0800

    Revert "fs: ocfs2: fix possible null-pointer dereferences in ocfs2_xa_prepare_entry()"
    
    commit 94b07b6f9e2e996afff7395de6b35f34f4cb10bf upstream.
    
    This reverts commit 56e94ea132bb5c2c1d0b60a6aeb34dcb7d71a53d.
    
    Commit 56e94ea132bb ("fs: ocfs2: fix possible null-pointer dereferences
    in ocfs2_xa_prepare_entry()") introduces a regression that fail to
    create directory with mount option user_xattr and acl.  Actually the
    reported NULL pointer dereference case can be correctly handled by
    loc->xl_ops->xlo_add_entry(), so revert it.
    
    Link: http://lkml.kernel.org/r/1573624916-83825-1-git-send-email-joseph.qi@linux.alibaba.com
    Fixes: 56e94ea132bb ("fs: ocfs2: fix possible null-pointer dereferences in ocfs2_xa_prepare_entry()")
    Signed-off-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Reported-by: Thomas Voegtle <tv@lio96.de>
    Acked-by: Changwei Ge <gechangwei@live.cn>
    Cc: Jia-Ju Bai <baijiaju1990@gmail.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f467a23a5ca7ce49b9e16ada041e019d5d66ffb9
Author: Laura Abbott <labbott@redhat.com>
Date:   Tue Nov 12 17:10:26 2019 -0500

    tools: gpio: Correctly add make dependencies for gpio_utils
    
    commit 0161a94e2d1c713bd34d72bc0239d87c31747bf7 upstream.
    
    gpio tools fail to build correctly with make parallelization:
    
    $ make -s -j24
    ld: gpio-utils.o: file not recognized: file truncated
    make[1]: *** [/home/labbott/linux_upstream/tools/build/Makefile.build:145: lsgpio-in.o] Error 1
    make: *** [Makefile:43: lsgpio-in.o] Error 2
    make: *** Waiting for unfinished jobs....
    
    This is because gpio-utils.o is used across multiple targets.
    Fix this by making gpio-utios.o a proper dependency.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 684fd386a782e44e2f05f21b11372121beda6e9b
Author: Thierry Reding <treding@nvidia.com>
Date:   Fri Nov 8 17:07:46 2019 +0100

    gpio: max77620: Fixup debounce delays
    
    commit b0391479ae04dfcbd208b9571c375064caad9a57 upstream.
    
    When converting milliseconds to microseconds in commit fffa6af94894
    ("gpio: max77620: Use correct unit for debounce times") some ~1 ms gaps
    were introduced between the various ranges supported by the controller.
    Fix this by changing the start of each range to the value immediately
    following the end of the previous range. This way a debounce time of,
    say 8250 us will translate into 16 ms instead of returning an -EINVAL
    error.
    
    Typically the debounce delay is only ever set through device tree and
    specified in milliseconds, so we can never really hit this issue because
    debounce times are always a multiple of 1000 us.
    
    The only notable exception for this is drivers/mmc/host/mmc-spi.c where
    the CD GPIO is requested, which passes a 1 us debounce time. According
    to a comment preceeding that code this should actually be 1 ms (i.e.
    1000 us).
    
    Reported-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Acked-by: Pavel Machek <pavel@denx.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 079e02e6759d3f80d26a88a34ec007ce305557ba
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Tue Nov 19 23:47:33 2019 +0100

    net/sched: act_pedit: fix WARN() in the traffic path
    
    [ Upstream commit f67169fef8dbcc1ac6a6a109ecaad0d3b259002c ]
    
    when configuring act_pedit rules, the number of keys is validated only on
    addition of a new entry. This is not sufficient to avoid hitting a WARN()
    in the traffic path: for example, it is possible to replace a valid entry
    with a new one having 0 extended keys, thus causing splats in dmesg like:
    
     pedit BUG: index 42
     WARNING: CPU: 2 PID: 4054 at net/sched/act_pedit.c:410 tcf_pedit_act+0xc84/0x1200 [act_pedit]
     [...]
     RIP: 0010:tcf_pedit_act+0xc84/0x1200 [act_pedit]
     Code: 89 fa 48 c1 ea 03 0f b6 04 02 84 c0 74 08 3c 03 0f 8e ac 00 00 00 48 8b 44 24 10 48 c7 c7 a0 c4 e4 c0 8b 70 18 e8 1c 30 95 ea <0f> 0b e9 a0 fa ff ff e8 00 03 f5 ea e9 14 f4 ff ff 48 89 58 40 e9
     RSP: 0018:ffff888077c9f320 EFLAGS: 00010286
     RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffffac2983a2
     RDX: 0000000000000001 RSI: 0000000000000008 RDI: ffff888053927bec
     RBP: dffffc0000000000 R08: ffffed100a726209 R09: ffffed100a726209
     R10: 0000000000000001 R11: ffffed100a726208 R12: ffff88804beea780
     R13: ffff888079a77400 R14: ffff88804beea780 R15: ffff888027ab2000
     FS:  00007fdeec9bd740(0000) GS:ffff888053900000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00007ffdb3dfd000 CR3: 000000004adb4006 CR4: 00000000001606e0
     Call Trace:
      tcf_action_exec+0x105/0x3f0
      tcf_classify+0xf2/0x410
      __dev_queue_xmit+0xcbf/0x2ae0
      ip_finish_output2+0x711/0x1fb0
      ip_output+0x1bf/0x4b0
      ip_send_skb+0x37/0xa0
      raw_sendmsg+0x180c/0x2430
      sock_sendmsg+0xdb/0x110
      __sys_sendto+0x257/0x2b0
      __x64_sys_sendto+0xdd/0x1b0
      do_syscall_64+0xa5/0x4e0
      entry_SYSCALL_64_after_hwframe+0x49/0xbe
     RIP: 0033:0x7fdeeb72e993
     Code: 48 8b 0d e0 74 2c 00 f7 d8 64 89 01 48 83 c8 ff c3 66 0f 1f 44 00 00 83 3d 0d d6 2c 00 00 75 13 49 89 ca b8 2c 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 34 c3 48 83 ec 08 e8 4b cc 00 00 48 89 04 24
     RSP: 002b:00007ffdb3de8a18 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
     RAX: ffffffffffffffda RBX: 000055c81972b700 RCX: 00007fdeeb72e993
     RDX: 0000000000000040 RSI: 000055c81972b700 RDI: 0000000000000003
     RBP: 00007ffdb3dea130 R08: 000055c819728510 R09: 0000000000000010
     R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000040
     R13: 000055c81972b6c0 R14: 000055c81972969c R15: 0000000000000080
    
    Fix this moving the check on 'nkeys' earlier in tcf_pedit_init(), so that
    attempts to install rules having 0 keys are always rejected with -EINVAL.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38fe8788848881bec70e5ca11465dd95885a71a0
Author: Roi Dayan <roid@mellanox.com>
Date:   Wed Nov 13 14:42:00 2019 +0200

    net/mlx5e: Fix set vf link state error flow
    
    [ Upstream commit 751021218f7e66ee9bbaa2be23056e447cd75ec4 ]
    
    Before this commit the ndo always returned success.
    Fix that.
    
    Fixes: 1ab2068a4c66 ("net/mlx5: Implement vports admin state backup/restore")
    Signed-off-by: Roi Dayan <roid@mellanox.com>
    Reviewed-by: Vlad Buslov <vladbu@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit baa541afe74550642f1dfe6df18628c4a87fa3d1
Author: Martin Habets <mhabets@solarflare.com>
Date:   Thu Nov 21 17:52:15 2019 +0000

    sfc: Only cancel the PPS workqueue if it exists
    
    [ Upstream commit 723eb53690041740a13ac78efeaf6804f5d684c9 ]
    
    The workqueue only exists for the primary PF. For other functions
    we hit a WARN_ON in kernel/workqueue.c.
    
    Fixes: 7c236c43b838 ("sfc: Add support for IEEE-1588 PTP")
    Signed-off-by: Martin Habets <mhabets@solarflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2e91f78ec21d88a750f67f7d62a28abd0dbb8f3
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Nov 20 15:34:38 2019 +0300

    net: rtnetlink: prevent underflows in do_setvfinfo()
    
    [ Upstream commit d658c8f56ec7b3de8051a24afb25da9ba3c388c5 ]
    
    The "ivm->vf" variable is a u32, but the problem is that a number of
    drivers cast it to an int and then forget to check for negatives.  An
    example of this is in the cxgb4 driver.
    
    drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
      2890  static int cxgb4_mgmt_get_vf_config(struct net_device *dev,
      2891                                      int vf, struct ifla_vf_info *ivi)
                                                ^^^^^^
      2892  {
      2893          struct port_info *pi = netdev_priv(dev);
      2894          struct adapter *adap = pi->adapter;
      2895          struct vf_info *vfinfo;
      2896
      2897          if (vf >= adap->num_vfs)
                        ^^^^^^^^^^^^^^^^^^^
      2898                  return -EINVAL;
      2899          vfinfo = &adap->vfinfo[vf];
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    
    There are 48 functions affected.
    
    drivers/net/ethernet/hisilicon/hns3/hns3pf/hclge_main.c:8435 hclge_set_vf_vlan_filter() warn: can 'vfid' underflow 's32min-2147483646'
    drivers/net/ethernet/freescale/enetc/enetc_pf.c:377 enetc_pf_set_vf_mac() warn: can 'vf' underflow 's32min-2147483646'
    drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c:2899 cxgb4_mgmt_get_vf_config() warn: can 'vf' underflow 's32min-254'
    drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c:2960 cxgb4_mgmt_set_vf_rate() warn: can 'vf' underflow 's32min-254'
    drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c:3019 cxgb4_mgmt_set_vf_rate() warn: can 'vf' underflow 's32min-254'
    drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c:3038 cxgb4_mgmt_set_vf_vlan() warn: can 'vf' underflow 's32min-254'
    drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c:3086 cxgb4_mgmt_set_vf_link_state() warn: can 'vf' underflow 's32min-254'
    drivers/net/ethernet/chelsio/cxgb/cxgb2.c:791 get_eeprom() warn: can 'i' underflow 's32min-(-4),0,4-s32max'
    drivers/net/ethernet/broadcom/bnxt/bnxt_sriov.c:82 bnxt_set_vf_spoofchk() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/broadcom/bnxt/bnxt_sriov.c:164 bnxt_set_vf_trust() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/broadcom/bnxt/bnxt_sriov.c:186 bnxt_get_vf_config() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/broadcom/bnxt/bnxt_sriov.c:228 bnxt_set_vf_mac() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/broadcom/bnxt/bnxt_sriov.c:264 bnxt_set_vf_vlan() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/broadcom/bnxt/bnxt_sriov.c:293 bnxt_set_vf_bw() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/broadcom/bnxt/bnxt_sriov.c:333 bnxt_set_vf_link_state() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/broadcom/bnx2x/bnx2x_sriov.c:2595 bnx2x_vf_op_prep() warn: can 'vfidx' underflow 's32min-63'
    drivers/net/ethernet/broadcom/bnx2x/bnx2x_sriov.c:2595 bnx2x_vf_op_prep() warn: can 'vfidx' underflow 's32min-63'
    drivers/net/ethernet/broadcom/bnx2x/bnx2x_vfpf.c:2281 bnx2x_post_vf_bulletin() warn: can 'vf' underflow 's32min-63'
    drivers/net/ethernet/broadcom/bnx2x/bnx2x_vfpf.c:2285 bnx2x_post_vf_bulletin() warn: can 'vf' underflow 's32min-63'
    drivers/net/ethernet/broadcom/bnx2x/bnx2x_vfpf.c:2286 bnx2x_post_vf_bulletin() warn: can 'vf' underflow 's32min-63'
    drivers/net/ethernet/broadcom/bnx2x/bnx2x_vfpf.c:2292 bnx2x_post_vf_bulletin() warn: can 'vf' underflow 's32min-63'
    drivers/net/ethernet/broadcom/bnx2x/bnx2x_vfpf.c:2297 bnx2x_post_vf_bulletin() warn: can 'vf' underflow 's32min-63'
    drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c:1832 qlcnic_sriov_set_vf_mac() warn: can 'vf' underflow 's32min-254'
    drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c:1864 qlcnic_sriov_set_vf_tx_rate() warn: can 'vf' underflow 's32min-254'
    drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c:1937 qlcnic_sriov_set_vf_vlan() warn: can 'vf' underflow 's32min-254'
    drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c:2005 qlcnic_sriov_get_vf_config() warn: can 'vf' underflow 's32min-254'
    drivers/net/ethernet/qlogic/qlcnic/qlcnic_sriov_pf.c:2036 qlcnic_sriov_set_vf_spoofchk() warn: can 'vf' underflow 's32min-254'
    drivers/net/ethernet/emulex/benet/be_main.c:1914 be_get_vf_config() warn: can 'vf' underflow 's32min-65534'
    drivers/net/ethernet/emulex/benet/be_main.c:1915 be_get_vf_config() warn: can 'vf' underflow 's32min-65534'
    drivers/net/ethernet/emulex/benet/be_main.c:1922 be_set_vf_tvt() warn: can 'vf' underflow 's32min-65534'
    drivers/net/ethernet/emulex/benet/be_main.c:1951 be_clear_vf_tvt() warn: can 'vf' underflow 's32min-65534'
    drivers/net/ethernet/emulex/benet/be_main.c:2063 be_set_vf_tx_rate() warn: can 'vf' underflow 's32min-65534'
    drivers/net/ethernet/emulex/benet/be_main.c:2091 be_set_vf_link_state() warn: can 'vf' underflow 's32min-65534'
    drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c:2609 ice_set_vf_port_vlan() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c:3050 ice_get_vf_cfg() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c:3103 ice_set_vf_spoofchk() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c:3181 ice_set_vf_mac() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c:3237 ice_set_vf_trust() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c:3286 ice_set_vf_link_state() warn: can 'vf_id' underflow 's32min-65534'
    drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c:3919 i40e_validate_vf() warn: can 'vf_id' underflow 's32min-2147483646'
    drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c:3957 i40e_ndo_set_vf_mac() warn: can 'vf_id' underflow 's32min-2147483646'
    drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c:4104 i40e_ndo_set_vf_port_vlan() warn: can 'vf_id' underflow 's32min-2147483646'
    drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c:4263 i40e_ndo_set_vf_bw() warn: can 'vf_id' underflow 's32min-2147483646'
    drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c:4309 i40e_ndo_get_vf_config() warn: can 'vf_id' underflow 's32min-2147483646'
    drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c:4371 i40e_ndo_set_vf_link_state() warn: can 'vf_id' underflow 's32min-2147483646'
    drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c:4441 i40e_ndo_set_vf_spoofchk() warn: can 'vf_id' underflow 's32min-2147483646'
    drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c:4441 i40e_ndo_set_vf_spoofchk() warn: can 'vf_id' underflow 's32min-2147483646'
    drivers/net/ethernet/intel/i40e/i40e_virtchnl_pf.c:4504 i40e_ndo_set_vf_trust() warn: can 'vf_id' underflow 's32min-2147483646'
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce6bbf426d31f7d1b92171304c5523180147f692
Author: Luigi Rizzo <lrizzo@google.com>
Date:   Fri Nov 15 12:12:25 2019 -0800

    net/mlx4_en: fix mlx4 ethtool -N insertion
    
    [ Upstream commit 34e59836565e36fade1464e054a3551c1a0364be ]
    
    ethtool expects ETHTOOL_GRXCLSRLALL to set ethtool_rxnfc->data with the
    total number of entries in the rx classifier table.  Surprisingly, mlx4
    is missing this part (in principle ethtool could still move forward and
    try the insert).
    
    Tested: compiled and run command:
            phh13:~# ethtool -N eth1 flow-type udp4  queue 4
            Added rule with ID 255
    
    Signed-off-by: Luigi Rizzo <lrizzo@google.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
