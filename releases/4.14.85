commit 5ff1ad556aad473952c1caca6092aac4517ac1ae
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Dec 1 09:43:00 2018 +0100

    Linux 4.14.85

commit d467320fdaf328fd6f98fc686b3a3fdd226dbaef
Author: Mimi Zohar <zohar@linux.vnet.ibm.com>
Date:   Tue Jan 23 10:00:41 2018 -0500

    ima: re-initialize iint->atomic_flags
    
    commit e2598077dc6a26c9644393e5c21f22a90dbdccdb upstream.
    
    Intermittently security.ima is not being written for new files.  This
    patch re-initializes the new slab iint->atomic_flags field before
    freeing it.
    
    Fixes: commit 0d73a55208e9 ("ima: re-introduce own integrity cache lock")
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Signed-off-by: James Morris <jmorris@namei.org>
    Cc: Aditya Kali <adityakali@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 281c07f30f71b4982cb535b633e5286bf0c7d056
Author: Dmitry Kasatkin <dmitry.kasatkin@gmail.com>
Date:   Tue Dec 5 21:06:34 2017 +0200

    ima: re-introduce own integrity cache lock
    
    commit 0d73a55208e94fc9fb6deaeea61438cd3280d4c0 upstream.
    
    Before IMA appraisal was introduced, IMA was using own integrity cache
    lock along with i_mutex. process_measurement and ima_file_free took
    the iint->mutex first and then the i_mutex, while setxattr, chmod and
    chown took the locks in reverse order. To resolve the potential deadlock,
    i_mutex was moved to protect entire IMA functionality and the redundant
    iint->mutex was eliminated.
    
    Solution was based on the assumption that filesystem code does not take
    i_mutex further. But when file is opened with O_DIRECT flag, direct-io
    implementation takes i_mutex and produces deadlock. Furthermore, certain
    other filesystem operations, such as llseek, also take i_mutex.
    
    More recently some filesystems have replaced their filesystem specific
    lock with the global i_rwsem to read a file.  As a result, when IMA
    attempts to calculate the file hash, reading the file attempts to take
    the i_rwsem again.
    
    To resolve O_DIRECT related deadlock problem, this patch re-introduces
    iint->mutex. But to eliminate the original chmod() related deadlock
    problem, this patch eliminates the requirement for chmod hooks to take
    the iint->mutex by introducing additional atomic iint->attr_flags to
    indicate calling of the hooks. The allowed locking order is to take
    the iint->mutex first and then the i_rwsem.
    
    Original flags were cleared in chmod(), setxattr() or removwxattr()
    hooks and tested when file was closed or opened again. New atomic flags
    are set or cleared in those hooks and tested to clear iint->flags on
    close or on open.
    
    Atomic flags are following:
    * IMA_CHANGE_ATTR - indicates that chATTR() was called (chmod, chown,
      chgrp) and file attributes have changed. On file open, it causes IMA
      to clear iint->flags to re-evaluate policy and perform IMA functions
      again.
    * IMA_CHANGE_XATTR - indicates that setxattr or removexattr was called
      and extended attributes have changed. On file open, it causes IMA to
      clear iint->flags IMA_DONE_MASK to re-appraise.
    * IMA_UPDATE_XATTR - indicates that security.ima needs to be updated.
      It is cleared if file policy changes and no update is needed.
    * IMA_DIGSIG - indicates that file security.ima has signature and file
      security.ima must not update to file has on file close.
    * IMA_MUST_MEASURE - indicates the file is in the measurement policy.
    
    Fixes: Commit 6552321831dc ("xfs: remove i_iolock and use i_rwsem in
    the VFS inode instead")
    
    Signed-off-by: Dmitry Kasatkin <dmitry.kasatkin@huawei.com>
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Cc: Aditya Kali <adityakali@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e099863340d86741c0957217971c29becf24b881
Author: Matthew Garrett <mjg59@google.com>
Date:   Tue Nov 7 07:17:42 2017 -0800

    EVM: Add support for portable signature format
    
    commit 50b977481fce90aa5fbda55e330b9d722733e358 upstream.
    
    The EVM signature includes the inode number and (optionally) the
    filesystem UUID, making it impractical to ship EVM signatures in
    packages. This patch adds a new portable format intended to allow
    distributions to include EVM signatures. It is identical to the existing
    format but hardcodes the inode and generation numbers to 0 and does not
    include the filesystem UUID even if the kernel is configured to do so.
    
    Removing the inode means that the metadata and signature from one file
    could be copied to another file without invalidating it. This is avoided
    by ensuring that an IMA xattr is present during EVM validation.
    
    Portable signatures are intended to be immutable - ie, they will never
    be transformed into HMACs.
    
    Based on earlier work by Dmitry Kasatkin and Mikhail Kurinnoi.
    
    Signed-off-by: Matthew Garrett <mjg59@google.com>
    Cc: Dmitry Kasatkin <dmitry.kasatkin@huawei.com>
    Cc: Mikhail Kurinnoi <viewizard@viewizard.com>
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Cc: Aditya Kali <adityakali@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de72a0f9ad28895b57b9403ae29aa5a6a579f31d
Author: Mimi Zohar <zohar@linux.vnet.ibm.com>
Date:   Sat Jun 17 23:56:23 2017 -0400

    ima: always measure and audit files in policy
    
    commit f3cc6b25dcc5616f0d5c720009b2ac66f97df2ff upstream.
    
    All files matching a "measure" rule must be included in the IMA
    measurement list, even when the file hash cannot be calculated.
    Similarly, all files matching an "audit" rule must be audited, even when
    the file hash can not be calculated.
    
    The file data hash field contained in the IMA measurement list template
    data will contain 0's instead of the actual file hash digest.
    
    Note:
    In general, adding, deleting or in anyway changing which files are
    included in the IMA measurement list is not a good idea, as it might
    result in not being able to unseal trusted keys sealed to a specific
    TPM PCR value.  This patch not only adds file measurements that were
    not previously measured, but specifies that the file hash value for
    these files will be 0's.
    
    As the IMA measurement list ordering is not consistent from one boot
    to the next, it is unlikely that anyone is sealing keys based on the
    IMA measurement list.  Remote attestation servers should be able to
    process these new measurement records, but might complain about
    these unknown records.
    
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Reviewed-by: Dmitry Kasatkin <dmitry.kasatkin@huawei.com>
    Cc: Aditya Kali <adityakali@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57ccd1fc8ebbd656594354ab0213754fcda03bde
Author: Alexander Aring <aring@mojatatu.com>
Date:   Fri Apr 20 14:54:13 2018 -0400

    net: ieee802154: 6lowpan: fix frag reassembly
    
    commit f18fa5de5ba7f1d6650951502bb96a6e4715a948 upstream.
    
    This patch initialize stack variables which are used in
    frag_lowpan_compare_key to zero. In my case there are padding bytes in the
    structures ieee802154_addr as well in frag_lowpan_compare_key. Otherwise
    the key variable contains random bytes. The result is that a compare of
    two keys by memcmp works incorrect.
    
    Fixes: 648700f76b03 ("inet: frags: use rhashtables for reassembly units")
    Signed-off-by: Alexander Aring <aring@mojatatu.com>
    Reported-by: Stefan Schmidt <stefan@osg.samsung.com>
    Signed-off-by: Stefan Schmidt <stefan@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 077506972ba23772b752e08b1ab7052cf5f04511
Author: Paul E. McKenney <paulmck@kernel.org>
Date:   Mon Jul 9 13:47:30 2018 -0700

    rcu: Make need_resched() respond to urgent RCU-QS needs
    
    commit 92aa39e9dc77481b90cbef25e547d66cab901496 upstream.
    
    The per-CPU rcu_dynticks.rcu_urgent_qs variable communicates an urgent
    need for an RCU quiescent state from the force-quiescent-state processing
    within the grace-period kthread to context switches and to cond_resched().
    Unfortunately, such urgent needs are not communicated to need_resched(),
    which is sometimes used to decide when to invoke cond_resched(), for
    but one example, within the KVM vcpu_run() function.  As of v4.15, this
    can result in synchronize_sched() being delayed by up to ten seconds,
    which can be problematic, to say nothing of annoying.
    
    This commit therefore checks rcu_dynticks.rcu_urgent_qs from within
    rcu_check_callbacks(), which is invoked from the scheduling-clock
    interrupt handler.  If the current task is not an idle task and is
    not executing in usermode, a context switch is forced, and either way,
    the rcu_dynticks.rcu_urgent_qs variable is set to false.  If the current
    task is an idle task, then RCU's dyntick-idle code will detect the
    quiescent state, so no further action is required.  Similarly, if the
    task is executing in usermode, other code in rcu_check_callbacks() and
    its called functions will report the corresponding quiescent state.
    
    Reported-by: Marius Hillenbrand <mhillenb@amazon.de>
    Reported-by: David Woodhouse <dwmw2@infradead.org>
    Suggested-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    [ paulmck: Backported to make patch apply cleanly on older versions. ]
    Tested-by: Marius Hillenbrand <mhillenb@amazon.de>
    Cc: <stable@vger.kernel.org> # 4.12.x - 4.19.x
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aef9f7db7e8cf0cd5357e5b449669af1e7cdccad
Author: Janosch Frank <frankja@linux.ibm.com>
Date:   Thu Aug 16 09:02:31 2018 +0100

    s390/mm: Check for valid vma before zapping in gmap_discard
    
    commit 1843abd03250115af6cec0892683e70cf2297c25 upstream.
    
    Userspace could have munmapped the area before doing unmapping from
    the gmap. This would leave us with a valid vmaddr, but an invalid vma
    from which we would try to zap memory.
    
    Let's check before using the vma.
    
    Fixes: 1e133ab296f3 ("s390/mm: split arch/s390/mm/pgtable.c")
    Signed-off-by: Janosch Frank <frankja@linux.ibm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Message-Id: <20180816082432.78828-1-frankja@linux.ibm.com>
    Signed-off-by: Janosch Frank <frankja@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4977f3e8a3a668878543828ceaf40d69b5bfc32
Author: Phil Elwell <phil@raspberrypi.org>
Date:   Thu Apr 19 17:59:38 2018 +0100

    lan78xx: Read MAC address from DT if present
    
    commit 760db29bdc97b73ff60b091315ad787b1deb5cf5 upstream.
    
    There is a standard mechanism for locating and using a MAC address from
    the Device Tree. Use this facility in the lan78xx driver to support
    applications without programmed EEPROM or OTP. At the same time,
    regularise the handling of the different address sources.
    
    Signed-off-by: Phil Elwell <phil@raspberrypi.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Tested-by: Paolo Pisati <p.pisati@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bcfd8f985f2c7bf7be6a08333dfaf31ed58ccd4
Author: Salvatore Mesoraca <s.mesoraca16@gmail.com>
Date:   Thu Aug 23 17:00:35 2018 -0700

    namei: allow restricted O_CREAT of FIFOs and regular files
    
    commit 30aba6656f61ed44cba445a3c0d38b296fa9e8f5 upstream.
    
    Disallows open of FIFOs or regular files not owned by the user in world
    writable sticky directories, unless the owner is the same as that of the
    directory or the file is opened without the O_CREAT flag.  The purpose
    is to make data spoofing attacks harder.  This protection can be turned
    on and off separately for FIFOs and regular files via sysctl, just like
    the symlinks/hardlinks protection.  This patch is based on Openwall's
    "HARDEN_FIFO" feature by Solar Designer.
    
    This is a brief list of old vulnerabilities that could have been prevented
    by this feature, some of them even allow for privilege escalation:
    
    CVE-2000-1134
    CVE-2007-3852
    CVE-2008-0525
    CVE-2009-0416
    CVE-2011-4834
    CVE-2015-1838
    CVE-2015-7442
    CVE-2016-7489
    
    This list is not meant to be complete.  It's difficult to track down all
    vulnerabilities of this kind because they were often reported without any
    mention of this particular attack vector.  In fact, before
    hardlinks/symlinks restrictions, fifos/regular files weren't the favorite
    vehicle to exploit them.
    
    [s.mesoraca16@gmail.com: fix bug reported by Dan Carpenter]
      Link: https://lkml.kernel.org/r/20180426081456.GA7060@mwanda
      Link: http://lkml.kernel.org/r/1524829819-11275-1-git-send-email-s.mesoraca16@gmail.com
    [keescook@chromium.org: drop pr_warn_ratelimited() in favor of audit changes in the future]
    [keescook@chromium.org: adjust commit subjet]
    Link: http://lkml.kernel.org/r/20180416175918.GA13494@beast
    Signed-off-by: Salvatore Mesoraca <s.mesoraca16@gmail.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Suggested-by: Solar Designer <solar@openwall.com>
    Suggested-by: Kees Cook <keescook@chromium.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Loic <hackurx@opensec.fr>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ecab0857ab03cd74bfeeb8946323cf737b12280
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Fri Nov 9 17:21:20 2018 +0200

    usb: xhci: fix uninitialized completion when USB3 port got wrong status
    
    commit 958c0bd86075d4ef1c936998deefe1947e539240 upstream.
    
    Realtek USB3.0 Card Reader [0bda:0328] reports wrong port status on
    Cannon lake PCH USB3.1 xHCI [8086:a36d] after resume from S3,
    after clear port reset it works fine.
    
    Since this device is registered on USB3 roothub at boot,
    when port status reports not superspeed, xhci_get_port_status will call
    an uninitialized completion in bus_state[0].
    Kernel will hang because of NULL pointer.
    
    Restrict the USB2 resume status check in USB2 roothub to fix hang issue.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b008f3b25588868a89e9e4562b4dc641d1032553
Author: Greg Kroah-Hartman <greg@kroah.com>
Date:   Thu Oct 4 11:06:14 2018 -0700

    tty: wipe buffer if not echoing data
    
    commit b97b3d9fb57860a60592859e332de7759fd54c2e upstream.
    
    If we are not echoing the data to userspace or the console is in icanon
    mode, then perhaps it is a "secret" so we should wipe it once we are
    done with it.
    
    This mirrors the logic that the audit code has.
    
    Reported-by: aszlig <aszlig@nix.build>
    Tested-by: Milan Broz <gmazyland@gmail.com>
    Tested-by: Daniel Zatovic <daniel.zatovic@gmail.com>
    Tested-by: aszlig <aszlig@nix.build>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e063b64163be65e2f04588808760e790a889e3c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 4 11:06:13 2018 -0700

    tty: wipe buffer.
    
    commit c9a8e5fce009e3c601a43c49ea9dbcb25d1ffac5 upstream.
    
    After we are done with the tty buffer, zero it out.
    
    Reported-by: aszlig <aszlig@nix.build>
    Tested-by: Milan Broz <gmazyland@gmail.com>
    Tested-by: Daniel Zatovic <daniel.zatovic@gmail.com>
    Tested-by: aszlig <aszlig@nix.build>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a956132ac00bd5a4b2909707f00f8d5366931648
Author: Sebastien Boisvert <sebhtml@videotron.qc.ca>
Date:   Fri Oct 26 15:02:23 2018 -0700

    include/linux/pfn_t.h: force '~' to be parsed as an unary operator
    
    commit 4d54954a197175c0dcb3c82af0c0740d0c5f827a upstream.
    
    Tracing the event "fs_dax:dax_pmd_insert_mapping" with perf produces this
    warning:
    
          [fs_dax:dax_pmd_insert_mapping] unknown op '~'
    
    It is printed in process_op (tools/lib/traceevent/event-parse.c) because
    '~' is parsed as a binary operator.
    
    perf reads the format of fs_dax:dax_pmd_insert_mapping ("print fmt") from
    /sys/kernel/debug/tracing/events/fs_dax/dax_pmd_insert_mapping/format .
    
    The format contains:
    
    ~(((u64) ~(~(((1UL) << 12)-1)))
             ^
             \ interpreted as a binary operator by process_op().
    
    This part is generated in the declaration of the event class
    dax_pmd_insert_mapping_class in include/trace/events/fs_dax.h :
    
                    __print_flags_u64(__entry->pfn_val & PFN_FLAGS_MASK, "|",
                            PFN_FLAGS_TRACE),
    
    This patch adds a pair of parentheses in the declaration of PFN_FLAGS_MASK
    to make sure that '~' is parsed as a unary operator by perf.
    
    The part of the format that was problematic is now:
    
    ~(((u64) (~(~(((1UL) << 12)-1))))
    
    Now, all the '~' are parsed as unary operators.
    
    Link: http://lkml.kernel.org/r/20181021145939.8760-1-sebhtml@videotron.qc.ca
    Signed-off-by: Sebastien Boisvert <sebhtml@videotron.qc.ca>
    Acked-by: Dan Williams <dan.j.williams@intel.com>
    Cc: "Steven Rostedt (VMware)" <rostedt@goodmis.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: "Tzvetomir Stoyanov (VMware)" <tz.stoyanov@gmail.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Ross Zwisler <zwisler@kernel.org>
    Cc: Elenie Godzaridis <arangradient@gmail.com>
    Cc: <stable@vger.kerenl.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8692d9f5ceff240792df5b42ca1639ace77204b
Author: Jeffy Chen <jeffy.chen@rock-chips.com>
Date:   Fri Oct 20 20:01:01 2017 +0800

    driver core: Move device_links_purge() after bus_remove_device()
    
    commit 2ec16150179888b81717d1d3ce84e634f4736af2 upstream.
    
    The current ordering of code in device_del() triggers a WARN_ON()
    in device_links_purge(), because of an unexpected link status.
    
    The device_links_unbind_consumers() call in device_release_driver()
    has to take place before device_links_purge() for the status of all
    links to be correct, so move the device_links_purge() call in
    device_del() after the invocation of bus_remove_device() which calls
    device_release_driver().
    
    Fixes: 9ed9895370ae (driver core: Functional dependencies tracking support)
    Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
    Reviewed-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a46ca4c8f1c64723ce0a9f66638a1343a71bbe3f
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Sat Apr 21 20:26:41 2018 +0200

    ARM: dts: exynos: Fix invalid node referenced by i2c20 alias in Peach Pit and Pi
    
    commit 70c3250ac1374688d7963e562fe58b23f70bcba9 upstream.
    
    After moving all nodes under "soc" node in commit 5d99cc59a3c6 ("ARM:
    dts: exynos: Move Exynos5250 and Exynos5420 nodes under soc"), the i2c20
    alias in Peach Pit and Peach Pi stopped pointing to proper node:
    
        arch/arm/boot/dts/exynos5420-peach-pit.dtb: Warning (alias_paths):
            /aliases:i2c20: aliases property is not a valid node (/spi@12d40000/cros-ec@0/i2c-tunnel)
        arch/arm/boot/dts/exynos5800-peach-pi.dtb: Warning (alias_paths):
            /aliases:i2c20: aliases property is not a valid node (/spi@12d40000/cros-ec@0/i2c-tunnel)
    
    Fixes: 5d99cc59a3c6 ("ARM: dts: exynos: Move Exynos5250 and Exynos5420 nodes under soc")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc32281ec0281ffe2ea57d3157eaae6eb74aef8a
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Tue Mar 13 11:46:12 2018 +0100

    clk: samsung: exynos5250: Add missing clocks for FIMC LITE SYSMMU devices
    
    commit 5b23fceec1ff94305c5d1accde018cae27448005 upstream.
    
    FIMC LITE SYSMMU devices are defined in exynos5250.dtsi, but clocks for
    them are not instantiated by Exynos5250 clock provider driver. Add needed
    definitions for those clocks to fix IOMMU probe failure:
    
    ERROR: could not get clock /soc/sysmmu@13c40000:sysmmu(0)
    exynos-sysmmu 13c40000.sysmmu: Failed to get device clock(s)!
    exynos-sysmmu: probe of 13c40000.sysmmu failed with error -38
    ERROR: could not get clock /soc/sysmmu@13c50000:sysmmu(0)
    exynos-sysmmu 13c50000.sysmmu: Failed to get device clock(s)!
    exynos-sysmmu: probe of 13c50000.sysmmu failed with error -38
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Fixes: bfed1074f213 ("clk: exynos5250: Add missing sysmmu clocks for DISP and ISP blocks")
    Acked-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7eebc934f302922de7c7399db4752956c19f7147
Author: Alexandre Belloni <alexandre.belloni@bootlin.com>
Date:   Fri Oct 13 00:06:44 2017 +0200

    rtc: omap: fix error path when pinctrl_register fails
    
    commit 26e480f7bb7840fc0daa9c3af7c4501b2cf5902f upstream.
    
    If pinctrl_register() fails probe will return with an error without locking
    the RTC and disabling pm_runtime.
    Set ret and jump to err instead.
    
    Fixes: 97ea1906b3c2 ("rtc: omap: Support ext_wakeup configuration")
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 31a673709a853cf28ca4a1bb88e15bf4c0bf099f
Author: Mustafa Ismail <mustafa.ismail@intel.com>
Date:   Mon May 7 12:52:17 2018 -0500

    i40iw: Fix memory leak in error path of create QP
    
    commit 5a7189d529cd146cd5838af97b32fcac4122b471 upstream.
    
    If i40iw_allocate_dma_mem fails when creating a QP, the
    memory allocated for the QP structure using kzalloc is not
    freed because iwqp->allocated_buffer is used to free the
    memory and it is not setup until later. Fix this by setting
    iwqp->allocated_buffer before allocating the dma memory.
    
    Fixes: d37498417947 ("i40iw: add files for iwarp interface")
    Signed-off-by: Mustafa Ismail <mustafa.ismail@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d9cd2bcfc5298109bd90c52f239011337147812
Author: Eran Ben Elisha <eranbe@mellanox.com>
Date:   Wed Dec 13 18:12:10 2017 +0200

    net/mlx4_core: Fix wrong calculation of free counters
    
    commit 0bb9fc4f5429ac970181c073aa32e521e20f7b73 upstream.
    
    The field res_free indicates the total number of counters which are
    available for allocation (reserved and unreserved). Fixed a bug where
    the reserved counters were subtracted from res_free before any
    allocation was performed.
    
    Before this fix, free counters which were not reserved could not be
    allocated.
    
    Fixes: 9de92c60beaa ("net/mlx4_core: Adjust counter grant policy in the resource tracker")
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Reviewed-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7aaa554d09606185650cd1aa422887736b9e1056
Author: Niklas Cassel <niklas.cassel@axis.com>
Date:   Thu Dec 14 14:01:45 2017 +0100

    PCI: endpoint: Populate func_no before calling pci_epc_add_epf()
    
    commit 0c47cd7a9b6c9c36c08113e594e9ad017fb17865 upstream.
    
    func_no is a member of struct pci_epf.
    
    Since struct pci_epf is used as an argument to pci_epc_add_epf() (to
    bind an endpoint function to a controller), struct pci_epf.func_no
    should be populated before calling pci_epc_add_epf().
    
    Initialize the struct pci_epf.func_no member before calling
    pci_epc_add_epf(), to fix the endpoint function binding to
    an endpoint controller.
    
    Fixes: d74679911610 ("PCI: endpoint: Introduce configfs entry for configuring EP functions")
    Signed-off-by: Niklas Cassel <niklas.cassel@axis.com>
    [lorenzo.pieralisi@arm.com: rewrote the commit log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Suggested-by: Kishon Vijay Abraham I <kishon@ti.com>
    Acked-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d844b0e66929e3c3099fe428fe06543bc18b99a
Author: Stefan Agner <stefan@agner.ch>
Date:   Mon Sep 17 19:31:57 2018 -0700

    kbuild: allow to use GCC toolchain not in Clang search path
    
    commit ef8c4ed9db80261f397f0c0bf723684601ae3b52 upstream.
    
    When using a GCC cross toolchain which is not in a compiled in
    Clang search path, Clang reverts to the system assembler and
    linker. This leads to assembler or linker errors, depending on
    which tool is first used for a given architecture.
    
    It seems that Clang is not searching $PATH for a matching
    assembler or linker.
    
    Make sure that Clang picks up the correct assembler or linker by
    passing the cross compilers bin directory as search path.
    
    This allows to use Clang provided by distributions with GCC
    toolchains not in /usr/bin.
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/78
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Reviewed-and-tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    [nc: Adjust context]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1fe2316fc23aa6a23721bf97a4cdd8a88e8213f4
Author: Matt Chen <matt.chen@intel.com>
Date:   Fri Aug 3 14:29:20 2018 +0800

    iwlwifi: fix wrong WGDS_WIFI_DATA_SIZE
    
    commit 66e839030fd698586734e017fd55c4f2a89dba0b upstream.
    
    From coreboot/BIOS:
    Name ("WGDS", Package() {
     Revision,
     Package() {
         DomainType,                         // 0x7:WiFi ==> We miss this one.
         WgdsWiFiSarDeltaGroup1PowerMax1,    // Group 1 FCC 2400 Max
         WgdsWiFiSarDeltaGroup1PowerChainA1, // Group 1 FCC 2400 A Offset
         WgdsWiFiSarDeltaGroup1PowerChainB1, // Group 1 FCC 2400 B Offset
         WgdsWiFiSarDeltaGroup1PowerMax2,    // Group 1 FCC 5200 Max
         WgdsWiFiSarDeltaGroup1PowerChainA2, // Group 1 FCC 5200 A Offset
         WgdsWiFiSarDeltaGroup1PowerChainB2, // Group 1 FCC 5200 B Offset
         WgdsWiFiSarDeltaGroup2PowerMax1,    // Group 2 EC Jap 2400 Max
         WgdsWiFiSarDeltaGroup2PowerChainA1, // Group 2 EC Jap 2400 A Offset
         WgdsWiFiSarDeltaGroup2PowerChainB1, // Group 2 EC Jap 2400 B Offset
         WgdsWiFiSarDeltaGroup2PowerMax2,    // Group 2 EC Jap 5200 Max
         WgdsWiFiSarDeltaGroup2PowerChainA2, // Group 2 EC Jap 5200 A Offset
         WgdsWiFiSarDeltaGroup2PowerChainB2, // Group 2 EC Jap 5200 B Offset
         WgdsWiFiSarDeltaGroup3PowerMax1,    // Group 3 ROW 2400 Max
         WgdsWiFiSarDeltaGroup3PowerChainA1, // Group 3 ROW 2400 A Offset
         WgdsWiFiSarDeltaGroup3PowerChainB1, // Group 3 ROW 2400 B Offset
         WgdsWiFiSarDeltaGroup3PowerMax2,    // Group 3 ROW 5200 Max
         WgdsWiFiSarDeltaGroup3PowerChainA2, // Group 3 ROW 5200 A Offset
         WgdsWiFiSarDeltaGroup3PowerChainB2, // Group 3 ROW 5200 B Offset
     }
    })
    
    When read the ACPI data to find out the WGDS, the DATA_SIZE is never
    matched.
    From the above format, it gives 19 numbers, but our driver is hardcode
    as 18.
    Fix it to pass then can parse the data into our wgds table.
    Then we will see:
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init Sending GEO_TX_POWER_LIMIT
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init SAR geographic profile[0]
    Band[0]: chain A = 68 chain B = 69 max_tx_power = 54
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init SAR geographic profile[0]
    Band[1]: chain A = 48 chain B = 49 max_tx_power = 70
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init SAR geographic profile[1]
    Band[0]: chain A = 51 chain B = 67 max_tx_power = 50
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init SAR geographic profile[1]
    Band[1]: chain A = 69 chain B = 70 max_tx_power = 68
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init SAR geographic profile[2]
    Band[0]: chain A = 49 chain B = 50 max_tx_power = 48
    iwlwifi 0000:01:00.0: U iwl_mvm_sar_geo_init SAR geographic profile[2]
    Band[1]: chain A = 52 chain B = 53 max_tx_power = 51
    
    Cc: stable@vger.kernel.org # 4.12+
    Fixes: a6bff3cb19b7 ("iwlwifi: mvm: add GEO_TX_POWER_LIMIT cmd for geographic tx power table")
    Signed-off-by: Matt Chen <matt.chen@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb4b4647003688e3b3a4e20fef6ca33a029a1e58
Author: Ramses Ramírez <ramzeto@gmail.com>
Date:   Fri Sep 28 16:59:26 2018 -0700

    Input: xpad - add support for Xbox1 PDP Camo series gamepad
    
    [ Upstream commit 9735082a7cbae572c2eabdc45acecc8c9fa0759b ]
    
    The "Xbox One PDP Wired Controller - Camo series" has a different
    product-id than the regular PDP controller and the PDP stealth series,
    but it uses the same initialization sequence. This patch adds the
    product-id of the camo series to the structures that handle the other
    PDP Xbox One controllers.
    
    Signed-off-by: Ramses Ramírez <ramzeto@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d6a81009de5a184da9da76de27961d4abd62092
Author: Marcus Folkesson <marcus.folkesson@gmail.com>
Date:   Tue May 8 15:17:07 2018 -0700

    Input: xpad - avoid using __set_bit() for capabilities
    
    [ Upstream commit a01308031c2647ed5f1c845104b73a8820a958a9 ]
    
    input_set_capability() and input_set_abs_param() will do it for you.
    
    Signed-off-by: Marcus Folkesson <marcus.folkesson@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d3bf6348692bb664da58a07510cd21c1439394e
Author: Leo Sperling <leosperling97@gmail.com>
Date:   Wed Aug 3 17:31:09 2016 -0700

    Input: xpad - fix some coding style issues
    
    [ Upstream commit 68c78d0155e37992268664e134996d2b140ddf38 ]
    
    Fix some coding style issues reported by checkpatch.pl. Mostly brackets
    in macros, spacing and comment style.
    
    Signed-off-by: Leo Sperling <leosperling97@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f299ecb085117412b313094d075e573994c704a0
Author: Francis Therien <frtherien@gmail.com>
Date:   Mon Mar 26 15:59:00 2018 -0700

    Input: xpad - add PDP device id 0x02a4
    
    [ Upstream commit c6c848572f4da0e34ffe0a35364b4db871e13e42 ]
    
    Adds support for a PDP Xbox One controller with device ID
    (0x06ef:0x02a4). The Product string for this device is "PDP Wired
    Controller for Xbox One - Stealth Series | Phantom Black".
    
    Signed-off-by: Francis Therien <frtherien@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da141471e77ba27b9c50f858ff866b4958d9e04c
Author: Richard Weinberger <richard@nod.at>
Date:   Mon May 28 22:04:33 2018 +0200

    ubi: fastmap: Check each mapping only once
    
    commit 34653fd8c46e771585fce5975e4243f8fd401914 upstream.
    
    Maintain a bitmap to keep track of which LEB->PEB mapping
    was checked already.
    That way we have to read back VID headers only once.
    
    Fixes: a23cf10d9abb ("ubi: fastmap: Correctly handle interrupted erasures in EBA")
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Martin Kepplinger <martin.kepplinger@ginzinger.com>

commit 0aa6b111cc44f9aef0be1715e2d8ac8c2e9023cb
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:49 2018 +0200

    mtd: rawnand: atmel: fix OF child-node lookup
    
    commit 5d1e9c2212ea6b4dd735e4fc3dd6279a365d5d10 upstream.
    
    Use the new of_get_compatible_child() helper to lookup the nfc child
    node instead of using of_find_compatible_node(), which searches the
    entire tree from a given start node and thus can return an unrelated
    (i.e. non-child) node.
    
    This also addresses a potential use-after-free (e.g. after probe
    deferral) as the tree-wide helper drops a reference to its first
    argument (i.e. the node of the device being probed).
    
    While at it, also fix a related nfc-node reference leak.
    
    Fixes: f88fc122cc34 ("mtd: nand: Cleanup/rework the atmel_nand driver")
    Cc: stable <stable@vger.kernel.org>     # 4.11
    Cc: Nicolas Ferre <nicolas.ferre@microchip.com>
    Cc: Josh Wu <rainyfeeling@outlook.com>
    Cc: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 649594a678c2aa9bea0693a22753034c35ab42c6
Author: Cherian, George <George.Cherian@cavium.com>
Date:   Fri Nov 9 17:21:22 2018 +0200

    xhci: Add quirk to workaround the errata seen on Cavium Thunder-X2 Soc
    
    commit 11644a7659529730eaf2f166efaabe7c3dc7af8c upstream.
    
    Implement workaround for ThunderX2 Errata-129 (documented in
    CN99XX Known Issues" available at Cavium support site).
    As per ThunderX2errata-129, USB 2 device may come up as USB 1
    if a connection to a USB 1 device is followed by another connection to
    a USB 2 device, the link will come up as USB 1 for the USB 2 device.
    
    Resolution: Reset the PHY after the USB 1 device is disconnected.
    The PHY reset sequence is done using private registers in XHCI register
    space. After the PHY is reset we check for the PLL lock status and retry
    the operation if it fails. From our tests, retrying 4 times is sufficient.
    
    Add a new quirk flag XHCI_RESET_PLL_ON_DISCONNECT to invoke the workaround
    in handle_xhci_port_status().
    
    Cc: stable@vger.kernel.org
    Signed-off-by: George Cherian <george.cherian@cavium.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cd4f18da5ecaf08fbbb61e74434468b63519ecf3
Author: Marc Zyngier <maz@kernel.org>
Date:   Wed May 23 18:41:36 2018 +0100

    xhci: Allow more than 32 quirks
    
    commit 36b6857932f380fcb55c31ac75857e3e81dd583a upstream.
    
    We now have 32 different quirks, and the field that holds them
    is full. Let's bump it up to the next stage so that we can handle
    some more... The type is now an unsigned long long, which is 64bit
    on most architectures.
    
    We take this opportunity to change the quirks from using (1 << x)
    to BIT_ULL(x).
    
    Tested-by: Domenico Andreoli <domenico.andreoli@linux.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Tested-by: Faiz Abbas <faiz_abbas@ti.com>
    Tested-by: Domenico Andreoli <domenico.andreoli@linux.com>
    Acked-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Cc: "Cherian, George" <George.Cherian@cavium.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38f94eca31d47db6429edb1ba6a560db1f34d298
Author: Greg Hackmann <ghackmann@android.com>
Date:   Tue Nov 27 11:15:20 2018 -0800

    arm64: remove no-op -p linker flag
    
    (commit 1a381d4a0a9a0f999a13faaba22bf6b3fc80dcb9 upstream)
    
    Linking the ARM64 defconfig kernel with LLVM lld fails with the error:
    
      ld.lld: error: unknown argument: -p
      Makefile:1015: recipe for target 'vmlinux' failed
    
    Without this flag, the ARM64 defconfig kernel successfully links with
    lld and boots on Dragonboard 410c.
    
    After digging through binutils source and changelogs, it turns out that
    -p is only relevant to ancient binutils installations targeting 32-bit
    ARM.  binutils accepts -p for AArch64 too, but it's always been
    undocumented and silently ignored.  A comment in
    ld/emultempl/aarch64elf.em explains that it's "Only here for backwards
    compatibility".
    
    Since this flag is a no-op on ARM64, we can safely drop it.
    
    Acked-by: Will Deacon <will.deacon@arm.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Hackmann <ghackmann@google.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f2b2c591fc8fd84c70fd591aa13d903e32c2df7
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:53 2018 +0200

    power: supply: twl4030-charger: fix OF sibling-node lookup
    
    [ Upstream commit 9844fb2e351311210e6660a9a1c62d17424a6145 ]
    
    Use the new of_get_compatible_child() helper to lookup the usb sibling
    node instead of using of_find_compatible_node(), which searches the
    entire tree from a given start node and thus can return an unrelated
    (non-sibling) node.
    
    This also addresses a potential use-after-free (e.g. after probe
    deferral) as the tree-wide helper drops a reference to its first
    argument (i.e. the parent device node).
    
    While at it, also fix the related phy-node reference leak.
    
    Fixes: f5e4edb8c888 ("power: twl4030_charger: find associated phy by more reliable means.")
    Cc: stable <stable@vger.kernel.org>     # 4.2
    Cc: NeilBrown <neilb@suse.de>
    Cc: Felipe Balbi <felipe.balbi@linux.intel.com>
    Cc: Sebastian Reichel <sre@kernel.org>
    Reviewed-by: Sebastian Reichel <sre@kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 279eb9ce4cbc20ae82f73fd3b2d05184f8f40d53
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:46 2018 +0200

    drm/mediatek: fix OF sibling-node lookup
    
    [ Upstream commit ceff2f4dcd44abf35864d9a99f85ac619e89a01d ]
    
    Use the new of_get_compatible_child() helper to lookup the sibling
    instead of using of_find_compatible_node(), which searches the entire
    tree from a given start node and thus can return an unrelated (i.e.
    non-sibling) node.
    
    This also addresses a potential use-after-free (e.g. after probe
    deferral) as the tree-wide helper drops a reference to its first
    argument (i.e. the parent device node).
    
    While at it, also fix the related cec-node reference leak.
    
    Fixes: 8f83f26891e1 ("drm/mediatek: Add HDMI support")
    Cc: stable <stable@vger.kernel.org>     # 4.8
    Cc: Junzhi Zhao <junzhi.zhao@mediatek.com>
    Cc: Philipp Zabel <p.zabel@pengutronix.de>
    Cc: CK Hu <ck.hu@mediatek.com>
    Cc: David Airlie <airlied@linux.ie>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f95f0734968025278b6d8b4d0c589b7afeb9c96
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:50 2018 +0200

    net: bcmgenet: fix OF child-node lookup
    
    [ Upstream commit d397dbe606120a1ea1b11b0020c3f7a3852da5ac ]
    
    Use the new of_get_compatible_child() helper to lookup the mdio child
    node instead of using of_find_compatible_node(), which searches the
    entire tree from a given start node and thus can return an unrelated
    (i.e. non-child) node.
    
    This also addresses a potential use-after-free (e.g. after probe
    deferral) as the tree-wide helper drops a reference to its first
    argument (i.e. the node of the device being probed).
    
    Fixes: aa09677cba42 ("net: bcmgenet: add MDIO routines")
    Cc: stable <stable@vger.kernel.org>     # 3.15
    Cc: David S. Miller <davem@davemloft.net>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2ae0ac647a773fc3db57770a202b1c62a66fe3db
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:52 2018 +0200

    NFC: nfcmrvl_uart: fix OF child-node lookup
    
    [ Upstream commit 5bf59773aaf36dd62117dc83d50e1bbf9ef432da ]
    
    Use the new of_get_compatible_child() helper to lookup the nfc child
    node instead of using of_find_compatible_node(), which searches the
    entire tree from a given start node and thus can return an unrelated
    (i.e. non-child) node.
    
    This also addresses a potential use-after-free (e.g. after probe
    deferral) as the tree-wide helper drops a reference to its first
    argument (i.e. the parent node).
    
    Fixes: e097dc624f78 ("NFC: nfcmrvl: add UART driver")
    Fixes: d8e018c0b321 ("NFC: nfcmrvl: update device tree bindings for Marvell NFC")
    Cc: stable <stable@vger.kernel.org>     # 4.2
    Cc: Vincent Cuissard <cuissard@marvell.com>
    Cc: Samuel Ortiz <sameo@linux.intel.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1ede7043d74de0022872921b453d106341fcf93
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Aug 27 10:21:45 2018 +0200

    of: add helper to lookup compatible child node
    
    [ Upstream commit 36156f9241cb0f9e37d998052873ca7501ad4b36 ]
    
    Add of_get_compatible_child() helper that can be used to lookup
    compatible child nodes.
    
    Several drivers currently use of_find_compatible_node() to lookup child
    nodes while failing to notice that the of_find_ functions search the
    entire tree depth-first (from a given start node) and therefore can
    match unrelated nodes. The fact that these functions also drop a
    reference to the node they start searching from (e.g. the parent node)
    is typically also overlooked, something which can lead to use-after-free
    bugs.
    
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6a4b3c3b81b818dc0138c813fd7656aeb78aa11
Author: Michal Hocko <mhocko@suse.com>
Date:   Fri Nov 16 15:08:53 2018 -0800

    mm, page_alloc: check for max order in hot path
    
    [ Upstream commit c63ae43ba53bc432b414fd73dd5f4b01fcb1ab43 ]
    
    Konstantin has noticed that kvmalloc might trigger the following
    warning:
    
      WARNING: CPU: 0 PID: 6676 at mm/vmstat.c:986 __fragmentation_index+0x54/0x60
      [...]
      Call Trace:
       fragmentation_index+0x76/0x90
       compaction_suitable+0x4f/0xf0
       shrink_node+0x295/0x310
       node_reclaim+0x205/0x250
       get_page_from_freelist+0x649/0xad0
       __alloc_pages_nodemask+0x12a/0x2a0
       kmalloc_large_node+0x47/0x90
       __kmalloc_node+0x22b/0x2e0
       kvmalloc_node+0x3e/0x70
       xt_alloc_table_info+0x3a/0x80 [x_tables]
       do_ip6t_set_ctl+0xcd/0x1c0 [ip6_tables]
       nf_setsockopt+0x44/0x60
       SyS_setsockopt+0x6f/0xc0
       do_syscall_64+0x67/0x120
       entry_SYSCALL_64_after_hwframe+0x3d/0xa2
    
    the problem is that we only check for an out of bound order in the slow
    path and the node reclaim might happen from the fast path already.  This
    is fixable by making sure that kvmalloc doesn't ever use kmalloc for
    requests that are larger than KMALLOC_MAX_SIZE but this also shows that
    the code is rather fragile.  A recent UBSAN report just underlines that
    by the following report
    
      UBSAN: Undefined behaviour in mm/page_alloc.c:3117:19
      shift exponent 51 is too large for 32-bit type 'int'
      CPU: 0 PID: 6520 Comm: syz-executor1 Not tainted 4.19.0-rc2 #1
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
      Call Trace:
       __dump_stack lib/dump_stack.c:77 [inline]
       dump_stack+0xd2/0x148 lib/dump_stack.c:113
       ubsan_epilogue+0x12/0x94 lib/ubsan.c:159
       __ubsan_handle_shift_out_of_bounds+0x2b6/0x30b lib/ubsan.c:425
       __zone_watermark_ok+0x2c7/0x400 mm/page_alloc.c:3117
       zone_watermark_fast mm/page_alloc.c:3216 [inline]
       get_page_from_freelist+0xc49/0x44c0 mm/page_alloc.c:3300
       __alloc_pages_nodemask+0x21e/0x640 mm/page_alloc.c:4370
       alloc_pages_current+0xcc/0x210 mm/mempolicy.c:2093
       alloc_pages include/linux/gfp.h:509 [inline]
       __get_free_pages+0x12/0x60 mm/page_alloc.c:4414
       dma_mem_alloc+0x36/0x50 arch/x86/include/asm/floppy.h:156
       raw_cmd_copyin drivers/block/floppy.c:3159 [inline]
       raw_cmd_ioctl drivers/block/floppy.c:3206 [inline]
       fd_locked_ioctl+0xa00/0x2c10 drivers/block/floppy.c:3544
       fd_ioctl+0x40/0x60 drivers/block/floppy.c:3571
       __blkdev_driver_ioctl block/ioctl.c:303 [inline]
       blkdev_ioctl+0xb3c/0x1a30 block/ioctl.c:601
       block_ioctl+0x105/0x150 fs/block_dev.c:1883
       vfs_ioctl fs/ioctl.c:46 [inline]
       do_vfs_ioctl+0x1c0/0x1150 fs/ioctl.c:687
       ksys_ioctl+0x9e/0xb0 fs/ioctl.c:702
       __do_sys_ioctl fs/ioctl.c:709 [inline]
       __se_sys_ioctl fs/ioctl.c:707 [inline]
       __x64_sys_ioctl+0x7e/0xc0 fs/ioctl.c:707
       do_syscall_64+0xc4/0x510 arch/x86/entry/common.c:290
       entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Note that this is not a kvmalloc path.  It is just that the fast path
    really depends on having sanitzed order as well.  Therefore move the
    order check to the fast path.
    
    Link: http://lkml.kernel.org/r/20181113094305.GM15120@dhcp22.suse.cz
    Signed-off-by: Michal Hocko <mhocko@suse.com>
    Reported-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Reported-by: Kyungtae Kim <kt0755@gmail.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Balbir Singh <bsingharora@gmail.com>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Cc: Pavel Tatashin <pavel.tatashin@microsoft.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Cc: Aaron Lu <aaron.lu@intel.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: Byoungyoung Lee <lifeasageek@gmail.com>
    Cc: "Dae R. Jeong" <threeearcat@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a84c872c8b306e11c95c4912f4bed7f567e901b4
Author: Yufen Yu <yuyufen@huawei.com>
Date:   Fri Nov 16 15:08:39 2018 -0800

    tmpfs: make lseek(SEEK_DATA/SEK_HOLE) return ENXIO with a negative offset
    
    [ Upstream commit 1a413646931cb14442065cfc17561e50f5b5bb44 ]
    
    Other filesystems such as ext4, f2fs and ubifs all return ENXIO when
    lseek (SEEK_DATA or SEEK_HOLE) requests a negative offset.
    
    man 2 lseek says
    
    :      EINVAL whence  is  not  valid.   Or: the resulting file offset would be
    :             negative, or beyond the end of a seekable device.
    :
    :      ENXIO  whence is SEEK_DATA or SEEK_HOLE, and the file offset is  beyond
    :             the end of the file.
    
    Make tmpfs return ENXIO under these circumstances as well.  After this,
    tmpfs also passes xfstests's generic/448.
    
    [akpm@linux-foundation.org: rewrite changelog]
    Link: http://lkml.kernel.org/r/1540434176-14349-1-git-send-email-yuyufen@huawei.com
    Signed-off-by: Yufen Yu <yuyufen@huawei.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: William Kucharski <william.kucharski@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e28ae7aaa9920570820c1af795663df317946ad7
Author: Vitaly Wool <vitalywool@gmail.com>
Date:   Fri Nov 16 15:07:56 2018 -0800

    z3fold: fix possible reclaim races
    
    [ Upstream commit ca0246bb97c23da9d267c2107c07fb77e38205c9 ]
    
    Reclaim and free can race on an object which is basically fine but in
    order for reclaim to be able to map "freed" object we need to encode
    object length in the handle.  handle_to_chunks() is then introduced to
    extract object length from a handle and use it during mapping.
    
    Moreover, to avoid racing on a z3fold "headless" page release, we should
    not try to free that page in z3fold_free() if the reclaim bit is set.
    Also, in the unlikely case of trying to reclaim a page being freed, we
    should not proceed with that page.
    
    While at it, fix the page accounting in reclaim function.
    
    This patch supersedes "[PATCH] z3fold: fix reclaim lock-ups".
    
    Link: http://lkml.kernel.org/r/20181105162225.74e8837d03583a9b707cf559@gmail.com
    Signed-off-by: Vitaly Wool <vitaly.vul@sony.com>
    Signed-off-by: Jongseok Kim <ks77sj@gmail.com>
    Reported-by-by: Jongseok Kim <ks77sj@gmail.com>
    Reviewed-by: Snild Dolkow <snild@sony.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6bfb89267efe3ae5eef1fc11984fae3dcd95137
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Wed Nov 14 09:55:41 2018 -0800

    efi/arm: Revert deferred unmap of early memmap mapping
    
    [ Upstream commit 33412b8673135b18ea42beb7f5117ed0091798b6 ]
    
    Commit:
    
      3ea86495aef2 ("efi/arm: preserve early mapping of UEFI memory map longer for BGRT")
    
    deferred the unmap of the early mapping of the UEFI memory map to
    accommodate the ACPI BGRT code, which looks up the memory type that
    backs the BGRT table to validate it against the requirements of the UEFI spec.
    
    Unfortunately, this causes problems on ARM, which does not permit
    early mappings to persist after paging_init() is called, resulting
    in a WARN() splat. Since we don't support the BGRT table on ARM anway,
    let's revert ARM to the old behaviour, which is to take down the
    early mapping at the end of efi_init().
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Fixes: 3ea86495aef2 ("efi/arm: preserve early mapping of UEFI memory ...")
    Link: http://lkml.kernel.org/r/20181114175544.12860-3-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a968a024116dc75b9488744a4711b0166ac3172
Author: Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>
Date:   Thu Nov 8 10:47:56 2018 +0530

    powerpc/numa: Suppress "VPHN is not supported" messages
    
    [ Upstream commit 437ccdc8ce629470babdda1a7086e2f477048cbd ]
    
    When VPHN function is not supported and during cpu hotplug event,
    kernel prints message 'VPHN function not supported. Disabling
    polling...'. Currently it prints on every hotplug event, it floods
    dmesg when a KVM guest tries to hotplug huge number of vcpus, let's
    just print once and suppress further kernel prints.
    
    Signed-off-by: Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 281a4f41c6be4f6c09859f1877ab7a8b294ead62
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Thu Sep 20 08:59:14 2018 -0400

    kdb: Use strscpy with destination buffer size
    
    [ Upstream commit c2b94c72d93d0929f48157eef128c4f9d2e603ce ]
    
    gcc 8.1.0 warns with:
    
    kernel/debug/kdb/kdb_support.c: In function ‘kallsyms_symbol_next’:
    kernel/debug/kdb/kdb_support.c:239:4: warning: ‘strncpy’ specified bound depends on the length of the source argument [-Wstringop-overflow=]
         strncpy(prefix_name, name, strlen(name)+1);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    kernel/debug/kdb/kdb_support.c:239:31: note: length computed here
    
    Use strscpy() with the destination buffer size, and use ellipses when
    displaying truncated symbols.
    
    v2: Use strscpy()
    
    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Cc: Jonathan Toppins <jtoppins@redhat.com>
    Cc: Jason Wessel <jason.wessel@windriver.com>
    Cc: Daniel Thompson <daniel.thompson@linaro.org>
    Cc: kgdb-bugreport@lists.sourceforge.net
    Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Daniel Thompson <daniel.thompson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 677805a95934eb37bcc2482766d6160e6d216d98
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Nov 12 16:06:51 2018 -0500

    SUNRPC: Fix a bogus get/put in generic_key_to_expire()
    
    [ Upstream commit e3d5e573a54dabdc0f9f3cb039d799323372b251 ]
    
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e1f0f55f27883820021a6cbc69deba0576098d0d
Author: Kan Liang <kan.liang@linux.intel.com>
Date:   Fri Oct 19 10:04:18 2018 -0700

    perf/x86/intel/uncore: Add more IMC PCI IDs for KabyLake and CoffeeLake CPUs
    
    [ Upstream commit c10a8de0d32e95b0b8c7c17b6dc09baea5a5a899 ]
    
    KabyLake and CoffeeLake CPUs have the same client uncore events as SkyLake.
    
    Add the PCI IDs for the KabyLake Y, U, S processor lines and CoffeeLake U,
    H, S processor lines.
    
    Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Link: http://lkml.kernel.org/r/20181019170419.378-1-kan.liang@linux.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5e236ba5bcdd95751980558b7af5519d05e19d1
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Nov 6 23:37:58 2018 +1100

    powerpc/io: Fix the IO workarounds code to work with Radix
    
    [ Upstream commit 43c6494fa1499912c8177e71450c0279041152a6 ]
    
    Back in 2006 Ben added some workarounds for a misbehaviour in the
    Spider IO bridge used on early Cell machines, see commit
    014da7ff47b5 ("[POWERPC] Cell "Spider" MMIO workarounds"). Later these
    were made to be generic, ie. not tied specifically to Spider.
    
    The code stashes a token in the high bits (59-48) of virtual addresses
    used for IO (eg. returned from ioremap()). This works fine when using
    the Hash MMU, but when we're using the Radix MMU the bits used for the
    token overlap with some of the bits of the virtual address.
    
    This is because the maximum virtual address is larger with Radix, up
    to c00fffffffffffff, and in fact we use that high part of the address
    range for ioremap(), see RADIX_KERN_IO_START.
    
    As it happens the bits that are used overlap with the bits that
    differentiate an IO address vs a linear map address. If the resulting
    address lies outside the linear mapping we will crash (see below), if
    not we just corrupt memory.
    
      virtio-pci 0000:00:00.0: Using 64-bit direct DMA at offset 800000000000000
      Unable to handle kernel paging request for data at address 0xc000000080000014
      ...
      CFAR: c000000000626b98 DAR: c000000080000014 DSISR: 42000000 IRQMASK: 0
      GPR00: c0000000006c54fc c00000003e523378 c0000000016de600 0000000000000000
      GPR04: c00c000080000014 0000000000000007 0fffffff000affff 0000000000000030
             ^^^^
      ...
      NIP [c000000000626c5c] .iowrite8+0xec/0x100
      LR [c0000000006c992c] .vp_reset+0x2c/0x90
      Call Trace:
        .pci_bus_read_config_dword+0xc4/0x120 (unreliable)
        .register_virtio_device+0x13c/0x1c0
        .virtio_pci_probe+0x148/0x1f0
        .local_pci_probe+0x68/0x140
        .pci_device_probe+0x164/0x220
        .really_probe+0x274/0x3b0
        .driver_probe_device+0x80/0x170
        .__driver_attach+0x14c/0x150
        .bus_for_each_dev+0xb8/0x130
        .driver_attach+0x34/0x50
        .bus_add_driver+0x178/0x2f0
        .driver_register+0x90/0x1a0
        .__pci_register_driver+0x6c/0x90
        .virtio_pci_driver_init+0x2c/0x40
        .do_one_initcall+0x64/0x280
        .kernel_init_freeable+0x36c/0x474
        .kernel_init+0x24/0x160
        .ret_from_kernel_thread+0x58/0x7c
    
    This hasn't been a problem because CONFIG_PPC_IO_WORKAROUNDS which
    enables this code is usually not enabled. It is only enabled when it's
    selected by PPC_CELL_NATIVE which is only selected by
    PPC_IBM_CELL_BLADE and that in turn depends on BIG_ENDIAN. So in order
    to hit the bug you need to build a big endian kernel, with IBM Cell
    Blade support enabled, as well as Radix MMU support, and then boot
    that on Power9 using Radix MMU.
    
    Still we can fix the bug, so let's do that. We simply use fewer bits
    for the token, taking the union of the restrictions on the address
    from both Hash and Radix, we end up with 8 bits we can use for the
    token. The only user of the token is iowa_mem_find_bus() which only
    supports 8 token values, so 8 bits is plenty for that.
    
    Fixes: 566ca99af026 ("powerpc/mm/radix: Add dummy radix_enabled()")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5565c30a0bc770764cd085db881bc7a9f5e9d63c
Author: Jens Axboe <axboe@kernel.dk>
Date:   Fri Nov 9 15:58:40 2018 -0700

    floppy: fix race condition in __floppy_read_block_0()
    
    [ Upstream commit de7b75d82f70c5469675b99ad632983c50b6f7e7 ]
    
    LKP recently reported a hang at bootup in the floppy code:
    
    [  245.678853] INFO: task mount:580 blocked for more than 120 seconds.
    [  245.679906]       Tainted: G                T 4.19.0-rc6-00172-ga9f38e1 #1
    [  245.680959] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [  245.682181] mount           D 6372   580      1 0x00000004
    [  245.683023] Call Trace:
    [  245.683425]  __schedule+0x2df/0x570
    [  245.683975]  schedule+0x2d/0x80
    [  245.684476]  schedule_timeout+0x19d/0x330
    [  245.685090]  ? wait_for_common+0xa5/0x170
    [  245.685735]  wait_for_common+0xac/0x170
    [  245.686339]  ? do_sched_yield+0x90/0x90
    [  245.686935]  wait_for_completion+0x12/0x20
    [  245.687571]  __floppy_read_block_0+0xfb/0x150
    [  245.688244]  ? floppy_resume+0x40/0x40
    [  245.688844]  floppy_revalidate+0x20f/0x240
    [  245.689486]  check_disk_change+0x43/0x60
    [  245.690087]  floppy_open+0x1ea/0x360
    [  245.690653]  __blkdev_get+0xb4/0x4d0
    [  245.691212]  ? blkdev_get+0x1db/0x370
    [  245.691777]  blkdev_get+0x1f3/0x370
    [  245.692351]  ? path_put+0x15/0x20
    [  245.692871]  ? lookup_bdev+0x4b/0x90
    [  245.693539]  blkdev_get_by_path+0x3d/0x80
    [  245.694165]  mount_bdev+0x2a/0x190
    [  245.694695]  squashfs_mount+0x10/0x20
    [  245.695271]  ? squashfs_alloc_inode+0x30/0x30
    [  245.695960]  mount_fs+0xf/0x90
    [  245.696451]  vfs_kern_mount+0x43/0x130
    [  245.697036]  do_mount+0x187/0xc40
    [  245.697563]  ? memdup_user+0x28/0x50
    [  245.698124]  ksys_mount+0x60/0xc0
    [  245.698639]  sys_mount+0x19/0x20
    [  245.699167]  do_int80_syscall_32+0x61/0x130
    [  245.699813]  entry_INT80_32+0xc7/0xc7
    
    showing that we never complete that read request. The reason is that
    the completion setup is racy - it initializes the completion event
    AFTER submitting the IO, which means that the IO could complete
    before/during the init. If it does, we are passing garbage to
    complete() and we may sleep forever waiting for the event to
    occur.
    
    Fixes: 7b7b68bba5ef ("floppy: bail out in open() if drive is not responding to block0 read")
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66da887d8732b75b9dccc92b75d3972381fe62c7
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Thu Nov 8 23:55:16 2018 +0100

    crypto: simd - correctly take reqsize of wrapped skcipher into account
    
    [ Upstream commit 508a1c4df085a547187eed346f1bfe5e381797f1 ]
    
    The simd wrapper's skcipher request context structure consists
    of a single subrequest whose size is taken from the subordinate
    skcipher. However, in simd_skcipher_init(), the reqsize that is
    retrieved is not from the subordinate skcipher but from the
    cryptd request structure, whose size is completely unrelated to
    the actual wrapped skcipher.
    
    Reported-by: Qian Cai <cai@gmx.us>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Tested-by: Qian Cai <cai@gmx.us>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e4fbdc7a308957c98d4599255a7a700ec92ca1c
Author: Xulin Sun <xulin.sun@windriver.com>
Date:   Tue Nov 6 16:42:19 2018 +0800

    rtc: pcf2127: fix a kmemleak caused in pcf2127_i2c_gather_write
    
    [ Upstream commit 9bde0afb7a906f1dabdba37162551565740b862d ]
    
    pcf2127_i2c_gather_write() allocates memory as local variable
    for i2c_master_send(), after finishing the master transfer,
    the allocated memory should be freed. The kmemleak is reported:
    
    unreferenced object 0xffff80231e7dba80 (size 64):
      comm "hwclock", pid 27762, jiffies 4296880075 (age 356.944s)
      hex dump (first 32 bytes):
        03 00 12 03 19 02 11 13 00 80 98 18 00 00 ff ff ................
        00 50 00 00 00 00 00 00 02 00 00 00 00 00 00 00 .P..............
      backtrace:
        [<ffff000008221398>] create_object+0xf8/0x278
        [<ffff000008a96264>] kmemleak_alloc+0x74/0xa0
        [<ffff00000821070c>] __kmalloc+0x1ac/0x348
        [<ffff0000087ed1dc>] pcf2127_i2c_gather_write+0x54/0xf8
        [<ffff0000085fd9d4>] _regmap_raw_write+0x464/0x850
        [<ffff0000085fe3f4>] regmap_bulk_write+0x1a4/0x348
        [<ffff0000087ed32c>] pcf2127_rtc_set_time+0xac/0xe8
        [<ffff0000087eaad8>] rtc_set_time+0x80/0x138
        [<ffff0000087ebfb0>] rtc_dev_ioctl+0x398/0x610
        [<ffff00000823f2c0>] do_vfs_ioctl+0xb0/0x848
        [<ffff00000823fae4>] SyS_ioctl+0x8c/0xa8
        [<ffff000008083ac0>] el0_svc_naked+0x34/0x38
        [<ffffffffffffffff>] 0xffffffffffffffff
    
    Signed-off-by: Xulin Sun <xulin.sun@windriver.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit abaf1eb8132120f80071137cf5421a1c1eb7d720
Author: Anson Huang <anson.huang@nxp.com>
Date:   Mon Nov 5 00:59:28 2018 +0000

    cpufreq: imx6q: add return value check for voltage scale
    
    [ Upstream commit 6ef28a04d1ccf718eee069b72132ce4aa1e52ab9 ]
    
    Add return value check for voltage scale when ARM clock
    rate change fail.
    
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6af32ab13852790718ed3fb63cd09fc4d3e8afa3
Author: Scott Wood <oss@buserror.net>
Date:   Tue Nov 6 19:49:34 2018 -0600

    KVM: PPC: Move and undef TRACE_INCLUDE_PATH/FILE
    
    [ Upstream commit 28c5bcf74fa07c25d5bd118d1271920f51ce2a98 ]
    
    TRACE_INCLUDE_PATH and TRACE_INCLUDE_FILE are used by
    <trace/define_trace.h>, so like that #include, they should
    be outside #ifdef protection.
    
    They also need to be #undefed before defining, in case multiple trace
    headers are included by the same C file.  This became the case on
    book3e after commit cf4a6085151a ("powerpc/mm: Add missing tracepoint for
    tlbie"), leading to the following build error:
    
       CC      arch/powerpc/kvm/powerpc.o
    In file included from arch/powerpc/kvm/powerpc.c:51:0:
    arch/powerpc/kvm/trace.h:9:0: error: "TRACE_INCLUDE_PATH" redefined
    [-Werror]
      #define TRACE_INCLUDE_PATH .
      ^
    In file included from arch/powerpc/kvm/../mm/mmu_decl.h:25:0,
                      from arch/powerpc/kvm/powerpc.c:48:
    ./arch/powerpc/include/asm/trace.h:224:0: note: this is the location of
    the previous definition
      #define TRACE_INCLUDE_PATH asm
      ^
    cc1: all warnings being treated as errors
    
    Reported-by: Christian Zigotzky <chzigotzky@xenosoft.de>
    Signed-off-by: Scott Wood <oss@buserror.net>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6dce186b48bbf6abbe207a9f18deaaa6b6363d22
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Tue Oct 23 18:03:19 2018 +0200

    pinctrl: meson: fix pinconf bias disable
    
    [ Upstream commit e39f9dd8206ad66992ac0e6218ef1ba746f2cce9 ]
    
    If a bias is enabled on a pin of an Amlogic SoC, calling .pin_config_set()
    with PIN_CONFIG_BIAS_DISABLE will not disable the bias. Instead it will
    force a pull-down bias on the pin.
    
    Instead of the pull type register bank, the driver should access the pull
    enable register bank.
    
    Fixes: 6ac730951104 ("pinctrl: add driver for Amlogic Meson SoCs")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 240ec6ca4b9a2f05bf1190e37c637820fcfbeecd
Author: Michael J. Ruhl <michael.j.ruhl@intel.com>
Date:   Mon Sep 10 09:39:03 2018 -0700

    IB/hfi1: Eliminate races in the SDMA send error path
    
    commit a0e0cb82804a6a21d9067022c2dfdf80d11da429 upstream.
    
    pq_update() can only be called in two places: from the completion
    function when the complete (npkts) sequence of packets has been
    submitted and processed, or from setup function if a subset of the
    packets were submitted (i.e. the error path).
    
    Currently both paths can call pq_update() if an error occurrs.  This
    race will cause the n_req value to go negative, hanging file_close(),
    or cause a crash by freeing the txlist more than once.
    
    Several variables are used to determine SDMA send state.  Most of
    these are unnecessary, and have code inspectible races between the
    setup function and the completion function, in both the send path and
    the error path.
    
    The request 'status' value can be set by the setup or by the
    completion function.  This is code inspectibly racy.  Since the status
    is not needed in the completion code or by the caller it has been
    removed.
    
    The request 'done' value races between usage by the setup and the
    completion function.  The completion function does not need this.
    When the number of processed packets matches npkts, it is done.
    
    The 'has_error' value races between usage of the setup and the
    completion function.  This can cause incorrect error handling and leave
    the n_req in an incorrect value (i.e. negative).
    
    Simplify the code by removing all of the unneeded state checks and
    variables.
    
    Clean up iovs node when it is freed.
    
    Eliminate race conditions in the error path:
    
    If all packets are submitted, the completion handler will set the
    completion status correctly (ok or aborted).
    
    If all packets are not submitted, the caller must wait until the
    submitted packets have completed, and then set the completion status.
    
    These two change eliminate the race condition in the error path.
    
    Reviewed-by: Mitko Haralanov <mitko.haralanov@intel.com>
    Reviewed-by: Mike Marciniszyn <mike.marciniszyn@intel.com>
    Signed-off-by: Michael J. Ruhl <michael.j.ruhl@intel.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d0724cecb0ebfcf161277fc4c44616a2f9d1e0c
Author: Lukas Wunner <lukas@wunner.de>
Date:   Sat Oct 27 10:36:54 2018 +0200

    can: hi311x: Use level-triggered interrupt
    
    commit f164d0204b1156a7e0d8d1622c1a8d25752befec upstream.
    
    If the hi3110 shares the SPI bus with another traffic-intensive device
    and packets are received in high volume (by a separate machine sending
    with "cangen -g 0 -i -x"), reception stops after a few minutes and the
    counter in /proc/interrupts stops incrementing.  Bus state is "active".
    Bringing the interface down and back up reconvenes the reception.  The
    issue is not observed when the hi3110 is the sole device on the SPI bus.
    
    Using a level-triggered interrupt makes the issue go away and lets the
    hi3110 successfully receive 2 GByte over the course of 5 days while a
    ks8851 Ethernet chip on the same SPI bus handles 6 GByte of traffic.
    
    Unfortunately the hi3110 datasheet is mum on the trigger type.  The pin
    description on page 3 only specifies the polarity (active high):
    http://www.holtic.com/documents/371-hi-3110_v-rev-kpdf.do
    
    Cc: Mathias Duckeck <m.duckeck@kunbus.de>
    Cc: Akshay Bhat <akshay.bhat@timesys.com>
    Cc: Casey Fitzpatrick <casey.fitzpatrick@timesys.com>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9af977aeef27001698133948fd44fa7e59a5901d
Author: Oliver Hartkopp <socketcan@hartkopp.net>
Date:   Wed Oct 24 10:27:12 2018 +0200

    can: raw: check for CAN FD capable netdev in raw_sendmsg()
    
    commit a43608fa77213ad5ac5f75994254b9f65d57cfa0 upstream.
    
    When the socket is CAN FD enabled it can handle CAN FD frame
    transmissions.  Add an additional check in raw_sendmsg() as a CAN2.0 CAN
    driver (non CAN FD) should never see a CAN FD frame. Due to the commonly
    used can_dropped_invalid_skb() function the CAN 2.0 driver would drop
    that CAN FD frame anyway - but with this patch the user gets a proper
    -EINVAL return code.
    
    Signed-off-by: Oliver Hartkopp <socketcan@hartkopp.net>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30b996ac6e61e9a39d6bec70ec4e39daeeeff8b6
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Tue Sep 18 11:40:40 2018 +0200

    can: rx-offload: rename can_rx_offload_irq_queue_err_skb() to can_rx_offload_queue_tail()
    
    commit 4530ec36bb1e0d24f41c33229694adacda3d5d89 upstream.
    
    This function has nothing todo with error.
    
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb8813be5cc7a0134e5bd8584005b189223f237c
Author: Oleksij Rempel <linux@rempel-privat.de>
Date:   Tue Sep 18 11:40:38 2018 +0200

    can: rx-offload: introduce can_rx_offload_get_echo_skb() and can_rx_offload_queue_sorted() functions
    
    commit 55059f2b7f868cd43b3ad30e28e18347e1b46ace upstream.
    
    Current CAN framework can't guarantee proper/chronological order
    of RX and TX-ECHO messages. To make this possible, drivers should use
    this functions instead of can_get_echo_skb().
    
    Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 906ed1bdf850851b3433e4f5521b406651643b27
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 31 14:15:13 2018 +0100

    can: dev: __can_get_echo_skb(): print error message, if trying to echo non existing skb
    
    commit 7da11ba5c5066dadc2e96835a6233d56d7b7764a upstream.
    
    Prior to echoing a successfully transmitted CAN frame (by calling
    can_get_echo_skb()), CAN drivers have to put the CAN frame (by calling
    can_put_echo_skb() in the transmit function). These put and get function
    take an index as parameter, which is used to identify the CAN frame.
    
    A driver calling can_get_echo_skb() with a index not pointing to a skb
    is a BUG, so add an appropriate error message.
    
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf991335b02d62e067e09471b15cf2216d54d5cf
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 31 14:05:26 2018 +0100

    can: dev: __can_get_echo_skb(): Don't crash the kernel if can_priv::echo_skb is accessed out of bounds
    
    commit e7a6994d043a1e31d5b17706a22ce33d2a3e4cdc upstream.
    
    If the "struct can_priv::echo_skb" is accessed out of bounds would lead
    to a kernel crash. Better print a sensible warning message instead and
    try to recover.
    
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f6b2bbbee20a5aa52eed1aaea65cdab98aed8c6
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 31 11:08:21 2018 +0100

    can: dev: __can_get_echo_skb(): replace struct can_frame by canfd_frame to access frame length
    
    commit 200f5c49f7a2cd694436bfc6cb0662b794c96736 upstream.
    
    This patch replaces the use of "struct can_frame::can_dlc" by "struct
    canfd_frame::len" to access the frame's length. As it is ensured that
    both structures have a compatible memory layout for this member this is
    no functional change. Futher, this compatibility is documented in a
    comment.
    
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3f1f493529e060fd3e9d4fe5b406f8379b24d71
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Oct 31 10:37:46 2018 +0100

    can: dev: can_get_echo_skb(): factor out non sending code to __can_get_echo_skb()
    
    commit a4310fa2f24687888ce80fdb0e88583561a23700 upstream.
    
    This patch factors out all non sending parts of can_get_echo_skb() into
    a seperate function __can_get_echo_skb(), so that it can be re-used in
    an upcoming patch.
    
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dca24b512763930963408ea5c78a2f223a73a2a8
Author: Thomas Zimmermann <tzimmermann@suse.de>
Date:   Thu Nov 15 11:42:16 2018 +0100

    drm/ast: Remove existing framebuffers before loading driver
    
    commit 5478ad10e7850ce3d8b7056db05ddfa3c9ddad9a upstream.
    
    If vesafb attaches to the AST device, it configures the framebuffer memory
    for uncached access by default. When ast.ko later tries to attach itself to
    the device, it wants to use write-combining on the framebuffer memory, but
    vesefb's existing configuration for uncached access takes precedence. This
    results in reduced performance.
    
    Removing the framebuffer's configuration before loding the AST driver fixes
    the problem. Other DRM drivers already contain equivalent code.
    
    Link: https://bugzilla.opensuse.org/show_bug.cgi?id=1112963
    Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
    Cc: <stable@vger.kernel.org>
    Tested-by: Y.C. Chen <yc_chen@aspeedtech.com>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Tested-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ffc3c0ffbb93be9b1b75f0a71ba38501039f5180
Author: Y.C. Chen <yc_chen@aspeedtech.com>
Date:   Tue Oct 30 11:34:46 2018 +0800

    drm/ast: fixed cursor may disappear sometimes
    
    commit 7989b9ee8bafe5cc625381dd0c3c4586de27ca26 upstream.
    
    Signed-off-by: Y.C. Chen <yc_chen@aspeedtech.com>
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e51b0b1c1f015c72315a2706e043cd9665af73cc
Author: Y.C. Chen <yc_chen@aspeedtech.com>
Date:   Wed Oct 3 14:57:47 2018 +0800

    drm/ast: change resolution may cause screen blurred
    
    commit 1a37bd823891568f8721989aed0615835632d81a upstream.
    
    The value of pitches is not correct while calling mode_set.
    The issue we found so far on following system:
    - Debian8 with XFCE Desktop
    - Ubuntu with KDE Desktop
    - SUSE15 with KDE Desktop
    
    Signed-off-by: Y.C. Chen <yc_chen@aspeedtech.com>
    Cc: <stable@vger.kernel.org>
    Tested-by: Jean Delvare <jdelvare@suse.de>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d84bb18ed7a29a3a571feed8ed36ee2c3e58d1bc
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Thu Nov 15 11:38:41 2018 +0200

    usb: xhci: Prevent bus suspend if a port connect change or polling state is detected
    
    commit 2f31a67f01a8beb22cae754c53522cb61a005750 upstream.
    
    USB3 roothub might autosuspend before a plugged USB3 device is detected,
    causing USB3 device enumeration failure.
    
    USB3 devices don't show up as connected and enabled until USB3 link trainig
    completes. On a fast booting platform with a slow USB3 link training the
    link might reach the connected enabled state just as the bus is suspending.
    
    If this device is discovered first time by the xhci_bus_suspend() routine
    it will be put to U3 suspended state like the other ports which failed to
    suspend earlier.
    
    The hub thread will notice the connect change and resume the bus,
    moving the port back to U0
    
    This U0 -> U3 -> U0 transition right after being connected seems to be
    too much for some devices, causing them to first go to SS.Inactive state,
    and finally end up stuck in a polling state with reset asserted
    
    Fix this by failing the bus suspend if a port has a connect change or is
    in a polling state in xhci_bus_suspend().
    
    Don't do any port changes until all ports are checked, buffer all port
    changes and only write them in the end if suspend can proceed
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c271b660b798998c926d2d62b47d0cd4d97d8d2e
Author: Parav Pandit <parav@mellanox.com>
Date:   Tue Jan 9 15:24:50 2018 +0200

    IB/core: Perform modify QP on real one
    
    commit b2bedfb39541a7e14798d066b6f8685d84c8fcf5 upstream.
    
    Currently qp->port stores the port number whenever IB_QP_PORT
    QP attribute mask is set (during QP state transition to INIT state).
    This port number should be stored for the real QP when XRC target QP
    is used.
    
    Follow the ib_modify_qp() implementation and hide the access to ->real_qp.
    
    Fixes: a512c2fbef9c ("IB/core: Introduce modify QP operation with udata")
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6ddc2c3d89c8ed3266d83254a0c11798f33502e
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 1 23:24:26 2018 -0700

    tcp: do not release socket ownership in tcp_close()
    
    commit 8873c064d1de579ea23412a6d3eee972593f142b upstream.
    
    syzkaller was able to hit the WARN_ON(sock_owned_by_user(sk));
    in tcp_close()
    
    While a socket is being closed, it is very possible other
    threads find it in rtnetlink dump.
    
    tcp_get_info() will acquire the socket lock for a short amount
    of time (slow = lock_sock_fast(sk)/unlock_sock_fast(sk, slow);),
    enough to trigger the warning.
    
    Fixes: 67db3e4bfbc9 ("tcp: no longer hold ehash lock while calling tcp_get_info()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b43a9978a6b000cf05d19f8765eba0434817f94
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Fri Oct 26 15:09:01 2018 -0700

    mm/memory.c: recheck page table entry with page table lock held
    
    commit ff09d7ec9786be4ad7589aa987d7dc66e2dd9160 upstream.
    
    We clear the pte temporarily during read/modify/write update of the pte.
    If we take a page fault while the pte is cleared, the application can get
    SIGBUS.  One such case is with remap_pfn_range without a backing
    vm_ops->fault callback.  do_fault will return SIGBUS in that case.
    
    cpu 0                                           cpu1
    mprotect()
    ptep_modify_prot_start()/pte cleared.
    .
    .                                               page fault.
    .
    .
    prep_modify_prot_commit()
    
    Fix this by taking page table lock and rechecking for pte_none.
    
    [aneesh.kumar@linux.ibm.com: fix crash observed with syzkaller run]
      Link: http://lkml.kernel.org/r/87va6bwlfg.fsf@linux.ibm.com
    Link: http://lkml.kernel.org/r/20180926031858.9692-1-aneesh.kumar@linux.ibm.com
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Willem de Bruijn <willemdebruijn.kernel@gmail.com>
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Cc: Ido Schimmel <idosch@idosch.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97764043885cd2aa6017891948a6705e4f1086e8
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Fri Oct 26 15:03:12 2018 -0700

    mm: don't warn about large allocations for slab
    
    commit 61448479a9f2c954cde0cfe778cb6bec5d0a748d upstream.
    
    Slub does not call kmalloc_slab() for sizes > KMALLOC_MAX_CACHE_SIZE,
    instead it falls back to kmalloc_large().
    
    For slab KMALLOC_MAX_CACHE_SIZE == KMALLOC_MAX_SIZE and it calls
    kmalloc_slab() for all allocations relying on NULL return value for
    over-sized allocations.
    
    This inconsistency leads to unwanted warnings from kmalloc_slab() for
    over-sized allocations for slab.  Returning NULL for failed allocations is
    the expected behavior.
    
    Make slub and slab code consistent by checking size >
    KMALLOC_MAX_CACHE_SIZE in slab before calling kmalloc_slab().
    
    While we are here also fix the check in kmalloc_slab().  We should check
    against KMALLOC_MAX_CACHE_SIZE rather than KMALLOC_MAX_SIZE.  It all kinda
    worked because for slab the constants are the same, and slub always checks
    the size against KMALLOC_MAX_CACHE_SIZE before kmalloc_slab().  But if we
    get there with size > KMALLOC_MAX_CACHE_SIZE anyhow bad things will
    happen.  For example, in case of a newly introduced bug in slub code.
    
    Also move the check in kmalloc_slab() from function entry to the size >
    192 case.  This partially compensates for the additional check in slab
    code and makes slub code a bit faster (at least theoretically).
    
    Also drop __GFP_NOWARN in the warning check.  This warning means a bug in
    slab code itself, user-passed flags have nothing to do with it.
    
    Nothing of this affects slob.
    
    Link: http://lkml.kernel.org/r/20180927171502.226522-1-dvyukov@gmail.com
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Reported-by: syzbot+87829a10073277282ad1@syzkaller.appspotmail.com
    Reported-by: syzbot+ef4e8fc3a06e9019bb40@syzkaller.appspotmail.com
    Reported-by: syzbot+6e438f4036df52cbb863@syzkaller.appspotmail.com
    Reported-by: syzbot+8574471d8734457d98aa@syzkaller.appspotmail.com
    Reported-by: syzbot+af1504df0807a083dbd9@syzkaller.appspotmail.com
    Acked-by: Christoph Lameter <cl@linux.com>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a37895d1e35884c160fbdd2bb90aeab8daafd87
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Oct 22 09:24:27 2018 -0700

    llc: do not use sk_eat_skb()
    
    commit 604d415e2bd642b7e02c80e719e0396b9d4a77a6 upstream.
    
    syzkaller triggered a use-after-free [1], caused by a combination of
    skb_get() in llc_conn_state_process() and usage of sk_eat_skb()
    
    sk_eat_skb() is assuming the skb about to be freed is only used by
    the current thread. TCP/DCCP stacks enforce this because current
    thread holds the socket lock.
    
    llc_conn_state_process() wants to make sure skb does not disappear,
    and holds a reference on the skb it manipulates. But as soon as this
    skb is added to socket receive queue, another thread can consume it.
    
    This means that llc must use regular skb_unlink() and kfree_skb()
    so that both producer and consumer can safely work on the same skb.
    
    [1]
    BUG: KASAN: use-after-free in atomic_read include/asm-generic/atomic-instrumented.h:21 [inline]
    BUG: KASAN: use-after-free in refcount_read include/linux/refcount.h:43 [inline]
    BUG: KASAN: use-after-free in skb_unref include/linux/skbuff.h:967 [inline]
    BUG: KASAN: use-after-free in kfree_skb+0xb7/0x580 net/core/skbuff.c:655
    Read of size 4 at addr ffff8801d1f6fba4 by task ksoftirqd/1/18
    
    CPU: 1 PID: 18 Comm: ksoftirqd/1 Not tainted 4.19.0-rc8+ #295
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x1c4/0x2b6 lib/dump_stack.c:113
     print_address_description.cold.8+0x9/0x1ff mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report.cold.9+0x242/0x309 mm/kasan/report.c:412
     check_memory_region_inline mm/kasan/kasan.c:260 [inline]
     check_memory_region+0x13e/0x1b0 mm/kasan/kasan.c:267
     kasan_check_read+0x11/0x20 mm/kasan/kasan.c:272
     atomic_read include/asm-generic/atomic-instrumented.h:21 [inline]
     refcount_read include/linux/refcount.h:43 [inline]
     skb_unref include/linux/skbuff.h:967 [inline]
     kfree_skb+0xb7/0x580 net/core/skbuff.c:655
     llc_sap_state_process+0x9b/0x550 net/llc/llc_sap.c:224
     llc_sap_rcv+0x156/0x1f0 net/llc/llc_sap.c:297
     llc_sap_handler+0x65e/0xf80 net/llc/llc_sap.c:438
     llc_rcv+0x79e/0xe20 net/llc/llc_input.c:208
     __netif_receive_skb_one_core+0x14d/0x200 net/core/dev.c:4913
     __netif_receive_skb+0x2c/0x1e0 net/core/dev.c:5023
     process_backlog+0x218/0x6f0 net/core/dev.c:5829
     napi_poll net/core/dev.c:6249 [inline]
     net_rx_action+0x7c5/0x1950 net/core/dev.c:6315
     __do_softirq+0x30c/0xb03 kernel/softirq.c:292
     run_ksoftirqd+0x94/0x100 kernel/softirq.c:653
     smpboot_thread_fn+0x68b/0xa00 kernel/smpboot.c:164
     kthread+0x35a/0x420 kernel/kthread.c:246
     ret_from_fork+0x3a/0x50 arch/x86/entry/entry_64.S:413
    
    Allocated by task 18:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     kasan_kmalloc+0xc7/0xe0 mm/kasan/kasan.c:553
     kasan_slab_alloc+0x12/0x20 mm/kasan/kasan.c:490
     kmem_cache_alloc_node+0x144/0x730 mm/slab.c:3644
     __alloc_skb+0x119/0x770 net/core/skbuff.c:193
     alloc_skb include/linux/skbuff.h:995 [inline]
     llc_alloc_frame+0xbc/0x370 net/llc/llc_sap.c:54
     llc_station_ac_send_xid_r net/llc/llc_station.c:52 [inline]
     llc_station_rcv+0x1dc/0x1420 net/llc/llc_station.c:111
     llc_rcv+0xc32/0xe20 net/llc/llc_input.c:220
     __netif_receive_skb_one_core+0x14d/0x200 net/core/dev.c:4913
     __netif_receive_skb+0x2c/0x1e0 net/core/dev.c:5023
     process_backlog+0x218/0x6f0 net/core/dev.c:5829
     napi_poll net/core/dev.c:6249 [inline]
     net_rx_action+0x7c5/0x1950 net/core/dev.c:6315
     __do_softirq+0x30c/0xb03 kernel/softirq.c:292
    
    Freed by task 16383:
     save_stack+0x43/0xd0 mm/kasan/kasan.c:448
     set_track mm/kasan/kasan.c:460 [inline]
     __kasan_slab_free+0x102/0x150 mm/kasan/kasan.c:521
     kasan_slab_free+0xe/0x10 mm/kasan/kasan.c:528
     __cache_free mm/slab.c:3498 [inline]
     kmem_cache_free+0x83/0x290 mm/slab.c:3756
     kfree_skbmem+0x154/0x230 net/core/skbuff.c:582
     __kfree_skb+0x1d/0x20 net/core/skbuff.c:642
     sk_eat_skb include/net/sock.h:2366 [inline]
     llc_ui_recvmsg+0xec2/0x1610 net/llc/af_llc.c:882
     sock_recvmsg_nosec net/socket.c:794 [inline]
     sock_recvmsg+0xd0/0x110 net/socket.c:801
     ___sys_recvmsg+0x2b6/0x680 net/socket.c:2278
     __sys_recvmmsg+0x303/0xb90 net/socket.c:2390
     do_sys_recvmmsg+0x181/0x1a0 net/socket.c:2466
     __do_sys_recvmmsg net/socket.c:2484 [inline]
     __se_sys_recvmmsg net/socket.c:2480 [inline]
     __x64_sys_recvmmsg+0xbe/0x150 net/socket.c:2480
     do_syscall_64+0x1b9/0x820 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    The buggy address belongs to the object at ffff8801d1f6fac0
     which belongs to the cache skbuff_head_cache of size 232
    The buggy address is located 228 bytes inside of
     232-byte region [ffff8801d1f6fac0, ffff8801d1f6fba8)
    The buggy address belongs to the page:
    page:ffffea000747dbc0 count:1 mapcount:0 mapping:ffff8801d9be7680 index:0xffff8801d1f6fe80
    flags: 0x2fffc0000000100(slab)
    raw: 02fffc0000000100 ffffea0007346e88 ffffea000705b108 ffff8801d9be7680
    raw: ffff8801d1f6fe80 ffff8801d1f6f0c0 000000010000000b 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff8801d1f6fa80: fc fc fc fc fc fc fc fc fb fb fb fb fb fb fb fb
     ffff8801d1f6fb00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    >ffff8801d1f6fb80: fb fb fb fb fb fc fc fc fc fc fc fc fc fc fc fc
                                   ^
     ffff8801d1f6fc00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff8801d1f6fc80: fb fb fb fb fb fb fb fb fb fb fb fb fb fc fc fc
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49ee6220be1b9c2dfd00a4a7adc55c2d7ffc7faf
Author: Andrew Price <anprice@redhat.com>
Date:   Mon Oct 8 07:52:43 2018 -0500

    gfs2: Don't leave s_fs_info pointing to freed memory in init_sbd
    
    commit 4c62bd9cea7bcf10292f7e4c57a2bca332942697 upstream.
    
    When alloc_percpu() fails, sdp gets freed but sb->s_fs_info still points
    to the same address. Move the assignment after that error check so that
    s_fs_info can only point to a valid sdp or NULL, which is checked for
    later in the error path, in gfs2_kill_super().
    
    Reported-by: syzbot+dcb8b3587445007f5808@syzkaller.appspotmail.com
    Signed-off-by: Andrew Price <anprice@redhat.com>
    Signed-off-by: Bob Peterson <rpeterso@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8376fdc999be008f0e9918db52f1ed8c08f5a1c9
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Oct 29 23:10:29 2018 +0800

    sctp: clear the transport of some out_chunk_list chunks in sctp_assoc_rm_peer
    
    commit df132eff463873e14e019a07f387b4d577d6d1f9 upstream.
    
    If a transport is removed by asconf but there still are some chunks with
    this transport queuing on out_chunk_list, later an use-after-free issue
    will be caused when accessing this transport from these chunks in
    sctp_outq_flush().
    
    This is an old bug, we fix it by clearing the transport of these chunks
    in out_chunk_list when removing a transport in sctp_assoc_rm_peer().
    
    Reported-by: syzbot+56a40ceee5fb35932f4d@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc94cd6d869ea0ac78936b14321d37bdea657ba4
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Fri Nov 2 15:48:42 2018 -0700

    bfs: add sanity check at bfs_fill_super()
    
    commit 9f2df09a33aa2c76ce6385d382693f98d7f2f07e upstream.
    
    syzbot is reporting too large memory allocation at bfs_fill_super() [1].
    Since file system image is corrupted such that bfs_sb->s_start == 0,
    bfs_fill_super() is trying to allocate 8MB of continuous memory. Fix
    this by adding a sanity check on bfs_sb->s_start, __GFP_NOWARN and
    printf().
    
    [1] https://syzkaller.appspot.com/bug?id=16a87c236b951351374a84c8a32f40edbc034e96
    
    Link: http://lkml.kernel.org/r/1525862104-3407-1-git-send-email-penguin-kernel@I-love.SAKURA.ne.jp
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reported-by: syzbot <syzbot+71c6b5d68e91149fc8a4@syzkaller.appspotmail.com>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Tigran Aivazian <aivazian.tigran@gmail.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 922fad66a961a34d970f9d0d0e961813489c556c
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Tue Oct 16 17:07:35 2018 -0700

    Input: synaptics - avoid using uninitialized variable when probing
    
    commit f39f8688888ae74fa8deae2d01289b69b4727394 upstream.
    
    synaptics_detect() does not check whether sending commands to the
    device succeeds and instead relies on getting unique data from the
    device. Let's make sure we seed entire buffer with zeroes to make sure
    we will not use garbage on stack that just happen to be 0x47.
    
    Reported-by: syzbot+13cb3b01d0784e4ffc3f@syzkaller.appspotmail.com
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Reviewed-by: Peter Hutterer <peter.hutterer@who-t.net>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9520db16756e24873677d867a6a0f9cab3b6726d
Author: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Date:   Sat Sep 8 01:42:58 2018 +0900

    selinux: Add __GFP_NOWARN to allocation at str_read()
    
    commit 4458bba09788e70e8fb39ad003f087cd9dfbd6ac upstream.
    
    syzbot is hitting warning at str_read() [1] because len parameter can
    become larger than KMALLOC_MAX_SIZE. We don't need to emit warning for
    this case.
    
    [1] https://syzkaller.appspot.com/bug?id=7f2f5aad79ea8663c296a2eedb81978401a908f0
    
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Reported-by: syzbot <syzbot+ac488b9811036cea7ea0@syzkaller.appspotmail.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 335f31342699f9015f0ab5a8d41d6c911085f033
Author: Dominique Martinet <dominique.martinet@cea.fr>
Date:   Mon Aug 27 15:12:05 2018 +0900

    v9fs_dir_readdir: fix double-free on p9stat_read error
    
    commit 81c99089bce693b94b775b6eb888115d2d540086 upstream.
    
    p9stat_read will call p9stat_free on error, we should only free the
    struct content on success.
    
    There also is no need to "p9stat_init" st as the read function will
    zero the whole struct for us anyway, so clean up the code a bit while
    we are here.
    
    Link: http://lkml.kernel.org/r/1535410108-20650-1-git-send-email-asmadeus@codewreck.org
    Signed-off-by: Dominique Martinet <dominique.martinet@cea.fr>
    Reported-by: syzbot+d4252148d198410b864f@syzkaller.appspotmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b99dcd4026a08fc9d1fd5cc0a9fc50529803fca
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Tue Oct 16 11:56:26 2018 +0300

    tools/power/cpupower: fix compilation with STATIC=true
    
    commit 9de9aa45e9bd67232e000cca42ceb134b8ae51b6 upstream.
    
    Rename duplicate sysfs_read_file into cpupower_read_sysfs and fix linking.
    
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Acked-by: Thomas Renninger <trenn@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0b9ddf4906e6340c4ce920c9450de05021e73ac
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Nov 8 16:08:29 2018 +0100

    brcmfmac: fix reporting support for 160 MHz channels
    
    commit d1fe6ad6f6bd61c84788d3a7b11e459a439c6169 upstream.
    
    Driver can report IEEE80211_VHT_CAP_SUPP_CHAN_WIDTH_160MHZ so it's
    important to provide valid & complete info about supported bands for
    each channel. By default no support for 160 MHz should be assumed unless
    firmware reports it for a given channel later.
    
    This fixes info passed to the userspace. Without that change userspace
    could try to use invalid channel and fail to start an interface.
    
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Cc: stable@vger.kernel.org
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf02eaf57a328b7213520396f4920902286e8cd8
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Wed Oct 17 08:35:15 2018 +0300

    iwlwifi: mvm: don't use SAR Geo if basic SAR is not used
    
    commit 5d041c46ccb9b48acc110e214beff5e2789311df upstream.
    
    We can't use SAR Geo if basic SAR is not enabled, since the SAR Geo
    tables define offsets in relation to the basic SAR table in use.
    
    To fix this, make iwl_mvm_sar_init() return one in case WRDS is not
    available, so we can skip reading WGDS entirely.
    
    Fixes: a6bff3cb19b7 ("iwlwifi: mvm: add GEO_TX_POWER_LIMIT cmd for geographic tx power table")
    Cc: stable@vger.kernel.org # 4.12+
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b58f0659f7c6c9957a528aa15cb0189055570672
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Wed Oct 3 11:16:54 2018 +0300

    iwlwifi: mvm: fix regulatory domain update when the firmware starts
    
    commit 82715ac71e6b94a2c2136e31f3a8e6748e33aa8c upstream.
    
    When the firmware starts, it doesn't have any regulatory
    information, hence it uses the world wide limitations. The
    driver can feed the firmware with previous knowledge that
    was kept in the driver, but the firmware may still not
    update its internal tables.
    
    This happens when we start a BSS interface, and then the
    firmware can change the regulatory tables based on our
    location and it'll use more lenient, location specific
    rules. Then, if the firmware is shut down (when the
    interface is brought down), and then an AP interface is
    created, the firmware will forget the country specific
    rules.
    
    The host will think that we are in a certain country that
    may allow channels and will try to teach the firmware about
    our location, but the firmware may still not allow to drop
    the world wide limitations and apply country specific rules
    because it was just re-started.
    
    In this case, the firmware will reply with MCC_RESP_ILLEGAL
    to the MCC_UPDATE_CMD. In that case, iwlwifi needs to let
    the upper layers (cfg80211 / hostapd) know that the channel
    list they know about has been updated.
    
    This fixes https://bugzilla.kernel.org/show_bug.cgi?id=201105
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc176d7a68bef23e1db1b0ec6e4ad4d75aa63958
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Thu Aug 16 13:25:48 2018 +0300

    iwlwifi: mvm: support sta_statistics() even on older firmware
    
    commit ec484d03ef0df8d34086b95710e355a259cbe1f2 upstream.
    
    The oldest firmware supported by iwlmvm do support getting
    the average beacon RSSI. Enable the sta_statistics() call
    from mac80211 even on older firmware versions.
    
    Fixes: 33cef9256342 ("iwlwifi: mvm: support beacon statistics for BSS client")
    Cc: stable@vger.kernel.org # 4.2+
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a5f25e30045bb2c3622136807d76be3bd4fb0ba
Author: Vladimir Zapolskiy <vz@mleia.com>
Date:   Fri Nov 2 15:39:43 2018 +0200

    gpio: don't free unallocated ida on gpiochip_add_data_with_key() error path
    
    commit a05a14049999598a3bb6fab12db6b768a0215522 upstream.
    
    The change corrects the error path in gpiochip_add_data_with_key()
    by avoiding to call ida_simple_remove(), if ida_simple_get() returns
    an error.
    
    Note that ida_simple_remove()/ida_free() throws a BUG(), if id argument
    is negative, it allows to easily check the correctness of the fix by
    fuzzing the return value from ida_simple_get().
    
    Fixes: ff2b13592299 ("gpio: make the gpiochip a real device")
    Cc: stable@vger.kernel.org # v4.6+
    Signed-off-by: Vladimir Zapolskiy <vz@mleia.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7c9f55c5a58a8a7131e1f5a82a7f85bf06c62a63
Author: Rajat Jain <rajatja@google.com>
Date:   Mon Oct 29 15:17:01 2018 -0700

    mmc: sdhci-pci: Try "cd" for card-detect lookup before using NULL
    
    commit cdcefe6bd9df754f528ffc339d3cc143cea4ddf6 upstream.
    
    Problem:
    
    The card detect IRQ does not work with modern BIOS (that want
    to use _DSD to provide the card detect GPIO to the driver).
    
    Details:
    
    The mmc core provides the mmc_gpiod_request_cd() API to let host drivers
    request the gpio descriptor for the "card detect" pin.
    This pin is specified in the ACPI for the SDHC device:
    
     * Either as a resource using _CRS. This is a method used by legacy BIOS.
       (The driver needs to tell which resource index).
    
     * Or as a named property ("cd-gpios"/"cd-gpio") in _DSD (which internally
       points to an entry in _CRS). This way, the driver can lookup using a
       string. This is what modern BIOS prefer to use.
    
    This API finally results in a call to the following code:
    
    struct gpio_desc *acpi_find_gpio(..., const char *con_id,...)
    {
    ...
       /* Lookup gpio (using "<con_id>-gpio") in the _DSD */
    ...
       if (!acpi_can_fallback_to_crs(adev, con_id))
              return ERR_PTR(-ENOENT);
    ...
       /* Falling back to _CRS is allowed, Lookup gpio in the _CRS */
    ...
    }
    
    Note that this means that if the ACPI has _DSD properties, the kernel
    will never use _CRS for the lookup (Because acpi_can_fallback_to_crs()
    will always be false for any device hat has _DSD entries).
    
    The SDHCI driver is thus currently broken on a modern BIOS, even if
    BIOS provides both _CRS (for index based lookup) and _DSD entries (for
    string based lookup). Ironically, none of these will be used for the
    lookup currently because:
    
    * Since the con_id is NULL, acpi_find_gpio() does not find a matching
      entry in DSDT. (The _DSDT entry has the property name = "cd-gpios")
    
    * Because ACPI contains DSDT entries, thus acpi_can_fallback_to_crs()
      returns false (because device properties have been populated from
      _DSD), thus the _CRS is never used for the lookup.
    
    Fix:
    
    Try "cd" for lookup in the _DSD before falling back to using NULL so
    as to try looking up in the _CRS.
    
    I've tested this patch successfully with both Legacy BIOS (that
    provide only _CRS method) as well as modern BIOS (that provide both
    _CRS and _DSD). Also the use of "cd" appears to be fairly consistent
    across other users of this API (other MMC host controller drivers).
    
    Link: https://lkml.org/lkml/2018/9/25/1113
    Signed-off-by: Rajat Jain <rajatja@google.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Fixes: f10e4bf6632b ("gpio: acpi: Even more tighten up ACPI GPIO lookups")
    Cc: stable@vger.kernel.org
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d34af066f084defffd77f33778217fef8889e063
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Nov 15 15:03:24 2018 -0800

    MAINTAINERS: Add Sasha as a stable branch maintainer
    
    commit cb5d21946d2a2f4687c482ab4604af1d29dac35a upstream.
    
    Sasha has somehow been convinced into helping me with the stable kernel
    maintenance.  Codify this slip in good judgement before he realizes what
    he really signed up for :)
    
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1129534f73336addfcea53a65c7847d1aa1d2175
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Nov 9 11:59:45 2018 +0100

    ALSA: oss: Use kvzalloc() for local buffer allocations
    
    commit 65766ee0bf7fe8b3be80e2e1c3ef54ad59b29476 upstream.
    
    PCM OSS layer may allocate a few temporary buffers, one for the core
    read/write and another for the conversions via plugins.  Currently
    both are allocated via vmalloc().  But as the allocation size is
    equivalent with the PCM period size, the required size might be quite
    small, depending on the application.
    
    This patch replaces these vmalloc() calls with kvzalloc() for covering
    small period sizes better.  Also, we use "z"-alloc variant here for
    addressing the possible uninitialized access reported by syzkaller.
    
    Reported-by: syzbot+1cb36954e127c98dd037@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 494427532654fc2b3c6791bdd997587643717684
Author: Aaron Ma <aaron.ma@canonical.com>
Date:   Fri Nov 9 17:21:21 2018 +0200

    usb: xhci: fix timeout for transition from RExit to U0
    
    commit a5baeaeabcca3244782a9b6382ebab6f8a58f583 upstream.
    
    This definition is used by msecs_to_jiffies in milliseconds.
    According to the comments, max rexit timeout should be 20ms.
    Align with the comments to properly calculate the delay.
    
    Verified on Sunrise Point-LP and Cannon Lake.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Aaron Ma <aaron.ma@canonical.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0902c4e7d6dbdeaa73fa6fc635391624de6e9a5f
Author: Sandeep Singh <sandeep.singh@amd.com>
Date:   Fri Nov 9 17:21:19 2018 +0200

    xhci: Add check for invalid byte size error when UAS devices are connected.
    
    commit d9193efba84fe4c4aa22a569fade5e6ca971f8af upstream.
    
    Observed "TRB completion code (27)" error which corresponds to Stopped -
    Length Invalid error(xhci spec section 4.17.4) while connecting USB to
    SATA bridge.
    
    Looks like this case was not considered when the following patch[1] was
    committed. Hence adding this new check which can prevent
    the invalid byte size error.
    
    [1] ade2e3a xhci: handle transfer events without TRB pointer
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Sandeep Singh <sandeep.singh@amd.com>
    cc: Nehal Shah <Nehal-bakulchandra.Shah@amd.com>
    cc: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c3e97edbb19a4a47e1aa47101b1e2553e3bdad0
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Aug 27 18:30:16 2018 +0300

    usb: dwc3: core: Clean up ULPI device
    
    commit 08fd9a82fda86529bb2f2af3c2f7cb657b4d3066 upstream.
    
    If dwc3_core_init_mode() fails with deferred probe,
    next probe fails on sysfs with
    
    sysfs: cannot create duplicate filename '/devices/pci0000:00/0000:00:11.0/dwc3.0.auto/dwc3.0.auto.ulpi'
    
    To avoid this failure, clean up ULPI device.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 474e39f53816ef70224cdb6fae27893d679fb65f
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Thu Aug 2 20:17:16 2018 -0700

    usb: dwc3: gadget: Properly check last unaligned/zero chain TRB
    
    commit ba3a51ac32ebcf8d0a54b37f1af268ad8a31c52f upstream.
    
    Current check for the last extra TRB for zero and unaligned transfers
    does not account for isoc OUT. The last TRB of the Buffer Descriptor for
    isoc OUT transfers will be retired with HWO=0. As a result, we won't
    return early. The req->remaining will be updated to include the BUFSIZ
    count of the extra TRB, and the actual number of transferred bytes
    calculation will be wrong.
    
    To fix this, check whether it's a short or zero packet and the last TRB
    chain bit to return early.
    
    Fixes: c6267a51639b ("usb: dwc3: gadget: align transfers to wMaxPacketSize")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47631d837acccf5532a32b47943621ce62a3a477
Author: Felipe Balbi <felipe.balbi@linux.intel.com>
Date:   Wed Aug 1 09:37:34 2018 +0300

    usb: dwc3: gadget: fix ISOC TRB type on unaligned transfers
    
    commit 2fc6d4be35fb1e262f209758e25bfe2b7a113a7f upstream.
    
    When chaining ISOC TRBs together, only the first ISOC TRB should be of
    type ISOC_FIRST, all others should be of type ISOC. This patch fixes
    that.
    
    Fixes: c6267a51639b ("usb: dwc3: gadget: align transfers to wMaxPacketSize")
    Cc: <stable@vger.kernel.org> # v4.11+
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 427d4e4c27442ed2329a9672f65af49cd5a56389
Author: Dennis Wassenberg <dennis.wassenberg@secunet.com>
Date:   Tue Nov 13 14:40:34 2018 +0100

    usb: core: Fix hub port connection events lost
    
    commit 22454b79e6de05fa61a2a72d00d2eed798abbb75 upstream.
    
    This will clear the USB_PORT_FEAT_C_CONNECTION bit in case of a hub port reset
    only if a device is was attached to the hub port before resetting the hub port.
    
    Using a Lenovo T480s attached to the ultra dock it was not possible to detect
    some usb-c devices at the dock usb-c ports because the hub_port_reset code
    will clear the USB_PORT_FEAT_C_CONNECTION bit after the actual hub port reset.
    Using this device combo the USB_PORT_FEAT_C_CONNECTION bit was set between the
    actual hub port reset and the clear of the USB_PORT_FEAT_C_CONNECTION bit.
    This ends up with clearing the USB_PORT_FEAT_C_CONNECTION bit after the
    new device was attached such that it was not detected.
    
    This patch will not clear the USB_PORT_FEAT_C_CONNECTION bit if there is
    currently no device attached to the port before the hub port reset.
    This will avoid clearing the connection bit for new attached devices.
    
    Signed-off-by: Dennis Wassenberg <dennis.wassenberg@secunet.com>
    Acked-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d47e129a7107d6f35ac4ce7f32ff9376b555bfe
Author: Stefan Agner <stefan@agner.ch>
Date:   Sun Mar 25 20:09:56 2018 +0200

    ARM: trusted_foundations: do not use naked function
    
    (commit 4ea7bdc6b5b33427bbd3f41c333e21c1825462a3 upstream)
    
    As documented in GCC naked functions should only use basic ASM
    syntax. The extended ASM or mixture of basic ASM and "C" code is
    not guaranteed. Currently this works because it was hard coded
    to follow and check GCC behavior for arguments and register
    placement.
    
    Furthermore with clang using parameters in Extended asm in a
    naked function is not supported:
      arch/arm/firmware/trusted_foundations.c:47:10: error: parameter
              references not allowed in naked functions
                    : "r" (type), "r" (arg1), "r" (arg2)
                           ^
    
    Use a regular function to be more portable. This aligns also with
    the other SMC call implementations e.g. in qcom_scm-32.c and
    bcm_kona_smc.c.
    
    Cc: Dmitry Osipenko <digetx@gmail.com>
    Cc: Stephen Warren <swarren@nvidia.com>
    Cc: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8d7925ad96c682dd1a0b15943a5d545c5191107e
Author: Stefan Agner <stefan@agner.ch>
Date:   Tue May 8 16:27:26 2018 +0200

    bus: arm-cci: remove unnecessary unreachable()
    
    (commit 10d8713429d345867fc8998d6193b233c0cab28c upstream)
    
    Mixing asm and C code is not recommended in a naked function by
    gcc and leads to an error when using clang:
      drivers/bus/arm-cci.c:2107:2: error: non-ASM statement in naked
      function is not supported
            unreachable();
            ^
    
    While the function is marked __naked it actually properly return
    in asm. There is no need for the unreachable() call.
    
    GCC 7.2 generates identical object files before and after, other
    than (for obvious reasons) the line numbers generated by
    WANT_WARN_ON_SLOWPATH for all the WARN()s appearing later in the
    file.
    
    Suggested-by: Russell King <linux@arm.linux.org.uk>
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Acked-by: Nicolas Pitre <nico@linaro.org>
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 764ecc201217f676fdc7f0878e74ca034716d9ee
Author: Stefan Agner <stefan@agner.ch>
Date:   Tue May 8 22:50:38 2018 +0100

    ARM: 8767/1: add support for building ARM kernel with clang
    
    (commit c1c386681bd73c4fc28eb5cc91cf8b7be9b409ba upstream)
    
    Use cc-options call for compiler options which are not available
    in clang. With this patch an ARMv7 multi platform kernel can be
    successfully build using clang (tested with version 5.0.1).
    
    Based-on-patches-by: Behan Webster <behanw@converseincode.com>
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1222c5f7f6036cbab74abefdbce0bffe85d3eea
Author: Stefan Agner <stefan@agner.ch>
Date:   Tue May 8 22:49:49 2018 +0100

    ARM: 8766/1: drop no-thumb-interwork in EABI mode
    
    (commit 22905a24306c8c312c2d66da9f90d09af0414f81 upstream)
    
    According to GCC documentation -m(no-)thumb-interwork is
    meaningless in AAPCS configurations. Also clang does not
    support the flag:
      clang-5.0: error: unknown argument: '-mno-thumb-interwork'
    
    Just drop -mno-thumb-interwork in AEABI configuration.
    
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed482390c8dbf51484bfe69d0f4952cf29a4dc6b
Author: Alistair Strachan <astrachan@google.com>
Date:   Tue Nov 27 15:33:17 2018 -0800

    efi/libstub: arm: support building with clang
    
    (commit 41f1c48420709470c51ee0e54b6fb28b956bb4e0 upstream)
    
    When building with CONFIG_EFI and CONFIG_EFI_STUB on ARM, the libstub
    Makefile would use -mno-single-pic-base without checking it was
    supported by the compiler. As the ARM (32-bit) clang backend does not
    support this flag, the build would fail.
    
    This changes the Makefile to check the compiler's support for
    -mno-single-pic-base before using it, similar to c1c386681bd7 ("ARM:
    8767/1: add support for building ARM kernel with clang").
    
    Signed-off-by: Alistair Strachan <astrachan@google.com>
    Reviewed-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    [ND: adjusted due to missing commit ce279d374ff3 ("efi/libstub:
     Only disable stackleak plugin for arm64")]
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
