commit 5040520482a594e92d4f69141229a6dd26173511
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Nov 6 14:10:10 2021 +0100

    Linux 5.10.78
    
    Link: https://lore.kernel.org/r/20211104141159.561284732@linuxfoundation.org
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Link: https://lore.kernel.org/r/20211104170112.899181800@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c7c0243275b926d35e6904c20ded6463bd69a82
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 4 12:23:09 2021 +0100

    ALSA: usb-audio: Add Audient iD14 to mixer map quirk table
    
    commit df0380b9539b04c1ae8854a984098da06d5f1e67 upstream.
    
    This is a fix equivalent with the upstream commit df0380b9539b ("ALSA:
    usb-audio: Add quirk for Audient iD14"), adapted to the earlier
    kernels up to 5.14.y.  It adds the quirk entry with the old
    ignore_ctl_error flag to the usbmix_ctl_maps, instead.
    
    The original commit description says:
        Audient iD14 (2708:0002) may get a control message error that
        interferes the operation e.g. with alsactl.  Add the quirk to ignore
        such errors like other devices.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3eb44f496ef09a7df20f264879a396f642e73a7
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Nov 4 12:23:08 2021 +0100

    ALSA: usb-audio: Add Schiit Hel device to mixer map quirk table
    
    commit 22390ce786c59328ccd13c329959dee1e8757487 upstream.
    
    This is a fix equivalent with the upstream commit 22390ce786c5 ("ALSA:
    usb-audio: add Schiit Hel device to quirk table"), adapted to the
    earlier kernels up to 5.14.y.  It adds the quirk entry with the old
    ignore_ctl_error flag to the usbmix_ctl_maps, instead.
    
    The original patch description says:
        The Shciit Hel device responds to the ctl message for the mic capture
        switch with a timeout of -EPIPE:
    
                usb 7-2.2: cannot get ctl value: req = 0x81, wValue = 0x100, wIndex = 0x1100, type = 1
                usb 7-2.2: cannot get ctl value: req = 0x81, wValue = 0x100, wIndex = 0x1100, type = 1
                usb 7-2.2: cannot get ctl value: req = 0x81, wValue = 0x100, wIndex = 0x1100, type = 1
                usb 7-2.2: cannot get ctl value: req = 0x81, wValue = 0x100, wIndex = 0x1100, type = 1
    
        This seems safe to ignore as the device works properly with the control
        message quirk, so add it to the quirk table so all is good.
    
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68765fc977629f79f68f016802246d3d2f308fa6
Author: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
Date:   Fri Oct 22 15:04:47 2021 +0100

    Revert "wcn36xx: Disable bmps when encryption is disabled"
    
    commit 285bb1738e196507bf985574d0bc1e9dd72d46b1 upstream.
    
    This reverts commit c6522a5076e1a65877c51cfee313a74ef61cabf8.
    
    Testing on tip-of-tree shows that this is working now. Revert this and
    re-enable BMPS for Open APs.
    
    Signed-off-by: Bryan O'Donoghue <bryan.odonoghue@linaro.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20211022140447.2846248-3-bryan.odonoghue@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f84b791d4c3b459ef404c32fc5986f18758461e9
Author: Wang Kefeng <wangkefeng.wang@huawei.com>
Date:   Mon Aug 23 10:41:42 2021 +0100

    ARM: 9120/1: Revert "amba: make use of -1 IRQs warn"
    
    commit eb4f756915875b0ea0757751cd29841f0504d547 upstream.
    
    After commit 77a7300abad7 ("of/irq: Get rid of NO_IRQ usage"),
    no irq case has been removed, irq_of_parse_and_map() will return
    0 in all cases when get error from parse and map an interrupt into
    linux virq space.
    
    amba_device_register() is only used on no-DT initialization, see
      s3c64xx_pl080_init()          arch/arm/mach-s3c/pl080.c
      ep93xx_init_devices()         arch/arm/mach-ep93xx/core.c
    
    They won't set -1 to irq[0], so no need the warn.
    
    This reverts commit 2eac58d5026e4ec8b17ff8b62877fea9e1d2f1b3.
    
    Reviewed-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbc920fb320f1c241cc34ac85edaa0058922246a
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Nov 4 09:35:57 2021 +0100

    Revert "drm/ttm: fix memleak in ttm_transfered_destroy"
    
    This reverts commit c21b4002214c1c7e7b627b9b53375612f7aab6db which is
    commit 0db55f9a1bafbe3dac750ea669de9134922389b5 upstream.
    
    Seems that the older kernels can not handle this fix because, to quote
    Christian:
            The problem is this memory leak could potentially happen with
            5.10 as wel, just much much much less likely.
    
            But my guess is that 5.10 is so buggy that when the leak does
            NOT happen we double free and obviously causing a crash.
    
    So it needs to be reverted.
    
    Link: https://lore.kernel.org/r/1a1cc125-9314-f569-a6c4-40fc4509a377@amd.com
    Cc: Christian KÃ¶nig <christian.koenig@amd.com>
    Cc: Erhard F. <erhard_f@mailbox.org>
    Cc: Erhard F. <erhard_f@mailbox.org>
    Cc: Huang Rui <ray.huang@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d67b2a73b8e3a079c355bab3c1aef7d85a044b8
Author: Yang Shi <shy828301@gmail.com>
Date:   Thu Oct 28 14:36:30 2021 -0700

    mm: khugepaged: skip huge page collapse for special files
    
    commit a4aeaa06d45e90f9b279f0b09de84bd00006e733 upstream.
    
    The read-only THP for filesystems will collapse THP for files opened
    readonly and mapped with VM_EXEC.  The intended usecase is to avoid TLB
    misses for large text segments.  But it doesn't restrict the file types
    so a THP could be collapsed for a non-regular file, for example, block
    device, if it is opened readonly and mapped with EXEC permission.  This
    may cause bugs, like [1] and [2].
    
    This is definitely not the intended usecase, so just collapse THP for
    regular files in order to close the attack surface.
    
    [shy828301@gmail.com: fix vm_file check [3]]
    
    Link: https://lore.kernel.org/lkml/CACkBjsYwLYLRmX8GpsDpMthagWOjWWrNxqY6ZLNQVr6yx+f5vA@mail.gmail.com/ [1]
    Link: https://lore.kernel.org/linux-mm/000000000000c6a82505ce284e4c@google.com/ [2]
    Link: https://lkml.kernel.org/r/CAHbLzkqTW9U3VvTu1Ki5v_cLRC9gHW+znBukg_ycergE0JWj-A@mail.gmail.com [3]
    Link: https://lkml.kernel.org/r/20211027195221.3825-1-shy828301@gmail.com
    Fixes: 99cb0dbd47a1 ("mm,thp: add read-only THP support for (non-shmem) FS")
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Signed-off-by: Yang Shi <shy828301@gmail.com>
    Reported-by: Hao Sun <sunhao.th@gmail.com>
    Reported-by: syzbot+aae069be1de40fb11825@syzkaller.appspotmail.com
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Andrea Righi <andrea.righi@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a7957491e31c5d6bbffa2e5d471402e931f14ca
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 3 16:51:36 2021 +0100

    Revert "usb: core: hcd: Add support for deferring roothub registration"
    
    This reverts commit d58fc9e9c15825e3a8fc1ef3b52495c93c41e71c which is
    commit 58877b0824da15698bd85a0a9dbfa8c354e6ecb7 upstream.
    
    It has been reported to be causing problems in Arch and Fedora bug
    reports.
    
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://bbs.archlinux.org/viewtopic.php?pid=2000956#p2000956
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2019542
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2019576
    Link: https://lore.kernel.org/r/42bcbea6-5eb8-16c7-336a-2cb72e71bc36@redhat.com
    Cc: Mathias Nyman <mathias.nyman@linux.intel.com>
    Cc: Chris Chiu <chris.chiu@canonical.com>
    Cc: Alan Stern <stern@rowland.harvard.edu>
    Cc: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50f46bd3094992305cdde8832203634f01d46eea
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Nov 3 16:51:12 2021 +0100

    Revert "xhci: Set HCD flag to defer primary roothub registration"
    
    This reverts commit 0ea9ac731a315cd10bd6d6b33817b68ca9111ecf which is
    commit b7a0a792f864583207c593b50fd1b752ed89f4c1 upstream.
    
    It has been reported to be causing problems in Arch and Fedora bug
    reports.
    
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://bbs.archlinux.org/viewtopic.php?pid=2000956#p2000956
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2019542
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=2019576
    Link: https://lore.kernel.org/r/42bcbea6-5eb8-16c7-336a-2cb72e71bc36@redhat.com
    Cc: Mathias Nyman <mathias.nyman@linux.intel.com>
    Cc: Chris Chiu <chris.chiu@canonical.com>
    Cc: Alan Stern <stern@rowland.harvard.edu>
    Cc: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7fc85f6104259541ec136199d3bf7c8a736613d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Jun 7 17:23:48 2021 +0200

    media: firewire: firedtv-avc: fix a buffer overflow in avc_ca_pmt()
    
    commit 35d2969ea3c7d32aee78066b1f3cf61a0d935a4e upstream.
    
    The bounds checking in avc_ca_pmt() is not strict enough.  It should
    be checking "read_pos + 4" because it's reading 5 bytes.  If the
    "es_info_length" is non-zero then it reads a 6th byte so there needs to
    be an additional check for that.
    
    I also added checks for the "write_pos".  I don't think these are
    required because "read_pos" and "write_pos" are tied together so
    checking one ought to be enough.  But they make the code easier to
    understand for me.  The check on write_pos is:
    
            if (write_pos + 4 >= sizeof(c->operand) - 4) {
    
    The first "+ 4" is because we're writing 5 bytes and the last " - 4"
    is to leave space for the CRC.
    
    The other problem is that "length" can be invalid.  It comes from
    "data_length" in fdtv_ca_pmt().
    
    Cc: stable@vger.kernel.org
    Reported-by: Luo Likang <luolikang@nsfocus.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b93a70bf2b5756dc088d7b7f41dc7d25cc765de8
Author: Yuiko Oshino <yuiko.oshino@microchip.com>
Date:   Wed Oct 27 14:23:02 2021 -0400

    net: ethernet: microchip: lan743x: Fix skb allocation failure
    
    commit e8684db191e4164f3f5f3ad7dec04a6734c25f1c upstream.
    
    The driver allocates skb during ndo_open with GFP_ATOMIC which has high chance of failure when there are multiple instances.
    GFP_KERNEL is enough while open and use GFP_ATOMIC only from interrupt context.
    
    Fixes: 23f0703c125b ("lan743x: Add main source files for new lan743x driver")
    Signed-off-by: Yuiko Oshino <yuiko.oshino@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9c85a71e1b4898e978c594a44e881456313a855
Author: Eugene Crosser <crosser@average.org>
Date:   Mon Oct 18 20:22:50 2021 +0200

    vrf: Revert "Reset skb conntrack connection..."
    
    commit 55161e67d44fdd23900be166a81e996abd6e3be9 upstream.
    
    This reverts commit 09e856d54bda5f288ef8437a90ab2b9b3eab83d1.
    
    When an interface is enslaved in a VRF, prerouting conntrack hook is
    called twice: once in the context of the original input interface, and
    once in the context of the VRF interface. If no special precausions are
    taken, this leads to creation of two conntrack entries instead of one,
    and breaks SNAT.
    
    Commit above was intended to avoid creation of extra conntrack entries
    when input interface is enslaved in a VRF. It did so by resetting
    conntrack related data associated with the skb when it enters VRF context.
    
    However it breaks netfilter operation. Imagine a use case when conntrack
    zone must be assigned based on the original input interface, rather than
    VRF interface (that would make original interfaces indistinguishable). One
    could create netfilter rules similar to these:
    
            chain rawprerouting {
                    type filter hook prerouting priority raw;
                    iif realiface1 ct zone set 1 return
                    iif realiface2 ct zone set 2 return
            }
    
    This works before the mentioned commit, but not after: zone assignment
    is "forgotten", and any subsequent NAT or filtering that is dependent
    on the conntrack zone does not work.
    
    Here is a reproducer script that demonstrates the difference in behaviour.
    
    ==========
    #!/bin/sh
    
    # This script demonstrates unexpected change of nftables behaviour
    # caused by commit 09e856d54bda5f28 ""vrf: Reset skb conntrack
    # connection on VRF rcv"
    # https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=09e856d54bda5f288ef8437a90ab2b9b3eab83d1
    #
    # Before the commit, it was possible to assign conntrack zone to a
    # packet (or mark it for `notracking`) in the prerouting chanin, raw
    # priority, based on the `iif` (interface from which the packet
    # arrived).
    # After the change, # if the interface is enslaved in a VRF, such
    # assignment is lost. Instead, assignment based on the `iif` matching
    # the VRF master interface is honored. Thus it is impossible to
    # distinguish packets based on the original interface.
    #
    # This script demonstrates this change of behaviour: conntrack zone 1
    # or 2 is assigned depending on the match with the original interface
    # or the vrf master interface. It can be observed that conntrack entry
    # appears in different zone in the kernel versions before and after
    # the commit.
    
    IPIN=172.30.30.1
    IPOUT=172.30.30.2
    PFXL=30
    
    ip li sh vein >/dev/null 2>&1 && ip li del vein
    ip li sh tvrf >/dev/null 2>&1 && ip li del tvrf
    nft list table testct >/dev/null 2>&1 && nft delete table testct
    
    ip li add vein type veth peer veout
    ip li add tvrf type vrf table 9876
    ip li set veout master tvrf
    ip li set vein up
    ip li set veout up
    ip li set tvrf up
    /sbin/sysctl -w net.ipv4.conf.veout.accept_local=1
    /sbin/sysctl -w net.ipv4.conf.veout.rp_filter=0
    ip addr add $IPIN/$PFXL dev vein
    ip addr add $IPOUT/$PFXL dev veout
    
    nft -f - <<__END__
    table testct {
            chain rawpre {
                    type filter hook prerouting priority raw;
                    iif { veout, tvrf } meta nftrace set 1
                    iif veout ct zone set 1 return
                    iif tvrf ct zone set 2 return
                    notrack
            }
            chain rawout {
                    type filter hook output priority raw;
                    notrack
            }
    }
    __END__
    
    uname -rv
    conntrack -F
    ping -W 1 -c 1 -I vein $IPOUT
    conntrack -L
    
    Signed-off-by: Eugene Crosser <crosser@average.org>
    Acked-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Florian Westphal <fw@strlen.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0382fdf9ae78e01e83580fb0603cdb3e20224804
Author: Erik Ekman <erik@kryo.se>
Date:   Sun Oct 17 19:16:57 2021 +0200

    sfc: Fix reading non-legacy supported link modes
    
    commit 041c61488236a5a84789083e3d9f0a51139b6edf upstream.
    
    Everything except the first 32 bits was lost when the pause flags were
    added. This makes the 50000baseCR2 mode flag (bit 34) not appear.
    
    I have tested this with a 10G card (SFN5122F-R7) by modifying it to
    return a non-legacy link mode (10000baseCR).
    
    Signed-off-by: Erik Ekman <erik@kryo.se>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 748786564a358945922aa43a5b90710c81ed133e
Author: Lee Jones <lee.jones@linaro.org>
Date:   Tue Nov 2 15:49:30 2021 +0000

    Revert "io_uring: reinforce cancel on flush during exit"
    
    This reverts commit 88dbd085a51ec78c83dde79ad63bca8aa4272a9d.
    
    Causes the following Syzkaller reported issue:
    
    BUG: kernel NULL pointer dereference, address: 0000000000000010
    PGD 0 P4D 0
    Oops: 0002 [#1] PREEMPT SMP KASAN
    CPU: 1 PID: 546 Comm: syz-executor631 Tainted: G    B             5.10.76-syzkaller-01178-g4944ec82ebb9 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:arch_atomic_try_cmpxchg syzkaller/managers/android-5-10/kernel/./arch/x86/include/asm/atomic.h:202 [inline]
    RIP: 0010:atomic_try_cmpxchg_acquire syzkaller/managers/android-5-10/kernel/./include/asm-generic/atomic-instrumented.h:707 [inline]
    RIP: 0010:queued_spin_lock syzkaller/managers/android-5-10/kernel/./include/asm-generic/qspinlock.h:82 [inline]
    RIP: 0010:do_raw_spin_lock_flags syzkaller/managers/android-5-10/kernel/./include/linux/spinlock.h:195 [inline]
    RIP: 0010:__raw_spin_lock_irqsave syzkaller/managers/android-5-10/kernel/./include/linux/spinlock_api_smp.h:119 [inline]
    RIP: 0010:_raw_spin_lock_irqsave+0x10d/0x210 syzkaller/managers/android-5-10/kernel/kernel/locking/spinlock.c:159
    Code: 00 00 00 e8 d5 29 09 fd 4c 89 e7 be 04 00 00 00 e8 c8 29 09 fd 42 8a 04 3b 84 c0 0f 85 be 00 00 00 8b 44 24 40 b9 01 00 00 00 <f0> 41 0f b1 4d 00 75 45 48 c7 44 24 20 0e 36 e0 45 4b c7 04 37 00
    RSP: 0018:ffffc90000f174e0 EFLAGS: 00010097
    RAX: 0000000000000000 RBX: 1ffff920001e2ea4 RCX: 0000000000000001
    RDX: 0000000000000001 RSI: 0000000000000004 RDI: ffffc90000f17520
    RBP: ffffc90000f175b0 R08: dffffc0000000000 R09: 0000000000000003
    R10: fffff520001e2ea5 R11: 0000000000000004 R12: ffffc90000f17520
    R13: 0000000000000010 R14: 1ffff920001e2ea0 R15: dffffc0000000000
    FS:  0000000000000000(0000) GS:ffff8881f7100000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000010 CR3: 000000000640f000 CR4: 00000000003506a0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     prepare_to_wait+0x9c/0x290 syzkaller/managers/android-5-10/kernel/kernel/sched/wait.c:248
     io_uring_cancel_files syzkaller/managers/android-5-10/kernel/fs/io_uring.c:8690 [inline]
     io_uring_cancel_task_requests+0x16a9/0x1ed0 syzkaller/managers/android-5-10/kernel/fs/io_uring.c:8760
     io_uring_flush+0x170/0x6d0 syzkaller/managers/android-5-10/kernel/fs/io_uring.c:8923
     filp_close+0xb0/0x150 syzkaller/managers/android-5-10/kernel/fs/open.c:1319
     close_files syzkaller/managers/android-5-10/kernel/fs/file.c:401 [inline]
     put_files_struct+0x1d4/0x350 syzkaller/managers/android-5-10/kernel/fs/file.c:429
     exit_files+0x80/0xa0 syzkaller/managers/android-5-10/kernel/fs/file.c:458
     do_exit+0x6d9/0x23a0 syzkaller/managers/android-5-10/kernel/kernel/exit.c:808
     do_group_exit+0x16a/0x2d0 syzkaller/managers/android-5-10/kernel/kernel/exit.c:910
     get_signal+0x133e/0x1f80 syzkaller/managers/android-5-10/kernel/kernel/signal.c:2790
     arch_do_signal+0x8d/0x620 syzkaller/managers/android-5-10/kernel/arch/x86/kernel/signal.c:805
     exit_to_user_mode_loop syzkaller/managers/android-5-10/kernel/kernel/entry/common.c:161 [inline]
     exit_to_user_mode_prepare+0xaa/0xe0 syzkaller/managers/android-5-10/kernel/kernel/entry/common.c:191
     syscall_exit_to_user_mode+0x24/0x40 syzkaller/managers/android-5-10/kernel/kernel/entry/common.c:266
     do_syscall_64+0x3d/0x70 syzkaller/managers/android-5-10/kernel/arch/x86/entry/common.c:56
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    RIP: 0033:0x7fc6d1589a89
    Code: Unable to access opcode bytes at RIP 0x7fc6d1589a5f.
    RSP: 002b:00007ffd2b5da728 EFLAGS: 00000246 ORIG_RAX: 00000000000000ca
    RAX: fffffffffffffdfc RBX: 0000000000005193 RCX: 00007fc6d1589a89
    RDX: 0000000000000000 RSI: 0000000000000080 RDI: 00007fc6d161142c
    RBP: 0000000000000032 R08: 00007ffd2b5eb0b8 R09: 0000000000000000
    R10: 00007ffd2b5da750 R11: 0000000000000246 R12: 00007fc6d161142c
    R13: 00007ffd2b5da750 R14: 00007ffd2b5da770 R15: 0000000000000000
    Modules linked in:
    CR2: 0000000000000010
    ---[ end trace fe8044f7dc4d8d65 ]---
    RIP: 0010:arch_atomic_try_cmpxchg syzkaller/managers/android-5-10/kernel/./arch/x86/include/asm/atomic.h:202 [inline]
    RIP: 0010:atomic_try_cmpxchg_acquire syzkaller/managers/android-5-10/kernel/./include/asm-generic/atomic-instrumented.h:707 [inline]
    RIP: 0010:queued_spin_lock syzkaller/managers/android-5-10/kernel/./include/asm-generic/qspinlock.h:82 [inline]
    RIP: 0010:do_raw_spin_lock_flags syzkaller/managers/android-5-10/kernel/./include/linux/spinlock.h:195 [inline]
    RIP: 0010:__raw_spin_lock_irqsave syzkaller/managers/android-5-10/kernel/./include/linux/spinlock_api_smp.h:119 [inline]
    RIP: 0010:_raw_spin_lock_irqsave+0x10d/0x210 syzkaller/managers/android-5-10/kernel/kernel/locking/spinlock.c:159
    Code: 00 00 00 e8 d5 29 09 fd 4c 89 e7 be 04 00 00 00 e8 c8 29 09 fd 42 8a 04 3b 84 c0 0f 85 be 00 00 00 8b 44 24 40 b9 01 00 00 00 <f0> 41 0f b1 4d 00 75 45 48 c7 44 24 20 0e 36 e0 45 4b c7 04 37 00
    RSP: 0018:ffffc90000f174e0 EFLAGS: 00010097
    RAX: 0000000000000000 RBX: 1ffff920001e2ea4 RCX: 0000000000000001
    RDX: 0000000000000001 RSI: 0000000000000004 RDI: ffffc90000f17520
    RBP: ffffc90000f175b0 R08: dffffc0000000000 R09: 0000000000000003
    R10: fffff520001e2ea5 R11: 0000000000000004 R12: ffffc90000f17520
    R13: 0000000000000010 R14: 1ffff920001e2ea0 R15: dffffc0000000000
    FS:  0000000000000000(0000) GS:ffff8881f7100000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000010 CR3: 000000000640f000 CR4: 00000000003506a0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    ----------------
    Code disassembly (best guess), 1 bytes skipped:
       0:   00 00                   add    %al,(%rax)
       2:   e8 d5 29 09 fd          callq  0xfd0929dc
       7:   4c 89 e7                mov    %r12,%rdi
       a:   be 04 00 00 00          mov    $0x4,%esi
       f:   e8 c8 29 09 fd          callq  0xfd0929dc
      14:   42 8a 04 3b             mov    (%rbx,%r15,1),%al
      18:   84 c0                   test   %al,%al
      1a:   0f 85 be 00 00 00       jne    0xde
      20:   8b 44 24 40             mov    0x40(%rsp),%eax
      24:   b9 01 00 00 00          mov    $0x1,%ecx
    * 29:   f0 41 0f b1 4d 00       lock cmpxchg %ecx,0x0(%r13) <-- trapping instruction
      2f:   75 45                   jne    0x76
      31:   48 c7 44 24 20 0e 36    movq   $0x45e0360e,0x20(%rsp)
      38:   e0 45
      3a:   4b                      rex.WXB
      3b:   c7                      .byte 0xc7
      3c:   04 37                   add    $0x37,%al
    
    Link: https://syzkaller.appspot.com/bug?extid=b0003676644cf0d6acc4
    Reported-by: syzbot+b0003676644cf0d6acc4@syzkaller.appspotmail.com
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b57c38d12aed1b5d92f74748bed25e0d041729f
Author: Ming Lei <ming.lei@redhat.com>
Date:   Fri Oct 8 13:01:18 2021 +0800

    scsi: core: Put LLD module refcnt after SCSI device is released
    
    commit f2b85040acec9a928b4eb1b57a989324e8e38d3f upstream.
    
    SCSI host release is triggered when SCSI device is freed. We have to make
    sure that the low-level device driver module won't be unloaded before SCSI
    host instance is released because shost->hostt is required in the release
    handler.
    
    Make sure to put LLD module refcnt after SCSI device is released.
    
    Fixes a kernel panic of 'BUG: unable to handle page fault for address'
    reported by Changhui and Yi.
    
    Link: https://lore.kernel.org/r/20211008050118.1440686-1-ming.lei@redhat.com
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Reported-by: Changhui Zhong <czhong@redhat.com>
    Reported-by: Yi Zhang <yi.zhang@redhat.com>
    Tested-by: Yi Zhang <yi.zhang@redhat.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
