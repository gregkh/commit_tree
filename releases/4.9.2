commit 6f2fabab8d63908940450fa27136516323cc3ae9
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon Jan 9 08:32:38 2017 +0100

    Linux 4.9.2

commit 8ed8791885aa14d545d8d5429f2be560c19addd2
Author: Mika Kuoppala <mika.kuoppala@linux.intel.com>
Date:   Wed Dec 14 14:26:20 2016 +0200

    drm/i915: Fix setting of boost freq tunable
    
    commit b1b7ec985805e005055d1d471ca586a715ffc10a upstream.
    
    For limiting the max frequency of gpu, the max freq tunable
    is not enough to hard limit the max gap. We now have also per
    client boost max freq. When this tunable was introduced,
    it was mistakenly made read only. Allow user to gain control by
    setting it writable.
    
    Fixes: 29ecd78d3b79 ("drm/i915: Define a separate variable and control for RPS waitboost frequency")
    Cc: Chris Wilson <chris@chris-wilson.co.uk>
    Cc: Mika Kuoppala <mika.kuoppala@intel.com>
    Cc: Daniel Vetter <daniel.vetter@intel.com>
    Cc: Jani Nikula <jani.nikula@linux.intel.com>
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    Signed-off-by: Mika Kuoppala <mika.kuoppala@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1481718380-9170-1-git-send-email-mika.kuoppala@intel.com
    (cherry picked from commit 73a798711314b54cbd4fe224e24db92c306a8d8c)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18a00ac6d7f106901356e1fa9c082730a2318ed5
Author: Paulo Zanoni <paulo.r.zanoni@intel.com>
Date:   Wed Dec 14 12:55:37 2016 -0200

    drm/i915: skip the first 4k of stolen memory on everything >= gen8
    
    commit 6ba0566cf2afcdb17bff882e3a95cbbcb22c4a83 upstream.
    
    BSpec got updated and this workaround is now listed as standard
    required programming for all subsequent projects. This is confirmed to
    fix Skylake screen flickering issues (probably caused by the fact that
    we initialized a ring in the first page of stolen, but I didn't 100%
    confirm this theory).
    
    v2: this is the patch that fixes the screen flickering, document it.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=94605
    Tested-by: Dominik Klementowski <dominik232@gmail.com>
    Signed-off-by: Paulo Zanoni <paulo.r.zanoni@intel.com>
    Acked-by: Chris Wilson <chris@chris-wilson.co.uk>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/1481727338-9901-1-git-send-email-paulo.r.zanoni@intel.com
    (cherry picked from commit d43537610470d8829ebd17cd7842f47176e35ebd)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6396411054430a6473233735b6e0208759b68291
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Tue Nov 29 16:13:57 2016 +0200

    drm/i915: Initialize dev_priv->atomic_cdclk_freq at init time
    
    commit 1f3dc3e334c1192ebe2939ea17ba12f4776f90c3 upstream.
    
    Looks like we're only initializing dev_priv->atomic_cdclk_freq
    at resume and commit times, not at init time. Let's do that as
    well.
    
    We're now hitting the 'WARN_ON(intel_state->cdclk == 0)' in
    hsw_compute_linetime_wm() on account of populating
    intel_state->cdclk from dev_priv->atomic_cdclk_freq.
    Previously we were mispopulating intel_state->cdclk with
    dev_priv->cdclk_freq which always had a proper value at init
    time and hence the WARN_ON() didn't trigger.
    
    Cc: Matthew Auld <matthew.auld@intel.com>
    Reported-by: Matthew Auld <matthew.auld@intel.com>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=98902
    Fixes: 14676ec6b1a6 ("drm/i915: Fix cdclk vs. dev_cdclk mess when not recomputing things")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1480428837-4207-1-git-send-email-ville.syrjala@linux.intel.com
    Tested-by: Matthew Auld <matthew.auld@intel.com>
    Reviewed-by: Matthew Auld <matthew.auld@intel.com>
    (cherry picked from commit 6a259b1f8a9e99b1ed114f8bf8b0cfccee130e54)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 159e2ea9ed4996e3398cb9174921a4543c785ed2
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Nov 14 18:35:09 2016 +0200

    drm/i915: Fix cdclk vs. dev_cdclk mess when not recomputing things
    
    commit 14676ec6b1a6f2f7fa0bafd98ab42ce77be7a7d4 upstream.
    
    When we end up not recomputing the cdclk, we need to populate
    intel_state->cdclk with the "atomic_cdclk_freq" instead of the
    current cdclk_freq. When no pipes are active, the actual cdclk_freq
    may be lower than what the configuration of the planes and
    pipes would require from the point of view of the software state.
    
    This fixes bogus WARNS from skl_max_scale() which is trying to check
    the plane software state against the cdclk frequency. So any time
    it got called during DPMS off for instance, we might have tripped
    the warn if the current mode would have required a higher than
    minimum cdclk.
    
    v2: Drop the dev_cdclk stuff (Maarten)
    
    Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Cc: Mika Kahola <mika.kahola@intel.com>
    Cc: bruno.pagani@ens-lyon.org
    Cc: Daniel J Blueman <daniel.blueman@gmail.com>
    Cc: Paul Bolle <pebolle@tiscali.nl>
    Cc: Joseph Yasi <joe.yasi@gmail.com>
    Tested-by: Paul Bolle <pebolle@tiscali.nl>
    Tested-by: Joseph Yasi <joe.yasi@gmail.com> (v1)
    Fixes: 1a617b77658e ("drm/i915: Keep track of the cdclk as if all crtc's were active.")
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=98214
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/1479141311-11904-2-git-send-email-ville.syrjala@linux.intel.com
    (cherry picked from commit e0ca7a6be38ce603d26df5707c22e53870a623e0)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d816da6f57661157b3e056da426141f98d3bddde
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Dec 2 15:29:04 2016 +0100

    drm/i915/dsi: Do not clear DPOUNIT_CLOCK_GATE_DISABLE from vlv_init_display_clock_gating
    
    commit bb98e72adaf9d19719aba35f802d4836f5d5176c upstream.
    
    On my Cherrytrail CUBE iwork8 Air tablet PIPE-A would get stuck on loading
    i915 at boot 1 out of every 3 boots, resulting in a non functional LCD.
    Once the i915 driver has successfully loaded, the panel can be disabled /
    enabled without hitting this issue.
    
    The getting stuck is caused by vlv_init_display_clock_gating() clearing
    the DPOUNIT_CLOCK_GATE_DISABLE bit in DSPCLK_GATE_D when called from
    chv_pipe_power_well_ops.enable() on driver load, while a pipe is enabled
    driving the DSI LCD by the BIOS.
    
    Clearing this bit while DSI is in use is a known issue and
    intel_dsi_pre_enable() / intel_dsi_post_disable() already set / clear it
    as appropriate.
    
    This commit modifies vlv_init_display_clock_gating() to leave the
    DPOUNIT_CLOCK_GATE_DISABLE bit alone fixing the pipe getting stuck.
    
    Changes in v2:
    -Replace PIPE-A with "a pipe" or "the pipe" in the commit msg and
    comment
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=97330
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20161202142904.25613-1-hdegoede@redhat.com
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    (cherry picked from commit 721d484563e1a51ada760089c490cbc47e909756)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cb4179f97cf666639f2f11b40d45766bc1b4d85
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Dec 1 21:29:09 2016 +0100

    drm/i915/dsi: Fix chv_exec_gpio disabling the GPIOs it is setting
    
    commit 22ca0d4991169b76e753d767a45f1105c356bbb8 upstream.
    
    Set the CHV_GPIO_GPIOEN bit when updating GPIOs from chv_exec_gpio.
    
    Fixes: a0a6d4ffd2ad ("drm/i915/dsi: add support for gpio elements on CHV")
    Cc: Jani Nikula <jani.nikula@intel.com>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20161201202925.12220-3-hdegoede@redhat.com
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    (cherry picked from commit b2b45fcd921e864a5e9bbc7aa55dee96d5e11c06)
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2037b1b46cdb2cb073b835473bd6c168929edbbd
Author: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
Date:   Wed Dec 21 11:28:49 2016 +0100

    net: mvpp2: fix dma unmapping of TX buffers for fragments
    
    commit 8354491c9d5b06709384cea91d13019bf5e61449 upstream.
    
    Since commit 71ce391dfb784 ("net: mvpp2: enable proper per-CPU TX
    buffers unmapping"), we are not correctly DMA unmapping TX buffers for
    fragments.
    
    Indeed, the mvpp2_txq_inc_put() function only stores in the
    txq_cpu->tx_buffs[] array the physical address of the buffer to be
    DMA-unmapped when skb != NULL. In addition, when DMA-unmapping, we use
    skb_headlen(skb) to get the size to be unmapped. Both of this works fine
    for TX descriptors that are associated directly to a SKB, but not the
    ones that are used for fragments, with a NULL pointer as skb:
    
     - We have a NULL physical address when calling DMA unmap
     - skb_headlen(skb) crashes because skb is NULL
    
    This causes random crashes when fragments are used.
    
    To solve this problem, we need to:
    
     - Store the physical address of the buffer to be unmapped
       unconditionally, regardless of whether it is tied to a SKB or not.
    
     - Store the length of the buffer to be unmapped, which requires a new
       field.
    
    Instead of adding a third array to store the length of the buffer to be
    unmapped, and as suggested by David Miller, this commit refactors the
    tx_buffs[] and tx_skb[] arrays of 'struct mvpp2_txq_pcpu' into a
    separate structure 'mvpp2_txq_pcpu_buf', to which a 'size' field is
    added. Therefore, instead of having three arrays to allocate/free, we
    have a single one, which also improve data locality, reducing the
    impact on the CPU cache.
    
    Fixes: 71ce391dfb784 ("net: mvpp2: enable proper per-CPU TX buffers unmapping")
    Reported-by: Raphael G <raphael.glon@corp.ovh.com>
    Cc: Raphael G <raphael.glon@corp.ovh.com>
    Signed-off-by: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f3a6bbe6f9f5e895d8945494173594ee51632da
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Dec 16 13:42:06 2016 -0500

    sg_write()/bsg_write() is not fit to be called under KERNEL_DS
    
    commit 128394eff343fc6d2f32172f03e24829539c5835 upstream.
    
    Both damn things interpret userland pointers embedded into the payload;
    worse, they are actually traversing those.  Leaving aside the bad
    API design, this is very much _not_ safe to call with KERNEL_DS.
    Bail out early if that happens.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d024532a97db32db4b0fc4cd27c7a9ac15b84e5b
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Thu Nov 24 22:10:23 2016 +0000

    kconfig/nconf: Fix hang when editing symbol with a long prompt
    
    commit 79e51b5c2deea542b3bb8c66e0d502230b017dde upstream.
    
    Currently it is impossible to edit the value of a config symbol with a
    prompt longer than (terminal width - 2) characters.  dialog_inputbox()
    calculates a negative x-offset for the input window and newwin() fails
    as this is invalid.  It also doesn't check for this failure, so it
    busy-loops calling wgetch(NULL) which immediately returns -1.
    
    The additions in the offset calculations also don't match the intended
    size of the window.
    
    Limit the window size and calculate the offset similarly to
    show_scroll_win().
    
    Fixes: 692d97c380c6 ("kconfig: new configuration interface (nconfig)")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 173fd37a3d2135fcf17a3240a71ca9c79ae151ab
Author: Andy Grover <agrover@redhat.com>
Date:   Mon Nov 21 16:35:30 2016 -0800

    target/user: Fix use-after-free of tcmu_cmds if they are expired
    
    commit d0905ca757bc40bd1ebc261a448a521b064777d7 upstream.
    
    Don't free the cmd in tcmu_check_expired_cmd, it's still referenced by
    an entry in our cmd_id->cmd idr. If userspace ever resumes processing,
    tcmu_handle_completions() will use the now-invalid cmd pointer.
    
    Instead, don't free cmd. It will be freed by tcmu_handle_completion() if
    userspace ever recovers, or tcmu_free_device if not.
    
    Reported-by: Bryant G Ly <bgly@us.ibm.com>
    Tested-by: Bryant G Ly <bgly@us.ibm.com>
    Signed-off-by: Andy Grover <agrover@redhat.com>
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 630a2ef354bb569e84a874ec59f45f82c6c5ff04
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Sat Dec 10 08:12:05 2016 -0800

    libnvdimm, pfn: fix align attribute
    
    commit af7d9f0c57941b465043681cb5c3410f7f3f1a41 upstream.
    
    Fix the format specifier so that the attribute can be parsed correctly.
    Currently it returns decimal 1000 for a 4096-byte alignment.
    
    Reported-by: Dave Jiang <dave.jiang@intel.com>
    Fixes: 315c562536c4 ("libnvdimm, pfn: add 'align' attribute, default to HPAGE_SIZE")
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6838ac125324b91eeab5ccaf99e4a9bd1f8a7895
Author: David Daney <david.daney@cavium.com>
Date:   Fri Oct 28 14:15:02 2016 -0700

    of, numa: Return NUMA_NO_NODE from disable of_node_to_nid() if nid not possible.
    
    commit b6cc9474e2dd9f0c19b694b40961d81117f1e918 upstream.
    
    On arm64 NUMA kernels we can pass "numa=off" on the command line to
    disable NUMA.  A side effect of this is that kmalloc_node() calls to
    non-zero nodes will crash the system with an OOPS:
    
    [    0.000000] ITS@0x0000901000020000: allocated 2097152 Devices @10002000000 (flat, esz 8, psz 64K, shr 1)
    [    0.000000] Unable to handle kernel NULL pointer dereference at virtual address 00001680
    [    0.000000] pgd = fffffc0009470000
    [    0.000000] [00001680] *pgd=0000010ffff90003, *pud=0000010ffff90003, *pmd=0000010ffff90003, *pte=0000000000000000
    [    0.000000] Internal error: Oops: 96000006 [#1] SMP
    .
    .
    .
    [    0.000000] [<fffffc00081c8950>] __alloc_pages_nodemask+0xa4/0xe68
    [    0.000000] [<fffffc000821fa70>] new_slab+0xd0/0x564
    [    0.000000] [<fffffc0008221e24>] ___slab_alloc+0x2e4/0x514
    [    0.000000] [<fffffc0008239498>] __slab_alloc+0x48/0x58
    [    0.000000] [<fffffc0008222c20>] __kmalloc_node+0xd0/0x2dc
    [    0.000000] [<fffffc0008115374>] __irq_domain_add+0x7c/0x164
    [    0.000000] [<fffffc0008b461dc>] its_probe+0x784/0x81c
    [    0.000000] [<fffffc0008b462bc>] its_init+0x48/0x1b0
    [    0.000000] [<fffffc0008b4543c>] gic_init_bases+0x228/0x360
    [    0.000000] [<fffffc0008b456bc>] gic_of_init+0x148/0x1cc
    [    0.000000] [<fffffc0008b5aec8>] of_irq_init+0x184/0x298
    [    0.000000] [<fffffc0008b43f9c>] irqchip_init+0x14/0x38
    [    0.000000] [<fffffc0008b12d60>] init_IRQ+0xc/0x30
    [    0.000000] [<fffffc0008b10a3c>] start_kernel+0x240/0x3b8
    [    0.000000] [<fffffc0008b101c4>] __primary_switched+0x30/0x6c
    [    0.000000] Code: 912ec2a0 b9403809 0a0902fb 37b007db (f9400300)
    .
    .
    .
    
    This is caused by code like this in kernel/irq/irqdomain.c
    
        domain = kzalloc_node(sizeof(*domain) + (sizeof(unsigned int) * size),
                      GFP_KERNEL, of_node_to_nid(of_node));
    
    When NUMA is disabled, the concept of a node is really undefined, so
    of_node_to_nid() should unconditionally return NUMA_NO_NODE.
    
    Fix by returning NUMA_NO_NODE when the nid is not in the set of
    possible nodes.
    
    Reported-by: Gilbert Netzer <noname@pdc.kth.se>
    Signed-off-by: David Daney <david.daney@cavium.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d5cf5ae25c95f915b2c7a2dfc3e3767d72bf2b85
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Mon Nov 28 12:42:26 2016 +1100

    powerpc/boot: Request no dynamic linker for boot wrapper
    
    commit ff45000fcb56b5b0f1a14a865d3541746d838a0a upstream.
    
    The boot wrapper performs its own relocations and does not require
    PT_INTERP segment. However currently we don't tell the linker that.
    
    Prior to binutils 2.28 that works OK. But since binutils commit
    1a9ccd70f9a7 ("Fix the linker so that it will not silently generate ELF
    binaries with invalid program headers. Fix readelf to report such
    invalid binaries.") binutils tries to create a program header segment
    due to PT_INTERP, and the link fails because there is no space for it:
    
      ld: arch/powerpc/boot/zImage.pseries: Not enough room for program headers, try linking with -N
      ld: final link failed: Bad value
    
    So tell the linker not to do that, by passing --no-dynamic-linker.
    
    Reported-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    [mpe: Drop dependency on ld-version.sh and massage change log]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efcb3d9442fffe6dd4d12a8c70fe9e6a5423c4df
Author: Geoff Levand <geoff@infradead.org>
Date:   Tue Nov 29 10:47:32 2016 -0800

    powerpc/ps3: Fix system hang with GCC 5 builds
    
    commit 6dff5b67054e17c91bd630bcdda17cfca5aa4215 upstream.
    
    GCC 5 generates different code for this bootwrapper null check that
    causes the PS3 to hang very early in its bootup. This check is of
    limited value, so just get rid of it.
    
    Signed-off-by: Geoff Levand <geoff@infradead.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b23132d6cf56607626760458ff18d3a30a88bd9
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Thu Nov 24 00:02:07 2016 +1100

    powerpc/64e: Convert cmpi to cmpwi in head_64.S
    
    commit f87f253bac3ce4a4eb2a60a1ae604d74e65f9042 upstream.
    
    From 80f23935cadb ("powerpc: Convert cmp to cmpd in idle enter sequence"):
    
      PowerPC's "cmp" instruction has four operands. Normally people write
      "cmpw" or "cmpd" for the second cmp operand 0 or 1. But, frequently
      people forget, and write "cmp" with just three operands.
    
      With older binutils this is silently accepted as if this was "cmpw",
      while often "cmpd" is wanted. With newer binutils GAS will complain
      about this for 64-bit code. For 32-bit code it still silently assumes
      "cmpw" is what is meant.
    
    In this case, cmpwi is called for, so this is just a build fix for
    new toolchains.
    
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 369b330c9d821196af71cc37f362f37b59e4ba59
Author: NeilBrown <neilb@suse.com>
Date:   Mon Dec 5 15:10:11 2016 +1100

    SUNRPC: fix refcounting problems with auth_gss messages.
    
    commit 1cded9d2974fe4fe339fc0ccd6638b80d465ab2c upstream.
    
    There are two problems with refcounting of auth_gss messages.
    
    First, the reference on the pipe->pipe list (taken by a call
    to rpc_queue_upcall()) is not counted.  It seems to be
    assumed that a message in pipe->pipe will always also be in
    pipe->in_downcall, where it is correctly reference counted.
    
    However there is no guaranty of this.  I have a report of a
    NULL dereferences in rpc_pipe_read() which suggests a msg
    that has been freed is still on the pipe->pipe list.
    
    One way I imagine this might happen is:
    - message is queued for uid=U and auth->service=S1
    - rpc.gssd reads this message and starts processing.
      This removes the message from pipe->pipe
    - message is queued for uid=U and auth->service=S2
    - rpc.gssd replies to the first message. gss_pipe_downcall()
      calls __gss_find_upcall(pipe, U, NULL) and it finds the
      *second* message, as new messages are placed at the head
      of ->in_downcall, and the service type is not checked.
    - This second message is removed from ->in_downcall and freed
      by gss_release_msg() (even though it is still on pipe->pipe)
    - rpc.gssd tries to read another message, and dereferences a pointer
      to this message that has just been freed.
    
    I fix this by incrementing the reference count before calling
    rpc_queue_upcall(), and decrementing it if that fails, or normally in
    gss_pipe_destroy_msg().
    
    It seems strange that the reply doesn't target the message more
    precisely, but I don't know all the details.  In any case, I think the
    reference counting irregularity became a measureable bug when the
    extra arg was added to __gss_find_upcall(), hence the Fixes: line
    below.
    
    The second problem is that if rpc_queue_upcall() fails, the new
    message is not freed. gss_alloc_msg() set the ->count to 1,
    gss_add_msg() increments this to 2, gss_unhash_msg() decrements to 1,
    then the pointer is discarded so the memory never gets freed.
    
    Fixes: 9130b8dbc6ac ("SUNRPC: allow for upcalls for same uid but different gss service")
    Link: https://bugzilla.opensuse.org/show_bug.cgi?id=1011250
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba15defe1807ff546ab4d14beb2f9602789c0170
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Sun Nov 27 15:12:39 2016 -0500

    pNFS: Fix a deadlock between read resends and layoutreturn
    
    commit 54e4a0dfa25d9365c4e80a639e80d9213eb6edbe upstream.
    
    We must not call nfs_pageio_init_read() on a new nfs_pageio_descriptor
    while holding a reference to a layout segment, as that can deadlock
    pnfs_update_layout().
    
    Fixes: d67ae825a59d6 ("pnfs/flexfiles: Add the FlexFile Layout Driver")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e523ce8c99f9bbd530fda7d46c35409fee88a50f
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Mon Nov 14 14:34:18 2016 -0500

    pNFS: Clear NFS_LAYOUT_RETURN_REQUESTED when invalidating the layout stateid
    
    commit ae5a459d5f65c3e83f3e14068dde5fb9c9d81807 upstream.
    
    We must ensure that we don't schedule a layoutreturn if the layout stateid
    has been marked as invalid.
    
    Fixes: 2a59a0411671e ("pNFS: Fix pnfs_set_layout_stateid() to clear...")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f32659df6e154b40391afe7a5db3f0879ad6e70a
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Mon Nov 14 13:10:48 2016 -0500

    pNFS: Don't clear the layout stateid if a layout return is outstanding
    
    commit 7b650994ab07434ae58a247dc9ac87d2488ca75c upstream.
    
    If we no longer hold any layout segments, we're normally expected to
    consider the layout stateid to be invalid. However we cannot assume this
    if we're about to, or in the process of sending a layoutreturn.
    
    Fixes: 334a8f37115b ("pNFS: Don't forget the layout stateid if...")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24b049fa0cd93e9e3e4166de8937b197b101a585
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Mon Oct 17 17:54:32 2016 -0400

    pNFS: On error, do not send LAYOUTGET until the LAYOUTRETURN has completed
    
    commit 6604b203fb6394ed1f24c21bfa3c207e5ae8e461 upstream.
    
    If there is an I/O error, we should not call LAYOUTGET until the
    LAYOUTRETURN that reports the error is complete.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b775b86a5fe8f45500ce027a60ca0f1e1f49a13e
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Sep 5 21:42:32 2016 -0400

    nfs_write_end(): fix handling of short copies
    
    commit c0cf3ef5e0f47e385920450b245d22bead93e7ad upstream.
    
    What matters when deciding if we should make a page uptodate is
    not how much we _wanted_ to copy, but how much we actually have
    copied.  As it is, on architectures that do not zero tail on
    short copy we can leave uninitialized data in page marked uptodate.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fc6cb9c303e289e0772cd9db593db9acd15cd678
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Fri Dec 2 16:35:09 2016 +0100

    libceph: verify authorize reply on connect
    
    commit 5c056fdc5b474329037f2aa18401bd73033e0ce0 upstream.
    
    After sending an authorizer (ceph_x_authorize_a + ceph_x_authorize_b),
    the client gets back a ceph_x_authorize_reply, which it is supposed to
    verify to ensure the authenticity and protect against replay attacks.
    The code for doing this is there (ceph_x_verify_authorizer_reply(),
    ceph_auth_verify_authorizer_reply() + plumbing), but it is never
    invoked by the the messenger.
    
    AFAICT this goes back to 2009, when ceph authentication protocols
    support was added to the kernel client in 4e7a5dcd1bba ("ceph:
    negotiate authentication protocol; implement AUTH_NONE protocol").
    
    The second param of ceph_connection_operations::verify_authorizer_reply
    is unused all the way down.  Pass 0 to facilitate backporting, and kill
    it in the next commit.
    
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Sage Weil <sage@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8c34b0cc0be6c70d9a7a5e5bb8da86af42771f9
Author: Alan Stern <stern@rowland.harvard.edu>
Date:   Fri Oct 21 16:45:38 2016 -0400

    PCI: Check for PME in targeted sleep state
    
    commit 6496ebd7edf446fccf8266a1a70ffcb64252593e upstream.
    
    One some systems, the firmware does not allow certain PCI devices to be put
    in deep D-states.  This can cause problems for wakeup signalling, if the
    device does not support PME# in the deepest allowed suspend state.  For
    example, Pierre reports that on his system, ACPI does not permit his xHCI
    host controller to go into D3 during runtime suspend -- but D3 is the only
    state in which the controller can generate PME# signals.  As a result, the
    controller goes into runtime suspend but never wakes up, so it doesn't work
    properly.  USB devices plugged into the controller are never detected.
    
    If the device relies on PME# for wakeup signals but is not capable of
    generating PME# in the target state, the PCI core should accurately report
    that it cannot do wakeup from runtime suspend.  This patch modifies the
    pci_dev_run_wake() routine to add this check.
    
    Reported-by: Pierre de Villemereuil <flyos@mailoo.org>
    Tested-by: Pierre de Villemereuil <flyos@mailoo.org>
    Signed-off-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    CC: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cc603e9a828e205c393e49711980c9e9e3938ba
Author: Shiraz Saleem <shiraz.saleem@intel.com>
Date:   Fri Nov 11 10:55:41 2016 -0600

    i40iw: Use correct src address in memcpy to rdma stats counters
    
    commit 91c42b72f8e8b45961ff05a05009b644e6316ca2 upstream.
    
    hw_stats is a pointer to i40_iw_dev_stats struct in i40iw_get_hw_stats().
    Use hw_stats and not &hw_stats in the memcpy to copy the i40iw device stats
    data into rdma_hw_stats counters.
    
    Fixes: b40f4757daa1 ("IB/core: Make device counter infrastructure dynamic")
    
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Faisal Latif <faisal.latif@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6195cd1a9628281a10a7132ae0f664a496b2b33c
Author: Miklos Szeredi <mszeredi@redhat.com>
Date:   Fri Dec 9 11:57:43 2016 +0100

    bad_inode: add missing i_op initializers
    
    commit 3f9ca75516a7e581ff803f751a869c1da5ae5fa5 upstream.
    
    New inode operations were forgotten to be added to bad_inode.  Most of the
    time the op is checked for NULL before being called but marking the inode
    bad and the check can race (very unlikely).
    
    However in case of ->get_link() only DCACHE_SYMLINK_TYPE is checked before
    calling the op, so there's no race and will definitely oops when trying to
    follow links on such a beast.
    
    Also remove comments about extinct ops.
    
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit afd2a1994ea4e37fb602410b350827d5909714fe
Author: Jingkui Wang <jkwang@google.com>
Date:   Mon Dec 12 13:51:46 2016 -0800

    Input: drv260x - fix input device's parent assignment
    
    commit 5a8a6b89c15766446d845671d574a9243b6d8786 upstream.
    
    We were assigning I2C bus controller instead of client as parent device.
    Besides being logically wrong, it messed up with devm handling of input
    device. As a result we were leaving input device and event node behind
    after rmmod-ing the driver, which lead to a kernel oops if one were to
    access the event node later.
    
    Let's remove the assignment and rely on devm_input_allocate_device() to
    set it up properly for us.
    
    Signed-off-by: Jingkui Wang <jkwang@google.com>
    Fixes: 7132fe4f5687 ("Input: drv260x - add TI drv260x haptics driver")
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5d92c0c84f3b821c65210ab20bb4583879a03c9
Author: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
Date:   Thu Dec 8 20:22:43 2016 -0200

    v4l: tvp5150: Add missing break in set control handler
    
    commit d183e4efcae8d88a2f252e546978658ca6d273cc upstream.
    
    A break is missing resulting in the hue control enabling or disabling
    the decode completely. Fix it.
    
    Fixes: c43875f66140 ("[media] tvp5150: replace MEDIA_ENT_F_CONN_TEST by a control")
    
    Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7f89c1373637395de72f53cb20a170fe24d1f371
Author: Andrey Utkin <andrey.utkin@corp.bluecherry.net>
Date:   Sat Oct 22 13:34:36 2016 -0200

    media: solo6x10: fix lockup by avoiding delayed register write
    
    commit 5fc4b067ec082c3127e0156f800769b7e0dce078 upstream.
    
    This fixes a lockup at device probing which happens on some solo6010
    hardware samples. This is a regression introduced by commit e1ceb25a1569
    ("[media] SOLO6x10: remove unneeded register locking and barriers")
    
    The observed lockup happens in solo_set_motion_threshold() called from
    solo_motion_config().
    
    This extra "flushing" is not fundamentally needed for every write, but
    apparently the code in driver assumes such behaviour at last in some
    places.
    
    Actual fix was proposed by Hans Verkuil.
    
    Fixes: e1ceb25a1569 ("[media] SOLO6x10: remove unneeded register locking and barriers")
    
    Signed-off-by: Andrey Utkin <andrey.utkin@corp.bluecherry.net>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fbe140e9d360a31ec88ee1126df778b33dde9f2
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Fri Sep 16 03:14:33 2016 -0300

    s5p-mfc: fix failure path of s5p_mfc_alloc_memdev()
    
    commit 3467c9a7e7f9209a9ecd8f9db65b04a323a13932 upstream.
    
    s5p_mfc_alloc_memdev() function lacks proper releasing
    of allocated device in case of reserved memory initialization
    failure. This results in NULL pointer dereference:
    
    [    2.828457] Unable to handle kernel NULL pointer dereference at virtual address 00000001
    [    2.835089] pgd = c0004000
    [    2.837752] [00000001] *pgd=00000000
    [    2.844696] Internal error: Oops: 5 [#1] PREEMPT SMP ARM
    [    2.848680] Modules linked in:
    [    2.851722] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 4.8.0-rc6-00002-gafa1b97 #878
    [    2.859357] Hardware name: SAMSUNG EXYNOS (Flattened Device Tree)
    [    2.865433] task: ef080000 task.stack: ef06c000
    [    2.869952] PC is at strcmp+0x0/0x30
    [    2.873508] LR is at platform_match+0x84/0xac
    [    2.877847] pc : [<c032621c>]    lr : [<c03f65e8>]    psr: 20000013
    [    2.877847] sp : ef06dea0  ip : 00000000  fp : 00000000
    [    2.889303] r10: 00000000  r9 : c0b34848  r8 : c0b1e968
    [    2.894511] r7 : 00000000  r6 : 00000001  r5 : c086e7fc  r4 : eeb8e010
    [    2.901021] r3 : 0000006d  r2 : 00000000  r1 : c086e7fc  r0 : 00000001
    [    2.907533] Flags: nzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    [    2.914649] Control: 10c5387d  Table: 4000404a  DAC: 00000051
    [    2.920378] Process swapper/0 (pid: 1, stack limit = 0xef06c210)
    [    2.926367] Stack: (0xef06dea0 to 0xef06e000)
    [    2.930711] dea0: eeb8e010 c0c2d91c c03f4a6c c03f4a8c 00000000 c0c2d91c c03f4a6c c03f2fc8
    [    2.938870] dec0: ef003274 ef10c4c0 c0c2d91c ef10cc80 c0c21270 c03f3fa4 c09c1be8 c0c2d91c
    [    2.947028] dee0: 00000006 c0c2d91c 00000006 c0b3483c c0c47000 c03f5314 c0c2d908 c0b5fed8
    [    2.955188] df00: 00000006 c010178c 60000013 c0a4ef14 00000000 c06feaa0 ef080000 60000013
    [    2.963347] df20: 00000000 c0c095c8 efffca76 c0816b8c 000000d5 c0134098 c0b34848 c09d6cdc
    [    2.971506] df40: c0a4de70 00000000 00000006 00000006 c0c09568 efffca40 c0b5fed8 00000006
    [    2.979665] df60: c0b3483c c0c47000 000000d5 c0b34848 c0b005a4 c0b00d84 00000006 00000006
    [    2.987824] df80: 00000000 c0b005a4 00000000 c06fb4d8 00000000 00000000 00000000 00000000
    [    2.995983] dfa0: 00000000 c06fb4e0 00000000 c01079b8 00000000 00000000 00000000 00000000
    [    3.004142] dfc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [    3.012302] dfe0: 00000000 00000000 00000000 00000000 00000013 00000000 ffffffff ffffffff
    [    3.020469] [<c032621c>] (strcmp) from [<c03f65e8>] (platform_match+0x84/0xac)
    [    3.027672] [<c03f65e8>] (platform_match) from [<c03f4a8c>] (__driver_attach+0x20/0xb0)
    [    3.035654] [<c03f4a8c>] (__driver_attach) from [<c03f2fc8>] (bus_for_each_dev+0x54/0x88)
    [    3.043812] [<c03f2fc8>] (bus_for_each_dev) from [<c03f3fa4>] (bus_add_driver+0xe8/0x1f4)
    [    3.051971] [<c03f3fa4>] (bus_add_driver) from [<c03f5314>] (driver_register+0x78/0xf4)
    [    3.059958] [<c03f5314>] (driver_register) from [<c010178c>] (do_one_initcall+0x3c/0x16c)
    [    3.068123] [<c010178c>] (do_one_initcall) from [<c0b00d84>] (kernel_init_freeable+0x120/0x1ec)
    [    3.076802] [<c0b00d84>] (kernel_init_freeable) from [<c06fb4e0>] (kernel_init+0x8/0x118)
    [    3.084958] [<c06fb4e0>] (kernel_init) from [<c01079b8>] (ret_from_fork+0x14/0x3c)
    [    3.092506] Code: 1afffffb e12fff1e e1a03000 eafffff7 (e4d03001)
    [    3.098618] ---[ end trace 511bf9d750810709 ]---
    [    3.103207] Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b
    
    This patch fixes this issue.
    
    Fixes: c79667dd93b084fe412bcfe7fbf0ba43f7dec520 ("media: s5p-mfc: replace custom
            reserved memory handling code with generic one")
    
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fd64b8302593a6398e4e05571e84309b017fd55
Author: Antti Palosaari <crope@iki.fi>
Date:   Wed Nov 30 19:36:14 2016 -0200

    mn88473: fix chip id check on probe
    
    commit d930b5b5bf122a61952cfebabb1e618682a2631a upstream.
    
    A register used to identify chip during probe was overwritten during
    firmware download and due to that later probe's for warm chip were
    failing. Detect chip from the another register, which is located on
    different register bank 2.
    
    Fixes: 7908fad99a6c ("[media] mn88473: finalize driver")
    
    Signed-off-by: Antti Palosaari <crope@iki.fi>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb9afff9513dff7862eba01679fb6587e97fc2b7
Author: Antti Palosaari <crope@iki.fi>
Date:   Wed Nov 30 22:08:27 2016 -0200

    mn88472: fix chip id check on probe
    
    commit 365fe4e0ce218dc5ad10df17b150a366b6015499 upstream.
    
    A register used to identify chip during probe was overwritten during
    firmware download and due to that later probe's for warm chip were
    failing. Detect chip from the another register, which is located on
    different register bank 2.
    
    Fixes: 94d0eaa41987 ("[media] mn88472: move out of staging to media")
    
    Signed-off-by: Antti Palosaari <crope@iki.fi>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9aff8b170fe01cb01cdcce2590dd135925570f1b
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Dec 19 18:00:05 2016 +0100

    IB/cma: Fix a race condition in iboe_addr_get_sgid()
    
    commit fba332b079029c2f4f7e84c1c1cd8e3867310c90 upstream.
    
    Code that dereferences the struct net_device ip_ptr member must be
    protected with an in_dev_get() / in_dev_put() pair. Hence insert
    calls to these functions.
    
    Fixes: commit 7b85627b9f02 ("IB/cma: IBoE (RoCE) IP-based GID addressing")
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Reviewed-by: Moni Shoua <monis@mellanox.com>
    Cc: Or Gerlitz <ogerlitz@mellanox.com>
    Cc: Roland Dreier <roland@purestorage.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 476ed812c42d20ebd26468ce55e34b02ebe1239d
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Dec 15 17:15:07 2016 +0100

    IB/rxe: Fix a memory leak in rxe_qp_cleanup()
    
    commit e259934d4df7f99f2a5c2c4f074f6a55bd4b1722 upstream.
    
    A socket is associated with every QP by the rxe driver but sock_release()
    is never called. Add a call to sock_release() in rxe_qp_cleanup().
    
    Fixes: commit 8700e3e7c48A5 ("Add Soft RoCE driver")
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Cc: Moni Shoua <monis@mellanox.com>
    Cc: Kamal Heib <kamalh@mellanox.com>
    Cc: Amir Vadai <amirv@mellanox.com>
    Cc: Haggai Eran <haggaie@mellanox.com>
    Reviewed-by: Moni Shoua <monis@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5984423bf7ebea12f953e4665aa72ccff83623d1
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Nov 21 10:22:17 2016 -0800

    IB/multicast: Check ib_find_pkey() return value
    
    commit d3a2418ee36a59bc02e9d454723f3175dcf4bfd9 upstream.
    
    This patch avoids that Coverity complains about not checking the
    ib_find_pkey() return value.
    
    Fixes: commit 547af76521b3 ("IB/multicast: Report errors on multicast groups if P_key changes")
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Cc: Sean Hefty <sean.hefty@intel.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4187dfa67fa9bfdfa3ddc14796b42302faf1f357
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Nov 21 10:21:41 2016 -0800

    IPoIB: Avoid reading an uninitialized member variable
    
    commit 11b642b84e8c43e8597de031678d15c08dd057bc upstream.
    
    This patch avoids that Coverity reports the following:
    
        Using uninitialized value port_attr.state when calling printk
    
    Fixes: commit 94232d9ce817 ("IPoIB: Start multicast join process only on active ports")
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Cc: Erez Shitrit <erezsh@mellanox.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 382072e09f19ba0fa6a3c8e3373d36bb7247cd44
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Mon Nov 21 10:21:17 2016 -0800

    IB/mad: Fix an array index check
    
    commit 2fe2f378dd45847d2643638c07a7658822087836 upstream.
    
    The array ib_mad_mgmt_class_table.method_table has MAX_MGMT_CLASS
    (80) elements. Hence compare the array index with that value instead
    of with IB_MGMT_MAX_METHODS (128). This patch avoids that Coverity
    reports the following:
    
    Overrunning array class->method_table of 80 8-byte elements at element index 127 (byte offset 1016) using index convert_mgmt_class(mad_hdr->mgmt_class) (which evaluates to 127).
    
    Fixes: commit b7ab0b19a85f ("IB/mad: Verify mgmt class in received MADs")
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Cc: Sean Hefty <sean.hefty@intel.com>
    Reviewed-by: Hal Rosenstock <hal@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 239b40eb6189e49610e1e614c3670f92d74b9c7b
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Thu Dec 8 20:54:49 2016 -0500

    fgraph: Handle a case where a tracer ignores set_graph_notrace
    
    commit 794de08a16cf1fc1bf785dc48f66d36218cf6d88 upstream.
    
    Both the wakeup and irqsoff tracers can use the function graph tracer when
    the display-graph option is set. The problem is that they ignore the notrace
    file, and record the entry of functions that would be ignored by the
    function_graph tracer. This causes the trace->depth to be recorded into the
    ring buffer. The set_graph_notrace uses a trick by adding a large negative
    number to the trace->depth when a graph function is to be ignored.
    
    On trace output, the graph function uses the depth to record a stack of
    functions. But since the depth is negative, it accesses the array with a
    negative number and causes an out of bounds access that can cause a kernel
    oops or corrupt data.
    
    Have the print functions handle cases where a tracer still records functions
    even when they are in set_graph_notrace.
    
    Also add warnings if the depth is below zero before accessing the array.
    
    Note, the function graph logic will still prevent the return of these
    functions from being recorded, which means that they will be left hanging
    without a return. For example:
    
       # echo '*spin*' > set_graph_notrace
       # echo 1 > options/display-graph
       # echo wakeup > current_tracer
       # cat trace
       [...]
          _raw_spin_lock() {
            preempt_count_add() {
            do_raw_spin_lock() {
          update_rq_clock();
    
    Where it should look like:
    
          _raw_spin_lock() {
            preempt_count_add();
            do_raw_spin_lock();
          }
          update_rq_clock();
    
    Cc: Namhyung Kim <namhyung.kim@lge.com>
    Fixes: 29ad23b00474 ("ftrace: Add set_graph_notrace filter")
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a035dc674dd477e61e5b917c60c30622b6d083f8
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Dec 12 11:04:53 2016 +0100

    x86/smpboot: Make logical package management more robust
    
    commit 9d85eb9119f4eeeb48e87adfcd71f752655700e9 upstream.
    
    The logical package management has several issues:
    
     - The APIC ids provided by ACPI are not required to be the same as the
       initial APIC id which can be retrieved by CPUID. The APIC ids provided
       by ACPI are those which are written by the BIOS into the APIC. The
       initial id is set by hardware and can not be changed. The hardware
       provided ids contain the real hardware package information.
    
       Especially AMD sets the effective APIC id different from the hardware id
       as they need to reserve space for the IOAPIC ids starting at id 0.
    
       As a consequence those machines trigger the currently active firmware
       bug printouts in dmesg, These are obviously wrong.
    
     - Virtual machines have their own interesting of enumerating APICs and
       packages which are not reliably covered by the current implementation.
    
    The sizing of the mapping array has been tweaked to be generously large to
    handle systems which provide a wrong core count when HT is disabled so the
    whole magic which checks for space in the physical hotplug case is not
    needed anymore.
    
    Simplify the whole machinery and do the mapping when the CPU starts and the
    CPUID derived physical package information is available. This solves the
    observed problems on AMD machines and works for the virtualization issues
    as well.
    
    Remove the extra call from XEN cpu bringup code as it is not longer
    required.
    
    Fixes: d49597fd3bc7 ("x86/cpu: Deal with broken firmware (VMWare/XEN)")
    Reported-and-tested-by: Borislav Petkov <bp@suse.de>
    Tested-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: M. Vefa Bicakci <m.v.b@runbox.com>
    Cc: xen-devel <xen-devel@lists.xen.org>
    Cc: Charles (Chas) Williams <ciwillia@brocade.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Alok Kataria <akataria@vmware.com>
    Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1612121102260.3429@nanos
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3168762e8ad3600392b0b6e230e550271c68fe36
Author: Marcos Paulo de Souza <marcos.souza.org@gmail.com>
Date:   Tue Nov 29 23:23:06 2016 -0200

    platform/x86: asus-nb-wmi.c: Add X45U quirk
    
    commit e74e259939275a5dd4e0d02845c694f421e249ad upstream.
    
    Without this patch, the Asus X45U wireless card can't be turned
    on (hard-blocked), but after a suspend/resume it just starts working.
    
    Following this bug report[1], there are other cases like this one, but
    this Asus is the only model that I can test.
    
    [1] https://ubuntuforums.org/showthread.php?t=2181558
    
    Signed-off-by: Marcos Paulo de Souza <marcos.souza.org@gmail.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21be088c36c604af29810b3fe5a7a8c7bb42b0e9
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Thu Dec 8 12:48:26 2016 -0500

    ftrace/x86_32: Set ftrace_stub to weak to prevent gcc from using short jumps to it
    
    commit 847fa1a6d3d00f3bdf68ef5fa4a786f644a0dd67 upstream.
    
    With new binutils, gcc may get smart with its optimization and change a jmp
    from a 5 byte jump to a 2 byte one even though it was jumping to a global
    function. But that global function existed within a 2 byte radius, and gcc
    was able to optimize it. Unfortunately, that jump was also being modified
    when function graph tracing begins. Since ftrace expected that jump to be 5
    bytes, but it was only two, it overwrote code after the jump, causing a
    crash.
    
    This was fixed for x86_64 with commit 8329e818f149, with the same subject as
    this commit, but nothing was done for x86_32.
    
    Fixes: d61f82d06672 ("ftrace: use dynamic patching for updating mcount calls")
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Tested-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e80ceb2da52e0aae8e0ae9632c3abbfdd579cf61
Author: Michael S. Tsirkin <mst@redhat.com>
Date:   Tue Dec 6 06:07:15 2016 +0200

    vsock/virtio: fix src/dst cid format
    
    commit f83f12d660d11718d3eed9d979ee03e83aa55544 upstream.
    
    These fields are 64 bit, using le32_to_cpu and friends
    on these will not do the right thing.
    Fix this up.
    
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d06485e0fcf58a88daadcbe119a7d433cdaad8e6
Author: Jan Kara <jack@suse.cz>
Date:   Mon Dec 12 16:08:41 2016 +0100

    fsnotify: Fix possible use-after-free in inode iteration on umount
    
    commit 5716863e0f8251d3360d4cbfc0e44e08007075df upstream.
    
    fsnotify_unmount_inodes() plays complex tricks to pin next inode in the
    sb->s_inodes list when iterating over all inodes. Furthermore the code has a
    bug that if the current inode is the last on i_sb_list that does not have e.g.
    I_FREEING set, then we leave next_i pointing to inode which may get removed
    from the i_sb_list once we drop s_inode_list_lock thus resulting in
    use-after-free issues (usually manifesting as infinite looping in
    fsnotify_unmount_inodes()).
    
    Fix the problem by keeping current inode pinned somewhat longer. Then we can
    make the code much simpler and standard.
    
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f618a0b872fea38c7d1d1f79eda40f88c6466c2
Author: Jim Mattson <jmattson@google.com>
Date:   Mon Dec 12 11:01:37 2016 -0800

    kvm: nVMX: Allow L1 to intercept software exceptions (#BP and #OF)
    
    commit ef85b67385436ddc1998f45f1d6a210f935b3388 upstream.
    
    When L2 exits to L0 due to "exception or NMI", software exceptions
    (#BP and #OF) for which L1 has requested an intercept should be
    handled by L1 rather than L0. Previously, only hardware exceptions
    were forwarded to L1.
    
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94107133ae811e0175803639ae7ab2411e6cdb3c
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Wed Nov 16 16:43:28 2016 +1100

    KVM: PPC: Book3S HV: Don't lose hardware R/C bit updates in H_PROTECT
    
    commit f064a0de1579fabded8990bed93971e30deb9ecb upstream.
    
    The hashed page table MMU in POWER processors can update the R
    (reference) and C (change) bits in a HPTE at any time until the
    HPTE has been invalidated and the TLB invalidation sequence has
    completed.  In kvmppc_h_protect, which implements the H_PROTECT
    hypercall, we read the HPTE, modify the second doubleword,
    invalidate the HPTE in memory, do the TLB invalidation sequence,
    and then write the modified value of the second doubleword back
    to memory.  In doing so we could overwrite an R/C bit update done
    by hardware between when we read the HPTE and when the TLB
    invalidation completed.  To fix this we re-read the second
    doubleword after the TLB invalidation and OR in the (possibly)
    new values of R and C.  We can use an OR since hardware only ever
    sets R and C, never clears them.
    
    This race was found by code inspection.  In principle this bug could
    cause occasional guest memory corruption under host memory pressure.
    
    Fixes: a8606e20e41a ("KVM: PPC: Handle some PAPR hcalls in the kernel", 2011-06-29)
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75b1053c2b8c01baedf85f17be8455dadc63a383
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Mon Nov 7 15:09:58 2016 +1100

    KVM: PPC: Book3S HV: Save/restore XER in checkpointed register state
    
    commit 0d808df06a44200f52262b6eb72bcb6042f5a7c5 upstream.
    
    When switching from/to a guest that has a transaction in progress,
    we need to save/restore the checkpointed register state.  Although
    XER is part of the CPU state that gets checkpointed, the code that
    does this saving and restoring doesn't save/restore XER.
    
    This fixes it by saving and restoring the XER.  To allow userspace
    to read/write the checkpointed XER value, we also add a new ONE_REG
    specifier.
    
    The visible effect of this bug is that the guest may see its XER
    value being corrupted when it uses transactions.
    
    Fixes: e4e38121507a ("KVM: PPC: Book3S HV: Add transactional memory support")
    Fixes: 0a8eccefcb34 ("KVM: PPC: Book3S HV: Add missing code for transaction reclaim on guest exit")
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Reviewed-by: Thomas Huth <thuth@redhat.com>
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 483eeca2cf389ea717cece86cce8494a050cb3f4
Author: Kevin Barnett <kevin.barnett@microsemi.com>
Date:   Thu Dec 8 10:29:29 2016 -0600

    scsi: aacraid: remove wildcard for series 9 controllers
    
    commit ae2aae2421983f6f68eb7c4692624bc43ea50712 upstream.
    
    Controllers with this PCI ID never shipped outside of
    PMCS/Microsemi. Remove the ID from the aacraid driver. smartpqi is the
    correct driver for these controllers.
    
    [mkp: patch description]
    
    Reviewed-by: Scott Teel <scott.teel@microsemi.com>
    Signed-off-by: Kevin Barnett <kevin.barnett@microsemi.com>
    Signed-off-by: Don Brace <don.brace@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8beb252f2be2d1dcd6a6bef199dc62261f597b15
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Sun Nov 27 19:32:32 2016 +0300

    md/raid5: limit request size according to implementation limits
    
    commit e8d7c33232e5fdfa761c3416539bc5b4acd12db5 upstream.
    
    Current implementation employ 16bit counter of active stripes in lower
    bits of bio->bi_phys_segments. If request is big enough to overflow
    this counter bio will be completed and freed too early.
    
    Fortunately this not happens in default configuration because several
    other limits prevent that: stripe_cache_size * nr_disks effectively
    limits count of active stripes. And small max_sectors_kb at lower
    disks prevent that during normal read/write operations.
    
    Overflow easily happens in discard if it's enabled by module parameter
    "devices_handle_discard_safely" and stripe_cache_size is set big enough.
    
    This patch limits requests size with 256Mb - 8Kb to prevent overflows.
    
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Cc: Shaohua Li <shli@kernel.org>
    Cc: Neil Brown <neilb@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0357979d62049bd029e4b6efbaedbf4b0ea15ff
Author: Josh Cartwright <joshc@ni.com>
Date:   Thu Oct 13 10:44:33 2016 -0500

    sc16is7xx: Drop bogus use of IRQF_ONESHOT
    
    commit 04da73803c05dc1150ccc31cbf93e8cd56679c09 upstream.
    
    The use of IRQF_ONESHOT when registering an interrupt handler with
    request_irq() is non-sensical.
    
    Not only that, it also prevents the handler from being threaded when it
    otherwise should be w/ IRQ_FORCED_THREADING is enabled.  This causes the
    following deadlock observed by Sean Nyekjaer on -rt:
    
    Internal error: Oops - BUG: 0 [#1] PREEMPT SMP ARM
    [..]
       rt_spin_lock_slowlock from queue_kthread_work
       queue_kthread_work from sc16is7xx_irq
       sc16is7xx_irq [sc16is7xx] from handle_irq_event_percpu
       handle_irq_event_percpu from handle_irq_event
       handle_irq_event from handle_level_irq
       handle_level_irq from generic_handle_irq
       generic_handle_irq from mxc_gpio_irq_handler
       mxc_gpio_irq_handler from mx3_gpio_irq_handler
       mx3_gpio_irq_handler from generic_handle_irq
       generic_handle_irq from __handle_domain_irq
       __handle_domain_irq from gic_handle_irq
       gic_handle_irq from __irq_svc
       __irq_svc from rt_spin_unlock
       rt_spin_unlock from kthread_worker_fn
       kthread_worker_fn from kthread
       kthread from ret_from_fork
    
    Fixes: 9e6f4ca3e567 ("sc16is7xx: use kthread_worker for tx_work and irq")
    Reported-by: Sean Nyekjaer <sean.nyekjaer@prevas.dk>
    Signed-off-by: Josh Cartwright <joshc@ni.com>
    Cc: linux-rt-users@vger.kernel.org
    Cc: Jakub Kicinski <moorray3@wp.pl>
    Cc: linux-serial@vger.kernel.org
    Cc: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Julia Cartwright <julia@ni.com>
    Acked-by: Jakub Kicinski <kubakici@wp.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d5ec9eb3eea8e6efc6a5795e70bd4057adaf8a9
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Dec 16 12:59:31 2016 -0800

    latent_entropy: fix ARM build error on earlier gcc
    
    commit 9988f4d577f42f43b7612d755477585f35424af7 upstream.
    
    This fixes build errors seen on gcc-4.9.3 or gcc-5.3.1 for an ARM:
    
    arm-soc/init/initramfs.c: In function 'error':
    arm-soc/init/initramfs.c:50:1: error: unrecognizable insn:
     }
     ^
    (insn 26 25 27 5 (set (reg:SI 111 [ local_entropy.243 ])
            (rotatert:SI (reg:SI 116 [ local_entropy.243 ])
                (const_int -30 [0xffffffffffffffe2]))) -1
         (nil))
    
    Patch from PaX Team <pageexec@freemail.hu>
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Reported-by: Brad Spengler <spender@grsecurity.net>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 959e95305f1316475dbbfa5b366d82d5ac65562b
Author: Marc Zyngier <maz@kernel.org>
Date:   Tue Dec 6 14:34:22 2016 +0000

    arm64: KVM: pmu: Reset PMSELR_EL0.SEL to a sane value before entering the guest
    
    commit 21cbe3cc8a48ff17059912e019fbde28ed54745a upstream.
    
    The ARMv8 architecture allows the cycle counter to be configured
    by setting PMSELR_EL0.SEL==0x1f and then accessing PMXEVTYPER_EL0,
    hence accessing PMCCFILTR_EL0. But it disallows the use of
    PMSELR_EL0.SEL==0x1f to access the cycle counter itself through
    PMXEVCNTR_EL0.
    
    Linux itself doesn't violate this rule, but we may end up with
    PMSELR_EL0.SEL being set to 0x1f when we enter a guest. If that
    guest accesses PMXEVCNTR_EL0, the access may UNDEF at EL1,
    despite the guest not having done anything wrong.
    
    In order to avoid this unfortunate course of events (haha!), let's
    sanitize PMSELR_EL0 on guest entry. This ensures that the guest
    won't explode unexpectedly.
    
    Acked-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 111e0ccaf979c688ca8b56e96561e7207e971b6a
Author: Heiko Carstens <heiko.carstens@de.ibm.com>
Date:   Mon Nov 28 11:40:27 2016 +0100

    s390/kexec: use node 0 when re-adding crash kernel memory
    
    commit 9f88eb4df728aebcd2ddd154d99f1d75b428b897 upstream.
    
    When re-adding crash kernel memory within setup_resources() the
    function memblock_add() is used. That function will add memory by
    default to node "MAX_NUMNODES" instead of node 0, like the memory
    detection code does. In case of !NUMA this will trigger this warning
    when the kernel generates the vmemmap:
    
    Usage of MAX_NUMNODES is deprecated. Use NUMA_NO_NODE instead
    WARNING: CPU: 0 PID: 0 at mm/memblock.c:1261 memblock_virt_alloc_internal+0x76/0x220
    CPU: 0 PID: 0 Comm: swapper Not tainted 4.9.0-rc6 #16
    Call Trace:
     [<0000000000d0b2e8>] memblock_virt_alloc_try_nid+0x88/0xc8
     [<000000000083c8ea>] __earlyonly_bootmem_alloc.constprop.1+0x42/0x50
     [<000000000083e7f4>] vmemmap_populate+0x1ac/0x1e0
     [<0000000000840136>] sparse_mem_map_populate+0x46/0x68
     [<0000000000d0c59c>] sparse_init+0x184/0x238
     [<0000000000cf45f6>] paging_init+0xbe/0xf8
     [<0000000000cf1d4a>] setup_arch+0xa02/0xae0
     [<0000000000ced75a>] start_kernel+0x72/0x450
     [<0000000000100020>] _stext+0x20/0x80
    
    If NUMA is selected numa_setup_memory() will fix the node assignments
    before the vmemmap will be populated; so this warning will only appear
    if NUMA is not selected.
    
    To fix this simply use memblock_add_node() and re-add crash kernel
    memory explicitly to node 0.
    
    Reported-and-tested-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Fixes: 4e042af463f8 ("s390/kexec: fix crash on resize of reserved memory")
    Signed-off-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53bbee3348d88b9f68946e249a67beaff82aee6a
Author: Gerald Schaefer <gerald.schaefer@de.ibm.com>
Date:   Mon Nov 21 12:13:58 2016 +0100

    s390/vmlogrdr: fix IUCV buffer allocation
    
    commit 5457e03de918f7a3e294eb9d26a608ab8a579976 upstream.
    
    The buffer for iucv_message_receive() needs to be below 2 GB. In
    __iucv_message_receive(), the buffer address is casted to an u32, which
    would result in either memory corruption or an addressing exception when
    using addresses >= 2 GB.
    
    Fix this by using GFP_DMA for the buffer allocation.
    
    Signed-off-by: Gerald Schaefer <gerald.schaefer@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b3854cefe3d24af43fb8abb3eda09612899bb604
Author: Yves-Alexis Perez <corsac@corsac.net>
Date:   Fri Nov 11 11:28:40 2016 -0800

    firmware: fix usermode helper fallback loading
    
    commit 2e700f8d85975f516ccaad821278c1fe66b2cc98 upstream.
    
    When you use the firmware usermode helper fallback with a timeout value set to a
    value greater than INT_MAX (2147483647) a cast overflow issue causes the
    timeout value to go negative and breaks all usermode helper loading. This
    regression was introduced through commit 68ff2a00dbf5 ("firmware_loader:
    handle timeout via wait_for_completion_interruptible_timeout()") on kernel
    v4.0.
    
    The firmware_class drivers relies on the firmware usermode helper
    fallback as a mechanism to look for firmware if the direct filesystem
    search failed only if:
    
      a) You've enabled CONFIG_FW_LOADER_USER_HELPER_FALLBACK (not many distros):
    
      Then all of these callers will rely on the fallback mechanism in case
      the firmware is not found through an initial direct filesystem lookup:
    
      o request_firmware()
      o request_firmware_into_buf()
      o request_firmware_nowait()
    
      b) If you've only enabled CONFIG_FW_LOADER_USER_HELPER (most distros):
    
      Then only callers using request_firmware_nowait() with the second
      argument set to false, this explicitly is requesting the UMH firmware
      fallback to be relied on in case the first filesystem lookup fails.
    
      Using Coccinelle SmPL grammar we have identified only two drivers
      explicitly requesting the UMH firmware fallback mechanism:
    
      - drivers/firmware/dell_rbu.c
      - drivers/leds/leds-lp55xx-common.c
    
    Since most distributions only enable CONFIG_FW_LOADER_USER_HELPER the
    biggest impact of this regression are users of the dell_rbu and
    leds-lp55xx-common device driver which required the UMH to find their
    respective needed firmwares.
    
    The default timeout for the UMH is set to 60 seconds always, as of
    commit 68ff2a00dbf5 ("firmware_loader: handle timeout via
    wait_for_completion_interruptible_timeout()") the timeout was bumped
    to MAX_JIFFY_OFFSET ((LONG_MAX >> 1)-1). Additionally the MAX_JIFFY_OFFSET
    value was also used if the timeout was configured by a user to 0.
    
    The following works:
    
    echo 2147483647 > /sys/class/firmware/timeout
    
    But both of the following set the timeout to MAX_JIFFY_OFFSET even if
    we display 0 back to userspace:
    
    echo 2147483648 > /sys/class/firmware/timeout
    cat /sys/class/firmware/timeout
    0
    
    echo 0> /sys/class/firmware/timeout
    cat /sys/class/firmware/timeout
    0
    
    A max value of INT_MAX (2147483647) seconds is therefore implicit due to the
    another cast with simple_strtol().
    
    This fixes the secondary cast (the first one is simple_strtol() but its an
    issue only by forcing an implicit limit) by re-using the timeout variable and
    only setting retval in appropriate cases.
    
    Lastly worth noting systemd had ripped out the UMH firmware fallback
    mechanism from udev since udev 2014 via commit be2ea723b1d023b3d
    ("udev: remove userspace firmware loading support"), so as of systemd v217.
    
    Signed-off-by: Yves-Alexis Perez <corsac@corsac.net>
    Fixes: 68ff2a00dbf5 "firmware_loader: handle timeout via wait_for_completion_interruptible_timeout()"
    Cc: Luis R. Rodriguez <mcgrof@kernel.org>
    Cc: Ming Lei <ming.lei@canonical.com>
    Cc: Bjorn Andersson <bjorn.andersson@linaro.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: Luis R. Rodriguez <mcgrof@kernel.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    [mcgrof@kernel.org: gave commit log a whole lot of love]
    Signed-off-by: Luis R. Rodriguez <mcgrof@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce7ec3d7526cb26307eb5fee516b2873a88ca3ef
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Mon Dec 19 11:38:38 2016 -0800

    ARC: mm: arc700: Don't assume 2 colours for aliasing VIPT dcache
    
    commit 08fe007968b2b45e831daf74899f79a54d73f773 upstream.
    
    An ARC700 customer reported linux boot crashes when upgrading to bigger
    L1 dcache (64K from 32K). Turns out they had an aliasing VIPT config and
    current code only assumed 2 colours, while theirs had 4. So default to 4
    colours and complain if there are fewer. Ideally this needs to be a
    Kconfig option, but heck that's too much of hassle for a single user.
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d33a399566771b023a08f490344b70a200c87da
Author: Wei Fang <fangwei1@huawei.com>
Date:   Tue Dec 13 09:25:21 2016 +0800

    scsi: avoid a permanent stop of the scsi device's request queue
    
    commit d2a145252c52792bc59e4767b486b26c430af4bb upstream.
    
    A race between scanning and fc_remote_port_delete() may result in a
    permanent stop if the device gets blocked before scsi_sysfs_add_sdev()
    and unblocked after.  The reason is that blocking a device sets both the
    SDEV_BLOCKED state and the QUEUE_FLAG_STOPPED.  However,
    scsi_sysfs_add_sdev() unconditionally sets SDEV_RUNNING which causes the
    device to be ignored by scsi_target_unblock() and thus never have its
    QUEUE_FLAG_STOPPED cleared leading to a device which is apparently
    running but has a stopped queue.
    
    We actually have two places where SDEV_RUNNING is set: once in
    scsi_add_lun() which respects the blocked flag and once in
    scsi_sysfs_add_sdev() which doesn't.  Since the second set is entirely
    spurious, simply remove it to fix the problem.
    
    Reported-by: Zengxi Chen <chenzengxi@huawei.com>
    Signed-off-by: Wei Fang <fangwei1@huawei.com>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a940b853ef679cd981e38f23c756d4335a3375c
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Fri Dec 9 17:16:33 2016 +0100

    scsi: zfcp: fix rport unblock race with LUN recovery
    
    commit 6f2ce1c6af37191640ee3ff6e8fc39ea10352f4c upstream.
    
    It is unavoidable that zfcp_scsi_queuecommand() has to finish requests
    with DID_IMM_RETRY (like fc_remote_port_chkready()) during the time
    window when zfcp detected an unavailable rport but
    fc_remote_port_delete(), which is asynchronous via
    zfcp_scsi_schedule_rport_block(), has not yet blocked the rport.
    
    However, for the case when the rport becomes available again, we should
    prevent unblocking the rport too early.  In contrast to other FCP LLDDs,
    zfcp has to open each LUN with the FCP channel hardware before it can
    send I/O to a LUN.  So if a port already has LUNs attached and we
    unblock the rport just after port recovery, recoveries of LUNs behind
    this port can still be pending which in turn force
    zfcp_scsi_queuecommand() to unnecessarily finish requests with
    DID_IMM_RETRY.
    
    This also opens a time window with unblocked rport (until the followup
    LUN reopen recovery has finished).  If a scsi_cmnd timeout occurs during
    this time window fc_timed_out() cannot work as desired and such command
    would indeed time out and trigger scsi_eh. This prevents a clean and
    timely path failover.  This should not happen if the path issue can be
    recovered on FC transport layer such as path issues involving RSCNs.
    
    Fix this by only calling zfcp_scsi_schedule_rport_register(), to
    asynchronously trigger fc_remote_port_add(), after all LUN recoveries as
    children of the rport have finished and no new recoveries of equal or
    higher order were triggered meanwhile.  Finished intentionally includes
    any recovery result no matter if successful or failed (still unblock
    rport so other successful LUNs work).  For simplicity, we check after
    each finished LUN recovery if there is another LUN recovery pending on
    the same port and then do nothing.  We handle the special case of a
    successful recovery of a port without LUN children the same way without
    changing this case's semantics.
    
    For debugging we introduce 2 new trace records written if the rport
    unblock attempt was aborted due to still unfinished or freshly triggered
    recovery. The records are only written above the default trace level.
    
    Benjamin noticed the important special case of new recovery that can be
    triggered between having given up the erp_lock and before calling
    zfcp_erp_action_cleanup() within zfcp_erp_strategy().  We must avoid the
    following sequence:
    
    ERP thread                 rport_work      other context
    -------------------------  --------------  --------------------------------
    port is unblocked, rport still blocked,
     due to pending/running ERP action,
     so ((port->status & ...UNBLOCK) != 0)
     and (port->rport == NULL)
    unlock ERP
    zfcp_erp_action_cleanup()
    case ZFCP_ERP_ACTION_REOPEN_LUN:
    zfcp_erp_try_rport_unblock()
    ((status & ...UNBLOCK) != 0) [OLD!]
                                               zfcp_erp_port_reopen()
                                               lock ERP
                                               zfcp_erp_port_block()
                                               port->status clear ...UNBLOCK
                                               unlock ERP
                                               zfcp_scsi_schedule_rport_block()
                                               port->rport_task = RPORT_DEL
                                               queue_work(rport_work)
                               zfcp_scsi_rport_work()
                               (port->rport_task != RPORT_ADD)
                               port->rport_task = RPORT_NONE
                               zfcp_scsi_rport_block()
                               if (!port->rport) return
    zfcp_scsi_schedule_rport_register()
    port->rport_task = RPORT_ADD
    queue_work(rport_work)
                               zfcp_scsi_rport_work()
                               (port->rport_task == RPORT_ADD)
                               port->rport_task = RPORT_NONE
                               zfcp_scsi_rport_register()
                               (port->rport == NULL)
                               rport = fc_remote_port_add()
                               port->rport = rport;
    
    Now the rport was erroneously unblocked while the zfcp_port is blocked.
    This is another situation we want to avoid due to scsi_eh
    potential. This state would at least remain until the new recovery from
    the other context finished successfully, or potentially forever if it
    failed.  In order to close this race, we take the erp_lock inside
    zfcp_erp_try_rport_unblock() when checking the status of zfcp_port or
    LUN.  With that, the possible corresponding rport state sequences would
    be: (unblock[ERP thread],block[other context]) if the ERP thread gets
    erp_lock first and still sees ((port->status & ...UNBLOCK) != 0),
    (block[other context],NOP[ERP thread]) if the ERP thread gets erp_lock
    after the other context has already cleard ...UNBLOCK from port->status.
    
    Since checking fields of struct erp_action is unsafe because they could
    have been overwritten (re-used for new recovery) meanwhile, we only
    check status of zfcp_port and LUN since these are only changed under
    erp_lock elsewhere. Regarding the check of the proper status flags (port
    or port_forced are similar to the shown adapter recovery):
    
    [zfcp_erp_adapter_shutdown()]
    zfcp_erp_adapter_reopen()
     zfcp_erp_adapter_block()
      * clear UNBLOCK ---------------------------------------+
     zfcp_scsi_schedule_rports_block()                       |
     write_lock_irqsave(&adapter->erp_lock, flags);-------+  |
     zfcp_erp_action_enqueue()                            |  |
      zfcp_erp_setup_act()                                |  |
       * set ERP_INUSE -----------------------------------|--|--+
     write_unlock_irqrestore(&adapter->erp_lock, flags);--+  |  |
    .context-switch.                                         |  |
    zfcp_erp_thread()                                        |  |
     zfcp_erp_strategy()                                     |  |
      write_lock_irqsave(&adapter->erp_lock, flags);------+  |  |
      ...                                                 |  |  |
      zfcp_erp_strategy_check_target()                    |  |  |
       zfcp_erp_strategy_check_adapter()                  |  |  |
        zfcp_erp_adapter_unblock()                        |  |  |
         * set UNBLOCK -----------------------------------|--+  |
      zfcp_erp_action_dequeue()                           |     |
       * clear ERP_INUSE ---------------------------------|-----+
      ...                                                 |
      write_unlock_irqrestore(&adapter->erp_lock, flags);-+
    
    Hence, we should check for both UNBLOCK and ERP_INUSE because they are
    interleaved.  Also we need to explicitly check ERP_FAILED for the link
    down case which currently does not clear the UNBLOCK flag in
    zfcp_fsf_link_down_info_eval().
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Fixes: 8830271c4819 ("[SCSI] zfcp: Dont fail SCSI commands when transitioning to blocked fc_rport")
    Fixes: a2fa0aede07c ("[SCSI] zfcp: Block FC transport rports early on errors")
    Fixes: 5f852be9e11d ("[SCSI] zfcp: Fix deadlock between zfcp ERP and SCSI")
    Fixes: 338151e06608 ("[SCSI] zfcp: make use of fc_remote_port_delete when target port is unavailable")
    Fixes: 3859f6a248cb ("[PATCH] zfcp: add rports to enable scsi_add_device to work again")
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 744807cb251f331ca0720b8c81a54e9db7b13ac5
Author: Steffen Maier <maier@linux.vnet.ibm.com>
Date:   Fri Dec 9 17:16:32 2016 +0100

    scsi: zfcp: do not trace pure benign residual HBA responses at default level
    
    commit 56d23ed7adf3974f10e91b643bd230e9c65b5f79 upstream.
    
    Since quite a while, Linux issues enough SCSI commands per scsi_device
    which successfully return with FCP_RESID_UNDER, FSF_FCP_RSP_AVAILABLE,
    and SAM_STAT_GOOD.  This floods the HBA trace area and we cannot see
    other and important HBA trace records long enough.
    
    Therefore, do not trace HBA response errors for pure benign residual
    under counts at the default trace level.
    
    This excludes benign residual under count combined with other validity
    bits set in FCP_RSP_IU, such as FCP_SNS_LEN_VAL.  For all those other
    cases, we still do want to see both the HBA record and the corresponding
    SCSI record by default.
    
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Fixes: a54ca0f62f95 ("[SCSI] zfcp: Redesign of the debug tracing for HBA records.")
    Reviewed-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ce34d9da4273b10ad8a680a8258278bcf805c9e
Author: Benjamin Block <bblock@linux.vnet.ibm.com>
Date:   Fri Dec 9 17:16:31 2016 +0100

    scsi: zfcp: fix use-after-"free" in FC ingress path after TMF
    
    commit dac37e15b7d511e026a9313c8c46794c144103cd upstream.
    
    When SCSI EH invokes zFCP's callbacks for eh_device_reset_handler() and
    eh_target_reset_handler(), it expects us to relent the ownership over
    the given scsi_cmnd and all other scsi_cmnds within the same scope - LUN
    or target - when returning with SUCCESS from the callback ('release'
    them).  SCSI EH can then reuse those commands.
    
    We did not follow this rule to release commands upon SUCCESS; and if
    later a reply arrived for one of those supposed to be released commands,
    we would still make use of the scsi_cmnd in our ingress tasklet. This
    will at least result in undefined behavior or a kernel panic because of
    a wrong kernel pointer dereference.
    
    To fix this, we NULLify all pointers to scsi_cmnds (struct zfcp_fsf_req
    *)->data in the matching scope if a TMF was successful. This is done
    under the locks (struct zfcp_adapter *)->abort_lock and (struct
    zfcp_reqlist *)->lock to prevent the requests from being removed from
    the request-hashtable, and the ingress tasklet from making use of the
    scsi_cmnd-pointer in zfcp_fsf_fcp_cmnd_handler().
    
    For cases where a reply arrives during SCSI EH, but before we get a
    chance to NULLify the pointer - but before we return from the callback
    -, we assume that the code is protected from races via the CAS operation
    in blk_complete_request() that is called in scsi_done().
    
    The following stacktrace shows an example for a crash resulting from the
    previous behavior:
    
    Unable to handle kernel pointer dereference at virtual kernel address fffffee17a672000
    Oops: 0038 [#1] SMP
    CPU: 2 PID: 0 Comm: swapper/2 Not tainted
    task: 00000003f7ff5be0 ti: 00000003f3d38000 task.ti: 00000003f3d38000
    Krnl PSW : 0404d00180000000 00000000001156b0 (smp_vcpu_scheduled+0x18/0x40)
               R:0 T:1 IO:0 EX:0 Key:0 M:1 W:0 P:0 AS:3 CC:1 PM:0 EA:3
    Krnl GPRS: 000000200000007e 0000000000000000 fffffee17a671fd8 0000000300000015
               ffffffff80000000 00000000005dfde8 07000003f7f80e00 000000004fa4e800
               000000036ce8d8f8 000000036ce8d9c0 00000003ece8fe00 ffffffff969c9e93
               00000003fffffffd 000000036ce8da10 00000000003bf134 00000003f3b07918
    Krnl Code: 00000000001156a2: a7190000        lghi    %r1,0
               00000000001156a6: a7380015        lhi    %r3,21
              #00000000001156aa: e32050000008    ag    %r2,0(%r5)
              >00000000001156b0: 482022b0        lh    %r2,688(%r2)
               00000000001156b4: ae123000        sigp    %r1,%r2,0(%r3)
               00000000001156b8: b2220020        ipm    %r2
               00000000001156bc: 8820001c        srl    %r2,28
               00000000001156c0: c02700000001    xilf    %r2,1
    Call Trace:
    ([<0000000000000000>] 0x0)
     [<000003ff807bdb8e>] zfcp_fsf_fcp_cmnd_handler+0x3de/0x490 [zfcp]
     [<000003ff807be30a>] zfcp_fsf_req_complete+0x252/0x800 [zfcp]
     [<000003ff807c0a48>] zfcp_fsf_reqid_check+0xe8/0x190 [zfcp]
     [<000003ff807c194e>] zfcp_qdio_int_resp+0x66/0x188 [zfcp]
     [<000003ff80440c64>] qdio_kick_handler+0xdc/0x310 [qdio]
     [<000003ff804463d0>] __tiqdio_inbound_processing+0xf8/0xcd8 [qdio]
     [<0000000000141fd4>] tasklet_action+0x9c/0x170
     [<0000000000141550>] __do_softirq+0xe8/0x258
     [<000000000010ce0a>] do_softirq+0xba/0xc0
     [<000000000014187c>] irq_exit+0xc4/0xe8
     [<000000000046b526>] do_IRQ+0x146/0x1d8
     [<00000000005d6a3c>] io_return+0x0/0x8
     [<00000000005d6422>] vtime_stop_cpu+0x4a/0xa0
    ([<0000000000000000>] 0x0)
     [<0000000000103d8a>] arch_cpu_idle+0xa2/0xb0
     [<0000000000197f94>] cpu_startup_entry+0x13c/0x1f8
     [<0000000000114782>] smp_start_secondary+0xda/0xe8
     [<00000000005d6efe>] restart_int_handler+0x56/0x6c
     [<0000000000000000>] 0x0
    Last Breaking-Event-Address:
     [<00000000003bf12e>] arch_spin_lock_wait+0x56/0xb0
    
    Suggested-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Signed-off-by: Benjamin Block <bblock@linux.vnet.ibm.com>
    Fixes: ea127f9754 ("[PATCH] s390 (7/7): zfcp host adapter.") (tglx/history.git)
    Signed-off-by: Steffen Maier <maier@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8032a30081c1361e06ba70f08f34fd972772060b
Author: Varun Prakash <varun@chelsio.com>
Date:   Sun Dec 11 22:05:56 2016 +0530

    iscsi-target: Return error if unable to add network portal
    
    commit 83337e544323a8bd7492994d64af339175ac7107 upstream.
    
    If iscsit_tpg_add_network_portal() fails then
    return error code instead of 0 to user space.
    
    If iscsi-target returns 0 then user space keeps
    on retrying same command infinitely, targetcli or
    echo hangs till command completes with non zero
    return value. In some cases it is possible that
    add network portal command never completes with
    success even after retrying multiple times,
    for example - cxgbit_setup_np() always returns
    -EINVAL if portal IP does not belong to Chelsio
    adapter interface.
    
    Signed-off-by: Varun Prakash <varun@chelsio.com>
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    [ bvanassche: Added "Fixes:" and "Cc: stable" tags ]
    Fixes: commit d4b3fa4b0881 ("iscsi-target: Make iscsi_tpg_np driver show/store use generic code")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 113783ec1cdbc208ca10927348cf37b983ea3b34
Author: Kashyap Desai <kashyap.desai@broadcom.com>
Date:   Fri Oct 21 06:33:35 2016 -0700

    scsi: megaraid_sas: Do not set MPI2_TYPE_CUDA for JBOD FP path for FW which does not support JBOD sequence map
    
    commit d5573584429254a14708cf8375c47092b5edaf2c upstream.
    
    Signed-off-by: Sumit Saxena <sumit.saxena@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6089f8712dcbfc2ee20f6d9af2f4550ddf88e7d9
Author: Kashyap Desai <kashyap.desai@broadcom.com>
Date:   Fri Oct 21 06:33:29 2016 -0700

    scsi: megaraid_sas: For SRIOV enabled firmware, ensure VF driver waits for 30secs before reset
    
    commit 18e1c7f68a5814442abad849abe6eacbf02ffd7c upstream.
    
    For SRIOV enabled firmware, if there is a OCR(online controller reset)
    possibility driver set the convert flag to 1, which is not happening if
    there are outstanding commands even after 180 seconds.  As driver does
    not set convert flag to 1 and still making the OCR to run, VF(Virtual
    function) driver is directly writing on to the register instead of
    waiting for 30 seconds. Setting convert flag to 1 will cause VF driver
    will wait for 30 secs before going for reset.
    
    Signed-off-by: Kiran Kumar Kasturi <kiran-kumar.kasturi@broadcom.com>
    Signed-off-by: Sumit Saxena <sumit.saxena@broadcom.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Tomas Henzl <thenzl@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d2914349286d29e57b6536c01251c1332a8e784
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Nov 18 14:17:31 2016 +0200

    stm class: Fix device leak in open error path
    
    commit a0ebf519b8a2666438d999c62995618c710573e5 upstream.
    
    Make sure to drop the reference taken by class_find_device() also on
    allocation errors in open().
    
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Fixes: 7bd1d4093c2f ("stm class: Introduce an abstraction for...")
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fbb28e76454fd7b9c59e5e35702982ee6d0dae8b
Author: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
Date:   Wed Nov 16 00:55:57 2016 +0100

    vt: fix Scroll Lock LED trigger name
    
    commit 31b5929d533f5183972cf57a7844b456ed996f3c upstream.
    
    There is a disagreement between drivers/tty/vt/keyboard.c and
    drivers/input/input-leds.c with regard to what is a Scroll Lock LED
    trigger name: input calls it "kbd-scrolllock", but vt calls it
    "kbd-scrollock" (two l's).
    This prevents Scroll Lock LED trigger from binding to this LED by default.
    
    Since it is a scroLL Lock LED, this interface was introduced only about a
    year ago and in an Internet search people seem to reference this trigger
    only to set it to this LED let's simply rename it to "kbd-scrolllock".
    
    Also, it looks like this was supposed to be changed before this code was
    merged: https://lkml.org/lkml/2015/6/9/697 but it was done only on
    the input side.
    
    Signed-off-by: Maciej S. Szmigiero <mail@maciej.szmigiero.name>
    Acked-by: Samuel Thibault <samuel.thibault@ens-lyon.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11aa5c10102a425dde885b6b056e1fe354bcbb88
Author: Rabin Vincent <rabinv@axis.com>
Date:   Thu Dec 1 09:18:28 2016 +0100

    block: protect iterate_bdevs() against concurrent close
    
    commit af309226db916e2c6e08d3eba3fa5c34225200c4 upstream.
    
    If a block device is closed while iterate_bdevs() is handling it, the
    following NULL pointer dereference occurs because bdev->b_disk is NULL
    in bdev_get_queue(), which is called from blk_get_backing_dev_info() (in
    turn called by the mapping_cap_writeback_dirty() call in
    __filemap_fdatawrite_range()):
    
     BUG: unable to handle kernel NULL pointer dereference at 0000000000000508
     IP: [<ffffffff81314790>] blk_get_backing_dev_info+0x10/0x20
     PGD 9e62067 PUD 9ee8067 PMD 0
     Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC
     Modules linked in:
     CPU: 1 PID: 2422 Comm: sync Not tainted 4.5.0-rc7+ #400
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)
     task: ffff880009f4d700 ti: ffff880009f5c000 task.ti: ffff880009f5c000
     RIP: 0010:[<ffffffff81314790>]  [<ffffffff81314790>] blk_get_backing_dev_info+0x10/0x20
     RSP: 0018:ffff880009f5fe68  EFLAGS: 00010246
     RAX: 0000000000000000 RBX: ffff88000ec17a38 RCX: ffffffff81a4e940
     RDX: 7fffffffffffffff RSI: 0000000000000000 RDI: ffff88000ec176c0
     RBP: ffff880009f5fe68 R08: 0000000000000000 R09: 0000000000000000
     R10: 0000000000000001 R11: 0000000000000000 R12: ffff88000ec17860
     R13: ffffffff811b25c0 R14: ffff88000ec178e0 R15: ffff88000ec17a38
     FS:  00007faee505d700(0000) GS:ffff88000fb00000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b
     CR2: 0000000000000508 CR3: 0000000009e8a000 CR4: 00000000000006e0
     Stack:
      ffff880009f5feb8 ffffffff8112e7f5 0000000000000000 7fffffffffffffff
      0000000000000000 0000000000000000 7fffffffffffffff 0000000000000001
      ffff88000ec178e0 ffff88000ec17860 ffff880009f5fec8 ffffffff8112e81f
     Call Trace:
      [<ffffffff8112e7f5>] __filemap_fdatawrite_range+0x85/0x90
      [<ffffffff8112e81f>] filemap_fdatawrite+0x1f/0x30
      [<ffffffff811b25d6>] fdatawrite_one_bdev+0x16/0x20
      [<ffffffff811bc402>] iterate_bdevs+0xf2/0x130
      [<ffffffff811b2763>] sys_sync+0x63/0x90
      [<ffffffff815d4272>] entry_SYSCALL_64_fastpath+0x12/0x76
     Code: 0f 1f 44 00 00 48 8b 87 f0 00 00 00 55 48 89 e5 <48> 8b 80 08 05 00 00 5d
     RIP  [<ffffffff81314790>] blk_get_backing_dev_info+0x10/0x20
      RSP <ffff880009f5fe68>
     CR2: 0000000000000508
     ---[ end trace 2487336ceb3de62d ]---
    
    The crash is easily reproducible by running the following command, if an
    msleep(100) is inserted before the call to func() in iterate_devs():
    
     while :; do head -c1 /dev/nullb0; done > /dev/null & while :; do sync; done
    
    Fix it by holding the bd_mutex across the func() call and only calling
    func() if the bdev is opened.
    
    Fixes: 5c0d6b60a0ba ("vfs: Create function for iterating over block devices")
    Reported-and-tested-by: Wei Fang <fangwei1@huawei.com>
    Signed-off-by: Rabin Vincent <rabinv@axis.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09c154920e7738f9a597354432b81d99b9105f5e
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Tue Nov 29 16:49:27 2016 +0200

    mei: me: add lewisburg device ids
    
    commit 9ff2007bea1f1bfc53ac0bc7ccf8200bb275fd52 upstream.
    
    Add MEI Lewisburg PCH IDs for Purley based workstations.
    
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0814c3ede27a5c1f7994ccd8998f6b41e802949d
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Thu Nov 24 13:34:02 2016 +0200

    mei: request async autosuspend at the end of enumeration
    
    commit d5f8e166c25750adc147b0adf64a62a91653438a upstream.
    
    pm_runtime_autosuspend can take synchronous or asynchronous
    paths, Because we are calling pm_runtime_mark_last_busy just before
    this most of the cases it takes the asynchronous way. However,
    when the FW or driver resets during already running runtime suspend,
    the call will result in calling to the driver's rpm callback and results
    in a deadlock on device_lock.
    The simplest fix is to replace pm_runtime_autosuspend with
    asynchronous pm_request_autosuspend.
    
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66469319c01a1a36c78d0a8535e3dcbc1349bb19
Author: Russell Currey <ruscur@russell.cc>
Date:   Thu Dec 15 16:12:41 2016 +1100

    drivers/gpu/drm/ast: Fix infinite loop if read fails
    
    commit 298360af3dab45659810fdc51aba0c9f4097e4f6 upstream.
    
    ast_get_dram_info() configures a window in order to access BMC memory.
    A BMC register can be configured to disallow this, and if so, causes
    an infinite loop in the ast driver which renders the system unusable.
    
    Fix this by erroring out if an error is detected.  On powerpc systems with
    EEH, this leads to the device being fenced and the system continuing to
    operate.
    
    Signed-off-by: Russell Currey <ruscur@russell.cc>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/20161215051241.20815-1-ruscur@russell.cc
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8dbd6f709e62394fedb4fe75a3e553cbb6cbdbd3
Author: Rex Zhu <Rex.Zhu@amd.com>
Date:   Wed Dec 7 17:44:20 2016 +0800

    drm/amdgpu: fix init save/restore list in gfx_v8.0
    
    commit 202e0b227b906cb80a2791f21216a55d9468d61b upstream.
    
    set valid data to mmRLC_SRM_INDEX_CNTL_ADDRx/DATAx.
    
    Signed-off-by: Rex Zhu <Rex.Zhu@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2d3d7f84cdf60d2e7e103a3381910005a4ca669
Author: Rex Zhu <Rex.Zhu@amd.com>
Date:   Wed Dec 7 17:22:25 2016 +0800

    drm/amdgpu: fix enable_cp_power_gating in gfx_v8.0.
    
    commit eb584241226958d45aa1f07f4f6a6ea9da98b29e upstream.
    
    the CP_PG_DISABLE bit was reversed.
    
    Signed-off-by: Rex Zhu <Rex.Zhu@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 326760ba1802a5b2f73de06f3bac4e9752a3257a
Author: Hawking Zhang <Hawking.Zhang@amd.com>
Date:   Thu Dec 1 17:14:45 2016 +0800

    drm/amd/powerplay: bypass fan table setup if no fan connected
    
    commit 10e2ca346bf74561ff1b7fff6287716ab976cd8c upstream.
    
    If vBIOS noFan bit is set, the fan table parameters in thermal controller
    will not get initialized. The driver should avoid to use these uninitialized
    parameter to do calculation. Otherwise, it may trigger divide 0 error.
    
    Signed-off-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa286e88fd914aecfdf5c4807fb814233c0d092b
Author: Patrik Jakobsson <patrik.r.jakobsson@gmail.com>
Date:   Tue Nov 1 15:43:15 2016 +0100

    drm/gma500: Add compat ioctl
    
    commit 0a97c81a9717431e6c57ea845b59c3c345edce67 upstream.
    
    Hook up drm_compat_ioctl to support 32-bit userspace on 64-bit kernels.
    It turns out that N2600 and N2800 comes with 64-bit enabled. We
    previously assumed there where no such systems out there.
    
    Signed-off-by: Patrik Jakobsson <patrik.r.jakobsson@gmail.com>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/20161101144315.2955-1-patrik.r.jakobsson@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6187f21f8c97f66a15e7c5392bd10fcf2cbc395a
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Dec 2 00:23:35 2016 -0500

    drm/radeon/si: load the proper firmware on 0x87 oland boards
    
    commit abb2e3c1ce64c8bba678973800c34ea1dc97c42c upstream.
    
    New variant.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 851bedd86b95516ca3334b1eadf8b68eb220c5e9
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Fri Dec 2 00:21:48 2016 -0500

    drm/radeon: add additional pci revision to dpm workaround
    
    commit 8729675c00a8d13cb2094d617d70a4a4da7d83c5 upstream.
    
    New variant.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 126f676b087d091e714fcae1ebe87182062d138b
Author: Michel Dänzer <michel.daenzer@amd.com>
Date:   Thu Oct 27 14:54:31 2016 +0900

    drm/radeon: Hide the HW cursor while it's out of bounds
    
    commit 6b16cf7785a4200b1bddf4f70c9dda2efc49e278 upstream.
    
    Fixes hangs in that case under some circumstances.
    
    v2:
    * Only use non-0 x/yorigin if the cursor is (partially) outside of the
      top/left edge of the total surface with AVIVO/DCE
    
    Bugzilla: https://bugzilla.suse.com/show_bug.cgi?id=1000433
    Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com> (v1)
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45ec673dfe0f8b1564289067a35f4abde3bd8472
Author: Michel Dänzer <michel.daenzer@amd.com>
Date:   Thu Oct 27 13:03:23 2016 +0900

    drm/radeon: Also call cursor_move_locked when the cursor size changes
    
    commit dcab0fa64e300afa18f39cd98d05e0950f652adf upstream.
    
    The cursor size also affects the register programming.
    
    Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9195157f7d03758655ea6940348152b2c563fa1a
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Sat Nov 5 14:33:14 2016 +1000

    drm/nouveau/fifo/gf100-: protect channel preempt with subdev mutex
    
    commit b27add13f500469127afdf011dbcc9c649e16e54 upstream.
    
    This avoids an issue that occurs when we're attempting to preempt multiple
    channels simultaneously.  HW seems to ignore preempt requests while it's
    still processing a previous one, which, well, makes sense.
    
    Fixes random "fifo: SCHED_ERROR 0d []" + GPCCS page faults during parallel
    piglit runs on (at least) GM107.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 64a5c4725fd385cb51c0b6b63b3f65d68d4aa2a8
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Nov 3 16:37:33 2016 +1000

    drm/nouveau/i2c/gk110b,gm10x: use the correct implementation
    
    commit 5b3800a6b763874e4a23702fb9628d3bd3315ce9 upstream.
    
    DPAUX registers moved on Kepler, these chipsets were still using the
    Fermi implementation for some reason.
    
    This fixes detection of hotplug/sink IRQs on DP connectors.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfa563bae25131fc084c273b43a789819e302fe7
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Mon Dec 12 17:52:45 2016 +1000

    drm/nouveau/ttm: wait for bo fence to signal before unmapping vmas
    
    commit 10dcab3e7f477bffee88d518aad57d06777cfdf4 upstream.
    
    TTM was changed a while back to allow for pipelining of buffer moves, and
    part of this was the removal of waiting for a BO to idle before calling
    move(), placing the responsibility on the driver to do this if required.
    
    That's all well and good, except, we make use of move_notify() to handle
    mapping/unmapping from the GPU VMM as move() isn't called on all paths.
    
    This commit adds a wait before unmapping from a VMM in move_notify(), to
    prevent GPU page faults where a buffer is still being accessed.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5b4c77c92da629bf10926fe05cdf972e0e08f86
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Tue Dec 13 09:29:55 2016 +1000

    drm/nouveau/ltc: protect clearing of comptags with mutex
    
    commit f4e65efc88b64c1dbca275d42a188edccedb56c6 upstream.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d95ef8af5425f7ac99427b7d4fad5b4c8e54c879
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Fri Oct 14 13:16:36 2016 +1000

    drm/nouveau/bios: require checksum to match for fast acpi shadow method
    
    commit 5dc7f4aa9d84ea94b54a9bfcef095f0289f1ebda upstream.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c256b8e81bf7ce751531b679421df517e8e0ec5
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Oct 19 12:15:52 2016 +1000

    drm/nouveau/kms: lvds panel strap moved again on maxwell
    
    commit 768e847759d551c96e129e194588dbfb11a1d576 upstream.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42e5fd6bce5bec03590aa4467c30f6338db0bbbc
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Fri Nov 4 18:36:17 2016 +0900

    drm/nouveau/gr: fallback to legacy paths during firmware lookup
    
    commit e137040e0d0376b404fc5155eba44ea07126e3bd upstream.
    
    Look for firmware files using the legacy ("nouveau/nvxx_fucxxxx") path
    if they cannot be found in the new, "official" path. User setups were
    broken by the switch, which is bad.
    
    There are only 4 firmware files we may want to look up that way, so
    hardcode them into the lookup function. All new firmware files should
    use the standard "nvidia/<chip>/gr/" path.
    
    Fixes: 8539b37acef7 ("drm/nouveau/gr: use NVIDIA-provided external firmwares")
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2a51dd3138df107432fc2ff452cf43ee49a7dff
Author: Arindam Nath <arindam.nath@amd.com>
Date:   Fri Nov 25 16:55:16 2016 +0530

    drm/amd/amdgpu: enable GUI idle INT after enabling CGCG
    
    commit dd31ae9ac933636c3712b7dd0f6152c1d71f81fe upstream.
    
    GUI idle interrupts should be enabled only after we
    have enabled coarse grain clock gating (CGCG). This
    prevents GFX engine generating idle interrupt even
    though CGCG is not completely enabled.
    
    Most of the time this goes un-noticed, but on some
    Stoney ASICs this results in GFX engine hang after
    system resumes from suspend. The issue is not
    particular to Stoney though and could have occured
    on any ASIC. The patch fixes this issue.
    
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Reported-by: Sunil Uttarwar <Sunil.Uttarwar1@amd.com>
    Signed-off-by: Arindam Nath <arindam.nath@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e1b86f30bc1e3d213d269a74b3375a06ba8199f
Author: Michel Dänzer <michel.daenzer@amd.com>
Date:   Thu Oct 27 17:01:26 2016 +0900

    drm/amdgpu: Also call cursor_move_locked when the cursor size changes
    
    commit 8b02cde994e3025b6886c82eac6cd1e7bc4d1fe9 upstream.
    
    The cursor size also affects the register programming.
    
    Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2cea2151623122f78b5287acba658208bb0ee4a7
Author: Michel Dänzer <michel.daenzer@amd.com>
Date:   Thu Oct 27 17:11:43 2016 +0900

    drm/amdgpu: Store CRTC relative amdgpu_crtc->cursor_x/y values
    
    commit 8e57ec613df7d6bfa8ffe7512290c5415ebb8657 upstream.
    
    We were storing viewport relative coordinates. However, crtc_cursor_set2
    and cursor_reset pass amdgpu_crtc->cursor_x/y as the x/y parameters of
    cursor_move_locked, which would break if the CRTC isn't located at
    (0, 0).
    
    Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb0d743b41882ad2987f4fe4000dce595fce1b7f
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Dec 5 12:27:52 2016 -0500

    drm/amdgpu: add additional pci revision to dpm workaround
    
    commit ce66cb1e9cbf91fcb216de64a0fe65aa17f97bc1 upstream.
    
    New variant.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3dd47e0f683cfcca9e1d31f61d33aed37c5f122
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Mon Dec 5 12:31:14 2016 -0500

    drm/amdgpu/si: load the proper firmware on 0x87 oland boards
    
    commit 5a23f2720589ec4757bc62183902d2518f02026e upstream.
    
    New variant.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a04465251f948a345b7642bf292c063dc482146a
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Nov 29 15:32:16 2016 +0100

    ACPI / video: Add force_native quirk for HP Pavilion dv6
    
    commit 6276e53fa8c06a3a5cf7b95b77b079966de9ad66 upstream.
    
    The HP Pavilion dv6 has a non-working acpi_video0 backlight interface
    and an intel_backlight interface which works fine. Add a force_native
    quirk for it so that the non-working acpi_video0 interface does not get
    registered.
    
    Note that there are quite a few HP Pavilion dv6 variants, some
    woth ATI and some with NVIDIA hybrid gfx, both seem to need this
    quirk to have working backlight control. There are also some versions
    with only Intel integrated gfx, these may not need this quirk, but it
    should not hurt there.
    
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=1204476
    Link: https://bugs.launchpad.net/ubuntu/+source/linux-lts-trusty/+bug/1416940
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d46601e656412d351ceda73226419a9bf5cb2d7
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Tue Nov 29 15:32:15 2016 +0100

    ACPI / video: Add force_native quirk for Dell XPS 17 L702X
    
    commit 350fa038c31b056fc509624efb66348ac2c1e3d0 upstream.
    
    The Dell XPS 17 L702X has a non-working acpi_video0 backlight interface
    and an intel_backlight interface which works fine. Add a force_native
    quirk for it so that the non-working acpi_video0 interface does not get
    registered.
    
    Note that there also is an issue with the brightnesskeys on this laptop,
    they do not generate key-press events in anyway. That is not solved by
    this patch.
    
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=1123661
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 745f7d0d1951e1109ad159860732c3ef157aba17
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Mon Nov 14 20:16:22 2016 +0000

    staging: comedi: ni_mio_common: fix E series ni_ai_insn_read() data
    
    commit 857a661020a2de3a0304edf33ad656abee100891 upstream.
    
    Commit 0557344e2149 ("staging: comedi: ni_mio_common: fix local var for
    32-bit read") changed the type of local variable `d` from `unsigned
    short` to `unsigned int` to fix a bug introduced in
    commit 9c340ac934db ("staging: comedi: ni_stc.h: add read/write
    callbacks to struct ni_private") when reading AI data for NI PCI-6110
    and PCI-6111 cards.  Unfortunately, other parts of the function rely on
    the variable being `unsigned short` when an offset value in local
    variable `signbits` is added to `d` before writing the value to the
    `data` array:
    
                            d += signbits;
                            data[n] = d;
    
    The `signbits` variable will be non-zero in bipolar mode, and is used to
    convert the hardware's 2's complement, 16-bit numbers to Comedi's
    straight binary sample format (with 0 representing the most negative
    voltage).  This breaks because `d` is now 32 bits wide instead of 16
    bits wide, so after the addition of `signbits`, `data[n]` ends up being
    set to values above 65536 for negative voltages.  This affects all
    supported "E series" cards except PCI-6143 (and PXI-6143). Fix it by
    ANDing the value written to the `data[n]` with the mask 0xffff.
    
    Fixes: 0557344e2149 ("staging: comedi: ni_mio_common: fix local var for 32-bit read")
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bd1692bed615fd31cd04ae19369130060fa4ec04
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Mon Nov 14 20:16:21 2016 +0000

    staging: comedi: ni_mio_common: fix M Series ni_ai_insn_read() data mask
    
    commit 655c4d442d1213b617926cc6d54e2a9a793fb46b upstream.
    
    For NI M Series cards, the Comedi `insn_read` handler for the AI
    subdevice is broken due to ANDing the value read from the AI FIFO data
    register with an incorrect mask.  The incorrect mask clears all but the
    most significant bit of the sample data.  It should preserve all the
    sample data bits.  Correct it.
    
    Fixes: 817144ae7fda ("staging: comedi: ni_mio_common: remove unnecessary use of 'board->adbits'")
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b2f287b7795aa08cab1c61d99a4a615b63076a7
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Nov 10 16:21:20 2016 +0100

    staging: lustre: ldlm: pl_recalc time handling is wrong
    
    commit b8cb86fd95bb461c3496e1f4b4083b198c963a9c upstream.
    
    James Simmons reports:
    > The ldlm_pool field pl_recalc_time is set to the current
    > monotonic clock value but the interval period is calculated
    > with the wall clock. This means the interval period will
    > always be far larger than the pl_recalc_period, which is
    > just a small interval time period. The correct thing to
    > do is to use monotomic clock current value instead of the
    > wall clocks value when calculating recalc_interval_sec.
    
    This broke when I converted the 32-bit get_seconds() into
    ktime_get_{real_,}seconds() inconsistently. Either
    one of those two would have worked, but mixing them
    does not.
    
    Staying with the original intention of the patch, this
    changes the ktime_get_seconds() calls into ktime_get_real_seconds(),
    using real time instead of mononic time.
    
    Fixes: 8f83409cf238 ("staging/lustre: use 64-bit time for pl_recalc")
    Reported-by: James Simmons <jsimmons@infradead.org>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: James Simmons <jsimmons@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38b2dc0b0f380984cd4fcc208497f8366f85f856
Author: Oleg Drokin <green@linuxhacker.ru>
Date:   Tue Dec 6 22:53:48 2016 -0500

    staging/lustre/osc: Revert erroneous list_for_each_entry_safe use
    
    commit cd15dd6ef4ea11df87f717b8b1b83aaa738ec8af upstream.
    
    I have been having a lot of unexplainable crashes in osc_lru_shrink
    lately that I could not see a good explanation for and then I found
    this patch that slip under the radar somehow that incorrectly
    converted while loop for lru list iteration into
    list_for_each_entry_safe totally ignoring that in the body of
    the loop we drop spinlocks guarding this list and move list entries
    around.
    Not sure why it was not showing up right away, perhaps some of the
    more recent LRU changes committed caused some extra pressure on this
    code that finally highlighted the breakage.
    
    Reverts: 8adddc36b1fc ("staging: lustre: osc: Use list_for_each_entry_safe")
    CC: Bhaktipriya Shridhar <bhaktipriya96@gmail.com>
    Signed-off-by: Oleg Drokin <green@linuxhacker.ru>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf6a9b31e8a9cbdb6f67f84882fcf7d252e43d6f
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Sat Dec 3 12:34:32 2016 -0800

    hv: acquire vmbus_connection.channel_mutex in vmbus_free_channels()
    
    commit abd1026da4a7700a8db370947f75cd17b6ae6f76 upstream.
    
    "kernel BUG at drivers/hv/channel_mgmt.c:350!" is observed when hv_vmbus
    module is unloaded. BUG_ON() was introduced in commit 85d9aa705184
    ("Drivers: hv: vmbus: add an API vmbus_hvsock_device_unregister()") as
    vmbus_free_channels() codepath was apparently forgotten.
    
    Fixes: 85d9aa705184 ("Drivers: hv: vmbus: add an API vmbus_hvsock_device_unregister()")
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5bd6ccd9c95fdf068e125e08992c7424eb2ceabb
Author: Dmitry Shachnev <mitya57@debian.org>
Date:   Sun Dec 18 13:11:46 2016 +0300

    docs: sphinx-extensions: make rstFlatTable work with docutils 0.13
    
    commit 217e2bfab22e740227df09f22165e834cddd8a3b upstream.
    
    In docutils 0.13, the return type of get_column_widths method of the
    Table directive has changed [1], which breaks our flat-table directive
    and leads to a TypeError when trying to build the docs [2].
    
    This patch adds support for the new return type, while keeping support
    for older docutils versions too.
    
    [1] https://sourceforge.net/p/docutils/patches/120/
    [2] https://sourceforge.net/p/docutils/bugs/303/
    
    Signed-off-by: Dmitry Shachnev <mitya57@debian.org>
    Signed-off-by: Jonathan Corbet <corbet@lwn.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fab303ba78ee2bae3da057f750139fc6222c66d5
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Tue Nov 22 19:22:44 2016 +0200

    thermal: hwmon: Properly report critical temperature in sysfs
    
    commit f37fabb8643eaf8e3b613333a72f683770c85eca upstream.
    
    In the critical sysfs entry the thermal hwmon was returning wrong
    temperature to the user-space.  It was reporting the temperature of the
    first trip point instead of the temperature of critical trip point.
    
    For example:
            /sys/class/hwmon/hwmon0/temp1_crit:50000
            /sys/class/thermal/thermal_zone0/trip_point_0_temp:50000
            /sys/class/thermal/thermal_zone0/trip_point_0_type:active
            /sys/class/thermal/thermal_zone0/trip_point_3_temp:120000
            /sys/class/thermal/thermal_zone0/trip_point_3_type:critical
    
    Since commit e68b16abd91d ("thermal: add hwmon sysfs I/F") the driver
    have been registering a sysfs entry if get_crit_temp() callback was
    provided.  However when accessed, it was calling get_trip_temp() instead
    of the get_crit_temp().
    
    Fixes: e68b16abd91d ("thermal: add hwmon sysfs I/F")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Zhang Rui <rui.zhang@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05bc2071b11b0c422d36fae33e701cf297563f04
Author: Boris Brezillon <bbrezillon@kernel.org>
Date:   Thu Dec 1 20:27:21 2016 +0100

    clk: bcm2835: Avoid overwriting the div info when disabling a pll_div clk
    
    commit 68af4fa8f39b542a6cde7ac19518d88e9b3099dc upstream.
    
    bcm2835_pll_divider_off() is resetting the divider field in the A2W reg
    to zero when disabling the clock.
    
    Make sure we preserve this value by reading the previous a2w_reg value
    first and ORing the result with A2W_PLL_CHANNEL_DISABLE.
    
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Fixes: 41691b8862e2 ("clk: bcm2835: Add support for programming the audio domain clocks")
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6d666315b999df88a5fa5da65dda992dbe4556b
Author: Alexandre Courbot <acourbot@nvidia.com>
Date:   Fri Dec 2 20:57:55 2016 +0100

    arm64: tegra: Add VDD_GPU regulator to Jetson TX1
    
    commit 5e6b9a89afceadb1ee45472098f7d20af260335c upstream.
    
    Add the VDD_GPU regulator (a GPIO-enabled PWM regulator) to the Jetson
    TX1 board. This addition allows the GPU to be used provided the
    bootloader properly enabled the GPU node.
    
    Signed-off-by: Alexandre Courbot <acourbot@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    [as pointed out by Thierry on IRC, nobody has reported a bug
     in the field, but using a new bootloader with a .dtb that
     has the incorrect data, it will crash on boot]
    Fixes: 336f79c7b6d7 ("arm64: tegra: Add NVIDIA Jetson TX1 Developer Kit support")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f654078b760104019e851247ae84d5498ff8a0e
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Wed Nov 30 13:05:21 2016 +0100

    gpio: chardev: Return error for seek operations
    
    commit f4e81c529767b9a33d1b27695c54dc84a14af30d upstream.
    
    The GPIO chardev is used for management tasks (allocating line and event
    handles) and does neither support read() nor write() operations. Hence it
    does not make much sense to allow seek operations.
    
    Currently the chardev uses noop_llseek() for its seek implementation. This
    function does not move the pointer and simply returns the current position
    (always 0 for the GPIO chardev). noop_llseek() is primarily meant for
    devices that can not support seek, but where there might be a user that
    depends on the seek() operation succeeding. For newly added devices that
    can not support seek operations it is recommended to use no_llseek(), which
    will return an error. For more information see commit 6038f373a3dc
    ("llseek: automatically add .llseek fop").
    
    Unfortunately this was overlooked when the GPIO chardev ABI was introduced.
    But it is highly unlikely that since then userspace applications have
    appeared that rely on being able to perform non-failing seek operations on
    a GPIO chardev file descriptor. So it should be safe to change from
    noop_llseel() to no_seek(). Also use nonseekable_open() in the chardev
    open() callback to clear the FMODE_SEEK, FMODE_PREAD and FMODE_PWRITE flags
    from the file. Neither of these should be set on a file that does not
    support seek operations.
    
    Fixes: 3c702e9987e2 ("gpio: add a userspace chardev ABI for GPIOs")
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acd0993f8e97968b97291060ec553e4550f816fc
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Wed Nov 23 23:21:17 2016 +0100

    gpio: stmpe: fix interrupt handling bug
    
    commit 1516c6350aa2770b8a5e36d40c3ec5078f92ba70 upstream.
    
    commit 43db289d00c6 ("gpio: stmpe: Rework registers access")
    reworked the STMPE register access so as to use
    [STMPE_IDX_*_LSB + i] to access the 8bit register for a
    certain bank, assuming the CSB and MSB will follow after
    the enumerator. For this to work the index needs to go from
    (size-1) to 0 not 0 to (size-1).
    
    However for the GPIO IRQ handler, the status registers we read
    register MSB + 3 bytes ahead for the 24 bit GPIOs and index
    registers from MSB upwards and run an index i over the
    registers UNLESS we are STMPE1600.
    
    This is not working when we get to clearing the interrupt
    EDGE status register STMPE_IDX_GPEDR_[LCM]SB: it is indexed
    like all other registers [STMPE_IDX_*_LSB + i] but in this
    loop we index from 0 to get the right bank index for the
    calculations, and we need to just add i to the MSB.
    
    Before this, interrupts on the STMPE2401 were broken, this
    patch fixes it so it works again.
    
    Cc: Patrice Chotard <patrice.chotard@st.com>
    Fixes: 43db289d00c6 ("gpio: stmpe: Rework registers access")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca22975afa144d5bb648dcff22f598d623493e9f
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Dec 8 20:49:32 2016 +0000

    timekeeping_Force_unsigned_clocksource_to_nanoseconds_conversion
    
    commit 9c1645727b8fa90d07256fdfcc45bf831242a3ab upstream.
    
    The clocksource delta to nanoseconds conversion is using signed math, but
    the delta is unsigned. This makes the conversion space smaller than
    necessary and in case of a multiplication overflow the conversion can
    become negative. The conversion is done with scaled math:
    
        s64 nsec_delta = ((s64)clkdelta * clk->mult) >> clk->shift;
    
    Shifting a signed integer right obvioulsy preserves the sign, which has
    interesting consequences:
    
     - Time jumps backwards
    
     - __iter_div_u64_rem() which is used in one of the calling code pathes
       will take forever to piecewise calculate the seconds/nanoseconds part.
    
    This has been reported by several people with different scenarios:
    
    David observed that when stopping a VM with a debugger:
    
     "It was essentially the stopped by debugger case.  I forget exactly why,
      but the guest was being explicitly stopped from outside, it wasn't just
      scheduling lag.  I think it was something in the vicinity of 10 minutes
      stopped."
    
     When lifting the stop the machine went dead.
    
    The stopped by debugger case is not really interesting, but nevertheless it
    would be a good thing not to die completely.
    
    But this was also observed on a live system by Liav:
    
     "When the OS is too overloaded, delta will get a high enough value for the
      msb of the sum delta * tkr->mult + tkr->xtime_nsec to be set, and so
      after the shift the nsec variable will gain a value similar to
      0xffffffffff000000."
    
    Unfortunately this has been reintroduced recently with commit 6bd58f09e1d8
    ("time: Add cycles to nanoseconds translation"). It had been fixed a year
    ago already in commit 35a4933a8959 ("time: Avoid signed overflow in
    timekeeping_get_ns()").
    
    Though it's not surprising that the issue has been reintroduced because the
    function itself and the whole call chain uses s64 for the result and the
    propagation of it. The change in this recent commit is subtle:
    
       s64 nsec;
    
    -  nsec = (d * m + n) >> s:
    +  nsec = d * m + n;
    +  nsec >>= s;
    
    d being type of cycle_t adds another level of obfuscation.
    
    This wouldn't have happened if the previous change to unsigned computation
    would have made the 'nsec' variable u64 right away and a follow up patch
    had cleaned up the whole call chain.
    
    There have been patches submitted which basically did a revert of the above
    patch leaving everything else unchanged as signed. Back to square one. This
    spawned a admittedly pointless discussion about potential users which rely
    on the unsigned behaviour until someone pointed out that it had been fixed
    before. The changelogs of said patches added further confusion as they made
    finally false claims about the consequences for eventual users which expect
    signed results.
    
    Despite delta being cycle_t, aka. u64, it's very well possible to hand in
    a signed negative value and the signed computation will happily return the
    correct result. But nobody actually sat down and analyzed the code which
    was added as user after the propably unintended signed conversion.
    
    Though in sensitive code like this it's better to analyze it proper and
    make sure that nothing relies on this than hunting the subtle wreckage half
    a year later. After analyzing all call chains it stands that no caller can
    hand in a negative value (which actually would work due to the s64 cast)
    and rely on the signed math to do the right thing.
    
    Change the conversion function to unsigned math. The conversion of all call
    chains is done in a follow up patch.
    
    This solves the starvation issue, which was caused by the negative result,
    but it does not solve the underlying problem. It merily procrastinates
    it. When the timekeeper update is deferred long enough that the unsigned
    multiplication overflows, then time going backwards is observable again.
    
    It does neither solve the issue of clocksources with a small counter width
    which will wrap around possibly several times and cause random time stamps
    to be generated. But those are usually not found on systems used for
    virtualization, so this is likely a non issue.
    
    I took the liberty to claim authorship for this simply because
    analyzing all callsites and writing the changelog took substantially
    more time than just making the simple s/s64/u64/ change and ignore the
    rest.
    
    Fixes: 6bd58f09e1d8 ("time: Add cycles to nanoseconds translation")
    Reported-by: David Gibson <david@gibson.dropbear.id.au>
    Reported-by: Liav Rehana <liavr@mellanox.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: David Gibson <david@gibson.dropbear.id.au>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Parit Bhargava <prarit@redhat.com>
    Cc: Laurent Vivier <lvivier@redhat.com>
    Cc: "Christopher S. Hall" <christopher.s.hall@intel.com>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Richard Cochran <richardcochran@gmail.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Link: http://lkml.kernel.org/r/20161208204228.688545601@linutronix.de
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efd16f76f4da8293e8ccd196a20dd2f52042227a
Author: Paul Burton <paulburton@kernel.org>
Date:   Fri Nov 11 14:22:36 2016 +0000

    mmc: sd: Meet alignment requirements for raw_ssr DMA
    
    commit e85baa8868b016513c0f5738362402495b1a66a5 upstream.
    
    The mmc_read_ssr() function results in DMA to the raw_ssr member of
    struct mmc_card, which is not guaranteed to be cache line aligned & thus
    might not meet the requirements set out in Documentation/DMA-API.txt:
    
      Warnings:  Memory coherency operates at a granularity called the cache
      line width.  In order for memory mapped by this API to operate
      correctly, the mapped region must begin exactly on a cache line
      boundary and end exactly on one (to prevent two separately mapped
      regions from sharing a single cache line).  Since the cache line size
      may not be known at compile time, the API will not enforce this
      requirement.  Therefore, it is recommended that driver writers who
      don't take special care to determine the cache line size at run time
      only map virtual regions that begin and end on page boundaries (which
      are guaranteed also to be cache line boundaries).
    
    On some systems where DMA is non-coherent this can lead to us losing
    data that shares cache lines with the raw_ssr array.
    
    Fix this by kmalloc'ing a temporary buffer to perform DMA into. kmalloc
    will ensure the buffer is suitably aligned, allowing the DMA to be
    performed without any loss of data.
    
    Signed-off-by: Paul Burton <paul.burton@imgtec.com>
    Fixes: 5275a652d296 ("mmc: sd: Export SD Status via “ssr” device attribute")
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbcde92b1b44011c3993ba7a2ee2469a9350ffd3
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sat Nov 12 15:22:38 2016 +0100

    regulator: stw481x-vmmc: fix ages old enable error
    
    commit 295070e9aa015abb9b92cccfbb1e43954e938133 upstream.
    
    The regulator has never been properly enabled, it has been
    dormant all the time. It's strange that MMC was working
    at all, but it likely worked by the signals going through
    the levelshifter and reaching the card anyways.
    
    Fixes: 3615a34ea1a6 ("regulator: add STw481x VMMC driver")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cee935845420e2ffe81293d396ad44a5630ba743
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Fri Dec 2 15:14:20 2016 +0200

    mmc: sdhci: Fix recovery from tuning timeout
    
    commit 61e53bd0047d58caee0c7170613045bf96de4458 upstream.
    
    Clearing the tuning bits should reset the tuning circuit. However there is
    more to do. Reset the command and data lines for good measure, and then
    for eMMC ensure the card is not still trying to process a tuning command by
    sending a stop command.
    
    Note the JEDEC eMMC specification says the stop command (CMD12) can be used
    to stop a tuning command (CMD21) whereas the SD specification is silent on
    the subject with respect to the SD tuning command (CMD19). Considering that
    CMD12 is not a valid SDIO command, the stop command is sent only when the
    tuning command is CMD21 i.e. for eMMC. That addresses cases seen so far
    which have been on eMMC.
    
    Note that this replaces the commit fe5fb2e3b58f ("mmc: sdhci: Reset cmd and
    data circuits after tuning failure") which is being reverted for v4.9+.
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Tested-by: Dan O'Donovan <dan@emutex.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5bb425033ef1783eec0a40d3846dca5a5e2c03a8
Author: Adrian Hunter <adrian.hunter@intel.com>
Date:   Fri Dec 2 15:14:19 2016 +0200

    Revert "mmc: sdhci: Reset cmd and data circuits after tuning failure"
    
    commit 2ca71c27eeaeddae38efe24a84b20e22708a3d1d upstream.
    
    This reverts commit fe5fb2e3b58f ("mmc: sdhci: Reset cmd and data circuits
    after tuning failure").
    
    A better fix is available, and it will be applied to older stable releases,
    so get this out of the way by reverting it.
    
    Signed-off-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71717a3ef900dafe6e9854320491de5b8e972b08
Author: Tobias Klausmann <tobias.johannes.klausmann@mni.thm.de>
Date:   Tue Dec 13 18:08:07 2016 +0100

    ath9k: do not return early to fix rcu unlocking
    
    commit d1f1c0e289e1bc46cd6873ba6dd6c627f459e7fa upstream.
    
    Starting with commit d94a461d7a7d ("ath9k: use ieee80211_tx_status_noskb
    where possible") the driver uses rcu_read_lock() && rcu_read_unlock(), yet on
    returning early in ath_tx_edma_tasklet() the unlock is missing leading to stalls
    and suspicious RCU usage:
    
     ===============================
     [ INFO: suspicious RCU usage. ]
     4.9.0-rc8 #11 Not tainted
     -------------------------------
     kernel/rcu/tree.c:705 Illegal idle entry in RCU read-side critical section.!
    
     other info that might help us debug this:
    
     RCU used illegally from idle CPU!
     rcu_scheduler_active = 1, debug_locks = 0
     RCU used illegally from extended quiescent state!
     1 lock held by swapper/7/0:
     #0:
      (
     rcu_read_lock
     ){......}
     , at:
     [<ffffffffa06ed110>] ath_tx_edma_tasklet+0x0/0x450 [ath9k]
    
     stack backtrace:
     CPU: 7 PID: 0 Comm: swapper/7 Not tainted 4.9.0-rc8 #11
     Hardware name: Acer Aspire V3-571G/VA50_HC_CR, BIOS V2.21 12/16/2013
      ffff88025efc3f38 ffffffff8132b1e5 ffff88017ede4540 0000000000000001
      ffff88025efc3f68 ffffffff810a25f7 ffff88025efcee60 ffff88017edebdd8
      ffff88025eeb5400 0000000000000091 ffff88025efc3f88 ffffffff810c3cd4
     Call Trace:
      <IRQ>
      [<ffffffff8132b1e5>] dump_stack+0x68/0x93
      [<ffffffff810a25f7>] lockdep_rcu_suspicious+0xd7/0x110
      [<ffffffff810c3cd4>] rcu_eqs_enter_common.constprop.85+0x154/0x200
      [<ffffffff810c5a54>] rcu_irq_exit+0x44/0xa0
      [<ffffffff81058631>] irq_exit+0x61/0xd0
      [<ffffffff81018d25>] do_IRQ+0x65/0x110
      [<ffffffff81672189>] common_interrupt+0x89/0x89
      <EOI>
      [<ffffffff814ffe11>] ? cpuidle_enter_state+0x151/0x200
      [<ffffffff814ffee2>] cpuidle_enter+0x12/0x20
      [<ffffffff8109a6ae>] call_cpuidle+0x1e/0x40
      [<ffffffff8109a8f6>] cpu_startup_entry+0x146/0x220
      [<ffffffff810336f8>] start_secondary+0x148/0x170
    
    Signed-off-by: Tobias Klausmann <tobias.johannes.klausmann@mni.thm.de>
    Fixes: d94a461d7a7d ("ath9k: use ieee80211_tx_status_noskb where possible")
    Acked-by: Felix Fietkau <nbd@nbd.name>
    Acked-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Tested-by: Gabriel Craciunescu <nix.or.die@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de5d62f892c382aae83f454190db55e7be3536d6
Author: Vittorio Gambaletta (VittGam) <linux-wireless@vittgam.net>
Date:   Wed Nov 9 03:40:56 2016 +0200

    ath9k: Really fix LED polarity for some Mini PCI AR9220 MB92 cards.
    
    commit 79e57dd113d307a6c74773b8aaecf5442068988a upstream.
    
    The active_high LED of my Wistron DNMA-92 is still being recognized as
    active_low on 4.7.6 mainline. When I was preparing my former commit
    0f9edcdd88a9 ("ath9k: Fix LED polarity for some Mini PCI AR9220 MB92
    cards.") to fix that I must have somehow messed up with testing, because
    I tested the final version of that patch before sending it, and it was
    apparently working; but now it is not working on 4.7.6 mainline.
    
    I initially added the PCI_DEVICE_SUB section for 0x0029/0x2096 above the
    PCI_VDEVICE section for 0x0029; but then I moved the former below the
    latter after seeing how 0x002A sections were sorted in the file.
    
    This turned out to be wrong: if a generic PCI_VDEVICE entry (that has
    both subvendor and subdevice IDs set to PCI_ANY_ID) is put before a more
    specific one (PCI_DEVICE_SUB), then the generic PCI_VDEVICE entry will
    match first and will be used.
    
    With this patch, 0x0029/0x2096 has finally got active_high LED on 4.7.6.
    
    While I'm at it, let's fix 0x002A too by also moving its generic definition
    below its specific ones.
    
    Fixes: 0f9edcdd88a9 ("ath9k: Fix LED polarity for some Mini PCI AR9220 MB92 cards.")
    Signed-off-by: Vittorio Gambaletta <linuxbugs@vittgam.net>
    [kvalo@qca.qualcomm.com: improve the commit log based on email discussions]
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 072ebf89ca2385028d85300af036aa1a7cf691df
Author: Matthias Schiffer <mschiffer@universe-factory.net>
Date:   Tue Nov 15 18:47:21 2016 +0100

    ath9k: fix ath9k_hw_gpio_get() to return 0 or 1 on success
    
    commit 91851cc7a939039bd401adb6ca3da4402bec1d0c upstream.
    
    Commit b2d70d4944c1 ("ath9k: make GPIO API to support both of WMAC and
    SOC") refactored ath9k_hw_gpio_get() to support both WMAC and SOC GPIOs,
    changing the return on success from 1 to BIT(gpio). This broke some callers
    like ath_is_rfkill_set(). This doesn't fix any known bug in mainline at the
    moment, but should be fixed anyway.
    
    Instead of fixing all callers, change ath9k_hw_gpio_get() back to only
    return 0 or 1.
    
    Fixes: b2d70d4944c1 ("ath9k: make GPIO API to support both of WMAC and SOC")
    Signed-off-by: Matthias Schiffer <mschiffer@universe-factory.net>
    [kvalo@qca.qualcomm.com: mention that doesn't fix any known bug]
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1976c7689a58405e076d7443e4f9f4805d86d935
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Dec 8 17:22:09 2016 +0100

    cfg80211/mac80211: fix BSS leaks when abandoning assoc attempts
    
    commit e6f462df9acd2a3295e5d34eb29e2823220cf129 upstream.
    
    When mac80211 abandons an association attempt, it may free
    all the data structures, but inform cfg80211 and userspace
    about it only by sending the deauth frame it received, in
    which case cfg80211 has no link to the BSS struct that was
    used and will not cfg80211_unhold_bss() it.
    
    Fix this by providing a way to inform cfg80211 of this with
    the BSS entry passed, so that it can clean up properly, and
    use this ability in the appropriate places in mac80211.
    
    This isn't ideal: some code is more or less duplicated and
    tracing is missing. However, it's a fairly small change and
    it's thus easier to backport - cleanups can come later.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f23f7f21ac5a5e7b0d780d595c70f4242099485
Author: Jes Sorensen <Jes.Sorensen@redhat.com>
Date:   Tue Nov 29 18:59:02 2016 -0500

    rtl8xxxu: Work around issue with 8192eu and 8723bu devices not reconnecting
    
    commit c59f13bbead475096bdfebc7ef59c12e180858de upstream.
    
    The H2C MEDIA_STATUS_RPT command for some reason causes 8192eu and
    8723bu devices not being able to reconnect.
    
    Reported-by: Barry Day <briselec@gmail.com>
    Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19d55b9f32b6888411c6d09090537dd1ddbf8025
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Dec 22 11:02:08 2016 +0100

    perf/x86/intel/cstate: Prevent hotplug callback leak
    
    commit 834fcd298003c10ce450e66960c78893cb1cc4b5 upstream.
    
    If the pmu registration fails the registered hotplug callbacks are not
    removed. Wrong in any case, but fatal in case of a modular driver.
    
    Replace the nonsensical state names with proper ones while at it.
    
    Fixes: 77c34ef1c319 ("perf/x86/intel/cstate: Convert Intel CSTATE to hotplug state machine")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Sebastian Siewior <bigeasy@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba12b35fbd69020d1fad79f0cead0fbd9ea4822a
Author: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
Date:   Tue Nov 22 14:10:50 2016 +0530

    perf annotate: Don't throw error for zero length symbols
    
    commit edee44be59190bf22d5c6e521f3852b7ff16862f upstream.
    
    'perf report --tui' exits with error when it finds a sample of zero
    length symbol (i.e. addr == sym->start == sym->end). Actually these are
    valid samples. Don't exit TUI and show report with such symbols.
    
    Reported-and-Tested-by: Anton Blanchard <anton@samba.org>
    Link: https://lkml.org/lkml/2016/10/8/189
    Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.vnet.ibm.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Cc: Chris Riyder <chris.ryder@arm.com>
    Cc: linuxppc-dev@lists.ozlabs.org
    Cc: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Nicholas Piggin <npiggin@gmail.com>
    Cc: Paul Mackerras <paulus@samba.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lkml.kernel.org/r/1479804050-5028-1-git-send-email-ravi.bangoria@linux.vnet.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54fa190d0a548f7e403aa5d73e830b8aeecbf27b
Author: Andi Kleen <ak@linux.intel.com>
Date:   Thu Dec 8 16:14:17 2016 -0800

    perf/x86: Fix exclusion of BTS and LBR for Goldmont
    
    commit b0c1ef52959582144bbea9a2b37db7f4c9e399f7 upstream.
    
    An earlier patch allowed enabling PT and LBR at the same
    time on Goldmont. However it also allowed enabling BTS and LBR
    at the same time, which is still not supported. Fix this by
    bypassing the check only for PT.
    
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: alexander.shishkin@intel.com
    Cc: kan.liang@intel.com
    Fixes: ccbebba4c6bf ("perf/x86/intel/pt: Bypass PT vs. LBR exclusivity if the core supports it")
    Link: http://lkml.kernel.org/r/20161209001417.4713-1-andi@firstfloor.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98068574928f499b30f136ff57ef9a03cc575a36
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Sat Nov 26 14:43:35 2016 -0600

    rtlwifi: Fix enter/exit power_save
    
    commit ba9f93f82abafe2552eac942ebb11c2df4f8dd7f upstream.
    
    In commit a5ffbe0a1993 ("rtlwifi: Fix scheduling while atomic bug") and
    commit a269913c52ad ("rtlwifi: Rework rtl_lps_leave() and rtl_lps_enter()
    to use work queue"), an error was introduced in the power-save routines
    due to the fact that leaving PS was delayed by the use of a work queue.
    
    This problem is fixed by detecting if the enter or leave routines are
    in interrupt mode. If so, the workqueue is used to place the request.
    If in normal mode, the enter or leave routines are called directly.
    
    Fixes: a269913c52ad ("rtlwifi: Rework rtl_lps_leave() and rtl_lps_enter() to use work queue")
    Reported-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea23fca0c60045afbbeceef1926893d905eb1b36
Author: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
Date:   Wed Nov 30 10:59:29 2016 +0530

    ath10k: fix soft lockup during firmware crash/hw-restart
    
    commit c2cac2f74ab4bcf0db0dcf3a612f1e5b52d145c8 upstream.
    
    During firmware crash (or) user requested manual restart
    the system gets into a soft lock up state because of the
    below root cause.
    
    During user requested hardware restart / firmware crash
    the system goes into a soft lockup state as 'napi_synchronize'
    is called after 'napi_disable' (which sets 'NAPI_STATE_SCHED'
    bit) and it sleeps into infinite loop as it waits for
    'NAPI_STATE_SCHED' to be cleared. This condition is hit because
    'ath10k_hif_stop' is called twice as below (resulting in calling
    'napi_synchronize' after 'napi_disable')
    
    'ath10k_core_restart' -> 'ath10k_hif_stop' (ATH10K_STATE_ON) ->
    -> 'ieee80211_restart_hw' -> 'ath10k_start' -> 'ath10k_halt' ->
    'ath10k_core_stop' -> 'ath10k_hif_stop' (ATH10K_STATE_RESTARTING)
    
    Fix this by calling 'ath10k_halt' in ath10k_core_restart itself
    as it makes more sense before informing mac80211 to restart h/w
    Also remove 'ath10k_halt' in ath10k_start for the state of 'restarting'
    
    Fixes: 3c97f5de1f28 ("ath10k: implement NAPI support")
    Signed-off-by: Mohammed Shafi Shajakhan <mohammed@qti.qualcomm.com>
    Signed-off-by: Kalle Valo <kvalo@qca.qualcomm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8425f41346610bd2137eee2c374227ee532e497
Author: Larry Finger <Larry.Finger@lwfinger.net>
Date:   Sat Nov 5 14:08:57 2016 -0500

    ssb: Fix error routine when fallback SPROM fails
    
    commit 8052d7245b6089992343c80b38b14dbbd8354651 upstream.
    
    When there is a CRC error in the SPROM read from the device, the code
    attempts to handle a fallback SPROM. When this also fails, the driver
    returns zero rather than an error code.
    
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
