commit 70248e7b378b96f208d5544ee25b808a8ef2ddc2
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Sep 30 10:13:08 2021 +0200

    Linux 5.14.9
    
    Link: https://lore.kernel.org/r/20210927170233.453060397@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Link: https://lore.kernel.org/r/20210928071739.782455217@linuxfoundation.org
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Salvatore Bonaccorso <carnil@debian.org>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6fceb4e9ce6af58ddddfb0bad6b52da4f28dfaf
Author: Jack Pham <jackp@codeaurora.org>
Date:   Thu Sep 9 10:48:11 2021 -0700

    usb: gadget: f_uac2: Populate SS descriptors' wBytesPerInterval
    
    commit f0e8a206a2a53a919e1709c654cb65d519f7befb upstream.
    
    For Isochronous endpoints, the SS companion descriptor's
    wBytesPerInterval field is required to reserve bus time in order
    to transmit the required payload during the service interval.
    If left at 0, the UAC2 function is unable to transact data on its
    playback or capture endpoints in SuperSpeed mode.
    
    Since f_uac2 currently does not support any bursting this value can
    be exactly equal to the calculated wMaxPacketSize.
    
    Tested with Windows 10 as a host.
    
    Fixes: f8cb3d556be3 ("usb: f_uac2: adds support for SS and SSP")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Jack Pham <jackp@codeaurora.org>
    Link: https://lore.kernel.org/r/20210909174811.12534-3-jackp@codeaurora.org
    [jackp: Backport to 5.14 with minor conflict resolution]
    Signed-off-by: Jack Pham <jackp@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 007574d6ac2642457e908f29c88a417b28e69fa5
Author: Jack Pham <jackp@codeaurora.org>
Date:   Thu Sep 9 10:48:10 2021 -0700

    usb: gadget: f_uac2: Add missing companion descriptor for feedback EP
    
    commit 595091a1426a3b2625dad322f69fe569dc9d8943 upstream.
    
    The f_uac2 function fails to enumerate when connected in SuperSpeed
    due to the feedback endpoint missing the companion descriptor.
    Add a new ss_epin_fback_desc_comp descriptor and append it behind the
    ss_epin_fback_desc both in the static definition of the ss_audio_desc
    structure as well as its dynamic construction in setup_headers().
    
    Fixes: 24f779dac8f3 ("usb: gadget: f_uac2/u_audio: add feedback endpoint support")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Jack Pham <jackp@codeaurora.org>
    Link: https://lore.kernel.org/r/20210909174811.12534-2-jackp@codeaurora.org
    [jackp: Backport to 5.14 with minor conflict resolution]
    Signed-off-by: Jack Pham <jackp@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d401d7d2f5c8e40f418300b3c1e4bc2670f65558
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 9 12:14:40 2021 +0300

    nvmet: fix a width vs precision bug in nvmet_subsys_attr_serial_show()
    
    commit 0bd46e22c5ec3dbfb81b60de475151e3f6b411c2 upstream.
    
    This was intended to limit the number of characters printed from
    "subsys->serial" to NVMET_SN_MAX_SIZE.  But accidentally the width
    specifier was used instead of the precision specifier so it only
    affects the alignment and not the number of characters printed.
    
    Fixes: f04064814c2a ("nvmet: fixup buffer overrun in nvmet_subsys_attr_serial()")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 958c616efce30c575479a01c123f108415241a8d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 20 10:26:21 2021 -0700

    qnx4: work around gcc false positive warning bug
    
    commit d5f6545934c47e97c0b48a645418e877b452a992 upstream.
    
    In commit b7213ffa0e58 ("qnx4: avoid stringop-overread errors") I tried
    to teach gcc about how the directory entry structure can be two
    different things depending on a status flag.  It made the code clearer,
    and it seemed to make gcc happy.
    
    However, Arnd points to a gcc bug, where despite using two different
    members of a union, gcc then gets confused, and uses the size of one of
    the members to decide if a string overrun happens.  And not necessarily
    the rigth one.
    
    End result: with some configurations, gcc-11 will still complain about
    the source buffer size being overread:
    
      fs/qnx4/dir.c: In function 'qnx4_readdir':
      fs/qnx4/dir.c:76:32: error: 'strnlen' specified bound [16, 48] exceeds source size 1 [-Werror=stringop-overread]
         76 |                         size = strnlen(name, size);
            |                                ^~~~~~~~~~~~~~~~~~~
      fs/qnx4/dir.c:26:22: note: source object declared here
         26 |                 char de_name;
            |                      ^~~~~~~
    
    because gcc will get confused about which union member entry is actually
    getting accessed, even when the source code is very clear about it.  Gcc
    internally will have combined two "redundant" pointers (pointing to
    different union elements that are at the same offset), and takes the
    size checking from one or the other - not necessarily the right one.
    
    This is clearly a gcc bug, but we can work around it fairly easily.  The
    biggest thing here is the big honking comment about why we do what we
    do.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=99578#c6
    Reported-and-tested-by: Arnd Bergmann <arnd@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f67f85ec19facb8ebc09d21838c6b3f20eb617ee
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Sep 20 12:03:45 2021 +0200

    xen/balloon: fix balloon kthread freezing
    
    commit 96f5bd03e1be606987644b71899ea56a8d05f825 upstream.
    
    Commit 8480ed9c2bbd56 ("xen/balloon: use a kernel thread instead a
    workqueue") switched the Xen balloon driver to use a kernel thread.
    Unfortunately the patch omitted to call try_to_freeze() or to use
    wait_event_freezable_timeout(), causing a system suspend to fail.
    
    Fixes: 8480ed9c2bbd56 ("xen/balloon: use a kernel thread instead a workqueue")
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20210920100345.21939-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ea750370cd61f15829747f57cd380c8cfa090ec
Author: Laurentiu Tudor <laurentiu.tudor@nxp.com>
Date:   Wed Sep 15 11:09:39 2021 +0300

    software node: balance refcount for managed software nodes
    
    commit 5aeb05b27f81269a2bf2e15eab9fc0f9a400d3a8 upstream.
    
    software_node_notify(), on KOBJ_REMOVE drops the refcount twice on managed
    software nodes, thus leading to underflow errors. Balance the refcount by
    bumping it in the device_create_managed_software_node() function.
    
    The error [1] was encountered after adding a .shutdown() op to our
    fsl-mc-bus driver.
    
    [1]
    pc : refcount_warn_saturate+0xf8/0x150
    lr : refcount_warn_saturate+0xf8/0x150
    sp : ffff80001009b920
    x29: ffff80001009b920 x28: ffff1a2420318000 x27: 0000000000000000
    x26: ffffccac15e7a038 x25: 0000000000000008 x24: ffffccac168e0030
    x23: ffff1a2428a82000 x22: 0000000000080000 x21: ffff1a24287b5000
    x20: 0000000000000001 x19: ffff1a24261f4400 x18: ffffffffffffffff
    x17: 6f72645f726f7272 x16: 0000000000000000 x15: ffff80009009b607
    x14: 0000000000000000 x13: ffffccac16602670 x12: 0000000000000a17
    x11: 000000000000035d x10: ffffccac16602670 x9 : ffffccac16602670
    x8 : 00000000ffffefff x7 : ffffccac1665a670 x6 : ffffccac1665a670
    x5 : 0000000000000000 x4 : 0000000000000000 x3 : 00000000ffffffff
    x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff1a2420318000
    Call trace:
     refcount_warn_saturate+0xf8/0x150
     kobject_put+0x10c/0x120
     software_node_notify+0xd8/0x140
     device_platform_notify+0x4c/0xb4
     device_del+0x188/0x424
     fsl_mc_device_remove+0x2c/0x4c
     rebofind sp.c__fsl_mc_device_remove+0x14/0x2c
     device_for_each_child+0x5c/0xac
     dprc_remove+0x9c/0xc0
     fsl_mc_driver_remove+0x28/0x64
     __device_release_driver+0x188/0x22c
     device_release_driver+0x30/0x50
     bus_remove_device+0x128/0x134
     device_del+0x16c/0x424
     fsl_mc_bus_remove+0x8c/0x114
     fsl_mc_bus_shutdown+0x14/0x20
     platform_shutdown+0x28/0x40
     device_shutdown+0x15c/0x330
     __do_sys_reboot+0x218/0x2a0
     __arm64_sys_reboot+0x28/0x34
     invoke_syscall+0x48/0x114
     el0_svc_common+0x40/0xdc
     do_el0_svc+0x2c/0x94
     el0_svc+0x2c/0x54
     el0t_64_sync_handler+0xa8/0x12c
     el0t_64_sync+0x198/0x19c
    ---[ end trace 32eb1c71c7d86821 ]---
    
    Fixes: 151f6ff78cdf ("software node: Provide replacement for device_add_properties()")
    Reported-by: Jon Nettleton <jon@solid-run.com>
    Suggested-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Laurentiu Tudor <laurentiu.tudor@nxp.com>
    Cc: 5.12+ <stable@vger.kernel.org> # 5.12+
    [ rjw: Fix up the software_node_notify() invocation ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62a27861b4ea5f5611be01d93c2a2f4498fc4f1b
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Sep 22 13:30:59 2021 +0200

    USB: serial: cp210x: fix dropped characters with CP2102
    
    commit c32dfec6c1c36bbbcd5d33e949d99aeb215877ec upstream.
    
    Some CP2102 do not support event-insertion mode but return no error when
    attempting to enable it.
    
    This means that any event escape characters in the input stream will not
    be escaped by the device and consequently regular data may be
    interpreted as escape sequences and be removed from the stream by the
    driver.
    
    The reporter's device has batch number DCL00X etched into it and as
    discovered by the SHA2017 Badge team, counterfeit devices with that
    marking can be detected by sending malformed vendor requests. [1][2]
    
    Tests confirm that the possibly counterfeit CP2102 returns a single byte
    in response to a malformed two-byte part-number request, while an
    original CP2102 returns two bytes. Assume that every CP2102 that behaves
    this way also does not support event-insertion mode (e.g. cannot report
    parity errors).
    
    [1] https://mobile.twitter.com/sha2017badge/status/1167902087289532418
    [2] https://hackaday.com/2017/08/14/hands-on-with-the-shacamp-2017-badge/#comment-3903376
    
    Reported-by: Malte Di Donato <malte@neo-soft.org>
    Tested-by: Malte Di Donato <malte@neo-soft.org>
    Fixes: a7207e9835a4 ("USB: serial: cp210x: add support for line-status events")
    Cc: stable@vger.kernel.org      # 5.9
    Link: https://lore.kernel.org/r/20210922113100.20888-1-johan@kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b389ef53115fa2d5e5300fe43a522fa2ab1c47c
Author: Peter Collingbourne <pcc@google.com>
Date:   Wed Sep 15 12:03:35 2021 -0700

    arm64: add MTE supported check to thread switching and syscall entry/exit
    
    commit 8c8a3b5bd960cd88f7655b5251dc28741e11f139 upstream.
    
    This lets us avoid doing unnecessary work on hardware that does not
    support MTE, and will allow us to freely use MTE instructions in the
    code called by mte_thread_switch().
    
    Since this would mean that we do a redundant check in
    mte_check_tfsr_el1(), remove it and add two checks now required in its
    callers. This also avoids an unnecessary DSB+ISB sequence on the syscall
    exit path for hardware not supporting MTE.
    
    Fixes: 65812c6921cc ("arm64: mte: Enable async tag check fault")
    Cc: <stable@vger.kernel.org> # 5.13.x
    Signed-off-by: Peter Collingbourne <pcc@google.com>
    Link: https://linux-review.googlesource.com/id/I02fd000d1ef2c86c7d2952a7f099b254ec227a5d
    Link: https://lore.kernel.org/r/20210915190336.398390-1-pcc@google.com
    [catalin.marinas@arm.com: adjust the commit log slightly]
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 338db6ec41cad7b3f3846ef91e58ae563993bbd6
Author: Marc Zyngier <maz@kernel.org>
Date:   Wed Sep 22 14:19:41 2021 +0100

    irqchip/armada-370-xp: Fix ack/eoi breakage
    
    commit 2a7313dc81e88adc7bb09d0f056985fa8afc2b89 upstream.
    
    When converting the driver to using handle_percpu_devid_irq,
    we forgot to repaint the irq_eoi() callback into irq_ack(),
    as handle_percpu_devid_fasteoi_ipi() was actually using EOI
    really early in the handling. Yes this was a stupid idea.
    
    Fix this by using the HW ack method as irq_ack().
    
    Fixes: e52e73b7e9f7 ("irqchip/armada-370-xp: Make IPIs use handle_percpu_devid_irq()")
    Reported-by: Steffen Trumtrar <s.trumtrar@pengutronix.de>
    Tested-by: Steffen Trumtrar <s.trumtrar@pengutronix.de>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Cc: Valentin Schneider <valentin.schneider@arm.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/87tuiexq5f.fsf@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8467f200fd38141f65492b55333840cc7591658d
Author: Antoine Tenart <atenart@kernel.org>
Date:   Thu Sep 9 10:56:12 2021 +0200

    thermal/drivers/int340x: Do not set a wrong tcc offset on resume
    
    commit 8b4bd256674720709a9d858a219fcac6f2f253b5 upstream.
    
    After upgrading to Linux 5.13.3 I noticed my laptop would shutdown due
    to overheat (when it should not). It turned out this was due to commit
    fe6a6de6692e ("thermal/drivers/int340x/processor_thermal: Fix tcc setting").
    
    What happens is this drivers uses a global variable to keep track of the
    tcc offset (tcc_offset_save) and uses it on resume. The issue is this
    variable is initialized to 0, but is only set in
    tcc_offset_degree_celsius_store, i.e. when the tcc offset is explicitly
    set by userspace. If that does not happen, the resume path will set the
    offset to 0 (in my case the h/w default being 3, the offset would become
    too low after a suspend/resume cycle).
    
    The issue did not arise before commit fe6a6de6692e, as the function
    setting the offset would return if the offset was 0. This is no longer
    the case (rightfully).
    
    Fix this by not applying the offset if it wasn't saved before, reverting
    back to the old logic. A better approach will come later, but this will
    be easier to apply to stable kernels.
    
    The logic to restore the offset after a resume was there long before
    commit fe6a6de6692e, but as a value of 0 was considered invalid I'm
    referencing the commit that made the issue possible in the Fixes tag
    instead.
    
    Fixes: fe6a6de6692e ("thermal/drivers/int340x/processor_thermal: Fix tcc setting")
    Cc: stable@vger.kernel.org
    Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Signed-off-by: Antoine Tenart <atenart@kernel.org>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Tested-by: Srinivas Pandruvada <srinivas.pI andruvada@linux.intel.com>
    Link: https://lore.kernel.org/r/20210909085613.5577-2-atenart@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe5eaf1cdf9c5874e586435dac48054150d96da7
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Sep 20 14:04:21 2021 +0200

    x86/setup: Call early_reserve_memory() earlier
    
    commit 8aa83e6395ce047a506f0b16edca45f36c1ae7f8 upstream.
    
    Commit in Fixes introduced early_reserve_memory() to do all needed
    initial memblock_reserve() calls in one function. Unfortunately, the call
    of early_reserve_memory() is done too late for Xen dom0, as in some
    cases a Xen hook called by e820__memory_setup() will need those memory
    reservations to have happened already.
    
    Move the call of early_reserve_memory() before the call of
    e820__memory_setup() in order to avoid such problems.
    
    Fixes: a799c2bd29d1 ("x86/setup: Consolidate early memory reservations")
    Reported-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Tested-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
    Tested-by: Nathan Chancellor <nathan@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20210920120421.29276-1-jgross@suse.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5111b05125bdac2a44450d20943c11c5a5c5582e
Author: Borislav Petkov <bp@suse.de>
Date:   Thu Sep 16 10:44:06 2021 +0200

    EDAC/dmc520: Assign the proper type to dimm->edac_mode
    
    commit 54607282fae6148641a08d81a6e0953b541249c7 upstream.
    
    dimm->edac_mode contains values of type enum edac_type - not the
    corresponding capability flags. Fix that.
    
    Fixes: 1088750d7839 ("EDAC: Add EDAC driver for DMC520")
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20210916085258.7544-1-bp@alien8.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 845350d4e34ba7d4a7a3161ed741c70e817a0727
Author: Sai Krishna Potthuri <lakshmi.sai.krishna.potthuri@xilinx.com>
Date:   Wed Aug 18 12:53:14 2021 +0530

    EDAC/synopsys: Fix wrong value type assignment for edac_mode
    
    commit 5297cfa6bdf93e3889f78f9b482e2a595a376083 upstream.
    
    dimm->edac_mode contains values of type enum edac_type - not the
    corresponding capability flags. Fix that.
    
    Issue caught by Coverity check "enumerated type mixed with another
    type."
    
     [ bp: Rewrite commit message, add tags. ]
    
    Fixes: ae9b56e3996d ("EDAC, synps: Add EDAC support for zynq ddr ecc controller")
    Signed-off-by: Sai Krishna Potthuri <lakshmi.sai.krishna.potthuri@xilinx.com>
    Signed-off-by: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20210818072315.15149-1-shubhrajyoti.datta@xilinx.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef8eac0c61d7a7b80acd5683b9494c2b014ffa8c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Sep 19 10:06:46 2021 -0700

    Revert drm/vc4 hdmi runtime PM changes
    
    [ Upstream commit b1044a9b8100a0cc5c9d2e1e2f9ca4bb8e32b23a ]
    
    This reverts commits
    
      9984d6664ce9 ("drm/vc4: hdmi: Make sure the controller is powered in detect")
      411efa18e4b0 ("drm/vc4: hdmi: Move the HSM clock enable to runtime_pm")
    
    as Michael Stapelberg reports that the new runtime PM changes cause his
    Raspberry Pi 3 to hang on boot, probably due to interactions with other
    changes in the DRM tree (because a bisect points to the merge in commit
    e058a84bfddc: "Merge tag 'drm-next-2021-07-01' of git://.../drm").
    
    Revert these two commits until it's been resolved.
    
    Link: https://lore.kernel.org/all/871r5mp7h2.fsf@midna.i-did-not-set--mail-host-address--so-tickle-me/
    Reported-and-tested-by: Michael Stapelberg <michael@stapelberg.ch>
    Cc: Maxime Ripard <maxime@cerno.tech>
    Cc: Dave Stevenson <dave.stevenson@raspberrypi.com>
    Cc: Dave Airlie <airlied@gmail.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8aef50b390c46038c2c0bd76d3d6f3ba34ea3692
Author: Ian Rogers <irogers@google.com>
Date:   Fri Sep 17 22:44:40 2021 -0700

    libperf evsel: Make use of FD robust.
    
    [ Upstream commit aba5daeb645181ee5a046bc00c231fd045882aaa ]
    
    FD uses xyarray__entry that may return NULL if an index is out of
    bounds. If NULL is returned then a segv happens as FD unconditionally
    dereferences the pointer. This was happening in a case of with perf
    iostat as shown below. The fix is to make FD an "int*" rather than an
    int and handle the NULL case as either invalid input or a closed fd.
    
      $ sudo gdb --args perf stat --iostat  list
      ...
      Breakpoint 1, perf_evsel__alloc_fd (evsel=0x5555560951a0, ncpus=1, nthreads=1) at evsel.c:50
      50      {
      (gdb) bt
       #0  perf_evsel__alloc_fd (evsel=0x5555560951a0, ncpus=1, nthreads=1) at evsel.c:50
       #1  0x000055555585c188 in evsel__open_cpu (evsel=0x5555560951a0, cpus=0x555556093410,
          threads=0x555556086fb0, start_cpu=0, end_cpu=1) at util/evsel.c:1792
       #2  0x000055555585cfb2 in evsel__open (evsel=0x5555560951a0, cpus=0x0, threads=0x555556086fb0)
          at util/evsel.c:2045
       #3  0x000055555585d0db in evsel__open_per_thread (evsel=0x5555560951a0, threads=0x555556086fb0)
          at util/evsel.c:2065
       #4  0x00005555558ece64 in create_perf_stat_counter (evsel=0x5555560951a0,
          config=0x555555c34700 <stat_config>, target=0x555555c2f1c0 <target>, cpu=0) at util/stat.c:590
       #5  0x000055555578e927 in __run_perf_stat (argc=1, argv=0x7fffffffe4a0, run_idx=0)
          at builtin-stat.c:833
       #6  0x000055555578f3c6 in run_perf_stat (argc=1, argv=0x7fffffffe4a0, run_idx=0)
          at builtin-stat.c:1048
       #7  0x0000555555792ee5 in cmd_stat (argc=1, argv=0x7fffffffe4a0) at builtin-stat.c:2534
       #8  0x0000555555835ed3 in run_builtin (p=0x555555c3f540 <commands+288>, argc=3,
          argv=0x7fffffffe4a0) at perf.c:313
       #9  0x0000555555836154 in handle_internal_command (argc=3, argv=0x7fffffffe4a0) at perf.c:365
       #10 0x000055555583629f in run_argv (argcp=0x7fffffffe2ec, argv=0x7fffffffe2e0) at perf.c:409
       #11 0x0000555555836692 in main (argc=3, argv=0x7fffffffe4a0) at perf.c:539
      ...
      (gdb) c
      Continuing.
      Error:
      The sys_perf_event_open() syscall returned with 22 (Invalid argument) for event (uncore_iio_0/event=0x83,umask=0x04,ch_mask=0xF,fc_mask=0x07/).
      /bin/dmesg | grep -i perf may provide additional information.
    
      Program received signal SIGSEGV, Segmentation fault.
      0x00005555559b03ea in perf_evsel__close_fd_cpu (evsel=0x5555560951a0, cpu=1) at evsel.c:166
      166                     if (FD(evsel, cpu, thread) >= 0)
    
    v3. fixes a bug in perf_evsel__run_ioctl where the sense of a branch was
        backward.
    
    Signed-off-by: Ian Rogers <irogers@google.com>
    Acked-by: Jiri Olsa <jolsa@redhat.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Link: http://lore.kernel.org/lkml/20210918054440.2350466-1-irogers@google.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f35f78ead51035a5018bb1ef55f65792013f7cb
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Sep 18 10:05:06 2021 -0700

    spi: Fix tegra20 build with CONFIG_PM=n
    
    [ Upstream commit efafec27c5658ed987e720130772f8933c685e87 ]
    
    Without CONFIG_PM enabled, the SET_RUNTIME_PM_OPS() macro ends up being
    empty, and the only use of tegra_slink_runtime_{resume,suspend} goes
    away, resulting in
    
      drivers/spi/spi-tegra20-slink.c:1200:12: error: ‘tegra_slink_runtime_resume’ defined but not used [-Werror=unused-function]
       1200 | static int tegra_slink_runtime_resume(struct device *dev)
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~
      drivers/spi/spi-tegra20-slink.c:1188:12: error: ‘tegra_slink_runtime_suspend’ defined but not used [-Werror=unused-function]
       1188 | static int tegra_slink_runtime_suspend(struct device *dev)
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    mark the functions __maybe_unused to make the build happy.
    
    This hits the alpha allmodconfig build (and others).
    
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9367a8fbd9d9fae43d1ef8de3419961331a8ccd4
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 8 20:57:43 2021 -0700

    net: 6pack: Fix tx timeout and slot time
    
    [ Upstream commit 3c0d2a46c0141913dc6fd126c57d0615677d946e ]
    
    tx timeout and slot time are currently specified in units of HZ.  On
    Alpha, HZ is defined as 1024.  When building alpha:allmodconfig, this
    results in the following error message.
    
      drivers/net/hamradio/6pack.c: In function 'sixpack_open':
      drivers/net/hamradio/6pack.c:71:41: error:
            unsigned conversion from 'int' to 'unsigned char'
            changes value from '256' to '0'
    
    In the 6PACK protocol, tx timeout is specified in units of 10 ms and
    transmitted over the wire:
    
        https://www.linux-ax25.org/wiki/6PACK
    
    Defining a value dependent on HZ doesn't really make sense, and
    presumably comes from the (very historical) situation where HZ was
    originally 100.
    
    Note that the SIXP_SLOTTIME use explicitly is about 10ms granularity:
    
            mod_timer(&sp->tx_t, jiffies + ((when + 1) * HZ) / 100);
    
    and the SIXP_TXDELAY walue is sent as a byte over the wire.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 501b0fa2f7f2bec16230e27e3c88efb0de321c7c
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 8 22:00:33 2021 -0700

    alpha: Declare virt_to_phys and virt_to_bus parameter as pointer to volatile
    
    [ Upstream commit 35a3f4ef0ab543daa1725b0c963eb8c05e3376f8 ]
    
    Some drivers pass a pointer to volatile data to virt_to_bus() and
    virt_to_phys(), and that works fine.  One exception is alpha.  This
    results in a number of compile errors such as
    
      drivers/net/wan/lmc/lmc_main.c: In function 'lmc_softreset':
      drivers/net/wan/lmc/lmc_main.c:1782:50: error:
            passing argument 1 of 'virt_to_bus' discards 'volatile'
            qualifier from pointer target type
    
      drivers/atm/ambassador.c: In function 'do_loader_command':
      drivers/atm/ambassador.c:1747:58: error:
            passing argument 1 of 'virt_to_bus' discards 'volatile'
            qualifier from pointer target type
    
    Declare the parameter of virt_to_phys and virt_to_bus as pointer to
    volatile to fix the problem.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95d6bf1d19fd260dbcc94e43c44a4a6510a8ebda
Author: Dan Li <ashimida@linux.alibaba.com>
Date:   Tue Sep 14 17:44:02 2021 +0800

    arm64: Mark __stack_chk_guard as __ro_after_init
    
    [ Upstream commit 9fcb2e93f41c07a400885325e7dbdfceba6efaec ]
    
    __stack_chk_guard is setup once while init stage and never changed
    after that.
    
    Although the modification of this variable at runtime will usually
    cause the kernel to crash (so does the attacker), it should be marked
    as __ro_after_init, and it should not affect performance if it is
    placed in the ro_after_init section.
    
    Signed-off-by: Dan Li <ashimida@linux.alibaba.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Link: https://lore.kernel.org/r/1631612642-102881-1-git-send-email-ashimida@linux.alibaba.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28f2eee9fc036f03f6050d2574b03b22e4ea9f5d
Author: Simon Ser <contact@emersion.fr>
Date:   Fri Sep 10 15:37:41 2021 +0000

    amd/display: enable panel orientation quirks
    
    [ Upstream commit cd51a57eb59fd56f3fe7ce9cadef444451bcf804 ]
    
    This patch allows panel orientation quirks from DRM core to be
    used. They attach a DRM connector property "panel orientation"
    which indicates in which direction the panel has been mounted.
    Some machines have the internal screen mounted with a rotation.
    
    Since the panel orientation quirks need the native mode from the
    EDID, check for it in amdgpu_dm_connector_ddc_get_modes.
    
    Signed-off-by: Simon Ser <contact@emersion.fr>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: Harry Wentland <hwentlan@amd.com>
    Cc: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fca67e1c4b8ca5bf1bbaefcf8f0f086b6c105279
Author: Meenakshikumar Somasundaram <meenakshikumar.somasundaram@amd.com>
Date:   Mon Aug 30 14:01:10 2021 -0400

    drm/amd/display: Link training retry fix for abort case
    
    [ Upstream commit 71ae30997a8f1791835167d3ceb8d1fab32407db ]
    
    [Why]
    If link training is aborted, it shall be retried if sink is present.
    
    [How]
    Check hpd status to find out whether sink is present or not. If sink is
    present, then link training shall be tried again with same settings.
    Otherwise, link training shall be aborted.
    
    Reviewed-by: Jimmy Kizito <Jimmy.Kizito@amd.com>
    Acked-by: Mikita Lipski <mikita.lipski@amd.com>
    Signed-off-by: Meenakshikumar Somasundaram <meenakshikumar.somasundaram@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76438685048adaf15eacb1a14c67bc239107be1d
Author: Qingqing Zhuo <qingqing.zhuo@amd.com>
Date:   Fri Aug 27 06:58:38 2021 -0400

    drm/amd/display: Fix unstable HPCP compliance on Chrome Barcelo
    
    [ Upstream commit 4e00a434a08e0654a4dd9347485d9ec85deee1ef ]
    
    [Why]
    Intermittently, there presents two occurrences of 0 stream
    commits in a single HPD event. Current HDCP sequence does
    not consider such scenerio, and will thus disable HDCP.
    
    [How]
    Add condition check to include stream remove and re-enable
    case for HDCP enable.
    
    Reviewed-by: Bhawanpreet Lakha <bhawanpreet.lakha@amd.com>
    Acked-by: Mikita Lipski <mikita.lipski@amd.com>
    Signed-off-by: Qingqing Zhuo <qingqing.zhuo@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b58ffd21ec45701b7e2a2103942fe5278a29f2d6
Author: Felix Kuehling <Felix.Kuehling@amd.com>
Date:   Tue Aug 31 17:42:15 2021 -0400

    drm/amdkfd: make needs_pcie_atomics FW-version dependent
    
    [ Upstream commit fb932dfeb87411a8a01c995576198bfc302df339 ]
    
    On some GPUs the PCIe atomic requirement for KFD depends on the MEC
    firmware version. Add a firmware version check for this. The minimum
    firmware version that works without atomics can be updated in the
    device_info structure for each GPU type.
    
    Move PCIe atomic detection from kgd2kfd_probe into kgd2kfd_device_init
    because the MEC firmware is not loaded yet at the probe stage.
    
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Guchun Chen <guchun.chen@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47c6e796abe41321fd580febfacbb7cae72249df
Author: Helge Deller <deller@gmx.de>
Date:   Thu Sep 16 08:35:42 2021 +0200

    parisc: Use absolute_pointer() to define PAGE0
    
    [ Upstream commit 90cc7bed1ed19f869ae7221a6b41887fe762a6a3 ]
    
    Use absolute_pointer() wrapper for PAGE0 to avoid this compiler warning:
    
      arch/parisc/kernel/setup.c: In function 'start_parisc':
      error: '__builtin_memcmp_eq' specified bound 8 exceeds source size 0
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Co-Developed-by: Guenter Roeck <linux@roeck-us.net>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01452e3c727e2863420ca8bd78e19d6ec6c53a3d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 15 13:56:37 2021 -0700

    qnx4: avoid stringop-overread errors
    
    [ Upstream commit b7213ffa0e585feb1aee3e7173e965e66ee0abaa ]
    
    The qnx4 directory entries are 64-byte blocks that have different
    contents depending on the a status byte that is in the last byte of the
    block.
    
    In particular, a directory entry can be either a "link info" entry with
    a 48-byte name and pointers to the real inode information, or an "inode
    entry" with a smaller 16-byte name and the full inode information.
    
    But the code was written to always just treat the directory name as if
    it was part of that "inode entry", and just extend the name to the
    longer case if the status byte said it was a link entry.
    
    That work just fine and gives the right results, but now that gcc is
    tracking data structure accesses much more, the code can trigger a
    compiler error about using up to 48 bytes (the long name) in a structure
    that only has that shorter name in it:
    
       fs/qnx4/dir.c: In function ‘qnx4_readdir’:
       fs/qnx4/dir.c:51:32: error: ‘strnlen’ specified bound 48 exceeds source size 16 [-Werror=stringop-overread]
          51 |                         size = strnlen(de->di_fname, size);
             |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
       In file included from fs/qnx4/qnx4.h:3,
                        from fs/qnx4/dir.c:16:
       include/uapi/linux/qnx4_fs.h:45:25: note: source object declared here
          45 |         char            di_fname[QNX4_SHORT_NAME_MAX];
             |                         ^~~~~~~~
    
    which is because the source code doesn't really make this whole "one of
    two different types" explicit.
    
    Fix this by introducing a very explicit union of the two types, and
    basically explaining to the compiler what is really going on.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd24b4ba2d8db4baa773c91de49517e86efebc8b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 6 16:06:04 2021 -0700

    sparc: avoid stringop-overread errors
    
    [ Upstream commit fc7c028dcdbfe981bca75d2a7b95f363eb691ef3 ]
    
    The sparc mdesc code does pointer games with 'struct mdesc_hdr', but
    didn't describe to the compiler how that header is then followed by the
    data that the header describes.
    
    As a result, gcc is now unhappy since it does stricter pointer range
    tracking, and doesn't understand about how these things work.  This
    results in various errors like:
    
        arch/sparc/kernel/mdesc.c: In function ‘mdesc_node_by_name’:
        arch/sparc/kernel/mdesc.c:647:22: error: ‘strcmp’ reading 1 or more bytes from a region of size 0 [-Werror=stringop-overread]
          647 |                 if (!strcmp(names + ep[ret].name_offset, name))
              |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    which are easily avoided by just describing 'struct mdesc_hdr' better,
    and making the node_block() helper function look into that unsized
    data[] that follows the header.
    
    This makes the sparc64 build happy again at least for my cross-compiler
    version (gcc version 11.2.1).
    
    Link: https://lore.kernel.org/lkml/CAHk-=wi4NW3NC0xWykkw=6LnjQD6D_rtRtxY9g8gQAJXtQMi8A@mail.gmail.com/
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: David S. Miller <davem@davemloft.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32f93161620a370c0b3d5bbba6be8ce2c5918a80
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Tue Sep 14 20:52:25 2021 -0700

    net: i825xx: Use absolute_pointer for memcpy from fixed memory location
    
    [ Upstream commit dff2d13114f0beec448da9b3716204eb34b0cf41 ]
    
    gcc 11.x reports the following compiler warning/error.
    
      drivers/net/ethernet/i825xx/82596.c: In function 'i82596_probe':
      arch/m68k/include/asm/string.h:72:25: error:
            '__builtin_memcpy' reading 6 bytes from a region of size 0 [-Werror=stringop-overread]
    
    Use absolute_pointer() to work around the problem.
    
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb136917b02222aaa6d608bf8fca80638c6ed2bf
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Tue Sep 14 20:52:24 2021 -0700

    compiler.h: Introduce absolute_pointer macro
    
    [ Upstream commit f6b5f1a56987de837f8e25cd560847106b8632a8 ]
    
    absolute_pointer() disassociates a pointer from its originating symbol
    type and context. Use it to prevent compiler warnings/errors such as
    
      drivers/net/ethernet/i825xx/82596.c: In function 'i82596_probe':
      arch/m68k/include/asm/string.h:72:25: error:
            '__builtin_memcpy' reading 6 bytes from a region of size 0 [-Werror=stringop-overread]
    
    Such warnings may be reported by gcc 11.x for string and memory
    operations on fixed addresses.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7c2c69e010431b0157c9454adcdd2305809bf9fb
Author: Li Jinlin <lijinlin3@huawei.com>
Date:   Tue Sep 14 12:26:05 2021 +0800

    blk-cgroup: fix UAF by grabbing blkcg lock before destroying blkg pd
    
    [ Upstream commit 858560b27645e7e97aca37ee8f232cccd658fbd2 ]
    
    KASAN reports a use-after-free report when doing fuzz test:
    
    [693354.104835] ==================================================================
    [693354.105094] BUG: KASAN: use-after-free in bfq_io_set_weight_legacy+0xd3/0x160
    [693354.105336] Read of size 4 at addr ffff888be0a35664 by task sh/1453338
    
    [693354.105607] CPU: 41 PID: 1453338 Comm: sh Kdump: loaded Not tainted 4.18.0-147
    [693354.105610] Hardware name: Huawei 2288H V5/BC11SPSCB0, BIOS 0.81 07/02/2018
    [693354.105612] Call Trace:
    [693354.105621]  dump_stack+0xf1/0x19b
    [693354.105626]  ? show_regs_print_info+0x5/0x5
    [693354.105634]  ? printk+0x9c/0xc3
    [693354.105638]  ? cpumask_weight+0x1f/0x1f
    [693354.105648]  print_address_description+0x70/0x360
    [693354.105654]  kasan_report+0x1b2/0x330
    [693354.105659]  ? bfq_io_set_weight_legacy+0xd3/0x160
    [693354.105665]  ? bfq_io_set_weight_legacy+0xd3/0x160
    [693354.105670]  bfq_io_set_weight_legacy+0xd3/0x160
    [693354.105675]  ? bfq_cpd_init+0x20/0x20
    [693354.105683]  cgroup_file_write+0x3aa/0x510
    [693354.105693]  ? ___slab_alloc+0x507/0x540
    [693354.105698]  ? cgroup_file_poll+0x60/0x60
    [693354.105702]  ? 0xffffffff89600000
    [693354.105708]  ? usercopy_abort+0x90/0x90
    [693354.105716]  ? mutex_lock+0xef/0x180
    [693354.105726]  kernfs_fop_write+0x1ab/0x280
    [693354.105732]  ? cgroup_file_poll+0x60/0x60
    [693354.105738]  vfs_write+0xe7/0x230
    [693354.105744]  ksys_write+0xb0/0x140
    [693354.105749]  ? __ia32_sys_read+0x50/0x50
    [693354.105760]  do_syscall_64+0x112/0x370
    [693354.105766]  ? syscall_return_slowpath+0x260/0x260
    [693354.105772]  ? do_page_fault+0x9b/0x270
    [693354.105779]  ? prepare_exit_to_usermode+0xf9/0x1a0
    [693354.105784]  ? enter_from_user_mode+0x30/0x30
    [693354.105793]  entry_SYSCALL_64_after_hwframe+0x65/0xca
    
    [693354.105875] Allocated by task 1453337:
    [693354.106001]  kasan_kmalloc+0xa0/0xd0
    [693354.106006]  kmem_cache_alloc_node_trace+0x108/0x220
    [693354.106010]  bfq_pd_alloc+0x96/0x120
    [693354.106015]  blkcg_activate_policy+0x1b7/0x2b0
    [693354.106020]  bfq_create_group_hierarchy+0x1e/0x80
    [693354.106026]  bfq_init_queue+0x678/0x8c0
    [693354.106031]  blk_mq_init_sched+0x1f8/0x460
    [693354.106037]  elevator_switch_mq+0xe1/0x240
    [693354.106041]  elevator_switch+0x25/0x40
    [693354.106045]  elv_iosched_store+0x1a1/0x230
    [693354.106049]  queue_attr_store+0x78/0xb0
    [693354.106053]  kernfs_fop_write+0x1ab/0x280
    [693354.106056]  vfs_write+0xe7/0x230
    [693354.106060]  ksys_write+0xb0/0x140
    [693354.106064]  do_syscall_64+0x112/0x370
    [693354.106069]  entry_SYSCALL_64_after_hwframe+0x65/0xca
    
    [693354.106114] Freed by task 1453336:
    [693354.106225]  __kasan_slab_free+0x130/0x180
    [693354.106229]  kfree+0x90/0x1b0
    [693354.106233]  blkcg_deactivate_policy+0x12c/0x220
    [693354.106238]  bfq_exit_queue+0xf5/0x110
    [693354.106241]  blk_mq_exit_sched+0x104/0x130
    [693354.106245]  __elevator_exit+0x45/0x60
    [693354.106249]  elevator_switch_mq+0xd6/0x240
    [693354.106253]  elevator_switch+0x25/0x40
    [693354.106257]  elv_iosched_store+0x1a1/0x230
    [693354.106261]  queue_attr_store+0x78/0xb0
    [693354.106264]  kernfs_fop_write+0x1ab/0x280
    [693354.106268]  vfs_write+0xe7/0x230
    [693354.106271]  ksys_write+0xb0/0x140
    [693354.106275]  do_syscall_64+0x112/0x370
    [693354.106280]  entry_SYSCALL_64_after_hwframe+0x65/0xca
    
    [693354.106329] The buggy address belongs to the object at ffff888be0a35580
                     which belongs to the cache kmalloc-1k of size 1024
    [693354.106736] The buggy address is located 228 bytes inside of
                     1024-byte region [ffff888be0a35580, ffff888be0a35980)
    [693354.107114] The buggy address belongs to the page:
    [693354.107273] page:ffffea002f828c00 count:1 mapcount:0 mapping:ffff888107c17080 index:0x0 compound_mapcount: 0
    [693354.107606] flags: 0x17ffffc0008100(slab|head)
    [693354.107760] raw: 0017ffffc0008100 ffffea002fcbc808 ffffea0030bd3a08 ffff888107c17080
    [693354.108020] raw: 0000000000000000 00000000001c001c 00000001ffffffff 0000000000000000
    [693354.108278] page dumped because: kasan: bad access detected
    
    [693354.108511] Memory state around the buggy address:
    [693354.108671]  ffff888be0a35500: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [693354.116396]  ffff888be0a35580: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [693354.124473] >ffff888be0a35600: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [693354.132421]                                                        ^
    [693354.140284]  ffff888be0a35680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [693354.147912]  ffff888be0a35700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [693354.155281] ==================================================================
    
    blkgs are protected by both queue and blkcg locks and holding
    either should stabilize them. However, the path of destroying
    blkg policy data is only protected by queue lock in
    blkcg_activate_policy()/blkcg_deactivate_policy(). Other tasks
    can get the blkg policy data before the blkg policy data is
    destroyed, and use it after destroyed, which will result in a
    use-after-free.
    
    CPU0                             CPU1
    blkcg_deactivate_policy
      spin_lock_irq(&q->queue_lock)
                                     bfq_io_set_weight_legacy
                                       spin_lock_irq(&blkcg->lock)
                                       blkg_to_bfqg(blkg)
                                         pd_to_bfqg(blkg->pd[pol->plid])
                                         ^^^^^^blkg->pd[pol->plid] != NULL
                                               bfqg != NULL
      pol->pd_free_fn(blkg->pd[pol->plid])
        pd_to_bfqg(blkg->pd[pol->plid])
        bfqg_put(bfqg)
          kfree(bfqg)
      blkg->pd[pol->plid] = NULL
      spin_unlock_irq(q->queue_lock);
                                       bfq_group_set_weight(bfqg, val, 0)
                                         bfqg->entity.new_weight
                                         ^^^^^^trigger uaf here
                                       spin_unlock_irq(&blkcg->lock);
    
    Fix by grabbing the matching blkcg lock before trying to
    destroy blkg policy data.
    
    Suggested-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Li Jinlin <lijinlin3@huawei.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Link: https://lore.kernel.org/r/20210914042605.3260596-1-lijinlin3@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5067abc52ef334483e779701923cd024466a709
Author: Lihong Kou <koulihong@huawei.com>
Date:   Tue Sep 14 09:06:56 2021 +0200

    block: flush the integrity workqueue in blk_integrity_unregister
    
    [ Upstream commit 3df49967f6f1d2121b0c27c381ca1c8386b1dab9 ]
    
    When the integrity profile is unregistered there can still be integrity
    reads queued up which could see a NULL verify_fn as shown by the race
    window below:
    
    CPU0                                    CPU1
      process_one_work                      nvme_validate_ns
        bio_integrity_verify_fn                nvme_update_ns_info
                                                 nvme_update_disk_info
                                                   blk_integrity_unregister
                                                   ---set queue->integrity as 0
            bio_integrity_process
            --access bi->profile->verify_fn(bi is a pointer of queue->integity)
    
    Before calling blk_integrity_unregister in nvme_update_disk_info, we must
    make sure that there is no work item in the kintegrityd_wq. Just call
    blk_flush_integrity to flush the work queue so the bug can be resolved.
    
    Signed-off-by: Lihong Kou <koulihong@huawei.com>
    [hch: split up and shortened the changelog]
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Link: https://lore.kernel.org/r/20210914070657.87677-3-hch@lst.de
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 282aed19c590e71963d80ac441dc854d35464759
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Sep 14 09:06:55 2021 +0200

    block: check if a profile is actually registered in blk_integrity_unregister
    
    [ Upstream commit 783a40a1b3ac7f3714d2776fa8ac8cce3535e4f6 ]
    
    While clearing the profile itself is harmless, we really should not clear
    the stable writes flag if it wasn't set due to a registered integrity
    profile.
    
    Reported-by: Lihong Kou <koulihong@huawei.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Link: https://lore.kernel.org/r/20210914070657.87677-2-hch@lst.de
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7f8b507fe58e57ca827e012d3deaade901f844d
Author: Huang Rui <ray.huang@amd.com>
Date:   Tue Sep 7 18:03:02 2021 +0800

    drm/ttm: fix type mismatch error on sparc64
    
    [ Upstream commit 3ca706c189db861b2ca2019a0901b94050ca49d8 ]
    
    On sparc64, __fls() returns an "int", but the drm TTM code expected it
    to be "unsigned long" as on x86.  As a result, on sparc (and arc, and
    m68k) you get build errors because 'min()' checks that the types match.
    
    As suggested by Linus, it can use min_t instead of min to force the type
    to be "unsigned int".
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Huang Rui <ray.huang@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Cc: Alex Deucher <alexdeucher@gmail.com>
    Cc: David Airlie <airlied@linux.ie>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b60676ac850ab3b2487e9fd2cf4f634fef71be6
Author: Simon Ser <contact@emersion.fr>
Date:   Tue Sep 7 14:19:34 2021 +0000

    amd/display: downgrade validation failure log level
    
    [ Upstream commit 7bbee36d71502ab9a341505da89a017c7ae2e6b2 ]
    
    In amdgpu_dm_atomic_check, dc_validate_global_state is called. On
    failure this logs a warning to the kernel journal. However warnings
    shouldn't be used for atomic test-only commit failures: user-space
    might be perfoming a lot of atomic test-only commits to find the
    best hardware configuration.
    
    Downgrade the log to a regular DRM atomic message. While at it, use
    the new device-aware logging infrastructure.
    
    This fixes error messages in the kernel when running gamescope [1].
    
    [1]: https://github.com/Plagman/gamescope/issues/245
    
    Reviewed-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Signed-off-by: Simon Ser <contact@emersion.fr>
    Cc: Alex Deucher <alexander.deucher@amd.com>
    Cc: Harry Wentland <hwentlan@amd.com>
    Cc: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5780971d7dbdc33ee99b9cb71a6aef7305f425a6
Author: Andreas Larsson <andreas@gaisler.com>
Date:   Wed Sep 8 09:48:22 2021 +0200

    sparc32: page align size in arch_dma_alloc
    
    [ Upstream commit 59583f747664046aaae5588d56d5954fab66cce8 ]
    
    Commit 53b7670e5735 ("sparc: factor the dma coherent mapping into
    helper") lost the page align for the calls to dma_make_coherent and
    srmmu_unmapiorange. The latter cannot handle a non page aligned len
    argument.
    
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d268a182c56e8361e19fb781137411643312b994
Author: Ruozhu Li <liruozhu@huawei.com>
Date:   Mon Sep 6 11:51:34 2021 +0800

    nvme-rdma: destroy cm id before destroy qp to avoid use after free
    
    [ Upstream commit 9817d763dbe15327b9b3ff4404fa6f27f927e744 ]
    
    We should always destroy cm_id before destroy qp to avoid to get cma
    event after qp was destroyed, which may lead to use after free.
    In RDMA connection establishment error flow, don't destroy qp in cm
    event handler.Just report cm_error to upper level, qp will be destroy
    in nvme_rdma_alloc_queue() after destroy cm id.
    
    Signed-off-by: Ruozhu Li <liruozhu@huawei.com>
    Reviewed-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0b9644a49037bd58fcadfecb38043d152c7cbf1
Author: Anton Eidelman <anton.eidelman@gmail.com>
Date:   Sun Sep 12 12:54:57 2021 -0600

    nvme-multipath: fix ANA state updates when a namespace is not present
    
    [ Upstream commit 79f528afa93918519574773ea49a444c104bc1bd ]
    
    nvme_update_ana_state() has a deficiency that results in a failure to
    properly update the ana state for a namespace in the following case:
    
      NSIDs in ctrl->namespaces:    1, 3,    4
      NSIDs in desc->nsids:         1, 2, 3, 4
    
    Loop iteration 0:
        ns index = 0, n = 0, ns->head->ns_id = 1, nsid = 1, MATCH.
    Loop iteration 1:
        ns index = 1, n = 1, ns->head->ns_id = 3, nsid = 2, NO MATCH.
    Loop iteration 2:
        ns index = 2, n = 2, ns->head->ns_id = 4, nsid = 4, MATCH.
    
    Where the update to the ANA state of NSID 3 is missed.  To fix this
    increment n and retry the update with the same ns when ns->head->ns_id is
    higher than nsid,
    
    Signed-off-by: Anton Eidelman <anton@lightbitslabs.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 922fd5b6bb13ad31ff36e86e2eba2f26d8135272
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Aug 27 14:32:06 2021 +0200

    xen/balloon: use a kernel thread instead a workqueue
    
    [ Upstream commit 8480ed9c2bbd56fc86524998e5f2e3e22f5038f6 ]
    
    Today the Xen ballooning is done via delayed work in a workqueue. This
    might result in workqueue hangups being reported in case of large
    amounts of memory are being ballooned in one go (here 16GB):
    
    BUG: workqueue lockup - pool cpus=6 node=0 flags=0x0 nice=0 stuck for 64s!
    Showing busy workqueues and worker pools:
    workqueue events: flags=0x0
      pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=2/256 refcnt=3
        in-flight: 229:balloon_process
        pending: cache_reap
    workqueue events_freezable_power_: flags=0x84
      pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=1/256 refcnt=2
        pending: disk_events_workfn
    workqueue mm_percpu_wq: flags=0x8
      pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=1/256 refcnt=2
        pending: vmstat_update
    pool 12: cpus=6 node=0 flags=0x0 nice=0 hung=64s workers=3 idle: 2222 43
    
    This can easily be avoided by using a dedicated kernel thread for doing
    the ballooning work.
    
    Reported-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20210827123206.15429-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5fe7cdfee5901ce5513c30e554d51536e003bde
Author: Bixuan Cui <cuibixuan@huawei.com>
Date:   Sat Sep 11 08:55:57 2021 +0800

    bpf: Add oversize check before call kvcalloc()
    
    [ Upstream commit 0e6491b559704da720f6da09dd0a52c4df44c514 ]
    
    Commit 7661809d493b ("mm: don't allow oversized kvmalloc() calls") add the
    oversize check. When the allocation is larger than what kmalloc() supports,
    the following warning triggered:
    
    WARNING: CPU: 0 PID: 8408 at mm/util.c:597 kvmalloc_node+0x108/0x110 mm/util.c:597
    Modules linked in:
    CPU: 0 PID: 8408 Comm: syz-executor221 Not tainted 5.14.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:kvmalloc_node+0x108/0x110 mm/util.c:597
    Call Trace:
     kvmalloc include/linux/mm.h:806 [inline]
     kvmalloc_array include/linux/mm.h:824 [inline]
     kvcalloc include/linux/mm.h:829 [inline]
     check_btf_line kernel/bpf/verifier.c:9925 [inline]
     check_btf_info kernel/bpf/verifier.c:10049 [inline]
     bpf_check+0xd634/0x150d0 kernel/bpf/verifier.c:13759
     bpf_prog_load kernel/bpf/syscall.c:2301 [inline]
     __sys_bpf+0x11181/0x126e0 kernel/bpf/syscall.c:4587
     __do_sys_bpf kernel/bpf/syscall.c:4691 [inline]
     __se_sys_bpf kernel/bpf/syscall.c:4689 [inline]
     __x64_sys_bpf+0x78/0x90 kernel/bpf/syscall.c:4689
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Reported-by: syzbot+f3e749d4c662818ae439@syzkaller.appspotmail.com
    Signed-off-by: Bixuan Cui <cuibixuan@huawei.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20210911005557.45518-1-cuibixuan@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ded7d5c44d8aec2546f2f2996aad2f56488ef8d5
Author: Doug Smythies <doug.smythies@gmail.com>
Date:   Sun Sep 12 11:50:29 2021 -0700

    cpufreq: intel_pstate: Override parameters if HWP forced by BIOS
    
    [ Upstream commit d9a7e9df731670acdc69e81748941ad338f47fab ]
    
    If HWP has been already been enabled by BIOS, it may be
    necessary to override some kernel command line parameters.
    Once it has been enabled it requires a reset to be disabled.
    
    Suggested-by: Rafael J. Wysocki <rafael@kernel.org>
    Signed-off-by: Doug Smythies <dsmythies@telus.net>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de4afec2d2946c92c62a15ab341c70b287289e6a
Author: Hamza Mahfooz <someguy@effective-light.com>
Date:   Fri Sep 10 19:53:37 2021 -0400

    dma-debug: prevent an error message from causing runtime problems
    
    [ Upstream commit 510e1a724ab1bf38150be2c1acabb303f98d0047 ]
    
    For some drivers, that use the DMA API. This error message can be reached
    several millions of times per second, causing spam to the kernel's printk
    buffer and bringing the CPU usage up to 100% (so, it should be rate
    limited). However, since there is at least one driver that is in the
    mainline and suffers from the error condition, it is more useful to
    err_printk() here instead of just rate limiting the error message (in hopes
    that it will make it easier for other drivers that suffer from this issue
    to be spotted).
    
    Link: https://lkml.kernel.org/r/fd67fbac-64bf-f0ea-01e1-5938ccfab9d0@arm.com
    Reported-by: Jeremy Linton <jeremy.linton@arm.com>
    Signed-off-by: Hamza Mahfooz <someguy@effective-light.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a23ae2c6a605cbd2a0ef65dad6d6ab08233b770
Author: zhang kai <zhangkaiheb@126.com>
Date:   Thu Sep 9 16:39:18 2021 +0800

    ipv6: delay fib6_sernum increase in fib6_add
    
    [ Upstream commit e87b5052271e39d62337ade531992b7e5d8c2cfa ]
    
    only increase fib6_sernum in net namespace after add fib6_info
    successfully.
    
    Signed-off-by: zhang kai <zhangkaiheb@126.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88ad6f3803ca9e3618c1576c4478bfd7edd6d4a7
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Mon Sep 6 23:07:29 2021 -0700

    m68k: Double cast io functions to unsigned long
    
    [ Upstream commit b1a89856fbf63fffde6a4771d8f1ac21df549e50 ]
    
    m68k builds fail widely with errors such as
    
    arch/m68k/include/asm/raw_io.h:20:19: error:
            cast to pointer from integer of different size
    arch/m68k/include/asm/raw_io.h:30:32: error:
            cast to pointer from integer of different size [-Werror=int-to-p
    
    On m68k, io functions are defined as macros. The problem is seen if the
    macro parameter variable size differs from the size of a pointer. Cast
    the parameter of all io macros to unsigned long before casting it to
    a pointer to fix the problem.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20210907060729.2391992-1-linux@roeck-us.net
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5cee359945e06be1d46416b46141f4a8e9c69413
Author: Ming Lei <ming.lei@redhat.com>
Date:   Mon Sep 6 14:50:03 2021 +0800

    blk-mq: avoid to iterate over stale request
    
    [ Upstream commit 67f3b2f822b7e71cfc9b42dbd9f3144fa2933e0b ]
    
    blk-mq can't run allocating driver tag and updating ->rqs[tag]
    atomically, meantime blk-mq doesn't clear ->rqs[tag] after the driver
    tag is released.
    
    So there is chance to iterating over one stale request just after the
    tag is allocated and before updating ->rqs[tag].
    
    scsi_host_busy_iter() calls scsi_host_check_in_flight() to count scsi
    in-flight requests after scsi host is blocked, so no new scsi command can
    be marked as SCMD_STATE_INFLIGHT. However, driver tag allocation still can
    be run by blk-mq core. One request is marked as SCMD_STATE_INFLIGHT,
    but this request may have been kept in another slot of ->rqs[], meantime
    the slot can be allocated out but ->rqs[] isn't updated yet. Then this
    in-flight request is counted twice as SCMD_STATE_INFLIGHT. This way causes
    trouble in handling scsi error.
    
    Fixes the issue by not iterating over stale request.
    
    Cc: linux-scsi@vger.kernel.org
    Cc: "Martin K. Petersen" <martin.petersen@oracle.com>
    Reported-by: luojiaxing <luojiaxing@huawei.com>
    Signed-off-by: Ming Lei <ming.lei@redhat.com>
    Link: https://lore.kernel.org/r/20210906065003.439019-1-ming.lei@redhat.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cde9ad77f20bac6d60984587cf2ad19c6a7cf435
Author: Jesper Nilsson <jesper.nilsson@axis.com>
Date:   Fri Sep 10 21:55:34 2021 +0200

    net: stmmac: allow CSR clock of 300MHz
    
    [ Upstream commit 08dad2f4d541fcfe5e7bfda72cc6314bbfd2802f ]
    
    The Synopsys Ethernet IP uses the CSR clock as a base clock for MDC.
    The divisor used is set in the MAC_MDIO_Address register field CR
    (Clock Rate)
    
    The divisor is there to change the CSR clock into a clock that falls
    below the IEEE 802.3 specified max frequency of 2.5MHz.
    
    If the CSR clock is 300MHz, the code falls back to using the reset
    value in the MAC_MDIO_Address register, as described in the comment
    above this code.
    
    However, 300MHz is actually an allowed value and the proper divider
    can be estimated quite easily (it's just 1Hz difference!)
    
    A CSR frequency of 300MHz with the maximum clock rate value of 0x5
    (STMMAC_CSR_250_300M, a divisor of 124) gives somewhere around
    ~2.42MHz which is below the IEEE 802.3 specified maximum.
    
    For the ARTPEC-8 SoC, the CSR clock is this problematic 300MHz,
    and unfortunately, the reset-value of the MAC_MDIO_Address CR field
    is 0x0.
    
    This leads to a clock rate of zero and a divisor of 42, and gives an
    MDC frequency of ~7.14MHz.
    
    Allow CSR clock of 300MHz by making the comparison inclusive.
    
    Signed-off-by: Jesper Nilsson <jesper.nilsson@axis.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ad6f2d23b0f6ac0d3e5f3102a4256d1c86c90f5
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Wed Sep 8 12:02:32 2021 -0700

    net: macb: fix use after free on rmmod
    
    [ Upstream commit d82d5303c4c539db86588ffb5dc5b26c3f1513e8 ]
    
    plat_dev->dev->platform_data is released by platform_device_unregister(),
    use of pclk and hclk is a use-after-free. Since device unregister won't
    need a clk device we adjust the function call sequence to fix this issue.
    
    [   31.261225] BUG: KASAN: use-after-free in macb_remove+0x77/0xc6 [macb_pci]
    [   31.275563] Freed by task 306:
    [   30.276782]  platform_device_release+0x25/0x80
    
    Suggested-by: Nicolas Ferre <Nicolas.Ferre@microchip.com>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7646fadde06b256f0c180185c932415bf5afb2f
Author: Nathan Rossi <nathan.rossi@digi.com>
Date:   Thu Sep 2 05:14:49 2021 +0000

    net: phylink: Update SFP selected interface on advertising changes
    
    [ Upstream commit ea269a6f720782ed94171fb962b14ce07c372138 ]
    
    Currently changes to the advertising state via ethtool do not cause any
    reselection of the configured interface mode after the SFP is already
    inserted and initially configured.
    
    While it is not typical to change the advertised link modes for an
    interface using an SFP in certain use cases it is desirable. In the case
    of a SFP port that is capable of handling both SFP and SFP+ modules it
    will automatically select between 1G and 10G modes depending on the
    supported mode of the SFP. However if the SFP module is capable of
    working in multiple modes (e.g. a SFP+ DAC that can operate at 1G or
    10G), one end of the cable may be attached to a SFP 1000base-x port thus
    the SFP+ end must be manually configured to the 1000base-x mode in order
    for the link to be established.
    
    This change causes the ethtool setting of advertised mode changes to
    reselect the interface mode so that the link can be established.
    Additionally when a module is inserted the advertising mode is reset to
    match the supported modes of the module.
    
    Signed-off-by: Nathan Rossi <nathan.rossi@digi.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5f8e86192612d0183047448d8bbe7918b3f1a26
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Thu Sep 23 21:49:21 2021 +0800

    blktrace: Fix uaf in blk_trace access after removing by sysfs
    
    [ Upstream commit 5afedf670caf30a2b5a52da96eb7eac7dee6a9c9 ]
    
    There is an use-after-free problem triggered by following process:
    
          P1(sda)                           P2(sdb)
                            echo 0 > /sys/block/sdb/trace/enable
                              blk_trace_remove_queue
                                synchronize_rcu
                                blk_trace_free
                                  relay_close
    rcu_read_lock
    __blk_add_trace
      trace_note_tsk
      (Iterate running_trace_list)
                                    relay_close_buf
                                      relay_destroy_buf
                                        kfree(buf)
        trace_note(sdb's bt)
          relay_reserve
            buf->offset <- nullptr deference (use-after-free) !!!
    rcu_read_unlock
    
    [  502.714379] BUG: kernel NULL pointer dereference, address:
    0000000000000010
    [  502.715260] #PF: supervisor read access in kernel mode
    [  502.715903] #PF: error_code(0x0000) - not-present page
    [  502.716546] PGD 103984067 P4D 103984067 PUD 17592b067 PMD 0
    [  502.717252] Oops: 0000 [#1] SMP
    [  502.720308] RIP: 0010:trace_note.isra.0+0x86/0x360
    [  502.732872] Call Trace:
    [  502.733193]  __blk_add_trace.cold+0x137/0x1a3
    [  502.733734]  blk_add_trace_rq+0x7b/0xd0
    [  502.734207]  blk_add_trace_rq_issue+0x54/0xa0
    [  502.734755]  blk_mq_start_request+0xde/0x1b0
    [  502.735287]  scsi_queue_rq+0x528/0x1140
    ...
    [  502.742704]  sg_new_write.isra.0+0x16e/0x3e0
    [  502.747501]  sg_ioctl+0x466/0x1100
    
    Reproduce method:
      ioctl(/dev/sda, BLKTRACESETUP, blk_user_trace_setup[buf_size=127])
      ioctl(/dev/sda, BLKTRACESTART)
      ioctl(/dev/sdb, BLKTRACESETUP, blk_user_trace_setup[buf_size=127])
      ioctl(/dev/sdb, BLKTRACESTART)
    
      echo 0 > /sys/block/sdb/trace/enable &
      // Add delay(mdelay/msleep) before kernel enters blk_trace_free()
    
      ioctl$SG_IO(/dev/sda, SG_IO, ...)
      // Enters trace_note_tsk() after blk_trace_free() returned
      // Use mdelay in rcu region rather than msleep(which may schedule out)
    
    Remove blk_trace from running_list before calling blk_trace_free() by
    sysfs if blk_trace is at Blktrace_running state.
    
    Fixes: c71a896154119f ("blktrace: add ftrace plugin")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Link: https://lore.kernel.org/r/20210923134921.109194-1-chengzhihao1@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f6caa538735189fc29aea69d21ae13a042a35b0
Author: Jens Axboe <axboe@kernel.dk>
Date:   Fri Sep 24 08:43:54 2021 -0600

    io_uring: don't punt files update to io-wq unconditionally
    
    [ Upstream commit cdb31c29d397a8076d81fd1458d091c647ef94ba ]
    
    There's no reason to punt it unconditionally, we just need to ensure that
    the submit lock grabbing is conditional.
    
    Fixes: 05f3fb3c5397 ("io_uring: avoid ring quiesce for fixed file set unregister and update")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05ac8e4c8aec533a276d92d4246b8bad19529831
Author: Jens Axboe <axboe@kernel.dk>
Date:   Fri Sep 24 07:39:08 2021 -0600

    io_uring: put provided buffer meta data under memcg accounting
    
    [ Upstream commit 9990da93d2bf9892c2c14c958bef050d4e461a1a ]
    
    For each provided buffer, we allocate a struct io_buffer to hold the
    data associated with it. As a large number of buffers can be provided,
    account that data with memcg.
    
    Fixes: ddf0322db79c ("io_uring: add IORING_OP_PROVIDE_BUFFERS")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24d38dcce407cc6c2e76efd127a27db89cf26203
Author: Hao Xu <haoxu@linux.alibaba.com>
Date:   Wed Sep 22 18:12:37 2021 +0800

    io_uring: fix missing set of EPOLLONESHOT for CQ ring overflow
    
    [ Upstream commit a62682f92eedb41c1cd8290fa875a4b85624fb9a ]
    
    We should set EPOLLONESHOT if cqring_fill_event() returns false since
    io_poll_add() decides to put req or not by it.
    
    Fixes: 5082620fb2ca ("io_uring: terminate multishot poll for CQ ring overflow")
    Signed-off-by: Hao Xu <haoxu@linux.alibaba.com>
    Link: https://lore.kernel.org/r/20210922101238.7177-3-haoxu@linux.alibaba.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e81f12cc00ccf63ed6b1d7a993d6befe65a1783
Author: Hao Xu <haoxu@linux.alibaba.com>
Date:   Wed Sep 22 18:12:36 2021 +0800

    io_uring: fix race between poll completion and cancel_hash insertion
    
    [ Upstream commit bd99c71bd14072ce2920f6d0c2fe43df072c653c ]
    
    If poll arming and poll completion runs in parallel, there maybe races.
    For instance, run io_poll_add in iowq and io_poll_task_func in original
    context, then:
    
      iowq                                      original context
      io_poll_add
        vfs_poll
         (interruption happens
          tw queued to original
          context)                              io_poll_task_func
                                                  generate cqe
                                                  del from cancel_hash[]
        if !poll.done
          insert to cancel_hash[]
    
    The entry left in cancel_hash[], similar case for fast poll.
    Fix it by set poll.done = true when del from cancel_hash[].
    
    Fixes: 5082620fb2ca ("io_uring: terminate multishot poll for CQ ring overflow")
    Signed-off-by: Hao Xu <haoxu@linux.alibaba.com>
    Link: https://lore.kernel.org/r/20210922101238.7177-2-haoxu@linux.alibaba.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6724710fd8d416d0c005fceb2f78c74249a9044d
Author: Kees Cook <keescook@chromium.org>
Date:   Fri Sep 10 15:33:32 2021 -0700

    x86/asm: Fix SETZ size enqcmds() build failure
    
    [ Upstream commit d81ff5fe14a950f53e2833cfa196e7bb3fd5d4e3 ]
    
    When building under GCC 4.9 and 5.5:
    
      arch/x86/include/asm/special_insns.h: Assembler messages:
      arch/x86/include/asm/special_insns.h:286: Error: operand size mismatch for `setz'
    
    Change the type to "bool" for condition code arguments, as documented.
    
    Fixes: 7f5933f81bd8 ("x86/asm: Add an enqcmds() wrapper for the ENQCMDS instruction")
    Co-developed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/20210910223332.3224851-1-keescook@chromium.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a46d5e3603bdc8e36b518a67cf9073a107906b68
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Sep 1 13:38:29 2021 +0200

    md: fix a lock order reversal in md_alloc
    
    [ Upstream commit 7df835a32a8bedf7ce88efcfa7c9b245b52ff139 ]
    
    Commit b0140891a8cea3 ("md: Fix race when creating a new md device.")
    not only moved assigning mddev->gendisk before calling add_disk, which
    fixes the races described in the commit log, but also added a
    mddev->open_mutex critical section over add_disk and creation of the
    md kobj.  Adding a kobject after add_disk is racy vs deleting the gendisk
    right after adding it, but md already prevents against that by holding
    a mddev->active reference.
    
    On the other hand taking this lock added a lock order reversal with what
    is not disk->open_mutex (used to be bdev->bd_mutex when the commit was
    added) for partition devices, which need that lock for the internal open
    for the partition scan, and a recent commit also takes it for
    non-partitioned devices, leading to further lockdep splatter.
    
    Fixes: b0140891a8ce ("md: Fix race when creating a new md device.")
    Fixes: d62633873590 ("block: support delayed holder registration")
    Reported-by: syzbot+fadc0aaf497e6a493b9f@syzkaller.appspotmail.com
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Tested-by: syzbot+fadc0aaf497e6a493b9f@syzkaller.appspotmail.com
    Reviewed-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e0c1c2e5da19685a20557a50f10c6aa4fa26aa84
Author: Kaige Fu <kaige.fu@linux.alibaba.com>
Date:   Wed Sep 15 10:20:55 2021 +0800

    irqchip/gic-v3-its: Fix potential VPE leak on error
    
    [ Upstream commit 280bef512933b2dda01d681d8cbe499b98fc5bdd ]
    
    In its_vpe_irq_domain_alloc, when its_vpe_init() returns an error,
    there is an off-by-one in the number of VPEs to be freed.
    
    Fix it by simply passing the number of VPEs allocated, which is the
    index of the loop iterating over the VPEs.
    
    Fixes: 7d75bbb4bc1a ("irqchip/gic-v3-its: Add VPE irq domain allocation/teardown")
    Signed-off-by: Kaige Fu <kaige.fu@linux.alibaba.com>
    [maz: fixed commit message]
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/d9e36dee512e63670287ed9eff884a5d8d6d27f2.1631672311.git.kaige.fu@linux.alibaba.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5468867001051570dc3d7ac0fc975ad56d64e02f
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Sep 5 09:25:19 2021 -0700

    irqchip/goldfish-pic: Select GENERIC_IRQ_CHIP to fix build
    
    [ Upstream commit 969ac78db78c723a24e9410666b457cc1b0cb3c3 ]
    
    irq-goldfish-pic uses GENERIC_IRQ_CHIP interfaces so select that symbol
    to fix build errors.
    
    Fixes these build errors:
    
    mips-linux-ld: drivers/irqchip/irq-goldfish-pic.o: in function `goldfish_pic_of_init':
    irq-goldfish-pic.c:(.init.text+0xc0): undefined reference to `irq_alloc_generic_chip'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0xf4): undefined reference to `irq_gc_unmask_enable_reg'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0xf8): undefined reference to `irq_gc_unmask_enable_reg'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0x100): undefined reference to `irq_gc_mask_disable_reg'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0x104): undefined reference to `irq_gc_mask_disable_reg'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0x11c): undefined reference to `irq_setup_generic_chip'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0x168): undefined reference to `irq_remove_generic_chip'
    
    Fixes: 4235ff50cf98 ("irqchip/irq-goldfish-pic: Add Goldfish PIC driver")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Miodrag Dinic <miodrag.dinic@mips.com>
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Goran Ferenc <goran.ferenc@mips.com>
    Cc: Aleksandar Markovic <aleksandar.markovic@mips.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210905162519.21507-1-rdunlap@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 329cb72b32415d218c44ff883e6afac9c464bc59
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 16 16:23:31 2021 +0300

    scsi: lpfc: Use correct scnprintf() limit
    
    [ Upstream commit 6dacc371b77f473770ec646e220303a84fe96c11 ]
    
    The limit should be "PAGE_SIZE - len" instead of "PAGE_SIZE".  We're not
    going to hit the limit so this fix will not affect runtime.
    
    Link: https://lore.kernel.org/r/20210916132331.GE25094@kili
    Fixes: 5b9e70b22cc5 ("scsi: lpfc: raise sg count for nvme to use available sg resources")
    Reviewed-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f56250ae28af1a6a168f1f6ce2337ac4e8e68e0c
Author: Dmitry Bogdanov <d.bogdanov@yadro.com>
Date:   Wed Sep 15 18:32:39 2021 +0300

    scsi: qla2xxx: Restore initiator in dual mode
    
    [ Upstream commit 5f8579038842d77e6ce05e1df6bf9dd493b0e3ef ]
    
    In dual mode in case of disabling the target, the whole port goes offline
    and initiator is turned off too.
    
    Fix restoring initiator mode after disabling target in dual mode.
    
    Link: https://lore.kernel.org/r/20210915153239.8035-1-d.bogdanov@yadro.com
    Fixes: 0645cb8350cd ("scsi: qla2xxx: Add mode control for each physical port")
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Dmitry Bogdanov <d.bogdanov@yadro.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e607120e15b010864f5f756b0074050e7625e664
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Thu Sep 16 10:54:04 2021 -0700

    scsi: ufs: core: Unbreak the reset handler
    
    [ Upstream commit d04a968c33684b15d1206e23fc1119ce0f0587fb ]
    
    A command tag is passed as the second argument of the
    __ufshcd_transfer_req_compl() call in ufshcd_eh_device_reset_handler()
    instead of a bitmask. Fix this by passing a bitmask as argument instead of
    a command tag.
    
    Link: https://lore.kernel.org/r/20210916175408.2260084-1-bvanassche@acm.org
    Fixes: a45f937110fa ("scsi: ufs: Optimize host lock on transfer requests send/compl paths")
    Cc: Can Guo <cang@codeaurora.org>
    Reviewed-by: Avri Altman <avri.altman@wdc.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d65bff0093646c5c94285d8d6da57e9e1b089f9
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Jul 21 20:34:38 2021 -0700

    scsi: ufs: Retry aborted SCSI commands instead of completing these successfully
    
    [ Upstream commit 73dc3c4ac703c6fea4b40e8ed1ddd80564da3dea ]
    
    Neither SAM nor the UFS standard require that the UFS controller fills in
    the completion status of commands that have been aborted (LUN RESET aborts
    pending commands). Hence do not rely on the completion status provided by
    the UFS controller for aborted commands but instead ask the SCSI core to
    retry SCSI commands that have been aborted.
    
    Link: https://lore.kernel.org/r/20210722033439.26550-18-bvanassche@acm.org
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Stanley Chu <stanley.chu@mediatek.com>
    Cc: Can Guo <cang@codeaurora.org>
    Cc: Asutosh Das <asutoshd@codeaurora.org>
    Cc: Avri Altman <avri.altman@wdc.com>
    Reviewed-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4368d7a1aa0fec147974017fc0ac3d135f7c7bae
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Wed Jul 21 20:34:32 2021 -0700

    scsi: ufs: Revert "Utilize Transfer Request List Completion Notification Register"
    
    [ Upstream commit 1f522c5049016cfea4f9d131ae9089e6fdba3980 ]
    
    Using the UTRLCNR register involves two MMIO accesses in the hot path while
    using the doorbell register only involves a single MMIO access. Since MMIO
    accesses take time, do not use the UTRLCNR register. The spinlock
    contention on the SCSI host lock that is reintroduced by this commit will
    be addressed later.
    
    This reverts commit 6f7151729647e58ac7c522081255fd0c07b38105.
    
    Link: https://lore.kernel.org/r/20210722033439.26550-12-bvanassche@acm.org
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Stanley Chu <stanley.chu@mediatek.com>
    Cc: Can Guo <cang@codeaurora.org>
    Cc: Asutosh Das <asutoshd@codeaurora.org>
    Cc: Avri Altman <avri.altman@wdc.com>
    Tested-by: Bean Huo <beanhuo@micron.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1fc9119eda5b45060ce36b7091f8561525a5e08f
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Fri Sep 17 14:23:14 2021 -0700

    scsi: sd_zbc: Support disks with more than 2**32 logical blocks
    
    [ Upstream commit 1d479e6c9cb2b40abfb455863a4e9335db882e33 ]
    
    This patch addresses the following Coverity report about the zno *
    sdkp->zone_blocks expression:
    
    CID 1475514 (#1 of 1): Unintentional integer overflow (OVERFLOW_BEFORE_WIDEN)
    overflow_before_widen: Potentially overflowing expression zno *
    sdkp->zone_blocks with type unsigned int (32 bits, unsigned) is evaluated
    using 32-bit arithmetic, and then used in a context that expects an
    expression of type sector_t (64 bits, unsigned).
    
    Link: https://lore.kernel.org/r/20210917212314.2362324-1-bvanassche@acm.org
    Fixes: 5795eb443060 ("scsi: sd_zbc: emulate ZONE_APPEND commands")
    Cc: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Cc: Damien Le Moal <Damien.LeMoal@wdc.com>
    Cc: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 309c4b00c687c9acb0dd0af43447668d8efcd8cd
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Sep 21 23:33:35 2021 +0300

    cifs: fix a sign extension bug
    
    [ Upstream commit e946d3c887a9dc33aa82a349c6284f4a084163f4 ]
    
    The problem is the mismatched types between "ctx->total_len" which is
    an unsigned int, "rc" which is an int, and "ctx->rc" which is a
    ssize_t.  The code does:
    
            ctx->rc = (rc == 0) ? ctx->total_len : rc;
    
    We want "ctx->rc" to store the negative "rc" error code.  But what
    happens is that "rc" is type promoted to a high unsigned int and
    'ctx->rc" will store the high positive value instead of a negative
    value.
    
    The fix is to change "rc" from an int to a ssize_t.
    
    Fixes: c610c4b619e5 ("CIFS: Add asynchronous write support through kernel AIO")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5024c71988897b72be2cdacfb58c168f3e727e6
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 16 16:13:42 2021 +0300

    thermal/core: Potential buffer overflow in thermal_build_list_of_policies()
    
    [ Upstream commit 1bb30b20b49773369c299d4d6c65227201328663 ]
    
    After printing the list of thermal governors, then this function prints
    a newline character.  The problem is that "size" has not been updated
    after printing the last governor.  This means that it can write one
    character (the NUL terminator) beyond the end of the buffer.
    
    Get rid of the "size" variable and just use "PAGE_SIZE - count" directly.
    
    Fixes: 1b4f48494eb2 ("thermal: core: group functions related to governor handling")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210916131342.GB25094@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ed1e0252111b0616f8bb6fef0ee0f5345c534301
Author: Christoph Hellwig <hch@lst.de>
Date:   Tue Sep 14 08:38:20 2021 +0200

    nvme: keep ctrl->namespaces ordered
    
    [ Upstream commit 298ba0e3d4af539cc37f982d4c011a0f07fca48c ]
    
    Various places in the nvme code that rely on ctrl->namespace to be
    ordered.  Ensure that the namespae is inserted into the list at the
    right position from the start instead of sorting it after the fact.
    
    Fixes: 540c801c65eb ("NVMe: Implement namespace list scanning")
    Reported-by: Anton Eidelman <anton.eidelman@gmail.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Chaitanya Kulkarni <kch@nvidia.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08a14a654f4f549f7b5012e43d956b3eb17e7308
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Tue Sep 14 18:38:55 2021 +0300

    nvme-tcp: fix incorrect h2cdata pdu offset accounting
    
    [ Upstream commit e371af033c560b9dd1e861f8f0b503142bf0a06c ]
    
    When the controller sends us multiple r2t PDUs in a single
    request we need to account for it correctly as our send/recv
    context run concurrently (i.e. we get a new r2t with r2t_offset
    before we updated our iterator and req->data_sent marker). This
    can cause wrong offsets to be sent to the controller.
    
    To fix that, we will first know that this may happen only in
    the send sequence of the last page, hence we will take
    the r2t_offset to the h2c PDU data_offset, and in
    nvme_tcp_try_send_data loop, we make sure to increment
    the request markers also when we completed a PDU but
    we are expecting more r2t PDUs as we still did not send
    the entire data of the request.
    
    Fixes: 825619b09ad3 ("nvme-tcp: fix possible use-after-completion")
    Reported-by: Nowak, Lukasz <Lukasz.Nowak@Dell.com>
    Tested-by: Nowak, Lukasz <Lukasz.Nowak@Dell.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8cd1ae341b22a33b3ede8f47a21903f30de9a2a6
Author: Jiashuo Liang <liangjs@pku.edu.cn>
Date:   Fri Jul 30 11:01:52 2021 +0800

    x86/fault: Fix wrong signal when vsyscall fails with pkey
    
    [ Upstream commit d4ffd5df9d18031b6a53f934388726775b4452d3 ]
    
    The function __bad_area_nosemaphore() calls kernelmode_fixup_or_oops()
    with the parameter @signal being actually @pkey, which will send a
    signal numbered with the argument in @pkey.
    
    This bug can be triggered when the kernel fails to access user-given
    memory pages that are protected by a pkey, so it can go down the
    do_user_addr_fault() path and pass the !user_mode() check in
    __bad_area_nosemaphore().
    
    Most cases will simply run the kernel fixup code to make an -EFAULT. But
    when another condition current->thread.sig_on_uaccess_err is met, which
    is only used to emulate vsyscall, the kernel will generate the wrong
    signal.
    
    Add a new parameter @pkey to kernelmode_fixup_or_oops() to fix this.
    
     [ bp: Massage commit message, fix build error as reported by the 0day
       bot: https://lkml.kernel.org/r/202109202245.APvuT8BX-lkp@intel.com ]
    
    Fixes: 5042d40a264c ("x86/fault: Bypass no_context() for implicit kernel faults from usermode")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Jiashuo Liang <liangjs@pku.edu.cn>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
    Link: https://lkml.kernel.org/r/20210730030152.249106-1-liangjs@pku.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bfacc1de136d9f75e4ec10aebc900d443aa05efc
Author: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
Date:   Fri Aug 13 14:40:42 2021 +0800

    fpga: machxo2-spi: Fix missing error code in machxo2_write_complete()
    
    [ Upstream commit a1e4470823d99e75b596748086e120dea169ed3c ]
    
    The error code is missing in this code scenario, add the error code
    '-EINVAL' to the return value 'ret'.
    
    Eliminate the follow smatch warning:
    
    drivers/fpga/machxo2-spi.c:341 machxo2_write_complete()
      warn: missing error code 'ret'.
    
    [mdf@kernel.org: Reworded commit message]
    Fixes: 88fb3a002330 ("fpga: lattice machxo2: Add Lattice MachXO2 support")
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
    Signed-off-by: Moritz Fischer <mdf@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 674fd6adbfbf9c173d1377e09e34070a25b3c53e
Author: Tom Rix <trix@redhat.com>
Date:   Tue Aug 10 09:40:36 2021 -0700

    fpga: machxo2-spi: Return an error on failure
    
    [ Upstream commit 34331739e19fd6a293d488add28832ad49c9fc54 ]
    
    Earlier successes leave 'ret' in a non error state, so these errors are
    not reported. Set ret to -EINVAL before going to the error handler.
    
    This addresses two issues reported by smatch:
    drivers/fpga/machxo2-spi.c:229 machxo2_write_init()
      warn: missing error code 'ret'
    
    drivers/fpga/machxo2-spi.c:316 machxo2_write_complete()
      warn: missing error code 'ret'
    
    [mdf@kernel.org: Reworded commit message]
    Fixes: 88fb3a002330 ("fpga: lattice machxo2: Add Lattice MachXO2 support")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Moritz Fischer <mdf@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ee0fbc2a3c0d7b3f5f2b413d30c9b69f41889e7
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Sep 1 17:38:06 2021 -0700

    tty: synclink_gt: rename a conflicting function name
    
    [ Upstream commit 06e49073dfba24df4b1073a068631b13a0039c34 ]
    
    'set_signals()' in synclink_gt.c conflicts with an exported symbol
    in arch/um/, so change set_signals() to set_gtsignals(). Keep
    the function names similar by also changing get_signals() to
    get_gtsignals().
    
    ../drivers/tty/synclink_gt.c:442:13: error: conflicting types for ‘set_signals’
     static void set_signals(struct slgt_info *info);
                 ^~~~~~~~~~~
    In file included from ../include/linux/irqflags.h:16:0,
                     from ../include/linux/spinlock.h:58,
                     from ../include/linux/mm_types.h:9,
                     from ../include/linux/buildid.h:5,
                     from ../include/linux/module.h:14,
                     from ../drivers/tty/synclink_gt.c:46:
    ../arch/um/include/asm/irqflags.h:6:5: note: previous declaration of ‘set_signals’ was here
     int set_signals(int enable);
         ^~~~~~~~~~~
    
    Fixes: 705b6c7b34f2 ("[PATCH] new driver synclink_gt")
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Cc: Paul Fulghum <paulkf@microgate.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20210902003806.17054-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8cbf9ac9941fceb2a39e11a5702489b46fbb4aca
Author: Maurizio Lombardi <mlombard@redhat.com>
Date:   Mon Sep 6 17:18:09 2021 +0200

    scsi: target: Fix the pgr/alua_support_store functions
    
    [ Upstream commit ef7ae7f746e95c6fa4ec2bcfacb949c36263da78 ]
    
    Commit 356ba2a8bc8d ("scsi: target: tcmu: Make pgr_support and alua_support
    attributes writable") introduced support for changeable alua_support and
    pgr_support target attributes. These can only be changed if the backstore
    is user-backed, otherwise the kernel returns -EINVAL.
    
    This triggers a warning in the targetcli/rtslib code when performing a
    target restore that includes non-userbacked backstores:
    
      # targetctl restore
      Storage Object block/storage1: Cannot set attribute alua_support:
      [Errno 22] Invalid argument, skipped
      Storage Object block/storage1: Cannot set attribute pgr_support:
      [Errno 22] Invalid argument, skipped
    
    Fix this warning by returning an error code only if we are really going to
    flip the PGR/ALUA bit in the transport_flags field, otherwise we will do
    nothing and return success.
    
    Return ENOSYS instead of EINVAL if the pgr/alua attributes can not be
    changed, this way it will be possible for userspace to understand if the
    operation failed because an invalid value has been passed to strtobool() or
    because the attributes are fixed.
    
    Fixes: 356ba2a8bc8d ("scsi: target: tcmu: Make pgr_support and alua_support attributes writable")
    Link: https://lore.kernel.org/r/20210906151809.52811-1-mlombard@redhat.com
    Reviewed-by: Bodo Stroesser <bostroesser@gmail.com>
    Signed-off-by: Maurizio Lombardi <mlombard@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0c1b2c0d1c1e271788e91d9a50518c4d01d815d1
Author: Baokun Li <libaokun1@huawei.com>
Date:   Wed Sep 1 16:53:36 2021 +0800

    scsi: iscsi: Adjust iface sysfs attr detection
    
    [ Upstream commit 4e28550829258f7dab97383acaa477bd724c0ff4 ]
    
    ISCSI_NET_PARAM_IFACE_ENABLE belongs to enum iscsi_net_param instead of
    iscsi_iface_param so move it to ISCSI_NET_PARAM. Otherwise, when we call
    into the driver, we might not match and return that we don't want attr
    visible in sysfs. Found in code review.
    
    Link: https://lore.kernel.org/r/20210901085336.2264295-1-libaokun1@huawei.com
    Fixes: e746f3451ec7 ("scsi: iscsi: Fix iface sysfs attr detection")
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7da1781a6ad2ee21f9b22e86599cf4091de3c41
Author: Philip Yang <Philip.Yang@amd.com>
Date:   Tue Sep 14 16:33:40 2021 -0400

    drm/amdkfd: fix dma mapping leaking warning
    
    [ Upstream commit f63251184a81039ebc805306505838c2a073e51a ]
    
    For xnack off, restore work dma unmap previous system memory page, and
    dma map the updated system memory page to update GPU mapping, this is
    not dma mapping leaking, remove the WARN_ONCE for dma mapping leaking.
    
    prange->dma_addr store the VRAM page pfn after the range migrated to
    VRAM, should not dma unmap VRAM page when updating GPU mapping or
    remove prange. Add helper svm_is_valid_dma_mapping_addr to check VRAM
    page and error cases.
    
    Mask out SVM_RANGE_VRAM_DOMAIN flag in dma_addr before calling amdgpu vm
    update to avoid BUG_ON(*addr & 0xFFFF00000000003FULL), and set it again
    immediately after. This flag is used to know the type of page later to
    dma unmapping system memory page.
    
    Fixes: 1d5dbfe6c06a ("drm/amdkfd: classify and map mixed svm range pages in GPU")
    Signed-off-by: Philip Yang <Philip.Yang@amd.com>
    Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb8078d3a7784f2d6a25e4cd03f8857ef40b52d3
Author: Philip Yang <Philip.Yang@amd.com>
Date:   Wed Aug 18 09:34:53 2021 -0400

    drm/amdkfd: map SVM range with correct access permission
    
    [ Upstream commit 2f617f4df8dfef68f175160d533f5820a368023e ]
    
    Restore retry fault or prefetch range, or restore svm range after
    eviction to map range to GPU with correct read or write access
    permission.
    
    Range may includes multiple VMAs, update GPU page table with offset of
    prange, number of pages for each VMA according VMA access permission.
    
    Signed-off-by: Philip Yang <Philip.Yang@amd.com>
    Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80ec71bd37d4299ba88401133e9e7b9b005cbbee
Author: Sudarsana Reddy Kalluru <skalluru@marvell.com>
Date:   Thu Sep 23 03:16:05 2021 -0700

    atlantic: Fix issue in the pm resume flow.
    
    [ Upstream commit 4d88c339c423eefe2fd48215016cb0c75fcb4c4d ]
    
    After fixing hibernation resume flow, another usecase was found which
    should be explicitly handled - resume when device is in "down" state.
    Invoke aq_nic_init jointly with aq_nic_start only if ndev was already
    up during suspend/hibernate. We still need to perform nic_deinit() if
    caller requests for it, to handle the freeze/resume scenarios.
    
    Fixes: 57f780f1c433 ("atlantic: Fix driver resume flow.")
    Signed-off-by: Sudarsana Reddy Kalluru <skalluru@marvell.com>
    Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0a3a062c91fd317e33d6242349ebff84f563fb0
Author: Aya Levin <ayal@nvidia.com>
Date:   Thu Sep 23 09:51:45 2021 +0300

    net/mlx4_en: Don't allow aRFS for encapsulated packets
    
    [ Upstream commit fdbccea419dc782079ce5881d2705cc9e3881480 ]
    
    Driver doesn't support aRFS for encapsulated packets, return early error
    in such a case.
    
    Fixes: 1eb8c695bda9 ("net/mlx4_en: Add accelerated RFS support")
    Signed-off-by: Aya Levin <ayal@nvidia.com>
    Signed-off-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6909a55ce459406d5fda2bd4a37ff46fb62e2a9a
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Wed Sep 22 19:03:38 2021 -0700

    net: mscc: ocelot: fix forwarding from BLOCKING ports remaining enabled
    
    [ Upstream commit acc64f52afac15e9e44d9b5253271346841786e0 ]
    
    The blamed commit made the fatally incorrect assumption that ports which
    aren't in the FORWARDING STP state should not have packets forwarded
    towards them, and that is all that needs to be done.
    
    However, that logic alone permits BLOCKING ports to forward to
    FORWARDING ports, which of course allows packet storms to occur when
    there is an L2 loop.
    
    The ocelot_get_bridge_fwd_mask should not only ask "what can the bridge
    do for you", but "what can you do for the bridge". This way, only
    FORWARDING ports forward to the other FORWARDING ports from the same
    bridging domain, and we are still compatible with the idea of multiple
    bridges.
    
    Fixes: df291e54ccca ("net: ocelot: support multiple bridges")
    Suggested-by: Colin Foster <colin.foster@in-advantage.com>
    Reported-by: Colin Foster <colin.foster@in-advantage.com>
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: Colin Foster <colin.foster@in-advantage.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6081c82c2ff8dc739dbc57c2bc2da9bd38f17ca1
Author: Felix Fietkau <nbd@nbd.name>
Date:   Wed Sep 22 16:55:48 2021 -0700

    net: ethernet: mtk_eth_soc: avoid creating duplicate offload entries
    
    [ Upstream commit e68daf61ed13832aef8892200a874139700ca754 ]
    
    Sometimes multiple CLS_REPLACE calls are issued for the same connection.
    rhashtable_insert_fast does not check for these duplicates, so multiple
    hardware flow entries can be created.
    Fix this by checking for an existing entry early
    
    Fixes: 502e84e2382d ("net: ethernet: mtk_eth_soc: add flow offloading support")
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Ilya Lipnitskiy <ilya.lipnitskiy@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 339440b11728e9023440d5a2ce992235f01f3c84
Author: Mark Brown <broonie@kernel.org>
Date:   Wed Sep 22 19:30:37 2021 +0100

    nfc: st-nci: Add SPI ID matching DT compatible
    
    [ Upstream commit 31339440b2d0a4987030aac026adbaba44e22490 ]
    
    Currently autoloading for SPI devices does not use the DT ID table, it uses
    SPI modalises. Supporting OF modalises is going to be difficult if not
    impractical, an attempt was made but has been reverted, so ensure that
    module autoloading works for this driver by adding the part name used in
    the compatible to the list of SPI IDs.
    
    Fixes: 96c8395e2166 ("spi: Revert modalias changes")
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 741760fa6252628a3d3afad439b72437d4b123d9
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Wed Sep 22 13:25:40 2021 +0300

    nexthop: Fix memory leaks in nexthop notification chain listeners
    
    [ Upstream commit 3106a0847525befe3e22fc723909d1b21eb0d520 ]
    
    syzkaller discovered memory leaks [1] that can be reduced to the
    following commands:
    
     # ip nexthop add id 1 blackhole
     # devlink dev reload pci/0000:06:00.0
    
    As part of the reload flow, mlxsw will unregister its netdevs and then
    unregister from the nexthop notification chain. Before unregistering
    from the notification chain, mlxsw will receive delete notifications for
    nexthop objects using netdevs registered by mlxsw or their uppers. mlxsw
    will not receive notifications for nexthops using netdevs that are not
    dismantled as part of the reload flow. For example, the blackhole
    nexthop above that internally uses the loopback netdev as its nexthop
    device.
    
    One way to fix this problem is to have listeners flush their nexthop
    tables after unregistering from the notification chain. This is
    error-prone as evident by this patch and also not symmetric with the
    registration path where a listener receives a dump of all the existing
    nexthops.
    
    Therefore, fix this problem by replaying delete notifications for the
    listener being unregistered. This is symmetric to the registration path
    and also consistent with the netdev notification chain.
    
    The above means that unregister_nexthop_notifier(), like
    register_nexthop_notifier(), will have to take RTNL in order to iterate
    over the existing nexthops and that any callers of the function cannot
    hold RTNL. This is true for mlxsw and netdevsim, but not for the VXLAN
    driver. To avoid a deadlock, change the latter to unregister its nexthop
    listener without holding RTNL, making it symmetric to the registration
    path.
    
    [1]
    unreferenced object 0xffff88806173d600 (size 512):
      comm "syz-executor.0", pid 1290, jiffies 4295583142 (age 143.507s)
      hex dump (first 32 bytes):
        41 9d 1e 60 80 88 ff ff 08 d6 73 61 80 88 ff ff  A..`......sa....
        08 d6 73 61 80 88 ff ff 01 00 00 00 00 00 00 00  ..sa............
      backtrace:
        [<ffffffff81a6b576>] kmemleak_alloc_recursive include/linux/kmemleak.h:43 [inline]
        [<ffffffff81a6b576>] slab_post_alloc_hook+0x96/0x490 mm/slab.h:522
        [<ffffffff81a716d3>] slab_alloc_node mm/slub.c:3206 [inline]
        [<ffffffff81a716d3>] slab_alloc mm/slub.c:3214 [inline]
        [<ffffffff81a716d3>] kmem_cache_alloc_trace+0x163/0x370 mm/slub.c:3231
        [<ffffffff82e8681a>] kmalloc include/linux/slab.h:591 [inline]
        [<ffffffff82e8681a>] kzalloc include/linux/slab.h:721 [inline]
        [<ffffffff82e8681a>] mlxsw_sp_nexthop_obj_group_create drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c:4918 [inline]
        [<ffffffff82e8681a>] mlxsw_sp_nexthop_obj_new drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c:5054 [inline]
        [<ffffffff82e8681a>] mlxsw_sp_nexthop_obj_event+0x59a/0x2910 drivers/net/ethernet/mellanox/mlxsw/spectrum_router.c:5239
        [<ffffffff813ef67d>] notifier_call_chain+0xbd/0x210 kernel/notifier.c:83
        [<ffffffff813f0662>] blocking_notifier_call_chain kernel/notifier.c:318 [inline]
        [<ffffffff813f0662>] blocking_notifier_call_chain+0x72/0xa0 kernel/notifier.c:306
        [<ffffffff8384b9c6>] call_nexthop_notifiers+0x156/0x310 net/ipv4/nexthop.c:244
        [<ffffffff83852bd8>] insert_nexthop net/ipv4/nexthop.c:2336 [inline]
        [<ffffffff83852bd8>] nexthop_add net/ipv4/nexthop.c:2644 [inline]
        [<ffffffff83852bd8>] rtm_new_nexthop+0x14e8/0x4d10 net/ipv4/nexthop.c:2913
        [<ffffffff833e9a78>] rtnetlink_rcv_msg+0x448/0xbf0 net/core/rtnetlink.c:5572
        [<ffffffff83608703>] netlink_rcv_skb+0x173/0x480 net/netlink/af_netlink.c:2504
        [<ffffffff833de032>] rtnetlink_rcv+0x22/0x30 net/core/rtnetlink.c:5590
        [<ffffffff836069de>] netlink_unicast_kernel net/netlink/af_netlink.c:1314 [inline]
        [<ffffffff836069de>] netlink_unicast+0x5ae/0x7f0 net/netlink/af_netlink.c:1340
        [<ffffffff83607501>] netlink_sendmsg+0x8e1/0xe30 net/netlink/af_netlink.c:1929
        [<ffffffff832fde84>] sock_sendmsg_nosec net/socket.c:704 [inline]
        [<ffffffff832fde84>] sock_sendmsg net/socket.c:724 [inline]
        [<ffffffff832fde84>] ____sys_sendmsg+0x874/0x9f0 net/socket.c:2409
        [<ffffffff83304a44>] ___sys_sendmsg+0x104/0x170 net/socket.c:2463
        [<ffffffff83304c01>] __sys_sendmsg+0x111/0x1f0 net/socket.c:2492
        [<ffffffff83304d5d>] __do_sys_sendmsg net/socket.c:2501 [inline]
        [<ffffffff83304d5d>] __se_sys_sendmsg net/socket.c:2499 [inline]
        [<ffffffff83304d5d>] __x64_sys_sendmsg+0x7d/0xc0 net/socket.c:2499
    
    Fixes: 2a014b200bbd ("mlxsw: spectrum_router: Add support for nexthop objects")
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Reviewed-by: Petr Machata <petrm@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8ff625a8082db8c2b58dcb5229b27928943b94b
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Wed Sep 22 13:12:17 2021 +0200

    mptcp: ensure tx skbs always have the MPTCP ext
    
    [ Upstream commit 977d293e23b48a1129830d7968605f61c4af71a0 ]
    
    Due to signed/unsigned comparison, the expression:
    
            info->size_goal - skb->len > 0
    
    evaluates to true when the size goal is smaller than the
    skb size. That results in lack of tx cache refill, so that
    the skb allocated by the core TCP code lacks the required
    MPTCP skb extensions.
    
    Due to the above, syzbot is able to trigger the following WARN_ON():
    
    WARNING: CPU: 1 PID: 810 at net/mptcp/protocol.c:1366 mptcp_sendmsg_frag+0x1362/0x1bc0 net/mptcp/protocol.c:1366
    Modules linked in:
    CPU: 1 PID: 810 Comm: syz-executor.4 Not tainted 5.14.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:mptcp_sendmsg_frag+0x1362/0x1bc0 net/mptcp/protocol.c:1366
    Code: ff 4c 8b 74 24 50 48 8b 5c 24 58 e9 0f fb ff ff e8 13 44 8b f8 4c 89 e7 45 31 ed e8 98 57 2e fe e9 81 f4 ff ff e8 fe 43 8b f8 <0f> 0b 41 bd ea ff ff ff e9 6f f4 ff ff 4c 89 e7 e8 b9 8e d2 f8 e9
    RSP: 0018:ffffc9000531f6a0 EFLAGS: 00010216
    RAX: 000000000000697f RBX: 0000000000000000 RCX: ffffc90012107000
    RDX: 0000000000040000 RSI: ffffffff88eac9e2 RDI: 0000000000000003
    RBP: ffff888078b15780 R08: 0000000000000000 R09: 0000000000000000
    R10: ffffffff88eac017 R11: 0000000000000000 R12: ffff88801de0a280
    R13: 0000000000006b58 R14: ffff888066278280 R15: ffff88803c2fe9c0
    FS:  00007fd9f866e700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007faebcb2f718 CR3: 00000000267cb000 CR4: 00000000001506e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     __mptcp_push_pending+0x1fb/0x6b0 net/mptcp/protocol.c:1547
     mptcp_release_cb+0xfe/0x210 net/mptcp/protocol.c:3003
     release_sock+0xb4/0x1b0 net/core/sock.c:3206
     sk_stream_wait_memory+0x604/0xed0 net/core/stream.c:145
     mptcp_sendmsg+0xc39/0x1bc0 net/mptcp/protocol.c:1749
     inet6_sendmsg+0x99/0xe0 net/ipv6/af_inet6.c:643
     sock_sendmsg_nosec net/socket.c:704 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:724
     sock_write_iter+0x2a0/0x3e0 net/socket.c:1057
     call_write_iter include/linux/fs.h:2163 [inline]
     new_sync_write+0x40b/0x640 fs/read_write.c:507
     vfs_write+0x7cf/0xae0 fs/read_write.c:594
     ksys_write+0x1ee/0x250 fs/read_write.c:647
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x4665f9
    Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48
    RSP: 002b:00007fd9f866e188 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    RAX: ffffffffffffffda RBX: 000000000056c038 RCX: 00000000004665f9
    RDX: 00000000000e7b78 RSI: 0000000020000000 RDI: 0000000000000003
    RBP: 00000000004bfcc4 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 000000000056c038
    R13: 0000000000a9fb1f R14: 00007fd9f866e300 R15: 0000000000022000
    
    Fix the issue rewriting the relevant expression to avoid
    sign-related problems - note: size_goal is always >= 0.
    
    Additionally, ensure that the skb in the tx cache always carries
    the relevant extension.
    
    Reported-and-tested-by: syzbot+263a248eec3e875baa7b@syzkaller.appspotmail.com
    Fixes: 1094c6fe7280 ("mptcp: fix possible divide by zero")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d6374d5c386d4e156368f0208f3c9e061a4f8b6
Author: Shai Malin <smalin@marvell.com>
Date:   Wed Sep 22 13:53:26 2021 +0300

    qed: rdma - don't wait for resources under hw error recovery flow
    
    [ Upstream commit 1ea7812326004afd2803cc968a4776ae5120a597 ]
    
    If the HW device is during recovery, the HW resources will never return,
    hence we shouldn't wait for the CID (HW context ID) bitmaps to clear.
    This fix speeds up the error recovery flow.
    
    Fixes: 64515dc899df ("qed: Add infrastructure for error detection and recovery")
    Signed-off-by: Michal Kalderon <mkalderon@marvell.com>
    Signed-off-by: Ariel Elior <aelior@marvell.com>
    Signed-off-by: Shai Malin <smalin@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18eab899f43fadf4db30b00968e2229134eb748b
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Thu Sep 16 20:19:35 2021 +0900

    gpio: uniphier: Fix void functions to remove return value
    
    [ Upstream commit 2dd824cca3407bc9a2bd11b00f6e117b66fcfcf1 ]
    
    The return type of irq_chip.irq_mask() and irq_chip.irq_unmask() should
    be void.
    
    Fixes: dbe776c2ca54 ("gpio: uniphier: add UniPhier GPIO controller driver")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26c204fbdbc50cd4bafc72d1131c6b921070bcb2
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Aug 16 12:41:19 2021 +0200

    gpiolib: acpi: Make set-debounce-timeout failures non fatal
    
    [ Upstream commit cef0d022f55364d69017daeb9443bd31510ad6a2 ]
    
    Commit 8dcb7a15a585 ("gpiolib: acpi: Take into account debounce settings")
    made the gpiolib-acpi code call gpio_set_debounce_timeout() when requesting
    GPIOs.
    
    This in itself is fine, but it also made gpio_set_debounce_timeout()
    errors fatal, causing the requesting of the GPIO to fail. This is causing
    regressions. E.g. on a HP ElitePad 1000 G2 various _AEI specified GPIO
    ACPI event sources specify a debouncy timeout of 20 ms, but the
    pinctrl-baytrail.c only supports certain fixed values, the closest
    ones being 12 or 24 ms and pinctrl-baytrail.c responds with -EINVAL
    when specified a value which is not one of the fixed values.
    
    This is causing the acpi_request_own_gpiod() call to fail for 3
    ACPI event sources on the HP ElitePad 1000 G2, which in turn is causing
    e.g. the battery charging vs discharging status to never get updated,
    even though a charger has been plugged-in or unplugged.
    
    Make gpio_set_debounce_timeout() errors non fatal, warning about the
    failure instead, to fix this regression.
    
    Note we should probably also fix various pinctrl drivers to just
    pick the first bigger discrete value rather then returning -EINVAL but
    this will need to be done on a per driver basis, where as this fix
    at least gets us back to where things were before and thus restores
    functionality on devices where this was lost due to
    gpio_set_debounce_timeout() errors.
    
    Fixes: 8dcb7a15a585 ("gpiolib: acpi: Take into account debounce settings")
    Depends-on: 2e2b496cebef ("gpiolib: acpi: Extract acpi_request_own_gpiod() helper")
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b00fb12cdc9d8d1c3ffe82a78e74738127803fc
Author: Julian Wiedmann <jwi@linux.ibm.com>
Date:   Tue Sep 21 16:52:15 2021 +0200

    s390/qeth: fix NULL deref in qeth_clear_working_pool_list()
    
    [ Upstream commit 248f064af222a1f97ee02c84a98013dfbccad386 ]
    
    When qeth_set_online() calls qeth_clear_working_pool_list() to roll
    back after an error exit from qeth_hardsetup_card(), we are at risk of
    accessing card->qdio.in_q before it was allocated by
    qeth_alloc_qdio_queues() via qeth_mpc_initialize().
    
    qeth_clear_working_pool_list() then dereferences NULL, and by writing to
    queue->bufs[i].pool_entry scribbles all over the CPU's lowcore.
    Resulting in a crash when those lowcore areas are used next (eg. on
    the next machine-check interrupt).
    
    Such a scenario would typically happen when the device is first set
    online and its queues aren't allocated yet. An early IO error or certain
    misconfigs (eg. mismatched transport mode, bad portno) then cause us to
    error out from qeth_hardsetup_card() with card->qdio.in_q still being
    NULL.
    
    Fix it by checking the pointer for NULL before accessing it.
    
    Note that we also have (rare) paths inside qeth_mpc_initialize() where
    a configuration change can cause us to free the existing queues,
    expecting that subsequent code will allocate them again. If we then
    error out before that re-allocation happens, the same bug occurs.
    
    Fixes: eff73e16ee11 ("s390/qeth: tolerate pre-filled RX buffer")
    Reported-by: Stefan Raspl <raspl@linux.ibm.com>
    Root-caused-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Reviewed-by: Alexandra Winter <wintera@linux.ibm.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9fc4ed7520a89c9aa5f072b0f5ce4ef926475b5
Author: Mark Brown <broonie@kernel.org>
Date:   Tue Sep 21 15:44:06 2021 +0100

    spi: Revert modalias changes
    
    [ Upstream commit 96c8395e2166efa86082f3b71567ffd84936439b ]
    
    During the v5.13 cycle we updated the SPI subsystem to generate OF style
    modaliases for SPI devices, replacing the old Linux style modalises we
    used to generate based on spi_device_id which are the DT style name with
    the vendor removed.  Unfortunately this means that we start only
    reporting OF style modalises and not the old ones and there is nothing
    that ensures that drivers list every possible OF compatible string in
    their OF ID table.  The result is that there are systems which have been
    relying on loading modules based on the old style that are now broken,
    as found by Russell King with spi-nor on Macchiatobin.
    
    spi-nor is a particularly problematic case for this, it only lists a
    single generic DT compatible jedec,spi-nor in the driver but supports a
    huge raft of device specific compatibles, with a large set of part
    numbers many of which are offered by multiple vendors.  Russell's
    searches of upstream device trees has turned up examples with vendor
    names written in non-standard ways too.  To make matters worse up until
    8ff16cf77ce3 ("Documentation: devicetree: m25p80: add "nor-jedec"
    binding") the generic compatible was not part of the binding so there
    are device trees out there written to that binding version which don't
    list it all.  The sheer number of parts supported together with our
    previous approach of ignoring the vendor ID makes robustly fixing this
    by adding compatibles to the spi-nor driver seem problematic, the
    current DT binding document does not list all the parts supported by the
    driver at the minute (further patches will fix this).
    
    I've also investigated supporting both formats of modalias
    simultaneously but that doesn't seem possible, especially without
    breaking our userspace ABI which is obviously not viable.
    
    Instead revert the relevant changes for now:
    
    e09f2ab8eecc ("spi: update modalias_show after of_device_uevent_modalias support")
    3ce6c9e2617e ("spi: add of_device_uevent_modalias support")
    
    This will unfortunately mean that any system which had started having
    modules autoload based on the OF compatibles for drivers that list
    things there but not in the spi_device_ids will now not have those
    modules load which is itself a regression.  Since it affects a narrower
    time window and the particularly problematic spi-nor driver may be
    critical to system boot on smaller systems this seems the best of a
    series of bad options.  I will start an audit of SPI drivers to identify
    and fix cases where things won't autoload using spi_device_id, this is
    not great but seems to be the best way forward that anyone has been able
    to identify.
    
    Thanks to Russell for both his report and the additional diagnostic and
    analysis work he has done here, the detailed research above was his
    work.
    
    Fixes: e09f2ab8eecc ("spi: update modalias_show after of_device_uevent_modalias support")
    Fixes: 3ce6c9e2617e ("spi: add of_device_uevent_modalias support")
    Reported-by: Russell King (Oracle) <linux@armlinux.org.uk>
    Suggested-by: Russell King (Oracle) <linux@armlinux.org.uk>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Tested-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Cc: Andreas Schwab <schwab@suse.de>
    Cc: Marco Felsch <m.felsch@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9839bb2b0e834ad15fa08b9110cdbfec1fa71416
Author: Cristian Marussi <cristian.marussi@arm.com>
Date:   Mon Sep 20 13:12:28 2021 +0100

    kselftest/arm64: signal: Skip tests if required features are missing
    
    [ Upstream commit 0e3dbf765fe22060acbcb8eb8c4d256e655a1247 ]
    
    During initialization of a signal testcase, features declared as required
    are properly checked against the running system but no action is then taken
    to effectively skip such a testcase.
    
    Fix core signals test logic to abort initialization and report such a
    testcase as skipped to the KSelfTest framework.
    
    Fixes: f96bf4340316 ("kselftest: arm64: mangle_pstate_invalid_compat_toggle and common utils")
    Signed-off-by: Cristian Marussi <cristian.marussi@arm.com>
    Reviewed-by: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/r/20210920121228.35368-1-cristian.marussi@arm.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6407eb6692fede1f630874a43cee47653d0dab05
Author: Mark Brown <broonie@kernel.org>
Date:   Thu Aug 19 14:42:40 2021 +0100

    kselftest/arm64: signal: Add SVE to the set of features we can check for
    
    [ Upstream commit d4e4dc4fab686c5f3f185272a19b83930664bef5 ]
    
    Allow testcases for SVE signal handling to flag the dependency and be
    skipped on systems without SVE support.
    
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Link: https://lore.kernel.org/r/20210819134245.13935-2-broonie@kernel.org
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d12feda3daf7af64168ffde39b8e394cde0dd48f
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Sep 17 21:48:29 2021 -0700

    platform/x86: dell: fix DELL_WMI_PRIVACY dependencies & build error
    
    [ Upstream commit 5b72dafaca73b33416c82457ae615e6f2022e901 ]
    
    When DELL_WMI=y, DELL_WMI_PRIVACY=y, and LEDS_TRIGGER_AUDIO=m, there
    is a linker error since the LEDS trigger code is built as a loadable
    module. This happens because DELL_WMI_PRIVACY is a bool that depends
    on a tristate (LEDS_TRIGGER_AUDIO=m), which can be dangerous.
    
    ld: drivers/platform/x86/dell/dell-wmi-privacy.o: in function `dell_privacy_wmi_probe':
    dell-wmi-privacy.c:(.text+0x3df): undefined reference to `ledtrig_audio_get'
    
    Fixes: 8af9fa37b8a3 ("platform/x86: dell-privacy: Add support for Dell hardware privacy")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Cc: Perry Yuan <Perry.Yuan@dell.com>
    Cc: Dell.Client.Kernel@dell.com
    Cc: platform-driver-x86@vger.kernel.org
    Cc: Hans de Goede <hdegoede@redhat.com>
    Cc: Mark Gross <mgross@linux.intel.com>
    Link: https://lore.kernel.org/r/20210918044829.19222-1-rdunlap@infradead.org
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e95328ad0cdcaaa5c6996c1a17d848f9d5a9ab6
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Tue Sep 21 00:42:09 2021 +0300

    net: dsa: realtek: register the MDIO bus under devres
    
    [ Upstream commit 74b6d7d13307b016f4b5bba8198297824c0ee6df ]
    
    The Linux device model permits both the ->shutdown and ->remove driver
    methods to get called during a shutdown procedure. Example: a DSA switch
    which sits on an SPI bus, and the SPI bus driver calls this on its
    ->shutdown method:
    
    spi_unregister_controller
    -> device_for_each_child(&ctlr->dev, NULL, __unregister);
       -> spi_unregister_device(to_spi_device(dev));
          -> device_del(&spi->dev);
    
    So this is a simple pattern which can theoretically appear on any bus,
    although the only other buses on which I've been able to find it are
    I2C:
    
    i2c_del_adapter
    -> device_for_each_child(&adap->dev, NULL, __unregister_client);
       -> i2c_unregister_device(client);
          -> device_unregister(&client->dev);
    
    The implication of this pattern is that devices on these buses can be
    unregistered after having been shut down. The drivers for these devices
    might choose to return early either from ->remove or ->shutdown if the
    other callback has already run once, and they might choose that the
    ->shutdown method should only perform a subset of the teardown done by
    ->remove (to avoid unnecessary delays when rebooting).
    
    So in other words, the device driver may choose on ->remove to not
    do anything (therefore to not unregister an MDIO bus it has registered
    on ->probe), because this ->remove is actually triggered by the
    device_shutdown path, and its ->shutdown method has already run and done
    the minimally required cleanup.
    
    This used to be fine until the blamed commit, but now, the following
    BUG_ON triggers:
    
    void mdiobus_free(struct mii_bus *bus)
    {
            /* For compatibility with error handling in drivers. */
            if (bus->state == MDIOBUS_ALLOCATED) {
                    kfree(bus);
                    return;
            }
    
            BUG_ON(bus->state != MDIOBUS_UNREGISTERED);
            bus->state = MDIOBUS_RELEASED;
    
            put_device(&bus->dev);
    }
    
    In other words, there is an attempt to free an MDIO bus which was not
    unregistered. The attempt to free it comes from the devres release
    callbacks of the SPI device, which are executed after the device is
    unregistered.
    
    I'm not saying that the fact that MDIO buses allocated using devres
    would automatically get unregistered wasn't strange. I'm just saying
    that the commit didn't care about auditing existing call paths in the
    kernel, and now, the following code sequences are potentially buggy:
    
    (a) devm_mdiobus_alloc followed by plain mdiobus_register, for a device
        located on a bus that unregisters its children on shutdown. After
        the blamed patch, either both the alloc and the register should use
        devres, or none should.
    
    (b) devm_mdiobus_alloc followed by plain mdiobus_register, and then no
        mdiobus_unregister at all in the remove path. After the blamed
        patch, nobody unregisters the MDIO bus anymore, so this is even more
        buggy than the previous case which needs a specific bus
        configuration to be seen, this one is an unconditional bug.
    
    In this case, the Realtek drivers fall under category (b). To solve it,
    we can register the MDIO bus under devres too, which restores the
    previous behavior.
    
    Fixes: ac3a68d56651 ("net: phy: don't abuse devres in devm_mdiobus_register()")
    Reported-by: Lino Sanfilippo <LinoSanfilippo@gmx.de>
    Reported-by: Alvin Šipraga <alsi@bang-olufsen.dk>
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 880ee7cf0f022cd2125d679d624d7e545bb3b49d
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Tue Sep 21 00:42:08 2021 +0300

    net: dsa: don't allocate the slave_mii_bus using devres
    
    [ Upstream commit 5135e96a3dd2f4555ae6981c3155a62bcf3227f6 ]
    
    The Linux device model permits both the ->shutdown and ->remove driver
    methods to get called during a shutdown procedure. Example: a DSA switch
    which sits on an SPI bus, and the SPI bus driver calls this on its
    ->shutdown method:
    
    spi_unregister_controller
    -> device_for_each_child(&ctlr->dev, NULL, __unregister);
       -> spi_unregister_device(to_spi_device(dev));
          -> device_del(&spi->dev);
    
    So this is a simple pattern which can theoretically appear on any bus,
    although the only other buses on which I've been able to find it are
    I2C:
    
    i2c_del_adapter
    -> device_for_each_child(&adap->dev, NULL, __unregister_client);
       -> i2c_unregister_device(client);
          -> device_unregister(&client->dev);
    
    The implication of this pattern is that devices on these buses can be
    unregistered after having been shut down. The drivers for these devices
    might choose to return early either from ->remove or ->shutdown if the
    other callback has already run once, and they might choose that the
    ->shutdown method should only perform a subset of the teardown done by
    ->remove (to avoid unnecessary delays when rebooting).
    
    So in other words, the device driver may choose on ->remove to not
    do anything (therefore to not unregister an MDIO bus it has registered
    on ->probe), because this ->remove is actually triggered by the
    device_shutdown path, and its ->shutdown method has already run and done
    the minimally required cleanup.
    
    This used to be fine until the blamed commit, but now, the following
    BUG_ON triggers:
    
    void mdiobus_free(struct mii_bus *bus)
    {
            /* For compatibility with error handling in drivers. */
            if (bus->state == MDIOBUS_ALLOCATED) {
                    kfree(bus);
                    return;
            }
    
            BUG_ON(bus->state != MDIOBUS_UNREGISTERED);
            bus->state = MDIOBUS_RELEASED;
    
            put_device(&bus->dev);
    }
    
    In other words, there is an attempt to free an MDIO bus which was not
    unregistered. The attempt to free it comes from the devres release
    callbacks of the SPI device, which are executed after the device is
    unregistered.
    
    I'm not saying that the fact that MDIO buses allocated using devres
    would automatically get unregistered wasn't strange. I'm just saying
    that the commit didn't care about auditing existing call paths in the
    kernel, and now, the following code sequences are potentially buggy:
    
    (a) devm_mdiobus_alloc followed by plain mdiobus_register, for a device
        located on a bus that unregisters its children on shutdown. After
        the blamed patch, either both the alloc and the register should use
        devres, or none should.
    
    (b) devm_mdiobus_alloc followed by plain mdiobus_register, and then no
        mdiobus_unregister at all in the remove path. After the blamed
        patch, nobody unregisters the MDIO bus anymore, so this is even more
        buggy than the previous case which needs a specific bus
        configuration to be seen, this one is an unconditional bug.
    
    In this case, DSA falls into category (a), it tries to be helpful and
    registers an MDIO bus on behalf of the switch, which might be on such a
    bus. I've no idea why it does it under devres.
    
    It does this on probe:
    
            if (!ds->slave_mii_bus && ds->ops->phy_read)
                    alloc and register mdio bus
    
    and this on remove:
    
            if (ds->slave_mii_bus && ds->ops->phy_read)
                    unregister mdio bus
    
    I _could_ imagine using devres because the condition used on remove is
    different than the condition used on probe. So strictly speaking, DSA
    cannot determine whether the ds->slave_mii_bus it sees on remove is the
    ds->slave_mii_bus that _it_ has allocated on probe. Using devres would
    have solved that problem. But nonetheless, the existing code already
    proceeds to unregister the MDIO bus, even though it might be
    unregistering an MDIO bus it has never registered. So I can only guess
    that no driver that implements ds->ops->phy_read also allocates and
    registers ds->slave_mii_bus itself.
    
    So in that case, if unregistering is fine, freeing must be fine too.
    
    Stop using devres and free the MDIO bus manually. This will make devres
    stop attempting to free a still registered MDIO bus on ->shutdown.
    
    Fixes: ac3a68d56651 ("net: phy: don't abuse devres in devm_mdiobus_register()")
    Reported-by: Lino Sanfilippo <LinoSanfilippo@gmx.de>
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Lino Sanfilippo <LinoSanfilippo@gmx.de>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e15b7001ce5efe9b84514670e3624d3943a10ac1
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Tue Sep 21 01:49:18 2021 +0300

    net: dsa: fix dsa_tree_setup error path
    
    [ Upstream commit e5845aa0eadda3d8a950eb8845c1396827131f30 ]
    
    Since the blamed commit, dsa_tree_teardown_switches() was split into two
    smaller functions, dsa_tree_teardown_switches and dsa_tree_teardown_ports.
    
    However, the error path of dsa_tree_setup stopped calling dsa_tree_teardown_ports.
    
    Fixes: a57d8c217aad ("net: dsa: flush switchdev workqueue before tearing down CPU/DSA ports")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79816b227dab7ef8ed3d48203429c0d3d9ac99de
Author: Karsten Graul <kgraul@linux.ibm.com>
Date:   Mon Sep 20 21:18:15 2021 +0200

    net/smc: fix 'workqueue leaked lock' in smc_conn_abort_work
    
    [ Upstream commit a18cee4791b1123d0a6579a7c89f4b87e48abe03 ]
    
    The abort_work is scheduled when a connection was detected to be
    out-of-sync after a link failure. The work calls smc_conn_kill(),
    which calls smc_close_active_abort() and that might end up calling
    smc_close_cancel_work().
    smc_close_cancel_work() cancels any pending close_work and tx_work but
    needs to release the sock_lock before and acquires the sock_lock again
    afterwards. So when the sock_lock was NOT acquired before then it may
    be held after the abort_work completes. Thats why the sock_lock is
    acquired before the call to smc_conn_kill() in __smc_lgr_terminate(),
    but this is missing in smc_conn_abort_work().
    
    Fix that by acquiring the sock_lock first and release it after the
    call to smc_conn_kill().
    
    Fixes: b286a0651e44 ("net/smc: handle incoming CDC validation message")
    Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit edb96e602d84861b621bdf5587c77dbe2fe664df
Author: Karsten Graul <kgraul@linux.ibm.com>
Date:   Mon Sep 20 21:18:14 2021 +0200

    net/smc: add missing error check in smc_clc_prfx_set()
    
    [ Upstream commit 6c90731980655280ea07ce4b21eb97457bf86286 ]
    
    Coverity stumbled over a missing error check in smc_clc_prfx_set():
    
    *** CID 1475954:  Error handling issues  (CHECKED_RETURN)
    /net/smc/smc_clc.c: 233 in smc_clc_prfx_set()
    >>>     CID 1475954:  Error handling issues  (CHECKED_RETURN)
    >>>     Calling "kernel_getsockname" without checking return value (as is done elsewhere 8 out of 10 times).
    233             kernel_getsockname(clcsock, (struct sockaddr *)&addrs);
    
    Add the return code check in smc_clc_prfx_set().
    
    Fixes: c246d942eabc ("net/smc: restructure netinfo for CLC proposal msgs")
    Reported-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1791e8eef88a4c521dcfbe4e47961937eb3a70a8
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Wed Sep 15 21:52:11 2021 +0800

    net: hns3: fix a return value error in hclge_get_reset_status()
    
    [ Upstream commit 5126b9d3d4acdebc12b9d436282f88d8a1b5146c ]
    
    hclge_get_reset_status() should return the tqp reset status.
    However, if the CMDQ fails, the caller will take it as tqp reset
    success status by mistake. Therefore, uses a parameters to get
    the tqp reset status instead.
    
    Fixes: 46a3df9f9718 ("net: hns3: Add HNS3 Acceleration Engine & Compatibility Layer Support")
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18d1e07be7735bf74c679ba8601a1189ac5c5ac1
Author: liaoguojia <liaoguojia@huawei.com>
Date:   Wed Sep 15 21:52:10 2021 +0800

    net: hns3: check vlan id before using it
    
    [ Upstream commit ef39d632608e66f428c1246836fd060cf4818d67 ]
    
    The input parameters may not be reliable, so check the vlan id before
    using it, otherwise may set wrong vlan id into hardware.
    
    Fixes: dc8131d846d4 ("net: hns3: Fix for packet loss due wrong filter config in VLAN tbls")
    Signed-off-by: liaoguojia <liaoguojia@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d4b460aeb832a8737fb20e717b2a7c62f4ea7f6
Author: Yufeng Mo <moyufeng@huawei.com>
Date:   Wed Sep 15 21:52:09 2021 +0800

    net: hns3: check queue id range before using
    
    [ Upstream commit 63b1279d9905100a14da9e043de7b28e99dba3f8 ]
    
    The input parameters may not be reliable. Before using the
    queue id, we should check this parameter. Otherwise, memory
    overwriting may occur.
    
    Fixes: d34100184685 ("net: hns3: refactor the mailbox message between PF and VF")
    Signed-off-by: Yufeng Mo <moyufeng@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa6126e4eda46b0a466bda8bab43ca3efc0217f8
Author: Jiaran Zhang <zhangjiaran@huawei.com>
Date:   Wed Sep 15 21:52:08 2021 +0800

    net: hns3: fix misuse vf id and vport id in some logs
    
    [ Upstream commit 311c0aaa9b4bb8dc65f22634e15963316b17c921 ]
    
    vport_id include PF and VFs, vport_id = 0 means PF, other values mean VFs.
    So the actual vf id is equal to vport_id minus 1.
    
    Some VF print logs are actually vport, and logs of vf id actually use
    vport id, so this patch fixes them.
    
    Fixes: ac887be5b0fe ("net: hns3: change print level of RAS error log from warning to error")
    Fixes: adcf738b804b ("net: hns3: cleanup some print format warning")
    Signed-off-by: Jiaran Zhang <zhangjiaran@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit faf83d55e29332c8ef40e56da913960dd44f43c0
Author: Jian Shen <shenjian15@huawei.com>
Date:   Wed Sep 15 21:52:07 2021 +0800

    net: hns3: fix inconsistent vf id print
    
    [ Upstream commit 91bc0d5272d3a4dc3d4fd2a74387c7e7361bbe96 ]
    
    The vf id from ethtool is added 1 before configured to driver.
    So it's necessary to minus 1 when printing it, in order to
    keep consistent with user's configuration.
    
    Fixes: dd74f815dd41 ("net: hns3: Add support for rule add/delete for flow director")
    Signed-off-by: Jian Shen <shenjian15@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a627ccb2ce903e758aad7c8aa87d3fa2b2e4a6e
Author: Jian Shen <shenjian15@huawei.com>
Date:   Wed Sep 15 21:52:06 2021 +0800

    net: hns3: fix change RSS 'hfunc' ineffective issue
    
    [ Upstream commit e184cec5e29d8eb3c3435b12a9074b75e2d69e4a ]
    
    When user change rss 'hfunc' without set rss 'hkey' by ethtool
    -X command, the driver will ignore the 'hfunc' for the hkey is
    NULL. It's unreasonable. So fix it.
    
    Fixes: 46a3df9f9718 ("net: hns3: Add HNS3 Acceleration Engine & Compatibility Layer Support")
    Fixes: 374ad291762a ("net: hns3: Add RSS general configuration support for VF")
    Signed-off-by: Jian Shen <shenjian15@huawei.com>
    Signed-off-by: Guangbin Huang <huangguangbin2@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fab9a160ef767928c1aff67d5fefe6f146cedf3e
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Mon Sep 20 02:51:52 2021 -0400

    bnxt_en: Fix TX timeout when TX ring size is set to the smallest
    
    [ Upstream commit 5bed8b0704c9ecccc8f4a2c377d7c8e21090a82e ]
    
    The smallest TX ring size we support must fit a TX SKB with MAX_SKB_FRAGS
    + 1.  Because the first TX BD for a packet is always a long TX BD, we
    need an extra TX BD to fit this packet.  Define BNXT_MIN_TX_DESC_CNT with
    this value to make this more clear.  The current code uses a minimum
    that is off by 1.  Fix it using this constant.
    
    The tx_wake_thresh to determine when to wake up the TX queue is half the
    ring size but we must have at least BNXT_MIN_TX_DESC_CNT for the next
    packet which may have maximum fragments.  So the comparison of the
    available TX BDs with tx_wake_thresh should be >= instead of > in the
    current code.  Otherwise, at the smallest ring size, we will never wake
    up the TX queue and will cause TX timeout.
    
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Reviewed-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadocm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ce6c8a9246ad4e6ce957b70efd304bd9c9a3f545
Author: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
Date:   Sat Sep 18 16:52:32 2021 +0800

    napi: fix race inside napi_enable
    
    [ Upstream commit 3765996e4f0b8a755cab215a08df744490c76052 ]
    
    The process will cause napi.state to contain NAPI_STATE_SCHED and
    not in the poll_list, which will cause napi_disable() to get stuck.
    
    The prefix "NAPI_STATE_" is removed in the figure below, and
    NAPI_STATE_HASHED is ignored in napi.state.
    
                          CPU0       |                   CPU1       | napi.state
    ===============================================================================
    napi_disable()                   |                              | SCHED | NPSVC
    napi_enable()                    |                              |
    {                                |                              |
        smp_mb__before_atomic();     |                              |
        clear_bit(SCHED, &n->state); |                              | NPSVC
                                     | napi_schedule_prep()         | SCHED | NPSVC
                                     | napi_poll()                  |
                                     |   napi_complete_done()       |
                                     |   {                          |
                                     |      if (n->state & (NPSVC | | (1)
                                     |               _BUSY_POLL)))  |
                                     |           return false;      |
                                     |     ................         |
                                     |   }                          | SCHED | NPSVC
                                     |                              |
        clear_bit(NPSVC, &n->state); |                              | SCHED
    }                                |                              |
                                     |                              |
    napi_schedule_prep()             |                              | SCHED | MISSED (2)
    
    (1) Here return direct. Because of NAPI_STATE_NPSVC exists.
    (2) NAPI_STATE_SCHED exists. So not add napi.poll_list to sd->poll_list
    
    Since NAPI_STATE_SCHED already exists and napi is not in the
    sd->poll_list queue, NAPI_STATE_SCHED cannot be cleared and will always
    exist.
    
    1. This will cause this queue to no longer receive packets.
    2. If you encounter napi_disable under the protection of rtnl_lock, it
       will cause the entire rtnl_lock to be locked, affecting the overall
       system.
    
    This patch uses cmpxchg to implement napi_enable(), which ensures that
    there will be no race due to the separation of clear two bits.
    
    Fixes: 2d8bff12699abc ("netpoll: Close race condition between poll_one_napi and napi_disable")
    Signed-off-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
    Reviewed-by: Dust Li <dust.li@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9448073ee71345b2b8b00005aa874b88c8fe4cc
Author: Christian Lamparter <chunkeey@gmail.com>
Date:   Sun Sep 19 13:57:25 2021 +0200

    net: bgmac-bcma: handle deferred probe error due to mac-address
    
    [ Upstream commit 029497e66bdc762e001880e4c85a91f35a54b1e2 ]
    
    Due to the inclusion of nvmem handling into the mac-address getter
    function of_get_mac_address() by
    commit d01f449c008a ("of_net: add NVMEM support to of_get_mac_address")
    it is now possible to get a -EPROBE_DEFER return code. Which did cause
    bgmac to assign a random ethernet address.
    
    This exact issue happened on my Meraki MR32. The nvmem provider is
    an EEPROM (at24c64) which gets instantiated once the module
    driver is loaded... This happens once the filesystem becomes available.
    
    With this patch, bgmac_probe() will propagate the -EPROBE_DEFER error.
    Then the driver subsystem will reschedule the probe at a later time.
    
    Cc: Petr Štetiar <ynezz@true.cz>
    Cc: Michael Walle <michael@walle.cc>
    Fixes: d01f449c008a ("of_net: add NVMEM support to of_get_mac_address")
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e3d85f911f8c9a559f329b03059329f8d2c72c3
Author: Vladimir Oltean <vladimir.oltean@nxp.com>
Date:   Fri Sep 17 17:29:16 2021 +0300

    net: dsa: tear down devlink port regions when tearing down the devlink port on error
    
    [ Upstream commit fd292c189a979838622d5e03e15fa688c81dd50b ]
    
    Commit 86f8b1c01a0a ("net: dsa: Do not make user port errors fatal")
    decided it was fine to ignore errors on certain ports that fail to
    probe, and go on with the ports that do probe fine.
    
    Commit fb6ec87f7229 ("net: dsa: Fix type was not set for devlink port")
    noticed that devlink_port_type_eth_set(dlp, dp->slave); does not get
    called, and devlink notices after a timeout of 3600 seconds and prints a
    WARN_ON. So it went ahead to unregister the devlink port. And because
    there exists an UNUSED port flavour, we actually re-register the devlink
    port as UNUSED.
    
    Commit 08156ba430b4 ("net: dsa: Add devlink port regions support to
    DSA") added devlink port regions, which are set up by the driver and not
    by DSA.
    
    When we trigger the devlink port deregistration and reregistration as
    unused, devlink now prints another WARN_ON, from here:
    
    devlink_port_unregister:
            WARN_ON(!list_empty(&devlink_port->region_list));
    
    So the port still has regions, which makes sense, because they were set
    up by the driver, and the driver doesn't know we're unregistering the
    devlink port.
    
    Somebody needs to tear them down, and optionally (actually it would be
    nice, to be consistent) set them up again for the new devlink port.
    
    But DSA's layering stays in our way quite badly here.
    
    The options I've considered are:
    
    1. Introduce a function in devlink to just change a port's type and
       flavour. No dice, devlink keeps a lot of state, it really wants the
       port to not be registered when you set its parameters, so changing
       anything can only be done by destroying what we currently have and
       recreating it.
    
    2. Make DSA cache the parameters passed to dsa_devlink_port_region_create,
       and the region returned, keep those in a list, then when the devlink
       port unregister needs to take place, the existing devlink regions are
       destroyed by DSA, and we replay the creation of new regions using the
       cached parameters. Problem: mv88e6xxx keeps the region pointers in
       chip->ports[port].region, and these will remain stale after DSA frees
       them. There are many things DSA can do, but updating mv88e6xxx's
       private pointers is not one of them.
    
    3. Just let the driver do it (i.e. introduce a very specific method
       called ds->ops->port_reinit_as_unused, which unregisters its devlink
       port devlink regions, then the old devlink port, then registers the
       new one, then the devlink port regions for it). While it does work,
       as opposed to the others, it's pretty horrible from an API
       perspective and we can do better.
    
    4. Introduce a new pair of methods, ->port_setup and ->port_teardown,
       which in the case of mv88e6xxx must register and unregister the
       devlink port regions. Call these 2 methods when the port must be
       reinitialized as unused.
    
    Naturally, I went for the 4th approach.
    
    Fixes: 08156ba430b4 ("net: dsa: Add devlink port regions support to DSA")
    Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 135c541dee18340a605be79e966012a220e83c64
Author: Claudiu Manoil <claudiu.manoil@nxp.com>
Date:   Fri Sep 17 13:22:06 2021 +0300

    enetc: Fix uninitialized struct dim_sample field usage
    
    [ Upstream commit 9f7afa05c9522b086327929ae622facab0f0f72b ]
    
    The only struct dim_sample member that does not get
    initialized by dim_update_sample() is comp_ctr. (There
    is special API to initialize comp_ctr:
    dim_update_sample_with_comps(), and it is currently used
    only for RDMA.) comp_ctr is used to compute curr_stats->cmps
    and curr_stats->cpe_ratio (see dim_calc_stats()) which in
    turn are consumed by the rdma_dim_*() API.  Therefore,
    functionally, the net_dim*() API consumers are not affected.
    Nevertheless, fix the computation of statistics based
    on an uninitialized variable, even if the mentioned statistics
    are not used at the moment.
    
    Fixes: ae0e6a5d1627 ("enetc: Add adaptive interrupt coalescing")
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6f329d9da2a5ae032fcde800a99b118124ed5270
Author: Claudiu Manoil <claudiu.manoil@nxp.com>
Date:   Fri Sep 17 13:22:05 2021 +0300

    enetc: Fix illegal access when reading affinity_hint
    
    [ Upstream commit 7237a494decfa17d0b9d0076e6cee3235719de90 ]
    
    irq_set_affinity_hit() stores a reference to the cpumask_t
    parameter in the irq descriptor, and that reference can be
    accessed later from irq_affinity_hint_proc_show(). Since
    the cpu_mask parameter passed to irq_set_affinity_hit() has
    only temporary storage (it's on the stack memory), later
    accesses to it are illegal. Thus reads from the corresponding
    procfs affinity_hint file can result in paging request oops.
    
    The issue is fixed by the get_cpu_mask() helper, which provides
    a permanent storage for the cpumask_t parameter.
    
    Fixes: d4fd0404c1c9 ("enetc: Introduce basic PF and VF ENETC ethernet drivers")
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f020bb63b5d2e5576acadd10e158fe3b04af67ba
Author: Jason Wang <jasowang@redhat.com>
Date:   Fri Sep 17 16:34:06 2021 +0800

    virtio-net: fix pages leaking when building skb in big mode
    
    [ Upstream commit afd92d82c9d715fb97565408755acad81573591a ]
    
    We try to use build_skb() if we had sufficient tailroom. But we forget
    to release the unused pages chained via private in big mode which will
    leak pages. Fixing this by release the pages after building the skb in
    big mode.
    
    Cc: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
    Fixes: fb32856b16ad ("virtio-net: page_to_skb() use build_skb when there's sufficient tailroom")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Reviewed-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a5ba85e8dce59bd7d4dcd62b4ae096c650ceac6
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Thu Sep 16 17:24:54 2021 -0400

    NLM: Fix svcxdr_encode_owner()
    
    [ Upstream commit 89c485c7a3ecbc2ebd568f9c9c2edf3a8cf7485b ]
    
    Dai Ngo reports that, since the XDR overhaul, the NLM server crashes
    when the TEST procedure wants to return NLM_DENIED. There is a bug
    in svcxdr_encode_owner() that none of our standard test cases found.
    
    Replace the open-coded function with a call to an appropriate
    pre-fabricated XDR helper.
    
    Reported-by: Dai Ngo <Dai.Ngo@oracle.com>
    Fixes: a6a63ca5652e ("lockd: Common NLM XDR helpers")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2f95dd831be02d716fb01a9e8ed3ed5c71220b11
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Thu Sep 16 16:41:02 2021 +0200

    regulator: max14577: Revert "regulator: max14577: Add proper module aliases strings"
    
    [ Upstream commit dc9660590d106bb58d145233fffca4efadad3655 ]
    
    This reverts commit 0da6736ecd10b45e535b100acd58df2db4c099d8.
    
    The MODULE_DEVICE_TABLE already creates proper alias.  Having another
    MODULE_ALIAS causes the alias to be duplicated:
    
      $ modinfo max14577-regulator.ko
    
      alias:          platform:max77836-regulator
      alias:          platform:max14577-regulator
      description:    Maxim 14577/77836 regulator driver
      alias:          platform:max77836-regulator
      alias:          platform:max14577-regulator
    
    Cc: Marek Szyprowski <m.szyprowski@samsung.com>
    Fixes: 0da6736ecd10 ("regulator: max14577: Add proper module aliases strings")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Tested-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Link: https://lore.kernel.org/r/20210916144102.120980-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50cb50a99fae3821aba479e9ede924e0dc89e69b
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Aug 27 17:53:10 2021 +0300

    platform/x86/intel: punit_ipc: Drop wrong use of ACPI_PTR()
    
    [ Upstream commit 349bff48ae0f5f8aa2075d0bdc2091a30bd634f6 ]
    
    ACPI_PTR() is more harmful than helpful. For example, in this case
    if CONFIG_ACPI=n, the ID table left unused which is not what we want.
    
    Instead of adding ifdeffery here and there, drop ACPI_PTR()
    and unused acpi.h.
    
    Fixes: fdca4f16f57d ("platform:x86: add Intel P-Unit mailbox IPC driver")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210827145310.76239-1-andriy.shevchenko@linux.intel.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa3aac2b4386963a15a825e949abe65f0ea6e259
Author: David Howells <dhowells@redhat.com>
Date:   Wed Sep 8 21:55:19 2021 +0100

    afs: Fix updating of i_blocks on file/dir extension
    
    [ Upstream commit 9d37e1cab2a9d2cee2737973fa455e6f89eee46a ]
    
    When an afs file or directory is modified locally such that the total file
    size is extended, i_blocks needs to be recalculated too.
    
    Fix this by making afs_write_end() and afs_edit_dir_add() call
    afs_set_i_size() rather than setting inode->i_size directly as that also
    recalculates inode->i_blocks.
    
    This can be tested by creating and writing into directories and files and
    then examining them with du.  Without this change, directories show a 4
    blocks (they start out at 2048 bytes) and files show 0 blocks; with this
    change, they should show a number of blocks proportional to the file size
    rounded up to 1024.
    
    Fixes: 31143d5d515e ("AFS: implement basic file write support")
    Fixes: 63a4681ff39c ("afs: Locally edit directory data for mkdir/create/unlink/...")
    Reported-by: Markus Suvanto <markus.suvanto@gmail.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Marc Dionne <marc.dionne@auristor.com>
    Tested-by: Markus Suvanto <markus.suvanto@gmail.com>
    cc: linux-afs@lists.infradead.org
    Link: https://lore.kernel.org/r/163113612442.352844.11162345591911691150.stgit@warthog.procyon.org.uk/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e66fc460d6dcf85cf12288e133a081205aebcd97
Author: David Howells <dhowells@redhat.com>
Date:   Fri Sep 10 00:01:52 2021 +0100

    afs: Fix corruption in reads at fpos 2G-4G from an OpenAFS server
    
    [ Upstream commit b537a3c21775075395af475dcc6ef212fcf29db8 ]
    
    AFS-3 has two data fetch RPC variants, FS.FetchData and FS.FetchData64, and
    Linux's afs client switches between them when talking to a non-YFS server
    if the read size, the file position or the sum of the two have the upper 32
    bits set of the 64-bit value.
    
    This is a problem, however, since the file position and length fields of
    FS.FetchData are *signed* 32-bit values.
    
    Fix this by capturing the capability bits obtained from the fileserver when
    it's sent an FS.GetCapabilities RPC, rather than just discarding them, and
    then picking out the VICED_CAPABILITY_64BITFILES flag.  This can then be
    used to decide whether to use FS.FetchData or FS.FetchData64 - and also
    FS.StoreData or FS.StoreData64 - rather than using upper_32_bits() to
    switch on the parameter values.
    
    This capabilities flag could also be used to limit the maximum size of the
    file, but all servers must be checked for that.
    
    Note that the issue does not exist with FS.StoreData - that uses *unsigned*
    32-bit values.  It's also not a problem with Auristor servers as its
    YFS.FetchData64 op uses unsigned 64-bit values.
    
    This can be tested by cloning a git repo through an OpenAFS client to an
    OpenAFS server and then doing "git status" on it from a Linux afs
    client[1].  Provided the clone has a pack file that's in the 2G-4G range,
    the git status will show errors like:
    
            error: packfile .git/objects/pack/pack-5e813c51d12b6847bbc0fcd97c2bca66da50079c.pack does not match index
            error: packfile .git/objects/pack/pack-5e813c51d12b6847bbc0fcd97c2bca66da50079c.pack does not match index
    
    This can be observed in the server's FileLog with something like the
    following appearing:
    
    Sun Aug 29 19:31:39 2021 SRXAFS_FetchData, Fid = 2303380852.491776.3263114, Host 192.168.11.201:7001, Id 1001
    Sun Aug 29 19:31:39 2021 CheckRights: len=0, for host=192.168.11.201:7001
    Sun Aug 29 19:31:39 2021 FetchData_RXStyle: Pos 18446744071815340032, Len 3154
    Sun Aug 29 19:31:39 2021 FetchData_RXStyle: file size 2400758866
    ...
    Sun Aug 29 19:31:40 2021 SRXAFS_FetchData returns 5
    
    Note the file position of 18446744071815340032.  This is the requested file
    position sign-extended.
    
    Fixes: b9b1f8d5930a ("AFS: write support fixes")
    Reported-by: Markus Suvanto <markus.suvanto@gmail.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Marc Dionne <marc.dionne@auristor.com>
    Tested-by: Markus Suvanto <markus.suvanto@gmail.com>
    cc: linux-afs@lists.infradead.org
    cc: openafs-devel@openafs.org
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=214217#c9 [1]
    Link: https://lore.kernel.org/r/951332.1631308745@warthog.procyon.org.uk/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 95671c6c637450c622f85f58612b6b4ebfa1515a
Author: David Howells <dhowells@redhat.com>
Date:   Wed Sep 1 18:11:33 2021 +0100

    afs: Fix incorrect triggering of sillyrename on 3rd-party invalidation
    
    [ Upstream commit 63d49d843ef5fffeea069e0ffdfbd2bf40ba01c6 ]
    
    The AFS filesystem is currently triggering the silly-rename cleanup from
    afs_d_revalidate() when it sees that a dentry has been changed by a third
    party[1].  It should not be doing this as the cleanup includes deleting the
    silly-rename target file on iput.
    
    Fix this by removing the places in the d_revalidate handling that validate
    anything other than the directory and the dirent.  It probably should not
    be looking to validate the target inode of the dentry also.
    
    This includes removing the point in afs_d_revalidate() where the inode that
    a dentry used to point to was marked as being deleted (AFS_VNODE_DELETED).
    We don't know it got deleted.  It could have been renamed or it could have
    hard links remaining.
    
    This was reproduced by cloning a git repo onto an afs volume on one
    machine, switching to another machine and doing "git status", then
    switching back to the first and doing "git status".  The second status
    would show weird output due to ".git/index" getting deleted by the above
    mentioned mechanism.
    
    A simpler way to do it is to do:
    
            machine 1: touch a
            machine 2: touch b; mv -f b a
            machine 1: stat a
    
    on an afs volume.  The bug shows up as the stat failing with ENOENT and the
    file server log showing that machine 1 deleted "a".
    
    Fixes: 79ddbfa500b3 ("afs: Implement sillyrename for unlink and rename")
    Reported-by: Markus Suvanto <markus.suvanto@gmail.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Tested-by: Markus Suvanto <markus.suvanto@gmail.com>
    cc: linux-afs@lists.infradead.org
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=214217#c4 [1]
    Link: https://lore.kernel.org/r/163111668100.283156.3851669884664475428.stgit@warthog.procyon.org.uk/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d130b5fdd42254d92948d06347940276140c927e
Author: David Howells <dhowells@redhat.com>
Date:   Wed Sep 1 09:15:21 2021 +0100

    afs: Fix page leak
    
    [ Upstream commit 581b2027af0018944ba301d68e7af45c6d1128b5 ]
    
    There's a loop in afs_extend_writeback() that adds extra pages to a write
    we want to make to improve the efficiency of the writeback by making it
    larger.  This loop stops, however, if we hit a page we can't write back
    from immediately, but it doesn't get rid of the page ref we speculatively
    acquired.
    
    This was caused by the removal of the cleanup loop when the code switched
    from using find_get_pages_contig() to xarray scanning as the latter only
    gets a single page at a time, not a batch.
    
    Fix this by putting the page on a ref on an early break from the loop.
    Unfortunately, we can't just add that page to the pagevec we're employing
    as we'll go through that and add those pages to the RPC call.
    
    This was found by the generic/074 test.  It leaks ~4GiB of RAM each time it
    is run - which can be observed with "top".
    
    Fixes: e87b03f5830e ("afs: Prepare for use of THPs")
    Reported-by: Marc Dionne <marc.dionne@auristor.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-and-tested-by: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Link: https://lore.kernel.org/r/163111666635.283156.177701903478910460.stgit@warthog.procyon.org.uk/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f797c79fccd28016e054ea0ad842406413b41aa
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Wed Sep 1 14:43:50 2021 +0300

    regulator: qcom-rpmh-regulator: fix pm8009-1 ldo7 resource name
    
    [ Upstream commit 863580418bc82062083be854355f2213d3d804f5 ]
    
    Fix a typo in the pm8009 LDO7 declaration, it uses resource name ldo%s6
    instead of ldo%s7.
    
    Fixes: 951384cabc5d ("regulator: qcom-rpmh-regulator: add pm8009-1 chip revision")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Link: https://lore.kernel.org/r/20210901114350.1106073-1-dmitry.baryshkov@linaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f217b6c1e28ed0b353634ce4d92a155b80bd1671
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Thu Sep 16 15:50:23 2021 +0100

    comedi: Fix memory leak in compat_insnlist()
    
    commit bb509a6ffed2c8b0950f637ab5779aa818ed1596 upstream.
    
    `compat_insnlist()` handles the 32-bit version of the `COMEDI_INSNLIST`
    ioctl (whenwhen `CONFIG_COMPAT` is enabled).  It allocates memory to
    temporarily hold an array of `struct comedi_insn` converted from the
    32-bit version in user space.  This memory is only being freed if there
    is a fault while filling the array, otherwise it is leaked.
    
    Add a call to `kfree()` to fix the leak.
    
    Fixes: b8d47d881305 ("comedi: get rid of compat_alloc_user_space() mess in COMEDI_INSNLIST compat")
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: linux-staging@lists.linux.dev
    Cc: <stable@vger.kernel.org> # 5.13+
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20210916145023.157479-1-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b032354df6ed1148b19ff4b77b398b5f1d4fe30d
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Fri Sep 17 15:59:30 2021 +0100

    arm64: Mitigate MTE issues with str{n}cmp()
    
    commit 59a68d4138086c015ab8241c3267eec5550fbd44 upstream.
    
    As with strlen(), the patches importing the updated str{n}cmp()
    implementations were originally developed and tested before the
    advent of CONFIG_KASAN_HW_TAGS, and have subsequently revealed
    not to be MTE-safe. Since in-kernel MTE is still a rather niche
    case, let it temporarily fall back to the generic C versions for
    correctness until we can figure out the best fix.
    
    Fixes: 758602c04409 ("arm64: Import latest version of Cortex Strings' strcmp")
    Fixes: 020b199bc70d ("arm64: Import latest version of Cortex Strings' strncmp")
    Cc: <stable@vger.kernel.org> # 5.14.x
    Reported-by: Branislav Rankov <branislav.rankov@arm.com>
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Link: https://lore.kernel.org/r/34dc4d12eec0adae49b0ac927df642ed10089d40.1631890770.git.robin.murphy@arm.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0375ec7559bac6bd635a1e03fcd1caf01414335d
Author: dann frazier <dann.frazier@canonical.com>
Date:   Thu Sep 23 08:50:02 2021 -0600

    arm64: Restore forced disabling of KPTI on ThunderX
    
    commit 22b70e6f2da0a4c8b1421b00cfc3016bc9d4d9d4 upstream.
    
    A noted side-effect of commit 0c6c2d3615ef ("arm64: Generate cpucaps.h")
    is that cpucaps are now sorted, changing the enumeration order. This
    assumed no dependencies between cpucaps, which turned out not to be true
    in one case. UNMAP_KERNEL_AT_EL0 currently needs to be processed after
    WORKAROUND_CAVIUM_27456. ThunderX systems are incompatible with KPTI, so
    unmap_kernel_at_el0() bails if WORKAROUND_CAVIUM_27456 is set. But because
    of the sorting, WORKAROUND_CAVIUM_27456 will not yet have been considered
    when unmap_kernel_at_el0() checks for it, so the kernel tries to
    run w/ KPTI - and quickly falls over.
    
    Because all ThunderX implementations have homogeneous CPUs, we can remove
    this dependency by just checking the current CPU for the erratum.
    
    Fixes: 0c6c2d3615ef ("arm64: Generate cpucaps.h")
    Cc: <stable@vger.kernel.org> # 5.13.x
    Signed-off-by: dann frazier <dann.frazier@canonical.com>
    Suggested-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Reviewed-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Reviewed-by: Mark Brown <broonie@kernel.org>
    Acked-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210923145002.3394558-1-dann.frazier@canonical.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eda7a025a58059f6f3bbd50751a3e9ae02e66dc7
Author: Mario Limonciello <mario.limonciello@amd.com>
Date:   Mon Sep 13 21:01:14 2021 -0500

    platform/x86: amd-pmc: Increase the response register timeout
    
    commit 3c3c8e88c8712bfe06cd10d7ca77a94a33610cd6 upstream.
    
    There have been reports of approximately a 0.9%-1.7% failure rate in SMU
    communication timeouts with s0i3 entry on some OEM designs.  Currently
    the design in amd-pmc is to try every 100us for up to 20ms.
    
    However the GPU driver which also communicates with the SMU using a
    mailbox register which the driver polls every 1us for up to 2000ms.
    In the GPU driver this was increased by commit 055162645a40 ("drm/amd/pm:
    increase time out value when sending msg to SMU")
    
    Increase the maximum timeout used by amd-pmc to 2000ms to match this
    behavior.  This has been shown to improve the stability for machines
    that randomly have failures.
    
    Cc: stable@kernel.org
    Reported-by: Julian Sikorski <belegdol@gmail.com>
    BugLink: https://gitlab.freedesktop.org/drm/amd/-/issues/1629
    Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
    Acked-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Link: https://lore.kernel.org/r/20210914020115.655-1-mario.limonciello@amd.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 449d6043c81d6a1edb6e4b1637c55c78b7ba338b
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Sep 17 12:12:04 2021 +0200

    net: hso: fix muxed tty registration
    
    commit e8f69b16ee776da88589b5271e3f46020efc8f6c upstream.
    
    If resource allocation and registration fail for a muxed tty device
    (e.g. if there are no more minor numbers) the driver should not try to
    deregister the never-registered (or already-deregistered) tty.
    
    Fix up the error handling to avoid dereferencing a NULL pointer when
    attempting to remove the character device.
    
    Fixes: 72dc1c096c70 ("HSO: add option hso driver")
    Cc: stable@vger.kernel.org      # 2.6.27
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 06a18e64256f7aecb5a27df02faa3568fcd3c105
Author: Lijo Lazar <lijo.lazar@amd.com>
Date:   Thu Sep 23 11:58:43 2021 +0800

    drm/amd/pm: Update intermediate power state for SI
    
    commit ab39d3cef526ba09c4c6923b4cd7e6ec1c5d4faa upstream.
    
    Update the current state as boot state during dpm initialization.
    During the subsequent initialization, set_power_state gets called to
    transition to the final power state. set_power_state refers to values
    from the current state and without current state populated, it could
    result in NULL pointer dereference.
    
    For ex: on platforms where PCI speed change is supported through ACPI
    ATCS method, the link speed of current state needs to be queried before
    deciding on changing to final power state's link speed. The logic to query
    ATCS-support was broken on certain platforms. The issue became visible
    when broken ATCS-support logic got fixed with commit
    f9b7f3703ff9 ("drm/amdgpu/acpi: make ATPX/ATCS structures global (v2)").
    
    Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1698
    
    Signed-off-by: Lijo Lazar <lijo.lazar@amd.com>
    Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
    Acked-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7ee7ccdc786fba0a8345412912f3f405f300573
Author: Naohiro Aota <naohiro.aota@wdc.com>
Date:   Mon Sep 6 23:06:42 2021 +0900

    scsi: sd_zbc: Ensure buffer size is aligned to SECTOR_SIZE
    
    commit 7215e909814fed7cda33c954943a4050d8348204 upstream.
    
    Reporting zones on a SCSI device sometimes fail with the following error:
    
    [76248.516390] ata16.00: invalid transfer count 131328
    [76248.523618] sd 15:0:0:0: [sda] REPORT ZONES start lba 536870912 failed
    
    The error (from drivers/ata/libata-scsi.c:ata_scsi_zbc_in_xlat()) indicates
    that buffer size is not aligned to SECTOR_SIZE.
    
    This happens when the __vmalloc() failed. Consider we are reporting 4096
    zones, then we will have "bufsize = roundup((4096 + 1) * 64,
    SECTOR_SIZE)" = (513 * 512) = 262656. Then, __vmalloc() failure halves
    the bufsize to 131328, which is no longer aligned to SECTOR_SIZE.
    
    Use rounddown() to ensure the size is always aligned to SECTOR_SIZE and fix
    the comment as well.
    
    Link: https://lore.kernel.org/r/20210906140642.2267569-1-naohiro.aota@wdc.com
    Fixes: 23a50861adda ("scsi: sd_zbc: Cleanup sd_zbc_alloc_report_buffer()")
    Cc: stable@vger.kernel.org # 5.5+
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Reviewed-by: Damien Le Moal <damien.lemoal@wdc.com>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Naohiro Aota <naohiro.aota@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21907692fbf3bc6c3a575399c7de1ac0a2fcb1ad
Author: Pali Rohár <pali@kernel.org>
Date:   Sat Sep 11 15:20:17 2021 +0200

    serial: mvebu-uart: fix driver's tx_empty callback
    
    commit 74e1eb3b4a1ef2e564b4bdeb6e92afe844e900de upstream.
    
    Driver's tx_empty callback should signal when the transmit shift register
    is empty. So when the last character has been sent.
    
    STAT_TX_FIFO_EMP bit signals only that HW transmit FIFO is empty, which
    happens when the last byte is loaded into transmit shift register.
    
    STAT_TX_EMP bit signals when the both HW transmit FIFO and transmit shift
    register are empty.
    
    So replace STAT_TX_FIFO_EMP check by STAT_TX_EMP in mvebu_uart_tx_empty()
    callback function.
    
    Fixes: 30530791a7a0 ("serial: mvebu-uart: initial support for Armada-3700 serial port")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Link: https://lore.kernel.org/r/20210911132017.25505-1-pali@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 590e6c408e3098cc1a6f504ade80aa150f42e18e
Author: Nishanth Menon <nm@ti.com>
Date:   Fri Sep 3 00:05:50 2021 -0500

    serial: 8250: 8250_omap: Fix RX_LVL register offset
    
    commit 79e9e30a9292a62d25ab75488d3886108db1eaad upstream.
    
    Commit b67e830d38fa ("serial: 8250: 8250_omap: Fix possible interrupt
    storm on K3 SoCs") introduced fixup including a register read to
    RX_LVL, however, we should be using word offset than byte offset
    since our registers are on 4 byte boundary (port.regshift = 2) for
    8250_omap.
    
    Fixes: b67e830d38fa ("serial: 8250: 8250_omap: Fix possible interrupt storm on K3 SoCs")
    Cc: stable <stable@vger.kernel.org>
    Cc: Jan Kiszka <jan.kiszka@siemens.com>
    Cc: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Link: https://lore.kernel.org/r/20210903050550.29050-1-nm@ti.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 807ac762afee3b88f17354327c74d986e7489b8a
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Thu Sep 9 12:11:59 2021 +0530

    xhci: Set HCD flag to defer primary roothub registration
    
    commit b7a0a792f864583207c593b50fd1b752ed89f4c1 upstream.
    
    Set "HCD_FLAG_DEFER_RH_REGISTER" to hcd->flags in xhci_run() to defer
    registering primary roothub in usb_add_hcd(). This will make sure both
    primary roothub and secondary roothub will be registered along with the
    second HCD. This is required for cold plugged USB devices to be detected
    in certain PCIe USB cards (like Inateck USB card connected to AM64 EVM
    or J7200 EVM).
    
    CC: stable@vger.kernel.org # 5.4+
    Suggested-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Tested-by: Chris Chiu <chris.chiu@canonical.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Link: https://lore.kernel.org/r/20210909064200.16216-3-kishon@ti.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8f91342dc0ee344a9249786e180e7acd00a04ac
Author: Qu Wenruo <wqu@suse.com>
Date:   Thu Sep 16 20:43:29 2021 +0800

    btrfs: prevent __btrfs_dump_space_info() to underflow its free space
    
    commit 0619b7901473c380abc05d45cf9c70bee0707db3 upstream.
    
    It's not uncommon where __btrfs_dump_space_info() gets called
    under over-commit situations.
    
    In that case free space would underflow as total allocated space is not
    enough to handle all the over-committed space.
    
    Such underflow values can sometimes cause confusion for users enabled
    enospc_debug mount option, and takes some seconds for developers to
    convert the underflow value to signed result.
    
    Just output the free space as s64 to avoid such problem.
    
    Reported-by: Eli V <eliventer@gmail.com>
    Link: https://lore.kernel.org/linux-btrfs/CAJtFHUSy4zgyhf-4d9T+KdJp9w=UgzC2A0V=VtmaeEpcGgm1-Q@mail.gmail.com/
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9d32ec26e7f01d1af13bdc687f586362546aa25
Author: Ido Schimmel <idosch@nvidia.com>
Date:   Fri Sep 17 16:02:18 2021 +0300

    nexthop: Fix division by zero while replacing a resilient group
    
    commit 563f23b002534176f49524b5ca0e1d94d8906c40 upstream.
    
    The resilient nexthop group torture tests in fib_nexthop.sh exposed a
    possible division by zero while replacing a resilient group [1]. The
    division by zero occurs when the data path sees a resilient nexthop
    group with zero buckets.
    
    The tests replace a resilient nexthop group in a loop while traffic is
    forwarded through it. The tests do not specify the number of buckets
    while performing the replacement, resulting in the kernel allocating a
    stub resilient table (i.e, 'struct nh_res_table') with zero buckets.
    
    This table should never be visible to the data path, but the old nexthop
    group (i.e., 'oldg') might still be used by the data path when the stub
    table is assigned to it.
    
    Fix this by only assigning the stub table to the old nexthop group after
    making sure the group is no longer used by the data path.
    
    Tested with fib_nexthops.sh:
    
    Tests passed: 222
    Tests failed:   0
    
    [1]
     divide error: 0000 [#1] PREEMPT SMP KASAN
     CPU: 0 PID: 1850 Comm: ping Not tainted 5.14.0-custom-10271-ga86eb53057fe #1107
     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-4.fc34 04/01/2014
     RIP: 0010:nexthop_select_path+0x2d2/0x1a80
    [...]
     Call Trace:
      fib_select_multipath+0x79b/0x1530
      fib_select_path+0x8fb/0x1c10
      ip_route_output_key_hash_rcu+0x1198/0x2da0
      ip_route_output_key_hash+0x190/0x340
      ip_route_output_flow+0x21/0x120
      raw_sendmsg+0x91d/0x2e10
      inet_sendmsg+0x9e/0xe0
      __sys_sendto+0x23d/0x360
      __x64_sys_sendto+0xe1/0x1b0
      do_syscall_64+0x35/0x80
      entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Cc: stable@vger.kernel.org
    Fixes: 283a72a5599e ("nexthop: Add implementation of resilient next-hop groups")
    Signed-off-by: Ido Schimmel <idosch@nvidia.com>
    Reviewed-by: Petr Machata <petrm@nvidia.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1854b6cad5f405b5b27e6825e018a977106cec7
Author: Gao Xiang <hsiangkao@linux.alibaba.com>
Date:   Tue Sep 21 22:35:30 2021 +0800

    erofs: fix up erofs_lookup tracepoint
    
    commit 93368aab0efc87288cac65e99c9ed2e0ffc9e7d0 upstream.
    
    Fix up a misuse that the filename pointer isn't always valid in
    the ring buffer, and we should copy the content instead.
    
    Link: https://lore.kernel.org/r/20210921143531.81356-1-hsiangkao@linux.alibaba.com
    Fixes: 13f06f48f7bf ("staging: erofs: support tracepoint")
    Cc: stable@vger.kernel.org # 4.19+
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 336dabf9938641377d7ee84da1a3fd18c7fba8b4
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Sep 1 13:30:26 2021 -0700

    KVM: rseq: Update rseq when processing NOTIFY_RESUME on xfer to KVM guest
    
    commit 8646e53633f314e4d746a988240d3b951a92f94a upstream.
    
    Invoke rseq's NOTIFY_RESUME handler when processing the flag prior to
    transferring to a KVM guest, which is roughly equivalent to an exit to
    userspace and processes many of the same pending actions.  While the task
    cannot be in an rseq critical section as the KVM path is reachable only
    by via ioctl(KVM_RUN), the side effects that apply to rseq outside of a
    critical section still apply, e.g. the current CPU needs to be updated if
    the task is migrated.
    
    Clearing TIF_NOTIFY_RESUME without informing rseq can lead to segfaults
    and other badness in userspace VMMs that use rseq in combination with KVM,
    e.g. due to the CPU ID being stale after task migration.
    
    Fixes: 72c3c0fe54a3 ("x86/kvm: Use generic xfer to guest work function")
    Reported-by: Peter Foley <pefoley@google.com>
    Bisected-by: Doug Evans <dje@google.com>
    Acked-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Cc: Shakeel Butt <shakeelb@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210901203030.1292304-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fc198f415dee070a1de957bb5bf5921d8df3499
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Sep 6 21:35:48 2021 +0900

    mcb: fix error handling in mcb_alloc_bus()
    
    commit 25a1433216489de4abc889910f744e952cb6dbae upstream.
    
    There are two bugs:
    1) If ida_simple_get() fails then this code calls put_device(carrier)
       but we haven't yet called get_device(carrier) and probably that
       leads to a use after free.
    2) After device_initialize() then we need to use put_device() to
       release the bus.  This will free the internal resources tied to the
       device and call mcb_free_bus() which will free the rest.
    
    Fixes: 5d9e2ab9fea4 ("mcb: Implement bus->dev.release callback")
    Fixes: 18d288198099 ("mcb: Correctly initialize the bus's device")
    Cc: stable@vger.kernel.org
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Johannes Thumshirn <jth@kernel.org>
    Link: https://lore.kernel.org/r/32e160cf6864ce77f9d62948338e24db9fd8ead9.1630931319.git.johannes.thumshirn@wdc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9dfda47040e1fbb74b96700b23ce12c9c97b1b6c
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Sep 8 21:55:56 2021 +0200

    misc: genwqe: Fixes DMA mask setting
    
    commit 8d753db5c227d1f403c4bc9cae4ae02c862413cd upstream.
    
    Commit 505b08777d78 ("misc: genwqe: Use dma_set_mask_and_coherent to simplify code")
    changed the logic in the code.
    
    Instead of a ||, a && should have been used to keep the code the same.
    
    Fixes: 505b08777d78 ("misc: genwqe: Use dma_set_mask_and_coherent to simplify code")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Link: https://lore.kernel.org/r/be49835baa8ba6daba5813b399edf6300f7fdbda.1631130862.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e9a41195afe6c855a6d45ffe2a0830d69e27da3
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Sep 17 13:57:36 2021 +0200

    misc: bcm-vk: fix tty registration race
    
    commit d9d1232b48344c6c72dbdf89fae1e7638e5df757 upstream.
    
    Make sure to set the tty class-device driver data before registering the
    tty to avoid having a racing open() dereference a NULL pointer.
    
    Fixes: 91ca10d6fa07 ("misc: bcm-vk: add ttyVK support")
    Cc: stable@vger.kernel.org      # 5.12
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210917115736.5816-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e50c102f362e0ba7c61af30652d19b4eaecd0495
Author: Slark Xiao <slark_xiao@163.com>
Date:   Fri Sep 17 19:01:06 2021 +0800

    USB: serial: option: add device id for Foxconn T99W265
    
    commit 9e3eed534f8235a4a596a9dae5b8a6425d81ea1a upstream.
    
    Adding support for Foxconn device T99W265 for enumeration with
    PID 0xe0db.
    
    usb-devices output for 0xe0db
    T:  Bus=04 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 19 Spd=5000 MxCh= 0
    D:  Ver= 3.20 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  1
    P:  Vendor=0489 ProdID=e0db Rev=05.04
    S:  Manufacturer=Microsoft
    S:  Product=Generic Mobile Broadband Adapter
    S:  SerialNumber=6c50f452
    C:  #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=0e Prot=00 Driver=cdc_mbim
    I:  If#=0x1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=40 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    I:  If#=0x4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=30 Driver=option
    
    if0/1: MBIM, if2:Diag, if3:GNSS, if4: Modem
    
    Signed-off-by: Slark Xiao <slark_xiao@163.com>
    Link: https://lore.kernel.org/r/20210917110106.9852-1-slark_xiao@163.com
    [ johan: use USB_DEVICE_INTERFACE_CLASS(), amend comment ]
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 924956f203dbf578e5fb82d25d219896ab0bd2d5
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Fri Sep 17 11:18:48 2021 +0200

    USB: serial: option: remove duplicate USB device ID
    
    commit 1ca200a8c6f079950a04ea3c3380fe8cf78e95a2 upstream.
    
    The device ZTE 0x0094 is already on the list.
    
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Fixes: b9e44fe5ecda ("USB: option: cleanup zte 3g-dongle's pid in option.c")
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bb92efc9bd5b5c170f1971874f0e7e2e48ca44c
Author: Carlo Lobrano <c.lobrano@gmail.com>
Date:   Fri Sep 3 14:39:13 2021 +0200

    USB: serial: option: add Telit LN920 compositions
    
    commit 7bb057134d609b9c038a00b6876cf0d37d0118ce upstream.
    
    This patch adds the following Telit LN920 compositions:
    
    0x1060: tty, adb, rmnet, tty, tty, tty, tty
    0x1061: tty, adb, mbim, tty, tty, tty, tty
    0x1062: rndis, tty, adb, tty, tty, tty, tty
    0x1063: tty, adb, ecm, tty, tty, tty, tty
    
    Signed-off-by: Carlo Lobrano <c.lobrano@gmail.com>
    Link: https://lore.kernel.org/r/20210903123913.1086513-1-c.lobrano@gmail.com
    Reviewed-by: Daniele Palmas <dnlplm@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8db009cb6655818bfba263ba7a967ded8b9716bc
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Fri Sep 17 11:18:47 2021 +0200

    USB: serial: mos7840: remove duplicated 0xac24 device ID
    
    commit 211f323768a25b30c106fd38f15a0f62c7c2b5f4 upstream.
    
    0xac24 device ID is already defined and used via
    BANDB_DEVICE_ID_USO9ML2_4.  Remove the duplicate from the list.
    
    Fixes: 27f1281d5f72 ("USB: serial: Extra device/vendor ID for mos7840 driver")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9ce1992a33861b61e9617f578c1f27174bd285f
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Thu Sep 9 12:11:58 2021 +0530

    usb: core: hcd: Add support for deferring roothub registration
    
    commit 58877b0824da15698bd85a0a9dbfa8c354e6ecb7 upstream.
    
    It has been observed with certain PCIe USB cards (like Inateck connected
    to AM64 EVM or J7200 EVM) that as soon as the primary roothub is
    registered, port status change is handled even before xHC is running
    leading to cold plug USB devices not detected. For such cases, registering
    both the root hubs along with the second HCD is required. Add support for
    deferring roothub registration in usb_add_hcd(), so that both primary and
    secondary roothubs are registered along with the second HCD.
    
    CC: stable@vger.kernel.org # 5.4+
    Suggested-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Tested-by: Chris Chiu <chris.chiu@canonical.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Link: https://lore.kernel.org/r/20210909064200.16216-2-kishon@ti.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fff3d5cd436a22e5b4970729abf87b274c2e22b
Author: Pawel Laszczak <pawell@cadence.com>
Date:   Tue Sep 7 08:26:19 2021 +0200

    usb: cdns3: fix race condition before setting doorbell
    
    commit b69ec50b3e55c4b2a85c8bc46763eaf330605847 upstream.
    
    For DEV_VER_V3 version there exist race condition between clearing
    ep_sts.EP_STS_TRBERR and setting ep_cmd.EP_CMD_DRDY bit.
    Setting EP_CMD_DRDY will be ignored by controller when
    EP_STS_TRBERR is set. So, between these two instructions we have
    a small time gap in which the EP_STSS_TRBERR can be set. In such case
    the transfer will not start after setting doorbell.
    
    Fixes: 7733f6c32e36 ("usb: cdns3: Add Cadence USB3 DRD Driver")
    cc: <stable@vger.kernel.org> # 5.12.x
    Tested-by: Aswath Govindraju <a-govindraju@ti.com>
    Reviewed-by: Aswath Govindraju <a-govindraju@ti.com>
    Signed-off-by: Pawel Laszczak <pawell@cadence.com>
    Link: https://lore.kernel.org/r/20210907062619.34622-1-pawell@gli-login.cadence.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41d5aff380c0551abc741da2c6f2cf0b7b82e94c
Author: Li Jun <jun.li@nxp.com>
Date:   Wed Sep 8 10:28:19 2021 +0800

    usb: dwc3: core: balance phy init and exit
    
    commit 8cfac9a6744fcb143cb3e94ce002f09fd17fadbb upstream.
    
    After we start to do core soft reset while usb role switch,
    the phy init is invoked at every switch to device mode, but
    its counter part de-init is missing, this causes the actual
    phy init can not be done when we really want to re-init phy
    like system resume, because the counter maintained by phy
    core is not 0. considering phy init is actually redundant for
    role switch, so move out the phy init from core soft reset to
    dwc3 core init where is the only place required.
    
    Fixes: f88359e1588b ("usb: dwc3: core: Do core softreset when switch mode")
    Cc: <stable@vger.kernel.org>
    Tested-by: faqiang.zhu <faqiang.zhu@nxp.com>
    Tested-by: John Stultz <john.stultz@linaro.org> #HiKey960
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Li Jun <jun.li@nxp.com>
    Link: https://lore.kernel.org/r/1631068099-13559-1-git-send-email-jun.li@nxp.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9f0252e45081b67fea5703cc3a9f3ce1d93dd33
Author: Julian Sikorski <belegdol@gmail.com>
Date:   Mon Sep 13 20:14:55 2021 +0200

    Re-enable UAS for LaCie Rugged USB3-FW with fk quirk
    
    commit ce1c42b4dacfe7d71c852d8bf3371067ccba865c upstream.
    
    Further testing has revealed that LaCie Rugged USB3-FW does work with
    uas as long as US_FL_NO_REPORT_OPCODES and US_FL_NO_SAME are enabled.
    
    Link: https://lore.kernel.org/linux-usb/2167ea48-e273-a336-a4e0-10a4e883e75e@redhat.com/
    Cc: stable <stable@vger.kernel.org>
    Suggested-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Julian Sikorski <belegdol+github@gmail.com>
    Link: https://lore.kernel.org/r/20210913181454.7365-1-belegdol+github@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b557040915005c5c989418ad01d8d35a88318e48
Author: Rui Miguel Silva <rui.silva@linaro.org>
Date:   Tue Jul 27 11:05:15 2021 +0100

    usb: isp1760: do not sleep in field register poll
    
    commit 41f673183862a183d4ea0522c045fabfbd1b28c8 upstream.
    
    When polling for a setup or clear of a register field we were sleeping
    in atomic context but using a very tight sleep interval.
    
    Since the use cases for this poll mechanism are only in setup and
    stop paths, and in practice this poll is not used most of the times
    but needs to be there to comply to hardware setup times, remove the
    sleep time and make the poll loop tighter.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Rui Miguel Silva <rui.silva@linaro.org>
    Link: https://lore.kernel.org/r/20210727100516.4190681-3-rui.silva@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9872ff6fdce8b229f01993b611b5d1719cb70ff1
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Sep 6 14:45:38 2021 +0200

    staging: greybus: uart: fix tty use after free
    
    commit 92dc0b1f46e12cfabd28d709bb34f7a39431b44f upstream.
    
    User space can hold a tty open indefinitely and tty drivers must not
    release the underlying structures until the last user is gone.
    
    Switch to using the tty-port reference counter to manage the life time
    of the greybus tty state to avoid use after free after a disconnect.
    
    Fixes: a18e15175708 ("greybus: more uart work")
    Cc: stable@vger.kernel.org      # 4.9
    Reviewed-by: Alex Elder <elder@linaro.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210906124538.22358-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0e001ae606020e64dad0fda1e298da03d7ff6a1
Author: Li Li <dualli@google.com>
Date:   Fri Sep 10 09:42:10 2021 -0700

    binder: fix freeze race
    
    commit b564171ade70570b7f335fa8ed17adb28409e3ac upstream.
    
    Currently cgroup freezer is used to freeze the application threads, and
    BINDER_FREEZE is used to freeze the corresponding binder interface.
    There's already a mechanism in ioctl(BINDER_FREEZE) to wait for any
    existing transactions to drain out before actually freezing the binder
    interface.
    
    But freezing an app requires 2 steps, freezing the binder interface with
    ioctl(BINDER_FREEZE) and then freezing the application main threads with
    cgroupfs. This is not an atomic operation. The following race issue
    might happen.
    
    1) Binder interface is frozen by ioctl(BINDER_FREEZE);
    2) Main thread A initiates a new sync binder transaction to process B;
    3) Main thread A is frozen by "echo 1 > cgroup.freeze";
    4) The response from process B reaches the frozen thread, which will
    unexpectedly fail.
    
    This patch provides a mechanism to check if there's any new pending
    transaction happening between ioctl(BINDER_FREEZE) and freezing the
    main thread. If there's any, the main thread freezing operation can
    be rolled back to finish the pending transaction.
    
    Furthermore, the response might reach the binder driver before the
    rollback actually happens. That will still cause failed transaction.
    
    As the other process doesn't wait for another response of the response,
    the response transaction failure can be fixed by treating the response
    transaction like an oneway/async one, allowing it to reach the frozen
    thread. And it will be consumed when the thread gets unfrozen later.
    
    NOTE: This patch reuses the existing definition of struct
    binder_frozen_status_info but expands the bit assignments of __u32
    member sync_recv.
    
    To ensure backward compatibility, bit 0 of sync_recv still indicates
    there's an outstanding sync binder transaction. This patch adds new
    information to bit 1 of sync_recv, indicating the binder transaction
    happens exactly when there's a race.
    
    If an existing userspace app runs on a new kernel, a sync binder call
    will set bit 0 of sync_recv so ioctl(BINDER_GET_FROZEN_INFO) still
    return the expected value (true). The app just doesn't check bit 1
    intentionally so it doesn't have the ability to tell if there's a race.
    This behavior is aligned with what happens on an old kernel which
    doesn't set bit 1 at all.
    
    A new userspace app can 1) check bit 0 to know if there's a sync binder
    transaction happened when being frozen - same as before; and 2) check
    bit 1 to know if that sync binder transaction happened exactly when
    there's a race - a new information for rollback decision.
    
    the same time, confirmed the pending transactions succeeded.
    
    Fixes: 432ff1e91694 ("binder: BINDER_FREEZE ioctl")
    Acked-by: Todd Kjos <tkjos@google.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Li Li <dualli@google.com>
    Test: stress test with apps being frozen and initiating binder calls at
    Link: https://lore.kernel.org/r/20210910164210.2282716-2-dualli@chromium.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b95483d8d94b41fa31a84c1d86710b7907a37621
Author: Todd Kjos <tkjos@google.com>
Date:   Mon Aug 30 12:51:46 2021 -0700

    binder: make sure fd closes complete
    
    commit 5fdb55c1ac9585eb23bb2541d5819224429e103d upstream.
    
    During BC_FREE_BUFFER processing, the BINDER_TYPE_FDA object
    cleanup may close 1 or more fds. The close operations are
    completed using the task work mechanism -- which means the thread
    needs to return to userspace or the file object may never be
    dereferenced -- which can lead to hung processes.
    
    Force the binder thread back to userspace if an fd is closed during
    BC_FREE_BUFFER handling.
    
    Fixes: 80cd795630d6 ("binder: fix use-after-free due to ksys_close() during fdget()")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Martijn Coenen <maco@android.com>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Link: https://lore.kernel.org/r/20210830195146.587206-1-tkjos@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63239b0336b1dff4406b877468c4dde35bfab140
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Tue Aug 31 08:54:19 2021 +0200

    Revert "USB: bcma: Add a check for devm_gpiod_get"
    
    commit d91adc5322ab53df4b6d1989242bfb6c63163eb2 upstream.
    
    This reverts commit f3de5d857bb2362b00e2a8d4bc886cd49dcb66db.
    
    That commit broke USB on all routers that have USB always powered on and
    don't require toggling any GPIO. It's a majority of devices actually.
    
    The original code worked and seemed safe: vcc GPIO is optional and
    bcma_hci_platform_power_gpio() takes care of checking the pointer before
    using it.
    
    This revert fixes:
    [   10.801127] bcma_hcd: probe of bcma0:11 failed with error -2
    
    Fixes: f3de5d857bb2 ("USB: bcma: Add a check for devm_gpiod_get")
    Cc: stable <stable@vger.kernel.org>
    Cc: Chuhong Yuan <hslester96@gmail.com>
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Link: https://lore.kernel.org/r/20210831065419.18371-1-zajec5@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af5947c5157db29f69c7d2acc761f92308c34341
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Sep 7 10:23:18 2021 +0200

    USB: cdc-acm: fix minor-number release
    
    commit 91fac0741d4817945c6ee0a17591421e7f5ecb86 upstream.
    
    If the driver runs out of minor numbers it would release minor 0 and
    allow another device to claim the minor while still in use.
    
    Fortunately, registering the tty class device of the second device would
    fail (with a stack dump) due to the sysfs name collision so no memory is
    leaked.
    
    Fixes: cae2bc768d17 ("usb: cdc-acm: Decrement tty port's refcount if probe() fail")
    Cc: stable@vger.kernel.org      # 4.19
    Cc: Jaejoong Kim <climbbb.kim@gmail.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210907082318.7757-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 166f843bb68cbd0ebba588281f1269292af9d20c
Author: Uwe Brandt <uwe.brandt@gmail.com>
Date:   Tue Sep 21 19:54:46 2021 +0200

    USB: serial: cp210x: add ID for GW Instek GDM-834x Digital Multimeter
    
    commit 3bd18ba7d859eb1fbef3beb1e80c24f6f7d7596c upstream.
    
    Add the USB serial device ID for the GW Instek GDM-834x Digital Multimeter.
    
    Signed-off-by: Uwe Brandt <uwe.brandt@gmail.com>
    Link: https://lore.kernel.org/r/YUxFl3YUCPGJZd8Y@hovoldconsulting.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a377e1d7ac94311f4094c35aecede58234d25e2
Author: Ondrej Zary <linux@zary.sk>
Date:   Mon Sep 13 23:01:06 2021 +0200

    usb-storage: Add quirk for ScanLogic SL11R-IDE older than 2.6c
    
    commit b55d37ef6b7db3eda9b4495a8d9b0a944ee8c67d upstream.
    
    ScanLogic SL11R-IDE with firmware older than 2.6c (the latest one) has
    broken tag handling, preventing the device from working at all:
    usb 1-1: new full-speed USB device number 2 using uhci_hcd
    usb 1-1: New USB device found, idVendor=04ce, idProduct=0002, bcdDevice= 2.60
    usb 1-1: New USB device strings: Mfr=1, Product=1, SerialNumber=0
    usb 1-1: Product: USB Device
    usb 1-1: Manufacturer: USB Device
    usb-storage 1-1:1.0: USB Mass Storage device detected
    scsi host2: usb-storage 1-1:1.0
    usbcore: registered new interface driver usb-storage
    usb 1-1: reset full-speed USB device number 2 using uhci_hcd
    usb 1-1: reset full-speed USB device number 2 using uhci_hcd
    usb 1-1: reset full-speed USB device number 2 using uhci_hcd
    usb 1-1: reset full-speed USB device number 2 using uhci_hcd
    
    Add US_FL_BULK_IGNORE_TAG to fix it. Also update my e-mail address.
    
    2.6c is the only firmware that claims Linux compatibility.
    The firmware can be upgraded using ezotgdbg utility:
    https://github.com/asciilifeform/ezotgdbg
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Ondrej Zary <linux@zary.sk>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210913210106.12717-1-linux@zary.sk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 842f8bde1ed922dd8e3ba3e013352f4055ae4e85
Author: Jan Beulich <jbeulich@suse.com>
Date:   Mon Sep 20 18:15:11 2021 +0200

    xen/x86: fix PV trap handling on secondary processors
    
    commit 0594c58161b6e0f3da8efa9c6e3d4ba52b652717 upstream.
    
    The initial observation was that in PV mode under Xen 32-bit user space
    didn't work anymore. Attempts of system calls ended in #GP(0x402). All
    of the sudden the vector 0x80 handler was not in place anymore. As it
    turns out up to 5.13 redundant initialization did occur: Once from
    cpu_initialize_context() (through its VCPUOP_initialise hypercall) and a
    2nd time while each CPU was brought fully up. This 2nd initialization is
    now gone, uncovering that the 1st one was flawed: Unlike for the
    set_trap_table hypercall, a full virtual IDT needs to be specified here;
    the "vector" fields of the individual entries are of no interest. With
    many (kernel) IDT entries still(?) (i.e. at that point at least) empty,
    the syscall vector 0x80 ended up in slot 0x20 of the virtual IDT, thus
    becoming the domain's handler for vector 0x20.
    
    Make xen_convert_trap_info() fit for either purpose, leveraging the fact
    that on the xen_copy_trap_info() path the table starts out zero-filled.
    This includes moving out the writing of the sentinel, which would also
    have lead to a buffer overrun in the xen_copy_trap_info() case if all
    (kernel) IDT entries were populated. Convert the writing of the sentinel
    to clearing of the entire table entry rather than just the address
    field.
    
    (I didn't bother trying to identify the commit which uncovered the issue
    in 5.14; the commit named below is the one which actually introduced the
    bad code.)
    
    Fixes: f87e4cac4f4e ("xen: SMP guest support")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/7a266932-092e-b68f-f2bb-1473b61adc6e@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b73af491ffeb5843aeb89676259da23f7c4565e
Author: Steve French <stfrench@microsoft.com>
Date:   Thu Sep 23 19:18:37 2021 -0500

    cifs: fix incorrect check for null pointer in header_assemble
    
    commit 9ed38fd4a15417cac83967360cf20b853bfab9b6 upstream.
    
    Although very unlikely that the tlink pointer would be null in this case,
    get_next_mid function can in theory return null (but not an error)
    so need to check for null (not for IS_ERR, which can not be returned
    here).
    
    Address warning:
    
            fs/smbfs_client/connect.c:2392 cifs_match_super()
            warn: 'tlink' isn't an ERR_PTR
    
    Pointed out by Dan Carpenter via smatch code analysis tool
    
    CC: stable@vger.kernel.org
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f6c7aff21f81ae8856da1f63847d1362d523409
Author: Rohith Surabattula <rohiths@microsoft.com>
Date:   Fri Sep 17 17:29:42 2021 +0000

    cifs: Fix soft lockup during fsstress
    
    commit 71826b068884050d5fdd37fda857ba1539c513d3 upstream.
    
    Below traces are observed during fsstress and system got hung.
    [  130.698396] watchdog: BUG: soft lockup - CPU#6 stuck for 26s!
    
    Cc: stable@vger.kernel.org # 5.13+
    Signed-off-by: Rohith Surabattula <rohiths@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6344bc6cd2b446fb8cf83f979b1ca63cae647926
Author: Rohith Surabattula <rohiths@microsoft.com>
Date:   Fri Sep 17 16:50:40 2021 -0500

    cifs: Not to defer close on file when lock is set
    
    commit 35866f3f779aef5e7ba84e4d1023fe2e2a0e219e upstream.
    
    Close file immediately when lock is set.
    
    Cc: stable@vger.kernel.org # 5.13+
    Signed-off-by: Rohith Surabattula <rohiths@microsoft.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14582e4d65dc26a799d870e0fa9513c30c9cad3d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 16 16:57:37 2021 +0300

    usb: musb: tusb6010: uninitialized data in tusb_fifo_write_unaligned()
    
    commit 517c7bf99bad3d6b9360558414aae634b7472d80 upstream.
    
    This is writing to the first 1 - 3 bytes of "val" and then writing all
    four bytes to musb_writel().  The last byte is always going to be
    garbage.  Zero out the last bytes instead.
    
    Fixes: 550a7375fe72 ("USB: Add MUSB and TUSB support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210916135737.GI25094@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11453ccd21b10786742e19da513fc403cfbaadb6
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Sat Sep 11 22:58:30 2021 +0400

    usb: dwc2: gadget: Fix ISOC transfer complete handling for DDMA
    
    commit dbe2518b2d8eabffa74dbf7d9fdd7dacddab7fc0 upstream.
    
    When last descriptor in a descriptor list completed with XferComplete
    interrupt, core switching to handle next descriptor and assert BNA
    interrupt. Both these interrupts are set while dwc2_hsotg_epint()
    handler called. Each interrupt should be handled separately: first
    XferComplete interrupt then BNA interrupt, otherwise last completed
    transfer will not be giveback to function driver as completed
    request.
    
    Fixes: 729cac693eec ("usb: dwc2: Change ISOC DDMA flow")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Link: https://lore.kernel.org/r/a36981accc26cd674c5d8f8da6164344b94ec1fe.1631386531.git.Minas.Harutyunyan@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eba598563d06cc0b7e19be73ee931e77bf3e90aa
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Thu Sep 9 14:45:15 2021 +0400

    usb: dwc2: gadget: Fix ISOC flow for BDMA and Slave
    
    commit 91bb163e1e4f88092f50dfaa5a816b658753e4b2 upstream.
    
    According USB spec each ISOC transaction should be performed in a
    designated for that transaction interval. On bus errors or delays
    in operating system scheduling of client software can result in no
    packet being transferred for a (micro)frame. An error indication
    should be returned as status to the client software in such a case.
    
    Current implementation in case of missed/dropped interval send same
    data in next possible interval instead of reporting missed isoc.
    
    This fix complete requests with -ENODATA if interval elapsed.
    
    HSOTG core in BDMA and Slave modes haven't HW support for
    (micro)frames tracking, this is why SW should care about tracking
    of (micro)frames. Because of that method and consider operating
    system scheduling delays, added few additional checking's of elapsed
    target (micro)frame:
    1. Immediately before enabling EP to start transfer.
    2. With any transfer completion interrupt.
    3. With incomplete isoc in/out interrupt.
    4. With EP disabled interrupt because of incomplete transfer.
    5. With OUT token received while EP disabled interrupt (for OUT
    transfers).
    6. With NAK replied to IN token interrupt (for IN transfers).
    
    As part of ISOC flow, additionally fixed 'current' and 'target' frame
    calculation functions. In HS mode SOF limits provided by DSTS register
    is 0x3fff, but in non HS mode this limit is 0x7ff.
    
    Tested by internal tool which also using for dwc3 testing.
    
    Signed-off-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/95d1423adf4b0f68187c9894820c4b7e964a3f7f.1631175721.git.Minas.Harutyunyan@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40fe83550d86742c2b664462ccb42075d90cbbd3
Author: Pavel Hofman <pavel.hofman@ivitera.com>
Date:   Mon Sep 6 15:08:22 2021 +0200

    usb: gadget: u_audio: EP-OUT bInterval in fback frequency
    
    commit f5dfd98a80ff8d50cf4ae2820857d7f5a46cbab9 upstream.
    
    The patch increases the bitshift in feedback frequency
    calculation with EP-OUT bInterval value.
    
    Tests have revealed that Win10 and OSX UAC2 drivers require
    the feedback frequency to be based on the actual packet
    interval instead of on the USB2 microframe. Otherwise they
    ignore the feedback value. Linux snd-usb-audio driver
    detects the applied bitshift automatically.
    
    Tested-by: Henrik Enquist <henrik.enquist@gmail.com>
    Signed-off-by: Pavel Hofman <pavel.hofman@ivitera.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210906130822.12256-1-pavel.hofman@ivitera.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29517795c4fe35078350276881423631301b75a2
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Sep 6 12:42:21 2021 +0300

    usb: gadget: r8a66597: fix a loop in set_feature()
    
    commit 17956b53ebff6a490baf580a836cbd3eae94892b upstream.
    
    This loop is supposed to loop until if reads something other than
    CS_IDST or until it times out after 30,000 attempts.  But because of
    the || vs && bug, it will never time out and instead it will loop a
    minimum of 30,000 times.
    
    This bug is quite old but the code is only used in USB_DEVICE_TEST_MODE
    so it probably doesn't affect regular usage.
    
    Fixes: 96fe53ef5498 ("usb: gadget: r8a66597-udc: add support for TEST_MODE")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20210906094221.GA10957@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c93c402c467db1cd2a219e182a19e345f46be6a
Author: Chen Jun <chenjun102@huawei.com>
Date:   Fri Sep 24 15:44:06 2021 -0700

    mm: fix uninitialized use in overcommit_policy_handler
    
    commit bcbda81020c3ee77e2c098cadf3e84f99ca3de17 upstream.
    
    We get an unexpected value of /proc/sys/vm/overcommit_memory after
    running the following program:
    
      int main()
      {
          int fd = open("/proc/sys/vm/overcommit_memory", O_RDWR);
          write(fd, "1", 1);
          write(fd, "2", 1);
          close(fd);
      }
    
    write(fd, "2", 1) will pass *ppos = 1 to proc_dointvec_minmax.
    proc_dointvec_minmax will return 0 without setting new_policy.
    
      t.data = &new_policy;
      ret = proc_dointvec_minmax(&t, write, buffer, lenp, ppos)
          -->do_proc_dointvec
             -->__do_proc_dointvec
                  if (write) {
                    if (proc_first_pos_non_zero_ignore(ppos, table))
                      goto out;
    
      sysctl_overcommit_memory = new_policy;
    
    so sysctl_overcommit_memory will be set to an uninitialized value.
    
    Check whether new_policy has been changed by proc_dointvec_minmax.
    
    Link: https://lkml.kernel.org/r/20210923020524.13289-1-chenjun102@huawei.com
    Fixes: 56f3547bfa4d ("mm: adjust vm_committed_as_batch according to vm overcommit policy")
    Signed-off-by: Chen Jun <chenjun102@huawei.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Feng Tang <feng.tang@intel.com>
    Reviewed-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Cc: Rui Xiang <rui.xiang@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7032c95c6e8ddedebbe307a8011d61cc832f01c
Author: Weizhao Ouyang <o451686892@gmail.com>
Date:   Fri Sep 24 15:43:50 2021 -0700

    mm/debug: sync up MR_CONTIG_RANGE and MR_LONGTERM_PIN
    
    commit a4ce73910427e960b2c7f4d83229153c327d0ee7 upstream.
    
    Sync up MR_CONTIG_RANGE and MR_LONGTERM_PIN to migrate_reason_names.
    
    Link: https://lkml.kernel.org/r/20210921064553.293905-2-o451686892@gmail.com
    Fixes: 310253514bbf ("mm/migrate: rename migration reason MR_CMA to MR_CONTIG_RANGE")
    Fixes: d1e153fea2a8 ("mm/gup: migrate pinned pages out of movable zone")
    Signed-off-by: Weizhao Ouyang <o451686892@gmail.com>
    Reviewed-by: "Huang, Ying" <ying.huang@intel.com>
    Reviewed-by: John Hubbard <jhubbard@nvidia.com>
    Cc: Anshuman Khandual <khandual@linux.vnet.ibm.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Pavel Tatashin <pasha.tatashin@soleen.com>
    Cc: Yang Shi <yang.shi@linux.alibaba.com>
    Cc: Zi Yan <ziy@nvidia.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Mina Almasry <almasrymina@google.com>
    Cc: "Matthew Wilcox (Oracle)" <willy@infradead.org>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Wei Xu <weixugc@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ad0f5ca9ccd0d1af16c99c33f011520a65b027f
Author: Wengang Wang <wen.gang.wang@oracle.com>
Date:   Fri Sep 24 15:43:35 2021 -0700

    ocfs2: drop acl cache for directories too
    
    commit 9c0f0a03e386f4e1df33db676401547e1b7800c6 upstream.
    
    ocfs2_data_convert_worker() is currently dropping any cached acl info
    for FILE before down-converting meta lock.  It should also drop for
    DIRECTORY.  Otherwise the second acl lookup returns the cached one (from
    VFS layer) which could be already stale.
    
    The problem we are seeing is that the acl changes on one node doesn't
    get refreshed on other nodes in the following case:
    
      Node 1                    Node 2
      --------------            ----------------
      getfacl dir1
    
                                getfacl dir1    <-- this is OK
    
      setfacl -m u:user1:rwX dir1
      getfacl dir1   <-- see the change for user1
    
                                getfacl dir1    <-- can't see change for user1
    
    Link: https://lkml.kernel.org/r/20210903012631.6099-1-wen.gang.wang@oracle.com
    Signed-off-by: Wengang Wang <wen.gang.wang@oracle.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0414a521d1eaf00eacfc20ae9a47797d11faae1b
Author: Naoya Horiguchi <naoya.horiguchi@nec.com>
Date:   Fri Sep 24 15:43:20 2021 -0700

    mm, hwpoison: add is_free_buddy_page() in HWPoisonHandlable()
    
    commit acfa299a4a63a58e5e81a87cb16798f20d35f7d7 upstream.
    
    Commit fcc00621d88b ("mm/hwpoison: retry with shake_page() for
    unhandlable pages") changed the return value of __get_hwpoison_page() to
    retry for transiently unhandlable cases.  However, __get_hwpoison_page()
    currently fails to properly judge buddy pages as handlable, so hard/soft
    offline for buddy pages always fail as "unhandlable page".  This is
    totally regrettable.
    
    So let's add is_free_buddy_page() in HWPoisonHandlable(), so that
    __get_hwpoison_page() returns different return values between buddy
    pages and unhandlable pages as intended.
    
    Link: https://lkml.kernel.org/r/20210909004131.163221-1-naoya.horiguchi@linux.dev
    Fixes: fcc00621d88b ("mm/hwpoison: retry with shake_page() for unhandlable pages")
    Signed-off-by: Naoya Horiguchi <naoya.horiguchi@nec.com>
    Acked-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Yang Shi <shy828301@gmail.com>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: Oscar Salvador <osalvador@suse.de>
    Cc: Mike Kravetz <mike.kravetz@oracle.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
