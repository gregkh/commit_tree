commit 4762bcd451a9e92e79d5146d3d4a5ffe2b4e0ec5
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Nov 10 11:25:43 2019 +0100

    Linux 4.14.153

commit 158807d914dd4e43c2b2f420f26297785369b197
Author: Desnes A. Nunes do Rosario <desnesn@linux.ibm.com>
Date:   Thu Oct 17 13:35:05 2019 +0530

    selftests/powerpc: Fix compile error on tlbie_test due to newer gcc
    
    commit 5b216ea1c40cf06eead15054c70e238c9bd4729e upstream.
    
    Newer versions of GCC (>= 9) demand that the size of the string to be
    copied must be explicitly smaller than the size of the destination.
    Thus, the NULL char has to be taken into account on strncpy.
    
    This will avoid the following compiling error:
    
      tlbie_test.c: In function 'main':
      tlbie_test.c:639:4: error: 'strncpy' specified bound 100 equals destination size
          strncpy(logdir, optarg, LOGDIR_NAME_SIZE);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      cc1: all warnings being treated as errors
    
    Cc: stable@vger.kernel.org # v4.14
    Signed-off-by: Desnes A. Nunes do Rosario <desnesn@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20191003211010.9711-1-desnesn@linux.ibm.com
    [sandipan: Backported to v4.14]
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fda11bacfac1b72b0f241a76fad16ded2439ee9
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Thu Oct 17 13:35:04 2019 +0530

    selftests/powerpc: Add test case for tlbie vs mtpidr ordering issue
    
    commit 93cad5f789951eaa27c3392b15294b4e51253944 upstream.
    
    Cc: stable@vger.kernel.org # v4.14
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    [mpe: Some minor fixes to make it build]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190924035254.24612-4-aneesh.kumar@linux.ibm.com
    [sandipan: Backported to v4.14]
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae11e9fddd4107926d0671a255f49577a1291d7d
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Thu Oct 17 13:35:03 2019 +0530

    powerpc/mm: Fixup tlbie vs mtpidr/mtlpidr ordering issue on POWER9
    
    commit 047e6575aec71d75b765c22111820c4776cd1c43 upstream.
    
    On POWER9, under some circumstances, a broadcast TLB invalidation will
    fail to invalidate the ERAT cache on some threads when there are
    parallel mtpidr/mtlpidr happening on other threads of the same core.
    This can cause stores to continue to go to a page after it's unmapped.
    
    The workaround is to force an ERAT flush using PID=0 or LPID=0 tlbie
    flush. This additional TLB flush will cause the ERAT cache
    invalidation. Since we are using PID=0 or LPID=0, we don't get
    filtered out by the TLB snoop filtering logic.
    
    We need to still follow this up with another tlbie to take care of
    store vs tlbie ordering issue explained in commit:
    a5d4b5891c2f ("powerpc/mm: Fixup tlbie vs store ordering issue on
    POWER9"). The presence of ERAT cache implies we can still get new
    stores and they may miss store queue marking flush.
    
    Cc: stable@vger.kernel.org # v4.14
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190924035254.24612-3-aneesh.kumar@linux.ibm.com
    [sandipan: Backported to v4.14]
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f5d5b30cd7284d2f8983561f753ee23aa410b58
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Thu Oct 17 13:35:02 2019 +0530

    powerpc/book3s64/radix: Rename CPU_FTR_P9_TLBIE_BUG feature flag
    
    commit 09ce98cacd51fcd0fa0af2f79d1e1d3192f4cbb0 upstream.
    
    Rename the #define to indicate this is related to store vs tlbie
    ordering issue. In the next patch, we will be adding another feature
    flag that is used to handles ERAT flush vs tlbie ordering issue.
    
    Cc: stable@vger.kernel.org # v4.14
    Fixes: a5d4b5891c2f ("powerpc/mm: Fixup tlbie vs store ordering issue on POWER9")
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190924035254.24612-2-aneesh.kumar@linux.ibm.com
    [sandipan: Backported to v4.14]
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 169795c893f424cd889aa106e971628c780b81a3
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Thu Oct 17 13:35:01 2019 +0530

    powerpc/book3s64/mm: Don't do tlbie fixup for some hardware revisions
    
    commit 677733e296b5c7a37c47da391fc70a43dc40bd67 upstream.
    
    The store ordering vs tlbie issue mentioned in commit
    a5d4b5891c2f ("powerpc/mm: Fixup tlbie vs store ordering issue on
    POWER9") is fixed for Nimbus 2.3 and Cumulus 1.3 revisions. We don't
    need to apply the fixup if we are running on them
    
    We can only do this on PowerNV. On pseries guest with kvm we still
    don't support redoing the feature fixup after migration. So we should
    be enabling all the workarounds needed, because whe can possibly
    migrate between DD 2.3 and DD 2.2
    
    Cc: stable@vger.kernel.org # v4.14
    Fixes: a5d4b5891c2f ("powerpc/mm: Fixup tlbie vs store ordering issue on POWER9")
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190924035254.24612-1-aneesh.kumar@linux.ibm.com
    [sandipan: Backported to v4.14]
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e40f21667951a2239862bd3b149495a9037b453e
Author: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Date:   Thu Oct 17 13:35:00 2019 +0530

    powerpc/mm: Fixup tlbie vs store ordering issue on POWER9
    
    commit a5d4b5891c2f1f865a2def1eb0030f534e77ff86 upstream.
    
    On POWER9, under some circumstances, a broadcast TLB invalidation
    might complete before all previous stores have drained, potentially
    allowing stale stores from becoming visible after the invalidation.
    This works around it by doubling up those TLB invalidations which was
    verified by HW to be sufficient to close the risk window.
    
    This will be documented in a yet-to-be-published errata.
    
    Cc: stable@vger.kernel.org # v4.14
    Fixes: 1a472c9dba6b ("powerpc/mm/radix: Add tlbflush routines")
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    [mpe: Enable the feature in the DT CPU features code for all Power9,
          rename the feature to CPU_FTR_P9_TLBIE_BUG per benh.]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20180323045627.16800-3-aneesh.kumar@linux.vnet.ibm.com/
    [sandipan: Backported to v4.14]
    Signed-off-by: Sandipan Das <sandipan@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf31532edb095a82852baaf1694dd593f9322e3f
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Tue Sep 17 14:38:16 2019 +0200

    iio: adc: stm32-adc: fix a race when using several adcs with dma and irq
    
    commit dcb10920179ab74caf88a6f2afadecfc2743b910 upstream.
    
    End of conversion may be handled by using IRQ or DMA. There may be a
    race when two conversions complete at the same time on several ADCs.
    EOC can be read as 'set' for several ADCs, with:
    - an ADC configured to use IRQs. EOCIE bit is set. The handler is normally
      called in this case.
    - an ADC configured to use DMA. EOCIE bit isn't set. EOC triggers the DMA
      request instead. It's then automatically cleared by DMA read. But the
      handler gets called due to status bit is temporarily set (IRQ triggered
      by the other ADC).
    So both EOC status bit in CSR and EOCIE control bit must be checked
    before invoking the interrupt handler (e.g. call ISR only for
    IRQ-enabled ADCs).
    
    Fixes: 2763ea0585c9 ("iio: adc: stm32: add optional dma support")
    
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7682407ab91c951f4774d6cd45de04b2549a462f
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Tue Sep 17 14:38:15 2019 +0200

    iio: adc: stm32-adc: move registers definitions
    
    commit 31922f62bb527d749b99dbc776e514bcba29b7fe upstream.
    
    Move STM32 ADC registers definitions to common header.
    This is precursor patch to:
    - iio: adc: stm32-adc: fix a race when using several adcs with dma and irq
    
    It keeps registers definitions as a whole block, to ease readability and
    allow simple access path to EOC bits (readl) in stm32-adc-core driver.
    
    Fixes: 2763ea0585c9 ("iio: adc: stm32: add optional dma support")
    
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6434e433ef0a380b3e1c7ce6f773962030aae614
Author: Jan Kiszka <jan.kiszka@siemens.com>
Date:   Wed Sep 4 08:42:30 2019 +0200

    platform/x86: pmc_atom: Add Siemens SIMATIC IPC227E to critclk_systems DMI table
    
    commit ad0d315b4d4e7138f43acf03308192ec00e9614d upstream.
    
    The SIMATIC IPC227E uses the PMC clock for on-board components and gets
    stuck during boot if the clock is disabled. Therefore, add this device
    to the critical systems list.
    
    Fixes: 648e921888ad ("clk: x86: Stop marking clocks as CLK_IS_CRITICAL")
    Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2103cc67dbfbcfc5c5838d4d0859631e9f3dfce3
Author: Seth Forshee <seth.forshee@canonical.com>
Date:   Wed Jul 17 11:06:26 2019 -0500

    kbuild: add -fcf-protection=none when using retpoline flags
    
    [ Upstream commit 29be86d7f9cb18df4123f309ac7857570513e8bc ]
    
    The gcc -fcf-protection=branch option is not compatible with
    -mindirect-branch=thunk-extern. The latter is used when
    CONFIG_RETPOLINE is selected, and this will fail to build with
    a gcc which has -fcf-protection=branch enabled by default. Adding
    -fcf-protection=none when building with retpoline enabled
    prevents such build failures.
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b125188db9b12a3d6f7fc7d3a66929f2ffae7872
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Fri Mar 30 13:15:26 2018 +0900

    kbuild: use -fmacro-prefix-map to make __FILE__ a relative path
    
    [ Upstream commit a73619a845d5625079cc1b3b820f44c899618388 ]
    
    The __FILE__ macro is used everywhere in the kernel to locate the file
    printing the log message, such as WARN_ON(), etc.  If the kernel is
    built out of tree, this can be a long absolute path, like this:
    
      WARNING: CPU: 1 PID: 1 at /path/to/build/directory/arch/arm64/kernel/foo.c:...
    
    This is because Kbuild runs in the objtree instead of the srctree,
    then __FILE__ is expanded to a file path prefixed with $(srctree)/.
    
    Commit 9da0763bdd82 ("kbuild: Use relative path when building in a
    subdir of the source tree") improved this to some extent; $(srctree)
    becomes ".." if the objtree is a child of the srctree.
    
    For other cases of out-of-tree build, __FILE__ is still the absolute
    path.  It also means the kernel image depends on where it was built.
    
    A brand-new option from GCC, -fmacro-prefix-map, solves this problem.
    If your compiler supports it, __FILE__ is the relative path from the
    srctree regardless of O= option.  This provides more readable log and
    more reproducible builds.
    
    Please note __FILE__ is always an absolute path for external modules.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b0c518c176dcbaebfb269a58de8470c6733405d
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Mon Dec 17 10:14:53 2018 +0100

    sched/wake_q: Fix wakeup ordering for wake_q
    
    commit 4c4e3731564c8945ac5ac90fc2a1e1f21cb79c92 upstream.
    
    Notable cmpxchg() does not provide ordering when it fails, however
    wake_q_add() requires ordering in this specific case too. Without this
    it would be possible for the concurrent wakeup to not observe our
    prior state.
    
    Andrea Parri provided:
    
      C wake_up_q-wake_q_add
    
      {
            int next = 0;
            int y = 0;
      }
    
      P0(int *next, int *y)
      {
            int r0;
    
            /* in wake_up_q() */
    
            WRITE_ONCE(*next, 1);   /* node->next = NULL */
            smp_mb();               /* implied by wake_up_process() */
            r0 = READ_ONCE(*y);
      }
    
      P1(int *next, int *y)
      {
            int r1;
    
            /* in wake_q_add() */
    
            WRITE_ONCE(*y, 1);      /* wake_cond = true */
            smp_mb__before_atomic();
            r1 = cmpxchg_relaxed(next, 1, 2);
      }
    
      exists (0:r0=0 /\ 1:r1=0)
    
      This "exists" clause cannot be satisfied according to the LKMM:
    
      Test wake_up_q-wake_q_add Allowed
      States 3
      0:r0=0; 1:r1=1;
      0:r0=1; 1:r1=0;
      0:r0=1; 1:r1=1;
      No
      Witnesses
      Positive: 0 Negative: 3
      Condition exists (0:r0=0 /\ 1:r1=0)
      Observation wake_up_q-wake_q_add Never 0 3
    
    Reported-by: Yongji Xie <elohimes@gmail.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Waiman Long <longman@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Jisheng Zhang <Jisheng.Zhang@synaptics.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7556e63b40f78a43553acd9f4912ceff322fad6f
Author: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
Date:   Thu Oct 17 08:26:06 2019 -0700

    dmaengine: qcom: bam_dma: Fix resource leak
    
    commit 7667819385457b4aeb5fac94f67f52ab52cc10d5 upstream.
    
    bam_dma_terminate_all() will leak resources if any of the transactions are
    committed to the hardware (present in the desc fifo), and not complete.
    Since bam_dma_terminate_all() does not cause the hardware to be updated,
    the hardware will still operate on any previously committed transactions.
    This can cause memory corruption if the memory for the transaction has been
    reassigned, and will cause a sync issue between the BAM and its client(s).
    
    Fix this by properly updating the hardware in bam_dma_terminate_all().
    
    Fixes: e7c0fe2a5c84 ("dmaengine: add Qualcomm BAM dma driver")
    Signed-off-by: Jeffrey Hugo <jeffrey.l.hugo@gmail.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20191017152606.34120-1-jeffrey.l.hugo@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9de6f42e945cdb24b59c7ab7ebad1eba6cb5875
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Oct 22 07:57:46 2019 -0700

    net/flow_dissector: switch to siphash
    
    commit 55667441c84fa5e0911a0aac44fb059c15ba6da2 upstream.
    
    UDP IPv6 packets auto flowlabels are using a 32bit secret
    (static u32 hashrnd in net/core/flow_dissector.c) and
    apply jhash() over fields known by the receivers.
    
    Attackers can easily infer the 32bit secret and use this information
    to identify a device and/or user, since this 32bit secret is only
    set at boot time.
    
    Really, using jhash() to generate cookies sent on the wire
    is a serious security concern.
    
    Trying to change the rol32(hash, 16) in ip6_make_flowlabel() would be
    a dead end. Trying to periodically change the secret (like in sch_sfq.c)
    could change paths taken in the network for long lived flows.
    
    Let's switch to siphash, as we did in commit df453700e8d8
    ("inet: switch IP ID generator to siphash")
    
    Using a cryptographically strong pseudo random function will solve this
    privacy issue and more generally remove other weak points in the stack.
    
    Packet schedulers using skb_get_hash_perturb() benefit from this change.
    
    Fixes: b56774163f99 ("ipv6: Enable auto flow labels by default")
    Fixes: 42240901f7c4 ("ipv6: Implement different admin modes for automatic flow labels")
    Fixes: 67800f9b1f4e ("ipv6: Call skb_get_hash_flowi6 to get skb->hash in ip6_make_flowlabel")
    Fixes: cb1ce2ef387b ("ipv6: Implement automatic flow label generation on transmit")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Jonathan Berger <jonathann1@walla.com>
    Reported-by: Amit Klein <aksecurity@gmail.com>
    Reported-by: Benny Pinkas <benny@pinkas.net>
    Cc: Tom Herbert <tom@herbertland.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fa6002a34db62f5a5d536f30fc9dedd1ce7ee84
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Nov 1 10:32:19 2019 -0700

    inet: stop leaking jiffies on the wire
    
    [ Upstream commit a904a0693c189691eeee64f6c6b188bd7dc244e9 ]
    
    Historically linux tried to stick to RFC 791, 1122, 2003
    for IPv4 ID field generation.
    
    RFC 6864 made clear that no matter how hard we try,
    we can not ensure unicity of IP ID within maximum
    lifetime for all datagrams with a given source
    address/destination address/protocol tuple.
    
    Linux uses a per socket inet generator (inet_id), initialized
    at connection startup with a XOR of 'jiffies' and other
    fields that appear clear on the wire.
    
    Thiemo Nagel pointed that this strategy is a privacy
    concern as this provides 16 bits of entropy to fingerprint
    devices.
    
    Let's switch to a random starting point, this is just as
    good as far as RFC 6864 is concerned and does not leak
    anything critical.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Thiemo Nagel <tnagel@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0c64eda9996479c9b135c23f5b18a0314af4a98
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Oct 28 23:19:35 2019 +0800

    erspan: fix the tun_info options_len check for erspan
    
    [ Upstream commit 2eb8d6d2910cfe3dc67dc056f26f3dd9c63d47cd ]
    
    The check for !md doens't really work for ip_tunnel_info_opts(info) which
    only does info + 1. Also to avoid out-of-bounds access on info, it should
    ensure options_len is not less than erspan_metadata in both erspan_xmit()
    and ip6erspan_tunnel_xmit().
    
    Fixes: 1a66a836da ("gre: add collect_md mode to ERSPAN tunnel")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41a230fef787315d982dd915ef2a33a136e9a1d5
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Oct 29 01:24:32 2019 +0800

    vxlan: check tun_info options_len properly
    
    [ Upstream commit eadf52cf1852196a1363044dcda22fa5d7f296f7 ]
    
    This patch is to improve the tun_info options_len by dropping
    the skb when TUNNEL_VXLAN_OPT is set but options_len is less
    than vxlan_metadata. This can void a potential out-of-bounds
    access on ip_tun_info.
    
    Fixes: ee122c79d422 ("vxlan: Flow based tunneling")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d50fc2bb4c748951c05280716113cffc3efbb7f
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Oct 23 22:44:51 2019 -0700

    net: use skb_queue_empty_lockless() in busy poll contexts
    
    [ Upstream commit 3f926af3f4d688e2e11e7f8ed04e277a14d4d4a4 ]
    
    Busy polling usually runs without locks.
    Let's use skb_queue_empty_lockless() instead of skb_queue_empty()
    
    Also uses READ_ONCE() in __skb_try_recv_datagram() to address
    a similar potential problem.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e7bea435919082c9f74c53d2cb3ceac13f3d6b1
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Oct 23 22:44:50 2019 -0700

    net: use skb_queue_empty_lockless() in poll() handlers
    
    [ Upstream commit 3ef7cf57c72f32f61e97f8fa401bc39ea1f1a5d4 ]
    
    Many poll() handlers are lockless. Using skb_queue_empty_lockless()
    instead of skb_queue_empty() is more appropriate.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 399c6029936ceb15b9c2aec25c1ae1f4e68835a7
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Oct 23 22:44:49 2019 -0700

    udp: use skb_queue_empty_lockless()
    
    [ Upstream commit 137a0dbe3426fd7bcfe3f8117b36a87b3590e4eb ]
    
    syzbot reported a data-race [1].
    
    We should use skb_queue_empty_lockless() to document that we are
    not ensuring a mutual exclusion and silence KCSAN.
    
    [1]
    BUG: KCSAN: data-race in __skb_recv_udp / __udp_enqueue_schedule_skb
    
    write to 0xffff888122474b50 of 8 bytes by interrupt on cpu 0:
     __skb_insert include/linux/skbuff.h:1852 [inline]
     __skb_queue_before include/linux/skbuff.h:1958 [inline]
     __skb_queue_tail include/linux/skbuff.h:1991 [inline]
     __udp_enqueue_schedule_skb+0x2c1/0x410 net/ipv4/udp.c:1470
     __udp_queue_rcv_skb net/ipv4/udp.c:1940 [inline]
     udp_queue_rcv_one_skb+0x7bd/0xc70 net/ipv4/udp.c:2057
     udp_queue_rcv_skb+0xb5/0x400 net/ipv4/udp.c:2074
     udp_unicast_rcv_skb.isra.0+0x7e/0x1c0 net/ipv4/udp.c:2233
     __udp4_lib_rcv+0xa44/0x17c0 net/ipv4/udp.c:2300
     udp_rcv+0x2b/0x40 net/ipv4/udp.c:2470
     ip_protocol_deliver_rcu+0x4d/0x420 net/ipv4/ip_input.c:204
     ip_local_deliver_finish+0x110/0x140 net/ipv4/ip_input.c:231
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ip_local_deliver+0x133/0x210 net/ipv4/ip_input.c:252
     dst_input include/net/dst.h:442 [inline]
     ip_rcv_finish+0x121/0x160 net/ipv4/ip_input.c:413
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ip_rcv+0x18f/0x1a0 net/ipv4/ip_input.c:523
     __netif_receive_skb_one_core+0xa7/0xe0 net/core/dev.c:5010
     __netif_receive_skb+0x37/0xf0 net/core/dev.c:5124
     process_backlog+0x1d3/0x420 net/core/dev.c:5955
    
    read to 0xffff888122474b50 of 8 bytes by task 8921 on cpu 1:
     skb_queue_empty include/linux/skbuff.h:1494 [inline]
     __skb_recv_udp+0x18d/0x500 net/ipv4/udp.c:1653
     udp_recvmsg+0xe1/0xb10 net/ipv4/udp.c:1712
     inet_recvmsg+0xbb/0x250 net/ipv4/af_inet.c:838
     sock_recvmsg_nosec+0x5c/0x70 net/socket.c:871
     ___sys_recvmsg+0x1a0/0x3e0 net/socket.c:2480
     do_recvmmsg+0x19a/0x5c0 net/socket.c:2601
     __sys_recvmmsg+0x1ef/0x200 net/socket.c:2680
     __do_sys_recvmmsg net/socket.c:2703 [inline]
     __se_sys_recvmmsg net/socket.c:2696 [inline]
     __x64_sys_recvmmsg+0x89/0xb0 net/socket.c:2696
     do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 8921 Comm: syz-executor.4 Not tainted 5.4.0-rc3+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3af6b2ad90138bec29f8949baa90b0d742c91eb4
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Oct 23 22:44:48 2019 -0700

    net: add skb_queue_empty_lockless()
    
    [ Upstream commit d7d16a89350ab263484c0aa2b523dd3a234e4a80 ]
    
    Some paths call skb_queue_empty() without holding
    the queue lock. We must use a barrier in order
    to not let the compiler do strange things, and avoid
    KCSAN splats.
    
    Adding a barrier in skb_queue_empty() might be overkill,
    I prefer adding a new helper to clearly identify
    points where the callers might be lockless. This might
    help us finding real bugs.
    
    The corresponding WRITE_ONCE() should add zero cost
    for current compilers.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 761f73c166c3b0fecf43692762ee0e03092480f0
Author: Doug Berger <opendmb@gmail.com>
Date:   Wed Oct 16 16:06:32 2019 -0700

    net: bcmgenet: reset 40nm EPHY on energy detect
    
    [ Upstream commit 25382b991d252aed961cd434176240f9de6bb15f ]
    
    The EPHY integrated into the 40nm Set-Top Box devices can falsely
    detect energy when connected to a disabled peer interface. When the
    peer interface is enabled the EPHY will detect and report the link
    as active, but on occasion may get into a state where it is not
    able to exchange data with the connected GENET MAC. This issue has
    not been observed when the link parameters are auto-negotiated;
    however, it has been observed with a manually configured link.
    
    It has been empirically determined that issuing a soft reset to the
    EPHY when energy is detected prevents it from getting into this bad
    state.
    
    Fixes: 1c1008c793fa ("net: bcmgenet: add main driver file")
    Signed-off-by: Doug Berger <opendmb@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af3924a97ea10ec3761fd4d7f9f2046febee6a04
Author: Vivien Didelot <vivien.didelot@gmail.com>
Date:   Fri Oct 18 17:02:46 2019 -0400

    net: dsa: fix switch tree list
    
    [ Upstream commit 50c7d2ba9de20f60a2d527ad6928209ef67e4cdd ]
    
    If there are multiple switch trees on the device, only the last one
    will be listed, because the arguments of list_add_tail are swapped.
    
    Fixes: 83c0afaec7b7 ("net: dsa: Add new binding implementation")
    Signed-off-by: Vivien Didelot <vivien.didelot@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit adea9fd3b159cf25d2567b112bc7b84479447e72
Author: Kazutoshi Noguchi <noguchi.kazutosi@gmail.com>
Date:   Mon Oct 21 00:03:07 2019 +0900

    r8152: add device id for Lenovo ThinkPad USB-C Dock Gen 2
    
    [ Upstream commit b3060531979422d5bb18d80226f978910284dc70 ]
    
    This device is sold as 'ThinkPad USB-C Dock Gen 2 (40AS)'.
    Chipset is RTL8153 and works with r8152.
    Without this, the generic cdc_ether grabs the device, and the device jam
    connected networks up when the machine suspends.
    
    Signed-off-by: Kazutoshi Noguchi <noguchi.kazutosi@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03a70959304028f2eed3713f03bd1c92585699b0
Author: Andrew Lunn <andrew@lunn.ch>
Date:   Thu Oct 17 21:29:26 2019 +0200

    net: usb: lan78xx: Connect PHY before registering MAC
    
    [ Upstream commit 38b4fe320119859c11b1dc06f6b4987a16344fa1 ]
    
    As soon as the netdev is registers, the kernel can start using the
    interface. If the driver connects the MAC to the PHY after the netdev
    is registered, there is a race condition where the interface can be
    opened without having the PHY connected.
    
    Change the order to close this race condition.
    
    Fixes: 92571a1aae40 ("lan78xx: Connect phy early")
    Reported-by: Daniel Wagner <dwagner@suse.de>
    Signed-off-by: Andrew Lunn <andrew@lunn.ch>
    Tested-by: Daniel Wagner <dwagner@suse.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12300056a6e98f7d845ae8952bd958c4f906b784
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Sat Oct 5 15:05:18 2019 -0700

    net: dsa: b53: Do not clear existing mirrored port mask
    
    [ Upstream commit c763ac436b668d7417f0979430ec0312ede4093d ]
    
    Clearing the existing bitmask of mirrored ports essentially prevents us
    from capturing more than one port at any given time. This is clearly
    wrong, do not clear the bitmask prior to setting up the new port.
    
    Reported-by: Hubert Feurstein <h.feurstein@gmail.com>
    Fixes: ed3af5fd08eb ("net: dsa: b53: Add support for port mirroring")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Vivien Didelot <vivien.didelot@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc8f227bdb31a2d1640430bd6fe6695527c37d96
Author: Maxim Mikityanskiy <maximmi@mellanox.com>
Date:   Mon Sep 16 14:54:20 2019 +0300

    net/mlx5e: Fix handling of compressed CQEs in case of low NAPI budget
    
    [ Upstream commit 9df86bdb6746d7fcfc2fda715f7a7c3d0ddb2654 ]
    
    When CQE compression is enabled, compressed CQEs use the following
    structure: a title is followed by one or many blocks, each containing 8
    mini CQEs (except the last, which may contain fewer mini CQEs).
    
    Due to NAPI budget restriction, a complete structure is not always
    parsed in one NAPI run, and some blocks with mini CQEs may be deferred
    to the next NAPI poll call - we have the mlx5e_decompress_cqes_cont call
    in the beginning of mlx5e_poll_rx_cq. However, if the budget is
    extremely low, some blocks may be left even after that, but the code
    that follows the mlx5e_decompress_cqes_cont call doesn't check it and
    assumes that a new CQE begins, which may not be the case. In such cases,
    random memory corruptions occur.
    
    An extremely low NAPI budget of 8 is used when busy_poll or busy_read is
    active.
    
    This commit adds a check to make sure that the previous compressed CQE
    has been completely parsed after mlx5e_decompress_cqes_cont, otherwise
    it prevents a new CQE from being fetched in the middle of a compressed
    CQE.
    
    This commit fixes random crashes in __build_skb, __page_pool_put_page
    and other not-related-directly places, that used to happen when both CQE
    compression and busy_poll/busy_read were enabled.
    
    Fixes: 7219ab34f184 ("net/mlx5e: CQE compression")
    Signed-off-by: Maxim Mikityanskiy <maximmi@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f45a3c0127762772bd6faba543f577ea5f700e1
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Oct 23 22:44:52 2019 -0700

    net: add READ_ONCE() annotation in __skb_wait_for_more_packets()
    
    [ Upstream commit 7c422d0ce97552dde4a97e6290de70ec6efb0fc6 ]
    
    __skb_wait_for_more_packets() can be called while other cpus
    can feed packets to the socket receive queue.
    
    KCSAN reported :
    
    BUG: KCSAN: data-race in __skb_wait_for_more_packets / __udp_enqueue_schedule_skb
    
    write to 0xffff888102e40b58 of 8 bytes by interrupt on cpu 0:
     __skb_insert include/linux/skbuff.h:1852 [inline]
     __skb_queue_before include/linux/skbuff.h:1958 [inline]
     __skb_queue_tail include/linux/skbuff.h:1991 [inline]
     __udp_enqueue_schedule_skb+0x2d7/0x410 net/ipv4/udp.c:1470
     __udp_queue_rcv_skb net/ipv4/udp.c:1940 [inline]
     udp_queue_rcv_one_skb+0x7bd/0xc70 net/ipv4/udp.c:2057
     udp_queue_rcv_skb+0xb5/0x400 net/ipv4/udp.c:2074
     udp_unicast_rcv_skb.isra.0+0x7e/0x1c0 net/ipv4/udp.c:2233
     __udp4_lib_rcv+0xa44/0x17c0 net/ipv4/udp.c:2300
     udp_rcv+0x2b/0x40 net/ipv4/udp.c:2470
     ip_protocol_deliver_rcu+0x4d/0x420 net/ipv4/ip_input.c:204
     ip_local_deliver_finish+0x110/0x140 net/ipv4/ip_input.c:231
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ip_local_deliver+0x133/0x210 net/ipv4/ip_input.c:252
     dst_input include/net/dst.h:442 [inline]
     ip_rcv_finish+0x121/0x160 net/ipv4/ip_input.c:413
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ip_rcv+0x18f/0x1a0 net/ipv4/ip_input.c:523
     __netif_receive_skb_one_core+0xa7/0xe0 net/core/dev.c:5010
     __netif_receive_skb+0x37/0xf0 net/core/dev.c:5124
     process_backlog+0x1d3/0x420 net/core/dev.c:5955
    
    read to 0xffff888102e40b58 of 8 bytes by task 13035 on cpu 1:
     __skb_wait_for_more_packets+0xfa/0x320 net/core/datagram.c:100
     __skb_recv_udp+0x374/0x500 net/ipv4/udp.c:1683
     udp_recvmsg+0xe1/0xb10 net/ipv4/udp.c:1712
     inet_recvmsg+0xbb/0x250 net/ipv4/af_inet.c:838
     sock_recvmsg_nosec+0x5c/0x70 net/socket.c:871
     ___sys_recvmsg+0x1a0/0x3e0 net/socket.c:2480
     do_recvmmsg+0x19a/0x5c0 net/socket.c:2601
     __sys_recvmmsg+0x1ef/0x200 net/socket.c:2680
     __do_sys_recvmmsg net/socket.c:2703 [inline]
     __se_sys_recvmmsg net/socket.c:2696 [inline]
     __x64_sys_recvmmsg+0x89/0xb0 net/socket.c:2696
     do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 13035 Comm: syz-executor.3 Not tainted 5.4.0-rc3+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a04f47897cd4ec1d8179de60efde8a90398f63c
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Oct 24 11:43:31 2019 -0700

    udp: fix data-race in udp_set_dev_scratch()
    
    [ Upstream commit a793183caa9afae907a0d7ddd2ffd57329369bf5 ]
    
    KCSAN reported a data-race in udp_set_dev_scratch() [1]
    
    The issue here is that we must not write over skb fields
    if skb is shared. A similar issue has been fixed in commit
    89c22d8c3b27 ("net: Fix skb csum races when peeking")
    
    While we are at it, use a helper only dealing with
    udp_skb_scratch(skb)->csum_unnecessary, as this allows
    udp_set_dev_scratch() to be called once and thus inlined.
    
    [1]
    BUG: KCSAN: data-race in udp_set_dev_scratch / udpv6_recvmsg
    
    write to 0xffff888120278317 of 1 bytes by task 10411 on cpu 1:
     udp_set_dev_scratch+0xea/0x200 net/ipv4/udp.c:1308
     __first_packet_length+0x147/0x420 net/ipv4/udp.c:1556
     first_packet_length+0x68/0x2a0 net/ipv4/udp.c:1579
     udp_poll+0xea/0x110 net/ipv4/udp.c:2720
     sock_poll+0xed/0x250 net/socket.c:1256
     vfs_poll include/linux/poll.h:90 [inline]
     do_select+0x7d0/0x1020 fs/select.c:534
     core_sys_select+0x381/0x550 fs/select.c:677
     do_pselect.constprop.0+0x11d/0x160 fs/select.c:759
     __do_sys_pselect6 fs/select.c:784 [inline]
     __se_sys_pselect6 fs/select.c:769 [inline]
     __x64_sys_pselect6+0x12e/0x170 fs/select.c:769
     do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    read to 0xffff888120278317 of 1 bytes by task 10413 on cpu 0:
     udp_skb_csum_unnecessary include/net/udp.h:358 [inline]
     udpv6_recvmsg+0x43e/0xe90 net/ipv6/udp.c:310
     inet6_recvmsg+0xbb/0x240 net/ipv6/af_inet6.c:592
     sock_recvmsg_nosec+0x5c/0x70 net/socket.c:871
     ___sys_recvmsg+0x1a0/0x3e0 net/socket.c:2480
     do_recvmmsg+0x19a/0x5c0 net/socket.c:2601
     __sys_recvmmsg+0x1ef/0x200 net/socket.c:2680
     __do_sys_recvmmsg net/socket.c:2703 [inline]
     __se_sys_recvmmsg net/socket.c:2696 [inline]
     __x64_sys_recvmmsg+0x89/0xb0 net/socket.c:2696
     do_syscall_64+0xcc/0x370 arch/x86/entry/common.c:290
     entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 0 PID: 10413 Comm: syz-executor.0 Not tainted 5.4.0-rc3+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 2276f58ac589 ("udp: use a separate rx queue for packet reception")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 866e751db1eb72bd8fcb856e71a979804f31dc50
Author: Wei Wang <weiwan@google.com>
Date:   Thu Oct 31 16:24:36 2019 -0700

    selftests: net: reuseport_dualstack: fix uninitalized parameter
    
    [ Upstream commit d64479a3e3f9924074ca7b50bd72fa5211dca9c1 ]
    
    This test reports EINVAL for getsockopt(SOL_SOCKET, SO_DOMAIN)
    occasionally due to the uninitialized length parameter.
    Initialize it to fix this, and also use int for "test_family" to comply
    with the API standard.
    
    Fixes: d6a61f80b871 ("soreuseport: test mixed v4/v6 sockets")
    Reported-by: Maciej Żenczykowski <maze@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Wei Wang <weiwan@google.com>
    Cc: Craig Gallek <cgallek@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90bddaf253383b8a228726363f7a61dbda85facc
Author: zhanglin <zhang.lin16@zte.com.cn>
Date:   Sat Oct 26 15:54:16 2019 +0800

    net: Zeroing the structure ethtool_wolinfo in ethtool_get_wol()
    
    [ Upstream commit 5ff223e86f5addbfae26419cbb5d61d98f6fbf7d ]
    
    memset() the structure ethtool_wolinfo that has padded bytes
    but the padded bytes have not been zeroed out.
    
    Signed-off-by: zhanglin <zhang.lin16@zte.com.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 77da9481248c717f2538587dbdabb297f513ebc5
Author: Eran Ben Elisha <eranbe@mellanox.com>
Date:   Sun Oct 27 16:39:15 2019 +0200

    net/mlx4_core: Dynamically set guaranteed amount of counters per VF
    
    [ Upstream commit e19868efea0c103f23b4b7e986fd0a703822111f ]
    
    Prior to this patch, the amount of counters guaranteed per VF in the
    resource tracker was MLX4_VF_COUNTERS_PER_PORT * MLX4_MAX_PORTS. It was
    set regardless if the VF was single or dual port.
    This caused several VFs to have no guaranteed counters although the
    system could satisfy their request.
    
    The fix is to dynamically guarantee counters, based on each VF
    specification.
    
    Fixes: 9de92c60beaa ("net/mlx4_core: Adjust counter grant policy in the resource tracker")
    Signed-off-by: Eran Ben Elisha <eranbe@mellanox.com>
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0a12f90bb6a5c1a88cc887a27aae4d4db0ca20e
Author: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
Date:   Mon Oct 28 13:09:46 2019 +0800

    net: hisilicon: Fix ping latency when deal with high throughput
    
    [ Upstream commit e56bd641ca61beb92b135298d5046905f920b734 ]
    
    This is due to error in over budget processing.
    When dealing with high throughput, the used buffers
    that exceeds the budget is not cleaned up. In addition,
    it takes a lot of cycles to clean up the used buffer,
    and then the buffer where the valid data is located can take effect.
    
    Signed-off-by: Jiangfeng Xiao <xiaojiangfeng@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a704289342f8efe32c0270d25b9e0e05481e8ed1
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Oct 24 13:50:27 2019 -0700

    net: fix sk_page_frag() recursion from memory reclaim
    
    [ Upstream commit 20eb4f29b60286e0d6dc01d9c260b4bd383c58fb ]
    
    sk_page_frag() optimizes skb_frag allocations by using per-task
    skb_frag cache when it knows it's the only user.  The condition is
    determined by seeing whether the socket allocation mask allows
    blocking - if the allocation may block, it obviously owns the task's
    context and ergo exclusively owns current->task_frag.
    
    Unfortunately, this misses recursion through memory reclaim path.
    Please take a look at the following backtrace.
    
     [2] RIP: 0010:tcp_sendmsg_locked+0xccf/0xe10
         ...
         tcp_sendmsg+0x27/0x40
         sock_sendmsg+0x30/0x40
         sock_xmit.isra.24+0xa1/0x170 [nbd]
         nbd_send_cmd+0x1d2/0x690 [nbd]
         nbd_queue_rq+0x1b5/0x3b0 [nbd]
         __blk_mq_try_issue_directly+0x108/0x1b0
         blk_mq_request_issue_directly+0xbd/0xe0
         blk_mq_try_issue_list_directly+0x41/0xb0
         blk_mq_sched_insert_requests+0xa2/0xe0
         blk_mq_flush_plug_list+0x205/0x2a0
         blk_flush_plug_list+0xc3/0xf0
     [1] blk_finish_plug+0x21/0x2e
         _xfs_buf_ioapply+0x313/0x460
         __xfs_buf_submit+0x67/0x220
         xfs_buf_read_map+0x113/0x1a0
         xfs_trans_read_buf_map+0xbf/0x330
         xfs_btree_read_buf_block.constprop.42+0x95/0xd0
         xfs_btree_lookup_get_block+0x95/0x170
         xfs_btree_lookup+0xcc/0x470
         xfs_bmap_del_extent_real+0x254/0x9a0
         __xfs_bunmapi+0x45c/0xab0
         xfs_bunmapi+0x15/0x30
         xfs_itruncate_extents_flags+0xca/0x250
         xfs_free_eofblocks+0x181/0x1e0
         xfs_fs_destroy_inode+0xa8/0x1b0
         destroy_inode+0x38/0x70
         dispose_list+0x35/0x50
         prune_icache_sb+0x52/0x70
         super_cache_scan+0x120/0x1a0
         do_shrink_slab+0x120/0x290
         shrink_slab+0x216/0x2b0
         shrink_node+0x1b6/0x4a0
         do_try_to_free_pages+0xc6/0x370
         try_to_free_mem_cgroup_pages+0xe3/0x1e0
         try_charge+0x29e/0x790
         mem_cgroup_charge_skmem+0x6a/0x100
         __sk_mem_raise_allocated+0x18e/0x390
         __sk_mem_schedule+0x2a/0x40
     [0] tcp_sendmsg_locked+0x8eb/0xe10
         tcp_sendmsg+0x27/0x40
         sock_sendmsg+0x30/0x40
         ___sys_sendmsg+0x26d/0x2b0
         __sys_sendmsg+0x57/0xa0
         do_syscall_64+0x42/0x100
         entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    In [0], tcp_send_msg_locked() was using current->page_frag when it
    called sk_wmem_schedule().  It already calculated how many bytes can
    be fit into current->page_frag.  Due to memory pressure,
    sk_wmem_schedule() called into memory reclaim path which called into
    xfs and then IO issue path.  Because the filesystem in question is
    backed by nbd, the control goes back into the tcp layer - back into
    tcp_sendmsg_locked().
    
    nbd sets sk_allocation to (GFP_NOIO | __GFP_MEMALLOC) which makes
    sense - it's in the process of freeing memory and wants to be able to,
    e.g., drop clean pages to make forward progress.  However, this
    confused sk_page_frag() called from [2].  Because it only tests
    whether the allocation allows blocking which it does, it now thinks
    current->page_frag can be used again although it already was being
    used in [0].
    
    After [2] used current->page_frag, the offset would be increased by
    the used amount.  When the control returns to [0],
    current->page_frag's offset is increased and the previously calculated
    number of bytes now may overrun the end of allocated memory leading to
    silent memory corruptions.
    
    Fix it by adding gfpflags_normal_context() which tests sleepable &&
    !reclaim and use it to determine whether to use current->task_frag.
    
    v2: Eric didn't like gfp flags being tested twice.  Introduce a new
        helper gfpflags_normal_context() and combine the two tests.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Cc: Josef Bacik <josef@toxicpanda.com>
    Cc: Eric Dumazet <eric.dumazet@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 52fb9ecc3bb93cec8f309d5c7cdd201c3ba8cab1
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri Oct 25 13:47:24 2019 +1100

    net: ethernet: ftgmac100: Fix DMA coherency issue with SW checksum
    
    [ Upstream commit 88824e3bf29a2fcacfd9ebbfe03063649f0f3254 ]
    
    We are calling the checksum helper after the dma_map_single()
    call to map the packet. This is incorrect as the checksumming
    code will touch the packet from the CPU. This means the cache
    won't be properly flushes (or the bounce buffering will leave
    us with the unmodified packet to DMA).
    
    This moves the calculation of the checksum & vlan tags to
    before the DMA mapping.
    
    This also has the side effect of fixing another bug: If the
    checksum helper fails, we goto "drop" to drop the packet, which
    will not unmap the DMA mapping.
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Fixes: 05690d633f30 ("ftgmac100: Upgrade to NETIF_F_HW_CSUM")
    Reviewed-by: Vijay Khemka <vijaykhemka@fb.com>
    Tested-by: Vijay Khemka <vijaykhemka@fb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 78c5ddd6aec86aa79f8d7261c54fc01993486478
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Thu Oct 31 15:54:05 2019 -0700

    net: dsa: bcm_sf2: Fix IMP setup for port different than 8
    
    [ Upstream commit 5fc0f21246e50afdf318b5a3a941f7f4f57b8947 ]
    
    Since it became possible for the DSA core to use a CPU port different
    than 8, our bcm_sf2_imp_setup() function was broken because it assumes
    that registers are applicable to port 8. In particular, the port's MAC
    is going to stay disabled, so make sure we clear the RX_DIS and TX_DIS
    bits if we are not configured for port 8.
    
    Fixes: 9f91484f6fcc ("net: dsa: make "label" property optional for dsa2")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d8cd1c2e556e39ae6eb9d5e629c5c0f1801cf06
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Oct 29 10:54:44 2019 -0700

    net: annotate lockless accesses to sk->sk_napi_id
    
    [ Upstream commit ee8d153d46a3b98c064ee15c0c0a3bbf1450e5a1 ]
    
    We already annotated most accesses to sk->sk_napi_id
    
    We missed sk_mark_napi_id() and sk_mark_napi_id_once()
    which might be called without socket lock held in UDP stack.
    
    KCSAN reported :
    BUG: KCSAN: data-race in udpv6_queue_rcv_one_skb / udpv6_queue_rcv_one_skb
    
    write to 0xffff888121c6d108 of 4 bytes by interrupt on cpu 0:
     sk_mark_napi_id include/net/busy_poll.h:125 [inline]
     __udpv6_queue_rcv_skb net/ipv6/udp.c:571 [inline]
     udpv6_queue_rcv_one_skb+0x70c/0xb40 net/ipv6/udp.c:672
     udpv6_queue_rcv_skb+0xb5/0x400 net/ipv6/udp.c:689
     udp6_unicast_rcv_skb.isra.0+0xd7/0x180 net/ipv6/udp.c:832
     __udp6_lib_rcv+0x69c/0x1770 net/ipv6/udp.c:913
     udpv6_rcv+0x2b/0x40 net/ipv6/udp.c:1015
     ip6_protocol_deliver_rcu+0x22a/0xbe0 net/ipv6/ip6_input.c:409
     ip6_input_finish+0x30/0x50 net/ipv6/ip6_input.c:450
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ip6_input+0x177/0x190 net/ipv6/ip6_input.c:459
     dst_input include/net/dst.h:442 [inline]
     ip6_rcv_finish+0x110/0x140 net/ipv6/ip6_input.c:76
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ipv6_rcv+0x1a1/0x1b0 net/ipv6/ip6_input.c:284
     __netif_receive_skb_one_core+0xa7/0xe0 net/core/dev.c:5010
     __netif_receive_skb+0x37/0xf0 net/core/dev.c:5124
     process_backlog+0x1d3/0x420 net/core/dev.c:5955
     napi_poll net/core/dev.c:6392 [inline]
     net_rx_action+0x3ae/0xa90 net/core/dev.c:6460
    
    write to 0xffff888121c6d108 of 4 bytes by interrupt on cpu 1:
     sk_mark_napi_id include/net/busy_poll.h:125 [inline]
     __udpv6_queue_rcv_skb net/ipv6/udp.c:571 [inline]
     udpv6_queue_rcv_one_skb+0x70c/0xb40 net/ipv6/udp.c:672
     udpv6_queue_rcv_skb+0xb5/0x400 net/ipv6/udp.c:689
     udp6_unicast_rcv_skb.isra.0+0xd7/0x180 net/ipv6/udp.c:832
     __udp6_lib_rcv+0x69c/0x1770 net/ipv6/udp.c:913
     udpv6_rcv+0x2b/0x40 net/ipv6/udp.c:1015
     ip6_protocol_deliver_rcu+0x22a/0xbe0 net/ipv6/ip6_input.c:409
     ip6_input_finish+0x30/0x50 net/ipv6/ip6_input.c:450
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ip6_input+0x177/0x190 net/ipv6/ip6_input.c:459
     dst_input include/net/dst.h:442 [inline]
     ip6_rcv_finish+0x110/0x140 net/ipv6/ip6_input.c:76
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ipv6_rcv+0x1a1/0x1b0 net/ipv6/ip6_input.c:284
     __netif_receive_skb_one_core+0xa7/0xe0 net/core/dev.c:5010
     __netif_receive_skb+0x37/0xf0 net/core/dev.c:5124
     process_backlog+0x1d3/0x420 net/core/dev.c:5955
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 10890 Comm: syz-executor.0 Not tainted 5.4.0-rc3+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: e68b6e50fa35 ("udp: enable busy polling for all sockets")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2261df133d4211b5c1aeecc16f1ce004939e7f1e
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Oct 30 13:00:04 2019 -0700

    net: annotate accesses to sk->sk_incoming_cpu
    
    [ Upstream commit 7170a977743b72cf3eb46ef6ef89885dc7ad3621 ]
    
    This socket field can be read and written by concurrent cpus.
    
    Use READ_ONCE() and WRITE_ONCE() annotations to document this,
    and avoid some compiler 'optimizations'.
    
    KCSAN reported :
    
    BUG: KCSAN: data-race in tcp_v4_rcv / tcp_v4_rcv
    
    write to 0xffff88812220763c of 4 bytes by interrupt on cpu 0:
     sk_incoming_cpu_update include/net/sock.h:953 [inline]
     tcp_v4_rcv+0x1b3c/0x1bb0 net/ipv4/tcp_ipv4.c:1934
     ip_protocol_deliver_rcu+0x4d/0x420 net/ipv4/ip_input.c:204
     ip_local_deliver_finish+0x110/0x140 net/ipv4/ip_input.c:231
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ip_local_deliver+0x133/0x210 net/ipv4/ip_input.c:252
     dst_input include/net/dst.h:442 [inline]
     ip_rcv_finish+0x121/0x160 net/ipv4/ip_input.c:413
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ip_rcv+0x18f/0x1a0 net/ipv4/ip_input.c:523
     __netif_receive_skb_one_core+0xa7/0xe0 net/core/dev.c:5010
     __netif_receive_skb+0x37/0xf0 net/core/dev.c:5124
     process_backlog+0x1d3/0x420 net/core/dev.c:5955
     napi_poll net/core/dev.c:6392 [inline]
     net_rx_action+0x3ae/0xa90 net/core/dev.c:6460
     __do_softirq+0x115/0x33f kernel/softirq.c:292
     do_softirq_own_stack+0x2a/0x40 arch/x86/entry/entry_64.S:1082
     do_softirq.part.0+0x6b/0x80 kernel/softirq.c:337
     do_softirq kernel/softirq.c:329 [inline]
     __local_bh_enable_ip+0x76/0x80 kernel/softirq.c:189
    
    read to 0xffff88812220763c of 4 bytes by interrupt on cpu 1:
     sk_incoming_cpu_update include/net/sock.h:952 [inline]
     tcp_v4_rcv+0x181a/0x1bb0 net/ipv4/tcp_ipv4.c:1934
     ip_protocol_deliver_rcu+0x4d/0x420 net/ipv4/ip_input.c:204
     ip_local_deliver_finish+0x110/0x140 net/ipv4/ip_input.c:231
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ip_local_deliver+0x133/0x210 net/ipv4/ip_input.c:252
     dst_input include/net/dst.h:442 [inline]
     ip_rcv_finish+0x121/0x160 net/ipv4/ip_input.c:413
     NF_HOOK include/linux/netfilter.h:305 [inline]
     NF_HOOK include/linux/netfilter.h:299 [inline]
     ip_rcv+0x18f/0x1a0 net/ipv4/ip_input.c:523
     __netif_receive_skb_one_core+0xa7/0xe0 net/core/dev.c:5010
     __netif_receive_skb+0x37/0xf0 net/core/dev.c:5124
     process_backlog+0x1d3/0x420 net/core/dev.c:5955
     napi_poll net/core/dev.c:6392 [inline]
     net_rx_action+0x3ae/0xa90 net/core/dev.c:6460
     __do_softirq+0x115/0x33f kernel/softirq.c:292
     run_ksoftirqd+0x46/0x60 kernel/softirq.c:603
     smpboot_thread_fn+0x37d/0x4a0 kernel/smpboot.c:165
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 16 Comm: ksoftirqd/1 Not tainted 5.4.0-rc3+ #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03c2ac95a5913cdd0e34cd7217ef022764c2c4b4
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Nov 4 07:57:55 2019 -0800

    dccp: do not leak jiffies on the wire
    
    [ Upstream commit 3d1e5039f5f87a8731202ceca08764ee7cb010d3 ]
    
    For some reason I missed the case of DCCP passive
    flows in my previous patch.
    
    Fixes: a904a0693c18 ("inet: stop leaking jiffies on the wire")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Thiemo Nagel <tnagel@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 86295a16e62beb9ca9b75daaa2b5e0546dcd5e92
Author: Vishal Kulkarni <vishal@chelsio.com>
Date:   Wed Oct 30 20:17:57 2019 +0530

    cxgb4: fix panic when attaching to ULD fail
    
    [ Upstream commit fc89cc358fb64e2429aeae0f37906126636507ec ]
    
    Release resources when attaching to ULD fail. Otherwise, data
    mismatch is seen between LLD and ULD later on, which lead to
    kernel panic when accessing resources that should not even
    exist in the first place.
    
    Fixes: 94cdb8bb993a ("cxgb4: Add support for dynamic allocation of resources for ULD")
    Signed-off-by: Shahjada Abul Husain <shahjada@chelsio.com>
    Signed-off-by: Vishal Kulkarni <vishal@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e57ba09b35bd189b43da1019b3698b3e0b0d501
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Mon Oct 21 15:56:28 2019 -0400

    nbd: handle racing with error'ed out commands
    
    [ Upstream commit 7ce23e8e0a9cd38338fc8316ac5772666b565ca9 ]
    
    We hit the following warning in production
    
    print_req_error: I/O error, dev nbd0, sector 7213934408 flags 80700
    ------------[ cut here ]------------
    refcount_t: underflow; use-after-free.
    WARNING: CPU: 25 PID: 32407 at lib/refcount.c:190 refcount_sub_and_test_checked+0x53/0x60
    Workqueue: knbd-recv recv_work [nbd]
    RIP: 0010:refcount_sub_and_test_checked+0x53/0x60
    Call Trace:
     blk_mq_free_request+0xb7/0xf0
     blk_mq_complete_request+0x62/0xf0
     recv_work+0x29/0xa1 [nbd]
     process_one_work+0x1f5/0x3f0
     worker_thread+0x2d/0x3d0
     ? rescuer_thread+0x340/0x340
     kthread+0x111/0x130
     ? kthread_create_on_node+0x60/0x60
     ret_from_fork+0x1f/0x30
    ---[ end trace b079c3c67f98bb7c ]---
    
    This was preceded by us timing out everything and shutting down the
    sockets for the device.  The problem is we had a request in the queue at
    the same time, so we completed the request twice.  This can actually
    happen in a lot of cases, we fail to get a ref on our config, we only
    have one connection and just error out the command, etc.
    
    Fix this by checking cmd->status in nbd_read_stat.  We only change this
    under the cmd->lock, so we are safe to check this here and see if we've
    already error'ed this command out, which would indicate that we've
    completed it as well.
    
    Reviewed-by: Mike Christie <mchristi@redhat.com>
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3bb65a1a407f6ac364aa10111be788a1313225a7
Author: Dave Wysochanski <dwysocha@redhat.com>
Date:   Wed Oct 23 05:02:33 2019 -0400

    cifs: Fix cifsInodeInfo lock_sem deadlock when reconnect occurs
    
    [ Upstream commit d46b0da7a33dd8c99d969834f682267a45444ab3 ]
    
    There's a deadlock that is possible and can easily be seen with
    a test where multiple readers open/read/close of the same file
    and a disruption occurs causing reconnect.  The deadlock is due
    a reader thread inside cifs_strict_readv calling down_read and
    obtaining lock_sem, and then after reconnect inside
    cifs_reopen_file calling down_read a second time.  If in
    between the two down_read calls, a down_write comes from
    another process, deadlock occurs.
    
            CPU0                    CPU1
            ----                    ----
    cifs_strict_readv()
     down_read(&cifsi->lock_sem);
                                   _cifsFileInfo_put
                                      OR
                                   cifs_new_fileinfo
                                    down_write(&cifsi->lock_sem);
    cifs_reopen_file()
     down_read(&cifsi->lock_sem);
    
    Fix the above by changing all down_write(lock_sem) calls to
    down_write_trylock(lock_sem)/msleep() loop, which in turn
    makes the second down_read call benign since it will never
    block behind the writer while holding lock_sem.
    
    Signed-off-by: Dave Wysochanski <dwysocha@redhat.com>
    Suggested-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Reviewed--by: Ronnie Sahlberg <lsahlber@redhat.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6dde6239ddc2264855d86d191c6fcc0a435067d9
Author: Alain Volmat <alain.volmat@st.com>
Date:   Tue Oct 15 15:11:58 2019 +0200

    i2c: stm32f7: remove warning when compiling with W=1
    
    [ Upstream commit 348e46fbb4cdb2aead79aee1fd8bb25ec5fd25db ]
    
    Remove the following warning:
    
    drivers/i2c/busses/i2c-stm32f7.c:315:
    warning: cannot understand function prototype:
    'struct stm32f7_i2c_spec i2c_specs[] =
    
    Replace a comment starting with /** by simply /* to avoid having
    it interpreted as a kernel-doc comment.
    
    Fixes: aeb068c57214 ("i2c: i2c-stm32f7: add driver")
    Signed-off-by: Alain Volmat <alain.volmat@st.com>
    Reviewed-by: Pierre-Yves MORDRET <pierre-yves.mordret@st.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17b62bb161c586ee76fa221a9f525322ad0550e1
Author: Jonas Gorski <jonas.gorski@gmail.com>
Date:   Tue Oct 22 21:11:00 2019 +0200

    MIPS: bmips: mark exception vectors as char arrays
    
    [ Upstream commit e4f5cb1a9b27c0f94ef4f5a0178a3fde2d3d0e9e ]
    
    The vectors span more than one byte, so mark them as arrays.
    
    Fixes the following build error when building when using GCC 8.3:
    
    In file included from ./include/linux/string.h:19,
                     from ./include/linux/bitmap.h:9,
                     from ./include/linux/cpumask.h:12,
                     from ./arch/mips/include/asm/processor.h:15,
                     from ./arch/mips/include/asm/thread_info.h:16,
                     from ./include/linux/thread_info.h:38,
                     from ./include/asm-generic/preempt.h:5,
                     from ./arch/mips/include/generated/asm/preempt.h:1,
                     from ./include/linux/preempt.h:81,
                     from ./include/linux/spinlock.h:51,
                     from ./include/linux/mmzone.h:8,
                     from ./include/linux/bootmem.h:8,
                     from arch/mips/bcm63xx/prom.c:10:
    arch/mips/bcm63xx/prom.c: In function 'prom_init':
    ./arch/mips/include/asm/string.h:162:11: error: '__builtin_memcpy' forming offset [2, 32] is out of the bounds [0, 1] of object 'bmips_smp_movevec' with type 'char' [-Werror=array-bounds]
       __ret = __builtin_memcpy((dst), (src), __len); \
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    arch/mips/bcm63xx/prom.c:97:3: note: in expansion of macro 'memcpy'
       memcpy((void *)0xa0000200, &bmips_smp_movevec, 0x20);
       ^~~~~~
    In file included from arch/mips/bcm63xx/prom.c:14:
    ./arch/mips/include/asm/bmips.h:80:13: note: 'bmips_smp_movevec' declared here
     extern char bmips_smp_movevec;
    
    Fixes: 18a1eef92dcd ("MIPS: BMIPS: Introduce bmips.h")
    Signed-off-by: Jonas Gorski <jonas.gorski@gmail.com>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Paul Burton <paulburton@kernel.org>
    Cc: linux-mips@vger.kernel.org
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: James Hogan <jhogan@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f4ca715dae36ff5b737d56165df1b7964a2cb3e
Author: Navid Emamdoost <navid.emamdoost@gmail.com>
Date:   Fri Oct 4 13:58:43 2019 -0500

    of: unittest: fix memory leak in unittest_data_add
    
    [ Upstream commit e13de8fe0d6a51341671bbe384826d527afe8d44 ]
    
    In unittest_data_add, a copy buffer is created via kmemdup. This buffer
    is leaked if of_fdt_unflatten_tree fails. The release for the
    unittest_data buffer is added.
    
    Fixes: b951f9dc7f25 ("Enabling OF selftest to run without machine's devicetree")
    Signed-off-by: Navid Emamdoost <navid.emamdoost@gmail.com>
    Reviewed-by: Frank Rowand <frowand.list@gmail.com>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1cb67a75753979f411c4200794a2b82c0fff225
Author: afzal mohammed <afzal.mohd.ma@gmail.com>
Date:   Mon Oct 21 06:06:14 2019 +0100

    ARM: 8926/1: v7m: remove register save to stack before svc
    
    [ Upstream commit 2ecb287998a47cc0a766f6071f63bc185f338540 ]
    
    r0-r3 & r12 registers are saved & restored, before & after svc
    respectively. Intention was to preserve those registers across thread to
    handler mode switch.
    
    On v7-M, hardware saves the register context upon exception in AAPCS
    complaint way. Restoring r0-r3 & r12 is done from stack location where
    hardware saves it, not from the location on stack where these registers
    were saved.
    
    To clarify, on stm32f429 discovery board:
    
    1. before svc, sp - 0x90009ff8
    2. r0-r3,r12 saved to 0x90009ff8 - 0x9000a00b
    3. upon svc, h/w decrements sp by 32 & pushes registers onto stack
    4. after svc,  sp - 0x90009fd8
    5. r0-r3,r12 restored from 0x90009fd8 - 0x90009feb
    
    Above means r0-r3,r12 is not restored from the location where they are
    saved, but since hardware pushes the registers onto stack, the registers
    are restored correctly.
    
    Note that during register saving to stack (step 2), it goes past
    0x9000a000. And it seems, based on objdump, there are global symbols
    residing there, and it perhaps can cause issues on a non-XIP Kernel
    (on XIP, data section is setup later).
    
    Based on the analysis above, manually saving registers onto stack is at
    best no-op and at worst can cause data section corruption. Hence remove
    storing of registers onto stack before svc.
    
    Fixes: b70cd406d7fe ("ARM: 8671/1: V7M: Preserve registers across switch from Thread to Handler mode")
    Signed-off-by: afzal mohammed <afzal.mohd.ma@gmail.com>
    Acked-by: Vladimir Murzin <vladimir.murzin@arm.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c992eb99d57827f474a713385602c01d509ae08
Author: Bodo Stroesser <bstroesser@ts.fujitsu.com>
Date:   Mon Oct 14 20:29:04 2019 +0200

    scsi: target: core: Do not overwrite CDB byte 1
    
    [ Upstream commit 27e84243cb63601a10e366afe3e2d05bb03c1cb5 ]
    
    passthrough_parse_cdb() - used by TCMU and PSCSI - attepts to reset the LUN
    field of SCSI-2 CDBs (bits 5,6,7 of byte 1).  The current code is wrong as
    for newer commands not having the LUN field it overwrites relevant command
    bits (e.g. for SECURITY PROTOCOL IN / OUT). We think this code was
    unnecessary from the beginning or at least it is no longer useful. So we
    remove it entirely.
    
    Link: https://lore.kernel.org/r/12498eab-76fd-eaad-1316-c2827badb76a@ts.fujitsu.com
    Signed-off-by: Bodo Stroesser <bstroesser@ts.fujitsu.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2ffdcec15f34b9ce0856f42ee6a7ea09767a5bc
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Fri Aug 30 13:22:02 2019 +0300

    ARM: davinci: dm365: Fix McBSP dma_slave_map entry
    
    [ Upstream commit 564b6bb9d42d31fc80c006658cf38940a9b99616 ]
    
    dm365 have only single McBSP, so the device name is without .0
    
    Fixes: 0c750e1fe481d ("ARM: davinci: dm365: Add dma_slave_map to edma")
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Sekhar Nori <nsekhar@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a14db515f1a113aed76a367822e11d9d2f02eb51
Author: Yunfeng Ye <yeyunfeng@huawei.com>
Date:   Wed Oct 16 16:38:45 2019 +0800

    perf kmem: Fix memory leak in compact_gfp_flags()
    
    [ Upstream commit 1abecfcaa7bba21c9985e0136fa49836164dd8fd ]
    
    The memory @orig_flags is allocated by strdup(), it is freed on the
    normal path, but leak to free on the error path.
    
    Fix this by adding free(orig_flags) on the error path.
    
    Fixes: 0e11115644b3 ("perf kmem: Print gfp flags in human readable string")
    Signed-off-by: Yunfeng Ye <yeyunfeng@huawei.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Feilong Lin <linfeilong@huawei.com>
    Cc: Hu Shiyuan <hushiyuan@huawei.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/f9e9f458-96f3-4a97-a1d5-9feec2420e07@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c46bafbce9e4aa83594b59c8461e14223df50e6
Author: Yunfeng Ye <yeyunfeng@huawei.com>
Date:   Tue Oct 15 10:54:14 2019 +0800

    perf c2c: Fix memory leak in build_cl_output()
    
    [ Upstream commit ae199c580da1754a2b051321eeb76d6dacd8707b ]
    
    There is a memory leak problem in the failure paths of
    build_cl_output(), so fix it.
    
    Signed-off-by: Yunfeng Ye <yeyunfeng@huawei.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Feilong Lin <linfeilong@huawei.com>
    Cc: Hu Shiyuan <hushiyuan@huawei.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Link: http://lore.kernel.org/lkml/4d3c0178-5482-c313-98e1-f82090d2d456@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7bd450384128808ef146715ef40241070c2635ac
Author: Anson Huang <Anson.Huang@nxp.com>
Date:   Mon Oct 7 08:43:42 2019 +0800

    ARM: dts: imx7s: Correct GPT's ipg clock source
    
    [ Upstream commit 252b9e21bcf46b0d16f733f2e42b21fdc60addee ]
    
    i.MX7S/D's GPT ipg clock should be from GPT clock root and
    controlled by CCM's GPT CCGR, using correct clock source for
    GPT ipg clock instead of IMX7D_CLK_DUMMY.
    
    Fixes: 3ef79ca6bd1d ("ARM: dts: imx7d: use imx7s.dtsi as base device tree")
    Signed-off-by: Anson Huang <Anson.Huang@nxp.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5d8eb7af5d39fbaa0418fdeeedf8cedd8ac127e
Author: Thomas Bogendoerfer <tbogendoerfer@suse.de>
Date:   Wed Oct 9 17:11:28 2019 +0200

    scsi: fix kconfig dependency warning related to 53C700_LE_ON_BE
    
    [ Upstream commit 8cbf0c173aa096dda526d1ccd66fc751c31da346 ]
    
    When building a kernel with SCSI_SNI_53C710 enabled, Kconfig warns:
    
    WARNING: unmet direct dependencies detected for 53C700_LE_ON_BE
      Depends on [n]: SCSI_LOWLEVEL [=y] && SCSI [=y] && SCSI_LASI700 [=n]
      Selected by [y]:
      - SCSI_SNI_53C710 [=y] && SCSI_LOWLEVEL [=y] && SNI_RM [=y] && SCSI [=y]
    
    Add the missing depends SCSI_SNI_53C710 to 53C700_LE_ON_BE to fix it.
    
    Link: https://lore.kernel.org/r/20191009151128.32411-1-tbogendoerfer@suse.de
    Signed-off-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d350c62ddcf3353805b0d0d9dfe1f3eb7f5a4ffd
Author: Thomas Bogendoerfer <tbogendoerfer@suse.de>
Date:   Wed Oct 9 17:11:18 2019 +0200

    scsi: sni_53c710: fix compilation error
    
    [ Upstream commit 0ee6211408a8e939428f662833c7301394125b80 ]
    
    Drop out memory dev_printk() with wrong device pointer argument.
    
    [mkp: typo]
    
    Link: https://lore.kernel.org/r/20191009151118.32350-1-tbogendoerfer@suse.de
    Signed-off-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a1bd25c9adfe11d8a8842508bac357dde72a7fb8
Author: Hannes Reinecke <hare@suse.com>
Date:   Mon Oct 7 15:57:01 2019 +0200

    scsi: scsi_dh_alua: handle RTPG sense code correctly during state transitions
    
    [ Upstream commit b6ce6fb121a655aefe41dccc077141c102145a37 ]
    
    Some arrays are not capable of returning RTPG data during state
    transitioning, but rather return an 'LUN not accessible, asymmetric access
    state transition' sense code. In these cases we can set the state to
    'transitioning' directly and don't need to evaluate the RTPG data (which we
    won't have anyway).
    
    Link: https://lore.kernel.org/r/20191007135701.32389-1-hare@suse.de
    Reviewed-by: Laurence Oberman <loberman@redhat.com>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a7a7df16593867c4fa81de38ca08da2f7dd53230
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Sat Aug 31 17:01:58 2019 +0100

    ARM: mm: fix alignment handler faults under memory pressure
    
    [ Upstream commit 67e15fa5b487adb9b78a92789eeff2d6ec8f5cee ]
    
    When the system has high memory pressure, the page containing the
    instruction may be paged out.  Using probe_kernel_address() means that
    if the page is swapped out, the resulting page fault will not be
    handled because page faults are disabled by this function.
    
    Use get_user() to read the instruction instead.
    
    Reported-by: Jing Xiangfeng <jingxiangfeng@huawei.com>
    Fixes: b255188f90e2 ("ARM: fix scheduling while atomic warning in alignment handling code")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91aa77f738cc6e1decb8a56480968ab7ce09432f
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 26 11:14:26 2019 +0300

    pinctrl: ns2: Fix off by one bugs in ns2_pinmux_enable()
    
    [ Upstream commit 39b65fbb813089e366b376bd8acc300b6fd646dc ]
    
    The pinctrl->functions[] array has pinctrl->num_functions elements and
    the pinctrl->groups[] array is the same way.  These are set in
    ns2_pinmux_probe().  So the > comparisons should be >= so that we don't
    read one element beyond the end of the array.
    
    Fixes: b5aa1006e4a9 ("pinctrl: ns2: add pinmux driver support for Broadcom NS2 SoC")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20190926081426.GB2332@mwanda
    Acked-by: Scott Branden <scott.branden@broadcom.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 460c6cc9fee9b75787bf6cb157a6440e23010f8d
Author: Adam Ford <aford173@gmail.com>
Date:   Fri Aug 16 17:58:12 2019 -0500

    ARM: dts: logicpd-torpedo-som: Remove twl_keypad
    
    [ Upstream commit 6b512b0ee091edcb8e46218894e4c917d919d3dc ]
    
    The TWL4030 used on the Logit PD Torpedo SOM does not have the
    keypad pins routed.  This patch disables the twl_keypad driver
    to remove some splat during boot:
    
    twl4030_keypad 48070000.i2c:twl@48:keypad: missing or malformed property linux,keymap: -22
    twl4030_keypad 48070000.i2c:twl@48:keypad: Failed to build keymap
    twl4030_keypad: probe of 48070000.i2c:twl@48:keypad failed with error -22
    
    Signed-off-by: Adam Ford <aford173@gmail.com>
    [tony@atomide.com: removed error time stamps]
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d8708726ef89ae67f6ac0103664cb8ea161eba09
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Wed Oct 2 16:30:37 2019 +0100

    ASoc: rockchip: i2s: Fix RPM imbalance
    
    [ Upstream commit b1e620e7d32f5aad5353cc3cfc13ed99fea65d3a ]
    
    If rockchip_pcm_platform_register() fails, e.g. upon deferring to wait
    for an absent DMA channel, we return without disabling RPM, which makes
    subsequent re-probe attempts scream with errors about the unbalanced
    enable. Don't do that.
    
    Fixes: ebb75c0bdba2 ("ASoC: rockchip: i2s: Adjust devm usage")
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Link: https://lore.kernel.org/r/bcb12a849a05437fb18372bc7536c649b94bdf07.1570029862.git.robin.murphy@arm.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3be8f22b34cea1815e1f72e722bef125a3db804
Author: Stuart Henderson <stuarth@opensource.cirrus.com>
Date:   Wed Oct 2 09:42:40 2019 +0100

    ASoC: wm_adsp: Don't generate kcontrols without READ flags
    
    [ Upstream commit 3ae7359c0e39f42a96284d6798fc669acff38140 ]
    
    User space always expects to be able to read ALSA controls, so ensure
    no kcontrols are generated without an appropriate READ flag. In the case
    of a read of such a control zeros will be returned.
    
    Signed-off-by: Stuart Henderson <stuarth@opensource.cirrus.com>
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/20191002084240.21589-1-ckeepax@opensource.cirrus.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e48c52747169e4a98a8efe589a24dfb7a08f704b
Author: Yizhuo <yzhai003@ucr.edu>
Date:   Sun Sep 29 10:09:57 2019 -0700

    regulator: pfuze100-regulator: Variable "val" in pfuze100_regulator_probe() could be uninitialized
    
    [ Upstream commit 1252b283141f03c3dffd139292c862cae10e174d ]
    
    In function pfuze100_regulator_probe(), variable "val" could be
    initialized if regmap_read() fails. However, "val" is used to
    decide the control flow later in the if statement, which is
    potentially unsafe.
    
    Signed-off-by: Yizhuo <yzhai003@ucr.edu>
    Link: https://lore.kernel.org/r/20190929170957.14775-1-yzhai003@ucr.edu
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16bacd2121cd91a92fbe0e2479dc71a31946e437
Author: Axel Lin <axel.lin@ingics.com>
Date:   Sun Sep 29 17:58:48 2019 +0800

    regulator: ti-abb: Fix timeout in ti_abb_wait_txdone/ti_abb_clear_all_txdone
    
    [ Upstream commit f64db548799e0330897c3203680c2ee795ade518 ]
    
    ti_abb_wait_txdone() may return -ETIMEDOUT when ti_abb_check_txdone()
    returns true in the latest iteration of the while loop because the timeout
    value is abb->settling_time + 1. Similarly, ti_abb_clear_all_txdone() may
    return -ETIMEDOUT when ti_abb_check_txdone() returns false in the latest
    iteration of the while loop. Fix it.
    
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Acked-by: Nishanth Menon <nm@ti.com>
    Link: https://lore.kernel.org/r/20190929095848.21960-1-axel.lin@ingics.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 80d0c02e28601ba0631d6dd92b93d16fda76832c
Author: Rayagonda Kokatanur <rayagonda.kokatanur@broadcom.com>
Date:   Mon Sep 9 14:05:27 2019 +0530

    arm64: dts: Fix gpio to pinmux mapping
    
    [ Upstream commit 965f6603e3335a953f4f876792074cb36bf65f7f ]
    
    There are total of 151 non-secure gpio (0-150) and four
    pins of pinmux (91, 92, 93 and 94) are not mapped to any
    gpio pin, hence update same in DT.
    
    Fixes: 8aa428cc1e2e ("arm64: dts: Add pinctrl DT nodes for Stingray SOC")
    Signed-off-by: Rayagonda Kokatanur <rayagonda.kokatanur@broadcom.com>
    Reviewed-by: Ray Jui <ray.jui@broadcom.com>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
