commit 7472c4028e2357202949f99ad94c5a5a34f95666
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Mar 5 16:42:23 2020 +0100

    Linux 4.19.108

commit 9d2fdc4c7efd90860378bdc18bd5f7c199c8d645
Author: Paul Moore <paul@paul-moore.com>
Date:   Mon Feb 24 16:38:57 2020 -0500

    audit: always check the netlink payload length in audit_receive_msg()
    
    [ Upstream commit 756125289285f6e55a03861bf4b6257aa3d19a93 ]
    
    This patch ensures that we always check the netlink payload length
    in audit_receive_msg() before we take any action on the payload
    itself.
    
    Cc: stable@vger.kernel.org
    Reported-by: syzbot+399c44bf1f43b8747403@syzkaller.appspotmail.com
    Reported-by: syzbot+e4b12d8d202701f08b6d@syzkaller.appspotmail.com
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 469020eb5bee70cf6d0aa8125faafe5da744df31
Author: David Rientjes <rientjes@google.com>
Date:   Thu Jan 30 22:14:48 2020 -0800

    mm, thp: fix defrag setting if newline is not used
    
    commit f42f25526502d851d0e3ca1e46297da8aafce8a7 upstream.
    
    If thp defrag setting "defer" is used and a newline is *not* used when
    writing to the sysfs file, this is interpreted as the "defer+madvise"
    option.
    
    This is because we do prefix matching and if five characters are written
    without a newline, the current code ends up comparing to the first five
    bytes of the "defer+madvise" option and using that instead.
    
    Use the more appropriate sysfs_streq() that handles the trailing newline
    for us.  Since this doubles as a nice cleanup, do it in enabled_store()
    as well.
    
    The current implementation relies on prefix matching: the number of
    bytes compared is either the number of bytes written or the length of
    the option being compared.  With a newline, "defer\n" does not match
    "defer+"madvise"; without a newline, however, "defer" is considered to
    match "defer+madvise" (prefix matching is only comparing the first five
    bytes).  End result is that writing "defer" is broken unless it has an
    additional trailing character.
    
    This means that writing "madv" in the past would match and set
    "madvise".  With strict checking, that no longer is the case but it is
    unlikely anybody is currently doing this.
    
    Link: http://lkml.kernel.org/r/alpine.DEB.2.21.2001171411020.56385@chino.kir.corp.google.com
    Fixes: 21440d7eb904 ("mm, thp: add new defer+madvise defrag option")
    Signed-off-by: David Rientjes <rientjes@google.com>
    Suggested-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Mel Gorman <mgorman@techsingularity.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1b49dd476cb6742fee960db0f990d73647ef351
Author: Wei Yang <richardw.yang@linux.intel.com>
Date:   Thu Jan 30 22:14:29 2020 -0800

    mm/huge_memory.c: use head to check huge zero page
    
    commit cb829624867b5ab10bc6a7036d183b1b82bfe9f8 upstream.
    
    The page could be a tail page, if this is the case, this BUG_ON will
    never be triggered.
    
    Link: http://lkml.kernel.org/r/20200110032610.26499-1-richardw.yang@linux.intel.com
    Fixes: e9b61f19858a ("thp: reintroduce split_huge_page()")
    
    Signed-off-by: Wei Yang <richardw.yang@linux.intel.com>
    Acked-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3155c63955b3b57f36a290b5980b6aa6c0d17afd
Author: Matteo Croce <mcroce@redhat.com>
Date:   Thu Jan 30 20:10:19 2020 +0100

    netfilter: nf_flowtable: fix documentation
    
    commit 78e06cf430934fc3768c342cbebdd1013dcd6fa7 upstream.
    
    In the flowtable documentation there is a missing semicolon, the command
    as is would give this error:
    
        nftables.conf:5:27-33: Error: syntax error, unexpected devices, expecting newline or semicolon
                        hook ingress priority 0 devices = { br0, pppoe-data };
                                                ^^^^^^^
        nftables.conf:4:12-13: Error: invalid hook (null)
                flowtable ft {
                          ^^
    
    Fixes: 19b351f16fd9 ("netfilter: add flowtable documentation")
    Signed-off-by: Matteo Croce <mcroce@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc09b25efe0d87c2b5137b959030ed943f1eae6f
Author: Xin Long <lucien.xin@gmail.com>
Date:   Fri Dec 13 16:53:05 2019 +0800

    netfilter: nft_tunnel: no need to call htons() when dumping ports
    
    commit cf3e204a1ca5442190018a317d9ec181b4639bd6 upstream.
    
    info->key.tp_src and tp_dst are __be16, when using nla_put_be16()
    to dump them, htons() is not needed, so remove it in this patch.
    
    Fixes: af308b94a2a4 ("netfilter: nf_tables: add tunnel support")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95722ea2a194dd6933ace84188f6b2a8b987a6f4
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Tue Jan 14 11:06:02 2020 -0800

    thermal: brcmstb_thermal: Do not use DT coefficients
    
    commit e1ff6fc22f19e2af8adbad618526b80067911d40 upstream.
    
    At the time the brcmstb_thermal driver and its binding were merged, the
    DT binding did not make the coefficients properties a mandatory one,
    therefore all users of the brcmstb_thermal driver out there have a non
    functional implementation with zero coefficients. Even if these
    properties were provided, the formula used for computation is incorrect.
    
    The coefficients are entirely process specific (right now, only 28nm is
    supported) and not board or SoC specific, it is therefore appropriate to
    hard code them in the driver given the compatibility string we are
    probed with which has to be updated whenever a new process is
    introduced.
    
    We remove the existing coefficients definition since subsequent patches
    are going to add support for a new process and will introduce new
    coefficients as well.
    
    Fixes: 9e03cf1b2dd5 ("thermal: add brcmstb AVS TMON driver")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Amit Kucheria <amit.kucheria@linaro.org>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20200114190607.29339-2-f.fainelli@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 371872d4861b3faca31052f4ba9a9eca83fdf5b2
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Wed Dec 18 13:55:06 2019 -0800

    KVM: x86: Remove spurious clearing of async #PF MSR
    
    commit 208050dac5ef4de5cb83ffcafa78499c94d0b5ad upstream.
    
    Remove a bogus clearing of apf.msr_val from kvm_arch_vcpu_destroy().
    
    apf.msr_val is only set to a non-zero value by kvm_pv_enable_async_pf(),
    which is only reachable by kvm_set_msr_common(), i.e. by writing
    MSR_KVM_ASYNC_PF_EN.  KVM does not autonomously write said MSR, i.e.
    can only be written via KVM_SET_MSRS or KVM_RUN.  Since KVM_SET_MSRS and
    KVM_RUN are vcpu ioctls, they require a valid vcpu file descriptor.
    kvm_arch_vcpu_destroy() is only called if KVM_CREATE_VCPU fails, and KVM
    declares KVM_CREATE_VCPU successful once the vcpu fd is installed and
    thus visible to userspace.  Ergo, apf.msr_val cannot be non-zero when
    kvm_arch_vcpu_destroy() is called.
    
    Fixes: 344d9588a9df0 ("KVM: Add PV MSR to enable asynchronous page faults delivery.")
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c39f15b80d566d577b54201951c2f19e665f965
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Wed Dec 18 13:55:05 2019 -0800

    KVM: x86: Remove spurious kvm_mmu_unload() from vcpu destruction path
    
    commit 9d979c7e6ff43ca3200ffcb74f57415fd633a2da upstream.
    
    x86 does not load its MMU until KVM_RUN, which cannot be invoked until
    after vCPU creation succeeds.  Given that kvm_arch_vcpu_destroy() is
    called if and only if vCPU creation fails, it is impossible for the MMU
    to be loaded.
    
    Note, the bogus kvm_mmu_unload() call was added during an unrelated
    refactoring of vCPU allocation, i.e. was presumably added as an
    opportunstic "fix" for a perceived leak.
    
    Fixes: fb3f0f51d92d1 ("KVM: Dynamically allocate vcpus")
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6225d10191b6168f10cd3427b401c46d48b15aca
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Dec 16 13:22:33 2019 -0300

    perf hists browser: Restore ESC as "Zoom out" of DSO/thread/etc
    
    commit 3f7774033e6820d25beee5cf7aefa11d4968b951 upstream.
    
    We need to set actions->ms.map since 599a2f38a989 ("perf hists browser:
    Check sort keys before hot key actions"), as in that patch we bail out
    if map is NULL.
    
    Reviewed-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Fixes: 599a2f38a989 ("perf hists browser: Check sort keys before hot key actions")
    Link: https://lkml.kernel.org/n/tip-wp1ssoewy6zihwwexqpohv0j@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c72358a02ffb939ed3d4e6fe5fa5f2793f2922ed
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Mon Nov 11 10:03:56 2019 +0100

    pwm: omap-dmtimer: put_device() after of_find_device_by_node()
    
    commit c7cb3a1dd53f63c64fb2b567d0be130b92a44d91 upstream.
    
    This was found by coccicheck:
    
            drivers/pwm/pwm-omap-dmtimer.c:304:2-8: ERROR: missing put_device;
            call of_find_device_by_node on line 255, but without a corresponding
            object release within this function.
    
    Reported-by: Markus Elfring <elfring@users.sourceforge.net>
    Fixes: 6604c6556db9 ("pwm: Add PWM driver for OMAP using dual-mode timers")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 39af044d1ccb207da43af5c060bb0fb0dd548b3e
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Wed Nov 27 14:57:04 2019 +0900

    kprobes: Set unoptimized flag after unoptimizing code
    
    commit f66c0447cca1281116224d474cdb37d6a18e4b5b upstream.
    
    Set the unoptimized flag after confirming the code is completely
    unoptimized. Without this fix, when a kprobe hits the intermediate
    modified instruction (the first byte is replaced by an INT3, but
    later bytes can still be a jump address operand) while unoptimizing,
    it can return to the middle byte of the modified code, which causes
    an invalid instruction exception in the kernel.
    
    Usually, this is a rare case, but if we put a probe on the function
    call while text patching, it always causes a kernel panic as below:
    
     # echo p text_poke+5 > kprobe_events
     # echo 1 > events/kprobes/enable
     # echo 0 > events/kprobes/enable
    
    invalid opcode: 0000 [#1] PREEMPT SMP PTI
     RIP: 0010:text_poke+0x9/0x50
     Call Trace:
      arch_unoptimize_kprobe+0x22/0x28
      arch_unoptimize_kprobes+0x39/0x87
      kprobe_optimizer+0x6e/0x290
      process_one_work+0x2a0/0x610
      worker_thread+0x28/0x3d0
      ? process_one_work+0x610/0x610
      kthread+0x10d/0x130
      ? kthread_park+0x80/0x80
      ret_from_fork+0x3a/0x50
    
    text_poke() is used for patching the code in optprobes.
    
    This can happen even if we blacklist text_poke() and other functions,
    because there is a small time window during which we show the intermediate
    code to other CPUs.
    
     [ mingo: Edited the changelog. ]
    
    Tested-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: bristot@redhat.com
    Fixes: 6274de4984a6 ("kprobes: Support delayed unoptimizing")
    Link: https://lkml.kernel.org/r/157483422375.25881.13508326028469515760.stgit@devnote2
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81566e6b3a70b4347d071fbca623da8521ec4a1f
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Jan 26 11:44:29 2020 +0100

    drivers: net: xgene: Fix the order of the arguments of 'alloc_etherdev_mqs()'
    
    commit 5a44c71ccda60a50073c5d7fe3f694cdfa3ab0c2 upstream.
    
    'alloc_etherdev_mqs()' expects first 'tx', then 'rx'. The semantic here
    looks reversed.
    
    Reorder the arguments passed to 'alloc_etherdev_mqs()' in order to keep
    the correct semantic.
    
    In fact, this is a no-op because both XGENE_NUM_[RT]X_RING are 8.
    
    Fixes: 107dec2749fe ("drivers: net: xgene: Add support for multiple queues")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6de4b024d6d989386d82944cba26080430d1917a
Author: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
Date:   Fri Nov 16 09:58:43 2018 +0530

    perf stat: Fix shadow stats for clock events
    
    commit 57ddf09173c1e7d0511ead8924675c7198e56545 upstream.
    
    Commit 0aa802a79469 ("perf stat: Get rid of extra clock display
    function") introduced scale and unit for clock events. Thus,
    perf_stat__update_shadow_stats() now saves scaled values of clock events
    in msecs, instead of original nsecs. But while calculating values of
    shadow stats we still consider clock event values in nsecs. This results
    in a wrong shadow stat values. Ex,
    
      # ./perf stat -e task-clock,cycles ls
        <SNIP>
                  2.60 msec task-clock:u    #    0.877 CPUs utilized
             2,430,564      cycles:u        # 1215282.000 GHz
    
    Fix this by saving original nsec values for clock events in
    perf_stat__update_shadow_stats(). After patch:
    
      # ./perf stat -e task-clock,cycles ls
        <SNIP>
                  3.14 msec task-clock:u    #    0.839 CPUs utilized
             3,094,528      cycles:u        #    0.985 GHz
    
    Suggested-by: Jiri Olsa <jolsa@redhat.com>
    Reported-by: Anton Blanchard <anton@samba.org>
    Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Reviewed-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Thomas Richter <tmricht@linux.vnet.ibm.com>
    Cc: yuzhoujian@didichuxing.com
    Fixes: 0aa802a79469 ("perf stat: Get rid of extra clock display function")
    Link: http://lkml.kernel.org/r/20181116042843.24067-1-ravi.bangoria@linux.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2255c29ed609d3a6343184ecb00ddb34a6ab3836
Author: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
Date:   Thu Nov 15 15:25:32 2018 +0530

    perf stat: Use perf_evsel__is_clocki() for clock events
    
    commit eb08d006054e7e374592068919e32579988602d4 upstream.
    
    We already have function to check if a given event is either
    SW_CPU_CLOCK or SW_TASK_CLOCK. Utilize it.
    
    Signed-off-by: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Anton Blanchard <anton@samba.org>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Thomas Richter <tmricht@linux.vnet.ibm.com>
    Cc: yuzhoujian@didichuxing.com
    Link: http://lkml.kernel.org/r/20181115095533.16930-1-ravi.bangoria@linux.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d71744b5c149ebc78b7b70bf45298db838c15ff4
Author: Vincent Guittot <vincent.guittot@linaro.org>
Date:   Wed Feb 6 17:14:22 2019 +0100

    sched/fair: Fix O(nr_cgroups) in the load balancing path
    
    commit 039ae8bcf7a5f4476f4487e6bf816885fb3fb617 upstream.
    
    This re-applies the commit reverted here:
    
      commit c40f7d74c741 ("sched/fair: Fix infinite loop in update_blocked_averages() by reverting a9e7f6544b9c")
    
    I.e. now that cfs_rq can be safely removed/added in the list, we can re-apply:
    
     commit a9e7f6544b9c ("sched/fair: Fix O(nr_cgroups) in load balance path")
    
    Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: sargun@sargun.me
    Cc: tj@kernel.org
    Cc: xiexiuqi@huawei.com
    Cc: xiezhipeng1@huawei.com
    Link: https://lkml.kernel.org/r/1549469662-13614-3-git-send-email-vincent.guittot@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Vishnu Rangayyan <vishnu.rangayyan@apple.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1f1a978a70a2271250562e2e89c9137c863591a
Author: Vincent Guittot <vincent.guittot@linaro.org>
Date:   Wed Feb 6 17:14:21 2019 +0100

    sched/fair: Optimize update_blocked_averages()
    
    commit 31bc6aeaab1d1de8959b67edbed5c7a4b3cdbe7c upstream.
    
    Removing a cfs_rq from rq->leaf_cfs_rq_list can break the parent/child
    ordering of the list when it will be added back. In order to remove an
    empty and fully decayed cfs_rq, we must remove its children too, so they
    will be added back in the right order next time.
    
    With a normal decay of PELT, a parent will be empty and fully decayed
    if all children are empty and fully decayed too. In such a case, we just
    have to ensure that the whole branch will be added when a new task is
    enqueued. This is default behavior since :
    
      commit f6783319737f ("sched/fair: Fix insertion in rq->leaf_cfs_rq_list")
    
    In case of throttling, the PELT of throttled cfs_rq will not be updated
    whereas the parent will. This breaks the assumption made above unless we
    remove the children of a cfs_rq that is throttled. Then, they will be
    added back when unthrottled and a sched_entity will be enqueued.
    
    As throttled cfs_rq are now removed from the list, we can remove the
    associated test in update_blocked_averages().
    
    Signed-off-by: Vincent Guittot <vincent.guittot@linaro.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: sargun@sargun.me
    Cc: tj@kernel.org
    Cc: xiexiuqi@huawei.com
    Cc: xiezhipeng1@huawei.com
    Link: https://lkml.kernel.org/r/1549469662-13614-2-git-send-email-vincent.guittot@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Vishnu Rangayyan <vishnu.rangayyan@apple.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1489d1713c1c0290897a704dc527b362b1309ec6
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Thu Jan 9 15:56:18 2020 -0800

    KVM: Check for a bad hva before dropping into the ghc slow path
    
    commit fcfbc617547fc6d9552cb6c1c563b6a90ee98085 upstream.
    
    When reading/writing using the guest/host cache, check for a bad hva
    before checking for a NULL memslot, which triggers the slow path for
    handing cross-page accesses.  Because the memslot is nullified on error
    by __kvm_gfn_to_hva_cache_init(), if the bad hva is encountered after
    crossing into a new page, then the kvm_{read,write}_guest() slow path
    could potentially write/access the first chunk prior to detecting the
    bad hva.
    
    Arguably, performing a partial access is semantically correct from an
    architectural perspective, but that behavior is certainly not intended.
    In the original implementation, memslot was not explicitly nullified
    and therefore the partial access behavior varied based on whether the
    memslot itself was null, or if the hva was simply bad.  The current
    behavior was introduced as a seemingly unintentional side effect in
    commit f1b9dd5eb86c ("kvm: Disallow wraparound in
    kvm_gfn_to_hva_cache_init"), which justified the change with "since some
    callers don't check the return code from this function, it sit seems
    prudent to clear ghc->memslot in the event of an error".
    
    Regardless of intent, the partial access is dependent on _not_ checking
    the result of the cache initialization, which is arguably a bug in its
    own right, at best simply weird.
    
    Fixes: 8f964525a121 ("KVM: Allow cross page reads and writes from cached translations.")
    Cc: Jim Mattson <jmattson@google.com>
    Cc: Andrew Honig <ahonig@google.com>
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4e761c9f63ae12c5e2fc586b77082fd07e54212
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Thu Jan 9 17:42:16 2020 -0600

    KVM: SVM: Override default MMIO mask if memory encryption is enabled
    
    commit 52918ed5fcf05d97d257f4131e19479da18f5d16 upstream.
    
    The KVM MMIO support uses bit 51 as the reserved bit to cause nested page
    faults when a guest performs MMIO. The AMD memory encryption support uses
    a CPUID function to define the encryption bit position. Given this, it is
    possible that these bits can conflict.
    
    Use svm_hardware_setup() to override the MMIO mask if memory encryption
    support is enabled. Various checks are performed to ensure that the mask
    is properly defined and rsvd_bits() is used to generate the new mask (as
    was done prior to the change that necessitated this patch).
    
    Fixes: 28a1f3ac1d0c ("kvm: x86: Set highest physical address bits in non-present/reserved SPTEs")
    Suggested-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Reviewed-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6390f6ba90d0396e5c207e075a7ab7ba823dc37f
Author: Brian Norris <briannorris@chromium.org>
Date:   Mon Dec 9 16:39:11 2019 -0800

    mwifiex: delete unused mwifiex_get_intf_num()
    
    commit 1c9f329b084b7b8ea6d60d91a202e884cdcf6aae upstream.
    
    Commit 7afb94da3cd8 ("mwifiex: update set_mac_address logic") fixed the
    only user of this function, partly because the author seems to have
    noticed that, as written, it's on the borderline between highly
    misleading and buggy.
    
    Anyway, no sense in keeping dead code around: let's drop it.
    
    Fixes: 7afb94da3cd8 ("mwifiex: update set_mac_address logic")
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8892a7b91eba3888378cd914fd5fcfad3c1e8c0e
Author: Brian Norris <briannorris@chromium.org>
Date:   Fri Dec 6 11:45:35 2019 -0800

    mwifiex: drop most magic numbers from mwifiex_process_tdls_action_frame()
    
    commit 70e5b8f445fd27fde0c5583460e82539a7242424 upstream.
    
    Before commit 1e58252e334d ("mwifiex: Fix heap overflow in
    mmwifiex_process_tdls_action_frame()"),
    mwifiex_process_tdls_action_frame() already had too many magic numbers.
    But this commit just added a ton more, in the name of checking for
    buffer overflows. That seems like a really bad idea.
    
    Let's make these magic numbers a little less magic, by
    (a) factoring out 'pos[1]' as 'ie_len'
    (b) using 'sizeof' on the appropriate source or destination fields where
        possible, instead of bare numbers
    (c) dropping redundant checks, per below.
    
    Regarding redundant checks: the beginning of the loop has this:
    
                    if (pos + 2 + pos[1] > end)
                            break;
    
    but then individual 'case's include stuff like this:
    
                            if (pos > end - 3)
                                    return;
                            if (pos[1] != 1)
                                    return;
    
    Note that the second 'return' (validating the length, pos[1]) combined
    with the above condition (ensuring 'pos + 2 + length' doesn't exceed
    'end'), makes the first 'return' (whose 'if' can be reworded as 'pos >
    end - pos[1] - 2') redundant. Rather than unwind the magic numbers
    there, just drop those conditions.
    
    Fixes: 1e58252e334d ("mwifiex: Fix heap overflow in mmwifiex_process_tdls_action_frame()")
    Signed-off-by: Brian Norris <briannorris@chromium.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94b4120facdd85e1849caf31b44992182222dffd
Author: Aleksa Sarai <cyphar@cyphar.com>
Date:   Sat Dec 7 01:13:26 2019 +1100

    namei: only return -ECHILD from follow_dotdot_rcu()
    
    commit 2b98149c2377bff12be5dd3ce02ae0506e2dd613 upstream.
    
    It's over-zealous to return hard errors under RCU-walk here, given that
    a REF-walk will be triggered for all other cases handling ".." under
    RCU.
    
    The original purpose of this check was to ensure that if a rename occurs
    such that a directory is moved outside of the bind-mount which the
    resolution started in, it would be detected and blocked to avoid being
    able to mess with paths outside of the bind-mount. However, triggering a
    new REF-walk is just as effective a solution.
    
    Cc: "Eric W. Biederman" <ebiederm@xmission.com>
    Fixes: 397d425dc26d ("vfs: Test for and handle paths that are unreachable from their mnt_root")
    Suggested-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Aleksa Sarai <cyphar@cyphar.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c5521f96a745379079ef07bcf3d3133d6740c4dd
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:49 2020 +0000

    net: ena: make ena rxfh support ETH_RSS_HASH_NO_CHANGE
    
    commit 470793a78ce344bd53d31e0c2d537f71ba957547 upstream.
    
    As the name suggests ETH_RSS_HASH_NO_CHANGE is received upon changing
    the key or indirection table using ethtool while keeping the same hash
    function.
    
    Also add a function for retrieving the current hash function from
    the ena-com layer.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: Saeed Bshara <saeedb@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c394e3d3f7a96de645ade28d30d8b29935faf053
Author: Ursula Braun <ubraun@linux.ibm.com>
Date:   Fri Feb 14 08:59:00 2020 +0100

    net/smc: no peer ID in CLC decline for SMCD
    
    commit 369537c97024dca99303a8d4d6ab38b4f54d3909 upstream.
    
    Just SMCR requires a CLC Peer ID, but not SMCD. The field should be
    zero for SMCD.
    
    Fixes: c758dfddc1b5 ("net/smc: add SMC-D support in CLC messages")
    Signed-off-by: Ursula Braun <ubraun@linux.ibm.com>
    Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f8a249c57029a3bbb3b5af87273213a9e2d186e
Author: Pavel Belous <pbelous@marvell.com>
Date:   Fri Feb 14 18:44:56 2020 +0300

    net: atlantic: fix potential error handling
    
    commit 380ec5b9af7f0d57dbf6ac067fd9f33cff2fef71 upstream.
    
    Code inspection found that in case of mapping error we do return current
    'ret' value. But beside error, it is used to count number of descriptors
    allocated for the packet. In that case map_skb function could return '1'.
    
    Changing it to return zero (number of mapped descriptors for skb)
    
    Fixes: 018423e90bee ("net: ethernet: aquantia: Add ring support code")
    Signed-off-by: Pavel Belous <pbelous@marvell.com>
    Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
    Signed-off-by: Dmitry Bogdanov <dbogdanov@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a819ba2306f881b7d0df437d5c0936323e9c8b4
Author: Pavel Belous <pbelous@marvell.com>
Date:   Fri Feb 14 18:44:55 2020 +0300

    net: atlantic: fix use after free kasan warn
    
    commit a4980919ad6a7be548d499bc5338015e1a9191c6 upstream.
    
    skb->len is used to calculate statistics after xmit invocation.
    
    Under a stress load it may happen that skb will be xmited,
    rx interrupt will come and skb will be freed, all before xmit function
    is even returned.
    
    Eventually, skb->len will access unallocated area.
    
    Moving stats calculation into tx_clean routine.
    
    Fixes: 018423e90bee ("net: ethernet: aquantia: Add ring support code")
    Reported-by: Christophe Vu-Brugier <cvubrugier@fastmail.fm>
    Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
    Signed-off-by: Pavel Belous <pbelous@marvell.com>
    Signed-off-by: Dmitry Bogdanov <dbogdanov@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ededb6efa5fef52fd5b98cdaea056212315a246
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Thu Feb 20 16:42:13 2020 +0200

    net: netlink: cap max groups which will be considered in netlink_bind()
    
    commit 3a20773beeeeadec41477a5ba872175b778ff752 upstream.
    
    Since nl_groups is a u32 we can't bind more groups via ->bind
    (netlink_bind) call, but netlink has supported more groups via
    setsockopt() for a long time and thus nlk->ngroups could be over 32.
    Recently I added support for per-vlan notifications and increased the
    groups to 33 for NETLINK_ROUTE which exposed an old bug in the
    netlink_bind() code causing out-of-bounds access on archs where unsigned
    long is 32 bits via test_bit() on a local variable. Fix this by capping the
    maximum groups in netlink_bind() to BITS_PER_TYPE(u32), effectively
    capping them at 32 which is the minimum of allocated groups and the
    maximum groups which can be bound via netlink_bind().
    
    CC: Christophe Leroy <christophe.leroy@c-s.fr>
    CC: Richard Guy Briggs <rgb@redhat.com>
    Fixes: 4f520900522f ("netlink: have netlink per-protocol bind function return an error code.")
    Reported-by: Erhard F. <erhard_f@mailbox.org>
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2f4906434e621d8bbb11196bfec61d0cd27e7ba
Author: Alexandra Winter <wintera@linux.ibm.com>
Date:   Thu Feb 20 15:54:54 2020 +0100

    s390/qeth: vnicc Fix EOPNOTSUPP precedence
    
    commit 6f3846f0955308b6d1b219419da42b8de2c08845 upstream.
    
    When getting or setting VNICC parameters, the error code EOPNOTSUPP
    should have precedence over EBUSY.
    
    EBUSY is used because vnicc feature and bridgeport feature are mutually
    exclusive, which is a temporary condition.
    Whereas EOPNOTSUPP indicates that the HW does not support all or parts of
    the vnicc feature.
    This issue causes the vnicc sysfs params to show 'blocked by bridgeport'
    for HW that does not support VNICC at all.
    
    Fixes: caa1f0b10d18 ("s390/qeth: add VNICC enable/disable support")
    Signed-off-by: Alexandra Winter <wintera@linux.ibm.com>
    Signed-off-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c0237e8d6acb872098d06e8bf19b61ea470dc48
Author: Peter Chen <peter.chen@nxp.com>
Date:   Sat Feb 1 14:13:44 2020 +0800

    usb: charger: assign specific number for enum value
    
    commit ca4b43c14cd88d28cfc6467d2fa075aad6818f1d upstream.
    
    To work properly on every architectures and compilers, the enum value
    needs to be specific numbers.
    
    Suggested-by: Greg KH <gregkh@linuxfoundation.org>
    Signed-off-by: Peter Chen <peter.chen@nxp.com>
    Link: https://lore.kernel.org/r/1580537624-10179-1-git-send-email-peter.chen@nxp.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8c1f2af773b94cb2d82056d9f464f635b343420
Author: Haiyang Zhang <haiyangz@microsoft.com>
Date:   Fri Feb 21 08:32:18 2020 -0800

    hv_netvsc: Fix unwanted wakeup in netvsc_attach()
    
    commit f6f13c125e05603f68f5bf31f045b95e6d493598 upstream.
    
    When netvsc_attach() is called by operations like changing MTU, etc.,
    an extra wakeup may happen while netvsc_attach() calling
    rndis_filter_device_add() which sends rndis messages when queue is
    stopped in netvsc_detach(). The completion message will wake up queue 0.
    
    We can reproduce the issue by changing MTU etc., then the wake_queue
    counter from "ethtool -S" will increase beyond stop_queue counter:
         stop_queue: 0
         wake_queue: 1
    The issue causes queue wake up, and counter increment, no other ill
    effects in current code. So we didn't see any network problem for now.
    
    To fix this, initialize tx_disable to true, and set it to false when
    the NIC is ready to be attached or registered.
    
    Fixes: 7b2ee50c0cd5 ("hv_netvsc: common detach logic")
    Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aba7251bd61ded2566c2a358862ecb12a676ecbd
Author: Tina Zhang <tina.zhang@intel.com>
Date:   Fri Feb 21 10:32:34 2020 +0800

    drm/i915/gvt: Separate display reset from ALL_ENGINES reset
    
    commit 3eb55e6f753a379e293395de8d5f3be28351a7f8 upstream.
    
    ALL_ENGINES reset doesn't clobber display with the current gvt-g
    supported platforms. Thus ALL_ENGINES reset shouldn't reset the
    display engine registers emulated by gvt-g.
    
    This fixes guest warning like
    
    [ 14.622026] [drm] Initialized i915 1.6.0 20200114 for 0000:00:03.0 on minor 0
    [ 14.967917] fbcon: i915drmfb (fb0) is primary device
    [ 25.100188] [drm:drm_atomic_helper_wait_for_dependencies [drm_kms_helper]] E RROR [CRTC:51:pipe A] flip_done timed out
    [ 25.100860] -----------[ cut here ]-----------
    [ 25.100861] pll on state mismatch (expected 0, found 1)
    [ 25.101024] WARNING: CPU: 1 PID: 30 at drivers/gpu/drm/i915/display/intel_dis play.c:14382 verify_single_dpll_state.isra.115+0x28f/0x320 [i915]
    [ 25.101025] Modules linked in: intel_rapl_msr intel_rapl_common kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul ghash_clmulni_intel i915 aesni_intel cr ypto_simd cryptd glue_helper cec rc_core video drm_kms_helper joydev drm input_l eds i2c_algo_bit serio_raw fb_sys_fops syscopyarea sysfillrect sysimgblt mac_hid qemu_fw_cfg sch_fq_codel parport_pc ppdev lp parport ip_tables x_tables autofs4 e1000 psmouse i2c_piix4 pata_acpi floppy
    [ 25.101052] CPU: 1 PID: 30 Comm: kworker/u4:1 Not tainted 5.5.0+ #1
    [ 25.101053] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1 .12.1-0-ga5cab58 04/01/2014
    [ 25.101055] Workqueue: events_unbound async_run_entry_fn
    [ 25.101092] RIP: 0010:verify_single_dpll_state.isra.115+0x28f/0x320 [i915]
    [ 25.101093] Code: e0 d9 ff e9 a3 fe ff ff 80 3d e9 c2 11 00 00 44 89 f6 48 c7 c7 c0 9d 88 c0 75 3b e8 eb df d9 ff e9 c7 fe ff ff e8 d1 e0 ae c4 <0f> 0b e9 7a fe ff ff 80 3d c0 c2 11 00 00 8d 71 41 89 c2 48 c7 c7
    [ 25.101093] RSP: 0018:ffffb1de80107878 EFLAGS: 00010286
    [ 25.101094] RAX: 0000000000000000 RBX: ffffb1de80107884 RCX: 0000000000000007
    [ 25.101095] RDX: 0000000000000000 RSI: 0000000000000002 RDI: ffff94fdfdd19740
    [ 25.101095] RBP: ffffb1de80107938 R08: 0000000d6bfdc7b4 R09: 000000000000002b
    [ 25.101096] R10: ffff94fdf82dc000 R11: 0000000000000225 R12: 00000000000001f8
    [ 25.101096] R13: ffff94fdb3ca6a90 R14: ffff94fdb3ca0000 R15: 0000000000000000
    [ 25.101097] FS: 0000000000000000(0000) GS:ffff94fdfdd00000(0000) knlGS:00000 00000000000
    [ 25.101098] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 25.101098] CR2: 00007fbc3e2be9c8 CR3: 000000003339a003 CR4: 0000000000360ee0
    [ 25.101101] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 25.101101] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 25.101102] Call Trace:
    [ 25.101139] intel_atomic_commit_tail+0xde4/0x1520 [i915]
    [ 25.101141] ? flush_workqueue_prep_pwqs+0xfa/0x130
    [ 25.101142] ? flush_workqueue+0x198/0x3c0
    [ 25.101174] intel_atomic_commit+0x2ad/0x320 [i915]
    [ 25.101209] drm_atomic_commit+0x4a/0x50 [drm]
    [ 25.101220] drm_client_modeset_commit_atomic+0x1c4/0x200 [drm]
    [ 25.101231] drm_client_modeset_commit_force+0x47/0x170 [drm]
    [ 25.101250] drm_fb_helper_restore_fbdev_mode_unlocked+0x4e/0xa0 [drm_kms_hel per]
    [ 25.101255] drm_fb_helper_set_par+0x2d/0x60 [drm_kms_helper]
    [ 25.101287] intel_fbdev_set_par+0x1a/0x40 [i915]
    [ 25.101289] ? con_is_visible+0x2e/0x60
    [ 25.101290] fbcon_init+0x378/0x600
    [ 25.101292] visual_init+0xd5/0x130
    [ 25.101296] do_bind_con_driver+0x217/0x430
    [ 25.101297] do_take_over_console+0x7d/0x1b0
    [ 25.101298] do_fbcon_takeover+0x5c/0xb0
    [ 25.101299] fbcon_fb_registered+0x199/0x1a0
    [ 25.101301] register_framebuffer+0x22c/0x330
    [ 25.101306] __drm_fb_helper_initial_config_and_unlock+0x31a/0x520 [drm_kms_h elper]
    [ 25.101311] drm_fb_helper_initial_config+0x35/0x40 [drm_kms_helper]
    [ 25.101341] intel_fbdev_initial_config+0x18/0x30 [i915]
    [ 25.101342] async_run_entry_fn+0x3c/0x150
    [ 25.101343] process_one_work+0x1fd/0x3f0
    [ 25.101344] worker_thread+0x34/0x410
    [ 25.101346] kthread+0x121/0x140
    [ 25.101346] ? process_one_work+0x3f0/0x3f0
    [ 25.101347] ? kthread_park+0x90/0x90
    [ 25.101350] ret_from_fork+0x35/0x40
    [ 25.101351] --[ end trace b5b47d44cd998ba1 ]--
    
    Fixes: 6294b61ba769 ("drm/i915/gvt: add missing display part reset for vGPU reset")
    Signed-off-by: Tina Zhang <tina.zhang@intel.com>
    Reviewed-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20200221023234.28635-1-tina.zhang@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14693320b8cb54b983abce7482fde9083ee4e7c1
Author: Tina Zhang <tina.zhang@intel.com>
Date:   Tue Feb 25 13:35:27 2020 +0800

    drm/i915/gvt: Fix orphan vgpu dmabuf_objs' lifetime
    
    commit b549c252b1292aea959cd9b83537fcb9384a6112 upstream.
    
    Deleting dmabuf item's list head after releasing its container can lead
    to KASAN-reported issue:
    
      BUG: KASAN: use-after-free in __list_del_entry_valid+0x15/0xf0
      Read of size 8 at addr ffff88818a4598a8 by task kworker/u8:3/13119
    
    So fix this issue by puting deleting dmabuf_objs ahead of releasing its
    container.
    
    Fixes: dfb6ae4e14bd6 ("drm/i915/gvt: Handle orphan dmabuf_objs")
    Signed-off-by: Tina Zhang <tina.zhang@intel.com>
    Reviewed-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20200225053527.8336-2-tina.zhang@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ae745ec0aabafcfb2ef2a265b30e865bbdfa563
Author: Wolfram Sang <wsa@the-dreams.de>
Date:   Wed Feb 12 10:35:30 2020 +0100

    i2c: jz4780: silence log flood on txabrt
    
    commit 9e661cedcc0a072d91a32cb88e0515ea26e35711 upstream.
    
    The printout for txabrt is way too talkative and is highly annoying with
    scanning programs like 'i2cdetect'. Reduce it to the minimum, the rest
    can be gained by I2C core debugging and datasheet information. Also,
    make it a debug printout, it won't help the regular user.
    
    Fixes: ba92222ed63a ("i2c: jz4780: Add i2c bus controller driver for Ingenic JZ4780")
    Reported-by: H. Nikolaus Schaller <hns@goldelico.com>
    Tested-by: H. Nikolaus Schaller <hns@goldelico.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bd4758487bcbe3678c47c2daffa7b5988da6994
Author: Gustavo A. R. Silva <gustavo@embeddedor.com>
Date:   Tue Feb 11 08:47:04 2020 -0600

    i2c: altera: Fix potential integer overflow
    
    commit 54498e8070e19e74498a72c7331348143e7e1f8c upstream.
    
    Factor out 100 from the equation and do 32-bit arithmetic (3 * clk_mhz / 10)
    instead of 64-bit.
    
    Notice that clk_mhz is MHz, so the multiplication will never wrap 32 bits
    and there is no need for div_u64().
    
    Addresses-Coverity: 1458369 ("Unintentional integer overflow")
    Fixes: 0560ad576268 ("i2c: altera: Add Altera I2C Controller driver")
    Suggested-by: David Laight <David.Laight@ACULAB.COM>
    Signed-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>
    Reviewed-by: Thor Thayer <thor.thayer@linux.intel.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07a8e34251a22755c0a3f9ea8a173b5d30440811
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Feb 2 21:19:22 2020 +0100

    MIPS: VPE: Fix a double free and a memory leak in 'release_vpe()'
    
    commit bef8e2dfceed6daeb6ca3e8d33f9c9d43b926580 upstream.
    
    Pointer on the memory allocated by 'alloc_progmem()' is stored in
    'v->load_addr'. So this is this memory that should be freed by
    'release_progmem()'.
    
    'release_progmem()' is only a call to 'kfree()'.
    
    With the current code, there is both a double free and a memory leak.
    Fix it by passing the correct pointer to 'release_progmem()'.
    
    Fixes: e01402b115ccc ("More AP / SP bits for the 34K, the Malta bits and things. Still wants")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Paul Burton <paulburton@kernel.org>
    Cc: ralf@linux-mips.org
    Cc: linux-mips@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Cc: kernel-janitors@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6263a83d39faf3571853508a5b7846183498513c
Author: dan.carpenter@oracle.com <dan.carpenter@oracle.com>
Date:   Wed Jan 15 20:46:28 2020 +0300

    HID: hiddev: Fix race in in hiddev_disconnect()
    
    commit 5c02c447eaeda29d3da121a2e17b97ccaf579b51 upstream.
    
    Syzbot reports that "hiddev" is used after it's free in hiddev_disconnect().
    The hiddev_disconnect() function sets "hiddev->exist = 0;" so
    hiddev_release() can free it as soon as we drop the "existancelock"
    lock.  This patch moves the mutex_unlock(&hiddev->existancelock) until
    after we have finished using it.
    
    Reported-by: syzbot+784ccb935f9900cc7c9e@syzkaller.appspotmail.com
    Fixes: 7f77897ef2b6 ("HID: hiddev: fix potential use-after-free")
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bcfa3be32de5a44ca094a5d41d449b2e3178792b
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Wed Dec 4 04:35:25 2019 +0100

    HID: alps: Fix an error handling path in 'alps_input_configured()'
    
    commit 8d2e77b39b8fecb794e19cd006a12f90b14dd077 upstream.
    
    They are issues:
       - if 'input_allocate_device()' fails and return NULL, there is no need
         to free anything and 'input_free_device()' call is a no-op. It can
         be axed.
       - 'ret' is known to be 0 at this point, so we must set it to a
         meaningful value before returning
    
    Fixes: 2562756dde55 ("HID: add Alps I2C HID Touchpad-Stick support")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad598a48fe61c6c2407f08a807cb7a2ea83386b3
Author: Eugenio Pérez <eperezma@redhat.com>
Date:   Fri Feb 21 12:06:56 2020 +0100

    vhost: Check docket sk_family instead of call getname
    
    commit 42d84c8490f9f0931786f1623191fcab397c3d64 upstream.
    
    Doing so, we save one call to get data we already have in the struct.
    
    Also, since there is no guarantee that getname use sockaddr_ll
    parameter beyond its size, we add a little bit of security here.
    It should do not do beyond MAX_ADDR_LEN, but syzbot found that
    ax25_getname writes more (72 bytes, the size of full_sockaddr_ax25,
    versus 20 + 32 bytes of sockaddr_ll + MAX_ADDR_LEN in syzbot repro).
    
    Fixes: 3a4d5c94e9593 ("vhost_net: a kernel-level virtio server")
    Reported-by: syzbot+f2a62d07a5198c819c7b@syzkaller.appspotmail.com
    Signed-off-by: Eugenio Pérez <eperezma@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c47655fba16fa9a6af1c3eef997cf26bf2c92645
Author: Shirish S <shirish.s@amd.com>
Date:   Mon Jan 27 16:35:24 2020 +0530

    amdgpu/gmc_v9: save/restore sdpif regs during S3
    
    commit a3ed353cf8015ba84a0407a5dc3ffee038166ab0 upstream.
    
    fixes S3 issue with IOMMU + S/G  enabled @ 64M VRAM.
    
    Suggested-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Shirish S <shirish.s@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8b1fa6c47bc8b75b08bd9973aee35718d53cf2a
Author: Orson Zhai <orson.unisoc@gmail.com>
Date:   Fri Feb 21 01:37:04 2020 +0800

    Revert "PM / devfreq: Modify the device name as devfreq(X) for sysfs"
    
    commit 66d0e797bf095d407479c89952d42b1d96ef0a7f upstream.
    
    This reverts commit 4585fbcb5331fc910b7e553ad3efd0dd7b320d14.
    
    The name changing as devfreq(X) breaks some user space applications,
    such as Android HAL from Unisoc and Hikey [1].
    The device name will be changed unexpectly after every boot depending
    on module init sequence. It will make trouble to setup some system
    configuration like selinux for Android.
    
    So we'd like to revert it back to old naming rule before any better
    way being found.
    
    [1] https://lkml.org/lkml/2018/5/8/1042
    
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Orson Zhai <orson.unisoc@gmail.com>
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91495e01e83b109db640e451434a0fdb748dec4d
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Thu Feb 20 15:38:01 2020 -0500

    tracing: Disable trace_printk() on post poned tests
    
    commit 78041c0c9e935d9ce4086feeff6c569ed88ddfd4 upstream.
    
    The tracing seftests checks various aspects of the tracing infrastructure,
    and one is filtering. If trace_printk() is active during a self test, it can
    cause the filtering to fail, which will disable that part of the trace.
    
    To keep the selftests from failing because of trace_printk() calls,
    trace_printk() checks the variable tracing_selftest_running, and if set, it
    does not write to the tracing buffer.
    
    As some tracers were registered earlier in boot, the selftest they triggered
    would fail because not all the infrastructure was set up for the full
    selftest. Thus, some of the tests were post poned to when their
    infrastructure was ready (namely file system code). The postpone code did
    not set the tracing_seftest_running variable, and could fail if a
    trace_printk() was added and executed during their run.
    
    Cc: stable@vger.kernel.org
    Fixes: 9afecfbb95198 ("tracing: Postpone tracer start-up tests till the system is more robust")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19b217e0e48b3ccdf43d16585b3081bf4d0b64bb
Author: Wolfram Sang <wsa@the-dreams.de>
Date:   Tue Feb 25 15:12:29 2020 +0100

    macintosh: therm_windtunnel: fix regression when instantiating devices
    
    commit 38b17afb0ebb9ecd41418d3c08bcf9198af4349d upstream.
    
    Removing attach_adapter from this driver caused a regression for at
    least some machines. Those machines had the sensors described in their
    DT, too, so they didn't need manual creation of the sensor devices. The
    old code worked, though, because manual creation came first. Creation of
    DT devices then failed later and caused error logs, but the sensors
    worked nonetheless because of the manually created devices.
    
    When removing attach_adaper, manual creation now comes later and loses
    the race. The sensor devices were already registered via DT, yet with
    another binding, so the driver could not be bound to it.
    
    This fix refactors the code to remove the race and only manually creates
    devices if there are no DT nodes present. Also, the DT binding is updated
    to match both, the DT and manually created devices. Because we don't
    know which device creation will be used at runtime, the code to start
    the kthread is moved to do_probe() which will be called by both methods.
    
    Fixes: 3e7bed52719d ("macintosh: therm_windtunnel: drop using attach_adapter")
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=201723
    Reported-by: Erhard Furtner <erhard_f@mailbox.org>
    Tested-by: Erhard Furtner <erhard_f@mailbox.org>
    Acked-by: Michael Ellerman <mpe@ellerman.id.au> (powerpc)
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Cc: stable@kernel.org # v4.19+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fa616c09626198ecea736fff251b72f8116c19f4
Author: Johan Korsnes <jkorsnes@cisco.com>
Date:   Fri Jan 17 13:08:36 2020 +0100

    HID: core: increase HID report buffer size to 8KiB
    
    commit 84a4062632462c4320704fcdf8e99e89e94c0aba upstream.
    
    We have a HID touch device that reports its opens and shorts test
    results in HID buffers of size 8184 bytes. The maximum size of the HID
    buffer is currently set to 4096 bytes, causing probe of this device to
    fail. With this patch we increase the maximum size of the HID buffer to
    8192 bytes, making device probe and acquisition of said buffers succeed.
    
    Signed-off-by: Johan Korsnes <jkorsnes@cisco.com>
    Cc: Alan Stern <stern@rowland.harvard.edu>
    Cc: Armando Visconti <armando.visconti@st.com>
    Cc: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75c3955b160d32a7faac6db094960c35723eebd4
Author: Johan Korsnes <jkorsnes@cisco.com>
Date:   Fri Jan 17 13:08:35 2020 +0100

    HID: core: fix off-by-one memset in hid_report_raw_event()
    
    commit 5ebdffd25098898aff1249ae2f7dbfddd76d8f8f upstream.
    
    In case a report is greater than HID_MAX_BUFFER_SIZE, it is truncated,
    but the report-number byte is not correctly handled. This results in a
    off-by-one in the following memset, causing a kernel Oops and ensuing
    system crash.
    
    Note: With commit 8ec321e96e05 ("HID: Fix slab-out-of-bounds read in
    hid_field_extract") I no longer hit the kernel Oops as we instead fail
    "controlled" at probe if there is a report too long in the HID
    report-descriptor. hid_report_raw_event() is an exported symbol, so
    presumabely we cannot always rely on this being the case.
    
    Fixes: 966922f26c7f ("HID: fix a crash in hid_report_raw_event()
                         function.")
    Signed-off-by: Johan Korsnes <jkorsnes@cisco.com>
    Cc: Armando Visconti <armando.visconti@st.com>
    Cc: Jiri Kosina <jkosina@suse.cz>
    Cc: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30f22a3842f50b8af9a5c540f541aeb05a13d7e2
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sat Feb 1 12:56:48 2020 +0100

    HID: ite: Only bind to keyboard USB interface on Acer SW5-012 keyboard dock
    
    commit beae56192a2570578ae45050e73c5ff9254f63e6 upstream.
    
    Commit 8f18eca9ebc5 ("HID: ite: Add USB id match for Acer SW5-012 keyboard
    dock") added the USB id for the Acer SW5-012's keyboard dock to the
    hid-ite driver to fix the rfkill driver not working.
    
    Most keyboard docks with an ITE 8595 keyboard/touchpad controller have the
    "Wireless Radio Control" bits which need the special hid-ite driver on the
    second USB interface (the mouse interface) and their touchpad only supports
    mouse emulation, so using generic hid-input handling for anything but
    the "Wireless Radio Control" bits is fine. On these devices we simply bind
    to all USB interfaces.
    
    But unlike other ITE8595 using keyboard docks, the Acer Aspire Switch 10
    (SW5-012)'s touchpad not only does mouse emulation it also supports
    HID-multitouch and all the keys including the "Wireless Radio Control"
    bits have been moved to the first USB interface (the keyboard intf).
    
    So we need hid-ite to handle the first (keyboard) USB interface and have
    it NOT bind to the second (mouse) USB interface so that that can be
    handled by hid-multitouch.c and we get proper multi-touch support.
    
    This commit changes the hid_device_id for the SW5-012 keyboard dock to
    only match on hid devices from the HID_GROUP_GENERIC group, this way
    hid-ite will not bind the the mouse/multi-touch interface which has
    HID_GROUP_MULTITOUCH_WIN_8 as group.
    This fixes the regression to mouse-emulation mode introduced by adding
    the keyboard dock USB id.
    
    Cc: stable@vger.kernel.org
    Fixes: 8f18eca9ebc5 ("HID: ite: Add USB id match for Acer SW5-012 keyboard dock")
    Reported-by: Zdeněk Rampas <zdenda.rampas@gmail.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03d0ca48d336417919ae4807f8ea25fccda26035
Author: Oliver Upton <oupton@google.com>
Date:   Sat Feb 29 11:30:14 2020 -0800

    KVM: VMX: check descriptor table exits on instruction emulation
    
    commit 86f7e90ce840aa1db407d3ea6e9b3a52b2ce923c upstream.
    
    KVM emulates UMIP on hardware that doesn't support it by setting the
    'descriptor table exiting' VM-execution control and performing
    instruction emulation. When running nested, this emulation is broken as
    KVM refuses to emulate L2 instructions by default.
    
    Correct this regression by allowing the emulation of descriptor table
    instructions if L1 hasn't requested 'descriptor table exiting'.
    
    Fixes: 07721feee46b ("KVM: nVMX: Don't emulate instructions in guest mode")
    Reported-by: Jan Kiszka <jan.kiszka@web.de>
    Cc: stable@vger.kernel.org
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Jim Mattson <jmattson@google.com>
    Signed-off-by: Oliver Upton <oupton@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d8e55257bf3c4ed473c93349580a5c072388fd3
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Wed Feb 12 17:59:40 2020 +0300

    ACPI: watchdog: Fix gas->access_width usage
    
    commit 2ba33a4e9e22ac4dda928d3e9b5978a3a2ded4e0 upstream.
    
    ACPI Generic Address Structure (GAS) access_width field is not in bytes
    as the driver seems to expect in few places so fix this by using the
    newly introduced macro ACPI_ACCESS_BYTE_WIDTH().
    
    Fixes: b1abf6fc4982 ("ACPI / watchdog: Fix off-by-one error at resource assignment")
    Fixes: 058dfc767008 ("ACPI / watchdog: Add support for WDAT hardware watchdog")
    Reported-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Cc: 4.16+ <stable@vger.kernel.org> # 4.16+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0872684612b95b3ccbb42a1d46985b2b3f1c2acd
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Wed Feb 12 17:59:39 2020 +0300

    ACPICA: Introduce ACPI_ACCESS_BYTE_WIDTH() macro
    
    commit 1dade3a7048ccfc675650cd2cf13d578b095e5fb upstream.
    
    Sometimes it is useful to find the access_width field value in bytes and
    not in bits so add a helper that can be used for this purpose.
    
    Suggested-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Jean Delvare <jdelvare@suse.de>
    Cc: 4.16+ <stable@vger.kernel.org> # 4.16+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c24d457a824f641ca328a20dd28872cfd97a005a
Author: Paul Moore <paul@paul-moore.com>
Date:   Sat Feb 22 20:36:47 2020 -0500

    audit: fix error handling in audit_data_to_entry()
    
    commit 2ad3e17ebf94b7b7f3f64c050ff168f9915345eb upstream.
    
    Commit 219ca39427bf ("audit: use union for audit_field values since
    they are mutually exclusive") combined a number of separate fields in
    the audit_field struct into a single union.  Generally this worked
    just fine because they are generally mutually exclusive.
    Unfortunately in audit_data_to_entry() the overlap can be a problem
    when a specific error case is triggered that causes the error path
    code to attempt to cleanup an audit_field struct and the cleanup
    involves attempting to free a stored LSM string (the lsm_str field).
    Currently the code always has a non-NULL value in the
    audit_field.lsm_str field as the top of the for-loop transfers a
    value into audit_field.val (both .lsm_str and .val are part of the
    same union); if audit_data_to_entry() fails and the audit_field
    struct is specified to contain a LSM string, but the
    audit_field.lsm_str has not yet been properly set, the error handling
    code will attempt to free the bogus audit_field.lsm_str value that
    was set with audit_field.val at the top of the for-loop.
    
    This patch corrects this by ensuring that the audit_field.val is only
    set when needed (it is cleared when the audit_field struct is
    allocated with kcalloc()).  It also corrects a few other issues to
    ensure that in case of error the proper error code is returned.
    
    Cc: stable@vger.kernel.org
    Fixes: 219ca39427bf ("audit: use union for audit_field values since they are mutually exclusive")
    Reported-by: syzbot+1f4d90ead370d72e450b@syzkaller.appspotmail.com
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47c8e798e96ffc7d8caec770163b0c47bfd1f1ad
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Feb 28 12:22:56 2020 +0300

    ext4: potential crash on allocation error in ext4_alloc_flex_bg_array()
    
    commit 37b0b6b8b99c0e1c1f11abbe7cf49b6d03795b3f upstream.
    
    If sbi->s_flex_groups_allocated is zero and the first allocation fails
    then this code will crash.  The problem is that "i--" will set "i" to
    -1 but when we compare "i >= sbi->s_flex_groups_allocated" then the -1
    is type promoted to unsigned and becomes UINT_MAX.  Since UINT_MAX
    is more than zero, the condition is true so we call kvfree(new_groups[-1]).
    The loop will carry on freeing invalid memory until it crashes.
    
    Fixes: 7c990728b99e ("ext4: fix potential race between s_flex_groups online resizing and access")
    Reviewed-by: Suraj Jitindar Singh <surajjs@amazon.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable@kernel.org
    Link: https://lore.kernel.org/r/20200228092142.7irbc44yaz3by7nb@kili.mountain
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 29a84e8c4eef45318833da404b751bddd9adfba9
Author: Rohit Maheshwari <rohitm@chelsio.com>
Date:   Wed Feb 19 09:40:22 2020 +0530

    net/tls: Fix to avoid gettig invalid tls record
    
    [ Upstream commit 06f5201c6392f998a49ca9c9173e2930c8eb51d8 ]
    
    Current code doesn't check if tcp sequence number is starting from (/after)
    1st record's start sequnce number. It only checks if seq number is before
    1st record's end sequnce number. This problem will always be a possibility
    in re-transmit case. If a record which belongs to a requested seq number is
    already deleted, tls_get_record will start looking into list and as per the
    check it will look if seq number is before the end seq of 1st record, which
    will always be true and will return 1st record always, it should in fact
    return NULL.
    As part of the fix, start looking each record only if the sequence number
    lies in the list else return NULL.
    There is one more check added, driver look for the start marker record to
    handle tcp packets which are before the tls offload start sequence number,
    hence return 1st record if the record is tls start marker and seq number is
    before the 1st record's starting sequence number.
    
    Fixes: e8f69799810c ("net/tls: Add generic NIC offload infrastructure")
    Signed-off-by: Rohit Maheshwari <rohitm@chelsio.com>
    Reviewed-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e8ebca50649e628bc8081fac8b95f9237a3c31b
Author: Michal Kalderon <michal.kalderon@marvell.com>
Date:   Mon Feb 17 13:37:18 2020 +0200

    qede: Fix race between rdma destroy workqueue and link change event
    
    [ Upstream commit af6565adb02d3129d3fae4d9d5da945abaf4417a ]
    
    If an event is added while the rdma workqueue is being destroyed
    it could lead to several races, list corruption, null pointer
    dereference during queue_work or init_queue.
    This fixes the race between the two flows which can occur during
    shutdown.
    
    A kref object and a completion object are added to the rdma_dev
    structure, these are initialized before the workqueue is created.
    The refcnt is used to indicate work is being added to the
    workqueue and ensures the cleanup flow won't start while we're in
    the middle of adding the event.
    Once the work is added, the refcnt is decreased and the cleanup flow
    is safe to run.
    
    Fixes: cee9fbd8e2e ("qede: Add qedr framework")
    Signed-off-by: Ariel Elior <ariel.elior@marvell.com>
    Signed-off-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6ab8a5a3a0029232430acead78a5719ad5cf1917
Author: Benjamin Poirier <bpoirier@cumulusnetworks.com>
Date:   Wed Feb 12 10:41:07 2020 +0900

    ipv6: Fix nlmsg_flags when splitting a multipath route
    
    [ Upstream commit afecdb376bd81d7e16578f0cfe82a1aec7ae18f3 ]
    
    When splitting an RTA_MULTIPATH request into multiple routes and adding the
    second and later components, we must not simply remove NLM_F_REPLACE but
    instead replace it by NLM_F_CREATE. Otherwise, it may look like the netlink
    message was malformed.
    
    For example,
            ip route add 2001:db8::1/128 dev dummy0
            ip route change 2001:db8::1/128 nexthop via fe80::30:1 dev dummy0 \
                    nexthop via fe80::30:2 dev dummy0
    results in the following warnings:
    [ 1035.057019] IPv6: RTM_NEWROUTE with no NLM_F_CREATE or NLM_F_REPLACE
    [ 1035.057517] IPv6: NLM_F_CREATE should be set when creating new route
    
    This patch makes the nlmsg sequence look equivalent for __ip6_ins_rt() to
    what it would get if the multipath route had been added in multiple netlink
    operations:
            ip route add 2001:db8::1/128 dev dummy0
            ip route change 2001:db8::1/128 nexthop via fe80::30:1 dev dummy0
            ip route append 2001:db8::1/128 nexthop via fe80::30:2 dev dummy0
    
    Fixes: 27596472473a ("ipv6: fix ECMP route replacement")
    Signed-off-by: Benjamin Poirier <bpoirier@cumulusnetworks.com>
    Reviewed-by: Michal Kubecek <mkubecek@suse.cz>
    Reviewed-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60845caf25daeeeb6be0bfac19725cd2173c8e9e
Author: Benjamin Poirier <bpoirier@cumulusnetworks.com>
Date:   Wed Feb 12 10:41:06 2020 +0900

    ipv6: Fix route replacement with dev-only route
    
    [ Upstream commit e404b8c7cfb31654c9024d497cec58a501501692 ]
    
    After commit 27596472473a ("ipv6: fix ECMP route replacement") it is no
    longer possible to replace an ECMP-able route by a non ECMP-able route.
    For example,
            ip route add 2001:db8::1/128 via fe80::1 dev dummy0
            ip route replace 2001:db8::1/128 dev dummy0
    does not work as expected.
    
    Tweak the replacement logic so that point 3 in the log of the above commit
    becomes:
    3. If the new route is not ECMP-able, and no matching non-ECMP-able route
    exists, replace matching ECMP-able route (if any) or add the new route.
    
    We can now summarize the entire replace semantics to:
    When doing a replace, prefer replacing a matching route of the same
    "ECMP-able-ness" as the replace argument. If there is no such candidate,
    fallback to the first route found.
    
    Fixes: 27596472473a ("ipv6: fix ECMP route replacement")
    Signed-off-by: Benjamin Poirier <bpoirier@cumulusnetworks.com>
    Reviewed-by: Michal Kubecek <mkubecek@suse.cz>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 487317df3e2e74edcb9ff05e7186b1a14f3bca30
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Feb 18 12:07:53 2020 +0800

    sctp: move the format error check out of __sctp_sf_do_9_1_abort
    
    [ Upstream commit 245709ec8be89af46ea7ef0444c9c80913999d99 ]
    
    When T2 timer is to be stopped, the asoc should also be deleted,
    otherwise, there will be no chance to call sctp_association_free
    and the asoc could last in memory forever.
    
    However, in sctp_sf_shutdown_sent_abort(), after adding the cmd
    SCTP_CMD_TIMER_STOP for T2 timer, it may return error due to the
    format error from __sctp_sf_do_9_1_abort() and miss adding
    SCTP_CMD_ASSOC_FAILED where the asoc will be deleted.
    
    This patch is to fix it by moving the format error check out of
    __sctp_sf_do_9_1_abort(), and do it before adding the cmd
    SCTP_CMD_TIMER_STOP for T2 timer.
    
    Thanks Hangbin for reporting this issue by the fuzz testing.
    
    v1->v2:
      - improve the comment in the code as Marcelo's suggestion.
    
    Fixes: 96ca468b86b0 ("sctp: check invalid value of length parameter in error cause")
    Reported-by: Hangbin Liu <liuhangbin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bee419ec70d957f01aa7d634b1fe4a2dda44ab53
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Wed Feb 19 18:01:22 2020 +0300

    nfc: pn544: Fix occasional HW initialization failure
    
    [ Upstream commit c3331d2fe3fd4d5e321f2467d01f72de7edfb5d0 ]
    
    The PN544 driver checks the "enable" polarity during of driver's probe and
    it's doing that by turning ON and OFF NFC with different polarities until
    enabling succeeds. It takes some time for the hardware to power-down, and
    thus, to deassert the IRQ that is raised by turning ON the hardware.
    Since the delay after last power-down of the polarity-checking process is
    missed in the code, the interrupt may trigger immediately after installing
    the IRQ handler (right after the checking is done), which results in IRQ
    handler trying to touch the disabled HW and ends with marking NFC as
    'DEAD' during of the driver's probe:
    
      pn544_hci_i2c 1-002a: NFC: nfc_en polarity : active high
      pn544_hci_i2c 1-002a: NFC: invalid len byte
      shdlc: llc_shdlc_recv_frame: NULL Frame -> link is dead
    
    This patch fixes the occasional NFC initialization failure on Nexus 7
    device.
    
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24b0fc7c2913759176ad0b41eacad539c08a7d64
Author: Jason Baron <jbaron@akamai.com>
Date:   Mon Feb 17 15:38:09 2020 -0500

    net: sched: correct flower port blocking
    
    [ Upstream commit 8a9093c79863b58cc2f9874d7ae788f0d622a596 ]
    
    tc flower rules that are based on src or dst port blocking are sometimes
    ineffective due to uninitialized stack data. __skb_flow_dissect() extracts
    ports from the skb for tc flower to match against. However, the port
    dissection is not done when when the FLOW_DIS_IS_FRAGMENT bit is set in
    key_control->flags. All callers of __skb_flow_dissect(), zero-out the
    key_control field except for fl_classify() as used by the flower
    classifier. Thus, the FLOW_DIS_IS_FRAGMENT may be set on entry to
    __skb_flow_dissect(), since key_control is allocated on the stack
    and may not be initialized.
    
    Since key_basic and key_control are present for all flow keys, let's
    make sure they are initialized.
    
    Fixes: 62230715fd24 ("flow_dissector: do not dissect l4 ports for fragments")
    Co-developed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: Jason Baron <jbaron@akamai.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ff02134901d54e125b5304dd6e4d2449cfaed69
Author: Arun Parameswaran <arun.parameswaran@broadcom.com>
Date:   Fri Feb 14 13:47:46 2020 -0800

    net: phy: restore mdio regs in the iproc mdio driver
    
    commit 6f08e98d62799e53c89dbf2c9a49d77e20ca648c upstream.
    
    The mii management register in iproc mdio block
    does not have a retention register so it is lost on suspend.
    Save and restore value of register while resuming from suspend.
    
    Fixes: bb1a619735b4 ("net: phy: Initialize mdio clock at probe function")
    Signed-off-by: Arun Parameswaran <arun.parameswaran@broadcom.com>
    Signed-off-by: Scott Branden <scott.branden@broadcom.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Reviewed-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41269509bbd2da66a9e127a5ae4b719f07f9b50f
Author: Horatiu Vultur <horatiu.vultur@microchip.com>
Date:   Mon Feb 17 09:31:33 2020 +0100

    net: mscc: fix in frame extraction
    
    [ Upstream commit a81541041ceb55bcec9a8bb8ad3482263f0a205a ]
    
    Each extracted frame on Ocelot has an IFH. The frame and IFH are extracted
    by reading chuncks of 4 bytes from a register.
    
    In case the IFH and frames were read corretly it would try to read the next
    frame. In case there are no more frames in the queue, it checks if there
    were any previous errors and in that case clear the queue. But this check
    will always succeed also when there are no errors. Because when extracting
    the IFH the error is checked against 4(number of bytes read) and then the
    error is set only if the extraction of the frame failed. So in a happy case
    where there are no errors the err variable is still 4. So it could be
    a case where after the check that there are no more frames in the queue, a
    frame will arrive in the queue but because the error is not reseted, it
    would try to flush the queue. So the frame will be lost.
    
    The fix consist in resetting the error after reading the IFH.
    
    Signed-off-by: Horatiu Vultur <horatiu.vultur@microchip.com>
    Acked-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 75515736cd9db3efcff952ba8e7e001f73b59eaf
Author: Jethro Beekman <jethro@fortanix.com>
Date:   Wed Feb 12 16:43:41 2020 +0100

    net: fib_rules: Correctly set table field when table number exceeds 8 bits
    
    [ Upstream commit 540e585a79e9d643ede077b73bcc7aa2d7b4d919 ]
    
    In 709772e6e06564ed94ba740de70185ac3d792773, RT_TABLE_COMPAT was added to
    allow legacy software to deal with routing table numbers >= 256, but the
    same change to FIB rule queries was overlooked.
    
    Signed-off-by: Jethro Beekman <jethro@fortanix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bc2d23c3ab92645a01dd7f8b72feb0049b664b3
Author: Petr Mladek <pmladek@suse.com>
Date:   Fri Jan 11 17:20:37 2019 +0100

    sysrq: Remove duplicated sysrq message
    
    commit c3fee60908db4a8594f2e4a2131998384b8fa006 upstream.
    
    The commit 97f5f0cd8cd0a0544 ("Input: implement SysRq as a separate input
    handler") added pr_fmt() definition. It caused a duplicated message
    prefix in the sysrq header messages, for example:
    
    [  177.053931] sysrq: SysRq : Show backtrace of all active CPUs
    [  742.864776] sysrq: SysRq : HELP : loglevel(0-9) reboot(b) crash(c)
    
    Fixes: 97f5f0cd8cd0a05 ("Input: implement SysRq as a separate input handler")
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Cc: Tommi Rantala  <tommi.t.rantala@nokia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a85451011c3203c00930860d453c18e57f9f4c52
Author: Petr Mladek <pmladek@suse.com>
Date:   Fri Jan 11 13:45:15 2019 +0100

    sysrq: Restore original console_loglevel when sysrq disabled
    
    commit 075e1a0c50f59ea210561d0d0fedbd945615df78 upstream.
    
    The sysrq header line is printed with an increased loglevel
    to provide users some positive feedback.
    
    The original loglevel is not restored when the sysrq operation
    is disabled. This bug was introduced in 2.6.12 (pre-git-history)
    by the commit ("Allow admin to enable only some of the Magic-Sysrq
    functions").
    
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Reviewed-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Reviewed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0fb31bd53a5e27394916758173eb748c5e0dbd47
Author: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
Date:   Thu Feb 13 13:16:16 2020 +0000

    cfg80211: add missing policy for NL80211_ATTR_STATUS_CODE
    
    [ Upstream commit ea75080110a4c1fa011b0a73cb8f42227143ee3e ]
    
    The nl80211_policy is missing for NL80211_ATTR_STATUS_CODE attribute.
    As a result, for strictly validated commands, it's assumed to not be
    supported.
    
    Signed-off-by: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
    Link: https://lore.kernel.org/r/20200213131608.10541-2-sergey.matyukevich.os@quantenna.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6b77b5ed35cada80ed58c0565fe58e50a29cc3c
Author: Frank Sorenson <sorenson@redhat.com>
Date:   Wed Feb 12 15:31:48 2020 -0600

    cifs: Fix mode output in debugging statements
    
    [ Upstream commit f52aa79df43c4509146140de0241bc21a4a3b4c7 ]
    
    A number of the debug statements output file or directory mode
    in hex.  Change these to print using octal.
    
    Signed-off-by: Frank Sorenson <sorenson@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ffbd6a62ff037bf1705b03039420adc6f6960fc8
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:51 2020 +0000

    net: ena: ena-com.c: prevent NULL pointer dereference
    
    [ Upstream commit c207979f5ae10ed70aff1bb13f39f0736973de99 ]
    
    comp_ctx can be NULL in a very rare case when an admin command is executed
    during the execution of ena_remove().
    
    The bug scenario is as follows:
    
    * ena_destroy_device() sets the comp_ctx to be NULL
    * An admin command is executed before executing unregister_netdev(),
      this can still happen because our device can still receive callbacks
      from the netdev infrastructure such as ethtool commands.
    * When attempting to access the comp_ctx, the bug occurs since it's set
      to NULL
    
    Fix:
    Added a check that comp_ctx is not NULL
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2c3b6d7c25cda181481e28294b678327fc0e8be9
Author: Sameeh Jubran <sameehj@amazon.com>
Date:   Tue Feb 11 15:17:50 2020 +0000

    net: ena: ethtool: use correct value for crc32 hash
    
    [ Upstream commit 886d2089276e40d460731765083a741c5c762461 ]
    
    Up till kernel 4.11 there was no enum defined for crc32 hash in ethtool,
    thus the xor enum was used for supporting crc32.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bb98ec409727fe3f3b5ec1dbe1a0361146886eb
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:47 2020 +0000

    net: ena: fix incorrectly saving queue numbers when setting RSS indirection table
    
    [ Upstream commit 92569fd27f5cb0ccbdf7c7d70044b690e89a0277 ]
    
    The indirection table has the indices of the Rx queues. When we store it
    during set indirection operation, we convert the indices to our internal
    representation of the indices.
    
    Our internal representation of the indices is: even indices for Tx and
    uneven indices for Rx, where every Tx/Rx pair are in a consecutive order
    starting from 0. For example if the driver has 3 queues (3 for Tx and 3
    for Rx) then the indices are as follows:
    0  1  2  3  4  5
    Tx Rx Tx Rx Tx Rx
    
    The BUG:
    The issue is that when we satisfy a get request for the indirection
    table, we don't convert the indices back to the original representation.
    
    The FIX:
    Simply apply the inverse function for the indices of the indirection
    table after we set it.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aeeff8dd696ceedd8af74a3a4178b0d0ed3da570
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:46 2020 +0000

    net: ena: rss: store hash function as values and not bits
    
    [ Upstream commit 4844470d472d660c26149ad764da2406adb13423 ]
    
    The device receives, stores and retrieves the hash function value as bits
    and not as their enum value.
    
    The bug:
    * In ena_com_set_hash_function() we set
      cmd.u.flow_hash_func.selected_func to the bit value of rss->hash_func.
     (1 << rss->hash_func)
    * In ena_com_get_hash_function() we retrieve the hash function and store
      it's bit value in rss->hash_func. (Now the bit value of rss->hash_func
      is stored in rss->hash_func instead of it's enum value)
    
    The fix:
    This commit fixes the issue by converting the retrieved hash function
    values from the device to the matching enum value of the set bit using
    ffs(). ffs() finds the first set bit's index in a word. Since the function
    returns 1 for the LSB's index, we need to subtract 1 from the returned
    value (note that BIT(0) is 1).
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec3306282471cc315597bc46d512ba54bc481564
Author: Sameeh Jubran <sameehj@amazon.com>
Date:   Tue Feb 11 15:17:45 2020 +0000

    net: ena: rss: fix failure to get indirection table
    
    [ Upstream commit 0c8923c0a64fb5d14bebb9a9065d2dc25ac5e600 ]
    
    On old hardware, getting / setting the hash function is not supported while
    gettting / setting the indirection table is.
    
    This commit enables us to still show the indirection table on older
    hardwares by setting the hash function and key to NULL.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4add6f2a0e7d16410ddae18024e02b66f483413a
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:43 2020 +0000

    net: ena: fix incorrect default RSS key
    
    [ Upstream commit 0d1c3de7b8c78a5e44b74b62ede4a63629f5d811 ]
    
    Bug description:
    When running "ethtool -x <if_name>" the key shows up as all zeros.
    
    When we use "ethtool -X <if_name> hfunc toeplitz hkey <some:random:key>" to
    set the key and then try to retrieve it using "ethtool -x <if_name>" then
    we return the correct key because we return the one we saved.
    
    Bug cause:
    We don't fetch the key from the device but instead return the key
    that we have saved internally which is by default set to zero upon
    allocation.
    
    Fix:
    This commit fixes the issue by initializing the key to a random value
    using netdev_rss_key_fill().
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 749b941dc05933fd559dbb98013b776e54e366b3
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:42 2020 +0000

    net: ena: add missing ethtool TX timestamping indication
    
    [ Upstream commit cf6d17fde93bdda23c9b02dd5906a12bf8c55209 ]
    
    Current implementation of the driver calls skb_tx_timestamp()to add a
    software tx timestamp to the skb, however the software-transmit capability
    is not reported in ethtool -T.
    
    This commit updates the ethtool structure to report the software-transmit
    capability in ethtool -T using the standard ethtool_op_get_ts_info().
    This function reports all software timestamping capabilities (tx and rx),
    as well as setting phc_index = -1. phc_index is the index of the PTP
    hardware clock device that will be used for hardware timestamps. Since we
    don't have such a device in ENA, using the default -1 value is the correct
    setting.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Ezequiel Lara Gomez <ezegomez@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15190bc3407738aaf046e0766e9c52e15a497dca
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:41 2020 +0000

    net: ena: fix uses of round_jiffies()
    
    [ Upstream commit 2a6e5fa2f4c25b66c763428a3e65363214946931 ]
    
    >From the documentation of round_jiffies():
    "Rounds a time delta  in the future (in jiffies) up or down to
    (approximately) full seconds. This is useful for timers for which
    the exact time they fire does not matter too much, as long as
    they fire approximately every X seconds.
    By rounding these timers to whole seconds, all such timers will fire
    at the same time, rather than at various times spread out. The goal
    of this is to have the CPU wake up less, which saves power."
    
    There are 2 parts to this patch:
    ================================
    Part 1:
    -------
    In our case we need timer_service to be called approximately every
    X=1 seconds, and the exact time does not matter, so using round_jiffies()
    is the right way to go.
    
    Therefore we add round_jiffies() to the mod_timer() in ena_timer_service().
    
    Part 2:
    -------
    round_jiffies() is used in check_for_missing_keep_alive() when
    getting the jiffies of the expiration of the keep_alive timeout. Here it
    is actually a mistake to use round_jiffies() because we want the exact
    time when keep_alive should expire and not an approximate rounded time,
    which can cause early, false positive, timeouts.
    
    Therefore we remove round_jiffies() in the calculation of
    keep_alive_expired() in check_for_missing_keep_alive().
    
    Fixes: 82ef30f13be0 ("net: ena: add hardware hints capability to the driver")
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 786f19b7dafb0b84da3b0e6a5ad5fe6cb31afc5b
Author: Arthur Kiyanovski <akiyano@amazon.com>
Date:   Tue Feb 11 15:17:40 2020 +0000

    net: ena: fix potential crash when rxfh key is NULL
    
    [ Upstream commit 91a65b7d3ed8450f31ab717a65dcb5f9ceb5ab02 ]
    
    When ethtool -X is called without an hkey, ena_com_fill_hash_function()
    is called with key=NULL, which is passed to memcpy causing a crash.
    
    This commit fixes this issue by checking key is not NULL.
    
    Fixes: 1738cd3ed342 ("net: ena: Add a driver for Amazon Elastic Network Adapters (ENA)")
    Signed-off-by: Sameeh Jubran <sameehj@amazon.com>
    Signed-off-by: Arthur Kiyanovski <akiyano@amazon.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7fb440c5c3524194864e0d65f8f8c9ee74c09ee2
Author: Thierry Reding <treding@nvidia.com>
Date:   Mon Feb 3 15:31:14 2020 +0100

    soc/tegra: fuse: Fix build with Tegra194 configuration
    
    [ Upstream commit 6f4ecbe284df5f22e386a640d9a4b32cede62030 ]
    
    If only Tegra194 support is enabled, the tegra30_fuse_read() and
    tegra30_fuse_init() function are not declared and cause a build failure.
    Add Tegra194 to the preprocessor guard to make sure these functions are
    available for Tegra194-only builds as well.
    
    Link: https://lore.kernel.org/r/20200203143114.3967295-1-thierry.reding@gmail.com
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Olof Johansson <olof@lixom.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57a526f9c001d7b1bcd47c137d31bd65303cf68a
Author: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
Date:   Mon Dec 16 11:08:47 2019 +0900

    ARM: dts: sti: fixup sound frame-inversion for stihxxx-b2120.dtsi
    
    [ Upstream commit f24667779b5348279e5e4328312a141a730a1fc7 ]
    
    frame-inversion is "flag" not "uint32".
    This patch fixup it.
    
    Signed-off-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Reviewed-by: Patrice Chotard <patrice.chotard@st.com>
    Signed-off-by: Patrice Chotard <patrice.chotard@st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 770511c7dc417f61560803038948861c91af551e
Author: Bjørn Mork <bjorn@mork.no>
Date:   Sat Feb 8 16:55:04 2020 +0100

    qmi_wwan: unconditionally reject 2 ep interfaces
    
    [ Upstream commit 00516d13d4cfa56ce39da144db2dbf08b09b9357 ]
    
    We have been using the fact that the QMI and DIAG functions
    usually are the only ones with class/subclass/protocol being
    ff/ff/ff on Quectel modems. This has allowed us to match the
    QMI function without knowing the exact interface number,
    which can vary depending on firmware configuration.
    
    The ability to silently reject the DIAG function, which is
    usually handled by the option driver, is important for this
    method to work.  This is done based on the knowledge that it
    has exactly 2 bulk endpoints.  QMI function control interfaces
    will have either 3 or 1 endpoint. This rule is universal so
    the quirk condition can be removed.
    
    The fixed layouts known from the Gobi1k and Gobi2k modems
    have been gradually replaced by more dynamic layouts, and
    many vendors now use configurable layouts without changing
    device IDs.  Renaming the class/subclass/protocol matching
    macro makes it more obvious that this is now not Quectel
    specific anymore.
    
    Cc: Kristian Evensen <kristian.evensen@gmail.com>
    Cc: Aleksander Morgado <aleksander@aleksander.es>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94c7a1da84e54192f5d756de4ac209ccd9256be2
Author: Bjørn Mork <bjorn@mork.no>
Date:   Sat Feb 8 15:50:36 2020 +0100

    qmi_wwan: re-add DW5821e pre-production variant
    
    [ Upstream commit 88bf54603f6f2c137dfee1abf6436ceac3528d2d ]
    
    Commit f25e1392fdb5 removed the support for the pre-production variant
    of the Dell DW5821e to avoid probing another USB interface unnecessarily.
    However, the pre-production samples are found in the wild, and this lack
    of support is causing problems for users of such samples.  It is therefore
    necessary to support both variants.
    
    Matching on both interfaces 0 and 1 is not expected to cause any problem
    with either variant, as only the QMI function will be probed successfully
    on either.  Interface 1 will be rejected based on the HID class for the
    production variant:
    
    T:  Bus=01 Lev=03 Prnt=04 Port=00 Cnt=01 Dev#= 16 Spd=480 MxCh= 0
    D:  Ver= 2.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs=  2
    P:  Vendor=413c ProdID=81d7 Rev=03.18
    S:  Manufacturer=DELL
    S:  Product=DW5821e Snapdragon X20 LTE
    S:  SerialNumber=0123456789ABCDEF
    C:  #Ifs= 6 Cfg#= 1 Atr=a0 MxPwr=500mA
    I:  If#= 0 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I:  If#= 1 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=00 Prot=00 Driver=usbhid
    I:  If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I:  If#= 5 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    
    And interface 0 will be rejected based on too few endpoints for the
    pre-production variant:
    
    T: Bus=01 Lev=02 Prnt=02 Port=03 Cnt=03 Dev#= 7 Spd=480 MxCh= 0
    D: Ver= 2.10 Cls=ef(misc ) Sub=02 Prot=01 MxPS=64 #Cfgs= 2
    P: Vendor=413c ProdID=81d7 Rev= 3.18
    S: Manufacturer=DELL
    S: Product=DW5821e Snapdragon X20 LTE
    S: SerialNumber=0123456789ABCDEF
    C: #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=500mA
    I: If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=
    I: If#= 1 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    I: If#= 2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I: If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    I: If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=00 Prot=00 Driver=option
    
    Fixes: f25e1392fdb5 ("qmi_wwan: fix interface number for DW5821e production firmware")
    Link: https://whrl.pl/Rf0vNk
    Reported-by: Lars Melin <larsm17@gmail.com>
    Cc: Aleksander Morgado <aleksander@aleksander.es>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b73162295bcee06fa383b33c55f096b06fb769fc
Author: Harald Freudenberger <freude@linux.ibm.com>
Date:   Fri Dec 20 16:02:54 2019 +0100

    s390/zcrypt: fix card and queue total counter wrap
    
    [ Upstream commit fcd98d4002539f1e381916fc1b6648938c1eac76 ]
    
    The internal statistic counters for the total number of
    requests processed per card and per queue used integers. So they do
    wrap after a rather huge amount of crypto requests processed. This
    patch introduces uint64 counters which should hold much longer but
    still may wrap. The sysfs attributes request_count for card and queue
    also used only %ld and now display the counter value with %llu.
    
    This is not a security relevant fix. The int overflow which happened
    is not in any way exploitable as a security breach.
    
    Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8531cf81da41967ec338cd308468d97f6bbe3dc
Author: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
Date:   Mon Feb 3 10:56:50 2020 +0000

    cfg80211: check wiphy driver existence for drvinfo report
    
    [ Upstream commit bfb7bac3a8f47100ebe7961bd14e924c96e21ca7 ]
    
    When preparing ethtool drvinfo, check if wiphy driver is defined
    before dereferencing it. Driver may not exist, e.g. if wiphy is
    attached to a virtual platform device.
    
    Signed-off-by: Sergey Matyukevich <sergey.matyukevich.os@quantenna.com>
    Link: https://lore.kernel.org/r/20200203105644.28875-1-sergey.matyukevich.os@quantenna.com
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d7a9c311e991714835ac023572e2bb431c47a6e
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Jan 31 13:12:58 2020 +0200

    mac80211: consider more elements in parsing CRC
    
    [ Upstream commit a04564c99bb4a92f805a58e56b2d22cc4978f152 ]
    
    We only use the parsing CRC for checking if a beacon changed,
    and elements with an ID > 63 cannot be represented in the
    filter. Thus, like we did before with WMM and Cisco vendor
    elements, just statically add these forgotten items to the
    CRC:
     - WLAN_EID_VHT_OPERATION
     - WLAN_EID_OPMODE_NOTIF
    
    I guess that in most cases when VHT/HE operation change, the HT
    operation also changed, and so the change was picked up, but we
    did notice that pure operating mode notification changes were
    ignored.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/20200131111300.891737-22-luca@coelho.fi
    [restrict to VHT for the mac80211 branch]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5195d8c4a4988109fc16a433ebdb64a5acf88c90
Author: Jeff Moyer <jmoyer@redhat.com>
Date:   Wed Feb 5 14:15:58 2020 -0500

    dax: pass NOWAIT flag to iomap_apply
    
    [ Upstream commit 96222d53842dfe54869ec4e1b9d4856daf9105a2 ]
    
    fstests generic/471 reports a failure when run with MOUNT_OPTIONS="-o
    dax".  The reason is that the initial pwrite to an empty file with the
    RWF_NOWAIT flag set does not return -EAGAIN.  It turns out that
    dax_iomap_rw doesn't pass that flag through to iomap_apply.
    
    With this patch applied, generic/471 passes for me.
    
    Signed-off-by: Jeff Moyer <jmoyer@redhat.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/x49r1z86e1d.fsf@segfault.boston.devel.redhat.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a13694bb43c4585400626e9773598ce587a840ea
Author: Sean Paul <seanpaul@chromium.org>
Date:   Tue Jan 21 11:18:48 2020 -0800

    drm/msm: Set dma maximum segment size for mdss
    
    [ Upstream commit db735fc4036bbe1fbe606819b5f0ff26cc76cdff ]
    
    Turning on CONFIG_DMA_API_DEBUG_SG results in the following error:
    
    [   12.078665] msm ae00000.mdss: DMA-API: mapping sg segment longer than device claims to support [len=3526656] [max=65536]
    [   12.089870] WARNING: CPU: 6 PID: 334 at /mnt/host/source/src/third_party/kernel/v4.19/kernel/dma/debug.c:1301 debug_dma_map_sg+0x1dc/0x318
    [   12.102655] Modules linked in: joydev
    [   12.106442] CPU: 6 PID: 334 Comm: frecon Not tainted 4.19.0 #2
    [   12.112450] Hardware name: Google Cheza (rev3+) (DT)
    [   12.117566] pstate: 60400009 (nZCv daif +PAN -UAO)
    [   12.122506] pc : debug_dma_map_sg+0x1dc/0x318
    [   12.126995] lr : debug_dma_map_sg+0x1dc/0x318
    [   12.131487] sp : ffffff800cc3ba80
    [   12.134913] x29: ffffff800cc3ba80 x28: 0000000000000000
    [   12.140395] x27: 0000000000000004 x26: 0000000000000004
    [   12.145868] x25: ffffff8008e55b18 x24: 0000000000000000
    [   12.151337] x23: 00000000ffffffff x22: ffffff800921c000
    [   12.156809] x21: ffffffc0fa75b080 x20: ffffffc0f7195090
    [   12.162280] x19: ffffffc0f1c53280 x18: 0000000000000000
    [   12.167749] x17: 0000000000000000 x16: 0000000000000000
    [   12.173218] x15: 0000000000000000 x14: 0720072007200720
    [   12.178689] x13: 0720072007200720 x12: 0720072007200720
    [   12.184161] x11: 0720072007200720 x10: 0720072007200720
    [   12.189641] x9 : ffffffc0f1fc6b60 x8 : 0000000000000000
    [   12.195110] x7 : ffffff8008132ce0 x6 : 0000000000000000
    [   12.200585] x5 : 0000000000000000 x4 : ffffff8008134734
    [   12.206058] x3 : ffffff800cc3b830 x2 : ffffffc0f1fc6240
    [   12.211532] x1 : 25045a74f48a7400 x0 : 25045a74f48a7400
    [   12.217006] Call trace:
    [   12.219535]  debug_dma_map_sg+0x1dc/0x318
    [   12.223671]  get_pages+0x19c/0x20c
    [   12.227177]  msm_gem_fault+0x64/0xfc
    [   12.230874]  __do_fault+0x3c/0x140
    [   12.234383]  __handle_mm_fault+0x70c/0xdb8
    [   12.238603]  handle_mm_fault+0xac/0xc4
    [   12.242473]  do_page_fault+0x1bc/0x3d4
    [   12.246342]  do_translation_fault+0x54/0x88
    [   12.250652]  do_mem_abort+0x60/0xf0
    [   12.254250]  el0_da+0x20/0x24
    [   12.257317] irq event stamp: 67260
    [   12.260828] hardirqs last  enabled at (67259): [<ffffff8008132d0c>] console_unlock+0x214/0x608
    [   12.269693] hardirqs last disabled at (67260): [<ffffff8008080e0c>] do_debug_exception+0x5c/0x178
    [   12.278820] softirqs last  enabled at (67256): [<ffffff8008081664>] __do_softirq+0x4d4/0x520
    [   12.287510] softirqs last disabled at (67249): [<ffffff80080be574>] irq_exit+0xa8/0x100
    [   12.295742] ---[ end trace e63cfc40c313ffab ]---
    
    The root of the problem is that the default segment size for sgt is
    (UINT_MAX & PAGE_MASK), and the default segment size for device dma is
    64K. As such, if you compare the 2, you would deduce that the sg segment
    will overflow the device's capacity. In reality, the hardware can
    accommodate the larger sg segments, it's just not initializing its max
    segment properly. This patch initializes the max segment size for the
    mdss device, which gets rid of that pesky warning.
    
    Reported-by: Stephen Boyd <swboyd@chromium.org>
    Tested-by: Stephen Boyd <swboyd@chromium.org>
    Tested-by: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
    Reviewed-by: Rob Clark <robdclark@gmail.com>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20200121111813.REPOST.1.I92c66a35fb13f368095b05287bdabdbe88ca6922@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89e9facd58ac1da7934f9a12743544edf55b4186
Author: Corey Minyard <cminyard@mvista.com>
Date:   Mon Dec 23 10:42:19 2019 -0600

    ipmi:ssif: Handle a possible NULL pointer reference
    
    [ Upstream commit 6b8526d3abc02c08a2f888e8c20b7ac9e5776dfe ]
    
    In error cases a NULL can be passed to memcpy.  The length will always
    be zero, so it doesn't really matter, but go ahead and check for NULL,
    anyway, to be more precise and avoid static analysis errors.
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Corey Minyard <cminyard@mvista.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1d8780188c8d7f009a05d40fbb8a111eab89746d
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Sat Feb 29 04:54:53 2020 +0530

    iwlwifi: pcie: fix rb_allocator workqueue allocation
    
    commit 8188a18ee2e48c9a7461139838048363bfce3fef upstream
    
    We don't handle failures in the rb_allocator workqueue allocation
    correctly. To fix that, move the code earlier so the cleanup is
    easier and we don't have to undo all the interrupt allocations in
    this case.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    [Ajay: Modified to apply on v4.19.y and v4.14.y]
    Signed-off-by: Ajay Kaher <akaher@vmware.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9bb5134708f105fdd8cb78bae848c364945607e3
Author: Joe Perches <joe@perches.com>
Date:   Tue Jul 9 22:04:18 2019 -0700

    irqchip/gic-v3-its: Fix misuse of GENMASK macro
    
    [ Upstream commit 20faba848752901de23a4d45a1174d64d2069dde ]
    
    Arguments are supposed to be ordered high then low.
    
    Signed-off-by: Joe Perches <joe@perches.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Link: https://lkml.kernel.org/r/ab5deb4fc3cd604cb620054770b7d00016d736bc.1562734889.git.joe@perches.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>
