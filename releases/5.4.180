commit 7b3eb66d0daf61e91cccdb2fe5d271ae5adc5a76
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 16 12:52:54 2022 +0100

    Linux 5.4.180
    
    Link: https://lore.kernel.org/r/20220214092452.020713240@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Slade Watkins <slade@sladewatkins.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d09cb110868f027d015fbc6c64ba1e45a69a192
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Feb 4 18:31:02 2022 +0100

    ACPI: PM: s2idle: Cancel wakeup before dispatching EC GPE
    
    commit dc0075ba7f387fe4c48a8c674b11ab6f374a6acc upstream.
    
    Commit 4a9af6cac050 ("ACPI: EC: Rework flushing of EC work while
    suspended to idle") made acpi_ec_dispatch_gpe() check
    pm_wakeup_pending(), but that is before canceling the SCI wakeup,
    so pm_wakeup_pending() is always true.  This causes the loop in
    acpi_ec_dispatch_gpe() to always terminate after one iteration which
    may not be correct.
    
    Address this issue by canceling the SCI wakeup earlier, from
    acpi_ec_dispatch_gpe() itself.
    
    Fixes: 4a9af6cac050 ("ACPI: EC: Rework flushing of EC work while suspended to idle")
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2ed7b29d0673ba361546e2d87dbbed149456c45
Author: Song Liu <song@kernel.org>
Date:   Thu Feb 3 16:40:57 2022 -0800

    perf: Fix list corruption in perf_cgroup_switch()
    
    commit 5f4e5ce638e6a490b976ade4a40017b40abb2da0 upstream.
    
    There's list corruption on cgrp_cpuctx_list. This happens on the
    following path:
    
      perf_cgroup_switch: list_for_each_entry(cgrp_cpuctx_list)
          cpu_ctx_sched_in
             ctx_sched_in
                ctx_pinned_sched_in
                  merge_sched_in
                      perf_cgroup_event_disable: remove the event from the list
    
    Use list_for_each_entry_safe() to allow removing an entry during
    iteration.
    
    Fixes: 058fe1c0440e ("perf/core: Make cgroup switch visit only cpuctxs with cgroup events")
    Signed-off-by: Song Liu <song@kernel.org>
    Reviewed-by: Rik van Riel <riel@surriel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20220204004057.2961252-1-song@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f79cbf75ac762a562c2a633a134404edc4855f06
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Feb 7 10:05:16 2022 -0800

    scsi: lpfc: Remove NVMe support if kernel has NVME_FC disabled
    
    commit c80b27cfd93ba9f5161383f798414609e84729f3 upstream.
    
    The driver is initiating NVMe PRLIs to determine device NVMe support.  This
    should not be occurring if CONFIG_NVME_FC support is disabled.
    
    Correct this by changing the default value for FC4 support. Currently it
    defaults to FCP and NVMe. With change, when NVME_FC support is not enabled
    in the kernel, the default value is just FCP.
    
    Link: https://lore.kernel.org/r/20220207180516.73052-1-jsmart2021@gmail.com
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a1a018e2a0684a057e0fef191e490b6666bac64e
Author: Armin Wolf <W_Armin@gmx.de>
Date:   Thu Oct 21 21:05:31 2021 +0200

    hwmon: (dell-smm) Speed up setting of fan speed
    
    commit c0d79987a0d82671bff374c07f2201f9bdf4aaa2 upstream.
    
    When setting the fan speed, i8k_set_fan() calls i8k_get_fan_status(),
    causing an unnecessary SMM call since from the two users of this
    function, only i8k_ioctl_unlocked() needs to know the new fan status
    while dell_smm_write() ignores the new fan status.
    Since SMM calls can be very slow while also making error reporting
    difficult for dell_smm_write(), remove the function call from
    i8k_set_fan() and call it separately in i8k_ioctl_unlocked().
    
    Tested on a Dell Inspiron 3505.
    
    Signed-off-by: Armin Wolf <W_Armin@gmx.de>
    Reviewed-by: Pali Roh√°r <pali@kernel.org>
    Link: https://lore.kernel.org/r/20211021190531.17379-6-W_Armin@gmx.de
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1e30073c0e556410f853bc8686c638e58e0b2182
Author: Kees Cook <keescook@chromium.org>
Date:   Mon Feb 7 20:21:13 2022 -0800

    seccomp: Invalidate seccomp mode to catch death failures
    
    commit 495ac3069a6235bfdf516812a2a9b256671bbdf9 upstream.
    
    If seccomp tries to kill a process, it should never see that process
    again. To enforce this proactively, switch the mode to something
    impossible. If encountered: WARN, reject all syscalls, and attempt to
    kill the process again even harder.
    
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Will Drewry <wad@chromium.org>
    Fixes: 8112c4f140fa ("seccomp: remove 2-phase API")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3769078c9459ad373fc3a46b26b90016c6d50ac
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Feb 1 11:42:53 2022 +0100

    USB: serial: cp210x: add CPI Bulk Coin Recycler id
    
    commit 6ca0c6283340d819bf9c7d8e76be33c9fbd903ab upstream.
    
    Add the device id for the Crane Payment Innovation / Money Controls Bulk
    Coin Recycler:
    
            https://www.cranepi.com/en/system/files/Support/OM_BCR_EN_V1-04_0.pdf
    
    Reported-by: Scott Russell <Scott.Russell2@ncr.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fade0cbf66822949cc6e93865f6bfc3bec57f64a
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Feb 1 11:42:52 2022 +0100

    USB: serial: cp210x: add NCR Retail IO box id
    
    commit b50f8f09c622297d3cf46e332e17ba8adedec9af upstream.
    
    Add the device id for NCR's Retail IO box (CP2105) used in NCR FastLane
    SelfServ Checkout - R6C:
    
            https://www.ncr.com/product-catalog/ncr-fastlane-selfserv-checkout-r6c
    
    Reported-by: Scott Russell <Scott.Russell2@ncr.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 697b9ed28b39d9f0fabf60fa7ff0adb339a41526
Author: Stephan Brunner <s.brunner@stephan-brunner.net>
Date:   Sat Jan 8 13:00:20 2022 +0100

    USB: serial: ch341: add support for GW Instek USB2.0-Serial devices
    
    commit fa77ce201f7f2d823b07753575122d1ae5597fbe upstream.
    
    Programmable lab power supplies made by GW Instek, such as the
    GPP-2323, have a USB port exposing a serial port to control the device.
    
    Stringing the supplied Windows driver, references to the ch341 chip are
    found. Binding the existing ch341 driver to the VID/PID of the GPP-2323
    ("GW Instek USB2.0-Serial" as per the USB product name) works out of the
    box, communication and control is now possible.
    
    This patch should work with any GPP series power supply due to
    similarities in the product line.
    
    Signed-off-by: Stephan Brunner <s.brunner@stephan-brunner.net>
    Link: https://lore.kernel.org/r/4a47b864-0816-6f6a-efee-aa20e74bcdc6@stephan-brunner.net
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed4fddac9d7c3d310ec0b8de686cac406cf79390
Author: Pawel Dembicki <paweldembicki@gmail.com>
Date:   Tue Jan 11 23:12:05 2022 +0100

    USB: serial: option: add ZTE MF286D modem
    
    commit d48384c7ed6c8fe4727eaa0f3048f62afd1cd715 upstream.
    
    Modem from ZTE MF286D is an Qualcomm MDM9250 based 3G/4G modem.
    
    T:  Bus=02 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  3 Spd=5000 MxCh= 0
    D:  Ver= 3.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS= 9 #Cfgs=  1
    P:  Vendor=19d2 ProdID=1485 Rev=52.87
    S:  Manufacturer=ZTE,Incorporated
    S:  Product=ZTE Technologies MSM
    S:  SerialNumber=MF286DZTED000000
    C:* #Ifs= 7 Cfg#= 1 Atr=80 MxPwr=896mA
    A:  FirstIf#= 0 IfCount= 2 Cls=02(comm.) Sub=06 Prot=00
    I:* If#= 0 Alt= 0 #EPs= 1 Cls=02(comm.) Sub=02 Prot=ff Driver=rndis_host
    E:  Ad=82(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    I:* If#= 1 Alt= 0 #EPs= 2 Cls=0a(data ) Sub=00 Prot=00 Driver=rndis_host
    E:  Ad=81(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=01(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 2 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=83(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=02(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 3 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=85(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=84(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=03(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 4 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=option
    E:  Ad=87(I) Atr=03(Int.) MxPS=  10 Ivl=32ms
    E:  Ad=86(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=04(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 5 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=ff Driver=qmi_wwan
    E:  Ad=88(I) Atr=03(Int.) MxPS=   8 Ivl=32ms
    E:  Ad=8e(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=0f(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    I:* If#= 6 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=42 Prot=01 Driver=usbfs
    E:  Ad=05(O) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    E:  Ad=89(I) Atr=02(Bulk) MxPS=1024 Ivl=0ms
    
    Signed-off-by: Pawel Dembicki <paweldembicki@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f729dfd364b89ae1fe1017a56c84c0ecd2d6cba6
Author: Cameron Williams <cang1@live.co.uk>
Date:   Tue Feb 1 10:12:51 2022 +0000

    USB: serial: ftdi_sio: add support for Brainboxes US-159/235/320
    
    commit fbb9b194e15a63c56c5664e76ccd0e85c6100cea upstream.
    
    This patch adds support for the Brainboxes US-159, US-235 and US-320
    USB-to-Serial devices.
    
    Signed-off-by: Cameron Williams <cang1@live.co.uk>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f297b6109cbe303b3c842a266d87e138a28bdad1
Author: Pavel Hofman <pavel.hofman@ivitera.com>
Date:   Mon Jan 31 08:18:13 2022 +0100

    usb: gadget: f_uac2: Define specific wTerminalType
    
    commit 5432184107cd0013761bdfa6cb6079527ef87b95 upstream.
    
    Several users have reported that their Win10 does not enumerate UAC2
    gadget with the existing wTerminalType set to
    UAC_INPUT_TERMINAL_UNDEFINED/UAC_INPUT_TERMINAL_UNDEFINED, e.g.
    https://github.com/raspberrypi/linux/issues/4587#issuecomment-926567213.
    While the constant is officially defined by the USB terminal types
    document, e.g. XMOS firmware for UAC2 (commonly used for Win10) defines
    no undefined output terminal type in its usbaudio20.h header.
    
    Therefore wTerminalType of EP-IN is set to
    UAC_INPUT_TERMINAL_MICROPHONE and wTerminalType of EP-OUT to
    UAC_OUTPUT_TERMINAL_SPEAKER for the UAC2 gadget.
    
    Signed-off-by: Pavel Hofman <pavel.hofman@ivitera.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20220131071813.7433-1-pavel.hofman@ivitera.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9e952871ae47af784b4aef0a77db02e557074d6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 9 16:37:53 2022 +0100

    usb: gadget: rndis: check size of RNDIS_MSG_SET command
    
    commit 38ea1eac7d88072bbffb630e2b3db83ca649b826 upstream.
    
    Check the size of the RNDIS_MSG_SET command given to us before
    attempting to respond to an invalid message size.
    
    Reported-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Cc: stable@kernel.org
    Tested-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38fd68f55a7ef57fb9cc3102ac65d1ac474a1a18
Author: Szymon Heidrich <szymon.heidrich@gmail.com>
Date:   Mon Jan 24 12:14:00 2022 +0100

    USB: gadget: validate interface OS descriptor requests
    
    commit 75e5b4849b81e19e9efe1654b30d7f3151c33c2c upstream.
    
    Stall the control endpoint in case provided index exceeds array size of
    MAX_CONFIG_INTERFACES or when the retrieved function pointer is null.
    
    Signed-off-by: Szymon Heidrich <szymon.heidrich@gmail.com>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3054dfef06a7f400cf8140fb1c7bd94c545256e1
Author: Adam Ford <aford173@gmail.com>
Date:   Fri Jan 28 16:36:03 2022 -0600

    usb: gadget: udc: renesas_usb3: Fix host to USB_ROLE_NONE transition
    
    commit 459702eea6132888b5c5b64c0e9c626da4ec2493 upstream.
    
    The support the external role switch a variety of situations were
    addressed, but the transition from USB_ROLE_HOST to USB_ROLE_NONE
    leaves the host up which can cause some error messages when
    switching from host to none, to gadget, to none, and then back
    to host again.
    
     xhci-hcd ee000000.usb: Abort failed to stop command ring: -110
     xhci-hcd ee000000.usb: xHCI host controller not responding, assume dead
     xhci-hcd ee000000.usb: HC died; cleaning up
     usb 4-1: device not accepting address 6, error -108
     usb usb4-port1: couldn't allocate usb_device
    
    After this happens it will not act as a host again.
    Fix this by releasing the host mode when transitioning to USB_ROLE_NONE.
    
    Fixes: 0604160d8c0b ("usb: gadget: udc: renesas_usb3: Enhance role switch support")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Link: https://lore.kernel.org/r/20220128223603.2362621-1-aford173@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f032eaebc2ff472188905739821c7fb7782f00f
Author: Udipto Goswami <quic_ugoswami@quicinc.com>
Date:   Mon Feb 7 09:55:58 2022 +0530

    usb: dwc3: gadget: Prevent core from processing stale TRBs
    
    commit 117b4e96c7f362eb6459543883fc07f77662472c upstream.
    
    With CPU re-ordering on write instructions, there might
    be a chance that the HWO is set before the TRB is updated
    with the new mapped buffer address.
    And in the case where core is processing a list of TRBs
    it is possible that it fetched the TRBs when the HWO is set
    but before the buffer address is updated.
    Prevent this by adding a memory barrier before the HWO
    is updated to ensure that the core always process the
    updated TRBs.
    
    Fixes: f6bafc6a1c9d ("usb: dwc3: convert TRBs into bitshifts")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Pavankumar Kondeti <quic_pkondeti@quicinc.com>
    Signed-off-by: Udipto Goswami <quic_ugoswami@quicinc.com>
    Link: https://lore.kernel.org/r/1644207958-18287-1-git-send-email-quic_ugoswami@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a9953b2806ce75d6bc24fa8e30774ff04b168e4
Author: Sean Anderson <sean.anderson@seco.com>
Date:   Thu Jan 27 14:00:03 2022 -0500

    usb: ulpi: Call of_node_put correctly
    
    commit 0a907ee9d95e3ac35eb023d71f29eae0aaa52d1b upstream.
    
    of_node_put should always be called on device nodes gotten from
    of_get_*. Additionally, it should only be called after there are no
    remaining users. To address the first issue, call of_node_put if later
    steps in ulpi_register fail. To address the latter, call put_device if
    device_register fails, which will call ulpi_dev_release if necessary.
    
    Fixes: ef6a7bcfb01c ("usb: ulpi: Support device discovery via DT")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Sean Anderson <sean.anderson@seco.com>
    Link: https://lore.kernel.org/r/20220127190004.1446909-3-sean.anderson@seco.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 12ab57a21372d67fec6a83395edef0bbef7498fd
Author: Sean Anderson <sean.anderson@seco.com>
Date:   Thu Jan 27 14:00:02 2022 -0500

    usb: ulpi: Move of_node_put to ulpi_dev_release
    
    commit 092f45b13e51666fe8ecbf2d6cd247aa7e6c1f74 upstream.
    
    Drivers are not unbound from the device when ulpi_unregister_interface
    is called. Move of_node-freeing code to ulpi_dev_release which is called
    only after all users are gone.
    
    Fixes: ef6a7bcfb01c ("usb: ulpi: Support device discovery via DT")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Sean Anderson <sean.anderson@seco.com>
    Link: https://lore.kernel.org/r/20220127190004.1446909-2-sean.anderson@seco.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0fd5492ee769029a636f1fb521716b022b1423d
Author: Jann Horn <jannh@google.com>
Date:   Wed Jan 26 14:14:52 2022 +0100

    net: usb: ax88179_178a: Fix out-of-bounds accesses in RX fixup
    
    commit 57bc3d3ae8c14df3ceb4e17d26ddf9eeab304581 upstream.
    
    ax88179_rx_fixup() contains several out-of-bounds accesses that can be
    triggered by a malicious (or defective) USB device, in particular:
    
     - The metadata array (hdr_off..hdr_off+2*pkt_cnt) can be out of bounds,
       causing OOB reads and (on big-endian systems) OOB endianness flips.
     - A packet can overlap the metadata array, causing a later OOB
       endianness flip to corrupt data used by a cloned SKB that has already
       been handed off into the network stack.
     - A packet SKB can be constructed whose tail is far beyond its end,
       causing out-of-bounds heap data to be considered part of the SKB's
       data.
    
    I have tested that this can be used by a malicious USB device to send a
    bogus ICMPv6 Echo Request and receive an ICMPv6 Echo Reply in response
    that contains random kernel heap data.
    It's probably also possible to get OOB writes from this on a
    little-endian system somehow - maybe by triggering skb_cow() via IP
    options processing -, but I haven't tested that.
    
    Fixes: e2ca90c276e1 ("ax88179_178a: ASIX AX88179_178A USB 3.0/2.0 to gigabit ethernet adapter driver")
    Cc: stable@kernel.org
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3937c35493ee2847aaefcfa5460e94b7443eef49
Author: Jonas Malaco <jonas@protocubo.io>
Date:   Thu Feb 3 13:49:52 2022 -0300

    eeprom: ee1004: limit i2c reads to I2C_SMBUS_BLOCK_MAX
    
    commit c0689e46be23160d925dca95dfc411f1a0462708 upstream.
    
    Commit effa453168a7 ("i2c: i801: Don't silently correct invalid transfer
    size") revealed that ee1004_eeprom_read() did not properly limit how
    many bytes to read at once.
    
    In particular, i2c_smbus_read_i2c_block_data_or_emulated() takes the
    length to read as an u8.  If count == 256 after taking into account the
    offset and page boundary, the cast to u8 overflows.  And this is common
    when user space tries to read the entire EEPROM at once.
    
    To fix it, limit each read to I2C_SMBUS_BLOCK_MAX (32) bytes, already
    the maximum length i2c_smbus_read_i2c_block_data_or_emulated() allows.
    
    Fixes: effa453168a7 ("i2c: i801: Don't silently correct invalid transfer size")
    Cc: stable@vger.kernel.org
    Reviewed-by: Heiner Kallweit <hkallweit1@gmail.com>
    Signed-off-by: Jonas Malaco <jonas@protocubo.io>
    Link: https://lore.kernel.org/r/20220203165024.47767-1-jonas@protocubo.io
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4dc28db1b985d78ebcf0aa59b11377b6e1090ec
Author: TATSUKAWA KOSUKE (Á´ãÂ∑ù Ê±ü‰ªã) <tatsu-ab1@nec.com>
Date:   Wed Jan 26 23:35:02 2022 +0000

    n_tty: wake up poll(POLLRDNORM) on receiving data
    
    commit c816b2e65b0e86b95011418cad334f0524fc33b8 upstream.
    
    The poll man page says POLLRDNORM is equivalent to POLLIN when used as
    an event.
    $ man poll
    <snip>
                  POLLRDNORM
                         Equivalent to POLLIN.
    
    However, in n_tty driver, POLLRDNORM does not return until timeout even
    if there is terminal input, whereas POLLIN returns.
    
    The following test program works until kernel-3.17, but the test stops
    in poll() after commit 57087d515441 ("tty: Fix spurious poll() wakeups").
    
    [Steps to run test program]
      $ cc -o test-pollrdnorm test-pollrdnorm.c
      $ ./test-pollrdnorm
      foo          <-- Type in something from the terminal followed by [RET].
                       The string should be echoed back.
    
      ------------------------< test-pollrdnorm.c >------------------------
      #include <stdio.h>
      #include <errno.h>
      #include <poll.h>
      #include <unistd.h>
    
      void main(void)
      {
            int             n;
            unsigned char   buf[8];
            struct pollfd   fds[1] = {{ 0, POLLRDNORM, 0 }};
    
            n = poll(fds, 1, -1);
            if (n < 0)
                    perror("poll");
            n = read(0, buf, 8);
            if (n < 0)
                    perror("read");
            if (n > 0)
                    write(1, buf, n);
      }
      ------------------------------------------------------------------------
    
    The attached patch fixes this problem.  Many calls to
    wake_up_interruptible_poll() in the kernel source code already specify
    "POLLIN | POLLRDNORM".
    
    Fixes: 57087d515441 ("tty: Fix spurious poll() wakeups")
    Cc: stable@vger.kernel.org
    Signed-off-by: Kosuke Tatsukawa <tatsu-ab1@nec.com>
    Link: https://lore.kernel.org/r/TYCPR01MB81901C0F932203D30E452B3EA5209@TYCPR01MB8190.jpnprd01.prod.outlook.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0e31f914d761767c7a15bde4a6f1e55ea74ba09e
Author: Jakob Koschel <jakobkoschel@gmail.com>
Date:   Thu Jan 27 15:44:05 2022 +0100

    vt_ioctl: add array_index_nospec to VT_ACTIVATE
    
    commit 28cb138f559f8c1a1395f5564f86b8bbee83631b upstream.
    
    in vt_setactivate an almost identical code path has been patched
    with array_index_nospec. In the VT_ACTIVATE path the user input
    is from a system call argument instead of a usercopy.
    For consistency both code paths should have the same mitigations
    applied.
    
    Kasper Acknowledgements: Jakob Koschel, Brian Johannesmeyer, Kaveh
    Razavi, Herbert Bos, Cristiano Giuffrida from the VUSec group at VU
    Amsterdam.
    
    Co-developed-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Jakob Koschel <jakobkoschel@gmail.com>
    Link: https://lore.kernel.org/r/20220127144406.3589293-2-jakobkoschel@gmail.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ae3d57411562260ee3f4fd5e875f410002341104
Author: Jakob Koschel <jakobkoschel@gmail.com>
Date:   Thu Jan 27 15:44:04 2022 +0100

    vt_ioctl: fix array_index_nospec in vt_setactivate
    
    commit 61cc70d9e8ef5b042d4ed87994d20100ec8896d9 upstream.
    
    array_index_nospec ensures that an out-of-bounds value is set to zero
    on the transient path. Decreasing the value by one afterwards causes
    a transient integer underflow. vsa.console should be decreased first
    and then sanitized with array_index_nospec.
    
    Kasper Acknowledgements: Jakob Koschel, Brian Johannesmeyer, Kaveh
    Razavi, Herbert Bos, Cristiano Giuffrida from the VUSec group at VU
    Amsterdam.
    
    Co-developed-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Brian Johannesmeyer <bjohannesmeyer@gmail.com>
    Signed-off-by: Jakob Koschel <jakobkoschel@gmail.com>
    Link: https://lore.kernel.org/r/20220127144406.3589293-1-jakobkoschel@gmail.com
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 311c82a68093939218510ffb602b7c36ea3b4096
Author: Raju Rangoju <Raju.Rangoju@amd.com>
Date:   Wed Feb 9 10:02:01 2022 +0530

    net: amd-xgbe: disable interrupts during pci removal
    
    [ Upstream commit 68c2d6af1f1e469544d6cbe9a601d96fb9c00e7f ]
    
    Hardware interrupts are enabled during the pci probe, however,
    they are not disabled during pci removal.
    
    Disable all hardware interrupts during pci removal to avoid any
    issues.
    
    Fixes: e75377404726 ("amd-xgbe: Update PCI support to use new IRQ functions")
    Suggested-by: Selwin Sebastian <Selwin.Sebastian@amd.com>
    Signed-off-by: Raju Rangoju <Raju.Rangoju@amd.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3e998a5dc46d0d125ae588f267098df2860d7e0
Author: Jon Maloy <jmaloy@redhat.com>
Date:   Tue Feb 8 22:22:37 2022 -0500

    tipc: rate limit warning for received illegal binding update
    
    [ Upstream commit c7223d687758462826a20e9735305d55bb874c70 ]
    
    It would be easy to craft a message containing an illegal binding table
    update operation. This is handled correctly by the code, but the
    corresponding warning printout is not rate limited as is should be.
    We fix this now.
    
    Fixes: b97bf3fd8f6a ("[TIPC] Initial merge")
    Signed-off-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7daad5c28ad5c8baa977975dec02147c4113b3b
Author: Joel Stanley <joel@jms.id.au>
Date:   Wed Feb 9 10:33:59 2022 +1030

    net: mdio: aspeed: Add missing MODULE_DEVICE_TABLE
    
    [ Upstream commit bc1c3c3b10db4f37c41e6107751a8d450d9c431c ]
    
    Fix loading of the driver when built as a module.
    
    Fixes: f160e99462c6 ("net: phy: Add mdio-aspeed")
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Acked-by: Andrew Jeffery <andrew@aj.id.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c99e66350ca01d2e7836d80f6f451c0e648bcbe0
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Feb 8 15:28:22 2022 -0800

    veth: fix races around rq->rx_notify_masked
    
    [ Upstream commit 68468d8c4cd4222a4ca1f185ab5a1c14480d078c ]
    
    veth being NETIF_F_LLTX enabled, we need to be more careful
    whenever we read/write rq->rx_notify_masked.
    
    BUG: KCSAN: data-race in veth_xmit / veth_xmit
    
    write to 0xffff888133d9a9f8 of 1 bytes by task 23552 on cpu 0:
     __veth_xdp_flush drivers/net/veth.c:269 [inline]
     veth_xmit+0x307/0x470 drivers/net/veth.c:350
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one+0x105/0x2f0 net/core/dev.c:3473
     dev_hard_start_xmit net/core/dev.c:3489 [inline]
     __dev_queue_xmit+0x86d/0xf90 net/core/dev.c:4116
     dev_queue_xmit+0x13/0x20 net/core/dev.c:4149
     br_dev_queue_push_xmit+0x3ce/0x430 net/bridge/br_forward.c:53
     NF_HOOK include/linux/netfilter.h:307 [inline]
     br_forward_finish net/bridge/br_forward.c:66 [inline]
     NF_HOOK include/linux/netfilter.h:307 [inline]
     __br_forward+0x2e4/0x400 net/bridge/br_forward.c:115
     br_flood+0x521/0x5c0 net/bridge/br_forward.c:242
     br_dev_xmit+0x8b6/0x960
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one+0x105/0x2f0 net/core/dev.c:3473
     dev_hard_start_xmit net/core/dev.c:3489 [inline]
     __dev_queue_xmit+0x86d/0xf90 net/core/dev.c:4116
     dev_queue_xmit+0x13/0x20 net/core/dev.c:4149
     neigh_hh_output include/net/neighbour.h:525 [inline]
     neigh_output include/net/neighbour.h:539 [inline]
     ip_finish_output2+0x6f8/0xb70 net/ipv4/ip_output.c:228
     ip_finish_output+0xfb/0x240 net/ipv4/ip_output.c:316
     NF_HOOK_COND include/linux/netfilter.h:296 [inline]
     ip_output+0xf3/0x1a0 net/ipv4/ip_output.c:430
     dst_output include/net/dst.h:451 [inline]
     ip_local_out net/ipv4/ip_output.c:126 [inline]
     ip_send_skb+0x6e/0xe0 net/ipv4/ip_output.c:1570
     udp_send_skb+0x641/0x880 net/ipv4/udp.c:967
     udp_sendmsg+0x12ea/0x14c0 net/ipv4/udp.c:1254
     inet_sendmsg+0x5f/0x80 net/ipv4/af_inet.c:819
     sock_sendmsg_nosec net/socket.c:705 [inline]
     sock_sendmsg net/socket.c:725 [inline]
     ____sys_sendmsg+0x39a/0x510 net/socket.c:2413
     ___sys_sendmsg net/socket.c:2467 [inline]
     __sys_sendmmsg+0x267/0x4c0 net/socket.c:2553
     __do_sys_sendmmsg net/socket.c:2582 [inline]
     __se_sys_sendmmsg net/socket.c:2579 [inline]
     __x64_sys_sendmmsg+0x53/0x60 net/socket.c:2579
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    read to 0xffff888133d9a9f8 of 1 bytes by task 23563 on cpu 1:
     __veth_xdp_flush drivers/net/veth.c:268 [inline]
     veth_xmit+0x2d6/0x470 drivers/net/veth.c:350
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one+0x105/0x2f0 net/core/dev.c:3473
     dev_hard_start_xmit net/core/dev.c:3489 [inline]
     __dev_queue_xmit+0x86d/0xf90 net/core/dev.c:4116
     dev_queue_xmit+0x13/0x20 net/core/dev.c:4149
     br_dev_queue_push_xmit+0x3ce/0x430 net/bridge/br_forward.c:53
     NF_HOOK include/linux/netfilter.h:307 [inline]
     br_forward_finish net/bridge/br_forward.c:66 [inline]
     NF_HOOK include/linux/netfilter.h:307 [inline]
     __br_forward+0x2e4/0x400 net/bridge/br_forward.c:115
     br_flood+0x521/0x5c0 net/bridge/br_forward.c:242
     br_dev_xmit+0x8b6/0x960
     __netdev_start_xmit include/linux/netdevice.h:4683 [inline]
     netdev_start_xmit include/linux/netdevice.h:4697 [inline]
     xmit_one+0x105/0x2f0 net/core/dev.c:3473
     dev_hard_start_xmit net/core/dev.c:3489 [inline]
     __dev_queue_xmit+0x86d/0xf90 net/core/dev.c:4116
     dev_queue_xmit+0x13/0x20 net/core/dev.c:4149
     neigh_hh_output include/net/neighbour.h:525 [inline]
     neigh_output include/net/neighbour.h:539 [inline]
     ip_finish_output2+0x6f8/0xb70 net/ipv4/ip_output.c:228
     ip_finish_output+0xfb/0x240 net/ipv4/ip_output.c:316
     NF_HOOK_COND include/linux/netfilter.h:296 [inline]
     ip_output+0xf3/0x1a0 net/ipv4/ip_output.c:430
     dst_output include/net/dst.h:451 [inline]
     ip_local_out net/ipv4/ip_output.c:126 [inline]
     ip_send_skb+0x6e/0xe0 net/ipv4/ip_output.c:1570
     udp_send_skb+0x641/0x880 net/ipv4/udp.c:967
     udp_sendmsg+0x12ea/0x14c0 net/ipv4/udp.c:1254
     inet_sendmsg+0x5f/0x80 net/ipv4/af_inet.c:819
     sock_sendmsg_nosec net/socket.c:705 [inline]
     sock_sendmsg net/socket.c:725 [inline]
     ____sys_sendmsg+0x39a/0x510 net/socket.c:2413
     ___sys_sendmsg net/socket.c:2467 [inline]
     __sys_sendmmsg+0x267/0x4c0 net/socket.c:2553
     __do_sys_sendmmsg net/socket.c:2582 [inline]
     __se_sys_sendmmsg net/socket.c:2579 [inline]
     __x64_sys_sendmmsg+0x53/0x60 net/socket.c:2579
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x44/0xd0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    value changed: 0x00 -> 0x01
    
    Reported by Kernel Concurrency Sanitizer on:
    CPU: 1 PID: 23563 Comm: syz-executor.5 Not tainted 5.17.0-rc2-syzkaller-00064-gc36c04c2e132 #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    
    Fixes: 948d4f214fde ("veth: Add driver XDP")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a80817adc2a4c1ba26a7aa5f3ed886e4a18dff88
Author: Antoine Tenart <atenart@kernel.org>
Date:   Mon Feb 7 18:13:19 2022 +0100

    net: fix a memleak when uncloning an skb dst and its metadata
    
    [ Upstream commit 9eeabdf17fa0ab75381045c867c370f4cc75a613 ]
    
    When uncloning an skb dst and its associated metadata, a new
    dst+metadata is allocated and later replaces the old one in the skb.
    This is helpful to have a non-shared dst+metadata attached to a specific
    skb.
    
    The issue is the uncloned dst+metadata is initialized with a refcount of
    1, which is increased to 2 before attaching it to the skb. When
    tun_dst_unclone returns, the dst+metadata is only referenced from a
    single place (the skb) while its refcount is 2. Its refcount will never
    drop to 0 (when the skb is consumed), leading to a memory leak.
    
    Fix this by removing the call to dst_hold in tun_dst_unclone, as the
    dst+metadata refcount is already 1.
    
    Fixes: fc4099f17240 ("openvswitch: Fix egress tunnel info.")
    Cc: Pravin B Shelar <pshelar@ovn.org>
    Reported-by: Vlad Buslov <vladbu@nvidia.com>
    Tested-by: Vlad Buslov <vladbu@nvidia.com>
    Signed-off-by: Antoine Tenart <atenart@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b6087c6358656dd39dc714233d5183abc9c47a1
Author: Antoine Tenart <atenart@kernel.org>
Date:   Mon Feb 7 18:13:18 2022 +0100

    net: do not keep the dst cache when uncloning an skb dst and its metadata
    
    [ Upstream commit cfc56f85e72f5b9c5c5be26dc2b16518d36a7868 ]
    
    When uncloning an skb dst and its associated metadata a new dst+metadata
    is allocated and the tunnel information from the old metadata is copied
    over there.
    
    The issue is the tunnel metadata has references to cached dst, which are
    copied along the way. When a dst+metadata refcount drops to 0 the
    metadata is freed including the cached dst entries. As they are also
    referenced in the initial dst+metadata, this ends up in UaFs.
    
    In practice the above did not happen because of another issue, the
    dst+metadata was never freed because its refcount never dropped to 0
    (this will be fixed in a subsequent patch).
    
    Fix this by initializing the dst cache after copying the tunnel
    information from the old metadata to also unshare the dst cache.
    
    Fixes: d71785ffc7e7 ("net: add dst_cache to ovs vxlan lwtunnel")
    Cc: Paolo Abeni <pabeni@redhat.com>
    Reported-by: Vlad Buslov <vladbu@nvidia.com>
    Tested-by: Vlad Buslov <vladbu@nvidia.com>
    Signed-off-by: Antoine Tenart <atenart@kernel.org>
    Acked-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f41ec8c830eb2ce978f99edfb803cb7fce25316
Author: Louis Peens <louis.peens@corigine.com>
Date:   Tue Feb 8 11:14:53 2022 +0100

    nfp: flower: fix ida_idx not being released
    
    [ Upstream commit 7db788ad627aabff2b74d4f1a3b68516d0fee0d7 ]
    
    When looking for a global mac index the extra NFP_TUN_PRE_TUN_IDX_BIT
    that gets set if nfp_flower_is_supported_bridge is true is not taken
    into account. Consequently the path that should release the ida_index
    in cleanup is never triggered, causing messages like:
    
        nfp 0000:02:00.0: nfp: Failed to offload MAC on br-ex.
        nfp 0000:02:00.0: nfp: Failed to offload MAC on br-ex.
        nfp 0000:02:00.0: nfp: Failed to offload MAC on br-ex.
    
    after NFP_MAX_MAC_INDEX number of reconfigs. Ultimately this lead to
    new tunnel flows not being offloaded.
    
    Fix this by unsetting the NFP_TUN_PRE_TUN_IDX_BIT before checking if
    the port is of type OTHER.
    
    Fixes: 2e0bc7f3cb55 ("nfp: flower: encode mac indexes with pre-tunnel rule check")
    Signed-off-by: Louis Peens <louis.peens@corigine.com>
    Signed-off-by: Simon Horman <simon.horman@corigine.com>
    Link: https://lore.kernel.org/r/20220208101453.321949-1-simon.horman@corigine.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16dcfde98a25340ff0f7879a16bea141d824a196
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Feb 7 21:34:51 2022 -0800

    ipmr,ip6mr: acquire RTNL before calling ip[6]mr_free_table() on failure path
    
    [ Upstream commit 5611a00697c8ecc5aad04392bea629e9d6a20463 ]
    
    ip[6]mr_free_table() can only be called under RTNL lock.
    
    RTNL: assertion failed at net/core/dev.c (10367)
    WARNING: CPU: 1 PID: 5890 at net/core/dev.c:10367 unregister_netdevice_many+0x1246/0x1850 net/core/dev.c:10367
    Modules linked in:
    CPU: 1 PID: 5890 Comm: syz-executor.2 Not tainted 5.16.0-syzkaller-11627-g422ee58dc0ef #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:unregister_netdevice_many+0x1246/0x1850 net/core/dev.c:10367
    Code: 0f 85 9b ee ff ff e8 69 07 4b fa ba 7f 28 00 00 48 c7 c6 00 90 ae 8a 48 c7 c7 40 90 ae 8a c6 05 6d b1 51 06 01 e8 8c 90 d8 01 <0f> 0b e9 70 ee ff ff e8 3e 07 4b fa 4c 89 e7 e8 86 2a 59 fa e9 ee
    RSP: 0018:ffffc900046ff6e0 EFLAGS: 00010286
    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
    RDX: ffff888050f51d00 RSI: ffffffff815fa008 RDI: fffff520008dfece
    RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
    R10: ffffffff815f3d6e R11: 0000000000000000 R12: 00000000fffffff4
    R13: dffffc0000000000 R14: ffffc900046ff750 R15: ffff88807b7dc000
    FS:  00007f4ab736e700(0000) GS:ffff8880b9d00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fee0b4f8990 CR3: 000000001e7d2000 CR4: 00000000003506e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     <TASK>
     mroute_clean_tables+0x244/0xb40 net/ipv6/ip6mr.c:1509
     ip6mr_free_table net/ipv6/ip6mr.c:389 [inline]
     ip6mr_rules_init net/ipv6/ip6mr.c:246 [inline]
     ip6mr_net_init net/ipv6/ip6mr.c:1306 [inline]
     ip6mr_net_init+0x3f0/0x4e0 net/ipv6/ip6mr.c:1298
     ops_init+0xaf/0x470 net/core/net_namespace.c:140
     setup_net+0x54f/0xbb0 net/core/net_namespace.c:331
     copy_net_ns+0x318/0x760 net/core/net_namespace.c:475
     create_new_namespaces+0x3f6/0xb20 kernel/nsproxy.c:110
     copy_namespaces+0x391/0x450 kernel/nsproxy.c:178
     copy_process+0x2e0c/0x7300 kernel/fork.c:2167
     kernel_clone+0xe7/0xab0 kernel/fork.c:2555
     __do_sys_clone+0xc8/0x110 kernel/fork.c:2672
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x7f4ab89f9059
    Code: Unable to access opcode bytes at RIP 0x7f4ab89f902f.
    RSP: 002b:00007f4ab736e118 EFLAGS: 00000206 ORIG_RAX: 0000000000000038
    RAX: ffffffffffffffda RBX: 00007f4ab8b0bf60 RCX: 00007f4ab89f9059
    RDX: 0000000020000280 RSI: 0000000020000270 RDI: 0000000040200000
    RBP: 00007f4ab8a5308d R08: 0000000020000300 R09: 0000000020000300
    R10: 00000000200002c0 R11: 0000000000000206 R12: 0000000000000000
    R13: 00007ffc3977cc1f R14: 00007f4ab736e300 R15: 0000000000022000
     </TASK>
    
    Fixes: f243e5a7859a ("ipmr,ip6mr: call ip6mr_free_table() on failure path")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Cong Wang <cong.wang@bytedance.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Link: https://lore.kernel.org/r/20220208053451.2885398-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bcfbec337cf36753491f56bfd9fce0847b16a66
Author: Mahesh Bandewar <maheshb@google.com>
Date:   Mon Feb 7 14:29:01 2022 -0800

    bonding: pair enable_port with slave_arr_updates
    
    [ Upstream commit 23de0d7b6f0e3f9a6283a882594c479949da1120 ]
    
    When 803.2ad mode enables a participating port, it should update
    the slave-array. I have observed that the member links are participating
    and are part of the active aggregator while the traffic is egressing via
    only one member link (in a case where two links are participating). Via
    kprobes I discovered that slave-arr has only one link added while
    the other participating link wasn't part of the slave-arr.
    
    I couldn't see what caused that situation but the simple code-walk
    through provided me hints that the enable_port wasn't always associated
    with the slave-array update.
    
    Fixes: ee6377147409 ("bonding: Simplify the xmit function for modes that use xmit_hash")
    Signed-off-by: Mahesh Bandewar <maheshb@google.com>
    Acked-by: Jay Vosburgh <jay.vosburgh@canonical.com>
    Link: https://lore.kernel.org/r/20220207222901.1795287-1-maheshb@google.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e432f25c77a2e582526b4d5d8b36f802ce4818da
Author: Samuel Mendoza-Jonas <samjonas@amazon.com>
Date:   Thu Feb 3 14:49:16 2022 -0800

    ixgbevf: Require large buffers for build_skb on 82599VF
    
    [ Upstream commit fe68195daf34d5dddacd3f93dd3eafc4beca3a0e ]
    
    From 4.17 onwards the ixgbevf driver uses build_skb() to build an skb
    around new data in the page buffer shared with the ixgbe PF.
    This uses either a 2K or 3K buffer, and offsets the DMA mapping by
    NET_SKB_PAD + NET_IP_ALIGN. When using a smaller buffer RXDCTL is set to
    ensure the PF does not write a full 2K bytes into the buffer, which is
    actually 2K minus the offset.
    
    However on the 82599 virtual function, the RXDCTL mechanism is not
    available. The driver attempts to work around this by using the SET_LPE
    mailbox method to lower the maximm frame size, but the ixgbe PF driver
    ignores this in order to keep the PF and all VFs in sync[0].
    
    This means the PF will write up to the full 2K set in SRRCTL, causing it
    to write NET_SKB_PAD + NET_IP_ALIGN bytes past the end of the buffer.
    With 4K pages split into two buffers, this means it either writes
    NET_SKB_PAD + NET_IP_ALIGN bytes past the first buffer (and into the
    second), or NET_SKB_PAD + NET_IP_ALIGN bytes past the end of the DMA
    mapping.
    
    Avoid this by only enabling build_skb when using "large" buffers (3K).
    These are placed in each half of an order-1 page, preventing the PF from
    writing past the end of the mapping.
    
    [0]: Technically it only ever raises the max frame size, see
    ixgbe_set_vf_lpe() in ixgbe_sriov.c
    
    Fixes: f15c5ba5b6cd ("ixgbevf: add support for using order 1 pages to receive large frames")
    Signed-off-by: Samuel Mendoza-Jonas <samjonas@amazon.com>
    Tested-by: Konrad Jankowski <konrad0.jankowski@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4e6fd2b5fcf8e7119305a6042bd92e7f2b9ed215
Author: Mathias Krause <minipli@grsecurity.net>
Date:   Thu Jan 27 14:02:18 2022 +0100

    misc: fastrpc: avoid double fput() on failed usercopy
    
    [ Upstream commit 46963e2e0629cb31c96b1d47ddd89dc3d8990b34 ]
    
    If the copy back to userland fails for the FASTRPC_IOCTL_ALLOC_DMA_BUFF
    ioctl(), we shouldn't assume that 'buf->dmabuf' is still valid. In fact,
    dma_buf_fd() called fd_install() before, i.e. "consumed" one reference,
    leaving us with none.
    
    Calling dma_buf_put() will therefore put a reference we no longer own,
    leading to a valid file descritor table entry for an already released
    'file' object which is a straight use-after-free.
    
    Simply avoid calling dma_buf_put() and rely on the process exit code to
    do the necessary cleanup, if needed, i.e. if the file descriptor is
    still valid.
    
    Fixes: 6cffd79504ce ("misc: fastrpc: Add support for dmabuf exporter")
    Acked-by: Christian K√∂nig <christian.koenig@amd.com>
    Signed-off-by: Mathias Krause <minipli@grsecurity.net>
    Link: https://lore.kernel.org/r/20220127130218.809261-1-minipli@grsecurity.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9fc422c9a43e3d58d246334a71f3390401781dc
Author: Udipto Goswami <quic_ugoswami@quicinc.com>
Date:   Thu Jan 27 09:39:55 2022 +0530

    usb: f_fs: Fix use-after-free for epfile
    
    [ Upstream commit ebe2b1add1055b903e2acd86b290a85297edc0b3 ]
    
    Consider a case where ffs_func_eps_disable is called from
    ffs_func_disable as part of composition switch and at the
    same time ffs_epfile_release get called from userspace.
    ffs_epfile_release will free up the read buffer and call
    ffs_data_closed which in turn destroys ffs->epfiles and
    mark it as NULL. While this was happening the driver has
    already initialized the local epfile in ffs_func_eps_disable
    which is now freed and waiting to acquire the spinlock. Once
    spinlock is acquired the driver proceeds with the stale value
    of epfile and tries to free the already freed read buffer
    causing use-after-free.
    
    Following is the illustration of the race:
    
          CPU1                                  CPU2
    
       ffs_func_eps_disable
       epfiles (local copy)
                                            ffs_epfile_release
                                            ffs_data_closed
                                            if (last file closed)
                                            ffs_data_reset
                                            ffs_data_clear
                                            ffs_epfiles_destroy
    spin_lock
    dereference epfiles
    
    Fix this races by taking epfiles local copy & assigning it under
    spinlock and if epfiles(local) is null then update it in ffs->epfiles
    then finally destroy it.
    Extending the scope further from the race, protecting the ep related
    structures, and concurrent accesses.
    
    Fixes: a9e6f83c2df1 ("usb: gadget: f_fs: stop sleeping in ffs_func_eps_disable")
    Co-developed-by: Udipto Goswami <quic_ugoswami@quicinc.com>
    Reviewed-by: John Keeping <john@metanate.com>
    Signed-off-by: Pratham Pratap <quic_ppratap@quicinc.com>
    Signed-off-by: Udipto Goswami <quic_ugoswami@quicinc.com>
    Link: https://lore.kernel.org/r/1643256595-10797-1-git-send-email-quic_ugoswami@quicinc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 336222182a3b5743041b2e74ef72d4f89a9d2fcc
Author: Fabio Estevam <festevam@gmail.com>
Date:   Sun Dec 19 19:42:15 2021 -0300

    ARM: dts: imx6qdl-udoo: Properly describe the SD card detect
    
    [ Upstream commit 993d66140f8d1c1853a3b58b77b43b681eb64dee ]
    
    GPIO7_IO00 is used as SD card detect.
    
    Properly describe this in the devicetree.
    
    Fixes: 40cdaa542cf0 ("ARM: dts: imx6q-udoo: Add initial board support")
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 94888cf7553598c305806190c326c595834acdb7
Author: Uwe Kleine-K√∂nig <u.kleine-koenig@pengutronix.de>
Date:   Tue Jan 18 19:13:37 2022 +0100

    staging: fbtft: Fix error path in fbtft_driver_module_init()
    
    [ Upstream commit 426aca16e903b387a0b0001d62207a745c67cfd3 ]
    
    If registering the platform driver fails, the function must not return
    without undoing the spi driver registration first.
    
    Fixes: c296d5f9957c ("staging: fbtft: core support")
    Signed-off-by: Uwe Kleine-K√∂nig <u.kleine-koenig@pengutronix.de>
    Link: https://lore.kernel.org/r/20220118181338.207943-1-u.kleine-koenig@pengutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2650ed47077b7909d149ba785034f936f5427762
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Mon Dec 27 19:00:24 2021 +0100

    ARM: dts: meson: Fix the UART compatible strings
    
    [ Upstream commit 5225e1b87432dcf0d0fc3440824b91d04c1d6cc1 ]
    
    The dt-bindings for the UART controller only allow the following values
    for Meson6 SoCs:
    - "amlogic,meson6-uart", "amlogic,meson-ao-uart"
    - "amlogic,meson6-uart"
    
    Use the correct fallback compatible string "amlogic,meson-ao-uart" for
    AO UART. Drop the "amlogic,meson-uart" compatible string from the EE
    domain UART controllers.
    
    Fixes: ec9b59162fd831 ("ARM: dts: meson6: use stable UART bindings")
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Link: https://lore.kernel.org/r/20211227180026.4068352-2-martin.blumenstingl@googlemail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4ccb639bde50219b4f5c6a539e5a8e6e161678a0
Author: Zechuan Chen <chenzechuan1@huawei.com>
Date:   Tue Dec 28 19:13:38 2021 +0800

    perf probe: Fix ppc64 'perf probe add events failed' case
    
    commit 4624f199327a704dd1069aca1c3cadb8f2a28c6f upstream.
    
    Because of commit bf794bf52a80c627 ("powerpc/kprobes: Fix kallsyms
    lookup across powerpc ABIv1 and ABIv2"), in ppc64 ABIv1, our perf
    command eliminates the need to use the prefix "." at the symbol name.
    
    But when the command "perf probe -a schedule" is executed on ppc64
    ABIv1, it obtains two symbol address information through /proc/kallsyms,
    for example:
    
      cat /proc/kallsyms | grep -w schedule
      c000000000657020 T .schedule
      c000000000d4fdb8 D schedule
    
    The symbol "D schedule" is not a function symbol, and perf will print:
    "p:probe/schedule _text+13958584"Failed to write event: Invalid argument
    
    Therefore, when searching symbols from map and adding probe point for
    them, a symbol type check is added. If the type of symbol is not a
    function, skip it.
    
    Fixes: bf794bf52a80c627 ("powerpc/kprobes: Fix kallsyms lookup across powerpc ABIv1 and ABIv2")
    Signed-off-by: Zechuan Chen <chenzechuan1@huawei.com>
    Acked-by: Masami Hiramatsu <mhiramat@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jianlin Lv <Jianlin.Lv@arm.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Michael Ellerman <mpe@ellerman.id.au>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Ravi Bangoria <ravi.bangoria@linux.ibm.com>
    Cc: Yang Jihong <yangjihong1@huawei.com>
    Link: https://lore.kernel.org/r/20211228111338.218602-1-chenzechuan1@huawei.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    [sudip: adjust context]
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4a59eafcbc5cac85547e9b45f4906d920f1293b
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Mon Feb 24 18:46:22 2020 +0200

    net: bridge: fix stale eth hdr pointer in br_dev_xmit
    
    commit 823d81b0fa2cd83a640734e74caee338b5d3c093 upstream.
    
    In br_dev_xmit() we perform vlan filtering in br_allowed_ingress() but
    if the packet has the vlan header inside (e.g. bridge with disabled
    tx-vlan-offload) then the vlan filtering code will use skb_vlan_untag()
    to extract the vid before filtering which in turn calls pskb_may_pull()
    and we may end up with a stale eth pointer. Moreover the cached eth header
    pointer will generally be wrong after that operation. Remove the eth header
    caching and just use eth_hdr() directly, the compiler does the right thing
    and calculates it only once so we don't lose anything.
    
    Fixes: 057658cb33fb ("bridge: suppress arp pkts on BR_NEIGH_SUPPRESS ports")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Eduardo Vela <Nava> <evn@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b55a0cdbec5b3bedf798abddeb7906a6a02dbb47
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Fri Feb 4 18:35:22 2022 +0100

    PM: s2idle: ACPI: Fix wakeup interrupts handling
    
    commit cb1f65c1e1424a4b5e4a86da8aa3b8fd8459c8ec upstream.
    
    After commit e3728b50cd9b ("ACPI: PM: s2idle: Avoid possible race
    related to the EC GPE") wakeup interrupts occurring immediately after
    the one discarded by acpi_s2idle_wake() may be missed.  Moreover, if
    the SCI triggers again immediately after the rearming in
    acpi_s2idle_wake(), that wakeup may be missed too.
    
    The problem is that pm_system_irq_wakeup() only calls pm_system_wakeup()
    when pm_wakeup_irq is 0, but that's not the case any more after the
    interrupt causing acpi_s2idle_wake() to run until pm_wakeup_irq is
    cleared by the pm_wakeup_clear() call in s2idle_loop().  However,
    there may be wakeup interrupts occurring in that time frame and if
    that happens, they will be missed.
    
    To address that issue first move the clearing of pm_wakeup_irq to
    the point at which it is known that the interrupt causing
    acpi_s2idle_wake() to tun will be discarded, before rearming the SCI
    for wakeup.  Moreover, because that only reduces the size of the
    time window in which the issue may manifest itself, allow
    pm_system_irq_wakeup() to register two second wakeup interrupts in
    a row and, when discarding the first one, replace it with the second
    one.  [Of course, this assumes that only one wakeup interrupt can be
    discarded in one go, but currently that is the case and I am not
    aware of any plans to change that.]
    
    Fixes: e3728b50cd9b ("ACPI: PM: s2idle: Avoid possible race related to the EC GPE")
    Cc: 5.4+ <stable@vger.kernel.org> # 5.4+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e37a2a6b52d45c0236a0d9e24d883a5f7664b312
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Thu Feb 3 19:31:24 2022 +0000

    ACPI/IORT: Check node revision for PMCG resources
    
    commit da5fb9e1ad3fbf632dce735f1bdad257ca528499 upstream.
    
    The original version of the IORT PMCG definition had an oversight
    wherein there was no way to describe the second register page for an
    implementation using the recommended RELOC_CTRS feature. Although the
    spec was fixed, and the final patches merged to ACPICA and Linux written
    against the new version, it seems that some old firmware based on the
    original revision has survived and turned up in the wild.
    
    Add a check for the original PMCG definition, and avoid filling in the
    second memory resource with nonsense if so. Otherwise it is likely that
    something horrible will happen when the PMCG driver attempts to probe.
    
    Reported-by: Michael Petlan <mpetlan@redhat.com>
    Fixes: 24e516049360 ("ACPI/IORT: Add support for PMCG")
    Cc: <stable@vger.kernel.org> # 5.2.x
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Acked-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Link: https://lore.kernel.org/r/75628ae41c257fb73588f7bf1c4459160e04be2b.1643916258.git.robin.murphy@arm.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 153d0f357b125e29d2a69e583a106f147b62babc
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Feb 7 00:40:13 2022 +0200

    nvme-tcp: fix bogus request completion when failing to send AER
    
    commit 63573807b27e0faf8065a28b1bbe1cbfb23c0130 upstream.
    
    AER is not backed by a real request, hence we should not incorrectly
    assume that when failing to send a nvme command, it is a normal request
    but rather check if this is an aer and if so complete the aer (similar
    to the normal completion path).
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a44ca40387250c3459bb5f2dbf170901047574c4
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Mon Feb 7 09:44:04 2022 +0100

    ARM: socfpga: fix missing RESET_CONTROLLER
    
    commit 3037b174b1876aae6b2d1a27a878c681c78ccadc upstream.
    
    The SocFPGA machine since commit b3ca9888f35f ("reset: socfpga: add an
    early reset driver for SoCFPGA") uses reset controller, so it should
    select RESET_CONTROLLER explicitly.  Selecting ARCH_HAS_RESET_CONTROLLER
    is not enough because it affects only default choice still allowing a
    non-buildable configuration:
    
      /usr/bin/arm-linux-gnueabi-ld: arch/arm/mach-socfpga/socfpga.o: in function `socfpga_init_irq':
      arch/arm/mach-socfpga/socfpga.c:56: undefined reference to `socfpga_reset_init'
    
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: <stable@vger.kernel.org>
    Fixes: b3ca9888f35f ("reset: socfpga: add an early reset driver for SoCFPGA")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Dinh Nguyen <dinguyen@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a0bad445a50fa2b774b8103536b918341237513
Author: Fabio Estevam <festevam@gmail.com>
Date:   Mon Dec 27 13:14:02 2021 -0300

    ARM: dts: imx23-evk: Remove MX23_PAD_SSP1_DETECT from hog group
    
    commit 42c9b28e6862d16db82a56f5667cf4d1f6658cf6 upstream.
    
    Currently, SD card fails to mount due to the following pinctrl error:
    
    [   11.170000] imx23-pinctrl 80018000.pinctrl: pin SSP1_DETECT already requested by 80018000.pinctrl; cannot claim for 80010000.spi
    [   11.180000] imx23-pinctrl 80018000.pinctrl: pin-65 (80010000.spi) status -22
    [   11.190000] imx23-pinctrl 80018000.pinctrl: could not request pin 65 (SSP1_DETECT) from group mmc0-pins-fixup.0  on device 80018000.pinctrl
    [   11.200000] mxs-mmc 80010000.spi: Error applying setting, reverse things back
    
    Fix it by removing the MX23_PAD_SSP1_DETECT pin from the hog group as it
    is already been used by the mmc0-pins-fixup pinctrl group.
    
    With this change the rootfs can be mounted and the imx23-evk board can
    boot successfully.
    
    Cc: <stable@vger.kernel.org>
    Fixes: bc3875f1a61e ("ARM: dts: mxs: modify mx23/mx28 dts files to use pinctrl headers")
    Signed-off-by: Fabio Estevam <festevam@gmail.com>
    Signed-off-by: Shawn Guo <shawnguo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9d5e5832ffe7c147128929e18139b45f07355951
Author: Aurelien Jarno <aurelien@aurel32.net>
Date:   Wed Jan 26 18:14:42 2022 +0100

    riscv: fix build with binutils 2.38
    
    commit 6df2a016c0c8a3d0933ef33dd192ea6606b115e3 upstream.
    
    From version 2.38, binutils default to ISA spec version 20191213. This
    means that the csr read/write (csrr*/csrw*) instructions and fence.i
    instruction has separated from the `I` extension, become two standalone
    extensions: Zicsr and Zifencei. As the kernel uses those instruction,
    this causes the following build failure:
    
      CC      arch/riscv/kernel/vdso/vgettimeofday.o
      <<BUILDDIR>>/arch/riscv/include/asm/vdso/gettimeofday.h: Assembler messages:
      <<BUILDDIR>>/arch/riscv/include/asm/vdso/gettimeofday.h:71: Error: unrecognized opcode `csrr a5,0xc01'
      <<BUILDDIR>>/arch/riscv/include/asm/vdso/gettimeofday.h:71: Error: unrecognized opcode `csrr a5,0xc01'
      <<BUILDDIR>>/arch/riscv/include/asm/vdso/gettimeofday.h:71: Error: unrecognized opcode `csrr a5,0xc01'
      <<BUILDDIR>>/arch/riscv/include/asm/vdso/gettimeofday.h:71: Error: unrecognized opcode `csrr a5,0xc01'
    
    The fix is to specify those extensions explicitely in -march. However as
    older binutils version do not support this, we first need to detect
    that.
    
    Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>
    Tested-by: Alexandre Ghiti <alexandre.ghiti@canonical.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Palmer Dabbelt <palmer@rivosinc.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c230f6ba1011de8eee5e2468f67eaffaee0f82d4
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Tue May 11 22:35:17 2021 +0200

    bpf: Add kconfig knob for disabling unpriv bpf by default
    
    commit 08389d888287c3823f80b0216766b71e17f0aba5 upstream.
    
    Add a kconfig knob which allows for unprivileged bpf to be disabled by default.
    If set, the knob sets /proc/sys/kernel/unprivileged_bpf_disabled to value of 2.
    
    This still allows a transition of 2 -> {0,1} through an admin. Similarly,
    this also still keeps 1 -> {1} behavior intact, so that once set to permanently
    disabled, it cannot be undone aside from a reboot.
    
    We've also added extra2 with max of 2 for the procfs handler, so that an admin
    still has a chance to toggle between 0 <-> 2.
    
    Either way, as an additional alternative, applications can make use of CAP_BPF
    that we added a while ago.
    
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/74ec548079189e4e4dffaeb42b8987bb3c852eee.1620765074.git.daniel@iogearbox.net
    [fllinden@amazon.com: backported to 5.4]
    Signed-off-by: Frank van der Linden <fllinden@amazon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2424c010a98c98161d1850301a0d37391d54d08
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Wed Jan 12 18:01:31 2022 +0100

    KVM: nVMX: eVMCS: Filter out VM_EXIT_SAVE_VMX_PREEMPTION_TIMER
    
    [ Upstream commit 7a601e2cf61558dfd534a9ecaad09f5853ad8204 ]
    
    Enlightened VMCS v1 doesn't have VMX_PREEMPTION_TIMER_VALUE field,
    PIN_BASED_VMX_PREEMPTION_TIMER is also filtered out already so it makes
    sense to filter out VM_EXIT_SAVE_VMX_PREEMPTION_TIMER too.
    
    Note, none of the currently existing Windows/Hyper-V versions are known
    to enable 'save VMX-preemption timer value' when eVMCS is in use, the
    change is aimed at making the filtering future proof.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Message-Id: <20220112170134.1904308-3-vkuznets@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a437c524394cfd3bae32ce565e5f9e823c26d534
Author: Jisheng Zhang <jszhang@kernel.org>
Date:   Thu Jan 27 00:52:15 2022 +0800

    net: stmmac: dwmac-sun8i: use return val of readl_poll_timeout()
    
    [ Upstream commit 9e0db41e7a0b6f1271cbcfb16dbf5b8641b4e440 ]
    
    When readl_poll_timeout() timeout, we'd better directly use its return
    value.
    
    Before this patch:
    [    2.145528] dwmac-sun8i: probe of 4500000.ethernet failed with error -14
    
    After this patch:
    [    2.138520] dwmac-sun8i: probe of 4500000.ethernet failed with error -110
    
    Signed-off-by: Jisheng Zhang <jszhang@kernel.org>
    Acked-by: Jernej Skrabec <jernej.skrabec@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 032065cc5b6cf93dacfb2c0213fa4c90361de950
Author: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date:   Tue Dec 7 14:01:01 2021 +0100

    usb: dwc2: gadget: don't try to disable ep0 in dwc2_hsotg_suspend
    
    [ Upstream commit ac55d163855924aa5af9f1560977da8f346963c8 ]
    
    Calling dwc2_hsotg_ep_disable on ep0 (in/out) will lead to the following
    logs before returning -EINVAL:
    dwc2 49000000.usb-otg: dwc2_hsotg_ep_disable: called for ep0
    dwc2 49000000.usb-otg: dwc2_hsotg_ep_disable: called for ep0
    
    To avoid these two logs while suspending, start disabling the endpoint
    from the index 1, as done in dwc2_hsotg_udc_stop:
    
            /* all endpoints should be shutdown */
            for (ep = 1; ep < hsotg->num_of_eps; ep++) {
                    if (hsotg->eps_in[ep])
                            dwc2_hsotg_ep_disable_lock(&hsotg->eps_in[ep]->ep);
                    if (hsotg->eps_out[ep])
                            dwc2_hsotg_ep_disable_lock(&hsotg->eps_out[ep]->ep);
            }
    
    Acked-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Link: https://lore.kernel.org/r/20211207130101.270314-1-amelie.delaunay@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0863dedf58c8b26eae330942dab0b963fb3e7678
Author: Amadeusz S≈Çawi≈Ñski <amadeuszx.slawinski@linux.intel.com>
Date:   Wed Jan 19 11:47:51 2022 +0100

    PM: hibernate: Remove register_nosave_region_late()
    
    [ Upstream commit 33569ef3c754a82010f266b7b938a66a3ccf90a4 ]
    
    It is an unused wrapper forcing kmalloc allocation for registering
    nosave regions. Also, rename __register_nosave_region() to
    register_nosave_region() now that there is no need for disambiguation.
    
    Signed-off-by: Amadeusz S≈Çawi≈Ñski <amadeuszx.slawinski@linux.intel.com>
    Reviewed-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c5ceea00c8c9df150708e66cb9f2891192c1162
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Sun Jan 23 14:57:17 2022 -0800

    scsi: myrs: Fix crash in error case
    
    [ Upstream commit 4db09593af0b0b4d7d4805ebb3273df51d7cc30d ]
    
    In myrs_detect(), cs->disable_intr is NULL when privdata->hw_init() fails
    with non-zero. In this case, myrs_cleanup(cs) will call a NULL ptr and
    crash the kernel.
    
    [    1.105606] myrs 0000:00:03.0: Unknown Initialization Error 5A
    [    1.105872] myrs 0000:00:03.0: Failed to initialize Controller
    [    1.106082] BUG: kernel NULL pointer dereference, address: 0000000000000000
    [    1.110774] Call Trace:
    [    1.110950]  myrs_cleanup+0xe4/0x150 [myrs]
    [    1.111135]  myrs_probe.cold+0x91/0x56a [myrs]
    [    1.111302]  ? DAC960_GEM_intr_handler+0x1f0/0x1f0 [myrs]
    [    1.111500]  local_pci_probe+0x48/0x90
    
    Link: https://lore.kernel.org/r/20220123225717.1069538-1-ztong0001@gmail.com
    Reviewed-by: Hannes Reinecke <hare@suse.de>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7cc32ff0cd6c44a3c26de5faecfe8b5546198fad
Author: Saurav Kashyap <skashyap@marvell.com>
Date:   Mon Jan 17 05:53:10 2022 -0800

    scsi: qedf: Fix refcount issue when LOGO is received during TMF
    
    [ Upstream commit 5239ab63f17cee643bd4bf6addfedebaa7d4f41e ]
    
    Hung task call trace was seen during LOGO processing.
    
    [  974.309060] [0000:00:00.0]:[qedf_eh_device_reset:868]: 1:0:2:0: LUN RESET Issued...
    [  974.309065] [0000:00:00.0]:[qedf_initiate_tmf:2422]: tm_flags 0x10 sc_cmd 00000000c16b930f op = 0x2a target_id = 0x2 lun=0
    [  974.309178] [0000:00:00.0]:[qedf_initiate_tmf:2431]: portid=016900 tm_flags =LUN RESET
    [  974.309222] [0000:00:00.0]:[qedf_initiate_tmf:2438]: orig io_req = 00000000ec78df8f xid = 0x180 ref_cnt = 1.
    [  974.309625] host1: rport 016900: Received LOGO request while in state Ready
    [  974.309627] host1: rport 016900: Delete port
    [  974.309642] host1: rport 016900: work event 3
    [  974.309644] host1: rport 016900: lld callback ev 3
    [  974.313243] [0000:61:00.2]:[qedf_execute_tmf:2383]:1: fcport is uploading, not executing flush.
    [  974.313295] [0000:61:00.2]:[qedf_execute_tmf:2400]:1: task mgmt command success...
    [  984.031088] INFO: task jbd2/dm-15-8:7645 blocked for more than 120 seconds.
    [  984.031136]       Not tainted 4.18.0-305.el8.x86_64 #1
    
    [  984.031166] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [  984.031209] jbd2/dm-15-8    D    0  7645      2 0x80004080
    [  984.031212] Call Trace:
    [  984.031222]  __schedule+0x2c4/0x700
    [  984.031230]  ? unfreeze_partials.isra.83+0x16e/0x1a0
    [  984.031233]  ? bit_wait_timeout+0x90/0x90
    [  984.031235]  schedule+0x38/0xa0
    [  984.031238]  io_schedule+0x12/0x40
    [  984.031240]  bit_wait_io+0xd/0x50
    [  984.031243]  __wait_on_bit+0x6c/0x80
    [  984.031248]  ? free_buffer_head+0x21/0x50
    [  984.031251]  out_of_line_wait_on_bit+0x91/0xb0
    [  984.031257]  ? init_wait_var_entry+0x50/0x50
    [  984.031268]  jbd2_journal_commit_transaction+0x112e/0x19f0 [jbd2]
    [  984.031280]  kjournald2+0xbd/0x270 [jbd2]
    [  984.031284]  ? finish_wait+0x80/0x80
    [  984.031291]  ? commit_timeout+0x10/0x10 [jbd2]
    [  984.031294]  kthread+0x116/0x130
    [  984.031300]  ? kthread_flush_work_fn+0x10/0x10
    [  984.031305]  ret_from_fork+0x1f/0x40
    
    There was a ref count issue when LOGO is received during TMF. This leads to
    one of the I/Os hanging with the driver. Fix the ref count.
    
    Link: https://lore.kernel.org/r/20220117135311.6256-3-njavali@marvell.com
    Signed-off-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Nilesh Javali <njavali@marvell.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6a7077144ed291cfbf736875ad0fe89e6291f02
Author: ZouMingzhe <mingzhe.zou@easystack.cn>
Date:   Tue Jan 11 13:47:42 2022 +0800

    scsi: target: iscsi: Make sure the np under each tpg is unique
    
    [ Upstream commit a861790afaa8b6369eee8a88c5d5d73f5799c0c6 ]
    
    iscsit_tpg_check_network_portal() has nested for_each loops and is supposed
    to return true when a match is found. However, the tpg loop will still
    continue after existing the tpg_np loop. If this tpg_np is not the last the
    match value will be changed.
    
    Break the outer loop after finding a match and make sure the np under each
    tpg is unique.
    
    Link: https://lore.kernel.org/r/20220111054742.19582-1-mingzhe.zou@easystack.cn
    Signed-off-by: ZouMingzhe <mingzhe.zou@easystack.cn>
    Reviewed-by: Mike Christie <michael.christie@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9babdef28879d2eabb95b7de172513c034e79415
Author: Victor Nogueira <victor@mojatatu.com>
Date:   Tue Jan 18 14:19:09 2022 -0300

    net: sched: Clarify error message when qdisc kind is unknown
    
    [ Upstream commit 973bf8fdd12f0e70ea351c018e68edd377a836d1 ]
    
    When adding a tc rule with a qdisc kind that is not supported or not
    compiled into the kernel, the kernel emits the following error: "Error:
    Specified qdisc not found.". Found via tdc testing when ETS qdisc was not
    compiled in and it was not obvious right away what the message meant
    without looking at the kernel code.
    
    Change the error message to be more explicit and say the qdisc kind is
    unknown.
    
    Signed-off-by: Victor Nogueira <victor@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 978264fbc524b3b42f01acfff6a4b00c3462ad36
Author: Raymond Jay Golo <rjgolo@gmail.com>
Date:   Thu Jan 13 08:06:20 2022 +0800

    drm: panel-orientation-quirks: Add quirk for the 1Netbook OneXPlayer
    
    [ Upstream commit d3cbc6e323c9299d10c8d2e4127c77c7d05d07b1 ]
    
    The 1Netbook OneXPlayer uses a panel which has been mounted
    90 degrees rotated. Add a quirk for this.
    
    Signed-off-by: Raymond Jay Golo <rjgolo@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20220113000619.90988-1-rjgolo@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 162e8d7885452d0066ca90a7da64f3d1ce67825f
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Dec 9 14:53:32 2021 -0500

    NFSv4 expose nfs_parse_server_name function
    
    [ Upstream commit f5b27cc6761e27ee6387a24df1a99ca77b360fea ]
    
    Make nfs_parse_server_name available outside of nfs4namespace.c.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 852c95db75a79cd8dc96fa7fa52cbce3082cff2a
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Thu Dec 9 14:53:29 2021 -0500

    NFSv4 remove zero number of fs_locations entries error check
    
    [ Upstream commit 90e12a3191040bd3854d3e236c35921e4e92a044 ]
    
    Remove the check for the zero length fs_locations reply in the
    xdr decoding, and instead check for that in the migration code.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75e67eed756a5f7472e6fd1589bc40d9082ea9cf
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Mon Jan 3 14:50:16 2022 -0500

    NFSv4.1: Fix uninitialised variable in devicenotify
    
    [ Upstream commit b05bf5c63b326ce1da84ef42498d8e0e292e694c ]
    
    When decode_devicenotify_args() exits with no entries, we need to
    ensure that the struct cb_devicenotifyargs is initialised to
    { 0, NULL } in order to avoid problems in
    nfs4_callback_devicenotify().
    
    Reported-by: <rtm@csail.mit.edu>
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6efe39614039ceaa2b9d69807d62ec22c0b9ef38
Author: Xiaoke Wang <xkernel.wang@foxmail.com>
Date:   Fri Dec 17 01:01:33 2021 +0800

    nfs: nfs4clinet: check the return value of kstrdup()
    
    [ Upstream commit fbd2057e5329d3502a27491190237b6be52a1cb6 ]
    
    kstrdup() returns NULL when some internal memory errors happen, it is
    better to check the return value of it so to catch the memory error in
    time.
    
    Signed-off-by: Xiaoke Wang <xkernel.wang@foxmail.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2acac498a507ec6cd6550de3caabbbf254f298d3
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Mon Nov 29 15:33:56 2021 -0500

    NFSv4 only print the label when its queried
    
    [ Upstream commit 2c52c8376db7160a1dd8a681c61c9258405ef143 ]
    
    When the bitmask of the attributes doesn't include the security label,
    don't bother printing it. Since the label might not be null terminated,
    adjust the printing format accordingly.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 891c4ebf3b948861ac263f7d866d865c9e49fc86
Author: Prabhath Sajeepa <psajeepa@purestorage.com>
Date:   Mon Oct 28 16:56:48 2019 -0600

    nvme: Fix parsing of ANA log page
    
    commit 64fab7290dc3561729bbc1e35895a517eb2e549e upstream.
    
    Check validity of offset into ANA log buffer before accessing
    nvme_ana_group_desc. This check ensures the size of ANA log buffer >=
    offset + sizeof(nvme_ana_group_desc)
    
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Prabhath Sajeepa <psajeepa@purestorage.com>
    Signed-off-by: Keith Busch <kbusch@kernel.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Cc: Uday Shankar <ushankar@purestorage.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7d345c80727ef7722dd8c4b553210f3eda1c40a
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Fri Feb 4 17:05:24 2022 -0500

    NFSD: Fix offset type in I/O trace points
    
    commit 6a4d333d540041d244b2fca29b8417bfde20af81 upstream.
    
    NFSv3 and NFSv4 use u64 offset values on the wire. Record these values
    verbatim without the implicit type case to loff_t.
    
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34217d7730b925446a2590355bcb2db0e7514599
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Tue Jan 25 16:36:22 2022 -0500

    NFSD: Clamp WRITE offsets
    
    commit 6260d9a56ab352b54891ec66ab0eced57d55abc6 upstream.
    
    Ensure that a client cannot specify a WRITE range that falls in a
    byte range outside what the kernel's internal types (such as loff_t,
    which is signed) can represent. The kiocb iterators, invoked in
    nfsd_vfs_write(), should properly limit write operations to within
    the underlying file system's s_maxbytes.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fde7ca7b17d7f8582a6da43be1d506b3b057897
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Wed Feb 2 18:52:01 2022 -0500

    NFS: Fix initialisation of nfs_client cl_flags field
    
    commit 468d126dab45718feeb728319be20bd869a5eaa7 upstream.
    
    For some long forgotten reason, the nfs_client cl_flags field is
    initialised in nfs_get_client() instead of being initialised at
    allocation time. This quirk was harmless until we moved the call to
    nfs_create_rpc_client().
    
    Fixes: dd99e9f98fbf ("NFSv4: Initialise connection to the server in nfs4_alloc_client()")
    Cc: stable@vger.kernel.org # 4.8.x
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09295a9893198a3c3e36bf44810a078927722fd1
Author: Pavel Parkhomenko <Pavel.Parkhomenko@baikalelectronics.ru>
Date:   Sun Feb 6 00:49:51 2022 +0300

    net: phy: marvell: Fix MDI-x polarity setting in 88e1118-compatible PHYs
    
    commit aec12836e7196e4d360b2cbf20cf7aa5139ad2ec upstream.
    
    When setting up autonegotiation for 88E1118R and compatible PHYs,
    a software reset of PHY is issued before setting up polarity.
    This is incorrect as changes of MDI Crossover Mode bits are
    disruptive to the normal operation and must be followed by a
    software reset to take effect. Let's patch m88e1118_config_aneg()
    to fix the issue mentioned before by invoking software reset
    of the PHY just after setting up MDI-x polarity.
    
    Fixes: 605f196efbf8 ("phy: Add support for Marvell 88E1118 PHY")
    Signed-off-by: Pavel Parkhomenko <Pavel.Parkhomenko@baikalelectronics.ru>
    Reviewed-by: Serge Semin <fancer.lancer@gmail.com>
    Suggested-by: Andrew Lunn <andrew@lunn.ch>
    Cc: stable@vger.kernel.org
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f84d17e6dd9050e1a9fb4ab570e6cde78c607df0
Author: Pavel Parkhomenko <Pavel.Parkhomenko@baikalelectronics.ru>
Date:   Sat Feb 5 23:39:32 2022 +0300

    net: phy: marvell: Fix RGMII Tx/Rx delays setting in 88e1121-compatible PHYs
    
    commit fe4f57bf7b585dca58f1496c4e2481ecbae18126 upstream.
    
    It is mandatory for a software to issue a reset upon modifying RGMII
    Receive Timing Control and RGMII Transmit Timing Control bit fields of MAC
    Specific Control register 2 (page 2, register 21) otherwise the changes
    won't be perceived by the PHY (the same is applicable for a lot of other
    registers). Not setting the RGMII delays on the platforms that imply it'
    being done on the PHY side will consequently cause the traffic loss. We
    discovered that the denoted soft-reset is missing in the
    m88e1121_config_aneg() method for the case if the RGMII delays are
    modified but the MDIx polarity isn't changed or the auto-negotiation is
    left enabled, thus causing the traffic loss on our platform with Marvell
    Alaska 88E1510 installed. Let's fix that by issuing the soft-reset if the
    delays have been actually set in the m88e1121_config_aneg_rgmii_delays()
    method.
    
    Cc: stable@vger.kernel.org
    Fixes: d6ab93364734 ("net: phy: marvell: Avoid unnecessary soft reset")
    Signed-off-by: Pavel Parkhomenko <Pavel.Parkhomenko@baikalelectronics.ru>
    Reviewed-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
    Reviewed-by: Serge Semin <fancer.lancer@gmail.com>
    Link: https://lore.kernel.org/r/20220205203932.26899-1-Pavel.Parkhomenko@baikalelectronics.ru
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60027834114dcda8ae6a24102f8c25e1cad653bf
Author: Jiasheng Jiang <jiasheng@iscas.ac.cn>
Date:   Wed Jan 12 16:31:56 2022 +0800

    mmc: sdhci-of-esdhc: Check for error num after setting mask
    
    commit 40c67c291a93f8846c4a972c9ef1b7ba4544c8d0 upstream.
    
    Because of the possible failure of the dma_supported(), the
    dma_set_mask_and_coherent() may return error num.
    Therefore, it should be better to check it and return the error if
    fails.
    And since the sdhci_setup_host() has already checked the return value of
    the enable_dma, we need not check it in sdhci_resume_host() again.
    
    Fixes: 5552d7ad596c ("mmc: sdhci-of-esdhc: set proper dma mask for ls104x chips")
    Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20220112083156.1124782-1-jiasheng@iscas.ac.cn
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a9511fd10ea599a477ff8aad6df6a58890fcc49
Author: Stefan Berger <stefanb@linux.ibm.com>
Date:   Tue Feb 1 15:37:10 2022 -0500

    ima: Do not print policy rule with inactive LSM labels
    
    commit 89677197ae709eb1ab3646952c44f6a171c9e74c upstream.
    
    Before printing a policy rule scan for inactive LSM labels in the policy
    rule. Inactive LSM labels are identified by args_p != NULL and
    rule == NULL.
    
    Fixes: 483ec26eed42 ("ima: ima/lsm policy rule loading logic bug fixes")
    Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>
    Cc: <stable@vger.kernel.org> # v5.6+
    Acked-by: Christian Brauner <brauner@kernel.org>
    [zohar@linux.ibm.com: Updated "Fixes" tag]
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 89e51f2ab81cb04ec9c0a00941fcb899c3d02b63
Author: Roberto Sassu <roberto.sassu@huawei.com>
Date:   Mon Jan 31 18:11:39 2022 +0100

    ima: Allow template selection with ima_template[_fmt]= after ima_hash=
    
    commit bb8e52e4906f148c2faf6656b5106cf7233e9301 upstream.
    
    Commit c2426d2ad5027 ("ima: added support for new kernel cmdline parameter
    ima_template_fmt") introduced an additional check on the ima_template
    variable to avoid multiple template selection.
    
    Unfortunately, ima_template could be also set by the setup function of the
    ima_hash= parameter, when it calls ima_template_desc_current(). This causes
    attempts to choose a new template with ima_template= or with
    ima_template_fmt=, after ima_hash=, to be ignored.
    
    Achieve the goal of the commit mentioned with the new static variable
    template_setup_done, so that template selection requests after ima_hash=
    are not ignored.
    
    Finally, call ima_init_template_list(), if not already done, to initialize
    the list of templates before lookup_template_desc() is called.
    
    Reported-by: Guo Zihua <guozihua@huawei.com>
    Signed-off-by: Roberto Sassu <roberto.sassu@huawei.com>
    Cc: stable@vger.kernel.org
    Fixes: c2426d2ad5027 ("ima: added support for new kernel cmdline parameter ima_template_fmt")
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0939988b16a4434a10ba9ed10bee144ba05c8442
Author: Stefan Berger <stefanb@linux.ibm.com>
Date:   Tue Jan 25 17:46:23 2022 -0500

    ima: Remove ima_policy file before directory
    
    commit f7333b9572d0559e00352a926c92f29f061b4569 upstream.
    
    The removal of ima_dir currently fails since ima_policy still exists, so
    remove the ima_policy file before removing the directory.
    
    Fixes: 4af4662fa4a9 ("integrity: IMA policy")
    Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>
    Cc: <stable@vger.kernel.org>
    Acked-by: Christian Brauner <brauner@kernel.org>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea58704f06f17b2111c35fe1d1dab6f3a2b46f81
Author: Xiaoke Wang <xkernel.wang@foxmail.com>
Date:   Sat Jan 15 09:11:11 2022 +0800

    integrity: check the return value of audit_log_start()
    
    commit 83230351c523b04ff8a029a4bdf97d881ecb96fc upstream.
    
    audit_log_start() returns audit_buffer pointer on success or NULL on
    error, so it is better to check the return value of it.
    
    Fixes: 3323eec921ef ("integrity: IMA as an integrity service provider")
    Signed-off-by: Xiaoke Wang <xkernel.wang@foxmail.com>
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
