commit 2263955bf7e71ca8419b64d7a60510aad29002f6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Jan 23 15:49:57 2021 +0100

    Linux 4.19.170
    
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20210122135731.921636245@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfca01ab14514370706f1d940dd2d47030dd4825
Author: Michael Hennerich <michael.hennerich@analog.com>
Date:   Thu Jan 14 17:42:17 2021 +0200

    spi: cadence: cache reference clock rate during probe
    
    commit 4d163ad79b155c71bf30366dc38f8d2502f78844 upstream.
    
    The issue is that using SPI from a callback under the CCF lock will
    deadlock, since this code uses clk_get_rate().
    
    Fixes: c474b38665463 ("spi: Add driver for Cadence SPI controller")
    Signed-off-by: Michael Hennerich <michael.hennerich@analog.com>
    Signed-off-by: Alexandru Ardelean <alexandru.ardelean@analog.com>
    Link: https://lore.kernel.org/r/20210114154217.51996-1-alexandru.ardelean@analog.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 394d9608da91e7909d74895af22c26bba6c0be5d
Author: Aya Levin <ayal@nvidia.com>
Date:   Thu Jan 7 15:50:18 2021 +0200

    net: ipv6: Validate GSO SKB before finish IPv6 processing
    
    [ Upstream commit b210de4f8c97d57de051e805686248ec4c6cfc52 ]
    
    There are cases where GSO segment's length exceeds the egress MTU:
     - Forwarding of a TCP GRO skb, when DF flag is not set.
     - Forwarding of an skb that arrived on a virtualisation interface
       (virtio-net/vhost/tap) with TSO/GSO size set by other network
       stack.
     - Local GSO skb transmitted on an NETIF_F_TSO tunnel stacked over an
       interface with a smaller MTU.
     - Arriving GRO skb (or GSO skb in a virtualised environment) that is
       bridged to a NETIF_F_TSO tunnel stacked over an interface with an
       insufficient MTU.
    
    If so:
     - Consume the SKB and its segments.
     - Issue an ICMP packet with 'Packet Too Big' message containing the
       MTU, allowing the source host to reduce its Path MTU appropriately.
    
    Note: These cases are handled in the same manner in IPv4 output finish.
    This patch aligns the behavior of IPv6 and the one of IPv4.
    
    Fixes: 9e50849054a4 ("netfilter: ipv6: move POSTROUTING invocation before fragmentation")
    Signed-off-by: Aya Levin <ayal@nvidia.com>
    Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
    Link: https://lore.kernel.org/r/1610027418-30438-1-git-send-email-ayal@nvidia.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bae6277ad341d4fbfa564409c310bd151f235250
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Mon Jan 13 18:42:26 2020 -0500

    net: skbuff: disambiguate argument and member for skb_list_walk_safe helper
    
    commit 5eee7bd7e245914e4e050c413dfe864e31805207 upstream.
    
    This worked before, because we made all callers name their next pointer
    "next". But in trying to be more "drop-in" ready, the silliness here is
    revealed. This commit fixes the problem by making the macro argument and
    the member use different names.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8e6f5a1d3bd462ff54cdb86f2938bfaa4223ccc9
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Wed Jan 8 16:59:02 2020 -0500

    net: introduce skb_list_walk_safe for skb segment walking
    
    commit dcfea72e79b0aa7a057c8f6024169d86a1bbc84b upstream.
    
    As part of the continual effort to remove direct usage of skb->next and
    skb->prev, this patch adds a helper for iterating through the
    singly-linked variant of skb lists, which are used for lists of GSO
    packet. The name "skb_list_..." has been chosen to match the existing
    function, "kfree_skb_list, which also operates on these singly-linked
    lists, and the "..._walk_safe" part is the same idiom as elsewhere in
    the kernel.
    
    This patch removes the helper from wireguard and puts it into
    linux/skbuff.h, while making it a bit more robust for general usage. In
    particular, parenthesis are added around the macro argument usage, and it
    now accounts for trying to iterate through an already-null skb pointer,
    which will simply run the iteration zero times. This latter enhancement
    means it can be used to replace both do { ... } while and while (...)
    open-coded idioms.
    
    This should take care of these three possible usages, which match all
    current methods of iterations.
    
    skb_list_walk_safe(segs, skb, next) { ... }
    skb_list_walk_safe(skb, skb, next) { ... }
    skb_list_walk_safe(segs, skb, segs) { ... }
    
    Gcc appears to generate efficient code for each of these.
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [ Just the skbuff.h changes for backporting - gregkh]
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d1d3dddcb3f26000e66cd0a9b8b16f7c2eb41bb
Author: Hoang Le <hoang.h.le@dektech.com.au>
Date:   Fri Jan 8 14:13:37 2021 +0700

    tipc: fix NULL deref in tipc_link_xmit()
    
    [ Upstream commit b77413446408fdd256599daf00d5be72b5f3e7c6 ]
    
    The buffer list can have zero skb as following path:
    tipc_named_node_up()->tipc_node_xmit()->tipc_link_xmit(), so
    we need to check the list before casting an &sk_buff.
    
    Fault report:
     [] tipc: Bulk publication failure
     [] general protection fault, probably for non-canonical [#1] PREEMPT [...]
     [] KASAN: null-ptr-deref in range [0x00000000000000c8-0x00000000000000cf]
     [] CPU: 0 PID: 0 Comm: swapper/0 Kdump: loaded Not tainted 5.10.0-rc4+ #2
     [] Hardware name: Bochs ..., BIOS Bochs 01/01/2011
     [] RIP: 0010:tipc_link_xmit+0xc1/0x2180
     [] Code: 24 b8 00 00 00 00 4d 39 ec 4c 0f 44 e8 e8 d7 0a 10 f9 48 [...]
     [] RSP: 0018:ffffc90000006ea0 EFLAGS: 00010202
     [] RAX: dffffc0000000000 RBX: ffff8880224da000 RCX: 1ffff11003d3cc0d
     [] RDX: 0000000000000019 RSI: ffffffff886007b9 RDI: 00000000000000c8
     [] RBP: ffffc90000007018 R08: 0000000000000001 R09: fffff52000000ded
     [] R10: 0000000000000003 R11: fffff52000000dec R12: ffffc90000007148
     [] R13: 0000000000000000 R14: 0000000000000000 R15: ffffc90000007018
     [] FS:  0000000000000000(0000) GS:ffff888037400000(0000) knlGS:000[...]
     [] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     [] CR2: 00007fffd2db5000 CR3: 000000002b08f000 CR4: 00000000000006f0
    
    Fixes: af9b028e270fd ("tipc: make media xmit call outside node spinlock context")
    Acked-by: Jon Maloy <jmaloy@redhat.com>
    Signed-off-by: Hoang Le <hoang.h.le@dektech.com.au>
    Link: https://lore.kernel.org/r/20210108071337.3598-1-hoang.h.le@dektech.com.au
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9364c8f03edff0266b5dce8295c55a4750ebaa4
Author: David Howells <dhowells@redhat.com>
Date:   Tue Jan 12 15:23:51 2021 +0000

    rxrpc: Fix handling of an unsupported token type in rxrpc_read()
    
    [ Upstream commit d52e419ac8b50c8bef41b398ed13528e75d7ad48 ]
    
    Clang static analysis reports the following:
    
    net/rxrpc/key.c:657:11: warning: Assigned value is garbage or undefined
                    toksize = toksizes[tok++];
                            ^ ~~~~~~~~~~~~~~~
    
    rxrpc_read() contains two consecutive loops.  The first loop calculates the
    token sizes and stores the results in toksizes[] and the second one uses
    the array.  When there is an error in identifying the token in the first
    loop, the token is skipped, no change is made to the toksizes[] array.
    When the same error happens in the second loop, the token is not skipped.
    This will cause the toksizes[] array to be out of step and will overrun
    past the calculated sizes.
    
    Fix this by making both loops log a message and return an error in this
    case.  This should only happen if a new token type is incompletely
    implemented, so it should normally be impossible to trigger this.
    
    Fixes: 9a059cd5ca7d ("rxrpc: Downgrade the BUG() for unsupported token type in rxrpc_read()")
    Reported-by: Tom Rix <trix@redhat.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Reviewed-by: Tom Rix <trix@redhat.com>
    Link: https://lore.kernel.org/r/161046503122.2445787.16714129930607546635.stgit@warthog.procyon.org.uk
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 669c0b5782fba3c4b0a5f68bca53b3b6055b3b2f
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jan 13 08:18:19 2021 -0800

    net: avoid 32 x truesize under-estimation for tiny skbs
    
    [ Upstream commit 3226b158e67cfaa677fd180152bfb28989cb2fac ]
    
    Both virtio net and napi_get_frags() allocate skbs
    with a very small skb->head
    
    While using page fragments instead of a kmalloc backed skb->head might give
    a small performance improvement in some cases, there is a huge risk of
    under estimating memory usage.
    
    For both GOOD_COPY_LEN and GRO_MAX_HEAD, we can fit at least 32 allocations
    per page (order-3 page in x86), or even 64 on PowerPC
    
    We have been tracking OOM issues on GKE hosts hitting tcp_mem limits
    but consuming far more memory for TCP buffers than instructed in tcp_mem[2]
    
    Even if we force napi_alloc_skb() to only use order-0 pages, the issue
    would still be there on arches with PAGE_SIZE >= 32768
    
    This patch makes sure that small skb head are kmalloc backed, so that
    other objects in the slab page can be reused instead of being held as long
    as skbs are sitting in socket queues.
    
    Note that we might in the future use the sk_buff napi cache,
    instead of going through a more expensive __alloc_skb()
    
    Another idea would be to use separate page sizes depending
    on the allocated length (to never have more than 4 frags per page)
    
    I would like to thank Greg Thelen for his precious help on this matter,
    analysing crash dumps is always a time consuming task.
    
    Fixes: fd11a83dd363 ("net: Pull out core bits of __netdev_alloc_skb and add __napi_alloc_skb")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Paolo Abeni <pabeni@redhat.com>
    Cc: Greg Thelen <gthelen@google.com>
    Reviewed-by: Alexander Duyck <alexanderduyck@fb.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Link: https://lore.kernel.org/r/20210113161819.1155526-1-eric.dumazet@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 11e36dcef44e6c7ab269f79657ff3d2db9a82c15
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Wed Jan 13 17:29:47 2021 -0800

    net: sit: unregister_netdevice on newlink's error path
    
    [ Upstream commit 47e4bb147a96f1c9b4e7691e7e994e53838bfff8 ]
    
    We need to unregister the netdevice if config failed.
    .ndo_uninit takes care of most of the heavy lifting.
    
    This was uncovered by recent commit c269a24ce057 ("net: make
    free_netdev() more lenient with unregistering devices").
    Previously the partially-initialized device would be left
    in the system.
    
    Reported-and-tested-by: syzbot+2393580080a2da190f04@syzkaller.appspotmail.com
    Fixes: e2f1f072db8d ("sit: allow to configure 6rd tunnels via netlink")
    Acked-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Link: https://lore.kernel.org/r/20210114012947.2515313-1-kuba@kernel.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 594711af9f26827dea6195774b9c4ff43d86dabe
Author: David Wu <david.wu@rock-chips.com>
Date:   Wed Jan 13 11:41:09 2021 +0800

    net: stmmac: Fixed mtu channged by cache aligned
    
    [ Upstream commit 5b55299eed78538cc4746e50ee97103a1643249c ]
    
    Since the original mtu is not used when the mtu is updated,
    the mtu is aligned with cache, this will get an incorrect.
    For example, if you want to configure the mtu to be 1500,
    but mtu 1536 is configured in fact.
    
    Fixed: eaf4fac478077 ("net: stmmac: Do not accept invalid MTU values")
    Signed-off-by: David Wu <david.wu@rock-chips.com>
    Link: https://lore.kernel.org/r/20210113034109.27865-1-david.wu@rock-chips.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b676c4bd0e3ef7df8427d73f45c0d680c5c5afe
Author: Baptiste Lepers <baptiste.lepers@gmail.com>
Date:   Tue Jan 12 15:59:15 2021 +0000

    rxrpc: Call state should be read with READ_ONCE() under some circumstances
    
    [ Upstream commit a95d25dd7b94a5ba18246da09b4218f132fed60e ]
    
    The call state may be changed at any time by the data-ready routine in
    response to received packets, so if the call state is to be read and acted
    upon several times in a function, READ_ONCE() must be used unless the call
    state lock is held.
    
    As it happens, we used READ_ONCE() to read the state a few lines above the
    unmarked read in rxrpc_input_data(), so use that value rather than
    re-reading it.
    
    Fixes: a158bdd3247b ("rxrpc: Fix call timeouts")
    Signed-off-by: Baptiste Lepers <baptiste.lepers@gmail.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Link: https://lore.kernel.org/r/161046715522.2450566.488819910256264150.stgit@warthog.procyon.org.uk
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fd803e108d704b1a093c0d319fcbf07df5f5446
Author: Petr Machata <petrm@nvidia.com>
Date:   Mon Jan 11 18:07:07 2021 +0100

    net: dcb: Accept RTM_GETDCB messages carrying set-like DCB commands
    
    [ Upstream commit df85bc140a4d6cbaa78d8e9c35154e1a2f0622c7 ]
    
    In commit 826f328e2b7e ("net: dcb: Validate netlink message in DCB
    handler"), Linux started rejecting RTM_GETDCB netlink messages if they
    contained a set-like DCB_CMD_ command.
    
    The reason was that privileges were only verified for RTM_SETDCB messages,
    but the value that determined the action to be taken is the command, not
    the message type. And validation of message type against the DCB command
    was the obvious missing piece.
    
    Unfortunately it turns out that mlnx_qos, a somewhat widely deployed tool
    for configuration of DCB, accesses the DCB set-like APIs through
    RTM_GETDCB.
    
    Therefore do not bounce the discrepancy between message type and command.
    Instead, in addition to validating privileges based on the actual message
    type, validate them also based on the expected message type. This closes
    the loophole of allowing DCB configuration on non-admin accounts, while
    maintaining backward compatibility.
    
    Fixes: 2f90b8657ec9 ("ixgbe: this patch adds support for DCB to the kernel and ixgbe driver")
    Fixes: 826f328e2b7e ("net: dcb: Validate netlink message in DCB handler")
    Signed-off-by: Petr Machata <petrm@nvidia.com>
    Link: https://lore.kernel.org/r/a3edcfda0825f2aa2591801c5232f2bbf2d8a554.1610384801.git.me@pmachata.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3997f963f12f4510b33a584f7a2bac6387fe68e5
Author: Petr Machata <me@pmachata.org>
Date:   Tue Dec 22 22:49:44 2020 +0100

    net: dcb: Validate netlink message in DCB handler
    
    [ Upstream commit 826f328e2b7e8854dd42ea44e6519cd75018e7b1 ]
    
    DCB uses the same handler function for both RTM_GETDCB and RTM_SETDCB
    messages. dcb_doit() bounces RTM_SETDCB mesasges if the user does not have
    the CAP_NET_ADMIN capability.
    
    However, the operation to be performed is not decided from the DCB message
    type, but from the DCB command. Thus DCB_CMD_*_GET commands are used for
    reading DCB objects, the corresponding SET and DEL commands are used for
    manipulation.
    
    The assumption is that set-like commands will be sent via an RTM_SETDCB
    message, and get-like ones via RTM_GETDCB. However, this assumption is not
    enforced.
    
    It is therefore possible to manipulate DCB objects without CAP_NET_ADMIN
    capability by sending the corresponding command in an RTM_GETDCB message.
    That is a bug. Fix it by validating the type of the request message against
    the type used for the response.
    
    Fixes: 2f90b8657ec9 ("ixgbe: this patch adds support for DCB to the kernel and ixgbe driver")
    Signed-off-by: Petr Machata <me@pmachata.org>
    Link: https://lore.kernel.org/r/a2a9b88418f3a58ef211b718f2970128ef9e3793.1608673640.git.me@pmachata.org
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4ede0a453cb2658a72dfed7572415c5366cdf4d
Author: Willem de Bruijn <willemb@google.com>
Date:   Sat Jan 9 17:18:34 2021 -0500

    esp: avoid unneeded kmap_atomic call
    
    [ Upstream commit 9bd6b629c39e3fa9e14243a6d8820492be1a5b2e ]
    
    esp(6)_output_head uses skb_page_frag_refill to allocate a buffer for
    the esp trailer.
    
    It accesses the page with kmap_atomic to handle highmem. But
    skb_page_frag_refill can return compound pages, of which
    kmap_atomic only maps the first underlying page.
    
    skb_page_frag_refill does not return highmem, because flag
    __GFP_HIGHMEM is not set. ESP uses it in the same manner as TCP.
    That also does not call kmap_atomic, but directly uses page_address,
    in skb_copy_to_page_nocache. Do the same for ESP.
    
    This issue has become easier to trigger with recent kmap local
    debugging feature CONFIG_DEBUG_KMAP_LOCAL_FORCE_MAP.
    
    Fixes: cac2661c53f3 ("esp4: Avoid skb_cow_data whenever possible")
    Fixes: 03e2a30f6a27 ("esp6: Avoid skb_cow_data whenever possible")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Acked-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eaf0f23329a0bfd4acab8d9151f1cc3014ba3d7e
Author: Andrey Zhizhikin <andrey.zhizhikin@leica-geosystems.com>
Date:   Fri Jan 8 09:58:39 2021 +0000

    rndis_host: set proper input size for OID_GEN_PHYSICAL_MEDIUM request
    
    [ Upstream commit e56b3d94d939f52d46209b9e1b6700c5bfff3123 ]
    
    MSFT ActiveSync implementation requires that the size of the response for
    incoming query is to be provided in the request input length. Failure to
    set the input size proper results in failed request transfer, where the
    ActiveSync counterpart reports the NDIS_STATUS_INVALID_LENGTH (0xC0010014L)
    error.
    
    Set the input size for OID_GEN_PHYSICAL_MEDIUM query to the expected size
    of the response in order for the ActiveSync to properly respond to the
    request.
    
    Fixes: 039ee17d1baa ("rndis_host: Add RNDIS physical medium checking into generic_rndis_bind()")
    Signed-off-by: Andrey Zhizhikin <andrey.zhizhikin@leica-geosystems.com>
    Link: https://lore.kernel.org/r/20210108095839.3335-1-andrey.zhizhikin@leica-geosystems.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba739c7533ddaae4ac7058d8b08e038dfaef48e1
Author: Stefan Chulski <stefanc@marvell.com>
Date:   Sun Jan 10 21:23:02 2021 +0200

    net: mvpp2: Remove Pause and Asym_Pause support
    
    [ Upstream commit 6f83802a1a06e74eafbdbc9b52c05516d3083d02 ]
    
    Packet Processor hardware not connected to MAC flow control unit and
    cannot support TX flow control.
    This patch disable flow control support.
    
    Fixes: 3f518509dedc ("ethernet: Add new driver for Marvell Armada 375 network unit")
    Signed-off-by: Stefan Chulski <stefanc@marvell.com>
    Acked-by: Marcin Wojtas <mw@semihalf.com>
    Link: https://lore.kernel.org/r/1610306582-16641-1-git-send-email-stefanc@marvell.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb95e031bc1daa5d3220c54f06a01637d363387c
Author: Manish Chopra <manishc@marvell.com>
Date:   Thu Jan 7 02:15:20 2021 -0800

    netxen_nic: fix MSI/MSI-x interrupts
    
    [ Upstream commit a2bc221b972db91e4be1970e776e98f16aa87904 ]
    
    For all PCI functions on the netxen_nic adapter, interrupt
    mode (INTx or MSI) configuration is dependent on what has
    been configured by the PCI function zero in the shared
    interrupt register, as these adapters do not support mixed
    mode interrupts among the functions of a given adapter.
    
    Logic for setting MSI/MSI-x interrupt mode in the shared interrupt
    register based on PCI function id zero check is not appropriate for
    all family of netxen adapters, as for some of the netxen family
    adapters PCI function zero is not really meant to be probed/loaded
    in the host but rather just act as a management function on the device,
    which caused all the other PCI functions on the adapter to always use
    legacy interrupt (INTx) mode instead of choosing MSI/MSI-x interrupt mode.
    
    This patch replaces that check with port number so that for all
    type of adapters driver attempts for MSI/MSI-x interrupt modes.
    
    Fixes: b37eb210c076 ("netxen_nic: Avoid mixed mode interrupts")
    Signed-off-by: Manish Chopra <manishc@marvell.com>
    Signed-off-by: Igor Russkikh <irusskikh@marvell.com>
    Link: https://lore.kernel.org/r/20210107101520.6735-1-manishc@marvell.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4669452b4c66268a184a51c543b525533013c14e
Author: Baptiste Lepers <baptiste.lepers@gmail.com>
Date:   Thu Jan 7 16:11:10 2021 +1100

    udp: Prevent reuseport_select_sock from reading uninitialized socks
    
    [ Upstream commit fd2ddef043592e7de80af53f47fa46fd3573086e ]
    
    reuse->socks[] is modified concurrently by reuseport_add_sock. To
    prevent reading values that have not been fully initialized, only read
    the array up until the last known safe index instead of incorrectly
    re-reading the last index of the array.
    
    Fixes: acdcecc61285f ("udp: correct reuseport selection with connected sockets")
    Signed-off-by: Baptiste Lepers <baptiste.lepers@gmail.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Link: https://lore.kernel.org/r/20210107051110.12247-1-baptiste.lepers@gmail.com
    Signed-off-by: Jakub Kicinski <kuba@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a08c2e586ad047fcea3f75664cca0915c77934fe
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Mon Jan 11 16:01:29 2021 -0500

    nfsd4: readdirplus shouldn't return parent of export
    
    commit 51b2ee7d006a736a9126e8111d1f24e4fd0afaa6 upstream.
    
    If you export a subdirectory of a filesystem, a READDIRPLUS on the root
    of that export will return the filehandle of the parent with the ".."
    entry.
    
    The filehandle is optional, so let's just not return the filehandle for
    ".." if we're at the root of an export.
    
    Note that once the client learns one filehandle outside of the export,
    they can trivially access the rest of the export using further lookups.
    
    However, it is also not very difficult to guess filehandles outside of
    the export.  So exporting a subdirectory of a filesystem should
    considered equivalent to providing access to the entire filesystem.  To
    avoid confusion, we recommend only exporting entire filesystems.
    
    Reported-by: Youjipeng <wangzhibei1999@gmail.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b14b19592c02b8714713ebca2db70bd17c46d670
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed May 27 16:17:40 2020 +0200

    crypto: x86/crc32c - fix building with clang ias
    
    commit 44623b2818f4a442726639572f44fd9b6d0ef68c upstream.
    
    The clang integrated assembler complains about movzxw:
    
    arch/x86/crypto/crc32c-pcl-intel-asm_64.S:173:2: error: invalid instruction mnemonic 'movzxw'
    
    It seems that movzwq is the mnemonic that it expects instead,
    and this is what objdump prints when disassembling the file.
    
    Fixes: 6a8ce1ef3940 ("crypto: crc32c - Optimize CRC32C calculation with PCLMULQDQ instruction")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    [jc: Fixed conflicts due to lack of 34fdce6981b9 ("x86: Change {JMP,CALL}_NOSPEC argument")]
    Signed-off-by: Jian Cai <jiancai@google.com>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9f5547bf02a8ec1a9240b8ab6fece5b28d74d1b
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Fri Jan 8 11:15:56 2021 -0500

    dm integrity: fix flush with external metadata device
    
    commit 9b5948267adc9e689da609eb61cf7ed49cae5fa8 upstream.
    
    With external metadata device, flush requests are not passed down to the
    data device.
    
    Fix this by submitting the flush request in dm_integrity_flush_buffers. In
    order to not degrade performance, we overlap the data device flush with
    the metadata device flush.
    
    Reported-by: Lukas Straub <lukasstraub2@web.de>
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 189863162d620386015a55f9a9028d35c30e3c12
Author: Will Deacon <will@kernel.org>
Date:   Tue Jan 12 22:48:32 2021 +0000

    compiler.h: Raise minimum version of GCC to 5.1 for arm64
    
    commit dca5244d2f5b94f1809f0c02a549edf41ccd5493 upstream.
    
    GCC versions >= 4.9 and < 5.1 have been shown to emit memory references
    beyond the stack pointer, resulting in memory corruption if an interrupt
    is taken after the stack pointer has been adjusted but before the
    reference has been executed. This leads to subtle, infrequent data
    corruption such as the EXT4 problems reported by Russell King at the
    link below.
    
    Life is too short for buggy compilers, so raise the minimum GCC version
    required by arm64 to 5.1.
    
    Reported-by: Russell King <linux@armlinux.org.uk>
    Suggested-by: Arnd Bergmann <arnd@kernel.org>
    Signed-off-by: Will Deacon <will@kernel.org>
    Tested-by: Nathan Chancellor <natechancellor@gmail.com>
    Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: <stable@vger.kernel.org>
    Cc: Theodore Ts'o <tytso@mit.edu>
    Cc: Florian Weimer <fweimer@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Link: https://lore.kernel.org/r/20210105154726.GD1551@shell.armlinux.org.uk
    Link: https://lore.kernel.org/r/20210112224832.10980-1-will@kernel.org
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    [will: backport to 4.19.y/5.4.y]
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f2a3a2a277b67c44851faf55ceda193a176d06fc
Author: Hamish Martin <hamish.martin@alliedtelesis.co.nz>
Date:   Fri Sep 11 09:25:12 2020 +1200

    usb: ohci: Make distrust_firmware param default to false
    
    commit c4005a8f65edc55fb1700dfc5c1c3dc58be80209 upstream.
    
    The 'distrust_firmware' module parameter dates from 2004 and the USB
    subsystem is a lot more mature and reliable now than it was then.
    Alter the default to false now.
    
    Suggested-by: Alan Stern <stern@rowland.harvard.edu>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Hamish Martin <hamish.martin@alliedtelesis.co.nz>
    Link: https://lore.kernel.org/r/20200910212512.16670-2-hamish.martin@alliedtelesis.co.nz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
