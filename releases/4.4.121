commit 8b5ab55d254f36e89b1b53aeac7223d2d102483e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sun Mar 11 16:19:47 2018 +0100

    Linux 4.4.121

commit 0fc85640c6a8d84bdab008f285346061a8fc393d
Author: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
Date:   Wed Aug 2 03:18:27 2017 -0300

    btrfs: preserve i_mode if __btrfs_set_acl() fails
    
    commit d7d824966530acfe32b94d1ed672e6fe1638cd68 upstream.
    
    When changing a file's acl mask, btrfs_set_acl() will first set the
    group bits of i_mode to the value of the mask, and only then set the
    actual extended attribute representing the new acl.
    
    If the second part fails (due to lack of space, for example) and the
    file had no acl attribute to begin with, the system will from now on
    assume that the mask permission bits are actual group permission bits,
    potentially granting access to the wrong users.
    
    Prevent this by restoring the original mode bits if __btrfs_set_acl
    fails.
    
    Signed-off-by: Ernesto A. Fernández <ernesto.mnd.fernandez@gmail.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ea1c4ebe282d6bb6afca4a42bfbfb933c86b264c
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Thu Mar 8 16:17:34 2018 +0100

    bpf, x64: implement retpoline for tail call
    
    
    [ upstream commit a493a87f38cfa48caaa95c9347be2d914c6fdf29 ]
    
    Implement a retpoline [0] for the BPF tail call JIT'ing that converts
    the indirect jump via jmp %rax that is used to make the long jump into
    another JITed BPF image. Since this is subject to speculative execution,
    we need to control the transient instruction sequence here as well
    when CONFIG_RETPOLINE is set, and direct it into a pause + lfence loop.
    The latter aligns also with what gcc / clang emits (e.g. [1]).
    
    JIT dump after patch:
    
      # bpftool p d x i 1
       0: (18) r2 = map[id:1]
       2: (b7) r3 = 0
       3: (85) call bpf_tail_call#12
       4: (b7) r0 = 2
       5: (95) exit
    
    With CONFIG_RETPOLINE:
    
      # bpftool p d j i 1
      [...]
      33:   cmp    %edx,0x24(%rsi)
      36:   jbe    0x0000000000000072  |*
      38:   mov    0x24(%rbp),%eax
      3e:   cmp    $0x20,%eax
      41:   ja     0x0000000000000072  |
      43:   add    $0x1,%eax
      46:   mov    %eax,0x24(%rbp)
      4c:   mov    0x90(%rsi,%rdx,8),%rax
      54:   test   %rax,%rax
      57:   je     0x0000000000000072  |
      59:   mov    0x28(%rax),%rax
      5d:   add    $0x25,%rax
      61:   callq  0x000000000000006d  |+
      66:   pause                      |
      68:   lfence                     |
      6b:   jmp    0x0000000000000066  |
      6d:   mov    %rax,(%rsp)         |
      71:   retq                       |
      72:   mov    $0x2,%eax
      [...]
    
      * relative fall-through jumps in error case
      + retpoline for indirect jump
    
    Without CONFIG_RETPOLINE:
    
      # bpftool p d j i 1
      [...]
      33:   cmp    %edx,0x24(%rsi)
      36:   jbe    0x0000000000000063  |*
      38:   mov    0x24(%rbp),%eax
      3e:   cmp    $0x20,%eax
      41:   ja     0x0000000000000063  |
      43:   add    $0x1,%eax
      46:   mov    %eax,0x24(%rbp)
      4c:   mov    0x90(%rsi,%rdx,8),%rax
      54:   test   %rax,%rax
      57:   je     0x0000000000000063  |
      59:   mov    0x28(%rax),%rax
      5d:   add    $0x25,%rax
      61:   jmpq   *%rax               |-
      63:   mov    $0x2,%eax
      [...]
    
      * relative fall-through jumps in error case
      - plain indirect jump as before
    
      [0] https://support.google.com/faqs/answer/7625886
      [1] https://github.com/gcc-mirror/gcc/commit/a31e654fa107be968b802786d747e962c2fcdb2b
    
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb97a65730f975743b2d95b5cecadc5a254c0159
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Tue Jun 20 19:14:30 2017 -0400

    dm io: fix duplicate bio completion due to missing ref count
    
    commit feb7695fe9fb83084aa29de0094774f4c9d4c9fc upstream.
    
    If only a subset of the devices associated with multiple regions support
    a given special operation (eg. DISCARD) then the dec_count() that is
    used to set error for the region must increment the io->count.
    
    Otherwise, when the dec_count() is called it can cause the dm-io
    caller's bio to be completed multiple times.  As was reported against
    the dm-mirror target that had mirror legs with a mix of discard
    capabilities.
    
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=196077
    Reported-by: Zhang Yi <yizhan@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7f17d033e58acce9df40bc44ed804720417ca2e
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Mar 8 18:39:24 2018 +0000

    mpls, nospec: Sanitize array index in mpls_label_ok()
    
    commit 3968523f855050b8195134da951b87c20bd66130 upstream.
    
    mpls_label_ok() validates that the 'platform_label' array index from a
    userspace netlink message payload is valid. Under speculation the
    mpls_label_ok() result may not resolve in the CPU pipeline until after
    the index is used to access an array element. Sanitize the index to zero
    to prevent userspace-controlled arbitrary out-of-bounds speculation, a
    precursor for a speculative execution side channel vulnerability.
    
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    [bwh: Backported to 4.4:
     - mpls_label_ok() doesn't take an extack parameter
     - Drop change in mpls_getroute()]
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bd01ca7633432694cab0a098dfb9cee7b157512
Author: David Ahern <dsahern@gmail.com>
Date:   Thu Mar 8 18:36:16 2018 +0000

    net: mpls: Pull common label check into helper
    
    commit b7b386f42f079b25b942c756820e36c6bd09b2ca upstream.
    
    mpls_route_add and mpls_route_del have the same checks on the label.
    Move to a helper. Avoid duplicate extack messages in the next patch.
    
    Signed-off-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 54b183ea4fe96c7b80439971ee04cf634a6e0459
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Fri Feb 9 17:35:23 2018 +0300

    sctp: verify size of a new chunk in _sctp_make_chunk()
    
    
    [ Upstream commit 07f2c7ab6f8d0a7e7c5764c4e6cc9c52951b9d9c ]
    
    When SCTP makes INIT or INIT_ACK packet the total chunk length
    can exceed SCTP_MAX_CHUNK_LEN which leads to kernel panic when
    transmitting these packets, e.g. the crash on sending INIT_ACK:
    
    [  597.804948] skbuff: skb_over_panic: text:00000000ffae06e4 len:120168
                   put:120156 head:000000007aa47635 data:00000000d991c2de
                   tail:0x1d640 end:0xfec0 dev:<NULL>
    ...
    [  597.976970] ------------[ cut here ]------------
    [  598.033408] kernel BUG at net/core/skbuff.c:104!
    [  600.314841] Call Trace:
    [  600.345829]  <IRQ>
    [  600.371639]  ? sctp_packet_transmit+0x2095/0x26d0 [sctp]
    [  600.436934]  skb_put+0x16c/0x200
    [  600.477295]  sctp_packet_transmit+0x2095/0x26d0 [sctp]
    [  600.540630]  ? sctp_packet_config+0x890/0x890 [sctp]
    [  600.601781]  ? __sctp_packet_append_chunk+0x3b4/0xd00 [sctp]
    [  600.671356]  ? sctp_cmp_addr_exact+0x3f/0x90 [sctp]
    [  600.731482]  sctp_outq_flush+0x663/0x30d0 [sctp]
    [  600.788565]  ? sctp_make_init+0xbf0/0xbf0 [sctp]
    [  600.845555]  ? sctp_check_transmitted+0x18f0/0x18f0 [sctp]
    [  600.912945]  ? sctp_outq_tail+0x631/0x9d0 [sctp]
    [  600.969936]  sctp_cmd_interpreter.isra.22+0x3be1/0x5cb0 [sctp]
    [  601.041593]  ? sctp_sf_do_5_1B_init+0x85f/0xc30 [sctp]
    [  601.104837]  ? sctp_generate_t1_cookie_event+0x20/0x20 [sctp]
    [  601.175436]  ? sctp_eat_data+0x1710/0x1710 [sctp]
    [  601.233575]  sctp_do_sm+0x182/0x560 [sctp]
    [  601.284328]  ? sctp_has_association+0x70/0x70 [sctp]
    [  601.345586]  ? sctp_rcv+0xef4/0x32f0 [sctp]
    [  601.397478]  ? sctp6_rcv+0xa/0x20 [sctp]
    ...
    
    Here the chunk size for INIT_ACK packet becomes too big, mostly
    because of the state cookie (INIT packet has large size with
    many address parameters), plus additional server parameters.
    
    Later this chunk causes the panic in skb_put_data():
    
      skb_packet_transmit()
          sctp_packet_pack()
              skb_put_data(nskb, chunk->skb->data, chunk->skb->len);
    
    'nskb' (head skb) was previously allocated with packet->size
    from u16 'chunk->chunk_hdr->length'.
    
    As suggested by Marcelo we should check the chunk's length in
    _sctp_make_chunk() before trying to allocate skb for it and
    discard a chunk if its size bigger than SCTP_MAX_CHUNK_LEN.
    
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leinter@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f3b580d3223463be83fa6dd1ef5585ebb99a7fec
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Tue Feb 27 18:58:17 2018 +0100

    s390/qeth: fix IPA command submission race
    
    
    [ Upstream commit d22ffb5a712f9211ffd104c38fc17cbfb1b5e2b0 ]
    
    If multiple IPA commands are build & sent out concurrently,
    fill_ipacmd_header() may assign a seqno value to a command that's
    different from what send_control_data() later assigns to this command's
    reply.
    This is due to other commands passing through send_control_data(),
    and incrementing card->seqno.ipa along the way.
    
    So one IPA command has no reply that's waiting for its seqno, while some
    other IPA command has multiple reply objects waiting for it.
    Only one of those waiting replies wins, and the other(s) times out and
    triggers a recovery via send_ipa_cmd().
    
    Fix this by making sure that the same seqno value is assigned to
    a command and its reply object.
    Do so immediately before submitting the command & while holding the
    irq_pending "lock", to produce nicely ascending seqnos.
    
    As a side effect, *all* IPA commands now use a reply object that's
    waiting for its actual seqno. Previously, early IPA commands that were
    submitted while the card was still DOWN used the "catch-all" IDX seqno.
    
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 290db9ba25917e20cc95484a52388ed0b3abbfe1
Author: Julian Wiedmann <jwi@linux.vnet.ibm.com>
Date:   Fri Feb 9 11:03:50 2018 +0100

    s390/qeth: fix SETIP command handling
    
    
    [ Upstream commit 1c5b2216fbb973a9410e0b06389740b5c1289171 ]
    
    send_control_data() applies some special handling to SETIP v4 IPA
    commands. But current code parses *all* command types for the SETIP
    command code. Limit the command code check to IPA commands.
    
    Fixes: 5b54e16f1a54 ("qeth: do not spin for SETIP ip assist command")
    Signed-off-by: Julian Wiedmann <jwi@linux.vnet.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f99fb569235fbfbec9ae8f1cc78d73d2aed4c5a3
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Mon Feb 5 15:10:35 2018 +0300

    sctp: fix dst refcnt leak in sctp_v6_get_dst()
    
    
    [ Upstream commit 957d761cf91cdbb175ad7d8f5472336a4d54dbf2 ]
    
    When going through the bind address list in sctp_v6_get_dst() and
    the previously found address is better ('matchlen > bmatchlen'),
    the code continues to the next iteration without releasing currently
    held destination.
    
    Fix it by releasing 'bdst' before continue to the next iteration, and
    instead of introducing one more '!IS_ERR(bdst)' check for dst_release(),
    move the already existed one right after ip6_dst_lookup_flow(), i.e. we
    shouldn't proceed further if we get an error for the route lookup.
    
    Fixes: dbc2b5e9a09e ("sctp: fix src address selection if using secondary addresses for ipv6")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4faf87c2beaaed9ec7f2b6e4e53560dd38b1acc
Author: Tommi Rantala <tommi.t.rantala@nokia.com>
Date:   Mon Feb 5 21:48:14 2018 +0200

    sctp: fix dst refcnt leak in sctp_v4_get_dst
    
    
    [ Upstream commit 4a31a6b19f9ddf498c81f5c9b089742b7472a6f8 ]
    
    Fix dst reference count leak in sctp_v4_get_dst() introduced in commit
    410f03831 ("sctp: add routing output fallback"):
    
    When walking the address_list, successive ip_route_output_key() calls
    may return the same rt->dst with the reference incremented on each call.
    
    The code would not decrement the dst refcount when the dst pointer was
    identical from the previous iteration, causing the dst refcnt leak.
    
    Testcase:
      ip netns add TEST
      ip netns exec TEST ip link set lo up
      ip link add dummy0 type dummy
      ip link add dummy1 type dummy
      ip link add dummy2 type dummy
      ip link set dev dummy0 netns TEST
      ip link set dev dummy1 netns TEST
      ip link set dev dummy2 netns TEST
      ip netns exec TEST ip addr add 192.168.1.1/24 dev dummy0
      ip netns exec TEST ip link set dummy0 up
      ip netns exec TEST ip addr add 192.168.1.2/24 dev dummy1
      ip netns exec TEST ip link set dummy1 up
      ip netns exec TEST ip addr add 192.168.1.3/24 dev dummy2
      ip netns exec TEST ip link set dummy2 up
      ip netns exec TEST sctp_test -H 192.168.1.2 -P 20002 -h 192.168.1.1 -p 20000 -s -B 192.168.1.3
      ip netns del TEST
    
    In 4.4 and 4.9 kernels this results to:
      [  354.179591] unregister_netdevice: waiting for lo to become free. Usage count = 1
      [  364.419674] unregister_netdevice: waiting for lo to become free. Usage count = 1
      [  374.663664] unregister_netdevice: waiting for lo to become free. Usage count = 1
      [  384.903717] unregister_netdevice: waiting for lo to become free. Usage count = 1
      [  395.143724] unregister_netdevice: waiting for lo to become free. Usage count = 1
      [  405.383645] unregister_netdevice: waiting for lo to become free. Usage count = 1
      ...
    
    Fixes: 410f03831 ("sctp: add routing output fallback")
    Fixes: 0ca50d12f ("sctp: fix src address selection if using secondary addresses")
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e44cd77ca94298412591b7050d990cb63f4831a4
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Thu Feb 15 20:18:43 2018 +0300

    udplite: fix partial checksum initialization
    
    
    [ Upstream commit 15f35d49c93f4fa9875235e7bf3e3783d2dd7a1b ]
    
    Since UDP-Lite is always using checksum, the following path is
    triggered when calculating pseudo header for it:
    
      udp4_csum_init() or udp6_csum_init()
        skb_checksum_init_zero_check()
          __skb_checksum_validate_complete()
    
    The problem can appear if skb->len is less than CHECKSUM_BREAK. In
    this particular case __skb_checksum_validate_complete() also invokes
    __skb_checksum_complete(skb). If UDP-Lite is using partial checksum
    that covers only part of a packet, the function will return bad
    checksum and the packet will be dropped.
    
    It can be fixed if we skip skb_checksum_init_zero_check() and only
    set the required pseudo header checksum for UDP-Lite with partial
    checksum before udp4_csum_init()/udp6_csum_init() functions return.
    
    Fixes: ed70fcfcee95 ("net: Call skb_checksum_init in IPv4")
    Fixes: e4f45b7f40bd ("net: Call skb_checksum_init in IPv6")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eae0a9ae192ae829c951109ed08eb2e698167e24
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Fri Mar 2 18:41:16 2018 +0100

    ppp: prevent unregistered channels from connecting to PPP units
    
    
    [ Upstream commit 77f840e3e5f09c6d7d727e85e6e08276dd813d11 ]
    
    PPP units don't hold any reference on the channels connected to it.
    It is the channel's responsibility to ensure that it disconnects from
    its unit before being destroyed.
    In practice, this is ensured by ppp_unregister_channel() disconnecting
    the channel from the unit before dropping a reference on the channel.
    
    However, it is possible for an unregistered channel to connect to a PPP
    unit: register a channel with ppp_register_net_channel(), attach a
    /dev/ppp file to it with ioctl(PPPIOCATTCHAN), unregister the channel
    with ppp_unregister_channel() and finally connect the /dev/ppp file to
    a PPP unit with ioctl(PPPIOCCONNECT).
    
    Once in this situation, the channel is only held by the /dev/ppp file,
    which can be released at anytime and free the channel without letting
    the parent PPP unit know. Then the ppp structure ends up with dangling
    pointers in its ->channels list.
    
    Prevent this scenario by forbidding unregistered channels from
    connecting to PPP units. This maintains the code logic by keeping
    ppp_unregister_channel() responsible from disconnecting the channel if
    necessary and avoids modification on the reference counting mechanism.
    
    This issue seems to predate git history (successfully reproduced on
    Linux 2.6.26 and earlier PPP commits are unrelated).
    
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1b919f5ac999e67fb3c6eb2130e5f9f8207e07f2
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Tue Feb 6 14:48:32 2018 +0100

    netlink: ensure to loop over all netns in genlmsg_multicast_allns()
    
    
    [ Upstream commit cb9f7a9a5c96a773bbc9c70660dc600cfff82f82 ]
    
    Nowadays, nlmsg_multicast() returns only 0 or -ESRCH but this was not the
    case when commit 134e63756d5f was pushed.
    However, there was no reason to stop the loop if a netns does not have
    listeners.
    Returns -ESRCH only if there was no listeners in all netns.
    
    To avoid having the same problem in the future, I didn't take the
    assumption that nlmsg_multicast() returns only 0 or -ESRCH.
    
    Fixes: 134e63756d5f ("genetlink: make netns aware")
    CC: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 94522bee72fd4ba2a4f1b6dc3e7439dc8f4ce501
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Mon Feb 26 16:13:43 2018 +0100

    net: ipv4: don't allow setting net.ipv4.route.min_pmtu below 68
    
    
    [ Upstream commit c7272c2f1229125f74f22dcdd59de9bbd804f1c8 ]
    
    According to RFC 1191 sections 3 and 4, ICMP frag-needed messages
    indicating an MTU below 68 should be rejected:
    
        A host MUST never reduce its estimate of the Path MTU below 68
        octets.
    
    and (talking about ICMP frag-needed's Next-Hop MTU field):
    
        This field will never contain a value less than 68, since every
        router "must be able to forward a datagram of 68 octets without
        fragmentation".
    
    Furthermore, by letting net.ipv4.route.min_pmtu be set to negative
    values, we can end up with a very large PMTU when (-1) is cast into u32.
    
    Let's also make ip_rt_min_pmtu a u32, since it's only ever compared to
    unsigned ints.
    
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 65fe24fdbbe0f5292d3dd5201a49725d7be21d85
Author: Jakub Kicinski <kuba@kernel.org>
Date:   Mon Feb 12 21:35:31 2018 -0800

    net: fix race on decreasing number of TX queues
    
    
    [ Upstream commit ac5b70198adc25c73fba28de4f78adcee8f6be0b ]
    
    netif_set_real_num_tx_queues() can be called when netdev is up.
    That usually happens when user requests change of number of
    channels/rings with ethtool -L.  The procedure for changing
    the number of queues involves resetting the qdiscs and setting
    dev->num_tx_queues to the new value.  When the new value is
    lower than the old one, extra care has to be taken to ensure
    ordering of accesses to the number of queues vs qdisc reset.
    
    Currently the queues are reset before new dev->num_tx_queues
    is assigned, leaving a window of time where packets can be
    enqueued onto the queues going down, leading to a likely
    crash in the drivers, since most drivers don't check if TX
    skbs are assigned to an active queue.
    
    Fixes: e6484930d7c7 ("net: allocate tx queues in register_netdevice")
    Signed-off-by: Jakub Kicinski <jakub.kicinski@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f9e04cad288e61d88cae6e4db441492ee685f33
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Feb 22 16:55:34 2018 +0100

    ipv6 sit: work around bogus gcc-8 -Wrestrict warning
    
    
    [ Upstream commit ca79bec237f5809a7c3c59bd41cd0880aa889966 ]
    
    gcc-8 has a new warning that detects overlapping input and output arguments
    in memcpy(). It triggers for sit_init_net() calling ipip6_tunnel_clone_6rd(),
    which is actually correct:
    
    net/ipv6/sit.c: In function 'sit_init_net':
    net/ipv6/sit.c:192:3: error: 'memcpy' source argument is the same as destination [-Werror=restrict]
    
    The problem here is that the logic detecting the memcpy() arguments finds them
    to be the same, but the conditional that tests for the input and output of
    ipip6_tunnel_clone_6rd() to be identical is not a compile-time constant.
    
    We know that netdev_priv(t->dev) is the same as t for a tunnel device,
    and comparing "dev" directly here lets the compiler figure out as well
    that 'dev == sitn->fb_tunnel_dev' when called from sit_init_net(), so
    it no longer warns.
    
    This code is old, so Cc stable to make sure that we don't get the warning
    for older kernels built with new gcc.
    
    Cc: Martin Sebor <msebor@gmail.com>
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=83456
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 830dd26a5397cee47ca4d622966cfb6d4ee69def
Author: Denis Du <dudenis2000@yahoo.ca>
Date:   Sat Feb 24 16:51:42 2018 -0500

    hdlc_ppp: carrier detect ok, don't turn off negotiation
    
    
    [ Upstream commit b6c3bad1ba83af1062a7ff6986d9edc4f3d7fc8e ]
    
    Sometimes when physical lines have a just good noise to make the protocol
    handshaking fail, but the carrier detect still good. Then after remove of
    the noise, nobody will trigger this protocol to be start again to cause
    the link to never come back. The fix is when the carrier is still on, not
    terminate the protocol handshaking.
    
    Signed-off-by: Denis Du <dudenis2000@yahoo.ca>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e70022d4b0b7738eeffa6873df6193ea2dd2d15
Author: Stefano Brivio <sbrivio@redhat.com>
Date:   Thu Feb 15 09:46:03 2018 +0100

    fib_semantics: Don't match route with mismatching tclassid
    
    
    [ Upstream commit a8c6db1dfd1b1d18359241372bb204054f2c3174 ]
    
    In fib_nh_match(), if output interface or gateway are passed in
    the FIB configuration, we don't have to check next hops of
    multipath routes to conclude whether we have a match or not.
    
    However, we might still have routes with different realms
    matching the same output interface and gateway configuration,
    and this needs to cause the match to fail. Otherwise the first
    route inserted in the FIB will match, regardless of the realms:
    
     # ip route add 1.1.1.1 dev eth0 table 1234 realms 1/2
     # ip route append 1.1.1.1 dev eth0 table 1234 realms 3/4
     # ip route list table 1234
     1.1.1.1 dev eth0 scope link realms 1/2
     1.1.1.1 dev eth0 scope link realms 3/4
     # ip route del 1.1.1.1 dev ens3 table 1234 realms 3/4
     # ip route list table 1234
     1.1.1.1 dev ens3 scope link realms 3/4
    
    whereas route with realms 3/4 should have been deleted instead.
    
    Explicitly check for fc_flow passed in the FIB configuration
    (this comes from RTA_FLOW extracted by rtm_to_fib_config()) and
    fail matching if it differs from nh_tclassid.
    
    The handling of RTA_FLOW for multipath routes later in
    fib_nh_match() is still needed, as we can have multiple RTA_FLOW
    attributes that need to be matched against the tclassid of each
    next hop.
    
    v2: Check that fc_flow is set before discarding the match, so
        that the user can still select the first matching rule by
        not specifying any realm, as suggested by David Ahern.
    
    Reported-by: Jianlin Shi <jishi@redhat.com>
    Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
    Acked-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a12bc77d4fbbc045d7f4bf5f413cae67942d305
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon Feb 12 17:15:40 2018 +0800

    bridge: check brport attr show in brport_show
    
    
    [ Upstream commit 1b12580af1d0677c3c3a19e35bfe5d59b03f737f ]
    
    Now br_sysfs_if file flush doesn't have attr show. To read it will
    cause kernel panic after users chmod u+r this file.
    
    Xiong found this issue when running the commands:
    
      ip link add br0 type bridge
      ip link add type veth
      ip link set veth0 master br0
      chmod u+r /sys/devices/virtual/net/veth0/brport/flush
      timeout 3 cat /sys/devices/virtual/net/veth0/brport/flush
    
    kernel crashed with NULL a pointer dereference call trace.
    
    This patch is to fix it by return -EINVAL when brport_attr->show
    is null, just the same as the check for brport_attr->store in
    brport_store().
    
    Fixes: 9cf637473c85 ("bridge: add sysfs hook to flush forwarding table")
    Reported-by: Xiong Zhou <xzhou@redhat.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f3437fbb2d8f780e84f507282d03facb4ccf248
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Thu Mar 8 15:59:07 2018 +0000

    Revert "led: core: Fix brightness setting when setting delay_off=0"
    
    This reverts commit 20ac8f72514b3af8b62c520d55656ded865eff00, which
    was commit 2b83ff96f51d0b039c4561b9f95c824d7bddb85c upstream.
    The bug that it should fix was only introduced in Linux 4.7, and
    in 4.4 it causes a regression.
    
    Reported-by: Jacek Anaszewski <jacek.anaszewski@gmail.com>
    Cc: Matthieu CASTET <matthieu.castet@parrot.com>
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2da3bb9cfab37eae4ad92d53f8e7a86d5747dd5
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Feb 14 10:14:17 2018 +0300

    x86/spectre: Fix an error message
    
    commit 9de29eac8d2189424d81c0d840cd0469aa3d41c8 upstream.
    
    If i == ARRAY_SIZE(mitigation_options) then we accidentally print
    garbage from one space beyond the end of the mitigation_options[] array.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: KarimAllah Ahmed <karahmed@amazon.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: kernel-janitors@vger.kernel.org
    Fixes: 9005c6834c0f ("x86/spectre: Simplify spectre_v2 command line parsing")
    Link: http://lkml.kernel.org/r/20180214071416.GA26677@mwanda
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dff485e36287be123a844dc9164ba0417cd34552
Author: Nathan Sullivan <nathan.sullivan@ni.com>
Date:   Mon Aug 15 17:20:14 2016 -0500

    leds: do not overflow sysfs buffer in led_trigger_show
    
    commit 3b9b95363c45365d606ad4bbba16acca75fdf6d3 upstream.
    
    Per the documentation, use scnprintf instead of sprintf to ensure there
    is never more than PAGE_SIZE bytes of trigger names put into the
    buffer.
    
    Signed-off-by: Nathan Sullivan <nathan.sullivan@ni.com>
    Signed-off-by: Zach Brown <zach.brown@ni.com>
    Signed-off-by: Jacek Anaszewski <j.anaszewski@samsung.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6bde094049bf3648882ff8fdfabd7871f40d3935
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Mar 7 18:36:43 2018 +0000

    x86/apic/vector: Handle legacy irq data correctly
    
    The backport of upstream commit 45d55e7bac40 ("x86/apic/vector: Fix off by
    one in error path") missed to fixup the legacy interrupt data which is not
    longer available upstream.
    
    Handle legacy irq data correctly by clearing the legacy storage to prevent
    use after free.
    
    Fixes: 7fd133539289 ("x86/apic/vector: Fix off by one in error path") - 4.4.y
    Fixes: c557481a9491 ("x86/apic/vector: Fix off by one in error path") - 4.9.y
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c86bfc7b7b01c4b98c29a39bd60e61fa8e337ebf
Author: Adam Ford <aford173@gmail.com>
Date:   Thu Jan 25 14:10:37 2018 -0600

    ARM: dts: LogicPD Torpedo: Fix I2C1 pinmux
    
    commit 74402055a2d3ec998a1ded599e86185a27d9bbf4 upstream.
    
    The pinmuxing was missing for I2C1 which was causing intermittent issues
    with the PMIC which is connected to I2C1.  The bootloader did not quite
    configure the I2C1 either, so when running at 2.6MHz, it was generating
    errors at time.
    
    This correctly sets the I2C1 pinmuxing so it can operate at 2.6MHz
    
    Fixes: 687c27676151 ("ARM: dts: Add minimal support for LogicPD Torpedo
    DM3730 devkit")
    
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa75b56eb5406294a7eb6f0d57059d1cff5fd846
Author: Jan Kara <jack@suse.cz>
Date:   Thu Jun 22 15:31:07 2017 +0200

    btrfs: Don't clear SGID when inheriting ACLs
    
    commit b7f8a09f8097db776b8d160862540e4fc1f51296 upstream.
    
    When new directory 'DIR1' is created in a directory 'DIR0' with SGID bit
    set, DIR1 is expected to have SGID bit set (and owning group equal to
    the owning group of 'DIR0'). However when 'DIR0' also has some default
    ACLs that 'DIR1' inherits, setting these ACLs will result in SGID bit on
    'DIR1' to get cleared if user is not member of the owning group.
    
    Fix the problem by moving posix_acl_update_mode() out of
    __btrfs_set_acl() into btrfs_set_acl(). That way the function will not be
    called when inheriting ACLs which is what we want as it prevents SGID
    bit clearing and the mode has been properly set by posix_acl_create()
    anyway.
    
    Fixes: 073931017b49d9458aa351605b43a7e34598caef
    CC: stable@vger.kernel.org
    CC: linux-btrfs@vger.kernel.org
    CC: David Sterba <dsterba@suse.com>
    Signed-off-by: Jan Kara <jack@suse.cz>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Nikolay Borisov <nborisov@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5fed0b3532cb69b27d286b27ea4377ea44e686e5
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Wed Mar 7 08:56:23 2018 +0100

    x86/syscall: Sanitize syscall table de-references under speculation fix
    
    In 4.4.118, we have commit c8961332d6da (x86/syscall: Sanitize syscall
    table de-references under speculation), which is a backport of upstream
    commit 2fbd7af5af86. But it fixed only the C part of the upstream patch
    -- the IA32 sysentry. So it ommitted completely the assembly part -- the
    64bit sysentry.
    
    Fix that in this patch by explicit array_index_mask_nospec written in
    assembly. The same was used in lib/getuser.S.
    
    However, to have "sbb" working properly, we have to switch from "cmp"
    against (NR_syscalls-1) to (NR_syscalls), otherwise the last syscall
    number would be "and"ed by 0. It is because the original "ja" relies on
    "CF" or "ZF", but we rely only on "CF" in "sbb". That means: switch to
    "jae" conditional jump too.
    
    Final note: use rcx for mask as this is exactly what is overwritten by
    the 4th syscall argument (r10) right after.
    
    Reported-by: Jan Beulich <JBeulich@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-arch@vger.kernel.org
    Cc: kernel-hardening@lists.openwall.com
    Cc: gregkh@linuxfoundation.org
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: alan@linux.intel.com
    Cc: Jinpu Wang <jinpu.wang@profitbricks.com>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 42f587fa77924878173843e83470ab7d3b807012
Author: Wanpeng Li <wanpeng.li@hotmail.com>
Date:   Tue Feb 13 15:36:00 2018 +0100

    KVM: mmu: Fix overlap between public and private memslots
    
    commit b28676bb8ae4569cced423dc2a88f7cb319d5379 upstream.
    
    Reported by syzkaller:
    
        pte_list_remove: ffff9714eb1f8078 0->BUG
        ------------[ cut here ]------------
        kernel BUG at arch/x86/kvm/mmu.c:1157!
        invalid opcode: 0000 [#1] SMP
        RIP: 0010:pte_list_remove+0x11b/0x120 [kvm]
        Call Trace:
         drop_spte+0x83/0xb0 [kvm]
         mmu_page_zap_pte+0xcc/0xe0 [kvm]
         kvm_mmu_prepare_zap_page+0x81/0x4a0 [kvm]
         kvm_mmu_invalidate_zap_all_pages+0x159/0x220 [kvm]
         kvm_arch_flush_shadow_all+0xe/0x10 [kvm]
         kvm_mmu_notifier_release+0x6c/0xa0 [kvm]
         ? kvm_mmu_notifier_release+0x5/0xa0 [kvm]
         __mmu_notifier_release+0x79/0x110
         ? __mmu_notifier_release+0x5/0x110
         exit_mmap+0x15a/0x170
         ? do_exit+0x281/0xcb0
         mmput+0x66/0x160
         do_exit+0x2c9/0xcb0
         ? __context_tracking_exit.part.5+0x4a/0x150
         do_group_exit+0x50/0xd0
         SyS_exit_group+0x14/0x20
         do_syscall_64+0x73/0x1f0
         entry_SYSCALL64_slow_path+0x25/0x25
    
    The reason is that when creates new memslot, there is no guarantee for new
    memslot not overlap with private memslots. This can be triggered by the
    following program:
    
       #include <fcntl.h>
       #include <pthread.h>
       #include <setjmp.h>
       #include <signal.h>
       #include <stddef.h>
       #include <stdint.h>
       #include <stdio.h>
       #include <stdlib.h>
       #include <string.h>
       #include <sys/ioctl.h>
       #include <sys/stat.h>
       #include <sys/syscall.h>
       #include <sys/types.h>
       #include <unistd.h>
       #include <linux/kvm.h>
    
       long r[16];
    
       int main()
       {
            void *p = valloc(0x4000);
    
            r[2] = open("/dev/kvm", 0);
            r[3] = ioctl(r[2], KVM_CREATE_VM, 0x0ul);
    
            uint64_t addr = 0xf000;
            ioctl(r[3], KVM_SET_IDENTITY_MAP_ADDR, &addr);
            r[6] = ioctl(r[3], KVM_CREATE_VCPU, 0x0ul);
            ioctl(r[3], KVM_SET_TSS_ADDR, 0x0ul);
            ioctl(r[6], KVM_RUN, 0);
            ioctl(r[6], KVM_RUN, 0);
    
            struct kvm_userspace_memory_region mr = {
                    .slot = 0,
                    .flags = KVM_MEM_LOG_DIRTY_PAGES,
                    .guest_phys_addr = 0xf000,
                    .memory_size = 0x4000,
                    .userspace_addr = (uintptr_t) p
            };
            ioctl(r[3], KVM_SET_USER_MEMORY_REGION, &mr);
            return 0;
       }
    
    This patch fixes the bug by not adding a new memslot even if it
    overlaps with private memslots.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Eric Biggers <ebiggers3@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Wanpeng Li <wanpeng.li@hotmail.com>

commit d95280bd8c786ac5d2f379d451bcbdbdf2211e44
Author: Ulf Magnusson <ulfalizer@gmail.com>
Date:   Mon Feb 5 02:21:13 2018 +0100

    ARM: mvebu: Fix broken PL310_ERRATA_753970 selects
    
    commit 8aa36a8dcde3183d84db7b0d622ffddcebb61077 upstream.
    
    The MACH_ARMADA_375 and MACH_ARMADA_38X boards select ARM_ERRATA_753970,
    but it was renamed to PL310_ERRATA_753970 by commit fa0ce4035d48 ("ARM:
    7162/1: errata: tidy up Kconfig options for PL310 errata workarounds").
    
    Fix the selects to use the new name.
    
    Discovered with the
    https://github.com/ulfalizer/Kconfiglib/blob/master/examples/list_undefined.py
    script.
    Fixes: fa0ce4035d48 ("ARM: 7162/1: errata: tidy up Kconfig options for
    PL310 errata workarounds"
    cc: stable@vger.kernel.org
    Signed-off-by: Ulf Magnusson <ulfalizer@gmail.com>
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f78124cca73456381d92282d9c9f3234a4474a7c
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Fri Feb 16 13:20:48 2018 -0800

    nospec: Allow index argument to have const-qualified type
    
    commit b98c6a160a057d5686a8c54c79cc6c8c94a7d0c8 upstream.
    
    The last expression in a statement expression need not be a bare
    variable, quoting gcc docs
    
      The last thing in the compound statement should be an expression
      followed by a semicolon; the value of this subexpression serves as the
      value of the entire construct.
    
    and we already use that in e.g. the min/max macros which end with a
    ternary expression.
    
    This way, we can allow index to have const-qualified type, which will in
    some cases avoid the need for introducing a local copy of index of
    non-const qualified type. That, in turn, can prevent readers not
    familiar with the internals of array_index_nospec from wondering about
    the seemingly redundant extra variable, and I think that's worthwhile
    considering how confusing the whole _nospec business is.
    
    The expression _i&_mask has type unsigned long (since that is the type
    of _mask, and the BUILD_BUG_ONs guarantee that _i will get promoted to
    that), so in order not to change the type of the whole expression, add
    a cast back to typeof(_i).
    
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: linux-arch@vger.kernel.org
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/151881604837.17395.10812767547837568328.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0dfc2fb61c79dbd4e99152525e193ae054dc86d3
Author: Mauro Carvalho Chehab <mchehab@kernel.org>
Date:   Sat Feb 10 06:14:10 2018 -0500

    media: m88ds3103: don't call a non-initalized function
    
    commit b9c97c67fd19262c002d94ced2bfb513083e161e upstream.
    
    If m88d3103 chip ID is not recognized, the device is not initialized.
    
    However, it returns from probe without any error, causing this OOPS:
    
    [    7.689289] Unable to handle kernel NULL pointer dereference at virtual address 00000000
    [    7.689297] pgd = 7b0bd7a7
    [    7.689302] [00000000] *pgd=00000000
    [    7.689318] Internal error: Oops: 80000005 [#1] SMP ARM
    [    7.689322] Modules linked in: dvb_usb_dvbsky(+) m88ds3103 dvb_usb_v2 dvb_core videobuf2_vmalloc videobuf2_memops videobuf2_core crc32_arm_ce videodev media
    [    7.689358] CPU: 3 PID: 197 Comm: systemd-udevd Not tainted 4.15.0-mcc+ #23
    [    7.689361] Hardware name: BCM2835
    [    7.689367] PC is at 0x0
    [    7.689382] LR is at m88ds3103_attach+0x194/0x1d0 [m88ds3103]
    [    7.689386] pc : [<00000000>]    lr : [<bf0ae1ec>]    psr: 60000013
    [    7.689391] sp : ed8e5c20  ip : ed8c1e00  fp : ed8945c0
    [    7.689395] r10: ed894000  r9 : ed894378  r8 : eda736c0
    [    7.689400] r7 : ed894070  r6 : ed8e5c44  r5 : bf0bb040  r4 : eda77600
    [    7.689405] r3 : 00000000  r2 : 00000000  r1 : 00000000  r0 : eda77600
    [    7.689412] Flags: nZCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none
    [    7.689417] Control: 10c5383d  Table: 2d8e806a  DAC: 00000051
    [    7.689423] Process systemd-udevd (pid: 197, stack limit = 0xe9dbfb63)
    [    7.689428] Stack: (0xed8e5c20 to 0xed8e6000)
    [    7.689439] 5c20: ed853a80 eda73640 ed894000 ed8942c0 ed853a80 bf0b9e98 ed894070 bf0b9f10
    [    7.689449] 5c40: 00000000 00000000 bf08c17c c08dfc50 00000000 00000000 00000000 00000000
    [    7.689459] 5c60: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [    7.689468] 5c80: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [    7.689479] 5ca0: 00000000 00000000 ed8945c0 ed8942c0 ed894000 ed894830 bf0b9e98 00000000
    [    7.689490] 5cc0: ed894378 bf0a3cb4 bf0bc3b0 0000533b ed920540 00000000 00000034 bf0a6434
    [    7.689500] 5ce0: ee952070 ed826600 bf0a7038 bf0a2dd8 00000001 bf0a6768 bf0a2f90 ed8943c0
    [    7.689511] 5d00: 00000000 c08eca68 ed826620 ed826620 00000000 ee952070 bf0bc034 ee952000
    [    7.689521] 5d20: ed826600 bf0bb080 ffffffed c0aa9e9c c0aa9dac ed826620 c16edf6c c168c2c8
    [    7.689531] 5d40: c16edf70 00000000 bf0bc034 0000000d 00000000 c08e268c bf0bb080 ed826600
    [    7.689541] 5d60: bf0bc034 ed826654 ed826620 bf0bc034 c164c8bc 00000000 00000001 00000000
    [    7.689553] 5d80: 00000028 c08e2948 00000000 bf0bc034 c08e2848 c08e0778 ee9f0a58 ed88bab4
    [    7.689563] 5da0: bf0bc034 ed90ba80 c168c1f0 c08e1934 bf0bb3bc c17045ac bf0bc034 c164c8bc
    [    7.689574] 5dc0: bf0bc034 bf0bb3bc ed91f564 c08e34ec bf0bc000 c164c8bc bf0bc034 c0aa8dc4
    [    7.689584] 5de0: ffffe000 00000000 bf0bf000 ed91f600 ed91f564 c03021e4 00000001 00000000
    [    7.689595] 5e00: c166e040 8040003f ed853a80 bf0bc448 00000000 c1678174 ed853a80 f0f22000
    [    7.689605] 5e20: f0f21fff 8040003f 014000c0 ed91e700 ed91e700 c16d8e68 00000001 ed91e6c0
    [    7.689615] 5e40: bf0bc400 00000001 bf0bc400 ed91f564 00000001 00000000 00000028 c03c9a24
    [    7.689625] 5e60: 00000001 c03c8c94 ed8e5f50 ed8e5f50 00000001 bf0bc400 ed91f540 c03c8cb0
    [    7.689637] 5e80: bf0bc40c 00007fff bf0bc400 c03c60b0 00000000 bf0bc448 00000028 c0e09684
    [    7.689647] 5ea0: 00000002 bf0bc530 c1234bf8 bf0bc5dc bf0bc514 c10ebbe8 ffffe000 bf000000
    [    7.689657] 5ec0: 00011538 00000000 ed8e5f48 00000000 00000000 00000000 00000000 00000000
    [    7.689666] 5ee0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [    7.689676] 5f00: 00000000 00000000 7fffffff 00000000 00000013 b6e55a18 0000017b c0309104
    [    7.689686] 5f20: ed8e4000 00000000 00510af0 c03c9430 7fffffff 00000000 00000003 00000000
    [    7.689697] 5f40: 00000000 f0f0f000 00011538 00000000 f0f107b0 f0f0f000 00011538 f0f1fdb8
    [    7.689707] 5f60: f0f1fbe8 f0f1b974 00004000 000041e0 bf0bc3d0 00000001 00000000 000024c4
    [    7.689717] 5f80: 0000002d 0000002e 00000019 00000000 00000010 00000000 16894000 00000000
    [    7.689727] 5fa0: 00000000 c0308f20 16894000 00000000 00000013 b6e55a18 00000000 b6e5652c
    [    7.689737] 5fc0: 16894000 00000000 00000000 0000017b 00020000 00508110 00000000 00510af0
    [    7.689748] 5fe0: bef68948 bef68938 b6e4d3d0 b6d32590 60000010 00000013 00000000 00000000
    [    7.689790] [<bf0ae1ec>] (m88ds3103_attach [m88ds3103]) from [<bf0b9f10>] (dvbsky_s960c_attach+0x78/0x280 [dvb_usb_dvbsky])
    [    7.689821] [<bf0b9f10>] (dvbsky_s960c_attach [dvb_usb_dvbsky]) from [<bf0a3cb4>] (dvb_usbv2_probe+0xa3c/0x1024 [dvb_usb_v2])
    [    7.689849] [<bf0a3cb4>] (dvb_usbv2_probe [dvb_usb_v2]) from [<c0aa9e9c>] (usb_probe_interface+0xf0/0x2a8)
    [    7.689869] [<c0aa9e9c>] (usb_probe_interface) from [<c08e268c>] (driver_probe_device+0x2f8/0x4b4)
    [    7.689881] [<c08e268c>] (driver_probe_device) from [<c08e2948>] (__driver_attach+0x100/0x11c)
    [    7.689895] [<c08e2948>] (__driver_attach) from [<c08e0778>] (bus_for_each_dev+0x4c/0x9c)
    [    7.689909] [<c08e0778>] (bus_for_each_dev) from [<c08e1934>] (bus_add_driver+0x1c0/0x264)
    [    7.689919] [<c08e1934>] (bus_add_driver) from [<c08e34ec>] (driver_register+0x78/0xf4)
    [    7.689931] [<c08e34ec>] (driver_register) from [<c0aa8dc4>] (usb_register_driver+0x70/0x134)
    [    7.689946] [<c0aa8dc4>] (usb_register_driver) from [<c03021e4>] (do_one_initcall+0x44/0x168)
    [    7.689963] [<c03021e4>] (do_one_initcall) from [<c03c9a24>] (do_init_module+0x64/0x1f4)
    [    7.689979] [<c03c9a24>] (do_init_module) from [<c03c8cb0>] (load_module+0x20a0/0x25c8)
    [    7.689993] [<c03c8cb0>] (load_module) from [<c03c9430>] (SyS_finit_module+0xb4/0xec)
    [    7.690007] [<c03c9430>] (SyS_finit_module) from [<c0308f20>] (ret_fast_syscall+0x0/0x54)
    [    7.690018] Code: bad PC value
    
    This may happen on normal circumstances, if, for some reason, the demod
    hangs and start returning an invalid chip ID:
    
    [   10.394395] m88ds3103 3-0068: Unknown device. Chip_id=00
    
    So, change the logic to cause probe to fail with -ENODEV, preventing
    the OOPS.
    
    Detected while testing DVB MMAP patches on Raspberry Pi 3 with
    DVBSky S960CI.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit baf311edeed221183eb5ed51ebf8d7e849f35b0c
Author: Viresh Kumar <viresh.kumar@linaro.org>
Date:   Fri Feb 23 09:38:28 2018 +0530

    cpufreq: s3c24xx: Fix broken s3c_cpufreq_init()
    
    commit 0373ca74831b0f93cd4cdbf7ad3aec3c33a479a5 upstream.
    
    commit a307a1e6bc0d "cpufreq: s3c: use cpufreq_generic_init()"
    accidentally broke cpufreq on s3c2410 and s3c2412.
    
    These two platforms don't have a CPU frequency table and used to skip
    calling cpufreq_table_validate_and_show() for them.  But with the
    above commit, we started calling it unconditionally and that will
    eventually fail as the frequency table pointer is NULL.
    
    Fix this by calling cpufreq_table_validate_and_show() conditionally
    again.
    
    Fixes: a307a1e6bc0d "cpufreq: s3c: use cpufreq_generic_init()"
    Cc: 3.13+ <stable@vger.kernel.org> # v3.13+
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4fdc12f6d818b50b459be27692072e5d6447404c
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Thu Feb 22 14:20:35 2018 +0100

    ALSA: hda: Add a power_save blacklist
    
    commit 1ba8f9d308174e647b864c36209b4d7934d99888 upstream.
    
    On some boards setting power_save to a non 0 value leads to clicking /
    popping sounds when ever we enter/leave powersaving mode. Ideally we would
    figure out how to avoid these sounds, but that is not always feasible.
    
    This commit adds a blacklist for devices where powersaving is known to
    cause problems and disables it on these devices.
    
    Note I tried to put this blacklist in userspace first:
    https://github.com/systemd/systemd/pull/8128
    
    But the systemd maintainers rightfully pointed out that it would be
    impossible to then later remove entries once we actually find a way to
    make power-saving work on listed boards without issues. Having this list
    in the kernel will allow removal of the blacklist entry in the same commit
    which fixes the clicks / plops.
    
    The blacklist only applies to the default power_save module-option value,
    if a user explicitly sets the module-option then the blacklist is not
    used.
    
    [ added an ifdef CONFIG_PM for the build error -- tiwai]
    
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1525104
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=198611
    Cc: stable@vger.kernel.org
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b43e8110ca018ecb92e95ff9048df7ab71327558
Author: Erik Veijola <erik.veijola@gmail.com>
Date:   Fri Feb 23 14:06:52 2018 +0200

    ALSA: usb-audio: Add a quirck for B&W PX headphones
    
    commit 240a8af929c7c57dcde28682725b29cf8474e8e5 upstream.
    
    The capture interface doesn't work and the playback interface only
    supports 48 kHz sampling rate even though it advertises more rates.
    
    Signed-off-by: Erik Veijola <erik.veijola@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cc4d1f51dd14ad6a997237995347f269eb5551a
Author: Jeremy Boone <jeremy.boone@nccgroup.trust>
Date:   Thu Feb 8 12:31:16 2018 -0800

    tpm_i2c_nuvoton: fix potential buffer overruns caused by bit glitches on the bus
    
    commit f9d4d9b5a5ef2f017bc344fb65a58a902517173b upstream.
    
    Discrete TPMs are often connected over slow serial buses which, on
    some platforms, can have glitches causing bit flips.  In all the
    driver _recv() functions, we need to use a u32 to unmarshal the
    response size, otherwise a bit flip of the 31st bit would cause the
    expected variable to go negative, which would then try to read a huge
    amount of data.  Also sanity check that the expected amount of data is
    large enough for the TPM header.
    
    Signed-off-by: Jeremy Boone <jeremy.boone@nccgroup.trust>
    Cc: stable@vger.kernel.org
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: James Morris <james.morris@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 309de32e548ded6c4366b8f4bd83dfb150c3a357
Author: Jeremy Boone <jeremy.boone@nccgroup.trust>
Date:   Thu Feb 8 12:30:01 2018 -0800

    tpm_i2c_infineon: fix potential buffer overruns caused by bit glitches on the bus
    
    commit 9b8cb28d7c62568a5916bdd7ea1c9176d7f8f2ed upstream.
    
    Discrete TPMs are often connected over slow serial buses which, on
    some platforms, can have glitches causing bit flips.  In all the
    driver _recv() functions, we need to use a u32 to unmarshal the
    response size, otherwise a bit flip of the 31st bit would cause the
    expected variable to go negative, which would then try to read a huge
    amount of data.  Also sanity check that the expected amount of data is
    large enough for the TPM header.
    
    Signed-off-by: Jeremy Boone <jeremy.boone@nccgroup.trust>
    Cc: stable@vger.kernel.org
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: James Morris <james.morris@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9accc380bd69b180a5ef558f9b1a6b61edeba09
Author: Jeremy Boone <jeremy.boone@nccgroup.trust>
Date:   Thu Feb 8 12:29:09 2018 -0800

    tpm: st33zp24: fix potential buffer overruns caused by bit glitches on the bus
    
    commit 6d24cd186d9fead3722108dec1b1c993354645ff upstream.
    
    Discrete TPMs are often connected over slow serial buses which, on
    some platforms, can have glitches causing bit flips.  In all the
    driver _recv() functions, we need to use a u32 to unmarshal the
    response size, otherwise a bit flip of the 31st bit would cause the
    expected variable to go negative, which would then try to read a huge
    amount of data.  Also sanity check that the expected amount of data is
    large enough for the TPM header.
    
    Signed-off-by: Jeremy Boone <jeremy.boone@nccgroup.trust>
    Cc: stable@vger.kernel.org
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: James Morris <james.morris@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
