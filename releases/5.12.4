commit 4bcf3b752d59b1ef839afcc4b1c0731652ef40d6
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri May 14 10:53:07 2021 +0200

    Linux 5.12.4
    
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jason Self <jason@bluehome.net>
    Tested-by: Fox Chen <foxhlchen@gmail.com>
    Reported-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Justin M. Forbes <jforbes@fedoraproject.org>
    Link: https://lore.kernel.org/r/20210512144837.204217980@linuxfoundation.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f7a805d1bb53c61d9539e5801af564958d1974d7
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon May 3 05:11:42 2021 +0800

    sctp: delay auto_asconf init until binding the first addr
    
    commit 34e5b01186858b36c4d7c87e1a025071e8e2401f upstream.
    
    As Or Cohen described:
    
      If sctp_destroy_sock is called without sock_net(sk)->sctp.addr_wq_lock
      held and sp->do_auto_asconf is true, then an element is removed
      from the auto_asconf_splist without any proper locking.
    
      This can happen in the following functions:
      1. In sctp_accept, if sctp_sock_migrate fails.
      2. In inet_create or inet6_create, if there is a bpf program
         attached to BPF_CGROUP_INET_SOCK_CREATE which denies
         creation of the sctp socket.
    
    This patch is to fix it by moving the auto_asconf init out of
    sctp_init_sock(), by which inet_create()/inet6_create() won't
    need to operate it in sctp_destroy_sock() when calling
    sk_common_release().
    
    It also makes more sense to do auto_asconf init while binding the
    first addr, as auto_asconf actually requires an ANY addr bind,
    see it in sctp_addr_wq_timeout_handler().
    
    This addresses CVE-2021-23133.
    
    Fixes: 610236587600 ("bpf: Add new cgroup attach type to enable sock modifications")
    Reported-by: Or Cohen <orcohen@paloaltonetworks.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b31f6e8484986e0ffab2ed0b6af937e5f01b6fc
Author: Xin Long <lucien.xin@gmail.com>
Date:   Mon May 3 05:11:41 2021 +0800

    Revert "net/sctp: fix race condition in sctp_destroy_sock"
    
    commit 01bfe5e8e428b475982a98a46cca5755726f3f7f upstream.
    
    This reverts commit b166a20b07382b8bc1dcee2a448715c9c2c81b5b.
    
    This one has to be reverted as it introduced a dead lock, as
    syzbot reported:
    
           CPU0                    CPU1
           ----                    ----
      lock(&net->sctp.addr_wq_lock);
                                   lock(slock-AF_INET6);
                                   lock(&net->sctp.addr_wq_lock);
      lock(slock-AF_INET6);
    
    CPU0 is the thread of sctp_addr_wq_timeout_handler(), and CPU1
    is that of sctp_close().
    
    The original issue this commit fixed will be fixed in the next
    patch.
    
    Reported-by: syzbot+959223586843e69a2674@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2a8d740aac1b3063b24efe422e4f0756562fbf0e
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed May 5 23:12:42 2021 +0200

    smp: Fix smp_call_function_single_async prototype
    
    commit 1139aeb1c521eb4a050920ce6c64c36c4f2a3ab7 upstream.
    
    As of commit 966a967116e6 ("smp: Avoid using two cache lines for struct
    call_single_data"), the smp code prefers 32-byte aligned call_single_data
    objects for performance reasons, but the block layer includes an instance
    of this structure in the main 'struct request' that is more senstive
    to size than to performance here, see 4ccafe032005 ("block: unalign
    call_single_data in struct request").
    
    The result is a violation of the calling conventions that clang correctly
    points out:
    
    block/blk-mq.c:630:39: warning: passing 8-byte aligned argument to 32-byte aligned parameter 2 of 'smp_call_function_single_async' may result in an unaligned pointer access [-Walign-mismatch]
                    smp_call_function_single_async(cpu, &rq->csd);
    
    It does seem that the usage of the call_single_data without cache line
    alignment should still be allowed by the smp code, so just change the
    function prototype so it accepts both, but leave the default alignment
    unchanged for the other users. This seems better to me than adding
    a local hack to shut up an otherwise correct warning in the caller.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Jens Axboe <axboe@kernel.dk>
    Link: https://lkml.kernel.org/r/20210505211300.3174456-1-arnd@kernel.org
    [nc: Fix conflicts]
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7d7bedd507bb732e600403b7a96f9fe48d0ca31
Author: Jonathon Reinhart <jonathon.reinhart@gmail.com>
Date:   Sat May 1 04:28:22 2021 -0400

    net: Only allow init netns to set default tcp cong to a restricted algo
    
    commit 8d432592f30fcc34ef5a10aac4887b4897884493 upstream.
    
    tcp_set_default_congestion_control() is netns-safe in that it writes
    to &net->ipv4.tcp_congestion_control, but it also sets
    ca->flags |= TCP_CONG_NON_RESTRICTED which is not namespaced.
    This has the unintended side-effect of changing the global
    net.ipv4.tcp_allowed_congestion_control sysctl, despite the fact that it
    is read-only: 97684f0970f6 ("net: Make tcp_allowed_congestion_control
    readonly in non-init netns")
    
    Resolve this netns "leak" by only allowing the init netns to set the
    default algorithm to one that is restricted. This restriction could be
    removed if tcp_allowed_congestion_control were namespace-ified in the
    future.
    
    This bug was uncovered with
    https://github.com/JonathonReinhart/linux-netns-sysctl-verify
    
    Fixes: 6670e1524477 ("tcp: Namespace-ify sysctl_tcp_default_congestion_control")
    Signed-off-by: Jonathon Reinhart <jonathon.reinhart@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb88d8466be546fdb60139e9283397ec4ac93f3b
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Tue May 4 16:38:00 2021 -0700

    bpf: Prevent writable memory-mapping of read-only ringbuf pages
    
    commit 04ea3086c4d73da7009de1e84962a904139af219 upstream.
    
    Only the very first page of BPF ringbuf that contains consumer position
    counter is supposed to be mapped as writeable by user-space. Producer
    position is read-only and can be modified only by the kernel code. BPF ringbuf
    data pages are read-only as well and are not meant to be modified by
    user-code to maintain integrity of per-record headers.
    
    This patch allows to map only consumer position page as writeable and
    everything else is restricted to be read-only. remap_vmalloc_range()
    internally adds VM_DONTEXPAND, so all the established memory mappings can't be
    extended, which prevents any future violations through mremap()'ing.
    
    Fixes: 457f44363a88 ("bpf: Implement BPF ring buffer and verifier support for it")
    Reported-by: Ryota Shiga (Flatt Security)
    Reported-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53eb85cc663089f0eff42679f54ae915dcefc433
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Tue Apr 27 10:12:12 2021 -0300

    bpf, ringbuf: Deny reserve of buffers larger than ringbuf
    
    commit 4b81ccebaeee885ab1aa1438133f2991e3a2b6ea upstream.
    
    A BPF program might try to reserve a buffer larger than the ringbuf size.
    If the consumer pointer is way ahead of the producer, that would be
    successfully reserved, allowing the BPF program to read or write out of
    the ringbuf allocated area.
    
    Reported-by: Ryota Shiga (Flatt Security)
    Fixes: 457f44363a88 ("bpf: Implement BPF ring buffer and verifier support for it")
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Andrii Nakryiko <andrii@kernel.org>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9fdd1d10daac186e21a77290f9d22b41e175e1b9
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Mon May 10 13:10:44 2021 +0000

    bpf: Fix alu32 const subreg bound tracking on bitwise operations
    
    commit 049c4e13714ecbca567b4d5f6d563f05d431c80e upstream.
    
    Fix a bug in the verifier's scalar32_min_max_*() functions which leads to
    incorrect tracking of 32 bit bounds for the simulation of and/or/xor bitops.
    When both the src & dst subreg is a known constant, then the assumption is
    that scalar_min_max_*() will take care to update bounds correctly. However,
    this is not the case, for example, consider a register R2 which has a tnum
    of 0xffffffff00000000, meaning, lower 32 bits are known constant and in this
    case of value 0x00000001. R2 is then and'ed with a register R3 which is a
    64 bit known constant, here, 0x100000002.
    
    What can be seen in line '10:' is that 32 bit bounds reach an invalid state
    where {u,s}32_min_value > {u,s}32_max_value. The reason is scalar32_min_max_*()
    delegates 32 bit bounds updates to scalar_min_max_*(), however, that really
    only takes place when both the 64 bit src & dst register is a known constant.
    Given scalar32_min_max_*() is intended to be designed as closely as possible
    to scalar_min_max_*(), update the 32 bit bounds in this situation through
    __mark_reg32_known() which will set all {u,s}32_{min,max}_value to the correct
    constant, which is 0x00000000 after the fix (given 0x00000001 & 0x00000002 in
    32 bit space). This is possible given var32_off already holds the final value
    as dst_reg->var_off is updated before calling scalar32_min_max_*().
    
    Before fix, invalid tracking of R2:
    
      [...]
      9: R0_w=inv1337 R1=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,smin_value=-9223372036854775807 (0x8000000000000001),smax_value=9223372032559808513 (0x7fffffff00000001),umin_value=1,umax_value=0xffffffff00000001,var_off=(0x1; 0xffffffff00000000),s32_min_value=1,s32_max_value=1,u32_min_value=1,u32_max_value=1) R3_w=inv4294967298 R10=fp0
      9: (5f) r2 &= r3
      10: R0_w=inv1337 R1=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,smin_value=0,smax_value=4294967296 (0x100000000),umin_value=0,umax_value=0x100000000,var_off=(0x0; 0x100000000),s32_min_value=1,s32_max_value=0,u32_min_value=1,u32_max_value=0) R3_w=inv4294967298 R10=fp0
      [...]
    
    After fix, correct tracking of R2:
    
      [...]
      9: R0_w=inv1337 R1=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,smin_value=-9223372036854775807 (0x8000000000000001),smax_value=9223372032559808513 (0x7fffffff00000001),umin_value=1,umax_value=0xffffffff00000001,var_off=(0x1; 0xffffffff00000000),s32_min_value=1,s32_max_value=1,u32_min_value=1,u32_max_value=1) R3_w=inv4294967298 R10=fp0
      9: (5f) r2 &= r3
      10: R0_w=inv1337 R1=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,smin_value=0,smax_value=4294967296 (0x100000000),umin_value=0,umax_value=0x100000000,var_off=(0x0; 0x100000000),s32_min_value=0,s32_max_value=0,u32_min_value=0,u32_max_value=0) R3_w=inv4294967298 R10=fp0
      [...]
    
    Fixes: 3f50f132d840 ("bpf: Verifier, do explicit ALU32 bounds tracking")
    Fixes: 2921c90d4718 ("bpf: Fix a verifier failure with xor")
    Reported-by: Manfred Paul (@_manfp)
    Reported-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: John Fastabend <john.fastabend@gmail.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d22f538e9ec61c8ba55a408f2f530c63167a1e9e
Author: David Howells <dhowells@redhat.com>
Date:   Fri Apr 30 13:47:08 2021 +0100

    afs: Fix speculative status fetches
    
    [ Upstream commit 22650f148126571be1098d34160eb4931fc77241 ]
    
    The generic/464 xfstest causes kAFS to emit occasional warnings of the
    form:
    
            kAFS: vnode modified {100055:8a} 30->31 YFS.StoreData64 (c=6015)
    
    This indicates that the data version received back from the server did not
    match the expected value (the DV should be incremented monotonically for
    each individual modification op committed to a vnode).
    
    What is happening is that a lookup call is doing a bulk status fetch
    speculatively on a bunch of vnodes in a directory besides getting the
    status of the vnode it's actually interested in.  This is racing with a
    StoreData operation (though it could also occur with, say, a MakeDir op).
    
    On the client, a modification operation locks the vnode, but the bulk
    status fetch only locks the parent directory, so no ordering is imposed
    there (thereby avoiding an avenue to deadlock).
    
    On the server, the StoreData op handler doesn't lock the vnode until it's
    received all the request data, and downgrades the lock after committing the
    data until it has finished sending change notifications to other clients -
    which allows the status fetch to occur before it has finished.
    
    This means that:
    
     - a status fetch can access the target vnode either side of the exclusive
       section of the modification
    
     - the status fetch could start before the modification, yet finish after,
       and vice-versa.
    
     - the status fetch and the modification RPCs can complete in either order.
    
     - the status fetch can return either the before or the after DV from the
       modification.
    
     - the status fetch might regress the locally cached DV.
    
    Some of these are handled by the previous fix[1], but that's not sufficient
    because it checks the DV it received against the DV it cached at the start
    of the op, but the DV might've been updated in the meantime by a locally
    generated modification op.
    
    Fix this by the following means:
    
     (1) Keep track of when we're performing a modification operation on a
         vnode.  This is done by marking vnode parameters with a 'modification'
         note that causes the AFS_VNODE_MODIFYING flag to be set on the vnode
         for the duration.
    
     (2) Alter the speculation race detection to ignore speculative status
         fetches if either the vnode is marked as being modified or the data
         version number is not what we expected.
    
    Note that whilst the "vnode modified" warning does get recovered from as it
    causes the client to refetch the status at the next opportunity, it will
    also invalidate the pagecache, so changes might get lost.
    
    Fixes: a9e5c87ca744 ("afs: Fix speculative status fetch going out of order wrt to modifications")
    Reported-by: Marc Dionne <marc.dionne@auristor.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Tested-and-reviewed-by: Marc Dionne <marc.dionne@auristor.com>
    cc: linux-afs@lists.infradead.org
    Link: https://lore.kernel.org/r/160605082531.252452.14708077925602709042.stgit@warthog.procyon.org.uk/ [1]
    Link: https://lore.kernel.org/linux-fsdevel/161961335926.39335.2552653972195467566.stgit@warthog.procyon.org.uk/ # v1
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64055efc88bc75b7a991f4be525a9ca998086c45
Author: Jane Chu <jane.chu@oracle.com>
Date:   Thu Apr 29 23:02:19 2021 -0700

    mm/memory-failure: unnecessary amount of unmapping
    
    [ Upstream commit 4d75136be8bf3ae01b0bc3e725b2cdc921e103bd ]
    
    It appears that unmap_mapping_range() actually takes a 'size' as its third
    argument rather than a location, the current calling fashion causes
    unnecessary amount of unmapping to occur.
    
    Link: https://lkml.kernel.org/r/20210420002821.2749748-1-jane.chu@oracle.com
    Fixes: 6100e34b2526e ("mm, memory_failure: Teach memory_failure() about dev_pagemap pages")
    Signed-off-by: Jane Chu <jane.chu@oracle.com>
    Reviewed-by: Dan Williams <dan.j.williams@intel.com>
    Reviewed-by: Naoya Horiguchi <naoya.horiguchi@nec.com>
    Cc: Dave Jiang <dave.jiang@intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1ebd228ceabcb86623cd5b105594d98146fa834
Author: Wang Wensheng <wangwensheng4@huawei.com>
Date:   Thu Apr 29 22:57:58 2021 -0700

    mm/sparse: add the missing sparse_buffer_fini() in error branch
    
    [ Upstream commit 2284f47fe9fe2ed2ef619e5474e155cfeeebd569 ]
    
    sparse_buffer_init() and sparse_buffer_fini() should appear in pair, or a
    WARN issue would be through the next time sparse_buffer_init() runs.
    
    Add the missing sparse_buffer_fini() in error branch.
    
    Link: https://lkml.kernel.org/r/20210325113155.118574-1-wangwensheng4@huawei.com
    Fixes: 85c77f791390 ("mm/sparse: add new sparse_init_nid() and sparse_init()")
    Signed-off-by: Wang Wensheng <wangwensheng4@huawei.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Oscar Salvador <osalvador@suse.de>
    Cc: Pavel Tatashin <pasha.tatashin@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3ae6a3f3ca4f02f6ccddf213c027302586580d0
Author: Muchun Song <songmuchun@bytedance.com>
Date:   Thu Apr 29 22:56:39 2021 -0700

    mm: memcontrol: slab: fix obtain a reference to a freeing memcg
    
    [ Upstream commit 9f38f03ae8d5f57371b71aa6b4275765b65454fd ]
    
    Patch series "Use obj_cgroup APIs to charge kmem pages", v5.
    
    Since Roman's series "The new cgroup slab memory controller" applied.
    All slab objects are charged with the new APIs of obj_cgroup.  The new
    APIs introduce a struct obj_cgroup to charge slab objects.  It prevents
    long-living objects from pinning the original memory cgroup in the
    memory.  But there are still some corner objects (e.g.  allocations
    larger than order-1 page on SLUB) which are not charged with the new
    APIs.  Those objects (include the pages which are allocated from buddy
    allocator directly) are charged as kmem pages which still hold a
    reference to the memory cgroup.
    
    E.g.  We know that the kernel stack is charged as kmem pages because the
    size of the kernel stack can be greater than 2 pages (e.g.  16KB on
    x86_64 or arm64).  If we create a thread (suppose the thread stack is
    charged to memory cgroup A) and then move it from memory cgroup A to
    memory cgroup B.  Because the kernel stack of the thread hold a
    reference to the memory cgroup A.  The thread can pin the memory cgroup
    A in the memory even if we remove the cgroup A.  If we want to see this
    scenario by using the following script.  We can see that the system has
    added 500 dying cgroups (This is not a real world issue, just a script
    to show that the large kmallocs are charged as kmem pages which can pin
    the memory cgroup in the memory).
    
            #!/bin/bash
    
            cat /proc/cgroups | grep memory
    
            cd /sys/fs/cgroup/memory
            echo 1 > memory.move_charge_at_immigrate
    
            for i in range{1..500}
            do
                    mkdir kmem_test
                    echo $$ > kmem_test/cgroup.procs
                    sleep 3600 &
                    echo $$ > cgroup.procs
                    echo `cat kmem_test/cgroup.procs` > cgroup.procs
                    rmdir kmem_test
            done
    
            cat /proc/cgroups | grep memory
    
    This patchset aims to make those kmem pages to drop the reference to
    memory cgroup by using the APIs of obj_cgroup.  Finally, we can see that
    the number of the dying cgroups will not increase if we run the above test
    script.
    
    This patch (of 7):
    
    The rcu_read_lock/unlock only can guarantee that the memcg will not be
    freed, but it cannot guarantee the success of css_get (which is in the
    refill_stock when cached memcg changed) to memcg.
    
      rcu_read_lock()
      memcg = obj_cgroup_memcg(old)
      __memcg_kmem_uncharge(memcg)
          refill_stock(memcg)
              if (stock->cached != memcg)
                  // css_get can change the ref counter from 0 back to 1.
                  css_get(&memcg->css)
      rcu_read_unlock()
    
    This fix is very like the commit:
    
      eefbfa7fd678 ("mm: memcg/slab: fix use after free in obj_cgroup_charge")
    
    Fix this by holding a reference to the memcg which is passed to the
    __memcg_kmem_uncharge() before calling __memcg_kmem_uncharge().
    
    Link: https://lkml.kernel.org/r/20210319163821.20704-1-songmuchun@bytedance.com
    Link: https://lkml.kernel.org/r/20210319163821.20704-2-songmuchun@bytedance.com
    Fixes: 3de7d4f25a74 ("mm: memcg/slab: optimize objcg stock draining")
    Signed-off-by: Muchun Song <songmuchun@bytedance.com>
    Reviewed-by: Shakeel Butt <shakeelb@google.com>
    Acked-by: Roman Gushchin <guro@fb.com>
    Acked-by: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Xiongchun Duan <duanxiongchun@bytedance.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 805e3b93c93fbae781d28e12c9f82605812da98d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Apr 29 22:54:15 2021 -0700

    kfifo: fix ternary sign extension bugs
    
    [ Upstream commit 926ee00ea24320052b46745ef4b00d91c05bd03d ]
    
    The intent with this code was to return negative error codes but instead
    it returns positives.
    
    The problem is how type promotion works with ternary operations.  These
    functions return long, "ret" is an int and "copied" is a u32.  The
    negative error code is first cast to u32 so it becomes a high positive and
    then cast to long where it's still a positive.
    
    We could fix this by declaring "ret" as a ssize_t but let's just get rid
    of the ternaries instead.
    
    Link: https://lkml.kernel.org/r/YIE+/cK1tBzSuQPU@mwanda
    Fixes: 5bf2b19320ec ("kfifo: add example files to the kernel sample directory")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Stefani Seibold <stefani@seibold.net>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36550ef5418dc69ef0bea4be225aaa3af7e9cd6b
Author: Sergei Trofimovich <slyfox@gentoo.org>
Date:   Thu Apr 29 22:53:39 2021 -0700

    ia64: fix EFI_DEBUG build
    
    [ Upstream commit e3db00b79d74caaf84cd9e1d4927979abfd0d7c9 ]
    
    When enabled local debugging via `#define EFI_DEBUG 1` noticed build
    failure:
    
        arch/ia64/kernel/efi.c:564:8: error: 'i' undeclared (first use in this function)
    
    While at it fixed benign string format mismatches visible only when
    EFI_DEBUG is enabled:
    
        arch/ia64/kernel/efi.c:589:11:
            warning: format '%lx' expects argument of type 'long unsigned int',
            but argument 5 has type 'u64' {aka 'long long unsigned int'} [-Wformat=]
    
    Link: https://lkml.kernel.org/r/20210328212246.685601-1-slyfox@gentoo.org
    Fixes: 14fb42090943559 ("efi: Merge EFI system table revision and vendor checks")
    Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
    Cc: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ea1491f269701c1c237213e1ed09b4d05686a87
Author: Valentin Schneider <valentin.schneider@arm.com>
Date:   Thu Apr 29 22:53:27 2021 -0700

    ia64: ensure proper NUMA distance and possible map initialization
    
    [ Upstream commit b22a8f7b4bde4e4ab73b64908ffd5d90ecdcdbfd ]
    
    John Paul reported a warning about bogus NUMA distance values spurred by
    commit:
    
      620a6dc40754 ("sched/topology: Make sched_init_numa() use a set for the deduplicating sort")
    
    In this case, the afflicted machine comes up with a reported 256 possible
    nodes, all of which are 0 distance away from one another.  This was
    previously silently ignored, but is now caught by the aforementioned
    commit.
    
    The culprit is ia64's node_possible_map which remains unchanged from its
    initialization value of NODE_MASK_ALL.  In John's case, the machine
    doesn't have any SRAT nor SLIT table, but AIUI the possible map remains
    untouched regardless of what ACPI tables end up being parsed.  Thus,
    !online && possible nodes remain with a bogus distance of 0 (distances \in
    [0, 9] are "reserved and have no meaning" as per the ACPI spec).
    
    Follow x86 / drivers/base/arch_numa's example and set the possible map to
    the parsed map, which in this case seems to be the online map.
    
    Link: http://lore.kernel.org/r/255d6b5d-194e-eb0e-ecdd-97477a534441@physik.fu-berlin.de
    Link: https://lkml.kernel.org/r/20210318130617.896309-1-valentin.schneider@arm.com
    Fixes: 620a6dc40754 ("sched/topology: Make sched_init_numa() use a set for the deduplicating sort")
    Signed-off-by: Valentin Schneider <valentin.schneider@arm.com>
    Reported-by: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Tested-by: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
    Tested-by: Sergei Trofimovich <slyfox@gentoo.org>
    Cc: "Peter Zijlstra (Intel)" <peterz@infradead.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Vincent Guittot <vincent.guittot@linaro.org>
    Cc: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Cc: Anatoly Pugachev <matorola@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e05c2b9d691cfc1d01fc6813a0ba43418921e31
Author: Leo Yan <leo.yan@linaro.org>
Date:   Wed Apr 28 20:09:14 2021 +0800

    perf session: Add swap operation for event TIME_CONV
    
    [ Upstream commit 050ffc449008eeeafc187dec337d9cf1518f89bc ]
    
    Since commit d110162cafc8 ("perf tsc: Support cap_user_time_short for
    event TIME_CONV"), the event PERF_RECORD_TIME_CONV has extended the data
    structure for clock parameters.
    
    To be backwards-compatible, this patch adds a dedicated swap operation
    for the event PERF_RECORD_TIME_CONV, based on checking if the event
    contains field "time_cycles", it can support both for the old and new
    event formats.
    
    Fixes: d110162cafc8 ("perf tsc: Support cap_user_time_short for event TIME_CONV")
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Gustavo A. R. Silva <gustavoars@kernel.org>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steve MacLean <Steve.MacLean@Microsoft.com>
    Cc: Yonatan Goldschmidt <yonatan.goldschmidt@granulate.io>
    Link: https://lore.kernel.org/r/20210428120915.7123-4-leo.yan@linaro.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59bf7d961a808d33fb24e5a6f251c060d646a7bf
Author: Leo Yan <leo.yan@linaro.org>
Date:   Wed Apr 28 20:09:13 2021 +0800

    perf jit: Let convert_timestamp() to be backwards-compatible
    
    [ Upstream commit aa616f5a8a2d22a179d5502ebd85045af66fa656 ]
    
    Commit d110162cafc80dad ("perf tsc: Support cap_user_time_short for
    event TIME_CONV") supports the extended parameters for event TIME_CONV,
    but it broke the backwards compatibility, so any perf data file with old
    event format fails to convert timestamp.
    
    This patch introduces a helper event_contains() to check if an event
    contains a specific member or not.  For the backwards-compatibility, if
    the event size confirms the extended parameters are supported in the
    event TIME_CONV, then copies these parameters.
    
    Committer notes:
    
    To make this compiler backwards compatible add this patch:
    
      -       struct perf_tsc_conversion tc = { 0 };
      +       struct perf_tsc_conversion tc = { .time_shift = 0, };
    
    Fixes: d110162cafc8 ("perf tsc: Support cap_user_time_short for event TIME_CONV")
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Gustavo A. R. Silva <gustavoars@kernel.org>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steve MacLean <Steve.MacLean@Microsoft.com>
    Cc: Yonatan Goldschmidt <yonatan.goldschmidt@granulate.io>
    Link: https://lore.kernel.org/r/20210428120915.7123-3-leo.yan@linaro.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f57f2d897ff347be783ece0d66c93c5b8d82797c
Author: Leo Yan <leo.yan@linaro.org>
Date:   Wed Apr 28 20:09:12 2021 +0800

    perf tools: Change fields type in perf_record_time_conv
    
    [ Upstream commit e1d380ea8b00db4bb14d1f513000d4b62aa9d3f0 ]
    
    C standard claims "An object declared as type _Bool is large enough to
    store the values 0 and 1", bool type size can be 1 byte or larger than
    1 byte.  Thus it's uncertian for bool type size with different
    compilers.
    
    This patch changes the bool type in structure perf_record_time_conv to
    __u8 type, and pads extra bytes for 8-byte alignment; this can give
    reliable structure size.
    
    Fixes: d110162cafc8 ("perf tsc: Support cap_user_time_short for event TIME_CONV")
    Suggested-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Gustavo A. R. Silva <gustavoars@kernel.org>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Kan Liang <kan.liang@linux.intel.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steve MacLean <Steve.MacLean@Microsoft.com>
    Cc: Yonatan Goldschmidt <yonatan.goldschmidt@granulate.io>
    Link: https://lore.kernel.org/r/20210428120915.7123-2-leo.yan@linaro.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c899dc41655e892e8d79f258f62dd45360e1a38f
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Tue Apr 27 09:22:58 2021 -0700

    net:nfc:digital: Fix a double free in digital_tg_recv_dep_req
    
    [ Upstream commit 75258586793efc521e5dd52a5bf6c7a4cf7002be ]
    
    In digital_tg_recv_dep_req, it calls nfc_tm_data_received(..,resp).
    If nfc_tm_data_received() failed, the callee will free the resp via
    kfree_skb() and return error. But in the exit branch, the resp
    will be freed again.
    
    My patch sets resp to NULL if nfc_tm_data_received() failed, to
    avoid the double free.
    
    Fixes: 1c7a4c24fbfd9 ("NFC Digital: Add target NFC-DEP support")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 709d47b034946fd7a90d30a153a4932dec69e321
Author: Tobias Waldekranz <tobias@waldekranz.com>
Date:   Mon Apr 26 18:17:34 2021 +0200

    net: dsa: mv88e6xxx: Fix 6095/6097/6185 ports in non-SERDES CMODE
    
    [ Upstream commit 6066234aa33850e9e35e7be82d92b9e9091e774b ]
    
    The .serdes_get_lane op used the magic value 0xff to indicate a valid
    SERDES lane and 0 signaled that a non-SERDES mode was set on the port.
    
    Unfortunately, "0" is also a valid lane ID, so even when these ports
    where configured to e.g. RGMII the driver would set them up as SERDES
    ports.
    
    - Replace 0xff with 0 to indicate a valid lane ID. The number is on
      the one hand just as arbitrary, but it is at least the first valid one
      and therefore less of a surprise.
    
    - Follow the other .serdes_get_lane implementations and return -ENODEV
      in the case where no SERDES is assigned to the port.
    
    Fixes: f5be107c3338 ("net: dsa: mv88e6xxx: Support serdes ports on MV88E6097/6095/6185")
    Signed-off-by: Tobias Waldekranz <tobias@waldekranz.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4903918c10b4b511a7cc4b376c7a70ca5c377ae6
Author: Linus Lüssing <linus.luessing@c0d3.blue>
Date:   Sun Apr 25 17:27:35 2021 +0200

    net: bridge: mcast: fix broken length + header check for MRDv6 Adv.
    
    [ Upstream commit 99014088156cd78867d19514a0bc771c4b86b93b ]
    
    The IPv6 Multicast Router Advertisements parsing has the following two
    issues:
    
    For one thing, ICMPv6 MRD Advertisements are smaller than ICMPv6 MLD
    messages (ICMPv6 MRD Adv.: 8 bytes vs. ICMPv6 MLDv1/2: >= 24 bytes,
    assuming MLDv2 Reports with at least one multicast address entry).
    When ipv6_mc_check_mld_msg() tries to parse an Multicast Router
    Advertisement its MLD length check will fail - and it will wrongly
    return -EINVAL, even if we have a valid MRD Advertisement. With the
    returned -EINVAL the bridge code will assume a broken packet and will
    wrongly discard it, potentially leading to multicast packet loss towards
    multicast routers.
    
    The second issue is the MRD header parsing in
    br_ip6_multicast_mrd_rcv(): It wrongly checks for an ICMPv6 header
    immediately after the IPv6 header (IPv6 next header type). However
    according to RFC4286, section 2 all MRD messages contain a Router Alert
    option (just like MLD). So instead there is an IPv6 Hop-by-Hop option
    for the Router Alert between the IPv6 and ICMPv6 header, again leading
    to the bridge wrongly discarding Multicast Router Advertisements.
    
    To fix these two issues, introduce a new return value -ENODATA to
    ipv6_mc_check_mld() to indicate a valid ICMPv6 packet with a hop-by-hop
    option which is not an MLD but potentially an MRD packet. This also
    simplifies further parsing in the bridge code, as ipv6_mc_check_mld()
    already fully checks the ICMPv6 header and hop-by-hop option.
    
    These issues were found and fixed with the help of the mrdisc tool
    (https://github.com/troglobit/mrdisc).
    
    Fixes: 4b3087c7e37f ("bridge: Snoop Multicast Router Advertisements")
    Signed-off-by: Linus Lüssing <linus.luessing@c0d3.blue>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b87fbb20483f421eed884faf02af800c311816b
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Mon Apr 26 07:06:14 2021 -0700

    RDMA/bnxt_re: Fix a double free in bnxt_qplib_alloc_res
    
    [ Upstream commit 34b39efa5ae82fc0ad0acc27653c12a56328dbbe ]
    
    In bnxt_qplib_alloc_res, it calls bnxt_qplib_alloc_dpi_tbl().  Inside
    bnxt_qplib_alloc_dpi_tbl, dpit->dbr_bar_reg_iomem is freed via
    pci_iounmap() in unmap_io error branch. After the callee returns err code,
    bnxt_qplib_alloc_res calls
    bnxt_qplib_free_res()->bnxt_qplib_free_dpi_tbl() in the fail branch. Then
    dpit->dbr_bar_reg_iomem is freed in the second time by pci_iounmap().
    
    My patch set dpit->dbr_bar_reg_iomem to NULL after it is freed by
    pci_iounmap() in the first time, to avoid the double free.
    
    Fixes: 1ac5a4047975 ("RDMA/bnxt_re: Add bnxt_re RoCE driver")
    Link: https://lore.kernel.org/r/20210426140614.6722-1-lyl2019@mail.ustc.edu.cn
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Acked-by: Devesh Sharma <devesh.sharma@broadcom.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad9ce7188432650469a6c7625bf479f5ed0b6155
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Sun Apr 25 18:16:47 2021 -0700

    RDMA/siw: Fix a use after free in siw_alloc_mr
    
    [ Upstream commit 3093ee182f01689b89e9f8797b321603e5de4f63 ]
    
    Our code analyzer reported a UAF.
    
    In siw_alloc_mr(), it calls siw_mr_add_mem(mr,..). In the implementation of
    siw_mr_add_mem(), mem is assigned to mr->mem and then mem is freed via
    kfree(mem) if xa_alloc_cyclic() failed. Here, mr->mem still point to a
    freed object. After, the execution continue up to the err_out branch of
    siw_alloc_mr, and the freed mr->mem is used in siw_mr_drop_mem(mr).
    
    My patch moves "mr->mem = mem" behind the if (xa_alloc_cyclic(..)<0) {}
    section, to avoid the uaf.
    
    Fixes: 2251334dcac9 ("rdma/siw: application buffer management")
    Link: https://lore.kernel.org/r/20210426011647.3561-1-lyl2019@mail.ustc.edu.cn
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Reviewed-by: Bernard Metzler <bmt@zurich.ihm.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b64a9914918d4f2112fd244fe7bb6f98b20e8f60
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Fri Apr 23 13:59:55 2021 +0000

    bpf: Fix propagation of 32 bit unsigned bounds from 64 bit bounds
    
    [ Upstream commit 10bf4e83167cc68595b85fd73bb91e8f2c086e36 ]
    
    Similarly as b02709587ea3 ("bpf: Fix propagation of 32-bit signed bounds
    from 64-bit bounds."), we also need to fix the propagation of 32 bit
    unsigned bounds from 64 bit counterparts. That is, really only set the
    u32_{min,max}_value when /both/ {umin,umax}_value safely fit in 32 bit
    space. For example, the register with a umin_value == 1 does /not/ imply
    that u32_min_value is also equal to 1, since umax_value could be much
    larger than 32 bit subregister can hold, and thus u32_min_value is in
    the interval [0,1] instead.
    
    Before fix, invalid tracking result of R2_w=inv1:
    
      [...]
      5: R0_w=inv1337 R1=ctx(id=0,off=0,imm=0) R2_w=inv(id=0) R10=fp0
      5: (35) if r2 >= 0x1 goto pc+1
      [...] // goto path
      7: R0=inv1337 R1=ctx(id=0,off=0,imm=0) R2=inv(id=0,umin_value=1) R10=fp0
      7: (b6) if w2 <= 0x1 goto pc+1
      [...] // goto path
      9: R0=inv1337 R1=ctx(id=0,off=0,imm=0) R2=inv(id=0,smin_value=-9223372036854775807,smax_value=9223372032559808513,umin_value=1,umax_value=18446744069414584321,var_off=(0x1; 0xffffffff00000000),s32_min_value=1,s32_max_value=1,u32_max_value=1) R10=fp0
      9: (bc) w2 = w2
      10: R0=inv1337 R1=ctx(id=0,off=0,imm=0) R2_w=inv1 R10=fp0
      [...]
    
    After fix, correct tracking result of R2_w=inv(id=0,umax_value=1,var_off=(0x0; 0x1)):
    
      [...]
      5: R0_w=inv1337 R1=ctx(id=0,off=0,imm=0) R2_w=inv(id=0) R10=fp0
      5: (35) if r2 >= 0x1 goto pc+1
      [...] // goto path
      7: R0=inv1337 R1=ctx(id=0,off=0,imm=0) R2=inv(id=0,umin_value=1) R10=fp0
      7: (b6) if w2 <= 0x1 goto pc+1
      [...] // goto path
      9: R0=inv1337 R1=ctx(id=0,off=0,imm=0) R2=inv(id=0,smax_value=9223372032559808513,umax_value=18446744069414584321,var_off=(0x0; 0xffffffff00000001),s32_min_value=0,s32_max_value=1,u32_max_value=1) R10=fp0
      9: (bc) w2 = w2
      10: R0=inv1337 R1=ctx(id=0,off=0,imm=0) R2_w=inv(id=0,umax_value=1,var_off=(0x0; 0x1)) R10=fp0
      [...]
    
    Thus, same issue as in b02709587ea3 holds for unsigned subregister tracking.
    Also, align __reg64_bound_u32() similarly to __reg64_bound_s32() as done in
    b02709587ea3 to make them uniform again.
    
    Fixes: 3f50f132d840 ("bpf: Verifier, do explicit ALU32 bounds tracking")
    Reported-by: Manfred Paul (@_manfp)
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Reviewed-by: John Fastabend <john.fastabend@gmail.com>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e738b042761ae9c08b7f9a2138917eba86461b15
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Mon Apr 26 12:29:49 2021 -0700

    selftests/bpf: Fix core_reloc test runner
    
    [ Upstream commit bede0ebf0be87e9678103486a77f39e0334c6791 ]
    
    Fix failed tests checks in core_reloc test runner, which allowed failing tests
    to pass quietly. Also add extra check to make sure that expected to fail test cases with
    invalid names are caught as test failure anyway, as this is not an expected
    failure mode. Also fix mislabeled probed vs direct bitfield test cases.
    
    Fixes: 124a892d1c41 ("selftests/bpf: Test TYPE_EXISTS and TYPE_SIZE CO-RE relocations")
    Reported-by: Lorenz Bauer <lmb@cloudflare.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Lorenz Bauer <lmb@cloudflare.com>
    Link: https://lore.kernel.org/bpf/20210426192949.416837-6-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dade94cf32233b13e3e672fc10e2a4dc0eb871b5
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Mon Apr 26 12:29:48 2021 -0700

    selftests/bpf: Fix field existence CO-RE reloc tests
    
    [ Upstream commit 5a30eb23922b52f33222c6729b6b3ff1c37a6c66 ]
    
    Negative field existence cases for have a broken assumption that FIELD_EXISTS
    CO-RE relo will fail for fields that match the name but have incompatible type
    signature. That's not how CO-RE relocations generally behave. Types and fields
    that match by name but not by expected type are treated as non-matching
    candidates and are skipped. Error later is reported if no matching candidate
    was found. That's what happens for most relocations, but existence relocations
    (FIELD_EXISTS and TYPE_EXISTS) are more permissive and they are designed to
    return 0 or 1, depending if a match is found. This allows to handle
    name-conflicting but incompatible types in BPF code easily. Combined with
    ___flavor suffixes, it's possible to handle pretty much any structural type
    changes in kernel within the compiled once BPF source code.
    
    So, long story short, negative field existence test cases are invalid in their
    assumptions, so this patch reworks them into a single consolidated positive
    case that doesn't match any of the fields.
    
    Fixes: c7566a69695c ("selftests/bpf: Add field existence CO-RE relocs tests")
    Reported-by: Lorenz Bauer <lmb@cloudflare.com>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Lorenz Bauer <lmb@cloudflare.com>
    Link: https://lore.kernel.org/bpf/20210426192949.416837-5-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4f11633d854949d14530df1590b4acb44f2efac9
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Mon Apr 26 12:29:47 2021 -0700

    selftests/bpf: Fix BPF_CORE_READ_BITFIELD() macro
    
    [ Upstream commit 0f20615d64ee2ad5e2a133a812382d0c4071589b ]
    
    Fix BPF_CORE_READ_BITFIELD() macro used for reading CO-RE-relocatable
    bitfields. Missing breaks in a switch caused 8-byte reads always. This can
    confuse libbpf because it does strict checks that memory load size corresponds
    to the original size of the field, which in this case quite often would be
    wrong.
    
    After fixing that, we run into another problem, which quite subtle, so worth
    documenting here. The issue is in Clang optimization and CO-RE relocation
    interactions. Without that asm volatile construct (also known as
    barrier_var()), Clang will re-order BYTE_OFFSET and BYTE_SIZE relocations and
    will apply BYTE_OFFSET 4 times for each switch case arm. This will result in
    the same error from libbpf about mismatch of memory load size and original
    field size. I.e., if we were reading u32, we'd still have *(u8 *), *(u16 *),
    *(u32 *), and *(u64 *) memory loads, three of which will fail. Using
    barrier_var() forces Clang to apply BYTE_OFFSET relocation first (and once) to
    calculate p, after which value of p is used without relocation in each of
    switch case arms, doing appropiately-sized memory load.
    
    Here's the list of relevant relocations and pieces of generated BPF code
    before and after this patch for test_core_reloc_bitfields_direct selftests.
    
    BEFORE
    =====
     #45: core_reloc: insn #160 --> [5] + 0:5: byte_sz --> struct core_reloc_bitfields.u32
     #46: core_reloc: insn #167 --> [5] + 0:5: byte_off --> struct core_reloc_bitfields.u32
     #47: core_reloc: insn #174 --> [5] + 0:5: byte_off --> struct core_reloc_bitfields.u32
     #48: core_reloc: insn #178 --> [5] + 0:5: byte_off --> struct core_reloc_bitfields.u32
     #49: core_reloc: insn #182 --> [5] + 0:5: byte_off --> struct core_reloc_bitfields.u32
    
         157:       18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 r2 = 0 ll
         159:       7b 12 20 01 00 00 00 00 *(u64 *)(r2 + 288) = r1
         160:       b7 02 00 00 04 00 00 00 r2 = 4
    ; BYTE_SIZE relocation here                 ^^^
         161:       66 02 07 00 03 00 00 00 if w2 s> 3 goto +7 <LBB0_63>
         162:       16 02 0d 00 01 00 00 00 if w2 == 1 goto +13 <LBB0_65>
         163:       16 02 01 00 02 00 00 00 if w2 == 2 goto +1 <LBB0_66>
         164:       05 00 12 00 00 00 00 00 goto +18 <LBB0_69>
    
    0000000000000528 <LBB0_66>:
         165:       18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 r1 = 0 ll
         167:       69 11 08 00 00 00 00 00 r1 = *(u16 *)(r1 + 8)
    ; BYTE_OFFSET relo here w/ WRONG size        ^^^^^^^^^^^^^^^^
         168:       05 00 0e 00 00 00 00 00 goto +14 <LBB0_69>
    
    0000000000000548 <LBB0_63>:
         169:       16 02 0a 00 04 00 00 00 if w2 == 4 goto +10 <LBB0_67>
         170:       16 02 01 00 08 00 00 00 if w2 == 8 goto +1 <LBB0_68>
         171:       05 00 0b 00 00 00 00 00 goto +11 <LBB0_69>
    
    0000000000000560 <LBB0_68>:
         172:       18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 r1 = 0 ll
         174:       79 11 08 00 00 00 00 00 r1 = *(u64 *)(r1 + 8)
    ; BYTE_OFFSET relo here w/ WRONG size        ^^^^^^^^^^^^^^^^
         175:       05 00 07 00 00 00 00 00 goto +7 <LBB0_69>
    
    0000000000000580 <LBB0_65>:
         176:       18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 r1 = 0 ll
         178:       71 11 08 00 00 00 00 00 r1 = *(u8 *)(r1 + 8)
    ; BYTE_OFFSET relo here w/ WRONG size        ^^^^^^^^^^^^^^^^
         179:       05 00 03 00 00 00 00 00 goto +3 <LBB0_69>
    
    00000000000005a0 <LBB0_67>:
         180:       18 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 r1 = 0 ll
         182:       61 11 08 00 00 00 00 00 r1 = *(u32 *)(r1 + 8)
    ; BYTE_OFFSET relo here w/ RIGHT size        ^^^^^^^^^^^^^^^^
    
    00000000000005b8 <LBB0_69>:
         183:       67 01 00 00 20 00 00 00 r1 <<= 32
         184:       b7 02 00 00 00 00 00 00 r2 = 0
         185:       16 02 02 00 00 00 00 00 if w2 == 0 goto +2 <LBB0_71>
         186:       c7 01 00 00 20 00 00 00 r1 s>>= 32
         187:       05 00 01 00 00 00 00 00 goto +1 <LBB0_72>
    
    00000000000005e0 <LBB0_71>:
         188:       77 01 00 00 20 00 00 00 r1 >>= 32
    
    AFTER
    =====
    
     #30: core_reloc: insn #132 --> [5] + 0:5: byte_off --> struct core_reloc_bitfields.u32
     #31: core_reloc: insn #134 --> [5] + 0:5: byte_sz --> struct core_reloc_bitfields.u32
    
         129:       18 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 r2 = 0 ll
         131:       7b 12 20 01 00 00 00 00 *(u64 *)(r2 + 288) = r1
         132:       b7 01 00 00 08 00 00 00 r1 = 8
    ; BYTE_OFFSET relo here                     ^^^
    ; no size check for non-memory dereferencing instructions
         133:       0f 12 00 00 00 00 00 00 r2 += r1
         134:       b7 03 00 00 04 00 00 00 r3 = 4
    ; BYTE_SIZE relocation here                 ^^^
         135:       66 03 05 00 03 00 00 00 if w3 s> 3 goto +5 <LBB0_63>
         136:       16 03 09 00 01 00 00 00 if w3 == 1 goto +9 <LBB0_65>
         137:       16 03 01 00 02 00 00 00 if w3 == 2 goto +1 <LBB0_66>
         138:       05 00 0a 00 00 00 00 00 goto +10 <LBB0_69>
    
    0000000000000458 <LBB0_66>:
         139:       69 21 00 00 00 00 00 00 r1 = *(u16 *)(r2 + 0)
    ; NO CO-RE relocation here                   ^^^^^^^^^^^^^^^^
         140:       05 00 08 00 00 00 00 00 goto +8 <LBB0_69>
    
    0000000000000468 <LBB0_63>:
         141:       16 03 06 00 04 00 00 00 if w3 == 4 goto +6 <LBB0_67>
         142:       16 03 01 00 08 00 00 00 if w3 == 8 goto +1 <LBB0_68>
         143:       05 00 05 00 00 00 00 00 goto +5 <LBB0_69>
    
    0000000000000480 <LBB0_68>:
         144:       79 21 00 00 00 00 00 00 r1 = *(u64 *)(r2 + 0)
    ; NO CO-RE relocation here                   ^^^^^^^^^^^^^^^^
         145:       05 00 03 00 00 00 00 00 goto +3 <LBB0_69>
    
    0000000000000490 <LBB0_65>:
         146:       71 21 00 00 00 00 00 00 r1 = *(u8 *)(r2 + 0)
    ; NO CO-RE relocation here                   ^^^^^^^^^^^^^^^^
         147:       05 00 01 00 00 00 00 00 goto +1 <LBB0_69>
    
    00000000000004a0 <LBB0_67>:
         148:       61 21 00 00 00 00 00 00 r1 = *(u32 *)(r2 + 0)
    ; NO CO-RE relocation here                   ^^^^^^^^^^^^^^^^
    
    00000000000004a8 <LBB0_69>:
         149:       67 01 00 00 20 00 00 00 r1 <<= 32
         150:       b7 02 00 00 00 00 00 00 r2 = 0
         151:       16 02 02 00 00 00 00 00 if w2 == 0 goto +2 <LBB0_71>
         152:       c7 01 00 00 20 00 00 00 r1 s>>= 32
         153:       05 00 01 00 00 00 00 00 goto +1 <LBB0_72>
    
    00000000000004d0 <LBB0_71>:
         154:       77 01 00 00 20 00 00 00 r1 >>= 323
    
    Fixes: ee26dade0e3b ("libbpf: Add support for relocatable bitfields")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Lorenz Bauer <lmb@cloudflare.com>
    Link: https://lore.kernel.org/bpf/20210426192949.416837-4-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e407495ba6788a67d1bd41714158c079e340879b
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Mon Apr 26 09:06:25 2021 -0700

    net:emac/emac-mac: Fix a use after free in emac_mac_tx_buf_send
    
    [ Upstream commit 6d72e7c767acbbdd44ebc7d89c6690b405b32b57 ]
    
    In emac_mac_tx_buf_send, it calls emac_tx_fill_tpd(..,skb,..).
    If some error happens in emac_tx_fill_tpd(), the skb will be freed via
    dev_kfree_skb(skb) in error branch of emac_tx_fill_tpd().
    But the freed skb is still used via skb->len by netdev_sent_queue(,skb->len).
    
    As i observed that emac_tx_fill_tpd() haven't modified the value of skb->len,
    thus my patch assigns skb->len to 'len' before the possible free and
    use 'len' instead of skb->len later.
    
    Fixes: b9b17debc69d2 ("net: emac: emac gigabit ethernet controller driver")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0648941f4c8bbf8b4b6c0b270889ae7aa769b921
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Mon Apr 26 17:45:51 2021 +0200

    net/sched: act_ct: fix wild memory access when clearing fragments
    
    [ Upstream commit f77bd544a6bbe69aa50d9ed09f13494cf36ff806 ]
    
    while testing re-assembly/re-fragmentation using act_ct, it's possible to
    observe a crash like the following one:
    
     KASAN: maybe wild-memory-access in range [0x0001000000000448-0x000100000000044f]
     CPU: 50 PID: 0 Comm: swapper/50 Tainted: G S                5.12.0-rc7+ #424
     Hardware name: Dell Inc. PowerEdge R730/072T6D, BIOS 2.4.3 01/17/2017
     RIP: 0010:inet_frag_rbtree_purge+0x50/0xc0
     Code: 00 fc ff df 48 89 c3 31 ed 48 89 df e8 a9 7a 38 ff 4c 89 fe 48 89 df 49 89 c6 e8 5b 3a 38 ff 48 8d 7b 40 48 89 f8 48 c1 e8 03 <42> 80 3c 20 00 75 59 48 8d bb d0 00 00 00 4c 8b 6b 40 48 89 f8 48
     RSP: 0018:ffff888c31449db8 EFLAGS: 00010203
     RAX: 0000200000000089 RBX: 000100000000040e RCX: ffffffff989eb960
     RDX: 0000000000000140 RSI: ffffffff97cfb977 RDI: 000100000000044e
     RBP: 0000000000000900 R08: 0000000000000000 R09: ffffed1186289350
     R10: 0000000000000003 R11: ffffed1186289350 R12: dffffc0000000000
     R13: 000100000000040e R14: 0000000000000000 R15: ffff888155e02160
     FS:  0000000000000000(0000) GS:ffff888c31440000(0000) knlGS:0000000000000000
     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
     CR2: 00005600cb70a5b8 CR3: 0000000a2c014005 CR4: 00000000003706e0
     DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
     DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
     Call Trace:
      <IRQ>
      inet_frag_destroy+0xa9/0x150
      call_timer_fn+0x2d/0x180
      run_timer_softirq+0x4fe/0xe70
      __do_softirq+0x197/0x5a0
      irq_exit_rcu+0x1de/0x200
      sysvec_apic_timer_interrupt+0x6b/0x80
      </IRQ>
    
    when act_ct temporarily stores an IP fragment, restoring the skb qdisc cb
    results in putting random data in FRAG_CB(), and this causes those "wild"
    memory accesses later, when the rbtree is purged. Never overwrite the skb
    cb in case tcf_ct_handle_fragments() returns -EINPROGRESS.
    
    Fixes: ae372cb1750f ("net/sched: act_ct: fix restore the qdisc_skb_cb after defrag")
    Fixes: 7baf2429a1a9 ("net/sched: cls_flower add CT_FLAGS_INVALID flag support")
    Reported-by: Shuang Li <shuali@redhat.com>
    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d76da03a8a1a9af18d77b54afed6cf0a8169975
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Apr 21 19:11:13 2021 -0700

    KVM: SVM: Disable SEV/SEV-ES if NPT is disabled
    
    [ Upstream commit fa13680f5668cff05302a2f4753c49334a83a064 ]
    
    Disable SEV and SEV-ES if NPT is disabled.  While the APM doesn't clearly
    state that NPT is mandatory, it's alluded to by:
    
      The guest page tables, managed by the guest, may mark data memory pages
      as either private or shared, thus allowing selected pages to be shared
      outside the guest.
    
    And practically speaking, shadow paging can't work since KVM can't read
    the guest's page tables.
    
    Fixes: e9df09428996 ("KVM: SVM: Add sev module_param")
    Cc: Brijesh Singh <brijesh.singh@amd.com
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210422021125.3417167-4-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7399abdad9d334052a497b7062dfff6fbf03dc03
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Apr 21 19:11:12 2021 -0700

    KVM: SVM: Free sev_asid_bitmap during init if SEV setup fails
    
    [ Upstream commit f31b88b35f90f6b7ae4abc1015494a285f459221 ]
    
    Free sev_asid_bitmap if the reclaim bitmap allocation fails, othwerise
    KVM will unnecessarily keep the bitmap when SEV is not fully enabled.
    
    Freeing the page is also necessary to avoid introducing a bug when a
    future patch eliminates svm_sev_enabled() in favor of using the global
    'sev' flag directly.  While sev_hardware_enabled() checks max_sev_asid,
    which is true even if KVM setup fails, 'sev' will be true if and only
    if KVM setup fully succeeds.
    
    Fixes: 33af3a7ef9e6 ("KVM: SVM: Reduce WBINVD/DF_FLUSH invocations")
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210422021125.3417167-3-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b74a478a66eae230c1110628a4b9840f8b3b5aa8
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Apr 21 19:11:11 2021 -0700

    KVM: SVM: Zero out the VMCB array used to track SEV ASID association
    
    [ Upstream commit 3b1902b87bf11f1c6a84368470dc13da6f3da3bd ]
    
    Zero out the array of VMCB pointers so that pre_sev_run() won't see
    garbage when querying the array to detect when an SEV ASID is being
    associated with a new VMCB.  In practice, reading random values is all
    but guaranteed to be benign as a false negative (which is extremely
    unlikely on its own) can only happen on CPU0 on the first VMRUN and would
    only cause KVM to skip the ASID flush.  For anything bad to happen, a
    previous instance of KVM would have to exit without flushing the ASID,
    _and_ KVM would have to not flush the ASID at any time while building the
    new SEV guest.
    
    Cc: Borislav Petkov <bp@suse.de>
    Reviewed-by: Tom Lendacky <thomas.lendacky@amd.com>
    Reviewed-by: Brijesh Singh <brijesh.singh@amd.com>
    Fixes: 70cd94e60c73 ("KVM: SVM: VMRUN should use associated ASID when SEV is enabled")
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210422021125.3417167-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3461924cde0035016d332c4fc4ddb15cb7812023
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Apr 21 19:38:31 2021 -0700

    KVM: VMX: Intercept FS/GS_BASE MSR accesses for 32-bit KVM
    
    [ Upstream commit dbdd096a5a74b94f6b786a47baef2085859b0dce ]
    
    Disable pass-through of the FS and GS base MSRs for 32-bit KVM.  Intel's
    SDM unequivocally states that the MSRs exist if and only if the CPU
    supports x86-64.  FS_BASE and GS_BASE are mostly a non-issue; a clever
    guest could opportunistically use the MSRs without issue.  KERNEL_GS_BASE
    is a bigger problem, as a clever guest would subtly be broken if it were
    migrated, as KVM disallows software access to the MSRs, and unlike the
    direct variants, KERNEL_GS_BASE needs to be explicitly migrated as it's
    not captured in the VMCS.
    
    Fixes: 25c5f225beda ("KVM: VMX: Enable MSR Bitmap feature")
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210422023831.3473491-1-seanjc@google.com>
    [*NOT* for stable kernels. - Paolo]
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fbc5bc651d688fbea2a59cdc91520a2f5334d0a
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Fri Apr 23 18:13:19 2021 -0400

    bnxt_en: Fix RX consumer index logic in the error path.
    
    [ Upstream commit bbd6f0a948139970f4a615dff189d9a503681a39 ]
    
    In bnxt_rx_pkt(), the RX buffers are expected to complete in order.
    If the RX consumer index indicates an out of order buffer completion,
    it means we are hitting a hardware bug and the driver will abort all
    remaining RX packets and reset the RX ring.  The RX consumer index
    that we pass to bnxt_discard_rx() is not correct.  We should be
    passing the current index (tmp_raw_cons) instead of the old index
    (raw_cons).  This bug can cause us to be at the wrong index when
    trying to abort the next RX packet.  It can crash like this:
    
     #0 [ffff9bbcdf5c39a8] machine_kexec at ffffffff9b05e007
     #1 [ffff9bbcdf5c3a00] __crash_kexec at ffffffff9b111232
     #2 [ffff9bbcdf5c3ad0] panic at ffffffff9b07d61e
     #3 [ffff9bbcdf5c3b50] oops_end at ffffffff9b030978
     #4 [ffff9bbcdf5c3b78] no_context at ffffffff9b06aaf0
     #5 [ffff9bbcdf5c3bd8] __bad_area_nosemaphore at ffffffff9b06ae2e
     #6 [ffff9bbcdf5c3c28] bad_area_nosemaphore at ffffffff9b06af24
     #7 [ffff9bbcdf5c3c38] __do_page_fault at ffffffff9b06b67e
     #8 [ffff9bbcdf5c3cb0] do_page_fault at ffffffff9b06bb12
     #9 [ffff9bbcdf5c3ce0] page_fault at ffffffff9bc015c5
        [exception RIP: bnxt_rx_pkt+237]
        RIP: ffffffffc0259cdd  RSP: ffff9bbcdf5c3d98  RFLAGS: 00010213
        RAX: 000000005dd8097f  RBX: ffff9ba4cb11b7e0  RCX: ffffa923cf6e9000
        RDX: 0000000000000fff  RSI: 0000000000000627  RDI: 0000000000001000
        RBP: ffff9bbcdf5c3e60   R8: 0000000000420003   R9: 000000000000020d
        R10: ffffa923cf6ec138  R11: ffff9bbcdf5c3e83  R12: ffff9ba4d6f928c0
        R13: ffff9ba4cac28080  R14: ffff9ba4cb11b7f0  R15: ffff9ba4d5a30000
        ORIG_RAX: ffffffffffffffff  CS: 0010  SS: 0018
    
    Fixes: a1b0e4e684e9 ("bnxt_en: Improve RX consumer index validity check.")
    Reviewed-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Reviewed-by: Andy Gospodarek <gospo@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadcom.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0af76111c2a6326e4bb56f64a6e453c6ec6dd2da
Author: Mat Martineau <mathew.j.martineau@linux.intel.com>
Date:   Fri Apr 23 09:40:33 2021 -0700

    mptcp: Retransmit DATA_FIN
    
    [ Upstream commit 6477dd39e62c3a67cfa368ddc127410b4ae424c6 ]
    
    With this change, the MPTCP-level retransmission timer is used to resend
    DATA_FIN. The retranmit timer is not stopped while waiting for a
    MPTCP-level ACK of DATA_FIN, and retransmitted DATA_FINs are sent on all
    subflows. The retry interval starts at TCP_RTO_MIN and then doubles on
    each attempt, up to TCP_RTO_MAX.
    
    Closes: https://github.com/multipath-tcp/mptcp_net-next/issues/146
    Fixes: 43b54c6ee382 ("mptcp: Use full MPTCP-level disconnect state machine")
    Acked-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc4b143319f872d10c6548f943a1ff57b0520304
Author: Danielle Ratson <danieller@nvidia.com>
Date:   Fri Apr 23 14:19:45 2021 +0200

    selftests: mlxsw: Remove a redundant if statement in tc_flower_scale test
    
    [ Upstream commit 1f1c92139e36223b89d8140f2b72f75e79baf8bd ]
    
    Currently, the error return code of the failure condition is lost after
    using an if statement, so the test doesn't fail when it should.
    
    Remove the if statement that separates the condition and the error code
    check, so the test won't always pass.
    
    Fixes: abfce9e062021 ("selftests: mlxsw: Reduce running time using offload indication")
    Reported-by: Ido Schimmel <idosch@nvidia.com>
    Signed-off-by: Danielle Ratson <danieller@nvidia.com>
    Reviewed-by: Petr Machata <petrm@nvidia.com>
    Signed-off-by: Petr Machata <petrm@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 92aa8a27b47069c069ed7cc6373903d072b84462
Author: Danielle Ratson <danieller@nvidia.com>
Date:   Fri Apr 23 14:19:44 2021 +0200

    selftests: mlxsw: Remove a redundant if statement in port_scale test
    
    [ Upstream commit b6fc2f212108b3676f54d00a2c38e3bc36753980 ]
    
    Currently, the error return code of the failure condition is lost after
    using an if statement, so the test doesn't fail when it should.
    
    Remove the if statement that separates the condition and the error code
    check, so the test won't always pass.
    
    Fixes: 5154b1b826d9b ("selftests: mlxsw: Add a scale test for physical ports")
    Reported-by: Ido Schimmel <idosch@nvidia.com>
    Signed-off-by: Danielle Ratson <danieller@nvidia.com>
    Reviewed-by: Petr Machata <petrm@nvidia.com>
    Signed-off-by: Petr Machata <petrm@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8334e4fbe50ab139399fec4902fbb00125b4763a
Author: Petr Machata <petrm@nvidia.com>
Date:   Fri Apr 23 14:19:43 2021 +0200

    selftests: net: mirror_gre_vlan_bridge_1q: Make an FDB entry static
    
    [ Upstream commit c8d0260cdd96fdccdef0509c4160e28a1012a5d7 ]
    
    The FDB roaming test installs a destination MAC address on the wrong
    interface of an FDB database and tests whether the mirroring fails, because
    packets are sent to the wrong port. The test by mistake installs the FDB
    entry as local. This worked previously, because drivers were notified of
    local FDB entries in the same way as of static entries. However that has
    been fixed in the commit 6ab4c3117aec ("net: bridge: don't notify switchdev
    for local FDB addresses"), and local entries are not notified anymore. As a
    result, the HW is not reconfigured for the FDB roam, and mirroring keeps
    working, failing the test.
    
    To fix the issue, mark the FDB entry as static.
    
    Fixes: 9c7c8a82442c ("selftests: forwarding: mirror_gre_vlan_bridge_1q: Add more tests")
    Signed-off-by: Petr Machata <petrm@nvidia.com>
    Reviewed-by: Ido Schimmel <idosch@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21815f28af8081b258552c111774ff320cf38d38
Author: Phillip Potter <phil@philpotter.co.uk>
Date:   Fri Apr 23 00:49:45 2021 +0100

    net: geneve: modify IP header check in geneve6_xmit_skb and geneve_xmit_skb
    
    [ Upstream commit d13f048dd40e8577260cd43faea8ec9b77520197 ]
    
    Modify the header size check in geneve6_xmit_skb and geneve_xmit_skb
    to use pskb_inet_may_pull rather than pskb_network_may_pull. This fixes
    two kernel selftest failures introduced by the commit introducing the
    checks:
    IPv4 over geneve6: PMTU exceptions
    IPv4 over geneve6: PMTU exceptions - nexthop objects
    
    It does this by correctly accounting for the fact that IPv4 packets may
    transit over geneve IPv6 tunnels (and vice versa), and still fixes the
    uninit-value bug fixed by the original commit.
    
    Reported-by: kernel test robot <oliver.sang@intel.com>
    Fixes: 6628ddfec758 ("net: geneve: check skb is large enough for IPv4/IPv6 header")
    Suggested-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: Phillip Potter <phil@philpotter.co.uk>
    Acked-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 485517a2beb2b41045ba3d73e885ea05fa533fdc
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Fri Apr 23 02:31:49 2021 +0900

    arm64: dts: uniphier: Change phy-mode to RGMII-ID to enable delay pins for RTL8211E
    
    [ Upstream commit dcabb06bf127b3e0d3fbc94a2b65dd56c2725851 ]
    
    UniPhier LD20 and PXs3 boards have RTL8211E ethernet phy, and the phy have
    the RX/TX delays of RGMII interface using pull-ups on the RXDLY and TXDLY
    pins.
    
    After the commit bbc4d71d6354 ("net: phy: realtek: fix rtl8211e rx/tx
    delay config"), the delays are working correctly, however, "rgmii" means
    no delay and the phy doesn't work. So need to set the phy-mode to
    "rgmii-id" to show that RX/TX delays are enabled.
    
    Fixes: c73730ee4c9a ("arm64: dts: uniphier: add AVE ethernet node")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9f794d2c67c70f392201dae83fbc44815b62f540
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Fri Apr 23 02:31:48 2021 +0900

    ARM: dts: uniphier: Change phy-mode to RGMII-ID to enable delay pins for RTL8211E
    
    [ Upstream commit 9ba585cc5b56ea14a453ba6be9bdb984ed33471a ]
    
    UniPhier PXs2 boards have RTL8211E ethernet phy, and the phy have the RX/TX
    delays of RGMII interface using pull-ups on the RXDLY and TXDLY pins.
    
    After the commit bbc4d71d6354 ("net: phy: realtek: fix rtl8211e rx/tx
    delay config"), the delays are working correctly, however, "rgmii" means
    no delay and the phy doesn't work. So need to set the phy-mode to
    "rgmii-id" to show that RX/TX delays are enabled.
    
    Fixes: e3cc931921d2 ("ARM: dts: uniphier: add AVE ethernet node")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5878246cdf61e913e647004b198f8063054f0384
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Apr 22 12:10:28 2021 +0300

    bnxt_en: fix ternary sign extension bug in bnxt_show_temp()
    
    [ Upstream commit 27537929f30d3136a71ef29db56127a33c92dad7 ]
    
    The problem is that bnxt_show_temp() returns long but "rc" is an int
    and "len" is a u32.  With ternary operations the type promotion is quite
    tricky.  The negative "rc" is first promoted to u32 and then to long so
    it ends up being a high positive value instead of a a negative as we
    intended.
    
    Fix this by removing the ternary.
    
    Fixes: d69753fa1ecb ("bnxt_en: return proper error codes in bnxt_show_temp")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69a6cf01a1f4dcaa1cb727523a0ffbba17e9e085
Author: Martin Willi <martin@strongswan.org>
Date:   Mon Apr 19 16:15:59 2021 +0200

    net, xdp: Update pkt_type if generic XDP changes unicast MAC
    
    [ Upstream commit 22b6034323fd736f260e00b9ea85c634abeb3446 ]
    
    If a generic XDP program changes the destination MAC address from/to
    multicast/broadcast, the skb->pkt_type is updated to properly handle
    the packet when passed up the stack. When changing the MAC from/to
    the NICs MAC, PACKET_HOST/OTHERHOST is not updated, though, making
    the behavior different from that of native XDP.
    
    Remember the PACKET_HOST/OTHERHOST state before calling the program
    in generic XDP, and update pkt_type accordingly if the destination
    MAC address has changed. As eth_type_trans() assumes a default
    pkt_type of PACKET_HOST, restore that before calling it.
    
    The use case for this is when a XDP program wants to push received
    packets up the stack by rewriting the MAC to the NICs MAC, for
    example by cluster nodes sharing MAC addresses.
    
    Fixes: 297249569932 ("net: fix generic XDP to handle if eth header was mangled")
    Signed-off-by: Martin Willi <martin@strongswan.org>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Link: https://lore.kernel.org/bpf/20210419141559.8611-1-martin@strongswan.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9e4fd05376a373290b3d059a2784759324922bbd
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Apr 22 15:35:11 2021 +0200

    net: enetc: fix link error again
    
    [ Upstream commit 74c97ea3b61e4ce149444f904ee8d4fc7073505b ]
    
    A link time bug that I had fixed before has come back now that
    another sub-module was added to the enetc driver:
    
    ERROR: modpost: "enetc_ierb_register_pf" [drivers/net/ethernet/freescale/enetc/fsl-enetc.ko] undefined!
    
    The problem is that the enetc Makefile is not actually used for
    the ierb module if that is the only built-in driver in there
    and everything else is a loadable module.
    
    Fix it by always entering the directory this time, regardless
    of which symbols are configured. This should reliably fix the
    problem and prevent it from coming back another time.
    
    Fixes: 112463ddbe82 ("net: dsa: felix: fix link error")
    Fixes: e7d48e5fbf30 ("net: enetc: add a mini driver for the Integrated Endpoint Register Block")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df9248ef56e654d9f421e3a05e8a77677df6d677
Author: Maxim Kochetkov <fido_max@inbox.ru>
Date:   Thu Apr 22 13:46:44 2021 +0300

    net: phy: marvell: fix m88e1111_set_downshift
    
    [ Upstream commit e7679c55a7249f1315256cfc672d53e84072e223 ]
    
    Changing downshift params without software reset has no effect,
    so call genphy_soft_reset() after change downshift params.
    
    As the datasheet says:
    Changes to these bits are disruptive to the normal operation therefore,
    any changes to these registers must be followed by software reset
    to take effect.
    
    Fixes: 5c6bc5199b5d ("net: phy: marvell: add downshift support for M88E1111")
    Signed-off-by: Maxim Kochetkov <fido_max@inbox.ru>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99ce66766bde51331a9bb3a3034abda140ee693a
Author: Maxim Kochetkov <fido_max@inbox.ru>
Date:   Thu Apr 22 13:46:43 2021 +0300

    net: phy: marvell: fix m88e1011_set_downshift
    
    [ Upstream commit 990875b299b8612aeb85cb2e2751796f1add65ff ]
    
    Changing downshift params without software reset has no effect,
    so call genphy_soft_reset() after change downshift params.
    
    As the datasheet says:
    Changes to these bits are disruptive to the normal operation therefore,
    any changes to these registers must be followed by software reset
    to take effect.
    
    Fixes: 911af5e149bb ("net: phy: marvell: fix downshift function naming")
    Signed-off-by: Maxim Kochetkov <fido_max@inbox.ru>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4305af7e959d33ea22b6439c5c4cb4a1dc2f6468
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Wed Apr 21 17:24:03 2021 +0000

    powerpc/52xx: Fix an invalid ASM expression ('addi' used instead of 'add')
    
    [ Upstream commit 8a87a507714386efc39c3ae6fa24d4f79846b522 ]
    
      AS      arch/powerpc/platforms/52xx/lite5200_sleep.o
    arch/powerpc/platforms/52xx/lite5200_sleep.S: Assembler messages:
    arch/powerpc/platforms/52xx/lite5200_sleep.S:184: Warning: invalid register expression
    
    In the following code, 'addi' is wrong, has to be 'add'
    
            /* local udelay in sram is needed */
      udelay: /* r11 - tb_ticks_per_usec, r12 - usecs, overwrites r13 */
            mullw   r12, r12, r11
            mftb    r13     /* start */
            addi    r12, r13, r12 /* end */
    
    Fixes: ee983079ce04 ("[POWERPC] MPC5200 low power mode")
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/cb4cec9131c8577803367f1699209a7e104cec2a.1619025821.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5803e86e183749d929cb63bcbae39c9e1886ead8
Author: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
Date:   Thu Mar 4 01:40:15 2021 -0500

    powerpc/perf: Fix the threshold event selection for memory events in power10
    
    [ Upstream commit 66d9b7492887d34c711bc05b36c22438acba51b4 ]
    
    Memory events (mem-loads and mem-stores) currently use the threshold
    event selection as issue to finish. Power10 supports issue to complete
    as part of thresholding which is more appropriate for mem-loads and
    mem-stores. Hence fix the event code for memory events to use issue
    to complete.
    
    Fixes: a64e697cef23 ("powerpc/perf: power10 Performance Monitoring support")
    Signed-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
    Reviewed-by: Madhavan Srinivasan <maddy@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1614840015-1535-1-git-send-email-atrajeev@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7748383030f2dbffde9b4c24d0a899a7c0c621e8
Author: Colin Ian King <colin.king@canonical.com>
Date:   Mon Apr 19 15:14:05 2021 +0100

    wlcore: Fix buffer overrun by snprintf due to incorrect buffer size
    
    [ Upstream commit a9a4c080deb33f44e08afe35f4ca4bb9ece89f4e ]
    
    The size of the buffer than can be written to is currently incorrect, it is
    always the size of the entire buffer even though the snprintf is writing
    as position pos into the buffer. Fix this by setting the buffer size to be
    the number of bytes left in the buffer, namely sizeof(buf) - pos.
    
    Addresses-Coverity: ("Out-of-bounds access")
    Fixes: 7b0e2c4f6be3 ("wlcore: fix overlapping snprintf arguments in debugfs")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210419141405.180582-1-colin.king@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99a9906582c7bb38b4761beebaabd7e89ce5dc0d
Author: Shuah Khan <skhan@linuxfoundation.org>
Date:   Tue Apr 6 17:02:28 2021 -0600

    ath10k: Fix ath10k_wmi_tlv_op_pull_peer_stats_info() unlock without lock
    
    [ Upstream commit eaaf52e4b866f265eb791897d622961293fd48c1 ]
    
    ath10k_wmi_tlv_op_pull_peer_stats_info() could try to unlock RCU lock
    winthout locking it first when peer reason doesn't match the valid
    cases for this function.
    
    Add a default case to return without unlocking.
    
    Fixes: 09078368d516 ("ath10k: hold RCU lock when calling ieee80211_find_sta_by_ifaddr()")
    Reported-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210406230228.31301-1-skhan@linuxfoundation.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5e413c0831ff4700d1739db3fa3ae9f859744676
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Mon Mar 29 05:01:54 2021 -0700

    ath10k: Fix a use after free in ath10k_htc_send_bundle
    
    [ Upstream commit 8392df5d7e0b6a7d21440da1fc259f9938f4dec3 ]
    
    In ath10k_htc_send_bundle, the bundle_skb could be freed by
    dev_kfree_skb_any(bundle_skb). But the bundle_skb is used later
    by bundle_skb->len.
    
    As skb_len = bundle_skb->len, my patch replaces bundle_skb->len to
    skb_len after the bundle_skb was freed.
    
    Fixes: c8334512f3dd1 ("ath10k: add htt TX bundle for sdio")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210329120154.8963-1-lyl2019@mail.ustc.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07eb006064c78f27bde79be8e057ff713bcee9cd
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Fri Mar 26 19:08:19 2021 +0100

    ath9k: Fix error check in ath9k_hw_read_revisions() for PCI devices
    
    [ Upstream commit 7dd9a40fd6e0d0f1fd8e1931c007e080801dfdce ]
    
    When the error check in ath9k_hw_read_revisions() was added, it checked for
    -EIO which is what ath9k_regread() in the ath9k_htc driver uses. However,
    for plain ath9k, the register read function uses ioread32(), which just
    returns -1 on error. So if such a read fails, it still gets passed through
    and ends up as a weird mac revision in the log output.
    
    Fix this by changing ath9k_regread() to return -1 on error like ioread32()
    does, and fix the error check to look for that instead of -EIO.
    
    Fixes: 2f90c7e5d094 ("ath9k: Check for errors when reading SREV register")
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Reviewed-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210326180819.142480-1-toke@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a84df7c80bdac598d6ac9268ae578da6928883e8
Author: Christophe Leroy <christophe.leroy@csgroup.eu>
Date:   Tue Apr 20 13:32:48 2021 +0000

    powerpc/64: Fix the definition of the fixmap area
    
    [ Upstream commit 9ccba66d4d2aff9a3909aa77d57ea8b7cc166f3c ]
    
    At the time being, the fixmap area is defined at the top of
    the address space or just below KASAN.
    
    This definition is not valid for PPC64.
    
    For PPC64, use the top of the I/O space.
    
    Because of circular dependencies, it is not possible to include
    asm/fixmap.h in asm/book3s/64/pgtable.h , so define a fixed size
    AREA at the top of the I/O space for fixmap and ensure during
    build that the size is big enough.
    
    Fixes: 265c3491c4bc ("powerpc: Add support for GENERIC_EARLY_IOREMAP")
    Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/0d51620eacf036d683d1a3c41328f69adb601dc0.1618925560.git.christophe.leroy@csgroup.eu
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa37a461bd6d9ee86e891ba3e4074a450e44c881
Author: Shay Drory <shayd@nvidia.com>
Date:   Sun Apr 18 16:55:54 2021 +0300

    RDMA/core: Add CM to restrack after successful attachment to a device
    
    [ Upstream commit cb5cd0ea4eb3ce338a593a5331ddb4986ae20faa ]
    
    The device attach triggers addition of CM_ID to the restrack DB.
    However, when error occurs, we releasing this device, but defer CM_ID
    release. This causes to the situation where restrack sees CM_ID that
    is not valid anymore.
    
    As a solution, add the CM_ID to the resource tracking DB only after the
    attachment is finished.
    
    Found by syzcaller:
    infiniband syz0: added syz_tun
    rdma_rxe: ignoring netdev event = 10 for syz_tun
    infiniband syz0: set down
    infiniband syz0: ib_query_port failed (-19)
    restrack: ------------[ cut here    ]------------
    infiniband syz0: BUG: RESTRACK detected leak of resources
    restrack: User CM_ID object allocated by syz-executor716 is not freed
    restrack: ------------[ cut here    ]------------
    
    Fixes: b09c4d701220 ("RDMA/restrack: Improve readability in task name management")
    Link: https://lore.kernel.org/r/ab93e56ba831eac65c322b3256796fa1589ec0bb.1618753862.git.leonro@nvidia.com
    Signed-off-by: Shay Drory <shayd@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b6ee57f610c6269298a6ead396d1bbfa8b76c58c
Author: Bob Pearson <rpearsonhpe@gmail.com>
Date:   Tue Apr 20 22:59:53 2021 -0500

    RDMA/rxe: Fix a bug in rxe_fill_ip_info()
    
    [ Upstream commit 45062f441590810772959d8e1f2b24ba57ce1bd9 ]
    
    Fix a bug in rxe_fill_ip_info() which was attempting to convert from
    RDMA_NETWORK_XXX to RXE_NETWORK_XXX. .._IPV6 should have mapped to .._IPV6
    not .._IPV4.
    
    Fixes: edebc8407b88 ("RDMA/rxe: Fix small problem in network_type patch")
    Link: https://lore.kernel.org/r/20210421035952.4892-1-rpearson@hpe.com
    Suggested-by: Frank Zago <frank.zago@hpe.com>
    Signed-off-by: Bob Pearson <rpearson@hpe.com>
    Acked-by: Zhu Yanjun <zyjzyj2000@gmail.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b13cbc536990ff609afa878b6211cd6f6265ba60
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Mon Apr 19 23:58:05 2021 +0800

    mt76: mt7921: fix possible invalid register access
    
    [ Upstream commit fe3fccde8870764ba3e60610774bd7bc9f8faeff ]
    
    Disable the interrupt and synchronze for the pending irq handlers to ensure
    the irq tasklet is not being scheduled after the suspend to avoid the
    possible invalid register access acts when the host pcie controller is
    suspended.
    
    [17932.910534] mt7921e 0000:01:00.0: pci_pm_suspend+0x0/0x22c returned 0 after 21375 usecs
    [17932.910590] pcieport 0000:00:00.0: calling pci_pm_suspend+0x0/0x22c @ 18565, parent: pci0000:00
    [17932.910602] pcieport 0000:00:00.0: pci_pm_suspend+0x0/0x22c returned 0 after 8 usecs
    [17932.910671] mtk-pcie 11230000.pcie: calling platform_pm_suspend+0x0/0x60 @ 22783, parent: soc
    [17932.910674] mtk-pcie 11230000.pcie: platform_pm_suspend+0x0/0x60 returned 0 after 0 usecs
    
    ...
    
    17933.615352] x1 : 00000000000d4200 x0 : ffffff8269ca2300
    [17933.620666] Call trace:
    [17933.623127]  mt76_mmio_rr+0x28/0xf0 [mt76]
    [17933.627234]  mt7921_rr+0x38/0x44 [mt7921e]
    [17933.631339]  mt7921_irq_tasklet+0x54/0x1d8 [mt7921e]
    [17933.636309]  tasklet_action_common+0x12c/0x16c
    [17933.640754]  tasklet_action+0x24/0x2c
    [17933.644418]  __do_softirq+0x16c/0x344
    [17933.648082]  irq_exit+0xa8/0xac
    [17933.651224]  scheduler_ipi+0xd4/0x148
    [17933.654890]  handle_IPI+0x164/0x2d4
    [17933.658379]  gic_handle_irq+0x140/0x178
    [17933.662216]  el1_irq+0xb8/0x180
    [17933.665361]  cpuidle_enter_state+0xf8/0x204
    [17933.669544]  cpuidle_enter+0x38/0x4c
    [17933.673122]  do_idle+0x1a4/0x2a8
    [17933.676352]  cpu_startup_entry+0x24/0x28
    [17933.680276]  rest_init+0xd4/0xe0
    [17933.683508]  arch_call_rest_init+0x10/0x18
    [17933.687606]  start_kernel+0x340/0x3b4
    [17933.691279] Code: aa0003f5 d503201f f953eaa8 8b344108 (b9400113)
    [17933.697373] ---[ end trace a24b8e26ffbda3c5 ]---
    [17933.767846] Kernel panic - not syncing: Fatal exception in interrupt
    
    Fixes: ffa1bf97425b ("mt76: mt7921: introduce PM support")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28d7cb12d403f7f49e0914fd39b869ce5521f726
Author: Colin Ian King <colin.king@canonical.com>
Date:   Mon Apr 19 14:20:32 2021 +0100

    mt76: mt7615: Fix a dereference of pointer sta before it is null checked
    
    [ Upstream commit 4a52d6abb193aea0f2923a2c917502bd2d718630 ]
    
    Currently the assignment of idx dereferences pointer sta before
    sta is null checked, leading to a potential null pointer dereference.
    Fix this by assigning idx when it is required after the null check on
    pointer sta.
    
    Addresses-Coverity: ("Dereference before null check")
    Fixes: a4a5a430b076 ("mt76: mt7615: fix TSF configuration")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b2847bf30c4a9008630e7e741cca5677f68c4c21
Author: Martin Schiller <ms@dev.tdt.de>
Date:   Wed Apr 21 07:50:47 2021 +0200

    net: phy: intel-xway: enable integrated led functions
    
    [ Upstream commit 357a07c26697a770d39d28b6b111f978deb4017d ]
    
    The Intel xway phys offer the possibility to deactivate the integrated
    LED function and to control the LEDs manually.
    If this was set by the bootloader, it must be ensured that the
    integrated LED function is enabled for all LEDs when loading the driver.
    
    Before commit 6e2d85ec0559 ("net: phy: Stop with excessive soft reset")
    the LEDs were enabled by a soft-reset of the PHY (using
    genphy_soft_reset). Initialize the XWAY_MDIO_LED with it's default
    value (which is applied during a soft reset) instead of adding back
    the soft reset. This brings back the default LED configuration while
    still preventing an excessive amount of soft resets.
    
    Fixes: 6e2d85ec0559 ("net: phy: Stop with excessive soft reset")
    Signed-off-by: Martin Schiller <ms@dev.tdt.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e62a88bf058eebb64acd96dc2561302b315bc15
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Wed Apr 21 13:52:46 2021 +0900

    net: renesas: ravb: Fix a stuck issue when a lot of frames are received
    
    [ Upstream commit 5718458b092bf6bf4482c5df32affba3c3259517 ]
    
    When a lot of frames were received in the short term, the driver
    caused a stuck of receiving until a new frame was received. For example,
    the following command from other device could cause this issue.
    
        $ sudo ping -f -l 1000 -c 1000 <this driver's ipaddress>
    
    The previous code always cleared the interrupt flag of RX but checks
    the interrupt flags in ravb_poll(). So, ravb_poll() could not call
    ravb_rx() in the next time until a new RX frame was received if
    ravb_rx() returned true. To fix the issue, always calls ravb_rx()
    regardless the interrupt flags condition.
    
    Fixes: c156633f1353 ("Renesas Ethernet AVB driver proper")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0b10216b579859cebaa172bd18a01abefe4bcd2
Author: Ong Boon Leong <boon.leong.ong@intel.com>
Date:   Wed Apr 21 17:11:49 2021 +0800

    net: stmmac: fix TSO and TBS feature enabling during driver open
    
    [ Upstream commit 5e6038b88a5718910dd74b949946d9d9cee9a041 ]
    
    TSO and TBS cannot co-exist and current implementation requires two
    fixes:
    
     1) stmmac_open() does not need to call stmmac_enable_tbs() because
        the MAC is reset in stmmac_init_dma_engine() anyway.
     2) Inside stmmac_hw_setup(), we should call stmmac_enable_tso() for
        TX Q that is _not_ configured for TBS.
    
    Fixes: 579a25a854d4 ("net: stmmac: Initial support for TBS")
    Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6ce99d59874f637316f71857145c13eb781d3fa
Author: Yinjun Zhang <yinjun.zhang@corigine.com>
Date:   Wed Apr 21 11:24:15 2021 +0200

    nfp: devlink: initialize the devlink port attribute "lanes"
    
    [ Upstream commit 90b669d65d99a3ee6965275269967cdee4da106e ]
    
    The number of lanes of devlink port should be correctly initialized
    when registering the port, so that the input check when running
    "devlink port split <port> count <N>" can pass.
    
    Fixes: a21cf0a8330b ("devlink: Add a new devlink port lanes attribute and pass to netlink")
    Signed-off-by: Yinjun Zhang <yinjun.zhang@corigine.com>
    Signed-off-by: Louis Peens <louis.peens@corigine.com>
    Signed-off-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d3cd0346916e0453582908cb306b2409628122c
Author: Tobias Waldekranz <tobias@waldekranz.com>
Date:   Wed Apr 21 14:04:53 2021 +0200

    net: dsa: mv88e6xxx: Fix off-by-one in VTU devlink region size
    
    [ Upstream commit 281140a0a2ce4febf2c0ce5d29d0e7d961a826b1 ]
    
    In the unlikely event of the VTU being loaded to the brim with 4k
    entries, the last one was placed in the buffer, but the size reported
    to devlink was off-by-one. Make sure that the final entry is available
    to the caller.
    
    Fixes: ca4d632aef03 ("net: dsa: mv88e6xxx: Export VTU as devlink region")
    Signed-off-by: Tobias Waldekranz <tobias@waldekranz.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d161c03bd241ccddb67f2a749d1b15689e181ae2
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Apr 6 15:49:46 2021 -0700

    crypto: ccp: Detect and reject "invalid" addresses destined for PSP
    
    [ Upstream commit 74c1f1366eb7714b8b211554f6c5cee315ff3fbc ]
    
    Explicitly reject using pointers that are not virt_to_phys() friendly
    as the source for SEV commands that are sent to the PSP.  The PSP works
    with physical addresses, and __pa()/virt_to_phys() will not return the
    correct address in these cases, e.g. for a vmalloc'd pointer.  At best,
    the bogus address will cause the command to fail, and at worst lead to
    system instability.
    
    While it's unlikely that callers will deliberately use a bad pointer for
    SEV buffers, a caller can easily use a vmalloc'd pointer unknowingly when
    running with CONFIG_VMAP_STACK=y as it's not obvious that putting the
    command buffers on the stack would be bad.  The command buffers are
    relative  small and easily fit on the stack, and the APIs to do not
    document that the incoming pointer must be a physically contiguous,
    __pa() friendly pointer.
    
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
    Fixes: 200664d5237f ("crypto: ccp: Add Secure Encrypted Virtualization (SEV) command support")
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210406224952.4177376-3-seanjc@google.com>
    Reviewed-by: Brijesh Singh <brijesh.singh@amd.com>
    Acked-by: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bef76325feb1ad3536e20cb4d72d120ad7cd519
Author: Leonardo Bras <leobras.c@gmail.com>
Date:   Tue Apr 20 01:54:04 2021 -0300

    powerpc/pseries/iommu: Fix window size for direct mapping with pmem
    
    [ Upstream commit a9d2f9bb225fd2a764aef57738ab6c7f38d782ae ]
    
    As of today, if the DDW is big enough to fit (1 << MAX_PHYSMEM_BITS)
    it's possible to use direct DMA mapping even with pmem region.
    
    But, if that happens, the window size (len) is set to (MAX_PHYSMEM_BITS
    - page_shift) instead of MAX_PHYSMEM_BITS, causing a pagesize times
    smaller DDW to be created, being insufficient for correct usage.
    
    Fix this so the correct window size is used in this case.
    
    Fixes: bf6e2d562bbc4 ("powerpc/dma: Fallback to dma_ops when persistent memory present")
    Signed-off-by: Leonardo Bras <leobras.c@gmail.com>
    Reviewed-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210420045404.438735-1-leobras.c@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e038f93363c309a542a648c8f17d644929db3393
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Fri Apr 16 00:21:54 2021 +0200

    mt76: mt7921: run mt7921_mcu_fw_log_2_host holding mt76 mutex
    
    [ Upstream commit 987c8fb4de437344f19a23d074c06faf67520a11 ]
    
    Wake the chip before configuring the mcu log level
    
    Fixes: 1d8efc741df8 ("mt76: mt7921: introduce Runtime PM support")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d754c80ae82a662e692a82faad71b8c218cb7f52
Author: Ryder Lee <ryder.lee@mediatek.com>
Date:   Tue Apr 13 13:34:57 2021 +0800

    mt76: mt7915: fix memleak when mt7915_unregister_device()
    
    [ Upstream commit e9d32af478cfc3744a45245c0b126738af4b3ac4 ]
    
    mt7915_tx_token_put() should get call before mt76_free_pending_txwi().
    
    Fixes: f285dfb98562 ("mt76: mt7915: reset token when mac_reset happens")
    Signed-off-by: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c5b2b0c6e5a6ce2d8f9f85b8b72bfad60eaa506
Author: Ryder Lee <ryder.lee@mediatek.com>
Date:   Tue Apr 13 13:34:56 2021 +0800

    mt76: mt7615: fix memleak when mt7615_unregister_device()
    
    [ Upstream commit 8ab31da7b89f71c4c2defcca989fab7b42f87d71 ]
    
    mt7615_tx_token_put() should get call before mt76_free_pending_txwi().
    
    Fixes: a6275e934605 ("mt76: mt7615: reset token when mac_reset happens")
    Signed-off-by: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd86a80bb97f920ec75e48a601376452048c10a9
Author: Po-Hao Huang <phhuang@realtek.com>
Date:   Thu Apr 15 16:47:03 2021 +0800

    rtw88: refine napi deinit flow
    
    [ Upstream commit 7bd3760c71f7a18485d2c10ea0887e1d41519f4e ]
    
    We used to stop napi before disabling irqs. And it turns out
    to cause some problem when we try to stop device while interrupt arrives.
    
    To safely stop pci, we do three steps:
    1. disable interrupt
    2. synchronize_irq
    3. stop_napi
    Since step 2 and 3 may not finish as expected when interrupt is enabled,
    use rtwpci->running to decide whether interrupt should be re-enabled at
    the time.
    
    Fixes: 9e2fd29864c5 ("rtw88: add napi support")
    Signed-off-by: Po-Hao Huang <phhuang@realtek.com>
    Signed-off-by: Ping-Ke Shih <pkshih@realtek.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210415084703.27255-4-pkshih@realtek.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 03b59d27a72b8f60fe04db565621aba9a92b9cdc
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Apr 20 18:16:14 2021 +0100

    net: davinci_emac: Fix incorrect masking of tx and rx error channel
    
    [ Upstream commit d83b8aa5207d81f9f6daec9888390f079cc5db3f ]
    
    The bit-masks used for the TXERRCH and RXERRCH (tx and rx error channels)
    are incorrect and always lead to a zero result. The mask values are
    currently the incorrect post-right shifted values, fix this by setting
    them to the currect values.
    
    (I double checked these against the TMS320TCI6482 data sheet, section
    5.30, page 127 to ensure I had the correct mask values for the TXERRCH
    and RXERRCH fields in the MACSTATUS register).
    
    Addresses-Coverity: ("Operands don't affect result")
    Fixes: a6286ee630f6 ("net: Add TI DaVinci EMAC driver")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d1ba11fabdd8f25abb24272ef1621417981320b
Author: Vadym Kochan <vkochan@marvell.com>
Date:   Tue Apr 20 16:31:51 2021 +0300

    net: marvell: prestera: fix port event handling on init
    
    [ Upstream commit 333980481b99edb24ebd5d1a53af70a15d9146de ]
    
    For some reason there might be a crash during ports creation if port
    events are handling at the same time  because fw may send initial
    port event with down state.
    
    The crash points to cancel_delayed_work() which is called when port went
    is down.  Currently I did not find out the real cause of the issue, so
    fixed it by cancel port stats work only if previous port's state was up
    & runnig.
    
    The following is the crash which can be triggered:
    
    [   28.311104] Unable to handle kernel paging request at virtual address
    000071775f776600
    [   28.319097] Mem abort info:
    [   28.321914]   ESR = 0x96000004
    [   28.324996]   EC = 0x25: DABT (current EL), IL = 32 bits
    [   28.330350]   SET = 0, FnV = 0
    [   28.333430]   EA = 0, S1PTW = 0
    [   28.336597] Data abort info:
    [   28.339499]   ISV = 0, ISS = 0x00000004
    [   28.343362]   CM = 0, WnR = 0
    [   28.346354] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000100bf7000
    [   28.352842] [000071775f776600] pgd=0000000000000000,
    p4d=0000000000000000
    [   28.359695] Internal error: Oops: 96000004 [#1] PREEMPT SMP
    [   28.365310] Modules linked in: prestera_pci(+) prestera
    uio_pdrv_genirq
    [   28.372005] CPU: 0 PID: 1291 Comm: kworker/0:1H Not tainted
    5.11.0-rc4 #1
    [   28.378846] Hardware name: DNI AmazonGo1 A7040 board (DT)
    [   28.384283] Workqueue: prestera_fw_wq prestera_fw_evt_work_fn
    [prestera_pci]
    [   28.391413] pstate: 60000085 (nZCv daIf -PAN -UAO -TCO BTYPE=--)
    [   28.397468] pc : get_work_pool+0x48/0x60
    [   28.401442] lr : try_to_grab_pending+0x6c/0x1b0
    [   28.406018] sp : ffff80001391bc60
    [   28.409358] x29: ffff80001391bc60 x28: 0000000000000000
    [   28.414725] x27: ffff000104fc8b40 x26: ffff80001127de88
    [   28.420089] x25: 0000000000000000 x24: ffff000106119760
    [   28.425452] x23: ffff00010775dd60 x22: ffff00010567e000
    [   28.430814] x21: 0000000000000000 x20: ffff80001391bcb0
    [   28.436175] x19: ffff00010775deb8 x18: 00000000000000c0
    [   28.441537] x17: 0000000000000000 x16: 000000008d9b0e88
    [   28.446898] x15: 0000000000000001 x14: 00000000000002ba
    [   28.452261] x13: 80a3002c00000002 x12: 00000000000005f4
    [   28.457622] x11: 0000000000000030 x10: 000000000000000c
    [   28.462985] x9 : 000000000000000c x8 : 0000000000000030
    [   28.468346] x7 : ffff800014400000 x6 : ffff000106119758
    [   28.473708] x5 : 0000000000000003 x4 : ffff00010775dc60
    [   28.479068] x3 : 0000000000000000 x2 : 0000000000000060
    [   28.484429] x1 : 000071775f776600 x0 : ffff00010775deb8
    [   28.489791] Call trace:
    [   28.492259]  get_work_pool+0x48/0x60
    [   28.495874]  cancel_delayed_work+0x38/0xb0
    [   28.500011]  prestera_port_handle_event+0x90/0xa0 [prestera]
    [   28.505743]  prestera_evt_recv+0x98/0xe0 [prestera]
    [   28.510683]  prestera_fw_evt_work_fn+0x180/0x228 [prestera_pci]
    [   28.516660]  process_one_work+0x1e8/0x360
    [   28.520710]  worker_thread+0x44/0x480
    [   28.524412]  kthread+0x154/0x160
    [   28.527670]  ret_from_fork+0x10/0x38
    [   28.531290] Code: a8c17bfd d50323bf d65f03c0 9278dc21 (f9400020)
    [   28.537429] ---[ end trace 5eced933df3a080b ]---
    
    Fixes: 501ef3066c89 ("net: marvell: prestera: Add driver for Prestera family ASIC devices")
    Signed-off-by: Vadym Kochan <vkochan@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 37c38674ef2f8d7e8629e5d433c37d6c1273d16b
Author: Stefano Garzarella <sgarzare@redhat.com>
Date:   Tue Apr 20 13:07:27 2021 +0200

    vsock/virtio: free queued packets when closing socket
    
    [ Upstream commit 8432b8114957235f42e070a16118a7f750de9d39 ]
    
    As reported by syzbot [1], there is a memory leak while closing the
    socket. We partially solved this issue with commit ac03046ece2b
    ("vsock/virtio: free packets during the socket release"), but we
    forgot to drain the RX queue when the socket is definitely closed by
    the scheduled work.
    
    To avoid future issues, let's use the new virtio_transport_remove_sock()
    to drain the RX queue before removing the socket from the af_vsock lists
    calling vsock_remove_sock().
    
    [1] https://syzkaller.appspot.com/bug?extid=24452624fc4c571eedd9
    
    Fixes: ac03046ece2b ("vsock/virtio: free packets during the socket release")
    Reported-and-tested-by: syzbot+24452624fc4c571eedd9@syzkaller.appspotmail.com
    Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fde3756222f9e46b6786ae56bcf768ddfed55315
Author: Edward Cree <ecree.xilinx@gmail.com>
Date:   Tue Apr 20 13:29:35 2021 +0100

    sfc: ef10: fix TX queue lookup in TX event handling
    
    [ Upstream commit 172e269edfce34bac7c61c15551816bda4b0f140 ]
    
    We're starting from a TXQ label, not a TXQ type, so
     efx_channel_get_tx_queue() is inappropriate.  This worked by chance,
     because labels and types currently match on EF10, but we shouldn't
     rely on that.
    
    Fixes: 12804793b17c ("sfc: decouple TXQ type from label")
    Signed-off-by: Edward Cree <ecree.xilinx@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a8aaa46a6e407f129f5f72e6f29048f14f76ec4
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Apr 20 14:47:19 2021 +0100

    ALSA: usb: midi: don't return -ENOMEM when usb_urb_ep_type_check fails
    
    [ Upstream commit cfd577acb769301b19c31361d45ae1f145318b7a ]
    
    Currently when the call to usb_urb_ep_type_check fails (returning -EINVAL)
    the error return path returns -ENOMEM via the exit label "error". Other
    uses of the same error exit label set the err variable to -ENOMEM but this
    is not being used.  I believe the original intent was for the error exit
    path to return the value in err rather than the hard coded -ENOMEM, so
    return this rather than the hard coded -ENOMEM.
    
    Addresses-Coverity: ("Unused value")
    Fixes: 738d9edcfd44 ("ALSA: usb-audio: Add sanity checks for invalid EPs")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20210420134719.381409-1-colin.king@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a589a9122fce601951acb2e4427b7e13b45fbf70
Author: Sindhu Devale <sindhu.devale@intel.com>
Date:   Thu Apr 15 19:21:04 2021 -0500

    RDMA/i40iw: Fix error unwinding when i40iw_hmc_sd_one fails
    
    [ Upstream commit 783a11bf2400e5d5c42a943c3083dc0330751842 ]
    
    When i40iw_hmc_sd_one fails, chunk is freed without the deletion of chunk
    entry in the PBLE info list.
    
    Fix it by adding the chunk entry to the PBLE info list only after
    successful addition of SD in i40iw_hmc_sd_one.
    
    This fixes a static checker warning reported here:
      https://lore.kernel.org/linux-rdma/YHV4CFXzqTm23AOZ@mwanda/
    
    Fixes: 9715830157be ("i40iw: add pble resource files")
    Link: https://lore.kernel.org/r/20210416002104.323-1-shiraz.saleem@intel.com
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Sindhu Devale <sindhu.devale@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b7b075f53a9d9c38ee084c425f25987b6e228f4
Author: Potnuri Bharat Teja <bharat@chelsio.com>
Date:   Thu Apr 15 20:44:22 2021 +0530

    RDMA/cxgb4: add missing qpid increment
    
    [ Upstream commit 3a6684385928d00b29acac7658a5ae1f2a44494c ]
    
    missing qpid increment leads to skipping few qpids while allocating QP.
    This eventually leads to adapter running out of qpids after establishing
    fewer connections than it actually supports.
    Current patch increments the qpid correctly.
    
    Fixes: cfdda9d76436 ("RDMA/cxgb4: Add driver for Chelsio T4 RNIC")
    Link: https://lore.kernel.org/r/20210415151422.9139-1-bharat@chelsio.com
    Signed-off-by: Potnuri Bharat Teja <bharat@chelsio.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 673de75d1e446c511d47f6f7ba13d051d938c75c
Author: Alexander Lobakin <alobakin@pm.me>
Date:   Mon Apr 19 12:53:06 2021 +0000

    gro: fix napi_gro_frags() Fast GRO breakage due to IP alignment check
    
    [ Upstream commit 7ad18ff6449cbd6beb26b53128ddf56d2685aa93 ]
    
    Commit 38ec4944b593 ("gro: ensure frag0 meets IP header alignment")
    did the right thing, but missed the fact that napi_gro_frags() logics
    calls for skb_gro_reset_offset() *before* pulling Ethernet header
    to the skb linear space.
    That said, the introduced check for frag0 address being aligned to 4
    always fails for it as Ethernet header is obviously 14 bytes long,
    and in case with NET_IP_ALIGN its start is not aligned to 4.
    
    Fix this by adding @nhoff argument to skb_gro_reset_offset() which
    tells if an IP header is placed right at the start of frag0 or not.
    This restores Fast GRO for napi_gro_frags() that became very slow
    after the mentioned commit, and preserves the introduced check to
    avoid silent unaligned accesses.
    
    From v1 [0]:
     - inline tiny skb_gro_reset_offset() to let the code be optimized
       more efficively (esp. for the !NET_IP_ALIGN case) (Eric);
     - pull in Reviewed-by from Eric.
    
    [0] https://lore.kernel.org/netdev/20210418114200.5839-1-alobakin@pm.me
    
    Fixes: 38ec4944b593 ("gro: ensure frag0 meets IP header alignment")
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Alexander Lobakin <alobakin@pm.me>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 53a032f047693cd0316f68cbdfcfda0501b9051a
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Sun Apr 18 20:28:53 2021 +0200

    net: ethernet: ixp4xx: Set the DMA masks explicitly
    
    [ Upstream commit 8d892d60941b00c86d2029c8a99db24ab4979673 ]
    
    The former fix only papered over the actual problem: the
    ethernet core expects the netdev .dev member to have the
    proper DMA masks set, or there will be BUG_ON() triggered
    in kernel/dma/mapping.c.
    
    Fix this by simply copying dma_mask and dma_mask_coherent
    from the parent device.
    
    Fixes: e45d0fad4a5f ("net: ethernet: ixp4xx: Use parent dev for DMA pool")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b57024de437dfbadd8087ea151833f0c1855144
Author: Florent Revest <revest@chromium.org>
Date:   Mon Apr 19 17:52:41 2021 +0200

    libbpf: Initialize the bpf_seq_printf parameters array field by field
    
    [ Upstream commit 83cd92b46484aa8f64cdc0bff8ac6940d1f78519 ]
    
    When initializing the __param array with a one liner, if all args are
    const, the initial array value will be placed in the rodata section but
    because libbpf does not support relocation in the rodata section, any
    pointer in this array will stay NULL.
    
    Fixes: c09add2fbc5a ("tools/libbpf: Add bpf_iter support")
    Signed-off-by: Florent Revest <revest@chromium.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20210419155243.1632274-5-revest@chromium.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d234618d2ec6067ad3e4a54a6968e9de28ae5522
Author: Stefano Garzarella <sgarzare@redhat.com>
Date:   Fri Apr 16 12:44:16 2021 +0200

    vsock/vmci: log once the failed queue pair allocation
    
    [ Upstream commit e16edc99d658cd41c60a44cc14d170697aa3271f ]
    
    VMCI feature is not supported in conjunction with the vSphere Fault
    Tolerance (FT) feature.
    
    VMware Tools can repeatedly try to create a vsock connection. If FT is
    enabled the kernel logs is flooded with the following messages:
    
        qp_alloc_hypercall result = -20
        Could not attach to queue pair with -20
    
    "qp_alloc_hypercall result = -20" was hidden by commit e8266c4c3307
    ("VMCI: Stop log spew when qp allocation isn't possible"), but "Could
    not attach to queue pair with -20" is still there flooding the log.
    
    Since the error message can be useful in some cases, print it only once.
    
    Fixes: d021c344051a ("VSOCK: Introduce VM Sockets")
    Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
    Reviewed-by: Jorgen Hansen <jhansen@vmware.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0287ef91ea579c41a01bd9ecced9cdbb23ebfb6
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Apr 12 14:20:55 2021 +0200

    netfilter: nftables_offload: special ethertype handling for VLAN
    
    [ Upstream commit 783003f3bb8a565326e89d18bbd948ad8ffc816a ]
    
    The nftables offload parser sets FLOW_DISSECTOR_KEY_BASIC .n_proto to the
    ethertype field in the ethertype frame. However:
    
    - FLOW_DISSECTOR_KEY_BASIC .n_proto field always stores either IPv4 or IPv6
      ethertypes.
    - FLOW_DISSECTOR_KEY_VLAN .vlan_tpid stores either the 802.1q and 802.1ad
      ethertypes. Same as for FLOW_DISSECTOR_KEY_CVLAN.
    
    This function adjusts the flow dissector to handle two scenarios:
    
    1) FLOW_DISSECTOR_KEY_VLAN .vlan_tpid is set to 802.1q or 802.1ad.
       Then, transfer:
       - the .n_proto field to FLOW_DISSECTOR_KEY_VLAN .tpid.
       - the original FLOW_DISSECTOR_KEY_VLAN .tpid to the
         FLOW_DISSECTOR_KEY_CVLAN .tpid
       - the original FLOW_DISSECTOR_KEY_CVLAN .tpid to the .n_proto field.
    
    2) .n_proto is set to 802.1q or 802.1ad. Then, transfer:
       - the .n_proto field to FLOW_DISSECTOR_KEY_VLAN .tpid.
       - the original FLOW_DISSECTOR_KEY_VLAN .tpid to the .n_proto field.
    
    Fixes: a82055af5959 ("netfilter: nft_payload: add VLAN offload support")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b988433b1b3422d07f06b04759f28342c14ca494
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Apr 12 14:20:15 2021 +0200

    netfilter: nftables_offload: VLAN id needs host byteorder in flow dissector
    
    [ Upstream commit ff4d90a89d3d4d9814e0a2696509a7d495be4163 ]
    
    The flow dissector representation expects the VLAN id in host byteorder.
    Add the NFT_OFFLOAD_F_NETWORK2HOST flag to swap the bytes from nft_cmp.
    
    Fixes: a82055af5959 ("netfilter: nft_payload: add VLAN offload support")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d78fa64c87fa00c317f8809452bc69120147edba
Author: Pablo Neira Ayuso <pablo@netfilter.org>
Date:   Mon Apr 12 14:11:39 2021 +0200

    netfilter: nft_payload: fix C-VLAN offload support
    
    [ Upstream commit 14c20643ef9457679cc6934d77adc24296505214 ]
    
    - add another struct flow_dissector_key_vlan for C-VLAN
    - update layer 3 dependency to allow to match on IPv4/IPv6
    
    Fixes: 89d8fd44abfb ("netfilter: nft_payload: add C-VLAN offload support")
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8d66b4c8903c8ce04f0d541da62e0d6b275d04f
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Fri Apr 2 11:26:27 2021 -0700

    mwl8k: Fix a double Free in mwl8k_probe_hw
    
    [ Upstream commit a8e083ee8e2a6c94c29733835adae8bf5b832748 ]
    
    In mwl8k_probe_hw, hw->priv->txq is freed at the first time by
    dma_free_coherent() in the call chain:
    if(!priv->ap_fw)->mwl8k_init_txqs(hw)->mwl8k_txq_init(hw, i).
    
    Then in err_free_queues of mwl8k_probe_hw, hw->priv->txq is freed
    at the second time by mwl8k_txq_deinit(hw, i)->dma_free_coherent().
    
    My patch set txq->txd to NULL after the first free to avoid the
    double free.
    
    Fixes: a66098daacee2 ("mwl8k: Marvell TOPDOG wireless driver")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210402182627.4256-1-lyl2019@mail.ustc.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7503993cea78acabb705fe45a02f52dc74a02d78
Author: Qii Wang <qii.wang@mediatek.com>
Date:   Sat Apr 17 14:46:51 2021 +0800

    i2c: mediatek: Fix wrong dma sync flag
    
    [ Upstream commit 3186b880447ad3cc9b6487fa626a71d64b831524 ]
    
    The right flag is apdma_sync when apdma remove hand-shake signel.
    
    Fixes: 05f6f7271a38 ("i2c: mediatek: Fix apdma and i2c hand-shake timeout")
    Signed-off-by: Qii Wang <qii.wang@mediatek.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6d78450bbe69b694c4a791a7fb9e93cba0015bba
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Sat Apr 17 22:05:05 2021 +0300

    i2c: sh7760: fix IRQ error path
    
    [ Upstream commit 92dfb27240fea2776f61c5422472cb6defca7767 ]
    
    While adding the invalid IRQ check after calling platform_get_irq(),
    I managed to overlook that the driver has a complex error path in its
    probe() method, thus a simple *return* couldn't be used.  Use a proper
    *goto* instead!
    
    Fixes: e5b2e3e74201 ("i2c: sh7760: add IRQ check")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5f2fd30be85a5dd71856e09db9623385e61590f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 23 13:57:14 2021 +0100

    wlcore: fix overlapping snprintf arguments in debugfs
    
    [ Upstream commit 7b0e2c4f6be3ec68bf807c84e985e81c21404cd1 ]
    
    gcc complains about undefined behavior in calling snprintf()
    with the same buffer as input and output:
    
    drivers/net/wireless/ti/wl18xx/debugfs.c: In function 'diversity_num_of_packets_per_ant_read':
    drivers/net/wireless/ti/wl18xx/../wlcore/debugfs.h:86:3: error: 'snprintf' argument 4 overlaps destination object 'buf' [-Werror=restrict]
       86 |   snprintf(buf, sizeof(buf), "%s[%d] = %d\n",  \
          |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       87 |     buf, i, stats->sub.name[i]);   \
          |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/net/wireless/ti/wl18xx/debugfs.c:24:2: note: in expansion of macro 'DEBUGFS_FWSTATS_FILE_ARRAY'
       24 |  DEBUGFS_FWSTATS_FILE_ARRAY(a, b, c, wl18xx_acx_statistics)
          |  ^~~~~~~~~~~~~~~~~~~~~~~~~~
    drivers/net/wireless/ti/wl18xx/debugfs.c:159:1: note: in expansion of macro 'WL18XX_DEBUGFS_FWSTATS_FILE_ARRAY'
      159 | WL18XX_DEBUGFS_FWSTATS_FILE_ARRAY(diversity, num_of_packets_per_ant,
    
    There are probably other ways of handling the debugfs file, without
    using on-stack buffers, but a simple workaround here is to remember the
    current position in the buffer and just keep printing in there.
    
    Fixes: bcca1bbdd412 ("wlcore: add debugfs macro to help print fw statistics arrays")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210323125723.1961432-1-arnd@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a32b50a26745c4569d4d510045ac3a6f052fe2c3
Author: Ping-Ke Shih <pkshih@realtek.com>
Date:   Fri Feb 19 13:26:07 2021 +0800

    rtlwifi: 8821ae: upgrade PHY and RF parameters
    
    [ Upstream commit 18fb0bedb5fc2fddc057dbe48b7360a6ffda34b3 ]
    
    The signal strength of 5G is quite low, so user can't connect to an AP far
    away. New parameters with new format and its parser are updated by the commit
    84d26fda52e2 ("rtlwifi: Update 8821ae new phy parameters and its parser."), but
    some parameters are missing. Use this commit to update to the novel parameters
    that use new format.
    
    Fixes: 84d26fda52e2 ("rtlwifi: Update 8821ae new phy parameters and its parser")
    Signed-off-by: Ping-Ke Shih <pkshih@realtek.com>
    Tested-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210219052607.7323-1-pkshih@realtek.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07f85449d230eea7a3e6763ac3fb2949bb6e2e4c
Author: David Edmondson <david.edmondson@oracle.com>
Date:   Thu Mar 18 12:08:37 2021 +0000

    KVM: x86: dump_vmcs should not assume GUEST_IA32_EFER is valid
    
    [ Upstream commit d9e46d344e62a0d56fd86a8289db5bed8a57c92e ]
    
    If the VM entry/exit controls for loading/saving MSR_EFER are either
    not available (an older processor or explicitly disabled) or not
    used (host and guest values are the same), reading GUEST_IA32_EFER
    from the VMCS returns an inaccurate value.
    
    Because of this, in dump_vmcs() don't use GUEST_IA32_EFER to decide
    whether to print the PDPTRs - always do so if the fields exist.
    
    Fixes: 4eb64dce8d0a ("KVM: x86: dump VMCS on invalid entry")
    Signed-off-by: David Edmondson <david.edmondson@oracle.com>
    Message-Id: <20210318120841.133123-2-david.edmondson@oracle.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c9607314b37d10a7bc8e4a05076277b5490ad1b
Author: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
Date:   Thu Apr 15 17:39:32 2021 +0530

    powerpc/smp: Reintroduce cpu_core_mask
    
    [ Upstream commit c47f892d7aa62765bf0689073f75990b4517a4cf ]
    
    Daniel reported that with Commit 4ca234a9cbd7 ("powerpc/smp: Stop
    updating cpu_core_mask") QEMU was unable to set single NUMA node SMP
    topologies such as:
     -smp 8,maxcpus=8,cores=2,threads=2,sockets=2
     i.e he expected 2 sockets in one NUMA node.
    
    The above commit helped to reduce boot time on Large Systems for
    example 4096 vCPU single socket QEMU instance. PAPR is silent on
    having more than one socket within a NUMA node.
    
    cpu_core_mask and cpu_cpu_mask for any CPU would be same unless the
    number of sockets is different from the number of NUMA nodes.
    
    One option is to reintroduce cpu_core_mask but use a slightly
    different method to arrive at the cpu_core_mask. Previously each CPU's
    chip-id would be compared with all other CPU's chip-id to verify if
    both the CPUs were related at the chip level. Now if a CPU 'A' is
    found related / (unrelated) to another CPU 'B', all the thread
    siblings of 'A' and thread siblings of 'B' are automatically marked as
    related / (unrelated).
    
    Also if a platform doesn't support ibm,chip-id property, i.e its
    cpu_to_chip_id returns -1, cpu_core_map holds a copy of
    cpu_cpu_mask().
    
    Fixes: 4ca234a9cbd7 ("powerpc/smp: Stop updating cpu_core_mask")
    Reported-by: Daniel Henrique Barboza <danielhb413@gmail.com>
    Signed-off-by: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Tested-by: Daniel Henrique Barboza <danielhb413@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210415120934.232271-2-srikar@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f32116261e8e8694615edf3bdb8db9ee876dfe67
Author: Geliang Tang <geliangtang@gmail.com>
Date:   Fri Apr 16 15:38:02 2021 -0700

    mptcp: fix format specifiers for unsigned int
    
    [ Upstream commit e4b6135134a75f530bd634ea7c168efaf0f9dff3 ]
    
    Some of the sequence numbers are printed as the negative ones in the debug
    log:
    
    [   46.250932] MPTCP: DSS
    [   46.250940] MPTCP: data_fin=0 dsn64=0 use_map=0 ack64=1 use_ack=1
    [   46.250948] MPTCP: data_ack=2344892449471675613
    [   46.251012] MPTCP: msk=000000006e157e3f status=10
    [   46.251023] MPTCP: msk=000000006e157e3f snd_data_fin_enable=0 pending=0 snd_nxt=2344892449471700189 write_seq=2344892449471700189
    [   46.251343] MPTCP: msk=00000000ec44a129 ssk=00000000f7abd481 sending dfrag at seq=-1658937016627538668 len=100 already sent=0
    [   46.251360] MPTCP: data_seq=16787807057082012948 subflow_seq=1 data_len=100 dsn64=1
    
    This patch used the format specifier %u instead of %d for the unsigned int
    values to fix it.
    
    Fixes: d9ca1de8c0cd ("mptcp: move page frag allocation in mptcp_sendmsg()")
    Reviewed-by: Matthieu Baerts <matthieu.baerts@tessares.net>
    Signed-off-by: Geliang Tang <geliangtang@gmail.com>
    Signed-off-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5cad9e2caa9613fdcd246bd4ebf0ffbec1cba2ca
Author: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
Date:   Fri Apr 16 12:54:49 2021 +0200

    iommu/mediatek: Always enable the clk on resume
    
    [ Upstream commit b34ea31fe013569d42b7e8681ef3f717f77c5b72 ]
    
    In mtk_iommu_runtime_resume always enable the clk, even
    if m4u_dom is null. Otherwise the 'suspend' cb might
    disable the clk which is already disabled causing the warning:
    
    [    1.586104] infra_m4u already disabled
    [    1.586133] WARNING: CPU: 0 PID: 121 at drivers/clk/clk.c:952 clk_core_disable+0xb0/0xb8
    [    1.594391] mtk-iommu 10205000.iommu: bound 18001000.larb (ops mtk_smi_larb_component_ops)
    [    1.598108] Modules linked in:
    [    1.598114] CPU: 0 PID: 121 Comm: kworker/0:2 Not tainted 5.12.0-rc5 #69
    [    1.609246] mtk-iommu 10205000.iommu: bound 14027000.larb (ops mtk_smi_larb_component_ops)
    [    1.617487] Hardware name: Google Elm (DT)
    [    1.617491] Workqueue: pm pm_runtime_work
    [    1.620545] mtk-iommu 10205000.iommu: bound 19001000.larb (ops mtk_smi_larb_component_ops)
    
    [    1.627229] pstate: 60000085 (nZCv daIf -PAN -UAO -TCO BTYPE=--)
    [    1.659297] pc : clk_core_disable+0xb0/0xb8
    [    1.663475] lr : clk_core_disable+0xb0/0xb8
    [    1.667652] sp : ffff800011b9bbe0
    [    1.670959] x29: ffff800011b9bbe0 x28: 0000000000000000
    [    1.676267] x27: ffff800011448000 x26: ffff8000100cfd98
    [    1.681574] x25: ffff800011b9bd48 x24: 0000000000000000
    [    1.686882] x23: 0000000000000000 x22: ffff8000106fad90
    [    1.692189] x21: 000000000000000a x20: ffff0000c0048500
    [    1.697496] x19: ffff0000c0048500 x18: ffffffffffffffff
    [    1.702804] x17: 0000000000000000 x16: 0000000000000000
    [    1.708112] x15: ffff800011460300 x14: fffffffffffe0000
    [    1.713420] x13: ffff8000114602d8 x12: 0720072007200720
    [    1.718727] x11: 0720072007200720 x10: 0720072007200720
    [    1.724035] x9 : ffff800011b9bbe0 x8 : ffff800011b9bbe0
    [    1.729342] x7 : 0000000000000009 x6 : ffff8000114b8328
    [    1.734649] x5 : 0000000000000000 x4 : 0000000000000000
    [    1.739956] x3 : 00000000ffffffff x2 : ffff800011460298
    [    1.745263] x1 : 1af1d7de276f4500 x0 : 0000000000000000
    [    1.750572] Call trace:
    [    1.753010]  clk_core_disable+0xb0/0xb8
    [    1.756840]  clk_core_disable_lock+0x24/0x40
    [    1.761105]  clk_disable+0x20/0x30
    [    1.764501]  mtk_iommu_runtime_suspend+0x88/0xa8
    [    1.769114]  pm_generic_runtime_suspend+0x2c/0x48
    [    1.773815]  __rpm_callback+0xe0/0x178
    [    1.777559]  rpm_callback+0x24/0x88
    [    1.781041]  rpm_suspend+0xdc/0x470
    [    1.784523]  rpm_idle+0x12c/0x170
    [    1.787831]  pm_runtime_work+0xa8/0xc0
    [    1.791573]  process_one_work+0x1e8/0x360
    [    1.795580]  worker_thread+0x44/0x478
    [    1.799237]  kthread+0x150/0x158
    [    1.802460]  ret_from_fork+0x10/0x30
    [    1.806034] ---[ end trace 82402920ef64573b ]---
    [    1.810728] ------------[ cut here ]------------
    
    In addition, we now don't need to enable the clock from the
    function mtk_iommu_hw_init since it is already enabled by the resume.
    
    Fixes: c0b57581b73b ("iommu/mediatek: Add power-domain operation")
    Signed-off-by: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
    Reviewed-by: Yong Wu <yong.wu@mediatek.com>
    Link: https://lore.kernel.org/r/20210416105449.4744-1-dafna.hirschfeld@collabora.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf6fcf26f60daf8da250511ea80493460b00fe11
Author: Tyrel Datwyler <tyreld@linux.ibm.com>
Date:   Thu Feb 11 12:24:35 2021 -0600

    powerpc/pseries: extract host bridge from pci_bus prior to bus removal
    
    [ Upstream commit 38d0b1c9cec71e6d0f3bddef0bbce41d05a3e796 ]
    
    The pci_bus->bridge reference may no longer be valid after
    pci_bus_remove() resulting in passing a bad value to device_unregister()
    for the associated bridge device.
    
    Store the host_bridge reference in a separate variable prior to
    pci_bus_remove().
    
    Fixes: 7340056567e3 ("powerpc/pci: Reorder pci bus/bridge unregistration during PHB removal")
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210211182435.47968-1-tyreld@linux.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1de6095db28fd5dca5e9568e1bd77796234ad88d
Author: Ilya Lipnitskiy <ilya.lipnitskiy@gmail.com>
Date:   Tue Apr 13 20:12:37 2021 -0700

    MIPS: pci-legacy: stop using of_pci_range_to_resource
    
    [ Upstream commit 3ecb9dc1581eebecaee56decac70e35365260866 ]
    
    Mirror commit aeba3731b150 ("powerpc/pci: Fix IO space breakage after
    of_pci_range_to_resource() change").
    
    Most MIPS platforms do not define PCI_IOBASE, nor implement
    pci_address_to_pio(). Moreover, IO_SPACE_LIMIT is 0xffff for most MIPS
    platforms. of_pci_range_to_resource passes the _start address_ of the IO
    range into pci_address_to_pio, which then checks it against
    IO_SPACE_LIMIT and fails, because for MIPS platforms that use
    pci-legacy (pci-lantiq, pci-rt3883, pci-mt7620), IO ranges start much
    higher than 0xffff.
    
    In fact, pci-mt7621 in staging already works around this problem, see
    commit 09dd629eeabb ("staging: mt7621-pci: fix io space and properly set
    resource limits")
    
    So just stop using of_pci_range_to_resource, which does not work for
    MIPS.
    
    Fixes PCI errors like:
      pci_bus 0000:00: root bus resource [io  0xffffffff]
    
    Fixes: 0b0b0893d49b ("of/pci: Fix the conversion of IO ranges into IO resources")
    Signed-off-by: Ilya Lipnitskiy <ilya.lipnitskiy@gmail.com>
    Cc: Liviu Dudau <Liviu.Dudau@arm.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e44ec34641f7af667525e550aa0cb8f3bc635f23
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 14 08:59:22 2021 +0300

    drm/amd/pm: fix error code in smu_set_power_limit()
    
    [ Upstream commit bbdfe5aaef3c1d5c5e62fa235ef13f064e4c1c17 ]
    
    We should return -EINVAL instead of success if the "limit" is too high.
    
    Fixes: e098bc9612c2 ("drm/amd/pm: optimize the power related source code layout")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 04ee044a877e14cfd7bdd9d1f4342983aed28978
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 14 08:58:55 2021 +0300

    drm/amdgpu: fix an error code in init_pmu_entry_by_type_and_add()
    
    [ Upstream commit 90cb3d8aca1baea9471d28f28d5de1528dd5e424 ]
    
    If the kmemdup() fails then this should return a negative error code
    but it currently returns success
    
    Fixes: b4a7db71ea06 ("drm/amdgpu: add per device user friendly xgmi events for vega20")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f54b9be4ce507598ed3f2285010f2f9e74b5ea2
Author: Vitaly Chikunov <vt@altlinux.org>
Date:   Wed Apr 14 21:27:23 2021 +0300

    perf beauty: Fix fsconfig generator
    
    [ Upstream commit 2e1daee14e67fbf9b27280b974e2c680a22cabea ]
    
    After gnulib update sed stopped matching `[[:space:]]*+' as before,
    causing the following compilation error:
    
      In file included from builtin-trace.c:719:
      trace/beauty/generated/fsconfig_arrays.c:2:3: error: expected expression before ']' token
          2 |  [] = "",
            |   ^
      trace/beauty/generated/fsconfig_arrays.c:2:3: error: array index in initializer not of integer type
      trace/beauty/generated/fsconfig_arrays.c:2:3: note: (near initialization for 'fsconfig_cmds')
    
    Fix this by correcting the regular expression used in the generator.
    Also, clean up the script by removing redundant egrep, xargs, and printf
    invocations.
    
    Committer testing:
    
    Continues to work:
    
      $ cat tools/perf/trace/beauty/fsconfig.sh
      #!/bin/sh
      # SPDX-License-Identifier: LGPL-2.1
    
      if [ $# -ne 1 ] ; then
            linux_header_dir=tools/include/uapi/linux
      else
            linux_header_dir=$1
      fi
    
      linux_mount=${linux_header_dir}/mount.h
    
      printf "static const char *fsconfig_cmds[] = {\n"
      ms='[[:space:]]*'
      sed -nr "s/^${ms}FSCONFIG_([[:alnum:]_]+)${ms}=${ms}([[:digit:]]+)${ms},.*/\t[\2] = \"\1\",/p" \
            ${linux_mount}
      printf "};\n"
      $ tools/perf/trace/beauty/fsconfig.sh
      static const char *fsconfig_cmds[] = {
            [0] = "SET_FLAG",
            [1] = "SET_STRING",
            [2] = "SET_BINARY",
            [3] = "SET_PATH",
            [4] = "SET_PATH_EMPTY",
            [5] = "SET_FD",
            [6] = "CMD_CREATE",
            [7] = "CMD_RECONFIGURE",
      };
      $
    
    Fixes: d35293004a5e4 ("perf beauty: Add generator for fsconfig's 'cmd' arg values")
    Signed-off-by: Vitaly Chikunov <vt@altlinux.org>
    Co-authored-by: Dmitry V. Levin <ldv@altlinux.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Link: http://lore.kernel.org/lkml/20210414182723.1670663-1-vt@altlinux.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 969d259ed6708d28058c140dcf93e69411a18951
Author: Paul Menzel <pmenzel@molgen.mpg.de>
Date:   Mon Apr 12 20:01:41 2021 +0200

    iommu/amd: Put newline after closing bracket in warning
    
    [ Upstream commit 304c73ba69459d4c18c2a4b843be6f5777b4b85c ]
    
    Currently, on the Dell OptiPlex 5055 the EFR mismatch warning looks like
    below.
    
        [    1.479774] smpboot: CPU0: AMD Ryzen 5 PRO 1500 Quad-Core Processor (family: 0x17, model: 0x1, stepping: 0x1)
        […]
        [    2.507370] AMD-Vi: [Firmware Warn]: EFR mismatch. Use IVHD EFR (0xf77ef22294ada : 0x400f77ef22294ada
                       ).
    
    Add the newline after the `).`, so it’s on one line.
    
    Fixes: a44092e326d4 ("iommu/amd: Use IVHD EFR for early initialization of IOMMU features")
    Cc: iommu@lists.linux-foundation.org
    Cc: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Robert Richter <rrichter@amd.com>
    Signed-off-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Link: https://lore.kernel.org/r/20210412180141.29605-1-pmenzel@molgen.mpg.de
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6532647bf264e4f12b6e5af81f040f72ce6f7921
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sun Apr 11 09:08:17 2021 +0200

    iommu/vt-d: Fix an error handling path in 'intel_prepare_irq_remapping()'
    
    [ Upstream commit 745610c4a3e3baaebf6d1f8cd5b4d82892432520 ]
    
    If 'intel_cap_audit()' fails, we should return directly, as already done in
    the surrounding error handling path.
    
    Fixes: ad3d19029979 ("iommu/vt-d: Audit IOMMU Capabilities and add helper functions")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/98d531caabe66012b4fffc7813fd4b9470afd517.1618124777.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 038bf959af53693309c5d3c2e8db8604dd513dc0
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 14 09:01:38 2021 +0300

    drm/i915/gvt: Fix error code in intel_gvt_init_device()
    
    [ Upstream commit 329328ec6a87f2c1275f50d979d55513de458409 ]
    
    The intel_gvt_init_vgpu_type_groups() function is only called from
    intel_gvt_init_device().  If it fails then the intel_gvt_init_device()
    prints the error code and propagates it back again.  That's a bug
    because false is zero/success.  The fix is to modify it to return zero
    or negative error codes and make everything consistent.
    
    Fixes: c5d71cb31723 ("drm/i915/gvt: Move vGPU type related code into gvt file")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/YHaFQtk/DIVYK1u5@mwanda
    Reviewed-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fd6cb342547045e9dfa64467da0cea5f523dd1e
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Apr 14 12:36:44 2021 -0700

    net/packet: remove data races in fanout operations
    
    [ Upstream commit 94f633ea8ade8418634d152ad0931133338226f6 ]
    
    af_packet fanout uses RCU rules to ensure f->arr elements
    are not dismantled before RCU grace period.
    
    However, it lacks rcu accessors to make sure KCSAN and other tools
    wont detect data races. Stupid compilers could also play games.
    
    Fixes: dc99f600698d ("packet: Add fanout support.")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: "Gong, Sishuai" <sishuai@purdue.edu>
    Cc: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 841bbc0da84179657c8138ca81c64a28ec22ba92
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Apr 6 17:53:46 2021 +0100

    net/mlx5: Fix bit-wise and with zero
    
    [ Upstream commit 82c3ba31c370b6001cbf90689e98da1fb6f26aef ]
    
    The bit-wise and of the action field with MLX5_ACCEL_ESP_ACTION_DECRYPT
    is incorrect as MLX5_ACCEL_ESP_ACTION_DECRYPT is zero and not intended
    to be a bit-flag. Fix this by using the == operator as was originally
    intended.
    
    Addresses-Coverity: ("Logically dead code")
    Fixes: 7dfee4b1d79e ("net/mlx5: IPsec, Refactor SA handle creation and destruction")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2d63c969c4360422c089629130b6d7a3c6044332
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Wed Apr 14 14:33:43 2021 +0800

    ASoC: ak5558: correct reset polarity
    
    [ Upstream commit 0b93bbc977af55fd10687f2c96c807cba95cb927 ]
    
    Reset (aka power off) happens when the reset gpio is made active.
    The reset gpio is GPIO_ACTIVE_LOW
    
    Fixes: 920884777480 ("ASoC: ak5558: Add support for AK5558 ADC driver")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Link: https://lore.kernel.org/r/1618382024-31725-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 403ec295830501e0e0c20de3de313641bd691f49
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Tue Mar 16 20:41:55 2021 +1000

    powerpc/syscall: switch user_exit_irqoff and trace_hardirqs_off order
    
    [ Upstream commit 5a5a893c4ad897b8a36f846602895515b7407a71 ]
    
    user_exit_irqoff() -> __context_tracking_exit -> vtime_user_exit
    warns in __seqprop_assert due to lockdep thinking preemption is enabled
    because trace_hardirqs_off() has not yet been called.
    
    Switch the order of these two calls, which matches their ordering in
    interrupt_enter_prepare.
    
    Fixes: 5f0b6ac3905f ("powerpc/64/syscall: Reconcile interrupts")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210316104206.407354-2-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b35c9e484cbddab54d89e5eeea391011ac866dd
Author: Cédric Le Goater <clg@kaod.org>
Date:   Wed Mar 31 16:45:12 2021 +0200

    powerpc/xive: Fix xmon command "dxi"
    
    [ Upstream commit 33e4bc5946432a4ac173fd08e8e30a13ab94d06d ]
    
    When under xmon, the "dxi" command dumps the state of the XIVE
    interrupts. If an interrupt number is specified, only the state of
    the associated XIVE interrupt is dumped. This form of the command
    lacks an irq_data parameter which is nevertheless used by
    xmon_xive_get_irq_config(), leading to an xmon crash.
    
    Fix that by doing a lookup in the system IRQ mapping to query the IRQ
    descriptor data. Invalid interrupt numbers, or not belonging to the
    XIVE IRQ domain, OPAL event interrupt number for instance, should be
    caught by the previous query done at the firmware level.
    
    Fixes: 97ef27507793 ("powerpc/xive: Fix xmon support on the PowerNV platform")
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Cédric Le Goater <clg@kaod.org>
    Tested-by: Greg Kurz <groug@kaod.org>
    Reviewed-by: Greg Kurz <groug@kaod.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210331144514.892250-8-clg@kaod.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7de92e4355ed4a34a93b6dccf641226b44aede5
Author: Cédric Le Goater <clg@kaod.org>
Date:   Wed Mar 31 16:45:10 2021 +0200

    powerpc/xive: Drop check on irq_data in xive_core_debug_show()
    
    [ Upstream commit a74ce5926b20cd0e6d624a9b2527073a96dfed7f ]
    
    When looping on IRQ descriptor, irq_data is always valid.
    
    Fixes: 930914b7d528 ("powerpc/xive: Add a debugfs file to dump internal XIVE state")
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Cédric Le Goater <clg@kaod.org>
    Reviewed-by: Greg Kurz <groug@kaod.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210331144514.892250-6-clg@kaod.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5436462939ae8445f56b1400638db201f513688
Author: Mukesh Sisodiya <mukesh.sisodiya@intel.com>
Date:   Sun Apr 11 13:25:44 2021 +0300

    iwlwifi: dbg: disable ini debug in 9000 family and below
    
    [ Upstream commit 7c81a025054cd0aeeeaf17aba2e9757f0a6a38a1 ]
    
    Yoyo based debug is not applicable to old devices.  As init debug is
    enabled by default in the driver, it needs to be disabled to work the
    old debug mechanism in old devices.
    
    Signed-off-by: Mukesh Sisodiya <mukesh.sisodiya@intel.com>
    Fixes: b0d8d2c27007 ("iwlwifi: yoyo: enable yoyo by default")
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20210411132130.805401a1b8ec.I30db38184a418cfc1c5ca1a305cc14a52501d415@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc23413efc1d592b5220a2db58c863985e306a0b
Author: Mordechay Goodstein <mordechay.goodstein@intel.com>
Date:   Sun Apr 11 12:46:30 2021 +0300

    iwlwifi: rs-fw: don't support stbc for HE 160
    
    [ Upstream commit a9174578262b86f15cb1882f35e53b1fae0649fd ]
    
    Our HE doesn't support it so never set HE 160 stbc
    
    Fixes: 3e467b8e4cf4 ("iwlwifi: rs-fw: enable STBC in he correctly")
    Signed-off-by: Mordechay Goodstein <mordechay.goodstein@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Link: https://lore.kernel.org/r/iwlwifi.20210411124418.550fd1903eb7.I8ddbc2f87044a5ef78d916c9c59be797811a1b7f@changeid
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d267335c51a8bdc5b47bf4be333fc0455c4a953
Author: Alessio Balsini <balsini@android.com>
Date:   Fri Mar 19 15:05:14 2021 +0000

    fuse: fix matching of FUSE_DEV_IOC_CLONE command
    
    [ Upstream commit 6076f5f341e612152879bfda99f0b76c1953bf0b ]
    
    With commit f8425c939663 ("fuse: 32-bit user space ioctl compat for fuse
    device") the matching constraints for the FUSE_DEV_IOC_CLONE ioctl command
    are relaxed, limited to the testing of command type and number.  As Arnd
    noticed, this is wrong as it wouldn't ensure the correctness of the data
    size or direction for the received FUSE device ioctl.
    
    Fix by bringing back the comparison of the ioctl received by the FUSE
    device to the originally generated FUSE_DEV_IOC_CLONE.
    
    Fixes: f8425c939663 ("fuse: 32-bit user space ioctl compat for fuse device")
    Reported-by: Arnd Bergmann <arnd@kernel.org>
    Signed-off-by: Alessio Balsini <balsini@android.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e6f5e2039d99268976a61f6415cb958436637a70
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Sat Apr 10 23:25:10 2021 +0300

    i2c: sh7760: add IRQ check
    
    [ Upstream commit e5b2e3e742015dd2aa6bc7bcef2cb59b2de1221c ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to devm_request_irq() (which
    takes *unsigned* IRQ #), causing it to fail with -EINVAL, overriding
    an original error code.  Stop calling devm_request_irq() with invalid
    IRQ #s.
    
    Fixes: a26c20b1fa6d ("i2c: Renesas SH7760 I2C master driver")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit adabb74795708bf52d8a751a697f668006e15905
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Sat Apr 10 23:23:33 2021 +0300

    i2c: rcar: add IRQ check
    
    [ Upstream commit 147178cf03a6dcb337e703d4dacd008683022a58 ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to devm_request_irq() (which
    takes *unsigned* IRQ #), causing it to fail with -EINVAL, overriding
    an original error code.  Stop calling devm_request_irq() with the
    invalid IRQ #s.
    
    Fixes: 6ccbe607132b ("i2c: add Renesas R-Car I2C driver")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2dada8877293d25c7f1c38b0727e64b9ba55d113
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Sat Apr 10 23:20:49 2021 +0300

    i2c: mlxbf: add IRQ check
    
    [ Upstream commit 0d3bf53e897dce943b98d975bbde77156af6cd81 ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to devm_request_irq() (which
    takes *unsigned* IRQ #), causing it to fail with -EINVAL, overriding
    an original error code.  Stop calling devm_request_irq() with invalid
    IRQ #s.
    
    Fixes: b5b5b32081cd ("i2c: mlxbf: I2C SMBus driver for Mellanox BlueField SoC")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60c6bc467bcadb5432de3cff858b81b4f7eef2f5
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Sat Apr 10 23:18:31 2021 +0300

    i2c: jz4780: add IRQ check
    
    [ Upstream commit c5e5f7a8d931fb4beba245bdbc94734175fda9de ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to devm_request_irq() (which
    takes *unsigned* IRQ #), causing it to fail with -EINVAL, overriding
    an original error code.  Stop calling devm_request_irq() with invalid
    IRQ #s.
    
    Fixes: ba92222ed63a ("i2c: jz4780: Add i2c bus controller driver for Ingenic JZ4780")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee714ab6e4899b050f933a4abcf302a22d90d3b3
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Sat Apr 10 23:16:41 2021 +0300

    i2c: emev2: add IRQ check
    
    [ Upstream commit bb6129c32867baa7988f7fd2066cf18ed662d240 ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to devm_request_irq() (which
    takes *unsigned* IRQ #), causing it to fail with -EINVAL, overriding
    an original error code.  Stop calling devm_request_irq() with invalid
    IRQ #s.
    
    Fixes: 5faf6e1f58b4 ("i2c: emev2: add driver")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cbf441180bf1bbe0ee6390cb372b4fedeeacf483
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Sat Apr 10 23:14:35 2021 +0300

    i2c: cadence: add IRQ check
    
    [ Upstream commit 5581c2c5d02bc63a0edb53e061c8e97cd490646e ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to devm_request_irq() (which
    takes *unsigned* IRQ #), causing it to fail with -EINVAL, overriding
    an original error code.  Stop calling devm_request_irq() with invalid
    IRQ #s.
    
    Fixes: df8eb5691c48 ("i2c: Add driver for Cadence I2C controller")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a42ac16e6573f19c78f556ea292f5b534fcc4514
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Tue Dec 1 17:31:46 2020 +0800

    i2c: xiic: fix reference leak when pm_runtime_get_sync fails
    
    [ Upstream commit a85c5c7a3aa8041777ff691400b4046e56149fd3 ]
    
    The PM reference count is not expected to be incremented on
    return in xiic_xfer and xiic_i2c_remove.
    
    However, pm_runtime_get_sync will increment the PM reference
    count even failed. Forgetting to putting operation will result
    in a reference leak here.
    
    Replace it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Fixes: 10b17004a74c ("i2c: xiic: Fix the clocking across bind unbind")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7ea772c9fcf711ed566814b92eecaffc0e2bfd0
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Tue Dec 1 17:31:45 2020 +0800

    i2c: stm32f7: fix reference leak when pm_runtime_get_sync fails
    
    [ Upstream commit 2c662660ce2bd3b09dae21a9a9ac9395e1e6c00b ]
    
    The PM reference count is not expected to be incremented on
    return in these stm32f7_i2c_xx serious functions.
    
    However, pm_runtime_get_sync will increment the PM reference
    count even failed. Forgetting to putting operation will result
    in a reference leak here.
    
    Replace it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Fixes: ea6dd25deeb5 ("i2c: stm32f7: add PM_SLEEP suspend/resume support")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3406ab52097328a3bc4cbe124bfd8f6d51fb86f
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Tue Dec 1 17:31:44 2020 +0800

    i2c: sprd: fix reference leak when pm_runtime_get_sync fails
    
    [ Upstream commit 3a4f326463117cee3adcb72999ca34a9aaafda93 ]
    
    The PM reference count is not expected to be incremented on
    return in sprd_i2c_master_xfer() and sprd_i2c_remove().
    
    However, pm_runtime_get_sync will increment the PM reference
    count even failed. Forgetting to putting operation will result
    in a reference leak here.
    
    Replace it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Fixes: 8b9ec0719834 ("i2c: Add Spreadtrum I2C controller driver")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6fdc153091dc29edf84393f2ce9a7c2aa1a3090
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Tue Dec 1 17:31:43 2020 +0800

    i2c: omap: fix reference leak when pm_runtime_get_sync fails
    
    [ Upstream commit 780f629741257ed6c54bd3eb53b57f648eabf200 ]
    
    The PM reference count is not expected to be incremented on
    return in omap_i2c_probe() and omap_i2c_remove().
    
    However, pm_runtime_get_sync will increment the PM reference
    count even failed. Forgetting to putting operation will result
    in a reference leak here. I Replace it with pm_runtime_resume_and_get
    to keep usage counter balanced.
    
    What's more, error path 'err_free_mem' seems not like a proper
    name any more. So I change the name to err_disable_pm and move
    pm_runtime_disable below, for pm_runtime of 'pdev->dev' should
    be disabled when pm_runtime_resume_and_get fails.
    
    Fixes: 3b0fb97c8dc4 ("I2C: OMAP: Handle error check for pm runtime")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Reviewed-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Reviewed-by: Vignesh Raghavendra <vigneshr@ti.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff406f6cd09c273337ab4854292e4aca48f8affd
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Tue Dec 1 17:31:41 2020 +0800

    i2c: imx: fix reference leak when pm_runtime_get_sync fails
    
    [ Upstream commit 47ff617217ca6a13194fcb35c6c3a0c57c080693 ]
    
    In i2c_imx_xfer() and i2c_imx_remove(), the pm reference count
    is not expected to be incremented on return.
    
    However, pm_runtime_get_sync will increment pm reference count
    even failed. Forgetting to putting operation will result in a
    reference leak here.
    
    Replace it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Fixes: 3a5ee18d2a32 ("i2c: imx: implement master_xfer_atomic callback")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Reviewed-by: Oleksij Rempel <o.rempel@pengutronix.de>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b100650d80cd2292f6c152f5f2943b5944b3e8ce
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Tue Dec 1 17:31:40 2020 +0800

    i2c: imx-lpi2c: fix reference leak when pm_runtime_get_sync fails
    
    [ Upstream commit 278e5bbdb9a94fa063c0f9bcde2479d0b8042462 ]
    
    The PM reference count is not expected to be incremented on
    return in lpi2c_imx_master_enable.
    
    However, pm_runtime_get_sync will increment the PM reference
    count even failed. Forgetting to putting operation will result
    in a reference leak here.
    
    Replace it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Fixes: 13d6eb20fc79 ("i2c: imx-lpi2c: add runtime pm support")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ee35cde1e810ad6ca589980b9ec2b7b62946a5b
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Tue Dec 1 17:31:39 2020 +0800

    i2c: img-scb: fix reference leak when pm_runtime_get_sync fails
    
    [ Upstream commit 223125e37af8a641ea4a09747a6a52172fc4b903 ]
    
    The PM reference count is not expected to be incremented on
    return in functions img_i2c_xfer and img_i2c_init.
    
    However, pm_runtime_get_sync will increment the PM reference
    count even failed. Forgetting to putting operation will result
    in a reference leak here.
    
    Replace it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Fixes: 93222bd9b966 ("i2c: img-scb: Add runtime PM")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a45fc41beed8e0fe31864619c34aa00797fb60c1
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Tue Dec 1 17:31:17 2020 +0800

    i2c: cadence: fix reference leak when pm_runtime_get_sync fails
    
    [ Upstream commit 23ceb8462dc6f4b4decdb5536a7e5fc477cdf0b6 ]
    
    The PM reference count is not expected to be incremented on
    return in functions cdns_i2c_master_xfer and cdns_reg_slave.
    
    However, pm_runtime_get_sync will increment pm usage counter
    even failed. Forgetting to putting operation will result in a
    reference leak here.
    
    Replace it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Fixes: 7fa32329ca03 ("i2c: cadence: Move to sensible power management")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Signed-off-by: Wolfram Sang <wsa@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b3ffa5814f0f94b09712bf2fc2b4ba29189fa45
Author: Tudor Ambarus <tudor.ambarus@microchip.com>
Date:   Fri Apr 9 11:25:22 2021 +0300

    pinctrl: at91-pio4: Fix slew rate disablement
    
    [ Upstream commit cbde6c823bfaa553fb162257a5926ba15ebaaa43 ]
    
    The slew rate was enabled by default for each configuration of the
    pin. In case the pin had more than one configuration, even if
    we set the slew rate as disabled in the device tree, the next pin
    configuration would set again the slew rate enabled by default,
    overwriting the slew rate disablement.
    Instead of enabling the slew rate by default for each pin configuration,
    enable the slew rate by default just once per pin, regardless of the
    number of configurations. This way the slew rate disablement will also
    work for cases where pins have multiple configurations.
    
    Fixes: c709135e576b ("pinctrl: at91-pio4: add support for slew-rate")
    Signed-off-by: Tudor Ambarus <tudor.ambarus@microchip.com>
    Reviewed-by: Claudiu Beznea <claudiu.beznea@microchip.com>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Link: https://lore.kernel.org/r/20210409082522.625168-1-tudor.ambarus@microchip.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3cca8067d43dfee4a3535c645b55f618708dccb
Author: Gioh Kim <gi-oh.kim@ionos.com>
Date:   Mon Apr 12 10:40:02 2021 +0200

    RDMA/rtrs-clt: destroy sysfs after removing session from active list
    
    [ Upstream commit 7f4a8592ff29f19c5a2ca549d0973821319afaad ]
    
    A session can be removed dynamically by sysfs interface "remove_path" that
    eventually calls rtrs_clt_remove_path_from_sysfs function.  The current
    rtrs_clt_remove_path_from_sysfs first removes the sysfs interfaces and
    frees sess->stats object. Second it removes the session from the active
    list.
    
    Therefore some functions could access non-connected session and access the
    freed sess->stats object even-if they check the session status before
    accessing the session.
    
    For instance rtrs_clt_request and get_next_path_min_inflight check the
    session status and try to send IO to the session.  The session status
    could be changed when they are trying to send IO but they could not catch
    the change and update the statistics information in sess->stats object,
    and generate use-after-free problem.
    (see: "RDMA/rtrs-clt: Check state of the rtrs_clt_sess before reading its
    stats")
    
    This patch changes the rtrs_clt_remove_path_from_sysfs to remove the
    session from the active session list and then destroy the sysfs
    interfaces.
    
    Each function still should check the session status because closing or
    error recovery paths can change the status.
    
    Fixes: 6a98d71daea1 ("RDMA/rtrs: client: main functionality")
    Link: https://lore.kernel.org/r/20210412084002.33582-1-gi-oh.kim@ionos.com
    Signed-off-by: Gioh Kim <gi-oh.kim@ionos.com>
    Reviewed-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd8fbee40c8786e9b44255871caea0bb957cf38e
Author: Wang Wensheng <wangwensheng4@huawei.com>
Date:   Thu Apr 8 11:31:32 2021 +0000

    RDMA/srpt: Fix error return code in srpt_cm_req_recv()
    
    [ Upstream commit 6bc950beff0c440ac567cdc4e7f4542a9920953d ]
    
    Fix to return a negative error code from the error handling case instead
    of 0, as done elsewhere in this function.
    
    Fixes: db7683d7deb2 ("IB/srpt: Fix login-related race conditions")
    Link: https://lore.kernel.org/r/20210408113132.87250-1-wangwensheng4@huawei.com
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Wensheng <wangwensheng4@huawei.com>
    Reviewed-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a46b536cd60c0dbd4bf767c62a8774dec52bf099
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Tue Apr 6 11:34:36 2021 +0800

    mt76: mt7921: fix kernel crash when the firmware fails to download
    
    [ Upstream commit e230f0c44f011f3270680a506b19b7e84c5e8923 ]
    
    Fix kernel crash when the firmware is missing or fails to download.
    
    [    9.444758] kernel BUG at drivers/pci/msi.c:375!
    [    9.449363] Internal error: Oops - BUG: 0 [#1] PREEMPT SMP
    [    9.501033] pstate: a0400009 (NzCv daif +PAN -UAO)
    [    9.505814] pc : free_msi_irqs+0x180/0x184
    [    9.509897] lr : free_msi_irqs+0x40/0x184
    [    9.513893] sp : ffffffc015193870
    [    9.517194] x29: ffffffc015193870 x28: 00000000f0e94fa2
    [    9.522492] x27: 0000000000000acd x26: 000000000000009a
    [    9.527790] x25: ffffffc0152cee58 x24: ffffffdbb383e0d8
    [    9.533087] x23: ffffffdbb38628d0 x22: 0000000000040200
    [    9.538384] x21: ffffff8cf7de7318 x20: ffffff8cd65a2480
    [    9.543681] x19: ffffff8cf7de7000 x18: 0000000000000000
    [    9.548979] x17: ffffff8cf9ca03b4 x16: ffffffdc13ad9a34
    [    9.554277] x15: 0000000000000000 x14: 0000000000080800
    [    9.559575] x13: ffffff8cd65a2980 x12: 0000000000000000
    [    9.564873] x11: ffffff8cfa45d820 x10: ffffff8cfa45d6d0
    [    9.570171] x9 : 0000000000000040 x8 : ffffff8ccef1b780
    [    9.575469] x7 : aaaaaaaaaaaaaaaa x6 : 0000000000000000
    [    9.580766] x5 : ffffffdc13824900 x4 : ffffff8ccefe0000
    [    9.586063] x3 : 0000000000000000 x2 : 0000000000000000
    [    9.591362] x1 : 0000000000000125 x0 : ffffff8ccefe0000
    [    9.596660] Call trace:
    [    9.599095]  free_msi_irqs+0x180/0x184
    [    9.602831]  pci_disable_msi+0x100/0x130
    [    9.606740]  pci_free_irq_vectors+0x24/0x30
    [    9.610915]  mt7921_pci_probe+0xbc/0x250 [mt7921e]
    [    9.615693]  pci_device_probe+0xd4/0x14c
    [    9.619604]  really_probe+0x134/0x2ec
    [    9.623252]  driver_probe_device+0x64/0xfc
    [    9.627335]  device_driver_attach+0x4c/0x6c
    [    9.631506]  __driver_attach+0xac/0xc0
    [    9.635243]  bus_for_each_dev+0x8c/0xd4
    [    9.639066]  driver_attach+0x2c/0x38
    [    9.642628]  bus_add_driver+0xfc/0x1d0
    [    9.646365]  driver_register+0x64/0xf8
    [    9.650101]  __pci_register_driver+0x6c/0x7c
    [    9.654360]  init_module+0x28/0xfdc [mt7921e]
    [    9.658704]  do_one_initcall+0x13c/0x2d0
    [    9.662615]  do_init_module+0x58/0x1e8
    [    9.666351]  load_module+0xd80/0xeb4
    [    9.669912]  __arm64_sys_finit_module+0xa8/0xe0
    [    9.674430]  el0_svc_common+0xa4/0x16c
    [    9.678168]  el0_svc_compat_handler+0x2c/0x40
    [    9.682511]  el0_svc_compat+0x8/0x10
    [    9.686076] Code: a94257f6 f9400bf7 a8c47bfd d65f03c0 (d4210000)
    [    9.692155] ---[ end trace 7621f966afbf0a29 ]---
    [    9.697385] Kernel panic - not syncing: Fatal exception
    [    9.702599] SMP: stopping secondary CPUs
    [    9.706549] Kernel Offset: 0x1c03600000 from 0xffffffc010000000
    [    9.712456] PHYS_OFFSET: 0xfffffff440000000
    [    9.716625] CPU features: 0x080026,2a80aa18
    [    9.720795] Memory Limit: none
    
    Fixes: 5c14a5f944b9 ("mt76: mt7921: introduce mt7921e support")
    Reported-by: Claire Chang <tientzu@google.com>
    Co-developed-by: YN Chen <YN.Chen@mediatek.com>
    Signed-off-by: YN Chen <YN.Chen@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab2dcb9083f2f7605c754a8a058a66a532e0cf5b
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Apr 9 14:07:26 2021 +0100

    net: thunderx: Fix unintentional sign extension issue
    
    [ Upstream commit e701a25840360706fe4cf5de0015913ca19c274b ]
    
    The shifting of the u8 integers rq->caching by 26 bits to
    the left will be promoted to a 32 bit signed int and then
    sign-extended to a u64. In the event that rq->caching is
    greater than 0x1f then all then all the upper 32 bits of
    the u64 end up as also being set because of the int
    sign-extension. Fix this by casting the u8 values to a
    u64 before the 26 bit left shift.
    
    Addresses-Coverity: ("Unintended sign extension")
    Fixes: 4863dea3fab0 ("net: Adding support for Cavium ThunderX network controller")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c20ede4c22e2087cbe00ee7797e6cf08f3fe5e7
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Apr 9 12:08:57 2021 +0100

    cxgb4: Fix unintentional sign extension issues
    
    [ Upstream commit dd2c79677375c37f8f9f8d663eb4708495d595ef ]
    
    The shifting of the u8 integers f->fs.nat_lip[] by 24 bits to
    the left will be promoted to a 32 bit signed int and then
    sign-extended to a u64. In the event that the top bit of the u8
    is set then all then all the upper 32 bits of the u64 end up as
    also being set because of the sign-extension. Fix this by
    casting the u8 values to a u64 before the 24 bit left shift.
    
    Addresses-Coverity: ("Unintended sign extension")
    Fixes: 12b276fbf6e0 ("cxgb4: add support to create hash filters")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c86386cc21bfe4394729307d458fe504635383cb
Author: Wang Wensheng <wangwensheng4@huawei.com>
Date:   Thu Apr 8 11:31:37 2021 +0000

    RDMA/bnxt_re: Fix error return code in bnxt_qplib_cq_process_terminal()
    
    [ Upstream commit 22efb0a8d130c6379c1eb64cbace1542b27e37ff ]
    
    Fix to return a negative error code from the error handling case instead
    of 0, as done elsewhere in this function.
    
    Fixes: 1ac5a4047975 ("RDMA/bnxt_re: Add bnxt_re RoCE driver")
    Link: https://lore.kernel.org/r/20210408113137.97202-1-wangwensheng4@huawei.com
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Wensheng <wangwensheng4@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1500e32939057b8a75c6f87a3f2c12d603b283af
Author: Wang Wensheng <wangwensheng4@huawei.com>
Date:   Thu Apr 8 11:31:40 2021 +0000

    IB/hfi1: Fix error return code in parse_platform_config()
    
    [ Upstream commit 4c7d9c69adadfc31892c7e8e134deb3546552106 ]
    
    Fix to return a negative error code from the error handling case instead
    of 0, as done elsewhere in this function.
    
    Fixes: 7724105686e7 ("IB/hfi1: add driver files")
    Link: https://lore.kernel.org/r/20210408113140.103032-1-wangwensheng4@huawei.com
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Wensheng <wangwensheng4@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 296eb4ca08e47ec77b27d5e476c19bf23f91f6cd
Author: Wang Wensheng <wangwensheng4@huawei.com>
Date:   Thu Apr 8 11:31:35 2021 +0000

    RDMA/qedr: Fix error return code in qedr_iw_connect()
    
    [ Upstream commit 10dd83dbcd157baf7a78a09ddb2f84c627bc7f1d ]
    
    Fix to return a negative error code from the error handling case instead
    of 0, as done elsewhere in this function.
    
    Fixes: 82af6d19d8d9 ("RDMA/qedr: Fix synchronization methods and memory leaks in qedr")
    Link: https://lore.kernel.org/r/20210408113135.92165-1-wangwensheng4@huawei.com
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Wensheng <wangwensheng4@huawei.com>
    Acked-by: Michal Kalderon <michal.kalderon@marvell.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6354991d0bf5a9636b9d76783ff09b4f3153db0e
Author: Amir Goldstein <amir73il@gmail.com>
Date:   Sun Apr 11 12:22:23 2021 +0300

    ovl: invalidate readdir cache on changes to dir with origin
    
    [ Upstream commit 65cd913ec9d9d71529665924c81015b7ab7d9381 ]
    
    The test in ovl_dentry_version_inc() was out-dated and did not include
    the case where readdir cache is used on a non-merge dir that has origin
    xattr, indicating that it may contain leftover whiteouts.
    
    To make the code more robust, use the same helper ovl_dir_is_real()
    to determine if readdir cache should be used and if readdir cache should
    be invalidated.
    
    Fixes: b79e05aaa166 ("ovl: no direct iteration for dir with origin xattr")
    Link: https://lore.kernel.org/linux-unionfs/CAOQ4uxht70nODhNHNwGFMSqDyOKLXOKrY0H6g849os4BQ7cokA@mail.gmail.com/
    Cc: Chris Murphy <lists@colorremedies.com>
    Signed-off-by: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eecb662975c0cc8964a9456f038b908cf79cd0e8
Author: Giuseppe Scrivano <gscrivan@redhat.com>
Date:   Thu Mar 4 17:45:15 2021 +0100

    ovl: show "userxattr" in the mount data
    
    [ Upstream commit 321b46b904816241044e177c1d6282ad20f17416 ]
    
    This was missed when adding the option.
    
    Signed-off-by: Giuseppe Scrivano <gscrivan@redhat.com>
    Reviewed-by: Vivek Goyal <vgoyal@redhat.com>
    Fixes: 2d2f2d7322ff ("ovl: user xattr")
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 947573d8b7255861ec656bc971fde7952a4f9872
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Mon Apr 12 11:48:34 2021 +1000

    KVM: PPC: Book3S HV P9: Restore host CTRL SPR after guest exit
    
    [ Upstream commit 5088eb4092df12d701af8e0e92860b7186365279 ]
    
    The host CTRL (runlatch) value is not restored after guest exit. The
    host CTRL should always be 1 except in CPU idle code, so this can result
    in the host running with runlatch clear, and potentially switching to
    a different vCPU which then runs with runlatch clear as well.
    
    This has little effect on P9 machines, CTRL is only responsible for some
    PMU counter logic in the host and so other than corner cases of software
    relying on that, or explicitly reading the runlatch value (Linux does
    not appear to be affected but it's possible non-Linux guests could be),
    there should be no execution correctness problem, though it could be
    used as a covert channel between guests.
    
    There may be microcontrollers, firmware or monitoring tools that sample
    the runlatch value out-of-band, however since the register is writable
    by guests, these values would (should) not be relied upon for correct
    operation of the host, so suboptimal performance or incorrect reporting
    should be the worst problem.
    
    Fixes: 95a6432ce9038 ("KVM: PPC: Book3S HV: Streamlined guest entry/exit path on P9 for radix guests")
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210412014845.1517916-2-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e36eb66f179792affac799c42105b21a63de8bd
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Tue Apr 6 11:34:35 2021 +0800

    mt76: mt7921: fix the dwell time control
    
    [ Upstream commit 9db419f0cb39a63fb2f645a846cae17b81cd5c96 ]
    
    dwell time for the scan is not configurable according to the current
    firmware submitted into linux-firmware.git, so leave the dwell time 0 to
    indicate the dwell time always determined by the firmware.
    
    Fixes: 399090ef9605 ("mt76: mt76_connac: move hw_scan and sched_scan routine in mt76_connac_mcu module")
    Suggested-by: Soul Huang <Soul.Huang@mediatek.com>
    Co-developed-by: YN Chen <YN.Chen@mediatek.com>
    Signed-off-by: YN Chen <YN.Chen@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1aa32d64fad46ed968b306b253eba4eef075518a
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Tue Apr 6 11:34:34 2021 +0800

    mt76: mt7921: fix inappropriate WoW setup with the missing ARP informaiton
    
    [ Upstream commit 9c9d83213424679b087267600d53a35acfa0201f ]
    
    Fix the Wake-on-WoWLAN failure should rely on ARP Information is being
    updated in time to the firmware.
    
    Fixes: ffa1bf97425b ("mt76: mt7921: introduce PM support")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ac6fcde7c70c8cafb9de7b6b606818e7754ada4
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Sat Apr 3 14:26:39 2021 +0200

    mt76: mt7921: always wake the device in mt7921_remove_interface
    
    [ Upstream commit 859c85fd19715349ce01539459095fd5fc7e483a ]
    
    Make sure the mcu is not in sleep mode before sending mcu messages in
    mt7921_remove_interface routine.
    
    Fixes: 1d8efc741df80 ("mt76: mt7921: introduce Runtime PM support")
    Co-developed-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Co-developed-by: Leon Yen <leon.yen@mediatek.com>
    Signed-off-by: Leon Yen <leon.yen@mediatek.com>
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c8e96ad4114db0efdb133212e838f8e4c6721a6
Author: Ryder Lee <ryder.lee@mediatek.com>
Date:   Fri Mar 26 02:28:56 2021 +0800

    mt76: mt7915: cleanup mcu tx queue in mt7915_dma_reset()
    
    [ Upstream commit 1ebea45ef027ee31cd50ed92903071391e792edb ]
    
    Cleanup mcu queues in mt7915_mac_reset_work().
    
    Fixes: e637763b606b ("mt76: move mcu queues to mt76_dev q_mcu array")
    Signed-off-by: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9ed3f7370ac240691bef3664815c9a5ebeed1553
Author: Ryder Lee <ryder.lee@mediatek.com>
Date:   Thu Mar 25 16:06:02 2021 +0800

    mt76: mt7615: cleanup mcu tx queue in mt7615_dma_reset()
    
    [ Upstream commit 69e74d7f23d515fb559b2e0bebfdf4c458d9507d ]
    
    With this patch, mt7615_mac_reset_work() can recover system back.
    
    Fixes: e637763b606b ("mt76: move mcu queues to mt76_dev q_mcu array")
    Signed-off-by: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ecb3748e3ba3a98ac80911c2036db849316342d
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Thu Mar 4 21:25:23 2021 +0800

    mt76: mt7663s: fix the possible device hang in high traffic
    
    [ Upstream commit 45247a85614b49b07b9dc59a4e6783b17e766ff2 ]
    
    Use the additional memory barrier to ensure the skb list up-to-date
    between the skb producer and consumer to avoid the invalid skb content
    written into sdio controller and then cause device hang due to mcu assert
    caught by WR_TIMEOUT_INT.
    
    Fixes: 1522ff731f84 ("mt76: mt7663s: introduce sdio tx aggregation")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd0261e1bf531f20a8332cdf5418b2731c6af0db
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Thu Mar 4 21:25:22 2021 +0800

    mt76: mt7663s: make all of packets 4-bytes aligned in sdio tx aggregation
    
    [ Upstream commit 455ae5aabcc72fed7e5c803d59d122415500dc08 ]
    
    Each packet should be padded with the additional zero to become 4-bytes
    alignment in sdio tx aggregation.
    
    Fixes: 1522ff731f84 ("mt76: mt7663s: introduce sdio tx aggregation")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab28d7d1b205587e25056df9ee4bff4c18f48d6c
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Thu Mar 4 21:25:21 2021 +0800

    mt76: mt7663: fix when beacon filter is being applied
    
    [ Upstream commit 4bec61d9fb9629c21e60cd24a97235ea1f6020ec ]
    
    HW beacon filter command is being applied until we're in associated state
    because the command would rely on the associated access point's beacon
    interval and DTIM information.
    
    Fixes: 7124198ab1a4 ("mt76: mt7615: enable beacon filtering by default for offload fw")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4bd926e5ca88eac4d95eacb806b229f8729bc62e
Author: Ryder Lee <ryder.lee@mediatek.com>
Date:   Wed Mar 3 18:38:00 2021 +0800

    mt76: mt7915: fix txrate reporting
    
    [ Upstream commit f43b941fd61003659a3f0e039595e5e525917aa8 ]
    
    Properly check rate_info to fix unexpected reporting.
    
    [ 1215.161863] Call trace:
    [ 1215.164307]  cfg80211_calculate_bitrate+0x124/0x200 [cfg80211]
    [ 1215.170139]  ieee80211s_update_metric+0x80/0xc0 [mac80211]
    [ 1215.175624]  ieee80211_tx_status_ext+0x508/0x838 [mac80211]
    [ 1215.181190]  mt7915_mcu_get_rx_rate+0x28c/0x8d0 [mt7915e]
    [ 1215.186580]  mt7915_mac_tx_free+0x324/0x7c0 [mt7915e]
    [ 1215.191623]  mt7915_queue_rx_skb+0xa8/0xd0 [mt7915e]
    [ 1215.196582]  mt76_dma_cleanup+0x7b0/0x11d0 [mt76]
    [ 1215.201276]  __napi_poll+0x38/0xf8
    [ 1215.204668]  napi_workfn+0x40/0x80
    [ 1215.208062]  process_one_work+0x1fc/0x390
    [ 1215.212062]  worker_thread+0x48/0x4d0
    [ 1215.215715]  kthread+0x120/0x128
    [ 1215.218935]  ret_from_fork+0x10/0x1c
    
    Fixes: e57b7901469f ("mt76: add mac80211 driver for MT7915 PCIe-based chipsets")
    Fixes: e4c5ead632ff ("mt76: mt7915: rename mt7915_mcu_get_rate_info to mt7915_mcu_get_tx_rate")
    Reported-by: Evelyn Tsai <evelyn.tsai@mediatek.com>
    Signed-off-by: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9d3a9e108d90ed0402373f871e46d45406fcad1
Author: Ryder Lee <ryder.lee@mediatek.com>
Date:   Wed Mar 3 18:37:59 2021 +0800

    mt76: mt7915: fix rxrate reporting
    
    [ Upstream commit 7883906d22c1e73f1f316bd84fc4a7ff8edd12aa ]
    
    Avoid directly updating sinfo->rxrate from firmware since rate_info might
    be overwritten by wrong results even mt7915_mcu_get_rx_rate() fails check.
    
    Add more error handlings accordingly.
    
    Fixes: 11553d88d0b9 ("mt76: mt7915: query station rx rate from firmware")
    Signed-off-by: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f8d03ca3bb4aebcdb1f37aee884fce6b59899a2f
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Fri Feb 26 16:23:27 2021 +0800

    mt76: mt7921: fix the base of the dynamic remap
    
    [ Upstream commit 53a8fb4afdc877f8f2d5e1e15cc5ad66155987a6 ]
    
    We should change the base for the dynamic remap into another one, because
    the current base (0xe0000) have been the one used to operate the device
    ownership.
    
    Fixes: 163f4d22c118 ("mt76: mt7921: add MAC support")
    Co-developed-by: YN Chen <YN.Chen@mediatek.com>
    Signed-off-by: YN Chen <YN.Chen@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a24470fbbdeb82742c54e7fd78bfcf8d929f3d15
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Fri Feb 26 16:23:26 2021 +0800

    mt76: mt7921: fix the base of PCIe interrupt
    
    [ Upstream commit 23c1d2dc9ed5be1d0df7987335f5646e3826a461 ]
    
    Should use 0x10000 as the base to operate PCIe interrupt according
    to the vendor reference driver.
    
    Fixes: ffa1bf97425b ("mt76: mt7921: introduce PM support")
    Co-developed-by: YN Chen <YN.Chen@mediatek.com>
    Signed-off-by: YN Chen <YN.Chen@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Tested-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65d1c9b2a2ff09d69e1e02406b72644e2269f595
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Wed Feb 24 12:29:34 2021 +0100

    mt76: check return value of mt76_txq_send_burst in mt76_txq_schedule_list
    
    [ Upstream commit 57b8b57516c5108b0078051a31c68dc9dfcbf68f ]
    
    Since mt76_txq_send_burst routine can report a negative error code,
    check the returned value before incrementing the number of transmitted
    frames in mt76_txq_schedule_list routine.
    Return -EBUSY directly if the device is in reset or in power management.
    
    Fixes: 90fdc1717b186 ("mt76: use mac80211 txq scheduling")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2554b9cb4b5e097c6071ec3ed5bc7c665c477ca7
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Tue Feb 23 18:28:43 2021 +0100

    mt76: connac: fix kernel warning adding monitor interface
    
    [ Upstream commit c996f0346e40e3b1ac2ebaf0681df898fb157f60 ]
    
    Fix the following kernel warning adding a monitor interface in
    mt76_connac_mcu_uni_add_dev routine.
    
    [  507.984882] ------------[ cut here ]------------
    [  507.989515] WARNING: CPU: 1 PID: 3017 at mt76_connac_mcu_uni_add_dev+0x178/0x190 [mt76_connac_lib]
    [  508.059379] CPU: 1 PID: 3017 Comm: ifconfig Not tainted 5.4.98 #0
    [  508.065461] Hardware name: MT7622_MT7531 RFB (DT)
    [  508.070156] pstate: 80000005 (Nzcv daif -PAN -UAO)
    [  508.074939] pc : mt76_connac_mcu_uni_add_dev+0x178/0x190 [mt76_connac_lib]
    [  508.081806] lr : mt7921_eeprom_init+0x1288/0x1cb8 [mt7921e]
    [  508.087367] sp : ffffffc013a33930
    [  508.090671] x29: ffffffc013a33930 x28: ffffff801e628ac0
    [  508.095973] x27: ffffff801c7f1200 x26: ffffff801c7eb008
    [  508.101275] x25: ffffff801c7eaef0 x24: ffffff801d025610
    [  508.106577] x23: ffffff801d022990 x22: ffffff801d024de8
    [  508.111879] x21: ffffff801d0226a0 x20: ffffff801c7eaee8
    [  508.117181] x19: ffffff801d0226a0 x18: 000000005d00b000
    [  508.122482] x17: 00000000ffffffff x16: 0000000000000000
    [  508.127785] x15: 0000000000000080 x14: ffffff801d704000
    [  508.133087] x13: 0000000000000040 x12: 0000000000000002
    [  508.138389] x11: 000000000000000c x10: 0000000000000000
    [  508.143691] x9 : 0000000000000020 x8 : 0000000000000001
    [  508.148992] x7 : 0000000000000000 x6 : 0000000000000000
    [  508.154294] x5 : ffffff801c7eaee8 x4 : 0000000000000006
    [  508.159596] x3 : 0000000000000001 x2 : 0000000000000000
    [  508.164898] x1 : ffffff801c7eac08 x0 : ffffff801d0226a0
    [  508.170200] Call trace:
    [  508.172640]  mt76_connac_mcu_uni_add_dev+0x178/0x190 [mt76_connac_lib]
    [  508.179159]  mt7921_eeprom_init+0x1288/0x1cb8 [mt7921e]
    [  508.184394]  drv_add_interface+0x34/0x88 [mac80211]
    [  508.189271]  ieee80211_add_virtual_monitor+0xe0/0xb48 [mac80211]
    [  508.195277]  ieee80211_do_open+0x86c/0x918 [mac80211]
    [  508.200328]  ieee80211_do_open+0x900/0x918 [mac80211]
    [  508.205372]  __dev_open+0xcc/0x150
    [  508.208763]  __dev_change_flags+0x134/0x198
    [  508.212937]  dev_change_flags+0x20/0x60
    [  508.216764]  devinet_ioctl+0x3e8/0x748
    [  508.220503]  inet_ioctl+0x1e4/0x350
    [  508.223983]  sock_do_ioctl+0x48/0x2a0
    [  508.227635]  sock_ioctl+0x310/0x4f8
    [  508.231116]  do_vfs_ioctl+0xa4/0xac0
    [  508.234681]  ksys_ioctl+0x44/0x90
    [  508.237985]  __arm64_sys_ioctl+0x1c/0x48
    [  508.241901]  el0_svc_common.constprop.1+0x7c/0x100
    [  508.246681]  el0_svc_handler+0x18/0x20
    [  508.250421]  el0_svc+0x8/0x1c8
    [  508.253465] ---[ end trace c7b90fee13d72c39 ]---
    [  508.261278] ------------[ cut here ]------------
    
    Fixes: d0e274af2f2e4 ("mt76: mt76_connac: create mcu library")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe1ea83b76ada1479c80f3632d5d1f7114f76794
Author: Ryder Lee <ryder.lee@mediatek.com>
Date:   Tue Feb 23 22:00:36 2021 +0800

    mt76: mt7915: fix mib stats counter reporting to mac80211
    
    [ Upstream commit 2b35050a321865859fd2f12a3c18ed7be27858c9 ]
    
    In order to properly report MIB counters to mac80211, resets stats in
    mt7915_get_stats routine() and hold mt76 mutex accessing MIB counters.
    Sum up MIB counters in mt7915_mac_update_mib_stats routine.
    
    Fixes: e57b7901469f ("mt76: add mac80211 driver for MT7915 PCIe-based chipsets")
    Signed-off-by: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5d23c2dbc6e646f207401f46cb20a43de4e59e5
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Tue Feb 23 11:42:49 2021 +0100

    mt76: mt7615: fix mib stats counter reporting to mac80211
    
    [ Upstream commit 2eb6f6c437745bce46bd7a8f3a22a732d5b9becb ]
    
    In order to properly report MIB counters to mac80211, resets stats in
    mt7615_get_stats routine and hold mt76 mutex accessing MIB counters.
    Sum up MIB counters in mt7615_mac_update_mib_stats routine.
    
    Fixes: c388d8584bc83 ("mt76: mt7615: add a get_stats() callback")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb2e48febf56c8993c5355dd2084c3d36b70c110
Author: Ryder Lee <ryder.lee@mediatek.com>
Date:   Tue Feb 23 16:43:11 2021 +0800

    mt76: mt7615: fix TSF configuration
    
    [ Upstream commit a4a5a430b076860691e95337787bc666c8ab28ff ]
    
    The index of TSF counters should follow HWBSSID.
    
    Fixes: d8d59f66d136 ("mt76: mt7615: support 16 interfaces")
    Signed-off-by: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 09e89893b92677df901958d982d10ba398793a4d
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Mon Feb 22 19:17:49 2021 +0100

    mt76: mt7921: fix stats register definitions
    
    [ Upstream commit f76e9019913bffee0e49b096068e6f6b12f9b0e0 ]
    
    Fix register definitions for mac80211 stats reporting.
    Move mib counter reset to mt7921_get_stats routine.
    
    Fixes: 163f4d22c118d ("mt76: mt7921: add MAC support")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 358af1c797a0c6f77e60e2ce3583b4c509b4133e
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Mon Feb 22 02:14:36 2021 +0100

    mt76: mt7915: fix aggr len debugfs node
    
    [ Upstream commit 9fb9d755fae20b5ad62ef8b4e9289e5baea2c6fc ]
    
    Similar to mt7921, fix 802.11 aggr len debugfs reporting for mt7915 driver.
    
    Fixes: e57b7901469fc ("mt76: add mac80211 driver for MT7915 PCIe-based chipsets")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit abf1eac51e38a731ab7822b13952a07426016f85
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Mon Feb 22 02:12:09 2021 +0100

    mt76: mt7921: fix aggr length histogram
    
    [ Upstream commit 461e3b7f45766f38eeb24ca7354ff01d993b5b47 ]
    
    Fix register definitions for 802.11 aggr length histogram estimation.
    
    Fixes: 474a9f21e2e2 ("mt76: mt7921: add debugfs support")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54b989653c5531bc4416ced33f146b9cb633d978
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Fri Feb 19 18:22:11 2021 +0100

    mt76: mt7615: fix memory leak in mt7615_coredump_work
    
    [ Upstream commit 49cc85059a2cb656f96ff3693f891e8fe8f669a9 ]
    
    Similar to the issue fixed in mt7921_coredump_work, fix a possible memory
    leak in mt7615_coredump_work routine.
    
    Fixes: d2bf7959d9c0f ("mt76: mt7663: introduce coredump support")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3182896668e1a4d47e9f23d060d0f697ca5fb368
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Fri Feb 19 18:28:48 2021 +0100

    mt76: mt7921: fixup rx bitrate statistics
    
    [ Upstream commit 0940605a2a70803fc3362eeccba4c31adf4e70e7 ]
    
    Since the related rx bitrate fields have been moved to group3 in Rxv,
    fix rx bitrate statistics in mt7921_mac_fill_rx routine.
    
    Fixes: 163f4d22c118d ("mt76: mt7921: add MAC support")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bca02a4a79de71b191148a7ad357e5dc7656dbb3
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Fri Feb 19 18:28:47 2021 +0100

    mt76: connac: fix up the setting for ht40 mode in mt76_connac_mcu_uni_add_bss
    
    [ Upstream commit a7e3033fcdb60ad51b03896ae99ad9447389bed0 ]
    
    Use proper value for ht40 mode configuration in mt76_connac_mcu_uni_add_bss
    routine and not ht20 one
    
    Fixes: d0e274af2f2e4 ("mt76: mt76_connac: create mcu library")
    Co-developed-by: Soul Huang <Soul.Huang@mediatek.com>
    Signed-off-by: Soul Huang <Soul.Huang@mediatek.com>
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4811226374453607175ea057777faa7e7f752204
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Fri Feb 19 18:28:45 2021 +0100

    mt76: mt7921: fix memory leak in mt7921_coredump_work
    
    [ Upstream commit 782b3e86ea970e899f8e723db9f64708a15ca30e ]
    
    Fix possible memory leak in mt7921_coredump_work.
    
    Fixes: 1c099ab44727c ("mt76: mt7921: add MCU support")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c2918dd9000384ca74c2c260c40c848b50df11b8
Author: Sean Wang <sean.wang@mediatek.com>
Date:   Fri Feb 19 18:28:44 2021 +0100

    mt76: mt7921: fix suspend/resume sequence
    
    [ Upstream commit 5e30931494b4940ba74fa5796ca0b6d7e4c84e88 ]
    
    Any pcie access should happen in pci D0 state and we should give ownership
    back to the device at the end of the suspend procedure.
    
    Fixes: 1d8efc741df80 ("mt76: mt7921: introduce Runtime PM support")
    Signed-off-by: Sean Wang <sean.wang@mediatek.com>
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e2cdc9cb33c5963efe1a7c022753386f9463d1b7
Author: Felix Fietkau <nbd@nbd.name>
Date:   Sat Feb 13 18:44:10 2021 +0100

    mt76: mt7915: fix tx skb dma unmap
    
    [ Upstream commit 7dcf3c04f0aca746517a77433b33d40868ca4749 ]
    
    The first pointer in the txp needs to be unmapped as well, otherwise it will
    leak DMA mapping entries
    
    Reported-by: Ben Greear <greearb@candelatech.com>
    Fixes: 27d5c528a7ca ("mt76: fix double DMA unmap of the first buffer on 7615/7915")
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 821ae236ccea989a1fcc6abfc4d5b74ad4ba39d2
Author: Felix Fietkau <nbd@nbd.name>
Date:   Sat Feb 13 18:42:15 2021 +0100

    mt76: mt7615: fix tx skb dma unmap
    
    [ Upstream commit ebee7885bb12a8fe2c2f9bac87dbd87a05b645f9 ]
    
    The first pointer in the txp needs to be unmapped as well, otherwise it will
    leak DMA mapping entries
    
    Fixes: 27d5c528a7ca ("mt76: fix double DMA unmap of the first buffer on 7615/7915")
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88eee5ffb3b27b737235a32d8676eb74919804da
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Feb 25 18:32:41 2021 +0000

    mt7601u: fix always true expression
    
    [ Upstream commit 87fce88658ba047ae62e83497d3f3c5dc22fa6f9 ]
    
    Currently the expression ~nic_conf1 is always true because nic_conf1
    is a u16 and according to 6.5.3.3 of the C standard the ~ operator
    promotes the u16 to an integer before flipping all the bits. Thus
    the top 16 bits of the integer result are all set so the expression
    is always true.  If the intention was to flip all the bits of nic_conf1
    then casting the integer result back to a u16 is a suitabel fix.
    
    Interestingly static analyzers seem to thing a bitwise ! should be
    used instead of ~ for this scenario, so I think the original intent
    of the expression may need some extra consideration.
    
    Addresses-Coverity: ("Logical vs. bitwise operator")
    Fixes: c869f77d6abb ("add mt7601u driver")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Jakub Kicinski <kubakici@wp.pl>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210225183241.1002129-1-colin.king@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae5ef5358a89d7855c35f7f3ef280e0a6ca685bc
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Mar 15 12:23:37 2021 +0300

    rtw88: Fix an error code in rtw_debugfs_set_rsvd_page()
    
    [ Upstream commit c9eaee0c2ec6b1002044fb698cdfb5d9ef4ed28c ]
    
    The sscanf() function returns the number of matches (0 or 1 in this
    case).  It doesn't return error codes.  We should return -EINVAL if the
    string is invalid
    
    Fixes: c376c1fc87b7 ("rtw88: add h2c command in debugfs")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/YE8nmatMDBDDWkjq@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d724bf90a2dceb249b9dfe01af3eb4501bfc8dd
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Apr 9 10:27:34 2021 -0700

    xfs: fix return of uninitialized value in variable error
    
    [ Upstream commit 3b6dd9a9aeeada19d0c820ff68e979243a888bb6 ]
    
    A previous commit removed a call to xfs_attr3_leaf_read that
    assigned an error return code to variable error. We now have
    a few early error return paths to label 'out' that return
    error if error is set; however error now is uninitialized
    so potentially garbage is being returned.  Fix this by setting
    error to zero to restore the original behaviour where error
    was zero at the label 'restart'.
    
    Addresses-Coverity: ("Uninitialized scalar variable")
    Fixes: 07120f1abdff ("xfs: Add xfs_has_attr and subroutines")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Darrick J. Wong <djwong@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 269c23fa1b8ef50434023d6c71883a04a093a11f
Author: Weihang Li <liweihang@huawei.com>
Date:   Fri Apr 2 17:07:27 2021 +0800

    RDMA/hns: Fix missing assignment of max_inline_data
    
    [ Upstream commit 9eab614338cdfe08db343954454fa5191d082a11 ]
    
    When querying QP, the ULPs should be informed of the max length of inline
    data supported by the hardware.
    
    Fixes: 30b707886aeb ("RDMA/hns: Support inline data in extented sge space for RC")
    Link: https://lore.kernel.org/r/1617354454-47840-3-git-send-email-liweihang@huawei.com
    Signed-off-by: Weihang Li <liweihang@huawei.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab5530a9c1038050c887f378254b987f43887a77
Author: Smita Koralahalli <Smita.KoralahalliChannabasappa@amd.com>
Date:   Tue Apr 6 16:59:41 2021 -0500

    perf vendor events amd: Fix broken L2 Cache Hits from L2 HWPF metric
    
    [ Upstream commit 86c2bc3da769124e3e856b6e9457be3667c30919 ]
    
    Commit 08ed77e414ab2342 ("perf vendor events amd: Add recommended events")
    added the hits event "L2 Cache Hits from L2 HWPF" with the same metric
    expression as the accesses event "L2 Cache Accesses from L2 HWPF":
    
    $ perf list --details
    ...
      l2_cache_accesses_from_l2_hwpf
         [L2 Cache Accesses from L2 HWPF]
         [l2_pf_hit_l2 + l2_pf_miss_l2_hit_l3 + l2_pf_miss_l2_l3]
      l2_cache_hits_from_l2_hwpf
         [L2 Cache Hits from L2 HWPF]
         [l2_pf_hit_l2 + l2_pf_miss_l2_hit_l3 + l2_pf_miss_l2_l3]
    ...
    
    This was wrong and led to counting hits the same as accesses. Section
    2.1.15.2 "Performance Measurement" of "PPR for AMD Family 17h Model 31h
    B0 - 55803 Rev 0.54 - Sep 12, 2019", documents the hits event with
    EventCode 0x70 which is the same as l2_pf_hit_l2.
    
    Fix this, and massage the description for l2_pf_hit_l2 as the hits event
    is now the duplicate of l2_pf_hit_l2. AMD recommends using the recommended
    event over other events if the duplicate exists and maintain both for
    consistency. Hence, l2_cache_hits_from_l2_hwpf should override
    l2_pf_hit_l2.
    
    Before:
    
     # perf stat -M l2_cache_accesses_from_l2_hwpf,l2_cache_hits_from_l2_hwpf sleep 1
    
     Performance counter stats for 'sleep 1':
    
                 1,436      l2_pf_miss_l2_l3          # 11114.00 l2_cache_accesses_from_l2_hwpf
                                                      # 11114.00 l2_cache_hits_from_l2_hwpf
                 4,482      l2_pf_hit_l2
                 5,196      l2_pf_miss_l2_hit_l3
    
           1.001765339 seconds time elapsed
    
    After:
    
     # perf stat -M l2_cache_accesses_from_l2_hwpf sleep 1
    
     Performance counter stats for 'sleep 1':
    
                 1,477      l2_pf_miss_l2_l3          # 10442.00 l2_cache_accesses_from_l2_hwpf
                 3,978      l2_pf_hit_l2
                 4,987      l2_pf_miss_l2_hit_l3
    
           1.001491186 seconds time elapsed
    
     # perf stat -e l2_cache_hits_from_l2_hwpf sleep 1
    
     Performance counter stats for 'sleep 1':
    
                 3,983      l2_cache_hits_from_l2_hwpf
    
           1.001329970 seconds time elapsed
    
    Note the difference in performance counter values for the accesses
    versus the hits after the fix, and the hits event now counting the same
    as l2_pf_hit_l2.
    
    Fixes: 08ed77e414ab ("perf vendor events amd: Add recommended events")
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=206537
    Reviewed-by: Robert Richter <rrichter@amd.com>
    Signed-off-by: Smita Koralahalli <Smita.KoralahalliChannabasappa@amd.com>
    Tested-by: Arnaldo Carvalho de Melo <acme@kernel.org> # On a 3900X
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Kim Phillips <kim.phillips@amd.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Martin Liška <mliska@suse.cz>
    Cc: Michael Petlan <mpetlan@redhat.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Vijay Thakkar <vijaythakkar@me.com>
    Cc: linux-perf-users@vger.kernel.org
    Link: https://lore.kernel.org/r/20210406215944.113332-2-Smita.KoralahalliChannabasappa@amd.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 02101c6645b20f8baf925f583669ee0344a24c8f
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Thu Apr 8 14:31:50 2021 +0200

    mac80211: bail out if cipher schemes are invalid
    
    [ Upstream commit db878e27a98106a70315d264cc92230d84009e72 ]
    
    If any of the cipher schemes specified by the driver are invalid, bail
    out and fail the registration rather than just warning.  Otherwise, we
    might later crash when we try to use the invalid cipher scheme, e.g.
    if the hdr_len is (significantly) less than the pn_offs + pn_len, we'd
    have an out-of-bounds access in RX validation.
    
    Fixes: 2475b1cc0d52 ("mac80211: add generic cipher scheme support")
    Link: https://lore.kernel.org/r/20210408143149.38a3a13a1b19.I6b7f5790fa0958ed8049cf02ac2a535c61e9bc96@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42667ed491b2e0cff0170abc7fa5d4cd36294b8f
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Apr 4 12:26:23 2021 -0700

    powerpc: iommu: fix build when neither PCI or IBMVIO is set
    
    [ Upstream commit b27dadecdf9102838331b9a0b41ffc1cfe288154 ]
    
    When neither CONFIG_PCI nor CONFIG_IBMVIO is set/enabled, iommu.c has a
    build error. The fault injection code is not useful in that kernel config,
    so make the FAIL_IOMMU option depend on PCI || IBMVIO.
    
    Prevents this build error (warning escalated to error):
    ../arch/powerpc/kernel/iommu.c:178:30: error: 'fail_iommu_bus_notifier' defined but not used [-Werror=unused-variable]
      178 | static struct notifier_block fail_iommu_bus_notifier = {
    
    Fixes: d6b9a81b2a45 ("powerpc: IOMMU fault injection")
    Reported-by: kernel test robot <lkp@intel.com>
    Suggested-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Acked-by: Randy Dunlap <rdunlap@infradead.org> # build-tested
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210404192623.10697-1-rdunlap@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 822ea5559c518d22163cad4e6abdb7e21642475a
Author: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
Date:   Tue Apr 6 12:16:01 2021 -0400

    powerpc/perf: Fix PMU constraint check for EBB events
    
    [ Upstream commit 10f8f96179ecc7f69c927f6d231f6d02736cea83 ]
    
    The power PMU group constraints includes check for EBB events to make
    sure all events in a group must agree on EBB. This will prevent
    scheduling EBB and non-EBB events together. But in the existing check,
    settings for constraint mask and value is interchanged. Patch fixes the
    same.
    
    Before the patch, PMU selftest "cpu_event_pinned_vs_ebb_test" fails with
    below in dmesg logs. This happens because EBB event gets enabled along
    with a non-EBB cpu event.
    
      [35600.453346] cpu_event_pinne[41326]: illegal instruction (4)
      at 10004a18 nip 10004a18 lr 100049f8 code 1 in
      cpu_event_pinned_vs_ebb_test[10000000+10000]
    
    Test results after the patch:
    
      $ ./pmu/ebb/cpu_event_pinned_vs_ebb_test
      test: cpu_event_pinned_vs_ebb
      tags: git_version:v5.12-rc5-93-gf28c3125acd3-dirty
      Binding to cpu 8
      EBB Handler is at 0x100050c8
      read error on event 0x7fffe6bd4040!
      PM_RUN_INST_CMPL: result 9872 running/enabled 37930432
      success: cpu_event_pinned_vs_ebb
    
    This bug was hidden by other logic until commit 1908dc911792 (perf:
    Tweak perf_event_attr::exclusive semantics).
    
    Fixes: 4df489991182 ("powerpc/perf: Add power8 EBB support")
    Reported-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Athira Rajeev <atrajeev@linux.vnet.ibm.com>
    [mpe: Mention commit 1908dc911792]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1617725761-1464-1-git-send-email-atrajeev@linux.vnet.ibm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6dba51f6e0c95ae8a3e3da9f5ef0961b095c9f4
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Mar 31 11:38:42 2021 +1100

    powerpc/64s: Use htab_convert_pte_flags() in hash__mark_rodata_ro()
    
    [ Upstream commit 2c02e656a29d5f64193eb93da92781bcf0517146 ]
    
    In hash__mark_rodata_ro() we pass the raw PP_RXXX value to
    hash__change_memory_range(). That has the effect of setting the key to
    zero, because PP_RXXX contains no key value.
    
    Fix it by using htab_convert_pte_flags(), which knows how to convert a
    pgprot into a pp value, including the key.
    
    Fixes: d94b827e89dc ("powerpc/book3s64/kuap: Use Key 3 for kernel mapping with hash translation")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Daniel Axtens <dja@axtens.net>
    Link: https://lore.kernel.org/r/20210331003845.216246-3-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit defbe7df388365917e333fb4b33f1d6ed80cb3cf
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Wed Mar 31 11:38:41 2021 +1100

    powerpc/pseries: Add key to flags in pSeries_lpar_hpte_updateboltedpp()
    
    [ Upstream commit b56d55a5aa4aa9fc166595a7feb57f153ef7b555 ]
    
    The flags argument to plpar_pte_protect() (aka. H_PROTECT), includes
    the key in bits 9-13, but currently we always set those bits to zero.
    
    In the past that hasn't been a problem because we always used key 0
    for the kernel, and updateboltedpp() is only used for kernel mappings.
    
    However since commit d94b827e89dc ("powerpc/book3s64/kuap: Use Key 3
    for kernel mapping with hash translation") we are now inadvertently
    changing the key (to zero) when we call plpar_pte_protect().
    
    That hasn't broken anything because updateboltedpp() is only used for
    STRICT_KERNEL_RWX, which is currently disabled on 64s due to other
    bugs.
    
    But we want to fix that, so first we need to pass the key correctly to
    plpar_pte_protect(). We can't pass our newpp value directly in, we
    have to convert it into the form expected by the hcall.
    
    The hcall we're using here is H_PROTECT, which is specified in section
    14.5.4.1.6 of LoPAPR v1.1.
    
    It takes a `flags` parameter, and the description for flags says:
    
     * flags: AVPN, pp0, pp1, pp2, key0-key4, n, and for the CMO
       option: CMO Option flags as defined in Table 189‚
    
    If you then go to the start of the parent section, 14.5.4.1, on page
    405, it says:
    
    Register Linkage (For hcall() tokens 0x04 - 0x18)
     * On Call
       * R3 function call token
       * R4 flags (see Table 178‚ “Page Frame Table Access flags field
         definition‚” on page 401)
    
    Then you have to go to section 14.5.3, and on page 394 there is a list
    of hcalls and their tokens (table 176), and there you can see that
    H_PROTECT == 0x18.
    
    Finally you can look at table 178, on page 401, where it specifies the
    layout of the bits for the key:
    
     Bit     Function
     -----------------
     50-54 | key0-key4
    
    Those are big-endian bit numbers, converting to normal bit numbers you
    get bits 9-13, or 0x3e00.
    
    In the kernel we have:
    
      #define HPTE_R_KEY_HI         ASM_CONST(0x3000000000000000)
      #define HPTE_R_KEY_LO         ASM_CONST(0x0000000000000e00)
    
    So the LO bits of newpp are already in the right place, and the HI
    bits need to be shifted down by 48.
    
    Fixes: d94b827e89dc ("powerpc/book3s64/kuap: Use Key 3 for kernel mapping with hash translation")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210331003845.216246-2-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e40c52ee67b155ad59f59e73ea136d02685f0e0d
Author: Jordan Niethe <jniethe5@gmail.com>
Date:   Mon Feb 8 14:29:56 2021 +1100

    powerpc/64s: Fix pte update for kernel memory on radix
    
    [ Upstream commit b8b2f37cf632434456182e9002d63cbc4cccc50c ]
    
    When adding a PTE a ptesync is needed to order the update of the PTE
    with subsequent accesses otherwise a spurious fault may be raised.
    
    radix__set_pte_at() does not do this for performance gains. For
    non-kernel memory this is not an issue as any faults of this kind are
    corrected by the page fault handler. For kernel memory these faults
    are not handled. The current solution is that there is a ptesync in
    flush_cache_vmap() which should be called when mapping from the
    vmalloc region.
    
    However, map_kernel_page() does not call flush_cache_vmap(). This is
    troublesome in particular for code patching with Strict RWX on radix.
    In do_patch_instruction() the page frame that contains the instruction
    to be patched is mapped and then immediately patched. With no ordering
    or synchronization between setting up the PTE and writing to the page
    it is possible for faults.
    
    As the code patching is done using __put_user_asm_goto() the resulting
    fault is obscured - but using a normal store instead it can be seen:
    
      BUG: Unable to handle kernel data access on write at 0xc008000008f24a3c
      Faulting instruction address: 0xc00000000008bd74
      Oops: Kernel access of bad area, sig: 11 [#1]
      LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA PowerNV
      Modules linked in: nop_module(PO+) [last unloaded: nop_module]
      CPU: 4 PID: 757 Comm: sh Tainted: P           O      5.10.0-rc5-01361-ge3c1b78c8440-dirty #43
      NIP:  c00000000008bd74 LR: c00000000008bd50 CTR: c000000000025810
      REGS: c000000016f634a0 TRAP: 0300   Tainted: P           O       (5.10.0-rc5-01361-ge3c1b78c8440-dirty)
      MSR:  9000000000009033 <SF,HV,EE,ME,IR,DR,RI,LE>  CR: 44002884  XER: 00000000
      CFAR: c00000000007c68c DAR: c008000008f24a3c DSISR: 42000000 IRQMASK: 1
    
    This results in the kind of issue reported here:
      https://lore.kernel.org/linuxppc-dev/15AC5B0E-A221-4B8C-9039-FA96B8EF7C88@lca.pw/
    
    Chris Riedl suggested a reliable way to reproduce the issue:
      $ mount -t debugfs none /sys/kernel/debug
      $ (while true; do echo function > /sys/kernel/debug/tracing/current_tracer ; echo nop > /sys/kernel/debug/tracing/current_tracer ; done) &
    
    Turning ftrace on and off does a large amount of code patching which
    in usually less then 5min will crash giving a trace like:
    
       ftrace-powerpc: (____ptrval____): replaced (4b473b11) != old (60000000)
       ------------[ ftrace bug ]------------
       ftrace failed to modify
       [<c000000000bf8e5c>] napi_busy_loop+0xc/0x390
        actual:   11:3b:47:4b
       Setting ftrace call site to call ftrace function
       ftrace record flags: 80000001
        (1)
        expected tramp: c00000000006c96c
       ------------[ cut here ]------------
       WARNING: CPU: 4 PID: 809 at kernel/trace/ftrace.c:2065 ftrace_bug+0x28c/0x2e8
       Modules linked in: nop_module(PO-) [last unloaded: nop_module]
       CPU: 4 PID: 809 Comm: sh Tainted: P           O      5.10.0-rc5-01360-gf878ccaf250a #1
       NIP:  c00000000024f334 LR: c00000000024f330 CTR: c0000000001a5af0
       REGS: c000000004c8b760 TRAP: 0700   Tainted: P           O       (5.10.0-rc5-01360-gf878ccaf250a)
       MSR:  900000000282b033 <SF,HV,VEC,VSX,EE,FP,ME,IR,DR,RI,LE>  CR: 28008848  XER: 20040000
       CFAR: c0000000001a9c98 IRQMASK: 0
       GPR00: c00000000024f330 c000000004c8b9f0 c000000002770600 0000000000000022
       GPR04: 00000000ffff7fff c000000004c8b6d0 0000000000000027 c0000007fe9bcdd8
       GPR08: 0000000000000023 ffffffffffffffd8 0000000000000027 c000000002613118
       GPR12: 0000000000008000 c0000007fffdca00 0000000000000000 0000000000000000
       GPR16: 0000000023ec37c5 0000000000000000 0000000000000000 0000000000000008
       GPR20: c000000004c8bc90 c0000000027a2d20 c000000004c8bcd0 c000000002612fe8
       GPR24: 0000000000000038 0000000000000030 0000000000000028 0000000000000020
       GPR28: c000000000ff1b68 c000000000bf8e5c c00000000312f700 c000000000fbb9b0
       NIP ftrace_bug+0x28c/0x2e8
       LR  ftrace_bug+0x288/0x2e8
       Call Trace:
         ftrace_bug+0x288/0x2e8 (unreliable)
         ftrace_modify_all_code+0x168/0x210
         arch_ftrace_update_code+0x18/0x30
         ftrace_run_update_code+0x44/0xc0
         ftrace_startup+0xf8/0x1c0
         register_ftrace_function+0x4c/0xc0
         function_trace_init+0x80/0xb0
         tracing_set_tracer+0x2a4/0x4f0
         tracing_set_trace_write+0xd4/0x130
         vfs_write+0xf0/0x330
         ksys_write+0x84/0x140
         system_call_exception+0x14c/0x230
         system_call_common+0xf0/0x27c
    
    To fix this when updating kernel memory PTEs using ptesync.
    
    Fixes: f1cb8f9beba8 ("powerpc/64s/radix: avoid ptesync after set_pte and ptep_set_access_flags")
    Signed-off-by: Jordan Niethe <jniethe5@gmail.com>
    Reviewed-by: Nicholas Piggin <npiggin@gmail.com>
    [mpe: Tidy up change log slightly]
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210208032957.1232102-1-jniethe5@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79f754d58e529e922b9084f4137555d58ff2efe7
Author: Mike Marciniszyn <mike.marciniszyn@cornelisnetworks.com>
Date:   Mon Mar 29 09:54:14 2021 -0400

    IB/hfi1: Use kzalloc() for mmu_rb_handler allocation
    
    [ Upstream commit ca5f72568e034e1295a7ae350b1f786fcbfb2848 ]
    
    The code currently assumes that the mmu_notifier struct
    embedded in mmu_rb_handler only contains two fields.
    
    There are now extra fields:
    
    struct mmu_notifier {
            struct hlist_node hlist;
            const struct mmu_notifier_ops *ops;
            struct mm_struct *mm;
            struct rcu_head rcu;
            unsigned int users;
    };
    
    Given that there in no init for the mmu_notifier, a kzalloc() should
    be used to insure that any newly added fields are given a predictable
    initial value of zero.
    
    Fixes: 06e0ffa69312 ("IB/hfi1: Re-factor MMU notification code")
    Link: https://lore.kernel.org/r/1617026056-50483-9-git-send-email-dennis.dalessandro@cornelisnetworks.com
    Reviewed-by: Adam Goldman <adam.goldman@intel.com>
    Signed-off-by: Mike Marciniszyn <mike.marciniszyn@cornelisnetworks.com>
    Signed-off-by: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 769003fd970c05a2ad21fee5429dd5a49feefd09
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Apr 7 11:12:48 2021 +0100

    liquidio: Fix unintented sign extension of a left shift of a u16
    
    [ Upstream commit 298b58f00c0f86868ea717426beb5c1198772f81 ]
    
    The macro CN23XX_PEM_BAR1_INDEX_REG is being used to shift oct->pcie_port
    (a u16) left 24 places. There are two subtle issues here, first the
    shift gets promoted to an signed int and then sign extended to a u64.
    If oct->pcie_port is 0x80 or more then the upper bits get sign extended
    to 1. Secondly shfiting a u16 24 bits will lead to an overflow so it
    needs to be cast to a u64 for all the bits to not overflow.
    
    It is entirely possible that the u16 port value is never large enough
    for this to fail, but it is useful to fix unintended overflows such
    as this.
    
    Fix this by casting the port parameter to the macro to a u64 before
    the shift.
    
    Addresses-Coverity: ("Unintended sign extension")
    Fixes: 5bc67f587ba7 ("liquidio: CN23XX register definitions")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66b672eab0ae206c5123a2a91198ce23dd41d1e4
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Wed Apr 7 11:20:27 2021 +0200

    ASoC: simple-card: fix possible uninitialized single_cpu local variable
    
    [ Upstream commit fa74c223b6fd78a5314b4c61b9abdbed3c2185b4 ]
    
    The 'single_cpu' local variable is assigned by asoc_simple_parse_dai()
    and later used in a asoc_simple_canonicalize_cpu() call, assuming the
    entire function did not exit on errors.
    
    However the first function returns 0 if passed device_node is NULL,
    thus leaving the variable uninitialized and reporting success.
    
    Addresses-Coverity: Uninitialized scalar variable
    Fixes: 8f7f298a3337 ("ASoC: simple-card-utils: separate asoc_simple_card_parse_dai()")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Acked-by: Sameer Pujar <spujar@nvidia.com>
    Link: https://lore.kernel.org/r/20210407092027.60769-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4a6de2e3d484b86ed693778015d504fa05516be
Author: Alexandru Elisei <alexandru.elisei@arm.com>
Date:   Wed Apr 7 15:48:57 2021 +0100

    KVM: arm64: Initialize VCPU mdcr_el2 before loading it
    
    [ Upstream commit 263d6287da1433aba11c5b4046388f2cdf49675c ]
    
    When a VCPU is created, the kvm_vcpu struct is initialized to zero in
    kvm_vm_ioctl_create_vcpu(). On VHE systems, the first time
    vcpu.arch.mdcr_el2 is loaded on hardware is in vcpu_load(), before it is
    set to a sensible value in kvm_arm_setup_debug() later in the run loop. The
    result is that KVM executes for a short time with MDCR_EL2 set to zero.
    
    This has several unintended consequences:
    
    * Setting MDCR_EL2.HPMN to 0 is constrained unpredictable according to ARM
      DDI 0487G.a, page D13-3820. The behavior specified by the architecture
      in this case is for the PE to behave as if MDCR_EL2.HPMN is set to a
      value less than or equal to PMCR_EL0.N, which means that an unknown
      number of counters are now disabled by MDCR_EL2.HPME, which is zero.
    
    * The host configuration for the other debug features controlled by
      MDCR_EL2 is temporarily lost. This has been harmless so far, as Linux
      doesn't use the other fields, but that might change in the future.
    
    Let's avoid both issues by initializing the VCPU's mdcr_el2 field in
    kvm_vcpu_vcpu_first_run_init(), thus making sure that the MDCR_EL2 register
    has a consistent value after each vcpu_load().
    
    Fixes: d5a21bcc2995 ("KVM: arm64: Move common VHE/non-VHE trap config in separate functions")
    Signed-off-by: Alexandru Elisei <alexandru.elisei@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210407144857.199746-3-alexandru.elisei@arm.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 117740621dbc24265aa4989c82e9819699dcdc8d
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Apr 4 10:04:29 2021 +0200

    HID: lenovo: Map mic-mute button to KEY_F20 instead of KEY_MICMUTE
    
    [ Upstream commit 617103246cfd19af837e4cb614ba9f877c4f7779 ]
    
    Mapping the mic-mute button to KEY_MICMUTE is technically correct but
    KEY_MICMUTE translates to a scancode of 256 (248 + 8) under X,
    which does not fit in 8 bits, so it does not work.
    
    Because of this userspace is expecting KEY_F20 instead,
    theoretically KEY_MICMUTE should work under Wayland but even
    there it does not work, because the desktop-environment is
    listening only for KEY_F20 and not for KEY_MICMUTE.
    
    Fixes: bc04b37ea0ec ("HID: lenovo: Add ThinkPad 10 Ultrabook Keyboard support")
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59fcf294a3dd0c41352435cde0741465b29b4bdb
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Apr 4 10:04:26 2021 +0200

    HID: lenovo: Check hid_get_drvdata() returns non NULL in lenovo_event()
    
    [ Upstream commit 34348a8661e3cd67dcf6938f08c8bb77522301f7 ]
    
    The HID lenovo probe function only attaches drvdata to one of the
    USB interfaces, but lenovo_event() will get called for all USB interfaces
    to which hid-lenovo is bound.
    
    This allows a malicious device to fake being a device handled by
    hid-lenovo, which generates events for which lenovo_event() has
    special handling (and thus dereferences hid_get_drvdata()) on another
    interface triggering a NULL pointer exception.
    
    Add a check for hid_get_drvdata() returning NULL, avoiding this
    possible NULL pointer exception.
    
    Fixes: bc04b37ea0ec ("HID: lenovo: Add ThinkPad 10 Ultrabook Keyboard support")
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit da317e93f353b8f803cf262b2bac142052e1b8c8
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Apr 4 10:04:25 2021 +0200

    HID: lenovo: Fix lenovo_led_set_tp10ubkbd() error handling
    
    [ Upstream commit 658d04e6eb6be1601ae95d7bee92bbf4096cdc1e ]
    
    Fix the following issues with lenovo_led_set_tp10ubkbd() error handling:
    
    1. On success hid_hw_raw_request() returns the number of bytes sent.
       So we should check for (ret != 3) rather then for (ret != 0).
    
    2. Actually propagate errors to the caller.
    
    3. Since the LEDs are part of an USB keyboard-dock the mute LEDs can go
       away at any time. Don't log an error when ret == -ENODEV and set the
       LED_HW_PLUGGABLE flag to avoid errors getting logged when the USB gets
       disconnected.
    
    Fixes: bc04b37ea0ec ("HID: lenovo: Add ThinkPad 10 Ultrabook Keyboard support")
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 217c22918c3a5fb7f5f0c8a105073f1a8a202c57
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Apr 4 10:04:24 2021 +0200

    HID: lenovo: Use brightness_set_blocking callback for setting LEDs brightness
    
    [ Upstream commit bbf62645255f120bc2e7488c237e3f04da42ec70 ]
    
    The lenovo_led_brightness_set function may sleep, so we should have the
    the led_class_dev's brightness_set_blocking callback point to it, rather
    then the regular brightness_set callback.
    
    When toggled through sysfs this is not a problem, but the brightness_set
    callback may be called from atomic context when using LED-triggers.
    
    Fixes: bc04b37ea0ec ("HID: lenovo: Add ThinkPad 10 Ultrabook Keyboard support")
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Acked-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eefc81ca6f3000f1ab99721bd1c80c73caf3b394
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Apr 6 13:35:34 2021 +0200

    ALSA: usb-audio: Add error checks for usb_driver_claim_interface() calls
    
    [ Upstream commit 5fb45414ae03421255593fd5556aa2d1d82303aa ]
    
    There are a few calls of usb_driver_claim_interface() but all of those
    miss the proper error checks, as reported by Coverity.  This patch
    adds those missing checks.
    
    Along with it, replace the magic pointer with -1 with a constant
    USB_AUDIO_IFACE_UNUSED for better readability.
    
    Reported-by: coverity-bot <keescook+coverity-bot@chromium.org>
    Addresses-Coverity-ID: 1475943 ("Error handling issues")
    Addresses-Coverity-ID: 1475944 ("Error handling issues")
    Addresses-Coverity-ID: 1475945 ("Error handling issues")
    Fixes: b1ce7ba619d9 ("ALSA: usb-audio: claim autodetected PCM interfaces all at once")
    Fixes: e5779998bf8b ("ALSA: usb-audio: refactor code")
    Link: https://lore.kernel.org/r/202104051059.FB7F3016@keescook
    Link: https://lore.kernel.org/r/20210406113534.30455-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0fbef3697f0fd74b43f36e35c71175b7b074a451
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Sat Mar 20 10:54:13 2021 +0800

    iommu/vt-d: Invalidate PASID cache when root/context entry changed
    
    [ Upstream commit c0474a606ecb9326227b4d68059942f9db88a897 ]
    
    When the Intel IOMMU is operating in the scalable mode, some information
    from the root and context table may be used to tag entries in the PASID
    cache. Software should invalidate the PASID-cache when changing root or
    context table entries.
    
    Suggested-by: Ashok Raj <ashok.raj@intel.com>
    Fixes: 7373a8cc38197 ("iommu/vt-d: Setup context and enable RID2PASID support")
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/20210320025415.641201-4-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66c24699f266ff310381a9552d3576eea8ad6e20
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Sat Mar 20 10:54:12 2021 +0800

    iommu/vt-d: Remove WO permissions on second-level paging entries
    
    [ Upstream commit eea53c5816889ee8b64544fa2e9311a81184ff9c ]
    
    When the first level page table is used for IOVA translation, it only
    supports Read-Only and Read-Write permissions. The Write-Only permission
    is not supported as the PRESENT bit (implying Read permission) should
    always set. When using second level, we still give separate permissions
    that allows WriteOnly which seems inconsistent and awkward. We want to
    have consistent behavior. After moving to 1st level, we don't want things
    to work sometimes, and break if we use 2nd level for the same mappings.
    Hence remove this configuration.
    
    Suggested-by: Ashok Raj <ashok.raj@intel.com>
    Fixes: b802d070a52a1 ("iommu/vt-d: Use iova over first level")
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/20210320025415.641201-3-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 160faa083e5d4c4806f6fe6b6a900eb6fdff0148
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Sat Mar 20 10:54:11 2021 +0800

    iommu/vt-d: Report the right page fault address
    
    [ Upstream commit 03d205094af45bca4f8e0498c461a893aa3ec6d9 ]
    
    The Address field of the Page Request Descriptor only keeps bit [63:12]
    of the offending address. Convert it to a full address before reporting
    it to device drivers.
    
    Fixes: eb8d93ea3c1d3 ("iommu/vt-d: Report page request faults for guest SVA")
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/20210320025415.641201-2-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 943cf2a239f8a77e00c23efd6e9f6ce976233ace
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Tue Mar 30 10:11:45 2021 +0800

    iommu/vt-d: Report right snoop capability when using FL for IOVA
    
    [ Upstream commit 6c00612d0cba10f7d0917cf1f73c945003ed4cd7 ]
    
    The Intel VT-d driver checks wrong register to report snoop capablility
    when using first level page table for GPA to HPA translation. This might
    lead the IOMMU driver to say that it supports snooping control, but in
    reality, it does not. Fix this by always setting PASID-table-entry.PGSNP
    whenever a pasid entry is setting up for GPA to HPA translation so that
    the IOMMU driver could report snoop capability as long as it runs in the
    scalable mode.
    
    Fixes: b802d070a52a1 ("iommu/vt-d: Use iova over first level")
    Suggested-by: Rajesh Sankaran <rajesh.sankaran@intel.com>
    Suggested-by: Kevin Tian <kevin.tian@intel.com>
    Suggested-by: Ashok Raj <ashok.raj@intel.com>
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/20210330021145.13824-1-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32a874c6dedae438d0fc3df27ce5296bb0fe38e5
Author: Xiang Chen <chenxiang66@hisilicon.com>
Date:   Thu Mar 25 11:38:24 2021 +0800

    iommu: Fix a boundary issue to avoid performance drop
    
    [ Upstream commit 3431c3f660a39f6ced954548a59dba6541ce3eb1 ]
    
    After the change of patch ("iommu: Switch gather->end to the
    inclusive end"), the performace drops from 1600+K IOPS to 1200K in our
    kunpeng ARM64 platform.
    We find that the range [start1, end1) actually is joint from the range
    [end1, end2), but it is considered as disjoint after the change,
    so it needs more times of TLB sync, and spends more time on it.
    So fix the boundary issue to avoid performance drop.
    
    Fixes: 862c3715de8f ("iommu: Switch gather->end to the inclusive end")
    Signed-off-by: Xiang Chen <chenxiang66@hisilicon.com>
    Acked-by: Will Deacon <will@kernel.org>
    Link: https://lore.kernel.org/r/1616643504-120688-1-git-send-email-chenxiang66@hisilicon.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e89f28b8be6564ec84a16186704067339756353d
Author: Lu Baolu <baolu.lu@linux.intel.com>
Date:   Sat Mar 20 10:41:56 2021 +0800

    iommu/vt-d: Don't set then clear private data in prq_event_thread()
    
    [ Upstream commit 1d421058c815d54113d9afdf6db3f995c788cf0d ]
    
    The VT-d specification (section 7.6) requires that the value in the
    Private Data field of a Page Group Response Descriptor must match
    the value in the Private Data field of the respective Page Request
    Descriptor.
    
    The private data field of a page group response descriptor is set then
    immediately cleared in prq_event_thread(). This breaks the rule defined
    by the VT-d specification. Fix it by moving clearing code up.
    
    Fixes: 5b438f4ba315d ("iommu/vt-d: Support page request in scalable mode")
    Cc: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Reviewed-by: Liu Yi L <yi.l.liu@intel.com>
    Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
    Link: https://lore.kernel.org/r/20210320024156.640798-1-baolu.lu@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 77e74a050dcea86725273a270c47ded358549775
Author: Wang Wensheng <wangwensheng4@huawei.com>
Date:   Tue Apr 6 12:17:59 2021 +0000

    KVM: arm64: Fix error return code in init_hyp_mode()
    
    [ Upstream commit 52b9e265d22bccc5843e167da76ab119874e2883 ]
    
    Fix to return a negative error code from the error handling
    case instead of 0, as done elsewhere in this function.
    
    Fixes: eeeee7193df0 ("KVM: arm64: Bootstrap PSCI SMC handler in nVHE EL2")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Wensheng <wangwensheng4@huawei.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210406121759.5407-1-wangwensheng4@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 793d43c4329795807697dc3afb3a2fd8a9355930
Author: Álvaro Fernández Rojas <noltari@gmail.com>
Date:   Sun Mar 14 17:43:46 2021 +0100

    mips: bmips: fix syscon-reboot nodes
    
    [ Upstream commit cde58b861a1d365568588adda59d42351c0c4ad3 ]
    
    Commit a23c4134955e added the clock controller nodes, incorrectly changing the
    syscon-reboot nodes addresses.
    
    Fixes: a23c4134955e ("MIPS: BMIPS: add clock controller nodes")
    Signed-off-by: Álvaro Fernández Rojas <noltari@gmail.com>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit facdf32dfcd060e947a1fd8f8e156ec61321eb97
Author: Salil Mehta <salil.mehta@huawei.com>
Date:   Mon Apr 5 18:28:25 2021 +0100

    net: hns3: Limiting the scope of vector_ring_chain variable
    
    [ Upstream commit d392ecd1bc29ae15b0e284d5f732c2d36f244271 ]
    
    Limiting the scope of the variable vector_ring_chain to the block where it
    is used.
    
    Fixes: 424eb834a9be ("net: hns3: Unified HNS3 {VF|PF} Ethernet Driver for hip08 SoC")
    Signed-off-by: Salil Mehta <salil.mehta@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e82bcb775faaa421a42eaa7d1d757d40d639594
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Apr 2 14:44:42 2021 +0300

    nfc: pn533: prevent potential memory corruption
    
    [ Upstream commit ca4d4c34ae9aa5c3c0da76662c5e549d2fc0cc86 ]
    
    If the "type_a->nfcid_len" is too large then it would lead to memory
    corruption in pn533_target_found_type_a() when we do:
    
            memcpy(nfc_tgt->nfcid1, tgt_type_a->nfcid_data, nfc_tgt->nfcid1_len);
    
    Fixes: c3b1e1e8a76f ("NFC: Export NFCID1 from pn533")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59bbdeee1dcbed943adf9bc140d1fee64e6a67df
Author: Håkon Bugge <haakon.bugge@oracle.com>
Date:   Mon Mar 22 14:35:32 2021 +0100

    RDMA/core: Fix corrupted SL on passive side
    
    [ Upstream commit 194f64a3cad3ab9e381e996a13089de3215d1887 ]
    
    On RoCE systems, a CM REQ contains a Primary Hop Limit > 1 and Primary
    Subnet Local is zero.
    
    In cm_req_handler(), the cm_process_routed_req() function is called. Since
    the Primary Subnet Local value is zero in the request, and since this is
    RoCE (Primary Local LID is permissive), the following statement will be
    executed:
    
          IBA_SET(CM_REQ_PRIMARY_SL, req_msg, wc->sl);
    
    This corrupts SL in req_msg if it was different from zero. In other words,
    a request to setup a connection using an SL != zero, will not be honored,
    and a connection using SL zero will be created instead.
    
    Fixed by not calling cm_process_routed_req() on RoCE systems, the
    cm_process_route_req() is only for IB anyhow.
    
    Fixes: 3971c9f6dbf2 ("IB/cm: Add interim support for routed paths")
    Link: https://lore.kernel.org/r/1616420132-31005-1-git-send-email-haakon.bugge@oracle.com
    Signed-off-by: Håkon Bugge <haakon.bugge@oracle.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af5a6af4d450c54619126dfea00218dcc051d8d1
Author: Andrew Scull <ascull@google.com>
Date:   Thu Mar 18 14:33:07 2021 +0000

    bug: Remove redundant condition check in report_bug
    
    [ Upstream commit 3ad1a6cb0abc63d036fc866bd7c2c5983516dec5 ]
    
    report_bug() will return early if it cannot find a bug corresponding to
    the provided address. The subsequent test for the bug will always be
    true so remove it.
    
    Fixes: 1b4cfe3c0a30d ("lib/bug.c: exclude non-BUG/WARN exceptions from report_bug()")
    Signed-off-by: Andrew Scull <ascull@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: "Steven Rostedt (VMware)" <rostedt@goodmis.org>
    Reviewed-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Acked-by: Will Deacon <will@kernel.org>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210318143311.839894-2-ascull@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5528b6014c49f7b150f38919b27f5e267ec61111
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Wed Mar 31 16:36:02 2021 +0800

    net/tipc: fix missing destroy_workqueue() on error in tipc_crypto_start()
    
    [ Upstream commit ac1db7acea67777be1ba86e36e058c479eab6508 ]
    
    Add the missing destroy_workqueue() before return from
    tipc_crypto_start() in the error handling case.
    
    Fixes: 1ef6f7c9390f ("tipc: add automatic session key exchange")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bc9833f5622d5996978889c251b0e5e0541bd2c
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Tue Mar 16 12:09:38 2021 +1100

    powerpc/pseries: Only register vio drivers if vio bus exists
    
    [ Upstream commit 11d92156f7a862091009d7655d19c1e7de37fc7a ]
    
    The vio bus is a fake bus, which we use on pseries LPARs (guests) to
    discover devices provided by the hypervisor. There's no need or sense
    in creating the vio bus on bare metal systems.
    
    Which is why commit 4336b9337824 ("powerpc/pseries: Make vio and
    ibmebus initcalls pseries specific") made the initialisation of the
    vio bus only happen in LPARs.
    
    However as a result of that commit we now see errors at boot on bare
    metal systems:
    
      Driver 'hvc_console' was unable to register with bus_type 'vio' because the bus was not initialized.
      Driver 'tpm_ibmvtpm' was unable to register with bus_type 'vio' because the bus was not initialized.
    
    This happens because those drivers are built-in, and are calling
    vio_register_driver(). It in turn calls driver_register() with a
    reference to vio_bus_type, but we haven't registered vio_bus_type with
    the driver core.
    
    Fix it by also guarding vio_register_driver() with a check to see if
    we are on pseries.
    
    Fixes: 4336b9337824 ("powerpc/pseries: Make vio and ibmebus initcalls pseries specific")
    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Tested-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Reviewed-by: Tyrel Datwyler <tyreld@linux.ibm.com>
    Link: https://lore.kernel.org/r/20210316010938.525657-1-mpe@ellerman.id.au
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c5e5cea64d1e1df758d7dca15bd82046ee4c5d2
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Mar 30 12:28:52 2021 +0200

    udp: never accept GSO_FRAGLIST packets
    
    [ Upstream commit 78352f73dc5047f3f744764cc45912498c52f3c9 ]
    
    Currently the UDP protocol delivers GSO_FRAGLIST packets to
    the sockets without the expected segmentation.
    
    This change addresses the issue introducing and maintaining
    a couple of new fields to explicitly accept SKB_GSO_UDP_L4
    or GSO_FRAGLIST packets. Additionally updates  udp_unexpected_gso()
    accordingly.
    
    UDP sockets enabling UDP_GRO stil keep accept_udp_fraglist
    zeroed.
    
    v1 -> v2:
     - use 2 bits instead of a whole GSO bitmask (Willem)
    
    Fixes: 9fd1ff5d2ac7 ("udp: Support UDP fraglist GRO/GSO.")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 450687386cd16d081b58cd7a342acff370a96078
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Tue Mar 30 12:28:50 2021 +0200

    udp: skip L4 aggregation for UDP tunnel packets
    
    [ Upstream commit 18f25dc399901426dff61e676ba603ff52c666f7 ]
    
    If NETIF_F_GRO_FRAGLIST or NETIF_F_GRO_UDP_FWD are enabled, and there
    are UDP tunnels available in the system, udp_gro_receive() could end-up
    doing L4 aggregation (either SKB_GSO_UDP_L4 or SKB_GSO_FRAGLIST) at
    the outer UDP tunnel level for packets effectively carrying and UDP
    tunnel header.
    
    That could cause inner protocol corruption. If e.g. the relevant
    packets carry a vxlan header, different vxlan ids will be ignored/
    aggregated to the same GSO packet. Inner headers will be ignored, too,
    so that e.g. TCP over vxlan push packets will be held in the GRO
    engine till the next flush, etc.
    
    Just skip the SKB_GSO_UDP_L4 and SKB_GSO_FRAGLIST code path if the
    current packet could land in a UDP tunnel, and let udp_gro_receive()
    do GRO via udp_sk(sk)->gro_receive.
    
    The check implemented in this patch is broader than what is strictly
    needed, as the existing UDP tunnel could be e.g. configured on top of
    a different device: we could end-up skipping GRO at-all for some packets.
    
    Anyhow, that is a very thin corner case and covering it will add quite
    a bit of complexity.
    
    v1 -> v2:
     - hopefully clarify the commit message
    
    Fixes: 9fd1ff5d2ac7 ("udp: Support UDP fraglist GRO/GSO.")
    Fixes: 36707061d6ba ("udp: allow forwarding of plain (non-fraglisted) UDP GRO packets")
    Reviewed-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b86b44b9a4d776a83abffaf8ad9a4ff147d8dc2
Author: Andre Edich <andre.edich@microchip.com>
Date:   Mon Mar 29 11:45:36 2021 +0200

    net: phy: lan87xx: fix access to wrong register of LAN87xx
    
    [ Upstream commit fdb5cc6ab3b6a1c0122d3644a63ef9dc7a610d35 ]
    
    The function lan87xx_config_aneg_ext was introduced to configure
    LAN95xxA but as well writes to undocumented register of LAN87xx.
    This fix prevents that access.
    
    The function lan87xx_config_aneg_ext gets more suitable for the new
    behavior name.
    
    Reported-by: Måns Rullgård <mans@mansr.com>
    Fixes: 05b35e7eb9a1 ("smsc95xx: add phylib support")
    Signed-off-by: Andre Edich <andre.edich@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff4fed6152e756e102c79e19c02ae80f30645821
Author: Jia Zhou <zhou.jia2@zte.com.cn>
Date:   Tue Mar 30 13:19:23 2021 +0200

    ALSA: core: remove redundant spin_lock pair in snd_card_disconnect
    
    [ Upstream commit abc21649b3e5c34b143bf86f0c78e33d5815e250 ]
    
    modification in commit 2a3f7221acdd ("ALSA: core: Fix card races between
    register and disconnect") resulting in this problem.
    
    Fixes: 2a3f7221acdd ("ALSA: core: Fix card races between register and disconnect")
    Signed-off-by: Jia Zhou <zhou.jia2@zte.com.cn>
    Signed-off-by: Yi Wang <wang.yi59@zte.com.cn>
    Link: https://lore.kernel.org/r/1616989007-34429-1-git-send-email-wang.yi59@zte.com.cn
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62413972f5266568848a36fd15160397b211fa74
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Sat Mar 27 12:28:57 2021 +0300

    ASoC: q6afe-clocks: fix reprobing of the driver
    
    [ Upstream commit 96fadf7e8ff49fdb74754801228942b67c3eeebd ]
    
    Q6afe-clocks driver can get reprobed. For example if the APR services
    are restarted after the firmware crash. However currently Q6afe-clocks
    driver will oops because hw.init will get cleared during first _probe
    call. Rewrite the driver to fill the clock data at runtime rather than
    using big static array of clocks.
    
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Reviewed-by: Stephen Boyd <sboyd@kernel.org>
    Fixes: 520a1c396d19 ("ASoC: q6afe-clocks: add q6afe clock controller")
    Link: https://lore.kernel.org/r/20210327092857.3073879-1-dmitry.baryshkov@linaro.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f52b9a88ebeb7301a374e72c0ead858548fecdb2
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Sat Mar 27 16:37:04 2021 +0800

    fs: dlm: fix missing unlock on error in accept_from_sock()
    
    [ Upstream commit 2fd8db2dd05d895961c7c7b9fa02d72f385560e4 ]
    
    Add the missing unlock before return from accept_from_sock()
    in the error handling case.
    
    Fixes: 6cde210a9758 ("fs: dlm: add helper for init connection")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51c7eda8b1883c6b9cf393d5b0adad8126b03f8e
Author: Álvaro Fernández Rojas <noltari@gmail.com>
Date:   Wed Mar 24 09:19:02 2021 +0100

    gpio: guard gpiochip_irqchip_add_domain() with GPIOLIB_IRQCHIP
    
    [ Upstream commit 9c7d24693d864f90b27aad5d15fbfe226c02898b ]
    
    The current code doesn't check if GPIOLIB_IRQCHIP is enabled, which results in
    a compilation error when trying to build gpio-regmap if CONFIG_GPIOLIB_IRQCHIP
    isn't enabled.
    
    Fixes: 6a45b0e2589f ("gpiolib: Introduce gpiochip_irqchip_add_domain()")
    Suggested-by: Michael Walle <michael@walle.cc>
    Signed-off-by: Álvaro Fernández Rojas <noltari@gmail.com>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Michael Walle <michael@walle.cc>
    Acked-by: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Link: https://lore.kernel.org/r/20210324081923.20379-2-noltari@gmail.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8737b781154cf967f8c7aa6a45bbb0c5862304f4
Author: Tiezhu Yang <yangtiezhu@loongson.cn>
Date:   Thu Mar 25 20:50:01 2021 +0800

    MIPS/bpf: Enable bpf_probe_read{, str}() on MIPS again
    
    [ Upstream commit 66633abd0642f1e89d26e15f36fb13d3a1c535ff ]
    
    After commit 0ebeea8ca8a4 ("bpf: Restrict bpf_probe_read{, str}() only to
    archs where they work"), bpf_probe_read{, str}() functions were no longer
    available on MIPS, so there exist some errors when running bpf program:
    
    root@linux:/home/loongson/bcc# python examples/tracing/task_switch.py
    bpf: Failed to load program: Invalid argument
    [...]
    11: (85) call bpf_probe_read#4
    unknown func bpf_probe_read#4
    [...]
    Exception: Failed to load BPF program count_sched: Invalid argument
    
    ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE should be restricted to archs
    with non-overlapping address ranges, but they can overlap in EVA mode
    on MIPS, so select ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE if !EVA in
    arch/mips/Kconfig, otherwise the bpf old helper bpf_probe_read() will
    not be available.
    
    This is similar with the commit d195b1d1d119 ("powerpc/bpf: Enable
    bpf_probe_read{, str}() on powerpc again").
    
    Fixes: 0ebeea8ca8a4 ("bpf: Restrict bpf_probe_read{, str}() only to archs where they work")
    Signed-off-by: Tiezhu Yang <yangtiezhu@loongson.cn>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a54afcc73bccd4c31a2c94b00fbb1ad733430ea
Author: Chen Huang <chenhuang5@huawei.com>
Date:   Sat Mar 27 09:49:00 2021 +0000

    powerpc: Fix HAVE_HARDLOCKUP_DETECTOR_ARCH build configuration
    
    [ Upstream commit 4fe529449d85e78972fa327999961ecc83a0b6db ]
    
    When compiling the powerpc with the SMP disabled, it shows the issue:
    
    arch/powerpc/kernel/watchdog.c: In function ‘watchdog_smp_panic’:
    arch/powerpc/kernel/watchdog.c:177:4: error: implicit declaration of function ‘smp_send_nmi_ipi’; did you mean ‘smp_send_stop’? [-Werror=implicit-function-declaration]
      177 |    smp_send_nmi_ipi(c, wd_lockup_ipi, 1000000);
          |    ^~~~~~~~~~~~~~~~
          |    smp_send_stop
    cc1: all warnings being treated as errors
    make[2]: *** [scripts/Makefile.build:273: arch/powerpc/kernel/watchdog.o] Error 1
    make[1]: *** [scripts/Makefile.build:534: arch/powerpc/kernel] Error 2
    make: *** [Makefile:1980: arch/powerpc] Error 2
    make: *** Waiting for unfinished jobs....
    
    We found that powerpc used ipi to implement hardlockup watchdog, so the
    HAVE_HARDLOCKUP_DETECTOR_ARCH should depend on the SMP.
    
    Fixes: 2104180a5369 ("powerpc/64s: implement arch-specific hardlockup watchdog")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Chen Huang <chenhuang5@huawei.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210327094900.938555-1-chenhuang5@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08be2d6596d4f6c6c3d4ff4d43d810ab720762e7
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Tue Mar 16 20:52:05 2021 +1000

    powerpc/64s: Fix hash fault to use TRAP accessor
    
    [ Upstream commit 1479e3d3b7559133b0a107772b5841e9c2cad450 ]
    
    Hash faults use the trap vector to decide whether this is an
    instruction or data fault. This should use the TRAP accessor
    rather than open access regs->trap.
    
    This won't cause a problem at the moment because 64s only uses
    trap flags for system call interrupts (the norestart flag), but
    that could change if any other trap flags get used in future.
    
    Fixes: a4922f5442e7e ("powerpc/64s: move the hash fault handling logic to C")
    Suggested-by: Christophe Leroy <christophe.leroy@csgroup.eu>
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210316105205.407767-1-npiggin@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ad11f55f1898fc40a78125aaa05891e15c73f846
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Mon Mar 22 09:13:25 2021 -0700

    IB/isert: Fix a use after free in isert_connect_request
    
    [ Upstream commit adb76a520d068a54ee5ca82e756cf8e5a47363a4 ]
    
    The device is got by isert_device_get() with refcount is 1, and is
    assigned to isert_conn by
      isert_conn->device = device.
    
    When isert_create_qp() failed, device will be freed with
    isert_device_put().
    
    Later, the device is used in isert_free_login_buf(isert_conn) by the
    isert_conn->device->ib_device statement.
    
    Free the device in the correct order.
    
    Fixes: ae9ea9ed38c9 ("iser-target: Split some logic in isert_connect_request to routines")
    Link: https://lore.kernel.org/r/20210322161325.7491-1-lyl2019@mail.ustc.edu.cn
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Acked-by: Sagi Grimberg <sagi@grimberg.me>
    Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
    Reviewed-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f3e729578767823c7fceb598d4f1fca9bbfac54
Author: Maor Gottlieb <maorg@nvidia.com>
Date:   Thu Mar 18 15:51:23 2021 +0200

    RDMA/mlx5: Fix drop packet rule in egress table
    
    [ Upstream commit c73700806d4e430d182c2be069d230076818a99a ]
    
    Initial drop action support missed that drop action can be added to egress
    flow tables as well. Add the missing support.
    
    This requires making sure that dest_type isn't set to PORT which in turn
    exposes a possibility of passing dst while indicating number of dsts as
    zero. Explicitly check for number of dsts and pass the appropriate
    pointer.
    
    Fixes: f29de9eee782 ("RDMA/mlx5: Add support for drop action in DV steering")
    Link: https://lore.kernel.org/r/20210318135123.680759-1-leon@kernel.org
    Reviewed-by: Mark Bloch <markb@nvidia.com>
    Signed-off-by: Maor Gottlieb <maorg@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3266682f91cccb7bda0aacfe8e5d24d13f6aff76
Author: Zhen Lei <thunder.leizhen@huawei.com>
Date:   Wed Mar 24 16:16:03 2021 +0800

    iommu/arm-smmu-v3: add bit field SFM into GERROR_ERR_MASK
    
    [ Upstream commit 655c447c97d7fe462e6cd9e15809037be028bc70 ]
    
    In arm_smmu_gerror_handler(), the value of the SMMU_GERROR register is
    filtered by GERROR_ERR_MASK. However, the GERROR_ERR_MASK does not contain
    the SFM bit. As a result, the subsequent error processing is not performed
    when only the SFM error occurs.
    
    Fixes: 48ec83bcbcf5 ("iommu/arm-smmu: Add initial driver support for ARM SMMUv3 devices")
    Reported-by: Rui Zhu <zhurui3@huawei.com>
    Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
    Link: https://lore.kernel.org/r/20210324081603.1074-1-thunder.leizhen@huawei.com
    Signed-off-by: Will Deacon <will@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6570a82def262144c6d15938b15b0b309ee12de3
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Wed Mar 3 11:07:42 2021 +0800

    ASoC: wm8960: Remove bitclk relax condition in wm8960_configure_sysclk
    
    [ Upstream commit 99067c07e8d877035f6249d194a317c78b7d052d ]
    
    The call sequence in wm8960_configure_clocking is
    
       ret = wm8960_configure_sysclk();
       if (ret >= 0)
            goto configure_clock;
    
       ....
    
       ret = wm8960_configure_pll();
    
    configure_clock:
       ...
    
    wm8960_configure_sysclk is called before wm8960_configure_pll, as
    there is bitclk relax on both functions, so wm8960_configure_sysclk
    always return success, then wm8960_configure_pll() never be called.
    
    With this case:
    aplay -Dhw:0,0 -d 5 -r 48000 -f S24_LE -c 2 audio48k24b2c.wav
    the required bitclk is 48000 * 24 * 2 = 2304000, bitclk got from
    wm8960_configure_sysclk is 3072000, but if go to wm8960_configure_pll.
    it can get correct bitclk 2304000.
    
    So bitclk relax condition should be removed in wm8960_configure_sysclk,
    then wm8960_configure_pll can be called, and there is also bitclk relax
    function in wm8960_configure_pll.
    
    Fixes: 3c01b9ee2ab9 ("ASoC: codec: wm8960: Relax bit clock computation")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Signed-off-by: Daniel Baluta <daniel.baluta@nxp.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/1614740862-30196-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b8bf48c216527d09730a2b646b6d1bfc44af93c
Author: Huang Pei <huangpei@loongson.cn>
Date:   Wed Mar 24 11:24:51 2021 +0800

    MIPS: loongson64: fix bug when PAGE_SIZE > 16KB
    
    [ Upstream commit 509d36a941a3466b78d4377913623d210b162458 ]
    
    When page size larger than 16KB, arguments "vaddr + size(16KB)" in
    "ioremap_page_range(vaddr, vaddr + size,...)" called by
    "add_legacy_isa_io" is not page-aligned.
    
    As loongson64 needs at least page size 16KB to get rid of cache alias,
    and "vaddr" is 64KB-aligned, and 64KB is largest page size supported,
    rounding "size" up to PAGE_SIZE is enough for all page size supported.
    
    Fixes: 6d0068ad15e4 ("MIPS: Loongson64: Process ISA Node in DeviceTree")
    Signed-off-by: Huang Pei <huangpei@loongson.cn>
    Acked-by: Jiaxun Yang <jiaxun.yang@flygoat.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d58e5fabc92f154c262d8441aeee9dab3eb68d3
Author: Hanna Hawa <hhhawa@amazon.com>
Date:   Fri Mar 19 17:21:33 2021 +0200

    pinctrl: pinctrl-single: fix pcs_pin_dbg_show() when bits_per_mux is not zero
    
    [ Upstream commit bd85125ea88513f637a62a72e8949c579c5c0a87 ]
    
    A System Error (SError, followed by kernel panic) was detected when
    trying to print the supported pins in a pinctrl device which supports
    multiple pins per register. This change fixes the pcs_pin_dbg_show() in
    pinctrl-single driver when bits_per_mux is not zero. In addition move
    offset calculation and pin offset in register to common function.
    
    Fixes: 4e7e8017a80e ("pinctrl: pinctrl-single: enhance to configure multiple pins of different modules")
    Signed-off-by: Hanna Hawa <hhhawa@amazon.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Reviewed-by: Tony Lindgren <tony@atomide.com>
    Reviewed-by: Drew Fustini <drew@beagleboard.org>
    Link: https://lore.kernel.org/r/20210319152133.28705-4-hhhawa@amazon.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit eb7d63e4a37b31b983de0d3a3f5135937eb54cc3
Author: Hanna Hawa <hhhawa@amazon.com>
Date:   Fri Mar 19 17:21:32 2021 +0200

    pinctrl: pinctrl-single: remove unused parameter
    
    [ Upstream commit 8fa2ea202b13b6da81e26c399ff1d87488398453 ]
    
    Remove unused parameter 'pin_pos' from pcs_add_pin().
    
    Signed-off-by: Hanna Hawa <hhhawa@amazon.com>
    Reviewed-by: Tony Lindgren <tony@atomide.com>
    Reviewed-by: Drew Fustini <drew@beagleboard.org>
    Link: https://lore.kernel.org/r/20210319152133.28705-3-hhhawa@amazon.com
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 806245375ff907cc8771de7a11585992a96d7937
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Mar 24 14:53:37 2021 -0700

    inet: use bigger hash table for IP ID generation
    
    [ Upstream commit aa6dd211e4b1dde9d5dc25d699d35f789ae7eeba ]
    
    In commit 73f156a6e8c1 ("inetpeer: get rid of ip_id_count")
    I used a very small hash table that could be abused
    by patient attackers to reveal sensitive information.
    
    Switch to a dynamic sizing, depending on RAM size.
    
    Typical big hosts will now use 128x more storage (2 MB)
    to get a similar increase in security and reduction
    of hash collisions.
    
    As a bonus, use of alloc_large_system_hash() spreads
    allocated memory among all NUMA nodes.
    
    Fixes: 73f156a6e8c1 ("inetpeer: get rid of ip_id_count")
    Reported-by: Amit Klein <aksecurity@gmail.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 33df5d11674c7dbf24c778d57753a7c41b12615b
Author: Li Huafei <lihuafei1@huawei.com>
Date:   Wed Mar 3 11:28:24 2021 +0800

    ima: Fix the error code for restoring the PCR value
    
    [ Upstream commit 7990ccafaa37dc6d8bb095d4d7cd997e8903fd10 ]
    
    In ima_restore_measurement_list(), hdr[HDR_PCR].data is pointing to a
    buffer of type u8, which contains the dumped 32-bit pcr value.
    Currently, only the least significant byte is used to restore the pcr
    value. We should convert hdr[HDR_PCR].data to a pointer of type u32
    before fetching the value to restore the correct pcr value.
    
    Fixes: 47fdee60b47f ("ima: use ima_parse_buf() to parse measurements headers")
    Signed-off-by: Li Huafei <lihuafei1@huawei.com>
    Reviewed-by: Roberto Sassu <roberto.sassu@huawei.com>
    Signed-off-by: Mimi Zohar <zohar@linux.ibm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58e90fbccd88f6776e2f98704b4332e507c1bdfa
Author: Huang Pei <huangpei@loongson.cn>
Date:   Tue Mar 23 10:34:02 2021 +0800

    MIPS: fix local_irq_{disable,enable} in asmmacro.h
    
    [ Upstream commit 05c4e2721d7af0df7bc1378a23712a0fd16947b5 ]
    
    commit ba9196d2e005 ("MIPS: Make DIEI support as a config option")
    use CPU_HAS_DIEI to indicate whether di/ei is implemented correctly,
    without this patch, "local_irq_disable" from entry.S in 3A1000
    (with buggy di/ei) lose protection of commit e97c5b609880 ("MIPS:
    Make irqflags.h functions preempt-safe for non-mipsr2 cpus")
    
    Fixes: ba9196d2e005 ("MIPS: Make DIEI support as a config option")
    Signed-off-by: Huang Pei <huangpei@loongson.cn>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b0a22c9017569e39c5b1841aa28b9009e35f7db
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Mar 2 13:08:29 2021 -0700

    powerpc/prom: Mark identical_pvr_fixup as __init
    
    [ Upstream commit 1ef1dd9c7ed27b080445e1576e8a05957e0e4dfc ]
    
    If identical_pvr_fixup() is not inlined, there are two modpost warnings:
    
    WARNING: modpost: vmlinux.o(.text+0x54e8): Section mismatch in reference
    from the function identical_pvr_fixup() to the function
    .init.text:of_get_flat_dt_prop()
    The function identical_pvr_fixup() references
    the function __init of_get_flat_dt_prop().
    This is often because identical_pvr_fixup lacks a __init
    annotation or the annotation of of_get_flat_dt_prop is wrong.
    
    WARNING: modpost: vmlinux.o(.text+0x551c): Section mismatch in reference
    from the function identical_pvr_fixup() to the function
    .init.text:identify_cpu()
    The function identical_pvr_fixup() references
    the function __init identify_cpu().
    This is often because identical_pvr_fixup lacks a __init
    annotation or the annotation of identify_cpu is wrong.
    
    identical_pvr_fixup() calls two functions marked as __init and is only
    called by a function marked as __init so it should be marked as __init
    as well. At the same time, remove the inline keywork as it is not
    necessary to inline this function. The compiler is still free to do so
    if it feels it is worthwhile since commit 889b3c1245de ("compiler:
    remove CONFIG_OPTIMIZE_INLINING entirely").
    
    Fixes: 14b3d926a22b ("[POWERPC] 4xx: update 440EP(x)/440GR(x) identical PVR issue workaround")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://github.com/ClangBuiltLinux/linux/issues/1316
    Link: https://lore.kernel.org/r/20210302200829.2680663-1-nathan@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71db53905dba72853651e1edb6b1fb1ac831c849
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Tue Mar 2 12:50:14 2021 -0700

    powerpc/fadump: Mark fadump_calculate_reserve_size as __init
    
    [ Upstream commit fbced1546eaaab57a32e56c974ea8acf10c6abd8 ]
    
    If fadump_calculate_reserve_size() is not inlined, there is a modpost
    warning:
    
    WARNING: modpost: vmlinux.o(.text+0x5196c): Section mismatch in
    reference from the function fadump_calculate_reserve_size() to the
    function .init.text:parse_crashkernel()
    The function fadump_calculate_reserve_size() references
    the function __init parse_crashkernel().
    This is often because fadump_calculate_reserve_size lacks a __init
    annotation or the annotation of parse_crashkernel is wrong.
    
    fadump_calculate_reserve_size() calls parse_crashkernel(), which is
    marked as __init and fadump_calculate_reserve_size() is called from
    within fadump_reserve_mem(), which is also marked as __init.
    
    Mark fadump_calculate_reserve_size() as __init to fix the section
    mismatch. Additionally, remove the inline keyword as it is not necessary
    to inline this function; the compiler is still free to do so if it feels
    it is worthwhile since commit 889b3c1245de ("compiler: remove
    CONFIG_OPTIMIZE_INLINING entirely").
    
    Fixes: 11550dc0a00b ("powerpc/fadump: reuse crashkernel parameter for fadump memory reservation")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://github.com/ClangBuiltLinux/linux/issues/1300
    Link: https://lore.kernel.org/r/20210302195013.2626335-1-nathan@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3e3bd8b1cd4849d3231c783a957fb6fb8544ac3
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Fri Feb 19 17:56:48 2021 +0100

    powerpc/mm: Move the linear_mapping_mutex to the ifdef where it is used
    
    [ Upstream commit 9be77e11dade414d2fa63750aa5c754fac49d619 ]
    
    The mutex linear_mapping_mutex is defined at the of the file while its
    only two user are within the CONFIG_MEMORY_HOTPLUG block.
    A compile without CONFIG_MEMORY_HOTPLUG set fails on PREEMPT_RT because
    its mutex implementation is smart enough to realize that it is unused.
    
    Move the definition of linear_mapping_mutex to ifdef block where it is
    used.
    
    Fixes: 1f73ad3e8d755 ("powerpc/mm: print warning in arch_remove_linear_mapping()")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20210219165648.2505482-1-bigeasy@linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a712a6a3891dad51b38743674bd7599151abbf0f
Author: KP Singh <kpsingh@kernel.org>
Date:   Fri Mar 19 19:21:17 2021 +0000

    libbpf: Add explicit padding to btf_dump_emit_type_decl_opts
    
    [ Upstream commit ea24b19562fe5f72c78319dbb347b701818956d9 ]
    
    Similar to
    https://lore.kernel.org/bpf/20210313210920.1959628-2-andrii@kernel.org/
    
    When DECLARE_LIBBPF_OPTS is used with inline field initialization, e.g:
    
      DECLARE_LIBBPF_OPTS(btf_dump_emit_type_decl_opts, opts,
        .field_name = var_ident,
        .indent_level = 2,
        .strip_mods = strip_mods,
      );
    
    and compiled in debug mode, the compiler generates code which
    leaves the padding uninitialized and triggers errors within libbpf APIs
    which require strict zero initialization of OPTS structs.
    
    Adding anonymous padding field fixes the issue.
    
    Fixes: 9f81654eebe8 ("libbpf: Expose BTF-to-C type declaration emitting API")
    Suggested-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: KP Singh <kpsingh@kernel.org>
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Link: https://lore.kernel.org/bpf/20210319192117.2310658-1-kpsingh@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3be43633d30fb0b2d51e196806769709cb4adc70
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Thu Mar 18 12:40:34 2021 -0700

    selftests/bpf: Re-generate vmlinux.h and BPF skeletons if bpftool changed
    
    [ Upstream commit cab62c37be057379a2a17b1b2eacd9dcba1e14dc ]
    
    Trigger vmlinux.h and BPF skeletons re-generation if detected that bpftool was
    re-compiled. Otherwise full `make clean` is required to get updated skeletons,
    if bpftool is modified.
    
    Fixes: acbd06206bbb ("selftests/bpf: Add vmlinux.h selftest exercising tracing of syscalls")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20210318194036.3521577-11-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cfd02c72e5f41edf19b69d890e7cb8417c074957
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Mar 18 09:01:43 2021 +0100

    net: dsa: bcm_sf2: fix BCM4908 RGMII reg(s)
    
    [ Upstream commit 6859d91549341c2ad769d482de58129f080c0f04 ]
    
    BCM4908 has only 1 RGMII reg for controlling port 7.
    
    Fixes: 73b7a6047971 ("net: dsa: bcm_sf2: support BCM4908's integrated switch")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69f38f9126d29538c9b9da558782fb3a3581d03e
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Thu Mar 18 09:01:42 2021 +0100

    net: dsa: bcm_sf2: add function finding RGMII register
    
    [ Upstream commit 55cfeb396965c3906a84d09a9c487d065e37773b ]
    
    Simple macro like REG_RGMII_CNTRL_P() is insufficient as:
    1. It doesn't validate port argument
    2. It doesn't support chipsets with non-lineral RGMII regs layout
    
    Missing port validation could result in getting register offset from out
    of array. Random memory -> random offset -> random reads/writes. It
    affected e.g. BCM4908 for REG_RGMII_CNTRL_P(7).
    
    Fixes: a78e86ed586d ("net: dsa: bcm_sf2: Prepare for different register layouts")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Acked-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26a0b1f604e08deee8d1a2bd5b0660b1247b3fa8
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Sun Mar 14 18:44:45 2021 +0300

    ASoC: tegra30: i2s: Restore hardware state on runtime PM resume
    
    [ Upstream commit 0bbcecaaab15a74ba69f93df46c753f2a64eadca ]
    
    Tegra30 I2S driver syncs regmap cache only on resume from system suspend,
    but hardware is reset across the runtime suspend because RPM of the parent
    AHUB driver resets the I2S hardware, hence h/w state is lost after each
    RPM resume. The problem isn't visible because hardware happens to be fully
    reprogrammed after each RPM resume. Move hardware syncing to RPM resume in
    order to restore h/w state properly.
    
    Fixes: ed9ce1ed2239 ("ASoC: tegra: ahub: Reset hardware properly")
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Link: https://lore.kernel.org/r/20210314154459.15375-4-digetx@gmail.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 409c028892b1aa945be27ae843ec83d3b767c688
Author: Jacob Pan <jacob.jun.pan@linux.intel.com>
Date:   Tue Mar 2 02:13:59 2021 -0800

    iommu/vt-d: Reject unsupported page request modes
    
    [ Upstream commit 78a523fe73b81b4447beb2d6c78c9fafae24eebb ]
    
    When supervisor/privilige mode SVM is used, we bind init_mm.pgd with
    a supervisor PASID. There should not be any page fault for init_mm.
    Execution request with DMA read is also not supported.
    
    This patch checks PRQ descriptor for both unsupported configurations,
    reject them both with invalid responses.
    
    Fixes: 1c4f88b7f1f92 ("iommu/vt-d: Shared virtual address in scalable mode")
    Acked-by: Lu Baolu <baolu.lu@linux.intel.com>
    Signed-off-by: Jacob Pan <jacob.jun.pan@linux.intel.com>
    Link: https://lore.kernel.org/r/1614680040-1989-4-git-send-email-jacob.jun.pan@linux.intel.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba5d584cd6e8431749bd9a320f55bd60cb561ac4
Author: Robin Murphy <robin.murphy@arm.com>
Date:   Fri Mar 5 16:32:34 2021 +0000

    iommu/dma: Resurrect the "forcedac" option
    
    [ Upstream commit 3542dcb15cef66c0b9e6c3b33168eb657e0d9520 ]
    
    In converting intel-iommu over to the common IOMMU DMA ops, it quietly
    lost the functionality of its "forcedac" option. Since this is a handy
    thing both for testing and for performance optimisation on certain
    platforms, reimplement it under the common IOMMU parameter namespace.
    
    For the sake of fixing the inadvertent breakage of the Intel-specific
    parameter, remove the dmar_forcedac remnants and hook it up as an alias
    while documenting the transition to the new common parameter.
    
    Fixes: c588072bba6b ("iommu/vt-d: Convert intel iommu driver to the iommu ops")
    Signed-off-by: Robin Murphy <robin.murphy@arm.com>
    Acked-by: Lu Baolu <baolu.lu@linux.intel.com>
    Reviewed-by: John Garry <john.garry@huawei.com>
    Link: https://lore.kernel.org/r/7eece8e0ea7bfbe2cd0e30789e0d46df573af9b0.1614961776.git.robin.murphy@arm.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 346607ab09de2989dfa2797b02a913fa1d1c810a
Author: Shameer Kolothum <shameerali.kolothum.thodi@huawei.com>
Date:   Wed Mar 3 17:36:11 2021 +0000

    iommu: Check dev->iommu in iommu_dev_xxx functions
    
    [ Upstream commit b9abb19fa5fd2d8a4be61c6cd4b2a48aa1a17f9c ]
    
    The device iommu probe/attach might have failed leaving dev->iommu
    to NULL and device drivers may still invoke these functions resulting
    in a crash in iommu vendor driver code.
    
    Hence make sure we check that.
    
    Fixes: a3a195929d40 ("iommu: Add APIs for multiple domains per device")
    Signed-off-by: Shameer Kolothum <shameerali.kolothum.thodi@huawei.com>
    Reviewed-by: Robin Murphy <robin.murphy@arm.com>
    Link: https://lore.kernel.org/r/20210303173611.520-1-shameerali.kolothum.thodi@huawei.com
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba07cf2b022282bd1e25d20e59325369547fe7be
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Sat Mar 13 13:09:18 2021 -0800

    bpftool: Fix maybe-uninitialized warnings
    
    [ Upstream commit 4bbb3583687051ef99966ddaeb1730441b777d40 ]
    
    Somehow when bpftool is compiled in -Og mode, compiler produces new warnings
    about possibly uninitialized variables. Fix all the reported problems.
    
    Fixes: 2119f2189df1 ("bpftool: add C output format option to btf dump subcommand")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20210313210920.1959628-3-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1bafc147d350e6332ebc1a89bcc758754327ea98
Author: Andrii Nakryiko <andrii@kernel.org>
Date:   Sat Mar 13 13:09:17 2021 -0800

    libbpf: Add explicit padding to bpf_xdp_set_link_opts
    
    [ Upstream commit dde7b3f5f2f458297aeccfd4783e53ab8ca046db ]
    
    Adding such anonymous padding fixes the issue with uninitialized portions of
    bpf_xdp_set_link_opts when using LIBBPF_DECLARE_OPTS macro with inline field
    initialization:
    
    DECLARE_LIBBPF_OPTS(bpf_xdp_set_link_opts, opts, .old_fd = -1);
    
    When such code is compiled in debug mode, compiler is generating code that
    leaves padding bytes uninitialized, which triggers error inside libbpf APIs
    that do strict zero initialization checks for OPTS structs.
    
    Adding anonymous padding field fixes the issue.
    
    Fixes: bd5ca3ef93cd ("libbpf: Add function to set link XDP fd while specifying old program")
    Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20210313210920.1959628-2-andrii@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca44f7cd20d9521bd96a9eb69266436abdcc8895
Author: Xie He <xie.he.0141@gmail.com>
Date:   Wed Mar 10 23:23:09 2021 -0800

    net: lapbether: Prevent racing when checking whether the netif is running
    
    [ Upstream commit 5acd0cfbfbb5a688da1bfb1a2152b0c855115a35 ]
    
    There are two "netif_running" checks in this driver. One is in
    "lapbeth_xmit" and the other is in "lapbeth_rcv". They serve to make
    sure that the LAPB APIs called in these functions are called before
    "lapb_unregister" is called by the "ndo_stop" function.
    
    However, these "netif_running" checks are unreliable, because it's
    possible that immediately after "netif_running" returns true, "ndo_stop"
    is called (which causes "lapb_unregister" to be called).
    
    This patch adds locking to make sure "lapbeth_xmit" and "lapbeth_rcv" can
    reliably check and ensure the netif is running while doing their work.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Xie He <xie.he.0141@gmail.com>
    Acked-by: Martin Schiller <ms@dev.tdt.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 332e69eb3bd90370f2d9f2c2ca7974ff523dea17
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Tue Mar 16 15:08:00 2021 +0100

    Bluetooth: avoid deadlock between hci_dev->lock and socket lock
    
    [ Upstream commit 17486960d79b900c45e0bb8fbcac0262848582ba ]
    
    Commit eab2404ba798 ("Bluetooth: Add BT_PHY socket option") added a
    dependency between socket lock and hci_dev->lock that could lead to
    deadlock.
    
    It turns out that hci_conn_get_phy() is not in any way relying on hdev
    being immutable during the runtime of this function, neither does it even
    look at any of the members of hdev, and as such there is no need to hold
    that lock.
    
    This fixes the lockdep splat below:
    
     ======================================================
     WARNING: possible circular locking dependency detected
     5.12.0-rc1-00026-g73d464503354 #10 Not tainted
     ------------------------------------------------------
     bluetoothd/1118 is trying to acquire lock:
     ffff8f078383c078 (&hdev->lock){+.+.}-{3:3}, at: hci_conn_get_phy+0x1c/0x150 [bluetooth]
    
     but task is already holding lock:
     ffff8f07e831d920 (sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP){+.+.}-{0:0}, at: l2cap_sock_getsockopt+0x8b/0x610
    
     which lock already depends on the new lock.
    
     the existing dependency chain (in reverse order) is:
    
     -> #3 (sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP){+.+.}-{0:0}:
            lock_sock_nested+0x72/0xa0
            l2cap_sock_ready_cb+0x18/0x70 [bluetooth]
            l2cap_config_rsp+0x27a/0x520 [bluetooth]
            l2cap_sig_channel+0x658/0x1330 [bluetooth]
            l2cap_recv_frame+0x1ba/0x310 [bluetooth]
            hci_rx_work+0x1cc/0x640 [bluetooth]
            process_one_work+0x244/0x5f0
            worker_thread+0x3c/0x380
            kthread+0x13e/0x160
            ret_from_fork+0x22/0x30
    
     -> #2 (&chan->lock#2/1){+.+.}-{3:3}:
            __mutex_lock+0xa3/0xa10
            l2cap_chan_connect+0x33a/0x940 [bluetooth]
            l2cap_sock_connect+0x141/0x2a0 [bluetooth]
            __sys_connect+0x9b/0xc0
            __x64_sys_connect+0x16/0x20
            do_syscall_64+0x33/0x80
            entry_SYSCALL_64_after_hwframe+0x44/0xae
    
     -> #1 (&conn->chan_lock){+.+.}-{3:3}:
            __mutex_lock+0xa3/0xa10
            l2cap_chan_connect+0x322/0x940 [bluetooth]
            l2cap_sock_connect+0x141/0x2a0 [bluetooth]
            __sys_connect+0x9b/0xc0
            __x64_sys_connect+0x16/0x20
            do_syscall_64+0x33/0x80
            entry_SYSCALL_64_after_hwframe+0x44/0xae
    
     -> #0 (&hdev->lock){+.+.}-{3:3}:
            __lock_acquire+0x147a/0x1a50
            lock_acquire+0x277/0x3d0
            __mutex_lock+0xa3/0xa10
            hci_conn_get_phy+0x1c/0x150 [bluetooth]
            l2cap_sock_getsockopt+0x5a9/0x610 [bluetooth]
            __sys_getsockopt+0xcc/0x200
            __x64_sys_getsockopt+0x20/0x30
            do_syscall_64+0x33/0x80
            entry_SYSCALL_64_after_hwframe+0x44/0xae
    
     other info that might help us debug this:
    
     Chain exists of:
       &hdev->lock --> &chan->lock#2/1 --> sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP
    
      Possible unsafe locking scenario:
    
            CPU0                    CPU1
            ----                    ----
       lock(sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP);
                                    lock(&chan->lock#2/1);
                                    lock(sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP);
       lock(&hdev->lock);
    
      *** DEADLOCK ***
    
     1 lock held by bluetoothd/1118:
      #0: ffff8f07e831d920 (sk_lock-AF_BLUETOOTH-BTPROTO_L2CAP){+.+.}-{0:0}, at: l2cap_sock_getsockopt+0x8b/0x610 [bluetooth]
    
     stack backtrace:
     CPU: 3 PID: 1118 Comm: bluetoothd Not tainted 5.12.0-rc1-00026-g73d464503354 #10
     Hardware name: LENOVO 20K5S22R00/20K5S22R00, BIOS R0IET38W (1.16 ) 05/31/2017
     Call Trace:
      dump_stack+0x7f/0xa1
      check_noncircular+0x105/0x120
      ? __lock_acquire+0x147a/0x1a50
      __lock_acquire+0x147a/0x1a50
      lock_acquire+0x277/0x3d0
      ? hci_conn_get_phy+0x1c/0x150 [bluetooth]
      ? __lock_acquire+0x2e1/0x1a50
      ? lock_is_held_type+0xb4/0x120
      ? hci_conn_get_phy+0x1c/0x150 [bluetooth]
      __mutex_lock+0xa3/0xa10
      ? hci_conn_get_phy+0x1c/0x150 [bluetooth]
      ? lock_acquire+0x277/0x3d0
      ? mark_held_locks+0x49/0x70
      ? mark_held_locks+0x49/0x70
      ? hci_conn_get_phy+0x1c/0x150 [bluetooth]
      hci_conn_get_phy+0x1c/0x150 [bluetooth]
      l2cap_sock_getsockopt+0x5a9/0x610 [bluetooth]
      __sys_getsockopt+0xcc/0x200
      __x64_sys_getsockopt+0x20/0x30
      do_syscall_64+0x33/0x80
      entry_SYSCALL_64_after_hwframe+0x44/0xae
     RIP: 0033:0x7fb73df33eee
     Code: 48 8b 0d 85 0f 0c 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 49 89 ca b8 37 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 52 0f 0c 00 f7 d8 64 89 01 48
     RSP: 002b:00007fffcfbbbf08 EFLAGS: 00000203 ORIG_RAX: 0000000000000037
     RAX: ffffffffffffffda RBX: 0000000000000019 RCX: 00007fb73df33eee
     RDX: 000000000000000e RSI: 0000000000000112 RDI: 0000000000000018
     RBP: 0000000000000000 R08: 00007fffcfbbbf44 R09: 0000000000000000
     R10: 00007fffcfbbbf3c R11: 0000000000000203 R12: 0000000000000000
     R13: 0000000000000018 R14: 0000000000000000 R15: 0000556fcefc70d0
    
    Fixes: eab2404ba798 ("Bluetooth: Add BT_PHY socket option")
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf628b366445b1e885cacd0d31776f33174f7939
Author: Sean Christopherson <seanjc@google.com>
Date:   Thu Feb 25 12:47:30 2021 -0800

    KVM: x86/mmu: Retry page faults that hit an invalid memslot
    
    [ Upstream commit e0c378684b6545ad2d4403bb701d0ac4932b4e95 ]
    
    Retry page faults (re-enter the guest) that hit an invalid memslot
    instead of treating the memslot as not existing, i.e. handling the
    page fault as an MMIO access.  When deleting a memslot, SPTEs aren't
    zapped and the TLBs aren't flushed until after the memslot has been
    marked invalid.
    
    Handling the invalid slot as MMIO means there's a small window where a
    page fault could replace a valid SPTE with an MMIO SPTE.  The legacy
    MMU handles such a scenario cleanly, but the TDP MMU assumes such
    behavior is impossible (see the BUG() in __handle_changed_spte()).
    There's really no good reason why the legacy MMU should allow such a
    scenario, and closing this hole allows for additional cleanups.
    
    Fixes: 2f2fad0897cb ("kvm: x86/mmu: Add functions to handle changed TDP SPTEs")
    Cc: Ben Gardon <bgardon@google.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210225204749.1512652-6-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bcf8a9025dfa2d633275d607c8b42e46b3429742
Author: Marcus Folkesson <marcus.folkesson@gmail.com>
Date:   Wed Feb 24 17:37:06 2021 +0100

    wilc1000: write value to WILC_INTR2_ENABLE register
    
    [ Upstream commit e21b6e5a54628cd3935f200049d4430c25c54e03 ]
    
    Write the value instead of reading it twice.
    
    Fixes: c5c77ba18ea6 ("staging: wilc1000: Add SDIO/SPI 802.11 driver")
    Signed-off-by: Marcus Folkesson <marcus.folkesson@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210224163706.519658-1-marcus.folkesson@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa79dc1b5aaaf2a487c4f9f72246a1f6836d401a
Author: Yevgeny Kliteynik <kliteyn@nvidia.com>
Date:   Sat Feb 6 22:41:41 2021 +0200

    net/mlx5: DR, Add missing vhca_id consume from STEv1
    
    [ Upstream commit cc82a2e6c8af956d894fa58a040dc0d532dd9978 ]
    
    The field source_eswitch_owner_vhca_id was not consumed
    in the same way as in STEv0. Added the missing set.
    
    Fixes: 10b694186410 ("net/mlx5: DR, Add HW STEv1 match logic")
    Signed-off-by: Alex Vesker <valex@mellanox.com>
    Signed-off-by: Yevgeny Kliteynik <kliteyn@nvidia.com>
    Reviewed-by: Alex Vesker <valex@nvidia.com>
    Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 54816e3144c46747b43ff870c60ad5721bb30456
Author: Mark Zhang <markzhang@nvidia.com>
Date:   Thu Mar 4 14:45:17 2021 +0200

    RDMA/mlx5: Fix mlx5 rates to IB rates map
    
    [ Upstream commit 6fe6e568639859db960c8fcef19a2ece1c2d7eae ]
    
    Correct the map between mlx5 rates and corresponding ib rates, as they
    don't always have a fixed offset between them.
    
    Fixes: e126ba97dba9 ("mlx5: Add driver for Mellanox Connect-IB adapters")
    Link: https://lore.kernel.org/r/20210304124517.1100608-4-leon@kernel.org
    Signed-off-by: Mark Zhang <markzhang@nvidia.com>
    Reviewed-by: Maor Gottlieb <maorg@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 386bdf46a93e313304ef0e33a4db993acae9ff9e
Author: Maor Gottlieb <maorg@nvidia.com>
Date:   Thu Mar 4 14:45:15 2021 +0200

    RDMA/mlx5: Fix query RoCE port
    
    [ Upstream commit 7852546f524595245382a919e752468f73421451 ]
    
    mlx5_is_roce_enabled returns the devlink RoCE init value, therefore it
    should be used only when driver is loaded. Instead we just need to read
    the roce_en field.
    
    In addition, rename mlx5_is_roce_enabled to mlx5_is_roce_init_enabled.
    
    Fixes: 7a58779edd75 ("IB/mlx5: Improve query port for representor port")
    Link: https://lore.kernel.org/r/20210304124517.1100608-2-leon@kernel.org
    Signed-off-by: Maor Gottlieb <maorg@nvidia.com>
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29f91bd26f3ba828a55cb446ecd44caacf0df026
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Thu Mar 4 14:07:42 2021 +0200

    RDMA/mlx5: Zero out ODP related items in the mlx5_ib_mr
    
    [ Upstream commit a639e66703ee45745dc4057c7c2013ed9e1963a7 ]
    
    All of the ODP code assumes when it calls mlx5_mr_cache_alloc() the ODP
    related fields are zero'd. This is true if the MR was just allocated, but
    if the MR is recycled through the cache then the values are never zero'd.
    
    This causes a bug in the odp_stats, they don't reset when the MR is
    reallocated, also is_odp_implicit is never 0'd.
    
    So we can use memset on a block of the mlx5_ib_mr reorganize the structure
    to put all the data that can be zero'd by the cache at the end.
    
    It is organized as an anonymous struct because the next patch will make
    this a union.
    
    Delete the unused smr_info. Don't set the kernel only desc_size on the
    user path. No longer any need to zero mr->parent before freeing it, the
    memset() will get it now.
    
    Fixes: a3de94e3d61e ("IB/mlx5: Introduce ODP diagnostic counters")
    Link: https://lore.kernel.org/r/20210304120745.1090751-2-leon@kernel.org
    Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6db9ead40fca11a5bd1883621729a6f081cdb625
Author: Cezary Rojewski <cezary.rojewski@intel.com>
Date:   Mon Jan 25 12:54:41 2021 +0100

    ASoC: Intel: Skylake: Compile when any configuration is selected
    
    [ Upstream commit 1b99d50b9709a2cddaba4a7faf1862b4f7bec865 ]
    
    Skylake is dependent on SND_SOC_INTEL_SKYLAKE (aka "all SST platforms")
    whereas selecting specific configuration such as KBL-only will not
    cause driver code to compile. Switch to SND_SOC_INTEL_SKYLAKE_COMMON
    dependency so selecting any configuration causes the driver to be built.
    
    Reported-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Suggested-by: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
    Fixes: 35bc99aaa1a3 ("ASoC: Intel: Skylake: Add more platform granularity")
    Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
    Link: https://lore.kernel.org/r/20210125115441.10383-1-cezary.rojewski@intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 18a335dc25157eca3b893e12897a41f077f54f7b
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Feb 26 18:56:53 2021 +0000

    ASoC: Intel: boards: sof-wm8804: add check for PLL setting
    
    [ Upstream commit 1730ef62874dbdc53dc2abfa430f09f0b304bafc ]
    
    Currently the return from snd_soc_dai_set_pll is not checking for
    failure, this is the only driver in the kernel that ignores this,
    so it probably should be added for sake of completeness.  Fix this
    by adding an error return check.
    
    Addresses-Coverity: ("Unchecked return value")
    Fixes: f139546fb7d4 ("ASoC: Intel: boards: sof-wm8804: support for Hifiberry Digiplus boards")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210226185653.1071321-1-colin.king@canonical.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bdda1efa656d49f94d0cf1da80936fe00ee4682b
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Mar 8 11:17:51 2021 -0300

    perf symbols: Fix dso__fprintf_symbols_by_name() to return the number of printed chars
    
    [ Upstream commit 210e4c89ef61432040c6cd828fefa441f4887186 ]
    
    The 'ret' variable was initialized to zero but then it was not updated
    from the fprintf() return, fix it.
    
    Reported-by: Yang Li <yang.lee@linux.alibaba.com>
    cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    cc: Ingo Molnar <mingo@redhat.com>
    cc: Jiri Olsa <jolsa@redhat.com>
    cc: Mark Rutland <mark.rutland@arm.com>
    cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Srikar Dronamraju <srikar@linux.vnet.ibm.com>
    Fixes: 90f18e63fbd00513 ("perf symbols: List symbols in a dso in ascending name order")
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 140f1d7283624731b5db9b644aa2786376a2a10c
Author: Maxim Mikityanskiy <maxtram95@gmail.com>
Date:   Sun Feb 7 16:47:40 2021 +0200

    HID: plantronics: Workaround for double volume key presses
    
    [ Upstream commit f567d6ef8606fb427636e824c867229ecb5aefab ]
    
    Plantronics Blackwire 3220 Series (047f:c056) sends HID reports twice
    for each volume key press. This patch adds a quirk to hid-plantronics
    for this product ID, which will ignore the second volume key press if
    it happens within 5 ms from the last one that was handled.
    
    The patch was tested on the mentioned model only, it shouldn't affect
    other models, however, this quirk might be needed for them too.
    Auto-repeat (when a key is held pressed) is not affected, because the
    rate is about 3 times per second, which is far less frequent than once
    in 5 ms.
    
    Fixes: 81bb773faed7 ("HID: plantronics: Update to map volume up/down controls")
    Signed-off-by: Maxim Mikityanskiy <maxtram95@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b963d569fcbee25b9609a7e1c314a9e801dbe281
Author: Alexander Lobakin <alobakin@pm.me>
Date:   Thu Feb 18 20:50:31 2021 +0000

    xsk: Respect device's headroom and tailroom on generic xmit path
    
    [ Upstream commit 3914d88f7608e6c2e80e344474fa289370c32451 ]
    
    xsk_generic_xmit() allocates a new skb and then queues it for
    xmitting. The size of new skb's headroom is desc->len, so it comes
    to the driver/device with no reserved headroom and/or tailroom.
    Lots of drivers need some headroom (and sometimes tailroom) to
    prepend (and/or append) some headers or data, e.g. CPU tags,
    device-specific headers/descriptors (LSO, TLS etc.), and if case
    of no available space skb_cow_head() will reallocate the skb.
    Reallocations are unwanted on fast-path, especially when it comes
    to XDP, so generic XSK xmit should reserve the spaces declared in
    dev->needed_headroom and dev->needed tailroom to avoid them.
    
    Note on max(NET_SKB_PAD, L1_CACHE_ALIGN(dev->needed_headroom)):
    
    Usually, output functions reserve LL_RESERVED_SPACE(dev), which
    consists of dev->hard_header_len + dev->needed_headroom, aligned
    by 16.
    
    However, on XSK xmit hard header is already here in the chunk, so
    hard_header_len is not needed. But it'd still be better to align
    data up to cacheline, while reserving no less than driver requests
    for headroom. NET_SKB_PAD here is to double-insure there will be
    no reallocations even when the driver advertises no needed_headroom,
    but in fact need it (not so rare case).
    
    Fixes: 35fcde7f8deb ("xsk: support for Tx")
    Signed-off-by: Alexander Lobakin <alobakin@pm.me>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Magnus Karlsson <magnus.karlsson@intel.com>
    Acked-by: John Fastabend <john.fastabend@gmail.com>
    Link: https://lore.kernel.org/bpf/20210218204908.5455-5-alobakin@pm.me
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 72e431005a815550cc11cfa6239438cbe3c8d038
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Mon Apr 26 07:32:29 2021 -0700

    drivers/block/null_blk/main: Fix a double free in null_init.
    
    [ Upstream commit 72ce11ddfa4e9e1879103581a60b7e34547eaa0a ]
    
    In null_init, null_add_dev(dev) is called.
    In null_add_dev, it calls null_free_zoned_dev(dev) to free dev->zones
    via kvfree(dev->zones) in out_cleanup_zone branch and returns err.
    Then null_init accept the err code and then calls null_free_dev(dev).
    
    But in null_free_dev(dev), dev->zones is freed again by
    null_free_zoned_dev().
    
    My patch set dev->zones to NULL in null_free_zoned_dev() after
    kvfree(dev->zones) is called, to avoid the double free.
    
    Fixes: 2984c8684f962 ("nullb: factor disk parameters")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Link: https://lore.kernel.org/r/20210426143229.7374-1-lyl2019@mail.ustc.edu.cn
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff8150b9cf8faf0749c65bc0ad0cce11a3f7c47a
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 21 13:19:45 2021 +0300

    ataflop: fix off by one in ataflop_probe()
    
    [ Upstream commit b777f4c47781df6b23e3f4df6fdb92d9aceac7bb ]
    
    Smatch complains that the "type > NUM_DISK_MINORS" should be >=
    instead of >.  We also need to subtract one from "type" at the start.
    
    Fixes: bf9c0538e485 ("ataflop: use a separate gendisk for each media format")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a3a8bbca28b899806844c00d49ed1b7ccb50957
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 21 13:18:35 2021 +0300

    ataflop: potential out of bounds in do_format()
    
    [ Upstream commit 1ffec389a6431782a8a28805830b6fae9bf00af1 ]
    
    The function uses "type" as an array index:
    
            q = unit[drive].disk[type]->queue;
    
    Unfortunately the bounds check on "type" isn't done until later in the
    function.  Fix this by moving the bounds check to the start.
    
    Fixes: bf9c0538e485 ("ataflop: use a separate gendisk for each media format")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 163dd7fa459faebe055bcbebf9e088bae04f8e33
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Apr 20 10:18:17 2021 +0200

    kthread: Fix PF_KTHREAD vs to_kthread() race
    
    [ Upstream commit 3a7956e25e1d7b3c148569e78895e1f3178122a9 ]
    
    The kthread_is_per_cpu() construct relies on only being called on
    PF_KTHREAD tasks (per the WARN in to_kthread). This gives rise to the
    following usage pattern:
    
            if ((p->flags & PF_KTHREAD) && kthread_is_per_cpu(p))
    
    However, as reported by syzcaller, this is broken. The scenario is:
    
            CPU0                            CPU1 (running p)
    
            (p->flags & PF_KTHREAD) // true
    
                                            begin_new_exec()
                                              me->flags &= ~(PF_KTHREAD|...);
            kthread_is_per_cpu(p)
              to_kthread(p)
                WARN(!(p->flags & PF_KTHREAD) <-- *SPLAT*
    
    Introduce __to_kthread() that omits the WARN and is sure to check both
    values.
    
    Use this to remove the problematic pattern for kthread_is_per_cpu()
    and fix a number of other kthread_*() functions that have similar
    issues but are currently not used in ways that would expose the
    problem.
    
    Notably kthread_func() is only ever called on 'current', while
    kthread_probe_data() is only used for PF_WQ_WORKER, which implies the
    task is from kthread_create*().
    
    Fixes: ac687e6e8c26 ("kthread: Extract KTHREAD_IS_PER_CPU")
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Valentin Schneider <Valentin.Schneider@arm.com>
    Link: https://lkml.kernel.org/r/YH6WJc825C4P0FCK@hirez.programming.kicks-ass.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af813843d8e6dd8f955c7f4837fec91110993027
Author: Waiman Long <longman@redhat.com>
Date:   Thu Apr 15 15:54:26 2021 -0400

    sched/debug: Fix cgroup_path[] serialization
    
    [ Upstream commit ad789f84c9a145f8a18744c0387cec22ec51651e ]
    
    The handling of sysrq key can be activated by echoing the key to
    /proc/sysrq-trigger or via the magic key sequence typed into a terminal
    that is connected to the system in some way (serial, USB or other mean).
    In the former case, the handling is done in a user context. In the
    latter case, it is likely to be in an interrupt context.
    
    Currently in print_cpu() of kernel/sched/debug.c, sched_debug_lock is
    taken with interrupt disabled for the whole duration of the calls to
    print_*_stats() and print_rq() which could last for the quite some time
    if the information dump happens on the serial console.
    
    If the system has many cpus and the sched_debug_lock is somehow busy
    (e.g. parallel sysrq-t), the system may hit a hard lockup panic
    depending on the actually serial console implementation of the
    system.
    
    The purpose of sched_debug_lock is to serialize the use of the global
    cgroup_path[] buffer in print_cpu(). The rests of the printk calls don't
    need serialization from sched_debug_lock.
    
    Calling printk() with interrupt disabled can still be problematic if
    multiple instances are running. Allocating a stack buffer of PATH_MAX
    bytes is not feasible because of the limited size of the kernel stack.
    
    The solution implemented in this patch is to allow only one caller at a
    time to use the full size group_path[], while other simultaneous callers
    will have to use shorter stack buffers with the possibility of path
    name truncation. A "..." suffix will be printed if truncation may have
    happened.  The cgroup path name is provided for informational purpose
    only, so occasional path name truncation should not be a big problem.
    
    Fixes: efe25c2c7b3a ("sched: Reinstate group names in /proc/sched_debug")
    Suggested-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20210415195426.6677-1-longman@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b7d064beb344b538c0073a17de7aa0ce87388f6
Author: Dima Stepanov <dmitrii.stepanov@cloud.ionos.com>
Date:   Mon Apr 19 09:37:21 2021 +0200

    block/rnbd-clt-sysfs: Remove copy buffer overlap in rnbd_clt_get_path_name
    
    [ Upstream commit 3db7cf55d532a15ea26b4a14e8f8729ccd96fd22 ]
    
    cppcheck report the following error:
      rnbd/rnbd-clt-sysfs.c:522:36: error: The variable 'buf' is used both
      as a parameter and as destination in snprintf(). The origin and
      destination buffers overlap. Quote from glibc (C-library)
      documentation
      (http://www.gnu.org/software/libc/manual/html_mono/libc.html#Formatted-Output-Functions):
      "If copying takes place between objects that overlap as a result of a
      call to sprintf() or snprintf(), the results are undefined."
      [sprintfOverlappingData]
    Fix it by initializing the buf variable in the first snprintf call.
    
    Fixes: 91f4acb2801c ("block/rnbd-clt: support mapping two devices")
    Signed-off-by: Dima Stepanov <dmitrii.stepanov@ionos.com>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Gioh Kim <gi-oh.kim@cloud.ionos.com>
    Reviewed-by: Chaitanya Kulkarni <chaitanya.kulkarni@wdc.com>
    Link: https://lore.kernel.org/r/20210419073722.15351-19-gi-oh.kim@ionos.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84b8c266c4bfe9ed5128e13253c388deb74b1b03
Author: Pavel Begunkov <asml.silence@gmail.com>
Date:   Thu Apr 15 13:07:39 2021 +0100

    io_uring: fix overflows checks in provide buffers
    
    [ Upstream commit 38134ada0ceea3e848fe993263c0ff6207fd46e7 ]
    
    Colin reported before possible overflow and sign extension problems in
    io_provide_buffers_prep(). As Linus pointed out previous attempt did nothing
    useful, see d81269fecb8ce ("io_uring: fix provide_buffers sign extension").
    
    Do that with help of check_<op>_overflow helpers. And fix struct
    io_provide_buf::len type, as it doesn't make much sense to keep it
    signed.
    
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Fixes: efe68c1ca8f49 ("io_uring: validate the full range of provided buffers for access")
    Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
    Link: https://lore.kernel.org/r/46538827e70fce5f6cdb50897cff4cacc490f380.1618488258.git.asml.silence@gmail.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9fb875f2c2f991bbee0fe74225f6168e3cffaa6d
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Apr 14 17:11:12 2021 -0700

    perf/amd/uncore: Fix sysfs type mismatch
    
    [ Upstream commit 5deac80d4571dffb51f452f0027979d72259a1b9 ]
    
    dev_attr_show() calls the __uncore_*_show() functions via an indirect
    call but their type does not currently match the type of the show()
    member in 'struct device_attribute', resulting in a Control Flow
    Integrity violation.
    
    $ cat /sys/devices/amd_l3/format/umask
    config:8-15
    
    $ dmesg | grep "CFI failure"
    [ 1258.174653] CFI failure (target: __uncore_umask_show...):
    
    Update the type in the DEFINE_UNCORE_FORMAT_ATTR macro to match
    'struct device_attribute' so that there is no more CFI violation.
    
    Fixes: 06f2c24584f3 ("perf/amd/uncore: Prepare to scale for more attributes that vary per family")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20210415001112.3024673-2-nathan@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3456263249c0baa2142affcfa0314e557428a498
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Apr 14 17:11:11 2021 -0700

    x86/events/amd/iommu: Fix sysfs type mismatch
    
    [ Upstream commit de5bc7b425d4c27ae5faa00ea7eb6b9780b9a355 ]
    
    dev_attr_show() calls _iommu_event_show() via an indirect call but
    _iommu_event_show()'s type does not currently match the type of the
    show() member in 'struct device_attribute', resulting in a Control Flow
    Integrity violation.
    
    $ cat /sys/devices/amd_iommu_1/events/mem_dte_hit
    csource=0x0a
    
    $ dmesg | grep "CFI failure"
    [ 3526.735140] CFI failure (target: _iommu_event_show...):
    
    Change _iommu_event_show() and 'struct amd_iommu_event_desc' to
    'struct device_attribute' so that there is no more CFI violation.
    
    Fixes: 7be6296fdd75 ("perf/x86/amd: AMD IOMMU Performance Counter PERF uncore PMU implementation")
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20210415001112.3024673-1-nathan@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f61295900937186937e71152dc4cec86df4e02e2
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Apr 9 14:08:17 2021 +0300

    HSI: core: fix resource leaks in hsi_add_client_from_dt()
    
    [ Upstream commit 5c08b0f75575648032f309a6f58294453423ed93 ]
    
    If some of the allocations fail between the dev_set_name() and the
    device_register() then the name will not be freed.  Fix this by
    moving dev_set_name() directly in front of the call to device_register().
    
    Fixes: a2aa24734d9d ("HSI: Add common DT binding for HSI client devices")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Jason Gunthorpe <jgg@nvidia.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a961733c9a8e8f8fecd7578218047cd878ab6d44
Author: Jernej Skrabec <jernej.skrabec@siol.net>
Date:   Mon Apr 12 17:43:49 2021 +0200

    media: cedrus: Fix H265 status definitions
    
    [ Upstream commit 147d211cc9b4d753148d1640a1758b25edfbf437 ]
    
    Some of the H265 status flags are wrong. Redefine them to corespond to
    Allwinner CedarC open source userspace library. Only one of these flags
    is actually used and new value also matches value used in libvdpau-sunxi
    library, which is proven to be working.
    
    Note that wrong (old) value in right circumstances (in combination with
    another H265 decoding bug) causes driver lock up. With this fix decoding
    is still broken (green output) but at least driver doesn't lock up.
    
    Fixes: 86caab29da78 ("media: cedrus: Add HEVC/H.265 decoding support")
    Signed-off-by: Jernej Skrabec <jernej.skrabec@siol.net>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af74515995284cbc53a9445ce9d246decc7ad165
Author: Neil Armstrong <narmstrong@baylibre.com>
Date:   Mon Apr 12 15:48:33 2021 +0200

    media: meson-ge2d: fix rotation parameters
    
    [ Upstream commit 87e780db2253a1759822c2c9ea207135fcc059de ]
    
    With these settings, 90deg and 270deg rotation leads to inverted
    vertical, fix them to have correct rotation.
    
    Fixes: 59a635327ca7 ("media: meson: Add M2M driver for the Amlogic GE2D Accelerator Unit")
    Signed-off-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3709013f59ae15d2ce0e08f68d03077b05dcdde3
Author: Niklas Cassel <niklas.cassel@wdc.com>
Date:   Fri Apr 9 20:12:55 2021 +0200

    nvme-pci: don't simple map sgl when sgls are disabled
    
    [ Upstream commit e51183be1fa96dc6d3cd11b3c25a0f595807315e ]
    
    According to the module parameter description for sgl_threshold,
    a value of 0 means that SGLs are disabled.
    
    If SGLs are disabled, we should respect that, even for the case
    where the request is made up of a single physical segment.
    
    Fixes: 297910571f08 ("nvme-pci: optimize mapping single segment requests using SGLs")
    Signed-off-by: Niklas Cassel <niklas.cassel@wdc.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d14cda3129233d7bb3b3d860a681b7a8e7be3d5
Author: Elad Grupi <elad.grupi@dell.com>
Date:   Wed Mar 31 17:13:14 2021 +0800

    nvmet-tcp: fix a segmentation fault during io parsing error
    
    [ Upstream commit bdaf13279192c60b2b1fc99badef53b494fec055 ]
    
    In case there is an io that contains inline data and it goes to
    parsing error flow, command response will free command and iov
    before clearing the data on the socket buffer.
    This will delay the command response until receive flow is completed.
    
    Fixes: 872d26a391da ("nvmet-tcp: add NVMe over TCP target driver")
    Signed-off-by: Elad Grupi <elad.grupi@dell.com>
    Signed-off-by: Hou Pu <houpu.main@gmail.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fee3fece9d842004aa78264c2d04f030595d8c8a
Author: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
Date:   Wed Mar 3 18:51:35 2021 +0100

    mfd: stm32-timers: Avoid clearing auto reload register
    
    [ Upstream commit 4917e498c6894ba077867aff78f82cffd5ffbb5c ]
    
    The ARR register is cleared unconditionally upon probing, after the maximum
    value has been read. This initial condition is rather not intuitive, when
    considering the counter child driver. It rather expects the maximum value
    by default:
    - The counter interface shows a zero value by default for 'ceiling'
      attribute.
    - Enabling the counter without any prior configuration makes it doesn't
      count.
    
    The reset value of ARR register is the maximum. So Choice here
    is to backup it, and restore it then, instead of clearing its value.
    It also fixes the initial condition seen by the counter driver.
    
    Fixes: d0f949e220fd ("mfd: Add STM32 Timers driver")
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Acked-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6aab92b5cb8aa6abb680fd0fe557488b6ab6af2e
Author: Orson Zhai <orson.zhai@unisoc.com>
Date:   Fri Mar 19 14:15:35 2021 +0800

    mailbox: sprd: Introduce refcnt when clients requests/free channels
    
    [ Upstream commit 9468ab84032f96496e998cfa173cd1d0ac316bcd ]
    
    Unisoc mailbox has no way to be enabled/disabled for any single channel.
    They can only be set to startup or shutdown as a whole device at same time.
    
    Add a variable to count references to avoid mailbox FIFO being reset
    unexpectedly when clients are requesting or freeing channels.
    
    Also add a lock to dismiss possible conflicts from register r/w in
    different startup or shutdown threads. And fix the crash problem when early
    interrupts come from channel which has not been requested by client yet.
    
    Fixes: ca27fc26cd22 ("mailbox: sprd: Add Spreadtrum mailbox driver")
    Signed-off-by: Orson Zhai <orson.zhai@unisoc.com>
    Reviewed-by: Baolin Wang <baolin.wang7@gmail.com>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0dcc67960c6ce07d0fb93d96ce9b1b537815c76b
Author: Brian King <brking@linux.vnet.ibm.com>
Date:   Mon Apr 12 18:10:09 2021 -0600

    scsi: ibmvfc: Fix invalid state machine BUG_ON()
    
    [ Upstream commit 15cfef8623a449d40d16541687afd58e78033be3 ]
    
    This fixes an issue hitting the BUG_ON() in ibmvfc_do_work(). When going
    through a host action of IBMVFC_HOST_ACTION_RESET, we change the action to
    IBMVFC_HOST_ACTION_TGT_DEL, then drop the host lock, and reset the CRQ,
    which changes the host state to IBMVFC_NO_CRQ. If, prior to setting the
    host state to IBMVFC_NO_CRQ, ibmvfc_init_host() is called, it can then end
    up changing the host action to IBMVFC_HOST_ACTION_INIT.  If we then change
    the host state to IBMVFC_NO_CRQ, we will then hit the BUG_ON().
    
    Make a couple of changes to avoid this. Leave the host action to be
    IBMVFC_HOST_ACTION_RESET or IBMVFC_HOST_ACTION_REENABLE until after we drop
    the host lock and reset or reenable the CRQ. Also harden the host state
    machine to ensure we cannot leave the reset / reenable state until we've
    finished processing the reset or reenable.
    
    Link: https://lore.kernel.org/r/20210413001009.902400-1-tyreld@linux.ibm.com
    Fixes: 73ee5d867287 ("[SCSI] ibmvfc: Fix soft lockup on resume")
    Signed-off-by: Brian King <brking@linux.vnet.ibm.com>
    [tyreld: added fixes tag]
    Signed-off-by: Tyrel Datwyler <tyreld@linux.ibm.com>
    [mkp: fix comment checkpatch warnings]
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9a5b491ee9e0517dee4638f29abe88078c6e53a2
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Tue Mar 30 20:45:12 2021 +0300

    scsi: sni_53c710: Add IRQ check
    
    [ Upstream commit 1160d61bc51e87e509cfaf9da50a0060f67b6de4 ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to request_irq() (which takes
    *unsigned* IRQ #s), causing it to fail with -EINVAL (overridden by -ENODEV
    further below).  Stop calling request_irq() with the invalid IRQ #s.
    
    Link: https://lore.kernel.org/r/8f4b8fa5-8251-b977-70a1-9099bcb4bb17@omprussia.ru
    Fixes: c27d85f3f3c5 ("[SCSI] SNI RM 53c710 driver")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a808b2b925be434f9edc93fb97245c392cd579af
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Tue Mar 30 20:44:08 2021 +0300

    scsi: sun3x_esp: Add IRQ check
    
    [ Upstream commit 14b321380eb333c82853d7d612d0995f05f88fdc ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to request_irq() (which takes
    *unsigned* IRQ #), causing it to fail with -EINVAL, overriding the real
    error code.  Stop calling request_irq() with the invalid IRQ #s.
    
    Link: https://lore.kernel.org/r/363eb4c8-a3bf-4dc9-2a9e-90f349030a15@omprussia.ru
    Fixes: 0bb67f181834 ("[SCSI] sun3x_esp: convert to esp_scsi")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 47c242dc76c82aa29fbd8a059265019913688a4e
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Tue Mar 30 20:43:23 2021 +0300

    scsi: jazz_esp: Add IRQ check
    
    [ Upstream commit 38fca15c29db6ed06e894ac194502633e2a7d1fb ]
    
    The driver neglects to check the result of platform_get_irq()'s call and
    blithely passes the negative error codes to request_irq() (which takes
    *unsigned* IRQ #), causing it to fail with -EINVAL, overriding the real
    error code.  Stop calling request_irq() with the invalid IRQ #s.
    
    Link: https://lore.kernel.org/r/594aa9ae-2215-49f6-f73c-33bd38989912@omprussia.ru
    Fixes: 352e921f0dd4 ("[SCSI] jazz_esp: converted to use esp_core")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12e8332ac74fb745f2920e5457dbcbd0d9bcc7d6
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Sat Apr 3 23:43:55 2021 +0300

    scsi: hisi_sas: Fix IRQ checks
    
    [ Upstream commit 6c11dc060427e07ca144eacaccd696106b361b06 ]
    
    Commit df2d8213d9e3 ("hisi_sas: use platform_get_irq()") failed to take
    into account that irq_of_parse_and_map() and platform_get_irq() have a
    different way of indicating an error: the former returns 0 and the latter
    returns a negative error code. Fix up the IRQ checks!
    
    Link: https://lore.kernel.org/r/810f26d3-908b-1d6b-dc5c-40019726baca@omprussia.ru
    Fixes: df2d8213d9e3 ("hisi_sas: use platform_get_irq()")
    Acked-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0bb0751c28bb51a40532352c331af9f0d1c08534
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Mon Mar 29 23:50:58 2021 +0300

    scsi: ufs: ufshcd-pltfrm: Fix deferred probing
    
    [ Upstream commit 339c9b63cc7ce779ce45c675bf709cb58b807fc3 ]
    
    The driver overrides the error codes returned by platform_get_irq() to
    -ENODEV, so if it returns -EPROBE_DEFER, the driver would fail the probe
    permanently instead of the deferred probing.  Propagate the error code
    upstream as it should have been done from the start...
    
    Link: https://lore.kernel.org/r/420364ca-614a-45e3-4e35-0e0653c7bc53@omprussia.ru
    Fixes: 2953f850c3b8 ("[SCSI] ufs: use devres functions for ufshcd")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27b44a8e143abb6a2e8f84212fe4f107164848ca
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Apr 7 14:58:40 2021 +0100

    scsi: pm80xx: Fix potential infinite loop
    
    [ Upstream commit 40fa7394a1ad5706e795823276f2e394cca145d0 ]
    
    The for-loop iterates with a u8 loop counter i and compares this with the
    loop upper limit of pm8001_ha->max_q_num which is a u32 type.  There is a
    potential infinite loop if pm8001_ha->max_q_num is larger than the u8 loop
    counter. Fix this by making the loop counter the same type as
    pm8001_ha->max_q_num.
    
    [mkp: this is purely theoretical, max_q_num is currently limited to 64]
    
    Link: https://lore.kernel.org/r/20210407135840.494747-1-colin.king@canonical.com
    Fixes: 65df7d1986a1 ("scsi: pm80xx: Fix chip initialization failure")
    Addresses-Coverity: ("Infinite loop")
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9f61c4bb402a599d90cccc7354cca66cff13d30
Author: Igor Pylypiv <ipylypiv@google.com>
Date:   Tue Apr 6 11:05:33 2021 -0700

    scsi: pm80xx: Increase timeout for pm80xx mpi_uninit_check()
    
    [ Upstream commit 3f744a14f331f56703a9d74e86520db045f11831 ]
    
    The mpi_uninit_check() takes longer for inbound doorbell register to be
    cleared. Increase the timeout substantially so that the driver does not
    fail to load.
    
    Previously, the inbound doorbell wait time was mistakenly increased in the
    mpi_init_check() instead of mpi_uninit_check(). It is okay to leave the
    mpi_init_check() wait time as-is as these are timeout values and if there
    is a failure, waiting longer is not an issue.
    
    Link: https://lore.kernel.org/r/20210406180534.1924345-2-ipylypiv@google.com
    Fixes: e90e236250e9 ("scsi: pm80xx: Increase timeout for pm80xx mpi_uninit_check")
    Reviewed-by: Vishakha Channapattan <vishakhavc@google.com>
    Acked-by: Jack Wang <jinpu.wang@ionos.com>
    Signed-off-by: Igor Pylypiv <ipylypiv@google.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cbc1be3bf6f4dfbd83f1c7d8e42525933ae11025
Author: Colin Ian King <colin.king@canonical.com>
Date:   Fri Apr 9 10:01:03 2021 +0100

    clk: uniphier: Fix potential infinite loop
    
    [ Upstream commit f6b1340dc751a6caa2a0567b667d0f4f4172cd58 ]
    
    The for-loop iterates with a u8 loop counter i and compares this
    with the loop upper limit of num_parents that is an int type.
    There is a potential infinite loop if num_parents is larger than
    the u8 loop counter. Fix this by making the loop counter the same
    type as num_parents.  Also make num_parents an unsigned int to
    match the return type of the call to clk_hw_get_num_parents.
    
    Addresses-Coverity: ("Infinite loop")
    Fixes: 734d82f4a678 ("clk: uniphier: add core support code for UniPhier clock driver")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Masahiro Yamada <masahiroy@kernel.org>
    Link: https://lore.kernel.org/r/20210409090104.629722-1-colin.king@canonical.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fa8634493253c3f8932410a65680f588c7b7e4a
Author: Gustavo A. R. Silva <gustavoars@kernel.org>
Date:   Sun Apr 11 21:43:15 2021 +0800

    bcache: Use 64-bit arithmetic instead of 32-bit
    
    [ Upstream commit 62594f189e81caffa6a3bfa2fdb08eec2e347c76 ]
    
    Cast multiple variables to (int64_t) in order to give the compiler
    complete information about the proper arithmetic to use. Notice that
    these variables are being used in contexts that expect expressions of
    type int64_t  (64 bit, signed). And currently, such expressions are
    being evaluated using 32-bit arithmetic.
    
    Fixes: d0cf9503e908 ("octeontx2-pf: ethtool fec mode support")
    Addresses-Coverity-ID: 1501724 ("Unintentional integer overflow")
    Addresses-Coverity-ID: 1501725 ("Unintentional integer overflow")
    Addresses-Coverity-ID: 1501726 ("Unintentional integer overflow")
    Signed-off-by: Gustavo A. R. Silva <gustavoars@kernel.org>
    Signed-off-by: Coly Li <colyli@suse.de>
    Link: https://lore.kernel.org/r/20210411134316.80274-7-colyli@suse.de
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 545195b478a152fa854185a1ea63ed6d843d1239
Author: Yingjie Wang <wangyingjie55@126.com>
Date:   Tue Apr 6 20:10:04 2021 -0700

    drm/radeon: Fix a missing check bug in radeon_dp_mst_detect()
    
    [ Upstream commit 25315ebfaefcffd126a266116b37bb8a3d1c4620 ]
    
    In radeon_dp_mst_detect(), We should check whether or not @connector
    has been unregistered from userspace. If the connector is unregistered,
    we should return disconnected status.
    
    Fixes: 9843ead08f18 ("drm/radeon: add DisplayPort MST support (v2)")
    Signed-off-by: Yingjie Wang <wangyingjie55@126.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d4dae4b6277bc39b7da77a7a31cb55828bb0b53
Author: Sefa Eyeoglu <contact@scrumplex.net>
Date:   Tue Mar 16 22:50:06 2021 +0100

    drm/amd/display: check fb of primary plane
    
    [ Upstream commit 7df4ceb60fa9a3c5160cfd5b696657291934a2c9 ]
    
    Sometimes the primary plane might not be initialized (yet), which
    causes dm_check_crtc_cursor to divide by zero.
    Apparently a weird state before a S3-suspend causes the aforementioned
    divide-by-zero error when resuming from S3.  This was explained in
    bug 212293 on Bugzilla.
    
    To avoid this divide-by-zero error we check if the primary plane's fb
    isn't NULL.  If it's NULL the src_w and src_h attributes will be 0,
    which would cause a divide-by-zero.
    
    This fixes Bugzilla report 212293
    Bug: https://bugzilla.kernel.org/show_bug.cgi?id=212293
    
    Fixes: 12f4849a1cfd69f3 ("drm/amd/display: check cursor scaling")
    Reviewed-by: Simon Ser <contact@emersion.fr>
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Sefa Eyeoglu <contact@scrumplex.net>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fb4c0863779ec0edf94fffb8d3986da17b9205fa
Author: Nirmoy Das <nirmoy.das@amd.com>
Date:   Wed Mar 17 11:38:11 2021 +0100

    drm/amd/display: use GFP_ATOMIC in dcn20_resource_construct
    
    [ Upstream commit 3bb1105071fb974e3e3ca2f92ddfd69c81285ab6 ]
    
    Replace GFP_KERNEL with GFP_ATOMIC as dcn20_resource_construct()
    can't sleep.
    
    Partially fixes: https://bugzilla.kernel.org/show_bug.cgi?id=212311
    as dcn20_resource_construct() also calls into SMU functions which does
    mutex_lock().
    
    Reviewed-by: Harry Wentland <harry.wentland@amd.com>
    Signed-off-by: Nirmoy Das <nirmoy.das@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82c27430cab9e33e8f0b06ff53666ed96d69e696
Author: Chen Hui <clare.chenhui@huawei.com>
Date:   Fri Apr 9 16:23:52 2021 +0800

    clk: qcom: apss-ipq-pll: Add missing MODULE_DEVICE_TABLE
    
    [ Upstream commit d0a859edda46b45baeab9687d173102300d76e2b ]
    
    CONFIG_IPQ_APSS_PLL is tristate option and therefore this driver can
    be compiled as a module. This patch adds missing MODULE_DEVICE_TABLE
    definition which generates correct modalias for automatic loading of
    this driver when it is built as an external module.
    
    Fixes: ecd2bacfbbc4 ("clk: qcom: Add ipq apss pll driver")
    Signed-off-by: Chen Hui <clare.chenhui@huawei.com>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Link: https://lore.kernel.org/r/20210409082352.233810-4-clare.chenhui@huawei.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b536656197483a778ac566a1242dea17bee1843
Author: Chen Hui <clare.chenhui@huawei.com>
Date:   Fri Apr 9 16:23:51 2021 +0800

    clk: qcom: a53-pll: Add missing MODULE_DEVICE_TABLE
    
    [ Upstream commit 790b516ada10a4dcc0f0a56dc0ced475d86d5820 ]
    
    CONFIG_QCOM_A53PLL is tristate option and therefore this driver can be
    compiled as a module. This patch adds missing MODULE_DEVICE_TABLE
    definition which generates correct modalias for automatic loading of
    this driver when it is built as an external module.
    
    Fixes: 0c6ab1b8f894 ("clk: qcom: Add A53 PLL support")
    Signed-off-by: Chen Hui <clare.chenhui@huawei.com>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Link: https://lore.kernel.org/r/20210409082352.233810-3-clare.chenhui@huawei.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7246e5b14e7fe38071892ae851a88f81b5ddf77
Author: Chen Hui <clare.chenhui@huawei.com>
Date:   Fri Apr 9 16:23:50 2021 +0800

    clk: qcom: a7-pll: Add missing MODULE_DEVICE_TABLE
    
    [ Upstream commit 77a618b1481f6fdb41b7585ed0f67c47fb8401e5 ]
    
    CONFIG_QCOM_A7PLL is tristate option and therefore this driver can be
    compiled as a module. This patch adds missing MODULE_DEVICE_TABLE
    definition which generates correct modalias for automatic loading of
    this driver when it is built as an external module.
    
    Fixes: 5a5223ffd7ef ("clk: qcom: Add A7 PLL support")
    Signed-off-by: Chen Hui <clare.chenhui@huawei.com>
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Link: https://lore.kernel.org/r/20210409082352.233810-2-clare.chenhui@huawei.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30a9ab25da0b8d16e7fee88c18f2e2e7313bc730
Author: Jacopo Mondi <jacopo+renesas@jmondi.org>
Date:   Fri Mar 19 17:41:39 2021 +0100

    media: i2c: rdamc21: Fix warning on u8 cast
    
    [ Upstream commit 5f58ac04f36e32507d8f60fd47266ae2a60a2fa8 ]
    
    Sparse reports a warning on a cast to u8 of a 16 bits constant.
    
    drivers/media/i2c/rdacm21.c:348:62: warning: cast truncates bits
    from constant value (300a becomes a)
    
    Even if the behaviour is intended, silence the sparse warning replacing
    the cast with a bitwise & operation.
    
    Fixes: a59f853b3b4b ("media: i2c: Add driver for RDACM21 camera module")
    Reported-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reviewed-by: Kieran Bingham <kieran.bingham+renesas@ideasonboard.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Jacopo Mondi <jacopo+renesas@jmondi.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58a54902ec869b8d051a0a282f252c750c1f33c8
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 30 12:31:52 2021 +0300

    drm: xlnx: zynqmp: fix a memset in zynqmp_dp_train()
    
    [ Upstream commit 5842ab76bbfadb37eaea91e53c1efe34ae504e4a ]
    
    The dp->train_set[] for this driver is only two characters, not four so
    this memsets too much.  Fortunately, this ends up corrupting a struct
    hole and not anything important.
    
    Fixes: d76271d22694 ("drm: xlnx: DRM/KMS driver for Xilinx ZynqMP DisplayPort Subsystem")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/YGLwCBMotnrKZu6P@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ba158f2fb0c6b7dd40cc515e9667babe423fe0f5
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Tue Apr 6 23:31:31 2021 +0800

    clk: zynqmp: pll: add set_pll_mode to check condition in zynqmp_pll_enable
    
    [ Upstream commit 394cdb69a3c30b33524cf1204afe5cceaba69cdc ]
    
    If there is a IOCTL_SET_PLL_FRAC_MODE request sent to ATF ever,
    we shouldn't skip invoking PM_CLOCK_ENABLE fn even though this
    pll has been enabled. In ATF implementation, it will only assign
    the mode to the variable (struct pm_pll *)pll->mode when handling
    IOCTL_SET_PLL_FRAC_MODE call. Invoking PM_CLOCK_ENABLE can force
    ATF send request to PWU to set the pll mode to PLL's register.
    
    There is a scenario that happens in enabling VPLL_INT(clk_id:96):
    1) VPLL_INT has been enabled during booting.
    2) A driver calls clk_set_rate and according to the rate, the VPLL_INT
       should be set to FRAC mode. Then zynqmp_pll_set_mode is called
       to pass IOCTL_SET_PLL_FRAC_MODE to ATF. Note that at this point
       ATF just stores the mode to a variable.
    3) This driver calls clk_prepare_enable and zynqmp_pll_enable is
       called to try to enable VPLL_INT pll. Because of 1), the function
       zynqmp_pll_enable just returns without doing anything after checking
       that this pll has been enabled.
    
    In the scenario above, the pll mode of VPLL_INT will never be set
    successfully. So adding set_pll_mode to check condition to fix it.
    
    Fixes: 3fde0e16d016 ("drivers: clk: Add ZynqMP clock driver")
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Tested-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Link: https://lore.kernel.org/r/20210406153131.601701-1-quanyang.wang@windriver.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8e4e49b0e723b2ba4583320f4e48c1cc86e05015
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Tue Apr 6 23:40:15 2021 +0800

    clk: zynqmp: move zynqmp_pll_set_mode out of round_rate callback
    
    [ Upstream commit d7fd3f9f53df8bb2212dff70f66f12cae0e1a653 ]
    
    The round_rate callback should only perform rate calculation and not
    involve calling zynqmp_pll_set_mode to change the pll mode. So let's
    move zynqmp_pll_set_mode out of round_rate and to set_rate callback.
    
    Fixes: 3fde0e16d016 ("drivers: clk: Add ZynqMP clock driver")
    Reported-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Link: https://lore.kernel.org/r/20210406154015.602779-1-quanyang.wang@windriver.com
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d2527bb1a700e2ad5023832ad11422a617212acd
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Apr 6 16:40:25 2021 -0300

    vfio/mdev: Do not allow a mdev_type to have a NULL parent pointer
    
    [ Upstream commit b5a1f8921d5040bb788492bf33a66758021e4be5 ]
    
    There is a small race where the parent is NULL even though the kobj has
    already been made visible in sysfs.
    
    For instance the attribute_group is made visible in sysfs_create_files()
    and the mdev_type_attr_show() does:
    
        ret = attr->show(kobj, type->parent->dev, buf);
    
    Which will crash on NULL parent. Move the parent setup to before the type
    pointer leaves the stack frame.
    
    Fixes: 7b96953bc640 ("vfio: Mediated device Core driver")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Message-Id: <2-v2-d36939638fc6+d54-vfio2_jgg@nvidia.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe1ee6b61c598e5fe9c61e8fec2aac730ec2d3a5
Author: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Date:   Thu Mar 18 13:54:35 2021 +0300

    drm/msm/dpu: enable DPU_SSPP_QOS_8LVL for SM8250
    
    [ Upstream commit 095eed898485312f86b7cb593da4f9cd5c43fdb0 ]
    
    SM8250 platform has a 8-Levels VIG QoS setting. This setting was missed
    due to bad interaction with b8dab65b5ac3 ("drm/msm/dpu: Move
    DPU_SSPP_QOS_8LVL bit to SDM845 and SC7180 masks"), which was applied in
    parallel.
    
    Fixes: d21fc5dfc3df ("drm/msm/dpu1: add support for qseed3lite used on sm8250")
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20210318105435.2011222-1-dmitry.baryshkov@linaro.org
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5f5f4d297622ca45a0d08d2a0ce7d3094faab524
Author: Rob Clark <robdclark@chromium.org>
Date:   Wed Mar 31 18:27:20 2021 -0700

    drm/msm: Fix debugfs deadlock
    
    [ Upstream commit 6ed0897cd800c38b92a33d335d9086c7b092eb15 ]
    
    In normal cases the gem obj lock is acquired first before mm_lock.  The
    exception is iterating the various object lists.  In the shrinker path,
    deadlock is avoided by using msm_gem_trylock() and skipping over objects
    that cannot be locked.  But for debugfs the straightforward thing is to
    split things out into a separate list of all objects protected by it's
    own lock.
    
    Fixes: d984457b31c4 ("drm/msm: Add priv->mm_lock to protect active/inactive lists")
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Tested-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Link: https://lore.kernel.org/r/20210401012722.527712-4-robdclark@gmail.com
    Signed-off-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6694b8daffac5a8661071f085608afc78f7acd08
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Mar 30 09:53:06 2021 -0600

    vfio/pci: Re-order vfio_pci_probe()
    
    [ Upstream commit 4aeec3984ddc853f7c65903bde472ffdef738bae ]
    
    vfio_add_group_dev() must be called only after all of the private data in
    vdev is fully setup and ready, otherwise there could be races with user
    space instantiating a device file descriptor and starting to call ops.
    
    For instance vfio_pci_reflck_attach() sets vdev->reflck and
    vfio_pci_open(), called by fops open, unconditionally derefs it, which
    will crash if things get out of order.
    
    Fixes: cc20d7999000 ("vfio/pci: Introduce VF token")
    Fixes: e309df5b0c9e ("vfio/pci: Parallelize device open and release")
    Fixes: 6eb7018705de ("vfio-pci: Move idle devices to D3hot power state")
    Fixes: ecaa1f6a0154 ("vfio-pci: Add VGA arbiter client")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Message-Id: <8-v3-225de1400dfc+4e074-vfio1_jgg@nvidia.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cd48042b764bef895b855fff609b38d5957185e6
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Mar 30 09:53:06 2021 -0600

    vfio/pci: Move VGA and VF initialization to functions
    
    [ Upstream commit 61e90817482871b614133c0f20feb1aba2faec86 ]
    
    vfio_pci_probe() is quite complicated, with optional VF and VGA sub
    components. Move these into clear init/uninit functions and have a linear
    flow in probe/remove.
    
    This fixes a few little buglets:
     - vfio_pci_remove() is in the wrong order, vga_client_register() removes
       a notifier and is after kfree(vdev), but the notifier refers to vdev,
       so it can use after free in a race.
     - vga_client_register() can fail but was ignored
    
    Organize things so destruction order is the reverse of creation order.
    
    Fixes: ecaa1f6a0154 ("vfio-pci: Add VGA arbiter client")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Kevin Tian <kevin.tian@intel.com>
    Reviewed-by: Max Gurtovoy <mgurtovoy@nvidia.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: Eric Auger <eric.auger@redhat.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Message-Id: <7-v3-225de1400dfc+4e074-vfio1_jgg@nvidia.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d63e156085ac0bc7ece0d709ede19706229dbce6
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Mar 30 09:53:06 2021 -0600

    vfio/fsl-mc: Re-order vfio_fsl_mc_probe()
    
    [ Upstream commit 2b1fe162e584a88ec7f12a651a2a50f94dd8cfac ]
    
    vfio_add_group_dev() must be called only after all of the private data in
    vdev is fully setup and ready, otherwise there could be races with user
    space instantiating a device file descriptor and starting to call ops.
    
    For instance vfio_fsl_mc_reflck_attach() sets vdev->reflck and
    vfio_fsl_mc_open(), called by fops open, unconditionally derefs it, which
    will crash if things get out of order.
    
    This driver started life with the right sequence, but two commits added
    stuff after vfio_add_group_dev().
    
    Fixes: 2e0d29561f59 ("vfio/fsl-mc: Add irq infrastructure for fsl-mc devices")
    Fixes: f2ba7e8c947b ("vfio/fsl-mc: Added lock support in preparation for interrupt handling")
    Co-developed-by: Diana Craciun OSS <diana.craciun@oss.nxp.com>
    Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
    Message-Id: <5-v3-225de1400dfc+4e074-vfio1_jgg@nvidia.com>
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d285d8a767f6e770d2262b9e4f6e06d16ce5bf0
Author: Daniel Almeida <daniel.almeida@collabora.com>
Date:   Tue Mar 23 19:57:09 2021 +0100

    media: rkvdec: Do not require all controls to be present in every request
    
    [ Upstream commit 54676d5f5630b79f7b00c7c43882a58c1815aaf9 ]
    
    According to the v4l2 api, it is allowed to skip
    setting a control if its contents haven't changed for performance
    reasons: userspace should only update the controls that changed from
    last frame rather then updating them all. Still some ancient code
    that checks for mandatory controls has been left in this driver.
    
    Remove it.
    
    Fixes: cd33c830448b ("media: rkvdec: Add the rkvdec driver")
    Signed-off-by: Daniel Almeida <daniel.almeida@collabora.com>
    Reviewed-by: Ezequiel Garcia <ezequiel@collabora.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bde1744150a44a3486cac1f6bbfe335e030b57f1
Author: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Date:   Sat Mar 27 12:27:40 2021 +0100

    media: v4l2-ctrls.c: fix race condition in hdl->requests list
    
    [ Upstream commit be7e8af98f3af729aa9f08b1053f9533a5cceb91 ]
    
    When a request is re-inited it will release all control handler
    objects that are still in the request. It does that by unbinding
    and putting all those objects. When the object is unbound the
    obj->req pointer is set to NULL, and the object's unbind op is
    called. When the object it put the object's release op is called
    to free the memory.
    
    For a request object that contains a control handler that means
    that v4l2_ctrl_handler_free() is called in the release op.
    
    A control handler used in a request has a pointer to the main
    control handler that is created by the driver and contains the
    current state of all controls. If the device is unbound (due to
    rmmod or a forced unbind), then that main handler is freed, again
    by calling v4l2_ctrl_handler_free(), and any outstanding request
    objects that refer to that main handler have to be unbound and put
    as well.
    
    It does that by this test:
    
            if (!hdl->req_obj.req && !list_empty(&hdl->requests)) {
    
    I.e. the handler has no pointer to a request, so is the main
    handler, and one or more request objects refer to this main
    handler.
    
    However, this test is wrong since hdl->req_obj.req is actually
    NULL when re-initing a request (the object unbind will set req to
    NULL), and the only reason this seemingly worked is that the
    requests list is typically empty since the request's unbind op
    will remove the handler from the requests list.
    
    But if another thread is at the same time adding a new control
    to a request, then there is a race condition where one thread
    is removing a control handler object from the requests list and
    another thread is adding one. The result is that hdl->requests
    is no longer empty and the code thinks that a main handler is
    being freed instead of a control handler that is part of a request.
    
    There are two bugs here: first the test for hdl->req_obj.req: this
    should be hdl->req_obj.ops since only the main control handler will
    have a NULL pointer there.
    
    The second is that adding or deleting request objects from the
    requests list of the main handler isn't protected by taking the
    main handler's lock.
    
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Reported-by: John Cox <jc@kynesim.co.uk>
    Fixes: 6fa6f831f095 ("media: v4l2-ctrls: add core request support")
    Tested-by: John Cox <jc@kynesim.co.uk>
    Reported-by: John Cox <jc@kynesim.co.uk>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8620674de11d59f56faf860e2730acb01cf70f7e
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Thu Mar 11 10:52:05 2021 +0100

    media: i2c: imx219: Balance runtime PM use-count
    
    [ Upstream commit dd90caa0111e178b52b21e56364bc2244a3973b3 ]
    
    Move incrementing/decrementing runtime PM count to
    imx219_start_streaming()/imx219_stop_streaming() functions respectively.
    
    This fixes an issue of unbalanced runtime PM count in resume callback
    error path where streaming is stopped and runtime PM count is left
    unbalanced.
    
    Fixes: 1283b3b8f82b9 ("media: i2c: Add driver for Sony IMX219 sensor")
    Reported-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5ea9d36e03f68b26ee75d19c5ec0e443d401eacf
Author: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
Date:   Thu Mar 11 10:52:04 2021 +0100

    media: i2c: imx219: Move out locking/unlocking of vflip and hflip controls from imx219_set_stream
    
    [ Upstream commit 745d4612d2c853c00abadbf69799c8aee7f99c39 ]
    
    Move out locking/unlocking of vflip and hflip controls from
    imx219_set_stream() to the imx219_start_streaming()/
    imx219_stop_streaming() respectively.
    
    This fixes an issue in resume callback error path where streaming is
    stopped and the controls are left in locked state.
    
    Fixes: 1283b3b8f82b9 ("media: i2c: Add driver for Sony IMX219 sensor")
    Reported-by: Pavel Machek <pavel@denx.de>
    Signed-off-by: Lad Prabhakar <prabhakar.mahadev-lad.rj@bp.renesas.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 762e2b204fd939ed90aed9fae682d80244ae8798
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Mon Feb 15 08:55:12 2021 +0100

    media: ipu3-cio2: Fix pixel-rate derived link frequency
    
    [ Upstream commit a7de6eac6f6f73d48d97a6c93032107775f4593b ]
    
    The driver uses v4l2_get_link_freq() helper to obtain the link frequency
    using the LINK_FREQ but also the PIXEL_RATE control. The divisor for the
    pixel rate derived link frequency was wrong, missing the bus uses double
    data rate. Fix this.
    
    Reported-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Fixes: 4b6c129e87a3 ("media: ipu3-cio2: Use v4l2_get_link_freq helper")
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Reviewed-by: Bingbu Cao <bingbu.cao@intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e101ec9c8b0fe066965911b7fdc94101280b0e6
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Tue Jan 5 15:21:11 2021 +0100

    media: ccs: Fix sub-device function
    
    [ Upstream commit 8c43126e8c9f0990fa75fb5219c03b20d5ead7b7 ]
    
    Fix sub-device function for the pixel array and the scaler.
    
    It seems that the pixel array had gotten assigned as SCALER whereas the
    scaler had CAM_SENSOR function. Fix this by setting the pixel array
    function to CAM_SENSOR and that of scaler to SCALER.
    
    Fixes: 9ec2ac9bd0f9 ("media: ccs: Give all subdevs a function")
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b71d5587fa7c794031a5bf2830dc1af892a26ca
Author: Hannes Reinecke <hare@suse.de>
Date:   Sat Dec 5 16:29:01 2020 +0100

    nvme: retrigger ANA log update if group descriptor isn't found
    
    [ Upstream commit dd8f7fa908f66dd44abcd83cbb50410524b9f8ef ]
    
    If ANA is enabled but no ANA group descriptor is found when creating
    a new namespace the ANA log is most likely out of date, so trigger
    a re-read. The namespace will be tagged with the NS_ANA_PENDING flag
    to exclude it from path selection until the ANA log has been re-read.
    
    Fixes: 32acab3181c7 ("nvme: implement multipath access to nvme subsystems")
    Reported-by: Martin George <marting@netapp.com>
    Signed-off-by: Hannes Reinecke <hare@suse.de>
    Reviewed-by: Keith Busch <kbusch@kernel.org>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59c2459bc180a2e4be57dac5ee9219074f069de4
Author: Ricardo Rivera-Matos <r-rivera-matos@ti.com>
Date:   Wed Feb 10 16:56:46 2021 -0600

    power: supply: bq25980: Move props from battery node
    
    [ Upstream commit 04722cec1436c732d39153ce6ae2ebf71ac3ade7 ]
    
    Currently POWER_SUPPLY_PROP_CONSTANT_CHARGE_CURRENT and
    POWER_SUPPLY_PROP_CONSTANT_CHARGE_VOLTAGE are exposed on
    the battery node and this is incorrect.
    
    This patch exposes both of them on the charger node rather
    than the battery node.
    
    Fixes: 5069185fc18e ("power: supply: bq25980: Add support for the BQ259xx family")
    Signed-off-by: Ricardo Rivera-Matos <r-rivera-matos@ti.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 81e4bfac2a49e30cd98802dc841fe028e75e0eb2
Author: Adam Ford <aford173@gmail.com>
Date:   Sat Mar 13 06:28:17 2021 -0600

    clk: imx: Fix reparenting of UARTs not associated with stdout
    
    [ Upstream commit 379c9a24cc239000b1dec53db02fe17a86947423 ]
    
    Most if not all i.MX SoC's call a function which enables all UARTS.
    This is a problem for users who need to re-parent the clock source,
    because any attempt to change the parent results in an busy error
    due to the fact that the clocks have been enabled already.
    
      clk: failed to reparent uart1 to sys_pll1_80m: -16
    
    Instead of pre-initializing all UARTS, scan the device tree to see
    which UART clocks are associated to stdout, and only enable those
    UART clocks if it's needed early.  This will move initialization of
    the remaining clocks until after the parenting of the clocks.
    
    When the clocks are shutdown, this mechanism will also disable any
    clocks that were pre-initialized.
    
    Fixes: 9461f7b33d11c ("clk: fix CLK_SET_RATE_GATE with clock rate protection")
    Suggested-by: Aisheng Dong <aisheng.dong@nxp.com>
    Signed-off-by: Adam Ford <aford173@gmail.com>
    Reviewed-by: Abel Vesa <abel.vesa@nxp.com>
    Tested-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
    Signed-off-by: Abel Vesa <abel.vesa@nxp.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 906c538340dde6d891df89fe7dac8eaa724e40da
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Sun Mar 21 00:08:49 2021 -0700

    nvmet-tcp: fix incorrect locking in state_change sk callback
    
    [ Upstream commit b5332a9f3f3d884a1b646ce155e664cc558c1722 ]
    
    We are not changing anything in the TCP connection state so
    we should not take a write_lock but rather a read lock.
    
    This caused a deadlock when running nvmet-tcp and nvme-tcp
    on the same system, where state_change callbacks on the
    host and on the controller side have causal relationship
    and made lockdep report on this with blktests:
    
    ================================
    WARNING: inconsistent lock state
    5.12.0-rc3 #1 Tainted: G          I
    --------------------------------
    inconsistent {IN-SOFTIRQ-W} -> {SOFTIRQ-ON-R} usage.
    nvme/1324 [HC0[0]:SC0[0]:HE1:SE1] takes:
    ffff888363151000 (clock-AF_INET){++-?}-{2:2}, at: nvme_tcp_state_change+0x21/0x150 [nvme_tcp]
    {IN-SOFTIRQ-W} state was registered at:
      __lock_acquire+0x79b/0x18d0
      lock_acquire+0x1ca/0x480
      _raw_write_lock_bh+0x39/0x80
      nvmet_tcp_state_change+0x21/0x170 [nvmet_tcp]
      tcp_fin+0x2a8/0x780
      tcp_data_queue+0xf94/0x1f20
      tcp_rcv_established+0x6ba/0x1f00
      tcp_v4_do_rcv+0x502/0x760
      tcp_v4_rcv+0x257e/0x3430
      ip_protocol_deliver_rcu+0x69/0x6a0
      ip_local_deliver_finish+0x1e2/0x2f0
      ip_local_deliver+0x1a2/0x420
      ip_rcv+0x4fb/0x6b0
      __netif_receive_skb_one_core+0x162/0x1b0
      process_backlog+0x1ff/0x770
      __napi_poll.constprop.0+0xa9/0x5c0
      net_rx_action+0x7b3/0xb30
      __do_softirq+0x1f0/0x940
      do_softirq+0xa1/0xd0
      __local_bh_enable_ip+0xd8/0x100
      ip_finish_output2+0x6b7/0x18a0
      __ip_queue_xmit+0x706/0x1aa0
      __tcp_transmit_skb+0x2068/0x2e20
      tcp_write_xmit+0xc9e/0x2bb0
      __tcp_push_pending_frames+0x92/0x310
      inet_shutdown+0x158/0x300
      __nvme_tcp_stop_queue+0x36/0x270 [nvme_tcp]
      nvme_tcp_stop_queue+0x87/0xb0 [nvme_tcp]
      nvme_tcp_teardown_admin_queue+0x69/0xe0 [nvme_tcp]
      nvme_do_delete_ctrl+0x100/0x10c [nvme_core]
      nvme_sysfs_delete.cold+0x8/0xd [nvme_core]
      kernfs_fop_write_iter+0x2c7/0x460
      new_sync_write+0x36c/0x610
      vfs_write+0x5c0/0x870
      ksys_write+0xf9/0x1d0
      do_syscall_64+0x33/0x40
      entry_SYSCALL_64_after_hwframe+0x44/0xae
    irq event stamp: 10687
    hardirqs last  enabled at (10687): [<ffffffff9ec376bd>] _raw_spin_unlock_irqrestore+0x2d/0x40
    hardirqs last disabled at (10686): [<ffffffff9ec374d8>] _raw_spin_lock_irqsave+0x68/0x90
    softirqs last  enabled at (10684): [<ffffffff9f000608>] __do_softirq+0x608/0x940
    softirqs last disabled at (10649): [<ffffffff9cdedd31>] do_softirq+0xa1/0xd0
    
    other info that might help us debug this:
     Possible unsafe locking scenario:
    
           CPU0
           ----
      lock(clock-AF_INET);
      <Interrupt>
        lock(clock-AF_INET);
    
     *** DEADLOCK ***
    
    5 locks held by nvme/1324:
     #0: ffff8884a01fe470 (sb_writers#4){.+.+}-{0:0}, at: ksys_write+0xf9/0x1d0
     #1: ffff8886e435c090 (&of->mutex){+.+.}-{3:3}, at: kernfs_fop_write_iter+0x216/0x460
     #2: ffff888104d90c38 (kn->active#255){++++}-{0:0}, at: kernfs_remove_self+0x22d/0x330
     #3: ffff8884634538d0 (&queue->queue_lock){+.+.}-{3:3}, at: nvme_tcp_stop_queue+0x52/0xb0 [nvme_tcp]
     #4: ffff888363150d30 (sk_lock-AF_INET){+.+.}-{0:0}, at: inet_shutdown+0x59/0x300
    
    stack backtrace:
    CPU: 26 PID: 1324 Comm: nvme Tainted: G          I       5.12.0-rc3 #1
    Hardware name: Dell Inc. PowerEdge R640/06NR82, BIOS 2.10.0 11/12/2020
    Call Trace:
     dump_stack+0x93/0xc2
     mark_lock_irq.cold+0x2c/0xb3
     ? verify_lock_unused+0x390/0x390
     ? stack_trace_consume_entry+0x160/0x160
     ? lock_downgrade+0x100/0x100
     ? save_trace+0x88/0x5e0
     ? _raw_spin_unlock_irqrestore+0x2d/0x40
     mark_lock+0x530/0x1470
     ? mark_lock_irq+0x1d10/0x1d10
     ? enqueue_timer+0x660/0x660
     mark_usage+0x215/0x2a0
     __lock_acquire+0x79b/0x18d0
     ? tcp_schedule_loss_probe.part.0+0x38c/0x520
     lock_acquire+0x1ca/0x480
     ? nvme_tcp_state_change+0x21/0x150 [nvme_tcp]
     ? rcu_read_unlock+0x40/0x40
     ? tcp_mtu_probe+0x1ae0/0x1ae0
     ? kmalloc_reserve+0xa0/0xa0
     ? sysfs_file_ops+0x170/0x170
     _raw_read_lock+0x3d/0xa0
     ? nvme_tcp_state_change+0x21/0x150 [nvme_tcp]
     nvme_tcp_state_change+0x21/0x150 [nvme_tcp]
     ? sysfs_file_ops+0x170/0x170
     inet_shutdown+0x189/0x300
     __nvme_tcp_stop_queue+0x36/0x270 [nvme_tcp]
     nvme_tcp_stop_queue+0x87/0xb0 [nvme_tcp]
     nvme_tcp_teardown_admin_queue+0x69/0xe0 [nvme_tcp]
     nvme_do_delete_ctrl+0x100/0x10c [nvme_core]
     nvme_sysfs_delete.cold+0x8/0xd [nvme_core]
     kernfs_fop_write_iter+0x2c7/0x460
     new_sync_write+0x36c/0x610
     ? new_sync_read+0x600/0x600
     ? lock_acquire+0x1ca/0x480
     ? rcu_read_unlock+0x40/0x40
     ? lock_is_held_type+0x9a/0x110
     vfs_write+0x5c0/0x870
     ksys_write+0xf9/0x1d0
     ? __ia32_sys_read+0xa0/0xa0
     ? lockdep_hardirqs_on_prepare.part.0+0x198/0x340
     ? syscall_enter_from_user_mode+0x27/0x70
     do_syscall_64+0x33/0x40
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Fixes: 872d26a391da ("nvmet-tcp: add NVMe over TCP target driver")
    Reported-by: Yi Zhang <yi.zhang@redhat.com>
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7dee3feee3fdbca68235e4e6041edd6e7ed65c7
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Sun Mar 21 00:08:48 2021 -0700

    nvme-tcp: block BH in sk state_change sk callback
    
    [ Upstream commit 8b73b45d54a14588f86792869bfb23098ea254cb ]
    
    The TCP stack can run from process context for a long time
    so we should disable BH here.
    
    Fixes: 3f2304f8c6d6 ("nvme-tcp: add NVMe over TCP host driver")
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f0240a9cac40a945a28bf067b7bea1447d74d094
Author: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
Date:   Tue Mar 30 13:09:02 2021 +0200

    drm/mediatek: Don't support hdmi connector creation
    
    [ Upstream commit 2e477391522354e763aa62ee3e281c1ad9e8eb1b ]
    
    commit f01195148967 ("drm/mediatek: mtk_dpi: Create connector for bridges")
    broke the display support for elm device since mtk_dpi calls
    drm_bridge_attach with the flag DRM_BRIDGE_ATTACH_NO_CONNECTOR
    while mtk_hdmi does not yet support this flag.
    
    Fix this by accepting DRM_BRIDGE_ATTACH_NO_CONNECTOR in bridge attachment.
    Implement the drm_bridge_funcs .detect() and .get_edid() operations, and
    call drm_bridge_hpd_notify() to report HPD. This provides the
    necessary API to support disabling connector creation.
    
    In addition, the field 'conn' is removed from the mtk_hdmi struct since
    mtk_hdmi don't create a connector. It is replaced with a pointer
    'curr_conn' that points to the current connector which can be access
    through the global state.
    
    This patch is inspired by a similar patch for bridge/synopsys/dw-hdmi.c:
    commit ec971aaa6775
    ("drm: bridge: dw-hdmi: Make connector creation optional")
    But with the difference that in mtk-hdmi only the option of not creating
    a connector is supported.
    
    Fixes: f01195148967 ("drm/mediatek: mtk_dpi: Create connector for bridges")
    Signed-off-by: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb995c38e42a649e1a5c77a45a2f2e51919dceb7
Author: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
Date:   Tue Mar 30 13:09:01 2021 +0200

    drm/mediatek: Switch the hdmi bridge ops to the atomic versions
    
    [ Upstream commit 053d231f369ca05cd563ca9738b5a4c73908e697 ]
    
    The bridge operation '.enable' and the audio cb '.get_eld'
    access hdmi->conn. In the future we will want to support
    the flag DRM_BRIDGE_ATTACH_NO_CONNECTOR and then we will
    not have direct access to the connector.
    The atomic version '.atomic_enable' allows accessing the
    current connector from the state.
    This patch switches the bridge to the atomic version to
    prepare access to the connector in later patches.
    
    Signed-off-by: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Chun-Kuang Hu <chunkuang.hu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 61e93fa3f3ed42cbc2532428c51aa62be975f94e
Author: Kenta.Tada@sony.com <Kenta.Tada@sony.com>
Date:   Sun Mar 21 15:52:19 2021 +0000

    seccomp: Fix CONFIG tests for Seccomp_filters
    
    [ Upstream commit 64bdc0244054f7d4bb621c8b4455e292f4e421bc ]
    
    Strictly speaking, seccomp filters are only used
    when CONFIG_SECCOMP_FILTER.
    This patch fixes the condition to enable "Seccomp_filters"
    in /proc/$pid/status.
    
    Signed-off-by: Kenta Tada <Kenta.Tada@sony.com>
    Fixes: c818c03b661c ("seccomp: Report number of loaded filters in /proc/$pid/status")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Link: https://lore.kernel.org/r/OSBPR01MB26772D245E2CF4F26B76A989F5669@OSBPR01MB2677.jpnprd01.prod.outlook.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79476f1fe410d52831a964473f15473a06b69fa0
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Mon Mar 15 23:15:06 2021 +0300

    ata: libahci_platform: fix IRQ check
    
    [ Upstream commit b30d0040f06159de97ad9c0b1536f47250719d7d ]
    
    Iff platform_get_irq() returns 0, ahci_platform_init_host() would return 0
    early (as if the call was successful). Override IRQ0 with -EINVAL instead
    as the 'libata' regards 0 as "no IRQ" (thus polling) anyway...
    
    Fixes: c034640a32f8 ("ata: libahci: properly propagate return value of platform_get_irq()")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Link: https://lore.kernel.org/r/4448c8cc-331f-2915-0e17-38ea34e251c8@omprussia.ru
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b695910d760584cc87feb24fb793c464e21717f
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Sun Mar 28 00:13:49 2021 +0300

    sata_mv: add IRQ checks
    
    [ Upstream commit e6471a65fdd5efbb8dd2732dd0f063f960685ceb ]
    
    The function mv_platform_probe() neglects to check the results of the
    calls to platform_get_irq() and irq_of_parse_and_map() and blithely
    passes them to ata_host_activate() -- while the latter only checks
    for IRQ0 (treating it as a polling mode indicattion) and passes the
    negative values to devm_request_irq() causing it to fail as it takes
    unsigned values for the IRQ #...
    
    Add to mv_platform_probe() the proper IRQ checks to pass the positive IRQ
    #s to ata_host_activate(), propagate upstream the negative error codes,
    and override the IRQ0 with -EINVAL (as we don't want the polling mode).
    
    Fixes: f351b2d638c3 ("sata_mv: Support SoC controllers")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Link: https://lore.kernel.org/r/51436f00-27a1-e20b-c21b-0e817e0a7c86@omprussia.ru
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 581f6ba4fe7fa4663302e3efd4f8cc28f695c0b7
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Thu Mar 25 23:51:10 2021 +0300

    pata_ipx4xx_cf: fix IRQ check
    
    [ Upstream commit e379b40cc0f179403ce0b82b7e539f635a568da5 ]
    
    The driver's probe() method is written as if platform_get_irq() returns 0
    on error, while actually it returns a negative error code (with all the
    other values considered valid IRQs).  Rewrite the driver's IRQ checking
    code to pass the positive IRQ #s to ata_host_activate(), propagate errors
    upstream, and treat IRQ0 as error, returning -EINVAL, as the libata code
    treats 0  as  an indication that polling should be used anyway...
    
    Fixes: 0df0d0a0ea9f ("[libata] ARM: add ixp4xx PATA driver")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5b7b835e3fe33fa93d8025c95ec2372f46578e30
Author: Sergey Shtylyov <s.shtylyov@omprussia.ru>
Date:   Thu Mar 25 23:50:24 2021 +0300

    pata_arasan_cf: fix IRQ check
    
    [ Upstream commit c7e8f404d56b99c80990b19a402c3f640d74be05 ]
    
    The driver's probe() method is written as if platform_get_irq() returns 0
    on error, while actually it returns a negative error code (with all the
    other values considered valid IRQs). Rewrite the driver's IRQ checking code
    to pass the positive IRQ #s to ata_host_activate(), propagate upstream
    -EPROBE_DEFER, and set up the driver to polling mode on (negative) errors
    and IRQ0 (libata treats IRQ #0 as a polling mode anyway)...
    
    Fixes: a480167b23ef ("pata_arasan_cf: Adding support for arasan compact flash host controller")
    Signed-off-by: Sergey Shtylyov <s.shtylyov@omprussia.ru>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1be17895150c56f3bed508da8c431c7e29165ef9
Author: Ilya Leoshkevich <iii@linux.ibm.com>
Date:   Wed Mar 3 01:44:20 2021 +0100

    selftests: fix prepending $(OUTPUT) to $(TEST_PROGS)
    
    [ Upstream commit cb4969e6f9f5ee12521aec764fa3d4bbd91bc797 ]
    
    Currently the following command produces an error message:
    
        linux# make kselftest TARGETS=bpf O=/mnt/linux-build
        # selftests: bpf: test_libbpf.sh
        # ./test_libbpf.sh: line 23: ./test_libbpf_open: No such file or directory
        # test_libbpf: failed at file test_l4lb.o
        # selftests: test_libbpf [FAILED]
    
    The error message might not affect the return code of make, therefore
    one needs to grep make output in order to detect it.
    
    This is not the only instance of the same underlying problem; any test
    with more than one element in $(TEST_PROGS) fails the same way. Another
    example:
    
        linux# make O=/mnt/linux-build TARGETS=splice kselftest
        [...]
        # ./short_splice_read.sh: 15: ./splice_read: not found
        # FAIL: /sys/module/test_module/sections/.init.text 2
        not ok 2 selftests: splice: short_splice_read.sh # exit=1
    
    The current logic prepends $(OUTPUT) only to the first member of
    $(TEST_PROGS). After that, run_one() does
    
       cd `dirname $TEST`
    
    For all tests except the first one, `dirname $TEST` is ., which means
    they cannot access the files generated in $(OUTPUT).
    
    Fix by using $(addprefix) to prepend $(OUTPUT)/ to each member of
    $(TEST_PROGS).
    
    Fixes: 1a940687e424 ("selftests: lib.mk: copy test scripts and test files for make O=dir run")
    Signed-off-by: Ilya Leoshkevich <iii@linux.ibm.com>
    Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50798f4232d7e0643c4841112390ae3214431a9b
Author: Yang Li <yang.lee@linux.alibaba.com>
Date:   Tue Mar 23 17:34:53 2021 +0800

    drm/omap: dsi: Add missing IRQF_ONESHOT
    
    [ Upstream commit 0cafc8d88e6df446751669ec15adc9b807af4501 ]
    
    fixed the following coccicheck:
    ./drivers/gpu/drm/omapdrm/dss/dsi.c:4329:7-27: ERROR: Threaded IRQ with
    no primary handler requested without IRQF_ONESHOT
    
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Yang Li <yang.lee@linux.alibaba.com>
    Reviewed-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Fixes: 4c1b935fea54 ("drm/omap: dsi: move TE GPIO handling into core")
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ideasonboard.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1616492093-68237-1-git-send-email-yang.lee@linux.alibaba.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5489d7355ec7b02091a3dfcc95a01cda1c015730
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu Mar 25 19:08:31 2021 +0900

    x86/kprobes: Fix to check non boostable prefixes correctly
    
    [ Upstream commit 6dd3b8c9f58816a1354be39559f630cd1bd12159 ]
    
    There are 2 bugs in the can_boost() function because of using
    x86 insn decoder. Since the insn->opcode never has a prefix byte,
    it can not find CS override prefix in it. And the insn->attr is
    the attribute of the opcode, thus inat_is_address_size_prefix(
    insn->attr) always returns false.
    
    Fix those by checking each prefix bytes with for_each_insn_prefix
    loop and getting the correct attribute for each prefix byte.
    Also, this removes unlikely, because this is a slow path.
    
    Fixes: a8d11cd0714f ("kprobes/x86: Consolidate insn decoder users for copying code")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: https://lore.kernel.org/r/161666691162.1120877.2808435205294352583.stgit@devnote2
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71356449c216716d0f081d301811d7bfad714a7a
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Sat Mar 20 16:23:59 2021 -0700

    scsi: qla2xxx: Check kzalloc() return value
    
    [ Upstream commit e5406d8ad4a1659f4d4d1b39fe203855c4eaef2d ]
    
    Instead of crashing if kzalloc() fails, make qla2x00_get_host_stats()
    return -ENOMEM.
    
    Link: https://lore.kernel.org/r/20210320232359.941-8-bvanassche@acm.org
    Fixes: dbf1f53cfd23 ("scsi: qla2xxx: Implementation to get and manage host, target stats and initiator port")
    Cc: Himanshu Madhani <himanshu.madhani@oracle.com>
    Cc: Saurav Kashyap <skashyap@marvell.com>
    Cc: Nilesh Javali <njavali@marvell.com>
    Cc: Quinn Tran <qutran@marvell.com>
    Cc: Mike Christie <michael.christie@oracle.com>
    Cc: Daniel Wagner <dwagner@suse.de>
    Cc: Lee Duncan <lduncan@suse.com>
    Reviewed-by: Daniel Wagner <dwagner@suse.de>
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Acked-by: Saurav Kashyap <skashyap@marvell.com>
    Signed-off-by: Bart Van Assche <bvanassche@acm.org>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 394374bedbbafdcb42b46f4706d321a7506e5388
Author: kernel test robot <lkp@intel.com>
Date:   Mon Mar 22 19:21:39 2021 +0100

    of: overlay: fix for_each_child.cocci warnings
    
    [ Upstream commit c4d74f0f978ed5ceee62cd3f6708081042e582a1 ]
    
    Function "for_each_child_of_node" should have of_node_put() before goto.
    
    Generated by: scripts/coccinelle/iterators/for_each_child.cocci
    
    Fixes: 82c2d81361ec ("coccinelle: iterators: Add for_each_child.cocci script")
    CC: Sumera Priyadarsini <sylphrenadin@gmail.com>
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Julia Lawall <julia.lawall@inria.fr>
    Reviewed-by: Frank Rowand <frank.rowand@sony.com>
    Tested-by: Frank Rowand <frank.rowand@sony.com>
    Link: https://lore.kernel.org/r/alpine.DEB.2.22.394.2103221918450.2918@hadrien
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 296443139f893b554dddd56a99ba8471ab5802d4
Author: Victor Lu <victorchengchi.lu@amd.com>
Date:   Thu Mar 11 13:00:20 2021 -0500

    drm/amd/display: Free local data after use
    
    [ Upstream commit 616cf23b6cf40ad6f03ffbddfa1b6c4eb68d8ae1 ]
    
    Fixes the following memory leak in dc_link_construct():
    
    unreferenced object 0xffffa03e81471400 (size 1024):
    comm "amd_module_load", pid 2486, jiffies 4294946026 (age 10.544s)
    hex dump (first 32 bytes):
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
    backtrace:
    [<000000000bdf5c4a>] kmem_cache_alloc_trace+0x30a/0x4a0
    [<00000000e7c59f0e>] link_create+0xce/0xac0 [amdgpu]
    [<000000002fb6c072>] dc_create+0x370/0x720 [amdgpu]
    [<000000000094d1f3>] amdgpu_dm_init+0x18e/0x17a0 [amdgpu]
    [<00000000bec048fd>] dm_hw_init+0x12/0x20 [amdgpu]
    [<00000000a2bb7cf6>] amdgpu_device_init+0x1463/0x1e60 [amdgpu]
    [<0000000032d3bb13>] amdgpu_driver_load_kms+0x5b/0x330 [amdgpu]
    [<00000000a27834f9>] amdgpu_pci_probe+0x192/0x280 [amdgpu]
    [<00000000fec7d291>] local_pci_probe+0x47/0xa0
    [<0000000055dbbfa7>] pci_device_probe+0xe3/0x180
    [<00000000815da970>] really_probe+0x1c4/0x4e0
    [<00000000b4b6974b>] driver_probe_device+0x62/0x150
    [<000000000f9ecc61>] device_driver_attach+0x58/0x60
    [<000000000f65c843>] __driver_attach+0xd6/0x150
    [<000000002f5e3683>] bus_for_each_dev+0x6a/0xc0
    [<00000000a1cfc897>] driver_attach+0x1e/0x20
    
    Fixes: 3a00c04212d1cf ("drm/amd/display/dc/core/dc_link: Move some local data from the stack to the heap")
    Signed-off-by: Victor Lu <victorchengchi.lu@amd.com>
    Reviewed-by: Rodrigo Siqueira <Rodrigo.Siqueira@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cef7b9cc0c933c38002e4caf3d78d3c552ff16c5
Author: Felix Kuehling <Felix.Kuehling@amd.com>
Date:   Wed Mar 10 21:42:01 2021 -0500

    drm/amdkfd: Fix recursive lock warnings
    
    [ Upstream commit 7816e4a98ce3bc7c562807240b4f14171e177420 ]
    
    memalloc_nofs_save/restore are no longer sufficient to prevent recursive
    lock warnings when holding locks that can be taken in MMU notifiers. Use
    memalloc_noreclaim_save/restore instead.
    
    Fixes: f920e413ff9c ("mm: track mmu notifiers in fs_reclaim_acquire/release")
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 220fe3b0f124e991457a17f78a706b330463f2dd
Author: Felix Kuehling <Felix.Kuehling@amd.com>
Date:   Mon Mar 8 22:15:42 2021 -0500

    drm/amdkfd: fix build error with AMD_IOMMU_V2=m
    
    [ Upstream commit 1e87068570a2cc4db5f95a881686add71729e769 ]
    
    Using 'imply AMD_IOMMU_V2' does not guarantee that the driver can link
    against the exported functions. If the GPU driver is built-in but the
    IOMMU driver is a loadable module, the kfd_iommu.c file is indeed
    built but does not work:
    
    x86_64-linux-ld: drivers/gpu/drm/amd/amdkfd/kfd_iommu.o: in function `kfd_iommu_bind_process_to_device':
    kfd_iommu.c:(.text+0x516): undefined reference to `amd_iommu_bind_pasid'
    x86_64-linux-ld: drivers/gpu/drm/amd/amdkfd/kfd_iommu.o: in function `kfd_iommu_unbind_process':
    kfd_iommu.c:(.text+0x691): undefined reference to `amd_iommu_unbind_pasid'
    x86_64-linux-ld: drivers/gpu/drm/amd/amdkfd/kfd_iommu.o: in function `kfd_iommu_suspend':
    kfd_iommu.c:(.text+0x966): undefined reference to `amd_iommu_set_invalidate_ctx_cb'
    x86_64-linux-ld: kfd_iommu.c:(.text+0x97f): undefined reference to `amd_iommu_set_invalid_ppr_cb'
    x86_64-linux-ld: kfd_iommu.c:(.text+0x9a4): undefined reference to `amd_iommu_free_device'
    x86_64-linux-ld: drivers/gpu/drm/amd/amdkfd/kfd_iommu.o: in function `kfd_iommu_resume':
    kfd_iommu.c:(.text+0xa9a): undefined reference to `amd_iommu_init_device'
    x86_64-linux-ld: kfd_iommu.c:(.text+0xadc): undefined reference to `amd_iommu_set_invalidate_ctx_cb'
    x86_64-linux-ld: kfd_iommu.c:(.text+0xaff): undefined reference to `amd_iommu_set_invalid_ppr_cb'
    x86_64-linux-ld: kfd_iommu.c:(.text+0xc72): undefined reference to `amd_iommu_bind_pasid'
    x86_64-linux-ld: kfd_iommu.c:(.text+0xe08): undefined reference to `amd_iommu_set_invalidate_ctx_cb'
    x86_64-linux-ld: kfd_iommu.c:(.text+0xe26): undefined reference to `amd_iommu_set_invalid_ppr_cb'
    x86_64-linux-ld: kfd_iommu.c:(.text+0xe42): undefined reference to `amd_iommu_free_device'
    
    Use IS_REACHABLE to only build IOMMU-V2 support if the amd_iommu symbols
    are reachable by the amdkfd driver. Output a warning if they are not,
    because that may not be what the user was expecting.
    
    Fixes: 64d1c3a43a6f ("drm/amdkfd: Centralize IOMMUv2 code and make it conditional")
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 683200c61ca1b2cf8629337d3a8921d3d2cbb2f7
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Wed Mar 3 00:25:24 2021 +0900

    x86/kprobes: Retrieve correct opcode for group instruction
    
    [ Upstream commit d60ad3d46f1d04a282c56159f1deb675c12733fd ]
    
    Since the opcodes start from 0xff are group5 instruction group which is
    not 2 bytes opcode but the extended opcode determined by the MOD/RM byte.
    
    The commit abd82e533d88 ("x86/kprobes: Do not decode opcode in resume_execution()")
    used insn->opcode.bytes[1], but that is not correct. We have to refer
    the insn->modrm.bytes[1] instead.
    
    Fixes: abd82e533d88 ("x86/kprobes: Do not decode opcode in resume_execution()")
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/161469872400.49483.18214724458034233166.stgit@devnote2
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8267ccd7b9df7ab682043507dd682fe0621cf045
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Dec 14 12:53:31 2020 +0100

    media: atomisp: Fix use after free in atomisp_alloc_css_stat_bufs()
    
    [ Upstream commit ba11bbf303fafb33989e95473e409f6ab412b18d ]
    
    The "s3a_buf" is freed along with all the other items on the
    "asd->s3a_stats" list.  It leads to a double free and a use after free.
    
    Link: https://lore.kernel.org/linux-media/X9dSO3RGf7r0pq2k@mwanda
    Fixes: ad85094b293e ("Revert "media: staging: atomisp: Remove driver"")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac97be09d46f1a4e8a8d7601ce699d667b54200c
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Oct 7 14:16:28 2020 +0200

    media: m88rs6000t: avoid potential out-of-bounds reads on arrays
    
    [ Upstream commit 9baa3d64e8e2373ddd11c346439e5dfccb2cbb0d ]
    
    There a 3 array for-loops that don't check the upper bounds of the
    index into arrays and this may lead to potential out-of-bounds
    reads.  Fix this by adding array size upper bounds checks to be
    full safe.
    
    Addresses-Coverity: ("Out-of-bounds read")
    
    Link: https://lore.kernel.org/linux-media/20201007121628.20676-1-colin.king@canonical.com
    Fixes: 333829110f1d ("[media] m88rs6000t: add new dvb-s/s2 tuner for integrated chip M88RS6000")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5cd0f16bc44fbae2d22c8b36eba291fa733de194
Author: Souptick Joarder <jrdr.linux@gmail.com>
Date:   Sun Sep 27 17:08:04 2020 +0200

    media: atomisp: Fixed error handling path
    
    [ Upstream commit 16a5dcf7fbc2f5cd10c1e6264262bfa3832fb7d5 ]
    
    Inside alloc_user_pages() based on flag value either pin_user_pages()
    or get_user_pages_fast() will be called. However, these API might fail.
    
    But free_user_pages() called in error handling path doesn't bother
    about return value and will try to unpin bo->pgnr pages, which is
    incorrect.
    
    Fix this by passing the page_nr to free_user_pages(). If page_nr > 0
    pages will be unpinned based on bo->mem_type. This will also take care
    of non error handling path.
    
    allocation")
    
    Link: https://lore.kernel.org/linux-media/1601219284-13275-1-git-send-email-jrdr.linux@gmail.com
    Fixes: 14a638ab96c5 ("media: atomisp: use pin_user_pages() for memory
    Signed-off-by: Souptick Joarder <jrdr.linux@gmail.com>
    Cc: John Hubbard <jhubbard@nvidia.com>
    Cc: Ira Weiny <ira.weiny@intel.com>
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27d2eab69f7da8e94e4751ac5c6d22d809275484
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Sep 2 18:58:52 2020 +0200

    media: [next] staging: media: atomisp: fix memory leak of object flash
    
    [ Upstream commit 6045b01dd0e3cd3759eafe7f290ed04c957500b1 ]
    
    In the case where the call to lm3554_platform_data_func returns an
    error there is a memory leak on the error return path of object
    flash.  Fix this by adding an error return path that will free
    flash and rename labels fail2 to fail3 and fail1 to fail2.
    
    Link: https://lore.kernel.org/linux-media/20200902165852.201155-1-colin.king@canonical.com
    Fixes: 9289cdf39992 ("staging: media: atomisp: Convert to GPIO descriptors")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a44db63cc56e91f07bc71cdeee0a4aa99044d89e
Author: Liu Ying <victor.liu@nxp.com>
Date:   Thu Mar 11 06:53:47 2021 +0100

    media: docs: Fix data organization of MEDIA_BUS_FMT_RGB101010_1X30
    
    [ Upstream commit c451ee146d449bbe39835fc3d9007b7f06332415 ]
    
    The media bus bit width of MEDIA_BUS_FMT_RGB101010_1X30 is 30.
    So, 'Bit31' and 'Bit30' cells for the 'MEDIA_BUS_FMT_RGB101010_1X30'
    row should be spaces instead of '0's.
    
    Fixes: 54f38fcae536 ("media: docs: move uAPI book to userspace-api/media")
    Signed-off-by: Liu Ying <victor.liu@nxp.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5e2ebeb22cad7a7d717097a6cd35caa0d7f3c3d
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Mon Mar 8 13:28:02 2021 +0100

    media: m88ds3103: fix return value check in m88ds3103_probe()
    
    [ Upstream commit e61f9ea271933d987ab895c689fa37744f6fc27f ]
    
    In case of error, the function i2c_new_dummy_device() returns
    ERR_PTR() and never returns NULL. The NULL test in the return
    value check should be replaced with IS_ERR().
    
    Fixes: e6089feca460 ("media: m88ds3103: Add support for ds3103b demod")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0faeb8a1127a44c018e88d8ac4a6d14aef5665fa
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sat Mar 6 15:15:28 2021 +0100

    media: platform: sunxi: sun6i-csi: fix error return code of sun6i_video_start_streaming()
    
    [ Upstream commit f3d384e36630e2a552d874e422835606d9cf230a ]
    
    When sun6i_video_remote_subdev() returns NULL to subdev, no error return
    code of sun6i_video_start_streaming() is assigned.
    To fix this bug, ret is assigned with -EINVAL in this case.
    
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Fixes: 5cc7522d8965 ("media: sun6i: Add support for Allwinner CSI V3s")
    Acked-by: Chen-Yu Tsai <wens@csie.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 711acdf0228dc71601247f28b56f13e850e395c8
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Jan 28 21:22:34 2021 +0100

    media: venus: core: Fix some resource leaks in the error path of 'venus_probe()'
    
    [ Upstream commit 5a465c5391a856a0c1e9554964d660676c35d1b2 ]
    
    If an error occurs after a successful 'of_icc_get()' call, it must be
    undone.
    
    Use 'devm_of_icc_get()' instead of 'of_icc_get()' to avoid the leak.
    Update the remove function accordingly and axe the now unneeded
    'icc_put()' calls.
    
    Fixes: 32f0a6ddc8c9 ("media: venus: Use on-chip interconnect API")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Stanimir Varbanov <stanimir.varbanov@linaro.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 521ed2a1ee95873c52b558af444d7a2961805d63
Author: Noralf Trønnes <noralf@tronnes.org>
Date:   Sat Mar 13 12:25:44 2021 +0100

    drm/probe-helper: Check epoch counter in output_poll_execute()
    
    [ Upstream commit dc659a4e852b591771fc2e5abb60f4455b0cf316 ]
    
    drm_helper_hpd_irq_event() checks the epoch counter to determine
    connector status change. This was introduced in
    commit 5186421cbfe2 ("drm: Introduce epoch counter to drm_connector").
    Do the same for output_poll_execute() so it can detect other changes
    beside connection status value changes.
    
    v2:
    - Add Fixes tag (Daniel)
    
    Fixes: 5186421cbfe2 ("drm: Introduce epoch counter to drm_connector")
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Noralf Trønnes <noralf@tronnes.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210313112545.37527-3-noralf@tronnes.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cfc0149e1fe71ad787623f450ab7e3811b755922
Author: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
Date:   Wed Mar 3 10:54:18 2021 +0100

    power: supply: bq27xxx: fix sign of current_now for newer ICs
    
    [ Upstream commit b67fdcb7099e9c640bad625c4dd6399debb3376a ]
    
    Commit cd060b4d0868 ("power: supply: bq27xxx: fix polarity of current_now")
    changed the sign of current_now for all bq27xxx variants, but on BQ28Z610
    I'm now seeing negated values *with* that patch.
    
    The GTA04/Openmoko device that was used for testing uses a BQ27000 or
    BQ27010 IC, so I assume only the BQ27XXX_O_ZERO code path was incorrect.
    Revert the behaviour for newer ICs.
    
    Fixes: cd060b4d0868 "power: supply: bq27xxx: fix polarity of current_now"
    Signed-off-by: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15a6dff1b3f12f4154a99945fa3f2cf3585feeea
Author: Douglas Anderson <dianders@chromium.org>
Date:   Fri Jan 15 14:44:16 2021 -0800

    drm/panel-simple: Undo enable if HPD never asserts
    
    [ Upstream commit 5e7222a3674ea7422370779884dd53aabe9e4a9d ]
    
    If the HPD signal never asserts in panel_simple_prepare() and we
    return an error, we should unset the enable GPIO and disable the
    regulator to make it consistent for the caller.
    
    At the moment I have some hardware where HPD sometimes doesn't assert.
    Obviously that needs to be debugged, but this patch makes it so that
    if I add a retry that I can make things work.
    
    Fixes: 48834e6084f1 ("drm/panel-simple: Support hpd-gpios for delaying prepare()")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210115144345.v2.1.I33fcbd64ab409cfe4f9491bf449f51925a4d3281@changeid
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75321dc8aebe3f30eff226028fe6da340fe0bf02
Author: Jae Hyun Yoo <jae.hyun.yoo@linux.intel.com>
Date:   Mon Dec 21 23:32:25 2020 +0100

    media: aspeed: fix clock handling logic
    
    [ Upstream commit 3536169f8531c2c5b153921dc7d1ac9fd570cda7 ]
    
    Video engine uses eclk and vclk for its clock sources and its reset
    control is coupled with eclk so the current clock enabling sequence works
    like below.
    
     Enable eclk
     De-assert Video Engine reset
     10ms delay
     Enable vclk
    
    It introduces improper reset on the Video Engine hardware and eventually
    the hardware generates unexpected DMA memory transfers that can corrupt
    memory region in random and sporadic patterns. This issue is observed
    very rarely on some specific AST2500 SoCs but it causes a critical
    kernel panic with making a various shape of signature so it's extremely
    hard to debug. Moreover, the issue is observed even when the video
    engine is not actively used because udevd turns on the video engine
    hardware for a short time to make a query in every boot.
    
    To fix this issue, this commit changes the clock handling logic to make
    the reset de-assertion triggered after enabling both eclk and vclk. Also,
    it adds clk_unprepare call for a case when probe fails.
    
    clk: ast2600: fix reset settings for eclk and vclk
    Video engine reset setting should be coupled with eclk to match it
    with the setting for previous Aspeed SoCs which is defined in
    clk-aspeed.c since all Aspeed SoCs are sharing a single video engine
    driver. Also, reset bit 6 is defined as 'Video Engine' reset in
    datasheet so it should be de-asserted when eclk is enabled. This
    commit fixes the setting.
    
    Fixes: d2b4387f3bdf ("media: platform: Add Aspeed Video Engine driver")
    Signed-off-by: Jae Hyun Yoo <jae.hyun.yoo@linux.intel.com>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Reviewed-by: Eddie James <eajames@linux.ibm.com>
    Fixes: d3d04f6c330a ("clk: Add support for AST2600 SoC")
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Acked-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9545343a506aceecd1e131f5b0837c846c878f4
Author: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
Date:   Wed Dec 9 17:15:10 2020 +0100

    media: rkisp1: rsz: crash fix when setting src format
    
    [ Upstream commit cbe8373ca7e7cbb4b263b6bf222ccc19f5e119d2 ]
    
    When setting the source media bus code in the resizer,
    we first check that the current media bus code in the
    source is yuv encoded format. This is done by
    retrieving the data from the formats list of the isp
    entity. This cause a crash when the media bus code on the
    source is YUYV8_1_5X8 which is not supported by the isp
    entity. Instead we should test the sink format of the resizer
    which is guaranteed to be supported by the isp entity.
    
    Fixes: 251b6eebb6c49 ("media: staging: rkisp1: rsz: Add support to more YUV encoded mbus codes on src pad")
    Signed-off-by: Dafna Hirschfeld <dafna.hirschfeld@collabora.com>
    Acked-by: Helen Koike <helen.koike@collabora.com>
    Tested-by: Sebastian Fricke <sebastian.fricke.linux@gmail.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 818103e37793e044d08301d22066fb3307e35e0b
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Nov 17 03:50:41 2020 +0100

    media: omap4iss: return error code when omap4iss_get() failed
    
    [ Upstream commit 8938c48fa25b491842ece9eb38f0bea0fcbaca44 ]
    
    If omap4iss_get() failed, it need return error code in iss_probe().
    
    Fixes: 59f0ad807681 ("[media] v4l: omap4iss: Add support for OMAP4...")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ee43611a4f6cb484700014a29eff14d940036d8b
Author: Tasos Sahanidis <tasos@tasossah.com>
Date:   Wed Mar 3 19:52:53 2021 +0100

    media: saa7146: use sg_dma_len when building pgtable
    
    [ Upstream commit e56429b09d5e0802b86f84ec7c24025886c9f88b ]
    
    The new AMD IOMMU DMA implementation concatenates sglist entries under
    certain conditions, and because saa7146 accessed the length member
    directly, it did not support this scenario.
    
    This fixes IO_PAGE_FAULTs by using the sg_dma_len macro.
    
    Fixes: be62dbf554c5 ("iommu/amd: Convert AMD iommu driver to the dma-iommu api")
    Signed-off-by: Tasos Sahanidis <tasos@tasossah.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d05670a2e38d3e5cb0b51aa3d8734e832360826a
Author: Tasos Sahanidis <tasos@tasossah.com>
Date:   Wed Mar 3 19:30:18 2021 +0100

    media: saa7134: use sg_dma_len when building pgtable
    
    [ Upstream commit 4e1cb753c04d74e06d7ca826ea0bcb02526af03e ]
    
    The new AMD IOMMU DMA implementation concatenates sglist entries under
    certain conditions, and because saa7134 accessed the length member
    directly, it did not support this scenario.
    
    This fixes IO_PAGE_FAULTs and choppy DMA audio by using the
    sg_dma_len macro.
    
    Fixes: be62dbf554c5 ("iommu/amd: Convert AMD iommu driver to the dma-iommu api")
    Signed-off-by: Tasos Sahanidis <tasos@tasossah.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6528fe467fc854e271c63dc88f63751cd9d4b81
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Feb 25 16:43:27 2021 +0100

    media: vivid: fix assignment of dev->fbuf_out_flags
    
    [ Upstream commit 5cde22fcc7271812a7944c47b40100df15908358 ]
    
    Currently the chroma_flags and alpha_flags are being zero'd with a bit-wise
    mask and the following statement should be bit-wise or'ing in the new flag
    bits but instead is making a direct assignment.  Fix this by using the |=
    operator rather than an assignment.
    
    Addresses-Coverity: ("Unused value")
    
    Fixes: ef834f7836ec ("[media] vivid: add the video capture and output parts")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b8d969ec4bea9df003163456c812132bade7679
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 26 15:07:14 2021 +0100

    media: mtk: fix mtk-smi dependency
    
    [ Upstream commit 4fade8329ab2be2b902fce8db3625fd12234b873 ]
    
    The mtk-smi driver can now be built as a loadable module, but
    this leads to a build time regression when the drivers that
    depend on it are built-in:
    
    aarch64-linux-ld: drivers/media/platform/mtk-mdp/mtk_mdp_comp.o: in function `mtk_mdp_comp_clock_on':
    mtk_mdp_comp.c:(.text.mtk_mdp_comp_clock_on+0x54): undefined reference to `mtk_smi_larb_get'
    aarch64-linux-ld: drivers/media/platform/mtk-mdp/mtk_mdp_comp.o: in function `mtk_mdp_comp_clock_off':
    mtk_mdp_comp.c:(.text.mtk_mdp_comp_clock_off+0x12c): undefined reference to `mtk_smi_larb_put'
    
    Add a dependency on the interface, but keep allowing
    compile-testing without that driver, as it was originally
    intended.
    
    Fixes: 50fc8d9232cd ("memory: mtk-smi: Allow building as module")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8bdfbca9b17b2d1cc4701a6617bcbe658c80d4d0
Author: Zhouyi Zhou <zhouzhouyi@gmail.com>
Date:   Mon Jan 11 09:08:59 2021 +0800

    rcu: Remove spurious instrumentation_end() in rcu_nmi_enter()
    
    [ Upstream commit 6494ccb93271bee596a12db32ff44867d5be2321 ]
    
    In rcu_nmi_enter(), there is an erroneous instrumentation_end() in the
    second branch of the "if" statement.  Oddly enough, "objtool check -f
    vmlinux.o" fails to complain because it is unable to correctly cover
    all cases.  Instead, objtool visits the third branch first, which marks
    following trace_rcu_dyntick() as visited.  This commit therefore removes
    the spurious instrumentation_end().
    
    Fixes: 04b25a495bd6 ("rcu: Mark rcu_nmi_enter() call to rcu_cleanup_after_idle() noinstr")
    Reported-by Neeraj Upadhyay <neeraju@codeaurora.org>
    Signed-off-by: Zhouyi Zhou <zhouzhouyi@gmail.com>
    Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ca5efcd15a87c0758f210e309dc4c76ea7c5c86
Author: David Howells <dhowells@redhat.com>
Date:   Wed Feb 10 08:59:52 2021 +0000

    afs: Fix updating of i_mode due to 3rd party change
    
    [ Upstream commit 6e1eb04a87f954eb06a89ee6034c166351dfff6e ]
    
    Fix afs_apply_status() to mask off the irrelevant bits from status->mode
    when OR'ing them into i_mode.  This can happen when a 3rd party chmod
    occurs.
    
    Also fix afs_inode_init_from_status() to mask off the mode bits when
    initialising i_mode.
    
    Fixes: 260a980317da ("[AFS]: Add "directory write" support.")
    Reported-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac67a8754fb12366049b107aa288b90f96c16e92
Author: John Ogness <john.ogness@linutronix.de>
Date:   Wed Mar 3 11:15:16 2021 +0100

    printk: limit second loop of syslog_print_all
    
    [ Upstream commit bb07b16c44b2c6ddbafa44bb06454719002e828e ]
    
    The second loop of syslog_print_all() subtracts lengths that were
    added in the first loop. With commit b031a684bfd0 ("printk: remove
    logbuf_lock writer-protection of ringbuffer") it is possible that
    records are (over)written during syslog_print_all(). This allows the
    possibility of the second loop subtracting lengths that were never
    added in the first loop.
    
    This situation can result in syslog_print_all() filling the buffer
    starting from a later record, even though there may have been room
    to fit the earlier record(s) as well.
    
    Fixes: b031a684bfd0 ("printk: remove logbuf_lock writer-protection of ringbuffer")
    Signed-off-by: John Ogness <john.ogness@linutronix.de>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Signed-off-by: Petr Mladek <pmladek@suse.com>
    Link: https://lore.kernel.org/r/20210303101528.29901-4-john.ogness@linutronix.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 805cea93e66ca7deaaf6ad3b67224ce47c104c2f
Author: Valentin Schneider <valentin.schneider@arm.com>
Date:   Thu Feb 25 17:56:56 2021 +0000

    sched/fair: Fix shift-out-of-bounds in load_balance()
    
    [ Upstream commit 39a2a6eb5c9b66ea7c8055026303b3aa681b49a5 ]
    
    Syzbot reported a handful of occurrences where an sd->nr_balance_failed can
    grow to much higher values than one would expect.
    
    A successful load_balance() resets it to 0; a failed one increments
    it. Once it gets to sd->cache_nice_tries + 3, this *should* trigger an
    active balance, which will either set it to sd->cache_nice_tries+1 or reset
    it to 0. However, in case the to-be-active-balanced task is not allowed to
    run on env->dst_cpu, then the increment is done without any further
    modification.
    
    This could then be repeated ad nauseam, and would explain the absurdly high
    values reported by syzbot (86, 149). VincentG noted there is value in
    letting sd->cache_nice_tries grow, so the shift itself should be
    fixed. That means preventing:
    
      """
      If the value of the right operand is negative or is greater than or equal
      to the width of the promoted left operand, the behavior is undefined.
      """
    
    Thus we need to cap the shift exponent to
      BITS_PER_TYPE(typeof(lefthand)) - 1.
    
    I had a look around for other similar cases via coccinelle:
    
      @expr@
      position pos;
      expression E1;
      expression E2;
      @@
      (
      E1 >> E2@pos
      |
      E1 >> E2@pos
      )
    
      @cst depends on expr@
      position pos;
      expression expr.E1;
      constant cst;
      @@
      (
      E1 >> cst@pos
      |
      E1 << cst@pos
      )
    
      @script:python depends on !cst@
      pos << expr.pos;
      exp << expr.E2;
      @@
      # Dirty hack to ignore constexpr
      if exp.upper() != exp:
         coccilib.report.print_report(pos[0], "Possible UB shift here")
    
    The only other match in kernel/sched is rq_clock_thermal() which employs
    sched_thermal_decay_shift, and that exponent is already capped to 10, so
    that one is fine.
    
    Fixes: 5a7f55590467 ("sched/fair: Relax constraint on task's load during load balance")
    Reported-by: syzbot+d7581744d5fd27c9fbe1@syzkaller.appspotmail.com
    Signed-off-by: Valentin Schneider <valentin.schneider@arm.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Link: http://lore.kernel.org/r/000000000000ffac1205b9a2112f@google.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9bdcfbed2a9fe24d2c7eaa1bad7c705e18de8cc7
Author: James Smart <jsmart2021@gmail.com>
Date:   Mon Mar 1 09:18:08 2021 -0800

    scsi: lpfc: Fix null pointer dereference in lpfc_prep_els_iocb()
    
    [ Upstream commit 8dd1c125f7f838abad009b64bff5f0a11afe3cb6 ]
    
    It is possible to call lpfc_issue_els_plogi() passing a did for which no
    matching ndlp is found. A call is then made to lpfc_prep_els_iocb() with a
    null pointer to a lpfc_nodelist structure resulting in a null pointer
    dereference.
    
    Fix by returning an error status if no valid ndlp is found. Fix up comments
    regarding ndlp reference counting.
    
    Link: https://lore.kernel.org/r/20210301171821.3427-10-jsmart2021@gmail.com
    Fixes: 4430f7fd09ec ("scsi: lpfc: Rework locations of ndlp reference taking")
    Co-developed-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: Dick Kennedy <dick.kennedy@broadcom.com>
    Signed-off-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fe67c11fef93e44ef86d8bd30e06e1cec8f9ab37
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Thu Mar 4 01:41:38 2021 +0100

    drm/mcde/panel: Inverse misunderstood flag
    
    [ Upstream commit d0c5ac04e7feedbc069f26f4dcbf35b521ae7fc5 ]
    
    A recent patch renaming MIPI_DSI_MODE_EOT_PACKET to
    MIPI_DSI_MODE_NO_EOT_PACKET brought to light the
    misunderstanding in the current MCDE driver and all
    its associated panel drivers that MIPI_DSI_MODE_EOT_PACKET
    would mean "use EOT packet" when in fact it means the
    reverse.
    
    Fix it up by implementing the flag right in the MCDE
    DSI driver and remove the flag from panels that actually
    want the EOT packet.
    
    Suggested-by: Nicolas Boichat <drinkcat@chromium.org>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Reviewed-by: Nicolas Boichat <drinkcat@chromium.org>
    Fixes: 5fc537bfd000 ("drm/mcde: Add new driver for ST-Ericsson MCDE")
    Fixes: 899f24ed8d3a ("drm/panel: Add driver for Novatek NT35510-based panels")
    Fixes: ac1d6d74884e ("drm/panel: Add driver for Samsung S6D16D0 panel")
    Fixes: 435e06c06cb2 ("drm/panel: s6e63m0: Add DSI transport")
    Fixes: 8152c2bfd780 ("drm/panel: Add driver for Sony ACX424AKP panel")
    Link: https://patchwork.freedesktop.org/patch/msgid/20210304004138.1785057-1-linus.walleij@linaro.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 080bd41d6478a64edf96704fddcda52b1fd5fed7
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 2 14:15:48 2021 +0300

    drm/amd/display: Fix off by one in hdmi_14_process_transaction()
    
    [ Upstream commit 8e6fafd5a22e7a2eb216f5510db7aab54cc545c1 ]
    
    The hdcp_i2c_offsets[] array did not have an entry for
    HDCP_MESSAGE_ID_WRITE_CONTENT_STREAM_TYPE so it led to an off by one
    read overflow.  I added an entry and copied the 0x0 value for the offset
    from similar code in drivers/gpu/drm/amd/display/modules/hdcp/hdcp_ddc.c.
    
    I also declared several of these arrays as having HDCP_MESSAGE_ID_MAX
    entries.  This doesn't change the code, but it's just a belt and
    suspenders approach to try future proof the code.
    
    Fixes: 4c283fdac08a ("drm/amd/display: Add HDCP module")
    Reviewed-by: Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb62b23e950c3d3833dbcc3d9bcbf27b69221872
Author: Marek Vasut <marex@denx.de>
Date:   Wed Jan 27 12:07:56 2021 +0100

    drm/stm: Fix bus_flags handling
    
    [ Upstream commit 99e360442f223dd40fc23ae07c7a263836fd27e6 ]
    
    The drm_display_mode_to_videomode() does not populate DISPLAY_FLAGS_DE_LOW
    or DISPLAY_FLAGS_PIXDATA_NEGEDGE flags in struct videomode. Therefore, no
    matter what polarity the next bridge or display might require, these flags
    are never set, and thus the LTDC GCR_DEPOL and GCR_PCPOL bits are never set
    and the LTDC behaves as if both DISPLAY_FLAGS_PIXDATA_POSEDGE and
    DISPLAY_FLAGS_DE_HIGH were always set.
    
    The fix for this problem is taken almost verbatim from MXSFB driver. In
    case there is a bridge attached to the LTDC, the bridge might have extra
    polarity requirements, so extract bus_flags from the bridge and use them
    for LTDC configuration. Otherwise, extract bus_flags from the connector,
    which is the display.
    
    Fixes: b759012c5fa7 ("drm/stm: Add STM32 LTDC driver")
    Signed-off-by: Marek Vasut <marex@denx.de>
    Signed-off-by: Yannick Fertre <yannick.fertre@st.com>
    Cc: Alexandre Torgue <alexandre.torgue@st.com>
    Cc: Antonio Borneo <antonio.borneo@st.com>
    Cc: Benjamin Gaignard <benjamin.gaignard@st.com>
    Cc: Maxime Coquelin <mcoquelin.stm32@gmail.com>
    Cc: Philippe Cornu <philippe.cornu@st.com>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Vincent Abriou <vincent.abriou@st.com>
    Cc: Yannick Fertre <yannick.fertre@st.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: linux-stm32@st-md-mailman.stormreply.com
    To: dri-devel@lists.freedesktop.org
    Tested-by: Yannick Fertre <yannick.fertre@foss.st.com>
    Signed-off-by: Philippe Cornu <philippe.cornu@foss.st.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210127110756.125570-1-marex@denx.de
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3ed9569a7b2c82ea69a637c903deeb500e4a813
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Tue Feb 9 16:24:15 2021 +0800

    drm/tilcdc: send vblank event when disabling crtc
    
    [ Upstream commit f1a75f4dd8edf272b6b7cdccf6ba6254ec9d15fa ]
    
    When run xrandr to change resolution on Beaglebone Black board, it will
    print the error information:
    
    root@beaglebone:~# xrandr -display :0 --output HDMI-1 --mode 720x400
    [drm:drm_crtc_commit_wait] *ERROR* flip_done timed out
    [drm:drm_atomic_helper_wait_for_dependencies] *ERROR* [CRTC:32:tilcdc crtc] commit wait timed out
    [drm:drm_crtc_commit_wait] *ERROR* flip_done timed out
    [drm:drm_atomic_helper_wait_for_dependencies] *ERROR* [CONNECTOR:34:HDMI-A-1] commit wait timed out
    [drm:drm_crtc_commit_wait] *ERROR* flip_done timed out
    [drm:drm_atomic_helper_wait_for_dependencies] *ERROR* [PLANE:31:plane-0] commit wait timed out
    tilcdc 4830e000.lcdc: already pending page flip!
    
    This is because there is operation sequence as below:
    
    drm_atomic_connector_commit_dpms(mode is DRM_MODE_DPMS_OFF):
        ...
        drm_atomic_helper_setup_commit <- init_completion(commit_A->flip_done)
        drm_atomic_helper_commit_tail
            tilcdc_crtc_atomic_disable
            tilcdc_plane_atomic_update <- drm_crtc_send_vblank_event in tilcdc_crtc_irq
                                          is skipped since tilcdc_crtc->enabled is 0
            tilcdc_crtc_atomic_flush   <- drm_crtc_send_vblank_event is skipped since
                                          crtc->state->event is set to be NULL in
                                          tilcdc_plane_atomic_update
    drm_mode_setcrtc:
        ...
        drm_atomic_helper_setup_commit <- init_completion(commit_B->flip_done)
        drm_atomic_helper_wait_for_dependencies
            drm_crtc_commit_wait   <- wait for commit_A->flip_done completing
    
    Just as shown above, the steps which could complete commit_A->flip_done
    are all skipped and commit_A->flip_done will never be completed. This will
    result a time-out ERROR when drm_crtc_commit_wait check the commit_A->flip_done.
    So add drm_crtc_send_vblank_event in tilcdc_crtc_atomic_disable to
    complete commit_A->flip_done.
    
    Fixes: cb345decb4d2 ("drm/tilcdc: Use standard drm_atomic_helper_commit")
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Reviewed-by: Jyri Sarha <jyri.sarha@iki.fi>
    Tested-by: Jyri Sarha <jyri.sarha@iki.fi>
    Signed-off-by: Jyri Sarha <jyri.sarha@iki.fi>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210209082415.382602-1-quanyang.wang@windriver.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f3e2b85d3059b1634283b60494f633b946f1f863
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Apr 23 09:39:19 2021 +0930

    soc: aspeed: fix a ternary sign expansion bug
    
    [ Upstream commit 5ffa828534036348fa90fb3079ccc0972d202c4a ]
    
    The intent here was to return negative error codes but it actually
    returns positive values.  The problem is that type promotion with
    ternary operations is quite complicated.
    
    "ret" is an int.  "copied" is a u32.  And the snoop_file_read() function
    returns long.  What happens is that "ret" is cast to u32 and becomes
    positive then it's cast to long and it's still positive.
    
    Fix this by removing the ternary so that "ret" is type promoted directly
    to long.
    
    Fixes: 3772e5da4454 ("drivers/misc: Aspeed LPC snoop output using misc chardev")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Reviewed-by: Patrick Venture <venture@google.com>
    Link: https://lore.kernel.org/r/YIE90PSXsMTa2Y8n@mwanda
    Link: https://lore.kernel.org/r/20210423000919.1249474-1-joel@jms.id.au'
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 620b84fc3544792e0a37768584fa01055fe8d221
Author: Paul Durrant <pdurrant@amazon.com>
Date:   Tue Feb 2 17:56:59 2021 +0000

    xen-blkback: fix compatibility bug with single page rings
    
    [ Upstream commit d75e7f63b7c95c527cde42efb5d410d7f961498f ]
    
    Prior to commit 4a8c31a1c6f5 ("xen/blkback: rework connect_ring() to avoid
    inconsistent xenstore 'ring-page-order' set by malicious blkfront"), the
    behaviour of xen-blkback when connecting to a frontend was:
    
    - read 'ring-page-order'
    - if not present then expect a single page ring specified by 'ring-ref'
    - else expect a ring specified by 'ring-refX' where X is between 0 and
      1 << ring-page-order
    
    This was correct behaviour, but was broken by the afforementioned commit to
    become:
    
    - read 'ring-page-order'
    - if not present then expect a single page ring (i.e. ring-page-order = 0)
    - expect a ring specified by 'ring-refX' where X is between 0 and
      1 << ring-page-order
    - if that didn't work then see if there's a single page ring specified by
      'ring-ref'
    
    This incorrect behaviour works most of the time but fails when a frontend
    that sets 'ring-page-order' is unloaded and replaced by one that does not
    because, instead of reading 'ring-ref', xen-blkback will read the stale
    'ring-ref0' left around by the previous frontend will try to map the wrong
    grant reference.
    
    This patch restores the original behaviour.
    
    Fixes: 4a8c31a1c6f5 ("xen/blkback: rework connect_ring() to avoid inconsistent xenstore 'ring-page-order' set by malicious blkfront")
    Signed-off-by: Paul Durrant <pdurrant@amazon.com>
    Reviewed-by: Dongli Zhang <dongli.zhang@oracle.com>
    Reviewed-by: "Roger Pau Monné" <roger.pau@citrix.com>
    Link: https://lore.kernel.org/r/20210202175659.18452-1-paul@xen.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15e7357f076bc18c77a4c25484ef2da4ef3855d9
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Thu Apr 22 18:26:04 2021 +0800

    spi: tools: make a symbolic link to the header file spi.h
    
    [ Upstream commit bc2e9578baed90f36abe6bb922b9598a327b0555 ]
    
    The header file spi.h in include/uapi/linux/spi is needed for spidev.h,
    so we also need make a symbolic link to it to eliminate the error message
    as below:
    
    In file included from spidev_test.c:24:
    include/linux/spi/spidev.h:28:10: fatal error: linux/spi/spi.h: No such file or directory
       28 | #include <linux/spi/spi.h>
          |          ^~~~~~~~~~~~~~~~~
    compilation terminated.
    
    Fixes: f7005142dace ("spi: uapi: unify SPI modes into a single spi.h")
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Link: https://lore.kernel.org/r/20210422102604.3034217-1-quanyang.wang@windriver.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b61f2f020c7f13c06433bd7b164597d549c3260
Author: Dario Binacchi <dariobin@libero.it>
Date:   Sun Apr 18 11:47:05 2021 +0200

    serial: omap: fix rs485 half-duplex filtering
    
    [ Upstream commit e2a5e8448e7393e96ccde346c68764b40a52cc10 ]
    
    Data received during half-duplex transmission must be filtered.
    If the target device responds quickly, emptying the FIFO at the end of
    the transmission can erase not only the echo characters but also part of
    the response message.
    By keeping the receive interrupt enabled even during transmission, it
    allows you to filter each echo character and only in a number equal to
    those transmitted.
    The issue was generated by a target device that started responding
    240us later having received a request in communication at 115200bps.
    Sometimes, some messages received by the target were missing some of the
    first bytes.
    
    Fixes: 3a13884abea0 ("tty/serial: omap: empty the RX FIFO at the end of half-duplex TX")
    Signed-off-by: Dario Binacchi <dariobin@libero.it>
    Link: https://lore.kernel.org/r/20210418094705.27014-1-dariobin@libero.it
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b641a97b1f0bc5e01a464f05fed5cd4867344945
Author: Dario Binacchi <dariobin@libero.it>
Date:   Thu Apr 15 23:09:45 2021 +0200

    serial: omap: don't disable rs485 if rts gpio is missing
    
    [ Upstream commit 45f6b6db53c80787b79044629b062dfcf2da71ec ]
    
    There are rs485 transceivers (e.g. MAX13487E/MAX13488E) which
    automatically disable or enable the driver and receiver to keep the bus
    in the correct state.
    In these cases we don't need a GPIO for flow control.
    
    Fixes: 4a0ac0f55b18 ("OMAP: add RS485 support")
    Signed-off-by: Dario Binacchi <dariobin@libero.it>
    Link: https://lore.kernel.org/r/20210415210945.25863-1-dariobin@libero.it
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59e0f581a8a9e03d126d42abc416f44031927939
Author: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
Date:   Thu Apr 15 09:22:22 2021 +0900

    ttyprintk: Add TTY hangup callback.
    
    [ Upstream commit c0070e1e60270f6a1e09442a9ab2335f3eaeaad2 ]
    
    syzbot is reporting hung task due to flood of
    
      tty_warn(tty, "%s: tty->count = 1 port count = %d\n", __func__,
               port->count);
    
    message [1], for ioctl(TIOCVHANGUP) prevents tty_port_close() from
    decrementing port->count due to tty_hung_up_p() == true.
    
    ----------
    #include <sys/types.h>
    #include <sys/stat.h>
    #include <fcntl.h>
    #include <sys/ioctl.h>
    #include <unistd.h>
    
    int main(int argc, char *argv[])
    {
            int i;
            int fd[10];
    
            for (i = 0; i < 10; i++)
                    fd[i] = open("/dev/ttyprintk", O_WRONLY);
            ioctl(fd[0], TIOCVHANGUP);
            for (i = 0; i < 10; i++)
                    close(fd[i]);
            close(open("/dev/ttyprintk", O_WRONLY));
            return 0;
    }
    ----------
    
    When TTY hangup happens, port->count needs to be reset via
    "struct tty_operations"->hangup callback.
    
    [1] https://syzkaller.appspot.com/bug?id=39ea6caa479af471183997376dc7e90bc7d64a6a
    
    Reported-by: syzbot <syzbot+43e93968b964e369db0b@syzkaller.appspotmail.com>
    Reported-by: syzbot <syzbot+3ed715090790806d8b18@syzkaller.appspotmail.com>
    Tested-by: syzbot <syzbot+43e93968b964e369db0b@syzkaller.appspotmail.com>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Fixes: 24b4b67d17c308aa ("add ttyprintk driver")
    Link: https://lore.kernel.org/r/17e0652d-89b7-c8c0-fb53-e7566ac9add4@i-love.sakura.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acb642ee0f655492306d1e562a03bf28bc6ad973
Author: Artur Petrosyan <Arthur.Petrosyan@synopsys.com>
Date:   Fri Apr 16 16:47:14 2021 +0400

    usb: dwc2: Fix hibernation between host and device modes.
    
    [ Upstream commit 24d209dba5a3959b2ebde7cf3ad40c8015e814cf ]
    
    When core is in hibernation in host mode and a device cable
    was connected then driver exited from device hibernation.
    However, registers saved for host mode and when exited from
    device hibernation register restore would be done for device
    register which was wrong because there was no device registers
    stored to restore.
    
    - Added dwc_handle_gpwrdn_disc_det() function which handles
      gpwrdn disconnect detect flow and exits hibernation
      without restoring the registers.
    - Updated exiting from hibernation in GPWRDN_STS_CHGINT with
      calling dwc_handle_gpwrdn_disc_det() function. Here no register
      is restored which is the solution described above.
    
    Fixes: 65c9c4c6b01f ("usb: dwc2: Add dwc2_handle_gpwrdn_intr() handler")
    Acked-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Signed-off-by: Artur Petrosyan <Arthur.Petrosyan@synopsys.com>
    Signed-off-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Link: https://lore.kernel.org/r/20210416124715.75355A005D@mailhost.synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 36535a40b52c6f530ea6c22ac9598dac5cbb393a
Author: Artur Petrosyan <Arthur.Petrosyan@synopsys.com>
Date:   Fri Apr 16 16:47:06 2021 +0400

    usb: dwc2: Fix host mode hibernation exit with remote wakeup flow.
    
    [ Upstream commit c2db8d7b9568b10e014af83b3c15e39929e3579e ]
    
    Added setting "port_connect_status_change" flag to "1" in order
    to re-enumerate, because after exit from hibernation port
    connection status is not detected.
    
    Fixes: c5c403dc4336 ("usb: dwc2: Add host/device hibernation functions")
    Acked-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Signed-off-by: Artur Petrosyan <Arthur.Petrosyan@synopsys.com>
    Link: https://lore.kernel.org/r/20210416124707.5EEC2A005D@mailhost.synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b3fc9b21e5c6ba3cd593ea3f6a89f73f08fb2446
Author: Chris von Recklinghausen <crecklin@redhat.com>
Date:   Tue Apr 20 08:57:39 2021 -0400

    PM: hibernate: x86: Use crc32 instead of md5 for hibernation e820 integrity check
    
    [ Upstream commit f5d1499ae2096d7ea301023c4cc54e427300eb0a ]
    
    Hibernation fails on a system in fips mode because md5 is used for the e820
    integrity check and is not available. Use crc32 instead.
    
    The check is intended to detect whether the E820 memory map provided
    by the firmware after cold boot unexpectedly differs from the one that
    was in use when the hibernation image was created. In this case, the
    hibernation image cannot be restored, as it may cover memory regions
    that are no longer available to the OS.
    
    A non-cryptographic checksum such as CRC-32 is sufficient to detect such
    inadvertent deviations.
    
    Fixes: 62a03defeabd ("PM / hibernate: Verify the consistent of e820 memory map by md5 digest")
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Tested-by: Dexuan Cui <decui@microsoft.com>
    Reviewed-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: Chris von Recklinghausen <crecklin@redhat.com>
    [ rjw: Subject edit ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 682f486d18c616169e9cecaf193c45f9fbb0d42d
Author: Michael Kelley <mikelley@microsoft.com>
Date:   Mon Apr 19 21:48:09 2021 -0700

    Drivers: hv: vmbus: Increase wait time for VMbus unload
    
    [ Upstream commit 77db0ec8b7764cb9b09b78066ebfd47b2c0c1909 ]
    
    When running in Azure, disks may be connected to a Linux VM with
    read/write caching enabled. If a VM panics and issues a VMbus
    UNLOAD request to Hyper-V, the response is delayed until all dirty
    data in the disk cache is flushed.  In extreme cases, this flushing
    can take 10's of seconds, depending on the disk speed and the amount
    of dirty data. If kdump is configured for the VM, the current 10 second
    timeout in vmbus_wait_for_unload() may be exceeded, and the UNLOAD
    complete message may arrive well after the kdump kernel is already
    running, causing problems.  Note that no problem occurs if kdump is
    not enabled because Hyper-V waits for the cache flush before doing
    a reboot through the BIOS/UEFI code.
    
    Fix this problem by increasing the timeout in vmbus_wait_for_unload()
    to 100 seconds. Also output periodic messages so that if anyone is
    watching the serial console, they won't think the VM is completely
    hung.
    
    Fixes: 911e1987efc8 ("Drivers: hv: vmbus: Add timeout to vmbus_wait_for_unload")
    Signed-off-by: Michael Kelley <mikelley@microsoft.com>
    Reviewed-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Link: https://lore.kernel.org/r/1618894089-126662-1-git-send-email-mikelley@microsoft.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b877d36f134f89725f6feaae4e9b780cbc23117a
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Apr 20 11:44:02 2021 +0300

    platform/surface: aggregator: fix a bit test
    
    [ Upstream commit 366f0a30c8a01e79255221539a52909cc4c7bd25 ]
    
    The "funcs" variable is a u64.  If "func" is more than 31 then the
    BIT() shift will wrap instead of testing the high bits.
    
    Fixes: c167b9c7e3d6 ("platform/surface: Add Surface Aggregator subsystem")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Maximilian Luz <luzmaximilian@gmail.com>
    Link: https://lore.kernel.org/r/YH6UUhJhGk3mk13b@mwanda
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e4e2eca38edea3f6262c5c803ae184cdcec18fa
Author: Paul Fertser <fercerpav@gmail.com>
Date:   Fri Apr 16 13:29:04 2021 +0300

    hwmon: (pmbus/pxe1610) don't bail out when not all pages are active
    
    [ Upstream commit f025314306ae17a3fdaf2874d7e878ce19cea363 ]
    
    Certain VRs might be configured to use only the first output channel and
    so the mode for the second will be 0. Handle this gracefully.
    
    Fixes: b9fa0a3acfd8 ("hwmon: (pmbus/core) Add support for vid mode detection per page bases")
    Signed-off-by: Paul Fertser <fercerpav@gmail.com>
    Link: https://lore.kernel.org/r/20210416102926.13614-1-fercerpav@gmail.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b9b14d8ba4125c2e6936116699bc41b87e41258
Author: Ingo Molnar <mingo@kernel.org>
Date:   Tue Apr 20 09:47:42 2021 +0200

    x86/platform/uv: Fix !KEXEC build failure
    
    [ Upstream commit c2209ea55612efac75de0a58ef5f7394fae7fa0f ]
    
    When KEXEC is disabled, the UV build fails:
    
      arch/x86/platform/uv/uv_nmi.c:875:14: error: ‘uv_nmi_kexec_failed’ undeclared (first use in this function)
    
    Since uv_nmi_kexec_failed is only defined in the KEXEC_CORE #ifdef branch,
    this code cannot ever have been build tested:
    
            if (main)
                    pr_err("UV: NMI kdump: KEXEC not supported in this kernel\n");
            atomic_set(&uv_nmi_kexec_failed, 1);
    
    Nor is this use possible in uv_handle_nmi():
    
                    atomic_set(&uv_nmi_kexec_failed, 0);
    
    These bugs were introduced in this commit:
    
        d0a9964e9873: ("x86/platform/uv: Implement simple dump failover if kdump fails")
    
    Which added the uv_nmi_kexec_failed assignments to !KEXEC code, while making the
    definition KEXEC-only - apparently without testing the !KEXEC case.
    
    Instead of complicating the #ifdef maze, simplify the code by requiring X86_UV
    to depend on KEXEC_CORE. This pattern is present in other architectures as well.
    
    ( We'll remove the untested, 7 years old !KEXEC complications from the file in a
      separate commit. )
    
    Fixes: d0a9964e9873: ("x86/platform/uv: Implement simple dump failover if kdump fails")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Mike Travis <travis@sgi.com>
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3a5a3597ea944985b12dab3f91842068fdcd054
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 23 15:31:19 2021 +0100

    btrfs: zoned: bail out in btrfs_alloc_chunk for bad input
    
    [ Upstream commit bb05b298af8b2330db2b39971bf0029798e7ad59 ]
    
    gcc complains that the ctl->max_chunk_size member might be used
    uninitialized when none of the three conditions for initializing it in
    init_alloc_chunk_ctl_policy_zoned() are true:
    
    In function ‘init_alloc_chunk_ctl_policy_zoned’,
        inlined from ‘init_alloc_chunk_ctl’ at fs/btrfs/volumes.c:5023:3,
        inlined from ‘btrfs_alloc_chunk’ at fs/btrfs/volumes.c:5340:2:
    include/linux/compiler-gcc.h:48:45: error: ‘ctl.max_chunk_size’ may be used uninitialized [-Werror=maybe-uninitialized]
     4998 |         ctl->max_chunk_size = min(limit, ctl->max_chunk_size);
          |                               ^~~
    fs/btrfs/volumes.c: In function ‘btrfs_alloc_chunk’:
    fs/btrfs/volumes.c:5316:32: note: ‘ctl’ declared here
     5316 |         struct alloc_chunk_ctl ctl;
          |                                ^~~
    
    If we ever get into this condition, something is seriously
    wrong, as validity is checked in the callers
    
      btrfs_alloc_chunk
        init_alloc_chunk_ctl
          init_alloc_chunk_ctl_policy_zoned
    
    so the same logic as in init_alloc_chunk_ctl_policy_regular()
    and a few other places should be applied. This avoids both further
    data corruption, and the compile-time warning.
    
    Fixes: 1cd6121f2a38 ("btrfs: zoned: implement zoned chunk allocator")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b386cbdc3437b822ecb4e20ce01d7b87cd1ddd1
Author: Naohiro Aota <naohiro.aota@wdc.com>
Date:   Wed Mar 24 23:23:11 2021 +0900

    btrfs: zoned: move log tree node allocation out of log_root_tree->log_mutex
    
    [ Upstream commit e75f9fd194090e69c5ffd856ba89160683d343da ]
    
    Commit 6e37d2459941 ("btrfs: zoned: fix deadlock on log sync") pointed out
    a deadlock warning and removed mutex_{lock,unlock} of fs_info::tree_root->log_mutex.
    While it looks like it always cause a deadlock, we didn't see actual
    deadlock in fstests runs. The reason is log_root_tree->log_mutex !=
    fs_info->tree_root->log_mutex, not taking the same lock. So, the warning
    was actually a false-positive.
    
    Since btrfs_alloc_log_tree_node() is protected only by
    fs_info->tree_root->log_mutex, we can (and should) move the code out of
    the lock scope of log_root_tree->log_mutex and silence the warning.
    
    Fixes: 6e37d2459941 ("btrfs: zoned: fix deadlock on log sync")
    Reviewed-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
    Signed-off-by: Naohiro Aota <naohiro.aota@wdc.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bad5a23cf2b477fa78b85fd392736dae09a1e818
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Fri Apr 16 08:46:52 2021 +0800

    spi: spi-zynqmp-gqspi: return -ENOMEM if dma_map_single fails
    
    [ Upstream commit 126bdb606fd2802454e6048caef1be3e25dd121e ]
    
    The spi controller supports 44-bit address space on AXI in DMA mode,
    so set dma_addr_t width to 44-bit to avoid using a swiotlb mapping.
    In addition, if dma_map_single fails, it should return immediately
    instead of continuing doing the DMA operation which bases on invalid
    address.
    
    This fixes the following crash which occurs in reading a big block
    from flash:
    
    [  123.633577] zynqmp-qspi ff0f0000.spi: swiotlb buffer is full (sz: 4194304 bytes), total 32768 (slots), used 0 (slots)
    [  123.644230] zynqmp-qspi ff0f0000.spi: ERR:rxdma:memory not mapped
    [  123.784625] Unable to handle kernel paging request at virtual address 00000000003fffc0
    [  123.792536] Mem abort info:
    [  123.795313]   ESR = 0x96000145
    [  123.798351]   EC = 0x25: DABT (current EL), IL = 32 bits
    [  123.803655]   SET = 0, FnV = 0
    [  123.806693]   EA = 0, S1PTW = 0
    [  123.809818] Data abort info:
    [  123.812683]   ISV = 0, ISS = 0x00000145
    [  123.816503]   CM = 1, WnR = 1
    [  123.819455] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000805047000
    [  123.825887] [00000000003fffc0] pgd=0000000803b45003, p4d=0000000803b45003, pud=0000000000000000
    [  123.834586] Internal error: Oops: 96000145 [#1] PREEMPT SMP
    
    Fixes: 1c26372e5aa9 ("spi: spi-zynqmp-gqspi: Update driver to use spi-mem framework")
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Link: https://lore.kernel.org/r/20210416004652.2975446-6-quanyang.wang@windriver.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23269ac9f123eca3aea7682d3345c02e71ed696c
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Fri Apr 16 08:46:51 2021 +0800

    spi: spi-zynqmp-gqspi: fix use-after-free in zynqmp_qspi_exec_op
    
    [ Upstream commit a2c5bedb2d55dd27c642c7b9fb6886d7ad7bdb58 ]
    
    When handling op->addr, it is using the buffer "tmpbuf" which has been
    freed. This will trigger a use-after-free KASAN warning. Let's use
    temporary variables to store op->addr.val and op->cmd.opcode to fix
    this issue.
    
    Fixes: 1c26372e5aa9 ("spi: spi-zynqmp-gqspi: Update driver to use spi-mem framework")
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Link: https://lore.kernel.org/r/20210416004652.2975446-5-quanyang.wang@windriver.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28b09dcdcf7d5232ce46295f16373cfebe59753f
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Fri Apr 16 08:46:49 2021 +0800

    spi: spi-zynqmp-gqspi: fix hang issue when suspend/resume
    
    [ Upstream commit 799f923f0a66a9c99f0a3eaa078b306db7a8b33a ]
    
    After calling platform_set_drvdata(pdev, xqspi) in probe, the return
    value of dev_get_drvdata(dev) is a pointer to struct zynqmp_qspi but
    not struct spi_controller. A wrong structure type passing to the
    functions spi_controller_suspend/resume will hang the system.
    
    And we should check the return value of spi_controller_suspend, if
    an error is returned, return it to PM subsystem to stop suspend.
    
    Also, GQSPI_EN_MASK should be written to GQSPI_EN_OFST to enable
    the spi controller in zynqmp_qspi_resume since it was disabled in
    zynqmp_qspi_suspend before.
    
    Fixes: 1c26372e5aa9 ("spi: spi-zynqmp-gqspi: Update driver to use spi-mem framework")
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Link: https://lore.kernel.org/r/20210416004652.2975446-3-quanyang.wang@windriver.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 38671c4a5bf176fd6e77634c821e437d9e3aa3e6
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Fri Apr 16 08:46:48 2021 +0800

    spi: spi-zynqmp-gqspi: fix clk_enable/disable imbalance issue
    
    [ Upstream commit c6bdae08012b2ca3e94f3a41ef4ca8cfe7c9ab6f ]
    
    The clks "pclk" and "ref_clk" are enabled twice during the probe. The
    first time is in the function zynqmp_qspi_probe and the second time is
    in zynqmp_qspi_setup_op which is called by devm_spi_register_controller.
    Then calling zynqmp_qspi_remove (rmmod this module) to disable these clks
    will trigger a warning as below:
    
    [  309.124604] Unpreparing enabled qspi_ref
    [  309.128641] WARNING: CPU: 1 PID: 537 at drivers/clk/clk.c:824 clk_core_unprepare+0x108/0x110
    
    Since pm_runtime works now, clks can be enabled/disabled by calling
    zynqmp_runtime_suspend/resume. So we don't need to enable these clks
    explicitly in zynqmp_qspi_setup_op. Remove them to fix this issue.
    
    And remove clk enabling/disabling in zynqmp_qspi_resume because there is
    no spi transfer operation so enabling ref_clk is redundant meanwhile pclk
    is not disabled for it is shared with other peripherals.
    
    Furthermore replace clk_enable/disable with clk_prepare_enable and
    clk_disable_unprepare in runtime_suspend/resume functions.
    
    Fixes: 1c26372e5aa9 ("spi: spi-zynqmp-gqspi: Update driver to use spi-mem framework")
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Link: https://lore.kernel.org/r/20210416004652.2975446-2-quanyang.wang@windriver.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fc537486d7c07b62f059b59043996b0923d16f9
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Apr 6 16:25:23 2021 +0200

    crypto: arm64/aes-ce - deal with oversight in new CTR carry code
    
    [ Upstream commit 0f19dbc994dcb7f7137f2e056e813c84530b7538 ]
    
    The new carry handling code in the CTR driver can deal with a carry
    occurring in the 4x/5x parallel code path, by using a computed goto to
    jump into the carry sequence at the right place as to only apply the
    carry to a subset of the blocks being processed.
    
    If the lower half of the counter wraps and ends up at exactly 0x0, a
    carry needs to be applied to the counter, but not to the counter values
    taken for the 4x/5x parallel sequence. In this case, the computed goto
    skips all register assignments, and branches straight to the jump
    instruction that gets us back to the fast path. This produces the
    correct result, but due to the fact that this branch target does not
    carry the correct BTI annotation, this fails when BTI is enabled.
    
    Let's omit the computed goto entirely in this case, and jump straight
    back to the fast path after applying the carry to the main counter.
    
    Fixes: 5318d3db465d ("crypto: arm64/aes-ctr - improve tail handling")
    Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2728f289b3270b0e273292b46c534421a33bbfd5
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Apr 13 13:50:04 2021 +0300

    Drivers: hv: vmbus: Use after free in __vmbus_open()
    
    [ Upstream commit 3e9bf43f7f7a46f21ec071cb47be92d0874c48da ]
    
    The "open_info" variable is added to the &vmbus_connection.chn_msg_list,
    but the error handling frees "open_info" without removing it from the
    list.  This will result in a use after free.  First remove it from the
    list, and then free it.
    
    Fixes: 6f3d791f3006 ("Drivers: hv: vmbus: Fix rescind handling issues")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Andrea Parri <parri.andrea@gmail.com>
    Link: https://lore.kernel.org/r/YHV3XLCot6xBS44r@mwanda
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ee53ec981c1364ea0c16157527a11af1e1db7f8
Author: Eddie James <eajames@linux.ibm.com>
Date:   Tue Apr 13 14:43:06 2021 -0500

    ARM: dts: aspeed: Rainier: Fix humidity sensor bus address
    
    [ Upstream commit 1d5d46a1adafafce2b0c9105eab563709c84e3db ]
    
    The si7021 was incorrectly placed at 0x20 on i2c bus 7. It is at 0x40.
    
    Fixes: 9c44db7096e0 ("ARM: dts: aspeed: rainier: Add i2c devices")
    Signed-off-by: Eddie James <eajames@linux.ibm.com>
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b7c347672c2e483182790218b1d76d8dea691b1
Author: Dinghao Liu <dinghao.liu@zju.edu.cn>
Date:   Thu Apr 15 15:46:44 2021 +0800

    spi: spi-zynqmp-gqspi: Fix runtime PM imbalance in zynqmp_qspi_probe
    
    [ Upstream commit a21fbc42807b15b74b0891bd557063e6acf4fcae ]
    
    When platform_get_irq() fails, a pairing PM usage counter
    increment is needed to keep the counter balanced. It's the
    same for the following error paths.
    
    Signed-off-by: Dinghao Liu <dinghao.liu@zju.edu.cn>
    Link: https://lore.kernel.org/r/20210408092559.3824-1-dinghao.liu@zju.edu.cn
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d7cd576b987f15b0587d5383dc41a6b4ba6ea890
Author: Badhri Jagan Sridharan <badhri@google.com>
Date:   Tue Apr 13 19:39:58 2021 -0700

    usb: typec: tcpm: Honour pSnkStdby requirement during negotiation
    
    [ Upstream commit 123086843372bc93d26f52edfb71dbf951cd2f17 ]
    
    >From PD Spec:
    The Sink Shall transition to Sink Standby before a positive or
    negative voltage transition of VBUS. During Sink Standby
    the Sink Shall reduce its power draw to pSnkStdby. This allows
    the Source to manage the voltage transition as well as
    supply sufficient operating current to the Sink to maintain PD
    operation during the transition. The Sink Shall
    complete this transition to Sink Standby within tSnkStdby
    after evaluating the Accept Message from the Source. The
    transition when returning to Sink operation from Sink Standby
    Shall be completed within tSnkNewPower. The
    pSnkStdby requirement Shall only apply if the Sink power draw
    is higher than this level.
    
    The above requirement needs to be met to prevent hard resets
    from port partner.
    
    Without the patch: (5V/3A during SNK_DISCOVERY all the way through
    explicit contract)
    [   95.711984] CC1: 0 -> 0, CC2: 0 -> 5 [state TOGGLING, polarity 0, connected]
    [   95.712007] state change TOGGLING -> SNK_ATTACH_WAIT [rev3 NONE_AMS]
    [   95.712017] pending state change SNK_ATTACH_WAIT -> SNK_DEBOUNCED @ 170 ms [rev3 NONE_AMS]
    [   95.837190] VBUS on
    [   95.882075] state change SNK_ATTACH_WAIT -> SNK_DEBOUNCED [delayed 170 ms]
    [   95.882082] state change SNK_DEBOUNCED -> SNK_ATTACHED [rev3 NONE_AMS]
    [   95.882086] polarity 1
    [   95.883151] set_auto_vbus_discharge_threshold mode:0 pps_active:n vbus:5000 ret:0
    [   95.883441] enable vbus discharge ret:0
    [   95.883445] Requesting mux state 1, usb-role 2, orientation 2
    [   95.883776] state change SNK_ATTACHED -> SNK_STARTUP [rev3 NONE_AMS]
    [   95.883879] pending state change SNK_STARTUP -> SNK_DISCOVERY @ 500 ms [rev3 NONE_AMS]
    [   96.038960] VBUS on
    [   96.383939] state change SNK_STARTUP -> SNK_DISCOVERY [delayed 500 ms]
    [   96.383946] Setting voltage/current limit 5000 mV 3000 mA
    [   96.383961] vbus=0 charge:=1
    [   96.386044] state change SNK_DISCOVERY -> SNK_WAIT_CAPABILITIES [rev3 NONE_AMS]
    [   96.386309] pending state change SNK_WAIT_CAPABILITIES -> HARD_RESET_SEND @ 450 ms [rev3 NONE_AMS]
    [   96.394404] PD RX, header: 0x2161 [1]
    [   96.394408]  PDO 0: type 0, 5000 mV, 3000 mA [E]
    [   96.394410]  PDO 1: type 0, 9000 mV, 2000 mA []
    [   96.394412] state change SNK_WAIT_CAPABILITIES -> SNK_NEGOTIATE_CAPABILITIES [rev2 POWER_NEGOTIATION]
    [   96.394416] Setting usb_comm capable false
    [   96.395083] cc=0 cc1=0 cc2=5 vbus=0 vconn=sink polarity=1
    [   96.395089] Requesting PDO 1: 9000 mV, 2000 mA
    [   96.395093] PD TX, header: 0x1042
    [   96.397404] PD TX complete, status: 0
    [   96.397424] pending state change SNK_NEGOTIATE_CAPABILITIES -> HARD_RESET_SEND @ 60 ms [rev2 POWER_NEGOTIATION]
    [   96.400826] PD RX, header: 0x363 [1]
    [   96.400829] state change SNK_NEGOTIATE_CAPABILITIES -> SNK_TRANSITION_SINK [rev2 POWER_NEGOTIATION]
    [   96.400832] pending state change SNK_TRANSITION_SINK -> HARD_RESET_SEND @ 500 ms [rev2 POWER_NEGOTIATION]
    [   96.577315] PD RX, header: 0x566 [1]
    [   96.577321] Setting voltage/current limit 9000 mV 2000 mA
    [   96.578363] set_auto_vbus_discharge_threshold mode:3 pps_active:n vbus:9000 ret:0
    [   96.578370] state change SNK_TRANSITION_SINK -> SNK_READY [rev2 POWER_NEGOTIATION]
    
    With the patch:
    [  168.398573] CC1: 0 -> 0, CC2: 0 -> 5 [state TOGGLING, polarity 0, connected]
    [  168.398605] state change TOGGLING -> SNK_ATTACH_WAIT [rev3 NONE_AMS]
    [  168.398619] pending state change SNK_ATTACH_WAIT -> SNK_DEBOUNCED @ 170 ms [rev3 NONE_AMS]
    [  168.522348] VBUS on
    [  168.568676] state change SNK_ATTACH_WAIT -> SNK_DEBOUNCED [delayed 170 ms]
    [  168.568684] state change SNK_DEBOUNCED -> SNK_ATTACHED [rev3 NONE_AMS]
    [  168.568688] polarity 1
    [  168.569867] set_auto_vbus_discharge_threshold mode:0 pps_active:n vbus:5000 ret:0
    [  168.570158] enable vbus discharge ret:0
    [  168.570161] Requesting mux state 1, usb-role 2, orientation 2
    [  168.570504] state change SNK_ATTACHED -> SNK_STARTUP [rev3 NONE_AMS]
    [  168.570634] pending state change SNK_STARTUP -> SNK_DISCOVERY @ 500 ms [rev3 NONE_AMS]
    [  169.070689] state change SNK_STARTUP -> SNK_DISCOVERY [delayed 500 ms]
    [  169.070695] Setting voltage/current limit 5000 mV 3000 mA
    [  169.070702] vbus=0 charge:=1
    [  169.072719] state change SNK_DISCOVERY -> SNK_WAIT_CAPABILITIES [rev3 NONE_AMS]
    [  169.073145] pending state change SNK_WAIT_CAPABILITIES -> HARD_RESET_SEND @ 450 ms [rev3 NONE_AMS]
    [  169.077162] PD RX, header: 0x2161 [1]
    [  169.077172]  PDO 0: type 0, 5000 mV, 3000 mA [E]
    [  169.077178]  PDO 1: type 0, 9000 mV, 2000 mA []
    [  169.077183] state change SNK_WAIT_CAPABILITIES -> SNK_NEGOTIATE_CAPABILITIES [rev2 POWER_NEGOTIATION]
    [  169.077191] Setting usb_comm capable false
    [  169.077753] cc=0 cc1=0 cc2=5 vbus=0 vconn=sink polarity=1
    [  169.077759] Requesting PDO 1: 9000 mV, 2000 mA
    [  169.077762] PD TX, header: 0x1042
    [  169.079990] PD TX complete, status: 0
    [  169.080013] pending state change SNK_NEGOTIATE_CAPABILITIES -> HARD_RESET_SEND @ 60 ms [rev2 POWER_NEGOTIATION]
    [  169.083183] VBUS on
    [  169.084195] PD RX, header: 0x363 [1]
    [  169.084200] state change SNK_NEGOTIATE_CAPABILITIES -> SNK_TRANSITION_SINK [rev2 POWER_NEGOTIATION]
    [  169.084206] Setting standby current 5000 mV @ 500 mA
    [  169.084209] Setting voltage/current limit 5000 mV 500 mA
    [  169.084220] pending state change SNK_TRANSITION_SINK -> HARD_RESET_SEND @ 500 ms [rev2 POWER_NEGOTIATION]
    [  169.260222] PD RX, header: 0x566 [1]
    [  169.260227] Setting voltage/current limit 9000 mV 2000 mA
    [  169.261315] set_auto_vbus_discharge_threshold mode:3 pps_active:n vbus:9000 ret:0
    [  169.261321] state change SNK_TRANSITION_SINK -> SNK_READY [rev2 POWER_NEGOTIATION]
    [  169.261570] AMS POWER_NEGOTIATION finished
    
    Fixes: f0690a25a140b ("staging: typec: USB Type-C Port Manager (tcpm)")
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Badhri Jagan Sridharan <badhri@google.com>
    Link: https://lore.kernel.org/r/20210414024000.4175263-1-badhri@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aabd4ef3a06555a151c4d3f4cdf9a636ee5da354
Author: Steffen Dirkwinkel <s.dirkwinkel@beckhoff.com>
Date:   Mon Apr 12 15:30:06 2021 +0200

    platform/x86: pmc_atom: Match all Beckhoff Automation baytrail boards with critclk_systems DMI table
    
    [ Upstream commit d21e5abd3a005253eb033090aab2e43bce090d89 ]
    
    pmc_plt_clk* clocks are used for ethernet controllers, so need to stay
    turned on. This adds the affected board family to critclk_systems DMI
    table, so the clocks are marked as CLK_CRITICAL and not turned off.
    
    This replaces the previously listed boards with a match for the whole
    device family CBxx63. CBxx63 matches only baytrail devices.
    There are new affected boards that would otherwise need to be listed.
    There are unaffected boards in the family, but having the clocks
    turned on is not an issue.
    
    Fixes: 648e921888ad ("clk: x86: Stop marking clocks as CLK_IS_CRITICAL")
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Steffen Dirkwinkel <s.dirkwinkel@beckhoff.com>
    Link: https://lore.kernel.org/r/20210412133006.397679-1-linux-kernel-dev@beckhoff.com
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af43779b6cc91ed6e0170f4adf11b28a2d863a56
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Fri Apr 9 09:12:01 2021 +0800

    char: tpm: fix error return code in tpm_cr50_i2c_tis_recv()
    
    [ Upstream commit 3d785d73b4c1014839d9f9af0ee526f8d5706a73 ]
    
    Fix to return a negative error code from the error handling
    case instead of 0, as done elsewhere in this function.
    
    Fixes: 3a253caaad11 ("char: tpm: add i2c driver for cr50")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 364400df2df9ea0410c126dde1ac1fc115231fd0
Author: James Bottomley <James.Bottomley@HansenPartnership.com>
Date:   Wed Jan 27 11:06:15 2021 -0800

    security: keys: trusted: fix TPM2 authorizations
    
    [ Upstream commit de66514d934d70ce73c302ce0644b54970fc7196 ]
    
    In TPM 1.2 an authorization was a 20 byte number.  The spec actually
    recommended you to hash variable length passwords and use the sha1
    hash as the authorization.  Because the spec doesn't require this
    hashing, the current authorization for trusted keys is a 40 digit hex
    number.  For TPM 2.0 the spec allows the passing in of variable length
    passwords and passphrases directly, so we should allow that in trusted
    keys for ease of use.  Update the 'blobauth' parameter to take this
    into account, so we can now use plain text passwords for the keys.
    
    so before
    
    keyctl add trusted kmk "new 32 blobauth=f572d396fae9206628714fb2ce00f72e94f2258fkeyhandle=81000001" @u
    
    after we will accept both the old hex sha1 form as well as a new
    directly supplied password:
    
    keyctl add trusted kmk "new 32 blobauth=hello keyhandle=81000001" @u
    
    Since a sha1 hex code must be exactly 40 bytes long and a direct
    password must be 20 or less, we use the length as the discriminator
    for which form is input.
    
    Note this is both and enhancement and a potential bug fix.  The TPM
    2.0 spec requires us to strip leading zeros, meaning empyty
    authorization is a zero length HMAC whereas we're currently passing in
    20 bytes of zeros.  A lot of TPMs simply accept this as OK, but the
    Microsoft TPM emulator rejects it with TPM_RC_BAD_AUTH, so this patch
    makes the Microsoft TPM emulator work with trusted keys.
    
    Fixes: 0fe5480303a1 ("keys, trusted: seal/unseal with TPM 2.0 chips")
    Signed-off-by: James Bottomley <James.Bottomley@HansenPartnership.com>
    Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
    Tested-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Jarkko Sakkinen <jarkko@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c5534ad27913a5a982b8a4af9ab0c27a2a14d83
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Wed Apr 7 17:45:35 2021 +0200

    memory: samsung: exynos5422-dmc: handle clk_set_parent() failure
    
    [ Upstream commit 132c17c3ff878c7beaba51bdd275d5cc654c0e33 ]
    
    clk_set_parent() can fail and ignoring such case could lead to invalid
    clock setup for given frequency.
    
    Addresses-Coverity: Unchecked return value
    Fixes: 6e7674c3c6df ("memory: Add DMC driver for Exynos5422")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Lukasz Luba <lukasz.luba@arm.com>
    Link: https://lore.kernel.org/r/20210407154535.70756-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a74cb41af7dbe019e4096171f8bc641c7ce910ad
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Wed Apr 7 17:43:57 2021 +0200

    memory: renesas-rpc-if: fix possible NULL pointer dereference of resource
    
    [ Upstream commit 59e27d7c94aa02da039b000d33c304c179395801 ]
    
    The platform_get_resource_byname() can return NULL which would be
    immediately dereferenced by resource_size().  Instead dereference it
    after validating the resource.
    
    Addresses-Coverity: Dereference null return value
    Fixes: ca7d8b980b67 ("memory: add Renesas RPC-IF driver")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Link: https://lore.kernel.org/r/20210407154357.70200-1-krzysztof.kozlowski@canonical.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f476db2c0ffb36fd538860dcae765cbb94d42348
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Mon Apr 12 16:00:25 2021 +0000

    spi: spi-zynqmp-gqspi: Fix missing unlock on error in zynqmp_qspi_exec_op()
    
    [ Upstream commit 6043357263fbe2df0bf0736d971ad5dce7d19dc1 ]
    
    Add the missing unlock before return from function zynqmp_qspi_exec_op()
    in the error handling case.
    
    Fixes: a0f65be6e880 ("spi: spi-zynqmp-gqspi: add mutex locking for exec_op")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Link: https://lore.kernel.org/r/20210412160025.194171-1-weiyongjun1@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 512dbf4a089287a1e842a1d6e635b09d2937fc58
Author: Pawel Laszczak <pawell@cadence.com>
Date:   Wed Apr 7 08:36:29 2021 +0200

    usb: cdnsp: Fixes issue with Configure Endpoint command
    
    [ Upstream commit 10076de33b5ed5b1e049593a611d2fd9eba60565 ]
    
    Patch adds flag EP_UNCONFIGURED to detect whether endpoint was
    unconfigured. This flag is set in cdnsp_reset_device after Reset Device
    command. Among others this command disables all non control endpoints.
    Flag is used in cdnsp_gadget_ep_disable to protect controller against
    invoking Configure Endpoint command on disabled endpoint. Lack of this
    protection in some cases caused that Configure Endpoint command completed
    with Context State Error code completion.
    
    Fixes: 3d82904559f4 ("usb: cdnsp: cdns3 Add main part of Cadence USBSSP DRD Driver")
    Signed-off-by: Pawel Laszczak <pawell@cadence.com>
    Signed-off-by: Peter Chen <peter.chen@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 143f627f1979a866a88348d6961176b0c6cdb5f0
Author: Liam Howlett <liam.howlett@oracle.com>
Date:   Wed Apr 7 20:00:45 2021 +0000

    m68k: Add missing mmap_read_lock() to sys_cacheflush()
    
    [ Upstream commit f829b4b212a315b912cb23fd10aaf30534bb5ce9 ]
    
    When the superuser flushes the entire cache, the mmap_read_lock() is not
    taken, but mmap_read_unlock() is called.  Add the missing
    mmap_read_lock() call.
    
    Fixes: cd2567b6850b1648 ("m68k: call find_vma with the mmap_sem held in sys_cacheflush()")
    Signed-off-by: Liam R. Howlett <Liam.Howlett@Oracle.com>
    Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
    Link: https://lore.kernel.org/r/20210407200032.764445-1-Liam.Howlett@Oracle.com
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 795ad51102da51ee33d29484caef102b8ab23c3b
Author: Ye Bin <yebin10@huawei.com>
Date:   Thu Apr 8 19:23:05 2021 +0800

    usbip: vudc: fix missing unlock on error in usbip_sockfd_store()
    
    [ Upstream commit 1d08ed588c6a85a35a24c82eb4cf0807ec2b366a ]
    
    Add the missing unlock before return from function usbip_sockfd_store()
    in the error handling case.
    
    Fixes: bd8b82042269 ("usbip: vudc synchronize sysfs code paths")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Acked-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Ye Bin <yebin10@huawei.com>
    Link: https://lore.kernel.org/r/20210408112305.1022247-1-yebin10@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c2293dbe841ef1c5e88f95aaabca11311ef70f3
Author: Ayush Sawal <ayush.sawal@chelsio.com>
Date:   Sat Apr 3 00:55:48 2021 +0530

    crypto: chelsio - Read rxchannel-id from firmware
    
    [ Upstream commit 16a9874fe468855e8ddd72883ca903f706d0a9d0 ]
    
    The rxchannel id is updated by the driver using the
    port no value, but this does not ensure that the value
    is correct. So now rx channel value is obtained from
    etoc channel map value.
    
    Fixes: 567be3a5d227 ("crypto: chelsio - Use multiple txq/rxq per...")
    Signed-off-by: Ayush Sawal <ayush.sawal@chelsio.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d5d7e473ee8ae21d216449fc12c1ce97e45ce24e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Apr 9 14:01:57 2021 +0300

    node: fix device cleanups in error handling code
    
    [ Upstream commit 4ce535ec0084f0d712317cb99d383cad3288e713 ]
    
    We can't use kfree() to free device managed resources so the kfree(dev)
    is against the rules.
    
    It's easier to write this code if we open code the device_register() as
    a device_initialize() and device_add().  That way if dev_set_name() set
    name fails we can call put_device() and it will clean up correctly.
    
    Fixes: acc02a109b04 ("node: Add memory-side caching attributes")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/YHA0JUra+F64+NpB@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1395747ee5e9ab5d806424b17a49b697dc45c20b
Author: He Ying <heying24@huawei.com>
Date:   Tue Apr 6 05:42:00 2021 -0400

    firmware: qcom-scm: Fix QCOM_SCM configuration
    
    [ Upstream commit 2954a6f12f250890ec2433cec03ba92784d613e8 ]
    
    When CONFIG_QCOM_SCM is y and CONFIG_HAVE_ARM_SMCCC
    is not set, compiling errors are encountered as follows:
    
    drivers/firmware/qcom_scm-smc.o: In function `__scm_smc_do_quirk':
    qcom_scm-smc.c:(.text+0x36): undefined reference to `__arm_smccc_smc'
    drivers/firmware/qcom_scm-legacy.o: In function `scm_legacy_call':
    qcom_scm-legacy.c:(.text+0xe2): undefined reference to `__arm_smccc_smc'
    drivers/firmware/qcom_scm-legacy.o: In function `scm_legacy_call_atomic':
    qcom_scm-legacy.c:(.text+0x1f0): undefined reference to `__arm_smccc_smc'
    
    Note that __arm_smccc_smc is defined when HAVE_ARM_SMCCC is y.
    So add dependency on HAVE_ARM_SMCCC in QCOM_SCM configuration.
    
    Fixes: 916f743da354 ("firmware: qcom: scm: Move the scm driver to drivers/firmware")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: He Ying <heying24@huawei.com>
    Link: https://lore.kernel.org/r/20210406094200.60952-1-heying24@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac2c5480afd408167506910b1c0769bf2d044e7b
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 11:52:08 2021 +0200

    serial: core: return early on unsupported ioctls
    
    [ Upstream commit 79c5966cec7b148199386ef9933c31b999379065 ]
    
    Drivers can return -ENOIOCTLCMD when an ioctl is not recognised to tell
    the upper layers to continue looking for a handler.
    
    This is not the case for the RS485 and ISO7816 ioctls whose handlers
    should return -ENOTTY directly in case a serial driver does not
    implement the corresponding methods.
    
    Fixes: a5f276f10ff7 ("serial_core: Handle TIOC[GS]RS485 ioctls.")
    Fixes: ad8c0eaa0a41 ("tty/serial_core: add ISO7816 infrastructure")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407095208.31838-9-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a72d78d67043f1c6e2b23e5b98e51b28f043583c
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 11:52:03 2021 +0200

    tty: fix return value for unsupported termiox ioctls
    
    [ Upstream commit 8871de06ff78e9333d86c87d7071452b690e7c9b ]
    
    Drivers should return -ENOTTY ("Inappropriate I/O control operation")
    when an ioctl isn't supported, while -EINVAL is used for invalid
    arguments.
    
    Support for termiox was added by commit 1d65b4a088de ("tty: Add
    termiox") in 2008 but no driver support ever followed and it was
    recently ripped out by commit e0efb3168d34 ("tty: Remove dead termiox
    code").
    
    Fix the return value for the unsupported termiox ioctls, which have
    always returned -EINVAL, by explicitly returning -ENOTTY rather than
    removing them completely and falling back to the default unrecognised-
    ioctl handling.
    
    Fixes: 1d65b4a088de ("tty: Add termiox")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407095208.31838-4-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23598e43e2d95fe0b2df8bdd7cad1df9306056fc
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 11:52:02 2021 +0200

    tty: fix return value for unsupported ioctls
    
    [ Upstream commit 1b8b20868a6d64cfe8174a21b25b74367bdf0560 ]
    
    Drivers should return -ENOTTY ("Inappropriate I/O control operation")
    when an ioctl isn't supported, while -EINVAL is used for invalid
    arguments.
    
    Fix up the TIOCMGET, TIOCMSET and TIOCGICOUNT helpers which returned
    -EINVAL when a tty driver did not implement the corresponding
    operations.
    
    Note that the TIOCMGET and TIOCMSET helpers predate git and do not get a
    corresponding Fixes tag below.
    
    Fixes: d281da7ff6f7 ("tty: Make tiocgicount a handler")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407095208.31838-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit addeca42cc77f83b22371acf1cd96a304f08d767
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 11:52:01 2021 +0200

    tty: actually undefine superseded ASYNC flags
    
    [ Upstream commit d09845e98a05850a8094ea8fd6dd09a8e6824fff ]
    
    Some kernel-internal ASYNC flags have been superseded by tty-port flags
    and should no longer be used by kernel drivers.
    
    Fix the misspelled "__KERNEL__" compile guards which failed their sole
    purpose to break out-of-tree drivers that have not yet been updated.
    
    Fixes: 5c0517fefc92 ("tty: core: Undefine ASYNC_* flags superceded by TTY_PORT* flags")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407095208.31838-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7551577e6ce46990a7a00bdbf7b003a7e4208c25
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Apr 8 15:16:02 2021 +0200

    USB: cdc-acm: fix TIOCGSERIAL implementation
    
    [ Upstream commit 496960274153bdeb9d1f904ff1ea875cef8232c1 ]
    
    TIOCSSERIAL is a horrid, underspecified, legacy interface which for most
    serial devices is only useful for setting the close_delay and
    closing_wait parameters.
    
    The xmit_fifo_size parameter could be used to set the hardware transmit
    fifo size of a legacy UART when it could not be detected, but the
    interface is limited to eight bits and should be left unset when it is
    not used.
    
    Similarly, baud_base could be used to set the UART base clock when it
    could not be detected, but might as well be left unset when it is not
    known (which is the case for CDC).
    
    Fix the cdc-acm TIOCGSERIAL implementation by dropping its custom
    interpretation of the unused xmit_fifo_size and baud_base fields, which
    overflowed the former with the URB buffer size and set the latter to the
    current line speed. Also return the port line number, which is the only
    other value used besides the close parameters.
    
    Note that the current line speed can still be retrieved through the
    standard termios interfaces.
    
    Fixes: 18c75720e667 ("USB: allow users to run setserial with cdc-acm")
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210408131602.27956-4-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e48628060ca4fcc302f0246b2c2db2c1c1b39b6d
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Apr 8 15:16:01 2021 +0200

    USB: cdc-acm: fix unprivileged TIOCCSERIAL
    
    [ Upstream commit dd5619582d60007139f0447382d2839f4f9e339b ]
    
    TIOCSSERIAL is a horrid, underspecified, legacy interface which for most
    serial devices is only useful for setting the close_delay and
    closing_wait parameters.
    
    A non-privileged user has only ever been able to set the since long
    deprecated ASYNC_SPD flags and trying to change any other *supported*
    feature should result in -EPERM being returned. Setting the current
    values for any supported features should return success.
    
    Fix the cdc-acm implementation which instead indicated that the
    TIOCSSERIAL ioctl was not even implemented when a non-privileged user
    set the current values.
    
    Fixes: ba2d8ce9db0a ("cdc-acm: implement TIOCSSERIAL to avoid blocking close(2)")
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210408131602.27956-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0e543b46b8d3c6ada114a405c35af33365dea35
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Apr 6 19:45:10 2021 +0100

    usb: gadget: r8a66597: Add missing null check on return from platform_get_resource
    
    [ Upstream commit 9c2076090c2815fe7c49676df68dde7e60a9b9fc ]
    
    The call to platform_get_resource can potentially return a NULL pointer
    on failure, so add this check and return -EINVAL if it fails.
    
    Fixes: c41442474a26 ("usb: gadget: R8A66597 peripheral controller support.")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Addresses-Coverity: ("Dereference null return")
    Link: https://lore.kernel.org/r/20210406184510.433497-1-colin.king@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a2b5cee0d31ab6cc51030c441135b0e31217282
Author: Wang Li <wangli74@huawei.com>
Date:   Fri Apr 9 09:54:30 2021 +0000

    spi: fsl-lpspi: Fix PM reference leak in lpspi_prepare_xfer_hardware()
    
    [ Upstream commit a03675497970a93fcf25d81d9d92a59c2d7377a7 ]
    
    pm_runtime_get_sync will increment pm usage counter even it failed.
    Forgetting to putting operation will result in reference leak here.
    Fix it by replacing it with pm_runtime_resume_and_get to keep usage
    counter balanced.
    
    Fixes: 944c01a889d9 ("spi: lpspi: enable runtime pm for lpspi")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Li <wangli74@huawei.com>
    Link: https://lore.kernel.org/r/20210409095430.29868-1-wangli74@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d11e1802f8aef81e8c68d775e5203f1ebf39935a
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Thu Apr 8 12:02:23 2021 +0800

    spi: spi-zynqmp-gqspi: fix incorrect operating mode in zynqmp_qspi_read_op
    
    [ Upstream commit 41d310930084502433fcb3c4baf219e7424b7734 ]
    
    When starting a read operation, we should call zynqmp_qspi_setuprxdma
    first to set xqspi->mode according to xqspi->bytes_to_receive and
    to calculate correct xqspi->dma_rx_bytes. Then in the function
    zynqmp_qspi_fillgenfifo, generate the appropriate command with
    operating mode and bytes to transfer, and fill the GENFIFO with
    the command to perform the read operation.
    
    Calling zynqmp_qspi_fillgenfifo before zynqmp_qspi_setuprxdma will
    result in incorrect transfer length and operating mode. So change
    the calling order to fix this issue.
    
    Fixes: 1c26372e5aa9 ("spi: spi-zynqmp-gqspi: Update driver to use spi-mem framework")
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Reviewed-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
    Link: https://lore.kernel.org/r/20210408040223.23134-5-quanyang.wang@windriver.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d3d7eead4caf61d966f56fa36d91afdb2719737
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Thu Apr 8 12:02:22 2021 +0800

    spi: spi-zynqmp-gqspi: transmit dummy circles by using the controller's internal functionality
    
    [ Upstream commit 8ad07d79bd56a531990a1a3f3f1c0eb19d2de806 ]
    
    There is a data corruption issue that occurs in the reading operation
    (cmd:0x6c) when transmitting common data as dummy circles.
    
    The gqspi controller has the functionality to send dummy clock circles.
    When writing data with the fields [receive, transmit, data_xfer] = [0,0,1]
    to the Generic FIFO, and configuring the correct SPI mode, the controller
    will transmit dummy circles.
    
    So let's switch to hardware dummy cycles transfer to fix this issue.
    
    Fixes: 1c26372e5aa9 ("spi: spi-zynqmp-gqspi: Update driver to use spi-mem framework")
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Reviewed-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
    Link: https://lore.kernel.org/r/20210408040223.23134-4-quanyang.wang@windriver.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5ec27dd6e37fc2ddc606c7e92f3e7ea4d23d289
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Thu Apr 8 12:02:21 2021 +0800

    spi: spi-zynqmp-gqspi: add mutex locking for exec_op
    
    [ Upstream commit a0f65be6e880a14d3445b75e7dc03d7d015fc922 ]
    
    The spi-mem framework has no locking to prevent ctlr->mem_ops->exec_op
    from concurrency. So add the locking to zynqmp_qspi_exec_op.
    
    Fixes: 1c26372e5aa9 ("spi: spi-zynqmp-gqspi: Update driver to use spi-mem framework")
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Reviewed-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
    Link: https://lore.kernel.org/r/20210408040223.23134-3-quanyang.wang@windriver.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fa511754543f9421c3fd6131d54f5634ca796e0
Author: Quanyang Wang <quanyang.wang@windriver.com>
Date:   Thu Apr 8 12:02:20 2021 +0800

    spi: spi-zynqmp-gqspi: use wait_for_completion_timeout to make zynqmp_qspi_exec_op not interruptible
    
    [ Upstream commit a16bff68b75fd082d36aa0b14b540bd7a3ebebbd ]
    
    When Ctrl+C occurs during the process of zynqmp_qspi_exec_op, the function
    wait_for_completion_interruptible_timeout will return a non-zero value
    -ERESTARTSYS immediately. This will disrupt the SPI memory operation
    because the data transmitting may begin before the command or address
    transmitting completes. Use wait_for_completion_timeout to prevent
    the process from being interruptible.
    
    This patch fixes the error as below:
    root@xilinx-zynqmp:~# flash_erase /dev/mtd3 0 0
    Erasing 4 Kibyte @ 3d000 --  4 % complete
        (Press Ctrl+C)
    [  169.581911] zynqmp-qspi ff0f0000.spi: Chip select timed out
    [  170.585907] zynqmp-qspi ff0f0000.spi: Chip select timed out
    [  171.589910] zynqmp-qspi ff0f0000.spi: Chip select timed out
    [  172.593910] zynqmp-qspi ff0f0000.spi: Chip select timed out
    [  173.597907] zynqmp-qspi ff0f0000.spi: Chip select timed out
    [  173.603480] spi-nor spi0.0: Erase operation failed.
    [  173.608368] spi-nor spi0.0: Attempted to modify a protected sector.
    
    Fixes: 1c26372e5aa9 ("spi: spi-zynqmp-gqspi: Update driver to use spi-mem framework")
    Signed-off-by: Quanyang Wang <quanyang.wang@windriver.com>
    Reviewed-by: Amit Kumar Mahapatra <amit.kumar-mahapatra@xilinx.com>
    Link: https://lore.kernel.org/r/20210408040223.23134-2-quanyang.wang@windriver.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d6c13a9896ae2bb859c5790f1df2a187eea63fb6
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Apr 8 13:42:21 2021 +0200

    cpufreq: armada-37xx: Fix determining base CPU frequency
    
    [ Upstream commit 8bad3bf23cbc40abe1d24cec08a114df6facf858 ]
    
    When current CPU load is not L0 then loading armada-37xx-cpufreq.ko driver
    fails with following error:
    
        # modprobe armada-37xx-cpufreq
        [  502.702097] Unsupported CPU frequency 250 MHz
    
    This issue was partially fixed by commit 8db82563451f ("cpufreq:
    armada-37xx: fix frequency calculation for opp"), but only for calculating
    CPU frequency for opp.
    
    Fix this also for determination of base CPU frequency.
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Tested-by: Tomasz Maciej Nowak <tmn505@gmail.com>
    Tested-by: Anders Trier Olesen <anders.trier.olesen@gmail.com>
    Tested-by: Philip Soares <philips@netisense.com>
    Fixes: 92ce45fb875d ("cpufreq: Add DVFS support for Armada 37xx")
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae390626dc0e9fa079d6df5f0a29886fc9467b3b
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Apr 8 13:42:20 2021 +0200

    cpufreq: armada-37xx: Fix driver cleanup when registration failed
    
    [ Upstream commit 92963903a8e11b9576eb7249f8e81eefa93b6f96 ]
    
    Commit 8db82563451f ("cpufreq: armada-37xx: fix frequency calculation for
    opp") changed calculation of frequency passed to the dev_pm_opp_add()
    function call. But the code for dev_pm_opp_remove() function call was not
    updated, so the driver cleanup phase does not work when registration fails.
    
    This fixes the issue by using the same frequency in both calls.
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Tested-by: Tomasz Maciej Nowak <tmn505@gmail.com>
    Tested-by: Anders Trier Olesen <anders.trier.olesen@gmail.com>
    Tested-by: Philip Soares <philips@netisense.com>
    Fixes: 8db82563451f ("cpufreq: armada-37xx: fix frequency calculation for opp")
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fac19292b8c1a9019f443d758117b86c2a566ef4
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Apr 8 13:42:19 2021 +0200

    clk: mvebu: armada-37xx-periph: Fix workaround for switching from L1 to L0
    
    [ Upstream commit e93033aff684641f71a436ca7a9d2a742126baaf ]
    
    When CPU frequency is at 250 MHz and set_rate() is called with 500 MHz (L1)
    quickly followed by a call with 1 GHz (L0), the CPU does not necessarily
    stay in L1 for at least 20ms as is required by Marvell errata.
    
    This situation happens frequently with the ondemand cpufreq governor and
    can be also reproduced with userspace governor. In most cases it causes CPU
    to crash.
    
    This change fixes the above issue and ensures that the CPU always stays in
    L1 for at least 20ms when switching from any state to L0.
    
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Stephen Boyd <sboyd@kernel.org>
    Acked-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Tested-by: Tomasz Maciej Nowak <tmn505@gmail.com>
    Tested-by: Anders Trier Olesen <anders.trier.olesen@gmail.com>
    Tested-by: Philip Soares <philips@netisense.com>
    Fixes: 61c40f35f5cd ("clk: mvebu: armada-37xx-periph: Fix switching CPU rate from 300Mhz to 1.2GHz")
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9db7efc1cef8a0585901391f06bb8a2c3f038357
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Apr 8 13:42:18 2021 +0200

    clk: mvebu: armada-37xx-periph: Fix switching CPU freq from 250 Mhz to 1 GHz
    
    [ Upstream commit 4decb9187589f61fe9fc2bc4d9b01160b0a610c5 ]
    
    It was observed that the workaround introduced by commit 61c40f35f5cd
    ("clk: mvebu: armada-37xx-periph: Fix switching CPU rate from 300Mhz to
    1.2GHz") when base CPU frequency is 1.2 GHz is also required when base
    CPU frequency is 1 GHz. Otherwise switching CPU frequency directly from
    L2 (250 MHz) to L0 (1 GHz) causes a crash.
    
    When base CPU frequency is just 800 MHz no crashed were observed during
    switch from L2 to L0.
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Stephen Boyd <sboyd@kernel.org>
    Acked-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Tested-by: Tomasz Maciej Nowak <tmn505@gmail.com>
    Tested-by: Anders Trier Olesen <anders.trier.olesen@gmail.com>
    Tested-by: Philip Soares <philips@netisense.com>
    Fixes: 2089dc33ea0e ("clk: mvebu: armada-37xx-periph: add DVFS support for cpu clocks")
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae1294896b133f39ae28945dd9fa073f0f9f92ea
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Apr 8 13:42:17 2021 +0200

    cpufreq: armada-37xx: Fix the AVS value for load L1
    
    [ Upstream commit d118ac2062b5b8331c8768ac81e016617e0996ee ]
    
    The original CPU voltage value for load L1 is too low for Armada 37xx SoC
    when base CPU frequency is 1000 or 1200 MHz. It leads to instabilities
    where CPU gets stuck soon after dynamic voltage scaling from load L1 to L0.
    
    Update the CPU voltage value for load L1 accordingly when base frequency is
    1000 or 1200 MHz. The minimal L1 value for base CPU frequency 1000 MHz is
    updated from the original 1.05V to 1.108V and for 1200 MHz is updated to
    1.155V. This minimal L1 value is used only in the case when it is lower
    than value for L0.
    
    This change fixes CPU instability issues on 1 GHz and 1.2 GHz variants of
    Espressobin and 1 GHz Turris Mox.
    
    Marvell previously for 1 GHz variant of Espressobin provided a patch [1]
    suitable only for their Marvell Linux kernel 4.4 fork which workarounded
    this issue. Patch forced CPU voltage value to 1.108V in all loads. But
    such change does not fix CPU instability issues on 1.2 GHz variants of
    Armada 3720 SoC.
    
    During testing we come to the conclusion that using 1.108V as minimal
    value for L1 load makes 1 GHz variants of Espressobin and Turris Mox boards
    stable. And similarly 1.155V for 1.2 GHz variant of Espressobin.
    
    These two values 1.108V and 1.155V are documented in Armada 3700 Hardware
    Specifications as typical initial CPU voltage values.
    
    Discussion about this issue is also at the Armbian forum [2].
    
    [1] - https://github.com/MarvellEmbeddedProcessors/linux-marvell/commit/dc33b62c90696afb6adc7dbcc4ebbd48bedec269
    [2] - https://forum.armbian.com/topic/10429-how-to-make-espressobin-v7-stable/
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Acked-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Tested-by: Tomasz Maciej Nowak <tmn505@gmail.com>
    Tested-by: Anders Trier Olesen <anders.trier.olesen@gmail.com>
    Tested-by: Philip Soares <philips@netisense.com>
    Fixes: 1c3528232f4b ("cpufreq: armada-37xx: Add AVS support")
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b06442ced7760215b8ed567b1572432d97c7b3c2
Author: Marek Behún <kabel@kernel.org>
Date:   Thu Apr 8 13:42:16 2021 +0200

    clk: mvebu: armada-37xx-periph: remove .set_parent method for CPU PM clock
    
    [ Upstream commit 4e435a9dd26c46ac018997cc0562d50b1a96f372 ]
    
    Remove the .set_parent method in clk_pm_cpu_ops.
    
    This method was supposed to be needed by the armada-37xx-cpufreq driver,
    but was never actually called due to wrong assumptions in the cpufreq
    driver. After this was fixed in the cpufreq driver, this method is not
    needed anymore.
    
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Acked-by: Stephen Boyd <sboyd@kernel.org>
    Acked-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Tested-by: Pali Rohár <pali@kernel.org>
    Tested-by: Tomasz Maciej Nowak <tmn505@gmail.com>
    Tested-by: Anders Trier Olesen <anders.trier.olesen@gmail.com>
    Tested-by: Philip Soares <philips@netisense.com>
    Fixes: 2089dc33ea0e ("clk: mvebu: armada-37xx-periph: add DVFS support for cpu clocks")
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca9630b6522f794d11f9a2eec53025b8edd25edd
Author: Marek Behún <kabel@kernel.org>
Date:   Thu Apr 8 13:42:15 2021 +0200

    cpufreq: armada-37xx: Fix setting TBG parent for load levels
    
    [ Upstream commit 22592df194e31baf371906cc720da38fa0ab68f5 ]
    
    With CPU frequency determining software [1] we have discovered that
    after this driver does one CPU frequency change, the base frequency of
    the CPU is set to the frequency of TBG-A-P clock, instead of the TBG
    that is parent to the CPU.
    
    This can be reproduced on EspressoBIN and Turris MOX:
      cd /sys/devices/system/cpu/cpufreq/policy0
      echo powersave >scaling_governor
      echo performance >scaling_governor
    
    Running the mhz tool before this driver is loaded reports 1000 MHz, and
    after loading the driver and executing commands above the tool reports
    800 MHz.
    
    The change of TBG clock selector is supposed to happen in function
    armada37xx_cpufreq_dvfs_setup. Before the function returns, it does
    this:
      parent = clk_get_parent(clk);
      clk_set_parent(clk, parent);
    
    The armada-37xx-periph clock driver has the .set_parent method
    implemented correctly for this, so if the method was actually called,
    this would work. But since the introduction of the common clock
    framework in commit b2476490ef11 ("clk: introduce the common clock..."),
    the clk_set_parent function checks whether the parent is actually
    changing, and if the requested new parent is same as the old parent
    (which is obviously the case for the code above), the .set_parent method
    is not called at all.
    
    This patch fixes this issue by filling the correct TBG clock selector
    directly in the armada37xx_cpufreq_dvfs_setup during the filling of
    other registers at the same address. But the determination of CPU TBG
    index cannot be done via the common clock framework, therefore we need
    to access the North Bridge Peripheral Clock registers directly in this
    driver.
    
    [1] https://github.com/wtarreau/mhz
    
    Signed-off-by: Marek Behún <kabel@kernel.org>
    Acked-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Tested-by: Pali Rohár <pali@kernel.org>
    Tested-by: Tomasz Maciej Nowak <tmn505@gmail.com>
    Tested-by: Anders Trier Olesen <anders.trier.olesen@gmail.com>
    Tested-by: Philip Soares <philips@netisense.com>
    Fixes: 92ce45fb875d ("cpufreq: Add DVFS support for Armada 37xx")
    Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5072029dae677a489aa50c5838c074088d61fdd3
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Fri Apr 2 10:13:48 2021 -0700

    crypto: qat - Fix a double free in adf_create_ring
    
    [ Upstream commit f7cae626cabb3350b23722b78fe34dd7a615ca04 ]
    
    In adf_create_ring, if the callee adf_init_ring() failed, the callee will
    free the ring->base_addr by dma_free_coherent() and return -EFAULT. Then
    adf_create_ring will goto err and the ring->base_addr will be freed again
    in adf_cleanup_ring().
    
    My patch sets ring->base_addr to NULL after the first freed to avoid the
    double free.
    
    Fixes: a672a9dc872ec ("crypto: qat - Intel(R) QAT transport code")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7bd0657c2036add71981d88a7fae50188150b6e
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Apr 1 16:28:39 2021 +0100

    crypto: sa2ul - Fix memory leak of rxd
    
    [ Upstream commit 854b7737199848a91f6adfa0a03cf6f0c46c86e8 ]
    
    There are two error return paths that are not freeing rxd and causing
    memory leaks.  Fix these.
    
    Addresses-Coverity: ("Resource leak")
    Fixes: 00c9211f60db ("crypto: sa2ul - Fix DMA mapping API usage")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d3d702084d125689edb2b9395c707e09b471352e
Author: Colin Ian King <colin.king@canonical.com>
Date:   Thu Apr 1 16:18:27 2021 +0100

    crypto: sun8i-ss - Fix memory leak of pad
    
    [ Upstream commit 50274b01ac1689b1a3f6bc4b5b3dbf361a55dd3a ]
    
    It appears there are several failure return paths that don't seem
    to be free'ing pad. Fix these.
    
    Addresses-Coverity: ("Resource leak")
    Fixes: d9b45418a917 ("crypto: sun8i-ss - support hash algorithms")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d385c6e4b3cc7b3ca2f7a216cccb1de09e8cce25
Author: Corentin Labbe <clabbe.montjoie@gmail.com>
Date:   Mon Mar 29 22:12:00 2021 +0200

    crypto: allwinner - add missing CRYPTO_ prefix
    
    [ Upstream commit ac1af1a788b2002eb9d6f5ca6054517ad27f1930 ]
    
    Some CONFIG select miss CRYPTO_.
    
    Reported-by: Chen-Yu Tsai <wens@csie.org>
    Fixes: 56f6d5aee88d1 ("crypto: sun8i-ce - support hash algorithms")
    Fixes: d9b45418a9177 ("crypto: sun8i-ss - support hash algorithms")
    Signed-off-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5083a1723a33d8e3617c6128b8a282bdb6a33802
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Wed Apr 7 14:30:48 2021 -0700

    ACPI: CPPC: Replace cppc_attr with kobj_attribute
    
    [ Upstream commit 2bc6262c6117dd18106d5aa50d53e945b5d99c51 ]
    
    All of the CPPC sysfs show functions are called via indirect call in
    kobj_attr_show(), where they should be of type
    
    ssize_t (*show)(struct kobject *kobj, struct kobj_attribute *attr, char *buf);
    
    because that is the type of the ->show() member in
    'struct kobj_attribute' but they are actually of type
    
    ssize_t (*show)(struct kobject *kobj, struct attribute *attr, char *buf);
    
    because of the ->show() member in 'struct cppc_attr', resulting in a
    Control Flow Integrity violation [1].
    
    $ cat /sys/devices/system/cpu/cpu0/acpi_cppc/highest_perf
    3400
    
    $ dmesg | grep "CFI failure"
    [  175.970559] CFI failure (target: show_highest_perf+0x0/0x8):
    
    As far as I can tell, the only difference between 'struct cppc_attr'
    and 'struct kobj_attribute' aside from the type of the attr parameter
    is the type of the count parameter in the ->store() member (ssize_t vs.
    size_t), which does not actually matter because all of these nodes are
    read-only.
    
    Eliminate 'struct cppc_attr' in favor of 'struct kobj_attribute' to fix
    the violation.
    
    [1]: https://lore.kernel.org/r/20210401233216.2540591-1-samitolvanen@google.com/
    
    Fixes: 158c998ea44b ("ACPI / CPPC: add sysfs support to compute delivered performance")
    Link: https://github.com/ClangBuiltLinux/linux/issues/1343
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 844b01c8fc6eca323a4da9304e55cb1a813cfaf2
Author: He Ying <heying24@huawei.com>
Date:   Tue Apr 6 08:33:28 2021 -0400

    cpuidle: Fix ARM_QCOM_SPM_CPUIDLE configuration
    
    [ Upstream commit 498ba2a8a2756694b6f3888857426dbc8a5e6b6c ]
    
    When CONFIG_ARM_QCOM_SPM_CPUIDLE is y and CONFIG_MMU is not set,
    compiling errors are encountered as follows:
    
    drivers/cpuidle/cpuidle-qcom-spm.o: In function `spm_dev_probe':
    cpuidle-qcom-spm.c:(.text+0x140): undefined reference to `cpu_resume_arm'
    cpuidle-qcom-spm.c:(.text+0x148): undefined reference to `cpu_resume_arm'
    
    Note that cpu_resume_arm is defined when MMU is set. So, add dependency
    on MMU in ARM_QCOM_SPM_CPUIDLE configuration.
    
    Fixes: a871be6b8eee ("cpuidle: Convert Qualcomm SPM driver to a generic CPUidle driver")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: He Ying <heying24@huawei.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210406123328.92904-1-heying24@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a163df99821f8f16022fbb27b0ace6630cd7f1a1
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Apr 2 14:14:22 2021 +0800

    PM: runtime: Replace inline function pm_runtime_callbacks_present()
    
    [ Upstream commit 953c1fd96b1a70bcbbfb10973c2126eba8d891c7 ]
    
    Commit 9a7875461fd0 ("PM: runtime: Replace pm_runtime_callbacks_present()")
    forgot to change the inline version.
    
    Fixes: 9a7875461fd0 ("PM: runtime: Replace pm_runtime_callbacks_present()")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c9c1ee0120fda8eb006b799533cf312fd63b9ab7
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Thu Jan 7 15:25:26 2021 -0800

    soc: qcom: mdt_loader: Detect truncated read of segments
    
    [ Upstream commit 0648c55e3a21ccd816e99b6600d6199fbf39d23a ]
    
    Given that no validation of how much data the firmware loader read in
    for a given segment truncated segment files would best case result in a
    hash verification failure, without any indication of what went wrong.
    
    Improve this by validating that the firmware loader did return the
    amount of data requested.
    
    Fixes: 445c2410a449 ("soc: qcom: mdt_loader: Use request_firmware_into_buf()")
    Reviewed-by: Sibi Sankar <sibis@codeaurora.org>
    Link: https://lore.kernel.org/r/20210107232526.716989-1-bjorn.andersson@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0382a1e02cc36a8e9e9386824e15c1fba7a09e78
Author: Bjorn Andersson <bjorn.andersson@linaro.org>
Date:   Thu Jan 7 15:31:19 2021 -0800

    soc: qcom: mdt_loader: Validate that p_filesz < p_memsz
    
    [ Upstream commit 84168d1b54e76a1bcb5192991adde5176abe02e3 ]
    
    The code validates that segments of p_memsz bytes of a segment will fit
    in the provided memory region, but does not validate that p_filesz bytes
    will, which means that an incorrectly crafted ELF header might write
    beyond the provided memory region.
    
    Fixes: 051fb70fd4ea ("remoteproc: qcom: Driver for the self-authenticating Hexagon v5")
    Reviewed-by: Sibi Sankar <sibis@codeaurora.org>
    Link: https://lore.kernel.org/r/20210107233119.717173-1-bjorn.andersson@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0eb78f53cae456d4320381cc52588f9c6f281a5b
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Thu Apr 1 22:03:50 2021 +0800

    spi: fsl: add missing iounmap() on error in of_fsl_spi_probe()
    
    [ Upstream commit 5fed9fe5b41aea58e5b32be506dc50c9ab9a0e4d ]
    
    Add the missing iounmap() before return from of_fsl_spi_probe()
    in the error handling case.
    
    Fixes: 0f0581b24bd0 ("spi: fsl: Convert to use CS GPIO descriptors")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20210401140350.1677925-1-yangyingliang@huawei.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8735248ebb918d25427965f0db07939ed0473ec6
Author: William A. Kennington III <wak@google.com>
Date:   Wed Apr 7 02:55:27 2021 -0700

    spi: Fix use-after-free with devm_spi_alloc_*
    
    [ Upstream commit 794aaf01444d4e765e2b067cba01cc69c1c68ed9 ]
    
    We can't rely on the contents of the devres list during
    spi_unregister_controller(), as the list is already torn down at the
    time we perform devres_find() for devm_spi_release_controller. This
    causes devices registered with devm_spi_alloc_{master,slave}() to be
    mistakenly identified as legacy, non-devm managed devices and have their
    reference counters decremented below 0.
    
    ------------[ cut here ]------------
    WARNING: CPU: 1 PID: 660 at lib/refcount.c:28 refcount_warn_saturate+0x108/0x174
    [<b0396f04>] (refcount_warn_saturate) from [<b03c56a4>] (kobject_put+0x90/0x98)
    [<b03c5614>] (kobject_put) from [<b0447b4c>] (put_device+0x20/0x24)
     r4:b6700140
    [<b0447b2c>] (put_device) from [<b07515e8>] (devm_spi_release_controller+0x3c/0x40)
    [<b07515ac>] (devm_spi_release_controller) from [<b045343c>] (release_nodes+0x84/0xc4)
     r5:b6700180 r4:b6700100
    [<b04533b8>] (release_nodes) from [<b0454160>] (devres_release_all+0x5c/0x60)
     r8:b1638c54 r7:b117ad94 r6:b1638c10 r5:b117ad94 r4:b163dc10
    [<b0454104>] (devres_release_all) from [<b044e41c>] (__device_release_driver+0x144/0x1ec)
     r5:b117ad94 r4:b163dc10
    [<b044e2d8>] (__device_release_driver) from [<b044f70c>] (device_driver_detach+0x84/0xa0)
     r9:00000000 r8:00000000 r7:b117ad94 r6:b163dc54 r5:b1638c10 r4:b163dc10
    [<b044f688>] (device_driver_detach) from [<b044d274>] (unbind_store+0xe4/0xf8)
    
    Instead, determine the devm allocation state as a flag on the
    controller which is guaranteed to be stable during cleanup.
    
    Fixes: 5e844cc37a5c ("spi: Introduce device-managed SPI controller allocation")
    Signed-off-by: William A. Kennington III <wak@google.com>
    Link: https://lore.kernel.org/r/20210407095527.2771582-1-wak@google.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27502a922ec03b970e95a455b8e5474c72ededde
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Mon Mar 8 12:30:31 2021 +0000

    clocksource/drivers/ingenic_ost: Fix return value check in ingenic_ost_probe()
    
    [ Upstream commit 2a65f7e2772613debd03fa2492e76a635aa04545 ]
    
    In case of error, the function device_node_to_regmap() returns
    ERR_PTR() and never returns NULL. The NULL test in the return
    value check should be replaced with IS_ERR().
    
    Fixes: ca7b72b5a5f2 ("clocksource: Add driver for the Ingenic JZ47xx OST")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210308123031.2285083-1-weiyongjun1@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf2333393f33b9405727d5c3a0a151b0c558d01e
Author: Tony Lindgren <tony@atomide.com>
Date:   Thu Mar 4 09:21:35 2021 +0200

    clocksource/drivers/timer-ti-dm: Add missing set_state_oneshot_stopped
    
    [ Upstream commit ac4daf737674b4d29e19b7c300caff3bcf7160d8 ]
    
    To avoid spurious timer interrupts when KTIME_MAX is used, we need to
    configure set_state_oneshot_stopped(). Although implementing this is
    optional, it still affects things like power management for the extra
    timer interrupt.
    
    For more information, please see commit 8fff52fd5093 ("clockevents:
    Introduce CLOCK_EVT_STATE_ONESHOT_STOPPED state") and commit cf8c5009ee37
    ("clockevents/drivers/arm_arch_timer: Implement
    ->set_state_oneshot_stopped()").
    
    Fixes: 52762fbd1c47 ("clocksource/drivers/timer-ti-dm: Add clockevent and clocksource support")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210304072135.52712-4-tony@atomide.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d510293acb68cbb4e5334b85908763cf09216fcd
Author: Tony Lindgren <tony@atomide.com>
Date:   Thu Mar 4 09:21:33 2021 +0200

    clocksource/drivers/timer-ti-dm: Fix posted mode status check order
    
    [ Upstream commit 212709926c5493a566ca4086ad4f4b0d4e66b553 ]
    
    When the timer is configured in posted mode, we need to check the write-
    posted status register (TWPS) before writing to the register.
    
    We now check TWPS after the write starting with commit 52762fbd1c47
    ("clocksource/drivers/timer-ti-dm: Add clockevent and clocksource
    support").
    
    For example, in the TRM for am571x the following is documented in chapter
    "22.2.4.13.1.1 Write Posting Synchronization Mode":
    
    "For each register, a status bit is provided in the timer write-posted
     status (TWPS) register. In this mode, it is mandatory that software check
     this status bit before any write access. If a write is attempted to a
     register with a previous access pending, the previous access is discarded
     without notice."
    
    The regression happened when I updated the code to use standard read/write
    accessors for the driver instead of using __omap_dm_timer_load_start().
    We have__omap_dm_timer_load_start() check the TWPS status correctly using
    __omap_dm_timer_write().
    
    Fixes: 52762fbd1c47 ("clocksource/drivers/timer-ti-dm: Add clockevent and clocksource support")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210304072135.52712-2-tony@atomide.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c0053d344069b6a1035feb232129e9457f1eb09f
Author: Dong Aisheng <aisheng.dong@nxp.com>
Date:   Tue Mar 23 15:20:08 2021 +0800

    PM / devfreq: Use more accurate returned new_freq as resume_freq
    
    [ Upstream commit 62453f1ba5d5def9d58e140a50f3f168f028da38 ]
    
    Use the more accurate returned new_freq as resume_freq.
    It's the same as how devfreq->previous_freq was updated.
    
    Fixes: 83f8ca45afbf0 ("PM / devfreq: add support for suspend/resume of a devfreq device")
    Signed-off-by: Dong Aisheng <aisheng.dong@nxp.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c3988bcc3e55f3b4a335fb2cb83ac1b5a24feb7
Author: Qinglang Miao <miaoqinglang@huawei.com>
Date:   Wed Nov 25 14:50:34 2020 +0800

    soc: qcom: pdr: Fix error return code in pdr_register_listener
    
    [ Upstream commit 769738fc49bb578e05d404b481a9241d18147d86 ]
    
    Fix to return the error code -EREMOTEIO from pdr_register_listener
    rather than 0.
    
    Fixes: fbe639b44a82 ("soc: qcom: Introduce Protection Domain Restart helpers")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Qinglang Miao <miaoqinglang@huawei.com>
    Link: https://lore.kernel.org/r/20201125065034.154217-1-miaoqinglang@huawei.com
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3222157c9d2d0ebd6cc07651f58173d66b85f552
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Mar 21 13:16:07 2021 +0100

    platform/x86: dell-wmi-sysman: Make init_bios_attributes() ACPI object parsing more robust
    
    [ Upstream commit 5e3f5973c8dfd2b80268f1825ed2f2ddf81d3267 ]
    
    Make init_bios_attributes() ACPI object parsing more robust:
    1. Always check that the type of the return ACPI object is package, rather
       then only checking this for instance_id == 0
    2. Check that the package has the minimum amount of elements which will
       be consumed by the populate_foo_data() for the attr_type
    
    Note/TODO: The populate_foo_data() functions should also be made more
    robust. The should check the type of each of the elements matches the
    type which they expect and in case of populate_enum_data()
    obj->package.count should be passed to it as an argument and it should
    re-check this itself since it consume a variable number of elements.
    
    Fixes: e8a60aa7404b ("platform/x86: Introduce support for Systems Management Driver over WMI for Dell Systems")
    Cc: Divya Bharathi <Divya_Bharathi@dell.com>
    Cc: Mario Limonciello <mario.limonciello@dell.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210321121607.35717-1-hdegoede@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9acb52e70c182c0ff1355c63de60b20e6e750348
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:23:24 2021 +0200

    staging: greybus: uart: fix unprivileged TIOCCSERIAL
    
    [ Upstream commit 60c6b305c11b5fd167ce5e2ce42f3a9098c388f0 ]
    
    TIOCSSERIAL is a horrid, underspecified, legacy interface which for most
    serial devices is only useful for setting the close_delay and
    closing_wait parameters.
    
    A non-privileged user has only ever been able to set the since long
    deprecated ASYNC_SPD flags and trying to change any other *supported*
    feature should result in -EPERM being returned. Setting the current
    values for any supported features should return success.
    
    Fix the greybus implementation which instead indicated that the
    TIOCSSERIAL ioctl was not even implemented when a non-privileged user
    set the current values.
    
    Fixes: e68453ed28c5 ("greybus: uart-gb: now builds, more framework added")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407102334.32361-7-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15ee91744b237129623afb798d9b9a585c06daa4
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:23:22 2021 +0200

    staging: fwserial: fix TIOCGSERIAL implementation
    
    [ Upstream commit 5e84a66f3682af4f177bb24bb2ad5135c51f764a ]
    
    TIOCSSERIAL is a horrid, underspecified, legacy interface which for most
    serial devices is only useful for setting the close_delay and
    closing_wait parameters.
    
    The xmit_fifo_size parameter could be used to set the hardware transmit
    fifo size of a legacy UART when it could not be detected, but the
    interface is limited to eight bits and should be left unset when not
    used.
    
    Fix the fwserial implementation by dropping its custom interpretation of
    the unused xmit_fifo_size field, which was overflowed with the driver
    FIFO size. Also leave the type and flags fields unset as these cannot be
    changed.
    
    The close_delay and closing_wait parameters returned by TIOCGSERIAL are
    specified in centiseconds. The driver does not yet support changing
    closing_wait, but let's report back the default value actually used (30
    seconds).
    
    Fixes: 7355ba3445f2 ("staging: fwserial: Add TTY-over-Firewire serial driver")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407102334.32361-5-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a6dae92dda49b7c938aea766507cdbede8f7e256
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:23:21 2021 +0200

    staging: fwserial: fix TIOCSSERIAL implementation
    
    [ Upstream commit a7eaaa9d1032e68669bb479496087ba8fc155ab6 ]
    
    TIOCSSERIAL is a horrid, underspecified, legacy interface which for most
    serial devices is only useful for setting the close_delay and
    closing_wait parameters.
    
    A non-privileged user has only ever been able to set the since long
    deprecated ASYNC_SPD flags and trying to change any other *supported*
    feature should result in -EPERM being returned. Setting the current
    values for any supported features should return success.
    
    Fix the fwserial implementation which was returning -EPERM also for a
    privileged user when trying to change certain unsupported parameters,
    and instead return success consistently.
    
    Fixes: 7355ba3445f2 ("staging: fwserial: Add TTY-over-Firewire serial driver")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407102334.32361-4-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit faad1643e53bc3841aaab261e9dbdb82d9cf68a4
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Apr 7 16:03:08 2021 +0100

    staging: rtl8192u: Fix potential infinite loop
    
    [ Upstream commit f9b9263a25dc3d2eaaa829e207434db6951ca7bc ]
    
    The for-loop iterates with a u8 loop counter i and compares this
    with the loop upper limit of riv->ieee80211->LinkDetectInfo.SlotNum
    that is a u16 type. There is a potential infinite loop if SlotNum
    is larger than the u8 loop counter. Fix this by making the loop
    counter the same type as SlotNum.
    
    Addresses-Coverity: ("Infinite loop")
    Fixes: 8fc8598e61f6 ("Staging: Added Realtek rtl8192u driver to staging")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Link: https://lore.kernel.org/r/20210407150308.496623-1-colin.king@canonical.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74b525963c794d624af589f8ad542187b5b8d8de
Author: Ian Abbott <abbotti@mev.co.uk>
Date:   Wed Apr 7 15:01:38 2021 +0100

    staging: comedi: tests: ni_routes_test: Fix compilation error
    
    [ Upstream commit 6db58ed2b2d9bb1792eace4f9aa70e8bdd730ffc ]
    
    The `ni_routes_test` module is not currently selectable using the
    Kconfig files, but can be built by specifying `CONFIG_COMEDI_TESTS=m` on
    the "make" command line.  It currently fails to compile due to an extra
    parameter added to the `ni_assign_device_routes` function by
    commit e3b7ce73c578 ("staging: comedi: ni_routes: Allow alternate board
    name for routes").  Fix it by supplying the value `NULL` for the added
    `alt_board_name` parameter (which specifies that there is no alternate
    board name).
    
    Fixes: e3b7ce73c578 ("staging: comedi: ni_routes: Allow alternate board name for routes")
    Cc: Spencer E. Olson <olsonse@umich.edu>
    Signed-off-by: Ian Abbott <abbotti@mev.co.uk>
    Link: https://lore.kernel.org/r/20210407140142.447250-2-abbotti@mev.co.uk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 073b6c00f4a6f0efd76a91047e0c7b9b9b57972a
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Tue Mar 23 14:18:35 2021 +0100

    irqchip/gic-v3: Fix OF_BAD_ADDR error handling
    
    [ Upstream commit 8e13d96670a4c050d4883e6743a9e9858e5cfe10 ]
    
    When building with extra warnings enabled, clang points out a
    mistake in the error handling:
    
    drivers/irqchip/irq-gic-v3-mbi.c:306:21: error: result of comparison of constant 18446744073709551615 with expression of type 'phys_addr_t' (aka 'unsigned int') is always false [-Werror,-Wtautological-constant-out-of-range-compare]
                    if (mbi_phys_base == OF_BAD_ADDR) {
    
    Truncate the constant to the same type as the variable it gets compared
    to, to shut make the check work and void the warning.
    
    Fixes: 505287525c24 ("irqchip/gic-v3: Add support for Message Based Interrupts as an MSI controller")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210323131842.2773094-1-arnd@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c8994829f8dada2c82b942e118a04f294995b88f
Author: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
Date:   Fri Apr 2 23:09:05 2021 -0700

    mtd: rawnand: gpmi: Fix a double free in gpmi_nand_init
    
    [ Upstream commit 076de75de1e53160e9b099f75872c1f9adf41a0b ]
    
    If the callee gpmi_alloc_dma_buffer() failed to alloc memory for
    this->raw_buffer, gpmi_free_dma_buffer() will be called to free
    this->auxiliary_virt. But this->auxiliary_virt is still a non-NULL
    and valid ptr.
    
    Then gpmi_alloc_dma_buffer() returns err and gpmi_free_dma_buffer()
    is called again to free this->auxiliary_virt in err_out. This causes
    a double free.
    
    As gpmi_free_dma_buffer() has already called in gpmi_alloc_dma_buffer's
    error path, so it should return err directly instead of releasing the dma
    buffer again.
    
    Fixes: 4d02423e9afe6 ("mtd: nand: gpmi: Fix gpmi_nand_init() error path")
    Signed-off-by: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210403060905.5251-1-lyl2019@mail.ustc.edu.cn
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0b5e17391e624764d62f9b65fa1a92c72d6b1acb
Author: Alexandru Ardelean <aardelean@deviqon.com>
Date:   Wed Mar 24 20:27:46 2021 +0200

    iio: adc: Kconfig: make AD9467 depend on ADI_AXI_ADC symbol
    
    [ Upstream commit 194eafc9c1d49b53b59de9821fb63d423344cae3 ]
    
    Because a dependency on HAS_IOMEM and OF was added for the ADI AXI ADC
    driver, this makes the AD9467 driver have some build/dependency issues
    when OF is disabled (typically on ACPI archs like x86).
    
    This is because the selection of the AD9467 enforces the ADI_AXI_ADC symbol
    which is blocked by the OF (and potentially HAS_IOMEM) being disabled.
    
    To fix this, we make the AD9467 driver depend on the ADI_AXI_ADC symbol.
    The AD9467 driver cannot operate on it's own. It requires the ADI AXI ADC
    driver to stream data (or some similar IIO interface).
    
    So, the fix here is to make the AD9467 symbol depend on the ADI_AXI_ADC
    symbol. At some point this could become it's own subgroup of high-speed
    ADCs.
    
    Fixes: be24c65e9fa24 ("iio: adc: adi-axi-adc: add proper Kconfig dependencies")
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Alexandru Ardelean <aardelean@deviqon.com>
    Acked-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20210324182746.9337-1-aardelean@deviqon.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ff2f0383b537118eeefe3565cfafdf165058d95c
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Tue Feb 23 13:45:36 2021 -0800

    firmware: qcom_scm: Workaround lack of "is available" call on SC7180
    
    [ Upstream commit 257f2935cbbf14b16912c635fcd8ff43345c953b ]
    
    Some SC7180 firmwares don't implement the QCOM_SCM_INFO_IS_CALL_AVAIL
    API, so we can't probe the calling convention. We detect the legacy
    calling convention on these firmwares, because the availability call
    always fails and legacy is the fallback. This leads to problems where
    the rmtfs driver fails to probe, because it tries to assign memory with
    a bad calling convention, which then leads to modem failing to load and
    all networking, even wifi, to fail. Ouch!
    
    Let's force the calling convention to be what it always is on this SoC,
    i.e. arm64. Of course, the calling convention is not the same thing as
    implementing the QCOM_SCM_INFO_IS_CALL_AVAIL API. The absence of the "is
    this call available" API from the firmware means that any call to
    __qcom_scm_is_call_available() fails. This is OK for now though because
    none of the calls that are checked for existence are implemented on
    firmware running on sc7180. If such a call needs to be checked for
    existence in the future, we presume that firmware will implement this
    API and then things will "just work".
    
    Cc: Elliot Berman <eberman@codeaurora.org>
    Cc: Brian Masney <masneyb@onstation.org>
    Cc: Stephan Gerhold <stephan@gerhold.net>
    Cc: Jeffrey Hugo <jhugo@codeaurora.org>
    Cc: Douglas Anderson <dianders@chromium.org>
    Fixes: 9a434cee773a ("firmware: qcom_scm: Dynamically support SMCCC and legacy conventions")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/20210223214539.1336155-4-swboyd@chromium.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1fcaf5e2188f2b82d6259b3c17c4983ec23b8bc3
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Tue Feb 23 13:45:35 2021 -0800

    firmware: qcom_scm: Reduce locking section for __get_convention()
    
    [ Upstream commit f6ea568f0ddcdfad52807110ed8983e610f0e03b ]
    
    We shouldn't need to hold this spinlock here around the entire SCM call
    into the firmware and back. Instead, we should be able to query the
    firmware, potentially in parallel with other CPUs making the same
    convention detection firmware call, and then grab the lock to update the
    calling convention detected. The convention doesn't change at runtime so
    calling into firmware more than once is possibly wasteful but simpler.
    Besides, this is the slow path, not the fast path where we've already
    detected the convention used.
    
    More importantly, this allows us to add more logic here to workaround
    the case where the firmware call to check for availability isn't
    implemented in the firmware at all. In that case we can check the
    firmware node compatible string and force a calling convention.
    
    Note that we remove the 'has_queried' logic that is repeated twice. That
    could lead to the calling convention being printed multiple times to the
    kernel logs if the bool is true but __query_convention() is running on
    multiple CPUs. We also shorten the time where the lock is held, but we
    keep the lock held around the printk because it doesn't seem hugely
    important to drop it for that.
    
    Cc: Elliot Berman <eberman@codeaurora.org>
    Cc: Brian Masney <masneyb@onstation.org>
    Cc: Stephan Gerhold <stephan@gerhold.net>
    Cc: Jeffrey Hugo <jhugo@codeaurora.org>
    Cc: Douglas Anderson <dianders@chromium.org>
    Fixes: 9a434cee773a ("firmware: qcom_scm: Dynamically support SMCCC and legacy conventions")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/20210223214539.1336155-3-swboyd@chromium.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cba3020b926485dbcbeca4b3b09a6a32db772ebe
Author: Stephen Boyd <swboyd@chromium.org>
Date:   Tue Feb 23 13:45:34 2021 -0800

    firmware: qcom_scm: Make __qcom_scm_is_call_available() return bool
    
    [ Upstream commit 9d11af8b06a811c5c4878625f51ce109e2af4e80 ]
    
    Make __qcom_scm_is_call_available() return bool instead of int. The
    function has "is" in the name, so it should return a bool to indicate
    the truth of the call being available. Unfortunately, it can return a
    number < 0 which also looks "true", but not all callers expect that and
    thus they think a call is available when really the check to see if the
    call is available failed to figure it out.
    
    Reviewed-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Cc: Elliot Berman <eberman@codeaurora.org>
    Cc: Brian Masney <masneyb@onstation.org>
    Cc: Stephan Gerhold <stephan@gerhold.net>
    Cc: Jeffrey Hugo <jhugo@codeaurora.org>
    Cc: Douglas Anderson <dianders@chromium.org>
    Fixes: 0f206514749b ("scsi: firmware: qcom_scm: Add support for programming inline crypto keys")
    Fixes: 0434a4061471 ("firmware: qcom: scm: add support to restore secure config to qcm_scm-32")
    Fixes: b0a1614fb1f5 ("firmware: qcom: scm: add OCMEM lock/unlock interface")
    Signed-off-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/20210223214539.1336155-2-swboyd@chromium.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d34225169346cab5145978d153b9ce90e9ace21
Author: Finn Thain <fthain@telegraphics.com.au>
Date:   Tue Mar 30 18:37:51 2021 +1100

    m68k: mvme147,mvme16x: Don't wipe PCC timer config bits
    
    [ Upstream commit 43262178c043032e7c42d00de44c818ba05f9967 ]
    
    Don't clear the timer 1 configuration bits when clearing the interrupt flag
    and counter overflow. As Michael reported, "This results in no timer
    interrupts being delivered after the first. Initialization then hangs
    in calibrate_delay as the jiffies counter is not updated."
    
    On mvme16x, enable the timer after requesting the irq, consistent with
    mvme147.
    
    Cc: Michael Pavone <pavone@retrodev.com>
    Fixes: 7529b90d051e ("m68k: mvme147: Handle timer counter overflow")
    Fixes: 19999a8b8782 ("m68k: mvme16x: Handle timer counter overflow")
    Reported-and-tested-by: Michael Pavone <pavone@retrodev.com>
    Signed-off-by: Finn Thain <fthain@telegraphics.com.au>
    Link: https://lore.kernel.org/r/4fdaa113db089b8fb607f7dd818479f8cdcc4547.1617089871.git.fthain@telegraphics.com.au
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit effd2bd62b416f6629e18e3ce077c60de14cfdea
Author: Rander Wang <rander.wang@intel.com>
Date:   Wed Mar 31 08:46:10 2021 +0800

    soundwire: stream: fix memory leak in stream config error path
    
    [ Upstream commit 48f17f96a81763c7c8bf5500460a359b9939359f ]
    
    When stream config is failed, master runtime will release all
    slave runtime in the slave_rt_list, but slave runtime is not
    added to the list at this time. This patch frees slave runtime
    in the config error path to fix the memory leak.
    
    Fixes: 89e590535f32 ("soundwire: Add support for SoundWire stream management")
    Signed-off-by: Rander Wang <rander.wang@intel.com>
    Reviewed-by: Keyon Jie <yang.jie@intel.com>
    Reviewed-by: Guennadi Liakhovetski <guennadi.liakhovetski@linux.intel.com>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Bard Liao <yung-chuan.liao@linux.intel.com>
    Link: https://lore.kernel.org/r/20210331004610.12242-1-yung-chuan.liao@linux.intel.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 60015b30417e6c8bfcb462da17e34bb647ea44c4
Author: gexueyuan <gexueyuan@gmail.com>
Date:   Wed Mar 31 11:10:56 2021 +0800

    memory: pl353: fix mask of ECC page_size config register
    
    [ Upstream commit 25dcca7fedcd4e31cb368ad846bfd738c0c6307c ]
    
    The mask for page size of ECC Configuration Register should be 0x3,
    according to  the datasheet of PL353 smc.
    
    Fixes: fee10bd22678 ("memory: pl353: Add driver for arm pl353 static memory controller")
    Signed-off-by: gexueyuan <gexueyuan@gmail.com>
    Link: https://lore.kernel.org/r/20210331031056.5326-1-gexueyuan@gmail.com
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d2a65bf858ac7942566c1ef36fe6439afe24068
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Wed Mar 3 19:28:16 2021 +0100

    ARM: dts: qcom: msm8974-samsung-klte: correct fuel gauge interrupt trigger level
    
    [ Upstream commit 5fde3361ba57a9b4eb560dabf859176909d61004 ]
    
    The Maxim fuel gauge datasheets describe the interrupt line as active
    low with a requirement of acknowledge from the CPU.  The falling edge
    interrupt will mostly work but it's not correct.
    
    Fixes: da8d46992e67 ("ARM: dts: qcom: msm8974-klte: Add fuel gauge")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Acked-By: Iskren Chernev <iskren.chernev@gmail.com>
    Tested-By: Iskren Chernev <iskren.chernev@gmail.com>
    Link: https://lore.kernel.org/r/20210303182816.137255-2-krzk@kernel.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7241c948b4122f53b0d79442cbffc56659b58bea
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Wed Mar 3 19:28:15 2021 +0100

    ARM: dts: qcom: msm8974-lge-nexus5: correct fuel gauge interrupt trigger level
    
    [ Upstream commit 9d816b423dab5b59beec5e39b97428feac599ba7 ]
    
    The Maxim fuel gauge datasheets describe the interrupt line as active
    low with a requirement of acknowledge from the CPU.  The falling edge
    interrupt will mostly work but it's not correct.
    
    Fixes: 45dfa741df86 ("ARM: dts: qcom: msm8974-lge-nexus5: Add fuel gauge")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Acked-by: Iskren Chernev <iskren.chernev@gmail.com>
    Link: https://lore.kernel.org/r/20210303182816.137255-1-krzk@kernel.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 57d5dee58ce7d8bc858bcf828413adb2277fe142
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Wed Mar 31 18:05:25 2021 +0300

    driver core: platform: Declare early_platform_cleanup() prototype
    
    [ Upstream commit 1768289b44bae847612751d418fc5c5e680b5e5c ]
    
    Compiler is not happy:
    
      CC      drivers/base/platform.o
    drivers/base/platform.c:1557:20: warning: no previous prototype for ‘early_platform_cleanup’ [-Wmissing-prototypes]
     1557 | void __weak __init early_platform_cleanup(void) { }
          |                    ^~~~~~~~~~~~~~~~~~~~~~
    
    Declare early_platform_cleanup() prototype in the header to make everyone happy.
    
    Fixes: eecd37e105f0 ("drivers: Fix boot problem on SuperH")
    Cc: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210331150525.59223-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8832b172ff0fbf3709a83ea45e3d913797d39a50
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Tue Mar 30 12:12:39 2021 +0100

    nvmem: rmem: fix undefined reference to memremap
    
    [ Upstream commit cc1bc56fdc76a55bb8fae9a145a2e60bf22fb129 ]
    
    Fix below error reporte by kernel test robot
    rmem.c:(.text+0x14e): undefined reference to memremap
    s390x-linux-gnu-ld: rmem.c:(.text+0x1b6): undefined reference to memunmap
    
    Fixes: 5a3fa75a4d9c ("nvmem: Add driver to expose reserved memory as nvmem")
    Reported-by: kernel test robot <lkp@intel.com>
    Reviewed-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20210330111241.19401-9-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df60888bf3e46c58c13632c29d4e1bdcc6483df8
Author: Ravi Kumar Bokka <rbokka@codeaurora.org>
Date:   Tue Mar 30 12:12:34 2021 +0100

    drivers: nvmem: Fix voltage settings for QTI qfprom-efuse
    
    [ Upstream commit 9ec4f4b0e9fd3ad4b9a38bddb75b516ea09f4628 ]
    
    QFPROM controller hardware requires 1.8V min for fuse blowing.
    So, this change sets the voltage to 1.8V, required to blow the fuse
    for qfprom-efuse controller.
    
    To disable fuse blowing, we set the voltage to 0V since this may
    be a shared rail and may be able to run at a lower rate when we're
    not blowing fuses.
    
    Fixes: 93b4e49f8c86 ("nvmem: qfprom: Add fuse blowing support")
    Reported-by: Douglas Anderson <dianders@chromium.org>
    Suggested-by: Douglas Anderson <dianders@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Ravi Kumar Bokka <rbokka@codeaurora.org>
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20210330111241.19401-4-srinivas.kandagatla@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b93e0b45015e6fc0fea4f3af8cb9328982c1ef46
Author: Yang Yingliang <yangyingliang@huawei.com>
Date:   Tue Mar 30 21:01:59 2021 +0800

    USB: gadget: udc: fix wrong pointer passed to IS_ERR() and PTR_ERR()
    
    [ Upstream commit 2e3d055bf27d70204cae349335a62a4f9b7c165a ]
    
    IS_ERR() and PTR_ERR() use wrong pointer, it should be
    udc->virt_addr, fix it.
    
    Fixes: 1b9f35adb0ff ("usb: gadget: udc: Add Synopsys UDC Platform driver")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
    Link: https://lore.kernel.org/r/20210330130159.1051979-1-yangyingliang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df65ce0372349bc3b14cd04090df3f3cd95b26de
Author: Tao Ren <rentao.bupt@gmail.com>
Date:   Tue Mar 30 21:58:31 2021 -0700

    usb: gadget: aspeed: fix dma map failure
    
    [ Upstream commit bd4d607044b961cecbf8c4c2f3bb5da4fb156993 ]
    
    Currently the virtual port_dev device is passed to DMA API, and this is
    wrong because the device passed to DMA API calls must be the actual
    hardware device performing the DMA.
    
    The patch replaces usb_gadget_map_request/usb_gadget_unmap_request APIs
    with usb_gadget_map_request_by_dev/usb_gadget_unmap_request_by_dev APIs
    so the DMA capable platform device can be passed to the DMA APIs.
    
    The patch fixes below backtrace detected on Facebook AST2500 OpenBMC
    platforms:
    
    [<80106550>] show_stack+0x20/0x24
    [<80106868>] dump_stack+0x28/0x30
    [<80823540>] __warn+0xfc/0x110
    [<8011ac30>] warn_slowpath_fmt+0xb0/0xc0
    [<8011ad44>] dma_map_page_attrs+0x24c/0x314
    [<8016a27c>] usb_gadget_map_request_by_dev+0x100/0x1e4
    [<805cedd8>] usb_gadget_map_request+0x1c/0x20
    [<805cefbc>] ast_vhub_epn_queue+0xa0/0x1d8
    [<7f02f710>] usb_ep_queue+0x48/0xc4
    [<805cd3e8>] ecm_do_notify+0xf8/0x248
    [<7f145920>] ecm_set_alt+0xc8/0x1d0
    [<7f145c34>] composite_setup+0x680/0x1d30
    [<7f00deb8>] ast_vhub_ep0_handle_setup+0xa4/0x1bc
    [<7f02ee94>] ast_vhub_dev_irq+0x58/0x84
    [<7f0309e0>] ast_vhub_irq+0xb0/0x1c8
    [<7f02e118>] __handle_irq_event_percpu+0x50/0x19c
    [<8015e5bc>] handle_irq_event_percpu+0x38/0x8c
    [<8015e758>] handle_irq_event+0x38/0x4c
    
    Fixes: 7ecca2a4080c ("usb/gadget: Add driver for Aspeed SoC virtual hub")
    Reviewed-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Tao Ren <rentao.bupt@gmail.com>
    Link: https://lore.kernel.org/r/20210331045831.28700-1-rentao.bupt@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d8392fba0f27de35f884eab6cc5790f0eaa9677
Author: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
Date:   Thu Mar 25 08:34:18 2021 +0000

    crypto: qat - fix error path in adf_isr_resource_alloc()
    
    [ Upstream commit 83dc1173d73f80cbce2fee4d308f51f87b2f26ae ]
    
    The function adf_isr_resource_alloc() is not unwinding correctly in case
    of error.
    This patch fixes the error paths and propagate the errors to the caller.
    
    Fixes: 7afa232e76ce ("crypto: qat - Intel(R) QAT DH895xcc accelerator")
    Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Reviewed-by: Marco Chiappero <marco.chiappero@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a542f220b4b1b02a5d36dec45e5fc9072b8577cc
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Mar 22 18:05:15 2021 +0100

    crypto: poly1305 - fix poly1305_core_setkey() declaration
    
    [ Upstream commit 8d195e7a8ada68928f2aedb2c18302a4518fe68e ]
    
    gcc-11 points out a mismatch between the declaration and the definition
    of poly1305_core_setkey():
    
    lib/crypto/poly1305-donna32.c:13:67: error: argument 2 of type ‘const u8[16]’ {aka ‘const unsigned char[16]’} with mismatched bound [-Werror=array-parameter=]
       13 | void poly1305_core_setkey(struct poly1305_core_key *key, const u8 raw_key[16])
          |                                                          ~~~~~~~~~^~~~~~~~~~~
    In file included from lib/crypto/poly1305-donna32.c:11:
    include/crypto/internal/poly1305.h:21:68: note: previously declared as ‘const u8 *’ {aka ‘const unsigned char *’}
       21 | void poly1305_core_setkey(struct poly1305_core_key *key, const u8 *raw_key);
    
    This is harmless in principle, as the calling conventions are the same,
    but the more specific prototype allows better type checking in the
    caller.
    
    Change the declaration to match the actual function definition.
    The poly1305_simd_init() is a bit suspicious here, as it previously
    had a 32-byte argument type, but looks like it needs to take the
    16-byte POLY1305_BLOCK_SIZE array instead.
    
    Fixes: 1c08a104360f ("crypto: poly1305 - add new 32 and 64-bit generic versions")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Ard Biesheuvel <ardb@kernel.org>
    Reviewed-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8b37c99d66b45e1828e6ca46d3a2f6a4265169d0
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Tue Mar 30 15:03:59 2021 -0400

    NFSv4.2: fix copy stateid copying for the async copy
    
    [ Upstream commit e739b12042b6b079a397a3c234f96c09d1de0b40 ]
    
    This patch fixes Dan Carpenter's report that the static checker
    found a problem where memcpy() was copying into too small of a buffer.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Fixes: e0639dc5805a ("NFSD introduce async copy feature")
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Reviewed-by: Dai Ngo <dai.ngo@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3f647a08416d12fdfb3b00aaaba2beecb484c41a
Author: Fabien Parent <fparent@baylibre.com>
Date:   Tue Feb 23 23:18:26 2021 +0100

    arm64: dts: mediatek: fix reset GPIO level on pumpkin
    
    [ Upstream commit a7dceafed43a4a610d340da3703653cca2c50c1d ]
    
    The tca6416 chip is active low. Fix the reset-gpios value.
    
    Fixes: e2a8fa1e0faa ("arm64: dts: mediatek: fix tca6416 reset GPIOs in pumpkin")
    Signed-off-by: Fabien Parent <fparent@baylibre.com>
    Link: https://lore.kernel.org/r/20210223221826.2063911-1-fparent@baylibre.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd8a29ca0d8f19a732a5eee34917daa1be785d32
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Fri Mar 5 03:49:33 2021 +0000

    phy: ingenic: Fix a typo in ingenic_usb_phy_probe()
    
    [ Upstream commit 446c200ee3e8f6faf189ef6f25a0f5bb294afae4 ]
    
    Fix the return value check typo which testing the wrong variable
    in ingenic_usb_phy_probe().
    
    Fixes: 31de313dfdcf ("PHY: Ingenic: Add USB PHY driver using generic PHY framework.")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Acked-by: Paul Cercueil <paul@crapouillou.net>
    Link: https://lore.kernel.org/r/20210305034933.3240914-1-weiyongjun1@huawei.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9249b7fa71a4da06a8d5a7ff778ecce3065faba5
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Fri Mar 5 03:49:31 2021 +0000

    phy: ralink: phy-mt7621-pci: fix return value check in mt7621_pci_phy_probe()
    
    [ Upstream commit b976c987511e34a2e9b23545de912a121a9eded5 ]
    
    Fix the return value check which testing the wrong variable
    in mt7621_pci_phy_probe().
    
    Fixes: d87da32372a0 ("phy: ralink: Add PHY driver for MT7621 PCIe PHY")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Reviewed-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
    Link: https://lore.kernel.org/r/20210305034931.3237558-1-weiyongjun1@huawei.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd5378456e4ec1a9a1cebd4d1d7f4502115341bd
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Feb 8 16:02:52 2021 +0100

    phy: marvell: ARMADA375_USBCLUSTER_PHY should not default to y, unconditionally
    
    [ Upstream commit 6cb17707aad869de163d7bf42c253caf501be4e2 ]
    
    Merely enabling CONFIG_COMPILE_TEST should not enable additional code.
    To fix this, restrict the automatic enabling of ARMADA375_USBCLUSTER_PHY
    to MACH_ARMADA_375, and ask the user in case of compile-testing.
    
    Fixes: eee47538ec1f2619 ("phy: add support for USB cluster on the Armada 375 SoC")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Link: https://lore.kernel.org/r/20210208150252.424706-1-geert+renesas@glider.be
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fd6c07cea3b50ea0b0ea30afb87f04dbad6cda3
Author: Sergio Paracuellos <sergio.paracuellos@gmail.com>
Date:   Tue Mar 2 11:54:12 2021 +0100

    phy: ralink: phy-mt7621-pci: fix XTAL bitmask
    
    [ Upstream commit 982313c38f2f3793b6435ff50997ae96a2274f5a ]
    
    When this was rewriten to get mainlined and start to
    use 'linux/bitfield.h' headers, XTAL_MASK was wrong.
    It must mask three bits but only two were used. Hence
    properly fix it to make things work.
    
    Fixes: d87da32372a0 ("phy: ralink: Add PHY driver for MT7621 PCIe PHY")
    Signed-off-by: Sergio Paracuellos <sergio.paracuellos@gmail.com>
    Link: https://lore.kernel.org/r/20210302105412.16221-1-sergio.paracuellos@gmail.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bb476294d362e312b9de58e773753c5da708e376
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Wed Mar 10 17:38:36 2021 +0530

    phy: ti: j721e-wiz: Delete "clk_div_sel" clk provider during cleanup
    
    [ Upstream commit 7e52a39f1942b771213678c56002ce90a2f126d2 ]
    
    commit 091876cc355d ("phy: ti: j721e-wiz: Add support for WIZ module
    present in TI J721E SoC") modeled both MUX clocks and DIVIDER clocks in
    wiz. However during cleanup, it removed only the MUX clock provider.
    Remove the DIVIDER clock provider here.
    
    Fixes: 091876cc355d ("phy: ti: j721e-wiz: Add support for WIZ module present in TI J721E SoC")
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Link: https://lore.kernel.org/r/20210310120840.16447-3-kishon@ti.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 15fe1e9adbbdab40272aa582f8a676156b263f54
Author: Enric Balletbo i Serra <enric.balletbo@collabora.com>
Date:   Wed Mar 3 10:10:54 2021 +0100

    soc: mediatek: pm-domains: Fix missing error code in scpsys_add_subdomain()
    
    [ Upstream commit 9950588a45241b0efcfc312ab0e414260ceca709 ]
    
    Adding one power domain in scpsys_add_subdomain is missing to assign an
    error code when it fails. Fix that assigning an error code to 'ret',
    this also fixes the follwowing smatch warning.
    
      drivers/soc/mediatek/mtk-pm-domains.c:492 scpsys_add_subdomain() warn: missing error code 'ret'
    
    Fixes: dd65030295e2 ("soc: mediatek: pm-domains: Don't print an error if child domain is deferred")
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Link: https://lore.kernel.org/r/20210303091054.796975-1-enric.balletbo@collabora.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 75ec82fe259b535abff60622ad6664899abea360
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Tue Mar 9 10:48:16 2021 +0000

    soundwire: bus: Fix device found flag correctly
    
    [ Upstream commit f03690f4f6992225d05dbd1171212e5be5a370dd ]
    
    found flag is used to indicate SoundWire devices that are
    both enumerated on the bus and available in the device list.
    However this flag is not reset correctly after one iteration,
    This could miss some of the devices that are enumerated on the
    bus but not in device list. So reset this correctly to fix this issue!
    
    Fixes: d52d7a1be02c ("soundwire: Add Slave status handling helpers")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210309104816.20350-1-srinivas.kandagatla@linaro.org
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a35e98e0340e8cd1c311efb9d6b63eeae9bbbd1f
Author: Jonathan Marek <jonathan@marek.ca>
Date:   Mon Mar 29 15:00:48 2021 +0300

    arm64: dts: qcom: sm8250: fix display nodes
    
    [ Upstream commit 888771a9d04ff7bf96e5ecad37969002c88a95d7 ]
    
    Apply these fixes to the newly added sm8250 display ndoes
     - Remove "notused" interconnect (which apparently was blindly copied from
       my old patches)
     - Use dispcc node example from dt-bindings, removing clocks which aren't
       documented or used by the driver and fixing the region size.
    
    Fixes: 7c1dffd471b1 ("arm64: dts: qcom: sm8250.dtsi: add display system nodes")
    Signed-off-by: Jonathan Marek <jonathan@marek.ca>
    [DB: compatibility changes split into separate patch]
    Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Link: https://lore.kernel.org/r/20210329120051.3401567-2-dmitry.baryshkov@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c6f8e0dc8da1cd78d640dee392071cc2326ec1b2
Author: Pan Bian <bianpan2016@163.com>
Date:   Thu Jan 21 03:49:07 2021 -0800

    bus: qcom: Put child node before return
    
    [ Upstream commit ac6ad7c2a862d682bb584a4bc904d89fa7721af8 ]
    
    Put child node before return to fix potential reference count leak.
    Generally, the reference count of child is incremented and decremented
    automatically in the macro for_each_available_child_of_node() and should
    be decremented manually if the loop is broken in loop body.
    
    Reviewed-by: Linus Walleij <linus.walleij@linaro.org>
    Fixes: 335a12754808 ("bus: qcom: add EBI2 driver")
    Signed-off-by: Pan Bian <bianpan2016@163.com>
    Link: https://lore.kernel.org/r/20210121114907.109267-1-bianpan2016@163.com
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 91080d1baf4cb6d7117890837c1af6157b7c7482
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Thu Mar 18 14:18:48 2021 +0800

    arm64: dts: mt8173: fix wrong power-domain phandle of pmic
    
    [ Upstream commit 4db2b9af3ee92e6c51c6a9a5dc2748e4bc1800f9 ]
    
    Due to power domain controller is added, the power domain's
    phanle is also changed from 'scpsys' to 'spm', but forget to
    modify pmic node's
    
    Fixes: 8b6562644df9 ("arm64: dts: mediatek: Add mt8173 power domain controller")
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Reviewed-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Link: https://lore.kernel.org/r/1616048328-13579-1-git-send-email-chunfeng.yun@mediatek.com
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3a2d02e9778d622c32323fd4a35db911d55f6fdb
Author: Hsin-Yi Wang <hsinyi@chromium.org>
Date:   Wed Mar 24 15:08:42 2021 +0800

    arm64: dts: mt8183: Add gce client reg for display subcomponents
    
    [ Upstream commit b7a8f50a1437164607f73831075c06120aa1f3b3 ]
    
    Add mediatek,gce-client-reg for mmsys, ccorr, aal, gamma, dither.
    
    Fixes: 91f9c963ce79 ("arm64: dts: mt8183: Add display nodes for MT8183")
    Signed-off-by: Hsin-Yi Wang <hsinyi@chromium.org>
    Tested-by: Enric Balletbo i Serra <enric.balletbo@collabora.com>
    Link: https://lore.kernel.org/r/20210324070842.1037233-1-hsinyi@chromium.org
    Signed-off-by: Matthias Brugger <matthias.bgg@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f56cf3fac1a1beef0c11e18d98a8a9ec73178789
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Thu Mar 25 13:19:49 2021 +0900

    arm64: dts: renesas: r8a779a0: Fix PMU interrupt
    
    [ Upstream commit bbbf6db5a0b56199702bb225132831bced2eee41 ]
    
    Should use PPI No.7 for the PMU. Otherwise, the perf command didn't
    show any information.
    
    Fixes: 834c310f5418 ("arm64: dts: renesas: Add Renesas R8A779A0 SoC support")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/20210325041949.925777-1-yoshihiro.shimoda.uh@renesas.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a08799d3e8c8088640956237c183f83463c39668
Author: Michael Walle <michael@walle.cc>
Date:   Wed Mar 3 16:57:35 2021 +0100

    mtd: require write permissions for locking and badblock ioctls
    
    [ Upstream commit 1e97743fd180981bef5f01402342bb54bf1c6366 ]
    
    MEMLOCK, MEMUNLOCK and OTPLOCK modify protection bits. Thus require
    write permission. Depending on the hardware MEMLOCK might even be
    write-once, e.g. for SPI-NOR flashes with their WP# tied to GND. OTPLOCK
    is always write-once.
    
    MEMSETBADBLOCK modifies the bad block table.
    
    Fixes: f7e6b19bc764 ("mtd: properly check all write ioctls for permissions")
    Signed-off-by: Michael Walle <michael@walle.cc>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Acked-by: Rafał Miłecki <rafal@milecki.pl>
    Acked-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210303155735.25887-1-michael@walle.cc
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7f198e5b361fc146615b1d96af6d51c54393eca
Author: dillon min <dillon.minfei@gmail.com>
Date:   Fri Mar 26 19:15:02 2021 +0800

    dt-bindings: serial: stm32: Use 'type: object' instead of false for 'additionalProperties'
    
    [ Upstream commit 9f299d3264c67a892af87337dbaa0bdd20830c0c ]
    
    To use additional properties 'bluetooth' on serial, need replace false with
    'type: object' for 'additionalProperties' to make it as a node, else will
    run into dtbs_check warnings.
    
    'arch/arm/boot/dts/stm32h750i-art-pi.dt.yaml: serial@40004800:
    'bluetooth' does not match any of the regexes: 'pinctrl-[0-9]+'
    
    Fixes: af1c2d81695b ("dt-bindings: serial: Convert STM32 UART to json-schema")
    Reported-by: kernel test robot <lkp@intel.com>
    Tested-by: Valentin Caron <valentin.caron@foss.st.com>
    Signed-off-by: dillon min <dillon.minfei@gmail.com>
    Reviewed-by: Rob Herring <robh@kernel.org>
    Link: https://lore.kernel.org/r/1616757302-7889-8-git-send-email-dillon.minfei@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05933809ef465f2eec19daf4397c6a2c8a31ffc0
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Mar 27 08:38:53 2021 +0100

    usb: gadget: s3c: Fix the error handling path in 's3c2410_udc_probe()'
    
    [ Upstream commit e5242861ec6a0bce25b4cd10af0fc8a508fd067d ]
    
    Some 'clk_prepare_enable()' and 'clk_get()' must be undone in the error
    handling path of the probe function, as already done in the remove
    function.
    
    Fixes: 3fc154b6b813 ("USB Gadget driver for Samsung s3c2410 ARM SoC")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Link: https://lore.kernel.org/r/2bee52e4ce968f48b4c32545cf8f3b2ab825ba82.1616830026.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4dcc2f1542e4f6f360d4f08029cde44cc90bd941
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Sat Mar 27 08:36:50 2021 +0100

    usb: gadget: s3c: Fix incorrect resources releasing
    
    [ Upstream commit 42067ccd9eb2077979ac3ce8b7b95c694bd09e14 ]
    
    Since commit 188db4435ac6 ("usb: gadget: s3c: use platform resources"),
    'request_mem_region()' and 'ioremap()' are no more used, so they don't need
    to be undone in the error handling path of the probe and in the remove
    function.
    
    Remove these calls and the unneeded 'rsrc_start' and 'rsrc_len' global
    variables.
    
    Fixes: 188db4435ac6 ("usb: gadget: s3c: use platform resources")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Link: https://lore.kernel.org/r/b317638464f188159bd8eea44427dd359e480625.1616830026.git.christophe.jaillet@wanadoo.fr
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bc164215cb3723730816e3d3d3d3ef794f0afbfe
Author: Fabian Vogt <fabian@ritter-vogt.de>
Date:   Wed Mar 24 15:11:15 2021 +0100

    fotg210-udc: Complete OUT requests on short packets
    
    [ Upstream commit 75bb93be0027123b5db6cbcce89eb62f0f6b3c5b ]
    
    A short packet indicates the end of a transfer and marks the request as
    complete.
    
    Fixes: b84a8dee23fd ("usb: gadget: add Faraday fotg210_udc driver")
    Signed-off-by: Fabian Vogt <fabian@ritter-vogt.de>
    Link: https://lore.kernel.org/r/20210324141115.9384-8-fabian@ritter-vogt.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 456b9a9acf76dbe9f738e1b737c79f0b96737b68
Author: Fabian Vogt <fabian@ritter-vogt.de>
Date:   Wed Mar 24 15:11:14 2021 +0100

    fotg210-udc: Don't DMA more than the buffer can take
    
    [ Upstream commit 3e7c2510bdfe89a9ec223dd7acd6bfc8bb1cbeb6 ]
    
    Before this, it wrote as much as available into the buffer, even if it
    didn't fit.
    
    Fixes: b84a8dee23fd ("usb: gadget: add Faraday fotg210_udc driver")
    Signed-off-by: Fabian Vogt <fabian@ritter-vogt.de>
    Link: https://lore.kernel.org/r/20210324141115.9384-7-fabian@ritter-vogt.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2e1c5f9f3203a216ec83885bb51e09f1618096df
Author: Fabian Vogt <fabian@ritter-vogt.de>
Date:   Wed Mar 24 15:11:12 2021 +0100

    fotg210-udc: Mask GRP2 interrupts we don't handle
    
    [ Upstream commit 9aee3a23d6455200702f3a57e731fa11e8408667 ]
    
    Currently it leaves unhandled interrupts unmasked, but those are never
    acked. In the case of a "device idle" interrupt, this leads to an
    effectively frozen system until plugging it in.
    
    Fixes: b84a8dee23fd ("usb: gadget: add Faraday fotg210_udc driver")
    Signed-off-by: Fabian Vogt <fabian@ritter-vogt.de>
    Link: https://lore.kernel.org/r/20210324141115.9384-5-fabian@ritter-vogt.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 58fe85af6922994517c63476bdcdd964162b4809
Author: Fabian Vogt <fabian@ritter-vogt.de>
Date:   Wed Mar 24 15:11:11 2021 +0100

    fotg210-udc: Remove a dubious condition leading to fotg210_done
    
    [ Upstream commit c7f755b243494d6043aadcd9a2989cb157958b95 ]
    
    When the EP0 IN request was not completed but less than a packet sent,
    it would complete the request successfully. That doesn't make sense
    and can't really happen as fotg210_start_dma always sends
    min(length, maxpkt) bytes.
    
    Fixes: b84a8dee23fd ("usb: gadget: add Faraday fotg210_udc driver")
    Signed-off-by: Fabian Vogt <fabian@ritter-vogt.de>
    Link: https://lore.kernel.org/r/20210324141115.9384-4-fabian@ritter-vogt.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 170f02ded842a906e83068a3b8e43070cd00023c
Author: Fabian Vogt <fabian@ritter-vogt.de>
Date:   Wed Mar 24 15:11:10 2021 +0100

    fotg210-udc: Fix EP0 IN requests bigger than two packets
    
    [ Upstream commit 078ba935651e149c92c41161e0322e3372cc2705 ]
    
    For a 134 Byte packet, it sends the first two 64 Byte packets just fine,
    but then notice that less than a packet is remaining and call fotg210_done
    without actually sending the rest.
    
    Fixes: b84a8dee23fd ("usb: gadget: add Faraday fotg210_udc driver")
    Signed-off-by: Fabian Vogt <fabian@ritter-vogt.de>
    Link: https://lore.kernel.org/r/20210324141115.9384-3-fabian@ritter-vogt.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84d38ee7cc78bea9d55a43e3675ca62dce60e9d6
Author: Fabian Vogt <fabian@ritter-vogt.de>
Date:   Wed Mar 24 15:11:09 2021 +0100

    fotg210-udc: Fix DMA on EP0 for length > max packet size
    
    [ Upstream commit 755915fc28edfc608fa89a163014acb2f31c1e19 ]
    
    For a 75 Byte request, it would send the first 64 separately, then detect
    that the remaining 11 Byte fit into a single DMA, but due to this bug set
    the length to the original 75 Bytes. This leads to a DMA failure (which is
    ignored...) and the request completes without the remaining bytes having
    been sent.
    
    Fixes: b84a8dee23fd ("usb: gadget: add Faraday fotg210_udc driver")
    Signed-off-by: Fabian Vogt <fabian@ritter-vogt.de>
    Link: https://lore.kernel.org/r/20210324141115.9384-2-fabian@ritter-vogt.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ea500ce6f7c9106e4a561d28e69215f3d451818
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Thu Mar 18 23:40:00 2021 -0400

    crypto: qat - ADF_STATUS_PF_RUNNING should be set after adf_dev_init
    
    [ Upstream commit 8609f5cfdc872fc3a462efa6a3eca5cb1e2f6446 ]
    
    ADF_STATUS_PF_RUNNING is (only) used and checked by adf_vf2pf_shutdown()
    before calling adf_iov_putmsg()->mutex_lock(vf2pf_lock), however the
    vf2pf_lock is initialized in adf_dev_init(), which can fail and when it
    fail, the vf2pf_lock is either not initialized or destroyed, a subsequent
    use of vf2pf_lock will cause issue.
    To fix this issue, only set this flag if adf_dev_init() returns 0.
    
    [    7.178404] BUG: KASAN: user-memory-access in __mutex_lock.isra.0+0x1ac/0x7c0
    [    7.180345] Call Trace:
    [    7.182576]  mutex_lock+0xc9/0xd0
    [    7.183257]  adf_iov_putmsg+0x118/0x1a0 [intel_qat]
    [    7.183541]  adf_vf2pf_shutdown+0x4d/0x7b [intel_qat]
    [    7.183834]  adf_dev_shutdown+0x172/0x2b0 [intel_qat]
    [    7.184127]  adf_probe+0x5e9/0x600 [qat_dh895xccvf]
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Fixes: 25c6ffb249f6 ("crypto: qat - check if PF is running")
    Acked-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a07e0ff34400909723d5ec8dbef154d95e48ed9d
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Thu Mar 18 23:39:59 2021 -0400

    crypto: qat - don't release uninitialized resources
    
    [ Upstream commit b66accaab3791e15ac99c92f236d0d3a6d5bd64e ]
    
    adf_vf_isr_resource_alloc() is not unwinding correctly when error
    happens and it want to release uninitialized resources.
    To fix this, only release initialized resources.
    
    [    1.792845] Trying to free already-free IRQ 11
    [    1.793091] WARNING: CPU: 0 PID: 182 at kernel/irq/manage.c:1821 free_irq+0x202/0x380
    [    1.801340] Call Trace:
    [    1.801477]  adf_vf_isr_resource_free+0x32/0xb0 [intel_qat]
    [    1.801785]  adf_vf_isr_resource_alloc+0x14d/0x150 [intel_qat]
    [    1.802105]  adf_dev_init+0xba/0x140 [intel_qat]
    
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Fixes: dd0f368398ea ("crypto: qat - Add qat dh895xcc VF driver")
    Acked-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b655b45919d7cf414cd9b051d8d36566cf647ddc
Author: Rijo Thomas <Rijo-john.Thomas@amd.com>
Date:   Mon Mar 15 13:55:29 2021 +0530

    crypto: ccp - fix command queuing to TEE ring buffer
    
    [ Upstream commit 00aa6e65aa04e500a11a2c91e92a11c37b9e234d ]
    
    Multiple threads or clients can submit a command to the TEE ring
    buffer. This patch helps to synchronize command submission to the
    ring.
    
    One thread shall write a command to a TEE ring buffer entry only if:
    
     - Trusted OS has notified that the TEE command for the given entry
       has been processed and driver has copied the TEE response into
       client buffer.
    
     - The command entry is empty and can be written into.
    
    After a command has been written to the TEE ring buffer, the global
    wptr (mutex protected) shall be incremented for use by next client.
    
    If PSP became unresponsive while processing TEE request from a
    client, then further command submission to queue will be disabled.
    
    Fixes: 33960acccfbd (crypto: ccp - add TEE support for Raven Ridge)
    Reviewed-by: Devaraj Rangasamy <Devaraj.Rangasamy@amd.com>
    Signed-off-by: Rijo Thomas <Rijo-john.Thomas@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01d6b0abcc662122d9701b2d7b137600564de64c
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Mar 23 17:36:26 2021 +0200

    usb: gadget: pch_udc: Provide a GPIO line used on Intel Minnowboard (v1)
    
    [ Upstream commit 049d3db625a652e23488db88b6104de4d5b62f16 ]
    
    Intel Minnowboard (v1) uses SCH GPIO line SUS7 (i.e. 12)
    for VBUS sense. Provide a DMI based quirk to have it's being used.
    
    Fixes: e20849a8c883 ("usb: gadget: pch_udc: Convert to use GPIO descriptors")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210323153626.54908-7-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 83349010475745b720ed6377a9d494f8ca5d9780
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Mar 23 17:36:25 2021 +0200

    usb: gadget: pch_udc: Initialize device pointer before use
    
    [ Upstream commit 971d080212be4ce2b91047d25a657f46d3e39635 ]
    
    During conversion to use GPIO descriptors the device pointer,
    which is applied to devm_gpiod_get(), is not yet initialized.
    
    Move initialization in the ->probe() in order to have it set before use.
    
    Fixes: e20849a8c883 ("usb: gadget: pch_udc: Convert to use GPIO descriptors")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210323153626.54908-6-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 536e5a42e6cde6d0d1cea6f50e462ff07991050f
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Mar 23 17:36:22 2021 +0200

    usb: gadget: pch_udc: Check for DMA mapping error
    
    [ Upstream commit 4a28d77e359009b846951b06f7c0d8eec8dce298 ]
    
    DMA mapping might fail, we have to check it with dma_mapping_error().
    Otherwise DMA-API is not happy:
    
      DMA-API: pch_udc 0000:02:02.4: device driver failed to check map error[device address=0x00000000027ee678] [size=64 bytes] [mapped as single]
    
    Fixes: abab0c67c061 ("usb: pch_udc: Fixed issue which does not work with g_serial")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210323153626.54908-3-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1e537380153b5c4f36941cd2c078bfd92e0fd2a
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Mar 23 17:36:21 2021 +0200

    usb: gadget: pch_udc: Check if driver is present before calling ->setup()
    
    [ Upstream commit fbdbbe6d3ee502b3bdeb4f255196bb45003614be ]
    
    Since we have a separate routine for VBUS sense, the interrupt may occur
    before gadget driver is present. Hence, ->setup() call may oops the kernel:
    
    [   55.245843] BUG: kernel NULL pointer dereference, address: 00000010
    ...
    [   55.245843] EIP: pch_udc_isr.cold+0x162/0x33f
    ...
    [   55.245843]  <IRQ>
    [   55.245843]  ? pch_udc_svc_data_out+0x160/0x160
    
    Check if driver is present before calling ->setup().
    
    Fixes: f646cf94520e ("USB device driver of Topcliff PCH")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210323153626.54908-2-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0933de7be64ef03bf747c7beb92367b14a19a10d
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Mar 23 17:36:20 2021 +0200

    usb: gadget: pch_udc: Replace cpu_to_le32() by lower_32_bits()
    
    [ Upstream commit 91356fed6afd1c83bf0d3df1fc336d54e38f0458 ]
    
    Either way ~0 will be in the correct byte order, hence
    replace cpu_to_le32() by lower_32_bits(). Moreover,
    it makes sparse happy, otherwise it complains:
    
    .../pch_udc.c:1813:27: warning: incorrect type in assignment (different base types)
    .../pch_udc.c:1813:27:    expected unsigned int [usertype] dataptr
    .../pch_udc.c:1813:27:    got restricted __le32 [usertype]
    
    Fixes: f646cf94520e ("USB device driver of Topcliff PCH")
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210323153626.54908-1-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0dadbf7ad2cb736084a3fb194ab40fe531dc7f0d
Author: Rasmus Villemoes <linux@rasmusvillemoes.dk>
Date:   Fri Mar 12 11:30:26 2021 +0100

    devtmpfs: fix placement of complete() call
    
    [ Upstream commit 38f087de8947700d3b06d3d1594490e0f611c5d1 ]
    
    Calling complete() from within the __init function is wrong -
    theoretically, the init process could proceed all the way to freeing
    the init mem before the devtmpfsd thread gets to execute the return
    instruction in devtmpfs_setup().
    
    In practice, it seems to be harmless as gcc inlines devtmpfs_setup()
    into devtmpfsd(). So the calls of the __init functions init_chdir()
    etc. actually happen from devtmpfs_setup(), but the __ref on that one
    silences modpost (it's all right, because those calls happen before
    the complete()). But it does make the __init annotation of the setup
    function moot, which we'll fix in a subsequent patch.
    
    Fixes: bcbacc4909f1 ("devtmpfs: refactor devtmpfsd()")
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Link: https://lore.kernel.org/r/20210312103027.2701413-1-linux@rasmusvillemoes.dk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49ac0af94139332062747bd08587ecf772e5250b
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Sat Mar 20 18:19:15 2021 +0300

    usb: host: ehci-tegra: Select USB_GADGET Kconfig option
    
    [ Upstream commit 0b9828763aeafa5e527b9d98b8789bdb34937fbc ]
    
    Select USB_GADGET Kconfig option in order to fix build failure which
    happens because ChipIdea driver has a build dependency on both USB_GADGET
    and USB_EHCI_HCD, while USB_EHCI_TEGRA force-selects the ChipIdea driver
    without taking into account the tristate USB_GADGET dependency. It's not
    possible to do anything about the cyclic dependency of the Kconfig
    options, but USB_EHCI_TEGRA is now a deprecated option that isn't used
    by defconfigs and USB_GADGET is wanted on Tegra by default, hence it's
    okay to have a bit clunky workaround for it.
    
    Fixes: c3590c7656fb ("usb: host: ehci-tegra: Remove the driver")
    Reported-by: kernel test robot <lkp@intel.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Link: https://lore.kernel.org/r/20210320151915.7566-2-digetx@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5a3672a6edcbaf7fc3d79d0f1d518c72868da854
Author: Otavio Pontes <otavio.pontes@intel.com>
Date:   Fri Mar 19 09:55:15 2021 -0700

    x86/microcode: Check for offline CPUs before requesting new microcode
    
    [ Upstream commit 7189b3c11903667808029ec9766a6e96de5012a5 ]
    
    Currently, the late microcode loading mechanism checks whether any CPUs
    are offlined, and, in such a case, aborts the load attempt.
    
    However, this must be done before the kernel caches new microcode from
    the filesystem. Otherwise, when offlined CPUs are onlined later, those
    cores are going to be updated through the CPU hotplug notifier callback
    with the new microcode, while CPUs previously onine will continue to run
    with the older microcode.
    
    For example:
    
    Turn off one core (2 threads):
    
      echo 0 > /sys/devices/system/cpu/cpu3/online
      echo 0 > /sys/devices/system/cpu/cpu1/online
    
    Install the ucode fails because a primary SMT thread is offline:
    
      cp intel-ucode/06-8e-09 /lib/firmware/intel-ucode/
      echo 1 > /sys/devices/system/cpu/microcode/reload
      bash: echo: write error: Invalid argument
    
    Turn the core back on
    
      echo 1 > /sys/devices/system/cpu/cpu3/online
      echo 1 > /sys/devices/system/cpu/cpu1/online
      cat /proc/cpuinfo |grep microcode
      microcode : 0x30
      microcode : 0xde
      microcode : 0x30
      microcode : 0xde
    
    The rationale for why the update is aborted when at least one primary
    thread is offline is because even if that thread is soft-offlined
    and idle, it will still have to participate in broadcasted MCE's
    synchronization dance or enter SMM, and in both examples it will execute
    instructions so it better have the same microcode revision as the other
    cores.
    
     [ bp: Heavily edit and extend commit message with the reasoning behind all
       this. ]
    
    Fixes: 30ec26da9967 ("x86/microcode: Do not upload microcode if CPUs are offline")
    Signed-off-by: Otavio Pontes <otavio.pontes@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Tony Luck <tony.luck@intel.com>
    Acked-by: Ashok Raj <ashok.raj@intel.com>
    Link: https://lkml.kernel.org/r/20210319165515.9240-2-otavio.pontes@intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7907a6d2d3653cfcfb38c879591bce82405faca3
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Mar 22 18:06:49 2021 +0300

    staging: qlge: fix an error code in probe()
    
    [ Upstream commit f7bff017741d98567265ed6a6449311a51810fb6 ]
    
    If alloc_etherdev_mq() fails then return -ENOMEM instead of success.
    The "err = 0;" triggers an unused assignment now so remove that as
    well.
    
    Fixes: 953b94009377 ("staging: qlge: Initialize devlink health dump framework")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/YFiyicHI189PXrha@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9dbd136aff69d3e197e733af56e57b1aa8e917ab
Author: Andrea Parri (Microsoft) <parri.andrea@gmail.com>
Date:   Mon Mar 1 20:13:48 2021 +0100

    Drivers: hv: vmbus: Drop error message when 'No request id available'
    
    [ Upstream commit 0c85c54bf7faeb80c6b76901ed77d93acef0207d ]
    
    Running out of request IDs on a channel essentially produces the same
    effect as running out of space in the ring buffer, in that -EAGAIN is
    returned.  The error message in hv_ringbuffer_write() should either be
    dropped (since we don't output a message when the ring buffer is full)
    or be made conditional/debug-only.
    
    Suggested-by: Michael Kelley <mikelley@microsoft.com>
    Signed-off-by: Andrea Parri (Microsoft) <parri.andrea@gmail.com>
    Fixes: e8b7db38449ac ("Drivers: hv: vmbus: Add vmbus_requestor data structure for VMBus hardening")
    Link: https://lore.kernel.org/r/20210301191348.196485-1-parri.andrea@gmail.com
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7bd798abad613855f80f7a205a60ccad17ad9487
Author: Alain Volmat <alain.volmat@foss.st.com>
Date:   Thu Mar 18 08:24:50 2021 +0100

    spi: stm32: Fix use-after-free on unbind
    
    [ Upstream commit 79c6246ae8793448c05da86a4c82298eed8549b0 ]
    
    stm32_spi_remove() accesses the driver's private data after calling
    spi_unregister_master() even though that function releases the last
    reference on the spi_master and thereby frees the private data.
    
    Fix by switching over to the new devm_spi_alloc_master() helper which
    keeps the private data accessible until the driver has unbound.
    
    Fixes: 8d559a64f00b ("spi: stm32: drop devres version of spi_register_master")
    
    Reported-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Alain Volmat <alain.volmat@foss.st.com>
    Link: https://lore.kernel.org/r/1616052290-10887-1-git-send-email-alain.volmat@foss.st.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a9c774f003cfc300b97436c64047a6f6d4be207
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Mar 9 23:27:26 2021 -0800

    crypto: arm/blake2s - fix for big endian
    
    [ Upstream commit d2f2516a3882c0c6463e33c9b112b39bd483f821 ]
    
    The new ARM BLAKE2s code doesn't work correctly (fails the self-tests)
    in big endian kernel builds because it doesn't swap the endianness of
    the message words when loading them.  Fix this.
    
    Fixes: 5172d322d34c ("crypto: arm/blake2s - add ARM scalar optimized BLAKE2s")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Ard Biesheuvel <ardb@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9cd2bd6874b4c7a01629c971f08f8f2972b04038
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Mar 4 09:01:55 2021 -0800

    selftests/x86: Add a missing .note.GNU-stack section to thunks_32.S
    
    [ Upstream commit f706bb59204ba1c47e896b456c97977fc97b7964 ]
    
    test_syscall_vdso_32 ended up with an executable stacks because the asm
    was missing the annotation that says that it is modern and doesn't need
    an executable stack. Add the annotation.
    
    This was missed in commit aeaaf005da1d ("selftests/x86: Add missing
    .note.GNU-stack sections").
    
    Fixes: aeaaf005da1d ("selftests/x86: Add missing .note.GNU-stack sections")
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Link: https://lkml.kernel.org/r/487ed5348a43c031b816fa7e9efedb75dc324299.1614877299.git.luto@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6c3f0c46ca4876fc985ffe32f26801b5fa91109b
Author: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
Date:   Fri Mar 12 18:47:35 2021 +0100

    arm64: dts: renesas: r8a77980: Fix vin4-7 endpoint binding
    
    [ Upstream commit c8aebc1346522d3569690867ce3996642ad52e01 ]
    
    This fixes the bindings in media framework:
    The CSI40 is endpoint number 2
    The CSI41 is endpoint number 3
    
    Signed-off-by: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
    Reviewed-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Signed-off-by: Niklas Söderlund <niklas.soderlund+renesas@ragnatech.se>
    Link: https://lore.kernel.org/r/20210312174735.2118212-1-niklas.soderlund+renesas@ragnatech.se
    Fixes: 3182aa4e0bf4d0ee ("arm64: dts: renesas: r8a77980: add CSI2/VIN support")
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 01299660164ac9493efcc3964715957c7a03450c
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Mar 12 10:42:52 2021 +0300

    regulator: bd9576: Fix return from bd957x_probe()
    
    [ Upstream commit 320fcd6bbd2b500923db518902c2c640242d2b50 ]
    
    The probe() function returns an uninitialized variable in the success
    path.  There is no need for the "err" variable at all, just delete it.
    
    Fixes: b014e9fae7e7 ("regulator: Support ROHM BD9576MUF and BD9573MUF")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
    Link: https://lore.kernel.org/r/YEsbfLJfEWtnRpoU@mwanda
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 28f00f0213925bc8ee7aa7aeb9f3afa189a8ce11
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Fri Mar 12 12:01:20 2021 +0100

    arm64: dts: broadcom: bcm4908: set Asus GT-AC5300 port 7 PHY mode
    
    [ Upstream commit 5ccb9f9cf05bbd729430c6d6d30d40c96a15c56a ]
    
    Port 7 is connected to the external BCM53134S switch using RGMII.
    
    Fixes: 527a3ac9bdf8 ("arm64: dts: broadcom: bcm4908: describe internal switch")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1251ef565c1e31541019248a95eea5ffd5baa616
Author: Antonio Borneo <antonio.borneo@foss.st.com>
Date:   Fri Mar 12 11:34:46 2021 +0100

    spi: stm32: drop devres version of spi_register_master
    
    [ Upstream commit 8d559a64f00b59af9cc02b803ff52f6e6880a651 ]
    
    A call to spi_unregister_master() triggers calling remove()
    for all the spi devices binded to the spi master.
    
    Some spi device driver requires to "talk" with the spi device
    during the remove(), e.g.:
    - a LCD panel like drivers/gpu/drm/panel/panel-lg-lg4573.c
      will turn off the backlighting sending a command over spi.
    This implies that the spi master must be fully functional when
    spi_unregister_master() is called, either if it is called
    explicitly in the master's remove() code or implicitly by the
    devres framework.
    
    Devres calls devres_release_all() to release all the resources
    "after" the remove() of the spi master driver (check code of
    __device_release_driver() in drivers/base/dd.c).
    If the spi master driver has an empty remove() then there would
    be no issue; the devres_release_all() will release everything
    in reverse order w.r.t. probe().
    But if code in spi master driver remove() disables the spi or
    makes it not functional (like in this spi-stm32), then devres
    cannot be used safely for unregistering the spi master and the
    binded spi devices.
    
    Replace devm_spi_register_master() with spi_register_master()
    and add spi_unregister_master() as first action in remove().
    
    Fixes: dcbe0d84dfa5 ("spi: add driver for STM32 SPI controller")
    
    Signed-off-by: Antonio Borneo <antonio.borneo@foss.st.com>
    Signed-off-by: Alain Volmat <alain.volmat@foss.st.com>
    Link: https://lore.kernel.org/r/1615545286-5395-1-git-send-email-alain.volmat@foss.st.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6516cb852d704ff8d615de1f93cd443a99736c3d
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Mar 2 16:34:46 2021 +0000

    crypto: sun8i-ss - Fix memory leak of object d when dma_iv fails to map
    
    [ Upstream commit 98b5ef3e97b16eaeeedb936f8bda3594ff84a70e ]
    
    In the case where the dma_iv mapping fails, the return error path leaks
    the memory allocated to object d.  Fix this by adding a new error return
    label and jumping to this to ensure d is free'd before the return.
    
    Addresses-Coverity: ("Resource leak")
    Fixes: ac2614d721de ("crypto: sun8i-ss - Add support for the PRNG")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Acked-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Tested-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Acked-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48eb34b16d105370799698aa19b43cfe1d48aed3
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Tue Mar 9 10:20:25 2021 +0000

    arm64: dts: qcom: db845c: fix correct powerdown pin for WSA881x
    
    [ Upstream commit c561740e7cfefaf3003a256f3a0cd9f8a069137c ]
    
    WSA881x powerdown pin is connected to GPIO1 not gpio2, so correct this.
    This was working so far due to a shift bug in gpio driver, however
    once that is fixed this will stop working, so fix this!
    
    Fixes: 89a32a4e769cc ("arm64: dts: qcom: db845c: add analog audio support")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20210309102025.28405-1-srinivas.kandagatla@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc474a743e6b7f064cfdadca79e605ce876dcbe1
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Wed Mar 3 11:31:06 2021 +0800

    arm64: dts: qcom: sm8350: fix number of pins in 'gpio-ranges'
    
    [ Upstream commit 790158579c8e663081e7d708d57e8ac6d69dca4e ]
    
    The last cell of 'gpio-ranges' should be number of GPIO pins, and in
    case of qcom platform it should match msm_pinctrl_soc_data.ngpio rather
    than msm_pinctrl_soc_data.ngpio - 1.
    
    This fixes the problem that when the last GPIO pin in the range is
    configured with the following call sequence, it always fails with
    -EPROBE_DEFER.
    
        pinctrl_gpio_set_config()
            pinctrl_get_device_gpio_range()
                pinctrl_match_gpio_range()
    
    Fixes: b7e8f433a673 ("arm64: dts: qcom: Add basic devicetree support for SM8350 SoC")
    Cc: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Link: https://lore.kernel.org/r/20210303033106.549-5-shawn.guo@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebcb732af08447851c3140d42324b754daefbdf0
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Wed Mar 3 11:31:05 2021 +0800

    arm64: dts: qcom: sm8250: fix number of pins in 'gpio-ranges'
    
    [ Upstream commit e526cb03e2aed42866a0919485a3d8ac130972cf ]
    
    The last cell of 'gpio-ranges' should be number of GPIO pins, and in
    case of qcom platform it should match msm_pinctrl_soc_data.ngpio rather
    than msm_pinctrl_soc_data.ngpio - 1.
    
    This fixes the problem that when the last GPIO pin in the range is
    configured with the following call sequence, it always fails with
    -EPROBE_DEFER.
    
        pinctrl_gpio_set_config()
            pinctrl_get_device_gpio_range()
                pinctrl_match_gpio_range()
    
    Fixes: 16951b490b20 ("arm64: dts: qcom: sm8250: Add TLMM pinctrl node")
    Cc: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Link: https://lore.kernel.org/r/20210303033106.549-4-shawn.guo@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b7499aafa0c22726b95c1aab23e5fbbc73b19ac
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Wed Mar 3 11:31:04 2021 +0800

    arm64: dts: qcom: sm8150: fix number of pins in 'gpio-ranges'
    
    [ Upstream commit de3abdf3d15c6e7f456e2de3f9da78f3a31414cc ]
    
    The last cell of 'gpio-ranges' should be number of GPIO pins, and in
    case of qcom platform it should match msm_pinctrl_soc_data.ngpio rather
    than msm_pinctrl_soc_data.ngpio - 1.
    
    This fixes the problem that when the last GPIO pin in the range is
    configured with the following call sequence, it always fails with
    -EPROBE_DEFER.
    
        pinctrl_gpio_set_config()
            pinctrl_get_device_gpio_range()
                pinctrl_match_gpio_range()
    
    Fixes: e13c6d144fa0 ("arm64: dts: qcom: sm8150: Add base dts file")
    Cc: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Link: https://lore.kernel.org/r/20210303033106.549-3-shawn.guo@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dea150cf1d401bc7b4c16dfb665d18130a8ea28c
Author: Shawn Guo <shawn.guo@linaro.org>
Date:   Wed Mar 3 11:31:03 2021 +0800

    arm64: dts: qcom: sdm845: fix number of pins in 'gpio-ranges'
    
    [ Upstream commit 02058fc3839df65ff64de2a6b1c5de8c9fd705c1 ]
    
    The last cell of 'gpio-ranges' should be number of GPIO pins, and in
    case of qcom platform it should match msm_pinctrl_soc_data.ngpio rather
    than msm_pinctrl_soc_data.ngpio - 1.
    
    This fixes the problem that when the last GPIO pin in the range is
    configured with the following call sequence, it always fails with
    -EPROBE_DEFER.
    
        pinctrl_gpio_set_config()
            pinctrl_get_device_gpio_range()
                pinctrl_match_gpio_range()
    
    Fixes: bc2c806293c6 ("arm64: dts: qcom: sdm845: Add gpio-ranges to TLMM node")
    Cc: Evan Green <evgreen@chromium.org>
    Signed-off-by: Shawn Guo <shawn.guo@linaro.org>
    Link: https://lore.kernel.org/r/20210303033106.549-2-shawn.guo@linaro.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 34833cd1bcd539227896e1e10949c218f1a397da
Author: Douglas Anderson <dianders@chromium.org>
Date:   Thu Feb 18 14:55:09 2021 -0800

    arm64: dts: qcom: sc7180: Avoid glitching SPI CS at bootup on trogdor
    
    [ Upstream commit e440e30e26dd6b0424002ad0ddcbbcea783efd85 ]
    
    At boot time the following happens:
    1. Device core gets ready to probe our SPI driver.
    2. Device core applies SPI controller's "default" pinctrl.
    3. Device core calls the SPI driver's probe() function which will
       eventually setup the chip select GPIO as "unasserted".
    
    Thinking about the above, we can find:
    a) For SPI devices that the BIOS inits (Cr50 and EC), the BIOS would
       have had them configured as "GENI" pins and not as "GPIO" pins.
    b) It turns out that our BIOS also happens to init these pins as
       "output" (even though it doesn't need to since they're not muxed as
       GPIO) but leaves them at the default state of "low".
    c) As soon as we apply the "default" chip select it'll switch the
       function to GPIO and stop driving the chip select high (which is
       how "GENI" was driving it) and start driving it low.
    d) As of commit 9378f46040be ("UPSTREAM: spi: spi-geni-qcom: Use the
       new method of gpio CS control"), when the SPI core inits things it
       inits the GPIO to be "deasserted".  Prior to that commit the GPIO
       was left untouched until first use.
    e) When the first transaction happens we'll assert the chip select and
       then deassert it after done.
    
    So before the commit to change us to use gpio descriptors we used to
    have a _really long_ assertion of chip select before our first
    transaction (because it got pulled down and then the first "assert"
    was a no-op).  That wasn't great but (apparently) didn't cause any
    real harm.
    
    After the commit to change us to use gpio descriptors we end up
    glitching the chip select line during probe.  It would go low and then
    high with no data transferred.  The other side ought to be robust
    against this, but it certainly could cause some confusion.  It's known
    to at least cause an error message on the EC console and it's believed
    that, under certain timing conditions, it could be getting the EC into
    a confused state causing the EC driver to fail to probe.
    
    Let's fix things to avoid the glitch.  We'll add an extra pinctrl
    entry that sets the value of the pin to output high (CS deasserted)
    before doing anything else.  We'll do this in its own pinctrl node
    that comes before the normal pinctrl entries to ensure that the order
    is correct and that this gets applied before the mux change.
    
    This change is in the trogdor board file rather than in the SoC dtsi
    file because chip select polarity can be different depending on what's
    hooked up and it doesn't feel worth it to spam the SoC dtsi file with
    both options.  The board file would need to pick the right one anyway.
    
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Fixes: cfbb97fde694 ("arm64: dts: qcom: Switch sc7180-trogdor to control SPI CS via GPIO")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Link: https://lore.kernel.org/r/20210218145456.1.I1da01a075dd86e005152f993b2d5d82dd9686238@changeid
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 66ef17ff0bd987796e14e2cc7ec4318613f03e16
Author: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
Date:   Tue Feb 16 15:17:49 2021 +0530

    arm64: dts: qcom: sm8250: Fix timer interrupt to specify EL2 physical timer
    
    [ Upstream commit 29a3349543e4ce3fe4e2a761403cc629e3534c67 ]
    
    ARM architected timer interrupts DT property specifies EL2/HYP
    physical interrupt and not EL2/HYP virtual interrupt for the 4th
    interrupt property. As per interrupt documentation for SM8250 SoC,
    the EL2/HYP physical timer interrupt is 10 and EL2/HYP virtual timer
    interrupt is 12, so fix the 4th timer interrupt to be EL2 physical
    timer interrupt (10 in this case).
    
    Fixes: 60378f1a171e ("arm64: dts: qcom: sm8250: Add sm8250 dts file")
    Signed-off-by: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
    Link: https://lore.kernel.org/r/744e58f725d279eb2b049a7da42b0f09189f4054.1613468366.git.saiprakash.ranjan@codeaurora.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e688a3953bd1219c46ceffc7a2f289b6461eb305
Author: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
Date:   Tue Feb 16 15:17:48 2021 +0530

    arm64: dts: qcom: sm8350: Fix level triggered PMU interrupt polarity
    
    [ Upstream commit 794d3e309e44c99158d0166b1717f297341cf3ab ]
    
    As per interrupt documentation for SM8350 SoC, the polarity
    for level triggered PMU interrupt is low, fix this.
    
    Fixes: b7e8f433a673 ("arm64: dts: qcom: Add basic devicetree support for SM8350 SoC")
    Signed-off-by: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
    Link: https://lore.kernel.org/r/ca57409198477f7815e32a6a7467dcdc9b93dc4f.1613468366.git.saiprakash.ranjan@codeaurora.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3bfdadd3bdf2c78a2582a39325d05d2752a7312e
Author: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
Date:   Tue Feb 16 15:17:47 2021 +0530

    arm64: dts: qcom: sm8250: Fix level triggered PMU interrupt polarity
    
    [ Upstream commit 93138ef5ac923b10f81575d35dbcb83136cbfc40 ]
    
    As per interrupt documentation for SM8250 SoC, the polarity
    for level triggered PMU interrupt is low, fix this.
    
    Fixes: 60378f1a171e ("arm64: dts: qcom: sm8250: Add sm8250 dts file")
    Signed-off-by: Sai Prakash Ranjan <saiprakash.ranjan@codeaurora.org>
    Link: https://lore.kernel.org/r/96680a1c6488955c9eef7973c28026462b2a4ec0.1613468366.git.saiprakash.ranjan@codeaurora.org
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a3e81f0e31eb3e5999d01db47016bbbf4309b57e
Author: Matthias Kaehlcke <mka@chromium.org>
Date:   Thu Feb 25 10:33:36 2021 -0800

    arm64: dts: qcom: sc7180: trogdor: Fix trip point config of charger thermal zone
    
    [ Upstream commit 38f3267def6511171aef0f056ad172686903603f ]
    
    The trip point configuration of the charger thermal zone for trogdor
    is missing a node for the critical trip point. Add the missing node.
    
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Reviewed-by: Douglas Anderson <dianders@chromium.org>
    Fixes: bb06eb3607e9 ("arm64: qcom: sc7180: trogdor: Add ADC nodes and thermal zone for charger thermistor")
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Link: https://lore.kernel.org/r/20210225103330.v2.3.Ife7768b6b4765026c9d233ad4982da0e365ddbca@changeid
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 99c85d841529efa3ff958ab847263c1ebfc7328e
Author: Nuno Sa <nuno.sa@analog.com>
Date:   Thu Feb 18 12:40:36 2021 +0100

    iio: adis16480: fix pps mode sampling frequency math
    
    [ Upstream commit 0463e60f087069adf25a815cd88753946aca2565 ]
    
    When using PPS mode, the input clock needs to be scaled so that we have
    an IMU sample rate between (optimally) 4000 and 4250. After this, we can
    use the decimation filter to lower the sampling rate in order to get what
    the user wants. Optimally, the user sample rate is a multiple of both the
    IMU sample rate and the input clock. Hence, calculating the sync_scale
    dynamically gives us better chances of achieving a perfect/integer value
    for DEC_RATE. The math here is:
     1. lcm of the input clock and the desired output rate.
     2. get the highest multiple of the previous result lower than the adis
        max rate.
     3. The last result becomes the IMU sample rate. Use that to calculate
        SYNC_SCALE and DEC_RATE (to get the user output rate).
    
    Fixes: 326e2357553d3 ("iio: imu: adis16480: Add support for external clock")
    
    Signed-off-by: Nuno Sa <nuno.sa@analog.com>
    Link: https://lore.kernel.org/r/20210218114039.216091-2-nuno.sa@analog.com
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 69a2c2e02daaeb1c1377c029124c1fff5b3b6fa0
Author: Aswath Govindraju <a-govindraju@ti.com>
Date:   Fri Mar 5 11:11:04 2021 +0530

    arm64: dts: ti: k3-j721e-main: Update the speed modes supported and their itap delay values for MMCSD subsystems
    
    [ Upstream commit eb8f6194e8074d7b00642dd75cf04d13e1b218e4 ]
    
    According to latest errata of J721e [1], HS400 mode is not supported
    in MMCSD0 subsystem (i2024) and SDR104 mode is not supported in MMCSD1/2
    subsystems (i2090). Therefore, replace mmc-hs400-1_8v with mmc-hs200-1_8v
    in MMCSD0 subsystem and add a sdhci mask to disable SDR104 speed mode.
    
    Also, update the itap delay values for all the MMCSD subsystems according
    the latest J721e data sheet[2]
    
    [1] - https://www.ti.com/lit/er/sprz455/sprz455.pdf
    [2] - https://www.ti.com/lit/ds/symlink/tda4vm.pdf
    
    Fixes: cd48ce86a4d0 ("arm64: dts: ti: k3-j721e-common-proc-board: Add support for SD card UHS modes")
    Signed-off-by: Aswath Govindraju <a-govindraju@ti.com>
    Signed-off-by: Nishanth Menon <nm@ti.com>
    Reviewed-by: Kishon Vijay Abraham I <kishon@ti.com>
    Link: https://lore.kernel.org/r/20210305054104.10153-1-a-govindraju@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd264d03a71bd1e32e6595f18506f70cac8eddd5
Author: Valentin CARON - foss <valentin.caron@foss.st.com>
Date:   Thu Feb 11 12:07:03 2021 +0100

    ARM: dts: stm32: fix usart 2 & 3 pinconf to wake up with flow control
    
    [ Upstream commit a1429f3d3029b65cd4032f6218d5290911377ce4 ]
    
    Modify usart 2 & 3 pins to allow wake up from low power mode while the
    hardware flow control is activated. UART RTS pin need to stay configure
    in idle mode to receive characters in order to wake up.
    
    Fixes: 842ed898a757 ("ARM: dts: stm32: add usart2, usart3 and uart7 pins in stm32mp15-pinctrl")
    
    Signed-off-by: Valentin Caron <valentin.caron@foss.st.com>
    Signed-off-by: Alexandre Torgue <alexandre.torgue@foss.st.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c3d322609b49dba50475917c199835992e82e1ab
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Sun Mar 7 19:44:46 2021 -0800

    mtd: maps: fix error return code of physmap_flash_remove()
    
    [ Upstream commit 620b90d30c08684dc6ebee07c72755d997f9d1f6 ]
    
    When platform_get_drvdata() returns NULL to info, no error return code
    of physmap_flash_remove() is assigned.
    To fix this bug, err is assigned with -EINVAL in this case
    
    Fixes: 73566edf9b91 ("[MTD] Convert physmap to platform driver")
    Reported-by: TOTE Robot <oslab@tsinghua.edu.cn>
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210308034446.3052-1-baijiaju1990@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 915959ef8becc0970fc0f84eb390791cb8280865
Author: Baruch Siach <baruch@tkos.co.il>
Date:   Wed Mar 3 18:48:16 2021 +0200

    mtd: parsers: qcom: incompatible with spi-nor 4k sectors
    
    [ Upstream commit 8f62f59f83c3bc902af91c80732cfcd17e0d7069 ]
    
    Partition size and offset value are in block size units, which is the
    same as 'erasesize'. But when 4K sectors are enabled erasesize is set to
    4K. Bail out in that case.
    
    Fixes: 803eb124e1a64 ("mtd: parsers: Add Qcom SMEM parser")
    Reviewed-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Baruch Siach <baruch@tkos.co.il>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/0a2611f885b894274436ded3ca78bc0440fca74a.1614790096.git.baruch@tkos.co.il
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9380ee18b58ddd93bca97bfb6b6d1355dff6d796
Author: Miquel Raynal <miquel.raynal@bootlin.com>
Date:   Wed Mar 3 09:46:34 2021 +0100

    mtd: parsers: qcom: Fix error condition
    
    [ Upstream commit c95310e1b33eae9767af9698aa976d5301f37203 ]
    
    qcom_smem_get() does not return NULL, and even if it did, the NULL
    condition is usually not an error but a success condition and should
    not trigger an error trace.
    
    Let's replace IS_ERR_OR_NULL() by IS_ERR().
    
    This fixes the following smatch warning:
    drivers/mtd/parsers/qcomsmempart.c:109 parse_qcomsmem_part() warn: passing zero to 'PTR_ERR'
    
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Fixes: 803eb124e1a6 ("mtd: parsers: Add Qcom SMEM parser")
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210303084634.12796-1-miquel.raynal@bootlin.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 64151b20eba8337365b5ed05788d8d6de0d1f896
Author: David Bauer <mail@david-bauer.net>
Date:   Wed Feb 17 20:53:20 2021 +0100

    mtd: don't lock when recursively deleting partitions
    
    [ Upstream commit cb4543054c5c4fd33df960b41d7b483ebca8e786 ]
    
    When recursively deleting partitions, don't acquire the masters
    partition lock twice. Otherwise the process ends up in a deadlocked
    state.
    
    Fixes: 46b5889cc2c5 ("mtd: implement proper partition handling")
    Signed-off-by: David Bauer <mail@david-bauer.net>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210217195320.893253-1-mail@david-bauer.net
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4ef6c56a8af5ee979fa04e8db27d7d33c791639
Author: Manivannan Sadhasivam <mani@kernel.org>
Date:   Tue Mar 2 18:57:57 2021 +0530

    mtd: rawnand: qcom: Return actual error code instead of -ENODEV
    
    [ Upstream commit 55fbb9ba4f06cb6aff32daca1e1910173c13ec51 ]
    
    In qcom_probe_nand_devices() function, the error code returned by
    qcom_nand_host_init_and_register() is converted to -ENODEV in the case
    of failure. This poses issue if -EPROBE_DEFER is returned when the
    dependency is not available for a component like parser.
    
    So let's restructure the error handling logic a bit and return the
    actual error code in case of qcom_nand_host_init_and_register() failure.
    
    Fixes: c76b78d8ec05 ("mtd: nand: Qualcomm NAND controller driver")
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 82bcabce34d90f7ff7b1d9b8c8e3ccc5afbcd5eb
Author: Manivannan Sadhasivam <mani@kernel.org>
Date:   Tue Mar 2 18:57:56 2021 +0530

    mtd: Handle possible -EPROBE_DEFER from parse_mtd_partitions()
    
    [ Upstream commit 08608adb520e51403be7592c2214846fa440a23a ]
    
    There are chances that the parse_mtd_partitions() function will return
    -EPROBE_DEFER in mtd_device_parse_register(). This might happen when
    the dependency is not available for the parser. For instance, on SDX55
    the MTD_QCOMSMEM_PARTS parser depends on the QCOM_SMEM driver to parse
    the partitions defined in the shared memory region. With the current
    flow, the error returned from parse_mtd_partitions() will be discarded
    in favor of trying to add the fallback partition.
    
    This will prevent the driver to end up in probe deferred pool and the
    partitions won't be parsed even after the QCOM_SMEM driver is available.
    
    Fix this issue by bailing out of mtd_device_parse_register() when
    -EPROBE_DEFER error is returned from parse_mtd_partitions() function and
    propagate the error code to the driver core for probing later.
    
    Fixes: 5ac67ce36cfe ("mtd: move code adding (registering) partitions to the parse_mtd_partitions()")
    Signed-off-by: Manivannan Sadhasivam <manivannan.sadhasivam@linaro.org>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa897935b7506893f4fb14ec46929777f1facd1e
Author: Álvaro Fernández Rojas <noltari@gmail.com>
Date:   Wed Feb 24 09:02:10 2021 +0100

    mtd: rawnand: brcmnand: fix OOB R/W with Hamming ECC
    
    [ Upstream commit f5200c14242fb8fa4a9b93f7fd4064d237e58785 ]
    
    Hamming ECC doesn't cover the OOB data, so reading or writing OOB shall
    always be done without ECC enabled.
    This is a problem when adding JFFS2 cleanmarkers to erased blocks. If JFFS2
    clenmarkers are added to the OOB with ECC enabled, OOB bytes will be changed
    from ff ff ff to 00 00 00, reporting incorrect ECC errors.
    
    Fixes: 27c5b17cd1b1 ("mtd: nand: add NAND driver "library" for Broadcom STB NAND controller")
    Signed-off-by: Álvaro Fernández Rojas <noltari@gmail.com>
    Acked-by: Brian Norris <computersforpeace@gmail.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/20210224080210.23686-1-noltari@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 40bad753d1fc02a0c8b988227fb081f106305907
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Feb 15 18:58:49 2021 +0300

    mtd: rawnand: fsmc: Fix error code in fsmc_nand_probe()
    
    [ Upstream commit e7a97528e3c787802d8c643d6ab2f428511bb047 ]
    
    If dma_request_channel() fails then the probe fails and it should
    return a negative error code, but currently it returns success.
    
    fixes: 4774fb0a48aa ("mtd: nand/fsmc: Add DMA support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Miquel Raynal <miquel.raynal@bootlin.com>
    Link: https://lore.kernel.org/linux-mtd/YCqaOZ83OvPOzLwh@mwanda
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1ad5f8a3f392be238b3d3a97fdbcca7fcad1f1c1
Author: Rafał Miłecki <rafal@milecki.pl>
Date:   Tue Mar 9 19:44:09 2021 +0100

    arm64: dts: broadcom: bcm4908: fix switch parent node name
    
    [ Upstream commit a348ff97ffb840b9d74b0e64b3e0e6002187d224 ]
    
    Ethernet switch and MDIO are grouped using "simple-bus". It's not
    allowed to use "ethernet-switch" node name as it isn't a switch. Replace
    it with "bus".
    
    Fixes: 527a3ac9bdf8 ("arm64: dts: broadcom: bcm4908: describe internal switch")
    Signed-off-by: Rafał Miłecki <rafal@milecki.pl>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 121a5da334eb1abc2b68ec65ecd5fd9904a16c15
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Feb 26 15:00:48 2021 +0100

    spi: rockchip: avoid objtool warning
    
    [ Upstream commit e50989527faeafb79f45a0f7529ba8e01dff1fff ]
    
    Building this file with clang leads to a an unreachable code path
    causing a warning from objtool:
    
    drivers/spi/spi-rockchip.o: warning: objtool: rockchip_spi_transfer_one()+0x2e0: sibling call from callable instruction with modified stack frame
    
    Change the unreachable() into an error return that can be
    handled if it ever happens, rather than silently crashing
    the kernel.
    
    Fixes: 65498c6ae241 ("spi: rockchip: support 4bit words")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Acked-by: Pratyush Yadav <p.yadav@ti.com>
    Link: https://lore.kernel.org/r/20210226140109.3477093-1-arnd@kernel.org
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b9e569ae1da3a113b3acee8703c94777fd20938a
Author: Meng Li <Meng.Li@windriver.com>
Date:   Fri Feb 26 10:17:37 2021 +0800

    regmap: set debugfs_name to NULL after it is freed
    
    [ Upstream commit e41a962f82e7afb5b1ee644f48ad0b3aee656268 ]
    
    There is a upstream commit cffa4b2122f5("regmap:debugfs:
    Fix a memory leak when calling regmap_attach_dev") that
    adds a if condition when create name for debugfs_name.
    With below function invoking logical, debugfs_name is
    freed in regmap_debugfs_exit(), but it is not created again
    because of the if condition introduced by above commit.
    regmap_reinit_cache()
            regmap_debugfs_exit()
            ...
            regmap_debugfs_init()
    So, set debugfs_name to NULL after it is freed.
    
    Fixes: cffa4b2122f5 ("regmap: debugfs: Fix a memory leak when calling regmap_attach_dev")
    Signed-off-by: Meng Li <Meng.Li@windriver.com>
    Link: https://lore.kernel.org/r/20210226021737.7690-1-Meng.Li@windriver.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89e2375bafbcf10280d923a4b6ce05a25c02cb8e
Author: David E. Box <david.e.box@linux.intel.com>
Date:   Wed Feb 24 12:10:04 2021 -0800

    mfd: intel_pmt: Fix nuisance messages and handling of disabled capabilities
    
    [ Upstream commit a1a5c1c3df282dc122508a17500317266ef19e46 ]
    
    Some products will be available that have PMT capabilities that are not
    supported. Remove the warnings in this instance to avoid nuisance messages
    and confusion.
    
    Also return an error code for capabilities that are disabled by quirk to
    prevent them from keeping the driver loaded if only disabled capabilities
    are found.
    
    Fixes: 4f8217d5b0ca ("mfd: Intel Platform Monitoring Technology support")
    Signed-off-by: David E. Box <david.e.box@linux.intel.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a113d3b0ab162272dd89a674f61768d32f0c3abb
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Mon Mar 8 09:48:39 2021 +0000

    usb: typec: stusb160x: fix return value check in stusb160x_probe()
    
    [ Upstream commit f2d90e07b5df2c7745ae66d2d48cc350d3f1c7d2 ]
    
    In case of error, the function device_get_named_child_node() returns
    NULL pointer not ERR_PTR(). The IS_ERR() test in the return value check
    should be replaced with NULL test.
    
    Fixes: da0cb6310094 ("usb: typec: add support for STUSB160x Type-C controller family")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Reviewed-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Link: https://lore.kernel.org/r/20210308094839.3586773-1-weiyongjun1@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30eca95df3c439bcde0231c05ff789d839980b37
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Mon Mar 8 09:48:41 2021 +0000

    usb: typec: tps6598x: Fix return value check in tps6598x_probe()
    
    [ Upstream commit 604c75893a01c8a3b5bd6dac55535963cd44c3f5 ]
    
    In case of error, the function device_get_named_child_node() returns
    NULL pointer not ERR_PTR(). The IS_ERR() test in the return value check
    should be replaced with NULL test.
    
    Fixes: 18a6c866bb19 ("usb: typec: tps6598x: Add USB role switching logic")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Link: https://lore.kernel.org/r/20210308094841.3587751-1-weiyongjun1@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7c88f690f155caf94e9c31c8a8794bc975f60ae
Author: Badhri Jagan Sridharan <badhri@google.com>
Date:   Wed Mar 3 23:09:31 2021 -0800

    usb: typec: tcpci: Check ROLE_CONTROL while interpreting CC_STATUS
    
    [ Upstream commit 19c234a14eafca78e0bc14ffb8be3891096ce147 ]
    
    While interpreting CC_STATUS, ROLE_CONTROL has to be read to make
    sure that CC1/CC2 is not forced presenting Rp/Rd.
    
    >From the TCPCI spec:
    
    4.4.5.2 ROLE_CONTROL (Normative):
    The TCPM shall write B6 (DRP) = 0b and B3..0 (CC1/CC2) if it wishes
    to control the Rp/Rd directly instead of having the TCPC perform
    DRP toggling autonomously. When controlling Rp/Rd directly, the
    TCPM writes to B3..0 (CC1/CC2) each time it wishes to change the
    CC1/CC2 values. This control is used for TCPM-TCPC implementing
    Source or Sink only as well as when a connection has been detected
    via DRP toggling but the TCPM wishes to attempt Try.Src or Try.Snk.
    
    Table 4-22. CC_STATUS Register Definition:
    If (ROLE_CONTROL.CC1 = Rd) or ConnectResult=1)
    00b: SNK.Open (Below maximum vRa)
    01b: SNK.Default (Above minimum vRd-Connect)
    10b: SNK.Power1.5 (Above minimum vRd-Connect) Detects Rp-1.5A
    11b: SNK.Power3.0 (Above minimum vRd-Connect) Detects Rp-3.0A
    
    If (ROLE_CONTROL.CC2=Rd) or (ConnectResult=1)
    00b: SNK.Open (Below maximum vRa)
    01b: SNK.Default (Above minimum vRd-Connect)
    10b: SNK.Power1.5 (Above minimum vRd-Connect) Detects Rp 1.5A
    11b: SNK.Power3.0 (Above minimum vRd-Connect) Detects Rp 3.0A
    
    Fixes: 74e656d6b0551 ("staging: typec: Type-C Port Controller Interface driver (tcpci)")
    Acked-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Badhri Jagan Sridharan <badhri@google.com>
    Link: https://lore.kernel.org/r/20210304070931.1947316-1-badhri@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c03542175f9e3a60fb83cecba19fa9013891553a
Author: Badhri Jagan Sridharan <badhri@google.com>
Date:   Thu Feb 25 02:11:04 2021 -0800

    usb: typec: tcpm: Wait for vbus discharge to VSAFE0V before toggling
    
    [ Upstream commit 3287f58bcba6c6fa6167624b443a668782fac26d ]
    
    When vbus auto discharge is enabled, TCPM can sometimes be faster than
    the TCPC i.e. TCPM can go ahead and move the port to unattached state
    (involves disabling vbus auto discharge) before TCPC could effectively
    discharge vbus to VSAFE0V. This leaves vbus with residual charge and
    increases the decay time which prevents tsafe0v from being met.
    This change makes TCPM waits for a maximum of tSafe0V(max) for vbus
    to discharge to VSAFE0V before transitioning to unattached state
    and re-enable toggling. If vbus discharges to vsafe0v sooner, then,
    transition to unattached state
    happens right away.
    
    Also, while in SNK_READY, when auto discharge is enabled, drive
    disconnect based on vbus turning off instead of Rp disappearing on
    CC pins. Rp disappearing on CC pins is almost instanteous compared
    to vbus decay.
    
    Sink detach:
    [  541.703058] CC1: 3 -> 0, CC2: 0 -> 0 [state SNK_READY, polarity 0, disconnected]
    [  541.703331] Setting voltage/current limit 5000 mV 0 mA
    [  541.727235] VBUS on
    [  541.749650] VBUS off
    [  541.749653] pending state change SNK_READY -> SNK_UNATTACHED @ 650 ms [rev3 NONE_AMS]
    [  541.749944] VBUS VSAFE0V
    [  541.749945] state change SNK_READY -> SNK_UNATTACHED [rev3 NONE_AMS]
    [  541.750806] Disable vbus discharge ret:0
    [  541.907345] Start toggling
    [  541.922799] CC1: 0 -> 0, CC2: 0 -> 0 [state TOGGLING, polarity 0, disconnected]
    
    Source detach:
    [ 2555.310414] state change SRC_SEND_CAPABILITIES -> SRC_READY [rev3 POWER_NEGOTIATION]
    [ 2555.310675] AMS POWER_NEGOTIATION finished
    [ 2555.310679] cc:=3
    [ 2593.645886] CC1: 0 -> 0, CC2: 2 -> 0 [state SRC_READY, polarity 1, disconnected]
    [ 2593.645919] pending state change SRC_READY -> SNK_UNATTACHED @ 650 ms [rev3 NONE_AMS]
    [ 2593.648419] VBUS off
    [ 2593.648960] VBUS VSAFE0V
    [ 2593.648965] state change SRC_READY -> SNK_UNATTACHED [rev3 NONE_AMS]
    [ 2593.649962] Disable vbus discharge ret:0
    [ 2593.890322] Start toggling
    [ 2593.925663] CC1: 0 -> 0, CC2: 0 -> 0 [state TOGGLING, polarity 0,
    
    Fixes: f321a02caebd ("usb: typec: tcpm: Implement enabling Auto Discharge disconnect support")
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Badhri Jagan Sridharan <badhri@google.com>
    Link: https://lore.kernel.org/r/20210225101104.1680697-1-badhri@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9edc7a0660117ccec9aa06cf4b6d0cc518131598
Author: Erwan Le Ray <erwan.leray@foss.st.com>
Date:   Thu Mar 4 17:23:07 2021 +0100

    serial: stm32: fix tx_empty condition
    
    [ Upstream commit 3db1d52466dc11dca4e47ef12a6e6e97f846af62 ]
    
    In "tx_empty", we should poll TC bit in both DMA and PIO modes (instead of
    TXE) to check transmission data register has been transmitted independently
    of the FIFO mode. TC indicates that both transmit register and shift
    register are empty. When shift register is empty, tx_empty should return
    TIOCSER_TEMT instead of TC value.
    
    Cleans the USART_CR_TC TCCF register define (transmission complete clear
    flag) as it is duplicate of USART_ICR_TCCF.
    
    Fixes: 48a6092fb41f ("serial: stm32-usart: Add STM32 USART Driver")
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Link: https://lore.kernel.org/r/20210304162308.8984-13-erwan.leray@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46c6efeff8e375c64fc46b50487a176b3e17245c
Author: Erwan Le Ray <erwan.leray@foss.st.com>
Date:   Thu Mar 4 17:23:06 2021 +0100

    serial: stm32: add FIFO flush when port is closed
    
    [ Upstream commit 9f77d19207a0e8ba814c8ceb22e90ce7cb2aef64 ]
    
    Transmission complete error is sent when ISR_TC is not set. If port closure
    is requested despite data in TDR / TX FIFO has not been sent (because of
    flow control), ISR_TC is not set and error message is sent on port closure
    but also when a new port is opened.
    
    Flush the data when port is closed, so the error isn't printed twice upon
    next port opening.
    
    Fixes: 64c32eab6603 ("serial: stm32: Add support of TC bit status check")
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Link: https://lore.kernel.org/r/20210304162308.8984-12-erwan.leray@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8fa18df352290374fcda27c2817838dce20a1db1
Author: Erwan Le Ray <erwan.leray@foss.st.com>
Date:   Thu Mar 4 17:23:05 2021 +0100

    serial: stm32: fix FIFO flush in startup and set_termios
    
    [ Upstream commit 315e2d8a125ad77a1bc28f621162713f3e7aef48 ]
    
    Fifo flush set USART_RQR register by calling stm32_usart_set_bits
    routine (Read/Modify/Write). USART_RQR register is a write only
    register. So, read before write isn't correct / relevant to flush
    the FIFOs.
    Replace stm32_usart_set_bits call by writel_relaxed.
    
    Fixes: 84872dc448fe ("serial: stm32: add RX and TX FIFO flush")
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Link: https://lore.kernel.org/r/20210304162308.8984-11-erwan.leray@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5e6b275937663b74ea7c10968557f65b0e28db3
Author: Erwan Le Ray <erwan.leray@foss.st.com>
Date:   Thu Mar 4 17:23:04 2021 +0100

    serial: stm32: call stm32_transmit_chars locked
    
    [ Upstream commit f16b90c2d9db3e6ac719d1946b9d335ca4ab33f3 ]
    
    stm32_transmit_chars should be called under lock also in tx DMA callback.
    
    Fixes: 3489187204eb ("serial: stm32: adding dma support")
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Link: https://lore.kernel.org/r/20210304162308.8984-10-erwan.leray@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b263011153eec8f6445c034591c2219c7313aa82
Author: Erwan Le Ray <erwan.leray@foss.st.com>
Date:   Thu Mar 4 17:23:03 2021 +0100

    serial: stm32: fix tx dma completion, release channel
    
    [ Upstream commit fb4f2e04ac13e7c400e6b86afbbd314a5a2a7e8d ]
    
    This patch add a proper release of dma channels when completing dma tx.
    
    Fixes: 3489187204eb ("serial: stm32: adding dma support")
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Link: https://lore.kernel.org/r/20210304162308.8984-9-erwan.leray@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 59ead20a3dece0ee0c1f6163c24f6260e35442be
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Fri Mar 5 03:49:29 2021 +0000

    serial: liteuart: fix return value check in liteuart_probe()
    
    [ Upstream commit cebeddd6d0d9f839b9df2930b6a768b54913a763 ]
    
    In case of error, the function devm_platform_get_and_ioremap_resource()
    returns ERR_PTR() and never returns NULL. The NULL test in the return
    value check should be replaced with IS_ERR().
    
    Fixes: 1da81e5562fa ("drivers/tty/serial: add LiteUART driver")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Link: https://lore.kernel.org/r/20210305034929.3234352-1-weiyongjun1@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 84a8fdccdd7e88495c50618260c38a419a2ea5ed
Author: Erwan Le Ray <erwan.leray@foss.st.com>
Date:   Thu Mar 4 17:23:02 2021 +0100

    serial: stm32: fix a deadlock in set_termios
    
    [ Upstream commit 436c97936001776f16153771ee887f125443e974 ]
    
    CTS/RTS GPIOs support that has been added recently to STM32 UART driver has
    introduced scheduled code in a set_termios part protected by a spin lock.
    This generates a potential deadlock scenario:
    
    Chain exists of:
    &irq_desc_lock_class --> console_owner --> &port_lock_key
    
    Possible unsafe locking scenario:
    
         CPU0                    CPU1
         ----                    ----
    lock(&port_lock_key);
                               lock(console_owner);
                               lock(&port_lock_key);
    lock(&irq_desc_lock_class);
    
    *** DEADLOCK ***
    4 locks held by stty/766:
    
    Move the scheduled code after the spinlock.
    
    Fixes: 6cf61b9bd7cc ("tty: serial: Add modem control gpio support for STM32 UART")
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Link: https://lore.kernel.org/r/20210304162308.8984-8-erwan.leray@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 65b53eb11514f3d8f9310adbc7c725bd2d795250
Author: Erwan Le Ray <erwan.leray@foss.st.com>
Date:   Thu Mar 4 17:23:01 2021 +0100

    serial: stm32: fix wake-up flag handling
    
    [ Upstream commit 12761869f0efa524348e2ae31827fd52eebf3f0d ]
    
    This patch fixes several issue with wake-up handling:
    - the WUF irq is handled several times at wake-up
    - the USART is disabled / enabled at suspend to set wake-up flag.
    It can cause glitches during RX.
    
    This patch fix those issues:
    - clear wake-up flag and disable wake-up irq in WUF irq handling
    - enable wake-up from low power on start bit detection at port
    configuration
    - Unmask the wake-up flag irq at suspend and mask it at resume
    
    In addition, pm_wakeup_event handling is moved from receice_chars to WUF
    irq handling.
    
    Fixes: 270e5a74fe4c ("serial: stm32: add wakeup mechanism")
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Link: https://lore.kernel.org/r/20210304162308.8984-7-erwan.leray@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f6fba14ddd5e3d837bfb63a48f7c7f304de5ca26
Author: Erwan Le Ray <erwan.leray@foss.st.com>
Date:   Thu Mar 4 17:23:00 2021 +0100

    serial: stm32: fix a deadlock condition with wakeup event
    
    [ Upstream commit ad7676812437a00a4c6be155fc17926069f99084 ]
    
    Deadlock issue is seen when enabling CONFIG_PROVE_LOCKING=Y, and uart
    console as wakeup source. Deadlock occurs when resuming from low power
    mode if system is waked up via usart console.
    The deadlock is triggered 100% when also disabling console suspend prior
    to go to suspend.
    
    Simplified call stack, deadlock condition:
    - stm32_console_write <-- spin_lock already held
    - print_circular_bug
    - pm_wakeup_dev_event <-- triggers lockdep as seen above
    - stm32_receive_chars
    - stm32_interrupt <-- wakeup via uart console, takes the lock
    
    So, revisit spin_lock in stm32-usart driver:
    - there is no need to hold the lock to access ICR (atomic clear of status
      flags)
    - only hold the lock inside stm32_receive_chars() routine (no need to
      call pm_wakeup_dev_event with lock held)
    - keep stm32_transmit_chars() routine called with lock held
    
    Fixes: 48a6092fb41f ("serial: stm32-usart: Add STM32 USART Driver")
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
    Link: https://lore.kernel.org/r/20210304162308.8984-6-erwan.leray@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b10b39da6aae5a876caa2558fe445e702de711e
Author: Erwan Le Ray <erwan.leray@foss.st.com>
Date:   Thu Mar 4 17:22:59 2021 +0100

    serial: stm32: fix TX and RX FIFO thresholds
    
    [ Upstream commit 25a8e7611da5513b388165661b17173c26e12c04 ]
    
    TX and RX FIFO thresholds may be cleared after suspend/resume, depending
    on the low power mode.
    
    Those configurations (done in startup) are not effective for UART console,
    as:
    - the reference manual indicates that FIFOEN bit can only be written when
      the USART is disabled (UE=0)
    - a set_termios (where UE is set) is requested firstly for console
      enabling, before the startup.
    
    Fixes: 84872dc448fe ("serial: stm32: add RX and TX FIFO flush")
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Link: https://lore.kernel.org/r/20210304162308.8984-5-erwan.leray@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ace36d5a4249e27cf2452d5c1d35a58d4f6eca89
Author: Erwan Le Ray <erwan.leray@foss.st.com>
Date:   Thu Mar 4 17:22:58 2021 +0100

    serial: stm32: fix incorrect characters on console
    
    [ Upstream commit f264c6f6aece81a9f8fbdf912b20bd3feb476a7a ]
    
    Incorrect characters are observed on console during boot. This issue occurs
    when init/main.c is modifying termios settings to open /dev/console on the
    rootfs.
    
    This patch adds a waiting loop in set_termios to wait for TX shift register
    empty (and TX FIFO if any) before stopping serial port.
    
    Fixes: 48a6092fb41f ("serial: stm32-usart: Add STM32 USART Driver")
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Link: https://lore.kernel.org/r/20210304162308.8984-4-erwan.leray@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit df5cee6527997dc26dcfb95033115bcabef646ec
Author: Erwan Le Ray <erwan.leray@foss.st.com>
Date:   Thu Mar 4 17:22:57 2021 +0100

    serial: stm32: fix startup by enabling usart for reception
    
    [ Upstream commit f4518a8a75f5be1a121b0c95ad9c6b1eb27d920e ]
    
    RX is configured, but usart is not enabled in startup function.
    Kernel documentation specifies that startup should enable the port for
    reception.
    Fix the startup by enabling usart for reception.
    
    Fixes: 84872dc448fe ("serial: stm32: add RX and TX FIFO flush")
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Link: https://lore.kernel.org/r/20210304162308.8984-3-erwan.leray@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d8b6e3242fb1b01a5c5ce7f8d226ae4e12d0a89
Author: Erwan Le Ray <erwan.leray@foss.st.com>
Date:   Thu Mar 4 17:22:56 2021 +0100

    serial: stm32: fix probe and remove order for dma
    
    [ Upstream commit 87fd0741d6dcf63ebdb14050c2b921ae14c7f307 ]
    
    The probe and remove orders are wrong as the uart_port is registered
    before saving device data in the probe, and unregistered after DMA
    resource deallocation in the remove. uart_port registering should be
    done at the end of probe and unregistering should be done at the begin of
    remove to avoid resource allocation issues.
    
    Fix probe and remove orders. This enforce resource allocation occur at
    proper time.
    Terminate both DMA rx and tx transfers before removing device.
    
    Move pm_runtime after uart_remove_one_port() call in remove() to keep the
    probe error path.
    
    Fixes: 3489187204eb ("serial: stm32: adding dma support")
    Signed-off-by: Erwan Le Ray <erwan.leray@foss.st.com>
    Link: https://lore.kernel.org/r/20210304162308.8984-2-erwan.leray@foss.st.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f1a704aa1cd03926685240eefe4467360b31581d
Author: Mike Travis <mike.travis@hpe.com>
Date:   Fri Mar 5 10:28:53 2021 -0600

    x86/platform/uv: Set section block size for hubless architectures
    
    [ Upstream commit 6840a150b9daf35e4d21ab9780d0a03b4ed74a5b ]
    
    Commit
    
      bbbd2b51a2aa ("x86/platform/UV: Use new set memory block size function")
    
    added a call to set the block size value that is needed by the kernel
    to set the boundaries in the section list. This was done for UV Hubbed
    systems but missed in the UV Hubless setup. Fix that mistake by adding
    that same set call for hubless systems, which support the same NVRAMs
    and Intel BIOS, thus the same problem occurs.
    
     [ bp: Massage commit message. ]
    
    Fixes: bbbd2b51a2aa ("x86/platform/UV: Use new set memory block size function")
    Signed-off-by: Mike Travis <mike.travis@hpe.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Steve Wahl <steve.wahl@hpe.com>
    Reviewed-by: Russ Anderson <rja@hpe.com>
    Link: https://lkml.kernel.org/r/20210305162853.299892-1-mike.travis@hpe.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 023f053c37b2a1ad7434733ecf6869329fdf931b
Author: Tony Lindgren <tony@atomide.com>
Date:   Mon Mar 8 11:35:06 2021 +0200

    bus: ti-sysc: Fix initializing module_pa for modules without sysc register
    
    [ Upstream commit 7bad5af826aba00487fed9a3300d3f43f0cba11b ]
    
    We have interconnect target modules with no known registers using only
    clocks and resets, but we still want to detect them based on the module
    IO range. So let's call sysc_parse_and_check_child_range() earlier so we
    have module_pa properly initialized.
    
    Fixes: 2928135c93f8 ("bus: ti-sysc: Support modules without control registers")
    Signed-off-by: Tony Lindgren <tony@atomide.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit be4720a61d2b313c7e6004772e012151113c16f7
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Mon Mar 1 20:06:26 2021 +0900

    arm64: dts: renesas: Add mmc aliases into board dts files
    
    [ Upstream commit d765a4f302cc046ca23453ba990d21120ceadbbd ]
    
    After the commit 7320915c8861 ("mmc: Set PROBE_PREFER_ASYNCHRONOUS
    for drivers that existed in v4.14"), the order of /dev/mmcblkN
    was not fixed in some SoCs which have multiple sdhi controllers.
    So, we were hard to use an sdhi device as rootfs by using
    the kernel parameter like "root=/dev/mmcblkNpM".
    
    According to the discussion on a mainling list [1], we can add
    mmc aliases to fix the issue. So, add such aliases into Renesas
    arm64 board dts files. Notes that mmc0 is an eMMC channel if
    available.
    
    [1]
    https://lore.kernel.org/linux-arm-kernel/CAPDyKFptyEQNJu8cqzMt2WRFZcwEdjDiytMBp96nkoZyprTgmA@mail.gmail.com/
    
    Fixes: 7320915c8861 ("mmc: Set PROBE_PREFER_ASYNCHRONOUS for drivers that existed in v4.14")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/1614596786-22326-1-git-send-email-yoshihiro.shimoda.uh@renesas.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c1cc1df36c52093242877ac86d1d56fef4314534
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Fri Feb 12 21:01:56 2021 +0900

    ARM: dts: renesas: Add mmc aliases into R-Car Gen2 board dts files
    
    [ Upstream commit da926e813fc7f9f0912fa413981a1f5ba63a536d ]
    
    After set PROBE_PREFER_ASYNCHRONOUS flag on the mmc host drivers,
    the order of /dev/mmcblkN was not fixed in some SoCs which have
    multiple SDHI and/or MMCIF controllers. So, we were hard to use
    such a device as rootfs by using the kernel parameter like
    "root=/dev/mmcblkNpM".
    
    According to the discussion on a mainling list [1], we can add
    mmc aliases to fix the issue. So, add such aliases into R-Car Gen2
    board dts files. Note that, since R-Car Gen2 is even more complicated
    about SDHI and/or MMCIF channels variations and they share pins,
    add the aliases into board dts files instead of SoC dtsi files.
    
    [1]
    https://lore.kernel.org/linux-arm-kernel/CAPDyKFptyEQNJu8cqzMt2WRFZcwEdjDiytMBp96nkoZyprTgmA@mail.gmail.com/
    
    Fixes: 7320915c8861 ("mmc: Set PROBE_PREFER_ASYNCHRONOUS for drivers that existed in v4.14")
    Fixes: 21b2cec61c04 ("mmc: Set PROBE_PREFER_ASYNCHRONOUS for drivers that existed in v4.4")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Link: https://lore.kernel.org/r/1613131316-30994-1-git-send-email-yoshihiro.shimoda.uh@renesas.com
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e59274ac3b785c9da77c21b9891952e748c770db
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 10 22:25:26 2020 +0100

    ARM: dts: s5pv210: correct fuel gauge interrupt trigger level on Fascinate family
    
    [ Upstream commit 214e6ec8c9f5a3353d3282b3ff475d3ee86cc21a ]
    
    The Maxim fuel gauge datasheets describe the interrupt line as active
    low with a requirement of acknowledge from the CPU.  The falling edge
    interrupt will mostly work but it's not correct.
    
    Fixes: 99bb20321f0e ("ARM: dts: s5pv210: Correct fuelgauge definition on Aries")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20201210212534.216197-10-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8ce23c685240e8d477b67633e1da560f45836b15
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 10 22:25:25 2020 +0100

    ARM: dts: exynos: correct PMIC interrupt trigger level on Snow
    
    [ Upstream commit 8987efbb17c2522be8615085df9a14da2ab53d34 ]
    
    The Maxim PMIC datasheets describe the interrupt line as active low
    with a requirement of acknowledge from the CPU.  Without specifying the
    interrupt type in Devicetree, kernel might apply some fixed
    configuration, not necessarily working for this hardware.
    
    Additionally, the interrupt line is shared so using level sensitive
    interrupt is here especially important to avoid races.
    
    Fixes: c61248afa819 ("ARM: dts: Add max77686 RTC interrupt to cros5250-common")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20201210212534.216197-9-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b05b10ba6768b6ee349858f0b653996a0b07e3a
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 10 22:25:24 2020 +0100

    ARM: dts: exynos: correct PMIC interrupt trigger level on SMDK5250
    
    [ Upstream commit f6368c60561370e4a92fac22982a3bd656172170 ]
    
    The Maxim PMIC datasheets describe the interrupt line as active low
    with a requirement of acknowledge from the CPU.  Without specifying the
    interrupt type in Devicetree, kernel might apply some fixed
    configuration, not necessarily working for this hardware.
    
    Additionally, the interrupt line is shared so using level sensitive
    interrupt is here especially important to avoid races.
    
    Fixes: 47580e8d94c2 ("ARM: dts: Specify MAX77686 pmic interrupt for exynos5250-smdk5250")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20201210212534.216197-8-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7ebd2607296ec1538605ffd49d68b8e45222d2ee
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 10 22:25:23 2020 +0100

    ARM: dts: exynos: correct PMIC interrupt trigger level on P4 Note family
    
    [ Upstream commit fbe9c9bb2e929865500a0985735f81c0142accad ]
    
    The Maxim PMIC datasheets describe the interrupt line as active low
    with a requirement of acknowledge from the CPU.  Without specifying the
    interrupt type in Devicetree, kernel might apply some fixed
    configuration, not necessarily working for this hardware.
    
    Additionally, the interrupt line is shared so using level sensitive
    interrupt is here especially important to avoid races.
    
    Fixes: f48b5050c301 ("ARM: dts: exynos: add Samsung's Exynos4412-based P4 Note boards")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20201210212534.216197-7-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 642a587880f1b4dbb7c793540633bbd2b48510fc
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 10 22:25:22 2020 +0100

    ARM: dts: exynos: correct PMIC interrupt trigger level on Odroid X/U3 family
    
    [ Upstream commit 6503c568e97a52f8b7a3109718db438e52e59485 ]
    
    The Maxim PMIC datasheets describe the interrupt line as active low
    with a requirement of acknowledge from the CPU.  Without specifying the
    interrupt type in Devicetree, kernel might apply some fixed
    configuration, not necessarily working for this hardware.
    
    Additionally, the interrupt line is shared so using level sensitive
    interrupt is here especially important to avoid races.
    
    Fixes: eea6653aae7b ("ARM: dts: Enable PMIC interrupts for exynos4412-odroid-common")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20201210212534.216197-6-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c883c93ee1444ba33d817fbb27d48add945df635
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 10 22:25:21 2020 +0100

    ARM: dts: exynos: correct PMIC interrupt trigger level on Midas family
    
    [ Upstream commit e52dcd6e70fab51f53292e53336ecb007bb60889 ]
    
    The Maxim PMIC datasheets describe the interrupt line as active low
    with a requirement of acknowledge from the CPU.  Without specifying the
    interrupt type in Devicetree, kernel might apply some fixed
    configuration, not necessarily working for this hardware.
    
    Additionally, the interrupt line is shared so using level sensitive
    interrupt is here especially important to avoid races.
    
    Fixes: 15dfdfad2d4a ("ARM: dts: Add basic dts for Exynos4412-based Trats 2 board")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20201210212534.216197-5-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b928651cc3bba3e9aaaff53f0fd1708cb6ce421
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 10 22:25:20 2020 +0100

    ARM: dts: exynos: correct MUIC interrupt trigger level on Midas family
    
    [ Upstream commit 15107e443ab8c6cb35eff10438993e4bc944d9ae ]
    
    The Maxim MUIC datasheets describe the interrupt line as active low
    with a requirement of acknowledge from the CPU.  Without specifying the
    interrupt type in Devicetree, kernel might apply some fixed
    configuration, not necessarily working for this hardware.
    
    Additionally, the interrupt line is shared so using level sensitive
    interrupt is here especially important to avoid races.
    
    Fixes: 7eec1266751b ("ARM: dts: Add Maxim 77693 PMIC to exynos4412-trats2")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20201210212534.216197-4-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f73c51927a771077419f75b1c69a97ecaadf01eb
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 10 22:25:19 2020 +0100

    ARM: dts: exynos: correct fuel gauge interrupt trigger level on Midas family
    
    [ Upstream commit 8a45f33bd36efbb624198cfa9fdf1f66fd1c3d26 ]
    
    The Maxim fuel gauge datasheets describe the interrupt line as active
    low with a requirement of acknowledge from the CPU.  The falling edge
    interrupt will mostly work but it's not correct.
    
    Fixes: e8614292cd41 ("ARM: dts: Add Maxim 77693 fuel gauge node for exynos4412-trats2")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20201210212534.216197-3-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 277d9da7d39a4ca514a15cb3da986ab944dffe0c
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 10 22:25:18 2020 +0100

    ARM: dts: exynos: correct fuel gauge interrupt trigger level on P4 Note family
    
    [ Upstream commit c731a16e2cf424a462c7d42c33d6acd613576508 ]
    
    The Maxim fuel gauge datasheets describe the interrupt line as active
    low with a requirement of acknowledge from the CPU.  The falling edge
    interrupt will mostly work but it's not correct.
    
    Fixes: f48b5050c301 ("ARM: dts: exynos: add Samsung's Exynos4412-based P4 Note boards")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20201210212534.216197-2-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 96efb5ea80cd1983a634443cc5c074ba8ca5dc0f
Author: Krzysztof Kozlowski <krzk@kernel.org>
Date:   Thu Dec 10 22:25:17 2020 +0100

    ARM: dts: exynos: correct fuel gauge interrupt trigger level on GT-I9100
    
    [ Upstream commit 46799802136670e00498f19898f1635fbc85f583 ]
    
    The Maxim fuel gauge datasheets describe the interrupt line as active
    low with a requirement of acknowledge from the CPU.  The falling edge
    interrupt will mostly work but it's not correct.
    
    Fixes: 8620cc2f99b7 ("ARM: dts: exynos: Add devicetree file for the Galaxy S2")
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Link: https://lore.kernel.org/r/20201210212534.216197-1-krzk@kernel.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 32feeec631a2d189a2d6a2a3291cae3a68074aa4
Author: Colin Ian King <colin.king@canonical.com>
Date:   Tue Feb 23 19:38:21 2021 +0000

    memory: gpmc: fix out of bounds read and dereference on gpmc_cs[]
    
    [ Upstream commit e004c3e67b6459c99285b18366a71af467d869f5 ]
    
    Currently the array gpmc_cs is indexed by cs before it cs is range checked
    and the pointer read from this out-of-index read is dereferenced. Fix this
    by performing the range check on cs before the read and the following
    pointer dereference.
    
    Addresses-Coverity: ("Negative array index read")
    Fixes: 9ed7a776eb50 ("ARM: OMAP2+: Fix support for multiple devices on a GPMC chip select")
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Reviewed-by: Tony Lindgren <tony@atomide.com>
    Link: https://lore.kernel.org/r/20210223193821.17232-1-colin.king@canonical.com
    Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 50e7b39b808430ad49a637dc6fb72ca93b451b13
Author: Corentin Labbe <clabbe.montjoie@gmail.com>
Date:   Fri Feb 12 09:46:10 2021 +0100

    crypto: sun8i-ss - fix result memory leak on error path
    
    [ Upstream commit 1dbc6a1e25be8575d6c4114d1d2b841a796507f7 ]
    
    This patch fixes a memory leak on an error path.
    
    Fixes: d9b45418a917 ("crypto: sun8i-ss - support hash algorithms")
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Corentin Labbe <clabbe.montjoie@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac9675c000054667fe443c57c9ea884e472cd6c0
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Wed Feb 10 07:45:27 2021 +0000

    crypto: keembay-ocs-aes - Fix error return code in kmb_ocs_aes_probe()
    
    [ Upstream commit 2eee428d8212265af09d349b74746be03513382e ]
    
    Fix to return negative error code -ENOMEM from the error handling
    case instead of 0, as done elsewhere in this function.
    
    Fixes: 885743324513 ("crypto: keembay - Add support for Keem Bay OCS AES/SM4")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Reviewed-by: Daniele Alessandrelli <daniele.alessandrelli@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f2ad9cbc94a09ff164bff20b1f2c10de26c1828e
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Wed Feb 10 07:43:50 2021 +0000

    crypto: keembay-ocs-hcu - Fix error return code in kmb_ocs_hcu_probe()
    
    [ Upstream commit 662c1c5618aaf71f99ada3105b99668a503605ae ]
    
    Fix to return negative error code -ENOMEM from the error handling
    case instead of 0, as done elsewhere in this function.
    
    Fixes: 472b04444cd3 ("crypto: keembay - Add Keem Bay OCS HCU driver")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Reviewed-by: Daniele Alessandrelli <daniele.alessandrelli@intel.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4a153aacc73e07b052b6fe3a8ae4e27fa48f5456
Author: Luca Ceresoli <luca@lucaceresoli.net>
Date:   Thu Feb 4 13:13:13 2021 +0100

    fpga: fpga-mgr: xilinx-spi: fix error messages on -EPROBE_DEFER
    
    [ Upstream commit 484a58607a808c3721917f5ca5fba7eff809e4df ]
    
    The current code produces an error message on devm_gpiod_get() errors even
    when the error is -EPROBE_DEFER, which should be silent.
    
    This has been observed producing a significant amount of messages like:
    
        xlnx-slave-spi spi1.1: Failed to get PROGRAM_B gpio: -517
    
    Fix and simplify code by using the dev_err_probe() helper function.
    
    Signed-off-by: Luca Ceresoli <luca@lucaceresoli.net>
    Fixes: dd2784c01d93 ("fpga manager: xilinx-spi: check INIT_B pin during write_init")
    Fixes: 061c97d13f1a ("fpga manager: Add Xilinx slave serial SPI driver")
    Signed-off-by: Moritz Fischer <mdf@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d28a7779d45b31e91790c6b0d279823bfa8c7fc4
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Wed Mar 3 07:43:57 2021 +0100

    x86/vdso: Use proper modifier for len's format specifier in extract()
    
    [ Upstream commit 70c9d959226b7c5c48c119e2c1cfc1424f87b023 ]
    
    Commit
    
      8382c668ce4f ("x86/vdso: Add support for exception fixup in vDSO functions")
    
    prints length "len" which is size_t.
    
    Compilers now complain when building on a 32-bit host:
    
      HOSTCC  arch/x86/entry/vdso/vdso2c
      ...
      In file included from arch/x86/entry/vdso/vdso2c.c:162:
      arch/x86/entry/vdso/vdso2c.h: In function 'extract64':
      arch/x86/entry/vdso/vdso2c.h:38:52: warning: format '%lu' expects argument of \
            type 'long unsigned int', but argument 4 has type 'size_t' {aka 'unsigned int'}
    
    So use proper modifier (%zu) for size_t.
    
     [ bp: Massage commit message. ]
    
    Fixes: 8382c668ce4f ("x86/vdso: Add support for exception fixup in vDSO functions")
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Acked-by: Jarkko Sakkinen <jarkko@kernel.org>
    Link: https://lkml.kernel.org/r/20210303064357.17056-1-jslaby@suse.cz
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17d45b88c1aff01862741bf45b3797a6760d5dd7
Author: Nobuhiro Iwamatsu <iwamatsu@nigauri.org>
Date:   Tue Feb 16 00:58:49 2021 +0900

    firmware: xilinx: Remove zynqmp_pm_get_eemi_ops() in IS_REACHABLE(CONFIG_ZYNQMP_FIRMWARE)
    
    [ Upstream commit 79bfe480a0a0b259ab9fddcd2fe52c03542b1196 ]
    
    zynqmp_pm_get_eemi_ops() was removed in commit 4db8180ffe7c: "Firmware: xilinx:
    Remove eemi ops for fpga related APIs", but not in IS_REACHABLE(CONFIG_ZYNQMP_FIRMWARE).
    Any driver who want to communicate with PMC using EEMI APIs use the functions provided
    for each function
    This removed zynqmp_pm_get_eemi_ops() in IS_REACHABLE(CONFIG_ZYNQMP_FIRMWARE), and also
    modify the documentation for this driver.
    
    Fixes: 4db8180ffe7c ("firmware: xilinx: Remove eemi ops for fpga related APIs")
    Signed-off-by: Nobuhiro Iwamatsu <iwamatsu@nigauri.org>
    Link: https://lore.kernel.org/r/20210215155849.2425846-1-iwamatsu@nigauri.org
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7476bf64f40dbd0dc87c7999675aa97ccf901ec
Author: Tejas Patel <tejas.patel@xilinx.com>
Date:   Sun Feb 7 22:31:23 2021 -0800

    firmware: xilinx: Fix dereferencing freed memory
    
    [ Upstream commit f1f21bece82c76a56a96988ec7d51ccc033d8949 ]
    
    Fix smatch warning:
    drivers/firmware/xilinx/zynqmp.c:1288 zynqmp_firmware_remove()
    error: dereferencing freed memory 'feature_data'
    
    Use hash_for_each_safe for safe removal of hash entry.
    
    Fixes: acfdd18591ea ("firmware: xilinx: Use hash-table for api feature check")
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Tejas Patel <tejas.patel@xilinx.com>
    Signed-off-by: Rajan Vaja <rajan.vaja@xilinx.com>
    Link: https://lore.kernel.org/r/1612765883-22018-1-git-send-email-rajan.vaja@xilinx.com
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 07871a25dfb3beb54511dd906993a6ce5a907705
Author: Len Brown <len.brown@intel.com>
Date:   Thu Mar 11 18:36:35 2021 -0500

    Revert "tools/power turbostat: adjust for temperature offset"
    
    commit b2b94be787bf47eedd5890a249f3318bf9f1f1d5 upstream.
    
    This reverts commit 6ff7cb371c4bea3dba03a56d774da925e78a5087.
    
    Apparently the TCC offset should not be used to adjust what temperature
    we show the user after all.
    
    (on most systems, TCC offset is 0, FWIW)
    
    Fixes: 6ff7cb371c4b
    
    Signed-off-by: Len Brown <len.brown@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e879c36a851270dafc30500bd3ba30d2b3655b53
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Tue Mar 23 17:36:24 2021 +0200

    usb: gadget: pch_udc: Revert d3cb25a12138 completely
    
    commit 50a318cc9b54a36f00beadf77e578a50f3620477 upstream.
    
    The commit d3cb25a12138 ("usb: gadget: udc: fix spin_lock in pch_udc")
    obviously was not thought through and had made the situation even worse
    than it was before. Two changes after almost reverted it. but a few
    leftovers have been left as it. With this revert d3cb25a12138 completely.
    
    While at it, narrow down the scope of unlocked section to prevent
    potential race when prot_stall is assigned.
    
    Fixes: d3cb25a12138 ("usb: gadget: udc: fix spin_lock in pch_udc")
    Fixes: 9903b6bedd38 ("usb: gadget: pch-udc: fix lock")
    Fixes: 1d23d16a88e6 ("usb: gadget: pch_udc: reorder spin_[un]lock to avoid deadlock")
    Cc: Iago Abal <mail@iagoabal.eu>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210323153626.54908-5-andriy.shevchenko@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3228a02f91d5a2d0abfe7d0ccb16c3cf7fffd2e3
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Thu Feb 4 15:57:03 2021 +0100

    Revert "drm/qxl: do not run release if qxl failed to init"
    
    commit 93d8da8d7efbf690c0a9eaca798acc0c625245e6 upstream.
    
    This reverts commit b91907a6241193465ca92e357adf16822242296d.
    
    Patch is broken, it effectively makes qxl_drm_release() a nop
    because on normal driver shutdown qxl_drm_release() is called
    *after* drm_dev_unregister().
    
    Fixes: b91907a62411 ("drm/qxl: do not run release if qxl failed to init")
    Cc: Tong Zhang <ztong0001@gmail.com>
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: http://patchwork.freedesktop.org/patch/msgid/20210204145712.1531203-3-kraxel@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93a3589b710ee3ebd653a378fb0cbfe97877d20d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 23 16:19:35 2021 +0300

    ovl: fix missing revert_creds() on error path
    
    commit 7b279bbfd2b230c7a210ff8f405799c7e46bbf48 upstream.
    
    Smatch complains about missing that the ovl_override_creds() doesn't
    have a matching revert_creds() if the dentry is disconnected.  Fix this
    by moving the ovl_override_creds() until after the disconnected check.
    
    Fixes: aa3ff3c152ff ("ovl: copy up of disconnected dentries")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af582bd4a21af114ea58e1c9c216088f4860bf47
Author: Rikard Falkeborn <rikard.falkeborn@gmail.com>
Date:   Fri Mar 5 00:07:09 2021 +0100

    mfd: stmpe: Revert "Constify static struct resource"
    
    commit cb9e880a797a77c21c0f0e7ccd553da8eb4870af upstream.
    
    In stmpe_devices_init(), the start and end field of these structs are
    modified, so they can not be const. Add a comment to those structs that
    lacked it to reduce the risk that this happens again.
    
    This reverts commit 8d7b3a6dac4eae22c58b0853696cbd256966741b.
    
    Fixes: 8d7b3a6dac4e ("mfd: stmpe: Constify static struct resource")
    Reported-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Rikard Falkeborn <rikard.falkeborn@gmail.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13b824cf038ef67adf94e6c94cfdb777a88a8de1
Author: Jae Hyun Yoo <jae.hyun.yoo@linux.intel.com>
Date:   Thu Apr 8 10:28:03 2021 -0700

    Revert "i3c master: fix missing destroy_workqueue() on error in i3c_master_register"
    
    commit 0d95f41ebde40d552bb4fea64b1d618607915fd6 upstream.
    
    Adding the destroy_workqueue call in i3c_master_register introduced below
    kernel warning because it makes duplicate destroy_workqueue calls when
    i3c_master_register fails after allocating the workqueue. The workqueue will
    be destroyed by i3c_masterdev_release which is called by put_device at the
    end of the i3c_master_register function eventually in failure cases so the
    workqueue doesn't need to be destroyed in i3c_master_register.
    
    [    6.972952] WARNING: CPU: 1 PID: 1 at lib/list_debug.c:48 __list_del_entry_valid+0x9c/0xf4
    [    6.982205] list_del corruption, 8fe03c08->prev is LIST_POISON2 (00000122)
    [    6.989910] CPU: 1 PID: 1 Comm: swapper/0 Tainted: G        W         5.10.23-c12838a-dirty-31dc772 #1
    [    7.000295] Hardware name: Generic DT based system
    [    7.005638] Backtrace:
    [    7.008369] [<809133f0>] (dump_backtrace) from [<80913644>] (show_stack+0x20/0x24)
    [    7.016819]  r7:00000030 r6:60000013 r5:00000000 r4:813b5d40
    [    7.023137] [<80913624>] (show_stack) from [<8091e1a0>] (dump_stack+0x9c/0xb0)
    [    7.031201] [<8091e104>] (dump_stack) from [<8011fa30>] (__warn+0xf8/0x154)
    [    7.038972]  r7:00000030 r6:00000009 r5:804fa1c8 r4:80b6eca4
    [    7.045289] [<8011f938>] (__warn) from [<80913d14>] (warn_slowpath_fmt+0x8c/0xc0)
    [    7.053641]  r7:00000030 r6:80b6eca4 r5:80b6ed74 r4:818cc000
    [    7.059960] [<80913c8c>] (warn_slowpath_fmt) from [<804fa1c8>] (__list_del_entry_valid+0x9c/0xf4)
    [    7.069866]  r9:96becf8c r8:818cc000 r7:8fe03c10 r6:8fe03c00 r5:8fe03ba0 r4:ff7ead4c
    [    7.078513] [<804fa12c>] (__list_del_entry_valid) from [<8013f0b4>] (destroy_workqueue+0x1c4/0x23c)
    [    7.088615] [<8013eef0>] (destroy_workqueue) from [<806aa124>] (i3c_masterdev_release+0x40/0xb0)
    [    7.098421]  r7:00000000 r6:81a43b80 r5:8fe65360 r4:8fe65048
    [    7.104740] [<806aa0e4>] (i3c_masterdev_release) from [<805f3f04>] (device_release+0x40/0xb0)
    [    7.114254]  r5:00000000 r4:8fe65048
    [    7.118245] [<805f3ec4>] (device_release) from [<808fe754>] (kobject_put+0xc8/0x204)
    [    7.126885]  r5:813978dc r4:8fe65048
    [    7.130877] [<808fe68c>] (kobject_put) from [<805f5fbc>] (put_device+0x20/0x24)
    [    7.139037]  r7:8fe65358 r6:8fe65368 r5:8fe65358 r4:8fe65048
    [    7.145355] [<805f5f9c>] (put_device) from [<806abac4>] (i3c_master_register+0x338/0xb00)
    [    7.154487] [<806ab78c>] (i3c_master_register) from [<806ae084>] (dw_i3c_probe+0x224/0x24c)
    [    7.163811]  r10:00000000 r9:8fe7a100 r8:00000032 r7:819fa810 r6:819fa800 r5:8fe65040
    [    7.172547]  r4:00000000
    [    7.175376] [<806ade60>] (dw_i3c_probe) from [<805fdc14>] (platform_drv_probe+0x44/0x80)
    [    7.184409]  r9:813a25c0 r8:00000000 r7:815ec114 r6:00000000 r5:813a25c0 r4:819fa810
    [    7.193053] [<805fdbd0>] (platform_drv_probe) from [<805fb83c>] (really_probe+0x108/0x50c)
    [    7.202275]  r5:815ec004 r4:819fa810
    [    7.206265] [<805fb734>] (really_probe) from [<805fc180>] (driver_probe_device+0xb4/0x190)
    [    7.215492]  r10:813dc000 r9:80c4385c r8:000000d9 r7:813a25c0 r6:819fa810 r5:00000000
    [    7.224228]  r4:813a25c0
    [    7.227055] [<805fc0cc>] (driver_probe_device) from [<805fc5cc>] (device_driver_attach+0xb8/0xc0)
    [    7.236959]  r9:80c4385c r8:000000d9 r7:813a25c0 r6:819fa854 r4:819fa810
    [    7.244439] [<805fc514>] (device_driver_attach) from [<805fc65c>] (__driver_attach+0x88/0x16c)
    [    7.254051]  r7:00000000 r6:819fa810 r5:00000000 r4:813a25c0
    [    7.260369] [<805fc5d4>] (__driver_attach) from [<805f954c>] (bus_for_each_dev+0x88/0xc8)
    [    7.269489]  r7:00000000 r6:818cc000 r5:805fc5d4 r4:813a25c0
    [    7.275806] [<805f94c4>] (bus_for_each_dev) from [<805fc76c>] (driver_attach+0x2c/0x30)
    [    7.284739]  r7:81397c98 r6:00000000 r5:8fe7db80 r4:813a25c0
    [    7.291057] [<805fc740>] (driver_attach) from [<805f9eec>] (bus_add_driver+0x120/0x200)
    [    7.299984] [<805f9dcc>] (bus_add_driver) from [<805fce44>] (driver_register+0x98/0x128)
    [    7.309005]  r7:80c4383c r6:00000000 r5:00000000 r4:813a25c0
    [    7.315323] [<805fcdac>] (driver_register) from [<805fedb4>] (__platform_driver_register+0x50/0x58)
    [    7.325410]  r5:818cc000 r4:81397c98
    [    7.329404] [<805fed64>] (__platform_driver_register) from [<80c23398>] (dw_i3c_driver_init+0x24/0x28)
    [    7.339790]  r5:818cc000 r4:80c23374
    [    7.343784] [<80c23374>] (dw_i3c_driver_init) from [<80c01300>] (do_one_initcall+0xac/0x1d0)
    [    7.353206] [<80c01254>] (do_one_initcall) from [<80c01630>] (kernel_init_freeable+0x1a8/0x204)
    [    7.362916]  r8:000000d9 r7:80c4383c r6:00000007 r5:819ca2c0 r4:80c67680
    [    7.370398] [<80c01488>] (kernel_init_freeable) from [<8091eb18>] (kernel_init+0x18/0x12c)
    [    7.379616]  r10:00000000 r9:00000000 r8:00000000 r7:00000000 r6:00000000 r5:8091eb00
    [    7.388343]  r4:00000000
    [    7.391170] [<8091eb00>] (kernel_init) from [<80100148>] (ret_from_fork+0x14/0x2c)
    [    7.399607] Exception stack(0x818cdfb0 to 0x818cdff8)
    [    7.405243] dfa0:                                     00000000 00000000 00000000 00000000
    [    7.414371] dfc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    [    7.423499] dfe0: 00000000 00000000 00000000 00000000 00000013 00000000
    [    7.430879]  r5:8091eb00 r4:00000000
    
    This reverts commit 59165d16c699182b86b5c65181013f1fd88feb62.
    
    Fixes: 59165d16c699 ("i3c master: fix missing destroy_workqueue() on error in i3c_master_register")
    Signed-off-by: Jae Hyun Yoo <jae.hyun.yoo@linux.intel.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Link: https://lore.kernel.org/r/20210408172803.24599-1-jae.hyun.yoo@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 401e15486bc06d1d3b6112088cf899214d164b87
Author: Xie He <xie.he.0141@gmail.com>
Date:   Sun May 2 20:51:36 2021 -0700

    Revert "drivers/net/wan/hdlc_fr: Fix a double free in pvc_xmit"
    
    commit d362fd0be456dba2d3d58a90b7a193962776562b upstream.
    
    This reverts commit 1b479fb80160
    ("drivers/net/wan/hdlc_fr: Fix a double free in pvc_xmit").
    
    1. This commit is incorrect. "__skb_pad" will NOT free the skb on
    failure when its "free_on_error" parameter is "false".
    
    2. This commit claims to fix my commit. But it didn't CC me??
    
    Fixes: 1b479fb80160 ("drivers/net/wan/hdlc_fr: Fix a double free in pvc_xmit")
    Cc: Lv Yunlong <lyl2019@mail.ustc.edu.cn>
    Signed-off-by: Xie He <xie.he.0141@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e4f06d5d55eab7cc9cda4de8459028ed54d7d31
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Tue Apr 20 04:13:03 2021 -0400

    KVM: selftests: Always run vCPU thread with blocked SIG_IPI
    
    commit bf1e15a82e3b74ee86bb119d6038b41e1ed2b319 upstream.
    
    The main thread could start to send SIG_IPI at any time, even before signal
    blocked on vcpu thread.  Therefore, start the vcpu thread with the signal
    blocked.
    
    Without this patch, on very busy cores the dirty_log_test could fail directly
    on receiving a SIGUSR1 without a handler (when vcpu runs far slower than main).
    
    Reported-by: Peter Xu <peterx@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b821282e38a72f04a585338bbe31c9ce6317f806
Author: Peter Xu <peterx@redhat.com>
Date:   Sat Apr 17 10:36:01 2021 -0400

    KVM: selftests: Sync data verify of dirty logging with guest sync
    
    commit 016ff1a442d9a8f36dcb3beca0bcdfc35e281e18 upstream.
    
    This fixes a bug that can trigger with e.g. "taskset -c 0 ./dirty_log_test" or
    when the testing host is very busy.
    
    A similar previous attempt is done [1] but that is not enough, the reason is
    stated in the reply [2].
    
    As a summary (partly quotting from [2]):
    
    The problem is I think one guest memory write operation (of this specific test)
    contains a few micro-steps when page is during kvm dirty tracking (here I'm
    only considering write-protect rather than pml but pml should be similar at
    least when the log buffer is full):
    
      (1) Guest read 'iteration' number into register, prepare to write, page fault
      (2) Set dirty bit in either dirty bitmap or dirty ring
      (3) Return to guest, data written
    
    When we verify the data, we assumed that all these steps are "atomic", say,
    when (1) happened for this page, we assume (2) & (3) must have happened.  We
    had some trick to workaround "un-atomicity" of above three steps, as previous
    version of this patch wanted to fix atomicity of step (2)+(3) by explicitly
    letting the main thread wait for at least one vmenter of vcpu thread, which
    should work.  However what I overlooked is probably that we still have race
    when (1) and (2) can be interrupted.
    
    One example calltrace when it could happen that we read an old interation, got
    interrupted before even setting the dirty bit and flushing data:
    
        __schedule+1742
        __cond_resched+52
        __get_user_pages+530
        get_user_pages_unlocked+197
        hva_to_pfn+206
        try_async_pf+132
        direct_page_fault+320
        kvm_mmu_page_fault+103
        vmx_handle_exit+288
        vcpu_enter_guest+2460
        kvm_arch_vcpu_ioctl_run+325
        kvm_vcpu_ioctl+526
        __x64_sys_ioctl+131
        do_syscall_64+51
        entry_SYSCALL_64_after_hwframe+68
    
    It means iteration number cached in vcpu register can be very old when dirty
    bit set and data flushed.
    
    So far I don't see an easy way to guarantee all steps 1-3 atomicity but to sync
    at the GUEST_SYNC() point of guest code when we do verification of the dirty
    bits as what this patch does.
    
    [1] https://lore.kernel.org/lkml/20210413213641.23742-1-peterx@redhat.com/
    [2] https://lore.kernel.org/lkml/20210417140956.GV4440@xz-x1/
    
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Sean Christopherson <seanjc@google.com>
    Cc: Andrew Jones <drjones@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Peter Xu <peterx@redhat.com>
    Message-Id: <20210417143602.215059-2-peterx@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4dd4e8d2cc88965a2739e2e83847946e4695ee00
Author: Eric Auger <eric.auger@redhat.com>
Date:   Mon Apr 5 18:39:34 2021 +0200

    KVM: arm64: Fix KVM_VGIC_V3_ADDR_TYPE_REDIST_REGION read
    
    commit 53b16dd6ba5cf64ed147ac3523ec34651d553cb0 upstream.
    
    The doc says:
    "The characteristics of a specific redistributor region can
     be read by presetting the index field in the attr data.
     Only valid for KVM_DEV_TYPE_ARM_VGIC_V3"
    
    Unfortunately the existing code fails to read the input attr data.
    
    Fixes: 04c110932225 ("KVM: arm/arm64: Implement KVM_VGIC_V3_ADDR_TYPE_REDIST_REGION")
    Cc: stable@vger.kernel.org#v4.17+
    Signed-off-by: Eric Auger <eric.auger@redhat.com>
    Reviewed-by: Alexandru Elisei <alexandru.elisei@arm.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210405163941.510258-3-eric.auger@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c6fc4ecc1d057a8986c759304b5a3292da40b7e
Author: Marc Zyngier <maz@kernel.org>
Date:   Wed Apr 7 18:54:16 2021 +0100

    KVM: arm64: Fully zero the vcpu state on reset
    
    commit 85d703746154cdc6794b6654b587b0b0354c97e9 upstream.
    
    On vcpu reset, we expect all the registers to be brought back
    to their initial state, which happens to be a bunch of zeroes.
    
    However, some recent commit broke this, and is now leaving a bunch
    of registers (such as the FP state) with whatever was left by the
    guest. My bad.
    
    Zero the reset of the state (32bit SPSRs and FPSIMD state).
    
    Cc: stable@vger.kernel.org
    Fixes: e47c2055c68e ("KVM: arm64: Make struct kvm_regs userspace-only")
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b1fec560e7085e03e04b0f2893fe829e5685bee
Author: David Brazdil <dbrazdil@google.com>
Date:   Wed Mar 31 13:30:48 2021 +0000

    KVM: arm64: Support PREL/PLT relocs in EL2 code
    
    commit 77e06b300161d41d65950be9c77a785c142b381d upstream.
    
    gen-hyprel tool parses object files of the EL2 portion of KVM
    and generates runtime relocation data. While only filtering for
    R_AARCH64_ABS64 relocations in the input object files, it has an
    allow-list of relocation types that are used for relative
    addressing. Other, unexpected, relocation types are rejected and
    cause the build to fail.
    
    This allow-list did not include the position-relative relocation
    types R_AARCH64_PREL64/32/16 and the recently introduced _PLT32.
    While not seen used by toolchains in the wild, add them to the
    allow-list for completeness.
    
    Fixes: 8c49b5d43d4c ("KVM: arm64: Generate hyp relocation data")
    Cc: <stable@vger.kernel.org>
    Reported-by: Will Deacon <will@kernel.org>
    Signed-off-by: David Brazdil <dbrazdil@google.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210331133048.63311-1-dbrazdil@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50cbad42bfea8c052b7ca590bd4126cdc898713c
Author: Sean Christopherson <seanjc@google.com>
Date:   Mon Apr 12 15:20:49 2021 -0700

    KVM: Stop looking for coalesced MMIO zones if the bus is destroyed
    
    commit 5d3c4c79384af06e3c8e25b7770b6247496b4417 upstream.
    
    Abort the walk of coalesced MMIO zones if kvm_io_bus_unregister_dev()
    fails to allocate memory for the new instance of the bus.  If it can't
    instantiate a new bus, unregister_dev() destroys all devices _except_ the
    target device.   But, it doesn't tell the caller that it obliterated the
    bus and invoked the destructor for all devices that were on the bus.  In
    the coalesced MMIO case, this can result in a deleted list entry
    dereference due to attempting to continue iterating on coalesced_zones
    after future entries (in the walk) have been deleted.
    
    Opportunistically add curly braces to the for-loop, which encompasses
    many lines but sneaks by without braces due to the guts being a single
    if statement.
    
    Fixes: f65886606c2d ("KVM: fix memory leak in kvm_io_bus_unregister_dev()")
    Cc: stable@vger.kernel.org
    Reported-by: Hao Sun <sunhao.th@gmail.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210412222050.876100-3-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 30f46c6993731efb2a690c9197c0fd9ed425da2d
Author: Sean Christopherson <seanjc@google.com>
Date:   Mon Apr 12 15:20:48 2021 -0700

    KVM: Destroy I/O bus devices on unregister failure _after_ sync'ing SRCU
    
    commit 2ee3757424be7c1cd1d0bbfa6db29a7edd82a250 upstream.
    
    If allocating a new instance of an I/O bus fails when unregistering a
    device, wait to destroy the device until after all readers are guaranteed
    to see the new null bus.  Destroying devices before the bus is nullified
    could lead to use-after-free since readers expect the devices on their
    reference of the bus to remain valid.
    
    Fixes: f65886606c2d ("KVM: fix memory leak in kvm_io_bus_unregister_dev()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210412222050.876100-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a2bc4ca001313a8304ccb6aa56d0301acb55ad13
Author: Eric Auger <eric.auger@redhat.com>
Date:   Mon Apr 12 17:00:34 2021 +0200

    KVM: arm/arm64: Fix KVM_VGIC_V3_ADDR_TYPE_REDIST read
    
    commit 94ac0835391efc1a30feda6fc908913ec012951e upstream.
    
    When reading the base address of the a REDIST region
    through KVM_VGIC_V3_ADDR_TYPE_REDIST we expect the
    redistributor region list to be populated with a single
    element.
    
    However list_first_entry() expects the list to be non empty.
    Instead we should use list_first_entry_or_null which effectively
    returns NULL if the list is empty.
    
    Fixes: dbd9733ab674 ("KVM: arm/arm64: Replace the single rdist region by a list")
    Cc: <Stable@vger.kernel.org> # v4.18+
    Signed-off-by: Eric Auger <eric.auger@redhat.com>
    Reported-by: Gavin Shan <gshan@redhat.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210412150034.29185-1-eric.auger@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0a0625e459cd19a5dd9ee9e4937216ceaa8ffaa
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Apr 21 19:21:25 2021 -0700

    KVM: nVMX: Truncate base/index GPR value on address calc in !64-bit
    
    commit 82277eeed65eed6c6ee5b8f97bd978763eab148f upstream.
    
    Drop bits 63:32 of the base and/or index GPRs when calculating the
    effective address of a VMX instruction memory operand.  Outside of 64-bit
    mode, memory encodings are strictly limited to E*X and below.
    
    Fixes: 064aea774768 ("KVM: nVMX: Decoding memory operands of VMX instructions")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210422022128.3464144-7-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1194e31eaea54f29f7cd55de4d130aa85d8d5396
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Apr 21 19:21:24 2021 -0700

    KVM: nVMX: Truncate bits 63:32 of VMCS field on nested check in !64-bit
    
    commit ee050a577523dfd5fac95e6cc182ebe0293ead59 upstream.
    
    Drop bits 63:32 of the VMCS field encoding when checking for a nested
    VM-Exit on VMREAD/VMWRITE in !64-bit mode.  VMREAD and VMWRITE always
    use 32-bit operands outside of 64-bit mode.
    
    The actual emulation of VMREAD/VMWRITE does the right thing, this bug is
    purely limited to incorrectly causing a nested VM-Exit if a GPR happens
    to have bits 63:32 set outside of 64-bit mode.
    
    Fixes: a7cde481b6e8 ("KVM: nVMX: Do not forward VMREAD/VMWRITE VMExits to L1 if required so by vmcs12 vmread/vmwrite bitmaps")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210422022128.3464144-6-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d386331268cfb4bd3239870ae4bb97ba38e2fbb
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Apr 21 19:21:23 2021 -0700

    KVM: VMX: Truncate GPR value for DR and CR reads in !64-bit mode
    
    commit d8971344f5739a9cc53f91f1f593ddd82265b93b upstream.
    
    Drop bits 63:32 when storing a DR/CR to a GPR when the vCPU is not in
    64-bit mode.  Per the SDM:
    
      The operand size for these instructions is always 32 bits in non-64-bit
      modes, regardless of the operand-size attribute.
    
    CR8 technically isn't affected as CR8 isn't accessible outside of 64-bit
    mode, but fix it up for consistency and to allow for future cleanup.
    
    Fixes: 6aa8b732ca01 ("[PATCH] kvm: userspace interface")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210422022128.3464144-5-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5746acdd0af84a48e82448423e2757a50d0d7133
Author: Sean Christopherson <seanjc@google.com>
Date:   Thu Mar 4 17:10:57 2021 -0800

    KVM: nVMX: Defer the MMU reload to the normal path on an EPTP switch
    
    commit c805f5d5585ab5e0cdac6b1ccf7086eb120fb7db upstream.
    
    Defer reloading the MMU after a EPTP successful EPTP switch.  The VMFUNC
    instruction itself is executed in the previous EPTP context, any side
    effects, e.g. updating RIP, should occur in the old context.  Practically
    speaking, this bug is benign as VMX doesn't touch the MMU when skipping
    an emulated instruction, nor does queuing a single-step #DB.  No other
    post-switch side effects exist.
    
    Fixes: 41ab93727467 ("KVM: nVMX: Emulate EPTP switching for the L1 hypervisor")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210305011101.3597423-14-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00ba45aaf834f7944e89c77c1ba69c2d88e203d6
Author: Sean Christopherson <seanjc@google.com>
Date:   Fri Apr 23 15:34:01 2021 -0700

    KVM: SVM: Inject #GP on guest MSR_TSC_AUX accesses if RDTSCP unsupported
    
    commit 6f2b296aa6432d8274e258cc3220047ca04f5de0 upstream.
    
    Inject #GP on guest accesses to MSR_TSC_AUX if RDTSCP is unsupported in
    the guest's CPUID model.
    
    Fixes: 46896c73c1a4 ("KVM: svm: add support for RDTSCP")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210423223404.3860547-2-seanjc@google.com>
    Reviewed-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6dbfe62155822e530c0d6ecb95582d18c1e63a30
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Mar 30 20:19:36 2021 -0700

    KVM: SVM: Do not allow SEV/SEV-ES initialization after vCPUs are created
    
    commit 8727906fde6ea665b52e68ddc58833772537f40a upstream.
    
    Reject KVM_SEV_INIT and KVM_SEV_ES_INIT if they are attempted after one
    or more vCPUs have been created.  KVM assumes a VM is tagged SEV/SEV-ES
    prior to vCPU creation, e.g. init_vmcb() needs to mark the VMCB as SEV
    enabled, and svm_create_vcpu() needs to allocate the VMSA.  At best,
    creating vCPUs before SEV/SEV-ES init will lead to unexpected errors
    and/or behavior, and at worst it will crash the host, e.g.
    sev_launch_update_vmsa() will dereference a null svm->vmsa pointer.
    
    Fixes: 1654efcbc431 ("KVM: SVM: Add KVM_SEV_INIT command")
    Fixes: ad73109ae7ec ("KVM: SVM: Provide support to launch and run an SEV-ES guest")
    Cc: stable@vger.kernel.org
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210331031936.2495277-4-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd88ede84e43bb6be419d626152a82f7dcc41b9a
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Mar 30 20:19:35 2021 -0700

    KVM: SVM: Do not set sev->es_active until KVM_SEV_ES_INIT completes
    
    commit 9fa1521daafb58d878d03d75f6863a11312fae22 upstream.
    
    Set sev->es_active only after the guts of KVM_SEV_ES_INIT succeeds.  If
    the command fails, e.g. because SEV is already active or there are no
    available ASIDs, then es_active will be left set even though the VM is
    not fully SEV-ES capable.
    
    Refactor the code so that "es_active" is passed on the stack instead of
    being prematurely shoved into sev_info, both to avoid having to unwind
    sev_info and so that it's more obvious what actually consumes es_active
    in sev_guest_init() and its helpers.
    
    Fixes: ad73109ae7ec ("KVM: SVM: Provide support to launch and run an SEV-ES guest")
    Cc: stable@vger.kernel.org
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210331031936.2495277-3-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ba7bf5d6336aa9c0d977b161bfa420c56d46ee40
Author: Sean Christopherson <seanjc@google.com>
Date:   Tue Mar 30 20:19:34 2021 -0700

    KVM: SVM: Use online_vcpus, not created_vcpus, to iterate over vCPUs
    
    commit c36b16d29f3af5f32fc1b2a3401bf48f71cabee1 upstream.
    
    Use the kvm_for_each_vcpu() helper to iterate over vCPUs when encrypting
    VMSAs for SEV, which effectively switches to use online_vcpus instead of
    created_vcpus.  This fixes a possible null-pointer dereference as
    created_vcpus does not guarantee a vCPU exists, since it is updated at
    the very beginning of KVM_CREATE_VCPU.  created_vcpus exists to allow the
    bulk of vCPU creation to run in parallel, while still correctly
    restricting the max number of max vCPUs.
    
    Fixes: ad73109ae7ec ("KVM: SVM: Provide support to launch and run an SEV-ES guest")
    Cc: stable@vger.kernel.org
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210331031936.2495277-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62ae40d4281a1cb3d0b3e87f4d9deb466efde156
Author: Sean Christopherson <seanjc@google.com>
Date:   Thu Mar 4 17:10:56 2021 -0800

    KVM: SVM: Don't strip the C-bit from CR2 on #PF interception
    
    commit 6d1b867d045699d6ce0dfa0ef35d1b87dd36db56 upstream.
    
    Don't strip the C-bit from the faulting address on an intercepted #PF,
    the address is a virtual address, not a physical address.
    
    Fixes: 0ede79e13224 ("KVM: SVM: Clear C-bit from the page fault address")
    Cc: stable@vger.kernel.org
    Cc: Brijesh Singh <brijesh.singh@amd.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210305011101.3597423-13-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd9c924a487a6bb5b0e9209ad5b76ec7cce81378
Author: Sean Christopherson <seanjc@google.com>
Date:   Thu Mar 4 17:10:45 2021 -0800

    KVM: nSVM: Set the shadow root level to the TDP level for nested NPT
    
    commit a3322d5cd87fef5ec0037fd1b14068a533f9a60f upstream.
    
    Override the shadow root level in the MMU context when configuring
    NPT for shadowing nested NPT.  The level is always tied to the TDP level
    of the host, not whatever level the guest happens to be using.
    
    Fixes: 096586fda522 ("KVM: nSVM: Correctly set the shadow NPT root level in its MMU role")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210305011101.3597423-2-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00f892e28e1ad4dfe15e212f22ed07749ce06c68
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Apr 21 19:21:20 2021 -0700

    KVM: x86: Remove emulator's broken checks on CR0/CR3/CR4 loads
    
    commit d0fe7b6404408835ed60232cb3bf28324b2f95db upstream.
    
    Remove the emulator's checks for illegal CR0, CR3, and CR4 values, as
    the checks are redundant, outdated, and in the case of SEV's C-bit,
    broken.  The emulator manually calculates MAXPHYADDR from CPUID and
    neglects to mask off the C-bit.  For all other checks, kvm_set_cr*() are
    a superset of the emulator checks, e.g. see CR4.LA57.
    
    Fixes: a780a3ea6282 ("KVM: X86: Fix reserved bits check for MOV to CR3")
    Cc: Babu Moger <babu.moger@amd.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210422022128.3464144-2-seanjc@google.com>
    Cc: stable@vger.kernel.org
    [Unify check_cr_read and check_cr_write. - Paolo]
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c466d1bd7d643fcf0d84e6a2a02f358f7daa858
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Apr 21 19:21:21 2021 -0700

    KVM: x86: Check CR3 GPA for validity regardless of vCPU mode
    
    commit 886bbcc7a523b8d4fac60f1015d2e0fcad50db82 upstream.
    
    Check CR3 for an invalid GPA even if the vCPU isn't in long mode.  For
    bigger emulation flows, notably RSM, the vCPU mode may not be accurate
    if CR0/CR4 are loaded after CR3.  For MOV CR3 and similar flows, the
    caller is responsible for truncating the value.
    
    Fixes: 660a5d517aaa ("KVM: x86: save/load state on SMM switch")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210422022128.3464144-3-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36825931c6076dbc3ceff61b2a1fed779d9c8177
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Thu Apr 22 11:29:48 2021 +0200

    KVM: x86: Properly handle APF vs disabled LAPIC situation
    
    commit 2f15d027c05fac406decdb5eceb9ec0902b68f53 upstream.
    
    Async PF 'page ready' event may happen when LAPIC is (temporary) disabled.
    In particular, Sebastien reports that when Linux kernel is directly booted
    by Cloud Hypervisor, LAPIC is 'software disabled' when APF mechanism is
    initialized. On initialization KVM tries to inject 'wakeup all' event and
    puts the corresponding token to the slot. It is, however, failing to inject
    an interrupt (kvm_apic_set_irq() -> __apic_accept_irq() -> !apic_enabled())
    so the guest never gets notified and the whole APF mechanism gets stuck.
    The same issue is likely to happen if the guest temporary disables LAPIC
    and a previously unavailable page becomes available.
    
    Do two things to resolve the issue:
    - Avoid dequeuing 'page ready' events from APF queue when LAPIC is
      disabled.
    - Trigger an attempt to deliver pending 'page ready' events when LAPIC
      becomes enabled (SPIV or MSR_IA32_APICBASE).
    
    Reported-by: Sebastien Boeuf <sebastien.boeuf@intel.com>
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Message-Id: <20210422092948.568327-1-vkuznets@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f62bc34d2890b9363d34813f75b1eea8ab523bd0
Author: Wanpeng Li <wanpengli@tencent.com>
Date:   Thu Apr 22 16:34:19 2021 +0800

    KVM: X86: Fix failure to boost kernel lock holder candidate in SEV-ES guests
    
    commit b86bb11e3a79ac0db9a6786b1fe80f74321cb076 upstream.
    
    Commit f1c6366e3043 ("KVM: SVM: Add required changes to support intercepts under
    SEV-ES") prevents hypervisor accesses guest register state when the guest is
    running under SEV-ES. The initial value of vcpu->arch.guest_state_protected
    is false, it will not be updated in preemption notifiers after this commit which
    means that the kernel spinlock lock holder will always be skipped to boost. Let's
    fix it by always treating preempted is in the guest kernel mode, false positive
    is better than skip completely.
    
    Fixes: f1c6366e3043 (KVM: SVM: Add required changes to support intercepts under SEV-ES)
    Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
    Message-Id: <1619080459-30032-1-git-send-email-wanpengli@tencent.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dd42721d3a0e5f4e00c83d1f2da68c4d7468949f
Author: Sean Christopherson <seanjc@google.com>
Date:   Wed Apr 21 19:21:26 2021 -0700

    KVM: x86/xen: Drop RAX[63:32] when processing hypercall
    
    commit 6b48fd4cb206485c357420d91ea766ef81b20dc3 upstream.
    
    Truncate RAX to 32 bits, i.e. consume EAX, when retrieving the hypecall
    index for a Xen hypercall.  Per Xen documentation[*], the index is EAX
    when the vCPU is not in 64-bit mode.
    
    [*] http://xenbits.xenproject.org/docs/sphinx-unstable/guest-guide/x86/hypercall-abi.html
    
    Fixes: 23200b7a30de ("KVM: x86/xen: intercept xen hypercalls if enabled")
    Cc: Joao Martins <joao.m.martins@oracle.com>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210422022128.3464144-8-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a974aed548b20bf6483b6098d830cdd22fd5bcb8
Author: Sean Christopherson <seanjc@google.com>
Date:   Thu Mar 4 17:10:46 2021 -0800

    KVM: x86/mmu: Alloc page for PDPTEs when shadowing 32-bit NPT with 64-bit
    
    commit 04d45551a1eefbea42655da52f56e846c0af721a upstream.
    
    Allocate the so called pae_root page on-demand, along with the lm_root
    page, when shadowing 32-bit NPT with 64-bit NPT, i.e. when running a
    32-bit L1.  KVM currently only allocates the page when NPT is disabled,
    or when L0 is 32-bit (using PAE paging).
    
    Note, there is an existing memory leak involving the MMU roots, as KVM
    fails to free the PAE roots on failure.  This will be addressed in a
    future commit.
    
    Fixes: ee6268ba3a68 ("KVM: x86: Skip pae_root shadow allocation if tdp enabled")
    Fixes: b6b80c78af83 ("KVM: x86/mmu: Allocate PAE root array when using SVM's 32-bit NPT")
    Cc: stable@vger.kernel.org
    Reviewed-by: Ben Gardon <bgardon@google.com>
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210305011101.3597423-3-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8032e13979d944aa8bbafaac66e22deeb4365b4
Author: Claudio Imbrenda <imbrenda@linux.ibm.com>
Date:   Mon Feb 1 17:26:54 2021 +0100

    KVM: s390: extend kvm_s390_shadow_fault to return entry pointer
    
    commit 5ac14bac08ae827b619f21bcceaaac3b8c497e31 upstream.
    
    Extend kvm_s390_shadow_fault to return the pointer to the valid leaf
    DAT table entry, or to the invalid entry.
    
    Also return some flags in the lower bits of the address:
    PEI_DAT_PROT: indicates that DAT protection applies because of the
                  protection bit in the segment (or, if EDAT, region) tables.
    PEI_NOT_PTE: indicates that the address of the DAT table entry returned
                 does not refer to a PTE, but to a segment or region table.
    
    Signed-off-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Janosch Frank <frankja@de.ibm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Link: https://lore.kernel.org/r/20210302174443.514363-3-imbrenda@linux.ibm.com
    [borntraeger@de.ibm.com: fold in a fix from Claudio]
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f09435247c5fb891b12feec5d3cf4c91898570ae
Author: Claudio Imbrenda <imbrenda@linux.ibm.com>
Date:   Mon Mar 22 15:05:58 2021 +0100

    KVM: s390: split kvm_s390_real_to_abs
    
    commit c5d1f6b531e68888cbe6718b3f77a60115d58b9c upstream.
    
    A new function _kvm_s390_real_to_abs will apply prefixing to a real address
    with a given prefix value.
    
    The old kvm_s390_real_to_abs becomes now a wrapper around the new function.
    
    This is needed to avoid code duplication in vSIE.
    
    Signed-off-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Thomas Huth <thuth@redhat.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210322140559.500716-2-imbrenda@linux.ibm.com
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8baf398f50f155e15495d16e300cd73027211d86
Author: Claudio Imbrenda <imbrenda@linux.ibm.com>
Date:   Mon Mar 22 15:05:59 2021 +0100

    KVM: s390: VSIE: fix MVPG handling for prefixing and MSO
    
    commit c3171e94cc1cdcc3229565244112e869f052b8d9 upstream.
    
    Prefixing needs to be applied to the guest real address to translate it
    into a guest absolute address.
    
    The value of MSO needs to be added to a guest-absolute address in order to
    obtain the host-virtual.
    
    Fixes: bdf7509bbefa ("s390/kvm: VSIE: correctly handle MVPG when in VSIE")
    Reported-by: Janosch Frank <frankja@linux.ibm.com>
    Signed-off-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Cc: stable@vger.kernel.org
    Link: https://lore.kernel.org/r/20210322140559.500716-3-imbrenda@linux.ibm.com
    [borntraeger@de.ibm.com simplify mso]
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f5a0098b46b21fc2e6c5d82246d6b6af0f8887fd
Author: David Hildenbrand <david@redhat.com>
Date:   Mon May 3 14:12:44 2021 +0200

    s390: fix detection of vector enhancements facility 1 vs. vector packed decimal facility
    
    commit b208108638c4bd3215792415944467c36f5dfd97 upstream.
    
    The PoP documents:
            134: The vector packed decimal facility is installed in the
                 z/Architecture architectural mode. When bit 134 is
                 one, bit 129 is also one.
            135: The vector enhancements facility 1 is installed in
                 the z/Architecture architectural mode. When bit 135
                 is one, bit 129 is also one.
    
    Looks like we confuse the vector enhancements facility 1 ("EXT") with the
    Vector packed decimal facility ("BCD"). Let's fix the facility checks.
    
    Detected while working on QEMU/tcg z14 support and only unlocking
    the vector enhancements facility 1, but not the vector packed decimal
    facility.
    
    Fixes: 2583b848cad0 ("s390: report new vector facilities")
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Reviewed-by: Janosch Frank <frankja@linux.ibm.com>
    Link: https://lore.kernel.org/r/20210503121244.25232-1-david@redhat.com
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4f5a74461656b3d3e44abee987cb33cbdf46b8a2
Author: Heiko Carstens <hca@linux.ibm.com>
Date:   Thu Apr 15 10:01:27 2021 +0200

    KVM: s390: fix guarded storage control register handling
    
    commit 44bada28219031f9e8e86b84460606efa57b871e upstream.
    
    store_regs_fmt2() has an ordering problem: first the guarded storage
    facility is enabled on the local cpu, then preemption disabled, and
    then the STGSC (store guarded storage controls) instruction is
    executed.
    
    If the process gets scheduled away between enabling the guarded
    storage facility and before preemption is disabled, this might lead to
    a special operation exception and therefore kernel crash as soon as
    the process is scheduled back and the STGSC instruction is executed.
    
    Fixes: 4e0b1ab72b8a ("KVM: s390: gs support for kvm guests")
    Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Reviewed-by: Janosch Frank <frankja@linux.ibm.com>
    Reviewed-by: Cornelia Huck <cohuck@redhat.com>
    Cc: <stable@vger.kernel.org> # 4.12
    Link: https://lore.kernel.org/r/20210415080127.1061275-1-hca@linux.ibm.com
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 02a9126f51a50bceb3c3b4a15ca8cd9a40485ccc
Author: Claudio Imbrenda <imbrenda@linux.ibm.com>
Date:   Tue Mar 2 13:36:44 2021 +0100

    KVM: s390: split kvm_s390_logical_to_effective
    
    commit f85f1baaa18932a041fd2b1c2ca6cfd9898c7d2b upstream.
    
    Split kvm_s390_logical_to_effective to a generic function called
    _kvm_s390_logical_to_effective. The new function takes a PSW and an address
    and returns the address with the appropriate bits masked off. The old
    function now calls the new function with the appropriate PSW from the vCPU.
    
    This is needed to avoid code duplication for vSIE.
    
    Signed-off-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: stable@vger.kernel.org # for VSIE: correctly handle MVPG when in VSIE
    Link: https://lore.kernel.org/r/20210302174443.514363-2-imbrenda@linux.ibm.com
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aac02c6bfdd65ecf38bdeac842e7fe6a8b3acef3
Author: Claudio Imbrenda <imbrenda@linux.ibm.com>
Date:   Mon Feb 1 21:54:13 2021 +0100

    KVM: s390: VSIE: correctly handle MVPG when in VSIE
    
    commit bdf7509bbefa20855d5f6bacdc5b62a8489477c9 upstream.
    
    Correctly handle the MVPG instruction when issued by a VSIE guest.
    
    Fixes: a3508fbe9dc6d ("KVM: s390: vsie: initial support for nested virtualization")
    Cc: stable@vger.kernel.org # f85f1baaa189: KVM: s390: split kvm_s390_logical_to_effective
    Signed-off-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
    Acked-by: Janosch Frank <frankja@linux.ibm.com>
    Reviewed-by: David Hildenbrand <david@redhat.com>
    Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Link: https://lore.kernel.org/r/20210302174443.514363-4-imbrenda@linux.ibm.com
    [borntraeger@de.ibm.com: apply fixup from Claudio]
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f13e4287be654cf7558218e68f56e929e356d7e0
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue May 4 11:18:02 2021 +0200

    ALSA: hda/realtek: Fix speaker amp on HP Envy AiO 32
    
    commit 622464c893142f7beac89f5ba8c9773bca5e5004 upstream.
    
    HP Envy AiO 32-a12xxx has an external amp that is controlled via GPIO
    bit 0x04.  However, unlike other devices, this amp seems to shut down
    itself after the certain period, hence the OS needs to up/down the bit
    dynamically only during the actual playback.
    
    This patch adds the control of the GPIO bit via the existing pcm_hook
    mechanism.  Ideally it should be triggered at the actual stream start,
    but we have only the state change at prepare/cleanup, so use those for
    switching the GPIO bit on/off.  This should be good enough for the
    purpose, and was actually confirmed to work fine.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=212873
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210504091802.13200-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e73bf2eb82d68d9a2cf124016d04d4025a678ea8
Author: Sami Loone <sami@loone.fi>
Date:   Sat May 1 12:07:53 2021 +0200

    ALSA: hda/realtek: ALC285 Thinkpad jack pin quirk is unreachable
    
    commit 266fd994b2b0ab7ba3e5541868838ce30775964b upstream.
    
    In 9bbb94e57df1 ("ALSA: hda/realtek: fix static noise on ALC285 Lenovo
    laptops") an existing Lenovo quirk was made more generic by removing a
    0x12 pin requirement from the entry. This made the second chance table
    Thinkpad jack entry unreachable as the pin configurations became
    identical.
    
    Revert the 0x12 pin requirement removal and move Thinkpad jack pin quirk
    back to the primary pin table as they can co-exist when more specific
    configurations come first.
    
    Add a more targeted pin quirk for Lenovo devices that have 0x12 as
    0x40000000.
    
    Tested on Yoga 6 (AMD) laptop.
    
    [ Corrected the commit ID -- tiwai ]
    
    Fixes: 9bbb94e57df1 ("ALSA: hda/realtek: fix static noise on ALC285 Lenovo laptops")
    Signed-off-by: Sami Loone <sami@loone.fi>
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/YI0oefvTYn8URYDb@yoga
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e9a107d241020da5627f99f120deab3ef277e97
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:27:03 2021 +0200

    ALSA: hda/realtek: Remove redundant entry for ALC861 Haier/Uniwill devices
    
    commit defce244b01ee12534910a4544e11be5eb927d25 upstream.
    
    The quirk entry for Uniwill ECS M31EI is with the PCI SSID device 0,
    which means matching with all.  That is, it's essentially equivalent
    with SND_PCI_QUIRK_VENDOR(0x1584), which also matches with the
    previous entry for Haier W18 applying the very same quirk.
    
    Let's unify them with the single vendor-quirk entry.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-13-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b769a6285896b51f6d7fdcde863bda29d1a2d161
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:27:02 2021 +0200

    ALSA: hda/realtek: Re-order ALC662 quirk table entries
    
    commit 9edeb1109d05953b2f0e24e5b2341a98c3fa78d5 upstream.
    
    Just re-order the alc662_fixup_tbl[] entries for Acer and ASUS devices
    for avoiding the oversight of the duplicated or unapplied item in
    future.
    No functional changes.
    
    Also Cc-to-stable for the further patch applications.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-12-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a3cef89e9101d422c8fdc04682565581fa88a88c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:27:01 2021 +0200

    ALSA: hda/realtek: Re-order remaining ALC269 quirk table entries
    
    commit c656f747df151a0a89756a5312f4ca2116758ba4 upstream.
    
    Just re-order the alc269_fixup_tbl[] entries for FSC, Medion, Samsung
    and Lemote devices for avoiding the oversight of the duplicated or
    unapplied item in future.
    No functional changes.
    
    Also Cc-to-stable for the further patch applications.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-11-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d115e658d594f0c4f1df959e676fdd2be3070a89
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:27:00 2021 +0200

    ALSA: hda/realtek: Re-order ALC269 Lenovo quirk table entries
    
    commit f552ff54c2a700616a02b038e4bf3cbf859f65b7 upstream.
    
    Just re-order the alc269_fixup_tbl[] entries for Lenovo devices for
    avoiding the oversight of the duplicated or unapplied item in future.
    No functional changes.
    
    Also Cc-to-stable for the further patch applications.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-10-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1698d55bf8c619c777a830d34c9ab00819eb3e9c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:26:59 2021 +0200

    ALSA: hda/realtek: Re-order ALC269 Sony quirk table entries
    
    commit cab561f8d4bc9b196ae20c960aa5da89fd786ab5 upstream.
    
    Just re-order the alc269_fixup_tbl[] entries for Sony devices for
    avoiding the oversight of the duplicated or unapplied item in future.
    No functional changes.
    
    Also Cc-to-stable for the further patch applications.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-9-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c3465fc2df8d7501790d964abd0a33e46a7cdf8
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:26:58 2021 +0200

    ALSA: hda/realtek: Re-order ALC269 ASUS quirk table entries
    
    commit 3cd0ed636dd19e7fbe3ebe8de8476e1718d5a8f1 upstream.
    
    Just re-order the alc269_fixup_tbl[] entries for ASUS devices for
    avoiding the oversight of the duplicated or unapplied item in future.
    No functional changes.
    
    Also Cc-to-stable for the further patch applications.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-8-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13abe4452472591e703ea55b11a2a6c15a818501
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:26:57 2021 +0200

    ALSA: hda/realtek: Re-order ALC269 Dell quirk table entries
    
    commit aa143ad39a52d968ac69e426d329bb74f270e6ca upstream.
    
    Just re-order the alc269_fixup_tbl[] entries for Dell devices for
    avoiding the oversight of the duplicated or unapplied item in future.
    No functional changes.
    
    Also Cc-to-stable for the further patch applications.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-7-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ff6fb1076ac18384a0d5cafc1e4b485e4fcafd0
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:26:56 2021 +0200

    ALSA: hda/realtek: Re-order ALC269 Acer quirk table entries
    
    commit 433f894ec7fbd3b4bf1f3187b2ddd566078c4aef upstream.
    
    Just re-order the alc269_fixup_tbl[] entries for Acer devices for
    avoiding the oversight of the duplicated or unapplied item in future.
    No functional changes.
    
    Also Cc-to-stable for the further patch applications.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-6-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0848b321992003372190dc4cb7a21e57a2e81f4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:26:55 2021 +0200

    ALSA: hda/realtek: Re-order ALC269 HP quirk table entries
    
    commit 45461e3b554c75ddff9703539f3711cc3dfb0422 upstream.
    
    Just re-order the alc269_fixup_tbl[] entries for HP devices for
    avoiding the oversight of the duplicated or unapplied item in future.
    No functional changes.
    
    Formerly, some entries were grouped for the actual codec, but this
    doesn't seem reasonable to keep in that way.  So now we simply keep
    the PCI SSID order for the whole.
    
    Also Cc-to-stable for the further patch applications.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-5-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8335fdd8783f7c44547e0419f5276085d1e800a4
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:26:54 2021 +0200

    ALSA: hda/realtek: Re-order ALC882 Clevo quirk table entries
    
    commit 13e1a4cd490b959a4c72c9f4fb502ef56b190062 upstream.
    
    Just re-order the alc882_fixup_tbl[] entries for Clevo devices for
    avoiding the oversight of the duplicated or unapplied item in future.
    No functional changes.
    
    Also, user lower hex letters in the entry.
    
    Also Cc-to-stable for the further patch applications.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-4-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d5fa5c3d3ee94f20c2d8b3dd23db8ffad1d97a3
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:26:53 2021 +0200

    ALSA: hda/realtek: Re-order ALC882 Sony quirk table entries
    
    commit b7529c18feecb1af92f9db08c8e7fe446a82d96d upstream.
    
    Just re-order the alc882_fixup_tbl[] entries for Sony devices for
    avoiding the oversight of the duplicated or unapplied item in future.
    No functional changes.
    
    Also Cc-to-stable for the further patch applications.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-3-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9e224a129dd8cabf98081aaeedc29b593dc9594
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Apr 28 13:26:52 2021 +0200

    ALSA: hda/realtek: Re-order ALC882 Acer quirk table entries
    
    commit b265047ac56bad8c4f3d0c8bf9cb4e828ee0d28e upstream.
    
    Just re-order the alc882_fixup_tbl[] entries for Acer devices for
    avoiding the oversight of the duplicated or unapplied item in future.
    No functional changes.
    
    Also Cc-to-stable for the further patch applications.
    
    Cc: <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210428112704.23967-2-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9864a6b0ab3860e9f462b5f23b653762c1657a9
Author: Bas Nieuwenhuizen <bas@basnieuwenhuizen.nl>
Date:   Wed May 5 03:27:49 2021 +0200

    drm/amdgpu: Init GFX10_ADDR_CONFIG for VCN v3 in DPG mode.
    
    commit 8bf073ca9235fe38d7b74a0b4e779cfa7cc70fc9 upstream.
    
    Otherwise tiling modes that require the values form this field
    (In particular _*_X) would be corrupted upon video decode.
    
    Copied from the VCN v2 code.
    
    Fixes: 99541f392b4d ("drm/amdgpu: add mc resume DPG mode for VCN3.0")
    Reviewed-and-Tested by: Leo Liu <leo.liu@amd.com>
    Signed-off-by: Bas Nieuwenhuizen <bas@basnieuwenhuizen.nl>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cf7889354f24622d6007ad303ac5248d15f11bae
Author: Victor Zhao <Victor.Zhao@amd.com>
Date:   Tue Apr 27 17:52:56 2021 +0800

    drm/amdgpu: fix r initial values
    
    commit 4b12ee6f426e5e36396501a58f3a1af5b92a7e06 upstream.
    
    Sriov gets suspend of IP block <dce_virtual> failed as return
    value was not initialized.
    
    v2: return 0 directly to align original code semantic before this
    was broken out into a separate helper function instead of setting
    initial values
    
    Signed-off-by: Victor Zhao <Victor.Zhao@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c3697e3f91939fcb6d09329c72979637bfcd2c6
Author: Evan Quan <evan.quan@amd.com>
Date:   Wed Apr 28 12:00:20 2021 +0800

    drm/amdgpu: add new MC firmware for Polaris12 32bit ASIC
    
    commit c83c4e1912446db697a120eb30126cd80cbf6349 upstream.
    
    Polaris12 32bit ASIC needs a special MC firmware.
    
    Signed-off-by: Evan Quan <evan.quan@amd.com>
    Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d8568b72485a9df0a3b0ed3442bb588d4de1277
Author: Christian König <christian.koenig@amd.com>
Date:   Thu Apr 22 13:11:39 2021 +0200

    drm/amdgpu: fix concurrent VM flushes on Vega/Navi v2
    
    commit 20a5f5a98e1bb3d40acd97e89299e8c2d22784be upstream.
    
    Starting with Vega the hardware supports concurrent flushes
    of VMID which can be used to implement per process VMID
    allocation.
    
    But concurrent flushes are mutual exclusive with back to
    back VMID allocations, fix this to avoid a VMID used in
    two ways at the same time.
    
    v2: don't set ring to NULL
    
    Signed-off-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: James Zhu <James.Zhu@amd.com>
    Tested-by: James Zhu <James.Zhu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e304cfd8cc67495b41eff16cf690f2a256bfd7c9
Author: Harry Wentland <harry.wentland@amd.com>
Date:   Thu Apr 22 19:10:52 2021 -0400

    drm/amd/display: Reject non-zero src_y and src_x for video planes
    
    commit d89f6048bdcb6a56abb396c584747d5eeae650db upstream.
    
    [Why]
    This hasn't been well tested and leads to complete system hangs on DCN1
    based systems, possibly others.
    
    The system hang can be reproduced by gesturing the video on the YouTube
    Android app on ChromeOS into full screen.
    
    [How]
    Reject atomic commits with non-zero drm_plane_state.src_x or src_y values.
    
    v2:
     - Add code comment describing the reason we're rejecting non-zero
       src_x and src_y
     - Drop gerrit Change-Id
     - Add stable CC
     - Based on amd-staging-drm-next
    
    v3: removed trailing whitespace
    
    Signed-off-by: Harry Wentland <harry.wentland@amd.com>
    Cc: stable@vger.kernel.org
    Cc: nicholas.kazlauskas@amd.com
    Cc: amd-gfx@lists.freedesktop.org
    Cc: alexander.deucher@amd.com
    Cc: Roman.Li@amd.com
    Cc: hersenxs.wu@amd.com
    Cc: danny.wang@amd.com
    Reviewed-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Acked-by: Christian König <christian.koenig@amd.com>
    Reviewed-by: Hersen Wu <hersenxs.wu@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98d7d76a74e48ec3ddf2e23950adff7edcab9327
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Sat Mar 27 11:57:40 2021 +0000

    drm: bridge/panel: Cleanup connector on bridge detach
    
    commit 4d906839d321c2efbf3fed4bc31ffd9ff55b75c0 upstream.
    
    If we don't call drm_connector_cleanup() manually in
    panel_bridge_detach(), the connector will be cleaned up with the other
    DRM objects in the call to drm_mode_config_cleanup(). However, since our
    drm_connector is devm-allocated, by the time drm_mode_config_cleanup()
    will be called, our connector will be long gone. Therefore, the
    connector must be cleaned up when the bridge is detached to avoid
    use-after-free conditions.
    
    v2: Cleanup connector only if it was created
    
    v3: Add FIXME
    
    v4: (Use connector->dev) directly in if() block
    
    Fixes: 13dfc0540a57 ("drm/bridge: Refactor out the panel wrapper from the lvds-encoder bridge.")
    Cc: <stable@vger.kernel.org> # 4.12+
    Cc: Andrzej Hajda <a.hajda@samsung.com>
    Cc: Neil Armstrong <narmstrong@baylibre.com>
    Cc: Laurent Pinchart <Laurent.pinchart@ideasonboard.com>
    Cc: Jonas Karlman <jonas@kwiboo.se>
    Cc: Jernej Skrabec <jernej.skrabec@siol.net>
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210327115742.18986-2-paul@crapouillou.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ab5778889e580f3c980d3c01514dccce63cfc61
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Thu Apr 15 11:36:19 2021 -0700

    drm: bridge: fix ANX7625 use of mipi_dsi_() functions
    
    commit ed01fca38717169fcb61bd45ad1c3750d9c40d59 upstream.
    
    The Analogix DRM ANX7625 bridge driver uses mips_dsi_() function
    interfaces so it should select DRM_MIPI_DSI to prevent build errors.
    
    ERROR: modpost: "mipi_dsi_attach" [drivers/gpu/drm/bridge/analogix/anx7625.ko] undefined!
    ERROR: modpost: "mipi_dsi_device_register_full" [drivers/gpu/drm/bridge/analogix/anx7625.ko] undefined!
    ERROR: modpost: "of_find_mipi_dsi_host_by_node" [drivers/gpu/drm/bridge/analogix/anx7625.ko] undefined!
    ERROR: modpost: "mipi_dsi_device_unregister" [drivers/gpu/drm/bridge/analogix/anx7625.ko] undefined!
    ERROR: modpost: "mipi_dsi_detach" [drivers/gpu/drm/bridge/analogix/anx7625.ko] undefined!
    
    Fixes: 8bdfc5dae4e3 ("drm/bridge: anx7625: Add anx7625 MIPI DSI/DPI to DP")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Robert Foss <robert.foss@linaro.org>
    Cc: Xin Ji <xji@analogixsemi.com>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: dri-devel@lists.freedesktop.org
    Cc: Andrzej Hajda <a.hajda@samsung.com>
    Cc: Neil Armstrong <narmstrong@baylibre.com>
    Cc: Robert Foss <robert.foss@linaro.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210415183619.1431-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5636981fa8d85ad7d5268cdaa9722900a9d71e65
Author: Wayne Lin <Wayne.Lin@amd.com>
Date:   Wed Feb 24 18:15:21 2021 +0800

    drm/dp_mst: Set CLEAR_PAYLOAD_ID_TABLE as broadcast
    
    commit d919d3d6cdb31d0f9fe06c880f683a24f2838813 upstream.
    
    [Why & How]
    According to DP spec, CLEAR_PAYLOAD_ID_TABLE is a path broadcast request
    message and current implementation is incorrect. Fix it.
    
    Signed-off-by: Wayne Lin <Wayne.Lin@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210224101521.6713-3-Wayne.Lin@amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dc37d27f16ddc7a00bd12dea5bc93d6c4cf0e0e2
Author: Wayne Lin <Wayne.Lin@amd.com>
Date:   Wed Feb 24 18:15:20 2021 +0800

    drm/dp_mst: Revise broadcast msg lct & lcr
    
    commit 419e91ea3143bf26991442465ac64d9461e98d96 upstream.
    
    [Why & How]
    According to DP spec, broadcast message LCT equals to 1 and LCR equals
    to 6. Current implementation is incorrect. Fix it.
    In addition, revise a bit the hdr->rad handling to include broadcast
    case.
    
    Signed-off-by: Wayne Lin <Wayne.Lin@amd.com>
    Cc: stable@vger.kernel.org
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210224101521.6713-2-Wayne.Lin@amd.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d083f0de9d0628d7b124d7cb8066f393a3776982
Author: Colin Ian King <colin.king@canonical.com>
Date:   Wed Mar 3 00:27:59 2021 +0000

    drm/radeon: fix copy of uninitialized variable back to userspace
    
    commit 8dbc2ccac5a65c5b57e3070e36a3dc97c7970d96 upstream.
    
    Currently the ioctl command RADEON_INFO_SI_BACKEND_ENABLED_MASK can
    copy back uninitialised data in value_tmp that pointer *value points
    to. This can occur when rdev->family is less than CHIP_BONAIRE and
    less than CHIP_TAHITI.  Fix this by adding in a missing -EINVAL
    so that no invalid value is copied back to userspace.
    
    Addresses-Coverity: ("Uninitialized scalar variable)
    Cc: stable@vger.kernel.org # 3.13+
    Fixes: 439a1cfffe2c ("drm/radeon: expose render backend mask to the userspace")
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Colin Ian King <colin.king@canonical.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1ae37c62b3232ba0b77028fdc96ee67a0ce23e08
Author: Boris Brezillon <boris.brezillon@collabora.com>
Date:   Fri Feb 5 12:17:56 2021 +0100

    drm/panfrost: Don't try to map pages that are already mapped
    
    commit f45da8204ff1707c529a8769f5467ff16f504b26 upstream.
    
    We allocate 2MB chunks at a time, so it might appear that a page fault
    has already been handled by a previous page fault when we reach
    panfrost_mmu_map_fault_addr(). Bail out in that case to avoid mapping the
    same area twice.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 187d2929206e ("drm/panfrost: Add support for GPU heap allocations")
    Signed-off-by: Boris Brezillon <boris.brezillon@collabora.com>
    Reviewed-by: Steven Price <steven.price@arm.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210205111757.585248-3-boris.brezillon@collabora.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be586482bd40af0debcac2940c54d01954d30704
Author: Boris Brezillon <boris.brezillon@collabora.com>
Date:   Fri Feb 5 12:17:55 2021 +0100

    drm/panfrost: Clear MMU irqs before handling the fault
    
    commit 3aa0a80fc692c9959c261f4c5bfe9c23ddd90562 upstream.
    
    When a fault is handled it will unblock the GPU which will continue
    executing its shader and might fault almost immediately on a different
    page. If we clear interrupts after handling the fault we might miss new
    faults, so clear them before.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 187d2929206e ("drm/panfrost: Add support for GPU heap allocations")
    Signed-off-by: Boris Brezillon <boris.brezillon@collabora.com>
    Reviewed-by: Steven Price <steven.price@arm.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210205111757.585248-2-boris.brezillon@collabora.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5550e2f3e70002d333a63d7234f5d2ed198780b
Author: Paul Cercueil <paul@crapouillou.net>
Date:   Sun Jan 24 08:55:52 2021 +0000

    drm/ingenic: Fix non-OSD mode
    
    commit 7b4957684e5d813fcbdc98144e3cc5c4467b3e2e upstream.
    
    Even though the JZ4740 did not have the OSD mode, it had (according to
    the documentation) two DMA channels, but there is absolutely no
    information about how to select the second DMA channel.
    
    Make the ingenic-drm driver work in non-OSD mode by using the
    foreground0 plane (which is bound to the DMA0 channel) as the primary
    plane, instead of the foreground1 plane, which is the primary plane
    when in OSD mode.
    
    Fixes: 3c9bea4ef32b ("drm/ingenic: Add support for OSD mode")
    Cc: <stable@vger.kernel.org> # v5.8+
    Signed-off-by: Paul Cercueil <paul@crapouillou.net>
    Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Tested-by: H. Nikolaus Schaller <hns@goldelico.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210124085552.29146-5-paul@crapouillou.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d1f5199445caa9170f8efa39664338c28a7c5f40
Author: Gerd Hoffmann <kraxel@redhat.com>
Date:   Wed Feb 17 13:32:05 2021 +0100

    drm/qxl: use ttm bo priorities
    
    commit 4fff19ae427548d8c37260c975a4b20d3c040ec6 upstream.
    
    Allow to set priorities for buffer objects.  Use priority 1 for surface
    and cursor command releases.  Use priority 0 for drawing command
    releases.  That way the short-living drawing commands are first in line
    when it comes to eviction, making it *much* less likely that
    ttm_bo_mem_force_space() picks something which can't be evicted and
    throws an error after waiting a while without success.
    
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
    Link: http://patchwork.freedesktop.org/patch/msgid/20210217123213.2199186-4-kraxel@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fba8cea75895898420eaeccd7e99915b3e660180
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Wed Mar 10 13:03:14 2021 +0100

    FDDI: defxx: Make MMIO the configuration default except for EISA
    
    commit 193ced4a79599352d63cb8c9e2f0c6043106eb6a upstream.
    
    Recent versions of the PCI Express specification have deprecated support
    for I/O transactions and actually some PCIe host bridges, such as Power
    Systems Host Bridge 4 (PHB4), do not implement them.
    
    The default kernel configuration choice for the defxx driver is the use
    of I/O ports rather than MMIO for PCI and EISA systems.  It may have
    made sense as a conservative backwards compatible choice back when MMIO
    operation support was added to the driver as a part of TURBOchannel bus
    support.  However nowadays this configuration choice makes the driver
    unusable with systems that do not implement I/O transactions for PCIe.
    
    Make DEFXX_MMIO the configuration default then, except where configured
    for EISA.  This exception is because an EISA adapter can have its MMIO
    decoding disabled with ECU (EISA Configuration Utility) and therefore
    not available with the resource allocation infrastructure we implement,
    while port I/O is always readily available as it uses slot-specific
    addressing, directly mapped to the slot an option card has been placed
    in and handled with our EISA bus support core.  Conversely a kernel that
    supports modern systems which may not have I/O transactions implemented
    for PCIe will usually not be expected to handle legacy EISA systems.
    
    The change of the default will make it easier for people, including but
    not limited to distribution packagers, to make a working choice for the
    driver.
    
    Update the option description accordingly and while at it replace the
    potentially ambiguous PIO acronym with IOP for "port I/O" vs "I/O ports"
    according to our nomenclature used elsewhere.
    
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Fixes: e89a2cfb7d7b ("[TC] defxx: TURBOchannel support")
    Cc: stable@vger.kernel.org # v2.6.21+
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91b9548d413fda488ea853cd1b9f59b572db3a0c
Author: Felix Fietkau <nbd@nbd.name>
Date:   Tue Mar 23 22:47:37 2021 +0100

    mt76: fix potential DMA mapping leak
    
    commit b4403cee6400c5f679e9c4a82b91d61aa961eccf upstream.
    
    With buf uninitialized in mt76_dma_tx_queue_skb_raw, its field skip_unmap
    could potentially inherit a non-zero value from stack garbage.
    If this happens, it will cause DMA mappings for MCU command frames to not be
    unmapped after completion
    
    Fixes: 27d5c528a7ca ("mt76: fix double DMA unmap of the first buffer on 7615/7915")
    Cc: stable@vger.kernel.org
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cd09722e18a08b6a3d68b8bccfac39ddc22434c
Author: Ping-Ke Shih <pkshih@realtek.com>
Date:   Thu Apr 1 14:27:17 2021 -0500

    rtw88: Fix array overrun in rtw_get_tx_power_params()
    
    commit 2ff25985ea9ccc6c9af2c77b0b49045adcc62e0e upstream.
    
    Using a kernel with the Undefined Behaviour Sanity Checker (UBSAN) enabled, the
    following array overrun is logged:
    
    ================================================================================
    UBSAN: array-index-out-of-bounds in /home/finger/wireless-drivers-next/drivers/net/wireless/realtek/rtw88/phy.c:1789:34
    index 5 is out of range for type 'u8 [5]'
    CPU: 2 PID: 84 Comm: kworker/u16:3 Tainted: G           O      5.12.0-rc5-00086-gd88bba47038e-dirty #651
    Hardware name: TOSHIBA TECRA A50-A/TECRA A50-A, BIOS Version 4.50   09/29/2014
    Workqueue: phy0 ieee80211_scan_work [mac80211]
    Call Trace:
     dump_stack+0x64/0x7c
     ubsan_epilogue+0x5/0x40
     __ubsan_handle_out_of_bounds.cold+0x43/0x48
     rtw_get_tx_power_params+0x83a/drivers/net/wireless/realtek/rtw88/0xad0 [rtw_core]
     ? rtw_pci_read16+0x20/0x20 [rtw_pci]
     ? check_hw_ready+0x50/0x90 [rtw_core]
     rtw_phy_get_tx_power_index+0x4d/0xd0 [rtw_core]
     rtw_phy_set_tx_power_level+0xee/0x1b0 [rtw_core]
     rtw_set_channel+0xab/0x110 [rtw_core]
     rtw_ops_config+0x87/0xc0 [rtw_core]
     ieee80211_hw_config+0x9d/0x130 [mac80211]
     ieee80211_scan_state_set_channel+0x81/0x170 [mac80211]
     ieee80211_scan_work+0x19f/0x2a0 [mac80211]
     process_one_work+0x1dd/0x3a0
     worker_thread+0x49/0x330
     ? rescuer_thread+0x3a0/0x3a0
     kthread+0x134/0x150
     ? kthread_create_worker_on_cpu+0x70/0x70
     ret_from_fork+0x22/0x30
    ================================================================================
    
    The statement where an array is being overrun is shown in the following snippet:
    
            if (rate <= DESC_RATE11M)
                    tx_power = pwr_idx_2g->cck_base[group];
            else
    ====>           tx_power = pwr_idx_2g->bw40_base[group];
    
    The associated arrays are defined in main.h as follows:
    
    struct rtw_2g_txpwr_idx {
            u8 cck_base[6];
            u8 bw40_base[5];
            struct rtw_2g_1s_pwr_idx_diff ht_1s_diff;
            struct rtw_2g_ns_pwr_idx_diff ht_2s_diff;
            struct rtw_2g_ns_pwr_idx_diff ht_3s_diff;
            struct rtw_2g_ns_pwr_idx_diff ht_4s_diff;
    };
    
    The problem arises because the value of group is 5 for channel 14. The trivial
    increase in the dimension of bw40_base fails as this struct must match the layout of
    efuse. The fix is to add the rate as an argument to rtw_get_channel_group() and set
    the group for channel 14 to 4 if rate <= DESC_RATE11M.
    
    This patch fixes commit fa6dfe6bff24 ("rtw88: resolve order of tx power setting routines")
    
    Fixes: fa6dfe6bff24 ("rtw88: resolve order of tx power setting routines")
    Reported-by: Богдан Пилипенко <bogdan.pylypenko107@gmail.com>
    Signed-off-by: Larry Finger <Larry.Finger@lwfinger.net>
    Signed-off-by: Ping-Ke Shih <pkshih@realtek.com>
    Cc: Stable <stable@vger.kernel.org>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/20210401192717.28927-1-Larry.Finger@lwfinger.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f94f09e695684b2d619301aa143fed874a85e8fa
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri Apr 16 09:42:14 2021 +0200

    cfg80211: scan: drop entry from hidden_list on overflow
    
    commit 010bfbe768f7ecc876ffba92db30432de4997e2a upstream.
    
    If we overflow the maximum number of BSS entries and free the
    new entry, drop it from any hidden_list that it may have been
    added to in the code above or in cfg80211_combine_bsses().
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20210416094212.5de7d1676ad7.Ied283b0bc5f504845e7d6ab90626bdfa68bb3dc0@changeid
    Cc: stable@vger.kernel.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aff4d8cb5ef5dfe3cec5661ea95686d2a5740f0c
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Fri Apr 16 23:55:54 2021 -0700

    net: xilinx: drivers need/depend on HAS_IOMEM
    
    commit 46fd4471615c1bff9d87c411140807762c25667a upstream.
    
    kernel test robot reports build errors in 3 Xilinx ethernet drivers.
    They all use ioremap functions that are only available when HAS_IOMEM
    is set/enabled. If it is not enabled, they all have build errors,
    so make these 3 drivers depend on HAS_IOMEM.
    
    ld: drivers/net/ethernet/xilinx/xilinx_emaclite.o: in function `xemaclite_of_probe':
    xilinx_emaclite.c:(.text+0x9fc): undefined reference to `devm_ioremap_resource'
    
    ld: drivers/net/ethernet/xilinx/xilinx_axienet_main.o: in function `axienet_probe':
    xilinx_axienet_main.c:(.text+0x942): undefined reference to `devm_ioremap_resource'
    
    ld: drivers/net/ethernet/xilinx/ll_temac_main.o: in function `temac_probe':
    ll_temac_main.c:(.text+0x1283): undefined reference to `devm_platform_ioremap_resource_byname'
    ld: ll_temac_main.c:(.text+0x13ad): undefined reference to `devm_of_iomap'
    ld: ll_temac_main.c:(.text+0x162e): undefined reference to `devm_platform_ioremap_resource'
    
    Fixes: 8a3b7a252dca ("drivers/net/ethernet/xilinx: added Xilinx AXI Ethernet driver")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Radhey Shyam Pandey <radhey.shyam.pandey@xilinx.com>
    Cc: Gary Guo <gary@garyguo.net>
    Cc: Zhang Changzhong <zhangchangzhong@huawei.com>
    Cc: Andre Przywara <andre.przywara@arm.com>
    Cc: stable@vger.kernel.org
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Jakub Kicinski <kuba@kernel.org>
    Cc: netdev@vger.kernel.org
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 352f856408a9c15484ff23dcfacbb86128d2177c
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Apr 14 11:29:55 2021 +0300

    ipw2x00: potential buffer overflow in libipw_wx_set_encodeext()
    
    commit 260a9ad9446723d4063ed802989758852809714d upstream.
    
    The "ext->key_len" is a u16 that comes from the user.  If it's over
    SCM_KEY_LEN (32) that could lead to memory corruption.
    
    Fixes: e0d369d1d969 ("[PATCH] ieee82011: Added WE-18 support to default wireless extension handler")
    Cc: stable@vger.kernel.org
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Stanislav Yakovlev <stas.yakovlev@gmail.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Link: https://lore.kernel.org/r/YHaoA1i+8uT4ir4h@mwanda
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 790da494c18345e83b6ce986c3c251b7294993bb
Author: Ryder Lee <ryder.lee@mediatek.com>
Date:   Tue Apr 13 16:00:07 2021 +0800

    mt76: mt7615: use ieee80211_free_txskb() in mt7615_tx_token_put()
    
    commit 06991d1f73a9bdbc5f234ee96737b9102705b89c upstream.
    
    We should use ieee80211_free_txskb() to report skb status avoid wrong
    aql accounting after reset.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Ryder Lee <ryder.lee@mediatek.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17bf84d857d0bc138d33fbb07d3894fabcf79cb0
Author: Nathan Chancellor <nathan@kernel.org>
Date:   Fri Apr 9 12:21:28 2021 -0700

    MIPS: generic: Update node names to avoid unit addresses
    
    commit e607ff630c6053ecc67502677c0e50053d7892d4 upstream.
    
    With the latest mkimage from U-Boot 2021.04, the generic defconfigs no
    longer build, failing with:
    
    /usr/bin/mkimage: verify_header failed for FIT Image support with exit code 1
    
    This is expected after the linked U-Boot commits because '@' is
    forbidden in the node names due to the way that libfdt treats nodes with
    the same prefix but different unit addresses.
    
    Switch the '@' in the node name to '-'. Drop the unit addresses from the
    hash and kernel child nodes because there is only one node so they do
    not need to have a number to differentiate them.
    
    Cc: stable@vger.kernel.org
    Link: https://source.denx.de/u-boot/u-boot/-/commit/79af75f7776fc20b0d7eb6afe1e27c00fdb4b9b4
    Link: https://source.denx.de/u-boot/u-boot/-/commit/3f04db891a353f4b127ed57279279f851c6b4917
    Suggested-by: Simon Glass <sjg@chromium.org>
    Signed-off-by: Nathan Chancellor <nathan@kernel.org>
    Reviewed-by: Tom Rini <trini@konsulko.com>
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 001f553ca5beb7951b6a4edbedb9f148c70718a3
Author: Jan Glauber <jglauber@digitalocean.com>
Date:   Wed Mar 17 15:04:39 2021 +0100

    md: Fix missing unused status line of /proc/mdstat
    
    commit 7abfabaf5f805f5171d133ce6af9b65ab766e76a upstream.
    
    Reading /proc/mdstat with a read buffer size that would not
    fit the unused status line in the first read will skip this
    line from the output.
    
    So 'dd if=/proc/mdstat bs=64 2>/dev/null' will not print something
    like: unused devices: <none>
    
    Don't return NULL immediately in start() for v=2 but call
    show() once to print the status line also for multiple reads.
    
    Cc: stable@vger.kernel.org
    Fixes: 1f4aace60b0e ("fs/seq_file.c: simplify seq_file iteration code and interface")
    Signed-off-by: Jan Glauber <jglauber@digitalocean.com>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5ad71f445a6c89d9e166a79617ce20c18600f3af
Author: Zhao Heming <heming.zhao@suse.com>
Date:   Sat Apr 3 11:01:25 2021 +0800

    md: md_open returns -EBUSY when entering racing area
    
    commit 6a4db2a60306eb65bfb14ccc9fde035b74a4b4e7 upstream.
    
    commit d3374825ce57 ("md: make devices disappear when they are no longer
    needed.") introduced protection between mddev creating & removing. The
    md_open shouldn't create mddev when all_mddevs list doesn't contain
    mddev. With currently code logic, there will be very easy to trigger
    soft lockup in non-preempt env.
    
    This patch changes md_open returning from -ERESTARTSYS to -EBUSY, which
    will break the infinitely retry when md_open enter racing area.
    
    This patch is partly fix soft lockup issue, full fix needs mddev_find
    is split into two functions: mddev_find & mddev_find_or_alloc. And
    md_open should call new mddev_find (it only does searching job).
    
    For more detail, please refer with Christoph's "split mddev_find" patch
    in later commits.
    
    *** env ***
    kvm-qemu VM 2C1G with 2 iscsi luns
    kernel should be non-preempt
    
    *** script ***
    
    about trigger every time with below script
    
    ```
    1  node1="mdcluster1"
    2  node2="mdcluster2"
    3
    4  mdadm -Ss
    5  ssh ${node2} "mdadm -Ss"
    6  wipefs -a /dev/sda /dev/sdb
    7  mdadm -CR /dev/md0 -b clustered -e 1.2 -n 2 -l mirror /dev/sda \
       /dev/sdb --assume-clean
    8
    9  for i in {1..10}; do
    10    echo ==== $i ====;
    11
    12    echo "test  ...."
    13    ssh ${node2} "mdadm -A /dev/md0 /dev/sda /dev/sdb"
    14    sleep 1
    15
    16    echo "clean  ....."
    17    ssh ${node2} "mdadm -Ss"
    18 done
    ```
    
    I use mdcluster env to trigger soft lockup, but it isn't mdcluster
    speical bug. To stop md array in mdcluster env will do more jobs than
    non-cluster array, which will leave enough time/gap to allow kernel to
    run md_open.
    
    *** stack ***
    
    ```
    [  884.226509]  mddev_put+0x1c/0xe0 [md_mod]
    [  884.226515]  md_open+0x3c/0xe0 [md_mod]
    [  884.226518]  __blkdev_get+0x30d/0x710
    [  884.226520]  ? bd_acquire+0xd0/0xd0
    [  884.226522]  blkdev_get+0x14/0x30
    [  884.226524]  do_dentry_open+0x204/0x3a0
    [  884.226531]  path_openat+0x2fc/0x1520
    [  884.226534]  ? seq_printf+0x4e/0x70
    [  884.226536]  do_filp_open+0x9b/0x110
    [  884.226542]  ? md_release+0x20/0x20 [md_mod]
    [  884.226543]  ? seq_read+0x1d8/0x3e0
    [  884.226545]  ? kmem_cache_alloc+0x18a/0x270
    [  884.226547]  ? do_sys_open+0x1bd/0x260
    [  884.226548]  do_sys_open+0x1bd/0x260
    [  884.226551]  do_syscall_64+0x5b/0x1e0
    [  884.226554]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    ```
    
    *** rootcause ***
    
    "mdadm -A" (or other array assemble commands) will start a daemon "mdadm
    --monitor" by default. When "mdadm -Ss" is running, the stop action will
    wakeup "mdadm --monitor". The "--monitor" daemon will immediately get
    info from /proc/mdstat. This time mddev in kernel still exist, so
    /proc/mdstat still show md device, which makes "mdadm --monitor" to open
    /dev/md0.
    
    The previously "mdadm -Ss" is removing action, the "mdadm --monitor"
    open action will trigger md_open which is creating action. Racing is
    happening.
    
    ```
    <thread 1>: "mdadm -Ss"
    md_release
      mddev_put deletes mddev from all_mddevs
      queue_work for mddev_delayed_delete
      at this time, "/dev/md0" is still available for opening
    
    <thread 2>: "mdadm --monitor ..."
    md_open
     + mddev_find can't find mddev of /dev/md0, and create a new mddev and
     |    return.
     + trigger "if (mddev->gendisk != bdev->bd_disk)" and return
          -ERESTARTSYS.
    ```
    
    In non-preempt kernel, <thread 2> is occupying on current CPU. and
    mddev_delayed_delete which was created in <thread 1> also can't be
    schedule.
    
    In preempt kernel, it can also trigger above racing. But kernel doesn't
    allow one thread running on a CPU all the time. after <thread 2> running
    some time, the later "mdadm -A" (refer above script line 13) will call
    md_alloc to alloc a new gendisk for mddev. it will break md_open
    statement "if (mddev->gendisk != bdev->bd_disk)" and return 0 to caller,
    the soft lockup is broken.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Zhao Heming <heming.zhao@suse.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2271da3216842983d7acd3b506985aea936e36eb
Author: Christoph Hellwig <hch@lst.de>
Date:   Sat Apr 3 18:15:28 2021 +0200

    md: factor out a mddev_find_locked helper from mddev_find
    
    commit 8b57251f9a91f5e5a599de7549915d2d226cc3af upstream.
    
    Factor out a self-contained helper to just lookup a mddev by the dev_t
    "unit".
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Heming Zhao <heming.zhao@suse.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cfac69f5cde91553de284c4e3221353c9e2c6b07
Author: Christoph Hellwig <hch@lst.de>
Date:   Sat Apr 3 18:15:29 2021 +0200

    md: split mddev_find
    
    commit 65aa97c4d2bfd76677c211b9d03ef05a98c6d68e upstream.
    
    Split mddev_find into a simple mddev_find that just finds an existing
    mddev by the unit number, and a more complicated mddev_find that deals
    with find or allocating a mddev.
    
    This turns out to fix this bug reported by Zhao Heming.
    
    ----------------------------- snip ------------------------------
    commit d3374825ce57 ("md: make devices disappear when they are no longer
    needed.") introduced protection between mddev creating & removing. The
    md_open shouldn't create mddev when all_mddevs list doesn't contain
    mddev. With currently code logic, there will be very easy to trigger
    soft lockup in non-preempt env.

commit fe5dbe71fcdeced685f3355d4ea9de8473221161
Author: Heming Zhao <heming.zhao@suse.com>
Date:   Thu Apr 8 15:44:15 2021 +0800

    md-cluster: fix use-after-free issue when removing rdev
    
    commit f7c7a2f9a23e5b6e0f5251f29648d0238bb7757e upstream.
    
    md_kick_rdev_from_array will remove rdev, so we should
    use rdev_for_each_safe to search list.
    
    How to trigger:
    
    env: Two nodes on kvm-qemu x86_64 VMs (2C2G with 2 iscsi luns).
    
    ```
    node2=192.168.0.3
    
    for i in {1..20}; do
        echo ==== $i `date` ====;
    
        mdadm -Ss && ssh ${node2} "mdadm -Ss"
        wipefs -a /dev/sda /dev/sdb
    
        mdadm -CR /dev/md0 -b clustered -e 1.2 -n 2 -l 1 /dev/sda \
           /dev/sdb --assume-clean
        ssh ${node2} "mdadm -A /dev/md0 /dev/sda /dev/sdb"
        mdadm --wait /dev/md0
        ssh ${node2} "mdadm --wait /dev/md0"
    
        mdadm --manage /dev/md0 --fail /dev/sda --remove /dev/sda
        sleep 1
    done
    ```
    
    Crash stack:
    
    ```
    stack segment: 0000 [#1] SMP
    ... ...
    RIP: 0010:md_check_recovery+0x1e8/0x570 [md_mod]
    ... ...
    RSP: 0018:ffffb149807a7d68 EFLAGS: 00010207
    RAX: 0000000000000000 RBX: ffff9d494c180800 RCX: ffff9d490fc01e50
    RDX: fffff047c0ed8308 RSI: 0000000000000246 RDI: 0000000000000246
    RBP: 6b6b6b6b6b6b6b6b R08: ffff9d490fc01e40 R09: 0000000000000000
    R10: 0000000000000001 R11: 0000000000000001 R12: 0000000000000000
    R13: ffff9d494c180818 R14: ffff9d493399ef38 R15: ffff9d4933a1d800
    FS:  0000000000000000(0000) GS:ffff9d494f700000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007fe68cab9010 CR3: 000000004c6be001 CR4: 00000000003706e0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    Call Trace:
     raid1d+0x5c/0xd40 [raid1]
     ? finish_task_switch+0x75/0x2a0
     ? lock_timer_base+0x67/0x80
     ? try_to_del_timer_sync+0x4d/0x80
     ? del_timer_sync+0x41/0x50
     ? schedule_timeout+0x254/0x2d0
     ? md_start_sync+0xe0/0xe0 [md_mod]
     ? md_thread+0x127/0x160 [md_mod]
     md_thread+0x127/0x160 [md_mod]
     ? wait_woken+0x80/0x80
     kthread+0x10d/0x130
     ? kthread_park+0xa0/0xa0
     ret_from_fork+0x1f/0x40
    ```
    
    Fixes: dbb64f8635f5d ("md-cluster: Fix adding of new disk with new reload code")
    Fixes: 659b254fa7392 ("md-cluster: remove a disk asynchronously from cluster environment")
    Cc: stable@vger.kernel.org
    Reviewed-by: Gang He <ghe@suse.com>
    Signed-off-by: Heming Zhao <heming.zhao@suse.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 91d74f0a71e02f620adc3b2b0c00859a47bc1b96
Author: Sudhakar Panneerselvam <sudhakar.panneerselvam@oracle.com>
Date:   Tue Apr 13 04:08:29 2021 +0000

    md/bitmap: wait for external bitmap writes to complete during tear down
    
    commit 404a8ef512587b2460107d3272c17a89aef75edf upstream.
    
    NULL pointer dereference was observed in super_written() when it tries
    to access the mddev structure.
    
    [The below stack trace is from an older kernel, but the problem described
    in this patch applies to the mainline kernel.]
    
    [ 1194.474861] task: ffff8fdd20858000 task.stack: ffffb99d40790000
    [ 1194.488000] RIP: 0010:super_written+0x29/0xe1
    [ 1194.499688] RSP: 0018:ffff8ffb7fcc3c78 EFLAGS: 00010046
    [ 1194.512477] RAX: 0000000000000000 RBX: ffff8ffb7bf4a000 RCX: ffff8ffb78991048
    [ 1194.527325] RDX: 0000000000000001 RSI: 0000000000000000 RDI: ffff8ffb56b8a200
    [ 1194.542576] RBP: ffff8ffb7fcc3c90 R08: 000000000000000b R09: 0000000000000000
    [ 1194.558001] R10: ffff8ffb56b8a298 R11: 0000000000000000 R12: ffff8ffb56b8a200
    [ 1194.573070] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
    [ 1194.588117] FS:  0000000000000000(0000) GS:ffff8ffb7fcc0000(0000) knlGS:0000000000000000
    [ 1194.604264] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 1194.617375] CR2: 00000000000002b8 CR3: 00000021e040a002 CR4: 00000000007606e0
    [ 1194.632327] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    [ 1194.647865] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
    [ 1194.663316] PKRU: 55555554
    [ 1194.674090] Call Trace:
    [ 1194.683735]  <IRQ>
    [ 1194.692948]  bio_endio+0xae/0x135
    [ 1194.703580]  blk_update_request+0xad/0x2fa
    [ 1194.714990]  blk_update_bidi_request+0x20/0x72
    [ 1194.726578]  __blk_end_bidi_request+0x2c/0x4d
    [ 1194.738373]  __blk_end_request_all+0x31/0x49
    [ 1194.749344]  blk_flush_complete_seq+0x377/0x383
    [ 1194.761550]  flush_end_io+0x1dd/0x2a7
    [ 1194.772910]  blk_finish_request+0x9f/0x13c
    [ 1194.784544]  scsi_end_request+0x180/0x25c
    [ 1194.796149]  scsi_io_completion+0xc8/0x610
    [ 1194.807503]  scsi_finish_command+0xdc/0x125
    [ 1194.818897]  scsi_softirq_done+0x81/0xde
    [ 1194.830062]  blk_done_softirq+0xa4/0xcc
    [ 1194.841008]  __do_softirq+0xd9/0x29f
    [ 1194.851257]  irq_exit+0xe6/0xeb
    [ 1194.861290]  do_IRQ+0x59/0xe3
    [ 1194.871060]  common_interrupt+0x1c6/0x382
    [ 1194.881988]  </IRQ>
    [ 1194.890646] RIP: 0010:cpuidle_enter_state+0xdd/0x2a5
    [ 1194.902532] RSP: 0018:ffffb99d40793e68 EFLAGS: 00000246 ORIG_RAX: ffffffffffffff43
    [ 1194.917317] RAX: ffff8ffb7fce27c0 RBX: ffff8ffb7fced800 RCX: 000000000000001f
    [ 1194.932056] RDX: 0000000000000000 RSI: 0000000000000004 RDI: 0000000000000000
    [ 1194.946428] RBP: ffffb99d40793ea0 R08: 0000000000000004 R09: 0000000000002ed2
    [ 1194.960508] R10: 0000000000002664 R11: 0000000000000018 R12: 0000000000000003
    [ 1194.974454] R13: 000000000000000b R14: ffffffff925715a0 R15: 0000011610120d5a
    [ 1194.988607]  ? cpuidle_enter_state+0xcc/0x2a5
    [ 1194.999077]  cpuidle_enter+0x17/0x19
    [ 1195.008395]  call_cpuidle+0x23/0x3a
    [ 1195.017718]  do_idle+0x172/0x1d5
    [ 1195.026358]  cpu_startup_entry+0x73/0x75
    [ 1195.035769]  start_secondary+0x1b9/0x20b
    [ 1195.044894]  secondary_startup_64+0xa5/0xa5
    [ 1195.084921] RIP: super_written+0x29/0xe1 RSP: ffff8ffb7fcc3c78
    [ 1195.096354] CR2: 00000000000002b8
    
    bio in the above stack is a bitmap write whose completion is invoked after
    the tear down sequence sets the mddev structure to NULL in rdev.
    
    During tear down, there is an attempt to flush the bitmap writes, but for
    external bitmaps, there is no explicit wait for all the bitmap writes to
    complete. For instance, md_bitmap_flush() is called to flush the bitmap
    writes, but the last call to md_bitmap_daemon_work() in md_bitmap_flush()
    could generate new bitmap writes for which there is no explicit wait to
    complete those writes. The call to md_bitmap_update_sb() will return
    simply for external bitmaps and the follow-up call to md_update_sb() is
    conditional and may not get called for external bitmaps. This results in a
    kernel panic when the completion routine, super_written() is called which
    tries to reference mddev in the rdev that has been set to
    NULL(in unbind_rdev_from_array() by tear down sequence).
    
    The solution is to call md_super_wait() for external bitmaps after the
    last call to md_bitmap_daemon_work() in md_bitmap_flush() to ensure there
    are no pending bitmap writes before proceeding with the tear down.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Sudhakar Panneerselvam <sudhakar.panneerselvam@oracle.com>
    Reviewed-by: Zhao Heming <heming.zhao@suse.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53f8208e11abd6dde9480dfcb97fecdb1bc2ac18
Author: Xiao Ni <xni@redhat.com>
Date:   Sun Apr 25 17:22:57 2021 +0800

    async_xor: increase src_offs when dropping destination page
    
    commit ceaf2966ab082bbc4d26516f97b3ca8a676e2af8 upstream.
    
    Now we support sharing one page if PAGE_SIZE is not equal stripe size. To
    support this, it needs to support calculating xor value with different
    offsets for each r5dev. One offset array is used to record those offsets.
    
    In RMW mode, parity page is used as a source page. It sets
    ASYNC_TX_XOR_DROP_DST before calculating xor value in ops_run_prexor5.
    So it needs to add src_list and src_offs at the same time. Now it only
    needs src_list. So the xor value which is calculated is wrong. It can
    cause data corruption problem.
    
    I can reproduce this problem 100% on a POWER8 machine. The steps are:
    
      mdadm -CR /dev/md0 -l5 -n3 /dev/sdb1 /dev/sdc1 /dev/sdd1 --size=3G
      mkfs.xfs /dev/md0
      mount /dev/md0 /mnt/test
      mount: /mnt/test: mount(2) system call failed: Structure needs cleaning.
    
    Fixes: 29bcff787a25 ("md/raid5: add new xor function to support different page offset")
    Cc: stable@vger.kernel.org # v5.10+
    Signed-off-by: Xiao Ni <xni@redhat.com>
    Signed-off-by: Song Liu <song@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a78ba078a371ef235c6829b8033fa82a31ddac8
Author: Alison Schofield <alison.schofield@intel.com>
Date:   Wed Mar 10 11:02:33 2021 -0800

    x86, sched: Treat Intel SNC topology as default, COD as exception
    
    commit 2c88d45edbb89029c1190bb3b136d2602f057c98 upstream.
    
    Commit 1340ccfa9a9a ("x86,sched: Allow topologies where NUMA nodes
    share an LLC") added a vendor and model specific check to never
    call topology_sane() for Intel Skylake Server systems where NUMA
    nodes share an LLC.
    
    Intel Ice Lake and Sapphire Rapids CPUs also enumerate an LLC that is
    shared by multiple NUMA nodes. The LLC on these CPUs is shared for
    off-package data access but private to the NUMA node for on-package
    access. Rather than managing a list of allowable SNC topologies, make
    this SNC topology the default, and treat Intel's Cluster-On-Die (COD)
    topology as the exception.
    
    In SNC mode, Sky Lake, Ice Lake, and Sapphire Rapids servers do not
    emit this warning:
    
    sched: CPU #3's llc-sibling CPU #0 is not on the same node! [node: 1 != 0]. Ignoring dependency.
    
    Suggested-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Alison Schofield <alison.schofield@intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20210310190233.31752-1-alison.schofield@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 336dc1d637f3c889785a718fe791580e01bc2a93
Author: Paul Moore <paul@paul-moore.com>
Date:   Wed Apr 21 21:15:36 2021 -0400

    selinux: add proper NULL termination to the secclass_map permissions
    
    commit e4c82eafb609c2badc56f4e11bc50fcf44b8e9eb upstream.
    
    This patch adds the missing NULL termination to the "bpf" and
    "perf_event" object class permission lists.
    
    This missing NULL termination should really only affect the tools
    under scripts/selinux, with the most important being genheaders.c,
    although in practice this has not been an issue on any of my dev/test
    systems.  If the problem were to manifest itself it would likely
    result in bogus permissions added to the end of the object class;
    thankfully with no access control checks using these bogus
    permissions and no policies defining these permissions the impact
    would likely be limited to some noise about undefined permissions
    during policy load.
    
    Cc: stable@vger.kernel.org
    Fixes: ec27c3568a34 ("selinux: bpf: Add selinux check for eBPF syscall operations")
    Fixes: da97e18458fb ("perf_event: Add support for LSM and SELinux checks")
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa38b4eebb53791938754ec79e04ac53696b1375
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Fri Apr 2 21:17:42 2021 +0900

    misc: vmw_vmci: explicitly initialize vmci_datagram payload
    
    commit b2192cfeba8481224da0a4ec3b4a7ccd80b1623b upstream.
    
    KMSAN complains that vmci_check_host_caps() left the payload part of
    check_msg uninitialized.
    
      =====================================================
      BUG: KMSAN: uninit-value in kmsan_check_memory+0xd/0x10
      CPU: 1 PID: 1 Comm: swapper/0 Tainted: G    B             5.11.0-rc7+ #4
      Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 02/27/2020
      Call Trace:
       dump_stack+0x21c/0x280
       kmsan_report+0xfb/0x1e0
       kmsan_internal_check_memory+0x202/0x520
       kmsan_check_memory+0xd/0x10
       iowrite8_rep+0x86/0x380
       vmci_guest_probe_device+0xf0b/0x1e70
       pci_device_probe+0xab3/0xe70
       really_probe+0xd16/0x24d0
       driver_probe_device+0x29d/0x3a0
       device_driver_attach+0x25a/0x490
       __driver_attach+0x78c/0x840
       bus_for_each_dev+0x210/0x340
       driver_attach+0x89/0xb0
       bus_add_driver+0x677/0xc40
       driver_register+0x485/0x8e0
       __pci_register_driver+0x1ff/0x350
       vmci_guest_init+0x3e/0x41
       vmci_drv_init+0x1d6/0x43f
       do_one_initcall+0x39c/0x9a0
       do_initcall_level+0x1d7/0x259
       do_initcalls+0x127/0x1cb
       do_basic_setup+0x33/0x36
       kernel_init_freeable+0x29a/0x3ed
       kernel_init+0x1f/0x840
       ret_from_fork+0x1f/0x30
    
      Uninit was created at:
       kmsan_internal_poison_shadow+0x5c/0xf0
       kmsan_slab_alloc+0x8d/0xe0
       kmem_cache_alloc+0x84f/0xe30
       vmci_guest_probe_device+0xd11/0x1e70
       pci_device_probe+0xab3/0xe70
       really_probe+0xd16/0x24d0
       driver_probe_device+0x29d/0x3a0
       device_driver_attach+0x25a/0x490
       __driver_attach+0x78c/0x840
       bus_for_each_dev+0x210/0x340
       driver_attach+0x89/0xb0
       bus_add_driver+0x677/0xc40
       driver_register+0x485/0x8e0
       __pci_register_driver+0x1ff/0x350
       vmci_guest_init+0x3e/0x41
       vmci_drv_init+0x1d6/0x43f
       do_one_initcall+0x39c/0x9a0
       do_initcall_level+0x1d7/0x259
       do_initcalls+0x127/0x1cb
       do_basic_setup+0x33/0x36
       kernel_init_freeable+0x29a/0x3ed
       kernel_init+0x1f/0x840
       ret_from_fork+0x1f/0x30
    
      Bytes 28-31 of 36 are uninitialized
      Memory access of size 36 starts at ffff8881675e5f00
      =====================================================
    
    Fixes: 1f166439917b69d3 ("VMCI: guest side driver implementation.")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Link: https://lore.kernel.org/r/20210402121742.3917-2-penguin-kernel@I-love.SAKURA.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc4087770460baaf9e72c09f031d45a6650a6d70
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Fri Apr 2 21:17:41 2021 +0900

    misc: vmw_vmci: explicitly initialize vmci_notify_bm_set_msg struct
    
    commit 376565b9717c30cd58ad33860fa42697615fa2e4 upstream.
    
    KMSAN complains that the vmci_use_ppn64() == false path in
    vmci_dbell_register_notification_bitmap() left upper 32bits of
    bitmap_set_msg.bitmap_ppn64 member uninitialized.
    
      =====================================================
      BUG: KMSAN: uninit-value in kmsan_check_memory+0xd/0x10
      CPU: 1 PID: 1 Comm: swapper/0 Not tainted 5.11.0-rc7+ #4
      Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 02/27/2020
      Call Trace:
       dump_stack+0x21c/0x280
       kmsan_report+0xfb/0x1e0
       kmsan_internal_check_memory+0x484/0x520
       kmsan_check_memory+0xd/0x10
       iowrite8_rep+0x86/0x380
       vmci_send_datagram+0x150/0x280
       vmci_dbell_register_notification_bitmap+0x133/0x1e0
       vmci_guest_probe_device+0xcab/0x1e70
       pci_device_probe+0xab3/0xe70
       really_probe+0xd16/0x24d0
       driver_probe_device+0x29d/0x3a0
       device_driver_attach+0x25a/0x490
       __driver_attach+0x78c/0x840
       bus_for_each_dev+0x210/0x340
       driver_attach+0x89/0xb0
       bus_add_driver+0x677/0xc40
       driver_register+0x485/0x8e0
       __pci_register_driver+0x1ff/0x350
       vmci_guest_init+0x3e/0x41
       vmci_drv_init+0x1d6/0x43f
       do_one_initcall+0x39c/0x9a0
       do_initcall_level+0x1d7/0x259
       do_initcalls+0x127/0x1cb
       do_basic_setup+0x33/0x36
       kernel_init_freeable+0x29a/0x3ed
       kernel_init+0x1f/0x840
       ret_from_fork+0x1f/0x30
    
      Local variable ----bitmap_set_msg@vmci_dbell_register_notification_bitmap created at:
       vmci_dbell_register_notification_bitmap+0x50/0x1e0
       vmci_dbell_register_notification_bitmap+0x50/0x1e0
    
      Bytes 28-31 of 32 are uninitialized
      Memory access of size 32 starts at ffff88810098f570
      =====================================================
    
    Fixes: 83e2ec765be03e8a ("VMCI: doorbell implementation.")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Link: https://lore.kernel.org/r/20210402121742.3917-1-penguin-kernel@I-love.SAKURA.ne.jp
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3b22a73354ffc9af1af1aa5d8b566898ce36442d
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Fri Mar 19 18:11:17 2021 +0530

    phy: ti: j721e-wiz: Invoke wiz_init() before of_platform_device_create()
    
    commit f7eb147d306ad2efae6837e20d2944f03be42eb4 upstream.
    
    Invoke wiz_init() before configuring anything else in Sierra/Torrent
    (invoked as part of of_platform_device_create()). wiz_init() resets the
    SERDES device and any configuration done in the probe() of
    Sierra/Torrent will be lost. In order to prevent SERDES configuration
    from getting reset, invoke wiz_init() immediately before invoking
    of_platform_device_create().
    
    Fixes: 091876cc355d ("phy: ti: j721e-wiz: Add support for WIZ module present in TI J721E SoC")
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Reviewed-by: Swapnil Jakhade <sjakhade@cadence.com>
    Cc: <stable@vger.kernel.org> # v5.10
    Link: https://lore.kernel.org/r/20210319124128.13308-3-kishon@ti.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 709e69247a1f2e5c29327fc91a6fce3276c77f43
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Wed Feb 17 11:24:59 2021 +0100

    misc: lis3lv02d: Fix false-positive WARN on various HP models
    
    commit 3641762c1c9c7cfd84a7061a0a73054f09b412e3 upstream.
    
    Before this commit lis3lv02d_get_pwron_wait() had a WARN_ONCE() to catch
    a potential divide by 0. WARN macros should only be used to catch internal
    kernel bugs and that is not the case here. We have been receiving a lot of
    bug reports about kernel backtraces caused by this WARN.
    
    The div value being checked comes from the lis3->odrs[] array. Which
    is sized to be a power-of-2 matching the number of bits in lis3->odr_mask.
    
    The only lis3 model where this array is not entirely filled with non zero
    values. IOW the only model where we can hit the div == 0 check is the
    3dc ("8 bits 3DC sensor") model:
    
    int lis3_3dc_rates[16] = {0, 1, 10, 25, 50, 100, 200, 400, 1600, 5000};
    
    Note the 0 value at index 0, according to the datasheet an odr index of 0
    means "Power-down mode". HP typically uses a lis3 accelerometer for HDD
    fall protection. What I believe is happening here is that on newer
    HP devices, which only contain a SDD, the BIOS is leaving the lis3 device
    powered-down since it is not used for HDD fall protection.
    
    Note that the lis3_3dc_rates array initializer only specifies 10 values,
    which matches the datasheet. So it also contains 6 zero values at the end.
    
    Replace the WARN with a normal check, which treats an odr index of 0
    as power-down and uses a normal dev_err() to report the error in case
    odr index point past the initialized part of the array.
    
    Fixes: 1510dd5954be ("lis3lv02d: avoid divide by zero due to unchecked")
    Cc: stable@vger.kernel.org
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=785814
    BugLink: https://bugzilla.redhat.com/show_bug.cgi?id=1817027
    BugLink: https://bugs.centos.org/view.php?id=10720
    Link: https://lore.kernel.org/r/20210217102501.31758-1-hdegoede@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb506a1b7fefced5b2042a3c41e9d60085a34319
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Fri Mar 19 18:11:16 2021 +0530

    phy: cadence: Sierra: Fix PHY power_on sequence
    
    commit 5b4f5757f83be34d1428a1ffbb68d4a1966e9aae upstream.
    
    Commit 44d30d622821d ("phy: cadence: Add driver for Sierra PHY")
    de-asserts PHY_RESET even before the configurations are loaded in
    phy_init(). However PHY_RESET should be de-asserted only after
    all the configurations has been initialized, instead of de-asserting
    in probe. Fix it here.
    
    Fixes: 44d30d622821d ("phy: cadence: Add driver for Sierra PHY")
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Cc: <stable@vger.kernel.org> # v5.4+
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Link: https://lore.kernel.org/r/20210319124128.13308-2-kishon@ti.com
    Signed-off-by: Vinod Koul <vkoul@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 07b929c857f04405fe6d172b7d1a2689b76f49fd
Author: Annaliese McDermond <nh6z@nh6z.net>
Date:   Mon Mar 29 20:10:49 2021 +0000

    sc16is7xx: Defer probe if device read fails
    
    commit 158e800e0fde91014812f5cdfb92ce812e3a33b4 upstream.
    
    A test was added to the probe function to ensure the device was
    actually connected and working before successfully completing a
    probe.  If the device was actually there, but the I2C bus was not
    ready yet for whatever reason, the probe fails permanently.
    
    Change the probe so that we defer the probe on a regmap read
    failure so that we try the probe again when the dependent drivers
    are potentially loaded.  This should not affect the case where the
    device truly isn't present because the probe will never successfully
    complete.
    
    Fixes: 2aa916e67db3 ("sc16is7xx: Read the LSR register for basic device presence check")
    Cc: stable@vger.kernel.org
    Signed-off-by: Annaliese McDermond <nh6z@nh6z.net>
    Link: https://lore.kernel.org/r/010101787f9c3fd8-c1815c00-2d6b-4c85-a96a-a13e68597fda-000000@us-west-2.amazonses.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 091d32c54550ae1a0b464cd08a1db999563e6cb6
Author: Ye Xiang <xiang.ye@intel.com>
Date:   Sat Jan 30 18:25:46 2021 +0800

    iio: hid-sensor-rotation: Fix quaternion data not correct
    
    commit 6c3b615379d7cd90d2f70b3cf9860c5a4910546a upstream.
    
    Because the data of HID_USAGE_SENSOR_ORIENT_QUATERNION defined by ISH FW
    is s16, but quaternion data type is in_rot_quaternion_type(le:s16/32X4>>0),
    need to transform data type from s16 to s32
    
    May require manual backporting.
    
    Fixes: fc18dddc0625 ("iio: hid-sensors: Added device rotation support")
    Signed-off-by: Ye Xiang <xiang.ye@intel.com>
    Link: https://lore.kernel.org/r/20210130102546.31397-1-xiang.ye@intel.com
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99f8854ad3dadda15fd46deca57fc9205f888980
Author: Gwendal Grignou <gwendal@chromium.org>
Date:   Fri Mar 26 11:46:02 2021 -0700

    iio: sx9310: Fix access to variable DT array
    
    commit 6f0078ae704d94b1a93e5f3d0a44cf3d8090fa91 upstream.
    
    With the current code, we want to read 4 entries from DT array
    "semtech,combined-sensors". If there are less, we silently fail as
    of_property_read_u32_array() returns -EOVERFLOW.
    
    First count the number of entries and if between 1 and 4, collect the
    content of the array.
    
    Fixes: 5b19ca2c78a0 ("iio: sx9310: Set various settings from DT")
    Signed-off-by: Gwendal Grignou <gwendal@chromium.org>
    Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Link: https://lore.kernel.org/r/20210326184603.251683-2-gwendal@chromium.org
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0a5cc717d5ae98fa61ec26c1445c495f79073e45
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Feb 15 16:30:23 2021 +0100

    iio: magnetometer: yas530: Fix return value on error path
    
    commit e64837bf9e2c063d6b5bab51c0554a60270f636d upstream.
    
    There was a missed return variable assignment in the
    default errorpath of the switch statement in yas5xx_probe().
    Fix it.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Suggested-by: Andy Shevchenko <andy.shevchenko@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Link: https://lore.kernel.org/r/20210215153023.47899-1-linus.walleij@linaro.org
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ed8a4d4606b0936ae94f9c949249f0eb27d9fef
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Thu Apr 1 18:17:57 2021 +0100

    iio:adc:ad7476: Fix remove handling
    
    commit 6baee4bd63f5fdf1716f88e95c21a683e94fe30d upstream.
    
    This driver was in an odd half way state between devm based cleanup
    and manual cleanup (most of which was missing).
    I would guess something went wrong with a rebase or similar.
    Anyhow, this basically finishes the job as a precursor to improving
    the regulator handling.
    
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Fixes: 4bb2b8f94ace3 ("iio: adc: ad7476: implement devm_add_action_or_reset")
    Cc: Michael Hennerich <michael.hennerich@analog.com>
    Reviewed-by: Alexandru Ardelean <ardeleanalex@gmail.com>
    Cc: <Stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210401171759.318140-2-jic23@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8260a84e54d4e800095ff7a4553a0b8fde9818ed
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Sun Mar 21 18:29:56 2021 +0000

    iio:accel:adis16201: Fix wrong axis assignment that prevents loading
    
    commit 4e102429f3dc62dce546f6107e34a4284634196d upstream.
    
    Whilst running some basic tests as part of writing up the dt-bindings for
    this driver (to follow), it became clear it doesn't actually load
    currently.
    
    iio iio:device1: tried to double register : in_incli_x_index
    adis16201 spi0.0: Failed to create buffer sysfs interfaces
    adis16201: probe of spi0.0 failed with error -16
    
    Looks like a cut and paste / update bug.  Fixes tag obviously not accurate
    but we don't want to bother carry thing back to before the driver moved
    out of staging.
    
    Fixes: 591298e54cea ("Staging: iio: accel: adis16201: Move adis16201 driver out of staging")
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Cc: <Stable@vger.kernel.org>
    Cc: Himanshu Jha <himanshujha199640@gmail.com>
    Cc: Nuno Sá <nuno.sa@analog.com>
    Reviewed-by: Alexandru Ardelean <ardeleanalex@gmail.com>
    Link: https://lore.kernel.org/r/20210321182956.844652-1-jic23@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 47007b0dd0f7251e277d205ca055e3f74d490405
Author: Gwendal Grignou <gwendal@chromium.org>
Date:   Wed Mar 31 11:22:22 2021 -0700

    iio: sx9310: Fix write_.._debounce()
    
    commit fc948409ccc1e8afe8655cee77c686eedbfbee60 upstream.
    
    Check input to be sure it matches Semtech sx9310 specification and
    can fit into debounce register.
    Compare argument writen to thresh_.._period with read from same
    sysfs attribute:
    
    Before:                   Afer:
    write   |  read           write   |  read
    -1      |     8           -1 fails: -EINVAL
    0       |     8           0       |     0
    1       |     0           1       |     0
    2..15   |  2^log2(N)      2..15   |  2^log2(N)
    16      |     0           >= 16 fails: -EINVAL
    
    Fixes: 1b6872015f0b ("iio: sx9310: Support setting debounce values")
    Signed-off-by: Gwendal Grignou <gwendal@chromium.org>
    Cc: stable@vger.kernel.org
    Reviewed-by: Stephen Boyd <swboyd@chromium.org>
    Link: https://lore.kernel.org/r/20210331182222.219533-1-gwendal@chromium.org
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 71ec5597189caadedf1e08c0e947acc7737d0e1e
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Feb 15 16:30:32 2021 +0100

    iio: magnetometer: yas530: Include right header
    
    commit bb354aeb364f9dee51e16edfdf6194ce4ba9237e upstream.
    
    To get access to the big endian byte order parsing helpers
    drivers need to include <asm/unaligned.h> and nothing else.
    
    Reported-by: kernel test robot <lkp@intel.com>
    Suggested-by: Harvey Harrison <harvey.harrison@gmail.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Cc: <Stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210215153032.47962-1-linus.walleij@linaro.org
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25a233aba5d00b1478824bb50c8474c452b9c4f6
Author: Lars-Peter Clausen <lars@metafoo.de>
Date:   Mon Apr 5 13:44:41 2021 +0200

    iio: inv_mpu6050: Fully validate gyro and accel scale writes
    
    commit e09fe9135399807b8397798a53160e055dc6c29f upstream.
    
    When setting the gyro or accelerometer scale the inv_mpu6050 driver ignores
    the integer part of the value. As a result e.g. all of 0.13309, 1.13309,
    12345.13309, ... are accepted as a valid gyro scale and 0.13309 is the
    scale that gets set in all those cases.
    
    Make sure to check that the integer part of the scale value is 0 and reject
    it otherwise.
    
    Fixes: 09a642b78523 ("Invensense MPU6050 Device Driver.")
    Signed-off-by: Lars-Peter Clausen <lars@metafoo.de>
    Acked-by: Jean-Baptiste Maneyrol <jmaneyrol@invensense.com>
    Link: https://lore.kernel.org/r/20210405114441.24167-1-lars@metafoo.de
    Cc: <Stable@vger.kernel.org>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff39adf5d31c72025bba799aec69c5c86d81d549
Author: Dmitry Osipenko <digetx@gmail.com>
Date:   Tue Mar 2 16:18:00 2021 +0300

    soc/tegra: regulators: Fix locking up when voltage-spread is out of range
    
    commit ef85bb582c41524e9e68dfdbde48e519dac4ab3d upstream.
    
    Fix voltage coupler lockup which happens when voltage-spread is out
    of range due to a bug in the code. The max-spread requirement shall be
    accounted when CPU regulator doesn't have consumers. This problem is
    observed on Tegra30 Ouya game console once system-wide DVFS is enabled
    in a device-tree.
    
    Fixes: 783807436f36 ("soc/tegra: regulators: Add regulators coupler for Tegra30")
    Cc: stable@vger.kernel.org
    Reported-by: Peter Geis <pgwipeout@gmail.com>
    Tested-by: Peter Geis <pgwipeout@gmail.com> # Ouya T30
    Tested-by: Matt Merhar <mattmerhar@protonmail.com> # Ouya T30
    Signed-off-by: Dmitry Osipenko <digetx@gmail.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce835bc103eae094ac07ea1cd7575312d39a22cf
Author: Lukasz Luba <lukasz.luba@arm.com>
Date:   Mon Mar 15 09:31:23 2021 +0000

    PM / devfreq: Unlock mutex and free devfreq struct in error path
    
    commit 8b50a7995770d41a2e8d9c422cd2882aca0dedd2 upstream.
    
    The devfreq->lock is held for time of setup. Release the lock in the
    error path, before jumping to the end of the function.
    
    Change the goto destination which frees the allocated memory.
    
    Cc: v5.9+ <stable@vger.kernel.org> # v5.9+
    Fixes: 4dc3bab8687f ("PM / devfreq: Add support delayed timer for polling mode")
    Signed-off-by: Lukasz Luba <lukasz.luba@arm.com>
    Signed-off-by: Chanwoo Choi <cw00.choi@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 901b6b29fde93d57b4d02d1554f7ce4670568c8f
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Wed Mar 17 18:45:18 2021 +0530

    PCI: keystone: Let AM65 use the pci_ops defined in pcie-designware-host.c
    
    commit 3d0b2a3a87ce5ae85de46c4241afd52ab8b566fe upstream.
    
    Both TI's AM65x (K3) and TI's K2 PCIe driver are implemented in
    pci-keystone. However Only K2 PCIe driver should use it's own pci_ops
    for configuration space accesses. But commit 10a797c6e54a
    ("PCI: dwc: keystone: Use pci_ops for config space accessors") used
    custom pci_ops for both AM65x and K2. This breaks configuration space
    access for AM65x platform. Fix it here.
    
    Link: https://lore.kernel.org/r/20210317131518.11040-1-kishon@ti.com
    Fixes: 10a797c6e54a ("PCI: dwc: keystone: Use pci_ops for config space accessors")
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Krzysztof Wilczyński <kw@linux.com>
    Cc: <stable@vger.kernel.org> # v5.10
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6df842bbbaabccb0fc6e3b067d5c60c4e4e9ee97
Author: Dejin Zheng <zhengdejin5@gmail.com>
Date:   Sun Mar 28 22:41:18 2021 +0800

    PCI: xgene: Fix cfg resource mapping
    
    commit d4707d79fae08c8996a1ba45965a491045a22dda upstream.
    
    In commit e2dcd20b1645 a change was made to use
    devm_platform_ioremap_resource_byname() to simplify code and remove
    the res variable; this was wrong since the res variable is still needed
    and as an outcome the port->cfg_addr gets an erroneous address.
    
    Revert the change going back to original behaviour.
    
    Link: https://lore.kernel.org/r/20210328144118.305074-1-zhengdejin5@gmail.com
    Fixes: e2dcd20b1645a ("PCI: controller: Convert to devm_platform_ioremap_resource_byname()")
    Reported-by: dann.frazier@canonical.com
    Tested-by: dann frazier <dann.frazier@canonical.com>
    Signed-off-by: Dejin Zheng <zhengdejin5@gmail.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: stable@vger.kernel.org    # v5.9+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb2679a3a1c030d2f43200b575bb825f4ad3da99
Author: Sean Christopherson <seanjc@google.com>
Date:   Thu Mar 4 17:10:58 2021 -0800

    KVM: x86: Defer the MMU unload to the normal path on an global INVPCID
    
    commit f66c53b3b94f658590e1012bf6d922f8b7e01bda upstream.
    
    Defer unloading the MMU after a INVPCID until the instruction emulation
    has completed, i.e. until after RIP has been updated.
    
    On VMX, this is a benign bug as VMX doesn't touch the MMU when skipping
    an emulated instruction.  However, on SVM, if nrip is disabled, the
    emulator is used to skip an instruction, which would lead to fireworks
    if the emulator were invoked without a valid MMU.
    
    Fixes: eb4b248e152d ("kvm: vmx: Support INVPCID in shadow paging mode")
    Cc: stable@vger.kernel.org
    Signed-off-by: Sean Christopherson <seanjc@google.com>
    Message-Id: <20210305011101.3597423-15-seanjc@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 60870cc69ec806900509f991daff48f40ef1d518
Author: Arun Easi <aeasi@marvell.com>
Date:   Fri Apr 9 14:51:53 2021 -0700

    PCI: Allow VPD access for QLogic ISP2722
    
    commit e00dc69b5f17c444a38cd9745a0f76bc989b3af4 upstream.
    
    0d5370d1d852 ("PCI: Prevent VPD access for QLogic ISP2722") disabled access
    to VPD of the ISP2722-based 16/32Gb Fibre Channel to PCIe Adapter because
    reading past the end of the VPD caused NMIs.
    
    104daa71b396 ("PCI: Determine actual VPD size on first access") limits
    reads to the actual size of VPD, which should prevent these NMIs.
    
    104daa71b396 was merged *before* 0d5370d1d852, but we think the testing
    that prompted 0d5370d1d852 ("PCI: Prevent VPD access for QLogic ISP2722")
    was done with a kernel that lacked 104daa71b396.  See [1, 2].
    
    Remove the quirk added by 0d5370d1d852 ("PCI: Prevent VPD access for QLogic
    ISP2722") so customers can read the HBA VPD.
    
    [1] https://lore.kernel.org/linux-pci/alpine.LRH.2.21.9999.2012161641230.28924@irv1user01.caveonetworks.com/
    [2] https://lore.kernel.org/linux-pci/alpine.LRH.2.21.9999.2104071535110.13940@irv1user01.caveonetworks.com/
    [bhelgaas: commit log]
    Link: https://lore.kernel.org/r/20210409215153.16569-2-aeasi@marvell.com
    Signed-off-by: Arun Easi <aeasi@marvell.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org      # v4.6+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b3dfb74303706597a2e86a36ea4faeae205d1dd
Author: Maciej W. Rozycki <macro@orcam.me.uk>
Date:   Wed Mar 10 13:03:09 2021 +0100

    FDDI: defxx: Bail out gracefully with unassigned PCI resource for CSR
    
    commit f626ca682912fab55dff15469ce893ae16b65c7e upstream.
    
    Recent versions of the PCI Express specification have deprecated support
    for I/O transactions and actually some PCIe host bridges, such as Power
    Systems Host Bridge 4 (PHB4), do not implement them.
    
    For those systems the PCI BARs that request a mapping in the I/O space
    have the length recorded in the corresponding PCI resource set to zero,
    which makes it unassigned:
    
    # lspci -s 0031:02:04.0 -v
    0031:02:04.0 FDDI network controller: Digital Equipment Corporation PCI-to-PDQ Interface Chip [PFI] FDDI (DEFPA) (rev 02)
            Subsystem: Digital Equipment Corporation FDDIcontroller/PCI (DEFPA)
            Flags: bus master, medium devsel, latency 136, IRQ 57, NUMA node 8
            Memory at 620c080020000 (32-bit, non-prefetchable) [size=128]
            I/O ports at <unassigned> [disabled]
            Memory at 620c080030000 (32-bit, non-prefetchable) [size=64K]
            Capabilities: [50] Power Management version 2
            Kernel driver in use: defxx
            Kernel modules: defxx
    
    #
    
    Regardless the driver goes ahead and requests it (here observed with a
    Raptor Talos II POWER9 system), resulting in an odd /proc/ioport entry:
    
    # cat /proc/ioports
    00000000-ffffffffffffffff : 0031:02:04.0
    #
    
    Furthermore, the system gets confused as the driver actually continues
    and pokes at those locations, causing a flood of messages being output
    to the system console by the underlying system firmware, like:
    
    defxx: v1.11 2014/07/01  Lawrence V. Stefani and others
    defxx 0031:02:04.0: enabling device (0140 -> 0142)
    LPC[000]: Got SYNC no-response error. Error address reg: 0xd0010000
    IPMI: dropping non severe PEL event
    LPC[000]: Got SYNC no-response error. Error address reg: 0xd0010014
    IPMI: dropping non severe PEL event
    LPC[000]: Got SYNC no-response error. Error address reg: 0xd0010014
    IPMI: dropping non severe PEL event
    
    and so on and so on (possibly intermixed actually, as there's no locking
    between the kernel and the firmware in console port access with this
    particular system, but cleaned up above for clarity), and once some 10k
    of such pairs of the latter two messages have been produced an interace
    eventually shows up in a useless state:
    
    0031:02:04.0: DEFPA at I/O addr = 0x0, IRQ = 57, Hardware addr = 00-00-00-00-00-00
    
    This was not expected to happen as resource handling was added to the
    driver a while ago, because it was not known at that time that a PCI
    system would be possible that cannot assign port I/O resources, and
    oddly enough `request_region' does not fail, which would have caught it.
    
    Correct the problem then by checking for the length of zero for the CSR
    resource and bail out gracefully refusing to register an interface if
    that turns out to be the case, producing messages like:
    
    defxx: v1.11 2014/07/01  Lawrence V. Stefani and others
    0031:02:04.0: Cannot use I/O, no address set, aborting
    0031:02:04.0: Recompile driver with "CONFIG_DEFXX_MMIO=y"
    
    Keep the original check for the EISA MMIO resource as implemented,
    because in that case the length is hardwired to 0x400 as a consequence
    of how the compare/mask address decoding works in the ESIC chip and it
    is only the base address that is set to zero if MMIO has been disabled
    for the adapter in EISA configuration, which in turn could be a valid
    bus address in a legacy-free system implementing PCI, especially for
    port I/O.
    
    Where the EISA MMIO resource has been disabled for the adapter in EISA
    configuration this arrangement keeps producing messages like:
    
    eisa 00:05: EISA: slot 5: DEC3002 detected
    defxx: v1.11 2014/07/01  Lawrence V. Stefani and others
    00:05: Cannot use MMIO, no address set, aborting
    00:05: Recompile driver with "CONFIG_DEFXX_MMIO=n"
    00:05: Or run ECU and set adapter's MMIO location
    
    with the last two lines now swapped for easier handling in the driver.
    
    There is no need to check for and catch the case of a port I/O resource
    not having been assigned for EISA as the adapter uses the slot-specific
    I/O space, which gets assigned by how EISA has been specified and maps
    directly to the particular slot an option card has been placed in.  And
    the EISA variant of the adapter has additional registers that are only
    accessible via the port I/O space anyway.
    
    While at it factor out the error message calls into helpers and fix an
    argument order bug with the `pr_err' call now in `dfx_register_res_err'.
    
    Signed-off-by: Maciej W. Rozycki <macro@orcam.me.uk>
    Fixes: 4d0438e56a8f ("defxx: Clean up DEFEA resource management")
    Cc: stable@vger.kernel.org # v3.19+
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit da61e572de95466f1b54391cb2eccaa638677eeb
Author: Ilya Lipnitskiy <ilya.lipnitskiy@gmail.com>
Date:   Tue Apr 13 20:12:33 2021 -0700

    MIPS: pci-rt2880: fix slot 0 configuration
    
    commit 8e98b697006d749d745d3b174168a877bb96c500 upstream.
    
    pci_fixup_irqs() used to call pcibios_map_irq on every PCI device, which
    for RT2880 included bus 0 slot 0. After pci_fixup_irqs() got removed,
    only slots/funcs with devices attached would be called. While arguably
    the right thing, that left no chance for this driver to ever initialize
    slot 0, effectively bricking PCI and USB on RT2880 devices such as the
    Belkin F5D8235-4 v1.
    
    Slot 0 configuration needs to happen after PCI bus enumeration, but
    before any device at slot 0x11 (func 0 or 1) is talked to. That was
    determined empirically by testing on a Belkin F5D8235-4 v1 device. A
    minimal BAR 0 config write followed by read, then setting slot 0
    PCI_COMMAND to MASTER | IO | MEMORY is all that seems to be required for
    proper functionality.
    
    Tested by ensuring that full- and high-speed USB devices get enumerated
    on the Belkin F5D8235-4 v1 (with an out of tree DTS file from OpenWrt).
    
    Fixes: 04c81c7293df ("MIPS: PCI: Replace pci_fixup_irqs() call with host bridge IRQ mapping hooks")
    Signed-off-by: Ilya Lipnitskiy <ilya.lipnitskiy@gmail.com>
    Cc: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Cc: Tobias Wolf <dev-NTEO@vplace.de>
    Cc: <stable@vger.kernel.org> # v4.14+
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97f12e7b3249f9a202ae2aa08f298b539f4ee3bc
Author: Ilya Lipnitskiy <ilya.lipnitskiy@gmail.com>
Date:   Sat Mar 6 20:17:24 2021 -0800

    MIPS: pci-mt7620: fix PLL lock check
    
    commit c15b99ae2ba9ea30da3c7cd4765b8a4707e530a6 upstream.
    
    Upstream a long-standing OpenWrt patch [0] that fixes MT7620 PCIe PLL
    lock check. The existing code checks the wrong register bit: PPLL_SW_SET
    is not defined in PPLL_CFG1 and bit 31 of PPLL_CFG1 is marked as reserved
    in the MT7620 Programming Guide. The correct bit to check for PLL lock
    is PPLL_LD (bit 23).
    
    Also reword the error message for clarity.
    
    Without this change it is unlikely that this driver ever worked with
    mainline kernel.
    
    [0]: https://lists.infradead.org/pipermail/lede-commits/2017-July/004441.html
    
    Signed-off-by: Ilya Lipnitskiy <ilya.lipnitskiy@gmail.com>
    Cc: John Crispin <john@phrozen.org>
    Cc: linux-mips@vger.kernel.org
    Cc: linux-mediatek@lists.infradead.org
    Cc: linux-kernel@vger.kernel.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Thomas Bogendoerfer <tsbogend@alpha.franken.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4aad12fcb5132e3209dc0b24f6c9a650d28bd460
Author: Annaliese McDermond <nh6z@nh6z.net>
Date:   Wed Mar 31 18:21:45 2021 +0000

    ASoC: tlv320aic32x4: Increase maximum register in regmap
    
    commit 29654ed8384e9dbaf4cfba689dbcb664a6ab4bb7 upstream.
    
    AIC32X4_REFPOWERUP was added as a register, but the maximum register value
    in the regmap and regmap range was not correspondingly increased.  This
    caused an error when this register was attempted to be written.
    
    Fixes: ec96690de82c ("ASoC: tlv320aic32x4: Enable fast charge")
    Cc: stable@vger.kernel.org
    Signed-off-by: Annaliese McDermond <nh6z@nh6z.net>
    Link: https://lore.kernel.org/r/0101017889851cab-ce60cfdb-d88c-43d8-bbd2-7fbf34a0c912-000000@us-west-2.amazonses.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4eff0aece2bf6e490cc91be3c5681188012ed31f
Author: Annaliese McDermond <nh6z@nh6z.net>
Date:   Wed Mar 31 18:21:38 2021 +0000

    ASoC: tlv320aic32x4: Register clocks before registering component
    
    commit 1ca1156cfd69530e6b7cb99943baf90c8bd871a5 upstream.
    
    Clock registration must be performed before the component is
    registered.  aic32x4_component_probe attempts to get all the
    clocks right off the bat.  If the component is registered before
    the clocks there is a race condition where the clocks may not
    be registered by the time aic32x4_componet_probe actually runs.
    
    Fixes: d1c859d314d8 ("ASoC: codec: tlv3204: Increased maximum supported channels")
    Cc: stable@vger.kernel.org
    Signed-off-by: Annaliese McDermond <nh6z@nh6z.net>
    Link: https://lore.kernel.org/r/0101017889850206-dcac4cce-8cc8-4a21-80e9-4e4bef44b981-000000@us-west-2.amazonses.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbe08fe17ca94e955eb506724435d707115c93a7
Author: Lukasz Majczak <lma@semihalf.com>
Date:   Thu Apr 15 14:43:47 2021 +0200

    ASoC: Intel: kbl_da7219_max98927: Fix kabylake_ssp_fixup function
    
    commit a523ef731ac6674dc07574f31bf44cc5bfa14e4d upstream.
    
    kabylake_ssp_fixup function uses snd_soc_dpcm to identify the
    codecs DAIs. The HW parameters are changed based on the codec DAI of the
    stream. The earlier approach to get snd_soc_dpcm was using container_of()
    macro on snd_pcm_hw_params.
    
    The structures have been modified over time and snd_soc_dpcm does not have
    snd_pcm_hw_params as a reference but as a copy. This causes the current
    driver to crash when used.
    
    This patch changes the way snd_soc_dpcm is extracted. snd_soc_pcm_runtime
    holds 2 dpcm instances (one for playback and one for capture). 2 codecs
    on the SSP are dmic (capture) and speakers (playback). Based on the
    stream direction, snd_soc_dpcm is extracted from snd_soc_pcm_runtime.
    
    Tested for all use cases of the driver.
    Based on similar fix in kbl_rt5663_rt5514_max98927.c
    from Harsha Priya <harshapriya.n@intel.com> and
    Vamshi Krishna Gopal <vamshi.krishna.gopal@intel.com>
    
    Cc: <stable@vger.kernel.org> # 5.4+
    Signed-off-by: Lukasz Majczak <lma@semihalf.com>
    Acked-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210415124347.475432-1-lma@semihalf.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0efbd1233794a2811fa9e9cf9d19f9f23f8f41e
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Fri Mar 12 12:02:30 2021 -0600

    ASoC: samsung: tm2_wm5110: check of of_parse return value
    
    commit d58970da324732686529655c21791cef0ee547c4 upstream.
    
    cppcheck warning:
    
    sound/soc/samsung/tm2_wm5110.c:605:6: style: Variable 'ret' is
    reassigned a value before the old one has been
    used. [redundantAssignment]
     ret = devm_snd_soc_register_component(dev, &tm2_component,
         ^
    sound/soc/samsung/tm2_wm5110.c:554:7: note: ret is assigned
      ret = of_parse_phandle_with_args(dev->of_node, "i2s-controller",
          ^
    sound/soc/samsung/tm2_wm5110.c:605:6: note: ret is overwritten
     ret = devm_snd_soc_register_component(dev, &tm2_component,
         ^
    
    The args is a stack variable, so it could have junk (uninitialized)
    therefore args.np could have a non-NULL and random value even though
    property was missing. Later could trigger invalid pointer dereference.
    
    There's no need to check for args.np because args.np won't be
    initialized on errors.
    
    Fixes: 8d1513cef51a ("ASoC: samsung: Add support for HDMI audio on TM2 board")
    Cc: <stable@vger.kernel.org>
    Suggested-by: Krzysztof Kozlowski <krzk@kernel.org>
    Reviewed-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Reviewed-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Link: https://lore.kernel.org/r/20210312180231.2741-2-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bda903c4077575c8ee4625c8c8abd9826152d5fd
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Mon Mar 8 10:51:51 2021 +0800

    usb: xhci-mtk: improve bandwidth scheduling with TT
    
    commit e19ee44a3d07c232f9241024dab1ebd0748cdf5f upstream.
    
    When the USB headset is plug into an external hub, sometimes
    can't set config due to not enough bandwidth, so need improve
    LS/FS INT/ISOC bandwidth scheduling with TT.
    
    Fixes: 54f6a8af3722 ("usb: xhci-mtk: skip dropping bandwidth of unchecked endpoints")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Yaqii Wu <yaqii.wu@mediatek.com>
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/2f30e81400a59afef5f8231c98149169c7520519.1615170625.git.chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cc300e48da1a6b95d1e0a0682ddba47ab927d80
Author: Chunfeng Yun <chunfeng.yun@mediatek.com>
Date:   Mon Mar 8 10:51:50 2021 +0800

    usb: xhci-mtk: remove or operator for setting schedule parameters
    
    commit 5fa5827566e3affa1657ccf9b22706c06a5d021a upstream.
    
    Side effect may happen if use or operator to set schedule parameters
    when the parameters are already set before. Set them directly due to
    other bits are reserved.
    
    Fixes: 54f6a8af3722 ("usb: xhci-mtk: skip dropping bandwidth of unchecked endpoints")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Chunfeng Yun <chunfeng.yun@mediatek.com>
    Link: https://lore.kernel.org/r/d287899e6beb2fc1bfb8900c75a872f628ecde55.1615170625.git.chunfeng.yun@mediatek.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6727853725fb92734019361677327e002c3699e
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Mar 30 16:37:16 2021 +0200

    USB: serial: xr: fix CSIZE handling
    
    commit ea7ada4de2f7406150dd35ecd0302842587a464e upstream.
    
    The XR21V141X does not have a 5- or 6-bit mode, but the current
    implementation failed to properly restore the old setting when CS5 or
    CS6 was requested. Instead an invalid request would be sent to the
    device.
    
    Fixes: c2d405aa86b4 ("USB: serial: add MaxLinear/Exar USB to Serial driver")
    Reviewed-by: Manivannan Sadhasivam <mani@kernel.org>
    Cc: stable@vger.kernel.org      # 5.12
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0707201cd3e5c7ccc26c7487f1737d98e8af7ccf
Author: Badhri Jagan Sridharan <badhri@google.com>
Date:   Wed Apr 7 13:07:20 2021 -0700

    usb: typec: tcpm: update power supply once partner accepts
    
    commit 4050f2683f2c3151dc3dd1501ac88c57caf810ff upstream.
    
    power_supply_changed needs to be called to notify clients
    after the partner accepts the requested values for the pps
    case.
    
    Also, remove the redundant power_supply_changed at the end
    of the tcpm_reset_port as power_supply_changed is already
    called right after usb_type is changed.
    
    Fixes: f2a8aa053c176 ("typec: tcpm: Represent source supply through power_supply")
    Signed-off-by: Badhri Jagan Sridharan <badhri@google.com>
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20210407200723.1914388-3-badhri@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 999237e2fe4afcb04755aa4c1ac5863f4d39105f
Author: Badhri Jagan Sridharan <badhri@google.com>
Date:   Wed Apr 7 13:07:19 2021 -0700

    usb: typec: tcpm: Address incorrect values of tcpm psy for pps supply
    
    commit e3a0720224873587954b55d193d5b4abb14f0443 upstream.
    
    tcpm_pd_select_pps_apdo overwrites port->pps_data.min_volt,
    port->pps_data.max_volt, port->pps_data.max_curr even before
    port partner accepts the requests. This leaves incorrect values
    in current_limit and supply_voltage that get exported by
    "tcpm-source-psy-". Solving this problem by caching the request
    values in req_min_volt, req_max_volt, req_max_curr, req_out_volt,
    req_op_curr. min_volt, max_volt, max_curr gets updated once the
    partner accepts the request. current_limit, supply_voltage gets updated
    once local port's tcpm enters SNK_TRANSITION_SINK when the accepted
    current_limit and supply_voltage is enforced.
    
    Fixes: f2a8aa053c176 ("typec: tcpm: Represent source supply through power_supply")
    Signed-off-by: Badhri Jagan Sridharan <badhri@google.com>
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20210407200723.1914388-2-badhri@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3645a7d04f2f215c09ee80d38bf93578a74ed767
Author: Badhri Jagan Sridharan <badhri@google.com>
Date:   Wed Apr 7 13:07:18 2021 -0700

    usb: typec: tcpm: Address incorrect values of tcpm psy for fixed supply
    
    commit f3dedafb8263ca4791a92a23f5230068f5bde008 upstream.
    
    tcpm_pd_build_request overwrites current_limit and supply_voltage
    even before port partner accepts the requests. This leaves stale
    values in current_limit and supply_voltage that get exported by
    "tcpm-source-psy-". Solving this problem by caching the request
    values of current limit/supply voltage in req_current_limit
    and req_supply_voltage. current_limit/supply_voltage gets updated
    once the port partner accepts the request.
    
    Fixes: f2a8aa053c176 ("typec: tcpm: Represent source supply through power_supply")
    Signed-off-by: Badhri Jagan Sridharan <badhri@google.com>
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Adam Thomson <Adam.Thomson.Opensource@diasemi.com>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Link: https://lore.kernel.org/r/20210407200723.1914388-1-badhri@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff3486804847c492487041d6e52123657c4bc8ba
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Thu Apr 15 11:36:39 2021 -0700

    drm: bridge: fix LONTIUM use of mipi_dsi_() functions
    
    commit ad085b3a712a89e4a48472121b231add7a8362e4 upstream.
    
    The Lontium DRM bridge drivers use mipi_dsi_() function interfaces so
    they need to select DRM_MIPI_DSI to prevent build errors.
    
    ERROR: modpost: "mipi_dsi_attach" [drivers/gpu/drm/bridge/lontium-lt9611uxc.ko] undefined!
    ERROR: modpost: "mipi_dsi_device_register_full" [drivers/gpu/drm/bridge/lontium-lt9611uxc.ko] undefined!
    ERROR: modpost: "of_find_mipi_dsi_host_by_node" [drivers/gpu/drm/bridge/lontium-lt9611uxc.ko] undefined!
    ERROR: modpost: "mipi_dsi_device_unregister" [drivers/gpu/drm/bridge/lontium-lt9611uxc.ko] undefined!
    ERROR: modpost: "mipi_dsi_detach" [drivers/gpu/drm/bridge/lontium-lt9611uxc.ko] undefined!
    ERROR: modpost: "mipi_dsi_attach" [drivers/gpu/drm/bridge/lontium-lt9611.ko] undefined!
    ERROR: modpost: "mipi_dsi_device_register_full" [drivers/gpu/drm/bridge/lontium-lt9611.ko] undefined!
    ERROR: modpost: "of_find_mipi_dsi_host_by_node" [drivers/gpu/drm/bridge/lontium-lt9611.ko] undefined!
    ERROR: modpost: "mipi_dsi_device_unregister" [drivers/gpu/drm/bridge/lontium-lt9611.ko] undefined!
    ERROR: modpost: "mipi_dsi_detach" [drivers/gpu/drm/bridge/lontium-lt9611.ko] undefined!
    WARNING: modpost: suppressed 5 unresolved symbol warnings because there were too many)
    
    Fixes: 23278bf54afe ("drm/bridge: Introduce LT9611 DSI to HDMI bridge")
    Fixes: 0cbbd5b1a012 ("drm: bridge: add support for lontium LT9611UXC bridge")
    Fixes: 30e2ae943c26 ("drm/bridge: Introduce LT8912B DSI to HDMI bridge")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reviewed-by: Adren Grassein <adrien.grassein@gmail.com>
    Cc: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Vinod Koul <vkoul@kernel.org>
    Cc: Bjorn Andersson <bjorn.andersson@linaro.org>
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Cc: Adrien Grassein <adrien.grassein@gmail.com>
    Cc: Andrzej Hajda <a.hajda@samsung.com>
    Cc: Neil Armstrong <narmstrong@baylibre.com>
    Cc: Robert Foss <robert.foss@linaro.org>
    Cc: dri-devel@lists.freedesktop.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Robert Foss <robert.foss@linaro.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20210415183639.1487-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f162f1edfcd7343ba52aa31ced832247d1e668e3
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:23:32 2021 +0200

    tty: mxser: fix TIOCSSERIAL permission check
    
    commit b91cfb2573aeb5ab426fc3c35bcfe9e0d2a7ecbc upstream.
    
    Changing the port type and closing_wait parameter are privileged
    operations so make sure to return -EPERM if a regular user tries to
    change them.
    
    Note that the closing_wait parameter would not actually have been
    changed but the return value did not indicate that.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407102334.32361-15-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4a73d0398cdf06025c9ae9282b97c7ff44681ed
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:23:20 2021 +0200

    staging: fwserial: fix TIOCSSERIAL permission check
    
    commit 2104eb283df66a482b60254299acbe3c68c03412 upstream.
    
    Changing the port close-delay parameter is a privileged operation so
    make sure to return -EPERM if a regular user tries to change it.
    
    Fixes: 7355ba3445f2 ("staging: fwserial: Add TTY-over-Firewire serial driver")
    Cc: stable@vger.kernel.org      # 3.8
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407102334.32361-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit abeecdf9b9f3b01cb6113ddaca2e46b6d157deda
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:23:31 2021 +0200

    tty: mxser: fix TIOCSSERIAL jiffies conversions
    
    commit be6cf583d24dfe87324dd2830d90fc056e0a6648 upstream.
    
    The port close_delay and closing wait parameters set by TIOCSSERIAL are
    specified in jiffies, while the values returned by TIOCGSERIAL are
    specified in centiseconds.
    
    Add the missing conversions so that TIOCSSERIAL works as expected also
    when HZ is not 100.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407102334.32361-14-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13b2afa47b651f7944f9e847e384dd06b13b726f
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:23:29 2021 +0200

    tty: moxa: fix TIOCSSERIAL permission check
    
    commit dc8c8437658667be9b11ec25c4b5482ed2becdaa upstream.
    
    Changing the port close delay or type are privileged operations so make
    sure to return -EPERM if a regular user tries to change them.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407102334.32361-12-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 63cf4009837d21741f8f86664dd75f3e925504c8
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:23:19 2021 +0200

    staging: fwserial: fix TIOCSSERIAL jiffies conversions
    
    commit 7a3791afdbd5a951b09a7689bba856bd9f6c6a9f upstream.
    
    The port close_delay parameter set by TIOCSSERIAL is specified in
    jiffies, while the value returned by TIOCGSERIAL is specified in
    centiseconds.
    
    Add the missing conversions so that TIOCGSERIAL works as expected also
    when HZ is not 100.
    
    Fixes: 7355ba3445f2 ("staging: fwserial: Add TTY-over-Firewire serial driver")
    Cc: stable@vger.kernel.org      # 3.8
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407102334.32361-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit be43d200fff916dbf30caaf6c2c7fd8dc689319c
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:39:15 2021 +0200

    USB: serial: ti_usb_3410_5052: fix TIOCSSERIAL permission check
    
    commit d370c90dcd64e427a79a093a070117a1571d4cd8 upstream.
    
    Changing the port closing-wait parameter is a privileged operation so
    make sure to return -EPERM if a regular user tries to change it.
    
    Cc: stable@vger.kernel.org
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2ab75256154082884cfb55796f86346bab15d035
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:23:23 2021 +0200

    staging: greybus: uart: fix TIOCSSERIAL jiffies conversions
    
    commit b71e571adaa58be4fd289abebc8997e05b4c6b40 upstream.
    
    The port close_delay and closing_wait parameters set by TIOCSSERIAL are
    specified in jiffies and not milliseconds.
    
    Add the missing conversions so that TIOCSSERIAL works as expected also
    when HZ is not 1000.
    
    Fixes: e68453ed28c5 ("greybus: uart-gb: now builds, more framework added")
    Cc: stable@vger.kernel.org      # 4.9
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407102334.32361-6-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0f8dc63a47721575cc4e6fee532f5a9dccd79c14
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:39:16 2021 +0200

    USB: serial: usb_wwan: fix TIOCSSERIAL jiffies conversions
    
    commit 3d732690d2267f4d0e19077b178dffbedafdf0c9 upstream.
    
    The port close_delay and closing_wait parameters set by TIOCSSERIAL are
    specified in jiffies and not milliseconds.
    
    Add the missing conversions so that the TIOCSSERIAL works as expected
    also when HZ is not 1000.
    
    Fixes: 02303f73373a ("usb-wwan: implement TIOCGSERIAL and TIOCSSERIAL to avoid blocking close(2)")
    Cc: stable@vger.kernel.org      # 2.6.38
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6a855bd0251613f4fa03b4471b1d6f04a0183ac0
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:23:26 2021 +0200

    tty: amiserial: fix TIOCSSERIAL permission check
    
    commit 1d31a831cc04f5f942de3e7d91edaa52310d3c99 upstream.
    
    Changing the port closing_wait parameter is a privileged operation.
    
    Add the missing check to TIOCSSERIAL so that -EPERM is returned in case
    an unprivileged user tries to change the closing-wait setting.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407102334.32361-9-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9ee8e4799334932804b8991ea6cb65f35947771b
Author: Johan Hovold <johan@kernel.org>
Date:   Wed Apr 7 12:23:28 2021 +0200

    tty: moxa: fix TIOCSSERIAL jiffies conversions
    
    commit 6e70b73ca5240c0059a1fbf8ccd4276d6cf71956 upstream.
    
    The port close_delay parameter set by TIOCSSERIAL is specified in
    jiffies, while the value returned by TIOCGSERIAL is specified in
    centiseconds.
    
    Add the missing conversions so that TIOCGSERIAL works as expected also
    when HZ is not 100.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210407102334.32361-11-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0eff3fa802e58ea04cce53b4ac545dc76fffa746
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Fri Apr 9 14:41:36 2021 +0200

    usb: roles: Call try_module_get() from usb_role_switch_find_by_fwnode()
    
    commit 3a2a91a2d51761557843996a66098eb7182b48b4 upstream.
    
    usb_role_switch_find_by_fwnode() returns a reference to the role-switch
    which must be put by calling usb_role_switch_put().
    
    usb_role_switch_put() calls module_put(sw->dev.parent->driver->owner),
    add a matching try_module_get() to usb_role_switch_find_by_fwnode(),
    making it behave the same as the other usb_role_switch functions
    which return a reference.
    
    This avoids a WARN_ON being hit at kernel/module.c:1158 due to the
    module-refcount going below 0.
    
    Fixes: c6919d5e0cd1 ("usb: roles: Add usb_role_switch_find_by_fwnode()")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Link: https://lore.kernel.org/r/20210409124136.65591-1-hdegoede@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f0591e79cdeb9b977285b38e4093286328f3a1c
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Apr 8 15:16:00 2021 +0200

    Revert "USB: cdc-acm: fix rounding error in TIOCSSERIAL"
    
    commit 729f7955cb987c5b7d7e54c87c5ad71c789934f7 upstream.
    
    This reverts commit b401f8c4f492cbf74f3f59c9141e5be3071071bb.
    
    The offending commit claimed that trying to set the values reported back
    by TIOCGSERIAL as a regular user could result in an -EPERM error when HZ
    is 250, but that was never the case.
    
    With HZ=250, the default 0.5 second value of close_delay is converted to
    125 jiffies when set and is converted back to 50 centiseconds by
    TIOCGSERIAL as expected (not 12 cs as was claimed, even if that was the
    case before an earlier fix).
    
    Comparing the internal current and new jiffies values is just fine to
    determine if the value is about to change so drop the bogus workaround
    (which was also backported to stable).
    
    For completeness: With different default values for these parameters or
    with a HZ value not divisible by two, the lack of rounding when setting
    the default values in tty_port_init() could result in an -EPERM being
    returned, but this is hardly something we need to worry about.
    
    Cc: Anthony Mallet <anthony.mallet@laas.fr>
    Cc: stable@vger.kernel.org
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210408131602.27956-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 226c0978a22661f6382b7063f6db128179c4ac8f
Author: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Date:   Wed Apr 14 10:54:38 2021 +0300

    software node: Allow node addition to already existing device
    
    commit b622b24519f5b008f6d4e20e5675eaffa8fbd87b upstream.
    
    If the node is added to an already exiting device, the node
    needs to be also linked to the device separately.
    
    This will make sure the reference count is kept in balance
    also when the node is injected to a device afterwards.
    
    Fixes: e68d0119e328 ("software node: Introduce device_add_software_node()")
    Reported-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210414075438.64547-1-heikki.krogerus@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1faea82c829cccb935691424250b30a8e9937cf
Author: Mike Leach <mike.leach@linaro.org>
Date:   Thu Apr 15 14:24:04 2021 -0600

    coresight: etm-perf: Fix define build issue when built as module
    
    commit 9204ff94868496f2d9b8b173af52ec455160c364 upstream.
    
    CONFIG_CORESIGHT_SOURCE_ETM4X is undefined when built as module,
    CONFIG_CORESIGHT_SOURCE_ETM4X_MODULE is defined instead.
    
    Therefore code in format_attr_contextid_show() not correctly complied
    when coresight built as module.
    
    Use IS_ENABLED(CONFIG_CORESIGHT_SOURCE_ETM4X) to correct this.
    
    Link: https://lore.kernel.org/r/20210414194808.22872-1-mike.leach@linaro.org
    Fixes: 88f11864cf1d ("coresight: etm-perf: Support PID tracing for kernel at EL2")
    Reviewed-by: Leo Yan <leo.yan@linaro.org>
    Signed-off-by: Mike Leach <mike.leach@linaro.org>
    Signed-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210415202404.945368-2-mathieu.poirier@linaro.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca2960d35c36f2e601563c49f6673efd111b94c0
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Wed May 5 09:47:06 2021 -0300

    io_uring: truncate lengths larger than MAX_RW_COUNT on provide buffers
    
    commit d1f82808877bb10d3deee7cf3374a4eb3fb582db upstream.
    
    Read and write operations are capped to MAX_RW_COUNT. Some read ops rely on
    that limit, and that is not guaranteed by the IORING_OP_PROVIDE_BUFFERS.
    
    Truncate those lengths when doing io_add_buffers, so buffer addresses still
    use the uncapped length.
    
    Also, take the chance and change struct io_buffer len member to __u32, so
    it matches struct io_provide_buffer len member.
    
    This fixes CVE-2021-3491, also reported as ZDI-CAN-13546.
    
    Fixes: ddf0322db79c ("io_uring: add IORING_OP_PROVIDE_BUFFERS")
    Reported-by: Billy Jheng Bing-Jhong (@st424204)
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18175fe17ae043a0b81e5d511f8817825784c299
Author: Or Cohen <orcohen@paloaltonetworks.com>
Date:   Tue May 4 10:16:46 2021 +0300

    net/nfc: fix use-after-free llcp_sock_bind/connect
    
    commit c61760e6940dd4039a7f5e84a6afc9cdbf4d82b6 upstream.
    
    Commits 8a4cd82d ("nfc: fix refcount leak in llcp_sock_connect()")
    and c33b1cc62 ("nfc: fix refcount leak in llcp_sock_bind()")
    fixed a refcount leak bug in bind/connect but introduced a
    use-after-free if the same local is assigned to 2 different sockets.
    
    This can be triggered by the following simple program:
        int sock1 = socket( AF_NFC, SOCK_STREAM, NFC_SOCKPROTO_LLCP );
        int sock2 = socket( AF_NFC, SOCK_STREAM, NFC_SOCKPROTO_LLCP );
        memset( &addr, 0, sizeof(struct sockaddr_nfc_llcp) );
        addr.sa_family = AF_NFC;
        addr.nfc_protocol = NFC_PROTO_NFC_DEP;
        bind( sock1, (struct sockaddr*) &addr, sizeof(struct sockaddr_nfc_llcp) )
        bind( sock2, (struct sockaddr*) &addr, sizeof(struct sockaddr_nfc_llcp) )
        close(sock1);
        close(sock2);
    
    Fix this by assigning NULL to llcp_sock->local after calling
    nfc_llcp_local_put.
    
    This addresses CVE-2021-23134.
    
    Reported-by: Or Cohen <orcohen@paloaltonetworks.com>
    Reported-by: Nadav Markus <nmarkus@paloaltonetworks.com>
    Fixes: c33b1cc62 ("nfc: fix refcount leak in llcp_sock_bind()")
    Signed-off-by: Or Cohen <orcohen@paloaltonetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93d388c087d71aed0e79b8c7db3132f28c010197
Author: Lin Ma <linma@zju.edu.cn>
Date:   Mon Apr 12 19:17:57 2021 +0800

    bluetooth: eliminate the potential race condition when removing the HCI controller
    
    commit e2cb6b891ad2b8caa9131e3be70f45243df82a80 upstream.
    
    There is a possible race condition vulnerability between issuing a HCI
    command and removing the cont.  Specifically, functions hci_req_sync()
    and hci_dev_do_close() can race each other like below:
    
    thread-A in hci_req_sync()      |   thread-B in hci_dev_do_close()
                                    |   hci_req_sync_lock(hdev);
    test_bit(HCI_UP, &hdev->flags); |
    ...                             |   test_and_clear_bit(HCI_UP, &hdev->flags)
    hci_req_sync_lock(hdev);        |
                                    |
    In this commit we alter the sequence in function hci_req_sync(). Hence,
    the thread-A cannot issue th.
    
    Signed-off-by: Lin Ma <linma@zju.edu.cn>
    Cc: Marcel Holtmann <marcel@holtmann.org>
    Fixes: 7c6a329e4447 ("[Bluetooth] Fix regression from using default link policy")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c026c3dc3947c714a19779d0a6c596b55e63685d
Author: Archie Pusaka <apusaka@chromium.org>
Date:   Mon Mar 22 14:03:11 2021 +0800

    Bluetooth: verify AMP hci_chan before amp_destroy
    
    commit 5c4c8c9544099bb9043a10a5318130a943e32fc3 upstream.
    
    hci_chan can be created in 2 places: hci_loglink_complete_evt() if
    it is an AMP hci_chan, or l2cap_conn_add() otherwise. In theory,
    Only AMP hci_chan should be removed by a call to
    hci_disconn_loglink_complete_evt(). However, the controller might mess
    up, call that function, and destroy an hci_chan which is not initiated
    by hci_loglink_complete_evt().
    
    This patch adds a verification that the destroyed hci_chan must have
    been init'd by hci_loglink_complete_evt().
    
    Example crash call trace:
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0xe3/0x144 lib/dump_stack.c:118
     print_address_description+0x67/0x22a mm/kasan/report.c:256
     kasan_report_error mm/kasan/report.c:354 [inline]
     kasan_report mm/kasan/report.c:412 [inline]
     kasan_report+0x251/0x28f mm/kasan/report.c:396
     hci_send_acl+0x3b/0x56e net/bluetooth/hci_core.c:4072
     l2cap_send_cmd+0x5af/0x5c2 net/bluetooth/l2cap_core.c:877
     l2cap_send_move_chan_cfm_icid+0x8e/0xb1 net/bluetooth/l2cap_core.c:4661
     l2cap_move_fail net/bluetooth/l2cap_core.c:5146 [inline]
     l2cap_move_channel_rsp net/bluetooth/l2cap_core.c:5185 [inline]
     l2cap_bredr_sig_cmd net/bluetooth/l2cap_core.c:5464 [inline]
     l2cap_sig_channel net/bluetooth/l2cap_core.c:5799 [inline]
     l2cap_recv_frame+0x1d12/0x51aa net/bluetooth/l2cap_core.c:7023
     l2cap_recv_acldata+0x2ea/0x693 net/bluetooth/l2cap_core.c:7596
     hci_acldata_packet net/bluetooth/hci_core.c:4606 [inline]
     hci_rx_work+0x2bd/0x45e net/bluetooth/hci_core.c:4796
     process_one_work+0x6f8/0xb50 kernel/workqueue.c:2175
     worker_thread+0x4fc/0x670 kernel/workqueue.c:2321
     kthread+0x2f0/0x304 kernel/kthread.c:253
     ret_from_fork+0x3a/0x50 arch/x86/entry/entry_64.S:415
    
    Allocated by task 38:
     set_track mm/kasan/kasan.c:460 [inline]
     kasan_kmalloc+0x8d/0x9a mm/kasan/kasan.c:553
     kmem_cache_alloc_trace+0x102/0x129 mm/slub.c:2787
     kmalloc include/linux/slab.h:515 [inline]
     kzalloc include/linux/slab.h:709 [inline]
     hci_chan_create+0x86/0x26d net/bluetooth/hci_conn.c:1674
     l2cap_conn_add.part.0+0x1c/0x814 net/bluetooth/l2cap_core.c:7062
     l2cap_conn_add net/bluetooth/l2cap_core.c:7059 [inline]
     l2cap_connect_cfm+0x134/0x852 net/bluetooth/l2cap_core.c:7381
     hci_connect_cfm+0x9d/0x122 include/net/bluetooth/hci_core.h:1404
     hci_remote_ext_features_evt net/bluetooth/hci_event.c:4161 [inline]
     hci_event_packet+0x463f/0x72fa net/bluetooth/hci_event.c:5981
     hci_rx_work+0x197/0x45e net/bluetooth/hci_core.c:4791
     process_one_work+0x6f8/0xb50 kernel/workqueue.c:2175
     worker_thread+0x4fc/0x670 kernel/workqueue.c:2321
     kthread+0x2f0/0x304 kernel/kthread.c:253
     ret_from_fork+0x3a/0x50 arch/x86/entry/entry_64.S:415
    
    Freed by task 1732:
     set_track mm/kasan/kasan.c:460 [inline]
     __kasan_slab_free mm/kasan/kasan.c:521 [inline]
     __kasan_slab_free+0x106/0x128 mm/kasan/kasan.c:493
     slab_free_hook mm/slub.c:1409 [inline]
     slab_free_freelist_hook+0xaa/0xf6 mm/slub.c:1436
     slab_free mm/slub.c:3009 [inline]
     kfree+0x182/0x21e mm/slub.c:3972
     hci_disconn_loglink_complete_evt net/bluetooth/hci_event.c:4891 [inline]
     hci_event_packet+0x6a1c/0x72fa net/bluetooth/hci_event.c:6050
     hci_rx_work+0x197/0x45e net/bluetooth/hci_core.c:4791
     process_one_work+0x6f8/0xb50 kernel/workqueue.c:2175
     worker_thread+0x4fc/0x670 kernel/workqueue.c:2321
     kthread+0x2f0/0x304 kernel/kthread.c:253
     ret_from_fork+0x3a/0x50 arch/x86/entry/entry_64.S:415
    
    The buggy address belongs to the object at ffff8881d7af9180
     which belongs to the cache kmalloc-128 of size 128
    The buggy address is located 24 bytes inside of
     128-byte region [ffff8881d7af9180, ffff8881d7af9200)
    The buggy address belongs to the page:
    page:ffffea00075ebe40 count:1 mapcount:0 mapping:ffff8881da403200 index:0x0
    flags: 0x8000000000000200(slab)
    raw: 8000000000000200 dead000000000100 dead000000000200 ffff8881da403200
    raw: 0000000000000000 0000000080150015 00000001ffffffff 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff8881d7af9080: fc fc fc fc fc fc fc fc fb fb fb fb fb fb fb fb
     ffff8881d7af9100: fb fb fb fb fb fb fb fb fc fc fc fc fc fc fc fc
    >ffff8881d7af9180: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                ^
     ffff8881d7af9200: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
     ffff8881d7af9280: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    
    Signed-off-by: Archie Pusaka <apusaka@chromium.org>
    Reported-by: syzbot+98228e7407314d2d4ba2@syzkaller.appspotmail.com
    Reviewed-by: Alain Michaud <alainm@chromium.org>
    Reviewed-by: Abhishek Pandit-Subedi <abhishekpandit@chromium.org>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Cc: George Kennedy <george.kennedy@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
