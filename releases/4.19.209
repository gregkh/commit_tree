commit 6db10b4d5efdc38ff06dfdde28dc5477f754b0bd
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Oct 6 15:31:28 2021 +0200

    Linux 4.19.209
    
    Link: https://lore.kernel.org/r/20211004125033.572932188@linuxfoundation.org
    Link: https://lore.kernel.org/r/20211005083300.523409586@linuxfoundation.org
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Pavel Machek (CIP) <pavel@denx.de>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7581fdf6c01991f03b1b51d524f1b7b64c920ce3
Author: NeilBrown <neilb@suse.com>
Date:   Mon Dec 3 11:30:30 2018 +1100

    cred: allow get_cred() and put_cred() to be given NULL.
    
    commit f06bc03339ad4c1baa964a5f0606247ac1c3c50b upstream.
    
    It is common practice for helpers like this to silently,
    accept a NULL pointer.
    get_rpccred() and put_rpccred() used by NFS act this way
    and using the same interface will ease the conversion
    for NFS, and simplify the resulting code.
    
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Cc: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 764ac04de056801dfe52a716da63f6e7018e7f3b
Author: Anirudh Rayabharam <mail@anirudhrb.com>
Date:   Thu Jun 24 00:10:29 2021 +0530

    HID: usbhid: free raw_report buffers in usbhid_stop
    
    commit f7744fa16b96da57187dc8e5634152d3b63d72de upstream.
    
    Free the unsent raw_report buffers when the device is removed.
    
    Fixes a memory leak reported by syzbot at:
    https://syzkaller.appspot.com/bug?id=7b4fa7cb1a7c2d3342a2a8a6c53371c8c418ab47
    
    Reported-by: syzbot+47b26cd837ececfc666d@syzkaller.appspotmail.com
    Tested-by: syzbot+47b26cd837ececfc666d@syzkaller.appspotmail.com
    Signed-off-by: Anirudh Rayabharam <mail@anirudhrb.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c4bc456cb5b028e6a2a63e5d54b9f08e827c0504
Author: Jozsef Kadlecsik <kadlec@netfilter.org>
Date:   Mon Sep 6 18:26:34 2021 +0200

    netfilter: ipset: Fix oversized kvmalloc() calls
    
    commit 7bbc3d385bd813077acaf0e6fdb2a86a901f5382 upstream.
    
    The commit
    
    commit 7661809d493b426e979f39ab512e3adf41fbcc69
    Author: Linus Torvalds <torvalds@linux-foundation.org>
    Date:   Wed Jul 14 09:45:49 2021 -0700
    
        mm: don't allow oversized kvmalloc() calls
    
    limits the max allocatable memory via kvmalloc() to MAX_INT. Apply the
    same limit in ipset.
    
    Reported-by: syzbot+3493b1873fb3ea827986@syzkaller.appspotmail.com
    Reported-by: syzbot+2b8443c35458a617c904@syzkaller.appspotmail.com
    Reported-by: syzbot+ee5cb15f4a0e85e0d54e@syzkaller.appspotmail.com
    Signed-off-by: Jozsef Kadlecsik <kadlec@netfilter.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bb8b72374db69afa25a5b65cf1c092860c6fe914
Author: F.A.Sulaiman <asha.16@itfac.mrt.ac.lk>
Date:   Tue Aug 24 20:37:30 2021 +0530

    HID: betop: fix slab-out-of-bounds Write in betop_probe
    
    commit 1e4ce418b1cb1a810256b5fb3fd33d22d1325993 upstream.
    
    Syzbot reported slab-out-of-bounds Write bug in hid-betopff driver.
    The problem is the driver assumes the device must have an input report but
    some malicious devices violate this assumption.
    
    So this patch checks hid_device's input is non empty before it's been used.
    
    Reported-by: syzbot+07efed3bc5a1407bd742@syzkaller.appspotmail.com
    Signed-off-by: F.A. SULAIMAN <asha.16@itfac.mrt.ac.lk>
    Reviewed-by: Pavel Skripkin <paskripkin@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 710be7c42d2f724869e5b18b21998ceddaffc4a9
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Aug 26 16:04:27 2021 +0300

    crypto: ccp - fix resource leaks in ccp_run_aes_gcm_cmd()
    
    commit 505d9dcb0f7ddf9d075e729523a33d38642ae680 upstream.
    
    There are three bugs in this code:
    
    1) If we ccp_init_data() fails for &src then we need to free aad.
       Use goto e_aad instead of goto e_ctx.
    2) The label to free the &final_wa was named incorrectly as "e_tag" but
       it should have been "e_final_wa".  One error path leaked &final_wa.
    3) The &tag was leaked on one error path.  In that case, I added a free
       before the goto because the resource was local to that block.
    
    Fixes: 36cf515b9bbe ("crypto: ccp - Enable support for AES GCM on v5 CCPs")
    Reported-by: "minihanshen(沈明航)" <minihanshen@tencent.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: John Allen <john.allen@amd.com>
    Tested-by: John Allen <john.allen@amd.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 981d6f6f0b50d433163a41d40562ffb181f2f4fb
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Wed Jul 21 16:14:57 2021 +0800

    usb: hso: remove the bailout parameter
    
    commit dcb713d53e2eadf42b878c12a471e74dc6ed3145 upstream.
    
    There are two invocation sites of hso_free_net_device. After
    refactoring hso_create_net_device, this parameter is useless.
    Remove the bailout in the hso_free_net_device and change the invocation
    sites of this function.
    
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6cf22a1ef49f8e131f99c3f5fd80ab6b23a2d21
Author: Dongliang Mu <mudongliangabcd@gmail.com>
Date:   Wed Jul 14 17:13:22 2021 +0800

    usb: hso: fix error handling code of hso_create_net_device
    
    commit a6ecfb39ba9d7316057cea823b196b734f6b18ca upstream.
    
    The current error handling code of hso_create_net_device is
    hso_free_net_device, no matter which errors lead to. For example,
    WARNING in hso_free_net_device [1].
    
    Fix this by refactoring the error handling code of
    hso_create_net_device by handling different errors by different code.
    
    [1] https://syzkaller.appspot.com/bug?id=66eff8d49af1b28370ad342787413e35bbe76efe
    
    Reported-by: syzbot+44d53c7255bb1aea22d2@syzkaller.appspotmail.com
    Fixes: 5fcfb6d0bfcd ("hso: fix bailout in error case of probe")
    Signed-off-by: Dongliang Mu <mudongliangabcd@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13f176b7eeaa4e4b4014facf147d998e858a23b5
Author: Oliver Neukum <oneukum@suse.com>
Date:   Wed Aug 5 14:07:07 2020 +0200

    hso: fix bailout in error case of probe
    
    commit 5fcfb6d0bfcda17f0d0656e4e5b3710af2bbaae5 upstream.
    
    The driver tries to reuse code for disconnect in case
    of a failed probe.
    If resources need to be freed after an error in probe, the
    netdev must not be freed because it has never been registered.
    Fix it by telling the helper which path we are in.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3232e981389fc3c57bcdc22ff9a82fb4a512724e
Author: Alex Sverdlin <alexander.sverdlin@nokia.com>
Date:   Mon Sep 27 14:02:46 2021 -0700

    ARM: 9098/1: ftrace: MODULE_PLT: Fix build problem without DYNAMIC_FTRACE
    
    commit 6fa630bf473827aee48cbf0efbbdf6f03134e890 upstream
    
    FTRACE_ADDR is only defined when CONFIG_DYNAMIC_FTRACE is defined, the
    latter is even stronger requirement than CONFIG_FUNCTION_TRACER (which is
    enough for MCOUNT_ADDR).
    
    Link: https://lists.01.org/hyperkitty/list/kbuild-all@lists.01.org/thread/ZUVCQBHDMFVR7CCB7JPESLJEWERZDJ3T/
    
    Fixes: 1f12fb25c5c5d22f ("ARM: 9079/1: ftrace: Add MODULE_PLTS support")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8113e622926ef6590771ede0f7f64821e1751b67
Author: Alex Sverdlin <alexander.sverdlin@nokia.com>
Date:   Mon Sep 27 14:02:45 2021 -0700

    ARM: 9079/1: ftrace: Add MODULE_PLTS support
    
    commit 79f32b221b18c15a98507b101ef4beb52444cc6f upstream
    
    Teach ftrace_make_call() and ftrace_make_nop() about PLTs.
    Teach PLT code about FTRACE and all its callbacks.
    Otherwise the following might happen:
    
    ------------[ cut here ]------------
    WARNING: CPU: 14 PID: 2265 at .../arch/arm/kernel/insn.c:14 __arm_gen_branch+0x83/0x8c()
    ...
    Hardware name: LSI Axxia AXM55XX
    [<c0314a49>] (unwind_backtrace) from [<c03115e9>] (show_stack+0x11/0x14)
    [<c03115e9>] (show_stack) from [<c0519f51>] (dump_stack+0x81/0xa8)
    [<c0519f51>] (dump_stack) from [<c032185d>] (warn_slowpath_common+0x69/0x90)
    [<c032185d>] (warn_slowpath_common) from [<c03218f3>] (warn_slowpath_null+0x17/0x1c)
    [<c03218f3>] (warn_slowpath_null) from [<c03143cf>] (__arm_gen_branch+0x83/0x8c)
    [<c03143cf>] (__arm_gen_branch) from [<c0314337>] (ftrace_make_nop+0xf/0x24)
    [<c0314337>] (ftrace_make_nop) from [<c038ebcb>] (ftrace_process_locs+0x27b/0x3e8)
    [<c038ebcb>] (ftrace_process_locs) from [<c0378d79>] (load_module+0x11e9/0x1a44)
    [<c0378d79>] (load_module) from [<c037974d>] (SyS_finit_module+0x59/0x84)
    [<c037974d>] (SyS_finit_module) from [<c030e981>] (ret_fast_syscall+0x1/0x18)
    ---[ end trace e1b64ced7a89adcc ]---
    ------------[ cut here ]------------
    WARNING: CPU: 14 PID: 2265 at .../kernel/trace/ftrace.c:1979 ftrace_bug+0x1b1/0x234()
    ...
    Hardware name: LSI Axxia AXM55XX
    [<c0314a49>] (unwind_backtrace) from [<c03115e9>] (show_stack+0x11/0x14)
    [<c03115e9>] (show_stack) from [<c0519f51>] (dump_stack+0x81/0xa8)
    [<c0519f51>] (dump_stack) from [<c032185d>] (warn_slowpath_common+0x69/0x90)
    [<c032185d>] (warn_slowpath_common) from [<c03218f3>] (warn_slowpath_null+0x17/0x1c)
    [<c03218f3>] (warn_slowpath_null) from [<c038e87d>] (ftrace_bug+0x1b1/0x234)
    [<c038e87d>] (ftrace_bug) from [<c038ebd5>] (ftrace_process_locs+0x285/0x3e8)
    [<c038ebd5>] (ftrace_process_locs) from [<c0378d79>] (load_module+0x11e9/0x1a44)
    [<c0378d79>] (load_module) from [<c037974d>] (SyS_finit_module+0x59/0x84)
    [<c037974d>] (SyS_finit_module) from [<c030e981>] (ret_fast_syscall+0x1/0x18)
    ---[ end trace e1b64ced7a89adcd ]---
    ftrace failed to modify [<e9ef7006>] 0xe9ef7006
    actual: 02:f0:3b:fa
    ftrace record flags: 0
    (0) expected tramp: c0314265
    
    [florian: resolved merge conflict with struct
    dyn_arch_ftrace::old_mcount]
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ad8f019376f2c6004cf5248e625d4d0831d8d26d
Author: Alex Sverdlin <alexander.sverdlin@nokia.com>
Date:   Mon Sep 27 14:02:44 2021 -0700

    ARM: 9078/1: Add warn suppress parameter to arm_gen_branch_link()
    
    commit 890cb057a46d323fd8c77ebecb6485476614cd21 upstream
    
    Will be used in the following patch. No functional change.
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c48682033db197b15c0864c629edb07d0fba0ea
Author: Alex Sverdlin <alexander.sverdlin@nokia.com>
Date:   Mon Sep 27 14:02:43 2021 -0700

    ARM: 9077/1: PLT: Move struct plt_entries definition to header
    
    commit 4e271701c17dee70c6e1351c4d7d42e70405c6a9 upstream
    
    No functional change, later it will be re-used in several files.
    
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 849ccf17bd19cbb92e0921539b04c50d5f3f5749
Author: Sai Krishna Potthuri <lakshmi.sai.krishna.potthuri@xilinx.com>
Date:   Wed Aug 18 12:53:14 2021 +0530

    EDAC/synopsys: Fix wrong value type assignment for edac_mode
    
    commit 5297cfa6bdf93e3889f78f9b482e2a595a376083 upstream.
    
    dimm->edac_mode contains values of type enum edac_type - not the
    corresponding capability flags. Fix that.
    
    Issue caught by Coverity check "enumerated type mixed with another
    type."
    
     [ bp: Rewrite commit message, add tags. ]
    
    Fixes: ae9b56e3996d ("EDAC, synps: Add EDAC support for zynq ddr ecc controller")
    Signed-off-by: Sai Krishna Potthuri <lakshmi.sai.krishna.potthuri@xilinx.com>
    Signed-off-by: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20210818072315.15149-1-shubhrajyoti.datta@xilinx.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6a6cced386920fe3d24b79ea129827766ae4106
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Sep 27 17:29:24 2021 -0700

    net: udp: annotate data race around udp_sk(sk)->corkflag
    
    commit a9f5970767d11eadc805d5283f202612c7ba1f59 upstream.
    
    up->corkflag field can be read or written without any lock.
    Annotate accesses to avoid possible syzbot/KCSAN reports.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f890e9e43e07073566683c58a5ec483f1a3c646
Author: yangerkun <yangerkun@huawei.com>
Date:   Tue Sep 14 19:14:15 2021 +0800

    ext4: fix potential infinite loop in ext4_dx_readdir()
    
    commit 42cb447410d024e9d54139ae9c21ea132a8c384c upstream.
    
    When ext4_htree_fill_tree() fails, ext4_dx_readdir() can run into an
    infinite loop since if info->last_pos != ctx->pos this will reset the
    directory scan and reread the failing entry.  For example:
    
    1. a dx_dir which has 3 block, block 0 as dx_root block, block 1/2 as
       leaf block which own the ext4_dir_entry_2
    2. block 1 read ok and call_filldir which will fill the dirent and update
       the ctx->pos
    3. block 2 read fail, but we has already fill some dirent, so we will
       return back to userspace will a positive return val(see ksys_getdents64)
    4. the second ext4_dx_readdir will reset the world since info->last_pos
       != ctx->pos, and will also init the curr_hash which pos to block 1
    5. So we will read block1 too, and once block2 still read fail, we can
       only fill one dirent because the hash of the entry in block1(besides
       the last one) won't greater than curr_hash
    6. this time, we forget update last_pos too since the read for block2
       will fail, and since we has got the one entry, ksys_getdents64 can
       return success
    7. Latter we will trapped in a loop with step 4~6
    
    Cc: stable@kernel.org
    Signed-off-by: yangerkun <yangerkun@huawei.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Link: https://lore.kernel.org/r/20210914111415.3921954-1-yangerkun@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c5b77a7ffc983b2429ce158b50497c5d3c86a69
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Sep 17 13:46:21 2021 +0200

    ipack: ipoctal: fix module reference leak
    
    commit bb8a4fcb2136508224c596a7e665bdba1d7c3c27 upstream.
    
    A reference to the carrier module was taken on every open but was only
    released once when the final reference to the tty struct was dropped.
    
    Fix this by taking the module reference and initialising the tty driver
    data when installing the tty.
    
    Fixes: 82a82340bab6 ("ipoctal: get carrier driver to avoid rmmod")
    Cc: stable@vger.kernel.org      # 3.18
    Cc: Federico Vaga <federico.vaga@cern.ch>
    Acked-by: Samuel Iglesias Gonsalvez <siglesias@igalia.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210917114622.5412-6-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eee92da3b0a1371e52505169003ba8bfabfe44d2
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Sep 17 13:46:20 2021 +0200

    ipack: ipoctal: fix missing allocation-failure check
    
    commit 445c8132727728dc297492a7d9fc074af3e94ba3 upstream.
    
    Add the missing error handling when allocating the transmit buffer to
    avoid dereferencing a NULL pointer in write() should the allocation
    ever fail.
    
    Fixes: ba4dc61fe8c5 ("Staging: ipack: add support for IP-OCTAL mezzanine board")
    Cc: stable@vger.kernel.org      # 3.5
    Acked-by: Samuel Iglesias Gonsalvez <siglesias@igalia.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210917114622.5412-5-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 81e8ac7f3056454b0ebd6e45f843052c8fae491f
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Sep 17 13:46:19 2021 +0200

    ipack: ipoctal: fix tty-registration error handling
    
    commit cd20d59291d1790dc74248476e928f57fc455189 upstream.
    
    Registration of the ipoctal tty devices is unlikely to fail, but if it
    ever does, make sure not to deregister a never registered tty device
    (and dereference a NULL pointer) when the driver is later unbound.
    
    Fixes: 2afb41d9d30d ("Staging: ipack/devices/ipoctal: Check tty_register_device return value.")
    Cc: stable@vger.kernel.org      # 3.7
    Acked-by: Samuel Iglesias Gonsalvez <siglesias@igalia.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210917114622.5412-4-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 15d4f8c9929baf8dab529f9e28e349031f769e27
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Sep 17 13:46:18 2021 +0200

    ipack: ipoctal: fix tty registration race
    
    commit 65c001df517a7bf9be8621b53d43c89f426ce8d6 upstream.
    
    Make sure to set the tty class-device driver data before registering the
    tty to avoid having a racing open() dereference a NULL pointer.
    
    Fixes: 9c1d784afc6f ("Staging: ipack/devices/ipoctal: Get rid of ipoctal_list.")
    Cc: stable@vger.kernel.org      # 3.7
    Acked-by: Samuel Iglesias Gonsalvez <siglesias@igalia.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210917114622.5412-3-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 829f13d6079cf7a2465522f39acb43033e9b320d
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Sep 17 13:46:17 2021 +0200

    ipack: ipoctal: fix stack information leak
    
    commit a89936cce87d60766a75732a9e7e25c51164f47c upstream.
    
    The tty driver name is used also after registering the driver and must
    specifically not be allocated on the stack to avoid leaking information
    to user space (or triggering an oops).
    
    Drivers should not try to encode topology information in the tty device
    name but this one snuck in through staging without anyone noticing and
    another driver has since copied this malpractice.
    
    Fixing the ABI is a separate issue, but this at least plugs the security
    hole.
    
    Fixes: ba4dc61fe8c5 ("Staging: ipack: add support for IP-OCTAL mezzanine board")
    Cc: stable@vger.kernel.org      # 3.5
    Acked-by: Samuel Iglesias Gonsalvez <siglesias@igalia.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210917114622.5412-2-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90b69bd32a137c751a64fdbff4c8521d6c6a172d
Author: Chen Jingwen <chenjingwen6@huawei.com>
Date:   Tue Sep 28 20:56:57 2021 +0800

    elf: don't use MAP_FIXED_NOREPLACE for elf interpreter mappings
    
    commit 9b2f72cc0aa4bb444541bb87581c35b7508b37d3 upstream.
    
    In commit b212921b13bd ("elf: don't use MAP_FIXED_NOREPLACE for elf
    executable mappings") we still leave MAP_FIXED_NOREPLACE in place for
    load_elf_interp.
    
    Unfortunately, this will cause kernel to fail to start with:
    
        1 (init): Uhuuh, elf segment at 00003ffff7ffd000 requested but the memory is mapped already
        Failed to execute /init (error -17)
    
    The reason is that the elf interpreter (ld.so) has overlapping segments.
    
      readelf -l ld-2.31.so
      Program Headers:
        Type           Offset             VirtAddr           PhysAddr
                       FileSiz            MemSiz              Flags  Align
        LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000
                       0x000000000002c94c 0x000000000002c94c  R E    0x10000
        LOAD           0x000000000002dae0 0x000000000003dae0 0x000000000003dae0
                       0x00000000000021e8 0x0000000000002320  RW     0x10000
        LOAD           0x000000000002fe00 0x000000000003fe00 0x000000000003fe00
                       0x00000000000011ac 0x0000000000001328  RW     0x10000
    
    The reason for this problem is the same as described in commit
    ad55eac74f20 ("elf: enforce MAP_FIXED on overlaying elf segments").
    
    Not only executable binaries, elf interpreters (e.g. ld.so) can have
    overlapping elf segments, so we better drop MAP_FIXED_NOREPLACE and go
    back to MAP_FIXED in load_elf_interp.
    
    Fixes: 4ed28639519c ("fs, elf: drop MAP_FIXED usage from elf_map")
    Cc: <stable@vger.kernel.org> # v4.19
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Chen Jingwen <chenjingwen6@huawei.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0512a9aede6e4417c4fa6e0042a7ca8bc7e06b86
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Sep 29 15:57:50 2021 -0700

    af_unix: fix races in sk_peer_pid and sk_peer_cred accesses
    
    [ Upstream commit 35306eb23814444bd4021f8a1c3047d3cb0c8b2b ]
    
    Jann Horn reported that SO_PEERCRED and SO_PEERGROUPS implementations
    are racy, as af_unix can concurrently change sk_peer_pid and sk_peer_cred.
    
    In order to fix this issue, this patch adds a new spinlock that needs
    to be used whenever these fields are read or written.
    
    Jann also pointed out that l2cap_sock_get_peer_pid_cb() is currently
    reading sk->sk_peer_pid which makes no sense, as this field
    is only possibly set by AF_UNIX sockets.
    We will have to clean this in a separate patch.
    This could be done by reverting b48596d1dc25 "Bluetooth: L2CAP: Add get_peer_pid callback"
    or implementing what was truly expected.
    
    Fixes: 109f6e39fa07 ("af_unix: Allow SO_PEERCRED to work across namespaces.")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Jann Horn <jannh@google.com>
    Cc: Eric W. Biederman <ebiederm@xmission.com>
    Cc: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
    Cc: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 14a1b3c12f76e0879e4026f334984a2e9f576ae8
Author: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
Date:   Mon Sep 27 21:44:08 2021 +0530

    scsi: csiostor: Add module softdep on cxgb4
    
    [ Upstream commit 79a7482249a7353bc86aff8127954d5febf02472 ]
    
    Both cxgb4 and csiostor drivers run on their own independent Physical
    Function. But when cxgb4 and csiostor are both being loaded in parallel via
    modprobe, there is a race when firmware upgrade is attempted by both the
    drivers.
    
    When the cxgb4 driver initiates the firmware upgrade, it halts the firmware
    and the chip until upgrade is complete. When the csiostor driver is coming
    up in parallel, the firmware mailbox communication fails with timeouts and
    the csiostor driver probe fails.
    
    Add a module soft dependency on cxgb4 driver to ensure loading csiostor
    triggers cxgb4 to load first when available to avoid the firmware upgrade
    race.
    
    Link: https://lore.kernel.org/r/1632759248-15382-1-git-send-email-rahul.lakkireddy@chelsio.com
    Fixes: a3667aaed569 ("[SCSI] csiostor: Chelsio FCoE offload driver")
    Signed-off-by: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9676ed4dd1af7834fa9129bafc3597ee2187f190
Author: Jens Axboe <axboe@kernel.dk>
Date:   Tue Sep 28 06:33:15 2021 -0600

    Revert "block, bfq: honor already-setup queue merges"
    
    [ Upstream commit ebc69e897e17373fbe1daaff1debaa77583a5284 ]
    
    This reverts commit 2d52c58b9c9bdae0ca3df6a1eab5745ab3f7d80b.
    
    We have had several folks complain that this causes hangs for them, which
    is especially problematic as the commit has also hit stable already.
    
    As no resolution seems to be forthcoming right now, revert the patch.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=214503
    Fixes: 2d52c58b9c9b ("block, bfq: honor already-setup queue merges")
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 89caeb43dee5301e11e4b78d4ca424bf7e5032bb
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Wed Sep 8 10:52:37 2021 -0700

    e100: fix buffer overrun in e100_get_regs
    
    [ Upstream commit 51032e6f17ce990d06123ad7307f258c50d25aa7 ]
    
    The e100_get_regs function is used to implement a simple register dump
    for the e100 device. The data is broken into a couple of MAC control
    registers, and then a series of PHY registers, followed by a memory dump
    buffer.
    
    The total length of the register dump is defined as (1 + E100_PHY_REGS)
    * sizeof(u32) + sizeof(nic->mem->dump_buf).
    
    The logic for filling in the PHY registers uses a convoluted inverted
    count for loop which counts from E100_PHY_REGS (0x1C) down to 0, and
    assigns the slots 1 + E100_PHY_REGS - i. The first loop iteration will
    fill in [1] and the final loop iteration will fill in [1 + 0x1C]. This
    is actually one more than the supposed number of PHY registers.
    
    The memory dump buffer is then filled into the space at
    [2 + E100_PHY_REGS] which will cause that memcpy to assign 4 bytes past
    the total size.
    
    The end result is that we overrun the total buffer size allocated by the
    kernel, which could lead to a panic or other issues due to memory
    corruption.
    
    It is difficult to determine the actual total number of registers
    here. The only 8255x datasheet I could find indicates there are 28 total
    MDI registers. However, we're reading 29 here, and reading them in
    reverse!
    
    In addition, the ethtool e100 register dump interface appears to read
    the first PHY register to determine if the device is in MDI or MDIx
    mode. This doesn't appear to be documented anywhere within the 8255x
    datasheet. I can only assume it must be in register 28 (the extra
    register we're reading here).
    
    Lets not change any of the intended meaning of what we copy here. Just
    extend the space by 4 bytes to account for the extra register and
    continue copying the data out in the same order.
    
    Change the E100_PHY_REGS value to be the correct total (29) so that the
    total register dump size is calculated properly. Fix the offset for
    where we copy the dump buffer so that it doesn't overrun the total size.
    
    Re-write the for loop to use counting up instead of the convoluted
    down-counting. Correct the mdio_read offset to use the 0-based register
    offsets, but maintain the bizarre reverse ordering so that we have the
    ABI expected by applications like ethtool. This requires and additional
    subtraction of 1. It seems a bit odd but it makes the flow of assignment
    into the register buffer easier to follow.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Reported-by: Felicitas Hetzelt <felicitashetzelt@gmail.com>
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Jacob Keller <jacob.e.keller@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e9bdf727ccc04de20459a63c128ab397211a5631
Author: Jacob Keller <jacob.e.keller@intel.com>
Date:   Wed Sep 8 10:52:36 2021 -0700

    e100: fix length calculation in e100_get_regs_len
    
    [ Upstream commit 4329c8dc110b25d5f04ed20c6821bb60deff279f ]
    
    commit abf9b902059f ("e100: cleanup unneeded math") tried to simplify
    e100_get_regs_len and remove a double 'divide and then multiply'
    calculation that the e100_reg_regs_len function did.
    
    This change broke the size calculation entirely as it failed to account
    for the fact that the numbered registers are actually 4 bytes wide and
    not 1 byte. This resulted in a significant under allocation of the
    register buffer used by e100_get_regs.
    
    Fix this by properly multiplying the register count by u32 first before
    adding the size of the dump buffer.
    
    Fixes: abf9b902059f ("e100: cleanup unneeded math")
    Reported-by: Felicitas Hetzelt <felicitashetzelt@gmail.com>
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b07673f7061fe7939753fec9aa652f5211d1630
Author: Paul Fertser <fercerpav@gmail.com>
Date:   Fri Sep 24 12:30:11 2021 +0300

    hwmon: (tmp421) fix rounding for negative values
    
    [ Upstream commit 724e8af85854c4d3401313b6dd7d79cf792d8990 ]
    
    Old code produces -24999 for 0b1110011100000000 input in standard format due to
    always rounding up rather than "away from zero".
    
    Use the common macro for division, unify and simplify the conversion code along
    the way.
    
    Fixes: 9410700b881f ("hwmon: Add driver for Texas Instruments TMP421/422/423 sensor chips")
    Signed-off-by: Paul Fertser <fercerpav@gmail.com>
    Link: https://lore.kernel.org/r/20210924093011.26083-3-fercerpav@gmail.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 684649f3db8b46cf82a6f6db7a554f10c14505a5
Author: Paul Fertser <fercerpav@gmail.com>
Date:   Fri Sep 24 12:30:10 2021 +0300

    hwmon: (tmp421) report /PVLD condition as fault
    
    [ Upstream commit 540effa7f283d25bcc13c0940d808002fee340b8 ]
    
    For both local and remote sensors all the supported ICs can report an
    "undervoltage lockout" condition which means the conversion wasn't
    properly performed due to insufficient power supply voltage and so the
    measurement results can't be trusted.
    
    Fixes: 9410700b881f ("hwmon: Add driver for Texas Instruments TMP421/422/423 sensor chips")
    Signed-off-by: Paul Fertser <fercerpav@gmail.com>
    Link: https://lore.kernel.org/r/20210924093011.26083-2-fercerpav@gmail.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fe13004feec043284f6c654bc8f045477199dfd
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Mon Dec 10 14:02:23 2018 -0800

    hwmon: (tmp421) Replace S_<PERMS> with octal values
    
    [ Upstream commit b626eb22f9e17fcca4e262a8274e93690068557f ]
    
    Replace S_<PERMS> with octal values.
    
    The conversion was done automatically with coccinelle. The semantic patches
    and the scripts used to generate this commit log are available at
    https://github.com/groeck/coccinelle-patches/hwmon/.
    
    This patch does not introduce functional changes. It was verified by
    compiling the old and new files and comparing text and data sizes.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c630a7b4f9dec63f08bd881ab77984a724a5124
Author: Xin Long <lucien.xin@gmail.com>
Date:   Thu Sep 23 00:05:04 2021 -0400

    sctp: break out if skb_header_pointer returns NULL in sctp_rcv_ootb
    
    [ Upstream commit f7e745f8e94492a8ac0b0a26e25f2b19d342918f ]
    
    We should always check if skb_header_pointer's return is NULL before
    using it, otherwise it may cause null-ptr-deref, as syzbot reported:
    
      KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
      RIP: 0010:sctp_rcv_ootb net/sctp/input.c:705 [inline]
      RIP: 0010:sctp_rcv+0x1d84/0x3220 net/sctp/input.c:196
      Call Trace:
      <IRQ>
       sctp6_rcv+0x38/0x60 net/sctp/ipv6.c:1109
       ip6_protocol_deliver_rcu+0x2e9/0x1ca0 net/ipv6/ip6_input.c:422
       ip6_input_finish+0x62/0x170 net/ipv6/ip6_input.c:463
       NF_HOOK include/linux/netfilter.h:307 [inline]
       NF_HOOK include/linux/netfilter.h:301 [inline]
       ip6_input+0x9c/0xd0 net/ipv6/ip6_input.c:472
       dst_input include/net/dst.h:460 [inline]
       ip6_rcv_finish net/ipv6/ip6_input.c:76 [inline]
       NF_HOOK include/linux/netfilter.h:307 [inline]
       NF_HOOK include/linux/netfilter.h:301 [inline]
       ipv6_rcv+0x28c/0x3c0 net/ipv6/ip6_input.c:297
    
    Fixes: 3acb50c18d8d ("sctp: delay as much as possible skb_linearize")
    Reported-by: syzbot+581aff2ae6b860625116@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 76538c7b4df314bb937e44c5cb1782f37d47443c
Author: Lorenzo Bianconi <lorenzo@kernel.org>
Date:   Mon Sep 20 14:45:22 2021 +0200

    mac80211: limit injected vht mcs/nss in ieee80211_parse_tx_radiotap
    
    [ Upstream commit 13cb6d826e0ac0d144b0d48191ff1a111d32f0c6 ]
    
    Limit max values for vht mcs and nss in ieee80211_parse_tx_radiotap
    routine in order to fix the following warning reported by syzbot:
    
    WARNING: CPU: 0 PID: 10717 at include/net/mac80211.h:989 ieee80211_rate_set_vht include/net/mac80211.h:989 [inline]
    WARNING: CPU: 0 PID: 10717 at include/net/mac80211.h:989 ieee80211_parse_tx_radiotap+0x101e/0x12d0 net/mac80211/tx.c:2244
    Modules linked in:
    CPU: 0 PID: 10717 Comm: syz-executor.5 Not tainted 5.14.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:ieee80211_rate_set_vht include/net/mac80211.h:989 [inline]
    RIP: 0010:ieee80211_parse_tx_radiotap+0x101e/0x12d0 net/mac80211/tx.c:2244
    RSP: 0018:ffffc9000186f3e8 EFLAGS: 00010216
    RAX: 0000000000000618 RBX: ffff88804ef76500 RCX: ffffc900143a5000
    RDX: 0000000000040000 RSI: ffffffff888f478e RDI: 0000000000000003
    RBP: 00000000ffffffff R08: 0000000000000000 R09: 0000000000000100
    R10: ffffffff888f46f9 R11: 0000000000000000 R12: 00000000fffffff8
    R13: ffff88804ef7653c R14: 0000000000000001 R15: 0000000000000004
    FS:  00007fbf5718f700(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000001b2de23000 CR3: 000000006a671000 CR4: 00000000001506f0
    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600
    Call Trace:
     ieee80211_monitor_select_queue+0xa6/0x250 net/mac80211/iface.c:740
     netdev_core_pick_tx+0x169/0x2e0 net/core/dev.c:4089
     __dev_queue_xmit+0x6f9/0x3710 net/core/dev.c:4165
     __bpf_tx_skb net/core/filter.c:2114 [inline]
     __bpf_redirect_no_mac net/core/filter.c:2139 [inline]
     __bpf_redirect+0x5ba/0xd20 net/core/filter.c:2162
     ____bpf_clone_redirect net/core/filter.c:2429 [inline]
     bpf_clone_redirect+0x2ae/0x420 net/core/filter.c:2401
     bpf_prog_eeb6f53a69e5c6a2+0x59/0x234
     bpf_dispatcher_nop_func include/linux/bpf.h:717 [inline]
     __bpf_prog_run include/linux/filter.h:624 [inline]
     bpf_prog_run include/linux/filter.h:631 [inline]
     bpf_test_run+0x381/0xa30 net/bpf/test_run.c:119
     bpf_prog_test_run_skb+0xb84/0x1ee0 net/bpf/test_run.c:663
     bpf_prog_test_run kernel/bpf/syscall.c:3307 [inline]
     __sys_bpf+0x2137/0x5df0 kernel/bpf/syscall.c:4605
     __do_sys_bpf kernel/bpf/syscall.c:4691 [inline]
     __se_sys_bpf kernel/bpf/syscall.c:4689 [inline]
     __x64_sys_bpf+0x75/0xb0 kernel/bpf/syscall.c:4689
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    RIP: 0033:0x4665f9
    
    Reported-by: syzbot+0196ac871673f0c20f68@syzkaller.appspotmail.com
    Fixes: 646e76bb5daf4 ("mac80211: parse VHT info in injected frames")
    Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
    Link: https://lore.kernel.org/r/c26c3f02dcb38ab63b2f2534cb463d95ee81bb13.1632141760.git.lorenzo@kernel.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7056d1747042473dcdaa3b23734d3b9c31f6e9cd
Author: Chih-Kang Chang <gary.chang@realtek.com>
Date:   Mon Aug 30 15:32:40 2021 +0800

    mac80211: Fix ieee80211_amsdu_aggregate frag_tail bug
    
    [ Upstream commit fe94bac626d9c1c5bc98ab32707be8a9d7f8adba ]
    
    In ieee80211_amsdu_aggregate() set a pointer frag_tail point to the
    end of skb_shinfo(head)->frag_list, and use it to bind other skb in
    the end of this function. But when execute ieee80211_amsdu_aggregate()
    ->ieee80211_amsdu_realloc_pad()->pskb_expand_head(), the address of
    skb_shinfo(head)->frag_list will be changed. However, the
    ieee80211_amsdu_aggregate() not update frag_tail after call
    pskb_expand_head(). That will cause the second skb can't bind to the
    head skb appropriately.So we update the address of frag_tail to fix it.
    
    Fixes: 6e0456b54545 ("mac80211: add A-MSDU tx support")
    Signed-off-by: Chih-Kang Chang <gary.chang@realtek.com>
    Signed-off-by: Zong-Zhe Yang <kevin_yang@realtek.com>
    Signed-off-by: Ping-Ke Shih <pkshih@realtek.com>
    Link: https://lore.kernel.org/r/20210830073240.12736-1-pkshih@realtek.com
    [reword comment]
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c6e0bce647d9cb32a17d58ffa669b3421fcc6ca
Author: Vadim Pasternak <vadimp@nvidia.com>
Date:   Thu Sep 16 21:31:51 2021 +0300

    hwmon: (mlxreg-fan) Return non-zero value when fan current state is enforced from sysfs
    
    [ Upstream commit e6fab7af6ba1bc77c78713a83876f60ca7a4a064 ]
    
    Fan speed minimum can be enforced from sysfs. For example, setting
    current fan speed to 20 is used to enforce fan speed to be at 100%
    speed, 19 - to be not below 90% speed, etcetera. This feature provides
    ability to limit fan speed according to some system wise
    considerations, like absence of some replaceable units or high system
    ambient temperature.
    
    Request for changing fan minimum speed is configuration request and can
    be set only through 'sysfs' write procedure. In this situation value of
    argument 'state' is above nominal fan speed maximum.
    
    Return non-zero code in this case to avoid
    thermal_cooling_device_stats_update() call, because in this case
    statistics update violates thermal statistics table range.
    The issues is observed in case kernel is configured with option
    CONFIG_THERMAL_STATISTICS.
    
    Here is the trace from KASAN:
    [  159.506659] BUG: KASAN: slab-out-of-bounds in thermal_cooling_device_stats_update+0x7d/0xb0
    [  159.516016] Read of size 4 at addr ffff888116163840 by task hw-management.s/7444
    [  159.545625] Call Trace:
    [  159.548366]  dump_stack+0x92/0xc1
    [  159.552084]  ? thermal_cooling_device_stats_update+0x7d/0xb0
    [  159.635869]  thermal_zone_device_update+0x345/0x780
    [  159.688711]  thermal_zone_device_set_mode+0x7d/0xc0
    [  159.694174]  mlxsw_thermal_modules_init+0x48f/0x590 [mlxsw_core]
    [  159.700972]  ? mlxsw_thermal_set_cur_state+0x5a0/0x5a0 [mlxsw_core]
    [  159.731827]  mlxsw_thermal_init+0x763/0x880 [mlxsw_core]
    [  160.070233] RIP: 0033:0x7fd995909970
    [  160.074239] Code: 73 01 c3 48 8b 0d 28 d5 2b 00 f7 d8 64 89 01 48 83 c8 ff c3 66 0f 1f 44 00 00 83 3d 99 2d 2c 00 00 75 10 b8 01 00 00 00 0f 05 <48> 3d 01 f0 ff ..
    [  160.095242] RSP: 002b:00007fff54f5d938 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    [  160.103722] RAX: ffffffffffffffda RBX: 0000000000000013 RCX: 00007fd995909970
    [  160.111710] RDX: 0000000000000013 RSI: 0000000001906008 RDI: 0000000000000001
    [  160.119699] RBP: 0000000001906008 R08: 00007fd995bc9760 R09: 00007fd996210700
    [  160.127687] R10: 0000000000000073 R11: 0000000000000246 R12: 0000000000000013
    [  160.135673] R13: 0000000000000001 R14: 00007fd995bc8600 R15: 0000000000000013
    [  160.143671]
    [  160.145338] Allocated by task 2924:
    [  160.149242]  kasan_save_stack+0x19/0x40
    [  160.153541]  __kasan_kmalloc+0x7f/0xa0
    [  160.157743]  __kmalloc+0x1a2/0x2b0
    [  160.161552]  thermal_cooling_device_setup_sysfs+0xf9/0x1a0
    [  160.167687]  __thermal_cooling_device_register+0x1b5/0x500
    [  160.173833]  devm_thermal_of_cooling_device_register+0x60/0xa0
    [  160.180356]  mlxreg_fan_probe+0x474/0x5e0 [mlxreg_fan]
    [  160.248140]
    [  160.249807] The buggy address belongs to the object at ffff888116163400
    [  160.249807]  which belongs to the cache kmalloc-1k of size 1024
    [  160.263814] The buggy address is located 64 bytes to the right of
    [  160.263814]  1024-byte region [ffff888116163400, ffff888116163800)
    [  160.277536] The buggy address belongs to the page:
    [  160.282898] page:0000000012275840 refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff888116167000 pfn:0x116160
    [  160.294872] head:0000000012275840 order:3 compound_mapcount:0 compound_pincount:0
    [  160.303251] flags: 0x200000000010200(slab|head|node=0|zone=2)
    [  160.309694] raw: 0200000000010200 ffffea00046f7208 ffffea0004928208 ffff88810004dbc0
    [  160.318367] raw: ffff888116167000 00000000000a0006 00000001ffffffff 0000000000000000
    [  160.327033] page dumped because: kasan: bad access detected
    [  160.333270]
    [  160.334937] Memory state around the buggy address:
    [  160.356469] >ffff888116163800: fc ..
    
    Fixes: 65afb4c8e7e4 ("hwmon: (mlxreg-fan) Add support for Mellanox FAN driver")
    Signed-off-by: Vadim Pasternak <vadimp@nvidia.com>
    Link: https://lore.kernel.org/r/20210916183151.869427-1-vadimp@nvidia.com
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23f30f9f87723e8584962015f30fe4ae2e929297
Author: Andrea Claudi <aclaudi@redhat.com>
Date:   Fri Sep 10 18:08:39 2021 +0200

    ipvs: check that ip_vs_conn_tab_bits is between 8 and 20
    
    [ Upstream commit 69e73dbfda14fbfe748d3812da1244cce2928dcb ]
    
    ip_vs_conn_tab_bits may be provided by the user through the
    conn_tab_bits module parameter. If this value is greater than 31, or
    less than 0, the shift operator used to derive tab_size causes undefined
    behaviour.
    
    Fix this checking ip_vs_conn_tab_bits value to be in the range specified
    in ipvs Kconfig. If not, simply use default value.
    
    Fixes: 6f7edb4881bf ("IPVS: Allow boot time change of hash size")
    Reported-by: Yi Chen <yiche@redhat.com>
    Signed-off-by: Andrea Claudi <aclaudi@redhat.com>
    Acked-by: Julian Anastasov <ja@ssi.bg>
    Acked-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d1e851cf07cb39db20489130406879c7d17b6675
Author: Charlene Liu <Charlene.Liu@amd.com>
Date:   Mon Sep 20 14:30:02 2021 -0400

    drm/amd/display: Pass PCI deviceid into DC
    
    commit d942856865c733ff60450de9691af796ad71d7bc upstream.
    
    [why]
    pci deviceid not passed to dal dc, without proper break,
    dcn2.x falls into dcn3.x code path
    
    [how]
    pass in pci deviceid, and break once dal_version initialized.
    
    Reviewed-by: Zhan Liu <Zhan.Liu@amd.com>
    Acked-by: Anson Jacob <Anson.Jacob@amd.com>
    Signed-off-by: Charlene Liu <Charlene.Liu@amd.com>
    Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6ba8a8c3782287a72aed2b99fac7dd5e29d1e9d
Author: Zelin Deng <zelin.deng@linux.alibaba.com>
Date:   Wed Sep 29 13:13:48 2021 +0800

    x86/kvmclock: Move this_cpu_pvti into kvmclock.h
    
    commit ad9af930680bb396c87582edc172b3a7cf2a3fbf upstream.
    
    There're other modules might use hv_clock_per_cpu variable like ptp_kvm,
    so move it into kvmclock.h and export the symbol to make it visiable to
    other modules.
    
    Signed-off-by: Zelin Deng <zelin.deng@linux.alibaba.com>
    Cc: <stable@vger.kernel.org>
    Message-Id: <1632892429-101194-2-git-send-email-zelin.deng@linux.alibaba.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d5d629c99c468458022e9b381789de3595bf4dd
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Sep 27 11:58:39 2021 +0200

    mac80211: fix use-after-free in CCMP/GCMP RX
    
    commit 94513069eb549737bcfc3d988d6ed4da948a2de8 upstream.
    
    When PN checking is done in mac80211, for fragmentation we need
    to copy the PN to the RX struct so we can later use it to do a
    comparison, since commit bf30ca922a0c ("mac80211: check defrag
    PN against current frame").
    
    Unfortunately, in that commit I used the 'hdr' variable without
    it being necessarily valid, so use-after-free could occur if it
    was necessary to reallocate (parts of) the frame.
    
    Fix this by reloading the variable after the code that results
    in the reallocations, if any.
    
    This fixes https://bugzilla.kernel.org/show_bug.cgi?id=214401.
    
    Cc: stable@vger.kernel.org
    Fixes: bf30ca922a0c ("mac80211: check defrag PN against current frame")
    Link: https://lore.kernel.org/r/20210927115838.12b9ac6bb233.I1d066acd5408a662c3b6e828122cd314fcb28cdb@changeid
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3cb9595e23d879824ebcefeabdf5156bc288000c
Author: James Morse <james.morse@arm.com>
Date:   Tue Sep 14 16:56:23 2021 +0000

    cpufreq: schedutil: Destroy mutex before kobject_put() frees the memory
    
    [ Upstream commit cdef1196608892b9a46caa5f2b64095a7f0be60c ]
    
    Since commit e5c6b312ce3c ("cpufreq: schedutil: Use kobject release()
    method to free sugov_tunables") kobject_put() has kfree()d the
    attr_set before gov_attr_set_put() returns.
    
    kobject_put() isn't the last user of attr_set in gov_attr_set_put(),
    the subsequent mutex_destroy() triggers a use-after-free:
    | BUG: KASAN: use-after-free in mutex_is_locked+0x20/0x60
    | Read of size 8 at addr ffff000800ca4250 by task cpuhp/2/20
    |
    | CPU: 2 PID: 20 Comm: cpuhp/2 Not tainted 5.15.0-rc1 #12369
    | Hardware name: ARM LTD ARM Juno Development Platform/ARM Juno Development
    | Platform, BIOS EDK II Jul 30 2018
    | Call trace:
    |  dump_backtrace+0x0/0x380
    |  show_stack+0x1c/0x30
    |  dump_stack_lvl+0x8c/0xb8
    |  print_address_description.constprop.0+0x74/0x2b8
    |  kasan_report+0x1f4/0x210
    |  kasan_check_range+0xfc/0x1a4
    |  __kasan_check_read+0x38/0x60
    |  mutex_is_locked+0x20/0x60
    |  mutex_destroy+0x80/0x100
    |  gov_attr_set_put+0xfc/0x150
    |  sugov_exit+0x78/0x190
    |  cpufreq_offline.isra.0+0x2c0/0x660
    |  cpuhp_cpufreq_offline+0x14/0x24
    |  cpuhp_invoke_callback+0x430/0x6d0
    |  cpuhp_thread_fun+0x1b0/0x624
    |  smpboot_thread_fn+0x5e0/0xa6c
    |  kthread+0x3a0/0x450
    |  ret_from_fork+0x10/0x20
    
    Swap the order of the calls.
    
    Fixes: e5c6b312ce3c ("cpufreq: schedutil: Use kobject release() method to free sugov_tunables")
    Cc: 4.7+ <stable@vger.kernel.org> # 4.7+
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30d57cf2c4116ca6d34ecd1cac94ad84f8bc446c
Author: Kevin Hao <haokexin@gmail.com>
Date:   Thu Aug 5 15:29:17 2021 +0800

    cpufreq: schedutil: Use kobject release() method to free sugov_tunables
    
    [ Upstream commit e5c6b312ce3cc97e90ea159446e6bfa06645364d ]
    
    The struct sugov_tunables is protected by the kobject, so we can't free
    it directly. Otherwise we would get a call trace like this:
      ODEBUG: free active (active state 0) object type: timer_list hint: delayed_work_timer_fn+0x0/0x30
      WARNING: CPU: 3 PID: 720 at lib/debugobjects.c:505 debug_print_object+0xb8/0x100
      Modules linked in:
      CPU: 3 PID: 720 Comm: a.sh Tainted: G        W         5.14.0-rc1-next-20210715-yocto-standard+ #507
      Hardware name: Marvell OcteonTX CN96XX board (DT)
      pstate: 40400009 (nZcv daif +PAN -UAO -TCO BTYPE=--)
      pc : debug_print_object+0xb8/0x100
      lr : debug_print_object+0xb8/0x100
      sp : ffff80001ecaf910
      x29: ffff80001ecaf910 x28: ffff00011b10b8d0 x27: ffff800011043d80
      x26: ffff00011a8f0000 x25: ffff800013cb3ff0 x24: 0000000000000000
      x23: ffff80001142aa68 x22: ffff800011043d80 x21: ffff00010de46f20
      x20: ffff800013c0c520 x19: ffff800011d8f5b0 x18: 0000000000000010
      x17: 6e6968207473696c x16: 5f72656d6974203a x15: 6570797420746365
      x14: 6a626f2029302065 x13: 303378302f307830 x12: 2b6e665f72656d69
      x11: ffff8000124b1560 x10: ffff800012331520 x9 : ffff8000100ca6b0
      x8 : 000000000017ffe8 x7 : c0000000fffeffff x6 : 0000000000000001
      x5 : ffff800011d8c000 x4 : ffff800011d8c740 x3 : 0000000000000000
      x2 : ffff0001108301c0 x1 : ab3c90eedf9c0f00 x0 : 0000000000000000
      Call trace:
       debug_print_object+0xb8/0x100
       __debug_check_no_obj_freed+0x1c0/0x230
       debug_check_no_obj_freed+0x20/0x88
       slab_free_freelist_hook+0x154/0x1c8
       kfree+0x114/0x5d0
       sugov_exit+0xbc/0xc0
       cpufreq_exit_governor+0x44/0x90
       cpufreq_set_policy+0x268/0x4a8
       store_scaling_governor+0xe0/0x128
       store+0xc0/0xf0
       sysfs_kf_write+0x54/0x80
       kernfs_fop_write_iter+0x128/0x1c0
       new_sync_write+0xf0/0x190
       vfs_write+0x2d4/0x478
       ksys_write+0x74/0x100
       __arm64_sys_write+0x24/0x30
       invoke_syscall.constprop.0+0x54/0xe0
       do_el0_svc+0x64/0x158
       el0_svc+0x2c/0xb0
       el0t_64_sync_handler+0xb0/0xb8
       el0t_64_sync+0x198/0x19c
      irq event stamp: 5518
      hardirqs last  enabled at (5517): [<ffff8000100cbd7c>] console_unlock+0x554/0x6c8
      hardirqs last disabled at (5518): [<ffff800010fc0638>] el1_dbg+0x28/0xa0
      softirqs last  enabled at (5504): [<ffff8000100106e0>] __do_softirq+0x4d0/0x6c0
      softirqs last disabled at (5483): [<ffff800010049548>] irq_exit+0x1b0/0x1b8
    
    So split the original sugov_tunables_free() into two functions,
    sugov_clear_global_tunables() is just used to clear the global_tunables
    and the new sugov_tunables_free() is used as kobj_type::release to
    release the sugov_tunables safely.
    
    Fixes: 9bdcb44e391d ("cpufreq: schedutil: New governor based on scheduler utilization data")
    Cc: 4.7+ <stable@vger.kernel.org> # 4.7+
    Signed-off-by: Kevin Hao <haokexin@gmail.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a6a240f52e14356386030d8958ae8b1761d2325
Author: Igor Matheus Andrade Torrente <igormtorrente@gmail.com>
Date:   Mon Jun 28 10:45:09 2021 -0300

    tty: Fix out-of-bound vmalloc access in imageblit
    
    [ Upstream commit 3b0c406124719b625b1aba431659f5cdc24a982c ]
    
    This issue happens when a userspace program does an ioctl
    FBIOPUT_VSCREENINFO passing the fb_var_screeninfo struct
    containing only the fields xres, yres, and bits_per_pixel
    with values.
    
    If this struct is the same as the previous ioctl, the
    vc_resize() detects it and doesn't call the resize_screen(),
    leaving the fb_var_screeninfo incomplete. And this leads to
    the updatescrollmode() calculates a wrong value to
    fbcon_display->vrows, which makes the real_y() return a
    wrong value of y, and that value, eventually, causes
    the imageblit to access an out-of-bound address value.
    
    To solve this issue I made the resize_screen() be called
    even if the screen does not need any resizing, so it will
    "fix and fill" the fb_var_screeninfo independently.
    
    Cc: stable <stable@vger.kernel.org> # after 5.15-rc2 is out, give it time to bake
    Reported-and-tested-by: syzbot+858dc7a2f7ef07c2c219@syzkaller.appspotmail.com
    Signed-off-by: Igor Matheus Andrade Torrente <igormtorrente@gmail.com>
    Link: https://lore.kernel.org/r/20210628134509.15895-1-igormtorrente@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a4250df12f44ec736c4e30ece86a63a2c379663b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 20 10:26:21 2021 -0700

    qnx4: work around gcc false positive warning bug
    
    commit d5f6545934c47e97c0b48a645418e877b452a992 upstream.
    
    In commit b7213ffa0e58 ("qnx4: avoid stringop-overread errors") I tried
    to teach gcc about how the directory entry structure can be two
    different things depending on a status flag.  It made the code clearer,
    and it seemed to make gcc happy.
    
    However, Arnd points to a gcc bug, where despite using two different
    members of a union, gcc then gets confused, and uses the size of one of
    the members to decide if a string overrun happens.  And not necessarily
    the rigth one.
    
    End result: with some configurations, gcc-11 will still complain about
    the source buffer size being overread:
    
      fs/qnx4/dir.c: In function 'qnx4_readdir':
      fs/qnx4/dir.c:76:32: error: 'strnlen' specified bound [16, 48] exceeds source size 1 [-Werror=stringop-overread]
         76 |                         size = strnlen(name, size);
            |                                ^~~~~~~~~~~~~~~~~~~
      fs/qnx4/dir.c:26:22: note: source object declared here
         26 |                 char de_name;
            |                      ^~~~~~~
    
    because gcc will get confused about which union member entry is actually
    getting accessed, even when the source code is very clear about it.  Gcc
    internally will have combined two "redundant" pointers (pointing to
    different union elements that are at the same offset), and takes the
    size checking from one or the other - not necessarily the right one.
    
    This is clearly a gcc bug, but we can work around it fairly easily.  The
    biggest thing here is the big honking comment about why we do what we
    do.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=99578#c6
    Reported-and-tested-by: Arnd Bergmann <arnd@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb382bc0a7976d2ce1645fcfbf2e982d19c495d3
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Sep 20 12:03:45 2021 +0200

    xen/balloon: fix balloon kthread freezing
    
    commit 96f5bd03e1be606987644b71899ea56a8d05f825 upstream.
    
    Commit 8480ed9c2bbd56 ("xen/balloon: use a kernel thread instead a
    workqueue") switched the Xen balloon driver to use a kernel thread.
    Unfortunately the patch omitted to call try_to_freeze() or to use
    wait_event_freezable_timeout(), causing a system suspend to fail.
    
    Fixes: 8480ed9c2bbd56 ("xen/balloon: use a kernel thread instead a workqueue")
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20210920100345.21939-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 03e606e751fbc7179044045603e200346e56be80
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Sep 30 15:44:44 2019 -0700

    tcp: adjust rto_base in retransmits_timed_out()
    
    commit 3256a2d6ab1f71f9a1bd2d7f6f18eb8108c48d17 upstream.
    
    The cited commit exposed an old retransmits_timed_out() bug
    which assumed it could call tcp_model_timeout() with
    TCP_RTO_MIN as rto_base for all states.
    
    But flows in SYN_SENT or SYN_RECV state uses a different
    RTO base (1 sec instead of 200 ms, unless BPF choses
    another value)
    
    This caused a reduction of SYN retransmits from 6 to 4 with
    the default /proc/sys/net/ipv4/tcp_syn_retries value.
    
    Fixes: a41e8a88b06e ("tcp: better handle TCP_USER_TIMEOUT in SYN_SENT state")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Yuchung Cheng <ycheng@google.com>
    Cc: Marek Majkowski <marek@cloudflare.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Qiumiao Zhang <zhangqiumiao1@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db0fd9c9a6eb1173ec453f8cbffd20a464a47a61
Author: Yuchung Cheng <ycheng@google.com>
Date:   Wed Jan 16 15:05:32 2019 -0800

    tcp: create a helper to model exponential backoff
    
    commit 01a523b071618abbc634d1958229fe3bd2dfa5fa upstream.
    
    Create a helper to model TCP exponential backoff for the next patch.
    This is pure refactor w no behavior change.
    
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: Neal Cardwell <ncardwell@google.com>
    Reviewed-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Qiumiao Zhang <zhangqiumiao1@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9de7f0d60b996469a89a10e7bbf56e91d8ffad73
Author: Yuchung Cheng <ycheng@google.com>
Date:   Wed Jan 16 15:05:30 2019 -0800

    tcp: always set retrans_stamp on recovery
    
    commit 7ae189759cc48cf8b54beebff566e9fd2d4e7d7c upstream.
    
    Previously TCP socket's retrans_stamp is not set if the
    retransmission has failed to send. As a result if a socket is
    experiencing local issues to retransmit packets, determining when
    to abort a socket is complicated w/o knowning the starting time of
    the recovery since retrans_stamp may remain zero.
    
    This complication causes sub-optimal behavior that TCP may use the
    latest, instead of the first, retransmission time to compute the
    elapsed time of a stalling connection due to local issues. Then TCP
    may disrecard TCP retries settings and keep retrying until it finally
    succeed: not a good idea when the local host is already strained.
    
    The simple fix is to always timestamp the start of a recovery.
    It's worth noting that retrans_stamp is also used to compare echo
    timestamp values to detect spurious recovery. This patch does
    not break that because retrans_stamp is still later than when the
    original packet was sent.
    
    Signed-off-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reviewed-by: Neal Cardwell <ncardwell@google.com>
    Reviewed-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Qiumiao Zhang <zhangqiumiao1@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb6eeb056c992d20a4d3b4fb7dd05471ba32fea3
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Nov 24 09:12:24 2018 -0800

    tcp: address problems caused by EDT misshaps
    
    commit 9efdda4e3abed13f0903b7b6e4d4c2102019440a upstream.
    
    When a qdisc setup including pacing FQ is dismantled and recreated,
    some TCP packets are sent earlier than instructed by TCP stack.
    
    TCP can be fooled when ACK comes back, because the following
    operation can return a negative value.
    
        tcp_time_stamp(tp) - tp->rx_opt.rcv_tsecr;
    
    Some paths in TCP stack were not dealing properly with this,
    this patch addresses four of them.
    
    Fixes: ab408b6dc744 ("tcp: switch tcp and sch_fq to new earliest departure time model")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Qiumiao Zhang <zhangqiumiao1@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9f94fc13c94810db7fc0335b03f2590757d27f0d
Author: Evan Wang <xswang@marvell.com>
Date:   Thu Jul 22 16:40:38 2021 +0200

    PCI: aardvark: Fix checking for PIO status
    
    commit fcb461e2bc8b83b7eaca20cb2221e8b940f2189c upstream.
    
    There is an issue that when PCIe switch is connected to an Armada 3700
    board, there will be lots of warnings about PIO errors when reading the
    config space. According to Aardvark PIO read and write sequence in HW
    specification, the current way to check PIO status has the following
    issues:
    
    1) For PIO read operation, it reports the error message, which should be
       avoided according to HW specification.
    
    2) For PIO read and write operations, it only checks PIO operation complete
       status, which is not enough, and error status should also be checked.
    
    This patch aligns the code with Aardvark PIO read and write sequence in HW
    specification on PIO status check and fix the warnings when reading config
    space.
    
    [pali: Fix CRS handling when CRSSVE is not enabled]
    
    Link: https://lore.kernel.org/r/20210722144041.12661-2-pali@kernel.org
    Tested-by: Victor Gu <xigu@marvell.com>
    Signed-off-by: Evan Wang <xswang@marvell.com>
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Victor Gu <xigu@marvell.com>
    Reviewed-by: Marek Behún <kabel@kernel.org>
    Cc: stable@vger.kernel.org # b1bd5714472c ("PCI: aardvark: Indicate error in 'val' when config read fails")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 559966652a1dffa6e26c5b2293f547314c20dac9
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Jun 24 23:55:46 2021 +0200

    arm64: dts: marvell: armada-37xx: Extend PCIe MEM space
    
    commit 514ef1e62d6521c2199d192b1c71b79d2aa21d5a upstream.
    
    Current PCIe MEM space of size 16 MB is not enough for some combination
    of PCIe cards (e.g. NVMe disk together with ath11k wifi card). ARM Trusted
    Firmware for Armada 3700 platform already assigns 128 MB for PCIe window,
    so extend PCIe MEM space to the end of 128 MB PCIe window which allows to
    allocate more PCIe BARs for more PCIe cards.
    
    Without this change some combination of PCIe cards cannot be used and
    kernel show error messages in dmesg during initialization:
    
        pci 0000:00:00.0: BAR 8: no space for [mem size 0x01800000]
        pci 0000:00:00.0: BAR 8: failed to assign [mem size 0x01800000]
        pci 0000:00:00.0: BAR 6: assigned [mem 0xe8000000-0xe80007ff pref]
        pci 0000:01:00.0: BAR 8: no space for [mem size 0x01800000]
        pci 0000:01:00.0: BAR 8: failed to assign [mem size 0x01800000]
        pci 0000:02:03.0: BAR 8: no space for [mem size 0x01000000]
        pci 0000:02:03.0: BAR 8: failed to assign [mem size 0x01000000]
        pci 0000:02:07.0: BAR 8: no space for [mem size 0x00100000]
        pci 0000:02:07.0: BAR 8: failed to assign [mem size 0x00100000]
        pci 0000:03:00.0: BAR 0: no space for [mem size 0x01000000 64bit]
        pci 0000:03:00.0: BAR 0: failed to assign [mem size 0x01000000 64bit]
    
    Due to bugs in U-Boot port for Turris Mox, the second range in Turris Mox
    kernel DTS file for PCIe must start at 16 MB offset. Otherwise U-Boot
    crashes during loading of kernel DTB file. This bug is present only in
    U-Boot code for Turris Mox and therefore other Armada 3700 devices are not
    affected by this bug. Bug is fixed in U-Boot version 2021.07.
    
    To not break booting new kernels on existing versions of U-Boot on Turris
    Mox, use first 16 MB range for IO and second range with rest of PCIe window
    for MEM.
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Fixes: 76f6386b25cc ("arm64: dts: marvell: Add Aardvark PCIe support for Armada 3700")
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cffcfbfd5a0fffaf6cb6b23a886713cf2d691594
Author: Gao Xiang <hsiangkao@linux.alibaba.com>
Date:   Tue Sep 21 22:35:30 2021 +0800

    erofs: fix up erofs_lookup tracepoint
    
    commit 93368aab0efc87288cac65e99c9ed2e0ffc9e7d0 upstream.
    
    Fix up a misuse that the filename pointer isn't always valid in
    the ring buffer, and we should copy the content instead.
    
    Link: https://lore.kernel.org/r/20210921143531.81356-1-hsiangkao@linux.alibaba.com
    Fixes: 13f06f48f7bf ("staging: erofs: support tracepoint")
    Cc: stable@vger.kernel.org # 4.19+
    Reviewed-by: Chao Yu <chao@kernel.org>
    [ Gao Xiang: resolve trivial conflicts for 4.19.y. ]
    Signed-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9858b43669c8528108f88074dc11cd788450905
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Sep 18 10:05:06 2021 -0700

    spi: Fix tegra20 build with CONFIG_PM=n
    
    [ Upstream commit efafec27c5658ed987e720130772f8933c685e87 ]
    
    Without CONFIG_PM enabled, the SET_RUNTIME_PM_OPS() macro ends up being
    empty, and the only use of tegra_slink_runtime_{resume,suspend} goes
    away, resulting in
    
      drivers/spi/spi-tegra20-slink.c:1200:12: error: ‘tegra_slink_runtime_resume’ defined but not used [-Werror=unused-function]
       1200 | static int tegra_slink_runtime_resume(struct device *dev)
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~
      drivers/spi/spi-tegra20-slink.c:1188:12: error: ‘tegra_slink_runtime_suspend’ defined but not used [-Werror=unused-function]
       1188 | static int tegra_slink_runtime_suspend(struct device *dev)
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    mark the functions __maybe_unused to make the build happy.
    
    This hits the alpha allmodconfig build (and others).
    
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 864d04295f072349c2c0ca57043f8e7dce786961
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 8 20:57:43 2021 -0700

    net: 6pack: Fix tx timeout and slot time
    
    [ Upstream commit 3c0d2a46c0141913dc6fd126c57d0615677d946e ]
    
    tx timeout and slot time are currently specified in units of HZ.  On
    Alpha, HZ is defined as 1024.  When building alpha:allmodconfig, this
    results in the following error message.
    
      drivers/net/hamradio/6pack.c: In function 'sixpack_open':
      drivers/net/hamradio/6pack.c:71:41: error:
            unsigned conversion from 'int' to 'unsigned char'
            changes value from '256' to '0'
    
    In the 6PACK protocol, tx timeout is specified in units of 10 ms and
    transmitted over the wire:
    
        https://www.linux-ax25.org/wiki/6PACK
    
    Defining a value dependent on HZ doesn't really make sense, and
    presumably comes from the (very historical) situation where HZ was
    originally 100.
    
    Note that the SIXP_SLOTTIME use explicitly is about 10ms granularity:
    
            mod_timer(&sp->tx_t, jiffies + ((when + 1) * HZ) / 100);
    
    and the SIXP_TXDELAY walue is sent as a byte over the wire.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 24b055916a114d2e8a4675359630e7bcfb3a107d
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 8 22:00:33 2021 -0700

    alpha: Declare virt_to_phys and virt_to_bus parameter as pointer to volatile
    
    [ Upstream commit 35a3f4ef0ab543daa1725b0c963eb8c05e3376f8 ]
    
    Some drivers pass a pointer to volatile data to virt_to_bus() and
    virt_to_phys(), and that works fine.  One exception is alpha.  This
    results in a number of compile errors such as
    
      drivers/net/wan/lmc/lmc_main.c: In function 'lmc_softreset':
      drivers/net/wan/lmc/lmc_main.c:1782:50: error:
            passing argument 1 of 'virt_to_bus' discards 'volatile'
            qualifier from pointer target type
    
      drivers/atm/ambassador.c: In function 'do_loader_command':
      drivers/atm/ambassador.c:1747:58: error:
            passing argument 1 of 'virt_to_bus' discards 'volatile'
            qualifier from pointer target type
    
    Declare the parameter of virt_to_phys and virt_to_bus as pointer to
    volatile to fix the problem.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93cb263d81bc9b67abd2e250a3caa21fb983a5e1
Author: Dan Li <ashimida@linux.alibaba.com>
Date:   Tue Sep 14 17:44:02 2021 +0800

    arm64: Mark __stack_chk_guard as __ro_after_init
    
    [ Upstream commit 9fcb2e93f41c07a400885325e7dbdfceba6efaec ]
    
    __stack_chk_guard is setup once while init stage and never changed
    after that.
    
    Although the modification of this variable at runtime will usually
    cause the kernel to crash (so does the attacker), it should be marked
    as __ro_after_init, and it should not affect performance if it is
    placed in the ro_after_init section.
    
    Signed-off-by: Dan Li <ashimida@linux.alibaba.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Link: https://lore.kernel.org/r/1631612642-102881-1-git-send-email-ashimida@linux.alibaba.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c4cf3df31e29fc2a9ad936a6769e7142311c9d12
Author: Helge Deller <deller@gmx.de>
Date:   Thu Sep 16 08:35:42 2021 +0200

    parisc: Use absolute_pointer() to define PAGE0
    
    [ Upstream commit 90cc7bed1ed19f869ae7221a6b41887fe762a6a3 ]
    
    Use absolute_pointer() wrapper for PAGE0 to avoid this compiler warning:
    
      arch/parisc/kernel/setup.c: In function 'start_parisc':
      error: '__builtin_memcmp_eq' specified bound 8 exceeds source size 0
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Co-Developed-by: Guenter Roeck <linux@roeck-us.net>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c53b7bd4ba98ce6a7f0abf3f013ae6cad3f2f510
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 15 13:56:37 2021 -0700

    qnx4: avoid stringop-overread errors
    
    [ Upstream commit b7213ffa0e585feb1aee3e7173e965e66ee0abaa ]
    
    The qnx4 directory entries are 64-byte blocks that have different
    contents depending on the a status byte that is in the last byte of the
    block.
    
    In particular, a directory entry can be either a "link info" entry with
    a 48-byte name and pointers to the real inode information, or an "inode
    entry" with a smaller 16-byte name and the full inode information.
    
    But the code was written to always just treat the directory name as if
    it was part of that "inode entry", and just extend the name to the
    longer case if the status byte said it was a link entry.
    
    That work just fine and gives the right results, but now that gcc is
    tracking data structure accesses much more, the code can trigger a
    compiler error about using up to 48 bytes (the long name) in a structure
    that only has that shorter name in it:
    
       fs/qnx4/dir.c: In function ‘qnx4_readdir’:
       fs/qnx4/dir.c:51:32: error: ‘strnlen’ specified bound 48 exceeds source size 16 [-Werror=stringop-overread]
          51 |                         size = strnlen(de->di_fname, size);
             |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
       In file included from fs/qnx4/qnx4.h:3,
                        from fs/qnx4/dir.c:16:
       include/uapi/linux/qnx4_fs.h:45:25: note: source object declared here
          45 |         char            di_fname[QNX4_SHORT_NAME_MAX];
             |                         ^~~~~~~~
    
    which is because the source code doesn't really make this whole "one of
    two different types" explicit.
    
    Fix this by introducing a very explicit union of the two types, and
    basically explaining to the compiler what is really going on.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 259b1d3f43b60bd4dc93d44b238ab62b518f5455
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 6 16:06:04 2021 -0700

    sparc: avoid stringop-overread errors
    
    [ Upstream commit fc7c028dcdbfe981bca75d2a7b95f363eb691ef3 ]
    
    The sparc mdesc code does pointer games with 'struct mdesc_hdr', but
    didn't describe to the compiler how that header is then followed by the
    data that the header describes.
    
    As a result, gcc is now unhappy since it does stricter pointer range
    tracking, and doesn't understand about how these things work.  This
    results in various errors like:
    
        arch/sparc/kernel/mdesc.c: In function ‘mdesc_node_by_name’:
        arch/sparc/kernel/mdesc.c:647:22: error: ‘strcmp’ reading 1 or more bytes from a region of size 0 [-Werror=stringop-overread]
          647 |                 if (!strcmp(names + ep[ret].name_offset, name))
              |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    which are easily avoided by just describing 'struct mdesc_hdr' better,
    and making the node_block() helper function look into that unsized
    data[] that follows the header.
    
    This makes the sparc64 build happy again at least for my cross-compiler
    version (gcc version 11.2.1).
    
    Link: https://lore.kernel.org/lkml/CAHk-=wi4NW3NC0xWykkw=6LnjQD6D_rtRtxY9g8gQAJXtQMi8A@mail.gmail.com/
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: David S. Miller <davem@davemloft.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 79851f2b1dcd9013c8ed4bb17c1a583bc89b1f34
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Tue Sep 14 20:52:25 2021 -0700

    net: i825xx: Use absolute_pointer for memcpy from fixed memory location
    
    [ Upstream commit dff2d13114f0beec448da9b3716204eb34b0cf41 ]
    
    gcc 11.x reports the following compiler warning/error.
    
      drivers/net/ethernet/i825xx/82596.c: In function 'i82596_probe':
      arch/m68k/include/asm/string.h:72:25: error:
            '__builtin_memcpy' reading 6 bytes from a region of size 0 [-Werror=stringop-overread]
    
    Use absolute_pointer() to work around the problem.
    
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a33e34a35b43494632b933606fbea3cb79b689ed
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Tue Sep 14 20:52:24 2021 -0700

    compiler.h: Introduce absolute_pointer macro
    
    [ Upstream commit f6b5f1a56987de837f8e25cd560847106b8632a8 ]
    
    absolute_pointer() disassociates a pointer from its originating symbol
    type and context. Use it to prevent compiler warnings/errors such as
    
      drivers/net/ethernet/i825xx/82596.c: In function 'i82596_probe':
      arch/m68k/include/asm/string.h:72:25: error:
            '__builtin_memcpy' reading 6 bytes from a region of size 0 [-Werror=stringop-overread]
    
    Such warnings may be reported by gcc 11.x for string and memory
    operations on fixed addresses.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dc06d15104cba96693806685b5f1d589dbb87e99
Author: Anton Eidelman <anton.eidelman@gmail.com>
Date:   Sun Sep 12 12:54:57 2021 -0600

    nvme-multipath: fix ANA state updates when a namespace is not present
    
    [ Upstream commit 79f528afa93918519574773ea49a444c104bc1bd ]
    
    nvme_update_ana_state() has a deficiency that results in a failure to
    properly update the ana state for a namespace in the following case:
    
      NSIDs in ctrl->namespaces:    1, 3,    4
      NSIDs in desc->nsids:         1, 2, 3, 4
    
    Loop iteration 0:
        ns index = 0, n = 0, ns->head->ns_id = 1, nsid = 1, MATCH.
    Loop iteration 1:
        ns index = 1, n = 1, ns->head->ns_id = 3, nsid = 2, NO MATCH.
    Loop iteration 2:
        ns index = 2, n = 2, ns->head->ns_id = 4, nsid = 4, MATCH.
    
    Where the update to the ANA state of NSID 3 is missed.  To fix this
    increment n and retry the update with the same ns when ns->head->ns_id is
    higher than nsid,
    
    Signed-off-by: Anton Eidelman <anton@lightbitslabs.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6bba79c6a073741b672b0bf86a1f03c0fe47f973
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Aug 27 14:32:06 2021 +0200

    xen/balloon: use a kernel thread instead a workqueue
    
    [ Upstream commit 8480ed9c2bbd56fc86524998e5f2e3e22f5038f6 ]
    
    Today the Xen ballooning is done via delayed work in a workqueue. This
    might result in workqueue hangups being reported in case of large
    amounts of memory are being ballooned in one go (here 16GB):
    
    BUG: workqueue lockup - pool cpus=6 node=0 flags=0x0 nice=0 stuck for 64s!
    Showing busy workqueues and worker pools:
    workqueue events: flags=0x0
      pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=2/256 refcnt=3
        in-flight: 229:balloon_process
        pending: cache_reap
    workqueue events_freezable_power_: flags=0x84
      pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=1/256 refcnt=2
        pending: disk_events_workfn
    workqueue mm_percpu_wq: flags=0x8
      pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=1/256 refcnt=2
        pending: vmstat_update
    pool 12: cpus=6 node=0 flags=0x0 nice=0 hung=64s workers=3 idle: 2222 43
    
    This can easily be avoided by using a dedicated kernel thread for doing
    the ballooning work.
    
    Reported-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20210827123206.15429-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a7e5ec97e0d0d04caa2ac517848681f30681af4
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Mon Sep 6 23:07:29 2021 -0700

    m68k: Double cast io functions to unsigned long
    
    [ Upstream commit b1a89856fbf63fffde6a4771d8f1ac21df549e50 ]
    
    m68k builds fail widely with errors such as
    
    arch/m68k/include/asm/raw_io.h:20:19: error:
            cast to pointer from integer of different size
    arch/m68k/include/asm/raw_io.h:30:32: error:
            cast to pointer from integer of different size [-Werror=int-to-p
    
    On m68k, io functions are defined as macros. The problem is seen if the
    macro parameter variable size differs from the size of a pointer. Cast
    the parameter of all io macros to unsigned long before casting it to
    a pointer to fix the problem.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20210907060729.2391992-1-linux@roeck-us.net
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8653d1ed7da0d014690e1caef707da9bc336e7ab
Author: Jesper Nilsson <jesper.nilsson@axis.com>
Date:   Fri Sep 10 21:55:34 2021 +0200

    net: stmmac: allow CSR clock of 300MHz
    
    [ Upstream commit 08dad2f4d541fcfe5e7bfda72cc6314bbfd2802f ]
    
    The Synopsys Ethernet IP uses the CSR clock as a base clock for MDC.
    The divisor used is set in the MAC_MDIO_Address register field CR
    (Clock Rate)
    
    The divisor is there to change the CSR clock into a clock that falls
    below the IEEE 802.3 specified max frequency of 2.5MHz.
    
    If the CSR clock is 300MHz, the code falls back to using the reset
    value in the MAC_MDIO_Address register, as described in the comment
    above this code.
    
    However, 300MHz is actually an allowed value and the proper divider
    can be estimated quite easily (it's just 1Hz difference!)
    
    A CSR frequency of 300MHz with the maximum clock rate value of 0x5
    (STMMAC_CSR_250_300M, a divisor of 124) gives somewhere around
    ~2.42MHz which is below the IEEE 802.3 specified maximum.
    
    For the ARTPEC-8 SoC, the CSR clock is this problematic 300MHz,
    and unfortunately, the reset-value of the MAC_MDIO_Address CR field
    is 0x0.
    
    This leads to a clock rate of zero and a divisor of 42, and gives an
    MDC frequency of ~7.14MHz.
    
    Allow CSR clock of 300MHz by making the comparison inclusive.
    
    Signed-off-by: Jesper Nilsson <jesper.nilsson@axis.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 46670fb832ee80943715df618632ca13c2e96f2b
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Wed Sep 8 12:02:32 2021 -0700

    net: macb: fix use after free on rmmod
    
    [ Upstream commit d82d5303c4c539db86588ffb5dc5b26c3f1513e8 ]
    
    plat_dev->dev->platform_data is released by platform_device_unregister(),
    use of pclk and hclk is a use-after-free. Since device unregister won't
    need a clk device we adjust the function call sequence to fix this issue.
    
    [   31.261225] BUG: KASAN: use-after-free in macb_remove+0x77/0xc6 [macb_pci]
    [   31.275563] Freed by task 306:
    [   30.276782]  platform_device_release+0x25/0x80
    
    Suggested-by: Nicolas Ferre <Nicolas.Ferre@microchip.com>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 677e362ba807f3aafe6f405c07e0b37244da5222
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Thu Sep 23 21:49:21 2021 +0800

    blktrace: Fix uaf in blk_trace access after removing by sysfs
    
    [ Upstream commit 5afedf670caf30a2b5a52da96eb7eac7dee6a9c9 ]
    
    There is an use-after-free problem triggered by following process:
    
          P1(sda)                           P2(sdb)
                            echo 0 > /sys/block/sdb/trace/enable
                              blk_trace_remove_queue
                                synchronize_rcu
                                blk_trace_free
                                  relay_close
    rcu_read_lock
    __blk_add_trace
      trace_note_tsk
      (Iterate running_trace_list)
                                    relay_close_buf
                                      relay_destroy_buf
                                        kfree(buf)
        trace_note(sdb's bt)
          relay_reserve
            buf->offset <- nullptr deference (use-after-free) !!!
    rcu_read_unlock
    
    [  502.714379] BUG: kernel NULL pointer dereference, address:
    0000000000000010
    [  502.715260] #PF: supervisor read access in kernel mode
    [  502.715903] #PF: error_code(0x0000) - not-present page
    [  502.716546] PGD 103984067 P4D 103984067 PUD 17592b067 PMD 0
    [  502.717252] Oops: 0000 [#1] SMP
    [  502.720308] RIP: 0010:trace_note.isra.0+0x86/0x360
    [  502.732872] Call Trace:
    [  502.733193]  __blk_add_trace.cold+0x137/0x1a3
    [  502.733734]  blk_add_trace_rq+0x7b/0xd0
    [  502.734207]  blk_add_trace_rq_issue+0x54/0xa0
    [  502.734755]  blk_mq_start_request+0xde/0x1b0
    [  502.735287]  scsi_queue_rq+0x528/0x1140
    ...
    [  502.742704]  sg_new_write.isra.0+0x16e/0x3e0
    [  502.747501]  sg_ioctl+0x466/0x1100
    
    Reproduce method:
      ioctl(/dev/sda, BLKTRACESETUP, blk_user_trace_setup[buf_size=127])
      ioctl(/dev/sda, BLKTRACESTART)
      ioctl(/dev/sdb, BLKTRACESETUP, blk_user_trace_setup[buf_size=127])
      ioctl(/dev/sdb, BLKTRACESTART)
    
      echo 0 > /sys/block/sdb/trace/enable &
      // Add delay(mdelay/msleep) before kernel enters blk_trace_free()
    
      ioctl$SG_IO(/dev/sda, SG_IO, ...)
      // Enters trace_note_tsk() after blk_trace_free() returned
      // Use mdelay in rcu region rather than msleep(which may schedule out)
    
    Remove blk_trace from running_list before calling blk_trace_free() by
    sysfs if blk_trace is at Blktrace_running state.
    
    Fixes: c71a896154119f ("blktrace: add ftrace plugin")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Link: https://lore.kernel.org/r/20210923134921.109194-1-chengzhihao1@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 906b4dcc180808f0ba74ec1e07a5cf708463bc48
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Sep 1 13:38:29 2021 +0200

    md: fix a lock order reversal in md_alloc
    
    [ Upstream commit 7df835a32a8bedf7ce88efcfa7c9b245b52ff139 ]
    
    Commit b0140891a8cea3 ("md: Fix race when creating a new md device.")
    not only moved assigning mddev->gendisk before calling add_disk, which
    fixes the races described in the commit log, but also added a
    mddev->open_mutex critical section over add_disk and creation of the
    md kobj.  Adding a kobject after add_disk is racy vs deleting the gendisk
    right after adding it, but md already prevents against that by holding
    a mddev->active reference.
    
    On the other hand taking this lock added a lock order reversal with what
    is not disk->open_mutex (used to be bdev->bd_mutex when the commit was
    added) for partition devices, which need that lock for the internal open
    for the partition scan, and a recent commit also takes it for
    non-partitioned devices, leading to further lockdep splatter.
    
    Fixes: b0140891a8ce ("md: Fix race when creating a new md device.")
    Fixes: d62633873590 ("block: support delayed holder registration")
    Reported-by: syzbot+fadc0aaf497e6a493b9f@syzkaller.appspotmail.com
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Tested-by: syzbot+fadc0aaf497e6a493b9f@syzkaller.appspotmail.com
    Reviewed-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5701e8bff314c155e7afdc467b1e0389d86853d0
Author: Kaige Fu <kaige.fu@linux.alibaba.com>
Date:   Wed Sep 15 10:20:55 2021 +0800

    irqchip/gic-v3-its: Fix potential VPE leak on error
    
    [ Upstream commit 280bef512933b2dda01d681d8cbe499b98fc5bdd ]
    
    In its_vpe_irq_domain_alloc, when its_vpe_init() returns an error,
    there is an off-by-one in the number of VPEs to be freed.
    
    Fix it by simply passing the number of VPEs allocated, which is the
    index of the loop iterating over the VPEs.
    
    Fixes: 7d75bbb4bc1a ("irqchip/gic-v3-its: Add VPE irq domain allocation/teardown")
    Signed-off-by: Kaige Fu <kaige.fu@linux.alibaba.com>
    [maz: fixed commit message]
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/d9e36dee512e63670287ed9eff884a5d8d6d27f2.1631672311.git.kaige.fu@linux.alibaba.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e724279bcd180de641754aed77cdc0dcf153d711
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Sep 5 09:25:19 2021 -0700

    irqchip/goldfish-pic: Select GENERIC_IRQ_CHIP to fix build
    
    [ Upstream commit 969ac78db78c723a24e9410666b457cc1b0cb3c3 ]
    
    irq-goldfish-pic uses GENERIC_IRQ_CHIP interfaces so select that symbol
    to fix build errors.
    
    Fixes these build errors:
    
    mips-linux-ld: drivers/irqchip/irq-goldfish-pic.o: in function `goldfish_pic_of_init':
    irq-goldfish-pic.c:(.init.text+0xc0): undefined reference to `irq_alloc_generic_chip'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0xf4): undefined reference to `irq_gc_unmask_enable_reg'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0xf8): undefined reference to `irq_gc_unmask_enable_reg'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0x100): undefined reference to `irq_gc_mask_disable_reg'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0x104): undefined reference to `irq_gc_mask_disable_reg'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0x11c): undefined reference to `irq_setup_generic_chip'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0x168): undefined reference to `irq_remove_generic_chip'
    
    Fixes: 4235ff50cf98 ("irqchip/irq-goldfish-pic: Add Goldfish PIC driver")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Miodrag Dinic <miodrag.dinic@mips.com>
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Goran Ferenc <goran.ferenc@mips.com>
    Cc: Aleksandar Markovic <aleksandar.markovic@mips.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210905162519.21507-1-rdunlap@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b7bc1c70375512100a6fadcd480e9d7abc523761
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 16 16:13:42 2021 +0300

    thermal/core: Potential buffer overflow in thermal_build_list_of_policies()
    
    [ Upstream commit 1bb30b20b49773369c299d4d6c65227201328663 ]
    
    After printing the list of thermal governors, then this function prints
    a newline character.  The problem is that "size" has not been updated
    after printing the last governor.  This means that it can write one
    character (the NUL terminator) beyond the end of the buffer.
    
    Get rid of the "size" variable and just use "PAGE_SIZE - count" directly.
    
    Fixes: 1b4f48494eb2 ("thermal: core: group functions related to governor handling")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210916131342.GB25094@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3fa6a4a56de070da2a49a89d448ae24955909863
Author: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
Date:   Fri Aug 13 14:40:42 2021 +0800

    fpga: machxo2-spi: Fix missing error code in machxo2_write_complete()
    
    [ Upstream commit a1e4470823d99e75b596748086e120dea169ed3c ]
    
    The error code is missing in this code scenario, add the error code
    '-EINVAL' to the return value 'ret'.
    
    Eliminate the follow smatch warning:
    
    drivers/fpga/machxo2-spi.c:341 machxo2_write_complete()
      warn: missing error code 'ret'.
    
    [mdf@kernel.org: Reworded commit message]
    Fixes: 88fb3a002330 ("fpga: lattice machxo2: Add Lattice MachXO2 support")
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
    Signed-off-by: Moritz Fischer <mdf@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 12a40b34bde68bf417335a07368850f582c0c928
Author: Tom Rix <trix@redhat.com>
Date:   Tue Aug 10 09:40:36 2021 -0700

    fpga: machxo2-spi: Return an error on failure
    
    [ Upstream commit 34331739e19fd6a293d488add28832ad49c9fc54 ]
    
    Earlier successes leave 'ret' in a non error state, so these errors are
    not reported. Set ret to -EINVAL before going to the error handler.
    
    This addresses two issues reported by smatch:
    drivers/fpga/machxo2-spi.c:229 machxo2_write_init()
      warn: missing error code 'ret'
    
    drivers/fpga/machxo2-spi.c:316 machxo2_write_complete()
      warn: missing error code 'ret'
    
    [mdf@kernel.org: Reworded commit message]
    Fixes: 88fb3a002330 ("fpga: lattice machxo2: Add Lattice MachXO2 support")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Moritz Fischer <mdf@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b94938d3a8c410576f4a04adadf62a7964d854f
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Sep 1 17:38:06 2021 -0700

    tty: synclink_gt: rename a conflicting function name
    
    [ Upstream commit 06e49073dfba24df4b1073a068631b13a0039c34 ]
    
    'set_signals()' in synclink_gt.c conflicts with an exported symbol
    in arch/um/, so change set_signals() to set_gtsignals(). Keep
    the function names similar by also changing get_signals() to
    get_gtsignals().
    
    ../drivers/tty/synclink_gt.c:442:13: error: conflicting types for ‘set_signals’
     static void set_signals(struct slgt_info *info);
                 ^~~~~~~~~~~
    In file included from ../include/linux/irqflags.h:16:0,
                     from ../include/linux/spinlock.h:58,
                     from ../include/linux/mm_types.h:9,
                     from ../include/linux/buildid.h:5,
                     from ../include/linux/module.h:14,
                     from ../drivers/tty/synclink_gt.c:46:
    ../arch/um/include/asm/irqflags.h:6:5: note: previous declaration of ‘set_signals’ was here
     int set_signals(int enable);
         ^~~~~~~~~~~
    
    Fixes: 705b6c7b34f2 ("[PATCH] new driver synclink_gt")
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Cc: Paul Fulghum <paulkf@microgate.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20210902003806.17054-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9dbdd760f7ff9410f2cfe51ec80fc42884474f08
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Tue Mar 2 07:22:09 2021 +0100

    tty: synclink_gt, drop unneeded forward declarations
    
    [ Upstream commit b9b90fe655c0bd816847ac1bcbf179cfa2981ecb ]
    
    Forward declarations make the code larger and rewrites harder. Harder as
    they are often omitted from global changes. Remove forward declarations
    which are not really needed, i.e. the definition of the function is
    before its first use.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20210302062214.29627-39-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0e82e793caa01b744641d0f9f23b7e1cac12a056
Author: Baokun Li <libaokun1@huawei.com>
Date:   Wed Sep 1 16:53:36 2021 +0800

    scsi: iscsi: Adjust iface sysfs attr detection
    
    [ Upstream commit 4e28550829258f7dab97383acaa477bd724c0ff4 ]
    
    ISCSI_NET_PARAM_IFACE_ENABLE belongs to enum iscsi_net_param instead of
    iscsi_iface_param so move it to ISCSI_NET_PARAM. Otherwise, when we call
    into the driver, we might not match and return that we don't want attr
    visible in sysfs. Found in code review.
    
    Link: https://lore.kernel.org/r/20210901085336.2264295-1-libaokun1@huawei.com
    Fixes: e746f3451ec7 ("scsi: iscsi: Fix iface sysfs attr detection")
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1192c198ea42a29ddc06813b20d1e3b2e25d4288
Author: Aya Levin <ayal@nvidia.com>
Date:   Thu Sep 23 09:51:45 2021 +0300

    net/mlx4_en: Don't allow aRFS for encapsulated packets
    
    [ Upstream commit fdbccea419dc782079ce5881d2705cc9e3881480 ]
    
    Driver doesn't support aRFS for encapsulated packets, return early error
    in such a case.
    
    Fixes: 1eb8c695bda9 ("net/mlx4_en: Add accelerated RFS support")
    Signed-off-by: Aya Levin <ayal@nvidia.com>
    Signed-off-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f5f9afab8bbbec241d0e26795d4e4ab3825e765e
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Thu Sep 16 20:19:35 2021 +0900

    gpio: uniphier: Fix void functions to remove return value
    
    [ Upstream commit 2dd824cca3407bc9a2bd11b00f6e117b66fcfcf1 ]
    
    The return type of irq_chip.irq_mask() and irq_chip.irq_unmask() should
    be void.
    
    Fixes: dbe776c2ca54 ("gpio: uniphier: add UniPhier GPIO controller driver")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ef57ed80fb9a6dbd3166d466a2c9c14f2d717dbb
Author: Karsten Graul <kgraul@linux.ibm.com>
Date:   Mon Sep 20 21:18:14 2021 +0200

    net/smc: add missing error check in smc_clc_prfx_set()
    
    [ Upstream commit 6c90731980655280ea07ce4b21eb97457bf86286 ]
    
    Coverity stumbled over a missing error check in smc_clc_prfx_set():
    
    *** CID 1475954:  Error handling issues  (CHECKED_RETURN)
    /net/smc/smc_clc.c: 233 in smc_clc_prfx_set()
    >>>     CID 1475954:  Error handling issues  (CHECKED_RETURN)
    >>>     Calling "kernel_getsockname" without checking return value (as is done elsewhere 8 out of 10 times).
    233             kernel_getsockname(clcsock, (struct sockaddr *)&addrs);
    
    Add the return code check in smc_clc_prfx_set().
    
    Fixes: c246d942eabc ("net/smc: restructure netinfo for CLC proposal msgs")
    Reported-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 17280ed7466909d424f96b464d131fb80a4ad5cb
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Mon Sep 20 02:51:52 2021 -0400

    bnxt_en: Fix TX timeout when TX ring size is set to the smallest
    
    [ Upstream commit 5bed8b0704c9ecccc8f4a2c377d7c8e21090a82e ]
    
    The smallest TX ring size we support must fit a TX SKB with MAX_SKB_FRAGS
    + 1.  Because the first TX BD for a packet is always a long TX BD, we
    need an extra TX BD to fit this packet.  Define BNXT_MIN_TX_DESC_CNT with
    this value to make this more clear.  The current code uses a minimum
    that is off by 1.  Fix it using this constant.
    
    The tx_wake_thresh to determine when to wake up the TX queue is half the
    ring size but we must have at least BNXT_MIN_TX_DESC_CNT for the next
    packet which may have maximum fragments.  So the comparison of the
    available TX BDs with tx_wake_thresh should be >= instead of > in the
    current code.  Otherwise, at the smallest ring size, we will never wake
    up the TX queue and will cause TX timeout.
    
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Reviewed-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadocm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 88aa7727a6f614b5a3bc17198d677e419598ad8b
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Sep 17 12:12:04 2021 +0200

    net: hso: fix muxed tty registration
    
    commit e8f69b16ee776da88589b5271e3f46020efc8f6c upstream.
    
    If resource allocation and registration fail for a muxed tty device
    (e.g. if there are no more minor numbers) the driver should not try to
    deregister the never-registered (or already-deregistered) tty.
    
    Fix up the error handling to avoid dereferencing a NULL pointer when
    attempting to remove the character device.
    
    Fixes: 72dc1c096c70 ("HSO: add option hso driver")
    Cc: stable@vger.kernel.org      # 2.6.27
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a319dd66f497bb5e8441950af48c845c0670849
Author: Pali Rohár <pali@kernel.org>
Date:   Sat Sep 11 15:20:17 2021 +0200

    serial: mvebu-uart: fix driver's tx_empty callback
    
    commit 74e1eb3b4a1ef2e564b4bdeb6e92afe844e900de upstream.
    
    Driver's tx_empty callback should signal when the transmit shift register
    is empty. So when the last character has been sent.
    
    STAT_TX_FIFO_EMP bit signals only that HW transmit FIFO is empty, which
    happens when the last byte is loaded into transmit shift register.
    
    STAT_TX_EMP bit signals when the both HW transmit FIFO and transmit shift
    register are empty.
    
    So replace STAT_TX_FIFO_EMP check by STAT_TX_EMP in mvebu_uart_tx_empty()
    callback function.
    
    Fixes: 30530791a7a0 ("serial: mvebu-uart: initial support for Armada-3700 serial port")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Link: https://lore.kernel.org/r/20210911132017.25505-1-pali@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66f74ba9be9daf9c47fface6af3677f602774f6b
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Sep 6 21:35:48 2021 +0900

    mcb: fix error handling in mcb_alloc_bus()
    
    commit 25a1433216489de4abc889910f744e952cb6dbae upstream.
    
    There are two bugs:
    1) If ida_simple_get() fails then this code calls put_device(carrier)
       but we haven't yet called get_device(carrier) and probably that
       leads to a use after free.
    2) After device_initialize() then we need to use put_device() to
       release the bus.  This will free the internal resources tied to the
       device and call mcb_free_bus() which will free the rest.
    
    Fixes: 5d9e2ab9fea4 ("mcb: Implement bus->dev.release callback")
    Fixes: 18d288198099 ("mcb: Correctly initialize the bus's device")
    Cc: stable@vger.kernel.org
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Johannes Thumshirn <jth@kernel.org>
    Link: https://lore.kernel.org/r/32e160cf6864ce77f9d62948338e24db9fd8ead9.1630931319.git.johannes.thumshirn@wdc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3fe3f21b677133511aaa01bfb1caa11bede09f18
Author: Slark Xiao <slark_xiao@163.com>
Date:   Fri Sep 17 19:01:06 2021 +0800

    USB: serial: option: add device id for Foxconn T99W265
    
    commit 9e3eed534f8235a4a596a9dae5b8a6425d81ea1a upstream.
    
    Adding support for Foxconn device T99W265 for enumeration with
    PID 0xe0db.
    
    usb-devices output for 0xe0db
    T:  Bus=04 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 19 Spd=5000 MxCh= 0
    D:  Ver= 3.20 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  1
    P:  Vendor=0489 ProdID=e0db Rev=05.04
    S:  Manufacturer=Microsoft
    S:  Product=Generic Mobile Broadband Adapter
    S:  SerialNumber=6c50f452
    C:  #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=0e Prot=00 Driver=cdc_mbim
    I:  If#=0x1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=40 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    I:  If#=0x4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=30 Driver=option
    
    if0/1: MBIM, if2:Diag, if3:GNSS, if4: Modem
    
    Signed-off-by: Slark Xiao <slark_xiao@163.com>
    Link: https://lore.kernel.org/r/20210917110106.9852-1-slark_xiao@163.com
    [ johan: use USB_DEVICE_INTERFACE_CLASS(), amend comment ]
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0b46f7e734ff9e5037a5bd3ad410c8b3ffce579
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Fri Sep 17 11:18:48 2021 +0200

    USB: serial: option: remove duplicate USB device ID
    
    commit 1ca200a8c6f079950a04ea3c3380fe8cf78e95a2 upstream.
    
    The device ZTE 0x0094 is already on the list.
    
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Fixes: b9e44fe5ecda ("USB: option: cleanup zte 3g-dongle's pid in option.c")
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e1617a8ec066181f01bea4de1dbf3cc512e3a895
Author: Carlo Lobrano <c.lobrano@gmail.com>
Date:   Fri Sep 3 14:39:13 2021 +0200

    USB: serial: option: add Telit LN920 compositions
    
    commit 7bb057134d609b9c038a00b6876cf0d37d0118ce upstream.
    
    This patch adds the following Telit LN920 compositions:
    
    0x1060: tty, adb, rmnet, tty, tty, tty, tty
    0x1061: tty, adb, mbim, tty, tty, tty, tty
    0x1062: rndis, tty, adb, tty, tty, tty, tty
    0x1063: tty, adb, ecm, tty, tty, tty, tty
    
    Signed-off-by: Carlo Lobrano <c.lobrano@gmail.com>
    Link: https://lore.kernel.org/r/20210903123913.1086513-1-c.lobrano@gmail.com
    Reviewed-by: Daniele Palmas <dnlplm@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f1fd5c9adc56a9471f52d329b9103dc2b23e420
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Fri Sep 17 11:18:47 2021 +0200

    USB: serial: mos7840: remove duplicated 0xac24 device ID
    
    commit 211f323768a25b30c106fd38f15a0f62c7c2b5f4 upstream.
    
    0xac24 device ID is already defined and used via
    BANDB_DEVICE_ID_USO9ML2_4.  Remove the duplicate from the list.
    
    Fixes: 27f1281d5f72 ("USB: serial: Extra device/vendor ID for mos7840 driver")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 99685d3670b1294ff30da14205e07d165ebdb773
Author: Julian Sikorski <belegdol@gmail.com>
Date:   Mon Sep 13 20:14:55 2021 +0200

    Re-enable UAS for LaCie Rugged USB3-FW with fk quirk
    
    commit ce1c42b4dacfe7d71c852d8bf3371067ccba865c upstream.
    
    Further testing has revealed that LaCie Rugged USB3-FW does work with
    uas as long as US_FL_NO_REPORT_OPCODES and US_FL_NO_SAME are enabled.
    
    Link: https://lore.kernel.org/linux-usb/2167ea48-e273-a336-a4e0-10a4e883e75e@redhat.com/
    Cc: stable <stable@vger.kernel.org>
    Suggested-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Julian Sikorski <belegdol+github@gmail.com>
    Link: https://lore.kernel.org/r/20210913181454.7365-1-belegdol+github@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a5cfd51f6348e8fd7531461366946039c29c7e69
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Sep 6 14:45:38 2021 +0200

    staging: greybus: uart: fix tty use after free
    
    commit 92dc0b1f46e12cfabd28d709bb34f7a39431b44f upstream.
    
    User space can hold a tty open indefinitely and tty drivers must not
    release the underlying structures until the last user is gone.
    
    Switch to using the tty-port reference counter to manage the life time
    of the greybus tty state to avoid use after free after a disconnect.
    
    Fixes: a18e15175708 ("greybus: more uart work")
    Cc: stable@vger.kernel.org      # 4.9
    Reviewed-by: Alex Elder <elder@linaro.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210906124538.22358-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0c30a2b7c144dee1a2a6f33073a2266039304968
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Sep 7 10:23:18 2021 +0200

    USB: cdc-acm: fix minor-number release
    
    commit 91fac0741d4817945c6ee0a17591421e7f5ecb86 upstream.
    
    If the driver runs out of minor numbers it would release minor 0 and
    allow another device to claim the minor while still in use.
    
    Fortunately, registering the tty class device of the second device would
    fail (with a stack dump) due to the sysfs name collision so no memory is
    leaked.
    
    Fixes: cae2bc768d17 ("usb: cdc-acm: Decrement tty port's refcount if probe() fail")
    Cc: stable@vger.kernel.org      # 4.19
    Cc: Jaejoong Kim <climbbb.kim@gmail.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210907082318.7757-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 40a5f30822e6bb925757066d53514cf5a67362a3
Author: Uwe Brandt <uwe.brandt@gmail.com>
Date:   Tue Sep 21 19:54:46 2021 +0200

    USB: serial: cp210x: add ID for GW Instek GDM-834x Digital Multimeter
    
    commit 3bd18ba7d859eb1fbef3beb1e80c24f6f7d7596c upstream.
    
    Add the USB serial device ID for the GW Instek GDM-834x Digital Multimeter.
    
    Signed-off-by: Uwe Brandt <uwe.brandt@gmail.com>
    Link: https://lore.kernel.org/r/YUxFl3YUCPGJZd8Y@hovoldconsulting.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2f0cc71c23593d379b45af5dd32dcf311cf60793
Author: Ondrej Zary <linux@zary.sk>
Date:   Mon Sep 13 23:01:06 2021 +0200

    usb-storage: Add quirk for ScanLogic SL11R-IDE older than 2.6c
    
    commit b55d37ef6b7db3eda9b4495a8d9b0a944ee8c67d upstream.
    
    ScanLogic SL11R-IDE with firmware older than 2.6c (the latest one) has
    broken tag handling, preventing the device from working at all:
    usb 1-1: new full-speed USB device number 2 using uhci_hcd
    usb 1-1: New USB device found, idVendor=04ce, idProduct=0002, bcdDevice= 2.60
    usb 1-1: New USB device strings: Mfr=1, Product=1, SerialNumber=0
    usb 1-1: Product: USB Device
    usb 1-1: Manufacturer: USB Device
    usb-storage 1-1:1.0: USB Mass Storage device detected
    scsi host2: usb-storage 1-1:1.0
    usbcore: registered new interface driver usb-storage
    usb 1-1: reset full-speed USB device number 2 using uhci_hcd
    usb 1-1: reset full-speed USB device number 2 using uhci_hcd
    usb 1-1: reset full-speed USB device number 2 using uhci_hcd
    usb 1-1: reset full-speed USB device number 2 using uhci_hcd
    
    Add US_FL_BULK_IGNORE_TAG to fix it. Also update my e-mail address.
    
    2.6c is the only firmware that claims Linux compatibility.
    The firmware can be upgraded using ezotgdbg utility:
    https://github.com/asciilifeform/ezotgdbg
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Ondrej Zary <linux@zary.sk>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210913210106.12717-1-linux@zary.sk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9cb9be56013c0c54a9b442ccc1535b06e47b81e3
Author: Jan Beulich <jbeulich@suse.com>
Date:   Mon Sep 20 18:15:11 2021 +0200

    xen/x86: fix PV trap handling on secondary processors
    
    commit 0594c58161b6e0f3da8efa9c6e3d4ba52b652717 upstream.
    
    The initial observation was that in PV mode under Xen 32-bit user space
    didn't work anymore. Attempts of system calls ended in #GP(0x402). All
    of the sudden the vector 0x80 handler was not in place anymore. As it
    turns out up to 5.13 redundant initialization did occur: Once from
    cpu_initialize_context() (through its VCPUOP_initialise hypercall) and a
    2nd time while each CPU was brought fully up. This 2nd initialization is
    now gone, uncovering that the 1st one was flawed: Unlike for the
    set_trap_table hypercall, a full virtual IDT needs to be specified here;
    the "vector" fields of the individual entries are of no interest. With
    many (kernel) IDT entries still(?) (i.e. at that point at least) empty,
    the syscall vector 0x80 ended up in slot 0x20 of the virtual IDT, thus
    becoming the domain's handler for vector 0x20.
    
    Make xen_convert_trap_info() fit for either purpose, leveraging the fact
    that on the xen_copy_trap_info() path the table starts out zero-filled.
    This includes moving out the writing of the sentinel, which would also
    have lead to a buffer overrun in the xen_copy_trap_info() case if all
    (kernel) IDT entries were populated. Convert the writing of the sentinel
    to clearing of the entire table entry rather than just the address
    field.
    
    (I didn't bother trying to identify the commit which uncovered the issue
    in 5.14; the commit named below is the one which actually introduced the
    bad code.)
    
    Fixes: f87e4cac4f4e ("xen: SMP guest support")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/7a266932-092e-b68f-f2bb-1473b61adc6e@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43d2e0fbc67f8bcfb069130f4028a04887ae76b6
Author: Steve French <stfrench@microsoft.com>
Date:   Thu Sep 23 19:18:37 2021 -0500

    cifs: fix incorrect check for null pointer in header_assemble
    
    commit 9ed38fd4a15417cac83967360cf20b853bfab9b6 upstream.
    
    Although very unlikely that the tlink pointer would be null in this case,
    get_next_mid function can in theory return null (but not an error)
    so need to check for null (not for IS_ERR, which can not be returned
    here).
    
    Address warning:
    
            fs/smbfs_client/connect.c:2392 cifs_match_super()
            warn: 'tlink' isn't an ERR_PTR
    
    Pointed out by Dan Carpenter via smatch code analysis tool
    
    CC: stable@vger.kernel.org
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05ace2fa3c15a012aa3a07c59f1201c74b889aee
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 16 16:57:37 2021 +0300

    usb: musb: tusb6010: uninitialized data in tusb_fifo_write_unaligned()
    
    commit 517c7bf99bad3d6b9360558414aae634b7472d80 upstream.
    
    This is writing to the first 1 - 3 bytes of "val" and then writing all
    four bytes to musb_writel().  The last byte is always going to be
    garbage.  Zero out the last bytes instead.
    
    Fixes: 550a7375fe72 ("USB: Add MUSB and TUSB support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210916135737.GI25094@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f057dc783750b8b3ecf6c6e57b0568102c016c9
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Sat Sep 11 22:58:30 2021 +0400

    usb: dwc2: gadget: Fix ISOC transfer complete handling for DDMA
    
    commit dbe2518b2d8eabffa74dbf7d9fdd7dacddab7fc0 upstream.
    
    When last descriptor in a descriptor list completed with XferComplete
    interrupt, core switching to handle next descriptor and assert BNA
    interrupt. Both these interrupts are set while dwc2_hsotg_epint()
    handler called. Each interrupt should be handled separately: first
    XferComplete interrupt then BNA interrupt, otherwise last completed
    transfer will not be giveback to function driver as completed
    request.
    
    Fixes: 729cac693eec ("usb: dwc2: Change ISOC DDMA flow")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Link: https://lore.kernel.org/r/a36981accc26cd674c5d8f8da6164344b94ec1fe.1631386531.git.Minas.Harutyunyan@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aaa9d29acb34e3c562324c134f0936f49318a25d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Sep 6 12:42:21 2021 +0300

    usb: gadget: r8a66597: fix a loop in set_feature()
    
    commit 17956b53ebff6a490baf580a836cbd3eae94892b upstream.
    
    This loop is supposed to loop until if reads something other than
    CS_IDST or until it times out after 30,000 attempts.  But because of
    the || vs && bug, it will never time out and instead it will loop a
    minimum of 30,000 times.
    
    This bug is quite old but the code is only used in USB_DEVICE_TEST_MODE
    so it probably doesn't affect regular usage.
    
    Fixes: 96fe53ef5498 ("usb: gadget: r8a66597-udc: add support for TEST_MODE")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20210906094221.GA10957@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ecd6b2af57617937d9a159c1635bcc3fb8e6121c
Author: Wengang Wang <wen.gang.wang@oracle.com>
Date:   Fri Sep 24 15:43:35 2021 -0700

    ocfs2: drop acl cache for directories too
    
    commit 9c0f0a03e386f4e1df33db676401547e1b7800c6 upstream.
    
    ocfs2_data_convert_worker() is currently dropping any cached acl info
    for FILE before down-converting meta lock.  It should also drop for
    DIRECTORY.  Otherwise the second acl lookup returns the cached one (from
    VFS layer) which could be already stale.
    
    The problem we are seeing is that the acl changes on one node doesn't
    get refreshed on other nodes in the following case:
    
      Node 1                    Node 2
      --------------            ----------------
      getfacl dir1
    
                                getfacl dir1    <-- this is OK
    
      setfacl -m u:user1:rwX dir1
      getfacl dir1   <-- see the change for user1
    
                                getfacl dir1    <-- can't see change for user1
    
    Link: https://lkml.kernel.org/r/20210903012631.6099-1-wen.gang.wang@oracle.com
    Signed-off-by: Wengang Wang <wen.gang.wang@oracle.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
