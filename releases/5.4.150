commit 3a7dc5b4cfbdfd8da37cb0e54f439d84cf5a5123
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Sep 30 10:09:26 2021 +0200

    Linux 5.4.150
    
    Link: https://lore.kernel.org/r/20210927170219.901812470@linuxfoundation.org
    Tested-by: Florian Fainelli <f.fainelli@gmail.com>
    Tested-by: Shuah Khan <skhan@linuxfoundation.org>
    Tested-by: Jon Hunter <jonathanh@nvidia.com>
    Tested-by: Linux Kernel Functional Testing <lkft@linaro.org>
    Tested-by: Sudip Mukherjee <sudip.mukherjee@codethink.co.uk>
    Tested-by: Hulk Robot <hulkrobot@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 27f8c4402c4af24a261bf509338e98857002b14d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 20 10:26:21 2021 -0700

    qnx4: work around gcc false positive warning bug
    
    commit d5f6545934c47e97c0b48a645418e877b452a992 upstream.
    
    In commit b7213ffa0e58 ("qnx4: avoid stringop-overread errors") I tried
    to teach gcc about how the directory entry structure can be two
    different things depending on a status flag.  It made the code clearer,
    and it seemed to make gcc happy.
    
    However, Arnd points to a gcc bug, where despite using two different
    members of a union, gcc then gets confused, and uses the size of one of
    the members to decide if a string overrun happens.  And not necessarily
    the rigth one.
    
    End result: with some configurations, gcc-11 will still complain about
    the source buffer size being overread:
    
      fs/qnx4/dir.c: In function 'qnx4_readdir':
      fs/qnx4/dir.c:76:32: error: 'strnlen' specified bound [16, 48] exceeds source size 1 [-Werror=stringop-overread]
         76 |                         size = strnlen(name, size);
            |                                ^~~~~~~~~~~~~~~~~~~
      fs/qnx4/dir.c:26:22: note: source object declared here
         26 |                 char de_name;
            |                      ^~~~~~~
    
    because gcc will get confused about which union member entry is actually
    getting accessed, even when the source code is very clear about it.  Gcc
    internally will have combined two "redundant" pointers (pointing to
    different union elements that are at the same offset), and takes the
    size checking from one or the other - not necessarily the right one.
    
    This is clearly a gcc bug, but we can work around it fairly easily.  The
    biggest thing here is the big honking comment about why we do what we
    do.
    
    Link: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=99578#c6
    Reported-and-tested-by: Arnd Bergmann <arnd@kernel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3a0f951e37259309ad851e3d7491061d21657108
Author: Juergen Gross <jgross@suse.com>
Date:   Mon Sep 20 12:03:45 2021 +0200

    xen/balloon: fix balloon kthread freezing
    
    commit 96f5bd03e1be606987644b71899ea56a8d05f825 upstream.
    
    Commit 8480ed9c2bbd56 ("xen/balloon: use a kernel thread instead a
    workqueue") switched the Xen balloon driver to use a kernel thread.
    Unfortunately the patch omitted to call try_to_freeze() or to use
    wait_event_freezable_timeout(), causing a system suspend to fail.
    
    Fixes: 8480ed9c2bbd56 ("xen/balloon: use a kernel thread instead a workqueue")
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20210920100345.21939-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f80b6793811d79f5761d8c1315c09238e2ac295e
Author: Pali Rohár <pali@kernel.org>
Date:   Thu Jun 24 23:55:46 2021 +0200

    arm64: dts: marvell: armada-37xx: Extend PCIe MEM space
    
    commit 514ef1e62d6521c2199d192b1c71b79d2aa21d5a upstream.
    
    Current PCIe MEM space of size 16 MB is not enough for some combination
    of PCIe cards (e.g. NVMe disk together with ath11k wifi card). ARM Trusted
    Firmware for Armada 3700 platform already assigns 128 MB for PCIe window,
    so extend PCIe MEM space to the end of 128 MB PCIe window which allows to
    allocate more PCIe BARs for more PCIe cards.
    
    Without this change some combination of PCIe cards cannot be used and
    kernel show error messages in dmesg during initialization:
    
        pci 0000:00:00.0: BAR 8: no space for [mem size 0x01800000]
        pci 0000:00:00.0: BAR 8: failed to assign [mem size 0x01800000]
        pci 0000:00:00.0: BAR 6: assigned [mem 0xe8000000-0xe80007ff pref]
        pci 0000:01:00.0: BAR 8: no space for [mem size 0x01800000]
        pci 0000:01:00.0: BAR 8: failed to assign [mem size 0x01800000]
        pci 0000:02:03.0: BAR 8: no space for [mem size 0x01000000]
        pci 0000:02:03.0: BAR 8: failed to assign [mem size 0x01000000]
        pci 0000:02:07.0: BAR 8: no space for [mem size 0x00100000]
        pci 0000:02:07.0: BAR 8: failed to assign [mem size 0x00100000]
        pci 0000:03:00.0: BAR 0: no space for [mem size 0x01000000 64bit]
        pci 0000:03:00.0: BAR 0: failed to assign [mem size 0x01000000 64bit]
    
    Due to bugs in U-Boot port for Turris Mox, the second range in Turris Mox
    kernel DTS file for PCIe must start at 16 MB offset. Otherwise U-Boot
    crashes during loading of kernel DTB file. This bug is present only in
    U-Boot code for Turris Mox and therefore other Armada 3700 devices are not
    affected by this bug. Bug is fixed in U-Boot version 2021.07.
    
    To not break booting new kernels on existing versions of U-Boot on Turris
    Mox, use first 16 MB range for IO and second range with rest of PCIe window
    for MEM.
    
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Fixes: 76f6386b25cc ("arm64: dts: marvell: Add Aardvark PCIe support for Armada 3700")
    Signed-off-by: Gregory CLEMENT <gregory.clement@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 04783de9c0f3c69741b5e7a5e957f26d6914130c
Author: Antoine Tenart <atenart@kernel.org>
Date:   Thu Sep 9 10:56:12 2021 +0200

    thermal/drivers/int340x: Do not set a wrong tcc offset on resume
    
    commit 8b4bd256674720709a9d858a219fcac6f2f253b5 upstream.
    
    After upgrading to Linux 5.13.3 I noticed my laptop would shutdown due
    to overheat (when it should not). It turned out this was due to commit
    fe6a6de6692e ("thermal/drivers/int340x/processor_thermal: Fix tcc setting").
    
    What happens is this drivers uses a global variable to keep track of the
    tcc offset (tcc_offset_save) and uses it on resume. The issue is this
    variable is initialized to 0, but is only set in
    tcc_offset_degree_celsius_store, i.e. when the tcc offset is explicitly
    set by userspace. If that does not happen, the resume path will set the
    offset to 0 (in my case the h/w default being 3, the offset would become
    too low after a suspend/resume cycle).
    
    The issue did not arise before commit fe6a6de6692e, as the function
    setting the offset would return if the offset was 0. This is no longer
    the case (rightfully).
    
    Fix this by not applying the offset if it wasn't saved before, reverting
    back to the old logic. A better approach will come later, but this will
    be easier to apply to stable kernels.
    
    The logic to restore the offset after a resume was there long before
    commit fe6a6de6692e, but as a value of 0 was considered invalid I'm
    referencing the commit that made the issue possible in the Fixes tag
    instead.
    
    Fixes: fe6a6de6692e ("thermal/drivers/int340x/processor_thermal: Fix tcc setting")
    Cc: stable@vger.kernel.org
    Cc: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Signed-off-by: Antoine Tenart <atenart@kernel.org>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Reviewed-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
    Tested-by: Srinivas Pandruvada <srinivas.pI andruvada@linux.intel.com>
    Link: https://lore.kernel.org/r/20210909085613.5577-2-atenart@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit de1c3506806d07c284138389d7cb54f797e37ffa
Author: Sai Krishna Potthuri <lakshmi.sai.krishna.potthuri@xilinx.com>
Date:   Wed Aug 18 12:53:14 2021 +0530

    EDAC/synopsys: Fix wrong value type assignment for edac_mode
    
    commit 5297cfa6bdf93e3889f78f9b482e2a595a376083 upstream.
    
    dimm->edac_mode contains values of type enum edac_type - not the
    corresponding capability flags. Fix that.
    
    Issue caught by Coverity check "enumerated type mixed with another
    type."
    
     [ bp: Rewrite commit message, add tags. ]
    
    Fixes: ae9b56e3996d ("EDAC, synps: Add EDAC support for zynq ddr ecc controller")
    Signed-off-by: Sai Krishna Potthuri <lakshmi.sai.krishna.potthuri@xilinx.com>
    Signed-off-by: Shubhrajyoti Datta <shubhrajyoti.datta@xilinx.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20210818072315.15149-1-shubhrajyoti.datta@xilinx.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8ede848bc99e8bf34082b37306216df3b5cf4543
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Sep 18 10:05:06 2021 -0700

    spi: Fix tegra20 build with CONFIG_PM=n
    
    [ Upstream commit efafec27c5658ed987e720130772f8933c685e87 ]
    
    Without CONFIG_PM enabled, the SET_RUNTIME_PM_OPS() macro ends up being
    empty, and the only use of tegra_slink_runtime_{resume,suspend} goes
    away, resulting in
    
      drivers/spi/spi-tegra20-slink.c:1200:12: error: ‘tegra_slink_runtime_resume’ defined but not used [-Werror=unused-function]
       1200 | static int tegra_slink_runtime_resume(struct device *dev)
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~
      drivers/spi/spi-tegra20-slink.c:1188:12: error: ‘tegra_slink_runtime_suspend’ defined but not used [-Werror=unused-function]
       1188 | static int tegra_slink_runtime_suspend(struct device *dev)
            |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    mark the functions __maybe_unused to make the build happy.
    
    This hits the alpha allmodconfig build (and others).
    
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d193f7dbf4ec520e1ca8f11667fe929ec4c0becc
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 8 20:57:43 2021 -0700

    net: 6pack: Fix tx timeout and slot time
    
    [ Upstream commit 3c0d2a46c0141913dc6fd126c57d0615677d946e ]
    
    tx timeout and slot time are currently specified in units of HZ.  On
    Alpha, HZ is defined as 1024.  When building alpha:allmodconfig, this
    results in the following error message.
    
      drivers/net/hamradio/6pack.c: In function 'sixpack_open':
      drivers/net/hamradio/6pack.c:71:41: error:
            unsigned conversion from 'int' to 'unsigned char'
            changes value from '256' to '0'
    
    In the 6PACK protocol, tx timeout is specified in units of 10 ms and
    transmitted over the wire:
    
        https://www.linux-ax25.org/wiki/6PACK
    
    Defining a value dependent on HZ doesn't really make sense, and
    presumably comes from the (very historical) situation where HZ was
    originally 100.
    
    Note that the SIXP_SLOTTIME use explicitly is about 10ms granularity:
    
            mod_timer(&sp->tx_t, jiffies + ((when + 1) * HZ) / 100);
    
    and the SIXP_TXDELAY walue is sent as a byte over the wire.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa56f2c987c752e365324c26cc7fc0255a370d7f
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Wed Sep 8 22:00:33 2021 -0700

    alpha: Declare virt_to_phys and virt_to_bus parameter as pointer to volatile
    
    [ Upstream commit 35a3f4ef0ab543daa1725b0c963eb8c05e3376f8 ]
    
    Some drivers pass a pointer to volatile data to virt_to_bus() and
    virt_to_phys(), and that works fine.  One exception is alpha.  This
    results in a number of compile errors such as
    
      drivers/net/wan/lmc/lmc_main.c: In function 'lmc_softreset':
      drivers/net/wan/lmc/lmc_main.c:1782:50: error:
            passing argument 1 of 'virt_to_bus' discards 'volatile'
            qualifier from pointer target type
    
      drivers/atm/ambassador.c: In function 'do_loader_command':
      drivers/atm/ambassador.c:1747:58: error:
            passing argument 1 of 'virt_to_bus' discards 'volatile'
            qualifier from pointer target type
    
    Declare the parameter of virt_to_phys and virt_to_bus as pointer to
    volatile to fix the problem.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af4a142ab798415b40d46d2956e091b4c3d156de
Author: Dan Li <ashimida@linux.alibaba.com>
Date:   Tue Sep 14 17:44:02 2021 +0800

    arm64: Mark __stack_chk_guard as __ro_after_init
    
    [ Upstream commit 9fcb2e93f41c07a400885325e7dbdfceba6efaec ]
    
    __stack_chk_guard is setup once while init stage and never changed
    after that.
    
    Although the modification of this variable at runtime will usually
    cause the kernel to crash (so does the attacker), it should be marked
    as __ro_after_init, and it should not affect performance if it is
    placed in the ro_after_init section.
    
    Signed-off-by: Dan Li <ashimida@linux.alibaba.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Link: https://lore.kernel.org/r/1631612642-102881-1-git-send-email-ashimida@linux.alibaba.com
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit aeb19da46c7dc0f46ce73bb7a4e7cdc549178b13
Author: Helge Deller <deller@gmx.de>
Date:   Thu Sep 16 08:35:42 2021 +0200

    parisc: Use absolute_pointer() to define PAGE0
    
    [ Upstream commit 90cc7bed1ed19f869ae7221a6b41887fe762a6a3 ]
    
    Use absolute_pointer() wrapper for PAGE0 to avoid this compiler warning:
    
      arch/parisc/kernel/setup.c: In function 'start_parisc':
      error: '__builtin_memcmp_eq' specified bound 8 exceeds source size 0
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Co-Developed-by: Guenter Roeck <linux@roeck-us.net>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8cd34eb616d97add9a707e1fca19b5deeb7dc46f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Sep 15 13:56:37 2021 -0700

    qnx4: avoid stringop-overread errors
    
    [ Upstream commit b7213ffa0e585feb1aee3e7173e965e66ee0abaa ]
    
    The qnx4 directory entries are 64-byte blocks that have different
    contents depending on the a status byte that is in the last byte of the
    block.
    
    In particular, a directory entry can be either a "link info" entry with
    a 48-byte name and pointers to the real inode information, or an "inode
    entry" with a smaller 16-byte name and the full inode information.
    
    But the code was written to always just treat the directory name as if
    it was part of that "inode entry", and just extend the name to the
    longer case if the status byte said it was a link entry.
    
    That work just fine and gives the right results, but now that gcc is
    tracking data structure accesses much more, the code can trigger a
    compiler error about using up to 48 bytes (the long name) in a structure
    that only has that shorter name in it:
    
       fs/qnx4/dir.c: In function ‘qnx4_readdir’:
       fs/qnx4/dir.c:51:32: error: ‘strnlen’ specified bound 48 exceeds source size 16 [-Werror=stringop-overread]
          51 |                         size = strnlen(de->di_fname, size);
             |                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
       In file included from fs/qnx4/qnx4.h:3,
                        from fs/qnx4/dir.c:16:
       include/uapi/linux/qnx4_fs.h:45:25: note: source object declared here
          45 |         char            di_fname[QNX4_SHORT_NAME_MAX];
             |                         ^~~~~~~~
    
    which is because the source code doesn't really make this whole "one of
    two different types" explicit.
    
    Fix this by introducing a very explicit union of the two types, and
    basically explaining to the compiler what is really going on.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1214ace6140268d609e7c5b1dd6aeed70e6df73f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 6 16:06:04 2021 -0700

    sparc: avoid stringop-overread errors
    
    [ Upstream commit fc7c028dcdbfe981bca75d2a7b95f363eb691ef3 ]
    
    The sparc mdesc code does pointer games with 'struct mdesc_hdr', but
    didn't describe to the compiler how that header is then followed by the
    data that the header describes.
    
    As a result, gcc is now unhappy since it does stricter pointer range
    tracking, and doesn't understand about how these things work.  This
    results in various errors like:
    
        arch/sparc/kernel/mdesc.c: In function ‘mdesc_node_by_name’:
        arch/sparc/kernel/mdesc.c:647:22: error: ‘strcmp’ reading 1 or more bytes from a region of size 0 [-Werror=stringop-overread]
          647 |                 if (!strcmp(names + ep[ret].name_offset, name))
              |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    which are easily avoided by just describing 'struct mdesc_hdr' better,
    and making the node_block() helper function look into that unsized
    data[] that follows the header.
    
    This makes the sparc64 build happy again at least for my cross-compiler
    version (gcc version 11.2.1).
    
    Link: https://lore.kernel.org/lkml/CAHk-=wi4NW3NC0xWykkw=6LnjQD6D_rtRtxY9g8gQAJXtQMi8A@mail.gmail.com/
    Cc: Guenter Roeck <linux@roeck-us.net>
    Cc: David S. Miller <davem@davemloft.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 113a8edfb9c9fbdc16d967f2a0b539266e999f94
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Tue Sep 14 20:52:25 2021 -0700

    net: i825xx: Use absolute_pointer for memcpy from fixed memory location
    
    [ Upstream commit dff2d13114f0beec448da9b3716204eb34b0cf41 ]
    
    gcc 11.x reports the following compiler warning/error.
    
      drivers/net/ethernet/i825xx/82596.c: In function 'i82596_probe':
      arch/m68k/include/asm/string.h:72:25: error:
            '__builtin_memcpy' reading 6 bytes from a region of size 0 [-Werror=stringop-overread]
    
    Use absolute_pointer() to work around the problem.
    
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2397ea2db22bed402fdc4c341dc4be3b49178991
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Tue Sep 14 20:52:24 2021 -0700

    compiler.h: Introduce absolute_pointer macro
    
    [ Upstream commit f6b5f1a56987de837f8e25cd560847106b8632a8 ]
    
    absolute_pointer() disassociates a pointer from its originating symbol
    type and context. Use it to prevent compiler warnings/errors such as
    
      drivers/net/ethernet/i825xx/82596.c: In function 'i82596_probe':
      arch/m68k/include/asm/string.h:72:25: error:
            '__builtin_memcpy' reading 6 bytes from a region of size 0 [-Werror=stringop-overread]
    
    Such warnings may be reported by gcc 11.x for string and memory
    operations on fixed addresses.
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d12ddd843f1877de1f7dd2aeea4907cf9ff3ac08
Author: Li Jinlin <lijinlin3@huawei.com>
Date:   Tue Sep 14 12:26:05 2021 +0800

    blk-cgroup: fix UAF by grabbing blkcg lock before destroying blkg pd
    
    [ Upstream commit 858560b27645e7e97aca37ee8f232cccd658fbd2 ]
    
    KASAN reports a use-after-free report when doing fuzz test:
    
    [693354.104835] ==================================================================
    [693354.105094] BUG: KASAN: use-after-free in bfq_io_set_weight_legacy+0xd3/0x160
    [693354.105336] Read of size 4 at addr ffff888be0a35664 by task sh/1453338
    
    [693354.105607] CPU: 41 PID: 1453338 Comm: sh Kdump: loaded Not tainted 4.18.0-147
    [693354.105610] Hardware name: Huawei 2288H V5/BC11SPSCB0, BIOS 0.81 07/02/2018
    [693354.105612] Call Trace:
    [693354.105621]  dump_stack+0xf1/0x19b
    [693354.105626]  ? show_regs_print_info+0x5/0x5
    [693354.105634]  ? printk+0x9c/0xc3
    [693354.105638]  ? cpumask_weight+0x1f/0x1f
    [693354.105648]  print_address_description+0x70/0x360
    [693354.105654]  kasan_report+0x1b2/0x330
    [693354.105659]  ? bfq_io_set_weight_legacy+0xd3/0x160
    [693354.105665]  ? bfq_io_set_weight_legacy+0xd3/0x160
    [693354.105670]  bfq_io_set_weight_legacy+0xd3/0x160
    [693354.105675]  ? bfq_cpd_init+0x20/0x20
    [693354.105683]  cgroup_file_write+0x3aa/0x510
    [693354.105693]  ? ___slab_alloc+0x507/0x540
    [693354.105698]  ? cgroup_file_poll+0x60/0x60
    [693354.105702]  ? 0xffffffff89600000
    [693354.105708]  ? usercopy_abort+0x90/0x90
    [693354.105716]  ? mutex_lock+0xef/0x180
    [693354.105726]  kernfs_fop_write+0x1ab/0x280
    [693354.105732]  ? cgroup_file_poll+0x60/0x60
    [693354.105738]  vfs_write+0xe7/0x230
    [693354.105744]  ksys_write+0xb0/0x140
    [693354.105749]  ? __ia32_sys_read+0x50/0x50
    [693354.105760]  do_syscall_64+0x112/0x370
    [693354.105766]  ? syscall_return_slowpath+0x260/0x260
    [693354.105772]  ? do_page_fault+0x9b/0x270
    [693354.105779]  ? prepare_exit_to_usermode+0xf9/0x1a0
    [693354.105784]  ? enter_from_user_mode+0x30/0x30
    [693354.105793]  entry_SYSCALL_64_after_hwframe+0x65/0xca
    
    [693354.105875] Allocated by task 1453337:
    [693354.106001]  kasan_kmalloc+0xa0/0xd0
    [693354.106006]  kmem_cache_alloc_node_trace+0x108/0x220
    [693354.106010]  bfq_pd_alloc+0x96/0x120
    [693354.106015]  blkcg_activate_policy+0x1b7/0x2b0
    [693354.106020]  bfq_create_group_hierarchy+0x1e/0x80
    [693354.106026]  bfq_init_queue+0x678/0x8c0
    [693354.106031]  blk_mq_init_sched+0x1f8/0x460
    [693354.106037]  elevator_switch_mq+0xe1/0x240
    [693354.106041]  elevator_switch+0x25/0x40
    [693354.106045]  elv_iosched_store+0x1a1/0x230
    [693354.106049]  queue_attr_store+0x78/0xb0
    [693354.106053]  kernfs_fop_write+0x1ab/0x280
    [693354.106056]  vfs_write+0xe7/0x230
    [693354.106060]  ksys_write+0xb0/0x140
    [693354.106064]  do_syscall_64+0x112/0x370
    [693354.106069]  entry_SYSCALL_64_after_hwframe+0x65/0xca
    
    [693354.106114] Freed by task 1453336:
    [693354.106225]  __kasan_slab_free+0x130/0x180
    [693354.106229]  kfree+0x90/0x1b0
    [693354.106233]  blkcg_deactivate_policy+0x12c/0x220
    [693354.106238]  bfq_exit_queue+0xf5/0x110
    [693354.106241]  blk_mq_exit_sched+0x104/0x130
    [693354.106245]  __elevator_exit+0x45/0x60
    [693354.106249]  elevator_switch_mq+0xd6/0x240
    [693354.106253]  elevator_switch+0x25/0x40
    [693354.106257]  elv_iosched_store+0x1a1/0x230
    [693354.106261]  queue_attr_store+0x78/0xb0
    [693354.106264]  kernfs_fop_write+0x1ab/0x280
    [693354.106268]  vfs_write+0xe7/0x230
    [693354.106271]  ksys_write+0xb0/0x140
    [693354.106275]  do_syscall_64+0x112/0x370
    [693354.106280]  entry_SYSCALL_64_after_hwframe+0x65/0xca
    
    [693354.106329] The buggy address belongs to the object at ffff888be0a35580
                     which belongs to the cache kmalloc-1k of size 1024
    [693354.106736] The buggy address is located 228 bytes inside of
                     1024-byte region [ffff888be0a35580, ffff888be0a35980)
    [693354.107114] The buggy address belongs to the page:
    [693354.107273] page:ffffea002f828c00 count:1 mapcount:0 mapping:ffff888107c17080 index:0x0 compound_mapcount: 0
    [693354.107606] flags: 0x17ffffc0008100(slab|head)
    [693354.107760] raw: 0017ffffc0008100 ffffea002fcbc808 ffffea0030bd3a08 ffff888107c17080
    [693354.108020] raw: 0000000000000000 00000000001c001c 00000001ffffffff 0000000000000000
    [693354.108278] page dumped because: kasan: bad access detected
    
    [693354.108511] Memory state around the buggy address:
    [693354.108671]  ffff888be0a35500: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [693354.116396]  ffff888be0a35580: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [693354.124473] >ffff888be0a35600: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [693354.132421]                                                        ^
    [693354.140284]  ffff888be0a35680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [693354.147912]  ffff888be0a35700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [693354.155281] ==================================================================
    
    blkgs are protected by both queue and blkcg locks and holding
    either should stabilize them. However, the path of destroying
    blkg policy data is only protected by queue lock in
    blkcg_activate_policy()/blkcg_deactivate_policy(). Other tasks
    can get the blkg policy data before the blkg policy data is
    destroyed, and use it after destroyed, which will result in a
    use-after-free.
    
    CPU0                             CPU1
    blkcg_deactivate_policy
      spin_lock_irq(&q->queue_lock)
                                     bfq_io_set_weight_legacy
                                       spin_lock_irq(&blkcg->lock)
                                       blkg_to_bfqg(blkg)
                                         pd_to_bfqg(blkg->pd[pol->plid])
                                         ^^^^^^blkg->pd[pol->plid] != NULL
                                               bfqg != NULL
      pol->pd_free_fn(blkg->pd[pol->plid])
        pd_to_bfqg(blkg->pd[pol->plid])
        bfqg_put(bfqg)
          kfree(bfqg)
      blkg->pd[pol->plid] = NULL
      spin_unlock_irq(q->queue_lock);
                                       bfq_group_set_weight(bfqg, val, 0)
                                         bfqg->entity.new_weight
                                         ^^^^^^trigger uaf here
                                       spin_unlock_irq(&blkcg->lock);
    
    Fix by grabbing the matching blkcg lock before trying to
    destroy blkg policy data.
    
    Suggested-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Li Jinlin <lijinlin3@huawei.com>
    Acked-by: Tejun Heo <tj@kernel.org>
    Link: https://lore.kernel.org/r/20210914042605.3260596-1-lijinlin3@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d7798823264e8fb92fb21707946ab643a764461
Author: Andreas Larsson <andreas@gaisler.com>
Date:   Wed Sep 8 09:48:22 2021 +0200

    sparc32: page align size in arch_dma_alloc
    
    [ Upstream commit 59583f747664046aaae5588d56d5954fab66cce8 ]
    
    Commit 53b7670e5735 ("sparc: factor the dma coherent mapping into
    helper") lost the page align for the calls to dma_make_coherent and
    srmmu_unmapiorange. The latter cannot handle a non page aligned len
    argument.
    
    Signed-off-by: Andreas Larsson <andreas@gaisler.com>
    Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec49f3f7f6694de1cd0f6dca7e5ba18dd7699b72
Author: Anton Eidelman <anton.eidelman@gmail.com>
Date:   Sun Sep 12 12:54:57 2021 -0600

    nvme-multipath: fix ANA state updates when a namespace is not present
    
    [ Upstream commit 79f528afa93918519574773ea49a444c104bc1bd ]
    
    nvme_update_ana_state() has a deficiency that results in a failure to
    properly update the ana state for a namespace in the following case:
    
      NSIDs in ctrl->namespaces:    1, 3,    4
      NSIDs in desc->nsids:         1, 2, 3, 4
    
    Loop iteration 0:
        ns index = 0, n = 0, ns->head->ns_id = 1, nsid = 1, MATCH.
    Loop iteration 1:
        ns index = 1, n = 1, ns->head->ns_id = 3, nsid = 2, NO MATCH.
    Loop iteration 2:
        ns index = 2, n = 2, ns->head->ns_id = 4, nsid = 4, MATCH.
    
    Where the update to the ANA state of NSID 3 is missed.  To fix this
    increment n and retry the update with the same ns when ns->head->ns_id is
    higher than nsid,
    
    Signed-off-by: Anton Eidelman <anton@lightbitslabs.com>
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29917bbb07c30be295dece245c7c21872e1a6fbb
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Aug 27 14:32:06 2021 +0200

    xen/balloon: use a kernel thread instead a workqueue
    
    [ Upstream commit 8480ed9c2bbd56fc86524998e5f2e3e22f5038f6 ]
    
    Today the Xen ballooning is done via delayed work in a workqueue. This
    might result in workqueue hangups being reported in case of large
    amounts of memory are being ballooned in one go (here 16GB):
    
    BUG: workqueue lockup - pool cpus=6 node=0 flags=0x0 nice=0 stuck for 64s!
    Showing busy workqueues and worker pools:
    workqueue events: flags=0x0
      pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=2/256 refcnt=3
        in-flight: 229:balloon_process
        pending: cache_reap
    workqueue events_freezable_power_: flags=0x84
      pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=1/256 refcnt=2
        pending: disk_events_workfn
    workqueue mm_percpu_wq: flags=0x8
      pwq 12: cpus=6 node=0 flags=0x0 nice=0 active=1/256 refcnt=2
        pending: vmstat_update
    pool 12: cpus=6 node=0 flags=0x0 nice=0 hung=64s workers=3 idle: 2222 43
    
    This can easily be avoided by using a dedicated kernel thread for doing
    the ballooning work.
    
    Reported-by: Jan Beulich <jbeulich@suse.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/20210827123206.15429-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 93937596e0652d50973f9dc944fea1694ac8cdfd
Author: Bixuan Cui <cuibixuan@huawei.com>
Date:   Sat Sep 11 08:55:57 2021 +0800

    bpf: Add oversize check before call kvcalloc()
    
    [ Upstream commit 0e6491b559704da720f6da09dd0a52c4df44c514 ]
    
    Commit 7661809d493b ("mm: don't allow oversized kvmalloc() calls") add the
    oversize check. When the allocation is larger than what kmalloc() supports,
    the following warning triggered:
    
    WARNING: CPU: 0 PID: 8408 at mm/util.c:597 kvmalloc_node+0x108/0x110 mm/util.c:597
    Modules linked in:
    CPU: 0 PID: 8408 Comm: syz-executor221 Not tainted 5.14.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:kvmalloc_node+0x108/0x110 mm/util.c:597
    Call Trace:
     kvmalloc include/linux/mm.h:806 [inline]
     kvmalloc_array include/linux/mm.h:824 [inline]
     kvcalloc include/linux/mm.h:829 [inline]
     check_btf_line kernel/bpf/verifier.c:9925 [inline]
     check_btf_info kernel/bpf/verifier.c:10049 [inline]
     bpf_check+0xd634/0x150d0 kernel/bpf/verifier.c:13759
     bpf_prog_load kernel/bpf/syscall.c:2301 [inline]
     __sys_bpf+0x11181/0x126e0 kernel/bpf/syscall.c:4587
     __do_sys_bpf kernel/bpf/syscall.c:4691 [inline]
     __se_sys_bpf kernel/bpf/syscall.c:4689 [inline]
     __x64_sys_bpf+0x78/0x90 kernel/bpf/syscall.c:4689
     do_syscall_x64 arch/x86/entry/common.c:50 [inline]
     do_syscall_64+0x3d/0xb0 arch/x86/entry/common.c:80
     entry_SYSCALL_64_after_hwframe+0x44/0xae
    
    Reported-by: syzbot+f3e749d4c662818ae439@syzkaller.appspotmail.com
    Signed-off-by: Bixuan Cui <cuibixuan@huawei.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Yonghong Song <yhs@fb.com>
    Link: https://lore.kernel.org/bpf/20210911005557.45518-1-cuibixuan@huawei.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7273cb182f13b0ebd2e120a268cde6ea9dc45c28
Author: zhang kai <zhangkaiheb@126.com>
Date:   Thu Sep 9 16:39:18 2021 +0800

    ipv6: delay fib6_sernum increase in fib6_add
    
    [ Upstream commit e87b5052271e39d62337ade531992b7e5d8c2cfa ]
    
    only increase fib6_sernum in net namespace after add fib6_info
    successfully.
    
    Signed-off-by: zhang kai <zhangkaiheb@126.com>
    Reviewed-by: David Ahern <dsahern@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7432ecc55fe956e896aff1c62dea981949d1bcff
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Mon Sep 6 23:07:29 2021 -0700

    m68k: Double cast io functions to unsigned long
    
    [ Upstream commit b1a89856fbf63fffde6a4771d8f1ac21df549e50 ]
    
    m68k builds fail widely with errors such as
    
    arch/m68k/include/asm/raw_io.h:20:19: error:
            cast to pointer from integer of different size
    arch/m68k/include/asm/raw_io.h:30:32: error:
            cast to pointer from integer of different size [-Werror=int-to-p
    
    On m68k, io functions are defined as macros. The problem is seen if the
    macro parameter variable size differs from the size of a pointer. Cast
    the parameter of all io macros to unsigned long before casting it to
    a pointer to fix the problem.
    
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Link: https://lore.kernel.org/r/20210907060729.2391992-1-linux@roeck-us.net
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 29c70b0d335a2f5d1a8a2e7dad2b50f80d71b8aa
Author: Jesper Nilsson <jesper.nilsson@axis.com>
Date:   Fri Sep 10 21:55:34 2021 +0200

    net: stmmac: allow CSR clock of 300MHz
    
    [ Upstream commit 08dad2f4d541fcfe5e7bfda72cc6314bbfd2802f ]
    
    The Synopsys Ethernet IP uses the CSR clock as a base clock for MDC.
    The divisor used is set in the MAC_MDIO_Address register field CR
    (Clock Rate)
    
    The divisor is there to change the CSR clock into a clock that falls
    below the IEEE 802.3 specified max frequency of 2.5MHz.
    
    If the CSR clock is 300MHz, the code falls back to using the reset
    value in the MAC_MDIO_Address register, as described in the comment
    above this code.
    
    However, 300MHz is actually an allowed value and the proper divider
    can be estimated quite easily (it's just 1Hz difference!)
    
    A CSR frequency of 300MHz with the maximum clock rate value of 0x5
    (STMMAC_CSR_250_300M, a divisor of 124) gives somewhere around
    ~2.42MHz which is below the IEEE 802.3 specified maximum.
    
    For the ARTPEC-8 SoC, the CSR clock is this problematic 300MHz,
    and unfortunately, the reset-value of the MAC_MDIO_Address CR field
    is 0x0.
    
    This leads to a clock rate of zero and a divisor of 42, and gives an
    MDC frequency of ~7.14MHz.
    
    Allow CSR clock of 300MHz by making the comparison inclusive.
    
    Signed-off-by: Jesper Nilsson <jesper.nilsson@axis.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1da750d1e2140ef43d64d17f301ff6f41b45541e
Author: Tong Zhang <ztong0001@gmail.com>
Date:   Wed Sep 8 12:02:32 2021 -0700

    net: macb: fix use after free on rmmod
    
    [ Upstream commit d82d5303c4c539db86588ffb5dc5b26c3f1513e8 ]
    
    plat_dev->dev->platform_data is released by platform_device_unregister(),
    use of pclk and hclk is a use-after-free. Since device unregister won't
    need a clk device we adjust the function call sequence to fix this issue.
    
    [   31.261225] BUG: KASAN: use-after-free in macb_remove+0x77/0xc6 [macb_pci]
    [   31.275563] Freed by task 306:
    [   30.276782]  platform_device_release+0x25/0x80
    
    Suggested-by: Nicolas Ferre <Nicolas.Ferre@microchip.com>
    Signed-off-by: Tong Zhang <ztong0001@gmail.com>
    Acked-by: Nicolas Ferre <nicolas.ferre@microchip.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ebb8d26d93c3ec3c7576c52a8373a2309423c069
Author: Zhihao Cheng <chengzhihao1@huawei.com>
Date:   Thu Sep 23 21:49:21 2021 +0800

    blktrace: Fix uaf in blk_trace access after removing by sysfs
    
    [ Upstream commit 5afedf670caf30a2b5a52da96eb7eac7dee6a9c9 ]
    
    There is an use-after-free problem triggered by following process:
    
          P1(sda)                           P2(sdb)
                            echo 0 > /sys/block/sdb/trace/enable
                              blk_trace_remove_queue
                                synchronize_rcu
                                blk_trace_free
                                  relay_close
    rcu_read_lock
    __blk_add_trace
      trace_note_tsk
      (Iterate running_trace_list)
                                    relay_close_buf
                                      relay_destroy_buf
                                        kfree(buf)
        trace_note(sdb's bt)
          relay_reserve
            buf->offset <- nullptr deference (use-after-free) !!!
    rcu_read_unlock
    
    [  502.714379] BUG: kernel NULL pointer dereference, address:
    0000000000000010
    [  502.715260] #PF: supervisor read access in kernel mode
    [  502.715903] #PF: error_code(0x0000) - not-present page
    [  502.716546] PGD 103984067 P4D 103984067 PUD 17592b067 PMD 0
    [  502.717252] Oops: 0000 [#1] SMP
    [  502.720308] RIP: 0010:trace_note.isra.0+0x86/0x360
    [  502.732872] Call Trace:
    [  502.733193]  __blk_add_trace.cold+0x137/0x1a3
    [  502.733734]  blk_add_trace_rq+0x7b/0xd0
    [  502.734207]  blk_add_trace_rq_issue+0x54/0xa0
    [  502.734755]  blk_mq_start_request+0xde/0x1b0
    [  502.735287]  scsi_queue_rq+0x528/0x1140
    ...
    [  502.742704]  sg_new_write.isra.0+0x16e/0x3e0
    [  502.747501]  sg_ioctl+0x466/0x1100
    
    Reproduce method:
      ioctl(/dev/sda, BLKTRACESETUP, blk_user_trace_setup[buf_size=127])
      ioctl(/dev/sda, BLKTRACESTART)
      ioctl(/dev/sdb, BLKTRACESETUP, blk_user_trace_setup[buf_size=127])
      ioctl(/dev/sdb, BLKTRACESTART)
    
      echo 0 > /sys/block/sdb/trace/enable &
      // Add delay(mdelay/msleep) before kernel enters blk_trace_free()
    
      ioctl$SG_IO(/dev/sda, SG_IO, ...)
      // Enters trace_note_tsk() after blk_trace_free() returned
      // Use mdelay in rcu region rather than msleep(which may schedule out)
    
    Remove blk_trace from running_list before calling blk_trace_free() by
    sysfs if blk_trace is at Blktrace_running state.
    
    Fixes: c71a896154119f ("blktrace: add ftrace plugin")
    Signed-off-by: Zhihao Cheng <chengzhihao1@huawei.com>
    Link: https://lore.kernel.org/r/20210923134921.109194-1-chengzhihao1@huawei.com
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2b5befcd404522caae0df7e085b699122f5196a3
Author: Christoph Hellwig <hch@lst.de>
Date:   Wed Sep 1 13:38:29 2021 +0200

    md: fix a lock order reversal in md_alloc
    
    [ Upstream commit 7df835a32a8bedf7ce88efcfa7c9b245b52ff139 ]
    
    Commit b0140891a8cea3 ("md: Fix race when creating a new md device.")
    not only moved assigning mddev->gendisk before calling add_disk, which
    fixes the races described in the commit log, but also added a
    mddev->open_mutex critical section over add_disk and creation of the
    md kobj.  Adding a kobject after add_disk is racy vs deleting the gendisk
    right after adding it, but md already prevents against that by holding
    a mddev->active reference.
    
    On the other hand taking this lock added a lock order reversal with what
    is not disk->open_mutex (used to be bdev->bd_mutex when the commit was
    added) for partition devices, which need that lock for the internal open
    for the partition scan, and a recent commit also takes it for
    non-partitioned devices, leading to further lockdep splatter.
    
    Fixes: b0140891a8ce ("md: Fix race when creating a new md device.")
    Fixes: d62633873590 ("block: support delayed holder registration")
    Reported-by: syzbot+fadc0aaf497e6a493b9f@syzkaller.appspotmail.com
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Tested-by: syzbot+fadc0aaf497e6a493b9f@syzkaller.appspotmail.com
    Reviewed-by: NeilBrown <neilb@suse.de>
    Signed-off-by: Song Liu <songliubraving@fb.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42d3711c23781045e7a5cd28536c774b9a66d20b
Author: Kaige Fu <kaige.fu@linux.alibaba.com>
Date:   Wed Sep 15 10:20:55 2021 +0800

    irqchip/gic-v3-its: Fix potential VPE leak on error
    
    [ Upstream commit 280bef512933b2dda01d681d8cbe499b98fc5bdd ]
    
    In its_vpe_irq_domain_alloc, when its_vpe_init() returns an error,
    there is an off-by-one in the number of VPEs to be freed.
    
    Fix it by simply passing the number of VPEs allocated, which is the
    index of the loop iterating over the VPEs.
    
    Fixes: 7d75bbb4bc1a ("irqchip/gic-v3-its: Add VPE irq domain allocation/teardown")
    Signed-off-by: Kaige Fu <kaige.fu@linux.alibaba.com>
    [maz: fixed commit message]
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/d9e36dee512e63670287ed9eff884a5d8d6d27f2.1631672311.git.kaige.fu@linux.alibaba.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 71f323f6059218b7ab14bbe43b8f155033c176ce
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sun Sep 5 09:25:19 2021 -0700

    irqchip/goldfish-pic: Select GENERIC_IRQ_CHIP to fix build
    
    [ Upstream commit 969ac78db78c723a24e9410666b457cc1b0cb3c3 ]
    
    irq-goldfish-pic uses GENERIC_IRQ_CHIP interfaces so select that symbol
    to fix build errors.
    
    Fixes these build errors:
    
    mips-linux-ld: drivers/irqchip/irq-goldfish-pic.o: in function `goldfish_pic_of_init':
    irq-goldfish-pic.c:(.init.text+0xc0): undefined reference to `irq_alloc_generic_chip'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0xf4): undefined reference to `irq_gc_unmask_enable_reg'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0xf8): undefined reference to `irq_gc_unmask_enable_reg'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0x100): undefined reference to `irq_gc_mask_disable_reg'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0x104): undefined reference to `irq_gc_mask_disable_reg'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0x11c): undefined reference to `irq_setup_generic_chip'
    mips-linux-ld: irq-goldfish-pic.c:(.init.text+0x168): undefined reference to `irq_remove_generic_chip'
    
    Fixes: 4235ff50cf98 ("irqchip/irq-goldfish-pic: Add Goldfish PIC driver")
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Reported-by: kernel test robot <lkp@intel.com>
    Cc: Miodrag Dinic <miodrag.dinic@mips.com>
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: Bartosz Golaszewski <bgolaszewski@baylibre.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Marc Zyngier <maz@kernel.org>
    Cc: Goran Ferenc <goran.ferenc@mips.com>
    Cc: Aleksandar Markovic <aleksandar.markovic@mips.com>
    Signed-off-by: Marc Zyngier <maz@kernel.org>
    Link: https://lore.kernel.org/r/20210905162519.21507-1-rdunlap@infradead.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b59625da697fd2eba78d00755efcb60b070a593
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 16 16:23:31 2021 +0300

    scsi: lpfc: Use correct scnprintf() limit
    
    [ Upstream commit 6dacc371b77f473770ec646e220303a84fe96c11 ]
    
    The limit should be "PAGE_SIZE - len" instead of "PAGE_SIZE".  We're not
    going to hit the limit so this fix will not affect runtime.
    
    Link: https://lore.kernel.org/r/20210916132331.GE25094@kili
    Fixes: 5b9e70b22cc5 ("scsi: lpfc: raise sg count for nvme to use available sg resources")
    Reviewed-by: James Smart <jsmart2021@gmail.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30d373dc350125bd9aaff0c2719ba162bd63b936
Author: Dmitry Bogdanov <d.bogdanov@yadro.com>
Date:   Wed Sep 15 18:32:39 2021 +0300

    scsi: qla2xxx: Restore initiator in dual mode
    
    [ Upstream commit 5f8579038842d77e6ce05e1df6bf9dd493b0e3ef ]
    
    In dual mode in case of disabling the target, the whole port goes offline
    and initiator is turned off too.
    
    Fix restoring initiator mode after disabling target in dual mode.
    
    Link: https://lore.kernel.org/r/20210915153239.8035-1-d.bogdanov@yadro.com
    Fixes: 0645cb8350cd ("scsi: qla2xxx: Add mode control for each physical port")
    Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
    Signed-off-by: Dmitry Bogdanov <d.bogdanov@yadro.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d140ccb140c2b082bd2fd61a0b444bcb4d2e6b43
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Sep 21 23:33:35 2021 +0300

    cifs: fix a sign extension bug
    
    [ Upstream commit e946d3c887a9dc33aa82a349c6284f4a084163f4 ]
    
    The problem is the mismatched types between "ctx->total_len" which is
    an unsigned int, "rc" which is an int, and "ctx->rc" which is a
    ssize_t.  The code does:
    
            ctx->rc = (rc == 0) ? ctx->total_len : rc;
    
    We want "ctx->rc" to store the negative "rc" error code.  But what
    happens is that "rc" is type promoted to a high unsigned int and
    'ctx->rc" will store the high positive value instead of a negative
    value.
    
    The fix is to change "rc" from an int to a ssize_t.
    
    Fixes: c610c4b619e5 ("CIFS: Add asynchronous write support through kernel AIO")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1c1062c5cf215c960373c75acb96dc601714ed88
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 16 16:13:42 2021 +0300

    thermal/core: Potential buffer overflow in thermal_build_list_of_policies()
    
    [ Upstream commit 1bb30b20b49773369c299d4d6c65227201328663 ]
    
    After printing the list of thermal governors, then this function prints
    a newline character.  The problem is that "size" has not been updated
    after printing the last governor.  This means that it can write one
    character (the NUL terminator) beyond the end of the buffer.
    
    Get rid of the "size" variable and just use "PAGE_SIZE - count" directly.
    
    Fixes: 1b4f48494eb2 ("thermal: core: group functions related to governor handling")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
    Link: https://lore.kernel.org/r/20210916131342.GB25094@kili
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b869901caba41b4b4529d274ab2077cc87d13cbf
Author: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
Date:   Fri Aug 13 14:40:42 2021 +0800

    fpga: machxo2-spi: Fix missing error code in machxo2_write_complete()
    
    [ Upstream commit a1e4470823d99e75b596748086e120dea169ed3c ]
    
    The error code is missing in this code scenario, add the error code
    '-EINVAL' to the return value 'ret'.
    
    Eliminate the follow smatch warning:
    
    drivers/fpga/machxo2-spi.c:341 machxo2_write_complete()
      warn: missing error code 'ret'.
    
    [mdf@kernel.org: Reworded commit message]
    Fixes: 88fb3a002330 ("fpga: lattice machxo2: Add Lattice MachXO2 support")
    Reported-by: Abaci Robot <abaci@linux.alibaba.com>
    Signed-off-by: Jiapeng Chong <jiapeng.chong@linux.alibaba.com>
    Signed-off-by: Moritz Fischer <mdf@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0ebc3e688f54a71d680ae436ed6879ebbba4f437
Author: Tom Rix <trix@redhat.com>
Date:   Tue Aug 10 09:40:36 2021 -0700

    fpga: machxo2-spi: Return an error on failure
    
    [ Upstream commit 34331739e19fd6a293d488add28832ad49c9fc54 ]
    
    Earlier successes leave 'ret' in a non error state, so these errors are
    not reported. Set ret to -EINVAL before going to the error handler.
    
    This addresses two issues reported by smatch:
    drivers/fpga/machxo2-spi.c:229 machxo2_write_init()
      warn: missing error code 'ret'
    
    drivers/fpga/machxo2-spi.c:316 machxo2_write_complete()
      warn: missing error code 'ret'
    
    [mdf@kernel.org: Reworded commit message]
    Fixes: 88fb3a002330 ("fpga: lattice machxo2: Add Lattice MachXO2 support")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Tom Rix <trix@redhat.com>
    Signed-off-by: Moritz Fischer <mdf@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5bcead7cde68cc58212018e376b1cef2ab2d2ee2
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Wed Sep 1 17:38:06 2021 -0700

    tty: synclink_gt: rename a conflicting function name
    
    [ Upstream commit 06e49073dfba24df4b1073a068631b13a0039c34 ]
    
    'set_signals()' in synclink_gt.c conflicts with an exported symbol
    in arch/um/, so change set_signals() to set_gtsignals(). Keep
    the function names similar by also changing get_signals() to
    get_gtsignals().
    
    ../drivers/tty/synclink_gt.c:442:13: error: conflicting types for ‘set_signals’
     static void set_signals(struct slgt_info *info);
                 ^~~~~~~~~~~
    In file included from ../include/linux/irqflags.h:16:0,
                     from ../include/linux/spinlock.h:58,
                     from ../include/linux/mm_types.h:9,
                     from ../include/linux/buildid.h:5,
                     from ../include/linux/module.h:14,
                     from ../drivers/tty/synclink_gt.c:46:
    ../arch/um/include/asm/irqflags.h:6:5: note: previous declaration of ‘set_signals’ was here
     int set_signals(int enable);
         ^~~~~~~~~~~
    
    Fixes: 705b6c7b34f2 ("[PATCH] new driver synclink_gt")
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Jiri Slaby <jirislaby@kernel.org>
    Cc: Paul Fulghum <paulkf@microgate.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Link: https://lore.kernel.org/r/20210902003806.17054-1-rdunlap@infradead.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c5f27aedf6bbe232237aeb6e6c37b8461544f04d
Author: Jiri Slaby <jirislaby@kernel.org>
Date:   Tue Mar 2 07:22:09 2021 +0100

    tty: synclink_gt, drop unneeded forward declarations
    
    [ Upstream commit b9b90fe655c0bd816847ac1bcbf179cfa2981ecb ]
    
    Forward declarations make the code larger and rewrites harder. Harder as
    they are often omitted from global changes. Remove forward declarations
    which are not really needed, i.e. the definition of the function is
    before its first use.
    
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Link: https://lore.kernel.org/r/20210302062214.29627-39-jslaby@suse.cz
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1deb94d37a7e3972c610351206ffbdb8c62a8977
Author: Baokun Li <libaokun1@huawei.com>
Date:   Wed Sep 1 16:53:36 2021 +0800

    scsi: iscsi: Adjust iface sysfs attr detection
    
    [ Upstream commit 4e28550829258f7dab97383acaa477bd724c0ff4 ]
    
    ISCSI_NET_PARAM_IFACE_ENABLE belongs to enum iscsi_net_param instead of
    iscsi_iface_param so move it to ISCSI_NET_PARAM. Otherwise, when we call
    into the driver, we might not match and return that we don't want attr
    visible in sysfs. Found in code review.
    
    Link: https://lore.kernel.org/r/20210901085336.2264295-1-libaokun1@huawei.com
    Fixes: e746f3451ec7 ("scsi: iscsi: Fix iface sysfs attr detection")
    Reviewed-by: Lee Duncan <lduncan@suse.com>
    Signed-off-by: Baokun Li <libaokun1@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d0f4a2eeebbe0cbdb0e493733f8578e334074cb4
Author: Aya Levin <ayal@nvidia.com>
Date:   Thu Sep 23 09:51:45 2021 +0300

    net/mlx4_en: Don't allow aRFS for encapsulated packets
    
    [ Upstream commit fdbccea419dc782079ce5881d2705cc9e3881480 ]
    
    Driver doesn't support aRFS for encapsulated packets, return early error
    in such a case.
    
    Fixes: 1eb8c695bda9 ("net/mlx4_en: Add accelerated RFS support")
    Signed-off-by: Aya Levin <ayal@nvidia.com>
    Signed-off-by: Tariq Toukan <tariqt@nvidia.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ae7b957ef0032bc0267aac9476dec7cfd00a9dde
Author: Shai Malin <smalin@marvell.com>
Date:   Wed Sep 22 13:53:26 2021 +0300

    qed: rdma - don't wait for resources under hw error recovery flow
    
    [ Upstream commit 1ea7812326004afd2803cc968a4776ae5120a597 ]
    
    If the HW device is during recovery, the HW resources will never return,
    hence we shouldn't wait for the CID (HW context ID) bitmaps to clear.
    This fix speeds up the error recovery flow.
    
    Fixes: 64515dc899df ("qed: Add infrastructure for error detection and recovery")
    Signed-off-by: Michal Kalderon <mkalderon@marvell.com>
    Signed-off-by: Ariel Elior <aelior@marvell.com>
    Signed-off-by: Shai Malin <smalin@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 23716d7153fc0b8c8b594925a87816a3db6344da
Author: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
Date:   Thu Sep 16 20:19:35 2021 +0900

    gpio: uniphier: Fix void functions to remove return value
    
    [ Upstream commit 2dd824cca3407bc9a2bd11b00f6e117b66fcfcf1 ]
    
    The return type of irq_chip.irq_mask() and irq_chip.irq_unmask() should
    be void.
    
    Fixes: dbe776c2ca54 ("gpio: uniphier: add UniPhier GPIO controller driver")
    Signed-off-by: Kunihiko Hayashi <hayashi.kunihiko@socionext.com>
    Signed-off-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f7fb7dbdfb25091f38833bf76d330075e15fb31e
Author: Karsten Graul <kgraul@linux.ibm.com>
Date:   Mon Sep 20 21:18:14 2021 +0200

    net/smc: add missing error check in smc_clc_prfx_set()
    
    [ Upstream commit 6c90731980655280ea07ce4b21eb97457bf86286 ]
    
    Coverity stumbled over a missing error check in smc_clc_prfx_set():
    
    *** CID 1475954:  Error handling issues  (CHECKED_RETURN)
    /net/smc/smc_clc.c: 233 in smc_clc_prfx_set()
    >>>     CID 1475954:  Error handling issues  (CHECKED_RETURN)
    >>>     Calling "kernel_getsockname" without checking return value (as is done elsewhere 8 out of 10 times).
    233             kernel_getsockname(clcsock, (struct sockaddr *)&addrs);
    
    Add the return code check in smc_clc_prfx_set().
    
    Fixes: c246d942eabc ("net/smc: restructure netinfo for CLC proposal msgs")
    Reported-by: Julian Wiedmann <jwi@linux.ibm.com>
    Signed-off-by: Karsten Graul <kgraul@linux.ibm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 363438ed5de0479dea926667a6abe6043eda3e66
Author: Michael Chan <michael.chan@broadcom.com>
Date:   Mon Sep 20 02:51:52 2021 -0400

    bnxt_en: Fix TX timeout when TX ring size is set to the smallest
    
    [ Upstream commit 5bed8b0704c9ecccc8f4a2c377d7c8e21090a82e ]
    
    The smallest TX ring size we support must fit a TX SKB with MAX_SKB_FRAGS
    + 1.  Because the first TX BD for a packet is always a long TX BD, we
    need an extra TX BD to fit this packet.  Define BNXT_MIN_TX_DESC_CNT with
    this value to make this more clear.  The current code uses a minimum
    that is off by 1.  Fix it using this constant.
    
    The tx_wake_thresh to determine when to wake up the TX queue is half the
    ring size but we must have at least BNXT_MIN_TX_DESC_CNT for the next
    packet which may have maximum fragments.  So the comparison of the
    available TX BDs with tx_wake_thresh should be >= instead of > in the
    current code.  Otherwise, at the smallest ring size, we will never wake
    up the TX queue and will cause TX timeout.
    
    Fixes: c0c050c58d84 ("bnxt_en: New Broadcom ethernet driver.")
    Reviewed-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
    Signed-off-by: Michael Chan <michael.chan@broadocm.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4c4c3052911b577920353a7646e4883d5da40c28
Author: Claudiu Manoil <claudiu.manoil@nxp.com>
Date:   Fri Sep 17 13:22:05 2021 +0300

    enetc: Fix illegal access when reading affinity_hint
    
    [ Upstream commit 7237a494decfa17d0b9d0076e6cee3235719de90 ]
    
    irq_set_affinity_hit() stores a reference to the cpumask_t
    parameter in the irq descriptor, and that reference can be
    accessed later from irq_affinity_hint_proc_show(). Since
    the cpu_mask parameter passed to irq_set_affinity_hit() has
    only temporary storage (it's on the stack memory), later
    accesses to it are illegal. Thus reads from the corresponding
    procfs affinity_hint file can result in paging request oops.
    
    The issue is fixed by the get_cpu_mask() helper, which provides
    a permanent storage for the cpumask_t parameter.
    
    Fixes: d4fd0404c1c9 ("enetc: Introduce basic PF and VF ENETC ethernet drivers")
    Signed-off-by: Claudiu Manoil <claudiu.manoil@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit cf9138c966ddbb1475fdb662989316f7d5fdd818
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Aug 27 17:53:10 2021 +0300

    platform/x86/intel: punit_ipc: Drop wrong use of ACPI_PTR()
    
    [ Upstream commit 349bff48ae0f5f8aa2075d0bdc2091a30bd634f6 ]
    
    ACPI_PTR() is more harmful than helpful. For example, in this case
    if CONFIG_ACPI=n, the ID table left unused which is not what we want.
    
    Instead of adding ifdeffery here and there, drop ACPI_PTR()
    and unused acpi.h.
    
    Fixes: fdca4f16f57d ("platform:x86: add Intel P-Unit mailbox IPC driver")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Link: https://lore.kernel.org/r/20210827145310.76239-1-andriy.shevchenko@linux.intel.com
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8e8b1481930e14cd424a3abe95f97df4c5570ae
Author: David Howells <dhowells@redhat.com>
Date:   Wed Sep 1 18:11:33 2021 +0100

    afs: Fix incorrect triggering of sillyrename on 3rd-party invalidation
    
    [ Upstream commit 63d49d843ef5fffeea069e0ffdfbd2bf40ba01c6 ]
    
    The AFS filesystem is currently triggering the silly-rename cleanup from
    afs_d_revalidate() when it sees that a dentry has been changed by a third
    party[1].  It should not be doing this as the cleanup includes deleting the
    silly-rename target file on iput.
    
    Fix this by removing the places in the d_revalidate handling that validate
    anything other than the directory and the dirent.  It probably should not
    be looking to validate the target inode of the dentry also.
    
    This includes removing the point in afs_d_revalidate() where the inode that
    a dentry used to point to was marked as being deleted (AFS_VNODE_DELETED).
    We don't know it got deleted.  It could have been renamed or it could have
    hard links remaining.
    
    This was reproduced by cloning a git repo onto an afs volume on one
    machine, switching to another machine and doing "git status", then
    switching back to the first and doing "git status".  The second status
    would show weird output due to ".git/index" getting deleted by the above
    mentioned mechanism.
    
    A simpler way to do it is to do:
    
            machine 1: touch a
            machine 2: touch b; mv -f b a
            machine 1: stat a
    
    on an afs volume.  The bug shows up as the stat failing with ENOENT and the
    file server log showing that machine 1 deleted "a".
    
    Fixes: 79ddbfa500b3 ("afs: Implement sillyrename for unlink and rename")
    Reported-by: Markus Suvanto <markus.suvanto@gmail.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    Tested-by: Markus Suvanto <markus.suvanto@gmail.com>
    cc: linux-afs@lists.infradead.org
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=214217#c4 [1]
    Link: https://lore.kernel.org/r/163111668100.283156.3851669884664475428.stgit@warthog.procyon.org.uk/
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit acce91ba0d9fcb07d38977ed3315d4e79e5d320c
Author: Johan Hovold <johan@kernel.org>
Date:   Fri Sep 17 12:12:04 2021 +0200

    net: hso: fix muxed tty registration
    
    commit e8f69b16ee776da88589b5271e3f46020efc8f6c upstream.
    
    If resource allocation and registration fail for a muxed tty device
    (e.g. if there are no more minor numbers) the driver should not try to
    deregister the never-registered (or already-deregistered) tty.
    
    Fix up the error handling to avoid dereferencing a NULL pointer when
    attempting to remove the character device.
    
    Fixes: 72dc1c096c70 ("HSO: add option hso driver")
    Cc: stable@vger.kernel.org      # 2.6.27
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 494260e20ac25cc281671ce3cf05b2bd1c66f8a3
Author: Pali Rohár <pali@kernel.org>
Date:   Sat Sep 11 15:20:17 2021 +0200

    serial: mvebu-uart: fix driver's tx_empty callback
    
    commit 74e1eb3b4a1ef2e564b4bdeb6e92afe844e900de upstream.
    
    Driver's tx_empty callback should signal when the transmit shift register
    is empty. So when the last character has been sent.
    
    STAT_TX_FIFO_EMP bit signals only that HW transmit FIFO is empty, which
    happens when the last byte is loaded into transmit shift register.
    
    STAT_TX_EMP bit signals when the both HW transmit FIFO and transmit shift
    register are empty.
    
    So replace STAT_TX_FIFO_EMP check by STAT_TX_EMP in mvebu_uart_tx_empty()
    callback function.
    
    Fixes: 30530791a7a0 ("serial: mvebu-uart: initial support for Armada-3700 serial port")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Pali Rohár <pali@kernel.org>
    Link: https://lore.kernel.org/r/20210911132017.25505-1-pali@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2d7c20db7220bc8dbc560de6e58f024696c790e5
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Thu Sep 9 12:11:59 2021 +0530

    xhci: Set HCD flag to defer primary roothub registration
    
    commit b7a0a792f864583207c593b50fd1b752ed89f4c1 upstream.
    
    Set "HCD_FLAG_DEFER_RH_REGISTER" to hcd->flags in xhci_run() to defer
    registering primary roothub in usb_add_hcd(). This will make sure both
    primary roothub and secondary roothub will be registered along with the
    second HCD. This is required for cold plugged USB devices to be detected
    in certain PCIe USB cards (like Inateck USB card connected to AM64 EVM
    or J7200 EVM).
    
    CC: stable@vger.kernel.org # 5.4+
    Suggested-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Tested-by: Chris Chiu <chris.chiu@canonical.com>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Link: https://lore.kernel.org/r/20210909064200.16216-3-kishon@ti.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 381c8ce0abc018934bf8d47df1880089e36c52de
Author: Qu Wenruo <wqu@suse.com>
Date:   Thu Sep 16 20:43:29 2021 +0800

    btrfs: prevent __btrfs_dump_space_info() to underflow its free space
    
    commit 0619b7901473c380abc05d45cf9c70bee0707db3 upstream.
    
    It's not uncommon where __btrfs_dump_space_info() gets called
    under over-commit situations.
    
    In that case free space would underflow as total allocated space is not
    enough to handle all the over-committed space.
    
    Such underflow values can sometimes cause confusion for users enabled
    enospc_debug mount option, and takes some seconds for developers to
    convert the underflow value to signed result.
    
    Just output the free space as s64 to avoid such problem.
    
    Reported-by: Eli V <eliventer@gmail.com>
    Link: https://lore.kernel.org/linux-btrfs/CAJtFHUSy4zgyhf-4d9T+KdJp9w=UgzC2A0V=VtmaeEpcGgm1-Q@mail.gmail.com/
    CC: stable@vger.kernel.org # 5.4+
    Reviewed-by: Anand Jain <anand.jain@oracle.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4ec140e71585db72e83bbd6393a9ffc45b9565b
Author: Gao Xiang <hsiangkao@linux.alibaba.com>
Date:   Tue Sep 21 22:35:30 2021 +0800

    erofs: fix up erofs_lookup tracepoint
    
    commit 93368aab0efc87288cac65e99c9ed2e0ffc9e7d0 upstream.
    
    Fix up a misuse that the filename pointer isn't always valid in
    the ring buffer, and we should copy the content instead.
    
    Link: https://lore.kernel.org/r/20210921143531.81356-1-hsiangkao@linux.alibaba.com
    Fixes: 13f06f48f7bf ("staging: erofs: support tracepoint")
    Cc: stable@vger.kernel.org # 4.19+
    Reviewed-by: Chao Yu <chao@kernel.org>
    Signed-off-by: Gao Xiang <hsiangkao@linux.alibaba.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7751f609eadf36b1f53712bae430019c53a16eb0
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Sep 6 21:35:48 2021 +0900

    mcb: fix error handling in mcb_alloc_bus()
    
    commit 25a1433216489de4abc889910f744e952cb6dbae upstream.
    
    There are two bugs:
    1) If ida_simple_get() fails then this code calls put_device(carrier)
       but we haven't yet called get_device(carrier) and probably that
       leads to a use after free.
    2) After device_initialize() then we need to use put_device() to
       release the bus.  This will free the internal resources tied to the
       device and call mcb_free_bus() which will free the rest.
    
    Fixes: 5d9e2ab9fea4 ("mcb: Implement bus->dev.release callback")
    Fixes: 18d288198099 ("mcb: Correctly initialize the bus's device")
    Cc: stable@vger.kernel.org
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Johannes Thumshirn <jth@kernel.org>
    Link: https://lore.kernel.org/r/32e160cf6864ce77f9d62948338e24db9fd8ead9.1630931319.git.johannes.thumshirn@wdc.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 406ff5bf727d1e089908d4f64d53f2a2e9d7506a
Author: Slark Xiao <slark_xiao@163.com>
Date:   Fri Sep 17 19:01:06 2021 +0800

    USB: serial: option: add device id for Foxconn T99W265
    
    commit 9e3eed534f8235a4a596a9dae5b8a6425d81ea1a upstream.
    
    Adding support for Foxconn device T99W265 for enumeration with
    PID 0xe0db.
    
    usb-devices output for 0xe0db
    T:  Bus=04 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#= 19 Spd=5000 MxCh= 0
    D:  Ver= 3.20 Cls=ef(misc ) Sub=02 Prot=01 MxPS= 9 #Cfgs=  1
    P:  Vendor=0489 ProdID=e0db Rev=05.04
    S:  Manufacturer=Microsoft
    S:  Product=Generic Mobile Broadband Adapter
    S:  SerialNumber=6c50f452
    C:  #Ifs= 5 Cfg#= 1 Atr=a0 MxPwr=896mA
    I:  If#=0x0 Alt= 0 #EPs= 1 Cls=02(commc) Sub=0e Prot=00 Driver=cdc_mbim
    I:  If#=0x1 Alt= 1 #EPs= 2 Cls=0a(data ) Sub=00 Prot=02 Driver=cdc_mbim
    I:  If#=0x2 Alt= 0 #EPs= 3 Cls=ff(vend.) Sub=ff Prot=40 Driver=option
    I:  If#=0x3 Alt= 0 #EPs= 1 Cls=ff(vend.) Sub=ff Prot=ff Driver=(none)
    I:  If#=0x4 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=ff Prot=30 Driver=option
    
    if0/1: MBIM, if2:Diag, if3:GNSS, if4: Modem
    
    Signed-off-by: Slark Xiao <slark_xiao@163.com>
    Link: https://lore.kernel.org/r/20210917110106.9852-1-slark_xiao@163.com
    [ johan: use USB_DEVICE_INTERFACE_CLASS(), amend comment ]
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b2cf0faffce9f077ac49234a61c49db41cf0f7b
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Fri Sep 17 11:18:48 2021 +0200

    USB: serial: option: remove duplicate USB device ID
    
    commit 1ca200a8c6f079950a04ea3c3380fe8cf78e95a2 upstream.
    
    The device ZTE 0x0094 is already on the list.
    
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Fixes: b9e44fe5ecda ("USB: option: cleanup zte 3g-dongle's pid in option.c")
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59564b0183cb9bde1f17e598b180f9288f873fec
Author: Carlo Lobrano <c.lobrano@gmail.com>
Date:   Fri Sep 3 14:39:13 2021 +0200

    USB: serial: option: add Telit LN920 compositions
    
    commit 7bb057134d609b9c038a00b6876cf0d37d0118ce upstream.
    
    This patch adds the following Telit LN920 compositions:
    
    0x1060: tty, adb, rmnet, tty, tty, tty, tty
    0x1061: tty, adb, mbim, tty, tty, tty, tty
    0x1062: rndis, tty, adb, tty, tty, tty, tty
    0x1063: tty, adb, ecm, tty, tty, tty, tty
    
    Signed-off-by: Carlo Lobrano <c.lobrano@gmail.com>
    Link: https://lore.kernel.org/r/20210903123913.1086513-1-c.lobrano@gmail.com
    Reviewed-by: Daniele Palmas <dnlplm@gmail.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5cc674a3f18e6430c98693342374399049dde522
Author: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
Date:   Fri Sep 17 11:18:47 2021 +0200

    USB: serial: mos7840: remove duplicated 0xac24 device ID
    
    commit 211f323768a25b30c106fd38f15a0f62c7c2b5f4 upstream.
    
    0xac24 device ID is already defined and used via
    BANDB_DEVICE_ID_USO9ML2_4.  Remove the duplicate from the list.
    
    Fixes: 27f1281d5f72 ("USB: serial: Extra device/vendor ID for mos7840 driver")
    Signed-off-by: Krzysztof Kozlowski <krzysztof.kozlowski@canonical.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 20c9fdde30fbe797aec0e0a04fb77013fe473886
Author: Kishon Vijay Abraham I <kishon@ti.com>
Date:   Thu Sep 9 12:11:58 2021 +0530

    usb: core: hcd: Add support for deferring roothub registration
    
    commit 58877b0824da15698bd85a0a9dbfa8c354e6ecb7 upstream.
    
    It has been observed with certain PCIe USB cards (like Inateck connected
    to AM64 EVM or J7200 EVM) that as soon as the primary roothub is
    registered, port status change is handled even before xHC is running
    leading to cold plug USB devices not detected. For such cases, registering
    both the root hubs along with the second HCD is required. Add support for
    deferring roothub registration in usb_add_hcd(), so that both primary and
    secondary roothubs are registered along with the second HCD.
    
    CC: stable@vger.kernel.org # 5.4+
    Suggested-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Tested-by: Chris Chiu <chris.chiu@canonical.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Link: https://lore.kernel.org/r/20210909064200.16216-2-kishon@ti.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6c7d3c2d127db0cc8d09b6272128ecc83ceb7fd
Author: Julian Sikorski <belegdol@gmail.com>
Date:   Mon Sep 13 20:14:55 2021 +0200

    Re-enable UAS for LaCie Rugged USB3-FW with fk quirk
    
    commit ce1c42b4dacfe7d71c852d8bf3371067ccba865c upstream.
    
    Further testing has revealed that LaCie Rugged USB3-FW does work with
    uas as long as US_FL_NO_REPORT_OPCODES and US_FL_NO_SAME are enabled.
    
    Link: https://lore.kernel.org/linux-usb/2167ea48-e273-a336-a4e0-10a4e883e75e@redhat.com/
    Cc: stable <stable@vger.kernel.org>
    Suggested-by: Hans de Goede <hdegoede@redhat.com>
    Reviewed-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Julian Sikorski <belegdol+github@gmail.com>
    Link: https://lore.kernel.org/r/20210913181454.7365-1-belegdol+github@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4dc56951a8d9d61d364d346c61a5f1d70b4f5e14
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Sep 6 14:45:38 2021 +0200

    staging: greybus: uart: fix tty use after free
    
    commit 92dc0b1f46e12cfabd28d709bb34f7a39431b44f upstream.
    
    User space can hold a tty open indefinitely and tty drivers must not
    release the underlying structures until the last user is gone.
    
    Switch to using the tty-port reference counter to manage the life time
    of the greybus tty state to avoid use after free after a disconnect.
    
    Fixes: a18e15175708 ("greybus: more uart work")
    Cc: stable@vger.kernel.org      # 4.9
    Reviewed-by: Alex Elder <elder@linaro.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210906124538.22358-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa2c274c279ff365a06a4cba263f04965895166e
Author: Todd Kjos <tkjos@google.com>
Date:   Mon Aug 30 12:51:46 2021 -0700

    binder: make sure fd closes complete
    
    commit 5fdb55c1ac9585eb23bb2541d5819224429e103d upstream.
    
    During BC_FREE_BUFFER processing, the BINDER_TYPE_FDA object
    cleanup may close 1 or more fds. The close operations are
    completed using the task work mechanism -- which means the thread
    needs to return to userspace or the file object may never be
    dereferenced -- which can lead to hung processes.
    
    Force the binder thread back to userspace if an fd is closed during
    BC_FREE_BUFFER handling.
    
    Fixes: 80cd795630d6 ("binder: fix use-after-free due to ksys_close() during fdget()")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Martijn Coenen <maco@android.com>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Todd Kjos <tkjos@google.com>
    Link: https://lore.kernel.org/r/20210830195146.587206-1-tkjos@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93fa08e9a32f46c34334cfad77baedcc843f65ab
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Sep 7 10:23:18 2021 +0200

    USB: cdc-acm: fix minor-number release
    
    commit 91fac0741d4817945c6ee0a17591421e7f5ecb86 upstream.
    
    If the driver runs out of minor numbers it would release minor 0 and
    allow another device to claim the minor while still in use.
    
    Fortunately, registering the tty class device of the second device would
    fail (with a stack dump) due to the sysfs name collision so no memory is
    leaked.
    
    Fixes: cae2bc768d17 ("usb: cdc-acm: Decrement tty port's refcount if probe() fail")
    Cc: stable@vger.kernel.org      # 4.19
    Cc: Jaejoong Kim <climbbb.kim@gmail.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Link: https://lore.kernel.org/r/20210907082318.7757-1-johan@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0dc1cfa7b9070081f942edb1beffb1e8beedc8a4
Author: Uwe Brandt <uwe.brandt@gmail.com>
Date:   Tue Sep 21 19:54:46 2021 +0200

    USB: serial: cp210x: add ID for GW Instek GDM-834x Digital Multimeter
    
    commit 3bd18ba7d859eb1fbef3beb1e80c24f6f7d7596c upstream.
    
    Add the USB serial device ID for the GW Instek GDM-834x Digital Multimeter.
    
    Signed-off-by: Uwe Brandt <uwe.brandt@gmail.com>
    Link: https://lore.kernel.org/r/YUxFl3YUCPGJZd8Y@hovoldconsulting.com
    Cc: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85d3493085abfd364d7f324bb3c9694a576597f4
Author: Ondrej Zary <linux@zary.sk>
Date:   Mon Sep 13 23:01:06 2021 +0200

    usb-storage: Add quirk for ScanLogic SL11R-IDE older than 2.6c
    
    commit b55d37ef6b7db3eda9b4495a8d9b0a944ee8c67d upstream.
    
    ScanLogic SL11R-IDE with firmware older than 2.6c (the latest one) has
    broken tag handling, preventing the device from working at all:
    usb 1-1: new full-speed USB device number 2 using uhci_hcd
    usb 1-1: New USB device found, idVendor=04ce, idProduct=0002, bcdDevice= 2.60
    usb 1-1: New USB device strings: Mfr=1, Product=1, SerialNumber=0
    usb 1-1: Product: USB Device
    usb 1-1: Manufacturer: USB Device
    usb-storage 1-1:1.0: USB Mass Storage device detected
    scsi host2: usb-storage 1-1:1.0
    usbcore: registered new interface driver usb-storage
    usb 1-1: reset full-speed USB device number 2 using uhci_hcd
    usb 1-1: reset full-speed USB device number 2 using uhci_hcd
    usb 1-1: reset full-speed USB device number 2 using uhci_hcd
    usb 1-1: reset full-speed USB device number 2 using uhci_hcd
    
    Add US_FL_BULK_IGNORE_TAG to fix it. Also update my e-mail address.
    
    2.6c is the only firmware that claims Linux compatibility.
    The firmware can be upgraded using ezotgdbg utility:
    https://github.com/asciilifeform/ezotgdbg
    
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Ondrej Zary <linux@zary.sk>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210913210106.12717-1-linux@zary.sk
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d4e7647695c9b8cd7e75a208f0fd170bc15c50f1
Author: Jan Beulich <jbeulich@suse.com>
Date:   Mon Sep 20 18:15:11 2021 +0200

    xen/x86: fix PV trap handling on secondary processors
    
    commit 0594c58161b6e0f3da8efa9c6e3d4ba52b652717 upstream.
    
    The initial observation was that in PV mode under Xen 32-bit user space
    didn't work anymore. Attempts of system calls ended in #GP(0x402). All
    of the sudden the vector 0x80 handler was not in place anymore. As it
    turns out up to 5.13 redundant initialization did occur: Once from
    cpu_initialize_context() (through its VCPUOP_initialise hypercall) and a
    2nd time while each CPU was brought fully up. This 2nd initialization is
    now gone, uncovering that the 1st one was flawed: Unlike for the
    set_trap_table hypercall, a full virtual IDT needs to be specified here;
    the "vector" fields of the individual entries are of no interest. With
    many (kernel) IDT entries still(?) (i.e. at that point at least) empty,
    the syscall vector 0x80 ended up in slot 0x20 of the virtual IDT, thus
    becoming the domain's handler for vector 0x20.
    
    Make xen_convert_trap_info() fit for either purpose, leveraging the fact
    that on the xen_copy_trap_info() path the table starts out zero-filled.
    This includes moving out the writing of the sentinel, which would also
    have lead to a buffer overrun in the xen_copy_trap_info() case if all
    (kernel) IDT entries were populated. Convert the writing of the sentinel
    to clearing of the entire table entry rather than just the address
    field.
    
    (I didn't bother trying to identify the commit which uncovered the issue
    in 5.14; the commit named below is the one which actually introduced the
    bad code.)
    
    Fixes: f87e4cac4f4e ("xen: SMP guest support")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Link: https://lore.kernel.org/r/7a266932-092e-b68f-f2bb-1473b61adc6e@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b06b0f17f359f9dd99ad4af1282e90b0d4bdff3
Author: Steve French <stfrench@microsoft.com>
Date:   Thu Sep 23 19:18:37 2021 -0500

    cifs: fix incorrect check for null pointer in header_assemble
    
    commit 9ed38fd4a15417cac83967360cf20b853bfab9b6 upstream.
    
    Although very unlikely that the tlink pointer would be null in this case,
    get_next_mid function can in theory return null (but not an error)
    so need to check for null (not for IS_ERR, which can not be returned
    here).
    
    Address warning:
    
            fs/smbfs_client/connect.c:2392 cifs_match_super()
            warn: 'tlink' isn't an ERR_PTR
    
    Pointed out by Dan Carpenter via smatch code analysis tool
    
    CC: stable@vger.kernel.org
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Ronnie Sahlberg <lsahlber@redhat.com>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1f6efa27b242fa80b842be6568b5e2c7ee4a43a
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Sep 16 16:57:37 2021 +0300

    usb: musb: tusb6010: uninitialized data in tusb_fifo_write_unaligned()
    
    commit 517c7bf99bad3d6b9360558414aae634b7472d80 upstream.
    
    This is writing to the first 1 - 3 bytes of "val" and then writing all
    four bytes to musb_writel().  The last byte is always going to be
    garbage.  Zero out the last bytes instead.
    
    Fixes: 550a7375fe72 ("USB: Add MUSB and TUSB support")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20210916135737.GI25094@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8c806065160885bfaa64b2d35aa9964457d43a6
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Sat Sep 11 22:58:30 2021 +0400

    usb: dwc2: gadget: Fix ISOC transfer complete handling for DDMA
    
    commit dbe2518b2d8eabffa74dbf7d9fdd7dacddab7fc0 upstream.
    
    When last descriptor in a descriptor list completed with XferComplete
    interrupt, core switching to handle next descriptor and assert BNA
    interrupt. Both these interrupts are set while dwc2_hsotg_epint()
    handler called. Each interrupt should be handled separately: first
    XferComplete interrupt then BNA interrupt, otherwise last completed
    transfer will not be giveback to function driver as completed
    request.
    
    Fixes: 729cac693eec ("usb: dwc2: Change ISOC DDMA flow")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Link: https://lore.kernel.org/r/a36981accc26cd674c5d8f8da6164344b94ec1fe.1631386531.git.Minas.Harutyunyan@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ff275c870e1b8365b0c1844b0b9da37c79cb9789
Author: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
Date:   Thu Sep 9 14:45:15 2021 +0400

    usb: dwc2: gadget: Fix ISOC flow for BDMA and Slave
    
    commit 91bb163e1e4f88092f50dfaa5a816b658753e4b2 upstream.
    
    According USB spec each ISOC transaction should be performed in a
    designated for that transaction interval. On bus errors or delays
    in operating system scheduling of client software can result in no
    packet being transferred for a (micro)frame. An error indication
    should be returned as status to the client software in such a case.
    
    Current implementation in case of missed/dropped interval send same
    data in next possible interval instead of reporting missed isoc.
    
    This fix complete requests with -ENODATA if interval elapsed.
    
    HSOTG core in BDMA and Slave modes haven't HW support for
    (micro)frames tracking, this is why SW should care about tracking
    of (micro)frames. Because of that method and consider operating
    system scheduling delays, added few additional checking's of elapsed
    target (micro)frame:
    1. Immediately before enabling EP to start transfer.
    2. With any transfer completion interrupt.
    3. With incomplete isoc in/out interrupt.
    4. With EP disabled interrupt because of incomplete transfer.
    5. With OUT token received while EP disabled interrupt (for OUT
    transfers).
    6. With NAK replied to IN token interrupt (for IN transfers).
    
    As part of ISOC flow, additionally fixed 'current' and 'target' frame
    calculation functions. In HS mode SOF limits provided by DSTS register
    is 0x3fff, but in non HS mode this limit is 0x7ff.
    
    Tested by internal tool which also using for dwc3 testing.
    
    Signed-off-by: Minas Harutyunyan <Minas.Harutyunyan@synopsys.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/95d1423adf4b0f68187c9894820c4b7e964a3f7f.1631175721.git.Minas.Harutyunyan@synopsys.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f013a5001b4a01d788ce3714de8189d615b41b00
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Sep 6 12:42:21 2021 +0300

    usb: gadget: r8a66597: fix a loop in set_feature()
    
    commit 17956b53ebff6a490baf580a836cbd3eae94892b upstream.
    
    This loop is supposed to loop until if reads something other than
    CS_IDST or until it times out after 30,000 attempts.  But because of
    the || vs && bug, it will never time out and instead it will loop a
    minimum of 30,000 times.
    
    This bug is quite old but the code is only used in USB_DEVICE_TEST_MODE
    so it probably doesn't affect regular usage.
    
    Fixes: 96fe53ef5498 ("usb: gadget: r8a66597-udc: add support for TEST_MODE")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Acked-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Link: https://lore.kernel.org/r/20210906094221.GA10957@kili
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa40438c7174cba9ceccd5b5e0bed1f5d0f90465
Author: Wengang Wang <wen.gang.wang@oracle.com>
Date:   Fri Sep 24 15:43:35 2021 -0700

    ocfs2: drop acl cache for directories too
    
    commit 9c0f0a03e386f4e1df33db676401547e1b7800c6 upstream.
    
    ocfs2_data_convert_worker() is currently dropping any cached acl info
    for FILE before down-converting meta lock.  It should also drop for
    DIRECTORY.  Otherwise the second acl lookup returns the cached one (from
    VFS layer) which could be already stale.
    
    The problem we are seeing is that the acl changes on one node doesn't
    get refreshed on other nodes in the following case:
    
      Node 1                    Node 2
      --------------            ----------------
      getfacl dir1
    
                                getfacl dir1    <-- this is OK
    
      setfacl -m u:user1:rwX dir1
      getfacl dir1   <-- see the change for user1
    
                                getfacl dir1    <-- can't see change for user1
    
    Link: https://lkml.kernel.org/r/20210903012631.6099-1-wen.gang.wang@oracle.com
    Signed-off-by: Wengang Wang <wen.gang.wang@oracle.com>
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Cc: Mark Fasheh <mark@fasheh.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Cc: Changwei Ge <gechangwei@live.cn>
    Cc: Gang He <ghe@suse.com>
    Cc: Jun Piao <piaojun@huawei.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
