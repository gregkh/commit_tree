commit 9a9de33a9dfaaf6628d63c56d58ea5cbfe707739
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Jul 31 07:27:12 2019 +0200

    Linux 4.19.63

commit 408af82309a73e6b47c9227756fef9a0d4400708
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jul 11 09:54:40 2019 -0700

    access: avoid the RCU grace period for the temporary subjective credentials
    
    commit d7852fbd0f0423937fa287a598bfde188bb68c22 upstream.
    
    It turns out that 'access()' (and 'faccessat()') can cause a lot of RCU
    work because it installs a temporary credential that gets allocated and
    freed for each system call.
    
    The allocation and freeing overhead is mostly benign, but because
    credentials can be accessed under the RCU read lock, the freeing
    involves a RCU grace period.
    
    Which is not a huge deal normally, but if you have a lot of access()
    calls, this causes a fair amount of seconday damage: instead of having a
    nice alloc/free patterns that hits in hot per-CPU slab caches, you have
    all those delayed free's, and on big machines with hundreds of cores,
    the RCU overhead can end up being enormous.
    
    But it turns out that all of this is entirely unnecessary.  Exactly
    because access() only installs the credential as the thread-local
    subjective credential, the temporary cred pointer doesn't actually need
    to be RCU free'd at all.  Once we're done using it, we can just free it
    synchronously and avoid all the RCU overhead.
    
    So add a 'non_rcu' flag to 'struct cred', which can be set by users that
    know they only use it in non-RCU context (there are other potential
    users for this).  We can make it a union with the rcu freeing list head
    that we need for the RCU case, so this doesn't need any extra storage.
    
    Note that this also makes 'get_current_cred()' clear the new non_rcu
    flag, in case we have filesystems that take a long-term reference to the
    cred and then expect the RCU delayed freeing afterwards.  It's not
    entirely clear that this is required, but it makes for clear semantics:
    the subjective cred remains non-RCU as long as you only access it
    synchronously using the thread-local accessors, but you _can_ use it as
    a generic cred if you want to.
    
    It is possible that we should just remove the whole RCU markings for
    ->cred entirely.  Only ->real_cred is really supposed to be accessed
    through RCU, and the long-term cred copies that nfs uses might want to
    explicitly re-enable RCU freeing if required, rather than have
    get_current_cred() do it implicitly.
    
    But this is a "minimal semantic changes" change for the immediate
    problem.
    
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Paul E. McKenney <paulmck@linux.ibm.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Jan Glauber <jglauber@marvell.com>
    Cc: Jiri Kosina <jikos@kernel.org>
    Cc: Jayachandran Chandrasekharan Nair <jnair@marvell.com>
    Cc: Greg KH <greg@kroah.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: David Howells <dhowells@redhat.com>
    Cc: Miklos Szeredi <miklos@szeredi.hu>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a547d24ec8a488a7f2f4b85f1f1b82c015b7ac8
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Jul 17 18:08:15 2019 -0700

    libnvdimm/bus: Stop holding nvdimm_bus_list_mutex over __nd_ioctl()
    
    commit b70d31d054ee3a6fc1034b9d7fc0ae1e481aa018 upstream.
    
    In preparation for fixing a deadlock between wait_for_bus_probe_idle()
    and the nvdimm_bus_list_mutex arrange for __nd_ioctl() without
    nvdimm_bus_list_mutex held. This also unifies the 'dimm' and 'bus' level
    ioctls into a common nd_ioctl() preamble implementation.
    
    Marked for -stable as it is a pre-requisite for a follow-on fix.
    
    Cc: <stable@vger.kernel.org>
    Fixes: bf9bccc14c05 ("libnvdimm: pmem label sets and namespace instantiation")
    Cc: Vishal Verma <vishal.l.verma@intel.com>
    Tested-by: Jane Chu <jane.chu@oracle.com>
    Link: https://lore.kernel.org/r/156341209518.292348.7183897251740665198.stgit@dwillia2-desk3.amr.corp.intel.com
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b993a66d8ddc1c26da0d9aa3471789cc170b28ee
Author: Michael Neuling <mikey@neuling.org>
Date:   Fri Jul 19 15:05:02 2019 +1000

    powerpc/tm: Fix oops on sigreturn on systems without TM
    
    commit f16d80b75a096c52354c6e0a574993f3b0dfbdfe upstream.
    
    On systems like P9 powernv where we have no TM (or P8 booted with
    ppc_tm=off), userspace can construct a signal context which still has
    the MSR TS bits set. The kernel tries to restore this context which
    results in the following crash:
    
      Unexpected TM Bad Thing exception at c0000000000022fc (msr 0x8000000102a03031) tm_scratch=800000020280f033
      Oops: Unrecoverable exception, sig: 6 [#1]
      LE PAGE_SIZE=64K MMU=Hash SMP NR_CPUS=2048 NUMA pSeries
      Modules linked in:
      CPU: 0 PID: 1636 Comm: sigfuz Not tainted 5.2.0-11043-g0a8ad0ffa4 #69
      NIP:  c0000000000022fc LR: 00007fffb2d67e48 CTR: 0000000000000000
      REGS: c00000003fffbd70 TRAP: 0700   Not tainted  (5.2.0-11045-g7142b497d8)
      MSR:  8000000102a03031 <SF,VEC,VSX,FP,ME,IR,DR,LE,TM[E]>  CR: 42004242  XER: 00000000
      CFAR: c0000000000022e0 IRQMASK: 0
      GPR00: 0000000000000072 00007fffb2b6e560 00007fffb2d87f00 0000000000000669
      GPR04: 00007fffb2b6e728 0000000000000000 0000000000000000 00007fffb2b6f2a8
      GPR08: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
      GPR12: 0000000000000000 00007fffb2b76900 0000000000000000 0000000000000000
      GPR16: 00007fffb2370000 00007fffb2d84390 00007fffea3a15ac 000001000a250420
      GPR20: 00007fffb2b6f260 0000000010001770 0000000000000000 0000000000000000
      GPR24: 00007fffb2d843a0 00007fffea3a14a0 0000000000010000 0000000000800000
      GPR28: 00007fffea3a14d8 00000000003d0f00 0000000000000000 00007fffb2b6e728
      NIP [c0000000000022fc] rfi_flush_fallback+0x7c/0x80
      LR [00007fffb2d67e48] 0x7fffb2d67e48
      Call Trace:
      Instruction dump:
      e96a0220 e96a02a8 e96a0330 e96a03b8 394a0400 4200ffdc 7d2903a6 e92d0c00
      e94d0c08 e96d0c10 e82d0c18 7db242a6 <4c000024> 7db243a6 7db142a6 f82d0c18
    
    The problem is the signal code assumes TM is enabled when
    CONFIG_PPC_TRANSACTIONAL_MEM is enabled. This may not be the case as
    with P9 powernv or if `ppc_tm=off` is used on P8.
    
    This means any local user can crash the system.
    
    Fix the problem by returning a bad stack frame to the user if they try
    to set the MSR TS bits with sigreturn() on systems where TM is not
    supported.
    
    Found with sigfuz kernel selftest on P9.
    
    This fixes CVE-2019-13648.
    
    Fixes: 2b0a576d15e0 ("powerpc: Add new transactional memory state to the signal context")
    Cc: stable@vger.kernel.org # v3.9
    Reported-by: Praveen Pandey <Praveen.Pandey@in.ibm.com>
    Signed-off-by: Michael Neuling <mikey@neuling.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190719050502.405-1-mikey@neuling.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9310c56fcfbdbc6cd22fd6270a5ee49359ae6ae
Author: Gautham R. Shenoy <ego@linux.vnet.ibm.com>
Date:   Wed Jul 17 16:05:24 2019 +0530

    powerpc/xive: Fix loop exit-condition in xive_find_target_in_mask()
    
    commit 4d202c8c8ed3822327285747db1765967110b274 upstream.
    
    xive_find_target_in_mask() has the following for(;;) loop which has a
    bug when @first == cpumask_first(@mask) and condition 1 fails to hold
    for every CPU in @mask. In this case we loop forever in the for-loop.
    
      first = cpu;
      for (;;) {
              if (cpu_online(cpu) && xive_try_pick_target(cpu)) // condition 1
                      return cpu;
              cpu = cpumask_next(cpu, mask);
              if (cpu == first) // condition 2
                      break;
    
              if (cpu >= nr_cpu_ids) // condition 3
                      cpu = cpumask_first(mask);
      }
    
    This is because, when @first == cpumask_first(@mask), we never hit the
    condition 2 (cpu == first) since prior to this check, we would have
    executed "cpu = cpumask_next(cpu, mask)" which will set the value of
    @cpu to a value greater than @first or to nr_cpus_ids. When this is
    coupled with the fact that condition 1 is not met, we will never exit
    this loop.
    
    This was discovered by the hard-lockup detector while running LTP test
    concurrently with SMT switch tests.
    
     watchdog: CPU 12 detected hard LOCKUP on other CPUs 68
     watchdog: CPU 12 TB:85587019220796, last SMP heartbeat TB:85578827223399 (15999ms ago)
     watchdog: CPU 68 Hard LOCKUP
     watchdog: CPU 68 TB:85587019361273, last heartbeat TB:85576815065016 (19930ms ago)
     CPU: 68 PID: 45050 Comm: hxediag Kdump: loaded Not tainted 4.18.0-100.el8.ppc64le #1
     NIP:  c0000000006f5578 LR: c000000000cba9ec CTR: 0000000000000000
     REGS: c000201fff3c7d80 TRAP: 0100   Not tainted  (4.18.0-100.el8.ppc64le)
     MSR:  9000000002883033 <SF,HV,VEC,VSX,FP,ME,IR,DR,RI,LE>  CR: 24028424  XER: 00000000
     CFAR: c0000000006f558c IRQMASK: 1
     GPR00: c0000000000afc58 c000201c01c43400 c0000000015ce500 c000201cae26ec18
     GPR04: 0000000000000800 0000000000000540 0000000000000800 00000000000000f8
     GPR08: 0000000000000020 00000000000000a8 0000000080000000 c00800001a1beed8
     GPR12: c0000000000b1410 c000201fff7f4c00 0000000000000000 0000000000000000
     GPR16: 0000000000000000 0000000000000000 0000000000000540 0000000000000001
     GPR20: 0000000000000048 0000000010110000 c00800001a1e3780 c000201cae26ed18
     GPR24: 0000000000000000 c000201cae26ed8c 0000000000000001 c000000001116bc0
     GPR28: c000000001601ee8 c000000001602494 c000201cae26ec18 000000000000001f
     NIP [c0000000006f5578] find_next_bit+0x38/0x90
     LR [c000000000cba9ec] cpumask_next+0x2c/0x50
     Call Trace:
     [c000201c01c43400] [c000201cae26ec18] 0xc000201cae26ec18 (unreliable)
     [c000201c01c43420] [c0000000000afc58] xive_find_target_in_mask+0x1b8/0x240
     [c000201c01c43470] [c0000000000b0228] xive_pick_irq_target.isra.3+0x168/0x1f0
     [c000201c01c435c0] [c0000000000b1470] xive_irq_startup+0x60/0x260
     [c000201c01c43640] [c0000000001d8328] __irq_startup+0x58/0xf0
     [c000201c01c43670] [c0000000001d844c] irq_startup+0x8c/0x1a0
     [c000201c01c436b0] [c0000000001d57b0] __setup_irq+0x9f0/0xa90
     [c000201c01c43760] [c0000000001d5aa0] request_threaded_irq+0x140/0x220
     [c000201c01c437d0] [c00800001a17b3d4] bnx2x_nic_load+0x188c/0x3040 [bnx2x]
     [c000201c01c43950] [c00800001a187c44] bnx2x_self_test+0x1fc/0x1f70 [bnx2x]
     [c000201c01c43a90] [c000000000adc748] dev_ethtool+0x11d8/0x2cb0
     [c000201c01c43b60] [c000000000b0b61c] dev_ioctl+0x5ac/0xa50
     [c000201c01c43bf0] [c000000000a8d4ec] sock_do_ioctl+0xbc/0x1b0
     [c000201c01c43c60] [c000000000a8dfb8] sock_ioctl+0x258/0x4f0
     [c000201c01c43d20] [c0000000004c9704] do_vfs_ioctl+0xd4/0xa70
     [c000201c01c43de0] [c0000000004ca274] sys_ioctl+0xc4/0x160
     [c000201c01c43e30] [c00000000000b388] system_call+0x5c/0x70
     Instruction dump:
     78aad182 54a806be 3920ffff 78a50664 794a1f24 7d294036 7d43502a 7d295039
     4182001c 48000034 78a9d182 79291f24 <7d23482a> 2fa90000 409e0020 38a50040
    
    To fix this, move the check for condition 2 after the check for
    condition 3, so that we are able to break out of the loop soon after
    iterating through all the CPUs in the @mask in the problem case. Use
    do..while() to achieve this.
    
    Fixes: 243e25112d06 ("powerpc/xive: Native exploitation of the XIVE interrupt controller")
    Cc: stable@vger.kernel.org # v4.12+
    Reported-by: Indira P. Joga <indira.priya@in.ibm.com>
    Signed-off-by: Gautham R. Shenoy <ego@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/1563359724-13931-1-git-send-email-ego@linux.vnet.ibm.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c219444254cf72f53490ab3f07a2b164c621a8d4
Author: Hui Wang <hui.wang@canonical.com>
Date:   Thu Jul 25 14:57:37 2019 +0800

    ALSA: hda - Add a conexant codec entry to let mute led work
    
    commit 3f8809499bf02ef7874254c5e23fc764a47a21a0 upstream.
    
    This conexant codec isn't in the supported codec list yet, the hda
    generic driver can drive this codec well, but on a Lenovo machine
    with mute/mic-mute leds, we need to apply CXT_FIXUP_THINKPAD_ACPI
    to make the leds work. After adding this codec to the list, the
    driver patch_conexant.c will apply THINKPAD_ACPI to this machine.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 491483ed70f17a374943c825385c356264035f31
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Thu Jul 18 17:53:13 2019 +0800

    ALSA: line6: Fix wrong altsetting for LINE6_PODHD500_1
    
    commit 70256b42caaf3e13c2932c2be7903a73fbe8bb8b upstream.
    
    Commit 7b9584fa1c0b ("staging: line6: Move altsetting to properties")
    set a wrong altsetting for LINE6_PODHD500_1 during refactoring.
    
    Set the correct altsetting number to fix the issue.
    
    BugLink: https://bugs.launchpad.net/bugs/1790595
    Fixes: 7b9584fa1c0b ("staging: line6: Move altsetting to properties")
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 602744097b2ed21b133586d8bd937b2ce79c1949
Author: Ding Xiang <dingxiang@cmss.chinamobile.com>
Date:   Tue Jul 23 15:44:41 2019 +0800

    ALSA: ac97: Fix double free of ac97_codec_device
    
    commit 607975b30db41aad6edc846ed567191aa6b7d893 upstream.
    
    put_device will call ac97_codec_release to free
    ac97_codec_device and other resources, so remove the kfree
    and other redundant code.
    
    Fixes: 74426fbff66e ("ALSA: ac97: add an ac97 bus")
    Signed-off-by: Ding Xiang <dingxiang@cmss.chinamobile.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9845fb5a3f9069111244f6aa9438f1f5d7392df6
Author: Kefeng Wang <wangkefeng.wang@huawei.com>
Date:   Thu Jul 11 21:27:57 2019 +0800

    hpet: Fix division by zero in hpet_time_div()
    
    commit 0c7d37f4d9b8446956e97b7c5e61173cdb7c8522 upstream.
    
    The base value in do_div() called by hpet_time_div() is truncated from
    unsigned long to uint32_t, resulting in a divide-by-zero exception.
    
    UBSAN: Undefined behaviour in ../drivers/char/hpet.c:572:2
    division by zero
    CPU: 1 PID: 23682 Comm: syz-executor.3 Not tainted 4.4.184.x86_64+ #4
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04/01/2014
     0000000000000000 b573382df1853d00 ffff8800a3287b98 ffffffff81ad7561
     ffff8800a3287c00 ffffffff838b35b0 ffffffff838b3860 ffff8800a3287c20
     0000000000000000 ffff8800a3287bb0 ffffffff81b8f25e ffffffff838b35a0
    Call Trace:
     [<ffffffff81ad7561>] __dump_stack lib/dump_stack.c:15 [inline]
     [<ffffffff81ad7561>] dump_stack+0xc1/0x120 lib/dump_stack.c:51
     [<ffffffff81b8f25e>] ubsan_epilogue+0x12/0x8d lib/ubsan.c:166
     [<ffffffff81b900cb>] __ubsan_handle_divrem_overflow+0x282/0x2c8 lib/ubsan.c:262
     [<ffffffff823560dd>] hpet_time_div drivers/char/hpet.c:572 [inline]
     [<ffffffff823560dd>] hpet_ioctl_common drivers/char/hpet.c:663 [inline]
     [<ffffffff823560dd>] hpet_ioctl_common.cold+0xa8/0xad drivers/char/hpet.c:577
     [<ffffffff81e63d56>] hpet_ioctl+0xc6/0x180 drivers/char/hpet.c:676
     [<ffffffff81711590>] vfs_ioctl fs/ioctl.c:43 [inline]
     [<ffffffff81711590>] file_ioctl fs/ioctl.c:470 [inline]
     [<ffffffff81711590>] do_vfs_ioctl+0x6e0/0xf70 fs/ioctl.c:605
     [<ffffffff81711eb4>] SYSC_ioctl fs/ioctl.c:622 [inline]
     [<ffffffff81711eb4>] SyS_ioctl+0x94/0xc0 fs/ioctl.c:613
     [<ffffffff82846003>] tracesys_phase2+0x90/0x95
    
    The main C reproducer autogenerated by syzkaller,
    
      syscall(__NR_mmap, 0x20000000, 0x1000000, 3, 0x32, -1, 0);
      memcpy((void*)0x20000100, "/dev/hpet\000", 10);
      syscall(__NR_openat, 0xffffffffffffff9c, 0x20000100, 0, 0);
      syscall(__NR_ioctl, r[0], 0x40086806, 0x40000000000000);
    
    Fix it by using div64_ul().
    
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Signed-off-by: Zhang HongJun <zhanghongjun2@huawei.com>
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20190711132757.130092-1-wangkefeng.wang@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4c91583b39cd71906dd40570e3e6b75cbb35c1a
Author: Alexander Usyskin <alexander.usyskin@intel.com>
Date:   Fri Jul 12 12:58:14 2019 +0300

    mei: me: add mule creek canyon (EHL) device ids
    
    commit 1be8624a0cbef720e8da39a15971e01abffc865b upstream.
    
    Add Mule Creek Canyon (PCH) MEI device ids for Elkhart Lake (EHL) Platform.
    
    Signed-off-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190712095814.20746-1-tomas.winkler@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d0a6926e610e126f06fc43cea982aebc71d0223
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Mon Jul 8 15:13:56 2019 +0800

    fpga-manager: altera-ps-spi: Fix build error
    
    commit 3d139703d397f6281368047ba7ad1c8bf95aa8ab upstream.
    
    If BITREVERSE is m and FPGA_MGR_ALTERA_PS_SPI is y,
    build fails:
    
    drivers/fpga/altera-ps-spi.o: In function `altera_ps_write':
    altera-ps-spi.c:(.text+0x4ec): undefined reference to `byte_rev_table'
    
    Select BITREVERSE to fix this.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Fixes: fcfe18f885f6 ("fpga-manager: altera-ps-spi: use bitrev8x4")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Moritz Fischer <mdf@kernel.org>
    Link: https://lore.kernel.org/r/20190708071356.50928-1-yuehaibing@huawei.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e907b1314481c8586ff3793fd92c7dbd8aa841ae
Author: Hridya Valsaraju <hridya@google.com>
Date:   Mon Jul 15 12:18:04 2019 -0700

    binder: prevent transactions to context manager from its own process.
    
    commit 49ed96943a8e0c62cc5a9b0a6cfc88be87d1fcec upstream.
    
    Currently, a transaction to context manager from its own process
    is prevented by checking if its binder_proc struct is the same as
    that of the sender. However, this would not catch cases where the
    process opens the binder device again and uses the new fd to send
    a transaction to the context manager.
    
    Reported-by: syzbot+8b3c354d33c4ac78bfad@syzkaller.appspotmail.com
    Signed-off-by: Hridya Valsaraju <hridya@google.com>
    Acked-by: Todd Kjos <tkjos@google.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190715191804.112933-1-hridya@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7d20e3ba707211c9e571cf0a5fc5fc0442f74313
Author: Zhenzhong Duan <zhenzhong.duan@oracle.com>
Date:   Thu Jul 25 10:39:09 2019 +0800

    x86/speculation/mds: Apply more accurate check on hypervisor platform
    
    commit 517c3ba00916383af6411aec99442c307c23f684 upstream.
    
    X86_HYPER_NATIVE isn't accurate for checking if running on native platform,
    e.g. CONFIG_HYPERVISOR_GUEST isn't set or "nopv" is enabled.
    
    Checking the CPU feature bit X86_FEATURE_HYPERVISOR to determine if it's
    running on native platform is more accurate.
    
    This still doesn't cover the platforms on which X86_FEATURE_HYPERVISOR is
    unsupported, e.g. VMware, but there is nothing which can be done about this
    scenario.
    
    Fixes: 8a4b06d391b0 ("x86/speculation/mds: Add sysfs reporting for MDS")
    Signed-off-by: Zhenzhong Duan <zhenzhong.duan@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1564022349-17338-1-git-send-email-zhenzhong.duan@oracle.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e87e8b4dc0cfaffe3a1fa04b92a096244d227ef
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Jul 21 17:24:18 2019 +0200

    x86/sysfb_efi: Add quirks for some devices with swapped width and height
    
    commit d02f1aa39189e0619c3525d5cd03254e61bf606a upstream.
    
    Some Lenovo 2-in-1s with a detachable keyboard have a portrait screen but
    advertise a landscape resolution and pitch, resulting in a messed up
    display if the kernel tries to show anything on the efifb (because of the
    wrong pitch).
    
    Fix this by adding a new DMI match table for devices which need to have
    their width and height swapped.
    
    At first it was tried to use the existing table for overriding some of the
    efifb parameters, but some of the affected devices have variants with
    different LCD resolutions which will not work with hardcoded override
    values.
    
    Reference: https://bugzilla.redhat.com/show_bug.cgi?id=1730783
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190721152418.11644-1-hdegoede@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3dc9ea5464e77f0056df8d187d184629f87139f
Author: Qu Wenruo <wqu@suse.com>
Date:   Mon Jul 1 05:12:46 2019 +0000

    btrfs: inode: Don't compress if NODATASUM or NODATACOW set
    
    commit 42c16da6d684391db83788eb680accd84f6c2083 upstream.
    
    As btrfs(5) specified:
    
            Note
            If nodatacow or nodatasum are enabled, compression is disabled.
    
    If NODATASUM or NODATACOW set, we should not compress the extent.
    
    Normally NODATACOW is detected properly in run_delalloc_range() so
    compression won't happen for NODATACOW.
    
    However for NODATASUM we don't have any check, and it can cause
    compressed extent without csum pretty easily, just by:
      mkfs.btrfs -f $dev
      mount $dev $mnt -o nodatasum
      touch $mnt/foobar
      mount -o remount,datasum,compress $mnt
      xfs_io -f -c "pwrite 0 128K" $mnt/foobar
    
    And in fact, we have a bug report about corrupted compressed extent
    without proper data checksum so even RAID1 can't recover the corruption.
    (https://bugzilla.kernel.org/show_bug.cgi?id=199707)
    
    Running compression without proper checksum could cause more damage when
    corruption happens, as compressed data could make the whole extent
    unreadable, so there is no need to allow compression for
    NODATACSUM.
    
    The fix will refactor the inode compression check into two parts:
    
    - inode_can_compress()
      As the hard requirement, checked at btrfs_run_delalloc_range(), so no
      compression will happen for NODATASUM inode at all.
    
    - inode_need_compress()
      As the soft requirement, checked at btrfs_run_delalloc_range() and
      compress_file_range().
    
    Reported-by: James Harvey <jamespharvey20@gmail.com>
    CC: stable@vger.kernel.org # 4.4+
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f37bec82f41ef2ceec5a8f03722d1b53aa4dbeb
Author: Ryan Kennedy <ryan5544@gmail.com>
Date:   Thu Jul 4 11:35:28 2019 -0400

    usb: pci-quirks: Correct AMD PLL quirk detection
    
    commit f3dccdaade4118070a3a47bef6b18321431f9ac6 upstream.
    
    The AMD PLL USB quirk is incorrectly enabled on newer Ryzen
    chipsets. The logic in usb_amd_find_chipset_info currently checks
    for unaffected chipsets rather than affected ones. This broke
    once a new chipset was added in e788787ef. It makes more sense
    to reverse the logic so it won't need to be updated as new
    chipsets are added. Note that the core of the workaround in
    usb_amd_quirk_pll does correctly check the chipset.
    
    Signed-off-by: Ryan Kennedy <ryan5544@gmail.com>
    Fixes: e788787ef4f9 ("usb:xhci:Add quirk for Certain failing HP keyboard on reset after resume")
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Link: https://lore.kernel.org/r/20190704153529.9429-2-ryan5544@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 41d3dbb931c07fb7135e7a5a0b01b42c92b7a7df
Author: Phong Tran <tranmanphong@gmail.com>
Date:   Wed Jul 24 09:06:01 2019 +0700

    usb: wusbcore: fix unbalanced get/put cluster_id
    
    commit f90bf1ece48a736097ea224430578fe586a9544c upstream.
    
    syzboot reported that
    https://syzkaller.appspot.com/bug?extid=fd2bd7df88c606eea4ef
    
    There is not consitency parameter in cluste_id_get/put calling.
    In case of getting the id with result is failure, the wusbhc->cluster_id
    will not be updated and this can not be used for wusb_cluster_id_put().
    
    Tested report
    https://groups.google.com/d/msg/syzkaller-bugs/0znZopp3-9k/oxOrhLkLEgAJ
    
    Reproduce and gdb got the details:
    
    139             addr = wusb_cluster_id_get();
    (gdb) n
    140             if (addr == 0)
    (gdb) print addr
    $1 = 254 '\376'
    (gdb) n
    142             result = __hwahc_set_cluster_id(hwahc, addr);
    (gdb) print result
    $2 = -71
    (gdb) break wusb_cluster_id_put
    Breakpoint 3 at 0xffffffff836e3f20: file drivers/usb/wusbcore/wusbhc.c, line 384.
    (gdb) s
    Thread 2 hit Breakpoint 3, wusb_cluster_id_put (id=0 '\000') at drivers/usb/wusbcore/wusbhc.c:384
    384             id = 0xff - id;
    (gdb) n
    385             BUG_ON(id >= CLUSTER_IDS);
    (gdb) print id
    $3 = 255 '\377'
    
    Reported-by: syzbot+fd2bd7df88c606eea4ef@syzkaller.appspotmail.com
    Signed-off-by: Phong Tran <tranmanphong@gmail.com>
    Cc: stable <stable@vger.kernel.org>
    Link: https://lore.kernel.org/r/20190724020601.15257-1-tranmanphong@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 148959cc64e1ca3bf5091c6b79401fe1469e0cc6
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon Jul 15 11:27:49 2019 +0200

    locking/lockdep: Hide unused 'class' variable
    
    [ Upstream commit 68037aa78208f34bda4e5cd76c357f718b838cbb ]
    
    The usage is now hidden in an #ifdef, so we need to move
    the variable itself in there as well to avoid this warning:
    
      kernel/locking/lockdep_proc.c:203:21: error: unused variable 'class' [-Werror,-Wunused-variable]
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Bart Van Assche <bvanassche@acm.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Qian Cai <cai@lca.pw>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Waiman Long <longman@redhat.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Will Deacon <will@kernel.org>
    Cc: Yuyang Du <duyuyang@gmail.com>
    Cc: frederic@kernel.org
    Fixes: 68d41d8c94a3 ("locking/lockdep: Fix lock used or unused stats error")
    Link: https://lkml.kernel.org/r/20190715092809.736834-1-arnd@arndb.de
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b07687243d4a1eac564de3fca8cb0e5b1494c024
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Thu Jul 11 21:00:07 2019 -0700

    mm: use down_read_killable for locking mmap_sem in access_remote_vm
    
    [ Upstream commit 1e426fe28261b03f297992e89da3320b42816f4e ]
    
    This function is used by ptrace and proc files like /proc/pid/cmdline and
    /proc/pid/environ.
    
    Access_remote_vm never returns error codes, all errors are ignored and
    only size of successfully read data is returned.  So, if current task was
    killed we'll simply return 0 (bytes read).
    
    Mmap_sem could be locked for a long time or forever if something goes
    wrong.  Using a killable lock permits cleanup of stuck tasks and
    simplifies investigation.
    
    Link: http://lkml.kernel.org/r/156007494202.3335.16782303099589302087.stgit@buzz
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Reviewed-by: Michal Koutný <mkoutny@suse.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Cyrill Gorcunov <gorcunov@gmail.com>
    Cc: Kirill Tkhai <ktkhai@virtuozzo.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Roman Gushchin <guro@fb.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4acb04ef5e42300020feb466d784164c35181772
Author: Yuyang Du <duyuyang@gmail.com>
Date:   Tue Jul 9 18:15:22 2019 +0800

    locking/lockdep: Fix lock used or unused stats error
    
    [ Upstream commit 68d41d8c94a31dfb8233ab90b9baf41a2ed2da68 ]
    
    The stats variable nr_unused_locks is incremented every time a new lock
    class is register and decremented when the lock is first used in
    __lock_acquire(). And after all, it is shown and checked in lockdep_stats.
    
    However, under configurations that either CONFIG_TRACE_IRQFLAGS or
    CONFIG_PROVE_LOCKING is not defined:
    
    The commit:
    
      091806515124b20 ("locking/lockdep: Consolidate lock usage bit initialization")
    
    missed marking the LOCK_USED flag at IRQ usage initialization because
    as mark_usage() is not called. And the commit:
    
      886532aee3cd42d ("locking/lockdep: Move mark_lock() inside CONFIG_TRACE_IRQFLAGS && CONFIG_PROVE_LOCKING")
    
    further made mark_lock() not defined such that the LOCK_USED cannot be
    marked at all when the lock is first acquired.
    
    As a result, we fix this by not showing and checking the stats under such
    configurations for lockdep_stats.
    
    Reported-by: Qian Cai <cai@lca.pw>
    Signed-off-by: Yuyang Du <duyuyang@gmail.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: arnd@arndb.de
    Cc: frederic@kernel.org
    Link: https://lkml.kernel.org/r/20190709101522.9117-1-duyuyang@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af0883f9dcf6603ca8d1a59d4baf930b7f90eeae
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Thu Jul 11 20:59:50 2019 -0700

    proc: use down_read_killable mmap_sem for /proc/pid/maps
    
    [ Upstream commit 8a713e7df3352b8d9392476e9cf29e4e185dac32 ]
    
    Do not remain stuck forever if something goes wrong.  Using a killable
    lock permits cleanup of stuck tasks and simplifies investigation.
    
    This function is also used for /proc/pid/smaps.
    
    Link: http://lkml.kernel.org/r/156007493160.3335.14447544314127417266.stgit@buzz
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Reviewed-by: Roman Gushchin <guro@fb.com>
    Reviewed-by: Cyrill Gorcunov <gorcunov@gmail.com>
    Reviewed-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michal Koutný <mkoutny@suse.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0d72bb853afc1076201ec705ce15662bddaf96af
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Fri Jul 12 11:06:33 2019 +0200

    cxgb4: reduce kernel stack usage in cudbg_collect_mem_region()
    
    [ Upstream commit 752c2ea2d8e7c23b0f64e2e7d4337f3604d44c9f ]
    
    The cudbg_collect_mem_region() and cudbg_read_fw_mem() both use several
    hundred kilobytes of kernel stack space. One gets inlined into the other,
    which causes the stack usage to be combined beyond the warning limit
    when building with clang:
    
    drivers/net/ethernet/chelsio/cxgb4/cudbg_lib.c:1057:12: error: stack frame size of 1244 bytes in function 'cudbg_collect_mem_region' [-Werror,-Wframe-larger-than=]
    
    Restructuring cudbg_collect_mem_region() lets clang do the same
    optimization that gcc does and reuse the stack slots as it can
    see that the large variables are never used together.
    
    A better fix might be to avoid using cudbg_meminfo on the stack
    altogether, but that requires a larger rewrite.
    
    Fixes: a1c69520f785 ("cxgb4: collect MC memory dump")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6ecdcbcd309167884a5672e76d35bfb02595e046
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Thu Jul 11 21:00:03 2019 -0700

    proc: use down_read_killable mmap_sem for /proc/pid/map_files
    
    [ Upstream commit cd9e2bb8271c971d9f37c722be2616c7f8ba0664 ]
    
    Do not remain stuck forever if something goes wrong.  Using a killable
    lock permits cleanup of stuck tasks and simplifies investigation.
    
    It seems ->d_revalidate() could return any error (except ECHILD) to abort
    validation and pass error as result of lookup sequence.
    
    [akpm@linux-foundation.org: fix proc_map_files_lookup() return value, per Andrei]
    Link: http://lkml.kernel.org/r/156007493995.3335.9595044802115356911.stgit@buzz
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Reviewed-by: Roman Gushchin <guro@fb.com>
    Reviewed-by: Cyrill Gorcunov <gorcunov@gmail.com>
    Reviewed-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michal Koutný <mkoutny@suse.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3d617da8a9567da93dde8c5a5a998b6346e1d2a0
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Thu Jul 11 21:00:00 2019 -0700

    proc: use down_read_killable mmap_sem for /proc/pid/clear_refs
    
    [ Upstream commit c46038017fbdcac627b670c9d4176f1d0c2f5fa3 ]
    
    Do not remain stuck forever if something goes wrong.  Using a killable
    lock permits cleanup of stuck tasks and simplifies investigation.
    
    Replace the only unkillable mmap_sem lock in clear_refs_write().
    
    Link: http://lkml.kernel.org/r/156007493826.3335.5424884725467456239.stgit@buzz
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Reviewed-by: Roman Gushchin <guro@fb.com>
    Reviewed-by: Cyrill Gorcunov <gorcunov@gmail.com>
    Reviewed-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michal Koutný <mkoutny@suse.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 42beb7b3d446f035d93c818dbc81c467d25a45c8
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Thu Jul 11 20:59:56 2019 -0700

    proc: use down_read_killable mmap_sem for /proc/pid/pagemap
    
    [ Upstream commit ad80b932c57d85fd6377f97f359b025baf179a87 ]
    
    Do not remain stuck forever if something goes wrong.  Using a killable
    lock permits cleanup of stuck tasks and simplifies investigation.
    
    Link: http://lkml.kernel.org/r/156007493638.3335.4872164955523928492.stgit@buzz
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Reviewed-by: Roman Gushchin <guro@fb.com>
    Reviewed-by: Cyrill Gorcunov <gorcunov@gmail.com>
    Reviewed-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michal Koutný <mkoutny@suse.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1b3042d0d32b850910ae4f0d73cb8bbc6b0e658f
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Thu Jul 11 20:59:53 2019 -0700

    proc: use down_read_killable mmap_sem for /proc/pid/smaps_rollup
    
    [ Upstream commit a26a97815548574213fd37f29b4b78ccc6d9ed20 ]
    
    Do not remain stuck forever if something goes wrong.  Using a killable
    lock permits cleanup of stuck tasks and simplifies investigation.
    
    Link: http://lkml.kernel.org/r/156007493429.3335.14666825072272692455.stgit@buzz
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Reviewed-by: Roman Gushchin <guro@fb.com>
    Reviewed-by: Cyrill Gorcunov <gorcunov@gmail.com>
    Reviewed-by: Kirill Tkhai <ktkhai@virtuozzo.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Alexey Dobriyan <adobriyan@gmail.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Michal Koutný <mkoutny@suse.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a8c568fc48320cea9bf3cb346b3007371ca5e49c
Author: Jean-Philippe Brucker <jean-philippe@linaro.org>
Date:   Thu Jul 11 20:58:50 2019 -0700

    mm/mmu_notifier: use hlist_add_head_rcu()
    
    [ Upstream commit 543bdb2d825fe2400d6e951f1786d92139a16931 ]
    
    Make mmu_notifier_register() safer by issuing a memory barrier before
    registering a new notifier.  This fixes a theoretical bug on weakly
    ordered CPUs.  For example, take this simplified use of notifiers by a
    driver:
    
            my_struct->mn.ops = &my_ops; /* (1) */
            mmu_notifier_register(&my_struct->mn, mm)
                    ...
                    hlist_add_head(&mn->hlist, &mm->mmu_notifiers); /* (2) */
                    ...
    
    Once mmu_notifier_register() releases the mm locks, another thread can
    invalidate a range:
    
            mmu_notifier_invalidate_range()
                    ...
                    hlist_for_each_entry_rcu(mn, &mm->mmu_notifiers, hlist) {
                            if (mn->ops->invalidate_range)
    
    The read side relies on the data dependency between mn and ops to ensure
    that the pointer is properly initialized.  But the write side doesn't have
    any dependency between (1) and (2), so they could be reordered and the
    readers could dereference an invalid mn->ops.  mmu_notifier_register()
    does take all the mm locks before adding to the hlist, but those have
    acquire semantics which isn't sufficient.
    
    By calling hlist_add_head_rcu() instead of hlist_add_head() we update the
    hlist using a store-release, ensuring that readers see prior
    initialization of my_struct.  This situation is better illustated by
    litmus test MP+onceassign+derefonce.
    
    Link: http://lkml.kernel.org/r/20190502133532.24981-1-jean-philippe.brucker@arm.com
    Fixes: cddb8a5c14aa ("mmu-notifiers: core")
    Signed-off-by: Jean-Philippe Brucker <jean-philippe.brucker@arm.com>
    Cc: Jérôme Glisse <jglisse@redhat.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3062448e3ee29aa18015854b7f599ae0fa33fff2
Author: Shakeel Butt <shakeelb@google.com>
Date:   Thu Jul 11 20:55:52 2019 -0700

    memcg, fsnotify: no oom-kill for remote memcg charging
    
    [ Upstream commit ec165450968b26298bd1c373de37b0ab6d826b33 ]
    
    Commit d46eb14b735b ("fs: fsnotify: account fsnotify metadata to
    kmemcg") added remote memcg charging for fanotify and inotify event
    objects.  The aim was to charge the memory to the listener who is
    interested in the events but without triggering the OOM killer.
    Otherwise there would be security concerns for the listener.
    
    At the time, oom-kill trigger was not in the charging path.  A parallel
    work added the oom-kill back to charging path i.e.  commit 29ef680ae7c2
    ("memcg, oom: move out_of_memory back to the charge path").  So to not
    trigger oom-killer in the remote memcg, explicitly add
    __GFP_RETRY_MAYFAIL to the fanotigy and inotify event allocations.
    
    Link: http://lkml.kernel.org/r/20190514212259.156585-2-shakeelb@google.com
    Signed-off-by: Shakeel Butt <shakeelb@google.com>
    Reviewed-by: Roman Gushchin <guro@fb.com>
    Acked-by: Jan Kara <jack@suse.cz>
    Cc: Johannes Weiner <hannes@cmpxchg.org>
    Cc: Vladimir Davydov <vdavydov.dev@gmail.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Amir Goldstein <amir73il@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 041b127df733ec1457dc60de41c091c5e73e3741
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Jul 11 20:57:43 2019 -0700

    mm/gup.c: remove some BUG_ONs from get_gate_page()
    
    [ Upstream commit b5d1c39f34d1c9bca0c4b9ae2e339fbbe264a9c7 ]
    
    If we end up without a PGD or PUD entry backing the gate area, don't BUG
    -- just fail gracefully.
    
    It's not entirely implausible that this could happen some day on x86.  It
    doesn't right now even with an execute-only emulated vsyscall page because
    the fixmap shares the PUD, but the core mm code shouldn't rely on that
    particular detail to avoid OOPSing.
    
    Link: http://lkml.kernel.org/r/a1d9f4efb75b9d464e59fd6af00104b21c58f6f7.1561610798.git.luto@kernel.org
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Florian Weimer <fweimer@redhat.com>
    Cc: Jann Horn <jannh@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fa099d6ddf685e0537547414d226632045156323
Author: Guenter Roeck <linux@roeck-us.net>
Date:   Thu Jul 11 20:57:46 2019 -0700

    mm/gup.c: mark undo_dev_pagemap as __maybe_unused
    
    [ Upstream commit 790c73690c2bbecb3f6f8becbdb11ddc9bcff8cc ]
    
    Several mips builds generate the following build warning.
    
      mm/gup.c:1788:13: warning: 'undo_dev_pagemap' defined but not used
    
    The function is declared unconditionally but only called from behind
    various ifdefs. Mark it __maybe_unused.
    
    Link: http://lkml.kernel.org/r/1562072523-22311-1-git-send-email-linux@roeck-us.net
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Cc: Stephen Rothwell <sfr@canb.auug.org.au>
    Cc: Robin Murphy <robin.murphy@arm.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8be4a30e2d34435392206b1ab7665a9d7c30de72
Author: Christoph Hellwig <hch@lst.de>
Date:   Thu Jul 11 20:55:26 2019 -0700

    9p: pass the correct prototype to read_cache_page
    
    [ Upstream commit f053cbd4366051d7eb6ba1b8d529d20f719c2963 ]
    
    Fix the callback 9p passes to read_cache_page to actually have the
    proper type expected.  Casting around function pointers can easily
    hide typing bugs, and defeats control flow protection.
    
    Link: http://lkml.kernel.org/r/20190520055731.24538-5-hch@lst.de
    Signed-off-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Cc: Sami Tolvanen <samitolvanen@google.com>
    Cc: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 071f2135cfec4b89200876eb9dc115f6957d227b
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Thu Jul 11 20:53:39 2019 -0700

    mm/kmemleak.c: fix check for softirq context
    
    [ Upstream commit 6ef9056952532c3b746de46aa10d45b4d7797bd8 ]
    
    in_softirq() is a wrong predicate to check if we are in a softirq
    context.  It also returns true if we have BH disabled, so objects are
    falsely stamped with "softirq" comm.  The correct predicate is
    in_serving_softirq().
    
    If user does cat from /sys/kernel/debug/kmemleak previously they would
    see this, which is clearly wrong, this is system call context (see the
    comm):
    
    unreferenced object 0xffff88805bd661c0 (size 64):
      comm "softirq", pid 0, jiffies 4294942959 (age 12.400s)
      hex dump (first 32 bytes):
        00 00 00 00 00 00 00 00 ff ff ff ff 00 00 00 00  ................
        00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
      backtrace:
        [<0000000007dcb30c>] kmemleak_alloc_recursive include/linux/kmemleak.h:55 [inline]
        [<0000000007dcb30c>] slab_post_alloc_hook mm/slab.h:439 [inline]
        [<0000000007dcb30c>] slab_alloc mm/slab.c:3326 [inline]
        [<0000000007dcb30c>] kmem_cache_alloc_trace+0x13d/0x280 mm/slab.c:3553
        [<00000000969722b7>] kmalloc include/linux/slab.h:547 [inline]
        [<00000000969722b7>] kzalloc include/linux/slab.h:742 [inline]
        [<00000000969722b7>] ip_mc_add1_src net/ipv4/igmp.c:1961 [inline]
        [<00000000969722b7>] ip_mc_add_src+0x36b/0x400 net/ipv4/igmp.c:2085
        [<00000000a4134b5f>] ip_mc_msfilter+0x22d/0x310 net/ipv4/igmp.c:2475
        [<00000000d20248ad>] do_ip_setsockopt.isra.0+0x19fe/0x1c00 net/ipv4/ip_sockglue.c:957
        [<000000003d367be7>] ip_setsockopt+0x3b/0xb0 net/ipv4/ip_sockglue.c:1246
        [<000000003c7c76af>] udp_setsockopt+0x4e/0x90 net/ipv4/udp.c:2616
        [<000000000c1aeb23>] sock_common_setsockopt+0x3e/0x50 net/core/sock.c:3130
        [<000000000157b92b>] __sys_setsockopt+0x9e/0x120 net/socket.c:2078
        [<00000000a9f3d058>] __do_sys_setsockopt net/socket.c:2089 [inline]
        [<00000000a9f3d058>] __se_sys_setsockopt net/socket.c:2086 [inline]
        [<00000000a9f3d058>] __x64_sys_setsockopt+0x26/0x30 net/socket.c:2086
        [<000000001b8da885>] do_syscall_64+0x7c/0x1a0 arch/x86/entry/common.c:301
        [<00000000ba770c62>] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    now they will see this:
    
    unreferenced object 0xffff88805413c800 (size 64):
      comm "syz-executor.4", pid 8960, jiffies 4294994003 (age 14.350s)
      hex dump (first 32 bytes):
        00 7a 8a 57 80 88 ff ff e0 00 00 01 00 00 00 00  .z.W............
        00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
      backtrace:
        [<00000000c5d3be64>] kmemleak_alloc_recursive include/linux/kmemleak.h:55 [inline]
        [<00000000c5d3be64>] slab_post_alloc_hook mm/slab.h:439 [inline]
        [<00000000c5d3be64>] slab_alloc mm/slab.c:3326 [inline]
        [<00000000c5d3be64>] kmem_cache_alloc_trace+0x13d/0x280 mm/slab.c:3553
        [<0000000023865be2>] kmalloc include/linux/slab.h:547 [inline]
        [<0000000023865be2>] kzalloc include/linux/slab.h:742 [inline]
        [<0000000023865be2>] ip_mc_add1_src net/ipv4/igmp.c:1961 [inline]
        [<0000000023865be2>] ip_mc_add_src+0x36b/0x400 net/ipv4/igmp.c:2085
        [<000000003029a9d4>] ip_mc_msfilter+0x22d/0x310 net/ipv4/igmp.c:2475
        [<00000000ccd0a87c>] do_ip_setsockopt.isra.0+0x19fe/0x1c00 net/ipv4/ip_sockglue.c:957
        [<00000000a85a3785>] ip_setsockopt+0x3b/0xb0 net/ipv4/ip_sockglue.c:1246
        [<00000000ec13c18d>] udp_setsockopt+0x4e/0x90 net/ipv4/udp.c:2616
        [<0000000052d748e3>] sock_common_setsockopt+0x3e/0x50 net/core/sock.c:3130
        [<00000000512f1014>] __sys_setsockopt+0x9e/0x120 net/socket.c:2078
        [<00000000181758bc>] __do_sys_setsockopt net/socket.c:2089 [inline]
        [<00000000181758bc>] __se_sys_setsockopt net/socket.c:2086 [inline]
        [<00000000181758bc>] __x64_sys_setsockopt+0x26/0x30 net/socket.c:2086
        [<00000000d4b73623>] do_syscall_64+0x7c/0x1a0 arch/x86/entry/common.c:301
        [<00000000c1098bec>] entry_SYSCALL_64_after_hwframe+0x44/0xa9
    
    Link: http://lkml.kernel.org/r/20190517171507.96046-1-dvyukov@gmail.com
    Signed-off-by: Dmitry Vyukov <dvyukov@google.com>
    Acked-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7bd5902a1e18d72bed22431540c17f601fae62b9
Author: Sam Ravnborg <sam@ravnborg.org>
Date:   Thu Jul 11 20:52:52 2019 -0700

    sh: prevent warnings when using iounmap
    
    [ Upstream commit 733f0025f0fb43e382b84db0930ae502099b7e62 ]
    
    When building drm/exynos for sh, as part of an allmodconfig build, the
    following warning triggered:
    
      exynos7_drm_decon.c: In function `decon_remove':
      exynos7_drm_decon.c:769:24: warning: unused variable `ctx'
        struct decon_context *ctx = dev_get_drvdata(&pdev->dev);
    
    The ctx variable is only used as argument to iounmap().
    
    In sh - allmodconfig CONFIG_MMU is not defined
    so it ended up in:
    
    \#define __iounmap(addr)        do { } while (0)
    \#define iounmap                __iounmap
    
    Fix the warning by introducing a static inline function for iounmap.
    
    This is similar to several other architectures.
    
    Link: http://lkml.kernel.org/r/20190622114208.24427-1-sam@ravnborg.org
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: Rich Felker <dalias@libc.org>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Inki Dae <inki.dae@samsung.com>
    Cc: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit af50d6a1c24514d466951351bdf9aafe928ad716
Author: Wenwen Wang <wenwen@cs.uga.edu>
Date:   Thu Jul 11 14:22:02 2019 -0500

    block/bio-integrity: fix a memory leak bug
    
    [ Upstream commit e7bf90e5afe3aa1d1282c1635a49e17a32c4ecec ]
    
    In bio_integrity_prep(), a kernel buffer is allocated through kmalloc() to
    hold integrity metadata. Later on, the buffer will be attached to the bio
    structure through bio_integrity_add_page(), which returns the number of
    bytes of integrity metadata attached. Due to unexpected situations,
    bio_integrity_add_page() may return 0. As a result, bio_integrity_prep()
    needs to be terminated with 'false' returned to indicate this error.
    However, the allocated kernel buffer is not freed on this execution path,
    leading to a memory leak.
    
    To fix this issue, free the allocated buffer before returning from
    bio_integrity_prep().
    
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Acked-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Wenwen Wang <wenwen@cs.uga.edu>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7f775a67abe412634cdfb635fd3c84db2d315d93
Author: Oliver O'Halloran <oohall@gmail.com>
Date:   Thu Jul 11 01:05:17 2019 +1000

    powerpc/eeh: Handle hugepages in ioremap space
    
    [ Upstream commit 33439620680be5225c1b8806579a291e0d761ca0 ]
    
    In commit 4a7b06c157a2 ("powerpc/eeh: Handle hugepages in ioremap
    space") support for using hugepages in the vmalloc and ioremap areas was
    enabled for radix. Unfortunately this broke EEH MMIO error checking.
    
    Detection works by inserting a hook which checks the results of the
    ioreadXX() set of functions.  When a read returns a 0xFFs response we
    need to check for an error which we do by mapping the (virtual) MMIO
    address back to a physical address, then mapping physical address to a
    PCI device via an interval tree.
    
    When translating virt -> phys we currently assume the ioremap space is
    only populated by PAGE_SIZE mappings. If a hugepage mapping is found we
    emit a WARN_ON(), but otherwise handles the check as though a normal
    page was found. In pathalogical cases such as copying a buffer
    containing a lot of 0xFFs from BAR memory this can result in the system
    not booting because it's too busy printing WARN_ON()s.
    
    There's no real reason to assume huge pages can't be present and we're
    prefectly capable of handling them, so do that.
    
    Fixes: 4a7b06c157a2 ("powerpc/eeh: Handle hugepages in ioremap space")
    Reported-by: Sachin Sant <sachinp@linux.vnet.ibm.com>
    Signed-off-by: Oliver O'Halloran <oohall@gmail.com>
    Tested-by: Sachin Sant <sachinp@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190710150517.27114-1-oohall@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7a41b276974d35bac948f08327d8f4297d739ba
Author: David Windsor <dwindsor@redhat.com>
Date:   Tue Apr 2 08:37:10 2019 -0400

    dlm: check if workqueues are NULL before flushing/destroying
    
    [ Upstream commit b355516f450703c9015316e429b66a93dfff0e6f ]
    
    If the DLM lowcomms stack is shut down before any DLM
    traffic can be generated, flush_workqueue() and
    destroy_workqueue() can be called on empty send and/or recv
    workqueues.
    
    Insert guard conditionals to only call flush_workqueue()
    and destroy_workqueue() on workqueues that are not NULL.
    
    Signed-off-by: David Windsor <dwindsor@redhat.com>
    Signed-off-by: David Teigland <teigland@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d59e28c3d1b94d318e3e74d4e9adb327bb116c0
Author: morten petersen <morten_bp@live.dk>
Date:   Mon Jul 8 11:41:54 2019 +0000

    mailbox: handle failed named mailbox channel request
    
    [ Upstream commit 25777e5784a7b417967460d4fcf9660d05a0c320 ]
    
    Previously, if mbox_request_channel_byname was used with a name
    which did not exist in the "mbox-names" property of a mailbox
    client, the mailbox corresponding to the last entry in the
    "mbox-names" list would be incorrectly selected.
    With this patch, -EINVAL is returned if the named mailbox is
    not found.
    
    Signed-off-by: Morten Borup Petersen <morten_bp@live.dk>
    Signed-off-by: Jassi Brar <jaswinder.singh@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2140a6b03a6141d353e93632c9a20c0471062ac5
Author: Ocean Chen <oceanchen@google.com>
Date:   Mon Jul 8 12:34:56 2019 +0800

    f2fs: avoid out-of-range memory access
    
    [ Upstream commit 56f3ce675103e3fb9e631cfb4131fc768bc23e9a ]
    
    blkoff_off might over 512 due to fs corrupt or security
    vulnerability. That should be checked before being using.
    
    Use ENTRIES_IN_SUM to protect invalid value in cur_data_blkoff.
    
    Signed-off-by: Ocean Chen <oceanchen@google.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8a1a3d3839233406eed675b1695019802dc4284a
Author: Josef Bacik <josef@toxicpanda.com>
Date:   Thu Mar 7 21:37:18 2019 +0000

    block: init flush rq ref count to 1
    
    [ Upstream commit b554db147feea39617b533ab6bca247c91c6198a ]
    
    We discovered a problem in newer kernels where a disconnect of a NBD
    device while the flush request was pending would result in a hang.  This
    is because the blk mq timeout handler does
    
            if (!refcount_inc_not_zero(&rq->ref))
                    return true;
    
    to determine if it's ok to run the timeout handler for the request.
    Flush_rq's don't have a ref count set, so we'd skip running the timeout
    handler for this request and it would just sit there in limbo forever.
    
    Fix this by always setting the refcount of any request going through
    blk_init_rq() to 1.  I tested this with a nbd-server that dropped flush
    requests to verify that it hung, and then tested with this patch to
    verify I got the timeout as expected and the error handling kicked in.
    Thanks,
    
    Signed-off-by: Josef Bacik <josef@toxicpanda.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4b9dc73a0d4adc67bdd33b8c60dcbfe1e04c61b0
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Fri Jul 5 19:01:43 2019 +0900

    powerpc/boot: add {get, put}_unaligned_be32 to xz_config.h
    
    [ Upstream commit 9e005b761e7ad153dcf40a6cba1d681fe0830ac6 ]
    
    The next commit will make the way of passing CONFIG options more robust.
    Unfortunately, it would uncover another hidden issue; without this
    commit, skiroot_defconfig would be broken like this:
    
    |   WRAP    arch/powerpc/boot/zImage.pseries
    | arch/powerpc/boot/wrapper.a(decompress.o): In function `bcj_powerpc.isra.10':
    | decompress.c:(.text+0x720): undefined reference to `get_unaligned_be32'
    | decompress.c:(.text+0x7a8): undefined reference to `put_unaligned_be32'
    | make[1]: *** [arch/powerpc/boot/Makefile;383: arch/powerpc/boot/zImage.pseries] Error 1
    | make: *** [arch/powerpc/Makefile;295: zImage] Error 2
    
    skiroot_defconfig is the only defconfig that enables CONFIG_KERNEL_XZ
    for ppc, which has never been correctly built before.
    
    I figured out the root cause in lib/decompress_unxz.c:
    
    | #ifdef CONFIG_PPC
    | #      define XZ_DEC_POWERPC
    | #endif
    
    CONFIG_PPC is undefined here in the ppc bootwrapper because autoconf.h
    is not included except by arch/powerpc/boot/serial.c
    
    XZ_DEC_POWERPC is not defined, therefore, bcj_powerpc() is not compiled
    for the bootwrapper.
    
    With the next commit passing CONFIG_PPC correctly, we would realize that
    {get,put}_unaligned_be32 was missing.
    
    Unlike the other decompressors, the ppc bootwrapper duplicates all the
    necessary helpers in arch/powerpc/boot/.
    
    The other architectures define __KERNEL__ and pull in helpers for
    building the decompressors.
    
    If ppc bootwrapper had defined __KERNEL__, lib/xz/xz_private.h would
    have included <asm/unaligned.h>:
    
    | #ifdef __KERNEL__
    | #       include <linux/xz.h>
    | #       include <linux/kernel.h>
    | #       include <asm/unaligned.h>
    
    However, doing so would cause tons of definition conflicts since the
    bootwrapper has duplicated everything.
    
    I just added copies of {get,put}_unaligned_be32, following the
    bootwrapper coding convention.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Link: https://lore.kernel.org/r/20190705100144.28785-1-yamada.masahiro@socionext.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 549f726fb094b1f9477b2d841c82d979ea5a9bbd
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Fri Jun 14 23:40:44 2019 +0800

    PCI: dwc: pci-dra7xx: Fix compilation when !CONFIG_GPIOLIB
    
    [ Upstream commit 381ed79c8655a40268ee7391f716edd90c5c3a97 ]
    
    If CONFIG_GPIOLIB is not selected the compilation results in the
    following build errors:
    
    drivers/pci/controller/dwc/pci-dra7xx.c:
     In function dra7xx_pcie_probe:
    drivers/pci/controller/dwc/pci-dra7xx.c:777:10:
     error: implicit declaration of function devm_gpiod_get_optional;
     did you mean devm_regulator_get_optional? [-Werror=implicit-function-declaration]
    
      reset = devm_gpiod_get_optional(dev, NULL, GPIOD_OUT_HIGH);
    
    drivers/pci/controller/dwc/pci-dra7xx.c:778:45: error: ‘GPIOD_OUT_HIGH’
    undeclared (first use in this function); did you mean ‘GPIOF_INIT_HIGH’?
      reset = devm_gpiod_get_optional(dev, NULL, GPIOD_OUT_HIGH);
                                                 ^~~~~~~~~~~~~~
                                                 GPIOF_INIT_HIGH
    
    Fix them by including the appropriate header file.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    [lorenzo.pieralisi@arm.com: commit log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Acked-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 367cc371a8e3c03b13fe309065371bd19cf3a33f
Author: Konstantin Taranov <konstantin.taranov@inf.ethz.ch>
Date:   Thu Jun 27 16:06:43 2019 +0200

    RDMA/rxe: Fill in wc byte_len with IB_WC_RECV_RDMA_WITH_IMM
    
    [ Upstream commit bdce1290493caa3f8119f24b5dacc3fb7ca27389 ]
    
    Calculate the correct byte_len on the receiving side when a work
    completion is generated with IB_WC_RECV_RDMA_WITH_IMM opcode.
    
    According to the IBA byte_len must indicate the number of written bytes,
    whereas it was always equal to zero for the IB_WC_RECV_RDMA_WITH_IMM
    opcode, even though data was transferred.
    
    Fixes: 8700e3e7c485 ("Soft RoCE driver")
    Signed-off-by: Konstantin Taranov <konstantin.taranov@inf.ethz.ch>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4fe7ea29e4a696c4067579fe5c92bd0db165dcbf
Author: Leo Yan <leo.yan@linaro.org>
Date:   Mon Jul 8 22:39:34 2019 +0800

    perf hists browser: Fix potential NULL pointer dereference found by the smatch tool
    
    [ Upstream commit ceb75476db1617a88cc29b09839acacb69aa076e ]
    
    Based on the following report from Smatch, fix the potential
    NULL pointer dereference check.
    
      tools/perf/ui/browsers/hists.c:641
      hist_browser__run() error: we previously assumed 'hbt' could be
      null (see line 625)
    
      tools/perf/ui/browsers/hists.c:3088
      perf_evsel__hists_browse() error: we previously assumed
      'browser->he_selection' could be null (see line 2902)
    
      tools/perf/ui/browsers/hists.c:3272
      perf_evsel_menu__run() error: we previously assumed 'hbt' could be
      null (see line 3260)
    
    This patch firstly validating the pointers before access them, so can
    fix potential NULL pointer dereference.
    
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Suzuki Poulouse <suzuki.poulose@arm.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Link: http://lkml.kernel.org/r/20190708143937.7722-2-leo.yan@linaro.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 915945f3bdc20def5f8b31a2269a967d63ef89fa
Author: Leo Yan <leo.yan@linaro.org>
Date:   Tue Jul 2 18:34:13 2019 +0800

    perf annotate: Fix dereferencing freed memory found by the smatch tool
    
    [ Upstream commit 600c787dbf6521d8d07ee717ab7606d5070103ea ]
    
    Based on the following report from Smatch, fix the potential
    dereferencing freed memory check.
    
      tools/perf/util/annotate.c:1125
      disasm_line__parse() error: dereferencing freed memory 'namep'
    
      tools/perf/util/annotate.c
      1100 static int disasm_line__parse(char *line, const char **namep, char **rawp)
      1101 {
      1102         char tmp, *name = ltrim(line);
    
      [...]
    
      1114         *namep = strdup(name);
      1115
      1116         if (*namep == NULL)
      1117                 goto out_free_name;
    
      [...]
    
      1124 out_free_name:
      1125         free((void *)namep);
                                ^^^^^
      1126         *namep = NULL;
                   ^^^^^^
      1127         return -1;
      1128 }
    
    If strdup() fails to allocate memory space for *namep, we don't need to
    free memory with pointer 'namep', which is resident in data structure
    disasm_line::ins::name; and *namep is NULL pointer for this failure, so
    it's pointless to assign NULL to *namep again.
    
    Committer note:
    
    Freeing namep, which is the address of the first entry of the 'struct
    ins' that is the first member of struct disasm_line would in fact free
    that disasm_line instance, if it was allocated via malloc/calloc, which,
    later, would a dereference of freed memory.
    
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
    Cc: Alexios Zavras <alexios.zavras@intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Changbin Du <changbin.du@intel.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Eric Saint-Etienne <eric.saint.etienne@oracle.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Suzuki Poulouse <suzuki.poulose@arm.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Thomas Richter <tmricht@linux.ibm.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Link: http://lkml.kernel.org/r/20190702103420.27540-5-leo.yan@linaro.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b305dcff1518545bdb9bf23e95a4ee7391775b38
Author: Leo Yan <leo.yan@linaro.org>
Date:   Tue Jul 2 18:34:17 2019 +0800

    perf session: Fix potential NULL pointer dereference found by the smatch tool
    
    [ Upstream commit f3c8d90757724982e5f07cd77d315eb64ca145ac ]
    
    Based on the following report from Smatch, fix the potential
    NULL pointer dereference check.
    
      tools/perf/util/session.c:1252
      dump_read() error: we previously assumed 'evsel' could be null
      (see line 1249)
    
      tools/perf/util/session.c
      1240 static void dump_read(struct perf_evsel *evsel, union perf_event *event)
      1241 {
      1242         struct read_event *read_event = &event->read;
      1243         u64 read_format;
      1244
      1245         if (!dump_trace)
      1246                 return;
      1247
      1248         printf(": %d %d %s %" PRIu64 "\n", event->read.pid, event->read.tid,
      1249                evsel ? perf_evsel__name(evsel) : "FAIL",
      1250                event->read.value);
      1251
      1252         read_format = evsel->attr.read_format;
                                 ^^^^^^^
    
    'evsel' could be NULL pointer, for this case this patch directly bails
    out without dumping read_event.
    
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
    Cc: Alexios Zavras <alexios.zavras@intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Changbin Du <changbin.du@intel.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Eric Saint-Etienne <eric.saint.etienne@oracle.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Suzuki Poulouse <suzuki.poulose@arm.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Thomas Richter <tmricht@linux.ibm.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Link: http://lkml.kernel.org/r/20190702103420.27540-9-leo.yan@linaro.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19cf571c64b7dc84649cafb135e14f9692da3bcc
Author: Leo Yan <leo.yan@linaro.org>
Date:   Tue Jul 2 18:34:12 2019 +0800

    perf top: Fix potential NULL pointer dereference detected by the smatch tool
    
    [ Upstream commit 111442cfc8abdeaa7ec1407f07ef7b3e5f76654e ]
    
    Based on the following report from Smatch, fix the potential NULL
    pointer dereference check.
    
      tools/perf/builtin-top.c:109
      perf_top__parse_source() warn: variable dereferenced before check 'he'
      (see line 103)
    
      tools/perf/builtin-top.c:233
      perf_top__show_details() warn: variable dereferenced before check 'he'
      (see line 228)
    
      tools/perf/builtin-top.c
      101 static int perf_top__parse_source(struct perf_top *top, struct hist_entry *he)
      102 {
      103         struct perf_evsel *evsel = hists_to_evsel(he->hists);
                                                            ^^^^
      104         struct symbol *sym;
      105         struct annotation *notes;
      106         struct map *map;
      107         int err = -1;
      108
      109         if (!he || !he->ms.sym)
      110                 return -1;
    
    This patch moves the values assignment after validating pointer 'he'.
    
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
    Cc: Alexios Zavras <alexios.zavras@intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Changbin Du <changbin.du@intel.com>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Eric Saint-Etienne <eric.saint.etienne@oracle.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Suzuki Poulouse <suzuki.poulose@arm.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Thomas Richter <tmricht@linux.ibm.com>
    Cc: linux-arm-kernel@lists.infradead.org
    Link: http://lkml.kernel.org/r/20190702103420.27540-4-leo.yan@linaro.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 995527db41f6d9cdaf35eaf606c01a329566ec2b
Author: Leo Yan <leo.yan@linaro.org>
Date:   Tue Jul 2 18:34:11 2019 +0800

    perf stat: Fix use-after-freed pointer detected by the smatch tool
    
    [ Upstream commit c74b05030edb3b52f4208d8415b8c933bc509a29 ]
    
    Based on the following report from Smatch, fix the use-after-freed
    pointer.
    
      tools/perf/builtin-stat.c:1353
      add_default_attributes() warn: passing freed memory 'str'.
    
    The pointer 'str' has been freed but later it is still passed into the
    function parse_events_print_error().  This patch fixes this
    use-after-freed issue.
    
    Signed-off-by: Leo Yan <leo.yan@linaro.org>
    Acked-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Adrian Hunter <adrian.hunter@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Alexey Budankov <alexey.budankov@linux.intel.com>
    Cc: Alexios Zavras <alexios.zavras@intel.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Changbin Du <changbin.du@intel.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: David S. Miller <davem@davemloft.net>
    Cc: Eric Saint-Etienne <eric.saint.etienne@oracle.com>
    Cc: Jin Yao <yao.jin@linux.intel.com>
    Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: Mathieu Poirier <mathieu.poirier@linaro.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Suzuki Poulouse <suzuki.poulose@arm.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Thomas Richter <tmricht@linux.ibm.com>
    Link: http://lkml.kernel.org/r/20190702103420.27540-3-leo.yan@linaro.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3b8c4eae5541409a280f19cf03a43bc4af0c1ceb
Author: Numfor Mbiziwo-Tiapo <nums@google.com>
Date:   Tue Jul 2 10:37:15 2019 -0700

    perf test mmap-thread-lookup: Initialize variable to suppress memory sanitizer warning
    
    [ Upstream commit 4e4cf62b37da5ff45c904a3acf242ab29ed5881d ]
    
    Running the 'perf test' command after building perf with a memory
    sanitizer causes a warning that says:
    
      WARNING: MemorySanitizer: use-of-uninitialized-value... in mmap-thread-lookup.c
    
    Initializing the go variable to 0 silences this harmless warning.
    
    Committer warning:
    
    This was harmless, just a simple test writing whatever was at that
    sizeof(int) memory area just to signal another thread blocked reading
    that file created with pipe(). Initialize it tho so that we don't get
    this warning.
    
    Signed-off-by: Numfor Mbiziwo-Tiapo <nums@google.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Ian Rogers <irogers@google.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Mark Drayton <mbd@fb.com>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Song Liu <songliubraving@fb.com>
    Cc: Stephane Eranian <eranian@google.com>
    Link: http://lkml.kernel.org/r/20190702173716.181223-1-nums@google.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit dd0a0c72a10f947fb5c1eb2682866249a2317af3
Author: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
Date:   Fri Jul 5 17:56:34 2019 +0800

    PCI: mobiveil: Use the 1st inbound window for MEM inbound transactions
    
    [ Upstream commit f7fee1b42fe4f8171a4b1cad05c61907c33c53f6 ]
    
    The inbound and outbound windows have completely separate control
    registers sets in the host controller MMIO space. Windows control
    register are accessed through an MMIO base address and an offset
    that depends on the window index.
    
    Since inbound and outbound windows control registers are completely
    separate there is no real need to use different window indexes in the
    inbound/outbound windows initialization routines to prevent clashing.
    
    To fix this inconsistency, change the MEM inbound window index to 0,
    mirroring the outbound window set-up.
    
    Signed-off-by: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
    [lorenzo.pieralisi@arm.com: update commit log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Minghuan Lian <Minghuan.Lian@nxp.com>
    Reviewed-by: Subrahmanya Lingappa <l.subrahmanya@mobiveil.co.in>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 270972df68fbe20e379771d870b1446f7255f64d
Author: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
Date:   Fri Jul 5 17:56:38 2019 +0800

    PCI: mobiveil: Initialize Primary/Secondary/Subordinate bus numbers
    
    [ Upstream commit 6f3ab451aa5c2cbff33197d82fe8489cbd55ad91 ]
    
    The reset value of Primary, Secondary and Subordinate bus numbers is
    zero which is a broken setup.
    
    Program a sensible default value for Primary/Secondary/Subordinate
    bus numbers.
    
    Signed-off-by: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Minghuan Lian <Minghuan.Lian@nxp.com>
    Reviewed-by: Subrahmanya Lingappa <l.subrahmanya@mobiveil.co.in>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9eb4f2886db31f4735c334d69ddae1d8deca02e9
Author: Vasily Gorbik <gor@linux.ibm.com>
Date:   Fri Jun 28 19:22:47 2019 +0200

    kallsyms: exclude kasan local symbols on s390
    
    [ Upstream commit 33177f01ca3fe550146bb9001bec2fd806b2f40c ]
    
    gcc asan instrumentation emits the following sequence to store frame pc
    when the kernel is built with CONFIG_RELOCATABLE:
    debug/vsprintf.s:
            .section        .data.rel.ro.local,"aw"
            .align  8
    .LC3:
            .quad   .LASANPC4826@GOTOFF
    .text
            .align  8
            .type   number, @function
    number:
    .LASANPC4826:
    
    and in case reloc is issued for LASANPC label it also gets into .symtab
    with the same address as actual function symbol:
    $ nm -n vmlinux | grep 0000000001397150
    0000000001397150 t .LASANPC4826
    0000000001397150 t number
    
    In the end kernel backtraces are almost unreadable:
    [  143.748476] Call Trace:
    [  143.748484] ([<000000002da3e62c>] .LASANPC2671+0x114/0x190)
    [  143.748492]  [<000000002eca1a58>] .LASANPC2612+0x110/0x160
    [  143.748502]  [<000000002de9d830>] print_address_description+0x80/0x3b0
    [  143.748511]  [<000000002de9dd64>] __kasan_report+0x15c/0x1c8
    [  143.748521]  [<000000002ecb56d4>] strrchr+0x34/0x60
    [  143.748534]  [<000003ff800a9a40>] kasan_strings+0xb0/0x148 [test_kasan]
    [  143.748547]  [<000003ff800a9bba>] kmalloc_tests_init+0xe2/0x528 [test_kasan]
    [  143.748555]  [<000000002da2117c>] .LASANPC4069+0x354/0x748
    [  143.748563]  [<000000002dbfbb16>] do_init_module+0x136/0x3b0
    [  143.748571]  [<000000002dbff3f4>] .LASANPC3191+0x2164/0x25d0
    [  143.748580]  [<000000002dbffc4c>] .LASANPC3196+0x184/0x1b8
    [  143.748587]  [<000000002ecdf2ec>] system_call+0xd8/0x2d8
    
    Since LASANPC labels are not even unique and get into .symtab only due
    to relocs filter them out in kallsyms.
    
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4613f46ef47211d2979b23a0801cb05a34f2c98a
Author: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
Date:   Fri Jul 5 17:56:35 2019 +0800

    PCI: mobiveil: Fix the Class Code field
    
    [ Upstream commit 0122af0a08243f344a438f924e5c2486486555b3 ]
    
    Fix up the Class Code field in PCI configuration space and set it to
    PCI_CLASS_BRIDGE_PCI.
    
    Move the Class Code fixup to function mobiveil_host_init() where
    it belongs.
    
    Fixes: 9af6bcb11e12 ("PCI: mobiveil: Add Mobiveil PCIe Host Bridge IP driver")
    Signed-off-by: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Minghuan Lian <Minghuan.Lian@nxp.com>
    Reviewed-by: Subrahmanya Lingappa <l.subrahmanya@mobiveil.co.in>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 51308ec525cc1d2bf0552b9d4c2ad6abe0000d80
Author: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
Date:   Fri Jul 5 17:56:31 2019 +0800

    PCI: mobiveil: Fix PCI base address in MEM/IO outbound windows
    
    [ Upstream commit f99536e9d2f55996038158a6559d4254a7cc1693 ]
    
    The outbound memory windows PCI base addresses should be taken
    from the 'ranges' property of DT node to setup MEM/IO outbound
    windows decoding correctly instead of being hardcoded to zero.
    
    Update the code to retrieve the PCI base address for each range
    and use it to program the outbound windows address decoders
    
    Fixes: 9af6bcb11e12 ("PCI: mobiveil: Add Mobiveil PCIe Host Bridge IP driver")
    Signed-off-by: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Reviewed-by: Minghuan Lian <Minghuan.Lian@nxp.com>
    Reviewed-by: Subrahmanya Lingappa <l.subrahmanya@mobiveil.co.in>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 05959ed85e34240ba3980c784d7634a4ebc753f5
Author: James Morse <james.morse@arm.com>
Date:   Tue Jun 18 16:17:33 2019 +0100

    arm64: assembler: Switch ESB-instruction with a vanilla nop if !ARM64_HAS_RAS
    
    [ Upstream commit 2b68a2a963a157f024c67c0697b16f5f792c8a35 ]
    
    The ESB-instruction is a nop on CPUs that don't implement the RAS
    extensions. This lets us use it in places like the vectors without
    having to use alternatives.
    
    If someone disables CONFIG_ARM64_RAS_EXTN, this instruction still has
    its RAS extensions behaviour, but we no longer read DISR_EL1 as this
    register does depend on alternatives.
    
    This could go wrong if we want to synchronize an SError from a KVM
    guest. On a CPU that has the RAS extensions, but the KConfig option
    was disabled, we consume the pending SError with no chance of ever
    reading it.
    
    Hide the ESB-instruction behind the CONFIG_ARM64_RAS_EXTN option,
    outputting a regular nop if the feature has been disabled.
    
    Reported-by: Julien Thierry <julien.thierry@arm.com>
    Signed-off-by: James Morse <james.morse@arm.com>
    Signed-off-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 007b01a27d4d5628d686d64c1b13356a7f21aad7
Author: Valentine Fatiev <valentinef@mellanox.com>
Date:   Sun Jun 30 16:48:41 2019 +0300

    IB/ipoib: Add child to parent list only if device initialized
    
    [ Upstream commit 91b01061fef9c57d2f5b712a6322ef51061f4efd ]
    
    Despite failure in ipoib_dev_init() we continue with initialization flow
    and creation of child device. It causes to the situation where this child
    device is added too early to parent device list.
    
    Change the logic, so in case of failure we properly return error from
    ipoib_dev_init() and add child only in success path.
    
    Fixes: eaeb39842508 ("IB/ipoib: Move init code to ndo_init")
    Signed-off-by: Valentine Fatiev <valentinef@mellanox.com>
    Reviewed-by: Feras Daoud <ferasda@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d48720bafd904f23d05b7c026c7fb44972d6e8f1
Author: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
Date:   Tue May 28 11:06:24 2019 +0530

    powerpc/mm: Handle page table allocation failures
    
    [ Upstream commit 2230ebf6e6dd0b7751e2921b40f6cfe34f09bb16 ]
    
    This fixes kernel crash that arises due to not handling page table allocation
    failures while allocating hugetlb page table.
    
    Fixes: e2b3d202d1db ("powerpc: Switch 16GB and 16MB explicit hugepages to a different page table format")
    Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f14537bb81d1afb0e9e7c3a6c5f83ad1fd6478ec
Author: Parav Pandit <parav@mellanox.com>
Date:   Sun Jun 30 10:52:52 2019 +0300

    IB/mlx5: Fixed reporting counters on 2nd port for Dual port RoCE
    
    [ Upstream commit 2f40cf30c8644360d37287861d5288f00eab35e5 ]
    
    Currently during dual port IB device registration in below code flow,
    
    ib_register_device()
      ib_device_register_sysfs()
        ib_setup_port_attrs()
          add_port()
            get_counter_table()
              get_perf_mad()
                process_mad()
                  mlx5_ib_process_mad()
    
    mlx5_ib_process_mad() fails on 2nd port when both the ports are not fully
    setup at the device level (because 2nd port is unaffiliated).
    
    As a result, get_perf_mad() registers different PMA counter group for 1st
    and 2nd port, namely pma_counter_ext and pma_counter. However both ports
    have the same capability and counter offsets.
    
    Due to this when counters are read by the user via sysfs in below code
    flow, counters are queried from wrong location from the device mainly from
    PPCNT instead of VPORT counters.
    
    show_pma_counter()
      get_perf_mad()
        process_mad()
          mlx5_ib_process_mad()
            process_pma_cmd()
    
    This shows all zero counters for 2nd port.
    
    To overcome this, process_pma_cmd() is invoked, and when unaffiliated port
    is not yet setup during device registration phase, make the query on the
    first port.  while at it, only process_pma_cmd() needs to work on the
    native port number and underlying mdev, so shift the get, put calls to
    where its needed inside process_pma_cmd().
    
    Fixes: 212f2a87b74f ("IB/mlx5: Route MADs for dual port RoCE")
    Signed-off-by: Parav Pandit <parav@mellanox.com>
    Reviewed-by: Daniel Jurgens <danielj@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d03aeb8d6b98bc6e8ddf001d492c9f03bb68f867
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Jun 24 14:35:39 2019 +0200

    serial: sh-sci: Fix TX DMA buffer flushing and workqueue races
    
    [ Upstream commit 8493eab02608b0e82f67b892aa72882e510c31d0 ]
    
    When uart_flush_buffer() is called, the .flush_buffer() callback zeroes
    the tx_dma_len field.  This may race with the work queue function
    handling transmit DMA requests:
    
      1. If the buffer is flushed before the first DMA API call,
         dmaengine_prep_slave_single() may be called with a zero length,
         causing the DMA request to never complete, leading to messages
         like:
    
            rcar-dmac e7300000.dma-controller: Channel Address Error happen
    
         and, with debug enabled:
    
            sh-sci e6e88000.serial: sci_dma_tx_work_fn: ffff800639b55000: 0...0, cookie 126
    
         and DMA timeouts.
    
      2. If the buffer is flushed after the first DMA API call, but before
         the second, dma_sync_single_for_device() may be called with a zero
         length, causing the transmit data not to be flushed to RAM, and
         leading to stale data being output.
    
    Fix this by:
      1. Letting sci_dma_tx_work_fn() return immediately if the transmit
         buffer is empty,
      2. Extending the critical section to cover all DMA preparational work,
         so tx_dma_len stays consistent for all of it,
      3. Using local copies of circ_buf.head and circ_buf.tail, to make sure
         they match the actual operation above.
    
    Reported-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Suggested-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Tested-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Link: https://lore.kernel.org/r/20190624123540.20629-2-geert+renesas@glider.be
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 48c73b8ee5c966fd9bbe4da0ab9c5f1fab5ce416
Author: Geert Uytterhoeven <geert+renesas@glider.be>
Date:   Mon Jun 24 14:35:40 2019 +0200

    serial: sh-sci: Terminate TX DMA during buffer flushing
    
    [ Upstream commit 775b7ffd7d6d5db320d99b0a485c51e04dfcf9f1 ]
    
    While the .flush_buffer() callback clears sci_port.tx_dma_len since
    commit 1cf4a7efdc71cab8 ("serial: sh-sci: Fix race condition causing
    garbage during shutdown"), it does not terminate a transmit DMA
    operation that may be in progress.
    
    Fix this by terminating any pending DMA operations, and resetting the
    corresponding cookie.
    
    Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reviewed-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Tested-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    
    Link: https://lore.kernel.org/r/20190624123540.20629-3-geert+renesas@glider.be
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ca730bf0cd67233041a6749f86ff2a431ca85524
Author: Liu, Changcheng <changcheng.liu@intel.com>
Date:   Fri Jun 28 14:16:13 2019 +0800

    RDMA/i40iw: Set queue pair state when being queried
    
    [ Upstream commit 2e67e775845373905d2c2aecb9062c2c4352a535 ]
    
    The API for ib_query_qp requires the driver to set qp_state and
    cur_qp_state on return, add the missing sets.
    
    Fixes: d37498417947 ("i40iw: add files for iwarp interface")
    Signed-off-by: Changcheng Liu <changcheng.liu@aliyun.com>
    Acked-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Reviewed-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 52373ab6a6c75ba885f11d3f3ce6dfdf897a7264
Author: Christian Lamparter <chunkeey@gmail.com>
Date:   Sat Jun 15 17:23:13 2019 +0200

    powerpc/4xx/uic: clear pending interrupt after irq type/pol change
    
    [ Upstream commit 3ab3a0689e74e6aa5b41360bc18861040ddef5b1 ]
    
    When testing out gpio-keys with a button, a spurious
    interrupt (and therefore a key press or release event)
    gets triggered as soon as the driver enables the irq
    line for the first time.
    
    This patch clears any potential bogus generated interrupt
    that was caused by the switching of the associated irq's
    type and polarity.
    
    Signed-off-by: Christian Lamparter <chunkeey@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 74520144700d59118313559c5fc7869facc2437d
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Fri May 24 21:54:14 2019 +0200

    um: Silence lockdep complaint about mmap_sem
    
    [ Upstream commit 80bf6ceaf9310b3f61934c69b382d4912deee049 ]
    
    When we get into activate_mm(), lockdep complains that we're doing
    something strange:
    
        WARNING: possible circular locking dependency detected
        5.1.0-10252-gb00152307319-dirty #121 Not tainted
        ------------------------------------------------------
        inside.sh/366 is trying to acquire lock:
        (____ptrval____) (&(&p->alloc_lock)->rlock){+.+.}, at: flush_old_exec+0x703/0x8d7
    
        but task is already holding lock:
        (____ptrval____) (&mm->mmap_sem){++++}, at: flush_old_exec+0x6c5/0x8d7
    
        which lock already depends on the new lock.
    
        the existing dependency chain (in reverse order) is:
    
        -> #1 (&mm->mmap_sem){++++}:
               [...]
               __lock_acquire+0x12ab/0x139f
               lock_acquire+0x155/0x18e
               down_write+0x3f/0x98
               flush_old_exec+0x748/0x8d7
               load_elf_binary+0x2ca/0xddb
               [...]
    
        -> #0 (&(&p->alloc_lock)->rlock){+.+.}:
               [...]
               __lock_acquire+0x12ab/0x139f
               lock_acquire+0x155/0x18e
               _raw_spin_lock+0x30/0x83
               flush_old_exec+0x703/0x8d7
               load_elf_binary+0x2ca/0xddb
               [...]
    
        other info that might help us debug this:
    
         Possible unsafe locking scenario:
    
               CPU0                    CPU1
               ----                    ----
          lock(&mm->mmap_sem);
                                       lock(&(&p->alloc_lock)->rlock);
                                       lock(&mm->mmap_sem);
          lock(&(&p->alloc_lock)->rlock);
    
         *** DEADLOCK ***
    
        2 locks held by inside.sh/366:
         #0: (____ptrval____) (&sig->cred_guard_mutex){+.+.}, at: __do_execve_file+0x12d/0x869
         #1: (____ptrval____) (&mm->mmap_sem){++++}, at: flush_old_exec+0x6c5/0x8d7
    
        stack backtrace:
        CPU: 0 PID: 366 Comm: inside.sh Not tainted 5.1.0-10252-gb00152307319-dirty #121
        Stack:
         [...]
        Call Trace:
         [<600420de>] show_stack+0x13b/0x155
         [<6048906b>] dump_stack+0x2a/0x2c
         [<6009ae64>] print_circular_bug+0x332/0x343
         [<6009c5c6>] check_prev_add+0x669/0xdad
         [<600a06b4>] __lock_acquire+0x12ab/0x139f
         [<6009f3d0>] lock_acquire+0x155/0x18e
         [<604a07e0>] _raw_spin_lock+0x30/0x83
         [<60151e6a>] flush_old_exec+0x703/0x8d7
         [<601a8eb8>] load_elf_binary+0x2ca/0xddb
         [...]
    
    I think it's because in exec_mmap() we have
    
            down_read(&old_mm->mmap_sem);
    ...
            task_lock(tsk);
    ...
            activate_mm(active_mm, mm);
            (which does down_write(&mm->mmap_sem))
    
    I'm not really sure why lockdep throws in the whole knowledge
    about the task lock, but it seems that old_mm and mm shouldn't
    ever be the same (and it doesn't deadlock) so tell lockdep that
    they're different.
    
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 30edc7c1fed524bb85fcf3ad7312f93411f48055
Author: Ira Weiny <ira.weiny@intel.com>
Date:   Wed Jun 5 14:49:22 2019 -0700

    mm/swap: fix release_pages() when releasing devmap pages
    
    [ Upstream commit c5d6c45e90c49150670346967971e14576afd7f1 ]
    
    release_pages() is an optimized version of a loop around put_page().
    Unfortunately for devmap pages the logic is not entirely correct in
    release_pages().  This is because device pages can be more than type
    MEMORY_DEVICE_PUBLIC.  There are in fact 4 types, private, public, FS DAX,
    and PCI P2PDMA.  Some of these have specific needs to "put" the page while
    others do not.
    
    This logic to handle any special needs is contained in
    put_devmap_managed_page().  Therefore all devmap pages should be processed
    by this function where we can contain the correct logic for a page put.
    
    Handle all device type pages within release_pages() by calling
    put_devmap_managed_page() on all devmap pages.  If
    put_devmap_managed_page() returns true the page has been put and we
    continue with the next page.  A false return of put_devmap_managed_page()
    means the page did not require special processing and should fall to
    "normal" processing.
    
    This was found via code inspection while determining if release_pages()
    and the new put_user_pages() could be interchangeable.[1]
    
    [1] https://lkml.kernel.org/r/20190523172852.GA27175@iweiny-DESK2.sc.intel.com
    
    Link: https://lkml.kernel.org/r/20190605214922.17684-1-ira.weiny@intel.com
    Cc: Jérôme Glisse <jglisse@redhat.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Reviewed-by: Dan Williams <dan.j.williams@intel.com>
    Reviewed-by: John Hubbard <jhubbard@nvidia.com>
    Signed-off-by: Ira Weiny <ira.weiny@intel.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b4e77006d5a77c13f84ea07767bf7790db0cd033
Author: Axel Lin <axel.lin@ingics.com>
Date:   Wed Jun 26 21:30:07 2019 +0800

    mfd: hi655x-pmic: Fix missing return value check for devm_regmap_init_mmio_clk
    
    [ Upstream commit 7efd105c27fd2323789b41b64763a0e33ed79c08 ]
    
    Since devm_regmap_init_mmio_clk can fail, add return value checking.
    
    Signed-off-by: Axel Lin <axel.lin@ingics.com>
    Acked-by: Chen Feng <puck.chen@hisilicon.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9b1691c3f6602c8e26e99433a1511570b2e6e80c
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Mon May 20 10:06:25 2019 +0100

    mfd: arizona: Fix undefined behavior
    
    [ Upstream commit 5da6cbcd2f395981aa9bfc571ace99f1c786c985 ]
    
    When the driver is used with a subdevice that is disabled in the
    kernel configuration, clang gets a little confused about the
    control flow and fails to notice that n_subdevs is only
    uninitialized when subdevs is NULL, and we check for that,
    leading to a false-positive warning:
    
    drivers/mfd/arizona-core.c:1423:19: error: variable 'n_subdevs' is uninitialized when used here
          [-Werror,-Wuninitialized]
                                  subdevs, n_subdevs, NULL, 0, NULL);
                                           ^~~~~~~~~
    drivers/mfd/arizona-core.c:999:15: note: initialize the variable 'n_subdevs' to silence this warning
            int n_subdevs, ret, i;
                         ^
                          = 0
    
    Ideally, we would rearrange the code to avoid all those early
    initializations and have an explicit exit in each disabled case,
    but it's much easier to chicken out and add one more initialization
    here to shut up the warning.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9c74176c275431894c301c6c3c093b81306eed8
Author: Robert Hancock <hancock@sedsystems.ca>
Date:   Tue Jun 4 16:35:43 2019 -0600

    mfd: core: Set fwnode for created devices
    
    [ Upstream commit c176c6d7e932662668bcaec2d763657096589d85 ]
    
    The logic for setting the of_node on devices created by mfd did not set
    the fwnode pointer to match, which caused fwnode-based APIs to
    malfunction on these devices since the fwnode pointer was null. Fix
    this.
    
    Signed-off-by: Robert Hancock <hancock@sedsystems.ca>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7b24a4a363a90d8708d6b59046843eddf3eee1a7
Author: Daniel Gomez <dagmcr@gmail.com>
Date:   Sat May 11 12:03:58 2019 +0200

    mfd: madera: Add missing of table registration
    
    [ Upstream commit 5aa3709c0a5c026735b0ddd4ec80810a23d65f5b ]
    
    MODULE_DEVICE_TABLE(of, <of_match_table>) should be called to complete DT
    OF mathing mechanism and register it.
    
    Before this patch:
    modinfo ./drivers/mfd/madera.ko | grep alias
    
    After this patch:
    modinfo ./drivers/mfd/madera.ko | grep alias
    alias:          of:N*T*Ccirrus,wm1840C*
    alias:          of:N*T*Ccirrus,wm1840
    alias:          of:N*T*Ccirrus,cs47l91C*
    alias:          of:N*T*Ccirrus,cs47l91
    alias:          of:N*T*Ccirrus,cs47l90C*
    alias:          of:N*T*Ccirrus,cs47l90
    alias:          of:N*T*Ccirrus,cs47l85C*
    alias:          of:N*T*Ccirrus,cs47l85
    alias:          of:N*T*Ccirrus,cs47l35C*
    alias:          of:N*T*Ccirrus,cs47l35
    
    Reported-by: Javier Martinez Canillas <javier@dowhile0.org>
    Signed-off-by: Daniel Gomez <dagmcr@gmail.com>
    Signed-off-by: Lee Jones <lee.jones@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e00cf1dac30ce291ce002810c5ec167edf8c91c1
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Jun 27 00:08:01 2019 +0530

    recordmcount: Fix spurious mcount entries on powerpc
    
    [ Upstream commit 80e5302e4bc85a6b685b7668c36c6487b5f90e9a ]
    
    An impending change to enable HAVE_C_RECORDMCOUNT on powerpc leads to
    warnings such as the following:
    
      # modprobe kprobe_example
      ftrace-powerpc: Not expected bl: opcode is 3c4c0001
      WARNING: CPU: 0 PID: 227 at kernel/trace/ftrace.c:2001 ftrace_bug+0x90/0x318
      Modules linked in:
      CPU: 0 PID: 227 Comm: modprobe Not tainted 5.2.0-rc6-00678-g1c329100b942 #2
      NIP:  c000000000264318 LR: c00000000025d694 CTR: c000000000f5cd30
      REGS: c000000001f2b7b0 TRAP: 0700   Not tainted  (5.2.0-rc6-00678-g1c329100b942)
      MSR:  900000010282b033 <SF,HV,VEC,VSX,EE,FP,ME,IR,DR,RI,LE,TM[E]>  CR: 28228222  XER: 00000000
      CFAR: c0000000002642fc IRQMASK: 0
      <snip>
      NIP [c000000000264318] ftrace_bug+0x90/0x318
      LR [c00000000025d694] ftrace_process_locs+0x4f4/0x5e0
      Call Trace:
      [c000000001f2ba40] [0000000000000004] 0x4 (unreliable)
      [c000000001f2bad0] [c00000000025d694] ftrace_process_locs+0x4f4/0x5e0
      [c000000001f2bb90] [c00000000020ff10] load_module+0x25b0/0x30c0
      [c000000001f2bd00] [c000000000210cb0] sys_finit_module+0xc0/0x130
      [c000000001f2be20] [c00000000000bda4] system_call+0x5c/0x70
      Instruction dump:
      419e0018 2f83ffff 419e00bc 2f83ffea 409e00cc 4800001c 0fe00000 3c62ff96
      39000001 39400000 386386d0 480000c4 <0fe00000> 3ce20003 39000001 3c62ff96
      ---[ end trace 4c438d5cebf78381 ]---
      ftrace failed to modify
      [<c0080000012a0008>] 0xc0080000012a0008
       actual:   01:00:4c:3c
      Initializing ftrace call sites
      ftrace record flags: 2000000
       (0)
       expected tramp: c00000000006af4c
    
    Looking at the relocation records in __mcount_loc shows a few spurious
    entries:
    
      RELOCATION RECORDS FOR [__mcount_loc]:
      OFFSET           TYPE              VALUE
      0000000000000000 R_PPC64_ADDR64    .text.unlikely+0x0000000000000008
      0000000000000008 R_PPC64_ADDR64    .text.unlikely+0x0000000000000014
      0000000000000010 R_PPC64_ADDR64    .text.unlikely+0x0000000000000060
      0000000000000018 R_PPC64_ADDR64    .text.unlikely+0x00000000000000b4
      0000000000000020 R_PPC64_ADDR64    .init.text+0x0000000000000008
      0000000000000028 R_PPC64_ADDR64    .init.text+0x0000000000000014
    
    The first entry in each section is incorrect. Looking at the
    relocation records, the spurious entries correspond to the
    R_PPC64_ENTRY records:
    
      RELOCATION RECORDS FOR [.text.unlikely]:
      OFFSET           TYPE              VALUE
      0000000000000000 R_PPC64_REL64     .TOC.-0x0000000000000008
      0000000000000008 R_PPC64_ENTRY     *ABS*
      0000000000000014 R_PPC64_REL24     _mcount
      <snip>
    
    The problem is that we are not validating the return value from
    get_mcountsym() in sift_rel_mcount(). With this entry, mcountsym is 0,
    but Elf_r_sym(relp) also ends up being 0. Fix this by ensuring
    mcountsym is valid before processing the entry.
    
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Tested-by: Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9fac39480e398c608231ccd48fa7b55edf936ec7
Author: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
Date:   Thu Jun 27 15:29:40 2019 +0530

    powerpc/xmon: Fix disabling tracing while in xmon
    
    [ Upstream commit aaf06665f7ea3ee9f9754e16c1a507a89f1de5b1 ]
    
    Commit ed49f7fd6438d ("powerpc/xmon: Disable tracing when entering
    xmon") added code to disable recording trace entries while in xmon. The
    commit introduced a variable 'tracing_enabled' to record if tracing was
    enabled on xmon entry, and used this to conditionally enable tracing
    during exit from xmon.
    
    However, we are not checking the value of 'fromipi' variable in
    xmon_core() when setting 'tracing_enabled'. Due to this, when secondary
    cpus enter xmon, they will see tracing as being disabled already and
    tracing won't be re-enabled on exit. Fix the same.
    
    Fixes: ed49f7fd6438d ("powerpc/xmon: Disable tracing when entering xmon")
    Signed-off-by: Naveen N. Rao <naveen.n.rao@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a80f67d5560c213f7f54b7ac7593e0dfa661161f
Author: Qian Cai <cai@lca.pw>
Date:   Thu Jun 6 09:58:13 2019 -0400

    powerpc/cacheflush: fix variable set but not used
    
    [ Upstream commit 04db3ede40ae4fc23a5c4237254c4a53bbe4c1f2 ]
    
    The powerpc's flush_cache_vmap() is defined as a macro and never use
    both of its arguments, so it will generate a compilation warning,
    
    lib/ioremap.c: In function 'ioremap_page_range':
    lib/ioremap.c:203:16: warning: variable 'start' set but not used
    [-Wunused-but-set-variable]
    
    Fix it by making it an inline function.
    
    Signed-off-by: Qian Cai <cai@lca.pw>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b150423e0d5eeca091e0af2eb4594a53df304f9a
Author: Bastien Nocera <hadess@hadess.net>
Date:   Thu Jun 27 09:20:45 2019 +0200

    iio: iio-utils: Fix possible incorrect mask calculation
    
    [ Upstream commit 208a68c8393d6041a90862992222f3d7943d44d6 ]
    
    On some machines, iio-sensor-proxy was returning all 0's for IIO sensor
    values. It turns out that the bits_used for this sensor is 32, which makes
    the mask calculation:
    
    *mask = (1 << 32) - 1;
    
    If the compiler interprets the 1 literals as 32-bit ints, it generates
    undefined behavior depending on compiler version and optimization level.
    On my system, it optimizes out the shift, so the mask value becomes
    
    *mask = (1) - 1;
    
    With a mask value of 0, iio-sensor-proxy will always return 0 for every axis.
    
    Avoid incorrect 0 values caused by compiler optimization.
    
    See original fix by Brett Dutro <brett.dutro@gmail.com> in
    iio-sensor-proxy:
    https://github.com/hadess/iio-sensor-proxy/commit/9615ceac7c134d838660e209726cd86aa2064fd3
    
    Signed-off-by: Bastien Nocera <hadess@hadess.net>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fc9c15c4e3ffe2f067cb743f7f716e8dbc9430bf
Author: Bharat Kumar Gogada <bharat.kumar.gogada@xilinx.com>
Date:   Wed Jun 12 15:47:59 2019 +0530

    PCI: xilinx-nwl: Fix Multi MSI data programming
    
    [ Upstream commit 181fa434d0514e40ebf6e9721f2b72700287b6e2 ]
    
    According to the PCI Local Bus specification Revision 3.0,
    section 6.8.1.3 (Message Control for MSI), endpoints that
    are Multiple Message Capable as defined by bits [3:1] in
    the Message Control for MSI can request a number of vectors
    that is power of two aligned.
    
    As specified in section 6.8.1.6 "Message data for MSI", the Multiple
    Message Enable field (bits [6:4] of the Message Control register)
    defines the number of low order message data bits the function is
    permitted to modify to generate its system software allocated
    vectors.
    
    The MSI controller in the Xilinx NWL PCIe controller supports a number
    of MSI vectors specified through a bitmap and the hwirq number for an
    MSI, that is the value written in the MSI data TLP is determined by
    the bitmap allocation.
    
    For instance, in a situation where two endpoints sitting on
    the PCI bus request the following MSI configuration, with
    the current PCI Xilinx bitmap allocation code (that does not
    align MSI vector allocation on a power of two boundary):
    
    Endpoint #1: Requesting 1 MSI vector - allocated bitmap bits 0
    Endpoint #2: Requesting 2 MSI vectors - allocated bitmap bits [1,2]
    
    The bitmap value(s) corresponds to the hwirq number that is programmed
    into the Message Data for MSI field in the endpoint MSI capability
    and is detected by the root complex to fire the corresponding
    MSI irqs. The value written in Message Data for MSI field corresponds
    to the first bit allocated in the bitmap for Multi MSI vectors.
    
    The current Xilinx NWL MSI allocation code allows a bitmap allocation
    that is not a power of two boundaries, so endpoint #2, is allowed to
    toggle Message Data bit[0] to differentiate between its two vectors
    (meaning that the MSI data will be respectively 0x0 and 0x1 for the two
    vectors allocated to endpoint #2).
    
    This clearly aliases with the Endpoint #1 vector allocation, resulting
    in a broken Multi MSI implementation.
    
    Update the code to allocate MSI bitmap ranges with a power of two
    alignment, fixing the bug.
    
    Fixes: ab597d35ef11 ("PCI: xilinx-nwl: Add support for Xilinx NWL PCIe Host Controller")
    Suggested-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Bharat Kumar Gogada <bharat.kumar.gogada@xilinx.com>
    [lorenzo.pieralisi@arm.com: updated commit log]
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e3e2bb12c8a72bcbaf486c023a02566027224adf
Author: Will Deacon <will@kernel.org>
Date:   Tue Jun 18 14:10:48 2019 +0100

    genksyms: Teach parser about 128-bit built-in types
    
    [ Upstream commit a222061b85234d8a44486a46bd4df7e2cda52385 ]
    
    __uint128_t crops up in a few files that export symbols to modules, so
    teach genksyms about it and the other GCC built-in 128-bit integer types
    so that we don't end up skipping the CRC generation for some symbols due
    to the parser failing to spot them:
    
      | WARNING: EXPORT symbol "kernel_neon_begin" [vmlinux] version
      |          generation failed, symbol will not be versioned.
      | ld: arch/arm64/kernel/fpsimd.o: relocation R_AARCH64_ABS32 against
      |     `__crc_kernel_neon_begin' can not be used when making a shared
      |     object
      | ld: arch/arm64/kernel/fpsimd.o:(.data+0x0): dangerous relocation:
      |     unsupported relocation
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 27f2335e1440128eb53ea2dacfc9e685cfa587aa
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Tue Jun 11 11:43:31 2019 -0700

    kbuild: Add -Werror=unknown-warning-option to CLANG_FLAGS
    
    [ Upstream commit 589834b3a0097a4908f4112eac0ca2feb486fa32 ]
    
    In commit ebcc5928c5d9 ("arm64: Silence gcc warnings about arch ABI
    drift"), the arm64 Makefile added -Wno-psabi to KBUILD_CFLAGS, which is
    a GCC only option so clang rightfully complains:
    
    warning: unknown warning option '-Wno-psabi' [-Wunknown-warning-option]
    
    https://clang.llvm.org/docs/DiagnosticsReference.html#wunknown-warning-option
    
    However, by default, this is merely a warning so the build happily goes
    on with a slew of these warnings in the process.
    
    Commit c3f0d0bc5b01 ("kbuild, LLVMLinux: Add -Werror to cc-option to
    support clang") worked around this behavior in cc-option by adding
    -Werror so that unknown flags cause an error. However, this all happens
    silently and when an unknown flag is added to the build unconditionally
    like -Wno-psabi, cc-option will always fail because there is always an
    unknown flag in the list of flags. This manifested as link time failures
    in the arm64 libstub because -fno-stack-protector didn't get added to
    KBUILD_CFLAGS.
    
    To avoid these weird cryptic failures in the future, make clang behave
    like gcc and immediately error when it encounters an unknown flag by
    adding -Werror=unknown-warning-option to CLANG_FLAGS. This can be added
    unconditionally for clang because it is supported by at least 3.0.0,
    according to godbolt [1] and 4.0.0, according to its documentation [2],
    which is far earlier than we typically support.
    
    [1]: https://godbolt.org/z/7F7rm3
    [2]: https://releases.llvm.org/4.0.0/tools/clang/docs/DiagnosticsReference.html#wunknown-warning-option
    
    Link: https://github.com/ClangBuiltLinux/linux/issues/511
    Link: https://github.com/ClangBuiltLinux/linux/issues/517
    Suggested-by: Peter Smith <peter.smith@linaro.org>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Tested-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1fa94381fdeb59e6165d17b1261991f26b145d68
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Mon Jun 17 09:53:01 2019 +0200

    i2c: stm32f7: fix the get_irq error cases
    
    [ Upstream commit 79b4499524ed659fb76323efc30f3dc03967c88f ]
    
    During probe, return the "get_irq" error value instead of -EINVAL which
    allows the driver to be deferred probed if needed.
    Fix also the case where of_irq_get() returns a negative value.
    Note :
    On failure of_irq_get() returns 0 or a negative value while
    platform_get_irq() returns a negative value.
    
    Fixes: aeb068c57214 ("i2c: i2c-stm32f7: add driver")
    Reviewed-by: Pierre-Yves MORDRET <pierre-yves.mordret@st.com>
    Signed-off-by: Fabien Dessenne <fabien.dessenne@st.com>
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f930727faef2da1cbaf3a63fdf61ea4d5155630b
Author: Marek Vasut <marek.vasut+renesas@gmail.com>
Date:   Mon May 27 00:51:51 2019 +0200

    PCI: sysfs: Ignore lockdep for remove attribute
    
    [ Upstream commit dc6b698a86fe40a50525433eb8e92a267847f6f9 ]
    
    With CONFIG_PROVE_LOCKING=y, using sysfs to remove a bridge with a device
    below it causes a lockdep warning, e.g.,
    
      # echo 1 > /sys/class/pci_bus/0000:00/device/0000:00:00.0/remove
      ============================================
      WARNING: possible recursive locking detected
      ...
      pci_bus 0000:01: busn_res: [bus 01] is released
    
    The remove recursively removes the subtree below the bridge.  Each call
    uses a different lock so there's no deadlock, but the locks were all
    created with the same lockdep key so the lockdep checker can't tell them
    apart.
    
    Mark the "remove" sysfs attribute with __ATTR_IGNORE_LOCKDEP() as it is
    safe to ignore the lockdep check between different "remove" kernfs
    instances.
    
    There's discussion about a similar issue in USB at [1], which resulted in
    356c05d58af0 ("sysfs: get rid of some lockdep false positives") and
    e9b526fe7048 ("i2c: suppress lockdep warning on delete_device"), which do
    basically the same thing for USB "remove" and i2c "delete_device" files.
    
    [1] https://lore.kernel.org/r/Pine.LNX.4.44L0.1204251436140.1206-100000@iolanthe.rowland.org
    Link: https://lore.kernel.org/r/20190526225151.3865-1-marek.vasut@gmail.com
    Signed-off-by: Marek Vasut <marek.vasut+renesas@gmail.com>
    [bhelgaas: trim commit log, details at above links]
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Geert Uytterhoeven <geert+renesas@glider.be>
    Cc: Phil Edworthy <phil.edworthy@renesas.com>
    Cc: Simon Horman <horms+renesas@verge.net.au>
    Cc: Tejun Heo <tj@kernel.org>
    Cc: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d45fbee76af0b95e7256bf2c13c2c5a7d4c5457
Author: Stefan Roese <sr@denx.de>
Date:   Thu Jun 20 08:24:19 2019 +0200

    serial: mctrl_gpio: Check if GPIO property exisits before requesting it
    
    [ Upstream commit d99482673f950817b30caf3fcdfb31179b050ce1 ]
    
    This patch adds a check for the GPIOs property existence, before the
    GPIO is requested. This fixes an issue seen when the 8250 mctrl_gpio
    support is added (2nd patch in this patch series) on x86 platforms using
    ACPI.
    
    Here Mika's comments from 2016-08-09:
    
    "
    I noticed that with v4.8-rc1 serial console of some of our Broxton
    systems does not work properly anymore. I'm able to see output but input
    does not work.
    
    I bisected it down to commit 4ef03d328769eddbfeca1f1c958fdb181a69c341
    ("tty/serial/8250: use mctrl_gpio helpers").
    
    The reason why it fails is that in ACPI we do not have names for GPIOs
    (except when _DSD is used) so we use the "idx" to index into _CRS GPIO
    resources. Now mctrl_gpio_init_noauto() goes through a list of GPIOs
    calling devm_gpiod_get_index_optional() passing "idx" of 0 for each. The
    UART device in Broxton has following (simplified) ACPI description:
    
        Device (URT4)
        {
            ...
            Name (_CRS, ResourceTemplate () {
                GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GPO0", 0x00, ResourceConsumer)
                {
                    0x003A
                }
                GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                        "\\_SB.GPO0", 0x00, ResourceConsumer)
                {
                    0x003D
                }
            })
    
    In this case it finds the first GPIO (0x003A which happens to be RX pin
    for that UART), turns it into GPIO which then breaks input for the UART
    device. This also breaks systems with bluetooth connected to UART (those
    typically have some GPIOs in their _CRS).
    
    Any ideas how to fix this?
    
    We cannot just drop the _CRS index lookup fallback because that would
    break many existing machines out there so maybe we can limit this to
    only DT enabled machines. Or alternatively probe if the property first
    exists before trying to acquire the GPIOs (using
    device_property_present()).
    "
    
    This patch implements the fix suggested by Mika in his statement above.
    
    Signed-off-by: Stefan Roese <sr@denx.de>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Tested-by: Yegor Yefremov <yegorslists@googlemail.com>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Yegor Yefremov <yegorslists@googlemail.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Giulio Benetti <giulio.benetti@micronovasrl.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7f206f42fb64adc8a4b9b0ea24d4e2c666c9cb9
Author: Sean Paul <seanpaul@chromium.org>
Date:   Mon Jun 17 16:12:51 2019 -0400

    drm/msm: Depopulate platform on probe failure
    
    [ Upstream commit 4368a1539c6b41ac3cddc06f5a5117952998804c ]
    
    add_display_components() calls of_platform_populate, and we depopluate
    on pdev remove, but not when probe fails. So if we get a probe deferral
    in one of the components, we won't depopulate the platform. This causes
    the core to keep references to devices which should be destroyed, which
    causes issues when those same devices try to re-initialize on the next
    probe attempt.
    
    I think this is the reason we had issues with the gmu's device-managed
    resources on deferral (worked around in commit 94e3a17f33a5).
    
    Reviewed-by: Rob Clark <robdclark@chromium.org>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190617201301.133275-3-sean@poorly.run
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 216462fa884f7dfaa8a866410b4e62358f36b476
Author: Alexey Kardashevskiy <aik@ozlabs.ru>
Date:   Wed Jun 5 13:38:14 2019 +1000

    powerpc/pci/of: Fix OF flags parsing for 64bit BARs
    
    [ Upstream commit df5be5be8735ef2ae80d5ae1f2453cd81a035c4b ]
    
    When the firmware does PCI BAR resource allocation, it passes the assigned
    addresses and flags (prefetch/64bit/...) via the "reg" property of
    a PCI device device tree node so the kernel does not need to do
    resource allocation.
    
    The flags are stored in resource::flags - the lower byte stores
    PCI_BASE_ADDRESS_SPACE/etc bits and the other bytes are IORESOURCE_IO/etc.
    Some flags from PCI_BASE_ADDRESS_xxx and IORESOURCE_xxx are duplicated,
    such as PCI_BASE_ADDRESS_MEM_PREFETCH/PCI_BASE_ADDRESS_MEM_TYPE_64/etc.
    When parsing the "reg" property, we copy the prefetch flag but we skip
    on PCI_BASE_ADDRESS_MEM_TYPE_64 which leaves the flags out of sync.
    
    The missing IORESOURCE_MEM_64 flag comes into play under 2 conditions:
    1. we remove PCI_PROBE_ONLY for pseries (by hacking pSeries_setup_arch()
    or by passing "/chosen/linux,pci-probe-only");
    2. we request resource alignment (by passing pci=resource_alignment=
    via the kernel cmd line to request PAGE_SIZE alignment or defining
    ppc_md.pcibios_default_alignment which returns anything but 0). Note that
    the alignment requests are ignored if PCI_PROBE_ONLY is enabled.
    
    With 1) and 2), the generic PCI code in the kernel unconditionally
    decides to:
    - reassign the BARs in pci_specified_resource_alignment() (works fine)
    - write new BARs to the device - this fails for 64bit BARs as the generic
    code looks at IORESOURCE_MEM_64 (not set) and writes only lower 32bits
    of the BAR and leaves the upper 32bit unmodified which breaks BAR mapping
    in the hypervisor.
    
    This fixes the issue by copying the flag. This is useful if we want to
    enforce certain BAR alignment per platform as handling subpage sized BARs
    is proven to cause problems with hotplug (SLOF already aligns BARs to 64k).
    
    Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>
    Reviewed-by: Sam Bobroff <sbobroff@linux.ibm.com>
    Reviewed-by: Oliver O'Halloran <oohall@gmail.com>
    Reviewed-by: Shawn Anastasio <shawn@anastas.io>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5d3ad905af431fcfd1e51ce97c02c062c076e1a7
Author: Raul E Rangel <rrangel@chromium.org>
Date:   Mon Jun 17 14:10:13 2019 -0600

    mmc: sdhci: sdhci-pci-o2micro: Check if controller supports 8-bit width
    
    [ Upstream commit de23f0b757766d9fae59df97da6e8bdc5b231351 ]
    
    The O2 controller supports 8-bit EMMC access.
    
    JESD84-B51 section A.6.3.a defines the bus testing procedure that
    `mmc_select_bus_width()` implements. This is used to determine the actual
    bus width of the eMMC.
    
    Signed-off-by: Raul E Rangel <rrangel@chromium.org>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bf7cf9fb02dbe59a3c471bdbe2088355c5946f08
Author: Andrzej Pietrasiewicz <andrzej.p@collabora.com>
Date:   Mon Jun 3 19:05:28 2019 +0200

    usb: gadget: Zero ffs_io_data
    
    [ Upstream commit 508595515f4bcfe36246e4a565cf280937aeaade ]
    
    In some cases the "Allocate & copy" block in ffs_epfile_io() is not
    executed. Consequently, in such a case ffs_alloc_buffer() is never called
    and struct ffs_io_data is not initialized properly. This in turn leads to
    problems when ffs_free_buffer() is called at the end of ffs_epfile_io().
    
    This patch uses kzalloc() instead of kmalloc() in the aio case and memset()
    in non-aio case to properly initialize struct ffs_io_data.
    
    Signed-off-by: Andrzej Pietrasiewicz <andrzej.p@collabora.com>
    Signed-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ac380eb479de4a37ac15a121e10fd37876ccedac
Author: Serge Semin <fancer.lancer@gmail.com>
Date:   Wed May 8 13:44:41 2019 +0300

    tty: serial_core: Set port active bit in uart_port_activate
    
    [ Upstream commit 13b18d35909707571af9539f7731389fbf0feb31 ]
    
    A bug was introduced by commit b3b576461864 ("tty: serial_core: convert
    uart_open to use tty_port_open"). It caused a constant warning printed
    into the system log regarding the tty and port counter mismatch:
    
    [   21.644197] ttyS ttySx: tty_port_close_start: tty->count = 1 port count = 2
    
    in case if session hangup was detected so the warning is printed starting
    from the second open-close iteration.
    
    Particularly the problem was discovered in situation when there is a
    serial tty device without hardware back-end being setup. It is considered
    by the tty-serial subsystems as a hardware problem with session hang up.
    In this case uart_startup() will return a positive value with TTY_IO_ERROR
    flag set in corresponding tty_struct instance. The same value will get
    passed to be returned from the activate() callback and then being returned
    from tty_port_open(). But since in this case tty_port_block_til_ready()
    isn't called the TTY_PORT_ACTIVE flag isn't set (while the method had been
    called before tty_port_open conversion was introduced and the rest of the
    subsystem code expected the bit being set in this case), which prevents the
    uart_hangup() method to perform any cleanups including the tty port
    counter setting to zero. So the next attempt to open/close the tty device
    will discover the counters mismatch.
    
    In order to fix the problem we need to manually set the TTY_PORT_ACTIVE
    flag in case if uart_startup() returned a positive value. In this case
    the hang up procedure will perform a full set of cleanup actions including
    the port ref-counter resetting.
    
    Fixes: b3b576461864 "tty: serial_core: convert uart_open to use tty_port_open"
    Signed-off-by: Serge Semin <fancer.lancer@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 785e11c06db3ebd154fa1cf290170269140a5285
Author: Sergey Organov <sorganov@gmail.com>
Date:   Tue Jun 11 15:05:24 2019 +0300

    serial: imx: fix locking in set_termios()
    
    [ Upstream commit 4e828c3e09201512be5ee162393f334321f7cf01 ]
    
    imx_uart_set_termios() called imx_uart_rts_active(), or
    imx_uart_rts_inactive() before taking port->port.lock.
    
    As a consequence, sport->port.mctrl that these functions modify
    could have been changed without holding port->port.lock.
    
    Moved locking of port->port.lock above the calls to fix the issue.
    
    Signed-off-by: Sergey Organov <sorganov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 741f8b39b6d4fe284ede321732484059ab7d27a4
Author: Douglas Anderson <dianders@chromium.org>
Date:   Fri Jun 14 15:47:29 2019 -0700

    drm/rockchip: Properly adjust to a true clock in adjusted_mode
    
    [ Upstream commit 99b9683f2142b20bad78e61f7f829e8714e45685 ]
    
    When fixing up the clock in vop_crtc_mode_fixup() we're not doing it
    quite correctly.  Specifically if we've got the true clock 266666667 Hz,
    we'll perform this calculation:
       266666667 / 1000 => 266666
    
    Later when we try to set the clock we'll do clk_set_rate(266666 *
    1000).  The common clock framework won't actually pick the proper clock
    in this case since it always wants clocks <= the specified one.
    
    Let's solve this by using DIV_ROUND_UP.
    
    Fixes: b59b8de31497 ("drm/rockchip: return a true clock rate to adjusted_mode")
    Signed-off-by: Douglas Anderson <dianders@chromium.org>
    Signed-off-by: Sean Paul <seanpaul@chromium.org>
    Reviewed-by: Yakir Yang <ykk@rock-chips.com>
    Signed-off-by: Heiko Stuebner <heiko@sntech.de>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190614224730.98622-1-dianders@chromium.org
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit fd0d171c706462bcb5bfd2fc21997aac6dc3d801
Author: Nathan Lynch <nathanl@linux.ibm.com>
Date:   Tue Jun 11 23:45:05 2019 -0500

    powerpc/pseries/mobility: prevent cpu hotplug during DT update
    
    [ Upstream commit e59a175faa8df9d674247946f2a5a9c29c835725 ]
    
    CPU online/offline code paths are sensitive to parts of the device
    tree (various cpu node properties, cache nodes) that can be changed as
    a result of a migration.
    
    Prevent CPU hotplug while the device tree potentially is inconsistent.
    
    Fixes: 410bccf97881 ("powerpc/pseries: Partition migration in the kernel")
    Signed-off-by: Nathan Lynch <nathanl@linux.ibm.com>
    Reviewed-by: Gautham R. Shenoy <ego@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6a7047471073c2cf8e375b2fe5a71bacf9799973
Author: Hariprasad Kelam <hariprasad.kelam@gmail.com>
Date:   Thu Jun 13 08:02:08 2019 +0530

    drm/amd/display: fix compilation error
    
    [ Upstream commit 88099f53cc3717437f5fc9cf84205c5b65118377 ]
    
    this patch fixes below compilation error
    
    drivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_hw_sequencer.c: In
    function ‘dcn10_apply_ctx_for_surface’:
    drivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_hw_sequencer.c:2378:3:
    error: implicit declaration of function ‘udelay’
    [-Werror=implicit-function-declaration]
       udelay(underflow_check_delay_us);
    
    Signed-off-by: Hariprasad Kelam <hariprasad.kelam@gmail.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 709ca46f1d46e2fcc7f1ef57053f8ed696a35e4e
Author: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date:   Tue May 28 14:04:02 2019 +0900

    phy: renesas: rcar-gen2: Fix memory leak at error paths
    
    [ Upstream commit d4a36e82924d3305a17ac987a510f3902df5a4b2 ]
    
    This patch fixes memory leak at error paths of the probe function.
    In for_each_child_of_node, if the loop returns, the driver should
    call of_put_node() before returns.
    
    Reported-by: Julia Lawall <julia.lawall@lip6.fr>
    Fixes: 1233f59f745b237 ("phy: Renesas R-Car Gen2 PHY driver")
    Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
    Reviewed-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Signed-off-by: Kishon Vijay Abraham I <kishon@ti.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 725c7b78115074f67c4f5f7ece3fcb3abd7d9d1a
Author: David Riley <davidriley@chromium.org>
Date:   Mon Jun 10 14:18:10 2019 -0700

    drm/virtio: Add memory barriers for capset cache.
    
    [ Upstream commit 9ff3a5c88e1f1ab17a31402b96d45abe14aab9d7 ]
    
    After data is copied to the cache entry, atomic_set is used indicate
    that the data is the entry is valid without appropriate memory barriers.
    Similarly the read side was missing the corresponding memory barriers.
    
    Signed-off-by: David Riley <davidriley@chromium.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/20190610211810.253227-5-davidriley@chromium.org
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 11b4e9f3695c155f71cb2bc56d761284bf5e65b1
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Tue Jun 4 15:21:14 2019 -0400

    drm/amd/display: Always allocate initial connector state state
    
    [ Upstream commit f04bee34d6e35df26cbb2d65e801adfd0d8fe20d ]
    
    [Why]
    Unlike our regular connectors, MST connectors don't start off with
    an initial connector state. This causes a NULL pointer dereference to
    occur when attaching the bpc property since it tries to modify the
    connector state.
    
    We need an initial connector state on the connector to avoid the crash.
    
    [How]
    Use our reset helper to allocate an initial state and reset the values
    to their defaults. We were already doing this before, just not for
    MST connectors.
    
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Reviewed-by: Leo Li <sunpeng.li@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1a2425b597fa46adb043ae5c2bf81223142526f3
Author: Rautkoski Kimmo EXT <ext-kimmo.rautkoski@vaisala.com>
Date:   Fri May 24 09:19:22 2019 +0000

    serial: 8250: Fix TX interrupt handling condition
    
    [ Upstream commit db1b5bc047b3cadaedab3826bba82c3d9e023c4b ]
    
    Interrupt handler checked THRE bit (transmitter holding register
    empty) in LSR to detect if TX fifo is empty.
    In case when there is only receive interrupts the TX handling
    got called because THRE bit in LSR is set when there is no
    transmission (FIFO empty). TX handling caused TX stop, which in
    RS-485 half-duplex mode actually resets receiver FIFO. This is not
    desired during reception because of possible data loss.
    
    The fix is to check if THRI is set in IER in addition of the TX
    fifo status. THRI in IER is set when TX is started and cleared
    when TX is stopped.
    This ensures that TX handling is only called when there is really
    transmission on going and an interrupt for THRE and not when there
    are only RX interrupts.
    
    Signed-off-by: Kimmo Rautkoski <ext-kimmo.rautkoski@vaisala.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0e7d6b7fa55679915bded19ae0de9f7460ffcfd
Author: Jorge Ramirez-Ortiz <jorge.ramirez-ortiz@linaro.org>
Date:   Mon Jun 10 19:23:08 2019 +0200

    tty: serial: msm_serial: avoid system lockup condition
    
    [ Upstream commit ba3684f99f1b25d2a30b6956d02d339d7acb9799 ]
    
    The function msm_wait_for_xmitr can be taken with interrupts
    disabled. In order to avoid a potential system lockup - demonstrated
    under stress testing conditions on SoC QCS404/5 - make sure we wait
    for a bounded amount of time.
    
    Tested on SoC QCS404.
    
    Signed-off-by: Jorge Ramirez-Ortiz <jorge.ramirez-ortiz@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e40f5a873fc7de360130740c20947b0b7a9b0e1d
Author: Kefeng Wang <wangkefeng.wang@huawei.com>
Date:   Fri May 31 21:37:33 2019 +0800

    tty/serial: digicolor: Fix digicolor-usart already registered warning
    
    [ Upstream commit c7ad9ba0611c53cfe194223db02e3bca015f0674 ]
    
    When modprobe/rmmod/modprobe module, if platform_driver_register() fails,
    the kernel complained,
    
      proc_dir_entry 'driver/digicolor-usart' already registered
      WARNING: CPU: 1 PID: 5636 at fs/proc/generic.c:360 proc_register+0x19d/0x270
    
    Fix this by adding uart_unregister_driver() when platform_driver_register() fails.
    
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Acked-by: Baruch Siach <baruch@tkos.co.il>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 5c0e54839d4803595c3a7a12cb5902b104814da8
Author: Wang Hai <wanghai26@huawei.com>
Date:   Wed May 15 22:37:25 2019 +0800

    memstick: Fix error cleanup path of memstick_init
    
    [ Upstream commit 65f1a0d39c289bb6fc85635528cd36c4b07f560e ]
    
    If bus_register fails. On its error handling path, it has cleaned up
    what it has done. There is no need to call bus_unregister again.
    Otherwise, if bus_unregister is called, issues such as null-ptr-deref
    will arise.
    
    Syzkaller report this:
    
    kobject_add_internal failed for memstick (error: -12 parent: bus)
    BUG: KASAN: null-ptr-deref in sysfs_remove_file_ns+0x1b/0x40 fs/sysfs/file.c:467
    Read of size 8 at addr 0000000000000078 by task syz-executor.0/4460
    
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0xa9/0x10e lib/dump_stack.c:113
     __kasan_report+0x171/0x18d mm/kasan/report.c:321
     kasan_report+0xe/0x20 mm/kasan/common.c:614
     sysfs_remove_file_ns+0x1b/0x40 fs/sysfs/file.c:467
     sysfs_remove_file include/linux/sysfs.h:519 [inline]
     bus_remove_file+0x6c/0x90 drivers/base/bus.c:145
     remove_probe_files drivers/base/bus.c:599 [inline]
     bus_unregister+0x6e/0x100 drivers/base/bus.c:916 ? 0xffffffffc1590000
     memstick_init+0x7a/0x1000 [memstick]
     do_one_initcall+0xb9/0x3b5 init/main.c:914
     do_init_module+0xe0/0x330 kernel/module.c:3468
     load_module+0x38eb/0x4270 kernel/module.c:3819
     __do_sys_finit_module+0x162/0x190 kernel/module.c:3909
     do_syscall_64+0x72/0x2a0 arch/x86/entry/common.c:298
     entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    Fixes: baf8532a147d ("memstick: initial commit for Sony MemoryStick support")
    Reported-by: Hulk Robot <hulkci@huawei.com>
    Signed-off-by: Wang Hai <wanghai26@huawei.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0a50a272389f58ad45e40c5ab018a8ba76a3ddc3
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Thu Jun 6 23:15:44 2019 +0200

    drm/crc-debugfs: Also sprinkle irqrestore over early exits
    
    [ Upstream commit d99004d7201aa653658ff2390d6e516567c96ebc ]
    
    I. was. blind.
    
    Caught with vkms, which has some really slow crc computation function.
    
    Fixes: 1882018a70e0 ("drm/crc-debugfs: User irqsafe spinlock in drm_crtc_add_crc_entry")
    Cc: Rodrigo Siqueira <rodrigosiqueiramelo@gmail.com>
    Cc: Tomeu Vizoso <tomeu.vizoso@collabora.com>
    Cc: Emil Velikov <emil.velikov@collabora.com>
    Cc: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Cc: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Reviewed-by: Emil Velikov <emil.velikov@collabora.com>
    Reviewed-by: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190606211544.5389-1-daniel.vetter@ffwll.ch
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 26a66454541c8e57e4e96fb0e1fdb4342dba1616
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Wed Jun 5 21:45:56 2019 +0200

    drm/crc-debugfs: User irqsafe spinlock in drm_crtc_add_crc_entry
    
    [ Upstream commit 1882018a70e06376234133e69ede9dd743b4dbd9 ]
    
    We can be called from any context, we need to be prepared.
    
    Noticed this while hacking on vkms, which calls this function from a
    normal worker. Which really upsets lockdep.
    
    Cc: Rodrigo Siqueira <rodrigosiqueiramelo@gmail.com>
    Cc: Tomeu Vizoso <tomeu.vizoso@collabora.com>
    Cc: Emil Velikov <emil.velikov@collabora.com>
    Cc: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Reviewed-by: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Reviewed-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190605194556.16744-1-daniel.vetter@ffwll.ch
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 4d14323a2eb556a9d06d0a956618662bc9dad1c1
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Jun 5 10:46:05 2019 +0200

    gpu: host1x: Increase maximum DMA segment size
    
    [ Upstream commit 1e390478cfb527e34c9ab89ba57212cb05c33c51 ]
    
    Recent versions of the DMA API debug code have started to warn about
    violations of the maximum DMA segment size. This is because the segment
    size defaults to 64 KiB, which can easily be exceeded in large buffer
    allocations such as used in DRM/KMS for framebuffers.
    
    Technically the Tegra SMMU and ARM SMMU don't have a maximum segment
    size (they map individual pages irrespective of whether they are
    contiguous or not), so the choice of 4 MiB is a bit arbitrary here. The
    maximum segment size is a 32-bit unsigned integer, though, so we can't
    set it to the correct maximum size, which would be the size of the
    aperture.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f9bfd6bd8223b0fccd12d39131a8c6d5d3333cc0
Author: Jyri Sarha <jsarha@ti.com>
Date:   Mon May 27 16:47:54 2019 +0300

    drm/bridge: sii902x: pixel clock unit is 10kHz instead of 1kHz
    
    [ Upstream commit 8dbfc5b65023b67397aca28e8adb25c819f6398c ]
    
    The pixel clock unit in the first two registers (0x00 and 0x01) of
    sii9022 is 10kHz, not 1kHz as in struct drm_display_mode. Division by
    10 fixes the issue.
    
    Signed-off-by: Jyri Sarha <jsarha@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/1a2a8eae0b9d6333e7a5841026bf7fd65c9ccd09.1558964241.git.jsarha@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7af9abd7d6bd7df0aea2408d6541a011cfaa99b3
Author: Tomi Valkeinen <tomi.valkeinen@ti.com>
Date:   Tue May 28 11:27:44 2019 +0300

    drm/bridge: tc358767: read display_props in get_modes()
    
    [ Upstream commit 3231573065ad4f4ecc5c9147b24f29f846dc0c2f ]
    
    We need to know the link bandwidth to filter out modes we cannot
    support, so we need to have read the display props before doing the
    filtering.
    
    To ensure we have up to date display props, call tc_get_display_props()
    in the beginning of tc_connector_get_modes().
    
    Signed-off-by: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Reviewed-by: Andrzej Hajda <a.hajda@samsung.com>
    Signed-off-by: Andrzej Hajda <a.hajda@samsung.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190528082747.3631-22-tomi.valkeinen@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49c7230d8f104abeab20eb6e4dd98a9870a20360
Author: Alex Williamson <alex.williamson@redhat.com>
Date:   Wed May 1 11:00:16 2019 -0600

    PCI: Return error if cannot probe VF
    
    [ Upstream commit 76002d8b48c4b08c9bd414517dd295e132ad910b ]
    
    Commit 0e7df22401a3 ("PCI: Add sysfs sriov_drivers_autoprobe to control
    VF driver binding") allows the user to specify that drivers for VFs of
    a PF should not be probed, but it actually causes pci_device_probe() to
    return success back to the driver core in this case.  Therefore by all
    sysfs appearances the device is bound to a driver, the driver link from
    the device exists as does the device link back from the driver, yet the
    driver's probe function is never called on the device.  We also fail to
    do any sort of cleanup when we're prohibited from probing the device,
    the IRQ setup remains in place and we even hold a device reference.
    
    Instead, abort with errno before any setup or references are taken when
    pci_device_can_probe() prevents us from trying to probe the device.
    
    Link: https://lore.kernel.org/lkml/155672991496.20698.4279330795743262888.stgit@gimli.home
    Fixes: 0e7df22401a3 ("PCI: Add sysfs sriov_drivers_autoprobe to control VF driver binding")
    Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 2a18d76592e0d86c7fddcc6a7aa52509a2900f9d
Author: Gen Zhang <blackgod016574@gmail.com>
Date:   Fri May 24 10:32:22 2019 +0800

    drm/edid: Fix a missing-check bug in drm_load_edid_firmware()
    
    [ Upstream commit 9f1f1a2dab38d4ce87a13565cf4dc1b73bef3a5f ]
    
    In drm_load_edid_firmware(), fwstr is allocated by kstrdup(). And fwstr
    is dereferenced in the following codes. However, memory allocation
    functions such as kstrdup() may fail and returns NULL. Dereferencing
    this null pointer may cause the kernel go wrong. Thus we should check
    this kstrdup() operation.
    Further, if kstrdup() returns NULL, we should return ERR_PTR(-ENOMEM) to
    the caller site.
    
    Signed-off-by: Gen Zhang <blackgod016574@gmail.com>
    Reviewed-by: Jani Nikula <jani.nikula@intel.com>
    Signed-off-by: Jani Nikula <jani.nikula@intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190524023222.GA5302@zhanggen-UX430UQ
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 210dfe6309112dd028bf06561b828a749b6e1169
Author: Oak Zeng <Oak.Zeng@amd.com>
Date:   Fri Feb 8 15:44:35 2019 -0600

    drm/amdkfd: Fix sdma queue map issue
    
    [ Upstream commit 065e4bdfa1f3ab2884c110394d8b7e7ebe3b988c ]
    
    Previous codes assumes there are two sdma engines.
    This is not true e.g., Raven only has 1 SDMA engine.
    Fix the issue by using sdma engine number info in
    device_info.
    
    Signed-off-by: Oak Zeng <Oak.Zeng@amd.com>
    Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit db64bc13944013357d231cbf9d1aee798d7b9892
Author: Oak Zeng <ozeng@amd.com>
Date:   Tue Nov 27 22:08:25 2018 -0600

    drm/amdkfd: Fix a potential memory leak
    
    [ Upstream commit e73390d181103a19e1111ec2f25559a0570e9fe0 ]
    
    Free mqd_mem_obj it GTT buffer allocation for MQD+control stack fails.
    
    Signed-off-by: Oak Zeng <ozeng@amd.com>
    Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6b1d2871fe369cb65f087cd300bad6af50764ac7
Author: Paul Hsieh <paul.hsieh@amd.com>
Date:   Fri May 3 23:50:10 2019 +0800

    drm/amd/display: Disable ABM before destroy ABM struct
    
    [ Upstream commit 1090d58d4815b1fcd95a80987391006c86398b4c ]
    
    [Why]
    When disable driver, OS will set backlight optimization
    then do stop device.  But this flag will cause driver to
    enable ABM when driver disabled.
    
    [How]
    Send ABM disable command before destroy ABM construct
    
    Signed-off-by: Paul Hsieh <paul.hsieh@amd.com>
    Reviewed-by: Anthony Koo <Anthony.Koo@amd.com>
    Acked-by: Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c242a531bb068c91bea7454353206330423ec1a6
Author: Tiecheng Zhou <Tiecheng.Zhou@amd.com>
Date:   Tue May 14 10:03:35 2019 +0800

    drm/amdgpu/sriov: Need to initialize the HDP_NONSURFACE_BAStE
    
    [ Upstream commit fe2b5323d2c3cedaa3bf943dc7a0d233c853c914 ]
    
    it requires to initialize HDP_NONSURFACE_BASE, so as to avoid
    using the value left by a previous VM under sriov scenario.
    
    v2: it should not hurt baremetal, generalize it for both sriov
    and baremetal
    
    Signed-off-by: Emily Deng <Emily.Deng@amd.com>
    Signed-off-by: Tiecheng Zhou <Tiecheng.Zhou@amd.com>
    Reviewed-by: Christian König <christian.koenig@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 147137f86b5b72aea3af4edb2e66f10c0baa841e
Author: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
Date:   Tue Apr 16 10:30:29 2019 -0400

    drm/amd/display: Fill prescale_params->scale for RGB565
    
    [ Upstream commit 1352c779cb74d427f4150cbe779a2f7886f70cae ]
    
    [Why]
    An assertion is thrown when using SURFACE_PIXEL_FORMAT_GRPH_RGB565
    formats on DCE since the prescale_params->scale wasn't being filled.
    
    Found by a dmesg-fail when running the
    igt@kms_plane@pixel-format-pipe-a-planes test on Baffin.
    
    [How]
    Fill in the scale parameter.
    
    Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
    Reviewed-by: Roman Li <Roman.Li@amd.com>
    Acked-by: Bhawanpreet Lakha <Bhawanpreet.Lakha@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 08b0bcc8076b63778a67b3ab32eeda48e02de1b9
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Wed May 22 12:17:11 2019 +0000

    tty: serial: cpm_uart - fix init when SMC is relocated
    
    [ Upstream commit 06aaa3d066db87e8478522d910285141d44b1e58 ]
    
    SMC relocation can also be activated earlier by the bootloader,
    so the driver's behaviour cannot rely on selected kernel config.
    
    When the SMC is relocated, CPM_CR_INIT_TRX cannot be used.
    
    But the only thing CPM_CR_INIT_TRX does is to clear the
    rstate and tstate registers, so this can be done manually,
    even when SMC is not relocated.
    
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Fixes: 9ab921201444 ("cpm_uart: fix non-console port startup bug")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c901780d92946da11b67d4898e6e323fab43c3b7
Author: Wen Yang <wen.yang99@zte.com.cn>
Date:   Mon Apr 15 14:24:02 2019 +0800

    pinctrl: rockchip: fix leaked of_node references
    
    [ Upstream commit 3c89c70634bb0b6f48512de873e7a45c7e1fbaa5 ]
    
    The call to of_parse_phandle returns a node pointer with refcount
    incremented thus it must be explicitly decremented after the last
    usage.
    
    Detected by coccinelle with the following warnings:
    ./drivers/pinctrl/pinctrl-rockchip.c:3221:2-8: ERROR: missing of_node_put; acquired a node pointer with refcount incremented on line 3196, but without a corresponding object release within this function.
    ./drivers/pinctrl/pinctrl-rockchip.c:3223:1-7: ERROR: missing of_node_put; acquired a node pointer with refcount incremented on line 3196, but without a corresponding object release within this function.
    
    Signed-off-by: Wen Yang <wen.yang99@zte.com.cn>
    Cc: Linus Walleij <linus.walleij@linaro.org>
    Cc: Heiko Stuebner <heiko@sntech.de>
    Cc: linux-gpio@vger.kernel.org
    Cc: linux-rockchip@lists.infradead.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a9dfb6e43677ddf27d33339597fc9ed9ee706272
Author: Serge Semin <fancer.lancer@gmail.com>
Date:   Tue May 14 13:14:12 2019 +0300

    tty: max310x: Fix invalid baudrate divisors calculator
    
    [ Upstream commit 35240ba26a932b279a513f66fa4cabfd7af55221 ]
    
    Current calculator doesn't do it' job quite correct. First of all the
    max310x baud-rates generator supports the divisor being less than 16.
    In this case the x2/x4 modes can be used to double or quadruple
    the reference frequency. But the current baud-rate setter function
    just filters all these modes out by the first condition and setups
    these modes only if there is a clocks-baud division remainder. The former
    doesn't seem right at all, since enabling the x2/x4 modes causes the line
    noise tolerance reduction and should be only used as a last resort to
    enable a requested too high baud-rate.
    
    Finally the fraction is supposed to be calculated from D = Fref/(c*baud)
    formulae, but not from D % 16, which causes the precision loss. So to speak
    the current baud-rate calculator code works well only if the baud perfectly
    fits to the uart reference input frequency.
    
    Lets fix the calculator by implementing the algo fully compliant with
    the fractional baud-rate generator described in the datasheet:
    D = Fref / (c*baud), where c={16,8,4} is the x1/x2/x4 rate mode
    respectively, Fref - reference input frequency. The divisor fraction is
    calculated from the same formulae, but making sure it is found with a
    resolution of 0.0625 (four bits).
    
    Signed-off-by: Serge Semin <fancer.lancer@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b0084c1b505802f0a410d4beef58336a6114f4b6
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Tue May 14 14:38:38 2019 -0700

    usb: core: hub: Disable hub-initiated U1/U2
    
    [ Upstream commit 561759292774707b71ee61aecc07724905bb7ef1 ]
    
    If the device rejects the control transfer to enable device-initiated
    U1/U2 entry, then the device will not initiate U1/U2 transition. To
    improve the performance, the downstream port should not initate
    transition to U1/U2 to avoid the delay from the device link command
    response (no packet can be transmitted while waiting for a response from
    the device). If the device has some quirks and does not implement U1/U2,
    it may reject all the link state change requests, and the downstream
    port may resend and flood the bus with more requests. This will affect
    the device performance even further. This patch disables the
    hub-initated U1/U2 if the device-initiated U1/U2 entry fails.
    
    Reference: USB 3.2 spec 7.2.4.2.3
    
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 19755a124f4c3bc3a5c41f10df066b813f07a5ab
Author: Quentin Deslandes <quentin.deslandes@itdev.co.uk>
Date:   Mon May 20 16:39:04 2019 +0000

    staging: vt6656: use meaningful error code during buffer allocation
    
    [ Upstream commit d8c2869300ab5f7a19bf6f5a04fe473c5c9887e3 ]
    
    Check on called function's returned value for error and return 0 on
    success or a negative errno value on error instead of a boolean value.
    
    Signed-off-by: Quentin Deslandes <quentin.deslandes@itdev.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b59f7650a507c1bb389070d82b4e2c0999004609
Author: Fabien Dessenne <fabien.dessenne@st.com>
Date:   Wed Apr 24 14:51:26 2019 +0200

    iio: adc: stm32-dfsdm: missing error case during probe
    
    [ Upstream commit d2fc0156963cae8f1eec8e2dd645fbbf1e1c1c8e ]
    
    During probe, check the devm_ioremap_resource() error value.
    Also return the devm_clk_get() error value instead of -EINVAL.
    
    Signed-off-by: Fabien Dessenne <fabien.dessenne@st.com>
    Acked-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 302e4cdca1f4b46c0506489d1a4042f950b427c1
Author: Fabien Dessenne <fabien.dessenne@st.com>
Date:   Wed Apr 24 14:51:25 2019 +0200

    iio: adc: stm32-dfsdm: manage the get_irq error case
    
    [ Upstream commit 3e53ef91f826957dec013c47707ffc1bb42b42d7 ]
    
    During probe, check the "get_irq" error value.
    
    Signed-off-by: Fabien Dessenne <fabien.dessenne@st.com>
    Acked-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 586946ce83e4fb55c08381c6715fa743b2801363
Author: Peter Ujfalusi <peter.ujfalusi@ti.com>
Date:   Tue Feb 26 10:11:53 2019 +0200

    drm/panel: simple: Fix panel_simple_dsi_probe
    
    [ Upstream commit 7ad9db66fafb0f0ad53fd2a66217105da5ddeffe ]
    
    In case mipi_dsi_attach() fails remove the registered panel to avoid added
    panel without corresponding device.
    
    Signed-off-by: Peter Ujfalusi <peter.ujfalusi@ti.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190226081153.31334-1-peter.ujfalusi@ti.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 49fb03de361d9e77be31279a99684074199ffdcb
Author: Sunil Muthuswamy <sunilmut@microsoft.com>
Date:   Mon Jun 17 19:26:25 2019 +0000

    hvsock: fix epollout hang from race condition
    
    [ Upstream commit cb359b60416701c8bed82fec79de25a144beb893 ]
    
    Currently, hvsock can enter into a state where epoll_wait on EPOLLOUT will
    not return even when the hvsock socket is writable, under some race
    condition. This can happen under the following sequence:
    - fd = socket(hvsocket)
    - fd_out = dup(fd)
    - fd_in = dup(fd)
    - start a writer thread that writes data to fd_out with a combination of
      epoll_wait(fd_out, EPOLLOUT) and
    - start a reader thread that reads data from fd_in with a combination of
      epoll_wait(fd_in, EPOLLIN)
    - On the host, there are two threads that are reading/writing data to the
      hvsocket
    
    stack:
    hvs_stream_has_space
    hvs_notify_poll_out
    vsock_poll
    sock_poll
    ep_poll
    
    Race condition:
    check for epollout from ep_poll():
            assume no writable space in the socket
            hvs_stream_has_space() returns 0
    check for epollin from ep_poll():
            assume socket has some free space < HVS_PKT_LEN(HVS_SEND_BUF_SIZE)
            hvs_stream_has_space() will clear the channel pending send size
            host will not notify the guest because the pending send size has
                    been cleared and so the hvsocket will never mark the
                    socket writable
    
    Now, the EPOLLOUT will never return even if the socket write buffer is
    empty.
    
    The fix is to set the pending size to the default size and never change it.
    This way the host will always notify the guest whenever the writable space
    is bigger than the pending size. The host is already optimized to *only*
    notify the guest when the pending size threshold boundary is crossed and
    not everytime.
    
    This change also reduces the cpu usage somewhat since hv_stream_has_space()
    is in the hotpath of send:
    vsock_stream_sendmsg()->hv_stream_has_space()
    Earlier hv_stream_has_space was setting/clearing the pending size on every
    call.
    
    Signed-off-by: Sunil Muthuswamy <sunilmut@microsoft.com>
    Reviewed-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
