commit 527c60e8b7a89d9e63ffa9b9f579d536e0f30568
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat May 2 08:49:02 2020 +0200

    Linux 5.4.37

commit 4e7fb753e80305dd3efa9f31072f17b8c8612713
Author: Olivier Moysan <olivier.moysan@st.com>
Date:   Wed Mar 18 15:41:23 2020 +0100

    ASoC: stm32: spdifrx: fix regmap status check
    
    commit a168dae5ea14283e8992d5282237bb0d6a3e1c06 upstream.
    
    Release resources when exiting on error.
    
    Fixes: 1a5c0b28fc56 ("ASoC: stm32: spdifrx: manage identification registers")
    
    Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
    Link: https://lore.kernel.org/r/20200318144125.9163-2-olivier.moysan@st.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4104faaeeda0e23a169c50e43f309ff7435087b1
Author: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Date:   Mon Mar 9 14:27:43 2020 -0500

    ASoC: soc-core: disable route checks for legacy devices
    
    commit a22ae72b86a4f754e8d25fbf9ea5a8f77365e531 upstream.
    
    v5.4 changes in soc-core tightened the checks on soc_dapm_add_routes,
    which results in the ASoC card probe failing.
    
    Introduce a flag to be set in machine drivers to prevent the probe
    from stopping in case of incomplete topologies or missing routes. This
    flag is for backwards compatibility only and shall not be used for
    newer machine drivers.
    
    Example with an HDaudio card with a bad topology:
    
    [ 236.177898] skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: Failed to
    add route iDisp1_out -> direct -> iDisp1 Tx
    
    [ 236.177902] skl_hda_dsp_generic skl_hda_dsp_generic:
    snd_soc_bind_card: snd_soc_dapm_add_routes failed: -19
    
    with the disable_route_checks set:
    
    [ 64.031657] skl_hda_dsp_generic skl_hda_dsp_generic: ASoC: Failed to
    add route iDisp1_out -> direct -> iDisp1 Tx
    
    [ 64.031661] skl_hda_dsp_generic skl_hda_dsp_generic:
    snd_soc_bind_card: disable_route_checks set, ignoring errors on
    add_routes
    
    Fixes: daa480bde6b3a9 ("ASoC: soc-core: tidyup for snd_soc_dapm_add_routes()")
    Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
    Acked-by: Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>
    Link: https://lore.kernel.org/r/20200309192744.18380-2-pierre-louis.bossart@linux.intel.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8c472abaedc7964e3d61cef85046f4deb701e337
Author: Ritesh Harjani <riteshh@linux.ibm.com>
Date:   Mon Mar 16 15:00:38 2020 +0530

    ext4: check for non-zero journal inum in ext4_calculate_overhead
    
    commit f1eec3b0d0a849996ebee733b053efa71803dad5 upstream.
    
    While calculating overhead for internal journal, also check
    that j_inum shouldn't be 0. Otherwise we get below error with
    xfstests generic/050 with external journal (XXX_LOGDEV config) enabled.
    
    It could be simply reproduced with loop device with an external journal
    and marking blockdev as RO before mounting.
    
    [ 3337.146838] EXT4-fs error (device pmem1p2): ext4_get_journal_inode:4634: comm mount: inode #0: comm mount: iget: illegal inode #
    ------------[ cut here ]------------
    generic_make_request: Trying to write to read-only block-device pmem1p2 (partno 2)
    WARNING: CPU: 107 PID: 115347 at block/blk-core.c:788 generic_make_request_checks+0x6b4/0x7d0
    CPU: 107 PID: 115347 Comm: mount Tainted: G             L   --------- -t - 4.18.0-167.el8.ppc64le #1
    NIP:  c0000000006f6d44 LR: c0000000006f6d40 CTR: 0000000030041dd4
    <...>
    NIP [c0000000006f6d44] generic_make_request_checks+0x6b4/0x7d0
    LR [c0000000006f6d40] generic_make_request_checks+0x6b0/0x7d0
    <...>
    Call Trace:
    generic_make_request_checks+0x6b0/0x7d0 (unreliable)
    generic_make_request+0x3c/0x420
    submit_bio+0xd8/0x200
    submit_bh_wbc+0x1e8/0x250
    __sync_dirty_buffer+0xd0/0x210
    ext4_commit_super+0x310/0x420 [ext4]
    __ext4_error+0xa4/0x1e0 [ext4]
    __ext4_iget+0x388/0xe10 [ext4]
    ext4_get_journal_inode+0x40/0x150 [ext4]
    ext4_calculate_overhead+0x5a8/0x610 [ext4]
    ext4_fill_super+0x3188/0x3260 [ext4]
    mount_bdev+0x778/0x8f0
    ext4_mount+0x28/0x50 [ext4]
    mount_fs+0x74/0x230
    vfs_kern_mount.part.6+0x6c/0x250
    do_mount+0x2fc/0x1280
    sys_mount+0x158/0x180
    system_call+0x5c/0x70
    EXT4-fs (pmem1p2): no journal found
    EXT4-fs (pmem1p2): can't get journal size
    EXT4-fs (pmem1p2): mounted filesystem without journal. Opts: dax,norecovery
    
    Fixes: 3c816ded78bb ("ext4: use journal inode to determine journal overhead")
    Reported-by: Harish Sriram <harish@linux.ibm.com>
    Signed-off-by: Ritesh Harjani <riteshh@linux.ibm.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20200316093038.25485-1-riteshh@linux.ibm.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 93af898b251fd6386e874f8803661cece1e45657
Author: Yuval Basson <ybason@marvell.com>
Date:   Sun Mar 29 20:32:49 2020 +0300

    qed: Fix use after free in qed_chain_free
    
    commit 8063f761cd7c17fc1d0018728936e0c33a25388a upstream.
    
    The qed_chain data structure was modified in
    commit 1a4a69751f4d ("qed: Chain support for external PBL") to support
    receiving an external pbl (due to iWARP FW requirements).
    The pages pointed to by the pbl are allocated in qed_chain_alloc
    and their virtual address are stored in an virtual addresses array to
    enable accessing and freeing the data. The physical addresses however
    weren't stored and were accessed directly from the external-pbl
    during free.
    
    Destroy-qp flow, leads to freeing the external pbl before the chain is
    freed, when the chain is freed it tries accessing the already freed
    external pbl, leading to a use-after-free. Therefore we need to store
    the physical addresses in additional to the virtual addresses in a
    new data structure.
    
    Fixes: 1a4a69751f4d ("qed: Chain support for external PBL")
    Signed-off-by: Michal Kalderon <mkalderon@marvell.com>
    Signed-off-by: Yuval Bason <ybason@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1610480602a475323f9c335540d47b3a95c62fd
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Mar 24 19:23:21 2020 -0700

    net: use indirect call wrappers for skb_copy_datagram_iter()
    
    commit 29f3490ba9d2399d3d1b20c4aa74592d92bd4e11 upstream.
    
    TCP recvmsg() calls skb_copy_datagram_iter(), which
    calls an indirect function (cb pointing to simple_copy_to_iter())
    for every MSS (fragment) present in the skb.
    
    CONFIG_RETPOLINE=y forces a very expensive operation
    that we can avoid thanks to indirect call wrappers.
    
    This patch gives a 13% increase of performance on
    a single flow, if the bottleneck is the thread reading
    the TCP socket.
    
    Fixes: 950fcaecd5cc ("datagram: consolidate datagram copy to iter helpers")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Paolo Abeni <pabeni@redhat.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ec9cf8afcd641263bac73a608440a2b22e026a0c
Author: Ayush Sawal <ayush.sawal@chelsio.com>
Date:   Mon Mar 30 20:48:52 2020 +0530

    Crypto: chelsio - Fixes a hang issue during driver registration
    
    commit ad59ddd02de26271b89564962e74d689f1a30b49 upstream.
    
    This issue occurs only when multiadapters are present. Hang
    happens because assign_chcr_device returns u_ctx pointer of
    adapter which is not yet initialized as for this adapter cxgb_up
    is not been called yet.
    
    The last_dev pointer is used to determine u_ctx pointer and it
    is initialized two times in chcr_uld_add in chcr_dev_add respectively.
    
    The fix here is don't initialize the last_dev pointer during
    chcr_uld_add. Only assign to value to it when the adapter's
    initialization is completed i.e in chcr_dev_add.
    
    Fixes: fef4912b66d62 ("crypto: chelsio - Handle PCI shutdown event").
    
    Signed-off-by: Ayush Sawal <ayush.sawal@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b0946b45b85a540aa1b030c277301ce87003d5b6
Author: Yuval Basson <ybason@marvell.com>
Date:   Wed Mar 25 22:50:43 2020 +0200

    qed: Fix race condition between scheduling and destroying the slowpath workqueue
    
    commit 3b85720d3fd72e6ef4de252cd2f67548eb645eb4 upstream.
    
    Calling queue_delayed_work concurrently with
    destroy_workqueue might race to an unexpected outcome -
    scheduled task after wq is destroyed or other resources
    (like ptt_pool) are freed (yields NULL pointer dereference).
    cancel_delayed_work prevents the race by cancelling
    the timer triggered for scheduling a new task.
    
    Fixes: 59ccf86fe ("qed: Add driver infrastucture for handling mfw requests")
    Signed-off-by: Denis Bolotin <dbolotin@marvell.com>
    Signed-off-by: Michal Kalderon <mkalderon@marvell.com>
    Signed-off-by: Yuval Basson <ybason@marvell.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d15fc14704414a7b90465a8f735c9ad7f5cf1ac0
Author: Eugene Syromiatnikov <esyr@redhat.com>
Date:   Tue Mar 24 05:19:20 2020 +0100

    taprio: do not use BIT() in TCA_TAPRIO_ATTR_FLAG_* definitions
    
    commit 673040c3a82a7564423e09c791e242a846591e30 upstream.
    
    BIT() macro definition is internal to the Linux kernel and is not
    to be used in UAPI headers; replace its usage with the _BITUL() macro
    that is already used elsewhere in the header.
    
    Fixes: 9c66d1564676 ("taprio: Add support for hardware offloading")
    Signed-off-by: Eugene Syromiatnikov <esyr@redhat.com>
    Acked-by: Vladimir Oltean <vladimir.oltean@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f37079e9ea83dc1f66713c2dbec2c19cd8cf121f
Author: Sascha Hauer <s.hauer@pengutronix.de>
Date:   Fri Apr 17 11:28:53 2020 +0200

    hwmon: (jc42) Fix name to have no illegal characters
    
    [ Upstream commit c843b382e61b5f28a3d917712c69a344f632387c ]
    
    The jc42 driver passes I2C client's name as hwmon device name. In case
    of device tree probed devices this ends up being part of the compatible
    string, "jc-42.4-temp". This name contains hyphens and the hwmon core
    doesn't like this:
    
    jc42 2-0018: hwmon: 'jc-42.4-temp' is not a valid name attribute, please fix
    
    This changes the name to "jc42" which doesn't have any illegal
    characters.
    
    Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
    Link: https://lore.kernel.org/r/20200417092853.31206-1-s.hauer@pengutronix.de
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit c7b6c51298bd6e44d2977c6fbf10642da26158da
Author: John Garry <john.garry@huawei.com>
Date:   Thu Apr 16 19:18:51 2020 +0800

    blk-mq: Put driver tag in blk_mq_dispatch_rq_list() when no budget
    
    [ Upstream commit 5fe56de799ad03e92d794c7936bf363922b571df ]
    
    If in blk_mq_dispatch_rq_list() we find no budget, then we break of the
    dispatch loop, but the request may keep the driver tag, evaulated
    in 'nxt' in the previous loop iteration.
    
    Fix by putting the driver tag for that request.
    
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Signed-off-by: John Garry <john.garry@huawei.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e9299c28fc5d2033c55775ae1809a3976b0d09b
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Apr 13 23:33:05 2020 -0400

    ext4: convert BUG_ON's to WARN_ON's in mballoc.c
    
    [ Upstream commit 907ea529fc4c3296701d2bfc8b831dd2a8121a34 ]
    
    If the in-core buddy bitmap gets corrupted (or out of sync with the
    block bitmap), issue a WARN_ON and try to recover.  In most cases this
    involves skipping trying to allocate out of a particular block group.
    We can end up declaring the file system corrupted, which is fair,
    since the file system probably should be checked before we proceed any
    further.
    
    Link: https://lore.kernel.org/r/20200414035649.293164-1-tytso@mit.edu
    Google-Bug-Id: 34811296
    Google-Bug-Id: 34639169
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1e4281eba3ffd6a4ad4427bcfb9933c24340bb32
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Mon Apr 13 22:30:52 2020 -0400

    ext4: increase wait time needed before reuse of deleted inode numbers
    
    [ Upstream commit a17a9d935dc4a50acefaf319d58030f1da7f115a ]
    
    Current wait times have proven to be too short to protect against inode
    reuses that lead to metadata inconsistencies.
    
    Now that we will retry the inode allocation if we can't find any
    recently deleted inodes, it's a lot safer to increase the recently
    deleted time from 5 seconds to a minute.
    
    Link: https://lore.kernel.org/r/20200414023925.273867-1-tytso@mit.edu
    Google-Bug-Id: 36602237
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 0fe3908e6abcf6ff8e8ff2881568cdeda013c358
Author: yangerkun <yangerkun@huawei.com>
Date:   Wed Feb 26 12:10:02 2020 +0800

    ext4: use matching invalidatepage in ext4_writepage
    
    [ Upstream commit c2a559bc0e7ed5a715ad6b947025b33cb7c05ea7 ]
    
    Run generic/388 with journal data mode sometimes may trigger the warning
    in ext4_invalidatepage. Actually, we should use the matching invalidatepage
    in ext4_writepage.
    
    Signed-off-by: yangerkun <yangerkun@huawei.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Ritesh Harjani <riteshh@linux.ibm.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Link: https://lore.kernel.org/r/20200226041002.13914-1-yangerkun@huawei.com
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1876e0e654b8dcc8f6e2f5aa2ff01e821ec31db2
Author: Fangrui Song <maskray@google.com>
Date:   Tue Apr 14 09:32:55 2020 -0700

    arm64: Delete the space separator in __emit_inst
    
    [ Upstream commit c9a4ef66450145a356a626c833d3d7b1668b3ded ]
    
    In assembly, many instances of __emit_inst(x) expand to a directive. In
    a few places __emit_inst(x) is used as an assembler macro argument. For
    example, in arch/arm64/kvm/hyp/entry.S
    
      ALTERNATIVE(nop, SET_PSTATE_PAN(1), ARM64_HAS_PAN, CONFIG_ARM64_PAN)
    
    expands to the following by the C preprocessor:
    
      alternative_insn nop, .inst (0xd500401f | ((0) << 16 | (4) << 5) | ((!!1) << 8)), 4, 1
    
    Both comma and space are separators, with an exception that content
    inside a pair of parentheses/quotes is not split, so the clang
    integrated assembler splits the arguments to:
    
       nop, .inst, (0xd500401f | ((0) << 16 | (4) << 5) | ((!!1) << 8)), 4, 1
    
    GNU as preprocesses the input with do_scrub_chars(). Its arm64 backend
    (along with many other non-x86 backends) sees:
    
      alternative_insn nop,.inst(0xd500401f|((0)<<16|(4)<<5)|((!!1)<<8)),4,1
      # .inst(...) is parsed as one argument
    
    while its x86 backend sees:
    
      alternative_insn nop,.inst (0xd500401f|((0)<<16|(4)<<5)|((!!1)<<8)),4,1
      # The extra space before '(' makes the whole .inst (...) parsed as two arguments
    
    The non-x86 backend's behavior is considered unintentional
    (https://sourceware.org/bugzilla/show_bug.cgi?id=25750).
    So drop the space separator inside `.inst (...)` to make the clang
    integrated assembler work.
    
    Suggested-by: Ilie Halip <ilie.halip@gmail.com>
    Signed-off-by: Fangrui Song <maskray@google.com>
    Reviewed-by: Mark Rutland <mark.rutland@arm.com>
    Link: https://github.com/ClangBuiltLinux/linux/issues/939
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a719f7bf5c882db735f3c703dcf3230593bc072e
Author: Tamizh chelvam <tamizhr@codeaurora.org>
Date:   Sat Mar 28 19:23:24 2020 +0530

    mac80211: fix channel switch trigger from unknown mesh peer
    
    [ Upstream commit 93e2d04a1888668183f3fb48666e90b9b31d29e6 ]
    
    Previously mesh channel switch happens if beacon contains
    CSA IE without checking the mesh peer info. Due to that
    channel switch happens even if the beacon is not from
    its own mesh peer. Fixing that by checking if the CSA
    originated from the same mesh network before proceeding
    for channel switch.
    
    Signed-off-by: Tamizh chelvam <tamizhr@codeaurora.org>
    Link: https://lore.kernel.org/r/1585403604-29274-1-git-send-email-tamizhr@codeaurora.org
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9178430df3f73976f5b9bab70d137e1da31aaad8
Author: Atsushi Nemoto <atsushi.nemoto@sord.co.jp>
Date:   Tue Apr 14 10:12:34 2020 +0900

    net: stmmac: socfpga: Allow all RGMII modes
    
    [ Upstream commit a7a0d6269652846671312b29992143f56e2866b8 ]
    
    Allow all the RGMII modes to be used.  (Not only "rgmii", "rgmii-id"
    but "rgmii-txid", "rgmii-rxid")
    
    Signed-off-by: Atsushi Nemoto <atsushi.nemoto@sord.co.jp>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit daafdf87b89830ac30b9349c6d38401a07726489
Author: Hui Wang <hui.wang@canonical.com>
Date:   Tue Apr 14 22:27:25 2020 +0800

    ALSA: hda: call runtime_allow() for all hda controllers
    
    [ Upstream commit 9a6418487b566503c772cb6e7d3d44e652b019b0 ]
    
    Before the pci_driver->probe() is called, the pci subsystem calls
    runtime_forbid() and runtime_get_sync() on this pci dev, so only call
    runtime_put_autosuspend() is not enough to enable the runtime_pm on
    this device.
    
    For controllers with vgaswitcheroo feature, the pci/quirks.c will call
    runtime_allow() for this dev, then the controllers could enter
    rt_idle/suspend/resume, but for non-vgaswitcheroo controllers like
    Intel hda controllers, the runtime_pm is not enabled because the
    runtime_allow() is not called.
    
    Since it is no harm calling runtime_allow() twice, here let hda
    driver call runtime_allow() for all controllers. Then the runtime_pm
    is enabled on all controllers after the put_autosuspend() is called.
    
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Link: https://lore.kernel.org/r/20200414142725.6020-1-hui.wang@canonical.com
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d9d4ea17d6d6f08f9f2700ead1d591f123baaddf
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Mar 26 09:03:58 2020 +0100

    xen/xenbus: ensure xenbus_map_ring_valloc() returns proper grant status
    
    [ Upstream commit 6b51fd3f65a22e3d1471b18a1d56247e246edd46 ]
    
    xenbus_map_ring_valloc() maps a ring page and returns the status of the
    used grant (0 meaning success).
    
    There are Xen hypervisors which might return the value 1 for the status
    of a failed grant mapping due to a bug. Some callers of
    xenbus_map_ring_valloc() test for errors by testing the returned status
    to be less than zero, resulting in no error detected and crashing later
    due to a not available ring page.
    
    Set the return value of xenbus_map_ring_valloc() to GNTST_general_error
    in case the grant status reported by Xen is greater than zero.
    
    This is part of XSA-316.
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Wei Liu <wl@xen.org>
    Link: https://lore.kernel.org/r/20200326080358.1018-1-jgross@suse.com
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8c627d4b15de928cad99a8017e3cb115aaf01a5c
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Wed Apr 1 13:23:26 2020 -0500

    objtool: Support Clang non-section symbols in ORC dump
    
    [ Upstream commit 8782e7cab51b6bf01a5a86471dd82228af1ac185 ]
    
    Historically, the relocation symbols for ORC entries have only been
    section symbols:
    
      .text+0: sp:sp+8 bp:(und) type:call end:0
    
    However, the Clang assembler is aggressive about stripping section
    symbols.  In that case we will need to use function symbols:
    
      freezing_slow_path+0: sp:sp+8 bp:(und) type:call end:0
    
    In preparation for the generation of such entries in "objtool orc
    generate", add support for reading them in "objtool orc dump".
    
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Miroslav Benes <mbenes@suse.cz>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/b811b5eb1a42602c3b523576dc5efab9ad1c174d.1585761021.git.jpoimboe@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 820126d9a83da2e77a936b2a23f6350eec67ec47
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Wed Apr 1 13:23:25 2020 -0500

    objtool: Fix CONFIG_UBSAN_TRAP unreachable warnings
    
    [ Upstream commit bd841d6154f5f41f8a32d3c1b0bc229e326e640a ]
    
    CONFIG_UBSAN_TRAP causes GCC to emit a UD2 whenever it encounters an
    unreachable code path.  This includes __builtin_unreachable().  Because
    the BUG() macro uses __builtin_unreachable() after it emits its own UD2,
    this results in a double UD2.  In this case objtool rightfully detects
    that the second UD2 is unreachable:
    
      init/main.o: warning: objtool: repair_env_string()+0x1c8: unreachable instruction
    
    We weren't able to figure out a way to get rid of the double UD2s, so
    just silence the warning.
    
    Reported-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Miroslav Benes <mbenes@suse.cz>
    Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/6653ad73c6b59c049211bd7c11ed3809c20ee9f5.1585761021.git.jpoimboe@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1cc2460dad8274670da6aa42f6dfc7dbc3728f05
Author: Bodo Stroesser <bstroesser@ts.fujitsu.com>
Date:   Thu Apr 9 12:10:26 2020 +0200

    scsi: target: tcmu: reset_ring should reset TCMU_DEV_BIT_BROKEN
    
    [ Upstream commit 066f79a5fd6d1b9a5cc57b5cd445b3e4bb68a5b2 ]
    
    In case command ring buffer becomes inconsistent, tcmu sets device flag
    TCMU_DEV_BIT_BROKEN.  If the bit is set, tcmu rejects new commands from LIO
    core with TCM_LOGICAL_UNIT_COMMUNICATION_FAILURE, and no longer processes
    completions from the ring.  The reset_ring attribute can be used to
    completely clean up the command ring, so after reset_ring the ring no
    longer is inconsistent.
    
    Therefore reset_ring also should reset bit TCMU_DEV_BIT_BROKEN to allow
    normal processing.
    
    Link: https://lore.kernel.org/r/20200409101026.17872-1-bstroesser@ts.fujitsu.com
    Acked-by: Mike Christie <mchristi@redhat.com>
    Signed-off-by: Bodo Stroesser <bstroesser@ts.fujitsu.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 62d350eb31d17a96528aba76ce23c806346d08cd
Author: Bodo Stroesser <bstroesser@ts.fujitsu.com>
Date:   Wed Apr 8 15:26:10 2020 +0200

    scsi: target: fix PR IN / READ FULL STATUS for FC
    
    [ Upstream commit 8fed04eb79a74cbf471dfaa755900a51b37273ab ]
    
    Creation of the response to READ FULL STATUS fails for FC based
    reservations. Reason is the too high loop limit (< 24) in
    fc_get_pr_transport_id(). The string representation of FC WWPN is 23 chars
    long only ("11:22:33:44:55:66:77:88"). So when i is 23, the loop body is
    executed a last time for the ending '\0' of the string and thus hex2bin()
    reports an error.
    
    Link: https://lore.kernel.org/r/20200408132610.14623-3-bstroesser@ts.fujitsu.com
    Signed-off-by: Bodo Stroesser <bstroesser@ts.fujitsu.com>
    Reviewed-by: Mike Christie <mchristi@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a323f69d00c61125386e96fa61cdea145c37b23c
Author: Roy Spliet <nouveau@spliet.org>
Date:   Mon Apr 13 10:20:34 2020 +0200

    ALSA: hda: Explicitly permit using autosuspend if runtime PM is supported
    
    [ Upstream commit 3ba21113bd33d49f3c300a23fc08cf114c434995 ]
    
    This fixes runtime PM not working after a suspend-to-RAM cycle at least for
    the codec-less HDA device found on NVIDIA GPUs.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=207043
    Signed-off-by: Roy Spliet <nouveau@spliet.org>
    Link: https://lore.kernel.org/r/20200413082034.25166-7-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit bd074af53cb640c0d62d39dc30c77b675601000b
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Apr 13 10:20:32 2020 +0200

    ALSA: hda: Keep the controller initialization even if no codecs found
    
    [ Upstream commit 9479e75fca370a5220784f7596bf598c4dad0b9b ]
    
    Currently, when the HD-audio controller driver doesn't detect any
    codecs, it tries to abort the probe.  But this abort happens at the
    delayed probe, i.e. the primary probe call already returned success,
    hence the driver is never unbound until user does so explicitly.
    As a result, it may leave the HD-audio device in the running state
    without the runtime PM.  More badly, if the device is a HD-audio bus
    that is tied with a GPU, GPU cannot reach to the full power down and
    consumes unnecessarily much power.
    
    This patch changes the logic after no-codec situation; it continues
    probing without the further codec initialization but keep the
    controller driver running normally.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=207043
    Tested-by: Roy Spliet <nouveau@spliet.org>
    Link: https://lore.kernel.org/r/20200413082034.25166-5-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 135e10232fb592975db86cf51c797872be23f3ec
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Apr 13 10:20:31 2020 +0200

    ALSA: hda: Release resources at error in delayed probe
    
    [ Upstream commit 2393e7555b531a534152ffe7bfd1862cacedaacb ]
    
    snd-hda-intel driver handles the most of its probe task in the delayed
    work (either via workqueue or via firmware loader).  When an error
    happens in the later delayed probe, we can't deregister the device
    itself because the probe callback already returned success and the
    device was bound.  So, for now, we set hda->init_failed flag and make
    the rest untouched until the device gets really unbound.
    However, this leaves the device up running, keeping the resources
    without any use that prevents other operations.
    
    In this patch, we release the resources at first when a probe error
    happens in the delayed probe stage, but keeps the top-level object, so
    that the PM and other ops can still refer to the object itself.
    
    Also for simplicity, snd_hda_intel object is allocated via devm, so
    that we can get rid of the explicit kfree calls.
    
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=207043
    Link: https://lore.kernel.org/r/20200413082034.25166-4-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 535ed3f01564a09f73389f1d0afc2e78a0a8c878
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Sun Apr 12 13:11:11 2020 -0700

    xfs: fix partially uninitialized structure in xfs_reflink_remap_extent
    
    [ Upstream commit c142932c29e533ee892f87b44d8abc5719edceec ]
    
    In the reflink extent remap function, it turns out that uirec (the block
    mapping corresponding only to the part of the passed-in mapping that got
    unmapped) was not fully initialized.  Specifically, br_state was not
    being copied from the passed-in struct to the uirec.  This could lead to
    unpredictable results such as the reflinked mapping being marked
    unwritten in the destination file.
    
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Brian Foster <bfoster@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ec6e5792d62d4c3131bfc998d2aee760a6724705
Author: David Howells <dhowells@redhat.com>
Date:   Wed Apr 1 23:32:12 2020 +0100

    afs: Fix length of dump of bad YFSFetchStatus record
    
    [ Upstream commit 3efe55b09a92a59ed8214db801683cf13c9742c4 ]
    
    Fix the length of the dump of a bad YFSFetchStatus record.  The function
    was copied from the AFS version, but the YFS variant contains bigger fields
    and extra information, so expand the dump to match.
    
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 16976275b92992a7f86d91d86d341eefc9bade15
Author: Zhiqiang Liu <liuzhiqiang26@huawei.com>
Date:   Mon Mar 30 10:18:33 2020 +0800

    signal: check sig before setting info in kill_pid_usb_asyncio
    
    [ Upstream commit eaec2b0bd30690575c581eebffae64bfb7f684ac ]
    
    In kill_pid_usb_asyncio, if signal is not valid, we do not need to
    set info struct.
    
    Signed-off-by: Zhiqiang Liu <liuzhiqiang26@huawei.com>
    Acked-by: Christian Brauner <christian.brauner@ubuntu.com>
    Link: https://lore.kernel.org/r/f525fd08-1cf7-fb09-d20c-4359145eb940@huawei.com
    Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit f88761412b90aaae8dbd03ee3f75385fca04fb53
Author: Olaf Hering <olaf@aepfle.de>
Date:   Tue Apr 7 19:27:39 2020 +0200

    x86: hyperv: report value of misc_features
    
    [ Upstream commit 97d9f1c43bedd400301d6f1eff54d46e8c636e47 ]
    
    A few kernel features depend on ms_hyperv.misc_features, but unlike its
    siblings ->features and ->hints, the value was never reported during boot.
    
    Signed-off-by: Olaf Hering <olaf@aepfle.de>
    Link: https://lore.kernel.org/r/20200407172739.31371-1-olaf@aepfle.de
    Signed-off-by: Wei Liu <wei.liu@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit b5da1152f7165182621f06f942fa752acdcf90b8
Author: Martin Fuzzey <martin.fuzzey@flowbird.group>
Date:   Thu Apr 2 15:51:27 2020 +0200

    net: fec: set GPR bit on suspend by DT configuration.
    
    [ Upstream commit da722186f6549d752ea5b5fbc18111833c81a133 ]
    
    On some SoCs, such as the i.MX6, it is necessary to set a bit
    in the SoC level GPR register before suspending for wake on lan
    to work.
    
    The fec platform callback sleep_mode_enable was intended to allow this
    but the platform implementation was NAK'd back in 2015 [1]
    
    This means that, currently, wake on lan is broken on mainline for
    the i.MX6 at least.
    
    So implement the required bit setting in the fec driver by itself
    by adding a new optional DT property indicating the GPR register
    and adding the offset and bit information to the driver.
    
    [1] https://www.spinics.net/lists/netdev/msg310922.html
    
    Signed-off-by: Martin Fuzzey <martin.fuzzey@flowbird.group>
    Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 316ad98983d947ae9e13856247966dda950342d4
Author: Jeremy Cline <jcline@redhat.com>
Date:   Sat Apr 4 01:14:30 2020 -0400

    libbpf: Initialize *nl_pid so gcc 10 is happy
    
    [ Upstream commit 4734b0fefbbf98f8c119eb8344efa19dac82cd2c ]
    
    Builds of Fedora's kernel-tools package started to fail with "may be
    used uninitialized" warnings for nl_pid in bpf_set_link_xdp_fd() and
    bpf_get_link_xdp_info() on the s390 architecture.
    
    Although libbpf_netlink_open() always returns a negative number when it
    does not set *nl_pid, the compiler does not determine this and thus
    believes the variable might be used uninitialized. Assuage gcc's fears
    by explicitly initializing nl_pid.
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1807781
    
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Andrii Nakryiko <andriin@fb.com>
    Link: https://lore.kernel.org/bpf/20200404051430.698058-1-jcline@redhat.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3c9bbe7f44f64688b914a1ac62be92d2597f8b81
Author: Luke Nelson <lukenels@cs.washington.edu>
Date:   Sat Apr 18 16:26:53 2020 -0700

    bpf, x86: Fix encoding for lower 8-bit registers in BPF_STX BPF_B
    
    [ Upstream commit aee194b14dd2b2bde6252b3acf57d36dccfc743a ]
    
    This patch fixes an encoding bug in emit_stx for BPF_B when the source
    register is BPF_REG_FP.
    
    The current implementation for BPF_STX BPF_B in emit_stx saves one REX
    byte when the operands can be encoded using Mod-R/M alone. The lower 8
    bits of registers %rax, %rbx, %rcx, and %rdx can be accessed without using
    a REX prefix via %al, %bl, %cl, and %dl, respectively. Other registers,
    (e.g., %rsi, %rdi, %rbp, %rsp) require a REX prefix to use their 8-bit
    equivalents (%sil, %dil, %bpl, %spl).
    
    The current code checks if the source for BPF_STX BPF_B is BPF_REG_1
    or BPF_REG_2 (which map to %rdi and %rsi), in which case it emits the
    required REX prefix. However, it misses the case when the source is
    BPF_REG_FP (mapped to %rbp).
    
    The result is that BPF_STX BPF_B with BPF_REG_FP as the source operand
    will read from register %ch instead of the correct %bpl. This patch fixes
    the problem by fixing and refactoring the check on which registers need
    the extra REX byte. Since no BPF registers map to %rsp, there is no need
    to handle %spl.
    
    Fixes: 622582786c9e0 ("net: filter: x86: internal BPF JIT")
    Signed-off-by: Xi Wang <xi.wang@gmail.com>
    Signed-off-by: Luke Nelson <luke.r.nels@gmail.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20200418232655.23870-1-luke.r.nels@gmail.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit ab6e8af64f3951249e8ee9f523a2a32ea328bf10
Author: Eric Biggers <ebiggers@google.com>
Date:   Tue Mar 10 08:57:27 2020 -0700

    xfs: clear PF_MEMALLOC before exiting xfsaild thread
    
    commit 10a98cb16d80be3595fdb165fad898bb28b8b6d2 upstream.
    
    Leaving PF_MEMALLOC set when exiting a kthread causes it to remain set
    during do_exit().  That can confuse things.  In particular, if BSD
    process accounting is enabled, then do_exit() writes data to an
    accounting file.  If that file has FS_SYNC_FL set, then this write
    occurs synchronously and can misbehave if PF_MEMALLOC is set.
    
    For example, if the accounting file is located on an XFS filesystem,
    then a WARN_ON_ONCE() in iomap_do_writepage() is triggered and the data
    doesn't get written when it should.  Or if the accounting file is
    located on an ext4 filesystem without a journal, then a WARN_ON_ONCE()
    in ext4_write_inode() is triggered and the inode doesn't get written.
    
    Fix this in xfsaild() by using the helper functions to save and restore
    PF_MEMALLOC.
    
    This can be reproduced as follows in the kvm-xfstests test appliance
    modified to add the 'acct' Debian package, and with kvm-xfstests's
    recommended kconfig modified to add CONFIG_BSD_PROCESS_ACCT=y:
    
            mkfs.xfs -f /dev/vdb
            mount /vdb
            touch /vdb/file
            chattr +S /vdb/file
            accton /vdb/file
            mkfs.xfs -f /dev/vdc
            mount /vdc
            umount /vdc
    
    It causes:
            WARNING: CPU: 1 PID: 336 at fs/iomap/buffered-io.c:1534
            CPU: 1 PID: 336 Comm: xfsaild/vdc Not tainted 5.6.0-rc5 #3
            Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20191223_100556-anatol 04/01/2014
            RIP: 0010:iomap_do_writepage+0x16b/0x1f0 fs/iomap/buffered-io.c:1534
            [...]
            Call Trace:
             write_cache_pages+0x189/0x4d0 mm/page-writeback.c:2238
             iomap_writepages+0x1c/0x33 fs/iomap/buffered-io.c:1642
             xfs_vm_writepages+0x65/0x90 fs/xfs/xfs_aops.c:578
             do_writepages+0x41/0xe0 mm/page-writeback.c:2344
             __filemap_fdatawrite_range+0xd2/0x120 mm/filemap.c:421
             file_write_and_wait_range+0x71/0xc0 mm/filemap.c:760
             xfs_file_fsync+0x7a/0x2b0 fs/xfs/xfs_file.c:114
             generic_write_sync include/linux/fs.h:2867 [inline]
             xfs_file_buffered_aio_write+0x379/0x3b0 fs/xfs/xfs_file.c:691
             call_write_iter include/linux/fs.h:1901 [inline]
             new_sync_write+0x130/0x1d0 fs/read_write.c:483
             __kernel_write+0x54/0xe0 fs/read_write.c:515
             do_acct_process+0x122/0x170 kernel/acct.c:522
             slow_acct_process kernel/acct.c:581 [inline]
             acct_process+0x1d4/0x27c kernel/acct.c:607
             do_exit+0x83d/0xbc0 kernel/exit.c:791
             kthread+0xf1/0x140 kernel/kthread.c:257
             ret_from_fork+0x27/0x50 arch/x86/entry/entry_64.S:352
    
    This bug was originally reported by syzbot at
    https://lore.kernel.org/r/0000000000000e7156059f751d7b@google.com.
    
    Reported-by: syzbot+1f9dc49e8de2582d90c2@syzkaller.appspotmail.com
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e5329fcdc907f59058110aa33819916e1f315126
Author: Yang Shi <yang.shi@linux.alibaba.com>
Date:   Mon Apr 20 18:14:17 2020 -0700

    mm: shmem: disable interrupt when acquiring info->lock in userfaultfd_copy path
    
    commit 94b7cc01da5a3cc4f3da5e0ff492ef008bb555d6 upstream.
    
    Syzbot reported the below lockdep splat:
    
        WARNING: possible irq lock inversion dependency detected
        5.6.0-rc7-syzkaller #0 Not tainted
        --------------------------------------------------------
        syz-executor.0/10317 just changed the state of lock:
        ffff888021d16568 (&(&info->lock)->rlock){+.+.}, at: spin_lock include/linux/spinlock.h:338 [inline]
        ffff888021d16568 (&(&info->lock)->rlock){+.+.}, at: shmem_mfill_atomic_pte+0x1012/0x21c0 mm/shmem.c:2407
        but this lock was taken by another, SOFTIRQ-safe lock in the past:
         (&(&xa->xa_lock)->rlock#5){..-.}
    
        and interrupts could create inverse lock ordering between them.
    
        other info that might help us debug this:
         Possible interrupt unsafe locking scenario:
    
               CPU0                    CPU1
               ----                    ----
          lock(&(&info->lock)->rlock);
                                       local_irq_disable();
                                       lock(&(&xa->xa_lock)->rlock#5);
                                       lock(&(&info->lock)->rlock);
          <Interrupt>
            lock(&(&xa->xa_lock)->rlock#5);
    
         *** DEADLOCK ***
    
    The full report is quite lengthy, please see:
    
      https://lore.kernel.org/linux-mm/alpine.LSU.2.11.2004152007370.13597@eggly.anvils/T/#m813b412c5f78e25ca8c6c7734886ed4de43f241d
    
    It is because CPU 0 held info->lock with IRQ enabled in userfaultfd_copy
    path, then CPU 1 is splitting a THP which held xa_lock and info->lock in
    IRQ disabled context at the same time.  If softirq comes in to acquire
    xa_lock, the deadlock would be triggered.
    
    The fix is to acquire/release info->lock with *_irq version instead of
    plain spin_{lock,unlock} to make it softirq safe.
    
    Fixes: 4c27fe4c4c84 ("userfaultfd: shmem: add shmem_mcopy_atomic_pte for userfaultfd support")
    Reported-by: syzbot+e27980339d305f2dbfd9@syzkaller.appspotmail.com
    Signed-off-by: Yang Shi <yang.shi@linux.alibaba.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Tested-by: syzbot+e27980339d305f2dbfd9@syzkaller.appspotmail.com
    Acked-by: Hugh Dickins <hughd@google.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Link: http://lkml.kernel.org/r/1587061357-122619-1-git-send-email-yang.shi@linux.alibaba.com
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 309a509dabd52430f21fc9e49e399109ce327bfb
Author: Wang YanQing <udknight@gmail.com>
Date:   Thu Apr 23 13:06:37 2020 +0800

    bpf, x86_32: Fix logic error in BPF_LDX zero-extension
    
    commit 5ca1ca01fae1e90f8d010eb1d83374f28dc11ee6 upstream.
    
    When verifier_zext is true, we don't need to emit code
    for zero-extension.
    
    Fixes: 836256bf5f37 ("x32: bpf: eliminate zero extension code-gen")
    Signed-off-by: Wang YanQing <udknight@gmail.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20200423050637.GA4029@udknight
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d0b8695703f2f90a29d3027d85f0f6f8331ca88d
Author: Luke Nelson <lukenels@cs.washington.edu>
Date:   Wed Apr 22 10:36:30 2020 -0700

    bpf, x86_32: Fix clobbering of dst for BPF_JSET
    
    commit 50fe7ebb6475711c15b3397467e6424e20026d94 upstream.
    
    The current JIT clobbers the destination register for BPF_JSET BPF_X
    and BPF_K by using "and" and "or" instructions. This is fine when the
    destination register is a temporary loaded from a register stored on
    the stack but not otherwise.
    
    This patch fixes the problem (for both BPF_K and BPF_X) by always loading
    the destination register into temporaries since BPF_JSET should not
    modify the destination register.
    
    This bug may not be currently triggerable as BPF_REG_AX is the only
    register not stored on the stack and the verifier uses it in a limited
    way.
    
    Fixes: 03f5781be2c7b ("bpf, x86_32: add eBPF JIT compiler for ia32")
    Signed-off-by: Xi Wang <xi.wang@gmail.com>
    Signed-off-by: Luke Nelson <luke.r.nels@gmail.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Wang YanQing <udknight@gmail.com>
    Link: https://lore.kernel.org/bpf/20200422173630.8351-2-luke.r.nels@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50c5d9146100163479bb28d2cd13fad1bbaac136
Author: Luke Nelson <lukenels@cs.washington.edu>
Date:   Wed Apr 22 10:36:29 2020 -0700

    bpf, x86_32: Fix incorrect encoding in BPF_LDX zero-extension
    
    commit 5fa9a98fb10380e48a398998cd36a85e4ef711d6 upstream.
    
    The current JIT uses the following sequence to zero-extend into the
    upper 32 bits of the destination register for BPF_LDX BPF_{B,H,W},
    when the destination register is not on the stack:
    
      EMIT3(0xC7, add_1reg(0xC0, dst_hi), 0);
    
    The problem is that C7 /0 encodes a MOV instruction that requires a 4-byte
    immediate; the current code emits only 1 byte of the immediate. This
    means that the first 3 bytes of the next instruction will be treated as
    the rest of the immediate, breaking the stream of instructions.
    
    This patch fixes the problem by instead emitting "xor dst_hi,dst_hi"
    to clear the upper 32 bits. This fixes the problem and is more efficient
    than using MOV to load a zero immediate.
    
    This bug may not be currently triggerable as BPF_REG_AX is the only
    register not stored on the stack and the verifier uses it in a limited
    way, and the verifier implements a zero-extension optimization. But the
    JIT should avoid emitting incorrect encodings regardless.
    
    Fixes: 03f5781be2c7b ("bpf, x86_32: add eBPF JIT compiler for ia32")
    Signed-off-by: Xi Wang <xi.wang@gmail.com>
    Signed-off-by: Luke Nelson <luke.r.nels@gmail.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Reviewed-by: H. Peter Anvin (Intel) <hpa@zytor.com>
    Acked-by: Wang YanQing <udknight@gmail.com>
    Link: https://lore.kernel.org/bpf/20200422173630.8351-1-luke.r.nels@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca3a2ca4cfa2a95eb0175d0b49268aaf3394bef0
Author: Vitor Massaru Iha <vitor@massaru.org>
Date:   Tue Apr 21 21:48:44 2020 -0300

    um: ensure `make ARCH=um mrproper` removes arch/$(SUBARCH)/include/generated/
    
    commit 63ec90f18204f2fe072df108de8a021b28b1b173 upstream.
    
    In this workflow:
    
    $ make ARCH=um defconfig && make ARCH=um -j8
      [snip]
    $ make ARCH=um mrproper
      [snip]
    $ make ARCH=um defconfig O=./build_um && make ARCH=um -j8 O=./build_um
      [snip]
      CC      scripts/mod/empty.o
    In file included from ../include/linux/types.h:6,
                     from ../include/linux/mod_devicetable.h:12,
                     from ../scripts/mod/devicetable-offsets.c:3:
    ../include/uapi/linux/types.h:5:10: fatal error: asm/types.h: No such file or directory
        5 | #include <asm/types.h>
          |          ^~~~~~~~~~~~~
    compilation terminated.
    make[2]: *** [../scripts/Makefile.build:100: scripts/mod/devicetable-offsets.s] Error 1
    make[2]: *** Waiting for unfinished jobs....
    make[1]: *** [/home/iha/sdb/opensource/lkmp/linux-kselftest.git/Makefile:1140: prepare0] Error 2
    make[1]: Leaving directory '/home/iha/sdb/opensource/lkmp/linux-kselftest.git/build_um'
    make: *** [Makefile:180: sub-make] Error 2
    
    The cause of the error was because arch/$(SUBARCH)/include/generated files
    weren't properly cleaned by `make ARCH=um mrproper`.
    
    Fixes: a788b2ed81ab ("kbuild: check arch/$(SRCARCH)/include/generated before out-of-tree build")
    Reported-by: Theodore Ts'o <tytso@mit.edu>
    Suggested-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Vitor Massaru Iha <vitor@massaru.org>
    Reviewed-by: Brendan Higgins <brendanhiggins@google.com>
    Tested-by: Brendan Higgins <brendanhiggins@google.com>
    Link: https://groups.google.com/forum/#!msg/kunit-dev/QmA27YEgEgI/hvS1kiz2CwAJ
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9c5c94c5012cee14a6a8f71568a1f1c0a8fc9a5b
Author: Waiman Long <longman@redhat.com>
Date:   Tue Apr 21 09:07:55 2020 -0400

    blk-iocost: Fix error on iocost_ioc_vrate_adj
    
    commit d6c8e949a35d6906d6c03a50e9a9cdf4e494528a upstream.
    
    Systemtap 4.2 is unable to correctly interpret the "u32 (*missed_ppm)[2]"
    argument of the iocost_ioc_vrate_adj trace entry defined in
    include/trace/events/iocost.h leading to the following error:
    
      /tmp/stapAcz0G0/stap_c89c58b83cea1724e26395efa9ed4939_6321_aux_6.c:78:8:
      error: expected ‘;’, ‘,’ or ‘)’ before ‘*’ token
       , u32[]* __tracepoint_arg_missed_ppm
    
    That argument type is indeed rather complex and hard to read. Looking
    at block/blk-iocost.c. It is just a 2-entry u32 array. By simplifying
    the argument to a simple "u32 *missed_ppm" and adjusting the trace
    entry accordingly, the compilation error was gone.
    
    Fixes: 7caa47151ab2 ("blkcg: implement blk-iocost")
    Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Acked-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b9c31556c37b43685efe0e9bf0555fb3b01607d5
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Tue Apr 21 16:21:55 2020 +0800

    PM: sleep: core: Switch back to async_schedule_dev()
    
    commit 09beebd8f93b3c8bf894e342f0a203a5c612478c upstream.
    
    Commit 8b9ec6b73277 ("PM core: Use new async_schedule_dev command")
    introduced a new function for better performance.
    
    However commit f2a424f6c613 ("PM / core: Introduce dpm_async_fn()
    helper") went back to the non-optimized version, async_schedule().
    
    So switch back to the sync_schedule_dev() to improve performance
    
    Fixes: f2a424f6c613 ("PM / core: Introduce dpm_async_fn() helper")
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 36c436a8e46a75816a63d8f0dbc9badcb74bcac8
Author: Hillf Danton <hdanton@sina.com>
Date:   Sat Apr 18 16:28:32 2020 +0800

    netfilter: nat: fix error handling upon registering inet hook
    
    commit b4faef1739dd1f3b3981b8bf173a2266ea86b1eb upstream.
    
    A case of warning was reported by syzbot.
    
    ------------[ cut here ]------------
    WARNING: CPU: 0 PID: 19934 at net/netfilter/nf_nat_core.c:1106
    nf_nat_unregister_fn+0x532/0x5c0 net/netfilter/nf_nat_core.c:1106
    Kernel panic - not syncing: panic_on_warn set ...
    CPU: 0 PID: 19934 Comm: syz-executor.5 Not tainted 5.6.0-syzkaller #0
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:77 [inline]
     dump_stack+0x188/0x20d lib/dump_stack.c:118
     panic+0x2e3/0x75c kernel/panic.c:221
     __warn.cold+0x2f/0x35 kernel/panic.c:582
     report_bug+0x27b/0x2f0 lib/bug.c:195
     fixup_bug arch/x86/kernel/traps.c:175 [inline]
     fixup_bug arch/x86/kernel/traps.c:170 [inline]
     do_error_trap+0x12b/0x220 arch/x86/kernel/traps.c:267
     do_invalid_op+0x32/0x40 arch/x86/kernel/traps.c:286
     invalid_op+0x23/0x30 arch/x86/entry/entry_64.S:1027
    RIP: 0010:nf_nat_unregister_fn+0x532/0x5c0 net/netfilter/nf_nat_core.c:1106
    Code: ff df 48 c1 ea 03 80 3c 02 00 75 75 48 8b 44 24 10 4c 89 ef 48 c7 00 00 00 00 00 e8 e8 f8 53 fb e9 4d fe ff ff e8 ee 9c 16 fb <0f> 0b e9 41 fe ff ff e8 e2 45 54 fb e9 b5 fd ff ff 48 8b 7c 24 20
    RSP: 0018:ffffc90005487208 EFLAGS: 00010246
    RAX: 0000000000040000 RBX: 0000000000000004 RCX: ffffc9001444a000
    RDX: 0000000000040000 RSI: ffffffff865c94a2 RDI: 0000000000000005
    RBP: ffff88808b5cf000 R08: ffff8880a2620140 R09: fffffbfff14bcd79
    R10: ffffc90005487208 R11: fffffbfff14bcd78 R12: 0000000000000000
    R13: 0000000000000001 R14: 0000000000000001 R15: 0000000000000000
     nf_nat_ipv6_unregister_fn net/netfilter/nf_nat_proto.c:1017 [inline]
     nf_nat_inet_register_fn net/netfilter/nf_nat_proto.c:1038 [inline]
     nf_nat_inet_register_fn+0xfc/0x140 net/netfilter/nf_nat_proto.c:1023
     nf_tables_register_hook net/netfilter/nf_tables_api.c:224 [inline]
     nf_tables_addchain.constprop.0+0x82e/0x13c0 net/netfilter/nf_tables_api.c:1981
     nf_tables_newchain+0xf68/0x16a0 net/netfilter/nf_tables_api.c:2235
     nfnetlink_rcv_batch+0x83a/0x1610 net/netfilter/nfnetlink.c:433
     nfnetlink_rcv_skb_batch net/netfilter/nfnetlink.c:543 [inline]
     nfnetlink_rcv+0x3af/0x420 net/netfilter/nfnetlink.c:561
     netlink_unicast_kernel net/netlink/af_netlink.c:1303 [inline]
     netlink_unicast+0x537/0x740 net/netlink/af_netlink.c:1329
     netlink_sendmsg+0x882/0xe10 net/netlink/af_netlink.c:1918
     sock_sendmsg_nosec net/socket.c:652 [inline]
     sock_sendmsg+0xcf/0x120 net/socket.c:672
     ____sys_sendmsg+0x6bf/0x7e0 net/socket.c:2362
     ___sys_sendmsg+0x100/0x170 net/socket.c:2416
     __sys_sendmsg+0xec/0x1b0 net/socket.c:2449
     do_syscall_64+0xf6/0x7d0 arch/x86/entry/common.c:295
     entry_SYSCALL_64_after_hwframe+0x49/0xb3
    
    and to quiesce it, unregister NFPROTO_IPV6 hook instead of NFPROTO_INET
    in case of failing to register NFPROTO_IPV4 hook.
    
    Reported-by: syzbot <syzbot+33e06702fd6cffc24c40@syzkaller.appspotmail.com>
    Fixes: d164385ec572 ("netfilter: nat: add inet family nat support")
    Cc: Florian Westphal <fw@strlen.de>
    Cc: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: Hillf Danton <hdanton@sina.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9578a8c157b4bd5f04fe8a087e29d616b2f70c80
Author: Ian Rogers <irogers@google.com>
Date:   Fri Apr 17 11:28:42 2020 -0700

    perf/core: fix parent pid/tid in task exit events
    
    commit f3bed55e850926614b9898fe982f66d2541a36a5 upstream.
    
    Current logic yields the child task as the parent.
    
    Before:
    $ perf record bash -c "perf list > /dev/null"
    $ perf script -D |grep 'FORK\|EXIT'
    4387036190981094 0x5a70 [0x30]: PERF_RECORD_FORK(10472:10472):(10470:10470)
    4387036606207580 0xf050 [0x30]: PERF_RECORD_EXIT(10472:10472):(10472:10472)
    4387036607103839 0x17150 [0x30]: PERF_RECORD_EXIT(10470:10470):(10470:10470)
                                                       ^
      Note the repeated values here -------------------/
    
    After:
    383281514043 0x9d8 [0x30]: PERF_RECORD_FORK(2268:2268):(2266:2266)
    383442003996 0x2180 [0x30]: PERF_RECORD_EXIT(2268:2268):(2266:2266)
    383451297778 0xb70 [0x30]: PERF_RECORD_EXIT(2266:2266):(2265:2265)
    
    Fixes: 94d5d1b2d891 ("perf_counter: Report the cloning task as parent on perf_counter_fork()")
    Reported-by: KP Singh <kpsingh@google.com>
    Signed-off-by: Ian Rogers <irogers@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Link: https://lkml.kernel.org/r/20200417182842.12522-1-irogers@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c04d01e918d89b61d01572ec3c68e9481465438f
Author: Quentin Perret <qperret@google.com>
Date:   Thu Apr 16 09:59:56 2020 +0100

    sched/core: Fix reset-on-fork from RT with uclamp
    
    commit eaf5a92ebde5bca3bb2565616115bd6d579486cd upstream.
    
    uclamp_fork() resets the uclamp values to their default when the
    reset-on-fork flag is set. It also checks whether the task has a RT
    policy, and sets its uclamp.min to 1024 accordingly. However, during
    reset-on-fork, the task's policy is lowered to SCHED_NORMAL right after,
    hence leading to an erroneous uclamp.min setting for the new task if it
    was forked from RT.
    
    Fix this by removing the unnecessary check on rt_task() in
    uclamp_fork() as this doesn't make sense if the reset-on-fork flag is
    set.
    
    Fixes: 1a00d999971c ("sched/uclamp: Set default clamps for RT tasks")
    Reported-by: Chitti Babu Theegala <ctheegal@codeaurora.org>
    Signed-off-by: Quentin Perret <qperret@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Patrick Bellasi <patrick.bellasi@matbug.net>
    Reviewed-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Link: https://lkml.kernel.org/r/20200416085956.217587-1-qperret@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 040287785f4279e08199e0525bc83938e9a157bf
Author: Niklas Schnelle <schnelle@linux.ibm.com>
Date:   Thu Apr 9 09:46:20 2020 +0200

    net/mlx5: Fix failing fw tracer allocation on s390
    
    commit a019b36123aec9700b21ae0724710f62928a8bc1 upstream.
    
    On s390 FORCE_MAX_ZONEORDER is 9 instead of 11, thus a larger kzalloc()
    allocation as done for the firmware tracer will always fail.
    
    Looking at mlx5_fw_tracer_save_trace(), it is actually the driver itself
    that copies the debug data into the trace array and there is no need for
    the allocation to be contiguous in physical memory. We can therefor use
    kvzalloc() instead of kzalloc() and get rid of the large contiguous
    allcoation.
    
    Fixes: f53aaa31cce7 ("net/mlx5: FW tracer, implement tracer logic")
    Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8b5611ffee38226e00e683c9ca70dc565fdf1a9
Author: Niklas Schnelle <schnelle@linux.ibm.com>
Date:   Thu Apr 16 13:44:30 2020 +0200

    s390/pci: do not set affinity for floating irqs
    
    commit 86dbf32da150339ca81509fa2eb84c814b55258b upstream.
    
    with the introduction of CPU directed interrupts the kernel
    parameter pci=force_floating was introduced to fall back
    to the previous behavior using floating irqs.
    
    However we were still setting the affinity in that case,
    both in __irq_alloc_descs() and via the irq_set_affinity
    callback in struct irq_chip.
    
    For the former only set the affinity in the directed case.
    
    The latter is explicitly set in zpci_directed_irq_init()
    so we can just leave it unset for the floating case.
    
    Fixes: e979ce7bced2 ("s390/pci: provide support for CPU directed interrupts")
    Co-developed-by: Alexander Schmidt <alexs@linux.ibm.com>
    Signed-off-by: Alexander Schmidt <alexs@linux.ibm.com>
    Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cfb8c2ada5819da41c4a0e97cc837ce9679b2d6
Author: Toke Høiland-Jørgensen <toke@redhat.com>
Date:   Thu Apr 16 10:31:20 2020 +0200

    cpumap: Avoid warning when CONFIG_DEBUG_PER_CPU_MAPS is enabled
    
    commit bc23d0e3f717ced21fbfacab3ab887d55e5ba367 upstream.
    
    When the kernel is built with CONFIG_DEBUG_PER_CPU_MAPS, the cpumap code
    can trigger a spurious warning if CONFIG_CPUMASK_OFFSTACK is also set. This
    happens because in this configuration, NR_CPUS can be larger than
    nr_cpumask_bits, so the initial check in cpu_map_alloc() is not sufficient
    to guard against hitting the warning in cpumask_check().
    
    Fix this by explicitly checking the supplied key against the
    nr_cpumask_bits variable before calling cpu_possible().
    
    Fixes: 6710e1126934 ("bpf: introduce new bpf cpu map type BPF_MAP_TYPE_CPUMAP")
    Reported-by: Xiumei Mu <xmu@redhat.com>
    Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Tested-by: Xiumei Mu <xmu@redhat.com>
    Acked-by: Jesper Dangaard Brouer <brouer@redhat.com>
    Acked-by: Song Liu <songliubraving@fb.com>
    Link: https://lore.kernel.org/bpf/20200416083120.453718-1-toke@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05ae98547af96df4af0bc3ac1a52f36eb53ac8c7
Author: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
Date:   Wed Apr 15 16:42:33 2020 +0200

    ARM: dts: bcm283x: Disable dsi0 node
    
    commit 90444b958461a5f8fc299ece0fe17eab15cba1e1 upstream.
    
    Since its inception the module was meant to be disabled by default, but
    the original commit failed to add the relevant property.
    
    Fixes: 4aba4cf82054 ("ARM: dts: bcm2835: Add the DSI module nodes and clocks")
    Signed-off-by: Nicolas Saenz Julienne <nsaenzjulienne@suse.de>
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 764a7d0a2756373542e5da01558bf6d1b42ca35d
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Thu Apr 9 12:43:45 2020 -0500

    PCI: Move Apex Edge TPU class quirk to fix BAR assignment
    
    commit 0a8f41023e8a3c100b3dc458ed2da651bf961ead upstream.
    
    Some Google Apex Edge TPU devices have a class code of 0
    (PCI_CLASS_NOT_DEFINED).  This prevents the PCI core from assigning
    resources for the Apex BARs because __dev_sort_resources() ignores
    classless devices, host bridges, and IOAPICs.
    
    On x86, firmware typically assigns those resources, so this was not a
    problem.  But on some architectures, firmware does *not* assign BARs, and
    since the PCI core didn't do it either, the Apex device didn't work
    correctly:
    
      apex 0000:01:00.0: can't enable device: BAR 0 [mem 0x00000000-0x00003fff 64bit pref] not claimed
      apex 0000:01:00.0: error enabling PCI device
    
    f390d08d8b87 ("staging: gasket: apex: fixup undefined PCI class") added a
    quirk to fix the class code, but it was in the apex driver, and if the
    driver was built as a module, it was too late to help.
    
    Move the quirk to the PCI core, where it will always run early enough that
    the PCI core will assign resources if necessary.
    
    Link: https://lore.kernel.org/r/CAEzXK1r0Er039iERnc2KJ4jn7ySNUOG9H=Ha8TD8XroVqiZjgg@mail.gmail.com
    Fixes: f390d08d8b87 ("staging: gasket: apex: fixup undefined PCI class")
    Reported-by: Luís Mendes <luis.p.mendes@gmail.com>
    Debugged-by: Luís Mendes <luis.p.mendes@gmail.com>
    Tested-by: Luis Mendes <luis.p.mendes@gmail.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: Todd Poynor <toddpoynor@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 684dba87fdd726a285683dc27e6aa7567e50c827
Author: Raymond Pang <RaymondPang-oc@zhaoxin.com>
Date:   Fri Mar 27 17:11:48 2020 +0800

    PCI: Add ACS quirk for Zhaoxin Root/Downstream Ports
    
    commit 299bd044a6f332b4a6c8f708575c27cad70a35c1 upstream.
    
    Many Zhaoxin Root Ports and Switch Downstream Ports do provide ACS-like
    capability but have no ACS Capability Structure.  Peer-to-Peer transactions
    could be blocked between these ports, so add quirk so devices behind them
    could be assigned to different IOMMU group.
    
    Link: https://lore.kernel.org/r/20200327091148.5190-4-RaymondPang-oc@zhaoxin.com
    Signed-off-by: Raymond Pang <RaymondPang-oc@zhaoxin.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 17d166e9535cde1276f7d2dd2c7c3b962d96a623
Author: Raymond Pang <RaymondPang-oc@zhaoxin.com>
Date:   Fri Mar 27 17:11:46 2020 +0800

    PCI: Add Zhaoxin Vendor ID
    
    commit 3375590623e4a132b19a8740512f4deb95728933 upstream.
    
    Add Zhaoxin Vendor ID to pci_ids.h
    
    Link: https://lore.kernel.org/r/20200327091148.5190-2-RaymondPang-oc@zhaoxin.com
    Signed-off-by: Raymond Pang <RaymondPang-oc@zhaoxin.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2481b5d1257c2c47181ee735741ac4dc547f365
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Fri Sep 6 18:36:06 2019 -0500

    PCI: Unify ACS quirk desired vs provided checking
    
    commit 7cf2cba43f15c74bac46dc5f0326805d25ef514d upstream.
    
    Most of the ACS quirks have a similar pattern of:
    
      acs_flags &= ~( <controls provided by this device> );
      return acs_flags ? 0 : 1;
    
    Pull this out into a helper function to simplify the quirks slightly.  The
    helper function is also a convenient place for comments about what the list
    of ACS controls means.  No functional change intended.
    
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Reviewed-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 981fd6ad2a5a4527eaf2f1f5ebdca479333ccd99
Author: Bjorn Helgaas <bhelgaas@google.com>
Date:   Thu Sep 5 17:54:42 2019 -0500

    PCI: Make ACS quirk implementations more uniform
    
    commit c8de8ed2dcaac82e5d76d467dc0b02e0ee79809b upstream.
    
    The ACS quirks differ in needless ways, which makes them look more
    different than they really are.
    
    Reorder the ACS flags in order of definitions in the spec:
    
      PCI_ACS_SV   Source Validation
      PCI_ACS_TB   Translation Blocking
      PCI_ACS_RR   P2P Request Redirect
      PCI_ACS_CR   P2P Completion Redirect
      PCI_ACS_UF   Upstream Forwarding
      PCI_ACS_EC   P2P Egress Control
      PCI_ACS_DT   Direct Translated P2P
    
    (PCIe r5.0, sec 7.7.8.2) and use similar code structure in all.  No
    functional change intended.
    
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Logan Gunthorpe <logang@deltatee.com>
    Reviewed-by: Alex Williamson <alex.williamson@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85a9e198f124ed8e9d2af498d18aaa3c511530da
Author: Raymond Pang <RaymondPang-oc@zhaoxin.com>
Date:   Fri Mar 27 17:11:47 2020 +0800

    PCI: Add ACS quirk for Zhaoxin multi-function devices
    
    commit 0325837c51cb7c9a5bd3e354ac0c0cda0667d50e upstream.
    
    Some Zhaoxin endpoints are implemented as multi-function devices without an
    ACS capability, but they actually don't support peer-to-peer transactions.
    Add ACS quirks to declare DMA isolation.
    
    Link: https://lore.kernel.org/r/20200327091148.5190-3-RaymondPang-oc@zhaoxin.com
    Signed-off-by: Raymond Pang <RaymondPang-oc@zhaoxin.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d2b631a136e8022e10cb7c0f881a8f48aff82394
Author: Kai-Heng Feng <kai.heng.feng@canonical.com>
Date:   Fri Dec 20 03:20:06 2019 +0800

    PCI: Avoid ASMedia XHCI USB PME# from D0 defect
    
    commit 2880325bda8d53566dcb9725abc929eec871608e upstream.
    
    The ASMedia USB XHCI Controller claims to support generating PME# while
    in D0:
    
      01:00.0 USB controller: ASMedia Technology Inc. Device 2142 (prog-if 30 [XHCI])
        Subsystem: SUNIX Co., Ltd. Device 312b
        Capabilities: [78] Power Management version 3
          Flags: PMEClk- DSI- D1- D2- AuxCurrent=55mA PME(D0+,D1-,D2-,D3hot-,D3cold-)
          Status: D0 NoSoftRst+ PME-Enable+ DSel=0 DScale=0 PME-
    
    However PME# only gets asserted when plugging USB 2.0 or USB 1.1 devices,
    but not for USB 3.0 devices.
    
    Remove PCI_PM_CAP_PME_D0 to avoid using PME under D0.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=205919
    Link: https://lore.kernel.org/r/20191219192006.16270-1-kai.heng.feng@canonical.com
    Signed-off-by: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 246ff2a6f69e49c7b4f4df4c1b0478c4003e744d
Author: Zhu Yanjun <yanjunz@mellanox.com>
Date:   Wed Apr 8 14:51:52 2020 +0800

    net/mlx5e: Get the latest values from counters in switchdev mode
    
    commit dcdf4ce0ff4ba206fc362e149c8ae81d6a2f849c upstream.
    
    In the switchdev mode, when running "cat
    /sys/class/net/NIC/statistics/tx_packets", the ppcnt register is
    accessed to get the latest values. But currently this command can
    not get the correct values from ppcnt.
    
    From firmware manual, before getting the 802_3 counters, the 802_3
    data layout should be set to the ppcnt register.
    
    When the command "cat /sys/class/net/NIC/statistics/tx_packets" is
    run, before updating 802_3 data layout with ppcnt register, the
    monitor counters are tested. The test result will decide the
    802_3 data layout is updated or not.
    
    Actually the monitor counters do not support to monitor rx/tx
    stats of 802_3 in switchdev mode. So the rx/tx counters change
    will not trigger monitor counters. So the 802_3 data layout will
    not be updated in ppcnt register. Finally this command can not get
    the latest values from ppcnt register with 802_3 data layout.
    
    Fixes: 5c7e8bbb0257 ("net/mlx5e: Use monitor counters for update stats")
    Signed-off-by: Zhu Yanjun <yanjunz@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2292e4049097f6f6bc31f839ad1cb57f933c5a7c
Author: Maxim Mikityanskiy <maximmi@mellanox.com>
Date:   Tue Feb 11 16:02:35 2020 +0200

    net/mlx5e: Don't trigger IRQ multiple times on XSK wakeup to avoid WQ overruns
    
    commit e7e0004abdd6f83ae4be5613b29ed396beff576c upstream.
    
    XSK wakeup function triggers NAPI by posting a NOP WQE to a special XSK
    ICOSQ. When the application floods the driver with wakeup requests by
    calling sendto() in a certain pattern that ends up in mlx5e_trigger_irq,
    the XSK ICOSQ may overflow.
    
    Multiple NOPs are not required and won't accelerate the process, so
    avoid posting a second NOP if there is one already on the way. This way
    we also avoid increasing the queue size (which might not help anyway).
    
    Fixes: db05815b36cb ("net/mlx5e: Add XSK zero-copy support")
    Signed-off-by: Maxim Mikityanskiy <maximmi@mellanox.com>
    Reviewed-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4284efb1e14495c9198f15504164b44009d1821
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Tue Mar 31 17:02:33 2020 -0400

    svcrdma: Fix leak of svc_rdma_recv_ctxt objects
    
    commit 23cf1ee1f1869966b75518c59b5cbda4c6c92450 upstream.
    
    Utilize the xpo_release_rqst transport method to ensure that each
    rqstp's svc_rdma_recv_ctxt object is released even when the server
    cannot return a Reply for that rqstp.
    
    Without this fix, each RPC whose Reply cannot be sent leaks one
    svc_rdma_recv_ctxt. This is a 2.5KB structure, a 4KB DMA-mapped
    Receive buffer, and any pages that might be part of the Reply
    message.
    
    The leak is infrequent unless the network fabric is unreliable or
    Kerberos is in use, as GSS sequence window overruns, which result
    in connection loss, are more common on fast transports.
    
    Fixes: 3a88092ee319 ("svcrdma: Preserve Receive buffer until svc_rdma_sendto")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53dbb934dd4f0adeaca7aced050f8a4cb8434874
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Mon Mar 30 14:27:37 2020 -0400

    svcrdma: Fix trace point use-after-free race
    
    commit e28b4fc652c1830796a4d3e09565f30c20f9a2cf upstream.
    
    I hit this while testing nfsd-5.7 with kernel memory debugging
    enabled on my server:
    
    Mar 30 13:21:45 klimt kernel: BUG: unable to handle page fault for address: ffff8887e6c279a8
    Mar 30 13:21:45 klimt kernel: #PF: supervisor read access in kernel mode
    Mar 30 13:21:45 klimt kernel: #PF: error_code(0x0000) - not-present page
    Mar 30 13:21:45 klimt kernel: PGD 3601067 P4D 3601067 PUD 87c519067 PMD 87c3e2067 PTE 800ffff8193d8060
    Mar 30 13:21:45 klimt kernel: Oops: 0000 [#1] SMP DEBUG_PAGEALLOC PTI
    Mar 30 13:21:45 klimt kernel: CPU: 2 PID: 1933 Comm: nfsd Not tainted 5.6.0-rc6-00040-g881e87a3c6f9 #1591
    Mar 30 13:21:45 klimt kernel: Hardware name: Supermicro Super Server/X10SRL-F, BIOS 1.0c 09/09/2015
    Mar 30 13:21:45 klimt kernel: RIP: 0010:svc_rdma_post_chunk_ctxt+0xab/0x284 [rpcrdma]
    Mar 30 13:21:45 klimt kernel: Code: c1 83 34 02 00 00 29 d0 85 c0 7e 72 48 8b bb a0 02 00 00 48 8d 54 24 08 4c 89 e6 48 8b 07 48 8b 40 20 e8 5a 5c 2b e1 41 89 c6 <8b> 45 20 89 44 24 04 8b 05 02 e9 01 00 85 c0 7e 33 e9 5e 01 00 00
    Mar 30 13:21:45 klimt kernel: RSP: 0018:ffffc90000dfbdd8 EFLAGS: 00010286
    Mar 30 13:21:45 klimt kernel: RAX: 0000000000000000 RBX: ffff8887db8db400 RCX: 0000000000000030
    Mar 30 13:21:45 klimt kernel: RDX: 0000000000000040 RSI: 0000000000000000 RDI: 0000000000000246
    Mar 30 13:21:45 klimt kernel: RBP: ffff8887e6c27988 R08: 0000000000000000 R09: 0000000000000004
    Mar 30 13:21:45 klimt kernel: R10: ffffc90000dfbdd8 R11: 00c068ef00000000 R12: ffff8887eb4e4a80
    Mar 30 13:21:45 klimt kernel: R13: ffff8887db8db634 R14: 0000000000000000 R15: ffff8887fc931000
    Mar 30 13:21:45 klimt kernel: FS:  0000000000000000(0000) GS:ffff88885bd00000(0000) knlGS:0000000000000000
    Mar 30 13:21:45 klimt kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    Mar 30 13:21:45 klimt kernel: CR2: ffff8887e6c279a8 CR3: 000000081b72e002 CR4: 00000000001606e0
    Mar 30 13:21:45 klimt kernel: Call Trace:
    Mar 30 13:21:45 klimt kernel: ? svc_rdma_vec_to_sg+0x7f/0x7f [rpcrdma]
    Mar 30 13:21:45 klimt kernel: svc_rdma_send_write_chunk+0x59/0xce [rpcrdma]
    Mar 30 13:21:45 klimt kernel: svc_rdma_sendto+0xf9/0x3ae [rpcrdma]
    Mar 30 13:21:45 klimt kernel: ? nfsd_destroy+0x51/0x51 [nfsd]
    Mar 30 13:21:45 klimt kernel: svc_send+0x105/0x1e3 [sunrpc]
    Mar 30 13:21:45 klimt kernel: nfsd+0xf2/0x149 [nfsd]
    Mar 30 13:21:45 klimt kernel: kthread+0xf6/0xfb
    Mar 30 13:21:45 klimt kernel: ? kthread_queue_delayed_work+0x74/0x74
    Mar 30 13:21:45 klimt kernel: ret_from_fork+0x3a/0x50
    Mar 30 13:21:45 klimt kernel: Modules linked in: ocfs2_dlmfs ocfs2_stack_o2cb ocfs2_dlm ocfs2_nodemanager ocfs2_stackglue ib_umad ib_ipoib mlx4_ib sb_edac x86_pkg_temp_thermal iTCO_wdt iTCO_vendor_support coretemp kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul ghash_clmulni_intel aesni_intel glue_helper crypto_simd cryptd pcspkr rpcrdma i2c_i801 rdma_ucm lpc_ich mfd_core ib_iser rdma_cm iw_cm ib_cm mei_me raid0 libiscsi mei sg scsi_transport_iscsi ioatdma wmi ipmi_si ipmi_devintf ipmi_msghandler acpi_power_meter nfsd nfs_acl lockd auth_rpcgss grace sunrpc ip_tables xfs libcrc32c mlx4_en sd_mod sr_mod cdrom mlx4_core crc32c_intel igb nvme i2c_algo_bit ahci i2c_core libahci nvme_core dca libata t10_pi qedr dm_mirror dm_region_hash dm_log dm_mod dax qede qed crc8 ib_uverbs ib_core
    Mar 30 13:21:45 klimt kernel: CR2: ffff8887e6c279a8
    Mar 30 13:21:45 klimt kernel: ---[ end trace 87971d2ad3429424 ]---
    
    It's absolutely not safe to use resources pointed to by the @send_wr
    argument of ib_post_send() _after_ that function returns. Those
    resources are typically freed by the Send completion handler, which
    can run before ib_post_send() returns.
    
    Thus the trace points currently around ib_post_send() in the
    server's RPC/RDMA transport are a hazard, even when they are
    disabled. Rearrange them so that they touch the Work Request only
    _before_ ib_post_send() is invoked.
    
    Fixes: bd2abef33394 ("svcrdma: Trace key RDMA API events")
    Fixes: 4201c7464753 ("svcrdma: Introduce svc_rdma_send_ctxt")
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ccd3b4bb9944f0538884d7396246273d8361996d
Author: Brian Foster <bfoster@redhat.com>
Date:   Sun Apr 12 13:11:10 2020 -0700

    xfs: acquire superblock freeze protection on eofblocks scans
    
    commit 4b674b9ac852937af1f8c62f730c325fb6eadcdb upstream.
    
    The filesystem freeze sequence in XFS waits on any background
    eofblocks or cowblocks scans to complete before the filesystem is
    quiesced. At this point, the freezer has already stopped the
    transaction subsystem, however, which means a truncate or cowblock
    cancellation in progress is likely blocked in transaction
    allocation. This results in a deadlock between freeze and the
    associated scanner.
    
    Fix this problem by holding superblock write protection across calls
    into the block reapers. Since protection for background scans is
    acquired from the workqueue task context, trylock to avoid a similar
    deadlock between freeze and blocking on the write lock.
    
    Fixes: d6b636ebb1c9f ("xfs: halt auto-reclamation activities while rebuilding rmap")
    Reported-by: Paul Furtado <paulfurtado91@gmail.com>
    Signed-off-by: Brian Foster <bfoster@redhat.com>
    Reviewed-by: Chandan Rajendra <chandanrlinux@gmail.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Allison Collins <allison.henderson@oracle.com>
    Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 62f1cb49155211818c88a719c48bc01596071e8f
Author: Jason Gunthorpe <jgg@ziepe.ca>
Date:   Tue Apr 14 12:27:08 2020 -0300

    net/cxgb4: Check the return from t4_query_params properly
    
    commit c799fca8baf18d1bbbbad6c3b736eefbde8bdb90 upstream.
    
    Positive return values are also failures that don't set val,
    although this probably can't happen. Fixes gcc 10 warning:
    
    drivers/net/ethernet/chelsio/cxgb4/t4_hw.c: In function ‘t4_phy_fw_ver’:
    drivers/net/ethernet/chelsio/cxgb4/t4_hw.c:3747:14: warning: ‘val’ may be used uninitialized in this function [-Wmaybe-uninitialized]
     3747 |  *phy_fw_ver = val;
    
    Fixes: 01b6961410b7 ("cxgb4: Add PHY firmware support for T420-BT cards")
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce3460b90ed9a1915c5bd6b6795a2aab8d44a727
Author: David Howells <dhowells@redhat.com>
Date:   Mon Apr 13 13:57:14 2020 +0100

    rxrpc: Fix DATA Tx to disable nofrag for UDP on AF_INET6 socket
    
    commit 0e631eee17dcea576ab922fa70e4fdbd596ee452 upstream.
    
    Fix the DATA packet transmission to disable nofrag for UDPv4 on an AF_INET6
    socket as well as UDPv6 when trying to transmit fragmentably.
    
    Without this, packets filled to the normal size used by the kernel AFS
    client of 1412 bytes be rejected by udp_sendmsg() with EMSGSIZE
    immediately.  The ->sk_error_report() notification hook is called, but
    rxrpc doesn't generate a trace for it.
    
    This is a temporary fix; a more permanent solution needs to involve
    changing the size of the packets being filled in accordance with the MTU,
    which isn't currently done in AF_RXRPC.  The reason for not doing so was
    that, barring the last packet in an rx jumbo packet, jumbos can only be
    assembled out of 1412-byte packets - and the plan was to construct jumbos
    on the fly at transmission time.
    
    Also, there's no point turning on IPV6_MTU_DISCOVER, since IPv6 has to
    engage in this anyway since fragmentation is only done by the sender.  We
    can then condense the switch-statement in rxrpc_send_data_packet().
    
    Fixes: 75b54cb57ca3 ("rxrpc: Add IPv6 support")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6cdded333de6818ca64ca5996a0deb756853191b
Author: Wolfram Sang <wsa+renesas@sang-engineering.com>
Date:   Fri Mar 27 23:28:26 2020 +0100

    i2c: altera: use proper variable to hold errno
    
    commit edb2c9dd3948738ef030c32b948543e84f4d3f81 upstream.
    
    device_property_read_u32() returns errno or 0, so we should use the
    integer variable 'ret' and not the u32 'val' to hold the retval.
    
    Fixes: 0560ad576268 ("i2c: altera: Add Altera I2C Controller driver")
    Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
    Reviewed-by: Thor Thayer <thor.thayer@linux.intel.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db2426f86d44fc423aa36fd8b8302aa7155e161f
Author: Jann Horn <jannh@google.com>
Date:   Fri Apr 17 02:00:06 2020 +0200

    bpf: Forbid XADD on spilled pointers for unprivileged users
    
    commit 6e7e63cbb023976d828cdb22422606bf77baa8a9 upstream.
    
    When check_xadd() verifies an XADD operation on a pointer to a stack slot
    containing a spilled pointer, check_stack_read() verifies that the read,
    which is part of XADD, is valid. However, since the placeholder value -1 is
    passed as `value_regno`, check_stack_read() can only return a binary
    decision and can't return the type of the value that was read. The intent
    here is to verify whether the value read from the stack slot may be used as
    a SCALAR_VALUE; but since check_stack_read() doesn't check the type, and
    the type information is lost when check_stack_read() returns, this is not
    enforced, and a malicious user can abuse XADD to leak spilled kernel
    pointers.
    
    Fix it by letting check_stack_read() verify that the value is usable as a
    SCALAR_VALUE if no type information is passed to the caller.
    
    To be able to use __is_pointer_value() in check_stack_read(), move it up.
    
    Fix up the expected unprivileged error message for a BPF selftest that,
    until now, assumed that unprivileged users can use XADD on stack-spilled
    pointers. This also gives us a test for the behavior introduced in this
    patch for free.
    
    In theory, this could also be fixed by forbidding XADD on stack spills
    entirely, since XADD is a locked operation (for operations on memory with
    concurrency) and there can't be any concurrency on the BPF stack; but
    Alexei has said that he wants to keep XADD on stack slots working to avoid
    changes to the test suite [1].
    
    The following BPF program demonstrates how to leak a BPF map pointer as an
    unprivileged user using this bug:
    
        // r7 = map_pointer
        BPF_LD_MAP_FD(BPF_REG_7, small_map),
        // r8 = launder(map_pointer)
        BPF_STX_MEM(BPF_DW, BPF_REG_FP, BPF_REG_7, -8),
        BPF_MOV64_IMM(BPF_REG_1, 0),
        ((struct bpf_insn) {
          .code  = BPF_STX | BPF_DW | BPF_XADD,
          .dst_reg = BPF_REG_FP,
          .src_reg = BPF_REG_1,
          .off = -8
        }),
        BPF_LDX_MEM(BPF_DW, BPF_REG_8, BPF_REG_FP, -8),
    
        // store r8 into map
        BPF_MOV64_REG(BPF_REG_ARG1, BPF_REG_7),
        BPF_MOV64_REG(BPF_REG_ARG2, BPF_REG_FP),
        BPF_ALU64_IMM(BPF_ADD, BPF_REG_ARG2, -4),
        BPF_ST_MEM(BPF_W, BPF_REG_ARG2, 0, 0),
        BPF_EMIT_CALL(BPF_FUNC_map_lookup_elem),
        BPF_JMP_IMM(BPF_JNE, BPF_REG_0, 0, 1),
        BPF_EXIT_INSN(),
        BPF_STX_MEM(BPF_DW, BPF_REG_0, BPF_REG_8, 0),
    
        BPF_MOV64_IMM(BPF_REG_0, 0),
        BPF_EXIT_INSN()
    
    [1] https://lore.kernel.org/bpf/20200416211116.qxqcza5vo2ddnkdq@ast-mbp.dhcp.thefacebook.com/
    
    Fixes: 17a5267067f3 ("bpf: verifier (add verifier core)")
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Link: https://lore.kernel.org/bpf/20200417000007.10734-1-jannh@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1317a4a2b9b289cff6c993a9132d83c8136599f
Author: Vasily Averin <vvs@virtuozzo.com>
Date:   Fri Mar 27 07:50:40 2020 +0300

    nfsd: memory corruption in nfsd4_lock()
    
    commit e1e8399eee72e9d5246d4d1bcacd793debe34dd3 upstream.
    
    New struct nfsd4_blocked_lock allocated in find_or_allocate_block()
    does not initialized nbl_list and nbl_lru.
    If conflock allocation fails rollback can call list_del_init()
    access uninitialized fields and corrupt memory.
    
    v2: just initialize nbl_list and nbl_lru right after nbl allocation.
    
    Fixes: 76d348fadff5 ("nfsd: have nfsd4_lock use blocking locks for v4.1+ lock")
    Signed-off-by: Vasily Averin <vvs@virtuozzo.com>
    Reviewed-by: Jeff Layton <jlayton@kernel.org>
    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13b28f6b67783eddbca0f0db6d13e85e7fd9168a
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Apr 8 17:52:15 2020 +0200

    drivers: soc: xilinx: fix firmware driver Kconfig dependency
    
    commit d0384eedcde21276ac51f57c641f875605024b32 upstream.
    
    The firmware driver is optional, but the power driver depends on it,
    which needs to be reflected in Kconfig to avoid link errors:
    
    aarch64-linux-ld: drivers/soc/xilinx/zynqmp_power.o: in function `zynqmp_pm_isr':
    zynqmp_power.c:(.text+0x284): undefined reference to `zynqmp_pm_invoke_fn'
    
    The firmware driver can probably be allowed for compile-testing as
    well, so it's best to drop the dependency on the ZYNQ platform
    here and allow building as long as the firmware code is built-in.
    
    Fixes: ab272643d723 ("drivers: soc: xilinx: Add ZynqMP PM driver")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Link: https://lore.kernel.org/r/20200408155224.2070880-1-arnd@arndb.de
    Signed-off-by: Michal Simek <michal.simek@xilinx.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1157d97cfa2b2244978f58c0fd0ca879ded904d7
Author: Shengjiu Wang <shengjiu.wang@nxp.com>
Date:   Tue Apr 21 19:28:45 2020 +0800

    ASoC: wm8960: Fix wrong clock after suspend & resume
    
    commit 1e060a453c8604311fb45ae2f84f67ed673329b4 upstream.
    
    After suspend & resume, wm8960_hw_params may be called when
    bias_level is not SND_SOC_BIAS_ON, then wm8960_configure_clocking
    is not called. But if sample rate is changed at that time, then
    the output clock rate will be not correct.
    
    So judgement of bias_level is SND_SOC_BIAS_ON in wm8960_hw_params
    is not necessary and it causes above issue.
    
    Fixes: 3176bf2d7ccd ("ASoC: wm8960: update pll and clock setting function")
    Signed-off-by: Shengjiu Wang <shengjiu.wang@nxp.com>
    Acked-by: Charles Keepax <ckeepax@opensource.cirrus.com>
    Link: https://lore.kernel.org/r/1587468525-27514-1-git-send-email-shengjiu.wang@nxp.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 005aa9f0af9d600d3c8fa655a4aa48e4ec7c5b9d
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Mon Apr 20 13:45:10 2020 +0200

    ASoC: meson: axg-card: fix codec-to-codec link setup
    
    commit 1164284270779e1865cc2046a2a01b58a1e858a9 upstream.
    
    Since the addition of commit 9b5db059366a ("ASoC: soc-pcm: dpcm: Only allow
    playback/capture if supported"), meson-axg cards which have codec-to-codec
    links fail to init and Oops:
    
      Unable to handle kernel NULL pointer dereference at virtual address 0000000000000128
      Internal error: Oops: 96000044 [#1] PREEMPT SMP
      CPU: 3 PID: 1582 Comm: arecord Not tainted 5.7.0-rc1
      pc : invalidate_paths_ep+0x30/0xe0
      lr : snd_soc_dapm_dai_get_connected_widgets+0x170/0x1a8
      Call trace:
       invalidate_paths_ep+0x30/0xe0
       snd_soc_dapm_dai_get_connected_widgets+0x170/0x1a8
       dpcm_path_get+0x38/0xd0
       dpcm_fe_dai_open+0x70/0x920
       snd_pcm_open_substream+0x564/0x840
       snd_pcm_open+0xfc/0x228
       snd_pcm_capture_open+0x4c/0x78
       snd_open+0xac/0x1a8
       ...
    
    While initiliazing the links, ASoC treats the codec-to-codec links of this
    card type as a DPCM backend. This error eventually leads to the Oops.
    
    Most of the card driver code is shared between DPCM backends and
    codec-to-codec links. The property "no_pcm" marking DCPM BE was left set on
    codec-to-codec links, leading to this problem. This commit fixes that.
    
    Fixes: 0a8f1117a680 ("ASoC: meson: axg-card: add basic codec-to-codec link support")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Link: https://lore.kernel.org/r/20200420114511.450560-2-jbrunet@baylibre.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 08865eb796c4e90ee8eb2ac8c54caed8eddd15b5
Author: Philipp Puschmann <p.puschmann@pironex.de>
Date:   Tue Apr 14 13:27:54 2020 +0200

    ASoC: tas571x: disable regulators on failed probe
    
    commit 9df8ba7c63073508e5aa677dade48fcab6a6773e upstream.
    
    If probe fails after enabling the regulators regulator_put is called for
    each supply without having them disabled before. This produces some
    warnings like
    
    WARNING: CPU: 0 PID: 90 at drivers/regulator/core.c:2044 _regulator_put.part.0+0x154/0x15c
    [<c010f7a8>] (unwind_backtrace) from [<c010c544>] (show_stack+0x10/0x14)
    [<c010c544>] (show_stack) from [<c012b640>] (__warn+0xd0/0xf4)
    [<c012b640>] (__warn) from [<c012b9b4>] (warn_slowpath_fmt+0x64/0xc4)
    [<c012b9b4>] (warn_slowpath_fmt) from [<c04c4064>] (_regulator_put.part.0+0x154/0x15c)
    [<c04c4064>] (_regulator_put.part.0) from [<c04c4094>] (regulator_put+0x28/0x38)
    [<c04c4094>] (regulator_put) from [<c04c40cc>] (regulator_bulk_free+0x28/0x38)
    [<c04c40cc>] (regulator_bulk_free) from [<c0579b2c>] (release_nodes+0x1d0/0x22c)
    [<c0579b2c>] (release_nodes) from [<c05756dc>] (really_probe+0x108/0x34c)
    [<c05756dc>] (really_probe) from [<c0575aec>] (driver_probe_device+0xb8/0x16c)
    [<c0575aec>] (driver_probe_device) from [<c0575d40>] (device_driver_attach+0x58/0x60)
    [<c0575d40>] (device_driver_attach) from [<c0575da0>] (__driver_attach+0x58/0xcc)
    [<c0575da0>] (__driver_attach) from [<c0573978>] (bus_for_each_dev+0x78/0xc0)
    [<c0573978>] (bus_for_each_dev) from [<c0574b5c>] (bus_add_driver+0x188/0x1e0)
    [<c0574b5c>] (bus_add_driver) from [<c05768b0>] (driver_register+0x74/0x108)
    [<c05768b0>] (driver_register) from [<c061ab7c>] (i2c_register_driver+0x3c/0x88)
    [<c061ab7c>] (i2c_register_driver) from [<c0102df8>] (do_one_initcall+0x58/0x250)
    [<c0102df8>] (do_one_initcall) from [<c01a91bc>] (do_init_module+0x60/0x244)
    [<c01a91bc>] (do_init_module) from [<c01ab5a4>] (load_module+0x2180/0x2540)
    [<c01ab5a4>] (load_module) from [<c01abbd4>] (sys_finit_module+0xd0/0xe8)
    [<c01abbd4>] (sys_finit_module) from [<c01011e0>] (__sys_trace_return+0x0/0x20)
    
    Fixes: 3fd6e7d9a146 (ASoC: tas571x: New driver for TI TAS571x power amplifiers)
    Signed-off-by: Philipp Puschmann <p.puschmann@pironex.de>
    Link: https://lore.kernel.org/r/20200414112754.3365406-1-p.puschmann@pironex.de
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e9058b45556b051f696ab7c40437b6eec2026abd
Author: Stephan Gerhold <stephan@gerhold.net>
Date:   Wed Apr 15 17:00:50 2020 +0200

    ASoC: q6dsp6: q6afe-dai: add missing channels to MI2S DAIs
    
    commit 0c824ec094b5cda766c80d88c2036e28c24a4cb1 upstream.
    
    For some reason, the MI2S DAIs do not have channels_min/max defined.
    This means that snd_soc_dai_stream_valid() returns false,
    i.e. the DAIs have neither valid playback nor capture stream.
    
    It's quite surprising that this ever worked correctly,
    but in 5.7-rc1 this is now failing badly: :)
    
    Commit 0e9cf4c452ad ("ASoC: pcm: check if cpu-dai supports a given stream")
    introduced a check for snd_soc_dai_stream_valid() before calling
    hw_params(), which means that the q6i2s_hw_params() function
    was never called, eventually resulting in:
    
        qcom-q6afe aprsvc:q6afe:4:4: no line is assigned
    
    ... even though "qcom,sd-lines" is set in the device tree.
    
    Commit 9b5db059366a ("ASoC: soc-pcm: dpcm: Only allow playback/capture if supported")
    now even avoids creating PCM devices if the stream is not supported,
    which means that it is failing even earlier with e.g.:
    
        Primary MI2S: ASoC: no backend playback stream
    
    Avoid all that trouble by adding channels_min/max for the MI2S DAIs.
    
    Fixes: 24c4cbcfac09 ("ASoC: qdsp6: q6afe: Add q6afe dai driver")
    Signed-off-by: Stephan Gerhold <stephan@gerhold.net>
    Reviewed-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Cc: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Link: https://lore.kernel.org/r/20200415150050.616392-1-stephan@gerhold.net
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 37405f2963c7e9de7f6183109143951ab81b1ed8
Author: Philipp Rudo <prudo@linux.ibm.com>
Date:   Mon Apr 6 14:47:48 2020 +0200

    s390/ftrace: fix potential crashes when switching tracers
    
    commit 8ebf6da9db1b2a20bb86cc1bee2552e894d03308 upstream.
    
    Switching tracers include instruction patching. To prevent that a
    instruction is patched while it's read the instruction patching is done
    in stop_machine 'context'. This also means that any function called
    during stop_machine must not be traced. Thus add 'notrace' to all
    functions called within stop_machine.
    
    Fixes: 1ec2772e0c3c ("s390/diag: add a statistic for diagnose calls")
    Fixes: 38f2c691a4b3 ("s390: improve wait logic of stop_machine")
    Fixes: 4ecf0a43e729 ("processor: get rid of cpu_relax_yield")
    Signed-off-by: Philipp Rudo <prudo@linux.ibm.com>
    Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1f107e441bde6794a7b3bc534823770c7e6911b4
Author: Syed Nayyar Waris <syednwaris@gmail.com>
Date:   Mon Mar 16 18:19:30 2020 +0530

    counter: 104-quad-8: Add lock guards - generic interface
    
    commit fc069262261c43ed11d639dadcf982e79bfe652b upstream.
    
    Add lock protection from race conditions to 104-quad-8 counter driver
    generic interface code changes. Mutex calls used for protection.
    
    Fixes: f1d8a071d45b ("counter: 104-quad-8: Add Generic Counter interface support")
    
    Signed-off-by: Syed Nayyar Waris <syednwaris@gmail.com>
    Signed-off-by: William Breathitt Gray <vilhelm.gray@gmail.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit db66fd5fef687816276d6b08adf6728086fd3c9f
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Mon Apr 27 10:26:22 2020 -0400

    propagate_one(): mnt_set_mountpoint() needs mount_lock
    
    commit b0d3869ce9eeacbb1bbd541909beeef4126426d5 upstream.
    
    ... to protect the modification of mp->m_count done by it.  Most of
    the places that modify that thing also have namespace_lock held,
    but not all of them can do so, so we really need mount_lock here.
    Kudos to Piotr Krysiuk <piotras@gmail.com>, who'd spotted a related
    bug in pivot_root(2) (fixed unnoticed in 5.3); search for other
    similar turds has caught out this one.
    
    Cc: stable@kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f9e41e4bbe61ad92139747b408163794992a544a
Author: YueHaibing <yuehaibing@huawei.com>
Date:   Tue Mar 10 22:16:54 2020 +0800

    iio:ad7797: Use correct attribute_group
    
    commit 28535877ac5b2b84f0d394fd67a5ec71c0c48b10 upstream.
    
    It should use ad7797_attribute_group in ad7797_info,
    according to commit ("iio:ad7793: Add support for the ad7796 and ad7797").
    
    Scale is fixed for the ad7796 and not programmable, hence
    should not have the scale_available attribute.
    
    Fixes: fd1a8b912841 ("iio:ad7793: Add support for the ad7796 and ad7797")
    Signed-off-by: YueHaibing <yuehaibing@huawei.com>
    Reviewed-by: Lars-Peter Clausen <lars@metafoo.de>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f581eff9395893b2d31b0521d50206d3a2c6b73a
Author: David Howells <dhowells@redhat.com>
Date:   Fri Apr 24 11:21:14 2020 +0100

    afs: Fix to actually set AFS_SERVER_FL_HAVE_EPOCH
    
    commit 69cf3978f3ada4e54beae4ad44868b5627864884 upstream.
    
    AFS keeps track of the epoch value from the rxrpc protocol to note (a) when
    a fileserver appears to have restarted and (b) when different endpoints of
    a fileserver do not appear to be associated with the same fileserver
    (ie. all probes back from a fileserver from all of its interfaces should
    carry the same epoch).
    
    However, the AFS_SERVER_FL_HAVE_EPOCH flag that indicates that we've
    received the server's epoch is never set, though it is used.
    
    Fix this to set the flag when we first receive an epoch value from a probe
    sent to the filesystem client from the fileserver.
    
    Fixes: 3bf0fb6f33dd ("afs: Probe multiple fileservers simultaneously")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c2bdc86ec8ac483e76c4bd59fcafad3a3cf91539
Author: David Howells <dhowells@redhat.com>
Date:   Thu Apr 16 18:17:13 2020 +0100

    afs: Make record checking use TASK_UNINTERRUPTIBLE when appropriate
    
    commit c4bfda16d1b40d1c5941c61b5aa336bdd2d9904a upstream.
    
    When an operation is meant to be done uninterruptibly (such as
    FS.StoreData), we should not be allowing volume and server record checking
    to be interrupted.
    
    Fixes: d2ddc776a458 ("afs: Overhaul volume and server record caching and fileserver rotation")
    Signed-off-by: David Howells <dhowells@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9dcb1844f884e8294e46ff317b0532068784eb5f
Author: Cristian Birsan <cristian.birsan@microchip.com>
Date:   Fri Apr 10 15:14:52 2020 +0300

    usb: gadget: udc: atmel: Fix vbus disconnect handling
    
    commit 12b94da411f9c6d950beb067d913024fd5617a61 upstream.
    
    A DMA transfer can be in progress while vbus is lost due to a cable
    disconnect. For endpoints that use DMA, this condition can lead to
    peripheral hang. The patch ensures that endpoints are disabled before
    the clocks are stopped to prevent this issue.
    
    Fixes: a64ef71ddc13 ("usb: gadget: atmel_usba_udc: condition clocks to vbus state")
    Signed-off-by: Cristian Birsan <cristian.birsan@microchip.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7155416143dd92957505f355bf117b2708af6221
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Sat Mar 28 18:12:46 2020 -0700

    usb: gadget: udc: bdc: Remove unnecessary NULL checks in bdc_req_complete
    
    commit 09b04abb70f096333bef6bc95fa600b662e7ee13 upstream.
    
    When building with Clang + -Wtautological-pointer-compare:
    
    drivers/usb/gadget/udc/bdc/bdc_ep.c:543:28: warning: comparison of
    address of 'req->queue' equal to a null pointer is always false
    [-Wtautological-pointer-compare]
            if (req == NULL  || &req->queue == NULL || &req->usb_req == NULL)
                                 ~~~~~^~~~~    ~~~~
    drivers/usb/gadget/udc/bdc/bdc_ep.c:543:51: warning: comparison of
    address of 'req->usb_req' equal to a null pointer is always false
    [-Wtautological-pointer-compare]
            if (req == NULL  || &req->queue == NULL || &req->usb_req == NULL)
                                                        ~~~~~^~~~~~~    ~~~~
    2 warnings generated.
    
    As it notes, these statements will always evaluate to false so remove
    them.
    
    Fixes: efed421a94e6 ("usb: gadget: Add UDC driver for Broadcom USB3.0 device controller IP BDC")
    Link: https://github.com/ClangBuiltLinux/linux/issues/749
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8f4cd6f0ea8278ded04145f6034ea7c7f3681fae
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Tue Apr 21 12:35:28 2020 +0900

    kbuild: fix DT binding schema rule again to avoid needless rebuilds
    
    commit 3d4b2238684ac919394eba7fb51bb7eeeec6ab57 upstream.
    
    Since commit 7a0496056064 ("kbuild: fix DT binding schema rule to detect
    command line changes"), this rule is every time re-run even if you change
    nothing.
    
    cmd_dtc takes one additional parameter to pass to the -O option of dtc.
    
    We need to pass 'yaml' to if_changed_rule. Otherwise, cmd-check invoked
    from if_changed_rule is false positive.
    
    Fixes: 7a0496056064 ("kbuild: fix DT binding schema rule to detect command line changes")
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7067a62563d2a8d3c75d00268bc539a30fcdc64a
Author: Thinh Nguyen <Thinh.Nguyen@synopsys.com>
Date:   Fri Jan 31 16:25:50 2020 -0800

    usb: dwc3: gadget: Do link recovery for SS and SSP
    
    commit d0550cd20e52558ecf6847a0f96ebd5d944c17e4 upstream.
    
    The controller always supports link recovery for device in SS and SSP.
    Remove the speed limit check. Also, when the device is in RESUME or
    RESET state, it means the controller received the resume/reset request.
    The driver must send the link recovery to acknowledge the request. They
    are valid states for the driver to send link recovery.
    
    Fixes: 72246da40f37 ("usb: Introduce DesignWare USB3 DRD Driver")
    Fixes: ee5cd41c9117 ("usb: dwc3: Update speed checks for SuperSpeedPlus")
    Signed-off-by: Thinh Nguyen <thinhn@synopsys.com>
    Signed-off-by: Felipe Balbi <balbi@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a74a5435a6103134862549d0eaee6a85ef383b7e
Author: Olivier Moysan <olivier.moysan@st.com>
Date:   Fri Apr 17 16:21:22 2020 +0200

    ASoC: stm32: sai: fix sai probe
    
    commit e2bcb65782f91390952e849e21b82ed7cb05697f upstream.
    
    pcm config must be set before snd_dmaengine_pcm_register() call.
    
    Fixes: 0d6defc7e0e4 ("ASoC: stm32: sai: manage rebind issue")
    
    Signed-off-by: Olivier Moysan <olivier.moysan@st.com>
    Link: https://lore.kernel.org/r/20200417142122.10212-1-olivier.moysan@st.com
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4a5c9ae67b12f628fdc8f9ffac7e5677d510dd5e
Author: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
Date:   Tue Mar 3 20:30:02 2020 +0900

    printk: queue wake_up_klogd irq_work only if per-CPU areas are ready
    
    commit ab6f762f0f53162d41497708b33c9a3236d3609e upstream.
    
    printk_deferred(), similarly to printk_safe/printk_nmi, does not
    immediately attempt to print a new message on the consoles, avoiding
    calls into non-reentrant kernel paths, e.g. scheduler or timekeeping,
    which potentially can deadlock the system.
    
    Those printk() flavors, instead, rely on per-CPU flush irq_work to print
    messages from safer contexts.  For same reasons (recursive scheduler or
    timekeeping calls) printk() uses per-CPU irq_work in order to wake up
    user space syslog/kmsg readers.
    
    However, only printk_safe/printk_nmi do make sure that per-CPU areas
    have been initialised and that it's safe to modify per-CPU irq_work.
    This means that, for instance, should printk_deferred() be invoked "too
    early", that is before per-CPU areas are initialised, printk_deferred()
    will perform illegal per-CPU access.
    
    Lech Perczak [0] reports that after commit 1b710b1b10ef ("char/random:
    silence a lockdep splat with printk()") user-space syslog/kmsg readers
    are not able to read new kernel messages.
    
    The reason is printk_deferred() being called too early (as was pointed
    out by Petr and John).
    
    Fix printk_deferred() and do not queue per-CPU irq_work before per-CPU
    areas are initialized.
    
    Link: https://lore.kernel.org/lkml/aa0732c6-5c4e-8a8b-a1c1-75ebe3dca05b@camlintechnologies.com/
    Reported-by: Lech Perczak <l.perczak@camlintechnologies.com>
    Signed-off-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Tested-by: Jann Horn <jannh@google.com>
    Reviewed-by: Petr Mladek <pmladek@suse.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Theodore Ts'o <tytso@mit.edu>
    Cc: John Ogness <john.ogness@linutronix.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 276224b7a1477a5ade09c147c984763c2548cf77
Author: Richard Weinberger <richard@nod.at>
Date:   Sun Jan 19 22:52:33 2020 +0100

    ubifs: Fix ubifs_tnc_lookup() usage in do_kill_orphans()
    
    commit 4ab25ac8b2b5514151d5f91cf9514df08dd26938 upstream.
    
    Orphans are allowed to point to deleted inodes.
    So -ENOENT is not a fatal error.
    
    Reported-by: Кочетков Максим <fido_max@inbox.ru>
    Reported-and-tested-by: "Christian Berger" <Christian.Berger@de.bosch.com>
    Tested-by: Karl Olsen <karl@micro-technic.com>
    Tested-by: Jef Driesen <jef.driesen@niko.eu>
    Fixes: ee1438ce5dc4 ("ubifs: Check link count of inodes when killing orphans.")
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Cc: Christian Eggers <ceggers@arri.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4d23f544a32884e794946861f584027af916fd87
Author: Clement Leger <cleger@kalray.eu>
Date:   Fri Oct 4 09:37:36 2019 +0200

    remoteproc: Fix wrong rvring index computation
    
    commit 00a0eec59ddbb1ce966b19097d8a8d2f777e726a upstream.
    
    Index of rvring is computed using pointer arithmetic. However, since
    rvring->rvdev->vring is the base of the vring array, computation
    of rvring idx should be reversed. It previously lead to writing at negative
    indices in the resource table.
    
    Signed-off-by: Clement Leger <cleger@kalray.eu>
    Link: https://lore.kernel.org/r/20191004073736.8327-1-cleger@kalray.eu
    Signed-off-by: Bjorn Andersson <bjorn.andersson@linaro.org>
    Cc: Doug Anderson <dianders@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
