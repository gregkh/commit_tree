commit 50704410d0141be55c8be5c330dae9fe5186b6c0
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Oct 18 11:24:16 2013 -0700

    Linux 3.11.6

commit 587326a4cd292acf89704fb6e7e6e73fab87da44
Author: Linn Crosetto <linn@hp.com>
Date:   Tue Aug 13 15:46:41 2013 -0600

    x86: avoid remapping data in parse_setup_data()
    
    commit 30e46b574a1db7d14404e52dca8e1aa5f5155fd2 upstream.
    
    Type SETUP_PCI, added by setup_efi_pci(), may advertise a ROM size
    larger than early_memremap() is able to handle, which is currently
    limited to 256kB. If this occurs it leads to a NULL dereference in
    parse_setup_data().
    
    To avoid this, remap the setup_data header and allow parsing functions
    for individual types to handle their own data remapping.
    
    Signed-off-by: Linn Crosetto <linn@hp.com>
    Link: http://lkml.kernel.org/r/1376430401-67445-1-git-send-email-linn@hp.com
    Acked-by: Yinghai Lu <yinghai@kernel.org>
    Reviewed-by: Pekka Enberg <penberg@kernel.org>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Paul Gortmaker <paul.gortmaker@windriver.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 00cdee573eafb5d475ac936fce98530be23ceb42
Author: Manfred Spraul <manfred@colorfullife.com>
Date:   Mon Sep 30 13:45:25 2013 -0700

    ipc/sem.c: update sem_otime for all operations
    
    commit 0e8c665699e953fa58dc1b0b0d09e5dce7343cc7 upstream.
    
    In commit 0a2b9d4c7967 ("ipc/sem.c: move wake_up_process out of the
    spinlock section"), the update of semaphore's sem_otime(last semop time)
    was moved to one central position (do_smart_update).
    
    But since do_smart_update() is only called for operations that modify
    the array, this means that wait-for-zero semops do not update sem_otime
    anymore.
    
    The fix is simple:
    Non-alter operations must update sem_otime.
    
    [akpm@linux-foundation.org: coding-style fixes]
    Signed-off-by: Manfred Spraul <manfred@colorfullife.com>
    Reported-by: Jia He <jiakernel@gmail.com>
    Tested-by: Jia He <jiakernel@gmail.com>
    Cc: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 469231ffd40187f3e0a7ef7c0b50c88fd0454d46
Author: Manfred Spraul <manfred@colorfullife.com>
Date:   Mon Sep 30 13:45:07 2013 -0700

    ipc/sem.c: synchronize the proc interface
    
    commit d8c633766ad88527f25d9f81a5c2f083d78a2b39 upstream.
    
    The proc interface is not aware of sem_lock(), it instead calls
    ipc_lock_object() directly.  This means that simple semop() operations
    can run in parallel with the proc interface.  Right now, this is
    uncritical, because the implementation doesn't do anything that requires
    a proper synchronization.
    
    But it is dangerous and therefore should be fixed.
    
    Signed-off-by: Manfred Spraul <manfred@colorfullife.com>
    Cc: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Rik van Riel <riel@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b8fe6d417f93fa628779b1afd9e7717bbcb0572
Author: Manfred Spraul <manfred@colorfullife.com>
Date:   Mon Sep 30 13:45:06 2013 -0700

    ipc/sem.c: optimize sem_lock()
    
    commit 6d07b68ce16ae9535955ba2059dedba5309c3ca1 upstream.
    
    Operations that need access to the whole array must guarantee that there
    are no simple operations ongoing.  Right now this is achieved by
    spin_unlock_wait(sem->lock) on all semaphores.
    
    If complex_count is nonzero, then this spin_unlock_wait() is not
    necessary, because it was already performed in the past by the thread
    that increased complex_count and even though sem_perm.lock was dropped
    inbetween, no simple operation could have started, because simple
    operations cannot start when complex_count is non-zero.
    
    Signed-off-by: Manfred Spraul <manfred@colorfullife.com>
    Cc: Mike Galbraith <bitbucket@online.de>
    Cc: Rik van Riel <riel@redhat.com>
    Reviewed-by: Davidlohr Bueso <davidlohr@hp.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b284be46733010b15406e15e61871cc1c30dd5e
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:31 2013 -0700

    ipc: drop ipc_lock_check
    
    commit 20b8875abcf2daa1dda5cf70bd6369df5e85d4c1 upstream.
    
    No remaining users, we now use ipc_obtain_object_check().
    
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Cc: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c7f0866bc7a002a262ab9fb5e2aa19d2367ea114
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:30 2013 -0700

    ipc, shm: drop shm_lock_check
    
    commit 7a25dd9e042b2b94202a67e5551112f4ac87285a upstream.
    
    This function was replaced by a the lockless shm_obtain_object_check(),
    and no longer has any users.
    
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Cc: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1104f1b038765d0e31262eecdea6010907194226
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:29 2013 -0700

    ipc: drop ipc_lock_by_ptr
    
    commit 32a2750010981216fb788c5190fb0e646abfab30 upstream.
    
    After previous cleanups and optimizations, this function is no longer
    heavily used and we don't have a good reason to keep it.  Update the few
    remaining callers and get rid of it.
    
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Cc: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 38635ab21b23cc474c6017667a7736f5b55d3bfb
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:28 2013 -0700

    ipc, shm: guard against non-existant vma in shmdt(2)
    
    commit 530fcd16d87cd2417c472a581ba5a1e501556c86 upstream.
    
    When !CONFIG_MMU there's a chance we can derefence a NULL pointer when the
    VM area isn't found - check the return value of find_vma().
    
    Also, remove the redundant -EINVAL return: retval is set to the proper
    return code and *only* changed to 0, when we actually unmap the segments.
    
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Cc: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e6290aa76894ece28cdb86d1c4f21fe25763d3a0
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:26 2013 -0700

    ipc: document general ipc locking scheme
    
    commit 05603c44a7627793219b0bd9a7b236099dc9cd9d upstream.
    
    As suggested by Andrew, add a generic initial locking scheme used
    throughout all sysv ipc mechanisms.  Documenting the ids rwsem, how rcu
    can be enough to do the initial checks and when to actually acquire the
    kern_ipc_perm.lock spinlock.
    
    I found that adding it to util.c was generic enough.
    
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 59ec90d76a4bf073b717142c9a08fd7db31b1ee4
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:25 2013 -0700

    ipc,msg: drop msg_unlock
    
    commit 4718787d1f626f45ddb239912bc07266b9880044 upstream.
    
    There is only one user left, drop this function and just call
    ipc_unlock_object() and rcu_read_unlock().
    
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6076569efb44193e3cd04b37fe8e99a5ab1221a
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:24 2013 -0700

    ipc: rename ids->rw_mutex
    
    commit d9a605e40b1376eb02b067d7690580255a0df68f upstream.
    
    Since in some situations the lock can be shared for readers, we shouldn't
    be calling it a mutex, rename it to rwsem.
    
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 19dfd03af7f194adb7ecfc3c2ecfefc1b6686ef1
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:23 2013 -0700

    ipc,shm: shorten critical region for shmat
    
    commit c2c737a0461e61a34676bd0bd1bc1a70a1b4e396 upstream.
    
    Similar to other system calls, acquire the kern_ipc_perm lock after doing
    the initial permission and security checks.
    
    [sasha.levin@oracle.com: dont leave do_shmat with rcu lock held]
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Sasha Levin <sasha.levin@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dbb563ec7b143323dd31520ab08c08394bc13381
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:22 2013 -0700

    ipc,shm: cleanup do_shmat pasta
    
    commit f42569b1388b1408b574a5e93a23a663647d4181 upstream.
    
    Clean up some of the messy do_shmat() spaghetti code, getting rid of
    out_free and out_put_dentry labels.  This makes shortening the critical
    region of this function in the next patch a little easier to do and read.
    
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 610a094ba321d59d1bae2535885f698c07a52daa
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:21 2013 -0700

    ipc,shm: shorten critical region for shmctl
    
    commit 2caacaa82a51b78fc0c800e206473874094287ed upstream.
    
    With the *_INFO, *_STAT, IPC_RMID and IPC_SET commands already optimized,
    deal with the remaining SHM_LOCK and SHM_UNLOCK commands.  Take the
    shm_perm lock after doing the initial auditing and security checks.  The
    rest of the logic remains unchanged.
    
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1c7ee8a0cc8ba17b5f99133b004edfe64fb496fb
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:20 2013 -0700

    ipc,shm: make shmctl_nolock lockless
    
    commit c97cb9ccab8c85428ec21eff690642ad2ce1fa8a upstream.
    
    While the INFO cmd doesn't take the ipc lock, the STAT commands do acquire
    it unnecessarily.  We can do the permissions and security checks only
    holding the rcu lock.
    
    [akpm@linux-foundation.org: coding-style fixes]
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit dafeda2a919bae062d63df18cfbe75672f86e54b
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:18 2013 -0700

    ipc,shm: introduce shmctl_nolock
    
    commit 68eccc1dc345539d589ae78ee43b835c1a06a134 upstream.
    
    Similar to semctl and msgctl, when calling msgctl, the *_INFO and *_STAT
    commands can be performed without acquiring the ipc object.
    
    Add a shmctl_nolock() function and move the logic of *_INFO and *_STAT out
    of msgctl().  Since we are just moving functionality, this change still
    takes the lock and it will be properly lockless in the next patch.
    
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24fc1afb6d63731203f5069b5c5ab19c6343e4ba
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:17 2013 -0700

    ipc: drop ipcctl_pre_down
    
    commit 3b1c4ad37741e53804ffe0a30dd01e08b2ab6241 upstream.
    
    Now that sem, msgque and shm, through *_down(), all use the lockless
    variant of ipcctl_pre_down(), go ahead and delete it.
    
    [akpm@linux-foundation.org: fix function name in kerneldoc, cleanups]
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ef177b34f44947335d283f8da4f4783b6a896830
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:16 2013 -0700

    ipc,shm: shorten critical region in shmctl_down
    
    commit 79ccf0f8c8e04e8b9eda6645ba0f63b0915a3075 upstream.
    
    Instead of holding the ipc lock for the entire function, use the
    ipcctl_pre_down_nolock and only acquire the lock for specific commands:
    RMID and SET.
    
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f8afd1fd31f4e263ee407f20f65b7afb8bef23b9
Author: Davidlohr Bueso <davidlohr.bueso@hp.com>
Date:   Wed Sep 11 14:26:15 2013 -0700

    ipc,shm: introduce lockless functions to obtain the ipc object
    
    commit 8b8d52ac382b17a19906b930cd69e2edb0aca8ba upstream.
    
    This is the third and final patchset that deals with reducing the amount
    of contention we impose on the ipc lock (kern_ipc_perm.lock).  These
    changes mostly deal with shared memory, previous work has already been
    done for semaphores and message queues:
    
      http://lkml.org/lkml/2013/3/20/546 (sems)
      http://lkml.org/lkml/2013/5/15/584 (mqueues)
    
    With these patches applied, a custom shm microbenchmark stressing shmctl
    doing IPC_STAT with 4 threads a million times, reduces the execution
    time by 50%.  A similar run, this time with IPC_SET, reduces the
    execution time from 3 mins and 35 secs to 27 seconds.
    
    Patches 1-8: replaces blindly taking the ipc lock for a smarter
    combination of rcu and ipc_obtain_object, only acquiring the spinlock
    when updating.
    
    Patch 9: renames the ids rw_mutex to rwsem, which is what it already was.
    
    Patch 10: is a trivial mqueue leftover cleanup
    
    Patch 11: adds a brief lock scheme description, requested by Andrew.
    
    This patch:
    
    Add shm_obtain_object() and shm_obtain_object_check(), which will allow us
    to get the ipc object without acquiring the lock.  Just as with other
    forms of ipc, these functions are basically wrappers around
    ipc_obtain_object*().
    
    Signed-off-by: Davidlohr Bueso <davidlohr.bueso@hp.com>
    Tested-by: Sedat Dilek <sedat.dilek@gmail.com>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8bacb5ad41da1fde1c05165515c50e2911f16899
Author: wojciech kapuscinski <wojtask9@wp.pl>
Date:   Tue Oct 1 19:54:33 2013 -0400

    drm/radeon: fix hw contexts for SUMO2 asics
    
    commit 50b8f5aec04ebec7dbdf2adb17220b9148c99e63 upstream.
    
    They have 4 rather than 8.
    
    Fixes:
    https://bugs.freedesktop.org/show_bug.cgi?id=63599
    
    Signed-off-by: wojciech kapuscinski <wojtask9@wp.pl>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a8cb761a901d83f67476d513bf3b28d6dc3ff7e2
Author: Alex Deucher <alexander.deucher@amd.com>
Date:   Tue Oct 1 16:40:45 2013 -0400

    drm/radeon: fix typo in CP DMA register headers
    
    commit aa3e146d04b6ae37939daeebaec060562b3db559 upstream.
    
    Wrong bit offset for SRC endian swapping.
    
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1999f171b41cd3bb07a42832d406da4854f9d306
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Mon Jul 1 19:39:34 2013 +0300

    drm/radeon: forever loop on error in radeon_do_test_moves()
    
    commit 89cd67b326fa95872cc2b4524cd807128db6071d upstream.
    
    The error path does this:
    
            for (--i; i >= 0; --i) {
    
    which is a forever loop because "i" is unsigned.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 18696c0ee4e595627a8035def695ca338f03a1f9
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Sat Sep 28 12:35:31 2013 +0300

    drm/radeon/dpm: off by one in si_set_mc_special_registers()
    
    commit 5fd9c581862a4874c0bdaf16231d8873832bbb99 upstream.
    
    These checks should be ">=" instead of ">".  j is used as an offset into
    the table->mc_reg_address[] array and that has
    SMC_SISLANDS_MC_REGISTER_ARRAY_SIZE (16) elements.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b38b7659dabd2b931a5eebde9868c2a7416ad3e8
Author: Imre Deak <imre.deak@intel.com>
Date:   Tue Oct 1 18:11:26 2013 +0300

    drm/i915: fix rps.vlv_work initialization
    
    commit 671952a2a290a90017c64e75b7dd0343b0d005b4 upstream.
    
    During driver loading we are initializing rps.vlv_work in
    valleyview_enable_rps() via the rps.delayed_resume_work delayed work.
    This is too late since we are using vlv_work already via
    i915_driver_load()->intel_uncore_sanitize()->
    intel_disable_gt_powersave(). This at least leads to the following
    kernel warning:
    
     INFO: trying to register non-static key.
     the code is fine but needs lockdep annotation.
     turning off the locking correctness validator.
    
    Fix this by initialzing vlv_work before we call intel_uncore_sanitize().
    
    The regression was introduced in
    
    commit 7dcd2677ea912573d9ed4bcd629b0023b2d11505
    Author: Konstantin Khlebnikov <khlebnikov@openvz.org>
    Date:   Wed Jul 17 10:22:58 2013 +0400
    
        drm/i915: fix long-standing SNB regression in power consumption
        after resume
    
    though there was no good reason to initialize the static vlv_work from
    another delayed work to begin with (especially since this will happen
    multiple times).
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=69397
    Tested-by: shui yangwei <yangweix.shui@intel.com>
    Signed-off-by: Imre Deak <imre.deak@intel.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fd557527293e5c632ea51fbb9ae1faf08a1bf0aa
Author: Chris Wilson <chris@chris-wilson.co.uk>
Date:   Sun Sep 29 19:15:07 2013 +0100

    drm/i915: Only apply DPMS to the encoder if enabled
    
    commit c9976dcf55c8aaa7037427b239f15e5acfc01a3a upstream.
    
    The current test for an attached enabled encoder fails if we have
    multiple connectors aliased to the same encoder - both connectors
    believe they own the enabled encoder and so we attempt to both enable
    and disable DPMS on the encoder, leading to hilarity and an OOPs:
    
    [  354.803064] WARNING: CPU: 0 PID: 482 at
    /usr/src/linux/dist/3.11.2/drivers/gpu/drm/i915/intel_display.c:3869 intel_modeset_check_state+0x764/0x770 [i915]()
    [  354.803064] wrong connector dpms state
    [  354.803084] Modules linked in: nfsd auth_rpcgss oid_registry exportfs nfs lockd sunrpc xt_nat iptable_nat nf_nat_ipv4 nf_nat xt_limit xt_LOG xt_tcpudp nf_conntrack_ipv4 nf_defrag_ipv4 ipt_REJECT ipv6 xt_recent xt_conntrack nf_conntrack iptable_filter ip_tables x_tables snd_hda_codec_realtek snd_hda_codec_hdmi x86_pkg_temp_thermal snd_hda_intel coretemp kvm_intel snd_hda_codec i915 kvm snd_hwdep snd_pcm_oss snd_mixer_oss crc32_pclmul snd_pcm crc32c_intel e1000e intel_agp igb ghash_clmulni_intel intel_gtt aesni_intel cfbfillrect aes_x86_64 cfbimgblt lrw cfbcopyarea drm_kms_helper ptp video thermal processor gf128mul snd_page_alloc drm snd_timer glue_helper 8250_pci snd pps_core ablk_helper agpgart cryptd sg soundcore fan i2c_algo_bit sr_mod thermal_sys 8250 i2c_i801 serial_core
    hwmon cdrom i2c_core evdev button
    [  354.803086] CPU: 0 PID: 482 Comm: kworker/0:1 Not tainted 3.11.2 #1
    [  354.803087] Hardware name: Supermicro X10SAE/X10SAE, BIOS 1.00 05/03/2013 [  354.803091] Workqueue: events console_callback
    [  354.803092]  0000000000000009 ffff88023611db48 ffffffff814048ac ffff88023611db90
    [  354.803093]  ffff88023611db80 ffffffff8103d4e3 ffff880230d82800 ffff880230f9b800
    [  354.803094]  ffff880230f99000 ffff880230f99448 ffff8802351c0e00 ffff88023611dbe0
    [  354.803094] Call Trace:
    [  354.803098]  [<ffffffff814048ac>] dump_stack+0x54/0x8d
    [  354.803101]  [<ffffffff8103d4e3>] warn_slowpath_common+0x73/0x90
    [  354.803103]  [<ffffffff8103d547>] warn_slowpath_fmt+0x47/0x50
    [  354.803109]  [<ffffffffa089f1be>] ? intel_ddi_connector_get_hw_state+0x5e/0x110 [i915]
    [  354.803114]  [<ffffffffa0896974>] intel_modeset_check_state+0x764/0x770 [i915]
    [  354.803117]  [<ffffffffa08969bb>] intel_connector_dpms+0x3b/0x60 [i915]
    [  354.803120]  [<ffffffffa037e1d0>] drm_fb_helper_dpms.isra.11+0x120/0x160 [drm_kms_helper]
    [  354.803122]  [<ffffffffa037e24e>] drm_fb_helper_blank+0x3e/0x80 [drm_kms_helper]
    [  354.803123]  [<ffffffff812116c2>] fb_blank+0x52/0xc0
    [  354.803125]  [<ffffffff8121e04b>] fbcon_blank+0x21b/0x2d0
    [  354.803127]  [<ffffffff81062243>] ? update_rq_clock.part.74+0x13/0x30
    [  354.803129]  [<ffffffff81047486>] ? lock_timer_base.isra.30+0x26/0x50
    [  354.803130]  [<ffffffff810472b2>] ? internal_add_timer+0x12/0x40
    [  354.803131]  [<ffffffff81047f48>] ? mod_timer+0xf8/0x1c0
    [  354.803133]  [<ffffffff81266d61>] do_unblank_screen+0xa1/0x1c0
    [  354.803134]  [<ffffffff81268087>] poke_blanked_console+0xc7/0xd0
    [  354.803136]  [<ffffffff812681cf>] console_callback+0x13f/0x160
    [  354.803137]  [<ffffffff81053258>] process_one_work+0x148/0x3d0
    [  354.803138]  [<ffffffff81053f19>] worker_thread+0x119/0x3a0
    [  354.803140]  [<ffffffff81053e00>] ? manage_workers.isra.30+0x2a0/0x2a0
    [  354.803141]  [<ffffffff8105994b>] kthread+0xbb/0xc0
    [  354.803142]  [<ffffffff81059890>] ? kthread_create_on_node+0x120/0x120
    [  354.803144]  [<ffffffff8140b32c>] ret_from_fork+0x7c/0xb0
    [  354.803145]  [<ffffffff81059890>] ? kthread_create_on_node+0x120/0x120
    
    This regression goes back to the big modeset rework and the conversion
    to the new dpms helpers which started with:
    
    commit 5ab432ef4997ce32c9406721b37ef6e97e57dae1
    Author: Daniel Vetter <daniel.vetter@ffwll.ch>
    Date:   Sat Jun 30 08:59:56 2012 +0200
    
        drm/i915/hdmi: convert to encoder->disable/enable
    
    Fixes: igt/kms_flip/dpms-off-confusion
    Reported-and-tested-by: Wakko Warner <wakko@animx.eu.org>
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=68030
    Link:  http://lkml.kernel.org/r/20130928185023.GA21672@animx.eu.org
    Signed-off-by: Chris Wilson <chris@chris-wilson.co.uk>
    [danvet: Add regression citation, mention the igt testcase this fixes
    and slap a cc: stable on the patch.]
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b340404549c872099aec7554439a1821c0708878
Author: Francisco Jerez <currojerez@riseup.net>
Date:   Wed Oct 2 15:53:16 2013 -0700

    drm/i915/hsw: Disable L3 caching of atomic memory operations.
    
    commit f3fc4884ebe6ae649d3723be14b219230d3b7fd2 upstream.
    
    Otherwise using any atomic memory operation will lock up the GPU due
    to a Haswell hardware bug.
    
    v2: Use the _MASKED_BIT_ENABLE macro.  Drop drm parameter definition.
    
    Signed-off-by: Francisco Jerez <currojerez@riseup.net>
    Reviewed-by: Ben Widawsky <ben@bwidawsk.net>
    Cc: Daniel Vetter <daniel@ffwll.ch>
    [danvet: Fix checkpatch fail.]
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3074cbea80e718df9d55a7b9103400253c43fe60
Author: David Henningsson <david.henningsson@canonical.com>
Date:   Mon Oct 7 10:39:59 2013 +0200

    ALSA: hda - Fix mono speakers and headset mic on Dell Vostro 5470
    
    This is a backport for stable. The original commit SHA is
    338cae565c53755de9f87d6a801517940d2d56f7.
    
    On this machine, DAC on node 0x03 seems to give mono output.
    
    Also, it needs additional patches for headset mic support.
    It supports CTIA style headsets only.
    
    Alsa-info available at the bug link below.
    
    BugLink: https://bugs.launchpad.net/bugs/1236228
    Signed-off-by: David Henningsson <david.henningsson@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 586ff7faf652f1f44576adb63bd2fa7c9ae8c08b
Author: Ingo Molnar <mingo@kernel.org>
Date:   Thu Oct 10 10:16:30 2013 +0200

    compiler/gcc4: Add quirk for 'asm goto' miscompilation bug
    
    commit 3f0116c3238a96bc18ad4b4acefe4e7be32fa861 upstream.
    
    Fengguang Wu, Oleg Nesterov and Peter Zijlstra tracked down
    a kernel crash to a GCC bug: GCC miscompiles certain 'asm goto'
    constructs, as outlined here:
    
      http://gcc.gnu.org/bugzilla/show_bug.cgi?id=58670
    
    Implement a workaround suggested by Jakub Jelinek.
    
    Reported-and-tested-by: Fengguang Wu <fengguang.wu@intel.com>
    Reported-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Suggested-by: Jakub Jelinek <jakub@redhat.com>
    Reviewed-by: Richard Henderson <rth@twiddle.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Link: http://lkml.kernel.org/r/20131015062351.GA4666@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 85c19925ea88c5999589e7bed03f89640a014f57
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Sep 27 23:18:39 2013 +0300

    drm/radeon/dpm/btc: off by one in btc_set_mc_special_registers()
    
    commit 96d8df846f52a720c8ae1fadadfad7c9e733e336 upstream.
    
    It should be ">=" instead of ">" here.  The table->mc_reg_address[]
    array has SMC_EVERGREEN_MC_REGISTER_ARRAY_SIZE (16) elements.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e7db3b653c929be0f98bc733fa8eb19f9d9bee8
Author: James Hogan <jhogan@kernel.org>
Date:   Mon Oct 7 12:14:26 2013 +0100

    MIPS: stack protector: Fix per-task canary switch
    
    commit 8b3c569a3999a8fd5a819f892525ab5520777c92 upstream.
    
    Commit 1400eb6 (MIPS: r4k,octeon,r2300: stack protector: change canary
    per task) was merged in v3.11 and introduced assembly in the MIPS resume
    functions to update the value of the current canary in
    __stack_chk_guard. However it used PTR_L resulting in a load of the
    canary value, instead of PTR_LA to construct its address. The value is
    intended to be random but is then treated as an address in the
    subsequent LONG_S (store).
    
    This was observed to cause a fault and panic:
    
    CPU 0 Unable to handle kernel paging request at virtual address 139fea20, epc == 8000cc0c, ra == 8034f2a4
    Oops[#1]:
    ...
    $24   : 139fea20 1e1f7cb6
    ...
    Call Trace:
    [<8000cc0c>] resume+0xac/0x118
    [<8034f2a4>] __schedule+0x5f8/0x78c
    [<8034f4e0>] schedule_preempt_disabled+0x20/0x2c
    [<80348eec>] rest_init+0x74/0x84
    [<804dc990>] start_kernel+0x43c/0x454
    Code: 3c18804b  8f184030  8cb901f8 <af190000> 00c0e021  8cb002f0 8cb102f4  8cb202f8  8cb302fc
    
    This can also be forced by modifying
    arch/mips/include/asm/stackprotector.h so that the default
    __stack_chk_guard value is more likely to be a bad (or unaligned)
    pointer.
    
    Fix it to use PTR_LA instead, to load the address of the canary value,
    which the LONG_S can then use to write into it.
    
    Reported-by: bobjones (via #mipslinux on IRC)
    Signed-off-by: James Hogan <james.hogan@imgtec.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Gregory Fong <gregory.0xf0@gmail.com>
    Cc: linux-mips@linux-mips.org
    Patchwork: https://patchwork.linux-mips.org/patch/6026/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e7c897b13770ab76b56cf67959fd10ba885e16cd
Author: Jingoo Han <jg1.han@samsung.com>
Date:   Mon Sep 23 19:16:57 2013 +0900

    watchdog: kempld_wdt: Fix bit mask definition
    
    commit 4c4e45669de475573b15d968a6dca8d00124c9ad upstream.
    
    STAGE_CFG bits are defined as [5:4] bits. However, '(((x) & 0x30) << 4)'
    handles [9:8] bits. Thus, it should be fixed in order to handle
    [5:4] bits.
    
    Signed-off-by: Jingoo Han <jg1.han@samsung.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Cc: Jonghwan Choi <jhbird.choi@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bf597fb46661add46ee8c4705f5e4e1106bb1826
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Aug 23 11:40:59 2013 +0300

    watchdog: ts72xx_wdt: locking bug in ioctl
    
    commit 8612ed0d97abcf1c016d34755b7cf2060de71963 upstream.
    
    Calling the WDIOC_GETSTATUS & WDIOC_GETBOOTSTATUS and twice will cause a
    interruptible deadlock.
    
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Wim Van Sebroeck <wim@iguana.be>
    Cc: Jonghwan Choi <jhbird.choi@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a04324b3536234679d98bc98fc37ccd755440446
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Thu Oct 10 19:33:57 2013 +0530

    ARC: Ignore ptrace SETREGSET request for synthetic register "stop_pc"
    
    commit 5b24282846c064ee90d40fcb3a8f63b8e754fd28 upstream.
    
    ARCompact TRAP_S insn used for breakpoints, commits before exception is
    taken (updating architectural PC). So ptregs->ret contains next-PC and
    not the breakpoint PC itself. This is different from other restartable
    exceptions such as TLB Miss where ptregs->ret has exact faulting PC.
    gdb needs to know exact-PC hence ARC ptrace GETREGSET provides for
    @stop_pc which returns ptregs->ret vs. EFA depending on the
    situation.
    
    However, writing stop_pc (SETREGSET request), which updates ptregs->ret
    doesn't makes sense stop_pc doesn't always correspond to that reg as
    described above.
    
    This was not an issue so far since user_regs->ret / user_regs->stop_pc
    had same value and both writing to ptregs->ret was OK, needless, but NOT
    broken, hence not observed.
    
    With gdb "jump", they diverge, and user_regs->ret updating ptregs is
    overwritten immediately with stop_pc, which this patch fixes.
    
    Reported-by: Anton Kolesov <akolesov@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a4e42e8bbdc9fb7482dd181c332ae668c15f1750
Author: Christian Ruppert <christian.ruppert@abilis.com>
Date:   Wed Oct 2 11:13:38 2013 +0200

    ARC: Fix signal frame management for SA_SIGINFO
    
    commit 10469350e345599dfef3fa78a7c19fb230e674c1 upstream.
    
    Previously, when a signal was registered with SA_SIGINFO, parameters 2
    and 3 of the signal handler were written to registers r1 and r2 before
    the register set was saved. This led to corruption of these two
    registers after returning from the signal handler (the wrong values were
    restored).
    With this patch, registers are now saved before any parameters are
    passed, thus maintaining the processor state from before signal entry.
    
    Signed-off-by: Christian Ruppert <christian.ruppert@abilis.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7e0e1ac946d1040f3c31ea5861da9aa5cb6d8b3b
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Wed Sep 25 16:53:32 2013 +0530

    ARC: Workaround spinlock livelock in SMP SystemC simulation
    
    commit 6c00350b573c0bd3635436e43e8696951dd6e1b6 upstream.
    
    Some ARC SMP systems lack native atomic R-M-W (LLOCK/SCOND) insns and
    can only use atomic EX insn (reg with mem) to build higher level R-M-W
    primitives. This includes a SystemC based SMP simulation model.
    
    So rwlocks need to use a protecting spinlock for atomic cmp-n-exchange
    operation to update reader(s)/writer count.
    
    The spinlock operation itself looks as follows:
    
            mov reg, 1              ; 1=locked, 0=unlocked
    retry:
            EX reg, [lock]          ; load existing, store 1, atomically
            BREQ reg, 1, rety       ; if already locked, retry
    
    In single-threaded simulation, SystemC alternates between the 2 cores
    with "N" insn each based scheduling. Additionally for insn with global
    side effect, such as EX writing to shared mem, a core switch is
    enforced too.
    
    Given that, 2 cores doing a repeated EX on same location, Linux often
    got into a livelock e.g. when both cores were fiddling with tasklist
    lock (gdbserver / hackbench) for read/write respectively as the
    sequence diagram below shows:
    
               core1                                   core2
             --------                                --------
    1. spin lock [EX r=0, w=1] - LOCKED
    2. rwlock(Read)            - LOCKED
    3. spin unlock  [ST 0]     - UNLOCKED
                                             spin lock [EX r=0,w=1] - LOCKED
                          -- resched core 1----
    
    5. spin lock [EX r=1] - ALREADY-LOCKED
    
                          -- resched core 2----
    6.                                       rwlock(Write) - READER-LOCKED
    7.                                       spin unlock [ST 0]
    8.                                       rwlock failed, retry again
    
    9.                                       spin lock  [EX r=0, w=1]
                          -- resched core 1----
    
    10  spinlock locked in #9, retry #5
    11. spin lock [EX gets 1]
                          -- resched core 2----
    ...
    ...
    
    The fix was to unlock using the EX insn too (step 7), to trigger another
    SystemC scheduling pass which would let core1 proceed, eliding the
    livelock.
    
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7b081aded13f3437ed26e70e12f23aad69e68ad6
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Thu Sep 26 18:50:40 2013 +0530

    ARC: Fix 32-bit wrap around in access_ok()
    
    commit 0752adfda15f0eca9859a76da3db1800e129ad43 upstream.
    
    Anton reported
    
     | LTP tests syscalls/process_vm_readv01 and process_vm_writev01 fail
     | similarly in one testcase test_iov_invalid -> lvec->iov_base.
     | Testcase expects errno EFAULT and return code -1,
     | but it gets return code 1 and ERRNO is 0 what means success.
    
    Essentially test case was passing a pointer of -1 which access_ok()
    was not catching. It was doing [@addr + @sz <= TASK_SIZE] which would
    pass for @addr == -1
    
    Fixed that by rewriting as [@addr <= TASK_SIZE - @sz]
    
    Reported-by: Anton Kolesov <Anton.Kolesov@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 49cac7d9e62954e2235ae342ee15e0e0a7995a16
Author: Mischa Jonker <mjonker@synopsys.com>
Date:   Thu Sep 26 15:44:56 2013 +0200

    ARC: Handle zero-overhead-loop in unaligned access handler
    
    commit c11eb222fd7d4db91196121dbf854178505d2751 upstream.
    
    If a load or store is the last instruction in a zero-overhead-loop, and
    it's misaligned, the loop would execute only once.
    
    This fixes that problem.
    
    Signed-off-by: Mischa Jonker <mjonker@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 186417e98f654632ab6fee35e3663cd396325360
Author: Mischa Jonker <mjonker@synopsys.com>
Date:   Fri Aug 30 11:56:25 2013 +0200

    ARC: Fix __udelay calculation
    
    commit 7efd0da2d17360e1cef91507dbe619db0ee2c691 upstream.
    
    Cast usecs to u64, to ensure that the (usecs * 4295 * HZ)
    multiplication is 64 bit.
    
    Initially, the (usecs * 4295 * HZ) part was done as a 32 bit
    multiplication, with the result casted to 64 bit. This led to some bits
    falling off, causing a "DMA initialization error" in the stmmac Ethernet
    driver, due to a premature timeout.
    
    Signed-off-by: Mischa Jonker <mjonker@synopsys.com>
    Signed-off-by: Vineet Gupta <vgupta@synopsys.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 09e39ab45cf8f9affdbab2837a0db34f76f55723
Author: Helge Deller <deller@gmx.de>
Date:   Tue Oct 1 21:54:46 2013 +0200

    parisc: fix interruption handler to respect pagefault_disable()
    
    commit 59b33f148cc08fb33cbe823fca1e34f7f023765e upstream.
    
    Running an "echo t > /proc/sysrq-trigger" crashes the parisc kernel.  The
    problem is, that in print_worker_info() we try to read the workqueue info via
    the probe_kernel_read() functions which use pagefault_disable() to avoid
    crashes like this:
        probe_kernel_read(&pwq, &worker->current_pwq, sizeof(pwq));
        probe_kernel_read(&wq, &pwq->wq, sizeof(wq));
        probe_kernel_read(name, wq->name, sizeof(name) - 1);
    
    The problem here is, that the first probe_kernel_read(&pwq) might return zero
    in pwq and as such the following probe_kernel_reads() try to access contents of
    the page zero which is read protected and generate a kernel segfault.
    
    With this patch we fix the interruption handler to call parisc_terminate()
    directly only if pagefault_disable() was not called (in which case
    preempt_count()==0).  Otherwise we hand over to the pagefault handler which
    will try to look up the faulting address in the fixup tables.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: John David Anglin  <dave.anglin@bell.net>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 436cc5deeb680b94209dbf8a4801c3171fdaa430
Author: Paul Mackerras <paulus@samba.org>
Date:   Sat Sep 21 09:53:28 2013 +1000

    KVM: PPC: Book3S HV: Fix typo in saving DSCR
    
    commit cfc860253abd73e1681696c08ea268d33285a2c4 upstream.
    
    This fixes a typo in the code that saves the guest DSCR (Data Stream
    Control Register) into the kvm_vcpu_arch struct on guest exit.  The
    effect of the typo was that the DSCR value was saved in the wrong place,
    so changes to the DSCR by the guest didn't persist across guest exit
    and entry, and some host kernel memory got corrupted.
    
    Signed-off-by: Paul Mackerras <paulus@samba.org>
    Acked-by: Alexander Graf <agraf@suse.de>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c9d5398b37bb0af87e71a8c9efa5ac882dc7dd11
Author: Dave Jones <davej@redhat.com>
Date:   Thu Oct 10 20:05:35 2013 -0400

    ext4: fix memory leak in xattr
    
    commit 6e4ea8e33b2057b85d75175dd89b93f5e26de3bc upstream.
    
    If we take the 2nd retry path in ext4_expand_extra_isize_ea, we
    potentionally return from the function without having freed these
    allocations.  If we don't do the return, we over-write the previous
    allocation pointers, so we leak either way.
    
    Spotted with Coverity.
    
    [ Fixed by tytso to set is and bs to NULL after freeing these
      pointers, in case in the retry loop we later end up triggering an
      error causing a jump to cleanup, at which point we could have a double
      free bug. -- Ted ]
    
    Signed-off-by: Dave Jones <davej@fedoraproject.org>
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Reviewed-by: Eric Sandeen <sandeen@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 74156abe37e0e1ca18fff0dc06e46ab16967abbe
Author: Josef Bacik <jbacik@fusionio.com>
Date:   Wed Oct 9 12:24:04 2013 -0400

    Btrfs: use right root when checking for hash collision
    
    commit 4871c1588f92c6c13f4713a7009f25f217055807 upstream.
    
    btrfs_rename was using the root of the old dir instead of the root of the new
    dir when checking for a hash collision, so if you tried to move a file into a
    subvol it would freak out because it would see the file you are trying to move
    in its current root.  This fixes the bug where this would fail
    
    btrfs subvol create test1
    btrfs subvol create test2
    mv test1 test2.
    
    Thanks to Chris Murphy for catching this,
    
    Reported-by: Chris Murphy <lists@colorremedies.com>
    Signed-off-by: Josef Bacik <jbacik@fusionio.com>
    Signed-off-by: Chris Mason <chris.mason@fusionio.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe59809bea1e0079eee82549bcbcaa441126e3fd
Author: Henrik Rydberg <rydberg@euromail.se>
Date:   Wed Oct 2 19:15:03 2013 +0200

    hwmon: (applesmc) Always read until end of data
    
    commit 25f2bd7f5add608c1d1405938f39c96927b275ca upstream.
    
    The crash reported and investigated in commit 5f4513 turned out to be
    caused by a change to the read interface on newer (2012) SMCs.
    
    Tests by Chris show that simply reading the data valid line is enough
    for the problem to go away. Additional tests show that the newer SMCs
    no longer wait for the number of requested bytes, but start sending
    data right away.  Apparently the number of bytes to read is no longer
    specified as before, but instead found out by reading until end of
    data. Failure to read until end of data confuses the state machine,
    which eventually causes the crash.
    
    As a remedy, assuming bit0 is the read valid line, make sure there is
    nothing more to read before leaving the read function.
    
    Tested to resolve the original problem, and runtested on MBA3,1,
    MBP4,1, MBP8,2, MBP10,1, MBP10,2. The patch seems to have no effect on
    machines before 2012.
    
    Tested-by: Chris Murphy <chris@cmurf.com>
    Signed-off-by: Henrik Rydberg <rydberg@euromail.se>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d14f6c8e2827baf386fce4f73d02e104ef3af7d9
Author: Taras Kondratiuk <taras.kondratiuk@linaro.org>
Date:   Mon Oct 7 13:41:59 2013 +0300

    i2c: omap: Clear ARDY bit twice
    
    commit 4cdbf7d346e7461c3b93a26707c852e2c9db3753 upstream.
    
    Initially commit cb527ede1bf6ff2008a025606f25344b8ed7b4ac
    "i2c-omap: Double clear of ARDY status in IRQ handler"
    added a workaround for undocumented errata ProDB0017052.
    But then commit 1d7afc95946487945cc7f5019b41255b72224b70
    "i2c: omap: ack IRQ in parts" refactored code and missed
    one of ARDY clearings. So current code violates errata.
    It causes often i2c bus timeouts on my Pandaboard.
    
    This patch adds a second clearing in place.
    
    Signed-off-by: Grygorii Strashko <grygorii.strashko@ti.com>
    Signed-off-by: Taras Kondratiuk <taras.kondratiuk@linaro.org>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 97e439cda6547140f98285e8c000f5e2e4a47925
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Sep 30 08:35:10 2013 -0700

    vfs: allow O_PATH file descriptors for fstatfs()
    
    commit 9d05746e7b16d8565dddbe3200faa1e669d23bbf upstream.
    
    Olga reported that file descriptors opened with O_PATH do not work with
    fstatfs(), found during further development of ksh93's thread support.
    
    There is no reason to not allow O_PATH file descriptors here (fstatfs is
    very much a path operation), so use "fdget_raw()".  See commit
    55815f70147d ("vfs: make O_PATH file descriptors usable for 'fstat()'")
    for a very similar issue reported for fstat() by the same team.
    
    Reported-and-tested-by: ольга крыжановская <olga.kryzhanovska@gmail.com>
    Acked-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8973e0796f0d9e356aabbdeae938098d347e97c6
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Tue Sep 10 10:52:35 2013 -0400

    random: run random_int_secret_init() run after all late_initcalls
    
    commit 47d06e532e95b71c0db3839ebdef3fe8812fca2c upstream.
    
    The some platforms (e.g., ARM) initializes their clocks as
    late_initcalls for some unknown reason.  So make sure
    random_int_secret_init() is run after all of the late_initcalls are
    run.
    
    Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8bbe4d25215e1d2dba0ed97f9a475c459f2d7dbe
Author: David Henningsson <david.henningsson@canonical.com>
Date:   Fri Oct 11 10:18:45 2013 +0200

    ALSA: hda - Fix microphone for Sony VAIO Pro 13 (Haswell model)
    
    commit 88cfcf86aa3ada84d97195bcad74f4dadb4ae23b upstream.
    
    The external mic showed up with a precense detect of "always present",
    essentially disabling the internal mic. Therefore turn off presence
    detection for this pin.
    
    Note: The external mic seems not yet working, but an internal mic is
    certainly better than no mic at all.
    
    BugLink: https://bugs.launchpad.net/bugs/1227093
    Signed-off-by: David Henningsson <david.henningsson@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a9c7de28fa96b6ee2975fe729f232a1aa6ca0218
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Oct 8 19:57:50 2013 +0200

    ALSA: hda - Add fixup for ASUS N56VZ
    
    commit c6cc3d58b4042f5cadae653ff8d3df26af1a0169 upstream.
    
    ASUS N56VZ needs a fixup for the bass speaker pin, which was already
    provided via model=asus-mode4.
    
    Bugzilla: https://bugzilla.novell.com/show_bug.cgi?id=841645
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4c7465f77135aefb434489c076c18c2598956d77
Author: Anssi Hannula <anssi.hannula@iki.fi>
Date:   Mon Oct 7 19:24:52 2013 +0300

    ALSA: hda - hdmi: Fix channel map switch not taking effect
    
    commit 39edac70e9aedf451fccaa851b273ace9fcca0bd upstream.
    
    Currently hdmi_setup_audio_infoframe() reprograms the HDA channel
    mapping only when the infoframe is not up-to-date or the non-PCM flag
    has changed.
    
    However, when just the channel map has been changed, the infoframe may
    still be up-to-date and non-PCM flag may not have changed, so the new
    channel map is not actually programmed into the HDA codec.
    
    Notably, this failing case is also always triggered when the device is
    already in a prepared state and a new channel map is configured while
    changing only the channel positions (for example, plain
    "speaker-test -c2 -m FR,FL").
    
    Fix that by always programming the channel map in
    hdmi_setup_audio_infoframe(). Tested on Intel HDMI.
    
    Signed-off-by: Anssi Hannula <anssi.hannula@iki.fi>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3eac126b28de86141713621539498319e7c23ec
Author: Daniel Mack <zonque@gmail.com>
Date:   Wed Oct 2 17:49:50 2013 +0200

    ALSA: snd-usb-usx2y: remove bogus frame checks
    
    commit a9d14bc0b188a822e42787d01e56c06fe9750162 upstream.
    
    The frame check in i_usX2Y_urb_complete() and
    i_usX2Y_usbpcm_urb_complete() is bogus and produces false positives as
    described in this LAU thread:
    
      http://linuxaudio.org/mailarchive/lau/2013/5/20/200177
    
    This patch removes the check code entirely.
    
    Cc: fzu@wemgehoertderstaat.de
    Reported-by: Dr Nicholas J Bailey <nicholas.bailey@glasgow.ac.uk>
    Suggested-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Daniel Mack <zonque@gmail.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
