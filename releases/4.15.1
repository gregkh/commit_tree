commit d55dce9083d0308333c83d6abb8ea3560a8293b8
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat Feb 3 17:58:44 2018 +0100

    Linux 4.15.1

commit d4374d0a85e54aaf01726b0514958612c9edbd31
Author: Matthew Garrett <mjg59@google.com>
Date:   Tue Jan 16 09:10:02 2018 +0000

    x86/efi: Clarify that reset attack mitigation needs appropriate userspace
    
    commit a5c03c31af2291f13689d11760c0b59fb70c9a5a upstream.
    
    Some distributions have turned on the reset attack mitigation feature,
    which is designed to force the platform to clear the contents of RAM if
    the machine is shut down uncleanly. However, in order for the platform
    to be able to determine whether the shutdown was clean or not, userspace
    has to be configured to clear the MemoryOverwriteRequest flag on
    shutdown - otherwise the firmware will end up clearing RAM on every
    reboot, which is unnecessarily time consuming. Add some additional
    clarity to the kconfig text to reduce the risk of systems being
    configured this way.
    
    Signed-off-by: Matthew Garrett <mjg59@google.com>
    Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Cc: linux-kernel@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 589aadd6577bad74cf48d35ed2c0258f3ce9a4d3
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Wed Jan 17 16:18:27 2018 -0800

    Input: synaptics-rmi4 - do not delete interrupt memory too early
    
    commit a1ab69021a584d952e6548a44b93760547b1b6b5 upstream.
    
    We want to free memory reserved for interrupt mask handling only after we
    free functions, as function drivers might want to mask interrupts. This is
    needed for the followup patch to the F03 that would implement unmasking and
    masking interrupts from the serio pass-through port open() and close()
    methods.
    
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e66aa9b5cedf9026ba07ec6e410417a782281f88
Author: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date:   Wed Jan 17 15:46:18 2018 -0800

    Input: synaptics-rmi4 - unmask F03 interrupts when port is opened
    
    commit 6abe534f0776d2437c8302f58d8eb5abd483e926 upstream.
    
    Currently we register the pass-through serio port when we probe the F03 RMI
    function, and then, in sensor configure phase, we unmask interrupts.
    Unfortunately this is too late, as other drivers are free probe devices
    attached to the serio port as soon as it is probed. Because interrupts are
    masked, the IO times out, which may result in not being able to detect
    trackpoints on the pass-through port.
    
    To fix the issue we implement open() and close() methods for the
    pass-through serio port and unmask interrupts from there. We also move
    creation of the pass-through port form probe to configure stage, as RMI
    driver does not enable transport interrupt until all functions are probed
    (we should change this, but this is a separate topic).
    
    We also try to clear the pending data before unmasking interrupts, because
    some devices like to spam the system with multiple 0xaa 0x00 announcements,
    which may interfere with us trying to query ID of the device.
    
    Fixes: c5e8848fc98e ("Input: synaptics-rmi4 - add support for F03")
    Reviewed-by: Lyude Paul <lyude@redhat.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7e9ad33f4a9a29515dd10daddd61be621473655
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Jan 11 11:12:55 2018 +0000

    test_firmware: fix missing unlock on error in config_num_requests_store()
    
    commit a5e1923356505e46476c2fb518559b7a4d9d25b1 upstream.
    
    Add the missing unlock before return from function
    config_num_requests_store() in the error handling case.
    
    Fixes: c92316bf8e94 ("test_firmware: add batched firmware tests")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b82021cb0001e6b8b0cd4b7cb8369b95bf22e472
Author: Narcisa Ana Maria Vasile <narcisaanamaria12@gmail.com>
Date:   Wed Dec 6 18:57:58 2017 +0200

    iio: chemical: ccs811: Fix output of IIO_CONCENTRATION channels
    
    commit 8f114acd4e1a9cfa05b70bcc4219bc88197b5c9b upstream.
    
    in_concentration_raw should report, according to sysfs-bus-iio documentation,
    a "Raw (unscaled no offset etc.) percentage reading of a substance."
    
    Modify scale to convert from ppm/ppb to percentage:
    1 ppm = 0.0001%
    1 ppb = 0.0000001%
    
    There is no offset needed to convert the ppm/ppb to percentage,
    so remove offset from IIO_CONCENTRATION (IIO_MOD_CO2) channel.
    
    Cc'd stable to reduce chance of userspace breakage in the long
    run as we fix this wrong bit of ABI usage.
    
    Signed-off-by: Narcisa Ana Maria Vasile <narcisaanamaria12@gmail.com>
    Reviewed-by: Matt Ranostay <matt.ranostay@konsulko.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce868fb5d84b233ca50ede08a604a40b4fce181b
Author: Fabrice Gasnier <fabrice.gasnier@st.com>
Date:   Fri Jan 5 15:34:54 2018 +0100

    iio: adc: stm32: fix scan of multiple channels with DMA
    
    commit 04e491ca9df60ffe8637d00d68e5ab8bc73b30d5 upstream.
    
    By default, watermark is set to '1'. Watermark is used to fine tune
    cyclic dma buffer period. In case watermark is left untouched (e.g. 1)
    and several channels are being scanned, buffer period is wrongly set
    (e.g. to 1 sample). As a consequence, data is never pushed to upper layer.
    Fix buffer period size, by taking scan channels number into account.
    
    Fixes: 2763ea0585c9 ("iio: adc: stm32: add optional dma support")
    
    Signed-off-by: Fabrice Gasnier <fabrice.gasnier@st.com>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bac4bf53ca7c65d6c06808aab70c6caa0b9c78b9
Author: Stefan Agner <stefan@agner.ch>
Date:   Sun Jan 7 15:05:49 2018 +0100

    spi: imx: do not access registers while clocks disabled
    
    commit d593574aff0ab846136190b1729c151c736727ec upstream.
    
    Since clocks are disabled except during message transfer clocks
    are also disabled when spi_imx_remove gets called. Accessing
    registers leads to a freeeze at least on a i.MX 6ULL. Enable
    clocks before disabling accessing the MXC_CSPICTRL register.
    
    Fixes: 9e556dcc55774 ("spi: spi-imx: only enable the clocks when we start to transfer a message")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 68c610bf1e38e3a01a17bd101b089102a76d03b3
Author: Fabio Estevam <fabio.estevam@nxp.com>
Date:   Thu Jan 4 15:58:34 2018 -0200

    serial: imx: Only wakeup via RTSDEN bit if the system has RTS/CTS
    
    commit 38b1f0fb42f772b8c9aac53593883a18ff5eb9d7 upstream.
    
    The wakeup mechanism via RTSDEN bit relies on the system using the RTS/CTS
    lines, so only allow such wakeup method when the system actually has
    RTS/CTS support.
    
    Fixes: bc85734b126f ("serial: imx: allow waking up on RTSD")
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Reviewed-by: Martin Kaiser <martin@kaiser.cx>
    Acked-by: Fugang Duan <fugang.duan@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 150becd9a389d04fd73a0f7feffbcba4d88aa11b
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Fri Jan 19 18:02:05 2018 +0200

    serial: 8250_dw: Revert "Improve clock rate setting"
    
    commit c14b65feac9ebed649d6fe79c6b6d64d21d0287d upstream.
    
    The commit
    
      de9e33bdfa22 ("serial: 8250_dw: Improve clock rate setting")
    
    obviously tries to cure symptoms, and not a root cause.
    
    The root cause is the non-flexible rate calculation inside the
    corresponding clock driver. What we need is to provide maximum UART
    divisor value to the clock driver to allow it do the job transparently
    to the caller.
    
    Since from the initial commit message I have got no clue which clock
    driver actually needs to be amended, I leave this exercise to the people
    who know better the case.
    
    Moreover, it seems [1] the fix introduced a regression. And possible
    even one more [2].
    
    Taking above, revert the commit de9e33bdfa22 for now.
    
    [1]: https://www.spinics.net/lists/linux-serial/msg28872.html
    [2]: https://github.com/Dunedan/mbp-2016-linux/issues/29#issuecomment-357583782
    
    Fixes: de9e33bdfa22 ("serial: 8250_dw: Improve clock rate setting")
    Cc: Ed Blake <ed.blake@sondrel.com>
    Cc: Heikki Krogerus <heikki.krogerus@linux.intel.com>
    Cc: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c0dbcbb52e8ccc4044d9c42cbe4bc56e82121bfd
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Jan 4 07:42:15 2018 +0000

    serial: 8250_uniphier: fix error return code in uniphier_uart_probe()
    
    commit 7defa77d2baca4d6eb85234f10f38ab618332e75 upstream.
    
    Fix to return a negative error code from the port register error
    handling case instead of 0, as done elsewhere in this function.
    
    Fixes: 39be40ce066d ("serial: 8250_uniphier: fix serial port index in private data")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Acked-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 970aeba3f3e5d46352244c997d33800eeb0fcb4a
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Dec 27 14:21:05 2017 +0900

    serial: 8250_of: fix return code when probe function fails to get reset
    
    commit b9820a31691b771db37afe2054dd3d3a680c1eed upstream.
    
    The error pointer from devm_reset_control_get_optional_shared() is
    not propagated.
    
    One of the most common problem scenarios is it returns -EPROBE_DEFER
    when the reset controller has not probed yet.  In this case, the
    probe of the reset consumer should be deferred.
    
    Fixes: e2860e1f62f2 ("serial: 8250_of: Add reset support")
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Reviewed-by: Philipp Zabel <p.zabel@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4e45815fcd38e0a335f9be45336fd95011f6275b
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Tue Jan 2 12:01:41 2018 +0200

    mei: me: allow runtime pm for platform with D0i3
    
    commit cc365dcf0e56271bedf3de95f88922abe248e951 upstream.
    
    >From the pci power documentation:
    "The driver itself should not call pm_runtime_allow(), though. Instead,
    it should let user space or some platform-specific code do that (user space
    can do it via sysfs as stated above)..."
    
    However, the S0ix residency cannot be reached without MEI device getting
    into low power state. Hence, for mei devices that support D0i3, it's better
    to make runtime power management mandatory and not rely on the system
    integration such as udev rules.
    This policy cannot be applied globally as some older platforms
    were found to have broken power management.
    
    Cc: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Reviewed-by: Alexander Usyskin <alexander.usyskin@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 76ee8f3d7af2b6e4dcfaa3128d2a50391df47590
Author: Ganesh Mahendran <opensource.ganesh@gmail.com>
Date:   Wed Jan 10 10:49:05 2018 +0800

    android: binder: use VM_ALLOC to get vm area
    
    commit aac6830ec1cb681544212838911cdc57f2638216 upstream.
    
    VM_IOREMAP is used to access hardware through a mechanism called
    I/O mapped memory. Android binder is a IPC machanism which will
    not access I/O memory.
    
    And VM_IOREMAP has alignment requiement which may not needed in
    binder.
        __get_vm_area_node()
        {
        ...
            if (flags & VM_IOREMAP)
                align = 1ul << clamp_t(int, fls_long(size),
                   PAGE_SHIFT, IOREMAP_MAX_ORDER);
        ...
        }
    
    This patch will save some kernel vm area, especially for 32bit os.
    
    In 32bit OS, kernel vm area is only 240MB. We may got below
    error when launching a app:
    
    <3>[ 4482.440053] binder_alloc: binder_alloc_mmap_handler: 15728 8ce67000-8cf65000 get_vm_area failed -12
    <3>[ 4483.218817] binder_alloc: binder_alloc_mmap_handler: 15745 8ce67000-8cf65000 get_vm_area failed -12
    
    Signed-off-by: Ganesh Mahendran <opensource.ganesh@gmail.com>
    Acked-by: Martijn Coenen <maco@android.com>
    Acked-by: Todd Kjos <tkjos@google.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7654cae5433700f4f5ae6cafd785b84b52d10468
Author: Martijn Coenen <maco@android.com>
Date:   Fri Jan 5 11:27:07 2018 +0100

    ANDROID: binder: remove waitqueue when thread exits.
    
    commit f5cb779ba16334b45ba8946d6bfa6d9834d1527f upstream.
    
    binder_poll() passes the thread->wait waitqueue that
    can be slept on for work. When a thread that uses
    epoll explicitly exits using BINDER_THREAD_EXIT,
    the waitqueue is freed, but it is never removed
    from the corresponding epoll data structure. When
    the process subsequently exits, the epoll cleanup
    code tries to access the waitlist, which results in
    a use-after-free.
    
    Prevent this by using POLLFREE when the thread exits.
    
    Signed-off-by: Martijn Coenen <maco@android.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit fe188a034ead1d860e8f7b6656d30a52d5ed3b94
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Fri Jan 12 17:50:02 2018 +1100

    usb/gadget: Fix "high bandwidth" check in usb_gadget_ep_match_desc()
    
    commit 11fb37998759c48e4e4c200c974593cbeab25d3e upstream.
    
    The current code tries to test for bits that are masked out by
    usb_endpoint_maxp(). Instead, use the proper accessor to access
    the new high bandwidth bits.
    
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f9ec18949c5004854590164f2551e080fc915d3
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Jan 11 13:10:16 2018 +0100

    usb: uas: unconditionally bring back host after reset
    
    commit cbeef22fd611c4f47c494b821b2b105b8af970bb upstream.
    
    Quoting Hans:
    
    If we return 1 from our post_reset handler, then our disconnect handler
    will be called immediately afterwards. Since pre_reset blocks all scsi
    requests our disconnect handler will then hang in the scsi_remove_host
    call.
    
    This is esp. bad because our disconnect handler hanging for ever also
    stops the USB subsys from enumerating any new USB devices, causes commands
    like lsusb to hang, etc.
    
    In practice this happens when unplugging some uas devices because the hub
    code may see the device as needing a warm-reset and calls usb_reset_device
    before seeing the disconnect. In this case uas_configure_endpoints fails
    with -ENODEV. We do not want to print an error for this, so this commit
    also silences the shost_printk for -ENODEV.
    
    ENDQUOTE
    
    However, if we do that we better drop any unconditional execution
    and report to the SCSI subsystem that we have undergone a reset
    but we are not operational now.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Reported-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05ebcaef21aa38ac1efeeb50fb8f9e8ae67780ac
Author: Hemant Kumar <hemantk@codeaurora.org>
Date:   Tue Jan 9 12:30:53 2018 +0530

    usb: f_fs: Prevent gadget unbind if it is already unbound
    
    commit ce5bf9a50daf2d9078b505aca1cea22e88ecb94a upstream.
    
    Upon usb composition switch there is possibility of ep0 file
    release happening after gadget driver bind. In case of composition
    switch from adb to a non-adb composition gadget will never gets
    bound again resulting into failure of usb device enumeration. Fix
    this issue by checking FFS_FL_BOUND flag and avoid extra
    gadget driver unbind if it is already done as part of composition
    switch.
    
    This fixes adb reconnection error reported on Android running
    v4.4 and above kernel versions. Verified on Hikey running vanilla
    v4.15-rc7 + few out of tree Mali patches.
    
    Reviewed-at: https://android-review.googlesource.com/#/c/582632/
    
    Cc: Felipe Balbi <balbi@kernel.org>
    Cc: Greg KH <gregkh@linux-foundation.org>
    Cc: Michal Nazarewicz <mina86@mina86.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Dmitry Shmidt <dimitrysh@google.com>
    Cc: Badhri <badhri@google.com>
    Cc: Android Kernel Team <kernel-team@android.com>
    Signed-off-by: Hemant Kumar <hemantk@codeaurora.org>
    [AmitP: Cherry-picked it from android-4.14 and updated the commit log]
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 16d643ddaa3b9b7eb31f838b6ad10e6a7c0b1e22
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Jan 18 14:46:41 2018 +1100

    USB: serial: simple: add Motorola Tetra driver
    
    commit 46fe895e22ab3845515ec06b01eaf1282b342e29 upstream.
    
    Add new Motorola Tetra (simple) driver for Motorola Solutions TETRA PEI
    devices.
    
    D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
    P:  Vendor=0cad ProdID=9011 Rev=24.16
    S:  Manufacturer=Motorola Solutions Inc.
    S:  Product=Motorola Solutions TETRA PEI interface
    C:  #Ifs= 2 Cfg#= 1 Atr=80 MxPwr=500mA
    I:  If#= 0 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    I:  If#= 1 Alt= 0 #EPs= 2 Cls=ff(vend.) Sub=00 Prot=00 Driver=(none)
    
    Note that these devices do not support the CDC SET_CONTROL_LINE_STATE
    request (for any interface).
    
    Reported-by: Max Schulze <max.schulze@posteo.de>
    Tested-by: Max Schulze <max.schulze@posteo.de>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7ec7c9e0abdab8331e99297304c7729423f1c84c
Author: Shuah Khan <shuah@kernel.org>
Date:   Wed Jan 17 12:08:03 2018 -0700

    usbip: list: don't list devices attached to vhci_hcd
    
    commit ef824501f50846589f02173d73ce3fe6021a9d2a upstream.
    
    usbip host lists devices attached to vhci_hcd on the same server
    when user does attach over localhost or specifies the server as the
    remote.
    
    usbip attach -r localhost -b busid
    or
    usbip attach -r servername (or server IP)
    
    Fix it to check and not list devices that are attached to vhci_hcd.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 053cef5ae90a8c90752b34be5cba14d955d2b73f
Author: Shuah Khan <shuah@kernel.org>
Date:   Wed Jan 17 12:07:30 2018 -0700

    usbip: prevent bind loops on devices attached to vhci_hcd
    
    commit ef54cf0c600fb8f5737fb001a9e357edda1a1de8 upstream.
    
    usbip host binds to devices attached to vhci_hcd on the same server
    when user does attach over localhost or specifies the server as the
    remote.
    
    usbip attach -r localhost -b busid
    or
    usbip attach -r servername (or server IP)
    
    Unbind followed by bind works, however device is left in a bad state with
    accesses via the attached busid result in errors and system hangs during
    shutdown.
    
    Fix it to check and bail out if the device is already attached to vhci_hcd.
    
    Signed-off-by: Shuah Khan <shuahkh@osg.samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 327b34d402aa55863105fd4499a9c10cea37bc10
Author: Jia-Ju Bai <baijiaju1990@gmail.com>
Date:   Wed Dec 13 20:34:36 2017 +0800

    USB: serial: io_edgeport: fix possible sleep-in-atomic
    
    commit c7b8f77872c73f69a16528a9eb87afefcccdc18b upstream.
    
    According to drivers/usb/serial/io_edgeport.c, the driver may sleep
    under a spinlock.
    The function call path is:
    edge_bulk_in_callback (acquire the spinlock)
       process_rcvd_data
         process_rcvd_status
           change_port_settings
             send_iosp_ext_cmd
               write_cmd_usb
                 usb_kill_urb --> may sleep
    
    To fix it, the redundant usb_kill_urb() is removed from the error path
    after usb_submit_urb() fails.
    
    This possible bug is found by my static analysis tool (DSAC) and checked
    by my code review.
    
    Signed-off-by: Jia-Ju Bai <baijiaju1990@gmail.com>
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b5cd469cffb22229ac130177710088dcb5da7b0
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Jan 18 12:13:45 2018 +0100

    CDC-ACM: apply quirk for card reader
    
    commit df1cc78a52491f71d8170d513d0f6f114faa1bda upstream.
    
    This devices drops random bytes from messages if you talk to it
    too fast.
    
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af6e0b55ee7c91c68f2e93ab4314fb06214d538c
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Sun Jan 14 16:09:00 2018 +0100

    USB: cdc-acm: Do not log urb submission errors on disconnect
    
    commit f0386c083c2ce85284dc0b419d7b89c8e567c09f upstream.
    
    When disconnected sometimes the cdc-acm driver logs errors like these:
    
    [20278.039417] cdc_acm 2-2:2.1: urb 9 failed submission with -19
    [20278.042924] cdc_acm 2-2:2.1: urb 10 failed submission with -19
    [20278.046449] cdc_acm 2-2:2.1: urb 11 failed submission with -19
    [20278.049920] cdc_acm 2-2:2.1: urb 12 failed submission with -19
    [20278.053442] cdc_acm 2-2:2.1: urb 13 failed submission with -19
    [20278.056915] cdc_acm 2-2:2.1: urb 14 failed submission with -19
    [20278.060418] cdc_acm 2-2:2.1: urb 15 failed submission with -19
    
    Silence these by not logging errors when the result is -ENODEV.
    
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Acked-by: Oliver Neukum <oneukum@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 167c2b3bb56d2f5c1a9f946179c12cf4f02d31e5
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Thu Jan 25 09:48:55 2018 +0100

    USB: serial: pl2303: new device id for Chilitag
    
    commit d08dd3f3dd2ae351b793fc5b76abdbf0fd317b12 upstream.
    
    This adds a new device id for Chilitag devices to the pl2303 driver.
    
    Reported-by: "Chu.Mike [朱堅宜]" <Mike-Chu@prolific.com.tw>
    Acked-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f09196b83366e6af606ba28fddedac3078ec5871
Author: OKAMOTO Yoshiaki <yokamoto@allied-telesis.co.jp>
Date:   Tue Jan 16 09:51:17 2018 +0000

    usb: option: Add support for FS040U modem
    
    commit 69341bd15018da0a662847e210f9b2380c71e623 upstream.
    
    FS040U modem is manufactured by omega, and sold by Fujisoft. This patch
    adds ID of the modem to use option1 driver. Interface 3 is used as
    qmi_wwan, so the interface is ignored.
    
    Signed-off-by: Yoshiaki Okamoto <yokamoto@allied-telesis.co.jp>
    Signed-off-by: Hiroyuki Yamamoto <hyamamo@allied-telesis.co.jp>
    Acked-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3e1995ed770e780b423b31b160570bff2d4769d3
Author: Gaurav Kohli <gkohli@codeaurora.org>
Date:   Tue Jan 23 13:16:34 2018 +0530

    tty: fix data race between tty_init_dev and flush of buf
    
    commit b027e2298bd588d6fa36ed2eda97447fb3eac078 upstream.
    
    There can be a race, if receive_buf call comes before
    tty initialization completes in n_tty_open and tty->disc_data
    may be NULL.
    
    CPU0                                    CPU1
    ----                                    ----
     000|n_tty_receive_buf_common()         n_tty_open()
    -001|n_tty_receive_buf2()               tty_ldisc_open.isra.3()
    -002|tty_ldisc_receive_buf(inline)      tty_ldisc_setup()
    
    Using ldisc semaphore lock in tty_init_dev till disc_data
    initializes completely.
    
    Signed-off-by: Gaurav Kohli <gkohli@codeaurora.org>
    Reviewed-by: Alan Cox <alan@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e880bc8b35f8874ad406f13f2701a104834a7b83
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Thu Dec 14 14:02:46 2017 +0000

    staging: ccree: fix fips event irq handling build
    
    commit dc5591dc9c03e4cd22d3f0c3659196cc34668452 upstream.
    
    When moving from internal for kernel FIPS infrastructure the FIPS event irq
    handling code was left with the old ifdef by mistake. Fix it.
    
    Fixes: b7e607bf33a2 ("staging: ccree: move FIPS support to kernel infrastructure")
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d3a65e371e2405c7d114bb8a4e8b738df84179fc
Author: Gilad Ben-Yossef <gilad@benyossef.com>
Date:   Sun Dec 3 13:58:19 2017 +0000

    staging: ccree: NULLify backup_info when unused
    
    commit 46df8824982e4fb0198776078d4a8c3e2d531464 upstream.
    
    backup_info field is only allocated for decrypt code path.
    The field was not nullified when not used causing a kfree
    in an error handling path to attempt to free random
    addresses as uncovered in stress testing.
    
    Fixes: 737aed947f9b ("staging: ccree: save ciphertext for CTS IV")
    Signed-off-by: Gilad Ben-Yossef <gilad@benyossef.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c857988cb332487bc1d3c0648772397491242c3b
Author: Dmitry Eremin <dmitry.eremin@intel.com>
Date:   Thu Jan 25 16:51:04 2018 +0300

    staging: lustre: separate a connection destroy from free struct kib_conn
    
    commit 9b046013e5837f8a58453d1e9f8e01d03adb7fe7 upstream.
    
    The logic of the original commit 4d99b2581eff ("staging: lustre: avoid
    intensive reconnecting for ko2iblnd") was assumed conditional free of
    struct kib_conn if the second argument free_conn in function
    kiblnd_destroy_conn(struct kib_conn *conn, bool free_conn) is true.
    But this hunk of code was dropped from original commit. As result the logic
    works wrong and current code use struct kib_conn after free.
    
    > drivers/staging/lustre/lnet/klnds/o2iblnd/o2iblnd_cb.c
    > 3317  kiblnd_destroy_conn(conn, !peer);
    >                           ^^^^ Freed always (but should be conditionally)
    > 3318
    > 3319  spin_lock_irqsave(lock, flags);
    > 3320  if (!peer)
    > 3321      continue;
    > 3322
    > 3323  conn->ibc_peer = peer;
    >       ^^^^^^^^^^^^^^ Use after free
    > 3324  if (peer->ibp_reconnected < KIB_RECONN_HIGH_RACE)
    > 3325      list_add_tail(&conn->ibc_list,
    >                          ^^^^^^^^^^^^^^ Use after free
    > 3326                    &kiblnd_data.kib_reconn_list);
    > 3327  else
    > 3328      list_add_tail(&conn->ibc_list,
    >                          ^^^^^^^^^^^^^^ Use after free
    > 3329                    &kiblnd_data.kib_reconn_wait);
    
    To avoid confusion this fix moved the freeing a struct kib_conn outside of
    the function kiblnd_destroy_conn() and free as it was intended in original
    commit.
    
    Fixes: 4d99b2581eff ("staging: lustre: avoid intensive reconnecting for ko2iblnd")
    Signed-off-by: Dmitry Eremin <Dmitry.Eremin@intel.com>
    Reviewed-by: Andreas Dilger <andreas.dilger@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5a313f217cddf1031782f18f72290845c680b195
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jan 16 13:40:22 2018 +0300

    scsi: storvsc: missing error code in storvsc_probe()
    
    commit ca8dc694045e9aa248e9916e0f614deb0494cb3d upstream.
    
    We should set the error code if fc_remote_port_add() fails.
    
    Fixes: daf0cd445a21 ("scsi: storvsc: Add support for FC rport.")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Cathy Avery <cavery@redhat.com>
    Acked-by: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a63f24a621bd11c359e26582993feca2c1170afb
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Tue Dec 26 20:34:24 2017 -0800

    scsi: aacraid: Fix hang in kdump
    
    commit c5313ae8e4e037bfaf5e56cb8d6efdb8e92ce437 upstream.
    
    Driver attempts to perform a device scan and device add after coming out
    of reset. At times when the kdump kernel loads and it tries to perform
    eh recovery, the device scan hangs since its commands are blocked because
    of the eh recovery. This should have shown up in normal eh recovery path
    (Should have been obvious)
    
    Remove the code that performs scanning.I can live without the rescanning
    support in the stable kernels but a hanging kdump/eh recovery needs to be
    fixed.
    
    Fixes: a2d0321dd532901e (scsi: aacraid: Reload offlined drives after controller reset)
    Reported-by: Douglas Miller <dougmill@linux.vnet.ibm.com>
    Tested-by: Guilherme G. Piccoli <gpiccoli@linux.vnet.ibm.com>
    Fixes: a2d0321dd532901e (scsi: aacraid: Reload offlined drives after controller reset)
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 623130d4173a2563bdc1b403f224f7efceeb6a01
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Tue Dec 26 20:34:22 2017 -0800

    scsi: aacraid: Fix udev inquiry race condition
    
    commit f4e8708d3104437fd7716e957f38c265b0c509ef upstream.
    
    When udev requests for a devices inquiry string, it might create multiple
    threads causing a race condition on the shared inquiry resource string.
    
    Created a buffer with the string for each thread.
    
    Fixes: 3bc8070fb75b3315 ([SCSI] aacraid: SMC vendor identification)
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bbaf9ef523bfae640d41c6f46201d8aa72954a1a
Author: Mike Rapoport <rppt@linux.vnet.ibm.com>
Date:   Wed Jan 17 20:27:11 2018 +0200

    ima/policy: fix parsing of fsuuid
    
    commit 36447456e1cca853188505f2a964dbbeacfc7a7a upstream.
    
    The switch to uuid_t invereted the logic of verfication that &entry->fsuuid
    is zero during parsing of "fsuuid=" rule. Instead of making sure the
    &entry->fsuuid field is not attempted to be overwritten, we bail out for
    perfectly correct rule.
    
    Fixes: 787d8c530af7 ("ima/policy: switch to use uuid_t")
    Signed-off-by: Mike Rapoport <rppt@linux.vnet.ibm.com>
    Signed-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 50b1c3e029869c708031973847eeea4b67e32575
Author: Lyude Paul <lyude@redhat.com>
Date:   Tue Dec 12 14:31:30 2017 -0500

    igb: Free IRQs when device is hotplugged
    
    commit 888f22931478a05bc81ceb7295c626e1292bf0ed upstream.
    
    Recently I got a Caldigit TS3 Thunderbolt 3 dock, and noticed that upon
    hotplugging my kernel would immediately crash due to igb:
    
    [  680.825801] kernel BUG at drivers/pci/msi.c:352!
    [  680.828388] invalid opcode: 0000 [#1] SMP
    [  680.829194] Modules linked in: igb(O) thunderbolt i2c_algo_bit joydev vfat fat btusb btrtl btbcm btintel bluetooth ecdh_generic hp_wmi sparse_keymap rfkill wmi_bmof iTCO_wdt intel_rapl x86_pkg_temp_thermal coretemp crc32_pclmul snd_pcm rtsx_pci_ms mei_me snd_timer memstick snd pcspkr mei soundcore i2c_i801 tpm_tis psmouse shpchp wmi tpm_tis_core tpm video hp_wireless acpi_pad rtsx_pci_sdmmc mmc_core crc32c_intel serio_raw rtsx_pci mfd_core xhci_pci xhci_hcd i2c_hid i2c_core [last unloaded: igb]
    [  680.831085] CPU: 1 PID: 78 Comm: kworker/u16:1 Tainted: G           O     4.15.0-rc3Lyude-Test+ #6
    [  680.831596] Hardware name: HP HP ZBook Studio G4/826B, BIOS P71 Ver. 01.03 06/09/2017
    [  680.832168] Workqueue: kacpi_hotplug acpi_hotplug_work_fn
    [  680.832687] RIP: 0010:free_msi_irqs+0x180/0x1b0
    [  680.833271] RSP: 0018:ffffc9000030fbf0 EFLAGS: 00010286
    [  680.833761] RAX: ffff8803405f9c00 RBX: ffff88033e3d2e40 RCX: 000000000000002c
    [  680.834278] RDX: 0000000000000000 RSI: 00000000000000ac RDI: ffff880340be2178
    [  680.834832] RBP: 0000000000000000 R08: ffff880340be1ff0 R09: ffff8803405f9c00
    [  680.835342] R10: 0000000000000000 R11: 0000000000000040 R12: ffff88033d63a298
    [  680.835822] R13: ffff88033d63a000 R14: 0000000000000060 R15: ffff880341959000
    [  680.836332] FS:  0000000000000000(0000) GS:ffff88034f440000(0000) knlGS:0000000000000000
    [  680.836817] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  680.837360] CR2: 000055e64044afdf CR3: 0000000001c09002 CR4: 00000000003606e0
    [  680.837954] Call Trace:
    [  680.838853]  pci_disable_msix+0xce/0xf0
    [  680.839616]  igb_reset_interrupt_capability+0x5d/0x60 [igb]
    [  680.840278]  igb_remove+0x9d/0x110 [igb]
    [  680.840764]  pci_device_remove+0x36/0xb0
    [  680.841279]  device_release_driver_internal+0x157/0x220
    [  680.841739]  pci_stop_bus_device+0x7d/0xa0
    [  680.842255]  pci_stop_bus_device+0x2b/0xa0
    [  680.842722]  pci_stop_bus_device+0x3d/0xa0
    [  680.843189]  pci_stop_and_remove_bus_device+0xe/0x20
    [  680.843627]  trim_stale_devices+0xf3/0x140
    [  680.844086]  trim_stale_devices+0x94/0x140
    [  680.844532]  trim_stale_devices+0xa6/0x140
    [  680.845031]  ? get_slot_status+0x90/0xc0
    [  680.845536]  acpiphp_check_bridge.part.5+0xfe/0x140
    [  680.846021]  acpiphp_hotplug_notify+0x175/0x200
    [  680.846581]  ? free_bridge+0x100/0x100
    [  680.847113]  acpi_device_hotplug+0x8a/0x490
    [  680.847535]  acpi_hotplug_work_fn+0x1a/0x30
    [  680.848076]  process_one_work+0x182/0x3a0
    [  680.848543]  worker_thread+0x2e/0x380
    [  680.848963]  ? process_one_work+0x3a0/0x3a0
    [  680.849373]  kthread+0x111/0x130
    [  680.849776]  ? kthread_create_worker_on_cpu+0x50/0x50
    [  680.850188]  ret_from_fork+0x1f/0x30
    [  680.850601] Code: 43 14 85 c0 0f 84 d5 fe ff ff 31 ed eb 0f 83 c5 01 39 6b 14 0f 86 c5 fe ff ff 8b 7b 10 01 ef e8 b7 e4 d2 ff 48 83 78 70 00 74 e3 <0f> 0b 49 8d b5 a0 00 00 00 e8 62 6f d3 ff e9 c7 fe ff ff 48 8b
    [  680.851497] RIP: free_msi_irqs+0x180/0x1b0 RSP: ffffc9000030fbf0
    
    As it turns out, normally the freeing of IRQs that would fix this is called
    inside of the scope of __igb_close(). However, since the device is
    already gone by the point we try to unregister the netdevice from the
    driver due to a hotplug we end up seeing that the netif isn't present
    and thus, forget to free any of the device IRQs.
    
    So: make sure that if we're in the process of dismantling the netdev, we
    always allow __igb_close() to be called so that IRQs may be freed
    normally. Additionally, only allow igb_close() to be called from
    __igb_close() if it hasn't already been called for the given adapter.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Fixes: 9474933caf21 ("igb: close/suspend race in netif_device_detach")
    Cc: Todd Fujinaka <todd.fujinaka@intel.com>
    Cc: Stephen Hemminger <stephen@networkplumber.org>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7981935860a389f7392654471531d4371b61231d
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:57:13 2017 -0800

    mtd: nand: denali_pci: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit d822401d1c6898a4a4ee03977b78b8cec402e88a upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/mtd/nand/denali_pci.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL v2", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Acked-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2db691195247e906503bfa14df17bff43f0eb5e0
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:54:26 2017 -0800

    gpio: ath79: add missing MODULE_DESCRIPTION/LICENSE
    
    commit 539340f37e6d6ed4cd93e8e18c9b2e4eafd4b842 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/gpio/gpio-ath79.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL v2", which matches the header of the file.
    
    MODULE_DESCRIPTION is also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Acked-by: Alban Bedel <albeu@free.fr>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 397b9b19bfbd9471dfa5b8be9952cd0f218dee9f
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:54:52 2017 -0800

    gpio: iop: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit 97b03136e1b637d7a9d2274c099e44ecf23f1103 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/gpio/gpio-iop.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 14fe41dd02955311c9d6ce272022fb6b5325d3cc
Author: Jesse Chan <jc@linux.com>
Date:   Mon Nov 20 12:58:27 2017 -0800

    power: reset: zx-reboot: add missing MODULE_DESCRIPTION/AUTHOR/LICENSE
    
    commit 348c7cf5fcbcb68838255759d4cb45d039af36d2 upstream.
    
    This change resolves a new compile-time warning
    when built as a loadable module:
    
    WARNING: modpost: missing MODULE_LICENSE() in drivers/power/reset/zx-reboot.o
    see include/linux/module.h for more information
    
    This adds the license as "GPL v2", which matches the header of the file.
    
    MODULE_DESCRIPTION and MODULE_AUTHOR are also added.
    
    Signed-off-by: Jesse Chan <jc@linux.com>
    Signed-off-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c08a3601eaddef32a16be68565b02165e11a8ec8
Author: Jason Gerecke <killertofu@gmail.com>
Date:   Tue Dec 26 14:53:55 2017 -0800

    HID: wacom: Fix reporting of touch toggle (WACOM_HID_WD_MUTE_DEVICE) events
    
    commit 403c0f681c1964ff1db8c2fb8de8c4067779d081 upstream.
    
    Touch toggle softkeys send a '1' while pressed and a '0' while released,
    requring the kernel to keep track of wether touch should be enabled or
    disabled. The code does not handle the state transitions properly,
    however. If the key is pressed repeatedly, the following four states
    of states are cycled through (assuming touch starts out enabled):
    
    Press:   shared->is_touch_on => 0, SW_MUTE_DEVICE => 1
    Release: shared->is_touch_on => 0, SW_MUTE_DEVICE => 1
    Press:   shared->is_touch_on => 1, SW_MUTE_DEVICE => 0
    Release: shared->is_touch_on => 1, SW_MUTE_DEVICE => 1
    
    The hardware always properly enables/disables touch when the key is
    pressed but applications that listen for SW_MUTE_DEVICE events to provide
    feedback about the state will only ever show touch as being enabled while
    the key is held, and only every-other time. This sequence occurs because
    the fallthrough WACOM_HID_WD_TOUCHONOFF case is always handled, and it
    uses the value of the *local* is_touch_on variable as the value to
    report to userspace. The local value is equal to the shared value when
    the button is pressed, but equal to zero when the button is released.
    
    Reporting the shared value to userspace fixes this problem, but the
    fallthrough case needs to update the shared value in an incompatible
    way (which is why the local variable was introduced in the first place).
    To work around this, we just handle both cases in a single block of code
    and update the shared variable as appropriate.
    
    Fixes: d793ff8187 ("HID: wacom: generic: support touch on/off softkey")
    Signed-off-by: Jason Gerecke <jason.gerecke@wacom.com>
    Reviewed-by: Aaron Skomra <aaron.skomra@wacom.com>
    Tested-by: Aaron Skomra <aaron.skomra@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a952547e89fc6167821f1539c71ca0e795783731
Author: Aaron Armstrong Skomra <skomra@gmail.com>
Date:   Thu Dec 7 12:31:56 2017 -0800

    HID: wacom: EKR: ensure devres groups at higher indexes are released
    
    commit 791ae273731fa85d3332e45064dab177ae663e80 upstream.
    
    Background: ExpressKey Remotes communicate their events via usb dongle.
    Each dongle can hold up to 5 pairings at one time and one EKR (identified
    by its serial number) can unfortunately be paired with its dongle
    more than once. The pairing takes place in a round-robin fashion.
    
    Input devices are only created once per EKR, when a new serial number
    is seen in the list of pairings. However, if a device is created for
    a "higher" paring index and subsequently a second pairing occurs at a
    lower pairing index, unpairing the remote with that serial number from
    any pairing index will currently cause a driver crash. This occurs
    infrequently, as two remotes are necessary to trigger this bug and most
    users have only one remote.
    
    As an illustration, to trigger the bug you need to have two remotes,
    and pair them in this order:
    
    1. slot 0 -> remote 1 (input device created for remote 1)
    2. slot 1 -> remote 1 (duplicate pairing - no device created)
    3. slot 2 -> remote 1 (duplicate pairing - no device created)
    4. slot 3 -> remote 1 (duplicate pairing - no device created)
    5. slot 4 -> remote 2 (input device created for remote 2)
    
    6. slot 0 -> remote 2 (1 destroyed and recreated at slot 1)
    7. slot 1 -> remote 2 (1 destroyed and recreated at slot 2)
    8. slot 2 -> remote 2 (1 destroyed and recreated at slot 3)
    9. slot 3 -> remote 2 (1 destroyed and not recreated)
    10. slot 4 -> remote 2 (2 was already in this slot so no changes)
    
    11. slot 0 -> remote 1 (The current code sees remote 2 was paired over in
                            one of the dongle slots it occupied and attempts
                            to remove all information about remote 2 [1]. It
                            calls wacom_remote_destroy_one for remote 2, but
                            the destroy function assumes the lowest index is
                            where the remote's input device was created. The
                            code "cleans up" the other remote 2 pairings
                            including the one which the input device was based
                            on, assuming they were were just duplicate
                            pairings. However, the cleanup doesn't call the
                            devres release function for the input device that
                            was created in slot 4).
    
    This issue is fixed by this commit.
    
    [1] Remote 2 should subsequently be re-created on the next packet from the
    EKR at the lowest numbered slot that it occupies (here slot 1).
    
    Fixes: f9036bd43602 ("HID: wacom: EKR: use devres groups to manage resources")
    Signed-off-by: Aaron Armstrong Skomra <aaron.skomra@wacom.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc5daa4b691b70b2e2f1e815926196449435273a
Author: Stephan Mueller <smueller@chronox.de>
Date:   Tue Jan 2 08:55:25 2018 +0100

    crypto: af_alg - whitelist mask and type
    
    commit bb30b8848c85e18ca7e371d0a869e94b3e383bdf upstream.
    
    The user space interface allows specifying the type and mask field used
    to allocate the cipher. Only a subset of the possible flags are intended
    for user space. Therefore, white-list the allowed flags.
    
    In case the user space caller uses at least one non-allowed flag, EINVAL
    is returned.
    
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66ae99ca89cb3f22ffff81084ce5446d0122abdb
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Fri Jan 19 12:04:33 2018 +0000

    crypto: sha3-generic - fixes for alignment and big endian operation
    
    commit c013cee99d5a18aec8c71fee8f5f41369cd12595 upstream.
    
    Ensure that the input is byte swabbed before injecting it into the
    SHA3 transform. Use the get_unaligned() accessor for this so that
    we don't perform unaligned access inadvertently on architectures
    that do not support that.
    
    Fixes: 53964b9ee63b7075 ("crypto: sha3 - Add SHA-3 hash algorithm")
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e02e32d0b7b2c0f1da4069224c9a8038a0db5b38
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Tue Dec 26 17:21:16 2017 +0100

    crypto: inside-secure - avoid unmapping DMA memory that was not mapped
    
    commit c957f8b3e2e54b29f53ef69decc87bbc858c9b58 upstream.
    
    This patch adds a parameter in the SafeXcel ahash request structure to
    keep track of the number of SG entries mapped. This allows not to call
    dma_unmap_sg() when dma_map_sg() wasn't called in the first place. This
    also removes a warning when the debugging of the DMA-API is enabled in
    the kernel configuration: "DMA-API: device driver tries to free DMA
    memory it has not allocated".
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb06c7a568b0f91c9a8dd57a2609ae56dfd94d7f
Author: Antoine Tenart <antoine.tenart@free-electrons.com>
Date:   Tue Dec 26 17:21:17 2017 +0100

    crypto: inside-secure - fix hash when length is a multiple of a block
    
    commit 809778e02cd45d0625439fee67688f655627bb3c upstream.
    
    This patch fixes the hash support in the SafeXcel driver when the update
    size is a multiple of a block size, and when a final call is made just
    after with a size of 0. In such cases the driver should cache the last
    block from the update to avoid handling 0 length data on the final call
    (that's a hardware limitation).
    
    Fixes: 1b44c5a60c13 ("crypto: inside-secure - add SafeXcel EIP197 crypto engine driver")
    Signed-off-by: Antoine Tenart <antoine.tenart@free-electrons.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 13f2e2db18a8c8bb072a8a2e79f4dbbee7fd6f4c
Author: Junaid Shahid <junaids@google.com>
Date:   Wed Dec 20 17:08:38 2017 -0800

    crypto: aesni - Fix out-of-bounds access of the AAD buffer in generic-gcm-aesni
    
    commit 1ecdd37e308ca149dc378cce225068cbac54e3a6 upstream.
    
    The aesni_gcm_enc/dec functions can access memory after the end of
    the AAD buffer if the AAD length is not a multiple of 4 bytes.
    It didn't matter with rfc4106-gcm-aesni as in that case the AAD was
    always followed by the 8 byte IV, but that is no longer the case with
    generic-gcm-aesni. This can potentially result in accessing a page that
    is not mapped and thus causing the machine to crash. This patch fixes
    that by reading the last <16 byte block of the AAD byte-by-byte and
    optionally via an 8-byte load if the block was at least 8 bytes.
    
    Fixes: 0487ccac ("crypto: aesni - make non-AVX AES-GCM work with any aadlen")
    Signed-off-by: Junaid Shahid <junaids@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eef10a3e99c720d29b74d680e1a234368e6d6da0
Author: Junaid Shahid <junaids@google.com>
Date:   Wed Dec 20 17:08:37 2017 -0800

    crypto: aesni - Fix out-of-bounds access of the data buffer in generic-gcm-aesni
    
    commit b20209c91e23a9bbad9cac2f80bc16b3c259e10e upstream.
    
    The aesni_gcm_enc/dec functions can access memory before the start of
    the data buffer if the length of the data buffer is less than 16 bytes.
    This is because they perform the read via a single 16-byte load. This
    can potentially result in accessing a page that is not mapped and thus
    causing the machine to crash. This patch fixes that by reading the
    partial block byte-by-byte and optionally an via 8-byte load if the block
    was at least 8 bytes.
    
    Fixes: 0487ccac ("crypto: aesni - make non-AVX AES-GCM work with any aadlen")
    Signed-off-by: Junaid Shahid <junaids@google.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a393aecc4d7a1c85f7143843f0948931976aeb0
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Wed Dec 13 14:54:36 2017 +0100

    crypto: aesni - add wrapper for generic gcm(aes)
    
    commit fc8517bf627c9b834f80274a1bc9ecd39b27231b upstream.
    
    When I added generic-gcm-aes I didn't add a wrapper like the one
    provided for rfc4106(gcm(aes)). We need to add a cryptd wrapper to fall
    back on in case the FPU is not available, otherwise we might corrupt the
    FPU state.
    
    Fixes: cce2ea8d90fe ("crypto: aesni - add generic gcm(aes)")
    Reported-by: Ilya Lesokhin <ilyal@mellanox.com>
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 799cdd8acd7198e172bc26b3cf1b8d82b582c40f
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Wed Dec 13 14:53:43 2017 +0100

    crypto: aesni - fix typo in generic_gcmaes_decrypt
    
    commit 106840c41096a01079d3a2025225029c13713802 upstream.
    
    generic_gcmaes_decrypt needs to use generic_gcmaes_ctx, not
    aesni_rfc4106_gcm_ctx. This is actually harmless because the fields in
    struct generic_gcmaes_ctx share the layout of the same fields in
    aesni_rfc4106_gcm_ctx.
    
    Fixes: cce2ea8d90fe ("crypto: aesni - add generic gcm(aes)")
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c862ace9b73d4d636cf69605c92e25122926de64
Author: Stephan Mueller <smueller@chronox.de>
Date:   Thu Jan 18 20:41:09 2018 +0100

    crypto: aesni - handle zero length dst buffer
    
    commit 9c674e1e2f9e24fa4392167efe343749008338e0 upstream.
    
    GCM can be invoked with a zero destination buffer. This is possible if
    the AAD and the ciphertext have zero lengths and only the tag exists in
    the source buffer (i.e. a source buffer cannot be zero). In this case,
    the GCM cipher only performs the authentication and no decryption
    operation.
    
    When the destination buffer has zero length, it is possible that no page
    is mapped to the SG pointing to the destination. In this case,
    sg_page(req->dst) is an invalid access. Therefore, page accesses should
    only be allowed if the req->dst->length is non-zero which is the
    indicator that a page must exist.
    
    This fixes a crash that can be triggered by user space via AF_ALG.
    
    Signed-off-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 436bcaa6bc354b0d432aebabf24f922aef48af80
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Sun Nov 26 00:16:46 2017 +0100

    crypto: ecdh - fix typo in KPP dependency of CRYPTO_ECDH
    
    commit b5b9007730ce1d90deaf25d7f678511550744bdc upstream.
    
    This fixes a typo in the CRYPTO_KPP dependency of CRYPTO_ECDH.
    
    Fixes: 3c4b23901a0c ("crypto: ecdh - Add ECDH software support")
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7bccfc3bccae28f8c2739acab0d4cebc9733552c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Jan 19 14:18:34 2018 +0100

    ALSA: hda - Reduce the suspend time consumption for ALC256
    
    commit 1c9609e3a8cf5997bd35205cfda1ff2218ee793b upstream.
    
    ALC256 has its own quirk to override the shutup call, and it contains
    the COEF update for pulling down the headset jack control.  Currently,
    the COEF update is called after clearing the headphone pin, and this
    seems triggering a stall of the codec communication, and results in a
    long delay over a second at suspend.
    
    A quick resolution is to swap the calls: at first with the COEF
    update, then clear the headphone pin.
    
    Fixes: 4a219ef8f370 ("ALSA: hda/realtek - Add ALC256 HP depop function")
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=198503
    Reported-by: Paul Menzel <pmenzel@molgen.mpg.de>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5e5a8be023706da797db5cd7c05b7918275f3435
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Mon Jan 22 13:19:28 2018 +0100

    gpio: Fix kernel stack leak to userspace
    
    commit 24bd3efc9d1efb5f756a7c6f807a36ddb6adc671 upstream.
    
    The GPIO event descriptor was leaking kernel stack to
    userspace because we don't zero the variable before
    use. Ooops. Fix this.
    
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Bartosz Golaszewski <brgl@bgdev.pl>
    Reviewed-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b98fe1634c13270d989dbe01e3768ea952b8494c
Author: Patrice Chotard <patrice.chotard@st.com>
Date:   Fri Jan 12 13:16:08 2018 +0100

    gpio: stmpe: i2c transfer are forbiden in atomic context
    
    commit b888fb6f2a278442933e3bfab70262e9a5365fb3 upstream.
    
    Move the workaround from stmpe_gpio_irq_unmask() which is executed
    in atomic context to stmpe_gpio_irq_sync_unlock() which is not.
    
    It fixes the following issue:
    
    [    1.500000] BUG: scheduling while atomic: swapper/1/0x00000002
    [    1.500000] CPU: 0 PID: 1 Comm: swapper Not tainted 4.15.0-rc2-00020-gbd4301f-dirty #28
    [    1.520000] Hardware name: STM32 (Device Tree Support)
    [    1.520000] [<0000bfc9>] (unwind_backtrace) from [<0000b347>] (show_stack+0xb/0xc)
    [    1.530000] [<0000b347>] (show_stack) from [<0001fc49>] (__schedule_bug+0x39/0x58)
    [    1.530000] [<0001fc49>] (__schedule_bug) from [<00168211>] (__schedule+0x23/0x2b2)
    [    1.550000] [<00168211>] (__schedule) from [<001684f7>] (schedule+0x57/0x64)
    [    1.550000] [<001684f7>] (schedule) from [<0016a513>] (schedule_timeout+0x137/0x164)
    [    1.550000] [<0016a513>] (schedule_timeout) from [<00168b91>] (wait_for_common+0x8d/0xfc)
    [    1.570000] [<00168b91>] (wait_for_common) from [<00139753>] (stm32f4_i2c_xfer+0xe9/0xfe)
    [    1.580000] [<00139753>] (stm32f4_i2c_xfer) from [<00138545>] (__i2c_transfer+0x111/0x148)
    [    1.590000] [<00138545>] (__i2c_transfer) from [<001385cf>] (i2c_transfer+0x53/0x70)
    [    1.590000] [<001385cf>] (i2c_transfer) from [<001388a5>] (i2c_smbus_xfer+0x12f/0x36e)
    [    1.600000] [<001388a5>] (i2c_smbus_xfer) from [<00138b49>] (i2c_smbus_read_byte_data+0x1f/0x2a)
    [    1.610000] [<00138b49>] (i2c_smbus_read_byte_data) from [<00124fdd>] (__stmpe_reg_read+0xd/0x24)
    [    1.620000] [<00124fdd>] (__stmpe_reg_read) from [<001252b3>] (stmpe_reg_read+0x19/0x24)
    [    1.630000] [<001252b3>] (stmpe_reg_read) from [<0002c4d1>] (unmask_irq+0x17/0x22)
    [    1.640000] [<0002c4d1>] (unmask_irq) from [<0002c57f>] (irq_startup+0x6f/0x78)
    [    1.650000] [<0002c57f>] (irq_startup) from [<0002b7a1>] (__setup_irq+0x319/0x47c)
    [    1.650000] [<0002b7a1>] (__setup_irq) from [<0002bad3>] (request_threaded_irq+0x6b/0xe8)
    [    1.660000] [<0002bad3>] (request_threaded_irq) from [<0002d0b9>] (devm_request_threaded_irq+0x3b/0x6a)
    [    1.670000] [<0002d0b9>] (devm_request_threaded_irq) from [<001446e7>] (mmc_gpiod_request_cd_irq+0x49/0x8a)
    [    1.680000] [<001446e7>] (mmc_gpiod_request_cd_irq) from [<0013d45d>] (mmc_start_host+0x49/0x60)
    [    1.690000] [<0013d45d>] (mmc_start_host) from [<0013e40b>] (mmc_add_host+0x3b/0x54)
    [    1.700000] [<0013e40b>] (mmc_add_host) from [<00148119>] (mmci_probe+0x4d1/0x60c)
    [    1.710000] [<00148119>] (mmci_probe) from [<000f903b>] (amba_probe+0x7b/0xbe)
    [    1.720000] [<000f903b>] (amba_probe) from [<001170e5>] (driver_probe_device+0x169/0x1f8)
    [    1.730000] [<001170e5>] (driver_probe_device) from [<001171b7>] (__driver_attach+0x43/0x5c)
    [    1.740000] [<001171b7>] (__driver_attach) from [<0011618d>] (bus_for_each_dev+0x3d/0x46)
    [    1.740000] [<0011618d>] (bus_for_each_dev) from [<001165cd>] (bus_add_driver+0xcd/0x124)
    [    1.740000] [<001165cd>] (bus_add_driver) from [<00117713>] (driver_register+0x4d/0x7a)
    [    1.760000] [<00117713>] (driver_register) from [<001fc765>] (do_one_initcall+0xbd/0xe8)
    [    1.770000] [<001fc765>] (do_one_initcall) from [<001fc88b>] (kernel_init_freeable+0xfb/0x134)
    [    1.780000] [<001fc88b>] (kernel_init_freeable) from [<00167ee3>] (kernel_init+0x7/0x9c)
    [    1.790000] [<00167ee3>] (kernel_init) from [<00009b65>] (ret_from_fork+0x11/0x2c)
    
    Signed-off-by: Alexandre TORGUE <alexandre.torgue@st.com>
    Signed-off-by: Patrice Chotard <patrice.chotard@st.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 70f19ee8b455dbd22a743fb003d1d60669b118ef
Author: Joel Stanley <joel@jms.id.au>
Date:   Thu Dec 21 11:11:31 2017 +1030

    tools/gpio: Fix build error with musl libc
    
    commit 1696784eb7b52b13b62d160c028ef2c2c981d4f2 upstream.
    
    The GPIO tools build fails when using a buildroot toolchain that uses musl
    as it's C library:
    
    arm-broomstick-linux-musleabi-gcc -Wp,-MD,./.gpio-event-mon.o.d \
     -Wp,-MT,gpio-event-mon.o -O2 -Wall -g -D_GNU_SOURCE \
     -Iinclude -D"BUILD_STR(s)=#s" -c -o gpio-event-mon.o gpio-event-mon.c
    gpio-event-mon.c:30:6: error: unknown type name ‘u_int32_t’; did you mean ‘uint32_t’?
          u_int32_t handleflags,
          ^~~~~~~~~
          uint32_t
    
    The glibc headers installed on my laptop include sys/types.h in
    unistd.h, but it appears that musl does not.
    
    Fixes: 97f69747d8b1 ("tools/gpio: add the gpio-event-mon tool")
    Signed-off-by: Joel Stanley <joel@jms.id.au>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ed3bbbc84f1322a27389f4917203e45daf3bd6d3
Author: Lukas Wunner <lukas@wunner.de>
Date:   Fri Nov 17 00:54:53 2017 +0100

    Bluetooth: hci_serdev: Init hci_uart proto_lock to avoid oops
    
    commit d73e172816652772114827abaa2dbc053eecbbd7 upstream.
    
    John Stultz reports a boot time crash with the HiKey board (which uses
    hci_serdev) occurring in hci_uart_tx_wakeup().  That function is
    contained in hci_ldisc.c, but also called from the newer hci_serdev.c.
    It acquires the proto_lock in struct hci_uart and it turns out that we
    forgot to init the lock in the serdev code path, thus causing the crash.
    
    John bisected the crash to commit 67d2f8781b9f ("Bluetooth: hci_ldisc:
    Allow sleeping while proto locks are held"), but the issue was present
    before and the commit merely exposed it.  (Perhaps by luck, the crash
    did not occur with rwlocks.)
    
    Init the proto_lock in the serdev code path to avoid the oops.
    
    Stack trace for posterity:
    
    Unable to handle kernel read from unreadable memory at 406f127000
    [000000406f127000] user address but active_mm is swapper
    Internal error: Oops: 96000005 [#1] PREEMPT SMP
    Hardware name: HiKey Development Board (DT)
    Call trace:
     hci_uart_tx_wakeup+0x38/0x148
     hci_uart_send_frame+0x28/0x38
     hci_send_frame+0x64/0xc0
     hci_cmd_work+0x98/0x110
     process_one_work+0x134/0x330
     worker_thread+0x130/0x468
     kthread+0xf8/0x128
     ret_from_fork+0x10/0x18
    
    Link: https://lkml.org/lkml/2017/11/15/908
    Reported-and-tested-by: John Stultz <john.stultz@linaro.org>
    Cc: Ronald Tschalär <ronald@innovation.ch>
    Cc: Rob Herring <rob.herring@linaro.org>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Signed-off-by: Lukas Wunner <lukas@wunner.de>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
