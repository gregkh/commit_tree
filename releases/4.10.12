commit 055c0a94117c3c9950ebb7d0c262ae64808bd266
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Fri Apr 21 09:32:55 2017 +0200

    Linux 4.10.12

commit e5349c13c7a8bd6e0be0f81f4464fc2edae05d5b
Author: Omar Sandoval <osandov@fb.com>
Date:   Wed Feb 1 00:02:27 2017 -0800

    virtio-console: avoid DMA from stack
    
    commit c4baad50297d84bde1a7ad45e50c73adae4a2192 upstream.
    
    put_chars() stuffs the buffer it gets into an sg, but that buffer may be
    on the stack. This breaks with CONFIG_VMAP_STACK=y (for me, it
    manifested as printks getting turned into NUL bytes).
    
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Amit Shah <amit.shah@redhat.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Cc: Brad Spengler <spender@grsecurity.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0116f4d9a9ad5112d315b236c7b3d7036d404d7
Author: Stefan Brüns <stefan.bruens@rwth-aachen.de>
Date:   Sun Feb 5 12:57:59 2017 -0200

    cxusb: Use a dma capable buffer also for reading
    
    commit 3f190e3aec212fc8c61e202c51400afa7384d4bc upstream.
    
    Commit 17ce039b4e54 ("[media] cxusb: don't do DMA on stack")
    added a kmalloc'ed bounce buffer for writes, but missed to do the same
    for reads. As the read only happens after the write is finished, we can
    reuse the same buffer.
    
    As dvb_usb_generic_rw handles a read length of 0 by itself, avoid calling
    it using the dvb_usb_generic_read wrapper function.
    
    Signed-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Cc: Brad Spengler <spender@grsecurity.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1bfb5083bfa79d1400009ac6265bfb5f2c09ec9
Author: Kees Cook <keescook@chromium.org>
Date:   Wed Apr 5 09:39:08 2017 -0700

    mm: Tighten x86 /dev/mem with zeroing reads
    
    commit a4866aa812518ed1a37d8ea0c881dc946409de94 upstream.
    
    Under CONFIG_STRICT_DEVMEM, reading System RAM through /dev/mem is
    disallowed. However, on x86, the first 1MB was always allowed for BIOS
    and similar things, regardless of it actually being System RAM. It was
    possible for heap to end up getting allocated in low 1MB RAM, and then
    read by things like x86info or dd, which would trip hardened usercopy:
    
    usercopy: kernel memory exposure attempt detected from ffff880000090000 (dma-kmalloc-256) (4096 bytes)
    
    This changes the x86 exception for the low 1MB by reading back zeros for
    System RAM areas instead of blindly allowing them. More work is needed to
    extend this to mmap, but currently mmap doesn't go through usercopy, so
    hardened usercopy won't Oops the kernel.
    
    Reported-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Tested-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Cc: Brad Spengler <spender@grsecurity.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2c4d8f20cc2913d0ab738a491c3d26e09871e701
Author: Thierry Reding <treding@nvidia.com>
Date:   Thu Jan 12 17:07:43 2017 +0100

    rtc: tegra: Implement clock handling
    
    commit 5fa4086987506b2ab8c92f8f99f2295db9918856 upstream.
    
    Accessing the registers of the RTC block on Tegra requires the module
    clock to be enabled. This only works because the RTC module clock will
    be enabled by default during early boot. However, because the clock is
    unused, the CCF will disable it at late_init time. This causes the RTC
    to become unusable afterwards. This can easily be reproduced by trying
    to use the RTC:
    
            $ hwclock --rtc /dev/rtc1
    
    This will hang the system. I ran into this by following up on a report
    by Martin Michlmayr that reboot wasn't working on Tegra210 systems. It
    turns out that the rtc-tegra driver's ->shutdown() implementation will
    hang the CPU, because of the disabled clock, before the system can be
    rebooted.
    
    What confused me for a while is that the same driver is used on prior
    Tegra generations where the hang can not be observed. However, as Peter
    De Schrijver pointed out, this is because on 32-bit Tegra chips the RTC
    clock is enabled by the tegra20_timer.c clocksource driver, which uses
    the RTC to provide a persistent clock. This code is never enabled on
    64-bit Tegra because the persistent clock infrastructure does not exist
    on 64-bit ARM.
    
    The proper fix for this is to add proper clock handling to the RTC
    driver in order to ensure that the clock is enabled when the driver
    requires it. All device trees contain the clock already, therefore
    no additional changes are required.
    
    Reported-by: Martin Michlmayr <tbm@cyrius.com>
    Acked-By Peter De Schrijver <pdeschrijver@nvidia.com>
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Alexandre Belloni <alexandre.belloni@free-electrons.com>
    [bwh: Backported to 4.9: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a16534a3330524c70a580899065d78b0d81c7b5c
Author: Lv Zheng <lv.zheng@intel.com>
Date:   Fri Jan 20 16:42:48 2017 +0800

    ACPI / EC: Use busy polling mode when GPE is not enabled
    
    commit c3a696b6e8f8f75f9f75e556a9f9f6472eae2655 upstream.
    
    When GPE is not enabled, it is not efficient to use the wait polling mode
    as it introduces an unexpected scheduler delay.
    So before the GPE handler is installed, this patch uses busy polling mode
    for all EC(s) and the logic can be applied to non boot EC(s) during the
    suspend/resume process.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=191561
    Tested-by: Jakobus Schurz <jakobus.schurz@gmail.com>
    Tested-by: Chen Yu <yu.c.chen@intel.com>
    Signed-off-by: Lv Zheng <lv.zheng@intel.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8a73a223fb7062fd825ecddc3eb5b394367a6d7f
Author: Mohit Gambhir <mohit.gambhir@oracle.com>
Date:   Thu Jan 26 13:12:27 2017 -0500

    x86/xen: Fix APIC id mismatch warning on Intel
    
    commit cc272163ea554a97dac180fa8dd6cd54c2810bd1 upstream.
    
    This patch fixes the following warning message seen when booting the
    kernel as Dom0 with Xen on Intel machines.
    
    [0.003000] [Firmware Bug]: CPU1: APIC id mismatch. Firmware: 0 APIC: 1]
    
    The code generating the warning in validate_apic_and_package_id() matches
    cpu_data(cpu).apicid (initialized in init_intel()->
    detect_extended_topology() using cpuid) against the apicid returned from
    xen_apic_read(). Now, xen_apic_read() makes a hypercall to retrieve apicid
    for the boot  cpu but returns 0 otherwise. Hence the warning gets thrown
    for all but the boot cpu.
    
    The idea behind xen_apic_read() returning 0 for apicid is that the
    guests (even Dom0) should not need to know what physical processor their
    vcpus are running on. This is because we currently  do not have topology
    information in Xen and also because xen allows more vcpus than physical
    processors. However, boot cpu's apicid is required for loading
    xen-acpi-processor driver on AMD machines. Look at following patch for
    details:
    
    commit 558daa289a40 ("xen/apic: Return the APIC ID (and version) for CPU
    0.")
    
    So to get rid of the warning, this patch modifies
    xen_cpu_present_to_apicid() to return cpu_data(cpu).apicid instead of
    calling xen_apic_read().
    
    The warning is not seen on AMD machines because init_amd() populates
    cpu_data(cpu).apicid by calling hard_smp_processor_id()->xen_apic_read()
    as opposed to using apicid from cpuid as is done on Intel machines.
    
    Signed-off-by: Mohit Gambhir <mohit.gambhir@oracle.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e765ef79fdf3dc6fff0f7a58d3de26ab60c95530
Author: Lee, Chun-Yi <joeyli.kernel@gmail.com>
Date:   Thu Nov 3 08:18:52 2016 +0800

    platform/x86: acer-wmi: setup accelerometer when machine has appropriate notify event
    
    commit 98d610c3739ac354319a6590b915f4624d9151e6 upstream.
    
    The accelerometer event relies on the ACERWMID_EVENT_GUID notify.
    So, this patch changes the codes to setup accelerometer input device
    when detected ACERWMID_EVENT_GUID. It avoids that the accel input
    device created on every Acer machines.
    
    In addition, patch adds a clearly parsing logic of accelerometer hid
    to acer_wmi_get_handle_cb callback function. It is positive matching
    the "SENR" name with "BST0001" device to avoid non-supported hardware.
    
    Reported-by: Bjørn Mork <bjorn@mork.no>
    Cc: Darren Hart <dvhart@infradead.org>
    Signed-off-by: Lee, Chun-Yi <jlee@suse.com>
    [andy: slightly massage commit message]
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 35549ee082855878c38880c81dc929c9fcb57aba
Author: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Date:   Mon Jan 16 15:12:26 2017 +0200

    ASoC: Intel: select DW_DMAC_CORE since it's mandatory
    
    commit ebf79091bf85d9b2270ab29191de9cd3aaf888c5 upstream.
    
    Select DW_DMAC_CORE like the rest of glue drivers do, e.g.
    drivers/dma/dw/Kconfig.
    
    While here group selectors under SND_SOC_INTEL_HASWELL and
    SND_SOC_INTEL_BAYTRAIL.
    
    Make platforms, which are using a common SST firmware driver, to be
    dependent on DMADEVICES.
    
    Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Acked-by: Liam Girdwood <liam.r.girdwood@linux.intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 765c74b9cc2719d24bdca7ca43d6bfd298109337
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Feb 2 12:36:01 2017 -0200

    dvb-usb-v2: avoid use-after-free
    
    commit 005145378c9ad7575a01b6ce1ba118fb427f583a upstream.
    
    I ran into a stack frame size warning because of the on-stack copy of
    the USB device structure:
    
    drivers/media/usb/dvb-usb-v2/dvb_usb_core.c: In function 'dvb_usbv2_disconnect':
    drivers/media/usb/dvb-usb-v2/dvb_usb_core.c:1029:1: error: the frame size of 1104 bytes is larger than 1024 bytes [-Werror=frame-larger-than=]
    
    Copying a device structure like this is wrong for a number of other reasons
    too aside from the possible stack overflow. One of them is that the
    dev_info() call will print the name of the device later, but AFAICT
    we have only copied a pointer to the name earlier and the actual name
    has been freed by the time it gets printed.
    
    This removes the on-stack copy of the device and instead copies the
    device name using kstrdup(). I'm ignoring the possible failure here
    as both printk() and kfree() are able to deal with NULL pointers.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ce5fe5a547d8d728914eac148fac37bc0ef0845f
Author: Helge Deller <deller@gmx.de>
Date:   Sun Apr 16 10:00:14 2017 +0200

    parisc: Fix get_user() for 64-bit value on 32-bit kernel
    
    commit 3f795cef0ecdf9bc980dd058d49bdab4b19af1d3 upstream.
    
    This fixes a bug in which the upper 32-bits of a 64-bit value which is
    read by get_user() was lost on a 32-bit kernel.
    While touching this code, split out pre-loading of %sr2 space register
    and clean up code indent.
    
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit aa7ca04fb26cd374e4b9739b9fc070025ea8c490
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Apr 10 17:15:48 2017 +0800

    crypto: lrw - Fix use-after-free on EINPROGRESS
    
    commit 4702bbeefb490e315189636a5588628c1151223d upstream.
    
    When we get an EINPROGRESS completion in lrw, we will end up marking
    the request as done and freeing it.  This then blows up when the
    request is really completed as we've already freed the memory.
    
    Fixes: 700cb3f5fe75 ("crypto: lrw - Convert to skcipher")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cb0567fc5114948df953403133944db83999ab48
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Apr 10 17:27:57 2017 +0800

    crypto: ahash - Fix EINPROGRESS notification callback
    
    commit ef0579b64e93188710d48667cb5e014926af9f1b upstream.
    
    The ahash API modifies the request's callback function in order
    to clean up after itself in some corner cases (unaligned final
    and missing finup).
    
    When the request is complete ahash will restore the original
    callback and everything is fine.  However, when the request gets
    an EBUSY on a full queue, an EINPROGRESS callback is made while
    the request is still ongoing.
    
    In this case the ahash API will incorrectly call its own callback.
    
    This patch fixes the problem by creating a temporary request
    object on the stack which is used to relay EINPROGRESS back to
    the original completion function.
    
    This patch also adds code to preserve the original flags value.
    
    Fixes: ab6bf4e5e5e4 ("crypto: hash - Fix the pointer voodoo in...")
    Reported-by: Sabrina Dubroca <sd@queasysnail.net>
    Tested-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 102da3a73f9a5c1551a7eb8003714e7fa18884c7
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Sat Apr 8 10:02:46 2017 +0800

    crypto: xts - Fix use-after-free on EINPROGRESS
    
    commit aa4a829bdaced81e70c215a84ef6595ce8bd4308 upstream.
    
    When we get an EINPROGRESS completion in xts, we will end up marking
    the request as done and freeing it.  This then blows up when the
    request is really completed as we've already freed the memory.
    
    Fixes: f1c131b45410 ("crypto: xts - Convert to skcipher")
    Reported-by: Nathan Royce <nroycea+kernel@gmail.com>
    Reported-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Tested-by: Krzysztof Kozlowski <krzk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 25308983eda6354815f7f1f6dd01afeef786a876
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Apr 10 17:59:07 2017 +0800

    crypto: algif_aead - Fix bogus request dereference in completion function
    
    commit e6534aebb26e32fbab14df9c713c65e8507d17e4 upstream.
    
    The algif_aead completion function tries to deduce the aead_request
    from the crypto_async_request argument.  This is broken because
    the API does not guarantee that the same request will be pased to
    the completion function.  Only the value of req->data can be used
    in the completion function.
    
    This patch fixes it by storing a pointer to sk in areq and using
    that instead of passing in sk through req->data.
    
    Fixes: 83094e5e9e49 ("crypto: af_alg - add async support to...")
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a0a1e90f5057f69055d880c96257b98035feca71
Author: Namhyung Kim <namhyung@kernel.org>
Date:   Mon Apr 17 11:44:27 2017 +0900

    ftrace: Fix function pid filter on instances
    
    commit d879d0b8c183aabeb9a65eba91f3f9e3c7e7b905 upstream.
    
    When function tracer has a pid filter, it adds a probe to sched_switch
    to track if current task can be ignored.  The probe checks the
    ftrace_ignore_pid from current tr to filter tasks.  But it misses to
    delete the probe when removing an instance so that it can cause a crash
    due to the invalid tr pointer (use-after-free).
    
    This is easily reproducible with the following:
    
      # cd /sys/kernel/debug/tracing
      # mkdir instances/buggy
      # echo $$ > instances/buggy/set_ftrace_pid
      # rmdir instances/buggy
    
      ============================================================================
      BUG: KASAN: use-after-free in ftrace_filter_pid_sched_switch_probe+0x3d/0x90
      Read of size 8 by task kworker/0:1/17
      CPU: 0 PID: 17 Comm: kworker/0:1 Tainted: G    B           4.11.0-rc3  #198
      Call Trace:
       dump_stack+0x68/0x9f
       kasan_object_err+0x21/0x70
       kasan_report.part.1+0x22b/0x500
       ? ftrace_filter_pid_sched_switch_probe+0x3d/0x90
       kasan_report+0x25/0x30
       __asan_load8+0x5e/0x70
       ftrace_filter_pid_sched_switch_probe+0x3d/0x90
       ? fpid_start+0x130/0x130
       __schedule+0x571/0xce0
       ...
    
    To fix it, use ftrace_clear_pids() to unregister the probe.  As
    instance_rmdir() already updated ftrace codes, it can just free the
    filter safely.
    
    Link: http://lkml.kernel.org/r/20170417024430.21194-2-namhyung@kernel.org
    
    Fixes: 0c8916c34203 ("tracing: Add rmdir to remove multibuffer instances")
    Cc: Ingo Molnar <mingo@kernel.org>
    Reviewed-by: Masami Hiramatsu <mhiramat@kernel.org>
    Signed-off-by: Namhyung Kim <namhyung@kernel.org>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 58bc856c41fb7e986f6bcc70107d5f7efa529d3b
Author: Minchan Kim <minchan@kernel.org>
Date:   Thu Apr 13 14:56:37 2017 -0700

    zram: do not use copy_page with non-page aligned address
    
    commit d72e9a7a93e4f8e9e52491921d99e0c8aa89eb4e upstream.
    
    The copy_page is optimized memcpy for page-alinged address.  If it is
    used with non-page aligned address, it can corrupt memory which means
    system corruption.  With zram, it can happen with
    
    1. 64K architecture
    2. partial IO
    3. slub debug
    
    Partial IO need to allocate a page and zram allocates it via kmalloc.
    With slub debug, kmalloc(PAGE_SIZE) doesn't return page-size aligned
    address.  And finally, copy_page(mem, cmem) corrupts memory.
    
    So, this patch changes it to memcpy.
    
    Actuaully, we don't need to change zram_bvec_write part because zsmalloc
    returns page-aligned address in case of PAGE_SIZE class but it's not
    good to rely on the internal of zsmalloc.
    
    Note:
     When this patch is merged to stable, clear_page should be fixed, too.
     Unfortunately, recent zram removes it by "same page merge" feature so
     it's hard to backport this patch to -stable tree.
    
    I will handle it when I receive the mail from stable tree maintainer to
    merge this patch to backport.
    
    Fixes: 42e99bd ("zram: optimize memory operations with clear_page()/copy_page()")
    Link: http://lkml.kernel.org/r/1492042622-12074-2-git-send-email-minchan@kernel.org
    Signed-off-by: Minchan Kim <minchan@kernel.org>
    Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9bf69094c2ad71829ae489284a9bb0f1d6a251a8
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Tue Apr 18 16:16:57 2017 +0200

    Revert "MIPS: Lantiq: Fix cascaded IRQ setup"
    
    This reverts commit b576c58331340c87bcf61f1205003a8fdffdff24 which is
    commit 6c356eda225e3ee134ed4176b9ae3a76f793f4dd upstream.
    
    It shouldn't have been included in a stable release.
    
    Reported-by: Amit Pundir <amit.pundir@linaro.org>
    Cc: Felix Fietkau <nbd@nbd.name>
    Cc: John Crispin <john@phrozen.org>
    Cc: James Hogan <james.hogan@imgtec.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1cb293ab023642bc7e37e5a3b3bc7c125b93d08e
Author: Max Bires <jbires@google.com>
Date:   Tue Jan 3 08:18:07 2017 -0800

    char: lack of bool string made CONFIG_DEVPORT always on
    
    commit f2cfa58b136e4b06a9b9db7af5ef62fbb5992f62 upstream.
    
    Without a bool string present, using "# CONFIG_DEVPORT is not set" in
    defconfig files would not actually unset devport. This esnured that
    /dev/port was always on, but there are reasons a user may wish to
    disable it (smaller kernel, attack surface reduction) if it's not being
    used. Adding a message here in order to make this user visible.
    
    Signed-off-by: Max Bires <jbires@google.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ebe4deab5c805a7301e6967d984d01bb8ff58c78
Author: Min He <min.he@intel.com>
Date:   Thu Apr 6 11:01:45 2017 +0800

    drm/i915/gvt: set the correct default value of CTX STATUS PTR
    
    commit a34f83639490a5cc11a9d5c1b3773d4b6eb69a9e upstream.
    
    Fix wrong initial csb read pointer value. This fixes the random
    engine timeout issue in guest when guest boots up.
    
    Fixes: 8453d674ae7e ("drm/i915/gvt: vGPU execlist virtualization")
    Signed-off-by: Min He <min.he@intel.com>
    Signed-off-by: Zhenyu Wang <zhenyuw@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4bf7df7b3bd7b336280a938bf23c108e0bc52579
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Fri Apr 14 17:45:45 2017 -0400

    ftrace: Fix removing of second function probe
    
    commit 82cc4fc2e70ec5baeff8f776f2773abc8b2cc0ae upstream.
    
    When two function probes are added to set_ftrace_filter, and then one of
    them is removed, the update to the function locations is not performed, and
    the record keeping of the function states are corrupted, and causes an
    ftrace_bug() to occur.
    
    This is easily reproducable by adding two probes, removing one, and then
    adding it back again.
    
     # cd /sys/kernel/debug/tracing
     # echo schedule:traceoff > set_ftrace_filter
     # echo do_IRQ:traceoff > set_ftrace_filter
     # echo \!do_IRQ:traceoff > /debug/tracing/set_ftrace_filter
     # echo do_IRQ:traceoff > set_ftrace_filter
    
    Causes:
     ------------[ cut here ]------------
     WARNING: CPU: 2 PID: 1098 at kernel/trace/ftrace.c:2369 ftrace_get_addr_curr+0x143/0x220
     Modules linked in: [...]
     CPU: 2 PID: 1098 Comm: bash Not tainted 4.10.0-test+ #405
     Hardware name: Hewlett-Packard HP Compaq Pro 6300 SFF/339A, BIOS K01 v02.05 05/07/2012
     Call Trace:
      dump_stack+0x68/0x9f
      __warn+0x111/0x130
      ? trace_irq_work_interrupt+0xa0/0xa0
      warn_slowpath_null+0x1d/0x20
      ftrace_get_addr_curr+0x143/0x220
      ? __fentry__+0x10/0x10
      ftrace_replace_code+0xe3/0x4f0
      ? ftrace_int3_handler+0x90/0x90
      ? printk+0x99/0xb5
      ? 0xffffffff81000000
      ftrace_modify_all_code+0x97/0x110
      arch_ftrace_update_code+0x10/0x20
      ftrace_run_update_code+0x1c/0x60
      ftrace_run_modify_code.isra.48.constprop.62+0x8e/0xd0
      register_ftrace_function_probe+0x4b6/0x590
      ? ftrace_startup+0x310/0x310
      ? debug_lockdep_rcu_enabled.part.4+0x1a/0x30
      ? update_stack_state+0x88/0x110
      ? ftrace_regex_write.isra.43.part.44+0x1d3/0x320
      ? preempt_count_sub+0x18/0xd0
      ? mutex_lock_nested+0x104/0x800
      ? ftrace_regex_write.isra.43.part.44+0x1d3/0x320
      ? __unwind_start+0x1c0/0x1c0
      ? _mutex_lock_nest_lock+0x800/0x800
      ftrace_trace_probe_callback.isra.3+0xc0/0x130
      ? func_set_flag+0xe0/0xe0
      ? __lock_acquire+0x642/0x1790
      ? __might_fault+0x1e/0x20
      ? trace_get_user+0x398/0x470
      ? strcmp+0x35/0x60
      ftrace_trace_onoff_callback+0x48/0x70
      ftrace_regex_write.isra.43.part.44+0x251/0x320
      ? match_records+0x420/0x420
      ftrace_filter_write+0x2b/0x30
      __vfs_write+0xd7/0x330
      ? do_loop_readv_writev+0x120/0x120
      ? locks_remove_posix+0x90/0x2f0
      ? do_lock_file_wait+0x160/0x160
      ? __lock_is_held+0x93/0x100
      ? rcu_read_lock_sched_held+0x5c/0xb0
      ? preempt_count_sub+0x18/0xd0
      ? __sb_start_write+0x10a/0x230
      ? vfs_write+0x222/0x240
      vfs_write+0xef/0x240
      SyS_write+0xab/0x130
      ? SyS_read+0x130/0x130
      ? trace_hardirqs_on_caller+0x182/0x280
      ? trace_hardirqs_on_thunk+0x1a/0x1c
      entry_SYSCALL_64_fastpath+0x18/0xad
     RIP: 0033:0x7fe61c157c30
     RSP: 002b:00007ffe87890258 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
     RAX: ffffffffffffffda RBX: ffffffff8114a410 RCX: 00007fe61c157c30
     RDX: 0000000000000010 RSI: 000055814798f5e0 RDI: 0000000000000001
     RBP: ffff8800c9027f98 R08: 00007fe61c422740 R09: 00007fe61ca53700
     R10: 0000000000000073 R11: 0000000000000246 R12: 0000558147a36400
     R13: 00007ffe8788f160 R14: 0000000000000024 R15: 00007ffe8788f15c
      ? trace_hardirqs_off_caller+0xc0/0x110
     ---[ end trace 99fa09b3d9869c2c ]---
     Bad trampoline accounting at: ffffffff81cc3b00 (do_IRQ+0x0/0x150)
    
    Fixes: 59df055f1991 ("ftrace: trace different functions with a different tracer")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b35ab51a0b4c636487f4dced18e4b08369d6620
Author: Tyler Baker <tyler.baker@linaro.org>
Date:   Thu Apr 13 15:27:31 2017 -0700

    irqchip/irq-imx-gpcv2: Fix spinlock initialization
    
    commit 75eb5e1e7b4edbc8e8f930de59004d21cb46961f upstream.
    
    The raw_spinlock in the IMX GPCV2 interupt chip is not initialized before
    usage. That results in a lockdep splat:
    
      INFO: trying to register non-static key.
      the code is fine but needs lockdep annotation.
      turning off the locking correctness validator.
    
    Add the missing raw_spin_lock_init() to the setup code.
    
    Fixes: e324c4dc4a59 ("irqchip/imx-gpcv2: IMX GPCv2 driver for wakeup sources")
    Signed-off-by: Tyler Baker <tyler.baker@linaro.org>
    Reviewed-by: Fabio Estevam <fabio.estevam@nxp.com>
    Cc: jason@lakedaemon.net
    Cc: marc.zyngier@arm.com
    Cc: shawnguo@kernel.org
    Cc: andrew.smirnov@gmail.com
    Cc: linux-arm-kernel@lists.infradead.org
    Link: http://lkml.kernel.org/r/20170413222731.5917-1-tyler.baker@linaro.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b648679070a93462f7171d8d0e6e620f5bb96cf3
Author: Chen Yu <yu.c.chen@intel.com>
Date:   Sun Apr 9 13:45:16 2017 +0800

    cpufreq: Bring CPUs up even if cpufreq_online() failed
    
    commit c4a3fa261b16858416f1fd7db03a33d7ef5fc0b3 upstream.
    
    There is a report that after commit 27622b061eb4 ("cpufreq: Convert
    to hotplug state machine"), the normal CPU offline/online cycle
    fails on some platforms.
    
    According to the ftrace result, this problem was triggered on
    platforms using acpi-cpufreq as the default cpufreq driver,
    and due to the lack of some ACPI freq method (eg. _PCT),
    cpufreq_online() failed and returned a negative value, so the CPU
    hotplug state machine rolled back the CPU online process.  Actually,
    from the user's perspective, the failure of cpufreq_online() should
    not prevent that CPU from being brought up, although cpufreq might
    not work on that CPU.
    
    BTW, during system startup cpufreq_online() is not invoked via CPU
    online but by the cpufreq device creation process, so the APs can be
    brought up even though cpufreq_online() fails in that stage.
    
    This patch ignores the return value of cpufreq_online/offline() and
    lets the cpufreq framework deal with the failure.  cpufreq_online()
    itself will do a proper rollback in that case and if _PCT is missing,
    the ACPI cpufreq driver will print a warning if the corresponding
    debug options have been enabled.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=194581
    Fixes: 27622b061eb4 ("cpufreq: Convert to hotplug state machine")
    Reported-and-tested-by: Tomasz Maciej Nowak <tmn505@gmail.com>
    Signed-off-by: Chen Yu <yu.c.chen@intel.com>
    Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 26052e29d6a262f2d77a3a4307f39517d342b60c
Author: David Wu <david.wu@rock-chips.com>
Date:   Wed Mar 1 19:10:55 2017 +0800

    pwm: rockchip: State of PWM clock should synchronize with PWM enabled state
    
    commit a900152b5c29aea8134cc7a4c5db25552b3cd8f7 upstream.
    
    If the PWM was not enabled at U-Boot loader, PWM could not work for
    clock always disabled at PWM driver. The PWM clock is enabled at
    beginning of pwm_apply(), but disabled at end of pwm_apply().
    
    If the PWM was enabled at U-Boot loader, PWM clock is always enabled
    unless closed by ATF. The pwm-backlight might turn off the power at
    early suspend, should disable PWM clock for saving power consume.
    
    It is important to provide opportunity to enable/disable clock at PWM
    driver, the PWM consumer should ensure correct order to call PWM enable
    and disable, and PWM driver ensure state of PWM clock synchronized with
    PWM enabled state.
    
    Fixes: 2bf1c98aa5a4 ("pwm: rockchip: Add support for atomic update")
    Signed-off-by: David Wu <david.wu@rock-chips.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Thierry Reding <thierry.reding@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 96b121b506836dd44408cbe7886def7e584bad57
Author: Markus Marb <markus@marb.org>
Date:   Fri Mar 17 23:14:47 2017 +0100

    can: ifi: use correct register to read rx status
    
    commit 57c1d4c33e8f7ec90976d79127059c1919cc0651 upstream.
    
    The incorrect offset was used when trying to read the RXSTCMD register.
    
    Signed-off-by: Markus Marb <markus@marb.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5b750d3c56e378db816bbe89c5d72b912a0849f2
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Apr 7 12:25:52 2017 -0700

    libnvdimm: band aid btt vs clear poison locking
    
    commit 4aa5615e080a9855e607accc75b07ab79b252dde upstream.
    
    The following warning results from holding a lane spinlock,
    preempt_disable(), or the btt map spinlock and then trying to take the
    reconfig_mutex to walk the poison list and potentially add new entries.
    
     BUG: sleeping function called from invalid context at kernel/locking/mutex.c:747
     in_atomic(): 1, irqs_disabled(): 0, pid: 17159, name: dd
     [..]
     Call Trace:
      dump_stack+0x85/0xc8
      ___might_sleep+0x184/0x250
      __might_sleep+0x4a/0x90
      __mutex_lock+0x58/0x9b0
      ? nvdimm_bus_lock+0x21/0x30 [libnvdimm]
      ? __nvdimm_bus_badblocks_clear+0x2f/0x60 [libnvdimm]
      ? acpi_nfit_forget_poison+0x79/0x80 [nfit]
      ? _raw_spin_unlock+0x27/0x40
      mutex_lock_nested+0x1b/0x20
      nvdimm_bus_lock+0x21/0x30 [libnvdimm]
      nvdimm_forget_poison+0x25/0x50 [libnvdimm]
      nvdimm_clear_poison+0x106/0x140 [libnvdimm]
      nsio_rw_bytes+0x164/0x270 [libnvdimm]
      btt_write_pg+0x1de/0x3e0 [nd_btt]
      ? blk_queue_enter+0x30/0x290
      btt_make_request+0x11a/0x310 [nd_btt]
      ? blk_queue_enter+0xb7/0x290
      ? blk_queue_enter+0x30/0x290
      generic_make_request+0x118/0x3b0
    
    As a minimal fix, disable error clearing when the BTT is enabled for the
    namespace. For the final fix a larger rework of the poison list locking
    is needed.
    
    Note that this is not a problem in the blk case since that path never
    calls nvdimm_clear_poison().
    
    Fixes: 82bf1037f2ca ("libnvdimm: check and clear poison before writing to pmem")
    Cc: Dave Jiang <dave.jiang@intel.com>
    [jeff: dynamically disable error clearing in the btt case]
    Suggested-by: Jeff Moyer <jmoyer@redhat.com>
    Reviewed-by: Jeff Moyer <jmoyer@redhat.com>
    Reported-by: Vishal Verma <vishal.l.verma@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f0f306710e243d2b0bb5a84b2c3c9e35762a4d31
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Fri Apr 7 09:47:24 2017 -0700

    libnvdimm: fix reconfig_mutex, mmap_sem, and jbd2_handle lockdep splat
    
    commit 0beb2012a1722633515c8aaa263c73449636c893 upstream.
    
    Holding the reconfig_mutex over a potential userspace fault sets up a
    lockdep dependency chain between filesystem-DAX and the libnvdimm ioctl
    path. Move the user access outside of the lock.
    
         [ INFO: possible circular locking dependency detected ]
         4.11.0-rc3+ #13 Tainted: G        W  O
         -------------------------------------------------------
         fallocate/16656 is trying to acquire lock:
          (&nvdimm_bus->reconfig_mutex){+.+.+.}, at: [<ffffffffa00080b1>] nvdimm_bus_lock+0x21/0x30 [libnvdimm]
         but task is already holding lock:
          (jbd2_handle){++++..}, at: [<ffffffff813b4944>] start_this_handle+0x104/0x460
    
        which lock already depends on the new lock.
    
        the existing dependency chain (in reverse order) is:
    
        -> #2 (jbd2_handle){++++..}:
                lock_acquire+0xbd/0x200
                start_this_handle+0x16a/0x460
                jbd2__journal_start+0xe9/0x2d0
                __ext4_journal_start_sb+0x89/0x1c0
                ext4_dirty_inode+0x32/0x70
                __mark_inode_dirty+0x235/0x670
                generic_update_time+0x87/0xd0
                touch_atime+0xa9/0xd0
                ext4_file_mmap+0x90/0xb0
                mmap_region+0x370/0x5b0
                do_mmap+0x415/0x4f0
                vm_mmap_pgoff+0xd7/0x120
                SyS_mmap_pgoff+0x1c5/0x290
                SyS_mmap+0x22/0x30
                entry_SYSCALL_64_fastpath+0x1f/0xc2
    
        -> #1 (&mm->mmap_sem){++++++}:
                lock_acquire+0xbd/0x200
                __might_fault+0x70/0xa0
                __nd_ioctl+0x683/0x720 [libnvdimm]
                nvdimm_ioctl+0x8b/0xe0 [libnvdimm]
                do_vfs_ioctl+0xa8/0x740
                SyS_ioctl+0x79/0x90
                do_syscall_64+0x6c/0x200
                return_from_SYSCALL_64+0x0/0x7a
    
        -> #0 (&nvdimm_bus->reconfig_mutex){+.+.+.}:
                __lock_acquire+0x16b6/0x1730
                lock_acquire+0xbd/0x200
                __mutex_lock+0x88/0x9b0
                mutex_lock_nested+0x1b/0x20
                nvdimm_bus_lock+0x21/0x30 [libnvdimm]
                nvdimm_forget_poison+0x25/0x50 [libnvdimm]
                nvdimm_clear_poison+0x106/0x140 [libnvdimm]
                pmem_do_bvec+0x1c2/0x2b0 [nd_pmem]
                pmem_make_request+0xf9/0x270 [nd_pmem]
                generic_make_request+0x118/0x3b0
                submit_bio+0x75/0x150
    
    Fixes: 62232e45f4a2 ("libnvdimm: control (ioctl) messages for nvdimm_bus and nvdimm devices")
    Cc: Dave Jiang <dave.jiang@intel.com>
    Reported-by: Vishal Verma <vishal.l.verma@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e0d47228949e584c5be29b84dfe75bcfafcf8e61
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Tue Apr 4 15:08:36 2017 -0700

    libnvdimm: fix blk free space accounting
    
    commit fe514739d8538783749d3ce72f78e5a999ea5668 upstream.
    
    Commit a1f3e4d6a0c3 "libnvdimm, region: update nd_region_available_dpa()
    for multi-pmem support" reworked blk dpa (DIMM Physical Address)
    accounting to comprehend multiple pmem namespace allocations aliasing
    with a given blk-dpa range.
    
    The following call trace is a result of failing to account for allocated
    blk capacity.
    
     WARNING: CPU: 1 PID: 2433 at tools/testing/nvdimm/../../../drivers/nvdimm/names
    4 size_store+0x6f3/0x930 [libnvdimm]
     nd_region region5: allocation underrun: 0x0 of 0x1000000 bytes
     [..]
     Call Trace:
      dump_stack+0x86/0xc3
      __warn+0xcb/0xf0
      warn_slowpath_fmt+0x5f/0x80
      size_store+0x6f3/0x930 [libnvdimm]
      dev_attr_store+0x18/0x30
    
    If a given blk-dpa allocation does not alias with any pmem ranges then
    the full allocation should be accounted as busy space, not the size of
    the current pmem contribution to the region.
    
    The thinkos that led to this confusion was not realizing that the struct
    resource management is already guaranteeing no collisions between pmem
    allocations and blk allocations on the same dimm. Also, we do not try to
    support blk allocations in aliased pmem holes.
    
    This patch also fixes a case where the available blk goes negative.
    
    Fixes: a1f3e4d6a0c3 ("libnvdimm, region: update nd_region_available_dpa() for multi-pmem support").
    Reported-by: Dariusz Dokupil <dariusz.dokupil@intel.com>
    Reported-by: Dave Jiang <dave.jiang@intel.com>
    Reported-by: Vishal Verma <vishal.l.verma@intel.com>
    Tested-by: Dave Jiang <dave.jiang@intel.com>
    Tested-by: Vishal Verma <vishal.l.verma@intel.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 66481ca0750da4a019d4aa88c00f72032e3ccc34
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Feb 17 20:16:34 2017 -0500

    make skb_copy_datagram_msg() et.al. preserve ->msg_iter on error
    
    commit 3278682123811dd8ef07de5eb701fc4548fcebf2 upstream.
    
    Fixes the mess observed in e.g. rsync over a noisy link we'd been
    seeing since last Summer.  What happens is that we copy part of
    a datagram before noticing a checksum mismatch.  Datagram will be
    resent, all right, but we want the next try go into the same place,
    not after it...
    
    All this family of primitives (copy/checksum and copy a datagram
    into destination) is "all or nothing" sort of interface - either
    we get 0 (meaning that copy had been successful) or we get an
    error (and no way to tell how much had been copied before we ran
    into whatever error it had been).  Make all of them leave iterator
    unadvanced in case of errors - all callers must be able to cope
    with that (an error might've been caught before the iterator had
    been advanced), it costs very little to arrange, it's safer for
    callers and actually fixes at least one bug in said callers.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a99a9ff2374ac30fe87c820fca3401d3275f2b79
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Feb 17 18:42:24 2017 -0500

    new privimitive: iov_iter_revert()
    
    commit 27c0e3748e41ca79171ffa3e97415a20af6facd0 upstream.
    
    opposite to iov_iter_advance(); the caller is responsible for never
    using it to move back past the initial position.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 939707c50352950243e7fd6e7e088af0db6d51e2
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Apr 7 17:28:23 2017 +0200

    xen, fbfront: fix connecting to backend
    
    commit 9121b15b5628b38b4695282dc18c553440e0f79b upstream.
    
    Connecting to the backend isn't working reliably in xen-fbfront: in
    case XenbusStateInitWait of the backend has been missed the backend
    transition to XenbusStateConnected will trigger the connected state
    only without doing the actions required when the backend has
    connected.
    
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 22113847cd117b26bd14316f735af79fc37cb6be
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Mon Mar 27 16:12:43 2017 -0700

    target: Avoid mappedlun symlink creation during lun shutdown
    
    commit 49cb77e297dc611a1b795cfeb79452b3002bd331 upstream.
    
    This patch closes a race between se_lun deletion during configfs
    unlink in target_fabric_port_unlink() -> core_dev_del_lun()
    -> core_tpg_remove_lun(), when transport_clear_lun_ref() blocks
    waiting for percpu_ref RCU grace period to finish, but a new
    NodeACL mappedlun is added before the RCU grace period has
    completed.
    
    This can happen in target_fabric_mappedlun_link() because it
    only checks for se_lun->lun_se_dev, which is not cleared until
    after transport_clear_lun_ref() percpu_ref RCU grace period
    finishes.
    
    This bug originally manifested as NULL pointer dereference
    OOPsen in target_stat_scsi_att_intr_port_show_attr_dev() on
    v4.1.y code, because it dereferences lun->lun_se_dev without
    a explicit NULL pointer check.
    
    In post v4.1 code with target-core RCU conversion, the code
    in target_stat_scsi_att_intr_port_show_attr_dev() no longer
    uses se_lun->lun_se_dev, but the same race still exists.
    
    To address the bug, go ahead and set se_lun>lun_shutdown as
    early as possible in core_tpg_remove_lun(), and ensure new
    NodeACL mappedlun creation in target_fabric_mappedlun_link()
    fails during se_lun shutdown.
    
    Reported-by: James Shen <jcs@datera.io>
    Cc: James Shen <jcs@datera.io>
    Tested-by: James Shen <jcs@datera.io>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 53204334cca0ac11e58b03365b16c435694c6770
Author: Martin K. Petersen <martin.petersen@oracle.com>
Date:   Tue Apr 4 10:42:30 2017 -0400

    scsi: sd: Fix capacity calculation with 32-bit sector_t
    
    commit 7c856152cb92f8eee2df29ef325a1b1f43161aff upstream.
    
    We previously made sure that the reported disk capacity was less than
    0xffffffff blocks when the kernel was not compiled with large sector_t
    support (CONFIG_LBDAF). However, this check assumed that the capacity
    was reported in units of 512 bytes.
    
    Add a sanity check function to ensure that we only enable disks if the
    entire reported capacity can be expressed in terms of sector_t.
    
    Reported-by: Steve Magnani <steve.magnani@digidescorp.com>
    Cc: Bart Van Assche <Bart.VanAssche@sandisk.com>
    Reviewed-by: Bart Van Assche <Bart.VanAssche@sandisk.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 24c01b369765d88ba50206a3fd02790d98e5c57c
Author: Sawan Chandak <sawan.chandak@cavium.com>
Date:   Fri Mar 31 14:37:03 2017 -0700

    scsi: qla2xxx: Add fix to read correct register value for ISP82xx.
    
    commit bf6061b17a8d47ef0d9344d3ef576a4ff0edf793 upstream.
    
    Add fix to read correct register value for ISP82xx, during check for
    register disconnect.ISP82xx has different base register.
    
    Fixes: a465537ad1a4 ("qla2xxx: Disable the adapter and skip error recovery in case of register disconnect")
    Signed-off-by: Sawan Chandak <sawan.chandak@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8b30ed56fa89c14f9850438b48fe8a3fa0005e47
Author: Fam Zheng <famz@redhat.com>
Date:   Tue Mar 28 12:41:26 2017 +0800

    scsi: sd: Consider max_xfer_blocks if opt_xfer_blocks is unusable
    
    commit 6780414519f91c2a84da9baa963a940ac916f803 upstream.
    
    If device reports a small max_xfer_blocks and a zero opt_xfer_blocks, we
    end up using BLK_DEF_MAX_SECTORS, which is wrong and r/w of that size
    may get error.
    
    [mkp: tweaked to avoid setting rw_max twice and added typecast]
    
    Fixes: ca369d51b3e ("block/sd: Fix device-imposed transfer length limits")
    Signed-off-by: Fam Zheng <famz@redhat.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 01fb9440938af4083e4883a3190980fee8fa7e00
Author: Martin K. Petersen <martin.petersen@oracle.com>
Date:   Fri Mar 17 08:47:14 2017 -0400

    scsi: sr: Sanity check returned mode data
    
    commit a00a7862513089f17209b732f230922f1942e0b9 upstream.
    
    Kefeng Wang discovered that old versions of the QEMU CD driver would
    return mangled mode data causing us to walk off the end of the buffer in
    an attempt to parse it. Sanity check the returned mode sense data.
    
    Reported-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Tested-by: Kefeng Wang <wangkefeng.wang@huawei.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c8270f29214cbbaf4feb2b784ddc75f8d3866eaa
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Sun Apr 2 13:36:44 2017 -0700

    iscsi-target: Drop work-around for legacy GlobalSAN initiator
    
    commit 1c99de981f30b3e7868b8d20ce5479fa1c0fea46 upstream.
    
    Once upon a time back in 2009, a work-around was added to support
    the GlobalSAN iSCSI initiator v3.3 for MacOSX, which during login
    did not propose nor respond to MaxBurstLength, FirstBurstLength,
    DefaultTime2Wait and DefaultTime2Retain keys.
    
    The work-around in iscsi_check_proposer_for_optional_reply()
    allowed the missing keys to be proposed, but did not require
    waiting for a response before moving to full feature phase
    operation.  This allowed GlobalSAN v3.3 to work out-of-the
    box, and for many years we didn't run into login interopt
    issues with any other initiators..
    
    Until recently, when Martin tried a QLogic 57840S iSCSI Offload
    HBA on Windows 2016 which completed login, but subsequently
    failed with:
    
        Got unknown iSCSI OpCode: 0x43
    
    The issue was QLogic MSFT side did not propose DefaultTime2Wait +
    DefaultTime2Retain, so LIO proposes them itself, and immediately
    transitions to full feature phase because of the GlobalSAN hack.
    However, the QLogic MSFT side still attempts to respond to
    DefaultTime2Retain + DefaultTime2Wait, even though LIO has set
    ISCSI_FLAG_LOGIN_NEXT_STAGE3 + ISCSI_FLAG_LOGIN_TRANSIT
    in last login response.
    
    So while the QLogic MSFT side should have been proposing these
    two keys to start, it was doing the correct thing per RFC-3720
    attempting to respond to proposed keys before transitioning to
    full feature phase.
    
    All that said, recent versions of GlobalSAN iSCSI (v5.3.0.541)
    does correctly propose the four keys during login, making the
    original work-around moot.
    
    So in order to allow QLogic MSFT to run unmodified as-is, go
    ahead and drop this long standing work-around.
    
    Reported-by: Martin Svec <martin.svec@zoner.cz>
    Cc: Martin Svec <martin.svec@zoner.cz>
    Cc: Himanshu Madhani <Himanshu.Madhani@cavium.com>
    Cc: Arun Easi <arun.easi@cavium.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 510152205d41af106d432655fc7ff77f5182eaaa
Author: Nicholas Bellinger <nab@linux-iscsi.org>
Date:   Thu Mar 23 17:19:24 2017 -0700

    iscsi-target: Fix TMR reference leak during session shutdown
    
    commit efb2ea770bb3b0f40007530bc8b0c22f36e1c5eb upstream.
    
    This patch fixes a iscsi-target specific TMR reference leak
    during session shutdown, that could occur when a TMR was
    quiesced before the hand-off back to iscsi-target code
    via transport_cmd_check_stop_to_fabric().
    
    The reference leak happens because iscsit_free_cmd() was
    incorrectly skipping the final target_put_sess_cmd() for
    TMRs when transport_generic_free_cmd() returned zero because
    the se_cmd->cmd_kref did not reach zero, due to the missing
    se_cmd assignment in original code.
    
    The result was iscsi_cmd and it's associated se_cmd memory
    would be freed once se_sess->sess_cmd_map where released,
    but the associated se_tmr_req was leaked and remained part
    of se_device->dev_tmr_list.
    
    This bug would manfiest itself as kernel paging request
    OOPsen in core_tmr_lun_reset(), when a left-over se_tmr_req
    attempted to dereference it's se_cmd pointer that had
    already been released during normal session shutdown.
    
    To address this bug, go ahead and treat ISCSI_OP_SCSI_CMD
    and ISCSI_OP_SCSI_TMFUNC the same when there is an extra
    se_cmd->cmd_kref to drop in iscsit_free_cmd(), and use
    op_scsi to signal __iscsit_free_cmd() when the former
    needs to clear any further iscsi related I/O state.
    
    Reported-by: Rob Millner <rlm@daterainc.com>
    Cc: Rob Millner <rlm@daterainc.com>
    Reported-by: Chu Yuan Lin <cyl@datera.io>
    Cc: Chu Yuan Lin <cyl@datera.io>
    Tested-by: Chu Yuan Lin <cyl@datera.io>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c100de410c1e09d558f5e2b7af8330a55832b177
Author: Ard Biesheuvel <ardb@kernel.org>
Date:   Tue Apr 4 16:27:44 2017 +0100

    efi/fb: Avoid reconfiguration of BAR that covers the framebuffer
    
    commit 55d728a40d368ba80443be85c02e641fc9082a3f upstream.
    
    On UEFI systems, the PCI subsystem is enumerated by the firmware,
    and if a graphical framebuffer is exposed via a PCI device, its base
    address and size are exposed to the OS via the Graphics Output
    Protocol (GOP).
    
    On arm64 PCI systems, the entire PCI hierarchy is reconfigured from
    scratch at boot. This may result in the GOP framebuffer address to
    become stale, if the BAR covering the framebuffer is modified. This
    will cause the framebuffer to become unresponsive, and may in some
    cases result in unpredictable behavior if the range is reassigned to
    another device.
    
    So add a non-x86 quirk to the EFI fb driver to find the BAR associated
    with the GOP base address, and claim the BAR resource so that the PCI
    core will not move it.
    
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Jones <pjones@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: leif.lindholm@linaro.org
    Cc: linux-efi@vger.kernel.org
    Cc: lorenzo.pieralisi@arm.com
    Fixes: 9822504c1fa5 ("efifb: Enable the efi-framebuffer platform driver ...")
    Link: http://lkml.kernel.org/r/20170404152744.26687-3-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6b8a0080915d7eb9969a08bad2adfaf8144a11b5
Author: Cohen, Eugene <eugene@hp.com>
Date:   Tue Apr 4 16:27:43 2017 +0100

    efi/libstub: Skip GOP with PIXEL_BLT_ONLY format
    
    commit 540f4c0e894f7e46a66dfa424b16424cbdc12c38 upstream.
    
    The UEFI Specification permits Graphics Output Protocol (GOP) instances
    without direct framebuffer access. This is indicated in the Mode structure
    with a PixelFormat enumeration value of PIXEL_BLT_ONLY. Given that the
    kernel does not know how to drive a Blt() only framebuffer (which is only
    permitted before ExitBootServices() anyway), we should disregard such
    framebuffers when looking for a GOP instance that is suitable for use as
    the boot console.
    
    So modify the EFI GOP initialization to not use a PIXEL_BLT_ONLY instance,
    preventing attempts later in boot to use an invalid screen_info.lfb_base
    address.
    
    Signed-off-by: Eugene Cohen <eugene@hp.com>
    [ Moved the Blt() only check into the loop and clarified that Blt() only GOPs are unusable by the kernel. ]
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: leif.lindholm@linaro.org
    Cc: linux-efi@vger.kernel.org
    Cc: lorenzo.pieralisi@arm.com
    Fixes: 9822504c1fa5 ("efifb: Enable the efi-framebuffer platform driver ...")
    Link: http://lkml.kernel.org/r/20170404152744.26687-2-ard.biesheuvel@linaro.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit ca3e0b6d6b25a605a99c3dd2b5f3c2a06f00c748
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Fri Apr 14 14:15:20 2017 -0400

    parisc: fix bugs in pa_memcpy
    
    commit 409c1b250e30ad0e48b4d15d7319b4e18c046c4f upstream.
    
    The patch 554bfeceb8a22d448cd986fc9efce25e833278a1 ("parisc: Fix access
    fault handling in pa_memcpy()") reimplements the pa_memcpy function.
    Unfortunatelly, it makes the kernel unbootable. The crash happens in the
    function ide_complete_cmd where memcpy is called with the same source
    and destination address.
    
    This patch fixes a few bugs in pa_memcpy:
    
    * When jumping to .Lcopy_loop_16 for the first time, don't skip the
      instruction "ldi 31,t0" (this bug made the kernel unbootable)
    * Use the COND macro when comparing length, so that the comparison is
      64-bit (a theoretical issue, in case the length is greater than
      0xffffffff)
    * Don't use the COND macro after the "extru" instruction (the PA-RISC
      specification says that the upper 32-bits of extru result are undefined,
      although they are set to zero in practice)
    * Fix exception addresses in .Lcopy16_fault and .Lcopy8_fault
    * Rename .Lcopy_loop_4 to .Lcopy_loop_8 (so that it is consistent with
      .Lcopy8_fault)
    
    Fixes: 554bfeceb8a2 ("parisc: Fix access fault handling in pa_memcpy()")
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 87ad80ecdb5c91d1795e73c929b32aabd46ab5c1
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Tue Apr 11 00:23:42 2017 +0200

    ACPI / scan: Set the visited flag for all enumerated devices
    
    commit f406270bf73d71ea7b35ee3f7a08a44f6594c9b1 upstream.
    
    Commit 10c7e20b2ff3 (ACPI / scan: fix enumeration (visited) flags for
    bus rescans) attempted to fix a problem with ACPI-based enumerateion
    of I2C/SPI devices, but it forgot to ensure that the visited flag
    will be set for all of the other enumerated devices, so fix that.
    
    Fixes: 10c7e20b2ff3 (ACPI / scan: fix enumeration (visited) flags for bus rescans)
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=194885
    Reported-and-tested-by: Kevin Locke <kevin@kevinlocke.name>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 122c16ccc71b9db339fd94a638695b7c00aea066
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Mon Mar 27 21:53:38 2017 -0700

    acpi, nfit, libnvdimm: fix interleave set cookie calculation (64-bit comparison)
    
    commit b03b99a329a14b7302f37c3ea6da3848db41c8c5 upstream.
    
    While reviewing the -stable patch for commit 86ef58a4e35e "nfit,
    libnvdimm: fix interleave set cookie calculation" Ben noted:
    
        "This is returning an int, thus it's effectively doing a 32-bit
         comparison and not the 64-bit comparison you say is needed."
    
    Update the compare operation to be immune to this integer demotion problem.
    
    Cc: Nicholas Moulin <nicholas.w.moulin@linux.intel.com>
    Fixes: 86ef58a4e35e ("nfit, libnvdimm: fix interleave set cookie calculation")
    Reported-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 083d30d61a1aef4d28c7d6b273430de20e1c1efe
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Mon Apr 10 17:14:28 2017 +0200

    x86/vdso: Plug race between mapping and ELF header setup
    
    commit 6fdc6dd90272ce7e75d744f71535cfbd8d77da81 upstream.
    
    The vsyscall32 sysctl can racy against a concurrent fork when it switches
    from disabled to enabled:
    
        arch_setup_additional_pages()
            if (vdso32_enabled)
               --> No mapping
                                            sysctl.vsysscall32()
                                              --> vdso32_enabled = true
        create_elf_tables()
          ARCH_DLINFO_IA32
            if (vdso32_enabled) {
               --> Add VDSO entry with NULL pointer
    
    Make ARCH_DLINFO_IA32 check whether the VDSO mapping has been set up for
    the newly forked process or not.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Andy Lutomirski <luto@amacapital.net>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Mathias Krause <minipli@googlemail.com>
    Link: http://lkml.kernel.org/r/20170410151723.602367196@linutronix.de
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 90dc1120444f897c4017c38b943ebce0bc510e6d
Author: Mathias Krause <minipli@googlemail.com>
Date:   Mon Apr 10 17:14:27 2017 +0200

    x86/vdso: Ensure vdso32_enabled gets set to valid values only
    
    commit c06989da39cdb10604d572c8c7ea8c8c97f3c483 upstream.
    
    vdso_enabled can be set to arbitrary integer values via the kernel command
    line 'vdso32=' parameter or via 'sysctl abi.vsyscall32'.
    
    load_vdso32() only maps VDSO if vdso_enabled == 1, but ARCH_DLINFO_IA32
    merily checks for vdso_enabled != 0. As a consequence the AT_SYSINFO_EHDR
    auxiliary vector for the VDSO_ENTRY is emitted with a NULL pointer which
    causes a segfault when the application tries to use the VDSO.
    
    Restrict the valid arguments on the command line and the sysctl to 0 and 1.
    
    Fixes: b0b49f2673f0 ("x86, vdso: Remove compat vdso support")
    Signed-off-by: Mathias Krause <minipli@googlemail.com>
    Acked-by: Andy Lutomirski <luto@amacapital.net>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Roland McGrath <roland@redhat.com>
    Link: http://lkml.kernel.org/r/1491424561-7187-1-git-send-email-minipli@googlemail.com
    Link: http://lkml.kernel.org/r/20170410151723.518412863@linutronix.de
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b8cb11e01a7feb5a7136f4881324ebde1a57a2eb
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Thu Apr 6 09:04:31 2017 -0700

    x86, pmem: fix broken __copy_user_nocache cache-bypass assumptions
    
    commit 11e63f6d920d6f2dfd3cd421e939a4aec9a58dcd upstream.
    
    Before we rework the "pmem api" to stop abusing __copy_user_nocache()
    for memcpy_to_pmem() we need to fix cases where we may strand dirty data
    in the cpu cache. The problem occurs when copy_from_iter_pmem() is used
    for arbitrary data transfers from userspace. There is no guarantee that
    these transfers, performed by dax_iomap_actor(), will have aligned
    destinations or aligned transfer lengths. Backstop the usage
    __copy_user_nocache() with explicit cache management in these unaligned
    cases.
    
    Yes, copy_from_iter_pmem() is now too big for an inline, but addressing
    that is saved for a later patch that moves the entirety of the "pmem
    api" into the pmem driver directly.
    
    Fixes: 5de490daec8b ("pmem: add copy_from_iter_pmem() and clear_pmem()")
    Cc: <x86@kernel.org>
    Cc: Jan Kara <jack@suse.cz>
    Cc: Jeff Moyer <jmoyer@redhat.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Matthew Wilcox <mawilcox@microsoft.com>
    Reviewed-by: Ross Zwisler <ross.zwisler@linux.intel.com>
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1a99658f083d348102ec6d236d192cb5d59908d8
Author: Jiri Olsa <jolsa@kernel.org>
Date:   Tue Apr 11 09:14:46 2017 +0200

    x86/intel_rdt: Fix locking in rdtgroup_schemata_write()
    
    commit 7f00f388712b29005782bad7e4b25942620f3b9c upstream.
    
    The schemata lock is released before freeing the resource's temporary
    tmp_cbms allocation. That's racy versus another write which allocates and
    uses new temporary storage, resulting in memory leaks, freeing in use
    memory, double a free or any combination of those.
    
    Move the unlock after the release code.
    
    Fixes: 60ec2440c63d ("x86/intel_rdt: Add schemata file")
    Signed-off-by: Jiri Olsa <jolsa@kernel.org>
    Cc: Fenghua Yu <fenghua.yu@intel.com>
    Cc: Peter Zijlstra <a.p.zijlstra@chello.nl>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Shaohua Li <shli@fb.com>
    Link: http://lkml.kernel.org/r/20170411071446.15241-1-jolsa@kernel.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 565194a4205278d50529c70183acf4a218c95897
Author: Joerg Roedel <jroedel@suse.de>
Date:   Tue Apr 4 18:15:01 2017 +0200

    x86/signals: Fix lower/upper bound reporting in compat siginfo
    
    commit cfac6dfa42bddfa9711b20d486e521d1a41ab09f upstream.
    
    Put the right values from the original siginfo into the
    userspace compat-siginfo.
    
    This fixes the 32-bit MPX "tabletest" testcase on 64-bit kernels.
    
    Signed-off-by: Joerg Roedel <jroedel@suse.de>
    Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Dmitry Safonov <0x7f454c46@gmail.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: a4455082dc6f0 ('x86/signals: Add missing signal_compat code for x86 features')
    Link: http://lkml.kernel.org/r/1491322501-5054-1-git-send-email-joro@8bytes.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c6be568a2f244827f6d24150855dce6dfe8d0afb
Author: Omar Sandoval <osandov@fb.com>
Date:   Wed Apr 12 16:27:19 2017 +0100

    x86/efi: Don't try to reserve runtime regions
    
    commit 6f6266a561306e206e0e31a5038f029b6a7b1d89 upstream.
    
    Reserving a runtime region results in splitting the EFI memory
    descriptors for the runtime region. This results in runtime region
    descriptors with bogus memory mappings, leading to interesting crashes
    like the following during a kexec:
    
      general protection fault: 0000 [#1] SMP
      Modules linked in:
      CPU: 0 PID: 0 Comm: swapper/0 Not tainted 4.11.0-rc1 #53
      Hardware name: Wiwynn Leopard-Orv2/Leopard-DDR BW, BIOS LBM05   09/30/2016
      RIP: 0010:virt_efi_set_variable()
      ...
      Call Trace:
       efi_delete_dummy_variable()
       efi_enter_virtual_mode()
       start_kernel()
       ? set_init_arg()
       x86_64_start_reservations()
       x86_64_start_kernel()
       start_cpu()
      ...
      Kernel panic - not syncing: Fatal exception
    
    Runtime regions will not be freed and do not need to be reserved, so
    skip the memmap modification in this case.
    
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Matt Fleming <matt@codeblueprint.co.uk>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: Dave Young <dyoung@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Jones <pjones@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Fixes: 8e80632fb23f ("efi/esrt: Use efi_mem_reserve() and avoid a kmalloc()")
    Link: http://lkml.kernel.org/r/20170412152719.9779-2-matt@codeblueprint.co.uk
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4ff9e6c2d86bc7dfe12c6621fcb7a1caef8f5d74
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Tue Apr 11 10:10:28 2017 +0200

    perf/x86: Avoid exposing wrong/stale data in intel_pmu_lbr_read_32()
    
    commit f2200ac311302fcdca6556fd0c5127eab6c65a3e upstream.
    
    When the perf_branch_entry::{in_tx,abort,cycles} fields were added,
    intel_pmu_lbr_read_32() wasn't updated to initialize them.
    
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-kernel@vger.kernel.org
    Fixes: 135c5612c460 ("perf/x86/intel: Support Haswell/v4 LBR format")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 535adf24d1a79dd6d03a8a4af2fd16a1109df7b5
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Thu Apr 6 09:51:51 2017 +0200

    perf annotate s390: Fix perf annotate error -95 (4.10 regression)
    
    commit 3c1a427954399fd1bda1ee7e1b356f47b61cee74 upstream.
    
    since 4.10 perf annotate exits on s390 with an "unknown error -95".
    Turns out that commit 786c1b51844d ("perf annotate: Start supporting
    cross arch annotation") added a hard requirement for architecture
    support when objdump is used but only provided x86 and arm support.
    Meanwhile power was added so lets add s390 as well.
    
    While at it make sure to implement the branch and jump types.
    
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
    Cc: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: linux-s390 <linux-s390@vger.kernel.org>
    Fixes: 786c1b51844 "perf annotate: Start supporting cross arch annotation"
    Link: http://lkml.kernel.org/r/1491465112-45819-2-git-send-email-borntraeger@de.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7869b4078ba9125a406301a4e1c86d5335a43363
Author: Cameron Gutman <aicommander@gmail.com>
Date:   Mon Apr 10 20:44:25 2017 -0700

    Input: xpad - add support for Razer Wildcat gamepad
    
    commit 5376366886251e2f8f248704adb620a4bc4c0937 upstream.
    
    Signed-off-by: Cameron Gutman <aicommander@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3f17ee38a808129f93f8685e6e2c484bdecea25f
Author: Germano Percossi <germano.percossi@citrix.com>
Date:   Fri Apr 7 12:29:38 2017 +0100

    CIFS: store results of cifs_reopen_file to avoid infinite wait
    
    commit 1fa839b4986d648b907d117275869a0e46c324b9 upstream.
    
    This fixes Continuous Availability when errors during
    file reopen are encountered.
    
    cifs_user_readv and cifs_user_writev would wait for ever if
    results of cifs_reopen_file are not stored and for later inspection.
    
    In fact, results are checked and, in case of errors, a chain
    of function calls leading to reads and writes to be scheduled in
    a separate thread is skipped.
    These threads will wake up the corresponding waiters once reads
    and writes are done.
    
    However, given the return value is not stored, when rc is checked
    for errors a previous one (always zero) is inspected instead.
    This leads to pending reads/writes added to the list, making
    cifs_user_readv and cifs_user_writev wait for ever.
    
    Signed-off-by: Germano Percossi <germano.percossi@citrix.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6e9b6937a9230374378306e952f7f125359c5fa2
Author: Germano Percossi <germano.percossi@citrix.com>
Date:   Fri Apr 7 12:29:36 2017 +0100

    CIFS: reconnect thread reschedule itself
    
    commit 18ea43113f5b74a97dd4be9bddbac10d68b1a6ce upstream.
    
    In case of error, smb2_reconnect_server reschedule itself
    with a delay, to avoid being too aggressive.
    
    Signed-off-by: Germano Percossi <germano.percossi@citrix.com>
    Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
    Signed-off-by: Steve French <smfrench@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d38b12ab7b054912bf2df3d48810f305d2914632
Author: Michel Dänzer <michel.daenzer@amd.com>
Date:   Thu Mar 23 17:53:26 2017 +0900

    drm/fb-helper: Allow var->x/yres(_virtual) < fb->width/height again
    
    commit 12ffed96d4369f086261ba2ee734fa8c932d7f55 upstream.
    
    Otherwise this can also prevent modesets e.g. for switching VTs, when
    multiple monitors with different native resolutions are connected.
    
    The depths must match though, so keep the != test for that.
    
    Also update the DRM_DEBUG output to be slightly more accurate, this
    doesn't only affect requests from userspace.
    
    Bugzilla: https://bugs.freedesktop.org/99841
    Fixes: 865afb11949e ("drm/fb-helper: reject any changes to the fbdev")
    Signed-off-by: Michel Dänzer <michel.daenzer@amd.com>
    Reviewed-by: Daniel Stone <daniels@collabora.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: http://patchwork.freedesktop.org/patch/msgid/20170323085326.20185-1-michel@daenzer.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e97e515b744857377b328d7aaa1a7278343b0bd7
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Wed Apr 12 00:31:16 2017 +0000

    drm/etnaviv: fix missing unlock on error in etnaviv_gpu_submit()
    
    commit 45abdf35cf82e4270328c7237e7812de960ac560 upstream.
    
    Add the missing unlock before return from function etnaviv_gpu_submit()
    in the error handling case.
    
    lst: fixed label name.
    
    Fixes: f3cd1b064f11 ("drm/etnaviv: (re-)protect fence allocation with GPU mutex")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3287a46c7829c7c949862bc926cb8dda6756d6a1
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Thu Apr 6 10:35:26 2017 +1000

    drm/nouveau: initial support (display-only) for GP107
    
    commit da2ba564a6dcf46df4f828624ff55531ff11d5b0 upstream.
    
    Forked from GP106 implementation.
    
    Split out from commit enabling secboot/gr support so that it can be
    added to earlier kernels.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2efa4bd3b644f115befbd225f45fce936e19cf2c
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Apr 5 18:16:14 2017 +1000

    drm/nouveau/kms/nv50: fix double dma_fence_put() when destroying plane state
    
    commit 2907e8670b6ef253bffb33bf47fd2182969cf2a0 upstream.
    
    When the atomic support was added to nouveau, the DRM core did not do this.
    
    However, later in the same merge window, a commit (drm/fence: add in-fences
    support) was merged that added it, leading to use-after-frees of the fence
    object.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b6b2448efe6467d4bc8dabb357db120f873ed303
Author: Ben Skeggs <bskeggs@redhat.com>
Date:   Wed Apr 5 09:12:54 2017 +1000

    drm/nouveau/kms/nv50: fix setting of HeadSetRasterVertBlankDmi method
    
    commit d639fbcc102745187f747a21bdcffcf628e174c8 upstream.
    
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 8418bb809e559787b2eb6bba7fb3ab728db4b611
Author: Ilia Mirkin <imirkin@alum.mit.edu>
Date:   Sat Mar 18 16:23:10 2017 -0400

    drm/nouveau/mmu/nv4a: use nv04 mmu rather than the nv44 one
    
    commit f94773b9f5ecd1df7c88c2e921924dd41d2020cc upstream.
    
    The NV4A (aka NV44A) is an oddity in the family. It only comes in AGP
    and PCI varieties, rather than a core PCIE chip with a bridge for
    AGP/PCI as necessary. As a result, it appears that the MMU is also
    non-functional. For AGP cards, the vast majority of the NV4A lineup,
    this worked out since we force AGP cards to use the nv04 mmu. However
    for PCI variants, this did not work.
    
    Switching to the NV04 MMU makes it work like a charm. Thanks to mwk for
    the suggestion. This should be a no-op for NV4A AGP boards, as they were
    using it already.
    
    Bugzilla: https://bugs.freedesktop.org/show_bug.cgi?id=70388
    Signed-off-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit cc3c096855c6dfaf495ccbef65337379e1e8e53f
Author: Ilia Mirkin <imirkin@alum.mit.edu>
Date:   Sat Mar 18 21:53:05 2017 -0400

    drm/nouveau/mpeg: mthd returns true on success now
    
    commit 83bce9c2baa51e439480a713119a73d3c8b61083 upstream.
    
    Signed-off-by: Ilia Mirkin <imirkin@alum.mit.edu>
    Fixes: 590801c1a3 ("drm/nouveau/mpeg: remove dependence on namedb/engctx lookup")
    Signed-off-by: Ben Skeggs <bskeggs@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5de87d225e0864e618326cbc313a856b5a55f1c8
Author: Martin Brandenburg <martin@omnibond.com>
Date:   Fri Apr 14 14:22:41 2017 -0400

    orangefs: free superblock when mount fails
    
    commit 1ec1688c5360e14dde4094d6acbf7516bf6db37e upstream.
    
    Otherwise lockdep says:
    
    [ 1337.483798] ================================================
    [ 1337.483999] [ BUG: lock held when returning to user space! ]
    [ 1337.484252] 4.11.0-rc6 #19 Not tainted
    [ 1337.484423] ------------------------------------------------
    [ 1337.484626] mount/14766 is leaving the kernel with locks still held!
    [ 1337.484841] 1 lock held by mount/14766:
    [ 1337.485017]  #0:  (&type->s_umount_key#33/1){+.+.+.}, at: [<ffffffff8124171f>] sget_userns+0x2af/0x520
    
    Caught by xfstests generic/413 which tried to mount with the unsupported
    mount option dax.  Then xfstests generic/422 ran sync which deadlocks.
    
    Signed-off-by: Martin Brandenburg <martin@omnibond.com>
    Acked-by: Mike Marshall <hubcap@omnibond.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5f8cde206712fd30be57134b7efd8e7beb6fd542
Author: Minchan Kim <minchan@kernel.org>
Date:   Thu Apr 13 14:56:40 2017 -0700

    zsmalloc: expand class bit
    
    commit 85d492f28d056c40629fc25d79f54da618a29dc4 upstream.
    
    Now 64K page system, zsamlloc has 257 classes so 8 class bit is not
    enough.  With that, it corrupts the system when zsmalloc stores
    65536byte data(ie, index number 256) so that this patch increases class
    bit for simple fix for stable backport.  We should clean up this mess
    soon.
    
      index size
      0     32
      1     288
      ..
      ..
      204   52256
      256   65536
    
    Fixes: 3783689a1 ("zsmalloc: introduce zspage structure")
    Link: http://lkml.kernel.org/r/1492042622-12074-3-git-send-email-minchan@kernel.org
    Signed-off-by: Minchan Kim <minchan@kernel.org>
    Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5c7de46108253e925a1f1d49e6e4658e8e8e3bb4
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Apr 13 14:56:28 2017 -0700

    thp: fix MADV_DONTNEED vs clear soft dirty race
    
    commit 5b7abeae3af8c08c577e599dd0578b9e3ee6687b upstream.
    
    Yet another instance of the same race.
    
    Fix is identical to change_huge_pmd().
    
    See "thp: fix MADV_DONTNEED vs.  numa balancing race" for more details.
    
    Link: http://lkml.kernel.org/r/20170302151034.27829-5-kirill.shutemov@linux.intel.com
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Hillf Danton <hillf.zj@alibaba-inc.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7847a2203a139af8ac7372a1dfd5d462de47657
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Thu Apr 13 14:56:26 2017 -0700

    thp: fix MADV_DONTNEED vs. MADV_FREE race
    
    commit 58ceeb6bec86d9140f9d91d71a710e963523d063 upstream.
    
    Both MADV_DONTNEED and MADV_FREE handled with down_read(mmap_sem).
    
    It's critical to not clear pmd intermittently while handling MADV_FREE
    to avoid race with MADV_DONTNEED:
    
            CPU0:                           CPU1:
                                    madvise_free_huge_pmd()
                                     pmdp_huge_get_and_clear_full()
    madvise_dontneed()
     zap_pmd_range()
      pmd_trans_huge(*pmd) == 0 (without ptl)
      // skip the pmd
                                     set_pmd_at();
                                     // pmd is re-established
    
    It results in MADV_DONTNEED skipping the pmd, leaving it not cleared.
    It violates MADV_DONTNEED interface and can result is userspace
    misbehaviour.
    
    Basically it's the same race as with numa balancing in
    change_huge_pmd(), but a bit simpler to mitigate: we don't need to
    preserve dirty/young flags here due to MADV_FREE functionality.
    
    [kirill.shutemov@linux.intel.com: Urgh... Power is special again]
      Link: http://lkml.kernel.org/r/20170303102636.bhd2zhtpds4mt62a@black.fi.intel.com
    Link: http://lkml.kernel.org/r/20170302151034.27829-4-kirill.shutemov@linux.intel.com
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Cc: Minchan Kim <minchan@kernel.org>
    Cc: Andrea Arcangeli <aarcange@redhat.com>
    Cc: Hillf Danton <hillf.zj@alibaba-inc.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2083153996d6fab0ce78d1e947826af88603951
Author: Xiubo Li <lixiubo@cmss.chinamobile.com>
Date:   Fri Mar 31 10:35:25 2017 +0800

    tcmu: Skip Data-Out blocks before gathering Data-In buffer for BIDI case
    
    commit a5d68ba85801a78c892a0eb8efb711e293ed314b upstream.
    
    For the bidirectional case, the Data-Out buffer blocks will always at
    the head of the tcmu_cmd's bitmap, and before gathering the Data-In
    buffer, first of all it should skip the Data-Out ones, or the device
    supporting BIDI commands won't work.
    
    Fixed: 26418649eead ("target/user: Introduce data_bitmap, replace
                    data_length/data_head/data_tail")
    Reported-by: Ilias Tsitsimpis <iliastsi@arrikto.com>
    Tested-by: Ilias Tsitsimpis <iliastsi@arrikto.com>
    Signed-off-by: Xiubo Li <lixiubo@cmss.chinamobile.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit acbb93eb7447742789a41b41042479ff8bc71598
Author: Xiubo Li <lixiubo@cmss.chinamobile.com>
Date:   Mon Mar 27 17:07:41 2017 +0800

    tcmu: Fix wrongly calculating of the base_command_size
    
    commit abe342a5b4b5aa579f6bf40ba73447c699e6b579 upstream.
    
    The t_data_nents and t_bidi_data_nents are the numbers of the
    segments, but it couldn't be sure the block size equals to size
    of the segment.
    
    For the worst case, all the blocks are discontiguous and there
    will need the same number of iovecs, that's to say: blocks == iovs.
    So here just set the number of iovs to block count needed by tcmu
    cmd.
    
    Tested-by: Ilias Tsitsimpis <iliastsi@arrikto.com>
    Reviewed-by: Mike Christie <mchristi@redhat.com>
    Signed-off-by: Xiubo Li <lixiubo@cmss.chinamobile.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1486f834e887928bcdf69f54a8262246c92d8b1f
Author: Xiubo Li <lixiubo@cmss.chinamobile.com>
Date:   Mon Mar 27 17:07:40 2017 +0800

    tcmu: Fix possible overwrite of t_data_sg's last iov[]
    
    commit ab22d2604c86ceb01bb2725c9860b88a7dd383bb upstream.
    
    If there has BIDI data, its first iov[] will overwrite the last
    iov[] for se_cmd->t_data_sg.
    
    To fix this, we can just increase the iov pointer, but this may
    introuduce a new memory leakage bug: If the se_cmd->data_length
    and se_cmd->t_bidi_data_sg->length are all not aligned up to the
    DATA_BLOCK_SIZE, the actual length needed maybe larger than just
    sum of them.
    
    So, this could be avoided by rounding all the data lengthes up
    to DATA_BLOCK_SIZE.
    
    Reviewed-by: Mike Christie <mchristi@redhat.com>
    Tested-by: Ilias Tsitsimpis <iliastsi@arrikto.com>
    Reviewed-by: Bryant G. Ly <bryantly@linux.vnet.ibm.com>
    Signed-off-by: Xiubo Li <lixiubo@cmss.chinamobile.com>
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e8339b9ddfe66d267051a64327b244eec3dceed9
Author: Paul Moore <paul@paul-moore.com>
Date:   Mon Apr 10 11:16:59 2017 -0400

    audit: make sure we don't let the retry queue grow without bounds
    
    commit 264d509637d95f9404e52ced5003ad352e0f6a26 upstream.
    
    The retry queue is intended to provide a temporary buffer in the case
    of transient errors when communicating with auditd, it is not meant
    as a long life queue, that functionality is provided by the hold
    queue.
    
    This patch fixes a problem identified by Seth where the retry queue
    could grow uncontrollably if an auditd instance did not connect to
    the kernel to drain the queues.  This commit fixes this by doing the
    following:
    
    * Make sure we always call auditd_reset() if we decide the connection
    with audit is really dead.  There were some cases in
    kauditd_hold_skb() where we did not reset the connection, this patch
    relocates the reset calls to kauditd_thread() so all the error
    conditions are caught and the connection reset.  As a side effect,
    this means we could move auditd_reset() and get rid of the forward
    definition at the top of kernel/audit.c.
    
    * We never checked the status of the auditd connection when
    processing the main audit queue which meant that the retry queue
    could grow unchecked.  This patch adds a call to auditd_reset()
    after the main queue has been processed if auditd is not connected,
    the auditd_reset() call will make sure the retry and hold queues are
    correctly managed/flushed so that the retry queue remains reasonable.
    
    Reported-by: Seth Forshee <seth.forshee@canonical.com>
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 668e2d8924998104f83560073643379bc4b7eccf
Author: Tejun Heo <tj@kernel.org>
Date:   Thu Mar 16 16:54:24 2017 -0400

    cgroup, kthread: close race window where new kthreads can be migrated to non-root cgroups
    
    commit 77f88796cee819b9c4562b0b6b44691b3b7755b1 upstream.
    
    Creation of a kthread goes through a couple interlocked stages between
    the kthread itself and its creator.  Once the new kthread starts
    running, it initializes itself and wakes up the creator.  The creator
    then can further configure the kthread and then let it start doing its
    job by waking it up.
    
    In this configuration-by-creator stage, the creator is the only one
    that can wake it up but the kthread is visible to userland.  When
    altering the kthread's attributes from userland is allowed, this is
    fine; however, for cases where CPU affinity is critical,
    kthread_bind() is used to first disable affinity changes from userland
    and then set the affinity.  This also prevents the kthread from being
    migrated into non-root cgroups as that can affect the CPU affinity and
    many other things.
    
    Unfortunately, the cgroup side of protection is racy.  While the
    PF_NO_SETAFFINITY flag prevents further migrations, userland can win
    the race before the creator sets the flag with kthread_bind() and put
    the kthread in a non-root cgroup, which can lead to all sorts of
    problems including incorrect CPU affinity and starvation.
    
    This bug got triggered by userland which periodically tries to migrate
    all processes in the root cpuset cgroup to a non-root one.  Per-cpu
    workqueue workers got caught while being created and ended up with
    incorrected CPU affinity breaking concurrency management and sometimes
    stalling workqueue execution.
    
    This patch adds task->no_cgroup_migration which disallows the task to
    be migrated by userland.  kthreadd starts with the flag set making
    every child kthread start in the root cgroup with migration
    disallowed.  The flag is cleared after the kthread finishes
    initialization by which time PF_NO_SETAFFINITY is set if the kthread
    should stay in the root cgroup.
    
    It'd be better to wait for the initialization instead of failing but I
    couldn't think of a way of implementing that without adding either a
    new PF flag, or sleeping and retrying from waiting side.  Even if
    userland depends on changing cgroup membership of a kthread, it either
    has to be synchronized with kthread_create() or periodically repeat,
    so it's unlikely that this would break anything.
    
    v2: Switch to a simpler implementation using a new task_struct bit
        field suggested by Oleg.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Suggested-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Reported-and-debugged-by: Chris Mason <clm@fb.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
